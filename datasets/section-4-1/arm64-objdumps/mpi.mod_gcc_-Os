
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//mpi.mod_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_gcry_mpi_m_check>:
       0:	stp	x29, x30, [sp, #-32]!
       4:	mov	x29, sp
       8:	str	x19, [sp, #16]
       c:	mov	x19, x0
      10:	bl	5e50 <_gcry_check_heap>
      14:	ldr	x0, [x19, #16]
      18:	ldr	x19, [sp, #16]
      1c:	ldp	x29, x30, [sp], #32
      20:	b	5e50 <_gcry_check_heap>

0000000000000024 <_gcry_mpi_alloc_limb_space>:
      24:	stp	x29, x30, [sp, #-32]!
      28:	mov	x2, #0x8                   	// #8
      2c:	mov	x29, sp
      30:	str	x19, [sp, #16]
      34:	mov	w19, w0
      38:	cmp	w19, #0x0
      3c:	ubfiz	x0, x19, #3, #32
      40:	csel	x0, x0, x2, ne  // ne = any
      44:	cbz	w1, 60 <_gcry_mpi_alloc_limb_space+0x3c>
      48:	bl	5e20 <gcry_xmalloc_secure>
      4c:	cbnz	w19, 54 <_gcry_mpi_alloc_limb_space+0x30>
      50:	str	xzr, [x0]
      54:	ldr	x19, [sp, #16]
      58:	ldp	x29, x30, [sp], #32
      5c:	ret
      60:	bl	5df4 <gcry_xmalloc>
      64:	b	4c <_gcry_mpi_alloc_limb_space+0x28>

0000000000000068 <_gcry_mpi_alloc>:
      68:	stp	x29, x30, [sp, #-32]!
      6c:	mov	x29, sp
      70:	stp	x19, x20, [sp, #16]
      74:	mov	w20, w0
      78:	mov	x0, #0x18                  	// #24
      7c:	bl	5df4 <gcry_xmalloc>
      80:	mov	x19, x0
      84:	cbz	w20, ac <_gcry_mpi_alloc+0x44>
      88:	mov	w0, w20
      8c:	mov	w1, #0x0                   	// #0
      90:	bl	24 <_gcry_mpi_alloc_limb_space>
      94:	stp	w20, wzr, [x19]
      98:	stp	xzr, x0, [x19, #8]
      9c:	mov	x0, x19
      a0:	ldp	x19, x20, [sp, #16]
      a4:	ldp	x29, x30, [sp], #32
      a8:	ret
      ac:	mov	x0, #0x0                   	// #0
      b0:	b	94 <_gcry_mpi_alloc+0x2c>

00000000000000b4 <_gcry_mpi_alloc_secure>:
      b4:	stp	x29, x30, [sp, #-32]!
      b8:	mov	x29, sp
      bc:	stp	x19, x20, [sp, #16]
      c0:	mov	w20, w0
      c4:	mov	x0, #0x18                  	// #24
      c8:	bl	5df4 <gcry_xmalloc>
      cc:	mov	x19, x0
      d0:	cbz	w20, 100 <_gcry_mpi_alloc_secure+0x4c>
      d4:	mov	w0, w20
      d8:	mov	w1, #0x1                   	// #1
      dc:	bl	24 <_gcry_mpi_alloc_limb_space>
      e0:	str	x0, [x19, #16]
      e4:	mov	x0, #0x100000000           	// #4294967296
      e8:	stp	w20, wzr, [x19]
      ec:	str	x0, [x19, #8]
      f0:	mov	x0, x19
      f4:	ldp	x19, x20, [sp, #16]
      f8:	ldp	x29, x30, [sp], #32
      fc:	ret
     100:	mov	x0, #0x0                   	// #0
     104:	b	e0 <_gcry_mpi_alloc_secure+0x2c>

0000000000000108 <_gcry_mpi_free_limb_space>:
     108:	cbz	x0, 12c <_gcry_mpi_free_limb_space+0x24>
     10c:	ubfiz	x1, x1, #3, #32
     110:	cbz	x1, 128 <_gcry_mpi_free_limb_space+0x20>
     114:	add	x1, x0, x1
     118:	mov	x2, x0
     11c:	strb	wzr, [x2], #1
     120:	cmp	x1, x2
     124:	b.ne	11c <_gcry_mpi_free_limb_space+0x14>  // b.any
     128:	b	5db0 <gcry_free>
     12c:	ret

0000000000000130 <_gcry_mpi_assign_limb_space>:
     130:	stp	x29, x30, [sp, #-48]!
     134:	mov	x29, sp
     138:	stp	x19, x20, [sp, #16]
     13c:	mov	x19, x0
     140:	mov	w20, w2
     144:	ldr	x0, [x0, #16]
     148:	str	x21, [sp, #32]
     14c:	mov	x21, x1
     150:	ldr	w1, [x19]
     154:	bl	108 <_gcry_mpi_free_limb_space>
     158:	str	w20, [x19]
     15c:	str	x21, [x19, #16]
     160:	ldp	x19, x20, [sp, #16]
     164:	ldr	x21, [sp, #32]
     168:	ldp	x29, x30, [sp], #48
     16c:	ret

0000000000000170 <_gcry_mpi_resize>:
     170:	stp	x29, x30, [sp, #-48]!
     174:	mov	x29, sp
     178:	stp	x19, x20, [sp, #16]
     17c:	mov	w20, w1
     180:	ldr	w1, [x0]
     184:	str	x21, [sp, #32]
     188:	mov	x19, x0
     18c:	cmp	w1, w20
     190:	b.cc	1c4 <_gcry_mpi_resize+0x54>  // b.lo, b.ul, b.last
     194:	ldrsw	x0, [x0, #4]
     198:	sxtw	x1, w1
     19c:	cmp	x1, x0
     1a0:	b.hi	1b4 <_gcry_mpi_resize+0x44>  // b.pmore
     1a4:	ldp	x19, x20, [sp, #16]
     1a8:	ldr	x21, [sp, #32]
     1ac:	ldp	x29, x30, [sp], #48
     1b0:	ret
     1b4:	ldr	x2, [x19, #16]
     1b8:	str	xzr, [x2, x0, lsl #3]
     1bc:	add	x0, x0, #0x1
     1c0:	b	19c <_gcry_mpi_resize+0x2c>
     1c4:	ldr	x0, [x0, #16]
     1c8:	mov	w21, w20
     1cc:	cbz	x0, 1fc <_gcry_mpi_resize+0x8c>
     1d0:	lsl	x1, x21, #3
     1d4:	bl	5e24 <gcry_xrealloc>
     1d8:	ldrsw	x1, [x19]
     1dc:	str	x0, [x19, #16]
     1e0:	cmp	x1, x21
     1e4:	b.cc	1f0 <_gcry_mpi_resize+0x80>  // b.lo, b.ul, b.last
     1e8:	str	w20, [x19]
     1ec:	b	1a4 <_gcry_mpi_resize+0x34>
     1f0:	str	xzr, [x0, x1, lsl #3]
     1f4:	add	x1, x1, #0x1
     1f8:	b	1e0 <_gcry_mpi_resize+0x70>
     1fc:	ldr	w0, [x19, #12]
     200:	mov	x1, #0x8                   	// #8
     204:	tbz	w0, #0, 218 <_gcry_mpi_resize+0xa8>
     208:	mov	x0, x21
     20c:	bl	5df0 <gcry_xcalloc_secure>
     210:	str	x0, [x19, #16]
     214:	b	1e8 <_gcry_mpi_resize+0x78>
     218:	mov	x0, x21
     21c:	bl	5dbc <gcry_xcalloc>
     220:	b	210 <_gcry_mpi_resize+0xa0>

0000000000000224 <_gcry_mpi_clear>:
     224:	str	wzr, [x0, #4]
     228:	str	wzr, [x0, #12]
     22c:	ret

0000000000000230 <_gcry_mpi_free>:
     230:	cbz	x0, 288 <_gcry_mpi_free+0x58>
     234:	stp	x29, x30, [sp, #-32]!
     238:	mov	x29, sp
     23c:	ldr	w1, [x0, #12]
     240:	str	x19, [sp, #16]
     244:	mov	x19, x0
     248:	ldr	x0, [x0, #16]
     24c:	tbz	w1, #2, 26c <_gcry_mpi_free+0x3c>
     250:	bl	5db0 <gcry_free>
     254:	ldr	w0, [x19, #12]
     258:	tst	w0, #0xfffffff8
     25c:	b.eq	278 <_gcry_mpi_free+0x48>  // b.none
     260:	adrp	x0, 0 <_gcry_mpi_m_check>
     264:	ldr	x0, [x0]
     268:	bl	5f28 <_gcry_log_bug>
     26c:	ldr	w1, [x19]
     270:	bl	108 <_gcry_mpi_free_limb_space>
     274:	b	254 <_gcry_mpi_free+0x24>
     278:	mov	x0, x19
     27c:	ldr	x19, [sp, #16]
     280:	ldp	x29, x30, [sp], #32
     284:	b	5db0 <gcry_free>
     288:	ret
     28c:	nop
	...

0000000000000298 <gcry_mpi_set_opaque>:
     298:	stp	x29, x30, [sp, #-48]!
     29c:	mov	x29, sp
     2a0:	stp	x19, x20, [sp, #16]
     2a4:	mov	w20, w2
     2a8:	str	x21, [sp, #32]
     2ac:	mov	x21, x1
     2b0:	cbnz	x0, 2bc <gcry_mpi_set_opaque+0x24>
     2b4:	mov	w0, #0x0                   	// #0
     2b8:	bl	68 <_gcry_mpi_alloc>
     2bc:	ldr	w1, [x0, #12]
     2c0:	mov	x19, x0
     2c4:	ldr	x0, [x0, #16]
     2c8:	tbz	w1, #2, 2f4 <gcry_mpi_set_opaque+0x5c>
     2cc:	bl	5db0 <gcry_free>
     2d0:	mov	w0, #0x4                   	// #4
     2d4:	str	xzr, [x19]
     2d8:	stp	w20, w0, [x19, #8]
     2dc:	mov	x0, x19
     2e0:	str	x21, [x19, #16]
     2e4:	ldp	x19, x20, [sp, #16]
     2e8:	ldr	x21, [sp, #32]
     2ec:	ldp	x29, x30, [sp], #48
     2f0:	ret
     2f4:	ldr	w1, [x19]
     2f8:	bl	108 <_gcry_mpi_free_limb_space>
     2fc:	b	2d0 <gcry_mpi_set_opaque+0x38>

0000000000000300 <gcry_mpi_get_opaque>:
     300:	ldr	w2, [x0, #12]
     304:	tbnz	w2, #2, 31c <gcry_mpi_get_opaque+0x1c>
     308:	stp	x29, x30, [sp, #-16]!
     30c:	adrp	x0, 0 <_gcry_mpi_m_check>
     310:	mov	x29, sp
     314:	ldr	x0, [x0]
     318:	bl	5f28 <_gcry_log_bug>
     31c:	cbz	x1, 328 <gcry_mpi_get_opaque+0x28>
     320:	ldr	w2, [x0, #8]
     324:	str	w2, [x1]
     328:	ldr	x0, [x0, #16]
     32c:	ret
	...

0000000000000338 <_gcry_mpi_copy>:
     338:	cbz	x0, 418 <_gcry_mpi_copy+0xe0>
     33c:	stp	x29, x30, [sp, #-32]!
     340:	mov	x29, sp
     344:	ldr	w1, [x0, #12]
     348:	stp	x19, x20, [sp, #16]
     34c:	mov	x19, x0
     350:	tbz	w1, #2, 3c0 <_gcry_mpi_copy+0x88>
     354:	ldr	x0, [x0, #16]
     358:	bl	5db4 <gcry_is_secure>
     35c:	mov	w2, w0
     360:	ldr	w1, [x19, #8]
     364:	mov	w0, #0x8                   	// #8
     368:	add	w1, w1, #0x7
     36c:	sdiv	w1, w1, w0
     370:	sxtw	x0, w1
     374:	cbz	w2, 3b8 <_gcry_mpi_copy+0x80>
     378:	bl	5e20 <gcry_xmalloc_secure>
     37c:	ldr	w2, [x19, #8]
     380:	mov	x20, x0
     384:	mov	w0, #0x8                   	// #8
     388:	add	w2, w2, #0x7
     38c:	ldr	x1, [x19, #16]
     390:	sdiv	w2, w2, w0
     394:	mov	x0, x20
     398:	sxtw	x2, w2
     39c:	bl	0 <grub_memmove>
     3a0:	ldr	w2, [x19, #8]
     3a4:	mov	x1, x20
     3a8:	ldp	x19, x20, [sp, #16]
     3ac:	mov	x0, #0x0                   	// #0
     3b0:	ldp	x29, x30, [sp], #32
     3b4:	b	298 <gcry_mpi_set_opaque>
     3b8:	bl	5df4 <gcry_xmalloc>
     3bc:	b	37c <_gcry_mpi_copy+0x44>
     3c0:	ldr	w0, [x0, #4]
     3c4:	tbz	w1, #0, 3f4 <_gcry_mpi_copy+0xbc>
     3c8:	bl	b4 <_gcry_mpi_alloc_secure>
     3cc:	ldp	w2, w1, [x19, #4]
     3d0:	stp	w2, w1, [x0, #4]
     3d4:	ldr	w1, [x19, #12]
     3d8:	str	w1, [x0, #12]
     3dc:	mov	x1, #0x0                   	// #0
     3e0:	cmp	w2, w1
     3e4:	b.gt	3fc <_gcry_mpi_copy+0xc4>
     3e8:	ldp	x19, x20, [sp, #16]
     3ec:	ldp	x29, x30, [sp], #32
     3f0:	ret
     3f4:	bl	68 <_gcry_mpi_alloc>
     3f8:	b	3cc <_gcry_mpi_copy+0x94>
     3fc:	ldr	x4, [x19, #16]
     400:	lsl	x3, x1, #3
     404:	add	x1, x1, #0x1
     408:	ldr	x5, [x4, x3]
     40c:	ldr	x4, [x0, #16]
     410:	str	x5, [x4, x3]
     414:	b	3e0 <_gcry_mpi_copy+0xa8>
     418:	mov	x0, #0x0                   	// #0
     41c:	ret

0000000000000420 <_gcry_mpi_alloc_like>:
     420:	stp	x29, x30, [sp, #-48]!
     424:	mov	x29, sp
     428:	stp	x19, x20, [sp, #16]
     42c:	mov	x19, x0
     430:	str	x21, [sp, #32]
     434:	cbz	x0, 4bc <_gcry_mpi_alloc_like+0x9c>
     438:	ldr	w1, [x0, #12]
     43c:	tbz	w1, #2, 4a0 <_gcry_mpi_alloc_like+0x80>
     440:	ldr	x0, [x0, #16]
     444:	bl	5db4 <gcry_is_secure>
     448:	ldr	w20, [x19, #8]
     44c:	mov	w2, #0x8                   	// #8
     450:	add	w20, w20, #0x7
     454:	sdiv	w20, w20, w2
     458:	sxtw	x20, w20
     45c:	cbz	w0, 494 <_gcry_mpi_alloc_like+0x74>
     460:	mov	x0, x20
     464:	bl	5dac <gcry_malloc_secure>
     468:	ldr	x1, [x19, #16]
     46c:	mov	x21, x0
     470:	mov	x2, x20
     474:	bl	0 <grub_memmove>
     478:	ldr	w2, [x19, #8]
     47c:	mov	x1, x21
     480:	ldp	x19, x20, [sp, #16]
     484:	mov	x0, #0x0                   	// #0
     488:	ldr	x21, [sp, #32]
     48c:	ldp	x29, x30, [sp], #48
     490:	b	298 <gcry_mpi_set_opaque>
     494:	mov	x0, x20
     498:	bl	5da8 <gcry_malloc>
     49c:	b	468 <_gcry_mpi_alloc_like+0x48>
     4a0:	ldr	w0, [x0, #4]
     4a4:	tbz	w1, #0, 4d0 <_gcry_mpi_alloc_like+0xb0>
     4a8:	bl	b4 <_gcry_mpi_alloc_secure>
     4ac:	stur	xzr, [x0, #4]
     4b0:	ldr	w1, [x19, #12]
     4b4:	mov	x19, x0
     4b8:	str	w1, [x0, #12]
     4bc:	mov	x0, x19
     4c0:	ldp	x19, x20, [sp, #16]
     4c4:	ldr	x21, [sp, #32]
     4c8:	ldp	x29, x30, [sp], #48
     4cc:	ret
     4d0:	bl	68 <_gcry_mpi_alloc>
     4d4:	b	4ac <_gcry_mpi_alloc_like+0x8c>

00000000000004d8 <gcry_mpi_set>:
     4d8:	stp	x29, x30, [sp, #-48]!
     4dc:	mov	x29, sp
     4e0:	stp	x19, x20, [sp, #16]
     4e4:	mov	x20, x1
     4e8:	stp	x21, x22, [sp, #32]
     4ec:	ldr	w21, [x1, #4]
     4f0:	ldur	x22, [x1, #4]
     4f4:	cbnz	x0, 500 <gcry_mpi_set+0x28>
     4f8:	mov	w0, w21
     4fc:	bl	68 <_gcry_mpi_alloc>
     500:	mov	x19, x0
     504:	ldr	w0, [x0]
     508:	cmp	w0, w21
     50c:	b.ge	51c <gcry_mpi_set+0x44>  // b.tcont
     510:	mov	w1, w21
     514:	mov	x0, x19
     518:	bl	170 <_gcry_mpi_resize>
     51c:	ldr	x1, [x19, #16]
     520:	mov	x0, #0x0                   	// #0
     524:	ldr	x2, [x20, #16]
     528:	cmp	w21, w0
     52c:	b.gt	550 <gcry_mpi_set+0x78>
     530:	ldr	w0, [x20, #12]
     534:	stur	x22, [x19, #4]
     538:	str	w0, [x19, #12]
     53c:	mov	x0, x19
     540:	ldp	x19, x20, [sp, #16]
     544:	ldp	x21, x22, [sp, #32]
     548:	ldp	x29, x30, [sp], #48
     54c:	ret
     550:	ldr	x3, [x2, x0, lsl #3]
     554:	str	x3, [x1, x0, lsl #3]
     558:	add	x0, x0, #0x1
     55c:	b	528 <gcry_mpi_set+0x50>

0000000000000560 <gcry_mpi_set_ui>:
     560:	stp	x29, x30, [sp, #-32]!
     564:	mov	x29, sp
     568:	stp	x19, x20, [sp, #16]
     56c:	mov	x20, x1
     570:	cbnz	x0, 57c <gcry_mpi_set_ui+0x1c>
     574:	mov	w0, #0x1                   	// #1
     578:	bl	68 <_gcry_mpi_alloc>
     57c:	mov	x19, x0
     580:	ldr	w0, [x0]
     584:	cmp	w0, #0x0
     588:	b.gt	598 <gcry_mpi_set_ui+0x38>
     58c:	mov	x0, x19
     590:	mov	w1, #0x1                   	// #1
     594:	bl	170 <_gcry_mpi_resize>
     598:	ldr	x0, [x19, #16]
     59c:	cmp	x20, #0x0
     5a0:	str	x20, [x0]
     5a4:	cset	w0, ne  // ne = any
     5a8:	str	w0, [x19, #4]
     5ac:	mov	x0, x19
     5b0:	str	xzr, [x19, #8]
     5b4:	ldp	x19, x20, [sp, #16]
     5b8:	ldp	x29, x30, [sp], #32
     5bc:	ret

00000000000005c0 <_gcry_mpi_get_ui>:
     5c0:	ldr	w2, [x0, #4]
     5c4:	cmp	w2, #0x1
     5c8:	b.gt	5ec <_gcry_mpi_get_ui+0x2c>
     5cc:	b.ne	5e4 <_gcry_mpi_get_ui+0x24>  // b.any
     5d0:	ldr	x0, [x0, #16]
     5d4:	ldr	x0, [x0]
     5d8:	str	x0, [x1]
     5dc:	mov	w0, #0x0                   	// #0
     5e0:	ret
     5e4:	mov	x0, #0x0                   	// #0
     5e8:	b	5d8 <_gcry_mpi_get_ui+0x18>
     5ec:	mov	w0, #0x23                  	// #35
     5f0:	b	5e0 <_gcry_mpi_get_ui+0x20>

00000000000005f4 <gcry_mpi_get_ui>:
     5f4:	b	5c0 <_gcry_mpi_get_ui>

00000000000005f8 <_gcry_mpi_alloc_set_ui>:
     5f8:	stp	x29, x30, [sp, #-32]!
     5fc:	mov	x29, sp
     600:	str	x19, [sp, #16]
     604:	mov	x19, x0
     608:	mov	w0, #0x1                   	// #1
     60c:	bl	68 <_gcry_mpi_alloc>
     610:	ldr	x2, [x0, #16]
     614:	cmp	x19, #0x0
     618:	str	x19, [x2]
     61c:	cset	w2, ne  // ne = any
     620:	ldr	x19, [sp, #16]
     624:	stp	w2, wzr, [x0, #4]
     628:	ldp	x29, x30, [sp], #32
     62c:	ret

0000000000000630 <gcry_mpi_swap>:
     630:	ldp	x6, x7, [x1]
     634:	sub	sp, sp, #0x20
     638:	ldp	x4, x5, [x0]
     63c:	stp	x6, x7, [x0]
     640:	ldr	x3, [x1, #16]
     644:	ldr	x2, [x0, #16]
     648:	str	x3, [x0, #16]
     64c:	stp	x4, x5, [x1]
     650:	str	x2, [x1, #16]
     654:	add	sp, sp, #0x20
     658:	ret

000000000000065c <gcry_mpi_new>:
     65c:	add	w0, w0, #0x3f
     660:	lsr	w0, w0, #6
     664:	b	68 <_gcry_mpi_alloc>

0000000000000668 <gcry_mpi_snew>:
     668:	add	w0, w0, #0x3f
     66c:	lsr	w0, w0, #6
     670:	b	b4 <_gcry_mpi_alloc_secure>

0000000000000674 <gcry_mpi_release>:
     674:	b	230 <_gcry_mpi_free>

0000000000000678 <gcry_mpi_set_flag>:
     678:	stp	x29, x30, [sp, #-32]!
     67c:	cmp	w1, #0x1
     680:	mov	x29, sp
     684:	stp	x19, x20, [sp, #16]
     688:	b.ne	70c <gcry_mpi_set_flag+0x94>  // b.any
     68c:	mov	x19, x0
     690:	ldr	w0, [x0, #12]
     694:	tbnz	w0, #0, 718 <gcry_mpi_set_flag+0xa0>
     698:	orr	w0, w0, #0x1
     69c:	str	w0, [x19, #12]
     6a0:	ldr	w0, [x19, #4]
     6a4:	ldr	x20, [x19, #16]
     6a8:	cbnz	w0, 6d0 <gcry_mpi_set_flag+0x58>
     6ac:	cbz	x20, 718 <gcry_mpi_set_flag+0xa0>
     6b0:	adrp	x0, 0 <_gcry_mpi_m_check>
     6b4:	mov	w2, #0xc1                  	// #193
     6b8:	ldr	x3, [x0]
     6bc:	adrp	x0, 0 <_gcry_mpi_m_check>
     6c0:	ldr	x1, [x0]
     6c4:	adrp	x0, 0 <_gcry_mpi_m_check>
     6c8:	ldr	x0, [x0]
     6cc:	bl	0 <_gcry_assert_failed>
     6d0:	bl	24 <_gcry_mpi_alloc_limb_space>
     6d4:	ldr	w2, [x19, #4]
     6d8:	mov	x1, #0x0                   	// #0
     6dc:	cmp	w2, w1
     6e0:	b.gt	6fc <gcry_mpi_set_flag+0x84>
     6e4:	str	x0, [x19, #16]
     6e8:	mov	x0, x20
     6ec:	ldr	w1, [x19]
     6f0:	ldp	x19, x20, [sp, #16]
     6f4:	ldp	x29, x30, [sp], #32
     6f8:	b	108 <_gcry_mpi_free_limb_space>
     6fc:	ldr	x3, [x20, x1, lsl #3]
     700:	str	x3, [x0, x1, lsl #3]
     704:	add	x1, x1, #0x1
     708:	b	6dc <gcry_mpi_set_flag+0x64>
     70c:	adrp	x0, 0 <_gcry_mpi_m_check>
     710:	ldr	x0, [x0]
     714:	bl	5f28 <_gcry_log_bug>
     718:	ldp	x19, x20, [sp, #16]
     71c:	ldp	x29, x30, [sp], #32
     720:	ret
     724:	nop
	...

0000000000000748 <gcry_mpi_clear_flag>:
     748:	stp	x29, x30, [sp, #-16]!
     74c:	adrp	x0, 0 <_gcry_mpi_m_check>
     750:	mov	x29, sp
     754:	ldr	x0, [x0]
     758:	bl	5f28 <_gcry_log_bug>
     75c:	nop
	...

0000000000000768 <gcry_mpi_get_flag>:
     768:	cmp	w1, #0x1
     76c:	b.eq	78c <gcry_mpi_get_flag+0x24>  // b.none
     770:	cmp	w1, #0x2
     774:	b.eq	798 <gcry_mpi_get_flag+0x30>  // b.none
     778:	stp	x29, x30, [sp, #-16]!
     77c:	adrp	x0, 0 <_gcry_mpi_m_check>
     780:	mov	x29, sp
     784:	ldr	x0, [x0]
     788:	bl	5f28 <_gcry_log_bug>
     78c:	ldr	w0, [x0, #12]
     790:	and	w0, w0, #0x1
     794:	ret
     798:	ldr	w0, [x0, #12]
     79c:	and	w0, w0, #0x4
     7a0:	ret
     7a4:	nop
	...

00000000000007b0 <_gcry_mpi_normalize>:
     7b0:	cbz	x0, 7e4 <_gcry_mpi_normalize+0x34>
     7b4:	ldr	w1, [x0, #12]
     7b8:	tbz	w1, #2, 7e4 <_gcry_mpi_normalize+0x34>
     7bc:	ret
     7c0:	sub	w1, w1, #0x1
     7c4:	str	w1, [x0, #4]
     7c8:	ldr	w1, [x0, #4]
     7cc:	cbz	w1, 7bc <_gcry_mpi_normalize+0xc>
     7d0:	ldr	x3, [x0, #16]
     7d4:	add	x2, x4, w1, sxtw #3
     7d8:	ldr	x2, [x3, x2]
     7dc:	cbz	x2, 7c0 <_gcry_mpi_normalize+0x10>
     7e0:	b	7bc <_gcry_mpi_normalize+0xc>
     7e4:	mov	x4, #0xfffffffffffffff8    	// #-8
     7e8:	b	7c8 <_gcry_mpi_normalize+0x18>

00000000000007ec <gcry_mpi_get_nbits>:
     7ec:	cbz	x0, 800 <gcry_mpi_get_nbits+0x14>
     7f0:	ldr	w1, [x0, #12]
     7f4:	tbz	w1, #2, 800 <gcry_mpi_get_nbits+0x14>
     7f8:	ldr	w0, [x0, #8]
     7fc:	ret
     800:	stp	x29, x30, [sp, #-16]!
     804:	mov	x29, sp
     808:	bl	7b0 <_gcry_mpi_normalize>
     80c:	ldr	w1, [x0, #4]
     810:	cbz	w1, 874 <gcry_mpi_get_nbits+0x88>
     814:	mov	x2, #0xfffffffffffffff8    	// #-8
     818:	ldr	x0, [x0, #16]
     81c:	add	x2, x2, w1, sxtw #3
     820:	ldr	x3, [x0, x2]
     824:	cbz	x3, 86c <gcry_mpi_get_nbits+0x80>
     828:	mov	x2, #0x38                  	// #56
     82c:	lsr	x0, x3, x2
     830:	tst	w0, #0xff
     834:	b.ne	840 <gcry_mpi_get_nbits+0x54>  // b.any
     838:	subs	x2, x2, #0x8
     83c:	b.ne	82c <gcry_mpi_get_nbits+0x40>  // b.any
     840:	adrp	x4, 0 <_gcry_mpi_m_check>
     844:	mov	w0, #0x40                  	// #64
     848:	sub	w0, w0, w2
     84c:	lsr	x2, x3, x2
     850:	ldr	x4, [x4]
     854:	ldrb	w2, [x4, x2]
     858:	sub	w0, w0, w2
     85c:	lsl	w1, w1, #6
     860:	sub	w0, w1, w0
     864:	ldp	x29, x30, [sp], #16
     868:	ret
     86c:	mov	w0, #0x40                  	// #64
     870:	b	85c <gcry_mpi_get_nbits+0x70>
     874:	mov	w0, #0x0                   	// #0
     878:	b	864 <gcry_mpi_get_nbits+0x78>
     87c:	nop
	...

0000000000000888 <gcry_mpi_test_bit>:
     888:	ldr	w3, [x0, #4]
     88c:	lsr	w2, w1, #6
     890:	cmp	w3, w1, lsr #6
     894:	b.ls	8b0 <gcry_mpi_test_bit+0x28>  // b.plast
     898:	ldr	x0, [x0, #16]
     89c:	ubfiz	x2, x2, #3, #26
     8a0:	ldr	x0, [x0, x2]
     8a4:	lsr	x0, x0, x1
     8a8:	and	w0, w0, #0x1
     8ac:	ret
     8b0:	mov	w0, #0x0                   	// #0
     8b4:	b	8ac <gcry_mpi_test_bit+0x24>

00000000000008b8 <gcry_mpi_set_bit>:
     8b8:	stp	x29, x30, [sp, #-48]!
     8bc:	mov	x29, sp
     8c0:	ldr	w2, [x0, #4]
     8c4:	stp	x19, x20, [sp, #16]
     8c8:	mov	x20, x0
     8cc:	lsr	w19, w1, #6
     8d0:	stp	x21, x22, [sp, #32]
     8d4:	cmp	w2, w1, lsr #6
     8d8:	and	w22, w1, #0x3f
     8dc:	b.hi	8f0 <gcry_mpi_set_bit+0x38>  // b.pmore
     8e0:	add	w21, w19, #0x1
     8e4:	mov	w1, w21
     8e8:	bl	170 <_gcry_mpi_resize>
     8ec:	str	w21, [x20, #4]
     8f0:	ldr	x2, [x20, #16]
     8f4:	ubfiz	x19, x19, #3, #26
     8f8:	mov	x0, #0x1                   	// #1
     8fc:	lsl	x1, x0, x22
     900:	ldr	x0, [x2, x19]
     904:	ldp	x21, x22, [sp, #32]
     908:	orr	x0, x0, x1
     90c:	str	x0, [x2, x19]
     910:	ldp	x19, x20, [sp, #16]
     914:	ldp	x29, x30, [sp], #48
     918:	ret

000000000000091c <gcry_mpi_set_highbit>:
     91c:	stp	x29, x30, [sp, #-48]!
     920:	mov	x29, sp
     924:	stp	x19, x20, [sp, #16]
     928:	lsr	w20, w1, #6
     92c:	and	w19, w1, #0x3f
     930:	ldr	w1, [x0, #4]
     934:	stp	x21, x22, [sp, #32]
     938:	mov	x21, x0
     93c:	add	w22, w20, #0x1
     940:	cmp	w1, w20
     944:	b.hi	950 <gcry_mpi_set_highbit+0x34>  // b.pmore
     948:	mov	w1, w22
     94c:	bl	170 <_gcry_mpi_resize>
     950:	ldr	x2, [x21, #16]
     954:	ubfiz	x20, x20, #3, #26
     958:	mov	x0, #0x1                   	// #1
     95c:	add	x1, x2, x20
     960:	lsl	x4, x0, x19
     964:	ldr	x3, [x2, x20]
     968:	orr	x3, x3, x4
     96c:	str	x3, [x2, x20]
     970:	add	w2, w19, #0x1
     974:	cmp	w2, #0x40
     978:	b.ne	990 <gcry_mpi_set_highbit+0x74>  // b.any
     97c:	ldp	x19, x20, [sp, #16]
     980:	str	w22, [x21, #4]
     984:	ldp	x21, x22, [sp, #32]
     988:	ldp	x29, x30, [sp], #48
     98c:	ret
     990:	ldr	x4, [x1]
     994:	lsl	x3, x0, x2
     998:	add	w2, w2, #0x1
     99c:	bic	x3, x4, x3
     9a0:	str	x3, [x1]
     9a4:	b	974 <gcry_mpi_set_highbit+0x58>

00000000000009a8 <gcry_mpi_clear_highbit>:
     9a8:	ldr	w3, [x0, #4]
     9ac:	lsr	w2, w1, #6
     9b0:	cmp	w3, w1, lsr #6
     9b4:	b.ls	9ec <gcry_mpi_clear_highbit+0x44>  // b.plast
     9b8:	ldr	x5, [x0, #16]
     9bc:	ubfiz	x4, x2, #3, #26
     9c0:	and	w1, w1, #0x3f
     9c4:	mov	x7, #0x1                   	// #1
     9c8:	ldr	x3, [x5, x4]
     9cc:	lsl	x6, x7, x1
     9d0:	add	w1, w1, #0x1
     9d4:	bic	x3, x3, x6
     9d8:	cmp	w1, #0x40
     9dc:	b.ne	9cc <gcry_mpi_clear_highbit+0x24>  // b.any
     9e0:	str	x3, [x5, x4]
     9e4:	add	w2, w2, #0x1
     9e8:	str	w2, [x0, #4]
     9ec:	ret

00000000000009f0 <gcry_mpi_clear_bit>:
     9f0:	ldr	w3, [x0, #4]
     9f4:	lsr	w2, w1, #6
     9f8:	cmp	w3, w1, lsr #6
     9fc:	b.ls	a1c <gcry_mpi_clear_bit+0x2c>  // b.plast
     a00:	ldr	x3, [x0, #16]
     a04:	ubfiz	x2, x2, #3, #26
     a08:	mov	x0, #0x1                   	// #1
     a0c:	lsl	x1, x0, x1
     a10:	ldr	x0, [x3, x2]
     a14:	bic	x1, x0, x1
     a18:	str	x1, [x3, x2]
     a1c:	ret

0000000000000a20 <_gcry_mpi_rshift_limbs>:
     a20:	ldr	w2, [x0, #4]
     a24:	cmp	w2, w1
     a28:	b.ls	a4c <_gcry_mpi_rshift_limbs+0x2c>  // b.plast
     a2c:	ldr	x4, [x0, #16]
     a30:	sub	w2, w2, w1
     a34:	mov	x3, #0x0                   	// #0
     a38:	cmp	w2, w3
     a3c:	b.hi	a54 <_gcry_mpi_rshift_limbs+0x34>  // b.pmore
     a40:	str	xzr, [x4, w2, uxtw #3]
     a44:	str	w2, [x0, #4]
     a48:	b	a50 <_gcry_mpi_rshift_limbs+0x30>
     a4c:	str	wzr, [x0, #4]
     a50:	ret
     a54:	add	w5, w1, w3
     a58:	ldr	x5, [x4, x5, lsl #3]
     a5c:	str	x5, [x4, x3, lsl #3]
     a60:	add	x3, x3, #0x1
     a64:	b	a38 <_gcry_mpi_rshift_limbs+0x18>

0000000000000a68 <gcry_mpi_rshift>:
     a68:	stp	x29, x30, [sp, #-64]!
     a6c:	cmp	x0, x1
     a70:	mov	x29, sp
     a74:	stp	x19, x20, [sp, #16]
     a78:	mov	x19, x0
     a7c:	stp	x21, x22, [sp, #32]
     a80:	and	w22, w2, #0x3f
     a84:	str	x23, [sp, #48]
     a88:	lsr	w23, w2, #6
     a8c:	b.ne	b3c <gcry_mpi_rshift+0xd4>  // b.any
     a90:	ldr	w1, [x0, #4]
     a94:	cmp	w1, w23
     a98:	b.hi	ab4 <gcry_mpi_rshift+0x4c>  // b.pmore
     a9c:	str	wzr, [x19, #4]
     aa0:	ldp	x19, x20, [sp, #16]
     aa4:	ldp	x21, x22, [sp, #32]
     aa8:	ldr	x23, [sp, #48]
     aac:	ldp	x29, x30, [sp], #64
     ab0:	ret
     ab4:	cmp	w2, #0x3f
     ab8:	b.ls	ae0 <gcry_mpi_rshift+0x78>  // b.plast
     abc:	ldr	x2, [x19, #16]
     ac0:	sub	w1, w1, w23
     ac4:	mov	x0, #0x0                   	// #0
     ac8:	lsl	x4, x0, #3
     acc:	add	x3, x2, x0, lsl #3
     ad0:	cmp	w1, w0
     ad4:	b.hi	b28 <gcry_mpi_rshift+0xc0>  // b.pmore
     ad8:	str	xzr, [x3]
     adc:	str	w1, [x19, #4]
     ae0:	ldr	w2, [x19, #4]
     ae4:	cbz	w2, afc <gcry_mpi_rshift+0x94>
     ae8:	cbz	w22, afc <gcry_mpi_rshift+0x94>
     aec:	ldr	x1, [x19, #16]
     af0:	mov	w3, w22
     af4:	mov	x0, x1
     af8:	bl	5b68 <_gcry_mpih_rshift>
     afc:	mov	x2, #0xfffffffffffffff8    	// #-8
     b00:	ldr	w0, [x19, #4]
     b04:	cmp	w0, #0x0
     b08:	b.le	aa0 <gcry_mpi_rshift+0x38>
     b0c:	ldr	x3, [x19, #16]
     b10:	add	x1, x2, w0, sxtw #3
     b14:	ldr	x1, [x3, x1]
     b18:	cbnz	x1, aa0 <gcry_mpi_rshift+0x38>
     b1c:	sub	w0, w0, #0x1
     b20:	str	w0, [x19, #4]
     b24:	b	b00 <gcry_mpi_rshift+0x98>
     b28:	add	w3, w23, w0
     b2c:	add	x0, x0, #0x1
     b30:	ldr	x3, [x2, x3, lsl #3]
     b34:	str	x3, [x2, x4]
     b38:	b	ac8 <gcry_mpi_rshift+0x60>
     b3c:	mov	x21, x1
     b40:	cmp	w2, #0x3f
     b44:	ldr	w1, [x0]
     b48:	ldp	w20, w3, [x21, #4]
     b4c:	str	w3, [x0, #8]
     b50:	b.ls	be4 <gcry_mpi_rshift+0x17c>  // b.plast
     b54:	cmp	w1, w20
     b58:	b.ge	b64 <gcry_mpi_rshift+0xfc>  // b.tcont
     b5c:	mov	w1, w20
     b60:	bl	170 <_gcry_mpi_resize>
     b64:	str	w20, [x19, #4]
     b68:	mov	x0, #0x0                   	// #0
     b6c:	ldr	w2, [x21, #4]
     b70:	cmp	w2, w0
     b74:	b.hi	bb4 <gcry_mpi_rshift+0x14c>  // b.pmore
     b78:	cmp	w2, w23
     b7c:	b.ls	a9c <gcry_mpi_rshift+0x34>  // b.plast
     b80:	ldr	x1, [x19, #16]
     b84:	sub	w2, w2, w23
     b88:	mov	x0, #0x0                   	// #0
     b8c:	lsl	x4, x0, #3
     b90:	add	x3, x1, x0, lsl #3
     b94:	cmp	w2, w0
     b98:	b.hi	bd0 <gcry_mpi_rshift+0x168>  // b.pmore
     b9c:	str	xzr, [x3]
     ba0:	str	w2, [x19, #4]
     ba4:	cbz	w2, afc <gcry_mpi_rshift+0x94>
     ba8:	cbz	w22, afc <gcry_mpi_rshift+0x94>
     bac:	mov	w3, w22
     bb0:	b	af4 <gcry_mpi_rshift+0x8c>
     bb4:	ldr	x3, [x21, #16]
     bb8:	lsl	x1, x0, #3
     bbc:	add	x0, x0, #0x1
     bc0:	ldr	x4, [x3, x1]
     bc4:	ldr	x3, [x19, #16]
     bc8:	str	x4, [x3, x1]
     bcc:	b	b70 <gcry_mpi_rshift+0x108>
     bd0:	add	w3, w23, w0
     bd4:	add	x0, x0, #0x1
     bd8:	ldr	x3, [x1, x3, lsl #3]
     bdc:	str	x3, [x1, x4]
     be0:	b	b8c <gcry_mpi_rshift+0x124>
     be4:	cmp	w1, w20
     be8:	b.ge	bf4 <gcry_mpi_rshift+0x18c>  // b.tcont
     bec:	mov	w1, w20
     bf0:	bl	170 <_gcry_mpi_resize>
     bf4:	str	w20, [x19, #4]
     bf8:	cbz	w20, afc <gcry_mpi_rshift+0x94>
     bfc:	ldr	x0, [x19, #16]
     c00:	ldr	x1, [x21, #16]
     c04:	cbz	w22, c14 <gcry_mpi_rshift+0x1ac>
     c08:	mov	w3, w22
     c0c:	mov	w2, w20
     c10:	b	af8 <gcry_mpi_rshift+0x90>
     c14:	mov	x2, #0x0                   	// #0
     c18:	ldr	x3, [x1, x2, lsl #3]
     c1c:	str	x3, [x0, x2, lsl #3]
     c20:	add	x2, x2, #0x1
     c24:	cmp	w20, w2
     c28:	b.hi	c18 <gcry_mpi_rshift+0x1b0>  // b.pmore
     c2c:	b	afc <gcry_mpi_rshift+0x94>

0000000000000c30 <_gcry_mpi_lshift_limbs>:
     c30:	stp	x29, x30, [sp, #-48]!
     c34:	cmp	w1, #0x0
     c38:	mov	x29, sp
     c3c:	stp	x19, x20, [sp, #16]
     c40:	ldr	w19, [x0, #4]
     c44:	str	x21, [sp, #32]
     c48:	ccmp	w19, #0x0, #0x4, ne  // ne = any
     c4c:	b.eq	c94 <_gcry_mpi_lshift_limbs+0x64>  // b.none
     c50:	ldr	w2, [x0]
     c54:	mov	w21, w1
     c58:	add	w1, w19, w1
     c5c:	mov	x20, x0
     c60:	cmp	w2, w1
     c64:	b.cs	c6c <_gcry_mpi_lshift_limbs+0x3c>  // b.hs, b.nlast
     c68:	bl	170 <_gcry_mpi_resize>
     c6c:	sub	w2, w19, #0x1
     c70:	ldr	x1, [x20, #16]
     c74:	sxtw	x2, w2
     c78:	tbz	w2, #31, ca4 <_gcry_mpi_lshift_limbs+0x74>
     c7c:	mov	x0, #0x0                   	// #0
     c80:	cmp	w21, w0
     c84:	b.hi	cb8 <_gcry_mpi_lshift_limbs+0x88>  // b.pmore
     c88:	ldr	w1, [x20, #4]
     c8c:	add	w21, w1, w21
     c90:	str	w21, [x20, #4]
     c94:	ldp	x19, x20, [sp, #16]
     c98:	ldr	x21, [sp, #32]
     c9c:	ldp	x29, x30, [sp], #48
     ca0:	ret
     ca4:	add	w0, w21, w2
     ca8:	ldr	x3, [x1, x2, lsl #3]
     cac:	sub	x2, x2, #0x1
     cb0:	str	x3, [x1, x0, lsl #3]
     cb4:	b	c78 <_gcry_mpi_lshift_limbs+0x48>
     cb8:	str	xzr, [x1, x0, lsl #3]
     cbc:	add	x0, x0, #0x1
     cc0:	b	c80 <_gcry_mpi_lshift_limbs+0x50>

0000000000000cc4 <gcry_mpi_lshift>:
     cc4:	cmp	w2, #0x0
     cc8:	ccmp	x0, x1, #0x0, eq  // eq = none
     ccc:	b.eq	dd0 <gcry_mpi_lshift+0x10c>  // b.none
     cd0:	stp	x29, x30, [sp, #-64]!
     cd4:	cmp	x0, x1
     cd8:	mov	x29, sp
     cdc:	stp	x19, x20, [sp, #16]
     ce0:	mov	x19, x0
     ce4:	mov	x20, x1
     ce8:	stp	x21, x22, [sp, #32]
     cec:	mov	w21, w2
     cf0:	lsr	w22, w2, #6
     cf4:	stp	x23, x24, [sp, #48]
     cf8:	b.eq	d3c <gcry_mpi_lshift+0x78>  // b.none
     cfc:	ldr	w23, [x1, #4]
     d00:	ldr	w2, [x0]
     d04:	add	w1, w23, #0x1
     d08:	add	w1, w1, w22
     d0c:	cmp	w2, w1
     d10:	ldur	x24, [x20, #4]
     d14:	b.cs	d1c <gcry_mpi_lshift+0x58>  // b.hs, b.nlast
     d18:	bl	170 <_gcry_mpi_resize>
     d1c:	ldr	x1, [x19, #16]
     d20:	mov	x0, #0x0                   	// #0
     d24:	ldr	x2, [x20, #16]
     d28:	cmp	w23, w0
     d2c:	b.hi	d7c <gcry_mpi_lshift+0xb8>  // b.pmore
     d30:	ldr	w0, [x20, #12]
     d34:	stur	x24, [x19, #4]
     d38:	str	w0, [x19, #12]
     d3c:	and	w20, w21, #0x3f
     d40:	cmp	w21, #0x3f
     d44:	ccmp	w20, #0x0, #0x0, hi  // hi = pmore
     d48:	b.ne	d8c <gcry_mpi_lshift+0xc8>  // b.any
     d4c:	mov	w1, w22
     d50:	mov	x0, x19
     d54:	bl	c30 <_gcry_mpi_lshift_limbs>
     d58:	mov	x2, #0xfffffffffffffff8    	// #-8
     d5c:	ldr	w0, [x19, #4]
     d60:	cmp	w0, #0x0
     d64:	b.gt	db4 <gcry_mpi_lshift+0xf0>
     d68:	ldp	x19, x20, [sp, #16]
     d6c:	ldp	x21, x22, [sp, #32]
     d70:	ldp	x23, x24, [sp, #48]
     d74:	ldp	x29, x30, [sp], #64
     d78:	ret
     d7c:	ldr	x3, [x2, x0, lsl #3]
     d80:	str	x3, [x1, x0, lsl #3]
     d84:	add	x0, x0, #0x1
     d88:	b	d28 <gcry_mpi_lshift+0x64>
     d8c:	cbz	w21, d58 <gcry_mpi_lshift+0x94>
     d90:	add	w1, w22, #0x1
     d94:	mov	x0, x19
     d98:	bl	c30 <_gcry_mpi_lshift_limbs>
     d9c:	mov	x1, x19
     da0:	mov	x0, x19
     da4:	mov	w2, #0x40                  	// #64
     da8:	sub	w2, w2, w20
     dac:	bl	a68 <gcry_mpi_rshift>
     db0:	b	d58 <gcry_mpi_lshift+0x94>
     db4:	ldr	x3, [x19, #16]
     db8:	add	x1, x2, w0, sxtw #3
     dbc:	ldr	x1, [x3, x1]
     dc0:	cbnz	x1, d68 <gcry_mpi_lshift+0xa4>
     dc4:	sub	w0, w0, #0x1
     dc8:	str	w0, [x19, #4]
     dcc:	b	d5c <gcry_mpi_lshift+0x98>
     dd0:	ret

0000000000000dd4 <gcry_mpi_add_ui>:
     dd4:	stp	x29, x30, [sp, #-64]!
     dd8:	mov	x29, sp
     ddc:	stp	x19, x20, [sp, #16]
     de0:	mov	x19, x2
     de4:	ldr	w2, [x0]
     de8:	stp	x21, x22, [sp, #32]
     dec:	mov	x21, x0
     df0:	ldp	w20, w22, [x1, #4]
     df4:	str	x23, [sp, #48]
     df8:	mov	x23, x1
     dfc:	add	w1, w20, #0x1
     e00:	cmp	w2, w1
     e04:	b.ge	e0c <gcry_mpi_add_ui+0x38>  // b.tcont
     e08:	bl	170 <_gcry_mpi_resize>
     e0c:	ldr	x3, [x21, #16]
     e10:	cbnz	w20, e3c <gcry_mpi_add_ui+0x68>
     e14:	cmp	x19, #0x0
     e18:	mov	w22, #0x0                   	// #0
     e1c:	cset	w20, ne  // ne = any
     e20:	str	x19, [x3]
     e24:	ldr	x23, [sp, #48]
     e28:	stp	w20, w22, [x21, #4]
     e2c:	ldp	x19, x20, [sp, #16]
     e30:	ldp	x21, x22, [sp, #32]
     e34:	ldp	x29, x30, [sp], #64
     e38:	ret
     e3c:	ldr	x1, [x23, #16]
     e40:	ldr	x2, [x1]
     e44:	cbnz	w22, ebc <gcry_mpi_add_ui+0xe8>
     e48:	mov	x0, x3
     e4c:	adds	x19, x19, x2
     e50:	add	x1, x1, #0x8
     e54:	mov	w2, w20
     e58:	str	x19, [x0], #8
     e5c:	b.cs	e80 <gcry_mpi_add_ui+0xac>  // b.hs, b.nlast
     e60:	cmp	x0, x1
     e64:	b.ne	eb0 <gcry_mpi_add_ui+0xdc>  // b.any
     e68:	mov	x0, #0x0                   	// #0
     e6c:	b	e8c <gcry_mpi_add_ui+0xb8>
     e70:	ldr	x4, [x1], #8
     e74:	add	x4, x4, #0x1
     e78:	str	x4, [x0], #8
     e7c:	cbnz	x4, e60 <gcry_mpi_add_ui+0x8c>
     e80:	subs	w2, w2, #0x1
     e84:	b.ne	e70 <gcry_mpi_add_ui+0x9c>  // b.any
     e88:	mov	x0, #0x1                   	// #1
     e8c:	str	x0, [x3, w20, sxtw #3]
     e90:	add	w20, w20, w0
     e94:	b	e24 <gcry_mpi_add_ui+0x50>
     e98:	ldr	x5, [x1, x4, lsl #3]
     e9c:	str	x5, [x0, x4, lsl #3]
     ea0:	add	x4, x4, #0x1
     ea4:	cmp	w2, w4
     ea8:	b.gt	e98 <gcry_mpi_add_ui+0xc4>
     eac:	b	e68 <gcry_mpi_add_ui+0x94>
     eb0:	sub	w2, w2, #0x1
     eb4:	mov	x4, #0x0                   	// #0
     eb8:	b	ea4 <gcry_mpi_add_ui+0xd0>
     ebc:	cmp	w20, #0x1
     ec0:	b.ne	edc <gcry_mpi_add_ui+0x108>  // b.any
     ec4:	cmp	x19, x2
     ec8:	b.ls	edc <gcry_mpi_add_ui+0x108>  // b.plast
     ecc:	sub	x19, x19, x2
     ed0:	mov	w22, #0x0                   	// #0
     ed4:	str	x19, [x3]
     ed8:	b	e24 <gcry_mpi_add_ui+0x50>
     edc:	mov	x0, x3
     ee0:	subs	x4, x2, x19
     ee4:	cmp	x2, x19
     ee8:	add	x1, x1, #0x8
     eec:	mov	w2, w20
     ef0:	str	x4, [x0], #8
     ef4:	b.cc	f1c <gcry_mpi_add_ui+0x148>  // b.lo, b.ul, b.last
     ef8:	cmp	x0, x1
     efc:	b.eq	f24 <gcry_mpi_add_ui+0x150>  // b.none
     f00:	sub	w2, w2, #0x1
     f04:	mov	x4, #0x0                   	// #0
     f08:	b	f4c <gcry_mpi_add_ui+0x178>
     f0c:	ldr	x4, [x1], #8
     f10:	sub	x5, x4, #0x1
     f14:	str	x5, [x0], #8
     f18:	cbnz	x4, ef8 <gcry_mpi_add_ui+0x124>
     f1c:	subs	w2, w2, #0x1
     f20:	b.ne	f0c <gcry_mpi_add_ui+0x138>  // b.any
     f24:	add	x3, x3, w20, sxtw #3
     f28:	mov	w22, #0x1                   	// #1
     f2c:	ldur	x0, [x3, #-8]
     f30:	cmp	x0, #0x0
     f34:	cset	w0, eq  // eq = none
     f38:	sub	w20, w20, w0
     f3c:	b	e24 <gcry_mpi_add_ui+0x50>
     f40:	ldr	x5, [x1, x4, lsl #3]
     f44:	str	x5, [x0, x4, lsl #3]
     f48:	add	x4, x4, #0x1
     f4c:	cmp	w2, w4
     f50:	b.gt	f40 <gcry_mpi_add_ui+0x16c>
     f54:	b	f24 <gcry_mpi_add_ui+0x150>

0000000000000f58 <gcry_mpi_add>:
     f58:	stp	x29, x30, [sp, #-80]!
     f5c:	mov	x29, sp
     f60:	stp	x19, x20, [sp, #16]
     f64:	stp	x23, x24, [sp, #48]
     f68:	mov	x23, x2
     f6c:	stp	x25, x26, [sp, #64]
     f70:	mov	x25, x1
     f74:	ldr	w20, [x23, #8]
     f78:	ldp	w19, w26, [x1, #4]
     f7c:	stp	x21, x22, [sp, #32]
     f80:	ldr	w22, [x2, #4]
     f84:	mov	x21, x0
     f88:	ldr	w2, [x0]
     f8c:	cmp	w19, w22
     f90:	b.ge	1018 <gcry_mpi_add+0xc0>  // b.tcont
     f94:	add	w1, w22, #0x1
     f98:	cmp	w1, w2
     f9c:	b.le	fa4 <gcry_mpi_add+0x4c>
     fa0:	bl	170 <_gcry_mpi_resize>
     fa4:	ldr	x24, [x23, #16]
     fa8:	ldr	x0, [x25, #16]
     fac:	ldr	x23, [x21, #16]
     fb0:	cbz	w19, 107c <gcry_mpi_add+0x124>
     fb4:	cmp	w20, w26
     fb8:	b.eq	1174 <gcry_mpi_add+0x21c>  // b.none
     fbc:	cmp	w22, w19
     fc0:	b.eq	10d4 <gcry_mpi_add+0x17c>  // b.none
     fc4:	mov	w3, w19
     fc8:	mov	x2, x0
     fcc:	mov	x1, x24
     fd0:	mov	x0, x23
     fd4:	bl	443c <_gcry_mpih_sub_n>
     fd8:	sbfiz	x4, x19, #3, #32
     fdc:	add	x2, x23, w19, sxtw #3
     fe0:	add	x1, x24, w19, sxtw #3
     fe4:	add	x2, x2, #0x8
     fe8:	sub	w19, w22, w19
     fec:	add	x1, x1, #0x8
     ff0:	ldr	x3, [x24, x4]
     ff4:	subs	x5, x3, x0
     ff8:	str	x5, [x23, x4]
     ffc:	cmp	x3, x0
    1000:	b.cc	1094 <gcry_mpi_add+0x13c>  // b.lo, b.ul, b.last
    1004:	cmp	x2, x1
    1008:	b.eq	109c <gcry_mpi_add+0x144>  // b.none
    100c:	sub	w19, w19, #0x1
    1010:	mov	x0, #0x0                   	// #0
    1014:	b	10c8 <gcry_mpi_add+0x170>
    1018:	add	w1, w19, #0x1
    101c:	cmp	w1, w2
    1020:	b.le	1028 <gcry_mpi_add+0xd0>
    1024:	bl	170 <_gcry_mpi_resize>
    1028:	mov	w1, w20
    102c:	mov	w20, w26
    1030:	mov	w26, w1
    1034:	mov	w1, w22
    1038:	mov	w22, w19
    103c:	mov	w19, w1
    1040:	ldr	x0, [x23, #16]
    1044:	ldr	x24, [x25, #16]
    1048:	b	fac <gcry_mpi_add+0x54>
    104c:	ldr	x1, [x24, x0, lsl #3]
    1050:	str	x1, [x23, x0, lsl #3]
    1054:	add	x0, x0, #0x1
    1058:	cmp	w22, w0
    105c:	b.gt	104c <gcry_mpi_add+0xf4>
    1060:	ldp	x23, x24, [sp, #48]
    1064:	ldp	x25, x26, [sp, #64]
    1068:	stp	w22, w20, [x21, #4]
    106c:	ldp	x19, x20, [sp, #16]
    1070:	ldp	x21, x22, [sp, #32]
    1074:	ldp	x29, x30, [sp], #80
    1078:	ret
    107c:	mov	x0, #0x0                   	// #0
    1080:	b	1058 <gcry_mpi_add+0x100>
    1084:	ldr	x0, [x1], #8
    1088:	sub	x3, x0, #0x1
    108c:	str	x3, [x2], #8
    1090:	cbnz	x0, 1004 <gcry_mpi_add+0xac>
    1094:	subs	w19, w19, #0x1
    1098:	b.ne	1084 <gcry_mpi_add+0x12c>  // b.any
    109c:	sxtw	x0, w22
    10a0:	mov	w22, w0
    10a4:	cmp	w0, #0x0
    10a8:	b.le	1060 <gcry_mpi_add+0x108>
    10ac:	sub	x0, x0, #0x1
    10b0:	ldr	x1, [x23, x0, lsl #3]
    10b4:	cbz	x1, 10a0 <gcry_mpi_add+0x148>
    10b8:	b	1060 <gcry_mpi_add+0x108>
    10bc:	ldr	x3, [x1, x0, lsl #3]
    10c0:	str	x3, [x2, x0, lsl #3]
    10c4:	add	x0, x0, #0x1
    10c8:	cmp	w19, w0
    10cc:	b.gt	10bc <gcry_mpi_add+0x164>
    10d0:	b	109c <gcry_mpi_add+0x144>
    10d4:	sub	w2, w22, #0x1
    10d8:	add	x1, x0, #0x8
    10dc:	sxtw	x2, w2
    10e0:	tbz	w2, #31, 1120 <gcry_mpi_add+0x1c8>
    10e4:	mov	x2, x0
    10e8:	mov	w3, w22
    10ec:	mov	x1, x24
    10f0:	mov	x0, x23
    10f4:	bl	443c <_gcry_mpih_sub_n>
    10f8:	sxtw	x0, w22
    10fc:	mov	w22, w0
    1100:	cmp	w0, #0x0
    1104:	b.le	1114 <gcry_mpi_add+0x1bc>
    1108:	sub	x0, x0, #0x1
    110c:	ldr	x1, [x23, x0, lsl #3]
    1110:	cbz	x1, 10fc <gcry_mpi_add+0x1a4>
    1114:	cmp	w20, #0x0
    1118:	cset	w20, ne  // ne = any
    111c:	b	1060 <gcry_mpi_add+0x108>
    1120:	ldr	x4, [x24, x2, lsl #3]
    1124:	sub	x2, x2, #0x1
    1128:	ldr	x3, [x1, x2, lsl #3]
    112c:	cmp	x4, x3
    1130:	b.eq	10e0 <gcry_mpi_add+0x188>  // b.none
    1134:	b.hi	10e4 <gcry_mpi_add+0x18c>  // b.pmore
    1138:	mov	x1, x0
    113c:	mov	w3, w22
    1140:	mov	x2, x24
    1144:	mov	x0, x23
    1148:	bl	443c <_gcry_mpih_sub_n>
    114c:	sxtw	x0, w22
    1150:	mov	w22, w0
    1154:	cmp	w0, #0x0
    1158:	b.le	1168 <gcry_mpi_add+0x210>
    115c:	sub	x0, x0, #0x1
    1160:	ldr	x1, [x23, x0, lsl #3]
    1164:	cbz	x1, 1150 <gcry_mpi_add+0x1f8>
    1168:	cmp	w20, #0x0
    116c:	cset	w20, eq  // eq = none
    1170:	b	1060 <gcry_mpi_add+0x108>
    1174:	mov	x2, x0
    1178:	mov	w3, w19
    117c:	mov	x1, x24
    1180:	mov	x0, x23
    1184:	bl	4404 <_gcry_mpih_add_n>
    1188:	cmp	w22, w19
    118c:	b.eq	11e4 <gcry_mpi_add+0x28c>  // b.none
    1190:	sbfiz	x4, x19, #3, #32
    1194:	add	x3, x23, w19, sxtw #3
    1198:	add	x2, x24, w19, sxtw #3
    119c:	sub	w19, w22, w19
    11a0:	add	x2, x2, #0x8
    11a4:	ldr	x1, [x24, x4]
    11a8:	adds	x0, x0, x1
    11ac:	str	x0, [x23, x4]
    11b0:	add	x1, x3, #0x8
    11b4:	b.cs	11d8 <gcry_mpi_add+0x280>  // b.hs, b.nlast
    11b8:	cmp	x1, x2
    11bc:	b.ne	1208 <gcry_mpi_add+0x2b0>  // b.any
    11c0:	mov	x0, #0x0                   	// #0
    11c4:	b	11e4 <gcry_mpi_add+0x28c>
    11c8:	ldr	x0, [x2], #8
    11cc:	add	x0, x0, #0x1
    11d0:	str	x0, [x1], #8
    11d4:	cbnz	x0, 11b8 <gcry_mpi_add+0x260>
    11d8:	subs	w19, w19, #0x1
    11dc:	b.ne	11c8 <gcry_mpi_add+0x270>  // b.any
    11e0:	mov	x0, #0x1                   	// #1
    11e4:	str	x0, [x23, w22, sxtw #3]
    11e8:	add	w22, w22, w0
    11ec:	b	1114 <gcry_mpi_add+0x1bc>
    11f0:	ldr	x3, [x2, x0, lsl #3]
    11f4:	str	x3, [x1, x0, lsl #3]
    11f8:	add	x0, x0, #0x1
    11fc:	cmp	w19, w0
    1200:	b.gt	11f0 <gcry_mpi_add+0x298>
    1204:	b	11c0 <gcry_mpi_add+0x268>
    1208:	sub	w19, w19, #0x1
    120c:	mov	x0, #0x0                   	// #0
    1210:	b	11fc <gcry_mpi_add+0x2a4>

0000000000001214 <gcry_mpi_sub_ui>:
    1214:	stp	x29, x30, [sp, #-64]!
    1218:	mov	x29, sp
    121c:	stp	x19, x20, [sp, #16]
    1220:	mov	x20, x2
    1224:	ldr	w2, [x0]
    1228:	stp	x21, x22, [sp, #32]
    122c:	mov	x21, x0
    1230:	ldp	w19, w22, [x1, #4]
    1234:	str	x23, [sp, #48]
    1238:	mov	x23, x1
    123c:	add	w1, w19, #0x1
    1240:	cmp	w2, w1
    1244:	b.ge	124c <gcry_mpi_sub_ui+0x38>  // b.tcont
    1248:	bl	170 <_gcry_mpi_resize>
    124c:	ldr	x3, [x21, #16]
    1250:	cbnz	w19, 127c <gcry_mpi_sub_ui+0x68>
    1254:	cmp	x20, #0x0
    1258:	str	x20, [x3]
    125c:	cset	w19, ne  // ne = any
    1260:	mov	w22, #0x1                   	// #1
    1264:	ldr	x23, [sp, #48]
    1268:	stp	w19, w22, [x21, #4]
    126c:	ldp	x19, x20, [sp, #16]
    1270:	ldp	x21, x22, [sp, #32]
    1274:	ldp	x29, x30, [sp], #64
    1278:	ret
    127c:	ldr	x1, [x23, #16]
    1280:	ldr	x2, [x1]
    1284:	cbz	w22, 1300 <gcry_mpi_sub_ui+0xec>
    1288:	mov	x0, x3
    128c:	adds	x20, x20, x2
    1290:	add	x1, x1, #0x8
    1294:	mov	w2, w19
    1298:	str	x20, [x0], #8
    129c:	b.cs	12c0 <gcry_mpi_sub_ui+0xac>  // b.hs, b.nlast
    12a0:	cmp	x0, x1
    12a4:	b.ne	12f4 <gcry_mpi_sub_ui+0xe0>  // b.any
    12a8:	mov	x0, #0x0                   	// #0
    12ac:	b	12cc <gcry_mpi_sub_ui+0xb8>
    12b0:	ldr	x4, [x1], #8
    12b4:	add	x4, x4, #0x1
    12b8:	str	x4, [x0], #8
    12bc:	cbnz	x4, 12a0 <gcry_mpi_sub_ui+0x8c>
    12c0:	subs	w2, w2, #0x1
    12c4:	b.ne	12b0 <gcry_mpi_sub_ui+0x9c>  // b.any
    12c8:	mov	x0, #0x1                   	// #1
    12cc:	mov	w22, #0x0                   	// #0
    12d0:	str	x0, [x3, w19, sxtw #3]
    12d4:	add	w19, w19, w0
    12d8:	b	1264 <gcry_mpi_sub_ui+0x50>
    12dc:	ldr	x5, [x1, x4, lsl #3]
    12e0:	str	x5, [x0, x4, lsl #3]
    12e4:	add	x4, x4, #0x1
    12e8:	cmp	w2, w4
    12ec:	b.gt	12dc <gcry_mpi_sub_ui+0xc8>
    12f0:	b	12a8 <gcry_mpi_sub_ui+0x94>
    12f4:	sub	w2, w2, #0x1
    12f8:	mov	x4, #0x0                   	// #0
    12fc:	b	12e8 <gcry_mpi_sub_ui+0xd4>
    1300:	cmp	w19, #0x1
    1304:	b.ne	131c <gcry_mpi_sub_ui+0x108>  // b.any
    1308:	cmp	x20, x2
    130c:	b.ls	131c <gcry_mpi_sub_ui+0x108>  // b.plast
    1310:	sub	x20, x20, x2
    1314:	str	x20, [x3]
    1318:	b	1260 <gcry_mpi_sub_ui+0x4c>
    131c:	mov	x0, x3
    1320:	subs	x4, x2, x20
    1324:	cmp	x2, x20
    1328:	add	x1, x1, #0x8
    132c:	mov	w2, w19
    1330:	str	x4, [x0], #8
    1334:	b.cc	135c <gcry_mpi_sub_ui+0x148>  // b.lo, b.ul, b.last
    1338:	cmp	x0, x1
    133c:	b.eq	1364 <gcry_mpi_sub_ui+0x150>  // b.none
    1340:	sub	w2, w2, #0x1
    1344:	mov	x4, #0x0                   	// #0
    1348:	b	1388 <gcry_mpi_sub_ui+0x174>
    134c:	ldr	x4, [x1], #8
    1350:	sub	x5, x4, #0x1
    1354:	str	x5, [x0], #8
    1358:	cbnz	x4, 1338 <gcry_mpi_sub_ui+0x124>
    135c:	subs	w2, w2, #0x1
    1360:	b.ne	134c <gcry_mpi_sub_ui+0x138>  // b.any
    1364:	add	x3, x3, w19, sxtw #3
    1368:	ldur	x0, [x3, #-8]
    136c:	cmp	x0, #0x0
    1370:	cset	w0, eq  // eq = none
    1374:	sub	w19, w19, w0
    1378:	b	1264 <gcry_mpi_sub_ui+0x50>
    137c:	ldr	x5, [x1, x4, lsl #3]
    1380:	str	x5, [x0, x4, lsl #3]
    1384:	add	x4, x4, #0x1
    1388:	cmp	w2, w4
    138c:	b.gt	137c <gcry_mpi_sub_ui+0x168>
    1390:	b	1364 <gcry_mpi_sub_ui+0x150>

0000000000001394 <gcry_mpi_sub>:
    1394:	stp	x29, x30, [sp, #-48]!
    1398:	mov	x29, sp
    139c:	stp	x19, x20, [sp, #16]
    13a0:	mov	x20, x0
    13a4:	mov	x0, x2
    13a8:	str	x21, [sp, #32]
    13ac:	mov	x21, x1
    13b0:	bl	338 <_gcry_mpi_copy>
    13b4:	mov	x19, x0
    13b8:	mov	x2, x0
    13bc:	ldr	w0, [x0, #8]
    13c0:	mov	x1, x21
    13c4:	cmp	w0, #0x0
    13c8:	cset	w0, eq  // eq = none
    13cc:	str	w0, [x19, #8]
    13d0:	mov	x0, x20
    13d4:	bl	f58 <gcry_mpi_add>
    13d8:	mov	x0, x19
    13dc:	ldp	x19, x20, [sp, #16]
    13e0:	ldr	x21, [sp, #32]
    13e4:	ldp	x29, x30, [sp], #48
    13e8:	b	230 <_gcry_mpi_free>

00000000000013ec <gcry_mpi_addm>:
    13ec:	stp	x29, x30, [sp, #-32]!
    13f0:	mov	x29, sp
    13f4:	stp	x19, x20, [sp, #16]
    13f8:	mov	x19, x0
    13fc:	mov	x20, x3
    1400:	bl	f58 <gcry_mpi_add>
    1404:	mov	x2, x20
    1408:	mov	x1, x19
    140c:	mov	x0, x19
    1410:	ldp	x19, x20, [sp, #16]
    1414:	ldp	x29, x30, [sp], #32
    1418:	b	2150 <_gcry_mpi_fdiv_r>

000000000000141c <gcry_mpi_subm>:
    141c:	stp	x29, x30, [sp, #-32]!
    1420:	mov	x29, sp
    1424:	stp	x19, x20, [sp, #16]
    1428:	mov	x19, x0
    142c:	mov	x20, x3
    1430:	bl	1394 <gcry_mpi_sub>
    1434:	mov	x2, x20
    1438:	mov	x1, x19
    143c:	mov	x0, x19
    1440:	ldp	x19, x20, [sp, #16]
    1444:	ldp	x29, x30, [sp], #32
    1448:	b	2150 <_gcry_mpi_fdiv_r>

000000000000144c <gcry_mpi_mul_ui>:
    144c:	stp	x29, x30, [sp, #-80]!
    1450:	mov	x29, sp
    1454:	stp	x19, x20, [sp, #16]
    1458:	mov	x19, x0
    145c:	ldr	w20, [x1, #4]
    1460:	stp	x21, x22, [sp, #32]
    1464:	cmp	w20, #0x0
    1468:	stp	x23, x24, [sp, #48]
    146c:	ccmp	x2, #0x0, #0x4, ne  // ne = any
    1470:	str	x25, [sp, #64]
    1474:	b.ne	1494 <gcry_mpi_mul_ui+0x48>  // b.any
    1478:	stur	xzr, [x0, #4]
    147c:	ldp	x19, x20, [sp, #16]
    1480:	ldp	x21, x22, [sp, #32]
    1484:	ldp	x23, x24, [sp, #48]
    1488:	ldr	x25, [sp, #64]
    148c:	ldp	x29, x30, [sp], #80
    1490:	ret
    1494:	mov	x21, x1
    1498:	ldr	w1, [x0]
    149c:	add	w23, w20, #0x1
    14a0:	mov	x22, x2
    14a4:	cmp	w1, w23
    14a8:	ldr	w25, [x21, #8]
    14ac:	b.ge	14b8 <gcry_mpi_mul_ui+0x6c>  // b.tcont
    14b0:	mov	w1, w23
    14b4:	bl	170 <_gcry_mpi_resize>
    14b8:	ldr	x1, [x21, #16]
    14bc:	mov	x3, x22
    14c0:	ldr	x24, [x19, #16]
    14c4:	mov	w2, w20
    14c8:	mov	x0, x24
    14cc:	bl	429c <_gcry_mpih_mul_1>
    14d0:	cbz	x0, 14dc <gcry_mpi_mul_ui+0x90>
    14d4:	str	x0, [x24, w20, sxtw #3]
    14d8:	mov	w20, w23
    14dc:	stp	w20, w25, [x19, #4]
    14e0:	b	147c <gcry_mpi_mul_ui+0x30>

00000000000014e4 <gcry_mpi_mul_2exp>:
    14e4:	stp	x29, x30, [sp, #-96]!
    14e8:	mov	x29, sp
    14ec:	stp	x19, x20, [sp, #16]
    14f0:	ldr	w19, [x1, #4]
    14f4:	stp	x21, x22, [sp, #32]
    14f8:	mov	x21, x0
    14fc:	stp	x23, x24, [sp, #48]
    1500:	stp	x25, x26, [sp, #64]
    1504:	stp	x27, x28, [sp, #80]
    1508:	cbnz	w19, 152c <gcry_mpi_mul_2exp+0x48>
    150c:	stur	xzr, [x0, #4]
    1510:	ldp	x19, x20, [sp, #16]
    1514:	ldp	x21, x22, [sp, #32]
    1518:	ldp	x23, x24, [sp, #48]
    151c:	ldp	x25, x26, [sp, #64]
    1520:	ldp	x27, x28, [sp, #80]
    1524:	ldp	x29, x30, [sp], #96
    1528:	ret
    152c:	mov	x25, x1
    1530:	lsr	x20, x2, #6
    1534:	ldr	w1, [x0]
    1538:	add	w26, w19, w20
    153c:	add	w28, w26, #0x1
    1540:	mov	x22, x2
    1544:	ldr	w23, [x25, #8]
    1548:	mov	w24, w20
    154c:	cmp	w1, w28
    1550:	b.ge	155c <gcry_mpi_mul_2exp+0x78>  // b.tcont
    1554:	mov	w1, w28
    1558:	bl	170 <_gcry_mpi_resize>
    155c:	ands	x3, x22, #0x3f
    1560:	sxtw	x20, w20
    1564:	ldr	x27, [x21, #16]
    1568:	b.eq	159c <gcry_mpi_mul_2exp+0xb8>  // b.none
    156c:	ldr	x1, [x25, #16]
    1570:	mov	w2, w19
    1574:	add	x0, x27, x20, lsl #3
    1578:	bl	3488 <_gcry_mpih_lshift>
    157c:	cbz	x0, 1588 <gcry_mpi_mul_2exp+0xa4>
    1580:	str	x0, [x27, w26, sxtw #3]
    1584:	mov	w26, w28
    1588:	mov	x0, #0x0                   	// #0
    158c:	cmp	w24, w0
    1590:	b.gt	15c0 <gcry_mpi_mul_2exp+0xdc>
    1594:	stp	w26, w23, [x21, #4]
    1598:	b	1510 <gcry_mpi_mul_2exp+0x2c>
    159c:	sub	w2, w19, #0x1
    15a0:	add	x20, x27, x20, lsl #3
    15a4:	sxtw	x2, w2
    15a8:	tbnz	w2, #31, 1588 <gcry_mpi_mul_2exp+0xa4>
    15ac:	ldr	x0, [x25, #16]
    15b0:	ldr	x0, [x0, x2, lsl #3]
    15b4:	str	x0, [x20, x2, lsl #3]
    15b8:	sub	x2, x2, #0x1
    15bc:	b	15a8 <gcry_mpi_mul_2exp+0xc4>
    15c0:	str	xzr, [x27, x0, lsl #3]
    15c4:	add	x0, x0, #0x1
    15c8:	b	158c <gcry_mpi_mul_2exp+0xa8>

00000000000015cc <gcry_mpi_mul>:
    15cc:	stp	x29, x30, [sp, #-112]!
    15d0:	mov	x29, sp
    15d4:	stp	x19, x20, [sp, #16]
    15d8:	ldr	w5, [x1, #12]
    15dc:	ldp	w20, w4, [x1, #4]
    15e0:	stp	x23, x24, [sp, #48]
    15e4:	mov	x23, x0
    15e8:	mov	x0, x1
    15ec:	stp	x25, x26, [sp, #64]
    15f0:	ldr	w3, [x2, #12]
    15f4:	stp	x27, x28, [sp, #80]
    15f8:	and	w1, w3, #0x1
    15fc:	ldp	w25, w27, [x2, #4]
    1600:	stp	x21, x22, [sp, #32]
    1604:	cmp	w20, w25
    1608:	ldr	x21, [x0, #16]
    160c:	and	w0, w5, #0x1
    1610:	ldr	x22, [x2, #16]
    1614:	b.lt	1648 <gcry_mpi_mul+0x7c>  // b.tstop
    1618:	mov	w2, w1
    161c:	mov	w1, w0
    1620:	mov	w0, w2
    1624:	mov	w2, w27
    1628:	mov	w27, w4
    162c:	mov	w4, w2
    1630:	mov	x2, x22
    1634:	mov	x22, x21
    1638:	mov	x21, x2
    163c:	mov	w2, w25
    1640:	mov	w25, w20
    1644:	mov	w20, w2
    1648:	ldr	w2, [x23, #12]
    164c:	eor	w27, w27, w4
    1650:	add	w28, w25, w20
    1654:	and	w26, w2, #0x1
    1658:	tbnz	w2, #0, 1720 <gcry_mpi_mul+0x154>
    165c:	orr	w3, w3, w5
    1660:	tbz	w3, #0, 1720 <gcry_mpi_mul+0x154>
    1664:	mov	w0, w28
    1668:	mov	w1, #0x1                   	// #1
    166c:	mov	x24, #0x0                   	// #0
    1670:	bl	24 <_gcry_mpi_alloc_limb_space>
    1674:	mov	x19, x0
    1678:	cbz	w20, 16b8 <gcry_mpi_mul+0xec>
    167c:	mov	w5, #0x2                   	// #2
    1680:	mov	w4, w20
    1684:	mov	x3, x21
    1688:	mov	w2, w25
    168c:	mov	x1, x22
    1690:	mov	x0, x19
    1694:	str	w5, [sp, #108]
    1698:	bl	3e70 <_gcry_mpih_mul>
    169c:	cmp	x0, #0x0
    16a0:	ldr	w5, [sp, #108]
    16a4:	cset	w20, eq  // eq = none
    16a8:	sub	w20, w28, w20
    16ac:	cbz	w5, 16f4 <gcry_mpi_mul+0x128>
    16b0:	cmp	w5, #0x2
    16b4:	b.ne	16e4 <gcry_mpi_mul+0x118>  // b.any
    16b8:	mov	w1, #0x0                   	// #0
    16bc:	mov	w0, w20
    16c0:	bl	24 <_gcry_mpi_alloc_limb_space>
    16c4:	mov	x21, x0
    16c8:	mov	x1, #0x0                   	// #0
    16cc:	cmp	w20, w1
    16d0:	b.gt	1808 <gcry_mpi_mul+0x23c>
    16d4:	mov	x0, x19
    16d8:	mov	x19, x21
    16dc:	mov	w1, #0x0                   	// #0
    16e0:	bl	108 <_gcry_mpi_free_limb_space>
    16e4:	mov	w2, w20
    16e8:	mov	x1, x19
    16ec:	mov	x0, x23
    16f0:	bl	130 <_gcry_mpi_assign_limb_space>
    16f4:	stp	w20, w27, [x23, #4]
    16f8:	cbz	x24, 1818 <gcry_mpi_mul+0x24c>
    16fc:	mov	w1, w26
    1700:	mov	x0, x24
    1704:	ldp	x19, x20, [sp, #16]
    1708:	ldp	x21, x22, [sp, #32]
    170c:	ldp	x23, x24, [sp, #48]
    1710:	ldp	x25, x26, [sp, #64]
    1714:	ldp	x27, x28, [sp, #80]
    1718:	ldp	x29, x30, [sp], #112
    171c:	b	108 <_gcry_mpi_free_limb_space>
    1720:	ldr	w2, [x23]
    1724:	ldr	x19, [x23, #16]
    1728:	cmp	w2, w28
    172c:	b.ge	177c <gcry_mpi_mul+0x1b0>  // b.tcont
    1730:	cmp	x22, x19
    1734:	ccmp	x21, x19, #0x4, ne  // ne = any
    1738:	b.ne	1760 <gcry_mpi_mul+0x194>  // b.any
    173c:	mov	w1, w26
    1740:	mov	w0, w28
    1744:	mov	w26, #0x0                   	// #0
    1748:	bl	24 <_gcry_mpi_alloc_limb_space>
    174c:	mov	x24, #0x0                   	// #0
    1750:	mov	x19, x0
    1754:	cbz	w20, 16e4 <gcry_mpi_mul+0x118>
    1758:	mov	w5, #0x1                   	// #1
    175c:	b	1680 <gcry_mpi_mul+0xb4>
    1760:	mov	w1, w28
    1764:	mov	x0, x23
    1768:	bl	170 <_gcry_mpi_resize>
    176c:	ldr	x19, [x23, #16]
    1770:	mov	w26, #0x0                   	// #0
    1774:	mov	x24, #0x0                   	// #0
    1778:	b	17ac <gcry_mpi_mul+0x1e0>
    177c:	cmp	x22, x19
    1780:	b.ne	17c8 <gcry_mpi_mul+0x1fc>  // b.any
    1784:	mov	w0, w25
    1788:	bl	24 <_gcry_mpi_alloc_limb_space>
    178c:	cmp	x21, x19
    1790:	mov	w26, w25
    1794:	mov	x22, x0
    1798:	csel	x21, x21, x0, ne  // ne = any
    179c:	mov	x0, #0x0                   	// #0
    17a0:	cmp	w25, w0
    17a4:	b.gt	17b8 <gcry_mpi_mul+0x1ec>
    17a8:	mov	x24, x22
    17ac:	cbz	w20, 16f4 <gcry_mpi_mul+0x128>
    17b0:	mov	w5, #0x0                   	// #0
    17b4:	b	1680 <gcry_mpi_mul+0xb4>
    17b8:	ldr	x1, [x19, x0, lsl #3]
    17bc:	str	x1, [x22, x0, lsl #3]
    17c0:	add	x0, x0, #0x1
    17c4:	b	17a0 <gcry_mpi_mul+0x1d4>
    17c8:	cmp	x21, x19
    17cc:	b.ne	1770 <gcry_mpi_mul+0x1a4>  // b.any
    17d0:	mov	w1, w0
    17d4:	mov	w26, w20
    17d8:	mov	w0, w20
    17dc:	bl	24 <_gcry_mpi_alloc_limb_space>
    17e0:	mov	x21, x0
    17e4:	mov	x0, #0x0                   	// #0
    17e8:	cmp	w20, w0
    17ec:	b.gt	17f8 <gcry_mpi_mul+0x22c>
    17f0:	mov	x24, x21
    17f4:	b	17ac <gcry_mpi_mul+0x1e0>
    17f8:	ldr	x1, [x19, x0, lsl #3]
    17fc:	str	x1, [x21, x0, lsl #3]
    1800:	add	x0, x0, #0x1
    1804:	b	17e8 <gcry_mpi_mul+0x21c>
    1808:	ldr	x0, [x19, x1, lsl #3]
    180c:	str	x0, [x21, x1, lsl #3]
    1810:	add	x1, x1, #0x1
    1814:	b	16cc <gcry_mpi_mul+0x100>
    1818:	ldp	x19, x20, [sp, #16]
    181c:	ldp	x21, x22, [sp, #32]
    1820:	ldp	x23, x24, [sp, #48]
    1824:	ldp	x25, x26, [sp, #64]
    1828:	ldp	x27, x28, [sp, #80]
    182c:	ldp	x29, x30, [sp], #112
    1830:	ret

0000000000001834 <gcry_mpi_mulm>:
    1834:	stp	x29, x30, [sp, #-32]!
    1838:	mov	x29, sp
    183c:	stp	x19, x20, [sp, #16]
    1840:	mov	x19, x0
    1844:	mov	x20, x3
    1848:	bl	15cc <gcry_mpi_mul>
    184c:	mov	x2, x20
    1850:	mov	x1, x19
    1854:	mov	x0, x19
    1858:	ldp	x19, x20, [sp, #16]
    185c:	ldp	x29, x30, [sp], #32
    1860:	b	2150 <_gcry_mpi_fdiv_r>

0000000000001864 <_gcry_mpi_mod>:
    1864:	stp	x29, x30, [sp, #-32]!
    1868:	mov	x29, sp
    186c:	str	x19, [sp, #16]
    1870:	mov	x19, x0
    1874:	bl	2150 <_gcry_mpi_fdiv_r>
    1878:	str	wzr, [x19, #8]
    187c:	ldr	x19, [sp, #16]
    1880:	ldp	x29, x30, [sp], #32
    1884:	ret

0000000000001888 <_gcry_mpi_barrett_init>:
    1888:	stp	x29, x30, [sp, #-48]!
    188c:	mov	x29, sp
    1890:	stp	x19, x20, [sp, #16]
    1894:	mov	w20, w1
    1898:	str	x21, [sp, #32]
    189c:	mov	x21, x0
    18a0:	bl	7b0 <_gcry_mpi_normalize>
    18a4:	mov	x1, #0x30                  	// #48
    18a8:	mov	x0, #0x1                   	// #1
    18ac:	bl	5dbc <gcry_xcalloc>
    18b0:	mov	x19, x0
    18b4:	cbz	w20, 1948 <_gcry_mpi_barrett_init+0xc0>
    18b8:	mov	x0, x21
    18bc:	bl	338 <_gcry_mpi_copy>
    18c0:	str	x0, [x19]
    18c4:	mov	w0, #0x1                   	// #1
    18c8:	str	w0, [x19, #8]
    18cc:	ldr	w0, [x21, #4]
    18d0:	str	w0, [x19, #12]
    18d4:	add	w0, w0, #0x1
    18d8:	bl	68 <_gcry_mpi_alloc>
    18dc:	mov	x1, #0x1                   	// #1
    18e0:	mov	x20, x0
    18e4:	bl	560 <gcry_mpi_set_ui>
    18e8:	ldr	w1, [x19, #12]
    18ec:	mov	x0, x20
    18f0:	lsl	w1, w1, #1
    18f4:	bl	c30 <_gcry_mpi_lshift_limbs>
    18f8:	mov	x2, x21
    18fc:	mov	x1, x20
    1900:	mov	x0, x20
    1904:	bl	20ec <_gcry_mpi_fdiv_q>
    1908:	ldr	w0, [x19, #12]
    190c:	str	x20, [x19, #16]
    1910:	lsl	w0, w0, #1
    1914:	add	w0, w0, #0x1
    1918:	bl	68 <_gcry_mpi_alloc>
    191c:	str	x0, [x19, #24]
    1920:	ldr	w0, [x19, #12]
    1924:	lsl	w0, w0, #1
    1928:	add	w0, w0, #0x1
    192c:	bl	68 <_gcry_mpi_alloc>
    1930:	str	x0, [x19, #32]
    1934:	mov	x0, x19
    1938:	ldp	x19, x20, [sp, #16]
    193c:	ldr	x21, [sp, #32]
    1940:	ldp	x29, x30, [sp], #48
    1944:	ret
    1948:	str	x21, [x0]
    194c:	b	18cc <_gcry_mpi_barrett_init+0x44>

0000000000001950 <_gcry_mpi_barrett_free>:
    1950:	cbz	x0, 19a8 <_gcry_mpi_barrett_free+0x58>
    1954:	stp	x29, x30, [sp, #-32]!
    1958:	mov	x29, sp
    195c:	str	x19, [sp, #16]
    1960:	mov	x19, x0
    1964:	ldr	x0, [x0, #16]
    1968:	bl	230 <_gcry_mpi_free>
    196c:	ldr	x0, [x19, #24]
    1970:	bl	230 <_gcry_mpi_free>
    1974:	ldr	x0, [x19, #32]
    1978:	bl	230 <_gcry_mpi_free>
    197c:	ldr	x0, [x19, #40]
    1980:	cbz	x0, 1988 <_gcry_mpi_barrett_free+0x38>
    1984:	bl	230 <_gcry_mpi_free>
    1988:	ldr	w0, [x19, #8]
    198c:	cbz	w0, 1998 <_gcry_mpi_barrett_free+0x48>
    1990:	ldr	x0, [x19]
    1994:	bl	230 <_gcry_mpi_free>
    1998:	mov	x0, x19
    199c:	ldr	x19, [sp, #16]
    19a0:	ldp	x29, x30, [sp], #32
    19a4:	b	5db0 <gcry_free>
    19a8:	ret

00000000000019ac <_gcry_mpi_mod_barrett>:
    19ac:	stp	x29, x30, [sp, #-80]!
    19b0:	mov	x29, sp
    19b4:	stp	x21, x22, [sp, #32]
    19b8:	mov	x22, x1
    19bc:	stp	x19, x20, [sp, #16]
    19c0:	mov	x20, x0
    19c4:	mov	x19, x2
    19c8:	mov	x0, x1
    19cc:	stp	x23, x24, [sp, #48]
    19d0:	stp	x25, x26, [sp, #64]
    19d4:	ldr	w25, [x2, #12]
    19d8:	ldr	x24, [x2]
    19dc:	ldp	x23, x26, [x2, #16]
    19e0:	ldr	x21, [x2, #32]
    19e4:	bl	7b0 <_gcry_mpi_normalize>
    19e8:	ldr	w0, [x22, #4]
    19ec:	cmp	w0, w25, lsl #1
    19f0:	b.le	1a18 <_gcry_mpi_mod_barrett+0x6c>
    19f4:	mov	x2, x24
    19f8:	mov	x1, x22
    19fc:	mov	x0, x20
    1a00:	ldp	x19, x20, [sp, #16]
    1a04:	ldp	x21, x22, [sp, #32]
    1a08:	ldp	x23, x24, [sp, #48]
    1a0c:	ldp	x25, x26, [sp, #64]
    1a10:	ldp	x29, x30, [sp], #80
    1a14:	b	1864 <_gcry_mpi_mod>
    1a18:	mov	x1, x22
    1a1c:	mov	x0, x21
    1a20:	bl	4d8 <gcry_mpi_set>
    1a24:	sub	w1, w25, #0x1
    1a28:	mov	x0, x21
    1a2c:	bl	a20 <_gcry_mpi_rshift_limbs>
    1a30:	mov	x2, x23
    1a34:	mov	x1, x21
    1a38:	mov	x0, x21
    1a3c:	add	w23, w25, #0x1
    1a40:	bl	15cc <gcry_mpi_mul>
    1a44:	mov	w1, w23
    1a48:	mov	x0, x21
    1a4c:	bl	a20 <_gcry_mpi_rshift_limbs>
    1a50:	mov	x1, x22
    1a54:	mov	x0, x26
    1a58:	bl	4d8 <gcry_mpi_set>
    1a5c:	ldr	w0, [x26, #4]
    1a60:	cmp	w23, w0
    1a64:	b.ge	1a6c <_gcry_mpi_mod_barrett+0xc0>  // b.tcont
    1a68:	str	w23, [x26, #4]
    1a6c:	mov	x0, x21
    1a70:	mov	x2, x24
    1a74:	mov	x1, x21
    1a78:	bl	15cc <gcry_mpi_mul>
    1a7c:	ldr	w0, [x21, #4]
    1a80:	cmp	w23, w0
    1a84:	b.ge	1a8c <_gcry_mpi_mod_barrett+0xe0>  // b.tcont
    1a88:	str	w23, [x21, #4]
    1a8c:	mov	x0, x20
    1a90:	mov	x2, x21
    1a94:	mov	x1, x26
    1a98:	bl	1394 <gcry_mpi_sub>
    1a9c:	ldr	w0, [x20, #8]
    1aa0:	cbz	w0, 1adc <_gcry_mpi_mod_barrett+0x130>
    1aa4:	ldr	x0, [x19, #40]
    1aa8:	cbnz	x0, 1acc <_gcry_mpi_mod_barrett+0x120>
    1aac:	add	w0, w25, #0x2
    1ab0:	bl	68 <_gcry_mpi_alloc>
    1ab4:	str	x0, [x19, #40]
    1ab8:	mov	x1, #0x1                   	// #1
    1abc:	bl	560 <gcry_mpi_set_ui>
    1ac0:	ldr	x0, [x19, #40]
    1ac4:	mov	w1, w23
    1ac8:	bl	c30 <_gcry_mpi_lshift_limbs>
    1acc:	ldr	x2, [x19, #40]
    1ad0:	mov	x1, x20
    1ad4:	mov	x0, x20
    1ad8:	bl	f58 <gcry_mpi_add>
    1adc:	mov	x1, x24
    1ae0:	mov	x0, x20
    1ae4:	bl	240c <gcry_mpi_cmp>
    1ae8:	tbz	w0, #31, 1b04 <_gcry_mpi_mod_barrett+0x158>
    1aec:	ldp	x19, x20, [sp, #16]
    1af0:	ldp	x21, x22, [sp, #32]
    1af4:	ldp	x23, x24, [sp, #48]
    1af8:	ldp	x25, x26, [sp, #64]
    1afc:	ldp	x29, x30, [sp], #80
    1b00:	ret
    1b04:	mov	x2, x24
    1b08:	mov	x1, x20
    1b0c:	mov	x0, x20
    1b10:	bl	1394 <gcry_mpi_sub>
    1b14:	b	1adc <_gcry_mpi_mod_barrett+0x130>

0000000000001b18 <_gcry_mpi_mul_barrett>:
    1b18:	stp	x29, x30, [sp, #-32]!
    1b1c:	mov	x29, sp
    1b20:	stp	x19, x20, [sp, #16]
    1b24:	mov	x19, x0
    1b28:	mov	x20, x3
    1b2c:	bl	15cc <gcry_mpi_mul>
    1b30:	mov	x2, x20
    1b34:	mov	x1, x19
    1b38:	mov	x0, x19
    1b3c:	ldp	x19, x20, [sp, #16]
    1b40:	ldp	x29, x30, [sp], #32
    1b44:	b	19ac <_gcry_mpi_mod_barrett>

0000000000001b48 <gcry_mpi_gcd>:
    1b48:	stp	x29, x30, [sp, #-48]!
    1b4c:	mov	x29, sp
    1b50:	stp	x19, x20, [sp, #16]
    1b54:	mov	x19, x2
    1b58:	str	x21, [sp, #32]
    1b5c:	mov	x21, x0
    1b60:	mov	x0, x1
    1b64:	bl	338 <_gcry_mpi_copy>
    1b68:	mov	x20, x0
    1b6c:	mov	x0, x19
    1b70:	bl	338 <_gcry_mpi_copy>
    1b74:	mov	x19, x0
    1b78:	str	wzr, [x20, #8]
    1b7c:	str	wzr, [x0, #8]
    1b80:	mov	x0, x19
    1b84:	mov	x1, #0x0                   	// #0
    1b88:	bl	23a0 <gcry_mpi_cmp_ui>
    1b8c:	cbnz	w0, 1bd0 <gcry_mpi_gcd+0x88>
    1b90:	mov	x1, x20
    1b94:	mov	x0, x21
    1b98:	bl	4d8 <gcry_mpi_set>
    1b9c:	mov	x0, x20
    1ba0:	bl	230 <_gcry_mpi_free>
    1ba4:	mov	x0, x19
    1ba8:	bl	230 <_gcry_mpi_free>
    1bac:	mov	x0, x21
    1bb0:	mov	x1, #0x1                   	// #1
    1bb4:	bl	23a0 <gcry_mpi_cmp_ui>
    1bb8:	cmp	w0, #0x0
    1bbc:	cset	w0, eq  // eq = none
    1bc0:	ldp	x19, x20, [sp, #16]
    1bc4:	ldr	x21, [sp, #32]
    1bc8:	ldp	x29, x30, [sp], #48
    1bcc:	ret
    1bd0:	mov	x2, x19
    1bd4:	mov	x1, x20
    1bd8:	mov	x0, x21
    1bdc:	bl	2150 <_gcry_mpi_fdiv_r>
    1be0:	mov	x1, x19
    1be4:	mov	x0, x20
    1be8:	bl	4d8 <gcry_mpi_set>
    1bec:	mov	x1, x21
    1bf0:	mov	x0, x19
    1bf4:	bl	4d8 <gcry_mpi_set>
    1bf8:	b	1b80 <gcry_mpi_gcd+0x38>
    1bfc:	nop

0000000000001c00 <_gcry_mpi_fdiv_r_ui>:
    1c00:	stp	x29, x30, [sp, #-48]!
    1c04:	mov	x29, sp
    1c08:	stp	x19, x20, [sp, #16]
    1c0c:	mov	x20, x1
    1c10:	mov	x19, x0
    1c14:	ldr	w1, [x1, #4]
    1c18:	ldr	x0, [x20, #16]
    1c1c:	str	x21, [sp, #32]
    1c20:	mov	x21, x2
    1c24:	bl	4478 <_gcry_mpih_mod_1>
    1c28:	cbz	x0, 1c38 <_gcry_mpi_fdiv_r_ui+0x38>
    1c2c:	ldr	w1, [x20, #8]
    1c30:	cbz	w1, 1c38 <_gcry_mpi_fdiv_r_ui+0x38>
    1c34:	sub	x0, x21, x0
    1c38:	cbz	x19, 1c50 <_gcry_mpi_fdiv_r_ui+0x50>
    1c3c:	ldr	x1, [x19, #16]
    1c40:	cmp	x0, #0x0
    1c44:	str	x0, [x1]
    1c48:	cset	w1, ne  // ne = any
    1c4c:	str	w1, [x19, #4]
    1c50:	ldp	x19, x20, [sp, #16]
    1c54:	ldr	x21, [sp, #32]
    1c58:	ldp	x29, x30, [sp], #48
    1c5c:	ret

0000000000001c60 <_gcry_mpi_tdiv_qr>:
    1c60:	stp	x29, x30, [sp, #-208]!
    1c64:	mov	x29, sp
    1c68:	stp	x19, x20, [sp, #16]
    1c6c:	mov	x20, x2
    1c70:	stp	x21, x22, [sp, #32]
    1c74:	mov	x21, x0
    1c78:	ldp	w19, w0, [x2, #4]
    1c7c:	stp	x25, x26, [sp, #64]
    1c80:	stp	x27, x28, [sp, #80]
    1c84:	add	w28, w19, #0x1
    1c88:	ldp	w26, w27, [x3, #4]
    1c8c:	stp	x23, x24, [sp, #48]
    1c90:	mov	x23, x1
    1c94:	sub	w24, w28, w26
    1c98:	mov	w1, w28
    1c9c:	str	w0, [sp, #108]
    1ca0:	mov	x0, x23
    1ca4:	str	x3, [sp, #112]
    1ca8:	bl	170 <_gcry_mpi_resize>
    1cac:	cmp	w24, #0x0
    1cb0:	ldr	x3, [sp, #112]
    1cb4:	b.gt	1d20 <_gcry_mpi_tdiv_qr+0xc0>
    1cb8:	cmp	x20, x23
    1cbc:	b.ne	1ce0 <_gcry_mpi_tdiv_qr+0x80>  // b.any
    1cc0:	cbnz	x21, 1d18 <_gcry_mpi_tdiv_qr+0xb8>
    1cc4:	ldp	x19, x20, [sp, #16]
    1cc8:	ldp	x21, x22, [sp, #32]
    1ccc:	ldp	x23, x24, [sp, #48]
    1cd0:	ldp	x25, x26, [sp, #64]
    1cd4:	ldp	x27, x28, [sp, #80]
    1cd8:	ldp	x29, x30, [sp], #208
    1cdc:	ret
    1ce0:	ldr	w0, [x20, #4]
    1ce4:	str	w0, [x23, #4]
    1ce8:	ldr	w0, [x20, #8]
    1cec:	str	w0, [x23, #8]
    1cf0:	mov	x0, #0x0                   	// #0
    1cf4:	cmp	w19, w0
    1cf8:	b.le	1cc0 <_gcry_mpi_tdiv_qr+0x60>
    1cfc:	ldr	x2, [x20, #16]
    1d00:	lsl	x1, x0, #3
    1d04:	add	x0, x0, #0x1
    1d08:	ldr	x3, [x2, x1]
    1d0c:	ldr	x2, [x23, #16]
    1d10:	str	x3, [x2, x1]
    1d14:	b	1cf4 <_gcry_mpi_tdiv_qr+0x94>
    1d18:	stur	xzr, [x21, #4]
    1d1c:	b	1cc4 <_gcry_mpi_tdiv_qr+0x64>
    1d20:	cbz	x21, 1d38 <_gcry_mpi_tdiv_qr+0xd8>
    1d24:	mov	w1, w24
    1d28:	mov	x0, x21
    1d2c:	str	x3, [sp, #112]
    1d30:	bl	170 <_gcry_mpi_resize>
    1d34:	ldr	x3, [sp, #112]
    1d38:	cmp	w26, #0x1
    1d3c:	ldr	w0, [sp, #108]
    1d40:	ldr	x7, [x3, #16]
    1d44:	eor	w0, w27, w0
    1d48:	str	w0, [sp, #112]
    1d4c:	ldr	x6, [x20, #16]
    1d50:	ldr	x22, [x23, #16]
    1d54:	b.ne	1dc0 <_gcry_mpi_tdiv_qr+0x160>  // b.any
    1d58:	ldr	x2, [x7]
    1d5c:	cbz	x21, 1db0 <_gcry_mpi_tdiv_qr+0x150>
    1d60:	ldr	x20, [x21, #16]
    1d64:	mov	x3, x2
    1d68:	mov	x1, x6
    1d6c:	mov	w2, w19
    1d70:	mov	x0, x20
    1d74:	bl	4ca8 <_gcry_mpih_divmod_1>
    1d78:	add	x20, x20, w24, sxtw #3
    1d7c:	ldur	x1, [x20, #-8]
    1d80:	cmp	x1, #0x0
    1d84:	cset	w1, eq  // eq = none
    1d88:	sub	w24, w24, w1
    1d8c:	ldr	w1, [sp, #112]
    1d90:	stp	w24, w1, [x21, #4]
    1d94:	cmp	x0, #0x0
    1d98:	str	x0, [x22]
    1d9c:	cset	w0, ne  // ne = any
    1da0:	str	w0, [x23, #4]
    1da4:	ldr	w0, [sp, #108]
    1da8:	str	w0, [x23, #8]
    1dac:	b	1cc4 <_gcry_mpi_tdiv_qr+0x64>
    1db0:	mov	w1, w19
    1db4:	mov	x0, x6
    1db8:	bl	4478 <_gcry_mpih_mod_1>
    1dbc:	b	1d94 <_gcry_mpi_tdiv_qr+0x134>
    1dc0:	sxtw	x25, w26
    1dc4:	sbfiz	x24, x26, #3, #32
    1dc8:	cbz	x21, 1f80 <_gcry_mpi_tdiv_qr+0x320>
    1dcc:	ldr	x27, [x21, #16]
    1dd0:	cmp	x6, x27
    1dd4:	b.ne	1f84 <_gcry_mpi_tdiv_qr+0x324>  // b.any
    1dd8:	ldr	w1, [x21, #12]
    1ddc:	mov	w0, w19
    1de0:	stp	x7, x3, [sp, #120]
    1de4:	and	w1, w1, #0x1
    1de8:	str	w19, [sp, #144]
    1dec:	bl	24 <_gcry_mpi_alloc_limb_space>
    1df0:	ldp	x7, x3, [sp, #120]
    1df4:	mov	x6, x0
    1df8:	mov	x0, #0x0                   	// #0
    1dfc:	str	x6, [sp, #168]
    1e00:	cmp	w19, w0
    1e04:	b.gt	1f70 <_gcry_mpi_tdiv_qr+0x310>
    1e08:	mov	w20, #0x1                   	// #1
    1e0c:	add	x24, x7, x24
    1e10:	mov	x0, #0x38                  	// #56
    1e14:	ldur	x1, [x24, #-8]
    1e18:	lsr	x2, x1, x0
    1e1c:	tst	w2, #0xff
    1e20:	b.ne	1e2c <_gcry_mpi_tdiv_qr+0x1cc>  // b.any
    1e24:	subs	x0, x0, #0x8
    1e28:	b.ne	1e18 <_gcry_mpi_tdiv_qr+0x1b8>  // b.any
    1e2c:	adrp	x2, 0 <_gcry_mpi_m_check>
    1e30:	mov	w24, #0x40                  	// #64
    1e34:	sub	w24, w24, w0
    1e38:	lsr	x0, x1, x0
    1e3c:	ldr	x2, [x2]
    1e40:	ldrb	w0, [x2, x0]
    1e44:	subs	w24, w24, w0
    1e48:	b.eq	1f8c <_gcry_mpi_tdiv_qr+0x32c>  // b.none
    1e4c:	sxtw	x2, w20
    1e50:	add	x0, sp, #0x90
    1e54:	ldr	w1, [x3, #12]
    1e58:	add	w20, w20, #0x1
    1e5c:	stp	x2, x6, [sp, #120]
    1e60:	and	w1, w1, #0x1
    1e64:	str	w26, [x0, x2, lsl #2]
    1e68:	mov	w0, w26
    1e6c:	str	x7, [sp, #136]
    1e70:	bl	24 <_gcry_mpi_alloc_limb_space>
    1e74:	ldr	x2, [sp, #120]
    1e78:	add	x1, sp, #0xa8
    1e7c:	ldr	x7, [sp, #136]
    1e80:	mov	w3, w24
    1e84:	str	x0, [x1, x2, lsl #3]
    1e88:	mov	w2, w26
    1e8c:	mov	x1, x7
    1e90:	str	x0, [sp, #120]
    1e94:	bl	3488 <_gcry_mpih_lshift>
    1e98:	ldr	x6, [sp, #128]
    1e9c:	mov	w3, w24
    1ea0:	mov	w2, w19
    1ea4:	mov	x0, x22
    1ea8:	mov	x1, x6
    1eac:	bl	3488 <_gcry_mpih_lshift>
    1eb0:	ldr	x4, [sp, #120]
    1eb4:	cbz	x0, 1ec0 <_gcry_mpi_tdiv_qr+0x260>
    1eb8:	str	x0, [x22, w19, sxtw #3]
    1ebc:	mov	w19, w28
    1ec0:	mov	w5, w26
    1ec4:	mov	w3, w19
    1ec8:	mov	x2, x22
    1ecc:	mov	x0, x27
    1ed0:	mov	w1, #0x0                   	// #0
    1ed4:	bl	4670 <_gcry_mpih_divrem>
    1ed8:	cbz	x21, 1ef4 <_gcry_mpi_tdiv_qr+0x294>
    1edc:	sub	w19, w19, w26
    1ee0:	cbz	x0, 1eec <_gcry_mpi_tdiv_qr+0x28c>
    1ee4:	str	x0, [x27, w19, sxtw #3]
    1ee8:	add	w19, w19, #0x1
    1eec:	ldr	w0, [sp, #112]
    1ef0:	stp	w19, w0, [x21, #4]
    1ef4:	mov	w19, w25
    1ef8:	cmp	w25, #0x0
    1efc:	b.le	1f0c <_gcry_mpi_tdiv_qr+0x2ac>
    1f00:	sub	x25, x25, #0x1
    1f04:	ldr	x0, [x22, x25, lsl #3]
    1f08:	cbz	x0, 1ef4 <_gcry_mpi_tdiv_qr+0x294>
    1f0c:	cmp	w24, #0x0
    1f10:	ccmp	w19, #0x0, #0x4, ne  // ne = any
    1f14:	b.eq	1f40 <_gcry_mpi_tdiv_qr+0x2e0>  // b.none
    1f18:	mov	x1, x22
    1f1c:	mov	x0, x22
    1f20:	add	x22, x22, w19, sxtw #3
    1f24:	mov	w2, w19
    1f28:	mov	w3, w24
    1f2c:	bl	5b68 <_gcry_mpih_rshift>
    1f30:	ldur	x0, [x22, #-8]
    1f34:	cmp	x0, #0x0
    1f38:	cset	w0, eq  // eq = none
    1f3c:	sub	w19, w19, w0
    1f40:	ldr	w0, [sp, #108]
    1f44:	sxtw	x20, w20
    1f48:	add	x21, sp, #0xa8
    1f4c:	stp	w19, w0, [x23, #4]
    1f50:	add	x19, sp, #0x90
    1f54:	sub	x20, x20, #0x1
    1f58:	cmn	w20, #0x1
    1f5c:	b.eq	1cc4 <_gcry_mpi_tdiv_qr+0x64>  // b.none
    1f60:	ldr	w1, [x19, x20, lsl #2]
    1f64:	ldr	x0, [x21, x20, lsl #3]
    1f68:	bl	108 <_gcry_mpi_free_limb_space>
    1f6c:	b	1f54 <_gcry_mpi_tdiv_qr+0x2f4>
    1f70:	ldr	x1, [x27, x0, lsl #3]
    1f74:	str	x1, [x6, x0, lsl #3]
    1f78:	add	x0, x0, #0x1
    1f7c:	b	1e00 <_gcry_mpi_tdiv_qr+0x1a0>
    1f80:	add	x27, x22, x24
    1f84:	mov	w20, #0x0                   	// #0
    1f88:	b	1e0c <_gcry_mpi_tdiv_qr+0x1ac>
    1f8c:	cmp	x7, x22
    1f90:	b.eq	1fa0 <_gcry_mpi_tdiv_qr+0x340>  // b.none
    1f94:	cmp	x21, #0x0
    1f98:	ccmp	x27, x7, #0x0, ne  // ne = any
    1f9c:	b.ne	2000 <_gcry_mpi_tdiv_qr+0x3a0>  // b.any
    1fa0:	sxtw	x28, w20
    1fa4:	add	x0, sp, #0x90
    1fa8:	ldr	w1, [x3, #12]
    1fac:	add	w20, w20, #0x1
    1fb0:	stp	x6, x7, [sp, #120]
    1fb4:	and	w1, w1, #0x1
    1fb8:	str	w26, [x0, x28, lsl #2]
    1fbc:	mov	w0, w26
    1fc0:	bl	24 <_gcry_mpi_alloc_limb_space>
    1fc4:	mov	x4, x0
    1fc8:	ldp	x6, x7, [sp, #120]
    1fcc:	add	x0, sp, #0xa8
    1fd0:	str	x4, [x0, x28, lsl #3]
    1fd4:	mov	x0, #0x0                   	// #0
    1fd8:	cmp	w26, w0
    1fdc:	b.gt	1ff0 <_gcry_mpi_tdiv_qr+0x390>
    1fe0:	cmp	x6, x22
    1fe4:	b.eq	1ec0 <_gcry_mpi_tdiv_qr+0x260>  // b.none
    1fe8:	mov	x0, #0x0                   	// #0
    1fec:	b	2014 <_gcry_mpi_tdiv_qr+0x3b4>
    1ff0:	ldr	x1, [x7, x0, lsl #3]
    1ff4:	str	x1, [x4, x0, lsl #3]
    1ff8:	add	x0, x0, #0x1
    1ffc:	b	1fd8 <_gcry_mpi_tdiv_qr+0x378>
    2000:	mov	x4, x7
    2004:	b	1fe0 <_gcry_mpi_tdiv_qr+0x380>
    2008:	ldr	x1, [x6, x0, lsl #3]
    200c:	str	x1, [x22, x0, lsl #3]
    2010:	add	x0, x0, #0x1
    2014:	cmp	w19, w0
    2018:	b.gt	2008 <_gcry_mpi_tdiv_qr+0x3a8>
    201c:	b	1ec0 <_gcry_mpi_tdiv_qr+0x260>
	...

0000000000002028 <_gcry_mpi_fdiv_qr>:
    2028:	stp	x29, x30, [sp, #-64]!
    202c:	cmp	x3, x0
    2030:	ccmp	x3, x1, #0x4, ne  // ne = any
    2034:	mov	x29, sp
    2038:	stp	x19, x20, [sp, #16]
    203c:	mov	x20, x1
    2040:	mov	x19, x3
    2044:	stp	x21, x22, [sp, #32]
    2048:	mov	x21, x0
    204c:	mov	x22, x2
    2050:	stp	x23, x24, [sp, #48]
    2054:	ldr	w24, [x3, #8]
    2058:	b.ne	20d0 <_gcry_mpi_fdiv_qr+0xa8>  // b.any
    205c:	mov	x0, x3
    2060:	bl	338 <_gcry_mpi_copy>
    2064:	mov	x19, x0
    2068:	mov	x23, x0
    206c:	mov	x0, x21
    2070:	mov	x3, x19
    2074:	mov	x2, x22
    2078:	mov	x1, x20
    207c:	bl	1c60 <_gcry_mpi_tdiv_qr>
    2080:	ldr	w0, [x22, #8]
    2084:	cmp	w0, w24
    2088:	b.eq	20b4 <_gcry_mpi_fdiv_qr+0x8c>  // b.none
    208c:	ldr	w0, [x20, #4]
    2090:	cbz	w0, 20b4 <_gcry_mpi_fdiv_qr+0x8c>
    2094:	mov	x1, x21
    2098:	mov	x0, x21
    209c:	mov	x2, #0x1                   	// #1
    20a0:	bl	1214 <gcry_mpi_sub_ui>
    20a4:	mov	x2, x19
    20a8:	mov	x1, x20
    20ac:	mov	x0, x20
    20b0:	bl	f58 <gcry_mpi_add>
    20b4:	cbz	x23, 20d8 <_gcry_mpi_fdiv_qr+0xb0>
    20b8:	mov	x0, x23
    20bc:	ldp	x19, x20, [sp, #16]
    20c0:	ldp	x21, x22, [sp, #32]
    20c4:	ldp	x23, x24, [sp, #48]
    20c8:	ldp	x29, x30, [sp], #64
    20cc:	b	230 <_gcry_mpi_free>
    20d0:	mov	x23, #0x0                   	// #0
    20d4:	b	206c <_gcry_mpi_fdiv_qr+0x44>
    20d8:	ldp	x19, x20, [sp, #16]
    20dc:	ldp	x21, x22, [sp, #32]
    20e0:	ldp	x23, x24, [sp, #48]
    20e4:	ldp	x29, x30, [sp], #64
    20e8:	ret

00000000000020ec <_gcry_mpi_fdiv_q>:
    20ec:	stp	x29, x30, [sp, #-48]!
    20f0:	mov	x29, sp
    20f4:	stp	x19, x20, [sp, #16]
    20f8:	mov	x20, x0
    20fc:	ldr	w0, [x0, #4]
    2100:	stp	x21, x22, [sp, #32]
    2104:	mov	x21, x1
    2108:	mov	x22, x2
    210c:	bl	68 <_gcry_mpi_alloc>
    2110:	mov	x19, x0
    2114:	mov	x3, x22
    2118:	mov	x2, x21
    211c:	mov	x1, x0
    2120:	mov	x0, x20
    2124:	bl	2028 <_gcry_mpi_fdiv_qr>
    2128:	mov	x0, x19
    212c:	ldp	x19, x20, [sp, #16]
    2130:	ldp	x21, x22, [sp, #32]
    2134:	ldp	x29, x30, [sp], #48
    2138:	b	230 <_gcry_mpi_free>

000000000000213c <_gcry_mpi_tdiv_r>:
    213c:	mov	x3, x2
    2140:	mov	x2, x1
    2144:	mov	x1, x0
    2148:	mov	x0, #0x0                   	// #0
    214c:	b	1c60 <_gcry_mpi_tdiv_qr>

0000000000002150 <_gcry_mpi_fdiv_r>:
    2150:	stp	x29, x30, [sp, #-64]!
    2154:	cmp	x2, x0
    2158:	mov	x29, sp
    215c:	stp	x19, x20, [sp, #16]
    2160:	mov	x20, x0
    2164:	stp	x21, x22, [sp, #32]
    2168:	mov	x21, x1
    216c:	str	x23, [sp, #48]
    2170:	ldr	w23, [x2, #8]
    2174:	b.ne	21e4 <_gcry_mpi_fdiv_r+0x94>  // b.any
    2178:	bl	338 <_gcry_mpi_copy>
    217c:	mov	x19, x0
    2180:	mov	x22, x0
    2184:	mov	x1, x21
    2188:	mov	x0, x20
    218c:	mov	x2, x19
    2190:	bl	213c <_gcry_mpi_tdiv_r>
    2194:	ldr	w0, [x21, #8]
    2198:	cmp	w23, #0x0
    219c:	cset	w1, ne  // ne = any
    21a0:	cmp	w0, #0x0
    21a4:	cset	w0, ne  // ne = any
    21a8:	cmp	w1, w0
    21ac:	b.eq	21c8 <_gcry_mpi_fdiv_r+0x78>  // b.none
    21b0:	ldr	w0, [x20, #4]
    21b4:	cbz	w0, 21c8 <_gcry_mpi_fdiv_r+0x78>
    21b8:	mov	x2, x19
    21bc:	mov	x1, x20
    21c0:	mov	x0, x20
    21c4:	bl	f58 <gcry_mpi_add>
    21c8:	cbz	x22, 21f0 <_gcry_mpi_fdiv_r+0xa0>
    21cc:	mov	x0, x22
    21d0:	ldp	x19, x20, [sp, #16]
    21d4:	ldp	x21, x22, [sp, #32]
    21d8:	ldr	x23, [sp, #48]
    21dc:	ldp	x29, x30, [sp], #64
    21e0:	b	230 <_gcry_mpi_free>
    21e4:	mov	x19, x2
    21e8:	mov	x22, #0x0                   	// #0
    21ec:	b	2184 <_gcry_mpi_fdiv_r+0x34>
    21f0:	ldp	x19, x20, [sp, #16]
    21f4:	ldp	x21, x22, [sp, #32]
    21f8:	ldr	x23, [sp, #48]
    21fc:	ldp	x29, x30, [sp], #64
    2200:	ret

0000000000002204 <_gcry_mpi_tdiv_q_2exp>:
    2204:	stp	x29, x30, [sp, #-64]!
    2208:	mov	x29, sp
    220c:	stp	x19, x20, [sp, #16]
    2210:	ldr	w19, [x1, #4]
    2214:	stp	x21, x22, [sp, #32]
    2218:	mov	x21, x0
    221c:	str	x23, [sp, #48]
    2220:	cmp	w19, w2, lsr #6
    2224:	b.gt	2240 <_gcry_mpi_tdiv_q_2exp+0x3c>
    2228:	str	wzr, [x0, #4]
    222c:	ldp	x19, x20, [sp, #16]
    2230:	ldp	x21, x22, [sp, #32]
    2234:	ldr	x23, [sp, #48]
    2238:	ldp	x29, x30, [sp], #64
    223c:	ret
    2240:	mov	x23, x1
    2244:	lsr	w22, w2, #6
    2248:	ldr	w1, [x0]
    224c:	sub	w19, w19, w22
    2250:	mov	w20, w2
    2254:	cmp	w1, w19
    2258:	b.ge	2264 <_gcry_mpi_tdiv_q_2exp+0x60>  // b.tcont
    225c:	mov	w1, w19
    2260:	bl	170 <_gcry_mpi_resize>
    2264:	ands	w3, w20, #0x3f
    2268:	b.eq	229c <_gcry_mpi_tdiv_q_2exp+0x98>  // b.none
    226c:	ldr	x20, [x21, #16]
    2270:	ubfiz	x22, x22, #3, #26
    2274:	ldr	x1, [x23, #16]
    2278:	mov	x0, x20
    227c:	add	x20, x20, w19, sxtw #3
    2280:	mov	w2, w19
    2284:	add	x1, x1, x22
    2288:	bl	5b68 <_gcry_mpih_rshift>
    228c:	ldur	x0, [x20, #-8]
    2290:	cmp	x0, #0x0
    2294:	cset	w0, eq  // eq = none
    2298:	sub	w19, w19, w0
    229c:	str	w19, [x21, #4]
    22a0:	b	222c <_gcry_mpi_tdiv_q_2exp+0x28>

00000000000022a4 <_gcry_mpi_divisible_ui>:
    22a4:	stp	x29, x30, [sp, #-16]!
    22a8:	mov	x2, x1
    22ac:	mov	x29, sp
    22b0:	ldr	w1, [x0, #4]
    22b4:	ldr	x0, [x0, #16]
    22b8:	bl	4478 <_gcry_mpih_mod_1>
    22bc:	cmp	x0, #0x0
    22c0:	cset	w0, eq  // eq = none
    22c4:	ldp	x29, x30, [sp], #16
    22c8:	ret

00000000000022cc <gcry_mpi_div>:
    22cc:	stp	x29, x30, [sp, #-48]!
    22d0:	mov	x5, x1
    22d4:	mov	x29, sp
    22d8:	stp	x19, x20, [sp, #16]
    22dc:	mov	x19, x2
    22e0:	mov	x20, x3
    22e4:	stp	x21, x22, [sp, #32]
    22e8:	mov	x21, x0
    22ec:	cbnz	w4, 2338 <gcry_mpi_div+0x6c>
    22f0:	cbnz	x1, 2328 <gcry_mpi_div+0x5c>
    22f4:	ldr	w0, [x0, #4]
    22f8:	bl	68 <_gcry_mpi_alloc>
    22fc:	mov	x22, x0
    2300:	mov	x3, x20
    2304:	mov	x2, x19
    2308:	mov	x1, x0
    230c:	mov	x0, x21
    2310:	bl	1c60 <_gcry_mpi_tdiv_qr>
    2314:	mov	x0, x22
    2318:	ldp	x19, x20, [sp, #16]
    231c:	ldp	x21, x22, [sp, #32]
    2320:	ldp	x29, x30, [sp], #48
    2324:	b	230 <_gcry_mpi_free>
    2328:	ldp	x19, x20, [sp, #16]
    232c:	ldp	x21, x22, [sp, #32]
    2330:	ldp	x29, x30, [sp], #48
    2334:	b	1c60 <_gcry_mpi_tdiv_qr>
    2338:	cmp	w4, #0x0
    233c:	b.ge	238c <gcry_mpi_div+0xc0>  // b.tcont
    2340:	cbnz	x1, 235c <gcry_mpi_div+0x90>
    2344:	mov	x1, x19
    2348:	mov	x2, x3
    234c:	ldp	x19, x20, [sp, #16]
    2350:	ldp	x21, x22, [sp, #32]
    2354:	ldp	x29, x30, [sp], #48
    2358:	b	20ec <_gcry_mpi_fdiv_q>
    235c:	cbnz	x0, 237c <gcry_mpi_div+0xb0>
    2360:	mov	x1, x19
    2364:	mov	x2, x3
    2368:	ldp	x19, x20, [sp, #16]
    236c:	mov	x0, x5
    2370:	ldp	x21, x22, [sp, #32]
    2374:	ldp	x29, x30, [sp], #48
    2378:	b	2150 <_gcry_mpi_fdiv_r>
    237c:	ldp	x19, x20, [sp, #16]
    2380:	ldp	x21, x22, [sp, #32]
    2384:	ldp	x29, x30, [sp], #48
    2388:	b	2028 <_gcry_mpi_fdiv_qr>
    238c:	adrp	x0, 0 <_gcry_mpi_m_check>
    2390:	ldr	x0, [x0]
    2394:	bl	5f28 <_gcry_log_bug>
	...

00000000000023a0 <gcry_mpi_cmp_ui>:
    23a0:	stp	x29, x30, [sp, #-32]!
    23a4:	mov	x29, sp
    23a8:	stp	x19, x20, [sp, #16]
    23ac:	mov	x19, x0
    23b0:	mov	x20, x1
    23b4:	bl	7b0 <_gcry_mpi_normalize>
    23b8:	ldr	w0, [x19, #4]
    23bc:	cbnz	w0, 23d4 <gcry_mpi_cmp_ui+0x34>
    23c0:	cmp	x20, #0x0
    23c4:	csetm	w0, ne  // ne = any
    23c8:	ldp	x19, x20, [sp, #16]
    23cc:	ldp	x29, x30, [sp], #32
    23d0:	ret
    23d4:	ldr	w1, [x19, #8]
    23d8:	cbnz	w1, 23fc <gcry_mpi_cmp_ui+0x5c>
    23dc:	cmp	w0, #0x1
    23e0:	b.ne	2404 <gcry_mpi_cmp_ui+0x64>  // b.any
    23e4:	ldr	x1, [x19, #16]
    23e8:	ldr	x1, [x1]
    23ec:	cmp	x1, x20
    23f0:	b.hi	23c8 <gcry_mpi_cmp_ui+0x28>  // b.pmore
    23f4:	csetm	w0, cc  // cc = lo, ul, last
    23f8:	b	23c8 <gcry_mpi_cmp_ui+0x28>
    23fc:	mov	w0, #0xffffffff            	// #-1
    2400:	b	23c8 <gcry_mpi_cmp_ui+0x28>
    2404:	mov	w0, #0x1                   	// #1
    2408:	b	23c8 <gcry_mpi_cmp_ui+0x28>

000000000000240c <gcry_mpi_cmp>:
    240c:	stp	x29, x30, [sp, #-32]!
    2410:	mov	x29, sp
    2414:	stp	x19, x20, [sp, #16]
    2418:	mov	x20, x0
    241c:	mov	x19, x1
    2420:	cbz	x0, 242c <gcry_mpi_cmp+0x20>
    2424:	ldr	w0, [x0, #12]
    2428:	tbnz	w0, #2, 243c <gcry_mpi_cmp+0x30>
    242c:	cbz	x19, 24bc <gcry_mpi_cmp+0xb0>
    2430:	ldr	w0, [x19, #12]
    2434:	tbz	w0, #2, 24bc <gcry_mpi_cmp+0xb0>
    2438:	cbz	x20, 2464 <gcry_mpi_cmp+0x58>
    243c:	ldr	w0, [x20, #12]
    2440:	tbz	w0, #2, 2458 <gcry_mpi_cmp+0x4c>
    2444:	cbz	x19, 2450 <gcry_mpi_cmp+0x44>
    2448:	ldr	w0, [x19, #12]
    244c:	tbnz	w0, #2, 2474 <gcry_mpi_cmp+0x68>
    2450:	mov	w0, #0xffffffff            	// #-1
    2454:	b	2468 <gcry_mpi_cmp+0x5c>
    2458:	cbz	x19, 2474 <gcry_mpi_cmp+0x68>
    245c:	ldr	w0, [x19, #12]
    2460:	tbz	w0, #2, 2474 <gcry_mpi_cmp+0x68>
    2464:	mov	w0, #0x1                   	// #1
    2468:	ldp	x19, x20, [sp, #16]
    246c:	ldp	x29, x30, [sp], #32
    2470:	ret
    2474:	ldr	w0, [x19, #8]
    2478:	ldr	w2, [x20, #8]
    247c:	orr	w1, w2, w0
    2480:	cbnz	w1, 248c <gcry_mpi_cmp+0x80>
    2484:	mov	w0, #0x0                   	// #0
    2488:	b	2468 <gcry_mpi_cmp+0x5c>
    248c:	cmp	w2, w0
    2490:	b.lt	2450 <gcry_mpi_cmp+0x44>  // b.tstop
    2494:	b.gt	2464 <gcry_mpi_cmp+0x58>
    2498:	add	w2, w2, #0x7
    249c:	mov	w0, #0x8                   	// #8
    24a0:	ldr	x1, [x19, #16]
    24a4:	sdiv	w2, w2, w0
    24a8:	ldr	x0, [x20, #16]
    24ac:	ldp	x19, x20, [sp, #16]
    24b0:	sxtw	x2, w2
    24b4:	ldp	x29, x30, [sp], #32
    24b8:	b	0 <grub_memcmp>
    24bc:	mov	x0, x20
    24c0:	bl	7b0 <_gcry_mpi_normalize>
    24c4:	mov	x0, x19
    24c8:	bl	7b0 <_gcry_mpi_normalize>
    24cc:	ldp	w2, w1, [x20, #4]
    24d0:	ldp	w0, w3, [x19, #4]
    24d4:	cbnz	w1, 24ec <gcry_mpi_cmp+0xe0>
    24d8:	cbnz	w3, 2464 <gcry_mpi_cmp+0x58>
    24dc:	cmp	w2, w0
    24e0:	b.eq	24f8 <gcry_mpi_cmp+0xec>  // b.none
    24e4:	sub	w0, w2, w0
    24e8:	b	2468 <gcry_mpi_cmp+0x5c>
    24ec:	cbz	w3, 2450 <gcry_mpi_cmp+0x44>
    24f0:	cmp	w2, w0
    24f4:	b.ne	2544 <gcry_mpi_cmp+0x138>  // b.any
    24f8:	cbz	w2, 2484 <gcry_mpi_cmp+0x78>
    24fc:	ldr	x0, [x19, #16]
    2500:	sub	w2, w2, #0x1
    2504:	ldr	x3, [x20, #16]
    2508:	sxtw	x2, w2
    250c:	add	x0, x0, #0x8
    2510:	tbnz	w2, #31, 2484 <gcry_mpi_cmp+0x78>
    2514:	ldr	x5, [x3, x2, lsl #3]
    2518:	sub	x2, x2, #0x1
    251c:	ldr	x4, [x0, x2, lsl #3]
    2520:	cmp	x5, x4
    2524:	b.eq	2510 <gcry_mpi_cmp+0x104>  // b.none
    2528:	mov	w0, #0xffffffff            	// #-1
    252c:	cneg	w0, w0, hi  // hi = pmore
    2530:	cmp	w1, #0x0
    2534:	cset	w1, ne  // ne = any
    2538:	cmp	w1, w0, lsr #31
    253c:	b.eq	2464 <gcry_mpi_cmp+0x58>  // b.none
    2540:	b	2450 <gcry_mpi_cmp+0x44>
    2544:	add	w0, w2, w0
    2548:	b	2468 <gcry_mpi_cmp+0x5c>

000000000000254c <gcry_mpi_invm>:
    254c:	stp	x29, x30, [sp, #-128]!
    2550:	mov	x29, sp
    2554:	stp	x19, x20, [sp, #16]
    2558:	mov	x19, x2
    255c:	stp	x21, x22, [sp, #32]
    2560:	stp	x23, x24, [sp, #48]
    2564:	stp	x25, x26, [sp, #64]
    2568:	stp	x27, x28, [sp, #80]
    256c:	str	x0, [sp, #112]
    2570:	mov	x0, x1
    2574:	bl	338 <_gcry_mpi_copy>
    2578:	mov	x22, x0
    257c:	mov	x0, x19
    2580:	bl	338 <_gcry_mpi_copy>
    2584:	mov	x23, x0
    2588:	mov	x0, x22
    258c:	mov	w1, #0x0                   	// #0
    2590:	bl	888 <gcry_mpi_test_bit>
    2594:	cbz	w0, 2780 <gcry_mpi_invm+0x234>
    2598:	mov	w1, #0x0                   	// #0
    259c:	mov	x0, x23
    25a0:	bl	888 <gcry_mpi_test_bit>
    25a4:	mov	w24, w0
    25a8:	mov	x0, #0x1                   	// #1
    25ac:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    25b0:	mov	x25, x0
    25b4:	cbz	w24, 27b4 <gcry_mpi_invm+0x268>
    25b8:	mov	x27, #0x0                   	// #0
    25bc:	mov	x0, x22
    25c0:	bl	338 <_gcry_mpi_copy>
    25c4:	str	x0, [sp, #96]
    25c8:	mov	x0, x23
    25cc:	bl	338 <_gcry_mpi_copy>
    25d0:	mov	x28, x0
    25d4:	cbnz	w24, 27c4 <gcry_mpi_invm+0x278>
    25d8:	ldr	w0, [x22, #4]
    25dc:	bl	68 <_gcry_mpi_alloc>
    25e0:	mov	x26, x0
    25e4:	mov	x2, x22
    25e8:	mov	x1, x25
    25ec:	bl	1394 <gcry_mpi_sub>
    25f0:	mov	x0, x23
    25f4:	bl	338 <_gcry_mpi_copy>
    25f8:	mov	w1, #0x0                   	// #0
    25fc:	str	x0, [sp, #104]
    2600:	mov	x0, x22
    2604:	bl	888 <gcry_mpi_test_bit>
    2608:	cbz	w0, 27d4 <gcry_mpi_invm+0x288>
    260c:	mov	x0, #0x0                   	// #0
    2610:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    2614:	mov	x19, x0
    2618:	cbnz	w24, 27cc <gcry_mpi_invm+0x280>
    261c:	mov	x0, #0x1                   	// #1
    2620:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    2624:	mov	x21, x0
    2628:	mov	w0, #0x1                   	// #1
    262c:	str	w0, [x21, #8]
    2630:	mov	x0, x23
    2634:	bl	338 <_gcry_mpi_copy>
    2638:	mov	x20, x0
    263c:	ldr	w0, [x0, #8]
    2640:	cmp	w0, #0x0
    2644:	cset	w0, eq  // eq = none
    2648:	str	w0, [x20, #8]
    264c:	mov	x0, x20
    2650:	mov	w1, #0x0                   	// #0
    2654:	bl	888 <gcry_mpi_test_bit>
    2658:	cbz	w0, 27fc <gcry_mpi_invm+0x2b0>
    265c:	ldr	w0, [x20, #8]
    2660:	cbnz	w0, 28a8 <gcry_mpi_invm+0x35c>
    2664:	mov	x1, x19
    2668:	mov	x0, x25
    266c:	bl	4d8 <gcry_mpi_set>
    2670:	cbnz	w24, 2680 <gcry_mpi_invm+0x134>
    2674:	mov	x1, x21
    2678:	mov	x0, x27
    267c:	bl	4d8 <gcry_mpi_set>
    2680:	ldr	x0, [sp, #96]
    2684:	mov	x1, x20
    2688:	bl	4d8 <gcry_mpi_set>
    268c:	mov	x2, x28
    2690:	mov	x1, x25
    2694:	mov	x0, x19
    2698:	bl	1394 <gcry_mpi_sub>
    269c:	cbnz	w24, 26b0 <gcry_mpi_invm+0x164>
    26a0:	mov	x2, x26
    26a4:	mov	x1, x27
    26a8:	mov	x0, x21
    26ac:	bl	1394 <gcry_mpi_sub>
    26b0:	ldp	x1, x2, [sp, #96]
    26b4:	mov	x0, x20
    26b8:	bl	1394 <gcry_mpi_sub>
    26bc:	ldr	w0, [x19, #8]
    26c0:	cbz	w0, 26e8 <gcry_mpi_invm+0x19c>
    26c4:	mov	x2, x23
    26c8:	mov	x1, x19
    26cc:	mov	x0, x19
    26d0:	bl	f58 <gcry_mpi_add>
    26d4:	cbnz	w24, 26e8 <gcry_mpi_invm+0x19c>
    26d8:	mov	x2, x22
    26dc:	mov	x1, x21
    26e0:	mov	x0, x21
    26e4:	bl	1394 <gcry_mpi_sub>
    26e8:	mov	x0, x20
    26ec:	mov	x1, #0x0                   	// #0
    26f0:	bl	23a0 <gcry_mpi_cmp_ui>
    26f4:	cbnz	w0, 27fc <gcry_mpi_invm+0x2b0>
    26f8:	ldr	x0, [sp, #112]
    26fc:	mov	x1, x25
    2700:	bl	4d8 <gcry_mpi_set>
    2704:	mov	x0, x25
    2708:	bl	230 <_gcry_mpi_free>
    270c:	mov	x0, x28
    2710:	bl	230 <_gcry_mpi_free>
    2714:	mov	x0, x19
    2718:	bl	230 <_gcry_mpi_free>
    271c:	cbnz	w24, 2738 <gcry_mpi_invm+0x1ec>
    2720:	mov	x0, x27
    2724:	bl	230 <_gcry_mpi_free>
    2728:	mov	x0, x26
    272c:	bl	230 <_gcry_mpi_free>
    2730:	mov	x0, x21
    2734:	bl	230 <_gcry_mpi_free>
    2738:	ldr	x0, [sp, #96]
    273c:	bl	230 <_gcry_mpi_free>
    2740:	ldr	x0, [sp, #104]
    2744:	bl	230 <_gcry_mpi_free>
    2748:	mov	x0, x20
    274c:	bl	230 <_gcry_mpi_free>
    2750:	mov	x0, x22
    2754:	bl	230 <_gcry_mpi_free>
    2758:	mov	x0, x23
    275c:	bl	230 <_gcry_mpi_free>
    2760:	mov	w0, #0x1                   	// #1
    2764:	ldp	x19, x20, [sp, #16]
    2768:	ldp	x21, x22, [sp, #32]
    276c:	ldp	x23, x24, [sp, #48]
    2770:	ldp	x25, x26, [sp, #64]
    2774:	ldp	x27, x28, [sp, #80]
    2778:	ldp	x29, x30, [sp], #128
    277c:	ret
    2780:	mov	x0, x23
    2784:	mov	w1, #0x0                   	// #0
    2788:	bl	888 <gcry_mpi_test_bit>
    278c:	cbnz	w0, 2598 <gcry_mpi_invm+0x4c>
    2790:	mov	x1, x22
    2794:	mov	x0, x22
    2798:	mov	w2, #0x1                   	// #1
    279c:	bl	a68 <gcry_mpi_rshift>
    27a0:	mov	x1, x23
    27a4:	mov	x0, x23
    27a8:	mov	w2, #0x1                   	// #1
    27ac:	bl	a68 <gcry_mpi_rshift>
    27b0:	b	2588 <gcry_mpi_invm+0x3c>
    27b4:	mov	x0, #0x0                   	// #0
    27b8:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    27bc:	mov	x27, x0
    27c0:	b	25bc <gcry_mpi_invm+0x70>
    27c4:	mov	x26, #0x0                   	// #0
    27c8:	b	25f0 <gcry_mpi_invm+0xa4>
    27cc:	mov	x21, #0x0                   	// #0
    27d0:	b	2630 <gcry_mpi_invm+0xe4>
    27d4:	mov	x0, #0x1                   	// #1
    27d8:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    27dc:	mov	x19, x0
    27e0:	cbnz	w24, 2864 <gcry_mpi_invm+0x318>
    27e4:	mov	x0, #0x0                   	// #0
    27e8:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    27ec:	mov	x21, x0
    27f0:	mov	x0, x22
    27f4:	bl	338 <_gcry_mpi_copy>
    27f8:	mov	x20, x0
    27fc:	mov	x0, x19
    2800:	mov	w1, #0x0                   	// #0
    2804:	cbnz	w24, 2880 <gcry_mpi_invm+0x334>
    2808:	bl	888 <gcry_mpi_test_bit>
    280c:	cbz	w0, 286c <gcry_mpi_invm+0x320>
    2810:	mov	x2, x23
    2814:	mov	x1, x19
    2818:	mov	x0, x19
    281c:	bl	f58 <gcry_mpi_add>
    2820:	mov	x2, x22
    2824:	mov	x1, x21
    2828:	mov	x0, x21
    282c:	bl	1394 <gcry_mpi_sub>
    2830:	mov	x1, x19
    2834:	mov	x0, x19
    2838:	mov	w2, #0x1                   	// #1
    283c:	bl	a68 <gcry_mpi_rshift>
    2840:	mov	x1, x21
    2844:	mov	x0, x21
    2848:	mov	w2, #0x1                   	// #1
    284c:	bl	a68 <gcry_mpi_rshift>
    2850:	mov	x1, x20
    2854:	mov	x0, x20
    2858:	mov	w2, #0x1                   	// #1
    285c:	bl	a68 <gcry_mpi_rshift>
    2860:	b	264c <gcry_mpi_invm+0x100>
    2864:	mov	x21, #0x0                   	// #0
    2868:	b	27f0 <gcry_mpi_invm+0x2a4>
    286c:	mov	x0, x21
    2870:	mov	w1, #0x0                   	// #0
    2874:	bl	888 <gcry_mpi_test_bit>
    2878:	cbnz	w0, 2810 <gcry_mpi_invm+0x2c4>
    287c:	b	2830 <gcry_mpi_invm+0x2e4>
    2880:	bl	888 <gcry_mpi_test_bit>
    2884:	cbz	w0, 2898 <gcry_mpi_invm+0x34c>
    2888:	mov	x2, x23
    288c:	mov	x1, x19
    2890:	mov	x0, x19
    2894:	bl	f58 <gcry_mpi_add>
    2898:	mov	x1, x19
    289c:	mov	x0, x19
    28a0:	mov	w2, #0x1                   	// #1
    28a4:	b	284c <gcry_mpi_invm+0x300>
    28a8:	mov	x0, x28
    28ac:	mov	x2, x19
    28b0:	mov	x1, x23
    28b4:	bl	1394 <gcry_mpi_sub>
    28b8:	ldr	w3, [x22, #8]
    28bc:	cmp	w3, #0x0
    28c0:	cset	w0, eq  // eq = none
    28c4:	str	w0, [x22, #8]
    28c8:	cbnz	w24, 28e4 <gcry_mpi_invm+0x398>
    28cc:	mov	x2, x21
    28d0:	mov	x1, x22
    28d4:	mov	x0, x26
    28d8:	str	w3, [sp, #124]
    28dc:	bl	1394 <gcry_mpi_sub>
    28e0:	ldr	w3, [sp, #124]
    28e4:	str	w3, [x22, #8]
    28e8:	mov	x1, x20
    28ec:	ldr	w2, [x20, #8]
    28f0:	str	w2, [sp, #124]
    28f4:	cmp	w2, #0x0
    28f8:	cset	w0, eq  // eq = none
    28fc:	str	w0, [x20, #8]
    2900:	ldr	x0, [sp, #104]
    2904:	bl	4d8 <gcry_mpi_set>
    2908:	ldr	w2, [sp, #124]
    290c:	str	w2, [x20, #8]
    2910:	b	268c <gcry_mpi_invm+0x140>
    2914:	nop

0000000000002918 <gcry_mpi_powm>:
    2918:	stp	x29, x30, [sp, #-256]!
    291c:	mov	x29, sp
    2920:	stp	x19, x20, [sp, #16]
    2924:	mov	x20, x3
    2928:	ldr	w19, [x3, #4]
    292c:	stp	x21, x22, [sp, #32]
    2930:	mov	x22, x0
    2934:	stp	x23, x24, [sp, #48]
    2938:	mov	x23, x1
    293c:	stp	x25, x26, [sp, #64]
    2940:	ldr	w25, [x2, #4]
    2944:	stp	x27, x28, [sp, #80]
    2948:	cbz	x1, 2964 <gcry_mpi_powm+0x4c>
    294c:	ldr	w24, [x1, #12]
    2950:	and	w24, w24, #0x1
    2954:	cbnz	w19, 296c <gcry_mpi_powm+0x54>
    2958:	adrp	x0, 0 <_gcry_mpi_m_check>
    295c:	ldr	x0, [x0]
    2960:	bl	0 <grub_fatal>
    2964:	mov	w24, #0x0                   	// #0
    2968:	b	2954 <gcry_mpi_powm+0x3c>
    296c:	cbnz	w25, 29d8 <gcry_mpi_powm+0xc0>
    2970:	cmp	w19, #0x1
    2974:	b.eq	29a4 <gcry_mpi_powm+0x8c>  // b.none
    2978:	ldr	w0, [x22]
    297c:	mov	w1, #0x1                   	// #1
    2980:	str	w1, [x22, #4]
    2984:	cmp	w0, #0x0
    2988:	b.gt	2994 <gcry_mpi_powm+0x7c>
    298c:	mov	x0, x22
    2990:	bl	170 <_gcry_mpi_resize>
    2994:	ldr	x0, [x22, #16]
    2998:	mov	x1, #0x1                   	// #1
    299c:	str	x1, [x0]
    29a0:	b	29b8 <gcry_mpi_powm+0xa0>
    29a4:	ldr	x0, [x20, #16]
    29a8:	ldr	x0, [x0]
    29ac:	cmp	x0, #0x1
    29b0:	b.ne	2978 <gcry_mpi_powm+0x60>  // b.any
    29b4:	str	wzr, [x22, #4]
    29b8:	str	wzr, [x22, #8]
    29bc:	ldp	x19, x20, [sp, #16]
    29c0:	ldp	x21, x22, [sp, #32]
    29c4:	ldp	x23, x24, [sp, #48]
    29c8:	ldp	x25, x26, [sp, #64]
    29cc:	ldp	x27, x28, [sp, #80]
    29d0:	ldp	x29, x30, [sp], #256
    29d4:	ret
    29d8:	ldr	w0, [x20, #12]
    29dc:	ldr	x28, [x22, #16]
    29e0:	ands	w0, w0, #0x1
    29e4:	str	w0, [sp, #100]
    29e8:	csel	w0, w19, wzr, ne  // ne = any
    29ec:	str	w0, [sp, #200]
    29f0:	ldr	w0, [x20, #8]
    29f4:	ldr	w27, [sp, #100]
    29f8:	str	w0, [sp, #192]
    29fc:	ldr	w0, [x2, #12]
    2a00:	mov	x1, x27
    2a04:	str	w0, [sp, #188]
    2a08:	ldr	x0, [x2, #16]
    2a0c:	str	x0, [sp, #104]
    2a10:	mov	w0, w19
    2a14:	bl	24 <_gcry_mpi_alloc_limb_space>
    2a18:	ldr	x1, [x20, #16]
    2a1c:	mov	x21, x0
    2a20:	sxtw	x0, w19
    2a24:	str	x0, [sp, #112]
    2a28:	sbfiz	x0, x19, #3, #32
    2a2c:	str	x0, [sp, #128]
    2a30:	add	x0, x1, w19, sxtw #3
    2a34:	ldur	x3, [x0, #-8]
    2a38:	mov	x0, #0x38                  	// #56
    2a3c:	lsr	x2, x3, x0
    2a40:	tst	w2, #0xff
    2a44:	b.ne	2a50 <gcry_mpi_powm+0x138>  // b.any
    2a48:	subs	x0, x0, #0x8
    2a4c:	b.ne	2a3c <gcry_mpi_powm+0x124>  // b.any
    2a50:	adrp	x4, 0 <_gcry_mpi_m_check>
    2a54:	mov	w2, #0x40                  	// #64
    2a58:	sub	w2, w2, w0
    2a5c:	lsr	x0, x3, x0
    2a60:	ldr	x4, [x4]
    2a64:	str	x4, [sp, #120]
    2a68:	ldrb	w0, [x4, x0]
    2a6c:	subs	w0, w2, w0
    2a70:	str	w0, [sp, #160]
    2a74:	b.eq	2b78 <gcry_mpi_powm+0x260>  // b.none
    2a78:	mov	w3, w0
    2a7c:	mov	w2, w19
    2a80:	mov	x0, x21
    2a84:	bl	3488 <_gcry_mpih_lshift>
    2a88:	ldp	w26, w0, [x23, #4]
    2a8c:	str	w0, [sp, #204]
    2a90:	cmp	w19, w26
    2a94:	b.ge	2c14 <gcry_mpi_powm+0x2fc>  // b.tcont
    2a98:	cmp	w24, #0x0
    2a9c:	mov	w1, w24
    2aa0:	csinc	w0, wzr, w26, eq  // eq = none
    2aa4:	str	w0, [sp, #176]
    2aa8:	add	w0, w26, #0x1
    2aac:	bl	24 <_gcry_mpi_alloc_limb_space>
    2ab0:	mov	x20, x0
    2ab4:	mov	x0, #0x0                   	// #0
    2ab8:	cmp	w26, w0
    2abc:	b.gt	2b80 <gcry_mpi_powm+0x268>
    2ac0:	ldr	x0, [sp, #128]
    2ac4:	mov	w5, w19
    2ac8:	mov	x4, x21
    2acc:	mov	w3, w26
    2ad0:	mov	x2, x20
    2ad4:	add	x0, x20, x0
    2ad8:	mov	w1, #0x0                   	// #0
    2adc:	bl	4670 <_gcry_mpih_divrem>
    2ae0:	ldr	x0, [sp, #112]
    2ae4:	mov	w26, w0
    2ae8:	cmp	w0, #0x0
    2aec:	b.gt	2b94 <gcry_mpi_powm+0x27c>
    2af0:	mov	x2, x20
    2af4:	cbnz	w26, 2c24 <gcry_mpi_powm+0x30c>
    2af8:	mov	x23, #0x0                   	// #0
    2afc:	stur	xzr, [x22, #4]
    2b00:	str	wzr, [sp, #100]
    2b04:	stp	xzr, xzr, [sp, #144]
    2b08:	str	wzr, [sp, #180]
    2b0c:	cbz	x21, 2b1c <gcry_mpi_powm+0x204>
    2b10:	ldr	w1, [sp, #200]
    2b14:	mov	x0, x21
    2b18:	bl	108 <_gcry_mpi_free_limb_space>
    2b1c:	cbz	x20, 2b2c <gcry_mpi_powm+0x214>
    2b20:	ldr	w1, [sp, #176]
    2b24:	mov	x0, x20
    2b28:	bl	108 <_gcry_mpi_free_limb_space>
    2b2c:	ldr	x0, [sp, #144]
    2b30:	cbz	x0, 2b3c <gcry_mpi_powm+0x224>
    2b34:	ldr	w1, [sp, #180]
    2b38:	bl	108 <_gcry_mpi_free_limb_space>
    2b3c:	ldr	x0, [sp, #152]
    2b40:	cbz	x0, 2b4c <gcry_mpi_powm+0x234>
    2b44:	ldr	w1, [sp, #100]
    2b48:	bl	108 <_gcry_mpi_free_limb_space>
    2b4c:	cbz	x23, 29bc <gcry_mpi_powm+0xa4>
    2b50:	mov	x0, x23
    2b54:	mov	w1, #0x0                   	// #0
    2b58:	bl	108 <_gcry_mpi_free_limb_space>
    2b5c:	b	29bc <gcry_mpi_powm+0xa4>
    2b60:	ldr	x2, [x1, x0, lsl #3]
    2b64:	str	x2, [x21, x0, lsl #3]
    2b68:	add	x0, x0, #0x1
    2b6c:	cmp	w19, w0
    2b70:	b.gt	2b60 <gcry_mpi_powm+0x248>
    2b74:	b	2a88 <gcry_mpi_powm+0x170>
    2b78:	mov	x0, #0x0                   	// #0
    2b7c:	b	2b6c <gcry_mpi_powm+0x254>
    2b80:	ldr	x1, [x23, #16]
    2b84:	ldr	x1, [x1, x0, lsl #3]
    2b88:	str	x1, [x20, x0, lsl #3]
    2b8c:	add	x0, x0, #0x1
    2b90:	b	2ab8 <gcry_mpi_powm+0x1a0>
    2b94:	sub	x0, x0, #0x1
    2b98:	ldr	x1, [x20, x0, lsl #3]
    2b9c:	cbz	x1, 2ae4 <gcry_mpi_powm+0x1cc>
    2ba0:	cmp	x28, x20
    2ba4:	b.eq	2c30 <gcry_mpi_powm+0x318>  // b.none
    2ba8:	str	x20, [sp, #168]
    2bac:	ldr	x0, [sp, #104]
    2bb0:	cmp	x28, x0
    2bb4:	b.ne	2cb0 <gcry_mpi_powm+0x398>  // b.any
    2bb8:	ldr	w0, [sp, #188]
    2bbc:	ands	w1, w0, #0x1
    2bc0:	csel	w0, w25, wzr, ne  // ne = any
    2bc4:	str	w0, [sp, #180]
    2bc8:	mov	w0, w25
    2bcc:	bl	24 <_gcry_mpi_alloc_limb_space>
    2bd0:	str	x0, [sp, #104]
    2bd4:	mov	x0, #0x0                   	// #0
    2bd8:	cmp	w25, w0
    2bdc:	b.gt	2c9c <gcry_mpi_powm+0x384>
    2be0:	ldr	x0, [sp, #104]
    2be4:	str	x0, [sp, #144]
    2be8:	cmp	x28, x21
    2bec:	b.ne	2cd8 <gcry_mpi_powm+0x3c0>  // b.any
    2bf0:	cbz	x28, 2cbc <gcry_mpi_powm+0x3a4>
    2bf4:	adrp	x0, 0 <_gcry_mpi_m_check>
    2bf8:	mov	w2, #0xa0                  	// #160
    2bfc:	ldr	x3, [x0]
    2c00:	adrp	x0, 0 <_gcry_mpi_m_check>
    2c04:	ldr	x1, [x0]
    2c08:	adrp	x0, 0 <_gcry_mpi_m_check>
    2c0c:	ldr	x0, [x0]
    2c10:	b	2c4c <gcry_mpi_powm+0x334>
    2c14:	mov	x20, #0x0                   	// #0
    2c18:	str	wzr, [sp, #176]
    2c1c:	ldr	x2, [x23, #16]
    2c20:	b	2af4 <gcry_mpi_powm+0x1dc>
    2c24:	cmp	x2, x28
    2c28:	b.ne	2c90 <gcry_mpi_powm+0x378>  // b.any
    2c2c:	cbz	x20, 2c50 <gcry_mpi_powm+0x338>
    2c30:	adrp	x0, 0 <_gcry_mpi_m_check>
    2c34:	mov	w2, #0x91                  	// #145
    2c38:	ldr	x3, [x0]
    2c3c:	adrp	x0, 0 <_gcry_mpi_m_check>
    2c40:	ldr	x1, [x0]
    2c44:	adrp	x0, 0 <_gcry_mpi_m_check>
    2c48:	ldr	x0, [x0]
    2c4c:	bl	0 <_gcry_assert_failed>
    2c50:	cmp	w24, #0x0
    2c54:	mov	w1, w24
    2c58:	csel	w0, w26, wzr, ne  // ne = any
    2c5c:	str	x2, [sp, #136]
    2c60:	str	w0, [sp, #176]
    2c64:	mov	w0, w26
    2c68:	bl	24 <_gcry_mpi_alloc_limb_space>
    2c6c:	mov	x20, x0
    2c70:	ldr	x2, [sp, #136]
    2c74:	mov	x0, #0x0                   	// #0
    2c78:	cmp	w26, w0
    2c7c:	b.le	2ba8 <gcry_mpi_powm+0x290>
    2c80:	ldr	x1, [x2, x0, lsl #3]
    2c84:	str	x1, [x20, x0, lsl #3]
    2c88:	add	x0, x0, #0x1
    2c8c:	b	2c78 <gcry_mpi_powm+0x360>
    2c90:	str	x20, [sp, #168]
    2c94:	mov	x20, x2
    2c98:	b	2bac <gcry_mpi_powm+0x294>
    2c9c:	ldr	x2, [sp, #104]
    2ca0:	ldr	x1, [x28, x0, lsl #3]
    2ca4:	str	x1, [x2, x0, lsl #3]
    2ca8:	add	x0, x0, #0x1
    2cac:	b	2bd8 <gcry_mpi_powm+0x2c0>
    2cb0:	str	xzr, [sp, #144]
    2cb4:	str	wzr, [sp, #180]
    2cb8:	b	2be8 <gcry_mpi_powm+0x2d0>
    2cbc:	ldr	w1, [sp, #100]
    2cc0:	mov	w0, w19
    2cc4:	bl	24 <_gcry_mpi_alloc_limb_space>
    2cc8:	mov	x21, x0
    2ccc:	mov	x0, #0x0                   	// #0
    2cd0:	cmp	w19, w0
    2cd4:	b.gt	2ee4 <gcry_mpi_powm+0x5cc>
    2cd8:	ldr	w0, [x22]
    2cdc:	lsl	w24, w19, #1
    2ce0:	cmp	w0, w19, lsl #1
    2ce4:	b.ge	2cf8 <gcry_mpi_powm+0x3e0>  // b.tcont
    2ce8:	mov	w1, w24
    2cec:	mov	x0, x22
    2cf0:	bl	170 <_gcry_mpi_resize>
    2cf4:	ldr	x28, [x22, #16]
    2cf8:	mov	x0, #0x0                   	// #0
    2cfc:	cmp	w26, w0
    2d00:	b.gt	2ef8 <gcry_mpi_powm+0x5e0>
    2d04:	ldr	w1, [sp, #100]
    2d08:	add	w0, w24, #0x2
    2d0c:	cmp	w1, #0x0
    2d10:	csel	w1, w1, w0, eq  // eq = none
    2d14:	str	w1, [sp, #100]
    2d18:	mov	w1, w27
    2d1c:	bl	24 <_gcry_mpi_alloc_limb_space>
    2d20:	str	x0, [sp, #152]
    2d24:	mov	x2, #0x28                  	// #40
    2d28:	add	x0, sp, #0xd8
    2d2c:	mov	w1, #0x0                   	// #0
    2d30:	bl	0 <grub_memset>
    2d34:	ldr	x0, [sp, #104]
    2d38:	ldr	x0, [x0]
    2d3c:	tbz	w0, #0, 2f08 <gcry_mpi_powm+0x5f0>
    2d40:	ldr	w0, [x23, #8]
    2d44:	cmp	w0, #0x0
    2d48:	cset	w0, ne  // ne = any
    2d4c:	str	w0, [sp, #196]
    2d50:	sub	w0, w25, #0x1
    2d54:	str	w0, [sp, #136]
    2d58:	ldr	x0, [sp, #104]
    2d5c:	ldr	w1, [sp, #136]
    2d60:	ldr	x25, [x0, w1, sxtw #3]
    2d64:	mov	x0, #0x38                  	// #56
    2d68:	lsr	x1, x25, x0
    2d6c:	tst	w1, #0xff
    2d70:	b.ne	2d7c <gcry_mpi_powm+0x464>  // b.any
    2d74:	subs	x0, x0, #0x8
    2d78:	b.ne	2d68 <gcry_mpi_powm+0x450>  // b.any
    2d7c:	ldr	x2, [sp, #120]
    2d80:	mov	w1, #0x40                  	// #64
    2d84:	sub	w1, w1, w0
    2d88:	lsr	x0, x25, x0
    2d8c:	ldr	x24, [sp, #152]
    2d90:	mov	x23, #0x0                   	// #0
    2d94:	ldrb	w27, [x2, x0]
    2d98:	str	wzr, [sp, #184]
    2d9c:	sub	w27, w1, w27
    2da0:	lsl	x25, x25, x27
    2da4:	lsl	x0, x25, #1
    2da8:	str	x0, [sp, #120]
    2dac:	mov	w0, #0x3f                  	// #63
    2db0:	sub	w0, w0, w27
    2db4:	str	w0, [sp, #164]
    2db8:	mov	w27, w26
    2dbc:	ldr	w0, [sp, #188]
    2dc0:	and	w0, w0, #0x1
    2dc4:	str	w0, [sp, #188]
    2dc8:	ldr	w0, [sp, #164]
    2dcc:	cbnz	w0, 2df8 <gcry_mpi_powm+0x4e0>
    2dd0:	ldr	w0, [sp, #136]
    2dd4:	subs	w0, w0, #0x1
    2dd8:	str	w0, [sp, #136]
    2ddc:	b.mi	2f7c <gcry_mpi_powm+0x664>  // b.first
    2de0:	ldr	w1, [sp, #136]
    2de4:	ldr	x0, [sp, #104]
    2de8:	ldr	x0, [x0, w1, sxtw #3]
    2dec:	str	x0, [sp, #120]
    2df0:	mov	w0, #0x40                  	// #64
    2df4:	str	w0, [sp, #164]
    2df8:	lsl	w25, w27, #1
    2dfc:	cmp	w27, #0xf
    2e00:	b.gt	2f10 <gcry_mpi_powm+0x5f8>
    2e04:	mov	w2, w27
    2e08:	mov	x1, x28
    2e0c:	mov	x0, x24
    2e10:	bl	3948 <_gcry_mpih_sqr_n_basecase>
    2e14:	cmp	w19, w25
    2e18:	b.ge	2e40 <gcry_mpi_powm+0x528>  // b.tcont
    2e1c:	ldr	x0, [sp, #128]
    2e20:	mov	w3, w25
    2e24:	mov	w5, w19
    2e28:	mov	x4, x21
    2e2c:	mov	x2, x24
    2e30:	mov	w25, w19
    2e34:	add	x0, x24, x0
    2e38:	mov	w1, #0x0                   	// #0
    2e3c:	bl	4670 <_gcry_mpih_divrem>
    2e40:	ldr	x0, [sp, #120]
    2e44:	ldr	w1, [sp, #188]
    2e48:	lsr	x0, x0, #63
    2e4c:	orr	w0, w1, w0
    2e50:	cbz	w0, 2eb8 <gcry_mpi_powm+0x5a0>
    2e54:	cmp	w26, #0xf
    2e58:	b.gt	2f5c <gcry_mpi_powm+0x644>
    2e5c:	mov	w4, w26
    2e60:	mov	x3, x20
    2e64:	mov	w2, w25
    2e68:	mov	x1, x24
    2e6c:	mov	x0, x28
    2e70:	bl	3e70 <_gcry_mpih_mul>
    2e74:	add	w3, w26, w25
    2e78:	cmp	w19, w3
    2e7c:	b.ge	2ea0 <gcry_mpi_powm+0x588>  // b.tcont
    2e80:	ldr	x0, [sp, #128]
    2e84:	mov	w5, w19
    2e88:	mov	x4, x21
    2e8c:	mov	x2, x28
    2e90:	add	x0, x28, x0
    2e94:	mov	w1, #0x0                   	// #0
    2e98:	bl	4670 <_gcry_mpih_divrem>
    2e9c:	mov	w3, w19
    2ea0:	ldr	x0, [sp, #120]
    2ea4:	tbz	x0, #63, 2eb8 <gcry_mpi_powm+0x5a0>
    2ea8:	mov	x0, x24
    2eac:	mov	w25, w3
    2eb0:	mov	x24, x28
    2eb4:	mov	x28, x0
    2eb8:	ldr	x0, [sp, #120]
    2ebc:	mov	w27, w25
    2ec0:	lsl	x0, x0, #1
    2ec4:	str	x0, [sp, #120]
    2ec8:	ldr	w0, [sp, #164]
    2ecc:	sub	w0, w0, #0x1
    2ed0:	str	w0, [sp, #164]
    2ed4:	mov	x0, x28
    2ed8:	mov	x28, x24
    2edc:	mov	x24, x0
    2ee0:	b	2dc8 <gcry_mpi_powm+0x4b0>
    2ee4:	lsl	x1, x0, #3
    2ee8:	ldr	x1, [x1]
    2eec:	str	x1, [x21, x0, lsl #3]
    2ef0:	add	x0, x0, #0x1
    2ef4:	b	2cd0 <gcry_mpi_powm+0x3b8>
    2ef8:	ldr	x1, [x20, x0, lsl #3]
    2efc:	str	x1, [x28, x0, lsl #3]
    2f00:	add	x0, x0, #0x1
    2f04:	b	2cfc <gcry_mpi_powm+0x3e4>
    2f08:	str	wzr, [sp, #196]
    2f0c:	b	2d50 <gcry_mpi_powm+0x438>
    2f10:	cbnz	x23, 2f40 <gcry_mpi_powm+0x628>
    2f14:	mov	w0, w25
    2f18:	mov	w1, #0x0                   	// #0
    2f1c:	bl	24 <_gcry_mpi_alloc_limb_space>
    2f20:	mov	x23, x0
    2f24:	str	w25, [sp, #184]
    2f28:	mov	x3, x23
    2f2c:	mov	w2, w27
    2f30:	mov	x1, x28
    2f34:	mov	x0, x24
    2f38:	bl	3a2c <_gcry_mpih_sqr_n>
    2f3c:	b	2e14 <gcry_mpi_powm+0x4fc>
    2f40:	ldr	w0, [sp, #184]
    2f44:	cmp	w0, w25
    2f48:	b.ge	2f28 <gcry_mpi_powm+0x610>  // b.tcont
    2f4c:	mov	x0, x23
    2f50:	mov	w1, #0x0                   	// #0
    2f54:	bl	108 <_gcry_mpi_free_limb_space>
    2f58:	b	2f14 <gcry_mpi_powm+0x5fc>
    2f5c:	add	x5, sp, #0xd8
    2f60:	mov	w4, w26
    2f64:	mov	x3, x20
    2f68:	mov	w2, w25
    2f6c:	mov	x1, x24
    2f70:	mov	x0, x28
    2f74:	bl	3fc0 <_gcry_mpih_mul_karatsuba_case>
    2f78:	b	2e74 <gcry_mpi_powm+0x55c>
    2f7c:	ldr	w1, [sp, #160]
    2f80:	ldr	x0, [x22, #16]
    2f84:	cbz	w1, 2fb4 <gcry_mpi_powm+0x69c>
    2f88:	mov	x3, x1
    2f8c:	mov	w2, w27
    2f90:	mov	x1, x28
    2f94:	bl	3488 <_gcry_mpih_lshift>
    2f98:	ldr	x28, [x22, #16]
    2f9c:	cbz	x0, 2fa8 <gcry_mpi_powm+0x690>
    2fa0:	str	x0, [x28, w27, sxtw #3]
    2fa4:	add	w27, w27, #0x1
    2fa8:	cmp	w19, w27
    2fac:	b.gt	2ff0 <gcry_mpi_powm+0x6d8>
    2fb0:	b	2fc4 <gcry_mpi_powm+0x6ac>
    2fb4:	cmp	x28, x0
    2fb8:	b.ne	30c4 <gcry_mpi_powm+0x7ac>  // b.any
    2fbc:	cmp	w27, w19
    2fc0:	b.lt	3004 <gcry_mpi_powm+0x6ec>  // b.tstop
    2fc4:	ldr	x0, [sp, #128]
    2fc8:	mov	w3, w27
    2fcc:	mov	w5, w19
    2fd0:	mov	x4, x21
    2fd4:	mov	x2, x28
    2fd8:	add	x0, x28, x0
    2fdc:	mov	w1, #0x0                   	// #0
    2fe0:	bl	4670 <_gcry_mpih_divrem>
    2fe4:	ldr	w0, [sp, #160]
    2fe8:	mov	w27, w19
    2fec:	cbz	w0, 3004 <gcry_mpi_powm+0x6ec>
    2ff0:	ldr	w3, [sp, #160]
    2ff4:	mov	w2, w27
    2ff8:	mov	x1, x28
    2ffc:	mov	x0, x28
    3000:	bl	5b68 <_gcry_mpih_rshift>
    3004:	sxtw	x2, w27
    3008:	mov	w20, w2
    300c:	cmp	w2, #0x0
    3010:	b.le	3020 <gcry_mpi_powm+0x708>
    3014:	sub	x2, x2, #0x1
    3018:	ldr	x0, [x28, x2, lsl #3]
    301c:	cbz	x0, 3008 <gcry_mpi_powm+0x6f0>
    3020:	add	x0, sp, #0xd8
    3024:	bl	3df8 <_gcry_mpih_release_karatsuba_ctx>
    3028:	ldr	w0, [sp, #196]
    302c:	cmp	w20, #0x0
    3030:	csel	w0, w0, wzr, ne  // ne = any
    3034:	cbz	w0, 3148 <gcry_mpi_powm+0x830>
    3038:	ldr	w0, [sp, #160]
    303c:	cbz	w0, 3054 <gcry_mpi_powm+0x73c>
    3040:	mov	x3, x0
    3044:	mov	w2, w19
    3048:	mov	x1, x21
    304c:	mov	x0, x21
    3050:	bl	5b68 <_gcry_mpih_rshift>
    3054:	mov	w3, w20
    3058:	mov	x2, x28
    305c:	mov	x1, x21
    3060:	mov	x0, x28
    3064:	bl	443c <_gcry_mpih_sub_n>
    3068:	cmp	w20, w19
    306c:	b.eq	30e4 <gcry_mpi_powm+0x7cc>  // b.none
    3070:	add	x1, x21, w20, sxtw #3
    3074:	sub	w19, w19, w20
    3078:	ldr	x2, [x21, w20, sxtw #3]
    307c:	add	x20, x28, w20, sxtw #3
    3080:	add	x1, x1, #0x8
    3084:	subs	x3, x2, x0
    3088:	str	x3, [x20], #8
    308c:	cmp	x2, x0
    3090:	b.cc	30dc <gcry_mpi_powm+0x7c4>  // b.lo, b.ul, b.last
    3094:	cmp	x20, x1
    3098:	b.eq	30e4 <gcry_mpi_powm+0x7cc>  // b.none
    309c:	sub	w19, w19, #0x1
    30a0:	mov	x0, #0x0                   	// #0
    30a4:	b	313c <gcry_mpi_powm+0x824>
    30a8:	ldr	x3, [x28, x1, lsl #3]
    30ac:	str	x3, [x0, x1, lsl #3]
    30b0:	add	x1, x1, #0x1
    30b4:	cmp	w27, w1
    30b8:	b.gt	30a8 <gcry_mpi_powm+0x790>
    30bc:	mov	x28, x0
    30c0:	b	2fbc <gcry_mpi_powm+0x6a4>
    30c4:	mov	x1, #0x0                   	// #0
    30c8:	b	30b4 <gcry_mpi_powm+0x79c>
    30cc:	ldr	x0, [x1], #8
    30d0:	sub	x2, x0, #0x1
    30d4:	str	x2, [x20], #8
    30d8:	cbnz	x0, 3094 <gcry_mpi_powm+0x77c>
    30dc:	subs	w19, w19, #0x1
    30e0:	b.ne	30cc <gcry_mpi_powm+0x7b4>  // b.any
    30e4:	ldr	w20, [sp, #112]
    30e8:	cmp	w20, #0x0
    30ec:	b.le	3104 <gcry_mpi_powm+0x7ec>
    30f0:	ldr	x0, [sp, #112]
    30f4:	sub	x0, x0, #0x1
    30f8:	str	x0, [sp, #112]
    30fc:	ldr	x0, [x28, x0, lsl #3]
    3100:	cbz	x0, 30e4 <gcry_mpi_powm+0x7cc>
    3104:	ldr	x0, [x22, #16]
    3108:	cmp	x0, x28
    310c:	b.eq	3154 <gcry_mpi_powm+0x83c>  // b.none
    3110:	adrp	x0, 0 <_gcry_mpi_m_check>
    3114:	mov	w2, #0x145                 	// #325
    3118:	ldr	x3, [x0]
    311c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3120:	ldr	x1, [x0]
    3124:	adrp	x0, 0 <_gcry_mpi_m_check>
    3128:	ldr	x0, [x0]
    312c:	b	2c4c <gcry_mpi_powm+0x334>
    3130:	ldr	x2, [x1, x0, lsl #3]
    3134:	str	x2, [x20, x0, lsl #3]
    3138:	add	x0, x0, #0x1
    313c:	cmp	w19, w0
    3140:	b.gt	3130 <gcry_mpi_powm+0x818>
    3144:	b	30e4 <gcry_mpi_powm+0x7cc>
    3148:	ldr	w0, [sp, #204]
    314c:	str	w0, [sp, #192]
    3150:	b	3104 <gcry_mpi_powm+0x7ec>
    3154:	ldr	w0, [sp, #192]
    3158:	stp	w20, w0, [x22, #4]
    315c:	ldr	x20, [sp, #168]
    3160:	b	2b0c <gcry_mpi_powm+0x1f4>
    3164:	nop
	...

00000000000031a0 <_gcry_mpi_mulpowm>:
    31a0:	stp	x29, x30, [sp, #-144]!
    31a4:	mov	x29, sp
    31a8:	stp	x23, x24, [sp, #48]
    31ac:	mov	x23, x3
    31b0:	str	x2, [sp, #120]
    31b4:	sub	x2, x1, #0x8
    31b8:	stp	x19, x20, [sp, #16]
    31bc:	stp	x21, x22, [sp, #32]
    31c0:	mov	x22, x0
    31c4:	mov	x0, #0x0                   	// #0
    31c8:	stp	x25, x26, [sp, #64]
    31cc:	stp	x27, x28, [sp, #80]
    31d0:	str	x1, [sp, #104]
    31d4:	mov	w24, w0
    31d8:	add	x0, x0, #0x1
    31dc:	ldr	x1, [x2, x0, lsl #3]
    31e0:	cbnz	x1, 31d4 <_gcry_mpi_mulpowm+0x34>
    31e4:	cbnz	w24, 324c <_gcry_mpi_mulpowm+0xac>
    31e8:	adrp	x0, 0 <_gcry_mpi_m_check>
    31ec:	mov	w2, #0x52                  	// #82
    31f0:	ldr	x3, [x0]
    31f4:	adrp	x0, 0 <_gcry_mpi_m_check>
    31f8:	ldr	x1, [x0]
    31fc:	adrp	x0, 0 <_gcry_mpi_m_check>
    3200:	ldr	x0, [x0]
    3204:	bl	0 <_gcry_assert_failed>
    3208:	bl	7ec <gcry_mpi_get_nbits>
    320c:	cmp	w21, w0
    3210:	csel	w21, w21, w0, ge  // ge = tcont
    3214:	mov	w1, w19
    3218:	add	x19, x19, #0x1
    321c:	ldr	x0, [x20, x19, lsl #3]
    3220:	cbnz	x0, 3208 <_gcry_mpi_mulpowm+0x68>
    3224:	cmp	w24, w1
    3228:	b.eq	3260 <_gcry_mpi_mulpowm+0xc0>  // b.none
    322c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3230:	mov	w2, #0x5a                  	// #90
    3234:	ldr	x3, [x0]
    3238:	adrp	x0, 0 <_gcry_mpi_m_check>
    323c:	ldr	x1, [x0]
    3240:	adrp	x0, 0 <_gcry_mpi_m_check>
    3244:	ldr	x0, [x0]
    3248:	b	3204 <_gcry_mpi_mulpowm+0x64>
    324c:	ldr	x0, [sp, #120]
    3250:	mov	x19, #0x0                   	// #0
    3254:	mov	w21, #0x0                   	// #0
    3258:	sub	x20, x0, #0x8
    325c:	b	3214 <_gcry_mpi_mulpowm+0x74>
    3260:	cbnz	w21, 3284 <_gcry_mpi_mulpowm+0xe4>
    3264:	adrp	x0, 0 <_gcry_mpi_m_check>
    3268:	mov	w2, #0x5b                  	// #91
    326c:	ldr	x3, [x0]
    3270:	adrp	x0, 0 <_gcry_mpi_m_check>
    3274:	ldr	x1, [x0]
    3278:	adrp	x0, 0 <_gcry_mpi_m_check>
    327c:	ldr	x0, [x0]
    3280:	b	3204 <_gcry_mpi_mulpowm+0x64>
    3284:	cmp	w24, #0x9
    3288:	b.le	32ac <_gcry_mpi_mulpowm+0x10c>
    328c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3290:	mov	w2, #0x5c                  	// #92
    3294:	ldr	x3, [x0]
    3298:	adrp	x0, 0 <_gcry_mpi_m_check>
    329c:	ldr	x1, [x0]
    32a0:	adrp	x0, 0 <_gcry_mpi_m_check>
    32a4:	ldr	x0, [x0]
    32a8:	b	3204 <_gcry_mpi_mulpowm+0x64>
    32ac:	mov	w20, #0x1                   	// #1
    32b0:	mov	x1, #0x8                   	// #8
    32b4:	lsl	w28, w20, w24
    32b8:	sxtw	x0, w28
    32bc:	bl	5dbc <gcry_xcalloc>
    32c0:	mov	x19, x0
    32c4:	ldr	w0, [x23, #4]
    32c8:	add	w0, w0, w20
    32cc:	bl	68 <_gcry_mpi_alloc>
    32d0:	mov	x1, #0x1                   	// #1
    32d4:	mov	x25, x0
    32d8:	mov	x0, x22
    32dc:	bl	560 <gcry_mpi_set_ui>
    32e0:	sub	w0, w24, #0x1
    32e4:	str	w0, [sp, #132]
    32e8:	mov	x1, x22
    32ec:	mov	x3, x23
    32f0:	mov	x2, x22
    32f4:	mov	x0, x25
    32f8:	bl	1834 <gcry_mpi_mulm>
    32fc:	ldrsw	x27, [sp, #132]
    3300:	sub	w1, w21, w20
    3304:	mov	w26, #0x0                   	// #0
    3308:	ldr	x0, [sp, #120]
    330c:	str	w1, [sp, #112]
    3310:	lsl	w26, w26, #1
    3314:	ldr	x0, [x0, x27, lsl #3]
    3318:	bl	888 <gcry_mpi_test_bit>
    331c:	ldr	w1, [sp, #112]
    3320:	cbz	w0, 3328 <_gcry_mpi_mulpowm+0x188>
    3324:	orr	w26, w26, #0x1
    3328:	sub	x27, x27, #0x1
    332c:	cmn	w27, #0x1
    3330:	b.ne	3308 <_gcry_mpi_mulpowm+0x168>  // b.any
    3334:	cmp	w28, w26
    3338:	b.hi	335c <_gcry_mpi_mulpowm+0x1bc>  // b.pmore
    333c:	adrp	x0, 0 <_gcry_mpi_m_check>
    3340:	mov	w2, #0x69                  	// #105
    3344:	ldr	x3, [x0]
    3348:	adrp	x0, 0 <_gcry_mpi_m_check>
    334c:	ldr	x1, [x0]
    3350:	adrp	x0, 0 <_gcry_mpi_m_check>
    3354:	ldr	x0, [x0]
    3358:	b	3204 <_gcry_mpi_mulpowm+0x64>
    335c:	sbfiz	x27, x26, #3, #32
    3360:	add	x0, x19, w26, sxtw #3
    3364:	str	x0, [sp, #112]
    3368:	ldr	x0, [x19, x27]
    336c:	cbnz	x0, 3380 <_gcry_mpi_mulpowm+0x1e0>
    3370:	cbnz	w26, 33e0 <_gcry_mpi_mulpowm+0x240>
    3374:	mov	x0, #0x1                   	// #1
    3378:	bl	5f8 <_gcry_mpi_alloc_set_ui>
    337c:	str	x0, [x19]
    3380:	ldr	x2, [x19, x27]
    3384:	mov	x3, x23
    3388:	mov	x1, x25
    338c:	mov	x0, x22
    3390:	add	w20, w20, #0x1
    3394:	bl	1834 <gcry_mpi_mulm>
    3398:	cmp	w21, w20
    339c:	b.ge	32e8 <_gcry_mpi_mulpowm+0x148>  // b.tcont
    33a0:	mov	x20, #0x0                   	// #0
    33a4:	mov	x0, x25
    33a8:	bl	230 <_gcry_mpi_free>
    33ac:	ldr	x0, [x19, x20, lsl #3]
    33b0:	add	x20, x20, #0x1
    33b4:	bl	230 <_gcry_mpi_free>
    33b8:	cmp	w28, w20
    33bc:	b.gt	33ac <_gcry_mpi_mulpowm+0x20c>
    33c0:	mov	x0, x19
    33c4:	ldp	x19, x20, [sp, #16]
    33c8:	ldp	x21, x22, [sp, #32]
    33cc:	ldp	x23, x24, [sp, #48]
    33d0:	ldp	x25, x26, [sp, #64]
    33d4:	ldp	x27, x28, [sp, #80]
    33d8:	ldp	x29, x30, [sp], #144
    33dc:	b	5db0 <gcry_free>
    33e0:	mov	x5, #0x0                   	// #0
    33e4:	asr	w0, w26, w5
    33e8:	tbz	w0, #0, 3414 <_gcry_mpi_mulpowm+0x274>
    33ec:	ldr	x0, [sp, #112]
    33f0:	ldr	x1, [x0]
    33f4:	cbnz	x1, 3434 <_gcry_mpi_mulpowm+0x294>
    33f8:	ldr	x0, [sp, #104]
    33fc:	str	x5, [sp, #136]
    3400:	ldr	x0, [x0, x5, lsl #3]
    3404:	bl	338 <_gcry_mpi_copy>
    3408:	ldr	x1, [sp, #112]
    340c:	str	x0, [x1]
    3410:	ldr	x5, [sp, #136]
    3414:	add	x5, x5, #0x1
    3418:	cmp	w24, w5
    341c:	b.gt	33e4 <_gcry_mpi_mulpowm+0x244>
    3420:	ldr	x0, [x19, x27]
    3424:	cbnz	x0, 3380 <_gcry_mpi_mulpowm+0x1e0>
    3428:	bl	68 <_gcry_mpi_alloc>
    342c:	str	x0, [x19, x27]
    3430:	b	3380 <_gcry_mpi_mulpowm+0x1e0>
    3434:	ldr	x0, [sp, #104]
    3438:	mov	x3, x23
    343c:	str	x5, [sp, #136]
    3440:	ldr	x2, [x0, x5, lsl #3]
    3444:	mov	x0, x1
    3448:	bl	1834 <gcry_mpi_mulm>
    344c:	b	3410 <_gcry_mpi_mulpowm+0x270>
	...

0000000000003488 <_gcry_mpih_lshift>:
    3488:	sub	w4, w2, #0x1
    348c:	mov	w9, #0x40                  	// #64
    3490:	sub	w9, w9, w3
    3494:	add	x7, x0, #0x8
    3498:	sxtw	x5, w4
    349c:	ldr	x8, [x1, w4, sxtw #3]
    34a0:	mov	x6, x5
    34a4:	lsr	x0, x8, x9
    34a8:	sub	x6, x6, #0x1
    34ac:	lsl	x11, x8, x3
    34b0:	tbz	w6, #31, 34d8 <_gcry_mpih_lshift+0x50>
    34b4:	mov	w1, w4
    34b8:	mov	x3, #0xfffffffffffffff8    	// #-8
    34bc:	sub	x5, x5, #0x1
    34c0:	cmp	w2, #0x0
    34c4:	mul	x1, x1, x3
    34c8:	add	x5, x7, x5, lsl #3
    34cc:	csel	x1, x1, xzr, gt
    34d0:	str	x11, [x5, x1]
    34d4:	ret
    34d8:	ldr	x8, [x1, x6, lsl #3]
    34dc:	lsr	x10, x8, x9
    34e0:	orr	x10, x10, x11
    34e4:	str	x10, [x7, x6, lsl #3]
    34e8:	b	34a8 <_gcry_mpih_lshift+0x20>
    34ec:	stp	x29, x30, [sp, #-64]!
    34f0:	mov	x29, sp
    34f4:	stp	x19, x20, [sp, #16]
    34f8:	mov	w20, w3
    34fc:	mov	x19, x0
    3500:	ldr	x3, [x2]
    3504:	stp	x21, x22, [sp, #32]
    3508:	mov	x21, x1
    350c:	stp	x23, x24, [sp, #48]
    3510:	mov	x22, x2
    3514:	cmp	x3, #0x1
    3518:	b.hi	357c <_gcry_mpih_lshift+0xf4>  // b.pmore
    351c:	mov	x0, #0x0                   	// #0
    3520:	b.eq	3544 <_gcry_mpih_lshift+0xbc>  // b.none
    3524:	cmp	w20, w0
    3528:	b.le	354c <_gcry_mpih_lshift+0xc4>
    352c:	str	xzr, [x19, x0, lsl #3]
    3530:	add	x0, x0, #0x1
    3534:	b	3524 <_gcry_mpih_lshift+0x9c>
    3538:	ldr	x1, [x21, x0, lsl #3]
    353c:	str	x1, [x19, x0, lsl #3]
    3540:	add	x0, x0, #0x1
    3544:	cmp	w20, w0
    3548:	b.gt	3538 <_gcry_mpih_lshift+0xb0>
    354c:	mov	x0, #0x0                   	// #0
    3550:	sbfiz	x24, x20, #3, #32
    3554:	mov	x23, #0x1                   	// #1
    3558:	str	x0, [x19, x24]
    355c:	add	x19, x19, #0x8
    3560:	cmp	w20, w23
    3564:	b.gt	3588 <_gcry_mpih_lshift+0x100>
    3568:	ldp	x19, x20, [sp, #16]
    356c:	ldp	x21, x22, [sp, #32]
    3570:	ldp	x23, x24, [sp, #48]
    3574:	ldp	x29, x30, [sp], #64
    3578:	ret
    357c:	mov	w2, w20
    3580:	bl	429c <_gcry_mpih_mul_1>
    3584:	b	3550 <_gcry_mpih_lshift+0xc8>
    3588:	ldr	x3, [x22, x23, lsl #3]
    358c:	cmp	x3, #0x1
    3590:	b.hi	35bc <_gcry_mpih_lshift+0x134>  // b.pmore
    3594:	b.ne	35d0 <_gcry_mpih_lshift+0x148>  // b.any
    3598:	mov	w3, w20
    359c:	mov	x2, x21
    35a0:	mov	x1, x19
    35a4:	mov	x0, x19
    35a8:	bl	4404 <_gcry_mpih_add_n>
    35ac:	add	x23, x23, #0x1
    35b0:	str	x0, [x19, x24]
    35b4:	add	x19, x19, #0x8
    35b8:	b	3560 <_gcry_mpih_lshift+0xd8>
    35bc:	mov	w2, w20
    35c0:	mov	x1, x21
    35c4:	mov	x0, x19
    35c8:	bl	430c <_gcry_mpih_addmul_1>
    35cc:	b	35ac <_gcry_mpih_lshift+0x124>
    35d0:	mov	x0, #0x0                   	// #0
    35d4:	b	35ac <_gcry_mpih_lshift+0x124>
    35d8:	stp	x29, x30, [sp, #-144]!
    35dc:	mov	x29, sp
    35e0:	stp	x19, x20, [sp, #16]
    35e4:	mov	x19, x0
    35e8:	mov	w20, w3
    35ec:	stp	x21, x22, [sp, #32]
    35f0:	stp	x23, x24, [sp, #48]
    35f4:	mov	x23, x1
    35f8:	mov	x24, x2
    35fc:	stp	x25, x26, [sp, #64]
    3600:	stp	x27, x28, [sp, #80]
    3604:	tbz	w20, #0, 3680 <_gcry_mpih_lshift+0x1f8>
    3608:	sub	w21, w3, #0x1
    360c:	mov	w3, w21
    3610:	cmp	w21, #0xf
    3614:	b.gt	3678 <_gcry_mpih_lshift+0x1f0>
    3618:	bl	34ec <_gcry_mpih_lshift+0x64>
    361c:	sbfiz	x25, x21, #3, #32
    3620:	add	x22, x19, w21, sxtw #3
    3624:	mov	w2, w21
    3628:	mov	x1, x23
    362c:	mov	x0, x22
    3630:	ldr	x3, [x24, x25]
    3634:	bl	430c <_gcry_mpih_addmul_1>
    3638:	lsl	w1, w21, #1
    363c:	mov	w2, w20
    3640:	add	w20, w20, w21
    3644:	str	x0, [x19, w1, sxtw #3]
    3648:	mov	x1, x24
    364c:	mov	x0, x22
    3650:	ldr	x3, [x23, x25]
    3654:	bl	430c <_gcry_mpih_addmul_1>
    3658:	str	x0, [x19, w20, sxtw #3]
    365c:	ldp	x19, x20, [sp, #16]
    3660:	ldp	x21, x22, [sp, #32]
    3664:	ldp	x23, x24, [sp, #48]
    3668:	ldp	x25, x26, [sp, #64]
    366c:	ldp	x27, x28, [sp, #80]
    3670:	ldp	x29, x30, [sp], #144
    3674:	ret
    3678:	bl	35d8 <_gcry_mpih_lshift+0x150>
    367c:	b	361c <_gcry_mpih_lshift+0x194>
    3680:	asr	w25, w3, #1
    3684:	sxtw	x0, w3
    3688:	add	x22, x19, w3, sxtw #3
    368c:	and	w27, w3, #0x1
    3690:	add	x1, x1, w25, sxtw #3
    3694:	stp	x0, x1, [sp, #128]
    3698:	sbfiz	x0, x20, #3, #32
    369c:	str	x0, [sp, #104]
    36a0:	sxtw	x0, w25
    36a4:	str	x0, [sp, #120]
    36a8:	sbfiz	x0, x25, #3, #32
    36ac:	str	x0, [sp, #112]
    36b0:	add	x26, x2, w25, sxtw #3
    36b4:	mov	x21, x4
    36b8:	mov	w3, w25
    36bc:	mov	x2, x26
    36c0:	cmp	w25, #0xf
    36c4:	mov	x0, x22
    36c8:	b.gt	3830 <_gcry_mpih_lshift+0x3a8>
    36cc:	bl	34ec <_gcry_mpih_lshift+0x64>
    36d0:	sub	w4, w25, #0x1
    36d4:	add	x2, x23, #0x8
    36d8:	ldr	x1, [sp, #136]
    36dc:	sxtw	x28, w4
    36e0:	mov	x0, x28
    36e4:	tbz	w0, #31, 3838 <_gcry_mpih_lshift+0x3b0>
    36e8:	mov	w3, w25
    36ec:	mov	x2, x23
    36f0:	mov	x0, x19
    36f4:	bl	443c <_gcry_mpih_sub_n>
    36f8:	add	x0, x24, #0x8
    36fc:	tbz	w28, #31, 386c <_gcry_mpih_lshift+0x3e4>
    3700:	ldr	x0, [sp, #112]
    3704:	mov	w3, w25
    3708:	mov	x2, x24
    370c:	mov	x1, x26
    3710:	eor	w27, w27, #0x1
    3714:	add	x0, x19, x0
    3718:	bl	443c <_gcry_mpih_sub_n>
    371c:	ldr	x0, [sp, #112]
    3720:	cmp	w25, #0xf
    3724:	add	x26, x19, x0
    3728:	b.gt	38a0 <_gcry_mpih_lshift+0x418>
    372c:	mov	w3, w25
    3730:	mov	x2, x26
    3734:	mov	x1, x19
    3738:	mov	x0, x21
    373c:	bl	34ec <_gcry_mpih_lshift+0x64>
    3740:	mov	x0, #0x0                   	// #0
    3744:	cmp	w25, w0
    3748:	b.gt	38c0 <_gcry_mpih_lshift+0x438>
    374c:	ldp	x0, x1, [sp, #120]
    3750:	mov	w3, w25
    3754:	add	x0, x0, x1
    3758:	mov	x1, x22
    375c:	lsl	x28, x0, #3
    3760:	add	x0, x19, x0, lsl #3
    3764:	mov	x2, x0
    3768:	str	x0, [sp, #120]
    376c:	mov	x0, x22
    3770:	bl	4404 <_gcry_mpih_add_n>
    3774:	str	x0, [sp, #128]
    3778:	mov	w3, w20
    377c:	mov	x2, x21
    3780:	mov	x1, x26
    3784:	mov	x0, x26
    3788:	cbz	w27, 38d0 <_gcry_mpih_lshift+0x448>
    378c:	bl	443c <_gcry_mpih_sub_n>
    3790:	ldr	x1, [sp, #128]
    3794:	sub	x27, x1, x0
    3798:	cmp	w25, #0xf
    379c:	b.gt	38e0 <_gcry_mpih_lshift+0x458>
    37a0:	mov	w3, w25
    37a4:	mov	x2, x24
    37a8:	mov	x1, x23
    37ac:	mov	x0, x21
    37b0:	bl	34ec <_gcry_mpih_lshift+0x64>
    37b4:	mov	w3, w20
    37b8:	mov	x2, x21
    37bc:	mov	x1, x26
    37c0:	mov	x0, x26
    37c4:	bl	4404 <_gcry_mpih_add_n>
    37c8:	adds	x0, x27, x0
    37cc:	b.ne	3900 <_gcry_mpih_lshift+0x478>  // b.any
    37d0:	mov	x0, #0x0                   	// #0
    37d4:	cmp	w25, w0
    37d8:	b.gt	3938 <_gcry_mpih_lshift+0x4b0>
    37dc:	ldr	x0, [sp, #112]
    37e0:	mov	w3, w25
    37e4:	mov	x1, x26
    37e8:	add	x2, x21, x0
    37ec:	mov	x0, x26
    37f0:	bl	4404 <_gcry_mpih_add_n>
    37f4:	cbz	x0, 365c <_gcry_mpih_lshift+0x1d4>
    37f8:	ldr	x0, [sp, #104]
    37fc:	ldr	x1, [sp, #104]
    3800:	ldr	x0, [x19, x0]
    3804:	adds	x0, x0, #0x1
    3808:	str	x0, [x19, x1]
    380c:	b.cc	365c <_gcry_mpih_lshift+0x1d4>  // b.lo, b.ul, b.last
    3810:	add	x22, x22, #0x8
    3814:	subs	w20, w20, #0x1
    3818:	b.eq	365c <_gcry_mpih_lshift+0x1d4>  // b.none
    381c:	ldr	x0, [x22]
    3820:	add	x0, x0, #0x1
    3824:	str	x0, [x22], #8
    3828:	cbz	x0, 3814 <_gcry_mpih_lshift+0x38c>
    382c:	b	365c <_gcry_mpih_lshift+0x1d4>
    3830:	bl	35d8 <_gcry_mpih_lshift+0x150>
    3834:	b	36d0 <_gcry_mpih_lshift+0x248>
    3838:	ldr	x7, [x1, x0, lsl #3]
    383c:	sub	x0, x0, #0x1
    3840:	ldr	x3, [x2, x0, lsl #3]
    3844:	cmp	x7, x3
    3848:	b.eq	36e4 <_gcry_mpih_lshift+0x25c>  // b.none
    384c:	b.hi	36e8 <_gcry_mpih_lshift+0x260>  // b.pmore
    3850:	mov	x2, x1
    3854:	mov	w3, w25
    3858:	mov	x1, x23
    385c:	mov	x0, x19
    3860:	mov	w27, #0x1                   	// #1
    3864:	bl	443c <_gcry_mpih_sub_n>
    3868:	b	36f8 <_gcry_mpih_lshift+0x270>
    386c:	ldr	x2, [x26, x28, lsl #3]
    3870:	sub	x28, x28, #0x1
    3874:	ldr	x1, [x0, x28, lsl #3]
    3878:	cmp	x2, x1
    387c:	b.eq	36fc <_gcry_mpih_lshift+0x274>  // b.none
    3880:	b.hi	3700 <_gcry_mpih_lshift+0x278>  // b.pmore
    3884:	ldr	x0, [sp, #112]
    3888:	mov	w3, w25
    388c:	mov	x2, x26
    3890:	mov	x1, x24
    3894:	add	x0, x19, x0
    3898:	bl	443c <_gcry_mpih_sub_n>
    389c:	b	371c <_gcry_mpih_lshift+0x294>
    38a0:	ldr	x0, [sp, #104]
    38a4:	mov	w3, w25
    38a8:	mov	x2, x26
    38ac:	mov	x1, x19
    38b0:	add	x4, x21, x0
    38b4:	mov	x0, x21
    38b8:	bl	35d8 <_gcry_mpih_lshift+0x150>
    38bc:	b	3740 <_gcry_mpih_lshift+0x2b8>
    38c0:	ldr	x1, [x22, x0, lsl #3]
    38c4:	str	x1, [x26, x0, lsl #3]
    38c8:	add	x0, x0, #0x1
    38cc:	b	3744 <_gcry_mpih_lshift+0x2bc>
    38d0:	bl	4404 <_gcry_mpih_add_n>
    38d4:	ldr	x1, [sp, #128]
    38d8:	add	x27, x1, x0
    38dc:	b	3798 <_gcry_mpih_lshift+0x310>
    38e0:	ldr	x0, [sp, #104]
    38e4:	mov	w3, w25
    38e8:	mov	x2, x24
    38ec:	mov	x1, x23
    38f0:	add	x4, x21, x0
    38f4:	mov	x0, x21
    38f8:	bl	35d8 <_gcry_mpih_lshift+0x150>
    38fc:	b	37b4 <_gcry_mpih_lshift+0x32c>
    3900:	ldr	x27, [x19, x28]
    3904:	adds	x0, x0, x27
    3908:	str	x0, [x19, x28]
    390c:	b.cc	37d0 <_gcry_mpih_lshift+0x348>  // b.lo, b.ul, b.last
    3910:	ldr	x0, [sp, #120]
    3914:	mov	w2, w25
    3918:	add	x0, x0, #0x8
    391c:	subs	w2, w2, #0x1
    3920:	b.eq	37d0 <_gcry_mpih_lshift+0x348>  // b.none
    3924:	ldr	x1, [x0]
    3928:	add	x1, x1, #0x1
    392c:	str	x1, [x0], #8
    3930:	cbz	x1, 391c <_gcry_mpih_lshift+0x494>
    3934:	b	37d0 <_gcry_mpih_lshift+0x348>
    3938:	ldr	x1, [x21, x0, lsl #3]
    393c:	str	x1, [x19, x0, lsl #3]
    3940:	add	x0, x0, #0x1
    3944:	b	37d4 <_gcry_mpih_lshift+0x34c>

0000000000003948 <_gcry_mpih_sqr_n_basecase>:
    3948:	stp	x29, x30, [sp, #-64]!
    394c:	mov	x29, sp
    3950:	ldr	x3, [x1]
    3954:	stp	x19, x20, [sp, #16]
    3958:	mov	x19, x0
    395c:	stp	x21, x22, [sp, #32]
    3960:	mov	w20, w2
    3964:	mov	x21, x1
    3968:	str	x23, [sp, #48]
    396c:	cmp	x3, #0x1
    3970:	b.hi	39d4 <_gcry_mpih_sqr_n_basecase+0x8c>  // b.pmore
    3974:	mov	x0, #0x0                   	// #0
    3978:	b.eq	399c <_gcry_mpih_sqr_n_basecase+0x54>  // b.none
    397c:	cmp	w20, w0
    3980:	b.le	39a4 <_gcry_mpih_sqr_n_basecase+0x5c>
    3984:	str	xzr, [x19, x0, lsl #3]
    3988:	add	x0, x0, #0x1
    398c:	b	397c <_gcry_mpih_sqr_n_basecase+0x34>
    3990:	ldr	x1, [x21, x0, lsl #3]
    3994:	str	x1, [x19, x0, lsl #3]
    3998:	add	x0, x0, #0x1
    399c:	cmp	w20, w0
    39a0:	b.gt	3990 <_gcry_mpih_sqr_n_basecase+0x48>
    39a4:	mov	x0, #0x0                   	// #0
    39a8:	sbfiz	x23, x20, #3, #32
    39ac:	mov	x22, #0x1                   	// #1
    39b0:	str	x0, [x19, x23]
    39b4:	add	x19, x19, #0x8
    39b8:	cmp	w20, w22
    39bc:	b.gt	39dc <_gcry_mpih_sqr_n_basecase+0x94>
    39c0:	ldp	x19, x20, [sp, #16]
    39c4:	ldp	x21, x22, [sp, #32]
    39c8:	ldr	x23, [sp, #48]
    39cc:	ldp	x29, x30, [sp], #64
    39d0:	ret
    39d4:	bl	429c <_gcry_mpih_mul_1>
    39d8:	b	39a8 <_gcry_mpih_sqr_n_basecase+0x60>
    39dc:	ldr	x3, [x21, x22, lsl #3]
    39e0:	cmp	x3, #0x1
    39e4:	b.hi	3a10 <_gcry_mpih_sqr_n_basecase+0xc8>  // b.pmore
    39e8:	b.ne	3a24 <_gcry_mpih_sqr_n_basecase+0xdc>  // b.any
    39ec:	mov	w3, w20
    39f0:	mov	x2, x21
    39f4:	mov	x1, x19
    39f8:	mov	x0, x19
    39fc:	bl	4404 <_gcry_mpih_add_n>
    3a00:	add	x22, x22, #0x1
    3a04:	str	x0, [x19, x23]
    3a08:	add	x19, x19, #0x8
    3a0c:	b	39b8 <_gcry_mpih_sqr_n_basecase+0x70>
    3a10:	mov	w2, w20
    3a14:	mov	x1, x21
    3a18:	mov	x0, x19
    3a1c:	bl	430c <_gcry_mpih_addmul_1>
    3a20:	b	3a00 <_gcry_mpih_sqr_n_basecase+0xb8>
    3a24:	mov	x0, #0x0                   	// #0
    3a28:	b	3a00 <_gcry_mpih_sqr_n_basecase+0xb8>

0000000000003a2c <_gcry_mpih_sqr_n>:
    3a2c:	stp	x29, x30, [sp, #-112]!
    3a30:	mov	x29, sp
    3a34:	stp	x19, x20, [sp, #16]
    3a38:	mov	x19, x0
    3a3c:	mov	w20, w2
    3a40:	stp	x21, x22, [sp, #32]
    3a44:	stp	x23, x24, [sp, #48]
    3a48:	mov	x23, x1
    3a4c:	stp	x25, x26, [sp, #64]
    3a50:	stp	x27, x28, [sp, #80]
    3a54:	tbz	w20, #0, 3ad0 <_gcry_mpih_sqr_n+0xa4>
    3a58:	sub	w21, w2, #0x1
    3a5c:	mov	w2, w21
    3a60:	cmp	w21, #0xf
    3a64:	b.gt	3ac8 <_gcry_mpih_sqr_n+0x9c>
    3a68:	bl	3948 <_gcry_mpih_sqr_n_basecase>
    3a6c:	sbfiz	x24, x21, #3, #32
    3a70:	add	x22, x19, w21, sxtw #3
    3a74:	mov	w2, w21
    3a78:	mov	x1, x23
    3a7c:	mov	x0, x22
    3a80:	ldr	x3, [x23, x24]
    3a84:	bl	430c <_gcry_mpih_addmul_1>
    3a88:	lsl	w1, w21, #1
    3a8c:	mov	w2, w20
    3a90:	add	w20, w20, w21
    3a94:	str	x0, [x19, w1, sxtw #3]
    3a98:	mov	x1, x23
    3a9c:	mov	x0, x22
    3aa0:	ldr	x3, [x23, x24]
    3aa4:	bl	430c <_gcry_mpih_addmul_1>
    3aa8:	str	x0, [x19, w20, sxtw #3]
    3aac:	ldp	x19, x20, [sp, #16]
    3ab0:	ldp	x21, x22, [sp, #32]
    3ab4:	ldp	x23, x24, [sp, #48]
    3ab8:	ldp	x25, x26, [sp, #64]
    3abc:	ldp	x27, x28, [sp, #80]
    3ac0:	ldp	x29, x30, [sp], #112
    3ac4:	ret
    3ac8:	bl	3a2c <_gcry_mpih_sqr_n>
    3acc:	b	3a6c <_gcry_mpih_sqr_n+0x40>
    3ad0:	asr	w26, w2, #1
    3ad4:	sbfiz	x0, x2, #3, #32
    3ad8:	str	x0, [sp, #96]
    3adc:	add	x25, x19, w2, sxtw #3
    3ae0:	sbfiz	x0, x26, #3, #32
    3ae4:	str	x0, [sp, #104]
    3ae8:	add	x28, x1, w26, sxtw #3
    3aec:	sxtw	x24, w2
    3af0:	mov	x21, x3
    3af4:	sxtw	x22, w26
    3af8:	mov	w2, w26
    3afc:	mov	x1, x28
    3b00:	cmp	w26, #0xf
    3b04:	mov	x0, x25
    3b08:	b.gt	3c30 <_gcry_mpih_sqr_n+0x204>
    3b0c:	bl	3948 <_gcry_mpih_sqr_n_basecase>
    3b10:	sub	w0, w26, #0x1
    3b14:	add	x1, x23, #0x8
    3b18:	sxtw	x0, w0
    3b1c:	tbz	w0, #31, 3c38 <_gcry_mpih_sqr_n+0x20c>
    3b20:	mov	w3, w26
    3b24:	mov	x2, x23
    3b28:	mov	x1, x28
    3b2c:	mov	x0, x19
    3b30:	bl	443c <_gcry_mpih_sub_n>
    3b34:	cmp	w26, #0xf
    3b38:	b.gt	3c60 <_gcry_mpih_sqr_n+0x234>
    3b3c:	mov	w2, w26
    3b40:	mov	x1, x19
    3b44:	mov	x0, x21
    3b48:	bl	3948 <_gcry_mpih_sqr_n_basecase>
    3b4c:	ldr	x0, [sp, #104]
    3b50:	add	x27, x19, x0
    3b54:	mov	x0, #0x0                   	// #0
    3b58:	cmp	w26, w0
    3b5c:	b.gt	3c7c <_gcry_mpih_sqr_n+0x250>
    3b60:	add	x24, x24, x22
    3b64:	mov	w3, w26
    3b68:	mov	x1, x25
    3b6c:	mov	x0, x25
    3b70:	lsl	x28, x24, #3
    3b74:	add	x24, x19, x24, lsl #3
    3b78:	mov	x2, x24
    3b7c:	bl	4404 <_gcry_mpih_add_n>
    3b80:	mov	w3, w20
    3b84:	mov	x22, x0
    3b88:	mov	x2, x21
    3b8c:	mov	x1, x27
    3b90:	mov	x0, x27
    3b94:	bl	443c <_gcry_mpih_sub_n>
    3b98:	cmp	w26, #0xf
    3b9c:	sub	x22, x22, x0
    3ba0:	b.gt	3c8c <_gcry_mpih_sqr_n+0x260>
    3ba4:	mov	w2, w26
    3ba8:	mov	x1, x23
    3bac:	mov	x0, x21
    3bb0:	bl	3948 <_gcry_mpih_sqr_n_basecase>
    3bb4:	mov	w3, w20
    3bb8:	mov	x2, x21
    3bbc:	mov	x1, x27
    3bc0:	mov	x0, x27
    3bc4:	bl	4404 <_gcry_mpih_add_n>
    3bc8:	adds	x22, x22, x0
    3bcc:	b.ne	3ca8 <_gcry_mpih_sqr_n+0x27c>  // b.any
    3bd0:	mov	x0, #0x0                   	// #0
    3bd4:	cmp	w26, w0
    3bd8:	b.gt	3cdc <_gcry_mpih_sqr_n+0x2b0>
    3bdc:	ldr	x0, [sp, #104]
    3be0:	mov	w3, w26
    3be4:	mov	x1, x27
    3be8:	add	x2, x21, x0
    3bec:	mov	x0, x27
    3bf0:	bl	4404 <_gcry_mpih_add_n>
    3bf4:	cbz	x0, 3aac <_gcry_mpih_sqr_n+0x80>
    3bf8:	ldr	x0, [sp, #96]
    3bfc:	ldr	x1, [sp, #96]
    3c00:	ldr	x0, [x19, x0]
    3c04:	adds	x0, x0, #0x1
    3c08:	str	x0, [x19, x1]
    3c0c:	b.cc	3aac <_gcry_mpih_sqr_n+0x80>  // b.lo, b.ul, b.last
    3c10:	add	x25, x25, #0x8
    3c14:	subs	w20, w20, #0x1
    3c18:	b.eq	3aac <_gcry_mpih_sqr_n+0x80>  // b.none
    3c1c:	ldr	x0, [x25]
    3c20:	add	x0, x0, #0x1
    3c24:	str	x0, [x25], #8
    3c28:	cbz	x0, 3c14 <_gcry_mpih_sqr_n+0x1e8>
    3c2c:	b	3aac <_gcry_mpih_sqr_n+0x80>
    3c30:	bl	3a2c <_gcry_mpih_sqr_n>
    3c34:	b	3b10 <_gcry_mpih_sqr_n+0xe4>
    3c38:	ldr	x3, [x28, x0, lsl #3]
    3c3c:	sub	x0, x0, #0x1
    3c40:	ldr	x2, [x1, x0, lsl #3]
    3c44:	cmp	x3, x2
    3c48:	b.eq	3b1c <_gcry_mpih_sqr_n+0xf0>  // b.none
    3c4c:	b.hi	3b20 <_gcry_mpih_sqr_n+0xf4>  // b.pmore
    3c50:	mov	w3, w26
    3c54:	mov	x2, x28
    3c58:	mov	x1, x23
    3c5c:	b	3b2c <_gcry_mpih_sqr_n+0x100>
    3c60:	ldr	x0, [sp, #96]
    3c64:	mov	w2, w26
    3c68:	mov	x1, x19
    3c6c:	add	x3, x21, x0
    3c70:	mov	x0, x21
    3c74:	bl	3a2c <_gcry_mpih_sqr_n>
    3c78:	b	3b4c <_gcry_mpih_sqr_n+0x120>
    3c7c:	ldr	x1, [x25, x0, lsl #3]
    3c80:	str	x1, [x27, x0, lsl #3]
    3c84:	add	x0, x0, #0x1
    3c88:	b	3b58 <_gcry_mpih_sqr_n+0x12c>
    3c8c:	ldr	x0, [sp, #96]
    3c90:	mov	w2, w26
    3c94:	mov	x1, x23
    3c98:	add	x3, x21, x0
    3c9c:	mov	x0, x21
    3ca0:	bl	3a2c <_gcry_mpih_sqr_n>
    3ca4:	b	3bb4 <_gcry_mpih_sqr_n+0x188>
    3ca8:	ldr	x0, [x19, x28]
    3cac:	adds	x22, x22, x0
    3cb0:	str	x22, [x19, x28]
    3cb4:	b.cc	3bd0 <_gcry_mpih_sqr_n+0x1a4>  // b.lo, b.ul, b.last
    3cb8:	add	x24, x24, #0x8
    3cbc:	mov	w1, w26
    3cc0:	subs	w1, w1, #0x1
    3cc4:	b.eq	3bd0 <_gcry_mpih_sqr_n+0x1a4>  // b.none
    3cc8:	ldr	x0, [x24]
    3ccc:	add	x0, x0, #0x1
    3cd0:	str	x0, [x24], #8
    3cd4:	cbz	x0, 3cc0 <_gcry_mpih_sqr_n+0x294>
    3cd8:	b	3bd0 <_gcry_mpih_sqr_n+0x1a4>
    3cdc:	ldr	x1, [x21, x0, lsl #3]
    3ce0:	str	x1, [x19, x0, lsl #3]
    3ce4:	add	x0, x0, #0x1
    3ce8:	b	3bd4 <_gcry_mpih_sqr_n+0x1a8>

0000000000003cec <_gcry_mpih_mul_n>:
    3cec:	stp	x29, x30, [sp, #-64]!
    3cf0:	cmp	x1, x2
    3cf4:	mov	x29, sp
    3cf8:	stp	x19, x20, [sp, #16]
    3cfc:	mov	x20, x1
    3d00:	mov	w19, w3
    3d04:	stp	x21, x22, [sp, #32]
    3d08:	stp	x23, x24, [sp, #48]
    3d0c:	mov	x23, x0
    3d10:	b.ne	3d80 <_gcry_mpih_mul_n+0x94>  // b.any
    3d14:	cmp	w3, #0xf
    3d18:	b.gt	3d34 <_gcry_mpih_mul_n+0x48>
    3d1c:	ldp	x19, x20, [sp, #16]
    3d20:	mov	w2, w3
    3d24:	ldp	x21, x22, [sp, #32]
    3d28:	ldp	x23, x24, [sp, #48]
    3d2c:	ldp	x29, x30, [sp], #64
    3d30:	b	3948 <_gcry_mpih_sqr_n_basecase>
    3d34:	mov	x0, x1
    3d38:	lsl	w22, w19, #1
    3d3c:	bl	5db4 <gcry_is_secure>
    3d40:	mov	w1, w0
    3d44:	mov	w0, w22
    3d48:	bl	24 <_gcry_mpi_alloc_limb_space>
    3d4c:	mov	x1, x20
    3d50:	mov	x21, x0
    3d54:	mov	x3, x0
    3d58:	mov	w2, w19
    3d5c:	mov	x0, x23
    3d60:	bl	3a2c <_gcry_mpih_sqr_n>
    3d64:	mov	w1, w22
    3d68:	mov	x0, x21
    3d6c:	ldp	x19, x20, [sp, #16]
    3d70:	ldp	x21, x22, [sp, #32]
    3d74:	ldp	x23, x24, [sp, #48]
    3d78:	ldp	x29, x30, [sp], #64
    3d7c:	b	108 <_gcry_mpi_free_limb_space>
    3d80:	cmp	w3, #0xf
    3d84:	b.gt	3d9c <_gcry_mpih_mul_n+0xb0>
    3d88:	ldp	x19, x20, [sp, #16]
    3d8c:	ldp	x21, x22, [sp, #32]
    3d90:	ldp	x23, x24, [sp, #48]
    3d94:	ldp	x29, x30, [sp], #64
    3d98:	b	34ec <_gcry_mpih_lshift+0x64>
    3d9c:	mov	x21, x2
    3da0:	mov	x0, x1
    3da4:	bl	5db4 <gcry_is_secure>
    3da8:	cbnz	w0, 3df0 <_gcry_mpih_mul_n+0x104>
    3dac:	mov	x0, x21
    3db0:	bl	5db4 <gcry_is_secure>
    3db4:	cmp	w0, #0x0
    3db8:	cset	w1, ne  // ne = any
    3dbc:	lsl	w24, w19, #1
    3dc0:	mov	w0, w24
    3dc4:	bl	24 <_gcry_mpi_alloc_limb_space>
    3dc8:	mov	x1, x20
    3dcc:	mov	x22, x0
    3dd0:	mov	x4, x0
    3dd4:	mov	w3, w19
    3dd8:	mov	x0, x23
    3ddc:	mov	x2, x21
    3de0:	bl	35d8 <_gcry_mpih_lshift+0x150>
    3de4:	mov	w1, w24
    3de8:	mov	x0, x22
    3dec:	b	3d6c <_gcry_mpih_mul_n+0x80>
    3df0:	mov	w1, #0x1                   	// #1
    3df4:	b	3dbc <_gcry_mpih_mul_n+0xd0>

0000000000003df8 <_gcry_mpih_release_karatsuba_ctx>:
    3df8:	stp	x29, x30, [sp, #-32]!
    3dfc:	mov	x29, sp
    3e00:	stp	x19, x20, [sp, #16]
    3e04:	mov	x19, x0
    3e08:	ldr	x0, [x0, #24]
    3e0c:	cbz	x0, 3e18 <_gcry_mpih_release_karatsuba_ctx+0x20>
    3e10:	ldr	w1, [x19, #32]
    3e14:	bl	108 <_gcry_mpi_free_limb_space>
    3e18:	ldr	x0, [x19, #8]
    3e1c:	cbz	x0, 3e28 <_gcry_mpih_release_karatsuba_ctx+0x30>
    3e20:	ldr	w1, [x19, #16]
    3e24:	bl	108 <_gcry_mpi_free_limb_space>
    3e28:	ldr	x19, [x19]
    3e2c:	cbnz	x19, 3e3c <_gcry_mpih_release_karatsuba_ctx+0x44>
    3e30:	ldp	x19, x20, [sp, #16]
    3e34:	ldp	x29, x30, [sp], #32
    3e38:	ret
    3e3c:	ldr	x0, [x19, #24]
    3e40:	ldr	x20, [x19]
    3e44:	cbz	x0, 3e50 <_gcry_mpih_release_karatsuba_ctx+0x58>
    3e48:	ldr	w1, [x19, #32]
    3e4c:	bl	108 <_gcry_mpi_free_limb_space>
    3e50:	ldr	x0, [x19, #8]
    3e54:	cbz	x0, 3e60 <_gcry_mpih_release_karatsuba_ctx+0x68>
    3e58:	ldr	w1, [x19, #16]
    3e5c:	bl	108 <_gcry_mpi_free_limb_space>
    3e60:	mov	x0, x19
    3e64:	mov	x19, x20
    3e68:	bl	5db0 <gcry_free>
    3e6c:	b	3e2c <_gcry_mpih_release_karatsuba_ctx+0x34>

0000000000003e70 <_gcry_mpih_mul>:
    3e70:	stp	x29, x30, [sp, #-128]!
    3e74:	cmp	w4, #0xf
    3e78:	mov	x29, sp
    3e7c:	stp	x19, x20, [sp, #16]
    3e80:	mov	x19, x0
    3e84:	mov	w20, w4
    3e88:	stp	x21, x22, [sp, #32]
    3e8c:	mov	x22, x1
    3e90:	stp	x23, x24, [sp, #48]
    3e94:	sxtw	x24, w2
    3e98:	mov	x21, x24
    3e9c:	str	x25, [sp, #64]
    3ea0:	mov	x23, x3
    3ea4:	b.gt	3f74 <_gcry_mpih_mul+0x104>
    3ea8:	cbz	w4, 3fb8 <_gcry_mpih_mul+0x148>
    3eac:	ldr	x3, [x3]
    3eb0:	cmp	x3, #0x1
    3eb4:	b.hi	3f1c <_gcry_mpih_mul+0xac>  // b.pmore
    3eb8:	mov	x0, #0x0                   	// #0
    3ebc:	b.eq	3ee0 <_gcry_mpih_mul+0x70>  // b.none
    3ec0:	cmp	w21, w0
    3ec4:	b.le	3ee8 <_gcry_mpih_mul+0x78>
    3ec8:	str	xzr, [x19, x0, lsl #3]
    3ecc:	add	x0, x0, #0x1
    3ed0:	b	3ec0 <_gcry_mpih_mul+0x50>
    3ed4:	ldr	x1, [x22, x0, lsl #3]
    3ed8:	str	x1, [x19, x0, lsl #3]
    3edc:	add	x0, x0, #0x1
    3ee0:	cmp	w21, w0
    3ee4:	b.gt	3ed4 <_gcry_mpih_mul+0x64>
    3ee8:	mov	x0, #0x0                   	// #0
    3eec:	lsl	x24, x24, #3
    3ef0:	mov	x25, #0x1                   	// #1
    3ef4:	str	x0, [x19, x24]
    3ef8:	add	x19, x19, #0x8
    3efc:	cmp	w20, w25
    3f00:	b.gt	3f24 <_gcry_mpih_mul+0xb4>
    3f04:	ldp	x19, x20, [sp, #16]
    3f08:	ldp	x21, x22, [sp, #32]
    3f0c:	ldp	x23, x24, [sp, #48]
    3f10:	ldr	x25, [sp, #64]
    3f14:	ldp	x29, x30, [sp], #128
    3f18:	ret
    3f1c:	bl	429c <_gcry_mpih_mul_1>
    3f20:	b	3eec <_gcry_mpih_mul+0x7c>
    3f24:	ldr	x3, [x23, x25, lsl #3]
    3f28:	cmp	x3, #0x1
    3f2c:	b.hi	3f58 <_gcry_mpih_mul+0xe8>  // b.pmore
    3f30:	b.ne	3f6c <_gcry_mpih_mul+0xfc>  // b.any
    3f34:	mov	w3, w21
    3f38:	mov	x2, x22
    3f3c:	mov	x1, x19
    3f40:	mov	x0, x19
    3f44:	bl	4404 <_gcry_mpih_add_n>
    3f48:	add	x25, x25, #0x1
    3f4c:	str	x0, [x19, x24]
    3f50:	add	x19, x19, #0x8
    3f54:	b	3efc <_gcry_mpih_mul+0x8c>
    3f58:	mov	w2, w21
    3f5c:	mov	x1, x22
    3f60:	mov	x0, x19
    3f64:	bl	430c <_gcry_mpih_addmul_1>
    3f68:	b	3f48 <_gcry_mpih_mul+0xd8>
    3f6c:	mov	x0, #0x0                   	// #0
    3f70:	b	3f48 <_gcry_mpih_mul+0xd8>
    3f74:	mov	x2, #0x28                  	// #40
    3f78:	mov	w1, #0x0                   	// #0
    3f7c:	add	x0, sp, #0x58
    3f80:	bl	0 <grub_memset>
    3f84:	mov	w4, w20
    3f88:	add	x20, x24, w20, sxtw
    3f8c:	add	x5, sp, #0x58
    3f90:	mov	x3, x23
    3f94:	mov	w2, w24
    3f98:	mov	x1, x22
    3f9c:	mov	x0, x19
    3fa0:	add	x19, x19, x20, lsl #3
    3fa4:	bl	3fc0 <_gcry_mpih_mul_karatsuba_case>
    3fa8:	add	x0, sp, #0x58
    3fac:	bl	3df8 <_gcry_mpih_release_karatsuba_ctx>
    3fb0:	ldur	x0, [x19, #-8]
    3fb4:	b	3f04 <_gcry_mpih_mul+0x94>
    3fb8:	mov	x0, #0x0                   	// #0
    3fbc:	b	3f04 <_gcry_mpih_mul+0x94>

0000000000003fc0 <_gcry_mpih_mul_karatsuba_case>:
    3fc0:	stp	x29, x30, [sp, #-80]!
    3fc4:	mov	x29, sp
    3fc8:	stp	x21, x22, [sp, #32]
    3fcc:	mov	x21, x0
    3fd0:	mov	w22, w2
    3fd4:	ldr	x0, [x5, #8]
    3fd8:	stp	x19, x20, [sp, #16]
    3fdc:	mov	w19, w4
    3fe0:	stp	x23, x24, [sp, #48]
    3fe4:	mov	x20, x5
    3fe8:	mov	x23, x1
    3fec:	stp	x25, x26, [sp, #64]
    3ff0:	mov	x24, x3
    3ff4:	cbz	x0, 400c <_gcry_mpih_mul_karatsuba_case+0x4c>
    3ff8:	ldr	w1, [x5, #20]
    3ffc:	cmp	w1, w4
    4000:	b.ge	4040 <_gcry_mpih_mul_karatsuba_case+0x80>  // b.tcont
    4004:	ldr	w1, [x5, #16]
    4008:	bl	108 <_gcry_mpi_free_limb_space>
    400c:	lsl	w25, w19, #1
    4010:	str	w25, [x20, #16]
    4014:	mov	x0, x23
    4018:	bl	5db4 <gcry_is_secure>
    401c:	cbnz	w0, 4130 <_gcry_mpih_mul_karatsuba_case+0x170>
    4020:	mov	x0, x24
    4024:	bl	5db4 <gcry_is_secure>
    4028:	cmp	w0, #0x0
    402c:	cset	w1, ne  // ne = any
    4030:	mov	w0, w25
    4034:	bl	24 <_gcry_mpi_alloc_limb_space>
    4038:	str	x0, [x20, #8]
    403c:	str	w19, [x20, #20]
    4040:	cmp	w19, #0xf
    4044:	b.gt	4138 <_gcry_mpih_mul_karatsuba_case+0x178>
    4048:	mov	w3, w19
    404c:	mov	x2, x24
    4050:	mov	x1, x23
    4054:	mov	x0, x21
    4058:	bl	34ec <_gcry_mpih_lshift+0x64>
    405c:	sub	w22, w22, w19
    4060:	sbfiz	x25, x19, #3, #32
    4064:	add	x21, x21, w19, sxtw #3
    4068:	add	x23, x23, w19, sxtw #3
    406c:	cmp	w19, w22
    4070:	b.gt	419c <_gcry_mpih_mul_karatsuba_case+0x1dc>
    4074:	ldr	x0, [x20, #24]
    4078:	cbz	x0, 4090 <_gcry_mpih_mul_karatsuba_case+0xd0>
    407c:	ldr	w1, [x20, #36]
    4080:	cmp	w1, w19
    4084:	b.ge	40c4 <_gcry_mpih_mul_karatsuba_case+0x104>  // b.tcont
    4088:	ldr	w1, [x20, #32]
    408c:	bl	108 <_gcry_mpi_free_limb_space>
    4090:	lsl	w26, w19, #1
    4094:	str	w26, [x20, #32]
    4098:	mov	x0, x23
    409c:	bl	5db4 <gcry_is_secure>
    40a0:	cbnz	w0, 4154 <_gcry_mpih_mul_karatsuba_case+0x194>
    40a4:	mov	x0, x24
    40a8:	bl	5db4 <gcry_is_secure>
    40ac:	cmp	w0, #0x0
    40b0:	cset	w1, ne  // ne = any
    40b4:	mov	w0, w26
    40b8:	bl	24 <_gcry_mpi_alloc_limb_space>
    40bc:	str	x0, [x20, #24]
    40c0:	str	w19, [x20, #36]
    40c4:	cmp	w19, #0xf
    40c8:	ldr	x0, [x20, #24]
    40cc:	b.gt	415c <_gcry_mpih_mul_karatsuba_case+0x19c>
    40d0:	mov	w3, w19
    40d4:	mov	x2, x24
    40d8:	mov	x1, x23
    40dc:	bl	34ec <_gcry_mpih_lshift+0x64>
    40e0:	ldr	x2, [x20, #24]
    40e4:	mov	x1, x21
    40e8:	mov	x0, x21
    40ec:	mov	w3, w19
    40f0:	add	x21, x21, x25
    40f4:	bl	4404 <_gcry_mpih_add_n>
    40f8:	ldr	x2, [x20, #24]
    40fc:	add	x1, x2, x25
    4100:	ldr	x2, [x2, x25]
    4104:	add	x1, x1, #0x8
    4108:	adds	x0, x0, x2
    410c:	mov	x2, x21
    4110:	str	x0, [x2], #8
    4114:	mov	w0, w19
    4118:	b.cs	4184 <_gcry_mpih_mul_karatsuba_case+0x1c4>  // b.hs, b.nlast
    411c:	cmp	x2, x1
    4120:	b.eq	418c <_gcry_mpih_mul_karatsuba_case+0x1cc>  // b.none
    4124:	sub	w0, w0, #0x1
    4128:	mov	x3, #0x0                   	// #0
    412c:	b	4214 <_gcry_mpih_mul_karatsuba_case+0x254>
    4130:	mov	w1, #0x1                   	// #1
    4134:	b	4030 <_gcry_mpih_mul_karatsuba_case+0x70>
    4138:	ldr	x4, [x20, #8]
    413c:	mov	w3, w19
    4140:	mov	x2, x24
    4144:	mov	x1, x23
    4148:	mov	x0, x21
    414c:	bl	35d8 <_gcry_mpih_lshift+0x150>
    4150:	b	405c <_gcry_mpih_mul_karatsuba_case+0x9c>
    4154:	mov	w1, #0x1                   	// #1
    4158:	b	40b4 <_gcry_mpih_mul_karatsuba_case+0xf4>
    415c:	ldr	x4, [x20, #8]
    4160:	mov	w3, w19
    4164:	mov	x2, x24
    4168:	mov	x1, x23
    416c:	bl	35d8 <_gcry_mpih_lshift+0x150>
    4170:	b	40e0 <_gcry_mpih_mul_karatsuba_case+0x120>
    4174:	ldr	x3, [x1], #8
    4178:	add	x3, x3, #0x1
    417c:	str	x3, [x2], #8
    4180:	cbnz	x3, 411c <_gcry_mpih_mul_karatsuba_case+0x15c>
    4184:	subs	w0, w0, #0x1
    4188:	b.ne	4174 <_gcry_mpih_mul_karatsuba_case+0x1b4>  // b.any
    418c:	sub	w22, w22, w19
    4190:	add	x23, x23, x25
    4194:	cmp	w19, w22
    4198:	b.le	40c4 <_gcry_mpih_mul_karatsuba_case+0x104>
    419c:	cbz	w22, 426c <_gcry_mpih_mul_karatsuba_case+0x2ac>
    41a0:	cmp	w22, #0xf
    41a4:	b.gt	4220 <_gcry_mpih_mul_karatsuba_case+0x260>
    41a8:	ldr	x0, [x20, #8]
    41ac:	mov	w4, w22
    41b0:	mov	x3, x23
    41b4:	mov	w2, w19
    41b8:	mov	x1, x24
    41bc:	bl	3e70 <_gcry_mpih_mul>
    41c0:	ldr	x2, [x20, #8]
    41c4:	mov	x1, x21
    41c8:	mov	x0, x21
    41cc:	mov	w3, w19
    41d0:	add	x21, x21, x25
    41d4:	bl	4404 <_gcry_mpih_add_n>
    41d8:	ldr	x2, [x20, #8]
    41dc:	add	x1, x2, x25
    41e0:	ldr	x2, [x2, x25]
    41e4:	add	x1, x1, #0x8
    41e8:	adds	x0, x0, x2
    41ec:	str	x0, [x21], #8
    41f0:	b.cs	4264 <_gcry_mpih_mul_karatsuba_case+0x2a4>  // b.hs, b.nlast
    41f4:	cmp	x21, x1
    41f8:	b.eq	426c <_gcry_mpih_mul_karatsuba_case+0x2ac>  // b.none
    41fc:	sub	w22, w22, #0x1
    4200:	mov	x0, #0x0                   	// #0
    4204:	b	4290 <_gcry_mpih_mul_karatsuba_case+0x2d0>
    4208:	ldr	x4, [x1, x3, lsl #3]
    420c:	str	x4, [x2, x3, lsl #3]
    4210:	add	x3, x3, #0x1
    4214:	cmp	w0, w3
    4218:	b.gt	4208 <_gcry_mpih_mul_karatsuba_case+0x248>
    421c:	b	418c <_gcry_mpih_mul_karatsuba_case+0x1cc>
    4220:	ldr	x0, [x20]
    4224:	cbnz	x0, 4238 <_gcry_mpih_mul_karatsuba_case+0x278>
    4228:	mov	x1, #0x28                  	// #40
    422c:	mov	x0, #0x1                   	// #1
    4230:	bl	5dbc <gcry_xcalloc>
    4234:	str	x0, [x20]
    4238:	ldp	x5, x0, [x20]
    423c:	mov	w4, w22
    4240:	mov	x3, x23
    4244:	mov	w2, w19
    4248:	mov	x1, x24
    424c:	bl	3fc0 <_gcry_mpih_mul_karatsuba_case>
    4250:	b	41c0 <_gcry_mpih_mul_karatsuba_case+0x200>
    4254:	ldr	x0, [x1], #8
    4258:	add	x0, x0, #0x1
    425c:	str	x0, [x21], #8
    4260:	cbnz	x0, 41f4 <_gcry_mpih_mul_karatsuba_case+0x234>
    4264:	subs	w22, w22, #0x1
    4268:	b.ne	4254 <_gcry_mpih_mul_karatsuba_case+0x294>  // b.any
    426c:	ldp	x19, x20, [sp, #16]
    4270:	ldp	x21, x22, [sp, #32]
    4274:	ldp	x23, x24, [sp, #48]
    4278:	ldp	x25, x26, [sp, #64]
    427c:	ldp	x29, x30, [sp], #80
    4280:	ret
    4284:	ldr	x2, [x1, x0, lsl #3]
    4288:	str	x2, [x21, x0, lsl #3]
    428c:	add	x0, x0, #0x1
    4290:	cmp	w22, w0
    4294:	b.gt	4284 <_gcry_mpih_mul_karatsuba_case+0x2c4>
    4298:	b	426c <_gcry_mpih_mul_karatsuba_case+0x2ac>

000000000000429c <_gcry_mpih_mul_1>:
    429c:	lsr	x9, x3, #32
    42a0:	and	x3, x3, #0xffffffff
    42a4:	mov	x8, x0
    42a8:	mov	x7, #0x0                   	// #0
    42ac:	mov	x0, #0x0                   	// #0
    42b0:	mov	x11, #0x100000000           	// #4294967296
    42b4:	ldr	x4, [x1, x7, lsl #3]
    42b8:	lsr	x6, x4, #32
    42bc:	and	x4, x4, #0xffffffff
    42c0:	mul	x10, x6, x3
    42c4:	mul	x5, x4, x3
    42c8:	madd	x4, x9, x4, x10
    42cc:	mul	x6, x6, x9
    42d0:	add	x4, x4, x5, lsr #32
    42d4:	cmp	x10, x4
    42d8:	b.ls	42e0 <_gcry_mpih_mul_1+0x44>  // b.plast
    42dc:	add	x6, x6, x11
    42e0:	add	x5, x0, w5, uxtw
    42e4:	add	x5, x5, x4, lsl #32
    42e8:	str	x5, [x8, x7, lsl #3]
    42ec:	cmp	x0, x5
    42f0:	add	x7, x7, #0x1
    42f4:	cset	x0, hi  // hi = pmore
    42f8:	cmp	w2, w7
    42fc:	add	x4, x0, x4, lsr #32
    4300:	add	x0, x6, x4
    4304:	b.ne	42b4 <_gcry_mpih_mul_1+0x18>  // b.any
    4308:	ret

000000000000430c <_gcry_mpih_addmul_1>:
    430c:	lsr	x9, x3, #32
    4310:	and	x3, x3, #0xffffffff
    4314:	mov	x8, x0
    4318:	mov	x6, #0x0                   	// #0
    431c:	mov	x0, #0x0                   	// #0
    4320:	mov	x11, #0x100000000           	// #4294967296
    4324:	ldr	x4, [x1, x6, lsl #3]
    4328:	lsr	x7, x4, #32
    432c:	and	x4, x4, #0xffffffff
    4330:	mul	x10, x7, x3
    4334:	mul	x5, x4, x3
    4338:	madd	x4, x9, x4, x10
    433c:	mul	x7, x7, x9
    4340:	add	x4, x4, x5, lsr #32
    4344:	cmp	x10, x4
    4348:	b.ls	4350 <_gcry_mpih_addmul_1+0x44>  // b.plast
    434c:	add	x7, x7, x11
    4350:	add	x5, x0, w5, uxtw
    4354:	add	x5, x5, x4, lsl #32
    4358:	lsr	x4, x4, #32
    435c:	cmp	x0, x5
    4360:	ldr	x0, [x8, x6, lsl #3]
    4364:	cinc	x4, x4, hi  // hi = pmore
    4368:	adds	x5, x5, x0
    436c:	str	x5, [x8, x6, lsl #3]
    4370:	add	x6, x6, #0x1
    4374:	adc	x0, x4, x7
    4378:	cmp	w2, w6
    437c:	b.ne	4324 <_gcry_mpih_addmul_1+0x18>  // b.any
    4380:	ret

0000000000004384 <_gcry_mpih_submul_1>:
    4384:	lsr	x9, x3, #32
    4388:	and	x3, x3, #0xffffffff
    438c:	mov	x8, x0
    4390:	mov	x7, #0x0                   	// #0
    4394:	mov	x0, #0x0                   	// #0
    4398:	mov	x11, #0x100000000           	// #4294967296
    439c:	ldr	x4, [x1, x7, lsl #3]
    43a0:	lsr	x6, x4, #32
    43a4:	and	x4, x4, #0xffffffff
    43a8:	mul	x10, x6, x3
    43ac:	mul	x5, x4, x3
    43b0:	madd	x4, x9, x4, x10
    43b4:	mul	x6, x6, x9
    43b8:	add	x4, x4, x5, lsr #32
    43bc:	cmp	x10, x4
    43c0:	b.ls	43c8 <_gcry_mpih_submul_1+0x44>  // b.plast
    43c4:	add	x6, x6, x11
    43c8:	add	x5, x0, w5, uxtw
    43cc:	add	x5, x5, x4, lsl #32
    43d0:	lsr	x4, x4, #32
    43d4:	cmp	x0, x5
    43d8:	ldr	x0, [x8, x7, lsl #3]
    43dc:	cinc	x4, x4, hi  // hi = pmore
    43e0:	subs	x10, x0, x5
    43e4:	str	x10, [x8, x7, lsl #3]
    43e8:	cmp	x0, x5
    43ec:	add	x7, x7, #0x1
    43f0:	cinc	x6, x6, cc  // cc = lo, ul, last
    43f4:	cmp	w2, w7
    43f8:	add	x0, x6, x4
    43fc:	b.ne	439c <_gcry_mpih_submul_1+0x18>  // b.any
    4400:	ret

0000000000004404 <_gcry_mpih_add_n>:
    4404:	mov	x7, x0
    4408:	mov	x5, #0x0                   	// #0
    440c:	mov	x0, #0x0                   	// #0
    4410:	ldr	x4, [x2, x5, lsl #3]
    4414:	ldr	x6, [x1, x5, lsl #3]
    4418:	adds	x4, x0, x4
    441c:	cset	x0, cs  // cs = hs, nlast
    4420:	adds	x4, x6, x4
    4424:	str	x4, [x7, x5, lsl #3]
    4428:	add	x5, x5, #0x1
    442c:	cinc	x0, x0, cs  // cs = hs, nlast
    4430:	cmp	w3, w5
    4434:	b.ne	4410 <_gcry_mpih_add_n+0xc>  // b.any
    4438:	ret

000000000000443c <_gcry_mpih_sub_n>:
    443c:	mov	x6, x0
    4440:	mov	x5, #0x0                   	// #0
    4444:	mov	x0, #0x0                   	// #0
    4448:	ldr	x4, [x2, x5, lsl #3]
    444c:	ldr	x7, [x1, x5, lsl #3]
    4450:	adds	x4, x0, x4
    4454:	cset	x0, cs  // cs = hs, nlast
    4458:	subs	x8, x7, x4
    445c:	str	x8, [x6, x5, lsl #3]
    4460:	cmp	x7, x4
    4464:	add	x5, x5, #0x1
    4468:	cinc	x0, x0, cc  // cc = lo, ul, last
    446c:	cmp	w3, w5
    4470:	b.ne	4448 <_gcry_mpih_sub_n+0xc>  // b.any
    4474:	ret

0000000000004478 <_gcry_mpih_mod_1>:
    4478:	mov	x8, x0
    447c:	cbz	w1, 465c <_gcry_mpih_mod_1+0x1e4>
    4480:	mov	x3, #0x38                  	// #56
    4484:	lsr	x0, x2, x3
    4488:	tst	w0, #0xff
    448c:	b.ne	4498 <_gcry_mpih_mod_1+0x20>  // b.any
    4490:	subs	x3, x3, #0x8
    4494:	b.ne	4484 <_gcry_mpih_mod_1+0xc>  // b.any
    4498:	adrp	x0, 0 <_gcry_mpi_m_check>
    449c:	mov	w12, #0x40                  	// #64
    44a0:	sub	w4, w12, w3
    44a4:	lsr	x3, x2, x3
    44a8:	ldr	x0, [x0]
    44ac:	ldrb	w0, [x0, x3]
    44b0:	subs	w0, w4, w0
    44b4:	b.eq	45c0 <_gcry_mpih_mod_1+0x148>  // b.none
    44b8:	add	x3, x8, w1, sxtw #3
    44bc:	sub	w7, w1, #0x2
    44c0:	lsl	x2, x2, x0
    44c4:	sub	w12, w12, w0
    44c8:	lsr	x9, x2, #32
    44cc:	sxtw	x7, w7
    44d0:	ldur	x13, [x3, #-8]
    44d4:	and	x1, x2, #0xffffffff
    44d8:	lsr	x5, x13, x12
    44dc:	udiv	x4, x5, x9
    44e0:	lsl	x11, x13, x0
    44e4:	mul	x6, x4, x1
    44e8:	msub	x4, x4, x9, x5
    44ec:	lsl	x4, x4, #32
    44f0:	tbz	w7, #31, 4554 <_gcry_mpih_mod_1+0xdc>
    44f4:	orr	x3, x4, x11, lsr #32
    44f8:	cmp	x3, x6
    44fc:	b.cs	4514 <_gcry_mpih_mod_1+0x9c>  // b.hs, b.nlast
    4500:	adds	x3, x3, x2
    4504:	b.cs	4514 <_gcry_mpih_mod_1+0x9c>  // b.hs, b.nlast
    4508:	cmp	x3, x6
    450c:	b.cs	4514 <_gcry_mpih_mod_1+0x9c>  // b.hs, b.nlast
    4510:	add	x3, x3, x2
    4514:	sub	x4, x3, x6
    4518:	udiv	x3, x4, x9
    451c:	mul	x5, x3, x1
    4520:	and	x1, x11, #0xffffffff
    4524:	msub	x3, x3, x9, x4
    4528:	orr	x1, x1, x3, lsl #32
    452c:	cmp	x1, x5
    4530:	b.cs	4548 <_gcry_mpih_mod_1+0xd0>  // b.hs, b.nlast
    4534:	adds	x1, x1, x2
    4538:	b.cs	4548 <_gcry_mpih_mod_1+0xd0>  // b.hs, b.nlast
    453c:	cmp	x1, x5
    4540:	b.cs	4548 <_gcry_mpih_mod_1+0xd0>  // b.hs, b.nlast
    4544:	add	x1, x1, x2
    4548:	sub	x1, x1, x5
    454c:	lsr	x0, x1, x0
    4550:	ret
    4554:	ldr	x13, [x8, x7, lsl #3]
    4558:	lsr	x10, x13, x12
    455c:	orr	x10, x10, x11
    4560:	orr	x4, x4, x10, lsr #32
    4564:	cmp	x4, x6
    4568:	b.cs	4580 <_gcry_mpih_mod_1+0x108>  // b.hs, b.nlast
    456c:	adds	x4, x4, x2
    4570:	b.cs	4580 <_gcry_mpih_mod_1+0x108>  // b.hs, b.nlast
    4574:	cmp	x4, x6
    4578:	b.cs	4580 <_gcry_mpih_mod_1+0x108>  // b.hs, b.nlast
    457c:	add	x4, x4, x2
    4580:	sub	x4, x4, x6
    4584:	and	x10, x10, #0xffffffff
    4588:	udiv	x6, x4, x9
    458c:	msub	x4, x6, x9, x4
    4590:	mul	x5, x6, x1
    4594:	orr	x4, x10, x4, lsl #32
    4598:	cmp	x5, x4
    459c:	b.ls	45b4 <_gcry_mpih_mod_1+0x13c>  // b.plast
    45a0:	adds	x4, x4, x2
    45a4:	b.cs	45b4 <_gcry_mpih_mod_1+0x13c>  // b.hs, b.nlast
    45a8:	cmp	x5, x4
    45ac:	b.ls	45b4 <_gcry_mpih_mod_1+0x13c>  // b.plast
    45b0:	add	x4, x4, x2
    45b4:	sub	x5, x4, x5
    45b8:	sub	x7, x7, #0x1
    45bc:	b	44dc <_gcry_mpih_mod_1+0x64>
    45c0:	sub	w4, w1, #0x1
    45c4:	ldr	x0, [x8, w4, sxtw #3]
    45c8:	cmp	x0, x2
    45cc:	b.cs	4654 <_gcry_mpih_mod_1+0x1dc>  // b.hs, b.nlast
    45d0:	sub	w4, w1, #0x2
    45d4:	lsr	x5, x2, #32
    45d8:	sxtw	x4, w4
    45dc:	and	x7, x2, #0xffffffff
    45e0:	tbnz	w4, #31, 4550 <_gcry_mpih_mod_1+0xd8>
    45e4:	udiv	x3, x0, x5
    45e8:	ldr	x6, [x8, x4, lsl #3]
    45ec:	mul	x1, x3, x7
    45f0:	msub	x3, x3, x5, x0
    45f4:	extr	x3, x3, x6, #32
    45f8:	cmp	x1, x3
    45fc:	b.ls	4614 <_gcry_mpih_mod_1+0x19c>  // b.plast
    4600:	adds	x3, x3, x2
    4604:	b.cs	4614 <_gcry_mpih_mod_1+0x19c>  // b.hs, b.nlast
    4608:	cmp	x1, x3
    460c:	b.ls	4614 <_gcry_mpih_mod_1+0x19c>  // b.plast
    4610:	add	x3, x3, x2
    4614:	sub	x1, x3, x1
    4618:	and	x6, x6, #0xffffffff
    461c:	udiv	x3, x1, x5
    4620:	mul	x0, x3, x7
    4624:	msub	x3, x3, x5, x1
    4628:	orr	x1, x6, x3, lsl #32
    462c:	cmp	x1, x0
    4630:	b.cs	4648 <_gcry_mpih_mod_1+0x1d0>  // b.hs, b.nlast
    4634:	adds	x1, x1, x2
    4638:	b.cs	4648 <_gcry_mpih_mod_1+0x1d0>  // b.hs, b.nlast
    463c:	cmp	x1, x0
    4640:	b.cs	4648 <_gcry_mpih_mod_1+0x1d0>  // b.hs, b.nlast
    4644:	add	x1, x1, x2
    4648:	sub	x0, x1, x0
    464c:	sub	x4, x4, #0x1
    4650:	b	45e0 <_gcry_mpih_mod_1+0x168>
    4654:	mov	x0, #0x0                   	// #0
    4658:	b	45d4 <_gcry_mpih_mod_1+0x15c>
    465c:	mov	x0, #0x0                   	// #0
    4660:	b	4550 <_gcry_mpih_mod_1+0xd8>
    4664:	nop
	...

0000000000004670 <_gcry_mpih_divrem>:
    4670:	stp	x29, x30, [sp, #-176]!
    4674:	cmp	w5, #0x1
    4678:	mov	x29, sp
    467c:	stp	x19, x20, [sp, #16]
    4680:	mov	x19, x0
    4684:	stp	x21, x22, [sp, #32]
    4688:	mov	w22, w1
    468c:	stp	x23, x24, [sp, #48]
    4690:	mov	x23, x4
    4694:	stp	x25, x26, [sp, #64]
    4698:	mov	w25, w3
    469c:	stp	x27, x28, [sp, #80]
    46a0:	b.eq	46c0 <_gcry_mpih_divrem+0x50>  // b.none
    46a4:	mov	w21, w5
    46a8:	cmp	w5, #0x2
    46ac:	b.eq	4858 <_gcry_mpih_divrem+0x1e8>  // b.none
    46b0:	cbnz	w5, 4a14 <_gcry_mpih_divrem+0x3a4>
    46b4:	adrp	x0, 0 <_gcry_mpi_m_check>
    46b8:	ldr	x0, [x0]
    46bc:	bl	0 <grub_fatal>
    46c0:	add	x0, x2, w25, sxtw #3
    46c4:	ldr	x5, [x23]
    46c8:	ldur	x4, [x0, #-8]
    46cc:	cmp	x5, x4
    46d0:	b.hi	4728 <_gcry_mpih_divrem+0xb8>  // b.pmore
    46d4:	sub	x4, x4, x5
    46d8:	mov	x20, #0x1                   	// #1
    46dc:	sub	w25, w25, #0x2
    46e0:	add	x19, x19, w22, sxtw #3
    46e4:	lsr	x8, x5, #32
    46e8:	and	x10, x5, #0xffffffff
    46ec:	sxtw	x25, w25
    46f0:	tbz	w25, #31, 4730 <_gcry_mpih_divrem+0xc0>
    46f4:	sub	w6, w22, #0x1
    46f8:	sub	x19, x19, #0x8
    46fc:	and	x10, x5, #0xffffffff
    4700:	tbz	w6, #31, 47c8 <_gcry_mpih_divrem+0x158>
    4704:	str	x4, [x2]
    4708:	mov	x0, x20
    470c:	ldp	x19, x20, [sp, #16]
    4710:	ldp	x21, x22, [sp, #32]
    4714:	ldp	x23, x24, [sp, #48]
    4718:	ldp	x25, x26, [sp, #64]
    471c:	ldp	x27, x28, [sp, #80]
    4720:	ldp	x29, x30, [sp], #176
    4724:	ret
    4728:	mov	x20, #0x0                   	// #0
    472c:	b	46dc <_gcry_mpih_divrem+0x6c>
    4730:	udiv	x1, x4, x8
    4734:	ldr	x7, [x2, x25, lsl #3]
    4738:	msub	x4, x1, x8, x4
    473c:	mul	x9, x10, x1
    4740:	extr	x3, x4, x7, #32
    4744:	cmp	x9, x3
    4748:	b.ls	47b8 <_gcry_mpih_divrem+0x148>  // b.plast
    474c:	sub	x0, x1, #0x1
    4750:	adds	x3, x5, x3
    4754:	b.cs	4768 <_gcry_mpih_divrem+0xf8>  // b.hs, b.nlast
    4758:	cmp	x9, x3
    475c:	b.ls	4768 <_gcry_mpih_divrem+0xf8>  // b.plast
    4760:	sub	x0, x1, #0x2
    4764:	add	x3, x3, x5
    4768:	sub	x3, x3, x9
    476c:	and	x4, x7, #0xffffffff
    4770:	udiv	x1, x3, x8
    4774:	msub	x3, x1, x8, x3
    4778:	mul	x9, x10, x1
    477c:	orr	x4, x4, x3, lsl #32
    4780:	cmp	x9, x4
    4784:	b.ls	47c0 <_gcry_mpih_divrem+0x150>  // b.plast
    4788:	sub	x3, x1, #0x1
    478c:	adds	x4, x5, x4
    4790:	b.cs	47a4 <_gcry_mpih_divrem+0x134>  // b.hs, b.nlast
    4794:	cmp	x9, x4
    4798:	b.ls	47a4 <_gcry_mpih_divrem+0x134>  // b.plast
    479c:	sub	x3, x1, #0x2
    47a0:	add	x4, x4, x5
    47a4:	orr	x0, x3, x0, lsl #32
    47a8:	sub	x4, x4, x9
    47ac:	str	x0, [x19, x25, lsl #3]
    47b0:	sub	x25, x25, #0x1
    47b4:	b	46f0 <_gcry_mpih_divrem+0x80>
    47b8:	mov	x0, x1
    47bc:	b	4768 <_gcry_mpih_divrem+0xf8>
    47c0:	mov	x3, x1
    47c4:	b	47a4 <_gcry_mpih_divrem+0x134>
    47c8:	udiv	x7, x4, x8
    47cc:	msub	x4, x7, x8, x4
    47d0:	mul	x1, x10, x7
    47d4:	lsl	x3, x4, #32
    47d8:	cmp	x1, x4, lsl #32
    47dc:	b.ls	4848 <_gcry_mpih_divrem+0x1d8>  // b.plast
    47e0:	sub	x0, x7, #0x1
    47e4:	adds	x3, x5, x3
    47e8:	b.cs	47fc <_gcry_mpih_divrem+0x18c>  // b.hs, b.nlast
    47ec:	cmp	x1, x3
    47f0:	b.ls	47fc <_gcry_mpih_divrem+0x18c>  // b.plast
    47f4:	sub	x0, x7, #0x2
    47f8:	add	x3, x3, x5
    47fc:	sub	x3, x3, x1
    4800:	udiv	x7, x3, x8
    4804:	msub	x3, x7, x8, x3
    4808:	mul	x9, x10, x7
    480c:	lsl	x4, x3, #32
    4810:	cmp	x9, x3, lsl #32
    4814:	b.ls	4850 <_gcry_mpih_divrem+0x1e0>  // b.plast
    4818:	sub	x1, x7, #0x1
    481c:	adds	x4, x5, x4
    4820:	b.cs	4834 <_gcry_mpih_divrem+0x1c4>  // b.hs, b.nlast
    4824:	cmp	x9, x4
    4828:	b.ls	4834 <_gcry_mpih_divrem+0x1c4>  // b.plast
    482c:	sub	x1, x7, #0x2
    4830:	add	x4, x4, x5
    4834:	orr	x0, x1, x0, lsl #32
    4838:	sub	x4, x4, x9
    483c:	sub	w6, w6, #0x1
    4840:	str	x0, [x19], #-8
    4844:	b	4700 <_gcry_mpih_divrem+0x90>
    4848:	mov	x0, x7
    484c:	b	47fc <_gcry_mpih_divrem+0x18c>
    4850:	mov	x1, x7
    4854:	b	4834 <_gcry_mpih_divrem+0x1c4>
    4858:	mov	x0, #0xfffffffffffffff0    	// #-16
    485c:	add	x0, x0, w3, sxtw #3
    4860:	add	x10, x2, x0
    4864:	ldp	x9, x5, [x23]
    4868:	ldr	x4, [x10, #8]
    486c:	ldr	x0, [x2, x0]
    4870:	cmp	x5, x4
    4874:	b.hi	48c0 <_gcry_mpih_divrem+0x250>  // b.pmore
    4878:	ccmp	x9, x0, #0x0, cs  // cs = hs, nlast
    487c:	b.hi	48c0 <_gcry_mpih_divrem+0x250>  // b.pmore
    4880:	subs	x0, x0, x9
    4884:	mov	x20, #0x1                   	// #1
    4888:	sbc	x4, x4, x5
    488c:	add	w25, w25, w22
    4890:	lsr	x8, x5, #32
    4894:	sub	w25, w25, #0x3
    4898:	lsr	x11, x9, #32
    489c:	and	x7, x5, #0xffffffff
    48a0:	and	x12, x9, #0xffffffff
    48a4:	sxtw	x25, w25
    48a8:	neg	x14, x9
    48ac:	mov	x13, #0x100000000           	// #4294967296
    48b0:	mov	x15, #0xffffffffffffffff    	// #-1
    48b4:	tbz	w25, #31, 48c8 <_gcry_mpih_divrem+0x258>
    48b8:	stp	x0, x4, [x10]
    48bc:	b	4708 <_gcry_mpih_divrem+0x98>
    48c0:	mov	x20, #0x0                   	// #0
    48c4:	b	488c <_gcry_mpih_divrem+0x21c>
    48c8:	cmp	w22, w25
    48cc:	b.gt	4904 <_gcry_mpih_divrem+0x294>
    48d0:	sub	x10, x10, #0x8
    48d4:	cmp	x4, x5
    48d8:	ldr	x3, [x10]
    48dc:	b.ne	4954 <_gcry_mpih_divrem+0x2e4>  // b.any
    48e0:	adds	x1, x0, x4
    48e4:	mov	x4, x1
    48e8:	b.cc	490c <_gcry_mpih_divrem+0x29c>  // b.lo, b.ul, b.last
    48ec:	adds	x0, x9, x3
    48f0:	sub	x4, x1, x9
    48f4:	cinc	x4, x4, cs  // cs = hs, nlast
    48f8:	str	x15, [x19, x25, lsl #3]
    48fc:	sub	x25, x25, #0x1
    4900:	b	48b4 <_gcry_mpih_divrem+0x244>
    4904:	str	xzr, [x10]
    4908:	b	48d4 <_gcry_mpih_divrem+0x264>
    490c:	cmp	x9, #0x0
    4910:	mov	x1, x14
    4914:	cset	x2, ne  // ne = any
    4918:	mov	x0, #0xffffffffffffffff    	// #-1
    491c:	sub	x2, x9, x2
    4920:	cmp	x2, x4
    4924:	b.hi	4930 <_gcry_mpih_divrem+0x2c0>  // b.pmore
    4928:	ccmp	x1, x3, #0x0, eq  // eq = none
    492c:	b.ls	4944 <_gcry_mpih_divrem+0x2d4>  // b.plast
    4930:	subs	x1, x1, x9
    4934:	sub	x0, x0, #0x1
    4938:	sbc	x2, x2, xzr
    493c:	adds	x4, x4, x5
    4940:	b.cc	4920 <_gcry_mpih_divrem+0x2b0>  // b.lo, b.ul, b.last
    4944:	str	x0, [x19, x25, lsl #3]
    4948:	subs	x0, x3, x1
    494c:	sbc	x4, x4, x2
    4950:	b	48fc <_gcry_mpih_divrem+0x28c>
    4954:	udiv	x2, x4, x8
    4958:	msub	x4, x2, x8, x4
    495c:	mul	x16, x7, x2
    4960:	extr	x4, x4, x0, #32
    4964:	cmp	x16, x4
    4968:	b.ls	4a04 <_gcry_mpih_divrem+0x394>  // b.plast
    496c:	sub	x1, x2, #0x1
    4970:	adds	x4, x5, x4
    4974:	b.cs	4988 <_gcry_mpih_divrem+0x318>  // b.hs, b.nlast
    4978:	cmp	x16, x4
    497c:	b.ls	4988 <_gcry_mpih_divrem+0x318>  // b.plast
    4980:	sub	x1, x2, #0x2
    4984:	add	x4, x4, x5
    4988:	sub	x4, x4, x16
    498c:	and	x0, x0, #0xffffffff
    4990:	udiv	x2, x4, x8
    4994:	msub	x4, x2, x8, x4
    4998:	mul	x16, x7, x2
    499c:	orr	x4, x0, x4, lsl #32
    49a0:	cmp	x16, x4
    49a4:	b.ls	4a0c <_gcry_mpih_divrem+0x39c>  // b.plast
    49a8:	sub	x0, x2, #0x1
    49ac:	adds	x4, x5, x4
    49b0:	b.cs	49c4 <_gcry_mpih_divrem+0x354>  // b.hs, b.nlast
    49b4:	cmp	x16, x4
    49b8:	b.ls	49c4 <_gcry_mpih_divrem+0x354>  // b.plast
    49bc:	sub	x0, x2, #0x2
    49c0:	add	x4, x4, x5
    49c4:	orr	x0, x0, x1, lsl #32
    49c8:	sub	x4, x4, x16
    49cc:	and	x16, x0, #0xffffffff
    49d0:	lsr	x1, x0, #32
    49d4:	mul	x17, x12, x16
    49d8:	mul	x16, x11, x16
    49dc:	mul	x2, x11, x1
    49e0:	madd	x1, x1, x12, x16
    49e4:	add	x1, x1, x17, lsr #32
    49e8:	cmp	x16, x1
    49ec:	b.ls	49f4 <_gcry_mpih_divrem+0x384>  // b.plast
    49f0:	add	x2, x2, x13
    49f4:	and	x17, x17, #0xffffffff
    49f8:	add	x2, x2, x1, lsr #32
    49fc:	add	x1, x17, x1, lsl #32
    4a00:	b	4920 <_gcry_mpih_divrem+0x2b0>
    4a04:	mov	x1, x2
    4a08:	b	4988 <_gcry_mpih_divrem+0x318>
    4a0c:	mov	x0, x2
    4a10:	b	49c4 <_gcry_mpih_divrem+0x354>
    4a14:	sub	w8, w3, w5
    4a18:	sbfiz	x0, x5, #3, #32
    4a1c:	sub	x28, x0, #0x8
    4a20:	str	x0, [sp, #136]
    4a24:	add	x24, x2, w8, sxtw #3
    4a28:	sub	x0, x0, #0x10
    4a2c:	str	x0, [sp, #104]
    4a30:	add	x20, x24, x28
    4a34:	ldr	x26, [x4, x28]
    4a38:	ldr	x1, [x24, x28]
    4a3c:	ldr	x0, [x4, x0]
    4a40:	str	x0, [sp, #96]
    4a44:	cmp	x26, x1
    4a48:	b.hi	4c34 <_gcry_mpih_divrem+0x5c4>  // b.pmore
    4a4c:	b.cc	4a60 <_gcry_mpih_divrem+0x3f0>  // b.lo, b.ul, b.last
    4a50:	sub	w0, w5, #0x2
    4a54:	add	x2, x4, #0x8
    4a58:	sxtw	x0, w0
    4a5c:	tbz	w0, #31, 4c1c <_gcry_mpih_divrem+0x5ac>
    4a60:	mov	x1, x24
    4a64:	mov	w3, w21
    4a68:	mov	x2, x23
    4a6c:	mov	x0, x24
    4a70:	bl	443c <_gcry_mpih_sub_n>
    4a74:	ldr	x1, [x20]
    4a78:	mov	x20, #0x1                   	// #1
    4a7c:	ldr	x0, [sp, #96]
    4a80:	add	w7, w25, w22
    4a84:	sub	w7, w7, w21
    4a88:	lsr	x11, x26, #32
    4a8c:	sub	w7, w7, #0x1
    4a90:	lsr	x0, x0, #32
    4a94:	str	x0, [sp, #112]
    4a98:	sub	w0, w21, #0x2
    4a9c:	str	w0, [sp, #156]
    4aa0:	and	x0, x26, #0xffffffff
    4aa4:	str	x0, [sp, #120]
    4aa8:	ldr	x0, [sp, #96]
    4aac:	sxtw	x27, w7
    4ab0:	and	x0, x0, #0xffffffff
    4ab4:	str	x0, [sp, #128]
    4ab8:	tbnz	w27, #31, 4708 <_gcry_mpih_divrem+0x98>
    4abc:	cmp	w22, w27
    4ac0:	b.gt	4c3c <_gcry_mpih_divrem+0x5cc>
    4ac4:	ldr	x0, [sp, #136]
    4ac8:	sub	x24, x24, #0x8
    4acc:	ldr	x12, [x24, x0]
    4ad0:	add	x0, x24, x28
    4ad4:	str	x0, [sp, #144]
    4ad8:	cmp	x1, x26
    4adc:	b.eq	4c94 <_gcry_mpih_divrem+0x624>  // b.none
    4ae0:	udiv	x2, x1, x11
    4ae4:	ldr	x0, [sp, #120]
    4ae8:	ldr	x3, [x24, x28]
    4aec:	msub	x1, x2, x11, x1
    4af0:	mul	x0, x0, x2
    4af4:	extr	x1, x1, x3, #32
    4af8:	cmp	x0, x1
    4afc:	b.ls	4c64 <_gcry_mpih_divrem+0x5f4>  // b.plast
    4b00:	sub	x13, x2, #0x1
    4b04:	adds	x1, x26, x1
    4b08:	b.cs	4b1c <_gcry_mpih_divrem+0x4ac>  // b.hs, b.nlast
    4b0c:	cmp	x0, x1
    4b10:	b.ls	4b1c <_gcry_mpih_divrem+0x4ac>  // b.plast
    4b14:	sub	x13, x2, #0x2
    4b18:	add	x1, x1, x26
    4b1c:	sub	x1, x1, x0
    4b20:	and	x3, x3, #0xffffffff
    4b24:	ldr	x0, [sp, #120]
    4b28:	udiv	x2, x1, x11
    4b2c:	msub	x1, x2, x11, x1
    4b30:	mul	x14, x0, x2
    4b34:	orr	x0, x3, x1, lsl #32
    4b38:	cmp	x14, x0
    4b3c:	b.ls	4c6c <_gcry_mpih_divrem+0x5fc>  // b.plast
    4b40:	sub	x1, x2, #0x1
    4b44:	adds	x0, x26, x0
    4b48:	b.cs	4b5c <_gcry_mpih_divrem+0x4ec>  // b.hs, b.nlast
    4b4c:	cmp	x14, x0
    4b50:	b.ls	4b5c <_gcry_mpih_divrem+0x4ec>  // b.plast
    4b54:	sub	x1, x2, #0x2
    4b58:	add	x0, x0, x26
    4b5c:	orr	x25, x1, x13, lsl #32
    4b60:	sub	x0, x0, x14
    4b64:	ldr	x2, [sp, #128]
    4b68:	and	x3, x25, #0xffffffff
    4b6c:	ldr	x4, [sp, #128]
    4b70:	lsr	x1, x25, #32
    4b74:	mul	x14, x2, x3
    4b78:	ldr	x2, [sp, #112]
    4b7c:	mul	x3, x2, x3
    4b80:	mul	x2, x2, x1
    4b84:	madd	x1, x1, x4, x3
    4b88:	add	x1, x1, x14, lsr #32
    4b8c:	cmp	x3, x1
    4b90:	b.ls	4b9c <_gcry_mpih_divrem+0x52c>  // b.plast
    4b94:	mov	x3, #0x100000000           	// #4294967296
    4b98:	add	x2, x2, x3
    4b9c:	and	x14, x14, #0xffffffff
    4ba0:	add	x2, x2, x1, lsr #32
    4ba4:	add	x1, x14, x1, lsl #32
    4ba8:	cmp	x2, x0
    4bac:	b.hi	4c74 <_gcry_mpih_divrem+0x604>  // b.pmore
    4bb0:	b.ne	4bc4 <_gcry_mpih_divrem+0x554>  // b.any
    4bb4:	ldr	x3, [sp, #104]
    4bb8:	ldr	x3, [x24, x3]
    4bbc:	cmp	x3, x1
    4bc0:	b.cc	4c74 <_gcry_mpih_divrem+0x604>  // b.lo, b.ul, b.last
    4bc4:	mov	x3, x25
    4bc8:	mov	w2, w21
    4bcc:	mov	x1, x23
    4bd0:	mov	x0, x24
    4bd4:	stp	x12, x11, [sp, #160]
    4bd8:	bl	4384 <_gcry_mpih_submul_1>
    4bdc:	ldp	x12, x11, [sp, #160]
    4be0:	cmp	x12, x0
    4be4:	b.eq	4c08 <_gcry_mpih_divrem+0x598>  // b.none
    4be8:	mov	w3, w21
    4bec:	mov	x2, x23
    4bf0:	mov	x1, x24
    4bf4:	mov	x0, x24
    4bf8:	str	x11, [sp, #160]
    4bfc:	bl	4404 <_gcry_mpih_add_n>
    4c00:	ldr	x11, [sp, #160]
    4c04:	sub	x25, x25, #0x1
    4c08:	ldr	x0, [sp, #144]
    4c0c:	str	x25, [x19, x27, lsl #3]
    4c10:	sub	x27, x27, #0x1
    4c14:	ldr	x1, [x0]
    4c18:	b	4ab8 <_gcry_mpih_divrem+0x448>
    4c1c:	ldr	x7, [x24, x0, lsl #3]
    4c20:	sub	x0, x0, #0x1
    4c24:	ldr	x3, [x2, x0, lsl #3]
    4c28:	cmp	x7, x3
    4c2c:	b.eq	4a5c <_gcry_mpih_divrem+0x3ec>  // b.none
    4c30:	b.hi	4a60 <_gcry_mpih_divrem+0x3f0>  // b.pmore
    4c34:	mov	x20, #0x0                   	// #0
    4c38:	b	4a7c <_gcry_mpih_divrem+0x40c>
    4c3c:	ldrsw	x0, [sp, #156]
    4c40:	add	x2, x24, #0x8
    4c44:	ldr	x12, [x24, x28]
    4c48:	tbz	w0, #31, 4c54 <_gcry_mpih_divrem+0x5e4>
    4c4c:	str	xzr, [x24]
    4c50:	b	4ad0 <_gcry_mpih_divrem+0x460>
    4c54:	ldr	x3, [x24, x0, lsl #3]
    4c58:	str	x3, [x2, x0, lsl #3]
    4c5c:	sub	x0, x0, #0x1
    4c60:	b	4c48 <_gcry_mpih_divrem+0x5d8>
    4c64:	mov	x13, x2
    4c68:	b	4b1c <_gcry_mpih_divrem+0x4ac>
    4c6c:	mov	x1, x2
    4c70:	b	4b5c <_gcry_mpih_divrem+0x4ec>
    4c74:	sub	x25, x25, #0x1
    4c78:	adds	x0, x0, x26
    4c7c:	b.cs	4bc4 <_gcry_mpih_divrem+0x554>  // b.hs, b.nlast
    4c80:	ldr	x3, [sp, #96]
    4c84:	cmp	x1, x3
    4c88:	sub	x1, x1, x3
    4c8c:	sbc	x2, x2, xzr
    4c90:	b	4ba8 <_gcry_mpih_divrem+0x538>
    4c94:	mov	x25, #0xffffffffffffffff    	// #-1
    4c98:	b	4bc4 <_gcry_mpih_divrem+0x554>
    4c9c:	nop
	...

0000000000004ca8 <_gcry_mpih_divmod_1>:
    4ca8:	mov	x8, x0
    4cac:	cbz	w2, 4f10 <_gcry_mpih_divmod_1+0x268>
    4cb0:	mov	x5, #0x38                  	// #56
    4cb4:	lsr	x0, x3, x5
    4cb8:	tst	w0, #0xff
    4cbc:	b.ne	4cc8 <_gcry_mpih_divmod_1+0x20>  // b.any
    4cc0:	subs	x5, x5, #0x8
    4cc4:	b.ne	4cb4 <_gcry_mpih_divmod_1+0xc>  // b.any
    4cc8:	adrp	x0, 0 <_gcry_mpi_m_check>
    4ccc:	mov	w12, #0x40                  	// #64
    4cd0:	sub	w4, w12, w5
    4cd4:	lsr	x5, x3, x5
    4cd8:	ldr	x0, [x0]
    4cdc:	ldrb	w0, [x0, x5]
    4ce0:	subs	w0, w4, w0
    4ce4:	b.eq	4e44 <_gcry_mpih_divmod_1+0x19c>  // b.none
    4ce8:	add	x4, x1, w2, sxtw #3
    4cec:	sub	w2, w2, #0x2
    4cf0:	lsl	x3, x3, x0
    4cf4:	sub	w12, w12, w0
    4cf8:	sxtw	x9, w2
    4cfc:	lsr	x5, x3, #32
    4d00:	ldur	x14, [x4, #-8]
    4d04:	and	x2, x3, #0xffffffff
    4d08:	add	x16, x8, #0x8
    4d0c:	lsr	x6, x14, x12
    4d10:	udiv	x10, x6, x5
    4d14:	msub	x6, x10, x5, x6
    4d18:	mul	x4, x10, x2
    4d1c:	lsl	x7, x6, #32
    4d20:	lsl	x6, x14, x0
    4d24:	tbz	w9, #31, 4da0 <_gcry_mpih_divmod_1+0xf8>
    4d28:	orr	x1, x7, x6, lsr #32
    4d2c:	cmp	x1, x4
    4d30:	b.cs	4e34 <_gcry_mpih_divmod_1+0x18c>  // b.hs, b.nlast
    4d34:	sub	x7, x10, #0x1
    4d38:	adds	x1, x1, x3
    4d3c:	b.cs	4d50 <_gcry_mpih_divmod_1+0xa8>  // b.hs, b.nlast
    4d40:	cmp	x1, x4
    4d44:	b.cs	4d50 <_gcry_mpih_divmod_1+0xa8>  // b.hs, b.nlast
    4d48:	sub	x7, x10, #0x2
    4d4c:	add	x1, x1, x3
    4d50:	sub	x1, x1, x4
    4d54:	udiv	x9, x1, x5
    4d58:	msub	x5, x9, x5, x1
    4d5c:	mul	x4, x9, x2
    4d60:	and	x2, x6, #0xffffffff
    4d64:	orr	x2, x2, x5, lsl #32
    4d68:	cmp	x4, x2
    4d6c:	b.ls	4e3c <_gcry_mpih_divmod_1+0x194>  // b.plast
    4d70:	sub	x1, x9, #0x1
    4d74:	adds	x2, x2, x3
    4d78:	b.cs	4d8c <_gcry_mpih_divmod_1+0xe4>  // b.hs, b.nlast
    4d7c:	cmp	x4, x2
    4d80:	b.ls	4d8c <_gcry_mpih_divmod_1+0xe4>  // b.plast
    4d84:	sub	x1, x9, #0x2
    4d88:	add	x2, x2, x3
    4d8c:	sub	x2, x2, x4
    4d90:	orr	x7, x1, x7, lsl #32
    4d94:	str	x7, [x8]
    4d98:	lsr	x0, x2, x0
    4d9c:	ret
    4da0:	ldr	x14, [x1, x9, lsl #3]
    4da4:	lsr	x11, x14, x12
    4da8:	orr	x11, x11, x6
    4dac:	orr	x7, x7, x11, lsr #32
    4db0:	cmp	x7, x4
    4db4:	b.cs	4e24 <_gcry_mpih_divmod_1+0x17c>  // b.hs, b.nlast
    4db8:	sub	x13, x10, #0x1
    4dbc:	adds	x7, x7, x3
    4dc0:	b.cs	4dd4 <_gcry_mpih_divmod_1+0x12c>  // b.hs, b.nlast
    4dc4:	cmp	x7, x4
    4dc8:	b.cs	4dd4 <_gcry_mpih_divmod_1+0x12c>  // b.hs, b.nlast
    4dcc:	sub	x13, x10, #0x2
    4dd0:	add	x7, x7, x3
    4dd4:	sub	x7, x7, x4
    4dd8:	and	x11, x11, #0xffffffff
    4ddc:	udiv	x4, x7, x5
    4de0:	msub	x7, x4, x5, x7
    4de4:	mul	x15, x4, x2
    4de8:	orr	x6, x11, x7, lsl #32
    4dec:	cmp	x15, x6
    4df0:	b.ls	4e2c <_gcry_mpih_divmod_1+0x184>  // b.plast
    4df4:	sub	x10, x4, #0x1
    4df8:	adds	x6, x6, x3
    4dfc:	b.cs	4e10 <_gcry_mpih_divmod_1+0x168>  // b.hs, b.nlast
    4e00:	cmp	x15, x6
    4e04:	b.ls	4e10 <_gcry_mpih_divmod_1+0x168>  // b.plast
    4e08:	sub	x10, x4, #0x2
    4e0c:	add	x6, x6, x3
    4e10:	orr	x13, x10, x13, lsl #32
    4e14:	sub	x6, x6, x15
    4e18:	str	x13, [x16, x9, lsl #3]
    4e1c:	sub	x9, x9, #0x1
    4e20:	b	4d10 <_gcry_mpih_divmod_1+0x68>
    4e24:	mov	x13, x10
    4e28:	b	4dd4 <_gcry_mpih_divmod_1+0x12c>
    4e2c:	mov	x10, x4
    4e30:	b	4e10 <_gcry_mpih_divmod_1+0x168>
    4e34:	mov	x7, x10
    4e38:	b	4d50 <_gcry_mpih_divmod_1+0xa8>
    4e3c:	mov	x1, x9
    4e40:	b	4d8c <_gcry_mpih_divmod_1+0xe4>
    4e44:	sub	w5, w2, #0x1
    4e48:	sbfiz	x4, x5, #3, #32
    4e4c:	ldr	x0, [x1, x4]
    4e50:	cmp	x0, x3
    4e54:	b.cs	4ef8 <_gcry_mpih_divmod_1+0x250>  // b.hs, b.nlast
    4e58:	sub	w5, w2, #0x2
    4e5c:	str	xzr, [x8, x4]
    4e60:	lsr	x9, x3, #32
    4e64:	sxtw	x5, w5
    4e68:	and	x12, x3, #0xffffffff
    4e6c:	tbnz	w5, #31, 4d9c <_gcry_mpih_divmod_1+0xf4>
    4e70:	udiv	x7, x0, x9
    4e74:	ldr	x10, [x1, x5, lsl #3]
    4e78:	msub	x2, x7, x9, x0
    4e7c:	mul	x11, x7, x12
    4e80:	extr	x4, x2, x10, #32
    4e84:	cmp	x11, x4
    4e88:	b.ls	4f00 <_gcry_mpih_divmod_1+0x258>  // b.plast
    4e8c:	sub	x6, x7, #0x1
    4e90:	adds	x4, x4, x3
    4e94:	b.cs	4ea8 <_gcry_mpih_divmod_1+0x200>  // b.hs, b.nlast
    4e98:	cmp	x4, x11
    4e9c:	b.cs	4ea8 <_gcry_mpih_divmod_1+0x200>  // b.hs, b.nlast
    4ea0:	sub	x6, x7, #0x2
    4ea4:	add	x4, x4, x3
    4ea8:	sub	x4, x4, x11
    4eac:	and	x10, x10, #0xffffffff
    4eb0:	udiv	x7, x4, x9
    4eb4:	msub	x4, x7, x9, x4
    4eb8:	mul	x0, x7, x12
    4ebc:	orr	x2, x10, x4, lsl #32
    4ec0:	cmp	x2, x0
    4ec4:	b.cs	4f08 <_gcry_mpih_divmod_1+0x260>  // b.hs, b.nlast
    4ec8:	sub	x10, x7, #0x1
    4ecc:	adds	x2, x2, x3
    4ed0:	b.cs	4ee4 <_gcry_mpih_divmod_1+0x23c>  // b.hs, b.nlast
    4ed4:	cmp	x2, x0
    4ed8:	b.cs	4ee4 <_gcry_mpih_divmod_1+0x23c>  // b.hs, b.nlast
    4edc:	sub	x10, x7, #0x2
    4ee0:	add	x2, x2, x3
    4ee4:	orr	x6, x10, x6, lsl #32
    4ee8:	sub	x0, x2, x0
    4eec:	str	x6, [x8, x5, lsl #3]
    4ef0:	sub	x5, x5, #0x1
    4ef4:	b	4e6c <_gcry_mpih_divmod_1+0x1c4>
    4ef8:	mov	x0, #0x0                   	// #0
    4efc:	b	4e60 <_gcry_mpih_divmod_1+0x1b8>
    4f00:	mov	x6, x7
    4f04:	b	4ea8 <_gcry_mpih_divmod_1+0x200>
    4f08:	mov	x10, x7
    4f0c:	b	4ee4 <_gcry_mpih_divmod_1+0x23c>
    4f10:	mov	x0, #0x0                   	// #0
    4f14:	b	4d9c <_gcry_mpih_divmod_1+0xf4>
	...
    4f20:	stp	x29, x30, [sp, #-48]!
    4f24:	mov	x29, sp
    4f28:	stp	x19, x20, [sp, #16]
    4f2c:	mov	x20, x0
    4f30:	str	x21, [sp, #32]
    4f34:	mov	x21, x1
    4f38:	cbz	x2, 4f44 <_gcry_mpih_divmod_1+0x29c>
    4f3c:	ldr	w0, [x0, #8]
    4f40:	str	w0, [x2]
    4f44:	ldr	w2, [x20, #4]
    4f48:	lsl	w2, w2, #3
    4f4c:	str	w2, [x21]
    4f50:	cmp	w2, #0x0
    4f54:	csinc	w2, w2, wzr, ne  // ne = any
    4f58:	mov	w0, w2
    4f5c:	cbnz	w3, 4f68 <_gcry_mpih_divmod_1+0x2c0>
    4f60:	ldr	w1, [x20, #12]
    4f64:	tbz	w1, #0, 4fc8 <_gcry_mpih_divmod_1+0x320>
    4f68:	bl	5dac <gcry_malloc_secure>
    4f6c:	mov	x19, x0
    4f70:	cbz	x0, 4fb4 <_gcry_mpih_divmod_1+0x30c>
    4f74:	mov	x2, x0
    4f78:	ldr	w0, [x20, #4]
    4f7c:	sub	w1, w0, #0x1
    4f80:	add	x0, x19, w0, sxtw #3
    4f84:	add	x2, x2, #0x8
    4f88:	tbz	w1, #31, 4fd0 <_gcry_mpih_divmod_1+0x328>
    4f8c:	mov	x1, x19
    4f90:	ldr	w2, [x21]
    4f94:	cbz	w2, 4fa0 <_gcry_mpih_divmod_1+0x2f8>
    4f98:	ldrb	w0, [x1]
    4f9c:	cbz	w0, 5020 <_gcry_mpih_divmod_1+0x378>
    4fa0:	cmp	x1, x19
    4fa4:	b.eq	4fb4 <_gcry_mpih_divmod_1+0x30c>  // b.none
    4fa8:	mov	w2, w2
    4fac:	mov	x0, x19
    4fb0:	bl	0 <grub_memmove>
    4fb4:	mov	x0, x19
    4fb8:	ldp	x19, x20, [sp, #16]
    4fbc:	ldr	x21, [sp, #32]
    4fc0:	ldp	x29, x30, [sp], #48
    4fc4:	ret
    4fc8:	bl	5da8 <gcry_malloc>
    4fcc:	b	4f6c <_gcry_mpih_divmod_1+0x2c4>
    4fd0:	ldr	x4, [x20, #16]
    4fd4:	sub	x3, x0, x2
    4fd8:	sub	w1, w1, #0x1
    4fdc:	ldr	x3, [x4, x3]
    4fe0:	sturb	w3, [x2, #-1]
    4fe4:	lsr	x4, x3, #56
    4fe8:	sturb	w4, [x2, #-8]
    4fec:	lsr	x4, x3, #48
    4ff0:	sturb	w4, [x2, #-7]
    4ff4:	lsr	x4, x3, #40
    4ff8:	sturb	w4, [x2, #-6]
    4ffc:	lsr	x4, x3, #32
    5000:	sturb	w4, [x2, #-5]
    5004:	lsr	x4, x3, #24
    5008:	sturb	w4, [x2, #-4]
    500c:	lsr	x4, x3, #16
    5010:	sturb	w4, [x2, #-3]
    5014:	lsr	x4, x3, #8
    5018:	sturb	w4, [x2, #-2]
    501c:	b	4f84 <_gcry_mpih_divmod_1+0x2dc>
    5020:	sub	w2, w2, #0x1
    5024:	add	x1, x1, #0x1
    5028:	str	w2, [x21]
    502c:	b	4f90 <_gcry_mpih_divmod_1+0x2e8>

0000000000005030 <gcry_mpi_dump>:
    5030:	stp	x29, x30, [sp, #-64]!
    5034:	mov	x29, sp
    5038:	stp	x19, x20, [sp, #16]
    503c:	mov	x19, x0
    5040:	adrp	x0, 0 <_gcry_mpi_m_check>
    5044:	stp	x21, x22, [sp, #32]
    5048:	ldr	x0, [x0]
    504c:	str	x23, [sp, #48]
    5050:	bl	5e54 <_gcry_log_printf>
    5054:	cbnz	x19, 5074 <gcry_mpi_dump+0x44>
    5058:	adrp	x0, 0 <_gcry_mpi_m_check>
    505c:	ldr	x0, [x0]
    5060:	ldp	x19, x20, [sp, #16]
    5064:	ldp	x21, x22, [sp, #32]
    5068:	ldr	x23, [sp, #48]
    506c:	ldp	x29, x30, [sp], #64
    5070:	b	5e54 <_gcry_log_printf>
    5074:	ldr	w0, [x19, #8]
    5078:	cbz	w0, 5088 <gcry_mpi_dump+0x58>
    507c:	adrp	x0, 0 <_gcry_mpi_m_check>
    5080:	ldr	x0, [x0]
    5084:	bl	5e54 <_gcry_log_printf>
    5088:	ldr	w20, [x19, #4]
    508c:	mov	x21, #0xfffffffffffffff8    	// #-8
    5090:	adrp	x22, 0 <_gcry_mpi_m_check>
    5094:	adrp	x23, 0 <_gcry_mpi_m_check>
    5098:	add	x21, x21, w20, sxtw #3
    509c:	ldr	w0, [x19, #4]
    50a0:	cmp	w20, #0x0
    50a4:	b.gt	50b8 <gcry_mpi_dump+0x88>
    50a8:	cbnz	w0, 50e4 <gcry_mpi_dump+0xb4>
    50ac:	adrp	x0, 0 <_gcry_mpi_m_check>
    50b0:	ldr	x0, [x0]
    50b4:	b	5060 <gcry_mpi_dump+0x30>
    50b8:	cmp	w20, w0
    50bc:	b.ne	50dc <gcry_mpi_dump+0xac>  // b.any
    50c0:	ldr	x0, [x23]
    50c4:	sub	w20, w20, #0x1
    50c8:	ldr	x1, [x19, #16]
    50cc:	ldr	x1, [x1, x21]
    50d0:	sub	x21, x21, #0x8
    50d4:	bl	5e54 <_gcry_log_printf>
    50d8:	b	509c <gcry_mpi_dump+0x6c>
    50dc:	ldr	x0, [x22]
    50e0:	b	50c4 <gcry_mpi_dump+0x94>
    50e4:	ldp	x19, x20, [sp, #16]
    50e8:	ldp	x21, x22, [sp, #32]
    50ec:	ldr	x23, [sp, #48]
    50f0:	ldp	x29, x30, [sp], #64
    50f4:	ret
	...

0000000000005128 <_gcry_log_mpidump>:
    5128:	stp	x29, x30, [sp, #-32]!
    512c:	mov	x29, sp
    5130:	str	x19, [sp, #16]
    5134:	mov	x19, x1
    5138:	mov	x1, x0
    513c:	adrp	x0, 0 <_gcry_mpi_m_check>
    5140:	ldr	x0, [x0]
    5144:	bl	5e54 <_gcry_log_printf>
    5148:	mov	x0, x19
    514c:	bl	5030 <gcry_mpi_dump>
    5150:	adrp	x0, 0 <_gcry_mpi_m_check>
    5154:	ldr	x19, [sp, #16]
    5158:	ldp	x29, x30, [sp], #32
    515c:	ldr	x0, [x0]
    5160:	b	5e54 <_gcry_log_printf>
    5164:	nop
	...

0000000000005178 <_gcry_mpi_get_buffer>:
    5178:	mov	w3, #0x0                   	// #0
    517c:	b	4f20 <_gcry_mpih_divmod_1+0x278>

0000000000005180 <_gcry_mpi_get_secure_buffer>:
    5180:	mov	w3, #0x1                   	// #1
    5184:	b	4f20 <_gcry_mpih_divmod_1+0x278>

0000000000005188 <_gcry_mpi_set_buffer>:
    5188:	stp	x29, x30, [sp, #-64]!
    518c:	mov	x29, sp
    5190:	stp	x19, x20, [sp, #16]
    5194:	mov	x20, x1
    5198:	mov	w19, w2
    519c:	add	w1, w2, #0x7
    51a0:	ldr	w2, [x0]
    51a4:	stp	x21, x22, [sp, #32]
    51a8:	mov	x21, x0
    51ac:	lsr	w22, w1, #3
    51b0:	str	x23, [sp, #48]
    51b4:	cmp	w2, w1, lsr #3
    51b8:	mov	w23, w3
    51bc:	b.ge	51c8 <_gcry_mpi_set_buffer+0x40>  // b.tcont
    51c0:	mov	w1, w22
    51c4:	bl	170 <_gcry_mpi_resize>
    51c8:	mov	w2, w19
    51cc:	add	x7, x20, #0x8
    51d0:	sub	x2, x2, #0x1
    51d4:	str	w23, [x21, #8]
    51d8:	add	x5, x20, x2
    51dc:	mov	x3, x5
    51e0:	cmp	x3, x7
    51e4:	b.cs	52dc <_gcry_mpi_set_buffer+0x154>  // b.hs, b.nlast
    51e8:	lsr	x2, x2, #3
    51ec:	mov	x0, #0xfffffffffffffff8    	// #-8
    51f0:	add	x3, x20, #0x7
    51f4:	add	x6, x5, #0x7
    51f8:	cmp	x6, x3
    51fc:	mul	x0, x2, x0
    5200:	csel	w2, w2, wzr, cs  // cs = hs, nlast
    5204:	csel	x0, x0, xzr, cs  // cs = hs, nlast
    5208:	add	x4, x5, x0
    520c:	cmp	x20, x4
    5210:	b.hi	52b0 <_gcry_mpi_set_buffer+0x128>  // b.pmore
    5214:	ldrb	w3, [x5, x0]
    5218:	sub	x0, x4, #0x1
    521c:	cmp	x20, x0
    5220:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    5224:	ldurb	w0, [x4, #-1]
    5228:	orr	x3, x3, x0, lsl #8
    522c:	sub	x0, x4, #0x2
    5230:	cmp	x20, x0
    5234:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    5238:	ldurb	w0, [x4, #-2]
    523c:	orr	x3, x3, x0, lsl #16
    5240:	sub	x0, x4, #0x3
    5244:	cmp	x20, x0
    5248:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    524c:	ldurb	w0, [x4, #-3]
    5250:	orr	x3, x3, x0, lsl #24
    5254:	sub	x0, x4, #0x4
    5258:	cmp	x20, x0
    525c:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    5260:	ldurb	w0, [x4, #-4]
    5264:	orr	x3, x3, x0, lsl #32
    5268:	sub	x0, x4, #0x5
    526c:	cmp	x20, x0
    5270:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    5274:	ldurb	w0, [x4, #-5]
    5278:	orr	x3, x3, x0, lsl #40
    527c:	sub	x0, x4, #0x6
    5280:	cmp	x20, x0
    5284:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    5288:	ldurb	w0, [x4, #-6]
    528c:	orr	x3, x3, x0, lsl #48
    5290:	sub	x0, x4, #0x7
    5294:	cmp	x20, x0
    5298:	b.hi	52a4 <_gcry_mpi_set_buffer+0x11c>  // b.pmore
    529c:	ldurb	w0, [x4, #-7]
    52a0:	orr	x3, x3, x0, lsl #56
    52a4:	ldr	x0, [x21, #16]
    52a8:	str	x3, [x0, w2, sxtw #3]
    52ac:	add	w2, w2, #0x1
    52b0:	str	w2, [x21, #4]
    52b4:	cmp	w2, w22
    52b8:	b.eq	5338 <_gcry_mpi_set_buffer+0x1b0>  // b.none
    52bc:	adrp	x0, 0 <_gcry_mpi_m_check>
    52c0:	mov	w2, #0x16f                 	// #367
    52c4:	ldr	x3, [x0]
    52c8:	adrp	x0, 0 <_gcry_mpi_m_check>
    52cc:	ldr	x1, [x0]
    52d0:	adrp	x0, 0 <_gcry_mpi_m_check>
    52d4:	ldr	x0, [x0]
    52d8:	bl	0 <_gcry_assert_failed>
    52dc:	ldurb	w4, [x3, #-7]
    52e0:	sub	x8, x5, x3
    52e4:	ldrb	w0, [x3]
    52e8:	sub	x3, x3, #0x8
    52ec:	ldrb	w1, [x3, #4]
    52f0:	ldrb	w6, [x3, #6]
    52f4:	orr	x0, x0, x4, lsl #56
    52f8:	ldrb	w4, [x3, #5]
    52fc:	lsl	x1, x1, #32
    5300:	lsl	x6, x6, #16
    5304:	orr	x4, x1, x4, lsl #24
    5308:	ldrb	w1, [x3, #7]
    530c:	ldr	x9, [x21, #16]
    5310:	orr	x1, x6, x1, lsl #8
    5314:	ldrb	w6, [x3, #3]
    5318:	orr	x4, x4, x1
    531c:	ldrb	w1, [x3, #2]
    5320:	lsl	x1, x1, #48
    5324:	orr	x6, x1, x6, lsl #40
    5328:	orr	x4, x4, x6
    532c:	orr	x4, x4, x0
    5330:	str	x4, [x9, x8]
    5334:	b	51e0 <_gcry_mpi_set_buffer+0x58>
    5338:	ldp	x19, x20, [sp, #16]
    533c:	ldp	x21, x22, [sp, #32]
    5340:	ldr	x23, [sp, #48]
    5344:	ldp	x29, x30, [sp], #64
    5348:	ret
    534c:	nop
	...

0000000000005368 <gcry_mpi_scan>:
    5368:	stp	x29, x30, [sp, #-80]!
    536c:	mov	x29, sp
    5370:	stp	x19, x20, [sp, #16]
    5374:	mov	w20, w1
    5378:	mov	x19, x2
    537c:	stp	x21, x22, [sp, #32]
    5380:	mov	x22, x0
    5384:	mov	x21, x3
    5388:	stp	x23, x24, [sp, #48]
    538c:	mov	x24, x4
    5390:	stp	x25, x26, [sp, #64]
    5394:	cbz	x2, 5408 <gcry_mpi_scan+0xa0>
    5398:	mov	x0, x2
    539c:	bl	5db4 <gcry_is_secure>
    53a0:	cmp	w0, #0x0
    53a4:	cset	w1, ne  // ne = any
    53a8:	cmp	w20, #0x3
    53ac:	b.eq	5568 <gcry_mpi_scan+0x200>  // b.none
    53b0:	mov	w25, w21
    53b4:	cmp	w20, #0x1
    53b8:	b.ne	5418 <gcry_mpi_scan+0xb0>  // b.any
    53bc:	add	w0, w21, #0x7
    53c0:	lsr	w0, w0, #3
    53c4:	cbz	w1, 5410 <gcry_mpi_scan+0xa8>
    53c8:	bl	b4 <_gcry_mpi_alloc_secure>
    53cc:	mov	x20, x0
    53d0:	cbz	w21, 544c <gcry_mpi_scan+0xe4>
    53d4:	ldrsb	w0, [x19]
    53d8:	lsr	w1, w0, #31
    53dc:	str	w1, [x20, #8]
    53e0:	tbz	w0, #31, 5438 <gcry_mpi_scan+0xd0>
    53e4:	mov	x0, x20
    53e8:	bl	230 <_gcry_mpi_free>
    53ec:	mov	w0, #0x9                   	// #9
    53f0:	ldp	x19, x20, [sp, #16]
    53f4:	ldp	x21, x22, [sp, #32]
    53f8:	ldp	x23, x24, [sp, #48]
    53fc:	ldp	x25, x26, [sp, #64]
    5400:	ldp	x29, x30, [sp], #80
    5404:	ret
    5408:	mov	w1, #0x0                   	// #0
    540c:	b	53a8 <gcry_mpi_scan+0x40>
    5410:	bl	68 <_gcry_mpi_alloc>
    5414:	b	53cc <gcry_mpi_scan+0x64>
    5418:	cmp	w20, #0x5
    541c:	b.ne	5468 <gcry_mpi_scan+0x100>  // b.any
    5420:	add	w0, w21, #0x7
    5424:	lsr	w0, w0, #3
    5428:	cbz	w1, 5460 <gcry_mpi_scan+0xf8>
    542c:	bl	b4 <_gcry_mpi_alloc_secure>
    5430:	mov	x20, x0
    5434:	cbz	w21, 544c <gcry_mpi_scan+0xe4>
    5438:	mov	w2, w21
    543c:	mov	x1, x19
    5440:	mov	x0, x20
    5444:	mov	w3, #0x0                   	// #0
    5448:	bl	5188 <_gcry_mpi_set_buffer>
    544c:	mov	x0, x20
    5450:	cbz	x22, 5670 <gcry_mpi_scan+0x308>
    5454:	bl	7b0 <_gcry_mpi_normalize>
    5458:	str	x20, [x22]
    545c:	b	54e8 <gcry_mpi_scan+0x180>
    5460:	bl	68 <_gcry_mpi_alloc>
    5464:	b	5430 <gcry_mpi_scan+0xc8>
    5468:	cmp	w20, #0x2
    546c:	b.ne	55c8 <gcry_mpi_scan+0x260>  // b.any
    5470:	cmp	w21, #0x1
    5474:	b.ls	576c <gcry_mpi_scan+0x404>  // b.plast
    5478:	ldrh	w21, [x19]
    547c:	rev16	w21, w21
    5480:	and	w21, w21, #0xffff
    5484:	cmp	w21, #0x4, lsl #12
    5488:	b.hi	576c <gcry_mpi_scan+0x404>  // b.pmore
    548c:	add	w21, w21, #0x7
    5490:	add	x19, x19, #0x2
    5494:	lsr	w21, w21, #3
    5498:	add	w0, w21, #0x7
    549c:	lsr	w26, w0, #3
    54a0:	mov	w0, w26
    54a4:	cbz	w1, 54f0 <gcry_mpi_scan+0x188>
    54a8:	bl	b4 <_gcry_mpi_alloc_secure>
    54ac:	mov	x23, x0
    54b0:	neg	w21, w21
    54b4:	mov	x1, #0xfffffffffffffff8    	// #-8
    54b8:	and	w21, w21, #0x7
    54bc:	mov	w0, w26
    54c0:	add	x1, x1, w26, uxtw #3
    54c4:	stp	w26, wzr, [x23, #4]
    54c8:	cbnz	w0, 54f8 <gcry_mpi_scan+0x190>
    54cc:	cbnz	x24, 551c <gcry_mpi_scan+0x1b4>
    54d0:	cmp	x22, #0x0
    54d4:	ccmp	x23, #0x0, #0x4, ne  // ne = any
    54d8:	b.eq	5550 <gcry_mpi_scan+0x1e8>  // b.none
    54dc:	mov	x0, x23
    54e0:	bl	7b0 <_gcry_mpi_normalize>
    54e4:	str	x23, [x22]
    54e8:	mov	w0, #0x0                   	// #0
    54ec:	b	53f0 <gcry_mpi_scan+0x88>
    54f0:	bl	68 <_gcry_mpi_alloc>
    54f4:	b	54ac <gcry_mpi_scan+0x144>
    54f8:	sub	w21, w21, w20
    54fc:	mov	x2, #0x0                   	// #0
    5500:	add	w20, w20, #0x1
    5504:	cmp	w25, w20
    5508:	b.cs	5524 <gcry_mpi_scan+0x1bc>  // b.hs, b.nlast
    550c:	mov	x0, x23
    5510:	bl	230 <_gcry_mpi_free>
    5514:	cbz	x24, 5554 <gcry_mpi_scan+0x1ec>
    5518:	mov	x23, #0x0                   	// #0
    551c:	str	x20, [x24]
    5520:	b	54d0 <gcry_mpi_scan+0x168>
    5524:	ldrb	w3, [x19], #1
    5528:	orr	x2, x3, x2, lsl #8
    552c:	add	w3, w21, w20
    5530:	cmp	w3, #0x8
    5534:	b.ne	5500 <gcry_mpi_scan+0x198>  // b.any
    5538:	ldr	x3, [x23, #16]
    553c:	sub	w0, w0, #0x1
    5540:	mov	w21, #0x0                   	// #0
    5544:	str	x2, [x3, x1]
    5548:	sub	x1, x1, #0x8
    554c:	b	54c8 <gcry_mpi_scan+0x160>
    5550:	cbnz	x23, 555c <gcry_mpi_scan+0x1f4>
    5554:	mov	w0, #0xe                   	// #14
    5558:	b	53f0 <gcry_mpi_scan+0x88>
    555c:	mov	x0, x23
    5560:	bl	230 <_gcry_mpi_free>
    5564:	b	5554 <gcry_mpi_scan+0x1ec>
    5568:	ldr	w23, [x19]
    556c:	rev	w23, w23
    5570:	sxtw	x21, w23
    5574:	add	x0, x21, #0x7
    5578:	lsr	x0, x0, #3
    557c:	cbz	w1, 55c0 <gcry_mpi_scan+0x258>
    5580:	bl	b4 <_gcry_mpi_alloc_secure>
    5584:	mov	x20, x0
    5588:	cbz	x21, 55b0 <gcry_mpi_scan+0x248>
    558c:	ldrsb	w0, [x19, #4]
    5590:	lsr	w1, w0, #31
    5594:	str	w1, [x20, #8]
    5598:	tbnz	w0, #31, 53e4 <gcry_mpi_scan+0x7c>
    559c:	mov	w2, w23
    55a0:	add	x1, x19, #0x4
    55a4:	mov	x0, x20
    55a8:	mov	w3, #0x0                   	// #0
    55ac:	bl	5188 <_gcry_mpi_set_buffer>
    55b0:	cbz	x24, 544c <gcry_mpi_scan+0xe4>
    55b4:	add	x21, x21, #0x4
    55b8:	str	x21, [x24]
    55bc:	b	544c <gcry_mpi_scan+0xe4>
    55c0:	bl	68 <_gcry_mpi_alloc>
    55c4:	b	5584 <gcry_mpi_scan+0x21c>
    55c8:	cmp	w20, #0x4
    55cc:	b.ne	5764 <gcry_mpi_scan+0x3fc>  // b.any
    55d0:	cbnz	x21, 5764 <gcry_mpi_scan+0x3fc>
    55d4:	mov	w0, #0x0                   	// #0
    55d8:	cbz	w1, 5678 <gcry_mpi_scan+0x310>
    55dc:	bl	b4 <_gcry_mpi_alloc_secure>
    55e0:	mov	x20, x0
    55e4:	ldrb	w0, [x19]
    55e8:	cmp	w0, #0x2d
    55ec:	b.ne	5680 <gcry_mpi_scan+0x318>  // b.any
    55f0:	add	x19, x19, #0x1
    55f4:	mov	w23, #0x1                   	// #1
    55f8:	ldrb	w0, [x19]
    55fc:	cmp	w0, #0x30
    5600:	b.ne	5614 <gcry_mpi_scan+0x2ac>  // b.any
    5604:	ldrb	w0, [x19, #1]
    5608:	cmp	w0, #0x78
    560c:	b.ne	5614 <gcry_mpi_scan+0x2ac>  // b.any
    5610:	add	x19, x19, #0x2
    5614:	mov	x0, x19
    5618:	bl	0 <grub_strlen>
    561c:	lsl	w21, w0, #2
    5620:	ldr	w1, [x20]
    5624:	add	w21, w21, #0x7
    5628:	and	w25, w0, #0x1
    562c:	lsr	w21, w21, #3
    5630:	add	w0, w21, #0x7
    5634:	lsr	w24, w0, #3
    5638:	cmp	w1, w0, lsr #3
    563c:	b.cs	564c <gcry_mpi_scan+0x2e4>  // b.hs, b.nlast
    5640:	mov	w1, w24
    5644:	mov	x0, x20
    5648:	bl	170 <_gcry_mpi_resize>
    564c:	neg	w3, w21
    5650:	mov	x5, #0xfffffffffffffff8    	// #-8
    5654:	and	w3, w3, #0x7
    5658:	mov	w1, w24
    565c:	add	x5, x5, w24, uxtw #3
    5660:	stp	w24, w23, [x20, #4]
    5664:	cbnz	w1, 5688 <gcry_mpi_scan+0x320>
    5668:	cbnz	x22, 575c <gcry_mpi_scan+0x3f4>
    566c:	mov	x0, x20
    5670:	bl	230 <_gcry_mpi_free>
    5674:	b	54e8 <gcry_mpi_scan+0x180>
    5678:	bl	68 <_gcry_mpi_alloc>
    567c:	b	55e0 <gcry_mpi_scan+0x278>
    5680:	mov	w23, #0x0                   	// #0
    5684:	b	55f8 <gcry_mpi_scan+0x290>
    5688:	mov	x6, #0x0                   	// #0
    568c:	cbnz	w25, 56b4 <gcry_mpi_scan+0x34c>
    5690:	ldrb	w4, [x19]
    5694:	cbz	w4, 56a4 <gcry_mpi_scan+0x33c>
    5698:	add	x19, x19, #0x1
    569c:	ldrb	w0, [x19], #1
    56a0:	cbnz	w0, 56bc <gcry_mpi_scan+0x354>
    56a4:	mov	x0, x20
    56a8:	bl	224 <_gcry_mpi_clear>
    56ac:	mov	x0, x20
    56b0:	b	5560 <gcry_mpi_scan+0x1f8>
    56b4:	mov	w4, #0x30                  	// #48
    56b8:	b	569c <gcry_mpi_scan+0x334>
    56bc:	sub	w2, w4, #0x30
    56c0:	cmp	w2, #0x9
    56c4:	b.ls	56d8 <gcry_mpi_scan+0x370>  // b.plast
    56c8:	sub	w2, w4, #0x61
    56cc:	cmp	w2, #0x5
    56d0:	b.hi	571c <gcry_mpi_scan+0x3b4>  // b.pmore
    56d4:	sub	w2, w4, #0x57
    56d8:	sub	w4, w0, #0x30
    56dc:	lsl	w2, w2, #4
    56e0:	cmp	w4, #0x9
    56e4:	b.hi	5730 <gcry_mpi_scan+0x3c8>  // b.pmore
    56e8:	orr	w2, w4, w2
    56ec:	sxtw	x2, w2
    56f0:	add	w3, w3, #0x1
    56f4:	orr	x6, x2, x6, lsl #8
    56f8:	cmp	w3, #0x8
    56fc:	b.ne	5690 <gcry_mpi_scan+0x328>  // b.any
    5700:	ldr	x0, [x20, #16]
    5704:	sub	w1, w1, #0x1
    5708:	mov	w3, #0x0                   	// #0
    570c:	mov	w25, #0x0                   	// #0
    5710:	str	x6, [x0, x5]
    5714:	sub	x5, x5, #0x8
    5718:	b	5664 <gcry_mpi_scan+0x2fc>
    571c:	sub	w2, w4, #0x41
    5720:	cmp	w2, #0x5
    5724:	b.hi	56a4 <gcry_mpi_scan+0x33c>  // b.pmore
    5728:	sub	w2, w4, #0x37
    572c:	b	56d8 <gcry_mpi_scan+0x370>
    5730:	sub	w4, w0, #0x61
    5734:	cmp	w4, #0x5
    5738:	b.hi	5748 <gcry_mpi_scan+0x3e0>  // b.pmore
    573c:	sub	w0, w0, #0x57
    5740:	orr	w2, w0, w2
    5744:	b	56ec <gcry_mpi_scan+0x384>
    5748:	sub	w4, w0, #0x41
    574c:	cmp	w4, #0x5
    5750:	b.hi	56a4 <gcry_mpi_scan+0x33c>  // b.pmore
    5754:	sub	w0, w0, #0x37
    5758:	b	5740 <gcry_mpi_scan+0x3d8>
    575c:	mov	x0, x20
    5760:	b	5454 <gcry_mpi_scan+0xec>
    5764:	mov	w0, #0xa                   	// #10
    5768:	b	53f0 <gcry_mpi_scan+0x88>
    576c:	mov	x20, #0x0                   	// #0
    5770:	b	5514 <gcry_mpi_scan+0x1ac>

0000000000005774 <gcry_mpi_print>:
    5774:	stp	x29, x30, [sp, #-80]!
    5778:	mov	x29, sp
    577c:	stp	x19, x20, [sp, #16]
    5780:	mov	x20, x3
    5784:	mov	x19, x1
    5788:	stp	x21, x22, [sp, #32]
    578c:	mov	x22, x2
    5790:	mov	x21, x4
    5794:	stp	x23, x24, [sp, #48]
    5798:	mov	w23, w0
    579c:	mov	x0, x4
    57a0:	bl	7ec <gcry_mpi_get_nbits>
    57a4:	cbnz	x20, 57ac <gcry_mpi_print+0x38>
    57a8:	add	x20, sp, #0x48
    57ac:	str	xzr, [x20]
    57b0:	cmp	w23, #0x1
    57b4:	b.ne	584c <gcry_mpi_print+0xd8>  // b.any
    57b8:	ldr	w24, [x21, #8]
    57bc:	cbnz	w24, 5990 <gcry_mpi_print+0x21c>
    57c0:	mov	x0, x21
    57c4:	add	x1, sp, #0x44
    57c8:	mov	x2, #0x0                   	// #0
    57cc:	bl	5178 <_gcry_mpi_get_buffer>
    57d0:	mov	x21, x0
    57d4:	cbnz	x0, 57e0 <gcry_mpi_print+0x6c>
    57d8:	bl	5fb0 <gpg_error_from_syserror>
    57dc:	b	5994 <gcry_mpi_print+0x220>
    57e0:	ldr	w0, [sp, #68]
    57e4:	cbz	w0, 57fc <gcry_mpi_print+0x88>
    57e8:	ldrsb	w1, [x21]
    57ec:	tbz	w1, #31, 57fc <gcry_mpi_print+0x88>
    57f0:	mov	w24, w23
    57f4:	add	w0, w0, #0x1
    57f8:	str	w0, [sp, #68]
    57fc:	cbz	x19, 5834 <gcry_mpi_print+0xc0>
    5800:	ldr	w2, [sp, #68]
    5804:	cmp	x22, w2, uxtw
    5808:	b.cs	581c <gcry_mpi_print+0xa8>  // b.hs, b.nlast
    580c:	mov	x0, x21
    5810:	bl	5db0 <gcry_free>
    5814:	mov	w0, #0x1d                  	// #29
    5818:	b	5994 <gcry_mpi_print+0x220>
    581c:	cbz	w24, 5824 <gcry_mpi_print+0xb0>
    5820:	strb	wzr, [x19], #1
    5824:	sub	w2, w2, w24
    5828:	mov	x1, x21
    582c:	mov	x0, x19
    5830:	bl	0 <grub_memmove>
    5834:	mov	x0, x21
    5838:	bl	5db0 <gcry_free>
    583c:	ldr	w0, [sp, #68]
    5840:	str	x0, [x20]
    5844:	mov	w0, #0x0                   	// #0
    5848:	b	5994 <gcry_mpi_print+0x220>
    584c:	cmp	w23, #0x5
    5850:	b.ne	588c <gcry_mpi_print+0x118>  // b.any
    5854:	add	w0, w0, #0x7
    5858:	lsr	w0, w0, #3
    585c:	str	w0, [sp, #68]
    5860:	cbz	x19, 583c <gcry_mpi_print+0xc8>
    5864:	cmp	x22, x0
    5868:	b.cc	5814 <gcry_mpi_print+0xa0>  // b.lo, b.ul, b.last
    586c:	mov	x0, x21
    5870:	add	x1, sp, #0x44
    5874:	mov	x2, #0x0                   	// #0
    5878:	bl	5178 <_gcry_mpi_get_buffer>
    587c:	mov	x21, x0
    5880:	cbz	x0, 57d8 <gcry_mpi_print+0x64>
    5884:	ldr	w2, [sp, #68]
    5888:	b	5828 <gcry_mpi_print+0xb4>
    588c:	cmp	w23, #0x2
    5890:	b.ne	58fc <gcry_mpi_print+0x188>  // b.any
    5894:	add	w1, w0, #0x7
    5898:	ldr	w2, [x21, #8]
    589c:	lsr	w1, w1, #3
    58a0:	str	w1, [sp, #68]
    58a4:	cbnz	w2, 5a98 <gcry_mpi_print+0x324>
    58a8:	cbz	x19, 58f0 <gcry_mpi_print+0x17c>
    58ac:	add	w1, w1, #0x2
    58b0:	cmp	x22, x1
    58b4:	b.cc	5814 <gcry_mpi_print+0xa0>  // b.lo, b.ul, b.last
    58b8:	rev16	w0, w0
    58bc:	strh	w0, [x19]
    58c0:	add	x1, sp, #0x44
    58c4:	mov	x0, x21
    58c8:	mov	x2, #0x0                   	// #0
    58cc:	bl	5178 <_gcry_mpi_get_buffer>
    58d0:	mov	x21, x0
    58d4:	cbz	x0, 57d8 <gcry_mpi_print+0x64>
    58d8:	ldr	w2, [sp, #68]
    58dc:	mov	x1, x0
    58e0:	add	x0, x19, #0x2
    58e4:	bl	0 <grub_memmove>
    58e8:	mov	x0, x21
    58ec:	bl	5db0 <gcry_free>
    58f0:	ldr	w0, [sp, #68]
    58f4:	add	w0, w0, #0x2
    58f8:	b	5840 <gcry_mpi_print+0xcc>
    58fc:	cmp	w23, #0x3
    5900:	b.ne	59a8 <gcry_mpi_print+0x234>  // b.any
    5904:	ldr	w23, [x21, #8]
    5908:	cbnz	w23, 5990 <gcry_mpi_print+0x21c>
    590c:	mov	x0, x21
    5910:	add	x1, sp, #0x44
    5914:	mov	x2, #0x0                   	// #0
    5918:	bl	5178 <_gcry_mpi_get_buffer>
    591c:	mov	x21, x0
    5920:	cbz	x0, 57d8 <gcry_mpi_print+0x64>
    5924:	ldr	w0, [sp, #68]
    5928:	cbz	w0, 5940 <gcry_mpi_print+0x1cc>
    592c:	ldrsb	w1, [x21]
    5930:	tbz	w1, #31, 5940 <gcry_mpi_print+0x1cc>
    5934:	add	w0, w0, #0x1
    5938:	mov	w23, #0x1                   	// #1
    593c:	str	w0, [sp, #68]
    5940:	cbz	x19, 5970 <gcry_mpi_print+0x1fc>
    5944:	ldr	w2, [sp, #68]
    5948:	add	w1, w2, #0x4
    594c:	rev	w0, w2
    5950:	cmp	x1, x22
    5954:	b.hi	580c <gcry_mpi_print+0x98>  // b.pmore
    5958:	str	w0, [x19]
    595c:	cbnz	w23, 5984 <gcry_mpi_print+0x210>
    5960:	add	x0, x19, #0x4
    5964:	sub	w2, w2, w23
    5968:	mov	x1, x21
    596c:	bl	0 <grub_memmove>
    5970:	mov	x0, x21
    5974:	bl	5db0 <gcry_free>
    5978:	ldr	w0, [sp, #68]
    597c:	add	w0, w0, #0x4
    5980:	b	5840 <gcry_mpi_print+0xcc>
    5984:	add	x0, x19, #0x5
    5988:	strb	wzr, [x19, #4]
    598c:	b	5964 <gcry_mpi_print+0x1f0>
    5990:	mov	w0, #0x9                   	// #9
    5994:	ldp	x19, x20, [sp, #16]
    5998:	ldp	x21, x22, [sp, #32]
    599c:	ldp	x23, x24, [sp, #48]
    59a0:	ldp	x29, x30, [sp], #80
    59a4:	ret
    59a8:	cmp	w23, #0x4
    59ac:	b.ne	5a98 <gcry_mpi_print+0x324>  // b.any
    59b0:	add	x1, sp, #0x44
    59b4:	mov	x0, x21
    59b8:	mov	x2, #0x0                   	// #0
    59bc:	str	wzr, [sp, #68]
    59c0:	bl	5178 <_gcry_mpi_get_buffer>
    59c4:	cbz	x0, 57d8 <gcry_mpi_print+0x64>
    59c8:	ldr	w1, [sp, #68]
    59cc:	cbz	w1, 5a4c <gcry_mpi_print+0x2d8>
    59d0:	ldrsb	w3, [x0]
    59d4:	lsr	w3, w3, #31
    59d8:	lsl	w3, w3, #1
    59dc:	ldr	w4, [x21, #8]
    59e0:	lsl	w2, w1, #1
    59e4:	add	w2, w2, #0x1
    59e8:	cmp	w4, #0x0
    59ec:	cinc	w5, w3, ne  // ne = any
    59f0:	add	w2, w2, w5
    59f4:	cbz	x19, 5a90 <gcry_mpi_print+0x31c>
    59f8:	cmp	x22, x2
    59fc:	b.cc	5810 <gcry_mpi_print+0x9c>  // b.lo, b.ul, b.last
    5a00:	mov	x2, x19
    5a04:	cbz	w4, 5a10 <gcry_mpi_print+0x29c>
    5a08:	mov	w4, #0x2d                  	// #45
    5a0c:	strb	w4, [x2], #1
    5a10:	cbz	w3, 5a1c <gcry_mpi_print+0x2a8>
    5a14:	mov	w3, #0x3030                	// #12336
    5a18:	strh	w3, [x2], #2
    5a1c:	mov	x6, x2
    5a20:	mov	x5, #0x0                   	// #0
    5a24:	cmp	w1, w5
    5a28:	b.hi	5a54 <gcry_mpi_print+0x2e0>  // b.pmore
    5a2c:	ubfiz	x1, x1, #1, #32
    5a30:	add	x3, x2, x1
    5a34:	strb	wzr, [x2, x1]
    5a38:	add	x1, x3, #0x1
    5a3c:	sub	x19, x1, x19
    5a40:	str	x19, [x20]
    5a44:	bl	5db0 <gcry_free>
    5a48:	b	5844 <gcry_mpi_print+0xd0>
    5a4c:	mov	w3, #0x2                   	// #2
    5a50:	b	59dc <gcry_mpi_print+0x268>
    5a54:	ldrb	w3, [x0, x5]
    5a58:	add	x5, x5, #0x1
    5a5c:	cmp	w3, #0x9f
    5a60:	lsr	w4, w3, #4
    5a64:	and	w3, w3, #0xf
    5a68:	add	w7, w4, #0x30
    5a6c:	add	w4, w4, #0x37
    5a70:	csel	w4, w4, w7, hi  // hi = pmore
    5a74:	strb	w4, [x6], #2
    5a78:	add	w7, w3, #0x30
    5a7c:	add	w4, w3, #0x37
    5a80:	cmp	w3, #0x9
    5a84:	csel	w3, w4, w7, hi  // hi = pmore
    5a88:	sturb	w3, [x6, #-1]
    5a8c:	b	5a24 <gcry_mpi_print+0x2b0>
    5a90:	str	x2, [x20]
    5a94:	b	5a44 <gcry_mpi_print+0x2d0>
    5a98:	mov	w0, #0xa                   	// #10
    5a9c:	b	5994 <gcry_mpi_print+0x220>

0000000000005aa0 <gcry_mpi_aprint>:
    5aa0:	stp	x29, x30, [sp, #-80]!
    5aa4:	mov	x4, x3
    5aa8:	mov	x29, sp
    5aac:	stp	x19, x20, [sp, #16]
    5ab0:	mov	x20, x1
    5ab4:	stp	x21, x22, [sp, #32]
    5ab8:	mov	x22, x2
    5abc:	mov	x21, x3
    5ac0:	str	x23, [sp, #48]
    5ac4:	add	x3, sp, #0x48
    5ac8:	str	xzr, [x1]
    5acc:	mov	w23, w0
    5ad0:	mov	x2, #0x0                   	// #0
    5ad4:	mov	x1, #0x0                   	// #0
    5ad8:	bl	5774 <gcry_mpi_print>
    5adc:	mov	w19, w0
    5ae0:	cbnz	w0, 5b0c <gcry_mpi_aprint+0x6c>
    5ae4:	ldr	x0, [sp, #72]
    5ae8:	cbz	x21, 5b24 <gcry_mpi_aprint+0x84>
    5aec:	ldr	w1, [x21, #12]
    5af0:	tbz	w1, #0, 5b24 <gcry_mpi_aprint+0x84>
    5af4:	bl	5dac <gcry_malloc_secure>
    5af8:	str	x0, [x20]
    5afc:	mov	x1, x0
    5b00:	cbnz	x0, 5b2c <gcry_mpi_aprint+0x8c>
    5b04:	bl	5fb0 <gpg_error_from_syserror>
    5b08:	mov	w19, w0
    5b0c:	mov	w0, w19
    5b10:	ldp	x19, x20, [sp, #16]
    5b14:	ldp	x21, x22, [sp, #32]
    5b18:	ldr	x23, [sp, #48]
    5b1c:	ldp	x29, x30, [sp], #80
    5b20:	ret
    5b24:	bl	5da8 <gcry_malloc>
    5b28:	b	5af8 <gcry_mpi_aprint+0x58>
    5b2c:	ldr	x2, [sp, #72]
    5b30:	mov	x4, x21
    5b34:	add	x3, sp, #0x48
    5b38:	mov	w0, w23
    5b3c:	bl	5774 <gcry_mpi_print>
    5b40:	mov	w19, w0
    5b44:	cbz	w0, 5b58 <gcry_mpi_aprint+0xb8>
    5b48:	ldr	x0, [x20]
    5b4c:	bl	5db0 <gcry_free>
    5b50:	str	xzr, [x20]
    5b54:	b	5b0c <gcry_mpi_aprint+0x6c>
    5b58:	cbz	x22, 5b0c <gcry_mpi_aprint+0x6c>
    5b5c:	ldr	x0, [sp, #72]
    5b60:	str	x0, [x22]
    5b64:	b	5b0c <gcry_mpi_aprint+0x6c>

0000000000005b68 <_gcry_mpih_rshift>:
    5b68:	ldr	x6, [x1]
    5b6c:	mov	w7, #0x40                  	// #64
    5b70:	sub	w7, w7, w3
    5b74:	sub	x5, x0, #0x8
    5b78:	mov	x4, #0x0                   	// #0
    5b7c:	lsl	x0, x6, x7
    5b80:	add	x4, x4, #0x1
    5b84:	lsr	x9, x6, x3
    5b88:	cmp	w2, w4
    5b8c:	b.gt	5bb0 <_gcry_mpih_rshift+0x48>
    5b90:	sub	w1, w2, #0x1
    5b94:	cmp	w2, #0x0
    5b98:	add	x1, x1, #0x1
    5b9c:	mov	x2, #0x8                   	// #8
    5ba0:	lsl	x1, x1, #3
    5ba4:	csel	x1, x1, x2, gt
    5ba8:	str	x9, [x5, x1]
    5bac:	ret
    5bb0:	ldr	x6, [x1, x4, lsl #3]
    5bb4:	lsl	x8, x6, x7
    5bb8:	orr	x8, x8, x9
    5bbc:	str	x8, [x5, x4, lsl #3]
    5bc0:	b	5b80 <_gcry_mpih_rshift+0x18>

0000000000005bc4 <_gcry_mpih_add_1>:
    5bc4:	ldr	x4, [x1], #8
    5bc8:	adds	x4, x4, x3
    5bcc:	str	x4, [x0], #8
    5bd0:	b.cs	5bf4 <_gcry_mpih_add_1+0x30>  // b.hs, b.nlast
    5bd4:	cmp	x0, x1
    5bd8:	b.ne	5c1c <_gcry_mpih_add_1+0x58>  // b.any
    5bdc:	mov	x0, #0x0                   	// #0
    5be0:	b	5c00 <_gcry_mpih_add_1+0x3c>
    5be4:	ldr	x3, [x1], #8
    5be8:	add	x3, x3, #0x1
    5bec:	str	x3, [x0], #8
    5bf0:	cbnz	x3, 5bd4 <_gcry_mpih_add_1+0x10>
    5bf4:	subs	w2, w2, #0x1
    5bf8:	b.ne	5be4 <_gcry_mpih_add_1+0x20>  // b.any
    5bfc:	mov	x0, #0x1                   	// #1
    5c00:	ret
    5c04:	ldr	x4, [x1, x3, lsl #3]
    5c08:	str	x4, [x0, x3, lsl #3]
    5c0c:	add	x3, x3, #0x1
    5c10:	cmp	w2, w3
    5c14:	b.gt	5c04 <_gcry_mpih_add_1+0x40>
    5c18:	b	5bdc <_gcry_mpih_add_1+0x18>
    5c1c:	sub	w2, w2, #0x1
    5c20:	mov	x3, #0x0                   	// #0
    5c24:	b	5c10 <_gcry_mpih_add_1+0x4c>

0000000000005c28 <_gcry_mpih_add>:
    5c28:	stp	x29, x30, [sp, #-48]!
    5c2c:	mov	x29, sp
    5c30:	stp	x19, x20, [sp, #16]
    5c34:	mov	w20, w2
    5c38:	mov	w19, w4
    5c3c:	stp	x21, x22, [sp, #32]
    5c40:	mov	x21, x0
    5c44:	mov	x22, x1
    5c48:	cbz	w4, 5c80 <_gcry_mpih_add+0x58>
    5c4c:	mov	x2, x3
    5c50:	mov	w3, w4
    5c54:	bl	4404 <_gcry_mpih_add_n>
    5c58:	cmp	w19, w20
    5c5c:	b.eq	5c88 <_gcry_mpih_add+0x60>  // b.none
    5c60:	add	x1, x22, w19, sxtw #3
    5c64:	mov	x3, x0
    5c68:	sub	w2, w20, w19
    5c6c:	add	x0, x21, w19, sxtw #3
    5c70:	ldp	x19, x20, [sp, #16]
    5c74:	ldp	x21, x22, [sp, #32]
    5c78:	ldp	x29, x30, [sp], #48
    5c7c:	b	5bc4 <_gcry_mpih_add_1>
    5c80:	mov	x0, #0x0                   	// #0
    5c84:	b	5c58 <_gcry_mpih_add+0x30>
    5c88:	ldp	x19, x20, [sp, #16]
    5c8c:	ldp	x21, x22, [sp, #32]
    5c90:	ldp	x29, x30, [sp], #48
    5c94:	ret

0000000000005c98 <_gcry_mpih_sub_1>:
    5c98:	ldr	x4, [x1], #8
    5c9c:	subs	x5, x4, x3
    5ca0:	str	x5, [x0], #8
    5ca4:	cmp	x4, x3
    5ca8:	b.cc	5ccc <_gcry_mpih_sub_1+0x34>  // b.lo, b.ul, b.last
    5cac:	cmp	x0, x1
    5cb0:	b.ne	5cf4 <_gcry_mpih_sub_1+0x5c>  // b.any
    5cb4:	mov	x0, #0x0                   	// #0
    5cb8:	b	5cd8 <_gcry_mpih_sub_1+0x40>
    5cbc:	ldr	x3, [x1], #8
    5cc0:	sub	x4, x3, #0x1
    5cc4:	str	x4, [x0], #8
    5cc8:	cbnz	x3, 5cac <_gcry_mpih_sub_1+0x14>
    5ccc:	subs	w2, w2, #0x1
    5cd0:	b.ne	5cbc <_gcry_mpih_sub_1+0x24>  // b.any
    5cd4:	mov	x0, #0x1                   	// #1
    5cd8:	ret
    5cdc:	ldr	x4, [x1, x3, lsl #3]
    5ce0:	str	x4, [x0, x3, lsl #3]
    5ce4:	add	x3, x3, #0x1
    5ce8:	cmp	w2, w3
    5cec:	b.gt	5cdc <_gcry_mpih_sub_1+0x44>
    5cf0:	b	5cb4 <_gcry_mpih_sub_1+0x1c>
    5cf4:	sub	w2, w2, #0x1
    5cf8:	mov	x3, #0x0                   	// #0
    5cfc:	b	5ce8 <_gcry_mpih_sub_1+0x50>

0000000000005d00 <_gcry_mpih_sub>:
    5d00:	stp	x29, x30, [sp, #-48]!
    5d04:	mov	x29, sp
    5d08:	stp	x19, x20, [sp, #16]
    5d0c:	mov	w20, w2
    5d10:	mov	w19, w4
    5d14:	stp	x21, x22, [sp, #32]
    5d18:	mov	x21, x0
    5d1c:	mov	x22, x1
    5d20:	cbz	w4, 5d58 <_gcry_mpih_sub+0x58>
    5d24:	mov	x2, x3
    5d28:	mov	w3, w4
    5d2c:	bl	443c <_gcry_mpih_sub_n>
    5d30:	cmp	w19, w20
    5d34:	b.eq	5d60 <_gcry_mpih_sub+0x60>  // b.none
    5d38:	add	x1, x22, w19, sxtw #3
    5d3c:	mov	x3, x0
    5d40:	sub	w2, w20, w19
    5d44:	add	x0, x21, w19, sxtw #3
    5d48:	ldp	x19, x20, [sp, #16]
    5d4c:	ldp	x21, x22, [sp, #32]
    5d50:	ldp	x29, x30, [sp], #48
    5d54:	b	5c98 <_gcry_mpih_sub_1>
    5d58:	mov	x0, #0x0                   	// #0
    5d5c:	b	5d30 <_gcry_mpih_sub+0x30>
    5d60:	ldp	x19, x20, [sp, #16]
    5d64:	ldp	x21, x22, [sp, #32]
    5d68:	ldp	x29, x30, [sp], #48
    5d6c:	ret

0000000000005d70 <_gcry_mpih_cmp>:
    5d70:	sub	w2, w2, #0x1
    5d74:	add	x1, x1, #0x8
    5d78:	sxtw	x2, w2
    5d7c:	tbz	w2, #31, 5d88 <_gcry_mpih_cmp+0x18>
    5d80:	mov	w0, #0x0                   	// #0
    5d84:	b	5da4 <_gcry_mpih_cmp+0x34>
    5d88:	ldr	x4, [x0, x2, lsl #3]
    5d8c:	sub	x2, x2, #0x1
    5d90:	ldr	x3, [x1, x2, lsl #3]
    5d94:	cmp	x4, x3
    5d98:	b.eq	5d7c <_gcry_mpih_cmp+0xc>  // b.none
    5d9c:	mov	w0, #0xffffffff            	// #-1
    5da0:	cneg	w0, w0, hi  // hi = pmore
    5da4:	ret

0000000000005da8 <gcry_malloc>:
    5da8:	b	0 <grub_malloc>

0000000000005dac <gcry_malloc_secure>:
    5dac:	b	0 <grub_malloc>

0000000000005db0 <gcry_free>:
    5db0:	b	0 <grub_free>

0000000000005db4 <gcry_is_secure>:
    5db4:	mov	w0, #0x0                   	// #0
    5db8:	ret

0000000000005dbc <gcry_xcalloc>:
    5dbc:	mul	x0, x0, x1
    5dc0:	stp	x29, x30, [sp, #-16]!
    5dc4:	mov	x29, sp
    5dc8:	bl	0 <grub_zalloc>
    5dcc:	cbnz	x0, 5ddc <gcry_xcalloc+0x20>
    5dd0:	adrp	x0, 0 <_gcry_mpi_m_check>
    5dd4:	ldr	x0, [x0]
    5dd8:	bl	0 <grub_fatal>
    5ddc:	ldp	x29, x30, [sp], #16
    5de0:	ret
    5de4:	nop
	...

0000000000005df0 <gcry_xcalloc_secure>:
    5df0:	b	5dbc <gcry_xcalloc>

0000000000005df4 <gcry_xmalloc>:
    5df4:	stp	x29, x30, [sp, #-16]!
    5df8:	mov	x29, sp
    5dfc:	bl	0 <grub_malloc>
    5e00:	cbnz	x0, 5e10 <gcry_xmalloc+0x1c>
    5e04:	adrp	x0, 0 <_gcry_mpi_m_check>
    5e08:	ldr	x0, [x0]
    5e0c:	bl	0 <grub_fatal>
    5e10:	ldp	x29, x30, [sp], #16
    5e14:	ret
	...

0000000000005e20 <gcry_xmalloc_secure>:
    5e20:	b	5df4 <gcry_xmalloc>

0000000000005e24 <gcry_xrealloc>:
    5e24:	stp	x29, x30, [sp, #-16]!
    5e28:	mov	x29, sp
    5e2c:	bl	0 <grub_realloc>
    5e30:	cbnz	x0, 5e40 <gcry_xrealloc+0x1c>
    5e34:	adrp	x0, 0 <_gcry_mpi_m_check>
    5e38:	ldr	x0, [x0]
    5e3c:	bl	0 <grub_fatal>
    5e40:	ldp	x29, x30, [sp], #16
    5e44:	ret
	...

0000000000005e50 <_gcry_check_heap>:
    5e50:	ret

0000000000005e54 <_gcry_log_printf>:
    5e54:	stp	x29, x30, [sp, #-160]!
    5e58:	mov	x29, sp
    5e5c:	stp	x19, x20, [sp, #16]
    5e60:	mov	x20, x0
    5e64:	adrp	x0, 0 <_gcry_mpi_m_check>
    5e68:	stp	x1, x2, [sp, #104]
    5e6c:	ldr	x0, [x0]
    5e70:	stp	x3, x4, [sp, #120]
    5e74:	stp	x5, x6, [sp, #136]
    5e78:	str	x7, [sp, #152]
    5e7c:	bl	0 <grub_env_get>
    5e80:	cbz	x0, 5ee0 <_gcry_log_printf+0x8c>
    5e84:	adrp	x1, 0 <_gcry_mpi_m_check>
    5e88:	mov	x19, x0
    5e8c:	ldr	x1, [x1]
    5e90:	bl	0 <grub_strword>
    5e94:	cbz	w0, 5eec <_gcry_log_printf+0x98>
    5e98:	adrp	x0, 0 <_gcry_mpi_m_check>
    5e9c:	ldr	x0, [x0]
    5ea0:	bl	0 <grub_printf>
    5ea4:	str	wzr, [sp, #92]
    5ea8:	add	x0, sp, #0xa0
    5eac:	stp	x0, x0, [sp, #64]
    5eb0:	add	x0, sp, #0x60
    5eb4:	str	x0, [sp, #80]
    5eb8:	mov	w0, #0xffffffc8            	// #-56
    5ebc:	str	w0, [sp, #88]
    5ec0:	ldp	x0, x1, [sp, #64]
    5ec4:	stp	x0, x1, [sp, #32]
    5ec8:	ldp	x0, x1, [sp, #80]
    5ecc:	stp	x0, x1, [sp, #48]
    5ed0:	add	x1, sp, #0x20
    5ed4:	mov	x0, x20
    5ed8:	bl	0 <grub_vprintf>
    5edc:	bl	0 <grub_refresh>
    5ee0:	ldp	x19, x20, [sp, #16]
    5ee4:	ldp	x29, x30, [sp], #160
    5ee8:	ret
    5eec:	adrp	x0, 0 <_gcry_mpi_m_check>
    5ef0:	ldr	x1, [x0]
    5ef4:	mov	x0, x19
    5ef8:	bl	0 <grub_strword>
    5efc:	cbnz	w0, 5e98 <_gcry_log_printf+0x44>
    5f00:	b	5ee0 <_gcry_log_printf+0x8c>
    5f04:	nop
	...

0000000000005f28 <_gcry_log_bug>:
    5f28:	stp	x29, x30, [sp, #-160]!
    5f2c:	mov	x29, sp
    5f30:	str	x19, [sp, #16]
    5f34:	mov	x19, x0
    5f38:	adrp	x0, 0 <_gcry_mpi_m_check>
    5f3c:	stp	x1, x2, [sp, #104]
    5f40:	ldr	x0, [x0]
    5f44:	stp	x3, x4, [sp, #120]
    5f48:	stp	x5, x6, [sp, #136]
    5f4c:	str	x7, [sp, #152]
    5f50:	bl	0 <grub_printf>
    5f54:	add	x0, sp, #0xa0
    5f58:	stp	x0, x0, [sp, #64]
    5f5c:	add	x0, sp, #0x60
    5f60:	str	x0, [sp, #80]
    5f64:	mov	w0, #0xffffffc8            	// #-56
    5f68:	str	w0, [sp, #88]
    5f6c:	str	wzr, [sp, #92]
    5f70:	ldp	x0, x1, [sp, #64]
    5f74:	stp	x0, x1, [sp, #32]
    5f78:	ldp	x0, x1, [sp, #80]
    5f7c:	stp	x0, x1, [sp, #48]
    5f80:	add	x1, sp, #0x20
    5f84:	mov	x0, x19
    5f88:	bl	0 <grub_vprintf>
    5f8c:	bl	0 <grub_refresh>
    5f90:	adrp	x0, 0 <_gcry_mpi_m_check>
    5f94:	ldr	x0, [x0]
    5f98:	bl	0 <grub_fatal>
    5f9c:	nop
	...

0000000000005fb0 <gpg_error_from_syserror>:
    5fb0:	adrp	x0, 0 <_gcry_mpi_m_check>
    5fb4:	ldr	x0, [x0]
    5fb8:	ldr	w0, [x0]
    5fbc:	cbz	w0, 5fd0 <gpg_error_from_syserror+0x20>
    5fc0:	cmp	w0, #0x3
    5fc4:	mov	w1, #0x22                  	// #34
    5fc8:	mov	w0, #0x8                   	// #8
    5fcc:	csel	w0, w0, w1, ne  // ne = any
    5fd0:	ret
    5fd4:	nop
	...
