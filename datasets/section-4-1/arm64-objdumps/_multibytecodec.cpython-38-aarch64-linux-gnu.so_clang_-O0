
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_multibytecodec.cpython-38-aarch64-linux-gnu.so_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002920 <.init>:
    2920:	stp	x29, x30, [sp, #-16]!
    2924:	mov	x29, sp
    2928:	bl	2e20 <PyUnicode_Substring@plt+0x10>
    292c:	ldp	x29, x30, [sp], #16
    2930:	ret

Disassembly of section .plt:

0000000000002940 <memcpy@plt-0x20>:
    2940:	stp	x16, x30, [sp, #-16]!
    2944:	adrp	x16, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2948:	ldr	x17, [x16, #4088]
    294c:	add	x16, x16, #0xff8
    2950:	br	x17
    2954:	nop
    2958:	nop
    295c:	nop

0000000000002960 <memcpy@plt>:
    2960:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2964:	ldr	x17, [x16]
    2968:	add	x16, x16, #0x0
    296c:	br	x17

0000000000002970 <_PyUnicode_Ready@plt>:
    2970:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2974:	ldr	x17, [x16, #8]
    2978:	add	x16, x16, #0x8
    297c:	br	x17

0000000000002980 <PySequence_Check@plt>:
    2980:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2984:	ldr	x17, [x16, #16]
    2988:	add	x16, x16, #0x10
    298c:	br	x17

0000000000002990 <strlen@plt>:
    2990:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2994:	ldr	x17, [x16, #24]
    2998:	add	x16, x16, #0x18
    299c:	br	x17

00000000000029a0 <PyUnicodeDecodeError_SetStart@plt>:
    29a0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    29a4:	ldr	x17, [x16, #32]
    29a8:	add	x16, x16, #0x20
    29ac:	br	x17

00000000000029b0 <_PyBytes_Resize@plt>:
    29b0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    29b4:	ldr	x17, [x16, #40]
    29b8:	add	x16, x16, #0x28
    29bc:	br	x17

00000000000029c0 <PyMem_Free@plt>:
    29c0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    29c4:	ldr	x17, [x16, #48]
    29c8:	add	x16, x16, #0x30
    29cc:	br	x17

00000000000029d0 <PyBuffer_Release@plt>:
    29d0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    29d4:	ldr	x17, [x16, #56]
    29d8:	add	x16, x16, #0x38
    29dc:	br	x17

00000000000029e0 <PyUnicodeEncodeError_SetReason@plt>:
    29e0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    29e4:	ldr	x17, [x16, #64]
    29e8:	add	x16, x16, #0x40
    29ec:	br	x17

00000000000029f0 <PyObject_GetAttrString@plt>:
    29f0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    29f4:	ldr	x17, [x16, #72]
    29f8:	add	x16, x16, #0x48
    29fc:	br	x17

0000000000002a00 <__cxa_finalize@plt>:
    2a00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a04:	ldr	x17, [x16, #80]
    2a08:	add	x16, x16, #0x50
    2a0c:	br	x17

0000000000002a10 <PyBuffer_IsContiguous@plt>:
    2a10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a14:	ldr	x17, [x16, #88]
    2a18:	add	x16, x16, #0x58
    2a1c:	br	x17

0000000000002a20 <PyBytes_FromStringAndSize@plt>:
    2a20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a24:	ldr	x17, [x16, #96]
    2a28:	add	x16, x16, #0x60
    2a2c:	br	x17

0000000000002a30 <PyUnicodeEncodeError_SetStart@plt>:
    2a30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a34:	ldr	x17, [x16, #104]
    2a38:	add	x16, x16, #0x68
    2a3c:	br	x17

0000000000002a40 <_Py_Dealloc@plt>:
    2a40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a44:	ldr	x17, [x16, #112]
    2a48:	add	x16, x16, #0x70
    2a4c:	br	x17

0000000000002a50 <PyUnicodeDecodeError_SetReason@plt>:
    2a50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a54:	ldr	x17, [x16, #120]
    2a58:	add	x16, x16, #0x78
    2a5c:	br	x17

0000000000002a60 <PyErr_NoMemory@plt>:
    2a60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a64:	ldr	x17, [x16, #128]
    2a68:	add	x16, x16, #0x80
    2a6c:	br	x17

0000000000002a70 <_PyObject_CallFunction_SizeT@plt>:
    2a70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a74:	ldr	x17, [x16, #136]
    2a78:	add	x16, x16, #0x88
    2a7c:	br	x17

0000000000002a80 <PyUnicodeEncodeError_SetEnd@plt>:
    2a80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a84:	ldr	x17, [x16, #144]
    2a88:	add	x16, x16, #0x90
    2a8c:	br	x17

0000000000002a90 <PyObject_Str@plt>:
    2a90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2a94:	ldr	x17, [x16, #152]
    2a98:	add	x16, x16, #0x98
    2a9c:	br	x17

0000000000002aa0 <PyUnicode_Append@plt>:
    2aa0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2aa4:	ldr	x17, [x16, #160]
    2aa8:	add	x16, x16, #0xa0
    2aac:	br	x17

0000000000002ab0 <_PyUnicodeWriter_Dealloc@plt>:
    2ab0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ab4:	ldr	x17, [x16, #168]
    2ab8:	add	x16, x16, #0xa8
    2abc:	br	x17

0000000000002ac0 <_PyArg_UnpackKeywords@plt>:
    2ac0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ac4:	ldr	x17, [x16, #176]
    2ac8:	add	x16, x16, #0xb0
    2acc:	br	x17

0000000000002ad0 <PyErr_SetString@plt>:
    2ad0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ad4:	ldr	x17, [x16, #184]
    2ad8:	add	x16, x16, #0xb8
    2adc:	br	x17

0000000000002ae0 <_PyLong_FromByteArray@plt>:
    2ae0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ae4:	ldr	x17, [x16, #192]
    2ae8:	add	x16, x16, #0xc0
    2aec:	br	x17

0000000000002af0 <memset@plt>:
    2af0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2af4:	ldr	x17, [x16, #200]
    2af8:	add	x16, x16, #0xc8
    2afc:	br	x17

0000000000002b00 <PySequence_GetItem@plt>:
    2b00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b04:	ldr	x17, [x16, #208]
    2b08:	add	x16, x16, #0xd0
    2b0c:	br	x17

0000000000002b10 <_PyUnicodeWriter_Init@plt>:
    2b10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b14:	ldr	x17, [x16, #216]
    2b18:	add	x16, x16, #0xd8
    2b1c:	br	x17

0000000000002b20 <PyObject_Free@plt>:
    2b20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b24:	ldr	x17, [x16, #224]
    2b28:	add	x16, x16, #0xe0
    2b2c:	br	x17

0000000000002b30 <PyLong_FromSsize_t@plt>:
    2b30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b34:	ldr	x17, [x16, #232]
    2b38:	add	x16, x16, #0xe8
    2b3c:	br	x17

0000000000002b40 <PyType_Ready@plt>:
    2b40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b44:	ldr	x17, [x16, #240]
    2b48:	add	x16, x16, #0xf0
    2b4c:	br	x17

0000000000002b50 <PyLong_AsSsize_t@plt>:
    2b50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b54:	ldr	x17, [x16, #248]
    2b58:	add	x16, x16, #0xf8
    2b5c:	br	x17

0000000000002b60 <PyBytes_Size@plt>:
    2b60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b64:	ldr	x17, [x16, #256]
    2b68:	add	x16, x16, #0x100
    2b6c:	br	x17

0000000000002b70 <_PyArg_BadArgument@plt>:
    2b70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b74:	ldr	x17, [x16, #264]
    2b78:	add	x16, x16, #0x108
    2b7c:	br	x17

0000000000002b80 <PySequence_Size@plt>:
    2b80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b84:	ldr	x17, [x16, #272]
    2b88:	add	x16, x16, #0x110
    2b8c:	br	x17

0000000000002b90 <PyErr_Clear@plt>:
    2b90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2b94:	ldr	x17, [x16, #280]
    2b98:	add	x16, x16, #0x118
    2b9c:	br	x17

0000000000002ba0 <PyCapsule_IsValid@plt>:
    2ba0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ba4:	ldr	x17, [x16, #288]
    2ba8:	add	x16, x16, #0x120
    2bac:	br	x17

0000000000002bb0 <__gmon_start__@plt>:
    2bb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2bb4:	ldr	x17, [x16, #296]
    2bb8:	add	x16, x16, #0x128
    2bbc:	br	x17

0000000000002bc0 <PyCodec_StrictErrors@plt>:
    2bc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2bc4:	ldr	x17, [x16, #304]
    2bc8:	add	x16, x16, #0x130
    2bcc:	br	x17

0000000000002bd0 <PyTuple_New@plt>:
    2bd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2bd4:	ldr	x17, [x16, #312]
    2bd8:	add	x16, x16, #0x138
    2bdc:	br	x17

0000000000002be0 <_PyArg_CheckPositional@plt>:
    2be0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2be4:	ldr	x17, [x16, #320]
    2be8:	add	x16, x16, #0x140
    2bec:	br	x17

0000000000002bf0 <PyErr_Occurred@plt>:
    2bf0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2bf4:	ldr	x17, [x16, #328]
    2bf8:	add	x16, x16, #0x148
    2bfc:	br	x17

0000000000002c00 <PyModule_Create2@plt>:
    2c00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c04:	ldr	x17, [x16, #336]
    2c08:	add	x16, x16, #0x150
    2c0c:	br	x17

0000000000002c10 <PyUnicodeDecodeError_SetEnd@plt>:
    2c10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c14:	ldr	x17, [x16, #344]
    2c18:	add	x16, x16, #0x158
    2c1c:	br	x17

0000000000002c20 <PyObject_CallObject@plt>:
    2c20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c24:	ldr	x17, [x16, #352]
    2c28:	add	x16, x16, #0x160
    2c2c:	br	x17

0000000000002c30 <strcmp@plt>:
    2c30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c34:	ldr	x17, [x16, #360]
    2c38:	add	x16, x16, #0x168
    2c3c:	br	x17

0000000000002c40 <_PyObject_CallMethod_SizeT@plt>:
    2c40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c44:	ldr	x17, [x16, #368]
    2c48:	add	x16, x16, #0x170
    2c4c:	br	x17

0000000000002c50 <_PyArg_ParseTuple_SizeT@plt>:
    2c50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c54:	ldr	x17, [x16, #376]
    2c58:	add	x16, x16, #0x178
    2c5c:	br	x17

0000000000002c60 <PyUnicode_DecodeUTF8@plt>:
    2c60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c64:	ldr	x17, [x16, #384]
    2c68:	add	x16, x16, #0x180
    2c6c:	br	x17

0000000000002c70 <Py_FatalError@plt>:
    2c70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c74:	ldr	x17, [x16, #392]
    2c78:	add	x16, x16, #0x188
    2c7c:	br	x17

0000000000002c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2c80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c84:	ldr	x17, [x16, #400]
    2c88:	add	x16, x16, #0x190
    2c8c:	br	x17

0000000000002c90 <_PyUnicodeWriter_WriteStr@plt>:
    2c90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2c94:	ldr	x17, [x16, #408]
    2c98:	add	x16, x16, #0x198
    2c9c:	br	x17

0000000000002ca0 <_PyUnicodeWriter_WriteChar@plt>:
    2ca0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ca4:	ldr	x17, [x16, #416]
    2ca8:	add	x16, x16, #0x1a0
    2cac:	br	x17

0000000000002cb0 <PyObject_GetBuffer@plt>:
    2cb0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2cb4:	ldr	x17, [x16, #424]
    2cb8:	add	x16, x16, #0x1a8
    2cbc:	br	x17

0000000000002cc0 <PyUnicode_AsUTF8@plt>:
    2cc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2cc4:	ldr	x17, [x16, #432]
    2cc8:	add	x16, x16, #0x1b0
    2ccc:	br	x17

0000000000002cd0 <_PyObject_New@plt>:
    2cd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2cd4:	ldr	x17, [x16, #440]
    2cd8:	add	x16, x16, #0x1b8
    2cdc:	br	x17

0000000000002ce0 <PyUnicode_FromString@plt>:
    2ce0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2ce4:	ldr	x17, [x16, #448]
    2ce8:	add	x16, x16, #0x1c0
    2cec:	br	x17

0000000000002cf0 <_PyObject_CallMethodIdObjArgs@plt>:
    2cf0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2cf4:	ldr	x17, [x16, #456]
    2cf8:	add	x16, x16, #0x1c8
    2cfc:	br	x17

0000000000002d00 <PyModule_AddObject@plt>:
    2d00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d04:	ldr	x17, [x16, #464]
    2d08:	add	x16, x16, #0x1d0
    2d0c:	br	x17

0000000000002d10 <PyBytes_AsString@plt>:
    2d10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d14:	ldr	x17, [x16, #472]
    2d18:	add	x16, x16, #0x1d8
    2d1c:	br	x17

0000000000002d20 <PyType_IsSubtype@plt>:
    2d20:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d24:	ldr	x17, [x16, #480]
    2d28:	add	x16, x16, #0x1e0
    2d2c:	br	x17

0000000000002d30 <_PyLong_AsByteArray@plt>:
    2d30:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d34:	ldr	x17, [x16, #488]
    2d38:	add	x16, x16, #0x1e8
    2d3c:	br	x17

0000000000002d40 <PyUnicode_AsUTF8AndSize@plt>:
    2d40:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d44:	ldr	x17, [x16, #496]
    2d48:	add	x16, x16, #0x1f0
    2d4c:	br	x17

0000000000002d50 <PyErr_Format@plt>:
    2d50:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d54:	ldr	x17, [x16, #504]
    2d58:	add	x16, x16, #0x1f8
    2d5c:	br	x17

0000000000002d60 <PyCapsule_GetPointer@plt>:
    2d60:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d64:	ldr	x17, [x16, #512]
    2d68:	add	x16, x16, #0x200
    2d6c:	br	x17

0000000000002d70 <_Py_BuildValue_SizeT@plt>:
    2d70:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d74:	ldr	x17, [x16, #520]
    2d78:	add	x16, x16, #0x208
    2d7c:	br	x17

0000000000002d80 <PyUnicode_FromOrdinal@plt>:
    2d80:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d84:	ldr	x17, [x16, #528]
    2d88:	add	x16, x16, #0x210
    2d8c:	br	x17

0000000000002d90 <PyUnicodeDecodeError_Create@plt>:
    2d90:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2d94:	ldr	x17, [x16, #536]
    2d98:	add	x16, x16, #0x218
    2d9c:	br	x17

0000000000002da0 <_PyLong_AsInt@plt>:
    2da0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2da4:	ldr	x17, [x16, #544]
    2da8:	add	x16, x16, #0x220
    2dac:	br	x17

0000000000002db0 <_PyUnicodeWriter_Finish@plt>:
    2db0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2db4:	ldr	x17, [x16, #552]
    2db8:	add	x16, x16, #0x228
    2dbc:	br	x17

0000000000002dc0 <PyUnicode_Splitlines@plt>:
    2dc0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2dc4:	ldr	x17, [x16, #560]
    2dc8:	add	x16, x16, #0x230
    2dcc:	br	x17

0000000000002dd0 <PyMem_Malloc@plt>:
    2dd0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2dd4:	ldr	x17, [x16, #568]
    2dd8:	add	x16, x16, #0x238
    2ddc:	br	x17

0000000000002de0 <PyUnicode_New@plt>:
    2de0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2de4:	ldr	x17, [x16, #576]
    2de8:	add	x16, x16, #0x240
    2dec:	br	x17

0000000000002df0 <PyCodec_LookupError@plt>:
    2df0:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2df4:	ldr	x17, [x16, #584]
    2df8:	add	x16, x16, #0x248
    2dfc:	br	x17

0000000000002e00 <PyObject_GC_UnTrack@plt>:
    2e00:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2e04:	ldr	x17, [x16, #592]
    2e08:	add	x16, x16, #0x250
    2e0c:	br	x17

0000000000002e10 <PyUnicode_Substring@plt>:
    2e10:	adrp	x16, 19000 <memcpy@GLIBC_2.17>
    2e14:	ldr	x17, [x16, #600]
    2e18:	add	x16, x16, #0x258
    2e1c:	br	x17

Disassembly of section .text:

0000000000002e20 <PyInit__multibytecodec@@Base-0xd4>:
    2e20:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e24:	ldr	x0, [x0, #4008]
    2e28:	cbz	x0, 2e30 <PyUnicode_Substring@plt+0x20>
    2e2c:	b	2bb0 <__gmon_start__@plt>
    2e30:	ret
    2e34:	nop
    2e38:	adrp	x0, 1a000 <PyInit__multibytecodec@@Base+0x1710c>
    2e3c:	add	x0, x0, #0x20
    2e40:	adrp	x1, 1a000 <PyInit__multibytecodec@@Base+0x1710c>
    2e44:	add	x1, x1, #0x20
    2e48:	cmp	x1, x0
    2e4c:	b.eq	2e64 <PyUnicode_Substring@plt+0x54>  // b.none
    2e50:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e54:	ldr	x1, [x1, #3960]
    2e58:	cbz	x1, 2e64 <PyUnicode_Substring@plt+0x54>
    2e5c:	mov	x16, x1
    2e60:	br	x16
    2e64:	ret
    2e68:	adrp	x0, 1a000 <PyInit__multibytecodec@@Base+0x1710c>
    2e6c:	add	x0, x0, #0x20
    2e70:	adrp	x1, 1a000 <PyInit__multibytecodec@@Base+0x1710c>
    2e74:	add	x1, x1, #0x20
    2e78:	sub	x1, x1, x0
    2e7c:	lsr	x2, x1, #63
    2e80:	add	x1, x2, x1, asr #3
    2e84:	cmp	xzr, x1, asr #1
    2e88:	asr	x1, x1, #1
    2e8c:	b.eq	2ea4 <PyUnicode_Substring@plt+0x94>  // b.none
    2e90:	adrp	x2, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2e94:	ldr	x2, [x2, #4064]
    2e98:	cbz	x2, 2ea4 <PyUnicode_Substring@plt+0x94>
    2e9c:	mov	x16, x2
    2ea0:	br	x16
    2ea4:	ret
    2ea8:	stp	x29, x30, [sp, #-32]!
    2eac:	mov	x29, sp
    2eb0:	str	x19, [sp, #16]
    2eb4:	adrp	x19, 1a000 <PyInit__multibytecodec@@Base+0x1710c>
    2eb8:	ldrb	w0, [x19, #32]
    2ebc:	cbnz	w0, 2ee4 <PyUnicode_Substring@plt+0xd4>
    2ec0:	adrp	x0, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2ec4:	ldr	x0, [x0, #3976]
    2ec8:	cbz	x0, 2ed8 <PyUnicode_Substring@plt+0xc8>
    2ecc:	adrp	x0, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    2ed0:	ldr	x0, [x0, #608]
    2ed4:	bl	2a00 <__cxa_finalize@plt>
    2ed8:	bl	2e38 <PyUnicode_Substring@plt+0x28>
    2edc:	mov	w0, #0x1                   	// #1
    2ee0:	strb	w0, [x19, #32]
    2ee4:	ldr	x19, [sp, #16]
    2ee8:	ldp	x29, x30, [sp], #32
    2eec:	ret
    2ef0:	b	2e68 <PyUnicode_Substring@plt+0x58>

0000000000002ef4 <PyInit__multibytecodec@@Base>:
    2ef4:	sub	sp, sp, #0x70
    2ef8:	stp	x29, x30, [sp, #96]
    2efc:	add	x29, sp, #0x60
    2f00:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    2f04:	add	x1, x1, #0xd08
    2f08:	mov	x2, #0x28                  	// #40
    2f0c:	adrp	x0, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    2f10:	add	x0, x0, #0x8e8
    2f14:	add	x8, sp, #0x20
    2f18:	str	x0, [sp, #24]
    2f1c:	mov	x0, x8
    2f20:	bl	2960 <memcpy@plt>
    2f24:	ldr	x0, [sp, #24]
    2f28:	bl	2b40 <PyType_Ready@plt>
    2f2c:	cmp	w0, #0x0
    2f30:	cset	w9, ge  // ge = tcont
    2f34:	tbnz	w9, #0, 2f44 <PyInit__multibytecodec@@Base+0x50>
    2f38:	mov	x8, xzr
    2f3c:	stur	x8, [x29, #-8]
    2f40:	b	3044 <PyInit__multibytecodec@@Base+0x150>
    2f44:	adrp	x0, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    2f48:	add	x0, x0, #0xa88
    2f4c:	mov	w1, #0x3f5                 	// #1013
    2f50:	bl	2c00 <PyModule_Create2@plt>
    2f54:	stur	x0, [x29, #-24]
    2f58:	ldur	x8, [x29, #-24]
    2f5c:	cbnz	x8, 2f6c <PyInit__multibytecodec@@Base+0x78>
    2f60:	mov	x8, xzr
    2f64:	stur	x8, [x29, #-8]
    2f68:	b	3044 <PyInit__multibytecodec@@Base+0x150>
    2f6c:	stur	wzr, [x29, #-12]
    2f70:	ldursw	x8, [x29, #-12]
    2f74:	mov	x9, #0x8                   	// #8
    2f78:	mul	x8, x9, x8
    2f7c:	add	x9, sp, #0x20
    2f80:	add	x8, x9, x8
    2f84:	ldr	x8, [x8]
    2f88:	cbz	x8, 3028 <PyInit__multibytecodec@@Base+0x134>
    2f8c:	ldursw	x8, [x29, #-12]
    2f90:	mov	x9, #0x8                   	// #8
    2f94:	mul	x8, x9, x8
    2f98:	add	x9, sp, #0x20
    2f9c:	add	x8, x9, x8
    2fa0:	ldr	x0, [x8]
    2fa4:	bl	2b40 <PyType_Ready@plt>
    2fa8:	cmp	w0, #0x0
    2fac:	cset	w10, ge  // ge = tcont
    2fb0:	tbnz	w10, #0, 2fc0 <PyInit__multibytecodec@@Base+0xcc>
    2fb4:	mov	x8, xzr
    2fb8:	stur	x8, [x29, #-8]
    2fbc:	b	3044 <PyInit__multibytecodec@@Base+0x150>
    2fc0:	ldursw	x8, [x29, #-12]
    2fc4:	mov	x9, #0x8                   	// #8
    2fc8:	mul	x8, x9, x8
    2fcc:	add	x10, sp, #0x20
    2fd0:	add	x8, x10, x8
    2fd4:	ldr	x0, [x8]
    2fd8:	str	x9, [sp, #16]
    2fdc:	str	x10, [sp, #8]
    2fe0:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    2fe4:	ldur	x0, [x29, #-24]
    2fe8:	ldursw	x8, [x29, #-12]
    2fec:	ldr	x9, [sp, #16]
    2ff0:	mul	x8, x9, x8
    2ff4:	ldr	x10, [sp, #8]
    2ff8:	add	x8, x10, x8
    2ffc:	ldr	x8, [x8]
    3000:	ldr	x1, [x8, #24]
    3004:	ldursw	x8, [x29, #-12]
    3008:	mul	x8, x9, x8
    300c:	add	x8, x10, x8
    3010:	ldr	x2, [x8]
    3014:	bl	2d00 <PyModule_AddObject@plt>
    3018:	ldur	w8, [x29, #-12]
    301c:	add	w8, w8, #0x1
    3020:	stur	w8, [x29, #-12]
    3024:	b	2f70 <PyInit__multibytecodec@@Base+0x7c>
    3028:	bl	2bf0 <PyErr_Occurred@plt>
    302c:	cbz	x0, 303c <PyInit__multibytecodec@@Base+0x148>
    3030:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3034:	add	x0, x0, #0xe35
    3038:	bl	2c70 <Py_FatalError@plt>
    303c:	ldur	x8, [x29, #-24]
    3040:	stur	x8, [x29, #-8]
    3044:	ldur	x0, [x29, #-8]
    3048:	ldp	x29, x30, [sp, #96]
    304c:	add	sp, sp, #0x70
    3050:	ret
    3054:	sub	sp, sp, #0x10
    3058:	str	x0, [sp, #8]
    305c:	ldr	x8, [sp, #8]
    3060:	ldr	x9, [x8]
    3064:	add	x9, x9, #0x1
    3068:	str	x9, [x8]
    306c:	add	sp, sp, #0x10
    3070:	ret
    3074:	sub	sp, sp, #0x20
    3078:	stp	x29, x30, [sp, #16]
    307c:	add	x29, sp, #0x10
    3080:	str	x0, [sp, #8]
    3084:	ldr	x0, [sp, #8]
    3088:	bl	2e00 <PyObject_GC_UnTrack@plt>
    308c:	ldr	x8, [sp, #8]
    3090:	ldr	x8, [x8, #32]
    3094:	cbz	x8, 30d4 <PyInit__multibytecodec@@Base+0x1e0>
    3098:	ldr	x8, [sp, #8]
    309c:	ldr	x8, [x8, #32]
    30a0:	cmp	x8, #0x1
    30a4:	b.cc	30bc <PyInit__multibytecodec@@Base+0x1c8>  // b.lo, b.ul, b.last
    30a8:	ldr	x8, [sp, #8]
    30ac:	ldr	x8, [x8, #32]
    30b0:	mov	x9, #0x3                   	// #3
    30b4:	cmp	x9, x8
    30b8:	b.cs	30d4 <PyInit__multibytecodec@@Base+0x1e0>  // b.hs, b.nlast
    30bc:	ldr	x8, [sp, #8]
    30c0:	ldr	x2, [x8, #32]
    30c4:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    30c8:	add	x0, x0, #0xe7d
    30cc:	mov	w1, #0x437                 	// #1079
    30d0:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    30d4:	ldr	x8, [sp, #8]
    30d8:	ldr	x8, [x8, #40]
    30dc:	str	x8, [sp]
    30e0:	ldr	x8, [sp]
    30e4:	cbz	x8, 3108 <PyInit__multibytecodec@@Base+0x214>
    30e8:	ldr	x8, [sp, #8]
    30ec:	mov	x9, xzr
    30f0:	str	x9, [x8, #40]
    30f4:	ldr	x2, [sp]
    30f8:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    30fc:	add	x0, x0, #0xe7d
    3100:	mov	w1, #0x438                 	// #1080
    3104:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    3108:	ldr	x8, [sp, #8]
    310c:	ldr	x8, [x8, #8]
    3110:	ldr	x8, [x8, #320]
    3114:	ldr	x0, [sp, #8]
    3118:	blr	x8
    311c:	ldp	x29, x30, [sp, #16]
    3120:	add	sp, sp, #0x20
    3124:	ret
    3128:	sub	sp, sp, #0x40
    312c:	stp	x29, x30, [sp, #48]
    3130:	add	x29, sp, #0x30
    3134:	stur	x0, [x29, #-16]
    3138:	str	x1, [sp, #24]
    313c:	str	x2, [sp, #16]
    3140:	ldur	x8, [x29, #-16]
    3144:	ldr	x8, [x8, #32]
    3148:	cmp	x8, #0x1
    314c:	b.cc	3164 <PyInit__multibytecodec@@Base+0x270>  // b.lo, b.ul, b.last
    3150:	ldur	x8, [x29, #-16]
    3154:	ldr	x8, [x8, #32]
    3158:	mov	x9, #0x3                   	// #3
    315c:	cmp	x9, x8
    3160:	b.cs	319c <PyInit__multibytecodec@@Base+0x2a8>  // b.hs, b.nlast
    3164:	ldur	x8, [x29, #-16]
    3168:	ldr	x8, [x8, #32]
    316c:	cbz	x8, 319c <PyInit__multibytecodec@@Base+0x2a8>
    3170:	ldr	x8, [sp, #24]
    3174:	ldur	x9, [x29, #-16]
    3178:	ldr	x0, [x9, #32]
    317c:	ldr	x1, [sp, #16]
    3180:	blr	x8
    3184:	str	w0, [sp, #12]
    3188:	ldr	w10, [sp, #12]
    318c:	cbz	w10, 319c <PyInit__multibytecodec@@Base+0x2a8>
    3190:	ldr	w8, [sp, #12]
    3194:	stur	w8, [x29, #-4]
    3198:	b	31a0 <PyInit__multibytecodec@@Base+0x2ac>
    319c:	stur	wzr, [x29, #-4]
    31a0:	ldur	w0, [x29, #-4]
    31a4:	ldp	x29, x30, [sp, #48]
    31a8:	add	sp, sp, #0x40
    31ac:	ret
    31b0:	sub	sp, sp, #0x20
    31b4:	mov	w8, wzr
    31b8:	str	x0, [sp, #24]
    31bc:	str	x1, [sp, #16]
    31c0:	str	x2, [sp, #8]
    31c4:	mov	w0, w8
    31c8:	add	sp, sp, #0x20
    31cc:	ret
    31d0:	sub	sp, sp, #0x50
    31d4:	stp	x29, x30, [sp, #64]
    31d8:	add	x29, sp, #0x40
    31dc:	mov	x8, xzr
    31e0:	adrp	x9, 8000 <PyInit__multibytecodec@@Base+0x510c>
    31e4:	add	x9, x9, #0x98
    31e8:	adrp	x3, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    31ec:	add	x3, x3, #0xc20
    31f0:	add	x4, sp, #0x8
    31f4:	stur	x0, [x29, #-16]
    31f8:	stur	x1, [x29, #-24]
    31fc:	str	x2, [sp, #32]
    3200:	str	x8, [sp, #16]
    3204:	str	x8, [sp, #8]
    3208:	ldur	x0, [x29, #-24]
    320c:	ldr	x1, [sp, #32]
    3210:	mov	x2, x9
    3214:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3218:	cbnz	w0, 3228 <PyInit__multibytecodec@@Base+0x334>
    321c:	mov	x8, xzr
    3220:	stur	x8, [x29, #-8]
    3224:	b	335c <PyInit__multibytecodec@@Base+0x468>
    3228:	ldur	x8, [x29, #-16]
    322c:	ldr	x8, [x8, #304]
    3230:	ldur	x0, [x29, #-16]
    3234:	mov	x9, xzr
    3238:	mov	x1, x9
    323c:	blr	x8
    3240:	str	x0, [sp, #24]
    3244:	ldr	x8, [sp, #24]
    3248:	cbnz	x8, 3258 <PyInit__multibytecodec@@Base+0x364>
    324c:	mov	x8, xzr
    3250:	stur	x8, [x29, #-8]
    3254:	b	335c <PyInit__multibytecodec@@Base+0x468>
    3258:	ldur	x0, [x29, #-16]
    325c:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    3260:	add	x1, x1, #0x2f3
    3264:	bl	29f0 <PyObject_GetAttrString@plt>
    3268:	str	x0, [sp, #16]
    326c:	ldr	x8, [sp, #16]
    3270:	cbnz	x8, 3278 <PyInit__multibytecodec@@Base+0x384>
    3274:	b	3344 <PyInit__multibytecodec@@Base+0x450>
    3278:	ldr	x8, [sp, #16]
    327c:	ldr	x8, [x8, #8]
    3280:	adrp	x9, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    3284:	add	x9, x9, #0x8e8
    3288:	cmp	x8, x9
    328c:	b.eq	32ac <PyInit__multibytecodec@@Base+0x3b8>  // b.none
    3290:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    3294:	ldr	x8, [x8, #4000]
    3298:	ldr	x0, [x8]
    329c:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    32a0:	add	x1, x1, #0xae
    32a4:	bl	2ad0 <PyErr_SetString@plt>
    32a8:	b	3344 <PyInit__multibytecodec@@Base+0x450>
    32ac:	ldr	x8, [sp, #16]
    32b0:	ldr	x8, [x8, #16]
    32b4:	ldr	x9, [sp, #24]
    32b8:	str	x8, [x9, #16]
    32bc:	ldr	x8, [sp, #24]
    32c0:	mov	x9, xzr
    32c4:	str	x9, [x8, #40]
    32c8:	ldr	x0, [sp, #8]
    32cc:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    32d0:	ldr	x8, [sp, #24]
    32d4:	str	x0, [x8, #32]
    32d8:	ldr	x8, [sp, #24]
    32dc:	ldr	x8, [x8, #32]
    32e0:	cbnz	x8, 32e8 <PyInit__multibytecodec@@Base+0x3f4>
    32e4:	b	3344 <PyInit__multibytecodec@@Base+0x450>
    32e8:	ldr	x8, [sp, #24]
    32ec:	ldr	x8, [x8, #16]
    32f0:	ldr	x8, [x8, #32]
    32f4:	cbz	x8, 3324 <PyInit__multibytecodec@@Base+0x430>
    32f8:	ldr	x8, [sp, #24]
    32fc:	ldr	x8, [x8, #16]
    3300:	ldr	x8, [x8, #32]
    3304:	ldr	x9, [sp, #24]
    3308:	add	x0, x9, #0x18
    330c:	ldr	x9, [sp, #24]
    3310:	ldr	x9, [x9, #16]
    3314:	ldr	x1, [x9, #8]
    3318:	blr	x8
    331c:	cbz	w0, 3324 <PyInit__multibytecodec@@Base+0x430>
    3320:	b	3344 <PyInit__multibytecodec@@Base+0x450>
    3324:	ldr	x2, [sp, #16]
    3328:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    332c:	add	x0, x0, #0xe7d
    3330:	mov	w1, #0x41b                 	// #1051
    3334:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    3338:	ldr	x8, [sp, #24]
    333c:	stur	x8, [x29, #-8]
    3340:	b	335c <PyInit__multibytecodec@@Base+0x468>
    3344:	ldr	x0, [sp, #24]
    3348:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    334c:	ldr	x0, [sp, #16]
    3350:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3354:	mov	x8, xzr
    3358:	stur	x8, [x29, #-8]
    335c:	ldur	x0, [x29, #-8]
    3360:	ldp	x29, x30, [sp, #64]
    3364:	add	sp, sp, #0x50
    3368:	ret
    336c:	sub	sp, sp, #0x30
    3370:	stp	x29, x30, [sp, #32]
    3374:	add	x29, sp, #0x20
    3378:	stur	x0, [x29, #-8]
    337c:	stur	w1, [x29, #-12]
    3380:	str	x2, [sp, #8]
    3384:	ldr	x8, [sp, #8]
    3388:	ldr	x9, [x8]
    338c:	subs	x9, x9, #0x1
    3390:	str	x9, [x8]
    3394:	cbz	x9, 339c <PyInit__multibytecodec@@Base+0x4a8>
    3398:	b	33a4 <PyInit__multibytecodec@@Base+0x4b0>
    339c:	ldr	x0, [sp, #8]
    33a0:	bl	2a40 <_Py_Dealloc@plt>
    33a4:	ldp	x29, x30, [sp, #32]
    33a8:	add	sp, sp, #0x30
    33ac:	ret
    33b0:	sub	sp, sp, #0x80
    33b4:	stp	x29, x30, [sp, #112]
    33b8:	add	x29, sp, #0x70
    33bc:	mov	x8, xzr
    33c0:	stur	x0, [x29, #-8]
    33c4:	stur	x1, [x29, #-16]
    33c8:	stur	x2, [x29, #-24]
    33cc:	stur	x3, [x29, #-32]
    33d0:	stur	x8, [x29, #-40]
    33d4:	ldur	x8, [x29, #-24]
    33d8:	ldur	x9, [x29, #-32]
    33dc:	str	x8, [sp, #24]
    33e0:	cbz	x9, 33f4 <PyInit__multibytecodec@@Base+0x500>
    33e4:	ldur	x8, [x29, #-32]
    33e8:	ldr	x8, [x8, #16]
    33ec:	str	x8, [sp, #16]
    33f0:	b	33fc <PyInit__multibytecodec@@Base+0x508>
    33f4:	mov	x8, xzr
    33f8:	str	x8, [sp, #16]
    33fc:	ldr	x8, [sp, #16]
    3400:	ldr	x9, [sp, #24]
    3404:	add	x8, x9, x8
    3408:	subs	x8, x8, #0x1
    340c:	str	x8, [sp, #48]
    3410:	str	wzr, [sp, #36]
    3414:	ldur	x8, [x29, #-32]
    3418:	cbnz	x8, 344c <PyInit__multibytecodec@@Base+0x558>
    341c:	ldur	x8, [x29, #-24]
    3420:	mov	x9, #0x1                   	// #1
    3424:	cmp	x9, x8
    3428:	b.gt	344c <PyInit__multibytecodec@@Base+0x558>
    342c:	ldur	x8, [x29, #-24]
    3430:	cmp	x8, #0x2
    3434:	b.gt	344c <PyInit__multibytecodec@@Base+0x558>
    3438:	ldur	x8, [x29, #-16]
    343c:	cbz	x8, 344c <PyInit__multibytecodec@@Base+0x558>
    3440:	ldur	x8, [x29, #-16]
    3444:	str	x8, [sp, #8]
    3448:	b	348c <PyInit__multibytecodec@@Base+0x598>
    344c:	ldur	x0, [x29, #-16]
    3450:	ldur	x1, [x29, #-24]
    3454:	ldur	x3, [x29, #-32]
    3458:	mov	x8, xzr
    345c:	mov	x2, x8
    3460:	adrp	x4, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    3464:	add	x4, x4, #0xbe0
    3468:	mov	w5, #0x1                   	// #1
    346c:	mov	w6, #0x2                   	// #2
    3470:	mov	w9, wzr
    3474:	mov	w7, w9
    3478:	mov	x8, sp
    347c:	add	x10, sp, #0x38
    3480:	str	x10, [x8]
    3484:	bl	2ac0 <_PyArg_UnpackKeywords@plt>
    3488:	str	x0, [sp, #8]
    348c:	ldr	x8, [sp, #8]
    3490:	stur	x8, [x29, #-16]
    3494:	ldur	x8, [x29, #-16]
    3498:	cbnz	x8, 34a0 <PyInit__multibytecodec@@Base+0x5ac>
    349c:	b	354c <PyInit__multibytecodec@@Base+0x658>
    34a0:	ldur	x8, [x29, #-16]
    34a4:	ldr	x8, [x8]
    34a8:	str	x8, [sp, #40]
    34ac:	ldr	x8, [sp, #48]
    34b0:	cbnz	x8, 34b8 <PyInit__multibytecodec@@Base+0x5c4>
    34b4:	b	3538 <PyInit__multibytecodec@@Base+0x644>
    34b8:	ldur	x8, [x29, #-16]
    34bc:	ldr	x8, [x8, #8]
    34c0:	ldr	x8, [x8, #8]
    34c4:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    34c8:	ldr	x9, [x9, #3968]
    34cc:	cmp	x8, x9
    34d0:	b.eq	34f0 <PyInit__multibytecodec@@Base+0x5fc>  // b.none
    34d4:	ldur	x8, [x29, #-16]
    34d8:	ldr	x8, [x8, #8]
    34dc:	ldr	x0, [x8, #8]
    34e0:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    34e4:	ldr	x1, [x1, #3968]
    34e8:	bl	2d20 <PyType_IsSubtype@plt>
    34ec:	cbz	w0, 350c <PyInit__multibytecodec@@Base+0x618>
    34f0:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    34f4:	ldr	x8, [x8, #4000]
    34f8:	ldr	x0, [x8]
    34fc:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3500:	add	x1, x1, #0xee1
    3504:	bl	2ad0 <PyErr_SetString@plt>
    3508:	b	354c <PyInit__multibytecodec@@Base+0x658>
    350c:	ldur	x8, [x29, #-16]
    3510:	ldr	x0, [x8, #8]
    3514:	bl	2da0 <_PyLong_AsInt@plt>
    3518:	str	w0, [sp, #36]
    351c:	ldr	w9, [sp, #36]
    3520:	mov	w10, #0xffffffff            	// #-1
    3524:	cmp	w9, w10
    3528:	b.ne	3538 <PyInit__multibytecodec@@Base+0x644>  // b.any
    352c:	bl	2bf0 <PyErr_Occurred@plt>
    3530:	cbz	x0, 3538 <PyInit__multibytecodec@@Base+0x644>
    3534:	b	354c <PyInit__multibytecodec@@Base+0x658>
    3538:	ldur	x0, [x29, #-8]
    353c:	ldr	x1, [sp, #40]
    3540:	ldr	w2, [sp, #36]
    3544:	bl	3628 <PyInit__multibytecodec@@Base+0x734>
    3548:	stur	x0, [x29, #-40]
    354c:	ldur	x0, [x29, #-40]
    3550:	ldp	x29, x30, [sp, #112]
    3554:	add	sp, sp, #0x80
    3558:	ret
    355c:	sub	sp, sp, #0x20
    3560:	stp	x29, x30, [sp, #16]
    3564:	add	x29, sp, #0x10
    3568:	str	x0, [sp, #8]
    356c:	str	x1, [sp]
    3570:	ldr	x0, [sp, #8]
    3574:	bl	4584 <PyInit__multibytecodec@@Base+0x1690>
    3578:	ldp	x29, x30, [sp, #16]
    357c:	add	sp, sp, #0x20
    3580:	ret
    3584:	sub	sp, sp, #0x30
    3588:	stp	x29, x30, [sp, #32]
    358c:	add	x29, sp, #0x20
    3590:	mov	x8, xzr
    3594:	stur	x0, [x29, #-8]
    3598:	str	x1, [sp, #16]
    359c:	str	x8, [sp, #8]
    35a0:	ldr	x8, [sp, #16]
    35a4:	ldr	x8, [x8, #8]
    35a8:	ldr	x8, [x8, #168]
    35ac:	and	x8, x8, #0x1000000
    35b0:	cbnz	x8, 35d8 <PyInit__multibytecodec@@Base+0x6e4>
    35b4:	ldr	x3, [sp, #16]
    35b8:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    35bc:	add	x0, x0, #0xec6
    35c0:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    35c4:	add	x1, x1, #0x162
    35c8:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    35cc:	add	x2, x2, #0x3a
    35d0:	bl	2b70 <_PyArg_BadArgument@plt>
    35d4:	b	35f0 <PyInit__multibytecodec@@Base+0x6fc>
    35d8:	ldr	x8, [sp, #16]
    35dc:	str	x8, [sp]
    35e0:	ldur	x0, [x29, #-8]
    35e4:	ldr	x1, [sp]
    35e8:	bl	4688 <PyInit__multibytecodec@@Base+0x1794>
    35ec:	str	x0, [sp, #8]
    35f0:	ldr	x0, [sp, #8]
    35f4:	ldp	x29, x30, [sp, #32]
    35f8:	add	sp, sp, #0x30
    35fc:	ret
    3600:	sub	sp, sp, #0x20
    3604:	stp	x29, x30, [sp, #16]
    3608:	add	x29, sp, #0x10
    360c:	str	x0, [sp, #8]
    3610:	str	x1, [sp]
    3614:	ldr	x0, [sp, #8]
    3618:	bl	47c8 <PyInit__multibytecodec@@Base+0x18d4>
    361c:	ldp	x29, x30, [sp, #16]
    3620:	add	sp, sp, #0x20
    3624:	ret
    3628:	sub	sp, sp, #0x30
    362c:	stp	x29, x30, [sp, #32]
    3630:	add	x29, sp, #0x20
    3634:	stur	x0, [x29, #-8]
    3638:	str	x1, [sp, #16]
    363c:	str	w2, [sp, #12]
    3640:	ldur	x0, [x29, #-8]
    3644:	ldr	x1, [sp, #16]
    3648:	ldr	w2, [sp, #12]
    364c:	bl	365c <PyInit__multibytecodec@@Base+0x768>
    3650:	ldp	x29, x30, [sp, #32]
    3654:	add	sp, sp, #0x30
    3658:	ret
    365c:	sub	sp, sp, #0x90
    3660:	stp	x29, x30, [sp, #128]
    3664:	add	x29, sp, #0x80
    3668:	mov	x8, xzr
    366c:	adrp	x9, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3670:	add	x9, x9, #0xe7d
    3674:	stur	x0, [x29, #-16]
    3678:	stur	x1, [x29, #-24]
    367c:	stur	w2, [x29, #-28]
    3680:	stur	x8, [x29, #-48]
    3684:	stur	x8, [x29, #-56]
    3688:	str	x8, [sp, #48]
    368c:	ldur	x8, [x29, #-24]
    3690:	ldr	x8, [x8, #8]
    3694:	ldr	x8, [x8, #168]
    3698:	and	x8, x8, #0x10000000
    369c:	str	x9, [sp, #16]
    36a0:	cbz	x8, 36b0 <PyInit__multibytecodec@@Base+0x7bc>
    36a4:	mov	x8, xzr
    36a8:	stur	x8, [x29, #-40]
    36ac:	b	371c <PyInit__multibytecodec@@Base+0x828>
    36b0:	ldur	x0, [x29, #-24]
    36b4:	bl	2a90 <PyObject_Str@plt>
    36b8:	stur	x0, [x29, #-40]
    36bc:	stur	x0, [x29, #-24]
    36c0:	ldur	x8, [x29, #-24]
    36c4:	cbnz	x8, 36d4 <PyInit__multibytecodec@@Base+0x7e0>
    36c8:	mov	x8, xzr
    36cc:	stur	x8, [x29, #-8]
    36d0:	b	3940 <PyInit__multibytecodec@@Base+0xa4c>
    36d4:	ldur	x8, [x29, #-24]
    36d8:	ldr	x8, [x8, #8]
    36dc:	ldr	x8, [x8, #168]
    36e0:	and	x8, x8, #0x10000000
    36e4:	cbnz	x8, 371c <PyInit__multibytecodec@@Base+0x828>
    36e8:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    36ec:	ldr	x8, [x8, #4000]
    36f0:	ldr	x0, [x8]
    36f4:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    36f8:	add	x1, x1, #0xf06
    36fc:	bl	2ad0 <PyErr_SetString@plt>
    3700:	ldur	x2, [x29, #-40]
    3704:	ldr	x0, [sp, #16]
    3708:	mov	w1, #0x2fd                 	// #765
    370c:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    3710:	mov	x8, xzr
    3714:	stur	x8, [x29, #-8]
    3718:	b	3940 <PyInit__multibytecodec@@Base+0xa4c>
    371c:	ldur	x8, [x29, #-16]
    3720:	ldr	x8, [x8, #40]
    3724:	cbz	x8, 37ac <PyInit__multibytecodec@@Base+0x8b8>
    3728:	ldur	x8, [x29, #-16]
    372c:	ldr	x0, [x8, #40]
    3730:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    3734:	ldur	x8, [x29, #-16]
    3738:	ldr	x8, [x8, #40]
    373c:	str	x8, [sp, #48]
    3740:	ldur	x8, [x29, #-16]
    3744:	ldr	x0, [x8, #40]
    3748:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    374c:	ldur	x8, [x29, #-16]
    3750:	ldr	x8, [x8, #40]
    3754:	add	x0, sp, #0x28
    3758:	str	x8, [sp, #40]
    375c:	ldur	x1, [x29, #-24]
    3760:	bl	2aa0 <PyUnicode_Append@plt>
    3764:	ldr	x8, [sp, #40]
    3768:	cbnz	x8, 3770 <PyInit__multibytecodec@@Base+0x87c>
    376c:	b	3918 <PyInit__multibytecodec@@Base+0xa24>
    3770:	ldur	x8, [x29, #-16]
    3774:	ldr	x8, [x8, #40]
    3778:	str	x8, [sp, #32]
    377c:	ldr	x8, [sp, #32]
    3780:	cbz	x8, 37a0 <PyInit__multibytecodec@@Base+0x8ac>
    3784:	ldur	x8, [x29, #-16]
    3788:	mov	x9, xzr
    378c:	str	x9, [x8, #40]
    3790:	ldr	x2, [sp, #32]
    3794:	ldr	x0, [sp, #16]
    3798:	mov	w1, #0x30d                 	// #781
    379c:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    37a0:	ldr	x8, [sp, #40]
    37a4:	stur	x8, [x29, #-56]
    37a8:	b	37c4 <PyInit__multibytecodec@@Base+0x8d0>
    37ac:	mov	x8, xzr
    37b0:	str	x8, [sp, #48]
    37b4:	ldur	x0, [x29, #-24]
    37b8:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    37bc:	ldur	x8, [x29, #-24]
    37c0:	stur	x8, [x29, #-56]
    37c4:	ldur	x8, [x29, #-56]
    37c8:	ldr	w9, [x8, #32]
    37cc:	lsr	w9, w9, #7
    37d0:	and	w9, w9, #0x1
    37d4:	cbz	w9, 37e4 <PyInit__multibytecodec@@Base+0x8f0>
    37d8:	mov	w8, wzr
    37dc:	str	w8, [sp, #12]
    37e0:	b	37f0 <PyInit__multibytecodec@@Base+0x8fc>
    37e4:	ldur	x0, [x29, #-56]
    37e8:	bl	2970 <_PyUnicode_Ready@plt>
    37ec:	str	w0, [sp, #12]
    37f0:	ldr	w8, [sp, #12]
    37f4:	cmp	w8, #0x0
    37f8:	cset	w8, ge  // ge = tcont
    37fc:	tbnz	w8, #0, 3804 <PyInit__multibytecodec@@Base+0x910>
    3800:	b	3918 <PyInit__multibytecodec@@Base+0xa24>
    3804:	add	x3, sp, #0x40
    3808:	str	xzr, [sp, #64]
    380c:	ldur	x8, [x29, #-56]
    3810:	ldr	x8, [x8, #16]
    3814:	str	x8, [sp, #56]
    3818:	ldur	x8, [x29, #-16]
    381c:	ldr	x0, [x8, #16]
    3820:	ldur	x8, [x29, #-16]
    3824:	add	x1, x8, #0x18
    3828:	ldur	x2, [x29, #-56]
    382c:	ldur	x8, [x29, #-16]
    3830:	ldr	x4, [x8, #32]
    3834:	ldur	w9, [x29, #-28]
    3838:	mov	w10, wzr
    383c:	mov	w11, #0x3                   	// #3
    3840:	cmp	w9, #0x0
    3844:	csel	w5, w11, w10, ne  // ne = any
    3848:	bl	3950 <PyInit__multibytecodec@@Base+0xa5c>
    384c:	stur	x0, [x29, #-48]
    3850:	ldur	x8, [x29, #-48]
    3854:	cbnz	x8, 3884 <PyInit__multibytecodec@@Base+0x990>
    3858:	ldur	x8, [x29, #-16]
    385c:	ldr	x8, [x8, #40]
    3860:	str	x8, [sp, #24]
    3864:	ldr	x8, [sp, #48]
    3868:	ldur	x9, [x29, #-16]
    386c:	str	x8, [x9, #40]
    3870:	ldr	x0, [sp, #24]
    3874:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3878:	mov	x8, xzr
    387c:	str	x8, [sp, #48]
    3880:	b	3918 <PyInit__multibytecodec@@Base+0xa24>
    3884:	ldr	x0, [sp, #48]
    3888:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    388c:	ldr	x8, [sp, #64]
    3890:	ldr	x9, [sp, #56]
    3894:	cmp	x8, x9
    3898:	b.ge	38f4 <PyInit__multibytecodec@@Base+0xa00>  // b.tcont
    389c:	ldr	x8, [sp, #56]
    38a0:	ldr	x9, [sp, #64]
    38a4:	subs	x8, x8, x9
    38a8:	cmp	x8, #0x2
    38ac:	b.le	38cc <PyInit__multibytecodec@@Base+0x9d8>
    38b0:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    38b4:	ldr	x8, [x8, #4048]
    38b8:	ldr	x0, [x8]
    38bc:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    38c0:	add	x1, x1, #0xf2a
    38c4:	bl	2ad0 <PyErr_SetString@plt>
    38c8:	b	3918 <PyInit__multibytecodec@@Base+0xa24>
    38cc:	ldur	x0, [x29, #-56]
    38d0:	ldr	x1, [sp, #64]
    38d4:	ldr	x2, [sp, #56]
    38d8:	bl	2e10 <PyUnicode_Substring@plt>
    38dc:	ldur	x8, [x29, #-16]
    38e0:	str	x0, [x8, #40]
    38e4:	ldur	x8, [x29, #-16]
    38e8:	ldr	x8, [x8, #40]
    38ec:	cbnz	x8, 38f4 <PyInit__multibytecodec@@Base+0xa00>
    38f0:	b	3918 <PyInit__multibytecodec@@Base+0xa24>
    38f4:	ldur	x2, [x29, #-56]
    38f8:	ldr	x0, [sp, #16]
    38fc:	mov	w1, #0x334                 	// #820
    3900:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    3904:	ldur	x0, [x29, #-40]
    3908:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    390c:	ldur	x8, [x29, #-48]
    3910:	stur	x8, [x29, #-8]
    3914:	b	3940 <PyInit__multibytecodec@@Base+0xa4c>
    3918:	ldur	x0, [x29, #-48]
    391c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3920:	ldur	x0, [x29, #-40]
    3924:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3928:	ldr	x0, [sp, #48]
    392c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3930:	ldur	x0, [x29, #-56]
    3934:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3938:	mov	x8, xzr
    393c:	stur	x8, [x29, #-8]
    3940:	ldur	x0, [x29, #-8]
    3944:	ldp	x29, x30, [sp, #128]
    3948:	add	sp, sp, #0x90
    394c:	ret
    3950:	sub	sp, sp, #0xf0
    3954:	stp	x29, x30, [sp, #224]
    3958:	add	x29, sp, #0xe0
    395c:	stur	x0, [x29, #-16]
    3960:	stur	x1, [x29, #-24]
    3964:	stur	x2, [x29, #-32]
    3968:	stur	x3, [x29, #-40]
    396c:	stur	x4, [x29, #-48]
    3970:	stur	w5, [x29, #-52]
    3974:	str	xzr, [sp, #96]
    3978:	ldur	x8, [x29, #-32]
    397c:	ldr	w9, [x8, #32]
    3980:	lsr	w9, w9, #7
    3984:	and	w9, w9, #0x1
    3988:	cbz	w9, 3998 <PyInit__multibytecodec@@Base+0xaa4>
    398c:	mov	w8, wzr
    3990:	str	w8, [sp, #52]
    3994:	b	39a4 <PyInit__multibytecodec@@Base+0xab0>
    3998:	ldur	x0, [x29, #-32]
    399c:	bl	2970 <_PyUnicode_Ready@plt>
    39a0:	str	w0, [sp, #52]
    39a4:	ldr	w8, [sp, #52]
    39a8:	cmp	w8, #0x0
    39ac:	cset	w8, ge  // ge = tcont
    39b0:	tbnz	w8, #0, 39c0 <PyInit__multibytecodec@@Base+0xacc>
    39b4:	mov	x8, xzr
    39b8:	stur	x8, [x29, #-8]
    39bc:	b	3cec <PyInit__multibytecodec@@Base+0xdf8>
    39c0:	ldur	x8, [x29, #-32]
    39c4:	ldr	x8, [x8, #16]
    39c8:	str	x8, [sp, #88]
    39cc:	ldr	x8, [sp, #88]
    39d0:	cbnz	x8, 39f8 <PyInit__multibytecodec@@Base+0xb04>
    39d4:	ldur	w8, [x29, #-52]
    39d8:	and	w8, w8, #0x2
    39dc:	cbnz	w8, 39f8 <PyInit__multibytecodec@@Base+0xb04>
    39e0:	mov	x8, xzr
    39e4:	mov	x0, x8
    39e8:	mov	x1, x8
    39ec:	bl	2a20 <PyBytes_FromStringAndSize@plt>
    39f0:	stur	x0, [x29, #-8]
    39f4:	b	3cec <PyInit__multibytecodec@@Base+0xdf8>
    39f8:	add	x8, sp, #0x70
    39fc:	mov	x9, xzr
    3a00:	str	x9, [x8, #40]
    3a04:	str	x9, [x8, #48]
    3a08:	ldur	x8, [x29, #-32]
    3a0c:	str	x8, [sp, #112]
    3a10:	str	xzr, [sp, #120]
    3a14:	ldr	x8, [sp, #88]
    3a18:	str	x8, [sp, #128]
    3a1c:	ldr	x8, [sp, #112]
    3a20:	ldr	w10, [x8, #32]
    3a24:	lsr	w10, w10, #2
    3a28:	and	w10, w10, #0x7
    3a2c:	str	w10, [sp, #84]
    3a30:	ldr	x8, [sp, #112]
    3a34:	ldr	w10, [x8, #32]
    3a38:	lsr	w10, w10, #5
    3a3c:	and	w10, w10, #0x1
    3a40:	cbz	w10, 3a80 <PyInit__multibytecodec@@Base+0xb8c>
    3a44:	ldr	x8, [sp, #112]
    3a48:	ldr	w9, [x8, #32]
    3a4c:	lsr	w9, w9, #6
    3a50:	and	w9, w9, #0x1
    3a54:	cbz	w9, 3a68 <PyInit__multibytecodec@@Base+0xb74>
    3a58:	ldr	x8, [sp, #112]
    3a5c:	add	x8, x8, #0x30
    3a60:	str	x8, [sp, #40]
    3a64:	b	3a74 <PyInit__multibytecodec@@Base+0xb80>
    3a68:	ldr	x8, [sp, #112]
    3a6c:	add	x8, x8, #0x48
    3a70:	str	x8, [sp, #40]
    3a74:	ldr	x8, [sp, #40]
    3a78:	str	x8, [sp, #32]
    3a7c:	b	3a8c <PyInit__multibytecodec@@Base+0xb98>
    3a80:	ldr	x8, [sp, #112]
    3a84:	ldr	x8, [x8, #72]
    3a88:	str	x8, [sp, #32]
    3a8c:	ldr	x8, [sp, #32]
    3a90:	str	x8, [sp, #72]
    3a94:	ldr	x8, [sp, #88]
    3a98:	mov	x9, #0xfffffffffffffff7    	// #-9
    3a9c:	movk	x9, #0x3fff, lsl #48
    3aa0:	cmp	x8, x9
    3aa4:	b.le	3ab0 <PyInit__multibytecodec@@Base+0xbbc>
    3aa8:	bl	2a60 <PyErr_NoMemory@plt>
    3aac:	b	3cc8 <PyInit__multibytecodec@@Base+0xdd4>
    3ab0:	ldr	x8, [sp, #88]
    3ab4:	mov	x9, #0x2                   	// #2
    3ab8:	mul	x8, x8, x9
    3abc:	add	x1, x8, #0x10
    3ac0:	mov	x8, xzr
    3ac4:	mov	x0, x8
    3ac8:	bl	2a20 <PyBytes_FromStringAndSize@plt>
    3acc:	add	x8, sp, #0x70
    3ad0:	str	x0, [x8, #48]
    3ad4:	ldr	x8, [x8, #48]
    3ad8:	cbnz	x8, 3ae0 <PyInit__multibytecodec@@Base+0xbec>
    3adc:	b	3cc8 <PyInit__multibytecodec@@Base+0xdd4>
    3ae0:	add	x8, sp, #0x70
    3ae4:	ldr	x9, [x8, #48]
    3ae8:	add	x9, x9, #0x20
    3aec:	str	x9, [x8, #24]
    3af0:	ldr	x9, [x8, #24]
    3af4:	ldr	x10, [x8, #48]
    3af8:	ldr	x10, [x10, #16]
    3afc:	add	x9, x9, x10
    3b00:	str	x9, [x8, #32]
    3b04:	ldr	x8, [sp, #120]
    3b08:	ldr	x9, [sp, #128]
    3b0c:	cmp	x8, x9
    3b10:	b.ge	3bc8 <PyInit__multibytecodec@@Base+0xcd4>  // b.tcont
    3b14:	add	x8, sp, #0x70
    3b18:	ldr	x9, [x8, #32]
    3b1c:	ldr	x10, [x8, #24]
    3b20:	subs	x9, x9, x10
    3b24:	str	x9, [sp, #64]
    3b28:	ldur	x9, [x29, #-16]
    3b2c:	ldr	x9, [x9, #24]
    3b30:	ldur	x0, [x29, #-24]
    3b34:	ldur	x10, [x29, #-16]
    3b38:	ldr	x1, [x10, #8]
    3b3c:	ldr	w2, [sp, #84]
    3b40:	ldr	x3, [sp, #72]
    3b44:	add	x4, x8, #0x8
    3b48:	ldr	x5, [sp, #128]
    3b4c:	add	x6, x8, #0x18
    3b50:	ldr	x7, [sp, #64]
    3b54:	ldur	w11, [x29, #-52]
    3b58:	mov	x8, sp
    3b5c:	str	w11, [x8]
    3b60:	blr	x9
    3b64:	str	x0, [sp, #96]
    3b68:	ldr	x8, [sp, #96]
    3b6c:	cbz	x8, 3b8c <PyInit__multibytecodec@@Base+0xc98>
    3b70:	ldr	x8, [sp, #96]
    3b74:	mov	x9, #0xfffffffffffffffe    	// #-2
    3b78:	cmp	x8, x9
    3b7c:	b.ne	3b90 <PyInit__multibytecodec@@Base+0xc9c>  // b.any
    3b80:	ldur	w8, [x29, #-52]
    3b84:	and	w8, w8, #0x1
    3b88:	cbnz	w8, 3b90 <PyInit__multibytecodec@@Base+0xc9c>
    3b8c:	b	3bc8 <PyInit__multibytecodec@@Base+0xcd4>
    3b90:	ldur	x0, [x29, #-16]
    3b94:	ldur	x1, [x29, #-24]
    3b98:	ldur	x3, [x29, #-48]
    3b9c:	ldr	x4, [sp, #96]
    3ba0:	add	x2, sp, #0x70
    3ba4:	bl	3d34 <PyInit__multibytecodec@@Base+0xe40>
    3ba8:	cbz	w0, 3bb0 <PyInit__multibytecodec@@Base+0xcbc>
    3bac:	b	3cc8 <PyInit__multibytecodec@@Base+0xdd4>
    3bb0:	ldr	x8, [sp, #96]
    3bb4:	mov	x9, #0xfffffffffffffffe    	// #-2
    3bb8:	cmp	x8, x9
    3bbc:	b.ne	3bc4 <PyInit__multibytecodec@@Base+0xcd0>  // b.any
    3bc0:	b	3bc8 <PyInit__multibytecodec@@Base+0xcd4>
    3bc4:	b	3b04 <PyInit__multibytecodec@@Base+0xc10>
    3bc8:	ldur	x8, [x29, #-16]
    3bcc:	ldr	x8, [x8, #40]
    3bd0:	cbz	x8, 3c48 <PyInit__multibytecodec@@Base+0xd54>
    3bd4:	ldur	w8, [x29, #-52]
    3bd8:	and	w8, w8, #0x2
    3bdc:	cbz	w8, 3c48 <PyInit__multibytecodec@@Base+0xd54>
    3be0:	add	x8, sp, #0x70
    3be4:	ldr	x9, [x8, #32]
    3be8:	ldr	x10, [x8, #24]
    3bec:	subs	x9, x9, x10
    3bf0:	str	x9, [sp, #56]
    3bf4:	ldur	x9, [x29, #-16]
    3bf8:	ldr	x9, [x9, #40]
    3bfc:	ldur	x0, [x29, #-24]
    3c00:	ldur	x10, [x29, #-16]
    3c04:	ldr	x1, [x10, #8]
    3c08:	add	x2, x8, #0x18
    3c0c:	ldr	x3, [sp, #56]
    3c10:	blr	x9
    3c14:	str	x0, [sp, #96]
    3c18:	ldr	x8, [sp, #96]
    3c1c:	cbnz	x8, 3c24 <PyInit__multibytecodec@@Base+0xd30>
    3c20:	b	3c48 <PyInit__multibytecodec@@Base+0xd54>
    3c24:	ldur	x0, [x29, #-16]
    3c28:	ldur	x1, [x29, #-24]
    3c2c:	ldur	x3, [x29, #-48]
    3c30:	ldr	x4, [sp, #96]
    3c34:	add	x2, sp, #0x70
    3c38:	bl	3d34 <PyInit__multibytecodec@@Base+0xe40>
    3c3c:	cbz	w0, 3c44 <PyInit__multibytecodec@@Base+0xd50>
    3c40:	b	3cc8 <PyInit__multibytecodec@@Base+0xdd4>
    3c44:	b	3be0 <PyInit__multibytecodec@@Base+0xcec>
    3c48:	add	x8, sp, #0x70
    3c4c:	ldr	x9, [x8, #24]
    3c50:	ldr	x10, [x8, #48]
    3c54:	add	x10, x10, #0x20
    3c58:	subs	x9, x9, x10
    3c5c:	str	x9, [sp, #104]
    3c60:	ldr	x9, [sp, #104]
    3c64:	ldr	x8, [x8, #48]
    3c68:	ldr	x8, [x8, #16]
    3c6c:	cmp	x9, x8
    3c70:	b.eq	3c94 <PyInit__multibytecodec@@Base+0xda0>  // b.none
    3c74:	add	x8, sp, #0x70
    3c78:	add	x0, x8, #0x30
    3c7c:	ldr	x1, [sp, #104]
    3c80:	bl	29b0 <_PyBytes_Resize@plt>
    3c84:	mov	w9, #0xffffffff            	// #-1
    3c88:	cmp	w0, w9
    3c8c:	b.ne	3c94 <PyInit__multibytecodec@@Base+0xda0>  // b.any
    3c90:	b	3cc8 <PyInit__multibytecodec@@Base+0xdd4>
    3c94:	ldur	x8, [x29, #-40]
    3c98:	cbz	x8, 3ca8 <PyInit__multibytecodec@@Base+0xdb4>
    3c9c:	ldr	x8, [sp, #120]
    3ca0:	ldur	x9, [x29, #-40]
    3ca4:	str	x8, [x9]
    3ca8:	add	x8, sp, #0x70
    3cac:	ldr	x0, [x8, #40]
    3cb0:	str	x8, [sp, #24]
    3cb4:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3cb8:	ldr	x8, [sp, #24]
    3cbc:	ldr	x9, [x8, #48]
    3cc0:	stur	x9, [x29, #-8]
    3cc4:	b	3cec <PyInit__multibytecodec@@Base+0xdf8>
    3cc8:	add	x8, sp, #0x70
    3ccc:	ldr	x0, [x8, #40]
    3cd0:	str	x8, [sp, #16]
    3cd4:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3cd8:	ldr	x8, [sp, #16]
    3cdc:	ldr	x0, [x8, #48]
    3ce0:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    3ce4:	mov	x8, xzr
    3ce8:	stur	x8, [x29, #-8]
    3cec:	ldur	x0, [x29, #-8]
    3cf0:	ldp	x29, x30, [sp, #224]
    3cf4:	add	sp, sp, #0xf0
    3cf8:	ret
    3cfc:	sub	sp, sp, #0x20
    3d00:	stp	x29, x30, [sp, #16]
    3d04:	add	x29, sp, #0x10
    3d08:	str	x0, [sp, #8]
    3d0c:	ldr	x8, [sp, #8]
    3d10:	cbz	x8, 3d28 <PyInit__multibytecodec@@Base+0xe34>
    3d14:	ldr	x2, [sp, #8]
    3d18:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    3d1c:	add	x0, x0, #0xe
    3d20:	mov	w1, #0x21d                 	// #541
    3d24:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    3d28:	ldp	x29, x30, [sp, #16]
    3d2c:	add	sp, sp, #0x20
    3d30:	ret
    3d34:	sub	sp, sp, #0xf0
    3d38:	stp	x29, x30, [sp, #224]
    3d3c:	add	x29, sp, #0xe0
    3d40:	mov	x8, xzr
    3d44:	adrp	x9, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3d48:	add	x9, x9, #0xe7d
    3d4c:	stur	x0, [x29, #-16]
    3d50:	stur	x1, [x29, #-24]
    3d54:	stur	x2, [x29, #-32]
    3d58:	stur	x3, [x29, #-40]
    3d5c:	stur	x4, [x29, #-48]
    3d60:	stur	x8, [x29, #-56]
    3d64:	stur	x8, [x29, #-64]
    3d68:	ldur	x8, [x29, #-48]
    3d6c:	cmp	x8, #0x0
    3d70:	cset	w10, le
    3d74:	str	x9, [sp, #40]
    3d78:	tbnz	w10, #0, 3d94 <PyInit__multibytecodec@@Base+0xea0>
    3d7c:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3d80:	add	x8, x8, #0xf42
    3d84:	str	x8, [sp, #104]
    3d88:	ldur	x8, [x29, #-48]
    3d8c:	stur	x8, [x29, #-96]
    3d90:	b	3e64 <PyInit__multibytecodec@@Base+0xf70>
    3d94:	ldur	x8, [x29, #-48]
    3d98:	mov	x9, #0xfffffffffffffffd    	// #-3
    3d9c:	cmp	x8, x9
    3da0:	str	x8, [sp, #32]
    3da4:	b.eq	3e1c <PyInit__multibytecodec@@Base+0xf28>  // b.none
    3da8:	b	3dac <PyInit__multibytecodec@@Base+0xeb8>
    3dac:	mov	x8, #0xfffffffffffffffe    	// #-2
    3db0:	ldr	x9, [sp, #32]
    3db4:	cmp	x9, x8
    3db8:	b.eq	3e00 <PyInit__multibytecodec@@Base+0xf0c>  // b.none
    3dbc:	b	3dc0 <PyInit__multibytecodec@@Base+0xecc>
    3dc0:	mov	x8, #0xffffffffffffffff    	// #-1
    3dc4:	ldr	x9, [sp, #32]
    3dc8:	cmp	x9, x8
    3dcc:	cset	w10, eq  // eq = none
    3dd0:	eor	w10, w10, #0x1
    3dd4:	tbnz	w10, #0, 3e40 <PyInit__multibytecodec@@Base+0xf4c>
    3dd8:	b	3ddc <PyInit__multibytecodec@@Base+0xee8>
    3ddc:	ldur	x0, [x29, #-32]
    3de0:	mov	x1, #0xffffffffffffffff    	// #-1
    3de4:	bl	4374 <PyInit__multibytecodec@@Base+0x1480>
    3de8:	mov	w8, #0xffffffff            	// #-1
    3dec:	cmp	w0, w8
    3df0:	b.ne	3df8 <PyInit__multibytecodec@@Base+0xf04>  // b.any
    3df4:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    3df8:	stur	wzr, [x29, #-4]
    3dfc:	b	4364 <PyInit__multibytecodec@@Base+0x1470>
    3e00:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3e04:	add	x8, x8, #0xf5d
    3e08:	str	x8, [sp, #104]
    3e0c:	ldur	x8, [x29, #-32]
    3e10:	ldr	x8, [x8, #8]
    3e14:	stur	x8, [x29, #-96]
    3e18:	b	3e64 <PyInit__multibytecodec@@Base+0xf70>
    3e1c:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    3e20:	ldr	x8, [x8, #3984]
    3e24:	ldr	x0, [x8]
    3e28:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3e2c:	add	x1, x1, #0xf7b
    3e30:	bl	2ad0 <PyErr_SetString@plt>
    3e34:	mov	w9, #0xffffffff            	// #-1
    3e38:	stur	w9, [x29, #-4]
    3e3c:	b	4364 <PyInit__multibytecodec@@Base+0x1470>
    3e40:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    3e44:	ldr	x8, [x8, #3984]
    3e48:	ldr	x0, [x8]
    3e4c:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    3e50:	add	x1, x1, #0xf90
    3e54:	bl	2ad0 <PyErr_SetString@plt>
    3e58:	mov	w9, #0xffffffff            	// #-1
    3e5c:	stur	w9, [x29, #-4]
    3e60:	b	4364 <PyInit__multibytecodec@@Base+0x1470>
    3e64:	ldur	x8, [x29, #-40]
    3e68:	cmp	x8, #0x3
    3e6c:	b.ne	3ff8 <PyInit__multibytecodec@@Base+0x1104>  // b.any
    3e70:	mov	w0, #0x3f                  	// #63
    3e74:	bl	2d80 <PyUnicode_FromOrdinal@plt>
    3e78:	str	x0, [sp, #96]
    3e7c:	ldr	x8, [sp, #96]
    3e80:	cbnz	x8, 3e88 <PyInit__multibytecodec@@Base+0xf94>
    3e84:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    3e88:	ldr	x8, [sp, #96]
    3e8c:	ldr	w9, [x8, #32]
    3e90:	lsr	w9, w9, #2
    3e94:	and	w9, w9, #0x7
    3e98:	str	w9, [sp, #76]
    3e9c:	ldr	x8, [sp, #96]
    3ea0:	ldr	w9, [x8, #32]
    3ea4:	lsr	w9, w9, #5
    3ea8:	and	w9, w9, #0x1
    3eac:	cbz	w9, 3eec <PyInit__multibytecodec@@Base+0xff8>
    3eb0:	ldr	x8, [sp, #96]
    3eb4:	ldr	w9, [x8, #32]
    3eb8:	lsr	w9, w9, #6
    3ebc:	and	w9, w9, #0x1
    3ec0:	cbz	w9, 3ed4 <PyInit__multibytecodec@@Base+0xfe0>
    3ec4:	ldr	x8, [sp, #96]
    3ec8:	add	x8, x8, #0x30
    3ecc:	str	x8, [sp, #24]
    3ed0:	b	3ee0 <PyInit__multibytecodec@@Base+0xfec>
    3ed4:	ldr	x8, [sp, #96]
    3ed8:	add	x8, x8, #0x48
    3edc:	str	x8, [sp, #24]
    3ee0:	ldr	x8, [sp, #24]
    3ee4:	str	x8, [sp, #16]
    3ee8:	b	3ef8 <PyInit__multibytecodec@@Base+0x1004>
    3eec:	ldr	x8, [sp, #96]
    3ef0:	ldr	x8, [x8, #72]
    3ef4:	str	x8, [sp, #16]
    3ef8:	ldr	x8, [sp, #16]
    3efc:	str	x8, [sp, #64]
    3f00:	str	xzr, [sp, #80]
    3f04:	ldur	x8, [x29, #-32]
    3f08:	ldr	x8, [x8, #32]
    3f0c:	ldur	x9, [x29, #-32]
    3f10:	ldr	x9, [x9, #24]
    3f14:	subs	x8, x8, x9
    3f18:	str	x8, [sp, #56]
    3f1c:	ldur	x8, [x29, #-16]
    3f20:	ldr	x8, [x8, #24]
    3f24:	ldur	x0, [x29, #-24]
    3f28:	ldur	x9, [x29, #-16]
    3f2c:	ldr	x1, [x9, #8]
    3f30:	ldr	w2, [sp, #76]
    3f34:	ldr	x3, [sp, #64]
    3f38:	ldur	x9, [x29, #-32]
    3f3c:	add	x6, x9, #0x18
    3f40:	ldr	x7, [sp, #56]
    3f44:	add	x4, sp, #0x50
    3f48:	mov	x5, #0x1                   	// #1
    3f4c:	mov	x9, sp
    3f50:	str	wzr, [x9]
    3f54:	blr	x8
    3f58:	str	x0, [sp, #88]
    3f5c:	ldr	x8, [sp, #88]
    3f60:	mov	x9, #0xffffffffffffffff    	// #-1
    3f64:	cmp	x8, x9
    3f68:	b.ne	3f8c <PyInit__multibytecodec@@Base+0x1098>  // b.any
    3f6c:	ldur	x0, [x29, #-32]
    3f70:	mov	x1, #0xffffffffffffffff    	// #-1
    3f74:	bl	4374 <PyInit__multibytecodec@@Base+0x1480>
    3f78:	mov	w8, #0xffffffff            	// #-1
    3f7c:	cmp	w0, w8
    3f80:	b.ne	3f88 <PyInit__multibytecodec@@Base+0x1094>  // b.any
    3f84:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    3f88:	b	3f04 <PyInit__multibytecodec@@Base+0x1010>
    3f8c:	ldr	x2, [sp, #96]
    3f90:	ldr	x0, [sp, #40]
    3f94:	mov	w1, #0x108                 	// #264
    3f98:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    3f9c:	ldr	x8, [sp, #88]
    3fa0:	cbz	x8, 3ff8 <PyInit__multibytecodec@@Base+0x1104>
    3fa4:	ldur	x8, [x29, #-32]
    3fa8:	ldr	x8, [x8, #32]
    3fac:	ldur	x9, [x29, #-32]
    3fb0:	ldr	x9, [x9, #24]
    3fb4:	subs	x8, x8, x9
    3fb8:	mov	x9, #0x1                   	// #1
    3fbc:	cmp	x9, x8
    3fc0:	b.le	3fe0 <PyInit__multibytecodec@@Base+0x10ec>
    3fc4:	ldur	x0, [x29, #-32]
    3fc8:	mov	x1, #0x1                   	// #1
    3fcc:	bl	4374 <PyInit__multibytecodec@@Base+0x1480>
    3fd0:	mov	w8, #0xffffffff            	// #-1
    3fd4:	cmp	w0, w8
    3fd8:	b.ne	3fe0 <PyInit__multibytecodec@@Base+0x10ec>  // b.any
    3fdc:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    3fe0:	ldur	x8, [x29, #-32]
    3fe4:	ldr	x9, [x8, #24]
    3fe8:	add	x10, x9, #0x1
    3fec:	str	x10, [x8, #24]
    3ff0:	mov	w11, #0x3f                  	// #63
    3ff4:	strb	w11, [x9]
    3ff8:	ldur	x8, [x29, #-40]
    3ffc:	cmp	x8, #0x2
    4000:	b.eq	4010 <PyInit__multibytecodec@@Base+0x111c>  // b.none
    4004:	ldur	x8, [x29, #-40]
    4008:	cmp	x8, #0x3
    400c:	b.ne	402c <PyInit__multibytecodec@@Base+0x1138>  // b.any
    4010:	ldur	x8, [x29, #-96]
    4014:	ldur	x9, [x29, #-32]
    4018:	ldr	x10, [x9, #8]
    401c:	add	x8, x10, x8
    4020:	str	x8, [x9, #8]
    4024:	stur	wzr, [x29, #-4]
    4028:	b	4364 <PyInit__multibytecodec@@Base+0x1470>
    402c:	ldur	x8, [x29, #-32]
    4030:	ldr	x8, [x8, #8]
    4034:	stur	x8, [x29, #-104]
    4038:	ldur	x8, [x29, #-104]
    403c:	ldur	x9, [x29, #-96]
    4040:	add	x8, x8, x9
    4044:	str	x8, [sp, #112]
    4048:	ldur	x8, [x29, #-32]
    404c:	ldr	x8, [x8, #40]
    4050:	cbnz	x8, 40a4 <PyInit__multibytecodec@@Base+0x11b0>
    4054:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4058:	ldr	x8, [x8, #4024]
    405c:	ldr	x0, [x8]
    4060:	ldur	x8, [x29, #-16]
    4064:	ldr	x2, [x8]
    4068:	ldur	x8, [x29, #-32]
    406c:	ldr	x3, [x8]
    4070:	ldur	x4, [x29, #-104]
    4074:	ldr	x5, [sp, #112]
    4078:	ldr	x6, [sp, #104]
    407c:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    4080:	add	x1, x1, #0xfa6
    4084:	bl	2a70 <_PyObject_CallFunction_SizeT@plt>
    4088:	ldur	x8, [x29, #-32]
    408c:	str	x0, [x8, #40]
    4090:	ldur	x8, [x29, #-32]
    4094:	ldr	x8, [x8, #40]
    4098:	cbnz	x8, 40a0 <PyInit__multibytecodec@@Base+0x11ac>
    409c:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    40a0:	b	40e4 <PyInit__multibytecodec@@Base+0x11f0>
    40a4:	ldur	x8, [x29, #-32]
    40a8:	ldr	x0, [x8, #40]
    40ac:	ldur	x1, [x29, #-104]
    40b0:	bl	2a30 <PyUnicodeEncodeError_SetStart@plt>
    40b4:	cbnz	w0, 40e0 <PyInit__multibytecodec@@Base+0x11ec>
    40b8:	ldur	x8, [x29, #-32]
    40bc:	ldr	x0, [x8, #40]
    40c0:	ldr	x1, [sp, #112]
    40c4:	bl	2a80 <PyUnicodeEncodeError_SetEnd@plt>
    40c8:	cbnz	w0, 40e0 <PyInit__multibytecodec@@Base+0x11ec>
    40cc:	ldur	x8, [x29, #-32]
    40d0:	ldr	x0, [x8, #40]
    40d4:	ldr	x1, [sp, #104]
    40d8:	bl	29e0 <PyUnicodeEncodeError_SetReason@plt>
    40dc:	cbz	w0, 40e4 <PyInit__multibytecodec@@Base+0x11f0>
    40e0:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    40e4:	ldur	x8, [x29, #-40]
    40e8:	cmp	x8, #0x1
    40ec:	b.ne	4100 <PyInit__multibytecodec@@Base+0x120c>  // b.any
    40f0:	ldur	x8, [x29, #-32]
    40f4:	ldr	x0, [x8, #40]
    40f8:	bl	2bc0 <PyCodec_StrictErrors@plt>
    40fc:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    4100:	ldur	x0, [x29, #-40]
    4104:	ldur	x8, [x29, #-32]
    4108:	ldr	x1, [x8, #40]
    410c:	bl	4498 <PyInit__multibytecodec@@Base+0x15a4>
    4110:	stur	x0, [x29, #-56]
    4114:	ldur	x8, [x29, #-56]
    4118:	cbnz	x8, 4120 <PyInit__multibytecodec@@Base+0x122c>
    411c:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    4120:	ldur	x8, [x29, #-56]
    4124:	ldr	x8, [x8, #8]
    4128:	ldr	x8, [x8, #168]
    412c:	and	x8, x8, #0x4000000
    4130:	cbz	x8, 418c <PyInit__multibytecodec@@Base+0x1298>
    4134:	ldur	x8, [x29, #-56]
    4138:	ldr	x8, [x8, #16]
    413c:	cmp	x8, #0x2
    4140:	b.ne	418c <PyInit__multibytecodec@@Base+0x1298>  // b.any
    4144:	ldur	x8, [x29, #-56]
    4148:	ldr	x8, [x8, #24]
    414c:	stur	x8, [x29, #-72]
    4150:	ldr	x8, [x8, #8]
    4154:	ldr	x8, [x8, #168]
    4158:	and	x8, x8, #0x10000000
    415c:	cbnz	x8, 4174 <PyInit__multibytecodec@@Base+0x1280>
    4160:	ldur	x8, [x29, #-72]
    4164:	ldr	x8, [x8, #8]
    4168:	ldr	x8, [x8, #168]
    416c:	and	x8, x8, #0x8000000
    4170:	cbz	x8, 418c <PyInit__multibytecodec@@Base+0x1298>
    4174:	ldur	x8, [x29, #-56]
    4178:	ldr	x8, [x8, #32]
    417c:	ldr	x8, [x8, #8]
    4180:	ldr	x8, [x8, #168]
    4184:	and	x8, x8, #0x1000000
    4188:	cbnz	x8, 41a8 <PyInit__multibytecodec@@Base+0x12b4>
    418c:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4190:	ldr	x8, [x8, #4000]
    4194:	ldr	x0, [x8]
    4198:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    419c:	add	x1, x1, #0xfac
    41a0:	bl	2ad0 <PyErr_SetString@plt>
    41a4:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    41a8:	ldur	x8, [x29, #-72]
    41ac:	ldr	x8, [x8, #8]
    41b0:	ldr	x8, [x8, #168]
    41b4:	and	x8, x8, #0x10000000
    41b8:	cbz	x8, 41f0 <PyInit__multibytecodec@@Base+0x12fc>
    41bc:	ldur	x0, [x29, #-16]
    41c0:	ldur	x1, [x29, #-24]
    41c4:	ldur	x2, [x29, #-72]
    41c8:	add	x3, sp, #0x30
    41cc:	mov	x8, #0x1                   	// #1
    41d0:	mov	x4, x8
    41d4:	mov	w5, #0x1                   	// #1
    41d8:	bl	3950 <PyInit__multibytecodec@@Base+0xa5c>
    41dc:	stur	x0, [x29, #-64]
    41e0:	ldur	x8, [x29, #-64]
    41e4:	cbnz	x8, 41ec <PyInit__multibytecodec@@Base+0x12f8>
    41e8:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    41ec:	b	4200 <PyInit__multibytecodec@@Base+0x130c>
    41f0:	ldur	x0, [x29, #-72]
    41f4:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    41f8:	ldur	x8, [x29, #-72]
    41fc:	stur	x8, [x29, #-64]
    4200:	ldur	x8, [x29, #-64]
    4204:	ldr	x8, [x8, #16]
    4208:	stur	x8, [x29, #-80]
    420c:	ldur	x8, [x29, #-80]
    4210:	cmp	x8, #0x0
    4214:	cset	w9, le
    4218:	tbnz	w9, #0, 4294 <PyInit__multibytecodec@@Base+0x13a0>
    421c:	ldur	x8, [x29, #-80]
    4220:	cmp	x8, #0x0
    4224:	cset	w9, lt  // lt = tstop
    4228:	tbnz	w9, #0, 424c <PyInit__multibytecodec@@Base+0x1358>
    422c:	ldur	x8, [x29, #-80]
    4230:	ldur	x9, [x29, #-32]
    4234:	ldr	x9, [x9, #32]
    4238:	ldur	x10, [x29, #-32]
    423c:	ldr	x10, [x10, #24]
    4240:	subs	x9, x9, x10
    4244:	cmp	x8, x9
    4248:	b.le	4268 <PyInit__multibytecodec@@Base+0x1374>
    424c:	ldur	x0, [x29, #-32]
    4250:	ldur	x1, [x29, #-80]
    4254:	bl	4374 <PyInit__multibytecodec@@Base+0x1480>
    4258:	mov	w8, #0xffffffff            	// #-1
    425c:	cmp	w0, w8
    4260:	b.ne	4268 <PyInit__multibytecodec@@Base+0x1374>  // b.any
    4264:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    4268:	ldur	x8, [x29, #-32]
    426c:	ldr	x0, [x8, #24]
    4270:	ldur	x8, [x29, #-64]
    4274:	add	x1, x8, #0x20
    4278:	ldur	x2, [x29, #-80]
    427c:	bl	2960 <memcpy@plt>
    4280:	ldur	x8, [x29, #-80]
    4284:	ldur	x9, [x29, #-32]
    4288:	ldr	x10, [x9, #24]
    428c:	add	x8, x10, x8
    4290:	str	x8, [x9, #24]
    4294:	ldur	x8, [x29, #-56]
    4298:	ldr	x0, [x8, #32]
    429c:	bl	2b50 <PyLong_AsSsize_t@plt>
    42a0:	stur	x0, [x29, #-88]
    42a4:	ldur	x8, [x29, #-88]
    42a8:	cmp	x8, #0x0
    42ac:	cset	w9, ge  // ge = tcont
    42b0:	tbnz	w9, #0, 42d0 <PyInit__multibytecodec@@Base+0x13dc>
    42b4:	bl	2bf0 <PyErr_Occurred@plt>
    42b8:	cbnz	x0, 42d0 <PyInit__multibytecodec@@Base+0x13dc>
    42bc:	ldur	x8, [x29, #-32]
    42c0:	ldr	x8, [x8, #16]
    42c4:	ldur	x9, [x29, #-88]
    42c8:	add	x8, x9, x8
    42cc:	stur	x8, [x29, #-88]
    42d0:	ldur	x8, [x29, #-88]
    42d4:	cmp	x8, #0x0
    42d8:	cset	w9, lt  // lt = tstop
    42dc:	tbnz	w9, #0, 42f4 <PyInit__multibytecodec@@Base+0x1400>
    42e0:	ldur	x8, [x29, #-88]
    42e4:	ldur	x9, [x29, #-32]
    42e8:	ldr	x9, [x9, #16]
    42ec:	cmp	x8, x9
    42f0:	b.le	4318 <PyInit__multibytecodec@@Base+0x1424>
    42f4:	bl	2b90 <PyErr_Clear@plt>
    42f8:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    42fc:	ldr	x8, [x8, #4032]
    4300:	ldr	x0, [x8]
    4304:	ldur	x2, [x29, #-88]
    4308:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    430c:	add	x1, x1, #0xfe0
    4310:	bl	2d50 <PyErr_Format@plt>
    4314:	b	434c <PyInit__multibytecodec@@Base+0x1458>
    4318:	ldur	x8, [x29, #-88]
    431c:	ldur	x9, [x29, #-32]
    4320:	str	x8, [x9, #8]
    4324:	ldur	x2, [x29, #-56]
    4328:	ldr	x0, [sp, #40]
    432c:	mov	w1, #0x15a                 	// #346
    4330:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4334:	ldur	x2, [x29, #-64]
    4338:	ldr	x0, [sp, #40]
    433c:	mov	w1, #0x15b                 	// #347
    4340:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4344:	stur	wzr, [x29, #-4]
    4348:	b	4364 <PyInit__multibytecodec@@Base+0x1470>
    434c:	ldur	x0, [x29, #-56]
    4350:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    4354:	ldur	x0, [x29, #-64]
    4358:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    435c:	mov	w8, #0xffffffff            	// #-1
    4360:	stur	w8, [x29, #-4]
    4364:	ldur	w0, [x29, #-4]
    4368:	ldp	x29, x30, [sp, #224]
    436c:	add	sp, sp, #0xf0
    4370:	ret
    4374:	sub	sp, sp, #0x50
    4378:	stp	x29, x30, [sp, #64]
    437c:	add	x29, sp, #0x40
    4380:	stur	x0, [x29, #-16]
    4384:	stur	x1, [x29, #-24]
    4388:	ldur	x8, [x29, #-16]
    438c:	ldr	x8, [x8, #24]
    4390:	ldur	x9, [x29, #-16]
    4394:	ldr	x9, [x9, #48]
    4398:	add	x9, x9, #0x20
    439c:	subs	x8, x8, x9
    43a0:	str	x8, [sp, #32]
    43a4:	ldur	x8, [x29, #-16]
    43a8:	ldr	x8, [x8, #48]
    43ac:	ldr	x8, [x8, #16]
    43b0:	str	x8, [sp, #24]
    43b4:	ldur	x8, [x29, #-24]
    43b8:	ldr	x9, [sp, #24]
    43bc:	asr	x9, x9, #1
    43c0:	cmp	x8, x9
    43c4:	b.ge	43dc <PyInit__multibytecodec@@Base+0x14e8>  // b.tcont
    43c8:	ldr	x8, [sp, #24]
    43cc:	asr	x8, x8, #1
    43d0:	orr	x8, x8, #0x1
    43d4:	str	x8, [sp, #8]
    43d8:	b	43e4 <PyInit__multibytecodec@@Base+0x14f0>
    43dc:	ldur	x8, [x29, #-24]
    43e0:	str	x8, [sp, #8]
    43e4:	ldr	x8, [sp, #8]
    43e8:	str	x8, [sp, #16]
    43ec:	ldr	x8, [sp, #24]
    43f0:	ldr	x9, [sp, #16]
    43f4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    43f8:	subs	x9, x10, x9
    43fc:	cmp	x8, x9
    4400:	b.le	4414 <PyInit__multibytecodec@@Base+0x1520>
    4404:	bl	2a60 <PyErr_NoMemory@plt>
    4408:	mov	w8, #0xffffffff            	// #-1
    440c:	stur	w8, [x29, #-4]
    4410:	b	4488 <PyInit__multibytecodec@@Base+0x1594>
    4414:	ldur	x8, [x29, #-16]
    4418:	add	x0, x8, #0x30
    441c:	ldr	x8, [sp, #24]
    4420:	ldr	x9, [sp, #16]
    4424:	add	x1, x8, x9
    4428:	bl	29b0 <_PyBytes_Resize@plt>
    442c:	mov	w10, #0xffffffff            	// #-1
    4430:	cmp	w0, w10
    4434:	b.ne	4444 <PyInit__multibytecodec@@Base+0x1550>  // b.any
    4438:	mov	w8, #0xffffffff            	// #-1
    443c:	stur	w8, [x29, #-4]
    4440:	b	4488 <PyInit__multibytecodec@@Base+0x1594>
    4444:	ldur	x8, [x29, #-16]
    4448:	ldr	x8, [x8, #48]
    444c:	add	x8, x8, #0x20
    4450:	ldr	x9, [sp, #32]
    4454:	add	x8, x8, x9
    4458:	ldur	x9, [x29, #-16]
    445c:	str	x8, [x9, #24]
    4460:	ldur	x8, [x29, #-16]
    4464:	ldr	x8, [x8, #48]
    4468:	add	x8, x8, #0x20
    446c:	ldur	x9, [x29, #-16]
    4470:	ldr	x9, [x9, #48]
    4474:	ldr	x9, [x9, #16]
    4478:	add	x8, x8, x9
    447c:	ldur	x9, [x29, #-16]
    4480:	str	x8, [x9, #32]
    4484:	stur	wzr, [x29, #-4]
    4488:	ldur	w0, [x29, #-4]
    448c:	ldp	x29, x30, [sp, #64]
    4490:	add	sp, sp, #0x50
    4494:	ret
    4498:	sub	sp, sp, #0x50
    449c:	stp	x29, x30, [sp, #64]
    44a0:	add	x29, sp, #0x40
    44a4:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    44a8:	add	x8, x8, #0xe7d
    44ac:	stur	x0, [x29, #-16]
    44b0:	stur	x1, [x29, #-24]
    44b4:	ldur	x0, [x29, #-16]
    44b8:	str	x8, [sp]
    44bc:	bl	2cc0 <PyUnicode_AsUTF8@plt>
    44c0:	str	x0, [sp, #8]
    44c4:	ldr	x8, [sp, #8]
    44c8:	cbnz	x8, 44d8 <PyInit__multibytecodec@@Base+0x15e4>
    44cc:	mov	x8, xzr
    44d0:	stur	x8, [x29, #-8]
    44d4:	b	4574 <PyInit__multibytecodec@@Base+0x1680>
    44d8:	ldr	x0, [sp, #8]
    44dc:	bl	2df0 <PyCodec_LookupError@plt>
    44e0:	str	x0, [sp, #24]
    44e4:	ldr	x8, [sp, #24]
    44e8:	cbnz	x8, 44f8 <PyInit__multibytecodec@@Base+0x1604>
    44ec:	mov	x8, xzr
    44f0:	stur	x8, [x29, #-8]
    44f4:	b	4574 <PyInit__multibytecodec@@Base+0x1680>
    44f8:	mov	x0, #0x1                   	// #1
    44fc:	bl	2bd0 <PyTuple_New@plt>
    4500:	str	x0, [sp, #32]
    4504:	ldr	x8, [sp, #32]
    4508:	cbnz	x8, 4528 <PyInit__multibytecodec@@Base+0x1634>
    450c:	ldr	x2, [sp, #24]
    4510:	ldr	x0, [sp]
    4514:	mov	w1, #0x61                  	// #97
    4518:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    451c:	mov	x8, xzr
    4520:	stur	x8, [x29, #-8]
    4524:	b	4574 <PyInit__multibytecodec@@Base+0x1680>
    4528:	ldur	x8, [x29, #-24]
    452c:	ldr	x9, [sp, #32]
    4530:	str	x8, [x9, #24]
    4534:	ldur	x0, [x29, #-24]
    4538:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    453c:	ldr	x0, [sp, #24]
    4540:	ldr	x1, [sp, #32]
    4544:	bl	2c20 <PyObject_CallObject@plt>
    4548:	str	x0, [sp, #16]
    454c:	ldr	x2, [sp, #32]
    4550:	ldr	x0, [sp]
    4554:	mov	w1, #0x69                  	// #105
    4558:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    455c:	ldr	x2, [sp, #24]
    4560:	ldr	x0, [sp]
    4564:	mov	w1, #0x6a                  	// #106
    4568:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    456c:	ldr	x8, [sp, #16]
    4570:	stur	x8, [x29, #-8]
    4574:	ldur	x0, [x29, #-8]
    4578:	ldp	x29, x30, [sp, #64]
    457c:	add	sp, sp, #0x50
    4580:	ret
    4584:	sub	sp, sp, #0x50
    4588:	stp	x29, x30, [sp, #64]
    458c:	add	x29, sp, #0x40
    4590:	mov	x8, xzr
    4594:	stur	x0, [x29, #-16]
    4598:	str	x8, [sp, #8]
    459c:	ldur	x8, [x29, #-16]
    45a0:	ldr	x8, [x8, #40]
    45a4:	cbz	x8, 462c <PyInit__multibytecodec@@Base+0x1738>
    45a8:	ldur	x8, [x29, #-16]
    45ac:	ldr	x0, [x8, #40]
    45b0:	mov	x1, sp
    45b4:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    45b8:	str	x0, [sp, #8]
    45bc:	ldr	x8, [sp, #8]
    45c0:	cbnz	x8, 45d0 <PyInit__multibytecodec@@Base+0x16dc>
    45c4:	mov	x8, xzr
    45c8:	stur	x8, [x29, #-8]
    45cc:	b	4678 <PyInit__multibytecodec@@Base+0x1784>
    45d0:	ldr	x8, [sp]
    45d4:	cmp	x8, #0x8
    45d8:	b.le	4600 <PyInit__multibytecodec@@Base+0x170c>
    45dc:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    45e0:	ldr	x8, [x8, #4048]
    45e4:	ldr	x0, [x8]
    45e8:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    45ec:	add	x1, x1, #0x21
    45f0:	bl	2ad0 <PyErr_SetString@plt>
    45f4:	mov	x8, xzr
    45f8:	stur	x8, [x29, #-8]
    45fc:	b	4678 <PyInit__multibytecodec@@Base+0x1784>
    4600:	ldr	x8, [sp]
    4604:	add	x9, sp, #0x1f
    4608:	strb	w8, [sp, #31]
    460c:	add	x0, x9, #0x1
    4610:	ldr	x1, [sp, #8]
    4614:	ldr	x2, [sp]
    4618:	bl	2960 <memcpy@plt>
    461c:	ldr	x9, [sp]
    4620:	add	x9, x9, #0x1
    4624:	str	x9, [sp, #16]
    4628:	b	463c <PyInit__multibytecodec@@Base+0x1748>
    462c:	mov	w8, #0x0                   	// #0
    4630:	strb	w8, [sp, #31]
    4634:	mov	x9, #0x1                   	// #1
    4638:	str	x9, [sp, #16]
    463c:	ldr	x8, [sp, #16]
    4640:	add	x9, sp, #0x1f
    4644:	ldur	x10, [x29, #-16]
    4648:	ldr	x10, [x10, #24]
    464c:	str	x10, [x9, x8]
    4650:	ldr	x8, [sp, #16]
    4654:	add	x8, x8, #0x8
    4658:	str	x8, [sp, #16]
    465c:	ldr	x1, [sp, #16]
    4660:	mov	x0, x9
    4664:	mov	w2, #0x1                   	// #1
    4668:	mov	w11, wzr
    466c:	mov	w3, w11
    4670:	bl	2ae0 <_PyLong_FromByteArray@plt>
    4674:	stur	x0, [x29, #-8]
    4678:	ldur	x0, [x29, #-8]
    467c:	ldp	x29, x30, [sp, #64]
    4680:	add	sp, sp, #0x50
    4684:	ret
    4688:	sub	sp, sp, #0x60
    468c:	stp	x29, x30, [sp, #80]
    4690:	add	x29, sp, #0x50
    4694:	mov	x8, xzr
    4698:	mov	x2, #0x11                  	// #17
    469c:	mov	w3, #0x1                   	// #1
    46a0:	mov	w9, wzr
    46a4:	add	x10, sp, #0x1f
    46a8:	stur	x0, [x29, #-16]
    46ac:	stur	x1, [x29, #-24]
    46b0:	stur	x8, [x29, #-32]
    46b4:	ldur	x0, [x29, #-24]
    46b8:	mov	x1, x10
    46bc:	mov	w4, w9
    46c0:	bl	2d30 <_PyLong_AsByteArray@plt>
    46c4:	cmp	w0, #0x0
    46c8:	cset	w9, ge  // ge = tcont
    46cc:	tbnz	w9, #0, 46d4 <PyInit__multibytecodec@@Base+0x17e0>
    46d0:	b	47a8 <PyInit__multibytecodec@@Base+0x18b4>
    46d4:	ldrb	w8, [sp, #31]
    46d8:	cmp	w8, #0x8
    46dc:	b.le	4704 <PyInit__multibytecodec@@Base+0x1810>
    46e0:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    46e4:	ldr	x8, [x8, #4048]
    46e8:	ldr	x0, [x8]
    46ec:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    46f0:	add	x1, x1, #0x21
    46f4:	bl	2ad0 <PyErr_SetString@plt>
    46f8:	mov	x8, xzr
    46fc:	stur	x8, [x29, #-8]
    4700:	b	47b8 <PyInit__multibytecodec@@Base+0x18c4>
    4704:	add	x8, sp, #0x1f
    4708:	add	x0, x8, #0x1
    470c:	ldrb	w9, [sp, #31]
    4710:	mov	w1, w9
    4714:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4718:	add	x2, x2, #0x3e
    471c:	bl	2c60 <PyUnicode_DecodeUTF8@plt>
    4720:	stur	x0, [x29, #-32]
    4724:	ldur	x8, [x29, #-32]
    4728:	cbnz	x8, 4730 <PyInit__multibytecodec@@Base+0x183c>
    472c:	b	47a8 <PyInit__multibytecodec@@Base+0x18b4>
    4730:	ldur	x8, [x29, #-16]
    4734:	ldr	x8, [x8, #40]
    4738:	str	x8, [sp, #16]
    473c:	ldr	x8, [sp, #16]
    4740:	cbz	x8, 4764 <PyInit__multibytecodec@@Base+0x1870>
    4744:	ldur	x8, [x29, #-16]
    4748:	mov	x9, xzr
    474c:	str	x9, [x8, #40]
    4750:	ldr	x2, [sp, #16]
    4754:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    4758:	add	x0, x0, #0xe7d
    475c:	mov	w1, #0x3d1                 	// #977
    4760:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4764:	ldur	x8, [x29, #-32]
    4768:	ldur	x9, [x29, #-16]
    476c:	str	x8, [x9, #40]
    4770:	ldur	x8, [x29, #-16]
    4774:	add	x9, sp, #0x1f
    4778:	add	x9, x9, #0x1
    477c:	ldrb	w10, [sp, #31]
    4780:	ldr	x9, [x9, w10, sxtw]
    4784:	str	x9, [x8, #24]
    4788:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    478c:	ldr	x8, [x8, #4016]
    4790:	mov	x0, x8
    4794:	str	x8, [sp, #8]
    4798:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    479c:	ldr	x8, [sp, #8]
    47a0:	stur	x8, [x29, #-8]
    47a4:	b	47b8 <PyInit__multibytecodec@@Base+0x18c4>
    47a8:	ldur	x0, [x29, #-32]
    47ac:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    47b0:	mov	x8, xzr
    47b4:	stur	x8, [x29, #-8]
    47b8:	ldur	x0, [x29, #-8]
    47bc:	ldp	x29, x30, [sp, #80]
    47c0:	add	sp, sp, #0x60
    47c4:	ret
    47c8:	sub	sp, sp, #0x50
    47cc:	stp	x29, x30, [sp, #64]
    47d0:	add	x29, sp, #0x40
    47d4:	stur	x0, [x29, #-16]
    47d8:	ldur	x8, [x29, #-16]
    47dc:	ldr	x8, [x8, #16]
    47e0:	ldr	x8, [x8, #40]
    47e4:	cbz	x8, 4834 <PyInit__multibytecodec@@Base+0x1940>
    47e8:	add	x2, sp, #0x20
    47ec:	sub	x8, x29, #0x14
    47f0:	str	x8, [sp, #32]
    47f4:	ldur	x8, [x29, #-16]
    47f8:	ldr	x8, [x8, #16]
    47fc:	ldr	x8, [x8, #40]
    4800:	ldur	x9, [x29, #-16]
    4804:	add	x0, x9, #0x18
    4808:	ldur	x9, [x29, #-16]
    480c:	ldr	x9, [x9, #16]
    4810:	ldr	x1, [x9, #8]
    4814:	mov	x3, #0x4                   	// #4
    4818:	blr	x8
    481c:	str	x0, [sp, #24]
    4820:	ldr	x8, [sp, #24]
    4824:	cbz	x8, 4834 <PyInit__multibytecodec@@Base+0x1940>
    4828:	mov	x8, xzr
    482c:	stur	x8, [x29, #-8]
    4830:	b	4884 <PyInit__multibytecodec@@Base+0x1990>
    4834:	ldur	x8, [x29, #-16]
    4838:	ldr	x8, [x8, #40]
    483c:	str	x8, [sp, #16]
    4840:	ldr	x8, [sp, #16]
    4844:	cbz	x8, 4868 <PyInit__multibytecodec@@Base+0x1974>
    4848:	ldur	x8, [x29, #-16]
    484c:	mov	x9, xzr
    4850:	str	x9, [x8, #40]
    4854:	ldr	x2, [sp, #16]
    4858:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    485c:	add	x0, x0, #0xe7d
    4860:	mov	w1, #0x3ef                 	// #1007
    4864:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4868:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    486c:	ldr	x8, [x8, #4016]
    4870:	mov	x0, x8
    4874:	str	x8, [sp, #8]
    4878:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    487c:	ldr	x8, [sp, #8]
    4880:	stur	x8, [x29, #-8]
    4884:	ldur	x0, [x29, #-8]
    4888:	ldp	x29, x30, [sp, #64]
    488c:	add	sp, sp, #0x50
    4890:	ret
    4894:	sub	sp, sp, #0x30
    4898:	stp	x29, x30, [sp, #32]
    489c:	add	x29, sp, #0x20
    48a0:	str	x0, [sp, #16]
    48a4:	str	x1, [sp, #8]
    48a8:	ldr	x8, [sp, #16]
    48ac:	ldr	x8, [x8, #32]
    48b0:	cmp	x8, #0x1
    48b4:	b.ne	48c8 <PyInit__multibytecodec@@Base+0x19d4>  // b.any
    48b8:	adrp	x8, 8000 <PyInit__multibytecodec@@Base+0x510c>
    48bc:	add	x8, x8, #0x3e
    48c0:	str	x8, [sp]
    48c4:	b	4924 <PyInit__multibytecodec@@Base+0x1a30>
    48c8:	ldr	x8, [sp, #16]
    48cc:	ldr	x8, [x8, #32]
    48d0:	cmp	x8, #0x2
    48d4:	b.ne	48e8 <PyInit__multibytecodec@@Base+0x19f4>  // b.any
    48d8:	adrp	x8, 8000 <PyInit__multibytecodec@@Base+0x510c>
    48dc:	add	x8, x8, #0x59
    48e0:	str	x8, [sp]
    48e4:	b	4924 <PyInit__multibytecodec@@Base+0x1a30>
    48e8:	ldr	x8, [sp, #16]
    48ec:	ldr	x8, [x8, #32]
    48f0:	cmp	x8, #0x3
    48f4:	b.ne	4908 <PyInit__multibytecodec@@Base+0x1a14>  // b.any
    48f8:	adrp	x8, 8000 <PyInit__multibytecodec@@Base+0x510c>
    48fc:	add	x8, x8, #0x60
    4900:	str	x8, [sp]
    4904:	b	4924 <PyInit__multibytecodec@@Base+0x1a30>
    4908:	ldr	x8, [sp, #16]
    490c:	ldr	x0, [x8, #32]
    4910:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    4914:	ldr	x8, [sp, #16]
    4918:	ldr	x8, [x8, #32]
    491c:	stur	x8, [x29, #-8]
    4920:	b	4930 <PyInit__multibytecodec@@Base+0x1a3c>
    4924:	ldr	x0, [sp]
    4928:	bl	2ce0 <PyUnicode_FromString@plt>
    492c:	stur	x0, [x29, #-8]
    4930:	ldur	x0, [x29, #-8]
    4934:	ldp	x29, x30, [sp, #32]
    4938:	add	sp, sp, #0x30
    493c:	ret
    4940:	sub	sp, sp, #0x40
    4944:	stp	x29, x30, [sp, #48]
    4948:	add	x29, sp, #0x30
    494c:	stur	x0, [x29, #-16]
    4950:	str	x1, [sp, #24]
    4954:	str	x2, [sp, #16]
    4958:	ldr	x8, [sp, #24]
    495c:	cbnz	x8, 4984 <PyInit__multibytecodec@@Base+0x1a90>
    4960:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4964:	ldr	x8, [x8, #4056]
    4968:	ldr	x0, [x8]
    496c:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4970:	add	x1, x1, #0x68
    4974:	bl	2ad0 <PyErr_SetString@plt>
    4978:	mov	w9, #0xffffffff            	// #-1
    497c:	stur	w9, [x29, #-4]
    4980:	b	4a54 <PyInit__multibytecodec@@Base+0x1b60>
    4984:	ldr	x8, [sp, #24]
    4988:	ldr	x8, [x8, #8]
    498c:	ldr	x8, [x8, #168]
    4990:	and	x8, x8, #0x10000000
    4994:	cbnz	x8, 49bc <PyInit__multibytecodec@@Base+0x1ac8>
    4998:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    499c:	ldr	x8, [x8, #4000]
    49a0:	ldr	x0, [x8]
    49a4:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    49a8:	add	x1, x1, #0x80
    49ac:	bl	2ad0 <PyErr_SetString@plt>
    49b0:	mov	w9, #0xffffffff            	// #-1
    49b4:	stur	w9, [x29, #-4]
    49b8:	b	4a54 <PyInit__multibytecodec@@Base+0x1b60>
    49bc:	ldr	x0, [sp, #24]
    49c0:	bl	2cc0 <PyUnicode_AsUTF8@plt>
    49c4:	str	x0, [sp]
    49c8:	ldr	x8, [sp]
    49cc:	cbnz	x8, 49dc <PyInit__multibytecodec@@Base+0x1ae8>
    49d0:	mov	w8, #0xffffffff            	// #-1
    49d4:	stur	w8, [x29, #-4]
    49d8:	b	4a54 <PyInit__multibytecodec@@Base+0x1b60>
    49dc:	ldr	x0, [sp]
    49e0:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    49e4:	str	x0, [sp, #8]
    49e8:	ldr	x8, [sp, #8]
    49ec:	cbnz	x8, 49fc <PyInit__multibytecodec@@Base+0x1b08>
    49f0:	mov	w8, #0xffffffff            	// #-1
    49f4:	stur	w8, [x29, #-4]
    49f8:	b	4a54 <PyInit__multibytecodec@@Base+0x1b60>
    49fc:	ldur	x8, [x29, #-16]
    4a00:	ldr	x8, [x8, #32]
    4a04:	cbz	x8, 4a44 <PyInit__multibytecodec@@Base+0x1b50>
    4a08:	ldur	x8, [x29, #-16]
    4a0c:	ldr	x8, [x8, #32]
    4a10:	cmp	x8, #0x1
    4a14:	b.cc	4a2c <PyInit__multibytecodec@@Base+0x1b38>  // b.lo, b.ul, b.last
    4a18:	ldur	x8, [x29, #-16]
    4a1c:	ldr	x8, [x8, #32]
    4a20:	mov	x9, #0x3                   	// #3
    4a24:	cmp	x9, x8
    4a28:	b.cs	4a44 <PyInit__multibytecodec@@Base+0x1b50>  // b.hs, b.nlast
    4a2c:	ldur	x8, [x29, #-16]
    4a30:	ldr	x2, [x8, #32]
    4a34:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    4a38:	add	x0, x0, #0xe7d
    4a3c:	mov	w1, #0x99                  	// #153
    4a40:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4a44:	ldr	x8, [sp, #8]
    4a48:	ldur	x9, [x29, #-16]
    4a4c:	str	x8, [x9, #32]
    4a50:	stur	wzr, [x29, #-4]
    4a54:	ldur	w0, [x29, #-4]
    4a58:	ldp	x29, x30, [sp, #48]
    4a5c:	add	sp, sp, #0x40
    4a60:	ret
    4a64:	sub	sp, sp, #0x20
    4a68:	stp	x29, x30, [sp, #16]
    4a6c:	add	x29, sp, #0x10
    4a70:	str	x0, [sp]
    4a74:	ldr	x8, [sp]
    4a78:	cbz	x8, 4a90 <PyInit__multibytecodec@@Base+0x1b9c>
    4a7c:	ldr	x0, [sp]
    4a80:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4a84:	add	x1, x1, #0x3e
    4a88:	bl	2c30 <strcmp@plt>
    4a8c:	cbnz	w0, 4a9c <PyInit__multibytecodec@@Base+0x1ba8>
    4a90:	mov	x8, #0x1                   	// #1
    4a94:	str	x8, [sp, #8]
    4a98:	b	4ae8 <PyInit__multibytecodec@@Base+0x1bf4>
    4a9c:	ldr	x0, [sp]
    4aa0:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4aa4:	add	x1, x1, #0x59
    4aa8:	bl	2c30 <strcmp@plt>
    4aac:	cbnz	w0, 4abc <PyInit__multibytecodec@@Base+0x1bc8>
    4ab0:	mov	x8, #0x2                   	// #2
    4ab4:	str	x8, [sp, #8]
    4ab8:	b	4ae8 <PyInit__multibytecodec@@Base+0x1bf4>
    4abc:	ldr	x0, [sp]
    4ac0:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4ac4:	add	x1, x1, #0x60
    4ac8:	bl	2c30 <strcmp@plt>
    4acc:	cbnz	w0, 4adc <PyInit__multibytecodec@@Base+0x1be8>
    4ad0:	mov	x8, #0x3                   	// #3
    4ad4:	str	x8, [sp, #8]
    4ad8:	b	4ae8 <PyInit__multibytecodec@@Base+0x1bf4>
    4adc:	ldr	x0, [sp]
    4ae0:	bl	2ce0 <PyUnicode_FromString@plt>
    4ae4:	str	x0, [sp, #8]
    4ae8:	ldr	x0, [sp, #8]
    4aec:	ldp	x29, x30, [sp, #16]
    4af0:	add	sp, sp, #0x20
    4af4:	ret
    4af8:	sub	sp, sp, #0x20
    4afc:	stp	x29, x30, [sp, #16]
    4b00:	add	x29, sp, #0x10
    4b04:	str	x0, [sp, #8]
    4b08:	ldr	x0, [sp, #8]
    4b0c:	bl	2e00 <PyObject_GC_UnTrack@plt>
    4b10:	ldr	x8, [sp, #8]
    4b14:	ldr	x8, [x8, #32]
    4b18:	cbz	x8, 4b58 <PyInit__multibytecodec@@Base+0x1c64>
    4b1c:	ldr	x8, [sp, #8]
    4b20:	ldr	x8, [x8, #32]
    4b24:	cmp	x8, #0x1
    4b28:	b.cc	4b40 <PyInit__multibytecodec@@Base+0x1c4c>  // b.lo, b.ul, b.last
    4b2c:	ldr	x8, [sp, #8]
    4b30:	ldr	x8, [x8, #32]
    4b34:	mov	x9, #0x3                   	// #3
    4b38:	cmp	x9, x8
    4b3c:	b.cs	4b58 <PyInit__multibytecodec@@Base+0x1c64>  // b.hs, b.nlast
    4b40:	ldr	x8, [sp, #8]
    4b44:	ldr	x2, [x8, #32]
    4b48:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    4b4c:	add	x0, x0, #0xe7d
    4b50:	mov	w1, #0x563                 	// #1379
    4b54:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4b58:	ldr	x8, [sp, #8]
    4b5c:	ldr	x8, [x8, #8]
    4b60:	ldr	x8, [x8, #320]
    4b64:	ldr	x0, [sp, #8]
    4b68:	blr	x8
    4b6c:	ldp	x29, x30, [sp, #16]
    4b70:	add	sp, sp, #0x20
    4b74:	ret
    4b78:	sub	sp, sp, #0x40
    4b7c:	stp	x29, x30, [sp, #48]
    4b80:	add	x29, sp, #0x30
    4b84:	stur	x0, [x29, #-16]
    4b88:	str	x1, [sp, #24]
    4b8c:	str	x2, [sp, #16]
    4b90:	ldur	x8, [x29, #-16]
    4b94:	ldr	x8, [x8, #32]
    4b98:	cmp	x8, #0x1
    4b9c:	b.cc	4bb4 <PyInit__multibytecodec@@Base+0x1cc0>  // b.lo, b.ul, b.last
    4ba0:	ldur	x8, [x29, #-16]
    4ba4:	ldr	x8, [x8, #32]
    4ba8:	mov	x9, #0x3                   	// #3
    4bac:	cmp	x9, x8
    4bb0:	b.cs	4bec <PyInit__multibytecodec@@Base+0x1cf8>  // b.hs, b.nlast
    4bb4:	ldur	x8, [x29, #-16]
    4bb8:	ldr	x8, [x8, #32]
    4bbc:	cbz	x8, 4bec <PyInit__multibytecodec@@Base+0x1cf8>
    4bc0:	ldr	x8, [sp, #24]
    4bc4:	ldur	x9, [x29, #-16]
    4bc8:	ldr	x0, [x9, #32]
    4bcc:	ldr	x1, [sp, #16]
    4bd0:	blr	x8
    4bd4:	str	w0, [sp, #12]
    4bd8:	ldr	w10, [sp, #12]
    4bdc:	cbz	w10, 4bec <PyInit__multibytecodec@@Base+0x1cf8>
    4be0:	ldr	w8, [sp, #12]
    4be4:	stur	w8, [x29, #-4]
    4be8:	b	4bf0 <PyInit__multibytecodec@@Base+0x1cfc>
    4bec:	stur	wzr, [x29, #-4]
    4bf0:	ldur	w0, [x29, #-4]
    4bf4:	ldp	x29, x30, [sp, #48]
    4bf8:	add	sp, sp, #0x40
    4bfc:	ret
    4c00:	sub	sp, sp, #0x20
    4c04:	mov	w8, wzr
    4c08:	str	x0, [sp, #24]
    4c0c:	str	x1, [sp, #16]
    4c10:	str	x2, [sp, #8]
    4c14:	mov	w0, w8
    4c18:	add	sp, sp, #0x20
    4c1c:	ret
    4c20:	sub	sp, sp, #0x50
    4c24:	stp	x29, x30, [sp, #64]
    4c28:	add	x29, sp, #0x40
    4c2c:	mov	x8, xzr
    4c30:	adrp	x9, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4c34:	add	x9, x9, #0x16b
    4c38:	adrp	x3, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    4c3c:	add	x3, x3, #0xc20
    4c40:	add	x4, sp, #0x8
    4c44:	stur	x0, [x29, #-16]
    4c48:	stur	x1, [x29, #-24]
    4c4c:	str	x2, [sp, #32]
    4c50:	str	x8, [sp, #16]
    4c54:	str	x8, [sp, #8]
    4c58:	ldur	x0, [x29, #-24]
    4c5c:	ldr	x1, [sp, #32]
    4c60:	mov	x2, x9
    4c64:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    4c68:	cbnz	w0, 4c78 <PyInit__multibytecodec@@Base+0x1d84>
    4c6c:	mov	x8, xzr
    4c70:	stur	x8, [x29, #-8]
    4c74:	b	4da8 <PyInit__multibytecodec@@Base+0x1eb4>
    4c78:	ldur	x8, [x29, #-16]
    4c7c:	ldr	x8, [x8, #304]
    4c80:	ldur	x0, [x29, #-16]
    4c84:	mov	x9, xzr
    4c88:	mov	x1, x9
    4c8c:	blr	x8
    4c90:	str	x0, [sp, #24]
    4c94:	ldr	x8, [sp, #24]
    4c98:	cbnz	x8, 4ca8 <PyInit__multibytecodec@@Base+0x1db4>
    4c9c:	mov	x8, xzr
    4ca0:	stur	x8, [x29, #-8]
    4ca4:	b	4da8 <PyInit__multibytecodec@@Base+0x1eb4>
    4ca8:	ldur	x0, [x29, #-16]
    4cac:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4cb0:	add	x1, x1, #0x2f3
    4cb4:	bl	29f0 <PyObject_GetAttrString@plt>
    4cb8:	str	x0, [sp, #16]
    4cbc:	ldr	x8, [sp, #16]
    4cc0:	cbnz	x8, 4cc8 <PyInit__multibytecodec@@Base+0x1dd4>
    4cc4:	b	4d90 <PyInit__multibytecodec@@Base+0x1e9c>
    4cc8:	ldr	x8, [sp, #16]
    4ccc:	ldr	x8, [x8, #8]
    4cd0:	adrp	x9, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    4cd4:	add	x9, x9, #0x8e8
    4cd8:	cmp	x8, x9
    4cdc:	b.eq	4cfc <PyInit__multibytecodec@@Base+0x1e08>  // b.none
    4ce0:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4ce4:	ldr	x8, [x8, #4000]
    4ce8:	ldr	x0, [x8]
    4cec:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4cf0:	add	x1, x1, #0xae
    4cf4:	bl	2ad0 <PyErr_SetString@plt>
    4cf8:	b	4d90 <PyInit__multibytecodec@@Base+0x1e9c>
    4cfc:	ldr	x8, [sp, #16]
    4d00:	ldr	x8, [x8, #16]
    4d04:	ldr	x9, [sp, #24]
    4d08:	str	x8, [x9, #16]
    4d0c:	ldr	x8, [sp, #24]
    4d10:	str	xzr, [x8, #48]
    4d14:	ldr	x0, [sp, #8]
    4d18:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    4d1c:	ldr	x8, [sp, #24]
    4d20:	str	x0, [x8, #32]
    4d24:	ldr	x8, [sp, #24]
    4d28:	ldr	x8, [x8, #32]
    4d2c:	cbnz	x8, 4d34 <PyInit__multibytecodec@@Base+0x1e40>
    4d30:	b	4d90 <PyInit__multibytecodec@@Base+0x1e9c>
    4d34:	ldr	x8, [sp, #24]
    4d38:	ldr	x8, [x8, #16]
    4d3c:	ldr	x8, [x8, #56]
    4d40:	cbz	x8, 4d70 <PyInit__multibytecodec@@Base+0x1e7c>
    4d44:	ldr	x8, [sp, #24]
    4d48:	ldr	x8, [x8, #16]
    4d4c:	ldr	x8, [x8, #56]
    4d50:	ldr	x9, [sp, #24]
    4d54:	add	x0, x9, #0x18
    4d58:	ldr	x9, [sp, #24]
    4d5c:	ldr	x9, [x9, #16]
    4d60:	ldr	x1, [x9, #8]
    4d64:	blr	x8
    4d68:	cbz	w0, 4d70 <PyInit__multibytecodec@@Base+0x1e7c>
    4d6c:	b	4d90 <PyInit__multibytecodec@@Base+0x1e9c>
    4d70:	ldr	x2, [sp, #16]
    4d74:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    4d78:	add	x0, x0, #0xe7d
    4d7c:	mov	w1, #0x547                 	// #1351
    4d80:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    4d84:	ldr	x8, [sp, #24]
    4d88:	stur	x8, [x29, #-8]
    4d8c:	b	4da8 <PyInit__multibytecodec@@Base+0x1eb4>
    4d90:	ldr	x0, [sp, #24]
    4d94:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    4d98:	ldr	x0, [sp, #16]
    4d9c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    4da0:	mov	x8, xzr
    4da4:	stur	x8, [x29, #-8]
    4da8:	ldur	x0, [x29, #-8]
    4dac:	ldp	x29, x30, [sp, #64]
    4db0:	add	sp, sp, #0x50
    4db4:	ret
    4db8:	sub	sp, sp, #0xd0
    4dbc:	stp	x29, x30, [sp, #192]
    4dc0:	add	x29, sp, #0xc0
    4dc4:	sub	x8, x29, #0x10
    4dc8:	mov	x9, xzr
    4dcc:	str	x0, [x8, #8]
    4dd0:	str	x1, [x8]
    4dd4:	stur	x2, [x29, #-24]
    4dd8:	stur	x3, [x29, #-32]
    4ddc:	stur	x9, [x29, #-40]
    4de0:	ldur	x9, [x29, #-24]
    4de4:	ldur	x10, [x29, #-32]
    4de8:	str	x8, [sp, #32]
    4dec:	str	x9, [sp, #24]
    4df0:	cbz	x10, 4e04 <PyInit__multibytecodec@@Base+0x1f10>
    4df4:	ldur	x8, [x29, #-32]
    4df8:	ldr	x8, [x8, #16]
    4dfc:	str	x8, [sp, #16]
    4e00:	b	4e0c <PyInit__multibytecodec@@Base+0x1f18>
    4e04:	mov	x8, xzr
    4e08:	str	x8, [sp, #16]
    4e0c:	ldr	x8, [sp, #16]
    4e10:	ldr	x9, [sp, #24]
    4e14:	add	x8, x9, x8
    4e18:	subs	x8, x8, #0x1
    4e1c:	stur	x8, [x29, #-64]
    4e20:	add	x0, sp, #0x30
    4e24:	mov	w10, wzr
    4e28:	mov	w1, w10
    4e2c:	mov	x2, #0x50                  	// #80
    4e30:	bl	2af0 <memset@plt>
    4e34:	str	wzr, [sp, #44]
    4e38:	ldur	x8, [x29, #-32]
    4e3c:	cbnz	x8, 4e78 <PyInit__multibytecodec@@Base+0x1f84>
    4e40:	ldur	x8, [x29, #-24]
    4e44:	mov	x9, #0x1                   	// #1
    4e48:	cmp	x9, x8
    4e4c:	b.gt	4e78 <PyInit__multibytecodec@@Base+0x1f84>
    4e50:	ldur	x8, [x29, #-24]
    4e54:	cmp	x8, #0x2
    4e58:	b.gt	4e78 <PyInit__multibytecodec@@Base+0x1f84>
    4e5c:	ldr	x8, [sp, #32]
    4e60:	ldr	x9, [x8]
    4e64:	cbz	x9, 4e78 <PyInit__multibytecodec@@Base+0x1f84>
    4e68:	ldr	x8, [sp, #32]
    4e6c:	ldr	x9, [x8]
    4e70:	str	x9, [sp, #8]
    4e74:	b	4ebc <PyInit__multibytecodec@@Base+0x1fc8>
    4e78:	ldr	x8, [sp, #32]
    4e7c:	ldr	x0, [x8]
    4e80:	ldur	x1, [x29, #-24]
    4e84:	ldur	x3, [x29, #-32]
    4e88:	mov	x9, xzr
    4e8c:	mov	x2, x9
    4e90:	adrp	x4, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    4e94:	add	x4, x4, #0xcd0
    4e98:	mov	w5, #0x1                   	// #1
    4e9c:	mov	w6, #0x2                   	// #2
    4ea0:	mov	w10, wzr
    4ea4:	mov	w7, w10
    4ea8:	mov	x9, sp
    4eac:	sub	x11, x29, #0x38
    4eb0:	str	x11, [x9]
    4eb4:	bl	2ac0 <_PyArg_UnpackKeywords@plt>
    4eb8:	str	x0, [sp, #8]
    4ebc:	ldr	x8, [sp, #8]
    4ec0:	ldr	x9, [sp, #32]
    4ec4:	str	x8, [x9]
    4ec8:	ldr	x8, [x9]
    4ecc:	cbnz	x8, 4ed4 <PyInit__multibytecodec@@Base+0x1fe0>
    4ed0:	b	4fe4 <PyInit__multibytecodec@@Base+0x20f0>
    4ed4:	ldr	x8, [sp, #32]
    4ed8:	ldr	x9, [x8]
    4edc:	ldr	x0, [x9]
    4ee0:	add	x1, sp, #0x30
    4ee4:	mov	w10, wzr
    4ee8:	mov	w2, w10
    4eec:	bl	2cb0 <PyObject_GetBuffer@plt>
    4ef0:	cbz	w0, 4ef8 <PyInit__multibytecodec@@Base+0x2004>
    4ef4:	b	4fe4 <PyInit__multibytecodec@@Base+0x20f0>
    4ef8:	add	x0, sp, #0x30
    4efc:	mov	w1, #0x43                  	// #67
    4f00:	bl	2a10 <PyBuffer_IsContiguous@plt>
    4f04:	cbnz	w0, 4f34 <PyInit__multibytecodec@@Base+0x2040>
    4f08:	ldr	x8, [sp, #32]
    4f0c:	ldr	x9, [x8]
    4f10:	ldr	x3, [x9]
    4f14:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4f18:	add	x0, x0, #0xe3
    4f1c:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4f20:	add	x1, x1, #0xea
    4f24:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    4f28:	add	x2, x2, #0xfb
    4f2c:	bl	2b70 <_PyArg_BadArgument@plt>
    4f30:	b	4fe4 <PyInit__multibytecodec@@Base+0x20f0>
    4f34:	ldur	x8, [x29, #-64]
    4f38:	cbnz	x8, 4f40 <PyInit__multibytecodec@@Base+0x204c>
    4f3c:	b	4fcc <PyInit__multibytecodec@@Base+0x20d8>
    4f40:	ldr	x8, [sp, #32]
    4f44:	ldr	x9, [x8]
    4f48:	ldr	x9, [x9, #8]
    4f4c:	ldr	x9, [x9, #8]
    4f50:	adrp	x10, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4f54:	ldr	x10, [x10, #3968]
    4f58:	cmp	x9, x10
    4f5c:	b.eq	4f80 <PyInit__multibytecodec@@Base+0x208c>  // b.none
    4f60:	ldr	x8, [sp, #32]
    4f64:	ldr	x9, [x8]
    4f68:	ldr	x9, [x9, #8]
    4f6c:	ldr	x0, [x9, #8]
    4f70:	adrp	x1, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4f74:	ldr	x1, [x1, #3968]
    4f78:	bl	2d20 <PyType_IsSubtype@plt>
    4f7c:	cbz	w0, 4f9c <PyInit__multibytecodec@@Base+0x20a8>
    4f80:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    4f84:	ldr	x8, [x8, #4000]
    4f88:	ldr	x0, [x8]
    4f8c:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    4f90:	add	x1, x1, #0xee1
    4f94:	bl	2ad0 <PyErr_SetString@plt>
    4f98:	b	4fe4 <PyInit__multibytecodec@@Base+0x20f0>
    4f9c:	ldr	x8, [sp, #32]
    4fa0:	ldr	x9, [x8]
    4fa4:	ldr	x0, [x9, #8]
    4fa8:	bl	2da0 <_PyLong_AsInt@plt>
    4fac:	str	w0, [sp, #44]
    4fb0:	ldr	w10, [sp, #44]
    4fb4:	mov	w11, #0xffffffff            	// #-1
    4fb8:	cmp	w10, w11
    4fbc:	b.ne	4fcc <PyInit__multibytecodec@@Base+0x20d8>  // b.any
    4fc0:	bl	2bf0 <PyErr_Occurred@plt>
    4fc4:	cbz	x0, 4fcc <PyInit__multibytecodec@@Base+0x20d8>
    4fc8:	b	4fe4 <PyInit__multibytecodec@@Base+0x20f0>
    4fcc:	ldr	x8, [sp, #32]
    4fd0:	ldr	x0, [x8, #8]
    4fd4:	ldr	w2, [sp, #44]
    4fd8:	add	x1, sp, #0x30
    4fdc:	bl	50d4 <PyInit__multibytecodec@@Base+0x21e0>
    4fe0:	stur	x0, [x29, #-40]
    4fe4:	add	x8, sp, #0x30
    4fe8:	ldr	x8, [x8, #8]
    4fec:	cbz	x8, 4ff8 <PyInit__multibytecodec@@Base+0x2104>
    4ff0:	add	x0, sp, #0x30
    4ff4:	bl	29d0 <PyBuffer_Release@plt>
    4ff8:	ldur	x0, [x29, #-40]
    4ffc:	ldp	x29, x30, [sp, #192]
    5000:	add	sp, sp, #0xd0
    5004:	ret
    5008:	sub	sp, sp, #0x20
    500c:	stp	x29, x30, [sp, #16]
    5010:	add	x29, sp, #0x10
    5014:	str	x0, [sp, #8]
    5018:	str	x1, [sp]
    501c:	ldr	x0, [sp, #8]
    5020:	bl	5940 <PyInit__multibytecodec@@Base+0x2a4c>
    5024:	ldp	x29, x30, [sp, #16]
    5028:	add	sp, sp, #0x20
    502c:	ret
    5030:	sub	sp, sp, #0x30
    5034:	stp	x29, x30, [sp, #32]
    5038:	add	x29, sp, #0x20
    503c:	mov	x8, xzr
    5040:	stur	x0, [x29, #-8]
    5044:	str	x1, [sp, #16]
    5048:	str	x8, [sp, #8]
    504c:	ldr	x8, [sp, #16]
    5050:	ldr	x8, [x8, #8]
    5054:	ldr	x8, [x8, #168]
    5058:	and	x8, x8, #0x4000000
    505c:	cbnz	x8, 5084 <PyInit__multibytecodec@@Base+0x2190>
    5060:	ldr	x3, [sp, #16]
    5064:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5068:	add	x0, x0, #0xec6
    506c:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5070:	add	x1, x1, #0x162
    5074:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5078:	add	x2, x2, #0x13b
    507c:	bl	2b70 <_PyArg_BadArgument@plt>
    5080:	b	509c <PyInit__multibytecodec@@Base+0x21a8>
    5084:	ldr	x8, [sp, #16]
    5088:	str	x8, [sp]
    508c:	ldur	x0, [x29, #-8]
    5090:	ldr	x1, [sp]
    5094:	bl	59ec <PyInit__multibytecodec@@Base+0x2af8>
    5098:	str	x0, [sp, #8]
    509c:	ldr	x0, [sp, #8]
    50a0:	ldp	x29, x30, [sp, #32]
    50a4:	add	sp, sp, #0x30
    50a8:	ret
    50ac:	sub	sp, sp, #0x20
    50b0:	stp	x29, x30, [sp, #16]
    50b4:	add	x29, sp, #0x10
    50b8:	str	x0, [sp, #8]
    50bc:	str	x1, [sp]
    50c0:	ldr	x0, [sp, #8]
    50c4:	bl	5b3c <PyInit__multibytecodec@@Base+0x2c48>
    50c8:	ldp	x29, x30, [sp, #16]
    50cc:	add	sp, sp, #0x20
    50d0:	ret
    50d4:	sub	sp, sp, #0xd0
    50d8:	stp	x29, x30, [sp, #192]
    50dc:	add	x29, sp, #0xc0
    50e0:	mov	x8, xzr
    50e4:	add	x9, sp, #0x48
    50e8:	stur	x0, [x29, #-16]
    50ec:	stur	x1, [x29, #-24]
    50f0:	stur	w2, [x29, #-28]
    50f4:	str	x8, [sp, #56]
    50f8:	ldur	x10, [x29, #-24]
    50fc:	ldr	x10, [x10]
    5100:	str	x10, [sp, #64]
    5104:	ldur	x10, [x29, #-24]
    5108:	ldr	x10, [x10, #16]
    510c:	str	x10, [sp, #40]
    5110:	add	x0, x9, #0x20
    5114:	str	x8, [sp, #16]
    5118:	str	x9, [sp, #8]
    511c:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    5120:	ldr	x8, [sp, #16]
    5124:	ldr	x9, [sp, #8]
    5128:	str	x8, [x9, #24]
    512c:	ldur	x10, [x29, #-16]
    5130:	ldr	x10, [x10, #48]
    5134:	str	x10, [sp, #32]
    5138:	ldur	x10, [x29, #-16]
    513c:	ldr	x10, [x10, #48]
    5140:	cbnz	x10, 5158 <PyInit__multibytecodec@@Base+0x2264>
    5144:	ldr	x8, [sp, #40]
    5148:	str	x8, [sp, #48]
    514c:	ldr	x8, [sp, #64]
    5150:	str	x8, [sp, #56]
    5154:	b	51e8 <PyInit__multibytecodec@@Base+0x22f4>
    5158:	ldr	x8, [sp, #40]
    515c:	ldur	x9, [x29, #-16]
    5160:	ldr	x9, [x9, #48]
    5164:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    5168:	subs	x9, x10, x9
    516c:	cmp	x8, x9
    5170:	b.le	517c <PyInit__multibytecodec@@Base+0x2288>
    5174:	bl	2a60 <PyErr_NoMemory@plt>
    5178:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    517c:	ldr	x8, [sp, #40]
    5180:	ldur	x9, [x29, #-16]
    5184:	ldr	x9, [x9, #48]
    5188:	add	x8, x8, x9
    518c:	str	x8, [sp, #48]
    5190:	ldr	x0, [sp, #48]
    5194:	bl	2dd0 <PyMem_Malloc@plt>
    5198:	str	x0, [sp, #56]
    519c:	ldr	x8, [sp, #56]
    51a0:	cbnz	x8, 51ac <PyInit__multibytecodec@@Base+0x22b8>
    51a4:	bl	2a60 <PyErr_NoMemory@plt>
    51a8:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    51ac:	ldr	x0, [sp, #56]
    51b0:	ldur	x8, [x29, #-16]
    51b4:	add	x1, x8, #0x28
    51b8:	ldur	x8, [x29, #-16]
    51bc:	ldr	x2, [x8, #48]
    51c0:	bl	2960 <memcpy@plt>
    51c4:	ldr	x8, [sp, #56]
    51c8:	ldur	x9, [x29, #-16]
    51cc:	ldr	x9, [x9, #48]
    51d0:	add	x0, x8, x9
    51d4:	ldr	x1, [sp, #64]
    51d8:	ldr	x2, [sp, #40]
    51dc:	bl	2960 <memcpy@plt>
    51e0:	ldur	x8, [x29, #-16]
    51e4:	str	xzr, [x8, #48]
    51e8:	ldr	x1, [sp, #56]
    51ec:	ldr	x2, [sp, #48]
    51f0:	add	x0, sp, #0x48
    51f4:	bl	5344 <PyInit__multibytecodec@@Base+0x2450>
    51f8:	cbz	w0, 5200 <PyInit__multibytecodec@@Base+0x230c>
    51fc:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    5200:	ldur	x0, [x29, #-16]
    5204:	add	x1, sp, #0x48
    5208:	bl	53a4 <PyInit__multibytecodec@@Base+0x24b0>
    520c:	cbz	w0, 5214 <PyInit__multibytecodec@@Base+0x2320>
    5210:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    5214:	ldur	w8, [x29, #-28]
    5218:	cbz	w8, 527c <PyInit__multibytecodec@@Base+0x2388>
    521c:	add	x8, sp, #0x48
    5220:	ldr	x9, [sp, #72]
    5224:	ldr	x8, [x8, #16]
    5228:	cmp	x9, x8
    522c:	b.cs	527c <PyInit__multibytecodec@@Base+0x2388>  // b.hs, b.nlast
    5230:	ldur	x8, [x29, #-16]
    5234:	ldr	x0, [x8, #16]
    5238:	ldur	x8, [x29, #-16]
    523c:	add	x1, x8, #0x18
    5240:	ldur	x8, [x29, #-16]
    5244:	ldr	x3, [x8, #32]
    5248:	add	x2, sp, #0x48
    524c:	mov	x4, #0xfffffffffffffffe    	// #-2
    5250:	bl	5488 <PyInit__multibytecodec@@Base+0x2594>
    5254:	cbz	w0, 527c <PyInit__multibytecodec@@Base+0x2388>
    5258:	ldur	x8, [x29, #-16]
    525c:	add	x0, x8, #0x28
    5260:	ldr	x1, [sp, #56]
    5264:	ldr	x2, [sp, #32]
    5268:	bl	2960 <memcpy@plt>
    526c:	ldr	x8, [sp, #32]
    5270:	ldur	x9, [x29, #-16]
    5274:	str	x8, [x9, #48]
    5278:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    527c:	add	x8, sp, #0x48
    5280:	ldr	x9, [sp, #72]
    5284:	ldr	x8, [x8, #16]
    5288:	cmp	x9, x8
    528c:	b.cs	52a4 <PyInit__multibytecodec@@Base+0x23b0>  // b.hs, b.nlast
    5290:	ldur	x0, [x29, #-16]
    5294:	add	x1, sp, #0x48
    5298:	bl	5870 <PyInit__multibytecodec@@Base+0x297c>
    529c:	cbz	w0, 52a4 <PyInit__multibytecodec@@Base+0x23b0>
    52a0:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    52a4:	add	x8, sp, #0x48
    52a8:	add	x0, x8, #0x20
    52ac:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    52b0:	str	x0, [sp, #24]
    52b4:	ldr	x8, [sp, #24]
    52b8:	cbnz	x8, 52c0 <PyInit__multibytecodec@@Base+0x23cc>
    52bc:	b	52f0 <PyInit__multibytecodec@@Base+0x23fc>
    52c0:	ldr	x8, [sp, #56]
    52c4:	ldr	x9, [sp, #64]
    52c8:	cmp	x8, x9
    52cc:	b.eq	52d8 <PyInit__multibytecodec@@Base+0x23e4>  // b.none
    52d0:	ldr	x0, [sp, #56]
    52d4:	bl	29c0 <PyMem_Free@plt>
    52d8:	add	x8, sp, #0x48
    52dc:	ldr	x0, [x8, #24]
    52e0:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    52e4:	ldr	x8, [sp, #24]
    52e8:	stur	x8, [x29, #-8]
    52ec:	b	5334 <PyInit__multibytecodec@@Base+0x2440>
    52f0:	ldr	x8, [sp, #56]
    52f4:	cbz	x8, 5310 <PyInit__multibytecodec@@Base+0x241c>
    52f8:	ldr	x8, [sp, #56]
    52fc:	ldr	x9, [sp, #64]
    5300:	cmp	x8, x9
    5304:	b.eq	5310 <PyInit__multibytecodec@@Base+0x241c>  // b.none
    5308:	ldr	x0, [sp, #56]
    530c:	bl	29c0 <PyMem_Free@plt>
    5310:	add	x8, sp, #0x48
    5314:	ldr	x0, [x8, #24]
    5318:	str	x8, [sp]
    531c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    5320:	ldr	x8, [sp]
    5324:	add	x0, x8, #0x20
    5328:	bl	2ab0 <_PyUnicodeWriter_Dealloc@plt>
    532c:	mov	x8, xzr
    5330:	stur	x8, [x29, #-8]
    5334:	ldur	x0, [x29, #-8]
    5338:	ldp	x29, x30, [sp, #192]
    533c:	add	sp, sp, #0xd0
    5340:	ret
    5344:	sub	sp, sp, #0x20
    5348:	mov	w8, wzr
    534c:	str	x0, [sp, #24]
    5350:	str	x1, [sp, #16]
    5354:	str	x2, [sp, #8]
    5358:	ldr	x9, [sp, #16]
    535c:	ldr	x10, [sp, #24]
    5360:	str	x9, [x10, #8]
    5364:	ldr	x10, [sp, #24]
    5368:	str	x9, [x10]
    536c:	ldr	x9, [sp, #24]
    5370:	ldr	x9, [x9, #8]
    5374:	ldr	x10, [sp, #8]
    5378:	add	x9, x9, x10
    537c:	ldr	x10, [sp, #24]
    5380:	str	x9, [x10, #16]
    5384:	ldr	x9, [sp, #8]
    5388:	ldr	x10, [sp, #24]
    538c:	ldr	x11, [x10, #72]
    5390:	add	x9, x11, x9
    5394:	str	x9, [x10, #72]
    5398:	mov	w0, w8
    539c:	add	sp, sp, #0x20
    53a0:	ret
    53a4:	sub	sp, sp, #0x40
    53a8:	stp	x29, x30, [sp, #48]
    53ac:	add	x29, sp, #0x30
    53b0:	stur	x0, [x29, #-16]
    53b4:	str	x1, [sp, #24]
    53b8:	ldr	x8, [sp, #24]
    53bc:	ldr	x8, [x8]
    53c0:	ldr	x9, [sp, #24]
    53c4:	ldr	x9, [x9, #16]
    53c8:	cmp	x8, x9
    53cc:	b.cs	5474 <PyInit__multibytecodec@@Base+0x2580>  // b.hs, b.nlast
    53d0:	ldr	x8, [sp, #24]
    53d4:	ldr	x8, [x8, #16]
    53d8:	ldr	x9, [sp, #24]
    53dc:	ldr	x9, [x9]
    53e0:	subs	x8, x8, x9
    53e4:	str	x8, [sp, #16]
    53e8:	ldur	x8, [x29, #-16]
    53ec:	ldr	x8, [x8, #16]
    53f0:	ldr	x8, [x8, #48]
    53f4:	ldur	x9, [x29, #-16]
    53f8:	add	x0, x9, #0x18
    53fc:	ldur	x9, [x29, #-16]
    5400:	ldr	x9, [x9, #16]
    5404:	ldr	x1, [x9, #8]
    5408:	ldr	x2, [sp, #24]
    540c:	ldr	x3, [sp, #16]
    5410:	ldr	x9, [sp, #24]
    5414:	add	x4, x9, #0x20
    5418:	blr	x8
    541c:	str	x0, [sp, #8]
    5420:	ldr	x8, [sp, #8]
    5424:	cbz	x8, 5438 <PyInit__multibytecodec@@Base+0x2544>
    5428:	ldr	x8, [sp, #8]
    542c:	mov	x9, #0xfffffffffffffffe    	// #-2
    5430:	cmp	x8, x9
    5434:	b.ne	543c <PyInit__multibytecodec@@Base+0x2548>  // b.any
    5438:	b	5474 <PyInit__multibytecodec@@Base+0x2580>
    543c:	ldur	x8, [x29, #-16]
    5440:	ldr	x0, [x8, #16]
    5444:	ldur	x8, [x29, #-16]
    5448:	add	x1, x8, #0x18
    544c:	ldr	x2, [sp, #24]
    5450:	ldur	x8, [x29, #-16]
    5454:	ldr	x3, [x8, #32]
    5458:	ldr	x4, [sp, #8]
    545c:	bl	5488 <PyInit__multibytecodec@@Base+0x2594>
    5460:	cbz	w0, 5470 <PyInit__multibytecodec@@Base+0x257c>
    5464:	mov	w8, #0xffffffff            	// #-1
    5468:	stur	w8, [x29, #-4]
    546c:	b	5478 <PyInit__multibytecodec@@Base+0x2584>
    5470:	b	53b8 <PyInit__multibytecodec@@Base+0x24c4>
    5474:	stur	wzr, [x29, #-4]
    5478:	ldur	w0, [x29, #-4]
    547c:	ldp	x29, x30, [sp, #48]
    5480:	add	sp, sp, #0x40
    5484:	ret
    5488:	sub	sp, sp, #0x80
    548c:	stp	x29, x30, [sp, #112]
    5490:	add	x29, sp, #0x70
    5494:	mov	x8, xzr
    5498:	stur	x0, [x29, #-16]
    549c:	stur	x1, [x29, #-24]
    54a0:	stur	x2, [x29, #-32]
    54a4:	stur	x3, [x29, #-40]
    54a8:	stur	x4, [x29, #-48]
    54ac:	str	x8, [sp, #56]
    54b0:	str	x8, [sp, #48]
    54b4:	ldur	x8, [x29, #-48]
    54b8:	cmp	x8, #0x0
    54bc:	cset	w9, le
    54c0:	tbnz	w9, #0, 54dc <PyInit__multibytecodec@@Base+0x25e8>
    54c4:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    54c8:	add	x8, x8, #0xf42
    54cc:	str	x8, [sp, #32]
    54d0:	ldur	x8, [x29, #-48]
    54d4:	str	x8, [sp, #24]
    54d8:	b	558c <PyInit__multibytecodec@@Base+0x2698>
    54dc:	ldur	x8, [x29, #-48]
    54e0:	add	x8, x8, #0x4
    54e4:	cmp	x8, #0x3
    54e8:	str	x8, [sp]
    54ec:	b.hi	5568 <PyInit__multibytecodec@@Base+0x2674>  // b.pmore
    54f0:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    54f4:	add	x8, x8, #0x944
    54f8:	ldr	x11, [sp]
    54fc:	ldrsw	x10, [x8, x11, lsl #2]
    5500:	add	x9, x8, x10
    5504:	br	x9
    5508:	stur	wzr, [x29, #-4]
    550c:	b	5860 <PyInit__multibytecodec@@Base+0x296c>
    5510:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5514:	add	x8, x8, #0xf5d
    5518:	str	x8, [sp, #32]
    551c:	ldur	x8, [x29, #-32]
    5520:	ldr	x8, [x8, #16]
    5524:	ldur	x9, [x29, #-32]
    5528:	ldr	x9, [x9]
    552c:	subs	x8, x8, x9
    5530:	str	x8, [sp, #24]
    5534:	b	558c <PyInit__multibytecodec@@Base+0x2698>
    5538:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    553c:	ldr	x8, [x8, #3984]
    5540:	ldr	x0, [x8]
    5544:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5548:	add	x1, x1, #0xf7b
    554c:	bl	2ad0 <PyErr_SetString@plt>
    5550:	mov	w9, #0xffffffff            	// #-1
    5554:	stur	w9, [x29, #-4]
    5558:	b	5860 <PyInit__multibytecodec@@Base+0x296c>
    555c:	mov	w8, #0xffffffff            	// #-1
    5560:	stur	w8, [x29, #-4]
    5564:	b	5860 <PyInit__multibytecodec@@Base+0x296c>
    5568:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    556c:	ldr	x8, [x8, #3984]
    5570:	ldr	x0, [x8]
    5574:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5578:	add	x1, x1, #0xf90
    557c:	bl	2ad0 <PyErr_SetString@plt>
    5580:	mov	w9, #0xffffffff            	// #-1
    5584:	stur	w9, [x29, #-4]
    5588:	b	5860 <PyInit__multibytecodec@@Base+0x296c>
    558c:	ldur	x8, [x29, #-40]
    5590:	cmp	x8, #0x3
    5594:	b.ne	55b8 <PyInit__multibytecodec@@Base+0x26c4>  // b.any
    5598:	ldur	x8, [x29, #-32]
    559c:	add	x0, x8, #0x20
    55a0:	mov	w1, #0xfffd                	// #65533
    55a4:	bl	2ca0 <_PyUnicodeWriter_WriteChar@plt>
    55a8:	cmp	w0, #0x0
    55ac:	cset	w9, ge  // ge = tcont
    55b0:	tbnz	w9, #0, 55b8 <PyInit__multibytecodec@@Base+0x26c4>
    55b4:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    55b8:	ldur	x8, [x29, #-40]
    55bc:	cmp	x8, #0x2
    55c0:	b.eq	55d0 <PyInit__multibytecodec@@Base+0x26dc>  // b.none
    55c4:	ldur	x8, [x29, #-40]
    55c8:	cmp	x8, #0x3
    55cc:	b.ne	55ec <PyInit__multibytecodec@@Base+0x26f8>  // b.any
    55d0:	ldr	x8, [sp, #24]
    55d4:	ldur	x9, [x29, #-32]
    55d8:	ldr	x10, [x9]
    55dc:	add	x8, x10, x8
    55e0:	str	x8, [x9]
    55e4:	stur	wzr, [x29, #-4]
    55e8:	b	5860 <PyInit__multibytecodec@@Base+0x296c>
    55ec:	ldur	x8, [x29, #-32]
    55f0:	ldr	x8, [x8]
    55f4:	ldur	x9, [x29, #-32]
    55f8:	ldr	x9, [x9, #8]
    55fc:	subs	x8, x8, x9
    5600:	str	x8, [sp, #16]
    5604:	ldr	x8, [sp, #16]
    5608:	ldr	x9, [sp, #24]
    560c:	add	x8, x8, x9
    5610:	str	x8, [sp, #8]
    5614:	ldur	x8, [x29, #-32]
    5618:	ldr	x8, [x8, #24]
    561c:	cbnz	x8, 5670 <PyInit__multibytecodec@@Base+0x277c>
    5620:	ldur	x8, [x29, #-16]
    5624:	ldr	x0, [x8]
    5628:	ldur	x8, [x29, #-32]
    562c:	ldr	x1, [x8, #8]
    5630:	ldur	x8, [x29, #-32]
    5634:	ldr	x8, [x8, #16]
    5638:	ldur	x9, [x29, #-32]
    563c:	ldr	x9, [x9, #8]
    5640:	subs	x2, x8, x9
    5644:	ldr	x3, [sp, #16]
    5648:	ldr	x4, [sp, #8]
    564c:	ldr	x5, [sp, #32]
    5650:	bl	2d90 <PyUnicodeDecodeError_Create@plt>
    5654:	ldur	x8, [x29, #-32]
    5658:	str	x0, [x8, #24]
    565c:	ldur	x8, [x29, #-32]
    5660:	ldr	x8, [x8, #24]
    5664:	cbnz	x8, 566c <PyInit__multibytecodec@@Base+0x2778>
    5668:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    566c:	b	56b0 <PyInit__multibytecodec@@Base+0x27bc>
    5670:	ldur	x8, [x29, #-32]
    5674:	ldr	x0, [x8, #24]
    5678:	ldr	x1, [sp, #16]
    567c:	bl	29a0 <PyUnicodeDecodeError_SetStart@plt>
    5680:	cbnz	w0, 56ac <PyInit__multibytecodec@@Base+0x27b8>
    5684:	ldur	x8, [x29, #-32]
    5688:	ldr	x0, [x8, #24]
    568c:	ldr	x1, [sp, #8]
    5690:	bl	2c10 <PyUnicodeDecodeError_SetEnd@plt>
    5694:	cbnz	w0, 56ac <PyInit__multibytecodec@@Base+0x27b8>
    5698:	ldur	x8, [x29, #-32]
    569c:	ldr	x0, [x8, #24]
    56a0:	ldr	x1, [sp, #32]
    56a4:	bl	2a50 <PyUnicodeDecodeError_SetReason@plt>
    56a8:	cbz	w0, 56b0 <PyInit__multibytecodec@@Base+0x27bc>
    56ac:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    56b0:	ldur	x8, [x29, #-40]
    56b4:	cmp	x8, #0x1
    56b8:	b.ne	56cc <PyInit__multibytecodec@@Base+0x27d8>  // b.any
    56bc:	ldur	x8, [x29, #-32]
    56c0:	ldr	x0, [x8, #24]
    56c4:	bl	2bc0 <PyCodec_StrictErrors@plt>
    56c8:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    56cc:	ldur	x0, [x29, #-40]
    56d0:	ldur	x8, [x29, #-32]
    56d4:	ldr	x1, [x8, #24]
    56d8:	bl	4498 <PyInit__multibytecodec@@Base+0x15a4>
    56dc:	str	x0, [sp, #56]
    56e0:	ldr	x8, [sp, #56]
    56e4:	cbnz	x8, 56ec <PyInit__multibytecodec@@Base+0x27f8>
    56e8:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    56ec:	ldr	x8, [sp, #56]
    56f0:	ldr	x8, [x8, #8]
    56f4:	ldr	x8, [x8, #168]
    56f8:	and	x8, x8, #0x4000000
    56fc:	cbz	x8, 5744 <PyInit__multibytecodec@@Base+0x2850>
    5700:	ldr	x8, [sp, #56]
    5704:	ldr	x8, [x8, #16]
    5708:	cmp	x8, #0x2
    570c:	b.ne	5744 <PyInit__multibytecodec@@Base+0x2850>  // b.any
    5710:	ldr	x8, [sp, #56]
    5714:	ldr	x8, [x8, #24]
    5718:	str	x8, [sp, #48]
    571c:	ldr	x8, [x8, #8]
    5720:	ldr	x8, [x8, #168]
    5724:	and	x8, x8, #0x10000000
    5728:	cbz	x8, 5744 <PyInit__multibytecodec@@Base+0x2850>
    572c:	ldr	x8, [sp, #56]
    5730:	ldr	x8, [x8, #32]
    5734:	ldr	x8, [x8, #8]
    5738:	ldr	x8, [x8, #168]
    573c:	and	x8, x8, #0x1000000
    5740:	cbnz	x8, 5760 <PyInit__multibytecodec@@Base+0x286c>
    5744:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5748:	ldr	x8, [x8, #4000]
    574c:	ldr	x0, [x8]
    5750:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5754:	add	x1, x1, #0x10d
    5758:	bl	2ad0 <PyErr_SetString@plt>
    575c:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    5760:	ldur	x8, [x29, #-32]
    5764:	add	x0, x8, #0x20
    5768:	ldr	x1, [sp, #48]
    576c:	bl	2c90 <_PyUnicodeWriter_WriteStr@plt>
    5770:	cmp	w0, #0x0
    5774:	cset	w9, ge  // ge = tcont
    5778:	tbnz	w9, #0, 5780 <PyInit__multibytecodec@@Base+0x288c>
    577c:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    5780:	ldr	x8, [sp, #56]
    5784:	ldr	x0, [x8, #32]
    5788:	bl	2b50 <PyLong_AsSsize_t@plt>
    578c:	str	x0, [sp, #40]
    5790:	ldr	x8, [sp, #40]
    5794:	cmp	x8, #0x0
    5798:	cset	w9, ge  // ge = tcont
    579c:	tbnz	w9, #0, 57c8 <PyInit__multibytecodec@@Base+0x28d4>
    57a0:	bl	2bf0 <PyErr_Occurred@plt>
    57a4:	cbnz	x0, 57c8 <PyInit__multibytecodec@@Base+0x28d4>
    57a8:	ldur	x8, [x29, #-32]
    57ac:	ldr	x8, [x8, #16]
    57b0:	ldur	x9, [x29, #-32]
    57b4:	ldr	x9, [x9, #8]
    57b8:	subs	x8, x8, x9
    57bc:	ldr	x9, [sp, #40]
    57c0:	add	x8, x9, x8
    57c4:	str	x8, [sp, #40]
    57c8:	ldr	x8, [sp, #40]
    57cc:	cmp	x8, #0x0
    57d0:	cset	w9, lt  // lt = tstop
    57d4:	tbnz	w9, #0, 57f8 <PyInit__multibytecodec@@Base+0x2904>
    57d8:	ldur	x8, [x29, #-32]
    57dc:	ldr	x8, [x8, #8]
    57e0:	ldr	x9, [sp, #40]
    57e4:	add	x8, x8, x9
    57e8:	ldur	x9, [x29, #-32]
    57ec:	ldr	x9, [x9, #16]
    57f0:	cmp	x8, x9
    57f4:	b.ls	581c <PyInit__multibytecodec@@Base+0x2928>  // b.plast
    57f8:	bl	2b90 <PyErr_Clear@plt>
    57fc:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5800:	ldr	x8, [x8, #4032]
    5804:	ldr	x0, [x8]
    5808:	ldr	x2, [sp, #40]
    580c:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5810:	add	x1, x1, #0xfe0
    5814:	bl	2d50 <PyErr_Format@plt>
    5818:	b	5850 <PyInit__multibytecodec@@Base+0x295c>
    581c:	ldur	x8, [x29, #-32]
    5820:	ldr	x8, [x8, #8]
    5824:	ldr	x9, [sp, #40]
    5828:	add	x8, x8, x9
    582c:	ldur	x9, [x29, #-32]
    5830:	str	x8, [x9]
    5834:	ldr	x2, [sp, #56]
    5838:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    583c:	add	x0, x0, #0xe7d
    5840:	mov	w1, #0x1c4                 	// #452
    5844:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    5848:	stur	wzr, [x29, #-4]
    584c:	b	5860 <PyInit__multibytecodec@@Base+0x296c>
    5850:	ldr	x0, [sp, #56]
    5854:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    5858:	mov	w8, #0xffffffff            	// #-1
    585c:	stur	w8, [x29, #-4]
    5860:	ldur	w0, [x29, #-4]
    5864:	ldp	x29, x30, [sp, #112]
    5868:	add	sp, sp, #0x80
    586c:	ret
    5870:	sub	sp, sp, #0x30
    5874:	stp	x29, x30, [sp, #32]
    5878:	add	x29, sp, #0x20
    587c:	str	x0, [sp, #16]
    5880:	str	x1, [sp, #8]
    5884:	ldr	x8, [sp, #8]
    5888:	ldr	x8, [x8, #16]
    588c:	ldr	x9, [sp, #8]
    5890:	ldr	x9, [x9]
    5894:	subs	x8, x8, x9
    5898:	str	x8, [sp]
    589c:	ldr	x8, [sp]
    58a0:	ldr	x9, [sp, #16]
    58a4:	ldr	x9, [x9, #48]
    58a8:	add	x8, x8, x9
    58ac:	cmp	x8, #0x8
    58b0:	b.gt	58d0 <PyInit__multibytecodec@@Base+0x29dc>
    58b4:	ldr	x8, [sp]
    58b8:	ldr	x9, [sp, #16]
    58bc:	ldr	x9, [x9, #48]
    58c0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    58c4:	subs	x9, x10, x9
    58c8:	cmp	x8, x9
    58cc:	b.le	58f4 <PyInit__multibytecodec@@Base+0x2a00>
    58d0:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    58d4:	ldr	x8, [x8, #4048]
    58d8:	ldr	x0, [x8]
    58dc:	adrp	x1, 7000 <PyInit__multibytecodec@@Base+0x410c>
    58e0:	add	x1, x1, #0xf2a
    58e4:	bl	2ad0 <PyErr_SetString@plt>
    58e8:	mov	w9, #0xffffffff            	// #-1
    58ec:	stur	w9, [x29, #-4]
    58f0:	b	5930 <PyInit__multibytecodec@@Base+0x2a3c>
    58f4:	ldr	x8, [sp, #16]
    58f8:	add	x8, x8, #0x28
    58fc:	ldr	x9, [sp, #16]
    5900:	ldr	x9, [x9, #48]
    5904:	add	x0, x8, x9
    5908:	ldr	x8, [sp, #8]
    590c:	ldr	x1, [x8]
    5910:	ldr	x2, [sp]
    5914:	bl	2960 <memcpy@plt>
    5918:	ldr	x8, [sp]
    591c:	ldr	x9, [sp, #16]
    5920:	ldr	x10, [x9, #48]
    5924:	add	x8, x10, x8
    5928:	str	x8, [x9, #48]
    592c:	stur	wzr, [x29, #-4]
    5930:	ldur	w0, [x29, #-4]
    5934:	ldp	x29, x30, [sp, #32]
    5938:	add	sp, sp, #0x30
    593c:	ret
    5940:	sub	sp, sp, #0x30
    5944:	stp	x29, x30, [sp, #32]
    5948:	add	x29, sp, #0x20
    594c:	str	x0, [sp, #16]
    5950:	ldr	x8, [sp, #16]
    5954:	add	x0, x8, #0x28
    5958:	ldr	x8, [sp, #16]
    595c:	ldr	x1, [x8, #48]
    5960:	bl	2a20 <PyBytes_FromStringAndSize@plt>
    5964:	str	x0, [sp, #8]
    5968:	ldr	x8, [sp, #8]
    596c:	cbnz	x8, 597c <PyInit__multibytecodec@@Base+0x2a88>
    5970:	mov	x8, xzr
    5974:	stur	x8, [x29, #-8]
    5978:	b	59dc <PyInit__multibytecodec@@Base+0x2ae8>
    597c:	ldr	x8, [sp, #16]
    5980:	add	x0, x8, #0x18
    5984:	mov	x1, #0x8                   	// #8
    5988:	mov	w2, #0x1                   	// #1
    598c:	mov	w9, wzr
    5990:	mov	w3, w9
    5994:	bl	2ae0 <_PyLong_FromByteArray@plt>
    5998:	str	x0, [sp]
    599c:	ldr	x8, [sp]
    59a0:	cbnz	x8, 59c4 <PyInit__multibytecodec@@Base+0x2ad0>
    59a4:	ldr	x2, [sp, #8]
    59a8:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    59ac:	add	x0, x0, #0xe7d
    59b0:	mov	w1, #0x4d6                 	// #1238
    59b4:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    59b8:	mov	x8, xzr
    59bc:	stur	x8, [x29, #-8]
    59c0:	b	59dc <PyInit__multibytecodec@@Base+0x2ae8>
    59c4:	ldr	x1, [sp, #8]
    59c8:	ldr	x2, [sp]
    59cc:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    59d0:	add	x0, x0, #0x141
    59d4:	bl	2d70 <_Py_BuildValue_SizeT@plt>
    59d8:	stur	x0, [x29, #-8]
    59dc:	ldur	x0, [x29, #-8]
    59e0:	ldp	x29, x30, [sp, #32]
    59e4:	add	sp, sp, #0x30
    59e8:	ret
    59ec:	sub	sp, sp, #0x60
    59f0:	stp	x29, x30, [sp, #80]
    59f4:	add	x29, sp, #0x50
    59f8:	adrp	x8, 8000 <PyInit__multibytecodec@@Base+0x510c>
    59fc:	add	x8, x8, #0x144
    5a00:	adrp	x3, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5a04:	ldr	x3, [x3, #4040]
    5a08:	sub	x2, x29, #0x20
    5a0c:	add	x4, sp, #0x28
    5a10:	stur	x0, [x29, #-16]
    5a14:	stur	x1, [x29, #-24]
    5a18:	ldur	x0, [x29, #-24]
    5a1c:	mov	x1, x8
    5a20:	bl	2c50 <_PyArg_ParseTuple_SizeT@plt>
    5a24:	cbnz	w0, 5a34 <PyInit__multibytecodec@@Base+0x2b40>
    5a28:	mov	x8, xzr
    5a2c:	stur	x8, [x29, #-8]
    5a30:	b	5b2c <PyInit__multibytecodec@@Base+0x2c38>
    5a34:	ldr	x0, [sp, #40]
    5a38:	add	x1, sp, #0x10
    5a3c:	mov	x2, #0x8                   	// #8
    5a40:	mov	w3, #0x1                   	// #1
    5a44:	mov	w8, wzr
    5a48:	mov	w4, w8
    5a4c:	bl	2d30 <_PyLong_AsByteArray@plt>
    5a50:	cmp	w0, #0x0
    5a54:	cset	w8, ge  // ge = tcont
    5a58:	tbnz	w8, #0, 5a68 <PyInit__multibytecodec@@Base+0x2b74>
    5a5c:	mov	x8, xzr
    5a60:	stur	x8, [x29, #-8]
    5a64:	b	5b2c <PyInit__multibytecodec@@Base+0x2c38>
    5a68:	ldur	x0, [x29, #-32]
    5a6c:	bl	2b60 <PyBytes_Size@plt>
    5a70:	str	x0, [sp, #32]
    5a74:	ldr	x8, [sp, #32]
    5a78:	mov	x9, #0xffffffffffffffff    	// #-1
    5a7c:	cmp	x8, x9
    5a80:	b.ne	5a90 <PyInit__multibytecodec@@Base+0x2b9c>  // b.any
    5a84:	mov	x8, xzr
    5a88:	stur	x8, [x29, #-8]
    5a8c:	b	5b2c <PyInit__multibytecodec@@Base+0x2c38>
    5a90:	ldr	x8, [sp, #32]
    5a94:	cmp	x8, #0x8
    5a98:	b.le	5ac0 <PyInit__multibytecodec@@Base+0x2bcc>
    5a9c:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5aa0:	ldr	x8, [x8, #4048]
    5aa4:	ldr	x0, [x8]
    5aa8:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5aac:	add	x1, x1, #0x21
    5ab0:	bl	2ad0 <PyErr_SetString@plt>
    5ab4:	mov	x8, xzr
    5ab8:	stur	x8, [x29, #-8]
    5abc:	b	5b2c <PyInit__multibytecodec@@Base+0x2c38>
    5ac0:	ldur	x0, [x29, #-32]
    5ac4:	bl	2d10 <PyBytes_AsString@plt>
    5ac8:	str	x0, [sp, #24]
    5acc:	ldr	x8, [sp, #24]
    5ad0:	cbnz	x8, 5ae0 <PyInit__multibytecodec@@Base+0x2bec>
    5ad4:	mov	x8, xzr
    5ad8:	stur	x8, [x29, #-8]
    5adc:	b	5b2c <PyInit__multibytecodec@@Base+0x2c38>
    5ae0:	ldr	x8, [sp, #32]
    5ae4:	ldur	x9, [x29, #-16]
    5ae8:	str	x8, [x9, #48]
    5aec:	ldur	x8, [x29, #-16]
    5af0:	add	x0, x8, #0x28
    5af4:	ldr	x1, [sp, #24]
    5af8:	ldur	x8, [x29, #-16]
    5afc:	ldr	x2, [x8, #48]
    5b00:	bl	2960 <memcpy@plt>
    5b04:	ldur	x8, [x29, #-16]
    5b08:	ldr	x9, [sp, #16]
    5b0c:	str	x9, [x8, #24]
    5b10:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5b14:	ldr	x8, [x8, #4016]
    5b18:	mov	x0, x8
    5b1c:	str	x8, [sp, #8]
    5b20:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    5b24:	ldr	x8, [sp, #8]
    5b28:	stur	x8, [x29, #-8]
    5b2c:	ldur	x0, [x29, #-8]
    5b30:	ldp	x29, x30, [sp, #80]
    5b34:	add	sp, sp, #0x60
    5b38:	ret
    5b3c:	sub	sp, sp, #0x30
    5b40:	stp	x29, x30, [sp, #32]
    5b44:	add	x29, sp, #0x20
    5b48:	str	x0, [sp, #16]
    5b4c:	ldr	x8, [sp, #16]
    5b50:	ldr	x8, [x8, #16]
    5b54:	ldr	x8, [x8, #64]
    5b58:	cbz	x8, 5b90 <PyInit__multibytecodec@@Base+0x2c9c>
    5b5c:	ldr	x8, [sp, #16]
    5b60:	ldr	x8, [x8, #16]
    5b64:	ldr	x8, [x8, #64]
    5b68:	ldr	x9, [sp, #16]
    5b6c:	add	x0, x9, #0x18
    5b70:	ldr	x9, [sp, #16]
    5b74:	ldr	x9, [x9, #16]
    5b78:	ldr	x1, [x9, #8]
    5b7c:	blr	x8
    5b80:	cbz	x0, 5b90 <PyInit__multibytecodec@@Base+0x2c9c>
    5b84:	mov	x8, xzr
    5b88:	stur	x8, [x29, #-8]
    5b8c:	b	5bb4 <PyInit__multibytecodec@@Base+0x2cc0>
    5b90:	ldr	x8, [sp, #16]
    5b94:	str	xzr, [x8, #48]
    5b98:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5b9c:	ldr	x8, [x8, #4016]
    5ba0:	mov	x0, x8
    5ba4:	str	x8, [sp, #8]
    5ba8:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    5bac:	ldr	x8, [sp, #8]
    5bb0:	stur	x8, [x29, #-8]
    5bb4:	ldur	x0, [x29, #-8]
    5bb8:	ldp	x29, x30, [sp, #32]
    5bbc:	add	sp, sp, #0x30
    5bc0:	ret
    5bc4:	sub	sp, sp, #0x20
    5bc8:	stp	x29, x30, [sp, #16]
    5bcc:	add	x29, sp, #0x10
    5bd0:	str	x0, [sp, #8]
    5bd4:	ldr	x0, [sp, #8]
    5bd8:	bl	2e00 <PyObject_GC_UnTrack@plt>
    5bdc:	ldr	x8, [sp, #8]
    5be0:	ldr	x8, [x8, #32]
    5be4:	cbz	x8, 5c24 <PyInit__multibytecodec@@Base+0x2d30>
    5be8:	ldr	x8, [sp, #8]
    5bec:	ldr	x8, [x8, #32]
    5bf0:	cmp	x8, #0x1
    5bf4:	b.cc	5c0c <PyInit__multibytecodec@@Base+0x2d18>  // b.lo, b.ul, b.last
    5bf8:	ldr	x8, [sp, #8]
    5bfc:	ldr	x8, [x8, #32]
    5c00:	mov	x9, #0x3                   	// #3
    5c04:	cmp	x9, x8
    5c08:	b.cs	5c24 <PyInit__multibytecodec@@Base+0x2d30>  // b.hs, b.nlast
    5c0c:	ldr	x8, [sp, #8]
    5c10:	ldr	x2, [x8, #32]
    5c14:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5c18:	add	x0, x0, #0xe7d
    5c1c:	mov	w1, #0x6bd                 	// #1725
    5c20:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    5c24:	ldr	x8, [sp, #8]
    5c28:	ldr	x0, [x8, #56]
    5c2c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    5c30:	ldr	x8, [sp, #8]
    5c34:	ldr	x8, [x8, #8]
    5c38:	ldr	x8, [x8, #320]
    5c3c:	ldr	x0, [sp, #8]
    5c40:	blr	x8
    5c44:	ldp	x29, x30, [sp, #16]
    5c48:	add	sp, sp, #0x20
    5c4c:	ret
    5c50:	sub	sp, sp, #0x40
    5c54:	stp	x29, x30, [sp, #48]
    5c58:	add	x29, sp, #0x30
    5c5c:	stur	x0, [x29, #-16]
    5c60:	str	x1, [sp, #24]
    5c64:	str	x2, [sp, #16]
    5c68:	ldur	x8, [x29, #-16]
    5c6c:	ldr	x8, [x8, #32]
    5c70:	cmp	x8, #0x1
    5c74:	b.cc	5c8c <PyInit__multibytecodec@@Base+0x2d98>  // b.lo, b.ul, b.last
    5c78:	ldur	x8, [x29, #-16]
    5c7c:	ldr	x8, [x8, #32]
    5c80:	mov	x9, #0x3                   	// #3
    5c84:	cmp	x9, x8
    5c88:	b.cs	5cc4 <PyInit__multibytecodec@@Base+0x2dd0>  // b.hs, b.nlast
    5c8c:	ldur	x8, [x29, #-16]
    5c90:	ldr	x8, [x8, #32]
    5c94:	cbz	x8, 5cc4 <PyInit__multibytecodec@@Base+0x2dd0>
    5c98:	ldr	x8, [sp, #24]
    5c9c:	ldur	x9, [x29, #-16]
    5ca0:	ldr	x0, [x9, #32]
    5ca4:	ldr	x1, [sp, #16]
    5ca8:	blr	x8
    5cac:	str	w0, [sp, #12]
    5cb0:	ldr	w10, [sp, #12]
    5cb4:	cbz	w10, 5cc4 <PyInit__multibytecodec@@Base+0x2dd0>
    5cb8:	ldr	w8, [sp, #12]
    5cbc:	stur	w8, [x29, #-4]
    5cc0:	b	5d00 <PyInit__multibytecodec@@Base+0x2e0c>
    5cc4:	ldur	x8, [x29, #-16]
    5cc8:	ldr	x8, [x8, #56]
    5ccc:	cbz	x8, 5cfc <PyInit__multibytecodec@@Base+0x2e08>
    5cd0:	ldr	x8, [sp, #24]
    5cd4:	ldur	x9, [x29, #-16]
    5cd8:	ldr	x0, [x9, #56]
    5cdc:	ldr	x1, [sp, #16]
    5ce0:	blr	x8
    5ce4:	str	w0, [sp, #8]
    5ce8:	ldr	w10, [sp, #8]
    5cec:	cbz	w10, 5cfc <PyInit__multibytecodec@@Base+0x2e08>
    5cf0:	ldr	w8, [sp, #8]
    5cf4:	stur	w8, [x29, #-4]
    5cf8:	b	5d00 <PyInit__multibytecodec@@Base+0x2e0c>
    5cfc:	stur	wzr, [x29, #-4]
    5d00:	ldur	w0, [x29, #-4]
    5d04:	ldp	x29, x30, [sp, #48]
    5d08:	add	sp, sp, #0x40
    5d0c:	ret
    5d10:	sub	sp, sp, #0x20
    5d14:	mov	w8, wzr
    5d18:	str	x0, [sp, #24]
    5d1c:	str	x1, [sp, #16]
    5d20:	str	x2, [sp, #8]
    5d24:	mov	w0, w8
    5d28:	add	sp, sp, #0x20
    5d2c:	ret
    5d30:	sub	sp, sp, #0x50
    5d34:	stp	x29, x30, [sp, #64]
    5d38:	add	x29, sp, #0x40
    5d3c:	mov	x8, xzr
    5d40:	adrp	x9, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5d44:	add	x9, x9, #0x206
    5d48:	adrp	x3, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    5d4c:	add	x3, x3, #0xe00
    5d50:	add	x4, sp, #0x10
    5d54:	mov	x5, sp
    5d58:	stur	x0, [x29, #-16]
    5d5c:	stur	x1, [x29, #-24]
    5d60:	str	x2, [sp, #32]
    5d64:	str	x8, [sp, #8]
    5d68:	str	x8, [sp]
    5d6c:	ldur	x0, [x29, #-24]
    5d70:	ldr	x1, [sp, #32]
    5d74:	mov	x2, x9
    5d78:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    5d7c:	cbnz	w0, 5d8c <PyInit__multibytecodec@@Base+0x2e98>
    5d80:	mov	x8, xzr
    5d84:	stur	x8, [x29, #-8]
    5d88:	b	5ed0 <PyInit__multibytecodec@@Base+0x2fdc>
    5d8c:	ldur	x8, [x29, #-16]
    5d90:	ldr	x8, [x8, #304]
    5d94:	ldur	x0, [x29, #-16]
    5d98:	mov	x9, xzr
    5d9c:	mov	x1, x9
    5da0:	blr	x8
    5da4:	str	x0, [sp, #24]
    5da8:	ldr	x8, [sp, #24]
    5dac:	cbnz	x8, 5dbc <PyInit__multibytecodec@@Base+0x2ec8>
    5db0:	mov	x8, xzr
    5db4:	stur	x8, [x29, #-8]
    5db8:	b	5ed0 <PyInit__multibytecodec@@Base+0x2fdc>
    5dbc:	ldur	x0, [x29, #-16]
    5dc0:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5dc4:	add	x1, x1, #0x2f3
    5dc8:	bl	29f0 <PyObject_GetAttrString@plt>
    5dcc:	str	x0, [sp, #8]
    5dd0:	ldr	x8, [sp, #8]
    5dd4:	cbnz	x8, 5ddc <PyInit__multibytecodec@@Base+0x2ee8>
    5dd8:	b	5eb8 <PyInit__multibytecodec@@Base+0x2fc4>
    5ddc:	ldr	x8, [sp, #8]
    5de0:	ldr	x8, [x8, #8]
    5de4:	adrp	x9, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    5de8:	add	x9, x9, #0x8e8
    5dec:	cmp	x8, x9
    5df0:	b.eq	5e10 <PyInit__multibytecodec@@Base+0x2f1c>  // b.none
    5df4:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5df8:	ldr	x8, [x8, #4000]
    5dfc:	ldr	x0, [x8]
    5e00:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5e04:	add	x1, x1, #0xae
    5e08:	bl	2ad0 <PyErr_SetString@plt>
    5e0c:	b	5eb8 <PyInit__multibytecodec@@Base+0x2fc4>
    5e10:	ldr	x8, [sp, #8]
    5e14:	ldr	x8, [x8, #16]
    5e18:	ldr	x9, [sp, #24]
    5e1c:	str	x8, [x9, #16]
    5e20:	ldr	x8, [sp, #16]
    5e24:	ldr	x9, [sp, #24]
    5e28:	str	x8, [x9, #56]
    5e2c:	ldr	x0, [sp, #16]
    5e30:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    5e34:	ldr	x8, [sp, #24]
    5e38:	str	xzr, [x8, #48]
    5e3c:	ldr	x0, [sp]
    5e40:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    5e44:	ldr	x8, [sp, #24]
    5e48:	str	x0, [x8, #32]
    5e4c:	ldr	x8, [sp, #24]
    5e50:	ldr	x8, [x8, #32]
    5e54:	cbnz	x8, 5e5c <PyInit__multibytecodec@@Base+0x2f68>
    5e58:	b	5eb8 <PyInit__multibytecodec@@Base+0x2fc4>
    5e5c:	ldr	x8, [sp, #24]
    5e60:	ldr	x8, [x8, #16]
    5e64:	ldr	x8, [x8, #56]
    5e68:	cbz	x8, 5e98 <PyInit__multibytecodec@@Base+0x2fa4>
    5e6c:	ldr	x8, [sp, #24]
    5e70:	ldr	x8, [x8, #16]
    5e74:	ldr	x8, [x8, #56]
    5e78:	ldr	x9, [sp, #24]
    5e7c:	add	x0, x9, #0x18
    5e80:	ldr	x9, [sp, #24]
    5e84:	ldr	x9, [x9, #16]
    5e88:	ldr	x1, [x9, #8]
    5e8c:	blr	x8
    5e90:	cbz	w0, 5e98 <PyInit__multibytecodec@@Base+0x2fa4>
    5e94:	b	5eb8 <PyInit__multibytecodec@@Base+0x2fc4>
    5e98:	ldr	x2, [sp, #8]
    5e9c:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    5ea0:	add	x0, x0, #0xe7d
    5ea4:	mov	w1, #0x6a0                 	// #1696
    5ea8:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    5eac:	ldr	x8, [sp, #24]
    5eb0:	stur	x8, [x29, #-8]
    5eb4:	b	5ed0 <PyInit__multibytecodec@@Base+0x2fdc>
    5eb8:	ldr	x0, [sp, #24]
    5ebc:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    5ec0:	ldr	x0, [sp, #8]
    5ec4:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    5ec8:	mov	x8, xzr
    5ecc:	stur	x8, [x29, #-8]
    5ed0:	ldur	x0, [x29, #-8]
    5ed4:	ldp	x29, x30, [sp, #64]
    5ed8:	add	sp, sp, #0x50
    5edc:	ret
    5ee0:	sub	sp, sp, #0x40
    5ee4:	stp	x29, x30, [sp, #48]
    5ee8:	add	x29, sp, #0x30
    5eec:	mov	x8, xzr
    5ef0:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5ef4:	ldr	x9, [x9, #4016]
    5ef8:	stur	x0, [x29, #-8]
    5efc:	stur	x1, [x29, #-16]
    5f00:	str	x2, [sp, #24]
    5f04:	str	x8, [sp, #16]
    5f08:	str	x9, [sp, #8]
    5f0c:	ldr	x9, [sp, #24]
    5f10:	cmp	x8, x9
    5f14:	cset	w10, gt
    5f18:	tbnz	w10, #0, 5f28 <PyInit__multibytecodec@@Base+0x3034>
    5f1c:	ldr	x8, [sp, #24]
    5f20:	cmp	x8, #0x1
    5f24:	b.le	5f4c <PyInit__multibytecodec@@Base+0x3058>
    5f28:	ldr	x1, [sp, #24]
    5f2c:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5f30:	add	x0, x0, #0x197
    5f34:	mov	x8, xzr
    5f38:	mov	x2, x8
    5f3c:	mov	x3, #0x1                   	// #1
    5f40:	bl	2be0 <_PyArg_CheckPositional@plt>
    5f44:	cbnz	w0, 5f4c <PyInit__multibytecodec@@Base+0x3058>
    5f48:	b	5f78 <PyInit__multibytecodec@@Base+0x3084>
    5f4c:	ldr	x8, [sp, #24]
    5f50:	cmp	x8, #0x1
    5f54:	b.ge	5f5c <PyInit__multibytecodec@@Base+0x3068>  // b.tcont
    5f58:	b	5f68 <PyInit__multibytecodec@@Base+0x3074>
    5f5c:	ldur	x8, [x29, #-16]
    5f60:	ldr	x8, [x8]
    5f64:	str	x8, [sp, #8]
    5f68:	ldur	x0, [x29, #-8]
    5f6c:	ldr	x1, [sp, #8]
    5f70:	bl	6100 <PyInit__multibytecodec@@Base+0x320c>
    5f74:	str	x0, [sp, #16]
    5f78:	ldr	x0, [sp, #16]
    5f7c:	ldp	x29, x30, [sp, #48]
    5f80:	add	sp, sp, #0x40
    5f84:	ret
    5f88:	sub	sp, sp, #0x40
    5f8c:	stp	x29, x30, [sp, #48]
    5f90:	add	x29, sp, #0x30
    5f94:	mov	x8, xzr
    5f98:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    5f9c:	ldr	x9, [x9, #4016]
    5fa0:	stur	x0, [x29, #-8]
    5fa4:	stur	x1, [x29, #-16]
    5fa8:	str	x2, [sp, #24]
    5fac:	str	x8, [sp, #16]
    5fb0:	str	x9, [sp, #8]
    5fb4:	ldr	x9, [sp, #24]
    5fb8:	cmp	x8, x9
    5fbc:	cset	w10, gt
    5fc0:	tbnz	w10, #0, 5fd0 <PyInit__multibytecodec@@Base+0x30dc>
    5fc4:	ldr	x8, [sp, #24]
    5fc8:	cmp	x8, #0x1
    5fcc:	b.le	5ff4 <PyInit__multibytecodec@@Base+0x3100>
    5fd0:	ldr	x1, [sp, #24]
    5fd4:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    5fd8:	add	x0, x0, #0x19c
    5fdc:	mov	x8, xzr
    5fe0:	mov	x2, x8
    5fe4:	mov	x3, #0x1                   	// #1
    5fe8:	bl	2be0 <_PyArg_CheckPositional@plt>
    5fec:	cbnz	w0, 5ff4 <PyInit__multibytecodec@@Base+0x3100>
    5ff0:	b	6020 <PyInit__multibytecodec@@Base+0x312c>
    5ff4:	ldr	x8, [sp, #24]
    5ff8:	cmp	x8, #0x1
    5ffc:	b.ge	6004 <PyInit__multibytecodec@@Base+0x3110>  // b.tcont
    6000:	b	6010 <PyInit__multibytecodec@@Base+0x311c>
    6004:	ldur	x8, [x29, #-16]
    6008:	ldr	x8, [x8]
    600c:	str	x8, [sp, #8]
    6010:	ldur	x0, [x29, #-8]
    6014:	ldr	x1, [sp, #8]
    6018:	bl	6544 <PyInit__multibytecodec@@Base+0x3650>
    601c:	str	x0, [sp, #16]
    6020:	ldr	x0, [sp, #16]
    6024:	ldp	x29, x30, [sp, #48]
    6028:	add	sp, sp, #0x40
    602c:	ret
    6030:	sub	sp, sp, #0x40
    6034:	stp	x29, x30, [sp, #48]
    6038:	add	x29, sp, #0x30
    603c:	mov	x8, xzr
    6040:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6044:	ldr	x9, [x9, #4016]
    6048:	stur	x0, [x29, #-8]
    604c:	stur	x1, [x29, #-16]
    6050:	str	x2, [sp, #24]
    6054:	str	x8, [sp, #16]
    6058:	str	x9, [sp, #8]
    605c:	ldr	x9, [sp, #24]
    6060:	cmp	x8, x9
    6064:	cset	w10, gt
    6068:	tbnz	w10, #0, 6078 <PyInit__multibytecodec@@Base+0x3184>
    606c:	ldr	x8, [sp, #24]
    6070:	cmp	x8, #0x1
    6074:	b.le	609c <PyInit__multibytecodec@@Base+0x31a8>
    6078:	ldr	x1, [sp, #24]
    607c:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    6080:	add	x0, x0, #0x1a5
    6084:	mov	x8, xzr
    6088:	mov	x2, x8
    608c:	mov	x3, #0x1                   	// #1
    6090:	bl	2be0 <_PyArg_CheckPositional@plt>
    6094:	cbnz	w0, 609c <PyInit__multibytecodec@@Base+0x31a8>
    6098:	b	60c8 <PyInit__multibytecodec@@Base+0x31d4>
    609c:	ldr	x8, [sp, #24]
    60a0:	cmp	x8, #0x1
    60a4:	b.ge	60ac <PyInit__multibytecodec@@Base+0x31b8>  // b.tcont
    60a8:	b	60b8 <PyInit__multibytecodec@@Base+0x31c4>
    60ac:	ldur	x8, [x29, #-16]
    60b0:	ldr	x8, [x8]
    60b4:	str	x8, [sp, #8]
    60b8:	ldur	x0, [x29, #-8]
    60bc:	ldr	x1, [sp, #8]
    60c0:	bl	660c <PyInit__multibytecodec@@Base+0x3718>
    60c4:	str	x0, [sp, #16]
    60c8:	ldr	x0, [sp, #16]
    60cc:	ldp	x29, x30, [sp, #48]
    60d0:	add	sp, sp, #0x40
    60d4:	ret
    60d8:	sub	sp, sp, #0x20
    60dc:	stp	x29, x30, [sp, #16]
    60e0:	add	x29, sp, #0x10
    60e4:	str	x0, [sp, #8]
    60e8:	str	x1, [sp]
    60ec:	ldr	x0, [sp, #8]
    60f0:	bl	6714 <PyInit__multibytecodec@@Base+0x3820>
    60f4:	ldp	x29, x30, [sp, #16]
    60f8:	add	sp, sp, #0x20
    60fc:	ret
    6100:	sub	sp, sp, #0x30
    6104:	stp	x29, x30, [sp, #32]
    6108:	add	x29, sp, #0x20
    610c:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6110:	ldr	x8, [x8, #4016]
    6114:	str	x0, [sp, #16]
    6118:	str	x1, [sp, #8]
    611c:	ldr	x9, [sp, #8]
    6120:	cmp	x9, x8
    6124:	b.ne	6134 <PyInit__multibytecodec@@Base+0x3240>  // b.any
    6128:	mov	x8, #0xffffffffffffffff    	// #-1
    612c:	str	x8, [sp]
    6130:	b	617c <PyInit__multibytecodec@@Base+0x3288>
    6134:	ldr	x8, [sp, #8]
    6138:	ldr	x8, [x8, #8]
    613c:	ldr	x8, [x8, #168]
    6140:	and	x8, x8, #0x1000000
    6144:	cbz	x8, 6158 <PyInit__multibytecodec@@Base+0x3264>
    6148:	ldr	x0, [sp, #8]
    614c:	bl	2b50 <PyLong_AsSsize_t@plt>
    6150:	str	x0, [sp]
    6154:	b	617c <PyInit__multibytecodec@@Base+0x3288>
    6158:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    615c:	ldr	x8, [x8, #4000]
    6160:	ldr	x0, [x8]
    6164:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    6168:	add	x1, x1, #0x1af
    616c:	bl	2ad0 <PyErr_SetString@plt>
    6170:	mov	x8, xzr
    6174:	stur	x8, [x29, #-8]
    6178:	b	61b8 <PyInit__multibytecodec@@Base+0x32c4>
    617c:	ldr	x8, [sp]
    6180:	mov	x9, #0xffffffffffffffff    	// #-1
    6184:	cmp	x8, x9
    6188:	b.ne	61a0 <PyInit__multibytecodec@@Base+0x32ac>  // b.any
    618c:	bl	2bf0 <PyErr_Occurred@plt>
    6190:	cbz	x0, 61a0 <PyInit__multibytecodec@@Base+0x32ac>
    6194:	mov	x8, xzr
    6198:	stur	x8, [x29, #-8]
    619c:	b	61b8 <PyInit__multibytecodec@@Base+0x32c4>
    61a0:	ldr	x0, [sp, #16]
    61a4:	ldr	x2, [sp]
    61a8:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    61ac:	add	x1, x1, #0x197
    61b0:	bl	61c8 <PyInit__multibytecodec@@Base+0x32d4>
    61b4:	stur	x0, [x29, #-8]
    61b8:	ldur	x0, [x29, #-8]
    61bc:	ldp	x29, x30, [sp, #32]
    61c0:	add	sp, sp, #0x30
    61c4:	ret
    61c8:	sub	sp, sp, #0xd0
    61cc:	stp	x29, x30, [sp, #192]
    61d0:	add	x29, sp, #0xc0
    61d4:	stur	x0, [x29, #-16]
    61d8:	stur	x1, [x29, #-24]
    61dc:	stur	x2, [x29, #-32]
    61e0:	ldur	x8, [x29, #-32]
    61e4:	cbnz	x8, 6204 <PyInit__multibytecodec@@Base+0x3310>
    61e8:	mov	x8, xzr
    61ec:	mov	x0, x8
    61f0:	mov	w9, wzr
    61f4:	mov	w1, w9
    61f8:	bl	2de0 <PyUnicode_New@plt>
    61fc:	stur	x0, [x29, #-8]
    6200:	b	6534 <PyInit__multibytecodec@@Base+0x3640>
    6204:	add	x8, sp, #0x48
    6208:	add	x0, x8, #0x20
    620c:	str	x8, [sp, #16]
    6210:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    6214:	mov	x8, xzr
    6218:	ldr	x9, [sp, #16]
    621c:	str	x8, [x9, #24]
    6220:	str	x8, [sp, #64]
    6224:	ldur	x8, [x29, #-32]
    6228:	cmp	x8, #0x0
    622c:	cset	w9, ge  // ge = tcont
    6230:	tbnz	w9, #0, 6254 <PyInit__multibytecodec@@Base+0x3360>
    6234:	ldur	x8, [x29, #-16]
    6238:	ldr	x0, [x8, #56]
    623c:	ldur	x1, [x29, #-24]
    6240:	mov	x8, xzr
    6244:	mov	x2, x8
    6248:	bl	2c40 <_PyObject_CallMethod_SizeT@plt>
    624c:	str	x0, [sp, #64]
    6250:	b	6274 <PyInit__multibytecodec@@Base+0x3380>
    6254:	ldur	x8, [x29, #-16]
    6258:	ldr	x0, [x8, #56]
    625c:	ldur	x1, [x29, #-24]
    6260:	ldur	x3, [x29, #-32]
    6264:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    6268:	add	x2, x2, #0x1c8
    626c:	bl	2c40 <_PyObject_CallMethod_SizeT@plt>
    6270:	str	x0, [sp, #64]
    6274:	ldr	x8, [sp, #64]
    6278:	cbnz	x8, 6280 <PyInit__multibytecodec@@Base+0x338c>
    627c:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    6280:	ldr	x8, [sp, #64]
    6284:	ldr	x8, [x8, #8]
    6288:	ldr	x8, [x8, #168]
    628c:	and	x8, x8, #0x8000000
    6290:	cbnz	x8, 62bc <PyInit__multibytecodec@@Base+0x33c8>
    6294:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6298:	ldr	x8, [x8, #4000]
    629c:	ldr	x0, [x8]
    62a0:	ldr	x8, [sp, #64]
    62a4:	ldr	x8, [x8, #8]
    62a8:	ldr	x2, [x8, #24]
    62ac:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    62b0:	add	x1, x1, #0x1ca
    62b4:	bl	2d50 <PyErr_Format@plt>
    62b8:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    62bc:	ldr	x8, [sp, #64]
    62c0:	ldr	x8, [x8, #16]
    62c4:	cmp	x8, #0x0
    62c8:	cset	w9, eq  // eq = none
    62cc:	and	w9, w9, #0x1
    62d0:	str	w9, [sp, #44]
    62d4:	ldur	x8, [x29, #-16]
    62d8:	ldr	x8, [x8, #48]
    62dc:	cmp	x8, #0x0
    62e0:	cset	w9, le
    62e4:	tbnz	w9, #0, 63b4 <PyInit__multibytecodec@@Base+0x34c0>
    62e8:	ldr	x8, [sp, #64]
    62ec:	ldr	x8, [x8, #16]
    62f0:	ldur	x9, [x29, #-16]
    62f4:	ldr	x9, [x9, #48]
    62f8:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
    62fc:	subs	x9, x10, x9
    6300:	cmp	x8, x9
    6304:	b.le	6310 <PyInit__multibytecodec@@Base+0x341c>
    6308:	bl	2a60 <PyErr_NoMemory@plt>
    630c:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    6310:	ldr	x8, [sp, #64]
    6314:	ldr	x8, [x8, #16]
    6318:	ldur	x9, [x29, #-16]
    631c:	ldr	x9, [x9, #48]
    6320:	add	x8, x8, x9
    6324:	str	x8, [sp, #48]
    6328:	ldr	x1, [sp, #48]
    632c:	mov	x8, xzr
    6330:	mov	x0, x8
    6334:	bl	2a20 <PyBytes_FromStringAndSize@plt>
    6338:	str	x0, [sp, #32]
    633c:	ldr	x8, [sp, #32]
    6340:	cbnz	x8, 6348 <PyInit__multibytecodec@@Base+0x3454>
    6344:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    6348:	ldr	x8, [sp, #32]
    634c:	add	x8, x8, #0x20
    6350:	str	x8, [sp, #24]
    6354:	ldr	x0, [sp, #24]
    6358:	ldur	x8, [x29, #-16]
    635c:	add	x1, x8, #0x28
    6360:	ldur	x8, [x29, #-16]
    6364:	ldr	x2, [x8, #48]
    6368:	bl	2960 <memcpy@plt>
    636c:	ldr	x8, [sp, #24]
    6370:	ldur	x9, [x29, #-16]
    6374:	ldr	x9, [x9, #48]
    6378:	add	x0, x8, x9
    637c:	ldr	x8, [sp, #64]
    6380:	add	x1, x8, #0x20
    6384:	ldr	x8, [sp, #64]
    6388:	ldr	x2, [x8, #16]
    638c:	bl	2960 <memcpy@plt>
    6390:	ldr	x2, [sp, #64]
    6394:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6398:	add	x0, x0, #0xe7d
    639c:	mov	w1, #0x5ce                 	// #1486
    63a0:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    63a4:	ldr	x8, [sp, #32]
    63a8:	str	x8, [sp, #64]
    63ac:	ldur	x8, [x29, #-16]
    63b0:	str	xzr, [x8, #48]
    63b4:	ldr	x8, [sp, #64]
    63b8:	ldr	x8, [x8, #16]
    63bc:	str	x8, [sp, #48]
    63c0:	ldr	x8, [sp, #64]
    63c4:	add	x1, x8, #0x20
    63c8:	ldr	x2, [sp, #48]
    63cc:	add	x0, sp, #0x48
    63d0:	bl	5344 <PyInit__multibytecodec@@Base+0x2450>
    63d4:	cbz	w0, 63dc <PyInit__multibytecodec@@Base+0x34e8>
    63d8:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    63dc:	ldr	x8, [sp, #48]
    63e0:	cmp	x8, #0x0
    63e4:	cset	w9, le
    63e8:	tbnz	w9, #0, 6400 <PyInit__multibytecodec@@Base+0x350c>
    63ec:	ldur	x0, [x29, #-16]
    63f0:	add	x1, sp, #0x48
    63f4:	bl	53a4 <PyInit__multibytecodec@@Base+0x24b0>
    63f8:	cbz	w0, 6400 <PyInit__multibytecodec@@Base+0x350c>
    63fc:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    6400:	ldr	w8, [sp, #44]
    6404:	cbnz	w8, 6418 <PyInit__multibytecodec@@Base+0x3524>
    6408:	ldur	x8, [x29, #-32]
    640c:	cmp	x8, #0x0
    6410:	cset	w9, ge  // ge = tcont
    6414:	tbnz	w9, #0, 6458 <PyInit__multibytecodec@@Base+0x3564>
    6418:	add	x8, sp, #0x48
    641c:	ldr	x9, [sp, #72]
    6420:	ldr	x8, [x8, #16]
    6424:	cmp	x9, x8
    6428:	b.cs	6458 <PyInit__multibytecodec@@Base+0x3564>  // b.hs, b.nlast
    642c:	ldur	x8, [x29, #-16]
    6430:	ldr	x0, [x8, #16]
    6434:	ldur	x8, [x29, #-16]
    6438:	add	x1, x8, #0x18
    643c:	ldur	x8, [x29, #-16]
    6440:	ldr	x3, [x8, #32]
    6444:	add	x2, sp, #0x48
    6448:	mov	x4, #0xfffffffffffffffe    	// #-2
    644c:	bl	5488 <PyInit__multibytecodec@@Base+0x2594>
    6450:	cbz	w0, 6458 <PyInit__multibytecodec@@Base+0x3564>
    6454:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    6458:	add	x8, sp, #0x48
    645c:	ldr	x9, [sp, #72]
    6460:	ldr	x8, [x8, #16]
    6464:	cmp	x9, x8
    6468:	b.cs	6480 <PyInit__multibytecodec@@Base+0x358c>  // b.hs, b.nlast
    646c:	ldur	x0, [x29, #-16]
    6470:	add	x1, sp, #0x48
    6474:	bl	5870 <PyInit__multibytecodec@@Base+0x297c>
    6478:	cbz	w0, 6480 <PyInit__multibytecodec@@Base+0x358c>
    647c:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    6480:	ldr	x2, [sp, #64]
    6484:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6488:	add	x0, x0, #0xe7d
    648c:	mov	w1, #0x5e9                 	// #1513
    6490:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6494:	mov	x8, xzr
    6498:	str	x8, [sp, #64]
    649c:	ldur	x8, [x29, #-32]
    64a0:	cmp	x8, #0x0
    64a4:	cset	w9, lt  // lt = tstop
    64a8:	tbnz	w9, #0, 64bc <PyInit__multibytecodec@@Base+0x35c8>
    64ac:	ldr	x8, [sp, #136]
    64b0:	cbnz	x8, 64bc <PyInit__multibytecodec@@Base+0x35c8>
    64b4:	ldr	x8, [sp, #48]
    64b8:	cbnz	x8, 64c0 <PyInit__multibytecodec@@Base+0x35cc>
    64bc:	b	64cc <PyInit__multibytecodec@@Base+0x35d8>
    64c0:	mov	x8, #0x1                   	// #1
    64c4:	stur	x8, [x29, #-32]
    64c8:	b	6224 <PyInit__multibytecodec@@Base+0x3330>
    64cc:	add	x8, sp, #0x48
    64d0:	add	x0, x8, #0x20
    64d4:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    64d8:	str	x0, [sp, #56]
    64dc:	ldr	x8, [sp, #56]
    64e0:	cbnz	x8, 64e8 <PyInit__multibytecodec@@Base+0x35f4>
    64e4:	b	6508 <PyInit__multibytecodec@@Base+0x3614>
    64e8:	ldr	x0, [sp, #64]
    64ec:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    64f0:	add	x8, sp, #0x48
    64f4:	ldr	x0, [x8, #24]
    64f8:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    64fc:	ldr	x8, [sp, #56]
    6500:	stur	x8, [x29, #-8]
    6504:	b	6534 <PyInit__multibytecodec@@Base+0x3640>
    6508:	ldr	x0, [sp, #64]
    650c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    6510:	add	x8, sp, #0x48
    6514:	ldr	x0, [x8, #24]
    6518:	str	x8, [sp, #8]
    651c:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    6520:	ldr	x8, [sp, #8]
    6524:	add	x0, x8, #0x20
    6528:	bl	2ab0 <_PyUnicodeWriter_Dealloc@plt>
    652c:	mov	x8, xzr
    6530:	stur	x8, [x29, #-8]
    6534:	ldur	x0, [x29, #-8]
    6538:	ldp	x29, x30, [sp, #192]
    653c:	add	sp, sp, #0xd0
    6540:	ret
    6544:	sub	sp, sp, #0x30
    6548:	stp	x29, x30, [sp, #32]
    654c:	add	x29, sp, #0x20
    6550:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6554:	ldr	x8, [x8, #4016]
    6558:	str	x0, [sp, #16]
    655c:	str	x1, [sp, #8]
    6560:	ldr	x9, [sp, #8]
    6564:	cmp	x9, x8
    6568:	b.ne	6578 <PyInit__multibytecodec@@Base+0x3684>  // b.any
    656c:	mov	x8, #0xffffffffffffffff    	// #-1
    6570:	str	x8, [sp]
    6574:	b	65c0 <PyInit__multibytecodec@@Base+0x36cc>
    6578:	ldr	x8, [sp, #8]
    657c:	ldr	x8, [x8, #8]
    6580:	ldr	x8, [x8, #168]
    6584:	and	x8, x8, #0x1000000
    6588:	cbz	x8, 659c <PyInit__multibytecodec@@Base+0x36a8>
    658c:	ldr	x0, [sp, #8]
    6590:	bl	2b50 <PyLong_AsSsize_t@plt>
    6594:	str	x0, [sp]
    6598:	b	65c0 <PyInit__multibytecodec@@Base+0x36cc>
    659c:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    65a0:	ldr	x8, [x8, #4000]
    65a4:	ldr	x0, [x8]
    65a8:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    65ac:	add	x1, x1, #0x1af
    65b0:	bl	2ad0 <PyErr_SetString@plt>
    65b4:	mov	x8, xzr
    65b8:	stur	x8, [x29, #-8]
    65bc:	b	65fc <PyInit__multibytecodec@@Base+0x3708>
    65c0:	ldr	x8, [sp]
    65c4:	mov	x9, #0xffffffffffffffff    	// #-1
    65c8:	cmp	x8, x9
    65cc:	b.ne	65e4 <PyInit__multibytecodec@@Base+0x36f0>  // b.any
    65d0:	bl	2bf0 <PyErr_Occurred@plt>
    65d4:	cbz	x0, 65e4 <PyInit__multibytecodec@@Base+0x36f0>
    65d8:	mov	x8, xzr
    65dc:	stur	x8, [x29, #-8]
    65e0:	b	65fc <PyInit__multibytecodec@@Base+0x3708>
    65e4:	ldr	x0, [sp, #16]
    65e8:	ldr	x2, [sp]
    65ec:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    65f0:	add	x1, x1, #0x19c
    65f4:	bl	61c8 <PyInit__multibytecodec@@Base+0x32d4>
    65f8:	stur	x0, [x29, #-8]
    65fc:	ldur	x0, [x29, #-8]
    6600:	ldp	x29, x30, [sp, #32]
    6604:	add	sp, sp, #0x30
    6608:	ret
    660c:	sub	sp, sp, #0x40
    6610:	stp	x29, x30, [sp, #48]
    6614:	add	x29, sp, #0x30
    6618:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    661c:	ldr	x8, [x8, #4016]
    6620:	stur	x0, [x29, #-16]
    6624:	str	x1, [sp, #24]
    6628:	ldr	x9, [sp, #24]
    662c:	cmp	x9, x8
    6630:	b.ne	6640 <PyInit__multibytecodec@@Base+0x374c>  // b.any
    6634:	mov	x8, #0xffffffffffffffff    	// #-1
    6638:	str	x8, [sp]
    663c:	b	6688 <PyInit__multibytecodec@@Base+0x3794>
    6640:	ldr	x8, [sp, #24]
    6644:	ldr	x8, [x8, #8]
    6648:	ldr	x8, [x8, #168]
    664c:	and	x8, x8, #0x1000000
    6650:	cbz	x8, 6664 <PyInit__multibytecodec@@Base+0x3770>
    6654:	ldr	x0, [sp, #24]
    6658:	bl	2b50 <PyLong_AsSsize_t@plt>
    665c:	str	x0, [sp]
    6660:	b	6688 <PyInit__multibytecodec@@Base+0x3794>
    6664:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6668:	ldr	x8, [x8, #4000]
    666c:	ldr	x0, [x8]
    6670:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    6674:	add	x1, x1, #0x1af
    6678:	bl	2ad0 <PyErr_SetString@plt>
    667c:	mov	x8, xzr
    6680:	stur	x8, [x29, #-8]
    6684:	b	6704 <PyInit__multibytecodec@@Base+0x3810>
    6688:	ldr	x8, [sp]
    668c:	mov	x9, #0xffffffffffffffff    	// #-1
    6690:	cmp	x8, x9
    6694:	b.ne	66ac <PyInit__multibytecodec@@Base+0x37b8>  // b.any
    6698:	bl	2bf0 <PyErr_Occurred@plt>
    669c:	cbz	x0, 66ac <PyInit__multibytecodec@@Base+0x37b8>
    66a0:	mov	x8, xzr
    66a4:	stur	x8, [x29, #-8]
    66a8:	b	6704 <PyInit__multibytecodec@@Base+0x3810>
    66ac:	ldur	x0, [x29, #-16]
    66b0:	ldr	x2, [sp]
    66b4:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    66b8:	add	x1, x1, #0x197
    66bc:	bl	61c8 <PyInit__multibytecodec@@Base+0x32d4>
    66c0:	str	x0, [sp, #16]
    66c4:	ldr	x8, [sp, #16]
    66c8:	cbnz	x8, 66d8 <PyInit__multibytecodec@@Base+0x37e4>
    66cc:	mov	x8, xzr
    66d0:	stur	x8, [x29, #-8]
    66d4:	b	6704 <PyInit__multibytecodec@@Base+0x3810>
    66d8:	ldr	x0, [sp, #16]
    66dc:	mov	w1, #0x1                   	// #1
    66e0:	bl	2dc0 <PyUnicode_Splitlines@plt>
    66e4:	str	x0, [sp, #8]
    66e8:	ldr	x2, [sp, #16]
    66ec:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    66f0:	add	x0, x0, #0xe7d
    66f4:	mov	w1, #0x65b                 	// #1627
    66f8:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    66fc:	ldr	x8, [sp, #8]
    6700:	stur	x8, [x29, #-8]
    6704:	ldur	x0, [x29, #-8]
    6708:	ldp	x29, x30, [sp, #48]
    670c:	add	sp, sp, #0x40
    6710:	ret
    6714:	sub	sp, sp, #0x30
    6718:	stp	x29, x30, [sp, #32]
    671c:	add	x29, sp, #0x20
    6720:	str	x0, [sp, #16]
    6724:	ldr	x8, [sp, #16]
    6728:	ldr	x8, [x8, #16]
    672c:	ldr	x8, [x8, #64]
    6730:	cbz	x8, 6768 <PyInit__multibytecodec@@Base+0x3874>
    6734:	ldr	x8, [sp, #16]
    6738:	ldr	x8, [x8, #16]
    673c:	ldr	x8, [x8, #64]
    6740:	ldr	x9, [sp, #16]
    6744:	add	x0, x9, #0x18
    6748:	ldr	x9, [sp, #16]
    674c:	ldr	x9, [x9, #16]
    6750:	ldr	x1, [x9, #8]
    6754:	blr	x8
    6758:	cbz	x0, 6768 <PyInit__multibytecodec@@Base+0x3874>
    675c:	mov	x8, xzr
    6760:	stur	x8, [x29, #-8]
    6764:	b	678c <PyInit__multibytecodec@@Base+0x3898>
    6768:	ldr	x8, [sp, #16]
    676c:	str	xzr, [x8, #48]
    6770:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6774:	ldr	x8, [x8, #4016]
    6778:	mov	x0, x8
    677c:	str	x8, [sp, #8]
    6780:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    6784:	ldr	x8, [sp, #8]
    6788:	stur	x8, [x29, #-8]
    678c:	ldur	x0, [x29, #-8]
    6790:	ldp	x29, x30, [sp, #32]
    6794:	add	sp, sp, #0x30
    6798:	ret
    679c:	sub	sp, sp, #0x20
    67a0:	stp	x29, x30, [sp, #16]
    67a4:	add	x29, sp, #0x10
    67a8:	str	x0, [sp, #8]
    67ac:	ldr	x0, [sp, #8]
    67b0:	bl	2e00 <PyObject_GC_UnTrack@plt>
    67b4:	ldr	x8, [sp, #8]
    67b8:	ldr	x8, [x8, #32]
    67bc:	cbz	x8, 67fc <PyInit__multibytecodec@@Base+0x3908>
    67c0:	ldr	x8, [sp, #8]
    67c4:	ldr	x8, [x8, #32]
    67c8:	cmp	x8, #0x1
    67cc:	b.cc	67e4 <PyInit__multibytecodec@@Base+0x38f0>  // b.lo, b.ul, b.last
    67d0:	ldr	x8, [sp, #8]
    67d4:	ldr	x8, [x8, #32]
    67d8:	mov	x9, #0x3                   	// #3
    67dc:	cmp	x9, x8
    67e0:	b.cs	67fc <PyInit__multibytecodec@@Base+0x3908>  // b.hs, b.nlast
    67e4:	ldr	x8, [sp, #8]
    67e8:	ldr	x2, [x8, #32]
    67ec:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    67f0:	add	x0, x0, #0xe7d
    67f4:	mov	w1, #0x7a5                 	// #1957
    67f8:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    67fc:	ldr	x8, [sp, #8]
    6800:	ldr	x0, [x8, #48]
    6804:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    6808:	ldr	x8, [sp, #8]
    680c:	ldr	x8, [x8, #8]
    6810:	ldr	x8, [x8, #320]
    6814:	ldr	x0, [sp, #8]
    6818:	blr	x8
    681c:	ldp	x29, x30, [sp, #16]
    6820:	add	sp, sp, #0x20
    6824:	ret
    6828:	sub	sp, sp, #0x40
    682c:	stp	x29, x30, [sp, #48]
    6830:	add	x29, sp, #0x30
    6834:	stur	x0, [x29, #-16]
    6838:	str	x1, [sp, #24]
    683c:	str	x2, [sp, #16]
    6840:	ldur	x8, [x29, #-16]
    6844:	ldr	x8, [x8, #32]
    6848:	cmp	x8, #0x1
    684c:	b.cc	6864 <PyInit__multibytecodec@@Base+0x3970>  // b.lo, b.ul, b.last
    6850:	ldur	x8, [x29, #-16]
    6854:	ldr	x8, [x8, #32]
    6858:	mov	x9, #0x3                   	// #3
    685c:	cmp	x9, x8
    6860:	b.cs	689c <PyInit__multibytecodec@@Base+0x39a8>  // b.hs, b.nlast
    6864:	ldur	x8, [x29, #-16]
    6868:	ldr	x8, [x8, #32]
    686c:	cbz	x8, 689c <PyInit__multibytecodec@@Base+0x39a8>
    6870:	ldr	x8, [sp, #24]
    6874:	ldur	x9, [x29, #-16]
    6878:	ldr	x0, [x9, #32]
    687c:	ldr	x1, [sp, #16]
    6880:	blr	x8
    6884:	str	w0, [sp, #12]
    6888:	ldr	w10, [sp, #12]
    688c:	cbz	w10, 689c <PyInit__multibytecodec@@Base+0x39a8>
    6890:	ldr	w8, [sp, #12]
    6894:	stur	w8, [x29, #-4]
    6898:	b	68d8 <PyInit__multibytecodec@@Base+0x39e4>
    689c:	ldur	x8, [x29, #-16]
    68a0:	ldr	x8, [x8, #48]
    68a4:	cbz	x8, 68d4 <PyInit__multibytecodec@@Base+0x39e0>
    68a8:	ldr	x8, [sp, #24]
    68ac:	ldur	x9, [x29, #-16]
    68b0:	ldr	x0, [x9, #48]
    68b4:	ldr	x1, [sp, #16]
    68b8:	blr	x8
    68bc:	str	w0, [sp, #8]
    68c0:	ldr	w10, [sp, #8]
    68c4:	cbz	w10, 68d4 <PyInit__multibytecodec@@Base+0x39e0>
    68c8:	ldr	w8, [sp, #8]
    68cc:	stur	w8, [x29, #-4]
    68d0:	b	68d8 <PyInit__multibytecodec@@Base+0x39e4>
    68d4:	stur	wzr, [x29, #-4]
    68d8:	ldur	w0, [x29, #-4]
    68dc:	ldp	x29, x30, [sp, #48]
    68e0:	add	sp, sp, #0x40
    68e4:	ret
    68e8:	sub	sp, sp, #0x20
    68ec:	mov	w8, wzr
    68f0:	str	x0, [sp, #24]
    68f4:	str	x1, [sp, #16]
    68f8:	str	x2, [sp, #8]
    68fc:	mov	w0, w8
    6900:	add	sp, sp, #0x20
    6904:	ret
    6908:	sub	sp, sp, #0x50
    690c:	stp	x29, x30, [sp, #64]
    6910:	add	x29, sp, #0x40
    6914:	mov	x8, xzr
    6918:	adrp	x9, 8000 <PyInit__multibytecodec@@Base+0x510c>
    691c:	add	x9, x9, #0x25c
    6920:	adrp	x3, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    6924:	add	x3, x3, #0xe00
    6928:	add	x4, sp, #0x10
    692c:	mov	x5, sp
    6930:	stur	x0, [x29, #-16]
    6934:	stur	x1, [x29, #-24]
    6938:	str	x2, [sp, #32]
    693c:	str	x8, [sp, #8]
    6940:	str	x8, [sp]
    6944:	ldur	x0, [x29, #-24]
    6948:	ldr	x1, [sp, #32]
    694c:	mov	x2, x9
    6950:	bl	2c80 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    6954:	cbnz	w0, 6964 <PyInit__multibytecodec@@Base+0x3a70>
    6958:	mov	x8, xzr
    695c:	stur	x8, [x29, #-8]
    6960:	b	6aac <PyInit__multibytecodec@@Base+0x3bb8>
    6964:	ldur	x8, [x29, #-16]
    6968:	ldr	x8, [x8, #304]
    696c:	ldur	x0, [x29, #-16]
    6970:	mov	x9, xzr
    6974:	mov	x1, x9
    6978:	blr	x8
    697c:	str	x0, [sp, #24]
    6980:	ldr	x8, [sp, #24]
    6984:	cbnz	x8, 6994 <PyInit__multibytecodec@@Base+0x3aa0>
    6988:	mov	x8, xzr
    698c:	stur	x8, [x29, #-8]
    6990:	b	6aac <PyInit__multibytecodec@@Base+0x3bb8>
    6994:	ldur	x0, [x29, #-16]
    6998:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    699c:	add	x1, x1, #0x2f3
    69a0:	bl	29f0 <PyObject_GetAttrString@plt>
    69a4:	str	x0, [sp, #8]
    69a8:	ldr	x8, [sp, #8]
    69ac:	cbnz	x8, 69b4 <PyInit__multibytecodec@@Base+0x3ac0>
    69b0:	b	6a94 <PyInit__multibytecodec@@Base+0x3ba0>
    69b4:	ldr	x8, [sp, #8]
    69b8:	ldr	x8, [x8, #8]
    69bc:	adrp	x9, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    69c0:	add	x9, x9, #0x8e8
    69c4:	cmp	x8, x9
    69c8:	b.eq	69e8 <PyInit__multibytecodec@@Base+0x3af4>  // b.none
    69cc:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    69d0:	ldr	x8, [x8, #4000]
    69d4:	ldr	x0, [x8]
    69d8:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    69dc:	add	x1, x1, #0xae
    69e0:	bl	2ad0 <PyErr_SetString@plt>
    69e4:	b	6a94 <PyInit__multibytecodec@@Base+0x3ba0>
    69e8:	ldr	x8, [sp, #8]
    69ec:	ldr	x8, [x8, #16]
    69f0:	ldr	x9, [sp, #24]
    69f4:	str	x8, [x9, #16]
    69f8:	ldr	x8, [sp, #16]
    69fc:	ldr	x9, [sp, #24]
    6a00:	str	x8, [x9, #48]
    6a04:	ldr	x0, [sp, #16]
    6a08:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    6a0c:	ldr	x8, [sp, #24]
    6a10:	mov	x9, xzr
    6a14:	str	x9, [x8, #40]
    6a18:	ldr	x0, [sp]
    6a1c:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    6a20:	ldr	x8, [sp, #24]
    6a24:	str	x0, [x8, #32]
    6a28:	ldr	x8, [sp, #24]
    6a2c:	ldr	x8, [x8, #32]
    6a30:	cbnz	x8, 6a38 <PyInit__multibytecodec@@Base+0x3b44>
    6a34:	b	6a94 <PyInit__multibytecodec@@Base+0x3ba0>
    6a38:	ldr	x8, [sp, #24]
    6a3c:	ldr	x8, [x8, #16]
    6a40:	ldr	x8, [x8, #32]
    6a44:	cbz	x8, 6a74 <PyInit__multibytecodec@@Base+0x3b80>
    6a48:	ldr	x8, [sp, #24]
    6a4c:	ldr	x8, [x8, #16]
    6a50:	ldr	x8, [x8, #32]
    6a54:	ldr	x9, [sp, #24]
    6a58:	add	x0, x9, #0x18
    6a5c:	ldr	x9, [sp, #24]
    6a60:	ldr	x9, [x9, #16]
    6a64:	ldr	x1, [x9, #8]
    6a68:	blr	x8
    6a6c:	cbz	w0, 6a74 <PyInit__multibytecodec@@Base+0x3b80>
    6a70:	b	6a94 <PyInit__multibytecodec@@Base+0x3ba0>
    6a74:	ldr	x2, [sp, #8]
    6a78:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6a7c:	add	x0, x0, #0xe7d
    6a80:	mov	w1, #0x788                 	// #1928
    6a84:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6a88:	ldr	x8, [sp, #24]
    6a8c:	stur	x8, [x29, #-8]
    6a90:	b	6aac <PyInit__multibytecodec@@Base+0x3bb8>
    6a94:	ldr	x0, [sp, #24]
    6a98:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    6a9c:	ldr	x0, [sp, #8]
    6aa0:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    6aa4:	mov	x8, xzr
    6aa8:	stur	x8, [x29, #-8]
    6aac:	ldur	x0, [x29, #-8]
    6ab0:	ldp	x29, x30, [sp, #64]
    6ab4:	add	sp, sp, #0x50
    6ab8:	ret
    6abc:	sub	sp, sp, #0x30
    6ac0:	stp	x29, x30, [sp, #32]
    6ac4:	add	x29, sp, #0x20
    6ac8:	str	x0, [sp, #16]
    6acc:	str	x1, [sp, #8]
    6ad0:	ldr	x0, [sp, #16]
    6ad4:	ldr	x1, [sp, #8]
    6ad8:	bl	6c58 <PyInit__multibytecodec@@Base+0x3d64>
    6adc:	cbz	w0, 6aec <PyInit__multibytecodec@@Base+0x3bf8>
    6ae0:	mov	x8, xzr
    6ae4:	stur	x8, [x29, #-8]
    6ae8:	b	6b08 <PyInit__multibytecodec@@Base+0x3c14>
    6aec:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6af0:	ldr	x8, [x8, #4016]
    6af4:	mov	x0, x8
    6af8:	str	x8, [sp]
    6afc:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    6b00:	ldr	x8, [sp]
    6b04:	stur	x8, [x29, #-8]
    6b08:	ldur	x0, [x29, #-8]
    6b0c:	ldp	x29, x30, [sp, #32]
    6b10:	add	sp, sp, #0x30
    6b14:	ret
    6b18:	sub	sp, sp, #0x50
    6b1c:	stp	x29, x30, [sp, #64]
    6b20:	add	x29, sp, #0x40
    6b24:	stur	x0, [x29, #-16]
    6b28:	stur	x1, [x29, #-24]
    6b2c:	ldur	x0, [x29, #-24]
    6b30:	bl	2980 <PySequence_Check@plt>
    6b34:	cbnz	w0, 6b5c <PyInit__multibytecodec@@Base+0x3c68>
    6b38:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6b3c:	ldr	x8, [x8, #4000]
    6b40:	ldr	x0, [x8]
    6b44:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    6b48:	add	x1, x1, #0x23e
    6b4c:	bl	2ad0 <PyErr_SetString@plt>
    6b50:	mov	x8, xzr
    6b54:	stur	x8, [x29, #-8]
    6b58:	b	6c20 <PyInit__multibytecodec@@Base+0x3d2c>
    6b5c:	str	wzr, [sp, #28]
    6b60:	ldrsw	x8, [sp, #28]
    6b64:	ldur	x0, [x29, #-24]
    6b68:	str	x8, [sp, #16]
    6b6c:	bl	2b80 <PySequence_Size@plt>
    6b70:	ldr	x8, [sp, #16]
    6b74:	cmp	x8, x0
    6b78:	b.ge	6bf0 <PyInit__multibytecodec@@Base+0x3cfc>  // b.tcont
    6b7c:	ldur	x0, [x29, #-24]
    6b80:	ldrsw	x1, [sp, #28]
    6b84:	bl	2b00 <PySequence_GetItem@plt>
    6b88:	str	x0, [sp, #32]
    6b8c:	ldr	x8, [sp, #32]
    6b90:	cbnz	x8, 6ba0 <PyInit__multibytecodec@@Base+0x3cac>
    6b94:	mov	x8, xzr
    6b98:	stur	x8, [x29, #-8]
    6b9c:	b	6c20 <PyInit__multibytecodec@@Base+0x3d2c>
    6ba0:	ldur	x0, [x29, #-16]
    6ba4:	ldr	x1, [sp, #32]
    6ba8:	bl	6c58 <PyInit__multibytecodec@@Base+0x3d64>
    6bac:	str	w0, [sp, #24]
    6bb0:	ldr	x2, [sp, #32]
    6bb4:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6bb8:	add	x0, x0, #0xe7d
    6bbc:	mov	w1, #0x734                 	// #1844
    6bc0:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6bc4:	ldr	w8, [sp, #24]
    6bc8:	mov	w9, #0xffffffff            	// #-1
    6bcc:	cmp	w8, w9
    6bd0:	b.ne	6be0 <PyInit__multibytecodec@@Base+0x3cec>  // b.any
    6bd4:	mov	x8, xzr
    6bd8:	stur	x8, [x29, #-8]
    6bdc:	b	6c20 <PyInit__multibytecodec@@Base+0x3d2c>
    6be0:	ldr	w8, [sp, #28]
    6be4:	add	w8, w8, #0x1
    6be8:	str	w8, [sp, #28]
    6bec:	b	6b60 <PyInit__multibytecodec@@Base+0x3c6c>
    6bf0:	bl	2bf0 <PyErr_Occurred@plt>
    6bf4:	cbz	x0, 6c04 <PyInit__multibytecodec@@Base+0x3d10>
    6bf8:	mov	x8, xzr
    6bfc:	stur	x8, [x29, #-8]
    6c00:	b	6c20 <PyInit__multibytecodec@@Base+0x3d2c>
    6c04:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6c08:	ldr	x8, [x8, #4016]
    6c0c:	mov	x0, x8
    6c10:	str	x8, [sp, #8]
    6c14:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    6c18:	ldr	x8, [sp, #8]
    6c1c:	stur	x8, [x29, #-8]
    6c20:	ldur	x0, [x29, #-8]
    6c24:	ldp	x29, x30, [sp, #64]
    6c28:	add	sp, sp, #0x50
    6c2c:	ret
    6c30:	sub	sp, sp, #0x20
    6c34:	stp	x29, x30, [sp, #16]
    6c38:	add	x29, sp, #0x10
    6c3c:	str	x0, [sp, #8]
    6c40:	str	x1, [sp]
    6c44:	ldr	x0, [sp, #8]
    6c48:	bl	6d0c <PyInit__multibytecodec@@Base+0x3e18>
    6c4c:	ldp	x29, x30, [sp, #16]
    6c50:	add	sp, sp, #0x20
    6c54:	ret
    6c58:	sub	sp, sp, #0x40
    6c5c:	stp	x29, x30, [sp, #48]
    6c60:	add	x29, sp, #0x30
    6c64:	mov	w8, wzr
    6c68:	stur	x0, [x29, #-16]
    6c6c:	str	x1, [sp, #24]
    6c70:	ldur	x0, [x29, #-16]
    6c74:	ldr	x1, [sp, #24]
    6c78:	mov	w2, w8
    6c7c:	bl	365c <PyInit__multibytecodec@@Base+0x768>
    6c80:	str	x0, [sp, #16]
    6c84:	ldr	x9, [sp, #16]
    6c88:	cbnz	x9, 6c98 <PyInit__multibytecodec@@Base+0x3da4>
    6c8c:	mov	w8, #0xffffffff            	// #-1
    6c90:	stur	w8, [x29, #-4]
    6c94:	b	6cfc <PyInit__multibytecodec@@Base+0x3e08>
    6c98:	ldur	x8, [x29, #-16]
    6c9c:	ldr	x0, [x8, #48]
    6ca0:	ldr	x2, [sp, #16]
    6ca4:	adrp	x1, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    6ca8:	add	x1, x1, #0xee8
    6cac:	mov	x8, xzr
    6cb0:	mov	x3, x8
    6cb4:	bl	2cf0 <_PyObject_CallMethodIdObjArgs@plt>
    6cb8:	str	x0, [sp, #8]
    6cbc:	ldr	x2, [sp, #16]
    6cc0:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6cc4:	add	x0, x0, #0xe7d
    6cc8:	mov	w1, #0x6fe                 	// #1790
    6ccc:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6cd0:	ldr	x8, [sp, #8]
    6cd4:	cbnz	x8, 6ce4 <PyInit__multibytecodec@@Base+0x3df0>
    6cd8:	mov	w8, #0xffffffff            	// #-1
    6cdc:	stur	w8, [x29, #-4]
    6ce0:	b	6cfc <PyInit__multibytecodec@@Base+0x3e08>
    6ce4:	ldr	x2, [sp, #8]
    6ce8:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6cec:	add	x0, x0, #0xe7d
    6cf0:	mov	w1, #0x702                 	// #1794
    6cf4:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6cf8:	stur	wzr, [x29, #-4]
    6cfc:	ldur	w0, [x29, #-4]
    6d00:	ldp	x29, x30, [sp, #48]
    6d04:	add	sp, sp, #0x40
    6d08:	ret
    6d0c:	sub	sp, sp, #0x50
    6d10:	stp	x29, x30, [sp, #64]
    6d14:	add	x29, sp, #0x40
    6d18:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6d1c:	ldr	x8, [x8, #4016]
    6d20:	adrp	x9, 7000 <PyInit__multibytecodec@@Base+0x410c>
    6d24:	add	x9, x9, #0xe7d
    6d28:	stur	x0, [x29, #-16]
    6d2c:	ldur	x10, [x29, #-16]
    6d30:	ldr	x10, [x10, #40]
    6d34:	str	x8, [sp, #16]
    6d38:	str	x9, [sp, #8]
    6d3c:	cbnz	x10, 6d54 <PyInit__multibytecodec@@Base+0x3e60>
    6d40:	ldr	x0, [sp, #16]
    6d44:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    6d48:	ldr	x8, [sp, #16]
    6d4c:	stur	x8, [x29, #-8]
    6d50:	b	6e40 <PyInit__multibytecodec@@Base+0x3f4c>
    6d54:	ldur	x8, [x29, #-16]
    6d58:	ldr	x0, [x8, #16]
    6d5c:	ldur	x8, [x29, #-16]
    6d60:	add	x1, x8, #0x18
    6d64:	ldur	x8, [x29, #-16]
    6d68:	ldr	x2, [x8, #40]
    6d6c:	ldur	x8, [x29, #-16]
    6d70:	ldr	x4, [x8, #32]
    6d74:	mov	x8, xzr
    6d78:	mov	x3, x8
    6d7c:	mov	w5, #0x3                   	// #3
    6d80:	bl	3950 <PyInit__multibytecodec@@Base+0xa5c>
    6d84:	stur	x0, [x29, #-24]
    6d88:	ldur	x8, [x29, #-16]
    6d8c:	ldr	x8, [x8, #40]
    6d90:	str	x8, [sp, #32]
    6d94:	ldr	x8, [sp, #32]
    6d98:	cbz	x8, 6db8 <PyInit__multibytecodec@@Base+0x3ec4>
    6d9c:	ldur	x8, [x29, #-16]
    6da0:	mov	x9, xzr
    6da4:	str	x9, [x8, #40]
    6da8:	ldr	x2, [sp, #32]
    6dac:	ldr	x0, [sp, #8]
    6db0:	mov	w1, #0x753                 	// #1875
    6db4:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6db8:	ldur	x8, [x29, #-24]
    6dbc:	cbnz	x8, 6dcc <PyInit__multibytecodec@@Base+0x3ed8>
    6dc0:	mov	x8, xzr
    6dc4:	stur	x8, [x29, #-8]
    6dc8:	b	6e40 <PyInit__multibytecodec@@Base+0x3f4c>
    6dcc:	ldur	x0, [x29, #-24]
    6dd0:	bl	2b60 <PyBytes_Size@plt>
    6dd4:	cmp	x0, #0x0
    6dd8:	cset	w8, le
    6ddc:	tbnz	w8, #0, 6e20 <PyInit__multibytecodec@@Base+0x3f2c>
    6de0:	ldur	x8, [x29, #-16]
    6de4:	ldr	x0, [x8, #48]
    6de8:	ldur	x2, [x29, #-24]
    6dec:	adrp	x1, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    6df0:	add	x1, x1, #0xee8
    6df4:	bl	2cf0 <_PyObject_CallMethodIdObjArgs@plt>
    6df8:	str	x0, [sp, #24]
    6dfc:	ldr	x8, [sp, #24]
    6e00:	cbnz	x8, 6e20 <PyInit__multibytecodec@@Base+0x3f2c>
    6e04:	ldur	x2, [x29, #-24]
    6e08:	ldr	x0, [sp, #8]
    6e0c:	mov	w1, #0x75d                 	// #1885
    6e10:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6e14:	mov	x8, xzr
    6e18:	stur	x8, [x29, #-8]
    6e1c:	b	6e40 <PyInit__multibytecodec@@Base+0x3f4c>
    6e20:	ldur	x2, [x29, #-24]
    6e24:	ldr	x0, [sp, #8]
    6e28:	mov	w1, #0x761                 	// #1889
    6e2c:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    6e30:	ldr	x0, [sp, #16]
    6e34:	bl	3054 <PyInit__multibytecodec@@Base+0x160>
    6e38:	ldr	x8, [sp, #16]
    6e3c:	stur	x8, [x29, #-8]
    6e40:	ldur	x0, [x29, #-8]
    6e44:	ldp	x29, x30, [sp, #64]
    6e48:	add	sp, sp, #0x50
    6e4c:	ret
    6e50:	sub	sp, sp, #0x20
    6e54:	stp	x29, x30, [sp, #16]
    6e58:	add	x29, sp, #0x10
    6e5c:	str	x0, [sp, #8]
    6e60:	ldr	x0, [sp, #8]
    6e64:	bl	2b20 <PyObject_Free@plt>
    6e68:	ldp	x29, x30, [sp, #16]
    6e6c:	add	sp, sp, #0x20
    6e70:	ret
    6e74:	sub	sp, sp, #0x90
    6e78:	stp	x29, x30, [sp, #128]
    6e7c:	add	x29, sp, #0x80
    6e80:	mov	x8, xzr
    6e84:	stur	x0, [x29, #-8]
    6e88:	stur	x1, [x29, #-16]
    6e8c:	stur	x2, [x29, #-24]
    6e90:	stur	x3, [x29, #-32]
    6e94:	stur	x8, [x29, #-40]
    6e98:	ldur	x8, [x29, #-24]
    6e9c:	ldur	x9, [x29, #-32]
    6ea0:	str	x8, [sp, #32]
    6ea4:	cbz	x9, 6eb8 <PyInit__multibytecodec@@Base+0x3fc4>
    6ea8:	ldur	x8, [x29, #-32]
    6eac:	ldr	x8, [x8, #16]
    6eb0:	str	x8, [sp, #24]
    6eb4:	b	6ec0 <PyInit__multibytecodec@@Base+0x3fcc>
    6eb8:	mov	x8, xzr
    6ebc:	str	x8, [sp, #24]
    6ec0:	ldr	x8, [sp, #24]
    6ec4:	ldr	x9, [sp, #32]
    6ec8:	add	x8, x9, x8
    6ecc:	subs	x8, x8, #0x1
    6ed0:	str	x8, [sp, #64]
    6ed4:	mov	x8, xzr
    6ed8:	str	x8, [sp, #48]
    6edc:	ldur	x8, [x29, #-32]
    6ee0:	cbnz	x8, 6f14 <PyInit__multibytecodec@@Base+0x4020>
    6ee4:	ldur	x8, [x29, #-24]
    6ee8:	mov	x9, #0x1                   	// #1
    6eec:	cmp	x9, x8
    6ef0:	b.gt	6f14 <PyInit__multibytecodec@@Base+0x4020>
    6ef4:	ldur	x8, [x29, #-24]
    6ef8:	cmp	x8, #0x2
    6efc:	b.gt	6f14 <PyInit__multibytecodec@@Base+0x4020>
    6f00:	ldur	x8, [x29, #-16]
    6f04:	cbz	x8, 6f14 <PyInit__multibytecodec@@Base+0x4020>
    6f08:	ldur	x8, [x29, #-16]
    6f0c:	str	x8, [sp, #16]
    6f10:	b	6f54 <PyInit__multibytecodec@@Base+0x4060>
    6f14:	ldur	x0, [x29, #-16]
    6f18:	ldur	x1, [x29, #-24]
    6f1c:	ldur	x3, [x29, #-32]
    6f20:	mov	x8, xzr
    6f24:	mov	x2, x8
    6f28:	adrp	x4, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    6f2c:	add	x4, x4, #0xf60
    6f30:	mov	w5, #0x1                   	// #1
    6f34:	mov	w6, #0x2                   	// #2
    6f38:	mov	w9, wzr
    6f3c:	mov	w7, w9
    6f40:	mov	x8, sp
    6f44:	sub	x10, x29, #0x38
    6f48:	str	x10, [x8]
    6f4c:	bl	2ac0 <_PyArg_UnpackKeywords@plt>
    6f50:	str	x0, [sp, #16]
    6f54:	ldr	x8, [sp, #16]
    6f58:	stur	x8, [x29, #-16]
    6f5c:	ldur	x8, [x29, #-16]
    6f60:	cbnz	x8, 6f68 <PyInit__multibytecodec@@Base+0x4074>
    6f64:	b	704c <PyInit__multibytecodec@@Base+0x4158>
    6f68:	ldur	x8, [x29, #-16]
    6f6c:	ldr	x8, [x8]
    6f70:	str	x8, [sp, #56]
    6f74:	ldr	x8, [sp, #64]
    6f78:	cbnz	x8, 6f80 <PyInit__multibytecodec@@Base+0x408c>
    6f7c:	b	7038 <PyInit__multibytecodec@@Base+0x4144>
    6f80:	ldur	x8, [x29, #-16]
    6f84:	ldr	x8, [x8, #8]
    6f88:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6f8c:	ldr	x9, [x9, #4016]
    6f90:	cmp	x8, x9
    6f94:	b.ne	6fa4 <PyInit__multibytecodec@@Base+0x40b0>  // b.any
    6f98:	mov	x8, xzr
    6f9c:	str	x8, [sp, #48]
    6fa0:	b	7038 <PyInit__multibytecodec@@Base+0x4144>
    6fa4:	ldur	x8, [x29, #-16]
    6fa8:	ldr	x8, [x8, #8]
    6fac:	ldr	x8, [x8, #8]
    6fb0:	ldr	x8, [x8, #168]
    6fb4:	and	x8, x8, #0x10000000
    6fb8:	cbz	x8, 7010 <PyInit__multibytecodec@@Base+0x411c>
    6fbc:	ldur	x8, [x29, #-16]
    6fc0:	ldr	x0, [x8, #8]
    6fc4:	add	x1, sp, #0x28
    6fc8:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    6fcc:	str	x0, [sp, #48]
    6fd0:	ldr	x8, [sp, #48]
    6fd4:	cbnz	x8, 6fdc <PyInit__multibytecodec@@Base+0x40e8>
    6fd8:	b	704c <PyInit__multibytecodec@@Base+0x4158>
    6fdc:	ldr	x0, [sp, #48]
    6fe0:	bl	2990 <strlen@plt>
    6fe4:	ldr	x8, [sp, #40]
    6fe8:	cmp	x0, x8
    6fec:	b.eq	700c <PyInit__multibytecodec@@Base+0x4118>  // b.none
    6ff0:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    6ff4:	ldr	x8, [x8, #3992]
    6ff8:	ldr	x0, [x8]
    6ffc:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7000:	add	x1, x1, #0x27c
    7004:	bl	2ad0 <PyErr_SetString@plt>
    7008:	b	704c <PyInit__multibytecodec@@Base+0x4158>
    700c:	b	7038 <PyInit__multibytecodec@@Base+0x4144>
    7010:	ldur	x8, [x29, #-16]
    7014:	ldr	x3, [x8, #8]
    7018:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    701c:	add	x0, x0, #0xeb6
    7020:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7024:	add	x1, x1, #0x294
    7028:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    702c:	add	x2, x2, #0x2a6
    7030:	bl	2b70 <_PyArg_BadArgument@plt>
    7034:	b	704c <PyInit__multibytecodec@@Base+0x4158>
    7038:	ldur	x0, [x29, #-8]
    703c:	ldr	x1, [sp, #56]
    7040:	ldr	x2, [sp, #48]
    7044:	bl	72b8 <PyInit__multibytecodec@@Base+0x43c4>
    7048:	stur	x0, [x29, #-40]
    704c:	ldur	x0, [x29, #-40]
    7050:	ldp	x29, x30, [sp, #128]
    7054:	add	sp, sp, #0x90
    7058:	ret
    705c:	sub	sp, sp, #0xd0
    7060:	stp	x29, x30, [sp, #192]
    7064:	add	x29, sp, #0xc0
    7068:	mov	x8, xzr
    706c:	stur	x0, [x29, #-8]
    7070:	stur	x1, [x29, #-16]
    7074:	stur	x2, [x29, #-24]
    7078:	stur	x3, [x29, #-32]
    707c:	stur	x8, [x29, #-40]
    7080:	ldur	x8, [x29, #-24]
    7084:	ldur	x9, [x29, #-32]
    7088:	str	x8, [sp, #24]
    708c:	cbz	x9, 70a0 <PyInit__multibytecodec@@Base+0x41ac>
    7090:	ldur	x8, [x29, #-32]
    7094:	ldr	x8, [x8, #16]
    7098:	str	x8, [sp, #16]
    709c:	b	70a8 <PyInit__multibytecodec@@Base+0x41b4>
    70a0:	mov	x8, xzr
    70a4:	str	x8, [sp, #16]
    70a8:	ldr	x8, [sp, #16]
    70ac:	ldr	x9, [sp, #24]
    70b0:	add	x8, x9, x8
    70b4:	subs	x8, x8, #0x1
    70b8:	stur	x8, [x29, #-64]
    70bc:	add	x0, sp, #0x30
    70c0:	mov	w10, wzr
    70c4:	mov	w1, w10
    70c8:	mov	x2, #0x50                  	// #80
    70cc:	bl	2af0 <memset@plt>
    70d0:	mov	x8, xzr
    70d4:	str	x8, [sp, #40]
    70d8:	ldur	x8, [x29, #-32]
    70dc:	cbnz	x8, 7110 <PyInit__multibytecodec@@Base+0x421c>
    70e0:	ldur	x8, [x29, #-24]
    70e4:	mov	x9, #0x1                   	// #1
    70e8:	cmp	x9, x8
    70ec:	b.gt	7110 <PyInit__multibytecodec@@Base+0x421c>
    70f0:	ldur	x8, [x29, #-24]
    70f4:	cmp	x8, #0x2
    70f8:	b.gt	7110 <PyInit__multibytecodec@@Base+0x421c>
    70fc:	ldur	x8, [x29, #-16]
    7100:	cbz	x8, 7110 <PyInit__multibytecodec@@Base+0x421c>
    7104:	ldur	x8, [x29, #-16]
    7108:	str	x8, [sp, #8]
    710c:	b	7150 <PyInit__multibytecodec@@Base+0x425c>
    7110:	ldur	x0, [x29, #-16]
    7114:	ldur	x1, [x29, #-24]
    7118:	ldur	x3, [x29, #-32]
    711c:	mov	x8, xzr
    7120:	mov	x2, x8
    7124:	adrp	x4, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    7128:	add	x4, x4, #0xfa0
    712c:	mov	w5, #0x1                   	// #1
    7130:	mov	w6, #0x2                   	// #2
    7134:	mov	w9, wzr
    7138:	mov	w7, w9
    713c:	mov	x8, sp
    7140:	sub	x10, x29, #0x38
    7144:	str	x10, [x8]
    7148:	bl	2ac0 <_PyArg_UnpackKeywords@plt>
    714c:	str	x0, [sp, #8]
    7150:	ldr	x8, [sp, #8]
    7154:	stur	x8, [x29, #-16]
    7158:	ldur	x8, [x29, #-16]
    715c:	cbnz	x8, 7164 <PyInit__multibytecodec@@Base+0x4270>
    7160:	b	7294 <PyInit__multibytecodec@@Base+0x43a0>
    7164:	ldur	x8, [x29, #-16]
    7168:	ldr	x0, [x8]
    716c:	add	x1, sp, #0x30
    7170:	mov	w9, wzr
    7174:	mov	w2, w9
    7178:	bl	2cb0 <PyObject_GetBuffer@plt>
    717c:	cbz	w0, 7184 <PyInit__multibytecodec@@Base+0x4290>
    7180:	b	7294 <PyInit__multibytecodec@@Base+0x43a0>
    7184:	add	x0, sp, #0x30
    7188:	mov	w1, #0x43                  	// #67
    718c:	bl	2a10 <PyBuffer_IsContiguous@plt>
    7190:	cbnz	w0, 71bc <PyInit__multibytecodec@@Base+0x42c8>
    7194:	ldur	x8, [x29, #-16]
    7198:	ldr	x3, [x8]
    719c:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    71a0:	add	x0, x0, #0xe3
    71a4:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    71a8:	add	x1, x1, #0xea
    71ac:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    71b0:	add	x2, x2, #0xfb
    71b4:	bl	2b70 <_PyArg_BadArgument@plt>
    71b8:	b	7294 <PyInit__multibytecodec@@Base+0x43a0>
    71bc:	ldur	x8, [x29, #-64]
    71c0:	cbnz	x8, 71c8 <PyInit__multibytecodec@@Base+0x42d4>
    71c4:	b	7280 <PyInit__multibytecodec@@Base+0x438c>
    71c8:	ldur	x8, [x29, #-16]
    71cc:	ldr	x8, [x8, #8]
    71d0:	adrp	x9, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    71d4:	ldr	x9, [x9, #4016]
    71d8:	cmp	x8, x9
    71dc:	b.ne	71ec <PyInit__multibytecodec@@Base+0x42f8>  // b.any
    71e0:	mov	x8, xzr
    71e4:	str	x8, [sp, #40]
    71e8:	b	7280 <PyInit__multibytecodec@@Base+0x438c>
    71ec:	ldur	x8, [x29, #-16]
    71f0:	ldr	x8, [x8, #8]
    71f4:	ldr	x8, [x8, #8]
    71f8:	ldr	x8, [x8, #168]
    71fc:	and	x8, x8, #0x10000000
    7200:	cbz	x8, 7258 <PyInit__multibytecodec@@Base+0x4364>
    7204:	ldur	x8, [x29, #-16]
    7208:	ldr	x0, [x8, #8]
    720c:	add	x1, sp, #0x20
    7210:	bl	2d40 <PyUnicode_AsUTF8AndSize@plt>
    7214:	str	x0, [sp, #40]
    7218:	ldr	x8, [sp, #40]
    721c:	cbnz	x8, 7224 <PyInit__multibytecodec@@Base+0x4330>
    7220:	b	7294 <PyInit__multibytecodec@@Base+0x43a0>
    7224:	ldr	x0, [sp, #40]
    7228:	bl	2990 <strlen@plt>
    722c:	ldr	x8, [sp, #32]
    7230:	cmp	x0, x8
    7234:	b.eq	7254 <PyInit__multibytecodec@@Base+0x4360>  // b.none
    7238:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    723c:	ldr	x8, [x8, #3992]
    7240:	ldr	x0, [x8]
    7244:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7248:	add	x1, x1, #0x27c
    724c:	bl	2ad0 <PyErr_SetString@plt>
    7250:	b	7294 <PyInit__multibytecodec@@Base+0x43a0>
    7254:	b	7280 <PyInit__multibytecodec@@Base+0x438c>
    7258:	ldur	x8, [x29, #-16]
    725c:	ldr	x3, [x8, #8]
    7260:	adrp	x0, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7264:	add	x0, x0, #0xe3
    7268:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    726c:	add	x1, x1, #0x294
    7270:	adrp	x2, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7274:	add	x2, x2, #0x2a6
    7278:	bl	2b70 <_PyArg_BadArgument@plt>
    727c:	b	7294 <PyInit__multibytecodec@@Base+0x43a0>
    7280:	ldur	x0, [x29, #-8]
    7284:	ldr	x2, [sp, #40]
    7288:	add	x1, sp, #0x30
    728c:	bl	75bc <PyInit__multibytecodec@@Base+0x46c8>
    7290:	stur	x0, [x29, #-40]
    7294:	add	x8, sp, #0x30
    7298:	ldr	x8, [x8, #8]
    729c:	cbz	x8, 72a8 <PyInit__multibytecodec@@Base+0x43b4>
    72a0:	add	x0, sp, #0x30
    72a4:	bl	29d0 <PyBuffer_Release@plt>
    72a8:	ldur	x0, [x29, #-40]
    72ac:	ldp	x29, x30, [sp, #192]
    72b0:	add	sp, sp, #0xd0
    72b4:	ret
    72b8:	sub	sp, sp, #0x70
    72bc:	stp	x29, x30, [sp, #96]
    72c0:	add	x29, sp, #0x60
    72c4:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    72c8:	add	x8, x8, #0xe7d
    72cc:	stur	x0, [x29, #-16]
    72d0:	stur	x1, [x29, #-24]
    72d4:	stur	x2, [x29, #-32]
    72d8:	ldur	x9, [x29, #-24]
    72dc:	ldr	x9, [x9, #8]
    72e0:	ldr	x9, [x9, #168]
    72e4:	and	x9, x9, #0x10000000
    72e8:	str	x8, [sp, #16]
    72ec:	cbz	x9, 72fc <PyInit__multibytecodec@@Base+0x4408>
    72f0:	mov	x8, xzr
    72f4:	str	x8, [sp, #32]
    72f8:	b	7368 <PyInit__multibytecodec@@Base+0x4474>
    72fc:	ldur	x0, [x29, #-24]
    7300:	bl	2a90 <PyObject_Str@plt>
    7304:	str	x0, [sp, #32]
    7308:	stur	x0, [x29, #-24]
    730c:	ldur	x8, [x29, #-24]
    7310:	cbnz	x8, 7320 <PyInit__multibytecodec@@Base+0x442c>
    7314:	mov	x8, xzr
    7318:	stur	x8, [x29, #-8]
    731c:	b	74ec <PyInit__multibytecodec@@Base+0x45f8>
    7320:	ldur	x8, [x29, #-24]
    7324:	ldr	x8, [x8, #8]
    7328:	ldr	x8, [x8, #168]
    732c:	and	x8, x8, #0x10000000
    7330:	cbnz	x8, 7368 <PyInit__multibytecodec@@Base+0x4474>
    7334:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    7338:	ldr	x8, [x8, #4000]
    733c:	ldr	x0, [x8]
    7340:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7344:	add	x1, x1, #0x2b2
    7348:	bl	2ad0 <PyErr_SetString@plt>
    734c:	ldr	x2, [sp, #32]
    7350:	ldr	x0, [sp, #16]
    7354:	mov	w1, #0x244                 	// #580
    7358:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    735c:	mov	x8, xzr
    7360:	stur	x8, [x29, #-8]
    7364:	b	74ec <PyInit__multibytecodec@@Base+0x45f8>
    7368:	ldur	x8, [x29, #-24]
    736c:	ldr	w9, [x8, #32]
    7370:	lsr	w9, w9, #7
    7374:	and	w9, w9, #0x1
    7378:	cbz	w9, 7388 <PyInit__multibytecodec@@Base+0x4494>
    737c:	mov	w8, wzr
    7380:	str	w8, [sp, #12]
    7384:	b	7394 <PyInit__multibytecodec@@Base+0x44a0>
    7388:	ldur	x0, [x29, #-24]
    738c:	bl	2970 <_PyUnicode_Ready@plt>
    7390:	str	w0, [sp, #12]
    7394:	ldr	w8, [sp, #12]
    7398:	cmp	w8, #0x0
    739c:	cset	w8, ge  // ge = tcont
    73a0:	tbnz	w8, #0, 73b8 <PyInit__multibytecodec@@Base+0x44c4>
    73a4:	ldr	x0, [sp, #32]
    73a8:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    73ac:	mov	x8, xzr
    73b0:	stur	x8, [x29, #-8]
    73b4:	b	74ec <PyInit__multibytecodec@@Base+0x45f8>
    73b8:	ldur	x8, [x29, #-24]
    73bc:	ldr	x8, [x8, #16]
    73c0:	str	x8, [sp, #24]
    73c4:	ldur	x0, [x29, #-32]
    73c8:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    73cc:	str	x0, [sp, #48]
    73d0:	ldr	x8, [sp, #48]
    73d4:	cbnz	x8, 73ec <PyInit__multibytecodec@@Base+0x44f8>
    73d8:	ldr	x0, [sp, #32]
    73dc:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    73e0:	mov	x8, xzr
    73e4:	stur	x8, [x29, #-8]
    73e8:	b	74ec <PyInit__multibytecodec@@Base+0x45f8>
    73ec:	ldur	x8, [x29, #-16]
    73f0:	ldr	x8, [x8, #16]
    73f4:	ldr	x8, [x8, #32]
    73f8:	cbz	x8, 7424 <PyInit__multibytecodec@@Base+0x4530>
    73fc:	ldur	x8, [x29, #-16]
    7400:	ldr	x8, [x8, #16]
    7404:	ldr	x8, [x8, #32]
    7408:	ldur	x9, [x29, #-16]
    740c:	ldr	x9, [x9, #16]
    7410:	ldr	x1, [x9, #8]
    7414:	sub	x0, x29, #0x28
    7418:	blr	x8
    741c:	cbz	w0, 7424 <PyInit__multibytecodec@@Base+0x4530>
    7420:	b	74a8 <PyInit__multibytecodec@@Base+0x45b4>
    7424:	ldur	x8, [x29, #-16]
    7428:	ldr	x0, [x8, #16]
    742c:	ldur	x2, [x29, #-24]
    7430:	ldr	x4, [sp, #48]
    7434:	sub	x1, x29, #0x28
    7438:	mov	x8, xzr
    743c:	mov	x3, x8
    7440:	mov	w5, #0x3                   	// #3
    7444:	bl	3950 <PyInit__multibytecodec@@Base+0xa5c>
    7448:	str	x0, [sp, #40]
    744c:	ldr	x8, [sp, #40]
    7450:	cbnz	x8, 7458 <PyInit__multibytecodec@@Base+0x4564>
    7454:	b	74a8 <PyInit__multibytecodec@@Base+0x45b4>
    7458:	ldr	x8, [sp, #48]
    745c:	cbz	x8, 748c <PyInit__multibytecodec@@Base+0x4598>
    7460:	ldr	x8, [sp, #48]
    7464:	cmp	x8, #0x1
    7468:	b.cc	747c <PyInit__multibytecodec@@Base+0x4588>  // b.lo, b.ul, b.last
    746c:	ldr	x8, [sp, #48]
    7470:	mov	x9, #0x3                   	// #3
    7474:	cmp	x9, x8
    7478:	b.cs	748c <PyInit__multibytecodec@@Base+0x4598>  // b.hs, b.nlast
    747c:	ldr	x2, [sp, #48]
    7480:	ldr	x0, [sp, #16]
    7484:	mov	w1, #0x25e                 	// #606
    7488:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    748c:	ldr	x0, [sp, #32]
    7490:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    7494:	ldr	x0, [sp, #40]
    7498:	ldr	x1, [sp, #24]
    749c:	bl	74fc <PyInit__multibytecodec@@Base+0x4608>
    74a0:	stur	x0, [x29, #-8]
    74a4:	b	74ec <PyInit__multibytecodec@@Base+0x45f8>
    74a8:	ldr	x8, [sp, #48]
    74ac:	cbz	x8, 74dc <PyInit__multibytecodec@@Base+0x45e8>
    74b0:	ldr	x8, [sp, #48]
    74b4:	cmp	x8, #0x1
    74b8:	b.cc	74cc <PyInit__multibytecodec@@Base+0x45d8>  // b.lo, b.ul, b.last
    74bc:	ldr	x8, [sp, #48]
    74c0:	mov	x9, #0x3                   	// #3
    74c4:	cmp	x9, x8
    74c8:	b.cs	74dc <PyInit__multibytecodec@@Base+0x45e8>  // b.hs, b.nlast
    74cc:	ldr	x2, [sp, #48]
    74d0:	ldr	x0, [sp, #16]
    74d4:	mov	w1, #0x263                 	// #611
    74d8:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    74dc:	ldr	x0, [sp, #32]
    74e0:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    74e4:	mov	x8, xzr
    74e8:	stur	x8, [x29, #-8]
    74ec:	ldur	x0, [x29, #-8]
    74f0:	ldp	x29, x30, [sp, #96]
    74f4:	add	sp, sp, #0x70
    74f8:	ret
    74fc:	sub	sp, sp, #0x40
    7500:	stp	x29, x30, [sp, #48]
    7504:	add	x29, sp, #0x30
    7508:	stur	x0, [x29, #-16]
    750c:	str	x1, [sp, #24]
    7510:	ldur	x8, [x29, #-16]
    7514:	cbnz	x8, 7524 <PyInit__multibytecodec@@Base+0x4630>
    7518:	mov	x8, xzr
    751c:	stur	x8, [x29, #-8]
    7520:	b	75ac <PyInit__multibytecodec@@Base+0x46b8>
    7524:	mov	x0, #0x2                   	// #2
    7528:	bl	2bd0 <PyTuple_New@plt>
    752c:	str	x0, [sp, #16]
    7530:	ldr	x8, [sp, #16]
    7534:	cbnz	x8, 7558 <PyInit__multibytecodec@@Base+0x4664>
    7538:	ldur	x2, [x29, #-16]
    753c:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    7540:	add	x0, x0, #0xe7d
    7544:	mov	w1, #0x35                  	// #53
    7548:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    754c:	mov	x8, xzr
    7550:	stur	x8, [x29, #-8]
    7554:	b	75ac <PyInit__multibytecodec@@Base+0x46b8>
    7558:	ldur	x8, [x29, #-16]
    755c:	ldr	x9, [sp, #16]
    7560:	str	x8, [x9, #24]
    7564:	ldr	x0, [sp, #24]
    7568:	bl	2b30 <PyLong_FromSsize_t@plt>
    756c:	str	x0, [sp, #8]
    7570:	ldr	x8, [sp, #8]
    7574:	cbnz	x8, 7598 <PyInit__multibytecodec@@Base+0x46a4>
    7578:	ldr	x2, [sp, #16]
    757c:	adrp	x0, 7000 <PyInit__multibytecodec@@Base+0x410c>
    7580:	add	x0, x0, #0xe7d
    7584:	mov	w1, #0x3c                  	// #60
    7588:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    758c:	mov	x8, xzr
    7590:	stur	x8, [x29, #-8]
    7594:	b	75ac <PyInit__multibytecodec@@Base+0x46b8>
    7598:	ldr	x8, [sp, #8]
    759c:	ldr	x9, [sp, #16]
    75a0:	str	x8, [x9, #32]
    75a4:	ldr	x8, [sp, #16]
    75a8:	stur	x8, [x29, #-8]
    75ac:	ldur	x0, [x29, #-8]
    75b0:	ldp	x29, x30, [sp, #48]
    75b4:	add	sp, sp, #0x40
    75b8:	ret
    75bc:	sub	sp, sp, #0xe0
    75c0:	stp	x29, x30, [sp, #208]
    75c4:	add	x29, sp, #0xd0
    75c8:	adrp	x8, 7000 <PyInit__multibytecodec@@Base+0x410c>
    75cc:	add	x8, x8, #0xe7d
    75d0:	stur	x0, [x29, #-16]
    75d4:	stur	x1, [x29, #-24]
    75d8:	stur	x2, [x29, #-32]
    75dc:	ldur	x9, [x29, #-24]
    75e0:	ldr	x9, [x9]
    75e4:	str	x9, [sp, #56]
    75e8:	ldur	x9, [x29, #-24]
    75ec:	ldr	x9, [x9, #16]
    75f0:	str	x9, [sp, #48]
    75f4:	ldur	x0, [x29, #-32]
    75f8:	str	x8, [sp, #24]
    75fc:	bl	4a64 <PyInit__multibytecodec@@Base+0x1b70>
    7600:	str	x0, [sp, #72]
    7604:	ldr	x8, [sp, #72]
    7608:	cbnz	x8, 7618 <PyInit__multibytecodec@@Base+0x4724>
    760c:	mov	x8, xzr
    7610:	stur	x8, [x29, #-8]
    7614:	b	7848 <PyInit__multibytecodec@@Base+0x4954>
    7618:	ldr	x8, [sp, #48]
    761c:	cbnz	x8, 767c <PyInit__multibytecodec@@Base+0x4788>
    7620:	ldr	x8, [sp, #72]
    7624:	cbz	x8, 7654 <PyInit__multibytecodec@@Base+0x4760>
    7628:	ldr	x8, [sp, #72]
    762c:	cmp	x8, #0x1
    7630:	b.cc	7644 <PyInit__multibytecodec@@Base+0x4750>  // b.lo, b.ul, b.last
    7634:	ldr	x8, [sp, #72]
    7638:	mov	x9, #0x3                   	// #3
    763c:	cmp	x9, x8
    7640:	b.cs	7654 <PyInit__multibytecodec@@Base+0x4760>  // b.hs, b.nlast
    7644:	ldr	x2, [sp, #72]
    7648:	ldr	x0, [sp, #24]
    764c:	mov	w1, #0x28b                 	// #651
    7650:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    7654:	mov	x8, xzr
    7658:	mov	x0, x8
    765c:	mov	w9, wzr
    7660:	mov	w1, w9
    7664:	str	x8, [sp, #16]
    7668:	bl	2de0 <PyUnicode_New@plt>
    766c:	ldr	x1, [sp, #16]
    7670:	bl	74fc <PyInit__multibytecodec@@Base+0x4608>
    7674:	stur	x0, [x29, #-8]
    7678:	b	7848 <PyInit__multibytecodec@@Base+0x4954>
    767c:	add	x8, sp, #0x50
    7680:	add	x0, x8, #0x20
    7684:	str	x8, [sp, #8]
    7688:	bl	2b10 <_PyUnicodeWriter_Init@plt>
    768c:	ldr	x8, [sp, #48]
    7690:	str	x8, [sp, #152]
    7694:	mov	x8, xzr
    7698:	ldr	x9, [sp, #8]
    769c:	str	x8, [x9, #24]
    76a0:	ldr	x8, [sp, #56]
    76a4:	str	x8, [x9, #8]
    76a8:	str	x8, [sp, #80]
    76ac:	ldr	x8, [x9, #8]
    76b0:	ldr	x10, [sp, #48]
    76b4:	add	x8, x8, x10
    76b8:	str	x8, [x9, #16]
    76bc:	ldur	x8, [x29, #-16]
    76c0:	ldr	x8, [x8, #16]
    76c4:	ldr	x8, [x8, #56]
    76c8:	cbz	x8, 76f4 <PyInit__multibytecodec@@Base+0x4800>
    76cc:	ldur	x8, [x29, #-16]
    76d0:	ldr	x8, [x8, #16]
    76d4:	ldr	x8, [x8, #56]
    76d8:	ldur	x9, [x29, #-16]
    76dc:	ldr	x9, [x9, #16]
    76e0:	ldr	x1, [x9, #8]
    76e4:	sub	x0, x29, #0x28
    76e8:	blr	x8
    76ec:	cbz	w0, 76f4 <PyInit__multibytecodec@@Base+0x4800>
    76f0:	b	77f0 <PyInit__multibytecodec@@Base+0x48fc>
    76f4:	add	x8, sp, #0x50
    76f8:	ldr	x9, [sp, #80]
    76fc:	ldr	x8, [x8, #16]
    7700:	cmp	x9, x8
    7704:	b.cs	7780 <PyInit__multibytecodec@@Base+0x488c>  // b.hs, b.nlast
    7708:	add	x8, sp, #0x50
    770c:	ldr	x9, [x8, #16]
    7710:	ldr	x10, [sp, #80]
    7714:	subs	x9, x9, x10
    7718:	str	x9, [sp, #40]
    771c:	ldur	x9, [x29, #-16]
    7720:	ldr	x9, [x9, #16]
    7724:	ldr	x9, [x9, #48]
    7728:	ldur	x10, [x29, #-16]
    772c:	ldr	x10, [x10, #16]
    7730:	ldr	x1, [x10, #8]
    7734:	ldr	x3, [sp, #40]
    7738:	add	x4, x8, #0x20
    773c:	sub	x0, x29, #0x28
    7740:	mov	x2, x8
    7744:	blr	x9
    7748:	str	x0, [sp, #32]
    774c:	ldr	x8, [sp, #32]
    7750:	cbnz	x8, 7758 <PyInit__multibytecodec@@Base+0x4864>
    7754:	b	7780 <PyInit__multibytecodec@@Base+0x488c>
    7758:	ldur	x8, [x29, #-16]
    775c:	ldr	x0, [x8, #16]
    7760:	ldr	x3, [sp, #72]
    7764:	ldr	x4, [sp, #32]
    7768:	sub	x1, x29, #0x28
    776c:	add	x2, sp, #0x50
    7770:	bl	5488 <PyInit__multibytecodec@@Base+0x2594>
    7774:	cbz	w0, 777c <PyInit__multibytecodec@@Base+0x4888>
    7778:	b	77f0 <PyInit__multibytecodec@@Base+0x48fc>
    777c:	b	76f4 <PyInit__multibytecodec@@Base+0x4800>
    7780:	add	x8, sp, #0x50
    7784:	add	x0, x8, #0x20
    7788:	bl	2db0 <_PyUnicodeWriter_Finish@plt>
    778c:	str	x0, [sp, #64]
    7790:	ldr	x8, [sp, #64]
    7794:	cbnz	x8, 779c <PyInit__multibytecodec@@Base+0x48a8>
    7798:	b	77f0 <PyInit__multibytecodec@@Base+0x48fc>
    779c:	add	x8, sp, #0x50
    77a0:	ldr	x0, [x8, #24]
    77a4:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    77a8:	ldr	x8, [sp, #72]
    77ac:	cbz	x8, 77dc <PyInit__multibytecodec@@Base+0x48e8>
    77b0:	ldr	x8, [sp, #72]
    77b4:	cmp	x8, #0x1
    77b8:	b.cc	77cc <PyInit__multibytecodec@@Base+0x48d8>  // b.lo, b.ul, b.last
    77bc:	ldr	x8, [sp, #72]
    77c0:	mov	x9, #0x3                   	// #3
    77c4:	cmp	x9, x8
    77c8:	b.cs	77dc <PyInit__multibytecodec@@Base+0x48e8>  // b.hs, b.nlast
    77cc:	ldr	x2, [sp, #72]
    77d0:	ldr	x0, [sp, #24]
    77d4:	mov	w1, #0x2ac                 	// #684
    77d8:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    77dc:	ldr	x0, [sp, #64]
    77e0:	ldr	x1, [sp, #48]
    77e4:	bl	74fc <PyInit__multibytecodec@@Base+0x4608>
    77e8:	stur	x0, [x29, #-8]
    77ec:	b	7848 <PyInit__multibytecodec@@Base+0x4954>
    77f0:	ldr	x8, [sp, #72]
    77f4:	cbz	x8, 7824 <PyInit__multibytecodec@@Base+0x4930>
    77f8:	ldr	x8, [sp, #72]
    77fc:	cmp	x8, #0x1
    7800:	b.cc	7814 <PyInit__multibytecodec@@Base+0x4920>  // b.lo, b.ul, b.last
    7804:	ldr	x8, [sp, #72]
    7808:	mov	x9, #0x3                   	// #3
    780c:	cmp	x9, x8
    7810:	b.cs	7824 <PyInit__multibytecodec@@Base+0x4930>  // b.hs, b.nlast
    7814:	ldr	x2, [sp, #72]
    7818:	ldr	x0, [sp, #24]
    781c:	mov	w1, #0x2b0                 	// #688
    7820:	bl	336c <PyInit__multibytecodec@@Base+0x478>
    7824:	add	x8, sp, #0x50
    7828:	ldr	x0, [x8, #24]
    782c:	str	x8, [sp]
    7830:	bl	3cfc <PyInit__multibytecodec@@Base+0xe08>
    7834:	ldr	x8, [sp]
    7838:	add	x0, x8, #0x20
    783c:	bl	2ab0 <_PyUnicodeWriter_Dealloc@plt>
    7840:	mov	x8, xzr
    7844:	stur	x8, [x29, #-8]
    7848:	ldur	x0, [x29, #-8]
    784c:	ldp	x29, x30, [sp, #208]
    7850:	add	sp, sp, #0xe0
    7854:	ret
    7858:	sub	sp, sp, #0x40
    785c:	stp	x29, x30, [sp, #48]
    7860:	add	x29, sp, #0x30
    7864:	adrp	x8, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7868:	add	x8, x8, #0x2f9
    786c:	stur	x0, [x29, #-16]
    7870:	str	x1, [sp, #24]
    7874:	ldr	x0, [sp, #24]
    7878:	mov	x1, x8
    787c:	bl	2ba0 <PyCapsule_IsValid@plt>
    7880:	cbnz	w0, 78a8 <PyInit__multibytecodec@@Base+0x49b4>
    7884:	adrp	x8, 18000 <PyInit__multibytecodec@@Base+0x1510c>
    7888:	ldr	x8, [x8, #3992]
    788c:	ldr	x0, [x8]
    7890:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    7894:	add	x1, x1, #0x310
    7898:	bl	2ad0 <PyErr_SetString@plt>
    789c:	mov	x8, xzr
    78a0:	stur	x8, [x29, #-8]
    78a4:	b	7924 <PyInit__multibytecodec@@Base+0x4a30>
    78a8:	ldr	x0, [sp, #24]
    78ac:	adrp	x1, 8000 <PyInit__multibytecodec@@Base+0x510c>
    78b0:	add	x1, x1, #0x2f9
    78b4:	bl	2d60 <PyCapsule_GetPointer@plt>
    78b8:	str	x0, [sp, #8]
    78bc:	ldr	x8, [sp, #8]
    78c0:	ldr	x8, [x8, #16]
    78c4:	cbz	x8, 78ec <PyInit__multibytecodec@@Base+0x49f8>
    78c8:	ldr	x8, [sp, #8]
    78cc:	ldr	x8, [x8, #16]
    78d0:	ldr	x9, [sp, #8]
    78d4:	ldr	x0, [x9, #8]
    78d8:	blr	x8
    78dc:	cbz	w0, 78ec <PyInit__multibytecodec@@Base+0x49f8>
    78e0:	mov	x8, xzr
    78e4:	stur	x8, [x29, #-8]
    78e8:	b	7924 <PyInit__multibytecodec@@Base+0x4a30>
    78ec:	adrp	x0, 19000 <PyInit__multibytecodec@@Base+0x1610c>
    78f0:	add	x0, x0, #0x8e8
    78f4:	bl	2cd0 <_PyObject_New@plt>
    78f8:	str	x0, [sp, #16]
    78fc:	ldr	x8, [sp, #16]
    7900:	cbnz	x8, 7910 <PyInit__multibytecodec@@Base+0x4a1c>
    7904:	mov	x8, xzr
    7908:	stur	x8, [x29, #-8]
    790c:	b	7924 <PyInit__multibytecodec@@Base+0x4a30>
    7910:	ldr	x8, [sp, #8]
    7914:	ldr	x9, [sp, #16]
    7918:	str	x8, [x9, #16]
    791c:	ldr	x8, [sp, #16]
    7920:	stur	x8, [x29, #-8]
    7924:	ldur	x0, [x29, #-8]
    7928:	ldp	x29, x30, [sp, #48]
    792c:	add	sp, sp, #0x40
    7930:	ret

Disassembly of section .fini:

0000000000007934 <.fini>:
    7934:	stp	x29, x30, [sp, #-16]!
    7938:	mov	x29, sp
    793c:	ldp	x29, x30, [sp], #16
    7940:	ret
