
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcov-tool_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004025a8 <.init>:
  4025a8:	stp	x29, x30, [sp, #-16]!
  4025ac:	mov	x29, sp
  4025b0:	bl	402d9c <feof@plt+0x9c>
  4025b4:	ldp	x29, x30, [sp], #16
  4025b8:	ret

Disassembly of section .plt:

00000000004025c0 <_Unwind_Backtrace@plt-0x20>:
  4025c0:	stp	x16, x30, [sp, #-16]!
  4025c4:	adrp	x16, 47b000 <_obstack_memory_used@@Base+0x25dd8>
  4025c8:	ldr	x17, [x16, #4088]
  4025cc:	add	x16, x16, #0xff8
  4025d0:	br	x17
  4025d4:	nop
  4025d8:	nop
  4025dc:	nop

00000000004025e0 <_Unwind_Backtrace@plt>:
  4025e0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4025e4:	ldr	x17, [x16]
  4025e8:	add	x16, x16, #0x0
  4025ec:	br	x17

00000000004025f0 <_Znam@plt>:
  4025f0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4025f4:	ldr	x17, [x16, #8]
  4025f8:	add	x16, x16, #0x8
  4025fc:	br	x17

0000000000402600 <__fxstat@plt>:
  402600:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402604:	ldr	x17, [x16, #16]
  402608:	add	x16, x16, #0x10
  40260c:	br	x17

0000000000402610 <_Unwind_GetIPInfo@plt>:
  402610:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402614:	ldr	x17, [x16, #24]
  402618:	add	x16, x16, #0x18
  40261c:	br	x17

0000000000402620 <fputs@plt>:
  402620:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402624:	ldr	x17, [x16, #32]
  402628:	add	x16, x16, #0x20
  40262c:	br	x17

0000000000402630 <iconv_close@plt>:
  402630:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402634:	ldr	x17, [x16, #40]
  402638:	add	x16, x16, #0x28
  40263c:	br	x17

0000000000402640 <memcpy@plt>:
  402640:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402644:	ldr	x17, [x16, #48]
  402648:	add	x16, x16, #0x30
  40264c:	br	x17

0000000000402650 <fread@plt>:
  402650:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402654:	ldr	x17, [x16, #56]
  402658:	add	x16, x16, #0x38
  40265c:	br	x17

0000000000402660 <strstr@plt>:
  402660:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402664:	ldr	x17, [x16, #64]
  402668:	add	x16, x16, #0x40
  40266c:	br	x17

0000000000402670 <textdomain@plt>:
  402670:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402674:	ldr	x17, [x16, #72]
  402678:	add	x16, x16, #0x48
  40267c:	br	x17

0000000000402680 <readlink@plt>:
  402680:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402684:	ldr	x17, [x16, #80]
  402688:	add	x16, x16, #0x50
  40268c:	br	x17

0000000000402690 <puts@plt>:
  402690:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402694:	ldr	x17, [x16, #88]
  402698:	add	x16, x16, #0x58
  40269c:	br	x17

00000000004026a0 <bindtextdomain@plt>:
  4026a0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4026a4:	ldr	x17, [x16, #96]
  4026a8:	add	x16, x16, #0x60
  4026ac:	br	x17

00000000004026b0 <calloc@plt>:
  4026b0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4026b4:	ldr	x17, [x16, #104]
  4026b8:	add	x16, x16, #0x68
  4026bc:	br	x17

00000000004026c0 <ungetc@plt>:
  4026c0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4026c4:	ldr	x17, [x16, #112]
  4026c8:	add	x16, x16, #0x70
  4026cc:	br	x17

00000000004026d0 <strlen@plt>:
  4026d0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4026d4:	ldr	x17, [x16, #120]
  4026d8:	add	x16, x16, #0x78
  4026dc:	br	x17

00000000004026e0 <gmtime@plt>:
  4026e0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4026e4:	ldr	x17, [x16, #128]
  4026e8:	add	x16, x16, #0x80
  4026ec:	br	x17

00000000004026f0 <fprintf@plt>:
  4026f0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4026f4:	ldr	x17, [x16, #136]
  4026f8:	add	x16, x16, #0x88
  4026fc:	br	x17

0000000000402700 <ftell@plt>:
  402700:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402704:	ldr	x17, [x16, #144]
  402708:	add	x16, x16, #0x90
  40270c:	br	x17

0000000000402710 <ngettext@plt>:
  402710:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402714:	ldr	x17, [x16, #152]
  402718:	add	x16, x16, #0x98
  40271c:	br	x17

0000000000402720 <open@plt>:
  402720:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402724:	ldr	x17, [x16, #160]
  402728:	add	x16, x16, #0xa0
  40272c:	br	x17

0000000000402730 <__overflow@plt>:
  402730:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402734:	ldr	x17, [x16, #168]
  402738:	add	x16, x16, #0xa8
  40273c:	br	x17

0000000000402740 <fclose@plt>:
  402740:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402744:	ldr	x17, [x16, #176]
  402748:	add	x16, x16, #0xb0
  40274c:	br	x17

0000000000402750 <strtol@plt>:
  402750:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402754:	ldr	x17, [x16, #184]
  402758:	add	x16, x16, #0xb8
  40275c:	br	x17

0000000000402760 <iconv_open@plt>:
  402760:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402764:	ldr	x17, [x16, #192]
  402768:	add	x16, x16, #0xc0
  40276c:	br	x17

0000000000402770 <free@plt>:
  402770:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402774:	ldr	x17, [x16, #200]
  402778:	add	x16, x16, #0xc8
  40277c:	br	x17

0000000000402780 <fread_unlocked@plt>:
  402780:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402784:	ldr	x17, [x16, #208]
  402788:	add	x16, x16, #0xd0
  40278c:	br	x17

0000000000402790 <memset@plt>:
  402790:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402794:	ldr	x17, [x16, #216]
  402798:	add	x16, x16, #0xd8
  40279c:	br	x17

00000000004027a0 <fputs_unlocked@plt>:
  4027a0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4027a4:	ldr	x17, [x16, #224]
  4027a8:	add	x16, x16, #0xe0
  4027ac:	br	x17

00000000004027b0 <strchr@plt>:
  4027b0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4027b4:	ldr	x17, [x16, #232]
  4027b8:	add	x16, x16, #0xe8
  4027bc:	br	x17

00000000004027c0 <strdup@plt>:
  4027c0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4027c4:	ldr	x17, [x16, #240]
  4027c8:	add	x16, x16, #0xf0
  4027cc:	br	x17

00000000004027d0 <isatty@plt>:
  4027d0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4027d4:	ldr	x17, [x16, #248]
  4027d8:	add	x16, x16, #0xf8
  4027dc:	br	x17

00000000004027e0 <ftw@plt>:
  4027e0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4027e4:	ldr	x17, [x16, #256]
  4027e8:	add	x16, x16, #0x100
  4027ec:	br	x17

00000000004027f0 <qsort@plt>:
  4027f0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4027f4:	ldr	x17, [x16, #264]
  4027f8:	add	x16, x16, #0x108
  4027fc:	br	x17

0000000000402800 <realloc@plt>:
  402800:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402804:	ldr	x17, [x16, #272]
  402808:	add	x16, x16, #0x110
  40280c:	br	x17

0000000000402810 <__cxa_guard_release@plt>:
  402810:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402814:	ldr	x17, [x16, #280]
  402818:	add	x16, x16, #0x118
  40281c:	br	x17

0000000000402820 <access@plt>:
  402820:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402824:	ldr	x17, [x16, #288]
  402828:	add	x16, x16, #0x120
  40282c:	br	x17

0000000000402830 <freopen@plt>:
  402830:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402834:	ldr	x17, [x16, #296]
  402838:	add	x16, x16, #0x128
  40283c:	br	x17

0000000000402840 <read@plt>:
  402840:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402844:	ldr	x17, [x16, #304]
  402848:	add	x16, x16, #0x130
  40284c:	br	x17

0000000000402850 <strerror@plt>:
  402850:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402854:	ldr	x17, [x16, #312]
  402858:	add	x16, x16, #0x138
  40285c:	br	x17

0000000000402860 <strcpy@plt>:
  402860:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402864:	ldr	x17, [x16, #320]
  402868:	add	x16, x16, #0x140
  40286c:	br	x17

0000000000402870 <closedir@plt>:
  402870:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402874:	ldr	x17, [x16, #328]
  402878:	add	x16, x16, #0x148
  40287c:	br	x17

0000000000402880 <sprintf@plt>:
  402880:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402884:	ldr	x17, [x16, #336]
  402888:	add	x16, x16, #0x150
  40288c:	br	x17

0000000000402890 <getopt_long@plt>:
  402890:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402894:	ldr	x17, [x16, #344]
  402898:	add	x16, x16, #0x158
  40289c:	br	x17

00000000004028a0 <ioctl@plt>:
  4028a0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4028a4:	ldr	x17, [x16, #352]
  4028a8:	add	x16, x16, #0x160
  4028ac:	br	x17

00000000004028b0 <strcspn@plt>:
  4028b0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4028b4:	ldr	x17, [x16, #360]
  4028b8:	add	x16, x16, #0x168
  4028bc:	br	x17

00000000004028c0 <remove@plt>:
  4028c0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4028c4:	ldr	x17, [x16, #368]
  4028c8:	add	x16, x16, #0x170
  4028cc:	br	x17

00000000004028d0 <localtime@plt>:
  4028d0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4028d4:	ldr	x17, [x16, #376]
  4028d8:	add	x16, x16, #0x178
  4028dc:	br	x17

00000000004028e0 <__libc_start_main@plt>:
  4028e0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4028e4:	ldr	x17, [x16, #384]
  4028e8:	add	x16, x16, #0x180
  4028ec:	br	x17

00000000004028f0 <dgettext@plt>:
  4028f0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4028f4:	ldr	x17, [x16, #392]
  4028f8:	add	x16, x16, #0x188
  4028fc:	br	x17

0000000000402900 <dl_iterate_phdr@plt>:
  402900:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402904:	ldr	x17, [x16, #400]
  402908:	add	x16, x16, #0x190
  40290c:	br	x17

0000000000402910 <gettext@plt>:
  402910:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402914:	ldr	x17, [x16, #408]
  402918:	add	x16, x16, #0x198
  40291c:	br	x17

0000000000402920 <memchr@plt>:
  402920:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402924:	ldr	x17, [x16, #416]
  402928:	add	x16, x16, #0x1a0
  40292c:	br	x17

0000000000402930 <getpid@plt>:
  402930:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402934:	ldr	x17, [x16, #424]
  402938:	add	x16, x16, #0x1a8
  40293c:	br	x17

0000000000402940 <_ZdlPv@plt>:
  402940:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402944:	ldr	x17, [x16, #432]
  402948:	add	x16, x16, #0x1b0
  40294c:	br	x17

0000000000402950 <setlocale@plt>:
  402950:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402954:	ldr	x17, [x16, #440]
  402958:	add	x16, x16, #0x1b8
  40295c:	br	x17

0000000000402960 <mmap@plt>:
  402960:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402964:	ldr	x17, [x16, #448]
  402968:	add	x16, x16, #0x1c0
  40296c:	br	x17

0000000000402970 <_Znwm@plt>:
  402970:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402974:	ldr	x17, [x16, #456]
  402978:	add	x16, x16, #0x1c8
  40297c:	br	x17

0000000000402980 <strncmp@plt>:
  402980:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402984:	ldr	x17, [x16, #464]
  402988:	add	x16, x16, #0x1d0
  40298c:	br	x17

0000000000402990 <readdir@plt>:
  402990:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402994:	ldr	x17, [x16, #472]
  402998:	add	x16, x16, #0x1d8
  40299c:	br	x17

00000000004029a0 <fputc@plt>:
  4029a0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4029a4:	ldr	x17, [x16, #480]
  4029a8:	add	x16, x16, #0x1e0
  4029ac:	br	x17

00000000004029b0 <munmap@plt>:
  4029b0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4029b4:	ldr	x17, [x16, #488]
  4029b8:	add	x16, x16, #0x1e8
  4029bc:	br	x17

00000000004029c0 <iconv@plt>:
  4029c0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4029c4:	ldr	x17, [x16, #496]
  4029c8:	add	x16, x16, #0x1f0
  4029cc:	br	x17

00000000004029d0 <fileno_unlocked@plt>:
  4029d0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4029d4:	ldr	x17, [x16, #504]
  4029d8:	add	x16, x16, #0x1f8
  4029dc:	br	x17

00000000004029e0 <opendir@plt>:
  4029e0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4029e4:	ldr	x17, [x16, #512]
  4029e8:	add	x16, x16, #0x200
  4029ec:	br	x17

00000000004029f0 <mbstowcs@plt>:
  4029f0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  4029f4:	ldr	x17, [x16, #520]
  4029f8:	add	x16, x16, #0x208
  4029fc:	br	x17

0000000000402a00 <__isoc99_sscanf@plt>:
  402a00:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a04:	ldr	x17, [x16, #528]
  402a08:	add	x16, x16, #0x210
  402a0c:	br	x17

0000000000402a10 <__cxa_atexit@plt>:
  402a10:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a14:	ldr	x17, [x16, #536]
  402a18:	add	x16, x16, #0x218
  402a1c:	br	x17

0000000000402a20 <snprintf@plt>:
  402a20:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a24:	ldr	x17, [x16, #544]
  402a28:	add	x16, x16, #0x220
  402a2c:	br	x17

0000000000402a30 <chdir@plt>:
  402a30:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a34:	ldr	x17, [x16, #552]
  402a38:	add	x16, x16, #0x228
  402a3c:	br	x17

0000000000402a40 <asctime@plt>:
  402a40:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a44:	ldr	x17, [x16, #560]
  402a48:	add	x16, x16, #0x230
  402a4c:	br	x17

0000000000402a50 <fflush@plt>:
  402a50:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a54:	ldr	x17, [x16, #568]
  402a58:	add	x16, x16, #0x238
  402a5c:	br	x17

0000000000402a60 <sbrk@plt>:
  402a60:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a64:	ldr	x17, [x16, #576]
  402a68:	add	x16, x16, #0x240
  402a6c:	br	x17

0000000000402a70 <memmove@plt>:
  402a70:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a74:	ldr	x17, [x16, #584]
  402a78:	add	x16, x16, #0x248
  402a7c:	br	x17

0000000000402a80 <time@plt>:
  402a80:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a84:	ldr	x17, [x16, #592]
  402a88:	add	x16, x16, #0x250
  402a8c:	br	x17

0000000000402a90 <nftw@plt>:
  402a90:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402a94:	ldr	x17, [x16, #600]
  402a98:	add	x16, x16, #0x258
  402a9c:	br	x17

0000000000402aa0 <strrchr@plt>:
  402aa0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402aa4:	ldr	x17, [x16, #608]
  402aa8:	add	x16, x16, #0x260
  402aac:	br	x17

0000000000402ab0 <_ZdaPv@plt>:
  402ab0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ab4:	ldr	x17, [x16, #616]
  402ab8:	add	x16, x16, #0x268
  402abc:	br	x17

0000000000402ac0 <__errno_location@plt>:
  402ac0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ac4:	ldr	x17, [x16, #624]
  402ac8:	add	x16, x16, #0x270
  402acc:	br	x17

0000000000402ad0 <__uflow@plt>:
  402ad0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ad4:	ldr	x17, [x16, #632]
  402ad8:	add	x16, x16, #0x278
  402adc:	br	x17

0000000000402ae0 <mkdir@plt>:
  402ae0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ae4:	ldr	x17, [x16, #640]
  402ae8:	add	x16, x16, #0x280
  402aec:	br	x17

0000000000402af0 <strtoul@plt>:
  402af0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402af4:	ldr	x17, [x16, #648]
  402af8:	add	x16, x16, #0x288
  402afc:	br	x17

0000000000402b00 <getcwd@plt>:
  402b00:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b04:	ldr	x17, [x16, #656]
  402b08:	add	x16, x16, #0x290
  402b0c:	br	x17

0000000000402b10 <__fsetlocking@plt>:
  402b10:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b14:	ldr	x17, [x16, #664]
  402b18:	add	x16, x16, #0x298
  402b1c:	br	x17

0000000000402b20 <fopen@plt>:
  402b20:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b24:	ldr	x17, [x16, #672]
  402b28:	add	x16, x16, #0x2a0
  402b2c:	br	x17

0000000000402b30 <close@plt>:
  402b30:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b34:	ldr	x17, [x16, #680]
  402b38:	add	x16, x16, #0x2a8
  402b3c:	br	x17

0000000000402b40 <strcmp@plt>:
  402b40:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b44:	ldr	x17, [x16, #688]
  402b48:	add	x16, x16, #0x2b0
  402b4c:	br	x17

0000000000402b50 <__xstat@plt>:
  402b50:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b54:	ldr	x17, [x16, #696]
  402b58:	add	x16, x16, #0x2b8
  402b5c:	br	x17

0000000000402b60 <malloc@plt>:
  402b60:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b64:	ldr	x17, [x16, #704]
  402b68:	add	x16, x16, #0x2c0
  402b6c:	br	x17

0000000000402b70 <__lxstat@plt>:
  402b70:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b74:	ldr	x17, [x16, #712]
  402b78:	add	x16, x16, #0x2c8
  402b7c:	br	x17

0000000000402b80 <abort@plt>:
  402b80:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b84:	ldr	x17, [x16, #720]
  402b88:	add	x16, x16, #0x2d0
  402b8c:	br	x17

0000000000402b90 <getenv@plt>:
  402b90:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402b94:	ldr	x17, [x16, #728]
  402b98:	add	x16, x16, #0x2d8
  402b9c:	br	x17

0000000000402ba0 <strcasecmp@plt>:
  402ba0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ba4:	ldr	x17, [x16, #736]
  402ba8:	add	x16, x16, #0x2e0
  402bac:	br	x17

0000000000402bb0 <exit@plt>:
  402bb0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402bb4:	ldr	x17, [x16, #744]
  402bb8:	add	x16, x16, #0x2e8
  402bbc:	br	x17

0000000000402bc0 <strtod@plt>:
  402bc0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402bc4:	ldr	x17, [x16, #752]
  402bc8:	add	x16, x16, #0x2f0
  402bcc:	br	x17

0000000000402bd0 <fwrite_unlocked@plt>:
  402bd0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402bd4:	ldr	x17, [x16, #760]
  402bd8:	add	x16, x16, #0x2f8
  402bdc:	br	x17

0000000000402be0 <wcswidth@plt>:
  402be0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402be4:	ldr	x17, [x16, #768]
  402be8:	add	x16, x16, #0x300
  402bec:	br	x17

0000000000402bf0 <fwrite@plt>:
  402bf0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402bf4:	ldr	x17, [x16, #776]
  402bf8:	add	x16, x16, #0x308
  402bfc:	br	x17

0000000000402c00 <nl_langinfo@plt>:
  402c00:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c04:	ldr	x17, [x16, #784]
  402c08:	add	x16, x16, #0x310
  402c0c:	br	x17

0000000000402c10 <getpagesize@plt>:
  402c10:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c14:	ldr	x17, [x16, #792]
  402c18:	add	x16, x16, #0x318
  402c1c:	br	x17

0000000000402c20 <__cxa_guard_acquire@plt>:
  402c20:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c24:	ldr	x17, [x16, #800]
  402c28:	add	x16, x16, #0x320
  402c2c:	br	x17

0000000000402c30 <vsprintf@plt>:
  402c30:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c34:	ldr	x17, [x16, #808]
  402c38:	add	x16, x16, #0x328
  402c3c:	br	x17

0000000000402c40 <ferror@plt>:
  402c40:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c44:	ldr	x17, [x16, #816]
  402c48:	add	x16, x16, #0x330
  402c4c:	br	x17

0000000000402c50 <fdopen@plt>:
  402c50:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c54:	ldr	x17, [x16, #824]
  402c58:	add	x16, x16, #0x338
  402c5c:	br	x17

0000000000402c60 <strnlen@plt>:
  402c60:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c64:	ldr	x17, [x16, #832]
  402c68:	add	x16, x16, #0x340
  402c6c:	br	x17

0000000000402c70 <realpath@plt>:
  402c70:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c74:	ldr	x17, [x16, #840]
  402c78:	add	x16, x16, #0x348
  402c7c:	br	x17

0000000000402c80 <fcntl@plt>:
  402c80:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c84:	ldr	x17, [x16, #848]
  402c88:	add	x16, x16, #0x350
  402c8c:	br	x17

0000000000402c90 <__gmon_start__@plt>:
  402c90:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402c94:	ldr	x17, [x16, #856]
  402c98:	add	x16, x16, #0x358
  402c9c:	br	x17

0000000000402ca0 <setbuf@plt>:
  402ca0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ca4:	ldr	x17, [x16, #864]
  402ca8:	add	x16, x16, #0x360
  402cac:	br	x17

0000000000402cb0 <bcmp@plt>:
  402cb0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402cb4:	ldr	x17, [x16, #872]
  402cb8:	add	x16, x16, #0x368
  402cbc:	br	x17

0000000000402cc0 <strcat@plt>:
  402cc0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402cc4:	ldr	x17, [x16, #880]
  402cc8:	add	x16, x16, #0x370
  402ccc:	br	x17

0000000000402cd0 <fseek@plt>:
  402cd0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402cd4:	ldr	x17, [x16, #888]
  402cd8:	add	x16, x16, #0x378
  402cdc:	br	x17

0000000000402ce0 <printf@plt>:
  402ce0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402ce4:	ldr	x17, [x16, #896]
  402ce8:	add	x16, x16, #0x380
  402cec:	br	x17

0000000000402cf0 <vfprintf@plt>:
  402cf0:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402cf4:	ldr	x17, [x16, #904]
  402cf8:	add	x16, x16, #0x388
  402cfc:	br	x17

0000000000402d00 <feof@plt>:
  402d00:	adrp	x16, 47c000 <_Unwind_Backtrace@GCC_3.3>
  402d04:	ldr	x17, [x16, #912]
  402d08:	add	x16, x16, #0x390
  402d0c:	br	x17

Disassembly of section .text:

0000000000402d10 <_obstack_begin@@Base-0x521a0>:
  402d10:	stp	x29, x30, [sp, #-32]!
  402d14:	str	x19, [sp, #16]
  402d18:	mov	x29, sp
  402d1c:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  402d20:	add	x19, x19, #0x8b8
  402d24:	mov	x0, x19
  402d28:	bl	4153b0 <feof@plt+0x126b0>
  402d2c:	mov	x1, x19
  402d30:	ldr	x19, [sp, #16]
  402d34:	adrp	x0, 415000 <feof@plt+0x12300>
  402d38:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402d3c:	add	x0, x0, #0x5d4
  402d40:	add	x2, x2, #0x3a0
  402d44:	ldp	x29, x30, [sp], #32
  402d48:	b	402a10 <__cxa_atexit@plt>
  402d4c:	mov	x29, #0x0                   	// #0
  402d50:	mov	x30, #0x0                   	// #0
  402d54:	mov	x5, x0
  402d58:	ldr	x1, [sp]
  402d5c:	add	x2, sp, #0x8
  402d60:	mov	x6, sp
  402d64:	movz	x0, #0x0, lsl #48
  402d68:	movk	x0, #0x0, lsl #32
  402d6c:	movk	x0, #0x40, lsl #16
  402d70:	movk	x0, #0x2e54
  402d74:	movz	x3, #0x0, lsl #48
  402d78:	movk	x3, #0x0, lsl #32
  402d7c:	movk	x3, #0x45, lsl #16
  402d80:	movk	x3, #0x5840
  402d84:	movz	x4, #0x0, lsl #48
  402d88:	movk	x4, #0x0, lsl #32
  402d8c:	movk	x4, #0x45, lsl #16
  402d90:	movk	x4, #0x58c0
  402d94:	bl	4028e0 <__libc_start_main@plt>
  402d98:	bl	402b80 <abort@plt>
  402d9c:	adrp	x0, 47b000 <_obstack_memory_used@@Base+0x25dd8>
  402da0:	ldr	x0, [x0, #4064]
  402da4:	cbz	x0, 402dac <feof@plt+0xac>
  402da8:	b	402c90 <__gmon_start__@plt>
  402dac:	ret
  402db0:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402db4:	add	x0, x0, #0x560
  402db8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402dbc:	add	x1, x1, #0x560
  402dc0:	cmp	x1, x0
  402dc4:	b.eq	402ddc <feof@plt+0xdc>  // b.none
  402dc8:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  402dcc:	ldr	x1, [x1, #2280]
  402dd0:	cbz	x1, 402ddc <feof@plt+0xdc>
  402dd4:	mov	x16, x1
  402dd8:	br	x16
  402ddc:	ret
  402de0:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402de4:	add	x0, x0, #0x560
  402de8:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402dec:	add	x1, x1, #0x560
  402df0:	sub	x1, x1, x0
  402df4:	lsr	x2, x1, #63
  402df8:	add	x1, x2, x1, asr #3
  402dfc:	cmp	xzr, x1, asr #1
  402e00:	asr	x1, x1, #1
  402e04:	b.eq	402e1c <feof@plt+0x11c>  // b.none
  402e08:	adrp	x2, 455000 <_obstack_begin_1@@Base+0xa4>
  402e0c:	ldr	x2, [x2, #2288]
  402e10:	cbz	x2, 402e1c <feof@plt+0x11c>
  402e14:	mov	x16, x2
  402e18:	br	x16
  402e1c:	ret
  402e20:	stp	x29, x30, [sp, #-32]!
  402e24:	mov	x29, sp
  402e28:	str	x19, [sp, #16]
  402e2c:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402e30:	ldrb	w0, [x19, #1424]
  402e34:	cbnz	w0, 402e44 <feof@plt+0x144>
  402e38:	bl	402db0 <feof@plt+0xb0>
  402e3c:	mov	w0, #0x1                   	// #1
  402e40:	strb	w0, [x19, #1424]
  402e44:	ldr	x19, [sp, #16]
  402e48:	ldp	x29, x30, [sp], #32
  402e4c:	ret
  402e50:	b	402de0 <feof@plt+0xe0>
  402e54:	sub	sp, sp, #0x80
  402e58:	str	d8, [sp, #16]
  402e5c:	stp	x29, x30, [sp, #32]
  402e60:	stp	x28, x27, [sp, #48]
  402e64:	stp	x26, x25, [sp, #64]
  402e68:	stp	x24, x23, [sp, #80]
  402e6c:	stp	x22, x21, [sp, #96]
  402e70:	stp	x20, x19, [sp, #112]
  402e74:	add	x29, sp, #0x10
  402e78:	str	w0, [sp, #8]
  402e7c:	str	x1, [sp]
  402e80:	ldr	x19, [x1]
  402e84:	mov	x0, x19
  402e88:	bl	4026d0 <strlen@plt>
  402e8c:	cbz	x0, 402eac <feof@plt+0x1ac>
  402e90:	add	x8, x19, x0
  402e94:	ldurb	w8, [x8, #-1]
  402e98:	sub	x0, x0, #0x1
  402e9c:	cmp	w8, #0x2f
  402ea0:	b.ne	402e8c <feof@plt+0x18c>  // b.any
  402ea4:	add	x8, x19, x0
  402ea8:	add	x19, x8, #0x1
  402eac:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  402eb0:	mov	x0, x19
  402eb4:	str	x19, [x8, #1896]
  402eb8:	bl	4552a4 <_obstack_memory_used@@Base+0x7c>
  402ebc:	bl	453b00 <feof@plt+0x50e00>
  402ec0:	bl	414f88 <feof@plt+0x12288>
  402ec4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402ec8:	ldr	x0, [x8, #944]
  402ecc:	mov	w1, wzr
  402ed0:	bl	4087fc <feof@plt+0x5afc>
  402ed4:	add	x0, sp, #0x8
  402ed8:	mov	x1, sp
  402edc:	bl	453708 <feof@plt+0x50a08>
  402ee0:	ldr	w0, [sp, #8]
  402ee4:	ldr	x1, [sp]
  402ee8:	adrp	x2, 455000 <_obstack_begin_1@@Base+0xa4>
  402eec:	adrp	x3, 455000 <_obstack_begin_1@@Base+0xa4>
  402ef0:	add	x2, x2, #0xbd0
  402ef4:	add	x3, x3, #0x968
  402ef8:	mov	x4, xzr
  402efc:	bl	402890 <getopt_long@plt>
  402f00:	cmn	w0, #0x1
  402f04:	b.ne	4033fc <feof@plt+0x6fc>  // b.any
  402f08:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402f0c:	ldrsw	x22, [x26, #1400]
  402f10:	ldr	w23, [sp, #8]
  402f14:	cmp	w23, w22
  402f18:	b.le	403418 <feof@plt+0x718>
  402f1c:	ldr	x8, [sp]
  402f20:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  402f24:	add	x1, x1, #0x40e
  402f28:	add	x19, x8, x22, lsl #3
  402f2c:	ldr	x20, [x19]
  402f30:	mov	x0, x20
  402f34:	bl	402b40 <strcmp@plt>
  402f38:	cbz	w0, 403070 <feof@plt+0x370>
  402f3c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  402f40:	add	x1, x1, #0xbc8
  402f44:	mov	x0, x20
  402f48:	bl	402b40 <strcmp@plt>
  402f4c:	cbz	w0, 403188 <feof@plt+0x488>
  402f50:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  402f54:	add	x1, x1, #0x69f
  402f58:	mov	x0, x20
  402f5c:	bl	402b40 <strcmp@plt>
  402f60:	cbnz	w0, 403418 <feof@plt+0x718>
  402f64:	sub	w20, w23, w22
  402f68:	adrp	x21, 456000 <_obstack_memory_used@@Base+0xdd8>
  402f6c:	adrp	x22, 455000 <_obstack_begin_1@@Base+0xa4>
  402f70:	adrp	x23, 455000 <_obstack_begin_1@@Base+0xa4>
  402f74:	str	wzr, [x26, #1400]
  402f78:	add	x21, x21, #0x32f
  402f7c:	add	x22, x22, #0xae8
  402f80:	add	x23, x23, #0x8f8
  402f84:	mov	w25, #0x1                   	// #1
  402f88:	adrp	x28, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402f8c:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402f90:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402f94:	adrp	x27, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402f98:	mov	w0, w20
  402f9c:	mov	x1, x19
  402fa0:	mov	x2, x21
  402fa4:	mov	x3, x22
  402fa8:	mov	x4, xzr
  402fac:	bl	402890 <getopt_long@plt>
  402fb0:	sub	w8, w0, #0x46
  402fb4:	cmp	w8, #0x30
  402fb8:	b.hi	403010 <feof@plt+0x310>  // b.pmore
  402fbc:	adr	x9, 402fcc <feof@plt+0x2cc>
  402fc0:	ldrh	w10, [x23, x8, lsl #1]
  402fc4:	add	x9, x9, x10, lsl #2
  402fc8:	br	x9
  402fcc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402fd0:	str	w25, [x8, #1440]
  402fd4:	b	402f98 <feof@plt+0x298>
  402fd8:	str	w25, [x26, #1432]
  402fdc:	b	402f98 <feof@plt+0x298>
  402fe0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  402fe4:	str	w25, [x8, #1428]
  402fe8:	b	402f98 <feof@plt+0x298>
  402fec:	str	w25, [x28, #1436]
  402ff0:	b	402f98 <feof@plt+0x298>
  402ff4:	bl	40394c <feof@plt+0xc4c>
  402ff8:	b	402f98 <feof@plt+0x298>
  402ffc:	ldr	x0, [x24, #1392]
  403000:	mov	x1, xzr
  403004:	bl	402bc0 <strtod@plt>
  403008:	str	d0, [x27, #936]
  40300c:	b	402f98 <feof@plt+0x298>
  403010:	cmn	w0, #0x1
  403014:	b.ne	4033f8 <feof@plt+0x6f8>  // b.any
  403018:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40301c:	ldrsw	x8, [x8, #1400]
  403020:	sub	w9, w20, w8
  403024:	cmp	w9, #0x2
  403028:	b.ne	4033f8 <feof@plt+0x6f8>  // b.any
  40302c:	ldr	x0, [x19, x8, lsl #3]
  403030:	add	w8, w8, #0x1
  403034:	ldr	x20, [x19, w8, sxtw #3]
  403038:	mov	w1, wzr
  40303c:	bl	40395c <feof@plt+0xc5c>
  403040:	mov	x19, x0
  403044:	mov	w0, #0x1                   	// #1
  403048:	cbz	x20, 4033d4 <feof@plt+0x6d4>
  40304c:	cbz	x19, 4033d4 <feof@plt+0x6d4>
  403050:	mov	x0, x20
  403054:	mov	w1, wzr
  403058:	bl	40395c <feof@plt+0xc5c>
  40305c:	cbz	x0, 4033ac <feof@plt+0x6ac>
  403060:	mov	x1, x0
  403064:	mov	x0, x19
  403068:	bl	404648 <feof@plt+0x1948>
  40306c:	b	4033d4 <feof@plt+0x6d4>
  403070:	sub	w20, w23, w22
  403074:	adrp	x21, 456000 <_obstack_memory_used@@Base+0xdd8>
  403078:	adrp	x22, 455000 <_obstack_begin_1@@Base+0xa4>
  40307c:	adrp	x23, 456000 <_obstack_memory_used@@Base+0xdd8>
  403080:	mov	x24, xzr
  403084:	mov	w8, #0x1                   	// #1
  403088:	add	x21, x21, #0x138
  40308c:	add	x22, x22, #0x9c8
  403090:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403094:	add	x23, x23, #0x13e
  403098:	str	wzr, [x26, #1400]
  40309c:	stp	w8, w8, [x29, #8]
  4030a0:	mov	w0, w20
  4030a4:	mov	x1, x19
  4030a8:	mov	x2, x21
  4030ac:	mov	x3, x22
  4030b0:	mov	x4, xzr
  4030b4:	bl	402890 <getopt_long@plt>
  4030b8:	cmp	w0, #0x75
  4030bc:	b.gt	4030d8 <feof@plt+0x3d8>
  4030c0:	cmn	w0, #0x1
  4030c4:	b.eq	403114 <feof@plt+0x414>  // b.none
  4030c8:	cmp	w0, #0x6f
  4030cc:	b.ne	403420 <feof@plt+0x720>  // b.any
  4030d0:	ldr	x24, [x25, #1392]
  4030d4:	b	4030a0 <feof@plt+0x3a0>
  4030d8:	cmp	w0, #0x77
  4030dc:	b.ne	403104 <feof@plt+0x404>  // b.any
  4030e0:	ldr	x0, [x25, #1392]
  4030e4:	add	x2, x29, #0xc
  4030e8:	add	x3, x29, #0x8
  4030ec:	mov	x1, x23
  4030f0:	bl	402a00 <__isoc99_sscanf@plt>
  4030f4:	ldp	w9, w8, [x29, #8]
  4030f8:	orr	w8, w9, w8
  4030fc:	tbz	w8, #31, 4030a0 <feof@plt+0x3a0>
  403100:	b	40343c <feof@plt+0x73c>
  403104:	cmp	w0, #0x76
  403108:	b.ne	403420 <feof@plt+0x720>  // b.any
  40310c:	bl	40394c <feof@plt+0xc4c>
  403110:	b	4030a0 <feof@plt+0x3a0>
  403114:	ldrsw	x8, [x26, #1400]
  403118:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  40311c:	add	x9, x9, #0x165
  403120:	cmp	x24, #0x0
  403124:	csel	x21, x9, x24, eq  // eq = none
  403128:	sub	w9, w20, w8
  40312c:	cmp	w9, #0x2
  403130:	b.ne	403420 <feof@plt+0x720>  // b.any
  403134:	ldr	x0, [x19, x8, lsl #3]
  403138:	add	w8, w8, #0x1
  40313c:	ldp	w22, w20, [x29, #8]
  403140:	ldr	x23, [x19, w8, sxtw #3]
  403144:	mov	w1, wzr
  403148:	bl	40395c <feof@plt+0xc5c>
  40314c:	cbz	x0, 4033ac <feof@plt+0x6ac>
  403150:	mov	x19, x0
  403154:	cbz	x23, 403180 <feof@plt+0x480>
  403158:	mov	x0, x23
  40315c:	mov	w1, wzr
  403160:	bl	40395c <feof@plt+0xc5c>
  403164:	cbz	x0, 4033ac <feof@plt+0x6ac>
  403168:	mov	x1, x0
  40316c:	mov	x0, x19
  403170:	mov	w2, w20
  403174:	mov	w3, w22
  403178:	bl	403ff8 <feof@plt+0x12f8>
  40317c:	cbnz	w0, 4033d4 <feof@plt+0x6d4>
  403180:	mov	x0, x21
  403184:	b	4033c8 <feof@plt+0x6c8>
  403188:	sub	w20, w23, w22
  40318c:	adrp	x22, 456000 <_obstack_memory_used@@Base+0xdd8>
  403190:	adrp	x23, 455000 <_obstack_begin_1@@Base+0xa4>
  403194:	adrp	x24, 455000 <_obstack_begin_1@@Base+0xa4>
  403198:	mov	x28, xzr
  40319c:	mov	x21, xzr
  4031a0:	mov	w27, wzr
  4031a4:	mov	w8, #0x1                   	// #1
  4031a8:	add	x22, x22, #0x23a
  4031ac:	add	x23, x23, #0xa48
  4031b0:	add	x24, x24, #0x95a
  4031b4:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4031b8:	str	wzr, [x26, #1400]
  4031bc:	stp	w8, wzr, [x29, #8]
  4031c0:	stur	w8, [x29, #-4]
  4031c4:	mov	x0, x21
  4031c8:	mov	x21, x0
  4031cc:	mov	w0, w20
  4031d0:	mov	x1, x19
  4031d4:	mov	x2, x22
  4031d8:	mov	x3, x23
  4031dc:	mov	x4, xzr
  4031e0:	bl	402890 <getopt_long@plt>
  4031e4:	sub	w8, w0, #0x6e
  4031e8:	cmp	w8, #0x8
  4031ec:	b.hi	403320 <feof@plt+0x620>  // b.pmore
  4031f0:	adr	x9, 403200 <feof@plt+0x500>
  4031f4:	ldrb	w10, [x24, x8]
  4031f8:	add	x9, x9, x10, lsl #2
  4031fc:	br	x9
  403200:	cbz	w27, 403304 <feof@plt+0x604>
  403204:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403208:	ldr	x0, [x8, #1416]
  40320c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403210:	add	x1, x1, #0x242
  403214:	bl	408eb4 <feof@plt+0x61b4>
  403218:	b	4031cc <feof@plt+0x4cc>
  40321c:	bl	40394c <feof@plt+0xc4c>
  403220:	b	4031cc <feof@plt+0x4cc>
  403224:	ldr	x27, [x25, #1392]
  403228:	mov	w1, #0x2f                  	// #47
  40322c:	mov	x0, x27
  403230:	bl	4027b0 <strchr@plt>
  403234:	cbz	x0, 403294 <feof@plt+0x594>
  403238:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  40323c:	add	x2, x29, #0x8
  403240:	sub	x3, x29, #0x4
  403244:	mov	x0, x27
  403248:	add	x1, x1, #0x278
  40324c:	bl	402a00 <__isoc99_sscanf@plt>
  403250:	cmp	w0, #0x2
  403254:	b.ne	403290 <feof@plt+0x590>  // b.any
  403258:	ldr	w8, [x29, #8]
  40325c:	tbnz	w8, #31, 40326c <feof@plt+0x56c>
  403260:	ldur	w8, [x29, #-4]
  403264:	cmp	w8, #0x0
  403268:	b.gt	4032cc <feof@plt+0x5cc>
  40326c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403270:	ldr	x0, [x8, #1416]
  403274:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403278:	add	x1, x1, #0x27e
  40327c:	bl	408eb4 <feof@plt+0x61b4>
  403280:	mov	w8, #0x1                   	// #1
  403284:	stur	w8, [x29, #-4]
  403288:	str	w8, [x29, #8]
  40328c:	b	4032cc <feof@plt+0x5cc>
  403290:	ldr	x27, [x25, #1392]
  403294:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403298:	add	x2, x29, #0xc
  40329c:	mov	x0, x27
  4032a0:	add	x1, x1, #0x2a6
  4032a4:	bl	402a00 <__isoc99_sscanf@plt>
  4032a8:	cmp	w0, #0x1
  4032ac:	b.ne	4032b8 <feof@plt+0x5b8>  // b.any
  4032b0:	stur	wzr, [x29, #-4]
  4032b4:	b	4032cc <feof@plt+0x5cc>
  4032b8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4032bc:	ldr	x0, [x8, #1416]
  4032c0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4032c4:	add	x1, x1, #0x27e
  4032c8:	bl	408eb4 <feof@plt+0x61b4>
  4032cc:	ldr	s0, [x29, #12]
  4032d0:	fcmp	s0, #0.0
  4032d4:	b.mi	403428 <feof@plt+0x728>  // b.first
  4032d8:	mov	x0, xzr
  4032dc:	mov	w27, #0x1                   	// #1
  4032e0:	cbz	x21, 4031c8 <feof@plt+0x4c8>
  4032e4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4032e8:	ldr	x0, [x8, #1416]
  4032ec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4032f0:	add	x1, x1, #0x2c9
  4032f4:	bl	408eb4 <feof@plt+0x61b4>
  4032f8:	mov	x0, xzr
  4032fc:	mov	w27, #0x1                   	// #1
  403300:	b	4031c8 <feof@plt+0x4c8>
  403304:	ldr	x0, [x25, #1392]
  403308:	mov	w2, #0xa                   	// #10
  40330c:	mov	x1, xzr
  403310:	bl	402750 <strtol@plt>
  403314:	b	4031c8 <feof@plt+0x4c8>
  403318:	ldr	x28, [x25, #1392]
  40331c:	b	4031c4 <feof@plt+0x4c4>
  403320:	cmn	w0, #0x1
  403324:	b.ne	403414 <feof@plt+0x714>  // b.any
  403328:	ldrsw	x8, [x26, #1400]
  40332c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  403330:	add	x9, x9, #0x2f5
  403334:	cmp	x28, #0x0
  403338:	csel	x22, x9, x28, eq  // eq = none
  40333c:	sub	w9, w20, w8
  403340:	cmp	w9, #0x1
  403344:	b.ne	403414 <feof@plt+0x714>  // b.any
  403348:	ldur	w20, [x29, #-4]
  40334c:	ldr	x0, [x19, x8, lsl #3]
  403350:	cmp	w20, #0x1
  403354:	b.lt	403388 <feof@plt+0x688>  // b.tstop
  403358:	ldr	w19, [x29, #8]
  40335c:	mov	w1, wzr
  403360:	bl	40395c <feof@plt+0xc5c>
  403364:	cbz	x0, 4033ac <feof@plt+0x6ac>
  403368:	fmov	s0, wzr
  40336c:	mov	w1, w19
  403370:	mov	w2, w20
  403374:	mov	x21, x0
  403378:	bl	404390 <feof@plt+0x1690>
  40337c:	mov	x0, x22
  403380:	mov	x1, x21
  403384:	b	4033cc <feof@plt+0x6cc>
  403388:	ldr	s8, [x29, #12]
  40338c:	mov	w1, wzr
  403390:	bl	40395c <feof@plt+0xc5c>
  403394:	cbz	x0, 4033ac <feof@plt+0x6ac>
  403398:	mov	x19, x0
  40339c:	cbz	x21, 4033b4 <feof@plt+0x6b4>
  4033a0:	mov	x1, x21
  4033a4:	bl	4044fc <feof@plt+0x17fc>
  4033a8:	b	4033c4 <feof@plt+0x6c4>
  4033ac:	mov	w0, #0x1                   	// #1
  4033b0:	b	4033d4 <feof@plt+0x6d4>
  4033b4:	mov	v0.16b, v8.16b
  4033b8:	mov	w1, wzr
  4033bc:	mov	w2, wzr
  4033c0:	bl	404390 <feof@plt+0x1690>
  4033c4:	mov	x0, x22
  4033c8:	mov	x1, x19
  4033cc:	bl	403740 <feof@plt+0xa40>
  4033d0:	mov	w0, wzr
  4033d4:	ldp	x20, x19, [sp, #112]
  4033d8:	ldp	x22, x21, [sp, #96]
  4033dc:	ldp	x24, x23, [sp, #80]
  4033e0:	ldp	x26, x25, [sp, #64]
  4033e4:	ldp	x28, x27, [sp, #48]
  4033e8:	ldp	x29, x30, [sp, #32]
  4033ec:	ldr	d8, [sp, #16]
  4033f0:	add	sp, sp, #0x80
  4033f4:	ret
  4033f8:	bl	403920 <feof@plt+0xc20>
  4033fc:	cmp	w0, #0x76
  403400:	b.eq	403424 <feof@plt+0x724>  // b.none
  403404:	cmp	w0, #0x68
  403408:	b.ne	403418 <feof@plt+0x718>  // b.any
  40340c:	mov	w0, wzr
  403410:	bl	403450 <feof@plt+0x750>
  403414:	bl	4038f4 <feof@plt+0xbf4>
  403418:	mov	w0, #0x1                   	// #1
  40341c:	bl	403450 <feof@plt+0x750>
  403420:	bl	403714 <feof@plt+0xa14>
  403424:	bl	403504 <feof@plt+0x804>
  403428:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40342c:	ldr	w0, [x8, #2288]
  403430:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403434:	add	x1, x1, #0x2a9
  403438:	bl	40b744 <feof@plt+0x8a44>
  40343c:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  403440:	ldr	w0, [x8, #2288]
  403444:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403448:	add	x1, x1, #0x144
  40344c:	bl	40b744 <feof@plt+0x8a44>
  403450:	stp	x29, x30, [sp, #-48]!
  403454:	str	x21, [sp, #16]
  403458:	stp	x20, x19, [sp, #32]
  40345c:	mov	x29, sp
  403460:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403464:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403468:	cmp	w0, #0x0
  40346c:	add	x8, x8, #0x588
  403470:	add	x9, x9, #0x580
  403474:	csel	x8, x8, x9, ne  // ne = any
  403478:	adrp	x10, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40347c:	ldr	x20, [x8]
  403480:	ldr	x2, [x10, #1896]
  403484:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403488:	mov	w19, w0
  40348c:	add	x1, x1, #0xcb1
  403490:	mov	x0, x20
  403494:	cset	w21, ne  // ne = any
  403498:	bl	408eb4 <feof@plt+0x61b4>
  40349c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4034a0:	add	x1, x1, #0xce1
  4034a4:	mov	x0, x20
  4034a8:	bl	408eb4 <feof@plt+0x61b4>
  4034ac:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4034b0:	add	x1, x1, #0xd06
  4034b4:	mov	x0, x20
  4034b8:	bl	408eb4 <feof@plt+0x61b4>
  4034bc:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4034c0:	add	x1, x1, #0xd4a
  4034c4:	mov	x0, x20
  4034c8:	bl	408eb4 <feof@plt+0x61b4>
  4034cc:	mov	w0, w19
  4034d0:	bl	403584 <feof@plt+0x884>
  4034d4:	mov	w0, w19
  4034d8:	bl	4035f4 <feof@plt+0x8f4>
  4034dc:	mov	w0, w19
  4034e0:	bl	403674 <feof@plt+0x974>
  4034e4:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4034e8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4034ec:	add	x1, x1, #0xd93
  4034f0:	add	x2, x2, #0x240
  4034f4:	mov	x0, x20
  4034f8:	bl	408eb4 <feof@plt+0x61b4>
  4034fc:	mov	w0, w21
  403500:	bl	402bb0 <exit@plt>
  403504:	stp	x29, x30, [sp, #-32]!
  403508:	stp	x20, x19, [sp, #16]
  40350c:	mov	x29, sp
  403510:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403514:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  403518:	ldr	x0, [x20, #1408]
  40351c:	ldr	x2, [x8, #1896]
  403520:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403524:	adrp	x3, 458000 <_obstack_memory_used@@Base+0x2dd8>
  403528:	adrp	x4, 458000 <_obstack_memory_used@@Base+0x2dd8>
  40352c:	add	x1, x1, #0xbd9
  403530:	add	x3, x3, #0x262
  403534:	add	x4, x4, #0x25c
  403538:	bl	408eb4 <feof@plt+0x61b4>
  40353c:	ldr	x19, [x20, #1408]
  403540:	adrp	x0, 455000 <_obstack_begin_1@@Base+0xa4>
  403544:	add	x0, x0, #0xc14
  403548:	bl	402910 <gettext@plt>
  40354c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403550:	mov	x2, x0
  403554:	add	x1, x1, #0xbe2
  403558:	mov	x0, x19
  40355c:	bl	408eb4 <feof@plt+0x61b4>
  403560:	ldr	x19, [x20, #1408]
  403564:	adrp	x0, 455000 <_obstack_begin_1@@Base+0xa4>
  403568:	add	x0, x0, #0xc18
  40356c:	bl	402910 <gettext@plt>
  403570:	mov	x1, x0
  403574:	mov	x0, x19
  403578:	bl	408eb4 <feof@plt+0x61b4>
  40357c:	mov	w0, wzr
  403580:	bl	402bb0 <exit@plt>
  403584:	stp	x29, x30, [sp, #-32]!
  403588:	str	x19, [sp, #16]
  40358c:	mov	x29, sp
  403590:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403594:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403598:	add	x8, x8, #0x588
  40359c:	add	x9, x9, #0x580
  4035a0:	cmp	w0, #0x0
  4035a4:	csel	x8, x9, x8, eq  // eq = none
  4035a8:	ldr	x19, [x8]
  4035ac:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4035b0:	add	x1, x1, #0xdc5
  4035b4:	mov	x0, x19
  4035b8:	bl	408eb4 <feof@plt+0x61b4>
  4035bc:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4035c0:	add	x1, x1, #0xe0b
  4035c4:	mov	x0, x19
  4035c8:	bl	408eb4 <feof@plt+0x61b4>
  4035cc:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4035d0:	add	x1, x1, #0xe45
  4035d4:	mov	x0, x19
  4035d8:	bl	408eb4 <feof@plt+0x61b4>
  4035dc:	mov	x0, x19
  4035e0:	ldr	x19, [sp, #16]
  4035e4:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4035e8:	add	x1, x1, #0xe7b
  4035ec:	ldp	x29, x30, [sp], #32
  4035f0:	b	408eb4 <feof@plt+0x61b4>
  4035f4:	stp	x29, x30, [sp, #-32]!
  4035f8:	str	x19, [sp, #16]
  4035fc:	mov	x29, sp
  403600:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403604:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403608:	add	x8, x8, #0x588
  40360c:	add	x9, x9, #0x580
  403610:	cmp	w0, #0x0
  403614:	csel	x8, x9, x8, eq  // eq = none
  403618:	ldr	x19, [x8]
  40361c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403620:	add	x1, x1, #0xec5
  403624:	mov	x0, x19
  403628:	bl	408eb4 <feof@plt+0x61b4>
  40362c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403630:	add	x1, x1, #0xf0d
  403634:	mov	x0, x19
  403638:	bl	408eb4 <feof@plt+0x61b4>
  40363c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403640:	add	x1, x1, #0xe0b
  403644:	mov	x0, x19
  403648:	bl	408eb4 <feof@plt+0x61b4>
  40364c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403650:	add	x1, x1, #0xf4c
  403654:	mov	x0, x19
  403658:	bl	408eb4 <feof@plt+0x61b4>
  40365c:	mov	x0, x19
  403660:	ldr	x19, [sp, #16]
  403664:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403668:	add	x1, x1, #0xe45
  40366c:	ldp	x29, x30, [sp], #32
  403670:	b	408eb4 <feof@plt+0x61b4>
  403674:	stp	x29, x30, [sp, #-32]!
  403678:	str	x19, [sp, #16]
  40367c:	mov	x29, sp
  403680:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403684:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403688:	add	x8, x8, #0x588
  40368c:	add	x9, x9, #0x580
  403690:	cmp	w0, #0x0
  403694:	csel	x8, x9, x8, eq  // eq = none
  403698:	ldr	x19, [x8]
  40369c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4036a0:	add	x1, x1, #0xf90
  4036a4:	mov	x0, x19
  4036a8:	bl	408eb4 <feof@plt+0x61b4>
  4036ac:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  4036b0:	add	x1, x1, #0xfdd
  4036b4:	mov	x0, x19
  4036b8:	bl	408eb4 <feof@plt+0x61b4>
  4036bc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4036c0:	add	x1, x1, #0x20
  4036c4:	mov	x0, x19
  4036c8:	bl	408eb4 <feof@plt+0x61b4>
  4036cc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4036d0:	add	x1, x1, #0x5d
  4036d4:	mov	x0, x19
  4036d8:	bl	408eb4 <feof@plt+0x61b4>
  4036dc:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4036e0:	add	x1, x1, #0xb0
  4036e4:	mov	x0, x19
  4036e8:	bl	408eb4 <feof@plt+0x61b4>
  4036ec:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4036f0:	add	x1, x1, #0xf1
  4036f4:	mov	x0, x19
  4036f8:	bl	408eb4 <feof@plt+0x61b4>
  4036fc:	mov	x0, x19
  403700:	ldr	x19, [sp, #16]
  403704:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  403708:	add	x1, x1, #0xe45
  40370c:	ldp	x29, x30, [sp], #32
  403710:	b	408eb4 <feof@plt+0x61b4>
  403714:	stp	x29, x30, [sp, #-16]!
  403718:	mov	x29, sp
  40371c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403720:	ldr	x0, [x8, #1416]
  403724:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403728:	add	x1, x1, #0x183
  40372c:	bl	408eb4 <feof@plt+0x61b4>
  403730:	mov	w0, #0x1                   	// #1
  403734:	bl	403584 <feof@plt+0x884>
  403738:	mov	w0, #0x1                   	// #1
  40373c:	bl	402bb0 <exit@plt>
  403740:	stp	x29, x30, [sp, #-48]!
  403744:	stp	x22, x21, [sp, #16]
  403748:	stp	x20, x19, [sp, #32]
  40374c:	mov	x29, sp
  403750:	mov	x20, x1
  403754:	mov	w1, wzr
  403758:	mov	x19, x0
  40375c:	bl	402820 <access@plt>
  403760:	cmn	w0, #0x1
  403764:	b.eq	403784 <feof@plt+0xa84>  // b.none
  403768:	adrp	x1, 403000 <feof@plt+0x300>
  40376c:	add	x1, x1, #0x888
  403770:	mov	w2, #0x40                  	// #64
  403774:	mov	w3, #0x9                   	// #9
  403778:	mov	x0, x19
  40377c:	bl	402a90 <nftw@plt>
  403780:	b	4037a8 <feof@plt+0xaa8>
  403784:	mov	w1, #0x1ff                 	// #511
  403788:	mov	x0, x19
  40378c:	bl	402ae0 <mkdir@plt>
  403790:	cmn	w0, #0x1
  403794:	b.ne	4037a8 <feof@plt+0xaa8>  // b.any
  403798:	bl	402ac0 <__errno_location@plt>
  40379c:	ldr	w8, [x0]
  4037a0:	cmp	w8, #0x11
  4037a4:	b.ne	403870 <feof@plt+0xb70>  // b.any
  4037a8:	mov	x0, xzr
  4037ac:	mov	x1, xzr
  4037b0:	bl	402b00 <getcwd@plt>
  4037b4:	cbz	x0, 403810 <feof@plt+0xb10>
  4037b8:	mov	x21, x0
  4037bc:	mov	x0, x19
  4037c0:	bl	402a30 <chdir@plt>
  4037c4:	cbnz	w0, 403824 <feof@plt+0xb24>
  4037c8:	mov	x0, x20
  4037cc:	bl	4080f4 <feof@plt+0x53f4>
  4037d0:	mov	w1, wzr
  4037d4:	mov	x22, x0
  4037d8:	bl	402820 <access@plt>
  4037dc:	cmn	w0, #0x1
  4037e0:	b.ne	40383c <feof@plt+0xb3c>  // b.any
  4037e4:	mov	x0, x20
  4037e8:	mov	w1, wzr
  4037ec:	bl	4061a0 <feof@plt+0x34a0>
  4037f0:	mov	x0, x21
  4037f4:	bl	402a30 <chdir@plt>
  4037f8:	cbnz	w0, 403858 <feof@plt+0xb58>
  4037fc:	mov	x0, x21
  403800:	ldp	x20, x19, [sp, #32]
  403804:	ldp	x22, x21, [sp, #16]
  403808:	ldp	x29, x30, [sp], #48
  40380c:	b	402770 <free@plt>
  403810:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  403814:	ldr	w0, [x8, #2288]
  403818:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  40381c:	add	x1, x1, #0x1b3
  403820:	bl	40b744 <feof@plt+0x8a44>
  403824:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  403828:	ldr	w0, [x8, #2288]
  40382c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403830:	add	x1, x1, #0x1d5
  403834:	mov	x2, x19
  403838:	bl	40b744 <feof@plt+0x8a44>
  40383c:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  403840:	ldr	w0, [x8, #2288]
  403844:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403848:	add	x1, x1, #0x1f3
  40384c:	mov	x2, x22
  403850:	mov	x3, x19
  403854:	bl	40b744 <feof@plt+0x8a44>
  403858:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40385c:	ldr	w0, [x8, #2288]
  403860:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403864:	add	x1, x1, #0x1d5
  403868:	mov	x2, x21
  40386c:	bl	40b744 <feof@plt+0x8a44>
  403870:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  403874:	ldr	w0, [x8, #2288]
  403878:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  40387c:	add	x1, x1, #0x19a
  403880:	mov	x2, x19
  403884:	bl	40b744 <feof@plt+0x8a44>
  403888:	stp	x29, x30, [sp, #-32]!
  40388c:	str	x19, [sp, #16]
  403890:	mov	x29, sp
  403894:	mov	x19, x0
  403898:	bl	4026d0 <strlen@plt>
  40389c:	cmp	w0, #0x6
  4038a0:	b.lt	4038cc <feof@plt+0xbcc>  // b.tstop
  4038a4:	sub	w8, w0, #0x5
  4038a8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4038ac:	add	x0, x19, w8, sxtw
  4038b0:	add	x1, x1, #0x21e
  4038b4:	mov	w2, #0x5                   	// #5
  4038b8:	bl	402980 <strncmp@plt>
  4038bc:	cbnz	w0, 4038cc <feof@plt+0xbcc>
  4038c0:	mov	x0, x19
  4038c4:	bl	4028c0 <remove@plt>
  4038c8:	cbnz	w0, 4038dc <feof@plt+0xbdc>
  4038cc:	ldr	x19, [sp, #16]
  4038d0:	mov	w0, wzr
  4038d4:	ldp	x29, x30, [sp], #32
  4038d8:	ret
  4038dc:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4038e0:	ldr	w0, [x8, #2288]
  4038e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4038e8:	add	x1, x1, #0x224
  4038ec:	mov	x2, x19
  4038f0:	bl	40b744 <feof@plt+0x8a44>
  4038f4:	stp	x29, x30, [sp, #-16]!
  4038f8:	mov	x29, sp
  4038fc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403900:	ldr	x0, [x8, #1416]
  403904:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403908:	add	x1, x1, #0x315
  40390c:	bl	408eb4 <feof@plt+0x61b4>
  403910:	mov	w0, #0x1                   	// #1
  403914:	bl	4035f4 <feof@plt+0x8f4>
  403918:	mov	w0, #0x1                   	// #1
  40391c:	bl	402bb0 <exit@plt>
  403920:	stp	x29, x30, [sp, #-16]!
  403924:	mov	x29, sp
  403928:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40392c:	ldr	x0, [x8, #1416]
  403930:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403934:	add	x1, x1, #0x366
  403938:	bl	408eb4 <feof@plt+0x61b4>
  40393c:	mov	w0, #0x1                   	// #1
  403940:	bl	403674 <feof@plt+0x974>
  403944:	mov	w0, #0x1                   	// #1
  403948:	bl	402bb0 <exit@plt>
  40394c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403950:	mov	w9, #0x1                   	// #1
  403954:	strb	w9, [x8, #1448]
  403958:	ret
  40395c:	stp	x29, x30, [sp, #-48]!
  403960:	str	x21, [sp, #16]
  403964:	stp	x20, x19, [sp, #32]
  403968:	mov	x29, sp
  40396c:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403970:	mov	w1, #0x4                   	// #4
  403974:	mov	x19, x0
  403978:	str	xzr, [x21, #1456]
  40397c:	bl	402820 <access@plt>
  403980:	cbz	w0, 403998 <feof@plt+0xc98>
  403984:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403988:	ldr	x0, [x8, #1416]
  40398c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403990:	add	x1, x1, #0x37f
  403994:	b	4039c8 <feof@plt+0xcc8>
  403998:	mov	x0, xzr
  40399c:	mov	x1, xzr
  4039a0:	bl	402b00 <getcwd@plt>
  4039a4:	cbz	x0, 403a14 <feof@plt+0xd14>
  4039a8:	mov	x20, x0
  4039ac:	mov	x0, x19
  4039b0:	bl	402a30 <chdir@plt>
  4039b4:	cbz	w0, 4039e4 <feof@plt+0xce4>
  4039b8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4039bc:	ldr	x0, [x8, #1416]
  4039c0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4039c4:	add	x1, x1, #0x3d4
  4039c8:	mov	x2, x19
  4039cc:	bl	408eb4 <feof@plt+0x61b4>
  4039d0:	mov	x0, xzr
  4039d4:	ldp	x20, x19, [sp, #32]
  4039d8:	ldr	x21, [sp, #16]
  4039dc:	ldp	x29, x30, [sp], #48
  4039e0:	ret
  4039e4:	adrp	x0, 466000 <_obstack_memory_used@@Base+0x10dd8>
  4039e8:	adrp	x1, 403000 <feof@plt+0x300>
  4039ec:	add	x0, x0, #0xb2d
  4039f0:	add	x1, x1, #0xa2c
  4039f4:	mov	w2, #0x32                  	// #50
  4039f8:	bl	4027e0 <ftw@plt>
  4039fc:	mov	x0, x20
  403a00:	bl	402a30 <chdir@plt>
  403a04:	mov	x0, x20
  403a08:	bl	402770 <free@plt>
  403a0c:	ldr	x0, [x21, #1456]
  403a10:	b	4039d4 <feof@plt+0xcd4>
  403a14:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  403a18:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  403a1c:	add	x0, x0, #0x39b
  403a20:	add	x2, x2, #0x3be
  403a24:	mov	w1, #0x1c6                 	// #454
  403a28:	bl	408b70 <feof@plt+0x5e70>
  403a2c:	sub	sp, sp, #0x80
  403a30:	stp	x29, x30, [sp, #32]
  403a34:	stp	x28, x27, [sp, #48]
  403a38:	stp	x26, x25, [sp, #64]
  403a3c:	stp	x24, x23, [sp, #80]
  403a40:	stp	x22, x21, [sp, #96]
  403a44:	stp	x20, x19, [sp, #112]
  403a48:	add	x29, sp, #0x20
  403a4c:	cbnz	w2, 403a78 <feof@plt+0xd78>
  403a50:	mov	x20, x0
  403a54:	bl	4026d0 <strlen@plt>
  403a58:	cmp	w0, #0x6
  403a5c:	b.lt	403a78 <feof@plt+0xd78>  // b.tstop
  403a60:	add	x8, x20, w0, sxtw
  403a64:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403a68:	sub	x0, x8, #0x5
  403a6c:	add	x1, x1, #0x21e
  403a70:	bl	402b40 <strcmp@plt>
  403a74:	cbz	w0, 403a9c <feof@plt+0xd9c>
  403a78:	ldp	x20, x19, [sp, #112]
  403a7c:	ldp	x22, x21, [sp, #96]
  403a80:	ldp	x24, x23, [sp, #80]
  403a84:	ldp	x26, x25, [sp, #64]
  403a88:	ldp	x28, x27, [sp, #48]
  403a8c:	ldp	x29, x30, [sp, #32]
  403a90:	mov	w0, wzr
  403a94:	add	sp, sp, #0x80
  403a98:	ret
  403a9c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403aa0:	ldrb	w8, [x8, #1448]
  403aa4:	cmp	w8, #0x1
  403aa8:	b.ne	403ac4 <feof@plt+0xdc4>  // b.any
  403aac:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403ab0:	ldr	x0, [x8, #1416]
  403ab4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403ab8:	add	x1, x1, #0x441
  403abc:	mov	x2, x20
  403ac0:	bl	408eb4 <feof@plt+0x61b4>
  403ac4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403ac8:	add	x8, x8, #0x5cc
  403acc:	movi	v0.2d, #0x0
  403ad0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403ad4:	mov	x0, x20
  403ad8:	stp	q0, q0, [x8]
  403adc:	str	wzr, [x8, #32]
  403ae0:	str	wzr, [x9, #1520]
  403ae4:	bl	4055e4 <feof@plt+0x28e4>
  403ae8:	cbz	w0, 403d7c <feof@plt+0x107c>
  403aec:	bl	405ac8 <feof@plt+0x2dc8>
  403af0:	mov	w8, #0x6461                	// #25697
  403af4:	movk	w8, #0x6763, lsl #16
  403af8:	cmp	w0, w8
  403afc:	b.ne	403d98 <feof@plt+0x1098>  // b.any
  403b00:	mov	w19, #0x322a                	// #12842
  403b04:	movk	w19, #0x4139, lsl #16
  403b08:	bl	405ac8 <feof@plt+0x2dc8>
  403b0c:	cmp	w0, w19
  403b10:	b.ne	403db8 <feof@plt+0x10b8>  // b.any
  403b14:	mov	w0, #0x108                 	// #264
  403b18:	mov	w1, #0x1                   	// #1
  403b1c:	bl	4026b0 <calloc@plt>
  403b20:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403b24:	mov	x21, x0
  403b28:	str	x0, [x8, #1528]
  403b2c:	str	w19, [x0]
  403b30:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403b34:	adrp	x3, 419000 <feof@plt+0x16300>
  403b38:	adrp	x4, 419000 <feof@plt+0x16300>
  403b3c:	add	x0, x0, #0x600
  403b40:	add	x3, x3, #0xdf4
  403b44:	add	x4, x4, #0xe20
  403b48:	mov	x1, xzr
  403b4c:	mov	x2, xzr
  403b50:	bl	454eb0 <_obstack_begin@@Base>
  403b54:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403b58:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403b5c:	mov	x0, x20
  403b60:	str	wzr, [x8, #1624]
  403b64:	str	xzr, [x9, #1632]
  403b68:	bl	4026d0 <strlen@plt>
  403b6c:	add	x22, x0, #0x1
  403b70:	mov	x0, x22
  403b74:	bl	402b60 <malloc@plt>
  403b78:	mov	x1, x20
  403b7c:	mov	x2, x22
  403b80:	mov	x23, x0
  403b84:	bl	402640 <memcpy@plt>
  403b88:	str	x23, [x21, #24]
  403b8c:	bl	405ac8 <feof@plt+0x2dc8>
  403b90:	mov	w22, wzr
  403b94:	mov	w24, #0x140ffff             	// #21037055
  403b98:	add	x23, sp, #0x10
  403b9c:	str	x21, [sp, #8]
  403ba0:	str	w0, [x21, #16]
  403ba4:	b	403bd4 <feof@plt+0xed4>
  403ba8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403bac:	sub	x3, x8, x9
  403bb0:	mov	w0, wzr
  403bb4:	add	x1, x1, #0x4dc
  403bb8:	mov	x2, x20
  403bbc:	bl	40a608 <feof@plt+0x7908>
  403bc0:	mov	w0, w27
  403bc4:	mov	w1, w26
  403bc8:	bl	406010 <feof@plt+0x3310>
  403bcc:	bl	4055c8 <feof@plt+0x28c8>
  403bd0:	cbnz	w0, 403de4 <feof@plt+0x10e4>
  403bd4:	mov	w21, w22
  403bd8:	bl	405ac8 <feof@plt+0x2dc8>
  403bdc:	cbz	w0, 403e14 <feof@plt+0x1114>
  403be0:	mov	w28, w0
  403be4:	bl	405ac8 <feof@plt+0x2dc8>
  403be8:	mov	w26, w0
  403bec:	bl	4055b4 <feof@plt+0x28b4>
  403bf0:	sub	w8, w28, #0x1
  403bf4:	eor	w25, w8, w28
  403bf8:	lsr	w8, w25, #1
  403bfc:	mov	w27, w0
  403c00:	mov	w22, #0x4                   	// #4
  403c04:	cbz	w8, 403c20 <feof@plt+0xf20>
  403c08:	mvn	w9, w8
  403c0c:	tst	w9, #0xff
  403c10:	b.ne	403c58 <feof@plt+0xf58>  // b.any
  403c14:	lsr	w8, w8, #8
  403c18:	sub	w22, w22, #0x1
  403c1c:	cbnz	w8, 403c08 <feof@plt+0xf08>
  403c20:	cmp	w28, w24
  403c24:	b.le	403c78 <feof@plt+0xf78>
  403c28:	mov	w8, #0x1410000             	// #21037056
  403c2c:	cmp	w28, w8
  403c30:	b.eq	403cc8 <feof@plt+0xfc8>  // b.none
  403c34:	mov	w8, #0x1430000             	// #21168128
  403c38:	cmp	w28, w8
  403c3c:	b.eq	403cd4 <feof@plt+0xfd4>  // b.none
  403c40:	mov	w8, #0x1450000             	// #21299200
  403c44:	cmp	w28, w8
  403c48:	b.ne	403c98 <feof@plt+0xf98>  // b.any
  403c4c:	adrp	x19, 456000 <_obstack_memory_used@@Base+0xdd8>
  403c50:	add	x19, x19, #0x930
  403c54:	b	403ce8 <feof@plt+0xfe8>
  403c58:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403c5c:	mov	w0, wzr
  403c60:	add	x1, x1, #0x4a1
  403c64:	mov	x2, x20
  403c68:	mov	w3, w28
  403c6c:	bl	40a608 <feof@plt+0x7908>
  403c70:	cmp	w28, w24
  403c74:	b.gt	403c28 <feof@plt+0xf28>
  403c78:	mov	w8, #0xa1000000            	// #-1593835520
  403c7c:	cmp	w28, w8
  403c80:	b.eq	403ce0 <feof@plt+0xfe0>  // b.none
  403c84:	mov	w8, #0x1000000             	// #16777216
  403c88:	adrp	x19, 456000 <_obstack_memory_used@@Base+0xdd8>
  403c8c:	cmp	w28, w8
  403c90:	add	x19, x19, #0x8e8
  403c94:	b.eq	403ce8 <feof@plt+0xfe8>  // b.none
  403c98:	mov	w9, #0xfe5f0000            	// #-27328512
  403c9c:	add	w9, w28, w9
  403ca0:	and	w8, w28, #0xffff
  403ca4:	cmp	w9, #0x120, lsl #12
  403ca8:	ccmp	w8, #0x0, #0x0, cc  // cc = lo, ul, last
  403cac:	mov	w8, #0x18                  	// #24
  403cb0:	mov	w9, #0x30                  	// #48
  403cb4:	csel	x8, x9, x8, eq  // eq = none
  403cb8:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  403cbc:	add	x9, x9, #0x8a0
  403cc0:	add	x19, x9, x8
  403cc4:	b	403ce8 <feof@plt+0xfe8>
  403cc8:	adrp	x19, 456000 <_obstack_memory_used@@Base+0xdd8>
  403ccc:	add	x19, x19, #0x900
  403cd0:	b	403ce8 <feof@plt+0xfe8>
  403cd4:	adrp	x19, 456000 <_obstack_memory_used@@Base+0xdd8>
  403cd8:	add	x19, x19, #0x918
  403cdc:	b	403ce8 <feof@plt+0xfe8>
  403ce0:	adrp	x19, 456000 <_obstack_memory_used@@Base+0xdd8>
  403ce4:	add	x19, x19, #0x948
  403ce8:	cbz	w21, 403d30 <feof@plt+0x1030>
  403cec:	cmp	w21, w22
  403cf0:	b.cs	403d30 <feof@plt+0x1030>  // b.hs, b.nlast
  403cf4:	sub	w8, w21, #0x1
  403cf8:	ldr	w8, [x23, w8, uxtw #2]
  403cfc:	sub	w9, w8, #0x1
  403d00:	eor	w9, w9, w8
  403d04:	cmp	w25, w9, lsr #8
  403d08:	b.ne	403d18 <feof@plt+0x1018>  // b.any
  403d0c:	eor	w8, w8, w28
  403d10:	bics	wzr, w8, w9
  403d14:	b.eq	403d30 <feof@plt+0x1030>  // b.none
  403d18:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403d1c:	mov	w0, wzr
  403d20:	add	x1, x1, #0x4b9
  403d24:	mov	x2, x20
  403d28:	mov	w3, w28
  403d2c:	bl	40a608 <feof@plt+0x7908>
  403d30:	ldr	x8, [x19, #16]
  403d34:	sub	w9, w22, #0x1
  403d38:	str	w28, [x23, w9, uxtw #2]
  403d3c:	cbz	x8, 403bc0 <feof@plt+0xec0>
  403d40:	mov	w0, w28
  403d44:	mov	w1, w26
  403d48:	blr	x8
  403d4c:	bl	4055b4 <feof@plt+0x28b4>
  403d50:	sub	w8, w0, w27
  403d54:	cmp	w8, w26
  403d58:	mov	w9, w26
  403d5c:	b.hi	403ba8 <feof@plt+0xea8>  // b.pmore
  403d60:	cmp	w26, w8
  403d64:	b.ls	403bc0 <feof@plt+0xec0>  // b.plast
  403d68:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403d6c:	sub	x3, x9, x8
  403d70:	mov	w0, wzr
  403d74:	add	x1, x1, #0x508
  403d78:	b	403bb8 <feof@plt+0xeb8>
  403d7c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403d80:	ldr	x0, [x8, #1416]
  403d84:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403d88:	add	x1, x1, #0x453
  403d8c:	mov	x2, x20
  403d90:	bl	408eb4 <feof@plt+0x61b4>
  403d94:	b	403a78 <feof@plt+0xd78>
  403d98:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403d9c:	ldr	x0, [x8, #1416]
  403da0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403da4:	add	x1, x1, #0x463
  403da8:	mov	x2, x20
  403dac:	bl	408eb4 <feof@plt+0x61b4>
  403db0:	bl	4056b8 <feof@plt+0x29b8>
  403db4:	b	403a78 <feof@plt+0xd78>
  403db8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403dbc:	mov	w3, w0
  403dc0:	ldr	x0, [x8, #1416]
  403dc4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  403dc8:	mov	w4, #0x322a                	// #12842
  403dcc:	add	x1, x1, #0x47c
  403dd0:	movk	w4, #0x4139, lsl #16
  403dd4:	mov	x2, x20
  403dd8:	bl	408eb4 <feof@plt+0x61b4>
  403ddc:	bl	4056b8 <feof@plt+0x29b8>
  403de0:	b	403a78 <feof@plt+0xd78>
  403de4:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  403de8:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  403dec:	add	x8, x8, #0x54e
  403df0:	add	x9, x9, #0x532
  403df4:	cmp	w0, #0x0
  403df8:	csel	x22, x9, x8, lt  // lt = tstop
  403dfc:	bl	4055b4 <feof@plt+0x28b4>
  403e00:	mov	w3, w0
  403e04:	mov	w0, wzr
  403e08:	mov	x1, x22
  403e0c:	mov	x2, x20
  403e10:	bl	40a608 <feof@plt+0x7908>
  403e14:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e18:	ldr	x0, [x20, #1632]
  403e1c:	bl	4051e0 <feof@plt+0x24e0>
  403e20:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e24:	add	x8, x8, #0x618
  403e28:	ldp	x8, x9, [x8]
  403e2c:	sub	x9, x9, x8
  403e30:	cmp	x9, #0x7
  403e34:	b.hi	403e50 <feof@plt+0x1150>  // b.pmore
  403e38:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e3c:	add	x19, x19, #0x600
  403e40:	mov	w1, #0x8                   	// #8
  403e44:	mov	x0, x19
  403e48:	bl	45500c <_obstack_newchunk@@Base>
  403e4c:	ldr	x8, [x19, #24]
  403e50:	ldr	x9, [x20, #1632]
  403e54:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e58:	add	x10, x10, #0x610
  403e5c:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e60:	str	x9, [x8]
  403e64:	ldp	x9, x8, [x10]
  403e68:	ldr	w11, [x11, #1624]
  403e6c:	ldr	x19, [sp, #8]
  403e70:	add	x8, x8, #0x8
  403e74:	cmp	x8, x9
  403e78:	str	x8, [x10, #8]
  403e7c:	str	w11, [x19, #104]
  403e80:	b.ne	403e94 <feof@plt+0x1194>  // b.any
  403e84:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e88:	ldrb	w11, [x10, #1616]
  403e8c:	orr	w11, w11, #0x2
  403e90:	strb	w11, [x10, #1616]
  403e94:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403e98:	add	x10, x10, #0x608
  403e9c:	ldr	x11, [x10, #40]
  403ea0:	ldr	x12, [x10]
  403ea4:	ldr	x13, [x10, #24]
  403ea8:	str	x9, [x19, #112]
  403eac:	add	x8, x11, x8
  403eb0:	bic	x8, x8, x11
  403eb4:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403eb8:	sub	x11, x13, x12
  403ebc:	sub	x12, x8, x12
  403ec0:	ldr	w9, [x9, #1484]
  403ec4:	cmp	x12, x11
  403ec8:	csel	x8, x13, x8, hi  // hi = pmore
  403ecc:	stp	x8, x8, [x10, #8]
  403ed0:	adrp	x8, 408000 <feof@plt+0x5300>
  403ed4:	add	x8, x8, #0x1b4
  403ed8:	cbz	w9, 403ee0 <feof@plt+0x11e0>
  403edc:	str	x8, [x19, #32]
  403ee0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403ee4:	ldr	w9, [x9, #1488]
  403ee8:	cbz	w9, 403ef0 <feof@plt+0x11f0>
  403eec:	str	x8, [x19, #40]
  403ef0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403ef4:	ldr	w9, [x9, #1492]
  403ef8:	cbz	w9, 403f00 <feof@plt+0x1200>
  403efc:	str	x8, [x19, #48]
  403f00:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f04:	ldr	w10, [x9, #1496]
  403f08:	adrp	x9, 408000 <feof@plt+0x5300>
  403f0c:	add	x9, x9, #0x294
  403f10:	cbz	w10, 403f18 <feof@plt+0x1218>
  403f14:	str	x9, [x19, #56]
  403f18:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f1c:	ldr	w10, [x10, #1500]
  403f20:	cbz	w10, 403f28 <feof@plt+0x1228>
  403f24:	str	x9, [x19, #64]
  403f28:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f2c:	ldr	w9, [x9, #1504]
  403f30:	cbz	w9, 403f38 <feof@plt+0x1238>
  403f34:	str	x8, [x19, #72]
  403f38:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f3c:	ldr	w8, [x8, #1508]
  403f40:	cbz	w8, 403f50 <feof@plt+0x1250>
  403f44:	adrp	x8, 408000 <feof@plt+0x5300>
  403f48:	add	x8, x8, #0x204
  403f4c:	str	x8, [x19, #80]
  403f50:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f54:	ldr	w8, [x8, #1512]
  403f58:	cbz	w8, 403f68 <feof@plt+0x1268>
  403f5c:	adrp	x8, 408000 <feof@plt+0x5300>
  403f60:	add	x8, x8, #0x240
  403f64:	str	x8, [x19, #88]
  403f68:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f6c:	ldr	w8, [x8, #1516]
  403f70:	cbz	w8, 403f80 <feof@plt+0x1280>
  403f74:	adrp	x8, 408000 <feof@plt+0x5300>
  403f78:	add	x8, x8, #0x370
  403f7c:	str	x8, [x19, #96]
  403f80:	bl	4056b8 <feof@plt+0x29b8>
  403f84:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403f88:	ldr	x9, [x8, #1456]
  403f8c:	str	x19, [x8, #1456]
  403f90:	str	x9, [x19, #8]
  403f94:	b	403a78 <feof@plt+0xd78>
  403f98:	stp	x29, x30, [sp, #-16]!
  403f9c:	mov	x29, sp
  403fa0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403fa4:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403fa8:	ldr	w9, [x8, #1464]
  403fac:	ldr	w10, [x10, #1468]
  403fb0:	cmp	w9, w10
  403fb4:	b.cs	403fd4 <feof@plt+0x12d4>  // b.hs, b.nlast
  403fb8:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403fbc:	ldr	x10, [x10, #1472]
  403fc0:	ldr	x0, [x10, x9, lsl #3]
  403fc4:	add	w9, w9, #0x1
  403fc8:	str	w9, [x8, #1464]
  403fcc:	ldp	x29, x30, [sp], #16
  403fd0:	ret
  403fd4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  403fd8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  403fdc:	add	x0, x0, #0x39b
  403fe0:	add	x2, x2, #0x3eb
  403fe4:	mov	w1, #0x1ed                 	// #493
  403fe8:	bl	408b70 <feof@plt+0x5e70>
  403fec:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  403ff0:	ldr	w0, [x8, #1480]
  403ff4:	ret
  403ff8:	sub	sp, sp, #0x70
  403ffc:	stp	x29, x30, [sp, #16]
  404000:	stp	x28, x27, [sp, #32]
  404004:	stp	x26, x25, [sp, #48]
  404008:	stp	x24, x23, [sp, #64]
  40400c:	stp	x22, x21, [sp, #80]
  404010:	stp	x20, x19, [sp, #96]
  404014:	add	x29, sp, #0x10
  404018:	mov	w23, w2
  40401c:	mov	x20, x1
  404020:	mov	x24, x0
  404024:	mov	w26, wzr
  404028:	str	w3, [sp, #4]
  40402c:	cbz	x0, 404040 <feof@plt+0x1340>
  404030:	mov	x8, x24
  404034:	ldr	x8, [x8, #8]
  404038:	add	w26, w26, #0x1
  40403c:	cbnz	x8, 404034 <feof@plt+0x1334>
  404040:	cbz	x20, 404064 <feof@plt+0x1364>
  404044:	mov	w8, wzr
  404048:	mov	x9, x20
  40404c:	ldr	x9, [x9, #8]
  404050:	add	w8, w8, #0x1
  404054:	cbnz	x9, 40404c <feof@plt+0x134c>
  404058:	mov	w8, w8
  40405c:	lsl	x21, x8, #3
  404060:	b	404068 <feof@plt+0x1368>
  404064:	mov	x21, xzr
  404068:	mov	w8, w26
  40406c:	lsl	x0, x8, #3
  404070:	str	x8, [sp, #8]
  404074:	bl	402b60 <malloc@plt>
  404078:	cbz	x0, 4041dc <feof@plt+0x14dc>
  40407c:	mov	x19, x0
  404080:	mov	x0, x21
  404084:	bl	402b60 <malloc@plt>
  404088:	cbz	x0, 4041f4 <feof@plt+0x14f4>
  40408c:	mov	x21, x0
  404090:	cbz	x24, 4040a8 <feof@plt+0x13a8>
  404094:	mov	w8, wzr
  404098:	str	x24, [x19, w8, uxtw #3]
  40409c:	ldr	x24, [x24, #8]
  4040a0:	add	w8, w8, #0x1
  4040a4:	cbnz	x24, 404098 <feof@plt+0x1398>
  4040a8:	subs	w8, w26, #0x1
  4040ac:	ldr	x28, [x19, w8, uxtw #3]
  4040b0:	cset	w8, cs  // cs = hs, nlast
  4040b4:	cmp	w23, #0x2
  4040b8:	b.lt	4040e4 <feof@plt+0x13e4>  // b.tstop
  4040bc:	cbz	w8, 4040e4 <feof@plt+0x13e4>
  4040c0:	ldr	x22, [sp, #8]
  4040c4:	sub	w23, w23, #0x1
  4040c8:	mov	x24, x19
  4040cc:	ldr	x0, [x24], #8
  4040d0:	mov	w2, w23
  4040d4:	mov	x1, x0
  4040d8:	bl	40420c <feof@plt+0x150c>
  4040dc:	subs	x22, x22, #0x1
  4040e0:	b.ne	4040cc <feof@plt+0x13cc>  // b.any
  4040e4:	cbz	x20, 4041b8 <feof@plt+0x14b8>
  4040e8:	mov	w23, wzr
  4040ec:	b	40411c <feof@plt+0x141c>
  4040f0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4040f4:	ldr	x0, [x8, #1416]
  4040f8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4040fc:	add	x1, x1, #0x625
  404100:	mov	x2, x24
  404104:	bl	408eb4 <feof@plt+0x61b4>
  404108:	add	w8, w23, #0x1
  40410c:	str	x20, [x21, w23, uxtw #3]
  404110:	mov	w23, w8
  404114:	ldr	x20, [x20, #8]
  404118:	cbz	x20, 404180 <feof@plt+0x1480>
  40411c:	cmp	w26, #0x1
  404120:	b.lt	404108 <feof@plt+0x1408>  // b.tstop
  404124:	ldr	x27, [sp, #8]
  404128:	mov	x22, x19
  40412c:	b	40413c <feof@plt+0x143c>
  404130:	subs	x27, x27, #0x1
  404134:	add	x22, x22, #0x8
  404138:	b.eq	404108 <feof@plt+0x1408>  // b.none
  40413c:	ldr	x25, [x22]
  404140:	cbz	x25, 404130 <feof@plt+0x1430>
  404144:	ldr	x24, [x25, #24]
  404148:	ldr	x1, [x20, #24]
  40414c:	mov	x0, x24
  404150:	bl	402b40 <strcmp@plt>
  404154:	cbnz	w0, 404130 <feof@plt+0x1430>
  404158:	str	xzr, [x22]
  40415c:	ldr	w3, [x25, #104]
  404160:	ldr	w4, [x20, #104]
  404164:	cmp	w3, w4
  404168:	b.ne	4040f0 <feof@plt+0x13f0>  // b.any
  40416c:	ldr	w2, [sp, #4]
  404170:	mov	x0, x25
  404174:	mov	x1, x20
  404178:	bl	40420c <feof@plt+0x150c>
  40417c:	b	404114 <feof@plt+0x1414>
  404180:	cbz	w23, 4041b8 <feof@plt+0x14b8>
  404184:	ldr	w8, [sp, #4]
  404188:	mov	w22, w23
  40418c:	sub	w19, w8, #0x1
  404190:	ldr	x20, [x21], #8
  404194:	mov	w2, w19
  404198:	mov	x0, x20
  40419c:	mov	x1, x20
  4041a0:	bl	40420c <feof@plt+0x150c>
  4041a4:	str	xzr, [x20, #8]
  4041a8:	subs	x22, x22, #0x1
  4041ac:	str	x20, [x28, #8]
  4041b0:	mov	x28, x20
  4041b4:	b.ne	404190 <feof@plt+0x1490>  // b.any
  4041b8:	ldp	x20, x19, [sp, #96]
  4041bc:	ldp	x22, x21, [sp, #80]
  4041c0:	ldp	x24, x23, [sp, #64]
  4041c4:	ldp	x26, x25, [sp, #48]
  4041c8:	ldp	x28, x27, [sp, #32]
  4041cc:	ldp	x29, x30, [sp, #16]
  4041d0:	mov	w0, wzr
  4041d4:	add	sp, sp, #0x70
  4041d8:	ret
  4041dc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4041e0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4041e4:	add	x0, x0, #0x39b
  4041e8:	add	x2, x2, #0x401
  4041ec:	mov	w1, #0x283                 	// #643
  4041f0:	bl	408b70 <feof@plt+0x5e70>
  4041f4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4041f8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4041fc:	add	x0, x0, #0x39b
  404200:	add	x2, x2, #0x401
  404204:	mov	w1, #0x286                 	// #646
  404208:	bl	408b70 <feof@plt+0x5e70>
  40420c:	stp	x29, x30, [sp, #-96]!
  404210:	stp	x28, x27, [sp, #16]
  404214:	stp	x26, x25, [sp, #32]
  404218:	stp	x24, x23, [sp, #48]
  40421c:	stp	x22, x21, [sp, #64]
  404220:	stp	x20, x19, [sp, #80]
  404224:	mov	x29, sp
  404228:	ldr	w23, [x0, #104]
  40422c:	ldr	w8, [x1, #104]
  404230:	cmp	w8, w23
  404234:	b.ne	404378 <feof@plt+0x1678>  // b.any
  404238:	cbz	w23, 404344 <feof@plt+0x1644>
  40423c:	mov	x19, x1
  404240:	mov	x20, x0
  404244:	mov	w21, w2
  404248:	mov	x24, xzr
  40424c:	adrp	x27, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404250:	adrp	x28, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404254:	b	40427c <feof@plt+0x157c>
  404258:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40425c:	ldr	x0, [x8, #1416]
  404260:	ldr	x2, [x20, #24]
  404264:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  404268:	add	x1, x1, #0x5fd
  40426c:	bl	408eb4 <feof@plt+0x61b4>
  404270:	add	x24, x24, #0x1
  404274:	cmp	x24, x23
  404278:	b.eq	404344 <feof@plt+0x1644>  // b.none
  40427c:	ldr	x8, [x20, #112]
  404280:	lsl	x9, x24, #3
  404284:	ldr	x8, [x8, x9]
  404288:	cbz	x8, 404270 <feof@plt+0x1570>
  40428c:	ldr	x10, [x19, #112]
  404290:	ldr	x9, [x10, x9]
  404294:	cbz	x9, 404270 <feof@plt+0x1570>
  404298:	ldr	x10, [x8]
  40429c:	cmp	x10, x20
  4042a0:	b.ne	404270 <feof@plt+0x1570>  // b.any
  4042a4:	ldr	x10, [x9]
  4042a8:	cmp	x10, x19
  4042ac:	b.ne	404270 <feof@plt+0x1570>  // b.any
  4042b0:	ldr	w10, [x8, #16]
  4042b4:	ldr	w11, [x9, #16]
  4042b8:	cmp	w10, w11
  4042bc:	b.ne	404258 <feof@plt+0x1558>  // b.any
  4042c0:	add	x22, x8, #0x18
  4042c4:	add	x25, x9, #0x18
  4042c8:	mov	w26, #0x20                  	// #32
  4042cc:	b	404308 <feof@plt+0x1608>
  4042d0:	ldr	x9, [x25, #8]
  4042d4:	ldr	x0, [x22, #8]
  4042d8:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4042dc:	str	wzr, [x10, #1464]
  4042e0:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4042e4:	str	w1, [x27, #1468]
  4042e8:	str	x9, [x10, #1472]
  4042ec:	str	w21, [x28, #1480]
  4042f0:	blr	x8
  4042f4:	add	x22, x22, #0x10
  4042f8:	add	x25, x25, #0x10
  4042fc:	add	x26, x26, #0x8
  404300:	cmp	w26, #0x68
  404304:	b.eq	404270 <feof@plt+0x1570>  // b.none
  404308:	ldr	x8, [x20, x26]
  40430c:	ldr	x9, [x19, x26]
  404310:	cmp	x8, x9
  404314:	b.ne	404360 <feof@plt+0x1660>  // b.any
  404318:	cbz	x8, 4042fc <feof@plt+0x15fc>
  40431c:	ldr	w1, [x22]
  404320:	ldr	w9, [x25]
  404324:	cmp	w1, w9
  404328:	b.eq	4042d0 <feof@plt+0x15d0>  // b.none
  40432c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404330:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  404334:	add	x0, x0, #0x39b
  404338:	add	x2, x2, #0x5f2
  40433c:	mov	w1, #0x23e                 	// #574
  404340:	bl	408b70 <feof@plt+0x5e70>
  404344:	ldp	x20, x19, [sp, #80]
  404348:	ldp	x22, x21, [sp, #64]
  40434c:	ldp	x24, x23, [sp, #48]
  404350:	ldp	x26, x25, [sp, #32]
  404354:	ldp	x28, x27, [sp, #16]
  404358:	ldp	x29, x30, [sp], #96
  40435c:	ret
  404360:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404364:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  404368:	add	x0, x0, #0x39b
  40436c:	add	x2, x2, #0x5f2
  404370:	mov	w1, #0x23b                 	// #571
  404374:	bl	408b70 <feof@plt+0x5e70>
  404378:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  40437c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  404380:	add	x0, x0, #0x39b
  404384:	add	x2, x2, #0x5f2
  404388:	mov	w1, #0x220                 	// #544
  40438c:	bl	408b70 <feof@plt+0x5e70>
  404390:	sub	sp, sp, #0x60
  404394:	stp	x29, x30, [sp, #16]
  404398:	stp	x26, x25, [sp, #32]
  40439c:	stp	x24, x23, [sp, #48]
  4043a0:	stp	x22, x21, [sp, #64]
  4043a4:	stp	x20, x19, [sp, #80]
  4043a8:	add	x29, sp, #0x10
  4043ac:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4043b0:	ldrb	w8, [x8, #1448]
  4043b4:	mov	w3, w2
  4043b8:	mov	x19, x0
  4043bc:	stur	s0, [x29, #-4]
  4043c0:	cmp	w8, #0x1
  4043c4:	stp	w2, w1, [sp, #4]
  4043c8:	b.ne	4043e8 <feof@plt+0x16e8>  // b.any
  4043cc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4043d0:	ldr	x0, [x8, #1408]
  4043d4:	mov	w2, w1
  4043d8:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4043dc:	fcvt	d0, s0
  4043e0:	add	x1, x1, #0x414
  4043e4:	bl	408eb4 <feof@plt+0x61b4>
  4043e8:	cbz	x19, 4044a4 <feof@plt+0x17a4>
  4043ec:	adrp	x22, 456000 <_obstack_memory_used@@Base+0xdd8>
  4043f0:	adrp	x20, 404000 <feof@plt+0x1300>
  4043f4:	adrp	x21, 404000 <feof@plt+0x1300>
  4043f8:	add	x22, x22, #0x858
  4043fc:	add	x20, x20, #0x4c4
  404400:	add	x21, x21, #0x4d8
  404404:	b	404410 <feof@plt+0x1710>
  404408:	ldr	x19, [x19, #8]
  40440c:	cbz	x19, 4044a4 <feof@plt+0x17a4>
  404410:	ldr	w8, [x19, #104]
  404414:	cbz	w8, 404408 <feof@plt+0x1708>
  404418:	mov	x23, xzr
  40441c:	add	x24, x19, #0x20
  404420:	b	404434 <feof@plt+0x1734>
  404424:	ldr	w8, [x19, #104]
  404428:	add	x23, x23, #0x1
  40442c:	cmp	x23, x8
  404430:	b.cs	404408 <feof@plt+0x1708>  // b.hs, b.nlast
  404434:	ldr	x8, [x19, #112]
  404438:	ldr	x8, [x8, x23, lsl #3]
  40443c:	cbz	x8, 404424 <feof@plt+0x1724>
  404440:	ldr	x9, [x8]
  404444:	cmp	x9, x19
  404448:	b.ne	404424 <feof@plt+0x1724>  // b.any
  40444c:	mov	x25, xzr
  404450:	add	x26, x8, #0x18
  404454:	b	404478 <feof@plt+0x1778>
  404458:	add	x3, sp, #0x8
  40445c:	add	x4, sp, #0x4
  404460:	mov	x2, x21
  404464:	blr	x8
  404468:	add	x26, x26, #0x10
  40446c:	add	x25, x25, #0x8
  404470:	cmp	x25, #0x48
  404474:	b.eq	404424 <feof@plt+0x1724>  // b.none
  404478:	ldr	x8, [x24, x25]
  40447c:	cbz	x8, 40446c <feof@plt+0x176c>
  404480:	ldr	w9, [sp, #4]
  404484:	ldr	x8, [x22, x25]
  404488:	ldr	x0, [x26, #8]
  40448c:	ldr	w1, [x26]
  404490:	cbnz	w9, 404458 <feof@plt+0x1758>
  404494:	sub	x3, x29, #0x4
  404498:	mov	x2, x20
  40449c:	mov	x4, xzr
  4044a0:	b	404464 <feof@plt+0x1764>
  4044a4:	ldp	x20, x19, [sp, #80]
  4044a8:	ldp	x22, x21, [sp, #64]
  4044ac:	ldp	x24, x23, [sp, #48]
  4044b0:	ldp	x26, x25, [sp, #32]
  4044b4:	ldp	x29, x30, [sp, #16]
  4044b8:	mov	w0, wzr
  4044bc:	add	sp, sp, #0x60
  4044c0:	ret
  4044c4:	ldr	s0, [x1]
  4044c8:	scvtf	s1, x0
  4044cc:	fmul	s0, s0, s1
  4044d0:	fcvtzs	x0, s0
  4044d4:	ret
  4044d8:	ldrsw	x8, [x2]
  4044dc:	ldrsw	x9, [x1]
  4044e0:	cmp	w8, #0x0
  4044e4:	cinc	w10, w8, lt  // lt = tstop
  4044e8:	asr	w10, w10, #1
  4044ec:	add	x10, x0, w10, sxtw
  4044f0:	sdiv	x8, x10, x8
  4044f4:	mul	x0, x8, x9
  4044f8:	ret
  4044fc:	str	d8, [sp, #-32]!
  404500:	stp	x29, x30, [sp, #8]
  404504:	str	x19, [sp, #24]
  404508:	mov	x29, sp
  40450c:	mov	x19, x0
  404510:	mov	x2, xzr
  404514:	cbz	x0, 4045f0 <feof@plt+0x18f0>
  404518:	mov	x8, x19
  40451c:	b	404528 <feof@plt+0x1828>
  404520:	ldr	x8, [x8, #8]
  404524:	cbz	x8, 4045f0 <feof@plt+0x18f0>
  404528:	ldr	w9, [x8, #104]
  40452c:	cbz	w9, 404520 <feof@plt+0x1820>
  404530:	ldr	x10, [x8, #112]
  404534:	mov	x11, xzr
  404538:	b	404548 <feof@plt+0x1848>
  40453c:	add	x11, x11, #0x1
  404540:	cmp	x11, x9
  404544:	b.cs	404520 <feof@plt+0x1820>  // b.hs, b.nlast
  404548:	ldr	x13, [x10, x11, lsl #3]
  40454c:	cbz	x13, 40453c <feof@plt+0x183c>
  404550:	ldr	x12, [x13]
  404554:	cmp	x12, x8
  404558:	b.ne	40453c <feof@plt+0x183c>  // b.any
  40455c:	ldr	w12, [x13, #24]
  404560:	cbz	w12, 40453c <feof@plt+0x183c>
  404564:	ldr	x13, [x13, #32]
  404568:	cmp	w12, #0x4
  40456c:	b.cs	404578 <feof@plt+0x1878>  // b.hs, b.nlast
  404570:	mov	x14, xzr
  404574:	b	4045d4 <feof@plt+0x18d4>
  404578:	and	x14, x12, #0xfffffffc
  40457c:	dup	v0.2d, x2
  404580:	add	x15, x13, #0x10
  404584:	mov	x16, x14
  404588:	mov	v1.16b, v0.16b
  40458c:	ldp	q2, q3, [x15, #-16]
  404590:	mov	v4.16b, v1.16b
  404594:	mov	v5.16b, v0.16b
  404598:	subs	x16, x16, #0x4
  40459c:	cmgt	v0.2d, v2.2d, v0.2d
  4045a0:	cmgt	v1.2d, v3.2d, v1.2d
  4045a4:	bsl	v0.16b, v2.16b, v5.16b
  4045a8:	bsl	v1.16b, v3.16b, v4.16b
  4045ac:	add	x15, x15, #0x20
  4045b0:	b.ne	40458c <feof@plt+0x188c>  // b.any
  4045b4:	cmgt	v2.2d, v0.2d, v1.2d
  4045b8:	bsl	v2.16b, v0.16b, v1.16b
  4045bc:	dup	v0.2d, v2.d[1]
  4045c0:	cmgt	v1.2d, v2.2d, v0.2d
  4045c4:	bsl	v1.16b, v2.16b, v0.16b
  4045c8:	cmp	x14, x12
  4045cc:	fmov	x2, d1
  4045d0:	b.eq	40453c <feof@plt+0x183c>  // b.none
  4045d4:	ldr	x15, [x13, x14, lsl #3]
  4045d8:	add	x14, x14, #0x1
  4045dc:	cmp	x15, x2
  4045e0:	csel	x2, x15, x2, gt
  4045e4:	cmp	x14, x12
  4045e8:	b.cc	4045d4 <feof@plt+0x18d4>  // b.lo, b.ul, b.last
  4045ec:	b	40453c <feof@plt+0x183c>
  4045f0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4045f4:	ldrb	w8, [x8, #1448]
  4045f8:	scvtf	s0, x1
  4045fc:	scvtf	s1, x2
  404600:	fdiv	s8, s0, s1
  404604:	cmp	w8, #0x1
  404608:	b.ne	404620 <feof@plt+0x1920>  // b.any
  40460c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404610:	ldr	x0, [x8, #1408]
  404614:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  404618:	add	x1, x1, #0x431
  40461c:	bl	408eb4 <feof@plt+0x61b4>
  404620:	mov	x0, x19
  404624:	mov	v0.16b, v8.16b
  404628:	mov	w1, wzr
  40462c:	mov	w2, wzr
  404630:	bl	404390 <feof@plt+0x1690>
  404634:	ldr	x19, [sp, #24]
  404638:	ldp	x29, x30, [sp, #8]
  40463c:	mov	w0, wzr
  404640:	ldr	d8, [sp], #32
  404644:	ret
  404648:	sub	sp, sp, #0xb0
  40464c:	str	d12, [sp, #32]
  404650:	stp	d11, d10, [sp, #48]
  404654:	stp	d9, d8, [sp, #64]
  404658:	stp	x29, x30, [sp, #80]
  40465c:	stp	x28, x27, [sp, #96]
  404660:	stp	x26, x25, [sp, #112]
  404664:	stp	x24, x23, [sp, #128]
  404668:	stp	x22, x21, [sp, #144]
  40466c:	stp	x20, x19, [sp, #160]
  404670:	add	x29, sp, #0x20
  404674:	mov	x20, x1
  404678:	mov	x21, x0
  40467c:	mov	w22, wzr
  404680:	cbz	x0, 404694 <feof@plt+0x1994>
  404684:	mov	x8, x21
  404688:	ldr	x8, [x8, #8]
  40468c:	add	w22, w22, #0x1
  404690:	cbnz	x8, 404688 <feof@plt+0x1988>
  404694:	mov	w8, wzr
  404698:	cbz	x20, 4046ac <feof@plt+0x19ac>
  40469c:	mov	x9, x20
  4046a0:	ldr	x9, [x9, #8]
  4046a4:	add	w8, w8, #0x1
  4046a8:	cbnz	x9, 4046a0 <feof@plt+0x19a0>
  4046ac:	add	w25, w8, w22
  4046b0:	add	x8, x25, w25, uxtw #1
  4046b4:	lsl	x0, x8, #4
  4046b8:	bl	402b60 <malloc@plt>
  4046bc:	cbz	x0, 404f3c <feof@plt+0x223c>
  4046c0:	mov	x19, x0
  4046c4:	mov	w8, wzr
  4046c8:	cbz	x21, 4046e4 <feof@plt+0x19e4>
  4046cc:	mov	w9, #0x18                  	// #24
  4046d0:	umaddl	x10, w8, w9, x19
  4046d4:	stp	x21, xzr, [x10]
  4046d8:	ldr	x21, [x21, #8]
  4046dc:	add	w8, w8, #0x1
  4046e0:	cbnz	x21, 4046d0 <feof@plt+0x19d0>
  4046e4:	cbz	x20, 404700 <feof@plt+0x1a00>
  4046e8:	mov	w9, #0x18                  	// #24
  4046ec:	umaddl	x10, w8, w9, x19
  4046f0:	stp	xzr, x20, [x10]
  4046f4:	ldr	x20, [x20, #8]
  4046f8:	add	w8, w8, #0x1
  4046fc:	cbnz	x20, 4046ec <feof@plt+0x19ec>
  404700:	cmp	w22, w25
  404704:	b.cs	4047a8 <feof@plt+0x1aa8>  // b.hs, b.nlast
  404708:	mov	w28, w22
  40470c:	add	x8, x19, #0x8
  404710:	stp	x8, x28, [sp, #8]
  404714:	b	404730 <feof@plt+0x1a30>
  404718:	str	x26, [x24]
  40471c:	str	xzr, [x25]
  404720:	add	x28, x28, #0x1
  404724:	mov	x25, x20
  404728:	cmp	x28, x20
  40472c:	b.eq	4047a8 <feof@plt+0x1aa8>  // b.none
  404730:	mov	w8, #0x18                  	// #24
  404734:	mov	x20, x25
  404738:	madd	x25, x28, x8, x19
  40473c:	ldr	x26, [x25, #8]!
  404740:	cbz	w22, 404720 <feof@plt+0x1a20>
  404744:	cbz	x26, 404720 <feof@plt+0x1a20>
  404748:	ldp	x24, x23, [sp, #8]
  40474c:	b	40475c <feof@plt+0x1a5c>
  404750:	subs	x23, x23, #0x1
  404754:	add	x24, x24, #0x18
  404758:	b.eq	404720 <feof@plt+0x1a20>  // b.none
  40475c:	ldr	x8, [x24]
  404760:	cbnz	x8, 404750 <feof@plt+0x1a50>
  404764:	ldur	x27, [x24, #-8]
  404768:	ldr	x21, [x26, #24]
  40476c:	ldr	x1, [x27, #24]
  404770:	mov	x0, x21
  404774:	bl	402b40 <strcmp@plt>
  404778:	cbnz	w0, 404750 <feof@plt+0x1a50>
  40477c:	ldr	w3, [x26, #104]
  404780:	ldr	w4, [x27, #104]
  404784:	cmp	w3, w4
  404788:	b.eq	404718 <feof@plt+0x1a18>  // b.none
  40478c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404790:	ldr	x0, [x8, #1416]
  404794:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  404798:	add	x1, x1, #0x625
  40479c:	mov	x2, x21
  4047a0:	bl	408eb4 <feof@plt+0x61b4>
  4047a4:	b	404750 <feof@plt+0x1a50>
  4047a8:	adrp	x27, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047ac:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047b0:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047b4:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047b8:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047bc:	cbz	w25, 404e00 <feof@plt+0x2100>
  4047c0:	adrp	x16, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047c4:	ldr	d1, [x16, #936]
  4047c8:	fmov	d0, xzr
  4047cc:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047d0:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047d4:	adrp	x14, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047d8:	adrp	x15, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047dc:	adrp	x16, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047e0:	adrp	x17, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047e4:	adrp	x18, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047e8:	fmul	d0, d1, d0
  4047ec:	adrp	x1, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4047f0:	mov	x8, xzr
  4047f4:	mov	w9, #0x18                  	// #24
  4047f8:	add	x10, x10, #0x718
  4047fc:	add	x11, x11, #0x714
  404800:	mov	w12, #0x22                  	// #34
  404804:	mov	w13, #0x11                  	// #17
  404808:	add	x14, x14, #0x730
  40480c:	add	x15, x15, #0x728
  404810:	add	x16, x16, #0x720
  404814:	add	x17, x17, #0x72c
  404818:	add	x18, x18, #0x724
  40481c:	fcvtzs	x0, d0
  404820:	add	x1, x1, #0x71c
  404824:	b	404834 <feof@plt+0x1b34>
  404828:	add	x8, x8, #0x1
  40482c:	cmp	x8, x25
  404830:	b.eq	404a84 <feof@plt+0x1d84>  // b.none
  404834:	mul	x2, x8, x9
  404838:	ldr	x2, [x19, x2]
  40483c:	cbz	x2, 4048a8 <feof@plt+0x1ba8>
  404840:	ldr	w3, [x27, #1804]
  404844:	add	w3, w3, #0x1
  404848:	str	w3, [x27, #1804]
  40484c:	ldr	w3, [x2, #104]
  404850:	cbz	w3, 4048c0 <feof@plt+0x1bc0>
  404854:	ldr	x4, [x2, #112]
  404858:	mov	x5, xzr
  40485c:	b	40486c <feof@plt+0x1b6c>
  404860:	add	x5, x5, #0x1
  404864:	cmp	x5, x3
  404868:	b.eq	4048c0 <feof@plt+0x1bc0>  // b.none
  40486c:	ldr	x7, [x4, x5, lsl #3]
  404870:	cbz	x7, 404860 <feof@plt+0x1b60>
  404874:	ldr	x6, [x7]
  404878:	cmp	x6, x2
  40487c:	b.ne	404860 <feof@plt+0x1b60>  // b.any
  404880:	ldr	w6, [x7, #24]
  404884:	cbz	w6, 404860 <feof@plt+0x1b60>
  404888:	ldr	x7, [x7, #32]
  40488c:	ldr	x20, [x7]
  404890:	cmp	x20, #0x0
  404894:	b.gt	4048cc <feof@plt+0x1bcc>
  404898:	subs	x6, x6, #0x1
  40489c:	add	x7, x7, #0x8
  4048a0:	b.ne	40488c <feof@plt+0x1b8c>  // b.any
  4048a4:	b	404860 <feof@plt+0x1b60>
  4048a8:	madd	x2, x8, x9, x19
  4048ac:	ldr	x2, [x2, #8]
  4048b0:	cbz	x2, 404828 <feof@plt+0x1b28>
  4048b4:	mov	w2, #0x8                   	// #8
  4048b8:	mov	x4, x10
  4048bc:	b	404930 <feof@plt+0x1c30>
  4048c0:	mov	w2, #0x1                   	// #1
  4048c4:	mov	x4, x17
  4048c8:	b	404930 <feof@plt+0x1c30>
  4048cc:	mov	x5, xzr
  4048d0:	b	4048e0 <feof@plt+0x1be0>
  4048d4:	add	x5, x5, #0x1
  4048d8:	cmp	x5, x3
  4048dc:	b.eq	404928 <feof@plt+0x1c28>  // b.none
  4048e0:	ldr	x7, [x4, x5, lsl #3]
  4048e4:	cbz	x7, 4048d4 <feof@plt+0x1bd4>
  4048e8:	ldr	x6, [x7]
  4048ec:	cmp	x6, x2
  4048f0:	b.ne	4048d4 <feof@plt+0x1bd4>  // b.any
  4048f4:	ldr	w6, [x7, #24]
  4048f8:	cbz	w6, 4048d4 <feof@plt+0x1bd4>
  4048fc:	ldr	x7, [x7, #32]
  404900:	ldr	x20, [x7]
  404904:	cmp	x20, x0
  404908:	b.gt	40491c <feof@plt+0x1c1c>
  40490c:	subs	x6, x6, #0x1
  404910:	add	x7, x7, #0x8
  404914:	b.ne	404900 <feof@plt+0x1c00>  // b.any
  404918:	b	4048d4 <feof@plt+0x1bd4>
  40491c:	mov	w2, #0x4                   	// #4
  404920:	mov	x4, x1
  404924:	b	404930 <feof@plt+0x1c30>
  404928:	mov	w2, #0x2                   	// #2
  40492c:	mov	x4, x18
  404930:	ldr	w5, [x4]
  404934:	madd	x3, x8, x9, x19
  404938:	ldr	x3, [x3, #8]
  40493c:	add	w5, w5, #0x1
  404940:	str	w5, [x4]
  404944:	cbz	x3, 4049b0 <feof@plt+0x1cb0>
  404948:	ldr	w4, [x26, #1808]
  40494c:	add	w4, w4, #0x1
  404950:	str	w4, [x26, #1808]
  404954:	ldr	w4, [x3, #104]
  404958:	cbz	w4, 4049bc <feof@plt+0x1cbc>
  40495c:	ldr	x5, [x3, #112]
  404960:	mov	x6, xzr
  404964:	b	404974 <feof@plt+0x1c74>
  404968:	add	x6, x6, #0x1
  40496c:	cmp	x6, x4
  404970:	b.eq	4049bc <feof@plt+0x1cbc>  // b.none
  404974:	ldr	x20, [x5, x6, lsl #3]
  404978:	cbz	x20, 404968 <feof@plt+0x1c68>
  40497c:	ldr	x7, [x20]
  404980:	cmp	x7, x3
  404984:	b.ne	404968 <feof@plt+0x1c68>  // b.any
  404988:	ldr	w7, [x20, #24]
  40498c:	cbz	w7, 404968 <feof@plt+0x1c68>
  404990:	ldr	x20, [x20, #32]
  404994:	ldr	x21, [x20]
  404998:	cmp	x21, #0x0
  40499c:	b.gt	4049c8 <feof@plt+0x1cc8>
  4049a0:	subs	x7, x7, #0x1
  4049a4:	add	x20, x20, #0x8
  4049a8:	b.ne	404994 <feof@plt+0x1c94>  // b.any
  4049ac:	b	404968 <feof@plt+0x1c68>
  4049b0:	mov	w3, #0x80                  	// #128
  4049b4:	mov	x4, x11
  4049b8:	b	404a2c <feof@plt+0x1d2c>
  4049bc:	mov	w3, #0x10                  	// #16
  4049c0:	mov	x4, x14
  4049c4:	b	404a2c <feof@plt+0x1d2c>
  4049c8:	mov	x6, xzr
  4049cc:	b	4049dc <feof@plt+0x1cdc>
  4049d0:	add	x6, x6, #0x1
  4049d4:	cmp	x6, x4
  4049d8:	b.eq	404a24 <feof@plt+0x1d24>  // b.none
  4049dc:	ldr	x20, [x5, x6, lsl #3]
  4049e0:	cbz	x20, 4049d0 <feof@plt+0x1cd0>
  4049e4:	ldr	x7, [x20]
  4049e8:	cmp	x7, x3
  4049ec:	b.ne	4049d0 <feof@plt+0x1cd0>  // b.any
  4049f0:	ldr	w7, [x20, #24]
  4049f4:	cbz	w7, 4049d0 <feof@plt+0x1cd0>
  4049f8:	ldr	x20, [x20, #32]
  4049fc:	ldr	x21, [x20]
  404a00:	cmp	x21, x0
  404a04:	b.gt	404a18 <feof@plt+0x1d18>
  404a08:	subs	x7, x7, #0x1
  404a0c:	add	x20, x20, #0x8
  404a10:	b.ne	4049fc <feof@plt+0x1cfc>  // b.any
  404a14:	b	4049d0 <feof@plt+0x1cd0>
  404a18:	mov	w3, #0x40                  	// #64
  404a1c:	mov	x4, x16
  404a20:	b	404a2c <feof@plt+0x1d2c>
  404a24:	mov	w3, #0x20                  	// #32
  404a28:	mov	x4, x15
  404a2c:	ldr	w5, [x4]
  404a30:	orr	w2, w2, w3
  404a34:	madd	x3, x8, x9, x19
  404a38:	tst	w2, #0x44444444
  404a3c:	add	w5, w5, #0x1
  404a40:	str	w5, [x4]
  404a44:	strb	w2, [x3, #16]
  404a48:	b.eq	404a58 <feof@plt+0x1d58>  // b.none
  404a4c:	ldr	w3, [x24, #1792]
  404a50:	add	w3, w3, #0x1
  404a54:	str	w3, [x24, #1792]
  404a58:	bics	wzr, w12, w2
  404a5c:	b.ne	404a6c <feof@plt+0x1d6c>  // b.any
  404a60:	ldr	w3, [x23, #1796]
  404a64:	add	w3, w3, #0x1
  404a68:	str	w3, [x23, #1796]
  404a6c:	bics	wzr, w13, w2
  404a70:	b.ne	404828 <feof@plt+0x1b28>  // b.any
  404a74:	ldr	w2, [x22, #1800]
  404a78:	add	w2, w2, #0x1
  404a7c:	str	w2, [x22, #1800]
  404a80:	b	404828 <feof@plt+0x1b28>
  404a84:	mov	x22, xzr
  404a88:	fmov	d8, xzr
  404a8c:	mov	w26, #0x18                  	// #24
  404a90:	mov	w27, #0x11                  	// #17
  404a94:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404a98:	fmov	d9, xzr
  404a9c:	fmov	d10, xzr
  404aa0:	b	404ae4 <feof@plt+0x1de4>
  404aa4:	ldr	d11, [x29, #8]
  404aa8:	ldur	d12, [x29, #-8]
  404aac:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  404ab0:	fmov	d0, x8
  404ab4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404ab8:	fmul	d1, d11, d0
  404abc:	fmul	d2, d12, d0
  404ac0:	fmov	d0, xzr
  404ac4:	add	x0, x0, #0x6bd
  404ac8:	mov	x1, x23
  404acc:	bl	402ce0 <printf@plt>
  404ad0:	fadd	d10, d10, d11
  404ad4:	fadd	d9, d9, d12
  404ad8:	add	x22, x22, #0x1
  404adc:	cmp	x22, x25
  404ae0:	b.eq	404e08 <feof@plt+0x2108>  // b.none
  404ae4:	mul	x8, x22, x26
  404ae8:	ldr	x28, [x19, x8]
  404aec:	cbnz	x28, 404afc <feof@plt+0x1dfc>
  404af0:	madd	x8, x22, x26, x19
  404af4:	ldr	x8, [x8, #8]
  404af8:	cbz	x8, 404ad8 <feof@plt+0x1dd8>
  404afc:	madd	x8, x22, x26, x19
  404b00:	ldrb	w20, [x8, #16]
  404b04:	bics	wzr, w27, w20
  404b08:	b.eq	404ad8 <feof@plt+0x1dd8>  // b.none
  404b0c:	cbz	x28, 404b6c <feof@plt+0x1e6c>
  404b10:	ldr	w8, [x21, #1440]
  404b14:	ldr	x23, [x28, #24]
  404b18:	cbnz	w8, 404bcc <feof@plt+0x1ecc>
  404b1c:	mov	x0, x23
  404b20:	bl	45547c <_obstack_memory_used@@Base+0x254>
  404b24:	mov	w8, #0x2f                  	// #47
  404b28:	add	x1, x29, #0x8
  404b2c:	mov	x23, x0
  404b30:	strh	w8, [x29, #8]
  404b34:	bl	402660 <strstr@plt>
  404b38:	bl	4026d0 <strlen@plt>
  404b3c:	mov	x24, x0
  404b40:	mov	x0, x23
  404b44:	bl	4026d0 <strlen@plt>
  404b48:	add	w8, w24, #0x1
  404b4c:	sub	x8, x0, w8, sxtw
  404b50:	add	x8, x8, x23
  404b54:	add	x23, x8, #0x2
  404b58:	add	x1, x29, #0x8
  404b5c:	mov	x0, x23
  404b60:	bl	402660 <strstr@plt>
  404b64:	cbnz	x0, 404b38 <feof@plt+0x1e38>
  404b68:	b	404bcc <feof@plt+0x1ecc>
  404b6c:	madd	x8, x22, x26, x19
  404b70:	ldr	x8, [x8, #8]
  404b74:	ldr	w9, [x21, #1440]
  404b78:	ldr	x23, [x8, #24]
  404b7c:	cbnz	w9, 404bcc <feof@plt+0x1ecc>
  404b80:	mov	x0, x23
  404b84:	bl	45547c <_obstack_memory_used@@Base+0x254>
  404b88:	mov	w8, #0x2f                  	// #47
  404b8c:	add	x1, x29, #0x8
  404b90:	mov	x23, x0
  404b94:	strh	w8, [x29, #8]
  404b98:	bl	402660 <strstr@plt>
  404b9c:	bl	4026d0 <strlen@plt>
  404ba0:	mov	x24, x0
  404ba4:	mov	x0, x23
  404ba8:	bl	4026d0 <strlen@plt>
  404bac:	add	w8, w24, #0x1
  404bb0:	sub	x8, x0, w8, sxtw
  404bb4:	add	x8, x8, x23
  404bb8:	add	x23, x8, #0x2
  404bbc:	add	x1, x29, #0x8
  404bc0:	mov	x0, x23
  404bc4:	bl	402660 <strstr@plt>
  404bc8:	cbnz	x0, 404b9c <feof@plt+0x1e9c>
  404bcc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404bd0:	ldr	w8, [x8, #1428]
  404bd4:	cbz	w8, 404be8 <feof@plt+0x1ee8>
  404bd8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404bdc:	add	x0, x0, #0x6a7
  404be0:	mov	x1, x23
  404be4:	bl	402ce0 <printf@plt>
  404be8:	madd	x8, x22, x26, x19
  404bec:	ldr	x24, [x8, #8]
  404bf0:	orr	x8, x28, x24
  404bf4:	cbz	x8, 404f24 <feof@plt+0x2224>
  404bf8:	cbz	x28, 404c68 <feof@plt+0x1f68>
  404bfc:	cbnz	x24, 404c8c <feof@plt+0x1f8c>
  404c00:	stur	xzr, [x29, #-8]
  404c04:	add	x8, x29, #0x8
  404c08:	ldr	w9, [x28, #104]
  404c0c:	cbz	w9, 404c80 <feof@plt+0x1f80>
  404c10:	ldr	x11, [x28, #112]
  404c14:	mov	x10, xzr
  404c18:	fmov	d0, xzr
  404c1c:	b	404c2c <feof@plt+0x1f2c>
  404c20:	add	x10, x10, #0x1
  404c24:	cmp	x10, x9
  404c28:	b.eq	404dbc <feof@plt+0x20bc>  // b.none
  404c2c:	ldr	x13, [x11, x10, lsl #3]
  404c30:	cbz	x13, 404c20 <feof@plt+0x1f20>
  404c34:	ldr	x12, [x13]
  404c38:	cmp	x12, x28
  404c3c:	b.ne	404c20 <feof@plt+0x1f20>  // b.any
  404c40:	ldr	w12, [x13, #24]
  404c44:	cbz	w12, 404c20 <feof@plt+0x1f20>
  404c48:	ldr	x13, [x13, #32]
  404c4c:	ldr	d1, [x13], #8
  404c50:	subs	x12, x12, #0x1
  404c54:	scvtf	d1, d1
  404c58:	fdiv	d1, d1, d8
  404c5c:	fadd	d0, d0, d1
  404c60:	b.ne	404c4c <feof@plt+0x1f4c>  // b.any
  404c64:	b	404c20 <feof@plt+0x1f20>
  404c68:	str	xzr, [x29, #8]
  404c6c:	cbz	x24, 404c8c <feof@plt+0x1f8c>
  404c70:	sub	x8, x29, #0x8
  404c74:	mov	x28, x24
  404c78:	ldr	w9, [x28, #104]
  404c7c:	cbnz	w9, 404c10 <feof@plt+0x1f10>
  404c80:	fmov	d0, xzr
  404c84:	str	d0, [x8]
  404c88:	b	404ddc <feof@plt+0x20dc>
  404c8c:	ldr	w8, [x28, #104]
  404c90:	mov	x27, x21
  404c94:	cbz	w8, 404dc4 <feof@plt+0x20c4>
  404c98:	mov	x21, xzr
  404c9c:	fmov	d11, xzr
  404ca0:	fmov	d12, xzr
  404ca4:	b	404cbc <feof@plt+0x1fbc>
  404ca8:	fadd	d11, d11, d8
  404cac:	fadd	d12, d12, d8
  404cb0:	add	x21, x21, #0x1
  404cb4:	cmp	x21, w8, uxtw
  404cb8:	b.cs	404dcc <feof@plt+0x20cc>  // b.hs, b.nlast
  404cbc:	ldr	x9, [x28, #112]
  404cc0:	lsl	x10, x21, #3
  404cc4:	ldr	x9, [x9, x10]
  404cc8:	cbz	x9, 404cb0 <feof@plt+0x1fb0>
  404ccc:	ldr	x11, [x24, #112]
  404cd0:	ldr	x13, [x11, x10]
  404cd4:	cbz	x13, 404cb0 <feof@plt+0x1fb0>
  404cd8:	ldr	x10, [x9]
  404cdc:	cmp	x10, x28
  404ce0:	b.ne	404cb0 <feof@plt+0x1fb0>  // b.any
  404ce4:	ldr	x10, [x13]
  404ce8:	cmp	x10, x24
  404cec:	b.ne	404cb0 <feof@plt+0x1fb0>  // b.any
  404cf0:	ldr	w11, [x9, #24]
  404cf4:	cbz	w11, 404ca8 <feof@plt+0x1fa8>
  404cf8:	adrp	x15, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404cfc:	ldr	x12, [x9, #32]
  404d00:	ldr	x13, [x13, #32]
  404d04:	ldr	d2, [x15, #936]
  404d08:	mov	w10, wzr
  404d0c:	mov	w14, wzr
  404d10:	fmov	d0, xzr
  404d14:	fmov	d1, xzr
  404d18:	b	404d2c <feof@plt+0x202c>
  404d1c:	subs	x11, x11, #0x1
  404d20:	add	x13, x13, #0x8
  404d24:	add	x12, x12, #0x8
  404d28:	b.eq	404d68 <feof@plt+0x2068>  // b.none
  404d2c:	ldr	x16, [x12]
  404d30:	ldr	x15, [x13]
  404d34:	orr	x17, x15, x16
  404d38:	cbz	x17, 404d1c <feof@plt+0x201c>
  404d3c:	scvtf	d4, x15
  404d40:	scvtf	d3, x16
  404d44:	fdiv	d4, d4, d8
  404d48:	fdiv	d3, d3, d8
  404d4c:	fcmp	d4, d2
  404d50:	fccmp	d3, d2, #0x0, lt  // lt = tstop
  404d54:	fadd	d1, d1, d3
  404d58:	fadd	d0, d0, d4
  404d5c:	csinc	w10, w10, wzr, lt  // lt = tstop
  404d60:	mov	w14, #0x1                   	// #1
  404d64:	b	404d1c <feof@plt+0x201c>
  404d68:	fadd	d11, d11, d1
  404d6c:	fadd	d12, d12, d0
  404d70:	cbz	w14, 404cb0 <feof@plt+0x1fb0>
  404d74:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404d78:	ldr	w11, [x11, #1428]
  404d7c:	cbz	w11, 404cb0 <feof@plt+0x1fb0>
  404d80:	cbnz	w10, 404d90 <feof@plt+0x2090>
  404d84:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404d88:	ldr	w10, [x10, #1436]
  404d8c:	cbnz	w10, 404cb0 <feof@plt+0x1fb0>
  404d90:	ldr	w1, [x9, #8]
  404d94:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  404d98:	fmov	d2, x8
  404d9c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404da0:	fmul	d1, d1, d2
  404da4:	fmul	d2, d0, d2
  404da8:	fmov	d0, xzr
  404dac:	add	x0, x0, #0x7d2
  404db0:	bl	402ce0 <printf@plt>
  404db4:	ldr	w8, [x28, #104]
  404db8:	b	404cb0 <feof@plt+0x1fb0>
  404dbc:	str	d0, [x8]
  404dc0:	b	404ddc <feof@plt+0x20dc>
  404dc4:	fmov	d12, xzr
  404dc8:	fmov	d11, xzr
  404dcc:	mov	x21, x27
  404dd0:	mov	w27, #0x11                  	// #17
  404dd4:	str	d11, [x29, #8]
  404dd8:	stur	d12, [x29, #-8]
  404ddc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404de0:	ldr	w8, [x8, #1432]
  404de4:	cbz	w8, 404ad8 <feof@plt+0x1dd8>
  404de8:	tst	w20, #0x44444444
  404dec:	b.ne	404aa4 <feof@plt+0x1da4>  // b.any
  404df0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404df4:	ldr	w8, [x8, #1436]
  404df8:	cbnz	w8, 404ad8 <feof@plt+0x1dd8>
  404dfc:	b	404aa4 <feof@plt+0x1da4>
  404e00:	fmov	d10, xzr
  404e04:	fmov	d9, xzr
  404e08:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e0c:	ldr	w8, [x8, #1432]
  404e10:	cbz	w8, 404e3c <feof@plt+0x213c>
  404e14:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  404e18:	fmov	d0, x8
  404e1c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404e20:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  404e24:	fmul	d1, d10, d0
  404e28:	fmul	d2, d9, d0
  404e2c:	add	x0, x0, #0x6ef
  404e30:	add	x1, x1, #0xce0
  404e34:	fmov	d0, xzr
  404e38:	bl	402ce0 <printf@plt>
  404e3c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404e40:	add	x0, x0, #0x808
  404e44:	bl	402690 <puts@plt>
  404e48:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e4c:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e50:	ldr	w1, [x8, #1804]
  404e54:	ldr	w8, [x19, #1812]
  404e58:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e5c:	ldr	w2, [x9, #1808]
  404e60:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404e64:	sub	w3, w1, w8
  404e68:	add	x0, x0, #0x721
  404e6c:	bl	402ce0 <printf@plt>
  404e70:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e74:	ldr	w1, [x19, #1812]
  404e78:	ldr	w2, [x8, #1816]
  404e7c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404e80:	add	x0, x0, #0x742
  404e84:	bl	402ce0 <printf@plt>
  404e88:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e8c:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e90:	ldr	w1, [x8, #1820]
  404e94:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404e98:	ldr	w2, [x9, #1824]
  404e9c:	ldr	w3, [x8, #1792]
  404ea0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404ea4:	add	x0, x0, #0x75e
  404ea8:	bl	402ce0 <printf@plt>
  404eac:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404eb0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404eb4:	ldr	w1, [x8, #1828]
  404eb8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404ebc:	ldr	w2, [x9, #1832]
  404ec0:	ldr	w3, [x8, #1796]
  404ec4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404ec8:	add	x0, x0, #0x77f
  404ecc:	bl	402ce0 <printf@plt>
  404ed0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404ed4:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404ed8:	ldr	w1, [x8, #1836]
  404edc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404ee0:	ldr	w2, [x9, #1840]
  404ee4:	ldr	w3, [x8, #1800]
  404ee8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404eec:	add	x0, x0, #0x7a0
  404ef0:	bl	402ce0 <printf@plt>
  404ef4:	ldp	x20, x19, [sp, #160]
  404ef8:	ldp	x22, x21, [sp, #144]
  404efc:	ldp	x24, x23, [sp, #128]
  404f00:	ldp	x26, x25, [sp, #112]
  404f04:	ldp	x28, x27, [sp, #96]
  404f08:	ldp	x29, x30, [sp, #80]
  404f0c:	ldp	d9, d8, [sp, #64]
  404f10:	ldp	d11, d10, [sp, #48]
  404f14:	ldr	d12, [sp, #32]
  404f18:	mov	w0, #0x1                   	// #1
  404f1c:	add	sp, sp, #0xb0
  404f20:	ret
  404f24:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404f28:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  404f2c:	add	x0, x0, #0x39b
  404f30:	add	x2, x2, #0x7c1
  404f34:	mov	w1, #0x392                 	// #914
  404f38:	bl	408b70 <feof@plt+0x5e70>
  404f3c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404f40:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  404f44:	add	x0, x0, #0x39b
  404f48:	add	x2, x2, #0x695
  404f4c:	mov	w1, #0x4c2                 	// #1218
  404f50:	bl	408b70 <feof@plt+0x5e70>
  404f54:	stp	x29, x30, [sp, #-48]!
  404f58:	stp	x22, x21, [sp, #16]
  404f5c:	stp	x20, x19, [sp, #32]
  404f60:	mov	x29, sp
  404f64:	mov	w8, #0xfe5f0000            	// #-27328512
  404f68:	add	w8, w0, w8
  404f6c:	cmp	w8, #0x120, lsl #12
  404f70:	b.cs	404fe0 <feof@plt+0x22e0>  // b.hs, b.nlast
  404f74:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404f78:	lsr	w21, w8, #17
  404f7c:	add	x22, x22, #0x670
  404f80:	add	x8, x22, w21, uxtw #4
  404f84:	ldr	w9, [x8]
  404f88:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  404f8c:	add	x10, x10, #0x5cc
  404f90:	mov	w11, #0x1                   	// #1
  404f94:	str	w11, [x10, w21, uxtw #2]
  404f98:	cbnz	w9, 404ff8 <feof@plt+0x22f8>
  404f9c:	lsr	w20, w1, #1
  404fa0:	lsl	x0, x20, #3
  404fa4:	str	w20, [x8]
  404fa8:	bl	402b60 <malloc@plt>
  404fac:	add	x8, x22, x21, lsl #4
  404fb0:	str	x0, [x8, #8]
  404fb4:	cbz	x0, 405010 <feof@plt+0x2310>
  404fb8:	cbz	w20, 404fd0 <feof@plt+0x22d0>
  404fbc:	mov	x19, x0
  404fc0:	bl	405b84 <feof@plt+0x2e84>
  404fc4:	subs	x20, x20, #0x1
  404fc8:	str	x0, [x19], #8
  404fcc:	b.ne	404fc0 <feof@plt+0x22c0>  // b.any
  404fd0:	ldp	x20, x19, [sp, #32]
  404fd4:	ldp	x22, x21, [sp, #16]
  404fd8:	ldp	x29, x30, [sp], #48
  404fdc:	ret
  404fe0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404fe4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  404fe8:	add	x0, x0, #0x39b
  404fec:	add	x2, x2, #0x5a3
  404ff0:	mov	w1, #0xd3                  	// #211
  404ff4:	bl	408b70 <feof@plt+0x5e70>
  404ff8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  404ffc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  405000:	add	x0, x0, #0x39b
  405004:	add	x2, x2, #0x5a3
  405008:	mov	w1, #0xd5                  	// #213
  40500c:	bl	408b70 <feof@plt+0x5e70>
  405010:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  405014:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  405018:	add	x0, x0, #0x39b
  40501c:	add	x2, x2, #0x5a3
  405020:	mov	w1, #0xd9                  	// #217
  405024:	bl	408b70 <feof@plt+0x5e70>
  405028:	stp	x29, x30, [sp, #-48]!
  40502c:	str	x21, [sp, #16]
  405030:	stp	x20, x19, [sp, #32]
  405034:	mov	x29, sp
  405038:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40503c:	ldr	w8, [x20, #1624]
  405040:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405044:	cbz	w8, 405098 <feof@plt+0x2398>
  405048:	ldr	x0, [x21, #1632]
  40504c:	bl	4051e0 <feof@plt+0x24e0>
  405050:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405054:	add	x8, x8, #0x618
  405058:	ldp	x8, x9, [x8]
  40505c:	sub	x9, x9, x8
  405060:	cmp	x9, #0x7
  405064:	b.hi	405080 <feof@plt+0x2380>  // b.pmore
  405068:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40506c:	add	x19, x19, #0x600
  405070:	mov	w1, #0x8                   	// #8
  405074:	mov	x0, x19
  405078:	bl	45500c <_obstack_newchunk@@Base>
  40507c:	ldr	x8, [x19, #24]
  405080:	ldr	x9, [x21, #1632]
  405084:	str	x9, [x8]
  405088:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40508c:	ldr	x9, [x8, #1560]
  405090:	add	x9, x9, #0x8
  405094:	str	x9, [x8, #1560]
  405098:	mov	w0, #0xb8                  	// #184
  40509c:	mov	w1, #0x1                   	// #1
  4050a0:	bl	4026b0 <calloc@plt>
  4050a4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4050a8:	add	x8, x8, #0x670
  4050ac:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4050b0:	str	wzr, [x8]
  4050b4:	str	wzr, [x8, #16]
  4050b8:	str	wzr, [x8, #32]
  4050bc:	str	wzr, [x8, #48]
  4050c0:	str	wzr, [x8, #64]
  4050c4:	str	wzr, [x8, #80]
  4050c8:	str	wzr, [x8, #96]
  4050cc:	str	wzr, [x8, #112]
  4050d0:	str	wzr, [x8, #128]
  4050d4:	ldr	x8, [x9, #1528]
  4050d8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4050dc:	str	wzr, [x9, #1520]
  4050e0:	str	x0, [x21, #1632]
  4050e4:	str	x8, [x0]
  4050e8:	bl	405ac8 <feof@plt+0x2dc8>
  4050ec:	ldr	x8, [x21, #1632]
  4050f0:	str	w0, [x8, #8]
  4050f4:	bl	405ac8 <feof@plt+0x2dc8>
  4050f8:	ldr	x8, [x21, #1632]
  4050fc:	str	w0, [x8, #12]
  405100:	bl	405ac8 <feof@plt+0x2dc8>
  405104:	ldr	x8, [x21, #1632]
  405108:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40510c:	str	w0, [x8, #16]
  405110:	ldr	w10, [x20, #1624]
  405114:	ldrb	w9, [x9, #1448]
  405118:	add	w10, w10, #0x1
  40511c:	cmp	w9, #0x1
  405120:	str	w10, [x20, #1624]
  405124:	b.ne	40514c <feof@plt+0x244c>  // b.any
  405128:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40512c:	ldr	x0, [x9, #1408]
  405130:	ldr	w2, [x8, #8]
  405134:	ldp	x20, x19, [sp, #32]
  405138:	ldr	x21, [sp, #16]
  40513c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  405140:	add	x1, x1, #0x5b0
  405144:	ldp	x29, x30, [sp], #48
  405148:	b	408eb4 <feof@plt+0x61b4>
  40514c:	ldp	x20, x19, [sp, #32]
  405150:	ldr	x21, [sp, #16]
  405154:	ldp	x29, x30, [sp], #48
  405158:	ret
  40515c:	stp	x29, x30, [sp, #-16]!
  405160:	mov	x29, sp
  405164:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  405168:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  40516c:	add	x0, x0, #0x39b
  405170:	add	x2, x2, #0x5d4
  405174:	mov	w1, #0xb3                  	// #179
  405178:	bl	408b70 <feof@plt+0x5e70>
  40517c:	stp	x29, x30, [sp, #-16]!
  405180:	mov	x29, sp
  405184:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  405188:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  40518c:	add	x0, x0, #0x39b
  405190:	add	x2, x2, #0x5df
  405194:	mov	w1, #0xbc                  	// #188
  405198:	bl	408b70 <feof@plt+0x5e70>
  40519c:	stp	x29, x30, [sp, #-16]!
  4051a0:	mov	x29, sp
  4051a4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4051a8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4051ac:	add	x0, x0, #0x39b
  4051b0:	add	x2, x2, #0x5e8
  4051b4:	mov	w1, #0xc5                  	// #197
  4051b8:	bl	408b70 <feof@plt+0x5e70>
  4051bc:	stp	x29, x30, [sp, #-16]!
  4051c0:	mov	x29, sp
  4051c4:	mov	w0, #0x10                  	// #16
  4051c8:	mov	w1, #0x1                   	// #1
  4051cc:	bl	4026b0 <calloc@plt>
  4051d0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4051d4:	str	x0, [x8, #1640]
  4051d8:	ldp	x29, x30, [sp], #16
  4051dc:	b	405eb4 <feof@plt+0x31b4>
  4051e0:	stp	x29, x30, [sp, #-16]!
  4051e4:	mov	x29, sp
  4051e8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4051ec:	ldr	w8, [x8, #1484]
  4051f0:	cbz	w8, 405210 <feof@plt+0x2510>
  4051f4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4051f8:	add	x8, x8, #0x670
  4051fc:	ldr	w9, [x8]
  405200:	str	w9, [x0, #24]
  405204:	ldr	x8, [x8, #8]
  405208:	str	x8, [x0, #32]
  40520c:	mov	w8, #0x1                   	// #1
  405210:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405214:	ldr	w9, [x9, #1488]
  405218:	cbz	w9, 40523c <feof@plt+0x253c>
  40521c:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405220:	add	x9, x9, #0x680
  405224:	ldr	w10, [x9]
  405228:	add	x11, x0, w8, uxtw #4
  40522c:	add	w8, w8, #0x1
  405230:	str	w10, [x11, #24]
  405234:	ldr	x9, [x9, #8]
  405238:	str	x9, [x11, #32]
  40523c:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405240:	ldr	w9, [x9, #1492]
  405244:	cbz	w9, 405268 <feof@plt+0x2568>
  405248:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40524c:	add	x9, x9, #0x690
  405250:	ldr	w10, [x9]
  405254:	add	x11, x0, w8, uxtw #4
  405258:	add	w8, w8, #0x1
  40525c:	str	w10, [x11, #24]
  405260:	ldr	x9, [x9, #8]
  405264:	str	x9, [x11, #32]
  405268:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40526c:	ldr	w9, [x9, #1496]
  405270:	cbz	w9, 405294 <feof@plt+0x2594>
  405274:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405278:	add	x9, x9, #0x6a0
  40527c:	ldr	w10, [x9]
  405280:	add	x11, x0, w8, uxtw #4
  405284:	add	w8, w8, #0x1
  405288:	str	w10, [x11, #24]
  40528c:	ldr	x9, [x9, #8]
  405290:	str	x9, [x11, #32]
  405294:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405298:	ldr	w9, [x9, #1500]
  40529c:	cbz	w9, 4052c0 <feof@plt+0x25c0>
  4052a0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4052a4:	add	x9, x9, #0x6b0
  4052a8:	ldr	w10, [x9]
  4052ac:	add	x11, x0, w8, uxtw #4
  4052b0:	add	w8, w8, #0x1
  4052b4:	str	w10, [x11, #24]
  4052b8:	ldr	x9, [x9, #8]
  4052bc:	str	x9, [x11, #32]
  4052c0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4052c4:	ldr	w9, [x9, #1504]
  4052c8:	cbz	w9, 4052ec <feof@plt+0x25ec>
  4052cc:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4052d0:	add	x9, x9, #0x6c0
  4052d4:	ldr	w10, [x9]
  4052d8:	add	x11, x0, w8, uxtw #4
  4052dc:	add	w8, w8, #0x1
  4052e0:	str	w10, [x11, #24]
  4052e4:	ldr	x9, [x9, #8]
  4052e8:	str	x9, [x11, #32]
  4052ec:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4052f0:	ldr	w9, [x9, #1508]
  4052f4:	cbz	w9, 405318 <feof@plt+0x2618>
  4052f8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4052fc:	add	x9, x9, #0x6d0
  405300:	ldr	w10, [x9]
  405304:	add	x11, x0, w8, uxtw #4
  405308:	add	w8, w8, #0x1
  40530c:	str	w10, [x11, #24]
  405310:	ldr	x9, [x9, #8]
  405314:	str	x9, [x11, #32]
  405318:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40531c:	ldr	w9, [x9, #1512]
  405320:	cbz	w9, 405344 <feof@plt+0x2644>
  405324:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405328:	add	x9, x9, #0x6e0
  40532c:	ldr	w10, [x9]
  405330:	add	x11, x0, w8, uxtw #4
  405334:	add	w8, w8, #0x1
  405338:	str	w10, [x11, #24]
  40533c:	ldr	x9, [x9, #8]
  405340:	str	x9, [x11, #32]
  405344:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405348:	ldr	w9, [x9, #1516]
  40534c:	cbz	w9, 405370 <feof@plt+0x2670>
  405350:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405354:	add	x9, x9, #0x6f0
  405358:	ldr	w10, [x9]
  40535c:	add	x11, x0, w8, uxtw #4
  405360:	add	w8, w8, #0x1
  405364:	str	w10, [x11, #24]
  405368:	ldr	x9, [x9, #8]
  40536c:	str	x9, [x11, #32]
  405370:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405374:	ldr	w10, [x9, #1520]
  405378:	cbz	w10, 40538c <feof@plt+0x268c>
  40537c:	cmp	w8, w10
  405380:	b.ne	405398 <feof@plt+0x2698>  // b.any
  405384:	ldp	x29, x30, [sp], #16
  405388:	ret
  40538c:	str	w8, [x9, #1520]
  405390:	ldp	x29, x30, [sp], #16
  405394:	ret
  405398:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  40539c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4053a0:	add	x0, x0, #0x39b
  4053a4:	add	x2, x2, #0x5c8
  4053a8:	mov	w1, #0x6f                  	// #111
  4053ac:	bl	408b70 <feof@plt+0x5e70>
  4053b0:	stp	x29, x30, [sp, #-64]!
  4053b4:	str	x23, [sp, #16]
  4053b8:	stp	x22, x21, [sp, #32]
  4053bc:	stp	x20, x19, [sp, #48]
  4053c0:	mov	x29, sp
  4053c4:	cbz	w1, 4053f8 <feof@plt+0x26f8>
  4053c8:	mov	x19, x4
  4053cc:	mov	x20, x3
  4053d0:	mov	x21, x2
  4053d4:	mov	w22, w1
  4053d8:	mov	x23, x0
  4053dc:	ldr	x0, [x23]
  4053e0:	mov	x1, x20
  4053e4:	mov	x2, x19
  4053e8:	blr	x21
  4053ec:	subs	w22, w22, #0x1
  4053f0:	str	x0, [x23], #8
  4053f4:	b.ne	4053dc <feof@plt+0x26dc>  // b.any
  4053f8:	ldp	x20, x19, [sp, #48]
  4053fc:	ldp	x22, x21, [sp, #32]
  405400:	ldr	x23, [sp, #16]
  405404:	ldp	x29, x30, [sp], #64
  405408:	ret
  40540c:	stp	x29, x30, [sp, #-64]!
  405410:	stp	x24, x23, [sp, #16]
  405414:	stp	x22, x21, [sp, #32]
  405418:	stp	x20, x19, [sp, #48]
  40541c:	mov	x29, sp
  405420:	mov	w8, #0xaaab                	// #43691
  405424:	movk	w8, #0xaaaa, lsl #16
  405428:	umull	x8, w1, w8
  40542c:	lsr	x22, x8, #33
  405430:	add	w8, w22, w22, lsl #1
  405434:	cmp	w1, w8
  405438:	b.ne	4054a4 <feof@plt+0x27a4>  // b.any
  40543c:	cmp	w1, #0x3
  405440:	b.cc	405490 <feof@plt+0x2790>  // b.lo, b.ul, b.last
  405444:	mov	x19, x4
  405448:	mov	x20, x3
  40544c:	mov	x21, x2
  405450:	mov	w23, wzr
  405454:	add	x24, x0, #0x10
  405458:	ldur	x0, [x24, #-8]
  40545c:	mov	x1, x20
  405460:	mov	x2, x19
  405464:	blr	x21
  405468:	ldr	x8, [x24]
  40546c:	stur	x0, [x24, #-8]
  405470:	mov	x1, x20
  405474:	mov	x2, x19
  405478:	mov	x0, x8
  40547c:	blr	x21
  405480:	add	w23, w23, #0x1
  405484:	str	x0, [x24], #24
  405488:	cmp	w23, w22
  40548c:	b.cc	405458 <feof@plt+0x2758>  // b.lo, b.ul, b.last
  405490:	ldp	x20, x19, [sp, #48]
  405494:	ldp	x22, x21, [sp, #32]
  405498:	ldp	x24, x23, [sp, #16]
  40549c:	ldp	x29, x30, [sp], #64
  4054a0:	ret
  4054a4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4054a8:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4054ac:	add	x0, x0, #0x39b
  4054b0:	add	x2, x2, #0x65f
  4054b4:	mov	w1, #0x2de                 	// #734
  4054b8:	bl	408b70 <feof@plt+0x5e70>
  4054bc:	ret
  4054c0:	ret
  4054c4:	stp	x29, x30, [sp, #-80]!
  4054c8:	str	x25, [sp, #16]
  4054cc:	stp	x24, x23, [sp, #32]
  4054d0:	stp	x22, x21, [sp, #48]
  4054d4:	stp	x20, x19, [sp, #64]
  4054d8:	mov	x29, sp
  4054dc:	mov	w8, #0x8e39                	// #36409
  4054e0:	movk	w8, #0x38e3, lsl #16
  4054e4:	mov	w9, #0xc71c                	// #50972
  4054e8:	mul	w8, w1, w8
  4054ec:	movk	w9, #0x1c71, lsl #16
  4054f0:	cmp	w8, w9
  4054f4:	b.hi	40559c <feof@plt+0x289c>  // b.pmore
  4054f8:	mov	w22, w1
  4054fc:	cbz	w1, 405584 <feof@plt+0x2884>
  405500:	mov	x19, x4
  405504:	mov	x20, x3
  405508:	mov	x21, x2
  40550c:	mov	x23, x0
  405510:	mov	w24, wzr
  405514:	add	w8, w24, #0x1
  405518:	add	x25, x23, w8, uxtw #3
  40551c:	ldr	x0, [x25, #8]
  405520:	mov	x1, x20
  405524:	mov	x2, x19
  405528:	blr	x21
  40552c:	ldr	x8, [x25, #24]
  405530:	str	x0, [x25, #8]
  405534:	mov	x1, x20
  405538:	mov	x2, x19
  40553c:	mov	x0, x8
  405540:	blr	x21
  405544:	ldr	x8, [x25, #40]
  405548:	str	x0, [x25, #24]
  40554c:	mov	x1, x20
  405550:	mov	x2, x19
  405554:	mov	x0, x8
  405558:	blr	x21
  40555c:	ldr	x8, [x25, #56]
  405560:	str	x0, [x25, #40]
  405564:	mov	x1, x20
  405568:	mov	x2, x19
  40556c:	mov	x0, x8
  405570:	blr	x21
  405574:	add	w24, w24, #0x9
  405578:	cmp	w24, w22
  40557c:	str	x0, [x25, #56]
  405580:	b.cc	405514 <feof@plt+0x2814>  // b.lo, b.ul, b.last
  405584:	ldp	x20, x19, [sp, #64]
  405588:	ldp	x22, x21, [sp, #48]
  40558c:	ldp	x24, x23, [sp, #32]
  405590:	ldr	x25, [sp, #16]
  405594:	ldp	x29, x30, [sp], #80
  405598:	ret
  40559c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4055a0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4055a4:	add	x0, x0, #0x39b
  4055a8:	add	x2, x2, #0x678
  4055ac:	mov	w1, #0x2ef                 	// #751
  4055b0:	bl	408b70 <feof@plt+0x5e70>
  4055b4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4055b8:	add	x8, x8, #0x740
  4055bc:	ldp	w9, w8, [x8]
  4055c0:	add	w0, w8, w9
  4055c4:	ret
  4055c8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4055cc:	add	x8, x8, #0x738
  4055d0:	ldr	x9, [x8]
  4055d4:	ldr	w8, [x8, #24]
  4055d8:	cmp	x9, #0x0
  4055dc:	csinc	w0, w8, wzr, ne  // ne = any
  4055e0:	ret
  4055e4:	sub	sp, sp, #0x40
  4055e8:	stp	x29, x30, [sp, #32]
  4055ec:	str	x19, [sp, #48]
  4055f0:	add	x29, sp, #0x20
  4055f4:	mov	x19, x0
  4055f8:	strh	wzr, [sp, #2]
  4055fc:	stp	xzr, xzr, [sp, #8]
  405600:	bl	402930 <getpid@plt>
  405604:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  405608:	ldr	q0, [x8, #2432]
  40560c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405610:	str	w0, [sp, #24]
  405614:	add	x8, x8, #0x740
  405618:	mov	w9, #0x1                   	// #1
  40561c:	mov	w1, #0x42                  	// #66
  405620:	mov	w2, #0x1b6                 	// #438
  405624:	mov	x0, x19
  405628:	str	wzr, [x8, #16]
  40562c:	str	q0, [x8]
  405630:	strh	w9, [sp]
  405634:	bl	402720 <open@plt>
  405638:	tbnz	w0, #31, 4056a0 <feof@plt+0x29a0>
  40563c:	mov	w19, w0
  405640:	mov	x2, sp
  405644:	mov	w1, #0x7                   	// #7
  405648:	mov	w0, w19
  40564c:	bl	402c80 <fcntl@plt>
  405650:	cbz	w0, 405664 <feof@plt+0x2964>
  405654:	bl	402ac0 <__errno_location@plt>
  405658:	ldr	w8, [x0]
  40565c:	cmp	w8, #0x4
  405660:	b.eq	405640 <feof@plt+0x2940>  // b.none
  405664:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  405668:	add	x1, x1, #0x998
  40566c:	mov	w0, w19
  405670:	bl	453b84 <feof@plt+0x50e84>
  405674:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405678:	str	x0, [x8, #1848]
  40567c:	cbz	x0, 405698 <feof@plt+0x2998>
  405680:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405684:	mov	w19, #0x1                   	// #1
  405688:	mov	x1, xzr
  40568c:	str	w19, [x8, #1876]
  405690:	bl	402ca0 <setbuf@plt>
  405694:	b	4056a4 <feof@plt+0x29a4>
  405698:	mov	w0, w19
  40569c:	bl	402b30 <close@plt>
  4056a0:	mov	w19, wzr
  4056a4:	mov	w0, w19
  4056a8:	ldr	x19, [sp, #48]
  4056ac:	ldp	x29, x30, [sp, #32]
  4056b0:	add	sp, sp, #0x40
  4056b4:	ret
  4056b8:	stp	x29, x30, [sp, #-48]!
  4056bc:	str	x21, [sp, #16]
  4056c0:	stp	x20, x19, [sp, #32]
  4056c4:	mov	x29, sp
  4056c8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4056cc:	ldr	x3, [x8, #1848]
  4056d0:	cbz	x3, 405740 <feof@plt+0x2a40>
  4056d4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4056d8:	add	x8, x8, #0x744
  4056dc:	ldr	w20, [x8]
  4056e0:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4056e4:	add	x19, x19, #0x738
  4056e8:	cbz	w20, 405730 <feof@plt+0x2a30>
  4056ec:	ldr	w8, [x8, #16]
  4056f0:	tbz	w8, #31, 405730 <feof@plt+0x2a30>
  4056f4:	adrp	x0, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4056f8:	lsl	w1, w20, #2
  4056fc:	add	x0, x0, #0x758
  405700:	mov	w2, #0x1                   	// #1
  405704:	mov	w21, #0x1                   	// #1
  405708:	bl	402bf0 <fwrite@plt>
  40570c:	cmp	x0, #0x1
  405710:	b.eq	40571c <feof@plt+0x2a1c>  // b.none
  405714:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405718:	str	w21, [x8, #1872]
  40571c:	ldp	w8, w9, [x19, #8]
  405720:	ldr	x3, [x19]
  405724:	add	w8, w8, w20
  405728:	sub	w9, w9, w20
  40572c:	stp	w8, w9, [x19, #8]
  405730:	mov	x0, x3
  405734:	bl	402740 <fclose@plt>
  405738:	str	xzr, [x19]
  40573c:	str	wzr, [x19, #16]
  405740:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405744:	add	x8, x8, #0x750
  405748:	ldr	w0, [x8]
  40574c:	ldp	x20, x19, [sp, #32]
  405750:	ldr	x21, [sp, #16]
  405754:	str	wzr, [x8, #4]
  405758:	ldp	x29, x30, [sp], #48
  40575c:	ret
  405760:	stp	x29, x30, [sp, #-48]!
  405764:	str	x21, [sp, #16]
  405768:	stp	x20, x19, [sp, #32]
  40576c:	mov	x29, sp
  405770:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405774:	ldr	w8, [x8, #1860]
  405778:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40577c:	mov	w19, w0
  405780:	add	x20, x20, #0x738
  405784:	cmp	w8, #0x400
  405788:	b.cc	4057e0 <feof@plt+0x2ae0>  // b.lo, b.ul, b.last
  40578c:	mov	x0, x20
  405790:	ldr	x3, [x0], #32
  405794:	mov	w1, #0x1000                	// #4096
  405798:	mov	w2, #0x1                   	// #1
  40579c:	mov	w21, #0x1                   	// #1
  4057a0:	bl	402bf0 <fwrite@plt>
  4057a4:	cmp	x0, #0x1
  4057a8:	b.eq	4057b4 <feof@plt+0x2ab4>  // b.none
  4057ac:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4057b0:	str	w21, [x8, #1872]
  4057b4:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4057b8:	add	x9, x9, #0x740
  4057bc:	ldp	w8, w10, [x9]
  4057c0:	add	w11, w8, #0x400
  4057c4:	subs	w8, w10, #0x400
  4057c8:	stp	w11, w8, [x9]
  4057cc:	b.eq	4057e0 <feof@plt+0x2ae0>  // b.none
  4057d0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4057d4:	add	x9, x9, #0x758
  4057d8:	ldr	w10, [x9, #4096]
  4057dc:	str	w10, [x9]
  4057e0:	add	x9, x20, w8, uxtw #2
  4057e4:	add	w8, w8, #0x1
  4057e8:	str	w8, [x20, #12]
  4057ec:	str	w19, [x9, #32]
  4057f0:	ldp	x20, x19, [sp, #32]
  4057f4:	ldr	x21, [sp, #16]
  4057f8:	ldp	x29, x30, [sp], #48
  4057fc:	ret
  405800:	stp	x29, x30, [sp, #-48]!
  405804:	str	x21, [sp, #16]
  405808:	stp	x20, x19, [sp, #32]
  40580c:	mov	x29, sp
  405810:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405814:	ldr	w8, [x8, #1860]
  405818:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40581c:	mov	x19, x0
  405820:	add	x20, x20, #0x738
  405824:	cmp	w8, #0x400
  405828:	b.cc	405880 <feof@plt+0x2b80>  // b.lo, b.ul, b.last
  40582c:	mov	x0, x20
  405830:	ldr	x3, [x0], #32
  405834:	mov	w1, #0x1000                	// #4096
  405838:	mov	w2, #0x1                   	// #1
  40583c:	mov	w21, #0x1                   	// #1
  405840:	bl	402bf0 <fwrite@plt>
  405844:	cmp	x0, #0x1
  405848:	b.eq	405854 <feof@plt+0x2b54>  // b.none
  40584c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405850:	str	w21, [x8, #1872]
  405854:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405858:	add	x9, x9, #0x740
  40585c:	ldp	w8, w10, [x9]
  405860:	add	w11, w8, #0x400
  405864:	subs	w8, w10, #0x400
  405868:	stp	w11, w8, [x9]
  40586c:	b.eq	405880 <feof@plt+0x2b80>  // b.none
  405870:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405874:	add	x9, x9, #0x758
  405878:	ldr	w10, [x9, #4096]
  40587c:	str	w10, [x9]
  405880:	add	x9, x20, w8, uxtw #2
  405884:	add	w8, w8, #0x2
  405888:	lsr	x10, x19, #32
  40588c:	str	w8, [x20, #12]
  405890:	stp	w19, w10, [x9, #32]
  405894:	ldp	x20, x19, [sp, #32]
  405898:	ldr	x21, [sp, #16]
  40589c:	ldp	x29, x30, [sp], #48
  4058a0:	ret
  4058a4:	stp	x29, x30, [sp, #-48]!
  4058a8:	stp	x22, x21, [sp, #16]
  4058ac:	stp	x20, x19, [sp, #32]
  4058b0:	mov	x29, sp
  4058b4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4058b8:	ldr	w8, [x8, #1860]
  4058bc:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4058c0:	mov	w19, w1
  4058c4:	mov	w20, w0
  4058c8:	cmp	w8, #0x400
  4058cc:	add	x21, x21, #0x738
  4058d0:	b.cc	405928 <feof@plt+0x2c28>  // b.lo, b.ul, b.last
  4058d4:	mov	x0, x21
  4058d8:	ldr	x3, [x0], #32
  4058dc:	mov	w1, #0x1000                	// #4096
  4058e0:	mov	w2, #0x1                   	// #1
  4058e4:	mov	w22, #0x1                   	// #1
  4058e8:	bl	402bf0 <fwrite@plt>
  4058ec:	cmp	x0, #0x1
  4058f0:	b.eq	4058fc <feof@plt+0x2bfc>  // b.none
  4058f4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4058f8:	str	w22, [x8, #1872]
  4058fc:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405900:	add	x9, x9, #0x740
  405904:	ldp	w8, w10, [x9]
  405908:	add	w11, w8, #0x400
  40590c:	subs	w8, w10, #0x400
  405910:	stp	w11, w8, [x9]
  405914:	b.eq	405928 <feof@plt+0x2c28>  // b.none
  405918:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40591c:	add	x9, x9, #0x758
  405920:	ldr	w10, [x9, #4096]
  405924:	str	w10, [x9]
  405928:	add	x9, x21, w8, uxtw #2
  40592c:	add	w8, w8, #0x2
  405930:	str	w8, [x21, #12]
  405934:	stp	w20, w19, [x9, #32]
  405938:	ldp	x20, x19, [sp, #32]
  40593c:	ldp	x22, x21, [sp, #16]
  405940:	ldp	x29, x30, [sp], #48
  405944:	ret
  405948:	stp	x29, x30, [sp, #-64]!
  40594c:	str	x23, [sp, #16]
  405950:	stp	x22, x21, [sp, #32]
  405954:	stp	x20, x19, [sp, #48]
  405958:	mov	x29, sp
  40595c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405960:	ldr	w8, [x8, #1860]
  405964:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405968:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40596c:	mov	x19, x1
  405970:	mov	w20, w0
  405974:	cmp	w8, #0x400
  405978:	add	x21, x21, #0x738
  40597c:	add	x22, x22, #0x740
  405980:	b.cc	4059d0 <feof@plt+0x2cd0>  // b.lo, b.ul, b.last
  405984:	mov	x0, x21
  405988:	ldr	x3, [x0], #32
  40598c:	mov	w1, #0x1000                	// #4096
  405990:	mov	w2, #0x1                   	// #1
  405994:	mov	w23, #0x1                   	// #1
  405998:	bl	402bf0 <fwrite@plt>
  40599c:	cmp	x0, #0x1
  4059a0:	b.eq	4059ac <feof@plt+0x2cac>  // b.none
  4059a4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4059a8:	str	w23, [x8, #1872]
  4059ac:	ldp	w8, w9, [x22]
  4059b0:	add	w10, w8, #0x400
  4059b4:	subs	w8, w9, #0x400
  4059b8:	stp	w10, w8, [x22]
  4059bc:	b.eq	4059d0 <feof@plt+0x2cd0>  // b.none
  4059c0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4059c4:	add	x9, x9, #0x758
  4059c8:	ldr	w10, [x9, #4096]
  4059cc:	str	w10, [x9]
  4059d0:	add	x9, x21, w8, uxtw #2
  4059d4:	add	w8, w8, #0x2
  4059d8:	mov	w10, #0x2                   	// #2
  4059dc:	str	w8, [x21, #12]
  4059e0:	stp	w20, w10, [x9, #32]
  4059e4:	ldr	w20, [x19]
  4059e8:	cmp	w8, #0x400
  4059ec:	b.cc	405a3c <feof@plt+0x2d3c>  // b.lo, b.ul, b.last
  4059f0:	mov	x0, x21
  4059f4:	ldr	x3, [x0], #32
  4059f8:	mov	w1, #0x1000                	// #4096
  4059fc:	mov	w2, #0x1                   	// #1
  405a00:	mov	w23, #0x1                   	// #1
  405a04:	bl	402bf0 <fwrite@plt>
  405a08:	cmp	x0, #0x1
  405a0c:	b.eq	405a18 <feof@plt+0x2d18>  // b.none
  405a10:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405a14:	str	w23, [x8, #1872]
  405a18:	ldp	w8, w9, [x22]
  405a1c:	add	w10, w8, #0x400
  405a20:	subs	w8, w9, #0x400
  405a24:	stp	w10, w8, [x22]
  405a28:	b.eq	405a3c <feof@plt+0x2d3c>  // b.none
  405a2c:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405a30:	add	x9, x9, #0x758
  405a34:	ldr	w10, [x9, #4096]
  405a38:	str	w10, [x9]
  405a3c:	add	x9, x21, w8, uxtw #2
  405a40:	add	w8, w8, #0x1
  405a44:	str	w8, [x21, #12]
  405a48:	str	w20, [x9, #32]
  405a4c:	ldr	w19, [x19, #8]
  405a50:	cmp	w8, #0x400
  405a54:	b.cc	405aa4 <feof@plt+0x2da4>  // b.lo, b.ul, b.last
  405a58:	mov	x0, x21
  405a5c:	ldr	x3, [x0], #32
  405a60:	mov	w1, #0x1000                	// #4096
  405a64:	mov	w2, #0x1                   	// #1
  405a68:	mov	w20, #0x1                   	// #1
  405a6c:	bl	402bf0 <fwrite@plt>
  405a70:	cmp	x0, #0x1
  405a74:	b.eq	405a80 <feof@plt+0x2d80>  // b.none
  405a78:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405a7c:	str	w20, [x8, #1872]
  405a80:	ldp	w8, w9, [x22]
  405a84:	add	w10, w8, #0x400
  405a88:	subs	w8, w9, #0x400
  405a8c:	stp	w10, w8, [x22]
  405a90:	b.eq	405aa4 <feof@plt+0x2da4>  // b.none
  405a94:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405a98:	add	x9, x9, #0x758
  405a9c:	ldr	w10, [x9, #4096]
  405aa0:	str	w10, [x9]
  405aa4:	add	x9, x21, w8, uxtw #2
  405aa8:	add	w8, w8, #0x1
  405aac:	str	w8, [x21, #12]
  405ab0:	str	w19, [x9, #32]
  405ab4:	ldp	x20, x19, [sp, #48]
  405ab8:	ldp	x22, x21, [sp, #32]
  405abc:	ldr	x23, [sp, #16]
  405ac0:	ldp	x29, x30, [sp], #64
  405ac4:	ret
  405ac8:	stp	x29, x30, [sp, #-32]!
  405acc:	str	x19, [sp, #16]
  405ad0:	mov	x29, sp
  405ad4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405ad8:	add	x8, x8, #0x744
  405adc:	ldr	w9, [x8, #16]
  405ae0:	cmp	w9, #0x1
  405ae4:	b.lt	405b58 <feof@plt+0x2e58>  // b.tstop
  405ae8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405aec:	ldr	w8, [x8]
  405af0:	ldr	w9, [x9, #1864]
  405af4:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405af8:	add	x19, x19, #0x738
  405afc:	cmp	w9, w8
  405b00:	b.ne	405b44 <feof@plt+0x2e44>  // b.any
  405b04:	ldr	w9, [x19, #8]
  405b08:	ldr	x3, [x19]
  405b0c:	add	x0, x19, #0x20
  405b10:	mov	w1, #0x1                   	// #1
  405b14:	add	w8, w9, w8
  405b18:	mov	w2, #0x1000                	// #4096
  405b1c:	stp	w8, wzr, [x19, #8]
  405b20:	str	wzr, [x19, #16]
  405b24:	bl	402650 <fread@plt>
  405b28:	ldr	w8, [x19, #16]
  405b2c:	lsr	x9, x0, #2
  405b30:	adds	w8, w8, w9
  405b34:	str	w8, [x19, #16]
  405b38:	b.eq	405b60 <feof@plt+0x2e60>  // b.none
  405b3c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405b40:	ldr	w8, [x8, #1860]
  405b44:	add	x9, x19, w8, uxtw #2
  405b48:	add	w8, w8, #0x1
  405b4c:	str	w8, [x19, #12]
  405b50:	ldr	w0, [x9, #32]
  405b54:	b	405b78 <feof@plt+0x2e78>
  405b58:	mov	w0, wzr
  405b5c:	b	405b78 <feof@plt+0x2e78>
  405b60:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405b64:	add	x8, x8, #0x748
  405b68:	ldr	w9, [x8, #4]
  405b6c:	mov	w0, wzr
  405b70:	add	w9, w9, #0x1
  405b74:	stp	wzr, w9, [x8]
  405b78:	ldr	x19, [sp, #16]
  405b7c:	ldp	x29, x30, [sp], #32
  405b80:	ret
  405b84:	stp	x29, x30, [sp, #-32]!
  405b88:	str	x19, [sp, #16]
  405b8c:	mov	x29, sp
  405b90:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405b94:	add	x8, x8, #0x744
  405b98:	ldr	w9, [x8, #16]
  405b9c:	cmp	w9, #0x1
  405ba0:	b.lt	405c34 <feof@plt+0x2f34>  // b.tstop
  405ba4:	ldp	w8, w9, [x8]
  405ba8:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405bac:	add	x19, x19, #0x738
  405bb0:	sub	w9, w9, w8
  405bb4:	cmp	w9, #0x1
  405bb8:	b.hi	405c44 <feof@plt+0x2f44>  // b.pmore
  405bbc:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405bc0:	ldr	w11, [x10, #1856]
  405bc4:	add	w11, w11, w8
  405bc8:	str	w11, [x10, #1856]
  405bcc:	cbz	w9, 405be0 <feof@plt+0x2ee0>
  405bd0:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405bd4:	add	x10, x10, #0x758
  405bd8:	ldr	w8, [x10, x8, lsl #2]
  405bdc:	str	w8, [x10]
  405be0:	ldr	x3, [x19]
  405be4:	add	x8, x19, w9, uxtw #2
  405be8:	add	x0, x8, #0x20
  405bec:	mov	w1, #0x1                   	// #1
  405bf0:	mov	w2, #0x1000                	// #4096
  405bf4:	stp	wzr, w9, [x19, #12]
  405bf8:	bl	402650 <fread@plt>
  405bfc:	ldr	w8, [x19, #16]
  405c00:	lsr	x9, x0, #2
  405c04:	add	w8, w8, w9
  405c08:	cmp	w8, #0x2
  405c0c:	str	w8, [x19, #16]
  405c10:	b.cs	405c3c <feof@plt+0x2f3c>  // b.hs, b.nlast
  405c14:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405c18:	add	x9, x9, #0x748
  405c1c:	ldr	w10, [x9, #4]
  405c20:	mov	x0, xzr
  405c24:	sub	w8, w10, w8
  405c28:	add	w8, w8, #0x2
  405c2c:	stp	wzr, w8, [x9]
  405c30:	b	405c54 <feof@plt+0x2f54>
  405c34:	mov	x0, xzr
  405c38:	b	405c54 <feof@plt+0x2f54>
  405c3c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405c40:	ldr	w8, [x8, #1860]
  405c44:	add	x9, x19, w8, uxtw #2
  405c48:	add	w8, w8, #0x2
  405c4c:	str	w8, [x19, #12]
  405c50:	ldr	x0, [x9, #32]
  405c54:	ldr	x19, [sp, #16]
  405c58:	ldp	x29, x30, [sp], #32
  405c5c:	ret
  405c60:	stp	x29, x30, [sp, #-80]!
  405c64:	str	x25, [sp, #16]
  405c68:	stp	x24, x23, [sp, #32]
  405c6c:	stp	x22, x21, [sp, #48]
  405c70:	stp	x20, x19, [sp, #64]
  405c74:	mov	x29, sp
  405c78:	mov	x21, x0
  405c7c:	bl	4026d0 <strlen@plt>
  405c80:	add	x0, x0, #0x1
  405c84:	bl	402b60 <malloc@plt>
  405c88:	ldrb	w8, [x21]
  405c8c:	mov	x19, x0
  405c90:	mov	x20, x0
  405c94:	cbz	w8, 405d2c <feof@plt+0x302c>
  405c98:	mov	w23, #0x5e                  	// #94
  405c9c:	mov	w24, #0x23                  	// #35
  405ca0:	mov	x20, x19
  405ca4:	add	x25, x21, #0x1
  405ca8:	mov	w9, w8
  405cac:	ands	w9, w9, #0xff
  405cb0:	b.eq	405cc8 <feof@plt+0x2fc8>  // b.none
  405cb4:	cmp	w9, #0x2f
  405cb8:	b.eq	405cc8 <feof@plt+0x2fc8>  // b.none
  405cbc:	ldrb	w9, [x25], #1
  405cc0:	ands	w9, w9, #0xff
  405cc4:	b.ne	405cb4 <feof@plt+0x2fb4>  // b.any
  405cc8:	mvn	x9, x21
  405ccc:	and	w8, w8, #0xff
  405cd0:	cmp	w8, #0x2e
  405cd4:	add	x22, x9, x25
  405cd8:	b.ne	405d00 <feof@plt+0x3000>  // b.any
  405cdc:	cmp	x22, #0x2
  405ce0:	b.ne	405d00 <feof@plt+0x3000>  // b.any
  405ce4:	ldrb	w8, [x21, #1]
  405ce8:	cmp	w8, #0x2e
  405cec:	b.ne	405d00 <feof@plt+0x3000>  // b.any
  405cf0:	strb	w23, [x20], #1
  405cf4:	ldurb	w8, [x25, #-1]
  405cf8:	cbnz	w8, 405d1c <feof@plt+0x301c>
  405cfc:	b	405d2c <feof@plt+0x302c>
  405d00:	mov	x0, x20
  405d04:	mov	x1, x21
  405d08:	mov	x2, x22
  405d0c:	bl	402640 <memcpy@plt>
  405d10:	add	x20, x20, x22
  405d14:	ldurb	w8, [x25, #-1]
  405d18:	cbz	w8, 405d2c <feof@plt+0x302c>
  405d1c:	strb	w24, [x20], #1
  405d20:	ldrb	w8, [x25]
  405d24:	mov	x21, x25
  405d28:	cbnz	w8, 405ca4 <feof@plt+0x2fa4>
  405d2c:	strb	wzr, [x20]
  405d30:	mov	x0, x19
  405d34:	ldp	x20, x19, [sp, #64]
  405d38:	ldp	x22, x21, [sp, #48]
  405d3c:	ldp	x24, x23, [sp, #32]
  405d40:	ldr	x25, [sp, #16]
  405d44:	ldp	x29, x30, [sp], #80
  405d48:	ret
  405d4c:	stp	x29, x30, [sp, #-32]!
  405d50:	stp	x20, x19, [sp, #16]
  405d54:	mov	x29, sp
  405d58:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405d5c:	add	x8, x8, #0x744
  405d60:	ldr	w9, [x8, #16]
  405d64:	cmp	w9, #0x1
  405d68:	b.lt	405e6c <feof@plt+0x316c>  // b.tstop
  405d6c:	ldr	w9, [x8]
  405d70:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405d74:	ldr	w8, [x8, #1864]
  405d78:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405d7c:	add	x19, x19, #0x738
  405d80:	cmp	w8, w9
  405d84:	b.ne	405dc8 <feof@plt+0x30c8>  // b.any
  405d88:	ldr	w8, [x19, #8]
  405d8c:	ldr	x3, [x19]
  405d90:	add	x0, x19, #0x20
  405d94:	mov	w1, #0x1                   	// #1
  405d98:	add	w8, w8, w9
  405d9c:	mov	w2, #0x1000                	// #4096
  405da0:	stp	w8, wzr, [x19, #8]
  405da4:	str	wzr, [x19, #16]
  405da8:	bl	402650 <fread@plt>
  405dac:	ldr	w8, [x19, #16]
  405db0:	lsr	x9, x0, #2
  405db4:	adds	w8, w8, w9
  405db8:	str	w8, [x19, #16]
  405dbc:	b.eq	405e7c <feof@plt+0x317c>  // b.none
  405dc0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405dc4:	ldr	w9, [x9, #1860]
  405dc8:	add	x10, x19, w9, uxtw #2
  405dcc:	add	w9, w9, #0x1
  405dd0:	str	w9, [x19, #12]
  405dd4:	ldr	w20, [x10, #32]
  405dd8:	cbz	w20, 405e6c <feof@plt+0x316c>
  405ddc:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405de0:	ldr	w10, [x10, #1876]
  405de4:	cmp	w10, #0x1
  405de8:	b.lt	405e6c <feof@plt+0x316c>  // b.tstop
  405dec:	sub	w8, w8, w9
  405df0:	cmp	w8, w20
  405df4:	b.cs	405ea0 <feof@plt+0x31a0>  // b.hs, b.nlast
  405df8:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405dfc:	ldr	w11, [x10, #1856]
  405e00:	add	w11, w11, w9
  405e04:	str	w11, [x10, #1856]
  405e08:	cbz	w8, 405e1c <feof@plt+0x311c>
  405e0c:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405e10:	add	x10, x10, #0x758
  405e14:	ldr	w9, [x10, w9, uxtw #2]
  405e18:	str	w9, [x10]
  405e1c:	ldr	x3, [x19]
  405e20:	stp	wzr, w8, [x19, #12]
  405e24:	add	x8, x19, w8, uxtw #2
  405e28:	add	x0, x8, #0x20
  405e2c:	mov	w1, #0x1                   	// #1
  405e30:	mov	w2, #0x1000                	// #4096
  405e34:	bl	402650 <fread@plt>
  405e38:	ldr	w8, [x19, #16]
  405e3c:	lsr	x9, x0, #2
  405e40:	add	w9, w8, w9
  405e44:	subs	w8, w20, w9
  405e48:	str	w9, [x19, #16]
  405e4c:	b.ls	405e98 <feof@plt+0x3198>  // b.plast
  405e50:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405e54:	add	x9, x9, #0x748
  405e58:	ldr	w10, [x9, #4]
  405e5c:	mov	x0, xzr
  405e60:	add	w8, w8, w10
  405e64:	stp	wzr, w8, [x9]
  405e68:	b	405e70 <feof@plt+0x3170>
  405e6c:	mov	x0, xzr
  405e70:	ldp	x20, x19, [sp, #16]
  405e74:	ldp	x29, x30, [sp], #32
  405e78:	ret
  405e7c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405e80:	add	x8, x8, #0x748
  405e84:	ldr	w9, [x8, #4]
  405e88:	mov	x0, xzr
  405e8c:	add	w9, w9, #0x1
  405e90:	stp	wzr, w9, [x8]
  405e94:	b	405e70 <feof@plt+0x3170>
  405e98:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405e9c:	ldr	w9, [x8, #1860]
  405ea0:	add	x8, x19, w9, uxtw #2
  405ea4:	add	w9, w9, w20
  405ea8:	add	x0, x8, #0x20
  405eac:	str	w9, [x19, #12]
  405eb0:	b	405e70 <feof@plt+0x3170>
  405eb4:	stp	x29, x30, [sp, #-48]!
  405eb8:	stp	x22, x21, [sp, #16]
  405ebc:	stp	x20, x19, [sp, #32]
  405ec0:	mov	x29, sp
  405ec4:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405ec8:	add	x21, x21, #0x744
  405ecc:	ldr	w8, [x21, #16]
  405ed0:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405ed4:	mov	x19, x0
  405ed8:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405edc:	cmp	w8, #0x1
  405ee0:	add	x20, x20, #0x738
  405ee4:	b.lt	405f4c <feof@plt+0x324c>  // b.tstop
  405ee8:	ldr	w8, [x21]
  405eec:	ldr	w9, [x22, #1864]
  405ef0:	cmp	w9, w8
  405ef4:	b.ne	405f38 <feof@plt+0x3238>  // b.any
  405ef8:	ldr	w9, [x20, #8]
  405efc:	ldr	x3, [x20]
  405f00:	add	x0, x20, #0x20
  405f04:	mov	w1, #0x1                   	// #1
  405f08:	add	w8, w9, w8
  405f0c:	mov	w2, #0x1000                	// #4096
  405f10:	stp	w8, wzr, [x20, #8]
  405f14:	str	wzr, [x20, #16]
  405f18:	bl	402650 <fread@plt>
  405f1c:	ldr	w8, [x20, #16]
  405f20:	lsr	x9, x0, #2
  405f24:	adds	w8, w8, w9
  405f28:	str	w8, [x20, #16]
  405f2c:	b.eq	405f54 <feof@plt+0x3254>  // b.none
  405f30:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405f34:	ldr	w8, [x8, #1860]
  405f38:	add	x9, x20, w8, uxtw #2
  405f3c:	add	w8, w8, #0x1
  405f40:	str	w8, [x20, #12]
  405f44:	ldr	w8, [x9, #32]
  405f48:	b	405f68 <feof@plt+0x3268>
  405f4c:	mov	w8, wzr
  405f50:	b	405f68 <feof@plt+0x3268>
  405f54:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405f58:	add	x9, x9, #0x748
  405f5c:	ldr	w10, [x9, #4]
  405f60:	add	w10, w10, #0x1
  405f64:	stp	wzr, w10, [x9]
  405f68:	str	w8, [x19]
  405f6c:	ldr	w8, [x21, #16]
  405f70:	cmp	w8, #0x1
  405f74:	b.lt	405fdc <feof@plt+0x32dc>  // b.tstop
  405f78:	ldr	w8, [x21]
  405f7c:	ldr	w9, [x22, #1864]
  405f80:	cmp	w9, w8
  405f84:	b.ne	405fc8 <feof@plt+0x32c8>  // b.any
  405f88:	ldr	w9, [x20, #8]
  405f8c:	ldr	x3, [x20]
  405f90:	add	x0, x20, #0x20
  405f94:	mov	w1, #0x1                   	// #1
  405f98:	add	w8, w9, w8
  405f9c:	mov	w2, #0x1000                	// #4096
  405fa0:	stp	w8, wzr, [x20, #8]
  405fa4:	str	wzr, [x20, #16]
  405fa8:	bl	402650 <fread@plt>
  405fac:	ldr	w8, [x20, #16]
  405fb0:	lsr	x9, x0, #2
  405fb4:	adds	w8, w8, w9
  405fb8:	str	w8, [x20, #16]
  405fbc:	b.eq	405fe4 <feof@plt+0x32e4>  // b.none
  405fc0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405fc4:	ldr	w8, [x8, #1860]
  405fc8:	add	x9, x20, w8, uxtw #2
  405fcc:	add	w8, w8, #0x1
  405fd0:	str	w8, [x20, #12]
  405fd4:	ldr	w8, [x9, #32]
  405fd8:	b	405ffc <feof@plt+0x32fc>
  405fdc:	mov	x8, xzr
  405fe0:	b	405ffc <feof@plt+0x32fc>
  405fe4:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  405fe8:	add	x9, x9, #0x748
  405fec:	ldr	w10, [x9, #4]
  405ff0:	mov	x8, xzr
  405ff4:	add	w10, w10, #0x1
  405ff8:	stp	wzr, w10, [x9]
  405ffc:	str	x8, [x19, #8]
  406000:	ldp	x20, x19, [sp, #32]
  406004:	ldp	x22, x21, [sp, #16]
  406008:	ldp	x29, x30, [sp], #48
  40600c:	ret
  406010:	stp	x29, x30, [sp, #-32]!
  406014:	str	x19, [sp, #16]
  406018:	mov	x29, sp
  40601c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406020:	add	x8, x8, #0x740
  406024:	ldr	w9, [x8]
  406028:	ldr	w10, [x8, #8]
  40602c:	add	w8, w1, w0
  406030:	sub	w9, w8, w9
  406034:	cmp	w9, w10
  406038:	b.ls	40606c <feof@plt+0x336c>  // b.plast
  40603c:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406040:	add	x19, x19, #0x738
  406044:	ldr	x0, [x19]
  406048:	lsl	w1, w8, #2
  40604c:	mov	w2, wzr
  406050:	stp	wzr, wzr, [x19, #12]
  406054:	bl	402cd0 <fseek@plt>
  406058:	ldr	x0, [x19]
  40605c:	bl	402700 <ftell@plt>
  406060:	lsr	x8, x0, #2
  406064:	str	w8, [x19, #8]
  406068:	b	406074 <feof@plt+0x3374>
  40606c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406070:	str	w9, [x8, #1860]
  406074:	ldr	x19, [sp, #16]
  406078:	ldp	x29, x30, [sp], #32
  40607c:	ret
  406080:	stp	x29, x30, [sp, #-48]!
  406084:	stp	x22, x21, [sp, #16]
  406088:	stp	x20, x19, [sp, #32]
  40608c:	mov	x29, sp
  406090:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406094:	ldr	w21, [x8, #1860]
  406098:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40609c:	mov	w19, w0
  4060a0:	add	x20, x20, #0x738
  4060a4:	cbz	w21, 4060e8 <feof@plt+0x33e8>
  4060a8:	mov	x0, x20
  4060ac:	ldr	x3, [x0], #32
  4060b0:	lsl	w1, w21, #2
  4060b4:	mov	w2, #0x1                   	// #1
  4060b8:	mov	w22, #0x1                   	// #1
  4060bc:	bl	402bf0 <fwrite@plt>
  4060c0:	cmp	x0, #0x1
  4060c4:	b.eq	4060d0 <feof@plt+0x33d0>  // b.none
  4060c8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4060cc:	str	w22, [x8, #1872]
  4060d0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4060d4:	add	x8, x8, #0x740
  4060d8:	ldp	w9, w10, [x8]
  4060dc:	add	w9, w9, w21
  4060e0:	sub	w10, w10, w21
  4060e4:	stp	w9, w10, [x8]
  4060e8:	ldr	x0, [x20]
  4060ec:	lsl	w1, w19, #2
  4060f0:	mov	w2, wzr
  4060f4:	bl	402cd0 <fseek@plt>
  4060f8:	ldr	x0, [x20]
  4060fc:	bl	402700 <ftell@plt>
  406100:	lsr	x8, x0, #2
  406104:	str	w8, [x20, #8]
  406108:	ldp	x20, x19, [sp, #32]
  40610c:	ldp	x22, x21, [sp, #16]
  406110:	ldp	x29, x30, [sp], #48
  406114:	ret
  406118:	cmp	w1, #0x3
  40611c:	b.lt	40619c <feof@plt+0x349c>  // b.tstop
  406120:	mov	w8, w1
  406124:	add	x9, x0, #0x8
  406128:	mov	w10, #0x2                   	// #2
  40612c:	b	40614c <feof@plt+0x344c>
  406130:	sbfiz	x13, x13, #3, #32
  406134:	add	x10, x10, #0x2
  406138:	str	x11, [x0, x13]
  40613c:	orr	x11, x13, #0x8
  406140:	cmp	x10, x8
  406144:	str	x12, [x0, x11]
  406148:	b.cs	40619c <feof@plt+0x349c>  // b.hs, b.nlast
  40614c:	lsl	x12, x10, #3
  406150:	ldr	x11, [x0, x12]
  406154:	orr	x12, x12, #0x8
  406158:	ldr	x12, [x0, x12]
  40615c:	add	x14, x9, w10, sxtw #3
  406160:	mov	w13, w10
  406164:	sub	w15, w13, #0x1
  406168:	ldr	x15, [x0, w15, sxtw #3]
  40616c:	cmp	x15, x12
  406170:	b.ge	406130 <feof@plt+0x3430>  // b.tcont
  406174:	sub	w16, w13, #0x2
  406178:	ldr	x17, [x0, w16, sxtw #3]
  40617c:	add	w18, w16, #0x2
  406180:	cmp	w18, #0x3
  406184:	str	x17, [x0, w13, uxtw #3]
  406188:	str	x15, [x14], #-16
  40618c:	mov	w13, w16
  406190:	b.gt	406164 <feof@plt+0x3464>
  406194:	mov	w13, wzr
  406198:	b	406130 <feof@plt+0x3430>
  40619c:	ret
  4061a0:	sub	sp, sp, #0x1d0
  4061a4:	str	d8, [sp, #352]
  4061a8:	stp	x29, x30, [sp, #368]
  4061ac:	stp	x28, x27, [sp, #384]
  4061b0:	stp	x26, x25, [sp, #400]
  4061b4:	stp	x24, x23, [sp, #416]
  4061b8:	stp	x22, x21, [sp, #432]
  4061bc:	stp	x20, x19, [sp, #448]
  4061c0:	add	x29, sp, #0x160
  4061c4:	mov	x28, x0
  4061c8:	mov	x21, xzr
  4061cc:	str	w1, [sp, #32]
  4061d0:	cbz	x0, 40629c <feof@plt+0x359c>
  4061d4:	mov	x8, x28
  4061d8:	b	4061e4 <feof@plt+0x34e4>
  4061dc:	ldr	x8, [x8, #8]
  4061e0:	cbz	x8, 40629c <feof@plt+0x359c>
  4061e4:	ldr	w9, [x8, #104]
  4061e8:	cbz	w9, 4061dc <feof@plt+0x34dc>
  4061ec:	ldr	x10, [x8, #112]
  4061f0:	mov	x11, xzr
  4061f4:	b	406204 <feof@plt+0x3504>
  4061f8:	add	x11, x11, #0x1
  4061fc:	cmp	w9, w11
  406200:	b.eq	4061dc <feof@plt+0x34dc>  // b.none
  406204:	ldr	x13, [x10, x11, lsl #3]
  406208:	ldr	w12, [x13, #24]
  40620c:	cbz	w12, 4061f8 <feof@plt+0x34f8>
  406210:	ldr	x13, [x13, #32]
  406214:	cmp	w12, #0x3
  406218:	b.hi	406224 <feof@plt+0x3524>  // b.pmore
  40621c:	mov	x14, xzr
  406220:	b	406280 <feof@plt+0x3580>
  406224:	and	x14, x12, #0xfffffffc
  406228:	dup	v0.2d, x21
  40622c:	add	x15, x13, #0x10
  406230:	mov	x16, x14
  406234:	mov	v1.16b, v0.16b
  406238:	ldp	q2, q3, [x15, #-16]
  40623c:	mov	v4.16b, v1.16b
  406240:	mov	v5.16b, v0.16b
  406244:	subs	x16, x16, #0x4
  406248:	cmgt	v0.2d, v2.2d, v0.2d
  40624c:	cmgt	v1.2d, v3.2d, v1.2d
  406250:	bsl	v0.16b, v2.16b, v5.16b
  406254:	bsl	v1.16b, v3.16b, v4.16b
  406258:	add	x15, x15, #0x20
  40625c:	b.ne	406238 <feof@plt+0x3538>  // b.any
  406260:	cmgt	v2.2d, v0.2d, v1.2d
  406264:	bsl	v2.16b, v0.16b, v1.16b
  406268:	dup	v0.2d, v2.d[1]
  40626c:	cmgt	v1.2d, v2.2d, v0.2d
  406270:	bsl	v1.16b, v2.16b, v0.16b
  406274:	cmp	x14, x12
  406278:	fmov	x21, d1
  40627c:	b.eq	4061f8 <feof@plt+0x34f8>  // b.none
  406280:	ldr	x15, [x13, x14, lsl #3]
  406284:	add	x14, x14, #0x1
  406288:	cmp	x21, x15
  40628c:	csel	x21, x15, x21, lt  // lt = tstop
  406290:	cmp	x14, x12
  406294:	b.cc	406280 <feof@plt+0x3580>  // b.lo, b.ul, b.last
  406298:	b	4061f8 <feof@plt+0x34f8>
  40629c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4062a0:	add	x0, x0, #0x99c
  4062a4:	bl	402b90 <getenv@plt>
  4062a8:	cbz	x0, 4062c4 <feof@plt+0x35c4>
  4062ac:	mov	w2, #0xa                   	// #10
  4062b0:	mov	x1, xzr
  4062b4:	bl	402750 <strtol@plt>
  4062b8:	bic	w8, w0, w0, asr #31
  4062bc:	str	w8, [sp, #36]
  4062c0:	b	4062c8 <feof@plt+0x35c8>
  4062c4:	str	wzr, [sp, #36]
  4062c8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4062cc:	add	x0, x0, #0x9ae
  4062d0:	bl	402b90 <getenv@plt>
  4062d4:	cbz	x0, 406300 <feof@plt+0x3600>
  4062d8:	mov	x22, x0
  4062dc:	bl	4026d0 <strlen@plt>
  4062e0:	cbz	x0, 406300 <feof@plt+0x3600>
  4062e4:	sub	x8, x0, #0x1
  4062e8:	ldrb	w9, [x22, x8]
  4062ec:	mov	x23, x0
  4062f0:	cmp	w9, #0x2f
  4062f4:	b.ne	406314 <feof@plt+0x3614>  // b.any
  4062f8:	mov	x23, x8
  4062fc:	cbnz	x8, 406314 <feof@plt+0x3614>
  406300:	ldr	w8, [sp, #36]
  406304:	cbz	w8, 40633c <feof@plt+0x363c>
  406308:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x10dd8>
  40630c:	add	x22, x22, #0xb2d
  406310:	mov	w23, #0x1                   	// #1
  406314:	add	x0, x23, #0x1
  406318:	bl	402b60 <malloc@plt>
  40631c:	mov	x1, x22
  406320:	mov	x2, x23
  406324:	mov	x19, x0
  406328:	bl	402640 <memcpy@plt>
  40632c:	mov	x0, x19
  406330:	strb	wzr, [x19, x23]
  406334:	cbnz	x28, 406344 <feof@plt+0x3644>
  406338:	b	408088 <feof@plt+0x5388>
  40633c:	mov	x0, xzr
  406340:	cbz	x28, 408088 <feof@plt+0x5388>
  406344:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  406348:	ldr	d8, [x8, #2448]
  40634c:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406350:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406354:	adrp	x25, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406358:	mov	w2, #0x8e39                	// #36409
  40635c:	mov	w3, #0xe38e                	// #58254
  406360:	mov	w4, #0xc71d                	// #50973
  406364:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  406368:	add	x22, x22, #0x738
  40636c:	add	x23, x23, #0x740
  406370:	add	x25, x25, #0x758
  406374:	movk	w2, #0x38e3, lsl #16
  406378:	movk	w3, #0xe38, lsl #16
  40637c:	movk	w4, #0x1c71, lsl #16
  406380:	str	x0, [sp, #40]
  406384:	b	4063e0 <feof@plt+0x36e0>
  406388:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  40638c:	add	x0, x0, #0xab1
  406390:	mov	x1, x24
  406394:	bl	4080fc <feof@plt+0x53fc>
  406398:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40639c:	ldr	x0, [x8, #1416]
  4063a0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4063a4:	add	x1, x1, #0xa84
  4063a8:	strb	w20, [x19]
  4063ac:	mov	x2, x24
  4063b0:	bl	4026f0 <fprintf@plt>
  4063b4:	mov	x0, x24
  4063b8:	bl	402770 <free@plt>
  4063bc:	ldr	x28, [x28, #8]
  4063c0:	ldr	x0, [sp, #40]
  4063c4:	mov	w2, #0x8e39                	// #36409
  4063c8:	mov	w3, #0xe38e                	// #58254
  4063cc:	mov	w4, #0xc71d                	// #50973
  4063d0:	movk	w2, #0x38e3, lsl #16
  4063d4:	movk	w3, #0xe38, lsl #16
  4063d8:	movk	w4, #0x1c71, lsl #16
  4063dc:	cbz	x28, 408088 <feof@plt+0x5388>
  4063e0:	stp	xzr, xzr, [sp, #72]
  4063e4:	str	xzr, [x27, #1888]
  4063e8:	ldr	x9, [x28, #96]
  4063ec:	cbz	x9, 4065e8 <feof@plt+0x38e8>
  4063f0:	ldr	w10, [x28, #104]
  4063f4:	cbz	w10, 4065e8 <feof@plt+0x38e8>
  4063f8:	mov	x8, xzr
  4063fc:	ldr	x11, [x28, #112]
  406400:	ldp	x12, x13, [x28, #32]
  406404:	ldr	x11, [x11, x8, lsl #3]
  406408:	cmp	x12, #0x0
  40640c:	add	x12, x11, #0x18
  406410:	add	x11, x11, #0x28
  406414:	csel	x11, x12, x11, eq  // eq = none
  406418:	cmp	x13, #0x0
  40641c:	add	x13, x11, #0x10
  406420:	csel	x11, x11, x13, eq  // eq = none
  406424:	ldp	x12, x13, [x28, #48]
  406428:	cmp	x12, #0x0
  40642c:	add	x12, x11, #0x10
  406430:	csel	x11, x11, x12, eq  // eq = none
  406434:	cmp	x13, #0x0
  406438:	add	x13, x11, #0x10
  40643c:	csel	x11, x11, x13, eq  // eq = none
  406440:	ldp	x12, x13, [x28, #64]
  406444:	cmp	x12, #0x0
  406448:	add	x12, x11, #0x10
  40644c:	csel	x11, x11, x12, eq  // eq = none
  406450:	cmp	x13, #0x0
  406454:	add	x13, x11, #0x10
  406458:	csel	x11, x11, x13, eq  // eq = none
  40645c:	ldp	x12, x13, [x28, #80]
  406460:	cmp	x12, #0x0
  406464:	add	x12, x11, #0x10
  406468:	csel	x11, x11, x12, eq  // eq = none
  40646c:	add	x12, x11, #0x10
  406470:	cmp	x13, #0x0
  406474:	csel	x11, x11, x12, eq  // eq = none
  406478:	cbz	x9, 4065d4 <feof@plt+0x38d4>
  40647c:	ldr	w9, [x11]
  406480:	madd	w12, w9, w2, w3
  406484:	cmp	w12, w4
  406488:	b.cs	4080b0 <feof@plt+0x53b0>  // b.hs, b.nlast
  40648c:	cmp	w9, #0x1
  406490:	b.lt	4065d4 <feof@plt+0x38d4>  // b.tstop
  406494:	ldr	x11, [x11, #8]
  406498:	mov	x10, xzr
  40649c:	mov	w12, #0x40                  	// #64
  4064a0:	b	4064d4 <feof@plt+0x37d4>
  4064a4:	mov	w17, #0x6                   	// #6
  4064a8:	add	x14, x11, w17, uxtw #3
  4064ac:	orr	w17, w17, #0x1
  4064b0:	add	x10, x10, #0x9
  4064b4:	add	x17, x11, w17, uxtw #3
  4064b8:	add	x14, x14, x13
  4064bc:	cmp	x10, x9
  4064c0:	add	x13, x17, x13
  4064c4:	add	x12, x12, #0x48
  4064c8:	str	x16, [x14, #8]
  4064cc:	str	x15, [x13, #8]
  4064d0:	b.cs	4065d0 <feof@plt+0x38d0>  // b.hs, b.nlast
  4064d4:	add	x14, x11, x12
  4064d8:	ldp	x16, x15, [x14, #-40]
  4064dc:	ldur	x13, [x14, #-48]
  4064e0:	cmp	x13, x15
  4064e4:	b.ge	4064f8 <feof@plt+0x37f8>  // b.tcont
  4064e8:	ldur	x18, [x14, #-56]
  4064ec:	mov	w17, wzr
  4064f0:	stp	x18, x13, [x14, #-40]
  4064f4:	b	4064fc <feof@plt+0x37fc>
  4064f8:	mov	w17, #0x2                   	// #2
  4064fc:	add	x18, x11, w17, uxtw #3
  406500:	lsl	x13, x10, #3
  406504:	orr	w17, w17, #0x1
  406508:	add	x18, x18, x13
  40650c:	add	x17, x11, w17, uxtw #3
  406510:	str	x16, [x18, #8]
  406514:	add	x16, x17, x13
  406518:	str	x15, [x16, #8]
  40651c:	ldp	x16, x15, [x14, #-24]
  406520:	ldur	x17, [x14, #-32]
  406524:	cmp	x17, x15
  406528:	b.ge	40654c <feof@plt+0x384c>  // b.tcont
  40652c:	ldp	x18, x1, [x14, #-48]
  406530:	cmp	x18, x15
  406534:	stp	x1, x17, [x14, #-24]
  406538:	b.ge	406554 <feof@plt+0x3854>  // b.tcont
  40653c:	ldur	x1, [x14, #-56]
  406540:	mov	w17, wzr
  406544:	stp	x1, x18, [x14, #-40]
  406548:	b	406558 <feof@plt+0x3858>
  40654c:	mov	w17, #0x4                   	// #4
  406550:	b	406558 <feof@plt+0x3858>
  406554:	mov	w17, #0x2                   	// #2
  406558:	add	x18, x11, w17, uxtw #3
  40655c:	orr	w1, w17, #0x1
  406560:	add	x18, x18, x13
  406564:	add	x1, x11, w1, uxtw #3
  406568:	str	x16, [x18, #8]
  40656c:	add	x16, x1, x13
  406570:	add	x17, x11, x12
  406574:	str	x15, [x16, #8]
  406578:	ldp	x16, x15, [x17, #-8]
  40657c:	ldur	x18, [x14, #-16]
  406580:	cmp	x18, x15
  406584:	b.ge	4064a4 <feof@plt+0x37a4>  // b.tcont
  406588:	ldur	x1, [x14, #-24]
  40658c:	stur	x1, [x17, #-8]
  406590:	str	x18, [x11, x12]
  406594:	ldur	x17, [x14, #-32]
  406598:	cmp	x17, x15
  40659c:	b.ge	4065c0 <feof@plt+0x38c0>  // b.tcont
  4065a0:	ldp	x18, x1, [x14, #-48]
  4065a4:	cmp	x18, x15
  4065a8:	stp	x1, x17, [x14, #-24]
  4065ac:	b.ge	4065c8 <feof@plt+0x38c8>  // b.tcont
  4065b0:	ldur	x1, [x14, #-56]
  4065b4:	mov	w17, wzr
  4065b8:	stp	x1, x18, [x14, #-40]
  4065bc:	b	4064a8 <feof@plt+0x37a8>
  4065c0:	mov	w17, #0x4                   	// #4
  4065c4:	b	4064a8 <feof@plt+0x37a8>
  4065c8:	mov	w17, #0x2                   	// #2
  4065cc:	b	4064a8 <feof@plt+0x37a8>
  4065d0:	ldr	w10, [x28, #104]
  4065d4:	add	x8, x8, #0x1
  4065d8:	cmp	x8, w10, uxtw
  4065dc:	b.eq	4065e8 <feof@plt+0x38e8>  // b.none
  4065e0:	ldr	x9, [x28, #96]
  4065e4:	b	4063fc <feof@plt+0x36fc>
  4065e8:	ldr	x26, [x28, #24]
  4065ec:	ldr	w8, [sp, #36]
  4065f0:	mov	w20, #0x2f                  	// #47
  4065f4:	cbz	w8, 406638 <feof@plt+0x3938>
  4065f8:	mov	x8, x26
  4065fc:	ldrb	w9, [x8], #1
  406600:	cmp	w9, #0x2f
  406604:	csel	x9, x26, x8, ne  // ne = any
  406608:	ldrb	w10, [x9]
  40660c:	csel	x8, x8, x26, eq  // eq = none
  406610:	cbz	w10, 406638 <feof@plt+0x3938>
  406614:	ldr	w9, [sp, #36]
  406618:	and	w10, w10, #0xff
  40661c:	cmp	w10, #0x2f
  406620:	csel	x26, x8, x26, eq  // eq = none
  406624:	ldrb	w10, [x8, #1]!
  406628:	cset	w11, eq  // eq = none
  40662c:	subs	w9, w9, w11
  406630:	b.eq	406638 <feof@plt+0x3938>  // b.none
  406634:	cbnz	w10, 406618 <feof@plt+0x3918>
  406638:	cbz	x0, 406654 <feof@plt+0x3954>
  40663c:	ldrb	w8, [x26]
  406640:	cmp	w8, #0x2f
  406644:	cset	w19, ne  // ne = any
  406648:	bl	4026d0 <strlen@plt>
  40664c:	mov	x24, x0
  406650:	b	40665c <feof@plt+0x395c>
  406654:	mov	w19, wzr
  406658:	mov	x24, xzr
  40665c:	mov	x0, x26
  406660:	bl	4026d0 <strlen@plt>
  406664:	add	x8, x24, x0
  406668:	add	x0, x8, #0x2
  40666c:	bl	402b60 <malloc@plt>
  406670:	strb	wzr, [x0]
  406674:	cbz	x24, 406680 <feof@plt+0x3980>
  406678:	ldr	x1, [sp, #40]
  40667c:	bl	402cc0 <strcat@plt>
  406680:	mov	x24, x0
  406684:	cbz	w19, 40668c <feof@plt+0x398c>
  406688:	strb	w20, [x24], #1
  40668c:	mov	x0, x24
  406690:	mov	x1, x26
  406694:	str	x28, [sp, #64]
  406698:	bl	402cc0 <strcat@plt>
  40669c:	ldrb	w19, [x24]
  4066a0:	strb	wzr, [sp, #88]
  4066a4:	cbz	w19, 4067ec <feof@plt+0x3aec>
  4066a8:	mov	x26, x24
  4066ac:	b	406748 <feof@plt+0x3a48>
  4066b0:	mov	x20, xzr
  4066b4:	mov	x24, x19
  4066b8:	sub	x8, x24, x27
  4066bc:	add	x28, x8, x28
  4066c0:	mov	x0, x20
  4066c4:	sub	x19, x26, x19
  4066c8:	str	x28, [sp, #56]
  4066cc:	bl	4026d0 <strlen@plt>
  4066d0:	mov	x26, x0
  4066d4:	add	w8, w19, w26
  4066d8:	add	w8, w8, w28
  4066dc:	add	w0, w8, #0x1
  4066e0:	bl	402b60 <malloc@plt>
  4066e4:	and	x19, x19, #0xffffffff
  4066e8:	mov	x1, x24
  4066ec:	mov	x2, x19
  4066f0:	mov	x28, x0
  4066f4:	bl	402640 <memcpy@plt>
  4066f8:	add	x19, x28, x19
  4066fc:	and	x26, x26, #0xffffffff
  406700:	mov	x0, x19
  406704:	mov	x1, x20
  406708:	mov	x2, x26
  40670c:	bl	402640 <memcpy@plt>
  406710:	ldr	x8, [sp, #56]
  406714:	add	x26, x19, x26
  406718:	mov	x0, x26
  40671c:	mov	x1, x27
  406720:	and	x19, x8, #0xffffffff
  406724:	mov	x2, x19
  406728:	bl	402640 <memcpy@plt>
  40672c:	mov	x0, x24
  406730:	strb	wzr, [x26, x19]
  406734:	bl	402770 <free@plt>
  406738:	mov	x24, x28
  40673c:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  406740:	ldrb	w19, [x26, #1]!
  406744:	cbz	w19, 4067ec <feof@plt+0x3aec>
  406748:	mov	x0, x24
  40674c:	bl	4026d0 <strlen@plt>
  406750:	and	w8, w19, #0xff
  406754:	cmp	w8, #0x25
  406758:	b.ne	406740 <feof@plt+0x3a40>  // b.any
  40675c:	mov	x27, x26
  406760:	ldrb	w8, [x27, #1]!
  406764:	cbz	w8, 40673c <feof@plt+0x3a3c>
  406768:	mov	x28, x0
  40676c:	cmp	w8, #0x71
  406770:	b.eq	4067a4 <feof@plt+0x3aa4>  // b.none
  406774:	cmp	w8, #0x70
  406778:	b.ne	4067e8 <feof@plt+0x3ae8>  // b.any
  40677c:	mov	x19, x24
  406780:	sub	x20, x29, #0x88
  406784:	bl	402930 <getpid@plt>
  406788:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40678c:	mov	w2, w0
  406790:	sub	x0, x29, #0x88
  406794:	add	x1, x1, #0xdb1
  406798:	bl	402880 <sprintf@plt>
  40679c:	add	x27, x26, #0x2
  4067a0:	b	4066b4 <feof@plt+0x39b4>
  4067a4:	ldrb	w8, [x26, #2]
  4067a8:	mov	x19, x24
  4067ac:	cmp	w8, #0x7b
  4067b0:	b.ne	4066b0 <feof@plt+0x39b0>  // b.any
  4067b4:	add	x24, x26, #0x3
  4067b8:	mov	w1, #0x7d                  	// #125
  4067bc:	mov	x0, x24
  4067c0:	bl	4027b0 <strchr@plt>
  4067c4:	cbz	x0, 407188 <feof@plt+0x4488>
  4067c8:	mov	x27, x0
  4067cc:	mov	x0, x24
  4067d0:	strb	wzr, [x27], #1
  4067d4:	bl	402b90 <getenv@plt>
  4067d8:	cmp	x0, #0x0
  4067dc:	add	x8, sp, #0x58
  4067e0:	csel	x20, x8, x0, eq  // eq = none
  4067e4:	b	4066b4 <feof@plt+0x39b4>
  4067e8:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4067ec:	mov	x0, x24
  4067f0:	bl	4055e4 <feof@plt+0x28e4>
  4067f4:	ldr	x28, [sp, #64]
  4067f8:	mov	w20, #0x2f                  	// #47
  4067fc:	cbnz	w0, 406878 <feof@plt+0x3b78>
  406800:	mov	x8, x24
  406804:	ldrb	w9, [x8], #1
  406808:	cmp	w9, #0x2f
  40680c:	csel	x19, x8, x24, eq  // eq = none
  406810:	b	40681c <feof@plt+0x3b1c>
  406814:	cbz	w8, 40686c <feof@plt+0x3b6c>
  406818:	add	x19, x19, #0x1
  40681c:	ldrb	w8, [x19]
  406820:	cmp	w8, #0x2f
  406824:	b.ne	406814 <feof@plt+0x3b14>  // b.any
  406828:	mov	x0, x24
  40682c:	mov	w1, wzr
  406830:	strb	wzr, [x19]
  406834:	bl	402820 <access@plt>
  406838:	cmn	w0, #0x1
  40683c:	b.ne	406864 <feof@plt+0x3b64>  // b.any
  406840:	mov	w1, #0x1ed                 	// #493
  406844:	mov	x0, x24
  406848:	bl	402ae0 <mkdir@plt>
  40684c:	cmn	w0, #0x1
  406850:	b.ne	406864 <feof@plt+0x3b64>  // b.any
  406854:	bl	402ac0 <__errno_location@plt>
  406858:	ldr	w8, [x0]
  40685c:	cmp	w8, #0x11
  406860:	b.ne	406388 <feof@plt+0x3688>  // b.any
  406864:	strb	w20, [x19]
  406868:	b	406818 <feof@plt+0x3b18>
  40686c:	mov	x0, x24
  406870:	bl	4055e4 <feof@plt+0x28e4>
  406874:	cbz	w0, 407194 <feof@plt+0x4494>
  406878:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40687c:	add	x11, x11, #0x744
  406880:	ldr	w8, [x11, #16]
  406884:	str	x24, [sp, #48]
  406888:	cmp	w8, #0x1
  40688c:	b.lt	406a2c <feof@plt+0x3d2c>  // b.tstop
  406890:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406894:	ldr	w9, [x11]
  406898:	ldr	w8, [x8, #1864]
  40689c:	cmp	w8, w9
  4068a0:	b.ne	4068ec <feof@plt+0x3bec>  // b.any
  4068a4:	ldr	w8, [x22, #8]
  4068a8:	ldr	x3, [x22]
  4068ac:	add	x0, x22, #0x20
  4068b0:	mov	w1, #0x1                   	// #1
  4068b4:	add	w8, w8, w9
  4068b8:	mov	w2, #0x1000                	// #4096
  4068bc:	stp	w8, wzr, [x22, #8]
  4068c0:	str	wzr, [x22, #16]
  4068c4:	bl	402650 <fread@plt>
  4068c8:	ldr	w8, [x22, #16]
  4068cc:	lsr	x9, x0, #2
  4068d0:	adds	w8, w8, w9
  4068d4:	str	w8, [x22, #16]
  4068d8:	b.eq	406a18 <feof@plt+0x3d18>  // b.none
  4068dc:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4068e0:	ldr	w9, [x9, #1860]
  4068e4:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4068e8:	add	x11, x11, #0x744
  4068ec:	add	x10, x22, w9, uxtw #2
  4068f0:	add	w9, w9, #0x1
  4068f4:	str	w9, [x22, #12]
  4068f8:	ldr	w10, [x10, #32]
  4068fc:	cbz	w10, 406a2c <feof@plt+0x3d2c>
  406900:	mov	w12, #0x6461                	// #25697
  406904:	movk	w12, #0x6763, lsl #16
  406908:	cmp	w10, w12
  40690c:	b.ne	406a04 <feof@plt+0x3d04>  // b.any
  406910:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406914:	ldr	w10, [x10, #1876]
  406918:	cmp	w10, #0x1
  40691c:	b.lt	407180 <feof@plt+0x4480>  // b.tstop
  406920:	cmp	w8, w9
  406924:	b.ne	406970 <feof@plt+0x3c70>  // b.any
  406928:	ldr	w9, [x22, #8]
  40692c:	ldr	x3, [x22]
  406930:	add	x0, x22, #0x20
  406934:	mov	w1, #0x1                   	// #1
  406938:	add	w8, w9, w8
  40693c:	mov	w2, #0x1000                	// #4096
  406940:	stp	w8, wzr, [x22, #8]
  406944:	str	wzr, [x22, #16]
  406948:	bl	402650 <fread@plt>
  40694c:	ldr	w8, [x22, #16]
  406950:	lsr	x9, x0, #2
  406954:	adds	w8, w8, w9
  406958:	str	w8, [x22, #16]
  40695c:	b.eq	4071a8 <feof@plt+0x44a8>  // b.none
  406960:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406964:	ldr	w9, [x9, #1860]
  406968:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40696c:	add	x11, x11, #0x744
  406970:	add	x10, x22, w9, uxtw #2
  406974:	add	w9, w9, #0x1
  406978:	str	w9, [x22, #12]
  40697c:	ldr	w19, [x10, #32]
  406980:	mov	w10, #0x322a                	// #12842
  406984:	movk	w10, #0x4139, lsl #16
  406988:	cmp	w19, w10
  40698c:	b.ne	4071c0 <feof@plt+0x44c0>  // b.any
  406990:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406994:	ldr	w10, [x10, #1876]
  406998:	cmp	w10, #0x1
  40699c:	b.lt	4072c0 <feof@plt+0x45c0>  // b.tstop
  4069a0:	cmp	w8, w9
  4069a4:	b.ne	4069f0 <feof@plt+0x3cf0>  // b.any
  4069a8:	ldr	w9, [x22, #8]
  4069ac:	ldr	x3, [x22]
  4069b0:	add	x0, x22, #0x20
  4069b4:	mov	w1, #0x1                   	// #1
  4069b8:	add	w8, w9, w8
  4069bc:	mov	w2, #0x1000                	// #4096
  4069c0:	stp	w8, wzr, [x22, #8]
  4069c4:	str	wzr, [x22, #16]
  4069c8:	bl	402650 <fread@plt>
  4069cc:	ldr	w8, [x22, #16]
  4069d0:	lsr	x9, x0, #2
  4069d4:	adds	w8, w8, w9
  4069d8:	str	w8, [x22, #16]
  4069dc:	b.eq	4072c8 <feof@plt+0x45c8>  // b.none
  4069e0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4069e4:	ldr	w9, [x9, #1860]
  4069e8:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4069ec:	add	x11, x11, #0x744
  4069f0:	add	x10, x22, w9, uxtw #2
  4069f4:	add	w9, w9, #0x1
  4069f8:	str	w9, [x22, #12]
  4069fc:	ldr	w9, [x10, #32]
  406a00:	b	4072e8 <feof@plt+0x45e8>
  406a04:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  406a08:	add	x0, x0, #0x9ba
  406a0c:	mov	x1, x24
  406a10:	bl	4080fc <feof@plt+0x53fc>
  406a14:	b	406fcc <feof@plt+0x42cc>
  406a18:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406a1c:	add	x9, x9, #0x748
  406a20:	ldr	w8, [x9, #4]
  406a24:	add	w8, w8, #0x1
  406a28:	stp	wzr, w8, [x9]
  406a2c:	ldr	x0, [x22]
  406a30:	mov	w8, #0xffffffff            	// #-1
  406a34:	mov	x1, xzr
  406a38:	mov	w2, wzr
  406a3c:	str	w8, [x22, #28]
  406a40:	str	xzr, [x22, #8]
  406a44:	bl	402cd0 <fseek@plt>
  406a48:	ldr	w8, [sp, #32]
  406a4c:	cbnz	w8, 406a68 <feof@plt+0x3d68>
  406a50:	ldr	w8, [sp, #72]
  406a54:	ldr	x9, [sp, #80]
  406a58:	add	w8, w8, #0x1
  406a5c:	add	x9, x9, x21
  406a60:	str	w8, [sp, #72]
  406a64:	str	x9, [sp, #80]
  406a68:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406a6c:	ldr	w8, [x8, #1860]
  406a70:	cmp	w8, #0x400
  406a74:	b.cc	406abc <feof@plt+0x3dbc>  // b.lo, b.ul, b.last
  406a78:	mov	x0, x22
  406a7c:	ldr	x3, [x0], #32
  406a80:	mov	w1, #0x1000                	// #4096
  406a84:	mov	w2, #0x1                   	// #1
  406a88:	bl	402bf0 <fwrite@plt>
  406a8c:	cmp	x0, #0x1
  406a90:	b.eq	406aa0 <feof@plt+0x3da0>  // b.none
  406a94:	mov	w8, #0x1                   	// #1
  406a98:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406a9c:	str	w8, [x9, #1872]
  406aa0:	ldp	w8, w9, [x23]
  406aa4:	add	w10, w8, #0x400
  406aa8:	subs	w8, w9, #0x400
  406aac:	stp	w10, w8, [x23]
  406ab0:	b.eq	406abc <feof@plt+0x3dbc>  // b.none
  406ab4:	ldr	w9, [x25, #4096]
  406ab8:	str	w9, [x25]
  406abc:	add	x9, x22, w8, uxtw #2
  406ac0:	add	w8, w8, #0x2
  406ac4:	str	w8, [x22, #12]
  406ac8:	str	d8, [x9, #32]
  406acc:	ldr	w19, [x28, #16]
  406ad0:	cmp	w8, #0x400
  406ad4:	b.cc	406b1c <feof@plt+0x3e1c>  // b.lo, b.ul, b.last
  406ad8:	mov	x0, x22
  406adc:	ldr	x3, [x0], #32
  406ae0:	mov	w1, #0x1000                	// #4096
  406ae4:	mov	w2, #0x1                   	// #1
  406ae8:	bl	402bf0 <fwrite@plt>
  406aec:	cmp	x0, #0x1
  406af0:	b.eq	406b00 <feof@plt+0x3e00>  // b.none
  406af4:	mov	w8, #0x1                   	// #1
  406af8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406afc:	str	w8, [x9, #1872]
  406b00:	ldp	w8, w9, [x23]
  406b04:	add	w10, w8, #0x400
  406b08:	subs	w8, w9, #0x400
  406b0c:	stp	w10, w8, [x23]
  406b10:	b.eq	406b1c <feof@plt+0x3e1c>  // b.none
  406b14:	ldr	w9, [x25, #4096]
  406b18:	str	w9, [x25]
  406b1c:	add	x9, x22, w8, uxtw #2
  406b20:	add	w8, w8, #0x1
  406b24:	add	x1, sp, #0x48
  406b28:	mov	w0, #0xa1000000            	// #-1593835520
  406b2c:	str	w8, [x22, #12]
  406b30:	str	w19, [x9, #32]
  406b34:	bl	405948 <feof@plt+0x2c48>
  406b38:	ldr	w8, [x28, #104]
  406b3c:	cbz	w8, 406f68 <feof@plt+0x4268>
  406b40:	mov	w19, wzr
  406b44:	b	406b64 <feof@plt+0x3e64>
  406b48:	mov	x24, xzr
  406b4c:	str	x24, [x27, #1888]
  406b50:	ldr	w8, [x28, #104]
  406b54:	ldr	x24, [sp, #48]
  406b58:	add	w19, w19, #0x1
  406b5c:	cmp	w19, w8
  406b60:	b.eq	406f68 <feof@plt+0x4268>  // b.none
  406b64:	ldr	x8, [x27, #1888]
  406b68:	cbz	x8, 406b8c <feof@plt+0x3e8c>
  406b6c:	ldr	w9, [x8, #8]
  406b70:	cmp	w9, w19
  406b74:	b.ne	406b8c <feof@plt+0x3e8c>  // b.any
  406b78:	add	x26, x8, #0x10
  406b7c:	mov	w8, #0x1                   	// #1
  406b80:	mov	w24, #0x3                   	// #3
  406b84:	str	w8, [sp, #56]
  406b88:	b	406bb8 <feof@plt+0x3eb8>
  406b8c:	ldr	x8, [x28, #112]
  406b90:	ldr	x26, [x8, w19, uxtw #3]
  406b94:	cbz	x26, 406ba4 <feof@plt+0x3ea4>
  406b98:	ldr	x8, [x26]
  406b9c:	cmp	x8, x28
  406ba0:	b.eq	406bb0 <feof@plt+0x3eb0>  // b.none
  406ba4:	mov	w24, wzr
  406ba8:	str	wzr, [sp, #56]
  406bac:	b	406bb8 <feof@plt+0x3eb8>
  406bb0:	str	wzr, [sp, #56]
  406bb4:	mov	w24, #0x3                   	// #3
  406bb8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406bbc:	ldr	w8, [x8, #1860]
  406bc0:	cmp	w8, #0x400
  406bc4:	b.cc	406c0c <feof@plt+0x3f0c>  // b.lo, b.ul, b.last
  406bc8:	mov	x0, x22
  406bcc:	ldr	x3, [x0], #32
  406bd0:	mov	w1, #0x1000                	// #4096
  406bd4:	mov	w2, #0x1                   	// #1
  406bd8:	bl	402bf0 <fwrite@plt>
  406bdc:	cmp	x0, #0x1
  406be0:	b.eq	406bf0 <feof@plt+0x3ef0>  // b.none
  406be4:	mov	w8, #0x1                   	// #1
  406be8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406bec:	str	w8, [x9, #1872]
  406bf0:	ldp	w8, w9, [x23]
  406bf4:	add	w10, w8, #0x400
  406bf8:	subs	w8, w9, #0x400
  406bfc:	stp	w10, w8, [x23]
  406c00:	b.eq	406c0c <feof@plt+0x3f0c>  // b.none
  406c04:	ldr	w9, [x25, #4096]
  406c08:	str	w9, [x25]
  406c0c:	add	x9, x22, w8, uxtw #2
  406c10:	add	w8, w8, #0x2
  406c14:	mov	w10, #0x1000000             	// #16777216
  406c18:	str	w8, [x22, #12]
  406c1c:	stp	w10, w24, [x9, #32]
  406c20:	cbz	w24, 406b50 <feof@plt+0x3e50>
  406c24:	ldr	w20, [x26, #8]
  406c28:	cmp	w8, #0x400
  406c2c:	b.cc	406c74 <feof@plt+0x3f74>  // b.lo, b.ul, b.last
  406c30:	mov	x0, x22
  406c34:	ldr	x3, [x0], #32
  406c38:	mov	w1, #0x1000                	// #4096
  406c3c:	mov	w2, #0x1                   	// #1
  406c40:	bl	402bf0 <fwrite@plt>
  406c44:	cmp	x0, #0x1
  406c48:	b.eq	406c58 <feof@plt+0x3f58>  // b.none
  406c4c:	mov	w8, #0x1                   	// #1
  406c50:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406c54:	str	w8, [x9, #1872]
  406c58:	ldp	w8, w9, [x23]
  406c5c:	add	w10, w8, #0x400
  406c60:	subs	w8, w9, #0x400
  406c64:	stp	w10, w8, [x23]
  406c68:	b.eq	406c74 <feof@plt+0x3f74>  // b.none
  406c6c:	ldr	w9, [x25, #4096]
  406c70:	str	w9, [x25]
  406c74:	add	x9, x22, w8, uxtw #2
  406c78:	add	w8, w8, #0x1
  406c7c:	str	w8, [x22, #12]
  406c80:	str	w20, [x9, #32]
  406c84:	ldr	w20, [x26, #12]
  406c88:	cmp	w8, #0x400
  406c8c:	b.cc	406cd4 <feof@plt+0x3fd4>  // b.lo, b.ul, b.last
  406c90:	mov	x0, x22
  406c94:	ldr	x3, [x0], #32
  406c98:	mov	w1, #0x1000                	// #4096
  406c9c:	mov	w2, #0x1                   	// #1
  406ca0:	bl	402bf0 <fwrite@plt>
  406ca4:	cmp	x0, #0x1
  406ca8:	b.eq	406cb8 <feof@plt+0x3fb8>  // b.none
  406cac:	mov	w8, #0x1                   	// #1
  406cb0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406cb4:	str	w8, [x9, #1872]
  406cb8:	ldp	w8, w9, [x23]
  406cbc:	add	w10, w8, #0x400
  406cc0:	subs	w8, w9, #0x400
  406cc4:	stp	w10, w8, [x23]
  406cc8:	b.eq	406cd4 <feof@plt+0x3fd4>  // b.none
  406ccc:	ldr	w9, [x25, #4096]
  406cd0:	str	w9, [x25]
  406cd4:	add	x9, x22, w8, uxtw #2
  406cd8:	add	w8, w8, #0x1
  406cdc:	str	w8, [x22, #12]
  406ce0:	str	w20, [x9, #32]
  406ce4:	ldr	w20, [x26, #16]
  406ce8:	cmp	w8, #0x400
  406cec:	b.cc	406d34 <feof@plt+0x4034>  // b.lo, b.ul, b.last
  406cf0:	mov	x0, x22
  406cf4:	ldr	x3, [x0], #32
  406cf8:	mov	w1, #0x1000                	// #4096
  406cfc:	mov	w2, #0x1                   	// #1
  406d00:	bl	402bf0 <fwrite@plt>
  406d04:	cmp	x0, #0x1
  406d08:	b.eq	406d18 <feof@plt+0x4018>  // b.none
  406d0c:	mov	w8, #0x1                   	// #1
  406d10:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406d14:	str	w8, [x9, #1872]
  406d18:	ldp	w8, w9, [x23]
  406d1c:	add	w10, w8, #0x400
  406d20:	subs	w8, w9, #0x400
  406d24:	stp	w10, w8, [x23]
  406d28:	b.eq	406d34 <feof@plt+0x4034>  // b.none
  406d2c:	ldr	w9, [x25, #4096]
  406d30:	str	w9, [x25]
  406d34:	mov	x27, xzr
  406d38:	add	x9, x22, w8, uxtw #2
  406d3c:	add	w8, w8, #0x1
  406d40:	add	x26, x26, #0x18
  406d44:	str	w8, [x22, #12]
  406d48:	str	w20, [x9, #32]
  406d4c:	b	406d64 <feof@plt+0x4064>
  406d50:	ldr	x28, [sp, #64]
  406d54:	add	x26, x26, #0x10
  406d58:	add	x27, x27, #0x1
  406d5c:	cmp	x27, #0x9
  406d60:	b.eq	406e58 <feof@plt+0x4158>  // b.none
  406d64:	add	x9, x28, x27, lsl #3
  406d68:	ldr	x9, [x9, #32]
  406d6c:	cbz	x9, 406d58 <feof@plt+0x4058>
  406d70:	ldr	w28, [x26]
  406d74:	cmp	w8, #0x400
  406d78:	lsl	w20, w28, #1
  406d7c:	b.cc	406dc4 <feof@plt+0x40c4>  // b.lo, b.ul, b.last
  406d80:	mov	x0, x22
  406d84:	ldr	x3, [x0], #32
  406d88:	mov	w1, #0x1000                	// #4096
  406d8c:	mov	w2, #0x1                   	// #1
  406d90:	bl	402bf0 <fwrite@plt>
  406d94:	cmp	x0, #0x1
  406d98:	b.eq	406da8 <feof@plt+0x40a8>  // b.none
  406d9c:	mov	w8, #0x1                   	// #1
  406da0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406da4:	str	w8, [x9, #1872]
  406da8:	ldp	w8, w9, [x23]
  406dac:	add	w10, w8, #0x400
  406db0:	subs	w8, w9, #0x400
  406db4:	stp	w10, w8, [x23]
  406db8:	b.eq	406dc4 <feof@plt+0x40c4>  // b.none
  406dbc:	ldr	w9, [x25, #4096]
  406dc0:	str	w9, [x25]
  406dc4:	mov	w10, #0x1a10000             	// #27328512
  406dc8:	add	x9, x22, w8, uxtw #2
  406dcc:	add	w8, w8, #0x2
  406dd0:	add	w10, w10, w27, lsl #17
  406dd4:	str	w8, [x22, #12]
  406dd8:	stp	w10, w20, [x9, #32]
  406ddc:	cbz	w28, 406d50 <feof@plt+0x4050>
  406de0:	ldr	x24, [x26, #8]
  406de4:	b	406e00 <feof@plt+0x4100>
  406de8:	add	x9, x22, w8, uxtw #2
  406dec:	add	w8, w8, #0x2
  406df0:	lsr	x10, x20, #32
  406df4:	str	w8, [x22, #12]
  406df8:	stp	w20, w10, [x9, #32]
  406dfc:	cbz	w28, 406d50 <feof@plt+0x4050>
  406e00:	ldr	x20, [x24], #8
  406e04:	cmp	w8, #0x400
  406e08:	sub	w28, w28, #0x1
  406e0c:	b.cc	406de8 <feof@plt+0x40e8>  // b.lo, b.ul, b.last
  406e10:	mov	x0, x22
  406e14:	ldr	x3, [x0], #32
  406e18:	mov	w1, #0x1000                	// #4096
  406e1c:	mov	w2, #0x1                   	// #1
  406e20:	bl	402bf0 <fwrite@plt>
  406e24:	cmp	x0, #0x1
  406e28:	b.eq	406e38 <feof@plt+0x4138>  // b.none
  406e2c:	mov	w8, #0x1                   	// #1
  406e30:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406e34:	str	w8, [x9, #1872]
  406e38:	ldp	w8, w9, [x23]
  406e3c:	add	w10, w8, #0x400
  406e40:	subs	w8, w9, #0x400
  406e44:	stp	w10, w8, [x23]
  406e48:	b.eq	406de8 <feof@plt+0x40e8>  // b.none
  406e4c:	ldr	w9, [x25, #4096]
  406e50:	str	w9, [x25]
  406e54:	b	406de8 <feof@plt+0x40e8>
  406e58:	ldr	w8, [sp, #56]
  406e5c:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  406e60:	cbz	w8, 406b50 <feof@plt+0x3e50>
  406e64:	ldr	x26, [x27, #1888]
  406e68:	cbz	x26, 406b48 <feof@plt+0x3e48>
  406e6c:	ldr	x8, [x28, #32]
  406e70:	ldr	x24, [x26]
  406e74:	cbz	x8, 406e84 <feof@plt+0x4184>
  406e78:	ldr	x0, [x26, #48]
  406e7c:	bl	402770 <free@plt>
  406e80:	mov	w8, #0x1                   	// #1
  406e84:	ldr	x9, [x28, #40]
  406e88:	cbz	x9, 406ea0 <feof@plt+0x41a0>
  406e8c:	add	x9, x26, w8, uxtw #4
  406e90:	ldr	x0, [x9, #48]
  406e94:	add	w20, w8, #0x1
  406e98:	bl	402770 <free@plt>
  406e9c:	mov	w8, w20
  406ea0:	ldr	x9, [x28, #48]
  406ea4:	cbz	x9, 406ebc <feof@plt+0x41bc>
  406ea8:	add	x9, x26, w8, uxtw #4
  406eac:	ldr	x0, [x9, #48]
  406eb0:	add	w20, w8, #0x1
  406eb4:	bl	402770 <free@plt>
  406eb8:	mov	w8, w20
  406ebc:	ldr	x9, [x28, #56]
  406ec0:	cbz	x9, 406ed8 <feof@plt+0x41d8>
  406ec4:	add	x9, x26, w8, uxtw #4
  406ec8:	ldr	x0, [x9, #48]
  406ecc:	add	w20, w8, #0x1
  406ed0:	bl	402770 <free@plt>
  406ed4:	mov	w8, w20
  406ed8:	ldr	x9, [x28, #64]
  406edc:	cbz	x9, 406ef4 <feof@plt+0x41f4>
  406ee0:	add	x9, x26, w8, uxtw #4
  406ee4:	ldr	x0, [x9, #48]
  406ee8:	add	w20, w8, #0x1
  406eec:	bl	402770 <free@plt>
  406ef0:	mov	w8, w20
  406ef4:	ldr	x9, [x28, #72]
  406ef8:	cbz	x9, 406f10 <feof@plt+0x4210>
  406efc:	add	x9, x26, w8, uxtw #4
  406f00:	ldr	x0, [x9, #48]
  406f04:	add	w20, w8, #0x1
  406f08:	bl	402770 <free@plt>
  406f0c:	mov	w8, w20
  406f10:	ldr	x9, [x28, #80]
  406f14:	cbz	x9, 406f2c <feof@plt+0x422c>
  406f18:	add	x9, x26, w8, uxtw #4
  406f1c:	ldr	x0, [x9, #48]
  406f20:	add	w20, w8, #0x1
  406f24:	bl	402770 <free@plt>
  406f28:	mov	w8, w20
  406f2c:	ldr	x9, [x28, #88]
  406f30:	cbz	x9, 406f48 <feof@plt+0x4248>
  406f34:	add	x9, x26, w8, uxtw #4
  406f38:	ldr	x0, [x9, #48]
  406f3c:	add	w20, w8, #0x1
  406f40:	bl	402770 <free@plt>
  406f44:	mov	w8, w20
  406f48:	ldr	x9, [x28, #96]
  406f4c:	cbz	x9, 406f5c <feof@plt+0x425c>
  406f50:	add	x8, x26, w8, uxtw #4
  406f54:	ldr	x0, [x8, #48]
  406f58:	bl	402770 <free@plt>
  406f5c:	mov	x0, x26
  406f60:	bl	402770 <free@plt>
  406f64:	b	406b4c <feof@plt+0x3e4c>
  406f68:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406f6c:	ldr	w8, [x8, #1860]
  406f70:	cmp	w8, #0x400
  406f74:	b.cc	406fbc <feof@plt+0x42bc>  // b.lo, b.ul, b.last
  406f78:	mov	x0, x22
  406f7c:	ldr	x3, [x0], #32
  406f80:	mov	w1, #0x1000                	// #4096
  406f84:	mov	w2, #0x1                   	// #1
  406f88:	bl	402bf0 <fwrite@plt>
  406f8c:	cmp	x0, #0x1
  406f90:	b.eq	406fa0 <feof@plt+0x42a0>  // b.none
  406f94:	mov	w8, #0x1                   	// #1
  406f98:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406f9c:	str	w8, [x9, #1872]
  406fa0:	ldp	w8, w9, [x23]
  406fa4:	add	w10, w8, #0x400
  406fa8:	subs	w8, w9, #0x400
  406fac:	stp	w10, w8, [x23]
  406fb0:	b.eq	406fbc <feof@plt+0x42bc>  // b.none
  406fb4:	ldr	w9, [x25, #4096]
  406fb8:	str	w9, [x25]
  406fbc:	add	x9, x22, w8, uxtw #2
  406fc0:	add	w8, w8, #0x1
  406fc4:	str	w8, [x22, #12]
  406fc8:	str	wzr, [x9, #32]
  406fcc:	ldr	x26, [x27, #1888]
  406fd0:	cbnz	x26, 40708c <feof@plt+0x438c>
  406fd4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406fd8:	ldr	x3, [x8, #1848]
  406fdc:	cbz	x3, 407040 <feof@plt+0x4340>
  406fe0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  406fe4:	add	x8, x8, #0x744
  406fe8:	ldr	w19, [x8]
  406fec:	cbz	w19, 407030 <feof@plt+0x4330>
  406ff0:	ldr	w8, [x8, #16]
  406ff4:	tbz	w8, #31, 407030 <feof@plt+0x4330>
  406ff8:	lsl	w1, w19, #2
  406ffc:	mov	w2, #0x1                   	// #1
  407000:	mov	x0, x25
  407004:	bl	402bf0 <fwrite@plt>
  407008:	cmp	x0, #0x1
  40700c:	b.eq	40701c <feof@plt+0x431c>  // b.none
  407010:	mov	w8, #0x1                   	// #1
  407014:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407018:	str	w8, [x9, #1872]
  40701c:	ldp	w8, w9, [x22, #8]
  407020:	ldr	x3, [x22]
  407024:	add	w8, w8, w19
  407028:	sub	w9, w9, w19
  40702c:	stp	w8, w9, [x22, #8]
  407030:	mov	x0, x3
  407034:	bl	402740 <fclose@plt>
  407038:	str	xzr, [x22]
  40703c:	str	wzr, [x22, #16]
  407040:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407044:	add	x9, x9, #0x750
  407048:	ldr	w8, [x9]
  40704c:	str	wzr, [x9, #4]
  407050:	cbz	w8, 4063b4 <feof@plt+0x36b4>
  407054:	cmp	w8, #0x0
  407058:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  40705c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  407060:	add	x8, x8, #0xa18
  407064:	add	x9, x9, #0x9eb
  407068:	csel	x0, x9, x8, lt  // lt = tstop
  40706c:	mov	x1, x24
  407070:	bl	4080fc <feof@plt+0x53fc>
  407074:	b	4063b4 <feof@plt+0x36b4>
  407078:	mov	x0, x26
  40707c:	bl	402770 <free@plt>
  407080:	mov	x26, x19
  407084:	str	x19, [x27, #1888]
  407088:	cbz	x19, 406fd4 <feof@plt+0x42d4>
  40708c:	ldr	x8, [x28, #32]
  407090:	ldr	x19, [x26]
  407094:	cbz	x8, 4070a4 <feof@plt+0x43a4>
  407098:	ldr	x0, [x26, #48]
  40709c:	bl	402770 <free@plt>
  4070a0:	mov	w8, #0x1                   	// #1
  4070a4:	ldr	x9, [x28, #40]
  4070a8:	cbz	x9, 4070c0 <feof@plt+0x43c0>
  4070ac:	add	x9, x26, w8, uxtw #4
  4070b0:	ldr	x0, [x9, #48]
  4070b4:	add	w20, w8, #0x1
  4070b8:	bl	402770 <free@plt>
  4070bc:	mov	w8, w20
  4070c0:	ldr	x9, [x28, #48]
  4070c4:	cbz	x9, 4070dc <feof@plt+0x43dc>
  4070c8:	add	x9, x26, w8, uxtw #4
  4070cc:	ldr	x0, [x9, #48]
  4070d0:	add	w20, w8, #0x1
  4070d4:	bl	402770 <free@plt>
  4070d8:	mov	w8, w20
  4070dc:	ldr	x9, [x28, #56]
  4070e0:	cbz	x9, 4070f8 <feof@plt+0x43f8>
  4070e4:	add	x9, x26, w8, uxtw #4
  4070e8:	ldr	x0, [x9, #48]
  4070ec:	add	w20, w8, #0x1
  4070f0:	bl	402770 <free@plt>
  4070f4:	mov	w8, w20
  4070f8:	ldr	x9, [x28, #64]
  4070fc:	cbz	x9, 407114 <feof@plt+0x4414>
  407100:	add	x9, x26, w8, uxtw #4
  407104:	ldr	x0, [x9, #48]
  407108:	add	w20, w8, #0x1
  40710c:	bl	402770 <free@plt>
  407110:	mov	w8, w20
  407114:	ldr	x9, [x28, #72]
  407118:	cbz	x9, 407130 <feof@plt+0x4430>
  40711c:	add	x9, x26, w8, uxtw #4
  407120:	ldr	x0, [x9, #48]
  407124:	add	w20, w8, #0x1
  407128:	bl	402770 <free@plt>
  40712c:	mov	w8, w20
  407130:	ldr	x9, [x28, #80]
  407134:	cbz	x9, 40714c <feof@plt+0x444c>
  407138:	add	x9, x26, w8, uxtw #4
  40713c:	ldr	x0, [x9, #48]
  407140:	add	w20, w8, #0x1
  407144:	bl	402770 <free@plt>
  407148:	mov	w8, w20
  40714c:	ldr	x9, [x28, #88]
  407150:	cbz	x9, 407168 <feof@plt+0x4468>
  407154:	add	x9, x26, w8, uxtw #4
  407158:	ldr	x0, [x9, #48]
  40715c:	add	w20, w8, #0x1
  407160:	bl	402770 <free@plt>
  407164:	mov	w8, w20
  407168:	ldr	x9, [x28, #96]
  40716c:	cbz	x9, 407078 <feof@plt+0x4378>
  407170:	add	x8, x26, w8, uxtw #4
  407174:	ldr	x0, [x8, #48]
  407178:	bl	402770 <free@plt>
  40717c:	b	407078 <feof@plt+0x4378>
  407180:	mov	w19, wzr
  407184:	b	4071c0 <feof@plt+0x44c0>
  407188:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40718c:	mov	x24, x19
  407190:	b	4067ec <feof@plt+0x3aec>
  407194:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407198:	ldr	x0, [x8, #1416]
  40719c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4071a0:	add	x1, x1, #0xa97
  4071a4:	b	4063ac <feof@plt+0x36ac>
  4071a8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4071ac:	add	x9, x9, #0x748
  4071b0:	ldr	w8, [x9, #4]
  4071b4:	mov	w19, wzr
  4071b8:	add	w8, w8, #0x1
  4071bc:	stp	wzr, w8, [x9]
  4071c0:	rev	w8, w19
  4071c4:	str	w8, [x29, #12]
  4071c8:	mov	w8, #0x3941                	// #14657
  4071cc:	lsr	w20, w19, #24
  4071d0:	movk	w8, #0x2a32, lsl #16
  4071d4:	mov	x26, x24
  4071d8:	str	w8, [x29, #8]
  4071dc:	cbnz	x24, 4071e4 <feof@plt+0x44e4>
  4071e0:	ldr	x26, [x28, #24]
  4071e4:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4071e8:	adrp	x4, 456000 <_obstack_memory_used@@Base+0xdd8>
  4071ec:	add	x0, sp, #0x58
  4071f0:	mov	w2, #0x9                   	// #9
  4071f4:	mov	w3, #0x2                   	// #2
  4071f8:	add	x1, x1, #0xc44
  4071fc:	add	x4, x4, #0xc4f
  407200:	bl	402880 <sprintf@plt>
  407204:	sub	w8, w20, #0x41
  407208:	and	w8, w8, #0xff
  40720c:	cmp	w8, #0x19
  407210:	b.ls	407230 <feof@plt+0x4530>  // b.plast
  407214:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  407218:	add	x8, x8, #0xc3a
  40721c:	ldr	x8, [x8]
  407220:	mov	w9, #0x29                  	// #41
  407224:	sturh	w9, [x29, #-128]
  407228:	stur	x8, [x29, #-136]
  40722c:	b	40729c <feof@plt+0x459c>
  407230:	lsr	w8, w19, #16
  407234:	sub	w9, w8, #0x30
  407238:	and	w9, w9, #0xff
  40723c:	cmp	w9, #0x9
  407240:	b.hi	407214 <feof@plt+0x4514>  // b.pmore
  407244:	lsr	w9, w19, #8
  407248:	sub	w9, w9, #0x30
  40724c:	and	w9, w9, #0xff
  407250:	cmp	w9, #0xa
  407254:	b.cs	407214 <feof@plt+0x4514>  // b.hs, b.nlast
  407258:	mov	w11, #0xa                   	// #10
  40725c:	mul	w11, w20, w11
  407260:	and	w9, w19, #0xff
  407264:	add	w8, w11, w8, uxtb
  407268:	cmp	w9, #0x2a
  40726c:	sub	w2, w8, #0x2ba
  407270:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  407274:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  407278:	ubfx	w10, w19, #8, #8
  40727c:	add	x8, x8, #0xc4f
  407280:	add	x9, x9, #0xc57
  407284:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  407288:	sub	w3, w10, #0x30
  40728c:	csel	x4, x8, x9, eq  // eq = none
  407290:	sub	x0, x29, #0x88
  407294:	add	x1, x1, #0xc44
  407298:	bl	402880 <sprintf@plt>
  40729c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4072a0:	add	x2, sp, #0x58
  4072a4:	add	x3, x29, #0x8
  4072a8:	sub	x4, x29, #0x88
  4072ac:	add	x5, x29, #0xc
  4072b0:	add	x0, x0, #0xbea
  4072b4:	mov	x1, x26
  4072b8:	bl	4080fc <feof@plt+0x53fc>
  4072bc:	b	406fcc <feof@plt+0x42cc>
  4072c0:	mov	w9, wzr
  4072c4:	b	4072e8 <feof@plt+0x45e8>
  4072c8:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4072cc:	add	x11, x11, #0x748
  4072d0:	ldr	w10, [x11, #4]
  4072d4:	mov	w9, wzr
  4072d8:	add	w10, w10, #0x1
  4072dc:	stp	wzr, w10, [x11]
  4072e0:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4072e4:	add	x11, x11, #0x744
  4072e8:	ldr	w10, [x28, #16]
  4072ec:	cmp	w9, w10
  4072f0:	b.ne	407480 <feof@plt+0x4780>  // b.any
  4072f4:	ldr	w9, [x11, #16]
  4072f8:	cmp	w9, #0x1
  4072fc:	b.lt	407ff0 <feof@plt+0x52f0>  // b.tstop
  407300:	ldr	w9, [x11]
  407304:	cmp	w8, w9
  407308:	b.ne	40734c <feof@plt+0x464c>  // b.any
  40730c:	ldr	w9, [x22, #8]
  407310:	ldr	x3, [x22]
  407314:	add	x0, x22, #0x20
  407318:	mov	w1, #0x1                   	// #1
  40731c:	add	w8, w9, w8
  407320:	mov	w2, #0x1000                	// #4096
  407324:	stp	w8, wzr, [x22, #8]
  407328:	str	wzr, [x22, #16]
  40732c:	bl	402650 <fread@plt>
  407330:	ldr	w8, [x22, #16]
  407334:	lsr	x9, x0, #2
  407338:	adds	w8, w8, w9
  40733c:	str	w8, [x22, #16]
  407340:	b.eq	407fdc <feof@plt+0x52dc>  // b.none
  407344:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407348:	ldr	w9, [x9, #1860]
  40734c:	add	x10, x22, w9, uxtw #2
  407350:	add	w9, w9, #0x1
  407354:	str	w9, [x22, #12]
  407358:	ldr	w10, [x10, #32]
  40735c:	mov	w11, #0xa1000000            	// #-1593835520
  407360:	cmp	w10, w11
  407364:	b.ne	407ff0 <feof@plt+0x52f0>  // b.any
  407368:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40736c:	ldr	w10, [x10, #1876]
  407370:	cmp	w10, #0x1
  407374:	b.lt	4080dc <feof@plt+0x53dc>  // b.tstop
  407378:	cmp	w8, w9
  40737c:	b.ne	4073c0 <feof@plt+0x46c0>  // b.any
  407380:	ldr	w9, [x22, #8]
  407384:	ldr	x3, [x22]
  407388:	add	x0, x22, #0x20
  40738c:	mov	w1, #0x1                   	// #1
  407390:	add	w8, w9, w8
  407394:	mov	w2, #0x1000                	// #4096
  407398:	stp	w8, wzr, [x22, #8]
  40739c:	str	wzr, [x22, #16]
  4073a0:	bl	402650 <fread@plt>
  4073a4:	ldr	w8, [x22, #16]
  4073a8:	lsr	x9, x0, #2
  4073ac:	adds	w8, w8, w9
  4073b0:	str	w8, [x22, #16]
  4073b4:	b.eq	4080c8 <feof@plt+0x53c8>  // b.none
  4073b8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4073bc:	ldr	w9, [x8, #1860]
  4073c0:	add	x8, x22, w9, uxtw #2
  4073c4:	add	w9, w9, #0x1
  4073c8:	str	w9, [x22, #12]
  4073cc:	ldr	w8, [x8, #32]
  4073d0:	cbz	w8, 4080dc <feof@plt+0x53dc>
  4073d4:	add	x0, sp, #0x48
  4073d8:	bl	405eb4 <feof@plt+0x31b4>
  4073dc:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4073e0:	add	x11, x11, #0x744
  4073e4:	ldr	w8, [x11, #16]
  4073e8:	cmp	w8, #0x1
  4073ec:	b.lt	408000 <feof@plt+0x5300>  // b.tstop
  4073f0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4073f4:	ldr	w8, [x11]
  4073f8:	ldr	w9, [x9, #1864]
  4073fc:	cmp	w9, w8
  407400:	b.ne	40744c <feof@plt+0x474c>  // b.any
  407404:	ldr	w9, [x22, #8]
  407408:	ldr	x3, [x22]
  40740c:	add	x0, x22, #0x20
  407410:	mov	w1, #0x1                   	// #1
  407414:	add	w8, w9, w8
  407418:	mov	w2, #0x1000                	// #4096
  40741c:	stp	w8, wzr, [x22, #8]
  407420:	str	wzr, [x22, #16]
  407424:	bl	402650 <fread@plt>
  407428:	ldr	w8, [x22, #16]
  40742c:	lsr	x9, x0, #2
  407430:	adds	w8, w8, w9
  407434:	str	w8, [x22, #16]
  407438:	b.eq	408018 <feof@plt+0x5318>  // b.none
  40743c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407440:	ldr	w8, [x8, #1860]
  407444:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407448:	add	x11, x11, #0x744
  40744c:	add	x9, x22, w8, uxtw #2
  407450:	add	w8, w8, #0x1
  407454:	str	w8, [x22, #12]
  407458:	ldr	w8, [x9, #32]
  40745c:	ldr	w9, [x28, #104]
  407460:	cbz	w9, 40800c <feof@plt+0x530c>
  407464:	add	x9, x28, #0x20
  407468:	str	x9, [sp]
  40746c:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  407470:	mov	w26, wzr
  407474:	add	x9, x9, #0x760
  407478:	str	x9, [sp, #8]
  40747c:	b	4074a8 <feof@plt+0x47a8>
  407480:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  407484:	add	x0, x0, #0xb0c
  407488:	mov	x1, x24
  40748c:	bl	4080fc <feof@plt+0x53fc>
  407490:	b	406a2c <feof@plt+0x3d2c>
  407494:	mov	w8, wzr
  407498:	add	w26, w26, #0x1
  40749c:	ldr	w9, [x28, #104]
  4074a0:	cmp	w26, w9
  4074a4:	b.eq	408010 <feof@plt+0x5310>  // b.none
  4074a8:	mov	w9, #0x1000000             	// #16777216
  4074ac:	cmp	w8, w9
  4074b0:	b.ne	408058 <feof@plt+0x5358>  // b.any
  4074b4:	ldr	w8, [x11, #16]
  4074b8:	cmp	w8, #0x0
  4074bc:	b.le	407494 <feof@plt+0x4794>
  4074c0:	ldr	x9, [x28, #112]
  4074c4:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4074c8:	ldr	w8, [x11]
  4074cc:	ldr	w27, [x10, #1864]
  4074d0:	ldr	x19, [x9, w26, uxtw #3]
  4074d4:	cmp	w27, w8
  4074d8:	b.ne	407524 <feof@plt+0x4824>  // b.any
  4074dc:	ldr	w9, [x22, #8]
  4074e0:	ldr	x3, [x22]
  4074e4:	add	x0, x22, #0x20
  4074e8:	mov	w1, #0x1                   	// #1
  4074ec:	add	w8, w9, w8
  4074f0:	mov	w2, #0x1000                	// #4096
  4074f4:	stp	w8, wzr, [x22, #8]
  4074f8:	str	wzr, [x22, #16]
  4074fc:	bl	402650 <fread@plt>
  407500:	ldr	w8, [x22, #16]
  407504:	lsr	x9, x0, #2
  407508:	adds	w27, w8, w9
  40750c:	str	w27, [x22, #16]
  407510:	b.eq	4076dc <feof@plt+0x49dc>  // b.none
  407514:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407518:	ldr	w8, [x8, #1860]
  40751c:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407520:	add	x11, x11, #0x744
  407524:	add	w28, w8, #0x1
  407528:	add	x9, x22, w8, uxtw #2
  40752c:	str	w28, [x22, #12]
  407530:	ldr	w8, [x9, #32]
  407534:	cbz	w8, 4076d0 <feof@plt+0x49d0>
  407538:	cmp	w8, #0x3
  40753c:	b.ne	408040 <feof@plt+0x5340>  // b.any
  407540:	str	w26, [sp, #28]
  407544:	cbz	x19, 407558 <feof@plt+0x4858>
  407548:	ldr	x8, [x19]
  40754c:	ldr	x9, [sp, #64]
  407550:	cmp	x8, x9
  407554:	b.eq	407710 <feof@plt+0x4a10>  // b.none
  407558:	ldr	x8, [sp, #64]
  40755c:	ldur	q0, [x8, #72]
  407560:	ldur	q2, [x8, #40]
  407564:	ldur	q1, [x8, #88]
  407568:	ldur	q3, [x8, #56]
  40756c:	cmeq	v0.2d, v0.2d, #0
  407570:	cmeq	v2.2d, v2.2d, #0
  407574:	cmeq	v1.2d, v1.2d, #0
  407578:	cmeq	v3.2d, v3.2d, #0
  40757c:	mvn	v0.16b, v0.16b
  407580:	mvn	v2.16b, v2.16b
  407584:	mvn	v1.16b, v1.16b
  407588:	mvn	v3.16b, v3.16b
  40758c:	xtn	v0.2s, v0.2d
  407590:	xtn	v2.2s, v2.2d
  407594:	xtn2	v0.4s, v1.2d
  407598:	xtn2	v2.4s, v3.2d
  40759c:	ldr	x8, [x8, #32]
  4075a0:	movi	v1.4s, #0x1
  4075a4:	and	v1.16b, v2.16b, v1.16b
  4075a8:	sub	v0.4s, v1.4s, v0.4s
  4075ac:	addv	s0, v0.4s
  4075b0:	fmov	w9, s0
  4075b4:	cmp	x8, #0x0
  4075b8:	cinc	w8, w9, ne  // ne = any
  4075bc:	lsl	w8, w8, #4
  4075c0:	add	w24, w8, #0x38
  4075c4:	mov	x0, x24
  4075c8:	bl	402b60 <malloc@plt>
  4075cc:	str	x0, [sp, #56]
  4075d0:	cbz	x0, 407700 <feof@plt+0x4a00>
  4075d4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4075d8:	ldr	w8, [x8, #1876]
  4075dc:	str	xzr, [x0]
  4075e0:	str	w26, [x0, #8]
  4075e4:	cmp	w8, #0x0
  4075e8:	b.le	407784 <feof@plt+0x4a84>
  4075ec:	ldr	x24, [sp, #48]
  4075f0:	cmp	w27, w28
  4075f4:	b.ne	407638 <feof@plt+0x4938>  // b.any
  4075f8:	ldr	w8, [x22, #8]
  4075fc:	ldr	x3, [x22]
  407600:	add	x0, x22, #0x20
  407604:	mov	w1, #0x1                   	// #1
  407608:	add	w8, w8, w27
  40760c:	mov	w2, #0x1000                	// #4096
  407610:	stp	w8, wzr, [x22, #8]
  407614:	str	wzr, [x22, #16]
  407618:	bl	402650 <fread@plt>
  40761c:	ldr	w8, [x22, #16]
  407620:	lsr	x9, x0, #2
  407624:	adds	w27, w8, w9
  407628:	str	w27, [x22, #16]
  40762c:	b.eq	40782c <feof@plt+0x4b2c>  // b.none
  407630:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407634:	ldr	w28, [x8, #1860]
  407638:	add	w8, w28, #0x1
  40763c:	add	x9, x22, w28, uxtw #2
  407640:	str	w8, [x22, #12]
  407644:	ldr	w9, [x9, #32]
  407648:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40764c:	add	x11, x11, #0x744
  407650:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407654:	ldr	w10, [x10, #1876]
  407658:	cmp	w10, #0x0
  40765c:	ldr	x10, [sp, #56]
  407660:	str	w9, [x10, #24]
  407664:	b.le	407818 <feof@plt+0x4b18>
  407668:	cmp	w27, w8
  40766c:	b.ne	4076b8 <feof@plt+0x49b8>  // b.any
  407670:	ldr	w8, [x22, #8]
  407674:	ldr	x3, [x22]
  407678:	add	x0, x22, #0x20
  40767c:	mov	w1, #0x1                   	// #1
  407680:	add	w8, w8, w27
  407684:	mov	w2, #0x1000                	// #4096
  407688:	stp	w8, wzr, [x22, #8]
  40768c:	str	wzr, [x22, #16]
  407690:	bl	402650 <fread@plt>
  407694:	ldr	w8, [x22, #16]
  407698:	lsr	x9, x0, #2
  40769c:	adds	w27, w8, w9
  4076a0:	str	w27, [x22, #16]
  4076a4:	b.eq	407c78 <feof@plt+0x4f78>  // b.none
  4076a8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4076ac:	ldr	w8, [x8, #1860]
  4076b0:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4076b4:	add	x11, x11, #0x744
  4076b8:	add	w28, w8, #0x1
  4076bc:	add	x9, x22, w8, uxtw #2
  4076c0:	str	w28, [x22, #12]
  4076c4:	ldr	w8, [x9, #32]
  4076c8:	ldr	x0, [sp, #56]
  4076cc:	b	407798 <feof@plt+0x4a98>
  4076d0:	ldr	x28, [sp, #64]
  4076d4:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4076d8:	b	407bd0 <feof@plt+0x4ed0>
  4076dc:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4076e0:	add	x9, x9, #0x748
  4076e4:	ldr	w8, [x9, #4]
  4076e8:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4076ec:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4076f0:	add	x11, x11, #0x744
  4076f4:	add	w8, w8, #0x1
  4076f8:	stp	wzr, w8, [x9]
  4076fc:	b	407bd0 <feof@plt+0x4ed0>
  407700:	ldr	x28, [sp, #64]
  407704:	mov	w19, #0xffffffff            	// #-1
  407708:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40770c:	b	407b28 <feof@plt+0x4e28>
  407710:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407714:	ldr	w8, [x8, #1876]
  407718:	cmp	w8, #0x1
  40771c:	b.lt	407824 <feof@plt+0x4b24>  // b.tstop
  407720:	cmp	w27, w28
  407724:	b.ne	407770 <feof@plt+0x4a70>  // b.any
  407728:	ldr	w8, [x22, #8]
  40772c:	ldr	x3, [x22]
  407730:	add	x0, x22, #0x20
  407734:	mov	w1, #0x1                   	// #1
  407738:	add	w8, w8, w27
  40773c:	mov	w2, #0x1000                	// #4096
  407740:	stp	w8, wzr, [x22, #8]
  407744:	str	wzr, [x22, #16]
  407748:	bl	402650 <fread@plt>
  40774c:	ldr	w8, [x22, #16]
  407750:	lsr	x9, x0, #2
  407754:	adds	w27, w8, w9
  407758:	str	w27, [x22, #16]
  40775c:	b.eq	407c98 <feof@plt+0x4f98>  // b.none
  407760:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407764:	ldr	w28, [x8, #1860]
  407768:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40776c:	add	x11, x11, #0x744
  407770:	add	w9, w28, #0x1
  407774:	add	x8, x22, w28, uxtw #2
  407778:	str	w9, [x22, #12]
  40777c:	ldr	w8, [x8, #32]
  407780:	b	407cb8 <feof@plt+0x4fb8>
  407784:	ldr	x24, [sp, #48]
  407788:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40778c:	mov	w8, wzr
  407790:	str	wzr, [x0, #24]
  407794:	add	x11, x11, #0x744
  407798:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40779c:	ldr	w9, [x9, #1876]
  4077a0:	str	w8, [x0, #28]
  4077a4:	cmp	w9, #0x1
  4077a8:	b.lt	407810 <feof@plt+0x4b10>  // b.tstop
  4077ac:	cmp	w27, w28
  4077b0:	b.ne	4077fc <feof@plt+0x4afc>  // b.any
  4077b4:	ldr	w8, [x22, #8]
  4077b8:	ldr	x3, [x22]
  4077bc:	add	x0, x22, #0x20
  4077c0:	mov	w1, #0x1                   	// #1
  4077c4:	add	w8, w8, w27
  4077c8:	mov	w2, #0x1000                	// #4096
  4077cc:	stp	w8, wzr, [x22, #8]
  4077d0:	str	wzr, [x22, #16]
  4077d4:	bl	402650 <fread@plt>
  4077d8:	ldr	w8, [x22, #16]
  4077dc:	lsr	x9, x0, #2
  4077e0:	adds	w8, w8, w9
  4077e4:	str	w8, [x22, #16]
  4077e8:	b.eq	40784c <feof@plt+0x4b4c>  // b.none
  4077ec:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4077f0:	ldr	w28, [x8, #1860]
  4077f4:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4077f8:	add	x11, x11, #0x744
  4077fc:	add	w9, w28, #0x1
  407800:	add	x8, x22, w28, uxtw #2
  407804:	str	w9, [x22, #12]
  407808:	ldr	w8, [x8, #32]
  40780c:	b	407868 <feof@plt+0x4b68>
  407810:	mov	w8, wzr
  407814:	b	407868 <feof@plt+0x4b68>
  407818:	mov	w8, wzr
  40781c:	str	wzr, [x10, #28]
  407820:	b	407868 <feof@plt+0x4b68>
  407824:	mov	w8, wzr
  407828:	b	407cb8 <feof@plt+0x4fb8>
  40782c:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407830:	add	x11, x11, #0x744
  407834:	ldr	w10, [x11, #8]
  407838:	ldr	w8, [x11]
  40783c:	mov	w9, wzr
  407840:	add	w10, w10, #0x1
  407844:	stp	wzr, w10, [x11, #4]
  407848:	b	407650 <feof@plt+0x4950>
  40784c:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407850:	add	x10, x10, #0x748
  407854:	ldr	w9, [x10, #4]
  407858:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40785c:	add	x11, x11, #0x744
  407860:	add	w9, w9, #0x1
  407864:	stp	wzr, w9, [x10]
  407868:	ldr	x9, [sp, #56]
  40786c:	mov	x19, xzr
  407870:	mov	w28, wzr
  407874:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  407878:	str	w8, [x9, #32]
  40787c:	add	x8, x9, #0x28
  407880:	str	x8, [sp, #16]
  407884:	b	4078a4 <feof@plt+0x4ba4>
  407888:	ldr	x24, [sp, #48]
  40788c:	ldr	w26, [sp, #28]
  407890:	add	w28, w28, #0x1
  407894:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  407898:	add	x19, x19, #0x1
  40789c:	cmp	x19, #0x9
  4078a0:	b.eq	407ad0 <feof@plt+0x4dd0>  // b.none
  4078a4:	ldr	x8, [sp, #64]
  4078a8:	add	x8, x8, x19, lsl #3
  4078ac:	ldr	x8, [x8, #32]
  4078b0:	cbz	x8, 407898 <feof@plt+0x4b98>
  4078b4:	ldr	w8, [x11, #16]
  4078b8:	cmp	w8, #0x1
  4078bc:	b.lt	407aec <feof@plt+0x4dec>  // b.tstop
  4078c0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4078c4:	ldr	w8, [x11]
  4078c8:	ldr	w26, [x9, #1864]
  4078cc:	cmp	w26, w8
  4078d0:	b.ne	407914 <feof@plt+0x4c14>  // b.any
  4078d4:	ldr	w9, [x22, #8]
  4078d8:	ldr	x3, [x22]
  4078dc:	add	x0, x22, #0x20
  4078e0:	mov	w1, #0x1                   	// #1
  4078e4:	add	w8, w9, w8
  4078e8:	mov	w2, #0x1000                	// #4096
  4078ec:	stp	w8, wzr, [x22, #8]
  4078f0:	str	wzr, [x22, #16]
  4078f4:	bl	402650 <fread@plt>
  4078f8:	ldr	w8, [x22, #16]
  4078fc:	lsr	x9, x0, #2
  407900:	adds	w26, w8, w9
  407904:	str	w26, [x22, #16]
  407908:	b.eq	407b08 <feof@plt+0x4e08>  // b.none
  40790c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407910:	ldr	w8, [x8, #1860]
  407914:	add	x9, x22, w8, uxtw #2
  407918:	add	w8, w8, #0x1
  40791c:	str	w8, [x22, #12]
  407920:	ldr	w9, [x9, #32]
  407924:	mov	w10, #0x1a10000             	// #27328512
  407928:	add	x10, x10, x19, lsl #17
  40792c:	cmp	x10, x9
  407930:	b.ne	407ae8 <feof@plt+0x4de8>  // b.any
  407934:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407938:	ldr	w9, [x9, #1876]
  40793c:	cmp	w9, #0x1
  407940:	b.lt	4079a0 <feof@plt+0x4ca0>  // b.tstop
  407944:	cmp	w26, w8
  407948:	b.ne	40798c <feof@plt+0x4c8c>  // b.any
  40794c:	ldr	w8, [x22, #8]
  407950:	ldr	x3, [x22]
  407954:	add	x0, x22, #0x20
  407958:	mov	w1, #0x1                   	// #1
  40795c:	add	w8, w8, w26
  407960:	mov	w2, #0x1000                	// #4096
  407964:	stp	w8, wzr, [x22, #8]
  407968:	str	wzr, [x22, #16]
  40796c:	bl	402650 <fread@plt>
  407970:	ldr	w8, [x22, #16]
  407974:	lsr	x9, x0, #2
  407978:	adds	w26, w8, w9
  40797c:	str	w26, [x22, #16]
  407980:	b.eq	4079a8 <feof@plt+0x4ca8>  // b.none
  407984:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407988:	ldr	w8, [x8, #1860]
  40798c:	add	x9, x22, w8, uxtw #2
  407990:	add	w8, w8, #0x1
  407994:	str	w8, [x22, #12]
  407998:	ldr	w8, [x9, #32]
  40799c:	b	4079c0 <feof@plt+0x4cc0>
  4079a0:	mov	w8, wzr
  4079a4:	b	4079c0 <feof@plt+0x4cc0>
  4079a8:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4079ac:	add	x10, x10, #0x748
  4079b0:	ldr	w9, [x10, #4]
  4079b4:	mov	w8, wzr
  4079b8:	add	w9, w9, #0x1
  4079bc:	stp	wzr, w9, [x10]
  4079c0:	lsr	w20, w8, #1
  4079c4:	lsl	w24, w20, #3
  4079c8:	mov	x0, x24
  4079cc:	bl	402b60 <malloc@plt>
  4079d0:	cbz	x0, 407af8 <feof@plt+0x4df8>
  4079d4:	ldr	x8, [sp, #16]
  4079d8:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4079dc:	mov	x27, x0
  4079e0:	add	x11, x11, #0x744
  4079e4:	add	x8, x8, w28, uxtw #4
  4079e8:	str	w20, [x8]
  4079ec:	str	x0, [x8, #8]
  4079f0:	cbz	w20, 407888 <feof@plt+0x4b88>
  4079f4:	sub	w24, w20, #0x1
  4079f8:	ldr	w8, [x11, #16]
  4079fc:	cmp	w8, #0x1
  407a00:	b.lt	407a8c <feof@plt+0x4d8c>  // b.tstop
  407a04:	ldr	w8, [x11]
  407a08:	sub	w9, w26, w8
  407a0c:	cmp	w9, #0x1
  407a10:	b.hi	407aa4 <feof@plt+0x4da4>  // b.pmore
  407a14:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407a18:	ldr	w10, [x11, #1856]
  407a1c:	add	w10, w10, w8
  407a20:	str	w10, [x11, #1856]
  407a24:	cbz	w9, 407a30 <feof@plt+0x4d30>
  407a28:	ldr	w8, [x25, x8, lsl #2]
  407a2c:	str	w8, [x25]
  407a30:	ldr	x3, [x22]
  407a34:	add	x8, x22, w9, uxtw #2
  407a38:	add	x0, x8, #0x20
  407a3c:	mov	w1, #0x1                   	// #1
  407a40:	mov	w2, #0x1000                	// #4096
  407a44:	stp	wzr, w9, [x22, #12]
  407a48:	bl	402650 <fread@plt>
  407a4c:	ldr	w8, [x22, #16]
  407a50:	lsr	x9, x0, #2
  407a54:	add	w9, w8, w9
  407a58:	cmp	w9, #0x2
  407a5c:	str	w9, [x22, #16]
  407a60:	b.cs	407a94 <feof@plt+0x4d94>  // b.hs, b.nlast
  407a64:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407a68:	add	x11, x11, #0x748
  407a6c:	ldr	w10, [x11, #4]
  407a70:	mov	x8, xzr
  407a74:	sub	w9, w10, w9
  407a78:	add	w9, w9, #0x2
  407a7c:	stp	wzr, w9, [x11]
  407a80:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407a84:	add	x11, x11, #0x744
  407a88:	b	407ab4 <feof@plt+0x4db4>
  407a8c:	mov	x8, xzr
  407a90:	b	407ab4 <feof@plt+0x4db4>
  407a94:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407a98:	ldr	w8, [x8, #1860]
  407a9c:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407aa0:	add	x11, x11, #0x744
  407aa4:	add	x9, x22, w8, uxtw #2
  407aa8:	add	w8, w8, #0x2
  407aac:	str	w8, [x22, #12]
  407ab0:	ldr	x8, [x9, #32]
  407ab4:	str	x8, [x27]
  407ab8:	cbz	w24, 407888 <feof@plt+0x4b88>
  407abc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407ac0:	ldr	w26, [x8, #1864]
  407ac4:	add	x27, x27, #0x8
  407ac8:	sub	w24, w24, #0x1
  407acc:	b	4079f8 <feof@plt+0x4cf8>
  407ad0:	ldr	x8, [sp, #8]
  407ad4:	ldp	x9, x28, [sp, #56]
  407ad8:	str	x9, [x8]
  407adc:	str	x9, [sp, #8]
  407ae0:	cbnz	x9, 407bd0 <feof@plt+0x4ed0>
  407ae4:	b	408058 <feof@plt+0x5358>
  407ae8:	ldr	w26, [sp, #28]
  407aec:	ldr	x28, [sp, #64]
  407af0:	mov	w24, wzr
  407af4:	b	407b28 <feof@plt+0x4e28>
  407af8:	ldr	w26, [sp, #28]
  407afc:	ldr	x28, [sp, #64]
  407b00:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  407b04:	b	407b28 <feof@plt+0x4e28>
  407b08:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407b0c:	add	x9, x9, #0x748
  407b10:	ldr	w8, [x9, #4]
  407b14:	ldr	x28, [sp, #64]
  407b18:	ldr	w26, [sp, #28]
  407b1c:	mov	w24, wzr
  407b20:	add	w8, w8, #0x1
  407b24:	stp	wzr, w8, [x9]
  407b28:	cmp	w24, #0x0
  407b2c:	csel	w4, w24, w19, ne  // ne = any
  407b30:	ldr	x24, [sp, #48]
  407b34:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  407b38:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  407b3c:	add	x8, x8, #0xca3
  407b40:	add	x9, x9, #0xc93
  407b44:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  407b48:	csel	x3, x9, x8, ne  // ne = any
  407b4c:	add	x0, x0, #0xc64
  407b50:	mov	x1, x24
  407b54:	mov	w2, w26
  407b58:	bl	4080fc <feof@plt+0x53fc>
  407b5c:	ldr	x0, [sp, #56]
  407b60:	cbz	x0, 407bbc <feof@plt+0x4ebc>
  407b64:	ldr	x8, [x0]
  407b68:	str	x8, [sp, #8]
  407b6c:	cbz	w19, 407bb0 <feof@plt+0x4eb0>
  407b70:	ldr	x20, [sp]
  407b74:	mov	w8, wzr
  407b78:	mov	w19, w19
  407b7c:	b	407b8c <feof@plt+0x4e8c>
  407b80:	subs	x19, x19, #0x1
  407b84:	add	x20, x20, #0x8
  407b88:	b.eq	407bb0 <feof@plt+0x4eb0>  // b.none
  407b8c:	ldr	x9, [x20]
  407b90:	cbz	x9, 407b80 <feof@plt+0x4e80>
  407b94:	add	x9, x0, w8, uxtw #4
  407b98:	ldr	x0, [x9, #48]
  407b9c:	add	w24, w8, #0x1
  407ba0:	bl	402770 <free@plt>
  407ba4:	mov	w8, w24
  407ba8:	ldp	x24, x0, [sp, #48]
  407bac:	b	407b80 <feof@plt+0x4e80>
  407bb0:	bl	402770 <free@plt>
  407bb4:	ldr	x8, [sp, #8]
  407bb8:	b	407bc0 <feof@plt+0x4ec0>
  407bbc:	mov	x8, xzr
  407bc0:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407bc4:	add	x11, x11, #0x744
  407bc8:	str	x8, [sp, #8]
  407bcc:	cbz	x8, 408058 <feof@plt+0x5358>
  407bd0:	ldr	w8, [x11, #16]
  407bd4:	add	w26, w26, #0x1
  407bd8:	cmp	w8, #0x1
  407bdc:	b.lt	407c50 <feof@plt+0x4f50>  // b.tstop
  407be0:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407be4:	ldr	w8, [x11]
  407be8:	ldr	w9, [x9, #1864]
  407bec:	cmp	w9, w8
  407bf0:	b.ne	407c3c <feof@plt+0x4f3c>  // b.any
  407bf4:	ldr	w9, [x22, #8]
  407bf8:	ldr	x3, [x22]
  407bfc:	add	x0, x22, #0x20
  407c00:	mov	w1, #0x1                   	// #1
  407c04:	add	w8, w9, w8
  407c08:	mov	w2, #0x1000                	// #4096
  407c0c:	stp	w8, wzr, [x22, #8]
  407c10:	str	wzr, [x22, #16]
  407c14:	bl	402650 <fread@plt>
  407c18:	ldr	w8, [x22, #16]
  407c1c:	lsr	x9, x0, #2
  407c20:	adds	w8, w8, w9
  407c24:	str	w8, [x22, #16]
  407c28:	b.eq	407c58 <feof@plt+0x4f58>  // b.none
  407c2c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407c30:	ldr	w8, [x8, #1860]
  407c34:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407c38:	add	x11, x11, #0x744
  407c3c:	add	x9, x22, w8, uxtw #2
  407c40:	add	w8, w8, #0x1
  407c44:	str	w8, [x22, #12]
  407c48:	ldr	w8, [x9, #32]
  407c4c:	b	40749c <feof@plt+0x479c>
  407c50:	mov	w8, wzr
  407c54:	b	40749c <feof@plt+0x479c>
  407c58:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407c5c:	add	x10, x10, #0x748
  407c60:	ldr	w9, [x10, #4]
  407c64:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407c68:	add	x11, x11, #0x744
  407c6c:	add	w9, w9, #0x1
  407c70:	stp	wzr, w9, [x10]
  407c74:	b	40749c <feof@plt+0x479c>
  407c78:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407c7c:	add	x11, x11, #0x744
  407c80:	ldr	w9, [x11, #8]
  407c84:	ldr	w28, [x11]
  407c88:	mov	w8, wzr
  407c8c:	add	w9, w9, #0x1
  407c90:	stp	wzr, w9, [x11, #4]
  407c94:	b	4076c8 <feof@plt+0x49c8>
  407c98:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407c9c:	add	x10, x10, #0x748
  407ca0:	ldr	w9, [x10, #4]
  407ca4:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407ca8:	mov	w8, wzr
  407cac:	add	x11, x11, #0x744
  407cb0:	add	w9, w9, #0x1
  407cb4:	stp	wzr, w9, [x10]
  407cb8:	ldr	w9, [x19, #8]
  407cbc:	ldr	x28, [sp, #64]
  407cc0:	cmp	w8, w9
  407cc4:	b.ne	408054 <feof@plt+0x5354>  // b.any
  407cc8:	ldr	w8, [x11, #16]
  407ccc:	cmp	w8, #0x1
  407cd0:	b.lt	407d3c <feof@plt+0x503c>  // b.tstop
  407cd4:	ldr	w8, [x11]
  407cd8:	cmp	w27, w8
  407cdc:	b.ne	407d28 <feof@plt+0x5028>  // b.any
  407ce0:	ldr	w8, [x22, #8]
  407ce4:	ldr	x3, [x22]
  407ce8:	add	x0, x22, #0x20
  407cec:	mov	w1, #0x1                   	// #1
  407cf0:	add	w8, w8, w27
  407cf4:	mov	w2, #0x1000                	// #4096
  407cf8:	stp	w8, wzr, [x22, #8]
  407cfc:	str	wzr, [x22, #16]
  407d00:	bl	402650 <fread@plt>
  407d04:	ldr	w8, [x22, #16]
  407d08:	lsr	x9, x0, #2
  407d0c:	adds	w27, w8, w9
  407d10:	str	w27, [x22, #16]
  407d14:	b.eq	407d44 <feof@plt+0x5044>  // b.none
  407d18:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407d1c:	ldr	w8, [x8, #1860]
  407d20:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407d24:	add	x11, x11, #0x744
  407d28:	add	x9, x22, w8, uxtw #2
  407d2c:	add	w8, w8, #0x1
  407d30:	str	w8, [x22, #12]
  407d34:	ldr	w8, [x9, #32]
  407d38:	b	407d64 <feof@plt+0x5064>
  407d3c:	mov	w8, wzr
  407d40:	b	407d64 <feof@plt+0x5064>
  407d44:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407d48:	add	x10, x10, #0x748
  407d4c:	ldr	w9, [x10, #4]
  407d50:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407d54:	mov	w8, wzr
  407d58:	add	x11, x11, #0x744
  407d5c:	add	w9, w9, #0x1
  407d60:	stp	wzr, w9, [x10]
  407d64:	ldr	w9, [x19, #12]
  407d68:	cmp	w8, w9
  407d6c:	b.ne	408054 <feof@plt+0x5354>  // b.any
  407d70:	ldr	w8, [x11, #16]
  407d74:	cmp	w8, #0x1
  407d78:	b.lt	407de4 <feof@plt+0x50e4>  // b.tstop
  407d7c:	ldr	w8, [x11]
  407d80:	cmp	w27, w8
  407d84:	b.ne	407dd0 <feof@plt+0x50d0>  // b.any
  407d88:	ldr	w8, [x22, #8]
  407d8c:	ldr	x3, [x22]
  407d90:	add	x0, x22, #0x20
  407d94:	mov	w1, #0x1                   	// #1
  407d98:	add	w8, w8, w27
  407d9c:	mov	w2, #0x1000                	// #4096
  407da0:	stp	w8, wzr, [x22, #8]
  407da4:	str	wzr, [x22, #16]
  407da8:	bl	402650 <fread@plt>
  407dac:	ldr	w8, [x22, #16]
  407db0:	lsr	x9, x0, #2
  407db4:	adds	w8, w8, w9
  407db8:	str	w8, [x22, #16]
  407dbc:	b.eq	407dec <feof@plt+0x50ec>  // b.none
  407dc0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407dc4:	ldr	w8, [x8, #1860]
  407dc8:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407dcc:	add	x11, x11, #0x744
  407dd0:	add	x9, x22, w8, uxtw #2
  407dd4:	add	w8, w8, #0x1
  407dd8:	str	w8, [x22, #12]
  407ddc:	ldr	w8, [x9, #32]
  407de0:	b	407e08 <feof@plt+0x5108>
  407de4:	mov	w8, wzr
  407de8:	b	407e08 <feof@plt+0x5108>
  407dec:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407df0:	add	x10, x10, #0x748
  407df4:	ldr	w9, [x10, #4]
  407df8:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407dfc:	add	x11, x11, #0x744
  407e00:	add	w9, w9, #0x1
  407e04:	stp	wzr, w9, [x10]
  407e08:	ldr	w9, [x19, #16]
  407e0c:	cmp	w8, w9
  407e10:	b.ne	408054 <feof@plt+0x5354>  // b.any
  407e14:	add	x19, x19, #0x18
  407e18:	mov	w24, #0x20                  	// #32
  407e1c:	mov	w26, #0x1a10000             	// #27328512
  407e20:	b	407e78 <feof@plt+0x5178>
  407e24:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407e28:	ldr	w9, [x8, #1860]
  407e2c:	add	x8, x22, w9, uxtw #2
  407e30:	add	w9, w9, #0x1
  407e34:	str	w9, [x22, #12]
  407e38:	ldr	w8, [x8, #32]
  407e3c:	cmp	x26, w28, uxtw
  407e40:	b.ne	408048 <feof@plt+0x5348>  // b.any
  407e44:	ldr	w1, [x19]
  407e48:	ldr	x28, [sp, #64]
  407e4c:	cmp	w8, w1, lsl #1
  407e50:	b.ne	40804c <feof@plt+0x534c>  // b.any
  407e54:	ldr	x0, [x19, #8]
  407e58:	blr	x27
  407e5c:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407e60:	add	x11, x11, #0x744
  407e64:	add	x19, x19, #0x10
  407e68:	add	x24, x24, #0x8
  407e6c:	cmp	x24, #0x68
  407e70:	add	x26, x26, #0x20, lsl #12
  407e74:	b.eq	407f90 <feof@plt+0x5290>  // b.none
  407e78:	ldr	x27, [x28, x24]
  407e7c:	cbz	x27, 407e68 <feof@plt+0x5168>
  407e80:	ldr	w8, [x11, #16]
  407e84:	cmp	w8, #0x1
  407e88:	b.lt	40804c <feof@plt+0x534c>  // b.tstop
  407e8c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407e90:	ldr	w9, [x11]
  407e94:	ldr	w8, [x8, #1864]
  407e98:	cmp	w8, w9
  407e9c:	b.ne	407ee0 <feof@plt+0x51e0>  // b.any
  407ea0:	ldr	w8, [x22, #8]
  407ea4:	ldr	x3, [x22]
  407ea8:	add	x0, x22, #0x20
  407eac:	mov	w1, #0x1                   	// #1
  407eb0:	add	w8, w8, w9
  407eb4:	mov	w2, #0x1000                	// #4096
  407eb8:	stp	w8, wzr, [x22, #8]
  407ebc:	str	wzr, [x22, #16]
  407ec0:	bl	402650 <fread@plt>
  407ec4:	ldr	w8, [x22, #16]
  407ec8:	lsr	x9, x0, #2
  407ecc:	adds	w8, w8, w9
  407ed0:	str	w8, [x22, #16]
  407ed4:	b.eq	407f70 <feof@plt+0x5270>  // b.none
  407ed8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407edc:	ldr	w9, [x9, #1860]
  407ee0:	add	x10, x22, w9, uxtw #2
  407ee4:	add	w9, w9, #0x1
  407ee8:	str	w9, [x22, #12]
  407eec:	ldr	w28, [x10, #32]
  407ef0:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407ef4:	ldr	w10, [x10, #1876]
  407ef8:	cmp	w10, #0x1
  407efc:	b.lt	407f60 <feof@plt+0x5260>  // b.tstop
  407f00:	cmp	w8, w9
  407f04:	b.ne	407e2c <feof@plt+0x512c>  // b.any
  407f08:	ldr	w9, [x22, #8]
  407f0c:	ldr	x3, [x22]
  407f10:	add	x0, x22, #0x20
  407f14:	mov	w1, #0x1                   	// #1
  407f18:	add	w8, w9, w8
  407f1c:	mov	w2, #0x1000                	// #4096
  407f20:	stp	w8, wzr, [x22, #8]
  407f24:	str	wzr, [x22, #16]
  407f28:	bl	402650 <fread@plt>
  407f2c:	ldr	w8, [x22, #16]
  407f30:	lsr	x9, x0, #2
  407f34:	adds	w8, w8, w9
  407f38:	str	w8, [x22, #16]
  407f3c:	b.ne	407e24 <feof@plt+0x5124>  // b.any
  407f40:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407f44:	add	x10, x10, #0x748
  407f48:	ldr	w9, [x10, #4]
  407f4c:	add	w9, w9, #0x1
  407f50:	stp	wzr, w9, [x10]
  407f54:	cmp	x26, w28, uxtw
  407f58:	b.eq	407e44 <feof@plt+0x5144>  // b.none
  407f5c:	b	408048 <feof@plt+0x5348>
  407f60:	mov	w8, wzr
  407f64:	cmp	x26, w28, uxtw
  407f68:	b.eq	407e44 <feof@plt+0x5144>  // b.none
  407f6c:	b	408048 <feof@plt+0x5348>
  407f70:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407f74:	add	x11, x11, #0x744
  407f78:	ldr	w10, [x11, #8]
  407f7c:	ldr	w9, [x11]
  407f80:	mov	w28, wzr
  407f84:	add	w10, w10, #0x1
  407f88:	stp	wzr, w10, [x11, #4]
  407f8c:	b	407ef0 <feof@plt+0x51f0>
  407f90:	ldr	x8, [x22]
  407f94:	ldr	w9, [x22, #24]
  407f98:	ldr	x24, [sp, #48]
  407f9c:	ldr	w26, [sp, #28]
  407fa0:	cmp	x8, #0x0
  407fa4:	csinc	w8, w9, wzr, ne  // ne = any
  407fa8:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  407fac:	cbz	w8, 407bd0 <feof@plt+0x4ed0>
  407fb0:	cmp	w8, #0x0
  407fb4:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  407fb8:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  407fbc:	add	x8, x8, #0xbe4
  407fc0:	add	x9, x9, #0xbdb
  407fc4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  407fc8:	csel	x2, x9, x8, lt  // lt = tstop
  407fcc:	add	x0, x0, #0xbb4
  407fd0:	mov	x1, x24
  407fd4:	bl	4080fc <feof@plt+0x53fc>
  407fd8:	b	406fcc <feof@plt+0x42cc>
  407fdc:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  407fe0:	add	x9, x9, #0x748
  407fe4:	ldr	w8, [x9, #4]
  407fe8:	add	w8, w8, #0x1
  407fec:	stp	wzr, w8, [x9]
  407ff0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  407ff4:	mov	w26, #0xffffffff            	// #-1
  407ff8:	add	x2, x2, #0xbac
  407ffc:	b	408070 <feof@plt+0x5370>
  408000:	mov	w8, wzr
  408004:	ldr	w9, [x28, #104]
  408008:	cbnz	w9, 407464 <feof@plt+0x4764>
  40800c:	mov	w26, wzr
  408010:	cbnz	w8, 408058 <feof@plt+0x5358>
  408014:	b	406a2c <feof@plt+0x3d2c>
  408018:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40801c:	add	x10, x10, #0x748
  408020:	ldr	w9, [x10, #4]
  408024:	adrp	x11, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  408028:	add	x11, x11, #0x744
  40802c:	add	w9, w9, #0x1
  408030:	stp	wzr, w9, [x10]
  408034:	ldr	w9, [x28, #104]
  408038:	cbnz	w9, 407464 <feof@plt+0x4764>
  40803c:	b	40800c <feof@plt+0x530c>
  408040:	ldr	x28, [sp, #64]
  408044:	b	408054 <feof@plt+0x5354>
  408048:	ldr	x28, [sp, #64]
  40804c:	ldr	x24, [sp, #48]
  408050:	ldr	w26, [sp, #28]
  408054:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  408058:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  40805c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  408060:	cmp	w26, #0x0
  408064:	add	x8, x8, #0xbac
  408068:	add	x9, x9, #0x337
  40806c:	csel	x2, x9, x8, ge  // ge = tcont
  408070:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  408074:	eor	w3, w26, w26, asr #31
  408078:	add	x0, x0, #0xb77
  40807c:	mov	x1, x24
  408080:	bl	4080fc <feof@plt+0x53fc>
  408084:	b	406fcc <feof@plt+0x42cc>
  408088:	bl	402770 <free@plt>
  40808c:	ldp	x20, x19, [sp, #448]
  408090:	ldp	x22, x21, [sp, #432]
  408094:	ldp	x24, x23, [sp, #416]
  408098:	ldp	x26, x25, [sp, #400]
  40809c:	ldp	x28, x27, [sp, #384]
  4080a0:	ldp	x29, x30, [sp, #368]
  4080a4:	ldr	d8, [sp, #352]
  4080a8:	add	sp, sp, #0x1d0
  4080ac:	ret
  4080b0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4080b4:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4080b8:	add	x0, x0, #0xa42
  4080bc:	add	x2, x2, #0xa67
  4080c0:	mov	w1, #0x1c7                 	// #455
  4080c4:	bl	408b70 <feof@plt+0x5e70>
  4080c8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4080cc:	add	x9, x9, #0x748
  4080d0:	ldr	w8, [x9, #4]
  4080d4:	add	w8, w8, #0x1
  4080d8:	stp	wzr, w8, [x9]
  4080dc:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4080e0:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  4080e4:	add	x0, x0, #0xa42
  4080e8:	add	x2, x2, #0xb68
  4080ec:	mov	w1, #0xf8                  	// #248
  4080f0:	bl	408b70 <feof@plt+0x5e70>
  4080f4:	ldr	x0, [x0, #24]
  4080f8:	ret
  4080fc:	sub	sp, sp, #0x120
  408100:	stp	x29, x30, [sp, #256]
  408104:	stp	x28, x19, [sp, #272]
  408108:	add	x29, sp, #0x100
  40810c:	mov	x9, #0xffffffffffffffc8    	// #-56
  408110:	mov	x10, sp
  408114:	sub	x11, x29, #0x78
  408118:	movk	x9, #0xff80, lsl #32
  40811c:	add	x12, x29, #0x20
  408120:	adrp	x13, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  408124:	add	x10, x10, #0x80
  408128:	add	x11, x11, #0x38
  40812c:	ldr	x19, [x13, #1416]
  408130:	stp	x10, x9, [x29, #-16]
  408134:	stp	x12, x11, [x29, #-32]
  408138:	stp	x1, x2, [x29, #-120]
  40813c:	stp	x3, x4, [x29, #-104]
  408140:	stp	x5, x6, [x29, #-88]
  408144:	stur	x7, [x29, #-72]
  408148:	stp	q0, q1, [sp]
  40814c:	ldp	q0, q1, [x29, #-32]
  408150:	mov	x8, x0
  408154:	sub	x2, x29, #0x40
  408158:	mov	x0, x19
  40815c:	mov	x1, x8
  408160:	stp	q2, q3, [sp, #32]
  408164:	stp	q4, q5, [sp, #64]
  408168:	stp	q6, q7, [sp, #96]
  40816c:	stp	q0, q1, [x29, #-64]
  408170:	bl	402cf0 <vfprintf@plt>
  408174:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  408178:	add	x0, x0, #0xad7
  40817c:	bl	402b90 <getenv@plt>
  408180:	cbnz	x0, 408194 <feof@plt+0x5494>
  408184:	ldp	x28, x19, [sp, #272]
  408188:	ldp	x29, x30, [sp, #256]
  40818c:	add	sp, sp, #0x120
  408190:	ret
  408194:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  408198:	add	x0, x0, #0xaea
  40819c:	mov	w1, #0x21                  	// #33
  4081a0:	mov	w2, #0x1                   	// #1
  4081a4:	mov	x3, x19
  4081a8:	bl	402bf0 <fwrite@plt>
  4081ac:	mov	w0, #0x1                   	// #1
  4081b0:	bl	402bb0 <exit@plt>
  4081b4:	stp	x29, x30, [sp, #-48]!
  4081b8:	str	x21, [sp, #16]
  4081bc:	stp	x20, x19, [sp, #32]
  4081c0:	mov	x29, sp
  4081c4:	cbz	w1, 4081f4 <feof@plt+0x54f4>
  4081c8:	mov	w19, w1
  4081cc:	mov	x20, x0
  4081d0:	bl	403f98 <feof@plt+0x1298>
  4081d4:	mov	x21, x0
  4081d8:	bl	403fec <feof@plt+0x12ec>
  4081dc:	ldr	x8, [x20]
  4081e0:	mov	w9, w0
  4081e4:	subs	w19, w19, #0x1
  4081e8:	madd	x8, x21, x9, x8
  4081ec:	str	x8, [x20], #8
  4081f0:	b.ne	4081d0 <feof@plt+0x54d0>  // b.any
  4081f4:	ldp	x20, x19, [sp, #32]
  4081f8:	ldr	x21, [sp, #16]
  4081fc:	ldp	x29, x30, [sp], #48
  408200:	ret
  408204:	stp	x29, x30, [sp, #-32]!
  408208:	stp	x20, x19, [sp, #16]
  40820c:	mov	x29, sp
  408210:	cbz	w1, 408234 <feof@plt+0x5534>
  408214:	mov	w19, w1
  408218:	mov	x20, x0
  40821c:	bl	403f98 <feof@plt+0x1298>
  408220:	ldr	x8, [x20]
  408224:	subs	w19, w19, #0x1
  408228:	orr	x8, x8, x0
  40822c:	str	x8, [x20], #8
  408230:	b.ne	40821c <feof@plt+0x551c>  // b.any
  408234:	ldp	x20, x19, [sp, #16]
  408238:	ldp	x29, x30, [sp], #32
  40823c:	ret
  408240:	stp	x29, x30, [sp, #-32]!
  408244:	stp	x20, x19, [sp, #16]
  408248:	mov	x29, sp
  40824c:	cbz	w1, 408288 <feof@plt+0x5588>
  408250:	mov	x19, x0
  408254:	mov	w20, w1
  408258:	b	40826c <feof@plt+0x556c>
  40825c:	str	x0, [x19]
  408260:	subs	x20, x20, #0x1
  408264:	add	x19, x19, #0x8
  408268:	b.eq	408288 <feof@plt+0x5588>  // b.none
  40826c:	bl	403f98 <feof@plt+0x1298>
  408270:	cbz	x0, 408260 <feof@plt+0x5560>
  408274:	ldr	x8, [x19]
  408278:	cbz	x8, 40825c <feof@plt+0x555c>
  40827c:	cmp	x0, x8
  408280:	b.ge	408260 <feof@plt+0x5560>  // b.tcont
  408284:	b	40825c <feof@plt+0x555c>
  408288:	ldp	x20, x19, [sp, #16]
  40828c:	ldp	x29, x30, [sp], #32
  408290:	ret
  408294:	stp	x29, x30, [sp, #-64]!
  408298:	stp	x24, x23, [sp, #16]
  40829c:	stp	x22, x21, [sp, #32]
  4082a0:	stp	x20, x19, [sp, #48]
  4082a4:	mov	x29, sp
  4082a8:	mov	w8, #0xaaab                	// #43691
  4082ac:	movk	w8, #0xaaaa, lsl #16
  4082b0:	umull	x8, w1, w8
  4082b4:	lsr	x21, x8, #33
  4082b8:	add	w8, w21, w21, lsl #1
  4082bc:	cmp	w1, w8
  4082c0:	b.ne	408358 <feof@plt+0x5658>  // b.any
  4082c4:	cmp	w1, #0x3
  4082c8:	b.cc	408344 <feof@plt+0x5644>  // b.lo, b.ul, b.last
  4082cc:	mov	w22, wzr
  4082d0:	add	x23, x0, #0x8
  4082d4:	b	4082f4 <feof@plt+0x55f4>
  4082d8:	add	x9, x10, x24
  4082dc:	ldr	x10, [x23, #8]
  4082e0:	add	w22, w22, #0x1
  4082e4:	cmp	w22, w21
  4082e8:	add	x8, x10, x8
  4082ec:	stp	x9, x8, [x23], #24
  4082f0:	b.cs	408344 <feof@plt+0x5644>  // b.hs, b.nlast
  4082f4:	bl	403f98 <feof@plt+0x1298>
  4082f8:	mov	x19, x0
  4082fc:	bl	403f98 <feof@plt+0x1298>
  408300:	mov	x20, x0
  408304:	bl	403fec <feof@plt+0x12ec>
  408308:	mov	w8, w0
  40830c:	mul	x24, x20, x8
  408310:	bl	403f98 <feof@plt+0x1298>
  408314:	mov	x20, x0
  408318:	bl	403fec <feof@plt+0x12ec>
  40831c:	ldp	x8, x10, [x23, #-8]
  408320:	mov	w9, w0
  408324:	cmp	x8, x19
  408328:	mul	x8, x20, x9
  40832c:	b.eq	4082d8 <feof@plt+0x55d8>  // b.none
  408330:	subs	x9, x10, x24
  408334:	b.ge	4082dc <feof@plt+0x55dc>  // b.tcont
  408338:	sub	x9, x24, x10
  40833c:	stur	x19, [x23, #-8]
  408340:	b	4082dc <feof@plt+0x55dc>
  408344:	ldp	x20, x19, [sp, #48]
  408348:	ldp	x22, x21, [sp, #32]
  40834c:	ldp	x24, x23, [sp, #16]
  408350:	ldp	x29, x30, [sp], #64
  408354:	ret
  408358:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  40835c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  408360:	add	x0, x0, #0xcb4
  408364:	add	x2, x2, #0xcd8
  408368:	mov	w1, #0x67                  	// #103
  40836c:	bl	408b70 <feof@plt+0x5e70>
  408370:	stp	x29, x30, [sp, #-80]!
  408374:	stp	x26, x25, [sp, #16]
  408378:	stp	x24, x23, [sp, #32]
  40837c:	stp	x22, x21, [sp, #48]
  408380:	stp	x20, x19, [sp, #64]
  408384:	mov	x29, sp
  408388:	mov	w8, #0x8e39                	// #36409
  40838c:	movk	w8, #0x38e3, lsl #16
  408390:	mov	w9, #0xc71c                	// #50972
  408394:	mul	w8, w1, w8
  408398:	movk	w9, #0x1c71, lsl #16
  40839c:	cmp	w8, w9
  4083a0:	b.hi	4085f8 <feof@plt+0x58f8>  // b.pmore
  4083a4:	mov	w19, w1
  4083a8:	cbz	w1, 4085dc <feof@plt+0x58dc>
  4083ac:	mov	x20, x0
  4083b0:	mov	w25, wzr
  4083b4:	b	408400 <feof@plt+0x5700>
  4083b8:	str	x23, [x21, w22, uxtw #3]
  4083bc:	add	w9, w22, #0x1
  4083c0:	add	w22, w22, #0x2
  4083c4:	str	x8, [x21, w9, uxtw #3]
  4083c8:	mov	x0, x21
  4083cc:	mov	w1, w22
  4083d0:	bl	406118 <feof@plt+0x3418>
  4083d4:	ldr	q0, [x21]
  4083d8:	add	w25, w25, #0x9
  4083dc:	cmp	w25, w19
  4083e0:	str	q0, [x26]
  4083e4:	ldr	q0, [x21, #16]
  4083e8:	str	q0, [x26, #16]
  4083ec:	ldr	q0, [x21, #32]
  4083f0:	str	q0, [x26, #32]
  4083f4:	ldr	q0, [x21, #48]
  4083f8:	str	q0, [x26, #48]
  4083fc:	b.cs	4085dc <feof@plt+0x58dc>  // b.hs, b.nlast
  408400:	mov	x24, sp
  408404:	add	w8, w25, #0x1
  408408:	sub	x21, x24, #0x80
  40840c:	mov	sp, x21
  408410:	movi	v0.2d, #0x0
  408414:	stp	q0, q0, [x24, #-32]
  408418:	stp	q0, q0, [x24, #-64]
  40841c:	add	x26, x20, w8, uxtw #3
  408420:	ldr	q0, [x26]
  408424:	stur	q0, [x24, #-128]
  408428:	ldr	q0, [x26, #16]
  40842c:	stur	q0, [x24, #-112]
  408430:	ldr	q0, [x26, #32]
  408434:	stur	q0, [x24, #-96]
  408438:	ldr	q0, [x26, #48]
  40843c:	stur	q0, [x24, #-80]
  408440:	bl	403f98 <feof@plt+0x1298>
  408444:	bl	403fec <feof@plt+0x12ec>
  408448:	bl	403f98 <feof@plt+0x1298>
  40844c:	mov	x22, x0
  408450:	bl	403f98 <feof@plt+0x1298>
  408454:	mov	x23, x0
  408458:	bl	403fec <feof@plt+0x12ec>
  40845c:	ldur	x8, [x24, #-128]
  408460:	mov	w9, w0
  408464:	cmp	x8, x22
  408468:	mul	x8, x23, x9
  40846c:	b.ne	408478 <feof@plt+0x5778>  // b.any
  408470:	mov	w9, #0x1                   	// #1
  408474:	b	4084b0 <feof@plt+0x57b0>
  408478:	ldr	x9, [x21, #16]
  40847c:	cmp	x9, x22
  408480:	b.ne	40848c <feof@plt+0x578c>  // b.any
  408484:	mov	w9, #0x3                   	// #3
  408488:	b	4084b0 <feof@plt+0x57b0>
  40848c:	ldr	x9, [x21, #32]
  408490:	cmp	x9, x22
  408494:	b.ne	4084a0 <feof@plt+0x57a0>  // b.any
  408498:	mov	w9, #0x5                   	// #5
  40849c:	b	4084b0 <feof@plt+0x57b0>
  4084a0:	ldr	x9, [x21, #48]
  4084a4:	cmp	x9, x22
  4084a8:	b.ne	4085d0 <feof@plt+0x58d0>  // b.any
  4084ac:	mov	w9, #0x7                   	// #7
  4084b0:	lsl	x9, x9, #3
  4084b4:	ldr	x10, [x21, x9]
  4084b8:	mov	w22, #0x8                   	// #8
  4084bc:	add	x8, x10, x8
  4084c0:	str	x8, [x21, x9]
  4084c4:	bl	403f98 <feof@plt+0x1298>
  4084c8:	mov	x23, x0
  4084cc:	bl	403f98 <feof@plt+0x1298>
  4084d0:	mov	x24, x0
  4084d4:	bl	403fec <feof@plt+0x12ec>
  4084d8:	mov	w8, w0
  4084dc:	mov	x9, xzr
  4084e0:	mul	x8, x24, x8
  4084e4:	ldr	x10, [x21, w9, uxtw #3]
  4084e8:	cmp	x10, x23
  4084ec:	b.eq	408510 <feof@plt+0x5810>  // b.none
  4084f0:	add	x9, x9, #0x2
  4084f4:	cmp	w9, w22
  4084f8:	b.cc	4084e4 <feof@plt+0x57e4>  // b.lo, b.ul, b.last
  4084fc:	str	x23, [x21, w22, uxtw #3]
  408500:	orr	w9, w22, #0x1
  408504:	add	w22, w22, #0x2
  408508:	str	x8, [x21, w9, uxtw #3]
  40850c:	b	408520 <feof@plt+0x5820>
  408510:	add	x9, x21, x9, lsl #3
  408514:	ldr	x10, [x9, #8]
  408518:	add	x8, x10, x8
  40851c:	str	x8, [x9, #8]
  408520:	bl	403f98 <feof@plt+0x1298>
  408524:	mov	x23, x0
  408528:	bl	403f98 <feof@plt+0x1298>
  40852c:	mov	x24, x0
  408530:	bl	403fec <feof@plt+0x12ec>
  408534:	mov	w8, w0
  408538:	mov	x9, xzr
  40853c:	mul	x8, x24, x8
  408540:	ldr	x10, [x21, w9, uxtw #3]
  408544:	cmp	x10, x23
  408548:	b.eq	40856c <feof@plt+0x586c>  // b.none
  40854c:	add	x9, x9, #0x2
  408550:	cmp	w9, w22
  408554:	b.cc	408540 <feof@plt+0x5840>  // b.lo, b.ul, b.last
  408558:	str	x23, [x21, w22, uxtw #3]
  40855c:	add	w9, w22, #0x1
  408560:	add	w22, w22, #0x2
  408564:	str	x8, [x21, w9, uxtw #3]
  408568:	b	40857c <feof@plt+0x587c>
  40856c:	add	x9, x21, x9, lsl #3
  408570:	ldr	x10, [x9, #8]
  408574:	add	x8, x10, x8
  408578:	str	x8, [x9, #8]
  40857c:	bl	403f98 <feof@plt+0x1298>
  408580:	mov	x23, x0
  408584:	bl	403f98 <feof@plt+0x1298>
  408588:	mov	x24, x0
  40858c:	bl	403fec <feof@plt+0x12ec>
  408590:	mov	w8, w0
  408594:	mul	x8, x24, x8
  408598:	cbz	w22, 4083b8 <feof@plt+0x56b8>
  40859c:	mov	x9, xzr
  4085a0:	ldr	x10, [x21, w9, uxtw #3]
  4085a4:	cmp	x10, x23
  4085a8:	b.eq	4085bc <feof@plt+0x58bc>  // b.none
  4085ac:	add	x9, x9, #0x2
  4085b0:	cmp	w9, w22
  4085b4:	b.cc	4085a0 <feof@plt+0x58a0>  // b.lo, b.ul, b.last
  4085b8:	b	4083b8 <feof@plt+0x56b8>
  4085bc:	add	x9, x21, x9, lsl #3
  4085c0:	ldr	x10, [x9, #8]
  4085c4:	add	x8, x10, x8
  4085c8:	str	x8, [x9, #8]
  4085cc:	b	4083c8 <feof@plt+0x56c8>
  4085d0:	stp	x22, x8, [x21, #64]
  4085d4:	mov	w22, #0xa                   	// #10
  4085d8:	b	4084c4 <feof@plt+0x57c4>
  4085dc:	mov	sp, x29
  4085e0:	ldp	x20, x19, [sp, #64]
  4085e4:	ldp	x22, x21, [sp, #48]
  4085e8:	ldp	x24, x23, [sp, #32]
  4085ec:	ldp	x26, x25, [sp, #16]
  4085f0:	ldp	x29, x30, [sp], #80
  4085f4:	ret
  4085f8:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4085fc:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  408600:	add	x0, x0, #0xcb4
  408604:	add	x2, x2, #0xcec
  408608:	mov	w1, #0x87                  	// #135
  40860c:	bl	408b70 <feof@plt+0x5e70>
  408610:	sub	sp, sp, #0x120
  408614:	stp	x29, x30, [sp, #256]
  408618:	str	x28, [sp, #272]
  40861c:	add	x29, sp, #0x100
  408620:	mov	x8, #0xffffffffffffffc8    	// #-56
  408624:	mov	x9, sp
  408628:	sub	x10, x29, #0x78
  40862c:	movk	x8, #0xff80, lsl #32
  408630:	add	x11, x29, #0x20
  408634:	add	x9, x9, #0x80
  408638:	add	x10, x10, #0x38
  40863c:	stp	x9, x8, [x29, #-16]
  408640:	stp	x11, x10, [x29, #-32]
  408644:	stp	x1, x2, [x29, #-120]
  408648:	stp	x3, x4, [x29, #-104]
  40864c:	stp	x5, x6, [x29, #-88]
  408650:	stur	x7, [x29, #-72]
  408654:	stp	q0, q1, [sp]
  408658:	ldp	q1, q0, [x29, #-32]
  40865c:	sub	x1, x29, #0x40
  408660:	stp	q2, q3, [sp, #32]
  408664:	stp	q4, q5, [sp, #64]
  408668:	stp	q6, q7, [sp, #96]
  40866c:	stp	q1, q0, [x29, #-64]
  408670:	bl	455530 <_obstack_memory_used@@Base+0x308>
  408674:	ldr	x28, [sp, #272]
  408678:	ldp	x29, x30, [sp, #256]
  40867c:	add	sp, sp, #0x120
  408680:	ret
  408684:	stp	x29, x30, [sp, #-32]!
  408688:	stp	x20, x19, [sp, #16]
  40868c:	mov	x29, sp
  408690:	ldr	x8, [x0]
  408694:	mov	x19, x0
  408698:	mov	x20, x1
  40869c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4086a0:	ldrb	w0, [x8, #67]
  4086a4:	add	x1, x1, #0xe20
  4086a8:	mov	w2, #0x5                   	// #5
  4086ac:	bl	40bc1c <feof@plt+0x8f1c>
  4086b0:	ldr	x8, [x19]
  4086b4:	mov	x19, x0
  4086b8:	ldrb	w8, [x8, #67]
  4086bc:	mov	w0, w8
  4086c0:	bl	40bca0 <feof@plt+0x8fa0>
  4086c4:	mov	x1, x19
  4086c8:	mov	x2, x20
  4086cc:	ldp	x20, x19, [sp, #16]
  4086d0:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  4086d4:	add	x8, x8, #0xe26
  4086d8:	mov	x3, x0
  4086dc:	mov	x0, x8
  4086e0:	ldp	x29, x30, [sp], #32
  4086e4:	b	408610 <feof@plt+0x5910>
  4086e8:	sub	sp, sp, #0x20
  4086ec:	stp	x29, x30, [sp, #16]
  4086f0:	add	x29, sp, #0x10
  4086f4:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4086f8:	add	x0, x0, #0xe2f
  4086fc:	bl	402b90 <getenv@plt>
  408700:	cbz	x0, 408718 <feof@plt+0x5a18>
  408704:	mov	w2, #0xa                   	// #10
  408708:	mov	x1, xzr
  40870c:	bl	402750 <strtol@plt>
  408710:	cmp	w0, #0x0
  408714:	b.gt	408744 <feof@plt+0x5a44>
  408718:	add	x2, sp, #0x8
  40871c:	mov	w1, #0x5413                	// #21523
  408720:	mov	w0, wzr
  408724:	strh	wzr, [sp, #10]
  408728:	bl	4028a0 <ioctl@plt>
  40872c:	ldrh	w8, [sp, #10]
  408730:	mov	w9, #0x7fffffff            	// #2147483647
  408734:	cmp	w8, #0x0
  408738:	csel	w8, w9, w8, eq  // eq = none
  40873c:	cmp	w0, #0x0
  408740:	csel	w0, w8, w9, eq  // eq = none
  408744:	ldp	x29, x30, [sp, #16]
  408748:	add	sp, sp, #0x20
  40874c:	ret
  408750:	stp	x29, x30, [sp, #-32]!
  408754:	str	x19, [sp, #16]
  408758:	mov	x29, sp
  40875c:	mov	x19, x0
  408760:	cbz	w1, 408784 <feof@plt+0x5a84>
  408764:	sub	w8, w1, #0x1
  408768:	cmp	w1, #0x2
  40876c:	mov	w9, #0x7fffffff            	// #2147483647
  408770:	csel	w8, w9, w8, lt  // lt = tstop
  408774:	str	w8, [x19, #112]
  408778:	ldr	x19, [sp, #16]
  40877c:	ldp	x29, x30, [sp], #32
  408780:	ret
  408784:	ldr	x8, [x19]
  408788:	ldr	x8, [x8, #8]
  40878c:	ldr	x0, [x8, #192]
  408790:	bl	4029d0 <fileno_unlocked@plt>
  408794:	bl	4027d0 <isatty@plt>
  408798:	cbz	w0, 4087f4 <feof@plt+0x5af4>
  40879c:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  4087a0:	add	x0, x0, #0xe2f
  4087a4:	bl	402b90 <getenv@plt>
  4087a8:	cbz	x0, 4087c4 <feof@plt+0x5ac4>
  4087ac:	mov	w2, #0xa                   	// #10
  4087b0:	mov	x1, xzr
  4087b4:	bl	402750 <strtol@plt>
  4087b8:	mov	x1, x0
  4087bc:	cmp	w1, #0x0
  4087c0:	b.gt	408764 <feof@plt+0x5a64>
  4087c4:	add	x2, x29, #0x18
  4087c8:	mov	w1, #0x5413                	// #21523
  4087cc:	mov	w0, wzr
  4087d0:	strh	wzr, [x29, #26]
  4087d4:	bl	4028a0 <ioctl@plt>
  4087d8:	ldrh	w8, [x29, #26]
  4087dc:	mov	w9, #0x7fffffff            	// #2147483647
  4087e0:	cmp	w8, #0x0
  4087e4:	csel	w8, w9, w8, eq  // eq = none
  4087e8:	cmp	w0, #0x0
  4087ec:	csel	w1, w8, w9, eq  // eq = none
  4087f0:	b	408764 <feof@plt+0x5a64>
  4087f4:	mov	w8, #0x7fffffff            	// #2147483647
  4087f8:	b	408774 <feof@plt+0x5a74>
  4087fc:	stp	x29, x30, [sp, #-32]!
  408800:	stp	x20, x19, [sp, #16]
  408804:	mov	x29, sp
  408808:	mov	x19, x0
  40880c:	mov	w0, #0x48                  	// #72
  408810:	mov	w20, w1
  408814:	bl	45535c <_obstack_memory_used@@Base+0x134>
  408818:	mov	w1, wzr
  40881c:	str	x0, [x19]
  408820:	bl	413a64 <feof@plt+0x10d64>
  408824:	movi	v0.2d, #0x0
  408828:	sbfiz	x0, x20, #2, #32
  40882c:	str	w20, [x19, #68]
  408830:	stur	q0, [x19, #49]
  408834:	stur	q0, [x19, #40]
  408838:	stur	q0, [x19, #24]
  40883c:	stur	q0, [x19, #8]
  408840:	bl	45535c <_obstack_memory_used@@Base+0x134>
  408844:	cmp	w20, #0x1
  408848:	str	x0, [x19, #72]
  40884c:	b.lt	408878 <feof@plt+0x5b78>  // b.tstop
  408850:	cmp	w20, #0x1
  408854:	str	wzr, [x0]
  408858:	b.eq	408878 <feof@plt+0x5b78>  // b.none
  40885c:	mov	w8, w20
  408860:	mov	w9, #0x1                   	// #1
  408864:	ldr	x10, [x19, #72]
  408868:	str	wzr, [x10, x9, lsl #2]
  40886c:	add	x9, x9, #0x1
  408870:	cmp	x8, x9
  408874:	b.ne	408864 <feof@plt+0x5b64>  // b.any
  408878:	ldr	x8, [x19]
  40887c:	strb	wzr, [x19, #108]
  408880:	mov	x0, x19
  408884:	ldr	w1, [x8, #40]
  408888:	bl	408750 <feof@plt+0x5a50>
  40888c:	mov	w8, #0x5e                  	// #94
  408890:	mov	w9, #0x5e5e                	// #24158
  408894:	strb	w8, [x19, #118]
  408898:	adrp	x8, 408000 <feof@plt+0x5300>
  40889c:	strh	w9, [x19, #116]
  4088a0:	adrp	x9, 408000 <feof@plt+0x5300>
  4088a4:	add	x8, x8, #0x900
  4088a8:	add	x9, x9, #0x958
  4088ac:	stp	x8, x9, [x19, #136]
  4088b0:	adrp	x8, 408000 <feof@plt+0x5300>
  4088b4:	add	x8, x8, #0x9ac
  4088b8:	stp	x8, xzr, [x19, #152]
  4088bc:	adrp	x8, 408000 <feof@plt+0x5300>
  4088c0:	movi	v0.2d, #0x0
  4088c4:	add	x8, x8, #0x9e4
  4088c8:	str	wzr, [x19, #132]
  4088cc:	stur	xzr, [x19, #119]
  4088d0:	stur	wzr, [x19, #127]
  4088d4:	stur	q0, [x19, #168]
  4088d8:	stur	q0, [x19, #184]
  4088dc:	str	wzr, [x19, #200]
  4088e0:	stp	xzr, xzr, [x19, #208]
  4088e4:	stur	xzr, [x19, #222]
  4088e8:	stur	q0, [x19, #232]
  4088ec:	stur	q0, [x19, #248]
  4088f0:	str	x8, [x19, #264]
  4088f4:	ldp	x20, x19, [sp, #16]
  4088f8:	ldp	x29, x30, [sp], #32
  4088fc:	ret
  408900:	stp	x29, x30, [sp, #-48]!
  408904:	str	x21, [sp, #16]
  408908:	stp	x20, x19, [sp, #32]
  40890c:	mov	x29, sp
  408910:	mov	x19, x1
  408914:	mov	x20, x0
  408918:	mov	x0, x1
  40891c:	mov	w1, wzr
  408920:	bl	411558 <feof@plt+0xe858>
  408924:	mov	w1, w0
  408928:	mov	x0, x20
  40892c:	bl	4092c8 <feof@plt+0x65c8>
  408930:	ldr	x21, [x20]
  408934:	mov	x0, x20
  408938:	mov	x1, x19
  40893c:	bl	408c28 <feof@plt+0x5f28>
  408940:	mov	x1, x0
  408944:	mov	x0, x21
  408948:	ldp	x20, x19, [sp, #32]
  40894c:	ldr	x21, [sp, #16]
  408950:	ldp	x29, x30, [sp], #48
  408954:	b	4138ac <feof@plt+0x10bac>
  408958:	sub	sp, sp, #0x40
  40895c:	stp	x29, x30, [sp, #32]
  408960:	stp	x20, x19, [sp, #48]
  408964:	add	x29, sp, #0x20
  408968:	ldp	q1, q0, [x1]
  40896c:	mov	x1, sp
  408970:	mov	x19, x0
  408974:	stp	q1, q0, [sp]
  408978:	bl	408d4c <feof@plt+0x604c>
  40897c:	ldr	x8, [x19]
  408980:	mov	x20, x0
  408984:	mov	x1, x20
  408988:	mov	x0, x8
  40898c:	bl	413430 <feof@plt+0x10730>
  408990:	mov	x0, x20
  408994:	bl	402770 <free@plt>
  408998:	ldr	x0, [x19]
  40899c:	ldp	x20, x19, [sp, #48]
  4089a0:	ldp	x29, x30, [sp, #32]
  4089a4:	add	sp, sp, #0x40
  4089a8:	b	413db4 <feof@plt+0x110b4>
  4089ac:	stp	x29, x30, [sp, #-32]!
  4089b0:	str	x19, [sp, #16]
  4089b4:	mov	x29, sp
  4089b8:	ldr	x8, [x1, #40]
  4089bc:	ldr	w2, [x1, #56]
  4089c0:	mov	x19, x0
  4089c4:	mov	x1, x8
  4089c8:	bl	40d564 <feof@plt+0xa864>
  4089cc:	ldr	x0, [x19]
  4089d0:	bl	413934 <feof@plt+0x10c34>
  4089d4:	ldr	x0, [x19]
  4089d8:	ldr	x19, [sp, #16]
  4089dc:	ldp	x29, x30, [sp], #32
  4089e0:	b	4136e4 <feof@plt+0x109e4>
  4089e4:	stp	x29, x30, [sp, #-32]!
  4089e8:	stp	x20, x19, [sp, #16]
  4089ec:	mov	x29, sp
  4089f0:	ldr	w8, [x0, #56]
  4089f4:	cbz	w8, 408a44 <feof@plt+0x5d44>
  4089f8:	ldrb	w8, [x0, #64]
  4089fc:	ldr	x20, [x0]
  408a00:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408a04:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408a08:	add	x9, x9, #0x15d
  408a0c:	add	x10, x10, #0x186
  408a10:	cmp	w8, #0x0
  408a14:	mov	x19, x0
  408a18:	csel	x0, x10, x9, eq  // eq = none
  408a1c:	bl	402910 <gettext@plt>
  408a20:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  408a24:	ldr	x2, [x8, #1896]
  408a28:	mov	x1, x0
  408a2c:	mov	x0, x20
  408a30:	bl	413d04 <feof@plt+0x11004>
  408a34:	ldr	x0, [x19]
  408a38:	ldp	x20, x19, [sp, #16]
  408a3c:	ldp	x29, x30, [sp], #32
  408a40:	b	414130 <feof@plt+0x11430>
  408a44:	ldp	x20, x19, [sp, #16]
  408a48:	ldp	x29, x30, [sp], #32
  408a4c:	ret
  408a50:	stp	x29, x30, [sp, #-32]!
  408a54:	str	x19, [sp, #16]
  408a58:	mov	x29, sp
  408a5c:	cmp	w1, #0x0
  408a60:	mov	w8, #0x2                   	// #2
  408a64:	mov	x19, x0
  408a68:	csel	w0, w8, w1, lt  // lt = tstop
  408a6c:	bl	40bcbc <feof@plt+0x8fbc>
  408a70:	ldr	x8, [x19]
  408a74:	ldr	x19, [sp, #16]
  408a78:	and	w9, w0, #0x1
  408a7c:	strb	w9, [x8, #67]
  408a80:	ldp	x29, x30, [sp], #32
  408a84:	ret
  408a88:	stp	x29, x30, [sp, #-32]!
  408a8c:	stp	x20, x19, [sp, #16]
  408a90:	mov	x29, sp
  408a94:	ldr	x8, [x0, #264]
  408a98:	mov	x19, x0
  408a9c:	cbz	x8, 408aa8 <feof@plt+0x5da8>
  408aa0:	mov	x0, x19
  408aa4:	blr	x8
  408aa8:	bl	416be4 <feof@plt+0x13ee4>
  408aac:	ldr	x0, [x19, #72]
  408ab0:	bl	402770 <free@plt>
  408ab4:	ldr	x0, [x19]
  408ab8:	str	xzr, [x19, #72]
  408abc:	ldr	x8, [x0]
  408ac0:	ldr	x8, [x8]
  408ac4:	blr	x8
  408ac8:	ldr	x0, [x19]
  408acc:	bl	402770 <free@plt>
  408ad0:	ldr	x20, [x19, #232]
  408ad4:	str	xzr, [x19]
  408ad8:	cbz	x20, 408af4 <feof@plt+0x5df4>
  408adc:	mov	x0, x20
  408ae0:	ldr	x1, [x0, #8]!
  408ae4:	bl	40bb24 <feof@plt+0x8e24>
  408ae8:	mov	x0, x20
  408aec:	bl	402940 <_ZdlPv@plt>
  408af0:	str	xzr, [x19, #232]
  408af4:	ldp	x20, x19, [sp, #16]
  408af8:	ldp	x29, x30, [sp], #32
  408afc:	ret
  408b00:	stp	x29, x30, [sp, #-64]!
  408b04:	str	x23, [sp, #16]
  408b08:	stp	x22, x21, [sp, #32]
  408b0c:	stp	x20, x19, [sp, #48]
  408b10:	mov	x29, sp
  408b14:	cbz	x3, 408b58 <feof@plt+0x5e58>
  408b18:	mov	w19, w4
  408b1c:	mov	x21, x3
  408b20:	mov	x23, x2
  408b24:	mov	x22, x1
  408b28:	mov	x20, x0
  408b2c:	bl	402ac0 <__errno_location@plt>
  408b30:	ldr	w8, [x0]
  408b34:	stp	x22, x23, [x20]
  408b38:	stp	x21, x21, [x20, #32]
  408b3c:	stp	w19, wzr, [x20, #56]
  408b40:	str	w8, [x20, #16]
  408b44:	ldp	x20, x19, [sp, #48]
  408b48:	ldp	x22, x21, [sp, #32]
  408b4c:	ldr	x23, [sp, #16]
  408b50:	ldp	x29, x30, [sp], #64
  408b54:	ret
  408b58:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408b5c:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  408b60:	add	x0, x0, #0xc8
  408b64:	add	x2, x2, #0xe37
  408b68:	mov	w1, #0x112                 	// #274
  408b6c:	bl	408b70 <feof@plt+0x5e70>
  408b70:	stp	x29, x30, [sp, #-32]!
  408b74:	stp	x20, x19, [sp, #16]
  408b78:	mov	x29, sp
  408b7c:	mov	x19, x2
  408b80:	mov	w20, w1
  408b84:	bl	409d18 <feof@plt+0x7018>
  408b88:	mov	x2, x0
  408b8c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408b90:	add	x0, x0, #0x14d
  408b94:	mov	x1, x19
  408b98:	mov	w3, w20
  408b9c:	bl	40b7f8 <feof@plt+0x8af8>
  408ba0:	stp	x29, x30, [sp, #-64]!
  408ba4:	str	x23, [sp, #16]
  408ba8:	stp	x22, x21, [sp, #32]
  408bac:	stp	x20, x19, [sp, #48]
  408bb0:	mov	x29, sp
  408bb4:	cbz	x3, 408c00 <feof@plt+0x5f00>
  408bb8:	mov	x20, x0
  408bbc:	mov	x0, x1
  408bc0:	mov	w19, w4
  408bc4:	mov	x21, x3
  408bc8:	mov	x22, x2
  408bcc:	bl	402910 <gettext@plt>
  408bd0:	mov	x23, x0
  408bd4:	bl	402ac0 <__errno_location@plt>
  408bd8:	ldr	w8, [x0]
  408bdc:	stp	x23, x22, [x20]
  408be0:	stp	x21, x21, [x20, #32]
  408be4:	stp	w19, wzr, [x20, #56]
  408be8:	str	w8, [x20, #16]
  408bec:	ldp	x20, x19, [sp, #48]
  408bf0:	ldp	x22, x21, [sp, #32]
  408bf4:	ldr	x23, [sp, #16]
  408bf8:	ldp	x29, x30, [sp], #64
  408bfc:	ret
  408c00:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408c04:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  408c08:	add	x0, x0, #0xc8
  408c0c:	add	x2, x2, #0xe56
  408c10:	mov	w1, #0x123                 	// #291
  408c14:	bl	408b70 <feof@plt+0x5e70>
  408c18:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  408c1c:	add	x8, x8, #0xd18
  408c20:	ldr	x0, [x8, w0, uxtw #3]
  408c24:	ret
  408c28:	sub	sp, sp, #0x80
  408c2c:	stp	x29, x30, [sp, #64]
  408c30:	stp	x24, x23, [sp, #80]
  408c34:	stp	x22, x21, [sp, #96]
  408c38:	stp	x20, x19, [sp, #112]
  408c3c:	add	x29, sp, #0x40
  408c40:	ldr	w8, [x1, #56]
  408c44:	cmp	w8, #0xe
  408c48:	b.ge	408d34 <feof@plt+0x6034>  // b.tcont
  408c4c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  408c50:	add	x9, x9, #0xd90
  408c54:	mov	x19, x0
  408c58:	ldr	x0, [x9, x8, lsl #3]
  408c5c:	mov	x21, x1
  408c60:	bl	402910 <gettext@plt>
  408c64:	ldr	w8, [x21, #56]
  408c68:	mov	w9, #0x23fc                	// #9212
  408c6c:	mov	x20, x0
  408c70:	lsr	x9, x9, x8
  408c74:	tbnz	w9, #0, 408c88 <feof@plt+0x5f88>
  408c78:	adrp	x22, 455000 <_obstack_begin_1@@Base+0xa4>
  408c7c:	add	x22, x22, #0xce0
  408c80:	mov	x23, x22
  408c84:	b	408cc8 <feof@plt+0x5fc8>
  408c88:	ldr	x24, [x19]
  408c8c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  408c90:	add	x9, x9, #0xd18
  408c94:	ldr	x22, [x9, x8, lsl #3]
  408c98:	ldrb	w23, [x24, #67]
  408c9c:	mov	x0, x22
  408ca0:	bl	4026d0 <strlen@plt>
  408ca4:	mov	x2, x0
  408ca8:	mov	w0, w23
  408cac:	mov	x1, x22
  408cb0:	bl	40bc1c <feof@plt+0x8f1c>
  408cb4:	ldrb	w8, [x24, #67]
  408cb8:	mov	x23, x0
  408cbc:	mov	w0, w8
  408cc0:	bl	40bca0 <feof@plt+0x8fa0>
  408cc4:	mov	x22, x0
  408cc8:	ldr	x0, [x21, #40]
  408ccc:	add	x8, sp, #0x20
  408cd0:	mov	w1, wzr
  408cd4:	bl	430774 <feof@plt+0x2da74>
  408cd8:	ldp	q0, q1, [sp, #32]
  408cdc:	mov	x1, sp
  408ce0:	mov	x0, x19
  408ce4:	stp	q0, q1, [sp]
  408ce8:	bl	408d4c <feof@plt+0x604c>
  408cec:	mov	x19, x0
  408cf0:	adrp	x0, 456000 <_obstack_memory_used@@Base+0xdd8>
  408cf4:	add	x0, x0, #0xf0e
  408cf8:	mov	x1, x19
  408cfc:	mov	x2, x23
  408d00:	mov	x3, x20
  408d04:	mov	x4, x22
  408d08:	bl	408610 <feof@plt+0x5910>
  408d0c:	mov	x20, x0
  408d10:	mov	x0, x19
  408d14:	bl	402770 <free@plt>
  408d18:	mov	x0, x20
  408d1c:	ldp	x20, x19, [sp, #112]
  408d20:	ldp	x22, x21, [sp, #96]
  408d24:	ldp	x24, x23, [sp, #80]
  408d28:	ldp	x29, x30, [sp, #64]
  408d2c:	add	sp, sp, #0x80
  408d30:	ret
  408d34:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408d38:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  408d3c:	add	x0, x0, #0xc8
  408d40:	add	x2, x2, #0xef6
  408d44:	mov	w1, #0x16a                 	// #362
  408d48:	bl	408b70 <feof@plt+0x5e70>
  408d4c:	stp	x29, x30, [sp, #-64]!
  408d50:	str	x23, [sp, #16]
  408d54:	stp	x22, x21, [sp, #32]
  408d58:	stp	x20, x19, [sp, #48]
  408d5c:	mov	x29, sp
  408d60:	ldr	x19, [x0]
  408d64:	mov	x23, x0
  408d68:	mov	x22, x1
  408d6c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  408d70:	ldrb	w0, [x19, #67]
  408d74:	add	x1, x1, #0xe20
  408d78:	mov	w2, #0x5                   	// #5
  408d7c:	bl	40bc1c <feof@plt+0x8f1c>
  408d80:	ldrb	w8, [x19, #67]
  408d84:	mov	x19, x0
  408d88:	mov	w0, w8
  408d8c:	bl	40bca0 <feof@plt+0x8fa0>
  408d90:	ldr	x8, [x22]
  408d94:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  408d98:	ldr	x9, [x9, #1896]
  408d9c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408da0:	cmp	x8, #0x0
  408da4:	mov	x20, x0
  408da8:	csel	x21, x9, x8, eq  // eq = none
  408dac:	add	x1, x1, #0x1bd
  408db0:	mov	x0, x21
  408db4:	bl	402b40 <strcmp@plt>
  408db8:	cbz	w0, 408dfc <feof@plt+0x60fc>
  408dbc:	ldr	w3, [x22, #8]
  408dc0:	ldrb	w8, [x23, #121]
  408dc4:	cbz	w8, 408e08 <feof@plt+0x6108>
  408dc8:	ldr	w4, [x22, #12]
  408dcc:	cbz	w3, 408e10 <feof@plt+0x6110>
  408dd0:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408dd4:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408dd8:	add	x8, x8, #0x21a
  408ddc:	add	x9, x9, #0x21d
  408de0:	cmp	w4, #0x0
  408de4:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  408de8:	csel	x2, x9, x8, eq  // eq = none
  408dec:	add	x0, x0, #0x880
  408df0:	mov	w1, #0x20                  	// #32
  408df4:	bl	402a20 <snprintf@plt>
  408df8:	b	408e18 <feof@plt+0x6118>
  408dfc:	mov	w3, wzr
  408e00:	ldrb	w8, [x23, #121]
  408e04:	cbnz	w8, 408dc8 <feof@plt+0x60c8>
  408e08:	mov	w4, wzr
  408e0c:	cbnz	w3, 408dd0 <feof@plt+0x60d0>
  408e10:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  408e14:	strb	wzr, [x8, #2176]
  408e18:	mov	x1, x19
  408e1c:	mov	x2, x21
  408e20:	mov	x4, x20
  408e24:	ldp	x20, x19, [sp, #48]
  408e28:	ldp	x22, x21, [sp, #32]
  408e2c:	ldr	x23, [sp, #16]
  408e30:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408e34:	adrp	x3, 47d000 <stderr@@GLIBC_2.17+0xa78>
  408e38:	add	x0, x0, #0x1c8
  408e3c:	add	x3, x3, #0x880
  408e40:	ldp	x29, x30, [sp], #64
  408e44:	b	408610 <feof@plt+0x5910>
  408e48:	stp	x29, x30, [sp, #-32]!
  408e4c:	str	x19, [sp, #16]
  408e50:	mov	x29, sp
  408e54:	ldr	w2, [x0, #132]
  408e58:	cbz	w2, 408e74 <feof@plt+0x6174>
  408e5c:	ldp	w8, w9, [x0, #24]
  408e60:	ldr	w10, [x0, #56]
  408e64:	add	w8, w9, w8
  408e68:	add	w8, w8, w10
  408e6c:	cmp	w8, w2
  408e70:	b.ge	408e80 <feof@plt+0x6180>  // b.tcont
  408e74:	ldr	x19, [sp, #16]
  408e78:	ldp	x29, x30, [sp], #32
  408e7c:	ret
  408e80:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  408e84:	str	x0, [x29, #24]
  408e88:	ldr	x0, [x8, #1416]
  408e8c:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  408e90:	add	x8, x8, #0xf18
  408e94:	mov	w19, w1
  408e98:	mov	x1, x8
  408e9c:	bl	408eb4 <feof@plt+0x61b4>
  408ea0:	tbz	w19, #0, 408eac <feof@plt+0x61ac>
  408ea4:	ldr	x0, [x29, #24]
  408ea8:	bl	408a88 <feof@plt+0x5d88>
  408eac:	mov	w0, #0x1                   	// #1
  408eb0:	bl	402bb0 <exit@plt>
  408eb4:	sub	sp, sp, #0x110
  408eb8:	stp	x29, x30, [sp, #240]
  408ebc:	stp	x28, x19, [sp, #256]
  408ec0:	add	x29, sp, #0xf0
  408ec4:	mov	x8, #0xffffffffffffffd0    	// #-48
  408ec8:	mov	x9, sp
  408ecc:	sub	x10, x29, #0x70
  408ed0:	mov	x19, x0
  408ed4:	movk	x8, #0xff80, lsl #32
  408ed8:	add	x11, x29, #0x20
  408edc:	add	x9, x9, #0x80
  408ee0:	add	x10, x10, #0x30
  408ee4:	mov	x0, x1
  408ee8:	stp	x2, x3, [x29, #-112]
  408eec:	stp	x4, x5, [x29, #-96]
  408ef0:	stp	x6, x7, [x29, #-80]
  408ef4:	stp	q1, q2, [sp, #16]
  408ef8:	stp	q3, q4, [sp, #48]
  408efc:	str	q0, [sp]
  408f00:	stp	q5, q6, [sp, #80]
  408f04:	str	q7, [sp, #112]
  408f08:	stp	x9, x8, [x29, #-16]
  408f0c:	stp	x11, x10, [x29, #-32]
  408f10:	bl	402910 <gettext@plt>
  408f14:	ldp	q0, q1, [x29, #-32]
  408f18:	mov	x1, x0
  408f1c:	sub	x2, x29, #0x40
  408f20:	mov	x0, x19
  408f24:	stp	q0, q1, [x29, #-64]
  408f28:	bl	402cf0 <vfprintf@plt>
  408f2c:	ldp	x28, x19, [sp, #256]
  408f30:	ldp	x29, x30, [sp, #240]
  408f34:	add	sp, sp, #0x110
  408f38:	ret
  408f3c:	stp	x29, x30, [sp, #-32]!
  408f40:	str	x19, [sp, #16]
  408f44:	mov	x29, sp
  408f48:	sub	w8, w1, #0x6
  408f4c:	cmp	w8, #0x4
  408f50:	b.cc	408f88 <feof@plt+0x6288>  // b.lo, b.ul, b.last
  408f54:	sub	w8, w1, #0x2
  408f58:	cmp	w8, #0xb
  408f5c:	b.hi	409000 <feof@plt+0x6300>  // b.pmore
  408f60:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  408f64:	add	x9, x9, #0xd08
  408f68:	adr	x10, 408f78 <feof@plt+0x6278>
  408f6c:	ldrb	w11, [x9, x8]
  408f70:	add	x10, x10, x11, lsl #2
  408f74:	br	x10
  408f78:	ldrb	w8, [x0, #120]
  408f7c:	cbnz	w8, 409078 <feof@plt+0x6378>
  408f80:	ldrb	w8, [x0, #128]
  408f84:	cbnz	w8, 40907c <feof@plt+0x637c>
  408f88:	ldr	x19, [sp, #16]
  408f8c:	ldp	x29, x30, [sp], #32
  408f90:	ret
  408f94:	ldrb	w9, [x0, #120]
  408f98:	cbnz	w9, 409078 <feof@plt+0x6378>
  408f9c:	bl	408a88 <feof@plt+0x5d88>
  408fa0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  408fa4:	ldr	x0, [x8, #1416]
  408fa8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  408fac:	add	x1, x1, #0x18
  408fb0:	bl	408eb4 <feof@plt+0x61b4>
  408fb4:	mov	w0, #0x1                   	// #1
  408fb8:	bl	402bb0 <exit@plt>
  408fbc:	adrp	x2, 409000 <feof@plt+0x6300>
  408fc0:	mov	x19, x0
  408fc4:	add	x2, x2, #0xb4
  408fc8:	mov	x0, xzr
  408fcc:	mov	w1, wzr
  408fd0:	mov	x3, xzr
  408fd4:	bl	4398c0 <feof@plt+0x36bc0>
  408fd8:	str	wzr, [x29, #28]
  408fdc:	cbz	x0, 409020 <feof@plt+0x6320>
  408fe0:	adrp	x2, 409000 <feof@plt+0x6300>
  408fe4:	adrp	x3, 409000 <feof@plt+0x6300>
  408fe8:	add	x2, x2, #0x124
  408fec:	add	x3, x3, #0xb4
  408ff0:	add	x4, x29, #0x1c
  408ff4:	mov	w1, #0x2                   	// #2
  408ff8:	bl	439918 <feof@plt+0x36c18>
  408ffc:	b	409020 <feof@plt+0x6320>
  409000:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409004:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409008:	add	x0, x0, #0xc8
  40900c:	add	x2, x2, #0x31
  409010:	mov	w1, #0x231                 	// #561
  409014:	bl	408b70 <feof@plt+0x5e70>
  409018:	mov	x19, x0
  40901c:	str	wzr, [x29, #28]
  409020:	ldrb	w8, [x19, #120]
  409024:	cbnz	w8, 409078 <feof@plt+0x6378>
  409028:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40902c:	ldr	x0, [x19, #1416]
  409030:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  409034:	add	x1, x1, #0xf77
  409038:	bl	408eb4 <feof@plt+0x61b4>
  40903c:	ldr	w8, [x29, #28]
  409040:	cmp	w8, #0x1
  409044:	b.lt	409058 <feof@plt+0x6358>  // b.tstop
  409048:	ldr	x0, [x19, #1416]
  40904c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  409050:	add	x1, x1, #0xfc2
  409054:	bl	408eb4 <feof@plt+0x61b4>
  409058:	ldr	x0, [x19, #1416]
  40905c:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  409060:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  409064:	add	x1, x1, #0xffe
  409068:	add	x2, x2, #0x240
  40906c:	bl	408eb4 <feof@plt+0x61b4>
  409070:	mov	w0, #0x4                   	// #4
  409074:	bl	402bb0 <exit@plt>
  409078:	bl	4090a8 <feof@plt+0x63a8>
  40907c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409080:	ldr	x8, [x8, #1416]
  409084:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  409088:	add	x1, x1, #0xf48
  40908c:	mov	x19, x0
  409090:	mov	x0, x8
  409094:	bl	408eb4 <feof@plt+0x61b4>
  409098:	mov	x0, x19
  40909c:	bl	408a88 <feof@plt+0x5d88>
  4090a0:	mov	w0, #0x1                   	// #1
  4090a4:	bl	402bb0 <exit@plt>
  4090a8:	stp	x29, x30, [sp, #-16]!
  4090ac:	mov	x29, sp
  4090b0:	bl	402b80 <abort@plt>
  4090b4:	tbz	w2, #31, 4090bc <feof@plt+0x63bc>
  4090b8:	ret
  4090bc:	stp	x29, x30, [sp, #-48]!
  4090c0:	str	x21, [sp, #16]
  4090c4:	stp	x20, x19, [sp, #32]
  4090c8:	mov	x29, sp
  4090cc:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4090d0:	ldr	x20, [x8, #1416]
  4090d4:	adrp	x8, 456000 <_obstack_memory_used@@Base+0xdd8>
  4090d8:	adrp	x4, 455000 <_obstack_begin_1@@Base+0xa4>
  4090dc:	add	x8, x8, #0xea6
  4090e0:	add	x4, x4, #0xce0
  4090e4:	cmp	w2, #0x0
  4090e8:	mov	x19, x1
  4090ec:	csel	x21, x4, x8, eq  // eq = none
  4090f0:	cbz	w2, 409100 <feof@plt+0x6400>
  4090f4:	mov	w0, w2
  4090f8:	bl	4554b0 <_obstack_memory_used@@Base+0x288>
  4090fc:	mov	x4, x0
  409100:	mov	x0, x20
  409104:	mov	x2, x19
  409108:	mov	x3, x21
  40910c:	ldp	x20, x19, [sp, #32]
  409110:	ldr	x21, [sp, #16]
  409114:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409118:	add	x1, x1, #0x1d2
  40911c:	ldp	x29, x30, [sp], #48
  409120:	b	4026f0 <fprintf@plt>
  409124:	stp	x29, x30, [sp, #-64]!
  409128:	str	x23, [sp, #16]
  40912c:	stp	x22, x21, [sp, #32]
  409130:	stp	x20, x19, [sp, #48]
  409134:	mov	x29, sp
  409138:	orr	x8, x2, x4
  40913c:	cbnz	x8, 409148 <feof@plt+0x6448>
  409140:	mov	w0, wzr
  409144:	b	40926c <feof@plt+0x656c>
  409148:	ldr	w8, [x0]
  40914c:	mov	x23, x4
  409150:	mov	w19, w3
  409154:	mov	x21, x2
  409158:	mov	x20, x1
  40915c:	mov	x22, x0
  409160:	cbz	x2, 409184 <feof@plt+0x6484>
  409164:	cbnz	w8, 409184 <feof@plt+0x6484>
  409168:	mov	x0, x21
  40916c:	bl	454e54 <feof@plt+0x52154>
  409170:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409174:	add	x1, x1, #0xd2
  409178:	bl	402b40 <strcmp@plt>
  40917c:	cbz	w0, 40926c <feof@plt+0x656c>
  409180:	ldr	w8, [x22]
  409184:	cmp	w8, #0x13
  409188:	b.gt	409268 <feof@plt+0x6568>
  40918c:	add	w8, w8, #0x1
  409190:	str	w8, [x22]
  409194:	cbz	x23, 409280 <feof@plt+0x6580>
  409198:	mov	w1, #0x400b                	// #16395
  40919c:	mov	x0, x23
  4091a0:	bl	446fb8 <feof@plt+0x442b8>
  4091a4:	cmp	x0, #0x0
  4091a8:	csel	x23, x23, x0, eq  // eq = none
  4091ac:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4091b0:	mov	x22, x0
  4091b4:	add	x1, x1, #0x1f7
  4091b8:	mov	w2, #0x4                   	// #4
  4091bc:	mov	x0, x23
  4091c0:	bl	402980 <strncmp@plt>
  4091c4:	cbz	w0, 409224 <feof@plt+0x6524>
  4091c8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4091cc:	add	x1, x1, #0x1ef
  4091d0:	mov	w2, #0xc                   	// #12
  4091d4:	mov	x0, x23
  4091d8:	bl	402980 <strncmp@plt>
  4091dc:	cbz	w0, 409238 <feof@plt+0x6538>
  4091e0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4091e4:	add	x1, x1, #0x1fc
  4091e8:	mov	w2, #0x10                  	// #16
  4091ec:	mov	x0, x23
  4091f0:	bl	402980 <strncmp@plt>
  4091f4:	cbz	w0, 40924c <feof@plt+0x654c>
  4091f8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4091fc:	add	x1, x1, #0x20d
  409200:	mov	w2, #0xc                   	// #12
  409204:	mov	x0, x23
  409208:	bl	402980 <strncmp@plt>
  40920c:	cbnz	w0, 409284 <feof@plt+0x6584>
  409210:	ldrb	w8, [x23, #12]
  409214:	cbz	w8, 40925c <feof@plt+0x655c>
  409218:	cmp	w8, #0x28
  40921c:	b.eq	40925c <feof@plt+0x655c>  // b.none
  409220:	b	409284 <feof@plt+0x6584>
  409224:	ldrb	w8, [x23, #4]
  409228:	cmp	w8, #0x28
  40922c:	b.eq	40925c <feof@plt+0x655c>  // b.none
  409230:	cbz	w8, 40925c <feof@plt+0x655c>
  409234:	b	4091c8 <feof@plt+0x64c8>
  409238:	ldrb	w8, [x23, #12]
  40923c:	cbz	w8, 40925c <feof@plt+0x655c>
  409240:	cmp	w8, #0x28
  409244:	b.eq	40925c <feof@plt+0x655c>  // b.none
  409248:	b	4091e0 <feof@plt+0x64e0>
  40924c:	ldrb	w8, [x23, #16]
  409250:	cbz	w8, 40925c <feof@plt+0x655c>
  409254:	cmp	w8, #0x28
  409258:	b.ne	4091f8 <feof@plt+0x64f8>  // b.any
  40925c:	cbz	x22, 409268 <feof@plt+0x6568>
  409260:	mov	x0, x22
  409264:	bl	402770 <free@plt>
  409268:	mov	w0, #0x1                   	// #1
  40926c:	ldp	x20, x19, [sp, #48]
  409270:	ldp	x22, x21, [sp, #32]
  409274:	ldr	x23, [sp, #16]
  409278:	ldp	x29, x30, [sp], #64
  40927c:	ret
  409280:	mov	x22, xzr
  409284:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409288:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40928c:	ldr	x0, [x8, #1416]
  409290:	add	x9, x9, #0x1eb
  409294:	cmp	x23, #0x0
  409298:	csel	x3, x9, x23, eq  // eq = none
  40929c:	cmp	x21, #0x0
  4092a0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4092a4:	csel	x4, x9, x21, eq  // eq = none
  4092a8:	add	x1, x1, #0x1da
  4092ac:	mov	x2, x20
  4092b0:	mov	w5, w19
  4092b4:	bl	4026f0 <fprintf@plt>
  4092b8:	cbz	x22, 409140 <feof@plt+0x6440>
  4092bc:	mov	x0, x22
  4092c0:	bl	402770 <free@plt>
  4092c4:	b	409140 <feof@plt+0x6440>
  4092c8:	sub	sp, sp, #0x70
  4092cc:	stp	x29, x30, [sp, #16]
  4092d0:	stp	x28, x27, [sp, #32]
  4092d4:	stp	x26, x25, [sp, #48]
  4092d8:	stp	x24, x23, [sp, #64]
  4092dc:	stp	x22, x21, [sp, #80]
  4092e0:	stp	x20, x19, [sp, #96]
  4092e4:	add	x29, sp, #0x10
  4092e8:	str	xzr, [sp, #8]
  4092ec:	mov	x19, x0
  4092f0:	ldr	x0, [x0]
  4092f4:	mov	w20, w1
  4092f8:	ldrb	w8, [x0, #65]
  4092fc:	cbz	w8, 40930c <feof@plt+0x660c>
  409300:	bl	413db4 <feof@plt+0x110b4>
  409304:	ldr	x8, [x19]
  409308:	strb	wzr, [x8, #65]
  40930c:	cmp	w20, #0x2
  409310:	b.cc	4094f0 <feof@plt+0x67f0>  // b.lo, b.ul, b.last
  409314:	adrp	x27, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409318:	ldr	x0, [x27, #2296]
  40931c:	add	x3, sp, #0x8
  409320:	mov	w2, #0x2                   	// #2
  409324:	mov	w1, w20
  409328:	bl	42f174 <feof@plt+0x2c474>
  40932c:	ldr	x1, [sp, #8]
  409330:	cbz	x1, 4094f0 <feof@plt+0x67f0>
  409334:	ldr	x8, [x19, #208]
  409338:	cmp	x8, x1
  40933c:	b.eq	4094f0 <feof@plt+0x67f0>  // b.none
  409340:	str	x1, [x19, #208]
  409344:	ldr	w20, [x1, #20]
  409348:	cbz	w20, 4094f0 <feof@plt+0x67f0>
  40934c:	ldr	x0, [x27, #2296]
  409350:	bl	42e4f0 <feof@plt+0x2b7f0>
  409354:	str	x0, [sp, #8]
  409358:	ldr	w9, [x0]
  40935c:	ldrh	w8, [x0, #6]
  409360:	ldr	w10, [x0, #16]
  409364:	ldrb	w11, [x19, #121]
  409368:	sub	w9, w20, w9
  40936c:	lsr	w12, w9, w8
  409370:	add	w3, w12, w10
  409374:	cbz	w11, 4093c4 <feof@plt+0x66c4>
  409378:	and	w10, w8, #0xff
  40937c:	mov	w11, #0xffffffff            	// #-1
  409380:	lsl	w10, w11, w10
  409384:	bic	w9, w9, w10
  409388:	lsr	w8, w8, #8
  40938c:	lsr	w4, w9, w8
  409390:	adrp	x28, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409394:	cbz	w3, 4093d0 <feof@plt+0x66d0>
  409398:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40939c:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4093a0:	add	x8, x8, #0x21a
  4093a4:	add	x9, x9, #0x21d
  4093a8:	cmp	w4, #0x0
  4093ac:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4093b0:	csel	x2, x9, x8, eq  // eq = none
  4093b4:	add	x0, x0, #0x880
  4093b8:	mov	w1, #0x20                  	// #32
  4093bc:	bl	402a20 <snprintf@plt>
  4093c0:	b	4093d4 <feof@plt+0x66d4>
  4093c4:	mov	w4, wzr
  4093c8:	adrp	x28, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4093cc:	cbnz	w3, 409398 <feof@plt+0x6698>
  4093d0:	strb	wzr, [x28, #2176]
  4093d4:	ldr	x20, [x19]
  4093d8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4093dc:	add	x0, x0, #0x50
  4093e0:	bl	402910 <gettext@plt>
  4093e4:	ldr	x8, [sp, #8]
  4093e8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4093ec:	adrp	x2, 455000 <_obstack_begin_1@@Base+0xa4>
  4093f0:	adrp	x4, 456000 <_obstack_memory_used@@Base+0xdd8>
  4093f4:	ldr	x5, [x8, #8]
  4093f8:	adrp	x6, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4093fc:	mov	x3, x0
  409400:	add	x1, x1, #0x7c
  409404:	add	x2, x2, #0xce0
  409408:	add	x4, x4, #0xe20
  40940c:	add	x6, x6, #0x880
  409410:	mov	x0, x20
  409414:	bl	413d04 <feof@plt+0x11004>
  409418:	ldr	x1, [sp, #8]
  40941c:	ldr	w26, [x1, #20]
  409420:	cbz	w26, 4094d8 <feof@plt+0x67d8>
  409424:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409428:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40942c:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409430:	adrp	x23, 456000 <_obstack_memory_used@@Base+0xdd8>
  409434:	adrp	x24, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409438:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40943c:	add	x20, x20, #0x66
  409440:	add	x21, x21, #0x7c
  409444:	add	x22, x22, #0x8a
  409448:	add	x23, x23, #0xe20
  40944c:	add	x24, x24, #0x880
  409450:	add	x25, x25, #0x21d
  409454:	b	409498 <feof@plt+0x6798>
  409458:	strb	wzr, [x28, #2176]
  40945c:	ldr	x26, [x19]
  409460:	mov	x0, x20
  409464:	bl	402910 <gettext@plt>
  409468:	ldr	x8, [sp, #8]
  40946c:	mov	x3, x0
  409470:	mov	x0, x26
  409474:	mov	x1, x21
  409478:	ldr	x5, [x8, #8]
  40947c:	mov	x2, x22
  409480:	mov	x4, x23
  409484:	mov	x6, x24
  409488:	bl	413d04 <feof@plt+0x11004>
  40948c:	ldr	x1, [sp, #8]
  409490:	ldr	w26, [x1, #20]
  409494:	cbz	w26, 4094d8 <feof@plt+0x67d8>
  409498:	ldr	x0, [x27, #2296]
  40949c:	bl	42e4f0 <feof@plt+0x2b7f0>
  4094a0:	str	x0, [sp, #8]
  4094a4:	ldr	w8, [x0]
  4094a8:	ldrb	w9, [x0, #6]
  4094ac:	ldr	w10, [x0, #16]
  4094b0:	sub	w8, w26, w8
  4094b4:	lsr	w8, w8, w9
  4094b8:	adds	w3, w8, w10
  4094bc:	b.eq	409458 <feof@plt+0x6758>  // b.none
  4094c0:	mov	w1, #0x20                  	// #32
  4094c4:	mov	x0, x24
  4094c8:	mov	x2, x25
  4094cc:	mov	w4, wzr
  4094d0:	bl	402a20 <snprintf@plt>
  4094d4:	b	40945c <feof@plt+0x675c>
  4094d8:	ldr	x0, [x19]
  4094dc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4094e0:	add	x1, x1, #0x3a5
  4094e4:	bl	413d04 <feof@plt+0x11004>
  4094e8:	ldr	x0, [x19]
  4094ec:	bl	413db4 <feof@plt+0x110b4>
  4094f0:	ldp	x20, x19, [sp, #96]
  4094f4:	ldp	x22, x21, [sp, #80]
  4094f8:	ldp	x24, x23, [sp, #64]
  4094fc:	ldp	x26, x25, [sp, #48]
  409500:	ldp	x28, x27, [sp, #32]
  409504:	ldp	x29, x30, [sp, #16]
  409508:	add	sp, sp, #0x70
  40950c:	ret
  409510:	mov	w1, wzr
  409514:	b	411558 <feof@plt+0xe858>
  409518:	stp	x29, x30, [sp, #-64]!
  40951c:	stp	x24, x23, [sp, #16]
  409520:	stp	x22, x21, [sp, #32]
  409524:	stp	x20, x19, [sp, #48]
  409528:	mov	x29, sp
  40952c:	tbnz	w1, #31, 409594 <feof@plt+0x6894>
  409530:	mov	w19, w2
  409534:	cmp	w2, #0xd
  409538:	mov	w23, wzr
  40953c:	b.gt	40963c <feof@plt+0x693c>
  409540:	ldr	w8, [x0, #68]
  409544:	mov	w21, w1
  409548:	mov	x20, x0
  40954c:	cmp	w8, w1
  409550:	b.le	40963c <feof@plt+0x693c>
  409554:	ldr	x8, [x20, #72]
  409558:	mov	w22, w3
  40955c:	mov	w24, w21
  409560:	ldr	w23, [x8, w21, uxtw #2]
  409564:	cbz	w3, 40959c <feof@plt+0x689c>
  409568:	cbnz	w23, 4095b0 <feof@plt+0x68b0>
  40956c:	ldp	x8, x1, [x20, #168]
  409570:	mov	w0, w21
  409574:	blr	x8
  409578:	cbz	w0, 4095a4 <feof@plt+0x68a4>
  40957c:	ldrb	w8, [x20, #64]
  409580:	mov	w9, #0x4                   	// #4
  409584:	cmp	w8, #0x0
  409588:	mov	w8, #0x6                   	// #6
  40958c:	csel	w23, w8, w9, eq  // eq = none
  409590:	b	4095a8 <feof@plt+0x68a8>
  409594:	mov	w23, wzr
  409598:	b	40963c <feof@plt+0x693c>
  40959c:	str	w19, [x8, x24, lsl #2]
  4095a0:	b	40963c <feof@plt+0x693c>
  4095a4:	mov	w23, #0x1                   	// #1
  4095a8:	ldr	x8, [x20, #72]
  4095ac:	str	w23, [x8, x24, lsl #2]
  4095b0:	ldrsw	x24, [x20, #88]
  4095b4:	add	x9, x24, x24, lsl #1
  4095b8:	add	x8, x24, #0x1
  4095bc:	lsl	x9, x9, #2
  4095c0:	sub	x8, x8, #0x1
  4095c4:	cmp	x8, #0x1
  4095c8:	b.lt	4095f4 <feof@plt+0x68f4>  // b.tstop
  4095cc:	ldr	x0, [x20, #80]
  4095d0:	add	x10, x0, x9
  4095d4:	ldur	w11, [x10, #-8]
  4095d8:	sub	x10, x9, #0xc
  4095dc:	mov	x9, x10
  4095e0:	cmp	w11, w21
  4095e4:	b.ne	4095c0 <feof@plt+0x68c0>  // b.any
  4095e8:	add	x8, x0, x10
  4095ec:	ldr	w23, [x8, #8]
  4095f0:	b	4095f8 <feof@plt+0x68f8>
  4095f4:	ldr	x0, [x20, #80]
  4095f8:	add	w8, w24, #0x1
  4095fc:	mov	w9, #0xc                   	// #12
  409600:	smull	x1, w8, w9
  409604:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  409608:	add	x8, x24, x24, lsl #1
  40960c:	lsl	x8, x8, #2
  409610:	str	x0, [x20, #80]
  409614:	str	w22, [x0, x8]
  409618:	ldr	x9, [x20, #80]
  40961c:	add	x9, x9, x8
  409620:	str	w21, [x9, #4]
  409624:	ldr	x9, [x20, #80]
  409628:	add	x8, x9, x8
  40962c:	str	w19, [x8, #8]
  409630:	ldr	w8, [x20, #88]
  409634:	add	w8, w8, #0x1
  409638:	str	w8, [x20, #88]
  40963c:	mov	w0, w23
  409640:	ldp	x20, x19, [sp, #48]
  409644:	ldp	x22, x21, [sp, #32]
  409648:	ldp	x24, x23, [sp, #16]
  40964c:	ldp	x29, x30, [sp], #64
  409650:	ret
  409654:	stp	x29, x30, [sp, #-32]!
  409658:	str	x19, [sp, #16]
  40965c:	mov	x29, sp
  409660:	ldrsw	x8, [x0, #104]
  409664:	mov	x19, x0
  409668:	ldr	x0, [x0, #96]
  40966c:	lsl	x8, x8, #2
  409670:	add	x1, x8, #0x4
  409674:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  409678:	ldrsw	x8, [x19, #104]
  40967c:	ldr	w9, [x19, #88]
  409680:	str	x0, [x19, #96]
  409684:	add	w10, w8, #0x1
  409688:	str	w10, [x19, #104]
  40968c:	ldr	x19, [sp, #16]
  409690:	str	w9, [x0, x8, lsl #2]
  409694:	ldp	x29, x30, [sp], #32
  409698:	ret
  40969c:	stp	x29, x30, [sp, #-48]!
  4096a0:	stp	x22, x21, [sp, #16]
  4096a4:	stp	x20, x19, [sp, #32]
  4096a8:	mov	x29, sp
  4096ac:	ldr	w8, [x0, #104]
  4096b0:	mov	x19, x0
  4096b4:	mov	w20, w1
  4096b8:	cbz	w8, 4096d0 <feof@plt+0x69d0>
  4096bc:	ldr	x9, [x19, #96]
  4096c0:	sub	w8, w8, #0x1
  4096c4:	str	w8, [x19, #104]
  4096c8:	ldr	w21, [x9, w8, sxtw #2]
  4096cc:	b	4096d4 <feof@plt+0x69d4>
  4096d0:	mov	w21, wzr
  4096d4:	ldrsw	x8, [x19, #88]
  4096d8:	ldr	x0, [x19, #80]
  4096dc:	add	x8, x8, x8, lsl #1
  4096e0:	lsl	x22, x8, #2
  4096e4:	add	x1, x22, #0xc
  4096e8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4096ec:	str	x0, [x19, #80]
  4096f0:	str	w20, [x0, x22]
  4096f4:	ldr	x8, [x19, #80]
  4096f8:	mov	w9, #0xf                   	// #15
  4096fc:	add	x8, x8, x22
  409700:	str	w21, [x8, #4]
  409704:	ldr	x8, [x19, #80]
  409708:	add	x8, x8, x22
  40970c:	str	w9, [x8, #8]
  409710:	ldr	w8, [x19, #88]
  409714:	add	w8, w8, #0x1
  409718:	str	w8, [x19, #88]
  40971c:	ldp	x20, x19, [sp, #32]
  409720:	ldp	x22, x21, [sp, #16]
  409724:	ldp	x29, x30, [sp], #48
  409728:	ret
  40972c:	sub	sp, sp, #0x90
  409730:	stp	x29, x30, [sp, #64]
  409734:	stp	x26, x25, [sp, #80]
  409738:	stp	x24, x23, [sp, #96]
  40973c:	stp	x22, x21, [sp, #112]
  409740:	stp	x20, x19, [sp, #128]
  409744:	add	x29, sp, #0x40
  409748:	mov	x20, x1
  40974c:	mov	x19, x0
  409750:	mov	x0, x1
  409754:	mov	w1, wzr
  409758:	bl	411558 <feof@plt+0xe858>
  40975c:	ldr	w21, [x20, #56]
  409760:	mov	w1, w0
  409764:	cmp	w21, #0xa
  409768:	b.eq	409778 <feof@plt+0x6a78>  // b.none
  40976c:	cmp	w21, #0x6
  409770:	mov	w8, w21
  409774:	b.ne	4097c4 <feof@plt+0x6ac4>  // b.any
  409778:	ldrb	w8, [x19, #129]
  40977c:	cbnz	w8, 4097d4 <feof@plt+0x6ad4>
  409780:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409784:	ldr	x0, [x8, #2296]
  409788:	bl	42f4e4 <feof@plt+0x2c7e4>
  40978c:	cbz	w0, 409798 <feof@plt+0x6a98>
  409790:	ldrb	w8, [x19, #130]
  409794:	cbz	w8, 4097d4 <feof@plt+0x6ad4>
  409798:	ldr	w8, [x20, #56]
  40979c:	cmp	w8, #0xa
  4097a0:	b.ne	4097c4 <feof@plt+0x6ac4>  // b.any
  4097a4:	ldrb	w8, [x19, #122]
  4097a8:	mov	w9, #0x4                   	// #4
  4097ac:	cmp	w8, #0x0
  4097b0:	mov	w8, #0x6                   	// #6
  4097b4:	csel	w21, w8, w9, eq  // eq = none
  4097b8:	str	w21, [x20, #56]
  4097bc:	mov	w8, w21
  4097c0:	b	4097e0 <feof@plt+0x6ae0>
  4097c4:	cmp	w8, #0x8
  4097c8:	b.ne	4097e0 <feof@plt+0x6ae0>  // b.any
  4097cc:	ldrb	w8, [x19, #220]
  4097d0:	cbz	w8, 4097dc <feof@plt+0x6adc>
  4097d4:	mov	w0, wzr
  4097d8:	b	409bc4 <feof@plt+0x6ec4>
  4097dc:	mov	w8, #0x8                   	// #8
  4097e0:	ldr	w9, [x19, #216]
  4097e4:	cmp	w9, #0x1
  4097e8:	b.lt	40980c <feof@plt+0x6b0c>  // b.tstop
  4097ec:	cmp	w8, #0xd
  4097f0:	b.eq	4097fc <feof@plt+0x6afc>  // b.none
  4097f4:	cmp	w8, #0x3
  4097f8:	b.ne	409bf0 <feof@plt+0x6ef0>  // b.any
  4097fc:	cmp	w9, #0x1
  409800:	b.ne	409bf0 <feof@plt+0x6ef0>  // b.any
  409804:	ldr	x0, [x19]
  409808:	bl	414130 <feof@plt+0x11430>
  40980c:	ldrb	w8, [x19, #64]
  409810:	cbz	w8, 409828 <feof@plt+0x6b28>
  409814:	ldr	w8, [x20, #56]
  409818:	cmp	w8, #0x6
  40981c:	b.ne	409828 <feof@plt+0x6b28>  // b.any
  409820:	mov	w8, #0x4                   	// #4
  409824:	str	w8, [x20, #56]
  409828:	ldr	w0, [x20, #60]
  40982c:	cbz	w0, 40983c <feof@plt+0x6b3c>
  409830:	ldr	w8, [x19, #124]
  409834:	cmp	w0, w8
  409838:	b.ne	409ac8 <feof@plt+0x6dc8>  // b.any
  40983c:	ldr	w8, [x20, #56]
  409840:	cmp	w8, #0x8
  409844:	b.eq	409868 <feof@plt+0x6b68>  // b.none
  409848:	ldr	w2, [x19, #132]
  40984c:	cbz	w2, 409868 <feof@plt+0x6b68>
  409850:	ldp	w8, w9, [x19, #24]
  409854:	ldr	w10, [x19, #56]
  409858:	add	w8, w9, w8
  40985c:	add	w8, w8, w10
  409860:	cmp	w8, w2
  409864:	b.ge	409c5c <feof@plt+0x6f5c>  // b.tcont
  409868:	ldr	w8, [x19, #216]
  40986c:	add	w8, w8, #0x1
  409870:	str	w8, [x19, #216]
  409874:	ldr	w8, [x20, #56]
  409878:	cmp	w8, #0xd
  40987c:	b.eq	409888 <feof@plt+0x6b88>  // b.none
  409880:	cmp	w8, #0x3
  409884:	b.ne	4098c0 <feof@plt+0x6bc0>  // b.any
  409888:	ldr	w9, [x19, #24]
  40988c:	cmp	w9, #0x0
  409890:	b.gt	4098a0 <feof@plt+0x6ba0>
  409894:	ldr	w9, [x19, #28]
  409898:	cmp	w9, #0x1
  40989c:	b.lt	4098a8 <feof@plt+0x6ba8>  // b.tstop
  4098a0:	ldrb	w9, [x19, #120]
  4098a4:	cbz	w9, 409c28 <feof@plt+0x6f28>
  4098a8:	ldr	x9, [x19, #160]
  4098ac:	cbz	x9, 4098c0 <feof@plt+0x6bc0>
  4098b0:	ldp	x1, x2, [x20]
  4098b4:	mov	x0, x19
  4098b8:	blr	x9
  4098bc:	ldr	w8, [x20, #56]
  4098c0:	cmp	w21, #0x6
  4098c4:	b.ne	4098e8 <feof@plt+0x6be8>  // b.any
  4098c8:	cmp	w8, #0x4
  4098cc:	b.ne	4098e8 <feof@plt+0x6be8>  // b.any
  4098d0:	ldr	w8, [x19, #56]
  4098d4:	add	w8, w8, #0x1
  4098d8:	str	w8, [x19, #56]
  4098dc:	ldr	w8, [x19, #244]
  4098e0:	cbnz	w8, 409914 <feof@plt+0x6c14>
  4098e4:	b	409900 <feof@plt+0x6c00>
  4098e8:	add	x8, x19, w8, sxtw #2
  4098ec:	ldr	w9, [x8, #8]
  4098f0:	add	w9, w9, #0x1
  4098f4:	str	w9, [x8, #8]
  4098f8:	ldr	w8, [x19, #244]
  4098fc:	cbnz	w8, 409914 <feof@plt+0x6c14>
  409900:	ldr	x8, [x19, #248]
  409904:	cbz	x8, 409914 <feof@plt+0x6c14>
  409908:	mov	x0, x19
  40990c:	blr	x8
  409910:	ldr	w8, [x19, #244]
  409914:	add	w8, w8, #0x1
  409918:	mov	x9, x20
  40991c:	str	w8, [x19, #244]
  409920:	str	xzr, [x9, #48]!
  409924:	str	x9, [x20, #24]
  409928:	ldr	x0, [x19]
  40992c:	mov	x1, x20
  409930:	bl	411ab0 <feof@plt+0xedb0>
  409934:	ldr	x8, [x19, #136]
  409938:	mov	x0, x19
  40993c:	mov	x1, x20
  409940:	blr	x8
  409944:	ldr	x0, [x19]
  409948:	bl	4135bc <feof@plt+0x108bc>
  40994c:	ldrb	w8, [x19, #119]
  409950:	cbz	w8, 4099f0 <feof@plt+0x6cf0>
  409954:	ldr	x8, [x19, #184]
  409958:	ldp	w3, w1, [x20, #56]
  40995c:	mov	x0, x19
  409960:	mov	w2, w21
  409964:	blr	x8
  409968:	cbz	x0, 4099f0 <feof@plt+0x6cf0>
  40996c:	ldr	x23, [x19]
  409970:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409974:	mov	x22, x0
  409978:	add	x1, x1, #0x221
  40997c:	mov	x0, x23
  409980:	bl	413430 <feof@plt+0x10730>
  409984:	ldr	w8, [x20, #56]
  409988:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  40998c:	add	x9, x9, #0xd18
  409990:	ldrb	w24, [x23, #67]
  409994:	ldr	x25, [x9, x8, lsl #3]
  409998:	mov	x0, x25
  40999c:	bl	4026d0 <strlen@plt>
  4099a0:	mov	x2, x0
  4099a4:	mov	w0, w24
  4099a8:	mov	x1, x25
  4099ac:	bl	40bc1c <feof@plt+0x8f1c>
  4099b0:	mov	x1, x0
  4099b4:	mov	x0, x23
  4099b8:	bl	413430 <feof@plt+0x10730>
  4099bc:	mov	x0, x23
  4099c0:	mov	x1, x22
  4099c4:	bl	413430 <feof@plt+0x10730>
  4099c8:	ldrb	w0, [x23, #67]
  4099cc:	bl	40bca0 <feof@plt+0x8fa0>
  4099d0:	mov	x1, x0
  4099d4:	mov	x0, x23
  4099d8:	bl	413430 <feof@plt+0x10730>
  4099dc:	mov	w1, #0x5d                  	// #93
  4099e0:	mov	x0, x23
  4099e4:	bl	41164c <feof@plt+0xe94c>
  4099e8:	mov	x0, x22
  4099ec:	bl	402770 <free@plt>
  4099f0:	ldr	x8, [x19, #152]
  4099f4:	mov	x0, x19
  4099f8:	mov	x1, x20
  4099fc:	mov	w2, w21
  409a00:	blr	x8
  409a04:	ldrb	w8, [x19, #229]
  409a08:	cbz	w8, 409b8c <feof@plt+0x6e8c>
  409a0c:	ldr	x21, [x19]
  409a10:	cbz	x21, 409bf8 <feof@plt+0x6ef8>
  409a14:	ldr	x24, [x20, #40]
  409a18:	cbz	x24, 409c10 <feof@plt+0x6f10>
  409a1c:	ldr	w8, [x24, #120]
  409a20:	cbz	w8, 409b84 <feof@plt+0x6e84>
  409a24:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409a28:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409a2c:	mov	w25, wzr
  409a30:	add	x22, x22, #0x23b
  409a34:	add	x23, x23, #0x243
  409a38:	b	409ab4 <feof@plt+0x6db4>
  409a3c:	ldr	x8, [x24, #152]
  409a40:	sub	w9, w25, #0x2
  409a44:	add	x8, x8, w9, sxtw #3
  409a48:	ldr	x26, [x8]
  409a4c:	add	x8, sp, #0x20
  409a50:	ldr	w0, [x26]
  409a54:	bl	4171b0 <feof@plt+0x144b0>
  409a58:	mov	x0, x21
  409a5c:	mov	x1, x22
  409a60:	bl	413430 <feof@plt+0x10730>
  409a64:	ldr	x1, [sp, #32]
  409a68:	mov	x0, x21
  409a6c:	bl	40b9d0 <feof@plt+0x8cd0>
  409a70:	ldr	w0, [x26, #4]
  409a74:	mov	x8, sp
  409a78:	bl	4171b0 <feof@plt+0x144b0>
  409a7c:	ldp	w2, w3, [sp, #40]
  409a80:	ldp	w4, w5, [sp, #8]
  409a84:	mov	x0, x21
  409a88:	mov	x1, x23
  409a8c:	bl	413c68 <feof@plt+0x10f68>
  409a90:	ldr	x1, [x26, #8]
  409a94:	mov	x0, x21
  409a98:	bl	40b9d0 <feof@plt+0x8cd0>
  409a9c:	mov	x0, x21
  409aa0:	bl	413db4 <feof@plt+0x110b4>
  409aa4:	ldr	w8, [x24, #120]
  409aa8:	add	w25, w25, #0x1
  409aac:	cmp	w25, w8
  409ab0:	b.cs	409b80 <feof@plt+0x6e80>  // b.hs, b.nlast
  409ab4:	cmp	w25, #0x1
  409ab8:	b.gt	409a3c <feof@plt+0x6d3c>
  409abc:	add	x8, x24, w25, sxtw #3
  409ac0:	add	x8, x8, #0x80
  409ac4:	b	409a48 <feof@plt+0x6d48>
  409ac8:	ldp	x8, x1, [x19, #168]
  409acc:	blr	x8
  409ad0:	cbz	w0, 409bc4 <feof@plt+0x6ec4>
  409ad4:	ldr	w8, [x19, #88]
  409ad8:	cmp	w8, #0x1
  409adc:	b.lt	409b60 <feof@plt+0x6e60>  // b.tstop
  409ae0:	mov	x0, x20
  409ae4:	mov	w1, wzr
  409ae8:	bl	411558 <feof@plt+0xe858>
  409aec:	ldr	w23, [x19, #88]
  409af0:	cmp	w23, #0x1
  409af4:	b.lt	409b60 <feof@plt+0x6e60>  // b.tstop
  409af8:	mov	w22, w0
  409afc:	adrp	x24, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409b00:	mov	w25, #0xc                   	// #12
  409b04:	b	409b14 <feof@plt+0x6e14>
  409b08:	mov	w23, w9
  409b0c:	cmp	w23, #0x0
  409b10:	b.le	409b60 <feof@plt+0x6e60>
  409b14:	ldr	x9, [x19, #80]
  409b18:	sxtw	x8, w23
  409b1c:	sub	x23, x8, #0x1
  409b20:	mul	x8, x23, x25
  409b24:	ldr	x0, [x24, #2296]
  409b28:	ldr	w1, [x9, x8]
  409b2c:	mov	w2, w22
  409b30:	bl	42f5ac <feof@plt+0x2c8ac>
  409b34:	tbnz	w0, #31, 409b0c <feof@plt+0x6e0c>
  409b38:	ldr	x8, [x19, #80]
  409b3c:	madd	x9, x23, x25, x8
  409b40:	ldp	w9, w8, [x9, #4]
  409b44:	cmp	w8, #0xf
  409b48:	b.eq	409b08 <feof@plt+0x6e08>  // b.none
  409b4c:	cbz	w9, 409b5c <feof@plt+0x6e5c>
  409b50:	ldr	w10, [x20, #60]
  409b54:	cmp	w9, w10
  409b58:	b.ne	409b0c <feof@plt+0x6e0c>  // b.any
  409b5c:	cbnz	w8, 409b70 <feof@plt+0x6e70>
  409b60:	ldr	x8, [x19, #72]
  409b64:	ldrsw	x9, [x20, #60]
  409b68:	ldr	w8, [x8, x9, lsl #2]
  409b6c:	cbz	w8, 409be0 <feof@plt+0x6ee0>
  409b70:	str	w8, [x20, #56]
  409b74:	cmp	w8, #0x1
  409b78:	b.eq	4097d4 <feof@plt+0x6ad4>  // b.none
  409b7c:	b	409840 <feof@plt+0x6b40>
  409b80:	ldr	x21, [x19]
  409b84:	mov	x0, x21
  409b88:	bl	4136e4 <feof@plt+0x109e4>
  409b8c:	ldr	w1, [x20, #56]
  409b90:	mov	x0, x19
  409b94:	bl	408f3c <feof@plt+0x623c>
  409b98:	str	xzr, [x20, #48]
  409b9c:	ldr	x0, [x19, #232]
  409ba0:	cbz	x0, 409bb4 <feof@plt+0x6eb4>
  409ba4:	ldr	x1, [x20, #40]
  409ba8:	ldrb	w8, [x1, #161]
  409bac:	cbnz	w8, 409bb4 <feof@plt+0x6eb4>
  409bb0:	bl	40f3e8 <feof@plt+0xc6e8>
  409bb4:	ldr	w8, [x19, #216]
  409bb8:	mov	w0, #0x1                   	// #1
  409bbc:	sub	w8, w8, #0x1
  409bc0:	str	w8, [x19, #216]
  409bc4:	ldp	x20, x19, [sp, #128]
  409bc8:	ldp	x22, x21, [sp, #112]
  409bcc:	ldp	x24, x23, [sp, #96]
  409bd0:	ldp	x26, x25, [sp, #80]
  409bd4:	ldp	x29, x30, [sp, #64]
  409bd8:	add	sp, sp, #0x90
  409bdc:	ret
  409be0:	ldr	w8, [x20, #56]
  409be4:	cmp	w8, #0x1
  409be8:	b.eq	4097d4 <feof@plt+0x6ad4>  // b.none
  409bec:	b	409840 <feof@plt+0x6b40>
  409bf0:	mov	x0, x19
  409bf4:	bl	409c78 <feof@plt+0x6f78>
  409bf8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409bfc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409c00:	add	x0, x0, #0xc8
  409c04:	add	x2, x2, #0x224
  409c08:	mov	w1, #0x322                 	// #802
  409c0c:	bl	408b70 <feof@plt+0x5e70>
  409c10:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409c14:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409c18:	add	x0, x0, #0xc8
  409c1c:	add	x2, x2, #0x224
  409c20:	mov	w1, #0x323                 	// #803
  409c24:	bl	408b70 <feof@plt+0x5e70>
  409c28:	mov	x0, x20
  409c2c:	bl	409510 <feof@plt+0x6810>
  409c30:	add	x8, sp, #0x20
  409c34:	bl	4171b0 <feof@plt+0x144b0>
  409c38:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409c3c:	ldr	x2, [sp, #32]
  409c40:	ldr	x0, [x8, #1416]
  409c44:	ldr	w3, [sp, #40]
  409c48:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409c4c:	add	x1, x1, #0x8d
  409c50:	bl	408eb4 <feof@plt+0x61b4>
  409c54:	mov	w0, #0x4                   	// #4
  409c58:	bl	402bb0 <exit@plt>
  409c5c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409c60:	ldr	x0, [x8, #1416]
  409c64:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  409c68:	add	x1, x1, #0xf18
  409c6c:	bl	408eb4 <feof@plt+0x61b4>
  409c70:	mov	w0, #0x1                   	// #1
  409c74:	bl	402bb0 <exit@plt>
  409c78:	stp	x29, x30, [sp, #-32]!
  409c7c:	str	x19, [sp, #16]
  409c80:	mov	x29, sp
  409c84:	ldr	w8, [x0, #216]
  409c88:	mov	x19, x0
  409c8c:	cmp	w8, #0x2
  409c90:	b.gt	409c9c <feof@plt+0x6f9c>
  409c94:	ldr	x0, [x19]
  409c98:	bl	414130 <feof@plt+0x11430>
  409c9c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409ca0:	ldr	x0, [x8, #1416]
  409ca4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409ca8:	add	x1, x1, #0x27c
  409cac:	bl	408eb4 <feof@plt+0x61b4>
  409cb0:	mov	w1, #0x3                   	// #3
  409cb4:	mov	x0, x19
  409cb8:	bl	408f3c <feof@plt+0x623c>
  409cbc:	bl	4090a8 <feof@plt+0x63a8>
  409cc0:	tbnz	w0, #31, 409cf8 <feof@plt+0x6ff8>
  409cc4:	mov	w8, w0
  409cc8:	cbz	w0, 409cf0 <feof@plt+0x6ff0>
  409ccc:	mov	w9, #0xcccd                	// #52429
  409cd0:	mov	w0, wzr
  409cd4:	movk	w9, #0xcccc, lsl #16
  409cd8:	umull	x10, w8, w9
  409cdc:	cmp	w8, #0x9
  409ce0:	lsr	x8, x10, #35
  409ce4:	add	w0, w0, #0x1
  409ce8:	b.hi	409cd8 <feof@plt+0x6fd8>  // b.pmore
  409cec:	ret
  409cf0:	mov	w0, #0x1                   	// #1
  409cf4:	ret
  409cf8:	stp	x29, x30, [sp, #-16]!
  409cfc:	mov	x29, sp
  409d00:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409d04:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409d08:	add	x0, x0, #0xc8
  409d0c:	add	x2, x2, #0xbd
  409d10:	mov	w1, #0x415                 	// #1045
  409d14:	bl	408b70 <feof@plt+0x5e70>
  409d18:	ldrb	w8, [x0]
  409d1c:	mov	x9, x0
  409d20:	cmp	w8, #0x2e
  409d24:	b.ne	409d50 <feof@plt+0x7050>  // b.any
  409d28:	mov	x9, x0
  409d2c:	ldrb	w8, [x9, #1]
  409d30:	cmp	w8, #0x2e
  409d34:	b.ne	409d78 <feof@plt+0x7078>  // b.any
  409d38:	ldrb	w8, [x9, #2]
  409d3c:	cmp	w8, #0x2f
  409d40:	b.ne	409d78 <feof@plt+0x7078>  // b.any
  409d44:	ldrb	w8, [x9, #3]!
  409d48:	cmp	w8, #0x2e
  409d4c:	b.eq	409d2c <feof@plt+0x702c>  // b.none
  409d50:	cmp	w8, #0x67
  409d54:	b.ne	409d78 <feof@plt+0x7078>  // b.any
  409d58:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  409d5c:	add	x8, x8, #0xcf
  409d60:	ldrb	w10, [x9, #1]!
  409d64:	ldrb	w11, [x8], #1
  409d68:	cbz	w11, 409d78 <feof@plt+0x7078>
  409d6c:	cbz	w10, 409d78 <feof@plt+0x7078>
  409d70:	cmp	w10, w11
  409d74:	b.eq	409d60 <feof@plt+0x7060>  // b.none
  409d78:	mov	x8, x9
  409d7c:	cmp	x9, x0
  409d80:	b.ls	409d94 <feof@plt+0x7094>  // b.plast
  409d84:	mov	x9, x8
  409d88:	ldrb	w10, [x9, #-1]!
  409d8c:	cmp	w10, #0x2f
  409d90:	b.ne	409d78 <feof@plt+0x7078>  // b.any
  409d94:	mov	x0, x8
  409d98:	ret
  409d9c:	sub	sp, sp, #0x120
  409da0:	stp	x29, x30, [sp, #256]
  409da4:	stp	x28, x19, [sp, #272]
  409da8:	add	x29, sp, #0x100
  409dac:	mov	x8, #0xffffffffffffffc8    	// #-56
  409db0:	mov	x9, sp
  409db4:	add	x10, sp, #0x80
  409db8:	movk	x8, #0xff80, lsl #32
  409dbc:	add	x11, x29, #0x20
  409dc0:	add	x9, x9, #0x80
  409dc4:	add	x10, x10, #0x38
  409dc8:	mov	x19, x0
  409dcc:	stp	x1, x2, [sp, #128]
  409dd0:	stp	x3, x4, [sp, #144]
  409dd4:	stp	x5, x6, [sp, #160]
  409dd8:	str	x7, [sp, #176]
  409ddc:	stp	q0, q1, [sp]
  409de0:	stp	q2, q3, [sp, #32]
  409de4:	stp	q4, q5, [sp, #64]
  409de8:	stp	q6, q7, [sp, #96]
  409dec:	stp	x9, x8, [x29, #-56]
  409df0:	stp	x11, x10, [x29, #-72]
  409df4:	bl	402ac0 <__errno_location@plt>
  409df8:	ldr	w8, [x0]
  409dfc:	sub	x9, x29, #0x48
  409e00:	mov	x0, x19
  409e04:	stur	x9, [x29, #-32]
  409e08:	stur	w8, [x29, #-24]
  409e0c:	bl	402910 <gettext@plt>
  409e10:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409e14:	ldr	x8, [x19, #944]
  409e18:	stur	x0, [x29, #-40]
  409e1c:	stur	xzr, [x29, #-16]
  409e20:	sub	x1, x29, #0x28
  409e24:	ldr	x0, [x8]
  409e28:	bl	4136a8 <feof@plt+0x109a8>
  409e2c:	ldr	x8, [x19, #944]
  409e30:	ldr	x0, [x8]
  409e34:	bl	414130 <feof@plt+0x11430>
  409e38:	ldp	x28, x19, [sp, #272]
  409e3c:	ldp	x29, x30, [sp, #256]
  409e40:	add	sp, sp, #0x120
  409e44:	ret
  409e48:	sub	sp, sp, #0x1e0
  409e4c:	stp	x29, x30, [sp, #432]
  409e50:	stp	x28, x21, [sp, #448]
  409e54:	stp	x20, x19, [sp, #464]
  409e58:	add	x29, sp, #0x1b0
  409e5c:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409e60:	mov	x20, x2
  409e64:	mov	w2, w1
  409e68:	ldr	x1, [x8, #2296]
  409e6c:	mov	x19, x0
  409e70:	stp	x3, x4, [sp, #128]
  409e74:	add	x0, sp, #0xa8
  409e78:	mov	x3, xzr
  409e7c:	stp	x5, x6, [sp, #144]
  409e80:	str	x7, [sp, #160]
  409e84:	stp	q1, q2, [sp, #16]
  409e88:	stp	q3, q4, [sp, #48]
  409e8c:	str	q0, [sp]
  409e90:	stp	q5, q6, [sp, #80]
  409e94:	str	q7, [sp, #112]
  409e98:	add	x21, sp, #0xa8
  409e9c:	bl	430594 <feof@plt+0x2d894>
  409ea0:	mov	x8, #0xffffffffffffffd8    	// #-40
  409ea4:	mov	x9, sp
  409ea8:	add	x10, sp, #0x80
  409eac:	movk	x8, #0xff80, lsl #32
  409eb0:	add	x11, x29, #0x30
  409eb4:	add	x9, x9, #0x80
  409eb8:	add	x10, x10, #0x28
  409ebc:	mov	x0, x20
  409ec0:	stp	x9, x8, [x29, #-80]
  409ec4:	stp	x11, x10, [x29, #-96]
  409ec8:	bl	402910 <gettext@plt>
  409ecc:	mov	x20, x0
  409ed0:	bl	402ac0 <__errno_location@plt>
  409ed4:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  409ed8:	ldr	w8, [x0]
  409edc:	ldr	d0, [x10, #3592]
  409ee0:	sub	x9, x29, #0x60
  409ee4:	stp	x20, x9, [x29, #-64]
  409ee8:	stur	w8, [x29, #-48]
  409eec:	stp	x21, x21, [x29, #-32]
  409ef0:	stur	d0, [x29, #-8]
  409ef4:	ldrb	w8, [x19, #220]
  409ef8:	cbnz	w8, 409f5c <feof@plt+0x725c>
  409efc:	ldr	x0, [x19]
  409f00:	bl	413924 <feof@plt+0x10c24>
  409f04:	ldr	x20, [x19]
  409f08:	mov	x21, x0
  409f0c:	sub	x1, x29, #0x40
  409f10:	mov	x0, x19
  409f14:	bl	408c28 <feof@plt+0x5f28>
  409f18:	mov	x1, x0
  409f1c:	mov	x0, x20
  409f20:	bl	4138ac <feof@plt+0x10bac>
  409f24:	ldr	x0, [x19]
  409f28:	sub	x1, x29, #0x40
  409f2c:	bl	411ab0 <feof@plt+0xedb0>
  409f30:	ldr	x0, [x19]
  409f34:	bl	4135bc <feof@plt+0x108bc>
  409f38:	ldr	x0, [x19]
  409f3c:	bl	413934 <feof@plt+0x10c34>
  409f40:	ldr	x0, [x19]
  409f44:	mov	x1, x21
  409f48:	bl	4138ac <feof@plt+0x10bac>
  409f4c:	add	x1, sp, #0xa8
  409f50:	mov	w2, #0x8                   	// #8
  409f54:	mov	x0, x19
  409f58:	bl	40d564 <feof@plt+0xa864>
  409f5c:	add	x0, sp, #0xa8
  409f60:	bl	430674 <feof@plt+0x2d974>
  409f64:	ldp	x20, x19, [sp, #464]
  409f68:	ldp	x28, x21, [sp, #448]
  409f6c:	ldp	x29, x30, [sp, #432]
  409f70:	add	sp, sp, #0x1e0
  409f74:	ret
  409f78:	sub	sp, sp, #0x1b0
  409f7c:	stp	x29, x30, [sp, #368]
  409f80:	str	x28, [sp, #384]
  409f84:	stp	x22, x21, [sp, #400]
  409f88:	stp	x20, x19, [sp, #416]
  409f8c:	add	x29, sp, #0x170
  409f90:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  409f94:	ldr	x8, [x22, #944]
  409f98:	stp	q4, q5, [sp, #64]
  409f9c:	stp	q2, q3, [sp, #32]
  409fa0:	stp	q0, q1, [sp]
  409fa4:	stp	x6, x7, [sp, #152]
  409fa8:	stp	x4, x5, [sp, #136]
  409fac:	stp	q6, q7, [sp, #96]
  409fb0:	ldr	w9, [x8, #240]
  409fb4:	mov	x10, #0xffffffffffffffe0    	// #-32
  409fb8:	movk	x10, #0xff80, lsl #32
  409fbc:	mov	w20, w2
  409fc0:	add	w9, w9, #0x1
  409fc4:	str	w9, [x8, #240]
  409fc8:	mov	x8, sp
  409fcc:	add	x8, x8, #0x80
  409fd0:	stp	x8, x10, [x29, #-16]
  409fd4:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  409fd8:	mov	w2, w1
  409fdc:	ldr	x1, [x8, #2296]
  409fe0:	add	x9, sp, #0x88
  409fe4:	mov	x19, x3
  409fe8:	mov	w21, w0
  409fec:	add	x9, x9, #0x20
  409ff0:	add	x8, x29, #0x40
  409ff4:	add	x0, sp, #0xa8
  409ff8:	mov	x3, xzr
  409ffc:	stp	x8, x9, [x29, #-32]
  40a000:	bl	430594 <feof@plt+0x2d894>
  40a004:	add	x0, sp, #0xa8
  40a008:	sub	x3, x29, #0x20
  40a00c:	mov	w1, w20
  40a010:	mov	x2, x19
  40a014:	mov	w4, w21
  40a018:	bl	40a078 <feof@plt+0x7378>
  40a01c:	mov	w19, w0
  40a020:	add	x0, sp, #0xa8
  40a024:	bl	430674 <feof@plt+0x2d974>
  40a028:	ldr	x0, [x22, #944]
  40a02c:	ldr	w8, [x0, #240]
  40a030:	subs	w8, w8, #0x1
  40a034:	str	w8, [x0, #240]
  40a038:	b.ne	40a05c <feof@plt+0x735c>  // b.any
  40a03c:	ldr	w8, [x0, #244]
  40a040:	cmp	w8, #0x1
  40a044:	b.lt	40a058 <feof@plt+0x7358>  // b.tstop
  40a048:	ldr	x8, [x0, #256]
  40a04c:	cbz	x8, 40a058 <feof@plt+0x7358>
  40a050:	blr	x8
  40a054:	ldr	x0, [x22, #944]
  40a058:	str	wzr, [x0, #244]
  40a05c:	and	w0, w19, #0x1
  40a060:	ldp	x20, x19, [sp, #416]
  40a064:	ldp	x22, x21, [sp, #400]
  40a068:	ldr	x28, [sp, #384]
  40a06c:	ldp	x29, x30, [sp, #368]
  40a070:	add	sp, sp, #0x1b0
  40a074:	ret
  40a078:	sub	sp, sp, #0x80
  40a07c:	stp	x29, x30, [sp, #64]
  40a080:	stp	x24, x23, [sp, #80]
  40a084:	stp	x22, x21, [sp, #96]
  40a088:	stp	x20, x19, [sp, #112]
  40a08c:	add	x29, sp, #0x40
  40a090:	mov	x20, x3
  40a094:	mov	x19, x0
  40a098:	cmp	w4, #0xb
  40a09c:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a0a0:	b.ne	40a0f0 <feof@plt+0x73f0>  // b.any
  40a0a4:	cbz	x19, 40a15c <feof@plt+0x745c>
  40a0a8:	ldr	x8, [x24, #944]
  40a0ac:	mov	w9, #0x6                   	// #6
  40a0b0:	mov	x0, x2
  40a0b4:	ldrb	w8, [x8, #123]
  40a0b8:	cmp	w8, #0x0
  40a0bc:	mov	w8, #0x4                   	// #4
  40a0c0:	csel	w22, w8, w9, eq  // eq = none
  40a0c4:	bl	402910 <gettext@plt>
  40a0c8:	mov	x21, x0
  40a0cc:	bl	402ac0 <__errno_location@plt>
  40a0d0:	ldr	w8, [x0]
  40a0d4:	ldr	x9, [x24, #944]
  40a0d8:	stp	x21, x20, [sp]
  40a0dc:	stp	x19, x19, [sp, #32]
  40a0e0:	str	w8, [sp, #16]
  40a0e4:	ldr	w8, [x9, #124]
  40a0e8:	stp	w22, w8, [sp, #56]
  40a0ec:	b	40a134 <feof@plt+0x7434>
  40a0f0:	cbz	x19, 40a15c <feof@plt+0x745c>
  40a0f4:	mov	x0, x2
  40a0f8:	mov	w22, w4
  40a0fc:	mov	w21, w1
  40a100:	bl	402910 <gettext@plt>
  40a104:	mov	x23, x0
  40a108:	bl	402ac0 <__errno_location@plt>
  40a10c:	ldr	w8, [x0]
  40a110:	cmp	w22, #0xa
  40a114:	stp	x23, x20, [sp]
  40a118:	stp	x19, x19, [sp, #32]
  40a11c:	str	w8, [sp, #16]
  40a120:	stp	w22, wzr, [sp, #56]
  40a124:	b.eq	40a130 <feof@plt+0x7430>  // b.none
  40a128:	cmp	w22, #0x6
  40a12c:	b.ne	40a134 <feof@plt+0x7434>  // b.any
  40a130:	str	w21, [sp, #60]
  40a134:	ldr	x0, [x24, #944]
  40a138:	mov	x1, sp
  40a13c:	bl	40972c <feof@plt+0x6a2c>
  40a140:	ldp	x20, x19, [sp, #112]
  40a144:	ldp	x22, x21, [sp, #96]
  40a148:	ldp	x24, x23, [sp, #80]
  40a14c:	ldp	x29, x30, [sp, #64]
  40a150:	and	w0, w0, #0x1
  40a154:	add	sp, sp, #0x80
  40a158:	ret
  40a15c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40a160:	adrp	x2, 456000 <_obstack_memory_used@@Base+0xdd8>
  40a164:	add	x0, x0, #0xc8
  40a168:	add	x2, x2, #0xe56
  40a16c:	mov	w1, #0x123                 	// #291
  40a170:	bl	408b70 <feof@plt+0x5e70>
  40a174:	sub	sp, sp, #0xe0
  40a178:	stp	x29, x30, [sp, #192]
  40a17c:	stp	x20, x19, [sp, #208]
  40a180:	add	x29, sp, #0xc0
  40a184:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a188:	ldr	x10, [x20, #944]
  40a18c:	stp	q4, q5, [sp, #64]
  40a190:	stp	q2, q3, [sp, #32]
  40a194:	stp	q0, q1, [sp]
  40a198:	stp	x6, x7, [x29, #-48]
  40a19c:	stp	x4, x5, [x29, #-64]
  40a1a0:	stp	q6, q7, [sp, #96]
  40a1a4:	ldr	w11, [x10, #240]
  40a1a8:	mov	x8, x3
  40a1ac:	mov	w9, w0
  40a1b0:	mov	x12, #0xffffffffffffffe0    	// #-32
  40a1b4:	add	w11, w11, #0x1
  40a1b8:	mov	x13, sp
  40a1bc:	str	w11, [x10, #240]
  40a1c0:	sub	x10, x29, #0x40
  40a1c4:	movk	x12, #0xff80, lsl #32
  40a1c8:	add	x11, x29, #0x20
  40a1cc:	add	x13, x13, #0x80
  40a1d0:	add	x10, x10, #0x20
  40a1d4:	sub	x3, x29, #0x20
  40a1d8:	mov	x0, x1
  40a1dc:	mov	w1, w2
  40a1e0:	mov	x2, x8
  40a1e4:	mov	w4, w9
  40a1e8:	stp	x13, x12, [x29, #-16]
  40a1ec:	stp	x11, x10, [x29, #-32]
  40a1f0:	bl	40a078 <feof@plt+0x7378>
  40a1f4:	mov	w19, w0
  40a1f8:	ldr	x0, [x20, #944]
  40a1fc:	ldr	w8, [x0, #240]
  40a200:	subs	w8, w8, #0x1
  40a204:	str	w8, [x0, #240]
  40a208:	b.ne	40a22c <feof@plt+0x752c>  // b.any
  40a20c:	ldr	w8, [x0, #244]
  40a210:	cmp	w8, #0x1
  40a214:	b.lt	40a228 <feof@plt+0x7528>  // b.tstop
  40a218:	ldr	x8, [x0, #256]
  40a21c:	cbz	x8, 40a228 <feof@plt+0x7528>
  40a220:	blr	x8
  40a224:	ldr	x0, [x20, #944]
  40a228:	str	wzr, [x0, #244]
  40a22c:	and	w0, w19, #0x1
  40a230:	ldp	x20, x19, [sp, #208]
  40a234:	ldp	x29, x30, [sp, #192]
  40a238:	add	sp, sp, #0xe0
  40a23c:	ret
  40a240:	sub	sp, sp, #0xe0
  40a244:	stp	x29, x30, [sp, #176]
  40a248:	stp	x22, x21, [sp, #192]
  40a24c:	stp	x20, x19, [sp, #208]
  40a250:	add	x29, sp, #0xb0
  40a254:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40a258:	mov	w21, w2
  40a25c:	mov	w2, w1
  40a260:	ldr	x1, [x8, #2296]
  40a264:	mov	x20, x3
  40a268:	mov	w22, w0
  40a26c:	add	x0, sp, #0x8
  40a270:	mov	x3, xzr
  40a274:	mov	x19, x4
  40a278:	bl	430594 <feof@plt+0x2d894>
  40a27c:	add	x0, sp, #0x8
  40a280:	mov	w1, w21
  40a284:	mov	x2, x20
  40a288:	mov	x3, x19
  40a28c:	mov	w4, w22
  40a290:	bl	40a078 <feof@plt+0x7378>
  40a294:	mov	w19, w0
  40a298:	add	x0, sp, #0x8
  40a29c:	bl	430674 <feof@plt+0x2d974>
  40a2a0:	and	w0, w19, #0x1
  40a2a4:	ldp	x20, x19, [sp, #208]
  40a2a8:	ldp	x22, x21, [sp, #192]
  40a2ac:	ldp	x29, x30, [sp, #176]
  40a2b0:	add	sp, sp, #0xe0
  40a2b4:	ret
  40a2b8:	sub	sp, sp, #0x1f0
  40a2bc:	stp	x29, x30, [sp, #448]
  40a2c0:	stp	x28, x21, [sp, #464]
  40a2c4:	stp	x20, x19, [sp, #480]
  40a2c8:	add	x29, sp, #0x1c0
  40a2cc:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a2d0:	ldr	x9, [x20, #944]
  40a2d4:	stp	q4, q5, [sp, #64]
  40a2d8:	stp	q2, q3, [sp, #32]
  40a2dc:	stp	q0, q1, [sp]
  40a2e0:	stp	x6, x7, [sp, #168]
  40a2e4:	stp	x4, x5, [sp, #152]
  40a2e8:	stp	x2, x3, [sp, #136]
  40a2ec:	stp	q6, q7, [sp, #96]
  40a2f0:	ldr	w12, [x9, #240]
  40a2f4:	mov	x19, x1
  40a2f8:	mov	w8, w0
  40a2fc:	mov	x10, #0xffffffffffffffd0    	// #-48
  40a300:	add	w12, w12, #0x1
  40a304:	str	w12, [x9, #240]
  40a308:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40a30c:	ldr	x1, [x9, #2296]
  40a310:	mov	x11, sp
  40a314:	add	x13, sp, #0x88
  40a318:	movk	x10, #0xff80, lsl #32
  40a31c:	add	x11, x11, #0x80
  40a320:	add	x13, x13, #0x30
  40a324:	add	x9, x29, #0x30
  40a328:	add	x0, sp, #0xb8
  40a32c:	mov	w2, w8
  40a330:	mov	x3, xzr
  40a334:	stp	x11, x10, [x29, #-80]
  40a338:	stp	x9, x13, [x29, #-96]
  40a33c:	add	x21, sp, #0xb8
  40a340:	bl	430594 <feof@plt+0x2d894>
  40a344:	mov	x0, x19
  40a348:	bl	402910 <gettext@plt>
  40a34c:	mov	x19, x0
  40a350:	bl	402ac0 <__errno_location@plt>
  40a354:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40a358:	ldr	w8, [x0]
  40a35c:	ldr	x0, [x20, #944]
  40a360:	ldr	d0, [x10, #3592]
  40a364:	sub	x9, x29, #0x60
  40a368:	sub	x1, x29, #0x40
  40a36c:	stp	x19, x9, [x29, #-64]
  40a370:	stur	w8, [x29, #-48]
  40a374:	stp	x21, x21, [x29, #-32]
  40a378:	stur	d0, [x29, #-8]
  40a37c:	bl	40972c <feof@plt+0x6a2c>
  40a380:	add	x0, sp, #0xb8
  40a384:	bl	430674 <feof@plt+0x2d974>
  40a388:	ldr	x0, [x20, #944]
  40a38c:	ldr	w8, [x0, #240]
  40a390:	subs	w8, w8, #0x1
  40a394:	str	w8, [x0, #240]
  40a398:	b.ne	40a3bc <feof@plt+0x76bc>  // b.any
  40a39c:	ldr	w8, [x0, #244]
  40a3a0:	cmp	w8, #0x1
  40a3a4:	b.lt	40a3b8 <feof@plt+0x76b8>  // b.tstop
  40a3a8:	ldr	x8, [x0, #256]
  40a3ac:	cbz	x8, 40a3b8 <feof@plt+0x76b8>
  40a3b0:	blr	x8
  40a3b4:	ldr	x0, [x20, #944]
  40a3b8:	str	wzr, [x0, #244]
  40a3bc:	ldp	x20, x19, [sp, #480]
  40a3c0:	ldp	x28, x21, [sp, #464]
  40a3c4:	ldp	x29, x30, [sp, #448]
  40a3c8:	add	sp, sp, #0x1f0
  40a3cc:	ret
  40a3d0:	sub	sp, sp, #0x140
  40a3d4:	stp	x29, x30, [sp, #272]
  40a3d8:	stp	x28, x21, [sp, #288]
  40a3dc:	stp	x20, x19, [sp, #304]
  40a3e0:	add	x29, sp, #0x110
  40a3e4:	stp	x2, x3, [sp, #128]
  40a3e8:	stp	x4, x5, [sp, #144]
  40a3ec:	stp	x6, x7, [sp, #160]
  40a3f0:	stp	q1, q2, [sp, #16]
  40a3f4:	stp	q3, q4, [sp, #48]
  40a3f8:	str	q0, [sp]
  40a3fc:	stp	q5, q6, [sp, #80]
  40a400:	str	q7, [sp, #112]
  40a404:	cbz	x0, 40a4c8 <feof@plt+0x77c8>
  40a408:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a40c:	ldr	x8, [x21, #944]
  40a410:	mov	x9, #0xffffffffffffffd0    	// #-48
  40a414:	mov	x10, sp
  40a418:	add	x11, sp, #0x80
  40a41c:	ldr	w12, [x8, #240]
  40a420:	mov	x19, x0
  40a424:	movk	x9, #0xff80, lsl #32
  40a428:	add	x13, x29, #0x30
  40a42c:	add	x10, x10, #0x80
  40a430:	add	x11, x11, #0x30
  40a434:	add	w12, w12, #0x1
  40a438:	mov	x0, x1
  40a43c:	str	w12, [x8, #240]
  40a440:	stp	x10, x9, [x29, #-80]
  40a444:	stp	x13, x11, [x29, #-96]
  40a448:	bl	402910 <gettext@plt>
  40a44c:	mov	x20, x0
  40a450:	bl	402ac0 <__errno_location@plt>
  40a454:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40a458:	ldr	w8, [x0]
  40a45c:	ldr	x0, [x21, #944]
  40a460:	ldr	d0, [x10, #3592]
  40a464:	sub	x9, x29, #0x60
  40a468:	sub	x1, x29, #0x40
  40a46c:	stp	x20, x9, [x29, #-64]
  40a470:	stur	w8, [x29, #-48]
  40a474:	stp	x19, x19, [x29, #-32]
  40a478:	stur	d0, [x29, #-8]
  40a47c:	bl	40972c <feof@plt+0x6a2c>
  40a480:	ldr	x0, [x21, #944]
  40a484:	ldr	w8, [x0, #240]
  40a488:	subs	w8, w8, #0x1
  40a48c:	str	w8, [x0, #240]
  40a490:	b.ne	40a4b4 <feof@plt+0x77b4>  // b.any
  40a494:	ldr	w8, [x0, #244]
  40a498:	cmp	w8, #0x1
  40a49c:	b.lt	40a4b0 <feof@plt+0x77b0>  // b.tstop
  40a4a0:	ldr	x8, [x0, #256]
  40a4a4:	cbz	x8, 40a4b0 <feof@plt+0x77b0>
  40a4a8:	blr	x8
  40a4ac:	ldr	x0, [x21, #944]
  40a4b0:	str	wzr, [x0, #244]
  40a4b4:	ldp	x20, x19, [sp, #304]
  40a4b8:	ldp	x28, x21, [sp, #288]
  40a4bc:	ldp	x29, x30, [sp, #272]
  40a4c0:	add	sp, sp, #0x140
  40a4c4:	ret
  40a4c8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40a4cc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40a4d0:	add	x0, x0, #0xc8
  40a4d4:	add	x2, x2, #0xdf
  40a4d8:	mov	w1, #0x4dc                 	// #1244
  40a4dc:	bl	408b70 <feof@plt+0x5e70>
  40a4e0:	sub	sp, sp, #0x1f0
  40a4e4:	stp	x29, x30, [sp, #432]
  40a4e8:	stp	x28, x23, [sp, #448]
  40a4ec:	stp	x22, x21, [sp, #464]
  40a4f0:	stp	x20, x19, [sp, #480]
  40a4f4:	add	x29, sp, #0x1b0
  40a4f8:	mov	x8, #0xffffffffffffffe0    	// #-32
  40a4fc:	mov	x9, sp
  40a500:	movk	x8, #0xff80, lsl #32
  40a504:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a508:	add	x9, x9, #0x80
  40a50c:	stp	x9, x8, [x29, #-80]
  40a510:	ldr	x8, [x22, #944]
  40a514:	add	x10, sp, #0x88
  40a518:	add	x11, x29, #0x40
  40a51c:	add	x9, x10, #0x20
  40a520:	stp	x4, x5, [sp, #136]
  40a524:	stp	x6, x7, [sp, #152]
  40a528:	stp	q0, q1, [sp]
  40a52c:	stp	q2, q3, [sp, #32]
  40a530:	stp	q4, q5, [sp, #64]
  40a534:	stp	q6, q7, [sp, #96]
  40a538:	stp	x11, x9, [x29, #-96]
  40a53c:	ldr	w9, [x8, #240]
  40a540:	mov	x21, x1
  40a544:	mov	x19, x3
  40a548:	mov	x20, x2
  40a54c:	add	w9, w9, #0x1
  40a550:	str	w9, [x8, #240]
  40a554:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40a558:	ldr	x1, [x8, #2296]
  40a55c:	mov	w2, w0
  40a560:	add	x0, sp, #0xa8
  40a564:	mov	x3, xzr
  40a568:	add	x23, sp, #0xa8
  40a56c:	bl	430594 <feof@plt+0x2d894>
  40a570:	mov	x0, x20
  40a574:	mov	x1, x19
  40a578:	mov	x2, x21
  40a57c:	bl	402710 <ngettext@plt>
  40a580:	mov	x19, x0
  40a584:	bl	402ac0 <__errno_location@plt>
  40a588:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40a58c:	ldr	w8, [x0]
  40a590:	ldr	x0, [x22, #944]
  40a594:	ldr	d0, [x10, #3592]
  40a598:	sub	x9, x29, #0x60
  40a59c:	sub	x1, x29, #0x40
  40a5a0:	stp	x19, x9, [x29, #-64]
  40a5a4:	stur	w8, [x29, #-48]
  40a5a8:	stp	x23, x23, [x29, #-32]
  40a5ac:	stur	d0, [x29, #-8]
  40a5b0:	bl	40972c <feof@plt+0x6a2c>
  40a5b4:	add	x0, sp, #0xa8
  40a5b8:	bl	430674 <feof@plt+0x2d974>
  40a5bc:	ldr	x0, [x22, #944]
  40a5c0:	ldr	w8, [x0, #240]
  40a5c4:	subs	w8, w8, #0x1
  40a5c8:	str	w8, [x0, #240]
  40a5cc:	b.ne	40a5f0 <feof@plt+0x78f0>  // b.any
  40a5d0:	ldr	w8, [x0, #244]
  40a5d4:	cmp	w8, #0x1
  40a5d8:	b.lt	40a5ec <feof@plt+0x78ec>  // b.tstop
  40a5dc:	ldr	x8, [x0, #256]
  40a5e0:	cbz	x8, 40a5ec <feof@plt+0x78ec>
  40a5e4:	blr	x8
  40a5e8:	ldr	x0, [x22, #944]
  40a5ec:	str	wzr, [x0, #244]
  40a5f0:	ldp	x20, x19, [sp, #480]
  40a5f4:	ldp	x22, x21, [sp, #464]
  40a5f8:	ldp	x28, x23, [sp, #448]
  40a5fc:	ldp	x29, x30, [sp, #432]
  40a600:	add	sp, sp, #0x1f0
  40a604:	ret
  40a608:	stp	x29, x30, [sp, #-64]!
  40a60c:	str	x28, [sp, #16]
  40a610:	stp	x22, x21, [sp, #32]
  40a614:	stp	x20, x19, [sp, #48]
  40a618:	mov	x29, sp
  40a61c:	sub	sp, sp, #0x1c0
  40a620:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a624:	ldr	x8, [x21, #944]
  40a628:	stp	q4, q5, [sp, #64]
  40a62c:	stp	q2, q3, [sp, #32]
  40a630:	stp	q0, q1, [sp]
  40a634:	stp	x6, x7, [sp, #168]
  40a638:	stp	x4, x5, [sp, #152]
  40a63c:	stp	x2, x3, [sp, #136]
  40a640:	stp	q6, q7, [sp, #96]
  40a644:	ldr	w9, [x8, #240]
  40a648:	mov	x19, x1
  40a64c:	mov	x10, #0xffffffffffffffd0    	// #-48
  40a650:	mov	x11, sp
  40a654:	add	w9, w9, #0x1
  40a658:	str	w9, [x8, #240]
  40a65c:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40a660:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40a664:	ldr	x1, [x8, #2296]
  40a668:	ldr	w2, [x9, #2288]
  40a66c:	add	x12, sp, #0x88
  40a670:	mov	w20, w0
  40a674:	movk	x10, #0xff80, lsl #32
  40a678:	add	x11, x11, #0x80
  40a67c:	add	x12, x12, #0x30
  40a680:	add	x8, x29, #0x40
  40a684:	add	x0, sp, #0xb8
  40a688:	mov	x3, xzr
  40a68c:	stp	x11, x10, [x29, #-80]
  40a690:	stp	x8, x12, [x29, #-96]
  40a694:	add	x22, sp, #0xb8
  40a698:	bl	430594 <feof@plt+0x2d894>
  40a69c:	mov	x0, x19
  40a6a0:	bl	402910 <gettext@plt>
  40a6a4:	mov	x19, x0
  40a6a8:	bl	402ac0 <__errno_location@plt>
  40a6ac:	ldr	w8, [x0]
  40a6b0:	ldr	x0, [x21, #944]
  40a6b4:	sub	x9, x29, #0x60
  40a6b8:	mov	w10, #0x6                   	// #6
  40a6bc:	sub	x1, x29, #0x40
  40a6c0:	stp	x22, x22, [x29, #-32]
  40a6c4:	stp	x19, x9, [x29, #-64]
  40a6c8:	stur	w8, [x29, #-48]
  40a6cc:	stp	w10, w20, [x29, #-8]
  40a6d0:	bl	40972c <feof@plt+0x6a2c>
  40a6d4:	mov	w19, w0
  40a6d8:	add	x0, sp, #0xb8
  40a6dc:	bl	430674 <feof@plt+0x2d974>
  40a6e0:	ldr	x0, [x21, #944]
  40a6e4:	ldr	w8, [x0, #240]
  40a6e8:	subs	w8, w8, #0x1
  40a6ec:	str	w8, [x0, #240]
  40a6f0:	b.ne	40a714 <feof@plt+0x7a14>  // b.any
  40a6f4:	ldr	w8, [x0, #244]
  40a6f8:	cmp	w8, #0x1
  40a6fc:	b.lt	40a710 <feof@plt+0x7a10>  // b.tstop
  40a700:	ldr	x8, [x0, #256]
  40a704:	cbz	x8, 40a710 <feof@plt+0x7a10>
  40a708:	blr	x8
  40a70c:	ldr	x0, [x21, #944]
  40a710:	str	wzr, [x0, #244]
  40a714:	and	w0, w19, #0x1
  40a718:	add	sp, sp, #0x1c0
  40a71c:	ldp	x20, x19, [sp, #48]
  40a720:	ldp	x22, x21, [sp, #32]
  40a724:	ldr	x28, [sp, #16]
  40a728:	ldp	x29, x30, [sp], #64
  40a72c:	ret
  40a730:	sub	sp, sp, #0x1f0
  40a734:	stp	x29, x30, [sp, #432]
  40a738:	str	x28, [sp, #448]
  40a73c:	stp	x22, x21, [sp, #464]
  40a740:	stp	x20, x19, [sp, #480]
  40a744:	add	x29, sp, #0x1b0
  40a748:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a74c:	ldr	x8, [x21, #944]
  40a750:	stp	q4, q5, [sp, #64]
  40a754:	stp	q2, q3, [sp, #32]
  40a758:	stp	q0, q1, [sp]
  40a75c:	stp	x6, x7, [sp, #152]
  40a760:	stp	x4, x5, [sp, #136]
  40a764:	str	x3, [sp, #128]
  40a768:	stp	q6, q7, [sp, #96]
  40a76c:	ldr	w9, [x8, #240]
  40a770:	mov	x10, #0xffffffffffffffd8    	// #-40
  40a774:	mov	x11, sp
  40a778:	movk	x10, #0xff80, lsl #32
  40a77c:	add	w9, w9, #0x1
  40a780:	str	w9, [x8, #240]
  40a784:	add	x9, x11, #0x80
  40a788:	stp	x9, x10, [x29, #-80]
  40a78c:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40a790:	mov	w20, w1
  40a794:	ldr	x1, [x9, #2296]
  40a798:	add	x8, sp, #0x80
  40a79c:	mov	x19, x2
  40a7a0:	mov	w2, w0
  40a7a4:	add	x8, x8, #0x28
  40a7a8:	add	x9, x29, #0x40
  40a7ac:	add	x0, sp, #0xa8
  40a7b0:	mov	x3, xzr
  40a7b4:	stp	x9, x8, [x29, #-96]
  40a7b8:	add	x22, sp, #0xa8
  40a7bc:	bl	430594 <feof@plt+0x2d894>
  40a7c0:	mov	x0, x19
  40a7c4:	bl	402910 <gettext@plt>
  40a7c8:	mov	x19, x0
  40a7cc:	bl	402ac0 <__errno_location@plt>
  40a7d0:	ldr	w8, [x0]
  40a7d4:	ldr	x0, [x21, #944]
  40a7d8:	sub	x9, x29, #0x60
  40a7dc:	mov	w10, #0x6                   	// #6
  40a7e0:	sub	x1, x29, #0x40
  40a7e4:	stp	x22, x22, [x29, #-32]
  40a7e8:	stp	x19, x9, [x29, #-64]
  40a7ec:	stur	w8, [x29, #-48]
  40a7f0:	stp	w10, w20, [x29, #-8]
  40a7f4:	bl	40972c <feof@plt+0x6a2c>
  40a7f8:	mov	w19, w0
  40a7fc:	add	x0, sp, #0xa8
  40a800:	bl	430674 <feof@plt+0x2d974>
  40a804:	ldr	x0, [x21, #944]
  40a808:	ldr	w8, [x0, #240]
  40a80c:	subs	w8, w8, #0x1
  40a810:	str	w8, [x0, #240]
  40a814:	b.ne	40a838 <feof@plt+0x7b38>  // b.any
  40a818:	ldr	w8, [x0, #244]
  40a81c:	cmp	w8, #0x1
  40a820:	b.lt	40a834 <feof@plt+0x7b34>  // b.tstop
  40a824:	ldr	x8, [x0, #256]
  40a828:	cbz	x8, 40a834 <feof@plt+0x7b34>
  40a82c:	blr	x8
  40a830:	ldr	x0, [x21, #944]
  40a834:	str	wzr, [x0, #244]
  40a838:	and	w0, w19, #0x1
  40a83c:	ldp	x20, x19, [sp, #480]
  40a840:	ldp	x22, x21, [sp, #464]
  40a844:	ldr	x28, [sp, #448]
  40a848:	ldp	x29, x30, [sp, #432]
  40a84c:	add	sp, sp, #0x1f0
  40a850:	ret
  40a854:	sub	sp, sp, #0x150
  40a858:	stp	x29, x30, [sp, #272]
  40a85c:	str	x28, [sp, #288]
  40a860:	stp	x22, x21, [sp, #304]
  40a864:	stp	x20, x19, [sp, #320]
  40a868:	add	x29, sp, #0x110
  40a86c:	stp	x3, x4, [sp, #136]
  40a870:	stp	x5, x6, [sp, #152]
  40a874:	str	x7, [sp, #168]
  40a878:	stp	q1, q2, [sp, #16]
  40a87c:	stp	q3, q4, [sp, #48]
  40a880:	str	q0, [sp]
  40a884:	stp	q5, q6, [sp, #80]
  40a888:	str	q7, [sp, #112]
  40a88c:	cbz	x0, 40a95c <feof@plt+0x7c5c>
  40a890:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a894:	ldr	x8, [x22, #944]
  40a898:	mov	x9, #0xffffffffffffffd8    	// #-40
  40a89c:	mov	x10, sp
  40a8a0:	add	x11, sp, #0x88
  40a8a4:	ldr	w12, [x8, #240]
  40a8a8:	mov	x20, x0
  40a8ac:	movk	x9, #0xff80, lsl #32
  40a8b0:	add	x13, x29, #0x40
  40a8b4:	add	x10, x10, #0x80
  40a8b8:	add	x11, x11, #0x28
  40a8bc:	add	w12, w12, #0x1
  40a8c0:	mov	x0, x2
  40a8c4:	mov	w19, w1
  40a8c8:	str	w12, [x8, #240]
  40a8cc:	stp	x10, x9, [x29, #-80]
  40a8d0:	stp	x13, x11, [x29, #-96]
  40a8d4:	bl	402910 <gettext@plt>
  40a8d8:	mov	x21, x0
  40a8dc:	bl	402ac0 <__errno_location@plt>
  40a8e0:	ldr	w8, [x0]
  40a8e4:	ldr	x0, [x22, #944]
  40a8e8:	sub	x9, x29, #0x60
  40a8ec:	mov	w10, #0x6                   	// #6
  40a8f0:	sub	x1, x29, #0x40
  40a8f4:	stp	x20, x20, [x29, #-32]
  40a8f8:	stp	x21, x9, [x29, #-64]
  40a8fc:	stur	w8, [x29, #-48]
  40a900:	stp	w10, w19, [x29, #-8]
  40a904:	bl	40972c <feof@plt+0x6a2c>
  40a908:	mov	w19, w0
  40a90c:	ldr	x0, [x22, #944]
  40a910:	ldr	w8, [x0, #240]
  40a914:	subs	w8, w8, #0x1
  40a918:	str	w8, [x0, #240]
  40a91c:	b.ne	40a940 <feof@plt+0x7c40>  // b.any
  40a920:	ldr	w8, [x0, #244]
  40a924:	cmp	w8, #0x1
  40a928:	b.lt	40a93c <feof@plt+0x7c3c>  // b.tstop
  40a92c:	ldr	x8, [x0, #256]
  40a930:	cbz	x8, 40a93c <feof@plt+0x7c3c>
  40a934:	blr	x8
  40a938:	ldr	x0, [x22, #944]
  40a93c:	str	wzr, [x0, #244]
  40a940:	and	w0, w19, #0x1
  40a944:	ldp	x20, x19, [sp, #320]
  40a948:	ldp	x22, x21, [sp, #304]
  40a94c:	ldr	x28, [sp, #288]
  40a950:	ldp	x29, x30, [sp, #272]
  40a954:	add	sp, sp, #0x150
  40a958:	ret
  40a95c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40a960:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40a964:	add	x0, x0, #0xc8
  40a968:	add	x2, x2, #0xe6
  40a96c:	mov	w1, #0x518                 	// #1304
  40a970:	bl	408b70 <feof@plt+0x5e70>
  40a974:	sub	sp, sp, #0x140
  40a978:	stp	x29, x30, [sp, #256]
  40a97c:	str	x28, [sp, #272]
  40a980:	stp	x22, x21, [sp, #288]
  40a984:	stp	x20, x19, [sp, #304]
  40a988:	add	x29, sp, #0x100
  40a98c:	stp	x5, x6, [x29, #-120]
  40a990:	stur	x7, [x29, #-104]
  40a994:	stp	q0, q1, [sp]
  40a998:	stp	q2, q3, [sp, #32]
  40a99c:	stp	q4, q5, [sp, #64]
  40a9a0:	stp	q6, q7, [sp, #96]
  40a9a4:	cbz	x0, 40aa78 <feof@plt+0x7d78>
  40a9a8:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40a9ac:	ldr	x8, [x22, #944]
  40a9b0:	mov	x9, #0xffffffffffffffe8    	// #-24
  40a9b4:	mov	x10, sp
  40a9b8:	sub	x11, x29, #0x78
  40a9bc:	ldr	w12, [x8, #240]
  40a9c0:	mov	w19, w1
  40a9c4:	mov	x20, x0
  40a9c8:	movk	x9, #0xff80, lsl #32
  40a9cc:	add	x13, x29, #0x40
  40a9d0:	add	x10, x10, #0x80
  40a9d4:	add	x11, x11, #0x18
  40a9d8:	add	w12, w12, #0x1
  40a9dc:	mov	x0, x3
  40a9e0:	mov	x1, x4
  40a9e4:	str	w12, [x8, #240]
  40a9e8:	stp	x10, x9, [x29, #-80]
  40a9ec:	stp	x13, x11, [x29, #-96]
  40a9f0:	bl	402710 <ngettext@plt>
  40a9f4:	mov	x21, x0
  40a9f8:	bl	402ac0 <__errno_location@plt>
  40a9fc:	ldr	w8, [x0]
  40aa00:	ldr	x0, [x22, #944]
  40aa04:	sub	x9, x29, #0x60
  40aa08:	mov	w10, #0x6                   	// #6
  40aa0c:	sub	x1, x29, #0x40
  40aa10:	stp	x20, x20, [x29, #-32]
  40aa14:	stp	x21, x9, [x29, #-64]
  40aa18:	stur	w8, [x29, #-48]
  40aa1c:	stp	w10, w19, [x29, #-8]
  40aa20:	bl	40972c <feof@plt+0x6a2c>
  40aa24:	mov	w19, w0
  40aa28:	ldr	x0, [x22, #944]
  40aa2c:	ldr	w8, [x0, #240]
  40aa30:	subs	w8, w8, #0x1
  40aa34:	str	w8, [x0, #240]
  40aa38:	b.ne	40aa5c <feof@plt+0x7d5c>  // b.any
  40aa3c:	ldr	w8, [x0, #244]
  40aa40:	cmp	w8, #0x1
  40aa44:	b.lt	40aa58 <feof@plt+0x7d58>  // b.tstop
  40aa48:	ldr	x8, [x0, #256]
  40aa4c:	cbz	x8, 40aa58 <feof@plt+0x7d58>
  40aa50:	blr	x8
  40aa54:	ldr	x0, [x22, #944]
  40aa58:	str	wzr, [x0, #244]
  40aa5c:	and	w0, w19, #0x1
  40aa60:	ldp	x20, x19, [sp, #304]
  40aa64:	ldp	x22, x21, [sp, #288]
  40aa68:	ldr	x28, [sp, #272]
  40aa6c:	ldp	x29, x30, [sp, #256]
  40aa70:	add	sp, sp, #0x140
  40aa74:	ret
  40aa78:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40aa7c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40aa80:	add	x0, x0, #0xc8
  40aa84:	add	x2, x2, #0xf1
  40aa88:	mov	w1, #0x528                 	// #1320
  40aa8c:	bl	408b70 <feof@plt+0x5e70>
  40aa90:	sub	sp, sp, #0x1f0
  40aa94:	stp	x29, x30, [sp, #416]
  40aa98:	str	x28, [sp, #432]
  40aa9c:	stp	x24, x23, [sp, #448]
  40aaa0:	stp	x22, x21, [sp, #464]
  40aaa4:	stp	x20, x19, [sp, #480]
  40aaa8:	add	x29, sp, #0x1a0
  40aaac:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40aab0:	ldr	x8, [x23, #944]
  40aab4:	stp	q4, q5, [sp, #64]
  40aab8:	stp	q2, q3, [sp, #32]
  40aabc:	stp	q0, q1, [sp]
  40aac0:	stp	x6, x7, [sp, #136]
  40aac4:	str	x5, [sp, #128]
  40aac8:	stp	q6, q7, [sp, #96]
  40aacc:	ldr	w9, [x8, #240]
  40aad0:	mov	x10, #0xffffffffffffffe8    	// #-24
  40aad4:	movk	x10, #0xff80, lsl #32
  40aad8:	mov	w22, w1
  40aadc:	add	w9, w9, #0x1
  40aae0:	str	w9, [x8, #240]
  40aae4:	mov	x8, sp
  40aae8:	add	x8, x8, #0x80
  40aaec:	stp	x8, x10, [x29, #-80]
  40aaf0:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40aaf4:	ldr	x1, [x8, #2296]
  40aaf8:	add	x9, sp, #0x80
  40aafc:	mov	x20, x3
  40ab00:	mov	x21, x2
  40ab04:	mov	w2, w0
  40ab08:	add	x9, x9, #0x18
  40ab0c:	add	x8, x29, #0x50
  40ab10:	add	x0, sp, #0x98
  40ab14:	mov	x3, xzr
  40ab18:	mov	x19, x4
  40ab1c:	stp	x8, x9, [x29, #-96]
  40ab20:	add	x24, sp, #0x98
  40ab24:	bl	430594 <feof@plt+0x2d894>
  40ab28:	mov	x0, x20
  40ab2c:	mov	x1, x19
  40ab30:	mov	x2, x21
  40ab34:	bl	402710 <ngettext@plt>
  40ab38:	mov	x19, x0
  40ab3c:	bl	402ac0 <__errno_location@plt>
  40ab40:	ldr	w8, [x0]
  40ab44:	ldr	x0, [x23, #944]
  40ab48:	sub	x9, x29, #0x60
  40ab4c:	mov	w10, #0x6                   	// #6
  40ab50:	sub	x1, x29, #0x40
  40ab54:	stp	x24, x24, [x29, #-32]
  40ab58:	stp	x19, x9, [x29, #-64]
  40ab5c:	stur	w8, [x29, #-48]
  40ab60:	stp	w10, w22, [x29, #-8]
  40ab64:	bl	40972c <feof@plt+0x6a2c>
  40ab68:	mov	w19, w0
  40ab6c:	add	x0, sp, #0x98
  40ab70:	bl	430674 <feof@plt+0x2d974>
  40ab74:	ldr	x0, [x23, #944]
  40ab78:	ldr	w8, [x0, #240]
  40ab7c:	subs	w8, w8, #0x1
  40ab80:	str	w8, [x0, #240]
  40ab84:	b.ne	40aba8 <feof@plt+0x7ea8>  // b.any
  40ab88:	ldr	w8, [x0, #244]
  40ab8c:	cmp	w8, #0x1
  40ab90:	b.lt	40aba4 <feof@plt+0x7ea4>  // b.tstop
  40ab94:	ldr	x8, [x0, #256]
  40ab98:	cbz	x8, 40aba4 <feof@plt+0x7ea4>
  40ab9c:	blr	x8
  40aba0:	ldr	x0, [x23, #944]
  40aba4:	str	wzr, [x0, #244]
  40aba8:	and	w0, w19, #0x1
  40abac:	ldp	x20, x19, [sp, #480]
  40abb0:	ldp	x22, x21, [sp, #464]
  40abb4:	ldp	x24, x23, [sp, #448]
  40abb8:	ldr	x28, [sp, #432]
  40abbc:	ldp	x29, x30, [sp, #416]
  40abc0:	add	sp, sp, #0x1f0
  40abc4:	ret
  40abc8:	sub	sp, sp, #0x1f0
  40abcc:	stp	x29, x30, [sp, #432]
  40abd0:	str	x28, [sp, #448]
  40abd4:	stp	x22, x21, [sp, #464]
  40abd8:	stp	x20, x19, [sp, #480]
  40abdc:	add	x29, sp, #0x1b0
  40abe0:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40abe4:	ldr	x8, [x21, #944]
  40abe8:	stp	q4, q5, [sp, #64]
  40abec:	stp	q2, q3, [sp, #32]
  40abf0:	stp	q0, q1, [sp]
  40abf4:	stp	x6, x7, [sp, #152]
  40abf8:	stp	x4, x5, [sp, #136]
  40abfc:	str	x3, [sp, #128]
  40ac00:	stp	q6, q7, [sp, #96]
  40ac04:	ldr	w9, [x8, #240]
  40ac08:	mov	x10, #0xffffffffffffffd8    	// #-40
  40ac0c:	mov	x11, sp
  40ac10:	movk	x10, #0xff80, lsl #32
  40ac14:	add	w9, w9, #0x1
  40ac18:	str	w9, [x8, #240]
  40ac1c:	add	x9, x11, #0x80
  40ac20:	stp	x9, x10, [x29, #-80]
  40ac24:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40ac28:	mov	w20, w1
  40ac2c:	ldr	x1, [x9, #2296]
  40ac30:	add	x8, sp, #0x80
  40ac34:	mov	x19, x2
  40ac38:	mov	w2, w0
  40ac3c:	add	x8, x8, #0x28
  40ac40:	add	x9, x29, #0x40
  40ac44:	add	x0, sp, #0xa8
  40ac48:	mov	x3, xzr
  40ac4c:	stp	x9, x8, [x29, #-96]
  40ac50:	add	x22, sp, #0xa8
  40ac54:	bl	430594 <feof@plt+0x2d894>
  40ac58:	mov	x0, x19
  40ac5c:	bl	402910 <gettext@plt>
  40ac60:	mov	x19, x0
  40ac64:	bl	402ac0 <__errno_location@plt>
  40ac68:	ldr	w8, [x0]
  40ac6c:	ldr	x0, [x21, #944]
  40ac70:	sub	x9, x29, #0x60
  40ac74:	mov	w10, #0xa                   	// #10
  40ac78:	sub	x1, x29, #0x40
  40ac7c:	stp	x22, x22, [x29, #-32]
  40ac80:	stp	x19, x9, [x29, #-64]
  40ac84:	stur	w8, [x29, #-48]
  40ac88:	stp	w10, w20, [x29, #-8]
  40ac8c:	bl	40972c <feof@plt+0x6a2c>
  40ac90:	mov	w19, w0
  40ac94:	add	x0, sp, #0xa8
  40ac98:	bl	430674 <feof@plt+0x2d974>
  40ac9c:	ldr	x0, [x21, #944]
  40aca0:	ldr	w8, [x0, #240]
  40aca4:	subs	w8, w8, #0x1
  40aca8:	str	w8, [x0, #240]
  40acac:	b.ne	40acd0 <feof@plt+0x7fd0>  // b.any
  40acb0:	ldr	w8, [x0, #244]
  40acb4:	cmp	w8, #0x1
  40acb8:	b.lt	40accc <feof@plt+0x7fcc>  // b.tstop
  40acbc:	ldr	x8, [x0, #256]
  40acc0:	cbz	x8, 40accc <feof@plt+0x7fcc>
  40acc4:	blr	x8
  40acc8:	ldr	x0, [x21, #944]
  40accc:	str	wzr, [x0, #244]
  40acd0:	and	w0, w19, #0x1
  40acd4:	ldp	x20, x19, [sp, #480]
  40acd8:	ldp	x22, x21, [sp, #464]
  40acdc:	ldr	x28, [sp, #448]
  40ace0:	ldp	x29, x30, [sp, #432]
  40ace4:	add	sp, sp, #0x1f0
  40ace8:	ret
  40acec:	sub	sp, sp, #0x150
  40acf0:	stp	x29, x30, [sp, #272]
  40acf4:	str	x28, [sp, #288]
  40acf8:	stp	x22, x21, [sp, #304]
  40acfc:	stp	x20, x19, [sp, #320]
  40ad00:	add	x29, sp, #0x110
  40ad04:	stp	x3, x4, [sp, #136]
  40ad08:	stp	x5, x6, [sp, #152]
  40ad0c:	str	x7, [sp, #168]
  40ad10:	stp	q1, q2, [sp, #16]
  40ad14:	stp	q3, q4, [sp, #48]
  40ad18:	str	q0, [sp]
  40ad1c:	stp	q5, q6, [sp, #80]
  40ad20:	str	q7, [sp, #112]
  40ad24:	cbz	x0, 40adf4 <feof@plt+0x80f4>
  40ad28:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40ad2c:	ldr	x8, [x22, #944]
  40ad30:	mov	x9, #0xffffffffffffffd8    	// #-40
  40ad34:	mov	x10, sp
  40ad38:	add	x11, sp, #0x88
  40ad3c:	ldr	w12, [x8, #240]
  40ad40:	mov	x20, x0
  40ad44:	movk	x9, #0xff80, lsl #32
  40ad48:	add	x13, x29, #0x40
  40ad4c:	add	x10, x10, #0x80
  40ad50:	add	x11, x11, #0x28
  40ad54:	add	w12, w12, #0x1
  40ad58:	mov	x0, x2
  40ad5c:	mov	w19, w1
  40ad60:	str	w12, [x8, #240]
  40ad64:	stp	x10, x9, [x29, #-80]
  40ad68:	stp	x13, x11, [x29, #-96]
  40ad6c:	bl	402910 <gettext@plt>
  40ad70:	mov	x21, x0
  40ad74:	bl	402ac0 <__errno_location@plt>
  40ad78:	ldr	w8, [x0]
  40ad7c:	ldr	x0, [x22, #944]
  40ad80:	sub	x9, x29, #0x60
  40ad84:	mov	w10, #0xa                   	// #10
  40ad88:	sub	x1, x29, #0x40
  40ad8c:	stp	x20, x20, [x29, #-32]
  40ad90:	stp	x21, x9, [x29, #-64]
  40ad94:	stur	w8, [x29, #-48]
  40ad98:	stp	w10, w19, [x29, #-8]
  40ad9c:	bl	40972c <feof@plt+0x6a2c>
  40ada0:	mov	w19, w0
  40ada4:	ldr	x0, [x22, #944]
  40ada8:	ldr	w8, [x0, #240]
  40adac:	subs	w8, w8, #0x1
  40adb0:	str	w8, [x0, #240]
  40adb4:	b.ne	40add8 <feof@plt+0x80d8>  // b.any
  40adb8:	ldr	w8, [x0, #244]
  40adbc:	cmp	w8, #0x1
  40adc0:	b.lt	40add4 <feof@plt+0x80d4>  // b.tstop
  40adc4:	ldr	x8, [x0, #256]
  40adc8:	cbz	x8, 40add4 <feof@plt+0x80d4>
  40adcc:	blr	x8
  40add0:	ldr	x0, [x22, #944]
  40add4:	str	wzr, [x0, #244]
  40add8:	and	w0, w19, #0x1
  40addc:	ldp	x20, x19, [sp, #320]
  40ade0:	ldp	x22, x21, [sp, #304]
  40ade4:	ldr	x28, [sp, #288]
  40ade8:	ldp	x29, x30, [sp, #272]
  40adec:	add	sp, sp, #0x150
  40adf0:	ret
  40adf4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40adf8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40adfc:	add	x0, x0, #0xc8
  40ae00:	add	x2, x2, #0xfb
  40ae04:	mov	w1, #0x565                 	// #1381
  40ae08:	bl	408b70 <feof@plt+0x5e70>
  40ae0c:	stp	x29, x30, [sp, #-64]!
  40ae10:	str	x28, [sp, #16]
  40ae14:	stp	x22, x21, [sp, #32]
  40ae18:	stp	x20, x19, [sp, #48]
  40ae1c:	mov	x29, sp
  40ae20:	sub	sp, sp, #0x1c0
  40ae24:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40ae28:	ldr	x9, [x20, #944]
  40ae2c:	stp	q4, q5, [sp, #64]
  40ae30:	stp	q2, q3, [sp, #32]
  40ae34:	stp	q0, q1, [sp]
  40ae38:	stp	x6, x7, [sp, #168]
  40ae3c:	stp	x4, x5, [sp, #152]
  40ae40:	stp	x2, x3, [sp, #136]
  40ae44:	stp	q6, q7, [sp, #96]
  40ae48:	ldr	w12, [x9, #240]
  40ae4c:	mov	x19, x1
  40ae50:	mov	w8, w0
  40ae54:	mov	x10, #0xffffffffffffffd0    	// #-48
  40ae58:	add	w12, w12, #0x1
  40ae5c:	str	w12, [x9, #240]
  40ae60:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40ae64:	ldr	x1, [x9, #2296]
  40ae68:	mov	x11, sp
  40ae6c:	add	x13, sp, #0x88
  40ae70:	movk	x10, #0xff80, lsl #32
  40ae74:	add	x11, x11, #0x80
  40ae78:	add	x13, x13, #0x30
  40ae7c:	add	x9, x29, #0x40
  40ae80:	add	x0, sp, #0xb8
  40ae84:	mov	w2, w8
  40ae88:	mov	x3, xzr
  40ae8c:	stp	x11, x10, [x29, #-80]
  40ae90:	stp	x9, x13, [x29, #-96]
  40ae94:	add	x21, sp, #0xb8
  40ae98:	bl	430594 <feof@plt+0x2d894>
  40ae9c:	ldr	x8, [x20, #944]
  40aea0:	mov	w9, #0x6                   	// #6
  40aea4:	mov	x0, x19
  40aea8:	ldrb	w8, [x8, #123]
  40aeac:	cmp	w8, #0x0
  40aeb0:	mov	w8, #0x4                   	// #4
  40aeb4:	csel	w22, w8, w9, eq  // eq = none
  40aeb8:	bl	402910 <gettext@plt>
  40aebc:	mov	x19, x0
  40aec0:	bl	402ac0 <__errno_location@plt>
  40aec4:	ldr	w8, [x0]
  40aec8:	ldr	x0, [x20, #944]
  40aecc:	sub	x9, x29, #0x60
  40aed0:	stp	x21, x21, [x29, #-32]
  40aed4:	stp	x19, x9, [x29, #-64]
  40aed8:	stur	w8, [x29, #-48]
  40aedc:	ldr	w8, [x0, #124]
  40aee0:	sub	x1, x29, #0x40
  40aee4:	stp	w22, w8, [x29, #-8]
  40aee8:	bl	40972c <feof@plt+0x6a2c>
  40aeec:	mov	w19, w0
  40aef0:	add	x0, sp, #0xb8
  40aef4:	bl	430674 <feof@plt+0x2d974>
  40aef8:	ldr	x0, [x20, #944]
  40aefc:	ldr	w8, [x0, #240]
  40af00:	subs	w8, w8, #0x1
  40af04:	str	w8, [x0, #240]
  40af08:	b.ne	40af2c <feof@plt+0x822c>  // b.any
  40af0c:	ldr	w8, [x0, #244]
  40af10:	cmp	w8, #0x1
  40af14:	b.lt	40af28 <feof@plt+0x8228>  // b.tstop
  40af18:	ldr	x8, [x0, #256]
  40af1c:	cbz	x8, 40af28 <feof@plt+0x8228>
  40af20:	blr	x8
  40af24:	ldr	x0, [x20, #944]
  40af28:	str	wzr, [x0, #244]
  40af2c:	and	w0, w19, #0x1
  40af30:	add	sp, sp, #0x1c0
  40af34:	ldp	x20, x19, [sp, #48]
  40af38:	ldp	x22, x21, [sp, #32]
  40af3c:	ldr	x28, [sp, #16]
  40af40:	ldp	x29, x30, [sp], #64
  40af44:	ret
  40af48:	sub	sp, sp, #0x150
  40af4c:	stp	x29, x30, [sp, #272]
  40af50:	str	x28, [sp, #288]
  40af54:	stp	x22, x21, [sp, #304]
  40af58:	stp	x20, x19, [sp, #320]
  40af5c:	add	x29, sp, #0x110
  40af60:	stp	x2, x3, [sp, #128]
  40af64:	stp	x4, x5, [sp, #144]
  40af68:	stp	x6, x7, [sp, #160]
  40af6c:	stp	q1, q2, [sp, #16]
  40af70:	stp	q3, q4, [sp, #48]
  40af74:	str	q0, [sp]
  40af78:	stp	q5, q6, [sp, #80]
  40af7c:	str	q7, [sp, #112]
  40af80:	cbz	x0, 40b064 <feof@plt+0x8364>
  40af84:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40af88:	ldr	x8, [x21, #944]
  40af8c:	mov	x10, #0xffffffffffffffd0    	// #-48
  40af90:	mov	x11, sp
  40af94:	movk	x10, #0xff80, lsl #32
  40af98:	ldr	w9, [x8, #240]
  40af9c:	add	x11, x11, #0x80
  40afa0:	mov	x19, x0
  40afa4:	mov	x0, x1
  40afa8:	add	w9, w9, #0x1
  40afac:	str	w9, [x8, #240]
  40afb0:	stp	x11, x10, [x29, #-80]
  40afb4:	ldr	x10, [x21, #944]
  40afb8:	add	x8, sp, #0x80
  40afbc:	add	x9, x29, #0x40
  40afc0:	add	x8, x8, #0x30
  40afc4:	stp	x9, x8, [x29, #-96]
  40afc8:	ldrb	w8, [x10, #123]
  40afcc:	mov	w9, #0x6                   	// #6
  40afd0:	cmp	w8, #0x0
  40afd4:	mov	w8, #0x4                   	// #4
  40afd8:	csel	w22, w8, w9, eq  // eq = none
  40afdc:	bl	402910 <gettext@plt>
  40afe0:	mov	x20, x0
  40afe4:	bl	402ac0 <__errno_location@plt>
  40afe8:	ldr	w8, [x0]
  40afec:	ldr	x0, [x21, #944]
  40aff0:	sub	x9, x29, #0x60
  40aff4:	stp	x19, x19, [x29, #-32]
  40aff8:	stp	x20, x9, [x29, #-64]
  40affc:	stur	w8, [x29, #-48]
  40b000:	ldr	w8, [x0, #124]
  40b004:	sub	x1, x29, #0x40
  40b008:	stp	w22, w8, [x29, #-8]
  40b00c:	bl	40972c <feof@plt+0x6a2c>
  40b010:	mov	w19, w0
  40b014:	ldr	x0, [x21, #944]
  40b018:	ldr	w8, [x0, #240]
  40b01c:	subs	w8, w8, #0x1
  40b020:	str	w8, [x0, #240]
  40b024:	b.ne	40b048 <feof@plt+0x8348>  // b.any
  40b028:	ldr	w8, [x0, #244]
  40b02c:	cmp	w8, #0x1
  40b030:	b.lt	40b044 <feof@plt+0x8344>  // b.tstop
  40b034:	ldr	x8, [x0, #256]
  40b038:	cbz	x8, 40b044 <feof@plt+0x8344>
  40b03c:	blr	x8
  40b040:	ldr	x0, [x21, #944]
  40b044:	str	wzr, [x0, #244]
  40b048:	and	w0, w19, #0x1
  40b04c:	ldp	x20, x19, [sp, #320]
  40b050:	ldp	x22, x21, [sp, #304]
  40b054:	ldr	x28, [sp, #288]
  40b058:	ldp	x29, x30, [sp, #272]
  40b05c:	add	sp, sp, #0x150
  40b060:	ret
  40b064:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b068:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b06c:	add	x0, x0, #0xc8
  40b070:	add	x2, x2, #0x103
  40b074:	mov	w1, #0x587                 	// #1415
  40b078:	bl	408b70 <feof@plt+0x5e70>
  40b07c:	sub	sp, sp, #0x1f0
  40b080:	stp	x29, x30, [sp, #448]
  40b084:	stp	x28, x21, [sp, #464]
  40b088:	stp	x20, x19, [sp, #480]
  40b08c:	add	x29, sp, #0x1c0
  40b090:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b094:	ldr	x8, [x20, #944]
  40b098:	stp	q4, q5, [sp, #64]
  40b09c:	stp	q2, q3, [sp, #32]
  40b0a0:	stp	q0, q1, [sp]
  40b0a4:	stp	x6, x7, [sp, #168]
  40b0a8:	stp	x4, x5, [sp, #152]
  40b0ac:	stp	x2, x3, [sp, #136]
  40b0b0:	str	x1, [sp, #128]
  40b0b4:	stp	q6, q7, [sp, #96]
  40b0b8:	ldr	w10, [x8, #240]
  40b0bc:	adrp	x13, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b0c0:	mov	x9, #0xffffffffffffffc8    	// #-56
  40b0c4:	mov	x11, sp
  40b0c8:	add	w10, w10, #0x1
  40b0cc:	str	w10, [x8, #240]
  40b0d0:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b0d4:	ldr	x1, [x13, #2296]
  40b0d8:	ldr	w2, [x8, #2288]
  40b0dc:	add	x12, sp, #0x80
  40b0e0:	mov	x19, x0
  40b0e4:	movk	x9, #0xff80, lsl #32
  40b0e8:	add	x10, x11, #0x80
  40b0ec:	add	x11, x12, #0x38
  40b0f0:	add	x8, x29, #0x30
  40b0f4:	add	x0, sp, #0xb8
  40b0f8:	mov	x3, xzr
  40b0fc:	stp	x10, x9, [x29, #-80]
  40b100:	stp	x8, x11, [x29, #-96]
  40b104:	add	x21, sp, #0xb8
  40b108:	bl	430594 <feof@plt+0x2d894>
  40b10c:	mov	x0, x19
  40b110:	bl	402910 <gettext@plt>
  40b114:	mov	x19, x0
  40b118:	bl	402ac0 <__errno_location@plt>
  40b11c:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40b120:	ldr	w8, [x0]
  40b124:	ldr	x0, [x20, #944]
  40b128:	ldr	d0, [x10, #3600]
  40b12c:	sub	x9, x29, #0x60
  40b130:	sub	x1, x29, #0x40
  40b134:	stp	x19, x9, [x29, #-64]
  40b138:	stur	w8, [x29, #-48]
  40b13c:	stp	x21, x21, [x29, #-32]
  40b140:	stur	d0, [x29, #-8]
  40b144:	bl	40972c <feof@plt+0x6a2c>
  40b148:	add	x0, sp, #0xb8
  40b14c:	bl	430674 <feof@plt+0x2d974>
  40b150:	ldr	x0, [x20, #944]
  40b154:	ldr	w8, [x0, #240]
  40b158:	subs	w8, w8, #0x1
  40b15c:	str	w8, [x0, #240]
  40b160:	b.ne	40b184 <feof@plt+0x8484>  // b.any
  40b164:	ldr	w8, [x0, #244]
  40b168:	cmp	w8, #0x1
  40b16c:	b.lt	40b180 <feof@plt+0x8480>  // b.tstop
  40b170:	ldr	x8, [x0, #256]
  40b174:	cbz	x8, 40b180 <feof@plt+0x8480>
  40b178:	blr	x8
  40b17c:	ldr	x0, [x20, #944]
  40b180:	str	wzr, [x0, #244]
  40b184:	ldp	x20, x19, [sp, #480]
  40b188:	ldp	x28, x21, [sp, #464]
  40b18c:	ldp	x29, x30, [sp, #448]
  40b190:	add	sp, sp, #0x1f0
  40b194:	ret
  40b198:	sub	sp, sp, #0x1f0
  40b19c:	stp	x29, x30, [sp, #432]
  40b1a0:	stp	x28, x23, [sp, #448]
  40b1a4:	stp	x22, x21, [sp, #464]
  40b1a8:	stp	x20, x19, [sp, #480]
  40b1ac:	add	x29, sp, #0x1b0
  40b1b0:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b1b4:	ldr	x8, [x22, #944]
  40b1b8:	stp	q4, q5, [sp, #64]
  40b1bc:	stp	q2, q3, [sp, #32]
  40b1c0:	stp	q0, q1, [sp]
  40b1c4:	stp	x6, x7, [sp, #152]
  40b1c8:	stp	x4, x5, [sp, #136]
  40b1cc:	stp	q6, q7, [sp, #96]
  40b1d0:	ldr	w9, [x8, #240]
  40b1d4:	mov	x10, #0xffffffffffffffe0    	// #-32
  40b1d8:	movk	x10, #0xff80, lsl #32
  40b1dc:	mov	x21, x1
  40b1e0:	add	w9, w9, #0x1
  40b1e4:	str	w9, [x8, #240]
  40b1e8:	mov	x8, sp
  40b1ec:	add	x8, x8, #0x80
  40b1f0:	stp	x8, x10, [x29, #-80]
  40b1f4:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b1f8:	ldr	x1, [x8, #2296]
  40b1fc:	add	x9, sp, #0x88
  40b200:	mov	x19, x3
  40b204:	mov	x20, x2
  40b208:	mov	w2, w0
  40b20c:	add	x9, x9, #0x20
  40b210:	add	x8, x29, #0x40
  40b214:	add	x0, sp, #0xa8
  40b218:	mov	x3, xzr
  40b21c:	stp	x8, x9, [x29, #-96]
  40b220:	add	x23, sp, #0xa8
  40b224:	bl	430594 <feof@plt+0x2d894>
  40b228:	mov	x0, x20
  40b22c:	mov	x1, x19
  40b230:	mov	x2, x21
  40b234:	bl	402710 <ngettext@plt>
  40b238:	mov	x19, x0
  40b23c:	bl	402ac0 <__errno_location@plt>
  40b240:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40b244:	ldr	w8, [x0]
  40b248:	ldr	x0, [x22, #944]
  40b24c:	ldr	d0, [x10, #3600]
  40b250:	sub	x9, x29, #0x60
  40b254:	sub	x1, x29, #0x40
  40b258:	stp	x19, x9, [x29, #-64]
  40b25c:	stur	w8, [x29, #-48]
  40b260:	stp	x23, x23, [x29, #-32]
  40b264:	stur	d0, [x29, #-8]
  40b268:	bl	40972c <feof@plt+0x6a2c>
  40b26c:	add	x0, sp, #0xa8
  40b270:	bl	430674 <feof@plt+0x2d974>
  40b274:	ldr	x0, [x22, #944]
  40b278:	ldr	w8, [x0, #240]
  40b27c:	subs	w8, w8, #0x1
  40b280:	str	w8, [x0, #240]
  40b284:	b.ne	40b2a8 <feof@plt+0x85a8>  // b.any
  40b288:	ldr	w8, [x0, #244]
  40b28c:	cmp	w8, #0x1
  40b290:	b.lt	40b2a4 <feof@plt+0x85a4>  // b.tstop
  40b294:	ldr	x8, [x0, #256]
  40b298:	cbz	x8, 40b2a4 <feof@plt+0x85a4>
  40b29c:	blr	x8
  40b2a0:	ldr	x0, [x22, #944]
  40b2a4:	str	wzr, [x0, #244]
  40b2a8:	ldp	x20, x19, [sp, #480]
  40b2ac:	ldp	x22, x21, [sp, #464]
  40b2b0:	ldp	x28, x23, [sp, #448]
  40b2b4:	ldp	x29, x30, [sp, #432]
  40b2b8:	add	sp, sp, #0x1f0
  40b2bc:	ret
  40b2c0:	sub	sp, sp, #0x1f0
  40b2c4:	stp	x29, x30, [sp, #448]
  40b2c8:	stp	x28, x21, [sp, #464]
  40b2cc:	stp	x20, x19, [sp, #480]
  40b2d0:	add	x29, sp, #0x1c0
  40b2d4:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b2d8:	ldr	x9, [x20, #944]
  40b2dc:	stp	q4, q5, [sp, #64]
  40b2e0:	stp	q2, q3, [sp, #32]
  40b2e4:	stp	q0, q1, [sp]
  40b2e8:	stp	x6, x7, [sp, #168]
  40b2ec:	stp	x4, x5, [sp, #152]
  40b2f0:	stp	x2, x3, [sp, #136]
  40b2f4:	stp	q6, q7, [sp, #96]
  40b2f8:	ldr	w12, [x9, #240]
  40b2fc:	mov	x19, x1
  40b300:	mov	w8, w0
  40b304:	mov	x10, #0xffffffffffffffd0    	// #-48
  40b308:	add	w12, w12, #0x1
  40b30c:	str	w12, [x9, #240]
  40b310:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b314:	ldr	x1, [x9, #2296]
  40b318:	mov	x11, sp
  40b31c:	add	x13, sp, #0x88
  40b320:	movk	x10, #0xff80, lsl #32
  40b324:	add	x11, x11, #0x80
  40b328:	add	x13, x13, #0x30
  40b32c:	add	x9, x29, #0x30
  40b330:	add	x0, sp, #0xb8
  40b334:	mov	w2, w8
  40b338:	mov	x3, xzr
  40b33c:	stp	x11, x10, [x29, #-80]
  40b340:	stp	x9, x13, [x29, #-96]
  40b344:	add	x21, sp, #0xb8
  40b348:	bl	430594 <feof@plt+0x2d894>
  40b34c:	mov	x0, x19
  40b350:	bl	402910 <gettext@plt>
  40b354:	mov	x19, x0
  40b358:	bl	402ac0 <__errno_location@plt>
  40b35c:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40b360:	ldr	w8, [x0]
  40b364:	ldr	x0, [x20, #944]
  40b368:	ldr	d0, [x10, #3600]
  40b36c:	sub	x9, x29, #0x60
  40b370:	sub	x1, x29, #0x40
  40b374:	stp	x19, x9, [x29, #-64]
  40b378:	stur	w8, [x29, #-48]
  40b37c:	stp	x21, x21, [x29, #-32]
  40b380:	stur	d0, [x29, #-8]
  40b384:	bl	40972c <feof@plt+0x6a2c>
  40b388:	add	x0, sp, #0xb8
  40b38c:	bl	430674 <feof@plt+0x2d974>
  40b390:	ldr	x0, [x20, #944]
  40b394:	ldr	w8, [x0, #240]
  40b398:	subs	w8, w8, #0x1
  40b39c:	str	w8, [x0, #240]
  40b3a0:	b.ne	40b3c4 <feof@plt+0x86c4>  // b.any
  40b3a4:	ldr	w8, [x0, #244]
  40b3a8:	cmp	w8, #0x1
  40b3ac:	b.lt	40b3c0 <feof@plt+0x86c0>  // b.tstop
  40b3b0:	ldr	x8, [x0, #256]
  40b3b4:	cbz	x8, 40b3c0 <feof@plt+0x86c0>
  40b3b8:	blr	x8
  40b3bc:	ldr	x0, [x20, #944]
  40b3c0:	str	wzr, [x0, #244]
  40b3c4:	ldp	x20, x19, [sp, #480]
  40b3c8:	ldp	x28, x21, [sp, #464]
  40b3cc:	ldp	x29, x30, [sp, #448]
  40b3d0:	add	sp, sp, #0x1f0
  40b3d4:	ret
  40b3d8:	sub	sp, sp, #0x140
  40b3dc:	stp	x29, x30, [sp, #272]
  40b3e0:	stp	x28, x21, [sp, #288]
  40b3e4:	stp	x20, x19, [sp, #304]
  40b3e8:	add	x29, sp, #0x110
  40b3ec:	stp	x2, x3, [sp, #128]
  40b3f0:	stp	x4, x5, [sp, #144]
  40b3f4:	stp	x6, x7, [sp, #160]
  40b3f8:	stp	q1, q2, [sp, #16]
  40b3fc:	stp	q3, q4, [sp, #48]
  40b400:	str	q0, [sp]
  40b404:	stp	q5, q6, [sp, #80]
  40b408:	str	q7, [sp, #112]
  40b40c:	cbz	x0, 40b4d0 <feof@plt+0x87d0>
  40b410:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b414:	ldr	x8, [x21, #944]
  40b418:	mov	x9, #0xffffffffffffffd0    	// #-48
  40b41c:	mov	x10, sp
  40b420:	add	x11, sp, #0x80
  40b424:	ldr	w12, [x8, #240]
  40b428:	mov	x19, x0
  40b42c:	movk	x9, #0xff80, lsl #32
  40b430:	add	x13, x29, #0x30
  40b434:	add	x10, x10, #0x80
  40b438:	add	x11, x11, #0x30
  40b43c:	add	w12, w12, #0x1
  40b440:	mov	x0, x1
  40b444:	str	w12, [x8, #240]
  40b448:	stp	x10, x9, [x29, #-80]
  40b44c:	stp	x13, x11, [x29, #-96]
  40b450:	bl	402910 <gettext@plt>
  40b454:	mov	x20, x0
  40b458:	bl	402ac0 <__errno_location@plt>
  40b45c:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40b460:	ldr	w8, [x0]
  40b464:	ldr	x0, [x21, #944]
  40b468:	ldr	d0, [x10, #3600]
  40b46c:	sub	x9, x29, #0x60
  40b470:	sub	x1, x29, #0x40
  40b474:	stp	x20, x9, [x29, #-64]
  40b478:	stur	w8, [x29, #-48]
  40b47c:	stp	x19, x19, [x29, #-32]
  40b480:	stur	d0, [x29, #-8]
  40b484:	bl	40972c <feof@plt+0x6a2c>
  40b488:	ldr	x0, [x21, #944]
  40b48c:	ldr	w8, [x0, #240]
  40b490:	subs	w8, w8, #0x1
  40b494:	str	w8, [x0, #240]
  40b498:	b.ne	40b4bc <feof@plt+0x87bc>  // b.any
  40b49c:	ldr	w8, [x0, #244]
  40b4a0:	cmp	w8, #0x1
  40b4a4:	b.lt	40b4b8 <feof@plt+0x87b8>  // b.tstop
  40b4a8:	ldr	x8, [x0, #256]
  40b4ac:	cbz	x8, 40b4b8 <feof@plt+0x87b8>
  40b4b0:	blr	x8
  40b4b4:	ldr	x0, [x21, #944]
  40b4b8:	str	wzr, [x0, #244]
  40b4bc:	ldp	x20, x19, [sp, #304]
  40b4c0:	ldp	x28, x21, [sp, #288]
  40b4c4:	ldp	x29, x30, [sp, #272]
  40b4c8:	add	sp, sp, #0x140
  40b4cc:	ret
  40b4d0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b4d4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b4d8:	add	x0, x0, #0xc8
  40b4dc:	add	x2, x2, #0x10d
  40b4e0:	mov	w1, #0x5be                 	// #1470
  40b4e4:	bl	408b70 <feof@plt+0x5e70>
  40b4e8:	sub	sp, sp, #0x1f0
  40b4ec:	stp	x29, x30, [sp, #448]
  40b4f0:	stp	x28, x21, [sp, #464]
  40b4f4:	stp	x20, x19, [sp, #480]
  40b4f8:	add	x29, sp, #0x1c0
  40b4fc:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b500:	ldr	x8, [x20, #944]
  40b504:	stp	q4, q5, [sp, #64]
  40b508:	stp	q2, q3, [sp, #32]
  40b50c:	stp	q0, q1, [sp]
  40b510:	stp	x6, x7, [sp, #168]
  40b514:	stp	x4, x5, [sp, #152]
  40b518:	stp	x2, x3, [sp, #136]
  40b51c:	str	x1, [sp, #128]
  40b520:	stp	q6, q7, [sp, #96]
  40b524:	ldr	w10, [x8, #240]
  40b528:	adrp	x13, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b52c:	mov	x9, #0xffffffffffffffc8    	// #-56
  40b530:	mov	x11, sp
  40b534:	add	w10, w10, #0x1
  40b538:	str	w10, [x8, #240]
  40b53c:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b540:	ldr	x1, [x13, #2296]
  40b544:	ldr	w2, [x8, #2288]
  40b548:	add	x12, sp, #0x80
  40b54c:	mov	x19, x0
  40b550:	movk	x9, #0xff80, lsl #32
  40b554:	add	x10, x11, #0x80
  40b558:	add	x11, x12, #0x38
  40b55c:	add	x8, x29, #0x30
  40b560:	add	x0, sp, #0xb8
  40b564:	mov	x3, xzr
  40b568:	stp	x10, x9, [x29, #-80]
  40b56c:	stp	x8, x11, [x29, #-96]
  40b570:	add	x21, sp, #0xb8
  40b574:	bl	430594 <feof@plt+0x2d894>
  40b578:	mov	x0, x19
  40b57c:	bl	402910 <gettext@plt>
  40b580:	mov	x19, x0
  40b584:	bl	402ac0 <__errno_location@plt>
  40b588:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40b58c:	ldr	w8, [x0]
  40b590:	ldr	x0, [x20, #944]
  40b594:	ldr	d0, [x10, #3608]
  40b598:	sub	x9, x29, #0x60
  40b59c:	sub	x1, x29, #0x40
  40b5a0:	stp	x19, x9, [x29, #-64]
  40b5a4:	stur	w8, [x29, #-48]
  40b5a8:	stp	x21, x21, [x29, #-32]
  40b5ac:	stur	d0, [x29, #-8]
  40b5b0:	bl	40972c <feof@plt+0x6a2c>
  40b5b4:	add	x0, sp, #0xb8
  40b5b8:	bl	430674 <feof@plt+0x2d974>
  40b5bc:	ldr	x0, [x20, #944]
  40b5c0:	ldr	w8, [x0, #240]
  40b5c4:	subs	w8, w8, #0x1
  40b5c8:	str	w8, [x0, #240]
  40b5cc:	b.ne	40b5f0 <feof@plt+0x88f0>  // b.any
  40b5d0:	ldr	w8, [x0, #244]
  40b5d4:	cmp	w8, #0x1
  40b5d8:	b.lt	40b5ec <feof@plt+0x88ec>  // b.tstop
  40b5dc:	ldr	x8, [x0, #256]
  40b5e0:	cbz	x8, 40b5ec <feof@plt+0x88ec>
  40b5e4:	blr	x8
  40b5e8:	ldr	x0, [x20, #944]
  40b5ec:	str	wzr, [x0, #244]
  40b5f0:	ldp	x20, x19, [sp, #480]
  40b5f4:	ldp	x28, x21, [sp, #464]
  40b5f8:	ldp	x29, x30, [sp, #448]
  40b5fc:	add	sp, sp, #0x1f0
  40b600:	ret
  40b604:	sub	sp, sp, #0x1f0
  40b608:	stp	x29, x30, [sp, #448]
  40b60c:	stp	x28, x21, [sp, #464]
  40b610:	stp	x20, x19, [sp, #480]
  40b614:	add	x29, sp, #0x1c0
  40b618:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b61c:	ldr	x9, [x20, #944]
  40b620:	stp	q4, q5, [sp, #64]
  40b624:	stp	q2, q3, [sp, #32]
  40b628:	stp	q0, q1, [sp]
  40b62c:	stp	x6, x7, [sp, #168]
  40b630:	stp	x4, x5, [sp, #152]
  40b634:	stp	x2, x3, [sp, #136]
  40b638:	stp	q6, q7, [sp, #96]
  40b63c:	ldr	w12, [x9, #240]
  40b640:	mov	x19, x1
  40b644:	mov	w8, w0
  40b648:	mov	x10, #0xffffffffffffffd0    	// #-48
  40b64c:	add	w12, w12, #0x1
  40b650:	str	w12, [x9, #240]
  40b654:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b658:	ldr	x1, [x9, #2296]
  40b65c:	mov	x11, sp
  40b660:	add	x13, sp, #0x88
  40b664:	movk	x10, #0xff80, lsl #32
  40b668:	add	x11, x11, #0x80
  40b66c:	add	x13, x13, #0x30
  40b670:	add	x9, x29, #0x30
  40b674:	add	x0, sp, #0xb8
  40b678:	mov	w2, w8
  40b67c:	mov	x3, xzr
  40b680:	stp	x11, x10, [x29, #-80]
  40b684:	stp	x9, x13, [x29, #-96]
  40b688:	add	x21, sp, #0xb8
  40b68c:	bl	430594 <feof@plt+0x2d894>
  40b690:	mov	x0, x19
  40b694:	bl	402910 <gettext@plt>
  40b698:	mov	x19, x0
  40b69c:	bl	402ac0 <__errno_location@plt>
  40b6a0:	adrp	x10, 456000 <_obstack_memory_used@@Base+0xdd8>
  40b6a4:	ldr	w8, [x0]
  40b6a8:	ldr	x0, [x20, #944]
  40b6ac:	ldr	d0, [x10, #3608]
  40b6b0:	sub	x9, x29, #0x60
  40b6b4:	sub	x1, x29, #0x40
  40b6b8:	stp	x19, x9, [x29, #-64]
  40b6bc:	stur	w8, [x29, #-48]
  40b6c0:	stp	x21, x21, [x29, #-32]
  40b6c4:	stur	d0, [x29, #-8]
  40b6c8:	bl	40972c <feof@plt+0x6a2c>
  40b6cc:	add	x0, sp, #0xb8
  40b6d0:	bl	430674 <feof@plt+0x2d974>
  40b6d4:	ldr	x0, [x20, #944]
  40b6d8:	ldr	w8, [x0, #240]
  40b6dc:	subs	w8, w8, #0x1
  40b6e0:	str	w8, [x0, #240]
  40b6e4:	b.ne	40b708 <feof@plt+0x8a08>  // b.any
  40b6e8:	ldr	w8, [x0, #244]
  40b6ec:	cmp	w8, #0x1
  40b6f0:	b.lt	40b704 <feof@plt+0x8a04>  // b.tstop
  40b6f4:	ldr	x8, [x0, #256]
  40b6f8:	cbz	x8, 40b704 <feof@plt+0x8a04>
  40b6fc:	blr	x8
  40b700:	ldr	x0, [x20, #944]
  40b704:	str	wzr, [x0, #244]
  40b708:	ldp	x20, x19, [sp, #480]
  40b70c:	ldp	x28, x21, [sp, #464]
  40b710:	ldp	x29, x30, [sp, #448]
  40b714:	add	sp, sp, #0x1f0
  40b718:	ret
  40b71c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b720:	ldr	x8, [x8, #944]
  40b724:	ldr	w9, [x8, #24]
  40b728:	cbz	w9, 40b734 <feof@plt+0x8a34>
  40b72c:	mov	w0, #0x1                   	// #1
  40b730:	ret
  40b734:	ldr	w8, [x8, #28]
  40b738:	cmp	w8, #0x0
  40b73c:	cset	w0, ne  // ne = any
  40b740:	ret
  40b744:	sub	sp, sp, #0x1a0
  40b748:	stp	x29, x30, [sp, #384]
  40b74c:	stp	x28, x19, [sp, #400]
  40b750:	add	x29, sp, #0x180
  40b754:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b758:	ldr	x9, [x9, #944]
  40b75c:	stp	q4, q5, [sp, #64]
  40b760:	stp	q2, q3, [sp, #32]
  40b764:	stp	q0, q1, [sp]
  40b768:	stp	x6, x7, [sp, #168]
  40b76c:	stp	x4, x5, [sp, #152]
  40b770:	stp	x2, x3, [sp, #136]
  40b774:	stp	q6, q7, [sp, #96]
  40b778:	ldr	w12, [x9, #240]
  40b77c:	mov	x19, x1
  40b780:	mov	w8, w0
  40b784:	mov	x10, #0xffffffffffffffd0    	// #-48
  40b788:	add	w12, w12, #0x1
  40b78c:	str	w12, [x9, #240]
  40b790:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b794:	ldr	x1, [x9, #2296]
  40b798:	mov	x11, sp
  40b79c:	add	x13, sp, #0x88
  40b7a0:	movk	x10, #0xff80, lsl #32
  40b7a4:	add	x11, x11, #0x80
  40b7a8:	add	x13, x13, #0x30
  40b7ac:	add	x9, x29, #0x20
  40b7b0:	add	x0, sp, #0xb8
  40b7b4:	mov	w2, w8
  40b7b8:	mov	x3, xzr
  40b7bc:	stp	x11, x10, [x29, #-16]
  40b7c0:	stp	x9, x13, [x29, #-32]
  40b7c4:	bl	430594 <feof@plt+0x2d894>
  40b7c8:	add	x0, sp, #0xb8
  40b7cc:	sub	x3, x29, #0x20
  40b7d0:	mov	w1, #0xffffffff            	// #-1
  40b7d4:	mov	w4, #0x2                   	// #2
  40b7d8:	mov	x2, x19
  40b7dc:	bl	40a078 <feof@plt+0x7378>
  40b7e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b7e4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b7e8:	add	x0, x0, #0xc8
  40b7ec:	add	x2, x2, #0x116
  40b7f0:	mov	w1, #0x5f6                 	// #1526
  40b7f4:	bl	408b70 <feof@plt+0x5e70>
  40b7f8:	sub	sp, sp, #0x1a0
  40b7fc:	stp	x29, x30, [sp, #384]
  40b800:	stp	x28, x19, [sp, #400]
  40b804:	add	x29, sp, #0x180
  40b808:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b80c:	ldr	x8, [x8, #944]
  40b810:	stp	q4, q5, [sp, #64]
  40b814:	stp	q2, q3, [sp, #32]
  40b818:	stp	q0, q1, [sp]
  40b81c:	stp	x6, x7, [sp, #168]
  40b820:	stp	x4, x5, [sp, #152]
  40b824:	stp	x2, x3, [sp, #136]
  40b828:	str	x1, [sp, #128]
  40b82c:	stp	q6, q7, [sp, #96]
  40b830:	ldr	w13, [x8, #240]
  40b834:	adrp	x12, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b838:	adrp	x14, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b83c:	mov	x9, #0xffffffffffffffc8    	// #-56
  40b840:	add	w13, w13, #0x1
  40b844:	str	w13, [x8, #240]
  40b848:	ldr	x1, [x12, #2296]
  40b84c:	ldr	w2, [x14, #2288]
  40b850:	mov	x10, sp
  40b854:	add	x11, sp, #0x80
  40b858:	mov	x19, x0
  40b85c:	movk	x9, #0xff80, lsl #32
  40b860:	add	x10, x10, #0x80
  40b864:	add	x11, x11, #0x38
  40b868:	add	x8, x29, #0x20
  40b86c:	add	x0, sp, #0xb8
  40b870:	mov	x3, xzr
  40b874:	stp	x10, x9, [x29, #-16]
  40b878:	stp	x8, x11, [x29, #-32]
  40b87c:	bl	430594 <feof@plt+0x2d894>
  40b880:	add	x0, sp, #0xb8
  40b884:	sub	x3, x29, #0x20
  40b888:	mov	w1, #0xffffffff            	// #-1
  40b88c:	mov	w4, #0x3                   	// #3
  40b890:	mov	x2, x19
  40b894:	bl	40a078 <feof@plt+0x7378>
  40b898:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b89c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b8a0:	add	x0, x0, #0xc8
  40b8a4:	add	x2, x2, #0x122
  40b8a8:	mov	w1, #0x607                 	// #1543
  40b8ac:	bl	408b70 <feof@plt+0x5e70>
  40b8b0:	sub	sp, sp, #0x1a0
  40b8b4:	stp	x29, x30, [sp, #384]
  40b8b8:	stp	x28, x19, [sp, #400]
  40b8bc:	add	x29, sp, #0x180
  40b8c0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b8c4:	ldr	x8, [x8, #944]
  40b8c8:	stp	q4, q5, [sp, #64]
  40b8cc:	stp	q2, q3, [sp, #32]
  40b8d0:	stp	q0, q1, [sp]
  40b8d4:	stp	x6, x7, [sp, #168]
  40b8d8:	stp	x4, x5, [sp, #152]
  40b8dc:	stp	x2, x3, [sp, #136]
  40b8e0:	str	x1, [sp, #128]
  40b8e4:	stp	q6, q7, [sp, #96]
  40b8e8:	ldr	w13, [x8, #240]
  40b8ec:	adrp	x12, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b8f0:	adrp	x14, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40b8f4:	mov	x9, #0xffffffffffffffc8    	// #-56
  40b8f8:	add	w13, w13, #0x1
  40b8fc:	str	w13, [x8, #240]
  40b900:	ldr	x1, [x12, #2296]
  40b904:	ldr	w2, [x14, #2288]
  40b908:	mov	x10, sp
  40b90c:	add	x11, sp, #0x80
  40b910:	mov	x19, x0
  40b914:	movk	x9, #0xff80, lsl #32
  40b918:	add	x10, x10, #0x80
  40b91c:	add	x11, x11, #0x38
  40b920:	add	x8, x29, #0x20
  40b924:	add	x0, sp, #0xb8
  40b928:	mov	x3, xzr
  40b92c:	stp	x10, x9, [x29, #-16]
  40b930:	stp	x8, x11, [x29, #-32]
  40b934:	bl	430594 <feof@plt+0x2d894>
  40b938:	add	x0, sp, #0xb8
  40b93c:	sub	x3, x29, #0x20
  40b940:	mov	w1, #0xffffffff            	// #-1
  40b944:	mov	w4, #0xd                   	// #13
  40b948:	mov	x2, x19
  40b94c:	bl	40a078 <feof@plt+0x7378>
  40b950:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b954:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40b958:	add	x0, x0, #0xc8
  40b95c:	add	x2, x2, #0x131
  40b960:	mov	w1, #0x617                 	// #1559
  40b964:	bl	408b70 <feof@plt+0x5e70>
  40b968:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b96c:	ldr	x8, [x8, #944]
  40b970:	ldr	w9, [x8, #240]
  40b974:	add	w9, w9, #0x1
  40b978:	str	w9, [x8, #240]
  40b97c:	ret
  40b980:	stp	x29, x30, [sp, #-32]!
  40b984:	str	x19, [sp, #16]
  40b988:	mov	x29, sp
  40b98c:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40b990:	ldr	x0, [x19, #944]
  40b994:	ldr	w8, [x0, #240]
  40b998:	subs	w8, w8, #0x1
  40b99c:	str	w8, [x0, #240]
  40b9a0:	b.ne	40b9c4 <feof@plt+0x8cc4>  // b.any
  40b9a4:	ldr	w8, [x0, #244]
  40b9a8:	cmp	w8, #0x1
  40b9ac:	b.lt	40b9c0 <feof@plt+0x8cc0>  // b.tstop
  40b9b0:	ldr	x8, [x0, #256]
  40b9b4:	cbz	x8, 40b9c0 <feof@plt+0x8cc0>
  40b9b8:	blr	x8
  40b9bc:	ldr	x0, [x19, #944]
  40b9c0:	str	wzr, [x0, #244]
  40b9c4:	ldr	x19, [sp, #16]
  40b9c8:	ldp	x29, x30, [sp], #32
  40b9cc:	ret
  40b9d0:	stp	x29, x30, [sp, #-80]!
  40b9d4:	stp	x26, x25, [sp, #16]
  40b9d8:	stp	x24, x23, [sp, #32]
  40b9dc:	stp	x22, x21, [sp, #48]
  40b9e0:	stp	x20, x19, [sp, #64]
  40b9e4:	mov	x29, sp
  40b9e8:	cbz	x0, 40baf4 <feof@plt+0x8df4>
  40b9ec:	mov	x20, x1
  40b9f0:	cbz	x1, 40bb0c <feof@plt+0x8e0c>
  40b9f4:	mov	w1, #0x22                  	// #34
  40b9f8:	mov	x19, x0
  40b9fc:	bl	41164c <feof@plt+0xe94c>
  40ba00:	ldrb	w8, [x20]
  40ba04:	cbz	w8, 40bad4 <feof@plt+0x8dd4>
  40ba08:	add	x25, x20, #0x1
  40ba0c:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ba10:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ba14:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x11dd8>
  40ba18:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ba1c:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ba20:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ba24:	add	x20, x20, #0x26b
  40ba28:	add	x21, x21, #0x26e
  40ba2c:	add	x26, x26, #0x3c4
  40ba30:	add	x22, x22, #0x274
  40ba34:	add	x23, x23, #0x271
  40ba38:	add	x24, x24, #0x268
  40ba3c:	b	40ba54 <feof@plt+0x8d54>
  40ba40:	mov	x0, x19
  40ba44:	mov	x1, x23
  40ba48:	bl	413430 <feof@plt+0x10730>
  40ba4c:	ldrb	w8, [x25], #1
  40ba50:	cbz	w8, 40bad4 <feof@plt+0x8dd4>
  40ba54:	and	w1, w8, #0xff
  40ba58:	cmp	w1, #0x21
  40ba5c:	b.gt	40ba7c <feof@plt+0x8d7c>
  40ba60:	cmp	w1, #0x9
  40ba64:	b.eq	40babc <feof@plt+0x8dbc>  // b.none
  40ba68:	cmp	w1, #0xa
  40ba6c:	b.ne	40ba98 <feof@plt+0x8d98>  // b.any
  40ba70:	mov	x0, x19
  40ba74:	mov	x1, x21
  40ba78:	b	40ba48 <feof@plt+0x8d48>
  40ba7c:	cmp	w1, #0x22
  40ba80:	b.eq	40ba40 <feof@plt+0x8d40>  // b.none
  40ba84:	cmp	w1, #0x5c
  40ba88:	b.ne	40ba98 <feof@plt+0x8d98>  // b.any
  40ba8c:	mov	x0, x19
  40ba90:	mov	x1, x24
  40ba94:	b	40ba48 <feof@plt+0x8d48>
  40ba98:	ldrh	w8, [x26, w1, uxtw #1]
  40ba9c:	tbnz	w8, #4, 40bac8 <feof@plt+0x8dc8>
  40baa0:	lsr	w2, w1, #6
  40baa4:	ubfx	w3, w1, #3, #3
  40baa8:	and	w4, w1, #0x7
  40baac:	mov	x0, x19
  40bab0:	mov	x1, x22
  40bab4:	bl	413c68 <feof@plt+0x10f68>
  40bab8:	b	40ba4c <feof@plt+0x8d4c>
  40babc:	mov	x0, x19
  40bac0:	mov	x1, x20
  40bac4:	b	40ba48 <feof@plt+0x8d48>
  40bac8:	mov	x0, x19
  40bacc:	bl	41164c <feof@plt+0xe94c>
  40bad0:	b	40ba4c <feof@plt+0x8d4c>
  40bad4:	mov	x0, x19
  40bad8:	ldp	x20, x19, [sp, #64]
  40badc:	ldp	x22, x21, [sp, #48]
  40bae0:	ldp	x24, x23, [sp, #32]
  40bae4:	ldp	x26, x25, [sp, #16]
  40bae8:	mov	w1, #0x22                  	// #34
  40baec:	ldp	x29, x30, [sp], #80
  40baf0:	b	41164c <feof@plt+0xe94c>
  40baf4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40baf8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bafc:	add	x0, x0, #0xc8
  40bb00:	add	x2, x2, #0x253
  40bb04:	mov	w1, #0x2f5                 	// #757
  40bb08:	bl	408b70 <feof@plt+0x5e70>
  40bb0c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bb10:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bb14:	add	x0, x0, #0xc8
  40bb18:	add	x2, x2, #0x253
  40bb1c:	mov	w1, #0x2f6                 	// #758
  40bb20:	bl	408b70 <feof@plt+0x5e70>
  40bb24:	stp	x29, x30, [sp, #-64]!
  40bb28:	str	x23, [sp, #16]
  40bb2c:	stp	x22, x21, [sp, #32]
  40bb30:	stp	x20, x19, [sp, #48]
  40bb34:	mov	x29, sp
  40bb38:	cbz	x1, 40bc08 <feof@plt+0x8f08>
  40bb3c:	ldr	x8, [x0, #16]
  40bb40:	mov	x20, x1
  40bb44:	mov	x19, x0
  40bb48:	cbz	x8, 40bb54 <feof@plt+0x8e54>
  40bb4c:	ldr	x0, [x20]
  40bb50:	blr	x8
  40bb54:	ldr	x8, [x19, #24]
  40bb58:	cbz	x8, 40bb64 <feof@plt+0x8e64>
  40bb5c:	ldr	x0, [x20, #8]
  40bb60:	blr	x8
  40bb64:	mov	x21, xzr
  40bb68:	str	xzr, [x20, #32]
  40bb6c:	ldr	x9, [x20, #16]
  40bb70:	cbz	x9, 40bba4 <feof@plt+0x8ea4>
  40bb74:	ldr	x8, [x19, #16]
  40bb78:	cbz	x8, 40bb84 <feof@plt+0x8e84>
  40bb7c:	ldr	x0, [x9]
  40bb80:	blr	x8
  40bb84:	ldr	x8, [x19, #24]
  40bb88:	cbz	x8, 40bb98 <feof@plt+0x8e98>
  40bb8c:	ldr	x9, [x20, #16]
  40bb90:	ldr	x0, [x9, #8]
  40bb94:	blr	x8
  40bb98:	ldr	x8, [x20, #16]
  40bb9c:	str	x21, [x8, #32]
  40bba0:	ldr	x21, [x20, #16]
  40bba4:	ldr	x9, [x20, #24]
  40bba8:	cbz	x9, 40bbe4 <feof@plt+0x8ee4>
  40bbac:	ldr	x8, [x19, #16]
  40bbb0:	cbz	x8, 40bbbc <feof@plt+0x8ebc>
  40bbb4:	ldr	x0, [x9]
  40bbb8:	blr	x8
  40bbbc:	ldr	x8, [x19, #24]
  40bbc0:	cbz	x8, 40bbd0 <feof@plt+0x8ed0>
  40bbc4:	ldr	x9, [x20, #24]
  40bbc8:	ldr	x0, [x9, #8]
  40bbcc:	blr	x8
  40bbd0:	ldr	x8, [x20, #24]
  40bbd4:	str	x21, [x8, #32]
  40bbd8:	ldr	x22, [x20, #24]
  40bbdc:	mov	x21, x22
  40bbe0:	b	40bbe8 <feof@plt+0x8ee8>
  40bbe4:	mov	x22, x21
  40bbe8:	ldr	x23, [x20, #32]
  40bbec:	mov	x0, x20
  40bbf0:	bl	402940 <_ZdlPv@plt>
  40bbf4:	mov	x20, x23
  40bbf8:	cbnz	x23, 40bb6c <feof@plt+0x8e6c>
  40bbfc:	mov	x21, xzr
  40bc00:	mov	x20, x22
  40bc04:	cbnz	x22, 40bb6c <feof@plt+0x8e6c>
  40bc08:	ldp	x20, x19, [sp, #48]
  40bc0c:	ldp	x22, x21, [sp, #32]
  40bc10:	ldr	x23, [sp, #16]
  40bc14:	ldp	x29, x30, [sp], #64
  40bc18:	ret
  40bc1c:	stp	x29, x30, [sp, #-48]!
  40bc20:	stp	x22, x21, [sp, #16]
  40bc24:	stp	x20, x19, [sp, #32]
  40bc28:	mov	x29, sp
  40bc2c:	tbz	w0, #0, 40bc84 <feof@plt+0x8f84>
  40bc30:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40bc34:	ldr	x0, [x8, #952]
  40bc38:	cbz	x0, 40bc84 <feof@plt+0x8f84>
  40bc3c:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40bc40:	adrp	x19, 455000 <_obstack_begin_1@@Base+0xa4>
  40bc44:	mov	x20, x2
  40bc48:	mov	x21, x1
  40bc4c:	add	x22, x22, #0x3d0
  40bc50:	add	x19, x19, #0xce0
  40bc54:	b	40bc60 <feof@plt+0x8f60>
  40bc58:	ldr	x0, [x22], #24
  40bc5c:	cbz	x0, 40bc8c <feof@plt+0x8f8c>
  40bc60:	ldurb	w8, [x22, #-8]
  40bc64:	cmp	x8, x20
  40bc68:	b.ne	40bc58 <feof@plt+0x8f58>  // b.any
  40bc6c:	mov	x1, x21
  40bc70:	mov	x2, x20
  40bc74:	bl	402cb0 <bcmp@plt>
  40bc78:	cbnz	w0, 40bc58 <feof@plt+0x8f58>
  40bc7c:	ldur	x19, [x22, #-16]
  40bc80:	b	40bc8c <feof@plt+0x8f8c>
  40bc84:	adrp	x19, 455000 <_obstack_begin_1@@Base+0xa4>
  40bc88:	add	x19, x19, #0xce0
  40bc8c:	mov	x0, x19
  40bc90:	ldp	x20, x19, [sp, #32]
  40bc94:	ldp	x22, x21, [sp, #16]
  40bc98:	ldp	x29, x30, [sp], #48
  40bc9c:	ret
  40bca0:	adrp	x8, 455000 <_obstack_begin_1@@Base+0xa4>
  40bca4:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bca8:	add	x8, x8, #0xce0
  40bcac:	add	x9, x9, #0x2bb
  40bcb0:	tst	w0, #0x1
  40bcb4:	csel	x0, x9, x8, ne  // ne = any
  40bcb8:	ret
  40bcbc:	stp	x29, x30, [sp, #-16]!
  40bcc0:	mov	x29, sp
  40bcc4:	cbz	w0, 40bd14 <feof@plt+0x9014>
  40bcc8:	cmp	w0, #0x2
  40bccc:	b.eq	40bce0 <feof@plt+0x8fe0>  // b.none
  40bcd0:	cmp	w0, #0x1
  40bcd4:	b.ne	40bd20 <feof@plt+0x9020>  // b.any
  40bcd8:	ldp	x29, x30, [sp], #16
  40bcdc:	b	40bd38 <feof@plt+0x9038>
  40bce0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bce4:	add	x0, x0, #0x3b7
  40bce8:	bl	402b90 <getenv@plt>
  40bcec:	cbz	x0, 40bd14 <feof@plt+0x9014>
  40bcf0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bcf4:	add	x1, x1, #0x3bc
  40bcf8:	bl	402b40 <strcmp@plt>
  40bcfc:	cbz	w0, 40bd14 <feof@plt+0x9014>
  40bd00:	mov	w0, #0x2                   	// #2
  40bd04:	bl	4027d0 <isatty@plt>
  40bd08:	cbz	w0, 40bd14 <feof@plt+0x9014>
  40bd0c:	ldp	x29, x30, [sp], #16
  40bd10:	b	40bd38 <feof@plt+0x9038>
  40bd14:	mov	w0, wzr
  40bd18:	ldp	x29, x30, [sp], #16
  40bd1c:	ret
  40bd20:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bd24:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bd28:	add	x0, x0, #0x2c2
  40bd2c:	add	x2, x2, #0x2df
  40bd30:	mov	w1, #0xec                  	// #236
  40bd34:	bl	408b70 <feof@plt+0x5e70>
  40bd38:	stp	x29, x30, [sp, #-96]!
  40bd3c:	stp	x28, x27, [sp, #16]
  40bd40:	stp	x26, x25, [sp, #32]
  40bd44:	stp	x24, x23, [sp, #48]
  40bd48:	stp	x22, x21, [sp, #64]
  40bd4c:	stp	x20, x19, [sp, #80]
  40bd50:	mov	x29, sp
  40bd54:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40bd58:	add	x0, x0, #0x3ac
  40bd5c:	bl	402b90 <getenv@plt>
  40bd60:	cbz	x0, 40beb0 <feof@plt+0x91b0>
  40bd64:	ldrb	w24, [x0]
  40bd68:	mov	x19, x0
  40bd6c:	cbz	w24, 40beb8 <feof@plt+0x91b8>
  40bd70:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40bd74:	mov	w27, #0x1b6d                	// #7021
  40bd78:	mov	x22, xzr
  40bd7c:	mov	x21, xzr
  40bd80:	mov	x20, xzr
  40bd84:	add	x26, x26, #0x3b8
  40bd88:	movk	w27, #0x4b5b, lsl #16
  40bd8c:	mov	w28, #0x1                   	// #1
  40bd90:	mov	x23, x19
  40bd94:	b	40bd9c <feof@plt+0x909c>
  40bd98:	ldrb	w24, [x19, #1]!
  40bd9c:	ands	w8, w24, #0xff
  40bda0:	b.eq	40bdb4 <feof@plt+0x90b4>  // b.none
  40bda4:	cmp	w8, #0x3d
  40bda8:	b.eq	40be70 <feof@plt+0x9170>  // b.none
  40bdac:	cmp	w8, #0x3a
  40bdb0:	b.ne	40be90 <feof@plt+0x9190>  // b.any
  40bdb4:	ldr	x0, [x26]
  40bdb8:	sub	x8, x19, x22
  40bdbc:	sub	x9, x19, x23
  40bdc0:	cmp	x22, #0x0
  40bdc4:	csel	x21, x21, x9, ne  // ne = any
  40bdc8:	csel	x20, x8, x20, ne  // ne = any
  40bdcc:	mov	x25, x26
  40bdd0:	cbnz	x0, 40bde0 <feof@plt+0x90e0>
  40bdd4:	b	40bdfc <feof@plt+0x90fc>
  40bdd8:	ldr	x0, [x25, #24]!
  40bddc:	cbz	x0, 40bdfc <feof@plt+0x90fc>
  40bde0:	ldrb	w8, [x25, #16]
  40bde4:	cmp	x21, x8
  40bde8:	b.ne	40bdd8 <feof@plt+0x90d8>  // b.any
  40bdec:	mov	x1, x23
  40bdf0:	mov	x2, x21
  40bdf4:	bl	402cb0 <bcmp@plt>
  40bdf8:	cbnz	w0, 40bdd8 <feof@plt+0x90d8>
  40bdfc:	cbz	x22, 40be54 <feof@plt+0x9154>
  40be00:	ldr	x0, [x25, #8]
  40be04:	cbz	x0, 40be54 <feof@plt+0x9154>
  40be08:	ldrb	w8, [x25, #17]
  40be0c:	cbz	w8, 40be14 <feof@plt+0x9114>
  40be10:	bl	402770 <free@plt>
  40be14:	add	x0, x20, #0x7
  40be18:	bl	45535c <_obstack_memory_used@@Base+0x134>
  40be1c:	mov	x24, x0
  40be20:	mov	w8, #0x5b1b                	// #23323
  40be24:	strh	w8, [x24], #2
  40be28:	mov	x23, x0
  40be2c:	mov	x0, x24
  40be30:	mov	x1, x22
  40be34:	mov	x2, x20
  40be38:	bl	402640 <memcpy@plt>
  40be3c:	add	x8, x24, x20
  40be40:	str	x23, [x25, #8]
  40be44:	str	w27, [x8]
  40be48:	strb	wzr, [x8, #4]
  40be4c:	strb	w28, [x25, #17]
  40be50:	ldrb	w24, [x19]
  40be54:	tst	w24, #0xff
  40be58:	b.eq	40beb0 <feof@plt+0x91b0>  // b.none
  40be5c:	add	x19, x19, #0x1
  40be60:	ldrb	w24, [x19]
  40be64:	mov	x22, xzr
  40be68:	mov	x23, x19
  40be6c:	b	40bd9c <feof@plt+0x909c>
  40be70:	subs	x21, x19, x23
  40be74:	mov	w0, #0x1                   	// #1
  40be78:	b.eq	40bebc <feof@plt+0x91bc>  // b.none
  40be7c:	cbnz	x22, 40bebc <feof@plt+0x91bc>
  40be80:	add	x19, x19, #0x1
  40be84:	ldrb	w24, [x19]
  40be88:	mov	x22, x19
  40be8c:	b	40bd9c <feof@plt+0x909c>
  40be90:	cbz	x22, 40bd98 <feof@plt+0x9098>
  40be94:	and	w8, w24, #0xff
  40be98:	cmp	w8, #0x3b
  40be9c:	b.eq	40bd98 <feof@plt+0x9098>  // b.none
  40bea0:	sub	w8, w24, #0x30
  40bea4:	and	w8, w8, #0xff
  40bea8:	cmp	w8, #0x9
  40beac:	b.ls	40bd98 <feof@plt+0x9098>  // b.plast
  40beb0:	mov	w0, #0x1                   	// #1
  40beb4:	b	40bebc <feof@plt+0x91bc>
  40beb8:	mov	w0, wzr
  40bebc:	ldp	x20, x19, [sp, #80]
  40bec0:	ldp	x22, x21, [sp, #64]
  40bec4:	ldp	x24, x23, [sp, #48]
  40bec8:	ldp	x26, x25, [sp, #32]
  40becc:	ldp	x28, x27, [sp, #16]
  40bed0:	ldp	x29, x30, [sp], #96
  40bed4:	ret
  40bed8:	sub	sp, sp, #0xe0
  40bedc:	stp	x29, x30, [sp, #176]
  40bee0:	str	x21, [sp, #192]
  40bee4:	stp	x20, x19, [sp, #208]
  40bee8:	add	x29, sp, #0xb0
  40beec:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  40bef0:	mov	w20, w1
  40bef4:	ldr	x1, [x8, #944]
  40bef8:	mov	x21, x0
  40befc:	add	x0, sp, #0x18
  40bf00:	mov	w3, #0x4                   	// #4
  40bf04:	mov	x2, x21
  40bf08:	bl	40bfe4 <feof@plt+0x92e4>
  40bf0c:	mov	w8, #0x1                   	// #1
  40bf10:	add	x0, sp, #0x18
  40bf14:	add	x1, sp, #0x8
  40bf18:	mov	w3, #0x1                   	// #1
  40bf1c:	mov	w2, wzr
  40bf20:	stp	w20, w8, [sp, #8]
  40bf24:	bl	40d15c <feof@plt+0xa45c>
  40bf28:	mov	w19, wzr
  40bf2c:	tbz	w0, #0, 40bf48 <feof@plt+0x9248>
  40bf30:	mov	w2, #0x1                   	// #1
  40bf34:	mov	x0, x21
  40bf38:	mov	w1, w20
  40bf3c:	mov	x3, xzr
  40bf40:	mov	w19, #0x1                   	// #1
  40bf44:	bl	4305cc <feof@plt+0x2d8cc>
  40bf48:	ldr	x0, [sp, #160]
  40bf4c:	cbz	x0, 40bf60 <feof@plt+0x9260>
  40bf50:	ldr	w8, [x0]
  40bf54:	tbnz	w8, #31, 40bf7c <feof@plt+0x927c>
  40bf58:	bl	402770 <free@plt>
  40bf5c:	str	xzr, [sp, #160]
  40bf60:	ldr	x0, [sp, #152]
  40bf64:	cbz	x0, 40bf90 <feof@plt+0x9290>
  40bf68:	ldr	w8, [x0]
  40bf6c:	tbnz	w8, #31, 40bf8c <feof@plt+0x928c>
  40bf70:	bl	402770 <free@plt>
  40bf74:	str	xzr, [sp, #152]
  40bf78:	b	40bf90 <feof@plt+0x9290>
  40bf7c:	str	wzr, [x0, #4]
  40bf80:	ldr	x0, [sp, #152]
  40bf84:	cbnz	x0, 40bf68 <feof@plt+0x9268>
  40bf88:	b	40bf90 <feof@plt+0x9290>
  40bf8c:	str	wzr, [x0, #4]
  40bf90:	ldr	x0, [sp, #144]
  40bf94:	cbz	x0, 40bfb0 <feof@plt+0x92b0>
  40bf98:	ldr	w8, [x0]
  40bf9c:	tbnz	w8, #31, 40bfac <feof@plt+0x92ac>
  40bfa0:	bl	402770 <free@plt>
  40bfa4:	str	xzr, [sp, #144]
  40bfa8:	b	40bfb0 <feof@plt+0x92b0>
  40bfac:	str	wzr, [x0, #4]
  40bfb0:	ldr	w8, [sp, #92]
  40bfb4:	cmn	w8, #0x1
  40bfb8:	b.eq	40bfcc <feof@plt+0x92cc>  // b.none
  40bfbc:	ldr	x8, [sp, #80]
  40bfc0:	ldr	x1, [sp, #128]
  40bfc4:	ldr	x0, [x8]
  40bfc8:	bl	413430 <feof@plt+0x10730>
  40bfcc:	mov	w0, w19
  40bfd0:	ldp	x20, x19, [sp, #208]
  40bfd4:	ldr	x21, [sp, #192]
  40bfd8:	ldp	x29, x30, [sp, #176]
  40bfdc:	add	sp, sp, #0xe0
  40bfe0:	ret
  40bfe4:	sub	sp, sp, #0x90
  40bfe8:	stp	x29, x30, [sp, #48]
  40bfec:	stp	x28, x27, [sp, #64]
  40bff0:	stp	x26, x25, [sp, #80]
  40bff4:	stp	x24, x23, [sp, #96]
  40bff8:	stp	x22, x21, [sp, #112]
  40bffc:	stp	x20, x19, [sp, #128]
  40c000:	add	x29, sp, #0x30
  40c004:	str	x1, [x0]
  40c008:	ldr	x8, [x1]
  40c00c:	mov	x20, x1
  40c010:	mov	x19, x0
  40c014:	mov	w1, wzr
  40c018:	str	x8, [x0, #8]
  40c01c:	mov	x0, x2
  40c020:	mov	w22, w3
  40c024:	mov	x21, x2
  40c028:	bl	430750 <feof@plt+0x2da50>
  40c02c:	ldr	w8, [x0]
  40c030:	mov	x0, x21
  40c034:	mov	w1, wzr
  40c038:	str	w8, [x19, #16]
  40c03c:	add	x8, x19, #0x18
  40c040:	bl	430774 <feof@plt+0x2da74>
  40c044:	mov	w8, #0xffffffff            	// #-1
  40c048:	str	x20, [x19, #56]
  40c04c:	stp	w22, w8, [x19, #64]
  40c050:	ldr	x8, [x20]
  40c054:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40c058:	add	x1, x1, #0x311
  40c05c:	mov	w2, #0x6                   	// #6
  40c060:	ldrb	w0, [x8, #67]
  40c064:	bl	40bc1c <feof@plt+0x8f1c>
  40c068:	ldr	x8, [x19, #56]
  40c06c:	str	x0, [x19, #72]
  40c070:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40c074:	add	x1, x1, #0x321
  40c078:	ldr	x8, [x8]
  40c07c:	mov	w2, #0x6                   	// #6
  40c080:	ldrb	w0, [x8, #67]
  40c084:	bl	40bc1c <feof@plt+0x8f1c>
  40c088:	ldr	x8, [x19, #56]
  40c08c:	str	x0, [x19, #80]
  40c090:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40c094:	add	x1, x1, #0x33a
  40c098:	ldr	x8, [x8]
  40c09c:	mov	w2, #0xc                   	// #12
  40c0a0:	ldrb	w0, [x8, #67]
  40c0a4:	bl	40bc1c <feof@plt+0x8f1c>
  40c0a8:	ldr	x8, [x19, #56]
  40c0ac:	str	x0, [x19, #88]
  40c0b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40c0b4:	add	x1, x1, #0x347
  40c0b8:	ldr	x8, [x8]
  40c0bc:	mov	w2, #0xc                   	// #12
  40c0c0:	ldrb	w0, [x8, #67]
  40c0c4:	bl	40bc1c <feof@plt+0x8f1c>
  40c0c8:	str	x0, [x19, #96]
  40c0cc:	ldr	x8, [x20]
  40c0d0:	ldrb	w0, [x8, #67]
  40c0d4:	bl	40bca0 <feof@plt+0x8fa0>
  40c0d8:	str	x0, [x19, #104]
  40c0dc:	ldrb	w8, [x20, #221]
  40c0e0:	str	x20, [sp, #8]
  40c0e4:	strb	w8, [x19, #112]
  40c0e8:	ldrb	w8, [x20, #222]
  40c0ec:	strb	w8, [x19, #113]
  40c0f0:	ldrb	w8, [x20, #223]
  40c0f4:	strb	w8, [x19, #114]
  40c0f8:	ldr	w20, [x21, #8]
  40c0fc:	str	xzr, [x19, #120]
  40c100:	cbz	w20, 40c124 <feof@plt+0x9424>
  40c104:	mov	w8, #0x28                  	// #40
  40c108:	orr	x9, xzr, #0x8
  40c10c:	madd	x1, x20, x8, x9
  40c110:	mov	x0, xzr
  40c114:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c118:	and	w8, w20, #0x7fffffff
  40c11c:	str	x0, [x19, #120]
  40c120:	stp	w8, wzr, [x0]
  40c124:	ldr	w20, [x21, #120]
  40c128:	str	xzr, [x19, #128]
  40c12c:	cbz	w20, 40c14c <feof@plt+0x944c>
  40c130:	lsl	x8, x20, #3
  40c134:	add	x1, x8, #0x8
  40c138:	mov	x0, xzr
  40c13c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c140:	and	w8, w20, #0x7fffffff
  40c144:	str	x0, [x19, #128]
  40c148:	stp	w8, wzr, [x0]
  40c14c:	ldr	w8, [x21, #8]
  40c150:	str	xzr, [x19, #136]
  40c154:	adds	w20, w8, #0x1
  40c158:	b.cs	40c17c <feof@plt+0x947c>  // b.hs, b.nlast
  40c15c:	mov	w8, w20
  40c160:	lsl	x8, x8, #3
  40c164:	add	x1, x8, #0x8
  40c168:	mov	x0, xzr
  40c16c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c170:	and	w8, w20, #0x7fffffff
  40c174:	str	x0, [x19, #136]
  40c178:	stp	w8, wzr, [x0]
  40c17c:	str	xzr, [x19, #144]
  40c180:	ldr	w8, [x21, #8]
  40c184:	cbz	w8, 40c1bc <feof@plt+0x94bc>
  40c188:	mov	w22, wzr
  40c18c:	mov	x0, x21
  40c190:	mov	w1, w22
  40c194:	bl	430750 <feof@plt+0x2da50>
  40c198:	mov	x1, x0
  40c19c:	mov	x0, x19
  40c1a0:	mov	w2, w22
  40c1a4:	mov	w3, wzr
  40c1a8:	bl	40d15c <feof@plt+0xa45c>
  40c1ac:	ldr	w8, [x21, #8]
  40c1b0:	add	w22, w22, #0x1
  40c1b4:	cmp	w22, w8
  40c1b8:	b.cc	40c18c <feof@plt+0x948c>  // b.lo, b.ul, b.last
  40c1bc:	ldr	w8, [x21, #120]
  40c1c0:	cbz	w8, 40c3b4 <feof@plt+0x96b4>
  40c1c4:	mov	w23, wzr
  40c1c8:	mov	w24, #0x4                   	// #4
  40c1cc:	b	40c200 <feof@plt+0x9500>
  40c1d0:	ldr	x11, [x19, #128]
  40c1d4:	str	w20, [x11, #4]
  40c1d8:	ldr	x8, [x19, #128]
  40c1dc:	ldr	w9, [x8, #4]
  40c1e0:	add	w10, w9, #0x1
  40c1e4:	add	x9, x8, x9, lsl #3
  40c1e8:	str	w10, [x8, #4]
  40c1ec:	str	x25, [x9, #8]
  40c1f0:	ldr	w8, [x21, #120]
  40c1f4:	add	w23, w23, #0x1
  40c1f8:	cmp	w23, w8
  40c1fc:	b.cs	40c3b4 <feof@plt+0x96b4>  // b.hs, b.nlast
  40c200:	cmp	w23, #0x1
  40c204:	b.gt	40c214 <feof@plt+0x9514>
  40c208:	add	x8, x21, w23, sxtw #3
  40c20c:	add	x8, x8, #0x80
  40c210:	b	40c220 <feof@plt+0x9520>
  40c214:	ldr	x8, [x21, #152]
  40c218:	add	x8, x8, w23, sxtw #3
  40c21c:	sub	x8, x8, #0x10
  40c220:	ldr	x25, [x8]
  40c224:	add	x8, sp, #0x10
  40c228:	ldr	w0, [x25]
  40c22c:	bl	4171b0 <feof@plt+0x144b0>
  40c230:	ldr	x8, [sp, #16]
  40c234:	ldr	x9, [x19, #24]
  40c238:	cmp	x8, x9
  40c23c:	b.ne	40c1f0 <feof@plt+0x94f0>  // b.any
  40c240:	ldr	w0, [x25, #4]
  40c244:	add	x8, sp, #0x10
  40c248:	bl	4171b0 <feof@plt+0x144b0>
  40c24c:	ldr	x8, [sp, #16]
  40c250:	ldr	x9, [x19, #24]
  40c254:	cmp	x8, x9
  40c258:	b.ne	40c1f0 <feof@plt+0x94f0>  // b.any
  40c25c:	ldr	x26, [x19, #128]
  40c260:	cbz	x26, 40c2a8 <feof@plt+0x95a8>
  40c264:	ldp	w8, w9, [x26]
  40c268:	and	w0, w8, #0x7fffffff
  40c26c:	cmp	w0, w9
  40c270:	b.ne	40c1d8 <feof@plt+0x94d8>  // b.any
  40c274:	tbnz	w8, #31, 40c2b8 <feof@plt+0x95b8>
  40c278:	add	w1, w0, #0x1
  40c27c:	bl	415344 <feof@plt+0x12644>
  40c280:	ldr	x8, [x19, #128]
  40c284:	mov	w9, w0
  40c288:	lsl	x9, x9, #3
  40c28c:	mov	w22, w0
  40c290:	add	x1, x9, #0x8
  40c294:	mov	w20, wzr
  40c298:	cbz	x8, 40c3a8 <feof@plt+0x96a8>
  40c29c:	ldr	w28, [x8, #4]
  40c2a0:	mov	w27, wzr
  40c2a4:	b	40c2e4 <feof@plt+0x95e4>
  40c2a8:	mov	w20, wzr
  40c2ac:	mov	w27, wzr
  40c2b0:	mov	w22, #0x4                   	// #4
  40c2b4:	b	40c2d0 <feof@plt+0x95d0>
  40c2b8:	str	xzr, [x19, #128]
  40c2bc:	ldr	w20, [x26, #4]
  40c2c0:	mov	w27, #0x1                   	// #1
  40c2c4:	add	w8, w20, #0x1
  40c2c8:	cmp	w8, #0x4
  40c2cc:	csinc	w22, w24, w20, ls  // ls = plast
  40c2d0:	mov	w9, w22
  40c2d4:	lsl	x9, x9, #3
  40c2d8:	mov	x8, xzr
  40c2dc:	mov	w28, wzr
  40c2e0:	add	x1, x9, #0x8
  40c2e4:	mov	x0, x8
  40c2e8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c2ec:	and	w8, w22, #0x7fffffff
  40c2f0:	str	x0, [x19, #128]
  40c2f4:	stp	w8, w28, [x0]
  40c2f8:	cbz	w27, 40c1d8 <feof@plt+0x94d8>
  40c2fc:	ldr	x11, [x19, #128]
  40c300:	cbz	w20, 40c1d4 <feof@plt+0x94d4>
  40c304:	sub	w12, w20, #0x1
  40c308:	add	x8, x26, #0x8
  40c30c:	cmp	w12, #0x3
  40c310:	add	x9, x11, #0x8
  40c314:	b.cs	40c320 <feof@plt+0x9620>  // b.hs, b.nlast
  40c318:	mov	w10, w20
  40c31c:	b	40c394 <feof@plt+0x9694>
  40c320:	lsl	x10, x12, #3
  40c324:	add	x13, x26, x10
  40c328:	add	x13, x13, #0x10
  40c32c:	cmp	x13, x9
  40c330:	b.ls	40c348 <feof@plt+0x9648>  // b.plast
  40c334:	add	x10, x11, x10
  40c338:	add	x10, x10, #0x10
  40c33c:	cmp	x10, x8
  40c340:	mov	w10, w20
  40c344:	b.hi	40c394 <feof@plt+0x9694>  // b.pmore
  40c348:	add	x12, x12, #0x1
  40c34c:	and	x13, x12, #0x1fffffffc
  40c350:	lsl	x8, x13, #3
  40c354:	add	x14, x11, #0x18
  40c358:	add	x9, x26, x8
  40c35c:	add	x11, x11, x8
  40c360:	sub	w10, w20, w13
  40c364:	add	x8, x9, #0x8
  40c368:	add	x9, x11, #0x8
  40c36c:	add	x11, x26, #0x18
  40c370:	mov	x15, x13
  40c374:	ldp	q0, q1, [x11, #-16]
  40c378:	subs	x15, x15, #0x4
  40c37c:	add	x11, x11, #0x20
  40c380:	stp	q0, q1, [x14, #-16]
  40c384:	add	x14, x14, #0x20
  40c388:	b.ne	40c374 <feof@plt+0x9674>  // b.any
  40c38c:	cmp	x12, x13
  40c390:	b.eq	40c1d0 <feof@plt+0x94d0>  // b.none
  40c394:	ldr	x11, [x8], #8
  40c398:	subs	w10, w10, #0x1
  40c39c:	str	x11, [x9], #8
  40c3a0:	b.ne	40c394 <feof@plt+0x9694>  // b.any
  40c3a4:	b	40c1d0 <feof@plt+0x94d0>
  40c3a8:	mov	w27, wzr
  40c3ac:	mov	w28, wzr
  40c3b0:	b	40c2e4 <feof@plt+0x95e4>
  40c3b4:	ldr	x8, [x19, #128]
  40c3b8:	cbz	x8, 40c3dc <feof@plt+0x96dc>
  40c3bc:	ldr	w1, [x8, #4]
  40c3c0:	cmp	w1, #0x2
  40c3c4:	b.cc	40c3dc <feof@plt+0x96dc>  // b.lo, b.ul, b.last
  40c3c8:	adrp	x3, 40e000 <feof@plt+0xb300>
  40c3cc:	add	x0, x8, #0x8
  40c3d0:	add	x3, x3, #0xf14
  40c3d4:	mov	w2, #0x8                   	// #8
  40c3d8:	bl	419e48 <feof@plt+0x17148>
  40c3dc:	mov	x24, x19
  40c3e0:	ldr	x8, [x24, #136]!
  40c3e4:	cbz	x8, 40c3f0 <feof@plt+0x96f0>
  40c3e8:	ldr	w8, [x8, #4]
  40c3ec:	cbnz	w8, 40d12c <feof@plt+0xa42c>
  40c3f0:	ldr	x8, [x19, #120]
  40c3f4:	cbz	x8, 40c410 <feof@plt+0x9710>
  40c3f8:	ldr	w8, [x8, #4]
  40c3fc:	adds	w8, w8, #0x1
  40c400:	b.cc	40c41c <feof@plt+0x971c>  // b.lo, b.ul, b.last
  40c404:	ldr	w20, [x19, #32]
  40c408:	mov	x21, xzr
  40c40c:	b	40c450 <feof@plt+0x9750>
  40c410:	mov	w8, #0x1                   	// #1
  40c414:	mov	w20, #0x1                   	// #1
  40c418:	b	40c420 <feof@plt+0x9720>
  40c41c:	mov	w20, w8
  40c420:	lsl	x8, x8, #3
  40c424:	add	x1, x8, #0x8
  40c428:	mov	x0, xzr
  40c42c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c430:	and	w8, w20, #0x7fffffff
  40c434:	stp	w8, wzr, [x0]
  40c438:	ldr	w20, [x19, #32]
  40c43c:	mov	x21, x0
  40c440:	cbz	x0, 40c450 <feof@plt+0x9750>
  40c444:	cbz	w8, 40c45c <feof@plt+0x975c>
  40c448:	mov	w23, wzr
  40c44c:	b	40c490 <feof@plt+0x9790>
  40c450:	mov	w23, wzr
  40c454:	mov	w22, #0x4                   	// #4
  40c458:	b	40c470 <feof@plt+0x9770>
  40c45c:	mov	w1, #0x1                   	// #1
  40c460:	mov	w0, wzr
  40c464:	bl	415344 <feof@plt+0x12644>
  40c468:	ldr	w23, [x21, #4]
  40c46c:	mov	w22, w0
  40c470:	mov	w8, w22
  40c474:	lsl	x8, x8, #3
  40c478:	add	x1, x8, #0x8
  40c47c:	mov	x0, x21
  40c480:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c484:	mov	x21, x0
  40c488:	and	w8, w22, #0x7fffffff
  40c48c:	stp	w8, w23, [x0]
  40c490:	mov	w9, w20
  40c494:	mov	w25, wzr
  40c498:	add	w22, w23, #0x1
  40c49c:	add	x8, x21, w23, uxtw #3
  40c4a0:	bfi	x9, x9, #32, #32
  40c4a4:	str	w22, [x21, #4]
  40c4a8:	str	x9, [x8, #8]
  40c4ac:	b	40c4d4 <feof@plt+0x97d4>
  40c4b0:	mov	x0, x21
  40c4b4:	ldr	w8, [x0, #4]
  40c4b8:	bfi	x28, x20, #32, #32
  40c4bc:	add	w25, w25, #0x1
  40c4c0:	mov	x21, x0
  40c4c4:	add	w22, w8, #0x1
  40c4c8:	add	x8, x0, x8, lsl #3
  40c4cc:	str	w22, [x0, #4]
  40c4d0:	str	x28, [x8, #8]
  40c4d4:	ldr	x8, [x19, #120]
  40c4d8:	cbz	x8, 40c4ec <feof@plt+0x97ec>
  40c4dc:	ldr	w9, [x8, #4]
  40c4e0:	cmp	w25, w9
  40c4e4:	b.cc	40c4f8 <feof@plt+0x97f8>  // b.lo, b.ul, b.last
  40c4e8:	b	40c644 <feof@plt+0x9944>
  40c4ec:	mov	w9, wzr
  40c4f0:	cmp	w25, w9
  40c4f4:	b.cs	40c644 <feof@plt+0x9944>  // b.hs, b.nlast
  40c4f8:	mov	w9, #0x28                  	// #40
  40c4fc:	umaddl	x8, w25, w9, x8
  40c500:	ldr	w28, [x8, #8]
  40c504:	ldr	w20, [x8, #16]
  40c508:	cmp	w28, w20
  40c50c:	b.hi	40d03c <feof@plt+0xa33c>  // b.pmore
  40c510:	cbz	x21, 40c54c <feof@plt+0x984c>
  40c514:	ldr	w8, [x21]
  40c518:	and	w9, w8, #0x7fffffff
  40c51c:	cmp	w9, w22
  40c520:	b.ne	40c4b0 <feof@plt+0x97b0>  // b.any
  40c524:	add	w1, w22, #0x1
  40c528:	tbnz	w8, #31, 40c564 <feof@plt+0x9864>
  40c52c:	mov	w0, w22
  40c530:	bl	415344 <feof@plt+0x12644>
  40c534:	ldr	w27, [x21, #4]
  40c538:	mov	w23, w0
  40c53c:	mov	w22, wzr
  40c540:	mov	w26, wzr
  40c544:	mov	x0, x21
  40c548:	b	40c57c <feof@plt+0x987c>
  40c54c:	mov	w22, wzr
  40c550:	mov	w26, wzr
  40c554:	mov	x0, xzr
  40c558:	mov	w27, wzr
  40c55c:	mov	w23, #0x4                   	// #4
  40c560:	b	40c57c <feof@plt+0x987c>
  40c564:	cmp	w1, #0x4
  40c568:	mov	w8, #0x4                   	// #4
  40c56c:	mov	x0, xzr
  40c570:	mov	w27, wzr
  40c574:	csel	w23, w1, w8, hi  // hi = pmore
  40c578:	mov	w26, #0x1                   	// #1
  40c57c:	mov	w8, w23
  40c580:	lsl	x8, x8, #3
  40c584:	add	x1, x8, #0x8
  40c588:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c58c:	and	w8, w23, #0x7fffffff
  40c590:	stp	w8, w27, [x0]
  40c594:	cbz	w26, 40c4b4 <feof@plt+0x97b4>
  40c598:	cbz	w22, 40c63c <feof@plt+0x993c>
  40c59c:	sub	w10, w22, #0x1
  40c5a0:	add	x9, x21, #0x8
  40c5a4:	cmp	w10, #0x3
  40c5a8:	add	x8, x0, #0x8
  40c5ac:	b.cs	40c5b8 <feof@plt+0x98b8>  // b.hs, b.nlast
  40c5b0:	mov	w10, w22
  40c5b4:	b	40c62c <feof@plt+0x992c>
  40c5b8:	lsl	x11, x10, #3
  40c5bc:	add	x12, x21, x11
  40c5c0:	add	x12, x12, #0x10
  40c5c4:	cmp	x8, x12
  40c5c8:	b.cs	40c5e4 <feof@plt+0x98e4>  // b.hs, b.nlast
  40c5cc:	add	x11, x0, x11
  40c5d0:	add	x11, x11, #0x10
  40c5d4:	cmp	x11, x9
  40c5d8:	b.ls	40c5e4 <feof@plt+0x98e4>  // b.plast
  40c5dc:	mov	w10, w22
  40c5e0:	b	40c62c <feof@plt+0x992c>
  40c5e4:	add	x11, x10, #0x1
  40c5e8:	and	x12, x11, #0x1fffffffc
  40c5ec:	lsl	x9, x12, #3
  40c5f0:	add	x14, x21, x9
  40c5f4:	add	x13, x0, #0x18
  40c5f8:	sub	w10, w22, w12
  40c5fc:	add	x8, x8, x9
  40c600:	add	x9, x14, #0x8
  40c604:	add	x14, x21, #0x18
  40c608:	mov	x15, x12
  40c60c:	ldp	q0, q1, [x14, #-16]
  40c610:	subs	x15, x15, #0x4
  40c614:	add	x14, x14, #0x20
  40c618:	stp	q0, q1, [x13, #-16]
  40c61c:	add	x13, x13, #0x20
  40c620:	b.ne	40c60c <feof@plt+0x990c>  // b.any
  40c624:	cmp	x11, x12
  40c628:	b.eq	40c63c <feof@plt+0x993c>  // b.none
  40c62c:	ldr	x11, [x9], #8
  40c630:	subs	w10, w10, #0x1
  40c634:	str	x11, [x8], #8
  40c638:	b.ne	40c62c <feof@plt+0x992c>  // b.any
  40c63c:	str	w22, [x0, #4]
  40c640:	b	40c4b4 <feof@plt+0x97b4>
  40c644:	mov	w25, wzr
  40c648:	mov	w26, #0x4                   	// #4
  40c64c:	b	40c670 <feof@plt+0x9970>
  40c650:	mov	x0, x21
  40c654:	ldr	w8, [x0, #4]
  40c658:	add	w25, w25, #0x1
  40c65c:	mov	x21, x0
  40c660:	add	w22, w8, #0x1
  40c664:	add	x8, x0, x8, lsl #3
  40c668:	str	w22, [x0, #4]
  40c66c:	str	x20, [x8, #8]
  40c670:	ldr	x8, [x19, #128]
  40c674:	cbz	x8, 40c688 <feof@plt+0x9988>
  40c678:	ldr	w9, [x8, #4]
  40c67c:	cmp	w25, w9
  40c680:	b.cc	40c694 <feof@plt+0x9994>  // b.lo, b.ul, b.last
  40c684:	b	40c81c <feof@plt+0x9b1c>
  40c688:	mov	w9, wzr
  40c68c:	cmp	w25, w9
  40c690:	b.cs	40c81c <feof@plt+0x9b1c>  // b.hs, b.nlast
  40c694:	add	x8, x8, w25, uxtw #3
  40c698:	ldr	x22, [x8, #8]
  40c69c:	cbz	x22, 40d054 <feof@plt+0xa354>
  40c6a0:	ldr	w0, [x22]
  40c6a4:	add	x8, sp, #0x10
  40c6a8:	bl	4171b0 <feof@plt+0x144b0>
  40c6ac:	ldr	w20, [sp, #24]
  40c6b0:	mov	x0, x22
  40c6b4:	bl	43178c <feof@plt+0x2ea8c>
  40c6b8:	ldr	w9, [x22, #4]
  40c6bc:	cmp	w20, #0x1
  40c6c0:	cset	w8, gt
  40c6c4:	and	w8, w8, w0
  40c6c8:	sub	w20, w20, w8
  40c6cc:	add	x8, sp, #0x10
  40c6d0:	mov	w0, w9
  40c6d4:	bl	4171b0 <feof@plt+0x144b0>
  40c6d8:	ldr	w8, [sp, #24]
  40c6dc:	cmp	w20, w8
  40c6e0:	b.hi	40d09c <feof@plt+0xa39c>  // b.pmore
  40c6e4:	mov	w20, w20
  40c6e8:	bfi	x20, x8, #32, #32
  40c6ec:	cbz	x21, 40c728 <feof@plt+0x9a28>
  40c6f0:	ldp	w8, w9, [x21]
  40c6f4:	and	w22, w8, #0x7fffffff
  40c6f8:	cmp	w22, w9
  40c6fc:	b.ne	40c650 <feof@plt+0x9950>  // b.any
  40c700:	add	w1, w22, #0x1
  40c704:	tbnz	w8, #31, 40c740 <feof@plt+0x9a40>
  40c708:	mov	w0, w22
  40c70c:	bl	415344 <feof@plt+0x12644>
  40c710:	ldr	w27, [x21, #4]
  40c714:	mov	w23, w0
  40c718:	mov	w22, wzr
  40c71c:	mov	w28, wzr
  40c720:	mov	x0, x21
  40c724:	b	40c754 <feof@plt+0x9a54>
  40c728:	mov	w22, wzr
  40c72c:	mov	w28, wzr
  40c730:	mov	x0, xzr
  40c734:	mov	w27, wzr
  40c738:	mov	w23, #0x4                   	// #4
  40c73c:	b	40c754 <feof@plt+0x9a54>
  40c740:	cmp	w22, #0x4
  40c744:	mov	x0, xzr
  40c748:	mov	w27, wzr
  40c74c:	csel	w23, w26, w1, cc  // cc = lo, ul, last
  40c750:	mov	w28, #0x1                   	// #1
  40c754:	mov	w8, w23
  40c758:	lsl	x8, x8, #3
  40c75c:	add	x1, x8, #0x8
  40c760:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c764:	and	w8, w23, #0x7fffffff
  40c768:	stp	w8, w27, [x0]
  40c76c:	cbz	w28, 40c654 <feof@plt+0x9954>
  40c770:	cbz	w22, 40c814 <feof@plt+0x9b14>
  40c774:	sub	w10, w22, #0x1
  40c778:	add	x9, x21, #0x8
  40c77c:	cmp	w10, #0x3
  40c780:	add	x8, x0, #0x8
  40c784:	b.cs	40c790 <feof@plt+0x9a90>  // b.hs, b.nlast
  40c788:	mov	w10, w22
  40c78c:	b	40c804 <feof@plt+0x9b04>
  40c790:	lsl	x11, x10, #3
  40c794:	add	x12, x21, x11
  40c798:	add	x12, x12, #0x10
  40c79c:	cmp	x8, x12
  40c7a0:	b.cs	40c7bc <feof@plt+0x9abc>  // b.hs, b.nlast
  40c7a4:	add	x11, x0, x11
  40c7a8:	add	x11, x11, #0x10
  40c7ac:	cmp	x11, x9
  40c7b0:	b.ls	40c7bc <feof@plt+0x9abc>  // b.plast
  40c7b4:	mov	w10, w22
  40c7b8:	b	40c804 <feof@plt+0x9b04>
  40c7bc:	add	x11, x10, #0x1
  40c7c0:	and	x12, x11, #0x1fffffffc
  40c7c4:	lsl	x9, x12, #3
  40c7c8:	add	x14, x21, x9
  40c7cc:	add	x13, x0, #0x18
  40c7d0:	sub	w10, w22, w12
  40c7d4:	add	x8, x8, x9
  40c7d8:	add	x9, x14, #0x8
  40c7dc:	add	x14, x21, #0x18
  40c7e0:	mov	x15, x12
  40c7e4:	ldp	q0, q1, [x14, #-16]
  40c7e8:	subs	x15, x15, #0x4
  40c7ec:	add	x14, x14, #0x20
  40c7f0:	stp	q0, q1, [x13, #-16]
  40c7f4:	add	x13, x13, #0x20
  40c7f8:	b.ne	40c7e4 <feof@plt+0x9ae4>  // b.any
  40c7fc:	cmp	x11, x12
  40c800:	b.eq	40c814 <feof@plt+0x9b14>  // b.none
  40c804:	ldr	x11, [x9], #8
  40c808:	subs	w10, w10, #0x1
  40c80c:	str	x11, [x8], #8
  40c810:	b.ne	40c804 <feof@plt+0x9b04>  // b.any
  40c814:	str	w22, [x0, #4]
  40c818:	b	40c654 <feof@plt+0x9954>
  40c81c:	cbz	x21, 40d0e4 <feof@plt+0xa3e4>
  40c820:	cmp	w22, #0x2
  40c824:	b.cc	40c844 <feof@plt+0x9b44>  // b.lo, b.ul, b.last
  40c828:	adrp	x3, 40e000 <feof@plt+0xb300>
  40c82c:	add	x0, x21, #0x8
  40c830:	mov	w1, w22
  40c834:	add	x3, x3, #0xf2c
  40c838:	mov	w2, #0x8                   	// #8
  40c83c:	bl	419e48 <feof@plt+0x17148>
  40c840:	ldr	w22, [x21, #4]
  40c844:	cbz	w22, 40d0e4 <feof@plt+0xa3e4>
  40c848:	ldr	x23, [x24]
  40c84c:	cbz	x23, 40c894 <feof@plt+0x9b94>
  40c850:	ldp	w8, w9, [x23]
  40c854:	and	w0, w8, #0x7fffffff
  40c858:	cmp	w0, w9
  40c85c:	b.ne	40c99c <feof@plt+0x9c9c>  // b.any
  40c860:	tbnz	w8, #31, 40c8a4 <feof@plt+0x9ba4>
  40c864:	add	w1, w0, #0x1
  40c868:	bl	415344 <feof@plt+0x12644>
  40c86c:	ldr	x8, [x24]
  40c870:	mov	w9, w0
  40c874:	lsl	x9, x9, #3
  40c878:	mov	w22, w0
  40c87c:	add	x1, x9, #0x8
  40c880:	mov	w20, wzr
  40c884:	cbz	x8, 40d030 <feof@plt+0xa330>
  40c888:	ldr	w26, [x8, #4]
  40c88c:	mov	w25, wzr
  40c890:	b	40c8d4 <feof@plt+0x9bd4>
  40c894:	mov	w20, wzr
  40c898:	mov	w25, wzr
  40c89c:	mov	w22, #0x4                   	// #4
  40c8a0:	b	40c8c0 <feof@plt+0x9bc0>
  40c8a4:	str	xzr, [x24]
  40c8a8:	ldr	w20, [x23, #4]
  40c8ac:	mov	w8, #0x4                   	// #4
  40c8b0:	mov	w25, #0x1                   	// #1
  40c8b4:	add	w9, w20, #0x1
  40c8b8:	cmp	w9, #0x4
  40c8bc:	csinc	w22, w8, w20, ls  // ls = plast
  40c8c0:	mov	w9, w22
  40c8c4:	lsl	x9, x9, #3
  40c8c8:	mov	x8, xzr
  40c8cc:	mov	w26, wzr
  40c8d0:	add	x1, x9, #0x8
  40c8d4:	mov	x0, x8
  40c8d8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40c8dc:	and	w8, w22, #0x7fffffff
  40c8e0:	str	x0, [x24]
  40c8e4:	stp	w8, w26, [x0]
  40c8e8:	cbz	w25, 40c99c <feof@plt+0x9c9c>
  40c8ec:	ldr	x11, [x24]
  40c8f0:	cbz	w20, 40c998 <feof@plt+0x9c98>
  40c8f4:	sub	w12, w20, #0x1
  40c8f8:	add	x8, x23, #0x8
  40c8fc:	cmp	w12, #0x3
  40c900:	add	x9, x11, #0x8
  40c904:	b.cs	40c910 <feof@plt+0x9c10>  // b.hs, b.nlast
  40c908:	mov	w10, w20
  40c90c:	b	40c984 <feof@plt+0x9c84>
  40c910:	lsl	x10, x12, #3
  40c914:	add	x13, x23, x10
  40c918:	add	x13, x13, #0x10
  40c91c:	cmp	x9, x13
  40c920:	b.cs	40c938 <feof@plt+0x9c38>  // b.hs, b.nlast
  40c924:	add	x10, x11, x10
  40c928:	add	x10, x10, #0x10
  40c92c:	cmp	x8, x10
  40c930:	mov	w10, w20
  40c934:	b.cc	40c984 <feof@plt+0x9c84>  // b.lo, b.ul, b.last
  40c938:	add	x12, x12, #0x1
  40c93c:	and	x13, x12, #0x1fffffffc
  40c940:	lsl	x8, x13, #3
  40c944:	add	x14, x11, #0x18
  40c948:	add	x9, x23, x8
  40c94c:	add	x11, x11, x8
  40c950:	sub	w10, w20, w13
  40c954:	add	x8, x9, #0x8
  40c958:	add	x9, x11, #0x8
  40c95c:	add	x11, x23, #0x18
  40c960:	mov	x15, x13
  40c964:	ldp	q0, q1, [x11, #-16]
  40c968:	subs	x15, x15, #0x4
  40c96c:	add	x11, x11, #0x20
  40c970:	stp	q0, q1, [x14, #-16]
  40c974:	add	x14, x14, #0x20
  40c978:	b.ne	40c964 <feof@plt+0x9c64>  // b.any
  40c97c:	cmp	x12, x13
  40c980:	b.eq	40c994 <feof@plt+0x9c94>  // b.none
  40c984:	ldr	x11, [x8], #8
  40c988:	subs	w10, w10, #0x1
  40c98c:	str	x11, [x9], #8
  40c990:	b.ne	40c984 <feof@plt+0x9c84>  // b.any
  40c994:	ldr	x11, [x24]
  40c998:	str	w20, [x11, #4]
  40c99c:	ldr	x8, [x24]
  40c9a0:	mov	w23, #0x1                   	// #1
  40c9a4:	ldr	w9, [x8, #4]
  40c9a8:	add	w10, w9, #0x1
  40c9ac:	str	w10, [x8, #4]
  40c9b0:	ldr	x10, [x21, #8]
  40c9b4:	add	x8, x8, x9, lsl #3
  40c9b8:	str	x10, [x8, #8]
  40c9bc:	b	40c9e8 <feof@plt+0x9ce8>
  40c9c0:	ldr	x11, [x24]
  40c9c4:	str	w20, [x11, #4]
  40c9c8:	ldr	x8, [x24]
  40c9cc:	ldr	w9, [x8, #4]
  40c9d0:	add	w10, w9, #0x1
  40c9d4:	str	w10, [x8, #4]
  40c9d8:	ldr	x10, [x27]
  40c9dc:	add	x8, x8, x9, lsl #3
  40c9e0:	str	x10, [x8, #8]
  40c9e4:	add	w23, w23, #0x1
  40c9e8:	ldr	x26, [x24]
  40c9ec:	ldr	w8, [x21, #4]
  40c9f0:	cbz	x26, 40ca04 <feof@plt+0x9d04>
  40c9f4:	ldr	w9, [x26, #4]
  40c9f8:	cmp	w23, w8
  40c9fc:	b.cc	40ca10 <feof@plt+0x9d10>  // b.lo, b.ul, b.last
  40ca00:	b	40cba8 <feof@plt+0x9ea8>
  40ca04:	mov	w9, wzr
  40ca08:	cmp	w23, w8
  40ca0c:	b.cs	40cba8 <feof@plt+0x9ea8>  // b.hs, b.nlast
  40ca10:	sub	w8, w9, #0x1
  40ca14:	add	x27, x21, w23, uxtw #3
  40ca18:	add	x10, x26, w8, uxtw #3
  40ca1c:	ldr	w9, [x27, #8]!
  40ca20:	ldr	w10, [x10, #8]
  40ca24:	cmp	w9, w10
  40ca28:	b.cc	40d06c <feof@plt+0xa36c>  // b.lo, b.ul, b.last
  40ca2c:	add	x8, x26, x8, lsl #3
  40ca30:	ldrb	w11, [x19, #114]
  40ca34:	ldr	w10, [x8, #12]!
  40ca38:	add	x11, x11, x10
  40ca3c:	add	x11, x11, #0x1
  40ca40:	cmp	x11, x9
  40ca44:	b.cs	40ca8c <feof@plt+0x9d8c>  // b.hs, b.nlast
  40ca48:	ldp	w8, w9, [x26]
  40ca4c:	and	w0, w8, #0x7fffffff
  40ca50:	cmp	w0, w9
  40ca54:	b.ne	40c9c8 <feof@plt+0x9cc8>  // b.any
  40ca58:	tbnz	w8, #31, 40caac <feof@plt+0x9dac>
  40ca5c:	add	w1, w0, #0x1
  40ca60:	bl	415344 <feof@plt+0x12644>
  40ca64:	ldr	x8, [x24]
  40ca68:	mov	w9, w0
  40ca6c:	lsl	x9, x9, #3
  40ca70:	mov	w22, w0
  40ca74:	add	x1, x9, #0x8
  40ca78:	mov	w20, wzr
  40ca7c:	cbz	x8, 40cadc <feof@plt+0x9ddc>
  40ca80:	ldr	w28, [x8, #4]
  40ca84:	mov	w25, wzr
  40ca88:	b	40cae4 <feof@plt+0x9de4>
  40ca8c:	mov	w9, w23
  40ca90:	add	x9, x21, x9, lsl #3
  40ca94:	ldr	w9, [x9, #12]
  40ca98:	cmp	w9, w10
  40ca9c:	b.ls	40c9e4 <feof@plt+0x9ce4>  // b.plast
  40caa0:	str	w9, [x8]
  40caa4:	add	w23, w23, #0x1
  40caa8:	b	40c9e8 <feof@plt+0x9ce8>
  40caac:	str	xzr, [x24]
  40cab0:	ldr	w20, [x26, #4]
  40cab4:	mov	x8, xzr
  40cab8:	mov	w28, wzr
  40cabc:	mov	w25, #0x1                   	// #1
  40cac0:	add	w9, w20, #0x1
  40cac4:	cmp	w9, #0x4
  40cac8:	mov	w9, #0x4                   	// #4
  40cacc:	csinc	w22, w9, w20, ls  // ls = plast
  40cad0:	lsl	x9, x22, #3
  40cad4:	add	x1, x9, #0x8
  40cad8:	b	40cae4 <feof@plt+0x9de4>
  40cadc:	mov	w25, wzr
  40cae0:	mov	w28, wzr
  40cae4:	mov	x0, x8
  40cae8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40caec:	and	w8, w22, #0x7fffffff
  40caf0:	str	x0, [x24]
  40caf4:	stp	w8, w28, [x0]
  40caf8:	cbz	w25, 40c9c8 <feof@plt+0x9cc8>
  40cafc:	ldr	x11, [x24]
  40cb00:	cbz	w20, 40c9c4 <feof@plt+0x9cc4>
  40cb04:	sub	w12, w20, #0x1
  40cb08:	add	x8, x26, #0x8
  40cb0c:	cmp	w12, #0x3
  40cb10:	add	x9, x11, #0x8
  40cb14:	b.cs	40cb20 <feof@plt+0x9e20>  // b.hs, b.nlast
  40cb18:	mov	w10, w20
  40cb1c:	b	40cb94 <feof@plt+0x9e94>
  40cb20:	lsl	x10, x12, #3
  40cb24:	add	x13, x26, x10
  40cb28:	add	x13, x13, #0x10
  40cb2c:	cmp	x13, x9
  40cb30:	b.ls	40cb48 <feof@plt+0x9e48>  // b.plast
  40cb34:	add	x10, x11, x10
  40cb38:	add	x10, x10, #0x10
  40cb3c:	cmp	x10, x8
  40cb40:	mov	w10, w20
  40cb44:	b.hi	40cb94 <feof@plt+0x9e94>  // b.pmore
  40cb48:	add	x12, x12, #0x1
  40cb4c:	and	x13, x12, #0x1fffffffc
  40cb50:	lsl	x8, x13, #3
  40cb54:	add	x14, x11, #0x18
  40cb58:	add	x9, x26, x8
  40cb5c:	add	x11, x11, x8
  40cb60:	sub	w10, w20, w13
  40cb64:	add	x8, x9, #0x8
  40cb68:	add	x9, x11, #0x8
  40cb6c:	add	x11, x26, #0x18
  40cb70:	mov	x15, x13
  40cb74:	ldp	q0, q1, [x11, #-16]
  40cb78:	subs	x15, x15, #0x4
  40cb7c:	add	x11, x11, #0x20
  40cb80:	stp	q0, q1, [x14, #-16]
  40cb84:	add	x14, x14, #0x20
  40cb88:	b.ne	40cb74 <feof@plt+0x9e74>  // b.any
  40cb8c:	cmp	x12, x13
  40cb90:	b.eq	40c9c0 <feof@plt+0x9cc0>  // b.none
  40cb94:	ldr	x11, [x8], #8
  40cb98:	subs	w10, w10, #0x1
  40cb9c:	str	x11, [x9], #8
  40cba0:	b.ne	40cb94 <feof@plt+0x9e94>  // b.any
  40cba4:	b	40c9c0 <feof@plt+0x9cc0>
  40cba8:	cbz	w9, 40d114 <feof@plt+0xa414>
  40cbac:	mov	x8, xzr
  40cbb0:	add	x9, x26, #0x14
  40cbb4:	add	x10, x8, #0x1
  40cbb8:	cbz	x26, 40cbcc <feof@plt+0x9ecc>
  40cbbc:	ldr	w11, [x26, #4]
  40cbc0:	cmp	x10, w11, uxtw
  40cbc4:	b.cc	40cbd8 <feof@plt+0x9ed8>  // b.lo, b.ul, b.last
  40cbc8:	b	40cc28 <feof@plt+0x9f28>
  40cbcc:	mov	w11, wzr
  40cbd0:	cmp	x10, w11, uxtw
  40cbd4:	b.cs	40cc28 <feof@plt+0x9f28>  // b.hs, b.nlast
  40cbd8:	add	x10, x26, w8, uxtw #3
  40cbdc:	ldp	w12, w10, [x10, #8]
  40cbe0:	cmp	w12, w10
  40cbe4:	b.hi	40d084 <feof@plt+0xa384>  // b.pmore
  40cbe8:	ldp	w11, w13, [x9, #-4]
  40cbec:	cmp	w11, w13
  40cbf0:	b.hi	40d0b4 <feof@plt+0xa3b4>  // b.pmore
  40cbf4:	cmp	w12, w11
  40cbf8:	b.cs	40d0cc <feof@plt+0xa3cc>  // b.hs, b.nlast
  40cbfc:	add	w10, w10, #0x1
  40cc00:	add	x9, x9, #0x8
  40cc04:	cmp	w10, w11
  40cc08:	add	x8, x8, #0x1
  40cc0c:	b.cc	40cbb4 <feof@plt+0x9eb4>  // b.lo, b.ul, b.last
  40cc10:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40cc14:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40cc18:	add	x0, x0, #0x3c7
  40cc1c:	add	x2, x2, #0x3f0
  40cc20:	mov	w1, #0x4d8                 	// #1240
  40cc24:	bl	408b70 <feof@plt+0x5e70>
  40cc28:	ldr	w8, [x21]
  40cc2c:	tbnz	w8, #31, 40cc3c <feof@plt+0x9f3c>
  40cc30:	mov	x0, x21
  40cc34:	bl	402770 <free@plt>
  40cc38:	b	40cc40 <feof@plt+0x9f40>
  40cc3c:	str	wzr, [x21, #4]
  40cc40:	ldr	x8, [x19, #136]
  40cc44:	ldr	x21, [sp, #8]
  40cc48:	cbz	x8, 40d0fc <feof@plt+0xa3fc>
  40cc4c:	ldr	w9, [x8, #4]
  40cc50:	cbz	w9, 40d0fc <feof@plt+0xa3fc>
  40cc54:	sub	w9, w9, #0x1
  40cc58:	add	x8, x8, w9, uxtw #3
  40cc5c:	ldr	w8, [x8, #12]
  40cc60:	bic	w0, w8, w8, asr #31
  40cc64:	bl	409cc0 <feof@plt+0x6fc0>
  40cc68:	ldr	x8, [x19, #136]
  40cc6c:	str	w0, [x19, #144]
  40cc70:	cbz	x8, 40cc90 <feof@plt+0x9f90>
  40cc74:	ldr	w8, [x8, #4]
  40cc78:	cmp	w8, #0x2
  40cc7c:	b.cc	40cc90 <feof@plt+0x9f90>  // b.lo, b.ul, b.last
  40cc80:	cmp	w0, #0x3
  40cc84:	mov	w8, #0x3                   	// #3
  40cc88:	csel	w0, w0, w8, gt
  40cc8c:	str	w0, [x19, #144]
  40cc90:	ldr	w9, [x21, #224]
  40cc94:	ldr	x10, [x19]
  40cc98:	ldr	x8, [x19, #24]
  40cc9c:	ldr	w1, [x19, #32]
  40cca0:	sub	w11, w9, #0x1
  40cca4:	cmp	w0, w9
  40cca8:	csel	w9, w11, w0, lt  // lt = tstop
  40ccac:	str	w9, [x19, #144]
  40ccb0:	ldrsw	x20, [x10, #112]
  40ccb4:	mov	x0, x8
  40ccb8:	bl	416df0 <feof@plt+0x140f0>
  40ccbc:	cbz	x0, 40cd18 <feof@plt+0xa018>
  40ccc0:	ldrsw	x8, [x19, #36]
  40ccc4:	cmp	x1, x8
  40ccc8:	b.cc	40cd18 <feof@plt+0xa018>  // b.lo, b.ul, b.last
  40cccc:	ldrb	w9, [x19, #114]
  40ccd0:	cbz	w9, 40cce0 <feof@plt+0x9fe0>
  40ccd4:	ldrsw	x9, [x19, #144]
  40ccd8:	add	x8, x9, x8
  40ccdc:	add	x8, x8, #0x2
  40cce0:	sub	x9, x1, x8
  40cce4:	mov	w10, #0xa                   	// #10
  40cce8:	cmp	x9, #0xa
  40ccec:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  40ccf0:	cmp	x1, x20
  40ccf4:	b.cc	40cd10 <feof@plt+0xa010>  // b.lo, b.ul, b.last
  40ccf8:	sub	x9, x20, x9
  40ccfc:	cmp	x8, x9
  40cd00:	b.ls	40cd10 <feof@plt+0xa010>  // b.plast
  40cd04:	sub	w8, w8, w9
  40cd08:	str	w8, [x19, #148]
  40cd0c:	b	40cd14 <feof@plt+0xa014>
  40cd10:	ldr	w8, [x19, #148]
  40cd14:	tbnz	w8, #31, 40d144 <feof@plt+0xa444>
  40cd18:	ldrb	w8, [x21, #228]
  40cd1c:	cbz	w8, 40d010 <feof@plt+0xa310>
  40cd20:	ldr	w8, [x19, #148]
  40cd24:	add	w20, w8, w20
  40cd28:	cmp	w20, #0x64
  40cd2c:	b.lt	40ce40 <feof@plt+0xa140>  // b.tstop
  40cd30:	ldrb	w8, [x19, #114]
  40cd34:	cbz	w8, 40cda4 <feof@plt+0xa0a4>
  40cd38:	ldr	w8, [x19, #144]
  40cd3c:	cmp	w8, #0x4
  40cd40:	b.lt	40cd6c <feof@plt+0xa06c>  // b.tstop
  40cd44:	mov	w21, wzr
  40cd48:	ldr	x0, [x19, #8]
  40cd4c:	mov	w1, #0x20                  	// #32
  40cd50:	bl	41164c <feof@plt+0xe94c>
  40cd54:	ldr	w8, [x19, #144]
  40cd58:	add	w21, w21, #0x1
  40cd5c:	sub	w9, w8, #0x3
  40cd60:	cmp	w21, w9
  40cd64:	b.lt	40cd48 <feof@plt+0xa048>  // b.tstop
  40cd68:	b	40cd70 <feof@plt+0xa070>
  40cd6c:	mov	w21, wzr
  40cd70:	ldr	x0, [x19, #8]
  40cd74:	cmp	w21, w8
  40cd78:	b.ge	40cd98 <feof@plt+0xa098>  // b.tcont
  40cd7c:	mov	w1, #0x20                  	// #32
  40cd80:	bl	41164c <feof@plt+0xe94c>
  40cd84:	ldr	w8, [x19, #144]
  40cd88:	ldr	x0, [x19, #8]
  40cd8c:	add	w21, w21, #0x1
  40cd90:	cmp	w21, w8
  40cd94:	b.lt	40cd7c <feof@plt+0xa07c>  // b.tstop
  40cd98:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40cd9c:	add	x1, x1, #0x40f
  40cda0:	bl	413430 <feof@plt+0x10730>
  40cda4:	ldr	x0, [x19, #8]
  40cda8:	mov	w1, #0x20                  	// #32
  40cdac:	bl	41164c <feof@plt+0xe94c>
  40cdb0:	ldr	w21, [x19, #148]
  40cdb4:	cmp	w21, w20
  40cdb8:	b.ge	40ce38 <feof@plt+0xa138>  // b.tcont
  40cdbc:	mov	w22, #0xcccd                	// #52429
  40cdc0:	mov	w23, #0x9998                	// #39320
  40cdc4:	mov	w24, #0x851f                	// #34079
  40cdc8:	mov	w25, #0x6667                	// #26215
  40cdcc:	movk	w22, #0xcccc, lsl #16
  40cdd0:	movk	w23, #0x1999, lsl #16
  40cdd4:	movk	w24, #0x51eb, lsl #16
  40cdd8:	movk	w25, #0x6666, lsl #16
  40cddc:	mov	w26, #0xa                   	// #10
  40cde0:	b	40cdf4 <feof@plt+0xa0f4>
  40cde4:	mov	w1, #0x20                  	// #32
  40cde8:	bl	41164c <feof@plt+0xe94c>
  40cdec:	cmp	w20, w21
  40cdf0:	b.eq	40ce38 <feof@plt+0xa138>  // b.none
  40cdf4:	add	w21, w21, #0x1
  40cdf8:	ldr	x0, [x19, #8]
  40cdfc:	madd	w8, w21, w22, w23
  40ce00:	ror	w8, w8, #1
  40ce04:	cmp	w8, w23
  40ce08:	b.hi	40cde4 <feof@plt+0xa0e4>  // b.pmore
  40ce0c:	smull	x8, w21, w24
  40ce10:	lsr	x9, x8, #63
  40ce14:	asr	x8, x8, #37
  40ce18:	add	w8, w8, w9
  40ce1c:	smull	x9, w8, w25
  40ce20:	lsr	x10, x9, #63
  40ce24:	asr	x9, x9, #34
  40ce28:	add	w9, w9, w10
  40ce2c:	msub	w8, w9, w26, w8
  40ce30:	add	w1, w8, #0x30
  40ce34:	b	40cde8 <feof@plt+0xa0e8>
  40ce38:	ldr	x0, [x19, #8]
  40ce3c:	bl	413db4 <feof@plt+0x110b4>
  40ce40:	ldrb	w8, [x19, #114]
  40ce44:	cbz	w8, 40ceb4 <feof@plt+0xa1b4>
  40ce48:	ldr	w8, [x19, #144]
  40ce4c:	cmp	w8, #0x4
  40ce50:	b.lt	40ce7c <feof@plt+0xa17c>  // b.tstop
  40ce54:	mov	w21, wzr
  40ce58:	ldr	x0, [x19, #8]
  40ce5c:	mov	w1, #0x20                  	// #32
  40ce60:	bl	41164c <feof@plt+0xe94c>
  40ce64:	ldr	w8, [x19, #144]
  40ce68:	add	w21, w21, #0x1
  40ce6c:	sub	w9, w8, #0x3
  40ce70:	cmp	w21, w9
  40ce74:	b.lt	40ce58 <feof@plt+0xa158>  // b.tstop
  40ce78:	b	40ce80 <feof@plt+0xa180>
  40ce7c:	mov	w21, wzr
  40ce80:	ldr	x0, [x19, #8]
  40ce84:	cmp	w21, w8
  40ce88:	b.ge	40cea8 <feof@plt+0xa1a8>  // b.tcont
  40ce8c:	mov	w1, #0x20                  	// #32
  40ce90:	bl	41164c <feof@plt+0xe94c>
  40ce94:	ldr	w8, [x19, #144]
  40ce98:	ldr	x0, [x19, #8]
  40ce9c:	add	w21, w21, #0x1
  40cea0:	cmp	w21, w8
  40cea4:	b.lt	40ce8c <feof@plt+0xa18c>  // b.tstop
  40cea8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ceac:	add	x1, x1, #0x40f
  40ceb0:	bl	413430 <feof@plt+0x10730>
  40ceb4:	ldr	x0, [x19, #8]
  40ceb8:	mov	w1, #0x20                  	// #32
  40cebc:	bl	41164c <feof@plt+0xe94c>
  40cec0:	ldr	w8, [x19, #148]
  40cec4:	cmp	w8, w20
  40cec8:	b.ge	40cf3c <feof@plt+0xa23c>  // b.tcont
  40cecc:	mov	w23, #0x6667                	// #26215
  40ced0:	add	w21, w8, #0x1
  40ced4:	neg	w22, w20
  40ced8:	movk	w23, #0x6666, lsl #16
  40cedc:	mov	w24, #0xa                   	// #10
  40cee0:	b	40cf10 <feof@plt+0xa210>
  40cee4:	smull	x9, w8, w23
  40cee8:	lsr	x10, x9, #63
  40ceec:	asr	x9, x9, #34
  40cef0:	add	w9, w9, w10
  40cef4:	msub	w8, w9, w24, w8
  40cef8:	add	w1, w8, #0x30
  40cefc:	bl	41164c <feof@plt+0xe94c>
  40cf00:	add	w21, w21, #0x1
  40cf04:	add	w8, w22, w21
  40cf08:	cmp	w8, #0x1
  40cf0c:	b.eq	40cf3c <feof@plt+0xa23c>  // b.none
  40cf10:	smull	x8, w21, w23
  40cf14:	lsr	x9, x8, #63
  40cf18:	asr	x8, x8, #34
  40cf1c:	add	w8, w8, w9
  40cf20:	ldr	x0, [x19, #8]
  40cf24:	add	w9, w8, w8, lsl #2
  40cf28:	lsl	w9, w9, #1
  40cf2c:	cmp	w9, w21
  40cf30:	b.eq	40cee4 <feof@plt+0xa1e4>  // b.none
  40cf34:	mov	w1, #0x20                  	// #32
  40cf38:	b	40cefc <feof@plt+0xa1fc>
  40cf3c:	ldr	x0, [x19, #8]
  40cf40:	bl	413db4 <feof@plt+0x110b4>
  40cf44:	ldrb	w8, [x19, #114]
  40cf48:	cbz	w8, 40cfb8 <feof@plt+0xa2b8>
  40cf4c:	ldr	w8, [x19, #144]
  40cf50:	cmp	w8, #0x4
  40cf54:	b.lt	40cf80 <feof@plt+0xa280>  // b.tstop
  40cf58:	mov	w21, wzr
  40cf5c:	ldr	x0, [x19, #8]
  40cf60:	mov	w1, #0x20                  	// #32
  40cf64:	bl	41164c <feof@plt+0xe94c>
  40cf68:	ldr	w8, [x19, #144]
  40cf6c:	add	w21, w21, #0x1
  40cf70:	sub	w9, w8, #0x3
  40cf74:	cmp	w21, w9
  40cf78:	b.lt	40cf5c <feof@plt+0xa25c>  // b.tstop
  40cf7c:	b	40cf84 <feof@plt+0xa284>
  40cf80:	mov	w21, wzr
  40cf84:	ldr	x0, [x19, #8]
  40cf88:	cmp	w21, w8
  40cf8c:	b.ge	40cfac <feof@plt+0xa2ac>  // b.tcont
  40cf90:	mov	w1, #0x20                  	// #32
  40cf94:	bl	41164c <feof@plt+0xe94c>
  40cf98:	ldr	w8, [x19, #144]
  40cf9c:	ldr	x0, [x19, #8]
  40cfa0:	add	w21, w21, #0x1
  40cfa4:	cmp	w21, w8
  40cfa8:	b.lt	40cf90 <feof@plt+0xa290>  // b.tstop
  40cfac:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40cfb0:	add	x1, x1, #0x40f
  40cfb4:	bl	413430 <feof@plt+0x10730>
  40cfb8:	ldr	x0, [x19, #8]
  40cfbc:	mov	w1, #0x20                  	// #32
  40cfc0:	bl	41164c <feof@plt+0xe94c>
  40cfc4:	ldr	w21, [x19, #148]
  40cfc8:	ldr	x0, [x19, #8]
  40cfcc:	cmp	w21, w20
  40cfd0:	b.ge	40d00c <feof@plt+0xa30c>  // b.tcont
  40cfd4:	mov	w22, #0x6667                	// #26215
  40cfd8:	movk	w22, #0x6666, lsl #16
  40cfdc:	mov	w23, #0xa                   	// #10
  40cfe0:	add	w21, w21, #0x1
  40cfe4:	smull	x8, w21, w22
  40cfe8:	lsr	x9, x8, #63
  40cfec:	asr	x8, x8, #34
  40cff0:	add	w8, w8, w9
  40cff4:	msub	w8, w8, w23, w21
  40cff8:	add	w1, w8, #0x30
  40cffc:	bl	41164c <feof@plt+0xe94c>
  40d000:	ldr	x0, [x19, #8]
  40d004:	cmp	w20, w21
  40d008:	b.ne	40cfe0 <feof@plt+0xa2e0>  // b.any
  40d00c:	bl	413db4 <feof@plt+0x110b4>
  40d010:	ldp	x20, x19, [sp, #128]
  40d014:	ldp	x22, x21, [sp, #112]
  40d018:	ldp	x24, x23, [sp, #96]
  40d01c:	ldp	x26, x25, [sp, #80]
  40d020:	ldp	x28, x27, [sp, #64]
  40d024:	ldp	x29, x30, [sp, #48]
  40d028:	add	sp, sp, #0x90
  40d02c:	ret
  40d030:	mov	w25, wzr
  40d034:	mov	w26, wzr
  40d038:	b	40c8d4 <feof@plt+0x9bd4>
  40d03c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d040:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d044:	add	x0, x0, #0x3c7
  40d048:	add	x2, x2, #0x3f0
  40d04c:	mov	w1, #0x4a4                 	// #1188
  40d050:	bl	408b70 <feof@plt+0x5e70>
  40d054:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d058:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d05c:	add	x0, x0, #0x3c7
  40d060:	add	x2, x2, #0x3f0
  40d064:	mov	w1, #0x4ad                 	// #1197
  40d068:	bl	408b70 <feof@plt+0x5e70>
  40d06c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d070:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d074:	add	x0, x0, #0x3c7
  40d078:	add	x2, x2, #0x3f0
  40d07c:	mov	w1, #0x4bc                 	// #1212
  40d080:	bl	408b70 <feof@plt+0x5e70>
  40d084:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d088:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d08c:	add	x0, x0, #0x3c7
  40d090:	add	x2, x2, #0x3f0
  40d094:	mov	w1, #0x4d3                 	// #1235
  40d098:	bl	408b70 <feof@plt+0x5e70>
  40d09c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0a0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0a4:	add	x0, x0, #0x3c7
  40d0a8:	add	x2, x2, #0x405
  40d0ac:	mov	w1, #0xa5                  	// #165
  40d0b0:	bl	408b70 <feof@plt+0x5e70>
  40d0b4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0b8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0bc:	add	x0, x0, #0x3c7
  40d0c0:	add	x2, x2, #0x3f0
  40d0c4:	mov	w1, #0x4d4                 	// #1236
  40d0c8:	bl	408b70 <feof@plt+0x5e70>
  40d0cc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0d0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0d4:	add	x0, x0, #0x3c7
  40d0d8:	add	x2, x2, #0x3f0
  40d0dc:	mov	w1, #0x4d6                 	// #1238
  40d0e0:	bl	408b70 <feof@plt+0x5e70>
  40d0e4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0e8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d0ec:	add	x0, x0, #0x3c7
  40d0f0:	add	x2, x2, #0x3f0
  40d0f4:	mov	w1, #0x4b6                 	// #1206
  40d0f8:	bl	408b70 <feof@plt+0x5e70>
  40d0fc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d100:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d104:	add	x0, x0, #0x3c7
  40d108:	add	x2, x2, #0x3e9
  40d10c:	mov	w1, #0x36a                 	// #874
  40d110:	bl	408b70 <feof@plt+0x5e70>
  40d114:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d118:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d11c:	add	x0, x0, #0x3c7
  40d120:	add	x2, x2, #0x3f0
  40d124:	mov	w1, #0x4cd                 	// #1229
  40d128:	bl	408b70 <feof@plt+0x5e70>
  40d12c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d130:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d134:	add	x0, x0, #0x3c7
  40d138:	add	x2, x2, #0x3f0
  40d13c:	mov	w1, #0x49b                 	// #1179
  40d140:	bl	408b70 <feof@plt+0x5e70>
  40d144:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d148:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d14c:	add	x0, x0, #0x3c7
  40d150:	add	x2, x2, #0x3e9
  40d154:	mov	w1, #0x386                 	// #902
  40d158:	bl	408b70 <feof@plt+0x5e70>
  40d15c:	sub	sp, sp, #0xf0
  40d160:	stp	x29, x30, [sp, #144]
  40d164:	stp	x28, x27, [sp, #160]
  40d168:	stp	x26, x25, [sp, #176]
  40d16c:	stp	x24, x23, [sp, #192]
  40d170:	stp	x22, x21, [sp, #208]
  40d174:	stp	x20, x19, [sp, #224]
  40d178:	add	x29, sp, #0x90
  40d17c:	cbz	x1, 40d54c <feof@plt+0xa84c>
  40d180:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40d184:	mov	x21, x1
  40d188:	mov	x20, x0
  40d18c:	ldr	x0, [x8, #2296]
  40d190:	ldr	w1, [x1]
  40d194:	mov	w22, w3
  40d198:	mov	w19, w2
  40d19c:	bl	42e2f8 <feof@plt+0x2b5f8>
  40d1a0:	sub	x8, x29, #0x20
  40d1a4:	mov	w1, #0x1                   	// #1
  40d1a8:	mov	x24, x0
  40d1ac:	lsr	x23, x0, #32
  40d1b0:	bl	417354 <feof@plt+0x14654>
  40d1b4:	sub	x8, x29, #0x40
  40d1b8:	mov	w1, #0x2                   	// #2
  40d1bc:	mov	w0, w23
  40d1c0:	bl	417354 <feof@plt+0x14654>
  40d1c4:	ldr	w0, [x21]
  40d1c8:	add	x8, sp, #0x30
  40d1cc:	mov	w1, wzr
  40d1d0:	bl	417354 <feof@plt+0x14654>
  40d1d4:	ldur	x8, [x29, #-32]
  40d1d8:	ldr	x9, [x20, #24]
  40d1dc:	mov	w0, wzr
  40d1e0:	cmp	x8, x9
  40d1e4:	b.ne	40d1f8 <feof@plt+0xa4f8>  // b.any
  40d1e8:	ldur	x9, [x29, #-64]
  40d1ec:	cmp	x9, x8
  40d1f0:	b.eq	40d218 <feof@plt+0xa518>  // b.none
  40d1f4:	mov	w0, wzr
  40d1f8:	ldp	x20, x19, [sp, #224]
  40d1fc:	ldp	x22, x21, [sp, #208]
  40d200:	ldp	x24, x23, [sp, #192]
  40d204:	ldp	x26, x25, [sp, #176]
  40d208:	ldp	x28, x27, [sp, #160]
  40d20c:	ldp	x29, x30, [sp, #144]
  40d210:	add	sp, sp, #0xf0
  40d214:	ret
  40d218:	ldr	w10, [x21, #4]
  40d21c:	cbz	w10, 40d2e8 <feof@plt+0xa5e8>
  40d220:	ldr	x8, [x20, #120]
  40d224:	cbz	x8, 40d248 <feof@plt+0xa548>
  40d228:	ldr	w8, [x8, #4]
  40d22c:	cbz	w8, 40d248 <feof@plt+0xa548>
  40d230:	cbnz	w10, 40d248 <feof@plt+0xa548>
  40d234:	ldr	w0, [x21]
  40d238:	ldr	w1, [x20, #16]
  40d23c:	bl	40ef70 <feof@plt+0xc270>
  40d240:	tbz	w0, #0, 40d1f4 <feof@plt+0xa4f4>
  40d244:	ldr	w10, [x21, #4]
  40d248:	ldr	x8, [x21, #8]
  40d24c:	ldur	w9, [x29, #-24]
  40d250:	ldp	w16, w14, [sp, #56]
  40d254:	str	w10, [sp, #36]
  40d258:	str	x8, [sp, #40]
  40d25c:	ldur	w8, [x29, #-56]
  40d260:	cmp	w9, w8
  40d264:	b.gt	40d2c4 <feof@plt+0xa5c4>
  40d268:	mov	w26, w8
  40d26c:	ldur	w8, [x29, #-20]
  40d270:	ldr	w1, [x20, #16]
  40d274:	ldur	w28, [x29, #-52]
  40d278:	mov	w0, w24
  40d27c:	mov	w27, w9
  40d280:	str	x8, [sp, #24]
  40d284:	mov	x24, x14
  40d288:	mov	x25, x16
  40d28c:	bl	40ef70 <feof@plt+0xc270>
  40d290:	mov	x16, x25
  40d294:	mov	x14, x24
  40d298:	tbz	w0, #0, 40d2c4 <feof@plt+0xa5c4>
  40d29c:	ldr	w1, [x20, #16]
  40d2a0:	mov	w0, w23
  40d2a4:	bl	40ef70 <feof@plt+0xc270>
  40d2a8:	mov	x16, x25
  40d2ac:	mov	x14, x24
  40d2b0:	tbz	w0, #0, 40d2c4 <feof@plt+0xa5c4>
  40d2b4:	mov	x15, x28
  40d2b8:	ldr	x28, [sp, #24]
  40d2bc:	mov	w25, w27
  40d2c0:	b	40d308 <feof@plt+0xa608>
  40d2c4:	ldr	x8, [x20, #120]
  40d2c8:	cbz	x8, 40d2f8 <feof@plt+0xa5f8>
  40d2cc:	ldr	w8, [x8, #4]
  40d2d0:	mov	w26, w16
  40d2d4:	mov	w15, w14
  40d2d8:	mov	w25, w16
  40d2dc:	mov	w28, w14
  40d2e0:	cbnz	w8, 40d1f4 <feof@plt+0xa4f4>
  40d2e4:	b	40d308 <feof@plt+0xa608>
  40d2e8:	ldr	x9, [sp, #48]
  40d2ec:	cmp	x9, x8
  40d2f0:	b.ne	40d1f4 <feof@plt+0xa4f4>  // b.any
  40d2f4:	b	40d220 <feof@plt+0xa520>
  40d2f8:	mov	w26, w16
  40d2fc:	mov	w15, w14
  40d300:	mov	w25, w16
  40d304:	mov	w28, w14
  40d308:	tbz	w22, #0, 40d3b0 <feof@plt+0xa6b0>
  40d30c:	ldr	x8, [x20, #136]
  40d310:	ldur	w10, [x29, #-24]
  40d314:	mov	x9, xzr
  40d318:	add	x11, x8, #0xc
  40d31c:	b	40d328 <feof@plt+0xa628>
  40d320:	add	x9, x9, #0x1
  40d324:	add	x11, x11, #0x8
  40d328:	cbz	x8, 40d33c <feof@plt+0xa63c>
  40d32c:	ldr	w12, [x8, #4]
  40d330:	cmp	x9, w12, sxtw
  40d334:	b.lt	40d348 <feof@plt+0xa648>  // b.tstop
  40d338:	b	40d1f4 <feof@plt+0xa4f4>
  40d33c:	mov	w12, wzr
  40d340:	cmp	x9, w12, sxtw
  40d344:	b.ge	40d1f4 <feof@plt+0xa4f4>  // b.tcont
  40d348:	ldur	w12, [x11, #-4]
  40d34c:	cmp	w12, w10
  40d350:	b.hi	40d320 <feof@plt+0xa620>  // b.pmore
  40d354:	ldr	w12, [x11]
  40d358:	cmp	w12, w10
  40d35c:	b.cc	40d320 <feof@plt+0xa620>  // b.lo, b.ul, b.last
  40d360:	ldrsw	x9, [x8, #4]
  40d364:	cmp	w9, #0x1
  40d368:	b.lt	40d1f4 <feof@plt+0xa4f4>  // b.tstop
  40d36c:	ldur	w11, [x29, #-56]
  40d370:	mov	x10, xzr
  40d374:	add	x12, x8, #0xc
  40d378:	b	40d390 <feof@plt+0xa690>
  40d37c:	add	x10, x10, #0x1
  40d380:	mov	w0, wzr
  40d384:	cmp	x10, x9
  40d388:	add	x12, x12, #0x8
  40d38c:	b.ge	40d1f8 <feof@plt+0xa4f8>  // b.tcont
  40d390:	ldur	w13, [x12, #-4]
  40d394:	cmp	w13, w11
  40d398:	b.hi	40d37c <feof@plt+0xa67c>  // b.pmore
  40d39c:	ldr	w13, [x12]
  40d3a0:	cmp	w13, w11
  40d3a4:	b.cc	40d37c <feof@plt+0xa67c>  // b.lo, b.ul, b.last
  40d3a8:	ldr	w10, [x21, #4]
  40d3ac:	cbz	w10, 40d50c <feof@plt+0xa80c>
  40d3b0:	ldr	x22, [x20, #120]
  40d3b4:	cbz	x22, 40d404 <feof@plt+0xa704>
  40d3b8:	ldp	w8, w9, [x22]
  40d3bc:	and	w0, w8, #0x7fffffff
  40d3c0:	cmp	w0, w9
  40d3c4:	b.ne	40d4ac <feof@plt+0xa7ac>  // b.any
  40d3c8:	mov	x27, x16
  40d3cc:	stp	x14, x15, [sp, #16]
  40d3d0:	tbnz	w8, #31, 40d41c <feof@plt+0xa71c>
  40d3d4:	add	w1, w0, #0x1
  40d3d8:	bl	415344 <feof@plt+0x12644>
  40d3dc:	mov	w21, w0
  40d3e0:	ldr	x0, [x20, #120]
  40d3e4:	mov	w8, #0x28                  	// #40
  40d3e8:	umull	x8, w21, w8
  40d3ec:	add	x1, x8, #0x8
  40d3f0:	cbz	x0, 40d4fc <feof@plt+0xa7fc>
  40d3f4:	ldr	w23, [x0, #4]
  40d3f8:	mov	w24, wzr
  40d3fc:	str	wzr, [sp, #12]
  40d400:	b	40d450 <feof@plt+0xa750>
  40d404:	mov	x27, x16
  40d408:	stp	x14, x15, [sp, #16]
  40d40c:	str	wzr, [sp, #12]
  40d410:	mov	w24, wzr
  40d414:	mov	w21, #0x4                   	// #4
  40d418:	b	40d43c <feof@plt+0xa73c>
  40d41c:	str	xzr, [x20, #120]
  40d420:	ldr	w10, [x22, #4]
  40d424:	mov	w8, #0x4                   	// #4
  40d428:	mov	w24, #0x1                   	// #1
  40d42c:	add	w9, w10, #0x1
  40d430:	cmp	w9, #0x4
  40d434:	csinc	w21, w8, w10, ls  // ls = plast
  40d438:	str	w10, [sp, #12]
  40d43c:	mov	w8, #0x28                  	// #40
  40d440:	umull	x8, w21, w8
  40d444:	mov	x0, xzr
  40d448:	mov	w23, wzr
  40d44c:	add	x1, x8, #0x8
  40d450:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40d454:	and	w8, w21, #0x7fffffff
  40d458:	str	x0, [x20, #120]
  40d45c:	stp	w8, w23, [x0]
  40d460:	ldp	x14, x15, [sp, #16]
  40d464:	mov	x16, x27
  40d468:	cbz	w24, 40d4ac <feof@plt+0xa7ac>
  40d46c:	ldr	x9, [x20, #120]
  40d470:	ldr	w12, [sp, #12]
  40d474:	cbz	w12, 40d4a8 <feof@plt+0xa7a8>
  40d478:	add	x8, x22, #0x8
  40d47c:	add	x9, x9, #0x8
  40d480:	mov	w10, w12
  40d484:	ldr	x11, [x8, #32]
  40d488:	ldp	q1, q0, [x8]
  40d48c:	subs	w10, w10, #0x1
  40d490:	add	x8, x8, #0x28
  40d494:	str	x11, [x9, #32]
  40d498:	stp	q1, q0, [x9]
  40d49c:	add	x9, x9, #0x28
  40d4a0:	b.ne	40d484 <feof@plt+0xa784>  // b.any
  40d4a4:	ldr	x9, [x20, #120]
  40d4a8:	str	w12, [x9, #4]
  40d4ac:	ldr	x8, [x20, #120]
  40d4b0:	mov	w9, #0x28                  	// #40
  40d4b4:	mov	w10, w25
  40d4b8:	mov	w11, w26
  40d4bc:	ldr	w12, [x8, #4]
  40d4c0:	bfi	x10, x28, #32, #32
  40d4c4:	bfi	x11, x15, #32, #32
  40d4c8:	bfi	x16, x14, #32, #32
  40d4cc:	add	w13, w12, #0x1
  40d4d0:	madd	x9, x12, x9, x8
  40d4d4:	str	w13, [x8, #4]
  40d4d8:	stp	x10, x11, [x9, #8]
  40d4dc:	ldr	w8, [sp, #36]
  40d4e0:	mov	w0, #0x1                   	// #1
  40d4e4:	stur	x16, [x9, #28]
  40d4e8:	str	w19, [x9, #36]
  40d4ec:	str	w8, [x9, #24]
  40d4f0:	ldr	x8, [sp, #40]
  40d4f4:	str	x8, [x9, #40]
  40d4f8:	b	40d1f8 <feof@plt+0xa4f8>
  40d4fc:	str	wzr, [sp, #12]
  40d500:	mov	w24, wzr
  40d504:	mov	w23, wzr
  40d508:	b	40d450 <feof@plt+0xa750>
  40d50c:	ldr	w11, [sp, #56]
  40d510:	mov	x10, xzr
  40d514:	add	x8, x8, #0xc
  40d518:	b	40d530 <feof@plt+0xa830>
  40d51c:	add	x10, x10, #0x1
  40d520:	mov	w0, wzr
  40d524:	cmp	x10, x9
  40d528:	add	x8, x8, #0x8
  40d52c:	b.ge	40d1f8 <feof@plt+0xa4f8>  // b.tcont
  40d530:	ldur	w12, [x8, #-4]
  40d534:	cmp	w12, w11
  40d538:	b.hi	40d51c <feof@plt+0xa81c>  // b.pmore
  40d53c:	ldr	w12, [x8]
  40d540:	cmp	w12, w11
  40d544:	b.cc	40d51c <feof@plt+0xa81c>  // b.lo, b.ul, b.last
  40d548:	b	40d3b0 <feof@plt+0xa6b0>
  40d54c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d550:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d554:	add	x0, x0, #0x3c7
  40d558:	add	x2, x2, #0x412
  40d55c:	mov	w1, #0x39f                 	// #927
  40d560:	bl	408b70 <feof@plt+0x5e70>
  40d564:	sub	sp, sp, #0x1b0
  40d568:	stp	x29, x30, [sp, #336]
  40d56c:	stp	x28, x27, [sp, #352]
  40d570:	stp	x26, x25, [sp, #368]
  40d574:	stp	x24, x23, [sp, #384]
  40d578:	stp	x22, x21, [sp, #400]
  40d57c:	stp	x20, x19, [sp, #416]
  40d580:	add	x29, sp, #0x150
  40d584:	mov	x23, x0
  40d588:	ldr	x0, [x0]
  40d58c:	mov	w20, w2
  40d590:	mov	x21, x1
  40d594:	bl	413db4 <feof@plt+0x110b4>
  40d598:	mov	x0, x21
  40d59c:	mov	w1, wzr
  40d5a0:	bl	430708 <feof@plt+0x2da08>
  40d5a4:	cmp	w0, #0x2
  40d5a8:	b.cc	40ed14 <feof@plt+0xc014>  // b.lo, b.ul, b.last
  40d5ac:	ldrb	w8, [x23, #108]
  40d5b0:	cbz	w8, 40ed14 <feof@plt+0xc014>
  40d5b4:	ldr	w8, [x23, #200]
  40d5b8:	cmp	w0, w8
  40d5bc:	b.ne	40d5c8 <feof@plt+0xa8c8>  // b.any
  40d5c0:	ldr	w8, [x21, #120]
  40d5c4:	cbz	w8, 40ed14 <feof@plt+0xc014>
  40d5c8:	ldr	x8, [x23]
  40d5cc:	str	w0, [x23, #200]
  40d5d0:	mov	x0, x8
  40d5d4:	bl	413924 <feof@plt+0x10c24>
  40d5d8:	ldr	x8, [x23]
  40d5dc:	str	x0, [sp]
  40d5e0:	mov	x1, xzr
  40d5e4:	mov	x0, x8
  40d5e8:	bl	4138ac <feof@plt+0x10bac>
  40d5ec:	add	x0, sp, #0x88
  40d5f0:	mov	x1, x23
  40d5f4:	mov	x2, x21
  40d5f8:	mov	w3, w20
  40d5fc:	add	x19, sp, #0x88
  40d600:	bl	40bfe4 <feof@plt+0x92e4>
  40d604:	mov	x24, xzr
  40d608:	add	x8, x19, #0x18
  40d60c:	add	x25, x19, #0x38
  40d610:	stp	x8, x23, [sp, #8]
  40d614:	b	40d620 <feof@plt+0xa920>
  40d618:	ldp	x23, x24, [sp, #16]
  40d61c:	add	x24, x24, #0x1
  40d620:	ldr	x19, [sp, #272]
  40d624:	cbz	x19, 40d638 <feof@plt+0xa938>
  40d628:	ldr	w8, [x19, #4]
  40d62c:	cmp	x24, w8, sxtw
  40d630:	b.lt	40d644 <feof@plt+0xa944>  // b.tstop
  40d634:	b	40ec84 <feof@plt+0xbf84>
  40d638:	mov	w8, wzr
  40d63c:	cmp	x24, w8, sxtw
  40d640:	b.ge	40ec84 <feof@plt+0xbf84>  // b.tcont
  40d644:	ldrb	w8, [x23, #223]
  40d648:	add	x9, x19, x24, lsl #3
  40d64c:	add	x20, x9, #0x8
  40d650:	cbz	w8, 40d694 <feof@plt+0xa994>
  40d654:	cbz	x24, 40d7c4 <feof@plt+0xaac4>
  40d658:	ldrb	w8, [sp, #250]
  40d65c:	cbz	w8, 40eefc <feof@plt+0xc1fc>
  40d660:	ldr	w8, [sp, #280]
  40d664:	ldr	x0, [sp, #144]
  40d668:	tbnz	w8, #31, 40d68c <feof@plt+0xa98c>
  40d66c:	mov	w21, #0xffffffff            	// #-1
  40d670:	mov	w1, #0x2e                  	// #46
  40d674:	bl	41164c <feof@plt+0xe94c>
  40d678:	ldr	w8, [sp, #280]
  40d67c:	ldr	x0, [sp, #144]
  40d680:	add	w21, w21, #0x1
  40d684:	cmp	w21, w8
  40d688:	b.lt	40d670 <feof@plt+0xa970>  // b.tstop
  40d68c:	bl	413db4 <feof@plt+0x110b4>
  40d690:	b	40d7c4 <feof@plt+0xaac4>
  40d694:	ldr	w9, [sp, #168]
  40d698:	cbnz	x24, 40d6a8 <feof@plt+0xa9a8>
  40d69c:	ldr	w8, [x19, #12]
  40d6a0:	cmp	w9, w8
  40d6a4:	b.le	40d7c4 <feof@plt+0xaac4>
  40d6a8:	ldr	w8, [x20]
  40d6ac:	cmp	w8, w9
  40d6b0:	b.hi	40d6c4 <feof@plt+0xa9c4>  // b.pmore
  40d6b4:	add	x10, x19, x24, lsl #3
  40d6b8:	ldr	w10, [x10, #12]
  40d6bc:	cmp	w10, w9
  40d6c0:	b.cs	40d7a0 <feof@plt+0xaaa0>  // b.hs, b.nlast
  40d6c4:	ldr	x11, [sp, #256]
  40d6c8:	add	x9, x19, x24, lsl #3
  40d6cc:	mov	x10, xzr
  40d6d0:	add	x21, x9, #0xc
  40d6d4:	add	x9, x11, #0x8
  40d6d8:	b	40d6e4 <feof@plt+0xa9e4>
  40d6dc:	add	x10, x10, #0x1
  40d6e0:	add	x9, x9, #0x28
  40d6e4:	cbz	x11, 40d6f8 <feof@plt+0xa9f8>
  40d6e8:	ldr	w12, [x11, #4]
  40d6ec:	cmp	x10, w12, uxtw
  40d6f0:	b.cc	40d704 <feof@plt+0xaa04>  // b.lo, b.ul, b.last
  40d6f4:	b	40d73c <feof@plt+0xaa3c>
  40d6f8:	mov	w12, wzr
  40d6fc:	cmp	x10, w12, uxtw
  40d700:	b.cs	40d73c <feof@plt+0xaa3c>  // b.hs, b.nlast
  40d704:	ldr	w12, [x9]
  40d708:	cmp	w8, w12
  40d70c:	b.hi	40d6dc <feof@plt+0xa9dc>  // b.pmore
  40d710:	ldr	w13, [x21]
  40d714:	cmp	w13, w12
  40d718:	b.cc	40d6dc <feof@plt+0xa9dc>  // b.lo, b.ul, b.last
  40d71c:	ldr	x8, [sp, #8]
  40d720:	ldp	q1, q0, [x8]
  40d724:	stp	q1, q0, [x29, #-48]
  40d728:	ldr	w8, [x9]
  40d72c:	stur	w8, [x29, #-40]
  40d730:	ldr	w8, [x9, #4]
  40d734:	stur	w8, [x29, #-36]
  40d738:	b	40d7ac <feof@plt+0xaaac>
  40d73c:	mov	x22, xzr
  40d740:	b	40d748 <feof@plt+0xaa48>
  40d744:	add	x22, x22, #0x1
  40d748:	ldr	x8, [sp, #264]
  40d74c:	cbz	x8, 40d760 <feof@plt+0xaa60>
  40d750:	ldr	w9, [x8, #4]
  40d754:	cmp	x22, w9, uxtw
  40d758:	b.cc	40d76c <feof@plt+0xaa6c>  // b.lo, b.ul, b.last
  40d75c:	b	40eecc <feof@plt+0xc1cc>
  40d760:	mov	w9, wzr
  40d764:	cmp	x22, w9, uxtw
  40d768:	b.cs	40eecc <feof@plt+0xc1cc>  // b.hs, b.nlast
  40d76c:	add	x8, x8, x22, lsl #3
  40d770:	ldr	x8, [x8, #8]
  40d774:	ldr	w0, [x8]
  40d778:	sub	x8, x29, #0x30
  40d77c:	bl	4171b0 <feof@plt+0x144b0>
  40d780:	ldur	w8, [x29, #-40]
  40d784:	ldr	w9, [x20]
  40d788:	cmp	w9, w8
  40d78c:	b.hi	40d744 <feof@plt+0xaa44>  // b.pmore
  40d790:	ldr	w9, [x21]
  40d794:	cmp	w9, w8
  40d798:	b.cc	40d744 <feof@plt+0xaa44>  // b.lo, b.ul, b.last
  40d79c:	b	40d7ac <feof@plt+0xaaac>
  40d7a0:	ldr	x8, [sp, #8]
  40d7a4:	ldp	q1, q0, [x8]
  40d7a8:	stp	q1, q0, [x29, #-48]
  40d7ac:	ldp	q0, q1, [x29, #-48]
  40d7b0:	ldr	x8, [x23, #144]
  40d7b4:	add	x1, sp, #0x60
  40d7b8:	mov	x0, x23
  40d7bc:	stp	q0, q1, [sp, #96]
  40d7c0:	blr	x8
  40d7c4:	add	x8, x19, x24, lsl #3
  40d7c8:	ldr	w8, [x8, #12]
  40d7cc:	ldr	w22, [x20]
  40d7d0:	str	x24, [sp, #24]
  40d7d4:	str	x8, [sp, #56]
  40d7d8:	cmp	w22, w8
  40d7dc:	b.ls	40d804 <feof@plt+0xab04>  // b.plast
  40d7e0:	b	40d618 <feof@plt+0xa918>
  40d7e4:	ldr	w8, [x24]
  40d7e8:	tbnz	w8, #31, 40dcdc <feof@plt+0xafdc>
  40d7ec:	mov	x0, x24
  40d7f0:	bl	402770 <free@plt>
  40d7f4:	ldr	x8, [sp, #56]
  40d7f8:	cmp	x22, x8
  40d7fc:	add	x22, x22, #0x1
  40d800:	b.cs	40d618 <feof@plt+0xa918>  // b.hs, b.nlast
  40d804:	ldr	x0, [sp, #160]
  40d808:	mov	w1, w22
  40d80c:	bl	416df0 <feof@plt+0x140f0>
  40d810:	cbz	x0, 40d7f4 <feof@plt+0xaaf4>
  40d814:	mov	x27, x0
  40d818:	mov	x26, x1
  40d81c:	mov	x19, xzr
  40d820:	b	40d830 <feof@plt+0xab30>
  40d824:	ldr	x0, [sp, #144]
  40d828:	bl	413db4 <feof@plt+0x110b4>
  40d82c:	add	x19, x19, #0x1
  40d830:	ldr	x8, [sp, #264]
  40d834:	cbz	x8, 40d848 <feof@plt+0xab48>
  40d838:	ldr	w9, [x8, #4]
  40d83c:	cmp	x19, w9, uxtw
  40d840:	b.cc	40d854 <feof@plt+0xab54>  // b.lo, b.ul, b.last
  40d844:	b	40d9c4 <feof@plt+0xacc4>
  40d848:	mov	w9, wzr
  40d84c:	cmp	x19, w9, uxtw
  40d850:	b.cs	40d9c4 <feof@plt+0xacc4>  // b.hs, b.nlast
  40d854:	add	x8, x8, x19, lsl #3
  40d858:	ldr	x20, [x8, #8]
  40d85c:	mov	x0, x20
  40d860:	bl	43178c <feof@plt+0x2ea8c>
  40d864:	tbz	w0, #0, 40d82c <feof@plt+0xab2c>
  40d868:	ldp	w8, w9, [x20]
  40d86c:	cmp	w8, w9
  40d870:	b.ne	40ed64 <feof@plt+0xc064>  // b.any
  40d874:	ldr	x1, [sp, #160]
  40d878:	mov	x0, x20
  40d87c:	mov	w2, w22
  40d880:	bl	43187c <feof@plt+0x2eb7c>
  40d884:	tbz	w0, #0, 40d82c <feof@plt+0xab2c>
  40d888:	ldr	w8, [sp, #204]
  40d88c:	cmn	w8, #0x1
  40d890:	b.eq	40d8ac <feof@plt+0xabac>  // b.none
  40d894:	ldr	x8, [sp, #192]
  40d898:	ldr	x1, [sp, #240]
  40d89c:	ldr	x0, [x8]
  40d8a0:	bl	413430 <feof@plt+0x10730>
  40d8a4:	mov	w8, #0xffffffff            	// #-1
  40d8a8:	str	w8, [sp, #204]
  40d8ac:	ldrb	w8, [sp, #250]
  40d8b0:	cbz	w8, 40d920 <feof@plt+0xac20>
  40d8b4:	ldr	w8, [sp, #280]
  40d8b8:	cmp	w8, #0x4
  40d8bc:	b.lt	40d8e8 <feof@plt+0xabe8>  // b.tstop
  40d8c0:	mov	w21, wzr
  40d8c4:	ldr	x0, [sp, #144]
  40d8c8:	mov	w1, #0x20                  	// #32
  40d8cc:	bl	41164c <feof@plt+0xe94c>
  40d8d0:	ldr	w8, [sp, #280]
  40d8d4:	add	w21, w21, #0x1
  40d8d8:	sub	w9, w8, #0x3
  40d8dc:	cmp	w21, w9
  40d8e0:	b.lt	40d8c4 <feof@plt+0xabc4>  // b.tstop
  40d8e4:	b	40d8ec <feof@plt+0xabec>
  40d8e8:	mov	w21, wzr
  40d8ec:	ldr	x0, [sp, #144]
  40d8f0:	cmp	w21, w8
  40d8f4:	b.ge	40d914 <feof@plt+0xac14>  // b.tcont
  40d8f8:	mov	w1, #0x2b                  	// #43
  40d8fc:	bl	41164c <feof@plt+0xe94c>
  40d900:	ldr	w8, [sp, #280]
  40d904:	ldr	x0, [sp, #144]
  40d908:	add	w21, w21, #0x1
  40d90c:	cmp	w21, w8
  40d910:	b.lt	40d8f8 <feof@plt+0xabf8>  // b.tstop
  40d914:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40d918:	add	x1, x1, #0x40f
  40d91c:	bl	413430 <feof@plt+0x10730>
  40d920:	ldr	x0, [sp, #144]
  40d924:	mov	w1, #0x2b                  	// #43
  40d928:	bl	41164c <feof@plt+0xe94c>
  40d92c:	ldr	w8, [sp, #204]
  40d930:	cmn	w8, #0x2
  40d934:	b.eq	40d968 <feof@plt+0xac68>  // b.none
  40d938:	cmn	w8, #0x1
  40d93c:	b.eq	40d950 <feof@plt+0xac50>  // b.none
  40d940:	ldr	x8, [sp, #192]
  40d944:	ldr	x1, [sp, #240]
  40d948:	ldr	x0, [x8]
  40d94c:	bl	413430 <feof@plt+0x10730>
  40d950:	ldr	x8, [sp, #192]
  40d954:	mov	w9, #0xfffffffe            	// #-2
  40d958:	str	w9, [sp, #204]
  40d95c:	ldr	x1, [sp, #224]
  40d960:	ldr	x0, [x8]
  40d964:	bl	413430 <feof@plt+0x10730>
  40d968:	ldr	x8, [x20, #16]
  40d96c:	cmp	x8, #0x1
  40d970:	b.eq	40d99c <feof@plt+0xac9c>  // b.none
  40d974:	mov	x21, xzr
  40d978:	ldr	x8, [x20, #8]
  40d97c:	ldr	x0, [sp, #144]
  40d980:	ldrb	w1, [x8, x21]
  40d984:	bl	41164c <feof@plt+0xe94c>
  40d988:	ldr	x8, [x20, #16]
  40d98c:	add	x21, x21, #0x1
  40d990:	sub	x8, x8, #0x1
  40d994:	cmp	x21, x8
  40d998:	b.cc	40d978 <feof@plt+0xac78>  // b.lo, b.ul, b.last
  40d99c:	ldr	w8, [sp, #204]
  40d9a0:	cmn	w8, #0x1
  40d9a4:	b.eq	40d824 <feof@plt+0xab24>  // b.none
  40d9a8:	ldr	x8, [sp, #192]
  40d9ac:	ldr	x1, [sp, #240]
  40d9b0:	ldr	x0, [x8]
  40d9b4:	bl	413430 <feof@plt+0x10730>
  40d9b8:	mov	w8, #0xffffffff            	// #-1
  40d9bc:	str	w8, [sp, #204]
  40d9c0:	b	40d824 <feof@plt+0xab24>
  40d9c4:	ldr	w8, [sp, #204]
  40d9c8:	cmn	w8, #0x1
  40d9cc:	b.eq	40d9e8 <feof@plt+0xace8>  // b.none
  40d9d0:	ldr	x8, [sp, #192]
  40d9d4:	ldr	x1, [sp, #240]
  40d9d8:	ldr	x0, [x8]
  40d9dc:	bl	413430 <feof@plt+0x10730>
  40d9e0:	mov	w8, #0xffffffff            	// #-1
  40d9e4:	str	w8, [sp, #204]
  40d9e8:	mov	x11, #0x2200                	// #8704
  40d9ec:	cmp	w26, #0x1
  40d9f0:	mov	w23, w26
  40d9f4:	movk	x11, #0x1, lsl #32
  40d9f8:	b.lt	40da30 <feof@plt+0xad30>  // b.tstop
  40d9fc:	and	x23, x26, #0xffffffff
  40da00:	sub	x8, x27, #0x1
  40da04:	ldrb	w9, [x8, x23]
  40da08:	cmp	w9, #0x20
  40da0c:	b.hi	40da34 <feof@plt+0xad34>  // b.pmore
  40da10:	mov	w10, #0x1                   	// #1
  40da14:	lsl	x9, x10, x9
  40da18:	tst	x9, x11
  40da1c:	b.eq	40da34 <feof@plt+0xad34>  // b.none
  40da20:	sub	x23, x23, #0x1
  40da24:	add	x9, x23, #0x1
  40da28:	cmp	x9, #0x1
  40da2c:	b.gt	40da04 <feof@plt+0xad04>
  40da30:	tbnz	w23, #31, 40eee4 <feof@plt+0xc1e4>
  40da34:	cmp	w23, w26
  40da38:	b.gt	40eeb4 <feof@plt+0xc1b4>
  40da3c:	cbz	w23, 40da60 <feof@plt+0xad60>
  40da40:	add	x8, x27, w23, sxtw
  40da44:	ldurb	w8, [x8, #-1]
  40da48:	cmp	w8, #0x20
  40da4c:	b.hi	40da60 <feof@plt+0xad60>  // b.pmore
  40da50:	mov	w9, #0x1                   	// #1
  40da54:	lsl	x8, x9, x8
  40da58:	tst	x8, x11
  40da5c:	b.ne	40ee9c <feof@plt+0xc19c>  // b.any
  40da60:	ldrb	w8, [sp, #250]
  40da64:	ldrsw	x21, [sp, #284]
  40da68:	cbz	w8, 40dac8 <feof@plt+0xadc8>
  40da6c:	mov	w0, w22
  40da70:	bl	409cc0 <feof@plt+0x6fc0>
  40da74:	ldr	w9, [sp, #280]
  40da78:	ldr	x8, [sp, #144]
  40da7c:	cmp	w9, w0
  40da80:	b.le	40dab0 <feof@plt+0xadb0>
  40da84:	mov	w19, w0
  40da88:	mov	w20, wzr
  40da8c:	mov	w1, #0x20                  	// #32
  40da90:	mov	x0, x8
  40da94:	bl	41164c <feof@plt+0xe94c>
  40da98:	ldr	w9, [sp, #280]
  40da9c:	ldr	x8, [sp, #144]
  40daa0:	add	w20, w20, #0x1
  40daa4:	sub	w9, w9, w19
  40daa8:	cmp	w20, w9
  40daac:	b.lt	40da8c <feof@plt+0xad8c>  // b.tstop
  40dab0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40dab4:	mov	x0, x8
  40dab8:	add	x1, x1, #0x47e
  40dabc:	mov	w2, w22
  40dac0:	bl	413c68 <feof@plt+0x10f68>
  40dac4:	b	40dad4 <feof@plt+0xadd4>
  40dac8:	ldr	x0, [sp, #144]
  40dacc:	mov	w1, #0x20                  	// #32
  40dad0:	bl	41164c <feof@plt+0xe94c>
  40dad4:	ldr	w20, [sp, #284]
  40dad8:	cmp	w20, w23
  40dadc:	b.ge	40dba4 <feof@plt+0xaea4>  // b.tcont
  40dae0:	mov	w26, wzr
  40dae4:	add	x19, x27, x21
  40dae8:	mov	w27, #0x7fffffff            	// #2147483647
  40daec:	b	40db1c <feof@plt+0xae1c>
  40daf0:	ldr	x0, [sp, #144]
  40daf4:	mov	w8, #0x7fffffff            	// #2147483647
  40daf8:	cmp	w27, w8
  40dafc:	csel	w8, w20, w27, eq  // eq = none
  40db00:	cmp	w1, #0x20
  40db04:	csel	w27, w27, w8, eq  // eq = none
  40db08:	csel	w26, w26, w20, eq  // eq = none
  40db0c:	bl	41164c <feof@plt+0xe94c>
  40db10:	cmp	w23, w20
  40db14:	add	x19, x19, #0x1
  40db18:	b.eq	40dbac <feof@plt+0xaeac>  // b.none
  40db1c:	ldrb	w8, [sp, #248]
  40db20:	add	w20, w20, #0x1
  40db24:	cbz	w8, 40db7c <feof@plt+0xae7c>
  40db28:	add	x0, sp, #0x88
  40db2c:	sub	x5, x29, #0x30
  40db30:	mov	w4, #0x7fffffff            	// #2147483647
  40db34:	mov	w1, w22
  40db38:	mov	w2, w20
  40db3c:	mov	w3, wzr
  40db40:	bl	40f1c8 <feof@plt+0xc4c8>
  40db44:	tbz	w0, #0, 40db58 <feof@plt+0xae58>
  40db48:	ldur	w1, [x29, #-48]
  40db4c:	mov	x0, x25
  40db50:	bl	40f090 <feof@plt+0xc390>
  40db54:	b	40db7c <feof@plt+0xae7c>
  40db58:	ldr	w8, [sp, #204]
  40db5c:	cmn	w8, #0x1
  40db60:	b.eq	40db7c <feof@plt+0xae7c>  // b.none
  40db64:	ldr	x8, [sp, #192]
  40db68:	ldr	x1, [sp, #240]
  40db6c:	ldr	x0, [x8]
  40db70:	bl	413430 <feof@plt+0x10730>
  40db74:	mov	w8, #0xffffffff            	// #-1
  40db78:	str	w8, [sp, #204]
  40db7c:	ldrb	w1, [x19]
  40db80:	cmp	w1, #0xd
  40db84:	b.hi	40daf0 <feof@plt+0xadf0>  // b.pmore
  40db88:	mov	w8, #0x1                   	// #1
  40db8c:	lsl	w8, w8, w1
  40db90:	mov	w9, #0x2201                	// #8705
  40db94:	tst	w8, w9
  40db98:	b.eq	40daf0 <feof@plt+0xadf0>  // b.none
  40db9c:	mov	w1, #0x20                  	// #32
  40dba0:	b	40daf0 <feof@plt+0xadf0>
  40dba4:	mov	w26, wzr
  40dba8:	mov	w27, #0x7fffffff            	// #2147483647
  40dbac:	ldr	w8, [sp, #204]
  40dbb0:	cmn	w8, #0x1
  40dbb4:	b.eq	40dbd0 <feof@plt+0xaed0>  // b.none
  40dbb8:	ldr	x8, [sp, #192]
  40dbbc:	ldr	x1, [sp, #240]
  40dbc0:	ldr	x0, [x8]
  40dbc4:	bl	413430 <feof@plt+0x10730>
  40dbc8:	mov	w8, #0xffffffff            	// #-1
  40dbcc:	str	w8, [sp, #204]
  40dbd0:	ldr	x0, [sp, #144]
  40dbd4:	bl	413db4 <feof@plt+0x110b4>
  40dbd8:	ldr	x9, [sp, #256]
  40dbdc:	cbz	x9, 40dd64 <feof@plt+0xb064>
  40dbe0:	ldr	w8, [x9, #4]
  40dbe4:	cbz	w8, 40dd64 <feof@plt+0xb064>
  40dbe8:	add	x10, x9, #0x8
  40dbec:	add	x9, x9, #0x30
  40dbf0:	mov	x11, xzr
  40dbf4:	mov	x12, x9
  40dbf8:	mov	x13, x10
  40dbfc:	b	40dc18 <feof@plt+0xaf18>
  40dc00:	add	x11, x11, #0x1
  40dc04:	cmp	x11, x8
  40dc08:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  40dc0c:	cmp	x8, x11
  40dc10:	add	x12, x12, #0x28
  40dc14:	b.eq	40dd64 <feof@plt+0xb064>  // b.none
  40dc18:	ldr	w14, [x13, #16]
  40dc1c:	cmp	w14, #0x2
  40dc20:	b.eq	40dd64 <feof@plt+0xb064>  // b.none
  40dc24:	ldr	w14, [x13]
  40dc28:	ldr	w13, [x13, #8]
  40dc2c:	cmp	w14, w13
  40dc30:	b.hi	40ed94 <feof@plt+0xc094>  // b.pmore
  40dc34:	cmp	w14, w22
  40dc38:	b.hi	40dc00 <feof@plt+0xaf00>  // b.pmore
  40dc3c:	cmp	w13, w22
  40dc40:	b.cc	40dc00 <feof@plt+0xaf00>  // b.lo, b.ul, b.last
  40dc44:	ldr	w12, [sp, #172]
  40dc48:	mov	x11, xzr
  40dc4c:	add	w23, w12, #0x1
  40dc50:	add	w12, w26, #0x1
  40dc54:	b	40dc78 <feof@plt+0xaf78>
  40dc58:	ccmp	w23, w26, #0x0, hi  // hi = pmore
  40dc5c:	csel	w23, w23, w12, gt
  40dc60:	add	x11, x11, #0x1
  40dc64:	cmp	x11, x8
  40dc68:	csel	x10, x9, xzr, cc  // cc = lo, ul, last
  40dc6c:	cmp	x8, x11
  40dc70:	add	x9, x9, #0x28
  40dc74:	b.eq	40dca0 <feof@plt+0xafa0>  // b.none
  40dc78:	ldr	w13, [x10]
  40dc7c:	cmp	w13, w22
  40dc80:	b.hi	40dc60 <feof@plt+0xaf60>  // b.pmore
  40dc84:	ldr	w13, [x10, #8]
  40dc88:	cmp	w13, w22
  40dc8c:	b.ne	40dc58 <feof@plt+0xaf58>  // b.any
  40dc90:	ldr	w10, [x10, #12]
  40dc94:	cmp	w23, w10
  40dc98:	csinc	w23, w23, w10, gt
  40dc9c:	b	40dc60 <feof@plt+0xaf60>
  40dca0:	ldrb	w8, [sp, #250]
  40dca4:	cbz	w8, 40dd1c <feof@plt+0xb01c>
  40dca8:	ldr	w8, [sp, #280]
  40dcac:	cmp	w8, #0x4
  40dcb0:	b.lt	40dce4 <feof@plt+0xafe4>  // b.tstop
  40dcb4:	mov	w19, wzr
  40dcb8:	ldr	x0, [sp, #144]
  40dcbc:	mov	w1, #0x20                  	// #32
  40dcc0:	bl	41164c <feof@plt+0xe94c>
  40dcc4:	ldr	w8, [sp, #280]
  40dcc8:	add	w19, w19, #0x1
  40dccc:	sub	w9, w8, #0x3
  40dcd0:	cmp	w19, w9
  40dcd4:	b.lt	40dcb8 <feof@plt+0xafb8>  // b.tstop
  40dcd8:	b	40dce8 <feof@plt+0xafe8>
  40dcdc:	str	wzr, [x24, #4]
  40dce0:	b	40d7f4 <feof@plt+0xaaf4>
  40dce4:	mov	w19, wzr
  40dce8:	ldr	x0, [sp, #144]
  40dcec:	cmp	w19, w8
  40dcf0:	b.ge	40dd10 <feof@plt+0xb010>  // b.tcont
  40dcf4:	mov	w1, #0x20                  	// #32
  40dcf8:	bl	41164c <feof@plt+0xe94c>
  40dcfc:	ldr	w8, [sp, #280]
  40dd00:	ldr	x0, [sp, #144]
  40dd04:	add	w19, w19, #0x1
  40dd08:	cmp	w19, w8
  40dd0c:	b.lt	40dcf4 <feof@plt+0xaff4>  // b.tstop
  40dd10:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40dd14:	add	x1, x1, #0x40f
  40dd18:	bl	413430 <feof@plt+0x10730>
  40dd1c:	ldr	x0, [sp, #144]
  40dd20:	mov	w1, #0x20                  	// #32
  40dd24:	bl	41164c <feof@plt+0xe94c>
  40dd28:	ldr	w8, [sp, #284]
  40dd2c:	add	w20, w8, #0x1
  40dd30:	cmp	w20, w23
  40dd34:	b.lt	40dd9c <feof@plt+0xb09c>  // b.tstop
  40dd38:	ldr	w8, [sp, #204]
  40dd3c:	cmn	w8, #0x1
  40dd40:	b.eq	40dd5c <feof@plt+0xb05c>  // b.none
  40dd44:	ldr	x8, [sp, #192]
  40dd48:	ldr	x1, [sp, #240]
  40dd4c:	ldr	x0, [x8]
  40dd50:	bl	413430 <feof@plt+0x10730>
  40dd54:	mov	w8, #0xffffffff            	// #-1
  40dd58:	str	w8, [sp, #204]
  40dd5c:	ldr	x0, [sp, #144]
  40dd60:	bl	413db4 <feof@plt+0x110b4>
  40dd64:	ldrb	w8, [sp, #249]
  40dd68:	str	x22, [sp, #88]
  40dd6c:	cbz	w8, 40e284 <feof@plt+0xb584>
  40dd70:	ldr	x8, [sp, #256]
  40dd74:	cbz	x8, 40e284 <feof@plt+0xb584>
  40dd78:	mov	x19, xzr
  40dd7c:	mov	x26, xzr
  40dd80:	b	40de68 <feof@plt+0xb168>
  40dd84:	ldr	x0, [sp, #144]
  40dd88:	mov	w1, #0x20                  	// #32
  40dd8c:	bl	41164c <feof@plt+0xe94c>
  40dd90:	add	w20, w20, #0x1
  40dd94:	cmp	w23, w20
  40dd98:	b.eq	40dd38 <feof@plt+0xb038>  // b.none
  40dd9c:	add	x0, sp, #0x88
  40dda0:	sub	x5, x29, #0x30
  40dda4:	mov	w1, w22
  40dda8:	mov	w2, w20
  40ddac:	mov	w3, w27
  40ddb0:	mov	w4, w26
  40ddb4:	bl	40f1c8 <feof@plt+0xc4c8>
  40ddb8:	tbz	w0, #0, 40ddf0 <feof@plt+0xb0f0>
  40ddbc:	ldur	w19, [x29, #-48]
  40ddc0:	mov	x0, x25
  40ddc4:	mov	w1, w19
  40ddc8:	bl	40f090 <feof@plt+0xc390>
  40ddcc:	ldurb	w8, [x29, #-44]
  40ddd0:	cbz	w8, 40de18 <feof@plt+0xb118>
  40ddd4:	sxtw	x8, w19
  40ddd8:	cmp	w8, #0x2
  40dddc:	b.gt	40de24 <feof@plt+0xb124>
  40dde0:	ldp	x9, x0, [sp, #136]
  40dde4:	add	x8, x9, x8
  40dde8:	ldrb	w1, [x8, #116]
  40ddec:	b	40dd8c <feof@plt+0xb08c>
  40ddf0:	ldr	w8, [sp, #204]
  40ddf4:	cmn	w8, #0x1
  40ddf8:	b.eq	40dd84 <feof@plt+0xb084>  // b.none
  40ddfc:	ldr	x8, [sp, #192]
  40de00:	ldr	x1, [sp, #240]
  40de04:	ldr	x0, [x8]
  40de08:	bl	413430 <feof@plt+0x10730>
  40de0c:	mov	w8, #0xffffffff            	// #-1
  40de10:	str	w8, [sp, #204]
  40de14:	b	40dd84 <feof@plt+0xb084>
  40de18:	ldr	x0, [sp, #144]
  40de1c:	mov	w1, #0x7e                  	// #126
  40de20:	b	40dd8c <feof@plt+0xb08c>
  40de24:	ldr	x0, [sp, #144]
  40de28:	mov	w1, #0x5e                  	// #94
  40de2c:	b	40dd8c <feof@plt+0xb08c>
  40de30:	mov	x0, x26
  40de34:	ldr	w8, [x0, #4]
  40de38:	mov	w10, #0x28                  	// #40
  40de3c:	mov	x26, x0
  40de40:	add	w9, w8, #0x1
  40de44:	madd	x8, x8, x10, x0
  40de48:	str	w9, [x0, #4]
  40de4c:	stp	w19, w21, [x8, #8]
  40de50:	stp	x20, x27, [x8, #16]
  40de54:	str	x12, [x8, #32]
  40de58:	str	wzr, [x8, #40]
  40de5c:	ldr	x8, [sp, #256]
  40de60:	add	x19, x19, #0x1
  40de64:	cbz	x8, 40dfac <feof@plt+0xb2ac>
  40de68:	ldr	w9, [x8, #4]
  40de6c:	mov	w10, #0x28                  	// #40
  40de70:	madd	x8, x19, x10, x8
  40de74:	add	x8, x8, #0x8
  40de78:	cmp	x19, x9
  40de7c:	csel	x21, x8, xzr, cc  // cc = lo, ul, last
  40de80:	b.cs	40dfac <feof@plt+0xb2ac>  // b.hs, b.nlast
  40de84:	ldr	x0, [x21, #32]
  40de88:	cbz	x0, 40de5c <feof@plt+0xb15c>
  40de8c:	ldr	w8, [x21, #20]
  40de90:	cmp	w8, w22
  40de94:	b.ne	40de5c <feof@plt+0xb15c>  // b.any
  40de98:	ldr	w8, [x21, #24]
  40de9c:	ldr	w9, [sp, #284]
  40dea0:	cmp	w8, w9
  40dea4:	b.le	40de5c <feof@plt+0xb15c>
  40dea8:	ldr	x8, [x0]
  40deac:	ldr	w1, [x21, #28]
  40deb0:	ldr	x8, [x8, #16]
  40deb4:	blr	x8
  40deb8:	bfxil	x27, x1, #0, #8
  40debc:	cbz	x0, 40de5c <feof@plt+0xb15c>
  40dec0:	ldr	w21, [x21, #24]
  40dec4:	mov	x20, x0
  40dec8:	bl	4026d0 <strlen@plt>
  40decc:	mov	x12, x0
  40ded0:	cbz	x26, 40df14 <feof@plt+0xb214>
  40ded4:	ldp	w8, w9, [x26]
  40ded8:	and	w28, w8, #0x7fffffff
  40dedc:	cmp	w28, w9
  40dee0:	b.ne	40de30 <feof@plt+0xb130>  // b.any
  40dee4:	str	w21, [sp, #80]
  40dee8:	mov	x21, x12
  40deec:	add	w1, w28, #0x1
  40def0:	tbnz	w8, #31, 40df34 <feof@plt+0xb234>
  40def4:	mov	w0, w28
  40def8:	bl	415344 <feof@plt+0x12644>
  40defc:	ldr	w22, [x26, #4]
  40df00:	mov	w23, w0
  40df04:	mov	w28, wzr
  40df08:	mov	w24, wzr
  40df0c:	mov	x0, x26
  40df10:	b	40df4c <feof@plt+0xb24c>
  40df14:	str	w21, [sp, #80]
  40df18:	mov	x21, x12
  40df1c:	mov	w28, wzr
  40df20:	mov	w24, wzr
  40df24:	mov	x0, xzr
  40df28:	mov	w22, wzr
  40df2c:	mov	w23, #0x4                   	// #4
  40df30:	b	40df4c <feof@plt+0xb24c>
  40df34:	cmp	w28, #0x4
  40df38:	mov	w8, #0x4                   	// #4
  40df3c:	mov	x0, xzr
  40df40:	mov	w22, wzr
  40df44:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  40df48:	mov	w24, #0x1                   	// #1
  40df4c:	mov	w8, #0x28                  	// #40
  40df50:	umull	x8, w23, w8
  40df54:	add	x1, x8, #0x8
  40df58:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40df5c:	and	w8, w23, #0x7fffffff
  40df60:	stp	w8, w22, [x0]
  40df64:	ldr	x22, [sp, #88]
  40df68:	mov	x12, x21
  40df6c:	ldr	w21, [sp, #80]
  40df70:	cbz	w24, 40de34 <feof@plt+0xb134>
  40df74:	cbz	w28, 40dfa4 <feof@plt+0xb2a4>
  40df78:	add	x8, x26, #0x8
  40df7c:	add	x9, x0, #0x8
  40df80:	mov	w10, w28
  40df84:	ldr	x11, [x8, #32]
  40df88:	ldp	q1, q0, [x8]
  40df8c:	subs	w10, w10, #0x1
  40df90:	add	x8, x8, #0x28
  40df94:	str	x11, [x9, #32]
  40df98:	stp	q1, q0, [x9]
  40df9c:	add	x9, x9, #0x28
  40dfa0:	b.ne	40df84 <feof@plt+0xb284>  // b.any
  40dfa4:	str	w28, [x0, #4]
  40dfa8:	b	40de34 <feof@plt+0xb134>
  40dfac:	cbz	x26, 40e284 <feof@plt+0xb584>
  40dfb0:	ldr	w1, [x26, #4]
  40dfb4:	cbz	w1, 40e26c <feof@plt+0xb56c>
  40dfb8:	cmp	w1, #0x1
  40dfbc:	b.ne	40dfcc <feof@plt+0xb2cc>  // b.any
  40dfc0:	mov	w8, wzr
  40dfc4:	mov	w14, #0x28                  	// #40
  40dfc8:	b	40dff0 <feof@plt+0xb2f0>
  40dfcc:	adrp	x3, 40f000 <feof@plt+0xc300>
  40dfd0:	add	x0, x26, #0x8
  40dfd4:	mov	w2, #0x28                  	// #40
  40dfd8:	add	x3, x3, #0x350
  40dfdc:	bl	419e48 <feof@plt+0x17148>
  40dfe0:	ldr	w1, [x26, #4]
  40dfe4:	mov	w14, #0x28                  	// #40
  40dfe8:	cbz	w1, 40ec7c <feof@plt+0xbf7c>
  40dfec:	sub	w8, w1, #0x1
  40dff0:	mov	w9, #0x1                   	// #1
  40dff4:	mov	w10, #0x7fffffff            	// #2147483647
  40dff8:	umaddl	x11, w8, w14, x26
  40dffc:	ldrsw	x12, [x11, #12]
  40e000:	ldr	x13, [x11, #32]
  40e004:	sub	w8, w8, #0x1
  40e008:	add	x13, x13, x12
  40e00c:	cmp	x13, w10, sxtw
  40e010:	cinc	w9, w9, cs  // cs = hs, nlast
  40e014:	cmp	w1, w8
  40e018:	mov	w10, w12
  40e01c:	str	w9, [x11, #40]
  40e020:	b.hi	40dff8 <feof@plt+0xb2f8>  // b.pmore
  40e024:	add	w19, w9, #0x1
  40e028:	mov	w20, wzr
  40e02c:	mov	w27, wzr
  40e030:	add	x23, x26, #0x8
  40e034:	b	40e050 <feof@plt+0xb350>
  40e038:	ldr	x0, [sp, #144]
  40e03c:	bl	413db4 <feof@plt+0x110b4>
  40e040:	ldr	x22, [sp, #88]
  40e044:	add	w20, w20, #0x1
  40e048:	cmp	w20, w19
  40e04c:	b.eq	40e230 <feof@plt+0xb530>  // b.none
  40e050:	ldrb	w8, [sp, #250]
  40e054:	cbz	w8, 40e0c4 <feof@plt+0xb3c4>
  40e058:	ldr	w8, [sp, #280]
  40e05c:	cmp	w8, #0x4
  40e060:	b.lt	40e08c <feof@plt+0xb38c>  // b.tstop
  40e064:	mov	w21, wzr
  40e068:	ldr	x0, [sp, #144]
  40e06c:	mov	w1, #0x20                  	// #32
  40e070:	bl	41164c <feof@plt+0xe94c>
  40e074:	ldr	w8, [sp, #280]
  40e078:	add	w21, w21, #0x1
  40e07c:	sub	w9, w8, #0x3
  40e080:	cmp	w21, w9
  40e084:	b.lt	40e068 <feof@plt+0xb368>  // b.tstop
  40e088:	b	40e090 <feof@plt+0xb390>
  40e08c:	mov	w21, wzr
  40e090:	ldr	x0, [sp, #144]
  40e094:	cmp	w21, w8
  40e098:	b.ge	40e0b8 <feof@plt+0xb3b8>  // b.tcont
  40e09c:	mov	w1, #0x20                  	// #32
  40e0a0:	bl	41164c <feof@plt+0xe94c>
  40e0a4:	ldr	w8, [sp, #280]
  40e0a8:	ldr	x0, [sp, #144]
  40e0ac:	add	w21, w21, #0x1
  40e0b0:	cmp	w21, w8
  40e0b4:	b.lt	40e09c <feof@plt+0xb39c>  // b.tstop
  40e0b8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40e0bc:	add	x1, x1, #0x40f
  40e0c0:	bl	413430 <feof@plt+0x10730>
  40e0c4:	ldr	x0, [sp, #144]
  40e0c8:	mov	w1, #0x20                  	// #32
  40e0cc:	bl	41164c <feof@plt+0xe94c>
  40e0d0:	ldr	w8, [x26, #4]
  40e0d4:	cbz	w8, 40e208 <feof@plt+0xb508>
  40e0d8:	ldr	w8, [sp, #284]
  40e0dc:	mov	x28, xzr
  40e0e0:	mov	x21, x23
  40e0e4:	add	w22, w8, #0x1
  40e0e8:	b	40e110 <feof@plt+0xb410>
  40e0ec:	ldr	w8, [x21, #24]
  40e0f0:	add	w22, w22, w8
  40e0f4:	ldr	w8, [x26, #4]
  40e0f8:	add	x28, x28, #0x1
  40e0fc:	mov	w9, #0x28                  	// #40
  40e100:	madd	x9, x28, x9, x26
  40e104:	cmp	x28, x8
  40e108:	add	x21, x9, #0x8
  40e10c:	b.cs	40e208 <feof@plt+0xb508>  // b.hs, b.nlast
  40e110:	ldr	w8, [x21, #32]
  40e114:	cmp	w20, w8
  40e118:	b.gt	40e208 <feof@plt+0xb508>
  40e11c:	ldr	w24, [x21, #4]
  40e120:	b.ne	40e18c <feof@plt+0xb48c>  // b.any
  40e124:	cmp	w22, w24
  40e128:	b.gt	40ed34 <feof@plt+0xc034>
  40e12c:	b.ge	40e14c <feof@plt+0xb44c>  // b.tcont
  40e130:	sub	w22, w24, w22
  40e134:	ldr	x0, [sp, #144]
  40e138:	mov	w1, #0x20                  	// #32
  40e13c:	bl	41164c <feof@plt+0xe94c>
  40e140:	subs	w22, w22, #0x1
  40e144:	b.ne	40e134 <feof@plt+0xb434>  // b.any
  40e148:	mov	w22, w24
  40e14c:	ldr	w1, [x21]
  40e150:	mov	x0, x25
  40e154:	bl	40f090 <feof@plt+0xc390>
  40e158:	ldr	x0, [sp, #144]
  40e15c:	ldr	x1, [x21, #8]
  40e160:	bl	413430 <feof@plt+0x10730>
  40e164:	ldr	w8, [sp, #204]
  40e168:	cmn	w8, #0x1
  40e16c:	b.eq	40e0ec <feof@plt+0xb3ec>  // b.none
  40e170:	ldr	x8, [sp, #192]
  40e174:	ldr	x1, [sp, #240]
  40e178:	ldr	x0, [x8]
  40e17c:	bl	413430 <feof@plt+0x10730>
  40e180:	mov	w8, #0xffffffff            	// #-1
  40e184:	str	w8, [sp, #204]
  40e188:	b	40e0ec <feof@plt+0xb3ec>
  40e18c:	cmp	w24, w27
  40e190:	b.eq	40e0f4 <feof@plt+0xb3f4>  // b.none
  40e194:	cmp	w22, w24
  40e198:	b.gt	40ed7c <feof@plt+0xc07c>
  40e19c:	b.ge	40e1c0 <feof@plt+0xb4c0>  // b.tcont
  40e1a0:	sub	w22, w24, w22
  40e1a4:	ldr	x0, [sp, #144]
  40e1a8:	mov	w1, #0x20                  	// #32
  40e1ac:	bl	41164c <feof@plt+0xe94c>
  40e1b0:	subs	w22, w22, #0x1
  40e1b4:	b.ne	40e1a4 <feof@plt+0xb4a4>  // b.any
  40e1b8:	mov	w27, w24
  40e1bc:	b	40e1c4 <feof@plt+0xb4c4>
  40e1c0:	mov	w27, w22
  40e1c4:	ldr	w1, [x21]
  40e1c8:	mov	x0, x25
  40e1cc:	bl	40f090 <feof@plt+0xc390>
  40e1d0:	ldr	x0, [sp, #144]
  40e1d4:	mov	w1, #0x7c                  	// #124
  40e1d8:	bl	41164c <feof@plt+0xe94c>
  40e1dc:	ldr	w8, [sp, #204]
  40e1e0:	cmn	w8, #0x1
  40e1e4:	b.eq	40e200 <feof@plt+0xb500>  // b.none
  40e1e8:	ldr	x8, [sp, #192]
  40e1ec:	ldr	x1, [sp, #240]
  40e1f0:	ldr	x0, [x8]
  40e1f4:	bl	413430 <feof@plt+0x10730>
  40e1f8:	mov	w8, #0xffffffff            	// #-1
  40e1fc:	str	w8, [sp, #204]
  40e200:	add	w22, w27, #0x1
  40e204:	b	40e0f4 <feof@plt+0xb3f4>
  40e208:	ldr	w8, [sp, #204]
  40e20c:	cmn	w8, #0x1
  40e210:	b.eq	40e038 <feof@plt+0xb338>  // b.none
  40e214:	ldr	x8, [sp, #192]
  40e218:	ldr	x1, [sp, #240]
  40e21c:	ldr	x0, [x8]
  40e220:	bl	413430 <feof@plt+0x10730>
  40e224:	mov	w8, #0xffffffff            	// #-1
  40e228:	str	w8, [sp, #204]
  40e22c:	b	40e038 <feof@plt+0xb338>
  40e230:	ldr	w8, [x26, #4]
  40e234:	cbz	w8, 40e26c <feof@plt+0xb56c>
  40e238:	mov	x19, xzr
  40e23c:	add	x20, x26, #0x18
  40e240:	b	40e254 <feof@plt+0xb554>
  40e244:	add	x19, x19, #0x1
  40e248:	cmp	x19, w8, uxtw
  40e24c:	add	x20, x20, #0x28
  40e250:	b.cs	40e26c <feof@plt+0xb56c>  // b.hs, b.nlast
  40e254:	ldrb	w9, [x20]
  40e258:	cbz	w9, 40e244 <feof@plt+0xb544>
  40e25c:	ldur	x0, [x20, #-8]
  40e260:	bl	402770 <free@plt>
  40e264:	ldr	w8, [x26, #4]
  40e268:	b	40e244 <feof@plt+0xb544>
  40e26c:	ldr	w8, [x26]
  40e270:	tbnz	w8, #31, 40e280 <feof@plt+0xb580>
  40e274:	mov	x0, x26
  40e278:	bl	402770 <free@plt>
  40e27c:	b	40e284 <feof@plt+0xb584>
  40e280:	str	wzr, [x26, #4]
  40e284:	ldr	x8, [sp, #160]
  40e288:	mov	x27, xzr
  40e28c:	mov	x24, xzr
  40e290:	str	x8, [sp, #64]
  40e294:	ldr	x8, [sp, #264]
  40e298:	cbnz	x8, 40e2c8 <feof@plt+0xb5c8>
  40e29c:	b	40e2d8 <feof@plt+0xb5d8>
  40e2a0:	mov	x0, x24
  40e2a4:	ldr	w8, [x0, #4]
  40e2a8:	mov	x24, x0
  40e2ac:	add	w9, w8, #0x1
  40e2b0:	add	x8, x0, x8, lsl #3
  40e2b4:	str	w9, [x0, #4]
  40e2b8:	str	x20, [x8, #8]
  40e2bc:	add	x27, x27, #0x1
  40e2c0:	ldr	x8, [sp, #264]
  40e2c4:	cbz	x8, 40e2d8 <feof@plt+0xb5d8>
  40e2c8:	ldr	w9, [x8, #4]
  40e2cc:	cmp	x27, w9, uxtw
  40e2d0:	b.cc	40e2e4 <feof@plt+0xb5e4>  // b.lo, b.ul, b.last
  40e2d4:	b	40e6a0 <feof@plt+0xb9a0>
  40e2d8:	mov	w9, wzr
  40e2dc:	cmp	x27, w9, uxtw
  40e2e0:	b.cs	40e6a0 <feof@plt+0xb9a0>  // b.hs, b.nlast
  40e2e4:	add	x8, x8, x27, lsl #3
  40e2e8:	ldr	x28, [x8, #8]
  40e2ec:	mov	x0, x28
  40e2f0:	bl	43178c <feof@plt+0x2ea8c>
  40e2f4:	tbnz	w0, #0, 40e2bc <feof@plt+0xb5bc>
  40e2f8:	ldr	x1, [sp, #160]
  40e2fc:	mov	x0, x28
  40e300:	mov	w2, w22
  40e304:	bl	43187c <feof@plt+0x2eb7c>
  40e308:	tbz	w0, #0, 40e2bc <feof@plt+0xb5bc>
  40e30c:	ldr	w0, [x28]
  40e310:	sub	x8, x29, #0x30
  40e314:	mov	x26, x25
  40e318:	bl	4171b0 <feof@plt+0x144b0>
  40e31c:	ldr	w0, [x28, #4]
  40e320:	ldur	w19, [x29, #-36]
  40e324:	sub	x8, x29, #0x30
  40e328:	bl	4171b0 <feof@plt+0x144b0>
  40e32c:	ldur	w22, [x29, #-36]
  40e330:	cmp	w19, w22
  40e334:	b.gt	40ed4c <feof@plt+0xc04c>
  40e338:	ldr	w0, [x28]
  40e33c:	sub	x8, x29, #0x30
  40e340:	bl	4171b0 <feof@plt+0x144b0>
  40e344:	ldur	w25, [x29, #-36]
  40e348:	ldp	w9, w0, [x28]
  40e34c:	ldr	w8, [x28, #16]
  40e350:	mov	x23, x24
  40e354:	sub	w21, w25, #0x1
  40e358:	cmp	w9, w0
  40e35c:	add	w20, w21, w8
  40e360:	b.ne	40e374 <feof@plt+0xb674>  // b.any
  40e364:	cbz	w8, 40e39c <feof@plt+0xb69c>
  40e368:	cmp	w25, w20
  40e36c:	b.le	40e39c <feof@plt+0xb69c>
  40e370:	b	40ed4c <feof@plt+0xc04c>
  40e374:	sub	x8, x29, #0x30
  40e378:	bl	4171b0 <feof@plt+0x144b0>
  40e37c:	ldur	w8, [x29, #-36]
  40e380:	sub	w8, w8, #0x1
  40e384:	cmp	w8, w20
  40e388:	csel	w20, w8, w20, gt
  40e38c:	cmp	w25, w20
  40e390:	b.le	40e39c <feof@plt+0xb69c>
  40e394:	cmp	w21, w20
  40e398:	b.ne	40ed4c <feof@plt+0xc04c>  // b.any
  40e39c:	sub	w9, w22, #0x1
  40e3a0:	mov	x24, x23
  40e3a4:	cbz	x23, 40e3e4 <feof@plt+0xb6e4>
  40e3a8:	ldr	w8, [x24, #4]
  40e3ac:	cbz	w8, 40e3e4 <feof@plt+0xb6e4>
  40e3b0:	sub	w8, w8, #0x1
  40e3b4:	add	x8, x24, w8, uxtw #3
  40e3b8:	ldr	x22, [x8, #8]
  40e3bc:	ldr	w8, [x22]
  40e3c0:	cmp	w8, w19
  40e3c4:	b.gt	40edac <feof@plt+0xc0ac>
  40e3c8:	ldr	w8, [x22, #8]
  40e3cc:	cmp	w8, w25
  40e3d0:	b.gt	40edc4 <feof@plt+0xc0c4>
  40e3d4:	ldr	w8, [x22, #12]
  40e3d8:	mov	x24, x23
  40e3dc:	cmp	w8, w25
  40e3e0:	b.ge	40e474 <feof@plt+0xb774>  // b.tcont
  40e3e4:	mov	w0, #0x28                  	// #40
  40e3e8:	bfi	x19, x9, #32, #32
  40e3ec:	bfi	x25, x20, #32, #32
  40e3f0:	bl	402970 <_Znwm@plt>
  40e3f4:	mov	x20, x0
  40e3f8:	ldp	x0, x21, [x28, #8]
  40e3fc:	stp	x19, x25, [x20]
  40e400:	bl	45547c <_obstack_memory_used@@Base+0x254>
  40e404:	add	x8, x21, #0x1
  40e408:	stp	x0, x21, [x20, #16]
  40e40c:	str	x8, [x20, #32]
  40e410:	cbz	x24, 40e454 <feof@plt+0xb754>
  40e414:	ldp	w8, w9, [x24]
  40e418:	ldr	x22, [sp, #88]
  40e41c:	mov	x25, x26
  40e420:	and	w28, w8, #0x7fffffff
  40e424:	cmp	w28, w9
  40e428:	b.ne	40e2a0 <feof@plt+0xb5a0>  // b.any
  40e42c:	add	w1, w28, #0x1
  40e430:	tbnz	w8, #31, 40e5c0 <feof@plt+0xb8c0>
  40e434:	mov	w0, w28
  40e438:	bl	415344 <feof@plt+0x12644>
  40e43c:	ldr	w19, [x24, #4]
  40e440:	mov	w23, w0
  40e444:	mov	w28, wzr
  40e448:	mov	w21, wzr
  40e44c:	mov	x0, x24
  40e450:	b	40e5d8 <feof@plt+0xb8d8>
  40e454:	ldr	x22, [sp, #88]
  40e458:	mov	w28, wzr
  40e45c:	mov	w21, wzr
  40e460:	mov	x0, xzr
  40e464:	mov	w19, wzr
  40e468:	mov	w23, #0x4                   	// #4
  40e46c:	mov	x25, x26
  40e470:	b	40e5d8 <feof@plt+0xb8d8>
  40e474:	ldr	w8, [x22, #4]
  40e478:	cmp	w8, w25
  40e47c:	stp	x8, x9, [sp, #72]
  40e480:	b.ge	40ed4c <feof@plt+0xc04c>  // b.tcont
  40e484:	ldr	x0, [sp, #64]
  40e488:	ldr	x1, [sp, #88]
  40e48c:	bl	416df0 <feof@plt+0x140f0>
  40e490:	ldr	x9, [sp, #80]
  40e494:	mov	x24, x23
  40e498:	cbz	x0, 40e3e4 <feof@plt+0xb6e4>
  40e49c:	cmp	w25, w1
  40e4a0:	b.gt	40e3e4 <feof@plt+0xb6e4>
  40e4a4:	ldr	x20, [x22, #24]
  40e4a8:	tbnz	w20, #31, 40eddc <feof@plt+0xc0dc>
  40e4ac:	ldr	x10, [sp, #72]
  40e4b0:	mvn	w8, w10
  40e4b4:	adds	w24, w25, w8
  40e4b8:	b.mi	40edf4 <feof@plt+0xc0f4>  // b.first
  40e4bc:	ldr	w8, [x28, #16]
  40e4c0:	add	w25, w24, w20
  40e4c4:	adds	w8, w25, w8
  40e4c8:	b.mi	40ee0c <feof@plt+0xc10c>  // b.first
  40e4cc:	ldr	x19, [x22, #32]
  40e4d0:	mov	w9, w8
  40e4d4:	cmp	x19, x9
  40e4d8:	b.hi	40e50c <feof@plt+0xb80c>  // b.pmore
  40e4dc:	stp	x1, x0, [sp, #32]
  40e4e0:	ldr	x0, [x22, #16]
  40e4e4:	lsl	x8, x9, #1
  40e4e8:	add	x19, x8, #0x2
  40e4ec:	mov	x1, x19
  40e4f0:	str	x9, [sp, #48]
  40e4f4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40e4f8:	str	x0, [x22, #16]
  40e4fc:	ldr	x9, [sp, #48]
  40e500:	ldr	x10, [sp, #72]
  40e504:	ldp	x1, x0, [sp, #32]
  40e508:	str	x19, [x22, #32]
  40e50c:	tbnz	w10, #31, 40ee24 <feof@plt+0xc124>
  40e510:	cmp	w10, w1
  40e514:	b.ge	40ee3c <feof@plt+0xc13c>  // b.tcont
  40e518:	cmp	w21, w1
  40e51c:	b.gt	40ee54 <feof@plt+0xc154>
  40e520:	and	x8, x20, #0xffffffff
  40e524:	mov	w2, w24
  40e528:	mov	x21, x9
  40e52c:	add	x9, x8, x2
  40e530:	cmp	x9, x19
  40e534:	b.cs	40ee6c <feof@plt+0xc16c>  // b.hs, b.nlast
  40e538:	ldr	x9, [x22, #16]
  40e53c:	add	x1, x0, x10
  40e540:	add	x0, x9, x8
  40e544:	bl	402640 <memcpy@plt>
  40e548:	ldr	x2, [x28, #16]
  40e54c:	ldr	x9, [x22, #32]
  40e550:	mov	w8, w25
  40e554:	add	x10, x2, x8
  40e558:	cmp	x10, x9
  40e55c:	b.cs	40ee6c <feof@plt+0xc16c>  // b.hs, b.nlast
  40e560:	ldr	x9, [x22, #16]
  40e564:	ldr	x1, [x28, #8]
  40e568:	add	x0, x9, x8
  40e56c:	bl	402640 <memcpy@plt>
  40e570:	ldr	x8, [x22, #32]
  40e574:	str	x21, [x22, #24]
  40e578:	cmp	x8, x21
  40e57c:	b.ls	40ee84 <feof@plt+0xc184>  // b.plast
  40e580:	ldr	x8, [x22, #16]
  40e584:	mov	x25, x26
  40e588:	add	x27, x27, #0x1
  40e58c:	strb	wzr, [x8, x21]
  40e590:	ldr	x8, [sp, #80]
  40e594:	ldr	w9, [x22, #12]
  40e598:	str	w8, [x22, #4]
  40e59c:	ldr	w8, [x28, #16]
  40e5a0:	add	w8, w24, w8
  40e5a4:	add	w8, w8, w9
  40e5a8:	str	w8, [x22, #12]
  40e5ac:	ldr	x22, [sp, #88]
  40e5b0:	mov	x24, x23
  40e5b4:	ldr	x8, [sp, #264]
  40e5b8:	cbnz	x8, 40e2c8 <feof@plt+0xb5c8>
  40e5bc:	b	40e2d8 <feof@plt+0xb5d8>
  40e5c0:	cmp	w28, #0x4
  40e5c4:	mov	w8, #0x4                   	// #4
  40e5c8:	mov	x0, xzr
  40e5cc:	mov	w19, wzr
  40e5d0:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  40e5d4:	mov	w21, #0x1                   	// #1
  40e5d8:	mov	w8, w23
  40e5dc:	lsl	x8, x8, #3
  40e5e0:	add	x1, x8, #0x8
  40e5e4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40e5e8:	and	w8, w23, #0x7fffffff
  40e5ec:	stp	w8, w19, [x0]
  40e5f0:	cbz	w21, 40e2a4 <feof@plt+0xb5a4>
  40e5f4:	cbz	w28, 40e698 <feof@plt+0xb998>
  40e5f8:	sub	w10, w28, #0x1
  40e5fc:	add	x9, x24, #0x8
  40e600:	cmp	w10, #0x3
  40e604:	add	x8, x0, #0x8
  40e608:	b.cs	40e614 <feof@plt+0xb914>  // b.hs, b.nlast
  40e60c:	mov	w10, w28
  40e610:	b	40e688 <feof@plt+0xb988>
  40e614:	lsl	x11, x10, #3
  40e618:	add	x12, x24, x11
  40e61c:	add	x12, x12, #0x10
  40e620:	cmp	x8, x12
  40e624:	b.cs	40e640 <feof@plt+0xb940>  // b.hs, b.nlast
  40e628:	add	x11, x0, x11
  40e62c:	add	x11, x11, #0x10
  40e630:	cmp	x11, x9
  40e634:	b.ls	40e640 <feof@plt+0xb940>  // b.plast
  40e638:	mov	w10, w28
  40e63c:	b	40e688 <feof@plt+0xb988>
  40e640:	add	x11, x10, #0x1
  40e644:	and	x12, x11, #0x1fffffffc
  40e648:	lsl	x9, x12, #3
  40e64c:	add	x14, x24, x9
  40e650:	add	x13, x0, #0x18
  40e654:	sub	w10, w28, w12
  40e658:	add	x8, x8, x9
  40e65c:	add	x9, x14, #0x8
  40e660:	add	x14, x24, #0x18
  40e664:	mov	x15, x12
  40e668:	ldp	q0, q1, [x14, #-16]
  40e66c:	subs	x15, x15, #0x4
  40e670:	add	x14, x14, #0x20
  40e674:	stp	q0, q1, [x13, #-16]
  40e678:	add	x13, x13, #0x20
  40e67c:	b.ne	40e668 <feof@plt+0xb968>  // b.any
  40e680:	cmp	x11, x12
  40e684:	b.eq	40e698 <feof@plt+0xb998>  // b.none
  40e688:	ldr	x11, [x9], #8
  40e68c:	subs	w10, w10, #0x1
  40e690:	str	x11, [x8], #8
  40e694:	b.ne	40e688 <feof@plt+0xb988>  // b.any
  40e698:	str	w28, [x0, #4]
  40e69c:	b	40e2a4 <feof@plt+0xb5a4>
  40e6a0:	ldr	w27, [sp, #284]
  40e6a4:	cbz	x24, 40ebe0 <feof@plt+0xbee0>
  40e6a8:	ldr	w8, [x24, #4]
  40e6ac:	cbz	w8, 40ebe0 <feof@plt+0xbee0>
  40e6b0:	ldrb	w8, [sp, #250]
  40e6b4:	cbz	w8, 40e72c <feof@plt+0xba2c>
  40e6b8:	ldr	w8, [sp, #280]
  40e6bc:	cmp	w8, #0x4
  40e6c0:	b.lt	40e6ec <feof@plt+0xb9ec>  // b.tstop
  40e6c4:	mov	w19, wzr
  40e6c8:	ldr	x0, [sp, #144]
  40e6cc:	mov	w1, #0x20                  	// #32
  40e6d0:	bl	41164c <feof@plt+0xe94c>
  40e6d4:	ldr	w8, [sp, #280]
  40e6d8:	add	w19, w19, #0x1
  40e6dc:	sub	w9, w8, #0x3
  40e6e0:	cmp	w19, w9
  40e6e4:	b.lt	40e6c8 <feof@plt+0xb9c8>  // b.tstop
  40e6e8:	b	40e6f0 <feof@plt+0xb9f0>
  40e6ec:	mov	w19, wzr
  40e6f0:	ldr	x0, [sp, #144]
  40e6f4:	cmp	w19, w8
  40e6f8:	b.ge	40e718 <feof@plt+0xba18>  // b.tcont
  40e6fc:	mov	w1, #0x20                  	// #32
  40e700:	bl	41164c <feof@plt+0xe94c>
  40e704:	ldr	w8, [sp, #280]
  40e708:	ldr	x0, [sp, #144]
  40e70c:	add	w19, w19, #0x1
  40e710:	cmp	w19, w8
  40e714:	b.lt	40e6fc <feof@plt+0xb9fc>  // b.tstop
  40e718:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40e71c:	add	x1, x1, #0x40f
  40e720:	bl	413430 <feof@plt+0x10730>
  40e724:	ldr	w8, [x24, #4]
  40e728:	cbz	w8, 40ebe0 <feof@plt+0xbee0>
  40e72c:	mov	w19, wzr
  40e730:	b	40e754 <feof@plt+0xba54>
  40e734:	add	x28, x20, #0x18
  40e738:	ldr	w8, [x28]
  40e73c:	add	w21, w27, w8
  40e740:	ldr	w8, [x24, #4]
  40e744:	add	w19, w19, #0x1
  40e748:	mov	w27, w21
  40e74c:	cmp	w8, w19
  40e750:	b.ls	40ebe4 <feof@plt+0xbee4>  // b.plast
  40e754:	add	x8, x24, w19, uxtw #3
  40e758:	ldr	x20, [x8, #8]
  40e75c:	ldp	w23, w28, [x20]
  40e760:	add	w8, w28, #0x1
  40e764:	cmp	w23, w8
  40e768:	b.ne	40e7e0 <feof@plt+0xbae0>  // b.any
  40e76c:	ldr	w21, [x20, #8]
  40e770:	cmp	w27, w21
  40e774:	b.le	40e908 <feof@plt+0xbc08>
  40e778:	ldr	w8, [sp, #204]
  40e77c:	cmn	w8, #0x1
  40e780:	b.eq	40e79c <feof@plt+0xba9c>  // b.none
  40e784:	ldr	x8, [sp, #192]
  40e788:	ldr	x1, [sp, #240]
  40e78c:	ldr	x0, [x8]
  40e790:	bl	413430 <feof@plt+0x10730>
  40e794:	mov	w8, #0xffffffff            	// #-1
  40e798:	str	w8, [sp, #204]
  40e79c:	ldr	x0, [sp, #144]
  40e7a0:	bl	413db4 <feof@plt+0x110b4>
  40e7a4:	ldrb	w8, [sp, #250]
  40e7a8:	cbz	w8, 40e904 <feof@plt+0xbc04>
  40e7ac:	ldr	w8, [sp, #280]
  40e7b0:	cmp	w8, #0x4
  40e7b4:	b.lt	40e8c8 <feof@plt+0xbbc8>  // b.tstop
  40e7b8:	mov	w22, wzr
  40e7bc:	ldr	x0, [sp, #144]
  40e7c0:	mov	w1, #0x20                  	// #32
  40e7c4:	bl	41164c <feof@plt+0xe94c>
  40e7c8:	ldr	w8, [sp, #280]
  40e7cc:	add	w22, w22, #0x1
  40e7d0:	sub	w9, w8, #0x3
  40e7d4:	cmp	w22, w9
  40e7d8:	b.lt	40e7bc <feof@plt+0xbabc>  // b.tstop
  40e7dc:	b	40e8cc <feof@plt+0xbbcc>
  40e7e0:	ldr	x10, [sp, #256]
  40e7e4:	cbz	x10, 40e858 <feof@plt+0xbb58>
  40e7e8:	ldr	w8, [x10, #4]
  40e7ec:	cbz	w8, 40e858 <feof@plt+0xbb58>
  40e7f0:	mov	x9, xzr
  40e7f4:	add	x11, x10, #0x8
  40e7f8:	add	x10, x10, #0x30
  40e7fc:	b	40e818 <feof@plt+0xbb18>
  40e800:	add	x9, x9, #0x1
  40e804:	cmp	x9, x8
  40e808:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  40e80c:	cmp	x8, x9
  40e810:	add	x10, x10, #0x28
  40e814:	b.eq	40e858 <feof@plt+0xbb58>  // b.none
  40e818:	ldr	w12, [x11]
  40e81c:	cmp	w12, w22
  40e820:	b.ne	40e800 <feof@plt+0xbb00>  // b.any
  40e824:	ldr	w12, [x11, #4]
  40e828:	cmp	w12, w23
  40e82c:	b.ne	40e800 <feof@plt+0xbb00>  // b.any
  40e830:	ldr	w12, [x11, #8]
  40e834:	cmp	w12, w22
  40e838:	b.ne	40e800 <feof@plt+0xbb00>  // b.any
  40e83c:	ldr	w11, [x11, #12]
  40e840:	cmp	w11, w28
  40e844:	b.ne	40e800 <feof@plt+0xbb00>  // b.any
  40e848:	ldr	x8, [x20, #24]
  40e84c:	cbz	x8, 40e858 <feof@plt+0xbb58>
  40e850:	mov	w21, w27
  40e854:	b	40ea8c <feof@plt+0xbd8c>
  40e858:	cmp	w27, w23
  40e85c:	b.le	40e9dc <feof@plt+0xbcdc>
  40e860:	ldr	w8, [sp, #204]
  40e864:	cmn	w8, #0x1
  40e868:	b.eq	40e884 <feof@plt+0xbb84>  // b.none
  40e86c:	ldr	x8, [sp, #192]
  40e870:	ldr	x1, [sp, #240]
  40e874:	ldr	x0, [x8]
  40e878:	bl	413430 <feof@plt+0x10730>
  40e87c:	mov	w8, #0xffffffff            	// #-1
  40e880:	str	w8, [sp, #204]
  40e884:	ldr	x0, [sp, #144]
  40e888:	bl	413db4 <feof@plt+0x110b4>
  40e88c:	ldrb	w8, [sp, #250]
  40e890:	cbz	w8, 40e9d8 <feof@plt+0xbcd8>
  40e894:	ldr	w8, [sp, #280]
  40e898:	cmp	w8, #0x4
  40e89c:	b.lt	40e9a0 <feof@plt+0xbca0>  // b.tstop
  40e8a0:	mov	w21, wzr
  40e8a4:	ldr	x0, [sp, #144]
  40e8a8:	mov	w1, #0x20                  	// #32
  40e8ac:	bl	41164c <feof@plt+0xe94c>
  40e8b0:	ldr	w8, [sp, #280]
  40e8b4:	add	w21, w21, #0x1
  40e8b8:	sub	w9, w8, #0x3
  40e8bc:	cmp	w21, w9
  40e8c0:	b.lt	40e8a4 <feof@plt+0xbba4>  // b.tstop
  40e8c4:	b	40e9a4 <feof@plt+0xbca4>
  40e8c8:	mov	w22, wzr
  40e8cc:	ldr	x0, [sp, #144]
  40e8d0:	cmp	w22, w8
  40e8d4:	b.ge	40e8f4 <feof@plt+0xbbf4>  // b.tcont
  40e8d8:	mov	w1, #0x20                  	// #32
  40e8dc:	bl	41164c <feof@plt+0xe94c>
  40e8e0:	ldr	w8, [sp, #280]
  40e8e4:	ldr	x0, [sp, #144]
  40e8e8:	add	w22, w22, #0x1
  40e8ec:	cmp	w22, w8
  40e8f0:	b.lt	40e8d8 <feof@plt+0xbbd8>  // b.tstop
  40e8f4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40e8f8:	add	x1, x1, #0x40f
  40e8fc:	bl	413430 <feof@plt+0x10730>
  40e900:	ldr	x22, [sp, #88]
  40e904:	ldr	w27, [sp, #284]
  40e908:	cmp	w27, w21
  40e90c:	b.ge	40e930 <feof@plt+0xbc30>  // b.tcont
  40e910:	sub	w22, w21, w27
  40e914:	ldr	x0, [sp, #144]
  40e918:	mov	w1, #0x20                  	// #32
  40e91c:	bl	41164c <feof@plt+0xe94c>
  40e920:	subs	w22, w22, #0x1
  40e924:	b.ne	40e914 <feof@plt+0xbc14>  // b.any
  40e928:	ldr	x22, [sp, #88]
  40e92c:	mov	w27, w21
  40e930:	ldr	w8, [sp, #204]
  40e934:	cmn	w8, #0x2
  40e938:	b.eq	40e96c <feof@plt+0xbc6c>  // b.none
  40e93c:	cmn	w8, #0x1
  40e940:	b.eq	40e954 <feof@plt+0xbc54>  // b.none
  40e944:	ldr	x8, [sp, #192]
  40e948:	ldr	x1, [sp, #240]
  40e94c:	ldr	x0, [x8]
  40e950:	bl	413430 <feof@plt+0x10730>
  40e954:	ldr	x8, [sp, #192]
  40e958:	mov	w9, #0xfffffffe            	// #-2
  40e95c:	str	w9, [sp, #204]
  40e960:	ldr	x1, [sp, #224]
  40e964:	ldr	x0, [x8]
  40e968:	bl	413430 <feof@plt+0x10730>
  40e96c:	ldr	x0, [sp, #144]
  40e970:	ldr	x1, [x20, #16]
  40e974:	bl	413430 <feof@plt+0x10730>
  40e978:	ldr	w8, [sp, #204]
  40e97c:	cmn	w8, #0x1
  40e980:	b.eq	40e734 <feof@plt+0xba34>  // b.none
  40e984:	ldr	x8, [sp, #192]
  40e988:	ldr	x1, [sp, #240]
  40e98c:	ldr	x0, [x8]
  40e990:	bl	413430 <feof@plt+0x10730>
  40e994:	mov	w8, #0xffffffff            	// #-1
  40e998:	str	w8, [sp, #204]
  40e99c:	b	40e734 <feof@plt+0xba34>
  40e9a0:	mov	w21, wzr
  40e9a4:	ldr	x0, [sp, #144]
  40e9a8:	cmp	w21, w8
  40e9ac:	b.ge	40e9cc <feof@plt+0xbccc>  // b.tcont
  40e9b0:	mov	w1, #0x20                  	// #32
  40e9b4:	bl	41164c <feof@plt+0xe94c>
  40e9b8:	ldr	w8, [sp, #280]
  40e9bc:	ldr	x0, [sp, #144]
  40e9c0:	add	w21, w21, #0x1
  40e9c4:	cmp	w21, w8
  40e9c8:	b.lt	40e9b0 <feof@plt+0xbcb0>  // b.tstop
  40e9cc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40e9d0:	add	x1, x1, #0x40f
  40e9d4:	bl	413430 <feof@plt+0x10730>
  40e9d8:	ldr	w27, [sp, #284]
  40e9dc:	cmp	w27, w23
  40e9e0:	b.ge	40ea00 <feof@plt+0xbd00>  // b.tcont
  40e9e4:	sub	w21, w23, w27
  40e9e8:	ldr	x0, [sp, #144]
  40e9ec:	mov	w1, #0x20                  	// #32
  40e9f0:	bl	41164c <feof@plt+0xe94c>
  40e9f4:	subs	w21, w21, #0x1
  40e9f8:	b.ne	40e9e8 <feof@plt+0xbce8>  // b.any
  40e9fc:	mov	w27, w23
  40ea00:	ldr	w8, [sp, #204]
  40ea04:	cmn	w8, #0x3
  40ea08:	b.eq	40ea3c <feof@plt+0xbd3c>  // b.none
  40ea0c:	cmn	w8, #0x1
  40ea10:	b.eq	40ea24 <feof@plt+0xbd24>  // b.none
  40ea14:	ldr	x8, [sp, #192]
  40ea18:	ldr	x1, [sp, #240]
  40ea1c:	ldr	x0, [x8]
  40ea20:	bl	413430 <feof@plt+0x10730>
  40ea24:	ldr	x8, [sp, #192]
  40ea28:	mov	w9, #0xfffffffd            	// #-3
  40ea2c:	str	w9, [sp, #204]
  40ea30:	ldr	x1, [sp, #232]
  40ea34:	ldr	x0, [x8]
  40ea38:	bl	413430 <feof@plt+0x10730>
  40ea3c:	cmp	w27, w28
  40ea40:	b.le	40ea4c <feof@plt+0xbd4c>
  40ea44:	mov	w21, w27
  40ea48:	b	40ea68 <feof@plt+0xbd68>
  40ea4c:	ldr	x0, [sp, #144]
  40ea50:	mov	w1, #0x2d                  	// #45
  40ea54:	bl	41164c <feof@plt+0xe94c>
  40ea58:	add	w21, w27, #0x1
  40ea5c:	cmp	w27, w28
  40ea60:	mov	w27, w21
  40ea64:	b.lt	40ea4c <feof@plt+0xbd4c>  // b.tstop
  40ea68:	ldr	w8, [sp, #204]
  40ea6c:	cmn	w8, #0x1
  40ea70:	b.eq	40ea8c <feof@plt+0xbd8c>  // b.none
  40ea74:	ldr	x8, [sp, #192]
  40ea78:	ldr	x1, [sp, #240]
  40ea7c:	ldr	x0, [x8]
  40ea80:	bl	413430 <feof@plt+0x10730>
  40ea84:	mov	w8, #0xffffffff            	// #-1
  40ea88:	str	w8, [sp, #204]
  40ea8c:	mov	x28, x20
  40ea90:	ldr	x8, [x28, #24]!
  40ea94:	cbz	x8, 40e740 <feof@plt+0xba40>
  40ea98:	cmp	w21, w23
  40ea9c:	b.le	40eb44 <feof@plt+0xbe44>
  40eaa0:	ldr	w8, [sp, #204]
  40eaa4:	cmn	w8, #0x1
  40eaa8:	b.eq	40eac4 <feof@plt+0xbdc4>  // b.none
  40eaac:	ldr	x8, [sp, #192]
  40eab0:	ldr	x1, [sp, #240]
  40eab4:	ldr	x0, [x8]
  40eab8:	bl	413430 <feof@plt+0x10730>
  40eabc:	mov	w8, #0xffffffff            	// #-1
  40eac0:	str	w8, [sp, #204]
  40eac4:	ldr	x0, [sp, #144]
  40eac8:	bl	413db4 <feof@plt+0x110b4>
  40eacc:	ldrb	w8, [sp, #250]
  40ead0:	cbz	w8, 40eb40 <feof@plt+0xbe40>
  40ead4:	ldr	w8, [sp, #280]
  40ead8:	cmp	w8, #0x4
  40eadc:	b.lt	40eb08 <feof@plt+0xbe08>  // b.tstop
  40eae0:	mov	w21, wzr
  40eae4:	ldr	x0, [sp, #144]
  40eae8:	mov	w1, #0x20                  	// #32
  40eaec:	bl	41164c <feof@plt+0xe94c>
  40eaf0:	ldr	w8, [sp, #280]
  40eaf4:	add	w21, w21, #0x1
  40eaf8:	sub	w9, w8, #0x3
  40eafc:	cmp	w21, w9
  40eb00:	b.lt	40eae4 <feof@plt+0xbde4>  // b.tstop
  40eb04:	b	40eb0c <feof@plt+0xbe0c>
  40eb08:	mov	w21, wzr
  40eb0c:	ldr	x0, [sp, #144]
  40eb10:	cmp	w21, w8
  40eb14:	b.ge	40eb34 <feof@plt+0xbe34>  // b.tcont
  40eb18:	mov	w1, #0x20                  	// #32
  40eb1c:	bl	41164c <feof@plt+0xe94c>
  40eb20:	ldr	w8, [sp, #280]
  40eb24:	ldr	x0, [sp, #144]
  40eb28:	add	w21, w21, #0x1
  40eb2c:	cmp	w21, w8
  40eb30:	b.lt	40eb18 <feof@plt+0xbe18>  // b.tstop
  40eb34:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eb38:	add	x1, x1, #0x40f
  40eb3c:	bl	413430 <feof@plt+0x10730>
  40eb40:	ldr	w21, [sp, #284]
  40eb44:	cmp	w21, w23
  40eb48:	b.ge	40eb6c <feof@plt+0xbe6c>  // b.tcont
  40eb4c:	sub	w21, w23, w21
  40eb50:	ldr	x0, [sp, #144]
  40eb54:	mov	w1, #0x20                  	// #32
  40eb58:	bl	41164c <feof@plt+0xe94c>
  40eb5c:	subs	w21, w21, #0x1
  40eb60:	b.ne	40eb50 <feof@plt+0xbe50>  // b.any
  40eb64:	mov	w27, w23
  40eb68:	b	40eb70 <feof@plt+0xbe70>
  40eb6c:	mov	w27, w21
  40eb70:	ldr	w8, [sp, #204]
  40eb74:	cmn	w8, #0x2
  40eb78:	b.eq	40ebac <feof@plt+0xbeac>  // b.none
  40eb7c:	cmn	w8, #0x1
  40eb80:	b.eq	40eb94 <feof@plt+0xbe94>  // b.none
  40eb84:	ldr	x8, [sp, #192]
  40eb88:	ldr	x1, [sp, #240]
  40eb8c:	ldr	x0, [x8]
  40eb90:	bl	413430 <feof@plt+0x10730>
  40eb94:	ldr	x8, [sp, #192]
  40eb98:	mov	w9, #0xfffffffe            	// #-2
  40eb9c:	str	w9, [sp, #204]
  40eba0:	ldr	x1, [sp, #224]
  40eba4:	ldr	x0, [x8]
  40eba8:	bl	413430 <feof@plt+0x10730>
  40ebac:	ldr	x0, [sp, #144]
  40ebb0:	ldr	x1, [x20, #16]
  40ebb4:	bl	413430 <feof@plt+0x10730>
  40ebb8:	ldr	w8, [sp, #204]
  40ebbc:	cmn	w8, #0x1
  40ebc0:	b.eq	40e738 <feof@plt+0xba38>  // b.none
  40ebc4:	ldr	x8, [sp, #192]
  40ebc8:	ldr	x1, [sp, #240]
  40ebcc:	ldr	x0, [x8]
  40ebd0:	bl	413430 <feof@plt+0x10730>
  40ebd4:	mov	w8, #0xffffffff            	// #-1
  40ebd8:	str	w8, [sp, #204]
  40ebdc:	b	40e738 <feof@plt+0xba38>
  40ebe0:	mov	w21, w27
  40ebe4:	cmp	w21, #0x1
  40ebe8:	b.lt	40ec1c <feof@plt+0xbf1c>  // b.tstop
  40ebec:	ldr	w8, [sp, #204]
  40ebf0:	cmn	w8, #0x1
  40ebf4:	b.eq	40ec10 <feof@plt+0xbf10>  // b.none
  40ebf8:	ldr	x8, [sp, #192]
  40ebfc:	ldr	x1, [sp, #240]
  40ec00:	ldr	x0, [x8]
  40ec04:	bl	413430 <feof@plt+0x10730>
  40ec08:	mov	w8, #0xffffffff            	// #-1
  40ec0c:	str	w8, [sp, #204]
  40ec10:	ldr	x0, [sp, #144]
  40ec14:	bl	413db4 <feof@plt+0x110b4>
  40ec18:	ldr	w21, [sp, #284]
  40ec1c:	tbz	w21, #31, 40ec3c <feof@plt+0xbf3c>
  40ec20:	sub	w19, w21, #0x1
  40ec24:	ldr	x0, [sp, #144]
  40ec28:	mov	w1, #0x20                  	// #32
  40ec2c:	bl	41164c <feof@plt+0xe94c>
  40ec30:	add	w19, w19, #0x1
  40ec34:	cmn	w19, #0x1
  40ec38:	b.lt	40ec24 <feof@plt+0xbf24>  // b.tstop
  40ec3c:	cbz	x24, 40d7f4 <feof@plt+0xaaf4>
  40ec40:	mov	x20, xzr
  40ec44:	b	40ec50 <feof@plt+0xbf50>
  40ec48:	add	x20, x20, #0x1
  40ec4c:	cbz	x24, 40d7f4 <feof@plt+0xaaf4>
  40ec50:	ldr	w8, [x24, #4]
  40ec54:	cmp	x20, x8
  40ec58:	b.cs	40d7e4 <feof@plt+0xaae4>  // b.hs, b.nlast
  40ec5c:	add	x8, x24, x20, lsl #3
  40ec60:	ldr	x19, [x8, #8]
  40ec64:	cbz	x19, 40ec48 <feof@plt+0xbf48>
  40ec68:	ldr	x0, [x19, #16]
  40ec6c:	bl	402770 <free@plt>
  40ec70:	mov	x0, x19
  40ec74:	bl	402940 <_ZdlPv@plt>
  40ec78:	b	40ec48 <feof@plt+0xbf48>
  40ec7c:	mov	w19, #0x2                   	// #2
  40ec80:	b	40e028 <feof@plt+0xb328>
  40ec84:	ldr	x0, [x23]
  40ec88:	ldr	x1, [sp]
  40ec8c:	bl	4138ac <feof@plt+0x10bac>
  40ec90:	ldr	x0, [sp, #272]
  40ec94:	cbz	x0, 40eca8 <feof@plt+0xbfa8>
  40ec98:	ldr	w8, [x0]
  40ec9c:	tbnz	w8, #31, 40ecc4 <feof@plt+0xbfc4>
  40eca0:	bl	402770 <free@plt>
  40eca4:	str	xzr, [sp, #272]
  40eca8:	ldr	x0, [sp, #264]
  40ecac:	cbz	x0, 40ecd8 <feof@plt+0xbfd8>
  40ecb0:	ldr	w8, [x0]
  40ecb4:	tbnz	w8, #31, 40ecd4 <feof@plt+0xbfd4>
  40ecb8:	bl	402770 <free@plt>
  40ecbc:	str	xzr, [sp, #264]
  40ecc0:	b	40ecd8 <feof@plt+0xbfd8>
  40ecc4:	str	wzr, [x0, #4]
  40ecc8:	ldr	x0, [sp, #264]
  40eccc:	cbnz	x0, 40ecb0 <feof@plt+0xbfb0>
  40ecd0:	b	40ecd8 <feof@plt+0xbfd8>
  40ecd4:	str	wzr, [x0, #4]
  40ecd8:	ldr	x0, [sp, #256]
  40ecdc:	cbz	x0, 40ecf8 <feof@plt+0xbff8>
  40ece0:	ldr	w8, [x0]
  40ece4:	tbnz	w8, #31, 40ecf4 <feof@plt+0xbff4>
  40ece8:	bl	402770 <free@plt>
  40ecec:	str	xzr, [sp, #256]
  40ecf0:	b	40ecf8 <feof@plt+0xbff8>
  40ecf4:	str	wzr, [x0, #4]
  40ecf8:	ldr	w8, [sp, #204]
  40ecfc:	cmn	w8, #0x1
  40ed00:	b.eq	40ed14 <feof@plt+0xc014>  // b.none
  40ed04:	ldr	x8, [sp, #192]
  40ed08:	ldr	x1, [sp, #240]
  40ed0c:	ldr	x0, [x8]
  40ed10:	bl	413430 <feof@plt+0x10730>
  40ed14:	ldp	x20, x19, [sp, #416]
  40ed18:	ldp	x22, x21, [sp, #400]
  40ed1c:	ldp	x24, x23, [sp, #384]
  40ed20:	ldp	x26, x25, [sp, #368]
  40ed24:	ldp	x28, x27, [sp, #352]
  40ed28:	ldp	x29, x30, [sp, #336]
  40ed2c:	add	sp, sp, #0x1b0
  40ed30:	ret
  40ed34:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed38:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed3c:	add	x0, x0, #0x3c7
  40ed40:	add	x2, x2, #0x4d0
  40ed44:	mov	w1, #0x609                 	// #1545
  40ed48:	bl	408b70 <feof@plt+0x5e70>
  40ed4c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed50:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed54:	add	x0, x0, #0x3c7
  40ed58:	add	x2, x2, #0x4ea
  40ed5c:	mov	w1, #0x6bc                 	// #1724
  40ed60:	bl	408b70 <feof@plt+0x5e70>
  40ed64:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed68:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed6c:	add	x0, x0, #0x3c7
  40ed70:	add	x2, x2, #0x45d
  40ed74:	mov	w1, #0x638                 	// #1592
  40ed78:	bl	408b70 <feof@plt+0x5e70>
  40ed7c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed80:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed84:	add	x0, x0, #0x3c7
  40ed88:	add	x2, x2, #0x4d0
  40ed8c:	mov	w1, #0x612                 	// #1554
  40ed90:	bl	408b70 <feof@plt+0x5e70>
  40ed94:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed98:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ed9c:	add	x0, x0, #0x3c7
  40eda0:	add	x2, x2, #0x4be
  40eda4:	mov	w1, #0x215                 	// #533
  40eda8:	bl	408b70 <feof@plt+0x5e70>
  40edac:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40edb0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40edb4:	add	x0, x0, #0x3c7
  40edb8:	add	x2, x2, #0x4e1
  40edbc:	mov	w1, #0x77b                 	// #1915
  40edc0:	bl	408b70 <feof@plt+0x5e70>
  40edc4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40edc8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40edcc:	add	x0, x0, #0x3c7
  40edd0:	add	x2, x2, #0x4e1
  40edd4:	mov	w1, #0x77d                 	// #1917
  40edd8:	bl	408b70 <feof@plt+0x5e70>
  40eddc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ede0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ede4:	add	x0, x0, #0x3c7
  40ede8:	add	x2, x2, #0x4e1
  40edec:	mov	w1, #0x792                 	// #1938
  40edf0:	bl	408b70 <feof@plt+0x5e70>
  40edf4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40edf8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40edfc:	add	x0, x0, #0x3c7
  40ee00:	add	x2, x2, #0x4e1
  40ee04:	mov	w1, #0x794                 	// #1940
  40ee08:	bl	408b70 <feof@plt+0x5e70>
  40ee0c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee10:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee14:	add	x0, x0, #0x3c7
  40ee18:	add	x2, x2, #0x4e1
  40ee1c:	mov	w1, #0x796                 	// #1942
  40ee20:	bl	408b70 <feof@plt+0x5e70>
  40ee24:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee28:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee2c:	add	x0, x0, #0x501
  40ee30:	add	x2, x2, #0x513
  40ee34:	mov	w1, #0x44                  	// #68
  40ee38:	bl	408b70 <feof@plt+0x5e70>
  40ee3c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee40:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee44:	add	x0, x0, #0x501
  40ee48:	add	x2, x2, #0x513
  40ee4c:	mov	w1, #0x45                  	// #69
  40ee50:	bl	408b70 <feof@plt+0x5e70>
  40ee54:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee58:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee5c:	add	x0, x0, #0x501
  40ee60:	add	x2, x2, #0x513
  40ee64:	mov	w1, #0x47                  	// #71
  40ee68:	bl	408b70 <feof@plt+0x5e70>
  40ee6c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee70:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee74:	add	x0, x0, #0x3c7
  40ee78:	add	x2, x2, #0x4f7
  40ee7c:	mov	w1, #0x706                 	// #1798
  40ee80:	bl	408b70 <feof@plt+0x5e70>
  40ee84:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee88:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ee8c:	add	x0, x0, #0x3c7
  40ee90:	add	x2, x2, #0x51b
  40ee94:	mov	w1, #0x732                 	// #1842
  40ee98:	bl	408b70 <feof@plt+0x5e70>
  40ee9c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eea0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eea4:	add	x0, x0, #0x3c7
  40eea8:	add	x2, x2, #0x484
  40eeac:	mov	w1, #0x2be                 	// #702
  40eeb0:	bl	408b70 <feof@plt+0x5e70>
  40eeb4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eeb8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eebc:	add	x0, x0, #0x3c7
  40eec0:	add	x2, x2, #0x484
  40eec4:	mov	w1, #0x2ba                 	// #698
  40eec8:	bl	408b70 <feof@plt+0x5e70>
  40eecc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eed0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eed4:	add	x0, x0, #0x3c7
  40eed8:	add	x2, x2, #0x447
  40eedc:	mov	w1, #0x449                 	// #1097
  40eee0:	bl	408b70 <feof@plt+0x5e70>
  40eee4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eee8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40eeec:	add	x0, x0, #0x3c7
  40eef0:	add	x2, x2, #0x484
  40eef4:	mov	w1, #0x2b9                 	// #697
  40eef8:	bl	408b70 <feof@plt+0x5e70>
  40eefc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ef00:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ef04:	add	x0, x0, #0x3c7
  40ef08:	add	x2, x2, #0x42b
  40ef0c:	mov	w1, #0x408                 	// #1032
  40ef10:	bl	408b70 <feof@plt+0x5e70>
  40ef14:	ldr	x8, [x0]
  40ef18:	ldr	x9, [x1]
  40ef1c:	ldr	w8, [x8]
  40ef20:	ldr	w9, [x9]
  40ef24:	sub	w0, w8, w9
  40ef28:	ret
  40ef2c:	ldr	w8, [x0]
  40ef30:	ldr	w9, [x1]
  40ef34:	sub	x10, x8, x9
  40ef38:	cmp	x10, #0x0
  40ef3c:	mov	w9, #0x1                   	// #1
  40ef40:	cneg	w8, w9, le
  40ef44:	cbz	x10, 40ef50 <feof@plt+0xc250>
  40ef48:	mov	w0, w8
  40ef4c:	ret
  40ef50:	ldr	w8, [x0, #4]
  40ef54:	ldr	w10, [x1, #4]
  40ef58:	sub	x8, x8, x10
  40ef5c:	cmp	x8, #0x0
  40ef60:	cneg	w8, w9, le
  40ef64:	csel	w8, wzr, w8, eq  // eq = none
  40ef68:	mov	w0, w8
  40ef6c:	ret
  40ef70:	stp	x29, x30, [sp, #-64]!
  40ef74:	str	x23, [sp, #16]
  40ef78:	stp	x22, x21, [sp, #32]
  40ef7c:	stp	x20, x19, [sp, #48]
  40ef80:	mov	x29, sp
  40ef84:	mov	w19, w1
  40ef88:	mov	w20, w0
  40ef8c:	adrp	x23, 47d000 <stderr@@GLIBC_2.17+0xa78>
  40ef90:	tbz	w20, #31, 40efc4 <feof@plt+0xc2c4>
  40ef94:	ldr	x0, [x23, #2296]
  40ef98:	mov	w1, w20
  40ef9c:	bl	42e2e0 <feof@plt+0x2b5e0>
  40efa0:	mov	w20, w0
  40efa4:	tbz	w19, #31, 40efc8 <feof@plt+0xc2c8>
  40efa8:	ldr	x0, [x23, #2296]
  40efac:	mov	w1, w19
  40efb0:	bl	42e2e0 <feof@plt+0x2b5e0>
  40efb4:	mov	w19, w0
  40efb8:	cmp	w20, #0x2
  40efbc:	b.cs	40efd0 <feof@plt+0xc2d0>  // b.hs, b.nlast
  40efc0:	b	40f044 <feof@plt+0xc344>
  40efc4:	tbnz	w19, #31, 40efa8 <feof@plt+0xc2a8>
  40efc8:	cmp	w20, #0x2
  40efcc:	b.cc	40f044 <feof@plt+0xc344>  // b.lo, b.ul, b.last
  40efd0:	cmp	w19, #0x1
  40efd4:	b.ls	40f044 <feof@plt+0xc344>  // b.plast
  40efd8:	ldr	x0, [x23, #2296]
  40efdc:	mov	w1, w20
  40efe0:	bl	42e10c <feof@plt+0x2b40c>
  40efe4:	ldr	x8, [x23, #2296]
  40efe8:	mov	x21, x0
  40efec:	mov	w1, w19
  40eff0:	mov	x0, x8
  40eff4:	bl	42e10c <feof@plt+0x2b40c>
  40eff8:	mov	x22, x0
  40effc:	mov	x0, x21
  40f000:	bl	42f334 <feof@plt+0x2c634>
  40f004:	cmp	x21, x22
  40f008:	b.ne	40f04c <feof@plt+0xc34c>  // b.any
  40f00c:	tbz	w0, #0, 40f064 <feof@plt+0xc364>
  40f010:	ldr	x0, [x23, #2296]
  40f014:	mov	x1, x21
  40f018:	mov	w2, w20
  40f01c:	bl	42f34c <feof@plt+0x2c64c>
  40f020:	ldr	x8, [x23, #2296]
  40f024:	mov	w20, w0
  40f028:	mov	x1, x21
  40f02c:	mov	w2, w19
  40f030:	mov	x0, x8
  40f034:	bl	42f34c <feof@plt+0x2c64c>
  40f038:	mov	w19, w0
  40f03c:	tbz	w20, #31, 40efc4 <feof@plt+0xc2c4>
  40f040:	b	40ef94 <feof@plt+0xc294>
  40f044:	cmp	w20, w19
  40f048:	b	40f078 <feof@plt+0xc378>
  40f04c:	tbnz	w0, #0, 40f05c <feof@plt+0xc35c>
  40f050:	mov	x0, x22
  40f054:	bl	42f334 <feof@plt+0x2c634>
  40f058:	tbz	w0, #0, 40f06c <feof@plt+0xc36c>
  40f05c:	mov	w0, wzr
  40f060:	b	40f07c <feof@plt+0xc37c>
  40f064:	mov	w0, #0x1                   	// #1
  40f068:	b	40f07c <feof@plt+0xc37c>
  40f06c:	ldr	x8, [x21, #8]
  40f070:	ldr	x9, [x22, #8]
  40f074:	cmp	x8, x9
  40f078:	cset	w0, eq  // eq = none
  40f07c:	ldp	x20, x19, [sp, #48]
  40f080:	ldp	x22, x21, [sp, #32]
  40f084:	ldr	x23, [sp, #16]
  40f088:	ldp	x29, x30, [sp], #64
  40f08c:	ret
  40f090:	stp	x29, x30, [sp, #-48]!
  40f094:	str	x21, [sp, #16]
  40f098:	stp	x20, x19, [sp, #32]
  40f09c:	mov	x29, sp
  40f0a0:	ldr	w8, [x0, #12]
  40f0a4:	cmp	w8, w1
  40f0a8:	b.ne	40f0bc <feof@plt+0xc3bc>  // b.any
  40f0ac:	ldp	x20, x19, [sp, #32]
  40f0b0:	ldr	x21, [sp, #16]
  40f0b4:	ldp	x29, x30, [sp], #48
  40f0b8:	ret
  40f0bc:	mov	x19, x0
  40f0c0:	mov	w20, w1
  40f0c4:	cmn	w8, #0x1
  40f0c8:	b.eq	40f0dc <feof@plt+0xc3dc>  // b.none
  40f0cc:	ldr	x8, [x19]
  40f0d0:	ldr	x1, [x19, #48]
  40f0d4:	ldr	x0, [x8]
  40f0d8:	bl	413430 <feof@plt+0x10730>
  40f0dc:	add	w8, w20, #0x3
  40f0e0:	cmp	w8, #0x5
  40f0e4:	str	w20, [x19, #12]
  40f0e8:	b.hi	40f17c <feof@plt+0xc47c>  // b.pmore
  40f0ec:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f0f0:	add	x9, x9, #0x3c1
  40f0f4:	adr	x10, 40f0ac <feof@plt+0xc3ac>
  40f0f8:	ldrb	w11, [x9, x8]
  40f0fc:	add	x10, x10, x11, lsl #2
  40f100:	br	x10
  40f104:	ldr	x8, [x19]
  40f108:	ldr	x1, [x19, #40]
  40f10c:	ldr	x0, [x8]
  40f110:	b	40f1a0 <feof@plt+0xc4a0>
  40f114:	ldr	x8, [x19]
  40f118:	ldr	x1, [x19, #16]
  40f11c:	ldr	x0, [x8]
  40f120:	b	40f1a0 <feof@plt+0xc4a0>
  40f124:	ldr	x8, [x19]
  40f128:	ldr	x1, [x19, #32]
  40f12c:	ldr	x0, [x8]
  40f130:	b	40f1a0 <feof@plt+0xc4a0>
  40f134:	ldr	x8, [x19]
  40f138:	ldr	w0, [x19, #8]
  40f13c:	ldr	x20, [x8]
  40f140:	ldrb	w21, [x20, #67]
  40f144:	bl	408c18 <feof@plt+0x5f18>
  40f148:	mov	x19, x0
  40f14c:	bl	4026d0 <strlen@plt>
  40f150:	mov	x2, x0
  40f154:	mov	w0, w21
  40f158:	mov	x1, x19
  40f15c:	bl	40bc1c <feof@plt+0x8f1c>
  40f160:	mov	x1, x0
  40f164:	mov	x0, x20
  40f168:	b	40f1a0 <feof@plt+0xc4a0>
  40f16c:	ldr	x8, [x19]
  40f170:	ldr	x1, [x19, #24]
  40f174:	ldr	x0, [x8]
  40f178:	b	40f1a0 <feof@plt+0xc4a0>
  40f17c:	cmp	w20, #0x2
  40f180:	b.le	40f1b0 <feof@plt+0xc4b0>
  40f184:	ldr	x8, [x19]
  40f188:	tst	w20, #0x1
  40f18c:	mov	w9, #0x10                  	// #16
  40f190:	mov	w10, #0x18                  	// #24
  40f194:	csel	x9, x10, x9, eq  // eq = none
  40f198:	ldr	x0, [x8]
  40f19c:	ldr	x1, [x19, x9]
  40f1a0:	ldp	x20, x19, [sp, #32]
  40f1a4:	ldr	x21, [sp, #16]
  40f1a8:	ldp	x29, x30, [sp], #48
  40f1ac:	b	413430 <feof@plt+0x10730>
  40f1b0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f1b4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f1b8:	add	x0, x0, #0x3c7
  40f1bc:	add	x2, x2, #0x472
  40f1c0:	mov	w1, #0x17f                 	// #383
  40f1c4:	bl	408b70 <feof@plt+0x5e70>
  40f1c8:	stp	x29, x30, [sp, #-16]!
  40f1cc:	mov	x29, sp
  40f1d0:	ldr	x11, [x0, #120]
  40f1d4:	cbz	x11, 40f288 <feof@plt+0xc588>
  40f1d8:	ldr	w10, [x11, #4]
  40f1dc:	cbz	w10, 40f288 <feof@plt+0xc588>
  40f1e0:	mov	x9, xzr
  40f1e4:	add	x8, x11, #0x8
  40f1e8:	add	x11, x11, #0x30
  40f1ec:	b	40f210 <feof@plt+0xc510>
  40f1f0:	ldr	w12, [x8, #12]
  40f1f4:	cmp	w12, w2
  40f1f8:	b.ge	40f29c <feof@plt+0xc59c>  // b.tcont
  40f1fc:	add	x9, x9, #0x1
  40f200:	cmp	x9, x10
  40f204:	csel	x8, x11, xzr, cc  // cc = lo, ul, last
  40f208:	add	x11, x11, #0x28
  40f20c:	b.cs	40f288 <feof@plt+0xc588>  // b.hs, b.nlast
  40f210:	ldr	w12, [x8, #16]
  40f214:	cmp	w12, #0x2
  40f218:	b.eq	40f1fc <feof@plt+0xc4fc>  // b.none
  40f21c:	ldr	w13, [x8]
  40f220:	ldr	w12, [x8, #8]
  40f224:	cmp	w13, w12
  40f228:	b.hi	40f2f0 <feof@plt+0xc5f0>  // b.pmore
  40f22c:	cmp	w13, w1
  40f230:	b.hi	40f1fc <feof@plt+0xc4fc>  // b.pmore
  40f234:	b.ne	40f254 <feof@plt+0xc554>  // b.any
  40f238:	ldr	w13, [x8, #4]
  40f23c:	cmp	w13, w2
  40f240:	b.gt	40f1fc <feof@plt+0xc4fc>
  40f244:	cmp	w12, w1
  40f248:	b.hi	40f29c <feof@plt+0xc59c>  // b.pmore
  40f24c:	b.eq	40f1f0 <feof@plt+0xc4f0>  // b.none
  40f250:	b	40f320 <feof@plt+0xc620>
  40f254:	cmp	w13, w1
  40f258:	b.cs	40f308 <feof@plt+0xc608>  // b.hs, b.nlast
  40f25c:	cmp	w12, w1
  40f260:	b.cc	40f1fc <feof@plt+0xc4fc>  // b.lo, b.ul, b.last
  40f264:	b.hi	40f294 <feof@plt+0xc594>  // b.pmore
  40f268:	cmp	w12, w1
  40f26c:	b.eq	40f1f0 <feof@plt+0xc4f0>  // b.none
  40f270:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f274:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f278:	add	x0, x0, #0x3c7
  40f27c:	add	x2, x2, #0x4af
  40f280:	mov	w1, #0x20b                 	// #523
  40f284:	bl	408b70 <feof@plt+0x5e70>
  40f288:	mov	w0, wzr
  40f28c:	ldp	x29, x30, [sp], #16
  40f290:	ret
  40f294:	cmp	w13, w12
  40f298:	b.cs	40f338 <feof@plt+0xc638>  // b.hs, b.nlast
  40f29c:	str	w9, [x5]
  40f2a0:	strb	wzr, [x5, #4]
  40f2a4:	ldr	w9, [x8, #16]
  40f2a8:	cbnz	w9, 40f2d0 <feof@plt+0xc5d0>
  40f2ac:	ldr	w9, [x8, #20]
  40f2b0:	cmp	w9, w1
  40f2b4:	b.ne	40f2d0 <feof@plt+0xc5d0>  // b.any
  40f2b8:	ldr	w8, [x8, #24]
  40f2bc:	cmp	w8, w2
  40f2c0:	b.ne	40f2d0 <feof@plt+0xc5d0>  // b.any
  40f2c4:	mov	w8, #0x1                   	// #1
  40f2c8:	strb	w8, [x5, #4]
  40f2cc:	b	40f2e4 <feof@plt+0xc5e4>
  40f2d0:	cmp	w2, w3
  40f2d4:	mov	w0, wzr
  40f2d8:	b.lt	40f28c <feof@plt+0xc58c>  // b.tstop
  40f2dc:	cmp	w2, w4
  40f2e0:	b.gt	40f28c <feof@plt+0xc58c>
  40f2e4:	mov	w0, #0x1                   	// #1
  40f2e8:	ldp	x29, x30, [sp], #16
  40f2ec:	ret
  40f2f0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f2f4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f2f8:	add	x0, x0, #0x3c7
  40f2fc:	add	x2, x2, #0x4af
  40f300:	mov	w1, #0x1d8                 	// #472
  40f304:	bl	408b70 <feof@plt+0x5e70>
  40f308:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f30c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f310:	add	x0, x0, #0x3c7
  40f314:	add	x2, x2, #0x4af
  40f318:	mov	w1, #0x1fb                 	// #507
  40f31c:	bl	408b70 <feof@plt+0x5e70>
  40f320:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f324:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f328:	add	x0, x0, #0x3c7
  40f32c:	add	x2, x2, #0x4af
  40f330:	mov	w1, #0x1f3                 	// #499
  40f334:	bl	408b70 <feof@plt+0x5e70>
  40f338:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f33c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f340:	add	x0, x0, #0x3c7
  40f344:	add	x2, x2, #0x4af
  40f348:	mov	w1, #0x207                 	// #519
  40f34c:	bl	408b70 <feof@plt+0x5e70>
  40f350:	ldr	w8, [x0, #4]
  40f354:	ldr	w9, [x1, #4]
  40f358:	sub	x10, x8, x9
  40f35c:	cmp	x10, #0x0
  40f360:	mov	w9, #0x1                   	// #1
  40f364:	cneg	w8, w9, le
  40f368:	cbz	x10, 40f374 <feof@plt+0xc674>
  40f36c:	mov	w0, w8
  40f370:	ret
  40f374:	ldr	w8, [x0]
  40f378:	ldr	w10, [x1]
  40f37c:	sub	x8, x8, x10
  40f380:	cmp	x8, #0x0
  40f384:	cneg	w8, w9, le
  40f388:	csel	w8, wzr, w8, eq  // eq = none
  40f38c:	mov	w0, w8
  40f390:	ret
  40f394:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x5e0>
  40f398:	adrp	x10, 40f000 <feof@plt+0xc300>
  40f39c:	mov	w8, #0x1                   	// #1
  40f3a0:	add	x9, x9, #0xb40
  40f3a4:	add	x10, x10, #0x3b8
  40f3a8:	strb	w8, [x0]
  40f3ac:	stp	xzr, x9, [x0, #8]
  40f3b0:	stp	xzr, x10, [x0, #24]
  40f3b4:	ret
  40f3b8:	cbz	x0, 40f3e4 <feof@plt+0xc6e4>
  40f3bc:	stp	x29, x30, [sp, #-32]!
  40f3c0:	str	x19, [sp, #16]
  40f3c4:	mov	x29, sp
  40f3c8:	mov	x19, x0
  40f3cc:	ldr	x1, [x0, #8]!
  40f3d0:	bl	411120 <feof@plt+0xe420>
  40f3d4:	mov	x0, x19
  40f3d8:	ldr	x19, [sp, #16]
  40f3dc:	ldp	x29, x30, [sp], #32
  40f3e0:	b	402940 <_ZdlPv@plt>
  40f3e4:	ret
  40f3e8:	stp	x29, x30, [sp, #-48]!
  40f3ec:	str	x21, [sp, #16]
  40f3f0:	stp	x20, x19, [sp, #32]
  40f3f4:	mov	x29, sp
  40f3f8:	ldrb	w8, [x0]
  40f3fc:	cbz	w8, 40f414 <feof@plt+0xc714>
  40f400:	ldrb	w8, [x1, #160]
  40f404:	mov	x19, x0
  40f408:	mov	x20, x1
  40f40c:	cbz	w8, 40f424 <feof@plt+0xc724>
  40f410:	strb	wzr, [x19]
  40f414:	ldp	x20, x19, [sp, #32]
  40f418:	ldr	x21, [sp, #16]
  40f41c:	ldp	x29, x30, [sp], #48
  40f420:	ret
  40f424:	ldr	w8, [x20, #120]
  40f428:	cbz	w8, 40f414 <feof@plt+0xc714>
  40f42c:	mov	w21, wzr
  40f430:	b	40f444 <feof@plt+0xc744>
  40f434:	ldr	w8, [x20, #120]
  40f438:	add	w21, w21, #0x1
  40f43c:	cmp	w21, w8
  40f440:	b.cs	40f414 <feof@plt+0xc714>  // b.hs, b.nlast
  40f444:	cmp	w21, #0x1
  40f448:	b.gt	40f458 <feof@plt+0xc758>
  40f44c:	add	x8, x20, w21, sxtw #3
  40f450:	add	x8, x8, #0x80
  40f454:	b	40f464 <feof@plt+0xc764>
  40f458:	ldr	x8, [x20, #152]
  40f45c:	sub	w9, w21, #0x2
  40f460:	add	x8, x8, w9, sxtw #3
  40f464:	ldr	x1, [x8]
  40f468:	mov	x0, x19
  40f46c:	bl	40f47c <feof@plt+0xc77c>
  40f470:	tbnz	w0, #0, 40f434 <feof@plt+0xc734>
  40f474:	strb	wzr, [x19]
  40f478:	b	40f434 <feof@plt+0xc734>
  40f47c:	sub	sp, sp, #0x70
  40f480:	stp	x29, x30, [sp, #64]
  40f484:	stp	x22, x21, [sp, #80]
  40f488:	stp	x20, x19, [sp, #96]
  40f48c:	add	x29, sp, #0x40
  40f490:	ldr	w9, [x1]
  40f494:	mov	x20, x0
  40f498:	add	x8, sp, #0x20
  40f49c:	mov	x19, x1
  40f4a0:	mov	w0, w9
  40f4a4:	bl	4171b0 <feof@plt+0x144b0>
  40f4a8:	ldr	w0, [x19, #4]
  40f4ac:	mov	x8, sp
  40f4b0:	bl	4171b0 <feof@plt+0x144b0>
  40f4b4:	ldr	x1, [sp, #32]
  40f4b8:	ldr	x8, [sp]
  40f4bc:	cmp	x1, x8
  40f4c0:	b.ne	40f520 <feof@plt+0xc820>  // b.any
  40f4c4:	ldr	w8, [sp, #40]
  40f4c8:	ldr	w9, [sp, #8]
  40f4cc:	cmp	w8, w9
  40f4d0:	b.ne	40f520 <feof@plt+0xc820>  // b.any
  40f4d4:	ldr	w8, [sp, #44]
  40f4d8:	cbz	w8, 40f520 <feof@plt+0xc820>
  40f4dc:	ldr	w8, [sp, #12]
  40f4e0:	cbz	w8, 40f520 <feof@plt+0xc820>
  40f4e4:	mov	x0, x20
  40f4e8:	bl	40f5b4 <feof@plt+0xc8b4>
  40f4ec:	ldrb	w8, [x20]
  40f4f0:	cbz	w8, 40f520 <feof@plt+0xc820>
  40f4f4:	ldp	w1, w20, [sp, #40]
  40f4f8:	ldr	w21, [sp, #12]
  40f4fc:	ldp	x22, x19, [x19, #8]
  40f500:	bl	40fd88 <feof@plt+0xd088>
  40f504:	cbz	x0, 40f524 <feof@plt+0xc824>
  40f508:	mov	w1, w20
  40f50c:	mov	w2, w21
  40f510:	mov	x3, x22
  40f514:	mov	w4, w19
  40f518:	bl	40ff68 <feof@plt+0xd268>
  40f51c:	b	40f524 <feof@plt+0xc824>
  40f520:	mov	w0, wzr
  40f524:	ldp	x20, x19, [sp, #96]
  40f528:	ldp	x22, x21, [sp, #80]
  40f52c:	ldp	x29, x30, [sp, #64]
  40f530:	and	w0, w0, #0x1
  40f534:	add	sp, sp, #0x70
  40f538:	ret
  40f53c:	sub	sp, sp, #0x70
  40f540:	stp	x29, x30, [sp, #80]
  40f544:	str	x19, [sp, #96]
  40f548:	add	x29, sp, #0x50
  40f54c:	ldrb	w8, [x0]
  40f550:	cbz	w8, 40f58c <feof@plt+0xc88c>
  40f554:	bl	40f5b4 <feof@plt+0xc8b4>
  40f558:	mov	x19, x0
  40f55c:	add	x0, sp, #0x8
  40f560:	mov	w1, wzr
  40f564:	bl	413a64 <feof@plt+0x10d64>
  40f568:	add	x1, sp, #0x8
  40f56c:	mov	x0, x19
  40f570:	bl	40fbc8 <feof@plt+0xcec8>
  40f574:	tbz	w0, #0, 40f594 <feof@plt+0xc894>
  40f578:	add	x0, sp, #0x8
  40f57c:	bl	4117c0 <feof@plt+0xeac0>
  40f580:	bl	45547c <_obstack_memory_used@@Base+0x254>
  40f584:	mov	x19, x0
  40f588:	b	40f598 <feof@plt+0xc898>
  40f58c:	mov	x19, xzr
  40f590:	b	40f5a0 <feof@plt+0xc8a0>
  40f594:	mov	x19, xzr
  40f598:	add	x0, sp, #0x8
  40f59c:	bl	413b68 <feof@plt+0x10e68>
  40f5a0:	mov	x0, x19
  40f5a4:	ldr	x19, [sp, #96]
  40f5a8:	ldp	x29, x30, [sp, #80]
  40f5ac:	add	sp, sp, #0x70
  40f5b0:	ret
  40f5b4:	stp	x29, x30, [sp, #-64]!
  40f5b8:	stp	x24, x23, [sp, #16]
  40f5bc:	stp	x22, x21, [sp, #32]
  40f5c0:	stp	x20, x19, [sp, #48]
  40f5c4:	mov	x29, sp
  40f5c8:	cbz	x1, 40f6f4 <feof@plt+0xc9f4>
  40f5cc:	add	x19, x0, #0x8
  40f5d0:	mov	x22, x0
  40f5d4:	mov	x0, x19
  40f5d8:	mov	x21, x1
  40f5dc:	bl	411218 <feof@plt+0xe518>
  40f5e0:	ldr	x8, [x22, #8]
  40f5e4:	cbz	x8, 40f5fc <feof@plt+0xc8fc>
  40f5e8:	ldr	x9, [x22, #16]
  40f5ec:	ldr	x0, [x8]
  40f5f0:	mov	x1, x21
  40f5f4:	blr	x9
  40f5f8:	cbz	w0, 40f6ac <feof@plt+0xc9ac>
  40f5fc:	mov	w0, #0x30                  	// #48
  40f600:	bl	402970 <_Znwm@plt>
  40f604:	adrp	x8, 40f000 <feof@plt+0xc300>
  40f608:	adrp	x9, 40f000 <feof@plt+0xc300>
  40f60c:	add	x8, x8, #0xb94
  40f610:	add	x9, x9, #0xb9c
  40f614:	mov	w10, #0xffffffff            	// #-1
  40f618:	mov	x20, x0
  40f61c:	stp	x21, xzr, [x0]
  40f620:	stp	x8, xzr, [x0, #16]
  40f624:	str	x9, [x0, #32]
  40f628:	str	w10, [x0, #40]
  40f62c:	mov	x0, x19
  40f630:	mov	x1, x21
  40f634:	bl	411218 <feof@plt+0xe518>
  40f638:	ldr	x8, [x19]
  40f63c:	cbz	x8, 40f67c <feof@plt+0xc97c>
  40f640:	ldr	x9, [x22, #16]
  40f644:	ldr	x0, [x8]
  40f648:	mov	x1, x21
  40f64c:	blr	x9
  40f650:	ldr	x24, [x22, #8]
  40f654:	mov	w23, w0
  40f658:	cbnz	w0, 40f684 <feof@plt+0xc984>
  40f65c:	cbz	x24, 40f684 <feof@plt+0xc984>
  40f660:	ldr	x8, [x22, #32]
  40f664:	cbz	x8, 40f674 <feof@plt+0xc974>
  40f668:	ldr	x0, [x24, #8]
  40f66c:	blr	x8
  40f670:	ldr	x24, [x19]
  40f674:	str	x20, [x24, #8]
  40f678:	b	40f6dc <feof@plt+0xc9dc>
  40f67c:	mov	w23, wzr
  40f680:	mov	x24, xzr
  40f684:	mov	w0, #0x28                  	// #40
  40f688:	bl	402970 <_Znwm@plt>
  40f68c:	stp	x21, x20, [x0]
  40f690:	cbz	x24, 40f6c0 <feof@plt+0xc9c0>
  40f694:	tbnz	w23, #31, 40f6c8 <feof@plt+0xc9c8>
  40f698:	str	x24, [x0, #24]
  40f69c:	ldr	x8, [x24, #16]
  40f6a0:	str	x8, [x0, #16]
  40f6a4:	str	xzr, [x24, #16]
  40f6a8:	b	40f6d8 <feof@plt+0xc9d8>
  40f6ac:	ldr	x8, [x19]
  40f6b0:	cbz	x8, 40f5fc <feof@plt+0xc8fc>
  40f6b4:	ldr	x20, [x8, #8]
  40f6b8:	cbnz	x20, 40f6dc <feof@plt+0xc9dc>
  40f6bc:	b	40f5fc <feof@plt+0xc8fc>
  40f6c0:	stp	xzr, xzr, [x0, #16]
  40f6c4:	b	40f6d8 <feof@plt+0xc9d8>
  40f6c8:	str	x24, [x0, #16]
  40f6cc:	ldr	x8, [x24, #24]
  40f6d0:	str	x8, [x0, #24]
  40f6d4:	str	xzr, [x24, #24]
  40f6d8:	str	x0, [x19]
  40f6dc:	mov	x0, x20
  40f6e0:	ldp	x20, x19, [sp, #48]
  40f6e4:	ldp	x22, x21, [sp, #32]
  40f6e8:	ldp	x24, x23, [sp, #16]
  40f6ec:	ldp	x29, x30, [sp], #64
  40f6f0:	ret
  40f6f4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f6f8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f6fc:	add	x0, x0, #0x52d
  40f700:	add	x2, x2, #0x54f
  40f704:	mov	w1, #0x149                 	// #329
  40f708:	bl	408b70 <feof@plt+0x5e70>
  40f70c:	sub	sp, sp, #0x70
  40f710:	stp	x29, x30, [sp, #80]
  40f714:	str	x19, [sp, #96]
  40f718:	add	x29, sp, #0x50
  40f71c:	mov	x19, x0
  40f720:	add	x0, sp, #0x8
  40f724:	mov	w1, wzr
  40f728:	bl	413a64 <feof@plt+0x10d64>
  40f72c:	add	x1, sp, #0x8
  40f730:	mov	x0, x19
  40f734:	bl	40fbc8 <feof@plt+0xcec8>
  40f738:	tbz	w0, #0, 40f750 <feof@plt+0xca50>
  40f73c:	add	x0, sp, #0x8
  40f740:	bl	4117c0 <feof@plt+0xeac0>
  40f744:	bl	45547c <_obstack_memory_used@@Base+0x254>
  40f748:	mov	x19, x0
  40f74c:	b	40f754 <feof@plt+0xca54>
  40f750:	mov	x19, xzr
  40f754:	add	x0, sp, #0x8
  40f758:	bl	413b68 <feof@plt+0x10e68>
  40f75c:	mov	x0, x19
  40f760:	ldr	x19, [sp, #96]
  40f764:	ldp	x29, x30, [sp, #80]
  40f768:	add	sp, sp, #0x70
  40f76c:	ret
  40f770:	stp	x29, x30, [sp, #-64]!
  40f774:	str	x23, [sp, #16]
  40f778:	stp	x22, x21, [sp, #32]
  40f77c:	stp	x20, x19, [sp, #48]
  40f780:	mov	x29, sp
  40f784:	cbz	x1, 40f874 <feof@plt+0xcb74>
  40f788:	add	x21, x0, #0x8
  40f78c:	mov	x23, x0
  40f790:	mov	x0, x21
  40f794:	mov	w19, w3
  40f798:	mov	w20, w2
  40f79c:	mov	x22, x1
  40f7a0:	bl	411218 <feof@plt+0xe518>
  40f7a4:	ldr	x8, [x23, #8]
  40f7a8:	cbz	x8, 40f7c0 <feof@plt+0xcac0>
  40f7ac:	ldr	x9, [x23, #16]
  40f7b0:	ldr	x0, [x8]
  40f7b4:	mov	x1, x22
  40f7b8:	blr	x9
  40f7bc:	cbz	w0, 40f7d8 <feof@plt+0xcad8>
  40f7c0:	mov	w0, w19
  40f7c4:	ldp	x20, x19, [sp, #48]
  40f7c8:	ldp	x22, x21, [sp, #32]
  40f7cc:	ldr	x23, [sp, #16]
  40f7d0:	ldp	x29, x30, [sp], #64
  40f7d4:	ret
  40f7d8:	ldr	x8, [x21]
  40f7dc:	cbz	x8, 40f7c0 <feof@plt+0xcac0>
  40f7e0:	ldr	x22, [x8, #8]
  40f7e4:	cbz	x22, 40f7c0 <feof@plt+0xcac0>
  40f7e8:	add	x21, x22, #0x8
  40f7ec:	mov	x0, x21
  40f7f0:	mov	w1, w20
  40f7f4:	bl	4113b4 <feof@plt+0xe6b4>
  40f7f8:	ldr	x8, [x22, #8]
  40f7fc:	cbz	x8, 40f7c0 <feof@plt+0xcac0>
  40f800:	ldr	x9, [x22, #16]
  40f804:	ldr	w0, [x8]
  40f808:	mov	w1, w20
  40f80c:	blr	x9
  40f810:	cbnz	w0, 40f7c0 <feof@plt+0xcac0>
  40f814:	ldr	x8, [x21]
  40f818:	cbz	x8, 40f7c0 <feof@plt+0xcac0>
  40f81c:	ldr	x8, [x8, #8]
  40f820:	cbz	x8, 40f7c0 <feof@plt+0xcac0>
  40f824:	ldr	x10, [x8, #24]
  40f828:	cbz	x10, 40f7c0 <feof@plt+0xcac0>
  40f82c:	ldr	w8, [x10, #4]
  40f830:	cbz	w8, 40f7c0 <feof@plt+0xcac0>
  40f834:	mov	x9, xzr
  40f838:	add	x11, x10, #0x8
  40f83c:	add	x10, x10, #0x10
  40f840:	b	40f85c <feof@plt+0xcb5c>
  40f844:	add	x9, x9, #0x1
  40f848:	cmp	x9, x8
  40f84c:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  40f850:	cmp	x8, x9
  40f854:	add	x10, x10, #0x8
  40f858:	b.eq	40f7c0 <feof@plt+0xcac0>  // b.none
  40f85c:	ldr	w12, [x11]
  40f860:	cmp	w12, w19
  40f864:	b.gt	40f844 <feof@plt+0xcb44>
  40f868:	ldr	w11, [x11, #4]
  40f86c:	add	w19, w11, w19
  40f870:	b	40f844 <feof@plt+0xcb44>
  40f874:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f878:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f87c:	add	x0, x0, #0x52d
  40f880:	add	x2, x2, #0x546
  40f884:	mov	w1, #0x140                 	// #320
  40f888:	bl	408b70 <feof@plt+0x5e70>
  40f88c:	stp	x29, x30, [sp, #-48]!
  40f890:	str	x21, [sp, #16]
  40f894:	stp	x20, x19, [sp, #32]
  40f898:	mov	x29, sp
  40f89c:	cbz	x1, 40f8f4 <feof@plt+0xcbf4>
  40f8a0:	add	x19, x0, #0x8
  40f8a4:	mov	x21, x0
  40f8a8:	mov	x0, x19
  40f8ac:	mov	x20, x1
  40f8b0:	bl	411218 <feof@plt+0xe518>
  40f8b4:	ldr	x8, [x21, #8]
  40f8b8:	cbz	x8, 40f8d0 <feof@plt+0xcbd0>
  40f8bc:	ldr	x9, [x21, #16]
  40f8c0:	ldr	x0, [x8]
  40f8c4:	mov	x1, x20
  40f8c8:	blr	x9
  40f8cc:	cbz	w0, 40f8e4 <feof@plt+0xcbe4>
  40f8d0:	mov	x0, xzr
  40f8d4:	ldp	x20, x19, [sp, #32]
  40f8d8:	ldr	x21, [sp, #16]
  40f8dc:	ldp	x29, x30, [sp], #48
  40f8e0:	ret
  40f8e4:	ldr	x8, [x19]
  40f8e8:	cbz	x8, 40f8d0 <feof@plt+0xcbd0>
  40f8ec:	ldr	x0, [x8, #8]
  40f8f0:	b	40f8d4 <feof@plt+0xcbd4>
  40f8f4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f8f8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40f8fc:	add	x0, x0, #0x52d
  40f900:	add	x2, x2, #0x546
  40f904:	mov	w1, #0x140                 	// #320
  40f908:	bl	408b70 <feof@plt+0x5e70>
  40f90c:	stp	x29, x30, [sp, #-48]!
  40f910:	stp	x22, x21, [sp, #16]
  40f914:	stp	x20, x19, [sp, #32]
  40f918:	mov	x29, sp
  40f91c:	add	x20, x0, #0x8
  40f920:	mov	x22, x0
  40f924:	mov	x0, x20
  40f928:	mov	w19, w2
  40f92c:	mov	w21, w1
  40f930:	bl	4113b4 <feof@plt+0xe6b4>
  40f934:	ldr	x8, [x22, #8]
  40f938:	cbz	x8, 40f950 <feof@plt+0xcc50>
  40f93c:	ldr	x9, [x22, #16]
  40f940:	ldr	w0, [x8]
  40f944:	mov	w1, w21
  40f948:	blr	x9
  40f94c:	cbz	w0, 40f964 <feof@plt+0xcc64>
  40f950:	mov	w0, w19
  40f954:	ldp	x20, x19, [sp, #32]
  40f958:	ldp	x22, x21, [sp, #16]
  40f95c:	ldp	x29, x30, [sp], #48
  40f960:	ret
  40f964:	ldr	x8, [x20]
  40f968:	cbz	x8, 40f950 <feof@plt+0xcc50>
  40f96c:	ldr	x8, [x8, #8]
  40f970:	cbz	x8, 40f950 <feof@plt+0xcc50>
  40f974:	ldr	x10, [x8, #24]
  40f978:	cbz	x10, 40f950 <feof@plt+0xcc50>
  40f97c:	ldr	w8, [x10, #4]
  40f980:	cbz	w8, 40f950 <feof@plt+0xcc50>
  40f984:	mov	x9, xzr
  40f988:	add	x11, x10, #0x8
  40f98c:	add	x10, x10, #0x10
  40f990:	b	40f9ac <feof@plt+0xccac>
  40f994:	add	x9, x9, #0x1
  40f998:	cmp	x9, x8
  40f99c:	csel	x11, x10, xzr, cc  // cc = lo, ul, last
  40f9a0:	cmp	x8, x9
  40f9a4:	add	x10, x10, #0x8
  40f9a8:	b.eq	40f950 <feof@plt+0xcc50>  // b.none
  40f9ac:	ldr	w12, [x11]
  40f9b0:	cmp	w12, w19
  40f9b4:	b.gt	40f994 <feof@plt+0xcc94>
  40f9b8:	ldr	w11, [x11, #4]
  40f9bc:	add	w19, w11, w19
  40f9c0:	b	40f994 <feof@plt+0xcc94>
  40f9c4:	sub	sp, sp, #0x80
  40f9c8:	stp	x29, x30, [sp, #80]
  40f9cc:	str	x21, [sp, #96]
  40f9d0:	stp	x20, x19, [sp, #112]
  40f9d4:	add	x29, sp, #0x50
  40f9d8:	ldrb	w8, [x0]
  40f9dc:	cbz	w8, 40fa70 <feof@plt+0xcd70>
  40f9e0:	mov	x20, x0
  40f9e4:	mov	w19, w1
  40f9e8:	add	x0, sp, #0x8
  40f9ec:	mov	w1, wzr
  40f9f0:	bl	413a64 <feof@plt+0x10d64>
  40f9f4:	ldrb	w8, [x20]
  40f9f8:	cbz	w8, 40fa54 <feof@plt+0xcd54>
  40f9fc:	mov	x8, xzr
  40fa00:	add	x9, x20, #0x8
  40fa04:	and	w19, w19, #0x1
  40fa08:	b	40fa30 <feof@plt+0xcd30>
  40fa0c:	cbz	x8, 40fa54 <feof@plt+0xcd54>
  40fa10:	ldr	x20, [x8, #32]
  40fa14:	mov	x21, x8
  40fa18:	ldr	x0, [x21, #8]
  40fa1c:	add	x1, sp, #0x8
  40fa20:	mov	w2, w19
  40fa24:	bl	41067c <feof@plt+0xd97c>
  40fa28:	add	x9, x21, #0x18
  40fa2c:	mov	x8, x20
  40fa30:	ldr	x9, [x9]
  40fa34:	cbz	x9, 40fa0c <feof@plt+0xcd0c>
  40fa38:	mov	x21, x9
  40fa3c:	ldr	x9, [x9, #16]
  40fa40:	mov	x20, x8
  40fa44:	str	x8, [x21, #32]
  40fa48:	mov	x8, x21
  40fa4c:	cbnz	x9, 40fa38 <feof@plt+0xcd38>
  40fa50:	b	40fa18 <feof@plt+0xcd18>
  40fa54:	add	x0, sp, #0x8
  40fa58:	bl	4117c0 <feof@plt+0xeac0>
  40fa5c:	bl	45547c <_obstack_memory_used@@Base+0x254>
  40fa60:	mov	x19, x0
  40fa64:	add	x0, sp, #0x8
  40fa68:	bl	413b68 <feof@plt+0x10e68>
  40fa6c:	b	40fa74 <feof@plt+0xcd74>
  40fa70:	mov	x19, xzr
  40fa74:	mov	x0, x19
  40fa78:	ldp	x20, x19, [sp, #112]
  40fa7c:	ldr	x21, [sp, #96]
  40fa80:	ldp	x29, x30, [sp, #80]
  40fa84:	add	sp, sp, #0x80
  40fa88:	ret
  40fa8c:	stp	x29, x30, [sp, #-48]!
  40fa90:	stp	x22, x21, [sp, #16]
  40fa94:	stp	x20, x19, [sp, #32]
  40fa98:	mov	x29, sp
  40fa9c:	ldrb	w8, [x0]
  40faa0:	cbz	w8, 40fb04 <feof@plt+0xce04>
  40faa4:	mov	x19, x1
  40faa8:	mov	x8, xzr
  40faac:	add	x9, x0, #0x8
  40fab0:	and	w20, w2, #0x1
  40fab4:	b	40fad0 <feof@plt+0xcdd0>
  40fab8:	ldr	x0, [x22, #8]
  40fabc:	mov	x1, x19
  40fac0:	mov	w2, w20
  40fac4:	bl	41067c <feof@plt+0xd97c>
  40fac8:	add	x9, x22, #0x18
  40facc:	mov	x8, x21
  40fad0:	ldr	x9, [x9]
  40fad4:	cbz	x9, 40faf4 <feof@plt+0xcdf4>
  40fad8:	mov	x22, x9
  40fadc:	ldr	x9, [x9, #16]
  40fae0:	mov	x21, x8
  40fae4:	str	x8, [x22, #32]
  40fae8:	mov	x8, x22
  40faec:	cbnz	x9, 40fad8 <feof@plt+0xcdd8>
  40faf0:	b	40fab8 <feof@plt+0xcdb8>
  40faf4:	cbz	x8, 40fb04 <feof@plt+0xce04>
  40faf8:	ldr	x21, [x8, #32]
  40fafc:	mov	x22, x8
  40fb00:	b	40fab8 <feof@plt+0xcdb8>
  40fb04:	ldp	x20, x19, [sp, #32]
  40fb08:	ldp	x22, x21, [sp, #16]
  40fb0c:	ldp	x29, x30, [sp], #48
  40fb10:	ret
  40fb14:	stp	x29, x30, [sp, #-48]!
  40fb18:	stp	x22, x21, [sp, #16]
  40fb1c:	stp	x20, x19, [sp, #32]
  40fb20:	mov	x29, sp
  40fb24:	mov	w19, w5
  40fb28:	mov	x20, x4
  40fb2c:	mov	w21, w3
  40fb30:	mov	w22, w2
  40fb34:	bl	40fd88 <feof@plt+0xd088>
  40fb38:	cbz	x0, 40fb5c <feof@plt+0xce5c>
  40fb3c:	mov	w1, w22
  40fb40:	mov	w2, w21
  40fb44:	mov	x3, x20
  40fb48:	mov	w4, w19
  40fb4c:	ldp	x20, x19, [sp, #32]
  40fb50:	ldp	x22, x21, [sp, #16]
  40fb54:	ldp	x29, x30, [sp], #48
  40fb58:	b	40ff68 <feof@plt+0xd268>
  40fb5c:	ldp	x20, x19, [sp, #32]
  40fb60:	ldp	x22, x21, [sp, #16]
  40fb64:	ldp	x29, x30, [sp], #48
  40fb68:	ret
  40fb6c:	adrp	x8, 40f000 <feof@plt+0xc300>
  40fb70:	adrp	x9, 40f000 <feof@plt+0xc300>
  40fb74:	add	x8, x8, #0xb94
  40fb78:	add	x9, x9, #0xb9c
  40fb7c:	mov	w10, #0xffffffff            	// #-1
  40fb80:	stp	x1, xzr, [x0]
  40fb84:	stp	x8, xzr, [x0, #16]
  40fb88:	str	x9, [x0, #32]
  40fb8c:	str	w10, [x0, #40]
  40fb90:	ret
  40fb94:	sub	w0, w0, w1
  40fb98:	ret
  40fb9c:	cbz	x0, 40fbc4 <feof@plt+0xcec4>
  40fba0:	stp	x29, x30, [sp, #-32]!
  40fba4:	str	x19, [sp, #16]
  40fba8:	mov	x29, sp
  40fbac:	mov	x19, x0
  40fbb0:	bl	41106c <feof@plt+0xe36c>
  40fbb4:	mov	x0, x19
  40fbb8:	ldr	x19, [sp, #16]
  40fbbc:	ldp	x29, x30, [sp], #32
  40fbc0:	b	402940 <_ZdlPv@plt>
  40fbc4:	ret
  40fbc8:	stp	x29, x30, [sp, #-96]!
  40fbcc:	str	x27, [sp, #16]
  40fbd0:	stp	x26, x25, [sp, #32]
  40fbd4:	stp	x24, x23, [sp, #48]
  40fbd8:	stp	x22, x21, [sp, #64]
  40fbdc:	stp	x20, x19, [sp, #80]
  40fbe0:	mov	x29, sp
  40fbe4:	ldr	w8, [x0, #40]
  40fbe8:	mov	x20, x0
  40fbec:	mov	x19, x1
  40fbf0:	cmn	w8, #0x1
  40fbf4:	b.eq	40fd3c <feof@plt+0xd03c>  // b.none
  40fbf8:	ldr	x0, [x20]
  40fbfc:	bl	417150 <feof@plt+0x14450>
  40fc00:	ldr	w26, [x20, #40]
  40fc04:	mov	w21, w0
  40fc08:	cmp	w26, #0x1
  40fc0c:	b.lt	40fd0c <feof@plt+0xd00c>  // b.tstop
  40fc10:	add	x22, x20, #0x8
  40fc14:	mov	w23, #0x1                   	// #1
  40fc18:	b	40fc28 <feof@plt+0xcf28>
  40fc1c:	cmp	w23, w26
  40fc20:	add	w23, w23, #0x1
  40fc24:	b.eq	40fd0c <feof@plt+0xd00c>  // b.none
  40fc28:	mov	x0, x22
  40fc2c:	mov	w1, w23
  40fc30:	bl	4113b4 <feof@plt+0xe6b4>
  40fc34:	ldr	x8, [x22]
  40fc38:	cbz	x8, 40fc50 <feof@plt+0xcf50>
  40fc3c:	ldr	x9, [x20, #16]
  40fc40:	ldr	w0, [x8]
  40fc44:	mov	w1, w23
  40fc48:	blr	x9
  40fc4c:	cbz	w0, 40fca4 <feof@plt+0xcfa4>
  40fc50:	ldr	x0, [x20]
  40fc54:	mov	w1, w23
  40fc58:	bl	416df0 <feof@plt+0x140f0>
  40fc5c:	cbz	x0, 40fd20 <feof@plt+0xd020>
  40fc60:	mov	x25, x1
  40fc64:	cbz	x1, 40fc8c <feof@plt+0xcf8c>
  40fc68:	mov	x24, x0
  40fc6c:	mov	w27, #0x80000000            	// #-2147483648
  40fc70:	cbz	x27, 40fd70 <feof@plt+0xd070>
  40fc74:	ldrb	w1, [x24], #1
  40fc78:	mov	x0, x19
  40fc7c:	bl	41164c <feof@plt+0xe94c>
  40fc80:	subs	x25, x25, #0x1
  40fc84:	sub	x27, x27, #0x1
  40fc88:	b.ne	40fc70 <feof@plt+0xcf70>  // b.any
  40fc8c:	cmp	w23, w26
  40fc90:	b.ge	40fc1c <feof@plt+0xcf1c>  // b.tcont
  40fc94:	mov	w1, #0xa                   	// #10
  40fc98:	mov	x0, x19
  40fc9c:	bl	41164c <feof@plt+0xe94c>
  40fca0:	b	40fc1c <feof@plt+0xcf1c>
  40fca4:	ldr	x8, [x22]
  40fca8:	cbz	x8, 40fc50 <feof@plt+0xcf50>
  40fcac:	ldr	x24, [x8, #8]
  40fcb0:	cbz	x24, 40fc50 <feof@plt+0xcf50>
  40fcb4:	ldr	x8, [x24, #32]
  40fcb8:	cbz	x8, 40fcf4 <feof@plt+0xcff4>
  40fcbc:	mov	x25, xzr
  40fcc0:	ldr	w9, [x8, #4]
  40fcc4:	cmp	x25, x9
  40fcc8:	b.cs	40fcf4 <feof@plt+0xcff4>  // b.hs, b.nlast
  40fccc:	add	x8, x8, x25, lsl #3
  40fcd0:	ldr	x8, [x8, #8]
  40fcd4:	mov	x0, x19
  40fcd8:	ldr	x1, [x8]
  40fcdc:	bl	413430 <feof@plt+0x10730>
  40fce0:	mov	x0, x19
  40fce4:	bl	413db4 <feof@plt+0x110b4>
  40fce8:	ldr	x8, [x24, #32]
  40fcec:	add	x25, x25, #0x1
  40fcf0:	cbnz	x8, 40fcc0 <feof@plt+0xcfc0>
  40fcf4:	ldr	x1, [x24, #8]
  40fcf8:	mov	x0, x19
  40fcfc:	bl	413430 <feof@plt+0x10730>
  40fd00:	cmp	w23, w26
  40fd04:	b.ge	40fc1c <feof@plt+0xcf1c>  // b.tcont
  40fd08:	b	40fc94 <feof@plt+0xcf94>
  40fd0c:	tbnz	w21, #0, 40fd1c <feof@plt+0xd01c>
  40fd10:	mov	w1, #0xa                   	// #10
  40fd14:	mov	x0, x19
  40fd18:	bl	41164c <feof@plt+0xe94c>
  40fd1c:	mov	w0, #0x1                   	// #1
  40fd20:	ldp	x20, x19, [sp, #80]
  40fd24:	ldp	x22, x21, [sp, #64]
  40fd28:	ldp	x24, x23, [sp, #48]
  40fd2c:	ldp	x26, x25, [sp, #32]
  40fd30:	ldr	x27, [sp, #16]
  40fd34:	ldp	x29, x30, [sp], #96
  40fd38:	ret
  40fd3c:	ldr	x0, [x20]
  40fd40:	str	wzr, [x20, #40]
  40fd44:	mov	w1, #0x1                   	// #1
  40fd48:	bl	416df0 <feof@plt+0x140f0>
  40fd4c:	cbz	x0, 40fbf8 <feof@plt+0xcef8>
  40fd50:	ldr	w8, [x20, #40]
  40fd54:	ldr	x0, [x20]
  40fd58:	add	w9, w8, #0x1
  40fd5c:	add	w1, w8, #0x2
  40fd60:	str	w9, [x20, #40]
  40fd64:	bl	416df0 <feof@plt+0x140f0>
  40fd68:	cbnz	x0, 40fd50 <feof@plt+0xd050>
  40fd6c:	b	40fbf8 <feof@plt+0xcef8>
  40fd70:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40fd74:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40fd78:	add	x0, x0, #0x501
  40fd7c:	add	x2, x2, #0x5bc
  40fd80:	mov	w1, #0x3d                  	// #61
  40fd84:	bl	408b70 <feof@plt+0x5e70>
  40fd88:	stp	x29, x30, [sp, #-80]!
  40fd8c:	str	x25, [sp, #16]
  40fd90:	stp	x24, x23, [sp, #32]
  40fd94:	stp	x22, x21, [sp, #48]
  40fd98:	stp	x20, x19, [sp, #64]
  40fd9c:	mov	x29, sp
  40fda0:	add	x19, x0, #0x8
  40fda4:	mov	x22, x0
  40fda8:	mov	x0, x19
  40fdac:	mov	w21, w1
  40fdb0:	bl	4113b4 <feof@plt+0xe6b4>
  40fdb4:	ldr	x8, [x22, #8]
  40fdb8:	cbz	x8, 40fdd0 <feof@plt+0xd0d0>
  40fdbc:	ldr	x9, [x22, #16]
  40fdc0:	ldr	w0, [x8]
  40fdc4:	mov	w1, w21
  40fdc8:	blr	x9
  40fdcc:	cbz	w0, 40fed0 <feof@plt+0xd1d0>
  40fdd0:	mov	w0, #0x28                  	// #40
  40fdd4:	bl	402970 <_Znwm@plt>
  40fdd8:	mov	x20, x0
  40fddc:	ldr	x0, [x22]
  40fde0:	movi	v0.2d, #0x0
  40fde4:	mov	x24, x20
  40fde8:	mov	w1, w21
  40fdec:	str	w21, [x20]
  40fdf0:	str	q0, [x24, #8]!
  40fdf4:	stur	q0, [x20, #24]
  40fdf8:	bl	416df0 <feof@plt+0x140f0>
  40fdfc:	cbz	x0, 40fe60 <feof@plt+0xd160>
  40fe00:	ldr	w8, [x20, #20]
  40fe04:	mov	x23, x0
  40fe08:	str	w1, [x20, #16]
  40fe0c:	cmp	w8, w1
  40fe10:	b.le	40fe1c <feof@plt+0xd11c>
  40fe14:	ldr	x0, [x24]
  40fe18:	b	40fe3c <feof@plt+0xd13c>
  40fe1c:	ldr	x0, [x20, #8]
  40fe20:	lsl	w8, w1, #1
  40fe24:	add	w25, w8, #0x2
  40fe28:	sxtw	x1, w25
  40fe2c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  40fe30:	ldr	w1, [x20, #16]
  40fe34:	str	x0, [x20, #8]
  40fe38:	str	w25, [x20, #20]
  40fe3c:	sxtw	x2, w1
  40fe40:	mov	x1, x23
  40fe44:	bl	402640 <memcpy@plt>
  40fe48:	ldp	w8, w9, [x20, #16]
  40fe4c:	sxtw	x8, w8
  40fe50:	cmp	w8, w9
  40fe54:	b.ge	40ff50 <feof@plt+0xd250>  // b.tcont
  40fe58:	ldr	x9, [x24]
  40fe5c:	strb	wzr, [x9, x8]
  40fe60:	ldr	x8, [x24]
  40fe64:	cbz	x8, 40feb8 <feof@plt+0xd1b8>
  40fe68:	mov	x0, x19
  40fe6c:	mov	w1, w21
  40fe70:	bl	4113b4 <feof@plt+0xe6b4>
  40fe74:	ldr	x8, [x19]
  40fe78:	cbz	x8, 40fee4 <feof@plt+0xd1e4>
  40fe7c:	ldr	x9, [x22, #16]
  40fe80:	ldr	w0, [x8]
  40fe84:	mov	w1, w21
  40fe88:	blr	x9
  40fe8c:	ldr	x24, [x22, #8]
  40fe90:	mov	w23, w0
  40fe94:	cbnz	w0, 40feec <feof@plt+0xd1ec>
  40fe98:	cbz	x24, 40feec <feof@plt+0xd1ec>
  40fe9c:	ldr	x8, [x22, #32]
  40fea0:	cbz	x8, 40feb0 <feof@plt+0xd1b0>
  40fea4:	ldr	x0, [x24, #8]
  40fea8:	blr	x8
  40feac:	ldr	x24, [x19]
  40feb0:	str	x20, [x24, #8]
  40feb4:	b	40ff34 <feof@plt+0xd234>
  40feb8:	mov	x0, x20
  40febc:	bl	41106c <feof@plt+0xe36c>
  40fec0:	mov	x0, x20
  40fec4:	bl	402940 <_ZdlPv@plt>
  40fec8:	mov	x20, xzr
  40fecc:	b	40ff34 <feof@plt+0xd234>
  40fed0:	ldr	x8, [x19]
  40fed4:	cbz	x8, 40fdd0 <feof@plt+0xd0d0>
  40fed8:	ldr	x20, [x8, #8]
  40fedc:	cbnz	x20, 40ff34 <feof@plt+0xd234>
  40fee0:	b	40fdd0 <feof@plt+0xd0d0>
  40fee4:	mov	w23, wzr
  40fee8:	mov	x24, xzr
  40feec:	mov	w0, #0x28                  	// #40
  40fef0:	bl	402970 <_Znwm@plt>
  40fef4:	str	w21, [x0]
  40fef8:	str	x20, [x0, #8]
  40fefc:	cbz	x24, 40ff18 <feof@plt+0xd218>
  40ff00:	tbnz	w23, #31, 40ff20 <feof@plt+0xd220>
  40ff04:	str	x24, [x0, #24]
  40ff08:	ldr	x8, [x24, #16]
  40ff0c:	str	x8, [x0, #16]
  40ff10:	str	xzr, [x24, #16]
  40ff14:	b	40ff30 <feof@plt+0xd230>
  40ff18:	stp	xzr, xzr, [x0, #16]
  40ff1c:	b	40ff30 <feof@plt+0xd230>
  40ff20:	str	x24, [x0, #16]
  40ff24:	ldr	x8, [x24, #24]
  40ff28:	str	x8, [x0, #24]
  40ff2c:	str	xzr, [x24, #24]
  40ff30:	str	x0, [x19]
  40ff34:	mov	x0, x20
  40ff38:	ldp	x20, x19, [sp, #64]
  40ff3c:	ldp	x22, x21, [sp, #48]
  40ff40:	ldp	x24, x23, [sp, #32]
  40ff44:	ldr	x25, [sp, #16]
  40ff48:	ldp	x29, x30, [sp], #80
  40ff4c:	ret
  40ff50:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ff54:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  40ff58:	add	x0, x0, #0x52d
  40ff5c:	add	x2, x2, #0x51b
  40ff60:	mov	w1, #0x36b                 	// #875
  40ff64:	bl	408b70 <feof@plt+0x5e70>
  40ff68:	stp	x29, x30, [sp, #-96]!
  40ff6c:	str	x27, [sp, #16]
  40ff70:	stp	x26, x25, [sp, #32]
  40ff74:	stp	x24, x23, [sp, #48]
  40ff78:	stp	x22, x21, [sp, #64]
  40ff7c:	stp	x20, x19, [sp, #80]
  40ff80:	mov	x29, sp
  40ff84:	mov	w21, w4
  40ff88:	mov	x23, x3
  40ff8c:	mov	w22, w2
  40ff90:	mov	w20, w1
  40ff94:	cmp	w4, #0x2
  40ff98:	mov	x19, x0
  40ff9c:	b.lt	410020 <feof@plt+0xd320>  // b.tstop
  40ffa0:	sxtw	x8, w21
  40ffa4:	sub	x24, x8, #0x1
  40ffa8:	ldrb	w8, [x23, x24]
  40ffac:	cmp	w8, #0xa
  40ffb0:	b.ne	410020 <feof@plt+0xd320>  // b.any
  40ffb4:	mov	w0, #0x10                  	// #16
  40ffb8:	bl	402970 <_Znwm@plt>
  40ffbc:	mov	x20, x0
  40ffc0:	mov	x0, x23
  40ffc4:	mov	x1, x24
  40ffc8:	bl	4554f8 <_obstack_memory_used@@Base+0x2d0>
  40ffcc:	str	x0, [x20]
  40ffd0:	str	w24, [x20, #8]
  40ffd4:	ldr	x23, [x19, #32]
  40ffd8:	cbz	x23, 410118 <feof@plt+0xd418>
  40ffdc:	ldp	w8, w9, [x23]
  40ffe0:	and	w0, w8, #0x7fffffff
  40ffe4:	cmp	w0, w9
  40ffe8:	b.ne	4102f8 <feof@plt+0xd5f8>  // b.any
  40ffec:	tbnz	w8, #31, 410200 <feof@plt+0xd500>
  40fff0:	add	w1, w0, #0x1
  40fff4:	bl	415344 <feof@plt+0x12644>
  40fff8:	ldr	x8, [x19, #32]
  40fffc:	mov	w9, w0
  410000:	lsl	x9, x9, #3
  410004:	mov	w21, w0
  410008:	add	x1, x9, #0x8
  41000c:	mov	w22, wzr
  410010:	cbz	x8, 41044c <feof@plt+0xd74c>
  410014:	ldr	w25, [x8, #4]
  410018:	mov	w24, wzr
  41001c:	b	410230 <feof@plt+0xd530>
  410020:	ldr	x10, [x19, #24]
  410024:	cbz	x10, 4100b4 <feof@plt+0xd3b4>
  410028:	ldr	w8, [x10, #4]
  41002c:	cbz	w8, 4100b4 <feof@plt+0xd3b4>
  410030:	add	x9, x10, #0x8
  410034:	mov	x11, xzr
  410038:	add	x12, x10, #0x10
  41003c:	mov	x13, x9
  410040:	b	41005c <feof@plt+0xd35c>
  410044:	add	x11, x11, #0x1
  410048:	cmp	x11, x8
  41004c:	csel	x13, x12, xzr, cc  // cc = lo, ul, last
  410050:	cmp	x8, x11
  410054:	add	x12, x12, #0x8
  410058:	b.eq	410074 <feof@plt+0xd374>  // b.none
  41005c:	ldr	w14, [x13]
  410060:	cmp	w14, w20
  410064:	b.gt	410044 <feof@plt+0xd344>
  410068:	ldr	w13, [x13, #4]
  41006c:	add	w20, w13, w20
  410070:	b	410044 <feof@plt+0xd344>
  410074:	cbz	w8, 4100b4 <feof@plt+0xd3b4>
  410078:	mov	x11, xzr
  41007c:	add	x10, x10, #0x10
  410080:	b	41009c <feof@plt+0xd39c>
  410084:	add	x11, x11, #0x1
  410088:	cmp	x11, x8
  41008c:	csel	x9, x10, xzr, cc  // cc = lo, ul, last
  410090:	cmp	x8, x11
  410094:	add	x10, x10, #0x8
  410098:	b.eq	4100b4 <feof@plt+0xd3b4>  // b.none
  41009c:	ldr	w12, [x9]
  4100a0:	cmp	w12, w22
  4100a4:	b.gt	410084 <feof@plt+0xd384>
  4100a8:	ldr	w9, [x9, #4]
  4100ac:	add	w22, w9, w22
  4100b0:	b	410084 <feof@plt+0xd384>
  4100b4:	cmp	w20, #0x0
  4100b8:	b.le	410464 <feof@plt+0xd764>
  4100bc:	cmp	w22, #0x0
  4100c0:	b.le	41047c <feof@plt+0xd77c>
  4100c4:	cmp	w20, w22
  4100c8:	b.le	4100d4 <feof@plt+0xd3d4>
  4100cc:	mov	w0, wzr
  4100d0:	b	410430 <feof@plt+0xd730>
  4100d4:	ldr	w8, [x19, #16]
  4100d8:	mov	w0, wzr
  4100dc:	add	w9, w8, #0x1
  4100e0:	cmp	w20, w9
  4100e4:	b.gt	410430 <feof@plt+0xd730>
  4100e8:	cmp	w22, w9
  4100ec:	b.gt	410430 <feof@plt+0xd730>
  4100f0:	sub	w24, w20, #0x1
  4100f4:	sub	w26, w22, #0x1
  4100f8:	ldr	w9, [x19, #20]
  4100fc:	sub	w10, w24, w26
  410100:	add	w10, w10, w21
  410104:	add	w25, w10, w8
  410108:	cmp	w9, w25
  41010c:	b.le	410128 <feof@plt+0xd428>
  410110:	ldr	x0, [x19, #8]
  410114:	b	410148 <feof@plt+0xd448>
  410118:	mov	w22, wzr
  41011c:	mov	w24, wzr
  410120:	mov	w21, #0x4                   	// #4
  410124:	b	41021c <feof@plt+0xd51c>
  410128:	ldr	x0, [x19, #8]
  41012c:	lsl	w8, w25, #1
  410130:	add	w27, w8, #0x2
  410134:	sxtw	x1, w27
  410138:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41013c:	ldr	w8, [x19, #16]
  410140:	str	x0, [x19, #8]
  410144:	str	w27, [x19, #20]
  410148:	cmp	w26, w8
  41014c:	b.gt	410494 <feof@plt+0xd794>
  410150:	add	x1, x0, w26, sxtw
  410154:	add	x8, x0, w8, sxtw
  410158:	sxtw	x26, w24
  41015c:	sub	x2, x8, x1
  410160:	add	x8, x0, x26
  410164:	sxtw	x24, w21
  410168:	add	x0, x8, x24
  41016c:	bl	402a70 <memmove@plt>
  410170:	ldr	x8, [x19, #8]
  410174:	mov	x1, x23
  410178:	mov	x2, x24
  41017c:	add	x0, x8, x26
  410180:	bl	402640 <memcpy@plt>
  410184:	ldr	w8, [x19, #20]
  410188:	str	w25, [x19, #16]
  41018c:	cmp	w25, w8
  410190:	b.ge	4104ac <feof@plt+0xd7ac>  // b.tcont
  410194:	ldr	x8, [x19, #8]
  410198:	strb	wzr, [x8, w25, sxtw]
  41019c:	ldr	x24, [x19, #24]
  4101a0:	add	w8, w20, w21
  4101a4:	sub	w22, w8, w22
  4101a8:	cbz	x24, 4101f0 <feof@plt+0xd4f0>
  4101ac:	ldp	w8, w9, [x24]
  4101b0:	and	w0, w8, #0x7fffffff
  4101b4:	cmp	w0, w9
  4101b8:	b.ne	41040c <feof@plt+0xd70c>  // b.any
  4101bc:	tbnz	w8, #31, 410314 <feof@plt+0xd614>
  4101c0:	add	w1, w0, #0x1
  4101c4:	bl	415344 <feof@plt+0x12644>
  4101c8:	ldr	x8, [x19, #24]
  4101cc:	mov	w9, w0
  4101d0:	lsl	x9, x9, #3
  4101d4:	mov	w21, w0
  4101d8:	add	x1, x9, #0x8
  4101dc:	mov	w23, wzr
  4101e0:	cbz	x8, 410458 <feof@plt+0xd758>
  4101e4:	ldr	w26, [x8, #4]
  4101e8:	mov	w25, wzr
  4101ec:	b	410344 <feof@plt+0xd644>
  4101f0:	mov	w23, wzr
  4101f4:	mov	w25, wzr
  4101f8:	mov	w21, #0x4                   	// #4
  4101fc:	b	410330 <feof@plt+0xd630>
  410200:	str	xzr, [x19, #32]
  410204:	ldr	w22, [x23, #4]
  410208:	mov	w8, #0x4                   	// #4
  41020c:	mov	w24, #0x1                   	// #1
  410210:	add	w9, w22, #0x1
  410214:	cmp	w9, #0x4
  410218:	csinc	w21, w8, w22, ls  // ls = plast
  41021c:	mov	w9, w21
  410220:	lsl	x9, x9, #3
  410224:	mov	x8, xzr
  410228:	mov	w25, wzr
  41022c:	add	x1, x9, #0x8
  410230:	mov	x0, x8
  410234:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  410238:	and	w8, w21, #0x7fffffff
  41023c:	str	x0, [x19, #32]
  410240:	stp	w8, w25, [x0]
  410244:	cbz	w24, 4102f8 <feof@plt+0xd5f8>
  410248:	ldr	x11, [x19, #32]
  41024c:	cbz	w22, 4102f4 <feof@plt+0xd5f4>
  410250:	sub	w12, w22, #0x1
  410254:	add	x8, x23, #0x8
  410258:	cmp	w12, #0x3
  41025c:	add	x9, x11, #0x8
  410260:	b.cs	41026c <feof@plt+0xd56c>  // b.hs, b.nlast
  410264:	mov	w10, w22
  410268:	b	4102e0 <feof@plt+0xd5e0>
  41026c:	lsl	x10, x12, #3
  410270:	add	x13, x23, x10
  410274:	add	x13, x13, #0x10
  410278:	cmp	x9, x13
  41027c:	b.cs	410294 <feof@plt+0xd594>  // b.hs, b.nlast
  410280:	add	x10, x11, x10
  410284:	add	x10, x10, #0x10
  410288:	cmp	x8, x10
  41028c:	mov	w10, w22
  410290:	b.cc	4102e0 <feof@plt+0xd5e0>  // b.lo, b.ul, b.last
  410294:	add	x12, x12, #0x1
  410298:	and	x13, x12, #0x1fffffffc
  41029c:	lsl	x8, x13, #3
  4102a0:	add	x14, x11, #0x18
  4102a4:	add	x9, x23, x8
  4102a8:	add	x11, x11, x8
  4102ac:	sub	w10, w22, w13
  4102b0:	add	x8, x9, #0x8
  4102b4:	add	x9, x11, #0x8
  4102b8:	add	x11, x23, #0x18
  4102bc:	mov	x15, x13
  4102c0:	ldp	q0, q1, [x11, #-16]
  4102c4:	subs	x15, x15, #0x4
  4102c8:	add	x11, x11, #0x20
  4102cc:	stp	q0, q1, [x14, #-16]
  4102d0:	add	x14, x14, #0x20
  4102d4:	b.ne	4102c0 <feof@plt+0xd5c0>  // b.any
  4102d8:	cmp	x12, x13
  4102dc:	b.eq	4102f0 <feof@plt+0xd5f0>  // b.none
  4102e0:	ldr	x11, [x8], #8
  4102e4:	subs	w10, w10, #0x1
  4102e8:	str	x11, [x9], #8
  4102ec:	b.ne	4102e0 <feof@plt+0xd5e0>  // b.any
  4102f0:	ldr	x11, [x19, #32]
  4102f4:	str	w22, [x11, #4]
  4102f8:	ldr	x8, [x19, #32]
  4102fc:	ldr	w9, [x8, #4]
  410300:	add	w10, w9, #0x1
  410304:	add	x9, x8, x9, lsl #3
  410308:	str	w10, [x8, #4]
  41030c:	str	x20, [x9, #8]
  410310:	b	41042c <feof@plt+0xd72c>
  410314:	str	xzr, [x19, #24]
  410318:	ldr	w23, [x24, #4]
  41031c:	mov	w8, #0x4                   	// #4
  410320:	mov	w25, #0x1                   	// #1
  410324:	add	w9, w23, #0x1
  410328:	cmp	w9, #0x4
  41032c:	csinc	w21, w8, w23, ls  // ls = plast
  410330:	mov	w9, w21
  410334:	lsl	x9, x9, #3
  410338:	mov	x8, xzr
  41033c:	mov	w26, wzr
  410340:	add	x1, x9, #0x8
  410344:	mov	x0, x8
  410348:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41034c:	and	w8, w21, #0x7fffffff
  410350:	str	x0, [x19, #24]
  410354:	stp	w8, w26, [x0]
  410358:	cbz	w25, 41040c <feof@plt+0xd70c>
  41035c:	ldr	x11, [x19, #24]
  410360:	cbz	w23, 410408 <feof@plt+0xd708>
  410364:	sub	w12, w23, #0x1
  410368:	add	x8, x24, #0x8
  41036c:	cmp	w12, #0x3
  410370:	add	x9, x11, #0x8
  410374:	b.cs	410380 <feof@plt+0xd680>  // b.hs, b.nlast
  410378:	mov	w10, w23
  41037c:	b	4103f4 <feof@plt+0xd6f4>
  410380:	lsl	x10, x12, #3
  410384:	add	x13, x24, x10
  410388:	add	x13, x13, #0x10
  41038c:	cmp	x9, x13
  410390:	b.cs	4103a8 <feof@plt+0xd6a8>  // b.hs, b.nlast
  410394:	add	x10, x11, x10
  410398:	add	x10, x10, #0x10
  41039c:	cmp	x8, x10
  4103a0:	mov	w10, w23
  4103a4:	b.cc	4103f4 <feof@plt+0xd6f4>  // b.lo, b.ul, b.last
  4103a8:	add	x12, x12, #0x1
  4103ac:	and	x13, x12, #0x1fffffffc
  4103b0:	lsl	x8, x13, #3
  4103b4:	add	x14, x11, #0x18
  4103b8:	add	x9, x24, x8
  4103bc:	add	x11, x11, x8
  4103c0:	sub	w10, w23, w13
  4103c4:	add	x8, x9, #0x8
  4103c8:	add	x9, x11, #0x8
  4103cc:	add	x11, x24, #0x18
  4103d0:	mov	x15, x13
  4103d4:	ldp	q0, q1, [x11, #-16]
  4103d8:	subs	x15, x15, #0x4
  4103dc:	add	x11, x11, #0x20
  4103e0:	stp	q0, q1, [x14, #-16]
  4103e4:	add	x14, x14, #0x20
  4103e8:	b.ne	4103d4 <feof@plt+0xd6d4>  // b.any
  4103ec:	cmp	x12, x13
  4103f0:	b.eq	410404 <feof@plt+0xd704>  // b.none
  4103f4:	ldr	x11, [x8], #8
  4103f8:	subs	w10, w10, #0x1
  4103fc:	str	x11, [x9], #8
  410400:	b.ne	4103f4 <feof@plt+0xd6f4>  // b.any
  410404:	ldr	x11, [x19, #24]
  410408:	str	w23, [x11, #4]
  41040c:	ldr	x8, [x19, #24]
  410410:	mov	w10, w20
  410414:	bfi	x10, x22, #32, #32
  410418:	ldr	w9, [x8, #4]
  41041c:	add	w11, w9, #0x1
  410420:	add	x9, x8, x9, lsl #3
  410424:	str	w11, [x8, #4]
  410428:	str	x10, [x9, #8]
  41042c:	mov	w0, #0x1                   	// #1
  410430:	ldp	x20, x19, [sp, #80]
  410434:	ldp	x22, x21, [sp, #64]
  410438:	ldp	x24, x23, [sp, #48]
  41043c:	ldp	x26, x25, [sp, #32]
  410440:	ldr	x27, [sp, #16]
  410444:	ldp	x29, x30, [sp], #96
  410448:	ret
  41044c:	mov	w24, wzr
  410450:	mov	w25, wzr
  410454:	b	410230 <feof@plt+0xd530>
  410458:	mov	w25, wzr
  41045c:	mov	w26, wzr
  410460:	b	410344 <feof@plt+0xd644>
  410464:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410468:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41046c:	add	x0, x0, #0x52d
  410470:	add	x2, x2, #0x5b0
  410474:	mov	w1, #0x2fa                 	// #762
  410478:	bl	408b70 <feof@plt+0x5e70>
  41047c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410480:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410484:	add	x0, x0, #0x52d
  410488:	add	x2, x2, #0x5b0
  41048c:	mov	w1, #0x2fb                 	// #763
  410490:	bl	408b70 <feof@plt+0x5e70>
  410494:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410498:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41049c:	add	x0, x0, #0x52d
  4104a0:	add	x2, x2, #0x5b0
  4104a4:	mov	w1, #0x30b                 	// #779
  4104a8:	bl	408b70 <feof@plt+0x5e70>
  4104ac:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4104b0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4104b4:	add	x0, x0, #0x52d
  4104b8:	add	x2, x2, #0x51b
  4104bc:	mov	w1, #0x36b                 	// #875
  4104c0:	bl	408b70 <feof@plt+0x5e70>
  4104c4:	stp	x29, x30, [sp, #-48]!
  4104c8:	str	x21, [sp, #16]
  4104cc:	stp	x20, x19, [sp, #32]
  4104d0:	mov	x29, sp
  4104d4:	add	x19, x0, #0x8
  4104d8:	mov	x21, x0
  4104dc:	mov	x0, x19
  4104e0:	mov	w20, w1
  4104e4:	bl	4113b4 <feof@plt+0xe6b4>
  4104e8:	ldr	x8, [x21, #8]
  4104ec:	cbz	x8, 410504 <feof@plt+0xd804>
  4104f0:	ldr	x9, [x21, #16]
  4104f4:	ldr	w0, [x8]
  4104f8:	mov	w1, w20
  4104fc:	blr	x9
  410500:	cbz	w0, 410518 <feof@plt+0xd818>
  410504:	mov	x0, xzr
  410508:	ldp	x20, x19, [sp, #32]
  41050c:	ldr	x21, [sp, #16]
  410510:	ldp	x29, x30, [sp], #48
  410514:	ret
  410518:	ldr	x8, [x19]
  41051c:	cbz	x8, 410504 <feof@plt+0xd804>
  410520:	ldr	x0, [x8, #8]
  410524:	b	410508 <feof@plt+0xd808>
  410528:	ldr	x9, [x0, #24]
  41052c:	mov	w0, w1
  410530:	cbz	x9, 410578 <feof@plt+0xd878>
  410534:	ldr	w8, [x9, #4]
  410538:	cbz	w8, 410578 <feof@plt+0xd878>
  41053c:	add	x11, x9, #0x8
  410540:	add	x9, x9, #0x10
  410544:	mov	w10, #0x1                   	// #1
  410548:	b	410560 <feof@plt+0xd860>
  41054c:	cmp	x10, x8
  410550:	csel	x11, x9, xzr, cc  // cc = lo, ul, last
  410554:	add	x9, x9, #0x8
  410558:	add	x10, x10, #0x1
  41055c:	b.cs	410578 <feof@plt+0xd878>  // b.hs, b.nlast
  410560:	ldr	w12, [x11]
  410564:	cmp	w12, w0
  410568:	b.gt	41054c <feof@plt+0xd84c>
  41056c:	ldr	w11, [x11, #4]
  410570:	add	w0, w11, w0
  410574:	b	41054c <feof@plt+0xd84c>
  410578:	ret
  41057c:	stp	x29, x30, [sp, #-32]!
  410580:	stp	x20, x19, [sp, #16]
  410584:	mov	x29, sp
  410588:	cbz	x1, 4105f4 <feof@plt+0xd8f4>
  41058c:	ldr	w8, [x0, #40]
  410590:	mov	x20, x1
  410594:	mov	x19, x0
  410598:	cmn	w8, #0x1
  41059c:	b.eq	4105c0 <feof@plt+0xd8c0>  // b.none
  4105a0:	ldr	x0, [x19]
  4105a4:	bl	417150 <feof@plt+0x14450>
  4105a8:	and	w8, w0, #0x1
  4105ac:	strb	w8, [x20]
  4105b0:	ldr	w0, [x19, #40]
  4105b4:	ldp	x20, x19, [sp, #16]
  4105b8:	ldp	x29, x30, [sp], #32
  4105bc:	ret
  4105c0:	ldr	x0, [x19]
  4105c4:	str	wzr, [x19, #40]
  4105c8:	mov	w1, #0x1                   	// #1
  4105cc:	bl	416df0 <feof@plt+0x140f0>
  4105d0:	cbz	x0, 4105a0 <feof@plt+0xd8a0>
  4105d4:	ldr	w8, [x19, #40]
  4105d8:	ldr	x0, [x19]
  4105dc:	add	w9, w8, #0x1
  4105e0:	add	w1, w8, #0x2
  4105e4:	str	w9, [x19, #40]
  4105e8:	bl	416df0 <feof@plt+0x140f0>
  4105ec:	cbnz	x0, 4105d4 <feof@plt+0xd8d4>
  4105f0:	b	4105a0 <feof@plt+0xd8a0>
  4105f4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4105f8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4105fc:	add	x0, x0, #0x52d
  410600:	add	x2, x2, #0x5a2
  410604:	mov	w1, #0x296                 	// #662
  410608:	bl	408b70 <feof@plt+0x5e70>
  41060c:	stp	x29, x30, [sp, #-48]!
  410610:	str	x21, [sp, #16]
  410614:	stp	x20, x19, [sp, #32]
  410618:	mov	x29, sp
  41061c:	ldr	x8, [x0, #32]
  410620:	mov	x19, x0
  410624:	mov	x20, x1
  410628:	cbz	x8, 410664 <feof@plt+0xd964>
  41062c:	mov	x21, xzr
  410630:	ldr	w9, [x8, #4]
  410634:	cmp	x21, x9
  410638:	b.cs	410664 <feof@plt+0xd964>  // b.hs, b.nlast
  41063c:	add	x8, x8, x21, lsl #3
  410640:	ldr	x8, [x8, #8]
  410644:	mov	x0, x20
  410648:	ldr	x1, [x8]
  41064c:	bl	413430 <feof@plt+0x10730>
  410650:	mov	x0, x20
  410654:	bl	413db4 <feof@plt+0x110b4>
  410658:	ldr	x8, [x19, #32]
  41065c:	add	x21, x21, #0x1
  410660:	cbnz	x8, 410630 <feof@plt+0xd930>
  410664:	ldr	x1, [x19, #8]
  410668:	mov	x0, x20
  41066c:	ldp	x20, x19, [sp, #32]
  410670:	ldr	x21, [sp, #16]
  410674:	ldp	x29, x30, [sp], #48
  410678:	b	413430 <feof@plt+0x10730>
  41067c:	stp	x29, x30, [sp, #-96]!
  410680:	stp	x28, x27, [sp, #16]
  410684:	stp	x26, x25, [sp, #32]
  410688:	stp	x24, x23, [sp, #48]
  41068c:	stp	x22, x21, [sp, #64]
  410690:	stp	x20, x19, [sp, #80]
  410694:	mov	x29, sp
  410698:	mov	x19, x1
  41069c:	mov	x20, x0
  4106a0:	tbz	w2, #0, 410700 <feof@plt+0xda00>
  4106a4:	ldrb	w0, [x19, #67]
  4106a8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4106ac:	add	x1, x1, #0x35d
  4106b0:	mov	w2, #0xd                   	// #13
  4106b4:	bl	40bc1c <feof@plt+0x8f1c>
  4106b8:	mov	x1, x0
  4106bc:	mov	x0, x19
  4106c0:	bl	413430 <feof@plt+0x10730>
  4106c4:	ldr	x2, [x20]
  4106c8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4106cc:	add	x1, x1, #0x562
  4106d0:	mov	x0, x19
  4106d4:	bl	413c68 <feof@plt+0x10f68>
  4106d8:	ldr	x2, [x20]
  4106dc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4106e0:	add	x1, x1, #0x56a
  4106e4:	mov	x0, x19
  4106e8:	bl	413c68 <feof@plt+0x10f68>
  4106ec:	ldrb	w0, [x19, #67]
  4106f0:	bl	40bca0 <feof@plt+0x8fa0>
  4106f4:	mov	x1, x0
  4106f8:	mov	x0, x19
  4106fc:	bl	413430 <feof@plt+0x10730>
  410700:	mov	x21, x20
  410704:	ldr	x8, [x21, #8]!
  410708:	cbz	x8, 410720 <feof@plt+0xda20>
  41070c:	mov	x9, x8
  410710:	ldr	x8, [x8, #16]
  410714:	cbnz	x8, 41070c <feof@plt+0xda0c>
  410718:	ldr	x28, [x9, #8]
  41071c:	b	410724 <feof@plt+0xda24>
  410720:	mov	x28, xzr
  410724:	ldr	w8, [x20, #40]
  410728:	cmn	w8, #0x1
  41072c:	b.eq	4108b4 <feof@plt+0xdbb4>  // b.none
  410730:	ldr	x0, [x20]
  410734:	bl	417150 <feof@plt+0x14450>
  410738:	cbz	x28, 410898 <feof@plt+0xdb98>
  41073c:	ldr	w25, [x20, #40]
  410740:	ldr	x8, [x20, #8]
  410744:	mov	w24, wzr
  410748:	mov	w27, #0x2                   	// #2
  41074c:	b	410764 <feof@plt+0xda64>
  410750:	mov	x9, x8
  410754:	cbz	x8, 410898 <feof@plt+0xdb98>
  410758:	ldr	x28, [x9, #8]
  41075c:	add	w24, w22, w24
  410760:	cbz	x28, 410898 <feof@plt+0xdb98>
  410764:	ldr	w23, [x28]
  410768:	mov	w9, #0x4                   	// #4
  41076c:	cmp	w23, #0x4
  410770:	csel	w9, w23, w9, gt
  410774:	sub	w22, w9, #0x3
  410778:	b	41079c <feof@plt+0xda9c>
  41077c:	ldr	w10, [x10, #4]
  410780:	cmp	w10, #0x0
  410784:	cinc	w10, w27, ne  // ne = any
  410788:	add	w9, w10, w9
  41078c:	ldr	w23, [x28]
  410790:	sub	w10, w23, #0x3
  410794:	cmp	w9, w10
  410798:	b.lt	410808 <feof@plt+0xdb08>  // b.tstop
  41079c:	mov	x26, x28
  4107a0:	cbz	x8, 410808 <feof@plt+0xdb08>
  4107a4:	mov	x0, x21
  4107a8:	mov	w1, w23
  4107ac:	bl	4113b4 <feof@plt+0xe6b4>
  4107b0:	ldp	x8, x9, [x20, #8]
  4107b4:	mov	w1, w23
  4107b8:	ldr	w0, [x8]
  4107bc:	blr	x9
  4107c0:	ldr	x8, [x20, #8]
  4107c4:	cmp	w0, #0x0
  4107c8:	b.le	4107d8 <feof@plt+0xdad8>
  4107cc:	mov	x10, x8
  4107d0:	cbnz	x8, 4107ec <feof@plt+0xdaec>
  4107d4:	b	410808 <feof@plt+0xdb08>
  4107d8:	ldr	x9, [x8, #24]
  4107dc:	cbz	x9, 410808 <feof@plt+0xdb08>
  4107e0:	mov	x10, x9
  4107e4:	ldr	x9, [x9, #16]
  4107e8:	cbnz	x9, 4107e0 <feof@plt+0xdae0>
  4107ec:	ldr	x28, [x10, #8]
  4107f0:	cbz	x28, 410808 <feof@plt+0xdb08>
  4107f4:	ldr	x10, [x26, #24]
  4107f8:	ldr	w9, [x26]
  4107fc:	cbnz	x10, 41077c <feof@plt+0xda7c>
  410800:	add	w9, w9, #0x2
  410804:	b	41078c <feof@plt+0xda8c>
  410808:	ldr	x9, [x26, #24]
  41080c:	ldr	w8, [x26]
  410810:	cbz	x9, 410828 <feof@plt+0xdb28>
  410814:	ldr	w9, [x9, #4]
  410818:	cmp	w9, #0x0
  41081c:	cinc	w9, w27, ne  // ne = any
  410820:	add	w8, w9, w8
  410824:	b	41082c <feof@plt+0xdb2c>
  410828:	add	w8, w8, #0x2
  41082c:	cmp	w8, w25
  410830:	csel	w3, w25, w8, gt
  410834:	add	w4, w22, w24
  410838:	mov	x0, x20
  41083c:	mov	x1, x19
  410840:	mov	w2, w22
  410844:	bl	4108e8 <feof@plt+0xdbe8>
  410848:	ldr	x8, [x20, #8]
  41084c:	cbz	x8, 410898 <feof@plt+0xdb98>
  410850:	ldr	w23, [x26]
  410854:	mov	w22, w0
  410858:	mov	x0, x21
  41085c:	mov	w1, w23
  410860:	bl	4113b4 <feof@plt+0xe6b4>
  410864:	ldp	x8, x9, [x20, #8]
  410868:	mov	w1, w23
  41086c:	ldr	w0, [x8]
  410870:	blr	x9
  410874:	ldr	x8, [x20, #8]
  410878:	cmp	w0, #0x0
  41087c:	b.gt	410750 <feof@plt+0xda50>
  410880:	ldr	x10, [x8, #24]
  410884:	cbz	x10, 410898 <feof@plt+0xdb98>
  410888:	mov	x9, x10
  41088c:	ldr	x10, [x10, #16]
  410890:	cbnz	x10, 410888 <feof@plt+0xdb88>
  410894:	b	410758 <feof@plt+0xda58>
  410898:	ldp	x20, x19, [sp, #80]
  41089c:	ldp	x22, x21, [sp, #64]
  4108a0:	ldp	x24, x23, [sp, #48]
  4108a4:	ldp	x26, x25, [sp, #32]
  4108a8:	ldp	x28, x27, [sp, #16]
  4108ac:	ldp	x29, x30, [sp], #96
  4108b0:	ret
  4108b4:	ldr	x0, [x20]
  4108b8:	str	wzr, [x20, #40]
  4108bc:	mov	w1, #0x1                   	// #1
  4108c0:	bl	416df0 <feof@plt+0x140f0>
  4108c4:	cbz	x0, 410730 <feof@plt+0xda30>
  4108c8:	ldr	w8, [x20, #40]
  4108cc:	ldr	x0, [x20]
  4108d0:	add	w9, w8, #0x1
  4108d4:	add	w1, w8, #0x2
  4108d8:	str	w9, [x20, #40]
  4108dc:	bl	416df0 <feof@plt+0x140f0>
  4108e0:	cbnz	x0, 4108c8 <feof@plt+0xdbc8>
  4108e4:	b	410730 <feof@plt+0xda30>
  4108e8:	stp	x29, x30, [sp, #-96]!
  4108ec:	str	x27, [sp, #16]
  4108f0:	stp	x26, x25, [sp, #32]
  4108f4:	stp	x24, x23, [sp, #48]
  4108f8:	stp	x22, x21, [sp, #64]
  4108fc:	stp	x20, x19, [sp, #80]
  410900:	mov	x29, sp
  410904:	subs	w8, w3, w2
  410908:	mov	w25, w4
  41090c:	mov	w19, w3
  410910:	mov	w24, w2
  410914:	mov	x20, x1
  410918:	mov	x21, x0
  41091c:	add	w22, w8, #0x1
  410920:	mov	w23, wzr
  410924:	b.ge	4109a4 <feof@plt+0xdca4>  // b.tcont
  410928:	ldrb	w0, [x20, #67]
  41092c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410930:	add	x1, x1, #0x36b
  410934:	mov	w2, #0x9                   	// #9
  410938:	bl	40bc1c <feof@plt+0x8f1c>
  41093c:	mov	x1, x0
  410940:	mov	x0, x20
  410944:	bl	413430 <feof@plt+0x10730>
  410948:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41094c:	add	x1, x1, #0x572
  410950:	mov	x0, x20
  410954:	mov	w2, w24
  410958:	mov	w3, w22
  41095c:	mov	w4, w25
  410960:	mov	w5, w23
  410964:	bl	413c68 <feof@plt+0x10f68>
  410968:	ldrb	w0, [x20, #67]
  41096c:	bl	40bca0 <feof@plt+0x8fa0>
  410970:	mov	x1, x0
  410974:	mov	x0, x20
  410978:	bl	413430 <feof@plt+0x10730>
  41097c:	cmp	w19, w24
  410980:	b.ge	410a10 <feof@plt+0xdd10>  // b.tcont
  410984:	sub	w0, w23, w22
  410988:	ldp	x20, x19, [sp, #80]
  41098c:	ldp	x22, x21, [sp, #64]
  410990:	ldp	x24, x23, [sp, #48]
  410994:	ldp	x26, x25, [sp, #32]
  410998:	ldr	x27, [sp, #16]
  41099c:	ldp	x29, x30, [sp], #96
  4109a0:	ret
  4109a4:	add	x26, x21, #0x8
  4109a8:	mov	w27, w24
  4109ac:	mov	x0, x26
  4109b0:	mov	w1, w27
  4109b4:	bl	4113b4 <feof@plt+0xe6b4>
  4109b8:	ldr	x8, [x26]
  4109bc:	cbz	x8, 4109d4 <feof@plt+0xdcd4>
  4109c0:	ldr	x9, [x21, #16]
  4109c4:	ldr	w0, [x8]
  4109c8:	mov	w1, w27
  4109cc:	blr	x9
  4109d0:	cbz	w0, 4109ec <feof@plt+0xdcec>
  4109d4:	mov	w8, #0x1                   	// #1
  4109d8:	cmp	w27, w19
  4109dc:	add	w27, w27, #0x1
  4109e0:	add	w23, w8, w23
  4109e4:	b.lt	4109ac <feof@plt+0xdcac>  // b.tstop
  4109e8:	b	410928 <feof@plt+0xdc28>
  4109ec:	ldr	x8, [x26]
  4109f0:	cbz	x8, 4109d4 <feof@plt+0xdcd4>
  4109f4:	ldr	x8, [x8, #8]
  4109f8:	cbz	x8, 4109d4 <feof@plt+0xdcd4>
  4109fc:	ldr	x8, [x8, #32]
  410a00:	cbz	x8, 4109d4 <feof@plt+0xdcd4>
  410a04:	ldr	w8, [x8, #4]
  410a08:	add	w8, w8, #0x1
  410a0c:	b	4109d8 <feof@plt+0xdcd8>
  410a10:	add	x25, x21, #0x8
  410a14:	mov	x0, x25
  410a18:	mov	w1, w24
  410a1c:	bl	4113b4 <feof@plt+0xe6b4>
  410a20:	ldr	x8, [x25]
  410a24:	cbz	x8, 410a3c <feof@plt+0xdd3c>
  410a28:	ldr	x9, [x21, #16]
  410a2c:	ldr	w0, [x8]
  410a30:	mov	w1, w24
  410a34:	blr	x9
  410a38:	cbz	w0, 410a9c <feof@plt+0xdd9c>
  410a3c:	ldr	x0, [x21]
  410a40:	mov	w1, w24
  410a44:	bl	416df0 <feof@plt+0x140f0>
  410a48:	mov	x26, x0
  410a4c:	mov	x27, x1
  410a50:	mov	w1, #0x20                  	// #32
  410a54:	mov	x0, x20
  410a58:	bl	41164c <feof@plt+0xe94c>
  410a5c:	cmp	w27, #0x1
  410a60:	b.lt	410a7c <feof@plt+0xdd7c>  // b.tstop
  410a64:	and	x27, x27, #0xffffffff
  410a68:	ldrb	w1, [x26], #1
  410a6c:	mov	x0, x20
  410a70:	bl	41164c <feof@plt+0xe94c>
  410a74:	subs	x27, x27, #0x1
  410a78:	b.ne	410a68 <feof@plt+0xdd68>  // b.any
  410a7c:	mov	w1, #0xa                   	// #10
  410a80:	mov	x0, x20
  410a84:	bl	41164c <feof@plt+0xe94c>
  410a88:	add	w26, w24, #0x1
  410a8c:	cmp	w26, w19
  410a90:	mov	w24, w26
  410a94:	b.le	410a14 <feof@plt+0xdd14>
  410a98:	b	410984 <feof@plt+0xdc84>
  410a9c:	ldr	x8, [x25]
  410aa0:	cbz	x8, 410a3c <feof@plt+0xdd3c>
  410aa4:	ldr	x8, [x8, #8]
  410aa8:	cbz	x8, 410a3c <feof@plt+0xdd3c>
  410aac:	mov	x0, x25
  410ab0:	mov	w1, w24
  410ab4:	bl	4113b4 <feof@plt+0xe6b4>
  410ab8:	ldr	x8, [x25]
  410abc:	mov	w26, w24
  410ac0:	cbz	x8, 410b04 <feof@plt+0xde04>
  410ac4:	mov	w26, w24
  410ac8:	ldr	x9, [x21, #16]
  410acc:	ldr	w0, [x8]
  410ad0:	mov	w1, w26
  410ad4:	blr	x9
  410ad8:	cbnz	w0, 410b04 <feof@plt+0xde04>
  410adc:	ldr	x8, [x25]
  410ae0:	cbz	x8, 410b04 <feof@plt+0xde04>
  410ae4:	ldr	x8, [x8, #8]
  410ae8:	cbz	x8, 410b04 <feof@plt+0xde04>
  410aec:	add	w26, w26, #0x1
  410af0:	mov	x0, x25
  410af4:	mov	w1, w26
  410af8:	bl	4113b4 <feof@plt+0xe6b4>
  410afc:	ldr	x8, [x25]
  410b00:	cbnz	x8, 410ac8 <feof@plt+0xddc8>
  410b04:	sub	w3, w26, #0x1
  410b08:	mov	x0, x21
  410b0c:	mov	x1, x20
  410b10:	mov	w2, w24
  410b14:	bl	410bcc <feof@plt+0xdecc>
  410b18:	b	410a8c <feof@plt+0xdd8c>
  410b1c:	stp	x29, x30, [sp, #-64]!
  410b20:	str	x23, [sp, #16]
  410b24:	stp	x22, x21, [sp, #32]
  410b28:	stp	x20, x19, [sp, #48]
  410b2c:	mov	x29, sp
  410b30:	cmp	w1, w2
  410b34:	b.le	410b54 <feof@plt+0xde54>
  410b38:	mov	w20, wzr
  410b3c:	mov	w0, w20
  410b40:	ldp	x20, x19, [sp, #48]
  410b44:	ldp	x22, x21, [sp, #32]
  410b48:	ldr	x23, [sp, #16]
  410b4c:	ldp	x29, x30, [sp], #64
  410b50:	ret
  410b54:	mov	w19, w2
  410b58:	mov	w22, w1
  410b5c:	mov	x21, x0
  410b60:	mov	w20, wzr
  410b64:	add	x23, x0, #0x8
  410b68:	mov	x0, x23
  410b6c:	mov	w1, w22
  410b70:	bl	4113b4 <feof@plt+0xe6b4>
  410b74:	ldr	x8, [x23]
  410b78:	cbz	x8, 410b90 <feof@plt+0xde90>
  410b7c:	ldr	x9, [x21, #16]
  410b80:	ldr	w0, [x8]
  410b84:	mov	w1, w22
  410b88:	blr	x9
  410b8c:	cbz	w0, 410ba8 <feof@plt+0xdea8>
  410b90:	mov	w8, #0x1                   	// #1
  410b94:	cmp	w22, w19
  410b98:	add	w22, w22, #0x1
  410b9c:	add	w20, w8, w20
  410ba0:	b.lt	410b68 <feof@plt+0xde68>  // b.tstop
  410ba4:	b	410b3c <feof@plt+0xde3c>
  410ba8:	ldr	x8, [x23]
  410bac:	cbz	x8, 410b90 <feof@plt+0xde90>
  410bb0:	ldr	x8, [x8, #8]
  410bb4:	cbz	x8, 410b90 <feof@plt+0xde90>
  410bb8:	ldr	x8, [x8, #32]
  410bbc:	cbz	x8, 410b90 <feof@plt+0xde90>
  410bc0:	ldr	w8, [x8, #4]
  410bc4:	add	w8, w8, #0x1
  410bc8:	b	410b94 <feof@plt+0xde94>
  410bcc:	stp	x29, x30, [sp, #-80]!
  410bd0:	stp	x26, x25, [sp, #16]
  410bd4:	stp	x24, x23, [sp, #32]
  410bd8:	stp	x22, x21, [sp, #48]
  410bdc:	stp	x20, x19, [sp, #64]
  410be0:	mov	x29, sp
  410be4:	ldrb	w8, [x1, #67]
  410be8:	mov	x19, x1
  410bec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410bf0:	mov	w21, w2
  410bf4:	mov	x22, x0
  410bf8:	add	x1, x1, #0x37e
  410bfc:	mov	w2, #0xb                   	// #11
  410c00:	mov	w0, w8
  410c04:	mov	w20, w3
  410c08:	bl	40bc1c <feof@plt+0x8f1c>
  410c0c:	mov	x1, x0
  410c10:	mov	x0, x19
  410c14:	bl	413430 <feof@plt+0x10730>
  410c18:	cmp	w21, w20
  410c1c:	b.le	410c58 <feof@plt+0xdf58>
  410c20:	ldrb	w0, [x19, #67]
  410c24:	bl	40bca0 <feof@plt+0x8fa0>
  410c28:	mov	x1, x0
  410c2c:	mov	x0, x19
  410c30:	bl	413430 <feof@plt+0x10730>
  410c34:	ldrb	w0, [x19, #67]
  410c38:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410c3c:	add	x1, x1, #0x38a
  410c40:	mov	w2, #0xb                   	// #11
  410c44:	bl	40bc1c <feof@plt+0x8f1c>
  410c48:	mov	x1, x0
  410c4c:	mov	x0, x19
  410c50:	bl	413430 <feof@plt+0x10730>
  410c54:	b	410d94 <feof@plt+0xe094>
  410c58:	add	x23, x22, #0x8
  410c5c:	mov	w24, w21
  410c60:	b	410c7c <feof@plt+0xdf7c>
  410c64:	mov	w1, #0xa                   	// #10
  410c68:	mov	x0, x19
  410c6c:	bl	41164c <feof@plt+0xe94c>
  410c70:	cmp	w24, w20
  410c74:	add	w24, w24, #0x1
  410c78:	b.ge	410d08 <feof@plt+0xe008>  // b.tcont
  410c7c:	mov	x0, x23
  410c80:	mov	w1, w24
  410c84:	bl	4113b4 <feof@plt+0xe6b4>
  410c88:	ldr	x8, [x23]
  410c8c:	cbz	x8, 410dbc <feof@plt+0xe0bc>
  410c90:	ldr	x9, [x22, #16]
  410c94:	ldr	w0, [x8]
  410c98:	mov	w1, w24
  410c9c:	blr	x9
  410ca0:	cbnz	w0, 410dbc <feof@plt+0xe0bc>
  410ca4:	ldr	x8, [x23]
  410ca8:	cbz	x8, 410dbc <feof@plt+0xe0bc>
  410cac:	ldr	x8, [x8, #8]
  410cb0:	cbz	x8, 410dbc <feof@plt+0xe0bc>
  410cb4:	ldr	x8, [x8, #24]
  410cb8:	cbz	x8, 410c70 <feof@plt+0xdf70>
  410cbc:	ldr	w8, [x8, #4]
  410cc0:	cbz	w8, 410c70 <feof@plt+0xdf70>
  410cc4:	ldr	x0, [x22]
  410cc8:	mov	w1, w24
  410ccc:	bl	416df0 <feof@plt+0x140f0>
  410cd0:	mov	x25, x0
  410cd4:	mov	x26, x1
  410cd8:	mov	w1, #0x2d                  	// #45
  410cdc:	mov	x0, x19
  410ce0:	bl	41164c <feof@plt+0xe94c>
  410ce4:	cmp	w26, #0x1
  410ce8:	b.lt	410c64 <feof@plt+0xdf64>  // b.tstop
  410cec:	and	x26, x26, #0xffffffff
  410cf0:	ldrb	w1, [x25], #1
  410cf4:	mov	x0, x19
  410cf8:	bl	41164c <feof@plt+0xe94c>
  410cfc:	subs	x26, x26, #0x1
  410d00:	b.ne	410cf0 <feof@plt+0xdff0>  // b.any
  410d04:	b	410c64 <feof@plt+0xdf64>
  410d08:	ldrb	w0, [x19, #67]
  410d0c:	bl	40bca0 <feof@plt+0x8fa0>
  410d10:	mov	x1, x0
  410d14:	mov	x0, x19
  410d18:	bl	413430 <feof@plt+0x10730>
  410d1c:	ldrb	w0, [x19, #67]
  410d20:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410d24:	add	x1, x1, #0x38a
  410d28:	mov	w2, #0xb                   	// #11
  410d2c:	bl	40bc1c <feof@plt+0x8f1c>
  410d30:	mov	x1, x0
  410d34:	mov	x0, x19
  410d38:	bl	413430 <feof@plt+0x10730>
  410d3c:	cmp	w21, w20
  410d40:	b.gt	410d94 <feof@plt+0xe094>
  410d44:	add	x23, x22, #0x8
  410d48:	mov	x0, x23
  410d4c:	mov	w1, w21
  410d50:	bl	4113b4 <feof@plt+0xe6b4>
  410d54:	ldr	x8, [x23]
  410d58:	cbz	x8, 410dd4 <feof@plt+0xe0d4>
  410d5c:	ldr	x9, [x22, #16]
  410d60:	ldr	w0, [x8]
  410d64:	mov	w1, w21
  410d68:	blr	x9
  410d6c:	cbnz	w0, 410dd4 <feof@plt+0xe0d4>
  410d70:	ldr	x8, [x23]
  410d74:	cbz	x8, 410dd4 <feof@plt+0xe0d4>
  410d78:	ldr	x0, [x8, #8]
  410d7c:	cbz	x0, 410dd4 <feof@plt+0xe0d4>
  410d80:	mov	x1, x19
  410d84:	bl	410dec <feof@plt+0xe0ec>
  410d88:	cmp	w21, w20
  410d8c:	add	w21, w21, #0x1
  410d90:	b.lt	410d48 <feof@plt+0xe048>  // b.tstop
  410d94:	ldrb	w0, [x19, #67]
  410d98:	bl	40bca0 <feof@plt+0x8fa0>
  410d9c:	mov	x1, x0
  410da0:	mov	x0, x19
  410da4:	ldp	x20, x19, [sp, #64]
  410da8:	ldp	x22, x21, [sp, #48]
  410dac:	ldp	x24, x23, [sp, #32]
  410db0:	ldp	x26, x25, [sp, #16]
  410db4:	ldp	x29, x30, [sp], #80
  410db8:	b	413430 <feof@plt+0x10730>
  410dbc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410dc0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410dc4:	add	x0, x0, #0x52d
  410dc8:	add	x2, x2, #0x587
  410dcc:	mov	w1, #0x239                 	// #569
  410dd0:	bl	408b70 <feof@plt+0x5e70>
  410dd4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410dd8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410ddc:	add	x0, x0, #0x52d
  410de0:	add	x2, x2, #0x587
  410de4:	mov	w1, #0x24b                 	// #587
  410de8:	bl	408b70 <feof@plt+0x5e70>
  410dec:	stp	x29, x30, [sp, #-64]!
  410df0:	str	x23, [sp, #16]
  410df4:	stp	x22, x21, [sp, #32]
  410df8:	stp	x20, x19, [sp, #48]
  410dfc:	mov	x29, sp
  410e00:	ldr	x8, [x0, #32]
  410e04:	mov	x20, x0
  410e08:	mov	x19, x1
  410e0c:	cbz	x8, 410e78 <feof@plt+0xe178>
  410e10:	mov	w21, wzr
  410e14:	b	410e30 <feof@plt+0xe130>
  410e18:	mov	w1, #0xa                   	// #10
  410e1c:	mov	x0, x19
  410e20:	bl	41164c <feof@plt+0xe94c>
  410e24:	ldr	x8, [x20, #32]
  410e28:	add	w21, w21, #0x1
  410e2c:	cbz	x8, 410e78 <feof@plt+0xe178>
  410e30:	ldr	w9, [x8, #4]
  410e34:	cmp	w9, w21
  410e38:	b.ls	410e78 <feof@plt+0xe178>  // b.plast
  410e3c:	add	x8, x8, w21, uxtw #3
  410e40:	ldr	x8, [x8, #8]
  410e44:	mov	w1, #0x2b                  	// #43
  410e48:	mov	x0, x19
  410e4c:	ldr	x22, [x8]
  410e50:	ldr	w23, [x8, #8]
  410e54:	bl	41164c <feof@plt+0xe94c>
  410e58:	cmp	w23, #0x1
  410e5c:	b.lt	410e18 <feof@plt+0xe118>  // b.tstop
  410e60:	ldrb	w1, [x22], #1
  410e64:	mov	x0, x19
  410e68:	bl	41164c <feof@plt+0xe94c>
  410e6c:	subs	x23, x23, #0x1
  410e70:	b.ne	410e60 <feof@plt+0xe160>  // b.any
  410e74:	b	410e18 <feof@plt+0xe118>
  410e78:	ldr	x8, [x20, #24]
  410e7c:	cbz	x8, 410ebc <feof@plt+0xe1bc>
  410e80:	ldr	w8, [x8, #4]
  410e84:	ldr	x21, [x20, #8]
  410e88:	ldr	w20, [x20, #16]
  410e8c:	cbz	w8, 410ec4 <feof@plt+0xe1c4>
  410e90:	mov	w1, #0x2b                  	// #43
  410e94:	mov	x0, x19
  410e98:	bl	41164c <feof@plt+0xe94c>
  410e9c:	cmp	w20, #0x1
  410ea0:	b.lt	410ef0 <feof@plt+0xe1f0>  // b.tstop
  410ea4:	ldrb	w1, [x21], #1
  410ea8:	mov	x0, x19
  410eac:	bl	41164c <feof@plt+0xe94c>
  410eb0:	subs	x20, x20, #0x1
  410eb4:	b.ne	410ea4 <feof@plt+0xe1a4>  // b.any
  410eb8:	b	410ef0 <feof@plt+0xe1f0>
  410ebc:	ldr	x21, [x20, #8]
  410ec0:	ldr	w20, [x20, #16]
  410ec4:	mov	w1, #0x20                  	// #32
  410ec8:	mov	x0, x19
  410ecc:	bl	41164c <feof@plt+0xe94c>
  410ed0:	cmp	w20, #0x1
  410ed4:	b.lt	410ef0 <feof@plt+0xe1f0>  // b.tstop
  410ed8:	mov	w20, w20
  410edc:	ldrb	w1, [x21], #1
  410ee0:	mov	x0, x19
  410ee4:	bl	41164c <feof@plt+0xe94c>
  410ee8:	subs	x20, x20, #0x1
  410eec:	b.ne	410edc <feof@plt+0xe1dc>  // b.any
  410ef0:	mov	x0, x19
  410ef4:	ldp	x20, x19, [sp, #48]
  410ef8:	ldp	x22, x21, [sp, #32]
  410efc:	ldr	x23, [sp, #16]
  410f00:	mov	w1, #0xa                   	// #10
  410f04:	ldp	x29, x30, [sp], #64
  410f08:	b	41164c <feof@plt+0xe94c>
  410f0c:	ldr	x8, [x0, #32]
  410f10:	cbz	x8, 410f20 <feof@plt+0xe220>
  410f14:	ldr	w8, [x8, #4]
  410f18:	add	w0, w8, #0x1
  410f1c:	ret
  410f20:	mov	w0, #0x1                   	// #1
  410f24:	ret
  410f28:	stp	x29, x30, [sp, #-48]!
  410f2c:	stp	x22, x21, [sp, #16]
  410f30:	stp	x20, x19, [sp, #32]
  410f34:	mov	x29, sp
  410f38:	movi	v0.2d, #0x0
  410f3c:	mov	x19, x0
  410f40:	str	w2, [x0]
  410f44:	mov	x21, x0
  410f48:	stur	q0, [x0, #24]
  410f4c:	mov	x0, x1
  410f50:	mov	w1, w2
  410f54:	str	q0, [x21, #8]!
  410f58:	bl	416df0 <feof@plt+0x140f0>
  410f5c:	cbz	x0, 410fc0 <feof@plt+0xe2c0>
  410f60:	ldr	w8, [x19, #20]
  410f64:	mov	x20, x0
  410f68:	str	w1, [x19, #16]
  410f6c:	cmp	w8, w1
  410f70:	b.le	410f7c <feof@plt+0xe27c>
  410f74:	ldr	x0, [x21]
  410f78:	b	410f9c <feof@plt+0xe29c>
  410f7c:	ldr	x0, [x19, #8]
  410f80:	lsl	w8, w1, #1
  410f84:	add	w22, w8, #0x2
  410f88:	sxtw	x1, w22
  410f8c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  410f90:	ldr	w1, [x19, #16]
  410f94:	str	x0, [x19, #8]
  410f98:	str	w22, [x19, #20]
  410f9c:	sxtw	x2, w1
  410fa0:	mov	x1, x20
  410fa4:	bl	402640 <memcpy@plt>
  410fa8:	ldp	w8, w9, [x19, #16]
  410fac:	sxtw	x8, w8
  410fb0:	cmp	w8, w9
  410fb4:	b.ge	410fd0 <feof@plt+0xe2d0>  // b.tcont
  410fb8:	ldr	x9, [x21]
  410fbc:	strb	wzr, [x9, x8]
  410fc0:	ldp	x20, x19, [sp, #32]
  410fc4:	ldp	x22, x21, [sp, #16]
  410fc8:	ldp	x29, x30, [sp], #48
  410fcc:	ret
  410fd0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410fd4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  410fd8:	add	x0, x0, #0x52d
  410fdc:	add	x2, x2, #0x51b
  410fe0:	mov	w1, #0x36b                 	// #875
  410fe4:	bl	408b70 <feof@plt+0x5e70>
  410fe8:	stp	x29, x30, [sp, #-32]!
  410fec:	stp	x20, x19, [sp, #16]
  410ff0:	mov	x29, sp
  410ff4:	ldr	w8, [x0, #20]
  410ff8:	cmp	w8, w1
  410ffc:	b.gt	411020 <feof@plt+0xe320>
  411000:	mov	x19, x0
  411004:	ldr	x0, [x0, #8]
  411008:	lsl	w8, w1, #1
  41100c:	add	w20, w8, #0x2
  411010:	sxtw	x1, w20
  411014:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  411018:	str	x0, [x19, #8]
  41101c:	str	w20, [x19, #20]
  411020:	ldp	x20, x19, [sp, #16]
  411024:	ldp	x29, x30, [sp], #32
  411028:	ret
  41102c:	stp	x29, x30, [sp, #-16]!
  411030:	mov	x29, sp
  411034:	ldp	w8, w9, [x0, #16]
  411038:	sxtw	x8, w8
  41103c:	cmp	w8, w9
  411040:	b.ge	411054 <feof@plt+0xe354>  // b.tcont
  411044:	ldr	x9, [x0, #8]
  411048:	strb	wzr, [x9, x8]
  41104c:	ldp	x29, x30, [sp], #16
  411050:	ret
  411054:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  411058:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41105c:	add	x0, x0, #0x52d
  411060:	add	x2, x2, #0x51b
  411064:	mov	w1, #0x36b                 	// #875
  411068:	bl	408b70 <feof@plt+0x5e70>
  41106c:	stp	x29, x30, [sp, #-48]!
  411070:	str	x21, [sp, #16]
  411074:	stp	x20, x19, [sp, #32]
  411078:	mov	x29, sp
  41107c:	mov	x19, x0
  411080:	ldr	x0, [x0, #8]
  411084:	bl	402770 <free@plt>
  411088:	ldr	x0, [x19, #32]
  41108c:	cbz	x0, 4110e0 <feof@plt+0xe3e0>
  411090:	mov	x21, xzr
  411094:	b	4110a0 <feof@plt+0xe3a0>
  411098:	add	x21, x21, #0x1
  41109c:	cbz	x0, 4110e0 <feof@plt+0xe3e0>
  4110a0:	ldr	w8, [x0, #4]
  4110a4:	cmp	x21, x8
  4110a8:	b.cs	4110d0 <feof@plt+0xe3d0>  // b.hs, b.nlast
  4110ac:	add	x8, x0, x21, lsl #3
  4110b0:	ldr	x20, [x8, #8]
  4110b4:	cbz	x20, 411098 <feof@plt+0xe398>
  4110b8:	ldr	x0, [x20]
  4110bc:	bl	402770 <free@plt>
  4110c0:	mov	x0, x20
  4110c4:	bl	402940 <_ZdlPv@plt>
  4110c8:	ldr	x0, [x19, #32]
  4110cc:	b	411098 <feof@plt+0xe398>
  4110d0:	ldr	w8, [x0]
  4110d4:	tbnz	w8, #31, 411110 <feof@plt+0xe410>
  4110d8:	bl	402770 <free@plt>
  4110dc:	str	xzr, [x19, #32]
  4110e0:	ldr	x0, [x19, #24]
  4110e4:	cbz	x0, 411100 <feof@plt+0xe400>
  4110e8:	ldr	w8, [x0]
  4110ec:	tbnz	w8, #31, 4110fc <feof@plt+0xe3fc>
  4110f0:	bl	402770 <free@plt>
  4110f4:	str	xzr, [x19, #24]
  4110f8:	b	411100 <feof@plt+0xe400>
  4110fc:	str	wzr, [x0, #4]
  411100:	ldp	x20, x19, [sp, #32]
  411104:	ldr	x21, [sp, #16]
  411108:	ldp	x29, x30, [sp], #48
  41110c:	ret
  411110:	str	wzr, [x0, #4]
  411114:	ldr	x0, [x19, #24]
  411118:	cbnz	x0, 4110e8 <feof@plt+0xe3e8>
  41111c:	b	411100 <feof@plt+0xe400>
  411120:	stp	x29, x30, [sp, #-64]!
  411124:	str	x23, [sp, #16]
  411128:	stp	x22, x21, [sp, #32]
  41112c:	stp	x20, x19, [sp, #48]
  411130:	mov	x29, sp
  411134:	cbz	x1, 411204 <feof@plt+0xe504>
  411138:	ldr	x8, [x0, #16]
  41113c:	mov	x20, x1
  411140:	mov	x19, x0
  411144:	cbz	x8, 411150 <feof@plt+0xe450>
  411148:	ldr	w0, [x20]
  41114c:	blr	x8
  411150:	ldr	x8, [x19, #24]
  411154:	cbz	x8, 411160 <feof@plt+0xe460>
  411158:	ldr	x0, [x20, #8]
  41115c:	blr	x8
  411160:	mov	x21, xzr
  411164:	str	xzr, [x20, #32]
  411168:	ldr	x9, [x20, #16]
  41116c:	cbz	x9, 4111a0 <feof@plt+0xe4a0>
  411170:	ldr	x8, [x19, #16]
  411174:	cbz	x8, 411180 <feof@plt+0xe480>
  411178:	ldr	w0, [x9]
  41117c:	blr	x8
  411180:	ldr	x8, [x19, #24]
  411184:	cbz	x8, 411194 <feof@plt+0xe494>
  411188:	ldr	x9, [x20, #16]
  41118c:	ldr	x0, [x9, #8]
  411190:	blr	x8
  411194:	ldr	x8, [x20, #16]
  411198:	str	x21, [x8, #32]
  41119c:	ldr	x21, [x20, #16]
  4111a0:	ldr	x9, [x20, #24]
  4111a4:	cbz	x9, 4111e0 <feof@plt+0xe4e0>
  4111a8:	ldr	x8, [x19, #16]
  4111ac:	cbz	x8, 4111b8 <feof@plt+0xe4b8>
  4111b0:	ldr	w0, [x9]
  4111b4:	blr	x8
  4111b8:	ldr	x8, [x19, #24]
  4111bc:	cbz	x8, 4111cc <feof@plt+0xe4cc>
  4111c0:	ldr	x9, [x20, #24]
  4111c4:	ldr	x0, [x9, #8]
  4111c8:	blr	x8
  4111cc:	ldr	x8, [x20, #24]
  4111d0:	str	x21, [x8, #32]
  4111d4:	ldr	x22, [x20, #24]
  4111d8:	mov	x21, x22
  4111dc:	b	4111e4 <feof@plt+0xe4e4>
  4111e0:	mov	x22, x21
  4111e4:	ldr	x23, [x20, #32]
  4111e8:	mov	x0, x20
  4111ec:	bl	402940 <_ZdlPv@plt>
  4111f0:	mov	x20, x23
  4111f4:	cbnz	x23, 411168 <feof@plt+0xe468>
  4111f8:	mov	x21, xzr
  4111fc:	mov	x20, x22
  411200:	cbnz	x22, 411168 <feof@plt+0xe468>
  411204:	ldp	x20, x19, [sp, #48]
  411208:	ldp	x22, x21, [sp, #32]
  41120c:	ldr	x23, [sp, #16]
  411210:	ldp	x29, x30, [sp], #64
  411214:	ret
  411218:	stp	x29, x30, [sp, #-80]!
  41121c:	str	x25, [sp, #16]
  411220:	stp	x24, x23, [sp, #32]
  411224:	stp	x22, x21, [sp, #48]
  411228:	stp	x20, x19, [sp, #64]
  41122c:	mov	x29, sp
  411230:	ldr	x22, [x0]
  411234:	cbz	x22, 41139c <feof@plt+0xe69c>
  411238:	mov	x20, x1
  41123c:	ldr	x8, [x0, #8]
  411240:	ldr	x1, [x22]
  411244:	mov	x19, x0
  411248:	mov	x0, x20
  41124c:	blr	x8
  411250:	cbz	w0, 41139c <feof@plt+0xe69c>
  411254:	mov	w21, w0
  411258:	mov	w23, #0x18                  	// #24
  41125c:	mov	w24, #0x10                  	// #16
  411260:	cmp	w21, #0x0
  411264:	csel	x8, x24, x23, lt  // lt = tstop
  411268:	ldr	x25, [x22, x8]
  41126c:	cbz	x25, 41139c <feof@plt+0xe69c>
  411270:	ldr	x8, [x19, #8]
  411274:	ldr	x1, [x25]
  411278:	mov	x0, x20
  41127c:	blr	x8
  411280:	cbz	w0, 411378 <feof@plt+0xe678>
  411284:	tbnz	w0, #31, 4112d4 <feof@plt+0xe5d4>
  411288:	ldr	x8, [x25, #24]
  41128c:	cbz	x8, 411378 <feof@plt+0xe678>
  411290:	mov	w8, #0x1                   	// #1
  411294:	tst	w0, w21
  411298:	b.lt	4112e8 <feof@plt+0xe5e8>  // b.tstop
  41129c:	cmp	w21, #0x1
  4112a0:	cset	w9, lt  // lt = tstop
  4112a4:	eor	w8, w8, #0x1
  4112a8:	orr	w9, w9, w8
  4112ac:	tbnz	w9, #0, 4112fc <feof@plt+0xe5fc>
  4112b0:	ldr	x8, [x25, #24]
  4112b4:	ldr	x9, [x8, #16]
  4112b8:	str	x25, [x8, #16]
  4112bc:	str	x9, [x25, #24]
  4112c0:	str	x8, [x22, #24]
  4112c4:	ldr	x9, [x8, #16]
  4112c8:	str	x22, [x8, #16]
  4112cc:	str	x9, [x22, #24]
  4112d0:	b	41132c <feof@plt+0xe62c>
  4112d4:	ldr	x8, [x25, #16]
  4112d8:	cbz	x8, 411378 <feof@plt+0xe678>
  4112dc:	mov	w8, wzr
  4112e0:	tst	w0, w21
  4112e4:	b.ge	41129c <feof@plt+0xe59c>  // b.tcont
  4112e8:	ldr	x8, [x25, #16]
  4112ec:	ldr	x9, [x8, #24]
  4112f0:	str	x25, [x8, #24]
  4112f4:	str	x9, [x25, #16]
  4112f8:	b	41131c <feof@plt+0xe61c>
  4112fc:	cmp	w21, #0x0
  411300:	cset	w9, ge  // ge = tcont
  411304:	orr	w8, w9, w8
  411308:	tbnz	w8, #0, 411350 <feof@plt+0xe650>
  41130c:	ldr	x8, [x25, #24]
  411310:	ldr	x9, [x8, #16]
  411314:	str	x25, [x8, #16]
  411318:	str	x9, [x25, #24]
  41131c:	str	x8, [x22, #16]
  411320:	ldr	x9, [x8, #24]
  411324:	str	x22, [x8, #24]
  411328:	str	x9, [x22, #16]
  41132c:	mov	x22, x8
  411330:	str	x8, [x19]
  411334:	ldr	x8, [x19, #8]
  411338:	ldr	x1, [x22]
  41133c:	mov	x0, x20
  411340:	blr	x8
  411344:	mov	w21, w0
  411348:	cbnz	w0, 411260 <feof@plt+0xe560>
  41134c:	b	41139c <feof@plt+0xe69c>
  411350:	cmp	w21, #0x1
  411354:	b.lt	411370 <feof@plt+0xe670>  // b.tstop
  411358:	tbz	w0, #31, 411370 <feof@plt+0xe670>
  41135c:	ldr	x8, [x25, #16]
  411360:	ldr	x9, [x8, #24]
  411364:	str	x25, [x8, #24]
  411368:	str	x9, [x25, #16]
  41136c:	b	4112c0 <feof@plt+0xe5c0>
  411370:	ldr	x22, [x19]
  411374:	b	411334 <feof@plt+0xe634>
  411378:	tbnz	w21, #31, 41138c <feof@plt+0xe68c>
  41137c:	ldr	x8, [x25, #16]
  411380:	str	x22, [x25, #16]
  411384:	str	x8, [x22, #24]
  411388:	b	411398 <feof@plt+0xe698>
  41138c:	ldr	x8, [x25, #24]
  411390:	str	x22, [x25, #24]
  411394:	str	x8, [x22, #16]
  411398:	str	x25, [x19]
  41139c:	ldp	x20, x19, [sp, #64]
  4113a0:	ldp	x22, x21, [sp, #48]
  4113a4:	ldp	x24, x23, [sp, #32]
  4113a8:	ldr	x25, [sp, #16]
  4113ac:	ldp	x29, x30, [sp], #80
  4113b0:	ret
  4113b4:	stp	x29, x30, [sp, #-80]!
  4113b8:	str	x25, [sp, #16]
  4113bc:	stp	x24, x23, [sp, #32]
  4113c0:	stp	x22, x21, [sp, #48]
  4113c4:	stp	x20, x19, [sp, #64]
  4113c8:	mov	x29, sp
  4113cc:	ldr	x22, [x0]
  4113d0:	cbz	x22, 411538 <feof@plt+0xe838>
  4113d4:	mov	w20, w1
  4113d8:	ldr	x8, [x0, #8]
  4113dc:	ldr	w1, [x22]
  4113e0:	mov	x19, x0
  4113e4:	mov	w0, w20
  4113e8:	blr	x8
  4113ec:	cbz	w0, 411538 <feof@plt+0xe838>
  4113f0:	mov	w21, w0
  4113f4:	mov	w23, #0x18                  	// #24
  4113f8:	mov	w24, #0x10                  	// #16
  4113fc:	cmp	w21, #0x0
  411400:	csel	x8, x24, x23, lt  // lt = tstop
  411404:	ldr	x25, [x22, x8]
  411408:	cbz	x25, 411538 <feof@plt+0xe838>
  41140c:	ldr	x8, [x19, #8]
  411410:	ldr	w1, [x25]
  411414:	mov	w0, w20
  411418:	blr	x8
  41141c:	cbz	w0, 411514 <feof@plt+0xe814>
  411420:	tbnz	w0, #31, 411470 <feof@plt+0xe770>
  411424:	ldr	x8, [x25, #24]
  411428:	cbz	x8, 411514 <feof@plt+0xe814>
  41142c:	mov	w8, #0x1                   	// #1
  411430:	tst	w0, w21
  411434:	b.lt	411484 <feof@plt+0xe784>  // b.tstop
  411438:	cmp	w21, #0x1
  41143c:	cset	w9, lt  // lt = tstop
  411440:	eor	w8, w8, #0x1
  411444:	orr	w9, w9, w8
  411448:	tbnz	w9, #0, 411498 <feof@plt+0xe798>
  41144c:	ldr	x8, [x25, #24]
  411450:	ldr	x9, [x8, #16]
  411454:	str	x25, [x8, #16]
  411458:	str	x9, [x25, #24]
  41145c:	str	x8, [x22, #24]
  411460:	ldr	x9, [x8, #16]
  411464:	str	x22, [x8, #16]
  411468:	str	x9, [x22, #24]
  41146c:	b	4114c8 <feof@plt+0xe7c8>
  411470:	ldr	x8, [x25, #16]
  411474:	cbz	x8, 411514 <feof@plt+0xe814>
  411478:	mov	w8, wzr
  41147c:	tst	w0, w21
  411480:	b.ge	411438 <feof@plt+0xe738>  // b.tcont
  411484:	ldr	x8, [x25, #16]
  411488:	ldr	x9, [x8, #24]
  41148c:	str	x25, [x8, #24]
  411490:	str	x9, [x25, #16]
  411494:	b	4114b8 <feof@plt+0xe7b8>
  411498:	cmp	w21, #0x0
  41149c:	cset	w9, ge  // ge = tcont
  4114a0:	orr	w8, w9, w8
  4114a4:	tbnz	w8, #0, 4114ec <feof@plt+0xe7ec>
  4114a8:	ldr	x8, [x25, #24]
  4114ac:	ldr	x9, [x8, #16]
  4114b0:	str	x25, [x8, #16]
  4114b4:	str	x9, [x25, #24]
  4114b8:	str	x8, [x22, #16]
  4114bc:	ldr	x9, [x8, #24]
  4114c0:	str	x22, [x8, #24]
  4114c4:	str	x9, [x22, #16]
  4114c8:	mov	x22, x8
  4114cc:	str	x8, [x19]
  4114d0:	ldr	x8, [x19, #8]
  4114d4:	ldr	w1, [x22]
  4114d8:	mov	w0, w20
  4114dc:	blr	x8
  4114e0:	mov	w21, w0
  4114e4:	cbnz	w0, 4113fc <feof@plt+0xe6fc>
  4114e8:	b	411538 <feof@plt+0xe838>
  4114ec:	cmp	w21, #0x1
  4114f0:	b.lt	41150c <feof@plt+0xe80c>  // b.tstop
  4114f4:	tbz	w0, #31, 41150c <feof@plt+0xe80c>
  4114f8:	ldr	x8, [x25, #16]
  4114fc:	ldr	x9, [x8, #24]
  411500:	str	x25, [x8, #24]
  411504:	str	x9, [x25, #16]
  411508:	b	41145c <feof@plt+0xe75c>
  41150c:	ldr	x22, [x19]
  411510:	b	4114d0 <feof@plt+0xe7d0>
  411514:	tbnz	w21, #31, 411528 <feof@plt+0xe828>
  411518:	ldr	x8, [x25, #16]
  41151c:	str	x22, [x25, #16]
  411520:	str	x8, [x22, #24]
  411524:	b	411534 <feof@plt+0xe834>
  411528:	ldr	x8, [x25, #24]
  41152c:	str	x22, [x25, #24]
  411530:	str	x8, [x22, #16]
  411534:	str	x25, [x19]
  411538:	ldp	x20, x19, [sp, #64]
  41153c:	ldp	x22, x21, [sp, #48]
  411540:	ldp	x24, x23, [sp, #32]
  411544:	ldr	x25, [sp, #16]
  411548:	ldp	x29, x30, [sp], #80
  41154c:	ret
  411550:	ldr	x0, [x0, #32]
  411554:	b	43082c <feof@plt+0x2db2c>
  411558:	cbz	w1, 411564 <feof@plt+0xe864>
  41155c:	mov	w0, wzr
  411560:	ret
  411564:	ldr	x0, [x0, #32]
  411568:	b	430708 <feof@plt+0x2da08>
  41156c:	stp	x29, x30, [sp, #-48]!
  411570:	str	x21, [sp, #16]
  411574:	stp	x20, x19, [sp, #32]
  411578:	mov	x29, sp
  41157c:	movi	v0.2d, #0x0
  411580:	stp	x0, xzr, [x0, #176]
  411584:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  411588:	stp	q0, q0, [x0, #144]
  41158c:	stp	q0, q0, [x0, #112]
  411590:	stp	q0, q0, [x0, #80]
  411594:	stp	q0, q0, [x0, #48]
  411598:	stp	q0, q0, [x0, #16]
  41159c:	str	q0, [x0]
  4115a0:	ldr	x8, [x8, #1416]
  4115a4:	adrp	x20, 419000 <feof@plt+0x16300>
  4115a8:	adrp	x21, 419000 <feof@plt+0x16300>
  4115ac:	add	x20, x20, #0xdf4
  4115b0:	str	x8, [x0, #192]
  4115b4:	mov	x8, x0
  4115b8:	str	q0, [x8, #200]!
  4115bc:	add	x21, x21, #0xe20
  4115c0:	str	wzr, [x8, #128]
  4115c4:	stp	q0, q0, [x8, #96]
  4115c8:	stp	q0, q0, [x8, #64]
  4115cc:	mov	w8, #0x1                   	// #1
  4115d0:	mov	x1, xzr
  4115d4:	mov	x2, xzr
  4115d8:	mov	x3, x20
  4115dc:	mov	x4, x21
  4115e0:	add	x19, x0, #0x58
  4115e4:	stur	q0, [x0, #248]
  4115e8:	stur	q0, [x0, #232]
  4115ec:	stur	q0, [x0, #216]
  4115f0:	strb	w8, [x0, #332]
  4115f4:	bl	454eb0 <_obstack_begin@@Base>
  4115f8:	mov	x0, x19
  4115fc:	mov	x3, x20
  411600:	mov	x4, x21
  411604:	ldp	x20, x19, [sp, #32]
  411608:	ldr	x21, [sp, #16]
  41160c:	mov	x1, xzr
  411610:	mov	x2, xzr
  411614:	ldp	x29, x30, [sp], #48
  411618:	b	454eb0 <_obstack_begin@@Base>
  41161c:	stp	x29, x30, [sp, #-32]!
  411620:	str	x19, [sp, #16]
  411624:	mov	x29, sp
  411628:	mov	x19, x0
  41162c:	add	x0, x0, #0x58
  411630:	mov	x1, xzr
  411634:	bl	455194 <_obstack_free@@Base>
  411638:	mov	x0, x19
  41163c:	ldr	x19, [sp, #16]
  411640:	mov	x1, xzr
  411644:	ldp	x29, x30, [sp], #32
  411648:	b	455194 <_obstack_free@@Base>
  41164c:	stp	x29, x30, [sp, #-48]!
  411650:	str	x21, [sp, #16]
  411654:	stp	x20, x19, [sp, #32]
  411658:	mov	x29, sp
  41165c:	ldr	w8, [x0, #40]
  411660:	mov	x19, x0
  411664:	mov	w20, w1
  411668:	cmp	w8, #0x1
  41166c:	b.lt	4116d4 <feof@plt+0xe9d4>  // b.tstop
  411670:	ldr	x8, [x19, #8]
  411674:	ldr	w9, [x19, #28]
  411678:	ldr	w10, [x8, #200]
  41167c:	cmp	w9, w10
  411680:	b.gt	4116d4 <feof@plt+0xe9d4>
  411684:	ldr	x21, [x8, #176]
  411688:	ldp	x8, x9, [x21, #24]
  41168c:	cmp	x9, x8
  411690:	b.ne	4116a4 <feof@plt+0xe9a4>  // b.any
  411694:	mov	w1, #0x1                   	// #1
  411698:	mov	x0, x21
  41169c:	bl	45500c <_obstack_newchunk@@Base>
  4116a0:	ldr	x8, [x21, #24]
  4116a4:	add	x9, x8, #0x1
  4116a8:	mov	w10, #0xa                   	// #10
  4116ac:	adrp	x12, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4116b0:	and	w11, w20, #0xff
  4116b4:	add	x12, x12, #0x3c4
  4116b8:	str	x9, [x21, #24]
  4116bc:	strb	w10, [x8]
  4116c0:	ldr	x8, [x19, #8]
  4116c4:	ldrh	w9, [x12, w11, uxtw #1]
  4116c8:	strb	wzr, [x19, #65]
  4116cc:	str	wzr, [x8, #200]
  4116d0:	tbnz	w9, #6, 411714 <feof@plt+0xea14>
  4116d4:	ldr	x8, [x19, #8]
  4116d8:	ldr	x21, [x8, #176]
  4116dc:	ldp	x8, x9, [x21, #24]
  4116e0:	cmp	x9, x8
  4116e4:	b.ne	4116f8 <feof@plt+0xe9f8>  // b.any
  4116e8:	mov	w1, #0x1                   	// #1
  4116ec:	mov	x0, x21
  4116f0:	bl	45500c <_obstack_newchunk@@Base>
  4116f4:	ldr	x8, [x21, #24]
  4116f8:	add	x9, x8, #0x1
  4116fc:	str	x9, [x21, #24]
  411700:	strb	w20, [x8]
  411704:	ldr	x8, [x19, #8]
  411708:	ldr	w9, [x8, #200]
  41170c:	add	w9, w9, #0x1
  411710:	str	w9, [x8, #200]
  411714:	ldp	x20, x19, [sp, #32]
  411718:	ldr	x21, [sp, #16]
  41171c:	ldp	x29, x30, [sp], #48
  411720:	ret
  411724:	stp	x29, x30, [sp, #-48]!
  411728:	str	x21, [sp, #16]
  41172c:	stp	x20, x19, [sp, #32]
  411730:	mov	x29, sp
  411734:	ldr	x21, [x0, #8]
  411738:	mov	x19, x0
  41173c:	ldr	x20, [x21, #176]
  411740:	ldp	x8, x9, [x20, #24]
  411744:	cmp	x9, x8
  411748:	b.ne	41175c <feof@plt+0xea5c>  // b.any
  41174c:	mov	w1, #0x1                   	// #1
  411750:	mov	x0, x20
  411754:	bl	45500c <_obstack_newchunk@@Base>
  411758:	ldr	x8, [x20, #24]
  41175c:	add	x9, x8, #0x1
  411760:	str	x9, [x20, #24]
  411764:	strb	wzr, [x8]
  411768:	ldr	x8, [x21, #176]
  41176c:	ldr	x9, [x19, #8]
  411770:	ldr	x0, [x8, #16]
  411774:	ldr	x1, [x9, #192]
  411778:	bl	402620 <fputs@plt>
  41177c:	ldr	x8, [x19, #8]
  411780:	ldr	x0, [x8, #176]
  411784:	ldp	x8, x1, [x0, #8]
  411788:	cmp	x1, x8
  41178c:	b.ls	4117a4 <feof@plt+0xeaa4>  // b.plast
  411790:	ldr	x8, [x0, #32]
  411794:	cmp	x1, x8
  411798:	b.cs	4117a4 <feof@plt+0xeaa4>  // b.hs, b.nlast
  41179c:	str	x1, [x0, #24]
  4117a0:	b	4117a8 <feof@plt+0xeaa8>
  4117a4:	bl	455194 <_obstack_free@@Base>
  4117a8:	ldr	x8, [x19, #8]
  4117ac:	ldr	x21, [sp, #16]
  4117b0:	str	wzr, [x8, #200]
  4117b4:	ldp	x20, x19, [sp, #32]
  4117b8:	ldp	x29, x30, [sp], #48
  4117bc:	ret
  4117c0:	stp	x29, x30, [sp, #-32]!
  4117c4:	stp	x20, x19, [sp, #16]
  4117c8:	mov	x29, sp
  4117cc:	ldr	x20, [x0, #8]
  4117d0:	ldr	x19, [x20, #176]
  4117d4:	ldp	x8, x9, [x19, #24]
  4117d8:	cmp	x9, x8
  4117dc:	b.ne	4117f0 <feof@plt+0xeaf0>  // b.any
  4117e0:	mov	w1, #0x1                   	// #1
  4117e4:	mov	x0, x19
  4117e8:	bl	45500c <_obstack_newchunk@@Base>
  4117ec:	ldr	x8, [x19, #24]
  4117f0:	add	x9, x8, #0x1
  4117f4:	str	x9, [x19, #24]
  4117f8:	strb	wzr, [x8]
  4117fc:	ldr	x8, [x20, #176]
  411800:	ldp	x20, x19, [sp, #16]
  411804:	ldr	x0, [x8, #16]
  411808:	ldp	x29, x30, [sp], #32
  41180c:	ret
  411810:	stp	x29, x30, [sp, #-32]!
  411814:	str	x19, [sp, #16]
  411818:	mov	x29, sp
  41181c:	ldr	x8, [x0, #8]
  411820:	mov	x19, x0
  411824:	ldr	x0, [x8, #176]
  411828:	ldp	x8, x1, [x0, #8]
  41182c:	cmp	x1, x8
  411830:	b.ls	411848 <feof@plt+0xeb48>  // b.plast
  411834:	ldr	x8, [x0, #32]
  411838:	cmp	x1, x8
  41183c:	b.cs	411848 <feof@plt+0xeb48>  // b.hs, b.nlast
  411840:	str	x1, [x0, #24]
  411844:	b	41184c <feof@plt+0xeb4c>
  411848:	bl	455194 <_obstack_free@@Base>
  41184c:	ldr	x8, [x19, #8]
  411850:	ldr	x19, [sp, #16]
  411854:	str	wzr, [x8, #200]
  411858:	ldp	x29, x30, [sp], #32
  41185c:	ret
  411860:	stp	x29, x30, [sp, #-64]!
  411864:	stp	x24, x23, [sp, #16]
  411868:	stp	x22, x21, [sp, #32]
  41186c:	stp	x20, x19, [sp, #48]
  411870:	mov	x29, sp
  411874:	ldr	x22, [x0, #8]
  411878:	mov	x19, x0
  41187c:	mov	w20, w1
  411880:	ldr	x21, [x22, #176]
  411884:	ldp	x8, x9, [x21, #24]
  411888:	cmp	x9, x8
  41188c:	b.ne	4118a0 <feof@plt+0xeba0>  // b.any
  411890:	mov	w1, #0x1                   	// #1
  411894:	mov	x0, x21
  411898:	bl	45500c <_obstack_newchunk@@Base>
  41189c:	ldr	x8, [x21, #24]
  4118a0:	add	x9, x8, #0x1
  4118a4:	str	x9, [x21, #24]
  4118a8:	strb	wzr, [x8]
  4118ac:	ldr	x8, [x22, #176]
  4118b0:	ldr	x9, [x19, #8]
  4118b4:	adrp	x24, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4118b8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4118bc:	ldr	x23, [x8, #16]
  4118c0:	ldr	x21, [x9, #192]
  4118c4:	add	x24, x24, #0x5c8
  4118c8:	add	x22, x22, #0x690
  4118cc:	b	411900 <feof@plt+0xec00>
  4118d0:	mov	w1, #0x2                   	// #2
  4118d4:	mov	w2, #0x1                   	// #1
  4118d8:	mov	x0, x22
  4118dc:	mov	x3, x21
  4118e0:	bl	402bf0 <fwrite@plt>
  4118e4:	mov	w0, #0x5c                  	// #92
  4118e8:	mov	x1, x21
  4118ec:	bl	4029a0 <fputc@plt>
  4118f0:	ldrb	w0, [x23]
  4118f4:	mov	x1, x21
  4118f8:	bl	4029a0 <fputc@plt>
  4118fc:	add	x23, x23, #0x1
  411900:	ldrb	w0, [x23]
  411904:	cmp	w0, #0x3d
  411908:	b.le	411934 <feof@plt+0xec34>
  41190c:	sub	w8, w0, #0x7b
  411910:	cmp	w8, #0x3
  411914:	b.cc	411954 <feof@plt+0xec54>  // b.lo, b.ul, b.last
  411918:	cmp	w0, #0x3e
  41191c:	b.eq	411954 <feof@plt+0xec54>  // b.none
  411920:	cmp	w0, #0x5c
  411924:	b.ne	4118f4 <feof@plt+0xebf4>  // b.any
  411928:	ldrb	w8, [x23, #1]
  41192c:	cbnz	w8, 4118e4 <feof@plt+0xebe4>
  411930:	b	4119a4 <feof@plt+0xeca4>
  411934:	cmp	w0, #0x22
  411938:	b.hi	41194c <feof@plt+0xec4c>  // b.pmore
  41193c:	adr	x8, 4118d0 <feof@plt+0xebd0>
  411940:	ldrb	w9, [x24, x0]
  411944:	add	x8, x8, x9, lsl #2
  411948:	br	x8
  41194c:	cmp	w0, #0x3c
  411950:	b.ne	4118f4 <feof@plt+0xebf4>  // b.any
  411954:	tbnz	w20, #0, 4118e4 <feof@plt+0xebe4>
  411958:	b	4118f4 <feof@plt+0xebf4>
  41195c:	ldr	x8, [x19, #8]
  411960:	ldr	x0, [x8, #176]
  411964:	ldp	x8, x1, [x0, #8]
  411968:	cmp	x1, x8
  41196c:	b.ls	411984 <feof@plt+0xec84>  // b.plast
  411970:	ldr	x8, [x0, #32]
  411974:	cmp	x1, x8
  411978:	b.cs	411984 <feof@plt+0xec84>  // b.hs, b.nlast
  41197c:	str	x1, [x0, #24]
  411980:	b	411988 <feof@plt+0xec88>
  411984:	bl	455194 <_obstack_free@@Base>
  411988:	ldr	x8, [x19, #8]
  41198c:	str	wzr, [x8, #200]
  411990:	ldp	x20, x19, [sp, #48]
  411994:	ldp	x22, x21, [sp, #32]
  411998:	ldp	x24, x23, [sp, #16]
  41199c:	ldp	x29, x30, [sp], #64
  4119a0:	ret
  4119a4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4119a8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4119ac:	add	x0, x0, #0x693
  4119b0:	add	x2, x2, #0x6ac
  4119b4:	mov	w1, #0x378                 	// #888
  4119b8:	bl	408b70 <feof@plt+0x5e70>
  4119bc:	stp	x29, x30, [sp, #-64]!
  4119c0:	stp	x24, x23, [sp, #16]
  4119c4:	stp	x22, x21, [sp, #32]
  4119c8:	stp	x20, x19, [sp, #48]
  4119cc:	mov	x29, sp
  4119d0:	ldr	w21, [x0, #32]
  4119d4:	cmp	w21, #0x1
  4119d8:	b.lt	411a9c <feof@plt+0xed9c>  // b.tstop
  4119dc:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4119e0:	ldrh	w22, [x8, #1028]
  4119e4:	mov	x19, x0
  4119e8:	mov	w23, #0xa                   	// #10
  4119ec:	mov	w24, #0x20                  	// #32
  4119f0:	b	411a18 <feof@plt+0xed18>
  4119f4:	add	x9, x8, #0x1
  4119f8:	str	x9, [x20, #24]
  4119fc:	strb	w24, [x8]
  411a00:	ldr	x8, [x19, #8]
  411a04:	ldr	w9, [x8, #200]
  411a08:	add	w9, w9, #0x1
  411a0c:	str	w9, [x8, #200]
  411a10:	subs	w21, w21, #0x1
  411a14:	b.eq	411a9c <feof@plt+0xed9c>  // b.none
  411a18:	ldr	w8, [x19, #40]
  411a1c:	cmp	w8, #0x1
  411a20:	b.lt	411a74 <feof@plt+0xed74>  // b.tstop
  411a24:	ldr	x8, [x19, #8]
  411a28:	ldr	w9, [x19, #28]
  411a2c:	ldr	w10, [x8, #200]
  411a30:	cmp	w9, w10
  411a34:	b.gt	411a74 <feof@plt+0xed74>
  411a38:	ldr	x20, [x8, #176]
  411a3c:	ldp	x8, x9, [x20, #24]
  411a40:	cmp	x9, x8
  411a44:	b.ne	411a58 <feof@plt+0xed58>  // b.any
  411a48:	mov	w1, #0x1                   	// #1
  411a4c:	mov	x0, x20
  411a50:	bl	45500c <_obstack_newchunk@@Base>
  411a54:	ldr	x8, [x20, #24]
  411a58:	add	x9, x8, #0x1
  411a5c:	str	x9, [x20, #24]
  411a60:	strb	w23, [x8]
  411a64:	ldr	x8, [x19, #8]
  411a68:	strb	wzr, [x19, #65]
  411a6c:	str	wzr, [x8, #200]
  411a70:	tbnz	w22, #6, 411a10 <feof@plt+0xed10>
  411a74:	ldr	x8, [x19, #8]
  411a78:	ldr	x20, [x8, #176]
  411a7c:	ldp	x8, x9, [x20, #24]
  411a80:	cmp	x9, x8
  411a84:	b.ne	4119f4 <feof@plt+0xecf4>  // b.any
  411a88:	mov	w1, #0x1                   	// #1
  411a8c:	mov	x0, x20
  411a90:	bl	45500c <_obstack_newchunk@@Base>
  411a94:	ldr	x8, [x20, #24]
  411a98:	b	4119f4 <feof@plt+0xecf4>
  411a9c:	ldp	x20, x19, [sp, #48]
  411aa0:	ldp	x22, x21, [sp, #32]
  411aa4:	ldp	x24, x23, [sp, #16]
  411aa8:	ldp	x29, x30, [sp], #64
  411aac:	ret
  411ab0:	sub	sp, sp, #0x1e0
  411ab4:	stp	x29, x30, [sp, #384]
  411ab8:	stp	x28, x27, [sp, #400]
  411abc:	stp	x26, x25, [sp, #416]
  411ac0:	stp	x24, x23, [sp, #432]
  411ac4:	stp	x22, x21, [sp, #448]
  411ac8:	stp	x20, x19, [sp, #464]
  411acc:	add	x29, sp, #0x180
  411ad0:	str	x1, [sp, #32]
  411ad4:	mov	x23, x0
  411ad8:	ldr	x27, [x23, #8]!
  411adc:	mov	x28, x0
  411ae0:	mov	x10, x27
  411ae4:	ldr	x8, [x27, #120]
  411ae8:	ldr	x9, [x10, #112]!
  411aec:	sub	x8, x8, x9
  411af0:	cmp	x8, #0x1e7
  411af4:	add	x8, x27, #0x58
  411af8:	stp	x8, x10, [sp, #88]
  411afc:	b.hi	411b14 <feof@plt+0xee14>  // b.pmore
  411b00:	ldr	x0, [sp, #88]
  411b04:	mov	w1, #0x1e8                 	// #488
  411b08:	bl	45500c <_obstack_newchunk@@Base>
  411b0c:	ldr	x8, [sp, #96]
  411b10:	ldr	x9, [x8]
  411b14:	ldr	x8, [x27, #104]
  411b18:	add	x10, x9, #0x1e8
  411b1c:	str	x10, [x27, #112]
  411b20:	cmp	x10, x8
  411b24:	b.ne	411b34 <feof@plt+0xee34>  // b.any
  411b28:	ldrb	w9, [x27, #168]
  411b2c:	orr	w9, w9, #0x2
  411b30:	strb	w9, [x27, #168]
  411b34:	ldr	x12, [x27, #136]
  411b38:	ldr	x13, [x27, #96]
  411b3c:	ldr	x11, [x27, #120]
  411b40:	add	x9, sp, #0x70
  411b44:	add	x10, x12, x10
  411b48:	bic	x10, x10, x12
  411b4c:	sub	x12, x10, x13
  411b50:	sub	x13, x11, x13
  411b54:	cmp	x12, x13
  411b58:	str	x10, [x27, #112]
  411b5c:	b.ls	411b6c <feof@plt+0xee6c>  // b.plast
  411b60:	ldr	x10, [sp, #96]
  411b64:	str	x11, [x10]
  411b68:	mov	x10, x11
  411b6c:	ldr	x11, [x27, #184]
  411b70:	str	x10, [x27, #104]
  411b74:	mov	x10, x8
  411b78:	movi	v0.2d, #0x0
  411b7c:	str	x11, [x10], #8
  411b80:	stp	x27, x10, [sp, #72]
  411b84:	str	x8, [x27, #184]
  411b88:	ldr	x8, [sp, #32]
  411b8c:	stp	q0, q0, [x9, #208]
  411b90:	stp	q0, q0, [x9, #176]
  411b94:	stp	q0, q0, [x9, #144]
  411b98:	str	q0, [x9, #128]
  411b9c:	stp	q0, q0, [sp, #208]
  411ba0:	stp	q0, q0, [sp, #176]
  411ba4:	stp	q0, q0, [sp, #144]
  411ba8:	stp	q0, q0, [sp, #112]
  411bac:	ldr	x24, [x8]
  411bb0:	ldrb	w8, [x24]
  411bb4:	cbz	w8, 4121fc <feof@plt+0xf4fc>
  411bb8:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1dd8>
  411bbc:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1dd8>
  411bc0:	str	x23, [sp, #40]
  411bc4:	mov	x23, x28
  411bc8:	mov	x20, xzr
  411bcc:	mov	w28, wzr
  411bd0:	add	x21, sp, #0x70
  411bd4:	add	x22, x22, #0x6db
  411bd8:	add	x19, x19, #0x5eb
  411bdc:	stp	wzr, wzr, [sp, #52]
  411be0:	str	wzr, [sp, #64]
  411be4:	b	411bfc <feof@plt+0xeefc>
  411be8:	ldr	x11, [sp, #96]
  411bec:	add	x10, x9, #0x1
  411bf0:	str	x10, [x11]
  411bf4:	strb	w8, [x9]
  411bf8:	ldrb	w8, [x24, #1]!
  411bfc:	and	w9, w8, #0xff
  411c00:	cmp	w9, #0x25
  411c04:	b.eq	411c34 <feof@plt+0xef34>  // b.none
  411c08:	cbz	w9, 412208 <feof@plt+0xf508>
  411c0c:	ldp	x9, x10, [x27, #112]
  411c10:	cmp	x10, x9
  411c14:	b.ne	411be8 <feof@plt+0xeee8>  // b.any
  411c18:	ldr	x0, [sp, #88]
  411c1c:	mov	w1, #0x1                   	// #1
  411c20:	bl	45500c <_obstack_newchunk@@Base>
  411c24:	ldr	x9, [sp, #96]
  411c28:	ldrb	w8, [x24]
  411c2c:	ldr	x9, [x9]
  411c30:	b	411be8 <feof@plt+0xeee8>
  411c34:	ldrb	w8, [x24, #1]
  411c38:	sub	w9, w8, #0x25
  411c3c:	cmp	w9, #0x2d
  411c40:	b.hi	411c8c <feof@plt+0xef8c>  // b.pmore
  411c44:	adr	x8, 411c54 <feof@plt+0xef54>
  411c48:	ldrb	w10, [x19, x9]
  411c4c:	add	x8, x8, x10, lsl #2
  411c50:	br	x8
  411c54:	ldp	x8, x9, [x27, #112]
  411c58:	cmp	x9, x8
  411c5c:	b.ne	411c74 <feof@plt+0xef74>  // b.any
  411c60:	ldr	x0, [sp, #88]
  411c64:	mov	w1, #0x1                   	// #1
  411c68:	bl	45500c <_obstack_newchunk@@Base>
  411c6c:	ldr	x8, [sp, #96]
  411c70:	ldr	x8, [x8]
  411c74:	ldr	x10, [sp, #96]
  411c78:	add	x9, x8, #0x1
  411c7c:	str	x9, [x10]
  411c80:	mov	w9, #0x25                  	// #37
  411c84:	strb	w9, [x8]
  411c88:	b	411efc <feof@plt+0xf1fc>
  411c8c:	cmp	w8, #0x6d
  411c90:	b.eq	411ea4 <feof@plt+0xf1a4>  // b.none
  411c94:	cbz	w8, 4131c8 <feof@plt+0x104c8>
  411c98:	ldp	x8, x9, [x27, #112]
  411c9c:	cmp	x9, x8
  411ca0:	b.ne	411cb8 <feof@plt+0xefb8>  // b.any
  411ca4:	ldr	x0, [sp, #88]
  411ca8:	mov	w1, #0x1                   	// #1
  411cac:	bl	45500c <_obstack_newchunk@@Base>
  411cb0:	ldr	x8, [sp, #96]
  411cb4:	ldr	x8, [x8]
  411cb8:	ldr	x10, [sp, #96]
  411cbc:	add	x9, x8, #0x1
  411cc0:	cmp	x20, #0x3c
  411cc4:	str	x9, [x10]
  411cc8:	strb	wzr, [x8]
  411ccc:	b.cs	413288 <feof@plt+0x10588>  // b.hs, b.nlast
  411cd0:	ldp	x8, x9, [x27, #104]
  411cd4:	add	x24, x24, #0x1
  411cd8:	cmp	x9, x8
  411cdc:	b.ne	411cec <feof@plt+0xefec>  // b.any
  411ce0:	ldrb	w10, [x27, #168]
  411ce4:	orr	w10, w10, #0x2
  411ce8:	strb	w10, [x27, #168]
  411cec:	ldr	x10, [x27, #136]
  411cf0:	ldr	x11, [x27, #96]
  411cf4:	ldr	x12, [x27, #120]
  411cf8:	add	x9, x10, x9
  411cfc:	bic	x9, x9, x10
  411d00:	sub	x13, x12, x11
  411d04:	sub	x10, x9, x11
  411d08:	cmp	x10, x13
  411d0c:	csel	x9, x12, x9, hi  // hi = pmore
  411d10:	stp	x9, x9, [x27, #104]
  411d14:	ldr	x9, [sp, #80]
  411d18:	str	x8, [x9, x20, lsl #3]
  411d1c:	ldrb	w8, [x24]
  411d20:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  411d24:	add	x9, x9, #0x3c4
  411d28:	ldrh	w8, [x9, x8, lsl #1]
  411d2c:	tbnz	w8, #2, 411f08 <feof@plt+0xf208>
  411d30:	ldr	w8, [sp, #56]
  411d34:	tbnz	w8, #0, 4132a0 <feof@plt+0x105a0>
  411d38:	ldr	w8, [sp, #52]
  411d3c:	mov	w9, #0x1                   	// #1
  411d40:	str	w9, [sp, #64]
  411d44:	mov	w19, w8
  411d48:	add	w8, w8, #0x1
  411d4c:	stp	w8, wzr, [sp, #52]
  411d50:	b	411f44 <feof@plt+0xf244>
  411d54:	ldrb	w0, [x23, #67]
  411d58:	bl	40bca0 <feof@plt+0x8fa0>
  411d5c:	b	411eb0 <feof@plt+0xf1b0>
  411d60:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  411d64:	ldr	x26, [x19, #1328]
  411d68:	mov	x0, x26
  411d6c:	bl	4026d0 <strlen@plt>
  411d70:	mov	x25, x0
  411d74:	ldp	x0, x8, [x27, #112]
  411d78:	sub	x8, x8, x0
  411d7c:	cmp	x8, x25
  411d80:	b.cs	411d9c <feof@plt+0xf09c>  // b.hs, b.nlast
  411d84:	ldr	x0, [sp, #88]
  411d88:	mov	x1, x25
  411d8c:	bl	45500c <_obstack_newchunk@@Base>
  411d90:	ldr	x8, [sp, #96]
  411d94:	ldr	x26, [x19, #1328]
  411d98:	ldr	x0, [x8]
  411d9c:	mov	x1, x26
  411da0:	mov	x2, x25
  411da4:	bl	402640 <memcpy@plt>
  411da8:	ldr	x8, [x27, #112]
  411dac:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  411db0:	mov	w2, #0x5                   	// #5
  411db4:	add	x1, x1, #0xb29
  411db8:	add	x8, x8, x25
  411dbc:	str	x8, [x27, #112]
  411dc0:	ldrb	w0, [x23, #67]
  411dc4:	bl	40bc1c <feof@plt+0x8f1c>
  411dc8:	mov	x25, x0
  411dcc:	bl	4026d0 <strlen@plt>
  411dd0:	mov	x26, x0
  411dd4:	ldp	x0, x8, [x27, #112]
  411dd8:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1dd8>
  411ddc:	add	x19, x19, #0x5eb
  411de0:	b	411ec0 <feof@plt+0xf1c0>
  411de4:	ldr	x8, [sp, #96]
  411de8:	ldr	x25, [x8]
  411dec:	b	411e44 <feof@plt+0xf144>
  411df0:	ldrb	w0, [x23, #67]
  411df4:	bl	40bca0 <feof@plt+0x8fa0>
  411df8:	mov	x25, x0
  411dfc:	bl	4026d0 <strlen@plt>
  411e00:	mov	x26, x0
  411e04:	ldp	x0, x8, [x27, #112]
  411e08:	sub	x8, x8, x0
  411e0c:	cmp	x8, x26
  411e10:	b.cs	411e28 <feof@plt+0xf128>  // b.hs, b.nlast
  411e14:	ldr	x0, [sp, #88]
  411e18:	mov	x1, x26
  411e1c:	bl	45500c <_obstack_newchunk@@Base>
  411e20:	ldr	x8, [sp, #96]
  411e24:	ldr	x0, [x8]
  411e28:	mov	x1, x25
  411e2c:	mov	x2, x26
  411e30:	bl	402640 <memcpy@plt>
  411e34:	ldr	x9, [sp, #96]
  411e38:	ldr	x8, [x9]
  411e3c:	add	x25, x8, x26
  411e40:	str	x25, [x9]
  411e44:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  411e48:	ldr	x27, [x8, #1336]
  411e4c:	mov	x0, x27
  411e50:	bl	4026d0 <strlen@plt>
  411e54:	ldr	x8, [sp, #72]
  411e58:	mov	x26, x0
  411e5c:	ldr	x8, [x8, #120]
  411e60:	sub	x8, x8, x25
  411e64:	cmp	x8, x0
  411e68:	b.cs	411e88 <feof@plt+0xf188>  // b.hs, b.nlast
  411e6c:	ldr	x0, [sp, #88]
  411e70:	mov	x1, x26
  411e74:	bl	45500c <_obstack_newchunk@@Base>
  411e78:	ldr	x8, [sp, #96]
  411e7c:	ldr	x25, [x8]
  411e80:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  411e84:	ldr	x27, [x8, #1336]
  411e88:	mov	x0, x25
  411e8c:	mov	x1, x27
  411e90:	mov	x2, x26
  411e94:	bl	402640 <memcpy@plt>
  411e98:	ldr	x9, [sp, #96]
  411e9c:	ldr	x27, [sp, #72]
  411ea0:	b	411ef0 <feof@plt+0xf1f0>
  411ea4:	ldr	x8, [sp, #32]
  411ea8:	ldr	w0, [x8, #16]
  411eac:	bl	4554b0 <_obstack_memory_used@@Base+0x288>
  411eb0:	mov	x25, x0
  411eb4:	bl	4026d0 <strlen@plt>
  411eb8:	mov	x26, x0
  411ebc:	ldp	x0, x8, [x27, #112]
  411ec0:	sub	x8, x8, x0
  411ec4:	cmp	x8, x26
  411ec8:	b.cs	411ee0 <feof@plt+0xf1e0>  // b.hs, b.nlast
  411ecc:	ldr	x0, [sp, #88]
  411ed0:	mov	x1, x26
  411ed4:	bl	45500c <_obstack_newchunk@@Base>
  411ed8:	ldr	x8, [sp, #96]
  411edc:	ldr	x0, [x8]
  411ee0:	mov	x1, x25
  411ee4:	mov	x2, x26
  411ee8:	bl	402640 <memcpy@plt>
  411eec:	ldr	x9, [sp, #96]
  411ef0:	ldr	x8, [x9]
  411ef4:	add	x8, x8, x26
  411ef8:	str	x8, [x9]
  411efc:	ldrb	w8, [x24, #2]!
  411f00:	cbnz	w8, 411bfc <feof@plt+0xeefc>
  411f04:	b	412208 <feof@plt+0xf508>
  411f08:	sub	x1, x29, #0x20
  411f0c:	mov	w2, #0xa                   	// #10
  411f10:	mov	x0, x24
  411f14:	bl	402af0 <strtoul@plt>
  411f18:	ldur	x8, [x29, #-32]
  411f1c:	ldrb	w9, [x8]
  411f20:	cmp	w9, #0x24
  411f24:	b.ne	4132b8 <feof@plt+0x105b8>  // b.any
  411f28:	ldr	w9, [sp, #64]
  411f2c:	tbnz	w9, #0, 4132d0 <feof@plt+0x105d0>
  411f30:	add	x24, x8, #0x1
  411f34:	mov	w8, #0x1                   	// #1
  411f38:	str	wzr, [sp, #64]
  411f3c:	sub	w19, w0, #0x1
  411f40:	str	w8, [sp, #56]
  411f44:	cmp	w19, #0x1e
  411f48:	b.cs	4132e8 <feof@plt+0x105e8>  // b.hs, b.nlast
  411f4c:	ldr	x8, [x21, w19, uxtw #3]
  411f50:	add	x10, sp, #0x70
  411f54:	cbnz	x8, 413300 <feof@plt+0x10600>
  411f58:	ldr	x9, [sp, #80]
  411f5c:	orr	x8, x20, #0x1
  411f60:	mov	w21, w19
  411f64:	add	x26, x9, x8, lsl #3
  411f68:	str	x26, [x10, x21, lsl #3]
  411f6c:	b	411f9c <feof@plt+0xf29c>
  411f70:	ldrb	w9, [x24]
  411f74:	ldr	x11, [sp, #96]
  411f78:	add	x10, x8, #0x1
  411f7c:	mov	w2, #0x6                   	// #6
  411f80:	mov	x0, x22
  411f84:	str	x10, [x11]
  411f88:	strb	w9, [x8]
  411f8c:	ldrb	w25, [x24], #1
  411f90:	mov	w1, w25
  411f94:	bl	402920 <memchr@plt>
  411f98:	cbz	x0, 411fc0 <feof@plt+0xf2c0>
  411f9c:	ldp	x8, x9, [x27, #112]
  411fa0:	cmp	x9, x8
  411fa4:	b.ne	411f70 <feof@plt+0xf270>  // b.any
  411fa8:	ldr	x0, [sp, #88]
  411fac:	mov	w1, #0x1                   	// #1
  411fb0:	bl	45500c <_obstack_newchunk@@Base>
  411fb4:	ldr	x8, [sp, #96]
  411fb8:	ldr	x8, [x8]
  411fbc:	b	411f70 <feof@plt+0xf270>
  411fc0:	cmp	w25, #0x2e
  411fc4:	b.ne	412060 <feof@plt+0xf360>  // b.any
  411fc8:	ldrb	w8, [x24]
  411fcc:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  411fd0:	add	x9, x9, #0x3c4
  411fd4:	ldrh	w9, [x9, x8, lsl #1]
  411fd8:	tbnz	w9, #2, 412070 <feof@plt+0xf370>
  411fdc:	cmp	w8, #0x2a
  411fe0:	b.ne	413318 <feof@plt+0x10618>  // b.any
  411fe4:	ldp	x8, x9, [x27, #112]
  411fe8:	cmp	x9, x8
  411fec:	b.ne	412004 <feof@plt+0xf304>  // b.any
  411ff0:	ldr	x0, [sp, #88]
  411ff4:	mov	w1, #0x1                   	// #1
  411ff8:	bl	45500c <_obstack_newchunk@@Base>
  411ffc:	ldr	x8, [sp, #96]
  412000:	ldr	x8, [x8]
  412004:	ldr	x10, [sp, #96]
  412008:	add	x9, x8, #0x1
  41200c:	str	x9, [x10]
  412010:	mov	w9, #0x2a                  	// #42
  412014:	strb	w9, [x8]
  412018:	ldrb	w8, [x24, #1]!
  41201c:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  412020:	add	x9, x9, #0x3c4
  412024:	ldrh	w8, [x9, x8, lsl #1]
  412028:	tbnz	w8, #2, 4120d8 <feof@plt+0xf3d8>
  41202c:	ldr	w8, [sp, #56]
  412030:	cbnz	w8, 413330 <feof@plt+0x10630>
  412034:	add	x8, sp, #0x70
  412038:	ldr	x8, [x8, x21, lsl #3]
  41203c:	add	x21, sp, #0x70
  412040:	add	w9, w19, #0x1
  412044:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412048:	str	x8, [x21, w9, uxtw #3]
  41204c:	ldr	w8, [sp, #52]
  412050:	add	x19, x19, #0x5eb
  412054:	add	w8, w8, #0x1
  412058:	str	w8, [sp, #52]
  41205c:	b	41212c <feof@plt+0xf42c>
  412060:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412064:	add	x21, sp, #0x70
  412068:	add	x19, x19, #0x5eb
  41206c:	b	412170 <feof@plt+0xf470>
  412070:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412074:	add	x21, sp, #0x70
  412078:	add	x19, x19, #0x5eb
  41207c:	b	4120a8 <feof@plt+0xf3a8>
  412080:	ldrb	w9, [x24]
  412084:	ldr	x11, [sp, #96]
  412088:	add	x10, x8, #0x1
  41208c:	str	x10, [x11]
  412090:	strb	w9, [x8]
  412094:	ldrb	w8, [x24], #1
  412098:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41209c:	add	x9, x9, #0x3c4
  4120a0:	ldrh	w9, [x9, x8, lsl #1]
  4120a4:	tbz	w9, #2, 4120cc <feof@plt+0xf3cc>
  4120a8:	ldp	x8, x9, [x27, #112]
  4120ac:	cmp	x9, x8
  4120b0:	b.ne	412080 <feof@plt+0xf380>  // b.any
  4120b4:	ldr	x0, [sp, #88]
  4120b8:	mov	w1, #0x1                   	// #1
  4120bc:	bl	45500c <_obstack_newchunk@@Base>
  4120c0:	ldr	x8, [sp, #96]
  4120c4:	ldr	x8, [x8]
  4120c8:	b	412080 <feof@plt+0xf380>
  4120cc:	cmp	w8, #0x73
  4120d0:	b.eq	412170 <feof@plt+0xf470>  // b.none
  4120d4:	b	413348 <feof@plt+0x10648>
  4120d8:	sub	x1, x29, #0x20
  4120dc:	mov	w2, #0xa                   	// #10
  4120e0:	mov	x0, x24
  4120e4:	bl	402af0 <strtoul@plt>
  4120e8:	cmp	w19, w0
  4120ec:	b.ne	413360 <feof@plt+0x10660>  // b.any
  4120f0:	ldr	w8, [sp, #64]
  4120f4:	adrp	x19, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4120f8:	add	x19, x19, #0x5eb
  4120fc:	cbnz	w8, 413378 <feof@plt+0x10678>
  412100:	ldur	x8, [x29, #-32]
  412104:	ldrb	w9, [x8]
  412108:	cmp	w9, #0x24
  41210c:	b.ne	413390 <feof@plt+0x10690>  // b.any
  412110:	add	x9, sp, #0x70
  412114:	ldr	x9, [x9, x21, lsl #3]
  412118:	mov	w10, #0xffffffff            	// #-1
  41211c:	add	x21, sp, #0x70
  412120:	add	x10, x0, x10
  412124:	add	x24, x8, #0x1
  412128:	str	x9, [x21, w10, uxtw #3]
  41212c:	ldrb	w8, [x24]
  412130:	cmp	w8, #0x73
  412134:	b.ne	4133a8 <feof@plt+0x106a8>  // b.any
  412138:	ldp	x8, x9, [x27, #112]
  41213c:	cmp	x9, x8
  412140:	b.ne	412158 <feof@plt+0xf458>  // b.any
  412144:	ldr	x0, [sp, #88]
  412148:	mov	w1, #0x1                   	// #1
  41214c:	bl	45500c <_obstack_newchunk@@Base>
  412150:	ldr	x8, [sp, #96]
  412154:	ldr	x8, [x8]
  412158:	ldr	x10, [sp, #96]
  41215c:	add	x9, x8, #0x1
  412160:	add	x24, x24, #0x1
  412164:	str	x9, [x10]
  412168:	mov	w9, #0x73                  	// #115
  41216c:	strb	w9, [x8]
  412170:	ldrb	w8, [x24]
  412174:	cbz	w8, 412204 <feof@plt+0xf504>
  412178:	ldp	x8, x9, [x27, #112]
  41217c:	cmp	x9, x8
  412180:	b.ne	412198 <feof@plt+0xf498>  // b.any
  412184:	ldr	x0, [sp, #88]
  412188:	mov	w1, #0x1                   	// #1
  41218c:	bl	45500c <_obstack_newchunk@@Base>
  412190:	ldr	x8, [sp, #96]
  412194:	ldr	x8, [x8]
  412198:	add	x9, x8, #0x1
  41219c:	str	x9, [x27, #112]
  4121a0:	strb	wzr, [x8]
  4121a4:	ldp	x8, x9, [x27, #104]
  4121a8:	cmp	x9, x8
  4121ac:	b.ne	4121bc <feof@plt+0xf4bc>  // b.any
  4121b0:	ldrb	w10, [x27, #168]
  4121b4:	orr	w10, w10, #0x2
  4121b8:	strb	w10, [x27, #168]
  4121bc:	ldr	x10, [x27, #136]
  4121c0:	ldr	x11, [x27, #96]
  4121c4:	ldr	x12, [x27, #120]
  4121c8:	add	x20, x20, #0x2
  4121cc:	add	x9, x10, x9
  4121d0:	bic	x9, x9, x10
  4121d4:	sub	x13, x12, x11
  4121d8:	sub	x10, x9, x11
  4121dc:	cmp	x10, x13
  4121e0:	csel	x9, x12, x9, hi  // hi = pmore
  4121e4:	stp	x9, x9, [x27, #104]
  4121e8:	str	x8, [x26]
  4121ec:	ldrb	w8, [x24]
  4121f0:	add	w28, w28, #0x2
  4121f4:	cbnz	w8, 411bfc <feof@plt+0xeefc>
  4121f8:	b	412208 <feof@plt+0xf508>
  4121fc:	mov	w20, wzr
  412200:	b	412210 <feof@plt+0xf510>
  412204:	orr	w20, w28, #0x1
  412208:	mov	x28, x23
  41220c:	ldr	x23, [sp, #40]
  412210:	ldp	x8, x9, [x27, #112]
  412214:	cmp	x9, x8
  412218:	b.ne	412230 <feof@plt+0xf530>  // b.any
  41221c:	ldr	x0, [sp, #88]
  412220:	mov	w1, #0x1                   	// #1
  412224:	bl	45500c <_obstack_newchunk@@Base>
  412228:	ldr	x8, [sp, #96]
  41222c:	ldr	x8, [x8]
  412230:	ldr	x10, [sp, #96]
  412234:	add	x9, x8, #0x1
  412238:	cmp	w20, #0x3c
  41223c:	str	x9, [x10]
  412240:	strb	wzr, [x8]
  412244:	b.cs	413270 <feof@plt+0x10570>  // b.hs, b.nlast
  412248:	ldp	x8, x9, [x27, #104]
  41224c:	cmp	x9, x8
  412250:	b.ne	412260 <feof@plt+0xf560>  // b.any
  412254:	ldrb	w10, [x27, #168]
  412258:	orr	w10, w10, #0x2
  41225c:	strb	w10, [x27, #168]
  412260:	ldr	x10, [x27, #136]
  412264:	ldr	x11, [x27, #96]
  412268:	ldr	x12, [x27, #120]
  41226c:	add	x9, x10, x9
  412270:	bic	x9, x9, x10
  412274:	sub	x10, x12, x11
  412278:	sub	x11, x9, x11
  41227c:	cmp	x11, x10
  412280:	csel	x9, x12, x9, hi  // hi = pmore
  412284:	stp	x9, x9, [x27, #104]
  412288:	ldr	x9, [sp, #80]
  41228c:	adrp	x11, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412290:	ldr	d0, [x11, #1672]
  412294:	add	w10, w20, #0x1
  412298:	str	x8, [x9, w20, uxtw #3]
  41229c:	ldr	x8, [sp, #88]
  4122a0:	str	xzr, [x9, w10, uxtw #3]
  4122a4:	str	x8, [x27, #176]
  4122a8:	ldur	x8, [x28, #36]
  4122ac:	stur	d0, [x28, #36]
  4122b0:	ldr	x11, [sp, #112]
  4122b4:	str	x8, [sp, #24]
  4122b8:	cbz	x11, 4130e8 <feof@plt+0x103e8>
  4122bc:	ldr	x8, [sp, #32]
  4122c0:	add	x9, sp, #0x68
  4122c4:	mov	w22, wzr
  4122c8:	add	x8, x8, #0x8
  4122cc:	str	x8, [sp, #56]
  4122d0:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4122d4:	add	x8, x8, #0x404
  4122d8:	ldrh	w10, [x8, #24]
  4122dc:	ldrh	w8, [x8]
  4122e0:	str	w10, [sp, #52]
  4122e4:	str	w8, [sp, #40]
  4122e8:	orr	x8, x9, #0x1
  4122ec:	str	x8, [sp, #16]
  4122f0:	b	41234c <feof@plt+0xf64c>
  4122f4:	add	x9, x8, #0x1
  4122f8:	str	x9, [x27, #112]
  4122fc:	strb	wzr, [x8]
  412300:	ldp	x8, x9, [x27, #104]
  412304:	cmp	x9, x8
  412308:	b.eq	4124d8 <feof@plt+0xf7d8>  // b.none
  41230c:	ldr	x10, [x27, #136]
  412310:	ldr	x11, [x27, #96]
  412314:	ldr	x12, [x27, #120]
  412318:	add	x9, x10, x9
  41231c:	bic	x9, x9, x10
  412320:	sub	x13, x12, x11
  412324:	sub	x10, x9, x11
  412328:	cmp	x10, x13
  41232c:	csel	x9, x12, x9, hi  // hi = pmore
  412330:	stp	x9, x9, [x27, #104]
  412334:	add	x10, sp, #0x70
  412338:	ldr	x9, [x10, w22, uxtw #3]
  41233c:	add	w22, w22, #0x1
  412340:	str	x8, [x9]
  412344:	ldr	x11, [x10, w22, uxtw #3]
  412348:	cbz	x11, 4130e8 <feof@plt+0x103e8>
  41234c:	strb	wzr, [sp, #108]
  412350:	ldr	x9, [x11]
  412354:	mov	w8, wzr
  412358:	mov	w26, wzr
  41235c:	mov	w19, wzr
  412360:	mov	w21, wzr
  412364:	mov	w27, wzr
  412368:	add	x25, x9, #0x1
  41236c:	ldurb	w9, [x25, #-1]
  412370:	cmp	w9, #0x6b
  412374:	b.le	4123a8 <feof@plt+0xf6a8>
  412378:	cmp	w9, #0x6c
  41237c:	b.eq	4123d8 <feof@plt+0xf6d8>  // b.none
  412380:	cmp	w9, #0x77
  412384:	b.eq	4123ec <feof@plt+0xf6ec>  // b.none
  412388:	cmp	w9, #0x71
  41238c:	b.ne	4123fc <feof@plt+0xf6fc>  // b.any
  412390:	tst	w8, #0xff
  412394:	b.ne	413138 <feof@plt+0x10438>  // b.any
  412398:	mov	w8, #0x1                   	// #1
  41239c:	strb	w8, [sp, #108]
  4123a0:	add	x25, x25, #0x1
  4123a4:	b	41236c <feof@plt+0xf66c>
  4123a8:	cmp	w9, #0x23
  4123ac:	b.eq	4123c8 <feof@plt+0xf6c8>  // b.none
  4123b0:	cmp	w9, #0x2b
  4123b4:	b.ne	4123fc <feof@plt+0xf6fc>  // b.any
  4123b8:	tbnz	w19, #0, 413150 <feof@plt+0x10450>
  4123bc:	mov	w19, #0x1                   	// #1
  4123c0:	add	x25, x25, #0x1
  4123c4:	b	41236c <feof@plt+0xf66c>
  4123c8:	tbnz	w26, #0, 413168 <feof@plt+0x10468>
  4123cc:	mov	w26, #0x1                   	// #1
  4123d0:	add	x25, x25, #0x1
  4123d4:	b	41236c <feof@plt+0xf66c>
  4123d8:	cmp	w27, #0x2
  4123dc:	b.ge	413180 <feof@plt+0x10480>  // b.tcont
  4123e0:	add	w27, w27, #0x1
  4123e4:	add	x25, x25, #0x1
  4123e8:	b	41236c <feof@plt+0xf66c>
  4123ec:	tbnz	w21, #0, 413198 <feof@plt+0x10498>
  4123f0:	mov	w21, #0x1                   	// #1
  4123f4:	add	x25, x25, #0x1
  4123f8:	b	41236c <feof@plt+0xf66c>
  4123fc:	cbz	w27, 412408 <feof@plt+0xf708>
  412400:	eor	w10, w21, #0x1
  412404:	tbz	w10, #0, 4131b0 <feof@plt+0x104b0>
  412408:	tst	w8, #0xff
  41240c:	sub	x2, x25, #0x1
  412410:	str	x11, [sp, #64]
  412414:	b.eq	412484 <feof@plt+0xf784>  // b.none
  412418:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  41241c:	ldr	x20, [x8, #1328]
  412420:	mov	w24, w22
  412424:	mov	x22, x23
  412428:	ldrb	w23, [x28, #67]
  41242c:	mov	x0, x20
  412430:	str	x2, [sp, #80]
  412434:	bl	4026d0 <strlen@plt>
  412438:	add	x2, x20, x0
  41243c:	mov	x0, x28
  412440:	mov	x1, x20
  412444:	bl	413e10 <feof@plt+0x11110>
  412448:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41244c:	mov	w2, #0x5                   	// #5
  412450:	mov	w0, w23
  412454:	add	x1, x1, #0xb29
  412458:	mov	x23, x22
  41245c:	mov	w22, w24
  412460:	bl	40bc1c <feof@plt+0x8f1c>
  412464:	mov	x20, x0
  412468:	bl	4026d0 <strlen@plt>
  41246c:	add	x2, x20, x0
  412470:	mov	x0, x28
  412474:	mov	x1, x20
  412478:	bl	413e10 <feof@plt+0x11110>
  41247c:	ldr	x2, [sp, #80]
  412480:	ldrb	w9, [x2]
  412484:	sub	w8, w9, #0x2e
  412488:	cmp	w8, #0x4a
  41248c:	b.hi	412760 <feof@plt+0xfa60>  // b.pmore
  412490:	adrp	x11, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412494:	add	x11, x11, #0x619
  412498:	adr	x9, 4124a8 <feof@plt+0xf7a8>
  41249c:	ldrb	w10, [x11, x8]
  4124a0:	add	x9, x9, x10, lsl #2
  4124a4:	br	x9
  4124a8:	tbz	w21, #0, 4125b8 <feof@plt+0xf8b8>
  4124ac:	ldr	x8, [sp, #56]
  4124b0:	ldr	x8, [x8]
  4124b4:	ldrsw	x9, [x8, #24]
  4124b8:	tbz	w9, #31, 412840 <feof@plt+0xfb40>
  4124bc:	add	w10, w9, #0x8
  4124c0:	cmn	w9, #0x8
  4124c4:	str	w10, [x8, #24]
  4124c8:	b.gt	412840 <feof@plt+0xfb40>
  4124cc:	ldr	x8, [x8, #8]
  4124d0:	add	x9, x8, x9
  4124d4:	b	41284c <feof@plt+0xfb4c>
  4124d8:	ldrb	w10, [x27, #168]
  4124dc:	orr	w10, w10, #0x2
  4124e0:	strb	w10, [x27, #168]
  4124e4:	b	41230c <feof@plt+0xf60c>
  4124e8:	tbz	w21, #0, 412bb4 <feof@plt+0xfeb4>
  4124ec:	ldr	x8, [sp, #56]
  4124f0:	ldr	x10, [x23]
  4124f4:	ldr	x8, [x8]
  4124f8:	add	x0, x10, #0xcc
  4124fc:	ldrsw	x9, [x8, #24]
  412500:	tbz	w9, #31, 412ae0 <feof@plt+0xfde0>
  412504:	add	w10, w9, #0x8
  412508:	cmn	w9, #0x8
  41250c:	str	w10, [x8, #24]
  412510:	b.gt	412ae0 <feof@plt+0xfde0>
  412514:	ldr	x8, [x8, #8]
  412518:	add	x9, x8, x9
  41251c:	b	412aec <feof@plt+0xfdec>
  412520:	ldr	x8, [sp, #56]
  412524:	ldr	x10, [x23]
  412528:	ldr	x8, [x8]
  41252c:	add	x0, x10, #0xcc
  412530:	ldrsw	x9, [x8, #28]
  412534:	tbz	w9, #31, 41279c <feof@plt+0xfa9c>
  412538:	add	w10, w9, #0x10
  41253c:	cmn	w9, #0x10
  412540:	str	w10, [x8, #28]
  412544:	b.gt	41279c <feof@plt+0xfa9c>
  412548:	ldr	x8, [x8, #16]
  41254c:	add	x9, x8, x9
  412550:	b	4127a8 <feof@plt+0xfaa8>
  412554:	tbz	w21, #0, 412bfc <feof@plt+0xfefc>
  412558:	ldr	x8, [sp, #56]
  41255c:	ldr	x10, [x23]
  412560:	ldr	x8, [x8]
  412564:	add	x0, x10, #0xcc
  412568:	ldrsw	x9, [x8, #24]
  41256c:	tbz	w9, #31, 412cc8 <feof@plt+0xffc8>
  412570:	add	w10, w9, #0x8
  412574:	cmn	w9, #0x8
  412578:	str	w10, [x8, #24]
  41257c:	b.gt	412cc8 <feof@plt+0xffc8>
  412580:	ldr	x8, [x8, #8]
  412584:	add	x9, x8, x9
  412588:	b	412cd4 <feof@plt+0xffd4>
  41258c:	ldr	x8, [sp, #56]
  412590:	ldr	x8, [x8]
  412594:	ldrsw	x9, [x8, #24]
  412598:	tbz	w9, #31, 4127c0 <feof@plt+0xfac0>
  41259c:	add	w10, w9, #0x8
  4125a0:	cmn	w9, #0x8
  4125a4:	str	w10, [x8, #24]
  4125a8:	b.gt	4127c0 <feof@plt+0xfac0>
  4125ac:	ldr	x8, [x8, #8]
  4125b0:	add	x9, x8, x9
  4125b4:	b	4127cc <feof@plt+0xfacc>
  4125b8:	cmp	w27, #0x2
  4125bc:	b.eq	412dec <feof@plt+0x100ec>  // b.none
  4125c0:	cmp	w27, #0x1
  4125c4:	b.eq	412db8 <feof@plt+0x100b8>  // b.none
  4125c8:	cbnz	w27, 412c98 <feof@plt+0xff98>
  4125cc:	ldr	x8, [sp, #56]
  4125d0:	ldr	x10, [x23]
  4125d4:	ldr	x8, [x8]
  4125d8:	add	x0, x10, #0xcc
  4125dc:	ldrsw	x9, [x8, #24]
  4125e0:	tbz	w9, #31, 412e7c <feof@plt+0x1017c>
  4125e4:	add	w10, w9, #0x8
  4125e8:	cmn	w9, #0x8
  4125ec:	str	w10, [x8, #24]
  4125f0:	b.gt	412e7c <feof@plt+0x1017c>
  4125f4:	ldr	x8, [x8, #8]
  4125f8:	add	x9, x8, x9
  4125fc:	b	412e88 <feof@plt+0x10188>
  412600:	tbz	w21, #0, 412c50 <feof@plt+0xff50>
  412604:	ldr	x8, [sp, #56]
  412608:	ldr	x10, [x23]
  41260c:	ldr	x8, [x8]
  412610:	add	x0, x10, #0xcc
  412614:	ldrsw	x9, [x8, #24]
  412618:	tbz	w9, #31, 412b04 <feof@plt+0xfe04>
  41261c:	add	w10, w9, #0x8
  412620:	cmn	w9, #0x8
  412624:	str	w10, [x8, #24]
  412628:	b.gt	412b04 <feof@plt+0xfe04>
  41262c:	ldr	x8, [x8, #8]
  412630:	add	x9, x8, x9
  412634:	b	412b10 <feof@plt+0xfe10>
  412638:	ldr	x8, [sp, #56]
  41263c:	ldr	x10, [x23]
  412640:	ldr	x8, [x8]
  412644:	add	x0, x10, #0xcc
  412648:	ldrsw	x9, [x8, #24]
  41264c:	tbz	w9, #31, 41286c <feof@plt+0xfb6c>
  412650:	add	w10, w9, #0x8
  412654:	cmn	w9, #0x8
  412658:	str	w10, [x8, #24]
  41265c:	b.gt	41286c <feof@plt+0xfb6c>
  412660:	ldr	x8, [x8, #8]
  412664:	add	x9, x8, x9
  412668:	b	412878 <feof@plt+0xfb78>
  41266c:	ldrb	w8, [x25]
  412670:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  412674:	add	x9, x9, #0x3c4
  412678:	ldrh	w9, [x9, x8, lsl #1]
  41267c:	tbnz	w9, #2, 412ca0 <feof@plt+0xffa0>
  412680:	cmp	w8, #0x2a
  412684:	b.ne	4131e0 <feof@plt+0x104e0>  // b.any
  412688:	ldrb	w8, [x25, #1]
  41268c:	ldr	x11, [sp, #64]
  412690:	cmp	w8, #0x73
  412694:	b.ne	4131f8 <feof@plt+0x104f8>  // b.any
  412698:	ldr	x8, [sp, #56]
  41269c:	ldr	x27, [sp, #72]
  4126a0:	ldr	x8, [x8]
  4126a4:	ldrsw	x9, [x8, #24]
  4126a8:	tbz	w9, #31, 412cec <feof@plt+0xffec>
  4126ac:	add	w10, w9, #0x8
  4126b0:	cmn	w9, #0x8
  4126b4:	str	w10, [x8, #24]
  4126b8:	b.gt	412cec <feof@plt+0xffec>
  4126bc:	ldr	x8, [x8, #8]
  4126c0:	add	x9, x8, x9
  4126c4:	b	412cf8 <feof@plt+0xfff8>
  4126c8:	ldr	x8, [sp, #56]
  4126cc:	ldr	x8, [x8]
  4126d0:	ldrsw	x9, [x8, #24]
  4126d4:	tbz	w9, #31, 412890 <feof@plt+0xfb90>
  4126d8:	add	w10, w9, #0x8
  4126dc:	cmn	w9, #0x8
  4126e0:	str	w10, [x8, #24]
  4126e4:	b.gt	412890 <feof@plt+0xfb90>
  4126e8:	ldr	x8, [x8, #8]
  4126ec:	mov	w26, w22
  4126f0:	add	x9, x8, x9
  4126f4:	b	4128a0 <feof@plt+0xfba0>
  4126f8:	ldr	x8, [sp, #56]
  4126fc:	ldrb	w10, [sp, #108]
  412700:	ldr	x8, [x8]
  412704:	ldrsw	x9, [x8, #24]
  412708:	cbz	w10, 412d80 <feof@plt+0x10080>
  41270c:	ldr	x27, [sp, #72]
  412710:	tbz	w9, #31, 412b28 <feof@plt+0xfe28>
  412714:	add	w10, w9, #0x8
  412718:	cmn	w9, #0x8
  41271c:	str	w10, [x8, #24]
  412720:	b.gt	412b28 <feof@plt+0xfe28>
  412724:	ldr	x8, [x8, #8]
  412728:	add	x9, x8, x9
  41272c:	b	412b34 <feof@plt+0xfe34>
  412730:	ldr	x8, [sp, #56]
  412734:	ldr	x9, [x8]
  412738:	ldrb	w8, [x28, #67]
  41273c:	ldrsw	x10, [x9, #24]
  412740:	tbz	w10, #31, 412aa4 <feof@plt+0xfda4>
  412744:	add	w11, w10, #0x8
  412748:	cmn	w10, #0x8
  41274c:	str	w11, [x9, #24]
  412750:	b.gt	412aa4 <feof@plt+0xfda4>
  412754:	ldr	x9, [x9, #8]
  412758:	add	x10, x9, x10
  41275c:	b	412ab0 <feof@plt+0xfdb0>
  412760:	ldr	x8, [x28, #48]
  412764:	cbz	x8, 413210 <feof@plt+0x10510>
  412768:	ldr	x9, [sp, #64]
  41276c:	ldr	x1, [sp, #32]
  412770:	and	w4, w21, #0x1
  412774:	and	w5, w19, #0x1
  412778:	and	w6, w26, #0x1
  41277c:	add	x7, sp, #0x6c
  412780:	mov	x0, x28
  412784:	mov	w3, w27
  412788:	str	x9, [sp]
  41278c:	blr	x8
  412790:	ldr	x27, [sp, #72]
  412794:	tbnz	w0, #0, 41307c <feof@plt+0x1037c>
  412798:	b	413228 <feof@plt+0x10528>
  41279c:	ldr	x9, [x8]
  4127a0:	add	x10, x9, #0x8
  4127a4:	str	x10, [x8]
  4127a8:	ldr	d0, [x9]
  4127ac:	ldr	x27, [sp, #72]
  4127b0:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  4127b4:	add	x1, x1, #0x2a6
  4127b8:	bl	402880 <sprintf@plt>
  4127bc:	b	41305c <feof@plt+0x1035c>
  4127c0:	ldr	x9, [x8]
  4127c4:	add	x10, x9, #0x8
  4127c8:	str	x10, [x8]
  4127cc:	ldr	w1, [x9]
  4127d0:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4127d4:	add	x9, x9, #0x3c4
  4127d8:	ldr	x27, [sp, #72]
  4127dc:	and	x8, x1, #0xff
  4127e0:	ldrh	w8, [x9, x8, lsl #1]
  4127e4:	tbnz	w8, #4, 412c44 <feof@plt+0xff44>
  4127e8:	ldrb	w8, [sp, #108]
  4127ec:	cbz	w8, 412c44 <feof@plt+0xff44>
  4127f0:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4127f4:	and	x8, x1, #0xff
  4127f8:	add	x9, x9, #0x3c4
  4127fc:	ldrh	w8, [x9, x8, lsl #1]
  412800:	strb	w1, [sp, #104]
  412804:	strb	wzr, [sp, #105]
  412808:	tbnz	w8, #4, 412e20 <feof@plt+0x10120>
  41280c:	and	w2, w1, #0xff
  412810:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412814:	sub	x0, x29, #0x20
  412818:	add	x1, x1, #0x736
  41281c:	bl	402880 <sprintf@plt>
  412820:	sub	x8, x29, #0x20
  412824:	add	x2, x8, w0, sxtw
  412828:	sub	x1, x29, #0x20
  41282c:	mov	x0, x28
  412830:	bl	413e10 <feof@plt+0x11110>
  412834:	ldr	x2, [sp, #16]
  412838:	mov	x1, x2
  41283c:	b	412e28 <feof@plt+0x10128>
  412840:	ldr	x9, [x8]
  412844:	add	x10, x9, #0x8
  412848:	str	x10, [x8]
  41284c:	ldr	x8, [x28, #8]
  412850:	ldr	x27, [sp, #72]
  412854:	ldr	x2, [x9]
  412858:	add	x0, x8, #0xcc
  41285c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412860:	add	x1, x1, #0x6e1
  412864:	bl	402880 <sprintf@plt>
  412868:	b	41305c <feof@plt+0x1035c>
  41286c:	ldr	x9, [x8]
  412870:	add	x10, x9, #0x8
  412874:	str	x10, [x8]
  412878:	ldr	x2, [x9]
  41287c:	ldr	x27, [sp, #72]
  412880:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412884:	add	x1, x1, #0x6f3
  412888:	bl	402880 <sprintf@plt>
  41288c:	b	41305c <feof@plt+0x1035c>
  412890:	ldr	x9, [x8]
  412894:	mov	w26, w22
  412898:	add	x10, x9, #0x8
  41289c:	str	x10, [x8]
  4128a0:	ldr	x8, [sp, #56]
  4128a4:	ldr	x22, [x9]
  4128a8:	ldr	x27, [sp, #72]
  4128ac:	ldr	x8, [x8]
  4128b0:	ldrsw	x10, [x8, #24]
  4128b4:	tbz	w10, #31, 4128dc <feof@plt+0xfbdc>
  4128b8:	add	w9, w10, #0x8
  4128bc:	cmn	w10, #0x8
  4128c0:	str	w9, [x8, #24]
  4128c4:	b.gt	4128dc <feof@plt+0xfbdc>
  4128c8:	ldr	x8, [x8, #8]
  4128cc:	add	x9, x8, x10
  4128d0:	ldr	w25, [x9]
  4128d4:	cbnz	w25, 4128f0 <feof@plt+0xfbf0>
  4128d8:	b	412a9c <feof@plt+0xfd9c>
  4128dc:	ldr	x9, [x8]
  4128e0:	add	x10, x9, #0x8
  4128e4:	str	x10, [x8]
  4128e8:	ldr	w25, [x9]
  4128ec:	cbz	w25, 412a9c <feof@plt+0xfd9c>
  4128f0:	mov	x19, xzr
  4128f4:	sub	w21, w25, #0x1
  4128f8:	b	412928 <feof@plt+0xfc28>
  4128fc:	add	x9, x8, #0x1
  412900:	str	x9, [x24, #24]
  412904:	mov	w9, #0x20                  	// #32
  412908:	strb	w9, [x8]
  41290c:	ldr	x8, [x23]
  412910:	ldr	w9, [x8, #200]
  412914:	add	w9, w9, #0x1
  412918:	str	w9, [x8, #200]
  41291c:	add	x19, x19, #0x1
  412920:	cmp	x25, x19
  412924:	b.eq	412a9c <feof@plt+0xfd9c>  // b.none
  412928:	ldr	x8, [x28, #8]
  41292c:	ldr	w2, [x22, x19, lsl #2]
  412930:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412934:	add	x1, x1, #0xe3e
  412938:	add	x0, x8, #0xcc
  41293c:	bl	402880 <sprintf@plt>
  412940:	ldr	x8, [x28, #8]
  412944:	add	x20, x8, #0xcc
  412948:	mov	x0, x20
  41294c:	bl	4026d0 <strlen@plt>
  412950:	add	x2, x20, x0
  412954:	mov	x0, x28
  412958:	mov	x1, x20
  41295c:	bl	413e10 <feof@plt+0x11110>
  412960:	cmp	x19, x21
  412964:	b.cs	41291c <feof@plt+0xfc1c>  // b.hs, b.nlast
  412968:	ldr	w8, [x28, #40]
  41296c:	cmp	w8, #0x1
  412970:	b.lt	4129cc <feof@plt+0xfccc>  // b.tstop
  412974:	ldr	x8, [x28, #8]
  412978:	ldr	w9, [x28, #28]
  41297c:	ldr	w10, [x8, #200]
  412980:	cmp	w9, w10
  412984:	b.gt	4129cc <feof@plt+0xfccc>
  412988:	ldr	x24, [x8, #176]
  41298c:	ldp	x8, x9, [x24, #24]
  412990:	cmp	x9, x8
  412994:	b.ne	4129a8 <feof@plt+0xfca8>  // b.any
  412998:	mov	w1, #0x1                   	// #1
  41299c:	mov	x0, x24
  4129a0:	bl	45500c <_obstack_newchunk@@Base>
  4129a4:	ldr	x8, [x24, #24]
  4129a8:	add	x9, x8, #0x1
  4129ac:	str	x9, [x24, #24]
  4129b0:	mov	w9, #0xa                   	// #10
  4129b4:	strb	w9, [x8]
  4129b8:	ldr	x8, [x28, #8]
  4129bc:	strb	wzr, [x28, #65]
  4129c0:	str	wzr, [x8, #200]
  4129c4:	ldr	w8, [sp, #52]
  4129c8:	tbnz	w8, #6, 412a10 <feof@plt+0xfd10>
  4129cc:	ldr	x8, [x23]
  4129d0:	ldr	x24, [x8, #176]
  4129d4:	ldp	x8, x9, [x24, #24]
  4129d8:	cmp	x9, x8
  4129dc:	b.ne	4129f0 <feof@plt+0xfcf0>  // b.any
  4129e0:	mov	w1, #0x1                   	// #1
  4129e4:	mov	x0, x24
  4129e8:	bl	45500c <_obstack_newchunk@@Base>
  4129ec:	ldr	x8, [x24, #24]
  4129f0:	add	x9, x8, #0x1
  4129f4:	str	x9, [x24, #24]
  4129f8:	mov	w9, #0x2c                  	// #44
  4129fc:	strb	w9, [x8]
  412a00:	ldr	x8, [x23]
  412a04:	ldr	w9, [x8, #200]
  412a08:	add	w9, w9, #0x1
  412a0c:	str	w9, [x8, #200]
  412a10:	ldr	w8, [x28, #40]
  412a14:	cmp	w8, #0x1
  412a18:	b.lt	412a74 <feof@plt+0xfd74>  // b.tstop
  412a1c:	ldr	x8, [x28, #8]
  412a20:	ldr	w9, [x28, #28]
  412a24:	ldr	w10, [x8, #200]
  412a28:	cmp	w9, w10
  412a2c:	b.gt	412a74 <feof@plt+0xfd74>
  412a30:	ldr	x24, [x8, #176]
  412a34:	ldp	x8, x9, [x24, #24]
  412a38:	cmp	x9, x8
  412a3c:	b.ne	412a50 <feof@plt+0xfd50>  // b.any
  412a40:	mov	w1, #0x1                   	// #1
  412a44:	mov	x0, x24
  412a48:	bl	45500c <_obstack_newchunk@@Base>
  412a4c:	ldr	x8, [x24, #24]
  412a50:	add	x9, x8, #0x1
  412a54:	str	x9, [x24, #24]
  412a58:	mov	w9, #0xa                   	// #10
  412a5c:	strb	w9, [x8]
  412a60:	ldr	x8, [x28, #8]
  412a64:	strb	wzr, [x28, #65]
  412a68:	str	wzr, [x8, #200]
  412a6c:	ldr	w8, [sp, #40]
  412a70:	tbnz	w8, #6, 41291c <feof@plt+0xfc1c>
  412a74:	ldr	x8, [x23]
  412a78:	ldr	x24, [x8, #176]
  412a7c:	ldp	x8, x9, [x24, #24]
  412a80:	cmp	x9, x8
  412a84:	b.ne	4128fc <feof@plt+0xfbfc>  // b.any
  412a88:	mov	w1, #0x1                   	// #1
  412a8c:	mov	x0, x24
  412a90:	bl	45500c <_obstack_newchunk@@Base>
  412a94:	ldr	x8, [x24, #24]
  412a98:	b	4128fc <feof@plt+0xfbfc>
  412a9c:	mov	w22, w26
  412aa0:	b	41307c <feof@plt+0x1037c>
  412aa4:	ldr	x10, [x9]
  412aa8:	add	x11, x10, #0x8
  412aac:	str	x11, [x9]
  412ab0:	ldr	x20, [x10]
  412ab4:	ldr	x27, [sp, #72]
  412ab8:	cmp	w8, #0x0
  412abc:	cset	w24, ne  // ne = any
  412ac0:	mov	x0, x20
  412ac4:	bl	4026d0 <strlen@plt>
  412ac8:	mov	x2, x0
  412acc:	mov	w0, w24
  412ad0:	mov	x1, x20
  412ad4:	bl	40bc1c <feof@plt+0x8f1c>
  412ad8:	mov	x20, x0
  412adc:	b	413068 <feof@plt+0x10368>
  412ae0:	ldr	x9, [x8]
  412ae4:	add	x10, x9, #0x8
  412ae8:	str	x10, [x8]
  412aec:	ldr	x2, [x9]
  412af0:	ldr	x27, [sp, #72]
  412af4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412af8:	add	x1, x1, #0x6f6
  412afc:	bl	402880 <sprintf@plt>
  412b00:	b	41305c <feof@plt+0x1035c>
  412b04:	ldr	x9, [x8]
  412b08:	add	x10, x9, #0x8
  412b0c:	str	x10, [x8]
  412b10:	ldr	x2, [x9]
  412b14:	ldr	x27, [sp, #72]
  412b18:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412b1c:	add	x1, x1, #0x6ea
  412b20:	bl	402880 <sprintf@plt>
  412b24:	b	41305c <feof@plt+0x1035c>
  412b28:	ldr	x9, [x8]
  412b2c:	add	x10, x9, #0x8
  412b30:	str	x10, [x8]
  412b34:	ldr	x25, [x9]
  412b38:	mov	x0, x25
  412b3c:	bl	4026d0 <strlen@plt>
  412b40:	cbz	x0, 412e30 <feof@plt+0x10130>
  412b44:	mov	x24, x0
  412b48:	mov	x1, x25
  412b4c:	b	412b84 <feof@plt+0xfe84>
  412b50:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412b54:	sub	x0, x29, #0x20
  412b58:	add	x1, x1, #0x736
  412b5c:	bl	402880 <sprintf@plt>
  412b60:	sub	x8, x29, #0x20
  412b64:	add	x2, x8, w0, sxtw
  412b68:	sub	x1, x29, #0x20
  412b6c:	mov	x0, x28
  412b70:	bl	413e10 <feof@plt+0x11110>
  412b74:	add	x1, x25, #0x1
  412b78:	subs	x24, x24, #0x1
  412b7c:	add	x25, x25, #0x1
  412b80:	b.eq	412e34 <feof@plt+0x10134>  // b.none
  412b84:	ldrb	w2, [x25]
  412b88:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  412b8c:	add	x8, x8, #0x3c4
  412b90:	ldrh	w8, [x8, x2, lsl #1]
  412b94:	tbnz	w8, #4, 412b78 <feof@plt+0xfe78>
  412b98:	cmp	x1, x25
  412b9c:	b.cs	412b50 <feof@plt+0xfe50>  // b.hs, b.nlast
  412ba0:	sub	x2, x25, #0x1
  412ba4:	mov	x0, x28
  412ba8:	bl	413e10 <feof@plt+0x11110>
  412bac:	ldrb	w2, [x25]
  412bb0:	b	412b50 <feof@plt+0xfe50>
  412bb4:	cmp	w27, #0x2
  412bb8:	b.eq	412e9c <feof@plt+0x1019c>  // b.none
  412bbc:	cmp	w27, #0x1
  412bc0:	b.eq	4124ec <feof@plt+0xf7ec>  // b.none
  412bc4:	cbnz	w27, 412c98 <feof@plt+0xff98>
  412bc8:	ldr	x8, [sp, #56]
  412bcc:	ldr	x10, [x23]
  412bd0:	ldr	x8, [x8]
  412bd4:	add	x0, x10, #0xcc
  412bd8:	ldrsw	x9, [x8, #24]
  412bdc:	tbz	w9, #31, 412f90 <feof@plt+0x10290>
  412be0:	add	w10, w9, #0x8
  412be4:	cmn	w9, #0x8
  412be8:	str	w10, [x8, #24]
  412bec:	b.gt	412f90 <feof@plt+0x10290>
  412bf0:	ldr	x8, [x8, #8]
  412bf4:	add	x9, x8, x9
  412bf8:	b	412f9c <feof@plt+0x1029c>
  412bfc:	cmp	w27, #0x2
  412c00:	b.eq	412f04 <feof@plt+0x10204>  // b.none
  412c04:	cmp	w27, #0x1
  412c08:	b.eq	412ed0 <feof@plt+0x101d0>  // b.none
  412c0c:	cbnz	w27, 412c98 <feof@plt+0xff98>
  412c10:	ldr	x8, [sp, #56]
  412c14:	ldr	x10, [x23]
  412c18:	ldr	x8, [x8]
  412c1c:	add	x0, x10, #0xcc
  412c20:	ldrsw	x9, [x8, #24]
  412c24:	tbz	w9, #31, 412ff8 <feof@plt+0x102f8>
  412c28:	add	w10, w9, #0x8
  412c2c:	cmn	w9, #0x8
  412c30:	str	w10, [x8, #24]
  412c34:	b.gt	412ff8 <feof@plt+0x102f8>
  412c38:	ldr	x8, [x8, #8]
  412c3c:	add	x9, x8, x9
  412c40:	b	413004 <feof@plt+0x10304>
  412c44:	mov	x0, x28
  412c48:	bl	41164c <feof@plt+0xe94c>
  412c4c:	b	41307c <feof@plt+0x1037c>
  412c50:	cmp	w27, #0x2
  412c54:	b.eq	412f38 <feof@plt+0x10238>  // b.none
  412c58:	cmp	w27, #0x1
  412c5c:	b.eq	412604 <feof@plt+0xf904>  // b.none
  412c60:	cbnz	w27, 412c98 <feof@plt+0xff98>
  412c64:	ldr	x8, [sp, #56]
  412c68:	ldr	x10, [x23]
  412c6c:	ldr	x8, [x8]
  412c70:	add	x0, x10, #0xcc
  412c74:	ldrsw	x9, [x8, #24]
  412c78:	tbz	w9, #31, 41303c <feof@plt+0x1033c>
  412c7c:	add	w10, w9, #0x8
  412c80:	cmn	w9, #0x8
  412c84:	str	w10, [x8, #24]
  412c88:	b.gt	41303c <feof@plt+0x1033c>
  412c8c:	ldr	x8, [x8, #8]
  412c90:	add	x9, x8, x9
  412c94:	b	413048 <feof@plt+0x10348>
  412c98:	ldr	x27, [sp, #72]
  412c9c:	b	41307c <feof@plt+0x1037c>
  412ca0:	sub	x1, x29, #0x20
  412ca4:	mov	w2, #0xa                   	// #10
  412ca8:	mov	x0, x25
  412cac:	bl	402af0 <strtoul@plt>
  412cb0:	ldur	x8, [x29, #-32]
  412cb4:	ldrb	w8, [x8]
  412cb8:	cmp	w8, #0x73
  412cbc:	b.ne	413240 <feof@plt+0x10540>  // b.any
  412cc0:	ldr	x27, [sp, #72]
  412cc4:	b	412d10 <feof@plt+0x10010>
  412cc8:	ldr	x9, [x8]
  412ccc:	add	x10, x9, #0x8
  412cd0:	str	x10, [x8]
  412cd4:	ldr	x2, [x9]
  412cd8:	ldr	x27, [sp, #72]
  412cdc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412ce0:	add	x1, x1, #0x6ff
  412ce4:	bl	402880 <sprintf@plt>
  412ce8:	b	41305c <feof@plt+0x1035c>
  412cec:	ldr	x9, [x8]
  412cf0:	add	x10, x9, #0x8
  412cf4:	str	x10, [x8]
  412cf8:	add	w22, w22, #0x1
  412cfc:	add	x8, sp, #0x70
  412d00:	ldr	x8, [x8, w22, uxtw #3]
  412d04:	cmp	x11, x8
  412d08:	b.ne	413258 <feof@plt+0x10558>  // b.any
  412d0c:	ldr	w0, [x9]
  412d10:	ldr	x8, [sp, #56]
  412d14:	ldr	x8, [x8]
  412d18:	ldrsw	x9, [x8, #24]
  412d1c:	tbz	w9, #31, 412d4c <feof@plt+0x1004c>
  412d20:	add	w10, w9, #0x8
  412d24:	cmn	w9, #0x8
  412d28:	str	w10, [x8, #24]
  412d2c:	b.gt	412d4c <feof@plt+0x1004c>
  412d30:	ldr	x8, [x8, #8]
  412d34:	add	x9, x8, x9
  412d38:	ldr	x24, [x9]
  412d3c:	tbz	w0, #31, 412d60 <feof@plt+0x10060>
  412d40:	mov	x0, x24
  412d44:	bl	4026d0 <strlen@plt>
  412d48:	b	412d6c <feof@plt+0x1006c>
  412d4c:	ldr	x9, [x8]
  412d50:	add	x10, x9, #0x8
  412d54:	str	x10, [x8]
  412d58:	ldr	x24, [x9]
  412d5c:	tbnz	w0, #31, 412d40 <feof@plt+0x10040>
  412d60:	mov	w1, w0
  412d64:	mov	x0, x24
  412d68:	bl	402c60 <strnlen@plt>
  412d6c:	add	x2, x24, x0
  412d70:	mov	x0, x28
  412d74:	mov	x1, x24
  412d78:	bl	413464 <feof@plt+0x10764>
  412d7c:	b	41307c <feof@plt+0x1037c>
  412d80:	ldr	x27, [sp, #72]
  412d84:	tbz	w9, #31, 412da4 <feof@plt+0x100a4>
  412d88:	add	w10, w9, #0x8
  412d8c:	cmn	w9, #0x8
  412d90:	str	w10, [x8, #24]
  412d94:	b.gt	412da4 <feof@plt+0x100a4>
  412d98:	ldr	x8, [x8, #8]
  412d9c:	add	x9, x8, x9
  412da0:	b	412db0 <feof@plt+0x100b0>
  412da4:	ldr	x9, [x8]
  412da8:	add	x10, x9, #0x8
  412dac:	str	x10, [x8]
  412db0:	ldr	x20, [x9]
  412db4:	b	413064 <feof@plt+0x10364>
  412db8:	ldr	x8, [sp, #56]
  412dbc:	ldr	x10, [x23]
  412dc0:	ldr	x8, [x8]
  412dc4:	add	x0, x10, #0xcc
  412dc8:	ldrsw	x9, [x8, #24]
  412dcc:	tbz	w9, #31, 412e40 <feof@plt+0x10140>
  412dd0:	add	w10, w9, #0x8
  412dd4:	cmn	w9, #0x8
  412dd8:	str	w10, [x8, #24]
  412ddc:	b.gt	412e40 <feof@plt+0x10140>
  412de0:	ldr	x8, [x8, #8]
  412de4:	add	x9, x8, x9
  412de8:	b	412e4c <feof@plt+0x1014c>
  412dec:	ldr	x8, [sp, #56]
  412df0:	ldr	x10, [x23]
  412df4:	ldr	x8, [x8]
  412df8:	add	x0, x10, #0xcc
  412dfc:	ldrsw	x9, [x8, #24]
  412e00:	tbz	w9, #31, 412e58 <feof@plt+0x10158>
  412e04:	add	w10, w9, #0x8
  412e08:	cmn	w9, #0x8
  412e0c:	str	w10, [x8, #24]
  412e10:	b.gt	412e58 <feof@plt+0x10158>
  412e14:	ldr	x8, [x8, #8]
  412e18:	add	x9, x8, x9
  412e1c:	b	412e64 <feof@plt+0x10164>
  412e20:	ldr	x2, [sp, #16]
  412e24:	add	x1, sp, #0x68
  412e28:	mov	x0, x28
  412e2c:	b	413078 <feof@plt+0x10378>
  412e30:	mov	x1, x25
  412e34:	mov	x0, x28
  412e38:	mov	x2, x25
  412e3c:	b	413078 <feof@plt+0x10378>
  412e40:	ldr	x9, [x8]
  412e44:	add	x10, x9, #0x8
  412e48:	str	x10, [x8]
  412e4c:	ldr	x27, [sp, #72]
  412e50:	ldr	x2, [x9]
  412e54:	b	41285c <feof@plt+0xfb5c>
  412e58:	ldr	x9, [x8]
  412e5c:	add	x10, x9, #0x8
  412e60:	str	x10, [x8]
  412e64:	ldr	x2, [x9]
  412e68:	ldr	x27, [sp, #72]
  412e6c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412e70:	add	x1, x1, #0x6e5
  412e74:	bl	402880 <sprintf@plt>
  412e78:	b	41305c <feof@plt+0x1035c>
  412e7c:	ldr	x9, [x8]
  412e80:	add	x10, x9, #0x8
  412e84:	str	x10, [x8]
  412e88:	ldr	x27, [sp, #72]
  412e8c:	ldr	w2, [x9]
  412e90:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412e94:	add	x1, x1, #0xdb1
  412e98:	b	413058 <feof@plt+0x10358>
  412e9c:	ldr	x8, [sp, #56]
  412ea0:	ldr	x10, [x23]
  412ea4:	ldr	x8, [x8]
  412ea8:	add	x0, x10, #0xcc
  412eac:	ldrsw	x9, [x8, #24]
  412eb0:	tbz	w9, #31, 412f6c <feof@plt+0x1026c>
  412eb4:	add	w10, w9, #0x8
  412eb8:	cmn	w9, #0x8
  412ebc:	str	w10, [x8, #24]
  412ec0:	b.gt	412f6c <feof@plt+0x1026c>
  412ec4:	ldr	x8, [x8, #8]
  412ec8:	add	x9, x8, x9
  412ecc:	b	412f78 <feof@plt+0x10278>
  412ed0:	ldr	x8, [sp, #56]
  412ed4:	ldr	x10, [x23]
  412ed8:	ldr	x8, [x8]
  412edc:	add	x0, x10, #0xcc
  412ee0:	ldrsw	x9, [x8, #24]
  412ee4:	tbz	w9, #31, 412fb0 <feof@plt+0x102b0>
  412ee8:	add	w10, w9, #0x8
  412eec:	cmn	w9, #0x8
  412ef0:	str	w10, [x8, #24]
  412ef4:	b.gt	412fb0 <feof@plt+0x102b0>
  412ef8:	ldr	x8, [x8, #8]
  412efc:	add	x9, x8, x9
  412f00:	b	412fbc <feof@plt+0x102bc>
  412f04:	ldr	x8, [sp, #56]
  412f08:	ldr	x10, [x23]
  412f0c:	ldr	x8, [x8]
  412f10:	add	x0, x10, #0xcc
  412f14:	ldrsw	x9, [x8, #24]
  412f18:	tbz	w9, #31, 412fd4 <feof@plt+0x102d4>
  412f1c:	add	w10, w9, #0x8
  412f20:	cmn	w9, #0x8
  412f24:	str	w10, [x8, #24]
  412f28:	b.gt	412fd4 <feof@plt+0x102d4>
  412f2c:	ldr	x8, [x8, #8]
  412f30:	add	x9, x8, x9
  412f34:	b	412fe0 <feof@plt+0x102e0>
  412f38:	ldr	x8, [sp, #56]
  412f3c:	ldr	x10, [x23]
  412f40:	ldr	x8, [x8]
  412f44:	add	x0, x10, #0xcc
  412f48:	ldrsw	x9, [x8, #24]
  412f4c:	tbz	w9, #31, 413018 <feof@plt+0x10318>
  412f50:	add	w10, w9, #0x8
  412f54:	cmn	w9, #0x8
  412f58:	str	w10, [x8, #24]
  412f5c:	b.gt	413018 <feof@plt+0x10318>
  412f60:	ldr	x8, [x8, #8]
  412f64:	add	x9, x8, x9
  412f68:	b	413024 <feof@plt+0x10324>
  412f6c:	ldr	x9, [x8]
  412f70:	add	x10, x9, #0x8
  412f74:	str	x10, [x8]
  412f78:	ldr	x2, [x9]
  412f7c:	ldr	x27, [sp, #72]
  412f80:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412f84:	add	x1, x1, #0x6fa
  412f88:	bl	402880 <sprintf@plt>
  412f8c:	b	41305c <feof@plt+0x1035c>
  412f90:	ldr	x9, [x8]
  412f94:	add	x10, x9, #0x8
  412f98:	str	x10, [x8]
  412f9c:	ldr	x27, [sp, #72]
  412fa0:	ldr	w2, [x9]
  412fa4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412fa8:	add	x1, x1, #0xefa
  412fac:	b	413058 <feof@plt+0x10358>
  412fb0:	ldr	x9, [x8]
  412fb4:	add	x10, x9, #0x8
  412fb8:	str	x10, [x8]
  412fbc:	ldr	x2, [x9]
  412fc0:	ldr	x27, [sp, #72]
  412fc4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412fc8:	add	x1, x1, #0x707
  412fcc:	bl	402880 <sprintf@plt>
  412fd0:	b	41305c <feof@plt+0x1035c>
  412fd4:	ldr	x9, [x8]
  412fd8:	add	x10, x9, #0x8
  412fdc:	str	x10, [x8]
  412fe0:	ldr	x2, [x9]
  412fe4:	ldr	x27, [sp, #72]
  412fe8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  412fec:	add	x1, x1, #0x70b
  412ff0:	bl	402880 <sprintf@plt>
  412ff4:	b	41305c <feof@plt+0x1035c>
  412ff8:	ldr	x9, [x8]
  412ffc:	add	x10, x9, #0x8
  413000:	str	x10, [x8]
  413004:	ldr	x27, [sp, #72]
  413008:	ldr	w2, [x9]
  41300c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413010:	add	x1, x1, #0x704
  413014:	b	413058 <feof@plt+0x10358>
  413018:	ldr	x9, [x8]
  41301c:	add	x10, x9, #0x8
  413020:	str	x10, [x8]
  413024:	ldr	x2, [x9]
  413028:	ldr	x27, [sp, #72]
  41302c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413030:	add	x1, x1, #0x6ee
  413034:	bl	402880 <sprintf@plt>
  413038:	b	41305c <feof@plt+0x1035c>
  41303c:	ldr	x9, [x8]
  413040:	add	x10, x9, #0x8
  413044:	str	x10, [x8]
  413048:	ldr	x27, [sp, #72]
  41304c:	ldr	w2, [x9]
  413050:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413054:	add	x1, x1, #0x279
  413058:	bl	402880 <sprintf@plt>
  41305c:	ldr	x8, [x28, #8]
  413060:	add	x20, x8, #0xcc
  413064:	mov	x0, x20
  413068:	bl	4026d0 <strlen@plt>
  41306c:	add	x2, x20, x0
  413070:	mov	x0, x28
  413074:	mov	x1, x20
  413078:	bl	413e10 <feof@plt+0x11110>
  41307c:	ldrb	w8, [sp, #108]
  413080:	cbz	w8, 4130c4 <feof@plt+0x103c4>
  413084:	ldrb	w0, [x28, #67]
  413088:	bl	40bca0 <feof@plt+0x8fa0>
  41308c:	mov	x20, x0
  413090:	bl	4026d0 <strlen@plt>
  413094:	add	x2, x20, x0
  413098:	mov	x0, x28
  41309c:	mov	x1, x20
  4130a0:	bl	413e10 <feof@plt+0x11110>
  4130a4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4130a8:	ldr	x20, [x8, #1336]
  4130ac:	mov	x0, x20
  4130b0:	bl	4026d0 <strlen@plt>
  4130b4:	add	x2, x20, x0
  4130b8:	mov	x0, x28
  4130bc:	mov	x1, x20
  4130c0:	bl	413e10 <feof@plt+0x11110>
  4130c4:	ldp	x8, x9, [x27, #112]
  4130c8:	cmp	x9, x8
  4130cc:	b.ne	4122f4 <feof@plt+0xf5f4>  // b.any
  4130d0:	ldr	x0, [sp, #88]
  4130d4:	mov	w1, #0x1                   	// #1
  4130d8:	bl	45500c <_obstack_newchunk@@Base>
  4130dc:	ldr	x8, [sp, #96]
  4130e0:	ldr	x8, [x8]
  4130e4:	b	4122f4 <feof@plt+0xf5f4>
  4130e8:	ldr	x0, [x28, #56]
  4130ec:	cbz	x0, 413100 <feof@plt+0x10400>
  4130f0:	ldr	x8, [x0]
  4130f4:	mov	x1, x28
  4130f8:	ldr	x8, [x8, #16]
  4130fc:	blr	x8
  413100:	ldr	x8, [sp, #24]
  413104:	str	x27, [x27, #176]
  413108:	str	wzr, [x27, #200]
  41310c:	strb	wzr, [x28, #64]
  413110:	stur	x8, [x28, #36]
  413114:	str	wzr, [x28, #32]
  413118:	ldp	x20, x19, [sp, #464]
  41311c:	ldp	x22, x21, [sp, #448]
  413120:	ldp	x24, x23, [sp, #432]
  413124:	ldp	x26, x25, [sp, #416]
  413128:	ldp	x28, x27, [sp, #400]
  41312c:	ldp	x29, x30, [sp, #384]
  413130:	add	sp, sp, #0x1e0
  413134:	ret
  413138:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41313c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413140:	add	x0, x0, #0x693
  413144:	add	x2, x2, #0x6d1
  413148:	mov	w1, #0x4c0                 	// #1216
  41314c:	bl	408b70 <feof@plt+0x5e70>
  413150:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413154:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413158:	add	x0, x0, #0x693
  41315c:	add	x2, x2, #0x6d1
  413160:	mov	w1, #0x4c5                 	// #1221
  413164:	bl	408b70 <feof@plt+0x5e70>
  413168:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41316c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413170:	add	x0, x0, #0x693
  413174:	add	x2, x2, #0x6d1
  413178:	mov	w1, #0x4ca                 	// #1226
  41317c:	bl	408b70 <feof@plt+0x5e70>
  413180:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413184:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413188:	add	x0, x0, #0x693
  41318c:	add	x2, x2, #0x6d1
  413190:	mov	w1, #0x4d5                 	// #1237
  413194:	bl	408b70 <feof@plt+0x5e70>
  413198:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41319c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131a0:	add	x0, x0, #0x693
  4131a4:	add	x2, x2, #0x6d1
  4131a8:	mov	w1, #0x4cf                 	// #1231
  4131ac:	bl	408b70 <feof@plt+0x5e70>
  4131b0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131b4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131b8:	add	x0, x0, #0x693
  4131bc:	add	x2, x2, #0x6d1
  4131c0:	mov	w1, #0x4dc                 	// #1244
  4131c4:	bl	408b70 <feof@plt+0x5e70>
  4131c8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131cc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131d0:	add	x0, x0, #0x693
  4131d4:	add	x2, x2, #0x6d1
  4131d8:	mov	w1, #0x41e                 	// #1054
  4131dc:	bl	408b70 <feof@plt+0x5e70>
  4131e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131e4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131e8:	add	x0, x0, #0x693
  4131ec:	add	x2, x2, #0x6d1
  4131f0:	mov	w1, #0x54f                 	// #1359
  4131f4:	bl	408b70 <feof@plt+0x5e70>
  4131f8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4131fc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413200:	add	x0, x0, #0x693
  413204:	add	x2, x2, #0x6d1
  413208:	mov	w1, #0x551                 	// #1361
  41320c:	bl	408b70 <feof@plt+0x5e70>
  413210:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413214:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413218:	add	x0, x0, #0x693
  41321c:	add	x2, x2, #0x6d1
  413220:	mov	w1, #0x56d                 	// #1389
  413224:	bl	408b70 <feof@plt+0x5e70>
  413228:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41322c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413230:	add	x0, x0, #0x693
  413234:	add	x2, x2, #0x6d1
  413238:	mov	w1, #0x571                 	// #1393
  41323c:	bl	408b70 <feof@plt+0x5e70>
  413240:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413244:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413248:	add	x0, x0, #0x693
  41324c:	add	x2, x2, #0x6d1
  413250:	mov	w1, #0x54b                 	// #1355
  413254:	bl	408b70 <feof@plt+0x5e70>
  413258:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41325c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413260:	add	x0, x0, #0x693
  413264:	add	x2, x2, #0x6d1
  413268:	mov	w1, #0x555                 	// #1365
  41326c:	bl	408b70 <feof@plt+0x5e70>
  413270:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413274:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413278:	add	x0, x0, #0x693
  41327c:	add	x2, x2, #0x6d1
  413280:	mov	w1, #0x4a4                 	// #1188
  413284:	bl	408b70 <feof@plt+0x5e70>
  413288:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41328c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413290:	add	x0, x0, #0x693
  413294:	add	x2, x2, #0x6d1
  413298:	mov	w1, #0x450                 	// #1104
  41329c:	bl	408b70 <feof@plt+0x5e70>
  4132a0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132a4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132a8:	add	x0, x0, #0x693
  4132ac:	add	x2, x2, #0x6d1
  4132b0:	mov	w1, #0x464                 	// #1124
  4132b4:	bl	408b70 <feof@plt+0x5e70>
  4132b8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132bc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132c0:	add	x0, x0, #0x693
  4132c4:	add	x2, x2, #0x6d1
  4132c8:	mov	w1, #0x45a                 	// #1114
  4132cc:	bl	408b70 <feof@plt+0x5e70>
  4132d0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132d4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132d8:	add	x0, x0, #0x693
  4132dc:	add	x2, x2, #0x6d1
  4132e0:	mov	w1, #0x45e                 	// #1118
  4132e4:	bl	408b70 <feof@plt+0x5e70>
  4132e8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132ec:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4132f0:	add	x0, x0, #0x693
  4132f4:	add	x2, x2, #0x6d1
  4132f8:	mov	w1, #0x466                 	// #1126
  4132fc:	bl	408b70 <feof@plt+0x5e70>
  413300:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413304:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413308:	add	x0, x0, #0x693
  41330c:	add	x2, x2, #0x6d1
  413310:	mov	w1, #0x467                 	// #1127
  413314:	bl	408b70 <feof@plt+0x5e70>
  413318:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41331c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413320:	add	x0, x0, #0x693
  413324:	add	x2, x2, #0x6d1
  413328:	mov	w1, #0x480                 	// #1152
  41332c:	bl	408b70 <feof@plt+0x5e70>
  413330:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413334:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413338:	add	x0, x0, #0x693
  41333c:	add	x2, x2, #0x6d1
  413340:	mov	w1, #0x492                 	// #1170
  413344:	bl	408b70 <feof@plt+0x5e70>
  413348:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41334c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413350:	add	x0, x0, #0x693
  413354:	add	x2, x2, #0x6d1
  413358:	mov	w1, #0x47c                 	// #1148
  41335c:	bl	408b70 <feof@plt+0x5e70>
  413360:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413364:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413368:	add	x0, x0, #0x693
  41336c:	add	x2, x2, #0x6d1
  413370:	mov	w1, #0x489                 	// #1161
  413374:	bl	408b70 <feof@plt+0x5e70>
  413378:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41337c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413380:	add	x0, x0, #0x693
  413384:	add	x2, x2, #0x6d1
  413388:	mov	w1, #0x48a                 	// #1162
  41338c:	bl	408b70 <feof@plt+0x5e70>
  413390:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413394:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413398:	add	x0, x0, #0x693
  41339c:	add	x2, x2, #0x6d1
  4133a0:	mov	w1, #0x48b                 	// #1163
  4133a4:	bl	408b70 <feof@plt+0x5e70>
  4133a8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4133ac:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4133b0:	add	x0, x0, #0x693
  4133b4:	add	x2, x2, #0x6d1
  4133b8:	mov	w1, #0x496                 	// #1174
  4133bc:	bl	408b70 <feof@plt+0x5e70>
  4133c0:	stp	x29, x30, [sp, #-48]!
  4133c4:	str	x21, [sp, #16]
  4133c8:	stp	x20, x19, [sp, #32]
  4133cc:	mov	x29, sp
  4133d0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4133d4:	ldr	x20, [x8, #1328]
  4133d8:	mov	x21, x0
  4133dc:	mov	w19, w1
  4133e0:	mov	x0, x20
  4133e4:	bl	4026d0 <strlen@plt>
  4133e8:	add	x2, x20, x0
  4133ec:	mov	x0, x21
  4133f0:	mov	x1, x20
  4133f4:	bl	413e10 <feof@plt+0x11110>
  4133f8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  4133fc:	and	w0, w19, #0x1
  413400:	add	x1, x1, #0xb29
  413404:	mov	w2, #0x5                   	// #5
  413408:	bl	40bc1c <feof@plt+0x8f1c>
  41340c:	mov	x19, x0
  413410:	bl	4026d0 <strlen@plt>
  413414:	add	x2, x19, x0
  413418:	mov	x0, x21
  41341c:	mov	x1, x19
  413420:	ldp	x20, x19, [sp, #32]
  413424:	ldr	x21, [sp, #16]
  413428:	ldp	x29, x30, [sp], #48
  41342c:	b	413e10 <feof@plt+0x11110>
  413430:	stp	x29, x30, [sp, #-32]!
  413434:	stp	x20, x19, [sp, #16]
  413438:	mov	x29, sp
  41343c:	mov	x20, x0
  413440:	mov	x0, x1
  413444:	mov	x19, x1
  413448:	bl	4026d0 <strlen@plt>
  41344c:	add	x2, x19, x0
  413450:	mov	x0, x20
  413454:	mov	x1, x19
  413458:	ldp	x20, x19, [sp, #16]
  41345c:	ldp	x29, x30, [sp], #32
  413460:	b	413e10 <feof@plt+0x11110>
  413464:	stp	x29, x30, [sp, #-64]!
  413468:	str	x23, [sp, #16]
  41346c:	stp	x22, x21, [sp, #32]
  413470:	stp	x20, x19, [sp, #48]
  413474:	mov	x29, sp
  413478:	ldr	x8, [x0, #8]
  41347c:	mov	x20, x2
  413480:	mov	x21, x0
  413484:	mov	x19, x1
  413488:	ldr	w8, [x8, #200]
  41348c:	cbz	w8, 413528 <feof@plt+0x10828>
  413490:	ldr	x22, [x21, #8]
  413494:	sub	x23, x20, x19
  413498:	sxtw	x20, w23
  41349c:	ldr	x21, [x22, #176]
  4134a0:	ldp	x0, x8, [x21, #24]
  4134a4:	sub	x8, x8, x0
  4134a8:	cmp	x8, x20
  4134ac:	b.cs	4134c0 <feof@plt+0x107c0>  // b.hs, b.nlast
  4134b0:	mov	x0, x21
  4134b4:	mov	x1, x20
  4134b8:	bl	45500c <_obstack_newchunk@@Base>
  4134bc:	ldr	x0, [x21, #24]
  4134c0:	mov	x1, x19
  4134c4:	mov	x2, x20
  4134c8:	bl	402640 <memcpy@plt>
  4134cc:	ldr	x8, [x21, #24]
  4134d0:	cmp	w23, #0x1
  4134d4:	add	x8, x8, x20
  4134d8:	str	x8, [x21, #24]
  4134dc:	b.lt	413514 <feof@plt+0x10814>  // b.tstop
  4134e0:	and	x8, x23, #0xffffffff
  4134e4:	b	413500 <feof@plt+0x10800>
  4134e8:	ldr	w9, [x22, #200]
  4134ec:	add	w9, w9, #0x1
  4134f0:	subs	x8, x8, #0x1
  4134f4:	add	x19, x19, #0x1
  4134f8:	str	w9, [x22, #200]
  4134fc:	b.eq	413514 <feof@plt+0x10814>  // b.none
  413500:	ldrb	w9, [x19]
  413504:	cmp	w9, #0xa
  413508:	b.ne	4134e8 <feof@plt+0x107e8>  // b.any
  41350c:	mov	w9, wzr
  413510:	b	4134f0 <feof@plt+0x107f0>
  413514:	ldp	x20, x19, [sp, #48]
  413518:	ldp	x22, x21, [sp, #32]
  41351c:	ldr	x23, [sp, #16]
  413520:	ldp	x29, x30, [sp], #64
  413524:	ret
  413528:	mov	x0, x21
  41352c:	bl	413960 <feof@plt+0x10c60>
  413530:	ldr	w8, [x21, #40]
  413534:	cmp	w8, #0x1
  413538:	b.lt	413490 <feof@plt+0x10790>  // b.tstop
  41353c:	cmp	x19, x20
  413540:	b.eq	413490 <feof@plt+0x10790>  // b.none
  413544:	ldrb	w8, [x19]
  413548:	cmp	w8, #0x20
  41354c:	b.ne	413490 <feof@plt+0x10790>  // b.any
  413550:	add	x19, x19, #0x1
  413554:	cmp	x20, x19
  413558:	b.ne	413544 <feof@plt+0x10844>  // b.any
  41355c:	mov	x19, x20
  413560:	b	413490 <feof@plt+0x10790>
  413564:	stp	x29, x30, [sp, #-32]!
  413568:	stp	x20, x19, [sp, #16]
  41356c:	mov	x29, sp
  413570:	mov	x19, x0
  413574:	and	w0, w1, #0x1
  413578:	bl	40bca0 <feof@plt+0x8fa0>
  41357c:	mov	x20, x0
  413580:	bl	4026d0 <strlen@plt>
  413584:	add	x2, x20, x0
  413588:	mov	x0, x19
  41358c:	mov	x1, x20
  413590:	bl	413e10 <feof@plt+0x11110>
  413594:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  413598:	ldr	x20, [x8, #1336]
  41359c:	mov	x0, x20
  4135a0:	bl	4026d0 <strlen@plt>
  4135a4:	add	x2, x20, x0
  4135a8:	mov	x0, x19
  4135ac:	mov	x1, x20
  4135b0:	ldp	x20, x19, [sp, #16]
  4135b4:	ldp	x29, x30, [sp], #32
  4135b8:	b	413e10 <feof@plt+0x11110>
  4135bc:	stp	x29, x30, [sp, #-64]!
  4135c0:	str	x23, [sp, #16]
  4135c4:	stp	x22, x21, [sp, #32]
  4135c8:	stp	x20, x19, [sp, #48]
  4135cc:	mov	x29, sp
  4135d0:	ldr	x22, [x0, #8]
  4135d4:	ldr	x8, [x22, #176]
  4135d8:	cmp	x8, x22
  4135dc:	b.ne	413678 <feof@plt+0x10978>  // b.any
  4135e0:	ldr	w8, [x22, #200]
  4135e4:	cbnz	w8, 413690 <feof@plt+0x10990>
  4135e8:	ldr	x19, [x22, #184]
  4135ec:	ldr	x21, [x19, #8]
  4135f0:	cbz	x21, 413624 <feof@plt+0x10924>
  4135f4:	mov	x20, x0
  4135f8:	mov	w23, #0x1                   	// #1
  4135fc:	mov	x0, x21
  413600:	bl	4026d0 <strlen@plt>
  413604:	add	x2, x21, x0
  413608:	mov	x0, x20
  41360c:	mov	x1, x21
  413610:	bl	413e10 <feof@plt+0x11110>
  413614:	add	x8, x19, w23, uxtw #3
  413618:	ldr	x21, [x8, #8]
  41361c:	add	w23, w23, #0x1
  413620:	cbnz	x21, 4135fc <feof@plt+0x108fc>
  413624:	ldr	x8, [x22, #96]
  413628:	ldr	x9, [x19]
  41362c:	cmp	x8, x19
  413630:	str	x9, [x22, #184]
  413634:	b.cs	41365c <feof@plt+0x1095c>  // b.hs, b.nlast
  413638:	ldr	x8, [x22, #120]
  41363c:	cmp	x8, x19
  413640:	b.ls	41365c <feof@plt+0x1095c>  // b.plast
  413644:	stp	x19, x19, [x22, #104]
  413648:	ldp	x20, x19, [sp, #48]
  41364c:	ldp	x22, x21, [sp, #32]
  413650:	ldr	x23, [sp, #16]
  413654:	ldp	x29, x30, [sp], #64
  413658:	ret
  41365c:	add	x0, x22, #0x58
  413660:	mov	x1, x19
  413664:	ldp	x20, x19, [sp, #48]
  413668:	ldp	x22, x21, [sp, #32]
  41366c:	ldr	x23, [sp, #16]
  413670:	ldp	x29, x30, [sp], #64
  413674:	b	455194 <_obstack_free@@Base>
  413678:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41367c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413680:	add	x0, x0, #0x693
  413684:	add	x2, x2, #0x710
  413688:	mov	w1, #0x595                 	// #1429
  41368c:	bl	408b70 <feof@plt+0x5e70>
  413690:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413694:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413698:	add	x0, x0, #0x693
  41369c:	add	x2, x2, #0x710
  4136a0:	mov	w1, #0x596                 	// #1430
  4136a4:	bl	408b70 <feof@plt+0x5e70>
  4136a8:	stp	x29, x30, [sp, #-32]!
  4136ac:	stp	x20, x19, [sp, #16]
  4136b0:	mov	x29, sp
  4136b4:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4136b8:	ldr	d0, [x8, #1672]
  4136bc:	ldur	x20, [x0, #36]
  4136c0:	mov	x19, x0
  4136c4:	stur	d0, [x0, #36]
  4136c8:	bl	411ab0 <feof@plt+0xedb0>
  4136cc:	mov	x0, x19
  4136d0:	bl	4135bc <feof@plt+0x108bc>
  4136d4:	stur	x20, [x19, #36]
  4136d8:	ldp	x20, x19, [sp, #16]
  4136dc:	ldp	x29, x30, [sp], #32
  4136e0:	ret
  4136e4:	stp	x29, x30, [sp, #-48]!
  4136e8:	str	x21, [sp, #16]
  4136ec:	stp	x20, x19, [sp, #32]
  4136f0:	mov	x29, sp
  4136f4:	ldr	x21, [x0, #8]
  4136f8:	strb	wzr, [x0, #64]
  4136fc:	str	wzr, [x0, #32]
  413700:	ldrb	w8, [x21, #332]
  413704:	cbz	w8, 413798 <feof@plt+0x10a98>
  413708:	ldr	x20, [x21, #176]
  41370c:	mov	x19, x0
  413710:	ldp	x8, x9, [x20, #24]
  413714:	cmp	x9, x8
  413718:	b.ne	41372c <feof@plt+0x10a2c>  // b.any
  41371c:	mov	w1, #0x1                   	// #1
  413720:	mov	x0, x20
  413724:	bl	45500c <_obstack_newchunk@@Base>
  413728:	ldr	x8, [x20, #24]
  41372c:	add	x9, x8, #0x1
  413730:	str	x9, [x20, #24]
  413734:	strb	wzr, [x8]
  413738:	ldr	x8, [x21, #176]
  41373c:	ldr	x9, [x19, #8]
  413740:	ldr	x0, [x8, #16]
  413744:	ldr	x1, [x9, #192]
  413748:	bl	402620 <fputs@plt>
  41374c:	ldr	x8, [x19, #8]
  413750:	ldr	x0, [x8, #176]
  413754:	ldp	x8, x1, [x0, #8]
  413758:	cmp	x1, x8
  41375c:	b.ls	413774 <feof@plt+0x10a74>  // b.plast
  413760:	ldr	x8, [x0, #32]
  413764:	cmp	x1, x8
  413768:	b.cs	413774 <feof@plt+0x10a74>  // b.hs, b.nlast
  41376c:	str	x1, [x0, #24]
  413770:	b	413778 <feof@plt+0x10a78>
  413774:	bl	455194 <_obstack_free@@Base>
  413778:	ldr	x8, [x19, #8]
  41377c:	ldr	x21, [sp, #16]
  413780:	str	wzr, [x8, #200]
  413784:	ldr	x8, [x19, #8]
  413788:	ldp	x20, x19, [sp, #32]
  41378c:	ldr	x0, [x8, #192]
  413790:	ldp	x29, x30, [sp], #48
  413794:	b	402a50 <fflush@plt>
  413798:	ldp	x20, x19, [sp, #32]
  41379c:	ldr	x21, [sp, #16]
  4137a0:	ldp	x29, x30, [sp], #48
  4137a4:	ret
  4137a8:	stp	x29, x30, [sp, #-48]!
  4137ac:	str	x21, [sp, #16]
  4137b0:	stp	x20, x19, [sp, #32]
  4137b4:	mov	x29, sp
  4137b8:	ldr	x21, [x0, #8]
  4137bc:	strb	wzr, [x0, #64]
  4137c0:	str	wzr, [x0, #32]
  4137c4:	mov	x19, x0
  4137c8:	ldr	x20, [x21, #176]
  4137cc:	ldp	x8, x9, [x20, #24]
  4137d0:	cmp	x9, x8
  4137d4:	b.ne	4137e8 <feof@plt+0x10ae8>  // b.any
  4137d8:	mov	w1, #0x1                   	// #1
  4137dc:	mov	x0, x20
  4137e0:	bl	45500c <_obstack_newchunk@@Base>
  4137e4:	ldr	x8, [x20, #24]
  4137e8:	add	x9, x8, #0x1
  4137ec:	str	x9, [x20, #24]
  4137f0:	strb	wzr, [x8]
  4137f4:	ldr	x8, [x21, #176]
  4137f8:	ldr	x9, [x19, #8]
  4137fc:	ldr	x0, [x8, #16]
  413800:	ldr	x1, [x9, #192]
  413804:	bl	402620 <fputs@plt>
  413808:	ldr	x8, [x19, #8]
  41380c:	ldr	x0, [x8, #176]
  413810:	ldp	x8, x1, [x0, #8]
  413814:	cmp	x1, x8
  413818:	b.ls	413830 <feof@plt+0x10b30>  // b.plast
  41381c:	ldr	x8, [x0, #32]
  413820:	cmp	x1, x8
  413824:	b.cs	413830 <feof@plt+0x10b30>  // b.hs, b.nlast
  413828:	str	x1, [x0, #24]
  41382c:	b	413834 <feof@plt+0x10b34>
  413830:	bl	455194 <_obstack_free@@Base>
  413834:	ldr	x8, [x19, #8]
  413838:	ldr	x21, [sp, #16]
  41383c:	str	wzr, [x8, #200]
  413840:	ldr	x8, [x19, #8]
  413844:	ldp	x20, x19, [sp, #32]
  413848:	ldr	x0, [x8, #192]
  41384c:	ldp	x29, x30, [sp], #48
  413850:	b	402a50 <fflush@plt>
  413854:	stp	x29, x30, [sp, #-32]!
  413858:	stp	x20, x19, [sp, #16]
  41385c:	mov	x29, sp
  413860:	mov	w19, w1
  413864:	mov	x20, x0
  413868:	cmp	w1, #0x1
  41386c:	str	w1, [x0, #40]
  413870:	b.lt	41389c <feof@plt+0x10b9c>  // b.tstop
  413874:	ldr	w8, [x20, #36]
  413878:	cmp	w8, #0x2
  41387c:	b.cc	41389c <feof@plt+0x10b9c>  // b.lo, b.ul, b.last
  413880:	ldr	x0, [x20, #16]
  413884:	cbz	x0, 41388c <feof@plt+0x10b8c>
  413888:	bl	4026d0 <strlen@plt>
  41388c:	sub	w8, w19, w0
  413890:	add	w9, w19, #0x20
  413894:	cmp	w8, #0x20
  413898:	csel	w19, w9, w19, lt  // lt = tstop
  41389c:	str	w19, [x20, #28]
  4138a0:	ldp	x20, x19, [sp, #16]
  4138a4:	ldp	x29, x30, [sp], #32
  4138a8:	ret
  4138ac:	stp	x29, x30, [sp, #-48]!
  4138b0:	str	x21, [sp, #16]
  4138b4:	stp	x20, x19, [sp, #32]
  4138b8:	mov	x29, sp
  4138bc:	mov	x19, x0
  4138c0:	ldr	x0, [x0, #16]
  4138c4:	mov	x20, x1
  4138c8:	bl	402770 <free@plt>
  4138cc:	ldr	w21, [x19, #40]
  4138d0:	str	x20, [x19, #16]
  4138d4:	cmp	w21, #0x1
  4138d8:	b.lt	41390c <feof@plt+0x10c0c>  // b.tstop
  4138dc:	ldr	w8, [x19, #36]
  4138e0:	cmp	w8, #0x2
  4138e4:	b.cc	41390c <feof@plt+0x10c0c>  // b.lo, b.ul, b.last
  4138e8:	cbz	x20, 4138f8 <feof@plt+0x10bf8>
  4138ec:	mov	x0, x20
  4138f0:	bl	4026d0 <strlen@plt>
  4138f4:	b	4138fc <feof@plt+0x10bfc>
  4138f8:	mov	w0, wzr
  4138fc:	sub	w8, w21, w0
  413900:	add	w9, w21, #0x20
  413904:	cmp	w8, #0x20
  413908:	csel	w21, w9, w21, lt  // lt = tstop
  41390c:	strb	wzr, [x19, #64]
  413910:	stp	w21, wzr, [x19, #28]
  413914:	ldp	x20, x19, [sp, #32]
  413918:	ldr	x21, [sp, #16]
  41391c:	ldp	x29, x30, [sp], #48
  413920:	ret
  413924:	ldr	x8, [x0, #16]
  413928:	str	xzr, [x0, #16]
  41392c:	mov	x0, x8
  413930:	ret
  413934:	stp	x29, x30, [sp, #-32]!
  413938:	str	x19, [sp, #16]
  41393c:	mov	x29, sp
  413940:	mov	x19, x0
  413944:	ldr	x0, [x0, #16]
  413948:	cbz	x0, 413954 <feof@plt+0x10c54>
  41394c:	bl	402770 <free@plt>
  413950:	str	xzr, [x19, #16]
  413954:	ldr	x19, [sp, #16]
  413958:	ldp	x29, x30, [sp], #32
  41395c:	ret
  413960:	stp	x29, x30, [sp, #-64]!
  413964:	stp	x24, x23, [sp, #16]
  413968:	stp	x22, x21, [sp, #32]
  41396c:	stp	x20, x19, [sp, #48]
  413970:	mov	x29, sp
  413974:	ldr	x20, [x0, #16]
  413978:	cbz	x20, 413a50 <feof@plt+0x10d50>
  41397c:	ldr	w8, [x0, #36]
  413980:	mov	x19, x0
  413984:	cmp	w8, #0x2
  413988:	b.eq	4139bc <feof@plt+0x10cbc>  // b.none
  41398c:	cbnz	w8, 413a50 <feof@plt+0x10d50>
  413990:	ldrb	w8, [x19, #64]
  413994:	cbz	w8, 4139b0 <feof@plt+0x10cb0>
  413998:	mov	x0, x19
  41399c:	ldp	x20, x19, [sp, #48]
  4139a0:	ldp	x22, x21, [sp, #32]
  4139a4:	ldp	x24, x23, [sp, #16]
  4139a8:	ldp	x29, x30, [sp], #64
  4139ac:	b	4119bc <feof@plt+0xecbc>
  4139b0:	ldr	w8, [x19, #32]
  4139b4:	add	w8, w8, #0x3
  4139b8:	str	w8, [x19, #32]
  4139bc:	mov	x0, x20
  4139c0:	bl	4026d0 <strlen@plt>
  4139c4:	ldr	x24, [x19, #8]
  4139c8:	mov	x21, x0
  4139cc:	sxtw	x23, w21
  4139d0:	ldr	x22, [x24, #176]
  4139d4:	ldp	x0, x8, [x22, #24]
  4139d8:	sub	x8, x8, x0
  4139dc:	cmp	x8, x23
  4139e0:	b.cs	4139f4 <feof@plt+0x10cf4>  // b.hs, b.nlast
  4139e4:	mov	x0, x22
  4139e8:	mov	x1, x23
  4139ec:	bl	45500c <_obstack_newchunk@@Base>
  4139f0:	ldr	x0, [x22, #24]
  4139f4:	mov	x1, x20
  4139f8:	mov	x2, x23
  4139fc:	bl	402640 <memcpy@plt>
  413a00:	ldr	x8, [x22, #24]
  413a04:	cmp	w21, #0x1
  413a08:	add	x8, x8, x23
  413a0c:	str	x8, [x22, #24]
  413a10:	b.lt	413a48 <feof@plt+0x10d48>  // b.tstop
  413a14:	and	x8, x21, #0xffffffff
  413a18:	b	413a34 <feof@plt+0x10d34>
  413a1c:	ldr	w9, [x24, #200]
  413a20:	add	w9, w9, #0x1
  413a24:	subs	x8, x8, #0x1
  413a28:	add	x20, x20, #0x1
  413a2c:	str	w9, [x24, #200]
  413a30:	b.eq	413a48 <feof@plt+0x10d48>  // b.none
  413a34:	ldrb	w9, [x20]
  413a38:	cmp	w9, #0xa
  413a3c:	b.ne	413a1c <feof@plt+0x10d1c>  // b.any
  413a40:	mov	w9, wzr
  413a44:	b	413a24 <feof@plt+0x10d24>
  413a48:	mov	w8, #0x1                   	// #1
  413a4c:	strb	w8, [x19, #64]
  413a50:	ldp	x20, x19, [sp, #48]
  413a54:	ldp	x22, x21, [sp, #32]
  413a58:	ldp	x24, x23, [sp, #16]
  413a5c:	ldp	x29, x30, [sp], #64
  413a60:	ret
  413a64:	stp	x29, x30, [sp, #-64]!
  413a68:	stp	x24, x23, [sp, #16]
  413a6c:	stp	x22, x21, [sp, #32]
  413a70:	stp	x20, x19, [sp, #48]
  413a74:	mov	x29, sp
  413a78:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413a7c:	add	x8, x8, #0x678
  413a80:	mov	w20, w1
  413a84:	mov	x19, x0
  413a88:	str	x8, [x0]
  413a8c:	mov	w0, #0x1                   	// #1
  413a90:	mov	w1, #0x150                 	// #336
  413a94:	mov	w23, #0x1                   	// #1
  413a98:	bl	455390 <_obstack_memory_used@@Base+0x168>
  413a9c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  413aa0:	ldr	x8, [x8, #1416]
  413aa4:	movi	v0.2d, #0x0
  413aa8:	stp	x0, xzr, [x0, #176]
  413aac:	stp	q0, q0, [x0]
  413ab0:	str	x8, [x0, #192]
  413ab4:	mov	x8, x0
  413ab8:	stp	q0, q0, [x0, #32]
  413abc:	stp	q0, q0, [x0, #64]
  413ac0:	stp	q0, q0, [x0, #96]
  413ac4:	stp	q0, q0, [x0, #128]
  413ac8:	str	q0, [x0, #160]
  413acc:	str	q0, [x8, #200]!
  413ad0:	stur	q0, [x0, #248]
  413ad4:	stur	q0, [x0, #232]
  413ad8:	stur	q0, [x0, #216]
  413adc:	str	wzr, [x8, #128]
  413ae0:	stp	q0, q0, [x8, #96]
  413ae4:	stp	q0, q0, [x8, #64]
  413ae8:	strb	w23, [x0, #332]
  413aec:	adrp	x23, 419000 <feof@plt+0x16300>
  413af0:	adrp	x24, 419000 <feof@plt+0x16300>
  413af4:	add	x23, x23, #0xdf4
  413af8:	add	x24, x24, #0xe20
  413afc:	mov	x1, xzr
  413b00:	mov	x2, xzr
  413b04:	mov	x3, x23
  413b08:	mov	x4, x24
  413b0c:	mov	x21, x0
  413b10:	add	x22, x0, #0x58
  413b14:	bl	454eb0 <_obstack_begin@@Base>
  413b18:	mov	x0, x22
  413b1c:	mov	x1, xzr
  413b20:	mov	x2, xzr
  413b24:	mov	x3, x23
  413b28:	mov	x4, x24
  413b2c:	bl	454eb0 <_obstack_begin@@Base>
  413b30:	mov	w8, #0x10000               	// #65536
  413b34:	stp	xzr, xzr, [x19, #48]
  413b38:	str	w20, [x19, #40]
  413b3c:	stp	xzr, xzr, [x19, #24]
  413b40:	stp	x21, xzr, [x19, #8]
  413b44:	str	w20, [x19, #28]
  413b48:	str	w8, [x19, #64]
  413b4c:	strb	wzr, [x19, #64]
  413b50:	str	xzr, [x19, #32]
  413b54:	ldp	x20, x19, [sp, #48]
  413b58:	ldp	x22, x21, [sp, #32]
  413b5c:	ldp	x24, x23, [sp, #16]
  413b60:	ldp	x29, x30, [sp], #64
  413b64:	ret
  413b68:	stp	x29, x30, [sp, #-32]!
  413b6c:	stp	x20, x19, [sp, #16]
  413b70:	mov	x29, sp
  413b74:	mov	x19, x0
  413b78:	ldr	x0, [x0, #56]
  413b7c:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413b80:	add	x8, x8, #0x678
  413b84:	str	x8, [x19]
  413b88:	cbz	x0, 413b98 <feof@plt+0x10e98>
  413b8c:	ldr	x8, [x0]
  413b90:	ldr	x8, [x8, #8]
  413b94:	blr	x8
  413b98:	ldr	x20, [x19, #8]
  413b9c:	mov	x1, xzr
  413ba0:	add	x0, x20, #0x58
  413ba4:	bl	455194 <_obstack_free@@Base>
  413ba8:	mov	x0, x20
  413bac:	mov	x1, xzr
  413bb0:	bl	455194 <_obstack_free@@Base>
  413bb4:	ldr	x0, [x19, #8]
  413bb8:	bl	402770 <free@plt>
  413bbc:	ldr	x0, [x19, #16]
  413bc0:	ldp	x20, x19, [sp, #16]
  413bc4:	ldp	x29, x30, [sp], #32
  413bc8:	b	402770 <free@plt>
  413bcc:	stp	x29, x30, [sp, #-32]!
  413bd0:	stp	x20, x19, [sp, #16]
  413bd4:	mov	x29, sp
  413bd8:	mov	x19, x0
  413bdc:	ldr	x0, [x0, #56]
  413be0:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413be4:	add	x8, x8, #0x678
  413be8:	str	x8, [x19]
  413bec:	cbz	x0, 413bfc <feof@plt+0x10efc>
  413bf0:	ldr	x8, [x0]
  413bf4:	ldr	x8, [x8, #8]
  413bf8:	blr	x8
  413bfc:	ldr	x20, [x19, #8]
  413c00:	mov	x1, xzr
  413c04:	add	x0, x20, #0x58
  413c08:	bl	455194 <_obstack_free@@Base>
  413c0c:	mov	x0, x20
  413c10:	mov	x1, xzr
  413c14:	bl	455194 <_obstack_free@@Base>
  413c18:	ldr	x0, [x19, #8]
  413c1c:	bl	402770 <free@plt>
  413c20:	ldr	x0, [x19, #16]
  413c24:	bl	402770 <free@plt>
  413c28:	mov	x0, x19
  413c2c:	ldp	x20, x19, [sp, #16]
  413c30:	ldp	x29, x30, [sp], #32
  413c34:	b	402940 <_ZdlPv@plt>
  413c38:	ldr	x8, [x0, #8]
  413c3c:	ldr	x8, [x8, #176]
  413c40:	ldp	x8, x9, [x8, #16]
  413c44:	sub	x10, x9, #0x1
  413c48:	cmp	x8, x9
  413c4c:	csel	x0, xzr, x10, eq  // eq = none
  413c50:	ret
  413c54:	ldr	x8, [x0, #8]
  413c58:	ldr	w9, [x0, #28]
  413c5c:	ldr	w8, [x8, #200]
  413c60:	sub	w0, w9, w8
  413c64:	ret
  413c68:	sub	sp, sp, #0x130
  413c6c:	stp	x29, x30, [sp, #256]
  413c70:	str	x28, [sp, #272]
  413c74:	stp	x20, x19, [sp, #288]
  413c78:	add	x29, sp, #0x100
  413c7c:	mov	x8, #0xffffffffffffffd0    	// #-48
  413c80:	mov	x9, sp
  413c84:	sub	x10, x29, #0x78
  413c88:	movk	x8, #0xff80, lsl #32
  413c8c:	add	x11, x29, #0x30
  413c90:	add	x9, x9, #0x80
  413c94:	add	x10, x10, #0x30
  413c98:	mov	x19, x1
  413c9c:	mov	x20, x0
  413ca0:	stp	x2, x3, [x29, #-120]
  413ca4:	stp	x4, x5, [x29, #-104]
  413ca8:	stp	x6, x7, [x29, #-88]
  413cac:	stp	q1, q2, [sp, #16]
  413cb0:	stp	q3, q4, [sp, #48]
  413cb4:	str	q0, [sp]
  413cb8:	stp	q5, q6, [sp, #80]
  413cbc:	str	q7, [sp, #112]
  413cc0:	stp	x9, x8, [x29, #-56]
  413cc4:	stp	x11, x10, [x29, #-72]
  413cc8:	bl	402ac0 <__errno_location@plt>
  413ccc:	ldr	w8, [x0]
  413cd0:	sub	x9, x29, #0x48
  413cd4:	sub	x1, x29, #0x28
  413cd8:	mov	x0, x20
  413cdc:	stur	w8, [x29, #-24]
  413ce0:	stp	x19, x9, [x29, #-40]
  413ce4:	bl	411ab0 <feof@plt+0xedb0>
  413ce8:	mov	x0, x20
  413cec:	bl	4135bc <feof@plt+0x108bc>
  413cf0:	ldp	x20, x19, [sp, #288]
  413cf4:	ldr	x28, [sp, #272]
  413cf8:	ldp	x29, x30, [sp, #256]
  413cfc:	add	sp, sp, #0x130
  413d00:	ret
  413d04:	sub	sp, sp, #0x130
  413d08:	stp	x29, x30, [sp, #256]
  413d0c:	str	x28, [sp, #272]
  413d10:	stp	x20, x19, [sp, #288]
  413d14:	add	x29, sp, #0x100
  413d18:	mov	x8, #0xffffffffffffffd0    	// #-48
  413d1c:	mov	x9, sp
  413d20:	sub	x10, x29, #0x78
  413d24:	movk	x8, #0xff80, lsl #32
  413d28:	add	x11, x29, #0x30
  413d2c:	add	x9, x9, #0x80
  413d30:	add	x10, x10, #0x30
  413d34:	mov	x19, x1
  413d38:	mov	x20, x0
  413d3c:	stp	x2, x3, [x29, #-120]
  413d40:	stp	x4, x5, [x29, #-104]
  413d44:	stp	x6, x7, [x29, #-88]
  413d48:	stp	q1, q2, [sp, #16]
  413d4c:	stp	q3, q4, [sp, #48]
  413d50:	str	q0, [sp]
  413d54:	stp	q5, q6, [sp, #80]
  413d58:	str	q7, [sp, #112]
  413d5c:	stp	x9, x8, [x29, #-56]
  413d60:	stp	x11, x10, [x29, #-72]
  413d64:	bl	402ac0 <__errno_location@plt>
  413d68:	ldr	w8, [x0]
  413d6c:	sub	x9, x29, #0x48
  413d70:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x1dd8>
  413d74:	stp	x19, x9, [x29, #-40]
  413d78:	stur	w8, [x29, #-24]
  413d7c:	ldr	d0, [x10, #1672]
  413d80:	ldur	x19, [x20, #36]
  413d84:	sub	x1, x29, #0x28
  413d88:	mov	x0, x20
  413d8c:	stur	d0, [x20, #36]
  413d90:	bl	411ab0 <feof@plt+0xedb0>
  413d94:	mov	x0, x20
  413d98:	bl	4135bc <feof@plt+0x108bc>
  413d9c:	stur	x19, [x20, #36]
  413da0:	ldp	x20, x19, [sp, #288]
  413da4:	ldr	x28, [sp, #272]
  413da8:	ldp	x29, x30, [sp, #256]
  413dac:	add	sp, sp, #0x130
  413db0:	ret
  413db4:	stp	x29, x30, [sp, #-32]!
  413db8:	stp	x20, x19, [sp, #16]
  413dbc:	mov	x29, sp
  413dc0:	ldr	x8, [x0, #8]
  413dc4:	mov	x19, x0
  413dc8:	ldr	x20, [x8, #176]
  413dcc:	ldp	x8, x9, [x20, #24]
  413dd0:	cmp	x9, x8
  413dd4:	b.ne	413de8 <feof@plt+0x110e8>  // b.any
  413dd8:	mov	w1, #0x1                   	// #1
  413ddc:	mov	x0, x20
  413de0:	bl	45500c <_obstack_newchunk@@Base>
  413de4:	ldr	x8, [x20, #24]
  413de8:	add	x9, x8, #0x1
  413dec:	mov	w10, #0xa                   	// #10
  413df0:	str	x9, [x20, #24]
  413df4:	strb	w10, [x8]
  413df8:	ldr	x8, [x19, #8]
  413dfc:	strb	wzr, [x19, #65]
  413e00:	str	wzr, [x8, #200]
  413e04:	ldp	x20, x19, [sp, #16]
  413e08:	ldp	x29, x30, [sp], #32
  413e0c:	ret
  413e10:	stp	x29, x30, [sp, #-96]!
  413e14:	stp	x28, x27, [sp, #16]
  413e18:	stp	x26, x25, [sp, #32]
  413e1c:	stp	x24, x23, [sp, #48]
  413e20:	stp	x22, x21, [sp, #64]
  413e24:	stp	x20, x19, [sp, #80]
  413e28:	mov	x29, sp
  413e2c:	ldr	w8, [x0, #40]
  413e30:	mov	x19, x2
  413e34:	mov	x20, x0
  413e38:	mov	x22, x1
  413e3c:	cmp	w8, #0x1
  413e40:	b.lt	414034 <feof@plt+0x11334>  // b.tstop
  413e44:	cmp	x22, x19
  413e48:	b.eq	414018 <feof@plt+0x11318>  // b.none
  413e4c:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  413e50:	ldrh	w24, [x8, #1028]
  413e54:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x11dd8>
  413e58:	add	x25, x25, #0x3c4
  413e5c:	mov	w26, #0xa                   	// #10
  413e60:	mov	w27, #0x20                  	// #32
  413e64:	b	413e90 <feof@plt+0x11190>
  413e68:	add	x9, x8, #0x1
  413e6c:	str	x9, [x22, #24]
  413e70:	strb	w26, [x8]
  413e74:	ldr	x8, [x20, #8]
  413e78:	add	x21, x21, #0x1
  413e7c:	strb	wzr, [x20, #65]
  413e80:	str	wzr, [x8, #200]
  413e84:	cmp	x21, x19
  413e88:	mov	x22, x21
  413e8c:	b.eq	414018 <feof@plt+0x11318>  // b.none
  413e90:	cmp	x22, x19
  413e94:	b.eq	413ec0 <feof@plt+0x111c0>  // b.none
  413e98:	mov	x21, x22
  413e9c:	ldrb	w8, [x21]
  413ea0:	mov	w28, #0x1                   	// #1
  413ea4:	cmp	x8, #0xa
  413ea8:	b.eq	413ec8 <feof@plt+0x111c8>  // b.none
  413eac:	ldrh	w8, [x25, x8, lsl #1]
  413eb0:	tbnz	w8, #0, 413ec8 <feof@plt+0x111c8>
  413eb4:	add	x21, x21, #0x1
  413eb8:	cmp	x19, x21
  413ebc:	b.ne	413e9c <feof@plt+0x1119c>  // b.any
  413ec0:	mov	w28, wzr
  413ec4:	mov	x21, x19
  413ec8:	ldr	x8, [x20, #8]
  413ecc:	ldrsw	x9, [x20, #28]
  413ed0:	sub	x11, x21, x22
  413ed4:	ldrsw	x10, [x8, #200]
  413ed8:	sub	x9, x9, x10
  413edc:	cmp	x11, x9
  413ee0:	b.lt	413f1c <feof@plt+0x1121c>  // b.tstop
  413ee4:	ldr	x23, [x8, #176]
  413ee8:	ldp	x8, x9, [x23, #24]
  413eec:	cmp	x9, x8
  413ef0:	b.ne	413f04 <feof@plt+0x11204>  // b.any
  413ef4:	mov	w1, #0x1                   	// #1
  413ef8:	mov	x0, x23
  413efc:	bl	45500c <_obstack_newchunk@@Base>
  413f00:	ldr	x8, [x23, #24]
  413f04:	add	x9, x8, #0x1
  413f08:	str	x9, [x23, #24]
  413f0c:	strb	w26, [x8]
  413f10:	ldr	x8, [x20, #8]
  413f14:	strb	wzr, [x20, #65]
  413f18:	str	wzr, [x8, #200]
  413f1c:	mov	x0, x20
  413f20:	mov	x1, x22
  413f24:	mov	x2, x21
  413f28:	bl	413464 <feof@plt+0x10764>
  413f2c:	cbz	w28, 413fdc <feof@plt+0x112dc>
  413f30:	ldrb	w8, [x21]
  413f34:	ldrh	w8, [x25, x8, lsl #1]
  413f38:	tbz	w8, #0, 413fdc <feof@plt+0x112dc>
  413f3c:	ldr	w8, [x20, #40]
  413f40:	cmp	w8, #0x1
  413f44:	b.lt	413f98 <feof@plt+0x11298>  // b.tstop
  413f48:	ldr	x8, [x20, #8]
  413f4c:	ldr	w9, [x20, #28]
  413f50:	ldr	w10, [x8, #200]
  413f54:	cmp	w9, w10
  413f58:	b.gt	413f98 <feof@plt+0x11298>
  413f5c:	ldr	x22, [x8, #176]
  413f60:	ldp	x8, x9, [x22, #24]
  413f64:	cmp	x9, x8
  413f68:	b.ne	413f7c <feof@plt+0x1127c>  // b.any
  413f6c:	mov	w1, #0x1                   	// #1
  413f70:	mov	x0, x22
  413f74:	bl	45500c <_obstack_newchunk@@Base>
  413f78:	ldr	x8, [x22, #24]
  413f7c:	add	x9, x8, #0x1
  413f80:	str	x9, [x22, #24]
  413f84:	strb	w26, [x8]
  413f88:	ldr	x8, [x20, #8]
  413f8c:	strb	wzr, [x20, #65]
  413f90:	str	wzr, [x8, #200]
  413f94:	tbnz	w24, #6, 413fd8 <feof@plt+0x112d8>
  413f98:	ldr	x8, [x20, #8]
  413f9c:	ldr	x22, [x8, #176]
  413fa0:	ldp	x8, x9, [x22, #24]
  413fa4:	cmp	x9, x8
  413fa8:	b.ne	413fbc <feof@plt+0x112bc>  // b.any
  413fac:	mov	w1, #0x1                   	// #1
  413fb0:	mov	x0, x22
  413fb4:	bl	45500c <_obstack_newchunk@@Base>
  413fb8:	ldr	x8, [x22, #24]
  413fbc:	add	x9, x8, #0x1
  413fc0:	str	x9, [x22, #24]
  413fc4:	strb	w27, [x8]
  413fc8:	ldr	x8, [x20, #8]
  413fcc:	ldr	w9, [x8, #200]
  413fd0:	add	w9, w9, #0x1
  413fd4:	str	w9, [x8, #200]
  413fd8:	add	x21, x21, #0x1
  413fdc:	cmp	x21, x19
  413fe0:	b.eq	414018 <feof@plt+0x11318>  // b.none
  413fe4:	ldrb	w8, [x21]
  413fe8:	cmp	w8, #0xa
  413fec:	b.ne	413e84 <feof@plt+0x11184>  // b.any
  413ff0:	ldr	x8, [x20, #8]
  413ff4:	ldr	x22, [x8, #176]
  413ff8:	ldp	x8, x9, [x22, #24]
  413ffc:	cmp	x9, x8
  414000:	b.ne	413e68 <feof@plt+0x11168>  // b.any
  414004:	mov	w1, #0x1                   	// #1
  414008:	mov	x0, x22
  41400c:	bl	45500c <_obstack_newchunk@@Base>
  414010:	ldr	x8, [x22, #24]
  414014:	b	413e68 <feof@plt+0x11168>
  414018:	ldp	x20, x19, [sp, #80]
  41401c:	ldp	x22, x21, [sp, #64]
  414020:	ldp	x24, x23, [sp, #48]
  414024:	ldp	x26, x25, [sp, #32]
  414028:	ldp	x28, x27, [sp, #16]
  41402c:	ldp	x29, x30, [sp], #96
  414030:	ret
  414034:	mov	x0, x20
  414038:	mov	x1, x22
  41403c:	mov	x2, x19
  414040:	ldp	x20, x19, [sp, #80]
  414044:	ldp	x22, x21, [sp, #64]
  414048:	ldp	x24, x23, [sp, #48]
  41404c:	ldp	x26, x25, [sp, #32]
  414050:	ldp	x28, x27, [sp, #16]
  414054:	ldp	x29, x30, [sp], #96
  414058:	b	413464 <feof@plt+0x10764>
  41405c:	stp	x29, x30, [sp, #-32]!
  414060:	stp	x20, x19, [sp, #16]
  414064:	mov	x29, sp
  414068:	ldr	w8, [x0, #24]
  41406c:	cbz	w8, 414124 <feof@plt+0x11424>
  414070:	ldr	w8, [x0, #40]
  414074:	mov	x19, x0
  414078:	cmp	w8, #0x1
  41407c:	b.lt	4140dc <feof@plt+0x113dc>  // b.tstop
  414080:	ldr	x8, [x19, #8]
  414084:	ldr	w9, [x19, #28]
  414088:	ldr	w10, [x8, #200]
  41408c:	cmp	w9, w10
  414090:	b.gt	4140dc <feof@plt+0x113dc>
  414094:	ldr	x20, [x8, #176]
  414098:	ldp	x8, x9, [x20, #24]
  41409c:	cmp	x9, x8
  4140a0:	b.ne	4140b4 <feof@plt+0x113b4>  // b.any
  4140a4:	mov	w1, #0x1                   	// #1
  4140a8:	mov	x0, x20
  4140ac:	bl	45500c <_obstack_newchunk@@Base>
  4140b0:	ldr	x8, [x20, #24]
  4140b4:	add	x9, x8, #0x1
  4140b8:	mov	w10, #0xa                   	// #10
  4140bc:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4140c0:	str	x9, [x20, #24]
  4140c4:	strb	w10, [x8]
  4140c8:	ldr	x8, [x19, #8]
  4140cc:	ldrb	w9, [x11, #1028]
  4140d0:	strb	wzr, [x19, #65]
  4140d4:	str	wzr, [x8, #200]
  4140d8:	tbnz	w9, #6, 414120 <feof@plt+0x11420>
  4140dc:	ldr	x8, [x19, #8]
  4140e0:	ldr	x20, [x8, #176]
  4140e4:	ldp	x8, x9, [x20, #24]
  4140e8:	cmp	x9, x8
  4140ec:	b.ne	414100 <feof@plt+0x11400>  // b.any
  4140f0:	mov	w1, #0x1                   	// #1
  4140f4:	mov	x0, x20
  4140f8:	bl	45500c <_obstack_newchunk@@Base>
  4140fc:	ldr	x8, [x20, #24]
  414100:	add	x9, x8, #0x1
  414104:	mov	w10, #0x20                  	// #32
  414108:	str	x9, [x20, #24]
  41410c:	strb	w10, [x8]
  414110:	ldr	x8, [x19, #8]
  414114:	ldr	w9, [x8, #200]
  414118:	add	w9, w9, #0x1
  41411c:	str	w9, [x8, #200]
  414120:	str	wzr, [x19, #24]
  414124:	ldp	x20, x19, [sp, #16]
  414128:	ldp	x29, x30, [sp], #32
  41412c:	ret
  414130:	stp	x29, x30, [sp, #-32]!
  414134:	stp	x20, x19, [sp, #16]
  414138:	mov	x29, sp
  41413c:	ldr	x8, [x0, #8]
  414140:	mov	x19, x0
  414144:	ldr	x20, [x8, #176]
  414148:	ldp	x8, x9, [x20, #24]
  41414c:	cmp	x9, x8
  414150:	b.ne	414164 <feof@plt+0x11464>  // b.any
  414154:	mov	w1, #0x1                   	// #1
  414158:	mov	x0, x20
  41415c:	bl	45500c <_obstack_newchunk@@Base>
  414160:	ldr	x8, [x20, #24]
  414164:	add	x9, x8, #0x1
  414168:	mov	w10, #0xa                   	// #10
  41416c:	str	x9, [x20, #24]
  414170:	strb	w10, [x8]
  414174:	ldr	x8, [x19, #8]
  414178:	mov	x0, x19
  41417c:	strb	wzr, [x19, #65]
  414180:	str	wzr, [x8, #200]
  414184:	bl	4136e4 <feof@plt+0x109e4>
  414188:	strb	wzr, [x19, #65]
  41418c:	ldp	x20, x19, [sp, #16]
  414190:	ldp	x29, x30, [sp], #32
  414194:	ret
  414198:	stp	x29, x30, [sp, #-32]!
  41419c:	stp	x20, x19, [sp, #16]
  4141a0:	mov	x29, sp
  4141a4:	ldr	w8, [x0, #32]
  4141a8:	ldr	x9, [x0, #8]
  4141ac:	mov	x19, x0
  4141b0:	add	w8, w8, w1
  4141b4:	str	w8, [x0, #32]
  4141b8:	ldr	x20, [x9, #176]
  4141bc:	ldp	x8, x9, [x20, #24]
  4141c0:	cmp	x9, x8
  4141c4:	b.ne	4141d8 <feof@plt+0x114d8>  // b.any
  4141c8:	mov	w1, #0x1                   	// #1
  4141cc:	mov	x0, x20
  4141d0:	bl	45500c <_obstack_newchunk@@Base>
  4141d4:	ldr	x8, [x20, #24]
  4141d8:	add	x9, x8, #0x1
  4141dc:	mov	w10, #0xa                   	// #10
  4141e0:	str	x9, [x20, #24]
  4141e4:	strb	w10, [x8]
  4141e8:	ldr	x8, [x19, #8]
  4141ec:	mov	x0, x19
  4141f0:	strb	wzr, [x19, #65]
  4141f4:	str	wzr, [x8, #200]
  4141f8:	bl	4119bc <feof@plt+0xecbc>
  4141fc:	strb	wzr, [x19, #65]
  414200:	ldp	x20, x19, [sp, #16]
  414204:	ldp	x29, x30, [sp], #32
  414208:	ret
  41420c:	stp	x29, x30, [sp, #-32]!
  414210:	stp	x20, x19, [sp, #16]
  414214:	mov	x29, sp
  414218:	and	w1, w1, #0xff
  41421c:	mov	x19, x0
  414220:	bl	41164c <feof@plt+0xe94c>
  414224:	ldr	w8, [x19, #40]
  414228:	cmp	w8, #0x1
  41422c:	b.lt	41428c <feof@plt+0x1158c>  // b.tstop
  414230:	ldr	x8, [x19, #8]
  414234:	ldr	w9, [x19, #28]
  414238:	ldr	w10, [x8, #200]
  41423c:	cmp	w9, w10
  414240:	b.gt	41428c <feof@plt+0x1158c>
  414244:	ldr	x20, [x8, #176]
  414248:	ldp	x8, x9, [x20, #24]
  41424c:	cmp	x9, x8
  414250:	b.ne	414264 <feof@plt+0x11564>  // b.any
  414254:	mov	w1, #0x1                   	// #1
  414258:	mov	x0, x20
  41425c:	bl	45500c <_obstack_newchunk@@Base>
  414260:	ldr	x8, [x20, #24]
  414264:	add	x9, x8, #0x1
  414268:	mov	w10, #0xa                   	// #10
  41426c:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414270:	str	x9, [x20, #24]
  414274:	strb	w10, [x8]
  414278:	ldr	x8, [x19, #8]
  41427c:	ldrb	w9, [x11, #1028]
  414280:	strb	wzr, [x19, #65]
  414284:	str	wzr, [x8, #200]
  414288:	tbnz	w9, #6, 4142d0 <feof@plt+0x115d0>
  41428c:	ldr	x8, [x19, #8]
  414290:	ldr	x20, [x8, #176]
  414294:	ldp	x8, x9, [x20, #24]
  414298:	cmp	x9, x8
  41429c:	b.ne	4142b0 <feof@plt+0x115b0>  // b.any
  4142a0:	mov	w1, #0x1                   	// #1
  4142a4:	mov	x0, x20
  4142a8:	bl	45500c <_obstack_newchunk@@Base>
  4142ac:	ldr	x8, [x20, #24]
  4142b0:	add	x9, x8, #0x1
  4142b4:	mov	w10, #0x20                  	// #32
  4142b8:	str	x9, [x20, #24]
  4142bc:	strb	w10, [x8]
  4142c0:	ldr	x8, [x19, #8]
  4142c4:	ldr	w9, [x8, #200]
  4142c8:	add	w9, w9, #0x1
  4142cc:	str	w9, [x8, #200]
  4142d0:	ldp	x20, x19, [sp, #16]
  4142d4:	ldp	x29, x30, [sp], #32
  4142d8:	ret
  4142dc:	sub	sp, sp, #0x70
  4142e0:	stp	x29, x30, [sp, #32]
  4142e4:	stp	x26, x25, [sp, #48]
  4142e8:	stp	x24, x23, [sp, #64]
  4142ec:	stp	x22, x21, [sp, #80]
  4142f0:	stp	x20, x19, [sp, #96]
  4142f4:	add	x29, sp, #0x20
  4142f8:	mov	x19, x0
  4142fc:	bl	4026d0 <strlen@plt>
  414300:	cbz	x0, 414508 <feof@plt+0x11808>
  414304:	mov	x20, x0
  414308:	mov	x22, xzr
  41430c:	mov	w21, #0x1                   	// #1
  414310:	add	x0, x19, x22
  414314:	sub	x1, x20, x22
  414318:	sub	x2, x29, #0x8
  41431c:	bl	414598 <feof@plt+0x11898>
  414320:	cbz	w0, 414510 <feof@plt+0x11810>
  414324:	ldur	w8, [x29, #-8]
  414328:	cmp	w8, #0x20
  41432c:	b.cc	414510 <feof@plt+0x11810>  // b.lo, b.ul, b.last
  414330:	sub	w8, w8, #0x7f
  414334:	cmp	w8, #0x20
  414338:	b.ls	414510 <feof@plt+0x11810>  // b.plast
  41433c:	cmp	w0, #0x2
  414340:	add	x22, x22, w0, sxtw
  414344:	cset	w8, cc  // cc = lo, ul, last
  414348:	cmp	x20, x22
  41434c:	and	w21, w21, w8
  414350:	b.hi	414310 <feof@plt+0x11610>  // b.pmore
  414354:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  414358:	ldrb	w8, [x8, #2216]
  41435c:	cbnz	w8, 414508 <feof@plt+0x11808>
  414360:	eor	w8, w21, #0x1
  414364:	cbz	w8, 414508 <feof@plt+0x11808>
  414368:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41436c:	ldr	x0, [x8, #2208]
  414370:	adrp	x24, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  414374:	cbz	x0, 414488 <feof@plt+0x11788>
  414378:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41437c:	add	x1, x1, #0xac2
  414380:	bl	402760 <iconv_open@plt>
  414384:	cmn	x0, #0x1
  414388:	b.eq	414488 <feof@plt+0x11788>  // b.none
  41438c:	mov	w23, #0x1                   	// #1
  414390:	mov	x22, x0
  414394:	mov	w25, #0x1                   	// #1
  414398:	bfi	x23, x20, #2, #62
  41439c:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4143a0:	b	4143b0 <feof@plt+0x116b0>
  4143a4:	mov	w25, wzr
  4143a8:	mov	w8, #0x1                   	// #1
  4143ac:	cbnz	w8, 41447c <feof@plt+0x1177c>
  4143b0:	ldr	x8, [x24, #1312]
  4143b4:	sub	x9, x23, #0x1
  4143b8:	mov	x0, x23
  4143bc:	stur	x19, [x29, #-8]
  4143c0:	stp	x9, x20, [sp]
  4143c4:	blr	x8
  4143c8:	mov	x21, x0
  4143cc:	str	x0, [sp, #16]
  4143d0:	mov	x0, x22
  4143d4:	mov	x1, xzr
  4143d8:	mov	x2, xzr
  4143dc:	mov	x3, xzr
  4143e0:	mov	x4, xzr
  4143e4:	bl	4029c0 <iconv@plt>
  4143e8:	cmn	x0, #0x1
  4143ec:	b.eq	4143a4 <feof@plt+0x116a4>  // b.none
  4143f0:	sub	x1, x29, #0x8
  4143f4:	add	x2, sp, #0x8
  4143f8:	add	x3, sp, #0x10
  4143fc:	mov	x4, sp
  414400:	mov	x0, x22
  414404:	bl	4029c0 <iconv@plt>
  414408:	cmn	x0, #0x1
  41440c:	b.eq	414450 <feof@plt+0x11750>  // b.none
  414410:	ldr	x8, [sp, #8]
  414414:	cbnz	x8, 414450 <feof@plt+0x11750>
  414418:	cbnz	x0, 4143a4 <feof@plt+0x116a4>
  41441c:	add	x3, sp, #0x10
  414420:	mov	x4, sp
  414424:	mov	x0, x22
  414428:	mov	x1, xzr
  41442c:	mov	x2, xzr
  414430:	bl	4029c0 <iconv@plt>
  414434:	cmn	x0, #0x1
  414438:	b.eq	414450 <feof@plt+0x11750>  // b.none
  41443c:	ldr	x8, [sp, #16]
  414440:	strb	wzr, [x8]
  414444:	mov	w8, #0x1                   	// #1
  414448:	cbz	w8, 4143b0 <feof@plt+0x116b0>
  41444c:	b	41447c <feof@plt+0x1177c>
  414450:	bl	402ac0 <__errno_location@plt>
  414454:	ldr	w8, [x0]
  414458:	cmp	w8, #0x7
  41445c:	b.ne	4143a4 <feof@plt+0x116a4>  // b.any
  414460:	ldr	x8, [x26, #1320]
  414464:	mov	x0, x21
  414468:	lsl	x23, x23, #1
  41446c:	blr	x8
  414470:	mov	w8, wzr
  414474:	mov	x21, xzr
  414478:	cbz	w8, 4143b0 <feof@plt+0x116b0>
  41447c:	mov	x0, x22
  414480:	bl	402630 <iconv_close@plt>
  414484:	tbnz	w25, #0, 414578 <feof@plt+0x11878>
  414488:	ldr	x8, [x24, #1312]
  41448c:	add	x9, x20, x20, lsl #2
  414490:	mov	w0, #0x1                   	// #1
  414494:	bfi	x0, x9, #1, #63
  414498:	blr	x8
  41449c:	mov	x21, x0
  4144a0:	mov	x22, x0
  4144a4:	cbz	x20, 414574 <feof@plt+0x11874>
  4144a8:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4144ac:	mov	x25, xzr
  4144b0:	add	x23, x23, #0x72f
  4144b4:	mov	x22, x21
  4144b8:	b	4144dc <feof@plt+0x117dc>
  4144bc:	ldur	w2, [x29, #-8]
  4144c0:	mov	x0, x22
  4144c4:	mov	x1, x23
  4144c8:	bl	402880 <sprintf@plt>
  4144cc:	add	x22, x22, #0xa
  4144d0:	add	x25, x25, x26
  4144d4:	cmp	x20, x25
  4144d8:	b.ls	414574 <feof@plt+0x11874>  // b.plast
  4144dc:	add	x24, x19, x25
  4144e0:	sub	x1, x20, x25
  4144e4:	sub	x2, x29, #0x8
  4144e8:	mov	x0, x24
  4144ec:	bl	414598 <feof@plt+0x11898>
  4144f0:	cmp	w0, #0x1
  4144f4:	sxtw	x26, w0
  4144f8:	b.ne	4144bc <feof@plt+0x117bc>  // b.any
  4144fc:	ldrb	w8, [x24]
  414500:	strb	w8, [x22], #1
  414504:	b	4144d0 <feof@plt+0x117d0>
  414508:	mov	x21, x19
  41450c:	b	414578 <feof@plt+0x11878>
  414510:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  414514:	ldr	x8, [x8, #1312]
  414518:	mov	w0, #0x1                   	// #1
  41451c:	bfi	x0, x20, #2, #62
  414520:	blr	x8
  414524:	adrp	x22, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414528:	mov	x21, x0
  41452c:	add	x22, x22, #0x729
  414530:	mov	x23, x0
  414534:	b	414554 <feof@plt+0x11854>
  414538:	mov	x0, x23
  41453c:	mov	x1, x22
  414540:	bl	402880 <sprintf@plt>
  414544:	add	x23, x23, #0x4
  414548:	subs	x20, x20, #0x1
  41454c:	add	x19, x19, #0x1
  414550:	b.eq	41456c <feof@plt+0x1186c>  // b.none
  414554:	ldrb	w2, [x19]
  414558:	sub	w8, w2, #0x20
  41455c:	cmp	w8, #0x5e
  414560:	b.hi	414538 <feof@plt+0x11838>  // b.pmore
  414564:	strb	w2, [x23], #1
  414568:	b	414548 <feof@plt+0x11848>
  41456c:	strb	wzr, [x23]
  414570:	b	414578 <feof@plt+0x11878>
  414574:	strb	wzr, [x22]
  414578:	mov	x0, x21
  41457c:	ldp	x20, x19, [sp, #96]
  414580:	ldp	x22, x21, [sp, #80]
  414584:	ldp	x24, x23, [sp, #64]
  414588:	ldp	x26, x25, [sp, #48]
  41458c:	ldp	x29, x30, [sp, #32]
  414590:	add	sp, sp, #0x70
  414594:	ret
  414598:	stp	x29, x30, [sp, #-16]!
  41459c:	mov	x29, sp
  4145a0:	cbz	x1, 4146b8 <feof@plt+0x119b8>
  4145a4:	ldrb	w11, [x0]
  4145a8:	mov	x8, x0
  4145ac:	tbnz	w11, #7, 4145bc <feof@plt+0x118bc>
  4145b0:	mov	w0, #0x1                   	// #1
  4145b4:	mov	w10, w11
  4145b8:	b	414674 <feof@plt+0x11974>
  4145bc:	mov	x9, xzr
  4145c0:	mov	w10, w11
  4145c4:	mov	w12, w10
  4145c8:	add	x9, x9, #0x1
  4145cc:	lsl	w10, w10, #1
  4145d0:	tbnz	w12, #6, 4145c4 <feof@plt+0x118c4>
  4145d4:	mov	w0, wzr
  4145d8:	cmp	x9, x1
  4145dc:	mov	w10, #0xffffffff            	// #-1
  4145e0:	b.hi	414674 <feof@plt+0x11974>  // b.pmore
  4145e4:	sub	x12, x9, #0x2
  4145e8:	cmp	x12, #0x4
  4145ec:	b.hi	414674 <feof@plt+0x11974>  // b.pmore
  4145f0:	mov	w10, #0x7                   	// #7
  4145f4:	mov	w14, #0xffffffff            	// #-1
  4145f8:	sub	w10, w10, w9
  4145fc:	lsl	w10, w14, w10
  414600:	mov	x12, xzr
  414604:	sub	x13, x9, #0x1
  414608:	bic	w10, w11, w10
  41460c:	add	x11, x8, #0x1
  414610:	mov	w8, w10
  414614:	ldrb	w10, [x11, x12]
  414618:	and	w14, w10, #0xc0
  41461c:	cmp	w14, #0x80
  414620:	b.ne	41466c <feof@plt+0x1196c>  // b.any
  414624:	add	x12, x12, #0x1
  414628:	cmp	x13, x12
  41462c:	bfi	w10, w8, #6, #26
  414630:	b.ne	414610 <feof@plt+0x11910>  // b.any
  414634:	cmp	w10, #0x80
  414638:	b.cc	41466c <feof@plt+0x1196c>  // b.lo, b.ul, b.last
  41463c:	cmp	x9, #0x3
  414640:	b.cc	41464c <feof@plt+0x1194c>  // b.lo, b.ul, b.last
  414644:	cmp	w10, #0x800
  414648:	b.cc	41466c <feof@plt+0x1196c>  // b.lo, b.ul, b.last
  41464c:	cmp	x9, #0x4
  414650:	b.cc	41465c <feof@plt+0x1195c>  // b.lo, b.ul, b.last
  414654:	cmp	w10, #0x10, lsl #12
  414658:	b.cc	41466c <feof@plt+0x1196c>  // b.lo, b.ul, b.last
  41465c:	cmp	x9, #0x5
  414660:	b.cc	414680 <feof@plt+0x11980>  // b.lo, b.ul, b.last
  414664:	cmp	w10, #0x200, lsl #12
  414668:	b.cs	414680 <feof@plt+0x11980>  // b.hs, b.nlast
  41466c:	mov	w0, wzr
  414670:	mov	w10, #0xffffffff            	// #-1
  414674:	str	w10, [x2]
  414678:	ldp	x29, x30, [sp], #16
  41467c:	ret
  414680:	lsr	w11, w10, #26
  414684:	cmp	w11, #0x0
  414688:	and	w8, w8, #0x3ffffe0
  41468c:	cset	w11, eq  // eq = none
  414690:	cmp	x9, #0x5
  414694:	cset	w12, hi  // hi = pmore
  414698:	cmp	w8, #0x360
  41469c:	and	w8, w12, w11
  4146a0:	cset	w11, eq  // eq = none
  4146a4:	orr	w8, w8, w11
  4146a8:	cmp	w8, #0x0
  4146ac:	csinv	w10, w10, wzr, eq  // eq = none
  4146b0:	csel	w0, wzr, w9, ne  // ne = any
  4146b4:	b	414674 <feof@plt+0x11974>
  4146b8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4146bc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4146c0:	add	x0, x0, #0x693
  4146c4:	add	x2, x2, #0x73d
  4146c8:	mov	w1, #0x71b                 	// #1819
  4146cc:	bl	408b70 <feof@plt+0x5e70>
  4146d0:	stp	x29, x30, [sp, #-48]!
  4146d4:	stp	x22, x21, [sp, #16]
  4146d8:	stp	x20, x19, [sp, #32]
  4146dc:	mov	x29, sp
  4146e0:	ldrh	w8, [x1, #2]
  4146e4:	mov	x20, x1
  4146e8:	mov	x19, x0
  4146ec:	cbz	w8, 414974 <feof@plt+0x11c74>
  4146f0:	ldr	w8, [x19, #40]
  4146f4:	cmp	w8, #0x1
  4146f8:	b.lt	414758 <feof@plt+0x11a58>  // b.tstop
  4146fc:	ldr	x8, [x19, #8]
  414700:	ldr	w9, [x19, #28]
  414704:	ldr	w10, [x8, #200]
  414708:	cmp	w9, w10
  41470c:	b.gt	414758 <feof@plt+0x11a58>
  414710:	ldr	x21, [x8, #176]
  414714:	ldp	x8, x9, [x21, #24]
  414718:	cmp	x9, x8
  41471c:	b.ne	414730 <feof@plt+0x11a30>  // b.any
  414720:	mov	w1, #0x1                   	// #1
  414724:	mov	x0, x21
  414728:	bl	45500c <_obstack_newchunk@@Base>
  41472c:	ldr	x8, [x21, #24]
  414730:	add	x9, x8, #0x1
  414734:	mov	w10, #0xa                   	// #10
  414738:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41473c:	str	x9, [x21, #24]
  414740:	strb	w10, [x8]
  414744:	ldr	x8, [x19, #8]
  414748:	ldrb	w9, [x11, #1146]
  41474c:	strb	wzr, [x19, #65]
  414750:	str	wzr, [x8, #200]
  414754:	tbnz	w9, #6, 41479c <feof@plt+0x11a9c>
  414758:	ldr	x8, [x19, #8]
  41475c:	ldr	x21, [x8, #176]
  414760:	ldp	x8, x9, [x21, #24]
  414764:	cmp	x9, x8
  414768:	b.ne	41477c <feof@plt+0x11a7c>  // b.any
  41476c:	mov	w1, #0x1                   	// #1
  414770:	mov	x0, x21
  414774:	bl	45500c <_obstack_newchunk@@Base>
  414778:	ldr	x8, [x21, #24]
  41477c:	add	x9, x8, #0x1
  414780:	mov	w10, #0x5b                  	// #91
  414784:	str	x9, [x21, #24]
  414788:	strb	w10, [x8]
  41478c:	ldr	x8, [x19, #8]
  414790:	ldr	w9, [x8, #200]
  414794:	add	w9, w9, #0x1
  414798:	str	w9, [x8, #200]
  41479c:	ldr	x8, [x19, #8]
  4147a0:	ldrh	w2, [x20]
  4147a4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4147a8:	add	x1, x1, #0x6e1
  4147ac:	add	x0, x8, #0xcc
  4147b0:	bl	402880 <sprintf@plt>
  4147b4:	ldr	x8, [x19, #8]
  4147b8:	add	x21, x8, #0xcc
  4147bc:	mov	x0, x21
  4147c0:	bl	4026d0 <strlen@plt>
  4147c4:	add	x2, x21, x0
  4147c8:	mov	x0, x19
  4147cc:	mov	x1, x21
  4147d0:	bl	413e10 <feof@plt+0x11110>
  4147d4:	ldr	w8, [x19, #40]
  4147d8:	cmp	w8, #0x1
  4147dc:	b.lt	41483c <feof@plt+0x11b3c>  // b.tstop
  4147e0:	ldr	x8, [x19, #8]
  4147e4:	ldr	w9, [x19, #28]
  4147e8:	ldr	w10, [x8, #200]
  4147ec:	cmp	w9, w10
  4147f0:	b.gt	41483c <feof@plt+0x11b3c>
  4147f4:	ldr	x21, [x8, #176]
  4147f8:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4147fc:	ldrh	w22, [x10, #1052]
  414800:	ldp	x8, x9, [x21, #24]
  414804:	cmp	x9, x8
  414808:	b.ne	41481c <feof@plt+0x11b1c>  // b.any
  41480c:	mov	w1, #0x1                   	// #1
  414810:	mov	x0, x21
  414814:	bl	45500c <_obstack_newchunk@@Base>
  414818:	ldr	x8, [x21, #24]
  41481c:	add	x9, x8, #0x1
  414820:	mov	w10, #0xa                   	// #10
  414824:	str	x9, [x21, #24]
  414828:	strb	w10, [x8]
  41482c:	ldr	x8, [x19, #8]
  414830:	strb	wzr, [x19, #65]
  414834:	str	wzr, [x8, #200]
  414838:	tbnz	w22, #6, 414880 <feof@plt+0x11b80>
  41483c:	ldr	x8, [x19, #8]
  414840:	ldr	x21, [x8, #176]
  414844:	ldp	x8, x9, [x21, #24]
  414848:	cmp	x9, x8
  41484c:	b.ne	414860 <feof@plt+0x11b60>  // b.any
  414850:	mov	w1, #0x1                   	// #1
  414854:	mov	x0, x21
  414858:	bl	45500c <_obstack_newchunk@@Base>
  41485c:	ldr	x8, [x21, #24]
  414860:	add	x9, x8, #0x1
  414864:	mov	w10, #0x2c                  	// #44
  414868:	str	x9, [x21, #24]
  41486c:	strb	w10, [x8]
  414870:	ldr	x8, [x19, #8]
  414874:	ldr	w9, [x8, #200]
  414878:	add	w9, w9, #0x1
  41487c:	str	w9, [x8, #200]
  414880:	ldr	x8, [x19, #8]
  414884:	ldrh	w2, [x20, #2]
  414888:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41488c:	add	x1, x1, #0x6e1
  414890:	add	x0, x8, #0xcc
  414894:	bl	402880 <sprintf@plt>
  414898:	ldr	x8, [x19, #8]
  41489c:	add	x20, x8, #0xcc
  4148a0:	mov	x0, x20
  4148a4:	bl	4026d0 <strlen@plt>
  4148a8:	add	x2, x20, x0
  4148ac:	mov	x0, x19
  4148b0:	mov	x1, x20
  4148b4:	bl	413e10 <feof@plt+0x11110>
  4148b8:	ldr	w8, [x19, #40]
  4148bc:	cmp	w8, #0x0
  4148c0:	b.le	414920 <feof@plt+0x11c20>
  4148c4:	ldr	x8, [x19, #8]
  4148c8:	ldr	w9, [x19, #28]
  4148cc:	ldr	w10, [x8, #200]
  4148d0:	cmp	w9, w10
  4148d4:	b.gt	414920 <feof@plt+0x11c20>
  4148d8:	ldr	x20, [x8, #176]
  4148dc:	ldp	x8, x9, [x20, #24]
  4148e0:	cmp	x9, x8
  4148e4:	b.ne	4148f8 <feof@plt+0x11bf8>  // b.any
  4148e8:	mov	w1, #0x1                   	// #1
  4148ec:	mov	x0, x20
  4148f0:	bl	45500c <_obstack_newchunk@@Base>
  4148f4:	ldr	x8, [x20, #24]
  4148f8:	add	x9, x8, #0x1
  4148fc:	mov	w10, #0xa                   	// #10
  414900:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414904:	str	x9, [x20, #24]
  414908:	strb	w10, [x8]
  41490c:	ldr	x8, [x19, #8]
  414910:	ldrb	w9, [x11, #1150]
  414914:	strb	wzr, [x19, #65]
  414918:	str	wzr, [x8, #200]
  41491c:	tbnz	w9, #6, 414964 <feof@plt+0x11c64>
  414920:	ldr	x8, [x19, #8]
  414924:	ldr	x20, [x8, #176]
  414928:	ldp	x8, x9, [x20, #24]
  41492c:	cmp	x9, x8
  414930:	b.ne	414944 <feof@plt+0x11c44>  // b.any
  414934:	mov	w1, #0x1                   	// #1
  414938:	mov	x0, x20
  41493c:	bl	45500c <_obstack_newchunk@@Base>
  414940:	ldr	x8, [x20, #24]
  414944:	add	x9, x8, #0x1
  414948:	mov	w10, #0x5d                  	// #93
  41494c:	str	x9, [x20, #24]
  414950:	strb	w10, [x8]
  414954:	ldr	x8, [x19, #8]
  414958:	ldr	w9, [x8, #200]
  41495c:	add	w9, w9, #0x1
  414960:	str	w9, [x8, #200]
  414964:	ldp	x20, x19, [sp, #32]
  414968:	ldp	x22, x21, [sp, #16]
  41496c:	ldp	x29, x30, [sp], #48
  414970:	ret
  414974:	ldr	x8, [x19, #8]
  414978:	ldrh	w2, [x20]
  41497c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414980:	add	x1, x1, #0x6e1
  414984:	add	x0, x8, #0xcc
  414988:	bl	402880 <sprintf@plt>
  41498c:	ldr	x8, [x19, #8]
  414990:	add	x20, x8, #0xcc
  414994:	mov	x0, x20
  414998:	bl	4026d0 <strlen@plt>
  41499c:	add	x2, x20, x0
  4149a0:	mov	x0, x19
  4149a4:	mov	x1, x20
  4149a8:	ldp	x20, x19, [sp, #32]
  4149ac:	ldp	x22, x21, [sp, #16]
  4149b0:	ldp	x29, x30, [sp], #48
  4149b4:	b	413e10 <feof@plt+0x11110>
  4149b8:	stp	x29, x30, [sp, #-48]!
  4149bc:	stp	x22, x21, [sp, #16]
  4149c0:	stp	x20, x19, [sp, #32]
  4149c4:	mov	x29, sp
  4149c8:	ldr	x8, [x1, #8]
  4149cc:	mov	x20, x1
  4149d0:	mov	x19, x0
  4149d4:	cbz	x8, 414c5c <feof@plt+0x11f5c>
  4149d8:	ldr	w8, [x19, #40]
  4149dc:	cmp	w8, #0x1
  4149e0:	b.lt	414a40 <feof@plt+0x11d40>  // b.tstop
  4149e4:	ldr	x8, [x19, #8]
  4149e8:	ldr	w9, [x19, #28]
  4149ec:	ldr	w10, [x8, #200]
  4149f0:	cmp	w9, w10
  4149f4:	b.gt	414a40 <feof@plt+0x11d40>
  4149f8:	ldr	x21, [x8, #176]
  4149fc:	ldp	x8, x9, [x21, #24]
  414a00:	cmp	x9, x8
  414a04:	b.ne	414a18 <feof@plt+0x11d18>  // b.any
  414a08:	mov	w1, #0x1                   	// #1
  414a0c:	mov	x0, x21
  414a10:	bl	45500c <_obstack_newchunk@@Base>
  414a14:	ldr	x8, [x21, #24]
  414a18:	add	x9, x8, #0x1
  414a1c:	mov	w10, #0xa                   	// #10
  414a20:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414a24:	str	x9, [x21, #24]
  414a28:	strb	w10, [x8]
  414a2c:	ldr	x8, [x19, #8]
  414a30:	ldrb	w9, [x11, #1146]
  414a34:	strb	wzr, [x19, #65]
  414a38:	str	wzr, [x8, #200]
  414a3c:	tbnz	w9, #6, 414a84 <feof@plt+0x11d84>
  414a40:	ldr	x8, [x19, #8]
  414a44:	ldr	x21, [x8, #176]
  414a48:	ldp	x8, x9, [x21, #24]
  414a4c:	cmp	x9, x8
  414a50:	b.ne	414a64 <feof@plt+0x11d64>  // b.any
  414a54:	mov	w1, #0x1                   	// #1
  414a58:	mov	x0, x21
  414a5c:	bl	45500c <_obstack_newchunk@@Base>
  414a60:	ldr	x8, [x21, #24]
  414a64:	add	x9, x8, #0x1
  414a68:	mov	w10, #0x5b                  	// #91
  414a6c:	str	x9, [x21, #24]
  414a70:	strb	w10, [x8]
  414a74:	ldr	x8, [x19, #8]
  414a78:	ldr	w9, [x8, #200]
  414a7c:	add	w9, w9, #0x1
  414a80:	str	w9, [x8, #200]
  414a84:	ldr	x8, [x19, #8]
  414a88:	ldr	x2, [x20]
  414a8c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414a90:	add	x1, x1, #0x6e1
  414a94:	add	x0, x8, #0xcc
  414a98:	bl	402880 <sprintf@plt>
  414a9c:	ldr	x8, [x19, #8]
  414aa0:	add	x21, x8, #0xcc
  414aa4:	mov	x0, x21
  414aa8:	bl	4026d0 <strlen@plt>
  414aac:	add	x2, x21, x0
  414ab0:	mov	x0, x19
  414ab4:	mov	x1, x21
  414ab8:	bl	413e10 <feof@plt+0x11110>
  414abc:	ldr	w8, [x19, #40]
  414ac0:	cmp	w8, #0x1
  414ac4:	b.lt	414b24 <feof@plt+0x11e24>  // b.tstop
  414ac8:	ldr	x8, [x19, #8]
  414acc:	ldr	w9, [x19, #28]
  414ad0:	ldr	w10, [x8, #200]
  414ad4:	cmp	w9, w10
  414ad8:	b.gt	414b24 <feof@plt+0x11e24>
  414adc:	ldr	x21, [x8, #176]
  414ae0:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414ae4:	ldrh	w22, [x10, #1052]
  414ae8:	ldp	x8, x9, [x21, #24]
  414aec:	cmp	x9, x8
  414af0:	b.ne	414b04 <feof@plt+0x11e04>  // b.any
  414af4:	mov	w1, #0x1                   	// #1
  414af8:	mov	x0, x21
  414afc:	bl	45500c <_obstack_newchunk@@Base>
  414b00:	ldr	x8, [x21, #24]
  414b04:	add	x9, x8, #0x1
  414b08:	mov	w10, #0xa                   	// #10
  414b0c:	str	x9, [x21, #24]
  414b10:	strb	w10, [x8]
  414b14:	ldr	x8, [x19, #8]
  414b18:	strb	wzr, [x19, #65]
  414b1c:	str	wzr, [x8, #200]
  414b20:	tbnz	w22, #6, 414b68 <feof@plt+0x11e68>
  414b24:	ldr	x8, [x19, #8]
  414b28:	ldr	x21, [x8, #176]
  414b2c:	ldp	x8, x9, [x21, #24]
  414b30:	cmp	x9, x8
  414b34:	b.ne	414b48 <feof@plt+0x11e48>  // b.any
  414b38:	mov	w1, #0x1                   	// #1
  414b3c:	mov	x0, x21
  414b40:	bl	45500c <_obstack_newchunk@@Base>
  414b44:	ldr	x8, [x21, #24]
  414b48:	add	x9, x8, #0x1
  414b4c:	mov	w10, #0x2c                  	// #44
  414b50:	str	x9, [x21, #24]
  414b54:	strb	w10, [x8]
  414b58:	ldr	x8, [x19, #8]
  414b5c:	ldr	w9, [x8, #200]
  414b60:	add	w9, w9, #0x1
  414b64:	str	w9, [x8, #200]
  414b68:	ldr	x8, [x19, #8]
  414b6c:	ldr	x2, [x20, #8]
  414b70:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414b74:	add	x1, x1, #0x6e1
  414b78:	add	x0, x8, #0xcc
  414b7c:	bl	402880 <sprintf@plt>
  414b80:	ldr	x8, [x19, #8]
  414b84:	add	x20, x8, #0xcc
  414b88:	mov	x0, x20
  414b8c:	bl	4026d0 <strlen@plt>
  414b90:	add	x2, x20, x0
  414b94:	mov	x0, x19
  414b98:	mov	x1, x20
  414b9c:	bl	413e10 <feof@plt+0x11110>
  414ba0:	ldr	w8, [x19, #40]
  414ba4:	cmp	w8, #0x0
  414ba8:	b.le	414c08 <feof@plt+0x11f08>
  414bac:	ldr	x8, [x19, #8]
  414bb0:	ldr	w9, [x19, #28]
  414bb4:	ldr	w10, [x8, #200]
  414bb8:	cmp	w9, w10
  414bbc:	b.gt	414c08 <feof@plt+0x11f08>
  414bc0:	ldr	x20, [x8, #176]
  414bc4:	ldp	x8, x9, [x20, #24]
  414bc8:	cmp	x9, x8
  414bcc:	b.ne	414be0 <feof@plt+0x11ee0>  // b.any
  414bd0:	mov	w1, #0x1                   	// #1
  414bd4:	mov	x0, x20
  414bd8:	bl	45500c <_obstack_newchunk@@Base>
  414bdc:	ldr	x8, [x20, #24]
  414be0:	add	x9, x8, #0x1
  414be4:	mov	w10, #0xa                   	// #10
  414be8:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414bec:	str	x9, [x20, #24]
  414bf0:	strb	w10, [x8]
  414bf4:	ldr	x8, [x19, #8]
  414bf8:	ldrb	w9, [x11, #1150]
  414bfc:	strb	wzr, [x19, #65]
  414c00:	str	wzr, [x8, #200]
  414c04:	tbnz	w9, #6, 414c4c <feof@plt+0x11f4c>
  414c08:	ldr	x8, [x19, #8]
  414c0c:	ldr	x20, [x8, #176]
  414c10:	ldp	x8, x9, [x20, #24]
  414c14:	cmp	x9, x8
  414c18:	b.ne	414c2c <feof@plt+0x11f2c>  // b.any
  414c1c:	mov	w1, #0x1                   	// #1
  414c20:	mov	x0, x20
  414c24:	bl	45500c <_obstack_newchunk@@Base>
  414c28:	ldr	x8, [x20, #24]
  414c2c:	add	x9, x8, #0x1
  414c30:	mov	w10, #0x5d                  	// #93
  414c34:	str	x9, [x20, #24]
  414c38:	strb	w10, [x8]
  414c3c:	ldr	x8, [x19, #8]
  414c40:	ldr	w9, [x8, #200]
  414c44:	add	w9, w9, #0x1
  414c48:	str	w9, [x8, #200]
  414c4c:	ldp	x20, x19, [sp, #32]
  414c50:	ldp	x22, x21, [sp, #16]
  414c54:	ldp	x29, x30, [sp], #48
  414c58:	ret
  414c5c:	ldr	x8, [x19, #8]
  414c60:	ldr	x2, [x20]
  414c64:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414c68:	add	x1, x1, #0x6e1
  414c6c:	add	x0, x8, #0xcc
  414c70:	bl	402880 <sprintf@plt>
  414c74:	ldr	x8, [x19, #8]
  414c78:	add	x20, x8, #0xcc
  414c7c:	mov	x0, x20
  414c80:	bl	4026d0 <strlen@plt>
  414c84:	add	x2, x20, x0
  414c88:	mov	x0, x19
  414c8c:	mov	x1, x20
  414c90:	ldp	x20, x19, [sp, #32]
  414c94:	ldp	x22, x21, [sp, #16]
  414c98:	ldp	x29, x30, [sp], #48
  414c9c:	b	413e10 <feof@plt+0x11110>
  414ca0:	stp	x29, x30, [sp, #-48]!
  414ca4:	stp	x22, x21, [sp, #16]
  414ca8:	stp	x20, x19, [sp, #32]
  414cac:	mov	x29, sp
  414cb0:	ldr	x8, [x1, #8]
  414cb4:	mov	x20, x1
  414cb8:	mov	x19, x0
  414cbc:	cbz	x8, 414f44 <feof@plt+0x12244>
  414cc0:	ldr	w8, [x19, #40]
  414cc4:	cmp	w8, #0x1
  414cc8:	b.lt	414d28 <feof@plt+0x12028>  // b.tstop
  414ccc:	ldr	x8, [x19, #8]
  414cd0:	ldr	w9, [x19, #28]
  414cd4:	ldr	w10, [x8, #200]
  414cd8:	cmp	w9, w10
  414cdc:	b.gt	414d28 <feof@plt+0x12028>
  414ce0:	ldr	x21, [x8, #176]
  414ce4:	ldp	x8, x9, [x21, #24]
  414ce8:	cmp	x9, x8
  414cec:	b.ne	414d00 <feof@plt+0x12000>  // b.any
  414cf0:	mov	w1, #0x1                   	// #1
  414cf4:	mov	x0, x21
  414cf8:	bl	45500c <_obstack_newchunk@@Base>
  414cfc:	ldr	x8, [x21, #24]
  414d00:	add	x9, x8, #0x1
  414d04:	mov	w10, #0xa                   	// #10
  414d08:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414d0c:	str	x9, [x21, #24]
  414d10:	strb	w10, [x8]
  414d14:	ldr	x8, [x19, #8]
  414d18:	ldrb	w9, [x11, #1146]
  414d1c:	strb	wzr, [x19, #65]
  414d20:	str	wzr, [x8, #200]
  414d24:	tbnz	w9, #6, 414d6c <feof@plt+0x1206c>
  414d28:	ldr	x8, [x19, #8]
  414d2c:	ldr	x21, [x8, #176]
  414d30:	ldp	x8, x9, [x21, #24]
  414d34:	cmp	x9, x8
  414d38:	b.ne	414d4c <feof@plt+0x1204c>  // b.any
  414d3c:	mov	w1, #0x1                   	// #1
  414d40:	mov	x0, x21
  414d44:	bl	45500c <_obstack_newchunk@@Base>
  414d48:	ldr	x8, [x21, #24]
  414d4c:	add	x9, x8, #0x1
  414d50:	mov	w10, #0x5b                  	// #91
  414d54:	str	x9, [x21, #24]
  414d58:	strb	w10, [x8]
  414d5c:	ldr	x8, [x19, #8]
  414d60:	ldr	w9, [x8, #200]
  414d64:	add	w9, w9, #0x1
  414d68:	str	w9, [x8, #200]
  414d6c:	ldr	x8, [x19, #8]
  414d70:	ldr	x2, [x20]
  414d74:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414d78:	add	x1, x1, #0x6e1
  414d7c:	add	x0, x8, #0xcc
  414d80:	bl	402880 <sprintf@plt>
  414d84:	ldr	x8, [x19, #8]
  414d88:	add	x21, x8, #0xcc
  414d8c:	mov	x0, x21
  414d90:	bl	4026d0 <strlen@plt>
  414d94:	add	x2, x21, x0
  414d98:	mov	x0, x19
  414d9c:	mov	x1, x21
  414da0:	bl	413e10 <feof@plt+0x11110>
  414da4:	ldr	w8, [x19, #40]
  414da8:	cmp	w8, #0x1
  414dac:	b.lt	414e0c <feof@plt+0x1210c>  // b.tstop
  414db0:	ldr	x8, [x19, #8]
  414db4:	ldr	w9, [x19, #28]
  414db8:	ldr	w10, [x8, #200]
  414dbc:	cmp	w9, w10
  414dc0:	b.gt	414e0c <feof@plt+0x1210c>
  414dc4:	ldr	x21, [x8, #176]
  414dc8:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414dcc:	ldrh	w22, [x10, #1052]
  414dd0:	ldp	x8, x9, [x21, #24]
  414dd4:	cmp	x9, x8
  414dd8:	b.ne	414dec <feof@plt+0x120ec>  // b.any
  414ddc:	mov	w1, #0x1                   	// #1
  414de0:	mov	x0, x21
  414de4:	bl	45500c <_obstack_newchunk@@Base>
  414de8:	ldr	x8, [x21, #24]
  414dec:	add	x9, x8, #0x1
  414df0:	mov	w10, #0xa                   	// #10
  414df4:	str	x9, [x21, #24]
  414df8:	strb	w10, [x8]
  414dfc:	ldr	x8, [x19, #8]
  414e00:	strb	wzr, [x19, #65]
  414e04:	str	wzr, [x8, #200]
  414e08:	tbnz	w22, #6, 414e50 <feof@plt+0x12150>
  414e0c:	ldr	x8, [x19, #8]
  414e10:	ldr	x21, [x8, #176]
  414e14:	ldp	x8, x9, [x21, #24]
  414e18:	cmp	x9, x8
  414e1c:	b.ne	414e30 <feof@plt+0x12130>  // b.any
  414e20:	mov	w1, #0x1                   	// #1
  414e24:	mov	x0, x21
  414e28:	bl	45500c <_obstack_newchunk@@Base>
  414e2c:	ldr	x8, [x21, #24]
  414e30:	add	x9, x8, #0x1
  414e34:	mov	w10, #0x2c                  	// #44
  414e38:	str	x9, [x21, #24]
  414e3c:	strb	w10, [x8]
  414e40:	ldr	x8, [x19, #8]
  414e44:	ldr	w9, [x8, #200]
  414e48:	add	w9, w9, #0x1
  414e4c:	str	w9, [x8, #200]
  414e50:	ldr	x8, [x19, #8]
  414e54:	ldr	x2, [x20, #8]
  414e58:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414e5c:	add	x1, x1, #0x6e1
  414e60:	add	x0, x8, #0xcc
  414e64:	bl	402880 <sprintf@plt>
  414e68:	ldr	x8, [x19, #8]
  414e6c:	add	x20, x8, #0xcc
  414e70:	mov	x0, x20
  414e74:	bl	4026d0 <strlen@plt>
  414e78:	add	x2, x20, x0
  414e7c:	mov	x0, x19
  414e80:	mov	x1, x20
  414e84:	bl	413e10 <feof@plt+0x11110>
  414e88:	ldr	w8, [x19, #40]
  414e8c:	cmp	w8, #0x0
  414e90:	b.le	414ef0 <feof@plt+0x121f0>
  414e94:	ldr	x8, [x19, #8]
  414e98:	ldr	w9, [x19, #28]
  414e9c:	ldr	w10, [x8, #200]
  414ea0:	cmp	w9, w10
  414ea4:	b.gt	414ef0 <feof@plt+0x121f0>
  414ea8:	ldr	x20, [x8, #176]
  414eac:	ldp	x8, x9, [x20, #24]
  414eb0:	cmp	x9, x8
  414eb4:	b.ne	414ec8 <feof@plt+0x121c8>  // b.any
  414eb8:	mov	w1, #0x1                   	// #1
  414ebc:	mov	x0, x20
  414ec0:	bl	45500c <_obstack_newchunk@@Base>
  414ec4:	ldr	x8, [x20, #24]
  414ec8:	add	x9, x8, #0x1
  414ecc:	mov	w10, #0xa                   	// #10
  414ed0:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  414ed4:	str	x9, [x20, #24]
  414ed8:	strb	w10, [x8]
  414edc:	ldr	x8, [x19, #8]
  414ee0:	ldrb	w9, [x11, #1150]
  414ee4:	strb	wzr, [x19, #65]
  414ee8:	str	wzr, [x8, #200]
  414eec:	tbnz	w9, #6, 414f34 <feof@plt+0x12234>
  414ef0:	ldr	x8, [x19, #8]
  414ef4:	ldr	x20, [x8, #176]
  414ef8:	ldp	x8, x9, [x20, #24]
  414efc:	cmp	x9, x8
  414f00:	b.ne	414f14 <feof@plt+0x12214>  // b.any
  414f04:	mov	w1, #0x1                   	// #1
  414f08:	mov	x0, x20
  414f0c:	bl	45500c <_obstack_newchunk@@Base>
  414f10:	ldr	x8, [x20, #24]
  414f14:	add	x9, x8, #0x1
  414f18:	mov	w10, #0x5d                  	// #93
  414f1c:	str	x9, [x20, #24]
  414f20:	strb	w10, [x8]
  414f24:	ldr	x8, [x19, #8]
  414f28:	ldr	w9, [x8, #200]
  414f2c:	add	w9, w9, #0x1
  414f30:	str	w9, [x8, #200]
  414f34:	ldp	x20, x19, [sp, #32]
  414f38:	ldp	x22, x21, [sp, #16]
  414f3c:	ldp	x29, x30, [sp], #48
  414f40:	ret
  414f44:	ldr	x8, [x19, #8]
  414f48:	ldr	x2, [x20]
  414f4c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414f50:	add	x1, x1, #0x6e1
  414f54:	add	x0, x8, #0xcc
  414f58:	bl	402880 <sprintf@plt>
  414f5c:	ldr	x8, [x19, #8]
  414f60:	add	x20, x8, #0xcc
  414f64:	mov	x0, x20
  414f68:	bl	4026d0 <strlen@plt>
  414f6c:	add	x2, x20, x0
  414f70:	mov	x0, x19
  414f74:	mov	x1, x20
  414f78:	ldp	x20, x19, [sp, #32]
  414f7c:	ldp	x22, x21, [sp, #16]
  414f80:	ldp	x29, x30, [sp], #48
  414f84:	b	413e10 <feof@plt+0x11110>
  414f88:	stp	x29, x30, [sp, #-48]!
  414f8c:	str	x21, [sp, #16]
  414f90:	stp	x20, x19, [sp, #32]
  414f94:	mov	x29, sp
  414f98:	adrp	x19, 455000 <_obstack_begin_1@@Base+0xa4>
  414f9c:	add	x19, x19, #0xce0
  414fa0:	mov	w0, wzr
  414fa4:	mov	x1, x19
  414fa8:	bl	402950 <setlocale@plt>
  414fac:	mov	w0, #0x5                   	// #5
  414fb0:	mov	x1, x19
  414fb4:	bl	402950 <setlocale@plt>
  414fb8:	adrp	x19, 462000 <_obstack_memory_used@@Base+0xcdd8>
  414fbc:	add	x19, x19, #0x43a
  414fc0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414fc4:	add	x1, x1, #0x74e
  414fc8:	mov	x0, x19
  414fcc:	bl	4026a0 <bindtextdomain@plt>
  414fd0:	mov	x0, x19
  414fd4:	bl	402670 <textdomain@plt>
  414fd8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  414fdc:	add	x0, x0, #0x760
  414fe0:	bl	402910 <gettext@plt>
  414fe4:	adrp	x20, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  414fe8:	str	x0, [x20, #1328]
  414fec:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  414ff0:	add	x0, x0, #0xf89
  414ff4:	bl	402910 <gettext@plt>
  414ff8:	adrp	x21, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  414ffc:	str	x0, [x21, #1336]
  415000:	mov	w0, #0xe                   	// #14
  415004:	bl	402c00 <nl_langinfo@plt>
  415008:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41500c:	str	x0, [x8, #2208]
  415010:	cbz	x0, 415048 <feof@plt+0x12348>
  415014:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415018:	add	x1, x1, #0x762
  41501c:	mov	x19, x0
  415020:	bl	402ba0 <strcasecmp@plt>
  415024:	cbz	w0, 41503c <feof@plt+0x1233c>
  415028:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41502c:	add	x1, x1, #0x768
  415030:	mov	x0, x19
  415034:	bl	402ba0 <strcasecmp@plt>
  415038:	cbnz	w0, 415048 <feof@plt+0x12348>
  41503c:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  415040:	mov	w9, #0x1                   	// #1
  415044:	strb	w9, [x8, #2216]
  415048:	ldr	x0, [x20, #1328]
  41504c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415050:	add	x1, x1, #0x760
  415054:	bl	402b40 <strcmp@plt>
  415058:	cbnz	w0, 41509c <feof@plt+0x1239c>
  41505c:	ldr	x0, [x21, #1336]
  415060:	adrp	x19, 461000 <_obstack_memory_used@@Base+0xbdd8>
  415064:	add	x19, x19, #0xf89
  415068:	mov	x1, x19
  41506c:	bl	402b40 <strcmp@plt>
  415070:	cbnz	w0, 41509c <feof@plt+0x1239c>
  415074:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  415078:	ldrb	w8, [x8, #2216]
  41507c:	str	x19, [x20, #1328]
  415080:	cbz	w8, 41509c <feof@plt+0x1239c>
  415084:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415088:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41508c:	add	x8, x8, #0x76d
  415090:	add	x9, x9, #0x771
  415094:	str	x8, [x20, #1328]
  415098:	str	x9, [x21, #1336]
  41509c:	ldp	x20, x19, [sp, #32]
  4150a0:	ldr	x21, [sp, #16]
  4150a4:	ldp	x29, x30, [sp], #48
  4150a8:	ret
  4150ac:	stp	x29, x30, [sp, #-48]!
  4150b0:	str	x21, [sp, #16]
  4150b4:	stp	x20, x19, [sp, #32]
  4150b8:	mov	x29, sp
  4150bc:	mov	x19, x0
  4150c0:	mov	x0, xzr
  4150c4:	mov	x1, x19
  4150c8:	mov	x2, xzr
  4150cc:	bl	4029f0 <mbstowcs@plt>
  4150d0:	add	x2, x0, #0x1
  4150d4:	lsl	x8, x2, #2
  4150d8:	add	x8, x8, #0xf
  4150dc:	and	x8, x8, #0xfffffffffffffff0
  4150e0:	mov	x9, sp
  4150e4:	sub	x21, x9, x8
  4150e8:	mov	x20, x0
  4150ec:	mov	sp, x21
  4150f0:	mov	x0, x21
  4150f4:	mov	x1, x19
  4150f8:	bl	4029f0 <mbstowcs@plt>
  4150fc:	mov	x0, x21
  415100:	mov	x1, x20
  415104:	bl	402be0 <wcswidth@plt>
  415108:	sxtw	x0, w0
  41510c:	mov	sp, x29
  415110:	ldp	x20, x19, [sp, #32]
  415114:	ldr	x21, [sp, #16]
  415118:	ldp	x29, x30, [sp], #48
  41511c:	ret
  415120:	stp	x29, x30, [sp, #-32]!
  415124:	stp	x20, x19, [sp, #16]
  415128:	mov	x29, sp
  41512c:	bl	4150ac <feof@plt+0x123ac>
  415130:	mov	x19, x0
  415134:	add	x0, x0, #0x1
  415138:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41513c:	mov	w1, #0x20                  	// #32
  415140:	mov	x2, x19
  415144:	mov	x20, x0
  415148:	bl	402790 <memset@plt>
  41514c:	strb	wzr, [x20, x19]
  415150:	mov	x0, x20
  415154:	ldp	x20, x19, [sp, #16]
  415158:	ldp	x29, x30, [sp], #32
  41515c:	ret
  415160:	sub	sp, sp, #0x40
  415164:	stp	x29, x30, [sp, #16]
  415168:	stp	x22, x21, [sp, #32]
  41516c:	stp	x20, x19, [sp, #48]
  415170:	add	x29, sp, #0x10
  415174:	mov	w0, #0x20                  	// #32
  415178:	mov	x19, x3
  41517c:	mov	x20, x2
  415180:	mov	x21, x1
  415184:	bl	402970 <_Znwm@plt>
  415188:	adrp	x22, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41518c:	mov	x8, #0x300000000           	// #12884901888
  415190:	add	x22, x22, #0x8b8
  415194:	mov	x2, x0
  415198:	stp	xzr, xzr, [x0]
  41519c:	str	x8, [x0, #16]
  4151a0:	strb	wzr, [x0, #24]
  4151a4:	mov	x0, x22
  4151a8:	mov	x1, x21
  4151ac:	bl	415d14 <feof@plt+0x13014>
  4151b0:	ldr	x0, [x22, #48]
  4151b4:	lsr	x2, x21, #3
  4151b8:	add	x1, sp, #0x8
  4151bc:	str	x21, [sp, #8]
  4151c0:	bl	416500 <feof@plt+0x13800>
  4151c4:	ldr	x8, [x0]
  4151c8:	cbz	x8, 4151f0 <feof@plt+0x124f0>
  4151cc:	ldr	x8, [x0, #8]
  4151d0:	ldp	x9, x10, [x8]
  4151d4:	ldr	x11, [x8, #16]
  4151d8:	madd	x9, x19, x20, x9
  4151dc:	add	x10, x10, #0x1
  4151e0:	cmp	x11, x9
  4151e4:	stp	x9, x10, [x8]
  4151e8:	b.cs	4151f0 <feof@plt+0x124f0>  // b.hs, b.nlast
  4151ec:	str	x9, [x8, #16]
  4151f0:	ldp	x9, x10, [x8, #32]
  4151f4:	str	x19, [x8, #48]
  4151f8:	add	x9, x9, x20
  4151fc:	cmp	x10, x9
  415200:	str	x9, [x8, #32]
  415204:	b.cs	41520c <feof@plt+0x1250c>  // b.hs, b.nlast
  415208:	str	x9, [x8, #40]
  41520c:	ldp	x20, x19, [sp, #48]
  415210:	ldp	x22, x21, [sp, #32]
  415214:	ldp	x29, x30, [sp, #16]
  415218:	add	sp, sp, #0x40
  41521c:	ret
  415220:	sub	sp, sp, #0x50
  415224:	stp	x29, x30, [sp, #16]
  415228:	stp	x24, x23, [sp, #32]
  41522c:	stp	x22, x21, [sp, #48]
  415230:	stp	x20, x19, [sp, #64]
  415234:	add	x29, sp, #0x10
  415238:	adrp	x24, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41523c:	ldr	x0, [x24, #2280]
  415240:	lsr	x22, x1, #3
  415244:	mov	x21, x2
  415248:	mov	x23, x1
  41524c:	str	x1, [sp, #8]
  415250:	add	x1, sp, #0x8
  415254:	mov	w2, w22
  415258:	mov	w20, w4
  41525c:	mov	x19, x3
  415260:	bl	416500 <feof@plt+0x13800>
  415264:	ldr	x8, [x0]
  415268:	cbnz	x8, 415298 <feof@plt+0x12598>
  41526c:	mov	w0, #0x20                  	// #32
  415270:	bl	402970 <_Znwm@plt>
  415274:	mov	x8, #0x300000000           	// #12884901888
  415278:	mov	x2, x0
  41527c:	stp	xzr, xzr, [x0]
  415280:	str	x8, [x0, #16]
  415284:	strb	wzr, [x0, #24]
  415288:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41528c:	add	x0, x0, #0x8b8
  415290:	mov	x1, x23
  415294:	bl	415d14 <feof@plt+0x13014>
  415298:	ldr	x0, [x24, #2280]
  41529c:	add	x1, sp, #0x8
  4152a0:	mov	w2, w22
  4152a4:	str	x23, [sp, #8]
  4152a8:	bl	416500 <feof@plt+0x13800>
  4152ac:	ldr	x8, [x0]
  4152b0:	cbz	x8, 415304 <feof@plt+0x12604>
  4152b4:	ldr	x22, [x0, #8]
  4152b8:	ldr	x8, [x22]
  4152bc:	subs	x8, x8, x21
  4152c0:	b.cc	41532c <feof@plt+0x1262c>  // b.lo, b.ul, b.last
  4152c4:	str	x8, [x22]
  4152c8:	tbz	w20, #0, 415308 <feof@plt+0x12608>
  4152cc:	ldr	x8, [sp, #8]
  4152d0:	ldr	x20, [x24, #2280]
  4152d4:	add	x1, sp, #0x8
  4152d8:	mov	w3, wzr
  4152dc:	lsr	x2, x8, #3
  4152e0:	mov	x0, x20
  4152e4:	bl	4165e4 <feof@plt+0x138e4>
  4152e8:	cbz	x0, 415308 <feof@plt+0x12608>
  4152ec:	mov	w8, #0x1                   	// #1
  4152f0:	str	x8, [x0]
  4152f4:	ldr	x8, [x20, #24]
  4152f8:	add	x8, x8, #0x1
  4152fc:	str	x8, [x20, #24]
  415300:	b	415308 <feof@plt+0x12608>
  415304:	mov	x22, xzr
  415308:	ldr	x8, [x22, #32]
  41530c:	sub	x8, x8, x19
  415310:	str	x8, [x22, #32]
  415314:	ldp	x20, x19, [sp, #64]
  415318:	ldp	x22, x21, [sp, #48]
  41531c:	ldp	x24, x23, [sp, #32]
  415320:	ldp	x29, x30, [sp, #16]
  415324:	add	sp, sp, #0x50
  415328:	ret
  41532c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415330:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415334:	add	x0, x0, #0x7c1
  415338:	add	x2, x2, #0x7d7
  41533c:	mov	w1, #0x97                  	// #151
  415340:	bl	408b70 <feof@plt+0x5e70>
  415344:	cmp	w0, w1
  415348:	b.cs	41537c <feof@plt+0x1267c>  // b.hs, b.nlast
  41534c:	cbz	w0, 415360 <feof@plt+0x12660>
  415350:	cmp	w0, #0xf
  415354:	b.hi	415368 <feof@plt+0x12668>  // b.pmore
  415358:	lsl	w8, w0, #1
  41535c:	b	415370 <feof@plt+0x12670>
  415360:	mov	w8, #0x4                   	// #4
  415364:	b	415370 <feof@plt+0x12670>
  415368:	add	w8, w0, w0, lsl #1
  41536c:	lsr	w8, w8, #1
  415370:	cmp	w8, w1
  415374:	csel	w0, w1, w8, cc  // cc = lo, ul, last
  415378:	ret
  41537c:	stp	x29, x30, [sp, #-16]!
  415380:	mov	x29, sp
  415384:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415388:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41538c:	add	x0, x0, #0x775
  415390:	add	x2, x2, #0x785
  415394:	mov	w1, #0xa2                  	// #162
  415398:	bl	408b70 <feof@plt+0x5e70>
  41539c:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4153a0:	add	x0, x0, #0x8b8
  4153a4:	mov	w1, #0x3                   	// #3
  4153a8:	mov	x2, xzr
  4153ac:	b	415750 <feof@plt+0x12a50>
  4153b0:	stp	x29, x30, [sp, #-64]!
  4153b4:	str	x23, [sp, #16]
  4153b8:	stp	x22, x21, [sp, #32]
  4153bc:	stp	x20, x19, [sp, #48]
  4153c0:	mov	x29, sp
  4153c4:	mov	x19, x0
  4153c8:	mov	w0, #0x30                  	// #48
  4153cc:	bl	402970 <_Znwm@plt>
  4153d0:	mov	x20, x0
  4153d4:	stp	xzr, xzr, [x0, #24]
  4153d8:	str	xzr, [x0, #16]
  4153dc:	strb	wzr, [x0, #44]
  4153e0:	mov	w0, #0xd                   	// #13
  4153e4:	bl	419880 <feof@plt+0x16b80>
  4153e8:	mov	w8, w0
  4153ec:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4153f0:	lsl	x8, x8, #4
  4153f4:	add	x23, x23, #0x26c
  4153f8:	ldr	w22, [x23, x8]
  4153fc:	mov	w21, w0
  415400:	mov	w1, #0x10                  	// #16
  415404:	mov	x0, x22
  415408:	bl	455390 <_obstack_memory_used@@Base+0x168>
  41540c:	cbz	x0, 4155bc <feof@plt+0x128bc>
  415410:	cbz	w22, 41545c <feof@plt+0x1275c>
  415414:	cmp	w22, #0x1
  415418:	b.ne	415424 <feof@plt+0x12724>  // b.any
  41541c:	mov	x8, xzr
  415420:	b	415448 <feof@plt+0x12748>
  415424:	and	x8, x22, #0xfffffffe
  415428:	add	x9, x0, #0x10
  41542c:	mov	x10, x8
  415430:	stur	xzr, [x9, #-16]
  415434:	str	xzr, [x9], #32
  415438:	subs	x10, x10, #0x2
  41543c:	b.ne	415430 <feof@plt+0x12730>  // b.any
  415440:	cmp	x8, x22
  415444:	b.eq	41545c <feof@plt+0x1275c>  // b.none
  415448:	sub	x9, x22, x8
  41544c:	add	x8, x0, x8, lsl #4
  415450:	subs	x9, x9, #0x1
  415454:	str	xzr, [x8], #16
  415458:	b.ne	415450 <feof@plt+0x12750>  // b.any
  41545c:	stp	x0, x22, [x20]
  415460:	mov	w0, #0x30                  	// #48
  415464:	str	w21, [x20, #40]
  415468:	str	x20, [x19, #40]
  41546c:	bl	402970 <_Znwm@plt>
  415470:	mov	x20, x0
  415474:	stp	xzr, xzr, [x0, #24]
  415478:	str	xzr, [x0, #16]
  41547c:	strb	wzr, [x0, #44]
  415480:	mov	w0, #0xd                   	// #13
  415484:	bl	419880 <feof@plt+0x16b80>
  415488:	mov	w8, w0
  41548c:	lsl	x8, x8, #4
  415490:	ldr	w22, [x23, x8]
  415494:	mov	w21, w0
  415498:	mov	w1, #0x18                  	// #24
  41549c:	mov	x0, x22
  4154a0:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4154a4:	cbz	x0, 4155bc <feof@plt+0x128bc>
  4154a8:	cbz	w22, 4154fc <feof@plt+0x127fc>
  4154ac:	cmp	w22, #0x1
  4154b0:	b.ne	4154bc <feof@plt+0x127bc>  // b.any
  4154b4:	mov	x8, xzr
  4154b8:	b	4154e4 <feof@plt+0x127e4>
  4154bc:	and	x8, x22, #0xfffffffe
  4154c0:	mov	x9, x8
  4154c4:	mov	x10, x0
  4154c8:	str	xzr, [x10]
  4154cc:	str	xzr, [x10, #24]
  4154d0:	subs	x9, x9, #0x2
  4154d4:	add	x10, x10, #0x30
  4154d8:	b.ne	4154c8 <feof@plt+0x127c8>  // b.any
  4154dc:	cmp	x8, x22
  4154e0:	b.eq	4154fc <feof@plt+0x127fc>  // b.none
  4154e4:	mov	w10, #0x18                  	// #24
  4154e8:	sub	x9, x22, x8
  4154ec:	madd	x8, x8, x10, x0
  4154f0:	subs	x9, x9, #0x1
  4154f4:	str	xzr, [x8], #24
  4154f8:	b.ne	4154f0 <feof@plt+0x127f0>  // b.any
  4154fc:	stp	x0, x22, [x20]
  415500:	mov	w0, #0x30                  	// #48
  415504:	str	w21, [x20, #40]
  415508:	str	x20, [x19, #48]
  41550c:	bl	402970 <_Znwm@plt>
  415510:	mov	x20, x0
  415514:	stp	xzr, xzr, [x0, #24]
  415518:	str	xzr, [x0, #16]
  41551c:	strb	wzr, [x0, #44]
  415520:	mov	w0, #0xd                   	// #13
  415524:	bl	419880 <feof@plt+0x16b80>
  415528:	mov	w8, w0
  41552c:	lsl	x8, x8, #4
  415530:	ldr	w22, [x23, x8]
  415534:	mov	w21, w0
  415538:	mov	w1, #0x18                  	// #24
  41553c:	mov	x0, x22
  415540:	bl	455390 <_obstack_memory_used@@Base+0x168>
  415544:	cbz	x0, 4155bc <feof@plt+0x128bc>
  415548:	cbz	w22, 41559c <feof@plt+0x1289c>
  41554c:	cmp	w22, #0x1
  415550:	b.ne	41555c <feof@plt+0x1285c>  // b.any
  415554:	mov	x8, xzr
  415558:	b	415584 <feof@plt+0x12884>
  41555c:	and	x8, x22, #0xfffffffe
  415560:	mov	x9, x8
  415564:	mov	x10, x0
  415568:	str	xzr, [x10]
  41556c:	str	xzr, [x10, #24]
  415570:	subs	x9, x9, #0x2
  415574:	add	x10, x10, #0x30
  415578:	b.ne	415568 <feof@plt+0x12868>  // b.any
  41557c:	cmp	x8, x22
  415580:	b.eq	41559c <feof@plt+0x1289c>  // b.none
  415584:	mov	w10, #0x18                  	// #24
  415588:	sub	x9, x22, x8
  41558c:	madd	x8, x8, x10, x0
  415590:	subs	x9, x9, #0x1
  415594:	str	xzr, [x8], #24
  415598:	b.ne	415590 <feof@plt+0x12890>  // b.any
  41559c:	stp	x0, x22, [x20]
  4155a0:	str	w21, [x20, #40]
  4155a4:	str	x20, [x19]
  4155a8:	ldp	x20, x19, [sp, #48]
  4155ac:	ldp	x22, x21, [sp, #32]
  4155b0:	ldr	x23, [sp, #16]
  4155b4:	ldp	x29, x30, [sp], #64
  4155b8:	ret
  4155bc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4155c0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4155c4:	add	x0, x0, #0x79c
  4155c8:	add	x2, x2, #0x7b3
  4155cc:	mov	w1, #0x2b5                 	// #693
  4155d0:	bl	408b70 <feof@plt+0x5e70>
  4155d4:	stp	x29, x30, [sp, #-48]!
  4155d8:	stp	x22, x21, [sp, #16]
  4155dc:	stp	x20, x19, [sp, #32]
  4155e0:	mov	x29, sp
  4155e4:	ldr	x20, [x0, #40]
  4155e8:	mov	x19, x0
  4155ec:	ldr	x8, [x20, #8]
  4155f0:	cmp	x8, #0x1
  4155f4:	b.lt	415618 <feof@plt+0x12918>  // b.tstop
  4155f8:	ldr	x21, [x20]
  4155fc:	add	x22, x21, x8, lsl #4
  415600:	ldr	x8, [x21]
  415604:	cmp	x8, #0x1
  415608:	b.hi	415620 <feof@plt+0x12920>  // b.pmore
  41560c:	add	x21, x21, #0x10
  415610:	cmp	x21, x22
  415614:	b.cc	415600 <feof@plt+0x12900>  // b.lo, b.ul, b.last
  415618:	mov	x21, xzr
  41561c:	mov	x22, xzr
  415620:	orr	x8, x21, x22
  415624:	cbnz	x8, 415674 <feof@plt+0x12974>
  415628:	cbnz	x20, 4156b0 <feof@plt+0x129b0>
  41562c:	ldr	x20, [x19, #48]
  415630:	cbnz	x20, 415704 <feof@plt+0x12a04>
  415634:	ldr	x19, [x19]
  415638:	cbz	x19, 415740 <feof@plt+0x12a40>
  41563c:	ldr	x8, [x19, #8]
  415640:	mov	x9, x8
  415644:	sub	x9, x9, #0x1
  415648:	cmp	x9, x8
  41564c:	b.cc	415644 <feof@plt+0x12944>  // b.lo, b.ul, b.last
  415650:	ldrb	w8, [x19, #44]
  415654:	ldr	x0, [x19]
  415658:	cbz	w8, 4156d8 <feof@plt+0x129d8>
  41565c:	bl	419dac <feof@plt+0x170ac>
  415660:	b	4156dc <feof@plt+0x129dc>
  415664:	mov	x22, xzr
  415668:	mov	x21, xzr
  41566c:	orr	x8, x21, x22
  415670:	cbz	x8, 4156a8 <feof@plt+0x129a8>
  415674:	ldr	x0, [x21]
  415678:	cbz	x0, 415680 <feof@plt+0x12980>
  41567c:	bl	402940 <_ZdlPv@plt>
  415680:	ldr	x0, [x21, #8]
  415684:	cbz	x0, 41568c <feof@plt+0x1298c>
  415688:	bl	402940 <_ZdlPv@plt>
  41568c:	add	x21, x21, #0x10
  415690:	cmp	x21, x22
  415694:	b.cs	415664 <feof@plt+0x12964>  // b.hs, b.nlast
  415698:	ldr	x8, [x21]
  41569c:	cmp	x8, #0x1
  4156a0:	b.ls	41568c <feof@plt+0x1298c>  // b.plast
  4156a4:	b	41566c <feof@plt+0x1296c>
  4156a8:	ldr	x20, [x19, #40]
  4156ac:	cbz	x20, 41562c <feof@plt+0x1292c>
  4156b0:	ldr	x8, [x20, #8]
  4156b4:	mov	x9, x8
  4156b8:	sub	x9, x9, #0x1
  4156bc:	cmp	x9, x8
  4156c0:	b.cc	4156b8 <feof@plt+0x129b8>  // b.lo, b.ul, b.last
  4156c4:	ldrb	w8, [x20, #44]
  4156c8:	ldr	x0, [x20]
  4156cc:	cbz	w8, 4156f0 <feof@plt+0x129f0>
  4156d0:	bl	419dac <feof@plt+0x170ac>
  4156d4:	b	4156f4 <feof@plt+0x129f4>
  4156d8:	bl	402770 <free@plt>
  4156dc:	mov	x0, x19
  4156e0:	ldp	x20, x19, [sp, #32]
  4156e4:	ldp	x22, x21, [sp, #16]
  4156e8:	ldp	x29, x30, [sp], #48
  4156ec:	b	402940 <_ZdlPv@plt>
  4156f0:	bl	402770 <free@plt>
  4156f4:	mov	x0, x20
  4156f8:	bl	402940 <_ZdlPv@plt>
  4156fc:	ldr	x20, [x19, #48]
  415700:	cbz	x20, 415634 <feof@plt+0x12934>
  415704:	ldr	x8, [x20, #8]
  415708:	mov	x9, x8
  41570c:	sub	x9, x9, #0x1
  415710:	cmp	x9, x8
  415714:	b.cc	41570c <feof@plt+0x12a0c>  // b.lo, b.ul, b.last
  415718:	ldrb	w8, [x20, #44]
  41571c:	ldr	x0, [x20]
  415720:	cbz	w8, 41572c <feof@plt+0x12a2c>
  415724:	bl	419dac <feof@plt+0x170ac>
  415728:	b	415730 <feof@plt+0x12a30>
  41572c:	bl	402770 <free@plt>
  415730:	mov	x0, x20
  415734:	bl	402940 <_ZdlPv@plt>
  415738:	ldr	x19, [x19]
  41573c:	cbnz	x19, 41563c <feof@plt+0x1293c>
  415740:	ldp	x20, x19, [sp, #32]
  415744:	ldp	x22, x21, [sp, #16]
  415748:	ldp	x29, x30, [sp], #48
  41574c:	ret
  415750:	sub	sp, sp, #0xa0
  415754:	stp	x29, x30, [sp, #80]
  415758:	str	x25, [sp, #96]
  41575c:	stp	x24, x23, [sp, #112]
  415760:	stp	x22, x21, [sp, #128]
  415764:	stp	x20, x19, [sp, #144]
  415768:	add	x29, sp, #0x50
  41576c:	adrp	x23, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  415770:	mov	w20, w1
  415774:	ldr	x1, [x23, #1416]
  415778:	mov	x21, x0
  41577c:	mov	w0, #0xa                   	// #10
  415780:	mov	x22, x2
  415784:	bl	4029a0 <fputc@plt>
  415788:	ldr	x8, [x21, #40]
  41578c:	mov	w1, #0x10                  	// #16
  415790:	ldp	x9, x8, [x8, #16]
  415794:	sub	x0, x9, x8
  415798:	bl	455390 <_obstack_memory_used@@Base+0x168>
  41579c:	ldr	x9, [x21, #40]
  4157a0:	mov	x19, x0
  4157a4:	ldr	x8, [x9, #8]
  4157a8:	cmp	x8, #0x1
  4157ac:	b.lt	4157dc <feof@plt+0x12adc>  // b.tstop
  4157b0:	ldr	x10, [x9]
  4157b4:	add	x11, x10, x8, lsl #4
  4157b8:	ldr	x8, [x10]
  4157bc:	cmp	x8, #0x1
  4157c0:	b.hi	4157e8 <feof@plt+0x12ae8>  // b.pmore
  4157c4:	add	x10, x10, #0x10
  4157c8:	mov	x9, xzr
  4157cc:	cmp	x10, x11
  4157d0:	mov	x8, xzr
  4157d4:	b.cc	4157b8 <feof@plt+0x12ab8>  // b.lo, b.ul, b.last
  4157d8:	b	4157f0 <feof@plt+0x12af0>
  4157dc:	mov	x9, xzr
  4157e0:	mov	x8, xzr
  4157e4:	b	4157f0 <feof@plt+0x12af0>
  4157e8:	mov	x9, x10
  4157ec:	mov	x8, x11
  4157f0:	mov	w24, wzr
  4157f4:	orr	x10, x8, x9
  4157f8:	cbz	x10, 41586c <feof@plt+0x12b6c>
  4157fc:	ldr	x10, [x9]
  415800:	ldr	w10, [x10, #20]
  415804:	cmp	w10, w20
  415808:	b.ne	41581c <feof@plt+0x12b1c>  // b.any
  41580c:	ldp	x10, x11, [x9]
  415810:	add	x12, x19, w24, uxtw #4
  415814:	add	w24, w24, #0x1
  415818:	stp	x10, x11, [x12]
  41581c:	add	x10, x9, #0x10
  415820:	cmp	x10, x8
  415824:	b.cs	41584c <feof@plt+0x12b4c>  // b.hs, b.nlast
  415828:	ldr	x9, [x10]
  41582c:	cmp	x9, #0x1
  415830:	b.hi	415858 <feof@plt+0x12b58>  // b.pmore
  415834:	add	x10, x10, #0x10
  415838:	mov	x11, xzr
  41583c:	cmp	x10, x8
  415840:	mov	x9, xzr
  415844:	b.cc	415828 <feof@plt+0x12b28>  // b.lo, b.ul, b.last
  415848:	b	415860 <feof@plt+0x12b60>
  41584c:	mov	x11, xzr
  415850:	mov	x9, xzr
  415854:	b	415860 <feof@plt+0x12b60>
  415858:	mov	x11, x8
  41585c:	mov	x9, x10
  415860:	orr	x10, x9, x11
  415864:	mov	x8, x11
  415868:	cbnz	x10, 4157fc <feof@plt+0x12afc>
  41586c:	adrp	x8, 416000 <feof@plt+0x13300>
  415870:	add	x8, x8, #0xb80
  415874:	cmp	x22, #0x0
  415878:	mov	w1, w24
  41587c:	csel	x3, x8, x22, eq  // eq = none
  415880:	mov	w2, #0x10                  	// #16
  415884:	mov	x0, x19
  415888:	bl	419e48 <feof@plt+0x17148>
  41588c:	ldr	x8, [x21, #40]
  415890:	mov	w1, #0x10                  	// #16
  415894:	ldp	x9, x8, [x8, #16]
  415898:	sub	x0, x9, x8
  41589c:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4158a0:	ldr	x9, [x21, #40]
  4158a4:	mov	x21, x0
  4158a8:	ldr	x8, [x9, #8]
  4158ac:	cmp	x8, #0x1
  4158b0:	b.lt	4158e0 <feof@plt+0x12be0>  // b.tstop
  4158b4:	ldr	x10, [x9]
  4158b8:	add	x11, x10, x8, lsl #4
  4158bc:	ldr	x8, [x10]
  4158c0:	cmp	x8, #0x1
  4158c4:	b.hi	4158ec <feof@plt+0x12bec>  // b.pmore
  4158c8:	add	x10, x10, #0x10
  4158cc:	mov	x9, xzr
  4158d0:	cmp	x10, x11
  4158d4:	mov	x8, xzr
  4158d8:	b.cc	4158bc <feof@plt+0x12bbc>  // b.lo, b.ul, b.last
  4158dc:	b	4158f4 <feof@plt+0x12bf4>
  4158e0:	mov	x9, xzr
  4158e4:	mov	x8, xzr
  4158e8:	b	4158f4 <feof@plt+0x12bf4>
  4158ec:	mov	x9, x10
  4158f0:	mov	x8, x11
  4158f4:	mov	w25, wzr
  4158f8:	orr	x10, x8, x9
  4158fc:	cbz	x10, 415970 <feof@plt+0x12c70>
  415900:	ldr	x10, [x9]
  415904:	ldr	w10, [x10, #20]
  415908:	cmp	w10, w20
  41590c:	b.ne	415920 <feof@plt+0x12c20>  // b.any
  415910:	ldp	x10, x11, [x9]
  415914:	add	x12, x21, w25, uxtw #4
  415918:	add	w25, w25, #0x1
  41591c:	stp	x10, x11, [x12]
  415920:	add	x10, x9, #0x10
  415924:	cmp	x10, x8
  415928:	b.cs	415950 <feof@plt+0x12c50>  // b.hs, b.nlast
  41592c:	ldr	x9, [x10]
  415930:	cmp	x9, #0x1
  415934:	b.hi	41595c <feof@plt+0x12c5c>  // b.pmore
  415938:	add	x10, x10, #0x10
  41593c:	mov	x11, xzr
  415940:	cmp	x10, x8
  415944:	mov	x9, xzr
  415948:	b.cc	41592c <feof@plt+0x12c2c>  // b.lo, b.ul, b.last
  41594c:	b	415964 <feof@plt+0x12c64>
  415950:	mov	x11, xzr
  415954:	mov	x9, xzr
  415958:	b	415964 <feof@plt+0x12c64>
  41595c:	mov	x11, x8
  415960:	mov	x9, x10
  415964:	orr	x10, x9, x11
  415968:	mov	x8, x11
  41596c:	cbnz	x10, 415900 <feof@plt+0x12c00>
  415970:	mov	w22, w25
  415974:	adrp	x3, 416000 <feof@plt+0x13300>
  415978:	add	x3, x3, #0xb80
  41597c:	mov	w2, #0x10                  	// #16
  415980:	mov	x0, x21
  415984:	mov	x1, x22
  415988:	bl	419e48 <feof@plt+0x17148>
  41598c:	mov	w8, #0x1                   	// #1
  415990:	stp	xzr, xzr, [sp, #16]
  415994:	stp	xzr, xzr, [sp, #56]
  415998:	stp	xzr, x8, [sp, #32]
  41599c:	str	xzr, [sp, #48]
  4159a0:	cbz	w25, 415a78 <feof@plt+0x12d78>
  4159a4:	cmp	w22, #0x2
  4159a8:	b.hi	4159c0 <feof@plt+0x12cc0>  // b.pmore
  4159ac:	mov	x8, xzr
  4159b0:	mov	x9, xzr
  4159b4:	movi	v0.2d, #0x0
  4159b8:	movi	v1.2d, #0x0
  4159bc:	b	415a38 <feof@plt+0x12d38>
  4159c0:	and	x8, x22, #0xfffffffe
  4159c4:	mov	x9, xzr
  4159c8:	mov	x10, xzr
  4159cc:	add	x11, x21, #0x18
  4159d0:	movi	v0.2d, #0x0
  4159d4:	movi	v3.2d, #0x0
  4159d8:	movi	v1.2d, #0x0
  4159dc:	mov	x12, x8
  4159e0:	movi	v2.2d, #0x0
  4159e4:	ldur	x13, [x11, #-16]
  4159e8:	ldr	x14, [x11], #32
  4159ec:	subs	x12, x12, #0x2
  4159f0:	ldr	q4, [x13]
  4159f4:	ldr	q5, [x14]
  4159f8:	ldr	x15, [x13, #16]
  4159fc:	ldr	x16, [x14, #16]
  415a00:	add	v3.2d, v4.2d, v3.2d
  415a04:	ldr	q4, [x13, #32]
  415a08:	add	v0.2d, v5.2d, v0.2d
  415a0c:	ldr	q5, [x14, #32]
  415a10:	add	x9, x15, x9
  415a14:	add	x10, x16, x10
  415a18:	add	v2.2d, v4.2d, v2.2d
  415a1c:	add	v1.2d, v5.2d, v1.2d
  415a20:	b.ne	4159e4 <feof@plt+0x12ce4>  // b.any
  415a24:	add	v0.2d, v0.2d, v3.2d
  415a28:	add	x9, x10, x9
  415a2c:	cmp	x8, x22
  415a30:	add	v1.2d, v1.2d, v2.2d
  415a34:	b.eq	415a68 <feof@plt+0x12d68>  // b.none
  415a38:	sub	x10, x22, x8
  415a3c:	add	x8, x21, x8, lsl #4
  415a40:	add	x8, x8, #0x8
  415a44:	ldr	x11, [x8], #16
  415a48:	subs	x10, x10, #0x1
  415a4c:	ldr	q2, [x11]
  415a50:	ldr	x12, [x11, #16]
  415a54:	ldr	q3, [x11, #32]
  415a58:	add	v0.2d, v2.2d, v0.2d
  415a5c:	add	x9, x12, x9
  415a60:	add	v1.2d, v3.2d, v1.2d
  415a64:	b.ne	415a44 <feof@plt+0x12d44>  // b.any
  415a68:	str	q0, [sp, #16]
  415a6c:	str	q1, [sp, #48]
  415a70:	stp	x9, xzr, [sp, #32]
  415a74:	str	xzr, [sp, #64]
  415a78:	mov	x0, x21
  415a7c:	bl	402770 <free@plt>
  415a80:	ldr	x1, [x23, #1416]
  415a84:	mov	x21, #0xffffffffffffff74    	// #-140
  415a88:	mov	w0, #0x2d                  	// #45
  415a8c:	bl	4029a0 <fputc@plt>
  415a90:	ldr	x1, [x23, #1416]
  415a94:	adds	x21, x21, #0x1
  415a98:	b.cc	415a88 <feof@plt+0x12d88>  // b.lo, b.ul, b.last
  415a9c:	mov	w0, #0xa                   	// #10
  415aa0:	bl	4029a0 <fputc@plt>
  415aa4:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415aa8:	add	x8, x8, #0x8f8
  415aac:	ldr	x20, [x8, w20, uxtw #3]
  415ab0:	ldr	x0, [x23, #1416]
  415ab4:	adrp	x21, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ab8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415abc:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ac0:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ac4:	adrp	x5, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ac8:	adrp	x6, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415acc:	adrp	x7, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ad0:	add	x21, x21, #0x82d
  415ad4:	add	x1, x1, #0x7e8
  415ad8:	add	x3, x3, #0x808
  415adc:	add	x4, x4, #0x812
  415ae0:	add	x5, x5, #0x817
  415ae4:	add	x6, x6, #0x81c
  415ae8:	add	x7, x7, #0x822
  415aec:	mov	x2, x20
  415af0:	str	x21, [sp]
  415af4:	bl	4026f0 <fprintf@plt>
  415af8:	ldr	x1, [x23, #1416]
  415afc:	mov	x22, #0xffffffffffffff74    	// #-140
  415b00:	mov	w0, #0x2d                  	// #45
  415b04:	bl	4029a0 <fputc@plt>
  415b08:	ldr	x1, [x23, #1416]
  415b0c:	adds	x22, x22, #0x1
  415b10:	b.cc	415b00 <feof@plt+0x12e00>  // b.lo, b.ul, b.last
  415b14:	mov	w0, #0xa                   	// #10
  415b18:	bl	4029a0 <fputc@plt>
  415b1c:	subs	w8, w24, #0x1
  415b20:	b.mi	415b48 <feof@plt+0x12e48>  // b.first
  415b24:	add	x8, x19, w8, uxtw #4
  415b28:	add	x22, x8, #0x8
  415b2c:	ldp	x1, x0, [x22, #-8]
  415b30:	add	x2, sp, #0x10
  415b34:	bl	416988 <feof@plt+0x13c88>
  415b38:	sub	w24, w24, #0x1
  415b3c:	cmp	w24, #0x0
  415b40:	sub	x22, x22, #0x10
  415b44:	b.gt	415b2c <feof@plt+0x12e2c>
  415b48:	ldr	x1, [x23, #1416]
  415b4c:	mov	x22, #0xffffffffffffff74    	// #-140
  415b50:	mov	w0, #0x2d                  	// #45
  415b54:	bl	4029a0 <fputc@plt>
  415b58:	ldr	x1, [x23, #1416]
  415b5c:	adds	x22, x22, #0x1
  415b60:	b.cc	415b50 <feof@plt+0x12e50>  // b.lo, b.ul, b.last
  415b64:	mov	w0, #0xa                   	// #10
  415b68:	bl	4029a0 <fputc@plt>
  415b6c:	ldr	x0, [x23, #1416]
  415b70:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415b74:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415b78:	adrp	x4, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415b7c:	adrp	x5, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415b80:	adrp	x6, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415b84:	adrp	x7, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415b88:	add	x1, x1, #0x7e8
  415b8c:	add	x3, x3, #0x808
  415b90:	add	x4, x4, #0x812
  415b94:	add	x5, x5, #0x817
  415b98:	add	x6, x6, #0x81c
  415b9c:	add	x7, x7, #0x822
  415ba0:	mov	x2, x20
  415ba4:	str	x21, [sp]
  415ba8:	bl	4026f0 <fprintf@plt>
  415bac:	ldr	x1, [x23, #1416]
  415bb0:	mov	x20, #0xffffffffffffff74    	// #-140
  415bb4:	mov	w0, #0x2d                  	// #45
  415bb8:	bl	4029a0 <fputc@plt>
  415bbc:	ldr	x1, [x23, #1416]
  415bc0:	adds	x20, x20, #0x1
  415bc4:	b.cc	415bb4 <feof@plt+0x12eb4>  // b.lo, b.ul, b.last
  415bc8:	mov	w0, #0xa                   	// #10
  415bcc:	bl	4029a0 <fputc@plt>
  415bd0:	ldr	x8, [sp, #16]
  415bd4:	ldr	x0, [x23, #1416]
  415bd8:	lsr	x10, x8, #11
  415bdc:	cmp	x10, #0x5
  415be0:	mov	x3, x8
  415be4:	b.cc	415c00 <feof@plt+0x12f00>  // b.lo, b.ul, b.last
  415be8:	lsr	x9, x8, #21
  415bec:	cmp	x9, #0x4
  415bf0:	b.hi	415bfc <feof@plt+0x12efc>  // b.pmore
  415bf4:	lsr	x3, x8, #10
  415bf8:	b	415c00 <feof@plt+0x12f00>
  415bfc:	lsr	x3, x8, #20
  415c00:	ldr	x12, [sp, #24]
  415c04:	cmp	x8, #0xa00, lsl #12
  415c08:	mov	w8, #0x4d                  	// #77
  415c0c:	mov	w9, #0x6b                  	// #107
  415c10:	csel	w11, w9, w8, cc  // cc = lo, ul, last
  415c14:	cmp	x10, #0x5
  415c18:	mov	w10, #0x20                  	// #32
  415c1c:	csel	w4, w10, w11, cc  // cc = lo, ul, last
  415c20:	lsr	x11, x12, #11
  415c24:	cmp	x11, #0x5
  415c28:	mov	x5, x12
  415c2c:	b.cc	415c48 <feof@plt+0x12f48>  // b.lo, b.ul, b.last
  415c30:	lsr	x13, x12, #21
  415c34:	cmp	x13, #0x4
  415c38:	b.hi	415c44 <feof@plt+0x12f44>  // b.pmore
  415c3c:	lsr	x5, x12, #10
  415c40:	b	415c48 <feof@plt+0x12f48>
  415c44:	lsr	x5, x12, #20
  415c48:	cmp	x12, #0xa00, lsl #12
  415c4c:	ldr	x12, [sp, #48]
  415c50:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  415c54:	cmp	x11, #0x5
  415c58:	csel	w6, w10, w8, cc  // cc = lo, ul, last
  415c5c:	lsr	x8, x12, #11
  415c60:	cmp	x8, #0x5
  415c64:	mov	x7, x12
  415c68:	b.cc	415c84 <feof@plt+0x12f84>  // b.lo, b.ul, b.last
  415c6c:	lsr	x9, x12, #21
  415c70:	cmp	x9, #0x4
  415c74:	b.hi	415c80 <feof@plt+0x12f80>  // b.pmore
  415c78:	lsr	x7, x12, #10
  415c7c:	b	415c84 <feof@plt+0x12f84>
  415c80:	lsr	x7, x12, #20
  415c84:	cmp	x12, #0xa00, lsl #12
  415c88:	mov	w9, #0x4d                  	// #77
  415c8c:	mov	w10, #0x6b                  	// #107
  415c90:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  415c94:	cmp	x8, #0x5
  415c98:	mov	w8, #0x20                  	// #32
  415c9c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ca0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  415ca4:	csel	w8, w8, w9, cc  // cc = lo, ul, last
  415ca8:	add	x1, x1, #0x8d5
  415cac:	add	x2, x2, #0x8ee
  415cb0:	str	w8, [sp]
  415cb4:	bl	4026f0 <fprintf@plt>
  415cb8:	ldr	x1, [x23, #1416]
  415cbc:	mov	x20, #0xffffffffffffff74    	// #-140
  415cc0:	mov	w0, #0x2d                  	// #45
  415cc4:	bl	4029a0 <fputc@plt>
  415cc8:	ldr	x1, [x23, #1416]
  415ccc:	adds	x20, x20, #0x1
  415cd0:	b.cc	415cc0 <feof@plt+0x12fc0>  // b.lo, b.ul, b.last
  415cd4:	mov	w0, #0xa                   	// #10
  415cd8:	bl	4029a0 <fputc@plt>
  415cdc:	mov	x0, x19
  415ce0:	bl	402770 <free@plt>
  415ce4:	ldr	x1, [x23, #1416]
  415ce8:	mov	w0, #0xa                   	// #10
  415cec:	bl	4029a0 <fputc@plt>
  415cf0:	ldp	x20, x19, [sp, #144]
  415cf4:	ldp	x22, x21, [sp, #128]
  415cf8:	ldp	x24, x23, [sp, #112]
  415cfc:	ldr	x25, [sp, #96]
  415d00:	ldp	x29, x30, [sp, #80]
  415d04:	add	sp, sp, #0xa0
  415d08:	ret
  415d0c:	ret
  415d10:	ret
  415d14:	sub	sp, sp, #0x50
  415d18:	stp	x29, x30, [sp, #16]
  415d1c:	str	x23, [sp, #32]
  415d20:	stp	x22, x21, [sp, #48]
  415d24:	stp	x20, x19, [sp, #64]
  415d28:	add	x29, sp, #0x10
  415d2c:	stp	x2, x1, [sp]
  415d30:	ldr	x8, [x2]
  415d34:	ldr	x21, [x0, #40]
  415d38:	mov	x20, x2
  415d3c:	mov	x19, x0
  415d40:	mov	w22, #0x79b9                	// #31161
  415d44:	add	x0, x29, #0x18
  415d48:	mov	w1, #0x8                   	// #8
  415d4c:	mov	w2, wzr
  415d50:	movk	w22, #0x9e37, lsl #16
  415d54:	str	x8, [x29, #24]
  415d58:	bl	454b70 <feof@plt+0x51e70>
  415d5c:	ldr	x8, [x20, #8]
  415d60:	mov	w2, w0
  415d64:	add	x0, x29, #0x18
  415d68:	mov	w1, #0x8                   	// #8
  415d6c:	str	x8, [x29, #24]
  415d70:	bl	454b70 <feof@plt+0x51e70>
  415d74:	ldr	w8, [x20, #16]
  415d78:	sub	w9, w22, w0
  415d7c:	mov	x1, sp
  415d80:	sub	w9, w9, w8
  415d84:	sub	w8, w8, w0
  415d88:	eor	w9, w9, w0, lsr #13
  415d8c:	sub	w8, w8, w9
  415d90:	sub	w10, w0, w9
  415d94:	eor	w8, w8, w9, lsl #8
  415d98:	sub	w10, w10, w8
  415d9c:	sub	w9, w9, w8
  415da0:	eor	w10, w10, w8, lsr #13
  415da4:	sub	w9, w9, w10
  415da8:	sub	w8, w8, w10
  415dac:	eor	w9, w9, w10, lsr #12
  415db0:	sub	w8, w8, w9
  415db4:	sub	w10, w10, w9
  415db8:	eor	w8, w8, w9, lsl #16
  415dbc:	sub	w10, w10, w8
  415dc0:	sub	w9, w9, w8
  415dc4:	eor	w10, w10, w8, lsr #5
  415dc8:	sub	w9, w9, w10
  415dcc:	sub	w8, w8, w10
  415dd0:	eor	w9, w9, w10, lsr #3
  415dd4:	sub	w8, w8, w9
  415dd8:	eor	w8, w8, w9, lsl #10
  415ddc:	sub	w9, w10, w9
  415de0:	sub	w9, w9, w8
  415de4:	eor	w2, w9, w8, lsr #15
  415de8:	mov	x0, x21
  415dec:	bl	415f6c <feof@plt+0x1326c>
  415df0:	ldr	x8, [x0]
  415df4:	cbz	x8, 415e1c <feof@plt+0x1311c>
  415df8:	mov	x20, x0
  415dfc:	ldr	x0, [sp]
  415e00:	cbz	x0, 415e08 <feof@plt+0x13108>
  415e04:	bl	402940 <_ZdlPv@plt>
  415e08:	ldr	x20, [x20, #8]
  415e0c:	ldr	x8, [x20, #24]
  415e10:	add	x8, x8, #0x1
  415e14:	str	x8, [x20, #24]
  415e18:	b	415f08 <feof@plt+0x13208>
  415e1c:	mov	w0, #0x38                  	// #56
  415e20:	bl	402970 <_Znwm@plt>
  415e24:	ldr	x23, [sp]
  415e28:	mov	w8, #0x1                   	// #1
  415e2c:	stp	xzr, xzr, [x0]
  415e30:	stp	xzr, x8, [x0, #16]
  415e34:	stp	xzr, xzr, [x0, #40]
  415e38:	str	xzr, [x0, #32]
  415e3c:	ldr	x8, [x23]
  415e40:	ldr	x21, [x19, #40]
  415e44:	mov	x20, x0
  415e48:	add	x0, x29, #0x18
  415e4c:	mov	w1, #0x8                   	// #8
  415e50:	mov	w2, wzr
  415e54:	str	x8, [x29, #24]
  415e58:	bl	454b70 <feof@plt+0x51e70>
  415e5c:	ldr	x8, [x23, #8]
  415e60:	mov	w2, w0
  415e64:	add	x0, x29, #0x18
  415e68:	mov	w1, #0x8                   	// #8
  415e6c:	str	x8, [x29, #24]
  415e70:	bl	454b70 <feof@plt+0x51e70>
  415e74:	ldr	w8, [x23, #16]
  415e78:	sub	w9, w22, w0
  415e7c:	mov	x1, sp
  415e80:	mov	w3, #0x1                   	// #1
  415e84:	sub	w9, w9, w8
  415e88:	sub	w8, w8, w0
  415e8c:	eor	w9, w9, w0, lsr #13
  415e90:	sub	w8, w8, w9
  415e94:	sub	w10, w0, w9
  415e98:	eor	w8, w8, w9, lsl #8
  415e9c:	sub	w10, w10, w8
  415ea0:	sub	w9, w9, w8
  415ea4:	eor	w10, w10, w8, lsr #13
  415ea8:	sub	w9, w9, w10
  415eac:	sub	w8, w8, w10
  415eb0:	eor	w9, w9, w10, lsr #12
  415eb4:	sub	w8, w8, w9
  415eb8:	sub	w10, w10, w9
  415ebc:	eor	w8, w8, w9, lsl #16
  415ec0:	sub	w10, w10, w8
  415ec4:	sub	w9, w9, w8
  415ec8:	eor	w10, w10, w8, lsr #5
  415ecc:	sub	w9, w9, w10
  415ed0:	sub	w8, w8, w10
  415ed4:	eor	w9, w9, w10, lsr #3
  415ed8:	sub	w8, w8, w9
  415edc:	eor	w8, w8, w9, lsl #10
  415ee0:	sub	w9, w10, w9
  415ee4:	sub	w9, w9, w8
  415ee8:	eor	w2, w9, w8, lsr #15
  415eec:	mov	x0, x21
  415ef0:	bl	416098 <feof@plt+0x13398>
  415ef4:	ldr	x8, [x0]
  415ef8:	cbnz	x8, 415f04 <feof@plt+0x13204>
  415efc:	ldr	x8, [sp]
  415f00:	str	x8, [x0]
  415f04:	str	x20, [x0, #8]
  415f08:	ldr	x8, [sp, #8]
  415f0c:	ldr	x0, [x19, #48]
  415f10:	add	x1, sp, #0x8
  415f14:	lsr	x2, x8, #3
  415f18:	bl	416500 <feof@plt+0x13800>
  415f1c:	ldr	x8, [x0]
  415f20:	cbnz	x8, 415f50 <feof@plt+0x13250>
  415f24:	ldr	x8, [sp, #8]
  415f28:	ldr	x0, [x19, #48]
  415f2c:	add	x1, sp, #0x8
  415f30:	mov	w3, #0x1                   	// #1
  415f34:	lsr	x2, x8, #3
  415f38:	bl	4165e4 <feof@plt+0x138e4>
  415f3c:	ldr	x8, [x0]
  415f40:	cbnz	x8, 415f4c <feof@plt+0x1324c>
  415f44:	ldr	x8, [sp, #8]
  415f48:	str	x8, [x0]
  415f4c:	stp	x20, xzr, [x0, #8]
  415f50:	mov	x0, x20
  415f54:	ldp	x20, x19, [sp, #64]
  415f58:	ldp	x22, x21, [sp, #48]
  415f5c:	ldr	x23, [sp, #32]
  415f60:	ldp	x29, x30, [sp, #16]
  415f64:	add	sp, sp, #0x50
  415f68:	ret
  415f6c:	ldr	w8, [x0, #32]
  415f70:	ldr	w14, [x0, #40]
  415f74:	adrp	x15, 458000 <_obstack_memory_used@@Base+0x2dd8>
  415f78:	add	x15, x15, #0x26c
  415f7c:	add	w8, w8, #0x1
  415f80:	add	x9, x15, x14, lsl #4
  415f84:	str	w8, [x0, #32]
  415f88:	ldp	w16, w8, [x9]
  415f8c:	mov	w13, w2
  415f90:	ldr	w12, [x9, #12]
  415f94:	ldr	x9, [x0]
  415f98:	mul	x8, x8, x13
  415f9c:	lsr	x8, x8, #32
  415fa0:	sub	w10, w2, w8
  415fa4:	add	w8, w8, w10, lsr #1
  415fa8:	lsr	w8, w8, w12
  415fac:	msub	w11, w8, w16, w2
  415fb0:	add	x8, x9, w11, uxtw #4
  415fb4:	ldr	x17, [x8]
  415fb8:	cbz	x17, 416090 <feof@plt+0x13390>
  415fbc:	ldr	x10, [x0, #8]
  415fc0:	cmp	x17, #0x1
  415fc4:	b.eq	415ffc <feof@plt+0x132fc>  // b.none
  415fc8:	ldr	x18, [x1]
  415fcc:	ldr	x3, [x17]
  415fd0:	ldr	x4, [x18]
  415fd4:	cmp	x3, x4
  415fd8:	b.ne	415ffc <feof@plt+0x132fc>  // b.any
  415fdc:	ldr	x3, [x17, #8]
  415fe0:	ldr	x4, [x18, #8]
  415fe4:	cmp	x3, x4
  415fe8:	b.ne	415ffc <feof@plt+0x132fc>  // b.any
  415fec:	ldr	w17, [x17, #16]
  415ff0:	ldr	w18, [x18, #16]
  415ff4:	cmp	w17, w18
  415ff8:	b.eq	416090 <feof@plt+0x13390>  // b.none
  415ffc:	add	x8, x15, x14, lsl #4
  416000:	ldr	w8, [x8, #8]
  416004:	ldr	w15, [x0, #36]
  416008:	sub	w14, w16, #0x2
  41600c:	mul	x8, x8, x13
  416010:	lsr	x8, x8, #32
  416014:	sub	w13, w2, w8
  416018:	add	w8, w8, w13, lsr #1
  41601c:	lsr	w8, w8, w12
  416020:	msub	w8, w8, w14, w2
  416024:	add	w12, w8, #0x1
  416028:	add	w13, w15, #0x1
  41602c:	b	416034 <feof@plt+0x13334>
  416030:	add	w13, w13, #0x1
  416034:	add	w8, w12, w11
  416038:	cmp	x10, x8
  41603c:	csel	w11, wzr, w10, hi  // hi = pmore
  416040:	sub	w11, w8, w11
  416044:	str	w13, [x0, #36]
  416048:	add	x8, x9, w11, uxtw #4
  41604c:	ldr	x14, [x8]
  416050:	cmp	x14, #0x1
  416054:	b.eq	416030 <feof@plt+0x13330>  // b.none
  416058:	cbz	x14, 416090 <feof@plt+0x13390>
  41605c:	ldr	x15, [x1]
  416060:	ldr	x16, [x14]
  416064:	ldr	x17, [x15]
  416068:	cmp	x16, x17
  41606c:	b.ne	416030 <feof@plt+0x13330>  // b.any
  416070:	ldr	x16, [x14, #8]
  416074:	ldr	x17, [x15, #8]
  416078:	cmp	x16, x17
  41607c:	b.ne	416030 <feof@plt+0x13330>  // b.any
  416080:	ldr	w14, [x14, #16]
  416084:	ldr	w15, [x15, #16]
  416088:	cmp	w14, w15
  41608c:	b.ne	416030 <feof@plt+0x13330>  // b.any
  416090:	mov	x0, x8
  416094:	ret
  416098:	stp	x29, x30, [sp, #-48]!
  41609c:	stp	x22, x21, [sp, #16]
  4160a0:	stp	x20, x19, [sp, #32]
  4160a4:	mov	x29, sp
  4160a8:	mov	w20, w3
  4160ac:	mov	w22, w2
  4160b0:	mov	x21, x1
  4160b4:	cmp	w3, #0x1
  4160b8:	mov	x19, x0
  4160bc:	b.ne	4160d8 <feof@plt+0x133d8>  // b.any
  4160c0:	ldp	x8, x9, [x19, #8]
  4160c4:	add	x8, x8, x8, lsl #1
  4160c8:	cmp	x8, x9, lsl #2
  4160cc:	b.hi	4160d8 <feof@plt+0x133d8>  // b.pmore
  4160d0:	mov	x0, x19
  4160d4:	bl	416254 <feof@plt+0x13554>
  4160d8:	ldr	w8, [x19, #32]
  4160dc:	ldr	w9, [x19, #40]
  4160e0:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4160e4:	add	x10, x10, #0x26c
  4160e8:	add	w8, w8, #0x1
  4160ec:	add	x10, x10, x9, lsl #4
  4160f0:	str	w8, [x19, #32]
  4160f4:	ldp	w12, w8, [x10]
  4160f8:	mov	w13, w22
  4160fc:	ldr	w11, [x10, #12]
  416100:	mul	x8, x8, x13
  416104:	lsr	x9, x8, #32
  416108:	sub	w14, w22, w9
  41610c:	ldr	x8, [x19]
  416110:	add	w9, w9, w14, lsr #1
  416114:	lsr	w9, w9, w11
  416118:	msub	w9, w9, w12, w22
  41611c:	add	x0, x8, w9, uxtw #4
  416120:	ldr	x15, [x0]
  416124:	cbz	x15, 416204 <feof@plt+0x13504>
  416128:	ldr	w14, [x10, #8]
  41612c:	ldr	x10, [x19, #8]
  416130:	cmp	x15, #0x1
  416134:	b.eq	416170 <feof@plt+0x13470>  // b.none
  416138:	ldr	x16, [x21]
  41613c:	ldr	x17, [x15]
  416140:	ldr	x18, [x16]
  416144:	cmp	x17, x18
  416148:	b.ne	41616c <feof@plt+0x1346c>  // b.any
  41614c:	ldr	x17, [x15, #8]
  416150:	ldr	x18, [x16, #8]
  416154:	cmp	x17, x18
  416158:	b.ne	41616c <feof@plt+0x1346c>  // b.any
  41615c:	ldr	w15, [x15, #16]
  416160:	ldr	w16, [x16, #16]
  416164:	cmp	w15, w16
  416168:	b.eq	416244 <feof@plt+0x13544>  // b.none
  41616c:	mov	x0, xzr
  416170:	sub	w15, w12, #0x2
  416174:	mul	x12, x14, x13
  416178:	lsr	x12, x12, #32
  41617c:	sub	w13, w22, w12
  416180:	add	w13, w12, w13, lsr #1
  416184:	ldr	w12, [x19, #36]
  416188:	lsr	w11, w13, w11
  41618c:	msub	w11, w11, w15, w22
  416190:	add	w11, w11, #0x1
  416194:	add	w9, w11, w9
  416198:	cmp	x10, x9
  41619c:	csel	w13, wzr, w10, hi  // hi = pmore
  4161a0:	add	w12, w12, #0x1
  4161a4:	sub	w9, w9, w13
  4161a8:	str	w12, [x19, #36]
  4161ac:	add	x13, x8, w9, uxtw #4
  4161b0:	ldr	x14, [x13]
  4161b4:	cbz	x14, 416208 <feof@plt+0x13508>
  4161b8:	cmp	x14, #0x1
  4161bc:	b.eq	4161f8 <feof@plt+0x134f8>  // b.none
  4161c0:	ldr	x15, [x21]
  4161c4:	ldr	x16, [x14]
  4161c8:	ldr	x17, [x15]
  4161cc:	cmp	x16, x17
  4161d0:	b.ne	416194 <feof@plt+0x13494>  // b.any
  4161d4:	ldr	x16, [x14, #8]
  4161d8:	ldr	x17, [x15, #8]
  4161dc:	cmp	x16, x17
  4161e0:	b.ne	416194 <feof@plt+0x13494>  // b.any
  4161e4:	ldr	w14, [x14, #16]
  4161e8:	ldr	w15, [x15, #16]
  4161ec:	cmp	w14, w15
  4161f0:	b.ne	416194 <feof@plt+0x13494>  // b.any
  4161f4:	b	416240 <feof@plt+0x13540>
  4161f8:	cmp	x0, #0x0
  4161fc:	csel	x0, x13, x0, eq  // eq = none
  416200:	b	416194 <feof@plt+0x13494>
  416204:	mov	x0, xzr
  416208:	cbz	w20, 416224 <feof@plt+0x13524>
  41620c:	cbz	x0, 41622c <feof@plt+0x1352c>
  416210:	ldr	x8, [x19, #24]
  416214:	sub	x8, x8, #0x1
  416218:	str	x8, [x19, #24]
  41621c:	str	xzr, [x0]
  416220:	b	416244 <feof@plt+0x13544>
  416224:	mov	x0, xzr
  416228:	b	416244 <feof@plt+0x13544>
  41622c:	ldr	x10, [x19, #16]
  416230:	add	x0, x8, w9, uxtw #4
  416234:	add	x10, x10, #0x1
  416238:	str	x10, [x19, #16]
  41623c:	b	416244 <feof@plt+0x13544>
  416240:	mov	x0, x13
  416244:	ldp	x20, x19, [sp, #32]
  416248:	ldp	x22, x21, [sp, #16]
  41624c:	ldp	x29, x30, [sp], #48
  416250:	ret
  416254:	stp	x29, x30, [sp, #-80]!
  416258:	str	x25, [sp, #16]
  41625c:	stp	x24, x23, [sp, #32]
  416260:	stp	x22, x21, [sp, #48]
  416264:	stp	x20, x19, [sp, #64]
  416268:	mov	x29, sp
  41626c:	ldp	x8, x9, [x0, #16]
  416270:	ldp	x19, x24, [x0]
  416274:	mov	x20, x0
  416278:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41627c:	sub	x8, x8, x9
  416280:	lsl	x0, x8, #1
  416284:	cmp	x0, x24
  416288:	add	x23, x23, #0x26c
  41628c:	b.hi	4162ac <feof@plt+0x135ac>  // b.pmore
  416290:	ldr	w21, [x20, #40]
  416294:	cmp	x24, #0x21
  416298:	b.cc	4164cc <feof@plt+0x137cc>  // b.lo, b.ul, b.last
  41629c:	lsl	w8, w8, #3
  4162a0:	cmp	x24, x8
  4162a4:	mov	x22, x24
  4162a8:	b.ls	4162c0 <feof@plt+0x135c0>  // b.plast
  4162ac:	bl	419880 <feof@plt+0x16b80>
  4162b0:	mov	w8, w0
  4162b4:	lsl	x8, x8, #4
  4162b8:	ldr	w22, [x23, x8]
  4162bc:	mov	w21, w0
  4162c0:	ldrb	w8, [x20, #44]
  4162c4:	cbz	w8, 4164d8 <feof@plt+0x137d8>
  4162c8:	adrp	x1, 415000 <feof@plt+0x12300>
  4162cc:	lsl	x0, x22, #4
  4162d0:	add	x1, x1, #0xd0c
  4162d4:	mov	w2, #0x10                  	// #16
  4162d8:	mov	x3, x22
  4162dc:	bl	419d7c <feof@plt+0x1707c>
  4162e0:	cbz	x0, 4164e8 <feof@plt+0x137e8>
  4162e4:	cbz	x22, 416330 <feof@plt+0x13630>
  4162e8:	cmp	x22, #0x1
  4162ec:	b.ne	4162f8 <feof@plt+0x135f8>  // b.any
  4162f0:	mov	x8, xzr
  4162f4:	b	41631c <feof@plt+0x1361c>
  4162f8:	and	x8, x22, #0xfffffffffffffffe
  4162fc:	add	x9, x0, #0x10
  416300:	mov	x10, x8
  416304:	stur	xzr, [x9, #-16]
  416308:	str	xzr, [x9], #32
  41630c:	subs	x10, x10, #0x2
  416310:	b.ne	416304 <feof@plt+0x13604>  // b.any
  416314:	cmp	x22, x8
  416318:	b.eq	416330 <feof@plt+0x13630>  // b.none
  41631c:	sub	x9, x22, x8
  416320:	add	x8, x0, x8, lsl #4
  416324:	subs	x9, x9, #0x1
  416328:	str	xzr, [x8], #16
  41632c:	b.ne	416324 <feof@plt+0x13624>  // b.any
  416330:	ldp	x9, x8, [x20, #16]
  416334:	str	w21, [x20, #40]
  416338:	mov	w21, #0x79b9                	// #31161
  41633c:	add	x24, x19, x24, lsl #4
  416340:	stp	x0, x22, [x20]
  416344:	sub	x8, x9, x8
  416348:	movk	w21, #0x9e37, lsl #16
  41634c:	mov	x22, x19
  416350:	stp	x8, xzr, [x20, #16]
  416354:	b	41636c <feof@plt+0x1366c>
  416358:	ldr	q0, [x22]
  41635c:	str	q0, [x14]
  416360:	add	x22, x22, #0x10
  416364:	cmp	x22, x24
  416368:	b.cs	416498 <feof@plt+0x13798>  // b.hs, b.nlast
  41636c:	ldr	x25, [x22]
  416370:	cmp	x25, #0x2
  416374:	b.cc	416360 <feof@plt+0x13660>  // b.lo, b.ul, b.last
  416378:	ldr	x8, [x25]
  41637c:	add	x0, x29, #0x18
  416380:	mov	w1, #0x8                   	// #8
  416384:	mov	w2, wzr
  416388:	str	x8, [x29, #24]
  41638c:	bl	454b70 <feof@plt+0x51e70>
  416390:	ldr	x8, [x25, #8]
  416394:	mov	w2, w0
  416398:	add	x0, x29, #0x18
  41639c:	mov	w1, #0x8                   	// #8
  4163a0:	str	x8, [x29, #24]
  4163a4:	bl	454b70 <feof@plt+0x51e70>
  4163a8:	ldr	w8, [x25, #16]
  4163ac:	ldr	w9, [x20, #40]
  4163b0:	add	w11, w0, w8
  4163b4:	sub	w12, w21, w11
  4163b8:	sub	w8, w8, w0
  4163bc:	eor	w12, w12, w0, lsr #13
  4163c0:	sub	w8, w8, w12
  4163c4:	sub	w13, w0, w12
  4163c8:	eor	w8, w8, w12, lsl #8
  4163cc:	sub	w13, w13, w8
  4163d0:	sub	w12, w12, w8
  4163d4:	eor	w13, w13, w8, lsr #13
  4163d8:	sub	w12, w12, w13
  4163dc:	sub	w8, w8, w13
  4163e0:	eor	w12, w12, w13, lsr #12
  4163e4:	sub	w8, w8, w12
  4163e8:	sub	w13, w13, w12
  4163ec:	eor	w8, w8, w12, lsl #16
  4163f0:	sub	w13, w13, w8
  4163f4:	sub	w12, w12, w8
  4163f8:	eor	w13, w13, w8, lsr #5
  4163fc:	sub	w12, w12, w13
  416400:	add	x10, x23, x9, lsl #4
  416404:	sub	w8, w8, w13
  416408:	eor	w12, w12, w13, lsr #3
  41640c:	ldp	w11, w14, [x10]
  416410:	sub	w8, w8, w12
  416414:	sub	w13, w13, w12
  416418:	eor	w8, w8, w12, lsl #10
  41641c:	sub	w12, w13, w8
  416420:	eor	w13, w12, w8, lsr #15
  416424:	ldr	w9, [x10, #12]
  416428:	mul	x8, x13, x14
  41642c:	lsr	x12, x8, #32
  416430:	sub	w14, w13, w12
  416434:	ldr	x8, [x20]
  416438:	add	w12, w12, w14, lsr #1
  41643c:	lsr	w12, w12, w9
  416440:	msub	w12, w12, w11, w13
  416444:	add	x14, x8, w12, uxtw #4
  416448:	ldr	x15, [x14]
  41644c:	cbz	x15, 416358 <feof@plt+0x13658>
  416450:	ldr	w14, [x10, #8]
  416454:	ldr	x10, [x20, #8]
  416458:	sub	w11, w11, #0x2
  41645c:	mul	x14, x14, x13
  416460:	lsr	x14, x14, #32
  416464:	sub	w15, w13, w14
  416468:	add	w14, w14, w15, lsr #1
  41646c:	lsr	w9, w14, w9
  416470:	msub	w9, w9, w11, w13
  416474:	add	w9, w9, #0x1
  416478:	add	w11, w9, w12
  41647c:	cmp	x10, x11
  416480:	csel	w12, wzr, w10, hi  // hi = pmore
  416484:	sub	w12, w11, w12
  416488:	add	x14, x8, w12, uxtw #4
  41648c:	ldr	x11, [x14]
  416490:	cbnz	x11, 416478 <feof@plt+0x13778>
  416494:	b	416358 <feof@plt+0x13658>
  416498:	ldrb	w8, [x20, #44]
  41649c:	cbz	w8, 4164ac <feof@plt+0x137ac>
  4164a0:	mov	x0, x19
  4164a4:	bl	419dac <feof@plt+0x170ac>
  4164a8:	b	4164b4 <feof@plt+0x137b4>
  4164ac:	mov	x0, x19
  4164b0:	bl	402770 <free@plt>
  4164b4:	ldp	x20, x19, [sp, #64]
  4164b8:	ldp	x22, x21, [sp, #48]
  4164bc:	ldp	x24, x23, [sp, #32]
  4164c0:	ldr	x25, [sp, #16]
  4164c4:	ldp	x29, x30, [sp], #80
  4164c8:	ret
  4164cc:	mov	x22, x24
  4164d0:	ldrb	w8, [x20, #44]
  4164d4:	cbnz	w8, 4162c8 <feof@plt+0x135c8>
  4164d8:	mov	w1, #0x10                  	// #16
  4164dc:	mov	x0, x22
  4164e0:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4164e4:	cbnz	x0, 4162e4 <feof@plt+0x135e4>
  4164e8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4164ec:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4164f0:	add	x0, x0, #0x79c
  4164f4:	add	x2, x2, #0x7b3
  4164f8:	mov	w1, #0x2b5                 	// #693
  4164fc:	bl	408b70 <feof@plt+0x5e70>
  416500:	ldr	w8, [x0, #32]
  416504:	ldr	w14, [x0, #40]
  416508:	adrp	x15, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41650c:	add	x15, x15, #0x26c
  416510:	add	w8, w8, #0x1
  416514:	add	x10, x15, x14, lsl #4
  416518:	str	w8, [x0, #32]
  41651c:	ldp	w12, w8, [x10]
  416520:	mov	w13, w2
  416524:	ldr	w16, [x10, #12]
  416528:	ldr	x9, [x0]
  41652c:	mul	x8, x8, x13
  416530:	lsr	x8, x8, #32
  416534:	sub	w10, w2, w8
  416538:	add	w8, w8, w10, lsr #1
  41653c:	lsr	w8, w8, w16
  416540:	msub	w11, w8, w12, w2
  416544:	mov	w8, #0x18                  	// #24
  416548:	umaddl	x8, w11, w8, x9
  41654c:	ldr	x17, [x8]
  416550:	cbz	x17, 4165dc <feof@plt+0x138dc>
  416554:	ldr	x10, [x0, #8]
  416558:	cmp	x17, #0x1
  41655c:	b.eq	41656c <feof@plt+0x1386c>  // b.none
  416560:	ldr	x18, [x1]
  416564:	cmp	x17, x18
  416568:	b.eq	4165dc <feof@plt+0x138dc>  // b.none
  41656c:	add	x8, x15, x14, lsl #4
  416570:	ldr	w8, [x8, #8]
  416574:	ldr	w14, [x0, #36]
  416578:	sub	w15, w12, #0x2
  41657c:	mul	x8, x8, x13
  416580:	lsr	x8, x8, #32
  416584:	sub	w13, w2, w8
  416588:	add	w8, w8, w13, lsr #1
  41658c:	lsr	w8, w8, w16
  416590:	msub	w8, w8, w15, w2
  416594:	add	w12, w14, #0x1
  416598:	add	w13, w8, #0x1
  41659c:	mov	w14, #0x18                  	// #24
  4165a0:	b	4165a8 <feof@plt+0x138a8>
  4165a4:	add	w12, w12, #0x1
  4165a8:	add	w8, w13, w11
  4165ac:	cmp	x10, x8
  4165b0:	csel	w11, wzr, w10, hi  // hi = pmore
  4165b4:	sub	w11, w8, w11
  4165b8:	str	w12, [x0, #36]
  4165bc:	umaddl	x8, w11, w14, x9
  4165c0:	ldr	x15, [x8]
  4165c4:	cmp	x15, #0x1
  4165c8:	b.eq	4165a4 <feof@plt+0x138a4>  // b.none
  4165cc:	cbz	x15, 4165dc <feof@plt+0x138dc>
  4165d0:	ldr	x16, [x1]
  4165d4:	cmp	x15, x16
  4165d8:	b.ne	4165a4 <feof@plt+0x138a4>  // b.any
  4165dc:	mov	x0, x8
  4165e0:	ret
  4165e4:	stp	x29, x30, [sp, #-48]!
  4165e8:	stp	x22, x21, [sp, #16]
  4165ec:	stp	x20, x19, [sp, #32]
  4165f0:	mov	x29, sp
  4165f4:	mov	w20, w3
  4165f8:	mov	w22, w2
  4165fc:	mov	x21, x1
  416600:	cmp	w3, #0x1
  416604:	mov	x19, x0
  416608:	b.ne	416624 <feof@plt+0x13924>  // b.any
  41660c:	ldp	x8, x9, [x19, #8]
  416610:	add	x8, x8, x8, lsl #1
  416614:	cmp	x8, x9, lsl #2
  416618:	b.hi	416624 <feof@plt+0x13924>  // b.pmore
  41661c:	mov	x0, x19
  416620:	bl	416760 <feof@plt+0x13a60>
  416624:	ldr	w8, [x19, #32]
  416628:	ldr	w9, [x19, #40]
  41662c:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x2dd8>
  416630:	add	x10, x10, #0x26c
  416634:	add	w8, w8, #0x1
  416638:	add	x10, x10, x9, lsl #4
  41663c:	str	w8, [x19, #32]
  416640:	ldp	w11, w9, [x10]
  416644:	mov	w13, w22
  416648:	ldr	w12, [x10, #12]
  41664c:	ldr	x8, [x19]
  416650:	mul	x9, x9, x13
  416654:	lsr	x9, x9, #32
  416658:	sub	w14, w22, w9
  41665c:	add	w9, w9, w14, lsr #1
  416660:	lsr	w9, w9, w12
  416664:	msub	w9, w9, w11, w22
  416668:	mov	w14, #0x18                  	// #24
  41666c:	umaddl	x0, w9, w14, x8
  416670:	ldr	x15, [x0]
  416674:	cbz	x15, 416714 <feof@plt+0x13a14>
  416678:	ldr	w14, [x10, #8]
  41667c:	ldr	x10, [x19, #8]
  416680:	cmp	x15, #0x1
  416684:	b.eq	416698 <feof@plt+0x13998>  // b.none
  416688:	ldr	x16, [x21]
  41668c:	cmp	x15, x16
  416690:	b.eq	416750 <feof@plt+0x13a50>  // b.none
  416694:	mov	x0, xzr
  416698:	mul	x13, x14, x13
  41669c:	lsr	x13, x13, #32
  4166a0:	sub	w14, w22, w13
  4166a4:	sub	w15, w11, #0x2
  4166a8:	ldr	w11, [x19, #36]
  4166ac:	add	w13, w13, w14, lsr #1
  4166b0:	lsr	w12, w13, w12
  4166b4:	msub	w12, w12, w15, w22
  4166b8:	add	w12, w12, #0x1
  4166bc:	mov	w13, #0x18                  	// #24
  4166c0:	add	w11, w11, #0x1
  4166c4:	add	w9, w12, w9
  4166c8:	cmp	x10, x9
  4166cc:	csel	w14, wzr, w10, hi  // hi = pmore
  4166d0:	sub	w9, w9, w14
  4166d4:	str	w11, [x19, #36]
  4166d8:	umaddl	x14, w9, w13, x8
  4166dc:	ldr	x15, [x14]
  4166e0:	cbz	x15, 416718 <feof@plt+0x13a18>
  4166e4:	cmp	x15, #0x1
  4166e8:	b.eq	416700 <feof@plt+0x13a00>  // b.none
  4166ec:	ldr	x16, [x21]
  4166f0:	add	w11, w11, #0x1
  4166f4:	cmp	x15, x16
  4166f8:	b.ne	4166c4 <feof@plt+0x139c4>  // b.any
  4166fc:	b	41670c <feof@plt+0x13a0c>
  416700:	cmp	x0, #0x0
  416704:	csel	x0, x14, x0, eq  // eq = none
  416708:	b	4166c0 <feof@plt+0x139c0>
  41670c:	mov	x0, x14
  416710:	b	416750 <feof@plt+0x13a50>
  416714:	mov	x0, xzr
  416718:	cbz	w20, 416734 <feof@plt+0x13a34>
  41671c:	cbz	x0, 41673c <feof@plt+0x13a3c>
  416720:	ldr	x8, [x19, #24]
  416724:	sub	x8, x8, #0x1
  416728:	str	x8, [x19, #24]
  41672c:	str	xzr, [x0]
  416730:	b	416750 <feof@plt+0x13a50>
  416734:	mov	x0, xzr
  416738:	b	416750 <feof@plt+0x13a50>
  41673c:	ldr	x10, [x19, #16]
  416740:	mov	w11, #0x18                  	// #24
  416744:	umaddl	x0, w9, w11, x8
  416748:	add	x10, x10, #0x1
  41674c:	str	x10, [x19, #16]
  416750:	ldp	x20, x19, [sp, #32]
  416754:	ldp	x22, x21, [sp, #16]
  416758:	ldp	x29, x30, [sp], #48
  41675c:	ret
  416760:	stp	x29, x30, [sp, #-64]!
  416764:	stp	x24, x23, [sp, #16]
  416768:	stp	x22, x21, [sp, #32]
  41676c:	stp	x20, x19, [sp, #48]
  416770:	mov	x29, sp
  416774:	ldp	x8, x9, [x0, #16]
  416778:	ldp	x19, x24, [x0]
  41677c:	mov	x20, x0
  416780:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x2dd8>
  416784:	sub	x8, x8, x9
  416788:	lsl	x0, x8, #1
  41678c:	cmp	x0, x24
  416790:	add	x23, x23, #0x26c
  416794:	b.hi	4167b4 <feof@plt+0x13ab4>  // b.pmore
  416798:	ldr	w21, [x20, #40]
  41679c:	cmp	x24, #0x21
  4167a0:	b.cc	416954 <feof@plt+0x13c54>  // b.lo, b.ul, b.last
  4167a4:	lsl	w8, w8, #3
  4167a8:	cmp	x24, x8
  4167ac:	mov	x22, x24
  4167b0:	b.ls	4167c8 <feof@plt+0x13ac8>  // b.plast
  4167b4:	bl	419880 <feof@plt+0x16b80>
  4167b8:	mov	w8, w0
  4167bc:	lsl	x8, x8, #4
  4167c0:	ldr	w22, [x23, x8]
  4167c4:	mov	w21, w0
  4167c8:	ldrb	w8, [x20, #44]
  4167cc:	cbz	w8, 416960 <feof@plt+0x13c60>
  4167d0:	add	x8, x22, x22, lsl #1
  4167d4:	adrp	x1, 415000 <feof@plt+0x12300>
  4167d8:	lsl	x0, x8, #3
  4167dc:	add	x1, x1, #0xd10
  4167e0:	mov	w2, #0x18                  	// #24
  4167e4:	mov	x3, x22
  4167e8:	bl	419d7c <feof@plt+0x1707c>
  4167ec:	cbz	x0, 416970 <feof@plt+0x13c70>
  4167f0:	mov	w8, #0x18                  	// #24
  4167f4:	cbz	x22, 416848 <feof@plt+0x13b48>
  4167f8:	cmp	x22, #0x1
  4167fc:	b.ne	416808 <feof@plt+0x13b08>  // b.any
  416800:	mov	x9, xzr
  416804:	b	416830 <feof@plt+0x13b30>
  416808:	and	x9, x22, #0xfffffffffffffffe
  41680c:	mov	x10, x9
  416810:	mov	x11, x0
  416814:	str	xzr, [x11]
  416818:	str	xzr, [x11, #24]
  41681c:	subs	x10, x10, #0x2
  416820:	add	x11, x11, #0x30
  416824:	b.ne	416814 <feof@plt+0x13b14>  // b.any
  416828:	cmp	x22, x9
  41682c:	b.eq	416848 <feof@plt+0x13b48>  // b.none
  416830:	mov	w11, #0x18                  	// #24
  416834:	sub	x10, x22, x9
  416838:	madd	x9, x9, x11, x0
  41683c:	subs	x10, x10, #0x1
  416840:	str	xzr, [x9], #24
  416844:	b.ne	41683c <feof@plt+0x13b3c>  // b.any
  416848:	ldp	x10, x9, [x20, #16]
  41684c:	madd	x8, x24, x8, x19
  416850:	stp	x0, x22, [x20]
  416854:	str	w21, [x20, #40]
  416858:	sub	x9, x10, x9
  41685c:	stp	x9, xzr, [x20, #16]
  416860:	mov	w9, #0x18                  	// #24
  416864:	mov	x10, x19
  416868:	b	416888 <feof@plt+0x13b88>
  41686c:	ldr	x11, [x10, #16]
  416870:	ldr	q0, [x10]
  416874:	str	x11, [x18, #16]
  416878:	str	q0, [x18]
  41687c:	add	x10, x10, #0x18
  416880:	cmp	x10, x8
  416884:	b.cs	41691c <feof@plt+0x13c1c>  // b.hs, b.nlast
  416888:	ldr	x11, [x10]
  41688c:	cmp	x11, #0x2
  416890:	b.cc	41687c <feof@plt+0x13b7c>  // b.lo, b.ul, b.last
  416894:	ldr	w12, [x20, #40]
  416898:	ubfx	x17, x11, #3, #32
  41689c:	add	x14, x23, x12, lsl #4
  4168a0:	ldp	w15, w13, [x14]
  4168a4:	lsr	x12, x11, #3
  4168a8:	ldr	w16, [x14, #12]
  4168ac:	mul	x11, x17, x13
  4168b0:	lsr	x13, x11, #32
  4168b4:	sub	w18, w12, w13
  4168b8:	ldr	x11, [x20]
  4168bc:	add	w13, w13, w18, lsr #1
  4168c0:	lsr	w13, w13, w16
  4168c4:	msub	w13, w13, w15, w12
  4168c8:	umaddl	x18, w13, w9, x11
  4168cc:	ldr	x0, [x18]
  4168d0:	cbz	x0, 41686c <feof@plt+0x13b6c>
  4168d4:	ldr	w18, [x14, #8]
  4168d8:	ldr	x14, [x20, #8]
  4168dc:	sub	w15, w15, #0x2
  4168e0:	mul	x17, x17, x18
  4168e4:	lsr	x17, x17, #32
  4168e8:	sub	w18, w12, w17
  4168ec:	add	w17, w17, w18, lsr #1
  4168f0:	lsr	w16, w17, w16
  4168f4:	msub	w12, w16, w15, w12
  4168f8:	add	w12, w12, #0x1
  4168fc:	add	w13, w12, w13
  416900:	cmp	x14, x13
  416904:	csel	w15, wzr, w14, hi  // hi = pmore
  416908:	sub	w13, w13, w15
  41690c:	umaddl	x18, w13, w9, x11
  416910:	ldr	x15, [x18]
  416914:	cbnz	x15, 4168fc <feof@plt+0x13bfc>
  416918:	b	41686c <feof@plt+0x13b6c>
  41691c:	ldrb	w8, [x20, #44]
  416920:	cbz	w8, 41693c <feof@plt+0x13c3c>
  416924:	mov	x0, x19
  416928:	ldp	x20, x19, [sp, #48]
  41692c:	ldp	x22, x21, [sp, #32]
  416930:	ldp	x24, x23, [sp, #16]
  416934:	ldp	x29, x30, [sp], #64
  416938:	b	419dac <feof@plt+0x170ac>
  41693c:	mov	x0, x19
  416940:	ldp	x20, x19, [sp, #48]
  416944:	ldp	x22, x21, [sp, #32]
  416948:	ldp	x24, x23, [sp, #16]
  41694c:	ldp	x29, x30, [sp], #64
  416950:	b	402770 <free@plt>
  416954:	mov	x22, x24
  416958:	ldrb	w8, [x20, #44]
  41695c:	cbnz	w8, 4167d0 <feof@plt+0x13ad0>
  416960:	mov	w1, #0x18                  	// #24
  416964:	mov	x0, x22
  416968:	bl	455390 <_obstack_memory_used@@Base+0x168>
  41696c:	cbnz	x0, 4167f0 <feof@plt+0x13af0>
  416970:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416974:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416978:	add	x0, x0, #0x79c
  41697c:	add	x2, x2, #0x7b3
  416980:	mov	w1, #0x2b5                 	// #693
  416984:	bl	408b70 <feof@plt+0x5e70>
  416988:	stp	x29, x30, [sp, #-64]!
  41698c:	stp	x28, x23, [sp, #16]
  416990:	stp	x22, x21, [sp, #32]
  416994:	stp	x20, x19, [sp, #48]
  416998:	mov	x29, sp
  41699c:	sub	sp, sp, #0x1, lsl #12
  4169a0:	sub	sp, sp, #0x30
  4169a4:	ldr	x8, [x1]
  4169a8:	adrp	x23, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4169ac:	mov	x20, x2
  4169b0:	mov	x21, x1
  4169b4:	mov	x19, x0
  4169b8:	add	x23, x23, #0x8d0
  4169bc:	mov	x0, x8
  4169c0:	mov	x1, x23
  4169c4:	mov	x22, x8
  4169c8:	bl	402660 <strstr@plt>
  4169cc:	add	x8, x0, #0x4
  4169d0:	cbnz	x0, 4169bc <feof@plt+0x13cbc>
  4169d4:	ldr	w3, [x21, #16]
  4169d8:	ldr	x4, [x21, #8]
  4169dc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4169e0:	add	x1, x1, #0x888
  4169e4:	add	x0, sp, #0x30
  4169e8:	mov	x2, x22
  4169ec:	bl	402880 <sprintf@plt>
  4169f0:	strb	wzr, [sp, #96]
  4169f4:	ldr	x8, [x19]
  4169f8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4169fc:	ldr	x0, [x9, #1416]
  416a00:	ldr	x3, [x19, #48]
  416a04:	lsr	x12, x8, #11
  416a08:	cmp	x12, #0x5
  416a0c:	mov	x4, x8
  416a10:	b.cc	416a2c <feof@plt+0x13d2c>  // b.lo, b.ul, b.last
  416a14:	lsr	x9, x8, #21
  416a18:	cmp	x9, #0x4
  416a1c:	b.hi	416a28 <feof@plt+0x13d28>  // b.pmore
  416a20:	lsr	x4, x8, #10
  416a24:	b	416a2c <feof@plt+0x13d2c>
  416a28:	lsr	x4, x8, #20
  416a2c:	ldr	x13, [x19, #16]
  416a30:	cmp	x8, #0xa00, lsl #12
  416a34:	mov	w9, #0x4d                  	// #77
  416a38:	mov	w10, #0x6b                  	// #107
  416a3c:	ldr	d0, [x20]
  416a40:	mov	w11, #0x20                  	// #32
  416a44:	csel	w14, w10, w9, cc  // cc = lo, ul, last
  416a48:	cmp	x12, #0x5
  416a4c:	csel	w5, w11, w14, cc  // cc = lo, ul, last
  416a50:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  416a54:	lsr	x12, x13, #11
  416a58:	cmp	x12, #0x5
  416a5c:	ucvtf	d1, x8
  416a60:	fmov	d2, x14
  416a64:	mov	x6, x13
  416a68:	b.cc	416a84 <feof@plt+0x13d84>  // b.lo, b.ul, b.last
  416a6c:	lsr	x8, x13, #21
  416a70:	cmp	x8, #0x4
  416a74:	b.hi	416a80 <feof@plt+0x13d80>  // b.pmore
  416a78:	lsr	x6, x13, #10
  416a7c:	b	416a84 <feof@plt+0x13d84>
  416a80:	lsr	x6, x13, #20
  416a84:	ldr	x8, [x19, #8]
  416a88:	cmp	x13, #0xa00, lsl #12
  416a8c:	ldr	x13, [x19, #32]
  416a90:	fmul	d3, d1, d2
  416a94:	ldr	d2, [x20, #8]
  416a98:	mov	x14, #0x4059000000000000    	// #4636737291354636288
  416a9c:	fmov	d4, x14
  416aa0:	ucvtf	d1, x8
  416aa4:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  416aa8:	cmp	x12, #0x5
  416aac:	lsr	x10, x13, #11
  416ab0:	ucvtf	d0, d0
  416ab4:	fmul	d1, d1, d4
  416ab8:	csel	w7, w11, w9, cc  // cc = lo, ul, last
  416abc:	cmp	x10, #0x5
  416ac0:	ucvtf	d2, d2
  416ac4:	mov	x9, x13
  416ac8:	b.cc	416ae4 <feof@plt+0x13de4>  // b.lo, b.ul, b.last
  416acc:	lsr	x9, x13, #21
  416ad0:	cmp	x9, #0x4
  416ad4:	b.hi	416ae0 <feof@plt+0x13de0>  // b.pmore
  416ad8:	lsr	x9, x13, #10
  416adc:	b	416ae4 <feof@plt+0x13de4>
  416ae0:	lsr	x9, x13, #20
  416ae4:	ldr	x14, [x19, #40]
  416ae8:	cmp	x13, #0xa00, lsl #12
  416aec:	mov	w11, #0x4d                  	// #77
  416af0:	mov	w12, #0x6b                  	// #107
  416af4:	csel	w15, w12, w11, cc  // cc = lo, ul, last
  416af8:	cmp	x10, #0x5
  416afc:	mov	w13, #0x20                  	// #32
  416b00:	csel	w10, w13, w15, cc  // cc = lo, ul, last
  416b04:	lsr	x15, x14, #11
  416b08:	fdiv	d0, d3, d0
  416b0c:	cmp	x15, #0x5
  416b10:	fdiv	d1, d1, d2
  416b14:	mov	x16, x14
  416b18:	b.cc	416b34 <feof@plt+0x13e34>  // b.lo, b.ul, b.last
  416b1c:	lsr	x16, x14, #21
  416b20:	cmp	x16, #0x4
  416b24:	b.hi	416b30 <feof@plt+0x13e30>  // b.pmore
  416b28:	lsr	x16, x14, #10
  416b2c:	b	416b34 <feof@plt+0x13e34>
  416b30:	lsr	x16, x14, #20
  416b34:	cmp	x14, #0xa00, lsl #12
  416b38:	csel	w11, w12, w11, cc  // cc = lo, ul, last
  416b3c:	cmp	x15, #0x5
  416b40:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416b44:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  416b48:	add	x1, x1, #0x893
  416b4c:	add	x2, sp, #0x30
  416b50:	str	x16, [sp, #24]
  416b54:	str	w10, [sp, #16]
  416b58:	stp	x8, x9, [sp]
  416b5c:	str	w11, [sp, #32]
  416b60:	bl	4026f0 <fprintf@plt>
  416b64:	add	sp, sp, #0x1, lsl #12
  416b68:	add	sp, sp, #0x30
  416b6c:	ldp	x20, x19, [sp, #48]
  416b70:	ldp	x22, x21, [sp, #32]
  416b74:	ldp	x28, x23, [sp, #16]
  416b78:	ldp	x29, x30, [sp], #64
  416b7c:	ret
  416b80:	ldr	x8, [x0, #8]
  416b84:	ldr	x9, [x1, #8]
  416b88:	ldr	x10, [x8]
  416b8c:	ldr	x11, [x9]
  416b90:	cmp	x10, x11
  416b94:	b.ne	416bc0 <feof@plt+0x13ec0>  // b.any
  416b98:	ldr	x10, [x8, #16]
  416b9c:	ldr	x11, [x9, #16]
  416ba0:	cmp	x10, x11
  416ba4:	b.ne	416bc0 <feof@plt+0x13ec0>  // b.any
  416ba8:	ldr	x10, [x8, #8]
  416bac:	ldr	x11, [x9, #8]
  416bb0:	cmp	x10, x11
  416bb4:	b.ne	416bcc <feof@plt+0x13ecc>  // b.any
  416bb8:	mov	w0, wzr
  416bbc:	ret
  416bc0:	b.cs	416bdc <feof@plt+0x13edc>  // b.hs, b.nlast
  416bc4:	mov	w0, #0x1                   	// #1
  416bc8:	ret
  416bcc:	ldr	x8, [x8, #8]
  416bd0:	ldr	x9, [x9, #8]
  416bd4:	cmp	x8, x9
  416bd8:	b.cc	416bc4 <feof@plt+0x13ec4>  // b.lo, b.ul, b.last
  416bdc:	mov	w0, #0xffffffff            	// #-1
  416be0:	ret
  416be4:	stp	x29, x30, [sp, #-64]!
  416be8:	str	x23, [sp, #16]
  416bec:	stp	x22, x21, [sp, #32]
  416bf0:	stp	x20, x19, [sp, #48]
  416bf4:	mov	x29, sp
  416bf8:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  416bfc:	ldr	x21, [x20, #2312]
  416c00:	cbz	x21, 416c78 <feof@plt+0x13f78>
  416c04:	mov	x19, x21
  416c08:	ldr	x8, [x19, #-8]!
  416c0c:	cbz	x8, 416c6c <feof@plt+0x13f6c>
  416c10:	mov	w9, #0x58                  	// #88
  416c14:	mul	x22, x8, x9
  416c18:	b	416c2c <feof@plt+0x13f2c>
  416c1c:	bl	402770 <free@plt>
  416c20:	stur	xzr, [x23, #-8]
  416c24:	subs	x22, x22, #0x58
  416c28:	b.eq	416c6c <feof@plt+0x13f6c>  // b.none
  416c2c:	add	x23, x21, x22
  416c30:	ldur	x0, [x23, #-72]
  416c34:	cbz	x0, 416c40 <feof@plt+0x13f40>
  416c38:	bl	402740 <fclose@plt>
  416c3c:	stur	xzr, [x23, #-72]
  416c40:	ldur	x0, [x23, #-64]
  416c44:	cbz	x0, 416c50 <feof@plt+0x13f50>
  416c48:	bl	402770 <free@plt>
  416c4c:	stur	xzr, [x23, #-64]
  416c50:	add	x23, x21, x22
  416c54:	ldur	x0, [x23, #-8]
  416c58:	cbz	x0, 416c24 <feof@plt+0x13f24>
  416c5c:	ldr	w8, [x0]
  416c60:	tbz	w8, #31, 416c1c <feof@plt+0x13f1c>
  416c64:	str	wzr, [x0, #4]
  416c68:	b	416c24 <feof@plt+0x13f24>
  416c6c:	mov	x0, x19
  416c70:	bl	402ab0 <_ZdaPv@plt>
  416c74:	str	xzr, [x20, #2312]
  416c78:	ldp	x20, x19, [sp, #48]
  416c7c:	ldp	x22, x21, [sp, #32]
  416c80:	ldr	x23, [sp, #16]
  416c84:	ldp	x29, x30, [sp], #64
  416c88:	ret
  416c8c:	stp	x29, x30, [sp, #-64]!
  416c90:	str	x23, [sp, #16]
  416c94:	stp	x22, x21, [sp, #32]
  416c98:	stp	x20, x19, [sp, #48]
  416c9c:	mov	x29, sp
  416ca0:	cbz	x0, 416d54 <feof@plt+0x14054>
  416ca4:	mov	x19, x0
  416ca8:	bl	418cb0 <feof@plt+0x15fb0>
  416cac:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  416cb0:	ldr	x22, [x8, #2312]
  416cb4:	mov	x21, xzr
  416cb8:	mov	x20, xzr
  416cbc:	b	416ccc <feof@plt+0x13fcc>
  416cc0:	add	x21, x21, #0x58
  416cc4:	cmp	x21, #0x580
  416cc8:	b.eq	416cf8 <feof@plt+0x13ff8>  // b.none
  416ccc:	add	x23, x22, x21
  416cd0:	ldr	x0, [x23, #8]
  416cd4:	cbz	x0, 416cc0 <feof@plt+0x13fc0>
  416cd8:	mov	x1, x19
  416cdc:	bl	402b40 <strcmp@plt>
  416ce0:	cbnz	w0, 416cc0 <feof@plt+0x13fc0>
  416ce4:	ldr	w8, [x22, x21]
  416ce8:	mov	x20, x23
  416cec:	add	w8, w8, #0x1
  416cf0:	str	w8, [x22, x21]
  416cf4:	b	416cc0 <feof@plt+0x13fc0>
  416cf8:	cbz	x20, 416d40 <feof@plt+0x14040>
  416cfc:	ldr	w8, [x20]
  416d00:	ldr	x0, [x20, #16]
  416d04:	str	xzr, [x20, #8]
  416d08:	add	w8, w8, #0x1
  416d0c:	str	w8, [x20]
  416d10:	cbz	x0, 416d18 <feof@plt+0x14018>
  416d14:	bl	402740 <fclose@plt>
  416d18:	ldr	x8, [x20, #80]
  416d1c:	str	xzr, [x20, #16]
  416d20:	stp	xzr, xzr, [x20, #48]
  416d24:	str	xzr, [x20, #40]
  416d28:	cbz	x8, 416d30 <feof@plt+0x14030>
  416d2c:	str	wzr, [x8, #4]
  416d30:	mov	w8, #0x1                   	// #1
  416d34:	str	wzr, [x20]
  416d38:	str	xzr, [x20, #64]
  416d3c:	strb	w8, [x20, #72]
  416d40:	ldp	x20, x19, [sp, #48]
  416d44:	ldp	x22, x21, [sp, #32]
  416d48:	ldr	x23, [sp, #16]
  416d4c:	ldp	x29, x30, [sp], #64
  416d50:	ret
  416d54:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416d58:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416d5c:	add	x0, x0, #0x930
  416d60:	add	x2, x2, #0x942
  416d64:	mov	w1, #0x133                 	// #307
  416d68:	bl	408b70 <feof@plt+0x5e70>
  416d6c:	movi	v0.2d, #0x0
  416d70:	mov	w8, #0x1                   	// #1
  416d74:	str	wzr, [x0]
  416d78:	stur	q0, [x0, #8]
  416d7c:	stur	q0, [x0, #24]
  416d80:	stur	q0, [x0, #40]
  416d84:	stur	q0, [x0, #56]
  416d88:	strb	w8, [x0, #72]
  416d8c:	str	xzr, [x0, #80]
  416d90:	ret
  416d94:	stp	x29, x30, [sp, #-32]!
  416d98:	str	x19, [sp, #16]
  416d9c:	mov	x29, sp
  416da0:	mov	x19, x0
  416da4:	ldr	x0, [x0, #16]
  416da8:	cbz	x0, 416db4 <feof@plt+0x140b4>
  416dac:	bl	402740 <fclose@plt>
  416db0:	str	xzr, [x19, #16]
  416db4:	ldr	x0, [x19, #24]
  416db8:	cbz	x0, 416dc4 <feof@plt+0x140c4>
  416dbc:	bl	402770 <free@plt>
  416dc0:	str	xzr, [x19, #24]
  416dc4:	ldr	x0, [x19, #80]
  416dc8:	cbz	x0, 416de4 <feof@plt+0x140e4>
  416dcc:	ldr	w8, [x0]
  416dd0:	tbnz	w8, #31, 416de0 <feof@plt+0x140e0>
  416dd4:	bl	402770 <free@plt>
  416dd8:	str	xzr, [x19, #80]
  416ddc:	b	416de4 <feof@plt+0x140e4>
  416de0:	str	wzr, [x0, #4]
  416de4:	ldr	x19, [sp, #16]
  416de8:	ldp	x29, x30, [sp], #32
  416dec:	ret
  416df0:	sub	sp, sp, #0x40
  416df4:	stp	x29, x30, [sp, #32]
  416df8:	stp	x20, x19, [sp, #48]
  416dfc:	add	x29, sp, #0x20
  416e00:	str	xzr, [sp, #8]
  416e04:	cbz	w1, 416f6c <feof@plt+0x1426c>
  416e08:	mov	w20, w1
  416e0c:	bl	416f9c <feof@plt+0x1429c>
  416e10:	cbz	x0, 416e88 <feof@plt+0x14188>
  416e14:	ldr	x9, [x0, #56]
  416e18:	sxtw	x8, w20
  416e1c:	mov	x19, x0
  416e20:	cmp	x9, x8
  416e24:	b.cc	416f20 <feof@plt+0x14220>  // b.lo, b.ul, b.last
  416e28:	ldr	x9, [x19, #80]
  416e2c:	cbz	x9, 416e90 <feof@plt+0x14190>
  416e30:	ldr	w10, [x9, #4]
  416e34:	cbz	w10, 416e90 <feof@plt+0x14190>
  416e38:	ldr	x11, [x19, #64]
  416e3c:	cmp	x11, #0x64
  416e40:	b.hi	416e9c <feof@plt+0x1419c>  // b.pmore
  416e44:	sub	w10, w8, #0x1
  416e48:	add	x9, x9, #0x8
  416e4c:	mov	w12, #0x18                  	// #24
  416e50:	sub	w13, w11, #0x1
  416e54:	umaddl	x10, w10, w12, x9
  416e58:	umaddl	x9, w13, w12, x9
  416e5c:	cmp	x11, x8
  416e60:	csel	x9, x9, x10, cc  // cc = lo, ul, last
  416e64:	ldr	x10, [x9]
  416e68:	cmp	x10, x8
  416e6c:	b.ls	416ed8 <feof@plt+0x141d8>  // b.plast
  416e70:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416e74:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416e78:	add	x0, x0, #0x930
  416e7c:	add	x2, x2, #0xfde
  416e80:	mov	w1, #0x2b2                 	// #690
  416e84:	bl	408b70 <feof@plt+0x5e70>
  416e88:	mov	x1, xzr
  416e8c:	b	416f74 <feof@plt+0x14274>
  416e90:	mov	x9, xzr
  416e94:	stp	xzr, xzr, [x19, #48]
  416e98:	b	416f20 <feof@plt+0x14220>
  416e9c:	cmp	x11, x8
  416ea0:	b.cs	416eac <feof@plt+0x141ac>  // b.hs, b.nlast
  416ea4:	sub	w11, w10, #0x1
  416ea8:	b	416eb8 <feof@plt+0x141b8>
  416eac:	mov	w12, #0x64                  	// #100
  416eb0:	mul	x12, x8, x12
  416eb4:	udiv	x11, x12, x11
  416eb8:	cmp	x11, x10
  416ebc:	b.cs	416f14 <feof@plt+0x14214>  // b.hs, b.nlast
  416ec0:	and	x10, x11, #0xffffffff
  416ec4:	mov	w11, #0x18                  	// #24
  416ec8:	madd	x9, x10, x11, x9
  416ecc:	ldr	x10, [x9, #8]!
  416ed0:	cmp	x10, x8
  416ed4:	b.hi	416f84 <feof@plt+0x14284>  // b.pmore
  416ed8:	cmp	x10, x8
  416edc:	b.ne	416f00 <feof@plt+0x14200>  // b.any
  416ee0:	ldr	x8, [x19, #24]
  416ee4:	ldr	x10, [x9, #8]
  416ee8:	add	x0, x8, x10
  416eec:	str	x0, [sp, #8]
  416ef0:	ldr	x8, [x9, #16]
  416ef4:	sub	x1, x8, x10
  416ef8:	stur	x1, [x29, #-8]
  416efc:	b	416f74 <feof@plt+0x14274>
  416f00:	ldr	x10, [x9, #8]
  416f04:	str	x10, [x19, #48]
  416f08:	ldr	x9, [x9]
  416f0c:	sub	x9, x9, #0x1
  416f10:	b	416f1c <feof@plt+0x1421c>
  416f14:	mov	x9, xzr
  416f18:	str	xzr, [x19, #48]
  416f1c:	str	x9, [x19, #56]
  416f20:	sub	x20, x8, #0x1
  416f24:	cmp	x9, x20
  416f28:	b.cs	416f4c <feof@plt+0x1424c>  // b.hs, b.nlast
  416f2c:	sub	x1, x29, #0x8
  416f30:	add	x2, sp, #0x10
  416f34:	mov	x0, x19
  416f38:	bl	418e68 <feof@plt+0x16168>
  416f3c:	tbz	w0, #0, 416f6c <feof@plt+0x1426c>
  416f40:	ldr	x8, [x19, #56]
  416f44:	cmp	x8, x20
  416f48:	b.cc	416f2c <feof@plt+0x1422c>  // b.lo, b.ul, b.last
  416f4c:	add	x1, sp, #0x8
  416f50:	sub	x2, x29, #0x8
  416f54:	mov	x0, x19
  416f58:	bl	418e68 <feof@plt+0x16168>
  416f5c:	tbz	w0, #0, 416f6c <feof@plt+0x1426c>
  416f60:	ldr	x0, [sp, #8]
  416f64:	ldur	x1, [x29, #-8]
  416f68:	b	416f74 <feof@plt+0x14274>
  416f6c:	mov	x1, xzr
  416f70:	mov	x0, xzr
  416f74:	ldp	x20, x19, [sp, #48]
  416f78:	ldp	x29, x30, [sp, #32]
  416f7c:	add	sp, sp, #0x40
  416f80:	ret
  416f84:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416f88:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  416f8c:	add	x0, x0, #0x930
  416f90:	add	x2, x2, #0xfde
  416f94:	mov	w1, #0x2c1                 	// #705
  416f98:	bl	408b70 <feof@plt+0x5e70>
  416f9c:	sub	sp, sp, #0x70
  416fa0:	stp	x29, x30, [sp, #48]
  416fa4:	stp	x24, x23, [sp, #64]
  416fa8:	stp	x22, x21, [sp, #80]
  416fac:	stp	x20, x19, [sp, #96]
  416fb0:	add	x29, sp, #0x30
  416fb4:	mov	x20, x0
  416fb8:	adrp	x22, 47d000 <stderr@@GLIBC_2.17+0xa78>
  416fbc:	cbz	x0, 417020 <feof@plt+0x14320>
  416fc0:	bl	418cb0 <feof@plt+0x15fb0>
  416fc4:	ldr	x23, [x22, #2312]
  416fc8:	mov	x21, xzr
  416fcc:	mov	x19, xzr
  416fd0:	b	416fe0 <feof@plt+0x142e0>
  416fd4:	add	x21, x21, #0x58
  416fd8:	cmp	x21, #0x580
  416fdc:	b.eq	41700c <feof@plt+0x1430c>  // b.none
  416fe0:	add	x24, x23, x21
  416fe4:	ldr	x0, [x24, #8]
  416fe8:	cbz	x0, 416fd4 <feof@plt+0x142d4>
  416fec:	mov	x1, x20
  416ff0:	bl	402b40 <strcmp@plt>
  416ff4:	cbnz	w0, 416fd4 <feof@plt+0x142d4>
  416ff8:	ldr	w8, [x23, x21]
  416ffc:	mov	x19, x24
  417000:	add	w8, w8, #0x1
  417004:	str	w8, [x23, x21]
  417008:	b	416fd4 <feof@plt+0x142d4>
  41700c:	cbz	x19, 417020 <feof@plt+0x14320>
  417010:	ldr	w8, [x19]
  417014:	add	w8, w8, #0x1
  417018:	str	w8, [x19]
  41701c:	b	41711c <feof@plt+0x1441c>
  417020:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  417024:	add	x1, x1, #0x9ad
  417028:	mov	x0, x20
  41702c:	bl	402b20 <fopen@plt>
  417030:	cbz	x0, 417104 <feof@plt+0x14404>
  417034:	mov	x21, x0
  417038:	bl	418cb0 <feof@plt+0x15fb0>
  41703c:	ldr	x9, [x22, #2312]
  417040:	mov	x8, xzr
  417044:	ldr	w10, [x9]
  417048:	mov	x19, x9
  41704c:	mov	w22, w10
  417050:	add	x13, x9, x8
  417054:	ldr	w11, [x13, #88]!
  417058:	ldr	x12, [x13, #8]
  41705c:	cmp	w11, w10
  417060:	b.cc	417070 <feof@plt+0x14370>  // b.lo, b.ul, b.last
  417064:	ldr	x10, [x19, #8]
  417068:	cbz	x10, 417074 <feof@plt+0x14374>
  41706c:	cbnz	x12, 417074 <feof@plt+0x14374>
  417070:	mov	x19, x13
  417074:	cmp	w22, w11
  417078:	csel	w22, w11, w22, cc  // cc = lo, ul, last
  41707c:	cbz	x12, 417094 <feof@plt+0x14394>
  417080:	cmp	x8, #0x4d0
  417084:	b.eq	417094 <feof@plt+0x14394>  // b.none
  417088:	ldr	w10, [x19]
  41708c:	add	x8, x8, #0x58
  417090:	b	417050 <feof@plt+0x14350>
  417094:	ldr	x0, [x19, #16]
  417098:	str	x20, [x19, #8]
  41709c:	cbz	x0, 4170a4 <feof@plt+0x143a4>
  4170a0:	bl	402740 <fclose@plt>
  4170a4:	ldr	x8, [x19, #80]
  4170a8:	str	x21, [x19, #16]
  4170ac:	stp	xzr, xzr, [x19, #48]
  4170b0:	str	xzr, [x19, #40]
  4170b4:	cbz	x8, 4170bc <feof@plt+0x143bc>
  4170b8:	str	wzr, [x8, #4]
  4170bc:	add	w8, w22, #0x1
  4170c0:	str	w8, [x19]
  4170c4:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4170c8:	ldr	x0, [x8, #2296]
  4170cc:	sub	x2, x29, #0x4
  4170d0:	mov	x1, x20
  4170d4:	stur	wzr, [x29, #-4]
  4170d8:	bl	430228 <feof@plt+0x2d528>
  4170dc:	tbz	w0, #0, 41710c <feof@plt+0x1440c>
  4170e0:	ldur	w0, [x29, #-4]
  4170e4:	cmp	w0, #0x1
  4170e8:	b.ls	417138 <feof@plt+0x14438>  // b.plast
  4170ec:	add	x8, sp, #0x8
  4170f0:	mov	w1, #0x1                   	// #1
  4170f4:	mov	w2, wzr
  4170f8:	bl	4171bc <feof@plt+0x144bc>
  4170fc:	ldrsw	x8, [sp, #16]
  417100:	b	417110 <feof@plt+0x14410>
  417104:	mov	x19, xzr
  417108:	b	41711c <feof@plt+0x1441c>
  41710c:	mov	x8, xzr
  417110:	str	x8, [x19, #64]
  417114:	mov	w8, #0x1                   	// #1
  417118:	strb	w8, [x19, #72]
  41711c:	mov	x0, x19
  417120:	ldp	x20, x19, [sp, #96]
  417124:	ldp	x22, x21, [sp, #80]
  417128:	ldp	x24, x23, [sp, #64]
  41712c:	ldp	x29, x30, [sp, #48]
  417130:	add	sp, sp, #0x70
  417134:	ret
  417138:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41713c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417140:	add	x0, x0, #0x930
  417144:	add	x2, x2, #0xfce
  417148:	mov	w1, #0x107                 	// #263
  41714c:	bl	408b70 <feof@plt+0x5e70>
  417150:	stp	x29, x30, [sp, #-16]!
  417154:	mov	x29, sp
  417158:	bl	416f9c <feof@plt+0x1429c>
  41715c:	cbz	x0, 41716c <feof@plt+0x1446c>
  417160:	ldrb	w8, [x0, #72]
  417164:	cmp	w8, #0x0
  417168:	cset	w0, ne  // ne = any
  41716c:	ldp	x29, x30, [sp], #16
  417170:	ret
  417174:	sub	sp, sp, #0x20
  417178:	stp	x29, x30, [sp, #16]
  41717c:	add	x29, sp, #0x10
  417180:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  417184:	mov	w1, w0
  417188:	ldr	x0, [x8, #2296]
  41718c:	add	x3, sp, #0x8
  417190:	mov	w2, #0x1                   	// #1
  417194:	str	xzr, [sp, #8]
  417198:	bl	42f174 <feof@plt+0x2c474>
  41719c:	ldp	x29, x30, [sp, #16]
  4171a0:	cmp	w0, #0x1
  4171a4:	cset	w0, eq  // eq = none
  4171a8:	add	sp, sp, #0x20
  4171ac:	ret
  4171b0:	mov	w1, #0x1                   	// #1
  4171b4:	mov	w2, wzr
  4171b8:	b	4171bc <feof@plt+0x144bc>
  4171bc:	sub	sp, sp, #0x70
  4171c0:	stp	x29, x30, [sp, #48]
  4171c4:	stp	x24, x23, [sp, #64]
  4171c8:	stp	x22, x21, [sp, #80]
  4171cc:	stp	x20, x19, [sp, #96]
  4171d0:	add	x29, sp, #0x30
  4171d4:	mov	w23, w2
  4171d8:	mov	w22, w1
  4171dc:	mov	w21, w0
  4171e0:	mov	x19, x8
  4171e4:	tbnz	w0, #31, 417204 <feof@plt+0x14504>
  4171e8:	mov	x20, xzr
  4171ec:	cmp	w21, #0x2
  4171f0:	b.cc	417234 <feof@plt+0x14534>  // b.lo, b.ul, b.last
  4171f4:	adrp	x24, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4171f8:	tbz	w22, #0, 417240 <feof@plt+0x14540>
  4171fc:	mov	w2, wzr
  417200:	b	417258 <feof@plt+0x14558>
  417204:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  417208:	ldr	x0, [x20, #2296]
  41720c:	mov	w1, w21
  417210:	bl	42e2c8 <feof@plt+0x2b5c8>
  417214:	ldr	x8, [x20, #2296]
  417218:	mov	x20, x0
  41721c:	mov	w1, w21
  417220:	mov	x0, x8
  417224:	bl	42e2e0 <feof@plt+0x2b5e0>
  417228:	mov	w21, w0
  41722c:	cmp	w21, #0x2
  417230:	b.cs	4171f4 <feof@plt+0x144f4>  // b.hs, b.nlast
  417234:	mov	x22, xzr
  417238:	mov	x23, xzr
  41723c:	b	4172dc <feof@plt+0x145dc>
  417240:	ldr	x0, [x24, #2296]
  417244:	mov	w1, w21
  417248:	mov	x2, xzr
  41724c:	bl	42f9f8 <feof@plt+0x2ccf8>
  417250:	mov	w21, w0
  417254:	mov	w2, #0x1                   	// #1
  417258:	ldr	x0, [x24, #2296]
  41725c:	sub	x3, x29, #0x8
  417260:	mov	w1, w21
  417264:	bl	42f174 <feof@plt+0x2c474>
  417268:	mov	w21, w0
  41726c:	cbz	w23, 4172b8 <feof@plt+0x145b8>
  417270:	cmp	w23, #0x1
  417274:	b.eq	4172a4 <feof@plt+0x145a4>  // b.none
  417278:	cmp	w23, #0x2
  41727c:	b.ne	417330 <feof@plt+0x14630>  // b.any
  417280:	ldr	x0, [x24, #2296]
  417284:	mov	w1, w21
  417288:	bl	42e2f8 <feof@plt+0x2b5f8>
  41728c:	lsr	x0, x0, #32
  417290:	cmp	w21, w0
  417294:	b.eq	4172b8 <feof@plt+0x145b8>  // b.none
  417298:	and	w1, w22, #0x1
  41729c:	mov	w2, #0x2                   	// #2
  4172a0:	b	417324 <feof@plt+0x14624>
  4172a4:	ldr	x0, [x24, #2296]
  4172a8:	mov	w1, w21
  4172ac:	bl	42e2f8 <feof@plt+0x2b5f8>
  4172b0:	cmp	w21, w0
  4172b4:	b.ne	41731c <feof@plt+0x1461c>  // b.any
  4172b8:	ldr	x0, [x24, #2296]
  4172bc:	ldur	x1, [x29, #-8]
  4172c0:	add	x8, sp, #0x8
  4172c4:	mov	w2, w21
  4172c8:	bl	42fc5c <feof@plt+0x2cf5c>
  4172cc:	ldr	x23, [sp, #16]
  4172d0:	ldr	x22, [sp, #32]
  4172d4:	cmp	w21, #0x1
  4172d8:	b.hi	4172f8 <feof@plt+0x145f8>  // b.pmore
  4172dc:	cbz	w21, 4172f0 <feof@plt+0x145f0>
  4172e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4172e4:	add	x0, x0, #0x1bd
  4172e8:	bl	402910 <gettext@plt>
  4172ec:	b	4172fc <feof@plt+0x145fc>
  4172f0:	mov	x0, xzr
  4172f4:	b	4172fc <feof@plt+0x145fc>
  4172f8:	ldr	x0, [sp, #8]
  4172fc:	stp	x0, x23, [x19]
  417300:	stp	x20, x22, [x19, #16]
  417304:	ldp	x20, x19, [sp, #96]
  417308:	ldp	x22, x21, [sp, #80]
  41730c:	ldp	x24, x23, [sp, #64]
  417310:	ldp	x29, x30, [sp, #48]
  417314:	add	sp, sp, #0x70
  417318:	ret
  41731c:	and	w1, w22, #0x1
  417320:	mov	w2, #0x1                   	// #1
  417324:	mov	x8, x19
  417328:	bl	4171bc <feof@plt+0x144bc>
  41732c:	b	417304 <feof@plt+0x14604>
  417330:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417334:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417338:	add	x0, x0, #0x930
  41733c:	add	x2, x2, #0xffa
  417340:	mov	w1, #0xc7                  	// #199
  417344:	bl	408b70 <feof@plt+0x5e70>
  417348:	mov	w2, w1
  41734c:	mov	w1, wzr
  417350:	b	4171bc <feof@plt+0x144bc>
  417354:	mov	w2, w1
  417358:	mov	w1, wzr
  41735c:	b	4171bc <feof@plt+0x144bc>
  417360:	stp	x29, x30, [sp, #-32]!
  417364:	stp	x20, x19, [sp, #16]
  417368:	mov	x29, sp
  41736c:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  417370:	ldr	x8, [x20, #2296]
  417374:	mov	w19, w0
  417378:	mov	w1, w19
  41737c:	mov	x0, x8
  417380:	bl	42f4e4 <feof@plt+0x2c7e4>
  417384:	cbz	w0, 4173a4 <feof@plt+0x146a4>
  417388:	ldr	x0, [x20, #2296]
  41738c:	mov	w1, w19
  417390:	ldp	x20, x19, [sp, #16]
  417394:	mov	w2, wzr
  417398:	mov	x3, xzr
  41739c:	ldp	x29, x30, [sp], #32
  4173a0:	b	42f174 <feof@plt+0x2c474>
  4173a4:	mov	w0, w19
  4173a8:	ldp	x20, x19, [sp, #16]
  4173ac:	ldp	x29, x30, [sp], #32
  4173b0:	ret
  4173b4:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4173b8:	ldr	x8, [x8, #2296]
  4173bc:	mov	w1, w0
  4173c0:	mov	w2, wzr
  4173c4:	mov	x3, xzr
  4173c8:	mov	x0, x8
  4173cc:	b	42f174 <feof@plt+0x2c474>
  4173d0:	stp	x29, x30, [sp, #-48]!
  4173d4:	stp	x22, x21, [sp, #16]
  4173d8:	stp	x20, x19, [sp, #32]
  4173dc:	mov	x29, sp
  4173e0:	adrp	x22, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4173e4:	ldr	x8, [x22, #2296]
  4173e8:	mov	w20, w1
  4173ec:	mov	w1, w0
  4173f0:	mov	w19, w2
  4173f4:	mov	x0, x8
  4173f8:	bl	42e3f0 <feof@plt+0x2b6f0>
  4173fc:	ldr	x8, [x22, #2296]
  417400:	mov	w21, w0
  417404:	mov	w1, w20
  417408:	mov	x0, x8
  41740c:	bl	42e2f8 <feof@plt+0x2b5f8>
  417410:	ldr	x8, [x22, #2296]
  417414:	mov	x20, x0
  417418:	mov	w1, w19
  41741c:	mov	x0, x8
  417420:	bl	42e2f8 <feof@plt+0x2b5f8>
  417424:	ldr	x8, [x22, #2296]
  417428:	mov	x2, x0
  41742c:	bfxil	x2, x20, #0, #32
  417430:	mov	w1, w21
  417434:	ldp	x20, x19, [sp, #32]
  417438:	ldp	x22, x21, [sp, #16]
  41743c:	mov	x0, x8
  417440:	mov	x3, xzr
  417444:	ldp	x29, x30, [sp], #48
  417448:	b	42deec <feof@plt+0x2b1ec>
  41744c:	stp	x29, x30, [sp, #-32]!
  417450:	stp	x20, x19, [sp, #16]
  417454:	mov	x29, sp
  417458:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41745c:	ldr	x8, [x20, #2296]
  417460:	mov	x19, x1
  417464:	mov	w1, w0
  417468:	mov	x0, x8
  41746c:	bl	42e3f0 <feof@plt+0x2b6f0>
  417470:	ldr	x8, [x20, #2296]
  417474:	mov	x2, x19
  417478:	ldp	x20, x19, [sp, #16]
  41747c:	mov	w1, w0
  417480:	mov	x0, x8
  417484:	mov	x3, xzr
  417488:	ldp	x29, x30, [sp], #32
  41748c:	b	42deec <feof@plt+0x2b1ec>
  417490:	sub	sp, sp, #0xd0
  417494:	stp	x29, x30, [sp, #112]
  417498:	stp	x28, x27, [sp, #128]
  41749c:	stp	x26, x25, [sp, #144]
  4174a0:	stp	x24, x23, [sp, #160]
  4174a4:	stp	x22, x21, [sp, #176]
  4174a8:	stp	x20, x19, [sp, #192]
  4174ac:	add	x29, sp, #0x70
  4174b0:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4174b4:	ldr	x0, [x8, #2296]
  4174b8:	movi	v0.2d, #0x0
  4174bc:	mov	x1, sp
  4174c0:	str	xzr, [sp, #96]
  4174c4:	stp	q0, q0, [sp, #64]
  4174c8:	stp	q0, q0, [sp, #32]
  4174cc:	stp	q0, q0, [sp]
  4174d0:	bl	4302dc <feof@plt+0x2d5dc>
  4174d4:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4174d8:	ldr	x0, [x19, #1416]
  4174dc:	ldr	x2, [sp, #32]
  4174e0:	ldp	x25, x23, [sp, #64]
  4174e4:	ldp	x24, x21, [sp, #16]
  4174e8:	ldr	x22, [sp, #56]
  4174ec:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4174f0:	add	x1, x1, #0x96d
  4174f4:	bl	4026f0 <fprintf@plt>
  4174f8:	ldr	x8, [sp, #32]
  4174fc:	cbz	x8, 417518 <feof@plt+0x14818>
  417500:	ldr	x9, [sp, #40]
  417504:	ldr	x0, [x19, #1416]
  417508:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41750c:	add	x1, x1, #0x9a2
  417510:	sdiv	x2, x9, x8
  417514:	bl	4026f0 <fprintf@plt>
  417518:	ldr	x3, [x19, #1416]
  41751c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417520:	add	x0, x0, #0x9d7
  417524:	mov	w1, #0x37                  	// #55
  417528:	mov	w2, #0x1                   	// #1
  41752c:	bl	402bf0 <fwrite@plt>
  417530:	ldr	x8, [sp, #8]
  417534:	ldr	x0, [x19, #1416]
  417538:	mov	w9, #0x2800                	// #10240
  41753c:	cmp	x8, x9
  417540:	mov	x2, x8
  417544:	b.lt	41755c <feof@plt+0x1485c>  // b.tstop
  417548:	cmp	x8, #0xa00, lsl #12
  41754c:	b.ge	417558 <feof@plt+0x14858>  // b.tcont
  417550:	lsr	x2, x8, #10
  417554:	b	41755c <feof@plt+0x1485c>
  417558:	lsr	x2, x8, #20
  41755c:	cmp	x8, #0xa00, lsl #12
  417560:	mov	w26, #0x4d                  	// #77
  417564:	mov	w27, #0x6b                  	// #107
  417568:	mov	w20, #0x2800                	// #10240
  41756c:	csel	w9, w27, w26, lt  // lt = tstop
  417570:	cmp	x8, x20
  417574:	mov	w28, #0x20                  	// #32
  417578:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41757c:	csel	w3, w28, w9, lt  // lt = tstop
  417580:	add	x1, x1, #0xa0f
  417584:	bl	4026f0 <fprintf@plt>
  417588:	ldr	x8, [sp, #24]
  41758c:	ldr	x0, [x19, #1416]
  417590:	cmp	x8, x20
  417594:	mov	x2, x8
  417598:	b.lt	4175b0 <feof@plt+0x148b0>  // b.tstop
  41759c:	cmp	x8, #0xa00, lsl #12
  4175a0:	b.ge	4175ac <feof@plt+0x148ac>  // b.tcont
  4175a4:	lsr	x2, x8, #10
  4175a8:	b	4175b0 <feof@plt+0x148b0>
  4175ac:	lsr	x2, x8, #20
  4175b0:	cmp	x8, #0xa00, lsl #12
  4175b4:	mov	w20, #0x2800                	// #10240
  4175b8:	csel	w9, w27, w26, lt  // lt = tstop
  4175bc:	cmp	x8, x20
  4175c0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4175c4:	csel	w3, w28, w9, lt  // lt = tstop
  4175c8:	add	x1, x1, #0xa3c
  4175cc:	bl	4026f0 <fprintf@plt>
  4175d0:	ldr	x8, [sp]
  4175d4:	ldr	x0, [x19, #1416]
  4175d8:	cmp	x8, x20
  4175dc:	mov	x2, x8
  4175e0:	b.lt	4175f8 <feof@plt+0x148f8>  // b.tstop
  4175e4:	cmp	x8, #0xa00, lsl #12
  4175e8:	b.ge	4175f4 <feof@plt+0x148f4>  // b.tcont
  4175ec:	lsr	x2, x8, #10
  4175f0:	b	4175f8 <feof@plt+0x148f8>
  4175f4:	lsr	x2, x8, #20
  4175f8:	cmp	x8, #0xa00, lsl #12
  4175fc:	mov	w26, #0x4d                  	// #77
  417600:	mov	w27, #0x6b                  	// #107
  417604:	mov	w20, #0x2800                	// #10240
  417608:	csel	w9, w27, w26, lt  // lt = tstop
  41760c:	cmp	x8, x20
  417610:	mov	w28, #0x20                  	// #32
  417614:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417618:	csel	w3, w28, w9, lt  // lt = tstop
  41761c:	add	x1, x1, #0xa69
  417620:	bl	4026f0 <fprintf@plt>
  417624:	ldr	x8, [sp, #16]
  417628:	ldr	x0, [x19, #1416]
  41762c:	cmp	x8, x20
  417630:	mov	x2, x8
  417634:	b.lt	41764c <feof@plt+0x1494c>  // b.tstop
  417638:	cmp	x8, #0xa00, lsl #12
  41763c:	b.ge	417648 <feof@plt+0x14948>  // b.tcont
  417640:	lsr	x2, x8, #10
  417644:	b	41764c <feof@plt+0x1494c>
  417648:	lsr	x2, x8, #20
  41764c:	cmp	x8, #0xa00, lsl #12
  417650:	mov	w20, #0x2800                	// #10240
  417654:	csel	w9, w27, w26, lt  // lt = tstop
  417658:	cmp	x8, x20
  41765c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417660:	csel	w3, w28, w9, lt  // lt = tstop
  417664:	add	x1, x1, #0xa96
  417668:	bl	4026f0 <fprintf@plt>
  41766c:	ldr	x8, [sp, #48]
  417670:	ldr	x0, [x19, #1416]
  417674:	cmp	x8, x20
  417678:	mov	x2, x8
  41767c:	b.lt	417694 <feof@plt+0x14994>  // b.tstop
  417680:	cmp	x8, #0xa00, lsl #12
  417684:	b.ge	417690 <feof@plt+0x14990>  // b.tcont
  417688:	lsr	x2, x8, #10
  41768c:	b	417694 <feof@plt+0x14994>
  417690:	lsr	x2, x8, #20
  417694:	cmp	x8, #0xa00, lsl #12
  417698:	mov	w26, #0x4d                  	// #77
  41769c:	mov	w27, #0x6b                  	// #107
  4176a0:	mov	w20, #0x2800                	// #10240
  4176a4:	csel	w9, w27, w26, lt  // lt = tstop
  4176a8:	cmp	x8, x20
  4176ac:	mov	w28, #0x20                  	// #32
  4176b0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4176b4:	csel	w3, w28, w9, lt  // lt = tstop
  4176b8:	add	x1, x1, #0xac3
  4176bc:	bl	4026f0 <fprintf@plt>
  4176c0:	ldr	x8, [sp, #64]
  4176c4:	ldr	x0, [x19, #1416]
  4176c8:	cmp	x8, x20
  4176cc:	mov	x2, x8
  4176d0:	b.lt	4176e8 <feof@plt+0x149e8>  // b.tstop
  4176d4:	cmp	x8, #0xa00, lsl #12
  4176d8:	b.ge	4176e4 <feof@plt+0x149e4>  // b.tcont
  4176dc:	lsr	x2, x8, #10
  4176e0:	b	4176e8 <feof@plt+0x149e8>
  4176e4:	lsr	x2, x8, #20
  4176e8:	cmp	x8, #0xa00, lsl #12
  4176ec:	mov	w20, #0x2800                	// #10240
  4176f0:	csel	w9, w27, w26, lt  // lt = tstop
  4176f4:	cmp	x8, x20
  4176f8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4176fc:	csel	w3, w28, w9, lt  // lt = tstop
  417700:	add	x1, x1, #0xaf0
  417704:	add	x25, x23, x25
  417708:	bl	4026f0 <fprintf@plt>
  41770c:	ldr	x8, [sp, #72]
  417710:	ldr	x0, [x19, #1416]
  417714:	cmp	x8, x20
  417718:	mov	x2, x8
  41771c:	b.lt	417734 <feof@plt+0x14a34>  // b.tstop
  417720:	cmp	x8, #0xa00, lsl #12
  417724:	b.ge	417730 <feof@plt+0x14a30>  // b.tcont
  417728:	lsr	x2, x8, #10
  41772c:	b	417734 <feof@plt+0x14a34>
  417730:	lsr	x2, x8, #20
  417734:	add	x24, x24, x23
  417738:	cmp	x8, #0xa00, lsl #12
  41773c:	mov	w23, #0x4d                  	// #77
  417740:	mov	w26, #0x6b                  	// #107
  417744:	mov	w20, #0x2800                	// #10240
  417748:	csel	w9, w26, w23, lt  // lt = tstop
  41774c:	cmp	x8, x20
  417750:	mov	w27, #0x20                  	// #32
  417754:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417758:	csel	w3, w27, w9, lt  // lt = tstop
  41775c:	add	x1, x1, #0xb1d
  417760:	bl	4026f0 <fprintf@plt>
  417764:	ldr	x0, [x19, #1416]
  417768:	cmp	x25, x20
  41776c:	mov	x2, x25
  417770:	b.lt	417788 <feof@plt+0x14a88>  // b.tstop
  417774:	cmp	x25, #0xa00, lsl #12
  417778:	b.ge	417784 <feof@plt+0x14a84>  // b.tcont
  41777c:	lsr	x2, x25, #10
  417780:	b	417788 <feof@plt+0x14a88>
  417784:	lsr	x2, x25, #20
  417788:	cmp	x25, #0xa00, lsl #12
  41778c:	mov	w20, #0x2800                	// #10240
  417790:	csel	w8, w26, w23, lt  // lt = tstop
  417794:	cmp	x25, x20
  417798:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41779c:	csel	w3, w27, w8, lt  // lt = tstop
  4177a0:	add	x1, x1, #0xb4a
  4177a4:	add	x22, x24, x22
  4177a8:	bl	4026f0 <fprintf@plt>
  4177ac:	ldr	x8, [sp, #80]
  4177b0:	ldr	x0, [x19, #1416]
  4177b4:	cmp	x8, x20
  4177b8:	mov	x2, x8
  4177bc:	b.lt	4177d4 <feof@plt+0x14ad4>  // b.tstop
  4177c0:	cmp	x8, #0xa00, lsl #12
  4177c4:	b.ge	4177d0 <feof@plt+0x14ad0>  // b.tcont
  4177c8:	lsr	x2, x8, #10
  4177cc:	b	4177d4 <feof@plt+0x14ad4>
  4177d0:	lsr	x2, x8, #20
  4177d4:	cmp	x8, #0xa00, lsl #12
  4177d8:	mov	w23, #0x4d                  	// #77
  4177dc:	mov	w24, #0x6b                  	// #107
  4177e0:	mov	w20, #0x2800                	// #10240
  4177e4:	add	x21, x25, x21
  4177e8:	csel	w9, w24, w23, lt  // lt = tstop
  4177ec:	cmp	x8, x20
  4177f0:	mov	w25, #0x20                  	// #32
  4177f4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4177f8:	csel	w3, w25, w9, lt  // lt = tstop
  4177fc:	add	x1, x1, #0xb77
  417800:	bl	4026f0 <fprintf@plt>
  417804:	ldr	x0, [x19, #1416]
  417808:	cmp	x22, x20
  41780c:	mov	x2, x22
  417810:	b.lt	417828 <feof@plt+0x14b28>  // b.tstop
  417814:	cmp	x22, #0xa00, lsl #12
  417818:	b.ge	417824 <feof@plt+0x14b24>  // b.tcont
  41781c:	lsr	x2, x22, #10
  417820:	b	417828 <feof@plt+0x14b28>
  417824:	lsr	x2, x22, #20
  417828:	cmp	x22, #0xa00, lsl #12
  41782c:	mov	w20, #0x2800                	// #10240
  417830:	csel	w8, w24, w23, lt  // lt = tstop
  417834:	cmp	x22, x20
  417838:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41783c:	csel	w3, w25, w8, lt  // lt = tstop
  417840:	add	x1, x1, #0xba4
  417844:	bl	4026f0 <fprintf@plt>
  417848:	ldr	x0, [x19, #1416]
  41784c:	cmp	x21, x20
  417850:	mov	x2, x21
  417854:	b.lt	41786c <feof@plt+0x14b6c>  // b.tstop
  417858:	cmp	x21, #0xa00, lsl #12
  41785c:	b.ge	417868 <feof@plt+0x14b68>  // b.tcont
  417860:	lsr	x2, x21, #10
  417864:	b	41786c <feof@plt+0x14b6c>
  417868:	lsr	x2, x21, #20
  41786c:	cmp	x21, #0xa00, lsl #12
  417870:	mov	w22, #0x4d                  	// #77
  417874:	mov	w23, #0x6b                  	// #107
  417878:	mov	w20, #0x2800                	// #10240
  41787c:	csel	w8, w23, w22, lt  // lt = tstop
  417880:	cmp	x21, x20
  417884:	mov	w21, #0x20                  	// #32
  417888:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41788c:	csel	w3, w21, w8, lt  // lt = tstop
  417890:	add	x1, x1, #0xbd1
  417894:	bl	4026f0 <fprintf@plt>
  417898:	ldr	x8, [sp, #88]
  41789c:	ldr	x0, [x19, #1416]
  4178a0:	cmp	x8, x20
  4178a4:	mov	x2, x8
  4178a8:	b.lt	4178c0 <feof@plt+0x14bc0>  // b.tstop
  4178ac:	cmp	x8, #0xa00, lsl #12
  4178b0:	b.ge	4178bc <feof@plt+0x14bbc>  // b.tcont
  4178b4:	lsr	x2, x8, #10
  4178b8:	b	4178c0 <feof@plt+0x14bc0>
  4178bc:	lsr	x2, x8, #20
  4178c0:	cmp	x8, #0xa00, lsl #12
  4178c4:	mov	w20, #0x2800                	// #10240
  4178c8:	csel	w9, w23, w22, lt  // lt = tstop
  4178cc:	cmp	x8, x20
  4178d0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4178d4:	csel	w3, w21, w9, lt  // lt = tstop
  4178d8:	add	x1, x1, #0xbfe
  4178dc:	bl	4026f0 <fprintf@plt>
  4178e0:	ldr	x8, [sp, #96]
  4178e4:	ldr	x0, [x19, #1416]
  4178e8:	cmp	x8, x20
  4178ec:	mov	x2, x8
  4178f0:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4178f4:	b.lt	41790c <feof@plt+0x14c0c>  // b.tstop
  4178f8:	cmp	x8, #0xa00, lsl #12
  4178fc:	b.ge	417908 <feof@plt+0x14c08>  // b.tcont
  417900:	lsr	x2, x8, #10
  417904:	b	41790c <feof@plt+0x14c0c>
  417908:	lsr	x2, x8, #20
  41790c:	cmp	x8, #0xa00, lsl #12
  417910:	mov	w21, #0x4d                  	// #77
  417914:	mov	w22, #0x6b                  	// #107
  417918:	mov	w9, #0x2800                	// #10240
  41791c:	csel	w10, w22, w21, lt  // lt = tstop
  417920:	cmp	x8, x9
  417924:	mov	w23, #0x20                  	// #32
  417928:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41792c:	csel	w3, w23, w10, lt  // lt = tstop
  417930:	add	x1, x1, #0xc2b
  417934:	bl	4026f0 <fprintf@plt>
  417938:	ldr	x8, [x20, #2296]
  41793c:	ldr	x0, [x19, #1416]
  417940:	ldr	w8, [x8, #124]
  417944:	lsr	w9, w8, #11
  417948:	cmp	w9, #0x5
  41794c:	mov	w10, w8
  417950:	b.cc	41796c <feof@plt+0x14c6c>  // b.lo, b.ul, b.last
  417954:	lsr	w10, w8, #21
  417958:	cmp	w10, #0x4
  41795c:	b.hi	417968 <feof@plt+0x14c68>  // b.pmore
  417960:	lsr	w10, w8, #10
  417964:	b	41796c <feof@plt+0x14c6c>
  417968:	lsr	w10, w8, #20
  41796c:	cmp	w8, #0xa00, lsl #12
  417970:	csel	w8, w22, w21, cc  // cc = lo, ul, last
  417974:	cmp	w9, #0x5
  417978:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41797c:	mov	w2, w10
  417980:	csel	w3, w23, w8, cc  // cc = lo, ul, last
  417984:	add	x1, x1, #0xc58
  417988:	bl	4026f0 <fprintf@plt>
  41798c:	ldr	x8, [x20, #2296]
  417990:	ldr	x0, [x19, #1416]
  417994:	ldr	w9, [x8, #128]
  417998:	lsr	w8, w9, #11
  41799c:	cmp	w8, #0x5
  4179a0:	mov	w10, w9
  4179a4:	b.cc	4179c0 <feof@plt+0x14cc0>  // b.lo, b.ul, b.last
  4179a8:	lsr	w10, w9, #21
  4179ac:	cmp	w10, #0x4
  4179b0:	b.hi	4179bc <feof@plt+0x14cbc>  // b.pmore
  4179b4:	lsr	w10, w9, #10
  4179b8:	b	4179c0 <feof@plt+0x14cc0>
  4179bc:	lsr	w10, w9, #20
  4179c0:	mov	w2, w10
  4179c4:	cmp	w9, #0xa00, lsl #12
  4179c8:	mov	w9, #0x4d                  	// #77
  4179cc:	mov	w10, #0x6b                  	// #107
  4179d0:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  4179d4:	cmp	w8, #0x5
  4179d8:	mov	w8, #0x20                  	// #32
  4179dc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4179e0:	csel	w3, w8, w9, cc  // cc = lo, ul, last
  4179e4:	add	x1, x1, #0xc85
  4179e8:	bl	4026f0 <fprintf@plt>
  4179ec:	ldr	x1, [x19, #1416]
  4179f0:	mov	w0, #0xa                   	// #10
  4179f4:	bl	4029a0 <fputc@plt>
  4179f8:	ldp	x20, x19, [sp, #192]
  4179fc:	ldp	x22, x21, [sp, #176]
  417a00:	ldp	x24, x23, [sp, #160]
  417a04:	ldp	x26, x25, [sp, #144]
  417a08:	ldp	x28, x27, [sp, #128]
  417a0c:	ldp	x29, x30, [sp, #112]
  417a10:	add	sp, sp, #0xd0
  417a14:	ret
  417a18:	sub	sp, sp, #0xa0
  417a1c:	stp	x29, x30, [sp, #64]
  417a20:	stp	x28, x27, [sp, #80]
  417a24:	stp	x26, x25, [sp, #96]
  417a28:	stp	x24, x23, [sp, #112]
  417a2c:	stp	x22, x21, [sp, #128]
  417a30:	stp	x20, x19, [sp, #144]
  417a34:	add	x29, sp, #0x40
  417a38:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417a3c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417a40:	add	x1, x1, #0x56e
  417a44:	add	x2, x2, #0xcb2
  417a48:	mov	x19, x0
  417a4c:	bl	4026f0 <fprintf@plt>
  417a50:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417a54:	add	x1, x1, #0xc
  417a58:	mov	w3, #0x2                   	// #2
  417a5c:	mov	x0, x19
  417a60:	mov	w2, wzr
  417a64:	bl	4026f0 <fprintf@plt>
  417a68:	mov	w0, #0xa                   	// #10
  417a6c:	mov	x1, x19
  417a70:	mov	w28, #0xa                   	// #10
  417a74:	bl	4029a0 <fputc@plt>
  417a78:	adrp	x21, 47d000 <stderr@@GLIBC_2.17+0xa78>
  417a7c:	ldr	x8, [x21, #2296]
  417a80:	ldr	w9, [x8, #12]
  417a84:	cbz	w9, 417f68 <feof@plt+0x15268>
  417a88:	mov	w22, #0xcccd                	// #52429
  417a8c:	mov	w24, #0x851f                	// #34079
  417a90:	mov	w20, #0x6667                	// #26215
  417a94:	mov	w2, wzr
  417a98:	mov	w10, #0x18                  	// #24
  417a9c:	movk	w22, #0xcccc, lsl #16
  417aa0:	movk	w24, #0x51eb, lsl #16
  417aa4:	movk	w20, #0x6666, lsl #16
  417aa8:	b	417ad4 <feof@plt+0x14dd4>
  417aac:	mov	w0, #0xa                   	// #10
  417ab0:	mov	x1, x19
  417ab4:	bl	4029a0 <fputc@plt>
  417ab8:	ldr	x8, [x21, #2296]
  417abc:	ldr	x2, [sp, #8]
  417ac0:	mov	w10, #0x18                  	// #24
  417ac4:	ldr	w9, [x8, #12]
  417ac8:	add	w2, w2, #0x1
  417acc:	cmp	w2, w9
  417ad0:	b.cs	417f68 <feof@plt+0x15268>  // b.hs, b.nlast
  417ad4:	sub	w9, w9, #0x1
  417ad8:	cmp	w9, w2
  417adc:	b.ne	417ae8 <feof@plt+0x14de8>  // b.any
  417ae0:	ldr	x23, [x8], #56
  417ae4:	b	417af4 <feof@plt+0x14df4>
  417ae8:	ldr	x23, [x8]
  417aec:	add	w8, w2, #0x1
  417af0:	smaddl	x8, w8, w10, x23
  417af4:	ldr	w25, [x8]
  417af8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417afc:	mov	x0, x19
  417b00:	add	x1, x1, #0xcc5
  417b04:	sxtw	x26, w2
  417b08:	smaddl	x27, w2, w10, x23
  417b0c:	str	x2, [sp, #8]
  417b10:	bl	4026f0 <fprintf@plt>
  417b14:	ldr	w2, [x27]
  417b18:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417b1c:	mov	x0, x19
  417b20:	add	x1, x1, #0xc
  417b24:	mov	w3, w25
  417b28:	str	w25, [sp, #28]
  417b2c:	bl	4026f0 <fprintf@plt>
  417b30:	ldr	x2, [x27, #8]
  417b34:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417b38:	mov	x0, x19
  417b3c:	add	x1, x1, #0xcd7
  417b40:	bl	4026f0 <fprintf@plt>
  417b44:	ldr	w2, [x27, #16]
  417b48:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417b4c:	mov	x0, x19
  417b50:	add	x1, x1, #0xce3
  417b54:	bl	4026f0 <fprintf@plt>
  417b58:	mov	x25, x27
  417b5c:	ldrb	w2, [x25, #6]!
  417b60:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417b64:	mov	x0, x19
  417b68:	add	x1, x1, #0xcfb
  417b6c:	bl	4026f0 <fprintf@plt>
  417b70:	ldrh	w8, [x25]
  417b74:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417b78:	mov	x0, x19
  417b7c:	add	x1, x1, #0xd18
  417b80:	and	w9, w8, #0xff
  417b84:	sub	w2, w9, w8, lsr #8
  417b88:	bl	4026f0 <fprintf@plt>
  417b8c:	ldrb	w2, [x27, #7]
  417b90:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417b94:	mov	x0, x19
  417b98:	add	x1, x1, #0xd2b
  417b9c:	bl	4026f0 <fprintf@plt>
  417ba0:	ldrsb	x8, [x27, #4]
  417ba4:	adrp	x3, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417ba8:	add	x3, x3, #0xd7c
  417bac:	str	x27, [sp, #16]
  417bb0:	cmp	x8, #0x4
  417bb4:	b.hi	417bc4 <feof@plt+0x14ec4>  // b.pmore
  417bb8:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417bbc:	add	x9, x9, #0x218
  417bc0:	ldr	x3, [x9, x8, lsl #3]
  417bc4:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417bc8:	and	w2, w8, #0xff
  417bcc:	mov	x0, x19
  417bd0:	add	x1, x1, #0xd84
  417bd4:	bl	4026f0 <fprintf@plt>
  417bd8:	ldr	x0, [x21, #2296]
  417bdc:	ldr	x1, [sp, #16]
  417be0:	bl	42e4f0 <feof@plt+0x2b7f0>
  417be4:	mov	w8, #0x18                  	// #24
  417be8:	madd	x8, x26, x8, x23
  417bec:	ldr	w2, [x8, #20]
  417bf0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417bf4:	mov	x26, x0
  417bf8:	mov	x0, x19
  417bfc:	add	x1, x1, #0xd97
  417c00:	bl	4026f0 <fprintf@plt>
  417c04:	cbz	x26, 417c34 <feof@plt+0x14f34>
  417c08:	ldr	x8, [x21, #2296]
  417c0c:	mov	w9, #0xaaab                	// #43691
  417c10:	movk	w9, #0xaaaa, lsl #16
  417c14:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417c18:	ldr	x8, [x8]
  417c1c:	mov	x0, x19
  417c20:	add	x1, x1, #0xdb4
  417c24:	sub	x8, x26, x8
  417c28:	lsr	x8, x8, #3
  417c2c:	mul	w2, w8, w9
  417c30:	bl	4026f0 <fprintf@plt>
  417c34:	mov	w0, #0xa                   	// #10
  417c38:	mov	x1, x19
  417c3c:	bl	4029a0 <fputc@plt>
  417c40:	ldr	x27, [sp, #16]
  417c44:	ldr	w8, [sp, #28]
  417c48:	mov	w23, #0x1                   	// #1
  417c4c:	ldr	w26, [x27]
  417c50:	cmp	w26, w8
  417c54:	b.cc	417cb8 <feof@plt+0x14fb8>  // b.lo, b.ul, b.last
  417c58:	b	417aac <feof@plt+0x14dac>
  417c5c:	mov	w0, #0xa                   	// #10
  417c60:	mov	x1, x19
  417c64:	bl	4029a0 <fputc@plt>
  417c68:	mov	w3, #0x20                  	// #32
  417c6c:	mov	x0, x19
  417c70:	mov	x1, x21
  417c74:	mov	w2, w27
  417c78:	bl	4026f0 <fprintf@plt>
  417c7c:	mov	w0, #0x7c                  	// #124
  417c80:	mov	x1, x19
  417c84:	bl	4029a0 <fputc@plt>
  417c88:	mov	w0, #0xa                   	// #10
  417c8c:	mov	x1, x19
  417c90:	bl	4029a0 <fputc@plt>
  417c94:	ldr	x27, [sp, #16]
  417c98:	adrp	x21, 47d000 <stderr@@GLIBC_2.17+0xa78>
  417c9c:	mov	w23, #0x1                   	// #1
  417ca0:	ldrb	w8, [x25, #1]
  417ca4:	lsl	w8, w23, w8
  417ca8:	add	w26, w8, w26
  417cac:	ldr	w8, [sp, #28]
  417cb0:	cmp	w26, w8
  417cb4:	b.cs	417aac <feof@plt+0x14dac>  // b.hs, b.nlast
  417cb8:	ldr	x0, [x21, #2296]
  417cbc:	mov	w1, w26
  417cc0:	bl	42e3a4 <feof@plt+0x2b6a4>
  417cc4:	tbz	w0, #0, 41820c <feof@plt+0x1550c>
  417cc8:	ldr	x0, [x21, #2296]
  417ccc:	add	x8, sp, #0x20
  417cd0:	mov	x1, x27
  417cd4:	mov	w2, w26
  417cd8:	bl	42fc5c <feof@plt+0x2cf5c>
  417cdc:	ldr	w8, [sp, #44]
  417ce0:	cbnz	w8, 417ca0 <feof@plt+0x14fa0>
  417ce4:	ldr	x0, [sp, #32]
  417ce8:	ldr	w1, [sp, #40]
  417cec:	bl	416df0 <feof@plt+0x140f0>
  417cf0:	cbz	x0, 417aac <feof@plt+0x14dac>
  417cf4:	ldr	x2, [sp, #32]
  417cf8:	ldr	w3, [sp, #40]
  417cfc:	mov	x27, x1
  417d00:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417d04:	mov	x6, x0
  417d08:	mov	x0, x19
  417d0c:	add	x1, x1, #0xddd
  417d10:	mov	w4, w26
  417d14:	mov	w5, w27
  417d18:	bl	4026f0 <fprintf@plt>
  417d1c:	ldrb	w8, [x25]
  417d20:	mov	w9, #0xffffffff            	// #-1
  417d24:	ldr	w0, [sp, #40]
  417d28:	lsl	w8, w9, w8
  417d2c:	mvn	w8, w8
  417d30:	sxtw	x8, w8
  417d34:	cmp	x27, x8
  417d38:	csinc	x23, x8, x27, cs  // cs = hs, nlast
  417d3c:	bl	409cc0 <feof@plt+0x6fc0>
  417d40:	cmp	w0, #0x3
  417d44:	mov	w8, #0x3                   	// #3
  417d48:	csel	w21, w0, w8, gt
  417d4c:	mov	w0, w26
  417d50:	bl	409cc0 <feof@plt+0x6fc0>
  417d54:	ldr	x8, [sp, #32]
  417d58:	cmp	w0, #0x5
  417d5c:	mov	w9, #0x5                   	// #5
  417d60:	csel	w27, w0, w9, gt
  417d64:	mov	x0, x8
  417d68:	bl	4026d0 <strlen@plt>
  417d6c:	ldr	w9, [sp, #28]
  417d70:	add	w8, w21, w27
  417d74:	add	w8, w8, w0
  417d78:	add	w27, w8, #0x6
  417d7c:	cmp	w9, #0x3e8
  417d80:	b.cc	417e08 <feof@plt+0x15108>  // b.lo, b.ul, b.last
  417d84:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417d88:	mov	w3, #0x20                  	// #32
  417d8c:	mov	x0, x19
  417d90:	add	x1, x1, #0x33
  417d94:	mov	w2, w27
  417d98:	bl	4026f0 <fprintf@plt>
  417d9c:	mov	w0, #0x7c                  	// #124
  417da0:	mov	x1, x19
  417da4:	bl	4029a0 <fputc@plt>
  417da8:	mov	w24, #0x4dd3                	// #19923
  417dac:	cmp	w23, #0x2
  417db0:	movk	w24, #0x1062, lsl #16
  417db4:	b.lt	417df4 <feof@plt+0x150f4>  // b.tstop
  417db8:	mov	w21, #0x1                   	// #1
  417dbc:	ldrb	w8, [x25, #1]
  417dc0:	mov	x1, x19
  417dc4:	lsl	w8, w21, w8
  417dc8:	add	w8, w8, w26
  417dcc:	umull	x8, w8, w24
  417dd0:	lsr	x8, x8, #38
  417dd4:	mul	x9, x8, x22
  417dd8:	lsr	x9, x9, #35
  417ddc:	msub	w8, w9, w28, w8
  417de0:	orr	w0, w8, #0x30
  417de4:	bl	4029a0 <fputc@plt>
  417de8:	add	w21, w21, #0x1
  417dec:	cmp	w23, w21
  417df0:	b.ne	417dbc <feof@plt+0x150bc>  // b.any
  417df4:	mov	w0, #0xa                   	// #10
  417df8:	mov	x1, x19
  417dfc:	bl	4029a0 <fputc@plt>
  417e00:	mov	w24, #0x851f                	// #34079
  417e04:	movk	w24, #0x51eb, lsl #16
  417e08:	ldr	w8, [sp, #28]
  417e0c:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417e10:	add	x21, x21, #0x33
  417e14:	cmp	w8, #0x64
  417e18:	b.cc	417e94 <feof@plt+0x15194>  // b.lo, b.ul, b.last
  417e1c:	mov	w3, #0x20                  	// #32
  417e20:	mov	x0, x19
  417e24:	mov	x1, x21
  417e28:	mov	w2, w27
  417e2c:	bl	4026f0 <fprintf@plt>
  417e30:	mov	w0, #0x7c                  	// #124
  417e34:	mov	x1, x19
  417e38:	bl	4029a0 <fputc@plt>
  417e3c:	cmp	w23, #0x2
  417e40:	b.lt	417e80 <feof@plt+0x15180>  // b.tstop
  417e44:	mov	w21, #0x1                   	// #1
  417e48:	ldrb	w8, [x25, #1]
  417e4c:	mov	x1, x19
  417e50:	lsl	w8, w21, w8
  417e54:	add	w8, w8, w26
  417e58:	umull	x8, w8, w24
  417e5c:	lsr	x8, x8, #37
  417e60:	mul	x9, x8, x22
  417e64:	lsr	x9, x9, #35
  417e68:	msub	w8, w9, w28, w8
  417e6c:	orr	w0, w8, #0x30
  417e70:	bl	4029a0 <fputc@plt>
  417e74:	add	w21, w21, #0x1
  417e78:	cmp	w23, w21
  417e7c:	b.ne	417e48 <feof@plt+0x15148>  // b.any
  417e80:	mov	w0, #0xa                   	// #10
  417e84:	mov	x1, x19
  417e88:	bl	4029a0 <fputc@plt>
  417e8c:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417e90:	add	x21, x21, #0x33
  417e94:	mov	w3, #0x20                  	// #32
  417e98:	mov	x0, x19
  417e9c:	mov	x1, x21
  417ea0:	mov	w2, w27
  417ea4:	bl	4026f0 <fprintf@plt>
  417ea8:	mov	w0, #0x7c                  	// #124
  417eac:	mov	x1, x19
  417eb0:	bl	4029a0 <fputc@plt>
  417eb4:	cmp	w23, #0x2
  417eb8:	b.lt	417c5c <feof@plt+0x14f5c>  // b.tstop
  417ebc:	mov	w21, #0x1                   	// #1
  417ec0:	ldrb	w8, [x25, #1]
  417ec4:	mov	x1, x19
  417ec8:	lsl	w8, w21, w8
  417ecc:	add	w8, w8, w26
  417ed0:	umull	x8, w8, w22
  417ed4:	lsr	x8, x8, #35
  417ed8:	mul	x9, x8, x22
  417edc:	lsr	x9, x9, #35
  417ee0:	msub	w8, w9, w28, w8
  417ee4:	orr	w0, w8, #0x30
  417ee8:	bl	4029a0 <fputc@plt>
  417eec:	add	w21, w21, #0x1
  417ef0:	cmp	w23, w21
  417ef4:	b.ne	417ec0 <feof@plt+0x151c0>  // b.any
  417ef8:	mov	w0, #0xa                   	// #10
  417efc:	mov	x1, x19
  417f00:	bl	4029a0 <fputc@plt>
  417f04:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417f08:	mov	w3, #0x20                  	// #32
  417f0c:	mov	x0, x19
  417f10:	add	x1, x1, #0x33
  417f14:	mov	w2, w27
  417f18:	bl	4026f0 <fprintf@plt>
  417f1c:	mov	w0, #0x7c                  	// #124
  417f20:	mov	x1, x19
  417f24:	bl	4029a0 <fputc@plt>
  417f28:	mov	w21, #0x1                   	// #1
  417f2c:	ldrb	w8, [x25, #1]
  417f30:	mov	x1, x19
  417f34:	lsl	w8, w21, w8
  417f38:	add	w8, w8, w26
  417f3c:	smull	x9, w8, w20
  417f40:	lsr	x10, x9, #63
  417f44:	asr	x9, x9, #34
  417f48:	add	w9, w9, w10
  417f4c:	msub	w8, w9, w28, w8
  417f50:	add	w0, w8, #0x30
  417f54:	bl	4029a0 <fputc@plt>
  417f58:	add	w21, w21, #0x1
  417f5c:	cmp	w23, w21
  417f60:	b.ne	417f2c <feof@plt+0x1522c>  // b.any
  417f64:	b	417c88 <feof@plt+0x14f88>
  417f68:	ldr	w9, [x8, #36]
  417f6c:	ldr	w20, [x8, #56]
  417f70:	cbz	w9, 417f88 <feof@plt+0x15288>
  417f74:	ldr	x8, [x8, #24]
  417f78:	sub	w9, w9, #0x1
  417f7c:	sbfiz	x9, x9, #5, #32
  417f80:	ldr	w21, [x8, x9]
  417f84:	b	417f8c <feof@plt+0x1528c>
  417f88:	mov	w21, #0x80000000            	// #-2147483648
  417f8c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417f90:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417f94:	add	x1, x1, #0x56e
  417f98:	add	x2, x2, #0xdf2
  417f9c:	mov	x0, x19
  417fa0:	bl	4026f0 <fprintf@plt>
  417fa4:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x2dd8>
  417fa8:	add	x1, x1, #0xc
  417fac:	mov	x0, x19
  417fb0:	mov	w2, w20
  417fb4:	mov	w3, w21
  417fb8:	bl	4026f0 <fprintf@plt>
  417fbc:	mov	w0, #0xa                   	// #10
  417fc0:	mov	x1, x19
  417fc4:	bl	4029a0 <fputc@plt>
  417fc8:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  417fcc:	ldr	x8, [x8, #2296]
  417fd0:	ldr	w9, [x8, #36]
  417fd4:	cbz	w9, 418174 <feof@plt+0x15474>
  417fd8:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417fdc:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1dd8>
  417fe0:	mov	w10, wzr
  417fe4:	add	x25, x25, #0xe70
  417fe8:	add	x20, x20, #0xefd
  417fec:	b	418014 <feof@plt+0x15314>
  417ff0:	mov	w0, #0xa                   	// #10
  417ff4:	mov	x1, x19
  417ff8:	bl	4029a0 <fputc@plt>
  417ffc:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418000:	ldr	x8, [x8, #2296]
  418004:	ldr	w10, [sp, #28]
  418008:	ldr	w9, [x8, #36]
  41800c:	cmp	w10, w9
  418010:	b.cs	418174 <feof@plt+0x15474>  // b.hs, b.nlast
  418014:	ldr	x8, [x8, #24]
  418018:	add	w10, w10, #0x1
  41801c:	sub	w22, w9, w10
  418020:	sxtw	x9, w22
  418024:	add	x27, x8, x9, lsl #5
  418028:	mov	x0, x27
  41802c:	str	w10, [sp, #28]
  418030:	bl	42f4d8 <feof@plt+0x2c7d8>
  418034:	mov	x21, x27
  418038:	ldr	w4, [x21, #4]!
  41803c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418040:	mov	x3, x0
  418044:	mov	x0, x19
  418048:	add	x1, x1, #0xe08
  41804c:	mov	w2, w22
  418050:	bl	4026f0 <fprintf@plt>
  418054:	ldr	w2, [x27]
  418058:	ldr	w8, [x21]
  41805c:	adrp	x1, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418060:	mov	x0, x19
  418064:	add	x1, x1, #0xc
  418068:	add	w3, w8, w2
  41806c:	bl	4026f0 <fprintf@plt>
  418070:	ldr	w0, [x27, #24]
  418074:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418078:	add	x1, x1, #0xe22
  41807c:	mov	w2, w0
  418080:	bl	40a2b8 <feof@plt+0x75b8>
  418084:	ldr	w2, [x27]
  418088:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41808c:	mov	x0, x19
  418090:	add	x1, x1, #0xe41
  418094:	bl	4026f0 <fprintf@plt>
  418098:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41809c:	mov	w1, #0x13                  	// #19
  4180a0:	mov	w2, #0x1                   	// #1
  4180a4:	add	x0, x0, #0xe5c
  4180a8:	mov	x3, x19
  4180ac:	bl	402bf0 <fwrite@plt>
  4180b0:	ldr	w8, [x21]
  4180b4:	cbz	w8, 417ff0 <feof@plt+0x152f0>
  4180b8:	mov	x22, xzr
  4180bc:	add	x26, x27, #0x10
  4180c0:	mov	w28, #0x1                   	// #1
  4180c4:	b	418108 <feof@plt+0x15408>
  4180c8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4180cc:	mov	w0, w23
  4180d0:	add	x1, x1, #0xedf
  4180d4:	mov	w2, w22
  4180d8:	mov	w3, w23
  4180dc:	bl	40a2b8 <feof@plt+0x75b8>
  4180e0:	mov	w0, w23
  4180e4:	mov	x1, x20
  4180e8:	mov	w2, w22
  4180ec:	mov	w3, w24
  4180f0:	bl	40a2b8 <feof@plt+0x75b8>
  4180f4:	ldr	w8, [x21]
  4180f8:	add	x22, x22, #0x1
  4180fc:	add	w28, w28, #0x2
  418100:	cmp	x22, x8
  418104:	b.cs	417ff0 <feof@plt+0x152f0>  // b.hs, b.nlast
  418108:	ldr	x8, [x26]
  41810c:	sub	w9, w28, #0x1
  418110:	mov	x0, x19
  418114:	mov	x1, x25
  418118:	ldr	w23, [x8, w9, uxtw #2]
  41811c:	ldr	w24, [x8, w28, uxtw #2]
  418120:	mov	w2, w22
  418124:	mov	w3, w23
  418128:	mov	w4, w24
  41812c:	bl	4026f0 <fprintf@plt>
  418130:	cmp	w23, w24
  418134:	b.ne	4180c8 <feof@plt+0x153c8>  // b.any
  418138:	ldr	w8, [x27]
  41813c:	subs	w3, w23, w8
  418140:	b.cs	41815c <feof@plt+0x1545c>  // b.hs, b.nlast
  418144:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418148:	mov	w0, w23
  41814c:	add	x1, x1, #0xe80
  418150:	mov	w2, w22
  418154:	mov	w3, w23
  418158:	b	4180f0 <feof@plt+0x153f0>
  41815c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418160:	mov	x0, x19
  418164:	add	x1, x1, #0xeac
  418168:	mov	w2, w23
  41816c:	bl	4026f0 <fprintf@plt>
  418170:	b	4180f4 <feof@plt+0x153f4>
  418174:	adrp	x20, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418178:	add	x20, x20, #0x56e
  41817c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418180:	add	x2, x2, #0xf1b
  418184:	mov	x0, x19
  418188:	mov	x1, x20
  41818c:	bl	4026f0 <fprintf@plt>
  418190:	adrp	x21, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418194:	add	x21, x21, #0xc
  418198:	mov	w2, #0x7fffffff            	// #2147483647
  41819c:	mov	w3, #0x80000000            	// #-2147483648
  4181a0:	mov	x0, x19
  4181a4:	mov	x1, x21
  4181a8:	bl	4026f0 <fprintf@plt>
  4181ac:	mov	w0, #0xa                   	// #10
  4181b0:	mov	x1, x19
  4181b4:	bl	4029a0 <fputc@plt>
  4181b8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4181bc:	add	x2, x2, #0xf2a
  4181c0:	mov	x0, x19
  4181c4:	mov	x1, x20
  4181c8:	bl	4026f0 <fprintf@plt>
  4181cc:	mov	w2, #0x80000000            	// #-2147483648
  4181d0:	mov	w3, #0xffffffff            	// #-1
  4181d4:	mov	x0, x19
  4181d8:	mov	x1, x21
  4181dc:	bl	4026f0 <fprintf@plt>
  4181e0:	mov	w0, #0xa                   	// #10
  4181e4:	mov	x1, x19
  4181e8:	bl	4029a0 <fputc@plt>
  4181ec:	ldp	x20, x19, [sp, #144]
  4181f0:	ldp	x22, x21, [sp, #128]
  4181f4:	ldp	x24, x23, [sp, #112]
  4181f8:	ldp	x26, x25, [sp, #96]
  4181fc:	ldp	x28, x27, [sp, #80]
  418200:	ldp	x29, x30, [sp, #64]
  418204:	add	sp, sp, #0xa0
  418208:	ret
  41820c:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418210:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418214:	add	x0, x0, #0x930
  418218:	add	x2, x2, #0xdca
  41821c:	mov	w1, #0x454                 	// #1108
  418220:	bl	408b70 <feof@plt+0x5e70>
  418224:	stp	x29, x30, [sp, #-48]!
  418228:	str	x21, [sp, #16]
  41822c:	stp	x20, x19, [sp, #32]
  418230:	mov	x29, sp
  418234:	mov	w21, w1
  418238:	str	w1, [x0]
  41823c:	adrp	x1, 419000 <feof@plt+0x16300>
  418240:	mov	x19, x2
  418244:	mov	x20, x0
  418248:	sxtw	x3, w21
  41824c:	sbfiz	x0, x21, #2, #32
  418250:	add	x1, x1, #0x520
  418254:	mov	w2, #0x4                   	// #4
  418258:	bl	419d54 <feof@plt+0x17054>
  41825c:	cmp	w21, #0x1
  418260:	str	x0, [x20, #8]
  418264:	b.lt	41829c <feof@plt+0x1559c>  // b.tstop
  418268:	ldr	w8, [x19]
  41826c:	cmp	w21, #0x1
  418270:	str	w8, [x0]
  418274:	b.eq	41829c <feof@plt+0x1559c>  // b.none
  418278:	mov	w8, w21
  41827c:	mov	w9, #0x1                   	// #1
  418280:	lsl	x11, x9, #2
  418284:	ldr	x10, [x20, #8]
  418288:	ldr	w12, [x19, x11]
  41828c:	add	x9, x9, #0x1
  418290:	cmp	x8, x9
  418294:	str	w12, [x10, x11]
  418298:	b.ne	418280 <feof@plt+0x15580>  // b.any
  41829c:	ldp	x20, x19, [sp, #32]
  4182a0:	ldr	x21, [sp, #16]
  4182a4:	ldp	x29, x30, [sp], #48
  4182a8:	ret
  4182ac:	stp	x29, x30, [sp, #-32]!
  4182b0:	str	x19, [sp, #16]
  4182b4:	mov	x29, sp
  4182b8:	mov	x19, x0
  4182bc:	mov	w0, #0x40                  	// #64
  4182c0:	mov	w1, wzr
  4182c4:	bl	41934c <feof@plt+0x1664c>
  4182c8:	str	x0, [x19]
  4182cc:	ldr	x19, [sp, #16]
  4182d0:	ldp	x29, x30, [sp], #32
  4182d4:	ret
  4182d8:	stp	x29, x30, [sp, #-64]!
  4182dc:	str	x23, [sp, #16]
  4182e0:	stp	x22, x21, [sp, #32]
  4182e4:	stp	x20, x19, [sp, #48]
  4182e8:	mov	x29, sp
  4182ec:	cmp	w1, #0x1
  4182f0:	b.le	4183dc <feof@plt+0x156dc>
  4182f4:	mov	x19, x2
  4182f8:	cbz	x2, 4183f4 <feof@plt+0x156f4>
  4182fc:	adrp	x22, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418300:	mov	w21, w1
  418304:	mov	x20, x0
  418308:	ldr	w1, [x19]
  41830c:	ldr	x0, [x22, #2296]
  418310:	mov	w2, #0x1                   	// #1
  418314:	mov	x3, xzr
  418318:	bl	42f174 <feof@plt+0x2c474>
  41831c:	ldr	x8, [x22, #2296]
  418320:	mov	w1, w0
  418324:	mov	x0, x8
  418328:	bl	42e2f8 <feof@plt+0x2b5f8>
  41832c:	adrp	x1, 419000 <feof@plt+0x16300>
  418330:	str	w0, [x29, #28]
  418334:	add	x1, x1, #0x550
  418338:	mov	w0, #0x10                  	// #16
  41833c:	mov	w3, #0x1                   	// #1
  418340:	mov	x2, xzr
  418344:	bl	419d54 <feof@plt+0x17054>
  418348:	mov	w23, w21
  41834c:	adrp	x1, 419000 <feof@plt+0x16300>
  418350:	mov	x22, x0
  418354:	str	w21, [x0]
  418358:	lsl	x0, x23, #2
  41835c:	add	x1, x1, #0x520
  418360:	mov	w2, #0x4                   	// #4
  418364:	mov	x3, x23
  418368:	bl	419d54 <feof@plt+0x17054>
  41836c:	str	x0, [x22, #8]
  418370:	ldr	x8, [x19]
  418374:	cmp	w21, #0x2
  418378:	str	x8, [x0]
  41837c:	b.eq	4183a0 <feof@plt+0x156a0>  // b.none
  418380:	mov	w8, #0x2                   	// #2
  418384:	lsl	x10, x8, #2
  418388:	ldr	x9, [x22, #8]
  41838c:	ldr	w11, [x19, x10]
  418390:	add	x8, x8, #0x1
  418394:	cmp	x23, x8
  418398:	str	w11, [x9, x10]
  41839c:	b.ne	418384 <feof@plt+0x15684>  // b.any
  4183a0:	ldr	w2, [x29, #28]
  4183a4:	ldr	x0, [x20]
  4183a8:	add	x1, x29, #0x1c
  4183ac:	mov	w3, #0x1                   	// #1
  4183b0:	bl	419554 <feof@plt+0x16854>
  4183b4:	ldr	w8, [x0]
  4183b8:	cbnz	w8, 4183c4 <feof@plt+0x156c4>
  4183bc:	ldr	w8, [x29, #28]
  4183c0:	str	w8, [x0]
  4183c4:	str	x22, [x0, #8]
  4183c8:	ldp	x20, x19, [sp, #48]
  4183cc:	ldp	x22, x21, [sp, #32]
  4183d0:	ldr	x23, [sp, #16]
  4183d4:	ldp	x29, x30, [sp], #64
  4183d8:	ret
  4183dc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4183e0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4183e4:	add	x0, x0, #0x930
  4183e8:	add	x2, x2, #0xf3b
  4183ec:	mov	w1, #0x4f6                 	// #1270
  4183f0:	bl	408b70 <feof@plt+0x5e70>
  4183f4:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4183f8:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4183fc:	add	x0, x0, #0x930
  418400:	add	x2, x2, #0xf3b
  418404:	mov	w1, #0x4f7                 	// #1271
  418408:	bl	408b70 <feof@plt+0x5e70>
  41840c:	stp	x29, x30, [sp, #-32]!
  418410:	str	x19, [sp, #16]
  418414:	mov	x29, sp
  418418:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  41841c:	ldr	x8, [x19, #2296]
  418420:	mov	w1, w0
  418424:	mov	w2, #0x1                   	// #1
  418428:	mov	x3, xzr
  41842c:	mov	x0, x8
  418430:	bl	42f174 <feof@plt+0x2c474>
  418434:	ldr	x8, [x19, #2296]
  418438:	mov	w1, w0
  41843c:	mov	x0, x8
  418440:	bl	42e2f8 <feof@plt+0x2b5f8>
  418444:	ldr	x19, [sp, #16]
  418448:	ldp	x29, x30, [sp], #32
  41844c:	ret
  418450:	sub	sp, sp, #0x40
  418454:	stp	x29, x30, [sp, #16]
  418458:	stp	x22, x21, [sp, #32]
  41845c:	stp	x20, x19, [sp, #48]
  418460:	add	x29, sp, #0x10
  418464:	cbz	x2, 4184e0 <feof@plt+0x157e0>
  418468:	mov	x19, x3
  41846c:	cbz	x3, 4184f8 <feof@plt+0x157f8>
  418470:	adrp	x22, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418474:	mov	x21, x0
  418478:	ldr	x0, [x22, #2296]
  41847c:	mov	x20, x2
  418480:	mov	w2, #0x1                   	// #1
  418484:	mov	x3, xzr
  418488:	bl	42f174 <feof@plt+0x2c474>
  41848c:	ldr	x8, [x22, #2296]
  418490:	mov	w1, w0
  418494:	mov	x0, x8
  418498:	bl	42e2f8 <feof@plt+0x2b5f8>
  41849c:	stur	w0, [x29, #-4]
  4184a0:	ldr	x0, [x21]
  4184a4:	sub	x1, x29, #0x4
  4184a8:	bl	419448 <feof@plt+0x16748>
  4184ac:	cbz	x0, 4184cc <feof@plt+0x157cc>
  4184b0:	ldr	x8, [x0]
  4184b4:	ldr	w8, [x8]
  4184b8:	str	w8, [x20]
  4184bc:	ldr	x8, [x0]
  4184c0:	mov	w0, #0x1                   	// #1
  4184c4:	ldr	x8, [x8, #8]
  4184c8:	str	x8, [x19]
  4184cc:	ldp	x20, x19, [sp, #48]
  4184d0:	ldp	x22, x21, [sp, #32]
  4184d4:	ldp	x29, x30, [sp, #16]
  4184d8:	add	sp, sp, #0x40
  4184dc:	ret
  4184e0:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4184e4:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4184e8:	add	x0, x0, #0x930
  4184ec:	add	x2, x2, #0xf57
  4184f0:	mov	w1, #0x50d                 	// #1293
  4184f4:	bl	408b70 <feof@plt+0x5e70>
  4184f8:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4184fc:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418500:	add	x0, x0, #0x930
  418504:	add	x2, x2, #0xf57
  418508:	mov	w1, #0x50e                 	// #1294
  41850c:	bl	408b70 <feof@plt+0x5e70>
  418510:	sub	sp, sp, #0x140
  418514:	stp	x29, x30, [sp, #224]
  418518:	stp	x28, x27, [sp, #240]
  41851c:	stp	x26, x25, [sp, #256]
  418520:	stp	x24, x23, [sp, #272]
  418524:	stp	x22, x21, [sp, #288]
  418528:	stp	x20, x19, [sp, #304]
  41852c:	add	x29, sp, #0xe0
  418530:	cbz	x7, 418c20 <feof@plt+0x15f20>
  418534:	mov	x24, x0
  418538:	add	x0, sp, #0x60
  41853c:	mov	x22, x7
  418540:	mov	w23, w6
  418544:	mov	w25, w5
  418548:	mov	w26, w4
  41854c:	mov	w28, w3
  418550:	mov	w21, w2
  418554:	mov	x20, x1
  418558:	bl	41ac40 <feof@plt+0x17f40>
  41855c:	stur	w21, [x29, #-12]
  418560:	cbz	x24, 418c38 <feof@plt+0x15f38>
  418564:	cbz	w21, 418598 <feof@plt+0x15898>
  418568:	mov	x0, x24
  41856c:	bl	420538 <feof@plt+0x1d838>
  418570:	ldrb	w8, [x0, #45]
  418574:	cmp	w8, #0x2
  418578:	b.ne	4185a4 <feof@plt+0x158a4>  // b.any
  41857c:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418580:	ldr	x0, [x19, #2296]
  418584:	ldrb	w8, [x0, #116]
  418588:	cbz	w8, 4185d8 <feof@plt+0x158d8>
  41858c:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418590:	add	x25, x25, #0x80
  418594:	b	4185ac <feof@plt+0x158ac>
  418598:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41859c:	add	x25, x25, #0x54
  4185a0:	b	4185ac <feof@plt+0x158ac>
  4185a4:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4185a8:	add	x25, x25, #0x65
  4185ac:	add	x0, sp, #0x60
  4185b0:	bl	41ac78 <feof@plt+0x17f78>
  4185b4:	mov	x0, x25
  4185b8:	ldp	x20, x19, [sp, #304]
  4185bc:	ldp	x22, x21, [sp, #288]
  4185c0:	ldp	x24, x23, [sp, #272]
  4185c4:	ldp	x26, x25, [sp, #256]
  4185c8:	ldp	x28, x27, [sp, #240]
  4185cc:	ldp	x29, x30, [sp, #224]
  4185d0:	add	sp, sp, #0x140
  4185d4:	ret
  4185d8:	str	x22, [sp, #24]
  4185dc:	stp	w23, w25, [sp, #36]
  4185e0:	str	w26, [sp, #44]
  4185e4:	cbz	x20, 418634 <feof@plt+0x15934>
  4185e8:	mov	w2, #0x1                   	// #1
  4185ec:	mov	w1, w21
  4185f0:	mov	x3, xzr
  4185f4:	bl	42f174 <feof@plt+0x2c474>
  4185f8:	ldr	x8, [x19, #2296]
  4185fc:	mov	w1, w0
  418600:	mov	x0, x8
  418604:	bl	42e2f8 <feof@plt+0x2b5f8>
  418608:	stur	w0, [x29, #-48]
  41860c:	ldr	x0, [x20]
  418610:	sub	x1, x29, #0x30
  418614:	bl	419448 <feof@plt+0x16748>
  418618:	cbz	x0, 418634 <feof@plt+0x15934>
  41861c:	ldr	x8, [x0]
  418620:	ldr	w19, [x8]
  418624:	cbz	w19, 418a48 <feof@plt+0x15d48>
  418628:	ldr	x8, [x8, #8]
  41862c:	str	x8, [sp, #72]
  418630:	b	418640 <feof@plt+0x15940>
  418634:	sub	x8, x29, #0xc
  418638:	str	x8, [sp, #72]
  41863c:	mov	w19, #0x1                   	// #1
  418640:	sxtw	x22, w19
  418644:	mov	w20, #0x8                   	// #8
  418648:	bfi	x20, x22, #4, #32
  41864c:	mov	x0, xzr
  418650:	mov	x1, x20
  418654:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  418658:	and	w21, w19, #0x7fffffff
  41865c:	mov	x27, x0
  418660:	stp	w21, wzr, [x0]
  418664:	mov	x0, xzr
  418668:	mov	x1, x20
  41866c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  418670:	mov	x23, x0
  418674:	cmp	w19, #0x1
  418678:	stp	w21, wzr, [x0]
  41867c:	b.lt	418a54 <feof@plt+0x15d54>  // b.tstop
  418680:	str	w28, [sp, #20]
  418684:	mov	x26, xzr
  418688:	and	x8, x22, #0xffffffff
  41868c:	mov	x28, x27
  418690:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418694:	str	x22, [sp, #8]
  418698:	str	x8, [sp, #48]
  41869c:	b	4186c4 <feof@plt+0x159c4>
  4186a0:	ldr	x26, [sp, #88]
  4186a4:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4186a8:	add	x25, x25, #0x196
  4186ac:	tbz	w8, #0, 418a88 <feof@plt+0x15d88>
  4186b0:	ldr	x8, [sp, #48]
  4186b4:	add	x26, x26, #0x1
  4186b8:	mov	x28, x27
  4186bc:	cmp	x26, x8
  4186c0:	b.eq	418be4 <feof@plt+0x15ee4>  // b.none
  4186c4:	ldr	x8, [sp, #72]
  4186c8:	ldr	x0, [x19, #2296]
  4186cc:	ldr	w1, [x8, x26, lsl #2]
  4186d0:	bl	42e2f8 <feof@plt+0x2b5f8>
  4186d4:	ldr	x8, [x19, #2296]
  4186d8:	mov	x21, x0
  4186dc:	lsr	x20, x0, #32
  4186e0:	ldr	w9, [x8, #36]
  4186e4:	cbz	w9, 418718 <feof@plt+0x15a18>
  4186e8:	ldr	x8, [x8, #24]
  4186ec:	sub	w9, w9, #0x1
  4186f0:	sbfiz	x9, x9, #5, #32
  4186f4:	ldr	w8, [x8, x9]
  4186f8:	cmp	w8, w21
  4186fc:	b.ls	418724 <feof@plt+0x15a24>  // b.plast
  418700:	mov	w8, #0x5fffffff            	// #1610612735
  418704:	cmp	w21, w8
  418708:	b.hi	418bfc <feof@plt+0x15efc>  // b.pmore
  41870c:	cmp	w20, w8
  418710:	b.ls	41872c <feof@plt+0x15a2c>  // b.plast
  418714:	b	418c14 <feof@plt+0x15f14>
  418718:	mov	w8, #0x80000000            	// #-2147483648
  41871c:	cmp	w8, w21
  418720:	b.hi	418700 <feof@plt+0x15a00>  // b.pmore
  418724:	cmp	w21, w20
  418728:	b.ne	418c08 <feof@plt+0x15f08>  // b.any
  41872c:	sub	x8, x29, #0x30
  418730:	mov	w2, #0x1                   	// #1
  418734:	mov	w0, w21
  418738:	mov	w1, wzr
  41873c:	bl	4171bc <feof@plt+0x144bc>
  418740:	sub	x8, x29, #0x50
  418744:	mov	w2, #0x2                   	// #2
  418748:	mov	w0, w20
  41874c:	mov	w1, wzr
  418750:	bl	4171bc <feof@plt+0x144bc>
  418754:	ldur	x0, [x29, #-48]
  418758:	ldur	x8, [x29, #-80]
  41875c:	cmp	x0, x8
  418760:	b.ne	418ba8 <feof@plt+0x15ea8>  // b.any
  418764:	ldur	w1, [x29, #-40]
  418768:	ldur	w8, [x29, #-72]
  41876c:	cmp	w1, w8
  418770:	b.ne	418bb4 <feof@plt+0x15eb4>  // b.any
  418774:	ldur	w8, [x29, #-36]
  418778:	ldur	w9, [x29, #-68]
  41877c:	cmp	w8, w9
  418780:	b.gt	418bc0 <feof@plt+0x15ec0>
  418784:	bl	416df0 <feof@plt+0x140f0>
  418788:	cbz	x0, 418bcc <feof@plt+0x15ecc>
  41878c:	ldur	w9, [x29, #-68]
  418790:	ldursw	x11, [x29, #-36]
  418794:	sub	w10, w9, w11
  418798:	add	w22, w10, #0x1
  41879c:	sub	x8, x11, #0x1
  4187a0:	add	x12, x8, w22, sxtw
  4187a4:	cmp	x1, x12
  4187a8:	b.cc	418bd8 <feof@plt+0x15ed8>  // b.lo, b.ul, b.last
  4187ac:	cmp	w11, #0x0
  4187b0:	b.le	418c50 <feof@plt+0x15f50>
  4187b4:	cmp	w11, w1
  4187b8:	b.gt	418c68 <feof@plt+0x15f68>
  4187bc:	cmn	w10, #0x2
  4187c0:	b.le	418c80 <feof@plt+0x15f80>
  4187c4:	cmp	w9, w1
  4187c8:	b.gt	418c98 <feof@plt+0x15f98>
  4187cc:	add	x0, x0, w8, uxtw
  4187d0:	mov	w1, w22
  4187d4:	str	x26, [sp, #88]
  4187d8:	bl	4554f8 <_obstack_memory_used@@Base+0x2d0>
  4187dc:	str	x20, [sp, #80]
  4187e0:	cbz	x28, 418820 <feof@plt+0x15b20>
  4187e4:	ldp	w8, w9, [x28]
  4187e8:	and	w26, w8, #0x7fffffff
  4187ec:	cmp	w26, w9
  4187f0:	b.ne	41883c <feof@plt+0x15b3c>  // b.any
  4187f4:	add	w1, w26, #0x1
  4187f8:	stp	x0, x23, [sp, #56]
  4187fc:	tbnz	w8, #31, 418844 <feof@plt+0x15b44>
  418800:	mov	w0, w26
  418804:	bl	415344 <feof@plt+0x12644>
  418808:	ldr	w19, [x28, #4]
  41880c:	mov	w23, w0
  418810:	mov	w26, wzr
  418814:	mov	w20, wzr
  418818:	mov	x0, x28
  41881c:	b	41885c <feof@plt+0x15b5c>
  418820:	stp	x0, x23, [sp, #56]
  418824:	mov	w26, wzr
  418828:	mov	w20, wzr
  41882c:	mov	x0, xzr
  418830:	mov	w19, wzr
  418834:	mov	w23, #0x4                   	// #4
  418838:	b	41885c <feof@plt+0x15b5c>
  41883c:	mov	x27, x28
  418840:	b	4188a8 <feof@plt+0x15ba8>
  418844:	cmp	w26, #0x4
  418848:	mov	w8, #0x4                   	// #4
  41884c:	mov	x0, xzr
  418850:	mov	w19, wzr
  418854:	csel	w23, w8, w1, cc  // cc = lo, ul, last
  418858:	mov	w20, #0x1                   	// #1
  41885c:	mov	w8, w23
  418860:	mov	w1, #0x8                   	// #8
  418864:	bfi	x1, x8, #4, #32
  418868:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41886c:	and	w8, w23, #0x7fffffff
  418870:	stp	w8, w19, [x0]
  418874:	mov	x27, x0
  418878:	ldp	x0, x23, [sp, #56]
  41887c:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418880:	cbz	w20, 4188a8 <feof@plt+0x15ba8>
  418884:	cbz	w26, 4188a4 <feof@plt+0x15ba4>
  418888:	add	x8, x28, #0x8
  41888c:	add	x9, x27, #0x8
  418890:	mov	w10, w26
  418894:	ldr	q0, [x8], #16
  418898:	subs	w10, w10, #0x1
  41889c:	str	q0, [x9], #16
  4188a0:	b.ne	418894 <feof@plt+0x15b94>  // b.any
  4188a4:	str	w26, [x27, #4]
  4188a8:	ldr	w8, [x27, #4]
  4188ac:	sub	x3, x29, #0x58
  4188b0:	mov	w2, #0x1                   	// #1
  4188b4:	mov	w1, w21
  4188b8:	add	w9, w8, #0x1
  4188bc:	add	x8, x27, x8, lsl #4
  4188c0:	str	w9, [x27, #4]
  4188c4:	str	w22, [x8, #8]
  4188c8:	str	x0, [x8, #16]
  4188cc:	ldr	x0, [x19, #2296]
  4188d0:	bl	42f174 <feof@plt+0x2c474>
  4188d4:	ldr	x0, [x19, #2296]
  4188d8:	sub	x3, x29, #0x60
  4188dc:	mov	w2, #0x1                   	// #1
  4188e0:	ldr	x1, [sp, #80]
  4188e4:	bl	42f174 <feof@plt+0x2c474>
  4188e8:	ldur	x9, [x29, #-88]
  4188ec:	mov	w8, wzr
  4188f0:	cbz	x9, 4186a0 <feof@plt+0x159a0>
  4188f4:	ldur	x1, [x29, #-96]
  4188f8:	ldr	x26, [sp, #88]
  4188fc:	cbz	x1, 4186a4 <feof@plt+0x159a4>
  418900:	ldr	x8, [x9, #8]
  418904:	cmp	x9, x1
  418908:	b.eq	41892c <feof@plt+0x15c2c>  // b.none
  41890c:	ldr	x9, [x1, #8]
  418910:	cmp	x8, x9
  418914:	b.eq	41892c <feof@plt+0x15c2c>  // b.none
  418918:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41891c:	add	x25, x25, #0x1b2
  418920:	mov	w8, wzr
  418924:	tbnz	wzr, #0, 4186b0 <feof@plt+0x159b0>
  418928:	b	418a88 <feof@plt+0x15d88>
  41892c:	ldur	x9, [x29, #-48]
  418930:	cmp	x8, x9
  418934:	b.eq	41894c <feof@plt+0x15c4c>  // b.none
  418938:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41893c:	add	x25, x25, #0x1ea
  418940:	mov	w8, wzr
  418944:	tbnz	wzr, #0, 4186b0 <feof@plt+0x159b0>
  418948:	b	418a88 <feof@plt+0x15d88>
  41894c:	ldr	x0, [x19, #2296]
  418950:	ldp	w2, w3, [x29, #-40]
  418954:	bl	42ee9c <feof@plt+0x2c19c>
  418958:	ldr	x2, [x19, #2296]
  41895c:	mov	w1, w0
  418960:	add	x0, sp, #0x70
  418964:	bl	41c8dc <feof@plt+0x19bdc>
  418968:	cbz	x23, 4189a4 <feof@plt+0x15ca4>
  41896c:	ldp	w8, w9, [x23]
  418970:	and	w20, w8, #0x7fffffff
  418974:	cmp	w20, w9
  418978:	b.ne	4189bc <feof@plt+0x15cbc>  // b.any
  41897c:	add	w1, w20, #0x1
  418980:	tbnz	w8, #31, 4189c4 <feof@plt+0x15cc4>
  418984:	mov	w0, w20
  418988:	bl	415344 <feof@plt+0x12644>
  41898c:	ldr	w22, [x23, #4]
  418990:	mov	w21, w0
  418994:	mov	w20, wzr
  418998:	mov	w19, wzr
  41899c:	mov	x0, x23
  4189a0:	b	4189dc <feof@plt+0x15cdc>
  4189a4:	mov	w20, wzr
  4189a8:	mov	w19, wzr
  4189ac:	mov	x0, xzr
  4189b0:	mov	w22, wzr
  4189b4:	mov	w21, #0x4                   	// #4
  4189b8:	b	4189dc <feof@plt+0x15cdc>
  4189bc:	mov	x0, x23
  4189c0:	b	418a1c <feof@plt+0x15d1c>
  4189c4:	cmp	w20, #0x4
  4189c8:	mov	w8, #0x4                   	// #4
  4189cc:	mov	x0, xzr
  4189d0:	mov	w22, wzr
  4189d4:	csel	w21, w8, w1, cc  // cc = lo, ul, last
  4189d8:	mov	w19, #0x1                   	// #1
  4189dc:	mov	w8, w21
  4189e0:	mov	w1, #0x8                   	// #8
  4189e4:	bfi	x1, x8, #4, #32
  4189e8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4189ec:	and	w8, w21, #0x7fffffff
  4189f0:	stp	w8, w22, [x0]
  4189f4:	cbz	w19, 418a1c <feof@plt+0x15d1c>
  4189f8:	cbz	w20, 418a18 <feof@plt+0x15d18>
  4189fc:	add	x8, x23, #0x8
  418a00:	add	x9, x0, #0x8
  418a04:	mov	w10, w20
  418a08:	ldr	q0, [x8], #16
  418a0c:	subs	w10, w10, #0x1
  418a10:	str	q0, [x9], #16
  418a14:	b.ne	418a08 <feof@plt+0x15d08>  // b.any
  418a18:	str	w20, [x0, #4]
  418a1c:	ldr	w8, [x0, #4]
  418a20:	mov	x23, x0
  418a24:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418a28:	add	w9, w8, #0x1
  418a2c:	str	w9, [x0, #4]
  418a30:	ldr	q0, [sp, #112]
  418a34:	add	x8, x0, x8, lsl #4
  418a38:	stur	q0, [x8, #8]
  418a3c:	mov	w8, #0x1                   	// #1
  418a40:	tbnz	w8, #0, 4186b0 <feof@plt+0x159b0>
  418a44:	b	418a88 <feof@plt+0x15d88>
  418a48:	mov	x22, xzr
  418a4c:	mov	x23, xzr
  418a50:	mov	x27, xzr
  418a54:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418a58:	add	x8, x27, #0x8
  418a5c:	cmp	x27, #0x0
  418a60:	add	x9, x23, #0x8
  418a64:	csel	x1, xzr, x8, eq  // eq = none
  418a68:	cmp	x23, #0x0
  418a6c:	csel	x2, xzr, x9, eq  // eq = none
  418a70:	add	x4, sp, #0x60
  418a74:	mov	x0, x24
  418a78:	mov	x3, x22
  418a7c:	mov	w5, w28
  418a80:	bl	41c028 <feof@plt+0x19328>
  418a84:	mov	x25, x0
  418a88:	mov	x28, x27
  418a8c:	cbz	x23, 418aa0 <feof@plt+0x15da0>
  418a90:	ldr	w8, [x23]
  418a94:	tbnz	w8, #31, 418ae0 <feof@plt+0x15de0>
  418a98:	mov	x0, x23
  418a9c:	bl	402770 <free@plt>
  418aa0:	cbz	x28, 418af4 <feof@plt+0x15df4>
  418aa4:	ldr	w8, [x28, #4]
  418aa8:	cbz	w8, 418acc <feof@plt+0x15dcc>
  418aac:	mov	x19, xzr
  418ab0:	add	x20, x28, #0x10
  418ab4:	ldr	x0, [x20], #16
  418ab8:	bl	402770 <free@plt>
  418abc:	ldr	w8, [x28, #4]
  418ac0:	add	x19, x19, #0x1
  418ac4:	cmp	x19, x8
  418ac8:	b.cc	418ab4 <feof@plt+0x15db4>  // b.lo, b.ul, b.last
  418acc:	ldr	w8, [x28]
  418ad0:	tbnz	w8, #31, 418aec <feof@plt+0x15dec>
  418ad4:	mov	x0, x28
  418ad8:	bl	402770 <free@plt>
  418adc:	b	418af0 <feof@plt+0x15df0>
  418ae0:	str	wzr, [x23, #4]
  418ae4:	cbnz	x28, 418aa4 <feof@plt+0x15da4>
  418ae8:	b	418af4 <feof@plt+0x15df4>
  418aec:	str	wzr, [x28, #4]
  418af0:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418af4:	cbnz	x25, 4185ac <feof@plt+0x158ac>
  418af8:	ldr	w8, [sp, #104]
  418afc:	ldr	w11, [sp, #44]
  418b00:	cmp	w8, w11
  418b04:	b.le	418b90 <feof@plt+0x15e90>
  418b08:	ldr	w10, [sp, #40]
  418b0c:	cmp	w8, w10
  418b10:	b.le	418b9c <feof@plt+0x15e9c>
  418b14:	ldr	w9, [sp, #36]
  418b18:	cmp	w8, w9
  418b1c:	b.le	418bf0 <feof@plt+0x15ef0>
  418b20:	ldr	x8, [sp, #96]
  418b24:	ldr	x0, [x19, #2296]
  418b28:	ldr	x1, [x8, w11, sxtw #3]
  418b2c:	ldr	x20, [x8, w10, sxtw #3]
  418b30:	add	x8, x8, w9, sxtw #3
  418b34:	ldr	w21, [x8, #4]
  418b38:	bl	42e3f0 <feof@plt+0x2b6f0>
  418b3c:	ldr	x8, [x19, #2296]
  418b40:	mov	w22, w0
  418b44:	mov	w1, w20
  418b48:	mov	x0, x8
  418b4c:	bl	42e2f8 <feof@plt+0x2b5f8>
  418b50:	ldr	x8, [x19, #2296]
  418b54:	mov	x20, x0
  418b58:	mov	w1, w21
  418b5c:	mov	x0, x8
  418b60:	bl	42e2f8 <feof@plt+0x2b5f8>
  418b64:	ldr	x8, [x19, #2296]
  418b68:	mov	x2, x0
  418b6c:	bfxil	x2, x20, #0, #32
  418b70:	mov	w1, w22
  418b74:	mov	x0, x8
  418b78:	mov	x3, xzr
  418b7c:	bl	42deec <feof@plt+0x2b1ec>
  418b80:	ldr	x8, [sp, #24]
  418b84:	mov	x25, xzr
  418b88:	str	w0, [x8]
  418b8c:	b	4185ac <feof@plt+0x158ac>
  418b90:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418b94:	add	x25, x25, #0xf8b
  418b98:	b	4185ac <feof@plt+0x158ac>
  418b9c:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418ba0:	add	x25, x25, #0xfa2
  418ba4:	b	4185ac <feof@plt+0x158ac>
  418ba8:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418bac:	add	x25, x25, #0xf8
  418bb0:	b	418a8c <feof@plt+0x15d8c>
  418bb4:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418bb8:	add	x25, x25, #0x11f
  418bbc:	b	418a8c <feof@plt+0x15d8c>
  418bc0:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418bc4:	add	x25, x25, #0x146
  418bc8:	b	418a8c <feof@plt+0x15d8c>
  418bcc:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418bd0:	add	x25, x25, #0x163
  418bd4:	b	418a8c <feof@plt+0x15d8c>
  418bd8:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418bdc:	add	x25, x25, #0x17e
  418be0:	b	418a8c <feof@plt+0x15d8c>
  418be4:	ldr	w28, [sp, #20]
  418be8:	ldr	x22, [sp, #8]
  418bec:	b	418a58 <feof@plt+0x15d58>
  418bf0:	adrp	x25, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418bf4:	add	x25, x25, #0xfb9
  418bf8:	b	4185ac <feof@plt+0x158ac>
  418bfc:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418c00:	add	x25, x25, #0x94
  418c04:	b	418a8c <feof@plt+0x15d8c>
  418c08:	adrp	x25, 463000 <_obstack_memory_used@@Base+0xddd8>
  418c0c:	add	x25, x25, #0xc61
  418c10:	b	418a8c <feof@plt+0x15d8c>
  418c14:	adrp	x25, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418c18:	add	x25, x25, #0xc7
  418c1c:	b	418a8c <feof@plt+0x15d8c>
  418c20:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c24:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c28:	add	x0, x0, #0x930
  418c2c:	add	x2, x2, #0xf70
  418c30:	mov	w1, #0x5fa                 	// #1530
  418c34:	bl	408b70 <feof@plt+0x5e70>
  418c38:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c3c:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  418c40:	add	x0, x0, #0x930
  418c44:	add	x2, x2, #0x37
  418c48:	mov	w1, #0x551                 	// #1361
  418c4c:	bl	408b70 <feof@plt+0x5e70>
  418c50:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c54:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c58:	add	x0, x0, #0x501
  418c5c:	add	x2, x2, #0x513
  418c60:	mov	w1, #0x44                  	// #68
  418c64:	bl	408b70 <feof@plt+0x5e70>
  418c68:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c6c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c70:	add	x0, x0, #0x501
  418c74:	add	x2, x2, #0x513
  418c78:	mov	w1, #0x45                  	// #69
  418c7c:	bl	408b70 <feof@plt+0x5e70>
  418c80:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c84:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c88:	add	x0, x0, #0x501
  418c8c:	add	x2, x2, #0x513
  418c90:	mov	w1, #0x46                  	// #70
  418c94:	bl	408b70 <feof@plt+0x5e70>
  418c98:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418c9c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  418ca0:	add	x0, x0, #0x501
  418ca4:	add	x2, x2, #0x513
  418ca8:	mov	w1, #0x47                  	// #71
  418cac:	bl	408b70 <feof@plt+0x5e70>
  418cb0:	stp	x29, x30, [sp, #-32]!
  418cb4:	str	x19, [sp, #16]
  418cb8:	mov	x29, sp
  418cbc:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  418cc0:	ldr	x8, [x19, #2312]
  418cc4:	cbnz	x8, 418e5c <feof@plt+0x1615c>
  418cc8:	mov	w0, #0x588                 	// #1416
  418ccc:	bl	4025f0 <_Znam@plt>
  418cd0:	mov	w10, #0x10                  	// #16
  418cd4:	mov	x8, x0
  418cd8:	movi	v0.2d, #0x0
  418cdc:	mov	w9, #0x1                   	// #1
  418ce0:	str	x10, [x0]
  418ce4:	add	x10, x0, #0x118
  418ce8:	str	wzr, [x8, #8]!
  418cec:	stp	q0, q0, [x0, #16]
  418cf0:	stp	q0, q0, [x0, #48]
  418cf4:	strb	w9, [x0, #80]
  418cf8:	str	xzr, [x0, #88]
  418cfc:	str	wzr, [x0, #96]
  418d00:	stur	q0, [x0, #104]
  418d04:	stur	q0, [x0, #120]
  418d08:	stur	q0, [x0, #136]
  418d0c:	stur	q0, [x0, #152]
  418d10:	strb	w9, [x0, #168]
  418d14:	str	xzr, [x0, #176]
  418d18:	str	wzr, [x0, #184]
  418d1c:	stp	q0, q0, [x0, #192]
  418d20:	stp	q0, q0, [x0, #224]
  418d24:	strb	w9, [x0, #256]
  418d28:	str	xzr, [x0, #264]
  418d2c:	str	wzr, [x0, #272]
  418d30:	stp	q0, q0, [x10]
  418d34:	stp	q0, q0, [x10, #32]
  418d38:	add	x10, x0, #0x1c8
  418d3c:	strb	w9, [x0, #344]
  418d40:	str	xzr, [x0, #352]
  418d44:	str	wzr, [x0, #360]
  418d48:	stp	q0, q0, [x0, #368]
  418d4c:	stp	q0, q0, [x0, #400]
  418d50:	strb	w9, [x0, #432]
  418d54:	str	xzr, [x0, #440]
  418d58:	str	wzr, [x0, #448]
  418d5c:	stp	q0, q0, [x10]
  418d60:	stp	q0, q0, [x10, #32]
  418d64:	add	x10, x0, #0x278
  418d68:	strb	w9, [x0, #520]
  418d6c:	str	xzr, [x0, #528]
  418d70:	str	wzr, [x0, #536]
  418d74:	stp	q0, q0, [x0, #544]
  418d78:	stp	q0, q0, [x0, #576]
  418d7c:	strb	w9, [x0, #608]
  418d80:	str	xzr, [x0, #616]
  418d84:	str	wzr, [x0, #624]
  418d88:	stp	q0, q0, [x10]
  418d8c:	stp	q0, q0, [x10, #32]
  418d90:	add	x10, x0, #0x328
  418d94:	strb	w9, [x0, #696]
  418d98:	str	xzr, [x0, #704]
  418d9c:	str	wzr, [x0, #712]
  418da0:	stp	q0, q0, [x0, #720]
  418da4:	stp	q0, q0, [x0, #752]
  418da8:	strb	w9, [x0, #784]
  418dac:	str	xzr, [x0, #792]
  418db0:	str	wzr, [x0, #800]
  418db4:	stp	q0, q0, [x10, #32]
  418db8:	stp	q0, q0, [x10]
  418dbc:	add	x10, x0, #0x3d8
  418dc0:	strb	w9, [x0, #872]
  418dc4:	str	xzr, [x0, #880]
  418dc8:	str	wzr, [x0, #888]
  418dcc:	stp	q0, q0, [x0, #928]
  418dd0:	stp	q0, q0, [x0, #896]
  418dd4:	strb	w9, [x0, #960]
  418dd8:	str	xzr, [x0, #968]
  418ddc:	str	wzr, [x0, #976]
  418de0:	stp	q0, q0, [x10, #32]
  418de4:	stp	q0, q0, [x10]
  418de8:	add	x10, x0, #0x488
  418dec:	strb	w9, [x0, #1048]
  418df0:	str	xzr, [x0, #1056]
  418df4:	str	wzr, [x0, #1064]
  418df8:	str	q0, [x0, #1120]
  418dfc:	str	q0, [x0, #1104]
  418e00:	str	q0, [x0, #1088]
  418e04:	str	q0, [x0, #1072]
  418e08:	strb	w9, [x0, #1136]
  418e0c:	str	xzr, [x0, #1144]
  418e10:	str	wzr, [x0, #1152]
  418e14:	stp	q0, q0, [x10, #32]
  418e18:	stp	q0, q0, [x10]
  418e1c:	add	x10, x0, #0x538
  418e20:	strb	w9, [x0, #1224]
  418e24:	str	xzr, [x0, #1232]
  418e28:	str	wzr, [x0, #1240]
  418e2c:	str	q0, [x0, #1296]
  418e30:	str	q0, [x0, #1280]
  418e34:	str	q0, [x0, #1264]
  418e38:	str	q0, [x0, #1248]
  418e3c:	strb	w9, [x0, #1312]
  418e40:	str	xzr, [x0, #1320]
  418e44:	str	wzr, [x0, #1328]
  418e48:	stp	q0, q0, [x10, #32]
  418e4c:	stp	q0, q0, [x10]
  418e50:	strb	w9, [x0, #1400]
  418e54:	str	xzr, [x0, #1408]
  418e58:	str	x8, [x19, #2312]
  418e5c:	ldr	x19, [sp, #16]
  418e60:	ldp	x29, x30, [sp], #32
  418e64:	ret
  418e68:	sub	sp, sp, #0x80
  418e6c:	stp	x29, x30, [sp, #32]
  418e70:	stp	x28, x27, [sp, #48]
  418e74:	stp	x26, x25, [sp, #64]
  418e78:	stp	x24, x23, [sp, #80]
  418e7c:	stp	x22, x21, [sp, #96]
  418e80:	stp	x20, x19, [sp, #112]
  418e84:	add	x29, sp, #0x20
  418e88:	mov	x19, x2
  418e8c:	mov	x23, x1
  418e90:	mov	x20, x0
  418e94:	bl	419268 <feof@plt+0x16568>
  418e98:	ldp	x25, x8, [x20, #40]
  418e9c:	subs	x2, x25, x8
  418ea0:	b.eq	418f0c <feof@plt+0x1620c>  // b.none
  418ea4:	ldr	x9, [x20, #24]
  418ea8:	add	x21, x9, x8
  418eac:	mov	w1, #0xa                   	// #10
  418eb0:	mov	x0, x21
  418eb4:	bl	402920 <memchr@plt>
  418eb8:	cbnz	x0, 418edc <feof@plt+0x161dc>
  418ebc:	mov	x0, x20
  418ec0:	bl	419268 <feof@plt+0x16568>
  418ec4:	ldr	x8, [x20, #24]
  418ec8:	tbz	w0, #0, 418eec <feof@plt+0x161ec>
  418ecc:	ldp	x25, x9, [x20, #40]
  418ed0:	add	x21, x8, x9
  418ed4:	sub	x2, x25, x9
  418ed8:	b	418eac <feof@plt+0x161ac>
  418edc:	mov	x22, x0
  418ee0:	mov	w8, wzr
  418ee4:	add	x24, x0, #0x1
  418ee8:	b	418efc <feof@plt+0x161fc>
  418eec:	ldr	x25, [x20, #40]
  418ef0:	mov	x24, xzr
  418ef4:	add	x22, x8, x25
  418ef8:	mov	w8, #0x1                   	// #1
  418efc:	ldr	x0, [x20, #16]
  418f00:	strb	w8, [x20, #72]
  418f04:	bl	402c40 <ferror@plt>
  418f08:	cbz	w0, 418f14 <feof@plt+0x16214>
  418f0c:	mov	w0, wzr
  418f10:	b	419210 <feof@plt+0x16510>
  418f14:	cbz	x22, 419250 <feof@plt+0x16550>
  418f18:	ldr	x8, [x20, #48]
  418f1c:	cmp	x8, x25
  418f20:	b.cs	418f28 <feof@plt+0x16228>  // b.hs, b.nlast
  418f24:	str	x21, [x23]
  418f28:	ldp	x9, x8, [x20, #56]
  418f2c:	add	x25, x9, #0x1
  418f30:	cmp	x25, x8
  418f34:	str	x25, [x20, #56]
  418f38:	b.hi	419100 <feof@plt+0x16400>  // b.pmore
  418f3c:	ldr	x26, [x20, #80]
  418f40:	cbz	x26, 418f50 <feof@plt+0x16250>
  418f44:	ldr	w9, [x26, #4]
  418f48:	cmp	w9, #0x63
  418f4c:	b.hi	419100 <feof@plt+0x16400>  // b.pmore
  418f50:	cmp	x8, #0x64
  418f54:	b.hi	418f6c <feof@plt+0x1626c>  // b.pmore
  418f58:	cbz	x26, 418fe4 <feof@plt+0x162e4>
  418f5c:	ldr	w8, [x26, #4]
  418f60:	cmp	x25, x8
  418f64:	b.ls	419100 <feof@plt+0x16400>  // b.plast
  418f68:	b	418ff0 <feof@plt+0x162f0>
  418f6c:	cbz	x26, 41904c <feof@plt+0x1634c>
  418f70:	ldr	w0, [x26, #4]
  418f74:	cbz	w0, 418f8c <feof@plt+0x1628c>
  418f78:	mov	w9, #0x64                  	// #100
  418f7c:	mul	x9, x25, x9
  418f80:	udiv	x8, x9, x8
  418f84:	cmp	x8, x0
  418f88:	b.cc	419100 <feof@plt+0x16400>  // b.lo, b.ul, b.last
  418f8c:	ldr	w8, [x26]
  418f90:	ldr	x9, [x20, #24]
  418f94:	ldr	x12, [x20, #48]
  418f98:	and	w10, w8, #0x7fffffff
  418f9c:	cmp	w10, w0
  418fa0:	sub	x13, x22, x9
  418fa4:	b.ne	4190e0 <feof@plt+0x163e0>  // b.any
  418fa8:	stur	x12, [x29, #-8]
  418fac:	str	x13, [sp, #16]
  418fb0:	tbnz	w8, #31, 41912c <feof@plt+0x1642c>
  418fb4:	add	w1, w0, #0x1
  418fb8:	bl	415344 <feof@plt+0x12644>
  418fbc:	mov	w23, w0
  418fc0:	ldr	x0, [x20, #80]
  418fc4:	mov	w8, #0x18                  	// #24
  418fc8:	umull	x8, w23, w8
  418fcc:	add	x1, x8, #0x8
  418fd0:	cbz	x0, 419230 <feof@plt+0x16530>
  418fd4:	ldr	w27, [x0, #4]
  418fd8:	mov	w28, wzr
  418fdc:	str	wzr, [sp, #12]
  418fe0:	b	419080 <feof@plt+0x16380>
  418fe4:	mov	x8, xzr
  418fe8:	cmp	x25, x8
  418fec:	b.ls	419100 <feof@plt+0x16400>  // b.plast
  418ff0:	ldr	x8, [x20, #24]
  418ff4:	ldr	x13, [x20, #48]
  418ff8:	sub	x12, x22, x8
  418ffc:	cbz	x26, 419114 <feof@plt+0x16414>
  419000:	ldp	w8, w9, [x26]
  419004:	and	w0, w8, #0x7fffffff
  419008:	cmp	w0, w9
  41900c:	b.ne	4191d8 <feof@plt+0x164d8>  // b.any
  419010:	stur	x12, [x29, #-8]
  419014:	str	x13, [sp, #16]
  419018:	tbnz	w8, #31, 419150 <feof@plt+0x16450>
  41901c:	add	w1, w0, #0x1
  419020:	bl	415344 <feof@plt+0x12644>
  419024:	mov	w23, w0
  419028:	ldr	x0, [x20, #80]
  41902c:	mov	w8, #0x18                  	// #24
  419030:	umull	x8, w23, w8
  419034:	add	x1, x8, #0x8
  419038:	cbz	x0, 419240 <feof@plt+0x16540>
  41903c:	ldr	w27, [x0, #4]
  419040:	mov	w28, wzr
  419044:	str	wzr, [sp, #12]
  419048:	b	419184 <feof@plt+0x16484>
  41904c:	ldr	x8, [x20, #24]
  419050:	ldr	x9, [x20, #48]
  419054:	str	wzr, [sp, #12]
  419058:	mov	w28, wzr
  41905c:	sub	x8, x22, x8
  419060:	stur	x9, [x29, #-8]
  419064:	str	x8, [sp, #16]
  419068:	mov	w23, #0x4                   	// #4
  41906c:	mov	w8, #0x18                  	// #24
  419070:	umull	x8, w23, w8
  419074:	mov	x0, xzr
  419078:	mov	w27, wzr
  41907c:	add	x1, x8, #0x8
  419080:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  419084:	and	w8, w23, #0x7fffffff
  419088:	str	x0, [x20, #80]
  41908c:	stp	w8, w27, [x0]
  419090:	cbz	w28, 4190d8 <feof@plt+0x163d8>
  419094:	ldr	x9, [x20, #80]
  419098:	ldr	w14, [sp, #12]
  41909c:	cbz	w14, 4190c8 <feof@plt+0x163c8>
  4190a0:	add	x8, x26, #0x8
  4190a4:	add	x9, x9, #0x8
  4190a8:	mov	w10, w14
  4190ac:	ldr	x11, [x8, #16]
  4190b0:	ldr	q0, [x8], #24
  4190b4:	subs	w10, w10, #0x1
  4190b8:	str	x11, [x9, #16]
  4190bc:	str	q0, [x9], #24
  4190c0:	b.ne	4190ac <feof@plt+0x163ac>  // b.any
  4190c4:	ldr	x9, [x20, #80]
  4190c8:	ldur	x12, [x29, #-8]
  4190cc:	ldr	x13, [sp, #16]
  4190d0:	str	w14, [x9, #4]
  4190d4:	b	4190e0 <feof@plt+0x163e0>
  4190d8:	ldur	x12, [x29, #-8]
  4190dc:	ldr	x13, [sp, #16]
  4190e0:	ldr	x8, [x20, #80]
  4190e4:	mov	w10, #0x18                  	// #24
  4190e8:	ldr	w9, [x8, #4]
  4190ec:	add	w11, w9, #0x1
  4190f0:	madd	x9, x9, x10, x8
  4190f4:	str	w11, [x8, #4]
  4190f8:	stp	x25, x12, [x9, #8]
  4190fc:	str	x13, [x9, #24]
  419100:	sub	x8, x22, x21
  419104:	cbz	x24, 419200 <feof@plt+0x16500>
  419108:	ldr	x9, [x20, #24]
  41910c:	sub	x9, x24, x9
  419110:	b	419204 <feof@plt+0x16504>
  419114:	str	x13, [sp, #16]
  419118:	stur	x12, [x29, #-8]
  41911c:	str	wzr, [sp, #12]
  419120:	mov	w28, wzr
  419124:	mov	w23, #0x4                   	// #4
  419128:	b	419170 <feof@plt+0x16470>
  41912c:	str	xzr, [x20, #80]
  419130:	ldr	w10, [x26, #4]
  419134:	mov	w8, #0x4                   	// #4
  419138:	mov	w28, #0x1                   	// #1
  41913c:	add	w9, w10, #0x1
  419140:	cmp	w9, #0x4
  419144:	csinc	w23, w8, w10, ls  // ls = plast
  419148:	str	w10, [sp, #12]
  41914c:	b	41906c <feof@plt+0x1636c>
  419150:	str	xzr, [x20, #80]
  419154:	ldr	w10, [x26, #4]
  419158:	mov	w8, #0x4                   	// #4
  41915c:	mov	w28, #0x1                   	// #1
  419160:	add	w9, w10, #0x1
  419164:	cmp	w9, #0x4
  419168:	csinc	w23, w8, w10, ls  // ls = plast
  41916c:	str	w10, [sp, #12]
  419170:	mov	w8, #0x18                  	// #24
  419174:	umull	x8, w23, w8
  419178:	mov	x0, xzr
  41917c:	mov	w27, wzr
  419180:	add	x1, x8, #0x8
  419184:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  419188:	and	w8, w23, #0x7fffffff
  41918c:	str	x0, [x20, #80]
  419190:	stp	w8, w27, [x0]
  419194:	ldur	x12, [x29, #-8]
  419198:	ldr	x13, [sp, #16]
  41919c:	cbz	w28, 4191d8 <feof@plt+0x164d8>
  4191a0:	ldr	x9, [x20, #80]
  4191a4:	ldr	w14, [sp, #12]
  4191a8:	cbz	w14, 4191d4 <feof@plt+0x164d4>
  4191ac:	add	x8, x26, #0x8
  4191b0:	add	x9, x9, #0x8
  4191b4:	mov	w10, w14
  4191b8:	ldr	x11, [x8, #16]
  4191bc:	ldr	q0, [x8], #24
  4191c0:	subs	w10, w10, #0x1
  4191c4:	str	x11, [x9, #16]
  4191c8:	str	q0, [x9], #24
  4191cc:	b.ne	4191b8 <feof@plt+0x164b8>  // b.any
  4191d0:	ldr	x9, [x20, #80]
  4191d4:	str	w14, [x9, #4]
  4191d8:	ldr	x8, [x20, #80]
  4191dc:	mov	w10, #0x18                  	// #24
  4191e0:	ldr	w9, [x8, #4]
  4191e4:	add	w11, w9, #0x1
  4191e8:	madd	x9, x9, x10, x8
  4191ec:	str	w11, [x8, #4]
  4191f0:	stp	x25, x13, [x9, #8]
  4191f4:	str	x12, [x9, #24]
  4191f8:	sub	x8, x22, x21
  4191fc:	cbnz	x24, 419108 <feof@plt+0x16408>
  419200:	ldr	x9, [x20, #40]
  419204:	mov	w0, #0x1                   	// #1
  419208:	str	x9, [x20, #48]
  41920c:	str	x8, [x19]
  419210:	ldp	x20, x19, [sp, #112]
  419214:	ldp	x22, x21, [sp, #96]
  419218:	ldp	x24, x23, [sp, #80]
  41921c:	ldp	x26, x25, [sp, #64]
  419220:	ldp	x28, x27, [sp, #48]
  419224:	ldp	x29, x30, [sp, #32]
  419228:	add	sp, sp, #0x80
  41922c:	ret
  419230:	str	wzr, [sp, #12]
  419234:	mov	w28, wzr
  419238:	mov	w27, wzr
  41923c:	b	419080 <feof@plt+0x16380>
  419240:	str	wzr, [sp, #12]
  419244:	mov	w28, wzr
  419248:	mov	w27, wzr
  41924c:	b	419184 <feof@plt+0x16484>
  419250:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419254:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419258:	add	x0, x0, #0x930
  41925c:	add	x2, x2, #0xfec
  419260:	mov	w1, #0x241                 	// #577
  419264:	bl	408b70 <feof@plt+0x5e70>
  419268:	stp	x29, x30, [sp, #-48]!
  41926c:	str	x21, [sp, #16]
  419270:	stp	x20, x19, [sp, #32]
  419274:	mov	x29, sp
  419278:	ldr	x8, [x0, #40]
  41927c:	mov	x19, x0
  419280:	cbz	x8, 4192a0 <feof@plt+0x165a0>
  419284:	ldr	x9, [x19, #32]
  419288:	cmp	x8, x9
  41928c:	b.eq	4192a0 <feof@plt+0x165a0>  // b.none
  419290:	ldr	x9, [x19, #48]
  419294:	sub	x8, x8, #0x1
  419298:	cmp	x9, x8
  41929c:	b.cc	419320 <feof@plt+0x16620>  // b.lo, b.ul, b.last
  4192a0:	ldr	x0, [x19, #16]
  4192a4:	bl	402d00 <feof@plt>
  4192a8:	cbnz	w0, 419320 <feof@plt+0x16620>
  4192ac:	ldr	x20, [x19, #16]
  4192b0:	mov	x0, x20
  4192b4:	bl	402c40 <ferror@plt>
  4192b8:	cbnz	w0, 419320 <feof@plt+0x16620>
  4192bc:	ldp	x21, x8, [x19, #32]
  4192c0:	cmp	x8, x21
  4192c4:	b.ne	4192f4 <feof@plt+0x165f4>  // b.any
  4192c8:	ldr	x0, [x19, #24]
  4192cc:	lsl	x9, x8, #1
  4192d0:	cmp	x8, #0x0
  4192d4:	mov	w8, #0x1000                	// #4096
  4192d8:	csel	x21, x8, x9, eq  // eq = none
  4192dc:	mov	x1, x21
  4192e0:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4192e4:	ldr	x8, [x19, #40]
  4192e8:	ldr	x20, [x19, #16]
  4192ec:	stp	x0, x21, [x19, #24]
  4192f0:	b	4192f8 <feof@plt+0x165f8>
  4192f4:	ldr	x0, [x19, #24]
  4192f8:	add	x0, x0, x8
  4192fc:	sub	x2, x21, x8
  419300:	mov	w1, #0x1                   	// #1
  419304:	mov	x3, x20
  419308:	bl	402650 <fread@plt>
  41930c:	ldr	x8, [x19, #16]
  419310:	mov	x20, x0
  419314:	mov	x0, x8
  419318:	bl	402c40 <ferror@plt>
  41931c:	cbz	w0, 419334 <feof@plt+0x16634>
  419320:	mov	w0, wzr
  419324:	ldp	x20, x19, [sp, #32]
  419328:	ldr	x21, [sp, #16]
  41932c:	ldp	x29, x30, [sp], #48
  419330:	ret
  419334:	ldr	x8, [x19, #40]
  419338:	cmp	x20, #0x0
  41933c:	cset	w0, ne  // ne = any
  419340:	add	x8, x8, x20
  419344:	str	x8, [x19, #40]
  419348:	b	419324 <feof@plt+0x16624>
  41934c:	stp	x29, x30, [sp, #-48]!
  419350:	str	x21, [sp, #16]
  419354:	stp	x20, x19, [sp, #32]
  419358:	mov	x29, sp
  41935c:	adrp	x1, 419000 <feof@plt+0x16300>
  419360:	mov	x20, x0
  419364:	add	x1, x1, #0x524
  419368:	mov	w0, #0x30                  	// #48
  41936c:	mov	w3, #0x1                   	// #1
  419370:	mov	x2, xzr
  419374:	mov	w21, #0x1                   	// #1
  419378:	bl	419d54 <feof@plt+0x17054>
  41937c:	mov	x19, x0
  419380:	stp	xzr, xzr, [x0, #24]
  419384:	str	xzr, [x0, #16]
  419388:	strb	w21, [x0, #44]
  41938c:	mov	x0, x20
  419390:	bl	419880 <feof@plt+0x16b80>
  419394:	mov	w8, w0
  419398:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41939c:	lsl	x8, x8, #4
  4193a0:	add	x9, x9, #0x26c
  4193a4:	ldr	w21, [x9, x8]
  4193a8:	adrp	x1, 419000 <feof@plt+0x16300>
  4193ac:	mov	w20, w0
  4193b0:	add	x1, x1, #0x54c
  4193b4:	lsl	x0, x21, #4
  4193b8:	mov	w2, #0x10                  	// #16
  4193bc:	mov	x3, x21
  4193c0:	bl	419d7c <feof@plt+0x1707c>
  4193c4:	cbz	x0, 419430 <feof@plt+0x16730>
  4193c8:	cbz	w21, 419414 <feof@plt+0x16714>
  4193cc:	cmp	w21, #0x1
  4193d0:	b.ne	4193dc <feof@plt+0x166dc>  // b.any
  4193d4:	mov	x8, xzr
  4193d8:	b	419400 <feof@plt+0x16700>
  4193dc:	and	x8, x21, #0xfffffffe
  4193e0:	add	x9, x0, #0x10
  4193e4:	mov	x10, x8
  4193e8:	stur	wzr, [x9, #-16]
  4193ec:	str	wzr, [x9], #32
  4193f0:	subs	x10, x10, #0x2
  4193f4:	b.ne	4193e8 <feof@plt+0x166e8>  // b.any
  4193f8:	cmp	x8, x21
  4193fc:	b.eq	419414 <feof@plt+0x16714>  // b.none
  419400:	sub	x9, x21, x8
  419404:	add	x8, x0, x8, lsl #4
  419408:	subs	x9, x9, #0x1
  41940c:	str	wzr, [x8], #16
  419410:	b.ne	419408 <feof@plt+0x16708>  // b.any
  419414:	stp	x0, x21, [x19]
  419418:	str	w20, [x19, #40]
  41941c:	mov	x0, x19
  419420:	ldp	x20, x19, [sp, #32]
  419424:	ldr	x21, [sp, #16]
  419428:	ldp	x29, x30, [sp], #48
  41942c:	ret
  419430:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419434:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419438:	add	x0, x0, #0x79c
  41943c:	add	x2, x2, #0x7b3
  419440:	mov	w1, #0x2b5                 	// #693
  419444:	bl	408b70 <feof@plt+0x5e70>
  419448:	ldr	w8, [x0, #32]
  41944c:	ldr	w12, [x0, #40]
  419450:	adrp	x14, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419454:	add	x14, x14, #0x26c
  419458:	add	w8, w8, #0x1
  41945c:	ldr	w10, [x1]
  419460:	add	x9, x14, x12, lsl #4
  419464:	str	w8, [x0, #32]
  419468:	ldp	w15, w8, [x9]
  41946c:	ldr	w11, [x9, #12]
  419470:	mul	x8, x8, x10
  419474:	lsr	x8, x8, #32
  419478:	sub	w9, w10, w8
  41947c:	add	w9, w8, w9, lsr #1
  419480:	ldr	x8, [x0]
  419484:	lsr	w9, w9, w11
  419488:	msub	w9, w9, w15, w10
  41948c:	lsl	x13, x9, #4
  419490:	ldr	w13, [x8, x13]
  419494:	cbz	w13, 41950c <feof@plt+0x1680c>
  419498:	ldr	w16, [x1]
  41949c:	cmp	w13, w16
  4194a0:	b.eq	41950c <feof@plt+0x1680c>  // b.none
  4194a4:	add	x12, x14, x12, lsl #4
  4194a8:	ldr	w13, [x12, #8]
  4194ac:	sub	w14, w15, #0x2
  4194b0:	ldr	w15, [x0, #36]
  4194b4:	ldr	x12, [x0, #8]
  4194b8:	mul	x13, x13, x10
  4194bc:	lsr	x13, x13, #32
  4194c0:	sub	w16, w10, w13
  4194c4:	add	w13, w13, w16, lsr #1
  4194c8:	lsr	w11, w13, w11
  4194cc:	msub	w10, w11, w14, w10
  4194d0:	add	w10, w10, #0x1
  4194d4:	add	w11, w15, #0x1
  4194d8:	add	w9, w10, w9
  4194dc:	cmp	x12, x9
  4194e0:	csel	w13, wzr, w12, hi  // hi = pmore
  4194e4:	sub	w9, w9, w13
  4194e8:	str	w11, [x0, #36]
  4194ec:	lsl	x13, x9, #4
  4194f0:	ldr	w13, [x8, x13]
  4194f4:	cbz	w13, 419508 <feof@plt+0x16808>
  4194f8:	ldr	w14, [x1]
  4194fc:	add	w11, w11, #0x1
  419500:	cmp	w13, w14
  419504:	b.ne	4194d8 <feof@plt+0x167d8>  // b.any
  419508:	mov	w9, w9
  41950c:	add	x8, x8, x9, lsl #4
  419510:	add	x8, x8, #0x8
  419514:	cmp	w13, #0x0
  419518:	csel	x0, xzr, x8, eq  // eq = none
  41951c:	ret
  419520:	ret
  419524:	ldr	x8, [x0, #8]
  419528:	mov	x9, x8
  41952c:	sub	x9, x9, #0x1
  419530:	cmp	x9, x8
  419534:	b.cc	41952c <feof@plt+0x1682c>  // b.lo, b.ul, b.last
  419538:	ldrb	w8, [x0, #44]
  41953c:	ldr	x0, [x0]
  419540:	cbz	w8, 419548 <feof@plt+0x16848>
  419544:	b	419dac <feof@plt+0x170ac>
  419548:	b	402770 <free@plt>
  41954c:	ret
  419550:	ret
  419554:	stp	x29, x30, [sp, #-48]!
  419558:	stp	x22, x21, [sp, #16]
  41955c:	stp	x20, x19, [sp, #32]
  419560:	mov	x29, sp
  419564:	mov	w19, w3
  419568:	mov	w22, w2
  41956c:	mov	x21, x1
  419570:	cmp	w3, #0x1
  419574:	mov	x20, x0
  419578:	b.ne	419594 <feof@plt+0x16894>  // b.any
  41957c:	ldp	x8, x9, [x20, #8]
  419580:	add	x8, x8, x8, lsl #1
  419584:	cmp	x8, x9, lsl #2
  419588:	b.hi	419594 <feof@plt+0x16894>  // b.pmore
  41958c:	mov	x0, x20
  419590:	bl	419680 <feof@plt+0x16980>
  419594:	ldr	w8, [x20, #32]
  419598:	ldr	w9, [x20, #40]
  41959c:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4195a0:	add	x10, x10, #0x26c
  4195a4:	add	w8, w8, #0x1
  4195a8:	add	x12, x10, x9, lsl #4
  4195ac:	str	w8, [x20, #32]
  4195b0:	ldp	w13, w8, [x12]
  4195b4:	mov	w11, w22
  4195b8:	ldr	w10, [x12, #12]
  4195bc:	mul	x8, x8, x11
  4195c0:	lsr	x9, x8, #32
  4195c4:	sub	w14, w22, w9
  4195c8:	ldr	x8, [x20]
  4195cc:	add	w9, w9, w14, lsr #1
  4195d0:	lsr	w9, w9, w10
  4195d4:	msub	w9, w9, w13, w22
  4195d8:	add	x0, x8, w9, uxtw #4
  4195dc:	ldr	w14, [x0]
  4195e0:	cbz	w14, 419654 <feof@plt+0x16954>
  4195e4:	ldr	w15, [x21]
  4195e8:	cmp	w14, w15
  4195ec:	b.eq	419670 <feof@plt+0x16970>  // b.none
  4195f0:	ldr	w14, [x12, #8]
  4195f4:	ldr	w15, [x20, #36]
  4195f8:	ldr	x12, [x20, #8]
  4195fc:	sub	w13, w13, #0x2
  419600:	mul	x11, x14, x11
  419604:	lsr	x11, x11, #32
  419608:	sub	w14, w22, w11
  41960c:	add	w11, w11, w14, lsr #1
  419610:	lsr	w10, w11, w10
  419614:	msub	w10, w10, w13, w22
  419618:	add	w10, w10, #0x1
  41961c:	add	w11, w15, #0x1
  419620:	add	w9, w10, w9
  419624:	cmp	x12, x9
  419628:	csel	w13, wzr, w12, hi  // hi = pmore
  41962c:	sub	w9, w9, w13
  419630:	str	w11, [x20, #36]
  419634:	add	x0, x8, w9, uxtw #4
  419638:	ldr	w13, [x0]
  41963c:	cbz	w13, 419654 <feof@plt+0x16954>
  419640:	ldr	w14, [x21]
  419644:	add	w11, w11, #0x1
  419648:	cmp	w13, w14
  41964c:	b.ne	419620 <feof@plt+0x16920>  // b.any
  419650:	b	419670 <feof@plt+0x16970>
  419654:	cbz	w19, 41966c <feof@plt+0x1696c>
  419658:	ldr	x10, [x20, #16]
  41965c:	add	x0, x8, w9, uxtw #4
  419660:	add	x10, x10, #0x1
  419664:	str	x10, [x20, #16]
  419668:	b	419670 <feof@plt+0x16970>
  41966c:	mov	x0, xzr
  419670:	ldp	x20, x19, [sp, #32]
  419674:	ldp	x22, x21, [sp, #16]
  419678:	ldp	x29, x30, [sp], #48
  41967c:	ret
  419680:	stp	x29, x30, [sp, #-64]!
  419684:	stp	x24, x23, [sp, #16]
  419688:	stp	x22, x21, [sp, #32]
  41968c:	stp	x20, x19, [sp, #48]
  419690:	mov	x29, sp
  419694:	ldp	x8, x9, [x0, #16]
  419698:	ldp	x19, x24, [x0]
  41969c:	mov	x20, x0
  4196a0:	adrp	x23, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4196a4:	sub	x8, x8, x9
  4196a8:	lsl	x0, x8, #1
  4196ac:	cmp	x0, x24
  4196b0:	add	x23, x23, #0x26c
  4196b4:	b.hi	4196d4 <feof@plt+0x169d4>  // b.pmore
  4196b8:	ldr	w21, [x20, #40]
  4196bc:	cmp	x24, #0x21
  4196c0:	b.cc	41984c <feof@plt+0x16b4c>  // b.lo, b.ul, b.last
  4196c4:	lsl	w8, w8, #3
  4196c8:	cmp	x24, x8
  4196cc:	mov	x22, x24
  4196d0:	b.ls	4196e8 <feof@plt+0x169e8>  // b.plast
  4196d4:	bl	419880 <feof@plt+0x16b80>
  4196d8:	mov	w8, w0
  4196dc:	lsl	x8, x8, #4
  4196e0:	ldr	w22, [x23, x8]
  4196e4:	mov	w21, w0
  4196e8:	ldrb	w8, [x20, #44]
  4196ec:	cbz	w8, 419858 <feof@plt+0x16b58>
  4196f0:	adrp	x1, 419000 <feof@plt+0x16300>
  4196f4:	lsl	x0, x22, #4
  4196f8:	add	x1, x1, #0x54c
  4196fc:	mov	w2, #0x10                  	// #16
  419700:	mov	x3, x22
  419704:	bl	419d7c <feof@plt+0x1707c>
  419708:	cbz	x0, 419868 <feof@plt+0x16b68>
  41970c:	cbz	x22, 419758 <feof@plt+0x16a58>
  419710:	cmp	x22, #0x1
  419714:	b.ne	419720 <feof@plt+0x16a20>  // b.any
  419718:	mov	x8, xzr
  41971c:	b	419744 <feof@plt+0x16a44>
  419720:	and	x8, x22, #0xfffffffffffffffe
  419724:	add	x9, x0, #0x10
  419728:	mov	x10, x8
  41972c:	stur	wzr, [x9, #-16]
  419730:	str	wzr, [x9], #32
  419734:	subs	x10, x10, #0x2
  419738:	b.ne	41972c <feof@plt+0x16a2c>  // b.any
  41973c:	cmp	x22, x8
  419740:	b.eq	419758 <feof@plt+0x16a58>  // b.none
  419744:	sub	x9, x22, x8
  419748:	add	x8, x0, x8, lsl #4
  41974c:	subs	x9, x9, #0x1
  419750:	str	wzr, [x8], #16
  419754:	b.ne	41974c <feof@plt+0x16a4c>  // b.any
  419758:	ldp	x10, x9, [x20, #16]
  41975c:	add	x8, x19, x24, lsl #4
  419760:	stp	x0, x22, [x20]
  419764:	str	w21, [x20, #40]
  419768:	sub	x9, x10, x9
  41976c:	stp	x9, xzr, [x20, #16]
  419770:	mov	x9, x19
  419774:	b	41978c <feof@plt+0x16a8c>
  419778:	ldr	q0, [x9]
  41977c:	str	q0, [x16]
  419780:	add	x9, x9, #0x10
  419784:	cmp	x9, x8
  419788:	b.cs	419814 <feof@plt+0x16b14>  // b.hs, b.nlast
  41978c:	ldr	w10, [x9]
  419790:	cbz	w10, 419780 <feof@plt+0x16a80>
  419794:	ldr	w11, [x20, #40]
  419798:	add	x14, x23, x11, lsl #4
  41979c:	ldp	w15, w11, [x14]
  4197a0:	ldr	w13, [x14, #12]
  4197a4:	mul	x11, x11, x10
  4197a8:	lsr	x12, x11, #32
  4197ac:	sub	w16, w10, w12
  4197b0:	ldr	x11, [x20]
  4197b4:	add	w12, w12, w16, lsr #1
  4197b8:	lsr	w12, w12, w13
  4197bc:	msub	w12, w12, w15, w10
  4197c0:	add	x16, x11, w12, uxtw #4
  4197c4:	ldr	w17, [x16]
  4197c8:	cbz	w17, 419778 <feof@plt+0x16a78>
  4197cc:	ldr	w16, [x14, #8]
  4197d0:	ldr	x14, [x20, #8]
  4197d4:	sub	w15, w15, #0x2
  4197d8:	mul	x16, x16, x10
  4197dc:	lsr	x16, x16, #32
  4197e0:	sub	w17, w10, w16
  4197e4:	add	w16, w16, w17, lsr #1
  4197e8:	lsr	w13, w16, w13
  4197ec:	msub	w10, w13, w15, w10
  4197f0:	add	w10, w10, #0x1
  4197f4:	add	w12, w10, w12
  4197f8:	cmp	x14, x12
  4197fc:	csel	w13, wzr, w14, hi  // hi = pmore
  419800:	sub	w12, w12, w13
  419804:	add	x16, x11, w12, uxtw #4
  419808:	ldr	w13, [x16]
  41980c:	cbnz	w13, 4197f4 <feof@plt+0x16af4>
  419810:	b	419778 <feof@plt+0x16a78>
  419814:	ldrb	w8, [x20, #44]
  419818:	cbz	w8, 419834 <feof@plt+0x16b34>
  41981c:	mov	x0, x19
  419820:	ldp	x20, x19, [sp, #48]
  419824:	ldp	x22, x21, [sp, #32]
  419828:	ldp	x24, x23, [sp, #16]
  41982c:	ldp	x29, x30, [sp], #64
  419830:	b	419dac <feof@plt+0x170ac>
  419834:	mov	x0, x19
  419838:	ldp	x20, x19, [sp, #48]
  41983c:	ldp	x22, x21, [sp, #32]
  419840:	ldp	x24, x23, [sp, #16]
  419844:	ldp	x29, x30, [sp], #64
  419848:	b	402770 <free@plt>
  41984c:	mov	x22, x24
  419850:	ldrb	w8, [x20, #44]
  419854:	cbnz	w8, 4196f0 <feof@plt+0x169f0>
  419858:	mov	w1, #0x10                  	// #16
  41985c:	mov	x0, x22
  419860:	bl	455390 <_obstack_memory_used@@Base+0x168>
  419864:	cbnz	x0, 41970c <feof@plt+0x16a0c>
  419868:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41986c:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419870:	add	x0, x0, #0x79c
  419874:	add	x2, x2, #0x7b3
  419878:	mov	w1, #0x2b5                 	// #693
  41987c:	bl	408b70 <feof@plt+0x5e70>
  419880:	stp	x29, x30, [sp, #-16]!
  419884:	mov	x29, sp
  419888:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41988c:	mov	x8, x0
  419890:	mov	w9, wzr
  419894:	mov	w0, #0x1e                  	// #30
  419898:	add	x10, x10, #0x26c
  41989c:	sub	w11, w0, w9
  4198a0:	add	w11, w9, w11, lsr #1
  4198a4:	lsl	x12, x11, #4
  4198a8:	ldr	w12, [x10, x12]
  4198ac:	cmp	x12, x8
  4198b0:	csel	w0, w0, w11, cc  // cc = lo, ul, last
  4198b4:	csinc	w9, w9, w11, cs  // cs = hs, nlast
  4198b8:	cmp	w0, w9
  4198bc:	b.ne	41989c <feof@plt+0x16b9c>  // b.any
  4198c0:	mov	w9, w0
  4198c4:	lsl	x9, x9, #4
  4198c8:	ldr	w9, [x10, x9]
  4198cc:	cmp	x9, x8
  4198d0:	b.cc	4198dc <feof@plt+0x16bdc>  // b.lo, b.ul, b.last
  4198d4:	ldp	x29, x30, [sp], #16
  4198d8:	ret
  4198dc:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4198e0:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4198e4:	add	x0, x0, #0x44c
  4198e8:	add	x2, x2, #0x463
  4198ec:	mov	w1, #0x60                  	// #96
  4198f0:	bl	408b70 <feof@plt+0x5e70>
  4198f4:	stp	x29, x30, [sp, #-32]!
  4198f8:	str	x19, [sp, #16]
  4198fc:	mov	x29, sp
  419900:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419904:	add	x8, x8, #0x948
  419908:	ldarb	w8, [x8]
  41990c:	tbz	w8, #0, 419924 <feof@plt+0x16c24>
  419910:	ldr	x19, [sp, #16]
  419914:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419918:	add	x0, x0, #0x910
  41991c:	ldp	x29, x30, [sp], #32
  419920:	ret
  419924:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419928:	add	x0, x0, #0x948
  41992c:	bl	402c20 <__cxa_guard_acquire@plt>
  419930:	cbz	w0, 419910 <feof@plt+0x16c10>
  419934:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419938:	add	x19, x19, #0x910
  41993c:	mov	x0, x19
  419940:	bl	419970 <feof@plt+0x16c70>
  419944:	adrp	x0, 419000 <feof@plt+0x16300>
  419948:	adrp	x2, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  41994c:	add	x0, x0, #0xbd4
  419950:	add	x2, x2, #0x3a0
  419954:	mov	x1, x19
  419958:	bl	402a10 <__cxa_atexit@plt>
  41995c:	adrp	x0, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419960:	add	x0, x0, #0x948
  419964:	bl	402810 <__cxa_guard_release@plt>
  419968:	b	419910 <feof@plt+0x16c10>
  41996c:	ret
  419970:	stp	x29, x30, [sp, #-64]!
  419974:	str	x23, [sp, #16]
  419978:	stp	x22, x21, [sp, #32]
  41997c:	stp	x20, x19, [sp, #48]
  419980:	mov	x29, sp
  419984:	mov	x19, x0
  419988:	mov	w0, #0x30                  	// #48
  41998c:	bl	402970 <_Znwm@plt>
  419990:	mov	x20, x0
  419994:	mov	w8, wzr
  419998:	mov	w23, #0x1e                  	// #30
  41999c:	stp	xzr, xzr, [x0, #24]
  4199a0:	str	xzr, [x0, #16]
  4199a4:	strb	wzr, [x0, #44]
  4199a8:	sub	w9, w23, w8
  4199ac:	add	w9, w8, w9, lsr #1
  4199b0:	cmp	w9, #0x0
  4199b4:	csel	w23, w23, w9, eq  // eq = none
  4199b8:	csinc	w8, w8, wzr, ne  // ne = any
  4199bc:	cmp	w23, w8
  4199c0:	b.ne	4199a8 <feof@plt+0x16ca8>  // b.any
  4199c4:	cbz	w23, 419ba4 <feof@plt+0x16ea4>
  4199c8:	mov	w8, w23
  4199cc:	adrp	x22, 458000 <_obstack_memory_used@@Base+0x2dd8>
  4199d0:	lsl	x8, x8, #4
  4199d4:	add	x22, x22, #0x26c
  4199d8:	ldr	w21, [x22, x8]
  4199dc:	mov	w1, #0x10                  	// #16
  4199e0:	mov	x0, x21
  4199e4:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4199e8:	cbz	x0, 419bbc <feof@plt+0x16ebc>
  4199ec:	and	x8, x21, #0xfffffffe
  4199f0:	add	x9, x0, #0x10
  4199f4:	mov	x10, x8
  4199f8:	stur	xzr, [x9, #-16]
  4199fc:	str	xzr, [x9], #32
  419a00:	subs	x10, x10, #0x2
  419a04:	b.ne	4199f8 <feof@plt+0x16cf8>  // b.any
  419a08:	cmp	x8, x21
  419a0c:	b.eq	419a2c <feof@plt+0x16d2c>  // b.none
  419a10:	lsl	x9, x21, #4
  419a14:	and	x9, x9, #0xfffffffe0
  419a18:	sub	x8, x21, x8
  419a1c:	add	x9, x0, x9
  419a20:	subs	x8, x8, #0x1
  419a24:	str	xzr, [x9], #16
  419a28:	b.ne	419a20 <feof@plt+0x16d20>  // b.any
  419a2c:	stp	x0, x21, [x20]
  419a30:	mov	w0, #0x30                  	// #48
  419a34:	str	w23, [x20, #40]
  419a38:	str	x20, [x19, #40]
  419a3c:	bl	402970 <_Znwm@plt>
  419a40:	mov	x20, x0
  419a44:	mov	w8, wzr
  419a48:	mov	w23, #0x1e                  	// #30
  419a4c:	stp	xzr, xzr, [x0, #24]
  419a50:	str	xzr, [x0, #16]
  419a54:	strb	wzr, [x0, #44]
  419a58:	sub	w9, w23, w8
  419a5c:	add	w9, w8, w9, lsr #1
  419a60:	cmp	w9, #0x0
  419a64:	csel	w23, w23, w9, eq  // eq = none
  419a68:	csinc	w8, w8, wzr, ne  // ne = any
  419a6c:	cmp	w23, w8
  419a70:	b.ne	419a58 <feof@plt+0x16d58>  // b.any
  419a74:	cbz	w23, 419ba4 <feof@plt+0x16ea4>
  419a78:	mov	w8, w23
  419a7c:	lsl	x8, x8, #4
  419a80:	ldr	w21, [x22, x8]
  419a84:	mov	w1, #0x18                  	// #24
  419a88:	mov	x0, x21
  419a8c:	bl	455390 <_obstack_memory_used@@Base+0x168>
  419a90:	cbz	x0, 419bbc <feof@plt+0x16ebc>
  419a94:	and	x8, x21, #0xfffffffe
  419a98:	mov	x9, x8
  419a9c:	mov	x10, x0
  419aa0:	str	xzr, [x10]
  419aa4:	str	xzr, [x10, #24]
  419aa8:	subs	x9, x9, #0x2
  419aac:	add	x10, x10, #0x30
  419ab0:	b.ne	419aa0 <feof@plt+0x16da0>  // b.any
  419ab4:	cmp	x8, x21
  419ab8:	b.eq	419ad8 <feof@plt+0x16dd8>  // b.none
  419abc:	lsr	x9, x21, #1
  419ac0:	mov	w10, #0x30                  	// #48
  419ac4:	sub	x8, x21, x8
  419ac8:	madd	x9, x9, x10, x0
  419acc:	subs	x8, x8, #0x1
  419ad0:	str	xzr, [x9], #24
  419ad4:	b.ne	419acc <feof@plt+0x16dcc>  // b.any
  419ad8:	stp	x0, x21, [x20]
  419adc:	mov	w0, #0x30                  	// #48
  419ae0:	str	w23, [x20, #40]
  419ae4:	str	x20, [x19, #48]
  419ae8:	bl	402970 <_Znwm@plt>
  419aec:	mov	x20, x0
  419af0:	mov	w8, wzr
  419af4:	mov	w23, #0x1e                  	// #30
  419af8:	stp	xzr, xzr, [x0, #24]
  419afc:	str	xzr, [x0, #16]
  419b00:	strb	wzr, [x0, #44]
  419b04:	sub	w9, w23, w8
  419b08:	add	w9, w8, w9, lsr #1
  419b0c:	cmp	w9, #0x0
  419b10:	csel	w23, w23, w9, eq  // eq = none
  419b14:	csinc	w8, w8, wzr, ne  // ne = any
  419b18:	cmp	w23, w8
  419b1c:	b.ne	419b04 <feof@plt+0x16e04>  // b.any
  419b20:	cbz	w23, 419ba4 <feof@plt+0x16ea4>
  419b24:	mov	w8, w23
  419b28:	lsl	x8, x8, #4
  419b2c:	ldr	w21, [x22, x8]
  419b30:	mov	w1, #0x18                  	// #24
  419b34:	mov	x0, x21
  419b38:	bl	455390 <_obstack_memory_used@@Base+0x168>
  419b3c:	cbz	x0, 419bbc <feof@plt+0x16ebc>
  419b40:	and	x8, x21, #0xfffffffe
  419b44:	mov	x9, x8
  419b48:	mov	x10, x0
  419b4c:	str	xzr, [x10]
  419b50:	str	xzr, [x10, #24]
  419b54:	subs	x9, x9, #0x2
  419b58:	add	x10, x10, #0x30
  419b5c:	b.ne	419b4c <feof@plt+0x16e4c>  // b.any
  419b60:	cmp	x8, x21
  419b64:	b.eq	419b84 <feof@plt+0x16e84>  // b.none
  419b68:	lsr	x9, x21, #1
  419b6c:	mov	w10, #0x30                  	// #48
  419b70:	sub	x8, x21, x8
  419b74:	madd	x9, x9, x10, x0
  419b78:	subs	x8, x8, #0x1
  419b7c:	str	xzr, [x9], #24
  419b80:	b.ne	419b78 <feof@plt+0x16e78>  // b.any
  419b84:	stp	x0, x21, [x20]
  419b88:	str	w23, [x20, #40]
  419b8c:	str	x20, [x19]
  419b90:	ldp	x20, x19, [sp, #48]
  419b94:	ldp	x22, x21, [sp, #32]
  419b98:	ldr	x23, [sp, #16]
  419b9c:	ldp	x29, x30, [sp], #64
  419ba0:	ret
  419ba4:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419ba8:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419bac:	add	x0, x0, #0x44c
  419bb0:	add	x2, x2, #0x463
  419bb4:	mov	w1, #0x60                  	// #96
  419bb8:	bl	408b70 <feof@plt+0x5e70>
  419bbc:	adrp	x0, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419bc0:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  419bc4:	add	x0, x0, #0x79c
  419bc8:	add	x2, x2, #0x7b3
  419bcc:	mov	w1, #0x2b5                 	// #693
  419bd0:	bl	408b70 <feof@plt+0x5e70>
  419bd4:	stp	x29, x30, [sp, #-48]!
  419bd8:	stp	x22, x21, [sp, #16]
  419bdc:	stp	x20, x19, [sp, #32]
  419be0:	mov	x29, sp
  419be4:	ldr	x20, [x0, #40]
  419be8:	mov	x19, x0
  419bec:	ldr	x8, [x20, #8]
  419bf0:	cmp	x8, #0x1
  419bf4:	b.lt	419c18 <feof@plt+0x16f18>  // b.tstop
  419bf8:	ldr	x21, [x20]
  419bfc:	add	x22, x21, x8, lsl #4
  419c00:	ldr	x8, [x21]
  419c04:	cmp	x8, #0x1
  419c08:	b.hi	419c20 <feof@plt+0x16f20>  // b.pmore
  419c0c:	add	x21, x21, #0x10
  419c10:	cmp	x21, x22
  419c14:	b.cc	419c00 <feof@plt+0x16f00>  // b.lo, b.ul, b.last
  419c18:	mov	x21, xzr
  419c1c:	mov	x22, xzr
  419c20:	orr	x8, x21, x22
  419c24:	cbnz	x8, 419c74 <feof@plt+0x16f74>
  419c28:	cbnz	x20, 419cb0 <feof@plt+0x16fb0>
  419c2c:	ldr	x20, [x19, #48]
  419c30:	cbnz	x20, 419d04 <feof@plt+0x17004>
  419c34:	ldr	x19, [x19]
  419c38:	cbz	x19, 419d40 <feof@plt+0x17040>
  419c3c:	ldr	x8, [x19, #8]
  419c40:	mov	x9, x8
  419c44:	sub	x9, x9, #0x1
  419c48:	cmp	x9, x8
  419c4c:	b.cc	419c44 <feof@plt+0x16f44>  // b.lo, b.ul, b.last
  419c50:	ldrb	w8, [x19, #44]
  419c54:	ldr	x0, [x19]
  419c58:	cbz	w8, 419cd8 <feof@plt+0x16fd8>
  419c5c:	bl	419dac <feof@plt+0x170ac>
  419c60:	b	419cdc <feof@plt+0x16fdc>
  419c64:	mov	x22, xzr
  419c68:	mov	x21, xzr
  419c6c:	orr	x8, x21, x22
  419c70:	cbz	x8, 419ca8 <feof@plt+0x16fa8>
  419c74:	ldr	x0, [x21]
  419c78:	cbz	x0, 419c80 <feof@plt+0x16f80>
  419c7c:	bl	402940 <_ZdlPv@plt>
  419c80:	ldr	x0, [x21, #8]
  419c84:	cbz	x0, 419c8c <feof@plt+0x16f8c>
  419c88:	bl	402940 <_ZdlPv@plt>
  419c8c:	add	x21, x21, #0x10
  419c90:	cmp	x21, x22
  419c94:	b.cs	419c64 <feof@plt+0x16f64>  // b.hs, b.nlast
  419c98:	ldr	x8, [x21]
  419c9c:	cmp	x8, #0x1
  419ca0:	b.ls	419c8c <feof@plt+0x16f8c>  // b.plast
  419ca4:	b	419c6c <feof@plt+0x16f6c>
  419ca8:	ldr	x20, [x19, #40]
  419cac:	cbz	x20, 419c2c <feof@plt+0x16f2c>
  419cb0:	ldr	x8, [x20, #8]
  419cb4:	mov	x9, x8
  419cb8:	sub	x9, x9, #0x1
  419cbc:	cmp	x9, x8
  419cc0:	b.cc	419cb8 <feof@plt+0x16fb8>  // b.lo, b.ul, b.last
  419cc4:	ldrb	w8, [x20, #44]
  419cc8:	ldr	x0, [x20]
  419ccc:	cbz	w8, 419cf0 <feof@plt+0x16ff0>
  419cd0:	bl	419dac <feof@plt+0x170ac>
  419cd4:	b	419cf4 <feof@plt+0x16ff4>
  419cd8:	bl	402770 <free@plt>
  419cdc:	mov	x0, x19
  419ce0:	ldp	x20, x19, [sp, #32]
  419ce4:	ldp	x22, x21, [sp, #16]
  419ce8:	ldp	x29, x30, [sp], #48
  419cec:	b	402940 <_ZdlPv@plt>
  419cf0:	bl	402770 <free@plt>
  419cf4:	mov	x0, x20
  419cf8:	bl	402940 <_ZdlPv@plt>
  419cfc:	ldr	x20, [x19, #48]
  419d00:	cbz	x20, 419c34 <feof@plt+0x16f34>
  419d04:	ldr	x8, [x20, #8]
  419d08:	mov	x9, x8
  419d0c:	sub	x9, x9, #0x1
  419d10:	cmp	x9, x8
  419d14:	b.cc	419d0c <feof@plt+0x1700c>  // b.lo, b.ul, b.last
  419d18:	ldrb	w8, [x20, #44]
  419d1c:	ldr	x0, [x20]
  419d20:	cbz	w8, 419d2c <feof@plt+0x1702c>
  419d24:	bl	419dac <feof@plt+0x170ac>
  419d28:	b	419d30 <feof@plt+0x17030>
  419d2c:	bl	402770 <free@plt>
  419d30:	mov	x0, x20
  419d34:	bl	402940 <_ZdlPv@plt>
  419d38:	ldr	x19, [x19]
  419d3c:	cbnz	x19, 419c3c <feof@plt+0x16f3c>
  419d40:	ldp	x20, x19, [sp, #32]
  419d44:	ldp	x22, x21, [sp, #16]
  419d48:	ldp	x29, x30, [sp], #48
  419d4c:	ret
  419d50:	ret
  419d54:	cbnz	x1, 419d5c <feof@plt+0x1705c>
  419d58:	b	45535c <_obstack_memory_used@@Base+0x134>
  419d5c:	stp	x29, x30, [sp, #-16]!
  419d60:	mov	x29, sp
  419d64:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419d68:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419d6c:	add	x0, x0, #0x481
  419d70:	add	x2, x2, #0x496
  419d74:	mov	w1, #0x2f                  	// #47
  419d78:	bl	408b70 <feof@plt+0x5e70>
  419d7c:	cbnz	x1, 419d88 <feof@plt+0x17088>
  419d80:	mov	w1, #0x1                   	// #1
  419d84:	b	455390 <_obstack_memory_used@@Base+0x168>
  419d88:	stp	x29, x30, [sp, #-16]!
  419d8c:	mov	x29, sp
  419d90:	adrp	x0, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419d94:	adrp	x2, 458000 <_obstack_memory_used@@Base+0x2dd8>
  419d98:	add	x0, x0, #0x481
  419d9c:	add	x2, x2, #0x4a9
  419da0:	mov	w1, #0x37                  	// #55
  419da4:	bl	408b70 <feof@plt+0x5e70>
  419da8:	b	4553e0 <_obstack_memory_used@@Base+0x1b8>
  419dac:	b	402770 <free@plt>
  419db0:	ret
  419db4:	str	xzr, [x0]
  419db8:	ret
  419dbc:	stp	x29, x30, [sp, #-32]!
  419dc0:	stp	x20, x19, [sp, #16]
  419dc4:	mov	x29, sp
  419dc8:	mov	x19, x0
  419dcc:	ldr	x0, [x0]
  419dd0:	cbz	x0, 419de8 <feof@plt+0x170e8>
  419dd4:	ldr	x20, [x0]
  419dd8:	bl	402770 <free@plt>
  419ddc:	mov	x0, x20
  419de0:	str	x20, [x19]
  419de4:	cbnz	x20, 419dd4 <feof@plt+0x170d4>
  419de8:	ldp	x20, x19, [sp, #16]
  419dec:	ldp	x29, x30, [sp], #32
  419df0:	ret
  419df4:	cmp	x0, #0x10, lsl #12
  419df8:	b.ne	419e14 <feof@plt+0x17114>  // b.any
  419dfc:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419e00:	ldr	x0, [x8, #2384]
  419e04:	cbz	x0, 419e18 <feof@plt+0x17118>
  419e08:	ldr	x9, [x0]
  419e0c:	str	x9, [x8, #2384]
  419e10:	ret
  419e14:	b	45535c <_obstack_memory_used@@Base+0x134>
  419e18:	mov	w0, #0x10000               	// #65536
  419e1c:	b	45535c <_obstack_memory_used@@Base+0x134>
  419e20:	ldr	x8, [x0]
  419e24:	sub	x8, x8, x0
  419e28:	cmp	x8, #0x10, lsl #12
  419e2c:	b.ne	419e44 <feof@plt+0x17144>  // b.any
  419e30:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  419e34:	ldr	x9, [x8, #2384]
  419e38:	str	x9, [x0]
  419e3c:	str	x0, [x8, #2384]
  419e40:	ret
  419e44:	b	402770 <free@plt>
  419e48:	cmp	x1, #0x2
  419e4c:	b.cc	419ef0 <feof@plt+0x171f0>  // b.lo, b.ul, b.last
  419e50:	sub	sp, sp, #0x160
  419e54:	stp	x29, x30, [sp, #304]
  419e58:	stp	x28, x21, [sp, #320]
  419e5c:	stp	x20, x19, [sp, #336]
  419e60:	add	x29, sp, #0x130
  419e64:	eor	x10, x2, x2, asr #63
  419e68:	lsr	x11, x1, #1
  419e6c:	mov	x20, x0
  419e70:	cmp	x2, #0x0
  419e74:	mov	w8, #0x5                   	// #5
  419e78:	mov	w9, #0x3                   	// #3
  419e7c:	stp	x3, x0, [x29, #-40]
  419e80:	mul	x0, x10, x11
  419e84:	mov	x19, x1
  419e88:	csel	x8, x9, x8, lt  // lt = tstop
  419e8c:	cmp	x0, #0x100
  419e90:	stp	x1, x10, [x29, #-24]
  419e94:	stur	x8, [x29, #-8]
  419e98:	b.hi	419eb8 <feof@plt+0x171b8>  // b.pmore
  419e9c:	sub	x1, x29, #0x28
  419ea0:	add	x4, sp, #0x8
  419ea4:	mov	x0, x20
  419ea8:	mov	x2, x19
  419eac:	mov	x3, x20
  419eb0:	bl	419ef4 <feof@plt+0x171f4>
  419eb4:	b	419ee0 <feof@plt+0x171e0>
  419eb8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  419ebc:	mov	x21, x0
  419ec0:	sub	x1, x29, #0x28
  419ec4:	mov	x0, x20
  419ec8:	mov	x2, x19
  419ecc:	mov	x3, x20
  419ed0:	mov	x4, x21
  419ed4:	bl	419ef4 <feof@plt+0x171f4>
  419ed8:	mov	x0, x21
  419edc:	bl	402770 <free@plt>
  419ee0:	ldp	x20, x19, [sp, #336]
  419ee4:	ldp	x28, x21, [sp, #320]
  419ee8:	ldp	x29, x30, [sp, #304]
  419eec:	add	sp, sp, #0x160
  419ef0:	ret
  419ef4:	stp	x29, x30, [sp, #-96]!
  419ef8:	str	x27, [sp, #16]
  419efc:	stp	x26, x25, [sp, #32]
  419f00:	stp	x24, x23, [sp, #48]
  419f04:	stp	x22, x21, [sp, #64]
  419f08:	stp	x20, x19, [sp, #80]
  419f0c:	mov	x29, sp
  419f10:	ldr	x8, [x1, #32]
  419f14:	mov	x20, x3
  419f18:	mov	x19, x1
  419f1c:	mov	x23, x2
  419f20:	cmp	x8, x2
  419f24:	mov	x24, x0
  419f28:	b.cc	41a0fc <feof@plt+0x173fc>  // b.lo, b.ul, b.last
  419f2c:	ldr	x8, [x19, #24]
  419f30:	ldr	x2, [x19]
  419f34:	mov	x1, x24
  419f38:	stp	x20, x23, [x19, #8]
  419f3c:	add	x21, x24, x8
  419f40:	mov	x0, x21
  419f44:	add	x23, x21, x8
  419f48:	bl	41a54c <feof@plt+0x1784c>
  419f4c:	ldr	x9, [x19, #16]
  419f50:	eor	x20, x0, x24
  419f54:	eor	x21, x0, x21
  419f58:	cmp	x9, #0x3
  419f5c:	b.ne	419f94 <feof@plt+0x17294>  // b.any
  419f60:	ldr	x2, [x19]
  419f64:	mov	x0, x23
  419f68:	mov	x1, x21
  419f6c:	bl	41a54c <feof@plt+0x1784c>
  419f70:	ldr	x2, [x19]
  419f74:	eor	x21, x0, x21
  419f78:	eor	x23, x0, x23
  419f7c:	mov	x0, x21
  419f80:	mov	x1, x20
  419f84:	bl	41a54c <feof@plt+0x1784c>
  419f88:	ldr	x9, [x19, #16]
  419f8c:	eor	x20, x0, x20
  419f90:	eor	x21, x0, x21
  419f94:	ldr	x8, [x19, #24]
  419f98:	cmp	x9, #0x3
  419f9c:	b.hi	419fcc <feof@plt+0x172cc>  // b.pmore
  419fa0:	cmp	x8, #0x8
  419fa4:	b.ne	41a1e4 <feof@plt+0x174e4>  // b.any
  419fa8:	ldr	x8, [x20]
  419fac:	ldr	x10, [x21]
  419fb0:	ldr	x11, [x19, #8]
  419fb4:	cmp	x9, #0x3
  419fb8:	b.ne	419fc4 <feof@plt+0x172c4>  // b.any
  419fbc:	ldr	x9, [x23]
  419fc0:	str	x9, [x11, #16]
  419fc4:	stp	x8, x10, [x11]
  419fc8:	b	41a0e0 <feof@plt+0x173e0>
  419fcc:	add	x25, x23, x8
  419fd0:	cmp	x9, #0x5
  419fd4:	add	x22, x25, x8
  419fd8:	b.ne	41a00c <feof@plt+0x1730c>  // b.any
  419fdc:	ldr	x2, [x19]
  419fe0:	mov	x0, x22
  419fe4:	mov	x1, x25
  419fe8:	bl	41a54c <feof@plt+0x1784c>
  419fec:	ldr	x2, [x19]
  419ff0:	eor	x22, x0, x22
  419ff4:	eor	x25, x0, x25
  419ff8:	mov	x0, x22
  419ffc:	mov	x1, x23
  41a000:	bl	41a54c <feof@plt+0x1784c>
  41a004:	eor	x23, x0, x23
  41a008:	eor	x22, x0, x22
  41a00c:	ldr	x2, [x19]
  41a010:	mov	x0, x25
  41a014:	mov	x1, x23
  41a018:	bl	41a54c <feof@plt+0x1784c>
  41a01c:	ldr	x8, [x19, #16]
  41a020:	eor	x24, x0, x23
  41a024:	eor	x23, x0, x25
  41a028:	cmp	x8, #0x5
  41a02c:	b.ne	41a060 <feof@plt+0x17360>  // b.any
  41a030:	ldr	x2, [x19]
  41a034:	mov	x0, x23
  41a038:	mov	x1, x20
  41a03c:	bl	41a54c <feof@plt+0x1784c>
  41a040:	ldr	x2, [x19]
  41a044:	eor	x20, x0, x20
  41a048:	eor	x23, x0, x23
  41a04c:	mov	x0, x22
  41a050:	mov	x1, x21
  41a054:	bl	41a54c <feof@plt+0x1784c>
  41a058:	eor	x21, x0, x21
  41a05c:	eor	x22, x0, x22
  41a060:	ldr	x2, [x19]
  41a064:	mov	x0, x24
  41a068:	mov	x1, x20
  41a06c:	bl	41a54c <feof@plt+0x1784c>
  41a070:	ldr	x2, [x19]
  41a074:	eor	x25, x0, x20
  41a078:	eor	x20, x0, x24
  41a07c:	mov	x0, x23
  41a080:	mov	x1, x21
  41a084:	bl	41a54c <feof@plt+0x1784c>
  41a088:	ldr	x2, [x19]
  41a08c:	eor	x21, x0, x21
  41a090:	eor	x23, x0, x23
  41a094:	mov	x0, x20
  41a098:	mov	x1, x21
  41a09c:	bl	41a54c <feof@plt+0x1784c>
  41a0a0:	ldr	x10, [x19, #24]
  41a0a4:	eor	x9, x0, x21
  41a0a8:	eor	x8, x0, x20
  41a0ac:	cmp	x10, #0x8
  41a0b0:	b.ne	41a210 <feof@plt+0x17510>  // b.any
  41a0b4:	ldp	x11, x13, [x19, #8]
  41a0b8:	ldr	x10, [x25]
  41a0bc:	ldr	x9, [x9]
  41a0c0:	ldr	x12, [x8]
  41a0c4:	ldr	x8, [x23]
  41a0c8:	cmp	x13, #0x5
  41a0cc:	b.ne	41a0d8 <feof@plt+0x173d8>  // b.any
  41a0d0:	ldr	x13, [x22]
  41a0d4:	str	x13, [x11, #32]
  41a0d8:	stp	x10, x9, [x11]
  41a0dc:	stp	x12, x8, [x11, #16]
  41a0e0:	ldp	x20, x19, [sp, #80]
  41a0e4:	ldp	x22, x21, [sp, #64]
  41a0e8:	ldp	x24, x23, [sp, #48]
  41a0ec:	ldp	x26, x25, [sp, #32]
  41a0f0:	ldr	x27, [sp, #16]
  41a0f4:	ldp	x29, x30, [sp], #96
  41a0f8:	ret
  41a0fc:	ldr	x8, [x19, #24]
  41a100:	lsr	x25, x23, #1
  41a104:	cmp	x24, x20
  41a108:	sub	x2, x23, x25
  41a10c:	mul	x27, x8, x25
  41a110:	add	x26, x24, x27
  41a114:	add	x22, x20, x27
  41a118:	mov	x0, x26
  41a11c:	mov	x1, x19
  41a120:	mov	x3, x22
  41a124:	csel	x21, x4, x24, eq  // eq = none
  41a128:	bl	419ef4 <feof@plt+0x171f4>
  41a12c:	mov	x0, x24
  41a130:	mov	x1, x19
  41a134:	mov	x2, x25
  41a138:	mov	x3, x21
  41a13c:	mov	x4, x26
  41a140:	bl	419ef4 <feof@plt+0x171f4>
  41a144:	ldr	x8, [x19, #24]
  41a148:	ldr	x9, [x19]
  41a14c:	add	x10, x21, x27
  41a150:	mov	x0, x22
  41a154:	sub	x1, x10, x8
  41a158:	blr	x9
  41a15c:	tbz	w0, #31, 41a1bc <feof@plt+0x174bc>
  41a160:	ldr	x8, [x19, #24]
  41a164:	cmp	x8, #0x8
  41a168:	madd	x23, x8, x23, x20
  41a16c:	b.ne	41a248 <feof@plt+0x17548>  // b.any
  41a170:	ldr	x8, [x19]
  41a174:	mov	x0, x22
  41a178:	mov	x1, x21
  41a17c:	blr	x8
  41a180:	sbfx	x8, x0, #31, #1
  41a184:	bic	x9, x21, x8
  41a188:	and	x10, x22, x8
  41a18c:	orr	x9, x10, x9
  41a190:	ldr	x9, [x9]
  41a194:	and	x8, x8, #0x8
  41a198:	add	x22, x22, x8
  41a19c:	str	x9, [x20], #8
  41a1a0:	cmp	x20, x22
  41a1a4:	b.eq	41a0e0 <feof@plt+0x173e0>  // b.none
  41a1a8:	eor	x8, x8, #0x8
  41a1ac:	cmp	x22, x23
  41a1b0:	add	x21, x21, x8
  41a1b4:	b.ne	41a170 <feof@plt+0x17470>  // b.any
  41a1b8:	mov	x22, x23
  41a1bc:	sub	x2, x22, x20
  41a1c0:	mov	x0, x20
  41a1c4:	mov	x1, x21
  41a1c8:	ldp	x20, x19, [sp, #80]
  41a1cc:	ldp	x22, x21, [sp, #64]
  41a1d0:	ldp	x24, x23, [sp, #48]
  41a1d4:	ldp	x26, x25, [sp, #32]
  41a1d8:	ldr	x27, [sp, #16]
  41a1dc:	ldp	x29, x30, [sp], #96
  41a1e0:	b	402640 <memcpy@plt>
  41a1e4:	cmp	x8, #0x4
  41a1e8:	b.ne	41a29c <feof@plt+0x1759c>  // b.any
  41a1ec:	ldr	w8, [x20]
  41a1f0:	ldr	w10, [x21]
  41a1f4:	ldr	x11, [x19, #8]
  41a1f8:	cmp	x9, #0x3
  41a1fc:	b.ne	41a208 <feof@plt+0x17508>  // b.any
  41a200:	ldr	w9, [x23]
  41a204:	str	w9, [x11, #8]
  41a208:	stp	w8, w10, [x11]
  41a20c:	b	41a0e0 <feof@plt+0x173e0>
  41a210:	cmp	x10, #0x4
  41a214:	b.ne	41a2ac <feof@plt+0x175ac>  // b.any
  41a218:	ldp	x11, x13, [x19, #8]
  41a21c:	ldr	w10, [x25]
  41a220:	ldr	w9, [x9]
  41a224:	ldr	w12, [x8]
  41a228:	ldr	w8, [x23]
  41a22c:	cmp	x13, #0x5
  41a230:	b.ne	41a23c <feof@plt+0x1753c>  // b.any
  41a234:	ldr	w13, [x22]
  41a238:	str	w13, [x11, #16]
  41a23c:	stp	w10, w9, [x11]
  41a240:	stp	w12, w8, [x11, #8]
  41a244:	b	41a0e0 <feof@plt+0x173e0>
  41a248:	cmp	x8, #0x4
  41a24c:	b.ne	41a444 <feof@plt+0x17744>  // b.any
  41a250:	ldr	x8, [x19]
  41a254:	mov	x0, x22
  41a258:	mov	x1, x21
  41a25c:	blr	x8
  41a260:	sbfx	x8, x0, #31, #1
  41a264:	bic	x9, x21, x8
  41a268:	and	x10, x22, x8
  41a26c:	orr	x9, x10, x9
  41a270:	ldr	w9, [x9]
  41a274:	and	x8, x8, #0x4
  41a278:	add	x22, x22, x8
  41a27c:	str	w9, [x20], #4
  41a280:	cmp	x20, x22
  41a284:	b.eq	41a0e0 <feof@plt+0x173e0>  // b.none
  41a288:	eor	x8, x8, #0x4
  41a28c:	cmp	x22, x23
  41a290:	add	x21, x21, x8
  41a294:	b.ne	41a250 <feof@plt+0x17550>  // b.any
  41a298:	b	41a1b8 <feof@plt+0x174b8>
  41a29c:	cmp	x8, #0x8
  41a2a0:	b.cs	41a2bc <feof@plt+0x175bc>  // b.hs, b.nlast
  41a2a4:	mov	x9, xzr
  41a2a8:	b	41a438 <feof@plt+0x17738>
  41a2ac:	cmp	x10, #0x8
  41a2b0:	b.cs	41a30c <feof@plt+0x1760c>  // b.hs, b.nlast
  41a2b4:	mov	x11, xzr
  41a2b8:	b	41a3ec <feof@plt+0x176ec>
  41a2bc:	mov	x10, xzr
  41a2c0:	ldr	x13, [x20, x10]
  41a2c4:	ldr	x11, [x21, x10]
  41a2c8:	ldr	x12, [x19, #8]
  41a2cc:	cmp	x9, #0x3
  41a2d0:	b.ne	41a2e0 <feof@plt+0x175e0>  // b.any
  41a2d4:	ldr	x9, [x23, x10]
  41a2d8:	add	x8, x12, x8, lsl #1
  41a2dc:	str	x9, [x8, x10]
  41a2e0:	str	x13, [x12, x10]
  41a2e4:	ldr	x8, [x19, #24]
  41a2e8:	add	x9, x10, #0x10
  41a2ec:	add	x8, x12, x8
  41a2f0:	str	x11, [x8, x10]
  41a2f4:	ldr	x8, [x19, #24]
  41a2f8:	cmp	x9, x8
  41a2fc:	b.hi	41a3f8 <feof@plt+0x176f8>  // b.pmore
  41a300:	ldr	x9, [x19, #16]
  41a304:	add	x10, x10, #0x8
  41a308:	b	41a2c0 <feof@plt+0x175c0>
  41a30c:	mov	x12, xzr
  41a310:	ldp	x11, x17, [x19, #8]
  41a314:	ldr	x16, [x25, x12]
  41a318:	ldr	x14, [x9, x12]
  41a31c:	ldr	x15, [x8, x12]
  41a320:	ldr	x13, [x23, x12]
  41a324:	cmp	x17, #0x5
  41a328:	b.ne	41a338 <feof@plt+0x17638>  // b.any
  41a32c:	ldr	x17, [x22, x12]
  41a330:	add	x10, x11, x10, lsl #2
  41a334:	str	x17, [x10, x12]
  41a338:	str	x16, [x11, x12]
  41a33c:	ldr	x10, [x19, #24]
  41a340:	add	x16, x11, x10
  41a344:	str	x14, [x16, x12]
  41a348:	ldr	x14, [x19, #24]
  41a34c:	add	x16, x14, x10
  41a350:	add	x16, x11, x16
  41a354:	str	x15, [x16, x12]
  41a358:	ldr	x15, [x19, #24]
  41a35c:	add	x14, x15, x14
  41a360:	add	x10, x14, x10
  41a364:	add	x10, x11, x10
  41a368:	str	x13, [x10, x12]
  41a36c:	ldr	x10, [x19, #24]
  41a370:	add	x11, x12, #0x8
  41a374:	add	x12, x12, #0x10
  41a378:	cmp	x12, x10
  41a37c:	mov	x12, x11
  41a380:	b.ls	41a310 <feof@plt+0x17610>  // b.plast
  41a384:	b	41a3ec <feof@plt+0x176ec>
  41a388:	ldp	x12, x17, [x19, #8]
  41a38c:	ldrb	w16, [x25, x11]
  41a390:	ldrb	w14, [x9, x11]
  41a394:	ldrb	w15, [x8, x11]
  41a398:	ldrb	w13, [x23, x11]
  41a39c:	cmp	x17, #0x5
  41a3a0:	b.ne	41a3b0 <feof@plt+0x176b0>  // b.any
  41a3a4:	ldrb	w17, [x22, x11]
  41a3a8:	add	x10, x12, x10, lsl #2
  41a3ac:	strb	w17, [x10, x11]
  41a3b0:	strb	w16, [x12, x11]
  41a3b4:	ldr	x10, [x19, #24]
  41a3b8:	add	x16, x12, x10
  41a3bc:	strb	w14, [x16, x11]
  41a3c0:	ldr	x14, [x19, #24]
  41a3c4:	add	x16, x14, x10
  41a3c8:	add	x16, x12, x16
  41a3cc:	strb	w15, [x16, x11]
  41a3d0:	ldr	x15, [x19, #24]
  41a3d4:	add	x14, x15, x14
  41a3d8:	add	x10, x14, x10
  41a3dc:	add	x10, x12, x10
  41a3e0:	strb	w13, [x10, x11]
  41a3e4:	ldr	x10, [x19, #24]
  41a3e8:	add	x11, x11, #0x1
  41a3ec:	cmp	x11, x10
  41a3f0:	b.cc	41a388 <feof@plt+0x17688>  // b.lo, b.ul, b.last
  41a3f4:	b	41a0e0 <feof@plt+0x173e0>
  41a3f8:	add	x9, x10, #0x8
  41a3fc:	b	41a438 <feof@plt+0x17738>
  41a400:	ldp	x10, x13, [x19, #8]
  41a404:	ldrb	w12, [x20, x9]
  41a408:	ldrb	w11, [x21, x9]
  41a40c:	cmp	x13, #0x3
  41a410:	b.ne	41a420 <feof@plt+0x17720>  // b.any
  41a414:	ldrb	w13, [x23, x9]
  41a418:	add	x8, x10, x8, lsl #1
  41a41c:	strb	w13, [x8, x9]
  41a420:	strb	w12, [x10, x9]
  41a424:	ldr	x8, [x19, #24]
  41a428:	add	x8, x10, x8
  41a42c:	strb	w11, [x8, x9]
  41a430:	ldr	x8, [x19, #24]
  41a434:	add	x9, x9, #0x1
  41a438:	cmp	x9, x8
  41a43c:	b.cc	41a400 <feof@plt+0x17700>  // b.lo, b.ul, b.last
  41a440:	b	41a0e0 <feof@plt+0x173e0>
  41a444:	ldr	x8, [x19]
  41a448:	mov	x0, x22
  41a44c:	mov	x1, x21
  41a450:	blr	x8
  41a454:	ldr	x2, [x19, #24]
  41a458:	sbfx	x24, x0, #31, #1
  41a45c:	bic	x8, x21, x24
  41a460:	and	x9, x22, x24
  41a464:	orr	x1, x9, x8
  41a468:	mov	x0, x20
  41a46c:	bl	402640 <memcpy@plt>
  41a470:	ldr	x8, [x19, #24]
  41a474:	and	x9, x8, x24
  41a478:	add	x20, x20, x8
  41a47c:	add	x22, x22, x9
  41a480:	cmp	x22, x20
  41a484:	b.eq	41a0e0 <feof@plt+0x173e0>  // b.none
  41a488:	bic	x8, x8, x24
  41a48c:	cmp	x22, x23
  41a490:	add	x21, x21, x8
  41a494:	b.ne	41a444 <feof@plt+0x17744>  // b.any
  41a498:	b	41a1b8 <feof@plt+0x174b8>
  41a49c:	cmp	x1, #0x2
  41a4a0:	b.cc	41a548 <feof@plt+0x17848>  // b.lo, b.ul, b.last
  41a4a4:	sub	sp, sp, #0x160
  41a4a8:	stp	x29, x30, [sp, #304]
  41a4ac:	stp	x28, x21, [sp, #320]
  41a4b0:	stp	x20, x19, [sp, #336]
  41a4b4:	add	x29, sp, #0x130
  41a4b8:	mvn	x8, x2
  41a4bc:	lsr	x11, x1, #1
  41a4c0:	eor	x8, x8, x8, asr #63
  41a4c4:	mov	x20, x0
  41a4c8:	cmp	x2, #0x0
  41a4cc:	mov	w9, #0x5                   	// #5
  41a4d0:	mov	w10, #0x3                   	// #3
  41a4d4:	stp	x3, x0, [x29, #-40]
  41a4d8:	mul	x0, x8, x11
  41a4dc:	mov	x19, x1
  41a4e0:	csel	x9, x10, x9, ge  // ge = tcont
  41a4e4:	cmp	x0, #0x100
  41a4e8:	stp	x1, x8, [x29, #-24]
  41a4ec:	stur	x9, [x29, #-8]
  41a4f0:	b.hi	41a510 <feof@plt+0x17810>  // b.pmore
  41a4f4:	sub	x1, x29, #0x28
  41a4f8:	add	x4, sp, #0x8
  41a4fc:	mov	x0, x20
  41a500:	mov	x2, x19
  41a504:	mov	x3, x20
  41a508:	bl	419ef4 <feof@plt+0x171f4>
  41a50c:	b	41a538 <feof@plt+0x17838>
  41a510:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41a514:	mov	x21, x0
  41a518:	sub	x1, x29, #0x28
  41a51c:	mov	x0, x20
  41a520:	mov	x2, x19
  41a524:	mov	x3, x20
  41a528:	mov	x4, x21
  41a52c:	bl	419ef4 <feof@plt+0x171f4>
  41a530:	mov	x0, x21
  41a534:	bl	402770 <free@plt>
  41a538:	ldp	x20, x19, [sp, #336]
  41a53c:	ldp	x28, x21, [sp, #320]
  41a540:	ldp	x29, x30, [sp, #304]
  41a544:	add	sp, sp, #0x160
  41a548:	ret
  41a54c:	stp	x29, x30, [sp, #-32]!
  41a550:	str	x19, [sp, #16]
  41a554:	mov	x29, sp
  41a558:	eor	x19, x1, x0
  41a55c:	blr	x2
  41a560:	sbfx	x8, x0, #31, #1
  41a564:	and	x0, x19, x8
  41a568:	ldr	x19, [sp, #16]
  41a56c:	ldp	x29, x30, [sp], #32
  41a570:	ret
  41a574:	sub	sp, sp, #0x70
  41a578:	stp	x29, x30, [sp, #32]
  41a57c:	stp	x26, x25, [sp, #48]
  41a580:	stp	x24, x23, [sp, #64]
  41a584:	stp	x22, x21, [sp, #80]
  41a588:	stp	x20, x19, [sp, #96]
  41a58c:	ldr	x10, [x0, #1232]
  41a590:	ldr	x9, [x0, #1168]
  41a594:	ldr	x8, [x0, #1176]
  41a598:	ldrb	w22, [x0, #1242]
  41a59c:	adrp	x20, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a5a0:	adrp	x25, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a5a4:	adrp	x26, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a5a8:	adrp	x23, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a5ac:	adrp	x24, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a5b0:	mov	x19, x0
  41a5b4:	add	x20, x20, #0xac2
  41a5b8:	add	x25, x25, #0xa92
  41a5bc:	add	x26, x26, #0xaa1
  41a5c0:	cmp	x10, #0x20
  41a5c4:	add	x23, x23, #0xa74
  41a5c8:	add	x24, x24, #0xa83
  41a5cc:	add	x29, sp, #0x20
  41a5d0:	b.cc	41a5e0 <feof@plt+0x178e0>  // b.lo, b.ul, b.last
  41a5d4:	cmp	w22, #0x0
  41a5d8:	csel	x10, x24, x23, ne  // ne = any
  41a5dc:	b	41a5fc <feof@plt+0x178fc>
  41a5e0:	cmp	x10, #0x10
  41a5e4:	b.cc	41a5f4 <feof@plt+0x178f4>  // b.lo, b.ul, b.last
  41a5e8:	cmp	w22, #0x0
  41a5ec:	csel	x10, x26, x25, ne  // ne = any
  41a5f0:	b	41a5fc <feof@plt+0x178fc>
  41a5f4:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a5f8:	add	x10, x10, #0xac2
  41a5fc:	cmp	x9, #0x0
  41a600:	csel	x1, x20, x9, eq  // eq = none
  41a604:	cmp	x8, #0x0
  41a608:	csel	x21, x10, x8, eq  // eq = none
  41a60c:	add	x8, sp, #0x8
  41a610:	mov	x0, x19
  41a614:	mov	x2, x20
  41a618:	bl	41a714 <feof@plt+0x17a14>
  41a61c:	ldr	x8, [sp, #24]
  41a620:	ldur	q0, [sp, #8]
  41a624:	add	x9, x19, #0x208
  41a628:	mov	x0, x19
  41a62c:	str	x8, [x9, #16]
  41a630:	str	q0, [x9]
  41a634:	ldr	x8, [x19, #1216]
  41a638:	mov	x1, x20
  41a63c:	mov	x2, x20
  41a640:	str	w8, [x9, #16]
  41a644:	add	x8, sp, #0x8
  41a648:	bl	41a714 <feof@plt+0x17a14>
  41a64c:	ldr	x8, [sp, #24]
  41a650:	ldur	q0, [sp, #8]
  41a654:	ldr	x9, [x19, #1216]
  41a658:	cmp	w22, #0x0
  41a65c:	str	x8, [x19, #560]
  41a660:	csel	x1, x26, x25, ne  // ne = any
  41a664:	add	x8, sp, #0x8
  41a668:	mov	x0, x19
  41a66c:	mov	x2, x20
  41a670:	str	q0, [x19, #544]
  41a674:	str	w9, [x19, #560]
  41a678:	csel	x22, x24, x23, ne  // ne = any
  41a67c:	bl	41a714 <feof@plt+0x17a14>
  41a680:	ldr	x8, [sp, #24]
  41a684:	ldur	q0, [sp, #8]
  41a688:	add	x9, x19, #0x238
  41a68c:	mov	w10, #0x10                  	// #16
  41a690:	str	x8, [x9, #16]
  41a694:	add	x8, sp, #0x8
  41a698:	mov	x0, x19
  41a69c:	mov	x1, x22
  41a6a0:	mov	x2, x20
  41a6a4:	str	q0, [x9]
  41a6a8:	str	w10, [x9, #16]
  41a6ac:	bl	41a714 <feof@plt+0x17a14>
  41a6b0:	ldr	x8, [sp, #24]
  41a6b4:	ldur	q0, [sp, #8]
  41a6b8:	mov	w9, #0x20                  	// #32
  41a6bc:	mov	x0, x19
  41a6c0:	str	x8, [x19, #608]
  41a6c4:	add	x8, sp, #0x8
  41a6c8:	mov	x1, x21
  41a6cc:	mov	x2, x20
  41a6d0:	str	q0, [x19, #592]
  41a6d4:	str	w9, [x19, #608]
  41a6d8:	bl	41a714 <feof@plt+0x17a14>
  41a6dc:	ldr	x8, [sp, #24]
  41a6e0:	ldur	q0, [sp, #8]
  41a6e4:	add	x9, x19, #0x268
  41a6e8:	str	x8, [x9, #16]
  41a6ec:	str	q0, [x9]
  41a6f0:	ldr	x8, [x19, #1232]
  41a6f4:	str	w8, [x9, #16]
  41a6f8:	ldp	x20, x19, [sp, #96]
  41a6fc:	ldp	x22, x21, [sp, #80]
  41a700:	ldp	x24, x23, [sp, #64]
  41a704:	ldp	x26, x25, [sp, #48]
  41a708:	ldp	x29, x30, [sp, #32]
  41a70c:	add	sp, sp, #0x70
  41a710:	ret
  41a714:	stp	x29, x30, [sp, #-64]!
  41a718:	stp	x22, x21, [sp, #32]
  41a71c:	stp	x20, x19, [sp, #48]
  41a720:	mov	x21, x1
  41a724:	mov	x20, x0
  41a728:	mov	x0, x1
  41a72c:	mov	x1, x2
  41a730:	str	x23, [sp, #16]
  41a734:	mov	x29, sp
  41a738:	mov	x22, x2
  41a73c:	mov	x19, x8
  41a740:	bl	402ba0 <strcasecmp@plt>
  41a744:	cbz	w0, 41a890 <feof@plt+0x17b90>
  41a748:	mov	x0, x21
  41a74c:	bl	4026d0 <strlen@plt>
  41a750:	mov	x23, x0
  41a754:	mov	x0, x22
  41a758:	bl	4026d0 <strlen@plt>
  41a75c:	add	x8, x23, x0
  41a760:	add	x8, x8, #0x11
  41a764:	and	x8, x8, #0xfffffffffffffff0
  41a768:	mov	x9, sp
  41a76c:	sub	x23, x9, x8
  41a770:	mov	sp, x23
  41a774:	mov	x0, x23
  41a778:	mov	x1, x22
  41a77c:	bl	402860 <strcpy@plt>
  41a780:	bl	4026d0 <strlen@plt>
  41a784:	mov	w8, #0x2f                  	// #47
  41a788:	strh	w8, [x23, x0]
  41a78c:	mov	x0, x23
  41a790:	mov	x1, x21
  41a794:	bl	402cc0 <strcat@plt>
  41a798:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a79c:	add	x1, x1, #0xa6e
  41a7a0:	bl	402ba0 <strcasecmp@plt>
  41a7a4:	cbz	w0, 41a8ac <feof@plt+0x17bac>
  41a7a8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a7ac:	add	x1, x1, #0xa7d
  41a7b0:	mov	x0, x23
  41a7b4:	bl	402ba0 <strcasecmp@plt>
  41a7b8:	cbz	w0, 41a8b4 <feof@plt+0x17bb4>
  41a7bc:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a7c0:	add	x1, x1, #0xa8c
  41a7c4:	mov	x0, x23
  41a7c8:	bl	402ba0 <strcasecmp@plt>
  41a7cc:	cbz	w0, 41a8bc <feof@plt+0x17bbc>
  41a7d0:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a7d4:	add	x1, x1, #0xa9b
  41a7d8:	mov	x0, x23
  41a7dc:	bl	402ba0 <strcasecmp@plt>
  41a7e0:	cbz	w0, 41a8c4 <feof@plt+0x17bc4>
  41a7e4:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a7e8:	add	x1, x1, #0xaaa
  41a7ec:	mov	x0, x23
  41a7f0:	bl	402ba0 <strcasecmp@plt>
  41a7f4:	cbz	w0, 41a8cc <feof@plt+0x17bcc>
  41a7f8:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a7fc:	add	x1, x1, #0xab9
  41a800:	mov	x0, x23
  41a804:	bl	402ba0 <strcasecmp@plt>
  41a808:	cbz	w0, 41a8d4 <feof@plt+0x17bd4>
  41a80c:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a810:	add	x1, x1, #0xac8
  41a814:	mov	x0, x23
  41a818:	bl	402ba0 <strcasecmp@plt>
  41a81c:	cbz	w0, 41a8dc <feof@plt+0x17bdc>
  41a820:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a824:	add	x1, x1, #0xad7
  41a828:	mov	x0, x23
  41a82c:	bl	402ba0 <strcasecmp@plt>
  41a830:	cbz	w0, 41a8e4 <feof@plt+0x17be4>
  41a834:	adrp	x8, 41a000 <feof@plt+0x17300>
  41a838:	add	x8, x8, #0x9d4
  41a83c:	mov	x0, x21
  41a840:	mov	x1, x22
  41a844:	str	x8, [x19]
  41a848:	bl	402760 <iconv_open@plt>
  41a84c:	mov	w8, #0xffffffff            	// #-1
  41a850:	cmn	x0, #0x1
  41a854:	str	x0, [x19, #8]
  41a858:	str	w8, [x19, #16]
  41a85c:	b.ne	41a908 <feof@plt+0x17c08>  // b.any
  41a860:	bl	402ac0 <__errno_location@plt>
  41a864:	ldr	w8, [x0]
  41a868:	cmp	w8, #0x16
  41a86c:	b.ne	41a920 <feof@plt+0x17c20>  // b.any
  41a870:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a874:	add	x2, x2, #0xa33
  41a878:	mov	w1, #0x3                   	// #3
  41a87c:	mov	x0, x20
  41a880:	mov	x3, x22
  41a884:	mov	x4, x21
  41a888:	bl	4223e4 <feof@plt+0x1f6e4>
  41a88c:	b	41a934 <feof@plt+0x17c34>
  41a890:	adrp	x8, 41c000 <feof@plt+0x19300>
  41a894:	add	x8, x8, #0xf0
  41a898:	mov	x9, #0xffffffffffffffff    	// #-1
  41a89c:	mov	w10, #0xffffffff            	// #-1
  41a8a0:	stp	x8, x9, [x19]
  41a8a4:	str	w10, [x19, #16]
  41a8a8:	b	41a908 <feof@plt+0x17c08>
  41a8ac:	mov	x8, xzr
  41a8b0:	b	41a8e8 <feof@plt+0x17be8>
  41a8b4:	mov	w8, #0x1                   	// #1
  41a8b8:	b	41a8e8 <feof@plt+0x17be8>
  41a8bc:	mov	w8, #0x2                   	// #2
  41a8c0:	b	41a8e8 <feof@plt+0x17be8>
  41a8c4:	mov	w8, #0x3                   	// #3
  41a8c8:	b	41a8e8 <feof@plt+0x17be8>
  41a8cc:	mov	w8, #0x4                   	// #4
  41a8d0:	b	41a8e8 <feof@plt+0x17be8>
  41a8d4:	mov	w8, #0x5                   	// #5
  41a8d8:	b	41a8e8 <feof@plt+0x17be8>
  41a8dc:	mov	w8, #0x6                   	// #6
  41a8e0:	b	41a8e8 <feof@plt+0x17be8>
  41a8e4:	mov	w8, #0x7                   	// #7
  41a8e8:	adrp	x10, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41a8ec:	mov	w9, #0x18                  	// #24
  41a8f0:	add	x10, x10, #0xc68
  41a8f4:	madd	x8, x8, x9, x10
  41a8f8:	ldur	q0, [x8, #8]
  41a8fc:	mov	w8, #0xffffffff            	// #-1
  41a900:	str	w8, [x19, #16]
  41a904:	str	q0, [x19]
  41a908:	mov	sp, x29
  41a90c:	ldp	x20, x19, [sp, #48]
  41a910:	ldp	x22, x21, [sp, #32]
  41a914:	ldr	x23, [sp, #16]
  41a918:	ldp	x29, x30, [sp], #64
  41a91c:	ret
  41a920:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41a924:	add	x2, x2, #0xa63
  41a928:	mov	w1, #0x3                   	// #3
  41a92c:	mov	x0, x20
  41a930:	bl	422e3c <feof@plt+0x2013c>
  41a934:	adrp	x8, 41c000 <feof@plt+0x19300>
  41a938:	add	x8, x8, #0xf0
  41a93c:	str	x8, [x19]
  41a940:	b	41a908 <feof@plt+0x17c08>
  41a944:	stp	x29, x30, [sp, #-32]!
  41a948:	stp	x20, x19, [sp, #16]
  41a94c:	ldr	x8, [x0, #520]
  41a950:	adrp	x20, 41a000 <feof@plt+0x17300>
  41a954:	add	x20, x20, #0x9d4
  41a958:	mov	x19, x0
  41a95c:	cmp	x8, x20
  41a960:	mov	x29, sp
  41a964:	b.ne	41a970 <feof@plt+0x17c70>  // b.any
  41a968:	ldr	x0, [x19, #528]
  41a96c:	bl	402630 <iconv_close@plt>
  41a970:	ldr	x8, [x19, #544]
  41a974:	cmp	x8, x20
  41a978:	b.ne	41a984 <feof@plt+0x17c84>  // b.any
  41a97c:	ldr	x0, [x19, #552]
  41a980:	bl	402630 <iconv_close@plt>
  41a984:	ldr	x8, [x19, #568]
  41a988:	cmp	x8, x20
  41a98c:	b.ne	41a998 <feof@plt+0x17c98>  // b.any
  41a990:	ldr	x0, [x19, #576]
  41a994:	bl	402630 <iconv_close@plt>
  41a998:	ldr	x8, [x19, #592]
  41a99c:	cmp	x8, x20
  41a9a0:	b.ne	41a9ac <feof@plt+0x17cac>  // b.any
  41a9a4:	ldr	x0, [x19, #600]
  41a9a8:	bl	402630 <iconv_close@plt>
  41a9ac:	ldr	x8, [x19, #616]
  41a9b0:	cmp	x8, x20
  41a9b4:	b.eq	41a9c4 <feof@plt+0x17cc4>  // b.none
  41a9b8:	ldp	x20, x19, [sp, #16]
  41a9bc:	ldp	x29, x30, [sp], #32
  41a9c0:	ret
  41a9c4:	ldr	x0, [x19, #624]
  41a9c8:	ldp	x20, x19, [sp, #16]
  41a9cc:	ldp	x29, x30, [sp], #32
  41a9d0:	b	402630 <iconv_close@plt>
  41a9d4:	sub	sp, sp, #0x50
  41a9d8:	stp	x22, x21, [sp, #48]
  41a9dc:	stp	x20, x19, [sp, #64]
  41a9e0:	mov	x19, x3
  41a9e4:	mov	x21, x2
  41a9e8:	mov	x22, x1
  41a9ec:	mov	x1, xzr
  41a9f0:	mov	x2, xzr
  41a9f4:	mov	x3, xzr
  41a9f8:	mov	x4, xzr
  41a9fc:	stp	x29, x30, [sp, #32]
  41aa00:	add	x29, sp, #0x20
  41aa04:	mov	x20, x0
  41aa08:	bl	4029c0 <iconv@plt>
  41aa0c:	cmn	x0, #0x1
  41aa10:	b.eq	41aaf0 <feof@plt+0x17df0>  // b.none
  41aa14:	stur	x22, [x29, #-8]
  41aa18:	ldr	x8, [x19]
  41aa1c:	ldr	x9, [x19, #16]
  41aa20:	sub	x1, x29, #0x8
  41aa24:	add	x2, sp, #0x8
  41aa28:	add	x3, sp, #0x10
  41aa2c:	add	x8, x8, x9
  41aa30:	stp	x21, x8, [sp, #8]
  41aa34:	ldr	x8, [x19, #8]
  41aa38:	mov	x4, sp
  41aa3c:	mov	x0, x20
  41aa40:	sub	x8, x8, x9
  41aa44:	str	x8, [sp]
  41aa48:	bl	4029c0 <iconv@plt>
  41aa4c:	ldr	x8, [sp, #8]
  41aa50:	cbnz	x8, 41ab08 <feof@plt+0x17e08>
  41aa54:	add	x3, sp, #0x10
  41aa58:	mov	x4, sp
  41aa5c:	mov	x0, x20
  41aa60:	mov	x1, xzr
  41aa64:	mov	x2, xzr
  41aa68:	bl	4029c0 <iconv@plt>
  41aa6c:	cmn	x0, #0x1
  41aa70:	b.eq	41aa8c <feof@plt+0x17d8c>  // b.none
  41aa74:	ldr	x8, [x19, #8]
  41aa78:	ldr	x9, [sp]
  41aa7c:	mov	w0, #0x1                   	// #1
  41aa80:	sub	x8, x8, x9
  41aa84:	str	x8, [x19, #16]
  41aa88:	b	41aaf4 <feof@plt+0x17df4>
  41aa8c:	bl	402ac0 <__errno_location@plt>
  41aa90:	ldr	w8, [x0]
  41aa94:	cmp	w8, #0x7
  41aa98:	b.ne	41aaf0 <feof@plt+0x17df0>  // b.any
  41aa9c:	ldr	x8, [sp]
  41aaa0:	add	x8, x8, #0x100
  41aaa4:	str	x8, [sp]
  41aaa8:	ldp	x0, x8, [x19]
  41aaac:	add	x1, x8, #0x100
  41aab0:	str	x1, [x19, #8]
  41aab4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41aab8:	str	x0, [x19]
  41aabc:	ldr	x8, [x19, #8]
  41aac0:	ldr	x9, [sp]
  41aac4:	add	x3, sp, #0x10
  41aac8:	mov	x4, sp
  41aacc:	add	x8, x0, x8
  41aad0:	sub	x8, x8, x9
  41aad4:	mov	x0, x20
  41aad8:	mov	x1, xzr
  41aadc:	mov	x2, xzr
  41aae0:	str	x8, [sp, #16]
  41aae4:	bl	4029c0 <iconv@plt>
  41aae8:	cmn	x0, #0x1
  41aaec:	b.ne	41aa74 <feof@plt+0x17d74>  // b.any
  41aaf0:	mov	w0, wzr
  41aaf4:	ldp	x20, x19, [sp, #64]
  41aaf8:	ldp	x22, x21, [sp, #48]
  41aafc:	ldp	x29, x30, [sp, #32]
  41ab00:	add	sp, sp, #0x50
  41ab04:	ret
  41ab08:	bl	402ac0 <__errno_location@plt>
  41ab0c:	mov	x21, x0
  41ab10:	ldr	w8, [x21]
  41ab14:	cmp	w8, #0x7
  41ab18:	b.ne	41aaf0 <feof@plt+0x17df0>  // b.any
  41ab1c:	ldr	x8, [sp]
  41ab20:	add	x8, x8, #0x100
  41ab24:	str	x8, [sp]
  41ab28:	ldp	x0, x8, [x19]
  41ab2c:	add	x1, x8, #0x100
  41ab30:	str	x1, [x19, #8]
  41ab34:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41ab38:	str	x0, [x19]
  41ab3c:	ldr	x8, [x19, #8]
  41ab40:	ldr	x9, [sp]
  41ab44:	sub	x1, x29, #0x8
  41ab48:	add	x2, sp, #0x8
  41ab4c:	add	x8, x0, x8
  41ab50:	sub	x8, x8, x9
  41ab54:	add	x3, sp, #0x10
  41ab58:	mov	x4, sp
  41ab5c:	mov	x0, x20
  41ab60:	str	x8, [sp, #16]
  41ab64:	bl	4029c0 <iconv@plt>
  41ab68:	ldr	x8, [sp, #8]
  41ab6c:	cbz	x8, 41aa54 <feof@plt+0x17d54>
  41ab70:	b	41ab10 <feof@plt+0x17e10>
  41ab74:	sub	sp, sp, #0x40
  41ab78:	stp	x20, x19, [sp, #48]
  41ab7c:	mov	w20, w1
  41ab80:	cmp	w1, #0x7f
  41ab84:	mov	x19, x0
  41ab88:	stp	x29, x30, [sp, #32]
  41ab8c:	add	x29, sp, #0x20
  41ab90:	b.cc	41aba4 <feof@plt+0x17ea4>  // b.lo, b.ul, b.last
  41ab94:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ab98:	mov	w3, w20
  41ab9c:	add	x2, x2, #0x71c
  41aba0:	b	41ac1c <feof@plt+0x17f1c>
  41aba4:	mov	w8, #0x1                   	// #1
  41aba8:	mov	w0, #0x1                   	// #1
  41abac:	sturb	w20, [x29, #-4]
  41abb0:	str	x8, [sp, #8]
  41abb4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41abb8:	str	x0, [sp]
  41abbc:	str	xzr, [sp, #16]
  41abc0:	ldr	x8, [x19, #520]
  41abc4:	ldr	x0, [x19, #528]
  41abc8:	sub	x1, x29, #0x4
  41abcc:	mov	x3, sp
  41abd0:	mov	w2, #0x1                   	// #1
  41abd4:	blr	x8
  41abd8:	tbz	w0, #0, 41abf8 <feof@plt+0x17ef8>
  41abdc:	ldr	x8, [sp, #16]
  41abe0:	cmp	x8, #0x1
  41abe4:	b.ne	41ac10 <feof@plt+0x17f10>  // b.any
  41abe8:	ldr	x0, [sp]
  41abec:	ldrb	w19, [x0]
  41abf0:	bl	402770 <free@plt>
  41abf4:	b	41ac2c <feof@plt+0x17f2c>
  41abf8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41abfc:	add	x2, x2, #0x756
  41ac00:	mov	w1, #0x4                   	// #4
  41ac04:	mov	x0, x19
  41ac08:	bl	422e3c <feof@plt+0x2013c>
  41ac0c:	b	41ac28 <feof@plt+0x17f28>
  41ac10:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ac14:	mov	w3, w20
  41ac18:	add	x2, x2, #0x77c
  41ac1c:	mov	w1, #0x4                   	// #4
  41ac20:	mov	x0, x19
  41ac24:	bl	4223e4 <feof@plt+0x1f6e4>
  41ac28:	mov	w19, wzr
  41ac2c:	mov	w0, w19
  41ac30:	ldp	x20, x19, [sp, #48]
  41ac34:	ldp	x29, x30, [sp, #32]
  41ac38:	add	sp, sp, #0x40
  41ac3c:	ret
  41ac40:	stp	x29, x30, [sp, #-32]!
  41ac44:	adrp	x8, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41ac48:	ldr	d0, [x8, #1224]
  41ac4c:	str	x19, [sp, #16]
  41ac50:	mov	x19, x0
  41ac54:	str	xzr, [x0]
  41ac58:	str	d0, [x0, #8]
  41ac5c:	mov	w0, #0x40                  	// #64
  41ac60:	mov	x29, sp
  41ac64:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41ac68:	str	x0, [x19]
  41ac6c:	ldr	x19, [sp, #16]
  41ac70:	ldp	x29, x30, [sp], #32
  41ac74:	ret
  41ac78:	ldr	x0, [x0]
  41ac7c:	b	402770 <free@plt>
  41ac80:	stp	x29, x30, [sp, #-32]!
  41ac84:	stp	x20, x19, [sp, #16]
  41ac88:	ldp	w8, w9, [x0, #8]
  41ac8c:	mov	x19, x0
  41ac90:	sxtw	x9, w9
  41ac94:	mov	x20, x1
  41ac98:	cmp	w8, w9
  41ac9c:	mov	x29, sp
  41aca0:	b.ge	41acac <feof@plt+0x17fac>  // b.tcont
  41aca4:	ldr	x0, [x19]
  41aca8:	b	41acc8 <feof@plt+0x17fc8>
  41acac:	ldr	x0, [x19]
  41acb0:	lsl	w8, w9, #1
  41acb4:	lsl	x1, x9, #4
  41acb8:	str	w8, [x19, #12]
  41acbc:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41acc0:	ldr	w8, [x19, #8]
  41acc4:	str	x0, [x19]
  41acc8:	add	w9, w8, #0x1
  41accc:	str	w9, [x19, #8]
  41acd0:	str	x20, [x0, w8, sxtw #3]
  41acd4:	ldp	x20, x19, [sp, #16]
  41acd8:	ldp	x29, x30, [sp], #32
  41acdc:	ret
  41ace0:	stp	x29, x30, [sp, #-64]!
  41ace4:	cmp	w1, #0x1
  41ace8:	str	x23, [sp, #16]
  41acec:	stp	x22, x21, [sp, #32]
  41acf0:	stp	x20, x19, [sp, #48]
  41acf4:	mov	x29, sp
  41acf8:	b.lt	41ad74 <feof@plt+0x18074>  // b.tstop
  41acfc:	mov	x19, x2
  41ad00:	mov	w20, w1
  41ad04:	mov	x21, x0
  41ad08:	mov	w22, #0x60000000            	// #1610612736
  41ad0c:	b	41ad40 <feof@plt+0x18040>
  41ad10:	ldr	x0, [x21]
  41ad14:	lsl	w8, w9, #1
  41ad18:	lsl	x1, x9, #4
  41ad1c:	str	w8, [x21, #12]
  41ad20:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41ad24:	ldr	w8, [x21, #8]
  41ad28:	str	x0, [x21]
  41ad2c:	add	w9, w8, #0x1
  41ad30:	subs	w20, w20, #0x1
  41ad34:	str	w9, [x21, #8]
  41ad38:	str	x23, [x0, w8, sxtw #3]
  41ad3c:	b.eq	41ad74 <feof@plt+0x18074>  // b.none
  41ad40:	ldr	w23, [x19]
  41ad44:	cmp	w23, w22
  41ad48:	b.hi	41ad58 <feof@plt+0x18058>  // b.pmore
  41ad4c:	ldr	w8, [x19, #4]
  41ad50:	add	w8, w8, w23
  41ad54:	str	w8, [x19]
  41ad58:	ldp	w8, w9, [x21, #8]
  41ad5c:	bfi	x23, x23, #32, #32
  41ad60:	sxtw	x9, w9
  41ad64:	cmp	w8, w9
  41ad68:	b.ge	41ad10 <feof@plt+0x18010>  // b.tcont
  41ad6c:	ldr	x0, [x21]
  41ad70:	b	41ad2c <feof@plt+0x1802c>
  41ad74:	ldp	x20, x19, [sp, #48]
  41ad78:	ldp	x22, x21, [sp, #32]
  41ad7c:	ldr	x23, [sp, #16]
  41ad80:	ldp	x29, x30, [sp], #64
  41ad84:	ret
  41ad88:	mov	x8, x0
  41ad8c:	ldr	w0, [x0]
  41ad90:	mov	w9, #0x60000000            	// #1610612736
  41ad94:	cmp	w0, w9
  41ad98:	b.hi	41ada8 <feof@plt+0x180a8>  // b.pmore
  41ad9c:	ldr	w9, [x8, #4]
  41ada0:	add	w9, w9, w0
  41ada4:	str	w9, [x8]
  41ada8:	bfi	x0, x0, #32, #32
  41adac:	ret
  41adb0:	sub	sp, sp, #0x70
  41adb4:	stp	x29, x30, [sp, #16]
  41adb8:	stp	x28, x27, [sp, #32]
  41adbc:	stp	x26, x25, [sp, #48]
  41adc0:	stp	x24, x23, [sp, #64]
  41adc4:	stp	x22, x21, [sp, #80]
  41adc8:	stp	x20, x19, [sp, #96]
  41adcc:	ldrb	w8, [x0, #1120]
  41add0:	ldr	x21, [x1]
  41add4:	mov	x26, x7
  41add8:	mov	x27, x6
  41addc:	mov	x24, x4
  41ade0:	mov	w22, w3
  41ade4:	mov	x25, x1
  41ade8:	mov	x20, x0
  41adec:	mov	x28, x2
  41adf0:	add	x29, sp, #0x10
  41adf4:	str	x5, [sp, #8]
  41adf8:	cbz	w8, 41ae24 <feof@plt+0x18124>
  41adfc:	cbnz	w22, 41ae5c <feof@plt+0x1815c>
  41ae00:	ldrb	w8, [x20, #1138]
  41ae04:	cbz	w8, 41ae5c <feof@plt+0x1815c>
  41ae08:	ldurb	w3, [x21, #-1]
  41ae0c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ae10:	add	x2, x2, #0x828
  41ae14:	mov	w1, #0x6                   	// #6
  41ae18:	mov	x0, x20
  41ae1c:	bl	422514 <feof@plt+0x1f814>
  41ae20:	b	41ae5c <feof@plt+0x1815c>
  41ae24:	ldrb	w9, [x20, #1152]
  41ae28:	cbz	w9, 41ae48 <feof@plt+0x18148>
  41ae2c:	ldrsb	w9, [x20, #1198]
  41ae30:	cmp	w9, #0x1
  41ae34:	b.lt	41adfc <feof@plt+0x180fc>  // b.tstop
  41ae38:	cbnz	w8, 41adfc <feof@plt+0x180fc>
  41ae3c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ae40:	add	x2, x2, #0x7ee
  41ae44:	b	41ae50 <feof@plt+0x18150>
  41ae48:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ae4c:	add	x2, x2, #0x7b6
  41ae50:	mov	x0, x20
  41ae54:	mov	w1, wzr
  41ae58:	bl	4223e4 <feof@plt+0x1f6e4>
  41ae5c:	ldurb	w8, [x21, #-1]
  41ae60:	sub	x4, x21, #0x2
  41ae64:	cmp	w8, #0x75
  41ae68:	b.eq	41ae7c <feof@plt+0x1817c>  // b.none
  41ae6c:	cmp	w8, #0x55
  41ae70:	b.ne	41ae84 <feof@plt+0x18184>  // b.any
  41ae74:	mov	w19, #0x8                   	// #8
  41ae78:	b	41aea4 <feof@plt+0x181a4>
  41ae7c:	mov	w19, #0x4                   	// #4
  41ae80:	b	41aea4 <feof@plt+0x181a4>
  41ae84:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ae88:	add	x2, x2, #0x85b
  41ae8c:	mov	w1, #0x4                   	// #4
  41ae90:	mov	x0, x20
  41ae94:	mov	w19, #0x4                   	// #4
  41ae98:	mov	x23, x4
  41ae9c:	bl	4223e4 <feof@plt+0x1f6e4>
  41aea0:	mov	x4, x23
  41aea4:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41aea8:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41aeac:	mov	w23, wzr
  41aeb0:	add	x8, x8, #0x3c4
  41aeb4:	add	x9, x9, #0x2b3
  41aeb8:	mov	w10, #0x60000000            	// #1610612736
  41aebc:	ldrb	w11, [x21]
  41aec0:	ldrh	w12, [x8, x11, lsl #1]
  41aec4:	tbz	w12, #8, 41af14 <feof@plt+0x18214>
  41aec8:	cbz	x26, 41aeec <feof@plt+0x181ec>
  41aecc:	cbz	x27, 41b228 <feof@plt+0x18528>
  41aed0:	ldr	w12, [x26]
  41aed4:	cmp	w12, w10
  41aed8:	b.hi	41aee8 <feof@plt+0x181e8>  // b.pmore
  41aedc:	ldr	w13, [x26, #4]
  41aee0:	add	w13, w13, w12
  41aee4:	str	w13, [x26]
  41aee8:	str	w12, [x27, #4]
  41aeec:	ldrb	w11, [x9, x11]
  41aef0:	add	x21, x21, #0x1
  41aef4:	cmp	x21, x28
  41aef8:	add	w23, w11, w23, lsl #4
  41aefc:	sub	w11, w19, #0x1
  41af00:	b.cs	41af18 <feof@plt+0x18218>  // b.hs, b.nlast
  41af04:	cmp	w19, #0x1
  41af08:	mov	w19, w11
  41af0c:	b.ne	41aebc <feof@plt+0x181bc>  // b.any
  41af10:	b	41af18 <feof@plt+0x18218>
  41af14:	mov	w11, w19
  41af18:	cbz	w22, 41af2c <feof@plt+0x1822c>
  41af1c:	cbz	w11, 41af2c <feof@plt+0x1822c>
  41af20:	mov	w23, wzr
  41af24:	mov	w0, wzr
  41af28:	b	41b000 <feof@plt+0x18300>
  41af2c:	str	x21, [x25]
  41af30:	cbz	w11, 41af44 <feof@plt+0x18244>
  41af34:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41af38:	sub	w3, w21, w4
  41af3c:	add	x2, x2, #0x8a1
  41af40:	b	41afec <feof@plt+0x182ec>
  41af44:	cmp	w23, #0x9f
  41af48:	b.hi	41af78 <feof@plt+0x18278>  // b.pmore
  41af4c:	ldrb	w8, [x20, #1120]
  41af50:	cbnz	w8, 41af78 <feof@plt+0x18278>
  41af54:	sub	w8, w23, #0x24
  41af58:	cmp	w8, #0x3c
  41af5c:	b.hi	41afe0 <feof@plt+0x182e0>  // b.pmore
  41af60:	mov	w9, #0x1                   	// #1
  41af64:	lsl	x8, x9, x8
  41af68:	mov	x9, #0x1000000010000000    	// #1152921504875282432
  41af6c:	movk	x9, #0x1
  41af70:	tst	x8, x9
  41af74:	b.eq	41afe0 <feof@plt+0x182e0>  // b.none
  41af78:	tbnz	w23, #31, 41afe0 <feof@plt+0x182e0>
  41af7c:	and	w8, w23, #0xfffff800
  41af80:	mov	w9, #0xd800                	// #55296
  41af84:	cmp	w8, w9
  41af88:	b.eq	41afe0 <feof@plt+0x182e0>  // b.none
  41af8c:	cbz	w22, 41b028 <feof@plt+0x18328>
  41af90:	cmp	w23, #0x24
  41af94:	b.ne	41b028 <feof@plt+0x18328>  // b.any
  41af98:	ldrb	w8, [x20, #1146]
  41af9c:	cbz	w8, 41b028 <feof@plt+0x18328>
  41afa0:	ldrb	w8, [x20, #1148]
  41afa4:	ldr	x19, [sp, #8]
  41afa8:	cbz	w8, 41afcc <feof@plt+0x182cc>
  41afac:	ldrb	w8, [x20, #18]
  41afb0:	cbnz	w8, 41afcc <feof@plt+0x182cc>
  41afb4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41afb8:	add	x2, x2, #0x8f2
  41afbc:	mov	w1, #0x2                   	// #2
  41afc0:	mov	x0, x20
  41afc4:	strb	wzr, [x20, #1148]
  41afc8:	bl	4223e4 <feof@plt+0x1f6e4>
  41afcc:	mov	w23, #0x24                  	// #36
  41afd0:	strb	wzr, [x24, #4]
  41afd4:	str	w23, [x24]
  41afd8:	mov	w0, #0x1                   	// #1
  41afdc:	b	41b004 <feof@plt+0x18304>
  41afe0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41afe4:	sub	w3, w21, w4
  41afe8:	add	x2, x2, #0x8ca
  41afec:	mov	w1, #0x3                   	// #3
  41aff0:	mov	x0, x20
  41aff4:	bl	4223e4 <feof@plt+0x1f6e4>
  41aff8:	mov	w23, #0x1                   	// #1
  41affc:	mov	w0, #0x1                   	// #1
  41b000:	ldr	x19, [sp, #8]
  41b004:	str	w23, [x19]
  41b008:	ldp	x20, x19, [sp, #96]
  41b00c:	ldp	x22, x21, [sp, #80]
  41b010:	ldp	x24, x23, [sp, #64]
  41b014:	ldp	x26, x25, [sp, #48]
  41b018:	ldp	x28, x27, [sp, #32]
  41b01c:	ldp	x29, x30, [sp, #16]
  41b020:	add	sp, sp, #0x70
  41b024:	ret
  41b028:	cbz	w22, 41affc <feof@plt+0x182fc>
  41b02c:	lsr	w8, w23, #16
  41b030:	cmp	w8, #0x10
  41b034:	b.hi	41b0e0 <feof@plt+0x183e0>  // b.pmore
  41b038:	adrp	x8, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41b03c:	mov	x19, x24
  41b040:	mov	w10, wzr
  41b044:	mov	w9, #0x73c                 	// #1852
  41b048:	add	x8, x8, #0xd28
  41b04c:	add	w11, w9, w10
  41b050:	cmp	w11, #0x0
  41b054:	cinc	w11, w11, lt  // lt = tstop
  41b058:	asr	w11, w11, #1
  41b05c:	add	x12, x8, w11, sxtw #3
  41b060:	ldr	w12, [x12, #4]
  41b064:	cmp	w12, w23
  41b068:	csel	w9, w9, w11, cc  // cc = lo, ul, last
  41b06c:	csinc	w10, w10, w11, cs  // cs = hs, nlast
  41b070:	cmp	w9, w10
  41b074:	b.ne	41b04c <feof@plt+0x1834c>  // b.any
  41b078:	ldrb	w10, [x20, #1154]
  41b07c:	cbz	w10, 41b090 <feof@plt+0x18390>
  41b080:	ldrb	w10, [x20, #1164]
  41b084:	cbz	w10, 41b098 <feof@plt+0x18398>
  41b088:	mov	w10, #0x8                   	// #8
  41b08c:	b	41b0bc <feof@plt+0x183bc>
  41b090:	mov	w10, #0xd                   	// #13
  41b094:	b	41b0bc <feof@plt+0x183bc>
  41b098:	ldrb	w10, [x20, #1152]
  41b09c:	cbz	w10, 41b0a8 <feof@plt+0x183a8>
  41b0a0:	mov	w10, #0x1                   	// #1
  41b0a4:	b	41b0bc <feof@plt+0x183bc>
  41b0a8:	ldrb	w10, [x20, #1120]
  41b0ac:	mov	w11, #0x4                   	// #4
  41b0b0:	cmp	w10, #0x0
  41b0b4:	mov	w10, #0xd                   	// #13
  41b0b8:	csel	w10, w10, w11, eq  // eq = none
  41b0bc:	sbfiz	x11, x9, #3, #32
  41b0c0:	ldrh	w25, [x8, x11]
  41b0c4:	tst	w10, w25
  41b0c8:	b.eq	41b0e0 <feof@plt+0x183e0>  // b.none
  41b0cc:	ldrb	w10, [x20, #1164]
  41b0d0:	sxtw	x9, w9
  41b0d4:	cbz	w10, 41b0fc <feof@plt+0x183fc>
  41b0d8:	mov	w26, #0x10                  	// #16
  41b0dc:	b	41b10c <feof@plt+0x1840c>
  41b0e0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b0e4:	sub	w3, w21, w4
  41b0e8:	add	x2, x2, #0x90e
  41b0ec:	mov	w1, #0x3                   	// #3
  41b0f0:	mov	x0, x20
  41b0f4:	bl	4223e4 <feof@plt+0x1f6e4>
  41b0f8:	b	41affc <feof@plt+0x182fc>
  41b0fc:	ldrb	w10, [x20, #1152]
  41b100:	cmp	w10, #0x0
  41b104:	cset	w10, ne  // ne = any
  41b108:	lsl	w26, w10, #1
  41b10c:	add	x8, x8, x9, lsl #3
  41b110:	ldrb	w27, [x8, #2]
  41b114:	cbz	w27, 41b130 <feof@plt+0x18430>
  41b118:	ldrb	w8, [x19, #4]
  41b11c:	cmp	w27, w8
  41b120:	b.cs	41b130 <feof@plt+0x18430>  // b.hs, b.nlast
  41b124:	mov	w8, #0x3                   	// #3
  41b128:	str	w8, [x19, #8]
  41b12c:	b	41b200 <feof@plt+0x18500>
  41b130:	tbnz	w25, #8, 41b144 <feof@plt+0x18444>
  41b134:	tbnz	w25, #7, 41b1f8 <feof@plt+0x184f8>
  41b138:	tbnz	w25, #6, 41b1c8 <feof@plt+0x184c8>
  41b13c:	tbnz	w25, #5, 41b168 <feof@plt+0x18468>
  41b140:	b	41b1f0 <feof@plt+0x184f0>
  41b144:	ldr	w2, [x19]
  41b148:	mov	w8, #0xffffee9f            	// #-4449
  41b14c:	add	w8, w23, w8
  41b150:	cmp	w8, #0x14
  41b154:	b.hi	41b17c <feof@plt+0x1847c>  // b.pmore
  41b158:	mov	w8, #0xffffef00            	// #-4352
  41b15c:	add	w8, w2, w8
  41b160:	cmp	w8, #0x12
  41b164:	b.hi	41b1f8 <feof@plt+0x184f8>  // b.pmore
  41b168:	ldr	w8, [x19, #8]
  41b16c:	mov	w9, #0x2                   	// #2
  41b170:	cmp	w8, #0x2
  41b174:	csel	w8, w8, w9, gt
  41b178:	b	41b1f4 <feof@plt+0x184f4>
  41b17c:	mov	w8, #0xffffee58            	// #-4520
  41b180:	add	w8, w23, w8
  41b184:	cmp	w8, #0x1a
  41b188:	b.hi	41b1d8 <feof@plt+0x184d8>  // b.pmore
  41b18c:	mov	w8, #0xffff5400            	// #-44032
  41b190:	add	w8, w2, w8
  41b194:	lsr	w9, w8, #2
  41b198:	cmp	w9, #0xae8
  41b19c:	b.hi	41b1f8 <feof@plt+0x184f8>  // b.pmore
  41b1a0:	mov	w9, #0x6db7                	// #28087
  41b1a4:	and	w8, w8, #0xffff
  41b1a8:	movk	w9, #0xb6db, lsl #16
  41b1ac:	mul	w8, w8, w9
  41b1b0:	mov	w9, #0x9249                	// #37449
  41b1b4:	ror	w8, w8, #2
  41b1b8:	movk	w9, #0x924, lsl #16
  41b1bc:	cmp	w8, w9
  41b1c0:	b.hi	41b1f8 <feof@plt+0x184f8>  // b.pmore
  41b1c4:	b	41b168 <feof@plt+0x18468>
  41b1c8:	ldr	w8, [x19, #8]
  41b1cc:	cmp	w8, #0x1
  41b1d0:	csinc	w8, w8, wzr, gt
  41b1d4:	b	41b1f4 <feof@plt+0x184f4>
  41b1d8:	mov	x0, x20
  41b1dc:	mov	w1, w23
  41b1e0:	mov	x24, x4
  41b1e4:	bl	41d318 <feof@plt+0x1a618>
  41b1e8:	mov	x4, x24
  41b1ec:	tbnz	w0, #0, 41b1f8 <feof@plt+0x184f8>
  41b1f0:	mov	w8, #0x3                   	// #3
  41b1f4:	str	w8, [x19, #8]
  41b1f8:	cbnz	w27, 41b200 <feof@plt+0x18500>
  41b1fc:	str	w23, [x19]
  41b200:	cmp	w22, #0x1
  41b204:	mov	w0, #0x1                   	// #1
  41b208:	strb	w27, [x19, #4]
  41b20c:	b.ne	41b000 <feof@plt+0x18300>  // b.any
  41b210:	and	w8, w26, w25
  41b214:	cbz	w8, 41b000 <feof@plt+0x18300>
  41b218:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b21c:	sub	w3, w21, w4
  41b220:	add	x2, x2, #0x945
  41b224:	b	41b0ec <feof@plt+0x183ec>
  41b228:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b22c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b230:	add	x0, x0, #0x87b
  41b234:	add	x2, x2, #0x892
  41b238:	mov	w1, #0x434                 	// #1076
  41b23c:	bl	408b70 <feof@plt+0x5e70>
  41b240:	mov	x5, xzr
  41b244:	mov	x6, xzr
  41b248:	b	41b24c <feof@plt+0x1854c>
  41b24c:	sub	sp, sp, #0x140
  41b250:	sub	w8, w4, #0x39
  41b254:	stp	x20, x19, [sp, #304]
  41b258:	mov	x19, x6
  41b25c:	cmp	w8, #0x9
  41b260:	mov	x20, x0
  41b264:	stp	x29, x30, [sp, #224]
  41b268:	stp	x28, x27, [sp, #240]
  41b26c:	stp	x26, x25, [sp, #256]
  41b270:	stp	x24, x23, [sp, #272]
  41b274:	stp	x22, x21, [sp, #288]
  41b278:	add	x29, sp, #0xe0
  41b27c:	stp	x1, x5, [sp, #48]
  41b280:	str	x3, [sp, #80]
  41b284:	str	x2, [sp, #40]
  41b288:	b.hi	41b2e4 <feof@plt+0x185e4>  // b.pmore
  41b28c:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41b290:	add	x9, x9, #0x4d0
  41b294:	adr	x10, 41b2a4 <feof@plt+0x185a4>
  41b298:	ldrb	w11, [x9, x8]
  41b29c:	add	x10, x10, x11, lsl #2
  41b2a0:	br	x10
  41b2a4:	add	x8, x20, #0x268
  41b2a8:	add	x9, x20, #0x270
  41b2ac:	add	x10, x20, #0x278
  41b2b0:	b	41b2f0 <feof@plt+0x185f0>
  41b2b4:	add	x8, x20, #0x220
  41b2b8:	add	x9, x20, #0x228
  41b2bc:	add	x10, x20, #0x230
  41b2c0:	b	41b2f0 <feof@plt+0x185f0>
  41b2c4:	add	x8, x20, #0x250
  41b2c8:	add	x9, x20, #0x258
  41b2cc:	add	x10, x20, #0x260
  41b2d0:	b	41b2f0 <feof@plt+0x185f0>
  41b2d4:	add	x8, x20, #0x238
  41b2d8:	add	x9, x20, #0x240
  41b2dc:	add	x10, x20, #0x248
  41b2e0:	b	41b2f0 <feof@plt+0x185f0>
  41b2e4:	add	x8, x20, #0x208
  41b2e8:	add	x9, x20, #0x210
  41b2ec:	add	x10, x20, #0x218
  41b2f0:	ldr	x11, [sp, #56]
  41b2f4:	cmp	x11, #0x0
  41b2f8:	cset	w11, ne  // ne = any
  41b2fc:	cmp	x19, #0x0
  41b300:	cset	w12, ne  // ne = any
  41b304:	cmp	w11, w12
  41b308:	b.ne	41bfe0 <feof@plt+0x192e0>  // b.any
  41b30c:	ldr	w11, [x8, #20]
  41b310:	ldr	x8, [x8]
  41b314:	ldr	w10, [x10]
  41b318:	ldr	x9, [x9]
  41b31c:	str	w11, [sp, #20]
  41b320:	str	x8, [sp, #112]
  41b324:	ldr	x8, [sp, #80]
  41b328:	str	x10, [sp, #32]
  41b32c:	str	x9, [sp, #96]
  41b330:	cbz	x8, 41b358 <feof@plt+0x18658>
  41b334:	ldr	x8, [sp, #48]
  41b338:	mov	w9, #0x100                 	// #256
  41b33c:	ldr	w8, [x8]
  41b340:	cmp	w8, #0x100
  41b344:	csel	w0, w8, w9, hi  // hi = pmore
  41b348:	stur	x0, [x29, #-96]
  41b34c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41b350:	stur	x0, [x29, #-104]
  41b354:	stur	xzr, [x29, #-88]
  41b358:	ldr	x8, [sp, #32]
  41b35c:	str	x20, [sp, #104]
  41b360:	sxtw	x11, w8
  41b364:	ldr	x8, [sp, #40]
  41b368:	str	x11, [sp, #8]
  41b36c:	cbz	x8, 41bd94 <feof@plt+0x19094>
  41b370:	ldr	x8, [sp, #80]
  41b374:	mov	w9, #0x20                  	// #32
  41b378:	mov	x10, #0xffffffffffffffff    	// #-1
  41b37c:	mov	w20, #0x1                   	// #1
  41b380:	cmp	x8, #0x0
  41b384:	sub	x8, x29, #0x68
  41b388:	csel	x8, x8, xzr, ne  // ne = any
  41b38c:	cmp	x11, #0x20
  41b390:	str	x8, [sp, #88]
  41b394:	csel	x8, x11, x9, cc  // cc = lo, ul, last
  41b398:	lsl	x8, x10, x8
  41b39c:	mov	x23, xzr
  41b3a0:	mov	x21, xzr
  41b3a4:	movk	w20, #0x6000, lsl #16
  41b3a8:	eor	x8, x8, #0xffffffff
  41b3ac:	str	x8, [sp, #64]
  41b3b0:	b	41b3c8 <feof@plt+0x186c8>
  41b3b4:	tbz	w0, #0, 41bde4 <feof@plt+0x190e4>
  41b3b8:	ldr	x8, [sp, #40]
  41b3bc:	add	x23, x23, #0x1
  41b3c0:	cmp	x23, x8
  41b3c4:	b.eq	41bd98 <feof@plt+0x19098>  // b.none
  41b3c8:	ldp	x8, x12, [sp, #48]
  41b3cc:	lsl	x10, x23, #4
  41b3d0:	add	x9, x8, x10
  41b3d4:	ldr	x8, [x9, #8]
  41b3d8:	add	x10, x12, x10
  41b3dc:	cmp	x12, #0x0
  41b3e0:	csel	x21, x10, x21, ne  // ne = any
  41b3e4:	ldrb	w11, [x8]
  41b3e8:	cmp	w11, #0x4c
  41b3ec:	b.eq	41b450 <feof@plt+0x18750>  // b.none
  41b3f0:	cmp	w11, #0x55
  41b3f4:	b.eq	41b450 <feof@plt+0x18750>  // b.none
  41b3f8:	cmp	w11, #0x75
  41b3fc:	b.ne	41b4e8 <feof@plt+0x187e8>  // b.any
  41b400:	add	x10, x8, #0x1
  41b404:	cbz	x21, 41b420 <feof@plt+0x18720>
  41b408:	ldr	w11, [x21]
  41b40c:	cmp	w11, w20
  41b410:	b.cs	41b420 <feof@plt+0x18720>  // b.hs, b.nlast
  41b414:	ldr	w12, [x21, #4]
  41b418:	add	w11, w12, w11
  41b41c:	str	w11, [x21]
  41b420:	ldrb	w11, [x10]
  41b424:	cmp	w11, #0x38
  41b428:	b.ne	41b458 <feof@plt+0x18758>  // b.any
  41b42c:	add	x10, x8, #0x2
  41b430:	cbz	x21, 41b454 <feof@plt+0x18754>
  41b434:	ldr	w11, [x21]
  41b438:	cmp	w11, w20
  41b43c:	b.cs	41b454 <feof@plt+0x18754>  // b.hs, b.nlast
  41b440:	ldr	w12, [x21, #4]
  41b444:	add	w11, w12, w11
  41b448:	str	w11, [x21]
  41b44c:	b	41b454 <feof@plt+0x18754>
  41b450:	add	x10, x8, #0x1
  41b454:	ldrb	w11, [x10]
  41b458:	cmp	w11, #0x22
  41b45c:	b.eq	41b4f4 <feof@plt+0x187f4>  // b.none
  41b460:	cmp	w11, #0x27
  41b464:	b.eq	41b4f4 <feof@plt+0x187f4>  // b.none
  41b468:	cmp	w11, #0x52
  41b46c:	b.ne	41bdfc <feof@plt+0x190fc>  // b.any
  41b470:	add	x11, x10, #0x2
  41b474:	cbz	x21, 41b4a0 <feof@plt+0x187a0>
  41b478:	ldr	w13, [x21]
  41b47c:	cmp	w13, w20
  41b480:	b.cs	41b4a0 <feof@plt+0x187a0>  // b.hs, b.nlast
  41b484:	ldr	w12, [x21, #4]
  41b488:	add	w13, w12, w13
  41b48c:	cmp	w13, w20
  41b490:	str	w13, [x21]
  41b494:	b.cs	41b4a0 <feof@plt+0x187a0>  // b.hs, b.nlast
  41b498:	add	w12, w12, w13
  41b49c:	str	w12, [x21]
  41b4a0:	ldrb	w12, [x10, #2]
  41b4a4:	add	x24, x10, #0x3
  41b4a8:	cmp	w12, #0x28
  41b4ac:	b.ne	41b4c8 <feof@plt+0x187c8>  // b.any
  41b4b0:	mov	x10, x11
  41b4b4:	cbnz	x21, 41bca0 <feof@plt+0x18fa0>
  41b4b8:	b	41bcb8 <feof@plt+0x18fb8>
  41b4bc:	ldrb	w10, [x24], #1
  41b4c0:	cmp	w10, #0x28
  41b4c4:	b.eq	41bc98 <feof@plt+0x18f98>  // b.none
  41b4c8:	cbz	x21, 41b4bc <feof@plt+0x187bc>
  41b4cc:	ldr	w10, [x21]
  41b4d0:	cmp	w10, w20
  41b4d4:	b.cs	41b4bc <feof@plt+0x187bc>  // b.hs, b.nlast
  41b4d8:	ldr	w12, [x21, #4]
  41b4dc:	add	w10, w12, w10
  41b4e0:	str	w10, [x21]
  41b4e4:	b	41b4bc <feof@plt+0x187bc>
  41b4e8:	mov	x10, x8
  41b4ec:	cmp	w11, #0x22
  41b4f0:	b.ne	41b460 <feof@plt+0x18760>  // b.any
  41b4f4:	add	x24, x10, #0x1
  41b4f8:	cbz	x21, 41b514 <feof@plt+0x18814>
  41b4fc:	ldr	w10, [x21]
  41b500:	cmp	w10, w20
  41b504:	b.cs	41b514 <feof@plt+0x18814>  // b.hs, b.nlast
  41b508:	ldr	w11, [x21, #4]
  41b50c:	add	w10, w11, w10
  41b510:	str	w10, [x21]
  41b514:	ldr	w12, [x9]
  41b518:	cmp	x21, #0x0
  41b51c:	cset	w9, ne  // ne = any
  41b520:	cmp	x19, #0x0
  41b524:	add	x8, x8, x12
  41b528:	sub	x25, x8, #0x1
  41b52c:	cset	w10, eq  // eq = none
  41b530:	cset	w11, ne  // ne = any
  41b534:	cmp	x24, x25
  41b538:	str	x8, [sp, #24]
  41b53c:	b.cs	41b3b8 <feof@plt+0x186b8>  // b.hs, b.nlast
  41b540:	eor	w8, w11, w9
  41b544:	str	w8, [sp, #76]
  41b548:	eor	w8, w10, w9
  41b54c:	str	w8, [sp, #16]
  41b550:	ldr	x8, [sp, #24]
  41b554:	sub	x26, x8, #0x2
  41b558:	b	41b590 <feof@plt+0x18890>
  41b55c:	ldr	x0, [x19]
  41b560:	lsl	w8, w10, #1
  41b564:	lsl	x1, x10, #4
  41b568:	str	w8, [x19, #12]
  41b56c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41b570:	ldr	w8, [x19, #8]
  41b574:	str	x0, [x19]
  41b578:	add	w9, w8, #0x1
  41b57c:	str	w9, [x19, #8]
  41b580:	str	x22, [x0, w8, sxtw #3]
  41b584:	add	x24, x28, #0x2
  41b588:	cmp	x24, x25
  41b58c:	b.cs	41b3b8 <feof@plt+0x186b8>  // b.hs, b.nlast
  41b590:	ldrb	w8, [x24]
  41b594:	mov	x9, x24
  41b598:	cmp	w8, #0x5c
  41b59c:	b.ne	41b5b4 <feof@plt+0x188b4>  // b.any
  41b5a0:	mov	w22, #0x1                   	// #1
  41b5a4:	mov	x28, x24
  41b5a8:	subs	x2, x28, x24
  41b5ac:	b.hi	41b5ec <feof@plt+0x188ec>  // b.pmore
  41b5b0:	b	41b630 <feof@plt+0x18930>
  41b5b4:	cmp	x26, x9
  41b5b8:	add	x8, x9, #0x1
  41b5bc:	b.eq	41b5d8 <feof@plt+0x188d8>  // b.none
  41b5c0:	ldrb	w9, [x9, #1]
  41b5c4:	mov	x28, x8
  41b5c8:	cmp	w9, #0x5c
  41b5cc:	mov	x9, x8
  41b5d0:	b.ne	41b5b4 <feof@plt+0x188b4>  // b.any
  41b5d4:	b	41b5dc <feof@plt+0x188dc>
  41b5d8:	mov	x28, x25
  41b5dc:	cmp	x8, x25
  41b5e0:	cset	w22, cc  // cc = lo, ul, last
  41b5e4:	subs	x2, x28, x24
  41b5e8:	b.ls	41b630 <feof@plt+0x18930>  // b.plast
  41b5ec:	ldr	x8, [sp, #80]
  41b5f0:	cbz	x8, 41b60c <feof@plt+0x1890c>
  41b5f4:	ldr	x0, [sp, #96]
  41b5f8:	ldr	x8, [sp, #112]
  41b5fc:	sub	x3, x29, #0x68
  41b600:	mov	x1, x24
  41b604:	blr	x8
  41b608:	tbz	w0, #0, 41bde4 <feof@plt+0x190e4>
  41b60c:	cbz	x21, 41b630 <feof@plt+0x18930>
  41b610:	ldr	x8, [sp, #112]
  41b614:	adrp	x9, 41c000 <feof@plt+0x19300>
  41b618:	add	x9, x9, #0xf0
  41b61c:	cmp	x8, x9
  41b620:	b.ne	41bf80 <feof@plt+0x19280>  // b.any
  41b624:	sub	w24, w28, w24
  41b628:	cmp	w24, #0x1
  41b62c:	b.ge	41b68c <feof@plt+0x1898c>  // b.tcont
  41b630:	cbz	w22, 41b3b8 <feof@plt+0x186b8>
  41b634:	add	x24, x28, #0x1
  41b638:	cbz	x21, 41b6c0 <feof@plt+0x189c0>
  41b63c:	ldr	w22, [x21]
  41b640:	cmp	w22, w20
  41b644:	b.cs	41b654 <feof@plt+0x18954>  // b.hs, b.nlast
  41b648:	ldr	w8, [x21, #4]
  41b64c:	add	w8, w8, w22
  41b650:	str	w8, [x21]
  41b654:	lsl	x27, x22, #32
  41b658:	b	41b6c8 <feof@plt+0x189c8>
  41b65c:	ldr	x0, [x19]
  41b660:	lsl	w8, w9, #1
  41b664:	lsl	x1, x9, #4
  41b668:	str	w8, [x19, #12]
  41b66c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41b670:	ldr	w8, [x19, #8]
  41b674:	str	x0, [x19]
  41b678:	add	w9, w8, #0x1
  41b67c:	subs	w24, w24, #0x1
  41b680:	str	w9, [x19, #8]
  41b684:	str	x27, [x0, w8, sxtw #3]
  41b688:	b.eq	41b630 <feof@plt+0x18930>  // b.none
  41b68c:	ldr	w27, [x21]
  41b690:	cmp	w27, w20
  41b694:	b.cs	41b6a4 <feof@plt+0x189a4>  // b.hs, b.nlast
  41b698:	ldr	w8, [x21, #4]
  41b69c:	add	w8, w8, w27
  41b6a0:	str	w8, [x21]
  41b6a4:	ldp	w8, w9, [x19, #8]
  41b6a8:	bfi	x27, x27, #32, #32
  41b6ac:	sxtw	x9, w9
  41b6b0:	cmp	w8, w9
  41b6b4:	b.ge	41b65c <feof@plt+0x1895c>  // b.tcont
  41b6b8:	ldr	x0, [x19]
  41b6bc:	b	41b678 <feof@plt+0x18978>
  41b6c0:	mov	x22, xzr
  41b6c4:	mov	x27, xzr
  41b6c8:	ldrb	w3, [x24]
  41b6cc:	sub	w8, w3, #0x22
  41b6d0:	cmp	w8, #0x59
  41b6d4:	sturb	w3, [x29, #-48]
  41b6d8:	b.hi	41b774 <feof@plt+0x18a74>  // b.pmore
  41b6dc:	adrp	x11, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41b6e0:	add	x11, x11, #0x4da
  41b6e4:	adr	x9, 41b6f4 <feof@plt+0x189f4>
  41b6e8:	ldrh	w10, [x11, x8, lsl #1]
  41b6ec:	add	x9, x9, x10, lsl #2
  41b6f0:	br	x9
  41b6f4:	ldr	w8, [sp, #76]
  41b6f8:	tbnz	w8, #0, 41bf98 <feof@plt+0x19298>
  41b6fc:	cmp	x24, x25
  41b700:	lsr	x27, x27, #32
  41b704:	b.cs	41b7ac <feof@plt+0x18aac>  // b.hs, b.nlast
  41b708:	mov	x9, xzr
  41b70c:	mov	w1, wzr
  41b710:	add	x8, x28, #0x4
  41b714:	sub	x10, x26, x28
  41b718:	b	41b72c <feof@plt+0x18a2c>
  41b71c:	add	w11, w11, w1, lsl #3
  41b720:	cmp	x10, x9
  41b724:	sub	w1, w11, #0x30
  41b728:	b.eq	41b94c <feof@plt+0x18c4c>  // b.none
  41b72c:	cmp	x9, #0x3
  41b730:	b.eq	41b904 <feof@plt+0x18c04>  // b.none
  41b734:	ldrb	w11, [x24, x9]
  41b738:	and	w12, w11, #0xf8
  41b73c:	cmp	w12, #0x30
  41b740:	b.ne	41b90c <feof@plt+0x18c0c>  // b.any
  41b744:	add	x9, x9, #0x1
  41b748:	cbz	x21, 41b71c <feof@plt+0x18a1c>
  41b74c:	ldr	w27, [x21]
  41b750:	cmp	w27, w20
  41b754:	b.cs	41b71c <feof@plt+0x18a1c>  // b.hs, b.nlast
  41b758:	ldr	w12, [x21, #4]
  41b75c:	add	w12, w12, w27
  41b760:	str	w12, [x21]
  41b764:	b	41b71c <feof@plt+0x18a1c>
  41b768:	ldr	x8, [sp, #104]
  41b76c:	ldrb	w8, [x8, #1154]
  41b770:	cbz	w8, 41bb28 <feof@plt+0x18e28>
  41b774:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41b778:	add	x8, x8, #0x3c4
  41b77c:	ldrh	w8, [x8, x3, lsl #1]
  41b780:	mov	w9, #0xac                  	// #172
  41b784:	tst	w8, w9
  41b788:	b.eq	41b914 <feof@plt+0x18c14>  // b.none
  41b78c:	ldr	x0, [sp, #104]
  41b790:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b794:	mov	w1, #0x2                   	// #2
  41b798:	add	x2, x2, #0xb89
  41b79c:	bl	4223e4 <feof@plt+0x1f6e4>
  41b7a0:	ldr	x3, [sp, #88]
  41b7a4:	cbnz	x3, 41bb44 <feof@plt+0x18e44>
  41b7a8:	b	41bb70 <feof@plt+0x18e70>
  41b7ac:	mov	w1, wzr
  41b7b0:	b	41b950 <feof@plt+0x18c50>
  41b7b4:	orr	x8, x27, x22
  41b7b8:	stp	x24, x8, [x29, #-32]
  41b7bc:	ldr	w8, [sp, #16]
  41b7c0:	stur	wzr, [x29, #-72]
  41b7c4:	stur	xzr, [x29, #-80]
  41b7c8:	tbz	w8, #0, 41bfb0 <feof@plt+0x192b0>
  41b7cc:	ldr	x22, [sp, #88]
  41b7d0:	add	x8, x28, #0x2
  41b7d4:	stur	x8, [x29, #-32]
  41b7d8:	cbz	x21, 41b7f8 <feof@plt+0x18af8>
  41b7dc:	ldr	w8, [x21]
  41b7e0:	cmp	w8, w20
  41b7e4:	b.cs	41b7f4 <feof@plt+0x18af4>  // b.hs, b.nlast
  41b7e8:	ldr	w9, [x21, #4]
  41b7ec:	add	w9, w9, w8
  41b7f0:	str	w9, [x21]
  41b7f4:	stur	w8, [x29, #-20]
  41b7f8:	ldr	x0, [sp, #104]
  41b7fc:	sub	x1, x29, #0x20
  41b800:	sub	x4, x29, #0x50
  41b804:	sub	x5, x29, #0x24
  41b808:	sub	x6, x29, #0x18
  41b80c:	mov	x2, x25
  41b810:	mov	w3, wzr
  41b814:	mov	x7, x21
  41b818:	bl	41adb0 <feof@plt+0x180b0>
  41b81c:	ldur	w9, [x29, #-36]
  41b820:	cmp	w9, #0x80
  41b824:	b.cs	41b9f8 <feof@plt+0x18cf8>  // b.hs, b.nlast
  41b828:	sturb	w9, [x29, #-11]
  41b82c:	mov	x8, #0xffffffffffffffff    	// #-1
  41b830:	mov	w28, #0x1                   	// #1
  41b834:	sub	x14, x29, #0x10
  41b838:	add	x9, x14, x8
  41b83c:	add	x1, x9, #0x6
  41b840:	neg	x2, x8
  41b844:	sub	x0, x29, #0x2c
  41b848:	bl	402640 <memcpy@plt>
  41b84c:	cbz	x22, 41b880 <feof@plt+0x18b80>
  41b850:	ldr	x0, [sp, #96]
  41b854:	ldr	x8, [sp, #112]
  41b858:	sub	x1, x29, #0x2c
  41b85c:	mov	x2, x28
  41b860:	mov	x3, x22
  41b864:	blr	x8
  41b868:	tbnz	w0, #0, 41b880 <feof@plt+0x18b80>
  41b86c:	ldr	x0, [sp, #104]
  41b870:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b874:	mov	w1, #0x3                   	// #3
  41b878:	add	x2, x2, #0xc09
  41b87c:	bl	422e3c <feof@plt+0x2013c>
  41b880:	cbz	x21, 41b88c <feof@plt+0x18b8c>
  41b884:	cmp	w28, #0x1
  41b888:	b.ge	41b8c4 <feof@plt+0x18bc4>  // b.tcont
  41b88c:	ldur	x24, [x29, #-32]
  41b890:	b	41b588 <feof@plt+0x18888>
  41b894:	ldr	x0, [x19]
  41b898:	lsl	w8, w9, #1
  41b89c:	lsl	x1, x9, #4
  41b8a0:	str	w8, [x19, #12]
  41b8a4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41b8a8:	ldr	w8, [x19, #8]
  41b8ac:	str	x0, [x19]
  41b8b0:	add	w9, w8, #0x1
  41b8b4:	subs	w28, w28, #0x1
  41b8b8:	str	w9, [x19, #8]
  41b8bc:	str	x22, [x0, w8, sxtw #3]
  41b8c0:	b.eq	41b88c <feof@plt+0x18b8c>  // b.none
  41b8c4:	ldp	w8, w9, [x19, #8]
  41b8c8:	ldur	x22, [x29, #-24]
  41b8cc:	sxtw	x9, w9
  41b8d0:	cmp	w8, w9
  41b8d4:	b.ge	41b894 <feof@plt+0x18b94>  // b.tcont
  41b8d8:	ldr	x0, [x19]
  41b8dc:	b	41b8b0 <feof@plt+0x18bb0>
  41b8e0:	ldr	x0, [sp, #104]
  41b8e4:	ldrb	w8, [x0, #1154]
  41b8e8:	cbz	w8, 41b8fc <feof@plt+0x18bfc>
  41b8ec:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b8f0:	mov	w1, #0x2                   	// #2
  41b8f4:	add	x2, x2, #0xb61
  41b8f8:	bl	4223e4 <feof@plt+0x1f6e4>
  41b8fc:	mov	w8, #0x1b                  	// #27
  41b900:	b	41bb38 <feof@plt+0x18e38>
  41b904:	mov	x24, x8
  41b908:	b	41b950 <feof@plt+0x18c50>
  41b90c:	add	x24, x24, x9
  41b910:	b	41b950 <feof@plt+0x18c50>
  41b914:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41b918:	sub	x0, x29, #0x50
  41b91c:	add	x1, x1, #0x72a
  41b920:	mov	w2, w3
  41b924:	bl	402880 <sprintf@plt>
  41b928:	ldr	x0, [sp, #104]
  41b92c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b930:	sub	x3, x29, #0x50
  41b934:	mov	w1, #0x2                   	// #2
  41b938:	add	x2, x2, #0xba8
  41b93c:	bl	4223e4 <feof@plt+0x1f6e4>
  41b940:	ldr	x3, [sp, #88]
  41b944:	cbnz	x3, 41bb44 <feof@plt+0x18e44>
  41b948:	b	41bb70 <feof@plt+0x18e70>
  41b94c:	mov	x24, x25
  41b950:	ldr	x9, [sp, #64]
  41b954:	mov	w8, w1
  41b958:	and	x28, x9, x8
  41b95c:	cmp	x28, x8
  41b960:	b.eq	41b97c <feof@plt+0x18c7c>  // b.none
  41b964:	ldr	x0, [sp, #104]
  41b968:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b96c:	mov	w1, #0x2                   	// #2
  41b970:	add	x2, x2, #0xcc3
  41b974:	bl	4223e4 <feof@plt+0x1f6e4>
  41b978:	mov	w1, w28
  41b97c:	ldr	x2, [sp, #88]
  41b980:	cbz	x2, 41b9ac <feof@plt+0x18cac>
  41b984:	ldp	x0, x8, [sp, #104]
  41b988:	sub	x3, x29, #0x50
  41b98c:	stur	x8, [x29, #-80]
  41b990:	ldr	x8, [sp, #96]
  41b994:	stur	x8, [x29, #-72]
  41b998:	ldr	x8, [sp, #32]
  41b99c:	stur	w8, [x29, #-64]
  41b9a0:	ldr	w8, [sp, #20]
  41b9a4:	stur	w8, [x29, #-60]
  41b9a8:	bl	41e11c <feof@plt+0x1b41c>
  41b9ac:	cbz	x19, 41b588 <feof@plt+0x18888>
  41b9b0:	ldp	w8, w9, [x19, #8]
  41b9b4:	bfi	x22, x27, #32, #32
  41b9b8:	sxtw	x9, w9
  41b9bc:	cmp	w8, w9
  41b9c0:	b.ge	41b9cc <feof@plt+0x18ccc>  // b.tcont
  41b9c4:	ldr	x0, [x19]
  41b9c8:	b	41b9e8 <feof@plt+0x18ce8>
  41b9cc:	ldr	x0, [x19]
  41b9d0:	lsl	w8, w9, #1
  41b9d4:	lsl	x1, x9, #4
  41b9d8:	str	w8, [x19, #12]
  41b9dc:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41b9e0:	ldr	w8, [x19, #8]
  41b9e4:	str	x0, [x19]
  41b9e8:	add	w9, w8, #0x1
  41b9ec:	str	w9, [x19, #8]
  41b9f0:	str	x22, [x0, w8, sxtw #3]
  41b9f4:	b	41b588 <feof@plt+0x18888>
  41b9f8:	adrp	x11, 460000 <_obstack_memory_used@@Base+0xadd8>
  41b9fc:	adrp	x10, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ba00:	mov	x8, xzr
  41ba04:	add	x11, x11, #0x717
  41ba08:	add	x10, x10, #0x711
  41ba0c:	sub	x14, x29, #0x10
  41ba10:	b	41ba24 <feof@plt+0x18d24>
  41ba14:	sub	x8, x8, #0x1
  41ba18:	add	x10, x10, #0x1
  41ba1c:	add	x11, x11, #0x1
  41ba20:	mov	w9, w12
  41ba24:	mov	w12, #0x80                  	// #128
  41ba28:	add	x13, x14, x8
  41ba2c:	bfxil	w12, w9, #0, #6
  41ba30:	cmp	w9, #0xfbf
  41ba34:	strb	w12, [x13, #5]
  41ba38:	lsr	w12, w9, #6
  41ba3c:	b.hi	41ba14 <feof@plt+0x18d14>  // b.pmore
  41ba40:	ldrb	w13, [x11]
  41ba44:	tst	w12, w13
  41ba48:	b.ne	41ba14 <feof@plt+0x18d14>  // b.any
  41ba4c:	ldrb	w10, [x10]
  41ba50:	mov	w12, #0x2                   	// #2
  41ba54:	sub	x28, x12, x8
  41ba58:	add	x11, x14, x8
  41ba5c:	orr	w9, w10, w9, lsr #6
  41ba60:	cmp	x28, #0x6
  41ba64:	strb	w9, [x11, #4]
  41ba68:	b.ls	41bba8 <feof@plt+0x18ea8>  // b.plast
  41ba6c:	bl	402ac0 <__errno_location@plt>
  41ba70:	mov	w8, #0x7                   	// #7
  41ba74:	str	w8, [x0]
  41ba78:	ldr	x0, [sp, #104]
  41ba7c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ba80:	mov	w1, #0x3                   	// #3
  41ba84:	add	x2, x2, #0x9f0
  41ba88:	bl	422e3c <feof@plt+0x2013c>
  41ba8c:	ldur	x24, [x29, #-32]
  41ba90:	b	41b588 <feof@plt+0x18888>
  41ba94:	mov	w8, #0xd                   	// #13
  41ba98:	b	41bb38 <feof@plt+0x18e38>
  41ba9c:	ldr	x0, [sp, #104]
  41baa0:	ldrb	w8, [x0, #1138]
  41baa4:	cbz	w8, 41bab8 <feof@plt+0x18db8>
  41baa8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41baac:	mov	w1, #0x6                   	// #6
  41bab0:	add	x2, x2, #0xb2f
  41bab4:	bl	422514 <feof@plt+0x1f814>
  41bab8:	mov	w8, #0x7                   	// #7
  41babc:	b	41bb38 <feof@plt+0x18e38>
  41bac0:	mov	w8, #0x8                   	// #8
  41bac4:	b	41bb38 <feof@plt+0x18e38>
  41bac8:	ldr	w8, [sp, #76]
  41bacc:	cbnz	w8, 41bfc8 <feof@plt+0x192c8>
  41bad0:	ldr	x0, [sp, #104]
  41bad4:	ldrb	w8, [x0, #1138]
  41bad8:	cbz	w8, 41baec <feof@plt+0x18dec>
  41badc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bae0:	mov	w1, #0x6                   	// #6
  41bae4:	add	x2, x2, #0xc3f
  41bae8:	bl	422514 <feof@plt+0x1f814>
  41baec:	cbz	x21, 41bbb8 <feof@plt+0x18eb8>
  41baf0:	ldr	w10, [x21]
  41baf4:	cmp	w10, w20
  41baf8:	b.cs	41bb08 <feof@plt+0x18e08>  // b.hs, b.nlast
  41bafc:	ldr	w8, [x21, #4]
  41bb00:	add	w8, w8, w10
  41bb04:	str	w8, [x21]
  41bb08:	bfi	x10, x10, #32, #32
  41bb0c:	b	41bbbc <feof@plt+0x18ebc>
  41bb10:	mov	w8, #0xb                   	// #11
  41bb14:	b	41bb38 <feof@plt+0x18e38>
  41bb18:	mov	w8, #0xa                   	// #10
  41bb1c:	b	41bb38 <feof@plt+0x18e38>
  41bb20:	mov	w8, #0xc                   	// #12
  41bb24:	sturb	w8, [x29, #-48]
  41bb28:	ldr	x3, [sp, #88]
  41bb2c:	cbnz	x3, 41bb44 <feof@plt+0x18e44>
  41bb30:	b	41bb70 <feof@plt+0x18e70>
  41bb34:	mov	w8, #0x9                   	// #9
  41bb38:	sturb	w8, [x29, #-48]
  41bb3c:	ldr	x3, [sp, #88]
  41bb40:	cbz	x3, 41bb70 <feof@plt+0x18e70>
  41bb44:	ldr	x0, [sp, #96]
  41bb48:	ldr	x8, [sp, #112]
  41bb4c:	sub	x1, x29, #0x30
  41bb50:	mov	w2, #0x1                   	// #1
  41bb54:	blr	x8
  41bb58:	tbnz	w0, #0, 41bb70 <feof@plt+0x18e70>
  41bb5c:	ldr	x0, [sp, #104]
  41bb60:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bb64:	mov	w1, #0x3                   	// #3
  41bb68:	add	x2, x2, #0xbc7
  41bb6c:	bl	422e3c <feof@plt+0x2013c>
  41bb70:	cbz	x21, 41b584 <feof@plt+0x18884>
  41bb74:	ldr	w9, [x21]
  41bb78:	cmp	w9, w20
  41bb7c:	b.cs	41bb8c <feof@plt+0x18e8c>  // b.hs, b.nlast
  41bb80:	ldr	w8, [x21, #4]
  41bb84:	add	w8, w8, w9
  41bb88:	str	w8, [x21]
  41bb8c:	ldp	w8, w10, [x19, #8]
  41bb90:	bfi	x22, x9, #32, #32
  41bb94:	sxtw	x10, w10
  41bb98:	cmp	w8, w10
  41bb9c:	b.ge	41b55c <feof@plt+0x1885c>  // b.tcont
  41bba0:	ldr	x0, [x19]
  41bba4:	b	41b578 <feof@plt+0x18878>
  41bba8:	cmp	x8, #0x1
  41bbac:	b.gt	41b84c <feof@plt+0x18b4c>
  41bbb0:	sub	x8, x8, #0x2
  41bbb4:	b	41b838 <feof@plt+0x18b38>
  41bbb8:	orr	x10, x27, x22
  41bbbc:	add	x24, x28, #0x2
  41bbc0:	cmp	x24, x25
  41bbc4:	b.cs	41bbe0 <feof@plt+0x18ee0>  // b.hs, b.nlast
  41bbc8:	ldrb	w8, [x24]
  41bbcc:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41bbd0:	add	x9, x9, #0x2b3
  41bbd4:	ldrb	w9, [x9, x8]
  41bbd8:	cmp	w9, #0x63
  41bbdc:	b.ne	41bbf8 <feof@plt+0x18ef8>  // b.any
  41bbe0:	ldr	x0, [sp, #104]
  41bbe4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bbe8:	mov	w1, #0x3                   	// #3
  41bbec:	add	x2, x2, #0xc71
  41bbf0:	bl	4223e4 <feof@plt+0x1f6e4>
  41bbf4:	b	41b588 <feof@plt+0x18888>
  41bbf8:	ldr	x13, [sp, #24]
  41bbfc:	mov	w8, wzr
  41bc00:	mov	w1, wzr
  41bc04:	lsr	x27, x10, #32
  41bc08:	add	x10, x28, #0x4
  41bc0c:	cbz	x21, 41bc28 <feof@plt+0x18f28>
  41bc10:	ldr	w27, [x21]
  41bc14:	cmp	w27, w20
  41bc18:	b.cs	41bc28 <feof@plt+0x18f28>  // b.hs, b.nlast
  41bc1c:	ldr	w11, [x21, #4]
  41bc20:	add	w11, w11, w27
  41bc24:	str	w11, [x21]
  41bc28:	lsl	w11, w1, #4
  41bc2c:	and	w12, w1, #0xf0000000
  41bc30:	cmp	x13, x10
  41bc34:	orr	w8, w12, w8
  41bc38:	add	w1, w11, w9, uxtb
  41bc3c:	b.eq	41bc64 <feof@plt+0x18f64>  // b.none
  41bc40:	ldurb	w9, [x10, #-1]
  41bc44:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41bc48:	add	x11, x11, #0x2b3
  41bc4c:	add	x10, x10, #0x1
  41bc50:	ldrb	w9, [x11, x9]
  41bc54:	cmp	w9, #0x63
  41bc58:	b.ne	41bc0c <feof@plt+0x18f0c>  // b.any
  41bc5c:	sub	x24, x10, #0x2
  41bc60:	b	41bc68 <feof@plt+0x18f68>
  41bc64:	mov	x24, x25
  41bc68:	ldr	x10, [sp, #64]
  41bc6c:	mov	w9, w1
  41bc70:	and	x28, x10, x9
  41bc74:	cmp	x28, x9
  41bc78:	cset	w9, ne  // ne = any
  41bc7c:	orr	w8, w8, w9
  41bc80:	cbz	w8, 41b97c <feof@plt+0x18c7c>
  41bc84:	ldr	x0, [sp, #104]
  41bc88:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bc8c:	mov	w1, #0x2                   	// #2
  41bc90:	add	x2, x2, #0xc96
  41bc94:	b	41b974 <feof@plt+0x18c74>
  41bc98:	sub	x10, x24, #0x1
  41bc9c:	cbz	x21, 41bcb8 <feof@plt+0x18fb8>
  41bca0:	ldr	w12, [x21]
  41bca4:	cmp	w12, w20
  41bca8:	b.cs	41bcb8 <feof@plt+0x18fb8>  // b.hs, b.nlast
  41bcac:	ldr	w13, [x21, #4]
  41bcb0:	add	w12, w13, w12
  41bcb4:	str	w12, [x21]
  41bcb8:	ldr	w9, [x9]
  41bcbc:	sub	x11, x24, x11
  41bcc0:	add	x10, x10, x11
  41bcc4:	mvn	x11, x11
  41bcc8:	add	x10, x10, #0x2
  41bccc:	add	x8, x8, x9
  41bcd0:	add	x9, x8, x11
  41bcd4:	cmp	x8, x10
  41bcd8:	csel	x22, x8, x9, cc  // cc = lo, ul, last
  41bcdc:	ldr	x8, [sp, #80]
  41bce0:	cbz	x8, 41bd08 <feof@plt+0x19008>
  41bce4:	ldr	x0, [sp, #96]
  41bce8:	ldr	x8, [sp, #112]
  41bcec:	sub	x2, x22, x24
  41bcf0:	sub	x3, x29, #0x68
  41bcf4:	mov	x1, x24
  41bcf8:	blr	x8
  41bcfc:	cbz	x21, 41b3b4 <feof@plt+0x186b4>
  41bd00:	tbnz	w0, #0, 41bd0c <feof@plt+0x1900c>
  41bd04:	b	41b3b4 <feof@plt+0x186b4>
  41bd08:	cbz	x21, 41b3b8 <feof@plt+0x186b8>
  41bd0c:	ldr	x8, [sp, #112]
  41bd10:	adrp	x9, 41c000 <feof@plt+0x19300>
  41bd14:	add	x9, x9, #0xf0
  41bd18:	cmp	x8, x9
  41bd1c:	b.ne	41bff8 <feof@plt+0x192f8>  // b.any
  41bd20:	sub	w22, w22, w24
  41bd24:	cmp	w22, #0x1
  41bd28:	b.ge	41bd60 <feof@plt+0x19060>  // b.tcont
  41bd2c:	b	41b3b8 <feof@plt+0x186b8>
  41bd30:	ldr	x0, [x19]
  41bd34:	lsl	w8, w9, #1
  41bd38:	lsl	x1, x9, #4
  41bd3c:	str	w8, [x19, #12]
  41bd40:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41bd44:	ldr	w8, [x19, #8]
  41bd48:	str	x0, [x19]
  41bd4c:	add	w9, w8, #0x1
  41bd50:	subs	w22, w22, #0x1
  41bd54:	str	w9, [x19, #8]
  41bd58:	str	x24, [x0, w8, sxtw #3]
  41bd5c:	b.eq	41b3b8 <feof@plt+0x186b8>  // b.none
  41bd60:	ldr	w24, [x21]
  41bd64:	cmp	w24, w20
  41bd68:	b.cs	41bd78 <feof@plt+0x19078>  // b.hs, b.nlast
  41bd6c:	ldr	w8, [x21, #4]
  41bd70:	add	w8, w8, w24
  41bd74:	str	w8, [x21]
  41bd78:	ldp	w8, w9, [x19, #8]
  41bd7c:	bfi	x24, x24, #32, #32
  41bd80:	sxtw	x9, w9
  41bd84:	cmp	w8, w9
  41bd88:	b.ge	41bd30 <feof@plt+0x19030>  // b.tcont
  41bd8c:	ldr	x0, [x19]
  41bd90:	b	41bd4c <feof@plt+0x1904c>
  41bd94:	mov	x21, xzr
  41bd98:	ldr	x8, [sp, #80]
  41bd9c:	cbz	x8, 41bef4 <feof@plt+0x191f4>
  41bda0:	ldr	x8, [sp, #104]
  41bda4:	ldr	x10, [sp, #8]
  41bda8:	ldr	x20, [x8, #1216]
  41bdac:	cmp	x20, x10
  41bdb0:	b.ne	41be2c <feof@plt+0x1912c>  // b.any
  41bdb4:	ldp	x10, x8, [x29, #-96]
  41bdb8:	add	x9, x8, #0x1
  41bdbc:	cmp	x9, x10
  41bdc0:	b.ls	41bec8 <feof@plt+0x191c8>  // b.plast
  41bdc4:	ldur	x0, [x29, #-104]
  41bdc8:	add	x1, x10, #0x100
  41bdcc:	stur	x1, [x29, #-96]
  41bdd0:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41bdd4:	ldur	x8, [x29, #-88]
  41bdd8:	stur	x0, [x29, #-104]
  41bddc:	add	x9, x8, #0x1
  41bde0:	b	41becc <feof@plt+0x191cc>
  41bde4:	ldr	x0, [sp, #104]
  41bde8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bdec:	add	x2, x2, #0x756
  41bdf0:	mov	w1, #0x3                   	// #3
  41bdf4:	bl	422e3c <feof@plt+0x2013c>
  41bdf8:	b	41be1c <feof@plt+0x1911c>
  41bdfc:	cbz	x19, 41c010 <feof@plt+0x19310>
  41be00:	ldr	x0, [sp, #104]
  41be04:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41be08:	add	x2, x2, #0xb1c
  41be0c:	mov	w1, #0x3                   	// #3
  41be10:	bl	4223e4 <feof@plt+0x1f6e4>
  41be14:	ldr	x8, [sp, #80]
  41be18:	cbz	x8, 41be24 <feof@plt+0x19124>
  41be1c:	ldur	x0, [x29, #-104]
  41be20:	bl	402770 <free@plt>
  41be24:	mov	w0, wzr
  41be28:	b	41bf60 <feof@plt+0x19260>
  41be2c:	ldrb	w22, [x8, #1242]
  41be30:	ldp	x8, x23, [x29, #-96]
  41be34:	cmp	x20, #0x20
  41be38:	mov	w9, #0x20                  	// #32
  41be3c:	udiv	x24, x10, x20
  41be40:	csel	x25, x20, x9, cc  // cc = lo, ul, last
  41be44:	add	x9, x23, x24
  41be48:	cmp	x9, x8
  41be4c:	b.ls	41be6c <feof@plt+0x1916c>  // b.plast
  41be50:	ldur	x0, [x29, #-104]
  41be54:	add	x1, x8, #0x100
  41be58:	stur	x1, [x29, #-96]
  41be5c:	mov	x26, x10
  41be60:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41be64:	mov	x10, x26
  41be68:	stur	x0, [x29, #-104]
  41be6c:	cmp	x20, x10
  41be70:	b.hi	41beb8 <feof@plt+0x191b8>  // b.pmore
  41be74:	mov	x10, #0xffffffffffffffff    	// #-1
  41be78:	lsl	x10, x10, x25
  41be7c:	mov	w8, wzr
  41be80:	mov	x9, xzr
  41be84:	eor	w10, w10, #0xff
  41be88:	ldur	x12, [x29, #-104]
  41be8c:	mvn	x13, x9
  41be90:	cmp	w22, #0x0
  41be94:	add	x13, x24, x13
  41be98:	csel	x13, x9, x13, eq  // eq = none
  41be9c:	add	x9, x9, #0x1
  41bea0:	and	w11, w8, w10
  41bea4:	lsr	w8, w8, w20
  41bea8:	add	x13, x13, x23
  41beac:	cmp	x24, x9
  41beb0:	strb	w11, [x12, x13]
  41beb4:	b.hi	41be88 <feof@plt+0x19188>  // b.pmore
  41beb8:	ldur	x8, [x29, #-88]
  41bebc:	add	x1, x8, x24
  41bec0:	stur	x1, [x29, #-88]
  41bec4:	b	41bed8 <feof@plt+0x191d8>
  41bec8:	ldur	x0, [x29, #-104]
  41becc:	stur	x9, [x29, #-88]
  41bed0:	strb	wzr, [x0, x8]
  41bed4:	ldur	x1, [x29, #-88]
  41bed8:	ldur	x0, [x29, #-104]
  41bedc:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41bee0:	ldr	x9, [sp, #80]
  41bee4:	stur	x0, [x29, #-104]
  41bee8:	str	x0, [x9, #8]
  41beec:	ldur	x8, [x29, #-88]
  41bef0:	str	w8, [x9]
  41bef4:	cbz	x21, 41bf5c <feof@plt+0x1925c>
  41bef8:	ldr	w20, [x21]
  41befc:	mov	w8, #0x1                   	// #1
  41bf00:	movk	w8, #0x6000, lsl #16
  41bf04:	cmp	w20, w8
  41bf08:	b.cs	41bf18 <feof@plt+0x19218>  // b.hs, b.nlast
  41bf0c:	ldr	w8, [x21, #4]
  41bf10:	add	w8, w8, w20
  41bf14:	str	w8, [x21]
  41bf18:	ldp	w8, w9, [x19, #8]
  41bf1c:	bfi	x20, x20, #32, #32
  41bf20:	sxtw	x9, w9
  41bf24:	cmp	w8, w9
  41bf28:	b.ge	41bf34 <feof@plt+0x19234>  // b.tcont
  41bf2c:	ldr	x0, [x19]
  41bf30:	b	41bf50 <feof@plt+0x19250>
  41bf34:	ldr	x0, [x19]
  41bf38:	lsl	w8, w9, #1
  41bf3c:	lsl	x1, x9, #4
  41bf40:	str	w8, [x19, #12]
  41bf44:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41bf48:	ldr	w8, [x19, #8]
  41bf4c:	str	x0, [x19]
  41bf50:	add	w9, w8, #0x1
  41bf54:	str	w9, [x19, #8]
  41bf58:	str	x20, [x0, w8, sxtw #3]
  41bf5c:	mov	w0, #0x1                   	// #1
  41bf60:	ldp	x20, x19, [sp, #304]
  41bf64:	ldp	x22, x21, [sp, #288]
  41bf68:	ldp	x24, x23, [sp, #272]
  41bf6c:	ldp	x26, x25, [sp, #256]
  41bf70:	ldp	x28, x27, [sp, #240]
  41bf74:	ldp	x29, x30, [sp, #224]
  41bf78:	add	sp, sp, #0x140
  41bf7c:	ret
  41bf80:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bf84:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bf88:	add	x0, x0, #0x87b
  41bf8c:	add	x2, x2, #0xb05
  41bf90:	mov	w1, #0x66c                 	// #1644
  41bf94:	bl	408b70 <feof@plt+0x5e70>
  41bf98:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bf9c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfa0:	add	x0, x0, #0x87b
  41bfa4:	add	x2, x2, #0xcb7
  41bfa8:	mov	w1, #0x540                 	// #1344
  41bfac:	bl	408b70 <feof@plt+0x5e70>
  41bfb0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfb4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfb8:	add	x0, x0, #0x87b
  41bfbc:	add	x2, x2, #0xbfd
  41bfc0:	mov	w1, #0x48d                 	// #1165
  41bfc4:	bl	408b70 <feof@plt+0x5e70>
  41bfc8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfcc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfd0:	add	x0, x0, #0x87b
  41bfd4:	add	x2, x2, #0xc33
  41bfd8:	mov	w1, #0x4f9                 	// #1273
  41bfdc:	bl	408b70 <feof@plt+0x5e70>
  41bfe0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfe4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bfe8:	add	x0, x0, #0x87b
  41bfec:	add	x2, x2, #0xb05
  41bff0:	mov	w1, #0x5fc                 	// #1532
  41bff4:	bl	408b70 <feof@plt+0x5e70>
  41bff8:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41bffc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c000:	add	x0, x0, #0x87b
  41c004:	add	x2, x2, #0xb05
  41c008:	mov	w1, #0x641                 	// #1601
  41c00c:	bl	408b70 <feof@plt+0x5e70>
  41c010:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c014:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c018:	add	x0, x0, #0x87b
  41c01c:	add	x2, x2, #0xb05
  41c020:	mov	w1, #0x64d                 	// #1613
  41c024:	bl	408b70 <feof@plt+0x5e70>
  41c028:	stp	x29, x30, [sp, #-32]!
  41c02c:	sub	w9, w5, #0x39
  41c030:	stp	x20, x19, [sp, #16]
  41c034:	mov	x6, x4
  41c038:	mov	x8, x2
  41c03c:	cmp	w9, #0x9
  41c040:	mov	x19, x0
  41c044:	mov	x29, sp
  41c048:	b.hi	41c084 <feof@plt+0x19384>  // b.pmore
  41c04c:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41c050:	add	x10, x10, #0x58e
  41c054:	adr	x11, 41c064 <feof@plt+0x19364>
  41c058:	ldrb	w12, [x10, x9]
  41c05c:	add	x11, x11, x12, lsl #2
  41c060:	br	x11
  41c064:	add	x9, x19, #0x268
  41c068:	b	41c088 <feof@plt+0x19388>
  41c06c:	add	x9, x19, #0x238
  41c070:	b	41c088 <feof@plt+0x19388>
  41c074:	add	x9, x19, #0x250
  41c078:	b	41c088 <feof@plt+0x19388>
  41c07c:	add	x9, x19, #0x220
  41c080:	b	41c088 <feof@plt+0x19388>
  41c084:	add	x9, x19, #0x208
  41c088:	ldr	x9, [x9]
  41c08c:	adrp	x10, 41c000 <feof@plt+0x19300>
  41c090:	add	x10, x10, #0xf0
  41c094:	cmp	x9, x10
  41c098:	b.eq	41c0a8 <feof@plt+0x193a8>  // b.none
  41c09c:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c0a0:	add	x0, x0, #0x989
  41c0a4:	b	41c0e4 <feof@plt+0x193e4>
  41c0a8:	ldr	x20, [x19, #1000]
  41c0ac:	adrp	x9, 41c000 <feof@plt+0x19300>
  41c0b0:	add	x9, x9, #0x16c
  41c0b4:	mov	x0, x19
  41c0b8:	mov	x2, x3
  41c0bc:	mov	x3, xzr
  41c0c0:	mov	w4, w5
  41c0c4:	mov	x5, x8
  41c0c8:	str	x9, [x19, #1000]
  41c0cc:	bl	41b24c <feof@plt+0x1854c>
  41c0d0:	adrp	x8, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c0d4:	add	x8, x8, #0x9b9
  41c0d8:	tst	w0, #0x1
  41c0dc:	csel	x0, xzr, x8, ne  // ne = any
  41c0e0:	str	x20, [x19, #1000]
  41c0e4:	ldp	x20, x19, [sp, #16]
  41c0e8:	ldp	x29, x30, [sp], #32
  41c0ec:	ret
  41c0f0:	stp	x29, x30, [sp, #-48]!
  41c0f4:	str	x21, [sp, #16]
  41c0f8:	stp	x20, x19, [sp, #32]
  41c0fc:	ldp	x10, x8, [x3, #8]
  41c100:	mov	x19, x3
  41c104:	mov	x20, x2
  41c108:	mov	x21, x1
  41c10c:	add	x9, x8, x2
  41c110:	cmp	x9, x10
  41c114:	mov	x29, sp
  41c118:	b.ls	41c138 <feof@plt+0x19438>  // b.plast
  41c11c:	ldr	x0, [x19]
  41c120:	add	x1, x9, x9, lsr #2
  41c124:	str	x1, [x19, #8]
  41c128:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41c12c:	ldr	x8, [x19, #16]
  41c130:	str	x0, [x19]
  41c134:	b	41c13c <feof@plt+0x1943c>
  41c138:	ldr	x0, [x19]
  41c13c:	add	x0, x0, x8
  41c140:	mov	x1, x21
  41c144:	mov	x2, x20
  41c148:	bl	402640 <memcpy@plt>
  41c14c:	ldr	x8, [x19, #16]
  41c150:	ldr	x21, [sp, #16]
  41c154:	mov	w0, #0x1                   	// #1
  41c158:	add	x8, x8, x20
  41c15c:	str	x8, [x19, #16]
  41c160:	ldp	x20, x19, [sp, #32]
  41c164:	ldp	x29, x30, [sp], #48
  41c168:	ret
  41c16c:	mov	w0, #0x1                   	// #1
  41c170:	ret
  41c174:	sub	sp, sp, #0x40
  41c178:	stp	x29, x30, [sp, #32]
  41c17c:	str	x19, [sp, #48]
  41c180:	add	x19, x0, #0x208
  41c184:	ldr	x8, [x19, #16]
  41c188:	ldr	q0, [x19]
  41c18c:	mov	w4, #0x3e                  	// #62
  41c190:	mov	x5, xzr
  41c194:	str	x8, [sp, #16]
  41c198:	str	q0, [sp]
  41c19c:	ldr	x9, [x0, #1216]
  41c1a0:	adrp	x8, 41c000 <feof@plt+0x19300>
  41c1a4:	add	x8, x8, #0xf0
  41c1a8:	str	x8, [x0, #520]
  41c1ac:	mov	x8, #0xffffffffffffffff    	// #-1
  41c1b0:	mov	x6, xzr
  41c1b4:	add	x29, sp, #0x20
  41c1b8:	str	x8, [x0, #528]
  41c1bc:	str	w9, [x19, #16]
  41c1c0:	bl	41b24c <feof@plt+0x1854c>
  41c1c4:	ldr	q0, [sp]
  41c1c8:	ldr	x8, [sp, #16]
  41c1cc:	and	w0, w0, #0x1
  41c1d0:	str	q0, [x19]
  41c1d4:	str	x8, [x19, #16]
  41c1d8:	ldr	x19, [sp, #48]
  41c1dc:	ldp	x29, x30, [sp, #32]
  41c1e0:	add	sp, sp, #0x40
  41c1e4:	ret
  41c1e8:	sub	sp, sp, #0x70
  41c1ec:	stp	x29, x30, [sp, #16]
  41c1f0:	str	x27, [sp, #32]
  41c1f4:	stp	x26, x25, [sp, #48]
  41c1f8:	stp	x24, x23, [sp, #64]
  41c1fc:	stp	x22, x21, [sp, #80]
  41c200:	stp	x20, x19, [sp, #96]
  41c204:	stp	xzr, xzr, [sp]
  41c208:	mov	x21, x1
  41c20c:	ldr	w8, [x1, #8]!
  41c210:	mov	w10, #0x2                   	// #2
  41c214:	mov	x19, x3
  41c218:	mov	x20, x2
  41c21c:	ldurb	w4, [x1, #-4]
  41c220:	mov	x22, x0
  41c224:	add	x29, sp, #0x10
  41c228:	cmp	w4, #0x3c
  41c22c:	orr	w23, w4, #0x4
  41c230:	cset	w9, eq  // eq = none
  41c234:	cmp	w23, #0x3c
  41c238:	cinc	x10, x10, ne  // ne = any
  41c23c:	add	x9, x10, w9, uxtw #1
  41c240:	cmp	x9, x8
  41c244:	b.ne	41c260 <feof@plt+0x19560>  // b.any
  41c248:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c24c:	add	x2, x2, #0x9d7
  41c250:	mov	w1, #0x3                   	// #3
  41c254:	mov	x0, x22
  41c258:	bl	4223e4 <feof@plt+0x1f6e4>
  41c25c:	b	41c2bc <feof@plt+0x195bc>
  41c260:	mov	x3, sp
  41c264:	mov	w2, #0x1                   	// #1
  41c268:	mov	x0, x22
  41c26c:	mov	x5, xzr
  41c270:	mov	x6, xzr
  41c274:	bl	41b24c <feof@plt+0x1854c>
  41c278:	tbz	w0, #0, 41c2bc <feof@plt+0x195bc>
  41c27c:	ldp	x10, x8, [sp]
  41c280:	cmp	w23, #0x3c
  41c284:	b.eq	41c2ec <feof@plt+0x195ec>  // b.none
  41c288:	ldrb	w24, [x21, #4]
  41c28c:	ldrb	w9, [x22, #1242]
  41c290:	sub	w11, w24, #0x39
  41c294:	cmp	w11, #0x9
  41c298:	b.hi	41c410 <feof@plt+0x19710>  // b.pmore
  41c29c:	adrp	x12, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41c2a0:	add	x12, x12, #0x598
  41c2a4:	adr	x13, 41c2b4 <feof@plt+0x195b4>
  41c2a8:	ldrb	w14, [x12, x11]
  41c2ac:	add	x13, x13, x14, lsl #2
  41c2b0:	br	x13
  41c2b4:	add	x11, x22, #0x278
  41c2b8:	b	41c414 <feof@plt+0x19714>
  41c2bc:	mov	w23, wzr
  41c2c0:	str	wzr, [x20]
  41c2c4:	str	wzr, [x19]
  41c2c8:	mov	w0, w23
  41c2cc:	ldp	x20, x19, [sp, #96]
  41c2d0:	ldp	x22, x21, [sp, #80]
  41c2d4:	ldp	x24, x23, [sp, #64]
  41c2d8:	ldp	x26, x25, [sp, #48]
  41c2dc:	ldr	x27, [sp, #32]
  41c2e0:	ldp	x29, x30, [sp, #16]
  41c2e4:	add	sp, sp, #0x70
  41c2e8:	ret
  41c2ec:	ldr	x25, [x22, #1216]
  41c2f0:	mov	x9, #0xffffffffffffffff    	// #-1
  41c2f4:	mov	w11, #0xff                  	// #255
  41c2f8:	mov	w23, wzr
  41c2fc:	lsl	x9, x9, x25
  41c300:	cmp	x25, #0x20
  41c304:	eor	x9, x9, #0xff
  41c308:	csel	x9, x9, x11, cc  // cc = lo, ul, last
  41c30c:	subs	w24, w10, #0x1
  41c310:	b.eq	41c3a4 <feof@plt+0x196a4>  // b.none
  41c314:	ldr	x10, [x22, #1224]
  41c318:	udiv	x26, x10, x25
  41c31c:	mov	x10, x24
  41c320:	ldrb	w11, [x8], #1
  41c324:	lsl	w12, w23, w25
  41c328:	cmp	x25, #0x20
  41c32c:	csel	w12, w12, wzr, cc  // cc = lo, ul, last
  41c330:	and	w11, w9, w11
  41c334:	subs	x10, x10, #0x1
  41c338:	orr	w23, w12, w11
  41c33c:	b.ne	41c320 <feof@plt+0x19620>  // b.any
  41c340:	cmp	x24, x26
  41c344:	b.ls	41c36c <feof@plt+0x1966c>  // b.plast
  41c348:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c34c:	add	x2, x2, #0xce6
  41c350:	mov	x0, x22
  41c354:	mov	w1, wzr
  41c358:	bl	4223e4 <feof@plt+0x1f6e4>
  41c35c:	cmp	x26, #0x1
  41c360:	b.ls	41c3c4 <feof@plt+0x196c4>  // b.plast
  41c364:	mov	x24, x26
  41c368:	b	41c390 <feof@plt+0x19690>
  41c36c:	cmp	x24, #0x2
  41c370:	b.cc	41c3a4 <feof@plt+0x196a4>  // b.lo, b.ul, b.last
  41c374:	ldrb	w8, [x22, #1137]
  41c378:	cbz	w8, 41c390 <feof@plt+0x19690>
  41c37c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c380:	add	x2, x2, #0xd0f
  41c384:	mov	w1, #0x5                   	// #5
  41c388:	mov	x0, x22
  41c38c:	bl	422514 <feof@plt+0x1f814>
  41c390:	ldr	x25, [x22, #1224]
  41c394:	mov	w8, wzr
  41c398:	cmp	x25, #0x1f
  41c39c:	b.ls	41c3dc <feof@plt+0x196dc>  // b.plast
  41c3a0:	b	41c404 <feof@plt+0x19704>
  41c3a4:	ldrb	w8, [x22, #1240]
  41c3a8:	b	41c3cc <feof@plt+0x196cc>
  41c3ac:	add	x11, x22, #0x248
  41c3b0:	b	41c414 <feof@plt+0x19714>
  41c3b4:	add	x11, x22, #0x260
  41c3b8:	b	41c414 <feof@plt+0x19714>
  41c3bc:	add	x11, x22, #0x230
  41c3c0:	b	41c414 <feof@plt+0x19714>
  41c3c4:	ldrb	w8, [x22, #1240]
  41c3c8:	mov	x24, x26
  41c3cc:	cmp	w8, #0x0
  41c3d0:	cset	w8, ne  // ne = any
  41c3d4:	cmp	x25, #0x1f
  41c3d8:	b.hi	41c404 <feof@plt+0x19704>  // b.pmore
  41c3dc:	mov	w9, #0xffffffff            	// #-1
  41c3e0:	lsl	w9, w9, w25
  41c3e4:	tbnz	w8, #0, 41c3fc <feof@plt+0x196fc>
  41c3e8:	sub	w10, w25, #0x1
  41c3ec:	lsr	w10, w23, w10
  41c3f0:	tbz	w10, #0, 41c3fc <feof@plt+0x196fc>
  41c3f4:	orr	w23, w9, w23
  41c3f8:	b	41c404 <feof@plt+0x19704>
  41c3fc:	mvn	w9, w9
  41c400:	and	w23, w23, w9
  41c404:	str	w24, [x20]
  41c408:	str	w8, [x19]
  41c40c:	b	41c4f8 <feof@plt+0x197f8>
  41c410:	add	x11, x22, #0x218
  41c414:	ldrsw	x25, [x11]
  41c418:	ldr	x11, [x22, #1216]
  41c41c:	mov	w12, #0x20                  	// #32
  41c420:	mov	x26, #0xffffffffffffffff    	// #-1
  41c424:	cmp	x25, #0x20
  41c428:	udiv	x13, x25, x11
  41c42c:	csel	x27, x25, x12, cc  // cc = lo, ul, last
  41c430:	cmp	x11, #0x20
  41c434:	and	x10, x10, #0xffffffff
  41c438:	csel	x15, x11, x12, cc  // cc = lo, ul, last
  41c43c:	cmp	x11, x25
  41c440:	lsl	x12, x13, #1
  41c444:	b.ls	41c450 <feof@plt+0x19750>  // b.plast
  41c448:	mov	w23, wzr
  41c44c:	b	41c498 <feof@plt+0x19798>
  41c450:	lsl	x16, x26, x15
  41c454:	sub	x15, x10, x12
  41c458:	mov	x14, xzr
  41c45c:	mov	w23, wzr
  41c460:	eor	x16, x16, #0xff
  41c464:	add	x17, x15, x13
  41c468:	mvn	x0, x14
  41c46c:	add	x18, x14, x15
  41c470:	cmp	w9, #0x0
  41c474:	add	x0, x17, x0
  41c478:	csel	x18, x0, x18, eq  // eq = none
  41c47c:	ldrb	w18, [x8, x18]
  41c480:	lsl	w0, w23, w11
  41c484:	add	x14, x14, #0x1
  41c488:	cmp	x14, x13
  41c48c:	and	w18, w16, w18
  41c490:	orr	w23, w0, w18
  41c494:	b.cc	41c468 <feof@plt+0x19768>  // b.lo, b.ul, b.last
  41c498:	cmp	x10, x12
  41c49c:	b.ls	41c4b4 <feof@plt+0x197b4>  // b.plast
  41c4a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c4a4:	add	x2, x2, #0xce6
  41c4a8:	mov	x0, x22
  41c4ac:	mov	w1, wzr
  41c4b0:	bl	4223e4 <feof@plt+0x1f6e4>
  41c4b4:	cmp	w25, #0x1f
  41c4b8:	orr	w8, w24, #0x1
  41c4bc:	b.hi	41c4dc <feof@plt+0x197dc>  // b.pmore
  41c4c0:	lsl	x9, x26, x27
  41c4c4:	cmp	w8, #0x3b
  41c4c8:	mvn	x9, x9
  41c4cc:	b.eq	41c4d8 <feof@plt+0x197d8>  // b.none
  41c4d0:	ldrb	w10, [x22, #1241]
  41c4d4:	cbz	w10, 41c510 <feof@plt+0x19810>
  41c4d8:	and	w23, w23, w9
  41c4dc:	mov	w9, #0x1                   	// #1
  41c4e0:	cmp	w8, #0x3b
  41c4e4:	mov	w8, #0x1                   	// #1
  41c4e8:	b.eq	41c4f0 <feof@plt+0x197f0>  // b.none
  41c4ec:	ldrb	w8, [x22, #1241]
  41c4f0:	str	w8, [x19]
  41c4f4:	str	w9, [x20]
  41c4f8:	ldr	x0, [sp, #8]
  41c4fc:	ldr	x8, [x21, #16]
  41c500:	cmp	x0, x8
  41c504:	b.eq	41c2c8 <feof@plt+0x195c8>  // b.none
  41c508:	bl	402770 <free@plt>
  41c50c:	b	41c2c8 <feof@plt+0x195c8>
  41c510:	sub	w10, w25, #0x1
  41c514:	lsr	w10, w23, w10
  41c518:	tbz	w10, #0, 41c4d8 <feof@plt+0x197d8>
  41c51c:	orn	w23, w23, w9
  41c520:	b	41c4dc <feof@plt+0x197dc>
  41c524:	stp	x29, x30, [sp, #-96]!
  41c528:	stp	x28, x27, [sp, #16]
  41c52c:	stp	x26, x25, [sp, #32]
  41c530:	stp	x24, x23, [sp, #48]
  41c534:	stp	x22, x21, [sp, #64]
  41c538:	stp	x20, x19, [sp, #80]
  41c53c:	mov	x29, sp
  41c540:	sub	sp, sp, #0x10
  41c544:	add	x9, x2, #0x10
  41c548:	mov	x8, sp
  41c54c:	and	x9, x9, #0xfffffffffffffff0
  41c550:	mov	x20, x0
  41c554:	sub	x19, x8, x9
  41c558:	mov	sp, x19
  41c55c:	cbz	x2, 41c6c8 <feof@plt+0x199c8>
  41c560:	stur	x20, [x29, #-16]
  41c564:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41c568:	adrp	x28, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c56c:	adrp	x20, 467000 <_obstack_memory_used@@Base+0x11dd8>
  41c570:	mov	x21, x2
  41c574:	mov	x22, x1
  41c578:	mov	x25, xzr
  41c57c:	add	x24, x19, x2
  41c580:	mov	w13, #0x7                   	// #7
  41c584:	mov	w14, #0x3                   	// #3
  41c588:	add	x27, x27, #0x3c4
  41c58c:	add	x28, x28, #0x716
  41c590:	add	x20, x20, #0x2b3
  41c594:	mov	x23, x19
  41c598:	b	41c5ac <feof@plt+0x198ac>
  41c59c:	strb	w8, [x23], #1
  41c5a0:	add	x25, x25, #0x1
  41c5a4:	cmp	x25, x21
  41c5a8:	b.cs	41c6c0 <feof@plt+0x199c0>  // b.hs, b.nlast
  41c5ac:	ldrb	w8, [x22, x25]
  41c5b0:	cmp	w8, #0x5c
  41c5b4:	b.ne	41c59c <feof@plt+0x1989c>  // b.any
  41c5b8:	add	x9, x25, #0x2
  41c5bc:	cmp	x9, x21
  41c5c0:	add	x25, x25, #0x1
  41c5c4:	mov	w8, wzr
  41c5c8:	b.cs	41c614 <feof@plt+0x19914>  // b.hs, b.nlast
  41c5cc:	ldrb	w10, [x22, x25]
  41c5d0:	cmp	w10, #0x75
  41c5d4:	csel	w10, w14, w13, eq  // eq = none
  41c5d8:	ldrb	w11, [x22, x9]
  41c5dc:	ldrh	w12, [x27, x11, lsl #1]
  41c5e0:	tbz	w12, #8, 41c600 <feof@plt+0x19900>
  41c5e4:	ldrb	w11, [x20, x11]
  41c5e8:	subs	w10, w10, #0x1
  41c5ec:	add	x9, x9, #0x1
  41c5f0:	add	w8, w11, w8, lsl #4
  41c5f4:	b.cc	41c600 <feof@plt+0x19900>  // b.lo, b.ul, b.last
  41c5f8:	cmp	x9, x21
  41c5fc:	b.cc	41c5d8 <feof@plt+0x198d8>  // b.lo, b.ul, b.last
  41c600:	cmp	w8, #0x24
  41c604:	sub	x25, x9, #0x1
  41c608:	b.eq	41c59c <feof@plt+0x1989c>  // b.none
  41c60c:	cmp	w8, #0x80
  41c610:	b.cs	41c658 <feof@plt+0x19958>  // b.hs, b.nlast
  41c614:	sturb	w8, [x29, #-3]
  41c618:	mov	x26, #0xffffffffffffffff    	// #-1
  41c61c:	mov	w8, #0x1                   	// #1
  41c620:	sub	x9, x24, x23
  41c624:	cmp	x9, x8
  41c628:	b.cc	41c6d0 <feof@plt+0x199d0>  // b.lo, b.ul, b.last
  41c62c:	tbz	x26, #63, 41c5a0 <feof@plt+0x198a0>
  41c630:	sub	x8, x29, #0x8
  41c634:	add	x8, x8, x26
  41c638:	add	x1, x8, #0x6
  41c63c:	neg	x2, x26
  41c640:	mov	x0, x23
  41c644:	bl	402640 <memcpy@plt>
  41c648:	mov	w14, #0x3                   	// #3
  41c64c:	mov	w13, #0x7                   	// #7
  41c650:	sub	x23, x23, x26
  41c654:	b	41c5a0 <feof@plt+0x198a0>
  41c658:	mov	x9, xzr
  41c65c:	sub	x10, x29, #0x8
  41c660:	b	41c670 <feof@plt+0x19970>
  41c664:	add	x9, x9, #0x1
  41c668:	sub	x10, x10, #0x1
  41c66c:	mov	w8, w11
  41c670:	mov	w11, #0x80                  	// #128
  41c674:	bfxil	w11, w8, #0, #6
  41c678:	cmp	w8, #0xfbf
  41c67c:	strb	w11, [x10, #5]
  41c680:	lsr	w11, w8, #6
  41c684:	b.hi	41c664 <feof@plt+0x19964>  // b.pmore
  41c688:	add	x12, x28, x9
  41c68c:	ldrb	w12, [x12, #1]
  41c690:	tst	w11, w12
  41c694:	b.ne	41c664 <feof@plt+0x19964>  // b.any
  41c698:	adrp	x11, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c69c:	add	x11, x11, #0x710
  41c6a0:	add	x11, x11, x9
  41c6a4:	ldrb	w11, [x11, #1]
  41c6a8:	mov	x12, #0xfffffffffffffffe    	// #-2
  41c6ac:	sub	x26, x12, x9
  41c6b0:	orr	w8, w11, w8, lsr #6
  41c6b4:	strb	w8, [x10, #4]
  41c6b8:	add	x8, x9, #0x2
  41c6bc:	b	41c620 <feof@plt+0x19920>
  41c6c0:	ldur	x20, [x29, #-16]
  41c6c4:	b	41c6f4 <feof@plt+0x199f4>
  41c6c8:	mov	x23, x19
  41c6cc:	b	41c6f4 <feof@plt+0x199f4>
  41c6d0:	bl	402ac0 <__errno_location@plt>
  41c6d4:	ldur	x20, [x29, #-16]
  41c6d8:	mov	w8, #0x7                   	// #7
  41c6dc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c6e0:	str	w8, [x0]
  41c6e4:	add	x2, x2, #0x9f0
  41c6e8:	mov	w1, #0x3                   	// #3
  41c6ec:	mov	x0, x20
  41c6f0:	bl	422e3c <feof@plt+0x2013c>
  41c6f4:	ldr	x0, [x20, #1088]
  41c6f8:	sub	x2, x23, x19
  41c6fc:	mov	w3, #0x1                   	// #1
  41c700:	mov	x1, x19
  41c704:	bl	436a2c <feof@plt+0x33d2c>
  41c708:	mov	sp, x29
  41c70c:	ldp	x20, x19, [sp, #80]
  41c710:	ldp	x22, x21, [sp, #64]
  41c714:	ldp	x24, x23, [sp, #48]
  41c718:	ldp	x26, x25, [sp, #32]
  41c71c:	ldp	x28, x27, [sp, #16]
  41c720:	ldp	x29, x30, [sp], #96
  41c724:	ret
  41c728:	sub	sp, sp, #0x70
  41c72c:	stp	x22, x21, [sp, #80]
  41c730:	mov	x21, x2
  41c734:	mov	x2, x1
  41c738:	adrp	x1, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c73c:	add	x1, x1, #0xac2
  41c740:	add	x8, sp, #0x8
  41c744:	stp	x29, x30, [sp, #32]
  41c748:	str	x25, [sp, #48]
  41c74c:	stp	x24, x23, [sp, #64]
  41c750:	stp	x20, x19, [sp, #96]
  41c754:	add	x29, sp, #0x20
  41c758:	mov	x20, x6
  41c75c:	mov	x19, x5
  41c760:	mov	x24, x4
  41c764:	mov	x23, x3
  41c768:	mov	x22, x0
  41c76c:	bl	41a714 <feof@plt+0x17a14>
  41c770:	ldr	x25, [sp, #8]
  41c774:	adrp	x8, 41c000 <feof@plt+0x19300>
  41c778:	add	x8, x8, #0xf0
  41c77c:	cmp	x25, x8
  41c780:	b.eq	41c800 <feof@plt+0x19b00>  // b.none
  41c784:	ldr	x23, [sp, #16]
  41c788:	cmp	x24, #0x10, lsl #12
  41c78c:	mov	w8, #0x10000               	// #65536
  41c790:	csel	x0, x24, x8, hi  // hi = pmore
  41c794:	str	x0, [sp, #16]
  41c798:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41c79c:	str	x0, [sp, #8]
  41c7a0:	add	x3, sp, #0x8
  41c7a4:	mov	x0, x23
  41c7a8:	mov	x1, x21
  41c7ac:	mov	x2, x24
  41c7b0:	str	xzr, [sp, #24]
  41c7b4:	blr	x25
  41c7b8:	tbnz	w0, #0, 41c7dc <feof@plt+0x19adc>
  41c7bc:	ldr	x3, [x22, #1184]
  41c7c0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c7c4:	adrp	x4, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c7c8:	add	x2, x2, #0xa17
  41c7cc:	add	x4, x4, #0xac2
  41c7d0:	mov	w1, #0x3                   	// #3
  41c7d4:	mov	x0, x22
  41c7d8:	bl	4223e4 <feof@plt+0x1f6e4>
  41c7dc:	mov	x0, x21
  41c7e0:	bl	402770 <free@plt>
  41c7e4:	adrp	x8, 41a000 <feof@plt+0x17300>
  41c7e8:	add	x8, x8, #0x9d4
  41c7ec:	cmp	x25, x8
  41c7f0:	b.ne	41c808 <feof@plt+0x19b08>  // b.any
  41c7f4:	mov	x0, x23
  41c7f8:	bl	402630 <iconv_close@plt>
  41c7fc:	b	41c808 <feof@plt+0x19b08>
  41c800:	stp	x21, x23, [sp, #8]
  41c804:	str	x24, [sp, #24]
  41c808:	ldp	x9, x8, [sp, #16]
  41c80c:	ldr	x0, [sp, #8]
  41c810:	add	x10, x8, #0x1, lsl #12
  41c814:	cmp	x10, x9
  41c818:	add	x1, x8, #0x10
  41c81c:	b.cc	41c828 <feof@plt+0x19b28>  // b.lo, b.ul, b.last
  41c820:	cmp	x1, x9
  41c824:	b.ls	41c834 <feof@plt+0x19b34>  // b.plast
  41c828:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41c82c:	ldr	x8, [sp, #24]
  41c830:	str	x0, [sp, #8]
  41c834:	add	x8, x0, x8
  41c838:	stp	xzr, xzr, [x8]
  41c83c:	ldr	x8, [sp, #24]
  41c840:	ldr	x9, [sp, #8]
  41c844:	cbz	x8, 41c858 <feof@plt+0x19b58>
  41c848:	add	x10, x8, x9
  41c84c:	ldurb	w10, [x10, #-1]
  41c850:	cmp	w10, #0xd
  41c854:	b.eq	41c85c <feof@plt+0x19b5c>  // b.none
  41c858:	mov	w10, #0xa                   	// #10
  41c85c:	strb	w10, [x9, x8]
  41c860:	ldr	x10, [sp, #24]
  41c864:	ldr	x8, [sp, #8]
  41c868:	subs	x9, x10, #0x3
  41c86c:	mov	x0, x8
  41c870:	str	x10, [x20]
  41c874:	b.cc	41c8b0 <feof@plt+0x19bb0>  // b.lo, b.ul, b.last
  41c878:	ldrb	w10, [x8]
  41c87c:	mov	x0, x8
  41c880:	cmp	w10, #0xef
  41c884:	b.ne	41c8b0 <feof@plt+0x19bb0>  // b.any
  41c888:	ldrb	w10, [x8, #1]
  41c88c:	mov	x0, x8
  41c890:	cmp	w10, #0xbb
  41c894:	b.ne	41c8b0 <feof@plt+0x19bb0>  // b.any
  41c898:	ldrb	w10, [x8, #2]
  41c89c:	mov	x0, x8
  41c8a0:	cmp	w10, #0xbf
  41c8a4:	b.ne	41c8b0 <feof@plt+0x19bb0>  // b.any
  41c8a8:	add	x0, x8, #0x3
  41c8ac:	str	x9, [x20]
  41c8b0:	str	x8, [x19]
  41c8b4:	ldp	x20, x19, [sp, #96]
  41c8b8:	ldp	x22, x21, [sp, #80]
  41c8bc:	ldp	x24, x23, [sp, #64]
  41c8c0:	ldr	x25, [sp, #48]
  41c8c4:	ldp	x29, x30, [sp, #32]
  41c8c8:	add	sp, sp, #0x70
  41c8cc:	ret
  41c8d0:	adrp	x0, 460000 <_obstack_memory_used@@Base+0xadd8>
  41c8d4:	add	x0, x0, #0xac2
  41c8d8:	ret
  41c8dc:	stp	x29, x30, [sp, #-48]!
  41c8e0:	stp	x20, x19, [sp, #32]
  41c8e4:	mov	x20, x0
  41c8e8:	str	x2, [x0, #8]
  41c8ec:	mov	x0, x2
  41c8f0:	str	x21, [sp, #16]
  41c8f4:	mov	x29, sp
  41c8f8:	mov	x19, x2
  41c8fc:	bl	42e2f8 <feof@plt+0x2b5f8>
  41c900:	mov	x1, x0
  41c904:	mov	w2, #0x1                   	// #1
  41c908:	mov	x0, x19
  41c90c:	mov	x3, xzr
  41c910:	mov	w21, #0x1                   	// #1
  41c914:	bl	42f174 <feof@plt+0x2c474>
  41c918:	mov	w1, w0
  41c91c:	str	w0, [x20]
  41c920:	mov	x0, x19
  41c924:	bl	42e10c <feof@plt+0x2b40c>
  41c928:	ldrb	w8, [x0, #7]
  41c92c:	lsl	w8, w21, w8
  41c930:	str	w8, [x20, #4]
  41c934:	ldp	x20, x19, [sp, #32]
  41c938:	ldr	x21, [sp, #16]
  41c93c:	ldp	x29, x30, [sp], #48
  41c940:	ret
  41c944:	stp	x29, x30, [sp, #-96]!
  41c948:	str	x27, [sp, #16]
  41c94c:	stp	x26, x25, [sp, #32]
  41c950:	stp	x24, x23, [sp, #48]
  41c954:	stp	x22, x21, [sp, #64]
  41c958:	stp	x20, x19, [sp, #80]
  41c95c:	ldp	x10, x9, [x3, #8]
  41c960:	ldr	x8, [x3]
  41c964:	cmp	x0, #0x0
  41c968:	mov	w11, #0x3                   	// #3
  41c96c:	mov	w12, #0x1                   	// #1
  41c970:	mov	x19, x3
  41c974:	mov	x21, x2
  41c978:	mov	x20, x1
  41c97c:	csel	x22, x11, xzr, ne  // ne = any
  41c980:	add	x8, x8, x9
  41c984:	sub	x9, x10, x9
  41c988:	cinc	x23, x12, ne  // ne = any
  41c98c:	cinc	x24, x12, eq  // eq = none
  41c990:	csel	x25, xzr, x11, ne  // ne = any
  41c994:	mov	x29, sp
  41c998:	mov	x26, x9
  41c99c:	subs	x9, x26, #0x4
  41c9a0:	b.cc	41cac4 <feof@plt+0x19dc4>  // b.lo, b.ul, b.last
  41c9a4:	cbz	x21, 41cb48 <feof@plt+0x19e48>
  41c9a8:	ldrsb	w11, [x20]
  41c9ac:	and	w10, w11, #0xff
  41c9b0:	tbz	w11, #31, 41cb0c <feof@plt+0x19e0c>
  41c9b4:	and	w11, w10, #0xe0
  41c9b8:	cmp	w11, #0xc0
  41c9bc:	b.ne	41c9cc <feof@plt+0x19ccc>  // b.any
  41c9c0:	mov	w13, #0x1f                  	// #31
  41c9c4:	mov	w11, #0x2                   	// #2
  41c9c8:	b	41ca28 <feof@plt+0x19d28>
  41c9cc:	and	w11, w10, #0xf0
  41c9d0:	cmp	w11, #0xe0
  41c9d4:	b.ne	41c9e4 <feof@plt+0x19ce4>  // b.any
  41c9d8:	mov	w13, #0xf                   	// #15
  41c9dc:	mov	w11, #0x3                   	// #3
  41c9e0:	b	41ca28 <feof@plt+0x19d28>
  41c9e4:	and	w11, w10, #0xf8
  41c9e8:	cmp	w11, #0xf0
  41c9ec:	b.ne	41c9fc <feof@plt+0x19cfc>  // b.any
  41c9f0:	mov	w13, #0x7                   	// #7
  41c9f4:	mov	w11, #0x4                   	// #4
  41c9f8:	b	41ca28 <feof@plt+0x19d28>
  41c9fc:	and	w11, w10, #0xfc
  41ca00:	cmp	w11, #0xf8
  41ca04:	b.ne	41ca14 <feof@plt+0x19d14>  // b.any
  41ca08:	mov	w13, #0x3                   	// #3
  41ca0c:	mov	w11, #0x5                   	// #5
  41ca10:	b	41ca28 <feof@plt+0x19d28>
  41ca14:	and	w11, w10, #0xfe
  41ca18:	cmp	w11, #0xfc
  41ca1c:	b.ne	41cb90 <feof@plt+0x19e90>  // b.any
  41ca20:	mov	w13, #0x1                   	// #1
  41ca24:	mov	w11, #0x6                   	// #6
  41ca28:	subs	x12, x21, x11
  41ca2c:	b.cc	41cb78 <feof@plt+0x19e78>  // b.lo, b.ul, b.last
  41ca30:	and	w10, w13, w10
  41ca34:	mov	w14, #0x1                   	// #1
  41ca38:	mov	w13, w10
  41ca3c:	ldrb	w10, [x20, x14]
  41ca40:	and	w15, w10, #0xc0
  41ca44:	cmp	w15, #0x80
  41ca48:	b.ne	41caa4 <feof@plt+0x19da4>  // b.any
  41ca4c:	add	x14, x14, #0x1
  41ca50:	cmp	x11, x14
  41ca54:	bfi	w10, w13, #6, #26
  41ca58:	b.ne	41ca38 <feof@plt+0x19d38>  // b.any
  41ca5c:	cmp	w10, #0x80
  41ca60:	b.cc	41caa4 <feof@plt+0x19da4>  // b.lo, b.ul, b.last
  41ca64:	cmp	x11, #0x3
  41ca68:	b.cc	41ca74 <feof@plt+0x19d74>  // b.lo, b.ul, b.last
  41ca6c:	cmp	w10, #0x800
  41ca70:	b.cc	41caa4 <feof@plt+0x19da4>  // b.lo, b.ul, b.last
  41ca74:	cmp	x11, #0x4
  41ca78:	b.cc	41ca84 <feof@plt+0x19d84>  // b.lo, b.ul, b.last
  41ca7c:	cmp	w10, #0x10, lsl #12
  41ca80:	b.cc	41caa4 <feof@plt+0x19da4>  // b.lo, b.ul, b.last
  41ca84:	cmp	x11, #0x5
  41ca88:	b.cc	41ca94 <feof@plt+0x19d94>  // b.lo, b.ul, b.last
  41ca8c:	cmp	w10, #0x200, lsl #12
  41ca90:	b.cc	41caa4 <feof@plt+0x19da4>  // b.lo, b.ul, b.last
  41ca94:	cmp	x11, #0x6
  41ca98:	b.cc	41caac <feof@plt+0x19dac>  // b.lo, b.ul, b.last
  41ca9c:	lsr	w14, w10, #26
  41caa0:	cbnz	w14, 41caac <feof@plt+0x19dac>
  41caa4:	mov	w27, #0x54                  	// #84
  41caa8:	b	41cac8 <feof@plt+0x19dc8>
  41caac:	mov	w27, #0x54                  	// #84
  41cab0:	tbnz	w10, #31, 41cac8 <feof@plt+0x19dc8>
  41cab4:	and	w13, w13, #0x3ffffe0
  41cab8:	cmp	w13, #0x360
  41cabc:	b.eq	41cac8 <feof@plt+0x19dc8>  // b.none
  41cac0:	b	41cb3c <feof@plt+0x19e3c>
  41cac4:	mov	w27, #0x7                   	// #7
  41cac8:	cbz	x21, 41cb48 <feof@plt+0x19e48>
  41cacc:	cmp	w27, #0x7
  41cad0:	b.ne	41cb7c <feof@plt+0x19e7c>  // b.any
  41cad4:	ldp	x0, x8, [x19]
  41cad8:	add	x27, x26, #0x100
  41cadc:	add	x1, x8, #0x100
  41cae0:	str	x1, [x19, #8]
  41cae4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41cae8:	ldr	x8, [x19, #8]
  41caec:	str	x0, [x19]
  41caf0:	add	x8, x0, x8
  41caf4:	sub	x8, x8, x26
  41caf8:	sub	x8, x8, #0x100
  41cafc:	mov	x26, x27
  41cb00:	subs	x9, x26, #0x4
  41cb04:	b.cs	41c9a4 <feof@plt+0x19ca4>  // b.hs, b.nlast
  41cb08:	b	41cac4 <feof@plt+0x19dc4>
  41cb0c:	sub	x21, x21, #0x1
  41cb10:	add	x20, x20, #0x1
  41cb14:	strb	w10, [x8, x22]
  41cb18:	lsr	w11, w10, #8
  41cb1c:	lsr	w12, w10, #16
  41cb20:	lsr	w10, w10, #24
  41cb24:	strb	w11, [x8, x23]
  41cb28:	strb	w12, [x8, x24]
  41cb2c:	strb	w10, [x8, x25]
  41cb30:	add	x8, x8, #0x4
  41cb34:	cbnz	x21, 41c998 <feof@plt+0x19c98>
  41cb38:	b	41cb4c <feof@plt+0x19e4c>
  41cb3c:	add	x20, x20, x11
  41cb40:	mov	x21, x12
  41cb44:	b	41cb14 <feof@plt+0x19e14>
  41cb48:	mov	x9, x26
  41cb4c:	ldr	x8, [x19, #8]
  41cb50:	mov	w0, #0x1                   	// #1
  41cb54:	sub	x8, x8, x9
  41cb58:	str	x8, [x19, #16]
  41cb5c:	ldp	x20, x19, [sp, #80]
  41cb60:	ldp	x22, x21, [sp, #64]
  41cb64:	ldp	x24, x23, [sp, #48]
  41cb68:	ldp	x26, x25, [sp, #32]
  41cb6c:	ldr	x27, [sp, #16]
  41cb70:	ldp	x29, x30, [sp], #96
  41cb74:	ret
  41cb78:	mov	w27, #0x16                  	// #22
  41cb7c:	bl	402ac0 <__errno_location@plt>
  41cb80:	mov	x8, x0
  41cb84:	mov	w0, wzr
  41cb88:	str	w27, [x8]
  41cb8c:	b	41cb5c <feof@plt+0x19e5c>
  41cb90:	mov	w27, #0x54                  	// #84
  41cb94:	b	41cb7c <feof@plt+0x19e7c>
  41cb98:	sub	sp, sp, #0x70
  41cb9c:	stp	x29, x30, [sp, #16]
  41cba0:	stp	x28, x27, [sp, #32]
  41cba4:	stp	x26, x25, [sp, #48]
  41cba8:	stp	x24, x23, [sp, #64]
  41cbac:	stp	x22, x21, [sp, #80]
  41cbb0:	stp	x20, x19, [sp, #96]
  41cbb4:	ldp	x10, x9, [x3, #8]
  41cbb8:	ldr	x8, [x3]
  41cbbc:	cmp	x0, #0x0
  41cbc0:	mov	w11, #0x2                   	// #2
  41cbc4:	mov	x19, x3
  41cbc8:	mov	x21, x2
  41cbcc:	mov	x20, x1
  41cbd0:	cset	w22, eq  // eq = none
  41cbd4:	cset	w23, ne  // ne = any
  41cbd8:	cinc	x12, x11, ne  // ne = any
  41cbdc:	cinc	x26, x11, eq  // eq = none
  41cbe0:	add	x8, x8, x9
  41cbe4:	sub	x25, x10, x9
  41cbe8:	add	x29, sp, #0x10
  41cbec:	str	x12, [sp, #8]
  41cbf0:	sub	x28, x21, #0x1
  41cbf4:	add	x27, x20, #0x1
  41cbf8:	cbz	x21, 41cdec <feof@plt+0x1a0ec>
  41cbfc:	ldrsb	w10, [x20]
  41cc00:	and	w9, w10, #0xff
  41cc04:	tbnz	w10, #31, 41cc28 <feof@plt+0x19f28>
  41cc08:	mov	x11, x27
  41cc0c:	mov	x10, x28
  41cc10:	cmp	x25, #0x2
  41cc14:	b.cs	41cdc0 <feof@plt+0x1a0c0>  // b.hs, b.nlast
  41cc18:	mov	w24, #0x7                   	// #7
  41cc1c:	cmp	w24, #0x7
  41cc20:	b.eq	41cd48 <feof@plt+0x1a048>  // b.none
  41cc24:	b	41ce04 <feof@plt+0x1a104>
  41cc28:	and	w10, w9, #0xe0
  41cc2c:	cmp	w10, #0xc0
  41cc30:	b.ne	41cc40 <feof@plt+0x19f40>  // b.any
  41cc34:	mov	w11, #0x1f                  	// #31
  41cc38:	mov	w12, #0x2                   	// #2
  41cc3c:	b	41cc9c <feof@plt+0x19f9c>
  41cc40:	and	w10, w9, #0xf0
  41cc44:	cmp	w10, #0xe0
  41cc48:	b.ne	41cc58 <feof@plt+0x19f58>  // b.any
  41cc4c:	mov	w11, #0xf                   	// #15
  41cc50:	mov	w12, #0x3                   	// #3
  41cc54:	b	41cc9c <feof@plt+0x19f9c>
  41cc58:	and	w10, w9, #0xf8
  41cc5c:	cmp	w10, #0xf0
  41cc60:	b.ne	41cc70 <feof@plt+0x19f70>  // b.any
  41cc64:	mov	w11, #0x7                   	// #7
  41cc68:	mov	w12, #0x4                   	// #4
  41cc6c:	b	41cc9c <feof@plt+0x19f9c>
  41cc70:	and	w10, w9, #0xfc
  41cc74:	cmp	w10, #0xf8
  41cc78:	b.ne	41cc88 <feof@plt+0x19f88>  // b.any
  41cc7c:	mov	w11, #0x3                   	// #3
  41cc80:	mov	w12, #0x5                   	// #5
  41cc84:	b	41cc9c <feof@plt+0x19f9c>
  41cc88:	and	w10, w9, #0xfe
  41cc8c:	cmp	w10, #0xfc
  41cc90:	b.ne	41ce34 <feof@plt+0x1a134>  // b.any
  41cc94:	mov	w11, #0x1                   	// #1
  41cc98:	mov	w12, #0x6                   	// #6
  41cc9c:	subs	x10, x21, x12
  41cca0:	b.cc	41ce00 <feof@plt+0x1a100>  // b.lo, b.ul, b.last
  41cca4:	and	w9, w11, w9
  41cca8:	add	x11, x20, x12
  41ccac:	mov	w14, #0x1                   	// #1
  41ccb0:	mov	w13, w9
  41ccb4:	ldrb	w9, [x20, x14]
  41ccb8:	and	w15, w9, #0xc0
  41ccbc:	cmp	w15, #0x80
  41ccc0:	b.ne	41cd3c <feof@plt+0x1a03c>  // b.any
  41ccc4:	add	x14, x14, #0x1
  41ccc8:	cmp	x12, x14
  41cccc:	bfi	w9, w13, #6, #26
  41ccd0:	b.ne	41ccb0 <feof@plt+0x19fb0>  // b.any
  41ccd4:	cmp	w9, #0x80
  41ccd8:	b.cc	41cd3c <feof@plt+0x1a03c>  // b.lo, b.ul, b.last
  41ccdc:	cmp	x12, #0x3
  41cce0:	b.cc	41ccec <feof@plt+0x19fec>  // b.lo, b.ul, b.last
  41cce4:	cmp	w9, #0x800
  41cce8:	b.cc	41cd3c <feof@plt+0x1a03c>  // b.lo, b.ul, b.last
  41ccec:	cmp	x12, #0x4
  41ccf0:	b.cc	41ccfc <feof@plt+0x19ffc>  // b.lo, b.ul, b.last
  41ccf4:	cmp	w9, #0x10, lsl #12
  41ccf8:	b.cc	41cd3c <feof@plt+0x1a03c>  // b.lo, b.ul, b.last
  41ccfc:	cmp	x12, #0x5
  41cd00:	b.cc	41cd0c <feof@plt+0x1a00c>  // b.lo, b.ul, b.last
  41cd04:	cmp	w9, #0x200, lsl #12
  41cd08:	b.cc	41cd3c <feof@plt+0x1a03c>  // b.lo, b.ul, b.last
  41cd0c:	cmp	x12, #0x6
  41cd10:	b.cc	41cd1c <feof@plt+0x1a01c>  // b.lo, b.ul, b.last
  41cd14:	lsr	w12, w9, #26
  41cd18:	cbz	w12, 41cd3c <feof@plt+0x1a03c>
  41cd1c:	mov	w24, #0x54                  	// #84
  41cd20:	tbnz	w9, #31, 41cd40 <feof@plt+0x1a040>
  41cd24:	and	w12, w13, #0x3ffffe0
  41cd28:	cmp	w12, #0x360
  41cd2c:	b.eq	41cd40 <feof@plt+0x1a040>  // b.none
  41cd30:	lsr	w12, w9, #16
  41cd34:	cmp	w12, #0x10
  41cd38:	b.ls	41cd7c <feof@plt+0x1a07c>  // b.plast
  41cd3c:	mov	w24, #0x54                  	// #84
  41cd40:	cmp	w24, #0x7
  41cd44:	b.ne	41ce04 <feof@plt+0x1a104>  // b.any
  41cd48:	ldp	x0, x8, [x19]
  41cd4c:	add	x24, x25, #0x100
  41cd50:	add	x1, x8, #0x100
  41cd54:	str	x1, [x19, #8]
  41cd58:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41cd5c:	ldr	x8, [x19, #8]
  41cd60:	str	x0, [x19]
  41cd64:	add	x8, x0, x8
  41cd68:	sub	x8, x8, x25
  41cd6c:	sub	x8, x8, #0x100
  41cd70:	mov	x25, x24
  41cd74:	cbnz	x21, 41cbfc <feof@plt+0x19efc>
  41cd78:	b	41cdec <feof@plt+0x1a0ec>
  41cd7c:	cbz	w12, 41cc10 <feof@plt+0x19f10>
  41cd80:	cmp	x25, #0x4
  41cd84:	b.cc	41cc18 <feof@plt+0x19f18>  // b.lo, b.ul, b.last
  41cd88:	sub	w14, w9, #0x10, lsl #12
  41cd8c:	mov	w15, #0xd800                	// #55296
  41cd90:	add	w15, w15, w14, lsr #10
  41cd94:	strb	w15, [x8, x23]
  41cd98:	lsr	w15, w15, #8
  41cd9c:	strb	w15, [x8, x22]
  41cda0:	ldr	x15, [sp, #8]
  41cda4:	mov	w9, #0xffffffdc            	// #-36
  41cda8:	mov	x12, #0xfffffffffffffffc    	// #-4
  41cdac:	mov	x13, x26
  41cdb0:	bfxil	w9, w14, #8, #2
  41cdb4:	strb	w14, [x8, x15]
  41cdb8:	mov	w14, #0x4                   	// #4
  41cdbc:	b	41cdd4 <feof@plt+0x1a0d4>
  41cdc0:	strb	w9, [x8, x23]
  41cdc4:	lsr	w9, w9, #8
  41cdc8:	mov	x12, #0xfffffffffffffffe    	// #-2
  41cdcc:	mov	x13, x22
  41cdd0:	mov	w14, #0x2                   	// #2
  41cdd4:	strb	w9, [x8, x13]
  41cdd8:	add	x8, x8, x14
  41cddc:	add	x25, x25, x12
  41cde0:	mov	x20, x11
  41cde4:	mov	x21, x10
  41cde8:	cbnz	x10, 41cbf0 <feof@plt+0x19ef0>
  41cdec:	ldr	x8, [x19, #8]
  41cdf0:	mov	w0, #0x1                   	// #1
  41cdf4:	sub	x8, x8, x25
  41cdf8:	str	x8, [x19, #16]
  41cdfc:	b	41ce14 <feof@plt+0x1a114>
  41ce00:	mov	w24, #0x16                  	// #22
  41ce04:	bl	402ac0 <__errno_location@plt>
  41ce08:	mov	x8, x0
  41ce0c:	mov	w0, wzr
  41ce10:	str	w24, [x8]
  41ce14:	ldp	x20, x19, [sp, #96]
  41ce18:	ldp	x22, x21, [sp, #80]
  41ce1c:	ldp	x24, x23, [sp, #64]
  41ce20:	ldp	x26, x25, [sp, #48]
  41ce24:	ldp	x28, x27, [sp, #32]
  41ce28:	ldp	x29, x30, [sp, #16]
  41ce2c:	add	sp, sp, #0x70
  41ce30:	ret
  41ce34:	mov	w24, #0x54                  	// #84
  41ce38:	b	41ce04 <feof@plt+0x1a104>
  41ce3c:	sub	sp, sp, #0x70
  41ce40:	stp	x29, x30, [sp, #16]
  41ce44:	stp	x28, x27, [sp, #32]
  41ce48:	stp	x26, x25, [sp, #48]
  41ce4c:	stp	x24, x23, [sp, #64]
  41ce50:	stp	x22, x21, [sp, #80]
  41ce54:	stp	x20, x19, [sp, #96]
  41ce58:	ldp	x10, x8, [x3, #8]
  41ce5c:	ldr	x9, [x3]
  41ce60:	cmp	x0, #0x0
  41ce64:	mov	w11, #0x3                   	// #3
  41ce68:	mov	w12, #0x1                   	// #1
  41ce6c:	adrp	x26, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ce70:	adrp	x16, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ce74:	mov	x19, x3
  41ce78:	mov	x20, x2
  41ce7c:	mov	x21, x1
  41ce80:	mov	w13, #0x7ffffffe            	// #2147483646
  41ce84:	mov	w14, #0xd800                	// #55296
  41ce88:	add	x15, sp, #0x8
  41ce8c:	add	x26, x26, #0x716
  41ce90:	add	x16, x16, #0x710
  41ce94:	csel	x17, xzr, x11, ne  // ne = any
  41ce98:	cinc	x25, x12, eq  // eq = none
  41ce9c:	cinc	x27, x12, ne  // ne = any
  41cea0:	csel	x24, x11, xzr, ne  // ne = any
  41cea4:	add	x0, x9, x8
  41cea8:	sub	x23, x10, x8
  41ceac:	mov	x18, #0xfffffffffffffffe    	// #-2
  41ceb0:	add	x29, sp, #0x10
  41ceb4:	mov	x22, x23
  41ceb8:	cmp	x20, #0x4
  41cebc:	b.cs	41cecc <feof@plt+0x1a1cc>  // b.hs, b.nlast
  41cec0:	mov	w23, #0x16                  	// #22
  41cec4:	cbz	x20, 41d038 <feof@plt+0x1a338>
  41cec8:	b	41cf84 <feof@plt+0x1a284>
  41cecc:	ldrb	w8, [x21, x17]
  41ced0:	ldrb	w11, [x21, x25]
  41ced4:	ldrb	w12, [x21, x27]
  41ced8:	ldrb	w9, [x21, x24]
  41cedc:	lsl	w10, w8, #24
  41cee0:	bfi	w10, w11, #16, #8
  41cee4:	bfi	w10, w12, #8, #8
  41cee8:	orr	w8, w10, w9
  41ceec:	cmp	w8, w13
  41cef0:	mov	w23, #0x54                  	// #84
  41cef4:	b.hi	41d06c <feof@plt+0x1a36c>  // b.pmore
  41cef8:	and	w10, w10, #0xfffff800
  41cefc:	cmp	w10, w14
  41cf00:	b.eq	41d06c <feof@plt+0x1a36c>  // b.none
  41cf04:	cmp	w8, #0x80
  41cf08:	b.cs	41cf1c <feof@plt+0x1a21c>  // b.hs, b.nlast
  41cf0c:	strb	w9, [sp, #13]
  41cf10:	mov	x28, #0xffffffffffffffff    	// #-1
  41cf14:	mov	w8, #0x1                   	// #1
  41cf18:	b	41cf74 <feof@plt+0x1a274>
  41cf1c:	mov	x9, xzr
  41cf20:	add	x10, sp, #0x8
  41cf24:	b	41cf34 <feof@plt+0x1a234>
  41cf28:	add	x9, x9, #0x1
  41cf2c:	sub	x10, x10, #0x1
  41cf30:	mov	w8, w11
  41cf34:	mov	w11, #0x80                  	// #128
  41cf38:	bfxil	w11, w8, #0, #6
  41cf3c:	cmp	w8, #0xfbf
  41cf40:	strb	w11, [x10, #5]
  41cf44:	lsr	w11, w8, #6
  41cf48:	b.hi	41cf28 <feof@plt+0x1a228>  // b.pmore
  41cf4c:	add	x12, x26, x9
  41cf50:	ldrb	w12, [x12, #1]
  41cf54:	tst	w11, w12
  41cf58:	b.ne	41cf28 <feof@plt+0x1a228>  // b.any
  41cf5c:	add	x11, x16, x9
  41cf60:	ldrb	w11, [x11, #1]
  41cf64:	sub	x28, x18, x9
  41cf68:	orr	w8, w11, w8, lsr #6
  41cf6c:	strb	w8, [x10, #4]
  41cf70:	add	x8, x9, #0x2
  41cf74:	subs	x23, x22, x8
  41cf78:	b.cs	41cfe8 <feof@plt+0x1a2e8>  // b.hs, b.nlast
  41cf7c:	mov	w23, #0x7                   	// #7
  41cf80:	cbz	x20, 41d038 <feof@plt+0x1a338>
  41cf84:	cmp	w23, #0x7
  41cf88:	b.ne	41d06c <feof@plt+0x1a36c>  // b.any
  41cf8c:	ldp	x0, x8, [x19]
  41cf90:	add	x9, x22, #0x100
  41cf94:	str	x9, [sp]
  41cf98:	mov	x28, x16
  41cf9c:	add	x1, x8, #0x100
  41cfa0:	str	x1, [x19, #8]
  41cfa4:	mov	x23, x17
  41cfa8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41cfac:	ldr	x8, [x19, #8]
  41cfb0:	mov	x18, #0xfffffffffffffffe    	// #-2
  41cfb4:	mov	x17, x23
  41cfb8:	mov	x16, x28
  41cfbc:	add	x8, x0, x8
  41cfc0:	sub	x8, x8, x22
  41cfc4:	ldr	x22, [sp]
  41cfc8:	add	x15, sp, #0x8
  41cfcc:	mov	w14, #0xd800                	// #55296
  41cfd0:	mov	w13, #0x7ffffffe            	// #2147483646
  41cfd4:	str	x0, [x19]
  41cfd8:	sub	x0, x8, #0x100
  41cfdc:	cmp	x20, #0x4
  41cfe0:	b.cs	41cecc <feof@plt+0x1a1cc>  // b.hs, b.nlast
  41cfe4:	b	41cec0 <feof@plt+0x1a1c0>
  41cfe8:	tbz	x28, #63, 41d028 <feof@plt+0x1a328>
  41cfec:	add	x8, x15, x28
  41cff0:	add	x1, x8, #0x6
  41cff4:	neg	x2, x28
  41cff8:	mov	x22, x0
  41cffc:	str	x17, [sp]
  41d000:	bl	402640 <memcpy@plt>
  41d004:	ldr	x17, [sp]
  41d008:	mov	x0, x22
  41d00c:	adrp	x16, 460000 <_obstack_memory_used@@Base+0xadd8>
  41d010:	mov	x18, #0xfffffffffffffffe    	// #-2
  41d014:	add	x16, x16, #0x710
  41d018:	add	x15, sp, #0x8
  41d01c:	mov	w14, #0xd800                	// #55296
  41d020:	mov	w13, #0x7ffffffe            	// #2147483646
  41d024:	sub	x0, x22, x28
  41d028:	subs	x20, x20, #0x4
  41d02c:	add	x21, x21, #0x4
  41d030:	b.ne	41ceb4 <feof@plt+0x1a1b4>  // b.any
  41d034:	b	41d03c <feof@plt+0x1a33c>
  41d038:	mov	x23, x22
  41d03c:	ldr	x8, [x19, #8]
  41d040:	mov	w0, #0x1                   	// #1
  41d044:	sub	x8, x8, x23
  41d048:	str	x8, [x19, #16]
  41d04c:	ldp	x20, x19, [sp, #96]
  41d050:	ldp	x22, x21, [sp, #80]
  41d054:	ldp	x24, x23, [sp, #64]
  41d058:	ldp	x26, x25, [sp, #48]
  41d05c:	ldp	x28, x27, [sp, #32]
  41d060:	ldp	x29, x30, [sp, #16]
  41d064:	add	sp, sp, #0x70
  41d068:	ret
  41d06c:	bl	402ac0 <__errno_location@plt>
  41d070:	mov	x8, x0
  41d074:	mov	w0, wzr
  41d078:	str	w23, [x8]
  41d07c:	b	41d04c <feof@plt+0x1a34c>
  41d080:	sub	sp, sp, #0x80
  41d084:	stp	x29, x30, [sp, #32]
  41d088:	stp	x28, x27, [sp, #48]
  41d08c:	stp	x26, x25, [sp, #64]
  41d090:	stp	x24, x23, [sp, #80]
  41d094:	stp	x22, x21, [sp, #96]
  41d098:	stp	x20, x19, [sp, #112]
  41d09c:	ldp	x10, x8, [x3, #8]
  41d0a0:	ldr	x9, [x3]
  41d0a4:	add	x29, sp, #0x20
  41d0a8:	mov	x20, x2
  41d0ac:	cmp	x0, #0x0
  41d0b0:	mov	w13, #0x2                   	// #2
  41d0b4:	mov	w14, #0x2400                	// #9216
  41d0b8:	adrp	x25, 460000 <_obstack_memory_used@@Base+0xadd8>
  41d0bc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41d0c0:	mov	x19, x3
  41d0c4:	mov	x21, x1
  41d0c8:	movk	w14, #0xfca0, lsl #16
  41d0cc:	sub	x15, x29, #0x8
  41d0d0:	mov	w16, #0x4                   	// #4
  41d0d4:	mov	x17, #0xfffffffffffffffc    	// #-4
  41d0d8:	mov	x18, #0xfffffffffffffffe    	// #-2
  41d0dc:	add	x25, x25, #0x716
  41d0e0:	cset	w26, ne  // ne = any
  41d0e4:	cset	w27, eq  // eq = none
  41d0e8:	cinc	x3, x13, eq  // eq = none
  41d0ec:	cinc	x1, x13, ne  // ne = any
  41d0f0:	add	x0, x9, x8
  41d0f4:	sub	x28, x10, x8
  41d0f8:	add	x2, x2, #0x710
  41d0fc:	mov	x24, x28
  41d100:	cmp	x20, #0x2
  41d104:	b.cc	41d1e0 <feof@plt+0x1a4e0>  // b.lo, b.ul, b.last
  41d108:	ldrb	w9, [x21, x27]
  41d10c:	ldrb	w22, [x21, x26]
  41d110:	and	w8, w9, #0xfc
  41d114:	cmp	w8, #0xd8
  41d118:	bfi	w22, w9, #8, #8
  41d11c:	b.eq	41d140 <feof@plt+0x1a440>  // b.none
  41d120:	cmp	w8, #0xdc
  41d124:	b.eq	41d2f8 <feof@plt+0x1a5f8>  // b.none
  41d128:	cmp	w22, #0x80
  41d12c:	b.cs	41d170 <feof@plt+0x1a470>  // b.hs, b.nlast
  41d130:	sturb	w22, [x29, #-3]
  41d134:	mov	x23, #0xffffffffffffffff    	// #-1
  41d138:	mov	w8, #0x1                   	// #1
  41d13c:	b	41d1cc <feof@plt+0x1a4cc>
  41d140:	cmp	x20, #0x4
  41d144:	b.cc	41d300 <feof@plt+0x1a600>  // b.lo, b.ul, b.last
  41d148:	ldrb	w8, [x21, x3]
  41d14c:	and	w9, w8, #0xfc
  41d150:	cmp	w9, #0xdc
  41d154:	b.ne	41d2f8 <feof@plt+0x1a5f8>  // b.any
  41d158:	ldrb	w9, [x21, x1]
  41d15c:	bfi	w9, w8, #8, #8
  41d160:	add	w8, w9, w22, lsl #10
  41d164:	add	w22, w8, w14
  41d168:	cmp	w22, #0x80
  41d16c:	b.cc	41d130 <feof@plt+0x1a430>  // b.lo, b.ul, b.last
  41d170:	mov	x8, xzr
  41d174:	sub	x9, x29, #0x8
  41d178:	mov	w10, w22
  41d17c:	b	41d18c <feof@plt+0x1a48c>
  41d180:	add	x8, x8, #0x1
  41d184:	sub	x9, x9, #0x1
  41d188:	mov	w10, w11
  41d18c:	mov	w11, #0x80                  	// #128
  41d190:	bfxil	w11, w10, #0, #6
  41d194:	cmp	w10, #0xfbf
  41d198:	strb	w11, [x9, #5]
  41d19c:	lsr	w11, w10, #6
  41d1a0:	b.hi	41d180 <feof@plt+0x1a480>  // b.pmore
  41d1a4:	add	x12, x25, x8
  41d1a8:	ldrb	w12, [x12, #1]
  41d1ac:	tst	w11, w12
  41d1b0:	b.ne	41d180 <feof@plt+0x1a480>  // b.any
  41d1b4:	add	x11, x2, x8
  41d1b8:	ldrb	w11, [x11, #1]
  41d1bc:	sub	x23, x18, x8
  41d1c0:	add	x8, x8, #0x2
  41d1c4:	orr	w10, w11, w10, lsr #6
  41d1c8:	strb	w10, [x9, #4]
  41d1cc:	subs	x28, x24, x8
  41d1d0:	b.cs	41d25c <feof@plt+0x1a55c>  // b.hs, b.nlast
  41d1d4:	mov	w22, #0x7                   	// #7
  41d1d8:	cbz	x20, 41d2c4 <feof@plt+0x1a5c4>
  41d1dc:	b	41d1e8 <feof@plt+0x1a4e8>
  41d1e0:	mov	w22, #0x16                  	// #22
  41d1e4:	cbz	x20, 41d2c4 <feof@plt+0x1a5c4>
  41d1e8:	cmp	w22, #0x7
  41d1ec:	b.ne	41d304 <feof@plt+0x1a604>  // b.any
  41d1f0:	ldp	x0, x8, [x19]
  41d1f4:	mov	x28, x1
  41d1f8:	mov	x23, x3
  41d1fc:	add	x22, x24, #0x100
  41d200:	add	x1, x8, #0x100
  41d204:	str	x1, [x19, #8]
  41d208:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41d20c:	ldr	x8, [x19, #8]
  41d210:	mov	w14, #0x2400                	// #9216
  41d214:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41d218:	str	x0, [x19]
  41d21c:	add	x8, x0, x8
  41d220:	sub	x8, x8, x24
  41d224:	sub	x0, x8, #0x100
  41d228:	mov	x24, x22
  41d22c:	mov	w13, #0x2                   	// #2
  41d230:	movk	w14, #0xfca0, lsl #16
  41d234:	sub	x15, x29, #0x8
  41d238:	mov	w16, #0x4                   	// #4
  41d23c:	mov	x17, #0xfffffffffffffffc    	// #-4
  41d240:	mov	x18, #0xfffffffffffffffe    	// #-2
  41d244:	mov	x3, x23
  41d248:	mov	x1, x28
  41d24c:	add	x2, x2, #0x710
  41d250:	cmp	x20, #0x2
  41d254:	b.cs	41d108 <feof@plt+0x1a408>  // b.hs, b.nlast
  41d258:	b	41d1e0 <feof@plt+0x1a4e0>
  41d25c:	tbz	x23, #63, 41d2a8 <feof@plt+0x1a5a8>
  41d260:	add	x8, x15, x23
  41d264:	stp	x3, x1, [sp, #8]
  41d268:	add	x1, x8, #0x6
  41d26c:	neg	x2, x23
  41d270:	mov	x24, x0
  41d274:	bl	402640 <memcpy@plt>
  41d278:	ldp	x3, x1, [sp, #8]
  41d27c:	mov	x0, x24
  41d280:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41d284:	mov	w14, #0x2400                	// #9216
  41d288:	add	x2, x2, #0x710
  41d28c:	mov	x18, #0xfffffffffffffffe    	// #-2
  41d290:	mov	x17, #0xfffffffffffffffc    	// #-4
  41d294:	mov	w16, #0x4                   	// #4
  41d298:	sub	x15, x29, #0x8
  41d29c:	movk	w14, #0xfca0, lsl #16
  41d2a0:	mov	w13, #0x2                   	// #2
  41d2a4:	sub	x0, x24, x23
  41d2a8:	cmp	w22, #0x10, lsl #12
  41d2ac:	csel	x8, x13, x16, cc  // cc = lo, ul, last
  41d2b0:	csel	x9, x18, x17, cc  // cc = lo, ul, last
  41d2b4:	adds	x20, x9, x20
  41d2b8:	add	x21, x21, x8
  41d2bc:	b.ne	41d0fc <feof@plt+0x1a3fc>  // b.any
  41d2c0:	b	41d2c8 <feof@plt+0x1a5c8>
  41d2c4:	mov	x28, x24
  41d2c8:	ldr	x8, [x19, #8]
  41d2cc:	mov	w0, #0x1                   	// #1
  41d2d0:	sub	x8, x8, x28
  41d2d4:	str	x8, [x19, #16]
  41d2d8:	ldp	x20, x19, [sp, #112]
  41d2dc:	ldp	x22, x21, [sp, #96]
  41d2e0:	ldp	x24, x23, [sp, #80]
  41d2e4:	ldp	x26, x25, [sp, #64]
  41d2e8:	ldp	x28, x27, [sp, #48]
  41d2ec:	ldp	x29, x30, [sp, #32]
  41d2f0:	add	sp, sp, #0x80
  41d2f4:	ret
  41d2f8:	mov	w22, #0x54                  	// #84
  41d2fc:	b	41d304 <feof@plt+0x1a604>
  41d300:	mov	w22, #0x16                  	// #22
  41d304:	bl	402ac0 <__errno_location@plt>
  41d308:	mov	x8, x0
  41d30c:	mov	w0, wzr
  41d310:	str	w22, [x8]
  41d314:	b	41d2d8 <feof@plt+0x1a5d8>
  41d318:	mov	w3, w1
  41d31c:	cmp	w1, #0x652
  41d320:	mov	x8, x0
  41d324:	b.gt	41d384 <feof@plt+0x1a684>
  41d328:	sub	w9, w3, #0x300
  41d32c:	cmp	w9, #0x45
  41d330:	b.hi	41dbfc <feof@plt+0x1aefc>  // b.pmore
  41d334:	adrp	x10, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41d338:	add	x10, x10, #0x5a2
  41d33c:	adr	x11, 41d350 <feof@plt+0x1a650>
  41d340:	ldrh	w12, [x10, x9, lsl #1]
  41d344:	add	x11, x11, x12, lsl #2
  41d348:	mov	w0, #0x1                   	// #1
  41d34c:	br	x11
  41d350:	mov	w8, #0x1eff                	// #7935
  41d354:	cmp	w2, w8
  41d358:	mov	w0, wzr
  41d35c:	b.gt	41dd14 <feof@plt+0x1b014>
  41d360:	sub	w8, w2, #0x41
  41d364:	cmp	w8, #0x10c
  41d368:	b.hi	41df2c <feof@plt+0x1b22c>  // b.pmore
  41d36c:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41d370:	add	x9, x9, #0x700
  41d374:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d378:	ldrh	w11, [x9, x8, lsl #1]
  41d37c:	add	x10, x10, x11, lsl #2
  41d380:	br	x10
  41d384:	cmp	w3, #0xcd4
  41d388:	b.gt	41d3cc <feof@plt+0x1a6cc>
  41d38c:	cmp	w3, #0xb3d
  41d390:	b.le	41d43c <feof@plt+0x1a73c>
  41d394:	cmp	w3, #0xbbd
  41d398:	b.le	41d4a0 <feof@plt+0x1a7a0>
  41d39c:	cmp	w3, #0xc55
  41d3a0:	b.gt	41d544 <feof@plt+0x1a844>
  41d3a4:	cmp	w3, #0xbbe
  41d3a8:	b.eq	41daf0 <feof@plt+0x1adf0>  // b.none
  41d3ac:	cmp	w3, #0xbd7
  41d3b0:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d3b4:	cmp	w2, #0xb92
  41d3b8:	mov	w0, wzr
  41d3bc:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41d3c0:	cmp	w2, #0xbc6
  41d3c4:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41d3c8:	b	41e108 <feof@plt+0x1b408>
  41d3cc:	cmp	w3, #0xdde
  41d3d0:	b.le	41d470 <feof@plt+0x1a770>
  41d3d4:	mov	w9, #0x3098                	// #12440
  41d3d8:	cmp	w3, w9
  41d3dc:	b.le	41d4c4 <feof@plt+0x1a7c4>
  41d3e0:	mov	w9, #0x10b9                	// #4281
  41d3e4:	movk	w9, #0x1, lsl #16
  41d3e8:	cmp	w3, w9
  41d3ec:	b.gt	41d560 <feof@plt+0x1a860>
  41d3f0:	mov	w9, #0x3099                	// #12441
  41d3f4:	cmp	w3, w9
  41d3f8:	b.eq	41db00 <feof@plt+0x1ae00>  // b.none
  41d3fc:	mov	w9, #0x309a                	// #12442
  41d400:	cmp	w3, w9
  41d404:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d408:	mov	w8, #0xffffcf91            	// #-12399
  41d40c:	add	w8, w2, w8
  41d410:	cmp	w8, #0xc
  41d414:	mov	w0, wzr
  41d418:	b.ls	41dc60 <feof@plt+0x1af60>  // b.plast
  41d41c:	mov	w8, #0xffffcf31            	// #-12495
  41d420:	add	w8, w2, w8
  41d424:	cmp	w8, #0xc
  41d428:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41d42c:	mov	w9, #0x1                   	// #1
  41d430:	lsl	w8, w9, w8
  41d434:	mov	w9, #0x1249                	// #4681
  41d438:	b	41df6c <feof@plt+0x1b26c>
  41d43c:	cmp	w3, #0x93b
  41d440:	b.gt	41d500 <feof@plt+0x1a800>
  41d444:	cmp	w3, #0x653
  41d448:	b.eq	41db2c <feof@plt+0x1ae2c>  // b.none
  41d44c:	cmp	w3, #0x654
  41d450:	b.eq	41db38 <feof@plt+0x1ae38>  // b.none
  41d454:	cmp	w3, #0x655
  41d458:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d45c:	sub	w8, w2, #0x622
  41d460:	cmp	w8, #0x6
  41d464:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41d468:	mov	w9, #0x1c                  	// #28
  41d46c:	b	41dbf0 <feof@plt+0x1aef0>
  41d470:	cmp	w3, #0xd56
  41d474:	b.gt	41d524 <feof@plt+0x1a824>
  41d478:	cmp	w3, #0xcd5
  41d47c:	b.eq	41db68 <feof@plt+0x1ae68>  // b.none
  41d480:	cmp	w3, #0xcd6
  41d484:	b.eq	41d554 <feof@plt+0x1a854>  // b.none
  41d488:	cmp	w3, #0xd3e
  41d48c:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d490:	and	w8, w2, #0xfffffffe
  41d494:	cmp	w8, #0xd46
  41d498:	cset	w0, ne  // ne = any
  41d49c:	ret
  41d4a0:	cmp	w3, #0xb3e
  41d4a4:	b.eq	41d4b8 <feof@plt+0x1a7b8>  // b.none
  41d4a8:	cmp	w3, #0xb56
  41d4ac:	b.eq	41d4b8 <feof@plt+0x1a7b8>  // b.none
  41d4b0:	cmp	w3, #0xb57
  41d4b4:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d4b8:	cmp	w2, #0xb47
  41d4bc:	cset	w0, ne  // ne = any
  41d4c0:	ret
  41d4c4:	cmp	w3, #0xddf
  41d4c8:	b.eq	41d53c <feof@plt+0x1a83c>  // b.none
  41d4cc:	mov	w9, #0x102e                	// #4142
  41d4d0:	cmp	w3, w9
  41d4d4:	b.eq	41db7c <feof@plt+0x1ae7c>  // b.none
  41d4d8:	mov	w9, #0x1b35                	// #6965
  41d4dc:	cmp	w3, w9
  41d4e0:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d4e4:	mov	w8, #0xffffe4fb            	// #-6917
  41d4e8:	add	w8, w2, w8
  41d4ec:	cmp	w8, #0x3e
  41d4f0:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41d4f4:	mov	x9, #0xffffffffffffeeaa    	// #-4438
  41d4f8:	movk	x9, #0x195f, lsl #48
  41d4fc:	b	41d810 <feof@plt+0x1ab10>
  41d500:	cmp	w3, #0x93c
  41d504:	b.eq	41db8c <feof@plt+0x1ae8c>  // b.none
  41d508:	cmp	w3, #0x9be
  41d50c:	b.eq	41d518 <feof@plt+0x1a818>  // b.none
  41d510:	cmp	w3, #0x9d7
  41d514:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d518:	cmp	w2, #0x9c7
  41d51c:	cset	w0, ne  // ne = any
  41d520:	ret
  41d524:	cmp	w3, #0xd57
  41d528:	b.eq	41dba4 <feof@plt+0x1aea4>  // b.none
  41d52c:	cmp	w3, #0xdca
  41d530:	b.eq	41dbb0 <feof@plt+0x1aeb0>  // b.none
  41d534:	cmp	w3, #0xdcf
  41d538:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d53c:	sub	w8, w2, #0xdd9
  41d540:	b	41d58c <feof@plt+0x1a88c>
  41d544:	cmp	w3, #0xc56
  41d548:	b.eq	41dbc8 <feof@plt+0x1aec8>  // b.none
  41d54c:	cmp	w3, #0xcc2
  41d550:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d554:	cmp	w2, #0xcc6
  41d558:	cset	w0, ne  // ne = any
  41d55c:	ret
  41d560:	mov	w9, #0x10ba                	// #4282
  41d564:	movk	w9, #0x1, lsl #16
  41d568:	cmp	w3, w9
  41d56c:	b.eq	41dbd4 <feof@plt+0x1aed4>  // b.none
  41d570:	mov	w9, #0x1127                	// #4391
  41d574:	movk	w9, #0x1, lsl #16
  41d578:	cmp	w3, w9
  41d57c:	b.ne	41dbfc <feof@plt+0x1aefc>  // b.any
  41d580:	mov	w8, #0xeecf                	// #61135
  41d584:	movk	w8, #0xfffe, lsl #16
  41d588:	add	w8, w2, w8
  41d58c:	cmp	w8, #0x1
  41d590:	cset	w0, hi  // hi = pmore
  41d594:	ret
  41d598:	sub	w8, w2, #0x41
  41d59c:	cmp	w8, #0x16f
  41d5a0:	mov	w0, wzr
  41d5a4:	b.ls	41dc94 <feof@plt+0x1af94>  // b.plast
  41d5a8:	mov	w8, #0xffffe100            	// #-7936
  41d5ac:	add	w8, w2, w8
  41d5b0:	cmp	w8, #0xfe
  41d5b4:	b.hi	41dff8 <feof@plt+0x1b2f8>  // b.pmore
  41d5b8:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41d5bc:	add	x9, x9, #0x502
  41d5c0:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d5c4:	ldrh	w11, [x9, x8, lsl #1]
  41d5c8:	add	x10, x10, x11, lsl #2
  41d5cc:	br	x10
  41d5d0:	sub	w8, w2, #0x41
  41d5d4:	cmp	w8, #0x39
  41d5d8:	mov	w0, wzr
  41d5dc:	b.hi	41d600 <feof@plt+0x1a900>  // b.pmore
  41d5e0:	mov	w9, #0x1                   	// #1
  41d5e4:	lsl	x8, x9, x8
  41d5e8:	mov	x9, #0x43d5                	// #17365
  41d5ec:	movk	x9, #0x354, lsl #16
  41d5f0:	movk	x9, #0x43d5, lsl #32
  41d5f4:	movk	x9, #0x354, lsl #48
  41d5f8:	tst	x8, x9
  41d5fc:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41d600:	mov	w8, #0xffffe160            	// #-7840
  41d604:	add	w8, w2, w8
  41d608:	cmp	w8, #0x2d
  41d60c:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41d610:	mov	w9, #0x1                   	// #1
  41d614:	lsl	x8, x9, x8
  41d618:	mov	x9, #0x3                   	// #3
  41d61c:	movk	x9, #0x300, lsl #16
  41d620:	movk	x9, #0x3000, lsl #32
  41d624:	b	41d880 <feof@plt+0x1ab80>
  41d628:	sub	w8, w2, #0x41
  41d62c:	cmp	w8, #0xc2
  41d630:	mov	w0, wzr
  41d634:	b.hi	41df50 <feof@plt+0x1b250>  // b.pmore
  41d638:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d63c:	add	x9, x9, #0xf48
  41d640:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d644:	ldrh	w11, [x9, x8, lsl #1]
  41d648:	add	x10, x10, x11, lsl #2
  41d64c:	br	x10
  41d650:	cmp	w2, #0x390
  41d654:	mov	w0, wzr
  41d658:	b.gt	41dcac <feof@plt+0x1afac>
  41d65c:	sub	w8, w2, #0x41
  41d660:	cmp	w8, #0xbb
  41d664:	b.hi	41e080 <feof@plt+0x1b380>  // b.pmore
  41d668:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d66c:	add	x9, x9, #0xdd0
  41d670:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d674:	ldrh	w11, [x9, x8, lsl #1]
  41d678:	add	x10, x10, x11, lsl #2
  41d67c:	br	x10
  41d680:	cmp	w2, #0x40f
  41d684:	mov	w0, wzr
  41d688:	b.le	41dda4 <feof@plt+0x1b0a4>
  41d68c:	mov	w8, #0x1e9f                	// #7839
  41d690:	cmp	w2, w8
  41d694:	b.gt	41dfcc <feof@plt+0x1b2cc>
  41d698:	sub	w8, w2, #0x410
  41d69c:	cmp	w8, #0x33
  41d6a0:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41d6a4:	mov	w9, #0x1                   	// #1
  41d6a8:	lsl	x8, x9, x8
  41d6ac:	mov	x9, #0x8000800080008       	// #2251834173947912
  41d6b0:	movk	x9, #0x161
  41d6b4:	movk	x9, #0x161, lsl #32
  41d6b8:	b	41d880 <feof@plt+0x1ab80>
  41d6bc:	sub	w8, w2, #0x41
  41d6c0:	cmp	w8, #0x13e
  41d6c4:	mov	w0, wzr
  41d6c8:	b.hi	41e0f0 <feof@plt+0x1b3f0>  // b.pmore
  41d6cc:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d6d0:	add	x9, x9, #0xb52
  41d6d4:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d6d8:	ldrh	w11, [x9, x8, lsl #1]
  41d6dc:	add	x10, x10, x11, lsl #2
  41d6e0:	br	x10
  41d6e4:	cmp	w2, #0x398
  41d6e8:	mov	w0, wzr
  41d6ec:	b.le	41dd80 <feof@plt+0x1b080>
  41d6f0:	sub	w8, w2, #0x399
  41d6f4:	cmp	w8, #0xbd
  41d6f8:	b.hi	41e0a8 <feof@plt+0x1b3a8>  // b.pmore
  41d6fc:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d700:	add	x9, x9, #0x9d6
  41d704:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d708:	ldrh	w11, [x9, x8, lsl #1]
  41d70c:	add	x10, x10, x11, lsl #2
  41d710:	br	x10
  41d714:	sub	w8, w2, #0x41
  41d718:	cmp	w8, #0xc2
  41d71c:	mov	w0, wzr
  41d720:	b.hi	41df50 <feof@plt+0x1b250>  // b.pmore
  41d724:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d728:	add	x9, x9, #0x6e6
  41d72c:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d730:	ldrh	w11, [x9, x8, lsl #1]
  41d734:	add	x10, x10, x11, lsl #2
  41d738:	br	x10
  41d73c:	sub	w8, w2, #0x41
  41d740:	cmp	w8, #0x39
  41d744:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41d748:	mov	x9, #0xfffefffefffefffe    	// #-281479271743490
  41d74c:	movk	x9, #0xffef, lsl #16
  41d750:	movk	x9, #0xaf, lsl #48
  41d754:	b	41d810 <feof@plt+0x1ab10>
  41d758:	sub	w8, w2, #0x4f
  41d75c:	cmp	w8, #0x26
  41d760:	mov	w0, wzr
  41d764:	b.hi	41d780 <feof@plt+0x1aa80>  // b.pmore
  41d768:	mov	w9, #0x1                   	// #1
  41d76c:	lsl	x8, x9, x8
  41d770:	mov	x9, #0x41                  	// #65
  41d774:	movk	x9, #0x41, lsl #32
  41d778:	tst	x8, x9
  41d77c:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41d780:	cmp	w2, #0x423
  41d784:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41d788:	cmp	w2, #0x443
  41d78c:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41d790:	b	41e108 <feof@plt+0x1b408>
  41d794:	sub	w8, w2, #0x41
  41d798:	cmp	w8, #0xbb
  41d79c:	mov	w0, wzr
  41d7a0:	b.hi	41e0c8 <feof@plt+0x1b3c8>  // b.pmore
  41d7a4:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d7a8:	add	x9, x9, #0x56e
  41d7ac:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d7b0:	ldrh	w11, [x9, x8, lsl #1]
  41d7b4:	add	x10, x10, x11, lsl #2
  41d7b8:	br	x10
  41d7bc:	sub	w8, w2, #0x41
  41d7c0:	cmp	w8, #0x34
  41d7c4:	mov	w0, wzr
  41d7c8:	b.hi	41d7ec <feof@plt+0x1aaec>  // b.pmore
  41d7cc:	mov	w9, #0x1                   	// #1
  41d7d0:	lsl	x8, x9, x8
  41d7d4:	mov	x9, #0x4111                	// #16657
  41d7d8:	movk	x9, #0x12, lsl #16
  41d7dc:	movk	x9, #0x4111, lsl #32
  41d7e0:	movk	x9, #0x12, lsl #48
  41d7e4:	tst	x8, x9
  41d7e8:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41d7ec:	sub	w8, w2, #0x474
  41d7f0:	b	41e100 <feof@plt+0x1b400>
  41d7f4:	sub	w8, w2, #0x41
  41d7f8:	cmp	w8, #0x35
  41d7fc:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41d800:	mov	x9, #0xbeee                	// #48878
  41d804:	movk	x9, #0xffed, lsl #16
  41d808:	movk	x9, #0xbeee, lsl #32
  41d80c:	movk	x9, #0xd, lsl #48
  41d810:	lsr	x8, x9, x8
  41d814:	and	w0, w8, #0x1
  41d818:	ret
  41d81c:	mov	w8, #0x1fb2                	// #8114
  41d820:	cmp	w2, w8
  41d824:	mov	w0, wzr
  41d828:	b.gt	41dc24 <feof@plt+0x1af24>
  41d82c:	sub	w8, w2, #0x391
  41d830:	cmp	w8, #0x38
  41d834:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41d838:	mov	w9, #0x1                   	// #1
  41d83c:	lsl	x8, x9, x8
  41d840:	mov	x9, #0x4151                	// #16721
  41d844:	movk	x9, #0x100, lsl #16
  41d848:	b	41d878 <feof@plt+0x1ab78>
  41d84c:	mov	w8, #0x1fb2                	// #8114
  41d850:	cmp	w2, w8
  41d854:	mov	w0, wzr
  41d858:	b.gt	41dc24 <feof@plt+0x1af24>
  41d85c:	sub	w8, w2, #0x391
  41d860:	cmp	w8, #0x38
  41d864:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41d868:	mov	w9, #0x1                   	// #1
  41d86c:	lsl	x8, x9, x8
  41d870:	mov	x9, #0x4151                	// #16721
  41d874:	movk	x9, #0x111, lsl #16
  41d878:	movk	x9, #0x4151, lsl #32
  41d87c:	movk	x9, #0x111, lsl #48
  41d880:	tst	x8, x9
  41d884:	b.eq	41e108 <feof@plt+0x1b408>  // b.none
  41d888:	ret
  41d88c:	sub	w8, w2, #0x4f
  41d890:	cmp	w8, #0x1e2
  41d894:	mov	w0, wzr
  41d898:	b.hi	41de68 <feof@plt+0x1b168>  // b.pmore
  41d89c:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41d8a0:	add	x9, x9, #0x70
  41d8a4:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d8a8:	ldrh	w11, [x9, x8, lsl #1]
  41d8ac:	add	x10, x10, x11, lsl #2
  41d8b0:	br	x10
  41d8b4:	sub	w8, w2, #0x41
  41d8b8:	cmp	w8, #0x1f2
  41d8bc:	mov	w0, wzr
  41d8c0:	b.hi	41de40 <feof@plt+0x1b140>  // b.pmore
  41d8c4:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41d8c8:	add	x9, x9, #0xa9a
  41d8cc:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d8d0:	ldrh	w11, [x9, x8, lsl #1]
  41d8d4:	add	x10, x10, x11, lsl #2
  41d8d8:	br	x10
  41d8dc:	mov	w8, #0x1e77                	// #7799
  41d8e0:	cmp	w2, w8
  41d8e4:	mov	w0, wzr
  41d8e8:	b.gt	41e01c <feof@plt+0x1b31c>
  41d8ec:	sub	w8, w2, #0xd9
  41d8f0:	cmp	w8, #0x13e
  41d8f4:	b.hi	41e0dc <feof@plt+0x1b3dc>  // b.pmore
  41d8f8:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41d8fc:	add	x9, x9, #0x81c
  41d900:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d904:	ldrh	w11, [x9, x8, lsl #1]
  41d908:	add	x10, x10, x11, lsl #2
  41d90c:	br	x10
  41d910:	mov	w8, #0x1ea1                	// #7841
  41d914:	cmp	w2, w8
  41d918:	mov	w0, wzr
  41d91c:	b.gt	41de1c <feof@plt+0x1b11c>
  41d920:	sub	w8, w2, #0x61
  41d924:	cmp	w8, #0xa2
  41d928:	b.hi	41de90 <feof@plt+0x1b190>  // b.pmore
  41d92c:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41d930:	add	x9, x9, #0x620
  41d934:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d938:	ldrh	w11, [x9, x8, lsl #1]
  41d93c:	add	x10, x10, x11, lsl #2
  41d940:	br	x10
  41d944:	mov	w8, #0xffffe1a0            	// #-7776
  41d948:	add	w8, w2, w8
  41d94c:	cmp	w8, #0x37
  41d950:	mov	w0, wzr
  41d954:	b.ls	41dd64 <feof@plt+0x1b064>  // b.plast
  41d958:	sub	w8, w2, #0x15a
  41d95c:	cmp	w8, #0xb
  41d960:	b.hi	41d978 <feof@plt+0x1ac78>  // b.pmore
  41d964:	mov	w9, #0x1                   	// #1
  41d968:	lsl	w8, w9, w8
  41d96c:	mov	w9, #0xccf                 	// #3279
  41d970:	tst	w8, w9
  41d974:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41d978:	sub	w8, w2, #0x53
  41d97c:	cmp	w8, #0x21
  41d980:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41d984:	mov	w9, #0x1                   	// #1
  41d988:	lsl	x8, x9, x8
  41d98c:	tst	x8, #0x300000003
  41d990:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41d994:	b	41e108 <feof@plt+0x1b408>
  41d998:	sub	w8, w2, #0x43
  41d99c:	cmp	w8, #0x1dc
  41d9a0:	mov	w0, wzr
  41d9a4:	b.hi	41dcec <feof@plt+0x1afec>  // b.pmore
  41d9a8:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41d9ac:	add	x9, x9, #0xea
  41d9b0:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d9b4:	ldrh	w11, [x9, x8, lsl #1]
  41d9b8:	add	x10, x10, x11, lsl #2
  41d9bc:	br	x10
  41d9c0:	sub	w8, w2, #0x41
  41d9c4:	cmp	w8, #0x1f0
  41d9c8:	mov	w0, wzr
  41d9cc:	b.hi	41dd3c <feof@plt+0x1b03c>  // b.pmore
  41d9d0:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x3dd8>
  41d9d4:	add	x9, x9, #0xb24
  41d9d8:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41d9dc:	ldrh	w11, [x9, x8, lsl #1]
  41d9e0:	add	x10, x10, x11, lsl #2
  41d9e4:	br	x10
  41d9e8:	sub	w8, w2, #0x44
  41d9ec:	cmp	w8, #0x1d3
  41d9f0:	mov	w0, wzr
  41d9f4:	b.hi	41deb4 <feof@plt+0x1b1b4>  // b.pmore
  41d9f8:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x3dd8>
  41d9fc:	add	x9, x9, #0x5c0
  41da00:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41da04:	ldrh	w11, [x9, x8, lsl #1]
  41da08:	add	x10, x10, x11, lsl #2
  41da0c:	br	x10
  41da10:	cmp	w2, #0x21d
  41da14:	mov	w0, wzr
  41da18:	b.le	41ddfc <feof@plt+0x1b0fc>
  41da1c:	mov	w8, #0xffffe1de            	// #-7714
  41da20:	add	w8, w2, w8
  41da24:	cmp	w8, #0x5
  41da28:	b.hi	41da40 <feof@plt+0x1ad40>  // b.pmore
  41da2c:	mov	w9, #0x1                   	// #1
  41da30:	lsl	w8, w9, w8
  41da34:	mov	w9, #0x33                  	// #51
  41da38:	tst	w8, w9
  41da3c:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41da40:	sub	w8, w2, #0x21e
  41da44:	b	41e100 <feof@plt+0x1b400>
  41da48:	sub	w8, w2, #0x45
  41da4c:	cmp	w8, #0x1d2
  41da50:	mov	w0, wzr
  41da54:	b.hi	41df04 <feof@plt+0x1b204>  // b.pmore
  41da58:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x3dd8>
  41da5c:	add	x9, x9, #0x72
  41da60:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41da64:	ldrh	w11, [x9, x8, lsl #1]
  41da68:	add	x10, x10, x11, lsl #2
  41da6c:	br	x10
  41da70:	sub	w8, w2, #0x42
  41da74:	cmp	w8, #0x1dd
  41da78:	mov	w0, wzr
  41da7c:	b.hi	41dedc <feof@plt+0x1b1dc>  // b.pmore
  41da80:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41da84:	add	x9, x9, #0xb8a
  41da88:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41da8c:	ldrh	w11, [x9, x8, lsl #1]
  41da90:	add	x10, x10, x11, lsl #2
  41da94:	br	x10
  41da98:	mov	w8, #0xffffe100            	// #-7936
  41da9c:	add	w8, w2, w8
  41daa0:	cmp	w8, #0xfe
  41daa4:	mov	w0, wzr
  41daa8:	b.hi	41df78 <feof@plt+0x1b278>  // b.pmore
  41daac:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41dab0:	add	x9, x9, #0x98c
  41dab4:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dab8:	ldrh	w11, [x9, x8, lsl #1]
  41dabc:	add	x10, x10, x11, lsl #2
  41dac0:	br	x10
  41dac4:	mov	w8, #0xffffe100            	// #-7936
  41dac8:	add	w8, w2, w8
  41dacc:	cmp	w8, #0xf6
  41dad0:	mov	w0, wzr
  41dad4:	b.hi	41e038 <feof@plt+0x1b338>  // b.pmore
  41dad8:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41dadc:	add	x9, x9, #0x79e
  41dae0:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dae4:	ldrh	w11, [x9, x8, lsl #1]
  41dae8:	add	x10, x10, x11, lsl #2
  41daec:	br	x10
  41daf0:	and	w8, w2, #0xfffffffe
  41daf4:	cmp	w8, #0xbc6
  41daf8:	cset	w0, ne  // ne = any
  41dafc:	ret
  41db00:	mov	w8, #0xffffcfba            	// #-12358
  41db04:	add	w8, w2, w8
  41db08:	cmp	w8, #0xb7
  41db0c:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41db10:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41db14:	add	x9, x9, #0x62e
  41db18:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41db1c:	ldrh	w11, [x9, x8, lsl #1]
  41db20:	add	x10, x10, x11, lsl #2
  41db24:	mov	w0, wzr
  41db28:	br	x10
  41db2c:	cmp	w2, #0x627
  41db30:	cset	w0, ne  // ne = any
  41db34:	ret
  41db38:	sub	w8, w2, #0x627
  41db3c:	cmp	w8, #0x23
  41db40:	mov	w0, wzr
  41db44:	b.ls	41dc78 <feof@plt+0x1af78>  // b.plast
  41db48:	sub	w8, w2, #0x6c1
  41db4c:	cmp	w8, #0x14
  41db50:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41db54:	mov	w9, #0x1                   	// #1
  41db58:	lsl	w8, w9, w8
  41db5c:	mov	w9, #0x1                   	// #1
  41db60:	movk	w9, #0x12, lsl #16
  41db64:	b	41df6c <feof@plt+0x1b26c>
  41db68:	sub	w8, w2, #0xcbf
  41db6c:	cmp	w8, #0xc
  41db70:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41db74:	mov	w9, #0x77e                 	// #1918
  41db78:	b	41dbf0 <feof@plt+0x1aef0>
  41db7c:	mov	w8, #0x1025                	// #4133
  41db80:	cmp	w2, w8
  41db84:	cset	w0, ne  // ne = any
  41db88:	ret
  41db8c:	sub	w8, w2, #0x915
  41db90:	cmp	w8, #0x1f
  41db94:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41db98:	mov	w9, #0xcf78                	// #53112
  41db9c:	movk	w9, #0x33b7, lsl #16
  41dba0:	b	41dbf0 <feof@plt+0x1aef0>
  41dba4:	cmp	w2, #0xd46
  41dba8:	cset	w0, ne  // ne = any
  41dbac:	ret
  41dbb0:	cmp	w2, #0xdd9
  41dbb4:	mov	w0, wzr
  41dbb8:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41dbbc:	cmp	w2, #0xddc
  41dbc0:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41dbc4:	b	41e108 <feof@plt+0x1b408>
  41dbc8:	cmp	w2, #0xc46
  41dbcc:	cset	w0, ne  // ne = any
  41dbd0:	ret
  41dbd4:	mov	w8, #0xeecf                	// #61135
  41dbd8:	movk	w8, #0xfffe, lsl #16
  41dbdc:	add	w8, w2, w8
  41dbe0:	add	w8, w8, #0x98
  41dbe4:	cmp	w8, #0xd
  41dbe8:	b.cs	41e108 <feof@plt+0x1b408>  // b.hs, b.nlast
  41dbec:	mov	w9, #0xffa                 	// #4090
  41dbf0:	lsr	w8, w9, w8
  41dbf4:	and	w0, w8, #0x1
  41dbf8:	ret
  41dbfc:	stp	x29, x30, [sp, #-16]!
  41dc00:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41dc04:	add	x2, x2, #0xae6
  41dc08:	mov	w1, #0x4                   	// #4
  41dc0c:	mov	x0, x8
  41dc10:	mov	x29, sp
  41dc14:	bl	4223e4 <feof@plt+0x1f6e4>
  41dc18:	mov	w0, #0x1                   	// #1
  41dc1c:	ldp	x29, x30, [sp], #16
  41dc20:	ret
  41dc24:	mov	w8, #0xffffe04d            	// #-8115
  41dc28:	add	w8, w2, w8
  41dc2c:	cmp	w8, #0x19
  41dc30:	b.hi	41dc4c <feof@plt+0x1af4c>  // b.pmore
  41dc34:	mov	w9, #0x1                   	// #1
  41dc38:	lsl	w8, w9, w8
  41dc3c:	mov	w9, #0x201                 	// #513
  41dc40:	movk	w9, #0x201, lsl #16
  41dc44:	tst	w8, w9
  41dc48:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41dc4c:	mov	w8, #0x1ff3                	// #8179
  41dc50:	cmp	w2, w8
  41dc54:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41dc58:	mov	w8, #0x1ffc                	// #8188
  41dc5c:	b	41dfec <feof@plt+0x1b2ec>
  41dc60:	mov	w9, #0x1                   	// #1
  41dc64:	lsl	w8, w9, w8
  41dc68:	mov	w9, #0x1249                	// #4681
  41dc6c:	tst	w8, w9
  41dc70:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41dc74:	b	41d41c <feof@plt+0x1a71c>
  41dc78:	mov	w9, #0x1                   	// #1
  41dc7c:	lsl	x8, x9, x8
  41dc80:	mov	x9, #0x1                   	// #1
  41dc84:	movk	x9, #0xa, lsl #32
  41dc88:	tst	x8, x9
  41dc8c:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41dc90:	b	41db48 <feof@plt+0x1ae48>
  41dc94:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41dc98:	add	x9, x9, #0xce
  41dc9c:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dca0:	ldrh	w11, [x9, x8, lsl #1]
  41dca4:	add	x10, x10, x11, lsl #2
  41dca8:	br	x10
  41dcac:	cmp	w2, #0x417
  41dcb0:	b.le	41dfa8 <feof@plt+0x1b2a8>
  41dcb4:	mov	w8, #0x1e35                	// #7733
  41dcb8:	cmp	w2, w8
  41dcbc:	b.le	41e060 <feof@plt+0x1b360>
  41dcc0:	mov	w8, #0xffffe1ca            	// #-7734
  41dcc4:	add	w8, w2, w8
  41dcc8:	cmp	w8, #0x25
  41dccc:	b.hi	41dfdc <feof@plt+0x1b2dc>  // b.pmore
  41dcd0:	mov	w9, #0x1                   	// #1
  41dcd4:	lsl	x8, x9, x8
  41dcd8:	mov	x9, #0x3                   	// #3
  41dcdc:	movk	x9, #0x30, lsl #32
  41dce0:	tst	x8, x9
  41dce4:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41dce8:	b	41dfdc <feof@plt+0x1b2dc>
  41dcec:	mov	w8, #0xffffe1f6            	// #-7690
  41dcf0:	add	w8, w2, w8
  41dcf4:	cmp	w8, #0xbd
  41dcf8:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41dcfc:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41dd00:	add	x9, x9, #0x4a4
  41dd04:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dd08:	ldrh	w11, [x9, x8, lsl #1]
  41dd0c:	add	x10, x10, x11, lsl #2
  41dd10:	br	x10
  41dd14:	mov	w8, #0xffffe100            	// #-7936
  41dd18:	add	w8, w2, w8
  41dd1c:	cmp	w8, #0xfe
  41dd20:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41dd24:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41dd28:	add	x9, x9, #0xa6a
  41dd2c:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dd30:	ldrh	w11, [x9, x8, lsl #1]
  41dd34:	add	x10, x10, x11, lsl #2
  41dd38:	br	x10
  41dd3c:	mov	w8, #0xffffe200            	// #-7680
  41dd40:	add	w8, w2, w8
  41dd44:	cmp	w8, #0xf1
  41dd48:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41dd4c:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x3dd8>
  41dd50:	add	x9, x9, #0xf06
  41dd54:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dd58:	ldrh	w11, [x9, x8, lsl #1]
  41dd5c:	add	x10, x10, x11, lsl #2
  41dd60:	br	x10
  41dd64:	mov	w9, #0x1                   	// #1
  41dd68:	lsl	x8, x9, x8
  41dd6c:	mov	x9, #0xcf3                 	// #3315
  41dd70:	movk	x9, #0x80, lsl #48
  41dd74:	tst	x8, x9
  41dd78:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41dd7c:	b	41d958 <feof@plt+0x1ac58>
  41dd80:	sub	w8, w2, #0x41
  41dd84:	cmp	w8, #0xb4
  41dd88:	b.hi	41e0fc <feof@plt+0x1b3fc>  // b.pmore
  41dd8c:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41dd90:	add	x9, x9, #0x86c
  41dd94:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dd98:	ldrh	w11, [x9, x8, lsl #1]
  41dd9c:	add	x10, x10, x11, lsl #2
  41dda0:	br	x10
  41dda4:	sub	w8, w2, #0x41
  41dda8:	cmp	w8, #0x34
  41ddac:	b.hi	41ddcc <feof@plt+0x1b0cc>  // b.pmore
  41ddb0:	mov	w9, #0x1                   	// #1
  41ddb4:	lsl	x8, x9, x8
  41ddb8:	mov	x9, #0x10001000100010      	// #4503668347895824
  41ddbc:	movk	x9, #0x4151
  41ddc0:	movk	x9, #0x4151, lsl #32
  41ddc4:	tst	x8, x9
  41ddc8:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41ddcc:	sub	w8, w2, #0x391
  41ddd0:	cmp	w8, #0x34
  41ddd4:	b.hi	41ddf4 <feof@plt+0x1b0f4>  // b.pmore
  41ddd8:	mov	w9, #0x1                   	// #1
  41dddc:	lsl	x8, x9, x8
  41dde0:	mov	x9, #0x10001000100010      	// #4503668347895824
  41dde4:	movk	x9, #0x101
  41dde8:	movk	x9, #0x101, lsl #32
  41ddec:	tst	x8, x9
  41ddf0:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41ddf4:	sub	w8, w2, #0x228
  41ddf8:	b	41e100 <feof@plt+0x1b400>
  41ddfc:	sub	w8, w2, #0x124
  41de00:	cmp	w8, #0x2
  41de04:	b.cc	41d888 <feof@plt+0x1ab88>  // b.lo, b.ul, b.last
  41de08:	cmp	w2, #0x48
  41de0c:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41de10:	cmp	w2, #0x68
  41de14:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41de18:	b	41e108 <feof@plt+0x1b408>
  41de1c:	mov	w8, #0xffffe15e            	// #-7842
  41de20:	add	w8, w2, w8
  41de24:	cmp	w8, #0x13
  41de28:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41de2c:	mov	w9, #0x1                   	// #1
  41de30:	lsl	w8, w9, w8
  41de34:	mov	w9, #0xf3ff                	// #62463
  41de38:	movk	w9, #0xf, lsl #16
  41de3c:	b	41df6c <feof@plt+0x1b26c>
  41de40:	mov	w8, #0xffffe1fe            	// #-7682
  41de44:	add	w8, w2, w8
  41de48:	cmp	w8, #0xf7
  41de4c:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41de50:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41de54:	add	x9, x9, #0xe80
  41de58:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41de5c:	ldrh	w11, [x9, x8, lsl #1]
  41de60:	add	x10, x10, x11, lsl #2
  41de64:	br	x10
  41de68:	mov	w8, #0xffffe1b4            	// #-7756
  41de6c:	add	w8, w2, w8
  41de70:	cmp	w8, #0x9b
  41de74:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41de78:	adrp	x9, 45b000 <_obstack_memory_used@@Base+0x5dd8>
  41de7c:	add	x9, x9, #0x436
  41de80:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41de84:	ldrh	w11, [x9, x8, lsl #1]
  41de88:	add	x10, x10, x11, lsl #2
  41de8c:	br	x10
  41de90:	sub	w8, w2, #0x1cd
  41de94:	cmp	w8, #0x5a
  41de98:	b.hi	41e110 <feof@plt+0x1b410>  // b.pmore
  41de9c:	adrp	x9, 45a000 <_obstack_memory_used@@Base+0x4dd8>
  41dea0:	add	x9, x9, #0x766
  41dea4:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41dea8:	ldrh	w11, [x9, x8, lsl #1]
  41deac:	add	x10, x10, x11, lsl #2
  41deb0:	br	x10
  41deb4:	mov	w8, #0xffffe1f6            	// #-7690
  41deb8:	add	w8, w2, w8
  41debc:	cmp	w8, #0xdd
  41dec0:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41dec4:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x3dd8>
  41dec8:	add	x9, x9, #0x968
  41decc:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41ded0:	ldrh	w11, [x9, x8, lsl #1]
  41ded4:	add	x10, x10, x11, lsl #2
  41ded8:	br	x10
  41dedc:	mov	w8, #0xffffe1fe            	// #-7682
  41dee0:	add	w8, w2, w8
  41dee4:	cmp	w8, #0x95
  41dee8:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41deec:	adrp	x9, 458000 <_obstack_memory_used@@Base+0x2dd8>
  41def0:	add	x9, x9, #0xf46
  41def4:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41def8:	ldrh	w11, [x9, x8, lsl #1]
  41defc:	add	x10, x10, x11, lsl #2
  41df00:	br	x10
  41df04:	mov	w8, #0xffffe1ec            	// #-7700
  41df08:	add	w8, w2, w8
  41df0c:	cmp	w8, #0xd3
  41df10:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41df14:	adrp	x9, 459000 <_obstack_memory_used@@Base+0x3dd8>
  41df18:	add	x9, x9, #0x418
  41df1c:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41df20:	ldrh	w11, [x9, x8, lsl #1]
  41df24:	add	x10, x10, x11, lsl #2
  41df28:	br	x10
  41df2c:	sub	w8, w2, #0x391
  41df30:	cmp	w8, #0xa7
  41df34:	b.hi	41df50 <feof@plt+0x1b250>  // b.pmore
  41df38:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41df3c:	add	x9, x9, #0x91a
  41df40:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41df44:	ldrh	w11, [x9, x8, lsl #1]
  41df48:	add	x10, x10, x11, lsl #2
  41df4c:	br	x10
  41df50:	sub	w8, w2, #0x1a0
  41df54:	cmp	w8, #0x10
  41df58:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41df5c:	mov	w9, #0x1                   	// #1
  41df60:	lsl	w8, w9, w8
  41df64:	mov	w9, #0x8003                	// #32771
  41df68:	movk	w9, #0x1, lsl #16
  41df6c:	tst	w8, w9
  41df70:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41df74:	b	41e108 <feof@plt+0x1b408>
  41df78:	sub	w8, w2, #0x3b1
  41df7c:	cmp	w8, #0x1a
  41df80:	b.hi	41df9c <feof@plt+0x1b29c>  // b.pmore
  41df84:	mov	w9, #0x1                   	// #1
  41df88:	lsl	w8, w9, w8
  41df8c:	mov	w9, #0x141                 	// #321
  41df90:	movk	w9, #0x710, lsl #16
  41df94:	tst	w8, w9
  41df98:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41df9c:	cmp	w2, #0xa8
  41dfa0:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41dfa4:	b	41e108 <feof@plt+0x1b408>
  41dfa8:	sub	w8, w2, #0x391
  41dfac:	cmp	w8, #0x34
  41dfb0:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41dfb4:	mov	w9, #0x1                   	// #1
  41dfb8:	lsl	x8, x9, x8
  41dfbc:	mov	x9, #0x10001000100010      	// #4503668347895824
  41dfc0:	movk	x9, #0x101
  41dfc4:	movk	x9, #0x101, lsl #32
  41dfc8:	b	41d880 <feof@plt+0x1ab80>
  41dfcc:	mov	w8, #0xffffe160            	// #-7840
  41dfd0:	add	w8, w2, w8
  41dfd4:	cmp	w8, #0x2
  41dfd8:	b.cc	41d888 <feof@plt+0x1ab88>  // b.lo, b.ul, b.last
  41dfdc:	mov	w8, #0x1fb3                	// #8115
  41dfe0:	cmp	w2, w8
  41dfe4:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41dfe8:	mov	w8, #0x1fbc                	// #8124
  41dfec:	cmp	w2, w8
  41dff0:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41dff4:	b	41e108 <feof@plt+0x1b408>
  41dff8:	sub	w8, w2, #0x391
  41dffc:	cmp	w8, #0xa9
  41e000:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41e004:	adrp	x9, 45c000 <_obstack_memory_used@@Base+0x6dd8>
  41e008:	add	x9, x9, #0x3ae
  41e00c:	adr	x10, 41d888 <feof@plt+0x1ab88>
  41e010:	ldrh	w11, [x9, x8, lsl #1]
  41e014:	add	x10, x10, x11, lsl #2
  41e018:	br	x10
  41e01c:	mov	w8, #0xffffe188            	// #-7800
  41e020:	add	w8, w2, w8
  41e024:	cmp	w8, #0x4
  41e028:	b.cc	41d888 <feof@plt+0x1ab88>  // b.lo, b.ul, b.last
  41e02c:	mov	w8, #0xffffe11a            	// #-7910
  41e030:	add	w8, w2, w8
  41e034:	b	41e100 <feof@plt+0x1b400>
  41e038:	sub	w8, w2, #0x391
  41e03c:	cmp	w8, #0x3d
  41e040:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41e044:	mov	w9, #0x1                   	// #1
  41e048:	lsl	x8, x9, x8
  41e04c:	mov	x9, #0x41                  	// #65
  41e050:	movk	x9, #0x2900, lsl #16
  41e054:	movk	x9, #0x41, lsl #32
  41e058:	movk	x9, #0x2100, lsl #48
  41e05c:	b	41d880 <feof@plt+0x1ab80>
  41e060:	sub	w8, w2, #0x418
  41e064:	cmp	w8, #0x2b
  41e068:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41e06c:	mov	w9, #0x1                   	// #1
  41e070:	lsl	x8, x9, x8
  41e074:	mov	x9, #0x801                 	// #2049
  41e078:	movk	x9, #0x801, lsl #32
  41e07c:	b	41d880 <feof@plt+0x1ab80>
  41e080:	sub	w8, w2, #0x226
  41e084:	cmp	w8, #0x9
  41e088:	b.hi	41e0a0 <feof@plt+0x1b3a0>  // b.pmore
  41e08c:	mov	w9, #0x1                   	// #1
  41e090:	lsl	w8, w9, w8
  41e094:	mov	w9, #0x303                 	// #771
  41e098:	tst	w8, w9
  41e09c:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41e0a0:	sub	w8, w2, #0x1ea
  41e0a4:	b	41e100 <feof@plt+0x1b400>
  41e0a8:	sub	w8, w2, #0x4d8
  41e0ac:	cmp	w8, #0x11
  41e0b0:	b.hi	41e108 <feof@plt+0x1b408>  // b.pmore
  41e0b4:	mov	w9, #0x1                   	// #1
  41e0b8:	lsl	w8, w9, w8
  41e0bc:	tst	w8, #0x30003
  41e0c0:	b.ne	41d888 <feof@plt+0x1ab88>  // b.any
  41e0c4:	b	41e108 <feof@plt+0x1b408>
  41e0c8:	cmp	w2, #0x1b7
  41e0cc:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41e0d0:	cmp	w2, #0x292
  41e0d4:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41e0d8:	b	41e108 <feof@plt+0x1b408>
  41e0dc:	cmp	w2, #0x55
  41e0e0:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41e0e4:	cmp	w2, #0x75
  41e0e8:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41e0ec:	b	41e108 <feof@plt+0x1b408>
  41e0f0:	mov	w8, #0xffffe19e            	// #-7778
  41e0f4:	add	w8, w2, w8
  41e0f8:	b	41e100 <feof@plt+0x1b400>
  41e0fc:	sub	w8, w2, #0x16a
  41e100:	cmp	w8, #0x2
  41e104:	b.cc	41d888 <feof@plt+0x1ab88>  // b.lo, b.ul, b.last
  41e108:	mov	w0, #0x1                   	// #1
  41e10c:	ret
  41e110:	cmp	w2, #0x41
  41e114:	b.eq	41d888 <feof@plt+0x1ab88>  // b.none
  41e118:	b	41e108 <feof@plt+0x1b408>
  41e11c:	stp	x29, x30, [sp, #-80]!
  41e120:	stp	x26, x25, [sp, #16]
  41e124:	stp	x24, x23, [sp, #32]
  41e128:	stp	x22, x21, [sp, #48]
  41e12c:	stp	x20, x19, [sp, #64]
  41e130:	ldrsw	x25, [x3, #16]
  41e134:	ldr	x21, [x0, #1216]
  41e138:	mov	x19, x2
  41e13c:	mov	w20, w1
  41e140:	mov	x29, sp
  41e144:	cmp	x21, x25
  41e148:	b.ne	41e17c <feof@plt+0x1b47c>  // b.any
  41e14c:	ldp	x10, x8, [x19, #8]
  41e150:	add	x9, x8, #0x1
  41e154:	cmp	x9, x10
  41e158:	b.ls	41e20c <feof@plt+0x1b50c>  // b.plast
  41e15c:	ldr	x0, [x19]
  41e160:	add	x1, x10, #0x100
  41e164:	str	x1, [x19, #8]
  41e168:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41e16c:	ldr	x8, [x19, #16]
  41e170:	str	x0, [x19]
  41e174:	add	x9, x8, #0x1
  41e178:	b	41e210 <feof@plt+0x1b510>
  41e17c:	ldp	x8, x23, [x19, #8]
  41e180:	ldrb	w22, [x0, #1242]
  41e184:	cmp	x21, #0x20
  41e188:	mov	w9, #0x20                  	// #32
  41e18c:	udiv	x24, x25, x21
  41e190:	csel	x26, x21, x9, cc  // cc = lo, ul, last
  41e194:	add	x9, x23, x24
  41e198:	cmp	x9, x8
  41e19c:	b.ls	41e1b4 <feof@plt+0x1b4b4>  // b.plast
  41e1a0:	ldr	x0, [x19]
  41e1a4:	add	x1, x8, #0x100
  41e1a8:	str	x1, [x19, #8]
  41e1ac:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41e1b0:	str	x0, [x19]
  41e1b4:	cmp	x21, x25
  41e1b8:	b.hi	41e1fc <feof@plt+0x1b4fc>  // b.pmore
  41e1bc:	mov	x9, #0xffffffffffffffff    	// #-1
  41e1c0:	lsl	x9, x9, x26
  41e1c4:	mov	x8, xzr
  41e1c8:	eor	w9, w9, #0xff
  41e1cc:	ldr	x11, [x19]
  41e1d0:	mvn	x12, x8
  41e1d4:	cmp	w22, #0x0
  41e1d8:	add	x12, x24, x12
  41e1dc:	csel	x12, x8, x12, eq  // eq = none
  41e1e0:	add	x8, x8, #0x1
  41e1e4:	and	w10, w20, w9
  41e1e8:	lsr	w20, w20, w21
  41e1ec:	add	x12, x12, x23
  41e1f0:	cmp	x24, x8
  41e1f4:	strb	w10, [x11, x12]
  41e1f8:	b.hi	41e1cc <feof@plt+0x1b4cc>  // b.pmore
  41e1fc:	ldr	x8, [x19, #16]
  41e200:	add	x8, x8, x24
  41e204:	str	x8, [x19, #16]
  41e208:	b	41e218 <feof@plt+0x1b518>
  41e20c:	ldr	x0, [x19]
  41e210:	str	x9, [x19, #16]
  41e214:	strb	w20, [x0, x8]
  41e218:	ldp	x20, x19, [sp, #64]
  41e21c:	ldp	x22, x21, [sp, #48]
  41e220:	ldp	x24, x23, [sp, #32]
  41e224:	ldp	x26, x25, [sp, #16]
  41e228:	ldp	x29, x30, [sp], #80
  41e22c:	ret
  41e230:	sub	sp, sp, #0x100
  41e234:	stp	x29, x30, [sp, #176]
  41e238:	stp	x24, x23, [sp, #208]
  41e23c:	stp	x22, x21, [sp, #224]
  41e240:	stp	x20, x19, [sp, #240]
  41e244:	ldrb	w23, [x0, #27]
  41e248:	ldrb	w24, [x0, #25]
  41e24c:	mov	x19, x0
  41e250:	mov	w20, w1
  41e254:	str	x25, [sp, #192]
  41e258:	add	x29, sp, #0xb0
  41e25c:	cbz	w23, 41e264 <feof@plt+0x1b564>
  41e260:	strb	wzr, [x19, #24]
  41e264:	cbz	w24, 41e288 <feof@plt+0x1b588>
  41e268:	ldrb	w8, [x19, #1154]
  41e26c:	cbz	w8, 41e284 <feof@plt+0x1b584>
  41e270:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41e274:	add	x2, x2, #0xd32
  41e278:	mov	w1, #0x2                   	// #2
  41e27c:	mov	x0, x19
  41e280:	bl	4223e4 <feof@plt+0x1f6e4>
  41e284:	strh	wzr, [x19, #24]
  41e288:	ldr	x8, [x19, #40]
  41e28c:	mov	w21, #0x1                   	// #1
  41e290:	mov	w9, #0x53                  	// #83
  41e294:	strb	w21, [x19, #16]
  41e298:	strb	wzr, [x19, #21]
  41e29c:	strb	w9, [x19, #156]
  41e2a0:	ldr	w8, [x8, #60]
  41e2a4:	mov	x0, x19
  41e2a8:	str	w8, [x19, #48]
  41e2ac:	bl	4298e8 <feof@plt+0x26be8>
  41e2b0:	ldrb	w8, [x0, #4]
  41e2b4:	cmp	w8, #0x16
  41e2b8:	b.eq	41e380 <feof@plt+0x1b680>  // b.none
  41e2bc:	cmp	w8, #0x37
  41e2c0:	b.eq	41e388 <feof@plt+0x1b688>  // b.none
  41e2c4:	mov	x22, x0
  41e2c8:	cmp	w8, #0x35
  41e2cc:	b.ne	41e2dc <feof@plt+0x1b5dc>  // b.any
  41e2d0:	ldr	x8, [x22, #8]
  41e2d4:	ldrb	w8, [x8, #16]
  41e2d8:	tbnz	w8, #0, 41e3a0 <feof@plt+0x1b6a0>
  41e2dc:	ldr	w8, [x19, #1116]
  41e2e0:	cmp	w8, #0x15
  41e2e4:	b.eq	41e394 <feof@plt+0x1b694>  // b.none
  41e2e8:	ldrb	w8, [x19, #18]
  41e2ec:	cbnz	w8, 41e490 <feof@plt+0x1b790>
  41e2f0:	mov	x0, x19
  41e2f4:	mov	x1, x22
  41e2f8:	bl	42d084 <feof@plt+0x2a384>
  41e2fc:	ldr	x8, [x19, #1064]
  41e300:	mov	x20, x0
  41e304:	cbz	x8, 41e478 <feof@plt+0x1b778>
  41e308:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e30c:	add	x2, x2, #0x7e8
  41e310:	mov	x0, x19
  41e314:	mov	x1, x20
  41e318:	blr	x8
  41e31c:	cbz	x0, 41e478 <feof@plt+0x1b778>
  41e320:	ldr	x1, [x19, #40]
  41e324:	ldr	w2, [x22]
  41e328:	mov	x21, x0
  41e32c:	add	x0, sp, #0x8
  41e330:	mov	x3, xzr
  41e334:	bl	430594 <feof@plt+0x2d894>
  41e338:	ldr	x0, [x19, #40]
  41e33c:	ldr	w1, [x22]
  41e340:	bl	42e2f8 <feof@plt+0x2b5f8>
  41e344:	mov	x1, x0
  41e348:	add	x0, sp, #0x8
  41e34c:	mov	x2, x21
  41e350:	bl	431340 <feof@plt+0x2e640>
  41e354:	adrp	x3, 460000 <_obstack_memory_used@@Base+0xadd8>
  41e358:	add	x3, x3, #0xd9a
  41e35c:	add	x2, sp, #0x8
  41e360:	mov	w1, #0x3                   	// #3
  41e364:	mov	x0, x19
  41e368:	mov	x4, x20
  41e36c:	mov	x5, x21
  41e370:	bl	422d7c <feof@plt+0x2007c>
  41e374:	add	x0, sp, #0x8
  41e378:	bl	430674 <feof@plt+0x2d974>
  41e37c:	b	41e490 <feof@plt+0x1b790>
  41e380:	mov	x25, xzr
  41e384:	b	41e530 <feof@plt+0x1b830>
  41e388:	ldr	w8, [x19, #1116]
  41e38c:	cmp	w8, #0x15
  41e390:	b.ne	41e3c0 <feof@plt+0x1b6c0>  // b.any
  41e394:	mov	w21, wzr
  41e398:	mov	x25, xzr
  41e39c:	b	41e530 <feof@plt+0x1b830>
  41e3a0:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e3a4:	lsr	w8, w8, #1
  41e3a8:	add	x9, x9, #0x608
  41e3ac:	mov	w10, #0x18                  	// #24
  41e3b0:	umaddl	x22, w8, w10, x9
  41e3b4:	ldrb	w8, [x22, #19]
  41e3b8:	tbz	w8, #1, 41e3fc <feof@plt+0x1b6fc>
  41e3bc:	b	41e400 <feof@plt+0x1b700>
  41e3c0:	ldrb	w8, [x19, #1154]
  41e3c4:	cbz	w8, 41e3ec <feof@plt+0x1b6ec>
  41e3c8:	ldrb	w8, [x19, #1155]
  41e3cc:	cbnz	w8, 41e3ec <feof@plt+0x1b6ec>
  41e3d0:	ldrb	w8, [x19, #18]
  41e3d4:	cbnz	w8, 41e3ec <feof@plt+0x1b6ec>
  41e3d8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41e3dc:	add	x2, x2, #0xd6f
  41e3e0:	mov	w1, #0x2                   	// #2
  41e3e4:	mov	x0, x19
  41e3e8:	bl	4223e4 <feof@plt+0x1f6e4>
  41e3ec:	adrp	x22, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e3f0:	add	x22, x22, #0x7d0
  41e3f4:	ldrb	w8, [x22, #19]
  41e3f8:	tbnz	w8, #1, 41e400 <feof@plt+0x1b700>
  41e3fc:	strb	wzr, [x19, #440]
  41e400:	ldrb	w9, [x19, #1155]
  41e404:	cbz	w9, 41e430 <feof@plt+0x1b730>
  41e408:	ldrb	w9, [x19, #1244]
  41e40c:	cbnz	w9, 41e420 <feof@plt+0x1b720>
  41e410:	mov	x25, xzr
  41e414:	mov	w21, wzr
  41e418:	cbnz	w20, 41e530 <feof@plt+0x1b830>
  41e41c:	tbz	w8, #3, 41e530 <feof@plt+0x1b830>
  41e420:	and	w8, w8, #0x4
  41e424:	strb	w8, [x19, #19]
  41e428:	strb	w8, [x19, #17]
  41e42c:	b	41e50c <feof@plt+0x1b80c>
  41e430:	ldrb	w9, [x19, #18]
  41e434:	and	w10, w8, #0x4
  41e438:	strb	w10, [x19, #19]
  41e43c:	strb	w10, [x19, #17]
  41e440:	cbz	w9, 41e498 <feof@plt+0x1b798>
  41e444:	ldrb	w8, [x19, #1138]
  41e448:	cbz	w8, 41e50c <feof@plt+0x1b80c>
  41e44c:	adrp	x8, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e450:	add	x8, x8, #0x6e0
  41e454:	cmp	x22, x8
  41e458:	b.eq	41e4d8 <feof@plt+0x1b7d8>  // b.none
  41e45c:	ldrb	w8, [x22, #18]
  41e460:	cbz	w20, 41e4f0 <feof@plt+0x1b7f0>
  41e464:	cbnz	w8, 41e50c <feof@plt+0x1b80c>
  41e468:	ldr	x3, [x22, #8]
  41e46c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e470:	add	x2, x2, #0x287
  41e474:	b	41e500 <feof@plt+0x1b800>
  41e478:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41e47c:	add	x2, x2, #0xdd1
  41e480:	mov	w1, #0x3                   	// #3
  41e484:	mov	x0, x19
  41e488:	mov	x3, x20
  41e48c:	bl	4223e4 <feof@plt+0x1f6e4>
  41e490:	mov	x25, xzr
  41e494:	b	41e520 <feof@plt+0x1b820>
  41e498:	ldrb	w9, [x22, #18]
  41e49c:	cmp	w9, #0x2
  41e4a0:	b.ne	41e668 <feof@plt+0x1b968>  // b.any
  41e4a4:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e4a8:	add	x9, x9, #0x770
  41e4ac:	cmp	x22, x9
  41e4b0:	b.eq	41e660 <feof@plt+0x1b960>  // b.none
  41e4b4:	ldrb	w9, [x19, #1154]
  41e4b8:	cbz	w9, 41e668 <feof@plt+0x1b968>
  41e4bc:	ldr	x3, [x22, #8]
  41e4c0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e4c4:	add	x2, x2, #0x225
  41e4c8:	mov	w1, #0x2                   	// #2
  41e4cc:	mov	x0, x19
  41e4d0:	bl	4223e4 <feof@plt+0x1f6e4>
  41e4d4:	b	41e444 <feof@plt+0x1b744>
  41e4d8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e4dc:	add	x2, x2, #0x25e
  41e4e0:	mov	w1, #0x6                   	// #6
  41e4e4:	mov	x0, x19
  41e4e8:	bl	422514 <feof@plt+0x1f814>
  41e4ec:	b	41e50c <feof@plt+0x1b80c>
  41e4f0:	cbz	w8, 41e50c <feof@plt+0x1b80c>
  41e4f4:	ldr	x3, [x22, #8]
  41e4f8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e4fc:	add	x2, x2, #0x2b5
  41e500:	mov	w1, #0x6                   	// #6
  41e504:	mov	x0, x19
  41e508:	bl	422514 <feof@plt+0x1f814>
  41e50c:	ldrb	w8, [x19, #18]
  41e510:	cbz	w8, 41e528 <feof@plt+0x1b828>
  41e514:	ldrb	w8, [x22, #19]
  41e518:	tst	w8, #0x1
  41e51c:	csel	x25, xzr, x22, eq  // eq = none
  41e520:	mov	w21, #0x1                   	// #1
  41e524:	b	41e530 <feof@plt+0x1b830>
  41e528:	mov	w21, #0x1                   	// #1
  41e52c:	mov	x25, x22
  41e530:	ldrb	w8, [x19, #1160]
  41e534:	str	x25, [x19, #144]
  41e538:	cbz	w8, 41e544 <feof@plt+0x1b844>
  41e53c:	mov	x0, x19
  41e540:	bl	41e6a8 <feof@plt+0x1b9a8>
  41e544:	cbz	x25, 41e55c <feof@plt+0x1b85c>
  41e548:	ldr	x8, [x19, #144]
  41e54c:	mov	x0, x19
  41e550:	ldr	x8, [x8]
  41e554:	blr	x8
  41e558:	b	41e56c <feof@plt+0x1b86c>
  41e55c:	cbnz	w21, 41e56c <feof@plt+0x1b86c>
  41e560:	mov	w1, #0x1                   	// #1
  41e564:	mov	x0, x19
  41e568:	bl	4328a0 <feof@plt+0x2fba0>
  41e56c:	ldrb	w9, [x19, #1160]
  41e570:	ldrb	w8, [x19, #32]
  41e574:	cbz	w9, 41e5a8 <feof@plt+0x1b8a8>
  41e578:	cbnz	w8, 41e588 <feof@plt+0x1b888>
  41e57c:	ldrb	w8, [x19, #24]
  41e580:	sub	w8, w8, #0x1
  41e584:	strb	w8, [x19, #24]
  41e588:	ldr	x8, [x19, #144]
  41e58c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e590:	add	x9, x9, #0x608
  41e594:	cmp	x8, x9
  41e598:	b.eq	41e604 <feof@plt+0x1b904>  // b.none
  41e59c:	mov	x0, x19
  41e5a0:	bl	437254 <feof@plt+0x34554>
  41e5a4:	b	41e604 <feof@plt+0x1b904>
  41e5a8:	cbz	w21, 41e604 <feof@plt+0x1b904>
  41e5ac:	cbz	w8, 41e5bc <feof@plt+0x1b8bc>
  41e5b0:	b	41e604 <feof@plt+0x1b904>
  41e5b4:	mov	x0, x19
  41e5b8:	bl	43200c <feof@plt+0x2f30c>
  41e5bc:	ldr	x8, [x19, #136]
  41e5c0:	ldr	x8, [x8, #8]
  41e5c4:	cbnz	x8, 41e5b4 <feof@plt+0x1b8b4>
  41e5c8:	ldr	x8, [x19, #448]
  41e5cc:	ldurb	w8, [x8, #-20]
  41e5d0:	cmp	w8, #0x16
  41e5d4:	b.eq	41e5ec <feof@plt+0x1b8ec>  // b.none
  41e5d8:	mov	x0, x19
  41e5dc:	bl	4298e8 <feof@plt+0x26be8>
  41e5e0:	ldrb	w8, [x0, #4]
  41e5e4:	cmp	w8, #0x16
  41e5e8:	b.ne	41e5d8 <feof@plt+0x1b8d8>  // b.any
  41e5ec:	ldr	w8, [x19, #500]
  41e5f0:	cbnz	w8, 41e604 <feof@plt+0x1b904>
  41e5f4:	ldr	x8, [x19, #472]
  41e5f8:	add	x9, x19, #0x1c8
  41e5fc:	str	x9, [x19, #488]
  41e600:	str	x8, [x19, #448]
  41e604:	ldrb	w8, [x19, #1123]
  41e608:	strb	wzr, [x19, #16]
  41e60c:	sturh	wzr, [x19, #19]
  41e610:	str	xzr, [x19, #144]
  41e614:	cmp	w8, #0x0
  41e618:	cset	w8, eq  // eq = none
  41e61c:	strb	w8, [x19, #21]
  41e620:	cbz	w24, 41e634 <feof@plt+0x1b934>
  41e624:	ldrb	w8, [x19, #32]
  41e628:	cbnz	w8, 41e634 <feof@plt+0x1b934>
  41e62c:	mov	w8, #0x201                 	// #513
  41e630:	strh	w8, [x19, #24]
  41e634:	cbz	w23, 41e640 <feof@plt+0x1b940>
  41e638:	mov	w8, #0x1                   	// #1
  41e63c:	strb	w8, [x19, #24]
  41e640:	mov	w0, w21
  41e644:	ldp	x20, x19, [sp, #240]
  41e648:	ldp	x22, x21, [sp, #224]
  41e64c:	ldp	x24, x23, [sp, #208]
  41e650:	ldr	x25, [sp, #192]
  41e654:	ldp	x29, x30, [sp, #176]
  41e658:	add	sp, sp, #0x100
  41e65c:	ret
  41e660:	ldrb	w9, [x19, #1122]
  41e664:	cbz	w9, 41e4b4 <feof@plt+0x1b7b4>
  41e668:	tbnz	w8, #5, 41e684 <feof@plt+0x1b984>
  41e66c:	adrp	x8, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e670:	add	x8, x8, #0x770
  41e674:	cmp	x22, x8
  41e678:	b.ne	41e444 <feof@plt+0x1b744>  // b.any
  41e67c:	ldrb	w8, [x19, #1122]
  41e680:	cbnz	w8, 41e444 <feof@plt+0x1b744>
  41e684:	ldrb	w8, [x19, #1132]
  41e688:	cbz	w8, 41e444 <feof@plt+0x1b744>
  41e68c:	ldr	x3, [x22, #8]
  41e690:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e694:	add	x2, x2, #0x23c
  41e698:	mov	w1, #0x1                   	// #1
  41e69c:	mov	x0, x19
  41e6a0:	bl	422514 <feof@plt+0x1f814>
  41e6a4:	b	41e444 <feof@plt+0x1b744>
  41e6a8:	stp	x29, x30, [sp, #-32]!
  41e6ac:	stp	x20, x19, [sp, #16]
  41e6b0:	ldr	x8, [x0, #144]
  41e6b4:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e6b8:	add	x9, x9, #0x608
  41e6bc:	mov	x19, x0
  41e6c0:	cmp	x8, x9
  41e6c4:	mov	x29, sp
  41e6c8:	b.eq	41e774 <feof@plt+0x1ba74>  // b.none
  41e6cc:	cbz	x8, 41e6e0 <feof@plt+0x1b9e0>
  41e6d0:	ldrb	w9, [x8, #19]
  41e6d4:	tst	w9, #0x10
  41e6d8:	cset	w9, eq  // eq = none
  41e6dc:	b	41e6e4 <feof@plt+0x1b9e4>
  41e6e0:	mov	w9, wzr
  41e6e4:	ldrb	w10, [x19, #18]
  41e6e8:	adrp	x11, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e6ec:	add	x11, x11, #0x668
  41e6f0:	add	x12, x11, #0x78
  41e6f4:	cmp	w10, #0x0
  41e6f8:	cset	w20, ne  // ne = any
  41e6fc:	cmp	x8, x11
  41e700:	cset	w10, eq  // eq = none
  41e704:	cmp	x8, x12
  41e708:	cset	w8, eq  // eq = none
  41e70c:	orr	w8, w10, w8
  41e710:	strb	w8, [x19, #20]
  41e714:	cbz	w8, 41e71c <feof@plt+0x1ba1c>
  41e718:	strb	wzr, [x19, #18]
  41e71c:	cbz	w9, 41e74c <feof@plt+0x1ba4c>
  41e720:	ldrb	w8, [x19, #24]
  41e724:	mov	x0, x19
  41e728:	mov	x1, xzr
  41e72c:	mov	w2, wzr
  41e730:	add	w8, w8, #0x1
  41e734:	strb	w8, [x19, #24]
  41e738:	bl	4372e4 <feof@plt+0x345e4>
  41e73c:	ldrb	w8, [x19, #24]
  41e740:	sub	w8, w8, #0x1
  41e744:	strb	w8, [x19, #24]
  41e748:	b	41e75c <feof@plt+0x1ba5c>
  41e74c:	mov	x0, x19
  41e750:	mov	x1, xzr
  41e754:	mov	w2, wzr
  41e758:	bl	4372e4 <feof@plt+0x345e4>
  41e75c:	ldr	x1, [x19, #1312]
  41e760:	ldr	x8, [x19, #1328]
  41e764:	mov	x0, x19
  41e768:	strb	w20, [x19, #18]
  41e76c:	sub	x2, x8, x1
  41e770:	bl	437220 <feof@plt+0x34520>
  41e774:	ldrb	w8, [x19, #24]
  41e778:	add	w8, w8, #0x1
  41e77c:	strb	w8, [x19, #24]
  41e780:	ldp	x20, x19, [sp, #16]
  41e784:	ldp	x29, x30, [sp], #32
  41e788:	ret
  41e78c:	adrp	x1, 41e000 <feof@plt+0x1b300>
  41e790:	add	x1, x1, #0x79c
  41e794:	mov	x2, xzr
  41e798:	b	428c40 <feof@plt+0x25f40>
  41e79c:	ldrh	w8, [x1, #18]
  41e7a0:	mov	w9, #0xff34                	// #65332
  41e7a4:	mov	w0, #0x1                   	// #1
  41e7a8:	str	xzr, [x1, #24]
  41e7ac:	and	w8, w8, w9
  41e7b0:	strh	w8, [x1, #18]
  41e7b4:	ret
  41e7b8:	stp	x29, x30, [sp, #-32]!
  41e7bc:	stp	x20, x19, [sp, #16]
  41e7c0:	mov	x19, x0
  41e7c4:	ldr	x0, [x0, #40]
  41e7c8:	mov	w8, w3
  41e7cc:	mov	x3, x2
  41e7d0:	mov	w2, w4
  41e7d4:	mov	w4, w8
  41e7d8:	mov	x29, sp
  41e7dc:	bl	42e6d0 <feof@plt+0x2b9d0>
  41e7e0:	mov	x20, x0
  41e7e4:	cbz	x0, 41e7f8 <feof@plt+0x1baf8>
  41e7e8:	ldr	x0, [x19, #40]
  41e7ec:	ldr	w1, [x20, #16]
  41e7f0:	mov	w2, #0x7f                  	// #127
  41e7f4:	bl	42ebc8 <feof@plt+0x2bec8>
  41e7f8:	ldr	x2, [x19, #912]
  41e7fc:	cbz	x2, 41e814 <feof@plt+0x1bb14>
  41e800:	mov	x0, x19
  41e804:	mov	x1, x20
  41e808:	ldp	x20, x19, [sp, #16]
  41e80c:	ldp	x29, x30, [sp], #32
  41e810:	br	x2
  41e814:	ldp	x20, x19, [sp, #16]
  41e818:	ldp	x29, x30, [sp], #32
  41e81c:	ret
  41e820:	cbz	x3, 41e85c <feof@plt+0x1bb5c>
  41e824:	stp	x29, x30, [sp, #-32]!
  41e828:	stp	x20, x19, [sp, #16]
  41e82c:	mov	x19, x3
  41e830:	mov	w3, wzr
  41e834:	mov	x29, sp
  41e838:	mov	w20, w4
  41e83c:	bl	41e86c <feof@plt+0x1bb6c>
  41e840:	cbz	x0, 41e850 <feof@plt+0x1bb50>
  41e844:	and	w8, w20, #0x1
  41e848:	strb	w8, [x0, #19]
  41e84c:	str	x19, [x0, #24]
  41e850:	ldp	x20, x19, [sp, #16]
  41e854:	ldp	x29, x30, [sp], #32
  41e858:	ret
  41e85c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41e860:	add	x2, x2, #0xdf5
  41e864:	mov	w1, #0x4                   	// #4
  41e868:	b	4223e4 <feof@plt+0x1f6e4>
  41e86c:	stp	x29, x30, [sp, #-64]!
  41e870:	stp	x22, x21, [sp, #32]
  41e874:	stp	x20, x19, [sp, #48]
  41e878:	mov	x20, x2
  41e87c:	mov	x21, x1
  41e880:	mov	x19, x0
  41e884:	str	x23, [sp, #16]
  41e888:	mov	x29, sp
  41e88c:	cbz	x1, 41e908 <feof@plt+0x1bc08>
  41e890:	mov	x0, x21
  41e894:	and	w23, w3, #0x1
  41e898:	bl	4026d0 <strlen@plt>
  41e89c:	mov	x2, x0
  41e8a0:	mov	x0, x19
  41e8a4:	mov	x1, x21
  41e8a8:	bl	428bc4 <feof@plt+0x25ec4>
  41e8ac:	ldr	x8, [x19, #896]
  41e8b0:	mov	x22, x0
  41e8b4:	cbz	x8, 41e8cc <feof@plt+0x1bbcc>
  41e8b8:	ldr	x9, [x8, #8]
  41e8bc:	cmp	x9, x22
  41e8c0:	b.eq	41e924 <feof@plt+0x1bc24>  // b.none
  41e8c4:	ldr	x8, [x8]
  41e8c8:	cbnz	x8, 41e8b8 <feof@plt+0x1bbb8>
  41e8cc:	mov	w1, #0x20                  	// #32
  41e8d0:	mov	x0, x19
  41e8d4:	bl	42dc08 <feof@plt+0x2af08>
  41e8d8:	movi	v0.2d, #0x0
  41e8dc:	stp	q0, q0, [x0]
  41e8e0:	ldr	x9, [x19, #896]
  41e8e4:	mov	x8, x0
  41e8e8:	mov	w10, #0x1                   	// #1
  41e8ec:	str	x9, [x0]
  41e8f0:	str	x0, [x19, #896]
  41e8f4:	str	x22, [x0, #8]
  41e8f8:	strb	w10, [x0, #16]
  41e8fc:	strb	w23, [x0, #19]
  41e900:	add	x23, x8, #0x18
  41e904:	b	41e954 <feof@plt+0x1bc54>
  41e908:	tbz	w3, #0, 41e950 <feof@plt+0x1bc50>
  41e90c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e910:	add	x2, x2, #0x333
  41e914:	mov	w1, #0x4                   	// #4
  41e918:	mov	x0, x19
  41e91c:	mov	x3, x20
  41e920:	b	41e9d0 <feof@plt+0x1bcd0>
  41e924:	ldrb	w9, [x8, #16]
  41e928:	cbz	w9, 41e9bc <feof@plt+0x1bcbc>
  41e92c:	ldrb	w9, [x8, #19]
  41e930:	cmp	w9, w23
  41e934:	b.eq	41e900 <feof@plt+0x1bc00>  // b.none
  41e938:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e93c:	add	x2, x2, #0x2ee
  41e940:	mov	w1, #0x4                   	// #4
  41e944:	mov	x0, x19
  41e948:	mov	x3, x21
  41e94c:	b	41e9d0 <feof@plt+0x1bcd0>
  41e950:	add	x23, x19, #0x380
  41e954:	mov	x0, x20
  41e958:	bl	4026d0 <strlen@plt>
  41e95c:	mov	x2, x0
  41e960:	mov	x0, x19
  41e964:	mov	x1, x20
  41e968:	bl	428bc4 <feof@plt+0x25ec4>
  41e96c:	ldr	x8, [x23]
  41e970:	mov	x22, x0
  41e974:	cbz	x8, 41e98c <feof@plt+0x1bc8c>
  41e978:	ldr	x9, [x8, #8]
  41e97c:	cmp	x9, x22
  41e980:	b.eq	41e9b4 <feof@plt+0x1bcb4>  // b.none
  41e984:	ldr	x8, [x8]
  41e988:	cbnz	x8, 41e978 <feof@plt+0x1bc78>
  41e98c:	mov	w1, #0x20                  	// #32
  41e990:	mov	x0, x19
  41e994:	bl	42dc08 <feof@plt+0x2af08>
  41e998:	movi	v0.2d, #0x0
  41e99c:	stp	q0, q0, [x0]
  41e9a0:	ldr	x8, [x23]
  41e9a4:	str	x8, [x0]
  41e9a8:	str	x0, [x23]
  41e9ac:	str	x22, [x0, #8]
  41e9b0:	b	41e9d8 <feof@plt+0x1bcd8>
  41e9b4:	ldrb	w8, [x8, #16]
  41e9b8:	cbz	w8, 41e9ec <feof@plt+0x1bcec>
  41e9bc:	ldr	x3, [x22]
  41e9c0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e9c4:	add	x2, x2, #0x370
  41e9c8:	mov	w1, #0x4                   	// #4
  41e9cc:	mov	x0, x19
  41e9d0:	bl	4223e4 <feof@plt+0x1f6e4>
  41e9d4:	mov	x0, xzr
  41e9d8:	ldp	x20, x19, [sp, #48]
  41e9dc:	ldp	x22, x21, [sp, #32]
  41e9e0:	ldr	x23, [sp, #16]
  41e9e4:	ldp	x29, x30, [sp], #64
  41e9e8:	ret
  41e9ec:	cbz	x21, 41ea10 <feof@plt+0x1bd10>
  41e9f0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41e9f4:	add	x2, x2, #0x3a9
  41e9f8:	mov	w1, #0x4                   	// #4
  41e9fc:	mov	x0, x19
  41ea00:	mov	x3, x21
  41ea04:	mov	x4, x20
  41ea08:	bl	4223e4 <feof@plt+0x1f6e4>
  41ea0c:	b	41e9d4 <feof@plt+0x1bcd4>
  41ea10:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ea14:	add	x2, x2, #0x3cd
  41ea18:	b	41e914 <feof@plt+0x1bc14>
  41ea1c:	stp	x29, x30, [sp, #-32]!
  41ea20:	stp	x20, x19, [sp, #16]
  41ea24:	mov	w19, w3
  41ea28:	and	w3, w5, #0x1
  41ea2c:	mov	x29, sp
  41ea30:	mov	w20, w4
  41ea34:	bl	41e86c <feof@plt+0x1bb6c>
  41ea38:	cbz	x0, 41ea50 <feof@plt+0x1bd50>
  41ea3c:	and	w8, w20, #0x1
  41ea40:	mov	w9, #0x1                   	// #1
  41ea44:	strb	w9, [x0, #18]
  41ea48:	strb	w8, [x0, #19]
  41ea4c:	str	w19, [x0, #24]
  41ea50:	ldp	x20, x19, [sp, #16]
  41ea54:	ldp	x29, x30, [sp], #32
  41ea58:	ret
  41ea5c:	stp	x29, x30, [sp, #-48]!
  41ea60:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ea64:	add	x2, x2, #0xe1a
  41ea68:	mov	x1, xzr
  41ea6c:	mov	w3, wzr
  41ea70:	str	x21, [sp, #16]
  41ea74:	stp	x20, x19, [sp, #32]
  41ea78:	mov	x29, sp
  41ea7c:	mov	x19, x0
  41ea80:	bl	41e86c <feof@plt+0x1bb6c>
  41ea84:	adrp	x8, 41e000 <feof@plt+0x1b300>
  41ea88:	mov	w21, #0x1                   	// #1
  41ea8c:	add	x8, x8, #0xbc8
  41ea90:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41ea94:	strb	w21, [x0, #17]
  41ea98:	str	x8, [x0, #24]
  41ea9c:	add	x2, x2, #0xe1f
  41eaa0:	mov	x0, x19
  41eaa4:	mov	x1, xzr
  41eaa8:	mov	w3, wzr
  41eaac:	bl	41e86c <feof@plt+0x1bb6c>
  41eab0:	adrp	x8, 41e000 <feof@plt+0x1b300>
  41eab4:	add	x8, x8, #0xc54
  41eab8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41eabc:	strb	w21, [x0, #17]
  41eac0:	str	x8, [x0, #24]
  41eac4:	add	x2, x2, #0xe2a
  41eac8:	mov	x0, x19
  41eacc:	mov	x1, xzr
  41ead0:	mov	w3, wzr
  41ead4:	bl	41e86c <feof@plt+0x1bb6c>
  41ead8:	adrp	x8, 41e000 <feof@plt+0x1b300>
  41eadc:	adrp	x20, 460000 <_obstack_memory_used@@Base+0xadd8>
  41eae0:	add	x8, x8, #0xf14
  41eae4:	add	x20, x20, #0xe34
  41eae8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41eaec:	strb	w21, [x0, #17]
  41eaf0:	str	x8, [x0, #24]
  41eaf4:	add	x2, x2, #0xe38
  41eaf8:	mov	x0, x19
  41eafc:	mov	x1, x20
  41eb00:	mov	w3, wzr
  41eb04:	bl	41e86c <feof@plt+0x1bb6c>
  41eb08:	adrp	x8, 41f000 <feof@plt+0x1c300>
  41eb0c:	add	x8, x8, #0x388
  41eb10:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41eb14:	strb	w21, [x0, #17]
  41eb18:	str	x8, [x0, #24]
  41eb1c:	add	x2, x2, #0xe3f
  41eb20:	mov	x0, x19
  41eb24:	mov	x1, x20
  41eb28:	mov	w3, wzr
  41eb2c:	bl	41e86c <feof@plt+0x1bb6c>
  41eb30:	adrp	x8, 41f000 <feof@plt+0x1c300>
  41eb34:	add	x8, x8, #0x430
  41eb38:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41eb3c:	strb	w21, [x0, #17]
  41eb40:	str	x8, [x0, #24]
  41eb44:	add	x2, x2, #0xff9
  41eb48:	mov	x0, x19
  41eb4c:	mov	x1, x20
  41eb50:	mov	w3, wzr
  41eb54:	bl	41e86c <feof@plt+0x1bb6c>
  41eb58:	adrp	x8, 41f000 <feof@plt+0x1c300>
  41eb5c:	add	x8, x8, #0x500
  41eb60:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41eb64:	strb	w21, [x0, #17]
  41eb68:	str	x8, [x0, #24]
  41eb6c:	add	x2, x2, #0x1b0
  41eb70:	mov	x0, x19
  41eb74:	mov	x1, x20
  41eb78:	mov	w3, wzr
  41eb7c:	bl	41e86c <feof@plt+0x1bb6c>
  41eb80:	adrp	x8, 41f000 <feof@plt+0x1c300>
  41eb84:	add	x8, x8, #0x610
  41eb88:	adrp	x2, 457000 <_obstack_memory_used@@Base+0x1dd8>
  41eb8c:	strb	w21, [x0, #17]
  41eb90:	str	x8, [x0, #24]
  41eb94:	add	x2, x2, #0x12b
  41eb98:	mov	x0, x19
  41eb9c:	mov	x1, x20
  41eba0:	mov	w3, wzr
  41eba4:	bl	41e86c <feof@plt+0x1bb6c>
  41eba8:	adrp	x8, 41f000 <feof@plt+0x1c300>
  41ebac:	add	x8, x8, #0x618
  41ebb0:	strb	w21, [x0, #17]
  41ebb4:	str	x8, [x0, #24]
  41ebb8:	ldp	x20, x19, [sp, #32]
  41ebbc:	ldr	x21, [sp, #16]
  41ebc0:	ldp	x29, x30, [sp], #48
  41ebc4:	ret
  41ebc8:	stp	x29, x30, [sp, #-32]!
  41ebcc:	ldr	x8, [x0, #40]
  41ebd0:	str	x19, [sp, #16]
  41ebd4:	mov	x19, x0
  41ebd8:	mov	x29, sp
  41ebdc:	ldr	w8, [x8, #48]
  41ebe0:	cmp	w8, #0x1
  41ebe4:	b.ne	41ebfc <feof@plt+0x1befc>  // b.any
  41ebe8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ebec:	add	x2, x2, #0x3ee
  41ebf0:	mov	x0, x19
  41ebf4:	mov	w1, wzr
  41ebf8:	bl	4223e4 <feof@plt+0x1f6e4>
  41ebfc:	ldr	x8, [x19, #448]
  41ec00:	ldurb	w8, [x8, #-20]
  41ec04:	cmp	w8, #0x16
  41ec08:	b.eq	41ec3c <feof@plt+0x1bf3c>  // b.none
  41ec0c:	mov	x0, x19
  41ec10:	bl	4298e8 <feof@plt+0x26be8>
  41ec14:	ldrb	w8, [x0, #4]
  41ec18:	cmp	w8, #0x16
  41ec1c:	b.eq	41ec3c <feof@plt+0x1bf3c>  // b.none
  41ec20:	ldr	x8, [x19, #144]
  41ec24:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ec28:	add	x2, x2, #0x29
  41ec2c:	mov	x0, x19
  41ec30:	ldr	x3, [x8, #8]
  41ec34:	mov	w1, wzr
  41ec38:	bl	422644 <feof@plt+0x1f944>
  41ec3c:	ldr	x8, [x19]
  41ec40:	mov	x0, x19
  41ec44:	ldr	x19, [sp, #16]
  41ec48:	ldr	x1, [x8, #80]
  41ec4c:	ldp	x29, x30, [sp], #32
  41ec50:	b	4272e0 <feof@plt+0x245e0>
  41ec54:	stp	x29, x30, [sp, #-64]!
  41ec58:	str	x23, [sp, #16]
  41ec5c:	stp	x22, x21, [sp, #32]
  41ec60:	stp	x20, x19, [sp, #48]
  41ec64:	mov	x29, sp
  41ec68:	mov	x19, x0
  41ec6c:	bl	41f838 <feof@plt+0x1cb38>
  41ec70:	cbz	x0, 41ee50 <feof@plt+0x1c150>
  41ec74:	ldr	w8, [x0, #8]
  41ec78:	mov	x10, sp
  41ec7c:	add	w9, w8, #0x2
  41ec80:	add	x9, x9, #0xf
  41ec84:	and	x9, x9, #0x1fffffff0
  41ec88:	sub	x20, x10, x9
  41ec8c:	mov	sp, x20
  41ec90:	ldr	x9, [x0, #16]
  41ec94:	mov	x10, x9
  41ec98:	ldrb	w11, [x10], #1
  41ec9c:	add	x8, x9, x8
  41eca0:	sub	x8, x8, #0x1
  41eca4:	cmp	w11, #0x4c
  41eca8:	csel	x9, x9, x10, ne  // ne = any
  41ecac:	add	x10, x9, #0x1
  41ecb0:	cmp	x10, x8
  41ecb4:	mov	x9, x20
  41ecb8:	b.cs	41ed04 <feof@plt+0x1c004>  // b.hs, b.nlast
  41ecbc:	mov	x9, x20
  41ecc0:	b	41ecd8 <feof@plt+0x1bfd8>
  41ecc4:	mov	x10, x12
  41ecc8:	add	x10, x10, #0x1
  41eccc:	cmp	x10, x8
  41ecd0:	strb	w11, [x9], #1
  41ecd4:	b.cs	41ed04 <feof@plt+0x1c004>  // b.hs, b.nlast
  41ecd8:	ldrb	w11, [x10]
  41ecdc:	cmp	w11, #0x5c
  41ece0:	b.ne	41ecc8 <feof@plt+0x1bfc8>  // b.any
  41ece4:	mov	x12, x10
  41ece8:	ldrb	w11, [x12, #1]!
  41ecec:	cmp	w11, #0x5c
  41ecf0:	b.eq	41ecc4 <feof@plt+0x1bfc4>  // b.none
  41ecf4:	cmp	w11, #0x22
  41ecf8:	b.eq	41ecc4 <feof@plt+0x1bfc4>  // b.none
  41ecfc:	mov	w11, #0x5c                  	// #92
  41ed00:	b	41ecc8 <feof@plt+0x1bfc8>
  41ed04:	strb	wzr, [x9]
  41ed08:	ldr	x8, [x19, #448]
  41ed0c:	ldurb	w8, [x8, #-20]
  41ed10:	cmp	w8, #0x16
  41ed14:	b.eq	41ed54 <feof@plt+0x1c054>  // b.none
  41ed18:	mov	x0, x19
  41ed1c:	bl	4298e8 <feof@plt+0x26be8>
  41ed20:	ldrb	w8, [x0, #4]
  41ed24:	cmp	w8, #0x16
  41ed28:	b.eq	41ed54 <feof@plt+0x1c054>  // b.none
  41ed2c:	ldr	x8, [x19, #144]
  41ed30:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ed34:	add	x2, x2, #0x29
  41ed38:	mov	x0, x19
  41ed3c:	ldr	x3, [x8, #8]
  41ed40:	mov	w1, wzr
  41ed44:	bl	422644 <feof@plt+0x1f944>
  41ed48:	b	41ed54 <feof@plt+0x1c054>
  41ed4c:	mov	x0, x19
  41ed50:	bl	43200c <feof@plt+0x2f30c>
  41ed54:	ldr	x8, [x19, #136]
  41ed58:	ldr	x8, [x8, #8]
  41ed5c:	cbnz	x8, 41ed4c <feof@plt+0x1c04c>
  41ed60:	ldr	x8, [x19, #448]
  41ed64:	ldurb	w8, [x8, #-20]
  41ed68:	cmp	w8, #0x16
  41ed6c:	b.eq	41ed84 <feof@plt+0x1c084>  // b.none
  41ed70:	mov	x0, x19
  41ed74:	bl	4298e8 <feof@plt+0x26be8>
  41ed78:	ldrb	w8, [x0, #4]
  41ed7c:	cmp	w8, #0x16
  41ed80:	b.ne	41ed70 <feof@plt+0x1c070>  // b.any
  41ed84:	mov	w0, #0x20                  	// #32
  41ed88:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41ed8c:	mov	x21, x0
  41ed90:	stp	xzr, xzr, [x0, #16]
  41ed94:	mov	x0, x20
  41ed98:	bl	4026d0 <strlen@plt>
  41ed9c:	add	x0, x0, #0x1
  41eda0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41eda4:	mov	x1, x20
  41eda8:	mov	x22, x0
  41edac:	str	x0, [x21, #8]
  41edb0:	bl	402860 <strcpy@plt>
  41edb4:	ldr	x8, [x19, #1400]
  41edb8:	mov	x0, x19
  41edbc:	mov	x1, x22
  41edc0:	str	x8, [x21]
  41edc4:	bl	429570 <feof@plt+0x26870>
  41edc8:	ldrb	w8, [x0, #18]
  41edcc:	tst	w8, #0x3
  41edd0:	b.eq	41eef0 <feof@plt+0x1c1f0>  // b.none
  41edd4:	mov	x20, x0
  41edd8:	mov	x0, x19
  41eddc:	mov	x1, x20
  41ede0:	bl	4338b8 <feof@plt+0x30bb8>
  41ede4:	mov	x22, x0
  41ede8:	bl	4026d0 <strlen@plt>
  41edec:	mov	x23, x0
  41edf0:	add	x0, x0, #0x2
  41edf4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41edf8:	mov	w8, #0xa                   	// #10
  41edfc:	str	x0, [x21, #16]
  41ee00:	strh	w8, [x0, x23]
  41ee04:	ldr	x8, [x20, #24]
  41ee08:	ldrb	w9, [x21, #28]
  41ee0c:	mov	x1, x22
  41ee10:	mov	x2, x23
  41ee14:	ldr	w8, [x8, #8]
  41ee18:	str	w8, [x21, #24]
  41ee1c:	ldr	x8, [x20, #24]
  41ee20:	ldrb	w8, [x8, #19]
  41ee24:	bfxil	w9, w8, #4, #1
  41ee28:	strb	w9, [x21, #28]
  41ee2c:	ldr	x8, [x20, #24]
  41ee30:	and	w9, w9, #0xfffffffd
  41ee34:	ldrb	w8, [x8, #19]
  41ee38:	lsr	w8, w8, #4
  41ee3c:	and	w8, w8, #0x2
  41ee40:	orr	w8, w8, w9
  41ee44:	strb	w8, [x21, #28]
  41ee48:	bl	402640 <memcpy@plt>
  41ee4c:	b	41eef8 <feof@plt+0x1c1f8>
  41ee50:	ldr	x8, [x19, #448]
  41ee54:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ee58:	add	x4, x4, #0x408
  41ee5c:	mov	w1, #0x3                   	// #3
  41ee60:	ldur	w2, [x8, #-24]
  41ee64:	mov	x0, x19
  41ee68:	mov	w3, wzr
  41ee6c:	bl	4228a4 <feof@plt+0x1fba4>
  41ee70:	ldr	x8, [x19, #448]
  41ee74:	ldurb	w8, [x8, #-20]
  41ee78:	cmp	w8, #0x16
  41ee7c:	b.eq	41eebc <feof@plt+0x1c1bc>  // b.none
  41ee80:	mov	x0, x19
  41ee84:	bl	4298e8 <feof@plt+0x26be8>
  41ee88:	ldrb	w8, [x0, #4]
  41ee8c:	cmp	w8, #0x16
  41ee90:	b.eq	41eebc <feof@plt+0x1c1bc>  // b.none
  41ee94:	ldr	x8, [x19, #144]
  41ee98:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ee9c:	add	x2, x2, #0x29
  41eea0:	mov	x0, x19
  41eea4:	ldr	x3, [x8, #8]
  41eea8:	mov	w1, wzr
  41eeac:	bl	422644 <feof@plt+0x1f944>
  41eeb0:	b	41eebc <feof@plt+0x1c1bc>
  41eeb4:	mov	x0, x19
  41eeb8:	bl	43200c <feof@plt+0x2f30c>
  41eebc:	ldr	x8, [x19, #136]
  41eec0:	ldr	x8, [x8, #8]
  41eec4:	cbnz	x8, 41eeb4 <feof@plt+0x1c1b4>
  41eec8:	ldr	x8, [x19, #448]
  41eecc:	ldurb	w8, [x8, #-20]
  41eed0:	cmp	w8, #0x16
  41eed4:	b.eq	41eefc <feof@plt+0x1c1fc>  // b.none
  41eed8:	mov	x0, x19
  41eedc:	bl	4298e8 <feof@plt+0x26be8>
  41eee0:	ldrb	w8, [x0, #4]
  41eee4:	cmp	w8, #0x16
  41eee8:	b.ne	41eed8 <feof@plt+0x1c1d8>  // b.any
  41eeec:	b	41eefc <feof@plt+0x1c1fc>
  41eef0:	mov	w8, #0x4                   	// #4
  41eef4:	strb	w8, [x21, #28]
  41eef8:	str	x21, [x19, #1400]
  41eefc:	mov	sp, x29
  41ef00:	ldp	x20, x19, [sp, #48]
  41ef04:	ldp	x22, x21, [sp, #32]
  41ef08:	ldr	x23, [sp, #16]
  41ef0c:	ldp	x29, x30, [sp], #64
  41ef10:	ret
  41ef14:	stp	x29, x30, [sp, #-64]!
  41ef18:	stp	x24, x23, [sp, #16]
  41ef1c:	stp	x22, x21, [sp, #32]
  41ef20:	stp	x20, x19, [sp, #48]
  41ef24:	ldr	x20, [x0, #1400]
  41ef28:	mov	x29, sp
  41ef2c:	mov	x19, x0
  41ef30:	bl	41f838 <feof@plt+0x1cb38>
  41ef34:	cbz	x0, 41f084 <feof@plt+0x1c384>
  41ef38:	ldr	w8, [x0, #8]
  41ef3c:	mov	x10, sp
  41ef40:	add	w9, w8, #0x2
  41ef44:	add	x9, x9, #0xf
  41ef48:	and	x9, x9, #0x1fffffff0
  41ef4c:	sub	x21, x10, x9
  41ef50:	mov	sp, x21
  41ef54:	ldr	x9, [x0, #16]
  41ef58:	mov	x10, x9
  41ef5c:	ldrb	w11, [x10], #1
  41ef60:	add	x8, x9, x8
  41ef64:	sub	x8, x8, #0x1
  41ef68:	cmp	w11, #0x4c
  41ef6c:	csel	x9, x9, x10, ne  // ne = any
  41ef70:	add	x10, x9, #0x1
  41ef74:	cmp	x10, x8
  41ef78:	mov	x9, x21
  41ef7c:	b.cs	41efc8 <feof@plt+0x1c2c8>  // b.hs, b.nlast
  41ef80:	mov	x9, x21
  41ef84:	b	41ef9c <feof@plt+0x1c29c>
  41ef88:	mov	x10, x12
  41ef8c:	add	x10, x10, #0x1
  41ef90:	cmp	x10, x8
  41ef94:	strb	w11, [x9], #1
  41ef98:	b.cs	41efc8 <feof@plt+0x1c2c8>  // b.hs, b.nlast
  41ef9c:	ldrb	w11, [x10]
  41efa0:	cmp	w11, #0x5c
  41efa4:	b.ne	41ef8c <feof@plt+0x1c28c>  // b.any
  41efa8:	mov	x12, x10
  41efac:	ldrb	w11, [x12, #1]!
  41efb0:	cmp	w11, #0x5c
  41efb4:	b.eq	41ef88 <feof@plt+0x1c288>  // b.none
  41efb8:	cmp	w11, #0x22
  41efbc:	b.eq	41ef88 <feof@plt+0x1c288>  // b.none
  41efc0:	mov	w11, #0x5c                  	// #92
  41efc4:	b	41ef8c <feof@plt+0x1c28c>
  41efc8:	strb	wzr, [x9]
  41efcc:	ldr	x8, [x19, #448]
  41efd0:	ldurb	w8, [x8, #-20]
  41efd4:	cmp	w8, #0x16
  41efd8:	b.eq	41f018 <feof@plt+0x1c318>  // b.none
  41efdc:	mov	x0, x19
  41efe0:	bl	4298e8 <feof@plt+0x26be8>
  41efe4:	ldrb	w8, [x0, #4]
  41efe8:	cmp	w8, #0x16
  41efec:	b.eq	41f018 <feof@plt+0x1c318>  // b.none
  41eff0:	ldr	x8, [x19, #144]
  41eff4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41eff8:	add	x2, x2, #0x29
  41effc:	mov	x0, x19
  41f000:	ldr	x3, [x8, #8]
  41f004:	mov	w1, wzr
  41f008:	bl	422644 <feof@plt+0x1f944>
  41f00c:	b	41f018 <feof@plt+0x1c318>
  41f010:	mov	x0, x19
  41f014:	bl	43200c <feof@plt+0x2f30c>
  41f018:	ldr	x8, [x19, #136]
  41f01c:	ldr	x8, [x8, #8]
  41f020:	cbnz	x8, 41f010 <feof@plt+0x1c310>
  41f024:	ldr	x8, [x19, #448]
  41f028:	ldurb	w8, [x8, #-20]
  41f02c:	cmp	w8, #0x16
  41f030:	b.eq	41f048 <feof@plt+0x1c348>  // b.none
  41f034:	mov	x0, x19
  41f038:	bl	4298e8 <feof@plt+0x26be8>
  41f03c:	ldrb	w8, [x0, #4]
  41f040:	cmp	w8, #0x16
  41f044:	b.ne	41f034 <feof@plt+0x1c334>  // b.any
  41f048:	cbz	x20, 41f120 <feof@plt+0x1c420>
  41f04c:	ldr	x22, [x20, #8]
  41f050:	mov	x1, x21
  41f054:	mov	x0, x22
  41f058:	bl	402b40 <strcmp@plt>
  41f05c:	cbz	w0, 41f138 <feof@plt+0x1c438>
  41f060:	mov	x23, x20
  41f064:	ldr	x20, [x20]
  41f068:	cbz	x20, 41f120 <feof@plt+0x1c420>
  41f06c:	ldr	x22, [x20, #8]
  41f070:	mov	x1, x21
  41f074:	mov	x0, x22
  41f078:	bl	402b40 <strcmp@plt>
  41f07c:	cbnz	w0, 41f060 <feof@plt+0x1c360>
  41f080:	b	41f13c <feof@plt+0x1c43c>
  41f084:	ldr	x8, [x19, #448]
  41f088:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f08c:	add	x4, x4, #0x42d
  41f090:	mov	w1, #0x3                   	// #3
  41f094:	ldur	w2, [x8, #-24]
  41f098:	mov	x0, x19
  41f09c:	mov	w3, wzr
  41f0a0:	bl	4228a4 <feof@plt+0x1fba4>
  41f0a4:	ldr	x8, [x19, #448]
  41f0a8:	ldurb	w8, [x8, #-20]
  41f0ac:	cmp	w8, #0x16
  41f0b0:	b.eq	41f0f0 <feof@plt+0x1c3f0>  // b.none
  41f0b4:	mov	x0, x19
  41f0b8:	bl	4298e8 <feof@plt+0x26be8>
  41f0bc:	ldrb	w8, [x0, #4]
  41f0c0:	cmp	w8, #0x16
  41f0c4:	b.eq	41f0f0 <feof@plt+0x1c3f0>  // b.none
  41f0c8:	ldr	x8, [x19, #144]
  41f0cc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f0d0:	add	x2, x2, #0x29
  41f0d4:	mov	x0, x19
  41f0d8:	ldr	x3, [x8, #8]
  41f0dc:	mov	w1, wzr
  41f0e0:	bl	422644 <feof@plt+0x1f944>
  41f0e4:	b	41f0f0 <feof@plt+0x1c3f0>
  41f0e8:	mov	x0, x19
  41f0ec:	bl	43200c <feof@plt+0x2f30c>
  41f0f0:	ldr	x8, [x19, #136]
  41f0f4:	ldr	x8, [x8, #8]
  41f0f8:	cbnz	x8, 41f0e8 <feof@plt+0x1c3e8>
  41f0fc:	ldr	x8, [x19, #448]
  41f100:	ldurb	w8, [x8, #-20]
  41f104:	cmp	w8, #0x16
  41f108:	b.eq	41f120 <feof@plt+0x1c420>  // b.none
  41f10c:	mov	x0, x19
  41f110:	bl	4298e8 <feof@plt+0x26be8>
  41f114:	ldrb	w8, [x0, #4]
  41f118:	cmp	w8, #0x16
  41f11c:	b.ne	41f10c <feof@plt+0x1c40c>  // b.any
  41f120:	mov	sp, x29
  41f124:	ldp	x20, x19, [sp, #48]
  41f128:	ldp	x22, x21, [sp, #32]
  41f12c:	ldp	x24, x23, [sp, #16]
  41f130:	ldp	x29, x30, [sp], #64
  41f134:	ret
  41f138:	mov	x23, xzr
  41f13c:	ldr	x8, [x20]
  41f140:	add	x9, x19, #0x578
  41f144:	cmp	x23, #0x0
  41f148:	csel	x9, x9, x23, eq  // eq = none
  41f14c:	mov	x0, x19
  41f150:	mov	x1, x22
  41f154:	str	x8, [x9]
  41f158:	bl	429570 <feof@plt+0x26870>
  41f15c:	cbz	x0, 41f32c <feof@plt+0x1c62c>
  41f160:	ldr	x8, [x19, #1024]
  41f164:	mov	x21, x0
  41f168:	cbz	x8, 41f174 <feof@plt+0x1c474>
  41f16c:	mov	x0, x19
  41f170:	blr	x8
  41f174:	ldrb	w8, [x21, #18]
  41f178:	tbz	w8, #1, 41f1b4 <feof@plt+0x1c4b4>
  41f17c:	ldr	x8, [x19, #944]
  41f180:	cbz	x8, 41f194 <feof@plt+0x1c494>
  41f184:	ldr	w1, [x19, #48]
  41f188:	mov	x0, x19
  41f18c:	mov	x2, x21
  41f190:	blr	x8
  41f194:	ldrb	w8, [x19, #1151]
  41f198:	cbz	w8, 41f1ac <feof@plt+0x1c4ac>
  41f19c:	mov	x0, x19
  41f1a0:	mov	x1, x21
  41f1a4:	mov	x2, xzr
  41f1a8:	bl	43190c <feof@plt+0x2ec0c>
  41f1ac:	mov	x0, x21
  41f1b0:	bl	4329b4 <feof@plt+0x2fcb4>
  41f1b4:	ldrb	w8, [x20, #28]
  41f1b8:	tbnz	w8, #2, 41f32c <feof@plt+0x1c62c>
  41f1bc:	ldr	x21, [x20, #16]
  41f1c0:	adrp	x1, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f1c4:	add	x1, x1, #0x451
  41f1c8:	mov	x0, x21
  41f1cc:	bl	4028b0 <strcspn@plt>
  41f1d0:	mov	x22, x0
  41f1d4:	mov	x0, x19
  41f1d8:	mov	x1, x21
  41f1dc:	mov	w2, w22
  41f1e0:	bl	428bc4 <feof@plt+0x25ec4>
  41f1e4:	ldr	x8, [x20, #16]
  41f1e8:	mov	x21, x0
  41f1ec:	mov	w1, #0xa                   	// #10
  41f1f0:	add	x22, x8, w22, sxtw
  41f1f4:	mov	x0, x22
  41f1f8:	bl	4027b0 <strchr@plt>
  41f1fc:	ldr	x9, [x19, #840]
  41f200:	ldr	x8, [x19, #832]
  41f204:	mov	x23, x0
  41f208:	sub	x9, x9, x8
  41f20c:	cmp	x9, #0xc7
  41f210:	b.hi	41f224 <feof@plt+0x1c524>  // b.pmore
  41f214:	add	x0, x19, #0x328
  41f218:	mov	w1, #0xc8                  	// #200
  41f21c:	bl	45500c <_obstack_newchunk@@Base>
  41f220:	ldr	x8, [x19, #832]
  41f224:	ldr	x24, [x19, #824]
  41f228:	add	x8, x8, #0xc8
  41f22c:	str	x8, [x19, #832]
  41f230:	cmp	x8, x24
  41f234:	b.ne	41f244 <feof@plt+0x1c544>  // b.any
  41f238:	ldrb	w9, [x19, #888]
  41f23c:	orr	w9, w9, #0x2
  41f240:	strb	w9, [x19, #888]
  41f244:	ldr	x10, [x19, #856]
  41f248:	ldr	x11, [x19, #816]
  41f24c:	ldr	x9, [x19, #840]
  41f250:	add	x8, x10, x8
  41f254:	bic	x8, x8, x10
  41f258:	sub	x10, x8, x11
  41f25c:	sub	x11, x9, x11
  41f260:	cmp	x10, x11
  41f264:	str	x8, [x19, #832]
  41f268:	b.ls	41f274 <feof@plt+0x1c574>  // b.plast
  41f26c:	mov	x8, x9
  41f270:	str	x9, [x19, #832]
  41f274:	str	x8, [x19, #824]
  41f278:	movi	v0.2d, #0x0
  41f27c:	mov	w8, #0x2                   	// #2
  41f280:	str	xzr, [x24, #192]
  41f284:	stp	q0, q0, [x24, #160]
  41f288:	stp	q0, q0, [x24, #128]
  41f28c:	stp	q0, q0, [x24, #96]
  41f290:	stp	q0, q0, [x24, #64]
  41f294:	stp	q0, q0, [x24, #32]
  41f298:	stp	q0, q0, [x24]
  41f29c:	stp	x22, x22, [x24, #16]
  41f2a0:	str	x23, [x24, #32]
  41f2a4:	strb	w8, [x24, #105]
  41f2a8:	ldr	x8, [x19]
  41f2ac:	mov	w22, #0x1                   	// #1
  41f2b0:	strb	w22, [x24, #104]
  41f2b4:	str	x8, [x24, #72]
  41f2b8:	str	x24, [x19]
  41f2bc:	cbz	x24, 41f358 <feof@plt+0x1c658>
  41f2c0:	mov	x0, x19
  41f2c4:	bl	428c88 <feof@plt+0x25f88>
  41f2c8:	mov	x0, x19
  41f2cc:	mov	x1, x21
  41f2d0:	strb	w22, [x24, #106]
  41f2d4:	bl	432b98 <feof@plt+0x2fe98>
  41f2d8:	tbz	w0, #0, 41f370 <feof@plt+0x1c670>
  41f2dc:	mov	x0, x19
  41f2e0:	bl	4206a4 <feof@plt+0x1d9a4>
  41f2e4:	ldr	w8, [x20, #24]
  41f2e8:	ldr	x9, [x21, #24]
  41f2ec:	str	w8, [x9, #8]
  41f2f0:	ldr	x8, [x21, #24]
  41f2f4:	ldrb	w9, [x20, #28]
  41f2f8:	ldrb	w10, [x8, #19]
  41f2fc:	ubfiz	w9, w9, #4, #1
  41f300:	and	w10, w10, #0xffffffef
  41f304:	orr	w9, w10, w9
  41f308:	strb	w9, [x8, #19]
  41f30c:	ldr	x8, [x21, #24]
  41f310:	ldrb	w9, [x20, #28]
  41f314:	ldrb	w10, [x8, #19]
  41f318:	lsl	w9, w9, #4
  41f31c:	and	w9, w9, #0x20
  41f320:	and	w10, w10, #0xffffffdf
  41f324:	orr	w9, w10, w9
  41f328:	strb	w9, [x8, #19]
  41f32c:	ldr	x0, [x20, #16]
  41f330:	bl	402770 <free@plt>
  41f334:	ldr	x0, [x20, #8]
  41f338:	bl	402770 <free@plt>
  41f33c:	mov	x0, x20
  41f340:	mov	sp, x29
  41f344:	ldp	x20, x19, [sp, #48]
  41f348:	ldp	x22, x21, [sp, #32]
  41f34c:	ldp	x24, x23, [sp, #16]
  41f350:	ldp	x29, x30, [sp], #64
  41f354:	b	402770 <free@plt>
  41f358:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f35c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f360:	add	x0, x0, #0x455
  41f364:	add	x2, x2, #0x46f
  41f368:	mov	w1, #0x9ac                 	// #2476
  41f36c:	bl	408b70 <feof@plt+0x5e70>
  41f370:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f374:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f378:	add	x0, x0, #0x455
  41f37c:	add	x2, x2, #0x46f
  41f380:	mov	w1, #0x9a8                 	// #2472
  41f384:	bl	408b70 <feof@plt+0x5e70>
  41f388:	stp	x29, x30, [sp, #-48]!
  41f38c:	stp	x20, x19, [sp, #32]
  41f390:	adrp	x20, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f394:	mov	x19, x0
  41f398:	mov	w8, #0x1                   	// #1
  41f39c:	add	x20, x20, #0x4a7
  41f3a0:	str	x21, [sp, #16]
  41f3a4:	mov	x29, sp
  41f3a8:	strb	w8, [x0, #23]
  41f3ac:	b	41f3c4 <feof@plt+0x1c6c4>
  41f3b0:	mov	x0, x21
  41f3b4:	bl	4329b4 <feof@plt+0x2fcb4>
  41f3b8:	ldrh	w8, [x21, #18]
  41f3bc:	orr	w8, w8, #0x18
  41f3c0:	strh	w8, [x21, #18]
  41f3c4:	mov	x0, x19
  41f3c8:	bl	4298e8 <feof@plt+0x26be8>
  41f3cc:	ldrb	w8, [x0, #4]
  41f3d0:	cmp	w8, #0x35
  41f3d4:	b.ne	41f400 <feof@plt+0x1c700>  // b.any
  41f3d8:	ldr	x21, [x0, #8]
  41f3dc:	ldrh	w8, [x21, #18]
  41f3e0:	tbnz	w8, #3, 41f3c4 <feof@plt+0x1c6c4>
  41f3e4:	tbz	w8, #1, 41f3b0 <feof@plt+0x1c6b0>
  41f3e8:	ldr	x3, [x21]
  41f3ec:	mov	x0, x19
  41f3f0:	mov	w1, wzr
  41f3f4:	mov	x2, x20
  41f3f8:	bl	4223e4 <feof@plt+0x1f6e4>
  41f3fc:	b	41f3b0 <feof@plt+0x1c6b0>
  41f400:	cmp	w8, #0x16
  41f404:	b.eq	41f41c <feof@plt+0x1c71c>  // b.none
  41f408:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f40c:	add	x2, x2, #0x482
  41f410:	mov	w1, #0x3                   	// #3
  41f414:	mov	x0, x19
  41f418:	bl	4223e4 <feof@plt+0x1f6e4>
  41f41c:	strb	wzr, [x19, #23]
  41f420:	ldp	x20, x19, [sp, #32]
  41f424:	ldr	x21, [sp, #16]
  41f428:	ldp	x29, x30, [sp], #48
  41f42c:	ret
  41f430:	stp	x29, x30, [sp, #-32]!
  41f434:	ldr	x8, [x0, #40]
  41f438:	str	x19, [sp, #16]
  41f43c:	mov	x19, x0
  41f440:	mov	x29, sp
  41f444:	ldr	w8, [x8, #48]
  41f448:	cmp	w8, #0x1
  41f44c:	b.ne	41f46c <feof@plt+0x1c76c>  // b.any
  41f450:	mov	x0, x19
  41f454:	ldr	x19, [sp, #16]
  41f458:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f45c:	add	x2, x2, #0x4c5
  41f460:	mov	w1, wzr
  41f464:	ldp	x29, x30, [sp], #32
  41f468:	b	4223e4 <feof@plt+0x1f6e4>
  41f46c:	ldr	x8, [x19, #448]
  41f470:	ldurb	w8, [x8, #-20]
  41f474:	cmp	w8, #0x16
  41f478:	b.eq	41f4b8 <feof@plt+0x1c7b8>  // b.none
  41f47c:	mov	x0, x19
  41f480:	bl	4298e8 <feof@plt+0x26be8>
  41f484:	ldrb	w8, [x0, #4]
  41f488:	cmp	w8, #0x16
  41f48c:	b.eq	41f4b8 <feof@plt+0x1c7b8>  // b.none
  41f490:	ldr	x8, [x19, #144]
  41f494:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f498:	add	x2, x2, #0x29
  41f49c:	mov	x0, x19
  41f4a0:	ldr	x3, [x8, #8]
  41f4a4:	mov	w1, wzr
  41f4a8:	bl	422644 <feof@plt+0x1f944>
  41f4ac:	b	41f4b8 <feof@plt+0x1c7b8>
  41f4b0:	mov	x0, x19
  41f4b4:	bl	43200c <feof@plt+0x2f30c>
  41f4b8:	ldr	x8, [x19, #136]
  41f4bc:	ldr	x8, [x8, #8]
  41f4c0:	cbnz	x8, 41f4b0 <feof@plt+0x1c7b0>
  41f4c4:	ldr	x8, [x19, #448]
  41f4c8:	ldurb	w8, [x8, #-20]
  41f4cc:	cmp	w8, #0x16
  41f4d0:	b.eq	41f4e8 <feof@plt+0x1c7e8>  // b.none
  41f4d4:	mov	x0, x19
  41f4d8:	bl	4298e8 <feof@plt+0x26be8>
  41f4dc:	ldrb	w8, [x0, #4]
  41f4e0:	cmp	w8, #0x16
  41f4e4:	b.ne	41f4d4 <feof@plt+0x1c7d4>  // b.any
  41f4e8:	mov	x0, x19
  41f4ec:	ldr	x19, [sp, #16]
  41f4f0:	mov	w1, #0x1                   	// #1
  41f4f4:	mov	w2, wzr
  41f4f8:	ldp	x29, x30, [sp], #32
  41f4fc:	b	427984 <feof@plt+0x24c84>
  41f500:	sub	sp, sp, #0x40
  41f504:	stp	x29, x30, [sp, #16]
  41f508:	add	x29, sp, #0x10
  41f50c:	sub	x1, x29, #0x4
  41f510:	add	x3, sp, #0x8
  41f514:	mov	x2, xzr
  41f518:	stp	x22, x21, [sp, #32]
  41f51c:	stp	x20, x19, [sp, #48]
  41f520:	mov	x20, x0
  41f524:	bl	421b5c <feof@plt+0x1ee5c>
  41f528:	cbz	x0, 41f5fc <feof@plt+0x1c8fc>
  41f52c:	ldur	w2, [x29, #-4]
  41f530:	mov	x19, x0
  41f534:	mov	x0, x20
  41f538:	mov	x1, x19
  41f53c:	bl	427b60 <feof@plt+0x24e60>
  41f540:	tbnz	w0, #31, 41f5dc <feof@plt+0x1c8dc>
  41f544:	cbz	w0, 41f5f4 <feof@plt+0x1c8f4>
  41f548:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f54c:	add	x2, x2, #0x513
  41f550:	mov	x0, x20
  41f554:	mov	w1, wzr
  41f558:	mov	x3, x19
  41f55c:	bl	4223e4 <feof@plt+0x1f6e4>
  41f560:	mov	x0, x20
  41f564:	bl	432114 <feof@plt+0x2f414>
  41f568:	ldrb	w8, [x0, #4]
  41f56c:	cmp	w8, #0x16
  41f570:	b.eq	41f5f4 <feof@plt+0x1c8f4>  // b.none
  41f574:	mov	w1, #0x1                   	// #1
  41f578:	mov	x0, x20
  41f57c:	bl	4328a0 <feof@plt+0x2fba0>
  41f580:	ldr	x8, [x20, #448]
  41f584:	ldrb	w9, [x20, #24]
  41f588:	mov	x0, x20
  41f58c:	mov	x1, xzr
  41f590:	ldur	w21, [x8, #-24]
  41f594:	add	w8, w9, #0x1
  41f598:	strb	w8, [x20, #24]
  41f59c:	bl	42d7f8 <feof@plt+0x2aaf8>
  41f5a0:	ldrb	w8, [x20, #24]
  41f5a4:	mov	x22, x0
  41f5a8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f5ac:	add	x4, x4, #0x88c
  41f5b0:	sub	w8, w8, #0x1
  41f5b4:	mov	x0, x20
  41f5b8:	mov	w1, wzr
  41f5bc:	mov	w2, w21
  41f5c0:	mov	w3, wzr
  41f5c4:	mov	x5, x22
  41f5c8:	strb	w8, [x20, #24]
  41f5cc:	bl	4228a4 <feof@plt+0x1fba4>
  41f5d0:	mov	x0, x22
  41f5d4:	bl	402770 <free@plt>
  41f5d8:	b	41f5f4 <feof@plt+0x1c8f4>
  41f5dc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41f5e0:	add	x2, x2, #0x4f8
  41f5e4:	mov	x0, x20
  41f5e8:	mov	w1, wzr
  41f5ec:	mov	x3, x19
  41f5f0:	bl	4223e4 <feof@plt+0x1f6e4>
  41f5f4:	mov	x0, x19
  41f5f8:	bl	402770 <free@plt>
  41f5fc:	ldp	x20, x19, [sp, #48]
  41f600:	ldp	x22, x21, [sp, #32]
  41f604:	ldp	x29, x30, [sp, #16]
  41f608:	add	sp, sp, #0x40
  41f60c:	ret
  41f610:	mov	w1, wzr
  41f614:	b	422330 <feof@plt+0x1f630>
  41f618:	mov	w1, #0x1                   	// #1
  41f61c:	b	422330 <feof@plt+0x1f630>
  41f620:	stp	x29, x30, [sp, #-32]!
  41f624:	str	x19, [sp, #16]
  41f628:	mov	x19, x0
  41f62c:	ldr	x0, [x0, #896]
  41f630:	mov	x29, sp
  41f634:	bl	41f664 <feof@plt+0x1c964>
  41f638:	sbfiz	x0, x0, #3, #32
  41f63c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41f640:	ldr	x8, [x19, #896]
  41f644:	mov	x19, x0
  41f648:	mov	x1, x19
  41f64c:	mov	x0, x8
  41f650:	bl	41f6b8 <feof@plt+0x1c9b8>
  41f654:	mov	x0, x19
  41f658:	ldr	x19, [sp, #16]
  41f65c:	ldp	x29, x30, [sp], #32
  41f660:	ret
  41f664:	stp	x29, x30, [sp, #-32]!
  41f668:	stp	x20, x19, [sp, #16]
  41f66c:	mov	x29, sp
  41f670:	cbz	x0, 41f6a4 <feof@plt+0x1c9a4>
  41f674:	mov	x19, x0
  41f678:	mov	w20, wzr
  41f67c:	b	41f68c <feof@plt+0x1c98c>
  41f680:	ldr	x19, [x19]
  41f684:	add	w20, w20, #0x1
  41f688:	cbz	x19, 41f6a8 <feof@plt+0x1c9a8>
  41f68c:	ldrb	w8, [x19, #16]
  41f690:	cbz	w8, 41f680 <feof@plt+0x1c980>
  41f694:	ldr	x0, [x19, #24]
  41f698:	bl	41f664 <feof@plt+0x1c964>
  41f69c:	add	w20, w0, w20
  41f6a0:	b	41f680 <feof@plt+0x1c980>
  41f6a4:	mov	w20, wzr
  41f6a8:	mov	w0, w20
  41f6ac:	ldp	x20, x19, [sp, #16]
  41f6b0:	ldp	x29, x30, [sp], #32
  41f6b4:	ret
  41f6b8:	stp	x29, x30, [sp, #-32]!
  41f6bc:	stp	x20, x19, [sp, #16]
  41f6c0:	mov	x19, x1
  41f6c4:	mov	x29, sp
  41f6c8:	cbz	x0, 41f710 <feof@plt+0x1ca10>
  41f6cc:	mov	x20, x0
  41f6d0:	b	41f6f4 <feof@plt+0x1c9f4>
  41f6d4:	ldr	x8, [x20, #8]
  41f6d8:	ldr	w1, [x8, #8]
  41f6dc:	ldr	x0, [x8]
  41f6e0:	add	w2, w1, #0x1
  41f6e4:	bl	455424 <_obstack_memory_used@@Base+0x1fc>
  41f6e8:	str	x0, [x19], #8
  41f6ec:	ldr	x20, [x20]
  41f6f0:	cbz	x20, 41f710 <feof@plt+0x1ca10>
  41f6f4:	ldrb	w8, [x20, #16]
  41f6f8:	cbz	w8, 41f6d4 <feof@plt+0x1c9d4>
  41f6fc:	ldr	x0, [x20, #24]
  41f700:	mov	x1, x19
  41f704:	bl	41f6b8 <feof@plt+0x1c9b8>
  41f708:	mov	x19, x0
  41f70c:	b	41f6d4 <feof@plt+0x1c9d4>
  41f710:	mov	x0, x19
  41f714:	ldp	x20, x19, [sp, #16]
  41f718:	ldp	x29, x30, [sp], #32
  41f71c:	ret
  41f720:	stp	x29, x30, [sp, #-32]!
  41f724:	ldr	x8, [x0, #896]
  41f728:	str	x19, [sp, #16]
  41f72c:	mov	x19, x1
  41f730:	mov	x2, x19
  41f734:	mov	x1, x8
  41f738:	mov	x29, sp
  41f73c:	bl	41f750 <feof@plt+0x1ca50>
  41f740:	mov	x0, x19
  41f744:	ldr	x19, [sp, #16]
  41f748:	ldp	x29, x30, [sp], #32
  41f74c:	b	402770 <free@plt>
  41f750:	stp	x29, x30, [sp, #-48]!
  41f754:	stp	x20, x19, [sp, #32]
  41f758:	mov	x19, x2
  41f75c:	stp	x22, x21, [sp, #16]
  41f760:	mov	x29, sp
  41f764:	cbz	x1, 41f7c4 <feof@plt+0x1cac4>
  41f768:	mov	x20, x1
  41f76c:	mov	x21, x0
  41f770:	b	41f7a4 <feof@plt+0x1caa4>
  41f774:	ldr	x22, [x19]
  41f778:	mov	x0, x22
  41f77c:	bl	4026d0 <strlen@plt>
  41f780:	mov	x2, x0
  41f784:	mov	x0, x21
  41f788:	mov	x1, x22
  41f78c:	bl	428bc4 <feof@plt+0x25ec4>
  41f790:	str	x0, [x20, #8]
  41f794:	ldr	x0, [x19], #8
  41f798:	bl	402770 <free@plt>
  41f79c:	ldr	x20, [x20]
  41f7a0:	cbz	x20, 41f7c4 <feof@plt+0x1cac4>
  41f7a4:	ldrb	w8, [x20, #16]
  41f7a8:	cbz	w8, 41f774 <feof@plt+0x1ca74>
  41f7ac:	ldr	x1, [x20, #24]
  41f7b0:	mov	x0, x21
  41f7b4:	mov	x2, x19
  41f7b8:	bl	41f750 <feof@plt+0x1ca50>
  41f7bc:	mov	x19, x0
  41f7c0:	b	41f774 <feof@plt+0x1ca74>
  41f7c4:	mov	x0, x19
  41f7c8:	ldp	x20, x19, [sp, #32]
  41f7cc:	ldp	x22, x21, [sp, #16]
  41f7d0:	ldp	x29, x30, [sp], #48
  41f7d4:	ret
  41f7d8:	stp	x29, x30, [sp, #-32]!
  41f7dc:	stp	x20, x19, [sp, #16]
  41f7e0:	mov	x29, sp
  41f7e4:	mov	w20, w1
  41f7e8:	mov	x19, x0
  41f7ec:	bl	41f838 <feof@plt+0x1cb38>
  41f7f0:	mov	w8, #0x53                  	// #83
  41f7f4:	strb	w8, [x19, #156]
  41f7f8:	cbz	x0, 41f814 <feof@plt+0x1cb14>
  41f7fc:	add	x1, x0, #0x8
  41f800:	mov	x0, x19
  41f804:	mov	w2, w20
  41f808:	bl	41f910 <feof@plt+0x1cc10>
  41f80c:	mov	w0, #0x1                   	// #1
  41f810:	b	41f82c <feof@plt+0x1cb2c>
  41f814:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  41f818:	add	x2, x2, #0xe4d
  41f81c:	mov	w1, #0x3                   	// #3
  41f820:	mov	x0, x19
  41f824:	bl	4223e4 <feof@plt+0x1f6e4>
  41f828:	mov	w0, wzr
  41f82c:	ldp	x20, x19, [sp, #16]
  41f830:	ldp	x29, x30, [sp], #32
  41f834:	ret
  41f838:	stp	x29, x30, [sp, #-48]!
  41f83c:	stp	x20, x19, [sp, #32]
  41f840:	mov	x19, x0
  41f844:	str	x21, [sp, #16]
  41f848:	mov	x29, sp
  41f84c:	mov	x0, x19
  41f850:	bl	432114 <feof@plt+0x2f414>
  41f854:	ldrb	w8, [x0, #4]
  41f858:	cmp	w8, #0x53
  41f85c:	b.eq	41f84c <feof@plt+0x1cb4c>  // b.none
  41f860:	cmp	w8, #0x16
  41f864:	b.ne	41f87c <feof@plt+0x1cb7c>  // b.any
  41f868:	mov	x20, x0
  41f86c:	mov	w1, #0x1                   	// #1
  41f870:	mov	x0, x19
  41f874:	bl	4328a0 <feof@plt+0x2fba0>
  41f878:	ldrb	w8, [x20, #4]
  41f87c:	cmp	w8, #0x14
  41f880:	b.ne	41f8fc <feof@plt+0x1cbfc>  // b.any
  41f884:	mov	x0, x19
  41f888:	bl	432114 <feof@plt+0x2f414>
  41f88c:	ldrb	w8, [x0, #4]
  41f890:	cmp	w8, #0x53
  41f894:	b.eq	41f884 <feof@plt+0x1cb84>  // b.none
  41f898:	mov	x20, x0
  41f89c:	cmp	w8, #0x16
  41f8a0:	b.ne	41f8b4 <feof@plt+0x1cbb4>  // b.any
  41f8a4:	mov	w1, #0x1                   	// #1
  41f8a8:	mov	x0, x19
  41f8ac:	bl	4328a0 <feof@plt+0x2fba0>
  41f8b0:	ldrb	w8, [x20, #4]
  41f8b4:	sub	w8, w8, #0x3e
  41f8b8:	cmp	w8, #0x4
  41f8bc:	b.hi	41f8fc <feof@plt+0x1cbfc>  // b.pmore
  41f8c0:	mov	x0, x19
  41f8c4:	bl	432114 <feof@plt+0x2f414>
  41f8c8:	ldrb	w8, [x0, #4]
  41f8cc:	cmp	w8, #0x53
  41f8d0:	b.eq	41f8c0 <feof@plt+0x1cbc0>  // b.none
  41f8d4:	cmp	w8, #0x16
  41f8d8:	b.ne	41f8f0 <feof@plt+0x1cbf0>  // b.any
  41f8dc:	mov	x21, x0
  41f8e0:	mov	w1, #0x1                   	// #1
  41f8e4:	mov	x0, x19
  41f8e8:	bl	4328a0 <feof@plt+0x2fba0>
  41f8ec:	ldrb	w8, [x21, #4]
  41f8f0:	cmp	w8, #0x15
  41f8f4:	csel	x0, x20, xzr, eq  // eq = none
  41f8f8:	b	41f900 <feof@plt+0x1cc00>
  41f8fc:	mov	x0, xzr
  41f900:	ldp	x20, x19, [sp, #32]
  41f904:	ldr	x21, [sp, #16]
  41f908:	ldp	x29, x30, [sp], #48
  41f90c:	ret
  41f910:	stp	x29, x30, [sp, #-96]!
  41f914:	stp	x28, x27, [sp, #16]
  41f918:	stp	x26, x25, [sp, #32]
  41f91c:	stp	x24, x23, [sp, #48]
  41f920:	stp	x22, x21, [sp, #64]
  41f924:	stp	x20, x19, [sp, #80]
  41f928:	ldr	w8, [x1]
  41f92c:	mov	x10, sp
  41f930:	mov	w20, w2
  41f934:	mov	x19, x0
  41f938:	sub	w9, w8, #0x1
  41f93c:	add	x9, x9, #0xf
  41f940:	and	x9, x9, #0x1fffffff0
  41f944:	sub	x21, x10, x9
  41f948:	mov	x29, sp
  41f94c:	mov	sp, x21
  41f950:	ldr	x9, [x1, #8]
  41f954:	mov	x22, x21
  41f958:	mov	x10, x9
  41f95c:	ldrb	w11, [x10], #1
  41f960:	add	x8, x9, x8
  41f964:	sub	x8, x8, #0x1
  41f968:	cmp	w11, #0x4c
  41f96c:	csel	x9, x9, x10, ne  // ne = any
  41f970:	add	x9, x9, #0x1
  41f974:	cmp	x9, x8
  41f978:	b.cs	41f9c4 <feof@plt+0x1ccc4>  // b.hs, b.nlast
  41f97c:	mov	x22, x21
  41f980:	b	41f998 <feof@plt+0x1cc98>
  41f984:	mov	x9, x11
  41f988:	add	x9, x9, #0x1
  41f98c:	cmp	x9, x8
  41f990:	strb	w10, [x22], #1
  41f994:	b.cs	41f9c4 <feof@plt+0x1ccc4>  // b.hs, b.nlast
  41f998:	ldrb	w10, [x9]
  41f99c:	cmp	w10, #0x5c
  41f9a0:	b.ne	41f988 <feof@plt+0x1cc88>  // b.any
  41f9a4:	mov	x11, x9
  41f9a8:	ldrb	w10, [x11, #1]!
  41f9ac:	cmp	w10, #0x5c
  41f9b0:	b.eq	41f984 <feof@plt+0x1cc84>  // b.none
  41f9b4:	cmp	w10, #0x22
  41f9b8:	b.eq	41f984 <feof@plt+0x1cc84>  // b.none
  41f9bc:	mov	w10, #0x5c                  	// #92
  41f9c0:	b	41f988 <feof@plt+0x1cc88>
  41f9c4:	mov	w8, #0xa                   	// #10
  41f9c8:	strb	w8, [x22]
  41f9cc:	ldr	x23, [x19, #136]
  41f9d0:	ldr	x24, [x19, #448]
  41f9d4:	ldr	x25, [x19, #488]
  41f9d8:	mov	w0, #0x1                   	// #1
  41f9dc:	mov	w1, #0x38                  	// #56
  41f9e0:	bl	455390 <_obstack_memory_used@@Base+0x168>
  41f9e4:	ldr	x8, [x19, #840]
  41f9e8:	ldr	x9, [x19, #832]
  41f9ec:	str	x0, [x19, #136]
  41f9f0:	sub	x8, x8, x9
  41f9f4:	cmp	x8, #0xc7
  41f9f8:	b.hi	41fa0c <feof@plt+0x1cd0c>  // b.pmore
  41f9fc:	add	x0, x19, #0x328
  41fa00:	mov	w1, #0xc8                  	// #200
  41fa04:	bl	45500c <_obstack_newchunk@@Base>
  41fa08:	ldr	x9, [x19, #832]
  41fa0c:	ldr	x8, [x19, #824]
  41fa10:	add	x9, x9, #0xc8
  41fa14:	str	x9, [x19, #832]
  41fa18:	cmp	x9, x8
  41fa1c:	b.ne	41fa2c <feof@plt+0x1cd2c>  // b.any
  41fa20:	ldrb	w10, [x19, #888]
  41fa24:	orr	w10, w10, #0x2
  41fa28:	strb	w10, [x19, #888]
  41fa2c:	ldr	x11, [x19, #856]
  41fa30:	ldr	x12, [x19, #816]
  41fa34:	ldr	x10, [x19, #840]
  41fa38:	add	x9, x11, x9
  41fa3c:	bic	x9, x9, x11
  41fa40:	sub	x11, x9, x12
  41fa44:	sub	x12, x10, x12
  41fa48:	cmp	x11, x12
  41fa4c:	str	x9, [x19, #832]
  41fa50:	b.ls	41fa5c <feof@plt+0x1cd5c>  // b.plast
  41fa54:	mov	x9, x10
  41fa58:	str	x10, [x19, #832]
  41fa5c:	str	x9, [x19, #824]
  41fa60:	movi	v0.2d, #0x0
  41fa64:	mov	w9, #0x2                   	// #2
  41fa68:	str	xzr, [x8, #192]
  41fa6c:	stp	q0, q0, [x8, #160]
  41fa70:	stp	q0, q0, [x8, #128]
  41fa74:	stp	q0, q0, [x8, #96]
  41fa78:	stp	q0, q0, [x8, #64]
  41fa7c:	stp	q0, q0, [x8, #32]
  41fa80:	stp	q0, q0, [x8]
  41fa84:	stp	x21, x21, [x8, #16]
  41fa88:	str	x22, [x8, #32]
  41fa8c:	strb	w9, [x8, #105]
  41fa90:	ldr	x10, [x19]
  41fa94:	mov	w9, #0x1                   	// #1
  41fa98:	strb	w9, [x8, #104]
  41fa9c:	str	x10, [x8, #72]
  41faa0:	str	x8, [x19]
  41faa4:	cbz	x10, 41fab0 <feof@plt+0x1cdb0>
  41faa8:	ldr	x10, [x10, #80]
  41faac:	str	x10, [x8, #80]
  41fab0:	ldr	x8, [x19, #40]
  41fab4:	strb	w9, [x19, #16]
  41fab8:	mov	w9, #0x53                  	// #83
  41fabc:	strb	wzr, [x19, #21]
  41fac0:	strb	w9, [x19, #156]
  41fac4:	ldr	w8, [x8, #60]
  41fac8:	mov	x0, x19
  41facc:	str	w8, [x19, #48]
  41fad0:	bl	428c88 <feof@plt+0x25f88>
  41fad4:	ldr	x21, [x19, #144]
  41fad8:	adrp	x8, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41fadc:	add	x8, x8, #0x710
  41fae0:	mov	x0, x19
  41fae4:	str	x8, [x19, #144]
  41fae8:	bl	4212f4 <feof@plt+0x1e5f4>
  41faec:	ldrb	w9, [x19, #1160]
  41faf0:	ldrb	w8, [x19, #32]
  41faf4:	cbz	w9, 41fb28 <feof@plt+0x1ce28>
  41faf8:	cbnz	w8, 41fb08 <feof@plt+0x1ce08>
  41fafc:	ldrb	w8, [x19, #24]
  41fb00:	sub	w8, w8, #0x1
  41fb04:	strb	w8, [x19, #24]
  41fb08:	ldr	x8, [x19, #144]
  41fb0c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41fb10:	add	x9, x9, #0x608
  41fb14:	cmp	x8, x9
  41fb18:	b.eq	41fb80 <feof@plt+0x1ce80>  // b.none
  41fb1c:	mov	x0, x19
  41fb20:	bl	437254 <feof@plt+0x34554>
  41fb24:	b	41fb80 <feof@plt+0x1ce80>
  41fb28:	cbnz	w8, 41fb80 <feof@plt+0x1ce80>
  41fb2c:	b	41fb38 <feof@plt+0x1ce38>
  41fb30:	mov	x0, x19
  41fb34:	bl	43200c <feof@plt+0x2f30c>
  41fb38:	ldr	x8, [x19, #136]
  41fb3c:	ldr	x8, [x8, #8]
  41fb40:	cbnz	x8, 41fb30 <feof@plt+0x1ce30>
  41fb44:	ldr	x8, [x19, #448]
  41fb48:	ldurb	w8, [x8, #-20]
  41fb4c:	cmp	w8, #0x16
  41fb50:	b.eq	41fb68 <feof@plt+0x1ce68>  // b.none
  41fb54:	mov	x0, x19
  41fb58:	bl	4298e8 <feof@plt+0x26be8>
  41fb5c:	ldrb	w8, [x0, #4]
  41fb60:	cmp	w8, #0x16
  41fb64:	b.ne	41fb54 <feof@plt+0x1ce54>  // b.any
  41fb68:	ldr	w8, [x19, #500]
  41fb6c:	cbnz	w8, 41fb80 <feof@plt+0x1ce80>
  41fb70:	ldr	x8, [x19, #472]
  41fb74:	add	x9, x19, #0x1c8
  41fb78:	str	x9, [x19, #488]
  41fb7c:	str	x8, [x19, #448]
  41fb80:	ldrb	w8, [x19, #1123]
  41fb84:	ldrb	w9, [x19, #156]
  41fb88:	add	x22, x19, #0x98
  41fb8c:	strb	wzr, [x19, #16]
  41fb90:	cmp	w8, #0x0
  41fb94:	cset	w8, eq  // eq = none
  41fb98:	cmp	w9, #0x51
  41fb9c:	sturh	wzr, [x19, #19]
  41fba0:	str	x21, [x19, #144]
  41fba4:	strb	w8, [x19, #21]
  41fba8:	b.ne	41fc48 <feof@plt+0x1cf48>  // b.any
  41fbac:	mov	w0, #0x4b0                 	// #1200
  41fbb0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41fbb4:	ldr	q0, [x22]
  41fbb8:	ldr	x8, [x22, #16]
  41fbbc:	mov	x21, x0
  41fbc0:	mov	x26, xzr
  41fbc4:	mov	w27, #0x32                  	// #50
  41fbc8:	mov	w22, #0x1                   	// #1
  41fbcc:	mov	w28, #0x18                  	// #24
  41fbd0:	str	q0, [x0]
  41fbd4:	str	x8, [x0, #16]
  41fbd8:	b	41fc1c <feof@plt+0x1cf1c>
  41fbdc:	mov	x0, x19
  41fbe0:	bl	432114 <feof@plt+0x2f414>
  41fbe4:	ldr	q0, [x0]
  41fbe8:	add	x8, x21, x26
  41fbec:	ldr	x9, [x0, #16]
  41fbf0:	add	x22, x22, #0x1
  41fbf4:	stur	q0, [x8, #24]
  41fbf8:	ldrh	w10, [x8, #30]
  41fbfc:	ldrb	w11, [x8, #28]
  41fc00:	str	x9, [x8, #40]
  41fc04:	add	x26, x26, #0x18
  41fc08:	orr	w9, w10, #0x400
  41fc0c:	cmp	w11, #0x52
  41fc10:	str	w20, [x8, #24]
  41fc14:	strh	w9, [x8, #30]
  41fc18:	b.eq	41fc80 <feof@plt+0x1cf80>  // b.none
  41fc1c:	cmp	x22, w27, uxtw
  41fc20:	b.ne	41fbdc <feof@plt+0x1cedc>  // b.any
  41fc24:	add	w8, w27, w27, lsl #1
  41fc28:	cmp	w8, #0x0
  41fc2c:	cinc	w8, w8, lt  // lt = tstop
  41fc30:	asr	w27, w8, #1
  41fc34:	smull	x1, w27, w28
  41fc38:	mov	x0, x21
  41fc3c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  41fc40:	mov	x21, x0
  41fc44:	b	41fbdc <feof@plt+0x1cedc>
  41fc48:	mov	w0, #0x18                  	// #24
  41fc4c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  41fc50:	ldr	x8, [x22, #16]
  41fc54:	ldr	q0, [x22]
  41fc58:	mov	x21, x0
  41fc5c:	str	x8, [x0, #16]
  41fc60:	str	q0, [x0]
  41fc64:	ldr	x8, [x19, #904]
  41fc68:	cbz	x8, 41fc7c <feof@plt+0x1cf7c>
  41fc6c:	ldr	x1, [x19, #448]
  41fc70:	mov	x0, x19
  41fc74:	mov	w2, wzr
  41fc78:	blr	x8
  41fc7c:	mov	w22, #0x1                   	// #1
  41fc80:	ldr	x8, [x19]
  41fc84:	mov	x0, x19
  41fc88:	str	xzr, [x8, #80]
  41fc8c:	bl	4206a4 <feof@plt+0x1d9a4>
  41fc90:	ldr	x0, [x19, #136]
  41fc94:	bl	402770 <free@plt>
  41fc98:	mov	x0, x19
  41fc9c:	mov	x1, xzr
  41fca0:	mov	x2, x21
  41fca4:	mov	w3, w22
  41fca8:	str	x23, [x19, #136]
  41fcac:	str	x24, [x19, #448]
  41fcb0:	str	x25, [x19, #488]
  41fcb4:	bl	431eec <feof@plt+0x2f1ec>
  41fcb8:	mov	sp, x29
  41fcbc:	ldp	x20, x19, [sp, #80]
  41fcc0:	ldp	x22, x21, [sp, #64]
  41fcc4:	ldp	x24, x23, [sp, #48]
  41fcc8:	ldp	x26, x25, [sp, #32]
  41fccc:	ldp	x28, x27, [sp, #16]
  41fcd0:	ldp	x29, x30, [sp], #96
  41fcd4:	ret
  41fcd8:	stp	x29, x30, [sp, #-96]!
  41fcdc:	mov	x29, sp
  41fce0:	stp	x20, x19, [sp, #80]
  41fce4:	mov	x20, x1
  41fce8:	add	x2, x29, #0x18
  41fcec:	mov	w1, #0x4                   	// #4
  41fcf0:	str	x27, [sp, #16]
  41fcf4:	stp	x26, x25, [sp, #32]
  41fcf8:	stp	x24, x23, [sp, #48]
  41fcfc:	stp	x22, x21, [sp, #64]
  41fd00:	mov	x21, x0
  41fd04:	bl	41fdf0 <feof@plt+0x1d0f0>
  41fd08:	mov	x19, x0
  41fd0c:	str	wzr, [x20]
  41fd10:	cbz	x0, 41fd94 <feof@plt+0x1d094>
  41fd14:	mov	x23, x19
  41fd18:	ldr	x26, [x23, #24]!
  41fd1c:	cbz	x26, 41fdcc <feof@plt+0x1d0cc>
  41fd20:	ldr	x24, [x29, #24]
  41fd24:	cbz	x24, 41fdb4 <feof@plt+0x1d0b4>
  41fd28:	add	x25, x24, #0x18
  41fd2c:	b	41fd48 <feof@plt+0x1d048>
  41fd30:	ldr	w8, [x26, #12]
  41fd34:	cmp	w27, w8
  41fd38:	b.eq	41fdbc <feof@plt+0x1d0bc>  // b.none
  41fd3c:	ldr	x23, [x23]
  41fd40:	ldr	x26, [x23]
  41fd44:	cbz	x26, 41fdc0 <feof@plt+0x1d0c0>
  41fd48:	ldr	w8, [x26, #12]
  41fd4c:	ldr	w9, [x24, #12]
  41fd50:	cmp	w8, w9
  41fd54:	b.ne	41fd3c <feof@plt+0x1d03c>  // b.any
  41fd58:	cbz	w8, 41fdc0 <feof@plt+0x1d0c0>
  41fd5c:	mov	x27, xzr
  41fd60:	add	x21, x26, #0x18
  41fd64:	mov	x22, x25
  41fd68:	mov	x0, x21
  41fd6c:	mov	x1, x22
  41fd70:	bl	42d3ac <feof@plt+0x2a6ac>
  41fd74:	cbz	w0, 41fd30 <feof@plt+0x1d030>
  41fd78:	ldr	w8, [x26, #12]
  41fd7c:	add	x27, x27, #0x1
  41fd80:	add	x22, x22, #0x18
  41fd84:	add	x21, x21, #0x18
  41fd88:	cmp	x27, x8
  41fd8c:	b.cc	41fd68 <feof@plt+0x1d068>  // b.lo, b.ul, b.last
  41fd90:	b	41fd34 <feof@plt+0x1d034>
  41fd94:	ldr	x8, [x21, #448]
  41fd98:	ldurb	w8, [x8, #-20]
  41fd9c:	cmp	w8, #0x16
  41fda0:	b.ne	41fdcc <feof@plt+0x1d0cc>  // b.any
  41fda4:	mov	w1, #0x1                   	// #1
  41fda8:	mov	x0, x21
  41fdac:	bl	4328a0 <feof@plt+0x2fba0>
  41fdb0:	b	41fdcc <feof@plt+0x1d0cc>
  41fdb4:	mov	w8, #0x1                   	// #1
  41fdb8:	b	41fdc8 <feof@plt+0x1d0c8>
  41fdbc:	ldr	x26, [x23]
  41fdc0:	cmp	x26, #0x0
  41fdc4:	cset	w8, ne  // ne = any
  41fdc8:	str	w8, [x20]
  41fdcc:	cmp	x19, #0x0
  41fdd0:	ldp	x20, x19, [sp, #80]
  41fdd4:	ldp	x22, x21, [sp, #64]
  41fdd8:	ldp	x24, x23, [sp, #48]
  41fddc:	ldp	x26, x25, [sp, #32]
  41fde0:	ldr	x27, [sp, #16]
  41fde4:	cset	w0, eq  // eq = none
  41fde8:	ldp	x29, x30, [sp], #96
  41fdec:	ret
  41fdf0:	stp	x29, x30, [sp, #-96]!
  41fdf4:	stp	x26, x25, [sp, #32]
  41fdf8:	stp	x24, x23, [sp, #48]
  41fdfc:	stp	x22, x21, [sp, #64]
  41fe00:	stp	x20, x19, [sp, #80]
  41fe04:	ldrb	w8, [x0, #24]
  41fe08:	str	x27, [sp, #16]
  41fe0c:	mov	x29, sp
  41fe10:	mov	x21, x2
  41fe14:	add	w8, w8, #0x1
  41fe18:	mov	w22, w1
  41fe1c:	mov	x19, x0
  41fe20:	strb	w8, [x0, #24]
  41fe24:	str	xzr, [x2]
  41fe28:	bl	432114 <feof@plt+0x2f414>
  41fe2c:	ldrb	w8, [x0, #4]
  41fe30:	mov	x20, x0
  41fe34:	cmp	w8, #0x35
  41fe38:	b.eq	41fe60 <feof@plt+0x1d160>  // b.none
  41fe3c:	cmp	w8, #0x16
  41fe40:	b.ne	41ff3c <feof@plt+0x1d23c>  // b.any
  41fe44:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41fe48:	add	x2, x2, #0x554
  41fe4c:	mov	w1, #0x3                   	// #3
  41fe50:	mov	x0, x19
  41fe54:	bl	4223e4 <feof@plt+0x1f6e4>
  41fe58:	mov	x0, xzr
  41fe5c:	b	41fff4 <feof@plt+0x1d2f4>
  41fe60:	ldr	w23, [x20]
  41fe64:	mov	x0, x19
  41fe68:	bl	432114 <feof@plt+0x2f414>
  41fe6c:	ldrb	w8, [x0, #4]
  41fe70:	cmp	w8, #0x14
  41fe74:	b.ne	41ff60 <feof@plt+0x1d260>  // b.any
  41fe78:	mov	x22, x19
  41fe7c:	ldr	x8, [x22, #56]!
  41fe80:	ldp	x2, x9, [x8, #16]
  41fe84:	sub	x8, x9, x2
  41fe88:	cmp	x8, #0x2f
  41fe8c:	b.hi	41fea8 <feof@plt+0x1d1a8>  // b.pmore
  41fe90:	mov	w2, #0x30                  	// #48
  41fe94:	mov	x0, x19
  41fe98:	mov	x1, x22
  41fe9c:	bl	42dafc <feof@plt+0x2adfc>
  41fea0:	ldr	x8, [x19, #56]
  41fea4:	ldr	x2, [x8, #16]
  41fea8:	mov	w1, #0x1                   	// #1
  41feac:	mov	x0, x19
  41feb0:	bl	432b20 <feof@plt+0x2fe20>
  41feb4:	mov	x23, x0
  41feb8:	mov	w25, wzr
  41febc:	mov	w26, #0x18                  	// #24
  41fec0:	str	xzr, [x0]
  41fec4:	b	41fee0 <feof@plt+0x1d1e0>
  41fec8:	ldr	x8, [x24, #16]
  41fecc:	ldr	q0, [x24]
  41fed0:	madd	x9, x27, x26, x23
  41fed4:	add	w25, w25, #0x1
  41fed8:	str	x8, [x9, #40]
  41fedc:	stur	q0, [x9, #24]
  41fee0:	mov	x0, x19
  41fee4:	bl	432114 <feof@plt+0x2f414>
  41fee8:	ldrb	w8, [x0, #4]
  41feec:	cmp	w8, #0x15
  41fef0:	b.eq	41ff80 <feof@plt+0x1d280>  // b.none
  41fef4:	cmp	w8, #0x16
  41fef8:	b.eq	41ff9c <feof@plt+0x1d29c>  // b.none
  41fefc:	ldr	x8, [x22]
  41ff00:	mov	x24, x0
  41ff04:	mov	w27, w25
  41ff08:	ldp	x23, x9, [x8, #16]
  41ff0c:	umull	x8, w25, w26
  41ff10:	add	x8, x8, #0x48
  41ff14:	sub	x9, x9, x23
  41ff18:	cmp	x9, x8
  41ff1c:	b.cs	41fec8 <feof@plt+0x1d1c8>  // b.hs, b.nlast
  41ff20:	mov	w2, #0x18                  	// #24
  41ff24:	mov	x0, x19
  41ff28:	mov	x1, x22
  41ff2c:	bl	42dafc <feof@plt+0x2adfc>
  41ff30:	ldr	x8, [x19, #56]
  41ff34:	ldr	x23, [x8, #16]
  41ff38:	b	41fec8 <feof@plt+0x1d1c8>
  41ff3c:	ldr	w2, [x20]
  41ff40:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ff44:	add	x4, x4, #0x570
  41ff48:	mov	w1, #0x3                   	// #3
  41ff4c:	mov	x0, x19
  41ff50:	mov	w3, wzr
  41ff54:	bl	4228a4 <feof@plt+0x1fba4>
  41ff58:	mov	x0, xzr
  41ff5c:	b	41fff4 <feof@plt+0x1d2f4>
  41ff60:	cmp	w22, #0x11
  41ff64:	b.eq	41ffa8 <feof@plt+0x1d2a8>  // b.none
  41ff68:	cmp	w22, #0x4
  41ff6c:	b.ne	420020 <feof@plt+0x1d320>  // b.any
  41ff70:	mov	w1, #0x1                   	// #1
  41ff74:	mov	x0, x19
  41ff78:	bl	4328a0 <feof@plt+0x2fba0>
  41ff7c:	b	41ffb0 <feof@plt+0x1d2b0>
  41ff80:	cbz	w25, 420038 <feof@plt+0x1d338>
  41ff84:	ldrh	w8, [x23, #30]
  41ff88:	str	w25, [x23, #12]
  41ff8c:	and	w8, w8, #0xfffe
  41ff90:	strh	w8, [x23, #30]
  41ff94:	str	x23, [x21]
  41ff98:	b	41ffb0 <feof@plt+0x1d2b0>
  41ff9c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  41ffa0:	add	x2, x2, #0x5ac
  41ffa4:	b	41fe4c <feof@plt+0x1d14c>
  41ffa8:	cmp	w8, #0x16
  41ffac:	b.ne	420020 <feof@plt+0x1d320>  // b.any
  41ffb0:	ldr	x8, [x20, #8]
  41ffb4:	mov	x9, sp
  41ffb8:	ldr	w2, [x8, #8]
  41ffbc:	add	w20, w2, #0x1
  41ffc0:	add	x10, x20, #0xf
  41ffc4:	and	x10, x10, #0x1fffffff0
  41ffc8:	sub	x21, x9, x10
  41ffcc:	mov	sp, x21
  41ffd0:	mov	w9, #0x23                  	// #35
  41ffd4:	mov	x0, x21
  41ffd8:	strb	w9, [x0], #1
  41ffdc:	ldr	x1, [x8]
  41ffe0:	bl	402640 <memcpy@plt>
  41ffe4:	mov	x0, x19
  41ffe8:	mov	x1, x21
  41ffec:	mov	w2, w20
  41fff0:	bl	428bc4 <feof@plt+0x25ec4>
  41fff4:	ldrb	w8, [x19, #24]
  41fff8:	sub	w8, w8, #0x1
  41fffc:	strb	w8, [x19, #24]
  420000:	mov	sp, x29
  420004:	ldp	x20, x19, [sp, #80]
  420008:	ldp	x22, x21, [sp, #64]
  42000c:	ldp	x24, x23, [sp, #48]
  420010:	ldp	x26, x25, [sp, #32]
  420014:	ldr	x27, [sp, #16]
  420018:	ldp	x29, x30, [sp], #96
  42001c:	ret
  420020:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420024:	add	x4, x4, #0x590
  420028:	mov	w1, #0x3                   	// #3
  42002c:	mov	x0, x19
  420030:	mov	w2, w23
  420034:	b	41ff50 <feof@plt+0x1d250>
  420038:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42003c:	add	x2, x2, #0x5cb
  420040:	b	41fe4c <feof@plt+0x1d14c>
  420044:	stp	x29, x30, [sp, #-48]!
  420048:	stp	x20, x19, [sp, #32]
  42004c:	mov	x19, x0
  420050:	mov	x0, x1
  420054:	stp	x22, x21, [sp, #16]
  420058:	mov	x29, sp
  42005c:	mov	x22, x1
  420060:	bl	4026d0 <strlen@plt>
  420064:	add	x9, x0, #0x12
  420068:	mov	x8, sp
  42006c:	and	x9, x9, #0xfffffffffffffff0
  420070:	mov	x20, x0
  420074:	sub	x21, x8, x9
  420078:	mov	sp, x21
  42007c:	mov	x0, x21
  420080:	mov	x1, x22
  420084:	mov	x2, x20
  420088:	bl	402640 <memcpy@plt>
  42008c:	mov	w1, #0x3d                  	// #61
  420090:	mov	x0, x22
  420094:	bl	4027b0 <strchr@plt>
  420098:	cbz	x0, 4200a8 <feof@plt+0x1d3a8>
  42009c:	sub	x8, x0, x22
  4200a0:	mov	w9, #0x20                  	// #32
  4200a4:	b	4200bc <feof@plt+0x1d3bc>
  4200a8:	mov	w9, #0x20                  	// #32
  4200ac:	add	x8, x20, #0x1
  4200b0:	strb	w9, [x21, x20]
  4200b4:	add	x20, x20, #0x2
  4200b8:	mov	w9, #0x31                  	// #49
  4200bc:	strb	w9, [x21, x8]
  4200c0:	mov	w8, #0xa                   	// #10
  4200c4:	mov	x0, x19
  4200c8:	mov	w1, wzr
  4200cc:	mov	x2, x21
  4200d0:	mov	x3, x20
  4200d4:	strb	w8, [x21, x20]
  4200d8:	bl	4200f0 <feof@plt+0x1d3f0>
  4200dc:	mov	sp, x29
  4200e0:	ldp	x20, x19, [sp, #32]
  4200e4:	ldp	x22, x21, [sp, #16]
  4200e8:	ldp	x29, x30, [sp], #48
  4200ec:	ret
  4200f0:	stp	x29, x30, [sp, #-48]!
  4200f4:	stp	x22, x21, [sp, #16]
  4200f8:	stp	x20, x19, [sp, #32]
  4200fc:	ldr	x8, [x0, #840]
  420100:	ldr	x9, [x0, #832]
  420104:	mov	x22, x3
  420108:	mov	x21, x2
  42010c:	mov	x19, x0
  420110:	sub	x8, x8, x9
  420114:	cmp	x8, #0xc7
  420118:	mov	w20, w1
  42011c:	mov	x29, sp
  420120:	b.hi	420134 <feof@plt+0x1d434>  // b.pmore
  420124:	add	x0, x19, #0x328
  420128:	mov	w1, #0xc8                  	// #200
  42012c:	bl	45500c <_obstack_newchunk@@Base>
  420130:	ldr	x9, [x19, #832]
  420134:	ldr	x8, [x19, #824]
  420138:	add	x9, x9, #0xc8
  42013c:	str	x9, [x19, #832]
  420140:	cmp	x9, x8
  420144:	b.ne	420154 <feof@plt+0x1d454>  // b.any
  420148:	ldrb	w10, [x19, #888]
  42014c:	orr	w10, w10, #0x2
  420150:	strb	w10, [x19, #888]
  420154:	ldr	x11, [x19, #856]
  420158:	ldr	x12, [x19, #816]
  42015c:	ldr	x10, [x19, #840]
  420160:	add	x9, x11, x9
  420164:	bic	x9, x9, x11
  420168:	sub	x11, x9, x12
  42016c:	sub	x12, x10, x12
  420170:	cmp	x11, x12
  420174:	str	x9, [x19, #832]
  420178:	b.ls	420184 <feof@plt+0x1d484>  // b.plast
  42017c:	mov	x9, x10
  420180:	str	x10, [x19, #832]
  420184:	str	x9, [x19, #824]
  420188:	movi	v0.2d, #0x0
  42018c:	add	x9, x21, x22
  420190:	mov	w10, #0x2                   	// #2
  420194:	str	xzr, [x8, #192]
  420198:	stp	q0, q0, [x8, #160]
  42019c:	stp	q0, q0, [x8, #128]
  4201a0:	stp	q0, q0, [x8, #96]
  4201a4:	stp	q0, q0, [x8, #64]
  4201a8:	stp	q0, q0, [x8, #32]
  4201ac:	stp	q0, q0, [x8]
  4201b0:	stp	x21, x21, [x8, #16]
  4201b4:	str	x9, [x8, #32]
  4201b8:	strb	w10, [x8, #105]
  4201bc:	ldr	x9, [x19]
  4201c0:	mov	w10, #0x1                   	// #1
  4201c4:	strb	w10, [x8, #104]
  4201c8:	mov	x0, x19
  4201cc:	str	x9, [x8, #72]
  4201d0:	str	x8, [x19]
  4201d4:	ldr	x8, [x19, #40]
  4201d8:	mov	w9, #0x53                  	// #83
  4201dc:	strb	w10, [x19, #16]
  4201e0:	strb	wzr, [x19, #21]
  4201e4:	strb	w9, [x19, #156]
  4201e8:	ldr	w8, [x8, #60]
  4201ec:	str	w8, [x19, #48]
  4201f0:	bl	428c88 <feof@plt+0x25f88>
  4201f4:	ldrb	w9, [x19, #1160]
  4201f8:	adrp	x21, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4201fc:	add	x21, x21, #0x608
  420200:	mov	w8, #0x18                  	// #24
  420204:	smaddl	x8, w20, w8, x21
  420208:	str	x8, [x19, #144]
  42020c:	cbz	w9, 42021c <feof@plt+0x1d51c>
  420210:	mov	x0, x19
  420214:	bl	41e6a8 <feof@plt+0x1b9a8>
  420218:	ldr	x8, [x19, #144]
  42021c:	ldr	x8, [x8]
  420220:	mov	x0, x19
  420224:	blr	x8
  420228:	ldrb	w9, [x19, #1160]
  42022c:	ldrb	w8, [x19, #32]
  420230:	cbz	w9, 42025c <feof@plt+0x1d55c>
  420234:	cbnz	w8, 420244 <feof@plt+0x1d544>
  420238:	ldrb	w8, [x19, #24]
  42023c:	sub	w8, w8, #0x1
  420240:	strb	w8, [x19, #24]
  420244:	ldr	x8, [x19, #144]
  420248:	cmp	x8, x21
  42024c:	b.eq	4202b4 <feof@plt+0x1d5b4>  // b.none
  420250:	mov	x0, x19
  420254:	bl	437254 <feof@plt+0x34554>
  420258:	b	4202b4 <feof@plt+0x1d5b4>
  42025c:	cbnz	w8, 4202b4 <feof@plt+0x1d5b4>
  420260:	b	42026c <feof@plt+0x1d56c>
  420264:	mov	x0, x19
  420268:	bl	43200c <feof@plt+0x2f30c>
  42026c:	ldr	x8, [x19, #136]
  420270:	ldr	x8, [x8, #8]
  420274:	cbnz	x8, 420264 <feof@plt+0x1d564>
  420278:	ldr	x8, [x19, #448]
  42027c:	ldurb	w8, [x8, #-20]
  420280:	cmp	w8, #0x16
  420284:	b.eq	42029c <feof@plt+0x1d59c>  // b.none
  420288:	mov	x0, x19
  42028c:	bl	4298e8 <feof@plt+0x26be8>
  420290:	ldrb	w8, [x0, #4]
  420294:	cmp	w8, #0x16
  420298:	b.ne	420288 <feof@plt+0x1d588>  // b.any
  42029c:	ldr	w8, [x19, #500]
  4202a0:	cbnz	w8, 4202b4 <feof@plt+0x1d5b4>
  4202a4:	ldr	x8, [x19, #472]
  4202a8:	add	x9, x19, #0x1c8
  4202ac:	str	x9, [x19, #488]
  4202b0:	str	x8, [x19, #448]
  4202b4:	ldrb	w8, [x19, #1123]
  4202b8:	strb	wzr, [x19, #16]
  4202bc:	sturh	wzr, [x19, #19]
  4202c0:	str	xzr, [x19, #144]
  4202c4:	cmp	w8, #0x0
  4202c8:	cset	w8, eq  // eq = none
  4202cc:	strb	w8, [x19, #21]
  4202d0:	mov	x0, x19
  4202d4:	ldp	x20, x19, [sp, #32]
  4202d8:	ldp	x22, x21, [sp, #16]
  4202dc:	ldp	x29, x30, [sp], #48
  4202e0:	b	4206a4 <feof@plt+0x1d9a4>
  4202e4:	sub	sp, sp, #0x120
  4202e8:	stp	x29, x30, [sp, #240]
  4202ec:	add	x29, sp, #0xf0
  4202f0:	mov	x9, #0xffffffffffffffd0    	// #-48
  4202f4:	mov	x10, sp
  4202f8:	sub	x11, x29, #0x70
  4202fc:	movk	x9, #0xff80, lsl #32
  420300:	add	x12, x29, #0x30
  420304:	add	x10, x10, #0x80
  420308:	add	x11, x11, #0x30
  42030c:	stp	x10, x9, [x29, #-16]
  420310:	stp	x12, x11, [x29, #-32]
  420314:	stp	x2, x3, [x29, #-112]
  420318:	stp	x4, x5, [x29, #-96]
  42031c:	stp	x6, x7, [x29, #-80]
  420320:	stp	q1, q2, [sp, #16]
  420324:	str	q0, [sp]
  420328:	ldp	q1, q0, [x29, #-32]
  42032c:	mov	x8, x1
  420330:	stp	x20, x19, [sp, #272]
  420334:	mov	x19, x0
  420338:	sub	x1, x29, #0x40
  42033c:	mov	x0, x8
  420340:	str	x28, [sp, #256]
  420344:	stp	q3, q4, [sp, #48]
  420348:	stp	q5, q6, [sp, #80]
  42034c:	str	q7, [sp, #112]
  420350:	stp	q1, q0, [x29, #-64]
  420354:	bl	455530 <_obstack_memory_used@@Base+0x308>
  420358:	mov	x20, x0
  42035c:	mov	x0, x19
  420360:	mov	x1, x20
  420364:	bl	420044 <feof@plt+0x1d344>
  420368:	mov	x0, x20
  42036c:	bl	402770 <free@plt>
  420370:	ldp	x20, x19, [sp, #272]
  420374:	ldr	x28, [sp, #256]
  420378:	ldp	x29, x30, [sp, #240]
  42037c:	add	sp, sp, #0x120
  420380:	ret
  420384:	stp	x29, x30, [sp, #-48]!
  420388:	stp	x20, x19, [sp, #32]
  42038c:	mov	x20, x0
  420390:	mov	x0, x1
  420394:	stp	x22, x21, [sp, #16]
  420398:	mov	x29, sp
  42039c:	mov	x19, x1
  4203a0:	bl	4026d0 <strlen@plt>
  4203a4:	add	x9, x0, #0x10
  4203a8:	mov	x8, sp
  4203ac:	and	x9, x9, #0xfffffffffffffff0
  4203b0:	sub	x22, x8, x9
  4203b4:	mov	x21, x0
  4203b8:	mov	sp, x22
  4203bc:	mov	x0, x22
  4203c0:	mov	x1, x19
  4203c4:	mov	x2, x21
  4203c8:	bl	402640 <memcpy@plt>
  4203cc:	mov	w8, #0xa                   	// #10
  4203d0:	mov	x0, x20
  4203d4:	mov	w1, wzr
  4203d8:	mov	x2, x22
  4203dc:	mov	x3, x21
  4203e0:	strb	w8, [x22, x21]
  4203e4:	bl	4200f0 <feof@plt+0x1d3f0>
  4203e8:	mov	sp, x29
  4203ec:	ldp	x20, x19, [sp, #32]
  4203f0:	ldp	x22, x21, [sp, #16]
  4203f4:	ldp	x29, x30, [sp], #48
  4203f8:	ret
  4203fc:	stp	x29, x30, [sp, #-48]!
  420400:	stp	x20, x19, [sp, #32]
  420404:	mov	x20, x0
  420408:	mov	x0, x1
  42040c:	stp	x22, x21, [sp, #16]
  420410:	mov	x29, sp
  420414:	mov	x19, x1
  420418:	bl	4026d0 <strlen@plt>
  42041c:	add	x9, x0, #0x10
  420420:	mov	x8, sp
  420424:	and	x9, x9, #0xfffffffffffffff0
  420428:	sub	x22, x8, x9
  42042c:	mov	x21, x0
  420430:	mov	sp, x22
  420434:	mov	x0, x22
  420438:	mov	x1, x19
  42043c:	mov	x2, x21
  420440:	bl	402640 <memcpy@plt>
  420444:	mov	w8, #0xa                   	// #10
  420448:	mov	w1, #0x7                   	// #7
  42044c:	mov	x0, x20
  420450:	mov	x2, x22
  420454:	mov	x3, x21
  420458:	strb	w8, [x22, x21]
  42045c:	bl	4200f0 <feof@plt+0x1d3f0>
  420460:	mov	sp, x29
  420464:	ldp	x20, x19, [sp, #32]
  420468:	ldp	x22, x21, [sp, #16]
  42046c:	ldp	x29, x30, [sp], #48
  420470:	ret
  420474:	mov	w2, #0x10                  	// #16
  420478:	b	42047c <feof@plt+0x1d77c>
  42047c:	stp	x29, x30, [sp, #-64]!
  420480:	stp	x20, x19, [sp, #48]
  420484:	mov	x20, x0
  420488:	mov	x0, x1
  42048c:	stp	x24, x23, [sp, #16]
  420490:	stp	x22, x21, [sp, #32]
  420494:	mov	x29, sp
  420498:	mov	w19, w2
  42049c:	mov	x22, x1
  4204a0:	bl	4026d0 <strlen@plt>
  4204a4:	mov	x21, x0
  4204a8:	mov	w1, #0x3d                  	// #61
  4204ac:	mov	x0, x22
  4204b0:	bl	4027b0 <strchr@plt>
  4204b4:	add	x9, x21, #0x11
  4204b8:	mov	x8, sp
  4204bc:	and	x9, x9, #0xfffffffffffffff0
  4204c0:	mov	x24, x0
  4204c4:	sub	x23, x8, x9
  4204c8:	mov	sp, x23
  4204cc:	mov	x0, x23
  4204d0:	mov	x1, x22
  4204d4:	mov	x2, x21
  4204d8:	bl	402640 <memcpy@plt>
  4204dc:	cbz	x24, 4204fc <feof@plt+0x1d7fc>
  4204e0:	sub	x8, x24, x22
  4204e4:	mov	w9, #0x28                  	// #40
  4204e8:	strb	w9, [x23, x8]
  4204ec:	add	x8, x21, #0x1
  4204f0:	mov	w9, #0x29                  	// #41
  4204f4:	strb	w9, [x23, x21]
  4204f8:	mov	x21, x8
  4204fc:	mov	w8, #0xa                   	// #10
  420500:	mov	x0, x20
  420504:	mov	w1, w19
  420508:	mov	x2, x23
  42050c:	mov	x3, x21
  420510:	strb	w8, [x23, x21]
  420514:	bl	4200f0 <feof@plt+0x1d3f0>
  420518:	mov	sp, x29
  42051c:	ldp	x20, x19, [sp, #48]
  420520:	ldp	x22, x21, [sp, #32]
  420524:	ldp	x24, x23, [sp, #16]
  420528:	ldp	x29, x30, [sp], #64
  42052c:	ret
  420530:	mov	w2, #0x11                  	// #17
  420534:	b	42047c <feof@plt+0x1d77c>
  420538:	add	x0, x0, #0x458
  42053c:	ret
  420540:	add	x0, x0, #0x388
  420544:	ret
  420548:	ldp	q0, q1, [x1, #32]
  42054c:	ldp	q2, q3, [x1]
  420550:	add	x8, x0, #0x388
  420554:	stp	q0, q1, [x8, #32]
  420558:	stp	q2, q3, [x8]
  42055c:	ldp	q1, q0, [x1, #96]
  420560:	ldp	q3, q2, [x1, #64]
  420564:	stp	q1, q0, [x8, #96]
  420568:	stp	q3, q2, [x8, #64]
  42056c:	ldr	x9, [x1, #176]
  420570:	ldp	q1, q0, [x1, #144]
  420574:	ldr	q2, [x1, #128]
  420578:	str	x9, [x8, #176]
  42057c:	stp	q1, q0, [x8, #144]
  420580:	str	q2, [x8, #128]
  420584:	ret
  420588:	stp	x29, x30, [sp, #-32]!
  42058c:	str	x19, [sp, #16]
  420590:	mov	x19, x0
  420594:	ldr	x0, [x0, #712]
  420598:	mov	x29, sp
  42059c:	cbnz	x0, 4205a8 <feof@plt+0x1d8a8>
  4205a0:	bl	435e88 <feof@plt+0x33188>
  4205a4:	str	x0, [x19, #712]
  4205a8:	ldr	x19, [sp, #16]
  4205ac:	ldp	x29, x30, [sp], #32
  4205b0:	ret
  4205b4:	stp	x29, x30, [sp, #-48]!
  4205b8:	stp	x22, x21, [sp, #16]
  4205bc:	stp	x20, x19, [sp, #32]
  4205c0:	ldr	x9, [x0, #840]
  4205c4:	ldr	x8, [x0, #832]
  4205c8:	mov	w20, w3
  4205cc:	mov	x22, x2
  4205d0:	mov	x19, x0
  4205d4:	sub	x9, x9, x8
  4205d8:	cmp	x9, #0xc7
  4205dc:	mov	x21, x1
  4205e0:	mov	x29, sp
  4205e4:	b.hi	4205f8 <feof@plt+0x1d8f8>  // b.pmore
  4205e8:	add	x0, x19, #0x328
  4205ec:	mov	w1, #0xc8                  	// #200
  4205f0:	bl	45500c <_obstack_newchunk@@Base>
  4205f4:	ldr	x8, [x19, #832]
  4205f8:	ldr	x0, [x19, #824]
  4205fc:	add	x8, x8, #0xc8
  420600:	str	x8, [x19, #832]
  420604:	cmp	x8, x0
  420608:	b.ne	420618 <feof@plt+0x1d918>  // b.any
  42060c:	ldrb	w9, [x19, #888]
  420610:	orr	w9, w9, #0x2
  420614:	strb	w9, [x19, #888]
  420618:	ldr	x10, [x19, #856]
  42061c:	ldr	x11, [x19, #816]
  420620:	ldr	x9, [x19, #840]
  420624:	add	x8, x10, x8
  420628:	bic	x8, x8, x10
  42062c:	sub	x10, x8, x11
  420630:	sub	x11, x9, x11
  420634:	cmp	x10, x11
  420638:	str	x8, [x19, #832]
  42063c:	b.ls	420648 <feof@plt+0x1d948>  // b.plast
  420640:	mov	x8, x9
  420644:	str	x9, [x19, #832]
  420648:	str	x8, [x19, #824]
  42064c:	movi	v0.2d, #0x0
  420650:	add	x8, x21, x22
  420654:	ubfiz	w9, w20, #1, #1
  420658:	str	xzr, [x0, #192]
  42065c:	stp	q0, q0, [x0, #160]
  420660:	stp	q0, q0, [x0, #128]
  420664:	stp	q0, q0, [x0, #96]
  420668:	stp	q0, q0, [x0, #64]
  42066c:	stp	q0, q0, [x0, #32]
  420670:	stp	q0, q0, [x0]
  420674:	stp	x21, x21, [x0, #16]
  420678:	str	x8, [x0, #32]
  42067c:	strb	w9, [x0, #105]
  420680:	ldr	x8, [x19]
  420684:	mov	w9, #0x1                   	// #1
  420688:	strb	w9, [x0, #104]
  42068c:	str	x8, [x0, #72]
  420690:	str	x0, [x19]
  420694:	ldp	x20, x19, [sp, #32]
  420698:	ldp	x22, x21, [sp, #16]
  42069c:	ldp	x29, x30, [sp], #48
  4206a0:	ret
  4206a4:	stp	x29, x30, [sp, #-80]!
  4206a8:	stp	x24, x23, [sp, #32]
  4206ac:	stp	x22, x21, [sp, #48]
  4206b0:	stp	x20, x19, [sp, #64]
  4206b4:	ldr	x21, [x0]
  4206b8:	mov	x19, x0
  4206bc:	str	x25, [sp, #16]
  4206c0:	mov	x29, sp
  4206c4:	ldr	x23, [x21, #96]
  4206c8:	ldr	x20, [x21, #80]
  4206cc:	cbz	x23, 420710 <feof@plt+0x1da10>
  4206d0:	adrp	x25, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4206d4:	adrp	x22, 460000 <_obstack_memory_used@@Base+0xadd8>
  4206d8:	mov	w24, #0x18                  	// #24
  4206dc:	add	x25, x25, #0x608
  4206e0:	add	x22, x22, #0xe7a
  4206e4:	ldrsw	x8, [x23, #28]
  4206e8:	ldr	w2, [x23, #8]
  4206ec:	mov	w1, #0x3                   	// #3
  4206f0:	mov	x0, x19
  4206f4:	madd	x8, x8, x24, x25
  4206f8:	ldr	x5, [x8, #8]
  4206fc:	mov	w3, wzr
  420700:	mov	x4, x22
  420704:	bl	4228a4 <feof@plt+0x1fba4>
  420708:	ldr	x23, [x23]
  42070c:	cbnz	x23, 4206e4 <feof@plt+0x1d9e4>
  420710:	strb	wzr, [x19, #18]
  420714:	ldr	x8, [x21, #72]
  420718:	str	x8, [x19]
  42071c:	ldp	x22, x0, [x21, #40]
  420720:	bl	402770 <free@plt>
  420724:	ldr	x8, [x19, #816]
  420728:	cmp	x8, x21
  42072c:	b.cs	420768 <feof@plt+0x1da68>  // b.hs, b.nlast
  420730:	ldr	x8, [x19, #840]
  420734:	cmp	x8, x21
  420738:	b.ls	420768 <feof@plt+0x1da68>  // b.plast
  42073c:	str	x21, [x19, #824]
  420740:	str	x21, [x19, #832]
  420744:	cbnz	x20, 420778 <feof@plt+0x1da78>
  420748:	cbz	x22, 4207e0 <feof@plt+0x1dae0>
  42074c:	mov	x0, x22
  420750:	ldp	x20, x19, [sp, #64]
  420754:	ldp	x22, x21, [sp, #48]
  420758:	ldp	x24, x23, [sp, #32]
  42075c:	ldr	x25, [sp, #16]
  420760:	ldp	x29, x30, [sp], #80
  420764:	b	402770 <free@plt>
  420768:	add	x0, x19, #0x328
  42076c:	mov	x1, x21
  420770:	bl	455194 <_obstack_free@@Base>
  420774:	cbz	x20, 420748 <feof@plt+0x1da48>
  420778:	mov	x0, x19
  42077c:	mov	x1, x20
  420780:	mov	x2, x22
  420784:	bl	427d2c <feof@plt+0x2502c>
  420788:	ldr	x0, [x19, #40]
  42078c:	mov	w1, #0x1                   	// #1
  420790:	mov	w2, wzr
  420794:	mov	x3, xzr
  420798:	mov	w4, wzr
  42079c:	bl	42e6d0 <feof@plt+0x2b9d0>
  4207a0:	mov	x20, x0
  4207a4:	cbz	x0, 4207b8 <feof@plt+0x1dab8>
  4207a8:	ldr	x0, [x19, #40]
  4207ac:	ldr	w1, [x20, #16]
  4207b0:	mov	w2, #0x7f                  	// #127
  4207b4:	bl	42ebc8 <feof@plt+0x2bec8>
  4207b8:	ldr	x2, [x19, #912]
  4207bc:	cbz	x2, 4207e0 <feof@plt+0x1dae0>
  4207c0:	mov	x0, x19
  4207c4:	mov	x1, x20
  4207c8:	ldp	x20, x19, [sp, #64]
  4207cc:	ldp	x22, x21, [sp, #48]
  4207d0:	ldp	x24, x23, [sp, #32]
  4207d4:	ldr	x25, [sp, #16]
  4207d8:	ldp	x29, x30, [sp], #80
  4207dc:	br	x2
  4207e0:	ldp	x20, x19, [sp, #64]
  4207e4:	ldp	x22, x21, [sp, #48]
  4207e8:	ldp	x24, x23, [sp, #32]
  4207ec:	ldr	x25, [sp, #16]
  4207f0:	ldp	x29, x30, [sp], #80
  4207f4:	ret
  4207f8:	stp	x29, x30, [sp, #-48]!
  4207fc:	str	x21, [sp, #16]
  420800:	adrp	x21, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420804:	stp	x20, x19, [sp, #32]
  420808:	mov	x19, x0
  42080c:	mov	x20, xzr
  420810:	add	x21, x21, #0x618
  420814:	mov	x29, sp
  420818:	ldur	x1, [x21, #-8]
  42081c:	ldrh	w2, [x21], #24
  420820:	mov	x0, x19
  420824:	bl	428bc4 <feof@plt+0x25ec4>
  420828:	mov	w8, #0x1                   	// #1
  42082c:	bfi	w8, w20, #1, #31
  420830:	add	x20, x20, #0x1
  420834:	cmp	x20, #0x13
  420838:	strb	w8, [x0, #16]
  42083c:	b.ne	420818 <feof@plt+0x1db18>  // b.any
  420840:	ldp	x20, x19, [sp, #32]
  420844:	ldr	x21, [sp, #16]
  420848:	ldp	x29, x30, [sp], #48
  42084c:	ret
  420850:	b	420854 <feof@plt+0x1db54>
  420854:	stp	x29, x30, [sp, #-64]!
  420858:	stp	x20, x19, [sp, #48]
  42085c:	mov	x19, x0
  420860:	mov	w0, #0x400                 	// #1024
  420864:	stp	x24, x23, [sp, #16]
  420868:	stp	x22, x21, [sp, #32]
  42086c:	mov	x29, sp
  420870:	mov	w21, #0x400                 	// #1024
  420874:	bl	45535c <_obstack_memory_used@@Base+0x134>
  420878:	mov	x20, x0
  42087c:	mov	x23, xzr
  420880:	mov	w24, #0x20                  	// #32
  420884:	mov	x0, x19
  420888:	bl	432114 <feof@plt+0x2f414>
  42088c:	ldrb	w8, [x0, #4]
  420890:	cmp	w8, #0x53
  420894:	b.eq	420884 <feof@plt+0x1db84>  // b.none
  420898:	cmp	w8, #0x2
  42089c:	b.eq	42091c <feof@plt+0x1dc1c>  // b.none
  4208a0:	cmp	w8, #0x16
  4208a4:	b.eq	420908 <feof@plt+0x1dc08>  // b.none
  4208a8:	mov	x22, x0
  4208ac:	bl	42cd5c <feof@plt+0x2a05c>
  4208b0:	add	w8, w0, #0x2
  4208b4:	add	x9, x23, x8
  4208b8:	cmp	x9, x21
  4208bc:	b.ls	4208d8 <feof@plt+0x1dbd8>  // b.plast
  4208c0:	add	x8, x21, x8
  4208c4:	lsl	x21, x8, #1
  4208c8:	mov	x0, x20
  4208cc:	mov	x1, x21
  4208d0:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4208d4:	mov	x20, x0
  4208d8:	ldrb	w8, [x22, #6]
  4208dc:	tbz	w8, #0, 4208ec <feof@plt+0x1dbec>
  4208e0:	add	x8, x23, #0x1
  4208e4:	strb	w24, [x20, x23]
  4208e8:	mov	x23, x8
  4208ec:	add	x2, x20, x23
  4208f0:	mov	w3, #0x1                   	// #1
  4208f4:	mov	x0, x19
  4208f8:	mov	x1, x22
  4208fc:	bl	42cf30 <feof@plt+0x2a230>
  420900:	sub	x23, x0, x20
  420904:	b	420884 <feof@plt+0x1db84>
  420908:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42090c:	add	x2, x2, #0x5e7
  420910:	mov	w1, #0x3                   	// #3
  420914:	mov	x0, x19
  420918:	bl	4223e4 <feof@plt+0x1f6e4>
  42091c:	strb	wzr, [x20, x23]
  420920:	mov	x0, x20
  420924:	ldp	x20, x19, [sp, #48]
  420928:	ldp	x22, x21, [sp, #32]
  42092c:	ldp	x24, x23, [sp, #16]
  420930:	ldp	x29, x30, [sp], #64
  420934:	ret
  420938:	stp	x29, x30, [sp, #-32]!
  42093c:	mov	w1, #0x1                   	// #1
  420940:	stp	x20, x19, [sp, #16]
  420944:	mov	x29, sp
  420948:	mov	x20, x0
  42094c:	bl	421930 <feof@plt+0x1ec30>
  420950:	cbz	x0, 4209ac <feof@plt+0x1dcac>
  420954:	ldrb	w9, [x20, #1124]
  420958:	ldr	x8, [x20, #1024]
  42095c:	mov	x19, x0
  420960:	cmp	w9, #0x0
  420964:	cset	w9, eq  // eq = none
  420968:	strb	w9, [x20, #21]
  42096c:	cbz	x8, 420978 <feof@plt+0x1dc78>
  420970:	mov	x0, x20
  420974:	blr	x8
  420978:	mov	x0, x20
  42097c:	mov	x1, x19
  420980:	bl	432b98 <feof@plt+0x2fe98>
  420984:	tbz	w0, #0, 4209a0 <feof@plt+0x1dca0>
  420988:	ldr	x8, [x20, #936]
  42098c:	cbz	x8, 4209a0 <feof@plt+0x1dca0>
  420990:	ldr	w1, [x20, #48]
  420994:	mov	x0, x20
  420998:	mov	x2, x19
  42099c:	blr	x8
  4209a0:	ldrh	w8, [x19, #18]
  4209a4:	and	w8, w8, #0xffffff7f
  4209a8:	strh	w8, [x19, #18]
  4209ac:	ldp	x20, x19, [sp, #16]
  4209b0:	ldp	x29, x30, [sp], #32
  4209b4:	ret
  4209b8:	mov	w1, wzr
  4209bc:	b	421a0c <feof@plt+0x1ed0c>
  4209c0:	stp	x29, x30, [sp, #-48]!
  4209c4:	stp	x20, x19, [sp, #32]
  4209c8:	str	x21, [sp, #16]
  4209cc:	ldr	x21, [x0]
  4209d0:	mov	x19, x0
  4209d4:	mov	x29, sp
  4209d8:	ldr	x20, [x21, #96]
  4209dc:	cbz	x20, 420a58 <feof@plt+0x1dd58>
  4209e0:	ldrb	w8, [x20, #25]
  4209e4:	cbz	w8, 420a78 <feof@plt+0x1dd78>
  4209e8:	ldr	x8, [x20]
  4209ec:	cbnz	x8, 420a04 <feof@plt+0x1dd04>
  4209f0:	ldr	x9, [x20, #16]
  4209f4:	cbz	x9, 420a04 <feof@plt+0x1dd04>
  4209f8:	mov	w10, #0x1                   	// #1
  4209fc:	strb	w10, [x19, #440]
  420a00:	str	x9, [x19, #424]
  420a04:	str	x8, [x21, #96]
  420a08:	ldr	x8, [x19, #816]
  420a0c:	ldrb	w9, [x20, #25]
  420a10:	cmp	x8, x20
  420a14:	strb	w9, [x19, #18]
  420a18:	b.cs	420a40 <feof@plt+0x1dd40>  // b.hs, b.nlast
  420a1c:	ldr	x8, [x19, #840]
  420a20:	cmp	x8, x20
  420a24:	b.ls	420a40 <feof@plt+0x1dd40>  // b.plast
  420a28:	str	x20, [x19, #824]
  420a2c:	str	x20, [x19, #832]
  420a30:	ldp	x20, x19, [sp, #32]
  420a34:	ldr	x21, [sp, #16]
  420a38:	ldp	x29, x30, [sp], #48
  420a3c:	ret
  420a40:	add	x0, x19, #0x328
  420a44:	mov	x1, x20
  420a48:	ldp	x20, x19, [sp, #32]
  420a4c:	ldr	x21, [sp, #16]
  420a50:	ldp	x29, x30, [sp], #48
  420a54:	b	455194 <_obstack_free@@Base>
  420a58:	mov	x0, x19
  420a5c:	ldp	x20, x19, [sp, #32]
  420a60:	ldr	x21, [sp, #16]
  420a64:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420a68:	add	x2, x2, #0x4e
  420a6c:	mov	w1, #0x3                   	// #3
  420a70:	ldp	x29, x30, [sp], #48
  420a74:	b	4223e4 <feof@plt+0x1f6e4>
  420a78:	ldrb	w8, [x19, #1140]
  420a7c:	cbz	w8, 4209e8 <feof@plt+0x1dce8>
  420a80:	ldr	x8, [x19, #448]
  420a84:	ldurb	w8, [x8, #-20]
  420a88:	cmp	w8, #0x16
  420a8c:	b.eq	4209e8 <feof@plt+0x1dce8>  // b.none
  420a90:	mov	x0, x19
  420a94:	bl	4298e8 <feof@plt+0x26be8>
  420a98:	ldrb	w8, [x0, #4]
  420a9c:	cmp	w8, #0x16
  420aa0:	b.eq	4209e8 <feof@plt+0x1dce8>  // b.none
  420aa4:	ldr	x8, [x19, #144]
  420aa8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420aac:	add	x2, x2, #0x29
  420ab0:	mov	w1, #0x8                   	// #8
  420ab4:	ldr	x3, [x8, #8]
  420ab8:	mov	x0, x19
  420abc:	bl	422644 <feof@plt+0x1f944>
  420ac0:	b	4209e8 <feof@plt+0x1dce8>
  420ac4:	stp	x29, x30, [sp, #-48]!
  420ac8:	stp	x20, x19, [sp, #32]
  420acc:	ldrb	w8, [x0, #18]
  420ad0:	mov	x19, x0
  420ad4:	str	x21, [sp, #16]
  420ad8:	mov	x29, sp
  420adc:	cbz	w8, 420b04 <feof@plt+0x1de04>
  420ae0:	mov	w20, #0x1                   	// #1
  420ae4:	mov	x0, x19
  420ae8:	mov	w1, w20
  420aec:	ldp	x20, x19, [sp, #32]
  420af0:	ldr	x21, [sp, #16]
  420af4:	mov	w2, #0x3                   	// #3
  420af8:	mov	x3, xzr
  420afc:	ldp	x29, x30, [sp], #48
  420b00:	b	421d88 <feof@plt+0x1f088>
  420b04:	mov	x0, x19
  420b08:	mov	w1, wzr
  420b0c:	bl	421930 <feof@plt+0x1ec30>
  420b10:	cbz	x0, 420ae0 <feof@plt+0x1dde0>
  420b14:	ldrh	w8, [x0, #18]
  420b18:	mov	x21, x0
  420b1c:	ubfx	w9, w8, #8, #1
  420b20:	tst	w8, #0x2
  420b24:	and	w10, w8, #0x3
  420b28:	csinc	w20, w9, wzr, ne  // ne = any
  420b2c:	cmp	w10, #0x2
  420b30:	b.ne	420ba8 <feof@plt+0x1dea8>  // b.any
  420b34:	ldr	x8, [x21, #24]
  420b38:	ldrb	w9, [x8, #19]
  420b3c:	orr	w9, w9, #0x20
  420b40:	strb	w9, [x8, #19]
  420b44:	ldrh	w8, [x21, #18]
  420b48:	tbz	w8, #7, 420bac <feof@plt+0x1deac>
  420b4c:	ldr	x8, [x19, #1032]
  420b50:	cbz	x8, 420b64 <feof@plt+0x1de64>
  420b54:	ldr	w1, [x19, #48]
  420b58:	mov	x0, x19
  420b5c:	mov	x2, x21
  420b60:	blr	x8
  420b64:	ldr	x8, [x19, #448]
  420b68:	ldurb	w8, [x8, #-20]
  420b6c:	cmp	w8, #0x16
  420b70:	b.eq	420ae4 <feof@plt+0x1dde4>  // b.none
  420b74:	mov	x0, x19
  420b78:	bl	4298e8 <feof@plt+0x26be8>
  420b7c:	ldrb	w8, [x0, #4]
  420b80:	cmp	w8, #0x16
  420b84:	b.eq	420ae4 <feof@plt+0x1dde4>  // b.none
  420b88:	ldr	x8, [x19, #144]
  420b8c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420b90:	add	x2, x2, #0x29
  420b94:	mov	x0, x19
  420b98:	ldr	x3, [x8, #8]
  420b9c:	mov	w1, wzr
  420ba0:	bl	422644 <feof@plt+0x1f944>
  420ba4:	b	420ae4 <feof@plt+0x1dde4>
  420ba8:	tbnz	w8, #7, 420b4c <feof@plt+0x1de4c>
  420bac:	mov	x0, x19
  420bb0:	mov	x1, x21
  420bb4:	bl	433804 <feof@plt+0x30b04>
  420bb8:	ldr	x8, [x19, #1032]
  420bbc:	cbnz	x8, 420b54 <feof@plt+0x1de54>
  420bc0:	b	420b64 <feof@plt+0x1de64>
  420bc4:	stp	x29, x30, [sp, #-32]!
  420bc8:	ldrb	w8, [x0, #18]
  420bcc:	str	x19, [sp, #16]
  420bd0:	mov	x19, x0
  420bd4:	mov	x29, sp
  420bd8:	cbz	w8, 420be4 <feof@plt+0x1dee4>
  420bdc:	mov	w1, #0x1                   	// #1
  420be0:	b	420bf8 <feof@plt+0x1def8>
  420be4:	mov	w1, #0x1                   	// #1
  420be8:	mov	x0, x19
  420bec:	bl	424210 <feof@plt+0x21510>
  420bf0:	mvn	w8, w0
  420bf4:	and	w1, w8, #0x1
  420bf8:	ldr	x3, [x19, #432]
  420bfc:	mov	x0, x19
  420c00:	ldr	x19, [sp, #16]
  420c04:	mov	w2, #0x4                   	// #4
  420c08:	ldp	x29, x30, [sp], #32
  420c0c:	b	421d88 <feof@plt+0x1f088>
  420c10:	stp	x29, x30, [sp, #-32]!
  420c14:	stp	x20, x19, [sp, #16]
  420c18:	ldr	x8, [x0]
  420c1c:	mov	x19, x0
  420c20:	mov	x29, sp
  420c24:	ldr	x20, [x8, #96]
  420c28:	cbz	x20, 420c98 <feof@plt+0x1df98>
  420c2c:	ldr	w8, [x20, #28]
  420c30:	cmp	w8, #0x5
  420c34:	b.ne	420c68 <feof@plt+0x1df68>  // b.any
  420c38:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420c3c:	add	x2, x2, #0x73
  420c40:	mov	w1, #0x3                   	// #3
  420c44:	mov	x0, x19
  420c48:	bl	4223e4 <feof@plt+0x1f6e4>
  420c4c:	ldr	w2, [x20, #8]
  420c50:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420c54:	add	x4, x4, #0x85
  420c58:	mov	w1, #0x3                   	// #3
  420c5c:	mov	x0, x19
  420c60:	mov	w3, wzr
  420c64:	bl	4228a4 <feof@plt+0x1fba4>
  420c68:	ldrb	w8, [x20, #24]
  420c6c:	mov	w9, #0x5                   	// #5
  420c70:	str	w9, [x20, #28]
  420c74:	mov	w9, #0x1                   	// #1
  420c78:	strb	w8, [x19, #18]
  420c7c:	ldrb	w8, [x20, #25]
  420c80:	strb	w9, [x20, #24]
  420c84:	str	xzr, [x20, #16]
  420c88:	cbz	w8, 420cb4 <feof@plt+0x1dfb4>
  420c8c:	ldp	x20, x19, [sp, #16]
  420c90:	ldp	x29, x30, [sp], #32
  420c94:	ret
  420c98:	mov	x0, x19
  420c9c:	ldp	x20, x19, [sp, #16]
  420ca0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420ca4:	add	x2, x2, #0x61
  420ca8:	mov	w1, #0x3                   	// #3
  420cac:	ldp	x29, x30, [sp], #32
  420cb0:	b	4223e4 <feof@plt+0x1f6e4>
  420cb4:	ldrb	w8, [x19, #1140]
  420cb8:	cbz	w8, 420c8c <feof@plt+0x1df8c>
  420cbc:	ldr	x8, [x19, #448]
  420cc0:	ldurb	w8, [x8, #-20]
  420cc4:	cmp	w8, #0x16
  420cc8:	b.eq	420c8c <feof@plt+0x1df8c>  // b.none
  420ccc:	mov	x0, x19
  420cd0:	bl	4298e8 <feof@plt+0x26be8>
  420cd4:	ldrb	w8, [x0, #4]
  420cd8:	cmp	w8, #0x16
  420cdc:	b.eq	420c8c <feof@plt+0x1df8c>  // b.none
  420ce0:	ldr	x8, [x19, #144]
  420ce4:	mov	x0, x19
  420ce8:	ldp	x20, x19, [sp, #16]
  420cec:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420cf0:	ldr	x3, [x8, #8]
  420cf4:	add	x2, x2, #0x29
  420cf8:	mov	w1, #0x8                   	// #8
  420cfc:	ldp	x29, x30, [sp], #32
  420d00:	b	422644 <feof@plt+0x1f944>
  420d04:	stp	x29, x30, [sp, #-48]!
  420d08:	stp	x20, x19, [sp, #32]
  420d0c:	ldrb	w8, [x0, #18]
  420d10:	mov	x19, x0
  420d14:	str	x21, [sp, #16]
  420d18:	mov	x29, sp
  420d1c:	cbz	w8, 420d48 <feof@plt+0x1e048>
  420d20:	mov	x20, xzr
  420d24:	mov	w21, #0x1                   	// #1
  420d28:	mov	x0, x19
  420d2c:	mov	w1, w21
  420d30:	mov	x3, x20
  420d34:	ldp	x20, x19, [sp, #32]
  420d38:	ldr	x21, [sp, #16]
  420d3c:	mov	w2, #0x6                   	// #6
  420d40:	ldp	x29, x30, [sp], #48
  420d44:	b	421d88 <feof@plt+0x1f088>
  420d48:	mov	x0, x19
  420d4c:	mov	w1, wzr
  420d50:	bl	421930 <feof@plt+0x1ec30>
  420d54:	mov	x20, x0
  420d58:	cbz	x0, 420d24 <feof@plt+0x1e024>
  420d5c:	ldrh	w8, [x20, #18]
  420d60:	and	w9, w8, #0x3
  420d64:	cmp	w9, #0x2
  420d68:	lsr	w9, w8, #1
  420d6c:	mov	w10, w8
  420d70:	b.ne	420d88 <feof@plt+0x1e088>  // b.any
  420d74:	ldr	x10, [x20, #24]
  420d78:	ldrb	w11, [x10, #19]
  420d7c:	orr	w11, w11, #0x20
  420d80:	strb	w11, [x10, #19]
  420d84:	ldrh	w10, [x20, #18]
  420d88:	bic	w21, w9, w8, lsr #8
  420d8c:	tbnz	w10, #7, 420d9c <feof@plt+0x1e09c>
  420d90:	mov	x0, x19
  420d94:	mov	x1, x20
  420d98:	bl	433804 <feof@plt+0x30b04>
  420d9c:	ldr	x8, [x19, #1032]
  420da0:	and	w21, w21, #0x1
  420da4:	cbz	x8, 420db8 <feof@plt+0x1e0b8>
  420da8:	ldr	w1, [x19, #48]
  420dac:	mov	x0, x19
  420db0:	mov	x2, x20
  420db4:	blr	x8
  420db8:	ldr	x8, [x19, #448]
  420dbc:	ldurb	w8, [x8, #-20]
  420dc0:	cmp	w8, #0x16
  420dc4:	b.eq	420d28 <feof@plt+0x1e028>  // b.none
  420dc8:	mov	x0, x19
  420dcc:	bl	4298e8 <feof@plt+0x26be8>
  420dd0:	ldrb	w8, [x0, #4]
  420dd4:	cmp	w8, #0x16
  420dd8:	b.eq	420d28 <feof@plt+0x1e028>  // b.none
  420ddc:	ldr	x8, [x19, #144]
  420de0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420de4:	add	x2, x2, #0x29
  420de8:	mov	x0, x19
  420dec:	ldr	x3, [x8, #8]
  420df0:	mov	w1, wzr
  420df4:	bl	422644 <feof@plt+0x1f944>
  420df8:	b	420d28 <feof@plt+0x1e028>
  420dfc:	stp	x29, x30, [sp, #-32]!
  420e00:	mov	w1, #0x1                   	// #1
  420e04:	stp	x20, x19, [sp, #16]
  420e08:	mov	x29, sp
  420e0c:	mov	x19, x0
  420e10:	bl	421930 <feof@plt+0x1ec30>
  420e14:	cbz	x0, 420ec0 <feof@plt+0x1e1c0>
  420e18:	ldr	x8, [x19, #1024]
  420e1c:	mov	x20, x0
  420e20:	cbz	x8, 420e2c <feof@plt+0x1e12c>
  420e24:	mov	x0, x19
  420e28:	blr	x8
  420e2c:	ldr	x8, [x19, #944]
  420e30:	cbz	x8, 420e44 <feof@plt+0x1e144>
  420e34:	ldr	w1, [x19, #48]
  420e38:	mov	x0, x19
  420e3c:	mov	x2, x20
  420e40:	blr	x8
  420e44:	ldrh	w8, [x20, #18]
  420e48:	tbz	w8, #1, 420ec0 <feof@plt+0x1e1c0>
  420e4c:	tbnz	w8, #5, 420e88 <feof@plt+0x1e188>
  420e50:	mvn	w8, w8
  420e54:	tst	w8, #0x3
  420e58:	b.ne	420ea0 <feof@plt+0x1e1a0>  // b.any
  420e5c:	ldrb	w8, [x19, #1143]
  420e60:	cbz	w8, 420ea0 <feof@plt+0x1e1a0>
  420e64:	ldr	w2, [x19, #48]
  420e68:	ldr	x5, [x20]
  420e6c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420e70:	add	x4, x4, #0xa0
  420e74:	mov	w1, #0xb                   	// #11
  420e78:	mov	x0, x19
  420e7c:	mov	w3, wzr
  420e80:	bl	4229a0 <feof@plt+0x1fca0>
  420e84:	b	420ea0 <feof@plt+0x1e1a0>
  420e88:	ldr	x3, [x20]
  420e8c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420e90:	add	x2, x2, #0xa0
  420e94:	mov	x0, x19
  420e98:	mov	w1, wzr
  420e9c:	bl	4223e4 <feof@plt+0x1f6e4>
  420ea0:	ldrb	w8, [x19, #1151]
  420ea4:	cbz	w8, 420eb8 <feof@plt+0x1e1b8>
  420ea8:	mov	x0, x19
  420eac:	mov	x1, x20
  420eb0:	mov	x2, xzr
  420eb4:	bl	43190c <feof@plt+0x2ec0c>
  420eb8:	mov	x0, x20
  420ebc:	bl	4329b4 <feof@plt+0x2fcb4>
  420ec0:	ldr	x8, [x19, #448]
  420ec4:	ldurb	w8, [x8, #-20]
  420ec8:	cmp	w8, #0x16
  420ecc:	b.eq	420ee4 <feof@plt+0x1e1e4>  // b.none
  420ed0:	mov	x0, x19
  420ed4:	bl	4298e8 <feof@plt+0x26be8>
  420ed8:	ldrb	w8, [x0, #4]
  420edc:	cmp	w8, #0x16
  420ee0:	b.ne	420ef0 <feof@plt+0x1e1f0>  // b.any
  420ee4:	ldp	x20, x19, [sp, #16]
  420ee8:	ldp	x29, x30, [sp], #32
  420eec:	ret
  420ef0:	ldr	x8, [x19, #144]
  420ef4:	mov	x0, x19
  420ef8:	ldp	x20, x19, [sp, #16]
  420efc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420f00:	ldr	x3, [x8, #8]
  420f04:	add	x2, x2, #0x29
  420f08:	mov	w1, wzr
  420f0c:	ldp	x29, x30, [sp], #32
  420f10:	b	422644 <feof@plt+0x1f944>
  420f14:	sub	sp, sp, #0x50
  420f18:	stp	x29, x30, [sp, #16]
  420f1c:	stp	x24, x23, [sp, #32]
  420f20:	stp	x22, x21, [sp, #48]
  420f24:	stp	x20, x19, [sp, #64]
  420f28:	ldr	x23, [x0, #40]
  420f2c:	mov	w10, #0x18                  	// #24
  420f30:	ldrb	w11, [x0, #1152]
  420f34:	add	x29, sp, #0x10
  420f38:	ldr	w8, [x23, #12]
  420f3c:	ldr	x9, [x23]
  420f40:	cmp	w11, #0x0
  420f44:	mov	x19, x0
  420f48:	sub	w8, w8, #0x1
  420f4c:	smaddl	x8, w8, w10, x9
  420f50:	ldrb	w21, [x8, #5]
  420f54:	ldr	x20, [x8, #8]
  420f58:	mov	w8, #0x7fffffff            	// #2147483647
  420f5c:	mov	w9, #0x7fff                	// #32767
  420f60:	csel	w24, w9, w8, eq  // eq = none
  420f64:	bl	432114 <feof@plt+0x2f414>
  420f68:	ldrb	w8, [x0, #4]
  420f6c:	cmp	w8, #0x16
  420f70:	b.eq	421030 <feof@plt+0x1e330>  // b.none
  420f74:	mov	x1, x0
  420f78:	cmp	w8, #0x37
  420f7c:	b.ne	420ffc <feof@plt+0x1e2fc>  // b.any
  420f80:	ldr	w9, [x1, #8]
  420f84:	cbz	w9, 421058 <feof@plt+0x1e358>
  420f88:	ldr	x10, [x1, #16]
  420f8c:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  420f90:	mov	w8, wzr
  420f94:	mov	w12, wzr
  420f98:	add	x11, x11, #0x3c4
  420f9c:	mov	w13, #0xa                   	// #10
  420fa0:	ldrb	w14, [x10]
  420fa4:	ldrh	w15, [x11, x14, lsl #1]
  420fa8:	tbz	w15, #2, 420ffc <feof@plt+0x1e2fc>
  420fac:	madd	w14, w12, w13, w14
  420fb0:	sub	w22, w14, #0x30
  420fb4:	cmp	w22, w12
  420fb8:	sub	x9, x9, #0x1
  420fbc:	add	x10, x10, #0x1
  420fc0:	csinc	w8, w8, wzr, cs  // cs = hs, nlast
  420fc4:	mov	w12, w22
  420fc8:	cbnz	x9, 420fa0 <feof@plt+0x1e2a0>
  420fcc:	ldrb	w9, [x19, #1154]
  420fd0:	cbz	w9, 421068 <feof@plt+0x1e368>
  420fd4:	sub	w9, w22, #0x1
  420fd8:	cmp	w9, w24
  420fdc:	b.cs	420fe8 <feof@plt+0x1e2e8>  // b.hs, b.nlast
  420fe0:	tst	w8, #0xff
  420fe4:	b.eq	421084 <feof@plt+0x1e384>  // b.none
  420fe8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  420fec:	add	x2, x2, #0xfe
  420ff0:	mov	w1, #0x2                   	// #2
  420ff4:	mov	x0, x19
  420ff8:	b	421080 <feof@plt+0x1e380>
  420ffc:	mov	x0, x19
  421000:	bl	42d084 <feof@plt+0x2a384>
  421004:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421008:	add	x2, x2, #0xd3
  42100c:	mov	x3, x0
  421010:	mov	x0, x19
  421014:	ldp	x20, x19, [sp, #64]
  421018:	ldp	x22, x21, [sp, #48]
  42101c:	ldp	x24, x23, [sp, #32]
  421020:	ldp	x29, x30, [sp, #16]
  421024:	mov	w1, #0x3                   	// #3
  421028:	add	sp, sp, #0x50
  42102c:	b	4223e4 <feof@plt+0x1f6e4>
  421030:	mov	x0, x19
  421034:	ldp	x20, x19, [sp, #64]
  421038:	ldp	x22, x21, [sp, #48]
  42103c:	ldp	x24, x23, [sp, #32]
  421040:	ldp	x29, x30, [sp, #16]
  421044:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421048:	add	x2, x2, #0xb0
  42104c:	mov	w1, #0x3                   	// #3
  421050:	add	sp, sp, #0x50
  421054:	b	4223e4 <feof@plt+0x1f6e4>
  421058:	mov	w22, wzr
  42105c:	mov	w8, wzr
  421060:	ldrb	w9, [x19, #1154]
  421064:	cbnz	w9, 420fd4 <feof@plt+0x1e2d4>
  421068:	tst	w8, #0xff
  42106c:	b.eq	421084 <feof@plt+0x1e384>  // b.none
  421070:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421074:	add	x2, x2, #0xfe
  421078:	mov	x0, x19
  42107c:	mov	w1, wzr
  421080:	bl	4223e4 <feof@plt+0x1f6e4>
  421084:	mov	x0, x19
  421088:	bl	432114 <feof@plt+0x2f414>
  42108c:	ldrb	w8, [x0, #4]
  421090:	cmp	w8, #0x16
  421094:	b.eq	421118 <feof@plt+0x1e418>  // b.none
  421098:	mov	x1, x0
  42109c:	cmp	w8, #0x3e
  4210a0:	b.ne	4211ac <feof@plt+0x1e4ac>  // b.any
  4210a4:	add	x1, x1, #0x8
  4210a8:	mov	x3, sp
  4210ac:	mov	w2, #0x1                   	// #1
  4210b0:	mov	w4, #0x3e                  	// #62
  4210b4:	mov	x0, x19
  4210b8:	stp	xzr, xzr, [sp]
  4210bc:	bl	41c174 <feof@plt+0x19474>
  4210c0:	ldr	x8, [x19, #448]
  4210c4:	ldr	x9, [sp, #8]
  4210c8:	tst	w0, #0x1
  4210cc:	ldurb	w8, [x8, #-20]
  4210d0:	csel	x20, x9, x20, ne  // ne = any
  4210d4:	cmp	w8, #0x16
  4210d8:	b.eq	421118 <feof@plt+0x1e418>  // b.none
  4210dc:	mov	x0, x19
  4210e0:	bl	432114 <feof@plt+0x2f414>
  4210e4:	ldrb	w8, [x0, #4]
  4210e8:	cmp	w8, #0x16
  4210ec:	b.eq	421118 <feof@plt+0x1e418>  // b.none
  4210f0:	ldr	x8, [x19, #144]
  4210f4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4210f8:	add	x2, x2, #0x29
  4210fc:	mov	x0, x19
  421100:	ldr	x3, [x8, #8]
  421104:	mov	w1, wzr
  421108:	bl	422644 <feof@plt+0x1f944>
  42110c:	b	421118 <feof@plt+0x1e418>
  421110:	mov	x0, x19
  421114:	bl	43200c <feof@plt+0x2f30c>
  421118:	ldr	x8, [x19, #136]
  42111c:	ldr	x8, [x8, #8]
  421120:	cbnz	x8, 421110 <feof@plt+0x1e410>
  421124:	ldr	x8, [x19, #448]
  421128:	ldurb	w8, [x8, #-20]
  42112c:	cmp	w8, #0x16
  421130:	b.eq	421148 <feof@plt+0x1e448>  // b.none
  421134:	mov	x0, x19
  421138:	bl	4298e8 <feof@plt+0x26be8>
  42113c:	ldrb	w8, [x0, #4]
  421140:	cmp	w8, #0x16
  421144:	b.ne	421134 <feof@plt+0x1e434>  // b.any
  421148:	ldr	x0, [x19, #40]
  42114c:	mov	w1, #0x3                   	// #3
  421150:	mov	w2, w21
  421154:	mov	x3, x20
  421158:	mov	w4, w22
  42115c:	bl	42e6d0 <feof@plt+0x2b9d0>
  421160:	mov	x20, x0
  421164:	cbz	x0, 421178 <feof@plt+0x1e478>
  421168:	ldr	x0, [x19, #40]
  42116c:	ldr	w1, [x20, #16]
  421170:	mov	w2, #0x7f                  	// #127
  421174:	bl	42ebc8 <feof@plt+0x2bec8>
  421178:	ldr	x8, [x19, #912]
  42117c:	cbz	x8, 42118c <feof@plt+0x1e48c>
  421180:	mov	x0, x19
  421184:	mov	x1, x20
  421188:	blr	x8
  42118c:	mov	w8, #0x1                   	// #1
  421190:	strb	w8, [x23, #116]
  421194:	ldp	x20, x19, [sp, #64]
  421198:	ldp	x22, x21, [sp, #48]
  42119c:	ldp	x24, x23, [sp, #32]
  4211a0:	ldp	x29, x30, [sp, #16]
  4211a4:	add	sp, sp, #0x50
  4211a8:	ret
  4211ac:	mov	x0, x19
  4211b0:	bl	42d084 <feof@plt+0x2a384>
  4211b4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4211b8:	add	x2, x2, #0x117
  4211bc:	b	42100c <feof@plt+0x1e30c>
  4211c0:	stp	x29, x30, [sp, #-32]!
  4211c4:	stp	x20, x19, [sp, #16]
  4211c8:	ldr	x8, [x0]
  4211cc:	mov	x19, x0
  4211d0:	mov	x29, sp
  4211d4:	ldr	x20, [x8, #96]
  4211d8:	cbz	x20, 421230 <feof@plt+0x1e530>
  4211dc:	ldr	w8, [x20, #28]
  4211e0:	cmp	w8, #0x5
  4211e4:	b.ne	421218 <feof@plt+0x1e518>  // b.any
  4211e8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4211ec:	add	x2, x2, #0x146
  4211f0:	mov	w1, #0x3                   	// #3
  4211f4:	mov	x0, x19
  4211f8:	bl	4223e4 <feof@plt+0x1f6e4>
  4211fc:	ldr	w2, [x20, #8]
  421200:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421204:	add	x4, x4, #0x85
  421208:	mov	w1, #0x3                   	// #3
  42120c:	mov	x0, x19
  421210:	mov	w3, wzr
  421214:	bl	4228a4 <feof@plt+0x1fba4>
  421218:	ldrb	w8, [x20, #24]
  42121c:	mov	w9, #0x9                   	// #9
  421220:	str	w9, [x20, #28]
  421224:	cbz	w8, 42124c <feof@plt+0x1e54c>
  421228:	mov	w8, #0x1                   	// #1
  42122c:	b	421268 <feof@plt+0x1e568>
  421230:	mov	x0, x19
  421234:	ldp	x20, x19, [sp, #16]
  421238:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42123c:	add	x2, x2, #0x134
  421240:	mov	w1, #0x3                   	// #3
  421244:	ldp	x29, x30, [sp], #32
  421248:	b	4223e4 <feof@plt+0x1f6e4>
  42124c:	mov	x0, x19
  421250:	mov	w1, wzr
  421254:	bl	424210 <feof@plt+0x21510>
  421258:	mvn	w8, w0
  42125c:	and	w9, w0, #0x1
  421260:	and	w8, w8, #0x1
  421264:	strb	w9, [x20, #24]
  421268:	strb	w8, [x19, #18]
  42126c:	str	xzr, [x20, #16]
  421270:	ldp	x20, x19, [sp, #16]
  421274:	ldp	x29, x30, [sp], #32
  421278:	ret
  42127c:	stp	x29, x30, [sp, #-48]!
  421280:	stp	x20, x19, [sp, #32]
  421284:	ldr	x9, [x0, #144]
  421288:	ldr	x8, [x0, #448]
  42128c:	ldrb	w10, [x0, #24]
  421290:	str	x21, [sp, #16]
  421294:	ldr	x1, [x9, #8]
  421298:	ldur	w20, [x8, #-24]
  42129c:	add	w8, w10, #0x1
  4212a0:	mov	x29, sp
  4212a4:	mov	x19, x0
  4212a8:	strb	w8, [x0, #24]
  4212ac:	bl	42d7f8 <feof@plt+0x2aaf8>
  4212b0:	ldrb	w8, [x19, #24]
  4212b4:	mov	x21, x0
  4212b8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4212bc:	add	x4, x4, #0x88c
  4212c0:	sub	w8, w8, #0x1
  4212c4:	mov	w1, #0x3                   	// #3
  4212c8:	mov	x0, x19
  4212cc:	mov	w2, w20
  4212d0:	mov	w3, wzr
  4212d4:	mov	x5, x21
  4212d8:	strb	w8, [x19, #24]
  4212dc:	bl	4228a4 <feof@plt+0x1fba4>
  4212e0:	mov	x0, x21
  4212e4:	ldp	x20, x19, [sp, #32]
  4212e8:	ldr	x21, [sp, #16]
  4212ec:	ldp	x29, x30, [sp], #48
  4212f0:	b	402770 <free@plt>
  4212f4:	sub	sp, sp, #0x50
  4212f8:	stp	x29, x30, [sp, #32]
  4212fc:	add	x29, sp, #0x20
  421300:	stp	x22, x21, [sp, #48]
  421304:	stp	x20, x19, [sp, #64]
  421308:	stur	wzr, [x29, #-4]
  42130c:	ldrb	w8, [x0, #24]
  421310:	sub	x1, x29, #0x4
  421314:	mov	x19, x0
  421318:	add	w8, w8, #0x1
  42131c:	strb	w8, [x0, #24]
  421320:	bl	43277c <feof@plt+0x2fa7c>
  421324:	ldr	x8, [x0, #16]
  421328:	ldr	q0, [x0]
  42132c:	mov	x20, x0
  421330:	str	x8, [sp, #16]
  421334:	str	q0, [sp]
  421338:	ldrb	w8, [x0, #4]
  42133c:	cmp	w8, #0x35
  421340:	b.ne	421364 <feof@plt+0x1e664>  // b.any
  421344:	ldr	x21, [x19, #896]
  421348:	cbz	x21, 421364 <feof@plt+0x1e664>
  42134c:	ldr	x8, [x20, #8]
  421350:	ldr	x9, [x21, #8]
  421354:	cmp	x9, x8
  421358:	b.eq	421414 <feof@plt+0x1e714>  // b.none
  42135c:	ldr	x21, [x21]
  421360:	cbnz	x21, 421350 <feof@plt+0x1e650>
  421364:	mov	w1, #0x1                   	// #1
  421368:	ldr	x8, [x19, #960]
  42136c:	cbz	x8, 4213f4 <feof@plt+0x1e6f4>
  421370:	cmp	w1, #0x1
  421374:	b.eq	4213dc <feof@plt+0x1e6dc>  // b.none
  421378:	ldr	x8, [x19, #136]
  42137c:	ldr	x8, [x8, #8]
  421380:	cbz	x8, 4213dc <feof@plt+0x1e6dc>
  421384:	mov	w0, #0x30                  	// #48
  421388:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42138c:	ldr	q0, [sp]
  421390:	ldr	x8, [sp, #16]
  421394:	mov	x2, x0
  421398:	mov	w3, #0x2                   	// #2
  42139c:	str	q0, [x0]
  4213a0:	ldrh	w9, [x0, #6]
  4213a4:	str	x8, [x0, #16]
  4213a8:	mov	x1, xzr
  4213ac:	orr	w8, w9, #0x400
  4213b0:	strh	w8, [x0, #6]
  4213b4:	ldr	q0, [x20]
  4213b8:	ldr	x8, [x20, #16]
  4213bc:	stur	q0, [x0, #24]
  4213c0:	ldrh	w9, [x0, #30]
  4213c4:	str	x8, [x0, #40]
  4213c8:	orr	w8, w9, #0x400
  4213cc:	strh	w8, [x0, #30]
  4213d0:	mov	x0, x19
  4213d4:	bl	431eec <feof@plt+0x2f1ec>
  4213d8:	b	4213e4 <feof@plt+0x1e6e4>
  4213dc:	mov	x0, x19
  4213e0:	bl	4328a0 <feof@plt+0x2fba0>
  4213e4:	ldr	x8, [x19, #960]
  4213e8:	ldr	w1, [x19, #48]
  4213ec:	mov	x0, x19
  4213f0:	blr	x8
  4213f4:	ldrb	w8, [x19, #24]
  4213f8:	sub	w8, w8, #0x1
  4213fc:	strb	w8, [x19, #24]
  421400:	ldp	x20, x19, [sp, #64]
  421404:	ldp	x22, x21, [sp, #48]
  421408:	ldp	x29, x30, [sp, #32]
  42140c:	add	sp, sp, #0x50
  421410:	ret
  421414:	ldrb	w8, [x21, #16]
  421418:	cbz	w8, 421480 <feof@plt+0x1e780>
  42141c:	ldrb	w22, [x21, #19]
  421420:	cbz	w22, 421430 <feof@plt+0x1e730>
  421424:	ldrb	w8, [x19, #24]
  421428:	sub	w8, w8, #0x1
  42142c:	strb	w8, [x19, #24]
  421430:	mov	x0, x19
  421434:	bl	432114 <feof@plt+0x2f414>
  421438:	ldrb	w8, [x0, #4]
  42143c:	cmp	w8, #0x35
  421440:	b.ne	421468 <feof@plt+0x1e768>  // b.any
  421444:	ldr	x21, [x21, #24]
  421448:	cbz	x21, 42146c <feof@plt+0x1e76c>
  42144c:	ldr	x8, [x0, #8]
  421450:	ldr	x9, [x21, #8]
  421454:	cmp	x9, x8
  421458:	b.eq	42146c <feof@plt+0x1e76c>  // b.none
  42145c:	ldr	x21, [x21]
  421460:	cbnz	x21, 421450 <feof@plt+0x1e750>
  421464:	b	42146c <feof@plt+0x1e76c>
  421468:	mov	x21, xzr
  42146c:	cbz	w22, 42147c <feof@plt+0x1e77c>
  421470:	ldrb	w8, [x19, #24]
  421474:	add	w8, w8, #0x1
  421478:	strb	w8, [x19, #24]
  42147c:	cbz	x21, 421510 <feof@plt+0x1e810>
  421480:	ldrb	w8, [x21, #18]
  421484:	cbz	w8, 4214c0 <feof@plt+0x1e7c0>
  421488:	ldur	w8, [x29, #-4]
  42148c:	mov	w9, #0x51                  	// #81
  421490:	strb	w9, [x19, #156]
  421494:	mov	w9, #0x1                   	// #1
  421498:	str	w8, [x19, #152]
  42149c:	ldrh	w8, [x20, #6]
  4214a0:	strh	w8, [x19, #158]
  4214a4:	ldr	w8, [x21, #24]
  4214a8:	strb	w9, [x19, #32]
  4214ac:	str	w8, [x19, #160]
  4214b0:	ldrb	w8, [x21, #19]
  4214b4:	strb	w8, [x19, #33]
  4214b8:	cbnz	w8, 4213f4 <feof@plt+0x1e6f4>
  4214bc:	b	421500 <feof@plt+0x1e800>
  4214c0:	ldr	x8, [x19, #904]
  4214c4:	cbz	x8, 4214d8 <feof@plt+0x1e7d8>
  4214c8:	mov	x0, x19
  4214cc:	mov	x1, x20
  4214d0:	mov	w2, wzr
  4214d4:	blr	x8
  4214d8:	ldrb	w8, [x21, #19]
  4214dc:	cbz	w8, 4214ec <feof@plt+0x1e7ec>
  4214e0:	ldrb	w8, [x19, #24]
  4214e4:	sub	w8, w8, #0x1
  4214e8:	strb	w8, [x19, #24]
  4214ec:	ldr	x8, [x21, #24]
  4214f0:	mov	x0, x19
  4214f4:	blr	x8
  4214f8:	ldrb	w8, [x21, #19]
  4214fc:	cbz	w8, 4213f4 <feof@plt+0x1e6f4>
  421500:	ldrb	w8, [x19, #24]
  421504:	add	w8, w8, #0x1
  421508:	strb	w8, [x19, #24]
  42150c:	b	4213f4 <feof@plt+0x1e6f4>
  421510:	mov	w1, #0x2                   	// #2
  421514:	mov	x20, x0
  421518:	ldr	x8, [x19, #960]
  42151c:	cbnz	x8, 421370 <feof@plt+0x1e670>
  421520:	b	4213f4 <feof@plt+0x1e6f4>
  421524:	stp	x29, x30, [sp, #-48]!
  421528:	stp	x20, x19, [sp, #32]
  42152c:	ldr	x9, [x0, #144]
  421530:	ldr	x8, [x0, #448]
  421534:	ldrb	w10, [x0, #24]
  421538:	str	x21, [sp, #16]
  42153c:	ldr	x1, [x9, #8]
  421540:	ldur	w20, [x8, #-24]
  421544:	add	w8, w10, #0x1
  421548:	mov	x29, sp
  42154c:	mov	x19, x0
  421550:	strb	w8, [x0, #24]
  421554:	bl	42d7f8 <feof@plt+0x2aaf8>
  421558:	ldrb	w8, [x19, #24]
  42155c:	mov	x21, x0
  421560:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421564:	add	x4, x4, #0x88c
  421568:	sub	w8, w8, #0x1
  42156c:	mov	w1, #0x12                  	// #18
  421570:	mov	x0, x19
  421574:	mov	w2, w20
  421578:	mov	w3, wzr
  42157c:	mov	x5, x21
  421580:	strb	w8, [x19, #24]
  421584:	bl	422b98 <feof@plt+0x1fe98>
  421588:	mov	x0, x21
  42158c:	ldp	x20, x19, [sp, #32]
  421590:	ldr	x21, [sp, #16]
  421594:	ldp	x29, x30, [sp], #48
  421598:	b	402770 <free@plt>
  42159c:	stp	x29, x30, [sp, #-32]!
  4215a0:	ldr	x8, [x0, #40]
  4215a4:	str	x19, [sp, #16]
  4215a8:	mov	x19, x0
  4215ac:	mov	x29, sp
  4215b0:	ldr	w8, [x8, #48]
  4215b4:	cmp	w8, #0x1
  4215b8:	b.ne	4215d8 <feof@plt+0x1e8d8>  // b.any
  4215bc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4215c0:	add	x2, x2, #0x158
  4215c4:	mov	x0, x19
  4215c8:	mov	w1, wzr
  4215cc:	bl	4223e4 <feof@plt+0x1f6e4>
  4215d0:	mov	w1, wzr
  4215d4:	b	4215dc <feof@plt+0x1e8dc>
  4215d8:	mov	w1, #0x1                   	// #1
  4215dc:	mov	x0, x19
  4215e0:	ldr	x19, [sp, #16]
  4215e4:	ldp	x29, x30, [sp], #32
  4215e8:	b	421a0c <feof@plt+0x1ed0c>
  4215ec:	stp	x29, x30, [sp, #-32]!
  4215f0:	str	x19, [sp, #16]
  4215f4:	mov	x29, sp
  4215f8:	mov	x19, x0
  4215fc:	bl	432114 <feof@plt+0x2f414>
  421600:	ldrb	w8, [x0, #4]
  421604:	cmp	w8, #0x3e
  421608:	b.ne	421628 <feof@plt+0x1e928>  // b.any
  42160c:	ldr	x8, [x19, #952]
  421610:	cbz	x8, 421644 <feof@plt+0x1e944>
  421614:	ldr	w1, [x19, #48]
  421618:	add	x2, x0, #0x8
  42161c:	mov	x0, x19
  421620:	blr	x8
  421624:	b	421644 <feof@plt+0x1e944>
  421628:	ldr	x8, [x19, #144]
  42162c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421630:	add	x2, x2, #0x17d
  421634:	mov	w1, #0x3                   	// #3
  421638:	ldr	x3, [x8, #8]
  42163c:	mov	x0, x19
  421640:	bl	4223e4 <feof@plt+0x1f6e4>
  421644:	ldr	x8, [x19, #448]
  421648:	ldurb	w8, [x8, #-20]
  42164c:	cmp	w8, #0x16
  421650:	b.eq	421668 <feof@plt+0x1e968>  // b.none
  421654:	mov	x0, x19
  421658:	bl	4298e8 <feof@plt+0x26be8>
  42165c:	ldrb	w8, [x0, #4]
  421660:	cmp	w8, #0x16
  421664:	b.ne	421674 <feof@plt+0x1e974>  // b.any
  421668:	ldr	x19, [sp, #16]
  42166c:	ldp	x29, x30, [sp], #32
  421670:	ret
  421674:	ldr	x8, [x19, #144]
  421678:	mov	x0, x19
  42167c:	ldr	x19, [sp, #16]
  421680:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421684:	ldr	x3, [x8, #8]
  421688:	add	x2, x2, #0x29
  42168c:	mov	w1, wzr
  421690:	ldp	x29, x30, [sp], #32
  421694:	b	422644 <feof@plt+0x1f944>
  421698:	mov	w1, #0x2                   	// #2
  42169c:	b	421a0c <feof@plt+0x1ed0c>
  4216a0:	sub	sp, sp, #0x70
  4216a4:	add	x2, sp, #0x8
  4216a8:	mov	w1, #0x10                  	// #16
  4216ac:	stp	x29, x30, [sp, #16]
  4216b0:	stp	x28, x27, [sp, #32]
  4216b4:	stp	x26, x25, [sp, #48]
  4216b8:	stp	x24, x23, [sp, #64]
  4216bc:	stp	x22, x21, [sp, #80]
  4216c0:	stp	x20, x19, [sp, #96]
  4216c4:	add	x29, sp, #0x10
  4216c8:	mov	x19, x0
  4216cc:	bl	41fdf0 <feof@plt+0x1d0f0>
  4216d0:	cbz	x0, 4217e8 <feof@plt+0x1eae8>
  4216d4:	mov	x23, x0
  4216d8:	ldr	x24, [sp, #8]
  4216dc:	ldr	x27, [x23, #24]!
  4216e0:	mov	x20, x0
  4216e4:	cbz	x27, 421780 <feof@plt+0x1ea80>
  4216e8:	add	x25, x24, #0x18
  4216ec:	mov	x26, x23
  4216f0:	b	42170c <feof@plt+0x1ea0c>
  4216f4:	ldr	w8, [x27, #12]
  4216f8:	cmp	w28, w8
  4216fc:	b.eq	421758 <feof@plt+0x1ea58>  // b.none
  421700:	ldr	x26, [x26]
  421704:	ldr	x27, [x26]
  421708:	cbz	x27, 421780 <feof@plt+0x1ea80>
  42170c:	ldr	w8, [x27, #12]
  421710:	ldr	w9, [x24, #12]
  421714:	cmp	w8, w9
  421718:	b.ne	421700 <feof@plt+0x1ea00>  // b.any
  42171c:	cbz	w8, 421760 <feof@plt+0x1ea60>
  421720:	mov	x28, xzr
  421724:	add	x21, x27, #0x18
  421728:	mov	x22, x25
  42172c:	mov	x0, x21
  421730:	mov	x1, x22
  421734:	bl	42d3ac <feof@plt+0x2a6ac>
  421738:	cbz	w0, 4216f4 <feof@plt+0x1e9f4>
  42173c:	ldr	w8, [x27, #12]
  421740:	add	x28, x28, #0x1
  421744:	add	x22, x22, #0x18
  421748:	add	x21, x21, #0x18
  42174c:	cmp	x28, x8
  421750:	b.cc	42172c <feof@plt+0x1ea2c>  // b.lo, b.ul, b.last
  421754:	b	4216f8 <feof@plt+0x1e9f8>
  421758:	ldr	x8, [x26]
  42175c:	cbz	x8, 421780 <feof@plt+0x1ea80>
  421760:	ldr	x8, [x20]
  421764:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421768:	add	x2, x2, #0x193
  42176c:	mov	x0, x19
  421770:	add	x3, x8, #0x1
  421774:	mov	w1, wzr
  421778:	bl	4223e4 <feof@plt+0x1f6e4>
  42177c:	b	4217e8 <feof@plt+0x1eae8>
  421780:	ldr	w8, [x24, #12]
  421784:	mov	w9, #0x18                  	// #24
  421788:	orr	x10, xzr, #0x18
  42178c:	mov	x0, x19
  421790:	madd	x1, x8, x9, x10
  421794:	bl	42dcf0 <feof@plt+0x2aff0>
  421798:	str	x0, [sp, #8]
  42179c:	ldr	x8, [x23]
  4217a0:	str	x8, [x0]
  4217a4:	str	x0, [x23]
  4217a8:	ldr	x8, [x19, #448]
  4217ac:	ldurb	w8, [x8, #-20]
  4217b0:	cmp	w8, #0x16
  4217b4:	b.eq	4217e8 <feof@plt+0x1eae8>  // b.none
  4217b8:	mov	x0, x19
  4217bc:	bl	4298e8 <feof@plt+0x26be8>
  4217c0:	ldrb	w8, [x0, #4]
  4217c4:	cmp	w8, #0x16
  4217c8:	b.eq	4217e8 <feof@plt+0x1eae8>  // b.none
  4217cc:	ldr	x8, [x19, #144]
  4217d0:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4217d4:	add	x2, x2, #0x29
  4217d8:	mov	x0, x19
  4217dc:	ldr	x3, [x8, #8]
  4217e0:	mov	w1, wzr
  4217e4:	bl	422644 <feof@plt+0x1f944>
  4217e8:	ldp	x20, x19, [sp, #96]
  4217ec:	ldp	x22, x21, [sp, #80]
  4217f0:	ldp	x24, x23, [sp, #64]
  4217f4:	ldp	x26, x25, [sp, #48]
  4217f8:	ldp	x28, x27, [sp, #32]
  4217fc:	ldp	x29, x30, [sp, #16]
  421800:	add	sp, sp, #0x70
  421804:	ret
  421808:	sub	sp, sp, #0x60
  42180c:	add	x2, sp, #0x8
  421810:	mov	w1, #0x11                  	// #17
  421814:	stp	x29, x30, [sp, #16]
  421818:	stp	x26, x25, [sp, #32]
  42181c:	stp	x24, x23, [sp, #48]
  421820:	stp	x22, x21, [sp, #64]
  421824:	stp	x20, x19, [sp, #80]
  421828:	add	x29, sp, #0x10
  42182c:	mov	x19, x0
  421830:	bl	41fdf0 <feof@plt+0x1d0f0>
  421834:	cbz	x0, 421914 <feof@plt+0x1ec14>
  421838:	ldr	x23, [sp, #8]
  42183c:	mov	x20, x0
  421840:	cbz	x23, 4218b8 <feof@plt+0x1ebb8>
  421844:	ldr	x25, [x20, #24]!
  421848:	cbz	x25, 4218d4 <feof@plt+0x1ebd4>
  42184c:	add	x24, x23, #0x18
  421850:	b	42186c <feof@plt+0x1eb6c>
  421854:	ldr	w8, [x25, #12]
  421858:	cmp	w26, w8
  42185c:	b.eq	4218c4 <feof@plt+0x1ebc4>  // b.none
  421860:	ldr	x20, [x20]
  421864:	ldr	x25, [x20]
  421868:	cbz	x25, 4218d4 <feof@plt+0x1ebd4>
  42186c:	ldr	w8, [x25, #12]
  421870:	ldr	w9, [x23, #12]
  421874:	cmp	w8, w9
  421878:	b.ne	421860 <feof@plt+0x1eb60>  // b.any
  42187c:	cbz	w8, 4218cc <feof@plt+0x1ebcc>
  421880:	mov	x26, xzr
  421884:	add	x21, x25, #0x18
  421888:	mov	x22, x24
  42188c:	mov	x0, x21
  421890:	mov	x1, x22
  421894:	bl	42d3ac <feof@plt+0x2a6ac>
  421898:	cbz	w0, 421854 <feof@plt+0x1eb54>
  42189c:	ldr	w8, [x25, #12]
  4218a0:	add	x26, x26, #0x1
  4218a4:	add	x22, x22, #0x18
  4218a8:	add	x21, x21, #0x18
  4218ac:	cmp	x26, x8
  4218b0:	b.cc	42188c <feof@plt+0x1eb8c>  // b.lo, b.ul, b.last
  4218b4:	b	421858 <feof@plt+0x1eb58>
  4218b8:	mov	x0, x20
  4218bc:	bl	4329b4 <feof@plt+0x2fcb4>
  4218c0:	b	421914 <feof@plt+0x1ec14>
  4218c4:	ldr	x25, [x20]
  4218c8:	cbz	x25, 4218d4 <feof@plt+0x1ebd4>
  4218cc:	ldr	x8, [x25]
  4218d0:	str	x8, [x20]
  4218d4:	ldr	x8, [x19, #448]
  4218d8:	ldurb	w8, [x8, #-20]
  4218dc:	cmp	w8, #0x16
  4218e0:	b.eq	421914 <feof@plt+0x1ec14>  // b.none
  4218e4:	mov	x0, x19
  4218e8:	bl	4298e8 <feof@plt+0x26be8>
  4218ec:	ldrb	w8, [x0, #4]
  4218f0:	cmp	w8, #0x16
  4218f4:	b.eq	421914 <feof@plt+0x1ec14>  // b.none
  4218f8:	ldr	x8, [x19, #144]
  4218fc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421900:	add	x2, x2, #0x29
  421904:	mov	x0, x19
  421908:	ldr	x3, [x8, #8]
  42190c:	mov	w1, wzr
  421910:	bl	422644 <feof@plt+0x1f944>
  421914:	ldp	x20, x19, [sp, #80]
  421918:	ldp	x22, x21, [sp, #64]
  42191c:	ldp	x24, x23, [sp, #48]
  421920:	ldp	x26, x25, [sp, #32]
  421924:	ldp	x29, x30, [sp, #16]
  421928:	add	sp, sp, #0x60
  42192c:	ret
  421930:	stp	x29, x30, [sp, #-32]!
  421934:	stp	x20, x19, [sp, #16]
  421938:	mov	x29, sp
  42193c:	mov	w20, w1
  421940:	mov	x19, x0
  421944:	bl	4298e8 <feof@plt+0x26be8>
  421948:	ldrb	w8, [x0, #4]
  42194c:	cmp	w8, #0x35
  421950:	b.ne	42198c <feof@plt+0x1ec8c>  // b.any
  421954:	ldr	x0, [x0, #8]
  421958:	tbz	w20, #0, 421980 <feof@plt+0x1ec80>
  42195c:	ldr	x8, [x19, #1248]
  421960:	cmp	x0, x8
  421964:	b.eq	4219dc <feof@plt+0x1ecdc>  // b.none
  421968:	ldr	x8, [x19, #1288]
  42196c:	cmp	x0, x8
  421970:	b.eq	4219e8 <feof@plt+0x1ece8>  // b.none
  421974:	ldr	x8, [x19, #1296]
  421978:	cmp	x0, x8
  42197c:	b.eq	4219e8 <feof@plt+0x1ece8>  // b.none
  421980:	ldrb	w8, [x0, #18]
  421984:	tbnz	w8, #3, 4219fc <feof@plt+0x1ecfc>
  421988:	b	421a00 <feof@plt+0x1ed00>
  42198c:	ldrb	w9, [x0, #6]
  421990:	tbnz	w9, #4, 4219b0 <feof@plt+0x1ecb0>
  421994:	cmp	w8, #0x16
  421998:	b.ne	4219d0 <feof@plt+0x1ecd0>  // b.any
  42199c:	ldr	x8, [x19, #144]
  4219a0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  4219a4:	add	x2, x2, #0xf7c
  4219a8:	ldr	x3, [x8, #8]
  4219ac:	b	4219c0 <feof@plt+0x1ecc0>
  4219b0:	ldr	x8, [x0, #8]
  4219b4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  4219b8:	add	x2, x2, #0xf3c
  4219bc:	ldr	x3, [x8]
  4219c0:	mov	w1, #0x3                   	// #3
  4219c4:	mov	x0, x19
  4219c8:	bl	4223e4 <feof@plt+0x1f6e4>
  4219cc:	b	4219fc <feof@plt+0x1ecfc>
  4219d0:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  4219d4:	add	x2, x2, #0xfa1
  4219d8:	b	4219f0 <feof@plt+0x1ecf0>
  4219dc:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  4219e0:	add	x2, x2, #0xee2
  4219e4:	b	4219f0 <feof@plt+0x1ecf0>
  4219e8:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  4219ec:	add	x2, x2, #0xf0b
  4219f0:	mov	w1, #0x3                   	// #3
  4219f4:	mov	x0, x19
  4219f8:	bl	4223e4 <feof@plt+0x1f6e4>
  4219fc:	mov	x0, xzr
  421a00:	ldp	x20, x19, [sp, #16]
  421a04:	ldp	x29, x30, [sp], #32
  421a08:	ret
  421a0c:	sub	sp, sp, #0x50
  421a10:	stp	x29, x30, [sp, #32]
  421a14:	stp	x22, x21, [sp, #48]
  421a18:	stp	x20, x19, [sp, #64]
  421a1c:	str	xzr, [sp, #16]
  421a20:	ldrb	w8, [x0, #1123]
  421a24:	add	x29, sp, #0x20
  421a28:	mov	w21, w1
  421a2c:	sub	x1, x29, #0x4
  421a30:	cmp	w8, #0x0
  421a34:	cset	w8, eq  // eq = none
  421a38:	add	x2, sp, #0x10
  421a3c:	add	x3, sp, #0xc
  421a40:	mov	x20, x0
  421a44:	strb	w8, [x0, #21]
  421a48:	bl	421b5c <feof@plt+0x1ee5c>
  421a4c:	mov	x19, x0
  421a50:	cbz	x0, 421b34 <feof@plt+0x1ee34>
  421a54:	ldrb	w8, [x19]
  421a58:	cbz	w8, 421a9c <feof@plt+0x1ed9c>
  421a5c:	ldr	x8, [x20, #40]
  421a60:	ldr	w8, [x8, #48]
  421a64:	cmp	w8, #0xc8
  421a68:	b.cc	421a84 <feof@plt+0x1ed84>  // b.lo, b.ul, b.last
  421a6c:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  421a70:	add	x2, x2, #0xfd7
  421a74:	mov	w1, #0x3                   	// #3
  421a78:	mov	x0, x20
  421a7c:	bl	4223e4 <feof@plt+0x1f6e4>
  421a80:	b	421b34 <feof@plt+0x1ee34>
  421a84:	ldr	x8, [x20, #136]
  421a88:	ldr	x8, [x8, #8]
  421a8c:	cbz	x8, 421ac4 <feof@plt+0x1edc4>
  421a90:	mov	x0, x20
  421a94:	bl	43200c <feof@plt+0x2f30c>
  421a98:	b	421a84 <feof@plt+0x1ed84>
  421a9c:	ldr	x8, [x20, #144]
  421aa0:	ldr	w2, [sp, #12]
  421aa4:	adrp	x4, 460000 <_obstack_memory_used@@Base+0xadd8>
  421aa8:	add	x4, x4, #0xfc1
  421aac:	ldr	x5, [x8, #8]
  421ab0:	mov	w1, #0x3                   	// #3
  421ab4:	mov	x0, x20
  421ab8:	mov	w3, wzr
  421abc:	bl	4228a4 <feof@plt+0x1fba4>
  421ac0:	b	421b34 <feof@plt+0x1ee34>
  421ac4:	ldr	x8, [x20, #448]
  421ac8:	ldurb	w8, [x8, #-20]
  421acc:	cmp	w8, #0x16
  421ad0:	b.eq	421ae8 <feof@plt+0x1ede8>  // b.none
  421ad4:	mov	x0, x20
  421ad8:	bl	4298e8 <feof@plt+0x26be8>
  421adc:	ldrb	w8, [x0, #4]
  421ae0:	cmp	w8, #0x16
  421ae4:	b.ne	421ad4 <feof@plt+0x1edd4>  // b.any
  421ae8:	ldr	x8, [x20, #928]
  421aec:	cbz	x8, 421b18 <feof@plt+0x1ee18>
  421af0:	ldr	x9, [x20, #144]
  421af4:	ldur	w22, [x29, #-4]
  421af8:	ldr	w1, [x20, #48]
  421afc:	ldr	x5, [sp, #16]
  421b00:	ldr	x2, [x9, #8]
  421b04:	mov	x0, x20
  421b08:	mov	x3, x19
  421b0c:	mov	w4, w22
  421b10:	blr	x8
  421b14:	b	421b1c <feof@plt+0x1ee1c>
  421b18:	ldur	w22, [x29, #-4]
  421b1c:	ldr	w4, [sp, #12]
  421b20:	mov	x0, x20
  421b24:	mov	x1, x19
  421b28:	mov	w2, w22
  421b2c:	mov	w3, w21
  421b30:	bl	4272f0 <feof@plt+0x245f0>
  421b34:	mov	x0, x19
  421b38:	bl	402770 <free@plt>
  421b3c:	ldr	x0, [sp, #16]
  421b40:	cbz	x0, 421b48 <feof@plt+0x1ee48>
  421b44:	bl	402770 <free@plt>
  421b48:	ldp	x20, x19, [sp, #64]
  421b4c:	ldp	x22, x21, [sp, #48]
  421b50:	ldp	x29, x30, [sp, #32]
  421b54:	add	sp, sp, #0x50
  421b58:	ret
  421b5c:	stp	x29, x30, [sp, #-96]!
  421b60:	stp	x22, x21, [sp, #64]
  421b64:	stp	x20, x19, [sp, #80]
  421b68:	mov	x21, x3
  421b6c:	mov	x20, x2
  421b70:	mov	x22, x1
  421b74:	mov	x19, x0
  421b78:	stp	x28, x27, [sp, #16]
  421b7c:	stp	x26, x25, [sp, #32]
  421b80:	stp	x24, x23, [sp, #48]
  421b84:	mov	x29, sp
  421b88:	mov	x0, x19
  421b8c:	bl	432114 <feof@plt+0x2f414>
  421b90:	ldrb	w8, [x0, #4]
  421b94:	cmp	w8, #0x53
  421b98:	b.eq	421b88 <feof@plt+0x1ee88>  // b.none
  421b9c:	ldr	w8, [x0]
  421ba0:	mov	x23, x0
  421ba4:	str	w8, [x21]
  421ba8:	ldrb	w8, [x0, #4]
  421bac:	cmp	w8, #0x3
  421bb0:	b.eq	421c2c <feof@plt+0x1ef2c>  // b.none
  421bb4:	cmp	w8, #0x44
  421bb8:	b.eq	421bf0 <feof@plt+0x1eef0>  // b.none
  421bbc:	cmp	w8, #0x3e
  421bc0:	b.ne	421bd4 <feof@plt+0x1eed4>  // b.any
  421bc4:	ldr	x8, [x23, #16]
  421bc8:	ldrb	w8, [x8]
  421bcc:	cmp	w8, #0x52
  421bd0:	b.ne	421bf0 <feof@plt+0x1eef0>  // b.any
  421bd4:	ldr	x8, [x19, #144]
  421bd8:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421bdc:	add	x9, x9, #0x710
  421be0:	cmp	x8, x9
  421be4:	b.eq	421ca4 <feof@plt+0x1efa4>  // b.none
  421be8:	ldr	x3, [x8, #8]
  421bec:	b	421cac <feof@plt+0x1efac>
  421bf0:	ldr	w8, [x23, #8]
  421bf4:	sub	w0, w8, #0x1
  421bf8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  421bfc:	ldr	w9, [x23, #8]
  421c00:	ldr	x8, [x23, #16]
  421c04:	mov	x21, x0
  421c08:	sub	w24, w9, #0x2
  421c0c:	add	x1, x8, #0x1
  421c10:	mov	x2, x24
  421c14:	bl	402640 <memcpy@plt>
  421c18:	strb	wzr, [x21, x24]
  421c1c:	ldrb	w8, [x23, #4]
  421c20:	cmp	w8, #0x44
  421c24:	cset	w8, eq  // eq = none
  421c28:	b	421c3c <feof@plt+0x1ef3c>
  421c2c:	mov	x0, x19
  421c30:	bl	420854 <feof@plt+0x1db54>
  421c34:	mov	x21, x0
  421c38:	mov	w8, #0x1                   	// #1
  421c3c:	str	w8, [x22]
  421c40:	ldr	x8, [x19, #144]
  421c44:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421c48:	add	x9, x9, #0x710
  421c4c:	cmp	x8, x9
  421c50:	b.eq	421cc4 <feof@plt+0x1efc4>  // b.none
  421c54:	cbz	x20, 421c60 <feof@plt+0x1ef60>
  421c58:	ldrb	w8, [x19, #1123]
  421c5c:	cbz	w8, 421ce4 <feof@plt+0x1efe4>
  421c60:	ldr	x8, [x19, #448]
  421c64:	ldurb	w8, [x8, #-20]
  421c68:	cmp	w8, #0x16
  421c6c:	b.eq	421cc4 <feof@plt+0x1efc4>  // b.none
  421c70:	mov	x0, x19
  421c74:	bl	432114 <feof@plt+0x2f414>
  421c78:	ldrb	w8, [x0, #4]
  421c7c:	cmp	w8, #0x16
  421c80:	b.eq	421cc4 <feof@plt+0x1efc4>  // b.none
  421c84:	ldr	x8, [x19, #144]
  421c88:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421c8c:	add	x2, x2, #0x29
  421c90:	mov	x0, x19
  421c94:	ldr	x3, [x8, #8]
  421c98:	mov	w1, wzr
  421c9c:	bl	422644 <feof@plt+0x1f944>
  421ca0:	b	421cc4 <feof@plt+0x1efc4>
  421ca4:	adrp	x3, 460000 <_obstack_memory_used@@Base+0xadd8>
  421ca8:	add	x3, x3, #0xff2
  421cac:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421cb0:	add	x2, x2, #0x4
  421cb4:	mov	w1, #0x3                   	// #3
  421cb8:	mov	x0, x19
  421cbc:	bl	4223e4 <feof@plt+0x1f6e4>
  421cc0:	mov	x21, xzr
  421cc4:	mov	x0, x21
  421cc8:	ldp	x20, x19, [sp, #80]
  421ccc:	ldp	x22, x21, [sp, #64]
  421cd0:	ldp	x24, x23, [sp, #48]
  421cd4:	ldp	x26, x25, [sp, #32]
  421cd8:	ldp	x28, x27, [sp, #16]
  421cdc:	ldp	x29, x30, [sp], #96
  421ce0:	ret
  421ce4:	mov	w0, #0x40                  	// #64
  421ce8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  421cec:	ldr	x8, [x19, #448]
  421cf0:	mov	x22, x0
  421cf4:	mov	x25, xzr
  421cf8:	ldurb	w8, [x8, #-20]
  421cfc:	cmp	w8, #0x16
  421d00:	b.ne	421d10 <feof@plt+0x1f010>  // b.any
  421d04:	str	xzr, [x22, x25, lsl #3]
  421d08:	str	x22, [x20]
  421d0c:	b	421cc4 <feof@plt+0x1efc4>
  421d10:	adrp	x23, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421d14:	mov	w26, #0x8                   	// #8
  421d18:	add	x23, x23, #0x29
  421d1c:	mov	x0, x19
  421d20:	bl	4298e8 <feof@plt+0x26be8>
  421d24:	ldrb	w8, [x0, #4]
  421d28:	cmp	w8, #0x16
  421d2c:	b.eq	421d04 <feof@plt+0x1f004>  // b.none
  421d30:	cmp	w8, #0x4f
  421d34:	b.eq	421d54 <feof@plt+0x1f054>  // b.none
  421d38:	ldr	x8, [x19, #144]
  421d3c:	mov	w1, #0x2                   	// #2
  421d40:	mov	x0, x19
  421d44:	mov	x2, x23
  421d48:	ldr	x3, [x8, #8]
  421d4c:	bl	4223e4 <feof@plt+0x1f6e4>
  421d50:	b	421d1c <feof@plt+0x1f01c>
  421d54:	add	x27, x25, #0x1
  421d58:	mov	x24, x0
  421d5c:	cmp	x27, x26
  421d60:	b.cc	421d7c <feof@plt+0x1f07c>  // b.lo, b.ul, b.last
  421d64:	lsl	x1, x26, #4
  421d68:	mov	x0, x22
  421d6c:	lsl	x28, x26, #1
  421d70:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  421d74:	mov	x22, x0
  421d78:	mov	x26, x28
  421d7c:	str	x24, [x22, x25, lsl #3]
  421d80:	mov	x25, x27
  421d84:	b	421d1c <feof@plt+0x1f01c>
  421d88:	stp	x29, x30, [sp, #-64]!
  421d8c:	stp	x22, x21, [sp, #32]
  421d90:	stp	x20, x19, [sp, #48]
  421d94:	ldr	x8, [x0, #840]
  421d98:	ldr	x9, [x0, #832]
  421d9c:	str	x23, [sp, #16]
  421da0:	ldr	x23, [x0]
  421da4:	mov	x20, x3
  421da8:	sub	x8, x8, x9
  421dac:	mov	w22, w2
  421db0:	mov	x19, x0
  421db4:	cmp	x8, #0x1f
  421db8:	mov	w21, w1
  421dbc:	mov	x29, sp
  421dc0:	b.hi	421dd4 <feof@plt+0x1f0d4>  // b.pmore
  421dc4:	add	x0, x19, #0x328
  421dc8:	mov	w1, #0x20                  	// #32
  421dcc:	bl	45500c <_obstack_newchunk@@Base>
  421dd0:	ldr	x9, [x19, #832]
  421dd4:	ldr	x8, [x19, #824]
  421dd8:	add	x9, x9, #0x20
  421ddc:	str	x9, [x19, #832]
  421de0:	cmp	x9, x8
  421de4:	b.ne	421df4 <feof@plt+0x1f0f4>  // b.any
  421de8:	ldrb	w10, [x19, #888]
  421dec:	orr	w10, w10, #0x2
  421df0:	strb	w10, [x19, #888]
  421df4:	ldr	x11, [x19, #856]
  421df8:	ldr	x12, [x19, #816]
  421dfc:	ldr	x10, [x19, #840]
  421e00:	add	x9, x11, x9
  421e04:	bic	x9, x9, x11
  421e08:	sub	x11, x9, x12
  421e0c:	sub	x12, x10, x12
  421e10:	cmp	x11, x12
  421e14:	str	x9, [x19, #832]
  421e18:	b.ls	421e24 <feof@plt+0x1f124>  // b.plast
  421e1c:	mov	x9, x10
  421e20:	str	x10, [x19, #832]
  421e24:	ldr	w10, [x19, #48]
  421e28:	str	x9, [x19, #824]
  421e2c:	str	w10, [x8, #8]
  421e30:	ldr	x9, [x23, #96]
  421e34:	str	x9, [x8]
  421e38:	ldrb	w9, [x19, #18]
  421e3c:	str	w22, [x8, #28]
  421e40:	cmp	w9, #0x0
  421e44:	cset	w9, ne  // ne = any
  421e48:	cmp	w21, #0x0
  421e4c:	cset	w10, eq  // eq = none
  421e50:	strb	w9, [x8, #25]
  421e54:	orr	w9, w10, w9
  421e58:	strb	w9, [x8, #24]
  421e5c:	ldrb	w9, [x19, #440]
  421e60:	cbz	w9, 421e6c <feof@plt+0x1f16c>
  421e64:	ldr	x9, [x19, #424]
  421e68:	cbz	x9, 421e70 <feof@plt+0x1f170>
  421e6c:	mov	x20, xzr
  421e70:	str	x20, [x8, #16]
  421e74:	strb	w21, [x19, #18]
  421e78:	str	x8, [x23, #96]
  421e7c:	ldp	x20, x19, [sp, #48]
  421e80:	ldp	x22, x21, [sp, #32]
  421e84:	ldr	x23, [sp, #16]
  421e88:	ldp	x29, x30, [sp], #64
  421e8c:	ret
  421e90:	sub	sp, sp, #0x60
  421e94:	stp	x29, x30, [sp, #16]
  421e98:	stp	x24, x23, [sp, #48]
  421e9c:	stp	x22, x21, [sp, #64]
  421ea0:	stp	x20, x19, [sp, #80]
  421ea4:	ldr	x20, [x0, #40]
  421ea8:	mov	w10, #0x18                  	// #24
  421eac:	mov	w1, #0x1                   	// #1
  421eb0:	str	x25, [sp, #32]
  421eb4:	ldr	w8, [x20, #12]
  421eb8:	ldr	x9, [x20]
  421ebc:	add	x29, sp, #0x10
  421ec0:	mov	x19, x0
  421ec4:	sub	w8, w8, #0x1
  421ec8:	smaddl	x8, w8, w10, x9
  421ecc:	ldr	x21, [x8, #8]
  421ed0:	ldrb	w23, [x8, #5]
  421ed4:	bl	4328a0 <feof@plt+0x2fba0>
  421ed8:	mov	x0, x19
  421edc:	bl	432114 <feof@plt+0x2f414>
  421ee0:	ldrb	w8, [x0, #4]
  421ee4:	mov	x1, x0
  421ee8:	cmp	w8, #0x37
  421eec:	b.ne	421f30 <feof@plt+0x1f230>  // b.any
  421ef0:	ldr	w8, [x1, #8]
  421ef4:	cbz	w8, 421f68 <feof@plt+0x1f268>
  421ef8:	ldr	x9, [x1, #16]
  421efc:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  421f00:	mov	w22, wzr
  421f04:	add	x10, x10, #0x3c4
  421f08:	mov	w11, #0xa                   	// #10
  421f0c:	ldrb	w12, [x9]
  421f10:	ldrh	w13, [x10, x12, lsl #1]
  421f14:	tbz	w13, #2, 421f30 <feof@plt+0x1f230>
  421f18:	madd	w12, w22, w11, w12
  421f1c:	sub	x8, x8, #0x1
  421f20:	add	x9, x9, #0x1
  421f24:	sub	w22, w12, #0x30
  421f28:	cbnz	x8, 421f0c <feof@plt+0x1f20c>
  421f2c:	b	421f6c <feof@plt+0x1f26c>
  421f30:	mov	x0, x19
  421f34:	bl	42d084 <feof@plt+0x2a384>
  421f38:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  421f3c:	add	x2, x2, #0x1a4
  421f40:	mov	x3, x0
  421f44:	mov	x0, x19
  421f48:	ldp	x20, x19, [sp, #80]
  421f4c:	ldp	x22, x21, [sp, #64]
  421f50:	ldp	x24, x23, [sp, #48]
  421f54:	ldr	x25, [sp, #32]
  421f58:	ldp	x29, x30, [sp, #16]
  421f5c:	mov	w1, #0x3                   	// #3
  421f60:	add	sp, sp, #0x60
  421f64:	b	4223e4 <feof@plt+0x1f6e4>
  421f68:	mov	w22, wzr
  421f6c:	mov	x0, x19
  421f70:	bl	432114 <feof@plt+0x2f414>
  421f74:	ldrb	w8, [x0, #4]
  421f78:	cmp	w8, #0x16
  421f7c:	b.eq	422094 <feof@plt+0x1f394>  // b.none
  421f80:	mov	x1, x0
  421f84:	cmp	w8, #0x3e
  421f88:	b.ne	42209c <feof@plt+0x1f39c>  // b.any
  421f8c:	add	x1, x1, #0x8
  421f90:	mov	x3, sp
  421f94:	mov	w2, #0x1                   	// #1
  421f98:	mov	w4, #0x3e                  	// #62
  421f9c:	mov	x0, x19
  421fa0:	stp	xzr, xzr, [sp]
  421fa4:	bl	41c174 <feof@plt+0x19474>
  421fa8:	ldr	x8, [sp, #8]
  421fac:	tst	w0, #0x1
  421fb0:	mov	x0, x19
  421fb4:	csel	x21, x8, x21, ne  // ne = any
  421fb8:	bl	4298e8 <feof@plt+0x26be8>
  421fbc:	ldrb	w8, [x0, #4]
  421fc0:	cmp	w8, #0x16
  421fc4:	b.eq	4220dc <feof@plt+0x1f3dc>  // b.none
  421fc8:	mov	x1, x0
  421fcc:	cmp	w8, #0x37
  421fd0:	b.ne	4220b0 <feof@plt+0x1f3b0>  // b.any
  421fd4:	ldr	w8, [x1, #8]
  421fd8:	cmp	w8, #0x1
  421fdc:	b.ne	4220b0 <feof@plt+0x1f3b0>  // b.any
  421fe0:	ldr	x8, [x1, #16]
  421fe4:	ldrb	w8, [x8]
  421fe8:	cmp	w8, #0x34
  421fec:	b.eq	4220b0 <feof@plt+0x1f3b0>  // b.none
  421ff0:	sub	w9, w8, #0x31
  421ff4:	cmp	w9, #0x4
  421ff8:	b.cs	4220b0 <feof@plt+0x1f3b0>  // b.hs, b.nlast
  421ffc:	cmp	w8, #0x32
  422000:	b.eq	42223c <feof@plt+0x1f53c>  // b.none
  422004:	cmp	w8, #0x31
  422008:	b.ne	42228c <feof@plt+0x1f58c>  // b.any
  42200c:	mov	x0, x19
  422010:	mov	x1, x21
  422014:	bl	427964 <feof@plt+0x24c64>
  422018:	mov	x0, x19
  42201c:	bl	4298e8 <feof@plt+0x26be8>
  422020:	ldrb	w8, [x0, #4]
  422024:	cmp	w8, #0x16
  422028:	b.eq	422088 <feof@plt+0x1f388>  // b.none
  42202c:	mov	x1, x0
  422030:	cmp	w8, #0x37
  422034:	b.ne	422068 <feof@plt+0x1f368>  // b.any
  422038:	ldr	w8, [x1, #8]
  42203c:	cmp	w8, #0x1
  422040:	b.ne	422068 <feof@plt+0x1f368>  // b.any
  422044:	ldr	x8, [x1, #16]
  422048:	ldrb	w8, [x8]
  42204c:	sub	w9, w8, #0x32
  422050:	cmp	w9, #0x2
  422054:	b.hi	422068 <feof@plt+0x1f368>  // b.pmore
  422058:	cmp	w8, #0x34
  42205c:	b.eq	422068 <feof@plt+0x1f368>  // b.none
  422060:	cmp	w8, #0x32
  422064:	b.ne	422328 <feof@plt+0x1f628>  // b.any
  422068:	mov	x0, x19
  42206c:	bl	42d084 <feof@plt+0x2a384>
  422070:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422074:	mov	x3, x0
  422078:	add	x2, x2, #0x201
  42207c:	mov	w1, #0x3                   	// #3
  422080:	mov	x0, x19
  422084:	bl	4223e4 <feof@plt+0x1f6e4>
  422088:	mov	w24, wzr
  42208c:	mov	w23, wzr
  422090:	b	4220e4 <feof@plt+0x1f3e4>
  422094:	mov	w24, #0x3                   	// #3
  422098:	b	422138 <feof@plt+0x1f438>
  42209c:	mov	x0, x19
  4220a0:	bl	42d084 <feof@plt+0x2a384>
  4220a4:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4220a8:	add	x2, x2, #0x117
  4220ac:	b	421f40 <feof@plt+0x1f240>
  4220b0:	mov	x0, x19
  4220b4:	bl	42d084 <feof@plt+0x2a384>
  4220b8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4220bc:	mov	x3, x0
  4220c0:	add	x2, x2, #0x201
  4220c4:	mov	w1, #0x3                   	// #3
  4220c8:	mov	x0, x19
  4220cc:	mov	w24, #0x3                   	// #3
  4220d0:	bl	4223e4 <feof@plt+0x1f6e4>
  4220d4:	mov	w23, wzr
  4220d8:	b	4220e4 <feof@plt+0x1f3e4>
  4220dc:	mov	w23, wzr
  4220e0:	mov	w24, #0x3                   	// #3
  4220e4:	ldr	x8, [x19]
  4220e8:	strb	w23, [x8, #106]
  4220ec:	ldr	x8, [x19, #448]
  4220f0:	ldurb	w8, [x8, #-20]
  4220f4:	cmp	w8, #0x16
  4220f8:	b.eq	422138 <feof@plt+0x1f438>  // b.none
  4220fc:	mov	x0, x19
  422100:	bl	4298e8 <feof@plt+0x26be8>
  422104:	ldrb	w8, [x0, #4]
  422108:	cmp	w8, #0x16
  42210c:	b.eq	422138 <feof@plt+0x1f438>  // b.none
  422110:	ldr	x8, [x19, #144]
  422114:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422118:	add	x2, x2, #0x29
  42211c:	mov	x0, x19
  422120:	ldr	x3, [x8, #8]
  422124:	mov	w1, wzr
  422128:	bl	422644 <feof@plt+0x1f944>
  42212c:	b	422138 <feof@plt+0x1f438>
  422130:	mov	x0, x19
  422134:	bl	43200c <feof@plt+0x2f30c>
  422138:	ldr	x8, [x19, #136]
  42213c:	ldr	x8, [x8, #8]
  422140:	cbnz	x8, 422130 <feof@plt+0x1f430>
  422144:	ldr	x8, [x19, #448]
  422148:	ldurb	w8, [x8, #-20]
  42214c:	cmp	w8, #0x16
  422150:	b.eq	422168 <feof@plt+0x1f468>  // b.none
  422154:	mov	x0, x19
  422158:	bl	4298e8 <feof@plt+0x26be8>
  42215c:	ldrb	w8, [x0, #4]
  422160:	cmp	w8, #0x16
  422164:	b.ne	422154 <feof@plt+0x1f454>  // b.any
  422168:	cmp	w24, #0x1
  42216c:	b.ne	4221c8 <feof@plt+0x1f4c8>  // b.any
  422170:	ldr	w8, [x20, #12]
  422174:	ldr	x9, [x20]
  422178:	mov	w10, #0x18                  	// #24
  42217c:	mov	x0, x20
  422180:	sub	w8, w8, #0x1
  422184:	smaddl	x25, w8, w10, x9
  422188:	mov	x1, x25
  42218c:	bl	42e4f0 <feof@plt+0x2b7f0>
  422190:	ldr	w8, [x25, #20]
  422194:	cbz	w8, 4221ac <feof@plt+0x1f4ac>
  422198:	cbz	x0, 4221c8 <feof@plt+0x1f4c8>
  42219c:	ldr	x0, [x0, #8]
  4221a0:	mov	x1, x21
  4221a4:	bl	453a30 <feof@plt+0x50d30>
  4221a8:	cbz	w0, 4221c8 <feof@plt+0x1f4c8>
  4221ac:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4221b0:	add	x2, x2, #0x1cb
  4221b4:	mov	x0, x19
  4221b8:	mov	w1, wzr
  4221bc:	mov	x3, x21
  4221c0:	bl	422514 <feof@plt+0x1f814>
  4221c4:	b	422220 <feof@plt+0x1f520>
  4221c8:	ldr	x0, [x19, #40]
  4221cc:	mov	w1, w24
  4221d0:	mov	w2, w23
  4221d4:	mov	x3, x21
  4221d8:	ldr	w8, [x0, #56]
  4221dc:	mov	w4, w22
  4221e0:	sub	w8, w8, #0x1
  4221e4:	str	w8, [x0, #56]
  4221e8:	bl	42e6d0 <feof@plt+0x2b9d0>
  4221ec:	mov	x21, x0
  4221f0:	cbz	x0, 422204 <feof@plt+0x1f504>
  4221f4:	ldr	x0, [x19, #40]
  4221f8:	ldr	w1, [x21, #16]
  4221fc:	mov	w2, #0x7f                  	// #127
  422200:	bl	42ebc8 <feof@plt+0x2bec8>
  422204:	ldr	x8, [x19, #912]
  422208:	cbz	x8, 422218 <feof@plt+0x1f518>
  42220c:	mov	x0, x19
  422210:	mov	x1, x21
  422214:	blr	x8
  422218:	mov	w8, #0x1                   	// #1
  42221c:	strb	w8, [x20, #116]
  422220:	ldp	x20, x19, [sp, #80]
  422224:	ldp	x22, x21, [sp, #64]
  422228:	ldp	x24, x23, [sp, #48]
  42222c:	ldr	x25, [sp, #32]
  422230:	ldp	x29, x30, [sp, #16]
  422234:	add	sp, sp, #0x60
  422238:	ret
  42223c:	mov	x0, x19
  422240:	bl	4298e8 <feof@plt+0x26be8>
  422244:	ldrb	w8, [x0, #4]
  422248:	cmp	w8, #0x16
  42224c:	b.eq	42231c <feof@plt+0x1f61c>  // b.none
  422250:	mov	x1, x0
  422254:	cmp	w8, #0x37
  422258:	b.ne	4222fc <feof@plt+0x1f5fc>  // b.any
  42225c:	ldr	w8, [x1, #8]
  422260:	cmp	w8, #0x1
  422264:	b.ne	4222fc <feof@plt+0x1f5fc>  // b.any
  422268:	ldr	x8, [x1, #16]
  42226c:	ldrb	w8, [x8]
  422270:	cmp	w8, #0x34
  422274:	b.eq	4222fc <feof@plt+0x1f5fc>  // b.none
  422278:	sub	w8, w8, #0x33
  42227c:	cmp	w8, #0x2
  422280:	b.cs	4222fc <feof@plt+0x1f5fc>  // b.hs, b.nlast
  422284:	mov	w24, #0x1                   	// #1
  422288:	b	422290 <feof@plt+0x1f590>
  42228c:	mov	w24, #0x3                   	// #3
  422290:	mov	x0, x19
  422294:	bl	4298e8 <feof@plt+0x26be8>
  422298:	ldrb	w8, [x0, #4]
  42229c:	cmp	w8, #0x16
  4222a0:	b.eq	4222f4 <feof@plt+0x1f5f4>  // b.none
  4222a4:	mov	x1, x0
  4222a8:	cmp	w8, #0x37
  4222ac:	b.ne	4222d4 <feof@plt+0x1f5d4>  // b.any
  4222b0:	ldr	w8, [x1, #8]
  4222b4:	cmp	w8, #0x1
  4222b8:	b.ne	4222d4 <feof@plt+0x1f5d4>  // b.any
  4222bc:	ldr	x8, [x1, #16]
  4222c0:	ldrb	w8, [x8]
  4222c4:	cmp	w8, #0x34
  4222c8:	b.ne	4222d4 <feof@plt+0x1f5d4>  // b.any
  4222cc:	mov	w23, #0x2                   	// #2
  4222d0:	b	4220e4 <feof@plt+0x1f3e4>
  4222d4:	mov	x0, x19
  4222d8:	bl	42d084 <feof@plt+0x2a384>
  4222dc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4222e0:	mov	x3, x0
  4222e4:	add	x2, x2, #0x201
  4222e8:	mov	w1, #0x3                   	// #3
  4222ec:	mov	x0, x19
  4222f0:	bl	4223e4 <feof@plt+0x1f6e4>
  4222f4:	mov	w23, #0x1                   	// #1
  4222f8:	b	4220e4 <feof@plt+0x1f3e4>
  4222fc:	mov	x0, x19
  422300:	bl	42d084 <feof@plt+0x2a384>
  422304:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422308:	mov	x3, x0
  42230c:	add	x2, x2, #0x201
  422310:	mov	w1, #0x3                   	// #3
  422314:	mov	x0, x19
  422318:	bl	4223e4 <feof@plt+0x1f6e4>
  42231c:	mov	w23, wzr
  422320:	mov	w24, #0x1                   	// #1
  422324:	b	4220e4 <feof@plt+0x1f3e4>
  422328:	mov	w24, wzr
  42232c:	b	422290 <feof@plt+0x1f590>
  422330:	sub	sp, sp, #0x30
  422334:	stp	x29, x30, [sp, #16]
  422338:	stp	x20, x19, [sp, #32]
  42233c:	add	x29, sp, #0x10
  422340:	mov	w20, w1
  422344:	mov	x19, x0
  422348:	bl	4298e8 <feof@plt+0x26be8>
  42234c:	ldrb	w8, [x0, #4]
  422350:	cmp	w8, #0x3e
  422354:	b.ne	4223a8 <feof@plt+0x1f6a8>  // b.any
  422358:	add	x1, x0, #0x8
  42235c:	mov	x3, sp
  422360:	mov	w2, #0x1                   	// #1
  422364:	mov	w4, #0x3e                  	// #62
  422368:	mov	x0, x19
  42236c:	bl	41c174 <feof@plt+0x19474>
  422370:	tbz	w0, #0, 4223a8 <feof@plt+0x1f6a8>
  422374:	ldr	w8, [sp]
  422378:	cbz	w8, 4223a8 <feof@plt+0x1f6a8>
  42237c:	ldr	x3, [sp, #8]
  422380:	tst	w20, #0x1
  422384:	mov	w8, #0x3                   	// #3
  422388:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42238c:	csel	w1, w8, wzr, ne  // ne = any
  422390:	add	x2, x2, #0x88c
  422394:	mov	x0, x19
  422398:	bl	4223e4 <feof@plt+0x1f6e4>
  42239c:	ldr	x0, [sp, #8]
  4223a0:	bl	402770 <free@plt>
  4223a4:	b	4223d4 <feof@plt+0x1f6d4>
  4223a8:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4223ac:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  4223b0:	add	x8, x8, #0x1b0
  4223b4:	add	x9, x9, #0x12b
  4223b8:	tst	w20, #0x1
  4223bc:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4223c0:	csel	x3, x9, x8, ne  // ne = any
  4223c4:	add	x2, x2, #0x531
  4223c8:	mov	w1, #0x3                   	// #3
  4223cc:	mov	x0, x19
  4223d0:	bl	4223e4 <feof@plt+0x1f6e4>
  4223d4:	ldp	x20, x19, [sp, #32]
  4223d8:	ldp	x29, x30, [sp, #16]
  4223dc:	add	sp, sp, #0x30
  4223e0:	ret
  4223e4:	sub	sp, sp, #0x1b0
  4223e8:	stp	x29, x30, [sp, #368]
  4223ec:	add	x29, sp, #0x170
  4223f0:	mov	x8, #0xffffffffffffffd8    	// #-40
  4223f4:	mov	x9, sp
  4223f8:	add	x10, sp, #0x80
  4223fc:	movk	x8, #0xff80, lsl #32
  422400:	add	x11, x29, #0x40
  422404:	add	x9, x9, #0x80
  422408:	add	x10, x10, #0x28
  42240c:	stp	x22, x21, [sp, #400]
  422410:	stp	x20, x19, [sp, #416]
  422414:	stp	x3, x4, [sp, #128]
  422418:	stp	x5, x6, [sp, #144]
  42241c:	stp	q1, q2, [sp, #16]
  422420:	stp	q3, q4, [sp, #48]
  422424:	str	q0, [sp]
  422428:	stp	q5, q6, [sp, #80]
  42242c:	str	q7, [sp, #112]
  422430:	stp	x9, x8, [sp, #184]
  422434:	str	x10, [sp, #176]
  422438:	stp	x7, x11, [sp, #160]
  42243c:	ldrb	w8, [x0, #1160]
  422440:	mov	x20, x2
  422444:	mov	x19, x0
  422448:	mov	w21, w1
  42244c:	str	x28, [sp, #384]
  422450:	cbz	w8, 422464 <feof@plt+0x1f764>
  422454:	ldrb	w8, [x19, #16]
  422458:	cbz	w8, 422480 <feof@plt+0x1f780>
  42245c:	ldr	w2, [x19, #48]
  422460:	b	422490 <feof@plt+0x1f790>
  422464:	ldr	x9, [x19, #488]
  422468:	ldr	x8, [x19, #448]
  42246c:	ldr	x9, [x9, #16]
  422470:	cmp	x8, x9
  422474:	b.eq	42248c <feof@plt+0x1f78c>  // b.none
  422478:	ldur	w2, [x8, #-24]
  42247c:	b	422490 <feof@plt+0x1f790>
  422480:	ldr	x8, [x19, #40]
  422484:	ldr	w2, [x8, #60]
  422488:	b	422490 <feof@plt+0x1f790>
  42248c:	mov	w2, wzr
  422490:	ldr	x1, [x19, #40]
  422494:	sub	x0, x29, #0xa8
  422498:	mov	x3, xzr
  42249c:	bl	430594 <feof@plt+0x2d894>
  4224a0:	ldr	x22, [x19, #1000]
  4224a4:	cbz	x22, 4224fc <feof@plt+0x1f7fc>
  4224a8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4224ac:	add	x0, x0, #0x88f
  4224b0:	mov	x1, x20
  4224b4:	bl	4028f0 <dgettext@plt>
  4224b8:	mov	x4, x0
  4224bc:	sub	x3, x29, #0xa8
  4224c0:	add	x5, sp, #0xa8
  4224c4:	mov	x0, x19
  4224c8:	mov	w1, w21
  4224cc:	mov	w2, wzr
  4224d0:	blr	x22
  4224d4:	mov	w19, w0
  4224d8:	sub	x0, x29, #0xa8
  4224dc:	bl	430674 <feof@plt+0x2d974>
  4224e0:	and	w0, w19, #0x1
  4224e4:	ldp	x20, x19, [sp, #416]
  4224e8:	ldp	x22, x21, [sp, #400]
  4224ec:	ldr	x28, [sp, #384]
  4224f0:	ldp	x29, x30, [sp, #368]
  4224f4:	add	sp, sp, #0x1b0
  4224f8:	ret
  4224fc:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422500:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422504:	add	x0, x0, #0x89d
  422508:	add	x2, x2, #0x8cc
  42250c:	mov	w1, #0x29                  	// #41
  422510:	bl	408b70 <feof@plt+0x5e70>
  422514:	sub	sp, sp, #0x1b0
  422518:	stp	x29, x30, [sp, #368]
  42251c:	add	x29, sp, #0x170
  422520:	mov	x8, #0xffffffffffffffd8    	// #-40
  422524:	mov	x9, sp
  422528:	add	x10, sp, #0x80
  42252c:	movk	x8, #0xff80, lsl #32
  422530:	add	x11, x29, #0x40
  422534:	add	x9, x9, #0x80
  422538:	add	x10, x10, #0x28
  42253c:	stp	x22, x21, [sp, #400]
  422540:	stp	x20, x19, [sp, #416]
  422544:	stp	x3, x4, [sp, #128]
  422548:	stp	x5, x6, [sp, #144]
  42254c:	stp	q1, q2, [sp, #16]
  422550:	stp	q3, q4, [sp, #48]
  422554:	str	q0, [sp]
  422558:	stp	q5, q6, [sp, #80]
  42255c:	str	q7, [sp, #112]
  422560:	stp	x9, x8, [sp, #184]
  422564:	str	x10, [sp, #176]
  422568:	stp	x7, x11, [sp, #160]
  42256c:	ldrb	w8, [x0, #1160]
  422570:	mov	x20, x2
  422574:	mov	x19, x0
  422578:	mov	w21, w1
  42257c:	str	x28, [sp, #384]
  422580:	cbz	w8, 422594 <feof@plt+0x1f894>
  422584:	ldrb	w8, [x19, #16]
  422588:	cbz	w8, 4225b0 <feof@plt+0x1f8b0>
  42258c:	ldr	w2, [x19, #48]
  422590:	b	4225c0 <feof@plt+0x1f8c0>
  422594:	ldr	x9, [x19, #488]
  422598:	ldr	x8, [x19, #448]
  42259c:	ldr	x9, [x9, #16]
  4225a0:	cmp	x8, x9
  4225a4:	b.eq	4225bc <feof@plt+0x1f8bc>  // b.none
  4225a8:	ldur	w2, [x8, #-24]
  4225ac:	b	4225c0 <feof@plt+0x1f8c0>
  4225b0:	ldr	x8, [x19, #40]
  4225b4:	ldr	w2, [x8, #60]
  4225b8:	b	4225c0 <feof@plt+0x1f8c0>
  4225bc:	mov	w2, wzr
  4225c0:	ldr	x1, [x19, #40]
  4225c4:	sub	x0, x29, #0xa8
  4225c8:	mov	x3, xzr
  4225cc:	bl	430594 <feof@plt+0x2d894>
  4225d0:	ldr	x22, [x19, #1000]
  4225d4:	cbz	x22, 42262c <feof@plt+0x1f92c>
  4225d8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4225dc:	add	x0, x0, #0x88f
  4225e0:	mov	x1, x20
  4225e4:	bl	4028f0 <dgettext@plt>
  4225e8:	mov	x4, x0
  4225ec:	sub	x3, x29, #0xa8
  4225f0:	add	x5, sp, #0xa8
  4225f4:	mov	x0, x19
  4225f8:	mov	w1, wzr
  4225fc:	mov	w2, w21
  422600:	blr	x22
  422604:	mov	w19, w0
  422608:	sub	x0, x29, #0xa8
  42260c:	bl	430674 <feof@plt+0x2d974>
  422610:	and	w0, w19, #0x1
  422614:	ldp	x20, x19, [sp, #416]
  422618:	ldp	x22, x21, [sp, #400]
  42261c:	ldr	x28, [sp, #384]
  422620:	ldp	x29, x30, [sp, #368]
  422624:	add	sp, sp, #0x1b0
  422628:	ret
  42262c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422630:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422634:	add	x0, x0, #0x89d
  422638:	add	x2, x2, #0x8cc
  42263c:	mov	w1, #0x29                  	// #41
  422640:	bl	408b70 <feof@plt+0x5e70>
  422644:	sub	sp, sp, #0x1b0
  422648:	stp	x29, x30, [sp, #368]
  42264c:	add	x29, sp, #0x170
  422650:	mov	x8, #0xffffffffffffffd8    	// #-40
  422654:	mov	x9, sp
  422658:	add	x10, sp, #0x80
  42265c:	movk	x8, #0xff80, lsl #32
  422660:	add	x11, x29, #0x40
  422664:	add	x9, x9, #0x80
  422668:	add	x10, x10, #0x28
  42266c:	stp	x22, x21, [sp, #400]
  422670:	stp	x20, x19, [sp, #416]
  422674:	stp	x3, x4, [sp, #128]
  422678:	stp	x5, x6, [sp, #144]
  42267c:	stp	q1, q2, [sp, #16]
  422680:	stp	q3, q4, [sp, #48]
  422684:	str	q0, [sp]
  422688:	stp	q5, q6, [sp, #80]
  42268c:	str	q7, [sp, #112]
  422690:	stp	x9, x8, [sp, #184]
  422694:	str	x10, [sp, #176]
  422698:	stp	x7, x11, [sp, #160]
  42269c:	ldrb	w8, [x0, #1160]
  4226a0:	mov	x20, x2
  4226a4:	mov	x19, x0
  4226a8:	mov	w21, w1
  4226ac:	str	x28, [sp, #384]
  4226b0:	cbz	w8, 4226c4 <feof@plt+0x1f9c4>
  4226b4:	ldrb	w8, [x19, #16]
  4226b8:	cbz	w8, 4226e0 <feof@plt+0x1f9e0>
  4226bc:	ldr	w2, [x19, #48]
  4226c0:	b	4226f0 <feof@plt+0x1f9f0>
  4226c4:	ldr	x9, [x19, #488]
  4226c8:	ldr	x8, [x19, #448]
  4226cc:	ldr	x9, [x9, #16]
  4226d0:	cmp	x8, x9
  4226d4:	b.eq	4226ec <feof@plt+0x1f9ec>  // b.none
  4226d8:	ldur	w2, [x8, #-24]
  4226dc:	b	4226f0 <feof@plt+0x1f9f0>
  4226e0:	ldr	x8, [x19, #40]
  4226e4:	ldr	w2, [x8, #60]
  4226e8:	b	4226f0 <feof@plt+0x1f9f0>
  4226ec:	mov	w2, wzr
  4226f0:	ldr	x1, [x19, #40]
  4226f4:	sub	x0, x29, #0xa8
  4226f8:	mov	x3, xzr
  4226fc:	bl	430594 <feof@plt+0x2d894>
  422700:	ldr	x22, [x19, #1000]
  422704:	cbz	x22, 42275c <feof@plt+0x1fa5c>
  422708:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42270c:	add	x0, x0, #0x88f
  422710:	mov	x1, x20
  422714:	bl	4028f0 <dgettext@plt>
  422718:	mov	x4, x0
  42271c:	sub	x3, x29, #0xa8
  422720:	add	x5, sp, #0xa8
  422724:	mov	w1, #0x2                   	// #2
  422728:	mov	x0, x19
  42272c:	mov	w2, w21
  422730:	blr	x22
  422734:	mov	w19, w0
  422738:	sub	x0, x29, #0xa8
  42273c:	bl	430674 <feof@plt+0x2d974>
  422740:	and	w0, w19, #0x1
  422744:	ldp	x20, x19, [sp, #416]
  422748:	ldp	x22, x21, [sp, #400]
  42274c:	ldr	x28, [sp, #384]
  422750:	ldp	x29, x30, [sp, #368]
  422754:	add	sp, sp, #0x1b0
  422758:	ret
  42275c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422760:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422764:	add	x0, x0, #0x89d
  422768:	add	x2, x2, #0x8cc
  42276c:	mov	w1, #0x29                  	// #41
  422770:	bl	408b70 <feof@plt+0x5e70>
  422774:	sub	sp, sp, #0x1b0
  422778:	stp	x29, x30, [sp, #368]
  42277c:	add	x29, sp, #0x170
  422780:	mov	x8, #0xffffffffffffffd8    	// #-40
  422784:	mov	x9, sp
  422788:	add	x10, sp, #0x80
  42278c:	movk	x8, #0xff80, lsl #32
  422790:	add	x11, x29, #0x40
  422794:	add	x9, x9, #0x80
  422798:	add	x10, x10, #0x28
  42279c:	stp	x22, x21, [sp, #400]
  4227a0:	stp	x20, x19, [sp, #416]
  4227a4:	stp	x3, x4, [sp, #128]
  4227a8:	stp	x5, x6, [sp, #144]
  4227ac:	stp	q1, q2, [sp, #16]
  4227b0:	stp	q3, q4, [sp, #48]
  4227b4:	str	q0, [sp]
  4227b8:	stp	q5, q6, [sp, #80]
  4227bc:	str	q7, [sp, #112]
  4227c0:	stp	x9, x8, [sp, #184]
  4227c4:	str	x10, [sp, #176]
  4227c8:	stp	x7, x11, [sp, #160]
  4227cc:	ldrb	w8, [x0, #1160]
  4227d0:	mov	x20, x2
  4227d4:	mov	x19, x0
  4227d8:	mov	w21, w1
  4227dc:	str	x28, [sp, #384]
  4227e0:	cbz	w8, 4227f4 <feof@plt+0x1faf4>
  4227e4:	ldrb	w8, [x19, #16]
  4227e8:	cbz	w8, 422810 <feof@plt+0x1fb10>
  4227ec:	ldr	w2, [x19, #48]
  4227f0:	b	422820 <feof@plt+0x1fb20>
  4227f4:	ldr	x9, [x19, #488]
  4227f8:	ldr	x8, [x19, #448]
  4227fc:	ldr	x9, [x9, #16]
  422800:	cmp	x8, x9
  422804:	b.eq	42281c <feof@plt+0x1fb1c>  // b.none
  422808:	ldur	w2, [x8, #-24]
  42280c:	b	422820 <feof@plt+0x1fb20>
  422810:	ldr	x8, [x19, #40]
  422814:	ldr	w2, [x8, #60]
  422818:	b	422820 <feof@plt+0x1fb20>
  42281c:	mov	w2, wzr
  422820:	ldr	x1, [x19, #40]
  422824:	sub	x0, x29, #0xa8
  422828:	mov	x3, xzr
  42282c:	bl	430594 <feof@plt+0x2d894>
  422830:	ldr	x22, [x19, #1000]
  422834:	cbz	x22, 42288c <feof@plt+0x1fb8c>
  422838:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42283c:	add	x0, x0, #0x88f
  422840:	mov	x1, x20
  422844:	bl	4028f0 <dgettext@plt>
  422848:	mov	x4, x0
  42284c:	sub	x3, x29, #0xa8
  422850:	add	x5, sp, #0xa8
  422854:	mov	w1, #0x1                   	// #1
  422858:	mov	x0, x19
  42285c:	mov	w2, w21
  422860:	blr	x22
  422864:	mov	w19, w0
  422868:	sub	x0, x29, #0xa8
  42286c:	bl	430674 <feof@plt+0x2d974>
  422870:	and	w0, w19, #0x1
  422874:	ldp	x20, x19, [sp, #416]
  422878:	ldp	x22, x21, [sp, #400]
  42287c:	ldr	x28, [sp, #384]
  422880:	ldp	x29, x30, [sp, #368]
  422884:	add	sp, sp, #0x1b0
  422888:	ret
  42288c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422890:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422894:	add	x0, x0, #0x89d
  422898:	add	x2, x2, #0x8cc
  42289c:	mov	w1, #0x29                  	// #41
  4228a0:	bl	408b70 <feof@plt+0x5e70>
  4228a4:	sub	sp, sp, #0x1a0
  4228a8:	stp	x29, x30, [sp, #352]
  4228ac:	add	x29, sp, #0x160
  4228b0:	mov	x8, #0xffffffffffffffe8    	// #-24
  4228b4:	mov	x9, sp
  4228b8:	add	x10, sp, #0x80
  4228bc:	movk	x8, #0xff80, lsl #32
  4228c0:	add	x11, x29, #0x40
  4228c4:	add	x9, x9, #0x80
  4228c8:	add	x10, x10, #0x18
  4228cc:	stp	x22, x21, [sp, #384]
  4228d0:	stp	x20, x19, [sp, #400]
  4228d4:	stp	x5, x6, [sp, #128]
  4228d8:	stp	q0, q1, [sp]
  4228dc:	stp	q2, q3, [sp, #32]
  4228e0:	stp	q4, q5, [sp, #64]
  4228e4:	stp	q6, q7, [sp, #96]
  4228e8:	stp	x9, x8, [sp, #168]
  4228ec:	str	x10, [sp, #160]
  4228f0:	stp	x7, x11, [sp, #144]
  4228f4:	ldr	x8, [x0, #1000]
  4228f8:	str	x28, [sp, #368]
  4228fc:	cbz	x8, 422988 <feof@plt+0x1fc88>
  422900:	mov	w22, w1
  422904:	ldr	x1, [x0, #40]
  422908:	mov	w21, w3
  42290c:	mov	x19, x0
  422910:	sub	x0, x29, #0xa8
  422914:	mov	x3, xzr
  422918:	mov	x20, x4
  42291c:	bl	430594 <feof@plt+0x2d894>
  422920:	cbz	w21, 422930 <feof@plt+0x1fc30>
  422924:	sub	x0, x29, #0xa8
  422928:	mov	w1, w21
  42292c:	bl	430820 <feof@plt+0x2db20>
  422930:	ldr	x21, [x19, #1000]
  422934:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422938:	add	x0, x0, #0x88f
  42293c:	mov	x1, x20
  422940:	bl	4028f0 <dgettext@plt>
  422944:	mov	x4, x0
  422948:	sub	x3, x29, #0xa8
  42294c:	add	x5, sp, #0x98
  422950:	mov	x0, x19
  422954:	mov	w1, w22
  422958:	mov	w2, wzr
  42295c:	blr	x21
  422960:	mov	w19, w0
  422964:	sub	x0, x29, #0xa8
  422968:	bl	430674 <feof@plt+0x2d974>
  42296c:	and	w0, w19, #0x1
  422970:	ldp	x20, x19, [sp, #400]
  422974:	ldp	x22, x21, [sp, #384]
  422978:	ldr	x28, [sp, #368]
  42297c:	ldp	x29, x30, [sp, #352]
  422980:	add	sp, sp, #0x1a0
  422984:	ret
  422988:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42298c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422990:	add	x0, x0, #0x89d
  422994:	add	x2, x2, #0x8b3
  422998:	mov	w1, #0x9f                  	// #159
  42299c:	bl	408b70 <feof@plt+0x5e70>
  4229a0:	sub	sp, sp, #0x1a0
  4229a4:	stp	x29, x30, [sp, #352]
  4229a8:	add	x29, sp, #0x160
  4229ac:	mov	x8, #0xffffffffffffffe8    	// #-24
  4229b0:	mov	x9, sp
  4229b4:	add	x10, sp, #0x80
  4229b8:	movk	x8, #0xff80, lsl #32
  4229bc:	add	x11, x29, #0x40
  4229c0:	add	x9, x9, #0x80
  4229c4:	add	x10, x10, #0x18
  4229c8:	stp	x22, x21, [sp, #384]
  4229cc:	stp	x20, x19, [sp, #400]
  4229d0:	stp	x5, x6, [sp, #128]
  4229d4:	stp	q0, q1, [sp]
  4229d8:	stp	q2, q3, [sp, #32]
  4229dc:	stp	q4, q5, [sp, #64]
  4229e0:	stp	q6, q7, [sp, #96]
  4229e4:	stp	x9, x8, [sp, #168]
  4229e8:	str	x10, [sp, #160]
  4229ec:	stp	x7, x11, [sp, #144]
  4229f0:	ldr	x8, [x0, #1000]
  4229f4:	str	x28, [sp, #368]
  4229f8:	cbz	x8, 422a84 <feof@plt+0x1fd84>
  4229fc:	mov	w22, w1
  422a00:	ldr	x1, [x0, #40]
  422a04:	mov	w21, w3
  422a08:	mov	x19, x0
  422a0c:	sub	x0, x29, #0xa8
  422a10:	mov	x3, xzr
  422a14:	mov	x20, x4
  422a18:	bl	430594 <feof@plt+0x2d894>
  422a1c:	cbz	w21, 422a2c <feof@plt+0x1fd2c>
  422a20:	sub	x0, x29, #0xa8
  422a24:	mov	w1, w21
  422a28:	bl	430820 <feof@plt+0x2db20>
  422a2c:	ldr	x21, [x19, #1000]
  422a30:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422a34:	add	x0, x0, #0x88f
  422a38:	mov	x1, x20
  422a3c:	bl	4028f0 <dgettext@plt>
  422a40:	mov	x4, x0
  422a44:	sub	x3, x29, #0xa8
  422a48:	add	x5, sp, #0x98
  422a4c:	mov	x0, x19
  422a50:	mov	w1, wzr
  422a54:	mov	w2, w22
  422a58:	blr	x21
  422a5c:	mov	w19, w0
  422a60:	sub	x0, x29, #0xa8
  422a64:	bl	430674 <feof@plt+0x2d974>
  422a68:	and	w0, w19, #0x1
  422a6c:	ldp	x20, x19, [sp, #400]
  422a70:	ldp	x22, x21, [sp, #384]
  422a74:	ldr	x28, [sp, #368]
  422a78:	ldp	x29, x30, [sp, #352]
  422a7c:	add	sp, sp, #0x1a0
  422a80:	ret
  422a84:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422a88:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422a8c:	add	x0, x0, #0x89d
  422a90:	add	x2, x2, #0x8b3
  422a94:	mov	w1, #0x9f                  	// #159
  422a98:	bl	408b70 <feof@plt+0x5e70>
  422a9c:	sub	sp, sp, #0x1a0
  422aa0:	stp	x29, x30, [sp, #352]
  422aa4:	add	x29, sp, #0x160
  422aa8:	mov	x8, #0xffffffffffffffe8    	// #-24
  422aac:	mov	x9, sp
  422ab0:	add	x10, sp, #0x80
  422ab4:	movk	x8, #0xff80, lsl #32
  422ab8:	add	x11, x29, #0x40
  422abc:	add	x9, x9, #0x80
  422ac0:	add	x10, x10, #0x18
  422ac4:	stp	x22, x21, [sp, #384]
  422ac8:	stp	x20, x19, [sp, #400]
  422acc:	stp	x5, x6, [sp, #128]
  422ad0:	stp	q0, q1, [sp]
  422ad4:	stp	q2, q3, [sp, #32]
  422ad8:	stp	q4, q5, [sp, #64]
  422adc:	stp	q6, q7, [sp, #96]
  422ae0:	stp	x9, x8, [sp, #168]
  422ae4:	str	x10, [sp, #160]
  422ae8:	stp	x7, x11, [sp, #144]
  422aec:	ldr	x8, [x0, #1000]
  422af0:	str	x28, [sp, #368]
  422af4:	cbz	x8, 422b80 <feof@plt+0x1fe80>
  422af8:	mov	w22, w1
  422afc:	ldr	x1, [x0, #40]
  422b00:	mov	w21, w3
  422b04:	mov	x19, x0
  422b08:	sub	x0, x29, #0xa8
  422b0c:	mov	x3, xzr
  422b10:	mov	x20, x4
  422b14:	bl	430594 <feof@plt+0x2d894>
  422b18:	cbz	w21, 422b28 <feof@plt+0x1fe28>
  422b1c:	sub	x0, x29, #0xa8
  422b20:	mov	w1, w21
  422b24:	bl	430820 <feof@plt+0x2db20>
  422b28:	ldr	x21, [x19, #1000]
  422b2c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422b30:	add	x0, x0, #0x88f
  422b34:	mov	x1, x20
  422b38:	bl	4028f0 <dgettext@plt>
  422b3c:	mov	x4, x0
  422b40:	sub	x3, x29, #0xa8
  422b44:	add	x5, sp, #0x98
  422b48:	mov	w1, #0x2                   	// #2
  422b4c:	mov	x0, x19
  422b50:	mov	w2, w22
  422b54:	blr	x21
  422b58:	mov	w19, w0
  422b5c:	sub	x0, x29, #0xa8
  422b60:	bl	430674 <feof@plt+0x2d974>
  422b64:	and	w0, w19, #0x1
  422b68:	ldp	x20, x19, [sp, #400]
  422b6c:	ldp	x22, x21, [sp, #384]
  422b70:	ldr	x28, [sp, #368]
  422b74:	ldp	x29, x30, [sp, #352]
  422b78:	add	sp, sp, #0x1a0
  422b7c:	ret
  422b80:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422b84:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422b88:	add	x0, x0, #0x89d
  422b8c:	add	x2, x2, #0x8b3
  422b90:	mov	w1, #0x9f                  	// #159
  422b94:	bl	408b70 <feof@plt+0x5e70>
  422b98:	sub	sp, sp, #0x1a0
  422b9c:	stp	x29, x30, [sp, #352]
  422ba0:	add	x29, sp, #0x160
  422ba4:	mov	x8, #0xffffffffffffffe8    	// #-24
  422ba8:	mov	x9, sp
  422bac:	add	x10, sp, #0x80
  422bb0:	movk	x8, #0xff80, lsl #32
  422bb4:	add	x11, x29, #0x40
  422bb8:	add	x9, x9, #0x80
  422bbc:	add	x10, x10, #0x18
  422bc0:	stp	x22, x21, [sp, #384]
  422bc4:	stp	x20, x19, [sp, #400]
  422bc8:	stp	x5, x6, [sp, #128]
  422bcc:	stp	q0, q1, [sp]
  422bd0:	stp	q2, q3, [sp, #32]
  422bd4:	stp	q4, q5, [sp, #64]
  422bd8:	stp	q6, q7, [sp, #96]
  422bdc:	stp	x9, x8, [sp, #168]
  422be0:	str	x10, [sp, #160]
  422be4:	stp	x7, x11, [sp, #144]
  422be8:	ldr	x8, [x0, #1000]
  422bec:	str	x28, [sp, #368]
  422bf0:	cbz	x8, 422c7c <feof@plt+0x1ff7c>
  422bf4:	mov	w22, w1
  422bf8:	ldr	x1, [x0, #40]
  422bfc:	mov	w21, w3
  422c00:	mov	x19, x0
  422c04:	sub	x0, x29, #0xa8
  422c08:	mov	x3, xzr
  422c0c:	mov	x20, x4
  422c10:	bl	430594 <feof@plt+0x2d894>
  422c14:	cbz	w21, 422c24 <feof@plt+0x1ff24>
  422c18:	sub	x0, x29, #0xa8
  422c1c:	mov	w1, w21
  422c20:	bl	430820 <feof@plt+0x2db20>
  422c24:	ldr	x21, [x19, #1000]
  422c28:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422c2c:	add	x0, x0, #0x88f
  422c30:	mov	x1, x20
  422c34:	bl	4028f0 <dgettext@plt>
  422c38:	mov	x4, x0
  422c3c:	sub	x3, x29, #0xa8
  422c40:	add	x5, sp, #0x98
  422c44:	mov	w1, #0x1                   	// #1
  422c48:	mov	x0, x19
  422c4c:	mov	w2, w22
  422c50:	blr	x21
  422c54:	mov	w19, w0
  422c58:	sub	x0, x29, #0xa8
  422c5c:	bl	430674 <feof@plt+0x2d974>
  422c60:	and	w0, w19, #0x1
  422c64:	ldp	x20, x19, [sp, #400]
  422c68:	ldp	x22, x21, [sp, #384]
  422c6c:	ldr	x28, [sp, #368]
  422c70:	ldp	x29, x30, [sp, #352]
  422c74:	add	sp, sp, #0x1a0
  422c78:	ret
  422c7c:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422c80:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422c84:	add	x0, x0, #0x89d
  422c88:	add	x2, x2, #0x8b3
  422c8c:	mov	w1, #0x9f                  	// #159
  422c90:	bl	408b70 <feof@plt+0x5e70>
  422c94:	sub	sp, sp, #0x1b0
  422c98:	stp	x29, x30, [sp, #368]
  422c9c:	add	x29, sp, #0x170
  422ca0:	mov	x8, #0xffffffffffffffe0    	// #-32
  422ca4:	mov	x9, sp
  422ca8:	add	x10, sp, #0x88
  422cac:	movk	x8, #0xff80, lsl #32
  422cb0:	add	x11, x29, #0x40
  422cb4:	add	x9, x9, #0x80
  422cb8:	add	x10, x10, #0x20
  422cbc:	stp	x22, x21, [sp, #400]
  422cc0:	stp	x20, x19, [sp, #416]
  422cc4:	stp	x4, x5, [sp, #136]
  422cc8:	stp	x6, x7, [sp, #152]
  422ccc:	stp	q0, q1, [sp]
  422cd0:	stp	q2, q3, [sp, #32]
  422cd4:	stp	q4, q5, [sp, #64]
  422cd8:	stp	q6, q7, [sp, #96]
  422cdc:	stp	x9, x8, [x29, #-16]
  422ce0:	stp	x11, x10, [x29, #-32]
  422ce4:	ldr	x8, [x0, #40]
  422ce8:	mov	x20, x3
  422cec:	mov	x19, x0
  422cf0:	mov	w21, w1
  422cf4:	add	x0, sp, #0xa8
  422cf8:	mov	x1, x8
  422cfc:	mov	x3, xzr
  422d00:	str	x28, [sp, #384]
  422d04:	bl	430594 <feof@plt+0x2d894>
  422d08:	ldr	x22, [x19, #1000]
  422d0c:	cbz	x22, 422d64 <feof@plt+0x20064>
  422d10:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422d14:	add	x0, x0, #0x88f
  422d18:	mov	x1, x20
  422d1c:	bl	4028f0 <dgettext@plt>
  422d20:	mov	x4, x0
  422d24:	add	x3, sp, #0xa8
  422d28:	sub	x5, x29, #0x20
  422d2c:	mov	x0, x19
  422d30:	mov	w1, w21
  422d34:	mov	w2, wzr
  422d38:	blr	x22
  422d3c:	mov	w19, w0
  422d40:	add	x0, sp, #0xa8
  422d44:	bl	430674 <feof@plt+0x2d974>
  422d48:	and	w0, w19, #0x1
  422d4c:	ldp	x20, x19, [sp, #416]
  422d50:	ldp	x22, x21, [sp, #400]
  422d54:	ldr	x28, [sp, #384]
  422d58:	ldp	x29, x30, [sp, #368]
  422d5c:	add	sp, sp, #0x1b0
  422d60:	ret
  422d64:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422d68:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422d6c:	add	x0, x0, #0x89d
  422d70:	add	x2, x2, #0x8cc
  422d74:	mov	w1, #0x29                  	// #41
  422d78:	bl	408b70 <feof@plt+0x5e70>
  422d7c:	sub	sp, sp, #0xf0
  422d80:	stp	x29, x30, [sp, #192]
  422d84:	add	x29, sp, #0xc0
  422d88:	mov	x8, #0xffffffffffffffe0    	// #-32
  422d8c:	mov	x9, sp
  422d90:	sub	x10, x29, #0x40
  422d94:	movk	x8, #0xff80, lsl #32
  422d98:	add	x11, x29, #0x30
  422d9c:	add	x9, x9, #0x80
  422da0:	add	x10, x10, #0x20
  422da4:	stp	x22, x21, [sp, #208]
  422da8:	stp	x20, x19, [sp, #224]
  422dac:	stp	x4, x5, [x29, #-64]
  422db0:	stp	x6, x7, [x29, #-48]
  422db4:	stp	q0, q1, [sp]
  422db8:	stp	q2, q3, [sp, #32]
  422dbc:	stp	q4, q5, [sp, #64]
  422dc0:	stp	q6, q7, [sp, #96]
  422dc4:	stp	x9, x8, [x29, #-16]
  422dc8:	stp	x11, x10, [x29, #-32]
  422dcc:	ldr	x22, [x0, #1000]
  422dd0:	cbz	x22, 422e24 <feof@plt+0x20124>
  422dd4:	mov	x20, x0
  422dd8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422ddc:	mov	w21, w1
  422de0:	add	x0, x0, #0x88f
  422de4:	mov	x1, x3
  422de8:	mov	x19, x2
  422dec:	bl	4028f0 <dgettext@plt>
  422df0:	mov	x4, x0
  422df4:	sub	x5, x29, #0x20
  422df8:	mov	x0, x20
  422dfc:	mov	w1, w21
  422e00:	mov	w2, wzr
  422e04:	mov	x3, x19
  422e08:	blr	x22
  422e0c:	ldp	x20, x19, [sp, #224]
  422e10:	ldp	x22, x21, [sp, #208]
  422e14:	ldp	x29, x30, [sp, #192]
  422e18:	and	w0, w0, #0x1
  422e1c:	add	sp, sp, #0xf0
  422e20:	ret
  422e24:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422e28:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422e2c:	add	x0, x0, #0x89d
  422e30:	add	x2, x2, #0x8cc
  422e34:	mov	w1, #0x29                  	// #41
  422e38:	bl	408b70 <feof@plt+0x5e70>
  422e3c:	stp	x29, x30, [sp, #-48]!
  422e40:	stp	x20, x19, [sp, #32]
  422e44:	mov	x20, x0
  422e48:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422e4c:	mov	w19, w1
  422e50:	add	x0, x0, #0x88f
  422e54:	mov	x1, x2
  422e58:	str	x21, [sp, #16]
  422e5c:	mov	x29, sp
  422e60:	bl	4028f0 <dgettext@plt>
  422e64:	mov	x21, x0
  422e68:	bl	402ac0 <__errno_location@plt>
  422e6c:	ldr	w0, [x0]
  422e70:	bl	4554b0 <_obstack_memory_used@@Base+0x288>
  422e74:	mov	x4, x0
  422e78:	mov	x0, x20
  422e7c:	mov	w1, w19
  422e80:	mov	x3, x21
  422e84:	ldp	x20, x19, [sp, #32]
  422e88:	ldr	x21, [sp, #16]
  422e8c:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422e90:	add	x2, x2, #0x888
  422e94:	ldp	x29, x30, [sp], #48
  422e98:	b	4223e4 <feof@plt+0x1f6e4>
  422e9c:	stp	x29, x30, [sp, #-48]!
  422ea0:	stp	x22, x21, [sp, #16]
  422ea4:	stp	x20, x19, [sp, #32]
  422ea8:	ldrb	w8, [x2]
  422eac:	mov	w19, w3
  422eb0:	mov	x22, x2
  422eb4:	mov	w20, w1
  422eb8:	mov	x21, x0
  422ebc:	mov	x29, sp
  422ec0:	cbnz	w8, 422edc <feof@plt+0x201dc>
  422ec4:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422ec8:	adrp	x1, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422ecc:	add	x0, x0, #0x88f
  422ed0:	add	x1, x1, #0x896
  422ed4:	bl	4028f0 <dgettext@plt>
  422ed8:	mov	x22, x0
  422edc:	bl	402ac0 <__errno_location@plt>
  422ee0:	ldr	w0, [x0]
  422ee4:	bl	4554b0 <_obstack_memory_used@@Base+0x288>
  422ee8:	mov	x5, x0
  422eec:	mov	x0, x21
  422ef0:	mov	w1, w20
  422ef4:	mov	w2, w19
  422ef8:	mov	x4, x22
  422efc:	ldp	x20, x19, [sp, #32]
  422f00:	ldp	x22, x21, [sp, #16]
  422f04:	adrp	x3, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422f08:	add	x3, x3, #0x888
  422f0c:	ldp	x29, x30, [sp], #48
  422f10:	b	422c94 <feof@plt+0x1ff94>
  422f14:	b	422f18 <feof@plt+0x20218>
  422f18:	stp	x22, x21, [sp, #-32]!
  422f1c:	subs	x8, x2, #0x2
  422f20:	stp	x20, x19, [sp, #16]
  422f24:	b.ne	422f70 <feof@plt+0x20270>  // b.any
  422f28:	ldrb	w9, [x1]
  422f2c:	orr	w10, w9, #0x20
  422f30:	cmp	w10, #0x64
  422f34:	b.ne	422f70 <feof@plt+0x20270>  // b.any
  422f38:	ldrb	w10, [x1, #1]
  422f3c:	sub	w10, w10, #0x44
  422f40:	cmp	w10, #0x28
  422f44:	b.hi	422f70 <feof@plt+0x20270>  // b.pmore
  422f48:	adrp	x11, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422f4c:	add	x11, x11, #0x8de
  422f50:	adr	x12, 422f60 <feof@plt+0x20260>
  422f54:	ldrb	w13, [x11, x10]
  422f58:	add	x12, x12, x13, lsl #2
  422f5c:	br	x12
  422f60:	cmp	w9, #0x44
  422f64:	mov	w8, #0x4020                	// #16416
  422f68:	csel	w8, w8, wzr, eq  // eq = none
  422f6c:	b	423360 <feof@plt+0x20660>
  422f70:	ldrb	w17, [x0, #1163]
  422f74:	cbz	x2, 422fdc <feof@plt+0x202dc>
  422f78:	cbz	w17, 422fdc <feof@plt+0x202dc>
  422f7c:	sub	x10, x2, #0x1
  422f80:	ldrb	w9, [x1, x10]
  422f84:	sub	w9, w9, #0x4b
  422f88:	cmp	w9, #0x27
  422f8c:	b.hi	422fdc <feof@plt+0x202dc>  // b.pmore
  422f90:	adrp	x11, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422f94:	add	x11, x11, #0x907
  422f98:	adr	x12, 422fac <feof@plt+0x202ac>
  422f9c:	ldrb	w13, [x11, x9]
  422fa0:	add	x12, x12, x13, lsl #2
  422fa4:	mov	w9, #0x200000              	// #2097152
  422fa8:	br	x12
  422fac:	mov	w9, #0x100000              	// #1048576
  422fb0:	cmp	x2, #0x1
  422fb4:	b.eq	422fd4 <feof@plt+0x202d4>  // b.none
  422fb8:	ldrb	w11, [x1]
  422fbc:	orr	w12, w11, #0x20
  422fc0:	cmp	w12, #0x75
  422fc4:	b.ne	4232a8 <feof@plt+0x205a8>  // b.any
  422fc8:	cmp	x10, #0x1
  422fcc:	orr	x9, x9, #0x1000
  422fd0:	b.ne	4232a0 <feof@plt+0x205a0>  // b.any
  422fd4:	mov	w8, w9
  422fd8:	b	423360 <feof@plt+0x20660>
  422fdc:	cbz	x2, 423154 <feof@plt+0x20454>
  422fe0:	adrp	x8, 461000 <_obstack_memory_used@@Base+0xbdd8>
  422fe4:	mov	x15, xzr
  422fe8:	mov	x9, xzr
  422fec:	mov	x10, xzr
  422ff0:	mov	x16, xzr
  422ff4:	mov	x11, xzr
  422ff8:	mov	x13, xzr
  422ffc:	mov	x12, xzr
  423000:	mov	x14, xzr
  423004:	mov	x18, xzr
  423008:	add	x8, x8, #0x939
  42300c:	mov	w3, #0xa                   	// #10
  423010:	mov	x6, x2
  423014:	mov	x4, x1
  423018:	b	42302c <feof@plt+0x2032c>
  42301c:	add	x16, x16, #0x1
  423020:	add	x4, x4, #0x1
  423024:	mov	x6, x5
  423028:	cbz	x5, 423178 <feof@plt+0x20478>
  42302c:	ldrb	w5, [x4]
  423030:	sub	w5, w5, #0x44
  423034:	cmp	w5, #0x33
  423038:	b.hi	42335c <feof@plt+0x2065c>  // b.pmore
  42303c:	adr	x7, 42301c <feof@plt+0x2031c>
  423040:	ldrb	w19, [x8, x5]
  423044:	add	x7, x7, x19, lsl #2
  423048:	sub	x5, x6, #0x1
  42304c:	br	x7
  423050:	add	x14, x14, #0x1
  423054:	b	423020 <feof@plt+0x20320>
  423058:	add	x19, x18, #0x1
  42305c:	cbz	x5, 423338 <feof@plt+0x20638>
  423060:	ldrb	w7, [x0, #1120]
  423064:	cbnz	w7, 423100 <feof@plt+0x20400>
  423068:	ldrb	w7, [x4, #1]
  42306c:	cmp	w7, #0x31
  423070:	b.cc	423100 <feof@plt+0x20400>  // b.lo, b.ul, b.last
  423074:	cbnz	x15, 423100 <feof@plt+0x20400>
  423078:	cmp	w7, #0x39
  42307c:	b.hi	423100 <feof@plt+0x20400>  // b.pmore
  423080:	cmp	w7, #0x30
  423084:	b.cc	423108 <feof@plt+0x20408>  // b.lo, b.ul, b.last
  423088:	add	x19, x4, x6
  42308c:	mov	x5, xzr
  423090:	mov	x15, xzr
  423094:	sub	x21, x6, #0x2
  423098:	sub	x20, x19, #0x1
  42309c:	mov	x19, #0xffffffffffffffff    	// #-1
  4230a0:	cmp	x15, #0xef
  4230a4:	b.hi	423114 <feof@plt+0x20414>  // b.pmore
  4230a8:	and	w22, w7, #0xff
  4230ac:	cmp	w22, #0x39
  4230b0:	b.hi	423114 <feof@plt+0x20414>  // b.pmore
  4230b4:	mul	x15, x15, x3
  4230b8:	add	x15, x15, w7, uxtb
  4230bc:	cmp	x21, x5
  4230c0:	sub	x15, x15, #0x30
  4230c4:	b.eq	423144 <feof@plt+0x20444>  // b.none
  4230c8:	add	x7, x4, x5
  4230cc:	ldrb	w7, [x7, #2]
  4230d0:	add	x5, x5, #0x1
  4230d4:	sub	x19, x19, #0x1
  4230d8:	cmp	w7, #0x2f
  4230dc:	b.hi	4230a0 <feof@plt+0x203a0>  // b.pmore
  4230e0:	add	x4, x4, x5
  4230e4:	b	423138 <feof@plt+0x20438>
  4230e8:	add	x12, x12, #0x1
  4230ec:	b	423020 <feof@plt+0x20320>
  4230f0:	add	x11, x11, #0x1
  4230f4:	b	423020 <feof@plt+0x20320>
  4230f8:	add	x13, x13, #0x1
  4230fc:	b	423020 <feof@plt+0x20320>
  423100:	mov	x18, x19
  423104:	b	423020 <feof@plt+0x20320>
  423108:	mov	x15, xzr
  42310c:	add	x10, x10, #0x1
  423110:	b	423020 <feof@plt+0x20320>
  423114:	and	w7, w7, #0xff
  423118:	cmp	w7, #0x78
  42311c:	add	x4, x4, x5
  423120:	b.ne	423138 <feof@plt+0x20438>  // b.any
  423124:	sub	x5, x6, x5
  423128:	add	x4, x4, #0x1
  42312c:	add	x9, x9, #0x1
  423130:	sub	x5, x5, #0x2
  423134:	b	423020 <feof@plt+0x20320>
  423138:	add	x5, x6, x19
  42313c:	add	x10, x10, #0x1
  423140:	b	423020 <feof@plt+0x20320>
  423144:	mov	x5, xzr
  423148:	mov	x4, x20
  42314c:	add	x10, x10, #0x1
  423150:	b	423020 <feof@plt+0x20320>
  423154:	mov	x18, xzr
  423158:	mov	x14, xzr
  42315c:	mov	x12, xzr
  423160:	mov	x13, xzr
  423164:	mov	x11, xzr
  423168:	mov	x16, xzr
  42316c:	mov	x10, xzr
  423170:	mov	x9, xzr
  423174:	mov	x15, xzr
  423178:	cmp	x15, #0xf0
  42317c:	mov	w8, wzr
  423180:	b.hi	423360 <feof@plt+0x20660>  // b.pmore
  423184:	add	x3, x14, x18
  423188:	add	x3, x3, x12
  42318c:	add	x3, x3, x13
  423190:	add	x3, x3, x11
  423194:	add	x3, x3, x10
  423198:	add	x3, x3, x9
  42319c:	orr	x3, x3, x16
  4231a0:	cmp	x3, #0x1
  4231a4:	b.hi	423360 <feof@plt+0x20660>  // b.pmore
  4231a8:	cbz	x9, 4231c4 <feof@plt+0x204c4>
  4231ac:	cmp	x15, #0x20
  4231b0:	b.eq	4231c4 <feof@plt+0x204c4>  // b.none
  4231b4:	cmp	x15, #0x80
  4231b8:	b.eq	4231c4 <feof@plt+0x204c4>  // b.none
  4231bc:	cmp	x15, #0x40
  4231c0:	b.ne	42335c <feof@plt+0x2065c>  // b.any
  4231c4:	cmp	x10, #0x0
  4231c8:	cset	w3, ne  // ne = any
  4231cc:	cmp	x15, #0x10
  4231d0:	cset	w4, ne  // ne = any
  4231d4:	tst	x15, #0x1f
  4231d8:	cset	w5, ne  // ne = any
  4231dc:	cmp	x15, #0x60
  4231e0:	cset	w8, eq  // eq = none
  4231e4:	and	w6, w3, w8
  4231e8:	mov	w8, wzr
  4231ec:	tbnz	w6, #0, 423360 <feof@plt+0x20660>
  4231f0:	and	w3, w3, w4
  4231f4:	and	w3, w3, w5
  4231f8:	tbnz	w3, #0, 423360 <feof@plt+0x20660>
  4231fc:	cbz	x16, 4232e4 <feof@plt+0x205e4>
  423200:	cbz	w17, 42335c <feof@plt+0x2065c>
  423204:	ldrb	w8, [x0, #1120]
  423208:	cbz	w8, 4232f0 <feof@plt+0x205f0>
  42320c:	ldr	w8, [x0, #1116]
  423210:	cmp	w8, #0xf
  423214:	b.lt	4232f0 <feof@plt+0x205f0>  // b.tstop
  423218:	ldrb	w8, [x1]
  42321c:	cmp	w8, #0x69
  423220:	b.ne	4232f0 <feof@plt+0x205f0>  // b.any
  423224:	cmp	x2, #0x1
  423228:	b.eq	42335c <feof@plt+0x2065c>  // b.none
  42322c:	cmp	x2, #0x2
  423230:	b.ne	4232f0 <feof@plt+0x205f0>  // b.any
  423234:	ldrb	w17, [x1, #1]
  423238:	mov	w8, wzr
  42323c:	cmp	w17, #0x66
  423240:	b.eq	423360 <feof@plt+0x20660>  // b.none
  423244:	cmp	w17, #0x6c
  423248:	b.eq	423360 <feof@plt+0x20660>  // b.none
  42324c:	b	4232f0 <feof@plt+0x205f0>
  423250:	cmp	w9, #0x44
  423254:	mov	w8, #0x4010                	// #16400
  423258:	csel	w8, w8, wzr, eq  // eq = none
  42325c:	b	423360 <feof@plt+0x20660>
  423260:	cmp	w9, #0x44
  423264:	mov	w8, #0x4040                	// #16448
  423268:	csel	w8, w8, wzr, eq  // eq = none
  42326c:	b	423360 <feof@plt+0x20660>
  423270:	cmp	w9, #0x44
  423274:	mov	w8, #0x4020                	// #16416
  423278:	csel	w8, wzr, w8, eq  // eq = none
  42327c:	b	423360 <feof@plt+0x20660>
  423280:	cmp	w9, #0x44
  423284:	mov	w8, #0x4010                	// #16400
  423288:	csel	w8, wzr, w8, eq  // eq = none
  42328c:	b	423360 <feof@plt+0x20660>
  423290:	cmp	w9, #0x44
  423294:	mov	w8, #0x4040                	// #16448
  423298:	csel	w8, wzr, w8, eq  // eq = none
  42329c:	b	423360 <feof@plt+0x20660>
  4232a0:	ldrb	w11, [x1, #1]!
  4232a4:	mov	x10, x8
  4232a8:	sub	w8, w11, #0x48
  4232ac:	ror	w11, w8, #2
  4232b0:	cmp	w11, #0x9
  4232b4:	mov	w8, wzr
  4232b8:	b.hi	423360 <feof@plt+0x20660>  // b.pmore
  4232bc:	adrp	x12, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4232c0:	add	x12, x12, #0x92f
  4232c4:	adr	x13, 4232d4 <feof@plt+0x205d4>
  4232c8:	ldrb	w14, [x12, x11]
  4232cc:	add	x13, x13, x14, lsl #2
  4232d0:	br	x13
  4232d4:	cmp	x10, #0x1
  4232d8:	b.ne	42335c <feof@plt+0x2065c>  // b.any
  4232dc:	orr	w8, w9, #0x10
  4232e0:	b	423360 <feof@plt+0x20660>
  4232e4:	orr	x8, x11, x13
  4232e8:	cbz	x8, 4232f0 <feof@plt+0x205f0>
  4232ec:	cbz	w17, 42335c <feof@plt+0x2065c>
  4232f0:	cmp	x16, #0x0
  4232f4:	cset	w8, ne  // ne = any
  4232f8:	lsl	x8, x8, #13
  4232fc:	cbz	x18, 423340 <feof@plt+0x20640>
  423300:	mov	w11, #0x10                  	// #16
  423304:	orr	w8, w11, w8
  423308:	b	423360 <feof@plt+0x20660>
  42330c:	cmp	x10, #0x2
  423310:	b.eq	423350 <feof@plt+0x20650>  // b.none
  423314:	cmp	x10, #0x1
  423318:	b.eq	423330 <feof@plt+0x20630>  // b.none
  42331c:	b	42335c <feof@plt+0x2065c>
  423320:	cmp	x10, #0x2
  423324:	b.eq	423370 <feof@plt+0x20670>  // b.none
  423328:	cmp	x10, #0x1
  42332c:	b.ne	42335c <feof@plt+0x2065c>  // b.any
  423330:	orr	w8, w9, #0x20
  423334:	b	423360 <feof@plt+0x20660>
  423338:	mov	x18, x19
  42333c:	b	423178 <feof@plt+0x20478>
  423340:	cbz	x14, 423384 <feof@plt+0x20684>
  423344:	mov	w11, #0x20                  	// #32
  423348:	orr	w8, w11, w8
  42334c:	b	423360 <feof@plt+0x20660>
  423350:	ldrb	w8, [x1, #1]
  423354:	cmp	w8, #0x4c
  423358:	b.eq	42337c <feof@plt+0x2067c>  // b.none
  42335c:	mov	w8, wzr
  423360:	ldp	x20, x19, [sp, #16]
  423364:	mov	w0, w8
  423368:	ldp	x22, x21, [sp], #32
  42336c:	ret
  423370:	ldrb	w8, [x1, #1]
  423374:	cmp	w8, #0x6c
  423378:	b.ne	42335c <feof@plt+0x2065c>  // b.any
  42337c:	orr	w8, w9, #0x40
  423380:	b	423360 <feof@plt+0x20660>
  423384:	orr	x13, x13, x12
  423388:	cmp	x12, #0x0
  42338c:	mov	w12, #0x40                  	// #64
  423390:	mov	w14, #0x10000               	// #65536
  423394:	csel	x12, x14, x12, eq  // eq = none
  423398:	orr	x14, x13, x11
  42339c:	cmp	x13, #0x0
  4233a0:	mov	w11, #0x20000               	// #131072
  4233a4:	csel	x11, x11, x12, eq  // eq = none
  4233a8:	cbz	x14, 4233b4 <feof@plt+0x206b4>
  4233ac:	orr	w8, w11, w8
  4233b0:	b	423360 <feof@plt+0x20660>
  4233b4:	lsl	x11, x15, #24
  4233b8:	cbz	x10, 4233c8 <feof@plt+0x206c8>
  4233bc:	orr	x11, x11, #0x400000
  4233c0:	orr	w8, w11, w8
  4233c4:	b	423360 <feof@plt+0x20660>
  4233c8:	orr	x10, x11, #0x800000
  4233cc:	cmp	x9, #0x0
  4233d0:	mov	w9, #0x8000                	// #32768
  4233d4:	csel	x11, x10, x9, ne  // ne = any
  4233d8:	b	4233ac <feof@plt+0x206ac>
  4233dc:	cbz	x2, 423468 <feof@plt+0x20768>
  4233e0:	mov	x11, xzr
  4233e4:	mov	x10, xzr
  4233e8:	mov	x9, xzr
  4233ec:	mov	w12, #0x1                   	// #1
  4233f0:	mov	x13, x2
  4233f4:	b	423404 <feof@plt+0x20704>
  4233f8:	add	x11, x11, #0x1
  4233fc:	sub	x13, x13, #0x1
  423400:	cbz	x13, 423474 <feof@plt+0x20774>
  423404:	add	x8, x1, x13
  423408:	ldurb	w14, [x8, #-1]
  42340c:	mov	w8, wzr
  423410:	sub	w15, w14, #0x49
  423414:	cmp	w15, #0x2c
  423418:	b.hi	423514 <feof@plt+0x20814>  // b.pmore
  42341c:	lsl	x16, x12, x15
  423420:	tst	x16, #0x300000003
  423424:	b.ne	4233f8 <feof@plt+0x206f8>  // b.any
  423428:	lsl	x16, x12, x15
  42342c:	tst	x16, #0x800000008
  423430:	b.ne	423448 <feof@plt+0x20748>  // b.any
  423434:	lsl	x14, x12, x15
  423438:	tst	x14, #0x100000001000
  42343c:	b.eq	423514 <feof@plt+0x20814>  // b.none
  423440:	add	x9, x9, #0x1
  423444:	b	4233fc <feof@plt+0x206fc>
  423448:	add	x10, x10, #0x1
  42344c:	cmp	x10, #0x2
  423450:	b.ne	4233fc <feof@plt+0x206fc>  // b.any
  423454:	ldrb	w8, [x1, x13]
  423458:	cmp	w14, w8
  42345c:	b.ne	4234d4 <feof@plt+0x207d4>  // b.any
  423460:	mov	w10, #0x2                   	// #2
  423464:	b	4233fc <feof@plt+0x206fc>
  423468:	mov	x9, xzr
  42346c:	mov	x10, xzr
  423470:	mov	x11, xzr
  423474:	cmp	x10, #0x2
  423478:	mov	w8, wzr
  42347c:	b.hi	423514 <feof@plt+0x20814>  // b.pmore
  423480:	orr	x12, x11, x9
  423484:	cmp	x12, #0x1
  423488:	b.hi	423514 <feof@plt+0x20814>  // b.pmore
  42348c:	cbz	x11, 4234dc <feof@plt+0x207dc>
  423490:	ldrb	w8, [x0, #1163]
  423494:	cbz	w8, 423514 <feof@plt+0x20814>
  423498:	ldrb	w8, [x0, #1120]
  42349c:	cbz	w8, 4234dc <feof@plt+0x207dc>
  4234a0:	ldr	w8, [x0, #1116]
  4234a4:	cmp	w8, #0xf
  4234a8:	b.lt	4234dc <feof@plt+0x207dc>  // b.tstop
  4234ac:	ldrb	w8, [x1]
  4234b0:	cmp	w8, #0x69
  4234b4:	b.ne	4234dc <feof@plt+0x207dc>  // b.any
  4234b8:	cmp	x2, #0x1
  4234bc:	b.eq	4234d4 <feof@plt+0x207d4>  // b.none
  4234c0:	cmp	x2, #0x2
  4234c4:	b.ne	4234dc <feof@plt+0x207dc>  // b.any
  4234c8:	ldrb	w8, [x1, #1]
  4234cc:	cmp	w8, #0x6c
  4234d0:	b.ne	4234dc <feof@plt+0x207dc>  // b.any
  4234d4:	mov	w0, wzr
  4234d8:	ret
  4234dc:	cmp	x11, #0x0
  4234e0:	cset	w13, ne  // ne = any
  4234e4:	cmp	x9, #0x0
  4234e8:	mov	w8, #0x40                  	// #64
  4234ec:	mov	w11, #0x20                  	// #32
  4234f0:	cset	w9, ne  // ne = any
  4234f4:	cmp	x10, #0x1
  4234f8:	mov	w12, #0x10                  	// #16
  4234fc:	lsl	w9, w9, #12
  423500:	csel	w8, w11, w8, eq  // eq = none
  423504:	cmp	x10, #0x0
  423508:	bfi	w9, w13, #13, #1
  42350c:	csel	w8, w12, w8, eq  // eq = none
  423510:	orr	w8, w9, w8
  423514:	mov	w0, w8
  423518:	ret
  42351c:	sub	w8, w0, #0x4a
  423520:	cmp	w8, #0x4
  423524:	b.hi	42352c <feof@plt+0x2082c>  // b.pmore
  423528:	sub	w0, w0, #0xc
  42352c:	ret
  423530:	sub	w8, w0, #0x3e
  423534:	cmp	w8, #0x4
  423538:	b.hi	423540 <feof@plt+0x20840>  // b.pmore
  42353c:	add	w0, w0, #0xc
  423540:	ret
  423544:	sub	w8, w0, #0x45
  423548:	cmp	w8, #0x4
  42354c:	b.hi	423554 <feof@plt+0x20854>  // b.pmore
  423550:	sub	w0, w0, #0xd
  423554:	ret
  423558:	sub	w8, w0, #0x38
  42355c:	cmp	w8, #0x4
  423560:	b.hi	423568 <feof@plt+0x20868>  // b.pmore
  423564:	add	w0, w0, #0xd
  423568:	ret
  42356c:	sub	w8, w0, #0x4a
  423570:	cmp	w8, #0x5
  423574:	cset	w0, cc  // cc = lo, ul, last
  423578:	ret
  42357c:	sub	w8, w0, #0x45
  423580:	cmp	w8, #0x5
  423584:	cset	w0, cc  // cc = lo, ul, last
  423588:	ret
  42358c:	ldr	w8, [x0, #8]
  423590:	ldr	x9, [x0, #16]
  423594:	cbz	w8, 4235c0 <feof@plt+0x208c0>
  423598:	mov	x10, xzr
  42359c:	ldrb	w11, [x9, x10]
  4235a0:	cmp	w11, #0x22
  4235a4:	b.eq	4235c4 <feof@plt+0x208c4>  // b.none
  4235a8:	cmp	w11, #0x27
  4235ac:	b.eq	4235c4 <feof@plt+0x208c4>  // b.none
  4235b0:	add	x10, x10, #0x1
  4235b4:	cmp	x8, x10
  4235b8:	b.ne	42359c <feof@plt+0x2089c>  // b.any
  4235bc:	b	4235cc <feof@plt+0x208cc>
  4235c0:	mov	w10, wzr
  4235c4:	cmp	w10, w8
  4235c8:	b.ne	4235d4 <feof@plt+0x208d4>  // b.any
  4235cc:	add	x0, x9, w8, uxtw
  4235d0:	ret
  4235d4:	ldrb	w10, [x9, w10, uxtw]
  4235d8:	cbz	x8, 4235cc <feof@plt+0x208cc>
  4235dc:	sub	w11, w8, #0x1
  4235e0:	ldrb	w11, [x9, w11, uxtw]
  4235e4:	sub	x8, x8, #0x1
  4235e8:	cmp	w11, w10
  4235ec:	b.ne	4235d8 <feof@plt+0x208d8>  // b.any
  4235f0:	add	w8, w8, #0x1
  4235f4:	add	x0, x9, w8, uxtw
  4235f8:	ret
  4235fc:	sub	sp, sp, #0x70
  423600:	stp	x29, x30, [sp, #16]
  423604:	stp	x28, x27, [sp, #32]
  423608:	stp	x26, x25, [sp, #48]
  42360c:	stp	x24, x23, [sp, #64]
  423610:	stp	x22, x21, [sp, #80]
  423614:	stp	x20, x19, [sp, #96]
  423618:	ldr	x8, [x1, #16]
  42361c:	mov	x20, x0
  423620:	add	x29, sp, #0x10
  423624:	cbz	x2, 42362c <feof@plt+0x2092c>
  423628:	str	xzr, [x2]
  42362c:	ldr	w9, [x1, #8]
  423630:	cmp	w9, #0x1
  423634:	b.ne	423640 <feof@plt+0x20940>  // b.any
  423638:	mov	w0, #0x111                 	// #273
  42363c:	b	423da4 <feof@plt+0x210a4>
  423640:	ldrb	w10, [x8]
  423644:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x11dd8>
  423648:	mov	x21, x8
  42364c:	add	x24, x24, #0x3c4
  423650:	cmp	w10, #0x30
  423654:	b.ne	423680 <feof@plt+0x20980>  // b.any
  423658:	mov	x10, x21
  42365c:	ldrb	w11, [x10, #1]!
  423660:	mov	w25, #0x8                   	// #8
  423664:	cmp	w11, #0x61
  423668:	b.gt	423688 <feof@plt+0x20988>
  42366c:	cmp	w11, #0x42
  423670:	b.eq	4236b8 <feof@plt+0x209b8>  // b.none
  423674:	cmp	w11, #0x58
  423678:	b.eq	423698 <feof@plt+0x20998>  // b.none
  42367c:	b	4236f8 <feof@plt+0x209f8>
  423680:	mov	w25, #0xa                   	// #10
  423684:	b	4236fc <feof@plt+0x209fc>
  423688:	cmp	w11, #0x62
  42368c:	b.eq	4236b8 <feof@plt+0x209b8>  // b.none
  423690:	cmp	w11, #0x78
  423694:	b.ne	4236f8 <feof@plt+0x209f8>  // b.any
  423698:	ldrb	w11, [x21, #2]!
  42369c:	cmp	x11, #0x2e
  4236a0:	b.eq	4236d0 <feof@plt+0x209d0>  // b.none
  4236a4:	ldrh	w12, [x24, x11, lsl #1]
  4236a8:	tbnz	w12, #8, 4236d0 <feof@plt+0x209d0>
  4236ac:	cmp	w11, #0x27
  4236b0:	b.eq	4236e0 <feof@plt+0x209e0>  // b.none
  4236b4:	b	4236f4 <feof@plt+0x209f4>
  4236b8:	ldrb	w11, [x21, #2]!
  4236bc:	sub	w12, w11, #0x30
  4236c0:	cmp	w12, #0x2
  4236c4:	b.cs	4236d8 <feof@plt+0x209d8>  // b.hs, b.nlast
  4236c8:	mov	w25, #0x2                   	// #2
  4236cc:	b	4236fc <feof@plt+0x209fc>
  4236d0:	mov	w25, #0x10                  	// #16
  4236d4:	b	4236fc <feof@plt+0x209fc>
  4236d8:	cmp	w11, #0x27
  4236dc:	b.ne	4236f4 <feof@plt+0x209f4>  // b.any
  4236e0:	ldrb	w11, [x20, #1166]
  4236e4:	cbz	w11, 4236f4 <feof@plt+0x209f4>
  4236e8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4236ec:	add	x4, x4, #0xa8a
  4236f0:	b	423d8c <feof@plt+0x2108c>
  4236f4:	mov	w25, #0x8                   	// #8
  4236f8:	mov	x21, x10
  4236fc:	add	x12, x8, x9
  423700:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  423704:	mov	w10, wzr
  423708:	mov	w26, wzr
  42370c:	mov	w19, wzr
  423710:	add	x8, x8, #0x2b3
  423714:	mov	w28, w10
  423718:	b	423730 <feof@plt+0x20a30>
  42371c:	mov	x21, x9
  423720:	ldrb	w9, [x8, x27]
  423724:	mov	w26, #0x1                   	// #1
  423728:	cmp	w19, w9
  42372c:	csel	w19, w9, w19, cc  // cc = lo, ul, last
  423730:	mov	x23, x21
  423734:	ldrb	w27, [x21], #1
  423738:	ldrh	w9, [x24, x27, lsl #1]
  42373c:	tbnz	w9, #2, 423720 <feof@plt+0x20a20>
  423740:	cmp	w25, #0x10
  423744:	b.ne	42374c <feof@plt+0x20a4c>  // b.any
  423748:	tbnz	w9, #8, 423720 <feof@plt+0x20a20>
  42374c:	cmp	w27, #0x27
  423750:	b.ne	42378c <feof@plt+0x20a8c>  // b.any
  423754:	ldrb	w9, [x20, #1166]
  423758:	cbz	w9, 4237c4 <feof@plt+0x20ac4>
  42375c:	ldrb	w27, [x23, #1]
  423760:	add	x9, x23, #0x2
  423764:	ldrh	w10, [x24, x27, lsl #1]
  423768:	tbnz	w10, #2, 42371c <feof@plt+0x20a1c>
  42376c:	cmp	w25, #0x10
  423770:	b.ne	423778 <feof@plt+0x20a78>  // b.any
  423774:	tbnz	w10, #8, 42371c <feof@plt+0x20a1c>
  423778:	cmp	w27, #0x2e
  42377c:	b.ne	42385c <feof@plt+0x20b5c>  // b.any
  423780:	mov	w10, #0x1                   	// #1
  423784:	mov	x21, x9
  423788:	b	423798 <feof@plt+0x20a98>
  42378c:	cmp	w27, #0x2e
  423790:	b.ne	4237d0 <feof@plt+0x20ad0>  // b.any
  423794:	mov	w10, wzr
  423798:	tbnz	w10, #0, 423844 <feof@plt+0x20b44>
  42379c:	ldrb	w9, [x21]
  4237a0:	cmp	w9, #0x27
  4237a4:	b.ne	4237b0 <feof@plt+0x20ab0>  // b.any
  4237a8:	ldrb	w9, [x20, #1166]
  4237ac:	cbnz	w9, 423844 <feof@plt+0x20b44>
  4237b0:	mov	w10, #0x1                   	// #1
  4237b4:	cbz	w28, 423714 <feof@plt+0x20a14>
  4237b8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4237bc:	add	x4, x4, #0xaf3
  4237c0:	b	423d8c <feof@plt+0x2108c>
  4237c4:	mov	w22, wzr
  4237c8:	cbnz	w22, 42380c <feof@plt+0x20b0c>
  4237cc:	b	423894 <feof@plt+0x20b94>
  4237d0:	mov	w22, wzr
  4237d4:	cmp	w25, #0x10
  4237d8:	orr	w9, w27, #0x20
  4237dc:	cset	w8, eq  // eq = none
  4237e0:	cmp	w25, #0xb
  4237e4:	cset	w10, cc  // cc = lo, ul, last
  4237e8:	cmp	w9, #0x65
  4237ec:	cset	w11, eq  // eq = none
  4237f0:	cmp	w9, #0x70
  4237f4:	and	w10, w10, w11
  4237f8:	cset	w9, eq  // eq = none
  4237fc:	tbnz	w10, #0, 423818 <feof@plt+0x20b18>
  423800:	and	w8, w8, w9
  423804:	cbnz	w8, 423818 <feof@plt+0x20b18>
  423808:	cbz	w22, 423894 <feof@plt+0x20b94>
  42380c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423810:	add	x4, x4, #0xb3a
  423814:	b	423d8c <feof@plt+0x2108c>
  423818:	tbnz	w22, #0, 423830 <feof@plt+0x20b30>
  42381c:	ldrb	w27, [x21]
  423820:	cmp	w27, #0x27
  423824:	b.ne	42383c <feof@plt+0x20b3c>  // b.any
  423828:	ldrb	w8, [x20, #1166]
  42382c:	cbz	w8, 423850 <feof@plt+0x20b50>
  423830:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423834:	add	x4, x4, #0xb15
  423838:	b	423d8c <feof@plt+0x2108c>
  42383c:	mov	w28, #0x2                   	// #2
  423840:	b	42391c <feof@plt+0x20c1c>
  423844:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423848:	add	x4, x4, #0xac9
  42384c:	b	423d8c <feof@plt+0x2108c>
  423850:	mov	w28, #0x2                   	// #2
  423854:	mov	w27, #0x27                  	// #39
  423858:	b	42391c <feof@plt+0x20c1c>
  42385c:	cmp	w27, #0x27
  423860:	b.ne	423878 <feof@plt+0x20b78>  // b.any
  423864:	ldrb	w8, [x20, #1166]
  423868:	cbz	w8, 423888 <feof@plt+0x20b88>
  42386c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423870:	add	x4, x4, #0xaaf
  423874:	b	423d8c <feof@plt+0x2108c>
  423878:	mov	w22, #0x1                   	// #1
  42387c:	mov	x23, x21
  423880:	mov	x21, x9
  423884:	b	4237d4 <feof@plt+0x20ad4>
  423888:	mov	w22, #0x1                   	// #1
  42388c:	mov	x23, x21
  423890:	cbnz	w22, 42380c <feof@plt+0x20b0c>
  423894:	cmp	w25, #0x10
  423898:	b.eq	423918 <feof@plt+0x20c18>  // b.none
  42389c:	cbnz	w28, 423918 <feof@plt+0x20c18>
  4238a0:	str	x2, [sp]
  4238a4:	sub	x2, x12, x23
  4238a8:	mov	x0, x20
  4238ac:	mov	x1, x23
  4238b0:	stur	w3, [x29, #-4]
  4238b4:	mov	x21, x12
  4238b8:	bl	422f18 <feof@plt+0x20218>
  4238bc:	tst	w0, #0x300000
  4238c0:	b.eq	423908 <feof@plt+0x20c08>  // b.none
  4238c4:	ldrb	w8, [x20, #1154]
  4238c8:	ldur	w3, [x29, #-4]
  4238cc:	cmp	w25, #0x8
  4238d0:	mov	w9, #0xa                   	// #10
  4238d4:	orr	w19, w0, #0x2
  4238d8:	csel	w25, w9, w25, eq  // eq = none
  4238dc:	cbz	w8, 423c20 <feof@plt+0x20f20>
  4238e0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4238e4:	add	x4, x4, #0xb61
  4238e8:	mov	w1, #0x2                   	// #2
  4238ec:	mov	x0, x20
  4238f0:	mov	w2, w3
  4238f4:	mov	w3, wzr
  4238f8:	bl	4228a4 <feof@plt+0x1fba4>
  4238fc:	ldur	w3, [x29, #-4]
  423900:	tbnz	w19, #13, 423c24 <feof@plt+0x20f24>
  423904:	b	423c50 <feof@plt+0x20f50>
  423908:	ldur	w3, [x29, #-4]
  42390c:	ldr	x2, [sp]
  423910:	mov	w28, wzr
  423914:	mov	x12, x21
  423918:	mov	x21, x23
  42391c:	cmp	w28, #0x0
  423920:	ccmp	w25, #0x8, #0x0, ne  // ne = any
  423924:	mov	w8, #0xa                   	// #10
  423928:	csel	w25, w8, w25, eq  // eq = none
  42392c:	cmp	w19, w25
  423930:	b.cs	42394c <feof@plt+0x20c4c>  // b.hs, b.nlast
  423934:	cbz	w28, 423984 <feof@plt+0x20c84>
  423938:	cmp	w25, #0x2
  42393c:	b.ne	423a10 <feof@plt+0x20d10>  // b.any
  423940:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423944:	add	x4, x4, #0xbd6
  423948:	b	423d8c <feof@plt+0x2108c>
  42394c:	cmp	w25, #0x2
  423950:	add	w5, w19, #0x30
  423954:	b.ne	423964 <feof@plt+0x20c64>  // b.any
  423958:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42395c:	add	x4, x4, #0xb8b
  423960:	b	42396c <feof@plt+0x20c6c>
  423964:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423968:	add	x4, x4, #0xbb1
  42396c:	mov	w1, #0x3                   	// #3
  423970:	mov	x0, x20
  423974:	mov	w2, w3
  423978:	mov	w3, wzr
  42397c:	bl	4228a4 <feof@plt+0x1fba4>
  423980:	b	423da0 <feof@plt+0x210a0>
  423984:	subs	x23, x12, x21
  423988:	b.eq	423a5c <feof@plt+0x20d5c>  // b.none
  42398c:	mov	x10, xzr
  423990:	mov	x9, xzr
  423994:	mov	x8, xzr
  423998:	mov	w11, #0x1                   	// #1
  42399c:	mov	x12, x23
  4239a0:	b	4239b0 <feof@plt+0x20cb0>
  4239a4:	add	x10, x10, #0x1
  4239a8:	sub	x12, x12, #0x1
  4239ac:	cbz	x12, 423a68 <feof@plt+0x20d68>
  4239b0:	add	x13, x21, x12
  4239b4:	ldurb	w13, [x13, #-1]
  4239b8:	sub	w14, w13, #0x49
  4239bc:	cmp	w14, #0x2c
  4239c0:	b.hi	423ac0 <feof@plt+0x20dc0>  // b.pmore
  4239c4:	lsl	x15, x11, x14
  4239c8:	tst	x15, #0x300000003
  4239cc:	b.ne	4239a4 <feof@plt+0x20ca4>  // b.any
  4239d0:	lsl	x15, x11, x14
  4239d4:	tst	x15, #0x800000008
  4239d8:	b.ne	4239f0 <feof@plt+0x20cf0>  // b.any
  4239dc:	lsl	x13, x11, x14
  4239e0:	tst	x13, #0x100000001000
  4239e4:	b.eq	423ac0 <feof@plt+0x20dc0>  // b.none
  4239e8:	add	x8, x8, #0x1
  4239ec:	b	4239a8 <feof@plt+0x20ca8>
  4239f0:	add	x9, x9, #0x1
  4239f4:	cmp	x9, #0x2
  4239f8:	b.ne	4239a8 <feof@plt+0x20ca8>  // b.any
  4239fc:	ldrb	w9, [x21, x12]
  423a00:	cmp	w13, w9
  423a04:	b.ne	423ac0 <feof@plt+0x20dc0>  // b.any
  423a08:	mov	w9, #0x2                   	// #2
  423a0c:	b	4239a8 <feof@plt+0x20ca8>
  423a10:	cmp	w25, #0x10
  423a14:	cset	w8, ne  // ne = any
  423a18:	orr	w8, w26, w8
  423a1c:	tbz	w8, #0, 423a50 <feof@plt+0x20d50>
  423a20:	b.ne	423cf4 <feof@plt+0x20ff4>  // b.any
  423a24:	ldrb	w8, [x20, #1154]
  423a28:	cbz	w8, 423cf4 <feof@plt+0x20ff4>
  423a2c:	ldrb	w8, [x20, #1127]
  423a30:	cbnz	w8, 423cf4 <feof@plt+0x20ff4>
  423a34:	ldrb	w8, [x20, #1120]
  423a38:	mov	x26, x12
  423a3c:	mov	x23, x2
  423a40:	cbz	w8, 423cc8 <feof@plt+0x20fc8>
  423a44:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423a48:	add	x4, x4, #0xc2b
  423a4c:	b	423cd0 <feof@plt+0x20fd0>
  423a50:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423a54:	add	x4, x4, #0xc00
  423a58:	b	423d8c <feof@plt+0x2108c>
  423a5c:	mov	x8, xzr
  423a60:	mov	x9, xzr
  423a64:	mov	x10, xzr
  423a68:	cmp	x9, #0x2
  423a6c:	b.hi	423ac0 <feof@plt+0x20dc0>  // b.pmore
  423a70:	orr	x11, x10, x8
  423a74:	cmp	x11, #0x1
  423a78:	b.hi	423ac0 <feof@plt+0x20dc0>  // b.pmore
  423a7c:	cbz	x10, 423b08 <feof@plt+0x20e08>
  423a80:	ldrb	w11, [x20, #1163]
  423a84:	cbz	w11, 423ac0 <feof@plt+0x20dc0>
  423a88:	ldrb	w11, [x20, #1120]
  423a8c:	cbz	w11, 423b08 <feof@plt+0x20e08>
  423a90:	ldr	w11, [x20, #1116]
  423a94:	cmp	w11, #0xf
  423a98:	b.lt	423b08 <feof@plt+0x20e08>  // b.tstop
  423a9c:	cmp	w27, #0x69
  423aa0:	b.ne	423b08 <feof@plt+0x20e08>  // b.any
  423aa4:	cmp	x23, #0x1
  423aa8:	b.eq	423ac0 <feof@plt+0x20dc0>  // b.none
  423aac:	cmp	x23, #0x2
  423ab0:	b.ne	423b08 <feof@plt+0x20e08>  // b.any
  423ab4:	ldrb	w11, [x21, #1]
  423ab8:	cmp	w11, #0x6c
  423abc:	b.ne	423b08 <feof@plt+0x20e08>  // b.any
  423ac0:	ldrb	w8, [x20, #1161]
  423ac4:	cbz	w8, 423ae0 <feof@plt+0x20de0>
  423ac8:	mov	w8, #0x40                  	// #64
  423acc:	movk	w8, #0x100, lsl #16
  423ad0:	cbz	x2, 423b44 <feof@plt+0x20e44>
  423ad4:	add	w19, w8, #0x1, lsl #12
  423ad8:	str	x21, [x2]
  423adc:	b	423b48 <feof@plt+0x20e48>
  423ae0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423ae4:	add	x4, x4, #0xdaf
  423ae8:	mov	w1, #0x3                   	// #3
  423aec:	mov	x0, x20
  423af0:	mov	w2, w3
  423af4:	mov	w3, wzr
  423af8:	mov	w5, w23
  423afc:	mov	x6, x21
  423b00:	bl	4228a4 <feof@plt+0x1fba4>
  423b04:	b	423da0 <feof@plt+0x210a0>
  423b08:	cmp	x10, #0x0
  423b0c:	cset	w13, ne  // ne = any
  423b10:	cmp	x8, #0x0
  423b14:	mov	w10, #0x40                  	// #64
  423b18:	mov	w11, #0x20                  	// #32
  423b1c:	cset	w8, ne  // ne = any
  423b20:	cmp	x9, #0x1
  423b24:	mov	w12, #0x10                  	// #16
  423b28:	lsl	w8, w8, #12
  423b2c:	csel	w10, w11, w10, eq  // eq = none
  423b30:	cmp	x9, #0x0
  423b34:	bfi	w8, w13, #13, #1
  423b38:	csel	w9, w12, w10, eq  // eq = none
  423b3c:	orr	w19, w8, w9
  423b40:	b	423b48 <feof@plt+0x20e48>
  423b44:	orr	w19, w8, #0x1000
  423b48:	ldrb	w8, [x20, #1138]
  423b4c:	cbz	w8, 423bc0 <feof@plt+0x20ec0>
  423b50:	mov	x0, x20
  423b54:	mov	w22, w3
  423b58:	bl	432780 <feof@plt+0x2fa80>
  423b5c:	mov	w3, w22
  423b60:	cbnz	w0, 423bc0 <feof@plt+0x20ec0>
  423b64:	and	w8, w19, #0xf0
  423b68:	cmp	w8, #0x40
  423b6c:	and	w8, w19, #0x3000
  423b70:	b.ne	423b84 <feof@plt+0x20e84>  // b.any
  423b74:	ldrb	w9, [x20, #1139]
  423b78:	cmp	w9, #0x0
  423b7c:	cset	w9, ne  // ne = any
  423b80:	b	423b88 <feof@plt+0x20e88>
  423b84:	mov	w9, wzr
  423b88:	cbnz	w8, 423b90 <feof@plt+0x20e90>
  423b8c:	cbz	w9, 423bc0 <feof@plt+0x20ec0>
  423b90:	cmp	w9, #0x0
  423b94:	mov	w8, #0x6                   	// #6
  423b98:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423b9c:	cinc	w1, w8, ne  // ne = any
  423ba0:	add	x4, x4, #0xcf4
  423ba4:	mov	x0, x20
  423ba8:	mov	w2, w3
  423bac:	mov	w3, wzr
  423bb0:	mov	w5, w23
  423bb4:	mov	x6, x21
  423bb8:	bl	4229a0 <feof@plt+0x1fca0>
  423bbc:	mov	w3, w22
  423bc0:	and	w8, w19, #0xf0
  423bc4:	cmp	w8, #0x40
  423bc8:	b.ne	423c1c <feof@plt+0x20f1c>  // b.any
  423bcc:	ldrb	w8, [x20, #1139]
  423bd0:	cbz	w8, 423c1c <feof@plt+0x20f1c>
  423bd4:	ldrb	w8, [x20, #1120]
  423bd8:	ldrb	w9, [x20, #1152]
  423bdc:	adrp	x10, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423be0:	adrp	x11, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423be4:	add	x10, x10, #0xdd9
  423be8:	add	x11, x11, #0xe01
  423bec:	cmp	w8, #0x0
  423bf0:	csel	x4, x11, x10, eq  // eq = none
  423bf4:	mov	w1, #0x7                   	// #7
  423bf8:	mov	x0, x20
  423bfc:	mov	w2, w3
  423c00:	mov	w21, w3
  423c04:	mov	w3, wzr
  423c08:	cbz	w9, 423c14 <feof@plt+0x20f14>
  423c0c:	bl	4229a0 <feof@plt+0x1fca0>
  423c10:	b	423c18 <feof@plt+0x20f18>
  423c14:	bl	422a9c <feof@plt+0x1fd9c>
  423c18:	mov	w3, w21
  423c1c:	orr	w19, w19, #0x1
  423c20:	tbz	w19, #13, 423c50 <feof@plt+0x20f50>
  423c24:	ldrb	w8, [x20, #1154]
  423c28:	cbz	w8, 423c50 <feof@plt+0x20f50>
  423c2c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423c30:	add	x4, x4, #0xe27
  423c34:	mov	w1, #0x2                   	// #2
  423c38:	mov	x0, x20
  423c3c:	mov	w2, w3
  423c40:	mov	w21, w3
  423c44:	mov	w3, wzr
  423c48:	bl	4228a4 <feof@plt+0x1fba4>
  423c4c:	mov	w3, w21
  423c50:	cmp	w25, #0x10
  423c54:	b.eq	423cb0 <feof@plt+0x20fb0>  // b.none
  423c58:	cmp	w25, #0xa
  423c5c:	b.eq	423cb8 <feof@plt+0x20fb8>  // b.none
  423c60:	cmp	w25, #0x2
  423c64:	b.ne	423cc0 <feof@plt+0x20fc0>  // b.any
  423c68:	ldrb	w8, [x20, #1165]
  423c6c:	cbnz	w8, 423ca8 <feof@plt+0x20fa8>
  423c70:	ldrb	w8, [x20, #1154]
  423c74:	cbz	w8, 423ca8 <feof@plt+0x20fa8>
  423c78:	ldrb	w8, [x20, #1120]
  423c7c:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423c80:	adrp	x10, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423c84:	add	x9, x9, #0xe4f
  423c88:	add	x10, x10, #0xe85
  423c8c:	cmp	w8, #0x0
  423c90:	csel	x4, x10, x9, eq  // eq = none
  423c94:	mov	w1, #0x2                   	// #2
  423c98:	mov	x0, x20
  423c9c:	mov	w2, w3
  423ca0:	mov	w3, wzr
  423ca4:	bl	4228a4 <feof@plt+0x1fba4>
  423ca8:	orr	w0, w19, #0x800
  423cac:	b	423da4 <feof@plt+0x210a4>
  423cb0:	orr	w0, w19, #0x200
  423cb4:	b	423da4 <feof@plt+0x210a4>
  423cb8:	orr	w0, w19, #0x100
  423cbc:	b	423da4 <feof@plt+0x210a4>
  423cc0:	orr	w0, w19, #0x400
  423cc4:	b	423da4 <feof@plt+0x210a4>
  423cc8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423ccc:	add	x4, x4, #0xc56
  423cd0:	mov	w1, #0x2                   	// #2
  423cd4:	mov	x0, x20
  423cd8:	mov	w2, w3
  423cdc:	mov	w19, w3
  423ce0:	mov	w3, wzr
  423ce4:	bl	4228a4 <feof@plt+0x1fba4>
  423ce8:	mov	w3, w19
  423cec:	mov	x2, x23
  423cf0:	mov	x12, x26
  423cf4:	cmp	w28, #0x2
  423cf8:	b.ne	423d7c <feof@plt+0x2107c>  // b.any
  423cfc:	ldrb	w8, [x21]
  423d00:	cmp	w8, #0x2d
  423d04:	b.eq	423d10 <feof@plt+0x21010>  // b.none
  423d08:	cmp	w8, #0x2b
  423d0c:	b.ne	423d14 <feof@plt+0x21014>  // b.any
  423d10:	ldrb	w8, [x21, #1]!
  423d14:	ldrh	w9, [x24, w8, uxtw #1]
  423d18:	tbnz	w9, #2, 423d38 <feof@plt+0x21038>
  423d1c:	cmp	w8, #0x27
  423d20:	b.ne	423d2c <feof@plt+0x2102c>  // b.any
  423d24:	ldrb	w8, [x20, #1166]
  423d28:	cbnz	w8, 423830 <feof@plt+0x20b30>
  423d2c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423d30:	add	x4, x4, #0xc7f
  423d34:	b	423d8c <feof@plt+0x2108c>
  423d38:	and	w8, w8, #0xff
  423d3c:	add	x21, x21, #0x1
  423d40:	cmp	w8, #0x27
  423d44:	b.ne	423d58 <feof@plt+0x21058>  // b.any
  423d48:	ldrb	w8, [x20, #1166]
  423d4c:	cmp	w8, #0x0
  423d50:	cset	w22, ne  // ne = any
  423d54:	b	423d5c <feof@plt+0x2105c>
  423d58:	mov	w22, wzr
  423d5c:	ldrb	w8, [x21]
  423d60:	ldrh	w9, [x24, x8, lsl #1]
  423d64:	tbnz	w9, #2, 423d38 <feof@plt+0x21038>
  423d68:	cmp	w8, #0x27
  423d6c:	b.ne	423dc4 <feof@plt+0x210c4>  // b.any
  423d70:	ldrb	w9, [x20, #1166]
  423d74:	cbnz	w9, 423d38 <feof@plt+0x21038>
  423d78:	b	423dc4 <feof@plt+0x210c4>
  423d7c:	cmp	w25, #0x10
  423d80:	b.ne	423dc4 <feof@plt+0x210c4>  // b.any
  423d84:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423d88:	add	x4, x4, #0xc96
  423d8c:	mov	w1, #0x3                   	// #3
  423d90:	mov	x0, x20
  423d94:	mov	w2, w3
  423d98:	mov	w3, wzr
  423d9c:	bl	4228a4 <feof@plt+0x1fba4>
  423da0:	mov	w0, wzr
  423da4:	ldp	x20, x19, [sp, #96]
  423da8:	ldp	x22, x21, [sp, #80]
  423dac:	ldp	x24, x23, [sp, #64]
  423db0:	ldp	x26, x25, [sp, #48]
  423db4:	ldp	x28, x27, [sp, #32]
  423db8:	ldp	x29, x30, [sp, #16]
  423dbc:	add	sp, sp, #0x70
  423dc0:	ret
  423dc4:	cbnz	w22, 42380c <feof@plt+0x20b0c>
  423dc8:	sub	x24, x12, x21
  423dcc:	mov	x22, x2
  423dd0:	mov	x0, x20
  423dd4:	mov	x1, x21
  423dd8:	mov	x2, x24
  423ddc:	mov	w19, w3
  423de0:	mov	x26, x12
  423de4:	bl	422f18 <feof@plt+0x20218>
  423de8:	mov	w23, w0
  423dec:	cbz	w0, 423e78 <feof@plt+0x21178>
  423df0:	cmp	x26, x21
  423df4:	b.eq	423e30 <feof@plt+0x21130>  // b.none
  423df8:	ldrb	w8, [x20, #1138]
  423dfc:	cbz	w8, 423e30 <feof@plt+0x21130>
  423e00:	mov	x0, x20
  423e04:	bl	432780 <feof@plt+0x2fa80>
  423e08:	cbnz	w0, 423e30 <feof@plt+0x21130>
  423e0c:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423e10:	add	x4, x4, #0xcf4
  423e14:	mov	w1, #0x6                   	// #6
  423e18:	mov	x0, x20
  423e1c:	mov	w2, w19
  423e20:	mov	w3, wzr
  423e24:	mov	w5, w24
  423e28:	mov	x6, x21
  423e2c:	bl	4229a0 <feof@plt+0x1fca0>
  423e30:	cmp	w23, #0x20
  423e34:	b.ne	423e50 <feof@plt+0x21150>  // b.any
  423e38:	ldrb	w8, [x20, #1154]
  423e3c:	mov	w3, w19
  423e40:	cbz	w8, 423ef0 <feof@plt+0x211f0>
  423e44:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423e48:	add	x4, x4, #0xd1c
  423e4c:	b	423ed8 <feof@plt+0x211d8>
  423e50:	cmp	w25, #0xa
  423e54:	mov	w3, w19
  423e58:	b.eq	423e94 <feof@plt+0x21194>  // b.none
  423e5c:	tbz	w23, #14, 423e94 <feof@plt+0x21194>
  423e60:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423e64:	add	x4, x4, #0xd4a
  423e68:	mov	w1, #0x3                   	// #3
  423e6c:	mov	x0, x20
  423e70:	mov	w2, w3
  423e74:	b	423f10 <feof@plt+0x21210>
  423e78:	ldrb	w8, [x20, #1161]
  423e7c:	cbz	w8, 423efc <feof@plt+0x211fc>
  423e80:	mov	w23, #0x40                  	// #64
  423e84:	movk	w23, #0x100, lsl #16
  423e88:	cbz	x22, 423df0 <feof@plt+0x210f0>
  423e8c:	str	x21, [x22]
  423e90:	b	423df0 <feof@plt+0x210f0>
  423e94:	tst	w23, #0x300000
  423e98:	b.eq	423ec4 <feof@plt+0x211c4>  // b.none
  423e9c:	ldrb	w8, [x20, #1154]
  423ea0:	cbz	w8, 423ec4 <feof@plt+0x211c4>
  423ea4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423ea8:	add	x4, x4, #0xb61
  423eac:	mov	w1, #0x2                   	// #2
  423eb0:	mov	x0, x20
  423eb4:	mov	w2, w3
  423eb8:	mov	w3, wzr
  423ebc:	bl	4228a4 <feof@plt+0x1fba4>
  423ec0:	mov	w3, w19
  423ec4:	tbz	w23, #14, 423ef0 <feof@plt+0x211f0>
  423ec8:	ldrb	w8, [x20, #1154]
  423ecc:	cbz	w8, 423ef0 <feof@plt+0x211f0>
  423ed0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423ed4:	add	x4, x4, #0xd83
  423ed8:	mov	w1, #0x2                   	// #2
  423edc:	mov	x0, x20
  423ee0:	mov	w2, w3
  423ee4:	mov	w3, wzr
  423ee8:	bl	4228a4 <feof@plt+0x1fba4>
  423eec:	mov	w3, w19
  423ef0:	orr	w19, w23, #0x2
  423ef4:	tbnz	w19, #13, 423c24 <feof@plt+0x20f24>
  423ef8:	b	423c50 <feof@plt+0x20f50>
  423efc:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  423f00:	add	x4, x4, #0xcc9
  423f04:	mov	w1, #0x3                   	// #3
  423f08:	mov	x0, x20
  423f0c:	mov	w2, w19
  423f10:	mov	w3, wzr
  423f14:	mov	w5, w24
  423f18:	b	423afc <feof@plt+0x20dfc>
  423f1c:	sub	sp, sp, #0x50
  423f20:	stp	x20, x19, [sp, #64]
  423f24:	mov	x19, x8
  423f28:	ubfx	w8, w2, #12, #1
  423f2c:	stp	x29, x30, [sp, #16]
  423f30:	stp	x24, x23, [sp, #32]
  423f34:	stp	x22, x21, [sp, #48]
  423f38:	stp	xzr, xzr, [x19]
  423f3c:	strb	w8, [x19, #16]
  423f40:	strb	wzr, [x19, #17]
  423f44:	ldr	w10, [x1, #8]
  423f48:	ldr	x11, [x1, #16]
  423f4c:	add	x29, sp, #0x10
  423f50:	cmp	w10, #0x1
  423f54:	b.ne	423f68 <feof@plt+0x21268>  // b.any
  423f58:	ldrb	w8, [x11]
  423f5c:	sub	x8, x8, #0x30
  423f60:	str	x8, [x19, #8]
  423f64:	b	4241f8 <feof@plt+0x214f8>
  423f68:	ldr	x9, [x0, #1208]
  423f6c:	and	w13, w2, #0xf00
  423f70:	cmp	w13, #0x200
  423f74:	add	x12, x11, x10
  423f78:	b.eq	423fa0 <feof@plt+0x212a0>  // b.none
  423f7c:	cmp	w13, #0x800
  423f80:	b.eq	423fb4 <feof@plt+0x212b4>  // b.none
  423f84:	cmp	w13, #0x400
  423f88:	b.ne	423fd0 <feof@plt+0x212d0>  // b.any
  423f8c:	add	x11, x11, #0x1
  423f90:	mov	w10, #0x8                   	// #8
  423f94:	cmp	x11, x12
  423f98:	b.cs	423fc4 <feof@plt+0x212c4>  // b.hs, b.nlast
  423f9c:	b	423fdc <feof@plt+0x212dc>
  423fa0:	add	x11, x11, #0x2
  423fa4:	mov	w10, #0x10                  	// #16
  423fa8:	cmp	x11, x12
  423fac:	b.cs	423fc4 <feof@plt+0x212c4>  // b.hs, b.nlast
  423fb0:	b	423fdc <feof@plt+0x212dc>
  423fb4:	add	x11, x11, #0x2
  423fb8:	mov	w10, #0x2                   	// #2
  423fbc:	cmp	x11, x12
  423fc0:	b.cc	423fdc <feof@plt+0x212dc>  // b.lo, b.ul, b.last
  423fc4:	mov	x13, xzr
  423fc8:	mov	x14, xzr
  423fcc:	b	42419c <feof@plt+0x2149c>
  423fd0:	mov	w10, #0xa                   	// #10
  423fd4:	cmp	x11, x12
  423fd8:	b.cs	423fc4 <feof@plt+0x212c4>  // b.hs, b.nlast
  423fdc:	neg	x3, x9
  423fe0:	mov	x4, #0xffffffffffffffff    	// #-1
  423fe4:	subs	x16, x9, #0x40
  423fe8:	lsr	x3, x4, x3
  423fec:	mov	w5, #0x3                   	// #3
  423ff0:	lsl	x4, x4, x9
  423ff4:	csinc	x7, xzr, x3, cs  // cs = hs, nlast
  423ff8:	cmp	w10, #0x10
  423ffc:	mvn	x3, x4
  424000:	sub	x4, x7, x10
  424004:	cinc	x5, x5, eq  // eq = none
  424008:	cmp	w10, #0x2
  42400c:	mov	w6, #0x40                  	// #64
  424010:	adrp	x18, 467000 <_obstack_memory_used@@Base+0x11dd8>
  424014:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  424018:	udiv	x7, x4, x10
  42401c:	csinc	x4, x5, xzr, ne  // ne = any
  424020:	mov	x14, xzr
  424024:	mov	x13, xzr
  424028:	mov	w15, wzr
  42402c:	add	x17, x19, #0x12
  424030:	add	x18, x18, #0x3c4
  424034:	add	x1, x1, #0x2b3
  424038:	add	x7, x7, #0x1
  42403c:	sub	x5, x6, x4
  424040:	mov	w6, #0x2                   	// #2
  424044:	b	42405c <feof@plt+0x2135c>
  424048:	madd	x13, x13, x10, x20
  42404c:	str	x13, [x19, #8]
  424050:	add	x11, x11, #0x1
  424054:	cmp	x12, x11
  424058:	b.eq	424170 <feof@plt+0x21470>  // b.none
  42405c:	ldrb	w20, [x11]
  424060:	ldrh	w21, [x18, x20, lsl #1]
  424064:	tbnz	w21, #2, 424074 <feof@plt+0x21374>
  424068:	cmp	w10, #0x10
  42406c:	b.ne	4240fc <feof@plt+0x213fc>  // b.any
  424070:	tbz	w21, #8, 4240fc <feof@plt+0x213fc>
  424074:	ldrb	w20, [x1, x20]
  424078:	cmp	x13, x7
  42407c:	b.cc	424048 <feof@plt+0x21348>  // b.lo, b.ul, b.last
  424080:	lsr	x7, x14, x5
  424084:	lsl	x21, x14, x4
  424088:	lsr	x23, x13, x5
  42408c:	cmp	x7, #0x0
  424090:	lsl	x22, x13, x4
  424094:	lsl	x24, x13, #1
  424098:	extr	x13, x14, x13, #63
  42409c:	orr	x14, x21, x23
  4240a0:	cset	w21, ne  // ne = any
  4240a4:	cmp	w10, #0xa
  4240a8:	csel	x23, x13, xzr, eq  // eq = none
  4240ac:	csel	x13, x24, xzr, eq  // eq = none
  4240b0:	mvn	x7, x22
  4240b4:	adds	x13, x13, x20
  4240b8:	cset	w20, cs  // cs = hs, nlast
  4240bc:	csinc	x24, x6, xzr, cs  // cs = hs, nlast
  4240c0:	cmp	x13, x7
  4240c4:	csel	x20, x20, x24, ls  // ls = plast
  4240c8:	mvn	x7, x14
  4240cc:	add	x13, x13, x22
  4240d0:	add	x22, x20, x23
  4240d4:	cmp	x22, x7
  4240d8:	cset	w7, hi  // hi = pmore
  4240dc:	cmp	x9, #0x41
  4240e0:	orr	w20, w21, w7
  4240e4:	add	x14, x22, x14
  4240e8:	b.cc	424110 <feof@plt+0x21410>  // b.lo, b.ul, b.last
  4240ec:	cmp	x16, #0x3f
  4240f0:	b.hi	424140 <feof@plt+0x21440>  // b.pmore
  4240f4:	and	x7, x14, x3
  4240f8:	b	424130 <feof@plt+0x21430>
  4240fc:	cmp	w20, #0x27
  424100:	b.ne	424170 <feof@plt+0x21470>  // b.any
  424104:	ldrb	w20, [x0, #1166]
  424108:	cbnz	w20, 424050 <feof@plt+0x21350>
  42410c:	b	424170 <feof@plt+0x21470>
  424110:	cmp	x9, #0x40
  424114:	b.ne	424120 <feof@plt+0x21420>  // b.any
  424118:	mov	x7, xzr
  42411c:	b	424130 <feof@plt+0x21430>
  424120:	mov	x7, xzr
  424124:	cmp	x13, x3
  424128:	and	x13, x13, x3
  42412c:	b.hi	424138 <feof@plt+0x21438>  // b.pmore
  424130:	cmp	x7, x14
  424134:	b.eq	424140 <feof@plt+0x21440>  // b.none
  424138:	mov	w20, #0x1                   	// #1
  42413c:	mov	x14, x7
  424140:	ldr	w21, [sp, #8]
  424144:	ldrh	w22, [sp, #12]
  424148:	and	w15, w15, #0x1
  42414c:	orr	w15, w20, w15
  424150:	cmp	w15, #0x0
  424154:	mov	x7, xzr
  424158:	cset	w15, ne  // ne = any
  42415c:	stp	x14, x13, [x19]
  424160:	strb	w20, [x19, #17]
  424164:	strh	w22, [x17, #4]
  424168:	str	w21, [x17]
  42416c:	b	424050 <feof@plt+0x21350>
  424170:	tbnz	w2, #24, 42419c <feof@plt+0x2149c>
  424174:	tbz	w15, #0, 42419c <feof@plt+0x2149c>
  424178:	ldp	x20, x19, [sp, #64]
  42417c:	ldp	x22, x21, [sp, #48]
  424180:	ldp	x24, x23, [sp, #32]
  424184:	ldp	x29, x30, [sp, #16]
  424188:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42418c:	add	x2, x2, #0xeaa
  424190:	mov	w1, #0x2                   	// #2
  424194:	add	sp, sp, #0x50
  424198:	b	4223e4 <feof@plt+0x1f6e4>
  42419c:	cbnz	w8, 4241f8 <feof@plt+0x214f8>
  4241a0:	ldrb	w8, [x0, #1160]
  4241a4:	cbz	w8, 4241b0 <feof@plt+0x214b0>
  4241a8:	ldrb	w8, [x0, #16]
  4241ac:	cbnz	w8, 4241f8 <feof@plt+0x214f8>
  4241b0:	cmp	x9, #0x40
  4241b4:	mov	x8, #0xffffffffffffffbf    	// #-65
  4241b8:	csinv	x8, x8, xzr, hi  // hi = pmore
  4241bc:	csel	x11, x14, x13, hi  // hi = pmore
  4241c0:	add	x8, x9, x8
  4241c4:	lsr	x8, x11, x8
  4241c8:	tbz	w8, #0, 4241f8 <feof@plt+0x214f8>
  4241cc:	cmp	w10, #0xa
  4241d0:	b.ne	4241f0 <feof@plt+0x214f0>  // b.any
  4241d4:	ldrb	w8, [x0, #1152]
  4241d8:	adrp	x2, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4241dc:	add	x2, x2, #0xed5
  4241e0:	cmp	w8, #0x0
  4241e4:	cset	w8, ne  // ne = any
  4241e8:	lsl	w1, w8, #1
  4241ec:	bl	4223e4 <feof@plt+0x1f6e4>
  4241f0:	mov	w8, #0x1                   	// #1
  4241f4:	strb	w8, [x19, #16]
  4241f8:	ldp	x20, x19, [sp, #64]
  4241fc:	ldp	x22, x21, [sp, #48]
  424200:	ldp	x24, x23, [sp, #32]
  424204:	ldp	x29, x30, [sp, #16]
  424208:	add	sp, sp, #0x50
  42420c:	ret
  424210:	sub	sp, sp, #0x1b0
  424214:	stp	x29, x30, [sp, #336]
  424218:	stp	x28, x27, [sp, #352]
  42421c:	stp	x26, x25, [sp, #368]
  424220:	stp	x24, x23, [sp, #384]
  424224:	stp	x22, x21, [sp, #400]
  424228:	stp	x20, x19, [sp, #416]
  42422c:	stp	w1, wzr, [sp, #64]
  424230:	ldr	x27, [x0, #1096]
  424234:	add	x29, sp, #0x150
  424238:	add	x9, x0, #0x50
  42423c:	mov	w8, #0x16                  	// #22
  424240:	str	x9, [sp, #72]
  424244:	sub	x9, x29, #0x40
  424248:	str	wzr, [sp, #116]
  42424c:	str	wzr, [x0, #28]
  424250:	str	xzr, [x0, #432]
  424254:	sub	x10, x29, #0x28
  424258:	adrp	x23, 461000 <_obstack_memory_used@@Base+0xbdd8>
  42425c:	str	w8, [x27, #36]
  424260:	add	x8, x9, #0x12
  424264:	mov	x19, x0
  424268:	mov	w25, wzr
  42426c:	sub	x22, x29, #0x58
  424270:	add	x23, x23, #0x9da
  424274:	mov	x21, #0xffffffffffffffff    	// #-1
  424278:	str	x8, [sp, #104]
  42427c:	add	x8, x10, #0x12
  424280:	str	x8, [sp, #96]
  424284:	mov	w24, #0x1                   	// #1
  424288:	mov	x28, x27
  42428c:	add	x27, x27, #0x8
  424290:	b	4242f0 <feof@plt+0x215f0>
  424294:	lsl	x10, x21, x10
  424298:	mov	x9, xzr
  42429c:	bic	x8, x8, x10
  4242a0:	ldr	w11, [sp, #120]
  4242a4:	ldrh	w12, [sp, #124]
  4242a8:	mov	w10, wzr
  4242ac:	str	w11, [sp, #128]
  4242b0:	strh	w12, [sp, #132]
  4242b4:	cmp	w10, #0x0
  4242b8:	cset	w10, ne  // ne = any
  4242bc:	stp	x9, x8, [x22, #24]
  4242c0:	ldrh	w8, [sp, #132]
  4242c4:	ldr	w9, [sp, #128]
  4242c8:	sturb	w10, [x29, #-48]
  4242cc:	ldr	x10, [sp, #104]
  4242d0:	sturb	wzr, [x29, #-47]
  4242d4:	strh	w8, [x10, #4]
  4242d8:	str	w9, [x10]
  4242dc:	ldr	x8, [x22, #40]
  4242e0:	ldur	q0, [x22, #24]
  4242e4:	mov	w24, wzr
  4242e8:	str	x8, [x27, #16]
  4242ec:	str	q0, [x27]
  4242f0:	add	x1, sp, #0x74
  4242f4:	mov	x0, x19
  4242f8:	add	w25, w25, #0x1
  4242fc:	bl	43277c <feof@plt+0x2fa7c>
  424300:	ldrb	w20, [x0, #4]
  424304:	ldr	w2, [sp, #116]
  424308:	mov	x26, x0
  42430c:	sub	w8, w20, #0x37
  424310:	cmp	w8, #0x6
  424314:	b.cc	424338 <feof@plt+0x21638>  // b.lo, b.ul, b.last
  424318:	cmp	w20, #0x35
  42431c:	b.hi	424778 <feof@plt+0x21a78>  // b.pmore
  424320:	adrp	x10, 461000 <_obstack_memory_used@@Base+0xbdd8>
  424324:	add	x10, x10, #0x96e
  424328:	adr	x8, 424338 <feof@plt+0x21638>
  42432c:	ldrh	w9, [x10, x20, lsl #1]
  424330:	add	x8, x8, x9, lsl #2
  424334:	br	x8
  424338:	tbz	w24, #0, 425994 <feof@plt+0x22c94>
  42433c:	sub	w8, w20, #0x25
  424340:	cmp	w8, #0x17
  424344:	stur	wzr, [x29, #-88]
  424348:	b.hi	425b30 <feof@plt+0x22e30>  // b.pmore
  42434c:	adr	x9, 42435c <feof@plt+0x2165c>
  424350:	ldrh	w10, [x23, x8, lsl #1]
  424354:	add	x9, x9, x10, lsl #2
  424358:	br	x9
  42435c:	sub	x2, x29, #0x28
  424360:	sub	x3, x29, #0x58
  424364:	mov	x0, x19
  424368:	mov	x1, x26
  42436c:	bl	41c1e8 <feof@plt+0x194e8>
  424370:	ldur	w10, [x29, #-88]
  424374:	mov	x9, xzr
  424378:	mov	w8, w0
  42437c:	tbz	w0, #31, 4242b4 <feof@plt+0x215b4>
  424380:	cbnz	w10, 4242b4 <feof@plt+0x215b4>
  424384:	ldr	w9, [sp, #128]
  424388:	ldrh	w10, [sp, #132]
  42438c:	orr	x8, x8, #0xffffffff00000000
  424390:	str	w9, [sp, #120]
  424394:	strh	w10, [sp, #124]
  424398:	ldr	x10, [x19, #1208]
  42439c:	cmp	x10, #0x41
  4243a0:	b.cc	4243bc <feof@plt+0x216bc>  // b.lo, b.ul, b.last
  4243a4:	sub	x9, x10, #0x40
  4243a8:	cmp	x9, #0x3f
  4243ac:	b.hi	4244d8 <feof@plt+0x217d8>  // b.pmore
  4243b0:	lsl	x9, x21, x9
  4243b4:	mvn	x9, x9
  4243b8:	b	4242a0 <feof@plt+0x215a0>
  4243bc:	cmp	x10, #0x40
  4243c0:	b.ne	424294 <feof@plt+0x21594>  // b.any
  4243c4:	mov	x9, xzr
  4243c8:	b	4242a0 <feof@plt+0x215a0>
  4243cc:	mov	x0, x19
  4243d0:	mov	x1, x26
  4243d4:	mov	w3, w2
  4243d8:	mov	x2, xzr
  4243dc:	mov	w20, w3
  4243e0:	bl	4235fc <feof@plt+0x208fc>
  4243e4:	mov	w24, w0
  4243e8:	stur	w0, [x29, #-40]
  4243ec:	tbz	w0, #24, 424404 <feof@plt+0x21704>
  4243f0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4243f4:	mov	w1, #0x3                   	// #3
  4243f8:	mov	x0, x19
  4243fc:	add	x2, x2, #0x1e
  424400:	bl	4223e4 <feof@plt+0x1f6e4>
  424404:	and	w8, w24, #0xf
  424408:	cmp	w8, #0x1
  42440c:	b.eq	424584 <feof@plt+0x21884>  // b.none
  424410:	cmp	w8, #0x2
  424414:	b.ne	42469c <feof@plt+0x2199c>  // b.any
  424418:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42441c:	mov	w2, w20
  424420:	mov	w1, #0x3                   	// #3
  424424:	mov	x0, x19
  424428:	mov	w3, wzr
  42442c:	add	x4, x4, #0x4e
  424430:	b	424698 <feof@plt+0x21998>
  424434:	ldrb	w8, [x19, #18]
  424438:	cbnz	w8, 4246dc <feof@plt+0x219dc>
  42443c:	ldrb	w8, [x19, #1154]
  424440:	cbz	w8, 4246bc <feof@plt+0x219bc>
  424444:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424448:	mov	w1, #0x2                   	// #2
  42444c:	mov	x0, x19
  424450:	mov	w3, wzr
  424454:	add	x4, x4, #0xcb
  424458:	bl	4228a4 <feof@plt+0x1fba4>
  42445c:	b	4246dc <feof@plt+0x219dc>
  424460:	ldr	x8, [x26, #8]
  424464:	ldr	x9, [x19, #1248]
  424468:	cmp	x8, x9
  42446c:	b.eq	4244e0 <feof@plt+0x217e0>  // b.none
  424470:	ldr	x9, [x19, #1288]
  424474:	cmp	x8, x9
  424478:	b.eq	4245a0 <feof@plt+0x218a0>  // b.none
  42447c:	ldr	x9, [x19, #1296]
  424480:	cmp	x8, x9
  424484:	b.eq	4246a8 <feof@plt+0x219a8>  // b.none
  424488:	ldrb	w9, [x19, #1120]
  42448c:	cbz	w9, 4244a8 <feof@plt+0x217a8>
  424490:	ldr	x11, [x19, #1256]
  424494:	cmp	x8, x11
  424498:	b.eq	4246f8 <feof@plt+0x219f8>  // b.none
  42449c:	ldr	x9, [x19, #1264]
  4244a0:	cmp	x8, x9
  4244a4:	b.eq	4246f8 <feof@plt+0x219f8>  // b.none
  4244a8:	ldrb	w9, [x19, #1149]
  4244ac:	cbz	w9, 42469c <feof@plt+0x2199c>
  4244b0:	ldr	w9, [x19, #28]
  4244b4:	cbnz	w9, 42469c <feof@plt+0x2199c>
  4244b8:	ldr	x5, [x8]
  4244bc:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4244c0:	mov	w1, #0xd                   	// #13
  4244c4:	mov	x0, x19
  4244c8:	mov	w3, wzr
  4244cc:	add	x4, x4, #0xa7
  4244d0:	bl	4229a0 <feof@plt+0x1fca0>
  4244d4:	b	42469c <feof@plt+0x2199c>
  4244d8:	mov	x9, #0xffffffffffffffff    	// #-1
  4244dc:	b	4242a0 <feof@plt+0x215a0>
  4244e0:	ldrb	w8, [x19, #24]
  4244e4:	ldr	x20, [x19, #136]
  4244e8:	mov	x0, x19
  4244ec:	add	w8, w8, #0x1
  4244f0:	strb	w8, [x19, #24]
  4244f4:	bl	432114 <feof@plt+0x2f414>
  4244f8:	ldrb	w8, [x0, #4]
  4244fc:	cmp	w8, #0x14
  424500:	b.ne	4245b4 <feof@plt+0x218b4>  // b.any
  424504:	mov	x0, x19
  424508:	bl	432114 <feof@plt+0x2f414>
  42450c:	ldrb	w8, [x0, #4]
  424510:	mov	x21, x0
  424514:	mov	w9, #0x1                   	// #1
  424518:	cmp	w8, #0x35
  42451c:	b.eq	4245c4 <feof@plt+0x218c4>  // b.none
  424520:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424524:	mov	w1, #0x3                   	// #3
  424528:	mov	x0, x19
  42452c:	add	x2, x2, #0x14b
  424530:	bl	4223e4 <feof@plt+0x1f6e4>
  424534:	ldrb	w8, [x21, #6]
  424538:	tbz	w8, #4, 424720 <feof@plt+0x21a20>
  42453c:	sturh	wzr, [x29, #-34]
  424540:	ldrb	w8, [x21, #4]
  424544:	mov	x0, x19
  424548:	mov	x1, x21
  42454c:	sturb	w8, [x29, #-36]
  424550:	bl	42d084 <feof@plt+0x2a384>
  424554:	mov	x21, x0
  424558:	sub	x1, x29, #0x28
  42455c:	mov	x0, x19
  424560:	bl	42d084 <feof@plt+0x2a384>
  424564:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424568:	mov	x4, x0
  42456c:	mov	w1, #0x3                   	// #3
  424570:	mov	x0, x19
  424574:	add	x2, x2, #0x175
  424578:	mov	x3, x21
  42457c:	bl	4223e4 <feof@plt+0x1f6e4>
  424580:	b	424720 <feof@plt+0x21a20>
  424584:	tbnz	w24, #13, 424680 <feof@plt+0x21980>
  424588:	sub	x8, x29, #0x40
  42458c:	mov	x0, x19
  424590:	mov	x1, x26
  424594:	mov	w2, w24
  424598:	bl	423f1c <feof@plt+0x2121c>
  42459c:	b	4242dc <feof@plt+0x215dc>
  4245a0:	sub	x8, x29, #0x40
  4245a4:	mov	x0, x19
  4245a8:	mov	w1, wzr
  4245ac:	bl	425c1c <feof@plt+0x22f1c>
  4245b0:	b	4242dc <feof@plt+0x215dc>
  4245b4:	mov	x21, x0
  4245b8:	mov	w9, wzr
  4245bc:	cmp	w8, #0x35
  4245c0:	b.ne	424520 <feof@plt+0x21820>  // b.any
  4245c4:	ldr	x21, [x21, #8]
  4245c8:	cbz	w9, 4245e0 <feof@plt+0x218e0>
  4245cc:	mov	x0, x19
  4245d0:	bl	432114 <feof@plt+0x2f414>
  4245d4:	ldrb	w8, [x0, #4]
  4245d8:	cmp	w8, #0x15
  4245dc:	b.ne	42470c <feof@plt+0x21a0c>  // b.any
  4245e0:	cbz	x21, 424720 <feof@plt+0x21a20>
  4245e4:	ldr	x8, [sp, #72]
  4245e8:	cmp	x20, x8
  4245ec:	b.ne	4245fc <feof@plt+0x218fc>  // b.any
  4245f0:	ldr	x8, [x19, #136]
  4245f4:	cmp	x8, x20
  4245f8:	b.eq	424618 <feof@plt+0x21918>  // b.none
  4245fc:	ldrb	w8, [x19, #1150]
  424600:	cbz	w8, 424618 <feof@plt+0x21918>
  424604:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424608:	mov	w1, #0x18                  	// #24
  42460c:	mov	x0, x19
  424610:	add	x2, x2, #0x1a4
  424614:	bl	422644 <feof@plt+0x1f944>
  424618:	ldrh	w8, [x21, #18]
  42461c:	and	w9, w8, #0x3
  424620:	cmp	w9, #0x2
  424624:	b.ne	42463c <feof@plt+0x2193c>  // b.any
  424628:	ldr	x8, [x21, #24]
  42462c:	ldrb	w9, [x8, #19]
  424630:	orr	w9, w9, #0x20
  424634:	strb	w9, [x8, #19]
  424638:	ldrh	w8, [x21, #18]
  42463c:	tbnz	w8, #7, 42464c <feof@plt+0x2194c>
  424640:	mov	x0, x19
  424644:	mov	x1, x21
  424648:	bl	433804 <feof@plt+0x30b04>
  42464c:	ldrb	w8, [x19, #24]
  424650:	str	x21, [x19, #432]
  424654:	sub	w8, w8, #0x1
  424658:	strb	w8, [x19, #24]
  42465c:	sturh	wzr, [x29, #-48]
  424660:	str	xzr, [x22, #24]
  424664:	ldrh	w9, [x21, #18]
  424668:	mov	x8, xzr
  42466c:	tbz	w9, #1, 424738 <feof@plt+0x21a38>
  424670:	mov	w8, #0xffffffff            	// #-1
  424674:	eor	w8, w8, w9, lsr #8
  424678:	and	x8, x8, #0x1
  42467c:	b	424738 <feof@plt+0x21a38>
  424680:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424684:	mov	w2, w20
  424688:	mov	w1, #0x3                   	// #3
  42468c:	mov	x0, x19
  424690:	mov	w3, wzr
  424694:	add	x4, x4, #0x7b
  424698:	bl	4228a4 <feof@plt+0x1fba4>
  42469c:	mov	w10, wzr
  4246a0:	mov	x8, xzr
  4246a4:	b	4246f0 <feof@plt+0x219f0>
  4246a8:	sub	x8, x29, #0x40
  4246ac:	mov	w1, #0x1                   	// #1
  4246b0:	mov	x0, x19
  4246b4:	bl	425c1c <feof@plt+0x22f1c>
  4246b8:	b	4242dc <feof@plt+0x215dc>
  4246bc:	ldrb	w8, [x19, #1132]
  4246c0:	cbz	w8, 4246dc <feof@plt+0x219dc>
  4246c4:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4246c8:	mov	w1, #0x1                   	// #1
  4246cc:	mov	x0, x19
  4246d0:	mov	w3, wzr
  4246d4:	add	x4, x4, #0xea
  4246d8:	bl	4229a0 <feof@plt+0x1fca0>
  4246dc:	sub	x1, x29, #0x28
  4246e0:	mov	x0, x19
  4246e4:	bl	41fcd8 <feof@plt+0x1cfd8>
  4246e8:	ldur	w8, [x29, #-40]
  4246ec:	ldur	w10, [x29, #-88]
  4246f0:	mov	x9, xzr
  4246f4:	b	4242b4 <feof@plt+0x215b4>
  4246f8:	cmp	x8, x11
  4246fc:	mov	w10, wzr
  424700:	mov	x9, xzr
  424704:	cset	w8, eq  // eq = none
  424708:	b	4242b4 <feof@plt+0x215b4>
  42470c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424710:	mov	w1, #0x3                   	// #3
  424714:	mov	x0, x19
  424718:	add	x2, x2, #0x12f
  42471c:	bl	4223e4 <feof@plt+0x1f6e4>
  424720:	ldrb	w9, [x19, #24]
  424724:	mov	x8, xzr
  424728:	sub	w9, w9, #0x1
  42472c:	strb	w9, [x19, #24]
  424730:	sturh	wzr, [x29, #-48]
  424734:	str	xzr, [x22, #24]
  424738:	str	x8, [x22, #32]
  42473c:	mov	x21, #0xffffffffffffffff    	// #-1
  424740:	b	4242dc <feof@plt+0x215dc>
  424744:	cmp	w25, #0x1
  424748:	cset	w8, eq  // eq = none
  42474c:	mov	w20, #0x1                   	// #1
  424750:	str	w8, [sp, #68]
  424754:	b	424780 <feof@plt+0x21a80>
  424758:	tst	w24, #0x1
  42475c:	mov	w8, #0x1b                  	// #27
  424760:	csel	w20, w8, w20, ne  // ne = any
  424764:	b	424780 <feof@plt+0x21a80>
  424768:	tst	w24, #0x1
  42476c:	mov	w8, #0x1c                  	// #28
  424770:	csel	w20, w8, w20, ne  // ne = any
  424774:	b	424780 <feof@plt+0x21a80>
  424778:	cmp	w20, #0x1b
  42477c:	b.cs	4259e8 <feof@plt+0x22ce8>  // b.hs, b.nlast
  424780:	mov	w8, #0x4002                	// #16386
  424784:	movk	w8, #0x1810, lsl #16
  424788:	mov	x27, x28
  42478c:	lsr	x8, x8, x20
  424790:	str	w2, [sp, #84]
  424794:	tbnz	w8, #0, 4247c0 <feof@plt+0x21ac0>
  424798:	tbz	w24, #0, 4247f4 <feof@plt+0x21af4>
  42479c:	subs	w8, w20, #0x15
  4247a0:	b.eq	4247c8 <feof@plt+0x21ac8>  // b.none
  4247a4:	ldr	w2, [sp, #84]
  4247a8:	cmp	w20, #0x16
  4247ac:	b.ne	4247dc <feof@plt+0x21adc>  // b.any
  4247b0:	ldr	w9, [x27, #36]
  4247b4:	cmp	w9, #0x16
  4247b8:	b.ne	4247e0 <feof@plt+0x21ae0>  // b.any
  4247bc:	b	425ae8 <feof@plt+0x22de8>
  4247c0:	tbnz	w24, #0, 4247f4 <feof@plt+0x21af4>
  4247c4:	b	425a68 <feof@plt+0x22d68>
  4247c8:	ldr	w9, [x27, #36]
  4247cc:	ldr	w2, [sp, #84]
  4247d0:	cmp	w9, #0x14
  4247d4:	b.ne	4247e0 <feof@plt+0x21ae0>  // b.any
  4247d8:	b	425b14 <feof@plt+0x22e14>
  4247dc:	ldr	w9, [x27, #36]
  4247e0:	orr	w9, w9, #0x2
  4247e4:	cmp	w9, #0x16
  4247e8:	b.ne	425a98 <feof@plt+0x22d98>  // b.any
  4247ec:	cmp	w8, #0x2
  4247f0:	b.cs	425ab4 <feof@plt+0x22db4>  // b.hs, b.nlast
  4247f4:	mov	x21, x27
  4247f8:	ldr	w3, [x21, #36]!
  4247fc:	sub	w8, w3, #0x1
  424800:	cmp	w8, #0x1b
  424804:	b.ls	424824 <feof@plt+0x21b24>  // b.plast
  424808:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42480c:	mov	w1, #0x4                   	// #4
  424810:	mov	x0, x19
  424814:	add	x2, x2, #0x226
  424818:	bl	4223e4 <feof@plt+0x1f6e4>
  42481c:	mov	x27, xzr
  424820:	b	42482c <feof@plt+0x21b2c>
  424824:	cmp	w20, #0x14
  424828:	b.ne	424864 <feof@plt+0x21b64>  // b.any
  42482c:	ldr	w2, [sp, #84]
  424830:	mov	x21, #0xffffffffffffffff    	// #-1
  424834:	cbz	x27, 4259c4 <feof@plt+0x22cc4>
  424838:	cmp	w20, #0x16
  42483c:	b.eq	425a08 <feof@plt+0x22d08>  // b.none
  424840:	sub	w8, w20, #0xf
  424844:	cmp	w8, #0x6
  424848:	b.hi	425948 <feof@plt+0x22c48>  // b.pmore
  42484c:	adrp	x11, 461000 <_obstack_memory_used@@Base+0xbdd8>
  424850:	add	x11, x11, #0xa42
  424854:	adr	x9, 424288 <feof@plt+0x21588>
  424858:	ldrh	w10, [x11, x8, lsl #1]
  42485c:	add	x9, x9, x10, lsl #2
  424860:	br	x9
  424864:	adrp	x10, 461000 <_obstack_memory_used@@Base+0xbdd8>
  424868:	lsl	x8, x20, #1
  42486c:	add	x10, x10, #0xa50
  424870:	lsl	x9, x3, #1
  424874:	ldrb	w8, [x10, x8]
  424878:	ldrb	w9, [x10, x9]
  42487c:	mov	w10, #0xbffc                	// #49148
  424880:	movk	w10, #0x78d, lsl #16
  424884:	lsr	x10, x10, x20
  424888:	ldr	w2, [sp, #84]
  42488c:	and	w10, w10, #0x1
  424890:	sub	w28, w8, w10
  424894:	cmp	w28, w9
  424898:	b.cs	425840 <feof@plt+0x22b40>  // b.hs, b.nlast
  42489c:	str	w28, [sp, #52]
  4248a0:	str	w25, [sp, #32]
  4248a4:	b	4248d8 <feof@plt+0x21bd8>
  4248a8:	ldr	w3, [x27, #-4]!
  4248ac:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4248b0:	add	x9, x9, #0xa50
  4248b4:	ldr	w2, [sp, #84]
  4248b8:	lsl	x8, x3, #1
  4248bc:	ldrb	w8, [x9, x8]
  4248c0:	mov	x21, x27
  4248c4:	mov	x27, x23
  4248c8:	adrp	x23, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4248cc:	cmp	w28, w8
  4248d0:	add	x23, x23, #0x9da
  4248d4:	b.cs	425840 <feof@plt+0x22b40>  // b.hs, b.nlast
  4248d8:	ldrb	w8, [x19, #1141]
  4248dc:	cbz	w8, 4249c0 <feof@plt+0x21cc0>
  4248e0:	mov	w8, #0xffc                 	// #4092
  4248e4:	movk	w8, #0x604, lsl #16
  4248e8:	lsr	x8, x8, x3
  4248ec:	tbz	w8, #0, 4249c0 <feof@plt+0x21cc0>
  4248f0:	ldrb	w9, [x27, #24]
  4248f4:	ldurb	w8, [x27, #-16]
  4248f8:	cmp	w9, w8
  4248fc:	b.eq	4249c0 <feof@plt+0x21cc0>  // b.none
  424900:	ldr	x8, [x19, #1208]
  424904:	cmp	x8, #0x40
  424908:	cbz	w9, 424964 <feof@plt+0x21c64>
  42490c:	mov	x9, #0xffffffffffffffe8    	// #-24
  424910:	mov	x10, #0xffffffffffffffe0    	// #-32
  424914:	csel	x9, x10, x9, hi  // hi = pmore
  424918:	ldr	x9, [x27, x9]
  42491c:	mov	x10, #0xffffffffffffffbf    	// #-65
  424920:	csinv	x10, x10, xzr, hi  // hi = pmore
  424924:	add	x8, x8, x10
  424928:	lsr	x8, x9, x8
  42492c:	tbz	w8, #0, 4249c0 <feof@plt+0x21cc0>
  424930:	ldur	w8, [x27, #-8]
  424934:	ldr	x1, [x27]
  424938:	mov	x0, x19
  42493c:	str	w8, [sp, #88]
  424940:	bl	42d084 <feof@plt+0x2a384>
  424944:	ldr	w2, [sp, #88]
  424948:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42494c:	mov	x5, x0
  424950:	mov	x0, x19
  424954:	mov	w1, wzr
  424958:	mov	w3, wzr
  42495c:	add	x4, x4, #0x2b9
  424960:	b	4249b8 <feof@plt+0x21cb8>
  424964:	mov	w9, #0x10                  	// #16
  424968:	mov	w10, #0x8                   	// #8
  42496c:	csel	x9, x10, x9, hi  // hi = pmore
  424970:	ldr	x9, [x27, x9]
  424974:	mov	x10, #0xffffffffffffffbf    	// #-65
  424978:	csinv	x10, x10, xzr, hi  // hi = pmore
  42497c:	add	x8, x8, x10
  424980:	lsr	x8, x9, x8
  424984:	tbz	w8, #0, 4249c0 <feof@plt+0x21cc0>
  424988:	ldr	w8, [x27, #32]
  42498c:	ldr	x1, [x27]
  424990:	mov	x0, x19
  424994:	str	w8, [sp, #88]
  424998:	bl	42d084 <feof@plt+0x2a384>
  42499c:	ldr	w2, [sp, #88]
  4249a0:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4249a4:	mov	x5, x0
  4249a8:	mov	x0, x19
  4249ac:	mov	w1, wzr
  4249b0:	mov	w3, wzr
  4249b4:	add	x4, x4, #0x2ed
  4249b8:	bl	4228a4 <feof@plt+0x1fba4>
  4249bc:	ldr	w2, [sp, #84]
  4249c0:	ldr	w8, [x21]
  4249c4:	sub	w9, w8, #0x1
  4249c8:	cmp	w9, #0x1b
  4249cc:	b.hi	425890 <feof@plt+0x22b90>  // b.pmore
  4249d0:	adrp	x12, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4249d4:	add	x12, x12, #0xa0a
  4249d8:	adr	x10, 4249e8 <feof@plt+0x21ce8>
  4249dc:	ldrh	w11, [x12, x9, lsl #1]
  4249e0:	add	x10, x10, x11, lsl #2
  4249e4:	br	x10
  4249e8:	ldur	x8, [x27, #-16]
  4249ec:	ldur	q0, [x27, #-32]
  4249f0:	sub	x1, x29, #0x80
  4249f4:	sub	x2, x29, #0xa0
  4249f8:	stur	x8, [x29, #-112]
  4249fc:	stur	q0, [x29, #-128]
  424a00:	ldr	x8, [x27, #24]
  424a04:	ldur	q0, [x27, #8]
  424a08:	mov	x0, x19
  424a0c:	stur	x8, [x29, #-144]
  424a10:	stur	q0, [x29, #-160]
  424a14:	ldr	w3, [x21]
  424a18:	sub	x8, x29, #0x28
  424a1c:	bl	425da8 <feof@plt+0x230a8>
  424a20:	ldr	x8, [x22, #64]
  424a24:	ldr	q0, [x22, #48]
  424a28:	stur	x8, [x27, #-16]
  424a2c:	stur	q0, [x27, #-32]
  424a30:	b	4257f8 <feof@plt+0x22af8>
  424a34:	ldrh	w9, [x27, #30]
  424a38:	ldur	w21, [x27, #26]
  424a3c:	ldp	x23, x28, [x27, #8]
  424a40:	str	x27, [sp, #56]
  424a44:	ldrb	w27, [x27, #24]
  424a48:	cmp	w8, #0xe
  424a4c:	bfi	x21, x9, #32, #32
  424a50:	b.eq	424c90 <feof@plt+0x21f90>  // b.none
  424a54:	cmp	w8, #0x1c
  424a58:	b.eq	424cc4 <feof@plt+0x21fc4>  // b.none
  424a5c:	cmp	w8, #0x1b
  424a60:	b.ne	424cfc <feof@plt+0x21ffc>  // b.any
  424a64:	ldrb	w8, [x19, #1138]
  424a68:	cbz	w8, 424fc0 <feof@plt+0x222c0>
  424a6c:	ldr	w8, [x19, #28]
  424a70:	cbz	w8, 424fe8 <feof@plt+0x222e8>
  424a74:	mov	w8, wzr
  424a78:	b	424fc0 <feof@plt+0x222c0>
  424a7c:	mov	x8, x27
  424a80:	ldr	w10, [x8, #-14]!
  424a84:	ldrh	w12, [x8, #4]
  424a88:	ldur	x9, [x8, #-18]
  424a8c:	ldur	x11, [x8, #-10]
  424a90:	ldurb	w14, [x8, #-2]
  424a94:	str	w10, [sp, #168]
  424a98:	strh	w12, [sp, #172]
  424a9c:	ldrb	w15, [x8, #38]
  424aa0:	ldur	x10, [x8, #22]
  424aa4:	ldur	x12, [x8, #30]
  424aa8:	ldr	w13, [x21]
  424aac:	orr	w14, w15, w14
  424ab0:	cbnz	w14, 424dc0 <feof@plt+0x220c0>
  424ab4:	ldr	x14, [x19, #1208]
  424ab8:	subs	x15, x14, #0x41
  424abc:	b.cc	424d94 <feof@plt+0x22094>  // b.lo, b.ul, b.last
  424ac0:	mov	w14, #0x1                   	// #1
  424ac4:	lsl	x15, x14, x15
  424ac8:	and	x14, x15, x9
  424acc:	and	x15, x15, x10
  424ad0:	b	424da8 <feof@plt+0x220a8>
  424ad4:	mov	x8, x27
  424ad8:	ldr	w9, [x8, #-14]!
  424adc:	ldrh	w12, [x8, #4]
  424ae0:	ldurb	w13, [x8, #-2]
  424ae4:	ldur	x10, [x8, #-18]
  424ae8:	ldur	x11, [x8, #-10]
  424aec:	str	w9, [sp, #152]
  424af0:	strh	w12, [sp, #156]
  424af4:	ldrb	w9, [x8, #38]
  424af8:	ldr	w14, [x21]
  424afc:	cmp	w13, #0x0
  424b00:	ldur	x12, [x8, #22]
  424b04:	ldur	x13, [x8, #30]
  424b08:	csinc	w9, w9, wzr, eq  // eq = none
  424b0c:	cmp	w14, #0xa
  424b10:	b.eq	424d18 <feof@plt+0x22018>  // b.none
  424b14:	cmp	w14, #0x9
  424b18:	b.ne	424d24 <feof@plt+0x22024>  // b.any
  424b1c:	and	x11, x13, x11
  424b20:	and	x10, x12, x10
  424b24:	b	424d2c <feof@plt+0x2202c>
  424b28:	mov	x23, x27
  424b2c:	ldr	w8, [x23, #-14]!
  424b30:	ldrh	w9, [x23, #4]
  424b34:	ldur	x4, [x23, #-18]
  424b38:	ldur	x16, [x23, #-10]
  424b3c:	ldurb	w3, [x23, #-2]
  424b40:	ldurb	w17, [x23, #-1]
  424b44:	str	w8, [sp, #136]
  424b48:	strh	w9, [sp, #140]
  424b4c:	ldur	x10, [x23, #22]
  424b50:	ldur	x11, [x23, #30]
  424b54:	ldrh	w9, [x23, #44]
  424b58:	ldr	w8, [x23, #40]
  424b5c:	ldr	w1, [x21]
  424b60:	ldur	w2, [x23, #46]
  424b64:	cbz	w3, 424e3c <feof@plt+0x2213c>
  424b68:	ldr	x0, [x19, #1208]
  424b6c:	b	424e4c <feof@plt+0x2214c>
  424b70:	ldurh	w8, [x27, #-10]
  424b74:	ldur	w9, [x27, #-14]
  424b78:	ldp	x10, x11, [x27, #-32]
  424b7c:	strh	w8, [sp, #164]
  424b80:	str	w9, [sp, #160]
  424b84:	ldp	x12, x13, [x27, #8]
  424b88:	ldr	w14, [x21]
  424b8c:	sturh	w8, [x29, #-36]
  424b90:	stur	w9, [x29, #-40]
  424b94:	cmp	x11, x13
  424b98:	cset	w8, eq  // eq = none
  424b9c:	cmp	x10, x12
  424ba0:	cset	w9, eq  // eq = none
  424ba4:	cmp	w14, #0x18
  424ba8:	and	w8, w9, w8
  424bac:	cset	w9, eq  // eq = none
  424bb0:	eor	w8, w9, w8
  424bb4:	sturh	wzr, [x27, #-16]
  424bb8:	stp	xzr, x8, [x27, #-32]
  424bbc:	ldurh	w8, [x29, #-36]
  424bc0:	ldur	w9, [x29, #-40]
  424bc4:	sturh	w8, [x27, #-10]
  424bc8:	stur	w9, [x27, #-14]
  424bcc:	b	4257f8 <feof@plt+0x22af8>
  424bd0:	ldp	x12, x14, [x27, #-32]
  424bd4:	ldurb	w8, [x27, #-16]
  424bd8:	ldp	x11, x13, [x27, #8]
  424bdc:	cbz	w8, 424ed8 <feof@plt+0x221d8>
  424be0:	ldr	x8, [x19, #1208]
  424be4:	mov	w9, wzr
  424be8:	mov	w10, #0x1                   	// #1
  424bec:	mov	x6, #0xffffffffffffffff    	// #-1
  424bf0:	b	4255e4 <feof@plt+0x228e4>
  424bf4:	ldp	x9, x8, [x27, #-32]
  424bf8:	orr	x9, x9, x8
  424bfc:	sub	x8, x27, #0x28
  424c00:	cbnz	x9, 424d4c <feof@plt+0x2204c>
  424c04:	ldr	w10, [x19, #28]
  424c08:	sub	w10, w10, #0x1
  424c0c:	str	w10, [x19, #28]
  424c10:	b	424d5c <feof@plt+0x2205c>
  424c14:	ldp	x9, x8, [x27, #-32]
  424c18:	orr	x9, x9, x8
  424c1c:	sub	x8, x27, #0x28
  424c20:	cbz	x9, 424d4c <feof@plt+0x2204c>
  424c24:	ldr	w9, [x19, #28]
  424c28:	sub	w9, w9, #0x1
  424c2c:	str	w9, [x19, #28]
  424c30:	mov	w9, #0x1                   	// #1
  424c34:	b	424d5c <feof@plt+0x2205c>
  424c38:	mov	x8, x27
  424c3c:	ldr	x9, [x8, #-72]!
  424c40:	ldr	x10, [x8, #8]
  424c44:	orr	x9, x9, x10
  424c48:	cbz	x9, 424c5c <feof@plt+0x21f5c>
  424c4c:	ldr	w9, [x19, #28]
  424c50:	sub	w9, w9, #0x1
  424c54:	str	w9, [x19, #28]
  424c58:	mov	x9, #0xffffffffffffffff    	// #-1
  424c5c:	mov	w10, #0x28                  	// #40
  424c60:	madd	x9, x9, x10, x27
  424c64:	ldr	x10, [x9, #24]
  424c68:	ldur	q0, [x9, #8]
  424c6c:	str	x10, [x8, #16]
  424c70:	str	q0, [x8], #-8
  424c74:	ldr	w9, [x9, #32]
  424c78:	ldurb	w10, [x27, #-16]
  424c7c:	stur	w9, [x27, #-48]
  424c80:	cbz	w10, 424ef4 <feof@plt+0x221f4>
  424c84:	mov	w9, #0x1                   	// #1
  424c88:	sturb	w9, [x27, #-56]
  424c8c:	b	424d6c <feof@plt+0x2206c>
  424c90:	ldr	x9, [x19, #1208]
  424c94:	mvn	x28, x28
  424c98:	cmp	x9, #0x41
  424c9c:	b.cc	424e84 <feof@plt+0x22184>  // b.lo, b.ul, b.last
  424ca0:	sub	x9, x9, #0x40
  424ca4:	cmp	x9, #0x3f
  424ca8:	mvn	x23, x23
  424cac:	mov	w8, wzr
  424cb0:	b.hi	424fc0 <feof@plt+0x222c0>  // b.pmore
  424cb4:	mov	x10, #0xffffffffffffffff    	// #-1
  424cb8:	lsl	x9, x10, x9
  424cbc:	bic	x23, x23, x9
  424cc0:	b	424fc0 <feof@plt+0x222c0>
  424cc4:	ldr	x8, [x19, #1208]
  424cc8:	neg	x9, x23
  424ccc:	cmp	x28, #0x0
  424cd0:	csinv	x10, x9, x23, eq  // eq = none
  424cd4:	cmp	x8, #0x41
  424cd8:	neg	x9, x28
  424cdc:	b.cc	424e98 <feof@plt+0x22198>  // b.lo, b.ul, b.last
  424ce0:	sub	x8, x8, #0x40
  424ce4:	cmp	x8, #0x3f
  424ce8:	b.hi	424f88 <feof@plt+0x22288>  // b.pmore
  424cec:	mov	x11, #0xffffffffffffffff    	// #-1
  424cf0:	lsl	x8, x11, x8
  424cf4:	bic	x10, x10, x8
  424cf8:	b	424f88 <feof@plt+0x22288>
  424cfc:	orr	x9, x28, x23
  424d00:	cmp	x9, #0x0
  424d04:	mov	w27, wzr
  424d08:	mov	w8, wzr
  424d0c:	cset	w28, eq  // eq = none
  424d10:	mov	x23, xzr
  424d14:	b	424fc0 <feof@plt+0x222c0>
  424d18:	orr	x11, x13, x11
  424d1c:	orr	x10, x12, x10
  424d20:	b	424d2c <feof@plt+0x2202c>
  424d24:	eor	x11, x13, x11
  424d28:	eor	x10, x12, x10
  424d2c:	ldr	w12, [sp, #152]
  424d30:	ldrh	w13, [sp, #156]
  424d34:	stur	w12, [x29, #-40]
  424d38:	sturh	w13, [x29, #-36]
  424d3c:	stp	x10, x11, [x27, #-32]
  424d40:	sturb	w9, [x27, #-16]
  424d44:	sturb	wzr, [x27, #-15]
  424d48:	b	424ec4 <feof@plt+0x221c4>
  424d4c:	ldp	x10, x9, [x27, #8]
  424d50:	orr	x9, x10, x9
  424d54:	cmp	x9, #0x0
  424d58:	cset	w9, ne  // ne = any
  424d5c:	ldr	w10, [x27, #32]
  424d60:	stp	xzr, x9, [x27, #-32]
  424d64:	sturh	wzr, [x27, #-16]
  424d68:	stur	w10, [x27, #-8]
  424d6c:	mov	x21, x8
  424d70:	ldr	w3, [x21, #36]!
  424d74:	adrp	x9, 461000 <_obstack_memory_used@@Base+0xbdd8>
  424d78:	mov	x27, x8
  424d7c:	add	x9, x9, #0xa50
  424d80:	lsl	x8, x3, #1
  424d84:	ldrb	w8, [x9, x8]
  424d88:	cmp	w28, w8
  424d8c:	b.cc	4248d8 <feof@plt+0x21bd8>  // b.lo, b.ul, b.last
  424d90:	b	425840 <feof@plt+0x22b40>
  424d94:	sub	x14, x14, #0x1
  424d98:	mov	w15, #0x1                   	// #1
  424d9c:	lsl	x15, x15, x14
  424da0:	and	x14, x15, x11
  424da4:	and	x15, x15, x12
  424da8:	cmp	x14, #0x0
  424dac:	cset	w14, eq  // eq = none
  424db0:	cmp	x15, #0x0
  424db4:	cset	w15, eq  // eq = none
  424db8:	eor	w15, w14, w15
  424dbc:	tbnz	w15, #0, 424dcc <feof@plt+0x220cc>
  424dc0:	cmp	x9, x10
  424dc4:	b.ls	424dec <feof@plt+0x220ec>  // b.plast
  424dc8:	mov	w14, #0x1                   	// #1
  424dcc:	cmp	w13, #0x2
  424dd0:	b.eq	424e04 <feof@plt+0x22104>  // b.none
  424dd4:	cmp	w13, #0x19
  424dd8:	b.eq	424eac <feof@plt+0x221ac>  // b.none
  424ddc:	cmp	w13, #0x3
  424de0:	b.ne	424e20 <feof@plt+0x22120>  // b.any
  424de4:	eor	w14, w14, #0x1
  424de8:	b	424eac <feof@plt+0x221ac>
  424dec:	cset	w14, eq  // eq = none
  424df0:	cmp	x11, x12
  424df4:	cset	w15, cs  // cs = hs, nlast
  424df8:	and	w14, w14, w15
  424dfc:	cmp	w13, #0x2
  424e00:	b.ne	424dd4 <feof@plt+0x220d4>  // b.any
  424e04:	cbz	w14, 424eac <feof@plt+0x221ac>
  424e08:	cmp	x11, x12
  424e0c:	cset	w11, ne  // ne = any
  424e10:	cmp	x9, x10
  424e14:	cset	w9, ne  // ne = any
  424e18:	orr	w14, w9, w11
  424e1c:	b	424eac <feof@plt+0x221ac>
  424e20:	cbz	w14, 424ea8 <feof@plt+0x221a8>
  424e24:	cmp	x11, x12
  424e28:	cset	w11, eq  // eq = none
  424e2c:	cmp	x9, x10
  424e30:	cset	w9, eq  // eq = none
  424e34:	and	w14, w9, w11
  424e38:	b	424eac <feof@plt+0x221ac>
  424e3c:	ldrb	w12, [x23, #38]
  424e40:	ldr	x0, [x19, #1208]
  424e44:	mov	x18, #0xffffffffffffffff    	// #-1
  424e48:	cbz	w12, 424f08 <feof@plt+0x22208>
  424e4c:	str	wzr, [sp, #8]
  424e50:	mov	w15, wzr
  424e54:	mov	w14, #0x1                   	// #1
  424e58:	cbz	x10, 425158 <feof@plt+0x22458>
  424e5c:	sub	x12, x0, #0x41
  424e60:	mov	w13, #0x1                   	// #1
  424e64:	lsl	x13, x13, x12
  424e68:	mov	x12, x0
  424e6c:	sub	x12, x12, #0x1
  424e70:	tst	x13, x10
  424e74:	lsr	x13, x13, #1
  424e78:	b.eq	424e6c <feof@plt+0x2216c>  // b.none
  424e7c:	str	x27, [sp, #56]
  424e80:	b	425194 <feof@plt+0x22494>
  424e84:	cmp	x9, #0x40
  424e88:	b.ne	424f60 <feof@plt+0x22260>  // b.any
  424e8c:	mov	x23, xzr
  424e90:	mov	w8, wzr
  424e94:	b	424fc0 <feof@plt+0x222c0>
  424e98:	cmp	x8, #0x40
  424e9c:	b.ne	424f78 <feof@plt+0x22278>  // b.any
  424ea0:	mov	x10, xzr
  424ea4:	b	424f88 <feof@plt+0x22288>
  424ea8:	mov	w14, #0x1                   	// #1
  424eac:	ldr	w9, [sp, #168]
  424eb0:	ldrh	w10, [sp, #172]
  424eb4:	stur	w9, [x29, #-40]
  424eb8:	sturh	w10, [x29, #-36]
  424ebc:	stp	xzr, x14, [x27, #-32]
  424ec0:	sturh	wzr, [x27, #-16]
  424ec4:	ldurh	w9, [x29, #-36]
  424ec8:	ldur	w10, [x29, #-40]
  424ecc:	strh	w9, [x8, #4]
  424ed0:	str	w10, [x8]
  424ed4:	b	4257f8 <feof@plt+0x22af8>
  424ed8:	ldrb	w9, [x27, #24]
  424edc:	ldr	x8, [x19, #1208]
  424ee0:	mov	x6, #0xffffffffffffffff    	// #-1
  424ee4:	cbz	w9, 425004 <feof@plt+0x22304>
  424ee8:	mov	w9, wzr
  424eec:	mov	w10, #0x1                   	// #1
  424ef0:	b	4255e4 <feof@plt+0x228e4>
  424ef4:	ldrb	w9, [x27, #24]
  424ef8:	cmp	w9, #0x0
  424efc:	cset	w9, ne  // ne = any
  424f00:	sturb	w9, [x27, #-56]
  424f04:	b	424d6c <feof@plt+0x2206c>
  424f08:	subs	x14, x0, #0x40
  424f0c:	mov	x12, #0xffffffffffffffbf    	// #-65
  424f10:	csinv	x12, x12, xzr, hi  // hi = pmore
  424f14:	csel	x13, x4, x16, hi  // hi = pmore
  424f18:	add	x12, x0, x12
  424f1c:	lsr	x12, x13, x12
  424f20:	tbz	w12, #0, 425050 <feof@plt+0x22350>
  424f24:	ldr	w12, [sp, #136]
  424f28:	ldrh	w15, [sp, #140]
  424f2c:	neg	x13, x4
  424f30:	cmp	x16, #0x0
  424f34:	csinv	x13, x13, x4, eq  // eq = none
  424f38:	cmp	x0, #0x41
  424f3c:	str	w12, [sp, #128]
  424f40:	neg	x12, x16
  424f44:	strh	w15, [sp, #132]
  424f48:	b.cc	425058 <feof@plt+0x22358>  // b.lo, b.ul, b.last
  424f4c:	cmp	x14, #0x3f
  424f50:	b.hi	425094 <feof@plt+0x22394>  // b.pmore
  424f54:	lsl	x14, x18, x14
  424f58:	bic	x13, x13, x14
  424f5c:	b	425094 <feof@plt+0x22394>
  424f60:	mov	x10, #0xffffffffffffffff    	// #-1
  424f64:	lsl	x9, x10, x9
  424f68:	mov	x23, xzr
  424f6c:	mov	w8, wzr
  424f70:	bic	x28, x28, x9
  424f74:	b	424fc0 <feof@plt+0x222c0>
  424f78:	mov	x11, #0xffffffffffffffff    	// #-1
  424f7c:	lsl	x8, x11, x8
  424f80:	mov	x10, xzr
  424f84:	bic	x9, x9, x8
  424f88:	cmp	w27, #0x0
  424f8c:	cset	w11, eq  // eq = none
  424f90:	cmp	x9, x28
  424f94:	orr	x8, x10, x9
  424f98:	cset	w12, eq  // eq = none
  424f9c:	cmp	x10, x23
  424fa0:	and	w11, w11, w12
  424fa4:	cset	w12, eq  // eq = none
  424fa8:	cmp	x8, #0x0
  424fac:	and	w8, w12, w11
  424fb0:	cset	w11, ne  // ne = any
  424fb4:	and	w8, w11, w8
  424fb8:	mov	x23, x10
  424fbc:	mov	x28, x9
  424fc0:	ldr	x9, [sp, #56]
  424fc4:	stp	x23, x28, [x9, #-32]
  424fc8:	ldr	w28, [sp, #52]
  424fcc:	sturb	w8, [x9, #-15]
  424fd0:	lsr	x8, x21, #32
  424fd4:	sturb	w27, [x9, #-16]
  424fd8:	mov	x27, x9
  424fdc:	stur	w21, [x9, #-14]
  424fe0:	sturh	w8, [x9, #-10]
  424fe4:	b	4257f8 <feof@plt+0x22af8>
  424fe8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  424fec:	mov	w1, #0x6                   	// #6
  424ff0:	mov	x0, x19
  424ff4:	add	x2, x2, #0x322
  424ff8:	bl	422514 <feof@plt+0x1f814>
  424ffc:	mov	w8, wzr
  425000:	b	424fc0 <feof@plt+0x222c0>
  425004:	subs	x15, x8, #0x40
  425008:	mov	x9, #0xffffffffffffffbf    	// #-65
  42500c:	csinv	x9, x9, xzr, hi  // hi = pmore
  425010:	csel	x10, x12, x14, hi  // hi = pmore
  425014:	add	x9, x8, x9
  425018:	lsr	x9, x10, x9
  42501c:	tbz	w9, #0, 425068 <feof@plt+0x22368>
  425020:	neg	x9, x12
  425024:	cmp	x14, #0x0
  425028:	csinv	x12, x9, x12, eq  // eq = none
  42502c:	cmp	x8, #0x41
  425030:	neg	x14, x14
  425034:	b.cc	425078 <feof@plt+0x22378>  // b.lo, b.ul, b.last
  425038:	cmp	x15, #0x3f
  42503c:	b.hi	42556c <feof@plt+0x2286c>  // b.pmore
  425040:	lsl	x10, x6, x15
  425044:	mov	w9, #0x1                   	// #1
  425048:	bic	x12, x12, x10
  42504c:	b	425570 <feof@plt+0x22870>
  425050:	mov	w15, wzr
  425054:	b	4250d4 <feof@plt+0x223d4>
  425058:	cmp	x0, #0x40
  42505c:	b.ne	425088 <feof@plt+0x22388>  // b.any
  425060:	mov	x13, xzr
  425064:	b	425094 <feof@plt+0x22394>
  425068:	cmp	x8, #0x40
  42506c:	mov	w9, wzr
  425070:	b.hi	425570 <feof@plt+0x22870>  // b.pmore
  425074:	b	42558c <feof@plt+0x2288c>
  425078:	cmp	x8, #0x40
  42507c:	b.ne	42557c <feof@plt+0x2287c>  // b.any
  425080:	mov	x12, xzr
  425084:	b	425588 <feof@plt+0x22888>
  425088:	lsl	x14, x18, x0
  42508c:	mov	x13, xzr
  425090:	bic	x12, x12, x14
  425094:	cmp	x12, x16
  425098:	orr	x14, x13, x12
  42509c:	ldr	w15, [sp, #128]
  4250a0:	cset	w16, eq  // eq = none
  4250a4:	cmp	x13, x4
  4250a8:	cset	w17, eq  // eq = none
  4250ac:	cmp	x14, #0x0
  4250b0:	ldrh	w14, [sp, #132]
  4250b4:	and	w16, w16, w17
  4250b8:	cset	w17, ne  // ne = any
  4250bc:	and	w17, w17, w16
  4250c0:	str	w15, [sp, #136]
  4250c4:	mov	w15, #0x1                   	// #1
  4250c8:	mov	x16, x12
  4250cc:	mov	x4, x13
  4250d0:	strh	w14, [sp, #140]
  4250d4:	subs	x12, x0, #0x40
  4250d8:	mov	x13, #0xffffffffffffffbf    	// #-65
  4250dc:	csinv	x13, x13, xzr, hi  // hi = pmore
  4250e0:	csel	x14, x10, x11, hi  // hi = pmore
  4250e4:	add	x13, x0, x13
  4250e8:	lsr	x13, x14, x13
  4250ec:	tbz	w13, #0, 425128 <feof@plt+0x22428>
  4250f0:	neg	x13, x10
  4250f4:	cmp	x11, #0x0
  4250f8:	eor	w14, w15, #0x1
  4250fc:	csinv	x10, x13, x10, eq  // eq = none
  425100:	cmp	x0, #0x41
  425104:	neg	x11, x11
  425108:	str	w14, [sp, #8]
  42510c:	b.cc	425134 <feof@plt+0x22434>  // b.lo, b.ul, b.last
  425110:	cmp	x12, #0x3f
  425114:	b.hi	425144 <feof@plt+0x22444>  // b.pmore
  425118:	lsl	x12, x18, x12
  42511c:	mov	w14, wzr
  425120:	bic	x10, x10, x12
  425124:	b	424e58 <feof@plt+0x22158>
  425128:	mov	w14, wzr
  42512c:	str	w15, [sp, #8]
  425130:	b	424e58 <feof@plt+0x22158>
  425134:	cmp	x0, #0x40
  425138:	b.ne	42514c <feof@plt+0x2244c>  // b.any
  42513c:	mov	w14, wzr
  425140:	b	425158 <feof@plt+0x22458>
  425144:	mov	w14, wzr
  425148:	b	424e58 <feof@plt+0x22158>
  42514c:	lsl	x10, x18, x0
  425150:	mov	w14, wzr
  425154:	bic	x11, x11, x10
  425158:	cbz	x11, 425230 <feof@plt+0x22530>
  42515c:	cmp	x0, #0x40
  425160:	mov	x10, #0xffffffffffffffbf    	// #-65
  425164:	csinv	x10, x10, xzr, hi  // hi = pmore
  425168:	add	x12, x10, x0
  42516c:	mov	w10, #0x1                   	// #1
  425170:	lsl	x10, x10, x12
  425174:	tst	x10, x11
  425178:	str	x27, [sp, #56]
  42517c:	b.ne	425190 <feof@plt+0x22490>  // b.any
  425180:	lsr	x10, x10, #1
  425184:	tst	x10, x11
  425188:	sub	x12, x12, #0x1
  42518c:	b.eq	425180 <feof@plt+0x22480>  // b.none
  425190:	mov	x10, xzr
  425194:	bfi	x8, x9, #32, #32
  425198:	mvn	x9, x12
  42519c:	adds	x27, x0, x9
  4251a0:	mov	w9, #0x1                   	// #1
  4251a4:	str	w15, [sp, #12]
  4251a8:	str	w1, [sp, #28]
  4251ac:	str	w14, [sp, #36]
  4251b0:	str	x23, [sp, #16]
  4251b4:	str	x0, [sp, #40]
  4251b8:	str	x9, [sp, #88]
  4251bc:	b.cc	425214 <feof@plt+0x22514>  // b.lo, b.ul, b.last
  4251c0:	sub	x9, x27, #0x40
  4251c4:	cmp	x27, #0x3f
  4251c8:	csel	x21, xzr, x11, hi  // hi = pmore
  4251cc:	csel	x9, x9, x27, hi  // hi = pmore
  4251d0:	csel	x23, x11, x10, hi  // hi = pmore
  4251d4:	cbz	x9, 4251ec <feof@plt+0x224ec>
  4251d8:	neg	x11, x9
  4251dc:	lsl	x10, x23, x9
  4251e0:	lsr	x11, x21, x11
  4251e4:	orr	x23, x11, x10
  4251e8:	lsl	x21, x21, x9
  4251ec:	ldr	x10, [sp, #40]
  4251f0:	cmp	x10, #0x41
  4251f4:	b.cc	425220 <feof@plt+0x22520>  // b.lo, b.ul, b.last
  4251f8:	sub	x9, x10, #0x40
  4251fc:	cmp	x9, #0x3f
  425200:	b.hi	425254 <feof@plt+0x22554>  // b.pmore
  425204:	mov	x10, #0xffffffffffffffff    	// #-1
  425208:	lsl	x9, x10, x9
  42520c:	bic	x23, x23, x9
  425210:	b	425254 <feof@plt+0x22554>
  425214:	mov	x21, xzr
  425218:	mov	x23, xzr
  42521c:	b	425254 <feof@plt+0x22554>
  425220:	cmp	x10, #0x40
  425224:	b.ne	425244 <feof@plt+0x22544>  // b.any
  425228:	mov	x23, xzr
  42522c:	b	425254 <feof@plt+0x22554>
  425230:	ldr	w8, [x19, #28]
  425234:	cbz	w8, 425428 <feof@plt+0x22728>
  425238:	add	x21, sp, #0x88
  42523c:	mov	w14, w3
  425240:	b	425534 <feof@plt+0x22834>
  425244:	mov	x9, #0xffffffffffffffff    	// #-1
  425248:	lsl	x9, x9, x10
  42524c:	mov	x23, xzr
  425250:	bic	x21, x21, x9
  425254:	ldr	x9, [sp, #88]
  425258:	mov	x28, xzr
  42525c:	mov	x25, xzr
  425260:	bfi	x9, x8, #16, #48
  425264:	ldr	x8, [sp, #40]
  425268:	str	x9, [sp, #88]
  42526c:	sub	x8, x8, #0x1
  425270:	str	x8, [sp]
  425274:	mov	w8, #0x1                   	// #1
  425278:	b	42528c <feof@plt+0x2258c>
  42527c:	orr	x28, x9, x28
  425280:	sub	x27, x27, #0x1
  425284:	extr	x21, x23, x21, #1
  425288:	lsr	x23, x23, #1
  42528c:	cmp	x4, x23
  425290:	b.hi	4252a4 <feof@plt+0x225a4>  // b.pmore
  425294:	cmp	x16, x21
  425298:	b.cc	42531c <feof@plt+0x2261c>  // b.lo, b.ul, b.last
  42529c:	cmp	x4, x23
  4252a0:	b.ne	42531c <feof@plt+0x2261c>  // b.any
  4252a4:	stp	x4, x16, [x22, #24]
  4252a8:	ldr	w9, [sp, #136]
  4252ac:	ldrh	w10, [sp, #140]
  4252b0:	sturb	w8, [x29, #-48]
  4252b4:	ldr	x8, [sp, #104]
  4252b8:	ldr	x11, [sp, #88]
  4252bc:	sturb	w17, [x29, #-47]
  4252c0:	sub	x1, x29, #0x40
  4252c4:	strh	w10, [x8, #4]
  4252c8:	str	w9, [x8]
  4252cc:	sub	x8, x29, #0x28
  4252d0:	sub	x2, x29, #0x58
  4252d4:	mov	w3, #0x5                   	// #5
  4252d8:	mov	x0, x19
  4252dc:	stp	x21, x11, [x22, #8]
  4252e0:	str	x23, [x22]
  4252e4:	bl	425da8 <feof@plt+0x230a8>
  4252e8:	ldr	x10, [sp, #96]
  4252ec:	ldp	x4, x16, [x22, #48]
  4252f0:	ldurb	w8, [x29, #-24]
  4252f4:	ldurb	w17, [x29, #-23]
  4252f8:	ldr	w9, [x10]
  4252fc:	ldrh	w10, [x10, #4]
  425300:	cmp	x27, #0x40
  425304:	str	w9, [sp, #136]
  425308:	mov	w9, #0x1                   	// #1
  42530c:	lsl	x9, x9, x27
  425310:	strh	w10, [sp, #140]
  425314:	b.cs	42527c <feof@plt+0x2257c>  // b.hs, b.nlast
  425318:	orr	x25, x9, x25
  42531c:	cbnz	x27, 425280 <feof@plt+0x22580>
  425320:	ldr	w8, [sp, #28]
  425324:	cmp	w8, #0x7
  425328:	b.ne	42534c <feof@plt+0x2264c>  // b.any
  42532c:	ldr	x27, [sp, #56]
  425330:	ldr	x23, [sp, #16]
  425334:	ldr	x13, [sp, #40]
  425338:	ldr	w14, [sp, #36]
  42533c:	tbz	w14, #0, 4253a8 <feof@plt+0x226a8>
  425340:	mov	w17, wzr
  425344:	sub	x21, x29, #0x60
  425348:	b	42552c <feof@plt+0x2282c>
  42534c:	ldr	x27, [sp, #56]
  425350:	ldr	x23, [sp, #16]
  425354:	ldr	x12, [sp, #40]
  425358:	ldr	w8, [sp, #12]
  42535c:	cbz	w8, 425408 <feof@plt+0x22708>
  425360:	ldr	w8, [sp, #136]
  425364:	ldrh	w10, [sp, #140]
  425368:	ldr	w14, [sp, #36]
  42536c:	neg	x9, x4
  425370:	cmp	x16, #0x0
  425374:	csinv	x9, x9, x4, eq  // eq = none
  425378:	cmp	x12, #0x41
  42537c:	stur	w8, [x29, #-40]
  425380:	neg	x8, x16
  425384:	mov	x11, #0xffffffffffffffff    	// #-1
  425388:	sturh	w10, [x29, #-36]
  42538c:	b.cc	425418 <feof@plt+0x22718>  // b.lo, b.ul, b.last
  425390:	sub	x10, x12, #0x40
  425394:	cmp	x10, #0x3f
  425398:	b.hi	425484 <feof@plt+0x22784>  // b.pmore
  42539c:	lsl	x10, x11, x10
  4253a0:	bic	x9, x9, x10
  4253a4:	b	425484 <feof@plt+0x22784>
  4253a8:	ldr	x8, [sp]
  4253ac:	ldr	w14, [sp, #8]
  4253b0:	sub	x9, x13, #0x41
  4253b4:	mov	w10, #0x1                   	// #1
  4253b8:	lsl	x8, x10, x8
  4253bc:	lsl	x9, x10, x9
  4253c0:	cbz	w14, 4254f0 <feof@plt+0x227f0>
  4253c4:	ldur	w10, [x29, #-96]
  4253c8:	ldurh	w11, [x29, #-92]
  4253cc:	neg	x12, x28
  4253d0:	cmp	x25, #0x0
  4253d4:	csinv	x28, x12, x28, eq  // eq = none
  4253d8:	cmp	x13, #0x41
  4253dc:	neg	x25, x25
  4253e0:	mov	x12, #0xffffffffffffffff    	// #-1
  4253e4:	str	w10, [sp, #120]
  4253e8:	strh	w11, [sp, #124]
  4253ec:	b.cc	425468 <feof@plt+0x22768>  // b.lo, b.ul, b.last
  4253f0:	sub	x11, x13, #0x40
  4253f4:	cmp	x11, #0x3f
  4253f8:	b.hi	4254e0 <feof@plt+0x227e0>  // b.pmore
  4253fc:	lsl	x11, x12, x11
  425400:	bic	x28, x28, x11
  425404:	b	4254e0 <feof@plt+0x227e0>
  425408:	ldr	w14, [sp, #36]
  42540c:	mov	w17, wzr
  425410:	add	x21, sp, #0x88
  425414:	b	425534 <feof@plt+0x22834>
  425418:	cmp	x12, #0x40
  42541c:	b.ne	425478 <feof@plt+0x22778>  // b.any
  425420:	mov	x9, xzr
  425424:	b	425484 <feof@plt+0x22784>
  425428:	mov	x25, x4
  42542c:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425430:	mov	w1, #0x3                   	// #3
  425434:	mov	x0, x19
  425438:	mov	w28, w3
  42543c:	mov	w3, wzr
  425440:	add	x4, x4, #0x371
  425444:	add	x21, sp, #0x88
  425448:	str	x16, [sp, #88]
  42544c:	str	w17, [sp, #40]
  425450:	bl	4228a4 <feof@plt+0x1fba4>
  425454:	ldr	w17, [sp, #40]
  425458:	ldr	x16, [sp, #88]
  42545c:	mov	x4, x25
  425460:	mov	w14, w28
  425464:	b	425534 <feof@plt+0x22834>
  425468:	cmp	x13, #0x40
  42546c:	b.ne	4254d4 <feof@plt+0x227d4>  // b.any
  425470:	mov	x28, xzr
  425474:	b	4254e0 <feof@plt+0x227e0>
  425478:	lsl	x10, x11, x12
  42547c:	mov	x9, xzr
  425480:	bic	x8, x8, x10
  425484:	cmp	w14, #0x0
  425488:	cset	w11, eq  // eq = none
  42548c:	cmp	x8, x16
  425490:	cset	w12, eq  // eq = none
  425494:	cmp	x9, x4
  425498:	orr	x10, x9, x8
  42549c:	and	w11, w11, w12
  4254a0:	cset	w12, eq  // eq = none
  4254a4:	ldur	w13, [x29, #-40]
  4254a8:	cmp	x10, #0x0
  4254ac:	and	w10, w12, w11
  4254b0:	ldurh	w11, [x29, #-36]
  4254b4:	cset	w12, ne  // ne = any
  4254b8:	add	x21, sp, #0x88
  4254bc:	and	w17, w12, w10
  4254c0:	mov	x16, x8
  4254c4:	mov	x4, x9
  4254c8:	str	w13, [sp, #136]
  4254cc:	strh	w11, [sp, #140]
  4254d0:	b	425534 <feof@plt+0x22834>
  4254d4:	lsl	x11, x12, x13
  4254d8:	mov	x28, xzr
  4254dc:	bic	x25, x25, x11
  4254e0:	ldr	w11, [sp, #120]
  4254e4:	ldrh	w12, [sp, #124]
  4254e8:	stur	w11, [x29, #-96]
  4254ec:	sturh	w12, [x29, #-92]
  4254f0:	ldr	x10, [sp, #40]
  4254f4:	and	x9, x28, x9
  4254f8:	and	x8, x25, x8
  4254fc:	sub	x21, x29, #0x60
  425500:	cmp	x10, #0x40
  425504:	csel	x8, x9, x8, hi  // hi = pmore
  425508:	cmp	x8, #0x0
  42550c:	cset	w8, eq  // eq = none
  425510:	orr	x10, x25, x28
  425514:	eor	w8, w14, w8
  425518:	ldr	w14, [sp, #36]
  42551c:	cmp	x10, #0x0
  425520:	eor	w8, w8, #0x1
  425524:	cset	w9, ne  // ne = any
  425528:	and	w17, w9, w8
  42552c:	mov	x16, x25
  425530:	mov	x4, x28
  425534:	ldrh	w8, [x21, #4]
  425538:	ldr	w9, [x21]
  42553c:	strh	w8, [sp, #148]
  425540:	str	w9, [sp, #144]
  425544:	stp	x4, x16, [x27, #-32]
  425548:	sturb	w14, [x27, #-16]
  42554c:	sturb	w17, [x27, #-15]
  425550:	ldrh	w8, [sp, #148]
  425554:	ldr	w9, [sp, #144]
  425558:	ldr	w28, [sp, #52]
  42555c:	ldr	w25, [sp, #32]
  425560:	strh	w8, [x23, #4]
  425564:	str	w9, [x23]
  425568:	b	4257f8 <feof@plt+0x22af8>
  42556c:	mov	w9, #0x1                   	// #1
  425570:	mov	x10, #0xffffffffffffffbf    	// #-65
  425574:	mov	x16, x11
  425578:	b	425594 <feof@plt+0x22894>
  42557c:	lsl	x9, x6, x8
  425580:	mov	x12, xzr
  425584:	bic	x14, x14, x9
  425588:	mov	w9, #0x1                   	// #1
  42558c:	mov	x10, #0xffffffffffffffff    	// #-1
  425590:	mov	x16, x13
  425594:	add	x10, x8, x10
  425598:	lsr	x10, x16, x10
  42559c:	tbz	w10, #0, 4255e0 <feof@plt+0x228e0>
  4255a0:	neg	x10, x11
  4255a4:	cmp	x13, #0x0
  4255a8:	eor	w9, w9, #0x1
  4255ac:	csinv	x11, x10, x11, eq  // eq = none
  4255b0:	cmp	x8, #0x41
  4255b4:	neg	x13, x13
  4255b8:	b.cc	4255d4 <feof@plt+0x228d4>  // b.lo, b.ul, b.last
  4255bc:	cmp	x15, #0x3f
  4255c0:	b.hi	4255e0 <feof@plt+0x228e0>  // b.pmore
  4255c4:	lsl	x15, x6, x15
  4255c8:	mov	w10, wzr
  4255cc:	bic	x11, x11, x15
  4255d0:	b	4255e4 <feof@plt+0x228e4>
  4255d4:	cmp	x8, #0x40
  4255d8:	b.ne	42582c <feof@plt+0x22b2c>  // b.any
  4255dc:	mov	x11, xzr
  4255e0:	mov	w10, wzr
  4255e4:	cmp	x12, #0x0
  4255e8:	and	x16, x13, #0xffffffff
  4255ec:	lsr	x13, x13, #32
  4255f0:	and	x17, x12, #0xffffffff
  4255f4:	and	x15, x14, #0xffffffff
  4255f8:	lsr	x14, x14, #32
  4255fc:	lsr	x12, x12, #32
  425600:	and	x18, x11, #0xffffffff
  425604:	lsr	x0, x11, #32
  425608:	cset	w1, ne  // ne = any
  42560c:	cmp	x11, #0x0
  425610:	mul	x5, x16, x17
  425614:	mul	x17, x13, x17
  425618:	mul	x11, x16, x15
  42561c:	mul	x2, x13, x14
  425620:	mul	x3, x13, x15
  425624:	mul	x4, x16, x14
  425628:	mul	x13, x13, x12
  42562c:	mul	x12, x16, x12
  425630:	mul	x16, x18, x15
  425634:	mul	x15, x0, x15
  425638:	mul	x0, x0, x14
  42563c:	mul	x14, x18, x14
  425640:	cset	w18, ne  // ne = any
  425644:	adds	x5, x5, x17, lsl #32
  425648:	and	w18, w1, w18
  42564c:	lsr	x1, x12, #32
  425650:	cinc	x13, x13, cs  // cs = hs, nlast
  425654:	adds	x12, x5, x12, lsl #32
  425658:	add	x17, x1, x17, lsr #32
  42565c:	cinc	x13, x13, cs  // cs = hs, nlast
  425660:	add	x2, x2, x3, lsr #32
  425664:	lsr	x5, x14, #32
  425668:	cmn	x17, x13
  42566c:	add	x1, x2, x4, lsr #32
  425670:	add	x2, x5, x15, lsr #32
  425674:	cset	w13, ne  // ne = any
  425678:	adds	x15, x16, x15, lsl #32
  42567c:	cinc	x16, x0, cs  // cs = hs, nlast
  425680:	adds	x14, x15, x14, lsl #32
  425684:	add	x12, x1, x12
  425688:	cinc	x17, x16, cs  // cs = hs, nlast
  42568c:	adds	x11, x11, x3, lsl #32
  425690:	cinc	x12, x12, cs  // cs = hs, nlast
  425694:	adds	x16, x11, x4, lsl #32
  425698:	add	x11, x12, x14
  42569c:	cinc	x15, x11, cs  // cs = hs, nlast
  4256a0:	cmn	x2, x17
  4256a4:	orr	w13, w18, w13
  4256a8:	cset	w11, ne  // ne = any
  4256ac:	cmp	x8, #0x41
  4256b0:	orr	w14, w13, w11
  4256b4:	b.cc	4256d4 <feof@plt+0x229d4>  // b.lo, b.ul, b.last
  4256b8:	sub	x11, x8, #0x40
  4256bc:	cmp	x11, #0x3f
  4256c0:	b.hi	4256e8 <feof@plt+0x229e8>  // b.pmore
  4256c4:	lsl	x11, x6, x11
  4256c8:	bic	x11, x15, x11
  4256cc:	mov	x13, x16
  4256d0:	b	425700 <feof@plt+0x22a00>
  4256d4:	cmp	x8, #0x40
  4256d8:	b.ne	4256f4 <feof@plt+0x229f4>  // b.any
  4256dc:	mov	x11, xzr
  4256e0:	mov	x13, x16
  4256e4:	b	425700 <feof@plt+0x22a00>
  4256e8:	mov	x13, x16
  4256ec:	mov	x11, x15
  4256f0:	b	425700 <feof@plt+0x22a00>
  4256f4:	lsl	x12, x6, x8
  4256f8:	mov	x11, xzr
  4256fc:	bic	x13, x16, x12
  425700:	cmp	x13, x16
  425704:	cset	w16, ne  // ne = any
  425708:	cmp	x11, x15
  42570c:	cset	w15, ne  // ne = any
  425710:	orr	w15, w16, w15
  425714:	sub	x12, x27, #0xe
  425718:	orr	w14, w14, w15
  42571c:	cbz	w9, 42578c <feof@plt+0x22a8c>
  425720:	ldur	w15, [x29, #-40]
  425724:	ldurh	w16, [x29, #-36]
  425728:	neg	x17, x11
  42572c:	cmp	x13, #0x0
  425730:	csinv	x11, x17, x11, eq  // eq = none
  425734:	cmp	x8, #0x41
  425738:	neg	x13, x13
  42573c:	stur	w15, [x29, #-96]
  425740:	sturh	w16, [x29, #-92]
  425744:	b.cc	425760 <feof@plt+0x22a60>  // b.lo, b.ul, b.last
  425748:	sub	x15, x8, #0x40
  42574c:	cmp	x15, #0x3f
  425750:	b.hi	42577c <feof@plt+0x22a7c>  // b.pmore
  425754:	lsl	x15, x6, x15
  425758:	bic	x11, x11, x15
  42575c:	b	42577c <feof@plt+0x22a7c>
  425760:	cmp	x8, #0x40
  425764:	b.ne	425770 <feof@plt+0x22a70>  // b.any
  425768:	mov	x11, xzr
  42576c:	b	42577c <feof@plt+0x22a7c>
  425770:	lsl	x15, x6, x8
  425774:	mov	x11, xzr
  425778:	bic	x13, x13, x15
  42577c:	ldur	w15, [x29, #-96]
  425780:	ldurh	w16, [x29, #-92]
  425784:	stur	w15, [x29, #-40]
  425788:	sturh	w16, [x29, #-36]
  42578c:	orr	w14, w10, w14
  425790:	tbz	w14, #0, 42579c <feof@plt+0x22a9c>
  425794:	eor	w8, w10, #0x1
  425798:	b	4257dc <feof@plt+0x22adc>
  42579c:	cmp	x8, #0x40
  4257a0:	mov	x14, #0xffffffffffffffbf    	// #-65
  4257a4:	csinv	x14, x14, xzr, hi  // hi = pmore
  4257a8:	csel	x15, x11, x13, hi  // hi = pmore
  4257ac:	add	x8, x8, x14
  4257b0:	lsr	x8, x15, x8
  4257b4:	tst	x8, #0x1
  4257b8:	cset	w8, eq  // eq = none
  4257bc:	eor	w8, w9, w8
  4257c0:	cmp	w8, #0x1
  4257c4:	b.eq	4257d8 <feof@plt+0x22ad8>  // b.none
  4257c8:	orr	x8, x11, x13
  4257cc:	cmp	x8, #0x0
  4257d0:	cset	w8, ne  // ne = any
  4257d4:	b	4257dc <feof@plt+0x22adc>
  4257d8:	mov	w8, wzr
  4257dc:	stp	x11, x13, [x27, #-32]
  4257e0:	sturb	w10, [x27, #-16]
  4257e4:	sturb	w8, [x27, #-15]
  4257e8:	ldurh	w8, [x29, #-36]
  4257ec:	ldur	w9, [x29, #-40]
  4257f0:	strh	w8, [x12, #4]
  4257f4:	str	w9, [x12]
  4257f8:	ldr	w8, [x27, #32]
  4257fc:	ldurb	w9, [x27, #-15]
  425800:	sub	x23, x27, #0x28
  425804:	stur	w8, [x27, #-8]
  425808:	cbz	w9, 4248a8 <feof@plt+0x21ba8>
  42580c:	ldr	w8, [x19, #28]
  425810:	cbnz	w8, 4248a8 <feof@plt+0x21ba8>
  425814:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425818:	mov	w1, #0x2                   	// #2
  42581c:	mov	x0, x19
  425820:	add	x2, x2, #0x273
  425824:	bl	4223e4 <feof@plt+0x1f6e4>
  425828:	b	4248a8 <feof@plt+0x21ba8>
  42582c:	lsl	x15, x6, x8
  425830:	mov	x11, xzr
  425834:	mov	w10, wzr
  425838:	bic	x13, x13, x15
  42583c:	b	4255e4 <feof@plt+0x228e4>
  425840:	cmp	w20, #0x15
  425844:	mov	x21, #0xffffffffffffffff    	// #-1
  425848:	b.ne	424834 <feof@plt+0x21b34>  // b.any
  42584c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425850:	mov	w1, #0x3                   	// #3
  425854:	mov	x0, x19
  425858:	add	x2, x2, #0x29f
  42585c:	bl	4223e4 <feof@plt+0x1f6e4>
  425860:	ldr	w2, [sp, #84]
  425864:	mov	x27, xzr
  425868:	b	424834 <feof@plt+0x21b34>
  42586c:	orr	w8, w20, #0x1
  425870:	cmp	w8, #0x13
  425874:	mov	x21, #0xffffffffffffffff    	// #-1
  425878:	b.eq	424834 <feof@plt+0x21b34>  // b.none
  42587c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425880:	mov	w1, #0x3                   	// #3
  425884:	mov	x0, x19
  425888:	add	x2, x2, #0x259
  42588c:	b	42585c <feof@plt+0x22b5c>
  425890:	ldr	w3, [x27, #36]
  425894:	b	424808 <feof@plt+0x21b08>
  425898:	cmp	w20, #0x15
  42589c:	b.ne	4258c8 <feof@plt+0x22bc8>  // b.any
  4258a0:	ldr	x8, [x27, #24]
  4258a4:	ldur	q0, [x27, #8]
  4258a8:	ldr	w9, [x27, #32]
  4258ac:	mov	x21, #0xffffffffffffffff    	// #-1
  4258b0:	stur	x8, [x27, #-16]
  4258b4:	sub	x8, x27, #0x28
  4258b8:	stur	q0, [x27, #-32]
  4258bc:	stur	w9, [x27, #-8]
  4258c0:	mov	x27, x8
  4258c4:	b	424834 <feof@plt+0x21b34>
  4258c8:	ldr	x8, [x27]
  4258cc:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4258d0:	mov	w1, #0x3                   	// #3
  4258d4:	mov	x0, x19
  4258d8:	ldr	w2, [x8]
  4258dc:	mov	w3, wzr
  4258e0:	add	x4, x4, #0x23f
  4258e4:	bl	4228a4 <feof@plt+0x1fba4>
  4258e8:	ldr	w2, [sp, #84]
  4258ec:	mov	x27, xzr
  4258f0:	b	424830 <feof@plt+0x21b30>
  4258f4:	ldp	x9, x8, [x27, #8]
  4258f8:	orr	x8, x9, x8
  4258fc:	cbnz	x8, 425948 <feof@plt+0x22c48>
  425900:	b	425910 <feof@plt+0x22c10>
  425904:	ldp	x9, x8, [x27, #8]
  425908:	orr	x8, x9, x8
  42590c:	cbz	x8, 425948 <feof@plt+0x22c48>
  425910:	ldr	w8, [x19, #28]
  425914:	add	w8, w8, #0x1
  425918:	b	425944 <feof@plt+0x22c44>
  42591c:	ldr	w8, [x27, #36]
  425920:	cmp	w8, #0x11
  425924:	b.ne	425adc <feof@plt+0x22ddc>  // b.any
  425928:	ldp	x10, x9, [x27, #-32]
  42592c:	ldr	w8, [x19, #28]
  425930:	orr	x9, x10, x9
  425934:	cbz	x9, 425940 <feof@plt+0x22c40>
  425938:	add	w8, w8, #0x1
  42593c:	b	425944 <feof@plt+0x22c44>
  425940:	sub	w8, w8, #0x1
  425944:	str	w8, [x19, #28]
  425948:	ldr	x8, [x19, #1104]
  42594c:	add	x27, x27, #0x28
  425950:	cmp	x27, x8
  425954:	b.ne	425988 <feof@plt+0x22c88>  // b.any
  425958:	ldr	x0, [x19, #1096]
  42595c:	sub	x21, x8, x0
  425960:	lsl	x8, x21, #1
  425964:	add	x24, x8, #0x320
  425968:	mov	x1, x24
  42596c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  425970:	ldr	w2, [sp, #84]
  425974:	add	x8, x0, x24
  425978:	add	x27, x0, x21
  42597c:	mov	x21, #0xffffffffffffffff    	// #-1
  425980:	str	x0, [x19, #1096]
  425984:	str	x8, [x19, #1104]
  425988:	str	x26, [x27]
  42598c:	stp	w2, w20, [x27, #32]
  425990:	b	424284 <feof@plt+0x21584>
  425994:	mov	x0, x19
  425998:	mov	x1, x26
  42599c:	mov	w20, w2
  4259a0:	bl	42d084 <feof@plt+0x2a384>
  4259a4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4259a8:	mov	x5, x0
  4259ac:	add	x4, x4, #0xf06
  4259b0:	mov	w1, #0x3                   	// #3
  4259b4:	mov	x0, x19
  4259b8:	mov	w2, w20
  4259bc:	mov	w3, wzr
  4259c0:	bl	4228a4 <feof@plt+0x1fba4>
  4259c4:	mov	w0, wzr
  4259c8:	ldp	x20, x19, [sp, #416]
  4259cc:	ldp	x22, x21, [sp, #400]
  4259d0:	ldp	x24, x23, [sp, #384]
  4259d4:	ldp	x26, x25, [sp, #368]
  4259d8:	ldp	x28, x27, [sp, #352]
  4259dc:	ldp	x29, x30, [sp, #336]
  4259e0:	add	sp, sp, #0x1b0
  4259e4:	ret
  4259e8:	mov	x0, x19
  4259ec:	mov	x1, x26
  4259f0:	mov	w20, w2
  4259f4:	bl	42d084 <feof@plt+0x2a384>
  4259f8:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  4259fc:	mov	x5, x0
  425a00:	add	x4, x4, #0xf30
  425a04:	b	4259b0 <feof@plt+0x22cb0>
  425a08:	ldr	w9, [sp, #68]
  425a0c:	cmp	w25, #0x3
  425a10:	cset	w8, eq  // eq = none
  425a14:	and	w8, w8, w9
  425a18:	tbnz	w8, #0, 425a28 <feof@plt+0x22d28>
  425a1c:	ldr	x8, [x19, #432]
  425a20:	cbz	x8, 425a28 <feof@plt+0x22d28>
  425a24:	str	xzr, [x19, #432]
  425a28:	ldr	x8, [x19, #1096]
  425a2c:	cmp	x27, x8
  425a30:	b.eq	425a84 <feof@plt+0x22d84>  // b.none
  425a34:	ldr	w10, [sp, #64]
  425a38:	ldr	w2, [x27, #32]
  425a3c:	adrp	x8, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425a40:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425a44:	add	x8, x8, #0xfa1
  425a48:	add	x9, x9, #0x36d
  425a4c:	tst	w10, #0x1
  425a50:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425a54:	csel	x5, x9, x8, ne  // ne = any
  425a58:	add	x4, x4, #0x7
  425a5c:	mov	w1, #0x4                   	// #4
  425a60:	mov	x0, x19
  425a64:	b	4259bc <feof@plt+0x22cbc>
  425a68:	mov	x0, x19
  425a6c:	mov	x1, x26
  425a70:	bl	42d084 <feof@plt+0x2a384>
  425a74:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425a78:	mov	x5, x0
  425a7c:	add	x4, x4, #0xf06
  425a80:	b	425acc <feof@plt+0x22dcc>
  425a84:	ldp	x9, x8, [x27, #8]
  425a88:	orr	x8, x9, x8
  425a8c:	cmp	x8, #0x0
  425a90:	cset	w0, ne  // ne = any
  425a94:	b	4259c8 <feof@plt+0x22cc8>
  425a98:	ldr	x1, [x27]
  425a9c:	mov	x0, x19
  425aa0:	bl	42d084 <feof@plt+0x2a384>
  425aa4:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425aa8:	mov	x5, x0
  425aac:	add	x4, x4, #0xfa7
  425ab0:	b	425acc <feof@plt+0x22dcc>
  425ab4:	mov	x0, x19
  425ab8:	mov	x1, x26
  425abc:	bl	42d084 <feof@plt+0x2a384>
  425ac0:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425ac4:	mov	x5, x0
  425ac8:	add	x4, x4, #0xfca
  425acc:	ldr	w2, [sp, #84]
  425ad0:	mov	w1, #0x3                   	// #3
  425ad4:	mov	x0, x19
  425ad8:	b	4259bc <feof@plt+0x22cbc>
  425adc:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425ae0:	add	x4, x4, #0xfec
  425ae4:	b	425b1c <feof@plt+0x22e1c>
  425ae8:	ldr	w10, [sp, #64]
  425aec:	adrp	x8, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425af0:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425af4:	add	x8, x8, #0xfa1
  425af8:	add	x9, x9, #0x36d
  425afc:	tst	w10, #0x1
  425b00:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425b04:	csel	x5, x9, x8, ne  // ne = any
  425b08:	add	x4, x4, #0xf8b
  425b0c:	mov	w1, #0x3                   	// #3
  425b10:	b	425a60 <feof@plt+0x22d60>
  425b14:	adrp	x4, 461000 <_obstack_memory_used@@Base+0xbdd8>
  425b18:	add	x4, x4, #0xf64
  425b1c:	mov	w1, #0x3                   	// #3
  425b20:	mov	x0, x19
  425b24:	mov	w3, wzr
  425b28:	bl	4228a4 <feof@plt+0x1fba4>
  425b2c:	b	4259c4 <feof@plt+0x22cc4>
  425b30:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425b34:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425b38:	add	x0, x0, #0x110
  425b3c:	add	x2, x2, #0x124
  425b40:	mov	w1, #0x4ad                 	// #1197
  425b44:	bl	408b70 <feof@plt+0x5e70>
  425b48:	stp	x29, x30, [sp, #-48]!
  425b4c:	stp	x20, x19, [sp, #32]
  425b50:	mov	x19, x0
  425b54:	ldr	x8, [x0, #1104]
  425b58:	ldr	x0, [x0, #1096]
  425b5c:	str	x21, [sp, #16]
  425b60:	mov	x29, sp
  425b64:	sub	x21, x8, x0
  425b68:	lsl	x8, x21, #1
  425b6c:	add	x20, x8, #0x320
  425b70:	mov	x1, x20
  425b74:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  425b78:	add	x8, x0, x20
  425b7c:	str	x0, [x19, #1096]
  425b80:	str	x8, [x19, #1104]
  425b84:	add	x0, x0, x21
  425b88:	ldp	x20, x19, [sp, #32]
  425b8c:	ldr	x21, [sp, #16]
  425b90:	ldp	x29, x30, [sp], #48
  425b94:	ret
  425b98:	ldrb	w9, [x0, #16]
  425b9c:	cbnz	w9, 425c08 <feof@plt+0x22f08>
  425ba0:	subs	x9, x1, #0x41
  425ba4:	b.cc	425bd4 <feof@plt+0x22ed4>  // b.lo, b.ul, b.last
  425ba8:	and	x10, x1, #0xffffffffffffffc0
  425bac:	cmp	x10, #0x40
  425bb0:	b.ne	425c08 <feof@plt+0x22f08>  // b.any
  425bb4:	ldr	x10, [x0]
  425bb8:	lsr	x9, x10, x9
  425bbc:	tbz	w9, #0, 425c08 <feof@plt+0x22f08>
  425bc0:	neg	x9, x1
  425bc4:	mov	x11, #0xffffffffffffffff    	// #-1
  425bc8:	lsr	x9, x11, x9
  425bcc:	orn	x9, x10, x9
  425bd0:	b	425c04 <feof@plt+0x22f04>
  425bd4:	ldr	x9, [x0, #8]
  425bd8:	sub	x10, x1, #0x1
  425bdc:	lsr	x10, x9, x10
  425be0:	tbz	w10, #0, 425c08 <feof@plt+0x22f08>
  425be4:	cmp	x1, #0x3f
  425be8:	b.hi	425c00 <feof@plt+0x22f00>  // b.pmore
  425bec:	neg	x10, x1
  425bf0:	mov	x11, #0xffffffffffffffff    	// #-1
  425bf4:	lsr	x10, x11, x10
  425bf8:	orn	x9, x9, x10
  425bfc:	str	x9, [x0, #8]
  425c00:	mov	x9, #0xffffffffffffffff    	// #-1
  425c04:	str	x9, [x0]
  425c08:	ldr	x9, [x0, #16]
  425c0c:	ldr	q0, [x0]
  425c10:	str	x9, [x8, #16]
  425c14:	str	q0, [x8]
  425c18:	ret
  425c1c:	stp	x29, x30, [sp, #-80]!
  425c20:	stp	x24, x23, [sp, #32]
  425c24:	stp	x22, x21, [sp, #48]
  425c28:	stp	x20, x19, [sp, #64]
  425c2c:	stp	xzr, xzr, [x8]
  425c30:	strh	wzr, [x8, #16]
  425c34:	mov	x20, x8
  425c38:	ldrb	w8, [x0, #26]
  425c3c:	str	x25, [sp, #16]
  425c40:	mov	x29, sp
  425c44:	mov	w21, w1
  425c48:	add	w8, w8, #0x1
  425c4c:	mov	x19, x0
  425c50:	strb	w8, [x0, #26]
  425c54:	bl	432114 <feof@plt+0x2f414>
  425c58:	ldrb	w8, [x0, #4]
  425c5c:	cmp	w8, #0x14
  425c60:	b.ne	425cd4 <feof@plt+0x22fd4>  // b.any
  425c64:	mov	x0, x19
  425c68:	bl	432114 <feof@plt+0x2f414>
  425c6c:	ldrb	w8, [x0, #4]
  425c70:	mov	x22, x0
  425c74:	mov	w25, #0x1                   	// #1
  425c78:	cmp	w8, #0x3
  425c7c:	b.eq	425ce4 <feof@plt+0x22fe4>  // b.none
  425c80:	cmp	w8, #0x44
  425c84:	b.eq	425c90 <feof@plt+0x22f90>  // b.none
  425c88:	cmp	w8, #0x3e
  425c8c:	b.ne	425d60 <feof@plt+0x23060>  // b.any
  425c90:	ldr	w9, [x22, #8]
  425c94:	cmp	w8, #0x44
  425c98:	cset	w24, eq  // eq = none
  425c9c:	sub	w0, w9, #0x1
  425ca0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  425ca4:	ldr	x8, [x22, #16]
  425ca8:	ldr	w9, [x22, #8]
  425cac:	mov	x23, x0
  425cb0:	add	x1, x8, #0x1
  425cb4:	sub	w2, w9, #0x2
  425cb8:	bl	402640 <memcpy@plt>
  425cbc:	ldr	w8, [x22, #8]
  425cc0:	sub	w8, w8, #0x2
  425cc4:	strb	wzr, [x23, w8, uxtw]
  425cc8:	ldr	x22, [x22, #8]
  425ccc:	cbnz	x23, 425cfc <feof@plt+0x22ffc>
  425cd0:	b	425d20 <feof@plt+0x23020>
  425cd4:	mov	x22, x0
  425cd8:	mov	w25, wzr
  425cdc:	cmp	w8, #0x3
  425ce0:	b.ne	425c80 <feof@plt+0x22f80>  // b.any
  425ce4:	mov	x0, x19
  425ce8:	bl	420850 <feof@plt+0x1db50>
  425cec:	mov	x23, x0
  425cf0:	mov	x22, xzr
  425cf4:	mov	w24, #0x1                   	// #1
  425cf8:	cbz	x23, 425d20 <feof@plt+0x23020>
  425cfc:	mov	x0, x19
  425d00:	mov	x1, x23
  425d04:	mov	w2, w24
  425d08:	mov	w3, w21
  425d0c:	bl	428180 <feof@plt+0x25480>
  425d10:	and	x8, x0, #0x1
  425d14:	mov	x0, x23
  425d18:	str	x8, [x20, #8]
  425d1c:	bl	402770 <free@plt>
  425d20:	cbz	w25, 425d7c <feof@plt+0x2307c>
  425d24:	ldr	x8, [x19, #448]
  425d28:	ldurb	w8, [x8, #-20]
  425d2c:	cmp	w8, #0x16
  425d30:	b.eq	425d7c <feof@plt+0x2307c>  // b.none
  425d34:	mov	x0, x19
  425d38:	bl	432114 <feof@plt+0x2f414>
  425d3c:	ldrb	w8, [x0, #4]
  425d40:	cmp	w8, #0x15
  425d44:	b.eq	425d7c <feof@plt+0x2307c>  // b.none
  425d48:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425d4c:	add	x2, x2, #0x202
  425d50:	mov	w1, #0x3                   	// #3
  425d54:	mov	x0, x19
  425d58:	bl	4223e4 <feof@plt+0x1f6e4>
  425d5c:	b	425d7c <feof@plt+0x2307c>
  425d60:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425d64:	add	x2, x2, #0x1ce
  425d68:	mov	w1, #0x3                   	// #3
  425d6c:	mov	x0, x19
  425d70:	bl	4223e4 <feof@plt+0x1f6e4>
  425d74:	mov	x22, xzr
  425d78:	cbnz	w25, 425d24 <feof@plt+0x23024>
  425d7c:	cbz	x22, 425d84 <feof@plt+0x23084>
  425d80:	str	x22, [x19, #432]
  425d84:	ldrb	w8, [x19, #26]
  425d88:	ldr	x25, [sp, #16]
  425d8c:	sub	w8, w8, #0x1
  425d90:	strb	w8, [x19, #26]
  425d94:	ldp	x20, x19, [sp, #64]
  425d98:	ldp	x22, x21, [sp, #48]
  425d9c:	ldp	x24, x23, [sp, #32]
  425da0:	ldp	x29, x30, [sp], #80
  425da4:	ret
  425da8:	sub	sp, sp, #0x80
  425dac:	stp	x29, x30, [sp, #80]
  425db0:	stp	x20, x19, [sp, #112]
  425db4:	ldr	x9, [x0, #1208]
  425db8:	sub	w10, w3, #0xc
  425dbc:	str	x21, [sp, #96]
  425dc0:	mov	x21, x2
  425dc4:	mov	x20, x1
  425dc8:	cmp	w10, #0x2
  425dcc:	mov	x19, x8
  425dd0:	add	x29, sp, #0x50
  425dd4:	b.cc	425e08 <feof@plt+0x23108>  // b.lo, b.ul, b.last
  425dd8:	cmp	w3, #0x4
  425ddc:	b.eq	425e84 <feof@plt+0x23184>  // b.none
  425de0:	cmp	w3, #0x5
  425de4:	b.ne	425ea8 <feof@plt+0x231a8>  // b.any
  425de8:	ldp	x14, x12, [x20]
  425dec:	ldp	x15, x13, [x21]
  425df0:	ldrb	w8, [x20, #16]
  425df4:	subs	x10, x12, x13
  425df8:	cset	w11, cc  // cc = lo, ul, last
  425dfc:	cbz	w8, 425edc <feof@plt+0x231dc>
  425e00:	mov	w8, #0x1                   	// #1
  425e04:	b	425ee0 <feof@plt+0x231e0>
  425e08:	ldrb	w10, [x21, #16]
  425e0c:	ldr	x8, [x21]
  425e10:	cbnz	w10, 426100 <feof@plt+0x23400>
  425e14:	ldr	x11, [x21, #8]
  425e18:	subs	x14, x9, #0x40
  425e1c:	mov	x10, #0xffffffffffffffbf    	// #-65
  425e20:	csinv	x10, x10, xzr, hi  // hi = pmore
  425e24:	csel	x12, x8, x11, hi  // hi = pmore
  425e28:	add	x10, x9, x10
  425e2c:	lsr	x10, x12, x10
  425e30:	tbz	w10, #0, 426100 <feof@plt+0x23400>
  425e34:	mov	x10, x21
  425e38:	ldr	w13, [x10, #18]!
  425e3c:	cmp	w3, #0xd
  425e40:	mov	w12, #0xc                   	// #12
  425e44:	neg	x15, x8
  425e48:	ldrh	w16, [x10, #4]
  425e4c:	cinc	w3, w12, ne  // ne = any
  425e50:	cmp	x11, #0x0
  425e54:	csinv	x12, x15, x8, eq  // eq = none
  425e58:	cmp	x9, #0x41
  425e5c:	stur	w13, [x29, #-16]
  425e60:	neg	x13, x11
  425e64:	sturh	w16, [x29, #-12]
  425e68:	b.cc	425ff4 <feof@plt+0x232f4>  // b.lo, b.ul, b.last
  425e6c:	cmp	x14, #0x3f
  425e70:	b.hi	4260c0 <feof@plt+0x233c0>  // b.pmore
  425e74:	mov	x15, #0xffffffffffffffff    	// #-1
  425e78:	lsl	x14, x15, x14
  425e7c:	bic	x12, x12, x14
  425e80:	b	4260c0 <feof@plt+0x233c0>
  425e84:	ldp	x15, x12, [x20]
  425e88:	ldp	x14, x13, [x21]
  425e8c:	ldrb	w8, [x20, #16]
  425e90:	adds	x10, x13, x12
  425e94:	add	x11, x14, x15
  425e98:	cinc	x11, x11, cs  // cs = hs, nlast
  425e9c:	cbz	w8, 425f2c <feof@plt+0x2322c>
  425ea0:	mov	w8, #0x1                   	// #1
  425ea4:	b	425f30 <feof@plt+0x23230>
  425ea8:	ldrb	w8, [x0, #1154]
  425eac:	cbz	w8, 425ed0 <feof@plt+0x231d0>
  425eb0:	ldrb	w8, [x0, #1152]
  425eb4:	cbz	w8, 425ec0 <feof@plt+0x231c0>
  425eb8:	ldr	w8, [x0, #28]
  425ebc:	cbnz	w8, 425ed0 <feof@plt+0x231d0>
  425ec0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  425ec4:	add	x2, x2, #0x350
  425ec8:	mov	w1, #0x15                  	// #21
  425ecc:	bl	422644 <feof@plt+0x1f944>
  425ed0:	ldr	x8, [x21, #16]
  425ed4:	ldr	q0, [x21]
  425ed8:	b	42644c <feof@plt+0x2374c>
  425edc:	ldrb	w8, [x21, #16]
  425ee0:	ldr	w16, [x29, #24]
  425ee4:	ldrh	w17, [x29, #28]
  425ee8:	cmp	x9, #0x41
  425eec:	str	w16, [sp, #16]
  425ef0:	strh	w17, [sp, #20]
  425ef4:	b.cc	425f1c <feof@plt+0x2321c>  // b.lo, b.ul, b.last
  425ef8:	sub	x17, x14, x15
  425efc:	sub	x16, x9, #0x40
  425f00:	cmp	x16, #0x3f
  425f04:	sub	x11, x17, x11
  425f08:	b.hi	425f84 <feof@plt+0x23284>  // b.pmore
  425f0c:	mov	x17, #0xffffffffffffffff    	// #-1
  425f10:	lsl	x16, x17, x16
  425f14:	bic	x11, x11, x16
  425f18:	b	425f84 <feof@plt+0x23284>
  425f1c:	cmp	x9, #0x40
  425f20:	b.ne	425f74 <feof@plt+0x23274>  // b.any
  425f24:	mov	x11, xzr
  425f28:	b	425f84 <feof@plt+0x23284>
  425f2c:	ldrb	w8, [x21, #16]
  425f30:	ldr	w16, [x29, #24]
  425f34:	ldrh	w17, [x29, #28]
  425f38:	cmp	x9, #0x41
  425f3c:	str	w16, [sp, #8]
  425f40:	strh	w17, [sp, #12]
  425f44:	b.cc	425f64 <feof@plt+0x23264>  // b.lo, b.ul, b.last
  425f48:	sub	x16, x9, #0x40
  425f4c:	cmp	x16, #0x3f
  425f50:	b.hi	425fc4 <feof@plt+0x232c4>  // b.pmore
  425f54:	mov	x17, #0xffffffffffffffff    	// #-1
  425f58:	lsl	x16, x17, x16
  425f5c:	bic	x11, x11, x16
  425f60:	b	425fc4 <feof@plt+0x232c4>
  425f64:	cmp	x9, #0x40
  425f68:	b.ne	425fb4 <feof@plt+0x232b4>  // b.any
  425f6c:	mov	x11, xzr
  425f70:	b	425fc4 <feof@plt+0x232c4>
  425f74:	mov	x16, #0xffffffffffffffff    	// #-1
  425f78:	lsl	x16, x16, x9
  425f7c:	mov	x11, xzr
  425f80:	bic	x10, x10, x16
  425f84:	ldr	w16, [sp, #16]
  425f88:	ldrh	w17, [sp, #20]
  425f8c:	str	w16, [x29, #24]
  425f90:	strh	w17, [x29, #28]
  425f94:	cbnz	w8, 42608c <feof@plt+0x2338c>
  425f98:	subs	x16, x9, #0x41
  425f9c:	b.cc	426004 <feof@plt+0x23304>  // b.lo, b.ul, b.last
  425fa0:	mov	w12, #0x1                   	// #1
  425fa4:	lsl	x13, x12, x16
  425fa8:	and	x12, x14, x13
  425fac:	and	x13, x15, x13
  425fb0:	b	426018 <feof@plt+0x23318>
  425fb4:	mov	x16, #0xffffffffffffffff    	// #-1
  425fb8:	lsl	x16, x16, x9
  425fbc:	mov	x11, xzr
  425fc0:	bic	x10, x10, x16
  425fc4:	ldr	w16, [sp, #8]
  425fc8:	ldrh	w17, [sp, #12]
  425fcc:	str	w16, [x29, #24]
  425fd0:	strh	w17, [x29, #28]
  425fd4:	cbnz	w8, 42608c <feof@plt+0x2338c>
  425fd8:	subs	x16, x9, #0x41
  425fdc:	b.cc	426060 <feof@plt+0x23360>  // b.lo, b.ul, b.last
  425fe0:	mov	w12, #0x1                   	// #1
  425fe4:	lsl	x13, x12, x16
  425fe8:	and	x12, x15, x13
  425fec:	and	x13, x14, x13
  425ff0:	b	426074 <feof@plt+0x23374>
  425ff4:	cmp	x9, #0x40
  425ff8:	b.ne	4260b0 <feof@plt+0x233b0>  // b.any
  425ffc:	mov	x12, xzr
  426000:	b	4260c0 <feof@plt+0x233c0>
  426004:	sub	x14, x9, #0x1
  426008:	mov	w15, #0x1                   	// #1
  42600c:	lsl	x14, x15, x14
  426010:	and	x12, x12, x14
  426014:	and	x13, x13, x14
  426018:	cmp	x12, #0x0
  42601c:	cset	w14, eq  // eq = none
  426020:	cmp	x13, #0x0
  426024:	cset	w13, eq  // eq = none
  426028:	cmp	w14, w13
  42602c:	b.eq	42608c <feof@plt+0x2338c>  // b.none
  426030:	cmp	x12, #0x0
  426034:	mov	x12, #0xffffffffffffffbf    	// #-65
  426038:	cset	w13, eq  // eq = none
  42603c:	cmp	x9, #0x40
  426040:	csinv	x12, x12, xzr, hi  // hi = pmore
  426044:	csel	x14, x11, x10, hi  // hi = pmore
  426048:	add	x9, x9, x12
  42604c:	lsr	x9, x14, x9
  426050:	tst	x9, #0x1
  426054:	cset	w9, eq  // eq = none
  426058:	eor	w9, w13, w9
  42605c:	b	426090 <feof@plt+0x23390>
  426060:	sub	x14, x9, #0x1
  426064:	mov	w15, #0x1                   	// #1
  426068:	lsl	x14, x15, x14
  42606c:	and	x12, x12, x14
  426070:	and	x13, x13, x14
  426074:	cmp	x12, #0x0
  426078:	cset	w14, eq  // eq = none
  42607c:	cmp	x13, #0x0
  426080:	cset	w13, eq  // eq = none
  426084:	eor	w13, w14, w13
  426088:	tbz	w13, #0, 426030 <feof@plt+0x23330>
  42608c:	mov	w9, wzr
  426090:	stp	x11, x10, [x19]
  426094:	ldrh	w10, [x29, #28]
  426098:	ldr	w11, [x29, #24]
  42609c:	strb	w8, [x19, #16]
  4260a0:	strb	w9, [x19, #17]
  4260a4:	strh	w10, [x19, #22]
  4260a8:	stur	w11, [x19, #18]
  4260ac:	b	426464 <feof@plt+0x23764>
  4260b0:	mov	x14, #0xffffffffffffffff    	// #-1
  4260b4:	lsl	x14, x14, x9
  4260b8:	mov	x12, xzr
  4260bc:	bic	x13, x13, x14
  4260c0:	cmp	x13, x11
  4260c4:	orr	x11, x12, x13
  4260c8:	stp	x12, x13, [x21]
  4260cc:	cset	w13, eq  // eq = none
  4260d0:	cmp	x12, x8
  4260d4:	cset	w8, eq  // eq = none
  4260d8:	cmp	x11, #0x0
  4260dc:	and	w8, w13, w8
  4260e0:	cset	w11, ne  // ne = any
  4260e4:	and	w8, w11, w8
  4260e8:	strb	w8, [x21, #17]
  4260ec:	ldurh	w8, [x29, #-12]
  4260f0:	ldur	w11, [x29, #-16]
  4260f4:	strh	w8, [x10, #4]
  4260f8:	mov	x8, x12
  4260fc:	str	w11, [x10]
  426100:	cbz	x8, 426148 <feof@plt+0x23448>
  426104:	mov	x8, #0xffffffffffffffff    	// #-1
  426108:	cmp	w3, #0xd
  42610c:	b.ne	426154 <feof@plt+0x23454>  // b.any
  426110:	ldr	x10, [x20, #16]
  426114:	ldr	q0, [x20]
  426118:	cmp	x8, x9
  42611c:	str	x10, [sp, #48]
  426120:	str	q0, [sp, #32]
  426124:	b.cs	4261b8 <feof@plt+0x234b8>  // b.hs, b.nlast
  426128:	ldp	x10, x11, [sp, #32]
  42612c:	subs	x12, x8, #0x40
  426130:	b.cc	4261d0 <feof@plt+0x234d0>  // b.lo, b.ul, b.last
  426134:	mov	x13, xzr
  426138:	mov	x14, x11
  42613c:	mov	x15, x12
  426140:	stp	x11, xzr, [sp, #32]
  426144:	b	4261dc <feof@plt+0x234dc>
  426148:	ldr	x8, [x21, #8]
  42614c:	cmp	w3, #0xd
  426150:	b.eq	426110 <feof@plt+0x23410>  // b.none
  426154:	ldp	x14, x13, [x20]
  426158:	ldrb	w11, [x20, #16]
  42615c:	subs	x12, x9, #0x40
  426160:	mov	x15, #0xffffffffffffffbf    	// #-65
  426164:	mov	x10, x20
  426168:	csinv	x15, x15, xzr, hi  // hi = pmore
  42616c:	ldr	w16, [x10, #18]!
  426170:	ldrh	w17, [x20, #22]
  426174:	csel	x18, x14, x13, hi  // hi = pmore
  426178:	cmp	w11, #0x0
  42617c:	add	x11, x9, x15
  426180:	lsr	x11, x18, x11
  426184:	cset	w15, eq  // eq = none
  426188:	and	w11, w11, w15
  42618c:	cmp	x8, x9
  426190:	sbfx	x11, x11, #0, #1
  426194:	strh	w17, [sp, #28]
  426198:	str	w16, [sp, #24]
  42619c:	b.cs	4261c8 <feof@plt+0x234c8>  // b.hs, b.nlast
  4261a0:	cmp	x9, #0x3f
  4261a4:	b.hi	42621c <feof@plt+0x2351c>  // b.pmore
  4261a8:	lsl	x14, x11, x9
  4261ac:	orr	x13, x14, x13
  4261b0:	mov	x14, x11
  4261b4:	b	42622c <feof@plt+0x2352c>
  4261b8:	ldrb	w8, [sp, #48]
  4261bc:	cbz	w8, 426274 <feof@plt+0x23574>
  4261c0:	mov	w8, wzr
  4261c4:	b	426284 <feof@plt+0x23584>
  4261c8:	mov	x8, x11
  4261cc:	b	426294 <feof@plt+0x23594>
  4261d0:	mov	x13, x11
  4261d4:	mov	x14, x10
  4261d8:	mov	x15, x8
  4261dc:	cbz	x15, 4261f8 <feof@plt+0x234f8>
  4261e0:	neg	x16, x15
  4261e4:	lsl	x14, x14, x15
  4261e8:	lsr	x16, x13, x16
  4261ec:	lsl	x13, x13, x15
  4261f0:	orr	x14, x16, x14
  4261f4:	stp	x14, x13, [sp, #32]
  4261f8:	subs	x16, x9, #0x41
  4261fc:	b.cc	426264 <feof@plt+0x23564>  // b.lo, b.ul, b.last
  426200:	sub	x15, x9, #0x40
  426204:	cmp	x15, #0x3f
  426208:	b.hi	426328 <feof@plt+0x23628>  // b.pmore
  42620c:	mov	x17, #0xffffffffffffffff    	// #-1
  426210:	lsl	x15, x17, x15
  426214:	bic	x14, x14, x15
  426218:	b	426328 <feof@plt+0x23628>
  42621c:	cmp	x9, #0x7f
  426220:	b.hi	42622c <feof@plt+0x2352c>  // b.pmore
  426224:	lsl	x15, x11, x9
  426228:	orr	x14, x15, x14
  42622c:	sub	x16, x8, #0x40
  426230:	cmp	x8, #0x3f
  426234:	csel	x15, x11, x14, hi  // hi = pmore
  426238:	csel	x16, x16, x8, hi  // hi = pmore
  42623c:	csel	x8, x14, x13, hi  // hi = pmore
  426240:	cbz	x16, 426290 <feof@plt+0x23590>
  426244:	neg	x13, x16
  426248:	lsr	x8, x8, x16
  42624c:	lsr	x14, x15, x16
  426250:	lsl	x15, x15, x13
  426254:	lsl	x11, x11, x13
  426258:	orr	x8, x8, x15
  42625c:	orr	x11, x14, x11
  426260:	b	426294 <feof@plt+0x23594>
  426264:	cmp	x9, #0x40
  426268:	b.ne	426318 <feof@plt+0x23618>  // b.any
  42626c:	mov	x14, xzr
  426270:	b	426328 <feof@plt+0x23628>
  426274:	ldp	x9, x8, [sp, #32]
  426278:	orr	x8, x9, x8
  42627c:	cmp	x8, #0x0
  426280:	cset	w8, ne  // ne = any
  426284:	strb	w8, [sp, #49]
  426288:	stp	xzr, xzr, [sp, #32]
  42628c:	b	426444 <feof@plt+0x23744>
  426290:	mov	x11, x15
  426294:	ldr	w13, [sp, #24]
  426298:	ldrh	w14, [sp, #28]
  42629c:	cmp	x9, #0x41
  4262a0:	str	w13, [x29, #24]
  4262a4:	strh	w14, [x29, #28]
  4262a8:	b.cc	4262c4 <feof@plt+0x235c4>  // b.lo, b.ul, b.last
  4262ac:	cmp	x12, #0x3f
  4262b0:	b.hi	4262e4 <feof@plt+0x235e4>  // b.pmore
  4262b4:	mov	x9, #0xffffffffffffffff    	// #-1
  4262b8:	lsl	x9, x9, x12
  4262bc:	bic	x11, x11, x9
  4262c0:	b	4262e4 <feof@plt+0x235e4>
  4262c4:	cmp	x9, #0x40
  4262c8:	b.ne	4262d4 <feof@plt+0x235d4>  // b.any
  4262cc:	mov	x11, xzr
  4262d0:	b	4262e4 <feof@plt+0x235e4>
  4262d4:	mov	x12, #0xffffffffffffffff    	// #-1
  4262d8:	lsl	x9, x12, x9
  4262dc:	mov	x11, xzr
  4262e0:	bic	x8, x8, x9
  4262e4:	ldr	w9, [x29, #24]
  4262e8:	ldrh	w12, [x29, #28]
  4262ec:	str	w9, [sp, #24]
  4262f0:	strh	w12, [sp, #28]
  4262f4:	stur	w9, [x29, #-8]
  4262f8:	sturh	w12, [x29, #-4]
  4262fc:	stp	x11, x8, [x20]
  426300:	and	w8, w12, #0xffff
  426304:	mov	w9, w9
  426308:	strb	wzr, [x20, #17]
  42630c:	strh	w8, [x10, #4]
  426310:	str	w9, [x10]
  426314:	b	426454 <feof@plt+0x23754>
  426318:	mov	x15, #0xffffffffffffffff    	// #-1
  42631c:	lsl	x15, x15, x9
  426320:	mov	x14, xzr
  426324:	bic	x13, x13, x15
  426328:	ldrb	w15, [sp, #48]
  42632c:	stp	x14, x13, [sp, #32]
  426330:	cbz	w15, 42633c <feof@plt+0x2363c>
  426334:	strb	wzr, [sp, #49]
  426338:	b	426444 <feof@plt+0x23744>
  42633c:	ldur	w17, [sp, #50]
  426340:	ldrh	w18, [sp, #54]
  426344:	subs	x15, x9, #0x40
  426348:	stur	w17, [x29, #-8]
  42634c:	sturh	w18, [x29, #-4]
  426350:	b.ls	42636c <feof@plt+0x2366c>  // b.plast
  426354:	lsr	x16, x14, x16
  426358:	tst	x16, #0x1
  42635c:	csetm	x17, ne  // ne = any
  426360:	cmp	x9, #0x7f
  426364:	b.ls	426384 <feof@plt+0x23684>  // b.plast
  426368:	b	42639c <feof@plt+0x2369c>
  42636c:	sub	x16, x9, #0x1
  426370:	lsr	x16, x13, x16
  426374:	tst	x16, #0x1
  426378:	csetm	x17, ne  // ne = any
  42637c:	cmp	x9, #0x40
  426380:	b.ne	426390 <feof@plt+0x23690>  // b.any
  426384:	lsl	x16, x17, x9
  426388:	orr	x14, x16, x14
  42638c:	b	42639c <feof@plt+0x2369c>
  426390:	lsl	x14, x17, x9
  426394:	orr	x13, x14, x13
  426398:	mov	x14, x17
  42639c:	cmp	x8, #0x3f
  4263a0:	csel	x16, x17, x14, hi  // hi = pmore
  4263a4:	csel	x12, x12, x8, hi  // hi = pmore
  4263a8:	csel	x8, x14, x13, hi  // hi = pmore
  4263ac:	cbz	x12, 4263cc <feof@plt+0x236cc>
  4263b0:	neg	x13, x12
  4263b4:	lsr	x8, x8, x12
  4263b8:	lsr	x12, x16, x12
  4263bc:	lsl	x14, x16, x13
  4263c0:	lsl	x13, x17, x13
  4263c4:	orr	x8, x8, x14
  4263c8:	orr	x16, x12, x13
  4263cc:	ldur	w12, [x29, #-8]
  4263d0:	ldurh	w13, [x29, #-4]
  4263d4:	cmp	x9, #0x41
  4263d8:	str	w12, [x29, #24]
  4263dc:	strh	w13, [x29, #28]
  4263e0:	b.cc	4263fc <feof@plt+0x236fc>  // b.lo, b.ul, b.last
  4263e4:	cmp	x15, #0x3f
  4263e8:	b.hi	42641c <feof@plt+0x2371c>  // b.pmore
  4263ec:	mov	x9, #0xffffffffffffffff    	// #-1
  4263f0:	lsl	x9, x9, x15
  4263f4:	bic	x16, x16, x9
  4263f8:	b	42641c <feof@plt+0x2371c>
  4263fc:	cmp	x9, #0x40
  426400:	b.ne	42640c <feof@plt+0x2370c>  // b.any
  426404:	mov	x16, xzr
  426408:	b	42641c <feof@plt+0x2371c>
  42640c:	mov	x12, #0xffffffffffffffff    	// #-1
  426410:	lsl	x9, x12, x9
  426414:	mov	x16, xzr
  426418:	bic	x8, x8, x9
  42641c:	ldr	w9, [x29, #24]
  426420:	ldrh	w12, [x29, #28]
  426424:	cmp	x11, x8
  426428:	cset	w8, ne  // ne = any
  42642c:	cmp	x10, x16
  426430:	cset	w10, ne  // ne = any
  426434:	orr	w8, w10, w8
  426438:	stur	w9, [x29, #-8]
  42643c:	sturh	w12, [x29, #-4]
  426440:	strb	w8, [sp, #49]
  426444:	ldr	x8, [sp, #48]
  426448:	ldr	q0, [sp, #32]
  42644c:	str	x8, [x20, #16]
  426450:	str	q0, [x20]
  426454:	ldr	x8, [x20, #16]
  426458:	ldr	q0, [x20]
  42645c:	str	x8, [x19, #16]
  426460:	str	q0, [x19]
  426464:	ldp	x20, x19, [sp, #112]
  426468:	ldr	x21, [sp, #96]
  42646c:	ldp	x29, x30, [sp, #80]
  426470:	add	sp, sp, #0x80
  426474:	ret
  426478:	ldr	w8, [x0, #204]
  42647c:	cmp	w8, #0x0
  426480:	cset	w0, ne  // ne = any
  426484:	ret
  426488:	sub	sp, sp, #0x130
  42648c:	stp	x24, x23, [sp, #256]
  426490:	stp	x22, x21, [sp, #272]
  426494:	stp	x20, x19, [sp, #288]
  426498:	mov	w21, w6
  42649c:	mov	w23, w4
  4264a0:	mov	x22, x2
  4264a4:	mov	x24, x1
  4264a8:	mov	x19, x0
  4264ac:	stp	x29, x30, [sp, #208]
  4264b0:	stp	x28, x27, [sp, #224]
  4264b4:	stp	x26, x25, [sp, #240]
  4264b8:	add	x29, sp, #0xd0
  4264bc:	stp	w5, w3, [sp, #64]
  4264c0:	cbnz	x2, 4264dc <feof@plt+0x237dc>
  4264c4:	adrp	x3, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4264c8:	add	x3, x3, #0x389
  4264cc:	mov	w1, #0x4                   	// #4
  4264d0:	mov	x0, x19
  4264d4:	mov	w2, w21
  4264d8:	bl	422c94 <feof@plt+0x1ff94>
  4264dc:	ldr	x20, [x19, #296]
  4264e0:	mov	x0, x24
  4264e4:	bl	454b38 <feof@plt+0x51e38>
  4264e8:	mov	w2, w0
  4264ec:	mov	w3, #0x1                   	// #1
  4264f0:	mov	x0, x20
  4264f4:	mov	x1, x24
  4264f8:	bl	4544f0 <feof@plt+0x517f0>
  4264fc:	ldr	x8, [x0]
  426500:	cbz	x8, 426518 <feof@plt+0x23818>
  426504:	ldr	x9, [x8, #8]
  426508:	cmp	x9, x22
  42650c:	b.eq	426580 <feof@plt+0x23880>  // b.none
  426510:	ldr	x8, [x8]
  426514:	cbnz	x8, 426504 <feof@plt+0x23804>
  426518:	str	x0, [sp, #48]
  42651c:	mov	w0, #0x1                   	// #1
  426520:	mov	w1, #0xd8                  	// #216
  426524:	stp	w21, w23, [sp, #16]
  426528:	mov	w20, #0x1                   	// #1
  42652c:	bl	455390 <_obstack_memory_used@@Base+0x168>
  426530:	ldr	x8, [x19]
  426534:	mov	w9, #0xffffffff            	// #-1
  426538:	mov	x21, x0
  42653c:	mov	x28, x0
  426540:	cmp	x8, #0x0
  426544:	cset	w8, eq  // eq = none
  426548:	str	w9, [x0, #200]
  42654c:	strb	w8, [x0, #212]
  426550:	mov	x0, x24
  426554:	str	x22, [x28, #64]!
  426558:	str	x24, [sp, #8]
  42655c:	bl	45547c <_obstack_memory_used@@Base+0x254>
  426560:	ldr	w8, [sp, #64]
  426564:	str	x0, [x21]
  426568:	tbnz	w8, #0, 42658c <feof@plt+0x2388c>
  42656c:	ldr	x8, [x19]
  426570:	cbz	x8, 426588 <feof@plt+0x23888>
  426574:	ldr	x8, [x8, #80]
  426578:	ldrb	w20, [x8, #214]
  42657c:	b	42658c <feof@plt+0x2388c>
  426580:	ldr	x21, [x8, #24]
  426584:	b	426d70 <feof@plt+0x24070>
  426588:	mov	w20, wzr
  42658c:	add	x8, x19, #0x148
  426590:	str	x22, [sp, #56]
  426594:	str	wzr, [sp, #24]
  426598:	str	xzr, [sp, #32]
  42659c:	strb	w20, [x21, #214]
  4265a0:	str	x8, [sp, #40]
  4265a4:	ldr	w8, [sp, #68]
  4265a8:	tbnz	w8, #0, 426ac4 <feof@plt+0x23dc4>
  4265ac:	ldrb	w8, [x19, #1145]
  4265b0:	cbz	w8, 4266cc <feof@plt+0x239cc>
  4265b4:	ldr	x23, [x21, #64]
  4265b8:	ldr	x20, [x21]
  4265bc:	b	4265ec <feof@plt+0x238ec>
  4265c0:	mov	x0, x27
  4265c4:	mov	x1, x20
  4265c8:	mov	x2, x25
  4265cc:	bl	402640 <memcpy@plt>
  4265d0:	strb	wzr, [x26, x22]
  4265d4:	ldrb	w2, [x23, #20]
  4265d8:	mov	x0, x19
  4265dc:	mov	x1, x26
  4265e0:	bl	428490 <feof@plt+0x25790>
  4265e4:	mov	x23, x0
  4265e8:	add	x20, x24, #0x1
  4265ec:	ldr	x8, [x23, #32]
  4265f0:	cbz	x8, 426600 <feof@plt+0x23900>
  4265f4:	ldr	x0, [x8]
  4265f8:	cbnz	x0, 426614 <feof@plt+0x23914>
  4265fc:	b	426638 <feof@plt+0x23938>
  426600:	mov	x0, x23
  426604:	bl	4281dc <feof@plt+0x254dc>
  426608:	ldr	x8, [x23, #32]
  42660c:	ldr	x0, [x8]
  426610:	cbz	x0, 426638 <feof@plt+0x23938>
  426614:	mov	x22, xzr
  426618:	mov	x1, x20
  42661c:	bl	453a30 <feof@plt+0x50d30>
  426620:	cbz	w0, 4266b4 <feof@plt+0x239b4>
  426624:	ldr	x8, [x23, #32]
  426628:	add	x8, x8, x22
  42662c:	ldr	x0, [x8, #16]
  426630:	add	x22, x22, #0x10
  426634:	cbnz	x0, 426618 <feof@plt+0x23918>
  426638:	ldrb	w8, [x20]
  42663c:	cmp	w8, #0x2f
  426640:	b.eq	4266cc <feof@plt+0x239cc>  // b.none
  426644:	mov	w1, #0x2f                  	// #47
  426648:	mov	x0, x20
  42664c:	bl	4027b0 <strchr@plt>
  426650:	cbz	x0, 4266cc <feof@plt+0x239cc>
  426654:	mov	x24, x0
  426658:	subs	x8, x0, x20
  42665c:	b.eq	4266cc <feof@plt+0x239cc>  // b.none
  426660:	ldr	w9, [x23, #16]
  426664:	add	x25, x8, #0x1
  426668:	add	x22, x25, x9
  42666c:	add	x0, x22, #0x2
  426670:	bl	45535c <_obstack_memory_used@@Base+0x134>
  426674:	ldr	w2, [x23, #16]
  426678:	ldr	x1, [x23, #8]
  42667c:	mov	x26, x0
  426680:	add	x27, x0, x2
  426684:	bl	402640 <memcpy@plt>
  426688:	ldr	w8, [x23, #16]
  42668c:	cbz	w8, 4265c0 <feof@plt+0x238c0>
  426690:	ldr	x9, [x23, #8]
  426694:	sub	w8, w8, #0x1
  426698:	ldrb	w8, [x9, w8, uxtw]
  42669c:	cmp	w8, #0x2f
  4266a0:	b.eq	4265c0 <feof@plt+0x238c0>  // b.none
  4266a4:	mov	w8, #0x2f                  	// #47
  4266a8:	strb	w8, [x27], #1
  4266ac:	add	x22, x22, #0x1
  4266b0:	b	4265c0 <feof@plt+0x238c0>
  4266b4:	ldr	x8, [x23, #32]
  4266b8:	add	x8, x8, x22
  4266bc:	ldr	x0, [x8, #8]
  4266c0:	bl	45547c <_obstack_memory_used@@Base+0x254>
  4266c4:	mov	x25, x0
  4266c8:	cbnz	x0, 4266f0 <feof@plt+0x239f0>
  4266cc:	ldr	x25, [x21, #64]
  4266d0:	ldr	x20, [x21]
  4266d4:	ldr	x8, [x25, #40]
  4266d8:	cbz	x8, 426740 <feof@plt+0x23a40>
  4266dc:	mov	x0, x20
  4266e0:	mov	x1, x25
  4266e4:	blr	x8
  4266e8:	mov	x25, x0
  4266ec:	cbz	x25, 426814 <feof@plt+0x23b14>
  4266f0:	ldrb	w8, [x19, #1245]
  4266f4:	cbz	w8, 426798 <feof@plt+0x23a98>
  4266f8:	ldr	x8, [x28]
  4266fc:	ldrb	w8, [x8, #20]
  426700:	cbz	w8, 426798 <feof@plt+0x23a98>
  426704:	mov	x0, x25
  426708:	bl	454e78 <feof@plt+0x52178>
  42670c:	mov	x20, x0
  426710:	cbz	x0, 426790 <feof@plt+0x23a90>
  426714:	mov	x0, x20
  426718:	bl	4026d0 <strlen@plt>
  42671c:	mov	x23, x0
  426720:	mov	x0, x25
  426724:	bl	4026d0 <strlen@plt>
  426728:	cmp	x23, x0
  42672c:	b.cs	426790 <feof@plt+0x23a90>  // b.hs, b.nlast
  426730:	mov	x0, x25
  426734:	bl	402770 <free@plt>
  426738:	mov	x25, x20
  42673c:	b	426798 <feof@plt+0x23a98>
  426740:	ldr	w23, [x25, #16]
  426744:	mov	x0, x20
  426748:	bl	4026d0 <strlen@plt>
  42674c:	add	x22, x23, #0x1
  426750:	add	x24, x0, #0x1
  426754:	add	x0, x24, x22
  426758:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42675c:	ldr	x1, [x25, #8]
  426760:	mov	x2, x23
  426764:	mov	x25, x0
  426768:	bl	402640 <memcpy@plt>
  42676c:	cbz	w23, 4267fc <feof@plt+0x23afc>
  426770:	add	x8, x23, x25
  426774:	ldurb	w8, [x8, #-1]
  426778:	cmp	w8, #0x2f
  42677c:	b.eq	426800 <feof@plt+0x23b00>  // b.none
  426780:	mov	w8, #0x2f                  	// #47
  426784:	strb	w8, [x25, x23]
  426788:	mov	x23, x22
  42678c:	b	426800 <feof@plt+0x23b00>
  426790:	mov	x0, x20
  426794:	bl	402770 <free@plt>
  426798:	mov	x0, x25
  42679c:	bl	454b38 <feof@plt+0x51e38>
  4267a0:	ldr	x8, [x19, #320]
  4267a4:	mov	w23, w0
  4267a8:	mov	x1, x25
  4267ac:	mov	w2, w23
  4267b0:	mov	x0, x8
  4267b4:	bl	454390 <feof@plt+0x51690>
  4267b8:	cbz	x0, 4267c8 <feof@plt+0x23ac8>
  4267bc:	mov	w8, #0x2                   	// #2
  4267c0:	str	w8, [x21, #204]
  4267c4:	b	426a64 <feof@plt+0x23d64>
  4267c8:	ldr	x8, [x21]
  4267cc:	str	x25, [x21, #8]
  4267d0:	ldrb	w8, [x8]
  4267d4:	cbz	w8, 426998 <feof@plt+0x23c98>
  4267d8:	ldr	x8, [x19, #968]
  4267dc:	cbz	x8, 426998 <feof@plt+0x23c98>
  4267e0:	ldr	x8, [x19, #280]
  4267e4:	cbz	x8, 42682c <feof@plt+0x23b2c>
  4267e8:	ldrb	w9, [x8, #214]
  4267ec:	cbz	w9, 426824 <feof@plt+0x23b24>
  4267f0:	ldr	x8, [x8, #32]
  4267f4:	cbnz	x8, 4267e8 <feof@plt+0x23ae8>
  4267f8:	b	42682c <feof@plt+0x23b2c>
  4267fc:	mov	x23, xzr
  426800:	add	x0, x25, x23
  426804:	mov	x1, x20
  426808:	mov	x2, x24
  42680c:	bl	402640 <memcpy@plt>
  426810:	cbnz	x25, 4266f0 <feof@plt+0x239f0>
  426814:	mov	w8, #0x2                   	// #2
  426818:	str	w8, [x21, #204]
  42681c:	str	xzr, [x21, #8]
  426820:	b	426a64 <feof@plt+0x23d64>
  426824:	ldrb	w8, [x8, #212]
  426828:	cbz	w8, 426998 <feof@plt+0x23c98>
  42682c:	mov	x0, x25
  426830:	bl	4026d0 <strlen@plt>
  426834:	add	x22, x0, #0x5
  426838:	mov	x27, x0
  42683c:	mov	x0, x22
  426840:	bl	45535c <_obstack_memory_used@@Base+0x134>
  426844:	mov	x1, x25
  426848:	mov	x2, x27
  42684c:	mov	x24, x0
  426850:	bl	402640 <memcpy@plt>
  426854:	mov	w9, #0x672e                	// #26414
  426858:	add	x8, x24, x27
  42685c:	movk	w9, #0x6863, lsl #16
  426860:	add	x2, sp, #0x48
  426864:	mov	w0, wzr
  426868:	mov	x1, x24
  42686c:	str	w9, [x8]
  426870:	strb	wzr, [x8, #4]
  426874:	bl	402b50 <__xstat@plt>
  426878:	cbnz	w0, 426990 <feof@plt+0x23c90>
  42687c:	ldr	w8, [sp, #88]
  426880:	and	w8, w8, #0xf000
  426884:	cmp	w8, #0x4, lsl #12
  426888:	b.ne	42695c <feof@plt+0x23c5c>  // b.any
  42688c:	mov	x0, x24
  426890:	bl	4029e0 <opendir@plt>
  426894:	cbz	x0, 426988 <feof@plt+0x23c88>
  426898:	mov	x26, x0
  42689c:	add	x8, x27, x24
  4268a0:	mov	w9, #0x2f                  	// #47
  4268a4:	strb	w9, [x8, #4]
  4268a8:	str	x22, [sp, #24]
  4268ac:	mov	x0, x26
  4268b0:	bl	402990 <readdir@plt>
  4268b4:	cbnz	x0, 4268c8 <feof@plt+0x23bc8>
  4268b8:	b	426978 <feof@plt+0x23c78>
  4268bc:	mov	x0, x26
  4268c0:	bl	402990 <readdir@plt>
  4268c4:	cbz	x0, 426978 <feof@plt+0x23c78>
  4268c8:	add	x27, x0, #0x13
  4268cc:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  4268d0:	mov	x0, x27
  4268d4:	add	x1, x1, #0xb2d
  4268d8:	bl	402b40 <strcmp@plt>
  4268dc:	cbz	w0, 4268bc <feof@plt+0x23bbc>
  4268e0:	mov	x0, x27
  4268e4:	bl	4026d0 <strlen@plt>
  4268e8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  4268ec:	mov	x20, x0
  4268f0:	mov	x0, x27
  4268f4:	add	x1, x1, #0xb2c
  4268f8:	bl	402b40 <strcmp@plt>
  4268fc:	cbz	w0, 4268bc <feof@plt+0x23bbc>
  426900:	ldr	x9, [sp, #24]
  426904:	add	x2, x20, #0x1
  426908:	add	x8, x2, x22
  42690c:	cmp	x8, x9
  426910:	b.ls	426934 <feof@plt+0x23c34>  // b.plast
  426914:	add	x8, x9, x20
  426918:	add	x1, x8, #0x41
  42691c:	mov	x0, x24
  426920:	str	x1, [sp, #24]
  426924:	mov	x20, x2
  426928:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  42692c:	mov	x2, x20
  426930:	mov	x24, x0
  426934:	add	x0, x24, x22
  426938:	mov	x1, x27
  42693c:	bl	402640 <memcpy@plt>
  426940:	mov	x0, x19
  426944:	mov	x1, x21
  426948:	mov	x2, x24
  42694c:	bl	428694 <feof@plt+0x25994>
  426950:	tbz	w0, #0, 4268ac <feof@plt+0x23bac>
  426954:	mov	w20, #0x1                   	// #1
  426958:	b	42697c <feof@plt+0x23c7c>
  42695c:	mov	x0, x19
  426960:	mov	x1, x21
  426964:	mov	x2, x24
  426968:	bl	428694 <feof@plt+0x25994>
  42696c:	and	w20, w0, #0x1
  426970:	cbz	w20, 426988 <feof@plt+0x23c88>
  426974:	b	426dac <feof@plt+0x240ac>
  426978:	mov	w20, wzr
  42697c:	mov	x0, x26
  426980:	bl	402870 <closedir@plt>
  426984:	cbnz	w20, 426dac <feof@plt+0x240ac>
  426988:	mov	w8, #0x1                   	// #1
  42698c:	str	w8, [sp, #24]
  426990:	mov	x0, x24
  426994:	bl	402770 <free@plt>
  426998:	mov	x0, x21
  42699c:	bl	427fbc <feof@plt+0x252bc>
  4269a0:	tbnz	w0, #0, 426b5c <feof@plt+0x23e5c>
  4269a4:	ldr	w8, [x21, #204]
  4269a8:	cmp	w8, #0x2
  4269ac:	b.ne	426b48 <feof@plt+0x23e48>  // b.any
  4269b0:	mov	x0, x25
  4269b4:	bl	4026d0 <strlen@plt>
  4269b8:	mov	x20, x0
  4269bc:	ldp	x0, x8, [x19, #352]
  4269c0:	add	x1, x20, #0x1
  4269c4:	sub	x8, x8, x0
  4269c8:	cmp	x8, x1
  4269cc:	b.cs	4269dc <feof@plt+0x23cdc>  // b.hs, b.nlast
  4269d0:	ldr	x0, [sp, #40]
  4269d4:	bl	45500c <_obstack_newchunk@@Base>
  4269d8:	ldr	x0, [x19, #352]
  4269dc:	mov	x1, x25
  4269e0:	mov	x2, x20
  4269e4:	bl	402640 <memcpy@plt>
  4269e8:	ldr	x8, [x19, #352]
  4269ec:	add	x8, x8, x20
  4269f0:	add	x9, x8, #0x1
  4269f4:	str	x9, [x19, #352]
  4269f8:	strb	wzr, [x8]
  4269fc:	ldp	x20, x8, [x19, #344]
  426a00:	cmp	x8, x20
  426a04:	b.ne	426a14 <feof@plt+0x23d14>  // b.any
  426a08:	ldrb	w9, [x19, #408]
  426a0c:	orr	w9, w9, #0x2
  426a10:	strb	w9, [x19, #408]
  426a14:	ldr	x9, [x19, #376]
  426a18:	ldr	x10, [x19, #336]
  426a1c:	ldr	x11, [x19, #360]
  426a20:	mov	x0, x25
  426a24:	add	x8, x9, x8
  426a28:	bic	x8, x8, x9
  426a2c:	sub	x12, x11, x10
  426a30:	sub	x9, x8, x10
  426a34:	cmp	x9, x12
  426a38:	csel	x8, x11, x8, hi  // hi = pmore
  426a3c:	stp	x8, x8, [x19, #344]
  426a40:	bl	402770 <free@plt>
  426a44:	ldr	x0, [x19, #320]
  426a48:	mov	w3, #0x1                   	// #1
  426a4c:	mov	x1, x20
  426a50:	mov	w2, w23
  426a54:	bl	4544f0 <feof@plt+0x517f0>
  426a58:	str	x20, [x0]
  426a5c:	ldr	x8, [x21]
  426a60:	str	x8, [x21, #8]
  426a64:	ldr	x8, [x28]
  426a68:	ldr	x20, [x8]
  426a6c:	str	x20, [x28]
  426a70:	cbz	x20, 426ad4 <feof@plt+0x23dd4>
  426a74:	ldr	x8, [x19, #208]
  426a78:	cmp	x20, x8
  426a7c:	b.eq	426a98 <feof@plt+0x23d98>  // b.none
  426a80:	ldr	x8, [x19, #200]
  426a84:	cmp	x20, x8
  426a88:	b.ne	4265a4 <feof@plt+0x238a4>  // b.any
  426a8c:	mov	w8, #0x1                   	// #1
  426a90:	str	w8, [sp, #32]
  426a94:	b	426aa0 <feof@plt+0x23da0>
  426a98:	mov	w8, #0x1                   	// #1
  426a9c:	str	w8, [sp, #36]
  426aa0:	ldr	x8, [sp, #48]
  426aa4:	ldr	x22, [x8]
  426aa8:	cbz	x22, 4265a4 <feof@plt+0x238a4>
  426aac:	ldr	x8, [x22, #8]
  426ab0:	cmp	x8, x20
  426ab4:	b.eq	426b28 <feof@plt+0x23e28>  // b.none
  426ab8:	ldr	x22, [x22]
  426abc:	cbnz	x22, 426aac <feof@plt+0x23dac>
  426ac0:	b	4265a4 <feof@plt+0x238a4>
  426ac4:	ldr	x22, [sp, #48]
  426ac8:	mov	w24, wzr
  426acc:	mov	w23, wzr
  426ad0:	b	426c00 <feof@plt+0x23f00>
  426ad4:	ldr	x8, [x19, #984]
  426ad8:	cbz	x8, 426b78 <feof@plt+0x23e78>
  426adc:	ldr	x1, [sp, #8]
  426ae0:	mov	x0, x19
  426ae4:	mov	x2, x28
  426ae8:	blr	x8
  426aec:	str	x0, [x21, #8]
  426af0:	cbz	x0, 426b70 <feof@plt+0x23e70>
  426af4:	mov	x0, x21
  426af8:	bl	427fbc <feof@plt+0x252bc>
  426afc:	tbz	w0, #0, 426b68 <feof@plt+0x23e68>
  426b00:	ldr	x8, [x19, #280]
  426b04:	ldr	x1, [sp, #48]
  426b08:	str	x8, [x21, #32]
  426b0c:	str	x21, [x19, #280]
  426b10:	ldr	x8, [x1]
  426b14:	cbnz	x8, 426d70 <feof@plt+0x24070>
  426b18:	str	x21, [x1]
  426b1c:	ldr	x0, [x19, #296]
  426b20:	bl	4549c0 <feof@plt+0x51cc0>
  426b24:	b	426d70 <feof@plt+0x24070>
  426b28:	ldr	x0, [x21]
  426b2c:	bl	402770 <free@plt>
  426b30:	mov	x0, x21
  426b34:	bl	402770 <free@plt>
  426b38:	ldr	x21, [x22, #24]
  426b3c:	ldr	x22, [sp, #48]
  426b40:	ldp	w23, w24, [sp, #32]
  426b44:	b	426c10 <feof@plt+0x23f10>
  426b48:	ldr	w3, [sp, #16]
  426b4c:	mov	x0, x19
  426b50:	mov	x1, x21
  426b54:	mov	w2, wzr
  426b58:	bl	426db4 <feof@plt+0x240b4>
  426b5c:	ldr	x22, [sp, #48]
  426b60:	ldp	w23, w24, [sp, #32]
  426b64:	b	426c00 <feof@plt+0x23f00>
  426b68:	ldr	x0, [x21, #8]
  426b6c:	bl	402770 <free@plt>
  426b70:	ldr	x8, [x21]
  426b74:	str	x8, [x21, #8]
  426b78:	ldr	w8, [sp, #24]
  426b7c:	ldr	x22, [sp, #48]
  426b80:	tst	w8, #0xff
  426b84:	b.eq	426bc0 <feof@plt+0x23ec0>  // b.none
  426b88:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  426b8c:	add	x2, x2, #0x3a5
  426b90:	mov	w1, #0x3                   	// #3
  426b94:	mov	x0, x19
  426b98:	bl	4223e4 <feof@plt+0x1f6e4>
  426b9c:	mov	x0, x19
  426ba0:	bl	420538 <feof@plt+0x1d838>
  426ba4:	ldrb	w8, [x0, #84]
  426ba8:	cbnz	w8, 426bc0 <feof@plt+0x23ec0>
  426bac:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  426bb0:	add	x2, x2, #0x3dd
  426bb4:	mov	w1, #0x3                   	// #3
  426bb8:	mov	x0, x19
  426bbc:	bl	4223e4 <feof@plt+0x1f6e4>
  426bc0:	ldp	w23, w24, [sp, #32]
  426bc4:	ldr	w2, [sp, #20]
  426bc8:	ldr	w8, [sp, #64]
  426bcc:	tbz	w8, #0, 426bf0 <feof@plt+0x23ef0>
  426bd0:	ldr	x0, [x21]
  426bd4:	bl	402770 <free@plt>
  426bd8:	mov	x0, x21
  426bdc:	bl	402770 <free@plt>
  426be0:	ldr	x8, [x22]
  426be4:	cbz	x8, 426d94 <feof@plt+0x24094>
  426be8:	mov	x21, xzr
  426bec:	b	426d70 <feof@plt+0x24070>
  426bf0:	ldr	w3, [sp, #16]
  426bf4:	mov	x0, x19
  426bf8:	mov	x1, x21
  426bfc:	bl	426db4 <feof@plt+0x240b4>
  426c00:	ldr	x8, [x19, #280]
  426c04:	mov	x20, xzr
  426c08:	str	x8, [x21, #32]
  426c0c:	str	x21, [x19, #280]
  426c10:	ldr	x0, [x19, #312]
  426c14:	ldr	w8, [x0]
  426c18:	cmp	w8, #0x7f
  426c1c:	b.ne	426c3c <feof@plt+0x23f3c>  // b.any
  426c20:	mov	w0, #0xff0                 	// #4080
  426c24:	bl	45535c <_obstack_memory_used@@Base+0x134>
  426c28:	str	wzr, [x0]
  426c2c:	ldr	x9, [x19, #312]
  426c30:	mov	w8, wzr
  426c34:	str	x9, [x0, #8]
  426c38:	str	x0, [x19, #312]
  426c3c:	add	w9, w8, #0x1
  426c40:	str	w9, [x0]
  426c44:	ldr	x9, [x22]
  426c48:	mov	w8, w8
  426c4c:	add	x8, x0, x8, lsl #5
  426c50:	str	x9, [x8, #16]!
  426c54:	ldr	x9, [sp, #56]
  426c58:	str	x9, [x8, #8]
  426c5c:	ldr	x9, [x19, #40]
  426c60:	ldr	w9, [x9, #56]
  426c64:	str	x21, [x8, #24]
  426c68:	str	w9, [x8, #16]
  426c6c:	str	x8, [x22]
  426c70:	tbz	w24, #0, 426cf4 <feof@plt+0x23ff4>
  426c74:	ldr	x9, [x19, #208]
  426c78:	ldr	x10, [sp, #56]
  426c7c:	cmp	x9, x10
  426c80:	b.eq	426cf4 <feof@plt+0x23ff4>  // b.none
  426c84:	cmp	x20, x9
  426c88:	b.eq	426cf4 <feof@plt+0x23ff4>  // b.none
  426c8c:	ldr	x0, [x19, #312]
  426c90:	ldr	w11, [x0]
  426c94:	cmp	w11, #0x7f
  426c98:	b.ne	426cc4 <feof@plt+0x23fc4>  // b.any
  426c9c:	mov	w0, #0xff0                 	// #4080
  426ca0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  426ca4:	str	wzr, [x0]
  426ca8:	ldr	x8, [x19, #312]
  426cac:	mov	w11, wzr
  426cb0:	str	x8, [x0, #8]
  426cb4:	str	x0, [x19, #312]
  426cb8:	ldr	x10, [x22]
  426cbc:	ldr	x9, [x19, #208]
  426cc0:	b	426cc8 <feof@plt+0x23fc8>
  426cc4:	mov	x10, x8
  426cc8:	add	w8, w11, #0x1
  426ccc:	mov	w11, w11
  426cd0:	str	w8, [x0]
  426cd4:	add	x8, x0, x11, lsl #5
  426cd8:	str	x10, [x8, #16]!
  426cdc:	str	x9, [x8, #8]
  426ce0:	ldr	x9, [x19, #40]
  426ce4:	ldr	w9, [x9, #56]
  426ce8:	str	x21, [x8, #24]
  426cec:	str	w9, [x8, #16]
  426cf0:	str	x8, [x22]
  426cf4:	tbz	w23, #0, 426d70 <feof@plt+0x24070>
  426cf8:	ldr	x9, [x19, #200]
  426cfc:	ldr	x10, [sp, #56]
  426d00:	cmp	x9, x10
  426d04:	b.eq	426d70 <feof@plt+0x24070>  // b.none
  426d08:	cmp	x20, x9
  426d0c:	b.eq	426d70 <feof@plt+0x24070>  // b.none
  426d10:	ldr	x0, [x19, #312]
  426d14:	ldr	w10, [x0]
  426d18:	cmp	w10, #0x7f
  426d1c:	b.ne	426d44 <feof@plt+0x24044>  // b.any
  426d20:	mov	w0, #0xff0                 	// #4080
  426d24:	bl	45535c <_obstack_memory_used@@Base+0x134>
  426d28:	str	wzr, [x0]
  426d2c:	ldr	x8, [x19, #312]
  426d30:	mov	w10, wzr
  426d34:	str	x8, [x0, #8]
  426d38:	str	x0, [x19, #312]
  426d3c:	ldr	x8, [x22]
  426d40:	ldr	x9, [x19, #200]
  426d44:	add	w11, w10, #0x1
  426d48:	mov	w10, w10
  426d4c:	add	x10, x0, x10, lsl #5
  426d50:	str	w11, [x0]
  426d54:	str	x8, [x10, #16]!
  426d58:	str	x9, [x10, #8]
  426d5c:	ldr	x8, [x19, #40]
  426d60:	ldr	w8, [x8, #56]
  426d64:	str	x21, [x10, #24]
  426d68:	str	w8, [x10, #16]
  426d6c:	str	x10, [x22]
  426d70:	mov	x0, x21
  426d74:	ldp	x20, x19, [sp, #288]
  426d78:	ldp	x22, x21, [sp, #272]
  426d7c:	ldp	x24, x23, [sp, #256]
  426d80:	ldp	x26, x25, [sp, #240]
  426d84:	ldp	x28, x27, [sp, #224]
  426d88:	ldp	x29, x30, [sp, #208]
  426d8c:	add	sp, sp, #0x130
  426d90:	ret
  426d94:	str	x21, [x22]
  426d98:	ldr	x0, [x19, #296]
  426d9c:	mov	x1, x22
  426da0:	bl	4549c0 <feof@plt+0x51cc0>
  426da4:	mov	x21, xzr
  426da8:	b	426d70 <feof@plt+0x24070>
  426dac:	str	x24, [x21, #16]
  426db0:	b	426b5c <feof@plt+0x23e5c>
  426db4:	stp	x29, x30, [sp, #-64]!
  426db8:	stp	x24, x23, [sp, #16]
  426dbc:	stp	x22, x21, [sp, #32]
  426dc0:	stp	x20, x19, [sp, #48]
  426dc4:	ldr	x8, [x0, #40]
  426dc8:	mov	w19, w3
  426dcc:	mov	x20, x0
  426dd0:	mov	x21, x1
  426dd4:	ldr	w8, [x8, #60]
  426dd8:	mov	x29, sp
  426ddc:	cmp	w8, #0x2
  426de0:	b.cc	426e04 <feof@plt+0x24104>  // b.lo, b.ul, b.last
  426de4:	ldr	x8, [x20]
  426de8:	cbz	x8, 426df8 <feof@plt+0x240f8>
  426dec:	ldrb	w8, [x8, #106]
  426df0:	cmp	w8, #0x0
  426df4:	cset	w8, ne  // ne = any
  426df8:	ldrb	w9, [x20, #26]
  426dfc:	cbnz	w9, 426e10 <feof@plt+0x24110>
  426e00:	b	426e24 <feof@plt+0x24124>
  426e04:	mov	w8, wzr
  426e08:	ldrb	w9, [x20, #26]
  426e0c:	cbz	w9, 426e24 <feof@plt+0x24124>
  426e10:	ldp	x20, x19, [sp, #48]
  426e14:	ldp	x22, x21, [sp, #32]
  426e18:	ldp	x24, x23, [sp, #16]
  426e1c:	ldp	x29, x30, [sp], #64
  426e20:	ret
  426e24:	ldr	w22, [x20, #1200]
  426e28:	ldr	w23, [x21, #204]
  426e2c:	cmp	w2, #0x0
  426e30:	cset	w9, ne  // ne = any
  426e34:	orr	w24, w9, w8
  426e38:	bl	402ac0 <__errno_location@plt>
  426e3c:	cmp	w22, w24
  426e40:	str	w23, [x0]
  426e44:	b.le	426e70 <feof@plt+0x24170>
  426e48:	cmp	w23, #0x2
  426e4c:	b.ne	426e7c <feof@plt+0x2417c>  // b.any
  426e50:	ldrb	w8, [x20, #1204]
  426e54:	cbz	w8, 426e7c <feof@plt+0x2417c>
  426e58:	ldr	x0, [x20, #712]
  426e5c:	ldr	x1, [x21]
  426e60:	bl	43625c <feof@plt+0x3355c>
  426e64:	ldrb	w8, [x20, #1207]
  426e68:	cbnz	w8, 426e7c <feof@plt+0x2417c>
  426e6c:	b	426e10 <feof@plt+0x24110>
  426e70:	cbz	w22, 426e7c <feof@plt+0x2417c>
  426e74:	ldrb	w8, [x20, #1207]
  426e78:	cbz	w8, 426ea8 <feof@plt+0x241a8>
  426e7c:	ldr	x2, [x21, #8]
  426e80:	cbnz	x2, 426e88 <feof@plt+0x24188>
  426e84:	ldr	x2, [x21]
  426e88:	mov	w1, #0x6                   	// #6
  426e8c:	mov	x0, x20
  426e90:	mov	w3, w19
  426e94:	ldp	x20, x19, [sp, #48]
  426e98:	ldp	x22, x21, [sp, #32]
  426e9c:	ldp	x24, x23, [sp, #16]
  426ea0:	ldp	x29, x30, [sp], #64
  426ea4:	b	422e9c <feof@plt+0x2019c>
  426ea8:	ldr	x2, [x21, #8]
  426eac:	cbnz	x2, 426eb4 <feof@plt+0x241b4>
  426eb0:	ldr	x2, [x21]
  426eb4:	mov	x0, x20
  426eb8:	mov	w1, wzr
  426ebc:	b	426e90 <feof@plt+0x24190>
  426ec0:	sub	sp, sp, #0x90
  426ec4:	stp	x29, x30, [sp, #48]
  426ec8:	stp	x28, x27, [sp, #64]
  426ecc:	stp	x26, x25, [sp, #80]
  426ed0:	stp	x24, x23, [sp, #96]
  426ed4:	stp	x22, x21, [sp, #112]
  426ed8:	stp	x20, x19, [sp, #128]
  426edc:	ldrb	w8, [x1, #210]
  426ee0:	add	x29, sp, #0x30
  426ee4:	cbz	w8, 426f10 <feof@plt+0x24210>
  426ee8:	mov	w22, wzr
  426eec:	mov	w0, w22
  426ef0:	ldp	x20, x19, [sp, #128]
  426ef4:	ldp	x22, x21, [sp, #112]
  426ef8:	ldp	x24, x23, [sp, #96]
  426efc:	ldp	x26, x25, [sp, #80]
  426f00:	ldp	x28, x27, [sp, #64]
  426f04:	ldp	x29, x30, [sp, #48]
  426f08:	add	sp, sp, #0x90
  426f0c:	ret
  426f10:	mov	w22, w3
  426f14:	mov	w21, w2
  426f18:	mov	x19, x1
  426f1c:	mov	x20, x0
  426f20:	tbz	w2, #0, 426f38 <feof@plt+0x24238>
  426f24:	mov	w8, #0x1                   	// #1
  426f28:	strb	w8, [x20, #417]
  426f2c:	ldrh	w9, [x19, #208]
  426f30:	strb	w8, [x19, #210]
  426f34:	cbnz	w9, 426ee8 <feof@plt+0x241e8>
  426f38:	ldr	x8, [x19, #56]
  426f3c:	cbz	x8, 426f48 <feof@plt+0x24248>
  426f40:	ldrb	w8, [x8, #18]
  426f44:	tbnz	w8, #1, 426ee8 <feof@plt+0x241e8>
  426f48:	ldr	x1, [x19, #16]
  426f4c:	cbz	x1, 426f80 <feof@plt+0x24280>
  426f50:	ldr	x8, [x20, #976]
  426f54:	ldr	w2, [x19, #200]
  426f58:	ldr	x3, [x19, #8]
  426f5c:	mov	x0, x20
  426f60:	blr	x8
  426f64:	ldr	x0, [x19, #16]
  426f68:	mov	w8, #0xffffffff            	// #-1
  426f6c:	str	w8, [x19, #200]
  426f70:	bl	402770 <free@plt>
  426f74:	mov	w22, wzr
  426f78:	str	xzr, [x19, #16]
  426f7c:	b	426eec <feof@plt+0x241ec>
  426f80:	mov	x0, x20
  426f84:	mov	x1, x19
  426f88:	mov	w2, w22
  426f8c:	bl	4287bc <feof@plt+0x25abc>
  426f90:	tbz	w0, #0, 426ee8 <feof@plt+0x241e8>
  426f94:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  426f98:	ldr	x24, [x8, #2392]
  426f9c:	cbz	x24, 4270d8 <feof@plt+0x243d8>
  426fa0:	tbnz	w21, #0, 426fac <feof@plt+0x242ac>
  426fa4:	ldrb	w8, [x24, #8]
  426fa8:	cbz	w8, 4270d8 <feof@plt+0x243d8>
  426fac:	ldr	x8, [x19, #120]
  426fb0:	and	w9, w21, #0x1
  426fb4:	strb	wzr, [sp, #32]
  426fb8:	str	x19, [sp, #40]
  426fbc:	str	x8, [sp, #8]
  426fc0:	strb	w9, [sp, #33]
  426fc4:	ldr	x25, [x24]
  426fc8:	cbz	x25, 4270d8 <feof@plt+0x243d8>
  426fcc:	add	x9, sp, #0x8
  426fd0:	mov	w8, wzr
  426fd4:	mov	x27, xzr
  426fd8:	add	x9, x9, #0x8
  426fdc:	mov	w26, #0xffffffff            	// #-1
  426fe0:	str	x9, [sp]
  426fe4:	b	426ff4 <feof@plt+0x242f4>
  426fe8:	add	x27, x28, #0x1
  426fec:	cmp	x27, x25
  426ff0:	b.cs	4270d8 <feof@plt+0x243d8>  // b.hs, b.nlast
  426ff4:	add	x9, x25, x27
  426ff8:	lsr	x28, x9, #1
  426ffc:	add	x23, x24, x28, lsl #5
  427000:	ldr	x9, [x23, #16]!
  427004:	ldr	x10, [sp, #8]
  427008:	rev	x9, x9
  42700c:	rev	x10, x10
  427010:	cmp	x10, x9
  427014:	cset	w9, hi  // hi = pmore
  427018:	cset	w10, cc  // cc = lo, ul, last
  42701c:	subs	w9, w9, w10
  427020:	b.ne	427090 <feof@plt+0x24390>  // b.any
  427024:	tst	w8, #0xff
  427028:	b.ne	427048 <feof@plt+0x24348>  // b.any
  42702c:	ldr	x8, [sp, #40]
  427030:	ldr	x2, [sp]
  427034:	ldr	x0, [x8, #40]
  427038:	ldr	x1, [x8, #120]
  42703c:	bl	4532b4 <feof@plt+0x505b4>
  427040:	mov	w8, #0x1                   	// #1
  427044:	strb	w8, [sp, #32]
  427048:	add	x11, x24, x28, lsl #5
  42704c:	ldr	x9, [x11, #24]!
  427050:	ldr	x12, [sp, #16]
  427054:	rev	x10, x9
  427058:	rev	x9, x12
  42705c:	cmp	x9, x10
  427060:	b.ne	427084 <feof@plt+0x24384>  // b.any
  427064:	ldr	x9, [sp, #24]
  427068:	ldr	x10, [x11, #8]
  42706c:	rev	x9, x9
  427070:	rev	x10, x10
  427074:	cmp	x9, x10
  427078:	b.ne	427084 <feof@plt+0x24384>  // b.any
  42707c:	mov	w9, wzr
  427080:	b	42708c <feof@plt+0x2438c>
  427084:	cmp	x9, x10
  427088:	cneg	w9, w26, cs  // cs = hs, nlast
  42708c:	cbz	w9, 4270a4 <feof@plt+0x243a4>
  427090:	tbz	w9, #31, 426fe8 <feof@plt+0x242e8>
  427094:	mov	x25, x28
  427098:	cmp	x27, x25
  42709c:	b.cc	426ff4 <feof@plt+0x242f4>  // b.lo, b.ul, b.last
  4270a0:	b	4270d8 <feof@plt+0x243d8>
  4270a4:	ldrb	w9, [sp, #33]
  4270a8:	cbnz	w9, 4270bc <feof@plt+0x243bc>
  4270ac:	add	x9, x24, x28, lsl #5
  4270b0:	ldrb	w9, [x9, #40]
  4270b4:	cbz	w9, 426fe8 <feof@plt+0x242e8>
  4270b8:	b	4270c0 <feof@plt+0x243c0>
  4270bc:	cbz	x23, 4270d8 <feof@plt+0x243d8>
  4270c0:	mov	w22, wzr
  4270c4:	tbnz	w21, #0, 426eec <feof@plt+0x241ec>
  4270c8:	mov	w8, #0x1                   	// #1
  4270cc:	strb	w8, [x20, #417]
  4270d0:	strb	w8, [x19, #210]
  4270d4:	b	426eec <feof@plt+0x241ec>
  4270d8:	ldrb	w8, [x20, #417]
  4270dc:	cbz	w8, 427210 <feof@plt+0x24510>
  4270e0:	ldr	x25, [x20, #280]
  4270e4:	cbz	x25, 427210 <feof@plt+0x24510>
  4270e8:	mov	w26, #0xffffffff            	// #-1
  4270ec:	b	427100 <feof@plt+0x24400>
  4270f0:	ldr	w8, [x25, #204]
  4270f4:	cbz	w8, 427118 <feof@plt+0x24418>
  4270f8:	ldr	x25, [x25, #32]
  4270fc:	cbz	x25, 427210 <feof@plt+0x24510>
  427100:	cmp	x25, x19
  427104:	b.eq	4270f8 <feof@plt+0x243f8>  // b.none
  427108:	tbnz	w21, #0, 4270f0 <feof@plt+0x243f0>
  42710c:	ldrb	w8, [x25, #210]
  427110:	cbnz	w8, 4270f0 <feof@plt+0x243f0>
  427114:	b	4270f8 <feof@plt+0x243f8>
  427118:	ldr	x8, [x25, #160]
  42711c:	ldr	x9, [x19, #160]
  427120:	cmp	x8, x9
  427124:	b.ne	4270f8 <feof@plt+0x243f8>  // b.any
  427128:	ldr	x8, [x25, #120]
  42712c:	ldr	x9, [x19, #120]
  427130:	cmp	x8, x9
  427134:	b.ne	4270f8 <feof@plt+0x243f8>  // b.any
  427138:	ldr	x8, [x25, #40]
  42713c:	mov	x23, x25
  427140:	cbz	x8, 427194 <feof@plt+0x24494>
  427144:	ldrb	w8, [x25, #213]
  427148:	mov	x23, x25
  42714c:	cbnz	w8, 427194 <feof@plt+0x24494>
  427150:	ldr	x27, [x25, #64]
  427154:	ldr	x24, [x25]
  427158:	mov	w0, #0x1                   	// #1
  42715c:	mov	w1, #0xd8                  	// #216
  427160:	bl	455390 <_obstack_memory_used@@Base+0x168>
  427164:	ldr	x8, [x20]
  427168:	mov	x23, x0
  42716c:	str	w26, [x0, #200]
  427170:	str	x27, [x0, #64]
  427174:	cmp	x8, #0x0
  427178:	cset	w8, eq  // eq = none
  42717c:	strb	w8, [x0, #212]
  427180:	mov	x0, x24
  427184:	bl	45547c <_obstack_memory_used@@Base+0x254>
  427188:	str	x0, [x23]
  42718c:	ldr	x8, [x25, #8]
  427190:	str	x8, [x23, #8]
  427194:	mov	x0, x20
  427198:	mov	x1, x23
  42719c:	mov	w2, w22
  4271a0:	bl	4287bc <feof@plt+0x25abc>
  4271a4:	tbz	w0, #0, 4271d0 <feof@plt+0x244d0>
  4271a8:	ldr	x2, [x23, #120]
  4271ac:	ldr	x8, [x19, #120]
  4271b0:	cmp	x2, x8
  4271b4:	b.ne	4271d0 <feof@plt+0x244d0>  // b.any
  4271b8:	ldr	x0, [x23, #40]
  4271bc:	ldr	x1, [x19, #40]
  4271c0:	bl	402cb0 <bcmp@plt>
  4271c4:	cmp	w0, #0x0
  4271c8:	cset	w24, eq  // eq = none
  4271cc:	b	4271d4 <feof@plt+0x244d4>
  4271d0:	mov	w24, wzr
  4271d4:	ldr	x8, [x25, #40]
  4271d8:	cbz	x8, 427208 <feof@plt+0x24508>
  4271dc:	ldrb	w8, [x25, #213]
  4271e0:	cbnz	w8, 427208 <feof@plt+0x24508>
  4271e4:	ldr	x0, [x23, #48]
  4271e8:	str	xzr, [x23, #8]
  4271ec:	bl	402770 <free@plt>
  4271f0:	ldr	x0, [x23]
  4271f4:	bl	402770 <free@plt>
  4271f8:	ldr	x0, [x23, #8]
  4271fc:	bl	402770 <free@plt>
  427200:	mov	x0, x23
  427204:	bl	402770 <free@plt>
  427208:	tbz	w24, #0, 4270f8 <feof@plt+0x243f8>
  42720c:	b	426ee8 <feof@plt+0x241e8>
  427210:	ldr	x8, [x20]
  427214:	cbz	x8, 427234 <feof@plt+0x24534>
  427218:	ldr	x9, [x19, #64]
  42721c:	cbz	x9, 427234 <feof@plt+0x24534>
  427220:	ldrb	w8, [x8, #106]
  427224:	ldrb	w9, [x9, #20]
  427228:	cmp	w8, w9
  42722c:	csel	w21, w8, w9, hi  // hi = pmore
  427230:	b	427238 <feof@plt+0x24538>
  427234:	mov	w21, wzr
  427238:	ldr	w8, [x20, #1200]
  42723c:	cmp	w21, #0x0
  427240:	cset	w9, ne  // ne = any
  427244:	cmp	w8, w9
  427248:	b.le	427270 <feof@plt+0x24570>
  42724c:	ldrh	w8, [x19, #208]
  427250:	cbnz	w8, 427270 <feof@plt+0x24570>
  427254:	ldrb	w8, [x19, #212]
  427258:	cbz	w8, 427264 <feof@plt+0x24564>
  42725c:	ldrb	w8, [x20, #1206]
  427260:	cbnz	w8, 427270 <feof@plt+0x24570>
  427264:	ldr	x0, [x20, #712]
  427268:	ldr	x1, [x19, #8]
  42726c:	bl	43625c <feof@plt+0x3355c>
  427270:	ldrh	w8, [x19, #208]
  427274:	strb	wzr, [x19, #213]
  427278:	ldr	x1, [x19, #40]
  42727c:	ldr	x2, [x19, #120]
  427280:	add	w8, w8, #0x1
  427284:	strh	w8, [x19, #208]
  427288:	ldrb	w8, [x20, #1155]
  42728c:	cbz	w8, 42729c <feof@plt+0x2459c>
  427290:	ldrb	w8, [x20, #1244]
  427294:	eor	w3, w8, #0x1
  427298:	b	4272a0 <feof@plt+0x245a0>
  42729c:	mov	w3, wzr
  4272a0:	mov	x0, x20
  4272a4:	bl	4205b4 <feof@plt+0x1d8b4>
  4272a8:	str	x19, [x0, #80]
  4272ac:	strb	w21, [x0, #106]
  4272b0:	ldr	x8, [x19, #48]
  4272b4:	mov	w22, #0x1                   	// #1
  4272b8:	mov	w3, #0x1                   	// #1
  4272bc:	mov	w1, wzr
  4272c0:	str	x8, [x0, #40]
  4272c4:	strb	w22, [x20, #440]
  4272c8:	str	xzr, [x20, #424]
  4272cc:	ldr	x2, [x19, #8]
  4272d0:	mov	x0, x20
  4272d4:	mov	w4, w21
  4272d8:	bl	41e7b8 <feof@plt+0x1bab8>
  4272dc:	b	426eec <feof@plt+0x241ec>
  4272e0:	mov	w8, #0x1                   	// #1
  4272e4:	strb	w8, [x0, #417]
  4272e8:	strb	w8, [x1, #210]
  4272ec:	ret
  4272f0:	stp	x29, x30, [sp, #-64]!
  4272f4:	stp	x24, x23, [sp, #16]
  4272f8:	stp	x22, x21, [sp, #32]
  4272fc:	stp	x20, x19, [sp, #48]
  427300:	mov	w20, w4
  427304:	mov	w21, w3
  427308:	mov	w22, w2
  42730c:	mov	x23, x1
  427310:	subs	w24, w3, #0x3
  427314:	mov	x19, x0
  427318:	mov	x29, sp
  42731c:	b.ne	427338 <feof@plt+0x24638>  // b.any
  427320:	ldr	x9, [x19, #488]
  427324:	ldr	x8, [x19, #448]
  427328:	ldr	x9, [x9, #16]
  42732c:	cmp	x8, x9
  427330:	b.eq	427338 <feof@plt+0x24638>  // b.none
  427334:	stur	wzr, [x8, #-24]
  427338:	mov	x0, x19
  42733c:	mov	x1, x23
  427340:	mov	w2, w22
  427344:	mov	w3, w21
  427348:	bl	42744c <feof@plt+0x2474c>
  42734c:	cbz	x0, 427388 <feof@plt+0x24688>
  427350:	cmp	w21, #0x4
  427354:	mov	x2, x0
  427358:	cset	w5, eq  // eq = none
  42735c:	mov	x0, x19
  427360:	mov	x1, x23
  427364:	mov	w3, wzr
  427368:	mov	w4, w22
  42736c:	mov	w6, w20
  427370:	bl	426488 <feof@plt+0x23788>
  427374:	cmp	w21, #0x4
  427378:	mov	x22, x0
  42737c:	b.ne	4273a0 <feof@plt+0x246a0>  // b.any
  427380:	mov	w0, wzr
  427384:	cbnz	x22, 4273a0 <feof@plt+0x246a0>
  427388:	ldp	x20, x19, [sp, #48]
  42738c:	ldp	x22, x21, [sp, #32]
  427390:	ldp	x24, x23, [sp, #16]
  427394:	and	w0, w0, #0x1
  427398:	ldp	x29, x30, [sp], #64
  42739c:	ret
  4273a0:	ldr	x8, [x22, #16]
  4273a4:	cbz	x8, 4273d0 <feof@plt+0x246d0>
  4273a8:	cmp	w21, #0x2
  4273ac:	mov	x0, x19
  4273b0:	mov	x1, x22
  4273b4:	mov	w3, w20
  4273b8:	ldp	x20, x19, [sp, #48]
  4273bc:	ldp	x22, x21, [sp, #32]
  4273c0:	ldp	x24, x23, [sp, #16]
  4273c4:	cset	w2, eq  // eq = none
  4273c8:	ldp	x29, x30, [sp], #64
  4273cc:	b	426ec0 <feof@plt+0x241c0>
  4273d0:	cmp	w24, #0x2
  4273d4:	b.cc	4273a8 <feof@plt+0x246a8>  // b.lo, b.ul, b.last
  4273d8:	ldr	w8, [x22, #204]
  4273dc:	cbnz	w8, 4273a8 <feof@plt+0x246a8>
  4273e0:	ldr	x0, [x19, #40]
  4273e4:	ldr	w1, [x0, #56]
  4273e8:	bl	42f37c <feof@plt+0x2c67c>
  4273ec:	ldr	x8, [x19, #40]
  4273f0:	mov	w23, w0
  4273f4:	mov	w1, w20
  4273f8:	mov	x0, x8
  4273fc:	bl	42f37c <feof@plt+0x2c67c>
  427400:	cmp	w23, w0
  427404:	b.le	4273a8 <feof@plt+0x246a8>
  427408:	ldr	x8, [x19, #40]
  42740c:	cmp	w21, #0x2
  427410:	cset	w2, eq  // eq = none
  427414:	mov	x0, x19
  427418:	ldr	w9, [x8, #56]
  42741c:	mov	x1, x22
  427420:	mov	w3, w20
  427424:	sub	w9, w9, #0x1
  427428:	str	w9, [x8, #56]
  42742c:	bl	426ec0 <feof@plt+0x241c0>
  427430:	tbnz	w0, #0, 427388 <feof@plt+0x24688>
  427434:	ldr	x8, [x19, #40]
  427438:	mov	w0, wzr
  42743c:	ldr	w9, [x8, #56]
  427440:	add	w9, w9, #0x1
  427444:	str	w9, [x8, #56]
  427448:	b	427388 <feof@plt+0x24688>
  42744c:	stp	x29, x30, [sp, #-48]!
  427450:	stp	x22, x21, [sp, #16]
  427454:	stp	x20, x19, [sp, #32]
  427458:	ldrb	w9, [x1]
  42745c:	mov	x19, x0
  427460:	mov	x29, sp
  427464:	cmp	w9, #0x2f
  427468:	b.ne	427474 <feof@plt+0x24774>  // b.any
  42746c:	add	x0, x19, #0xd8
  427470:	b	4274d8 <feof@plt+0x247d8>
  427474:	ldr	x9, [x19]
  427478:	add	x10, x19, #0x120
  42747c:	mov	x8, x1
  427480:	add	x11, x9, #0x50
  427484:	cmp	x9, #0x0
  427488:	csel	x10, x10, x11, eq  // eq = none
  42748c:	ldr	x22, [x10]
  427490:	cmp	w3, #0x1
  427494:	b.ne	4274ac <feof@plt+0x247ac>  // b.any
  427498:	ldr	x10, [x22, #64]
  42749c:	cbz	x10, 4274ac <feof@plt+0x247ac>
  4274a0:	add	x11, x19, #0xd8
  4274a4:	cmp	x10, x11
  4274a8:	b.ne	4274b4 <feof@plt+0x247b4>  // b.any
  4274ac:	cbz	w2, 4274e8 <feof@plt+0x247e8>
  4274b0:	add	x10, x19, #0xd0
  4274b4:	ldr	x0, [x10]
  4274b8:	cbnz	x0, 4274d8 <feof@plt+0x247d8>
  4274bc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4274c0:	add	x2, x2, #0x47e
  4274c4:	mov	w1, #0x3                   	// #3
  4274c8:	mov	x0, x19
  4274cc:	mov	x3, x8
  4274d0:	bl	4223e4 <feof@plt+0x1f6e4>
  4274d4:	mov	x0, xzr
  4274d8:	ldp	x20, x19, [sp, #32]
  4274dc:	ldp	x22, x21, [sp, #16]
  4274e0:	ldp	x29, x30, [sp], #48
  4274e4:	ret
  4274e8:	cmp	w3, #0x3
  4274ec:	b.ne	427504 <feof@plt+0x24804>  // b.any
  4274f0:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4274f4:	add	x1, x1, #0x47b
  4274f8:	mov	x0, x19
  4274fc:	mov	w2, wzr
  427500:	b	427570 <feof@plt+0x24870>
  427504:	ldrb	w10, [x19, #416]
  427508:	cbz	w10, 42751c <feof@plt+0x2481c>
  42750c:	add	x10, x19, #0xc8
  427510:	ldr	x0, [x10]
  427514:	cbnz	x0, 4274d8 <feof@plt+0x247d8>
  427518:	b	4274bc <feof@plt+0x247bc>
  42751c:	ldr	x20, [x22, #24]
  427520:	cbnz	x20, 427558 <feof@plt+0x24858>
  427524:	ldr	x0, [x22, #8]
  427528:	bl	454e54 <feof@plt+0x52154>
  42752c:	ldr	x8, [x22, #8]
  427530:	sub	x21, x0, x8
  427534:	add	x0, x21, #0x1
  427538:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42753c:	ldr	x1, [x22, #8]
  427540:	mov	x2, x21
  427544:	mov	x20, x0
  427548:	bl	402640 <memcpy@plt>
  42754c:	strb	wzr, [x20, x21]
  427550:	str	x20, [x22, #24]
  427554:	ldr	x9, [x19]
  427558:	cbz	x9, 427564 <feof@plt+0x24864>
  42755c:	ldrb	w2, [x9, #106]
  427560:	b	427568 <feof@plt+0x24868>
  427564:	mov	w2, wzr
  427568:	mov	x0, x19
  42756c:	mov	x1, x20
  427570:	ldp	x20, x19, [sp, #32]
  427574:	ldp	x22, x21, [sp, #16]
  427578:	ldp	x29, x30, [sp], #48
  42757c:	b	428490 <feof@plt+0x25790>
  427580:	stp	x29, x30, [sp, #-32]!
  427584:	stp	x20, x19, [sp, #16]
  427588:	ldr	x19, [x0, #296]
  42758c:	mov	x0, x1
  427590:	mov	x29, sp
  427594:	mov	x20, x1
  427598:	bl	454b38 <feof@plt+0x51e38>
  42759c:	mov	w2, w0
  4275a0:	mov	x0, x19
  4275a4:	mov	x1, x20
  4275a8:	bl	454390 <feof@plt+0x51690>
  4275ac:	cbnz	x0, 4275bc <feof@plt+0x248bc>
  4275b0:	b	4275d4 <feof@plt+0x248d4>
  4275b4:	ldr	x0, [x0]
  4275b8:	cbz	x0, 4275d4 <feof@plt+0x248d4>
  4275bc:	ldr	x8, [x0, #8]
  4275c0:	cbz	x8, 4275b4 <feof@plt+0x248b4>
  4275c4:	ldr	x8, [x0, #24]
  4275c8:	ldr	w8, [x8, #204]
  4275cc:	cbnz	w8, 4275b4 <feof@plt+0x248b4>
  4275d0:	mov	w0, #0x1                   	// #1
  4275d4:	ldp	x20, x19, [sp, #16]
  4275d8:	ldp	x29, x30, [sp], #32
  4275dc:	ret
  4275e0:	stp	x29, x30, [sp, #-48]!
  4275e4:	stp	x22, x21, [sp, #16]
  4275e8:	stp	x20, x19, [sp, #32]
  4275ec:	ldr	x20, [x0, #296]
  4275f0:	mov	x21, x0
  4275f4:	mov	x0, x1
  4275f8:	mov	x29, sp
  4275fc:	mov	w19, w2
  427600:	mov	x22, x1
  427604:	bl	454b38 <feof@plt+0x51e38>
  427608:	mov	w2, w0
  42760c:	mov	x0, x20
  427610:	mov	x1, x22
  427614:	bl	454390 <feof@plt+0x51690>
  427618:	mov	x20, x0
  42761c:	tbnz	w19, #31, 427628 <feof@plt+0x24928>
  427620:	cbnz	x20, 427658 <feof@plt+0x24958>
  427624:	b	42763c <feof@plt+0x2493c>
  427628:	ldr	x0, [x21, #40]
  42762c:	mov	w1, w19
  427630:	bl	42e2e0 <feof@plt+0x2b5e0>
  427634:	mov	w19, w0
  427638:	cbnz	x20, 427658 <feof@plt+0x24958>
  42763c:	mov	w0, wzr
  427640:	ldp	x20, x19, [sp, #32]
  427644:	ldp	x22, x21, [sp, #16]
  427648:	ldp	x29, x30, [sp], #48
  42764c:	ret
  427650:	ldr	x20, [x20]
  427654:	cbz	x20, 42763c <feof@plt+0x2493c>
  427658:	ldr	x8, [x20, #8]
  42765c:	cbz	x8, 427650 <feof@plt+0x24950>
  427660:	ldr	x8, [x20, #24]
  427664:	ldr	w8, [x8, #204]
  427668:	cbnz	w8, 427650 <feof@plt+0x24950>
  42766c:	ldr	w8, [x20, #16]
  427670:	cmp	w8, w19
  427674:	b.hi	427650 <feof@plt+0x24950>  // b.pmore
  427678:	mov	w0, #0x1                   	// #1
  42767c:	b	427640 <feof@plt+0x24940>
  427680:	stp	x29, x30, [sp, #-64]!
  427684:	str	x23, [sp, #16]
  427688:	stp	x22, x21, [sp, #32]
  42768c:	stp	x20, x19, [sp, #48]
  427690:	adrp	x20, 427000 <feof@plt+0x24300>
  427694:	adrp	x21, 427000 <feof@plt+0x24300>
  427698:	adrp	x22, 455000 <_obstack_begin_1@@Base+0xa4>
  42769c:	adrp	x23, 402000 <_Unwind_Backtrace@plt-0x5e0>
  4276a0:	add	x20, x20, #0x76c
  4276a4:	add	x21, x21, #0x78c
  4276a8:	add	x22, x22, #0x390
  4276ac:	add	x23, x23, #0x770
  4276b0:	mov	x19, x0
  4276b4:	mov	w0, #0x7f                  	// #127
  4276b8:	mov	x1, x20
  4276bc:	mov	x2, x21
  4276c0:	mov	x3, xzr
  4276c4:	mov	x4, x22
  4276c8:	mov	x5, x23
  4276cc:	mov	x29, sp
  4276d0:	bl	453ca0 <feof@plt+0x50fa0>
  4276d4:	str	x0, [x19, #296]
  4276d8:	mov	w0, #0x7f                  	// #127
  4276dc:	mov	x1, x20
  4276e0:	mov	x2, x21
  4276e4:	mov	x3, xzr
  4276e8:	mov	x4, x22
  4276ec:	mov	x5, x23
  4276f0:	bl	453ca0 <feof@plt+0x50fa0>
  4276f4:	str	x0, [x19, #304]
  4276f8:	mov	w0, #0xff0                 	// #4080
  4276fc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  427700:	str	wzr, [x0]
  427704:	ldr	x8, [x19, #312]
  427708:	adrp	x1, 454000 <feof@plt+0x51300>
  42770c:	adrp	x2, 427000 <feof@plt+0x24300>
  427710:	adrp	x20, 455000 <_obstack_begin_1@@Base+0xa4>
  427714:	str	x8, [x0, #8]
  427718:	str	x0, [x19, #312]
  42771c:	add	x1, x1, #0xb38
  427720:	add	x2, x2, #0x7c4
  427724:	mov	w0, #0x7f                  	// #127
  427728:	mov	x3, xzr
  42772c:	mov	x4, x22
  427730:	mov	x5, x23
  427734:	add	x20, x20, #0x35c
  427738:	bl	453ca0 <feof@plt+0x50fa0>
  42773c:	str	x0, [x19, #320]
  427740:	add	x8, x19, #0x148
  427744:	mov	x3, x20
  427748:	mov	x4, x23
  42774c:	ldp	x20, x19, [sp, #48]
  427750:	ldp	x22, x21, [sp, #32]
  427754:	ldr	x23, [sp, #16]
  427758:	mov	x0, x8
  42775c:	mov	x1, xzr
  427760:	mov	x2, xzr
  427764:	ldp	x29, x30, [sp], #64
  427768:	b	454eb0 <_obstack_begin@@Base>
  42776c:	ldr	x8, [x0, #8]
  427770:	cbz	x8, 427780 <feof@plt+0x24a80>
  427774:	ldr	x8, [x0, #24]
  427778:	ldr	x0, [x8]
  42777c:	b	454b38 <feof@plt+0x51e38>
  427780:	ldr	x8, [x0, #24]
  427784:	ldr	x0, [x8, #8]!
  427788:	b	454b38 <feof@plt+0x51e38>
  42778c:	stp	x29, x30, [sp, #-16]!
  427790:	ldr	x8, [x0, #8]
  427794:	mov	x29, sp
  427798:	cbz	x8, 4277a4 <feof@plt+0x24aa4>
  42779c:	ldr	x8, [x0, #24]
  4277a0:	b	4277ac <feof@plt+0x24aac>
  4277a4:	ldr	x8, [x0, #24]
  4277a8:	add	x8, x8, #0x8
  4277ac:	ldr	x0, [x8]
  4277b0:	bl	453a30 <feof@plt+0x50d30>
  4277b4:	cmp	w0, #0x0
  4277b8:	cset	w0, eq  // eq = none
  4277bc:	ldp	x29, x30, [sp], #16
  4277c0:	ret
  4277c4:	stp	x29, x30, [sp, #-16]!
  4277c8:	mov	x29, sp
  4277cc:	bl	453a30 <feof@plt+0x50d30>
  4277d0:	cmp	w0, #0x0
  4277d4:	cset	w0, eq  // eq = none
  4277d8:	ldp	x29, x30, [sp], #16
  4277dc:	ret
  4277e0:	stp	x29, x30, [sp, #-32]!
  4277e4:	stp	x20, x19, [sp, #16]
  4277e8:	mov	x19, x0
  4277ec:	ldr	x0, [x0, #296]
  4277f0:	mov	x29, sp
  4277f4:	bl	4541b4 <feof@plt+0x514b4>
  4277f8:	ldr	x0, [x19, #304]
  4277fc:	bl	4541b4 <feof@plt+0x514b4>
  427800:	ldr	x0, [x19, #320]
  427804:	bl	4541b4 <feof@plt+0x514b4>
  427808:	add	x0, x19, #0x148
  42780c:	mov	x1, xzr
  427810:	bl	455194 <_obstack_free@@Base>
  427814:	ldr	x0, [x19, #312]
  427818:	cbz	x0, 42782c <feof@plt+0x24b2c>
  42781c:	ldr	x20, [x0, #8]
  427820:	bl	402770 <free@plt>
  427824:	mov	x0, x20
  427828:	cbnz	x20, 42781c <feof@plt+0x24b1c>
  42782c:	ldr	x19, [x19, #280]
  427830:	cbz	x19, 427860 <feof@plt+0x24b60>
  427834:	ldr	x0, [x19, #48]
  427838:	ldr	x20, [x19, #32]
  42783c:	bl	402770 <free@plt>
  427840:	ldr	x0, [x19]
  427844:	bl	402770 <free@plt>
  427848:	ldr	x0, [x19, #8]
  42784c:	bl	402770 <free@plt>
  427850:	mov	x0, x19
  427854:	bl	402770 <free@plt>
  427858:	mov	x19, x20
  42785c:	cbnz	x20, 427834 <feof@plt+0x24b34>
  427860:	ldp	x20, x19, [sp, #16]
  427864:	ldp	x29, x30, [sp], #32
  427868:	ret
  42786c:	stp	x29, x30, [sp, #-64]!
  427870:	str	x23, [sp, #16]
  427874:	stp	x22, x21, [sp, #32]
  427878:	stp	x20, x19, [sp, #48]
  42787c:	mov	x29, sp
  427880:	mov	x19, x0
  427884:	bl	4277e0 <feof@plt+0x24ae0>
  427888:	adrp	x20, 427000 <feof@plt+0x24300>
  42788c:	adrp	x21, 427000 <feof@plt+0x24300>
  427890:	adrp	x22, 455000 <_obstack_begin_1@@Base+0xa4>
  427894:	adrp	x23, 402000 <_Unwind_Backtrace@plt-0x5e0>
  427898:	add	x20, x20, #0x76c
  42789c:	add	x21, x21, #0x78c
  4278a0:	add	x22, x22, #0x390
  4278a4:	add	x23, x23, #0x770
  4278a8:	mov	w0, #0x7f                  	// #127
  4278ac:	mov	x1, x20
  4278b0:	mov	x2, x21
  4278b4:	mov	x3, xzr
  4278b8:	mov	x4, x22
  4278bc:	mov	x5, x23
  4278c0:	str	xzr, [x19, #312]
  4278c4:	str	xzr, [x19, #280]
  4278c8:	bl	453ca0 <feof@plt+0x50fa0>
  4278cc:	str	x0, [x19, #296]
  4278d0:	mov	w0, #0x7f                  	// #127
  4278d4:	mov	x1, x20
  4278d8:	mov	x2, x21
  4278dc:	mov	x3, xzr
  4278e0:	mov	x4, x22
  4278e4:	mov	x5, x23
  4278e8:	bl	453ca0 <feof@plt+0x50fa0>
  4278ec:	str	x0, [x19, #304]
  4278f0:	mov	w0, #0xff0                 	// #4080
  4278f4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4278f8:	str	wzr, [x0]
  4278fc:	ldr	x8, [x19, #312]
  427900:	adrp	x1, 454000 <feof@plt+0x51300>
  427904:	adrp	x2, 427000 <feof@plt+0x24300>
  427908:	adrp	x20, 455000 <_obstack_begin_1@@Base+0xa4>
  42790c:	str	x8, [x0, #8]
  427910:	str	x0, [x19, #312]
  427914:	add	x1, x1, #0xb38
  427918:	add	x2, x2, #0x7c4
  42791c:	mov	w0, #0x7f                  	// #127
  427920:	mov	x3, xzr
  427924:	mov	x4, x22
  427928:	mov	x5, x23
  42792c:	add	x20, x20, #0x35c
  427930:	bl	453ca0 <feof@plt+0x50fa0>
  427934:	str	x0, [x19, #320]
  427938:	add	x8, x19, #0x148
  42793c:	mov	x3, x20
  427940:	mov	x4, x23
  427944:	ldp	x20, x19, [sp, #48]
  427948:	ldp	x22, x21, [sp, #32]
  42794c:	ldr	x23, [sp, #16]
  427950:	mov	x0, x8
  427954:	mov	x1, xzr
  427958:	mov	x2, xzr
  42795c:	ldp	x29, x30, [sp], #64
  427960:	b	454eb0 <_obstack_begin@@Base>
  427964:	ldr	x8, [x0]
  427968:	mov	w3, #0x1                   	// #1
  42796c:	mov	w4, wzr
  427970:	mov	w5, wzr
  427974:	ldr	x8, [x8, #80]
  427978:	mov	w6, wzr
  42797c:	ldr	x2, [x8, #64]
  427980:	b	426488 <feof@plt+0x23788>
  427984:	ldr	x8, [x0, #40]
  427988:	cmp	w2, #0x0
  42798c:	mov	w10, #0x1                   	// #1
  427990:	cinc	w10, w10, ne  // ne = any
  427994:	cmp	w1, #0x0
  427998:	csel	w4, wzr, w10, eq  // eq = none
  42799c:	ldr	w10, [x8, #12]
  4279a0:	ldr	x11, [x0]
  4279a4:	ldr	x12, [x8]
  4279a8:	mov	w9, #0x18                  	// #24
  4279ac:	sub	w10, w10, #0x1
  4279b0:	strb	w4, [x11, #106]
  4279b4:	smaddl	x9, w10, w9, x12
  4279b8:	ldr	w8, [x8, #60]
  4279bc:	ldr	w10, [x9]
  4279c0:	ldrb	w11, [x9, #6]
  4279c4:	ldr	w12, [x9, #16]
  4279c8:	ldr	x2, [x9, #8]
  4279cc:	sub	w8, w8, w10
  4279d0:	lsr	w8, w8, w11
  4279d4:	add	w3, w8, w12
  4279d8:	mov	w1, #0x2                   	// #2
  4279dc:	b	41e7b8 <feof@plt+0x1bab8>
  4279e0:	mov	w3, #0x1                   	// #1
  4279e4:	mov	w4, wzr
  4279e8:	b	41e7b8 <feof@plt+0x1bab8>
  4279ec:	sub	sp, sp, #0x40
  4279f0:	stp	x29, x30, [sp, #16]
  4279f4:	stp	x20, x19, [sp, #48]
  4279f8:	str	xzr, [sp]
  4279fc:	mov	x19, x0
  427a00:	ldr	x0, [x0, #296]
  427a04:	str	x21, [sp, #32]
  427a08:	add	x29, sp, #0x10
  427a0c:	bl	453c94 <feof@plt+0x50f94>
  427a10:	str	x0, [sp, #8]
  427a14:	ldr	x0, [x19, #296]
  427a18:	adrp	x1, 427000 <feof@plt+0x24300>
  427a1c:	add	x1, x1, #0xad4
  427a20:	mov	x2, sp
  427a24:	bl	454a88 <feof@plt+0x51d88>
  427a28:	ldr	x0, [sp]
  427a2c:	cbz	x0, 427ac0 <feof@plt+0x24dc0>
  427a30:	ldr	x1, [sp, #8]
  427a34:	adrp	x3, 427000 <feof@plt+0x24300>
  427a38:	add	x3, x3, #0xb54
  427a3c:	mov	w2, #0x8                   	// #8
  427a40:	bl	4027f0 <qsort@plt>
  427a44:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  427a48:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  427a4c:	add	x0, x0, #0x88f
  427a50:	add	x1, x1, #0x404
  427a54:	bl	4028f0 <dgettext@plt>
  427a58:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  427a5c:	ldr	x1, [x19, #1416]
  427a60:	bl	4027a0 <fputs_unlocked@plt>
  427a64:	ldp	x0, x8, [sp]
  427a68:	cbz	x8, 427abc <feof@plt+0x24dbc>
  427a6c:	mov	x20, xzr
  427a70:	mov	w21, #0xa                   	// #10
  427a74:	ldr	x0, [x0, x20, lsl #3]
  427a78:	ldr	x1, [x19, #1416]
  427a7c:	bl	4027a0 <fputs_unlocked@plt>
  427a80:	ldr	x0, [x19, #1416]
  427a84:	ldp	x8, x9, [x0, #40]
  427a88:	cmp	x8, x9
  427a8c:	b.cs	427ab0 <feof@plt+0x24db0>  // b.hs, b.nlast
  427a90:	add	x9, x8, #0x1
  427a94:	str	x9, [x0, #40]
  427a98:	strb	w21, [x8]
  427a9c:	ldp	x0, x8, [sp]
  427aa0:	add	x20, x20, #0x1
  427aa4:	cmp	x20, x8
  427aa8:	b.cc	427a74 <feof@plt+0x24d74>  // b.lo, b.ul, b.last
  427aac:	b	427abc <feof@plt+0x24dbc>
  427ab0:	mov	w1, #0xa                   	// #10
  427ab4:	bl	402730 <__overflow@plt>
  427ab8:	b	427a9c <feof@plt+0x24d9c>
  427abc:	bl	402770 <free@plt>
  427ac0:	ldp	x20, x19, [sp, #48]
  427ac4:	ldr	x21, [sp, #32]
  427ac8:	ldp	x29, x30, [sp, #16]
  427acc:	add	sp, sp, #0x40
  427ad0:	ret
  427ad4:	stp	x29, x30, [sp, #-32]!
  427ad8:	stp	x20, x19, [sp, #16]
  427adc:	ldr	x8, [x0]
  427ae0:	mov	x29, sp
  427ae4:	ldr	x9, [x8, #8]
  427ae8:	cbz	x9, 427b44 <feof@plt+0x24e44>
  427aec:	ldr	x20, [x8, #24]
  427af0:	ldrb	w8, [x20, #210]
  427af4:	cbnz	w8, 427b44 <feof@plt+0x24e44>
  427af8:	ldr	x8, [x20, #56]
  427afc:	cbnz	x8, 427b44 <feof@plt+0x24e44>
  427b00:	ldrh	w8, [x20, #208]
  427b04:	cmp	w8, #0x1
  427b08:	b.ne	427b44 <feof@plt+0x24e44>  // b.any
  427b0c:	ldrb	w8, [x20, #212]
  427b10:	cbnz	w8, 427b44 <feof@plt+0x24e44>
  427b14:	ldp	x8, x0, [x1]
  427b18:	mov	x19, x1
  427b1c:	cbnz	x8, 427b34 <feof@plt+0x24e34>
  427b20:	mov	w1, #0x8                   	// #8
  427b24:	bl	455390 <_obstack_memory_used@@Base+0x168>
  427b28:	mov	x8, x0
  427b2c:	mov	x0, xzr
  427b30:	stp	x8, xzr, [x19]
  427b34:	ldr	x9, [x20, #8]
  427b38:	add	x10, x0, #0x1
  427b3c:	str	x10, [x19, #8]
  427b40:	str	x9, [x8, x0, lsl #3]
  427b44:	ldp	x20, x19, [sp, #16]
  427b48:	mov	w0, #0x1                   	// #1
  427b4c:	ldp	x29, x30, [sp], #32
  427b50:	ret
  427b54:	ldr	x0, [x0]
  427b58:	ldr	x1, [x1]
  427b5c:	b	402b40 <strcmp@plt>
  427b60:	stp	x29, x30, [sp, #-48]!
  427b64:	mov	w3, wzr
  427b68:	str	x21, [sp, #16]
  427b6c:	stp	x20, x19, [sp, #32]
  427b70:	mov	x29, sp
  427b74:	mov	w20, w2
  427b78:	mov	x21, x1
  427b7c:	mov	x19, x0
  427b80:	bl	42744c <feof@plt+0x2474c>
  427b84:	cbz	x0, 427bb0 <feof@plt+0x24eb0>
  427b88:	mov	x2, x0
  427b8c:	mov	x0, x19
  427b90:	mov	x1, x21
  427b94:	mov	w3, wzr
  427b98:	mov	w4, w20
  427b9c:	mov	w5, wzr
  427ba0:	mov	w6, wzr
  427ba4:	bl	426488 <feof@plt+0x23788>
  427ba8:	ldr	w8, [x0, #204]
  427bac:	cbz	w8, 427bb8 <feof@plt+0x24eb8>
  427bb0:	mov	w0, #0xffffffff            	// #-1
  427bb4:	b	427bec <feof@plt+0x24eec>
  427bb8:	mov	x20, x0
  427bbc:	ldr	w0, [x0, #200]
  427bc0:	cmn	w0, #0x1
  427bc4:	b.eq	427bd4 <feof@plt+0x24ed4>  // b.none
  427bc8:	bl	402b30 <close@plt>
  427bcc:	mov	w8, #0xffffffff            	// #-1
  427bd0:	str	w8, [x20, #200]
  427bd4:	ldr	x8, [x19]
  427bd8:	ldr	x9, [x20, #160]
  427bdc:	ldr	x8, [x8, #80]
  427be0:	ldr	x8, [x8, #160]
  427be4:	cmp	x9, x8
  427be8:	cset	w0, gt
  427bec:	ldp	x20, x19, [sp, #32]
  427bf0:	ldr	x21, [sp, #16]
  427bf4:	ldp	x29, x30, [sp], #48
  427bf8:	ret
  427bfc:	stp	x29, x30, [sp, #-32]!
  427c00:	stp	x20, x19, [sp, #16]
  427c04:	ldr	x9, [x0, #488]
  427c08:	ldr	x8, [x0, #448]
  427c0c:	mov	x19, x0
  427c10:	mov	x20, x1
  427c14:	ldr	x9, [x9, #16]
  427c18:	mov	x29, sp
  427c1c:	cmp	x8, x9
  427c20:	b.eq	427c28 <feof@plt+0x24f28>  // b.none
  427c24:	stur	wzr, [x8, #-24]
  427c28:	ldrb	w8, [x20]
  427c2c:	cmp	w8, #0x2f
  427c30:	b.ne	427c3c <feof@plt+0x24f3c>  // b.any
  427c34:	add	x2, x19, #0xd8
  427c38:	b	427c58 <feof@plt+0x24f58>
  427c3c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  427c40:	add	x1, x1, #0x47b
  427c44:	mov	x0, x19
  427c48:	mov	w2, wzr
  427c4c:	bl	428490 <feof@plt+0x25790>
  427c50:	mov	x2, x0
  427c54:	cbz	x0, 427c90 <feof@plt+0x24f90>
  427c58:	mov	x0, x19
  427c5c:	mov	x1, x20
  427c60:	mov	w3, wzr
  427c64:	mov	w4, wzr
  427c68:	mov	w5, wzr
  427c6c:	mov	w6, wzr
  427c70:	bl	426488 <feof@plt+0x23788>
  427c74:	mov	x1, x0
  427c78:	mov	x0, x19
  427c7c:	ldp	x20, x19, [sp, #16]
  427c80:	mov	w2, wzr
  427c84:	mov	w3, wzr
  427c88:	ldp	x29, x30, [sp], #32
  427c8c:	b	426ec0 <feof@plt+0x241c0>
  427c90:	ldp	x20, x19, [sp, #16]
  427c94:	ldp	x29, x30, [sp], #32
  427c98:	ret
  427c9c:	stp	x29, x30, [sp, #-32]!
  427ca0:	ldrb	w8, [x1]
  427ca4:	str	x19, [sp, #16]
  427ca8:	mov	x3, x1
  427cac:	mov	x19, x0
  427cb0:	cmp	w8, #0x2f
  427cb4:	mov	x29, sp
  427cb8:	b.ne	427cc4 <feof@plt+0x24fc4>  // b.any
  427cbc:	add	x2, x19, #0xd8
  427cc0:	b	427ccc <feof@plt+0x24fcc>
  427cc4:	ldr	x2, [x19, #208]
  427cc8:	cbz	x2, 427d08 <feof@plt+0x25008>
  427ccc:	mov	w4, #0x1                   	// #1
  427cd0:	mov	w5, #0x1                   	// #1
  427cd4:	mov	x0, x19
  427cd8:	mov	x1, x3
  427cdc:	mov	w3, wzr
  427ce0:	mov	w6, wzr
  427ce4:	bl	426488 <feof@plt+0x23788>
  427ce8:	cbz	x0, 427d1c <feof@plt+0x2501c>
  427cec:	mov	x1, x0
  427cf0:	mov	x0, x19
  427cf4:	ldr	x19, [sp, #16]
  427cf8:	mov	w2, wzr
  427cfc:	mov	w3, wzr
  427d00:	ldp	x29, x30, [sp], #32
  427d04:	b	426ec0 <feof@plt+0x241c0>
  427d08:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  427d0c:	add	x2, x2, #0x47e
  427d10:	mov	w1, #0x3                   	// #3
  427d14:	mov	x0, x19
  427d18:	bl	4223e4 <feof@plt+0x1f6e4>
  427d1c:	ldr	x19, [sp, #16]
  427d20:	mov	w0, wzr
  427d24:	ldp	x29, x30, [sp], #32
  427d28:	ret
  427d2c:	ldrb	w8, [x0, #440]
  427d30:	cbz	w8, 427d3c <feof@plt+0x2503c>
  427d34:	ldr	x8, [x1, #56]
  427d38:	cbz	x8, 427d58 <feof@plt+0x25058>
  427d3c:	strb	wzr, [x0, #440]
  427d40:	cbz	x2, 427d68 <feof@plt+0x25068>
  427d44:	ldr	x8, [x1, #48]
  427d48:	cmp	x8, x2
  427d4c:	b.eq	427d6c <feof@plt+0x2506c>  // b.none
  427d50:	mov	x0, x2
  427d54:	b	402770 <free@plt>
  427d58:	ldr	x8, [x0, #424]
  427d5c:	str	x8, [x1, #56]
  427d60:	strb	wzr, [x0, #440]
  427d64:	cbnz	x2, 427d44 <feof@plt+0x25044>
  427d68:	ret
  427d6c:	strb	wzr, [x1, #213]
  427d70:	stp	xzr, xzr, [x1, #40]
  427d74:	mov	x0, x2
  427d78:	b	402770 <free@plt>
  427d7c:	ldr	x0, [x0]
  427d80:	ret
  427d84:	add	x0, x0, #0x48
  427d88:	ret
  427d8c:	stp	x29, x30, [sp, #-48]!
  427d90:	cmp	w3, #0x0
  427d94:	cset	w8, ne  // ne = any
  427d98:	str	x21, [sp, #16]
  427d9c:	stp	x20, x19, [sp, #32]
  427da0:	mov	x29, sp
  427da4:	stp	x1, x1, [x0, #200]
  427da8:	strb	w8, [x0, #416]
  427dac:	cbz	x1, 427de8 <feof@plt+0x250e8>
  427db0:	mov	x19, x2
  427db4:	mov	x20, x1
  427db8:	mov	x21, x0
  427dbc:	b	427dc8 <feof@plt+0x250c8>
  427dc0:	ldr	x20, [x20]
  427dc4:	cbz	x20, 427de8 <feof@plt+0x250e8>
  427dc8:	ldr	x0, [x20, #8]
  427dcc:	str	xzr, [x20, #32]
  427dd0:	bl	4026d0 <strlen@plt>
  427dd4:	cmp	x20, x19
  427dd8:	str	w0, [x20, #16]
  427ddc:	b.ne	427dc0 <feof@plt+0x250c0>  // b.any
  427de0:	str	x19, [x21, #208]
  427de4:	b	427dc0 <feof@plt+0x250c0>
  427de8:	ldp	x20, x19, [sp, #32]
  427dec:	ldr	x21, [sp, #16]
  427df0:	ldp	x29, x30, [sp], #48
  427df4:	ret
  427df8:	ldr	x0, [x0, #8]
  427dfc:	ret
  427e00:	ldr	x0, [x0, #64]
  427e04:	ret
  427e08:	ldr	x0, [x0]
  427e0c:	ret
  427e10:	ldr	x0, [x0, #80]
  427e14:	ret
  427e18:	ldr	x0, [x0, #72]
  427e1c:	ret
  427e20:	stp	x29, x30, [sp, #-96]!
  427e24:	stp	x26, x25, [sp, #32]
  427e28:	stp	x24, x23, [sp, #48]
  427e2c:	stp	x22, x21, [sp, #64]
  427e30:	stp	x20, x19, [sp, #80]
  427e34:	ldr	x8, [x0, #280]
  427e38:	mov	x21, x0
  427e3c:	mov	x19, x1
  427e40:	mov	w1, #0x10                  	// #16
  427e44:	str	x27, [sp, #16]
  427e48:	mov	x29, sp
  427e4c:	cbz	x8, 427e5c <feof@plt+0x2515c>
  427e50:	ldr	x8, [x8, #32]
  427e54:	add	x1, x1, #0x20
  427e58:	cbnz	x8, 427e50 <feof@plt+0x25150>
  427e5c:	mov	w0, #0x1                   	// #1
  427e60:	bl	455390 <_obstack_memory_used@@Base+0x168>
  427e64:	str	xzr, [x0]
  427e68:	strb	wzr, [x0, #8]
  427e6c:	ldr	x22, [x21, #280]
  427e70:	mov	x20, x0
  427e74:	cbz	x22, 427f34 <feof@plt+0x25234>
  427e78:	adrp	x23, 462000 <_obstack_memory_used@@Base+0xcdd8>
  427e7c:	add	x25, x20, #0x10
  427e80:	add	x23, x23, #0x430
  427e84:	b	427eac <feof@plt+0x251ac>
  427e88:	ldr	x0, [x22, #40]
  427e8c:	ldr	x1, [x22, #120]
  427e90:	add	x2, x8, #0x8
  427e94:	bl	4532b4 <feof@plt+0x505b4>
  427e98:	ldr	x8, [x22, #120]
  427e9c:	lsl	x9, x26, #5
  427ea0:	str	x8, [x25, x9]
  427ea4:	ldr	x22, [x22, #32]
  427ea8:	cbz	x22, 427f2c <feof@plt+0x2522c>
  427eac:	ldrb	w8, [x22, #211]
  427eb0:	cbnz	w8, 427ea4 <feof@plt+0x251a4>
  427eb4:	ldr	w8, [x22, #204]
  427eb8:	cbnz	w8, 427ea4 <feof@plt+0x251a4>
  427ebc:	ldrh	w8, [x22, #208]
  427ec0:	cbz	w8, 427ea4 <feof@plt+0x251a4>
  427ec4:	ldr	x26, [x20]
  427ec8:	add	x8, x26, #0x1
  427ecc:	str	x8, [x20]
  427ed0:	ldrb	w9, [x22, #210]
  427ed4:	add	x8, x25, x26, lsl #5
  427ed8:	strb	w9, [x8, #24]
  427edc:	ldrb	w10, [x20, #8]
  427ee0:	orr	w9, w10, w9
  427ee4:	strb	w9, [x20, #8]
  427ee8:	ldrb	w9, [x22, #213]
  427eec:	cbnz	w9, 427e88 <feof@plt+0x25188>
  427ef0:	ldr	w27, [x22, #200]
  427ef4:	mov	x0, x22
  427ef8:	bl	427fbc <feof@plt+0x252bc>
  427efc:	tbz	w0, #0, 427f98 <feof@plt+0x25298>
  427f00:	ldr	w0, [x22, #200]
  427f04:	mov	x1, x23
  427f08:	bl	453b84 <feof@plt+0x50e84>
  427f0c:	add	x8, x25, x26, lsl #5
  427f10:	add	x1, x8, #0x8
  427f14:	mov	x24, x0
  427f18:	bl	453024 <feof@plt+0x50324>
  427f1c:	mov	x0, x24
  427f20:	bl	402740 <fclose@plt>
  427f24:	str	w27, [x22, #200]
  427f28:	b	427e98 <feof@plt+0x25198>
  427f2c:	ldr	x1, [x20]
  427f30:	b	427f38 <feof@plt+0x25238>
  427f34:	mov	x1, xzr
  427f38:	adrp	x3, 428000 <feof@plt+0x25300>
  427f3c:	mov	w21, #0x10                  	// #16
  427f40:	add	x0, x20, #0x10
  427f44:	add	x3, x3, #0x88
  427f48:	mov	w2, #0x20                  	// #32
  427f4c:	bfi	x21, x1, #5, #59
  427f50:	bl	4027f0 <qsort@plt>
  427f54:	mov	w2, #0x1                   	// #1
  427f58:	mov	x0, x20
  427f5c:	mov	x1, x21
  427f60:	mov	x3, x19
  427f64:	bl	402bd0 <fwrite_unlocked@plt>
  427f68:	cmp	x0, #0x1
  427f6c:	mov	x0, x20
  427f70:	cset	w19, eq  // eq = none
  427f74:	bl	402770 <free@plt>
  427f78:	mov	w0, w19
  427f7c:	ldp	x20, x19, [sp, #80]
  427f80:	ldp	x22, x21, [sp, #64]
  427f84:	ldp	x24, x23, [sp, #48]
  427f88:	ldp	x26, x25, [sp, #32]
  427f8c:	ldr	x27, [sp, #16]
  427f90:	ldp	x29, x30, [sp], #96
  427f94:	ret
  427f98:	mov	x0, x21
  427f9c:	mov	x1, x22
  427fa0:	mov	w2, wzr
  427fa4:	mov	w3, wzr
  427fa8:	bl	426db4 <feof@plt+0x240b4>
  427fac:	mov	x0, x20
  427fb0:	bl	402770 <free@plt>
  427fb4:	mov	w19, wzr
  427fb8:	b	427f78 <feof@plt+0x25278>
  427fbc:	stp	x29, x30, [sp, #-32]!
  427fc0:	stp	x20, x19, [sp, #16]
  427fc4:	mov	x19, x0
  427fc8:	ldr	x0, [x0, #8]
  427fcc:	mov	x29, sp
  427fd0:	ldrb	w8, [x0]
  427fd4:	cbz	w8, 427ffc <feof@plt+0x252fc>
  427fd8:	mov	w1, #0x100                 	// #256
  427fdc:	mov	w2, #0x1b6                 	// #438
  427fe0:	bl	402720 <open@plt>
  427fe4:	mov	x20, x19
  427fe8:	cmn	w0, #0x1
  427fec:	str	w0, [x20, #200]!
  427ff0:	b.eq	428060 <feof@plt+0x25360>  // b.none
  427ff4:	mov	w1, w0
  427ff8:	b	428008 <feof@plt+0x25308>
  427ffc:	mov	x20, x19
  428000:	mov	w1, wzr
  428004:	str	wzr, [x20, #200]!
  428008:	add	x2, x19, #0x48
  42800c:	mov	w0, wzr
  428010:	bl	402600 <__fxstat@plt>
  428014:	cbnz	w0, 428034 <feof@plt+0x25334>
  428018:	ldr	w8, [x19, #88]
  42801c:	and	w8, w8, #0xf000
  428020:	cmp	w8, #0x4, lsl #12
  428024:	b.ne	42807c <feof@plt+0x2537c>  // b.any
  428028:	bl	402ac0 <__errno_location@plt>
  42802c:	mov	w8, #0x2                   	// #2
  428030:	str	w8, [x0]
  428034:	ldr	w0, [x20]
  428038:	bl	402b30 <close@plt>
  42803c:	mov	w8, #0xffffffff            	// #-1
  428040:	str	w8, [x20]
  428044:	bl	402ac0 <__errno_location@plt>
  428048:	ldr	w8, [x0]
  42804c:	mov	w0, wzr
  428050:	str	w8, [x19, #204]
  428054:	ldp	x20, x19, [sp, #16]
  428058:	ldp	x29, x30, [sp], #32
  42805c:	ret
  428060:	bl	402ac0 <__errno_location@plt>
  428064:	ldr	w8, [x0]
  428068:	cmp	w8, #0x14
  42806c:	b.ne	428048 <feof@plt+0x25348>  // b.any
  428070:	mov	w8, #0x2                   	// #2
  428074:	str	w8, [x0]
  428078:	b	428048 <feof@plt+0x25348>
  42807c:	mov	w8, wzr
  428080:	mov	w0, #0x1                   	// #1
  428084:	b	428050 <feof@plt+0x25350>
  428088:	ldr	x8, [x0]
  42808c:	ldr	x9, [x1]
  428090:	rev	x8, x8
  428094:	rev	x9, x9
  428098:	cmp	x8, x9
  42809c:	b.ne	4280f0 <feof@plt+0x253f0>  // b.any
  4280a0:	ldr	x8, [x0, #8]
  4280a4:	ldr	x9, [x1, #8]
  4280a8:	rev	x8, x8
  4280ac:	rev	x9, x9
  4280b0:	cmp	x8, x9
  4280b4:	b.ne	4280f0 <feof@plt+0x253f0>  // b.any
  4280b8:	ldr	x8, [x0, #16]
  4280bc:	ldr	x9, [x1, #16]
  4280c0:	rev	x8, x8
  4280c4:	rev	x9, x9
  4280c8:	cmp	x8, x9
  4280cc:	b.ne	4280f0 <feof@plt+0x253f0>  // b.any
  4280d0:	ldr	x8, [x0, #24]
  4280d4:	ldr	x9, [x1, #24]
  4280d8:	rev	x8, x8
  4280dc:	rev	x9, x9
  4280e0:	cmp	x8, x9
  4280e4:	b.ne	4280f0 <feof@plt+0x253f0>  // b.any
  4280e8:	mov	w0, wzr
  4280ec:	ret
  4280f0:	cmp	x8, x9
  4280f4:	mov	w8, #0xffffffff            	// #-1
  4280f8:	cneg	w0, w8, cs  // cs = hs, nlast
  4280fc:	ret
  428100:	sub	sp, sp, #0x50
  428104:	stp	x20, x19, [sp, #64]
  428108:	mov	x19, x1
  42810c:	mov	x0, sp
  428110:	mov	w1, #0x10                  	// #16
  428114:	mov	w2, #0x1                   	// #1
  428118:	mov	x3, x19
  42811c:	stp	x29, x30, [sp, #48]
  428120:	add	x29, sp, #0x30
  428124:	bl	402780 <fread_unlocked@plt>
  428128:	cmp	x0, #0x1
  42812c:	b.ne	42816c <feof@plt+0x2546c>  // b.any
  428130:	ldr	x20, [sp]
  428134:	mov	w0, #0x10                  	// #16
  428138:	bfi	x0, x20, #5, #59
  42813c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  428140:	ldr	q0, [sp]
  428144:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  428148:	str	x0, [x8, #2392]
  42814c:	mov	w1, #0x20                  	// #32
  428150:	str	q0, [x0], #16
  428154:	mov	x2, x20
  428158:	mov	x3, x19
  42815c:	bl	402780 <fread_unlocked@plt>
  428160:	cmp	x0, x20
  428164:	cset	w0, eq  // eq = none
  428168:	b	428170 <feof@plt+0x25470>
  42816c:	mov	w0, wzr
  428170:	ldp	x20, x19, [sp, #64]
  428174:	ldp	x29, x30, [sp, #48]
  428178:	add	sp, sp, #0x50
  42817c:	ret
  428180:	stp	x29, x30, [sp, #-48]!
  428184:	str	x21, [sp, #16]
  428188:	stp	x20, x19, [sp, #32]
  42818c:	mov	x29, sp
  428190:	mov	w19, w2
  428194:	mov	x20, x1
  428198:	mov	x21, x0
  42819c:	bl	42744c <feof@plt+0x2474c>
  4281a0:	mov	x2, x0
  4281a4:	mov	x0, x21
  4281a8:	mov	x1, x20
  4281ac:	mov	w3, wzr
  4281b0:	mov	w4, w19
  4281b4:	mov	w5, wzr
  4281b8:	mov	w6, wzr
  4281bc:	bl	426488 <feof@plt+0x23788>
  4281c0:	ldr	w8, [x0, #204]
  4281c4:	ldp	x20, x19, [sp, #32]
  4281c8:	ldr	x21, [sp, #16]
  4281cc:	cmp	w8, #0x2
  4281d0:	cset	w0, ne  // ne = any
  4281d4:	ldp	x29, x30, [sp], #48
  4281d8:	ret
  4281dc:	stp	x29, x30, [sp, #-96]!
  4281e0:	stp	x28, x27, [sp, #16]
  4281e4:	stp	x26, x25, [sp, #32]
  4281e8:	stp	x24, x23, [sp, #48]
  4281ec:	stp	x22, x21, [sp, #64]
  4281f0:	stp	x20, x19, [sp, #80]
  4281f4:	mov	x29, sp
  4281f8:	sub	sp, sp, #0x10
  4281fc:	ldr	w21, [x0, #16]
  428200:	mov	x8, sp
  428204:	mov	x27, x0
  428208:	add	x9, x21, #0x1b
  42820c:	and	x9, x9, #0x1fffffff0
  428210:	sub	x20, x8, x9
  428214:	mov	sp, x20
  428218:	ldr	x1, [x0, #8]
  42821c:	mov	x0, x20
  428220:	mov	x2, x21
  428224:	bl	402640 <memcpy@plt>
  428228:	cbz	w21, 428250 <feof@plt+0x25550>
  42822c:	add	x8, x21, x20
  428230:	ldurb	w8, [x8, #-1]
  428234:	cmp	w8, #0x2f
  428238:	b.eq	428254 <feof@plt+0x25554>  // b.none
  42823c:	add	x8, x21, #0x1
  428240:	mov	w9, #0x2f                  	// #47
  428244:	strb	w9, [x20, x21]
  428248:	mov	x21, x8
  42824c:	b	428254 <feof@plt+0x25554>
  428250:	mov	x21, xzr
  428254:	adrp	x8, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428258:	add	x8, x8, #0x433
  42825c:	ldr	x8, [x8]
  428260:	mov	w10, #0x6367                	// #25447
  428264:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  428268:	add	x9, x20, x21
  42826c:	movk	w10, #0x63, lsl #16
  428270:	add	x1, x1, #0x9ad
  428274:	mov	x0, x20
  428278:	str	x8, [x9]
  42827c:	stur	w10, [x9, #7]
  428280:	bl	453b50 <feof@plt+0x50e50>
  428284:	mov	x20, x0
  428288:	mov	w0, #0x48                  	// #72
  42828c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  428290:	str	x0, [x27, #32]
  428294:	cbz	x20, 428468 <feof@plt+0x25768>
  428298:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42829c:	mov	x19, xzr
  4282a0:	mov	w25, #0x9                   	// #9
  4282a4:	add	x26, x26, #0x3c4
  4282a8:	mov	x28, x19
  4282ac:	ldp	x8, x9, [x20, #8]
  4282b0:	cmp	x8, x9
  4282b4:	b.cs	4282d8 <feof@plt+0x255d8>  // b.hs, b.nlast
  4282b8:	add	x9, x8, #0x1
  4282bc:	str	x9, [x20, #8]
  4282c0:	ldrb	w21, [x8]
  4282c4:	and	w8, w21, #0xff
  4282c8:	ldrh	w8, [x26, w8, uxtw #1]
  4282cc:	tst	w8, #0xc00
  4282d0:	b.ne	4282ac <feof@plt+0x255ac>  // b.any
  4282d4:	b	4282f0 <feof@plt+0x255f0>
  4282d8:	mov	x0, x20
  4282dc:	bl	402ad0 <__uflow@plt>
  4282e0:	mov	w21, w0
  4282e4:	cmn	w0, #0x1
  4282e8:	b.ne	4282c4 <feof@plt+0x255c4>  // b.any
  4282ec:	b	428458 <feof@plt+0x25758>
  4282f0:	add	x19, x28, #0x2
  4282f4:	cmp	x19, x25
  4282f8:	b.ls	428310 <feof@plt+0x25610>  // b.plast
  4282fc:	ldr	x0, [x27, #32]
  428300:	add	x25, x25, #0x8
  428304:	lsl	x1, x25, #3
  428308:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  42830c:	str	x0, [x27, #32]
  428310:	mov	w0, w21
  428314:	mov	x1, x20
  428318:	bl	428594 <feof@plt+0x25894>
  42831c:	ldr	x8, [x27, #32]
  428320:	str	x0, [x8, x28, lsl #3]
  428324:	ldp	x8, x9, [x20, #8]
  428328:	cmp	x8, x9
  42832c:	b.cs	42834c <feof@plt+0x2564c>  // b.hs, b.nlast
  428330:	add	x9, x8, #0x1
  428334:	str	x9, [x20, #8]
  428338:	ldrb	w0, [x8]
  42833c:	and	w8, w0, #0xff
  428340:	ldrh	w8, [x26, w8, uxtw #1]
  428344:	tbnz	w8, #0, 428324 <feof@plt+0x25624>
  428348:	b	42835c <feof@plt+0x2565c>
  42834c:	mov	x0, x20
  428350:	bl	402ad0 <__uflow@plt>
  428354:	cmn	w0, #0x1
  428358:	b.ne	42833c <feof@plt+0x2563c>  // b.any
  42835c:	mov	x1, x20
  428360:	bl	428594 <feof@plt+0x25894>
  428364:	ldrb	w8, [x0]
  428368:	mov	x21, x0
  42836c:	cmp	w8, #0x2f
  428370:	b.ne	428388 <feof@plt+0x25688>  // b.any
  428374:	ldr	x8, [x27, #32]
  428378:	lsl	x9, x28, #3
  42837c:	orr	x9, x9, #0x8
  428380:	str	x21, [x8, x9]
  428384:	b	428418 <feof@plt+0x25718>
  428388:	ldr	w22, [x27, #16]
  42838c:	mov	x0, x21
  428390:	stur	x19, [x29, #-8]
  428394:	mov	x19, x25
  428398:	mov	x24, x27
  42839c:	bl	4026d0 <strlen@plt>
  4283a0:	add	x25, x22, #0x1
  4283a4:	add	x23, x0, #0x1
  4283a8:	add	x0, x23, x25
  4283ac:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4283b0:	ldr	x1, [x27, #8]
  4283b4:	mov	x2, x22
  4283b8:	mov	x24, x0
  4283bc:	bl	402640 <memcpy@plt>
  4283c0:	cbz	w22, 4283e4 <feof@plt+0x256e4>
  4283c4:	add	x8, x22, x24
  4283c8:	ldurb	w8, [x8, #-1]
  4283cc:	cmp	w8, #0x2f
  4283d0:	b.eq	4283e8 <feof@plt+0x256e8>  // b.none
  4283d4:	mov	w8, #0x2f                  	// #47
  4283d8:	strb	w8, [x24, x22]
  4283dc:	mov	x22, x25
  4283e0:	b	4283e8 <feof@plt+0x256e8>
  4283e4:	mov	x22, xzr
  4283e8:	mov	x25, x19
  4283ec:	ldur	x19, [x29, #-8]
  4283f0:	add	x0, x24, x22
  4283f4:	mov	x1, x21
  4283f8:	mov	x2, x23
  4283fc:	bl	402640 <memcpy@plt>
  428400:	ldr	x8, [x27, #32]
  428404:	lsl	x9, x28, #3
  428408:	orr	x9, x9, #0x8
  42840c:	mov	x0, x21
  428410:	str	x24, [x8, x9]
  428414:	bl	402770 <free@plt>
  428418:	ldp	x8, x9, [x20, #8]
  42841c:	cmp	x8, x9
  428420:	b.cs	428444 <feof@plt+0x25744>  // b.hs, b.nlast
  428424:	add	x9, x8, #0x1
  428428:	str	x9, [x20, #8]
  42842c:	ldrb	w0, [x8]
  428430:	cmn	w0, #0x1
  428434:	b.eq	4282a8 <feof@plt+0x255a8>  // b.none
  428438:	cmp	w0, #0xa
  42843c:	b.ne	428418 <feof@plt+0x25718>  // b.any
  428440:	b	4282a8 <feof@plt+0x255a8>
  428444:	mov	x0, x20
  428448:	bl	402ad0 <__uflow@plt>
  42844c:	cmn	w0, #0x1
  428450:	b.ne	428438 <feof@plt+0x25738>  // b.any
  428454:	b	4282a8 <feof@plt+0x255a8>
  428458:	mov	x0, x20
  42845c:	bl	402740 <fclose@plt>
  428460:	ldr	x0, [x27, #32]
  428464:	b	42846c <feof@plt+0x2576c>
  428468:	mov	x28, xzr
  42846c:	str	xzr, [x0, x28, lsl #3]
  428470:	mov	sp, x29
  428474:	ldp	x20, x19, [sp, #80]
  428478:	ldp	x22, x21, [sp, #64]
  42847c:	ldp	x24, x23, [sp, #48]
  428480:	ldp	x26, x25, [sp, #32]
  428484:	ldp	x28, x27, [sp, #16]
  428488:	ldp	x29, x30, [sp], #96
  42848c:	ret
  428490:	stp	x29, x30, [sp, #-64]!
  428494:	stp	x22, x21, [sp, #32]
  428498:	stp	x20, x19, [sp, #48]
  42849c:	ldr	x20, [x0, #304]
  4284a0:	mov	x19, x0
  4284a4:	mov	x0, x1
  4284a8:	str	x23, [sp, #16]
  4284ac:	mov	x29, sp
  4284b0:	mov	w22, w2
  4284b4:	mov	x23, x1
  4284b8:	bl	454b38 <feof@plt+0x51e38>
  4284bc:	mov	w2, w0
  4284c0:	mov	w3, #0x1                   	// #1
  4284c4:	mov	x0, x20
  4284c8:	mov	x1, x23
  4284cc:	bl	4544f0 <feof@plt+0x517f0>
  4284d0:	ldr	x8, [x0]
  4284d4:	mov	x20, x0
  4284d8:	cbz	x8, 4284ec <feof@plt+0x257ec>
  4284dc:	ldr	x9, [x8, #8]
  4284e0:	cbz	x9, 428578 <feof@plt+0x25878>
  4284e4:	ldr	x8, [x8]
  4284e8:	cbnz	x8, 4284dc <feof@plt+0x257dc>
  4284ec:	mov	w0, #0x1                   	// #1
  4284f0:	mov	w1, #0x40                  	// #64
  4284f4:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4284f8:	ldr	x8, [x19, #200]
  4284fc:	mov	x21, x0
  428500:	stp	x8, x23, [x0]
  428504:	mov	x0, x23
  428508:	bl	4026d0 <strlen@plt>
  42850c:	str	w0, [x21, #16]
  428510:	strb	w22, [x21, #20]
  428514:	str	xzr, [x21, #40]
  428518:	ldr	x0, [x19, #312]
  42851c:	ldr	w8, [x0]
  428520:	cmp	w8, #0x7f
  428524:	b.ne	428544 <feof@plt+0x25844>  // b.any
  428528:	mov	w0, #0xff0                 	// #4080
  42852c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  428530:	str	wzr, [x0]
  428534:	ldr	x9, [x19, #312]
  428538:	mov	w8, wzr
  42853c:	str	x9, [x0, #8]
  428540:	str	x0, [x19, #312]
  428544:	add	w9, w8, #0x1
  428548:	str	w9, [x0]
  42854c:	ldr	x9, [x20]
  428550:	mov	w8, w8
  428554:	add	x8, x0, x8, lsl #5
  428558:	str	x9, [x8, #16]!
  42855c:	str	xzr, [x8, #8]
  428560:	ldr	x9, [x19, #40]
  428564:	ldr	w9, [x9, #56]
  428568:	str	x21, [x8, #24]
  42856c:	str	w9, [x8, #16]
  428570:	str	x8, [x20]
  428574:	b	42857c <feof@plt+0x2587c>
  428578:	ldr	x21, [x8, #24]
  42857c:	mov	x0, x21
  428580:	ldp	x20, x19, [sp, #48]
  428584:	ldp	x22, x21, [sp, #32]
  428588:	ldr	x23, [sp, #16]
  42858c:	ldp	x29, x30, [sp], #64
  428590:	ret
  428594:	stp	x29, x30, [sp, #-80]!
  428598:	stp	x22, x21, [sp, #48]
  42859c:	mov	w21, w0
  4285a0:	mov	w0, #0x15                  	// #21
  4285a4:	stp	x26, x25, [sp, #16]
  4285a8:	stp	x24, x23, [sp, #32]
  4285ac:	stp	x20, x19, [sp, #64]
  4285b0:	mov	x29, sp
  4285b4:	mov	x19, x1
  4285b8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4285bc:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4285c0:	and	w8, w21, #0xff
  4285c4:	add	x22, x22, #0x3c4
  4285c8:	ldrh	w8, [x22, w8, uxtw #1]
  4285cc:	mov	x20, x0
  4285d0:	tst	w8, #0xc00
  4285d4:	b.eq	428608 <feof@plt+0x25908>  // b.none
  4285d8:	mov	x23, x20
  4285dc:	mov	w0, w21
  4285e0:	mov	x1, x19
  4285e4:	strb	wzr, [x23]
  4285e8:	bl	4026c0 <ungetc@plt>
  4285ec:	mov	x0, x20
  4285f0:	ldp	x20, x19, [sp, #64]
  4285f4:	ldp	x22, x21, [sp, #48]
  4285f8:	ldp	x24, x23, [sp, #32]
  4285fc:	ldp	x26, x25, [sp, #16]
  428600:	ldp	x29, x30, [sp], #80
  428604:	ret
  428608:	mov	w24, #0x14                  	// #20
  42860c:	mov	x23, x20
  428610:	strb	w21, [x20]
  428614:	b	42861c <feof@plt+0x2591c>
  428618:	strb	w21, [x23]
  42861c:	ldp	x8, x9, [x19, #8]
  428620:	add	x23, x23, #0x1
  428624:	cmp	x8, x9
  428628:	b.cs	42867c <feof@plt+0x2597c>  // b.hs, b.nlast
  42862c:	add	x9, x8, #0x1
  428630:	str	x9, [x19, #8]
  428634:	ldrb	w21, [x8]
  428638:	and	w8, w21, #0xff
  42863c:	ldrh	w8, [x22, w8, uxtw #1]
  428640:	tst	w8, #0xc00
  428644:	b.ne	4285dc <feof@plt+0x258dc>  // b.any
  428648:	sub	x25, x23, x20
  42864c:	cmp	x25, w24, sxtw
  428650:	b.ne	428618 <feof@plt+0x25918>  // b.any
  428654:	mov	w8, #0x1                   	// #1
  428658:	bfi	w8, w24, #1, #31
  42865c:	sxtw	x1, w8
  428660:	mov	x0, x20
  428664:	lsl	w26, w24, #1
  428668:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  42866c:	mov	x20, x0
  428670:	add	x23, x0, x25
  428674:	mov	w24, w26
  428678:	b	428618 <feof@plt+0x25918>
  42867c:	mov	x0, x19
  428680:	bl	402ad0 <__uflow@plt>
  428684:	mov	w21, w0
  428688:	cmn	w0, #0x1
  42868c:	b.ne	428638 <feof@plt+0x25938>  // b.any
  428690:	b	4285dc <feof@plt+0x258dc>
  428694:	sub	sp, sp, #0x50
  428698:	stp	x29, x30, [sp, #16]
  42869c:	stp	x24, x23, [sp, #32]
  4286a0:	stp	x22, x21, [sp, #48]
  4286a4:	stp	x20, x19, [sp, #64]
  4286a8:	ldr	x24, [x1, #8]
  4286ac:	mov	x22, x0
  4286b0:	mov	x0, x1
  4286b4:	add	x29, sp, #0x10
  4286b8:	mov	x20, x2
  4286bc:	mov	x19, x1
  4286c0:	str	x2, [x1, #8]
  4286c4:	bl	427fbc <feof@plt+0x252bc>
  4286c8:	tbz	w0, #0, 428774 <feof@plt+0x25a74>
  4286cc:	ldr	x8, [x22, #968]
  4286d0:	ldr	w2, [x19, #200]
  4286d4:	mov	x0, x22
  4286d8:	mov	x1, x20
  4286dc:	blr	x8
  4286e0:	mov	w23, w0
  4286e4:	and	w21, w0, #0x1
  4286e8:	tbnz	w0, #0, 4286fc <feof@plt+0x259fc>
  4286ec:	ldr	w0, [x19, #200]
  4286f0:	bl	402b30 <close@plt>
  4286f4:	mov	w8, #0xffffffff            	// #-1
  4286f8:	str	w8, [x19, #200]
  4286fc:	ldrb	w8, [x22, #1131]
  428700:	cbz	w8, 428778 <feof@plt+0x25a78>
  428704:	ldr	x8, [x22, #40]
  428708:	ldr	w9, [x8, #48]
  42870c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  428710:	ldr	x0, [x8, #1416]
  428714:	cmp	w9, #0x2
  428718:	b.cc	428798 <feof@plt+0x25a98>  // b.lo, b.ul, b.last
  42871c:	mov	w9, #0x1                   	// #1
  428720:	mov	w10, #0x2e                  	// #46
  428724:	ldp	x11, x12, [x0, #40]
  428728:	cmp	x11, x12
  42872c:	b.cs	428758 <feof@plt+0x25a58>  // b.hs, b.nlast
  428730:	add	x12, x11, #0x1
  428734:	str	x12, [x0, #40]
  428738:	strb	w10, [x11]
  42873c:	ldr	x11, [x22, #40]
  428740:	ldr	x0, [x8, #1416]
  428744:	add	w9, w9, #0x1
  428748:	ldr	w11, [x11, #48]
  42874c:	cmp	w9, w11
  428750:	b.cc	428724 <feof@plt+0x25a24>  // b.lo, b.ul, b.last
  428754:	b	428798 <feof@plt+0x25a98>
  428758:	mov	w1, #0x2e                  	// #46
  42875c:	stur	w9, [x29, #-4]
  428760:	bl	402730 <__overflow@plt>
  428764:	ldur	w9, [x29, #-4]
  428768:	mov	w10, #0x2e                  	// #46
  42876c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  428770:	b	42873c <feof@plt+0x25a3c>
  428774:	mov	w21, wzr
  428778:	str	x24, [x19, #8]
  42877c:	mov	w0, w21
  428780:	ldp	x20, x19, [sp, #64]
  428784:	ldp	x22, x21, [sp, #48]
  428788:	ldp	x24, x23, [sp, #32]
  42878c:	ldp	x29, x30, [sp, #16]
  428790:	add	sp, sp, #0x50
  428794:	ret
  428798:	tst	w23, #0x1
  42879c:	mov	w8, #0x78                  	// #120
  4287a0:	mov	w9, #0x21                  	// #33
  4287a4:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4287a8:	csel	w2, w9, w8, ne  // ne = any
  4287ac:	add	x1, x1, #0x443
  4287b0:	mov	x3, x20
  4287b4:	bl	4026f0 <fprintf@plt>
  4287b8:	b	428778 <feof@plt+0x25a78>
  4287bc:	stp	x29, x30, [sp, #-80]!
  4287c0:	stp	x24, x23, [sp, #32]
  4287c4:	stp	x22, x21, [sp, #48]
  4287c8:	stp	x20, x19, [sp, #64]
  4287cc:	ldrb	w8, [x1, #213]
  4287d0:	str	x25, [sp, #16]
  4287d4:	mov	x29, sp
  4287d8:	cbz	w8, 4287e4 <feof@plt+0x25ae4>
  4287dc:	mov	w0, #0x1                   	// #1
  4287e0:	b	4287fc <feof@plt+0x25afc>
  4287e4:	ldrb	w8, [x1, #211]
  4287e8:	mov	x19, x1
  4287ec:	cbnz	w8, 4287f8 <feof@plt+0x25af8>
  4287f0:	ldr	w8, [x19, #204]
  4287f4:	cbz	w8, 428814 <feof@plt+0x25b14>
  4287f8:	mov	w0, wzr
  4287fc:	ldp	x20, x19, [sp, #64]
  428800:	ldp	x22, x21, [sp, #48]
  428804:	ldp	x24, x23, [sp, #32]
  428808:	ldr	x25, [sp, #16]
  42880c:	ldp	x29, x30, [sp], #80
  428810:	ret
  428814:	ldr	w8, [x19, #200]
  428818:	mov	w21, w2
  42881c:	mov	x20, x0
  428820:	cmn	w8, #0x1
  428824:	b.ne	428834 <feof@plt+0x25b34>  // b.any
  428828:	mov	x0, x19
  42882c:	bl	427fbc <feof@plt+0x252bc>
  428830:	tbz	w0, #0, 4288f0 <feof@plt+0x25bf0>
  428834:	ldr	w8, [x19, #88]
  428838:	and	w25, w8, #0xf000
  42883c:	cmp	w25, #0x6, lsl #12
  428840:	b.ne	428868 <feof@plt+0x25b68>  // b.any
  428844:	ldr	x4, [x19, #8]
  428848:	adrp	x3, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42884c:	add	x3, x3, #0x44a
  428850:	mov	w1, #0x3                   	// #3
  428854:	mov	x0, x20
  428858:	mov	w2, w21
  42885c:	bl	422c94 <feof@plt+0x1ff94>
  428860:	mov	w8, #0x1                   	// #1
  428864:	b	42899c <feof@plt+0x25c9c>
  428868:	cmp	w25, #0x8, lsl #12
  42886c:	b.ne	428878 <feof@plt+0x25b78>  // b.any
  428870:	ldr	x22, [x19, #120]
  428874:	b	42887c <feof@plt+0x25b7c>
  428878:	mov	w22, #0x2000                	// #8192
  42887c:	add	x0, x22, #0x10
  428880:	bl	45535c <_obstack_memory_used@@Base+0x134>
  428884:	ldr	w8, [x19, #200]
  428888:	mov	x23, x0
  42888c:	mov	x1, x23
  428890:	mov	x2, x22
  428894:	mov	w0, w8
  428898:	bl	402840 <read@plt>
  42889c:	cmp	x0, #0x1
  4288a0:	b.lt	42890c <feof@plt+0x25c0c>  // b.tstop
  4288a4:	mov	x24, xzr
  4288a8:	b	4288c4 <feof@plt+0x25bc4>
  4288ac:	ldr	w0, [x19, #200]
  4288b0:	add	x1, x23, x24
  4288b4:	sub	x2, x22, x24
  4288b8:	bl	402840 <read@plt>
  4288bc:	cmp	x0, #0x0
  4288c0:	b.le	428910 <feof@plt+0x25c10>
  4288c4:	add	x24, x24, x0
  4288c8:	cmp	x24, x22
  4288cc:	b.ne	4288ac <feof@plt+0x25bac>  // b.any
  4288d0:	cmp	w25, #0x8, lsl #12
  4288d4:	b.eq	428968 <feof@plt+0x25c68>  // b.none
  4288d8:	lsl	x22, x22, #1
  4288dc:	add	x1, x22, #0x10
  4288e0:	mov	x0, x23
  4288e4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4288e8:	mov	x23, x0
  4288ec:	b	4288ac <feof@plt+0x25bac>
  4288f0:	mov	x0, x20
  4288f4:	mov	x1, x19
  4288f8:	mov	w2, wzr
  4288fc:	mov	w3, w21
  428900:	bl	426db4 <feof@plt+0x240b4>
  428904:	mov	w0, wzr
  428908:	b	4287fc <feof@plt+0x25afc>
  42890c:	mov	x24, xzr
  428910:	tbnz	x0, #63, 428944 <feof@plt+0x25c44>
  428914:	cmp	x24, x22
  428918:	b.eq	42896c <feof@plt+0x25c6c>  // b.none
  42891c:	cmp	w25, #0x8, lsl #12
  428920:	b.ne	42896c <feof@plt+0x25c6c>  // b.any
  428924:	ldr	x4, [x19, #8]
  428928:	adrp	x3, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42892c:	add	x3, x3, #0x45f
  428930:	mov	x0, x20
  428934:	mov	w1, wzr
  428938:	mov	w2, w21
  42893c:	bl	422c94 <feof@plt+0x1ff94>
  428940:	b	42896c <feof@plt+0x25c6c>
  428944:	ldr	x2, [x19, #8]
  428948:	mov	w1, #0x3                   	// #3
  42894c:	mov	x0, x20
  428950:	mov	w3, w21
  428954:	bl	422e9c <feof@plt+0x2019c>
  428958:	mov	x0, x23
  42895c:	bl	402770 <free@plt>
  428960:	mov	w8, #0x1                   	// #1
  428964:	b	42899c <feof@plt+0x25c9c>
  428968:	mov	x24, x22
  42896c:	ldr	x1, [x20, #1184]
  428970:	add	x3, x22, #0x10
  428974:	add	x5, x19, #0x30
  428978:	add	x6, x19, #0x78
  42897c:	mov	x0, x20
  428980:	mov	x2, x23
  428984:	mov	x4, x24
  428988:	bl	41c728 <feof@plt+0x19a28>
  42898c:	mov	w8, wzr
  428990:	mov	w9, #0x1                   	// #1
  428994:	str	x0, [x19, #40]
  428998:	strb	w9, [x19, #213]
  42899c:	ldr	w0, [x19, #200]
  4289a0:	strb	w8, [x19, #211]
  4289a4:	bl	402b30 <close@plt>
  4289a8:	ldrb	w8, [x19, #211]
  4289ac:	mov	w9, #0xffffffff            	// #-1
  4289b0:	str	w9, [x19, #200]
  4289b4:	cmp	w8, #0x0
  4289b8:	cset	w0, eq  // eq = none
  4289bc:	b	4287fc <feof@plt+0x25afc>
  4289c0:	stp	x29, x30, [sp, #-32]!
  4289c4:	stp	x20, x19, [sp, #16]
  4289c8:	mov	x20, x1
  4289cc:	mov	x19, x0
  4289d0:	mov	x29, sp
  4289d4:	cbnz	x1, 428a18 <feof@plt+0x25d18>
  4289d8:	mov	w8, #0x1                   	// #1
  4289dc:	mov	w0, #0xd                   	// #13
  4289e0:	strb	w8, [x19, #1304]
  4289e4:	bl	436980 <feof@plt+0x33c80>
  4289e8:	adrp	x8, 428000 <feof@plt+0x25300>
  4289ec:	add	x8, x8, #0xb28
  4289f0:	adrp	x3, 455000 <_obstack_begin_1@@Base+0xa4>
  4289f4:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x5e0>
  4289f8:	mov	x20, x0
  4289fc:	str	x8, [x0, #96]
  428a00:	add	x0, x19, #0x2d0
  428a04:	add	x3, x3, #0x35c
  428a08:	add	x4, x4, #0x770
  428a0c:	mov	x1, xzr
  428a10:	mov	x2, xzr
  428a14:	bl	454eb0 <_obstack_begin@@Base>
  428a18:	mov	x0, x19
  428a1c:	str	x19, [x20, #120]
  428a20:	str	x20, [x19, #1088]
  428a24:	bl	4207f8 <feof@plt+0x1daf8>
  428a28:	mov	x0, x19
  428a2c:	bl	41ea5c <feof@plt+0x1bd5c>
  428a30:	ldr	x0, [x19, #1088]
  428a34:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  428a38:	add	x1, x1, #0x90d
  428a3c:	mov	w2, #0x7                   	// #7
  428a40:	mov	w3, #0x1                   	// #1
  428a44:	bl	436a2c <feof@plt+0x33d2c>
  428a48:	ldr	x8, [x19, #1088]
  428a4c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428a50:	str	x0, [x19, #1248]
  428a54:	add	x1, x1, #0x4a8
  428a58:	mov	w2, #0x4                   	// #4
  428a5c:	mov	w3, #0x1                   	// #1
  428a60:	mov	x0, x8
  428a64:	bl	436a2c <feof@plt+0x33d2c>
  428a68:	ldr	x8, [x19, #1088]
  428a6c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428a70:	str	x0, [x19, #1256]
  428a74:	add	x1, x1, #0x4ad
  428a78:	mov	w2, #0x5                   	// #5
  428a7c:	mov	w3, #0x1                   	// #1
  428a80:	mov	x0, x8
  428a84:	bl	436a2c <feof@plt+0x33d2c>
  428a88:	ldr	x8, [x19, #1088]
  428a8c:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428a90:	str	x0, [x19, #1264]
  428a94:	add	x1, x1, #0x4b3
  428a98:	mov	w2, #0xb                   	// #11
  428a9c:	mov	w3, #0x1                   	// #1
  428aa0:	mov	x0, x8
  428aa4:	bl	436a2c <feof@plt+0x33d2c>
  428aa8:	str	x0, [x19, #1272]
  428aac:	ldrh	w8, [x0, #18]
  428ab0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  428ab4:	add	x1, x1, #0xbce
  428ab8:	mov	w2, #0xa                   	// #10
  428abc:	orr	w8, w8, #0x10
  428ac0:	strh	w8, [x0, #18]
  428ac4:	ldr	x0, [x19, #1088]
  428ac8:	mov	w3, #0x1                   	// #1
  428acc:	bl	436a2c <feof@plt+0x33d2c>
  428ad0:	str	x0, [x19, #1280]
  428ad4:	ldrh	w8, [x0, #18]
  428ad8:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428adc:	add	x1, x1, #0x4bf
  428ae0:	mov	w2, #0xf                   	// #15
  428ae4:	orr	w8, w8, #0x10
  428ae8:	strh	w8, [x0, #18]
  428aec:	ldr	x0, [x19, #1088]
  428af0:	mov	w3, #0x1                   	// #1
  428af4:	bl	436a2c <feof@plt+0x33d2c>
  428af8:	ldr	x8, [x19, #1088]
  428afc:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428b00:	str	x0, [x19, #1288]
  428b04:	add	x1, x1, #0x4cf
  428b08:	mov	w2, #0x14                  	// #20
  428b0c:	mov	w3, #0x1                   	// #1
  428b10:	mov	x0, x8
  428b14:	bl	436a2c <feof@plt+0x33d2c>
  428b18:	str	x0, [x19, #1296]
  428b1c:	ldp	x20, x19, [sp, #16]
  428b20:	ldp	x29, x30, [sp], #32
  428b24:	ret
  428b28:	stp	x29, x30, [sp, #-32]!
  428b2c:	str	x19, [sp, #16]
  428b30:	ldr	x19, [x0, #120]
  428b34:	mov	x29, sp
  428b38:	ldr	x9, [x19, #752]
  428b3c:	ldr	x8, [x19, #744]
  428b40:	sub	x9, x9, x8
  428b44:	cmp	x9, #0x1f
  428b48:	b.hi	428b5c <feof@plt+0x25e5c>  // b.pmore
  428b4c:	add	x0, x19, #0x2d0
  428b50:	mov	w1, #0x20                  	// #32
  428b54:	bl	45500c <_obstack_newchunk@@Base>
  428b58:	ldr	x8, [x19, #744]
  428b5c:	ldr	x0, [x19, #736]
  428b60:	add	x8, x8, #0x20
  428b64:	str	x8, [x19, #744]
  428b68:	cmp	x8, x0
  428b6c:	b.ne	428b7c <feof@plt+0x25e7c>  // b.any
  428b70:	ldrb	w9, [x19, #800]
  428b74:	orr	w9, w9, #0x2
  428b78:	strb	w9, [x19, #800]
  428b7c:	ldr	x10, [x19, #768]
  428b80:	ldr	x11, [x19, #728]
  428b84:	ldr	x9, [x19, #752]
  428b88:	add	x8, x10, x8
  428b8c:	bic	x8, x8, x10
  428b90:	sub	x10, x8, x11
  428b94:	sub	x11, x9, x11
  428b98:	cmp	x10, x11
  428b9c:	str	x8, [x19, #744]
  428ba0:	b.ls	428bac <feof@plt+0x25eac>  // b.plast
  428ba4:	mov	x8, x9
  428ba8:	str	x9, [x19, #744]
  428bac:	movi	v0.2d, #0x0
  428bb0:	str	x8, [x19, #736]
  428bb4:	stp	q0, q0, [x0]
  428bb8:	ldr	x19, [sp, #16]
  428bbc:	ldp	x29, x30, [sp], #32
  428bc0:	ret
  428bc4:	ldr	x0, [x0, #1088]
  428bc8:	mov	w2, w2
  428bcc:	mov	w3, #0x1                   	// #1
  428bd0:	b	436a2c <feof@plt+0x33d2c>
  428bd4:	stp	x29, x30, [sp, #-32]!
  428bd8:	ldrb	w8, [x0, #1304]
  428bdc:	str	x19, [sp, #16]
  428be0:	mov	x29, sp
  428be4:	cbz	w8, 428c08 <feof@plt+0x25f08>
  428be8:	mov	x19, x0
  428bec:	ldr	x0, [x0, #1088]
  428bf0:	bl	4369f4 <feof@plt+0x33cf4>
  428bf4:	add	x0, x19, #0x2d0
  428bf8:	ldr	x19, [sp, #16]
  428bfc:	mov	x1, xzr
  428c00:	ldp	x29, x30, [sp], #32
  428c04:	b	455194 <_obstack_free@@Base>
  428c08:	ldr	x19, [sp, #16]
  428c0c:	ldp	x29, x30, [sp], #32
  428c10:	ret
  428c14:	stp	x29, x30, [sp, #-16]!
  428c18:	ldr	x0, [x0, #1088]
  428c1c:	mov	w3, wzr
  428c20:	sxtw	x2, w2
  428c24:	mov	x29, sp
  428c28:	bl	436a2c <feof@plt+0x33d2c>
  428c2c:	cbz	x0, 428c38 <feof@plt+0x25f38>
  428c30:	ldrh	w8, [x0, #18]
  428c34:	ubfx	w0, w8, #1, #1
  428c38:	ldp	x29, x30, [sp], #16
  428c3c:	ret
  428c40:	ldr	x0, [x0, #1088]
  428c44:	b	436d50 <feof@plt+0x34050>
  428c48:	stp	x29, x30, [sp, #-16]!
  428c4c:	ldrb	w8, [x0, #4]
  428c50:	mov	x29, sp
  428c54:	cmp	w8, #0x35
  428c58:	b.ne	428c78 <feof@plt+0x25f78>  // b.any
  428c5c:	ldr	x8, [x0, #8]
  428c60:	ldr	x0, [x8]
  428c64:	bl	402b40 <strcmp@plt>
  428c68:	cmp	w0, #0x0
  428c6c:	cset	w0, eq  // eq = none
  428c70:	ldp	x29, x30, [sp], #16
  428c74:	ret
  428c78:	mov	w0, wzr
  428c7c:	ldp	x29, x30, [sp], #16
  428c80:	ret
  428c84:	ret
  428c88:	sub	sp, sp, #0x90
  428c8c:	stp	x29, x30, [sp, #48]
  428c90:	stp	x28, x27, [sp, #64]
  428c94:	stp	x26, x25, [sp, #80]
  428c98:	stp	x24, x23, [sp, #96]
  428c9c:	stp	x22, x21, [sp, #112]
  428ca0:	stp	x20, x19, [sp, #128]
  428ca4:	ldr	x19, [x0]
  428ca8:	add	x29, sp, #0x30
  428cac:	ldr	x20, [x19, #16]
  428cb0:	ldrb	w8, [x19, #105]
  428cb4:	str	xzr, [x19, #56]
  428cb8:	strb	wzr, [x19, #104]
  428cbc:	stp	x20, x20, [x19]
  428cc0:	tbnz	w8, #1, 428ea8 <feof@plt+0x261a8>
  428cc4:	adrp	x10, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428cc8:	adrp	x11, 462000 <_obstack_memory_used@@Base+0xcdd8>
  428ccc:	ldr	q6, [x10, #1264]
  428cd0:	ldr	q7, [x11, #1280]
  428cd4:	adrp	x10, 47d000 <stderr@@GLIBC_2.17+0xa78>
  428cd8:	mov	w9, wzr
  428cdc:	mov	x8, xzr
  428ce0:	mov	w21, #0xffffffff            	// #-1
  428ce4:	movi	v4.16b, #0xa
  428ce8:	movi	v5.16b, #0xd
  428cec:	movi	v16.16b, #0x5c
  428cf0:	movi	v17.16b, #0x3f
  428cf4:	add	x10, x10, #0x968
  428cf8:	and	x11, x20, #0xfff
  428cfc:	cmp	x11, #0xff1
  428d00:	and	x11, x20, #0xfffffffffffffff0
  428d04:	b.cs	428d10 <feof@plt+0x26010>  // b.hs, b.nlast
  428d08:	ldr	q0, [x20]
  428d0c:	b	428d5c <feof@plt+0x2605c>
  428d10:	ldr	q0, [x11]
  428d14:	and	w12, w20, #0xf
  428d18:	lsl	w12, w21, w12
  428d1c:	cmeq	v1.16b, v0.16b, v4.16b
  428d20:	cmeq	v2.16b, v0.16b, v5.16b
  428d24:	cmeq	v3.16b, v0.16b, v16.16b
  428d28:	cmeq	v0.16b, v0.16b, v17.16b
  428d2c:	orr	v0.16b, v0.16b, v2.16b
  428d30:	orr	v0.16b, v0.16b, v1.16b
  428d34:	orr	v0.16b, v0.16b, v3.16b
  428d38:	and	v0.16b, v0.16b, v6.16b
  428d3c:	uaddlp	v0.8h, v0.16b
  428d40:	ushl	v0.8h, v0.8h, v7.8h
  428d44:	addv	h0, v0.8h
  428d48:	fmov	w13, s0
  428d4c:	and	w12, w12, w13
  428d50:	ands	w12, w12, #0xffff
  428d54:	b.ne	428da0 <feof@plt+0x260a0>  // b.any
  428d58:	ldr	q0, [x11, #16]!
  428d5c:	cmeq	v1.16b, v0.16b, v4.16b
  428d60:	cmeq	v2.16b, v0.16b, v5.16b
  428d64:	cmeq	v3.16b, v0.16b, v16.16b
  428d68:	cmeq	v0.16b, v0.16b, v17.16b
  428d6c:	orr	v0.16b, v0.16b, v2.16b
  428d70:	orr	v0.16b, v0.16b, v1.16b
  428d74:	orr	v0.16b, v0.16b, v3.16b
  428d78:	addp	d1, v0.2d
  428d7c:	fmov	x12, d1
  428d80:	cbz	x12, 428d58 <feof@plt+0x26058>
  428d84:	and	v0.16b, v0.16b, v6.16b
  428d88:	uaddlp	v0.8h, v0.16b
  428d8c:	ushl	v0.8h, v0.8h, v7.8h
  428d90:	cmp	x11, x20
  428d94:	addv	h0, v0.8h
  428d98:	csel	x11, x20, x11, cc  // cc = lo, ul, last
  428d9c:	fmov	w12, s0
  428da0:	rbit	w12, w12
  428da4:	clz	w12, w12
  428da8:	add	x20, x11, x12
  428dac:	ldrb	w11, [x20]
  428db0:	cmp	w11, #0x5c
  428db4:	b.ne	428dc4 <feof@plt+0x260c4>  // b.any
  428db8:	mov	x8, x20
  428dbc:	add	x20, x20, #0x1
  428dc0:	b	428cf8 <feof@plt+0x25ff8>
  428dc4:	cmp	w11, #0x3f
  428dc8:	b.ne	428ec4 <feof@plt+0x261c4>  // b.any
  428dcc:	ldrb	w11, [x20, #1]
  428dd0:	cmp	w11, #0x3f
  428dd4:	b.ne	428dbc <feof@plt+0x260bc>  // b.any
  428dd8:	stp	q7, q6, [sp]
  428ddc:	ldrb	w23, [x20, #2]
  428de0:	mov	x22, x8
  428de4:	stur	x0, [x29, #-8]
  428de8:	ldrb	w8, [x10, x23]
  428dec:	cbz	w8, 428e20 <feof@plt+0x26120>
  428df0:	ldr	w8, [x19, #64]
  428df4:	cmp	w9, w8
  428df8:	b.ne	428e4c <feof@plt+0x2614c>  // b.any
  428dfc:	ldr	x0, [x19, #48]
  428e00:	lsl	w8, w9, #1
  428e04:	add	w8, w8, #0xc8
  428e08:	lsl	x1, x8, #4
  428e0c:	str	w8, [x19, #64]
  428e10:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  428e14:	ldr	w9, [x19, #60]
  428e18:	str	x0, [x19, #48]
  428e1c:	b	428e50 <feof@plt+0x26150>
  428e20:	ldur	x0, [x29, #-8]
  428e24:	ldp	q7, q6, [sp]
  428e28:	adrp	x10, 47d000 <stderr@@GLIBC_2.17+0xa78>
  428e2c:	add	x10, x10, #0x968
  428e30:	mov	x8, x22
  428e34:	movi	v4.16b, #0xa
  428e38:	movi	v5.16b, #0xd
  428e3c:	movi	v16.16b, #0x5c
  428e40:	movi	v17.16b, #0x3f
  428e44:	add	x20, x20, #0x1
  428e48:	b	428cf8 <feof@plt+0x25ff8>
  428e4c:	ldr	x0, [x19, #48]
  428e50:	add	x8, x0, w9, uxtw #4
  428e54:	ldur	x0, [x29, #-8]
  428e58:	add	w9, w9, #0x1
  428e5c:	str	x20, [x8]
  428e60:	str	w23, [x8, #8]
  428e64:	str	w9, [x19, #60]
  428e68:	ldrb	w11, [x0, #1125]
  428e6c:	ldp	q7, q6, [sp]
  428e70:	adrp	x10, 47d000 <stderr@@GLIBC_2.17+0xa78>
  428e74:	add	x10, x10, #0x968
  428e78:	mov	x8, x22
  428e7c:	movi	v4.16b, #0xa
  428e80:	movi	v5.16b, #0xd
  428e84:	movi	v16.16b, #0x5c
  428e88:	movi	v17.16b, #0x3f
  428e8c:	cbz	w11, 428dbc <feof@plt+0x260bc>
  428e90:	mov	x21, x20
  428e94:	ldrb	w8, [x21, #2]!
  428e98:	add	x22, x19, #0x20
  428e9c:	ldrb	w8, [x10, x8]
  428ea0:	strb	w8, [x20]
  428ea4:	b	429044 <feof@plt+0x26344>
  428ea8:	ldrb	w8, [x20]
  428eac:	cmp	w8, #0xa
  428eb0:	b.eq	428f78 <feof@plt+0x26278>  // b.none
  428eb4:	cmp	w8, #0xd
  428eb8:	b.eq	428f58 <feof@plt+0x26258>  // b.none
  428ebc:	add	x20, x20, #0x1
  428ec0:	b	428ea8 <feof@plt+0x261a8>
  428ec4:	mov	x22, x19
  428ec8:	ldr	x10, [x22, #32]!
  428ecc:	cmp	x20, x10
  428ed0:	b.eq	428f78 <feof@plt+0x26278>  // b.none
  428ed4:	cmp	w11, #0xd
  428ed8:	mov	x21, x20
  428edc:	b.eq	428ff8 <feof@plt+0x262f8>  // b.none
  428ee0:	cbz	x8, 428f7c <feof@plt+0x2627c>
  428ee4:	adrp	x11, 467000 <_obstack_memory_used@@Base+0x11dd8>
  428ee8:	mov	x23, xzr
  428eec:	sub	x10, x20, #0x1
  428ef0:	add	x11, x11, #0x3c4
  428ef4:	ldrb	w12, [x10, x23]
  428ef8:	sub	x23, x23, #0x1
  428efc:	ldrh	w12, [x11, x12, lsl #1]
  428f00:	tbnz	w12, #11, 428ef4 <feof@plt+0x261f4>
  428f04:	sub	x10, x8, x20
  428f08:	cmp	x10, x23
  428f0c:	b.ne	428f7c <feof@plt+0x2627c>  // b.any
  428f10:	mov	x24, x8
  428f14:	ldr	w8, [x19, #64]
  428f18:	cmn	x23, #0x1
  428f1c:	mov	w10, #0x20                  	// #32
  428f20:	mov	w11, #0x5c                  	// #92
  428f24:	csel	w25, w11, w10, eq  // eq = none
  428f28:	cmp	w9, w8
  428f2c:	stur	x0, [x29, #-8]
  428f30:	b.ne	429020 <feof@plt+0x26320>  // b.any
  428f34:	ldr	x0, [x19, #48]
  428f38:	lsl	w8, w9, #1
  428f3c:	add	w8, w8, #0xc8
  428f40:	lsl	x1, x8, #4
  428f44:	str	w8, [x19, #64]
  428f48:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  428f4c:	ldr	w9, [x19, #60]
  428f50:	str	x0, [x19, #48]
  428f54:	b	429024 <feof@plt+0x26324>
  428f58:	ldr	x8, [x19, #32]
  428f5c:	cmp	x8, x20
  428f60:	b.eq	428f78 <feof@plt+0x26278>  // b.none
  428f64:	mov	x8, x20
  428f68:	ldrb	w9, [x8, #1]!
  428f6c:	cmp	w9, #0xa
  428f70:	csel	x21, x8, x20, eq  // eq = none
  428f74:	b	428f7c <feof@plt+0x2627c>
  428f78:	mov	x21, x20
  428f7c:	mov	w8, #0xa                   	// #10
  428f80:	strb	w8, [x20], #1
  428f84:	ldp	w8, w9, [x19, #60]
  428f88:	cmp	w8, w9
  428f8c:	b.ne	428fb4 <feof@plt+0x262b4>  // b.any
  428f90:	ldr	x0, [x19, #48]
  428f94:	lsl	w8, w8, #1
  428f98:	add	w8, w8, #0xc8
  428f9c:	lsl	x1, x8, #4
  428fa0:	str	w8, [x19, #64]
  428fa4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  428fa8:	ldr	w8, [x19, #60]
  428fac:	str	x0, [x19, #48]
  428fb0:	b	428fb8 <feof@plt+0x262b8>
  428fb4:	ldr	x0, [x19, #48]
  428fb8:	add	x9, x0, w8, uxtw #4
  428fbc:	mov	w10, #0xa                   	// #10
  428fc0:	add	w8, w8, #0x1
  428fc4:	add	x11, x21, #0x1
  428fc8:	str	x20, [x9]
  428fcc:	str	w10, [x9, #8]
  428fd0:	str	w8, [x19, #60]
  428fd4:	str	x11, [x19, #16]
  428fd8:	ldp	x20, x19, [sp, #128]
  428fdc:	ldp	x22, x21, [sp, #112]
  428fe0:	ldp	x24, x23, [sp, #96]
  428fe4:	ldp	x26, x25, [sp, #80]
  428fe8:	ldp	x28, x27, [sp, #64]
  428fec:	ldp	x29, x30, [sp, #48]
  428ff0:	add	sp, sp, #0x90
  428ff4:	ret
  428ff8:	mov	x11, x20
  428ffc:	ldrb	w12, [x11, #1]!
  429000:	mov	x21, x20
  429004:	cmp	w12, #0xa
  429008:	b.ne	428ee0 <feof@plt+0x261e0>  // b.any
  42900c:	cmp	x11, x10
  429010:	mov	x21, x11
  429014:	b.ne	428ee0 <feof@plt+0x261e0>  // b.any
  429018:	mov	x21, x11
  42901c:	b	428f7c <feof@plt+0x2627c>
  429020:	ldr	x0, [x19, #48]
  429024:	add	x10, x20, x23
  429028:	add	x8, x0, w9, uxtw #4
  42902c:	add	w9, w9, #0x1
  429030:	sub	x20, x10, #0x1
  429034:	str	x24, [x8]
  429038:	str	w25, [x8, #8]
  42903c:	str	w9, [x19, #60]
  429040:	str	x24, [x19, #16]
  429044:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x11dd8>
  429048:	add	x26, x26, #0x3c4
  42904c:	mov	w28, #0x20                  	// #32
  429050:	mov	w24, #0x5c                  	// #92
  429054:	mov	x25, x21
  429058:	ldrb	w11, [x21, #1]!
  42905c:	mov	x8, x20
  429060:	cmp	w11, #0x3f
  429064:	strb	w11, [x20, #1]!
  429068:	b.eq	429084 <feof@plt+0x26384>  // b.none
  42906c:	cmp	w11, #0xd
  429070:	b.eq	4290d4 <feof@plt+0x263d4>  // b.none
  429074:	cmp	w11, #0xa
  429078:	b.ne	429054 <feof@plt+0x26354>  // b.any
  42907c:	ldr	x11, [x22]
  429080:	b	4290ec <feof@plt+0x263ec>
  429084:	ldrb	w8, [x25, #2]
  429088:	cmp	w8, #0x3f
  42908c:	b.ne	429054 <feof@plt+0x26354>  // b.any
  429090:	ldrb	w23, [x25, #3]!
  429094:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  429098:	add	x8, x8, #0x968
  42909c:	ldrb	w8, [x8, x23]
  4290a0:	cbz	w8, 429054 <feof@plt+0x26354>
  4290a4:	ldp	w8, w9, [x19, #60]
  4290a8:	cmp	w8, w9
  4290ac:	b.ne	4291a4 <feof@plt+0x264a4>  // b.any
  4290b0:	ldr	x0, [x19, #48]
  4290b4:	lsl	w8, w8, #1
  4290b8:	add	w8, w8, #0xc8
  4290bc:	lsl	x1, x8, #4
  4290c0:	str	w8, [x19, #64]
  4290c4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4290c8:	ldr	w8, [x19, #60]
  4290cc:	str	x0, [x19, #48]
  4290d0:	b	4291a8 <feof@plt+0x264a8>
  4290d4:	ldr	x11, [x22]
  4290d8:	cmp	x21, x11
  4290dc:	b.eq	428f7c <feof@plt+0x2627c>  // b.none
  4290e0:	ldrb	w12, [x25, #2]!
  4290e4:	cmp	w12, #0xa
  4290e8:	csel	x21, x25, x21, eq  // eq = none
  4290ec:	cmp	x21, x11
  4290f0:	b.eq	428f7c <feof@plt+0x2627c>  // b.none
  4290f4:	ldr	x11, [x19, #16]
  4290f8:	cmp	x20, x11
  4290fc:	b.eq	428f7c <feof@plt+0x2627c>  // b.none
  429100:	mvn	x12, x8
  429104:	mov	x10, xzr
  429108:	add	x11, x12, x11
  42910c:	ldrb	w12, [x8, x10]
  429110:	ldrh	w13, [x26, x12, lsl #1]
  429114:	tbz	w13, #11, 429128 <feof@plt+0x26428>
  429118:	sub	x10, x10, #0x1
  42911c:	cmp	x11, x10
  429120:	b.ne	42910c <feof@plt+0x2640c>  // b.any
  429124:	b	428f7c <feof@plt+0x2627c>
  429128:	cmp	w12, #0x5c
  42912c:	b.ne	428f7c <feof@plt+0x2627c>  // b.any
  429130:	ldp	w9, w11, [x19, #60]
  429134:	cmp	x10, #0x0
  429138:	mov	x23, x26
  42913c:	csel	w20, w24, w28, eq  // eq = none
  429140:	cmp	w9, w11
  429144:	mov	x26, x8
  429148:	mov	x27, x10
  42914c:	add	x25, x8, x10
  429150:	b.ne	429178 <feof@plt+0x26478>  // b.any
  429154:	ldr	x0, [x19, #48]
  429158:	lsl	w8, w9, #1
  42915c:	add	w8, w8, #0xc8
  429160:	lsl	x1, x8, #4
  429164:	str	w8, [x19, #64]
  429168:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  42916c:	ldr	w9, [x19, #60]
  429170:	str	x0, [x19, #48]
  429174:	b	42917c <feof@plt+0x2647c>
  429178:	ldr	x0, [x19, #48]
  42917c:	add	x8, x0, w9, uxtw #4
  429180:	add	w9, w9, #0x1
  429184:	add	x10, x26, x27
  429188:	str	x25, [x8]
  42918c:	str	w20, [x8, #8]
  429190:	str	w9, [x19, #60]
  429194:	sub	x20, x10, #0x1
  429198:	str	x25, [x19, #16]
  42919c:	mov	x26, x23
  4291a0:	b	429054 <feof@plt+0x26354>
  4291a4:	ldr	x0, [x19, #48]
  4291a8:	add	x9, x0, w8, uxtw #4
  4291ac:	add	w8, w8, #0x1
  4291b0:	str	x20, [x9]
  4291b4:	str	w23, [x9, #8]
  4291b8:	str	w8, [x19, #60]
  4291bc:	ldur	x8, [x29, #-8]
  4291c0:	ldrb	w8, [x8, #1125]
  4291c4:	cbz	w8, 429054 <feof@plt+0x26354>
  4291c8:	ldrb	w10, [x25]
  4291cc:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4291d0:	add	x8, x8, #0x968
  4291d4:	mov	x21, x25
  4291d8:	ldrb	w8, [x8, x10]
  4291dc:	strb	w8, [x20]
  4291e0:	b	429054 <feof@plt+0x26354>
  4291e4:	stp	x29, x30, [sp, #-96]!
  4291e8:	stp	x28, x27, [sp, #16]
  4291ec:	stp	x26, x25, [sp, #32]
  4291f0:	stp	x24, x23, [sp, #48]
  4291f4:	stp	x22, x21, [sp, #64]
  4291f8:	stp	x20, x19, [sp, #80]
  4291fc:	ldr	x26, [x0]
  429200:	mov	x29, sp
  429204:	ldr	x9, [x26, #48]
  429208:	ldr	w10, [x26, #56]
  42920c:	ldr	x11, [x26]
  429210:	add	x24, x9, w10, uxtw #4
  429214:	ldr	x8, [x24]
  429218:	cmp	x8, x11
  42921c:	b.ls	42923c <feof@plt+0x2653c>  // b.plast
  429220:	ldp	x20, x19, [sp, #80]
  429224:	ldp	x22, x21, [sp, #64]
  429228:	ldp	x24, x23, [sp, #48]
  42922c:	ldp	x26, x25, [sp, #32]
  429230:	ldp	x28, x27, [sp, #16]
  429234:	ldp	x29, x30, [sp], #96
  429238:	ret
  42923c:	adrp	x21, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429240:	adrp	x22, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429244:	adrp	x28, 47d000 <stderr@@GLIBC_2.17+0xa78>
  429248:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42924c:	mov	x19, x0
  429250:	mov	w20, w1
  429254:	add	x21, x21, #0xcb1
  429258:	mov	w27, #0x18                  	// #24
  42925c:	add	x22, x22, #0xc88
  429260:	add	x28, x28, #0x968
  429264:	add	x23, x23, #0x3c4
  429268:	b	4292cc <feof@plt+0x265cc>
  42926c:	ldr	x8, [x24]
  429270:	mov	w2, wzr
  429274:	str	x8, [x26, #8]
  429278:	ldr	x0, [x19, #40]
  42927c:	ldr	w8, [x0, #12]
  429280:	ldr	x9, [x0]
  429284:	sub	w8, w8, #0x1
  429288:	smaddl	x8, w8, w27, x9
  42928c:	ldr	w9, [x0, #60]
  429290:	ldr	w10, [x8]
  429294:	ldrb	w11, [x8, #6]
  429298:	ldr	w8, [x8, #16]
  42929c:	sub	w9, w9, w10
  4292a0:	lsr	w9, w9, w11
  4292a4:	add	w8, w8, w9
  4292a8:	add	w1, w8, #0x1
  4292ac:	bl	42ebc8 <feof@plt+0x2bec8>
  4292b0:	ldr	x9, [x26, #48]
  4292b4:	ldr	w10, [x26, #56]
  4292b8:	ldr	x11, [x26]
  4292bc:	add	x24, x9, w10, uxtw #4
  4292c0:	ldr	x8, [x24]
  4292c4:	cmp	x8, x11
  4292c8:	b.hi	429220 <feof@plt+0x26520>  // b.pmore
  4292cc:	add	w11, w10, #0x1
  4292d0:	ldr	w12, [x26, #8]
  4292d4:	str	w11, [x26, #56]
  4292d8:	add	x9, x9, x10, lsl #4
  4292dc:	ldr	w5, [x9, #8]
  4292e0:	sub	w9, w8, w12
  4292e4:	add	w25, w9, #0x1
  4292e8:	cmp	w5, #0x5c
  4292ec:	b.eq	4292f8 <feof@plt+0x265f8>  // b.none
  4292f0:	cmp	w5, #0x20
  4292f4:	b.ne	429358 <feof@plt+0x26658>  // b.any
  4292f8:	cbnz	w20, 429320 <feof@plt+0x26620>
  4292fc:	cmp	w5, #0x20
  429300:	b.ne	429320 <feof@plt+0x26620>  // b.any
  429304:	ldr	x8, [x19, #40]
  429308:	mov	x0, x19
  42930c:	mov	w1, wzr
  429310:	mov	w3, w25
  429314:	ldr	w2, [x8, #60]
  429318:	mov	x4, x22
  42931c:	bl	4228a4 <feof@plt+0x1fba4>
  429320:	ldr	x8, [x26, #16]
  429324:	ldr	x9, [x26, #32]
  429328:	cmp	x8, x9
  42932c:	b.ls	42926c <feof@plt+0x2656c>  // b.plast
  429330:	ldr	x8, [x19, #40]
  429334:	mov	w1, #0x2                   	// #2
  429338:	mov	x0, x19
  42933c:	mov	w3, w25
  429340:	ldr	w2, [x8, #60]
  429344:	mov	x4, x21
  429348:	bl	4228a4 <feof@plt+0x1fba4>
  42934c:	ldr	x8, [x26, #32]
  429350:	str	x8, [x26, #16]
  429354:	b	42926c <feof@plt+0x2656c>
  429358:	ldrb	w6, [x28, x5]
  42935c:	cbz	w6, 429394 <feof@plt+0x26694>
  429360:	ldrb	w9, [x19, #1136]
  429364:	cbz	w9, 4292b0 <feof@plt+0x265b0>
  429368:	cbz	w20, 42939c <feof@plt+0x2669c>
  42936c:	cmp	w5, #0x2f
  429370:	b.ne	4292b0 <feof@plt+0x265b0>  // b.any
  429374:	ldrb	w9, [x19, #1125]
  429378:	cbz	w9, 4293c8 <feof@plt+0x266c8>
  42937c:	ldr	x9, [x24, #16]
  429380:	cmp	x9, x8
  429384:	b.ne	4292b0 <feof@plt+0x265b0>  // b.any
  429388:	ldr	x8, [x19, #40]
  42938c:	ldr	w2, [x8, #60]
  429390:	b	4293ac <feof@plt+0x266ac>
  429394:	cbz	w5, 4292b0 <feof@plt+0x265b0>
  429398:	b	429410 <feof@plt+0x26710>
  42939c:	ldr	x8, [x19, #40]
  4293a0:	ldrb	w9, [x19, #1125]
  4293a4:	ldr	w2, [x8, #60]
  4293a8:	cbz	w9, 4293f4 <feof@plt+0x266f4>
  4293ac:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4293b0:	mov	w1, #0x4                   	// #4
  4293b4:	mov	x0, x19
  4293b8:	mov	w3, w25
  4293bc:	add	x4, x4, #0xcd2
  4293c0:	bl	4229a0 <feof@plt+0x1fca0>
  4293c4:	b	4292b0 <feof@plt+0x265b0>
  4293c8:	add	x8, x8, #0x2
  4293cc:	ldrb	w9, [x8, #1]!
  4293d0:	ldrh	w10, [x23, x9, lsl #1]
  4293d4:	tbnz	w10, #11, 4293cc <feof@plt+0x266cc>
  4293d8:	cmp	w9, #0xa
  4293dc:	b.ne	4292b0 <feof@plt+0x265b0>  // b.any
  4293e0:	ldr	x9, [x24, #16]
  4293e4:	cmp	x8, x9
  4293e8:	b.cs	4292b0 <feof@plt+0x265b0>  // b.hs, b.nlast
  4293ec:	ldr	x8, [x19, #40]
  4293f0:	ldr	w2, [x8, #60]
  4293f4:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4293f8:	mov	w1, #0x4                   	// #4
  4293fc:	mov	x0, x19
  429400:	mov	w3, w25
  429404:	add	x4, x4, #0xcf0
  429408:	bl	4229a0 <feof@plt+0x1fca0>
  42940c:	b	4292b0 <feof@plt+0x265b0>
  429410:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429414:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429418:	add	x0, x0, #0xd20
  42941c:	add	x2, x2, #0xd33
  429420:	mov	w1, #0x48b                 	// #1163
  429424:	bl	408b70 <feof@plt+0x5e70>
  429428:	stp	x29, x30, [sp, #-64]!
  42942c:	stp	x22, x21, [sp, #32]
  429430:	stp	x20, x19, [sp, #48]
  429434:	ldr	x22, [x0]
  429438:	str	x23, [sp, #16]
  42943c:	adrp	x20, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429440:	mov	x19, x0
  429444:	ldr	x8, [x22]
  429448:	mov	w23, #0x18                  	// #24
  42944c:	add	x20, x20, #0xd4b
  429450:	mov	x29, sp
  429454:	ldrb	w9, [x8, #1]!
  429458:	cmp	w9, #0x2f
  42945c:	cinc	x21, x8, eq  // eq = none
  429460:	mov	x8, x21
  429464:	ldrb	w9, [x21], #1
  429468:	cmp	w9, #0xa
  42946c:	b.eq	4294cc <feof@plt+0x267cc>  // b.none
  429470:	cmp	w9, #0x2f
  429474:	b.ne	429460 <feof@plt+0x26760>  // b.any
  429478:	ldurb	w9, [x8, #-1]
  42947c:	cmp	w9, #0x2a
  429480:	b.eq	429544 <feof@plt+0x26844>  // b.none
  429484:	ldrb	w9, [x19, #1133]
  429488:	cbz	w9, 429460 <feof@plt+0x26760>
  42948c:	ldrb	w9, [x21]
  429490:	cmp	w9, #0x2a
  429494:	b.ne	429460 <feof@plt+0x26760>  // b.any
  429498:	ldrb	w8, [x8, #2]
  42949c:	cmp	w8, #0x2f
  4294a0:	b.eq	429460 <feof@plt+0x26760>  // b.none
  4294a4:	str	x21, [x22]
  4294a8:	ldr	x8, [x19, #40]
  4294ac:	ldr	w9, [x22, #8]
  4294b0:	mov	w1, #0x2                   	// #2
  4294b4:	mov	x0, x19
  4294b8:	ldr	w2, [x8, #60]
  4294bc:	sub	w3, w21, w9
  4294c0:	mov	x4, x20
  4294c4:	bl	4229a0 <feof@plt+0x1fca0>
  4294c8:	b	429460 <feof@plt+0x26760>
  4294cc:	mov	w1, #0x1                   	// #1
  4294d0:	mov	x0, x19
  4294d4:	str	x8, [x22]
  4294d8:	mov	w21, #0x1                   	// #1
  4294dc:	bl	4291e4 <feof@plt+0x264e4>
  4294e0:	ldr	x8, [x22, #16]
  4294e4:	ldr	x9, [x22, #32]
  4294e8:	cmp	x8, x9
  4294ec:	b.cs	429558 <feof@plt+0x26858>  // b.hs, b.nlast
  4294f0:	mov	x0, x19
  4294f4:	bl	428c88 <feof@plt+0x25f88>
  4294f8:	ldr	x0, [x19, #40]
  4294fc:	ldr	w10, [x22, #16]
  429500:	ldr	w11, [x22, #8]
  429504:	ldr	w8, [x0, #12]
  429508:	ldr	x9, [x0]
  42950c:	sub	w2, w10, w11
  429510:	sub	w8, w8, #0x1
  429514:	smaddl	x8, w8, w23, x9
  429518:	ldr	w9, [x0, #60]
  42951c:	ldr	w12, [x8]
  429520:	ldrb	w13, [x8, #6]
  429524:	ldr	w8, [x8, #16]
  429528:	sub	w9, w9, w12
  42952c:	lsr	w9, w9, w13
  429530:	add	w8, w8, w9
  429534:	add	w1, w8, #0x1
  429538:	bl	42ebc8 <feof@plt+0x2bec8>
  42953c:	ldr	x21, [x22]
  429540:	b	429460 <feof@plt+0x26760>
  429544:	mov	w1, #0x1                   	// #1
  429548:	mov	x0, x19
  42954c:	str	x21, [x22]
  429550:	bl	4291e4 <feof@plt+0x264e4>
  429554:	mov	w21, wzr
  429558:	mov	w0, w21
  42955c:	ldp	x20, x19, [sp, #48]
  429560:	ldp	x22, x21, [sp, #32]
  429564:	ldr	x23, [sp, #16]
  429568:	ldp	x29, x30, [sp], #64
  42956c:	ret
  429570:	stp	x29, x30, [sp, #-32]!
  429574:	stp	x20, x19, [sp, #16]
  429578:	mov	x8, x1
  42957c:	ldrb	w12, [x1]
  429580:	ldrb	w10, [x8, #1]!
  429584:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  429588:	add	x9, x9, #0x3c4
  42958c:	mov	w11, #0x204                 	// #516
  429590:	ldrh	w13, [x9, x10, lsl #1]
  429594:	mov	x19, x0
  429598:	sub	w12, w12, #0x71
  42959c:	mov	x29, sp
  4295a0:	tst	w13, w11
  4295a4:	b.eq	4295c8 <feof@plt+0x268c8>  // b.none
  4295a8:	mov	w13, #0x43                  	// #67
  4295ac:	mul	w12, w12, w13
  4295b0:	add	w12, w12, w10, uxtb
  4295b4:	ldrb	w10, [x8, #1]!
  4295b8:	sub	w12, w12, #0x71
  4295bc:	ldrh	w14, [x9, x10, lsl #1]
  4295c0:	tst	w14, w11
  4295c4:	b.ne	4295ac <feof@plt+0x268ac>  // b.any
  4295c8:	ldr	x0, [x19, #1088]
  4295cc:	sub	x8, x8, x1
  4295d0:	add	w3, w12, w8
  4295d4:	and	x2, x8, #0xffffffff
  4295d8:	mov	w4, #0x1                   	// #1
  4295dc:	bl	436a60 <feof@plt+0x33d60>
  4295e0:	ldrh	w8, [x0, #18]
  4295e4:	mov	x20, x0
  4295e8:	tbz	w8, #4, 4295f4 <feof@plt+0x268f4>
  4295ec:	ldrb	w9, [x19, #18]
  4295f0:	cbz	w9, 429604 <feof@plt+0x26904>
  4295f4:	mov	x0, x20
  4295f8:	ldp	x20, x19, [sp, #16]
  4295fc:	ldp	x29, x30, [sp], #32
  429600:	ret
  429604:	tbz	w8, #3, 429628 <feof@plt+0x26928>
  429608:	ldrb	w8, [x19, #23]
  42960c:	cbnz	w8, 429628 <feof@plt+0x26928>
  429610:	ldr	x3, [x20]
  429614:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429618:	add	x2, x2, #0xe61
  42961c:	mov	w1, #0x3                   	// #3
  429620:	mov	x0, x19
  429624:	bl	4223e4 <feof@plt+0x1f6e4>
  429628:	ldr	x8, [x19, #1272]
  42962c:	cmp	x8, x20
  429630:	b.ne	429664 <feof@plt+0x26964>  // b.any
  429634:	ldrb	w8, [x19, #22]
  429638:	cbnz	w8, 429664 <feof@plt+0x26964>
  42963c:	ldrb	w8, [x19, #1120]
  429640:	cbz	w8, 429650 <feof@plt+0x26950>
  429644:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429648:	add	x2, x2, #0xe7e
  42964c:	b	429658 <feof@plt+0x26958>
  429650:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429654:	add	x2, x2, #0xec5
  429658:	mov	w1, #0x2                   	// #2
  42965c:	mov	x0, x19
  429660:	bl	4223e4 <feof@plt+0x1f6e4>
  429664:	ldr	x8, [x19, #1280]
  429668:	cmp	x8, x20
  42966c:	b.ne	4296b8 <feof@plt+0x269b8>  // b.any
  429670:	ldrb	w8, [x19, #1154]
  429674:	cbz	w8, 429680 <feof@plt+0x26980>
  429678:	ldrb	w8, [x19, #1167]
  42967c:	cbz	w8, 429694 <feof@plt+0x26994>
  429680:	ldrb	w8, [x19, #22]
  429684:	cbnz	w8, 4296b8 <feof@plt+0x269b8>
  429688:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42968c:	add	x2, x2, #0xf64
  429690:	b	4296ac <feof@plt+0x269ac>
  429694:	ldr	x8, [x19]
  429698:	cbz	x8, 4296a4 <feof@plt+0x269a4>
  42969c:	ldrb	w8, [x8, #106]
  4296a0:	cbnz	w8, 4296b8 <feof@plt+0x269b8>
  4296a4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4296a8:	add	x2, x2, #0xf3c
  4296ac:	mov	w1, #0x2                   	// #2
  4296b0:	mov	x0, x19
  4296b4:	bl	4223e4 <feof@plt+0x1f6e4>
  4296b8:	ldrb	w8, [x20, #19]
  4296bc:	tbz	w8, #1, 4295f4 <feof@plt+0x268f4>
  4296c0:	ldr	x3, [x20]
  4296c4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4296c8:	add	x2, x2, #0xf0a
  4296cc:	mov	w1, #0xf                   	// #15
  4296d0:	mov	x0, x19
  4296d4:	bl	422514 <feof@plt+0x1f814>
  4296d8:	b	4295f4 <feof@plt+0x268f4>
  4296dc:	add	x0, x0, #0x568
  4296e0:	ret
  4296e4:	stp	x29, x30, [sp, #-48]!
  4296e8:	str	x21, [sp, #16]
  4296ec:	mov	w21, #0x18                  	// #24
  4296f0:	stp	x20, x19, [sp, #32]
  4296f4:	mov	x20, x0
  4296f8:	umull	x0, w1, w21
  4296fc:	mov	x29, sp
  429700:	mov	w19, w1
  429704:	bl	45535c <_obstack_memory_used@@Base+0x134>
  429708:	umaddl	x8, w19, w21, x0
  42970c:	stp	x0, x8, [x20, #16]
  429710:	str	xzr, [x20]
  429714:	ldp	x20, x19, [sp, #32]
  429718:	ldr	x21, [sp, #16]
  42971c:	ldp	x29, x30, [sp], #48
  429720:	ret
  429724:	stp	x29, x30, [sp, #-16]!
  429728:	ldr	w8, [x0, #48]
  42972c:	mov	x29, sp
  429730:	cbz	w8, 429764 <feof@plt+0x26a64>
  429734:	cmp	w8, #0x2
  429738:	b.eq	429764 <feof@plt+0x26a64>  // b.none
  42973c:	cmp	w8, #0x1
  429740:	b.ne	429778 <feof@plt+0x26a78>  // b.any
  429744:	ldp	x9, x8, [x0, #16]
  429748:	sub	x8, x8, x9
  42974c:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  429750:	asr	x8, x8, #3
  429754:	movk	x9, #0xaaab
  429758:	mul	x0, x8, x9
  42975c:	ldp	x29, x30, [sp], #16
  429760:	ret
  429764:	ldp	x9, x8, [x0, #16]
  429768:	sub	x8, x8, x9
  42976c:	lsr	x0, x8, #3
  429770:	ldp	x29, x30, [sp], #16
  429774:	ret
  429778:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42977c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429780:	add	x0, x0, #0xd20
  429784:	add	x2, x2, #0xd5f
  429788:	mov	w1, #0x99f                 	// #2463
  42978c:	bl	408b70 <feof@plt+0x5e70>
  429790:	stp	x29, x30, [sp, #-64]!
  429794:	stp	x22, x21, [sp, #32]
  429798:	stp	x20, x19, [sp, #48]
  42979c:	ldr	x11, [x0, #136]
  4297a0:	mov	x19, x0
  4297a4:	str	x23, [sp, #16]
  4297a8:	mov	x29, sp
  4297ac:	ldr	x12, [x11, #8]
  4297b0:	cbz	x12, 42981c <feof@plt+0x26b1c>
  4297b4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  4297b8:	movk	x8, #0xaaab
  4297bc:	ldr	w9, [x11, #48]
  4297c0:	mov	x10, x12
  4297c4:	cbz	w9, 4297f4 <feof@plt+0x26af4>
  4297c8:	cmp	w9, #0x2
  4297cc:	b.eq	4297f4 <feof@plt+0x26af4>  // b.none
  4297d0:	cmp	w9, #0x1
  4297d4:	b.ne	4298b8 <feof@plt+0x26bb8>  // b.any
  4297d8:	ldp	x11, x12, [x11, #16]
  4297dc:	sub	x12, x12, x11
  4297e0:	asr	x12, x12, #3
  4297e4:	mul	x12, x12, x8
  4297e8:	subs	w21, w1, w12
  4297ec:	b.ge	429808 <feof@plt+0x26b08>  // b.tcont
  4297f0:	b	42987c <feof@plt+0x26b7c>
  4297f4:	ldp	x11, x12, [x11, #16]
  4297f8:	sub	x12, x12, x11
  4297fc:	lsr	x12, x12, #3
  429800:	subs	w21, w1, w12
  429804:	b.lt	42987c <feof@plt+0x26b7c>  // b.tstop
  429808:	ldr	x12, [x10, #8]
  42980c:	mov	w1, w21
  429810:	mov	x11, x10
  429814:	cbnz	x12, 4297bc <feof@plt+0x26abc>
  429818:	b	429820 <feof@plt+0x26b20>
  42981c:	mov	w21, w1
  429820:	ldr	w8, [x19, #500]
  429824:	ldr	x22, [x19, #904]
  429828:	mov	w1, wzr
  42982c:	str	xzr, [x19, #904]
  429830:	add	w8, w8, #0x1
  429834:	str	w8, [x19, #500]
  429838:	mov	x0, x19
  42983c:	mov	w23, w1
  429840:	bl	4298e8 <feof@plt+0x26be8>
  429844:	mov	x20, x0
  429848:	cmp	w21, w23
  42984c:	add	w1, w23, #0x1
  429850:	b.eq	429860 <feof@plt+0x26b60>  // b.none
  429854:	ldrb	w8, [x20, #4]
  429858:	cmp	w8, #0x16
  42985c:	b.ne	429838 <feof@plt+0x26b38>  // b.any
  429860:	mov	x0, x19
  429864:	bl	432848 <feof@plt+0x2fb48>
  429868:	ldr	w8, [x19, #500]
  42986c:	str	x22, [x19, #904]
  429870:	sub	w8, w8, #0x1
  429874:	str	w8, [x19, #500]
  429878:	b	4298a0 <feof@plt+0x26ba0>
  42987c:	cbz	w9, 42989c <feof@plt+0x26b9c>
  429880:	cmp	w9, #0x2
  429884:	b.eq	42989c <feof@plt+0x26b9c>  // b.none
  429888:	cmp	w9, #0x1
  42988c:	b.ne	4298d0 <feof@plt+0x26bd0>  // b.any
  429890:	mov	w8, #0x18                  	// #24
  429894:	smaddl	x20, w1, w8, x11
  429898:	b	4298a0 <feof@plt+0x26ba0>
  42989c:	ldr	x20, [x11, w1, sxtw #3]
  4298a0:	mov	x0, x20
  4298a4:	ldp	x20, x19, [sp, #48]
  4298a8:	ldp	x22, x21, [sp, #32]
  4298ac:	ldr	x23, [sp, #16]
  4298b0:	ldp	x29, x30, [sp], #64
  4298b4:	ret
  4298b8:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4298bc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4298c0:	add	x0, x0, #0xd20
  4298c4:	add	x2, x2, #0xd5f
  4298c8:	mov	w1, #0x99f                 	// #2463
  4298cc:	bl	408b70 <feof@plt+0x5e70>
  4298d0:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4298d4:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  4298d8:	add	x0, x0, #0xd20
  4298dc:	add	x2, x2, #0xfaa
  4298e0:	mov	w1, #0x9ad                 	// #2477
  4298e4:	bl	408b70 <feof@plt+0x5e70>
  4298e8:	stp	x29, x30, [sp, #-64]!
  4298ec:	stp	x22, x21, [sp, #32]
  4298f0:	stp	x20, x19, [sp, #48]
  4298f4:	mov	x19, x0
  4298f8:	add	x21, x0, #0x98
  4298fc:	mov	w22, #0x1770                	// #6000
  429900:	str	x23, [sp, #16]
  429904:	mov	x29, sp
  429908:	ldr	x23, [x19, #488]
  42990c:	ldr	x20, [x19, #448]
  429910:	ldr	x8, [x23, #24]
  429914:	cmp	x20, x8
  429918:	b.eq	42992c <feof@plt+0x26c2c>  // b.none
  42991c:	ldr	x8, [x23, #16]
  429920:	cmp	x20, x8
  429924:	b.cs	429970 <feof@plt+0x26c70>  // b.hs, b.nlast
  429928:	b	429a60 <feof@plt+0x26d60>
  42992c:	ldr	x8, [x23]
  429930:	cbnz	x8, 429960 <feof@plt+0x26c60>
  429934:	mov	w0, #0x20                  	// #32
  429938:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42993c:	mov	x20, x0
  429940:	str	x0, [x23]
  429944:	str	x23, [x0, #8]
  429948:	mov	w0, #0x1770                	// #6000
  42994c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  429950:	add	x8, x0, x22
  429954:	stp	x0, x8, [x20, #16]
  429958:	str	xzr, [x20]
  42995c:	ldr	x8, [x23]
  429960:	str	x8, [x19, #488]
  429964:	ldr	x20, [x8, #16]
  429968:	mov	x23, x8
  42996c:	str	x20, [x19, #448]
  429970:	ldr	x8, [x23, #24]
  429974:	cmp	x20, x8
  429978:	b.cs	429a60 <feof@plt+0x26d60>  // b.hs, b.nlast
  42997c:	ldr	w8, [x19, #496]
  429980:	cbz	w8, 4299a0 <feof@plt+0x26ca0>
  429984:	sub	w8, w8, #0x1
  429988:	add	x9, x20, #0x18
  42998c:	str	w8, [x19, #496]
  429990:	str	x9, [x19, #448]
  429994:	ldrh	w8, [x20, #6]
  429998:	tbnz	w8, #6, 4299b4 <feof@plt+0x26cb4>
  42999c:	b	4299f8 <feof@plt+0x26cf8>
  4299a0:	mov	x0, x19
  4299a4:	bl	429bf8 <feof@plt+0x26ef8>
  4299a8:	mov	x20, x0
  4299ac:	ldrh	w8, [x20, #6]
  4299b0:	tbz	w8, #6, 4299f8 <feof@plt+0x26cf8>
  4299b4:	ldrb	w9, [x20, #4]
  4299b8:	cmp	w9, #0x25
  4299bc:	b.ne	4299cc <feof@plt+0x26ccc>  // b.any
  4299c0:	ldrb	w9, [x19, #25]
  4299c4:	cmp	w9, #0x1
  4299c8:	b.ne	429a24 <feof@plt+0x26d24>  // b.any
  4299cc:	ldrb	w8, [x19, #32]
  4299d0:	cmp	w8, #0x0
  4299d4:	csel	x20, x20, x21, eq  // eq = none
  4299d8:	ldr	x8, [x19, #904]
  4299dc:	cbz	x8, 4299f8 <feof@plt+0x26cf8>
  4299e0:	ldrb	w9, [x19, #18]
  4299e4:	cbnz	w9, 4299f8 <feof@plt+0x26cf8>
  4299e8:	ldrb	w2, [x19, #25]
  4299ec:	mov	x0, x19
  4299f0:	mov	x1, x20
  4299f4:	blr	x8
  4299f8:	ldrb	w8, [x19, #16]
  4299fc:	cbnz	w8, 429a48 <feof@plt+0x26d48>
  429a00:	ldrb	w8, [x19, #32]
  429a04:	cbnz	w8, 429a48 <feof@plt+0x26d48>
  429a08:	ldrb	w8, [x19, #18]
  429a0c:	strb	wzr, [x19, #440]
  429a10:	cbz	w8, 429a48 <feof@plt+0x26d48>
  429a14:	ldrb	w8, [x20, #4]
  429a18:	cmp	w8, #0x16
  429a1c:	b.ne	429908 <feof@plt+0x26c08>  // b.any
  429a20:	b	429a48 <feof@plt+0x26d48>
  429a24:	and	w1, w8, #0x1
  429a28:	mov	x0, x19
  429a2c:	bl	41e230 <feof@plt+0x1b530>
  429a30:	cbz	w0, 4299d8 <feof@plt+0x26cd8>
  429a34:	ldrb	w8, [x19, #156]
  429a38:	mov	x20, x21
  429a3c:	cmp	w8, #0x53
  429a40:	b.eq	429908 <feof@plt+0x26c08>  // b.none
  429a44:	b	4299d8 <feof@plt+0x26cd8>
  429a48:	mov	x0, x20
  429a4c:	ldp	x20, x19, [sp, #48]
  429a50:	ldp	x22, x21, [sp, #32]
  429a54:	ldr	x23, [sp, #16]
  429a58:	ldp	x29, x30, [sp], #64
  429a5c:	ret
  429a60:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429a64:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429a68:	add	x0, x0, #0xd20
  429a6c:	add	x2, x2, #0xd84
  429a70:	mov	w1, #0xa1d                 	// #2589
  429a74:	bl	408b70 <feof@plt+0x5e70>
  429a78:	stp	x29, x30, [sp, #-80]!
  429a7c:	stp	x26, x25, [sp, #16]
  429a80:	stp	x24, x23, [sp, #32]
  429a84:	stp	x22, x21, [sp, #48]
  429a88:	stp	x20, x19, [sp, #64]
  429a8c:	ldr	x25, [x0, #488]
  429a90:	ldr	x21, [x0, #448]
  429a94:	ldr	w22, [x0, #496]
  429a98:	mov	x19, x0
  429a9c:	ldr	x8, [x25, #24]
  429aa0:	mov	x29, sp
  429aa4:	sub	x23, x8, x21
  429aa8:	cbz	w22, 429b34 <feof@plt+0x26e34>
  429aac:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  429ab0:	asr	x8, x23, #3
  429ab4:	movk	x9, #0xaaab
  429ab8:	mul	x24, x8, x9
  429abc:	cmp	x24, x22
  429ac0:	b.gt	429b08 <feof@plt+0x26e08>
  429ac4:	ldr	x20, [x25]
  429ac8:	cbz	x20, 429bbc <feof@plt+0x26ebc>
  429acc:	cmp	x24, x22
  429ad0:	b.ge	429aec <feof@plt+0x26dec>  // b.tcont
  429ad4:	ldr	x1, [x20, #16]
  429ad8:	sub	x8, x22, x24
  429adc:	add	x8, x8, x8, lsl #1
  429ae0:	lsl	x2, x8, #3
  429ae4:	add	x0, x1, #0x18
  429ae8:	bl	402a70 <memmove@plt>
  429aec:	ldr	x8, [x19, #488]
  429af0:	ldr	x9, [x20, #16]
  429af4:	ldr	x8, [x8, #24]
  429af8:	ldur	x10, [x8, #-8]
  429afc:	ldur	q0, [x8, #-24]
  429b00:	str	x10, [x9, #16]
  429b04:	str	q0, [x9]
  429b08:	cmp	x23, #0x19
  429b0c:	b.lt	429b34 <feof@plt+0x26e34>  // b.tstop
  429b10:	ldr	x1, [x19, #448]
  429b14:	sub	x8, x24, #0x1
  429b18:	cmp	x8, x22
  429b1c:	csel	x8, x22, x8, gt
  429b20:	add	x8, x8, x8, lsl #1
  429b24:	add	x0, x1, #0x18
  429b28:	lsl	x2, x8, #3
  429b2c:	bl	402a70 <memmove@plt>
  429b30:	b	429b90 <feof@plt+0x26e90>
  429b34:	cbnz	x23, 429b90 <feof@plt+0x26e90>
  429b38:	ldr	x22, [x19, #488]
  429b3c:	ldr	x8, [x19, #448]
  429b40:	ldr	x9, [x22, #24]
  429b44:	cmp	x8, x9
  429b48:	b.ne	429b90 <feof@plt+0x26e90>  // b.any
  429b4c:	ldr	x8, [x22]
  429b50:	cbnz	x8, 429b84 <feof@plt+0x26e84>
  429b54:	mov	w0, #0x20                  	// #32
  429b58:	bl	45535c <_obstack_memory_used@@Base+0x134>
  429b5c:	mov	x20, x0
  429b60:	str	x0, [x22]
  429b64:	str	x22, [x0, #8]
  429b68:	mov	w0, #0x1770                	// #6000
  429b6c:	mov	w23, #0x1770                	// #6000
  429b70:	bl	45535c <_obstack_memory_used@@Base+0x134>
  429b74:	add	x8, x0, x23
  429b78:	stp	x0, x8, [x20, #16]
  429b7c:	str	xzr, [x20]
  429b80:	ldr	x8, [x22]
  429b84:	str	x8, [x19, #488]
  429b88:	ldr	x8, [x8, #16]
  429b8c:	str	x8, [x19, #448]
  429b90:	ldr	x0, [x19, #448]
  429b94:	add	x8, x0, #0x18
  429b98:	str	x8, [x19, #448]
  429b9c:	ldur	w8, [x21, #-24]
  429ba0:	str	w8, [x0]
  429ba4:	ldp	x20, x19, [sp, #64]
  429ba8:	ldp	x22, x21, [sp, #48]
  429bac:	ldp	x24, x23, [sp, #32]
  429bb0:	ldp	x26, x25, [sp, #16]
  429bb4:	ldp	x29, x30, [sp], #80
  429bb8:	ret
  429bbc:	mov	w0, #0x20                  	// #32
  429bc0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  429bc4:	mov	x20, x0
  429bc8:	str	x0, [x25]
  429bcc:	str	x25, [x0, #8]
  429bd0:	mov	w0, #0x1770                	// #6000
  429bd4:	mov	w26, #0x1770                	// #6000
  429bd8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  429bdc:	add	x8, x0, x26
  429be0:	stp	x0, x8, [x20, #16]
  429be4:	str	xzr, [x20]
  429be8:	ldr	x20, [x25]
  429bec:	cmp	x24, x22
  429bf0:	b.lt	429ad4 <feof@plt+0x26dd4>  // b.tstop
  429bf4:	b	429aec <feof@plt+0x26dec>
  429bf8:	sub	sp, sp, #0x70
  429bfc:	stp	x29, x30, [sp, #16]
  429c00:	stp	x28, x27, [sp, #32]
  429c04:	stp	x26, x25, [sp, #48]
  429c08:	stp	x24, x23, [sp, #64]
  429c0c:	stp	x22, x21, [sp, #80]
  429c10:	stp	x20, x19, [sp, #96]
  429c14:	ldr	x19, [x0, #448]
  429c18:	adrp	x25, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429c1c:	adrp	x27, 467000 <_obstack_memory_used@@Base+0x11dd8>
  429c20:	mov	x20, x0
  429c24:	mov	w22, wzr
  429c28:	add	x24, x0, #0x1c8
  429c2c:	add	x25, x25, #0x520
  429c30:	add	x8, x19, #0x18
  429c34:	add	x27, x27, #0x3c4
  429c38:	add	x29, sp, #0x10
  429c3c:	str	x8, [x0, #448]
  429c40:	strh	wzr, [x19, #6]
  429c44:	ldr	x23, [x20]
  429c48:	ldrb	w8, [x23, #104]
  429c4c:	cbz	w8, 429d28 <feof@plt+0x27028>
  429c50:	ldrb	w8, [x20, #32]
  429c54:	cbnz	w8, 42a948 <feof@plt+0x27c48>
  429c58:	ldrb	w8, [x20, #16]
  429c5c:	cbnz	w8, 42a8c0 <feof@plt+0x27bc0>
  429c60:	mov	x8, x23
  429c64:	ldr	x10, [x8, #16]
  429c68:	ldr	x9, [x8, #32]
  429c6c:	cmp	x10, x9
  429c70:	b.cc	429cd4 <feof@plt+0x26fd4>  // b.lo, b.ul, b.last
  429c74:	ldrb	w11, [x20, #25]
  429c78:	cbnz	w11, 42a8c0 <feof@plt+0x27bc0>
  429c7c:	ldrb	w26, [x8, #105]
  429c80:	cmp	x10, x9
  429c84:	b.ls	429c9c <feof@plt+0x26f9c>  // b.plast
  429c88:	ldr	x10, [x8, #24]
  429c8c:	cmp	x10, x9
  429c90:	b.eq	429c9c <feof@plt+0x26f9c>  // b.none
  429c94:	tbnz	w26, #1, 429c9c <feof@plt+0x26f9c>
  429c98:	str	x9, [x8, #16]
  429c9c:	mov	x0, x20
  429ca0:	bl	4206a4 <feof@plt+0x1d9a4>
  429ca4:	ldr	x8, [x20]
  429ca8:	cmp	x8, #0x0
  429cac:	cset	w9, ne  // ne = any
  429cb0:	tst	w26, #0x4
  429cb4:	cset	w10, eq  // eq = none
  429cb8:	and	w9, w10, w9
  429cbc:	and	w21, w21, w9
  429cc0:	tbnz	w26, #2, 429ce4 <feof@plt+0x26fe4>
  429cc4:	cbz	x8, 429ce4 <feof@plt+0x26fe4>
  429cc8:	ldrb	w9, [x8, #104]
  429ccc:	cbnz	w9, 429c64 <feof@plt+0x26f64>
  429cd0:	b	429ce8 <feof@plt+0x26fe8>
  429cd4:	mov	x0, x20
  429cd8:	bl	428c88 <feof@plt+0x25f88>
  429cdc:	ldr	x8, [x20]
  429ce0:	b	429ce8 <feof@plt+0x26fe8>
  429ce4:	tbz	w21, #0, 42a8c0 <feof@plt+0x27bc0>
  429ce8:	ldr	w9, [x20, #500]
  429cec:	cmp	x23, x8
  429cf0:	cset	w8, eq  // eq = none
  429cf4:	and	w22, w22, w8
  429cf8:	cbnz	w9, 429d0c <feof@plt+0x2700c>
  429cfc:	ldr	x19, [x20, #472]
  429d00:	str	x24, [x20, #488]
  429d04:	add	x8, x19, #0x18
  429d08:	str	x8, [x20, #448]
  429d0c:	mov	w9, #0x40                  	// #64
  429d10:	strh	w9, [x19, #6]
  429d14:	ldrb	w8, [x20, #25]
  429d18:	cmp	w8, #0x2
  429d1c:	cinc	w8, w9, eq  // eq = none
  429d20:	strh	w8, [x19, #6]
  429d24:	ldr	x23, [x20]
  429d28:	ldr	x8, [x20, #40]
  429d2c:	ldr	w8, [x8, #60]
  429d30:	str	w8, [x19]
  429d34:	b	429d40 <feof@plt+0x27040>
  429d38:	sub	x8, x8, #0x1
  429d3c:	str	x8, [x21]
  429d40:	ldr	w9, [x23, #56]
  429d44:	ldr	x10, [x23, #48]
  429d48:	ldr	x8, [x23]
  429d4c:	lsl	x9, x9, #4
  429d50:	ldr	x9, [x10, x9]
  429d54:	cmp	x8, x9
  429d58:	b.cc	429d80 <feof@plt+0x27080>  // b.lo, b.ul, b.last
  429d5c:	ldr	x9, [x20, #8]
  429d60:	cbnz	x9, 429d80 <feof@plt+0x27080>
  429d64:	mov	x0, x20
  429d68:	mov	w1, wzr
  429d6c:	bl	4291e4 <feof@plt+0x264e4>
  429d70:	ldr	x8, [x20, #40]
  429d74:	ldr	w8, [x8, #60]
  429d78:	str	w8, [x19]
  429d7c:	ldr	x8, [x23]
  429d80:	add	x9, x8, #0x1
  429d84:	str	x9, [x23]
  429d88:	ldr	w21, [x20, #1408]
  429d8c:	ldrb	w28, [x8]
  429d90:	cbnz	w21, 429da8 <feof@plt+0x270a8>
  429d94:	ldr	w8, [x23, #8]
  429d98:	ldr	x0, [x20, #40]
  429d9c:	sub	w1, w9, w8
  429da0:	bl	42edcc <feof@plt+0x2c0cc>
  429da4:	mov	w21, w0
  429da8:	cmp	w28, #0x7e
  429dac:	str	w21, [x19]
  429db0:	b.hi	42ad4c <feof@plt+0x2804c>  // b.pmore
  429db4:	adr	x8, 429dc4 <feof@plt+0x270c4>
  429db8:	ldrh	w9, [x25, x28, lsl #1]
  429dbc:	add	x8, x8, x9, lsl #2
  429dc0:	br	x8
  429dc4:	ldrh	w8, [x19, #6]
  429dc8:	mov	w26, wzr
  429dcc:	orr	w8, w8, #0x1
  429dd0:	strh	w8, [x19, #6]
  429dd4:	ldr	x21, [x20]
  429dd8:	b	429df8 <feof@plt+0x270f8>
  429ddc:	mov	w26, #0x1                   	// #1
  429de0:	ldr	x9, [x21]
  429de4:	add	x8, x9, #0x1
  429de8:	str	x8, [x21]
  429dec:	ldrb	w28, [x9]
  429df0:	ldrh	w9, [x27, x28, lsl #1]
  429df4:	tbz	w9, #11, 429e68 <feof@plt+0x27168>
  429df8:	and	w8, w28, #0xff
  429dfc:	cmp	w8, #0x20
  429e00:	b.eq	429de0 <feof@plt+0x270e0>  // b.none
  429e04:	cmp	w8, #0x9
  429e08:	b.eq	429de0 <feof@plt+0x270e0>  // b.none
  429e0c:	cbz	w8, 429ddc <feof@plt+0x270dc>
  429e10:	ldrb	w8, [x20, #16]
  429e14:	cbz	w8, 429de0 <feof@plt+0x270e0>
  429e18:	ldrb	w8, [x20, #1154]
  429e1c:	cbz	w8, 429de0 <feof@plt+0x270e0>
  429e20:	ldr	x8, [x20, #40]
  429e24:	ldr	w9, [x21]
  429e28:	ldr	w10, [x21, #8]
  429e2c:	and	w11, w28, #0xff
  429e30:	ldr	w2, [x8, #60]
  429e34:	adrp	x8, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429e38:	sub	w3, w9, w10
  429e3c:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429e40:	add	x8, x8, #0xfed
  429e44:	add	x9, x9, #0xfe3
  429e48:	cmp	w11, #0xc
  429e4c:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429e50:	csel	x5, x9, x8, eq  // eq = none
  429e54:	add	x4, x4, #0xfc5
  429e58:	mov	w1, #0x2                   	// #2
  429e5c:	mov	x0, x20
  429e60:	bl	4228a4 <feof@plt+0x1fba4>
  429e64:	b	429de0 <feof@plt+0x270e0>
  429e68:	tbz	w26, #0, 429d38 <feof@plt+0x27038>
  429e6c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429e70:	add	x2, x2, #0xffa
  429e74:	mov	x0, x20
  429e78:	mov	w1, wzr
  429e7c:	bl	4223e4 <feof@plt+0x1f6e4>
  429e80:	ldr	x8, [x21]
  429e84:	b	429d38 <feof@plt+0x27038>
  429e88:	ldr	x21, [x23]
  429e8c:	ldrb	w28, [x21]
  429e90:	cmp	w28, #0x2a
  429e94:	b.eq	429ef0 <feof@plt+0x271f0>  // b.none
  429e98:	cmp	w28, #0x2f
  429e9c:	b.ne	42b140 <feof@plt+0x28440>  // b.any
  429ea0:	ldrb	w8, [x20, #1160]
  429ea4:	cbnz	w8, 42b154 <feof@plt+0x28454>
  429ea8:	ldr	x8, [x20]
  429eac:	cbz	x8, 429eb8 <feof@plt+0x271b8>
  429eb0:	ldrb	w8, [x8, #106]
  429eb4:	cbnz	w8, 429f9c <feof@plt+0x2729c>
  429eb8:	ldr	w8, [x20, #1116]
  429ebc:	cbz	w8, 429f54 <feof@plt+0x27254>
  429ec0:	ldrsb	w9, [x20, #1198]
  429ec4:	cmp	w9, #0x1
  429ec8:	b.lt	429f14 <feof@plt+0x27214>  // b.tstop
  429ecc:	ldrb	w9, [x20, #1120]
  429ed0:	cbnz	w9, 429f14 <feof@plt+0x27214>
  429ed4:	ldrb	w9, [x23, #105]
  429ed8:	tbnz	w9, #0, 429f14 <feof@plt+0x27214>
  429edc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429ee0:	add	x2, x2, #0xe07
  429ee4:	mov	x0, x20
  429ee8:	mov	w1, wzr
  429eec:	b	429f74 <feof@plt+0x27274>
  429ef0:	mov	x0, x20
  429ef4:	bl	429428 <feof@plt+0x26728>
  429ef8:	tbz	w0, #0, 42a004 <feof@plt+0x27304>
  429efc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429f00:	add	x2, x2, #0xd93
  429f04:	mov	w1, #0x3                   	// #3
  429f08:	mov	x0, x20
  429f0c:	bl	4223e4 <feof@plt+0x1f6e4>
  429f10:	b	42a004 <feof@plt+0x27304>
  429f14:	sub	w8, w8, #0x5
  429f18:	cmp	w8, #0x1
  429f1c:	b.hi	429f9c <feof@plt+0x2729c>  // b.pmore
  429f20:	ldrb	w8, [x21, #1]
  429f24:	cmp	w8, #0x2a
  429f28:	b.eq	42b154 <feof@plt+0x28454>  // b.none
  429f2c:	ldrb	w8, [x20, #16]
  429f30:	cbnz	w8, 42b154 <feof@plt+0x28454>
  429f34:	ldrb	w8, [x20, #18]
  429f38:	cbnz	w8, 42b154 <feof@plt+0x28454>
  429f3c:	ldrb	w8, [x23, #105]
  429f40:	tbnz	w8, #0, 429f9c <feof@plt+0x2729c>
  429f44:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429f48:	add	x2, x2, #0xda8
  429f4c:	mov	w1, #0x3                   	// #3
  429f50:	b	429f70 <feof@plt+0x27270>
  429f54:	ldrb	w9, [x20, #1154]
  429f58:	cbz	w9, 429ec0 <feof@plt+0x271c0>
  429f5c:	ldrb	w9, [x23, #105]
  429f60:	tbnz	w9, #0, 429ec0 <feof@plt+0x271c0>
  429f64:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429f68:	add	x2, x2, #0xda8
  429f6c:	mov	w1, #0x2                   	// #2
  429f70:	mov	x0, x20
  429f74:	bl	4223e4 <feof@plt+0x1f6e4>
  429f78:	tbz	w0, #0, 429f90 <feof@plt+0x27290>
  429f7c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429f80:	add	x2, x2, #0xdd6
  429f84:	mov	w1, #0x5                   	// #5
  429f88:	mov	x0, x20
  429f8c:	bl	4223e4 <feof@plt+0x1f6e4>
  429f90:	ldrb	w8, [x23, #105]
  429f94:	orr	w8, w8, #0x1
  429f98:	strb	w8, [x23, #105]
  429f9c:	ldr	x8, [x20]
  429fa0:	ldr	x10, [x20, #40]
  429fa4:	ldr	x9, [x8]
  429fa8:	ldr	w26, [x10, #60]
  429fac:	ldrb	w11, [x9]
  429fb0:	cmp	w11, #0xa
  429fb4:	b.eq	429fcc <feof@plt+0x272cc>  // b.none
  429fb8:	add	x9, x9, #0x1
  429fbc:	str	x9, [x8]
  429fc0:	ldrb	w10, [x9], #1
  429fc4:	cmp	w10, #0xa
  429fc8:	b.ne	429fbc <feof@plt+0x272bc>  // b.any
  429fcc:	mov	w1, #0x1                   	// #1
  429fd0:	mov	x0, x20
  429fd4:	bl	4291e4 <feof@plt+0x264e4>
  429fd8:	ldr	x8, [x20, #40]
  429fdc:	ldr	w8, [x8, #60]
  429fe0:	cmp	w26, w8
  429fe4:	b.eq	42a004 <feof@plt+0x27304>  // b.none
  429fe8:	ldrb	w8, [x20, #1133]
  429fec:	cbz	w8, 42a004 <feof@plt+0x27304>
  429ff0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  429ff4:	add	x2, x2, #0xe34
  429ff8:	mov	w1, #0x2                   	// #2
  429ffc:	mov	x0, x20
  42a000:	bl	422514 <feof@plt+0x1f814>
  42a004:	ldrb	w10, [x20, #1144]
  42a008:	add	x9, x21, #0x1
  42a00c:	sub	w8, w10, #0x3
  42a010:	cmp	w8, #0x2
  42a014:	b.cc	42a16c <feof@plt+0x2746c>  // b.lo, b.ul, b.last
  42a018:	cmp	w10, #0x1
  42a01c:	b.eq	42a410 <feof@plt+0x27710>  // b.none
  42a020:	cmp	w10, #0x2
  42a024:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a028:	ldr	x8, [x20]
  42a02c:	ldr	x8, [x8]
  42a030:	sub	x10, x8, x9
  42a034:	cmp	x10, #0x8
  42a038:	b.cs	42a050 <feof@plt+0x27350>  // b.hs, b.nlast
  42a03c:	b	42a74c <feof@plt+0x27a4c>
  42a040:	add	x9, x9, #0x1
  42a044:	sub	x10, x8, x9
  42a048:	cmp	x10, #0x7
  42a04c:	b.ls	42a74c <feof@plt+0x27a4c>  // b.plast
  42a050:	ldrb	w10, [x9]
  42a054:	orr	w10, w10, #0x20
  42a058:	cmp	w10, #0x66
  42a05c:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a060:	ldrb	w10, [x9, #1]
  42a064:	orr	w10, w10, #0x20
  42a068:	cmp	w10, #0x61
  42a06c:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a070:	ldrb	w10, [x9, #2]
  42a074:	orr	w10, w10, #0x20
  42a078:	cmp	w10, #0x6c
  42a07c:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a080:	ldrb	w10, [x9, #3]
  42a084:	orr	w10, w10, #0x20
  42a088:	cmp	w10, #0x6c
  42a08c:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a090:	mov	x10, x9
  42a094:	ldrb	w11, [x10, #4]!
  42a098:	orr	w11, w11, #0x20
  42a09c:	cmp	w11, #0x73
  42a0a0:	b.ne	42a0ac <feof@plt+0x273ac>  // b.any
  42a0a4:	add	x9, x9, #0x5
  42a0a8:	b	42a0b0 <feof@plt+0x273b0>
  42a0ac:	mov	x9, x10
  42a0b0:	ldrb	w10, [x9]
  42a0b4:	cmp	w10, #0x2d
  42a0b8:	b.hi	42a0dc <feof@plt+0x273dc>  // b.pmore
  42a0bc:	mov	w11, #0x1                   	// #1
  42a0c0:	mov	x12, #0x200                 	// #512
  42a0c4:	lsl	x11, x11, x10
  42a0c8:	movk	x12, #0x2001, lsl #32
  42a0cc:	tst	x11, x12
  42a0d0:	b.eq	42a0dc <feof@plt+0x273dc>  // b.none
  42a0d4:	add	x9, x9, #0x1
  42a0d8:	b	42a0b0 <feof@plt+0x273b0>
  42a0dc:	cmp	w10, #0x54
  42a0e0:	b.eq	42a0ec <feof@plt+0x273ec>  // b.none
  42a0e4:	cmp	w10, #0x74
  42a0e8:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a0ec:	ldrb	w10, [x9, #1]
  42a0f0:	orr	w10, w10, #0x20
  42a0f4:	cmp	w10, #0x68
  42a0f8:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a0fc:	ldrb	w10, [x9, #2]
  42a100:	orr	w10, w10, #0x20
  42a104:	cmp	w10, #0x72
  42a108:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a10c:	ldrb	w10, [x9, #3]
  42a110:	sub	w10, w10, #0x4f
  42a114:	cmp	w10, #0x26
  42a118:	b.hi	42a040 <feof@plt+0x27340>  // b.pmore
  42a11c:	adrp	x11, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42a120:	add	x11, x11, #0x61e
  42a124:	adr	x12, 42a040 <feof@plt+0x27340>
  42a128:	ldrh	w13, [x11, x10, lsl #1]
  42a12c:	add	x12, x12, x13, lsl #2
  42a130:	mov	w26, #0x1                   	// #1
  42a134:	br	x12
  42a138:	ldrb	w10, [x9, #4]
  42a13c:	orr	w10, w10, #0x20
  42a140:	cmp	w10, #0x75
  42a144:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a148:	ldrb	w10, [x9, #5]
  42a14c:	orr	w10, w10, #0x20
  42a150:	cmp	w10, #0x67
  42a154:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a158:	ldrb	w10, [x9, #6]
  42a15c:	orr	w10, w10, #0x20
  42a160:	cmp	w10, #0x68
  42a164:	b.ne	42a040 <feof@plt+0x27340>  // b.any
  42a168:	b	42a410 <feof@plt+0x27710>
  42a16c:	ldrb	w8, [x9]
  42a170:	cmp	w8, #0x2d
  42a174:	b.eq	42a188 <feof@plt+0x27488>  // b.none
  42a178:	cmp	w8, #0x6c
  42a17c:	b.eq	42a1f4 <feof@plt+0x274f4>  // b.none
  42a180:	cmp	w8, #0x40
  42a184:	b.ne	42a268 <feof@plt+0x27568>  // b.any
  42a188:	ldr	x10, [x20]
  42a18c:	mvn	x11, x9
  42a190:	ldr	x10, [x10]
  42a194:	add	x10, x10, x11
  42a198:	cmp	x10, #0xb
  42a19c:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a1a0:	ldur	x10, [x21, #2]
  42a1a4:	ldur	x11, [x21, #5]
  42a1a8:	mov	x12, #0x6166                	// #24934
  42a1ac:	mov	x13, #0x746c                	// #29804
  42a1b0:	movk	x12, #0x6c6c, lsl #16
  42a1b4:	movk	x13, #0x7268, lsl #16
  42a1b8:	movk	x12, #0x6874, lsl #32
  42a1bc:	movk	x13, #0x756f, lsl #32
  42a1c0:	movk	x12, #0x6f72, lsl #48
  42a1c4:	movk	x13, #0x6867, lsl #48
  42a1c8:	eor	x10, x10, x12
  42a1cc:	eor	x11, x11, x13
  42a1d0:	orr	x10, x10, x11
  42a1d4:	cbnz	x10, 42a74c <feof@plt+0x27a4c>
  42a1d8:	cmp	w8, #0x40
  42a1dc:	b.ne	42a3d8 <feof@plt+0x276d8>  // b.any
  42a1e0:	ldrb	w8, [x21, #13]
  42a1e4:	cmp	w8, #0x40
  42a1e8:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a1ec:	mov	w8, #0xd                   	// #13
  42a1f0:	b	42a3dc <feof@plt+0x276dc>
  42a1f4:	ldr	x8, [x20]
  42a1f8:	mvn	x9, x9
  42a1fc:	ldr	x8, [x8]
  42a200:	add	x8, x8, x9
  42a204:	cmp	x8, #0x10
  42a208:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a20c:	ldur	x8, [x21, #2]
  42a210:	ldur	x9, [x21, #10]
  42a214:	mov	x10, #0x6e69                	// #28265
  42a218:	mov	x11, #0x746c                	// #29804
  42a21c:	movk	x10, #0x2074, lsl #16
  42a220:	movk	x11, #0x7268, lsl #16
  42a224:	movk	x10, #0x662d, lsl #32
  42a228:	movk	x11, #0x756f, lsl #32
  42a22c:	movk	x10, #0x6c61, lsl #48
  42a230:	movk	x11, #0x6867, lsl #48
  42a234:	eor	x8, x8, x10
  42a238:	eor	x9, x9, x11
  42a23c:	orr	x8, x8, x9
  42a240:	cbnz	x8, 42a74c <feof@plt+0x27a4c>
  42a244:	add	x8, x21, #0x12
  42a248:	b	42a250 <feof@plt+0x27550>
  42a24c:	add	x8, x8, #0x1
  42a250:	ldrb	w9, [x8]
  42a254:	cmp	w9, #0x20
  42a258:	b.eq	42a24c <feof@plt+0x2754c>  // b.none
  42a25c:	cmp	w9, #0x9
  42a260:	b.eq	42a24c <feof@plt+0x2754c>  // b.none
  42a264:	b	42a3e4 <feof@plt+0x276e4>
  42a268:	cmp	w10, #0x4
  42a26c:	b.ne	42a30c <feof@plt+0x2760c>  // b.any
  42a270:	add	x9, x21, #0x8
  42a274:	b	42a280 <feof@plt+0x27580>
  42a278:	ldurb	w8, [x9, #-6]
  42a27c:	add	x9, x9, #0x1
  42a280:	and	w8, w8, #0xff
  42a284:	cmp	w8, #0x20
  42a288:	b.eq	42a278 <feof@plt+0x27578>  // b.none
  42a28c:	cmp	w8, #0x9
  42a290:	b.eq	42a278 <feof@plt+0x27578>  // b.none
  42a294:	ldr	x8, [x20]
  42a298:	ldr	x8, [x8]
  42a29c:	sub	x8, x8, x9
  42a2a0:	add	x10, x8, #0x7
  42a2a4:	cmp	x10, #0x8
  42a2a8:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a2ac:	ldur	w10, [x9, #-7]
  42a2b0:	ldur	w11, [x9, #-4]
  42a2b4:	mov	w12, #0x4146                	// #16710
  42a2b8:	mov	w13, #0x544c                	// #21580
  42a2bc:	movk	w12, #0x4c4c, lsl #16
  42a2c0:	movk	w13, #0x5248, lsl #16
  42a2c4:	eor	w10, w10, w12
  42a2c8:	eor	w11, w11, w13
  42a2cc:	orr	w10, w10, w11
  42a2d0:	cbnz	w10, 42a74c <feof@plt+0x27a4c>
  42a2d4:	ldrb	w10, [x9]
  42a2d8:	cmp	w10, #0x55
  42a2dc:	b.ne	42a534 <feof@plt+0x27834>  // b.any
  42a2e0:	mov	w8, #0x8                   	// #8
  42a2e4:	add	x8, x9, x8
  42a2e8:	sub	x8, x8, #0x7
  42a2ec:	b	42a2f4 <feof@plt+0x275f4>
  42a2f0:	add	x8, x8, #0x1
  42a2f4:	ldrb	w9, [x8]
  42a2f8:	cmp	w9, #0x20
  42a2fc:	b.eq	42a2f0 <feof@plt+0x275f0>  // b.none
  42a300:	cmp	w9, #0x9
  42a304:	b.eq	42a2f0 <feof@plt+0x275f0>  // b.none
  42a308:	b	42a3e4 <feof@plt+0x276e4>
  42a30c:	mov	x10, xzr
  42a310:	and	w9, w8, #0xff
  42a314:	cmp	w9, #0x2e
  42a318:	b.hi	42a348 <feof@plt+0x27648>  // b.pmore
  42a31c:	and	x9, x8, #0xff
  42a320:	mov	w11, #0x1                   	// #1
  42a324:	lsl	x9, x11, x9
  42a328:	mov	x11, #0x200                 	// #512
  42a32c:	movk	x11, #0x4003, lsl #32
  42a330:	tst	x9, x11
  42a334:	b.eq	42a348 <feof@plt+0x27648>  // b.none
  42a338:	add	x8, x21, x10
  42a33c:	ldrb	w8, [x8, #2]
  42a340:	add	x10, x10, #0x1
  42a344:	b	42a310 <feof@plt+0x27610>
  42a348:	orr	w11, w8, #0x20
  42a34c:	add	x9, x21, x10
  42a350:	and	w11, w11, #0xff
  42a354:	cmp	w11, #0x65
  42a358:	add	x9, x9, #0x1
  42a35c:	b.ne	42a418 <feof@plt+0x27718>  // b.any
  42a360:	ldr	x11, [x20]
  42a364:	ldr	x11, [x11]
  42a368:	sub	x9, x11, x9
  42a36c:	cmp	x9, #0xd
  42a370:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a374:	and	w9, w8, #0xff
  42a378:	cmp	w9, #0x45
  42a37c:	b.ne	42a3a8 <feof@plt+0x276a8>  // b.any
  42a380:	add	x9, x21, x10
  42a384:	ldrh	w11, [x9, #2]
  42a388:	ldrb	w9, [x9, #4]
  42a38c:	mov	w12, #0x534c                	// #21324
  42a390:	mov	w13, #0x45                  	// #69
  42a394:	eor	w11, w11, w12
  42a398:	eor	w9, w9, w13
  42a39c:	orr	w9, w11, w9
  42a3a0:	tst	w9, #0xffff
  42a3a4:	b.eq	42a558 <feof@plt+0x27858>  // b.none
  42a3a8:	add	x9, x21, x10
  42a3ac:	ldrh	w11, [x9, #2]
  42a3b0:	ldrb	w9, [x9, #4]
  42a3b4:	mov	w12, #0x736c                	// #29548
  42a3b8:	mov	w13, #0x65                  	// #101
  42a3bc:	eor	w11, w11, w12
  42a3c0:	eor	w9, w9, w13
  42a3c4:	orr	w9, w11, w9
  42a3c8:	tst	w9, #0xffff
  42a3cc:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a3d0:	mov	w11, wzr
  42a3d4:	b	42a55c <feof@plt+0x2785c>
  42a3d8:	mov	w8, #0xc                   	// #12
  42a3dc:	add	x8, x9, x8
  42a3e0:	ldrb	w9, [x8]
  42a3e4:	ldrb	w10, [x21]
  42a3e8:	cmp	w10, #0x2a
  42a3ec:	b.ne	42a408 <feof@plt+0x27708>  // b.any
  42a3f0:	cmp	w9, #0x2a
  42a3f4:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a3f8:	ldrb	w8, [x8, #1]
  42a3fc:	cmp	w8, #0x2f
  42a400:	b.eq	42a410 <feof@plt+0x27710>  // b.none
  42a404:	b	42a74c <feof@plt+0x27a4c>
  42a408:	cmp	w9, #0xa
  42a40c:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a410:	mov	w26, #0x1                   	// #1
  42a414:	b	42a750 <feof@plt+0x27a50>
  42a418:	cmp	w11, #0x69
  42a41c:	b.ne	42a4a8 <feof@plt+0x277a8>  // b.any
  42a420:	ldr	x11, [x20]
  42a424:	ldr	x11, [x11]
  42a428:	sub	x9, x11, x9
  42a42c:	cmp	x9, #0x14
  42a430:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a434:	and	w9, w8, #0xff
  42a438:	cmp	w9, #0x49
  42a43c:	b.ne	42a470 <feof@plt+0x27770>  // b.any
  42a440:	add	x9, x21, x10
  42a444:	ldur	x11, [x9, #2]
  42a448:	ldrh	w9, [x9, #10]
  42a44c:	mov	x12, #0x544e                	// #21582
  42a450:	movk	x12, #0x4e45, lsl #16
  42a454:	movk	x12, #0x4954, lsl #32
  42a458:	movk	x12, #0x4e4f, lsl #48
  42a45c:	mov	w13, #0x4c41                	// #19521
  42a460:	eor	x11, x11, x12
  42a464:	eor	x9, x9, x13
  42a468:	orr	x9, x11, x9
  42a46c:	cbz	x9, 42a5ac <feof@plt+0x278ac>
  42a470:	add	x9, x21, x10
  42a474:	ldur	x11, [x9, #2]
  42a478:	ldrh	w9, [x9, #10]
  42a47c:	mov	x12, #0x746e                	// #29806
  42a480:	movk	x12, #0x6e65, lsl #16
  42a484:	movk	x12, #0x6974, lsl #32
  42a488:	movk	x12, #0x6e6f, lsl #48
  42a48c:	mov	w13, #0x6c61                	// #27745
  42a490:	eor	x11, x11, x12
  42a494:	eor	x9, x9, x13
  42a498:	orr	x9, x11, x9
  42a49c:	cbnz	x9, 42a74c <feof@plt+0x27a4c>
  42a4a0:	mov	w11, wzr
  42a4a4:	b	42a5b0 <feof@plt+0x278b0>
  42a4a8:	mov	w11, wzr
  42a4ac:	orr	w10, w8, #0x20
  42a4b0:	and	w10, w10, #0xff
  42a4b4:	cmp	w10, #0x66
  42a4b8:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a4bc:	ldr	x10, [x20]
  42a4c0:	ldr	x10, [x10]
  42a4c4:	sub	x12, x10, x9
  42a4c8:	cmp	x12, #0x8
  42a4cc:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a4d0:	and	w12, w8, #0xff
  42a4d4:	cmp	w12, #0x46
  42a4d8:	b.ne	42a500 <feof@plt+0x27800>  // b.any
  42a4dc:	ldurh	w12, [x9, #1]
  42a4e0:	ldrb	w13, [x9, #3]
  42a4e4:	mov	w14, #0x4c41                	// #19521
  42a4e8:	mov	w15, #0x4c                  	// #76
  42a4ec:	eor	w12, w12, w14
  42a4f0:	eor	w13, w13, w15
  42a4f4:	orr	w12, w12, w13
  42a4f8:	tst	w12, #0xffff
  42a4fc:	b.eq	42a640 <feof@plt+0x27940>  // b.none
  42a500:	tbnz	w11, #0, 42a74c <feof@plt+0x27a4c>
  42a504:	ldurh	w11, [x9, #1]
  42a508:	ldrb	w12, [x9, #3]
  42a50c:	mov	w13, #0x6c61                	// #27745
  42a510:	mov	w14, #0x6c                  	// #108
  42a514:	eor	w11, w11, w13
  42a518:	eor	w12, w12, w14
  42a51c:	orr	w11, w11, w12
  42a520:	tst	w11, #0xffff
  42a524:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a528:	mov	w12, wzr
  42a52c:	mov	w14, #0x73                  	// #115
  42a530:	b	42a648 <feof@plt+0x27948>
  42a534:	cmp	x8, #0x4
  42a538:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a53c:	ldr	w8, [x9]
  42a540:	mov	w10, #0x554f                	// #21839
  42a544:	movk	w10, #0x4847, lsl #16
  42a548:	cmp	w8, w10
  42a54c:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a550:	mov	w8, #0xb                   	// #11
  42a554:	b	42a2e4 <feof@plt+0x275e4>
  42a558:	mov	w11, #0x1                   	// #1
  42a55c:	add	x9, x21, x10
  42a560:	ldrb	w10, [x9, #5]!
  42a564:	cmp	w10, #0x2c
  42a568:	cinc	x9, x9, eq  // eq = none
  42a56c:	ldrb	w10, [x9]
  42a570:	cmp	w10, #0x20
  42a574:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a578:	ldrb	w10, [x9, #1]!
  42a57c:	cbz	w11, 42a588 <feof@plt+0x27888>
  42a580:	cmp	w10, #0x66
  42a584:	b.eq	42a74c <feof@plt+0x27a4c>  // b.none
  42a588:	and	w8, w8, #0xff
  42a58c:	cmp	w8, #0x65
  42a590:	b.ne	42a59c <feof@plt+0x2789c>  // b.any
  42a594:	cmp	w10, #0x46
  42a598:	b.eq	42a74c <feof@plt+0x27a4c>  // b.none
  42a59c:	cmp	w11, #0x0
  42a5a0:	cset	w11, ne  // ne = any
  42a5a4:	mov	w8, w10
  42a5a8:	b	42a4ac <feof@plt+0x277ac>
  42a5ac:	mov	w11, #0x1                   	// #1
  42a5b0:	add	x12, x21, x10
  42a5b4:	ldrb	w9, [x12, #12]
  42a5b8:	cmp	w9, #0x20
  42a5bc:	b.ne	42a5d8 <feof@plt+0x278d8>  // b.any
  42a5c0:	add	x9, x12, #0xd
  42a5c4:	cbz	w11, 42a61c <feof@plt+0x2791c>
  42a5c8:	ldrb	w10, [x12, #13]
  42a5cc:	cmp	w10, #0x66
  42a5d0:	b.ne	42a61c <feof@plt+0x2791c>  // b.any
  42a5d4:	b	42a74c <feof@plt+0x27a4c>
  42a5d8:	cbz	w11, 42a5f4 <feof@plt+0x278f4>
  42a5dc:	ldr	w9, [x12, #12]
  42a5e0:	mov	w12, #0x594c                	// #22860
  42a5e4:	movk	w12, #0x4620, lsl #16
  42a5e8:	cmp	w9, w12
  42a5ec:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a5f0:	b	42a614 <feof@plt+0x27914>
  42a5f4:	ldrh	w9, [x12, #12]
  42a5f8:	ldrb	w12, [x12, #14]
  42a5fc:	mov	w13, #0x796c                	// #31084
  42a600:	eor	w9, w9, w13
  42a604:	eor	w12, w12, #0x20
  42a608:	orr	w9, w9, w12
  42a60c:	tst	w9, #0xffff
  42a610:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a614:	add	x9, x21, x10
  42a618:	add	x9, x9, #0xf
  42a61c:	and	w10, w8, #0xff
  42a620:	ldrb	w8, [x9]
  42a624:	cmp	w10, #0x69
  42a628:	b.ne	42a634 <feof@plt+0x27934>  // b.any
  42a62c:	cmp	w8, #0x46
  42a630:	b.eq	42a74c <feof@plt+0x27a4c>  // b.none
  42a634:	cmp	w11, #0x0
  42a638:	cset	w11, ne  // ne = any
  42a63c:	b	42a4ac <feof@plt+0x277ac>
  42a640:	mov	w14, #0x53                  	// #83
  42a644:	mov	w12, #0x1                   	// #1
  42a648:	mov	x11, x9
  42a64c:	ldrb	w13, [x11, #4]!
  42a650:	cmp	w14, w13
  42a654:	b.ne	42a66c <feof@plt+0x2796c>  // b.any
  42a658:	ldrb	w14, [x9, #5]
  42a65c:	cmp	w14, #0x20
  42a660:	b.ne	42a66c <feof@plt+0x2796c>  // b.any
  42a664:	add	x11, x9, #0x6
  42a668:	b	42a69c <feof@plt+0x2799c>
  42a66c:	cmp	w13, #0x2d
  42a670:	b.eq	42a67c <feof@plt+0x2797c>  // b.none
  42a674:	cmp	w13, #0x20
  42a678:	b.ne	42a684 <feof@plt+0x27984>  // b.any
  42a67c:	add	x11, x9, #0x5
  42a680:	b	42a69c <feof@plt+0x2799c>
  42a684:	cmp	w12, #0x0
  42a688:	mov	w9, #0x74                  	// #116
  42a68c:	mov	w14, #0x54                  	// #84
  42a690:	csel	w9, w14, w9, ne  // ne = any
  42a694:	cmp	w9, w13
  42a698:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a69c:	and	w8, w8, #0xff
  42a6a0:	cmp	w8, #0x66
  42a6a4:	b.eq	42a6b4 <feof@plt+0x279b4>  // b.none
  42a6a8:	ldrb	w8, [x11]
  42a6ac:	cmp	w8, #0x54
  42a6b0:	b.eq	42a6c4 <feof@plt+0x279c4>  // b.none
  42a6b4:	tbnz	w12, #0, 42a74c <feof@plt+0x27a4c>
  42a6b8:	ldrb	w8, [x11]
  42a6bc:	cmp	w8, #0x74
  42a6c0:	b.ne	42a74c <feof@plt+0x27a4c>  // b.any
  42a6c4:	sub	x8, x10, x11
  42a6c8:	cmp	x8, #0x4
  42a6cc:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a6d0:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  42a6d4:	adrp	x10, 463000 <_obstack_memory_used@@Base+0xddd8>
  42a6d8:	add	x9, x9, #0x208
  42a6dc:	add	x10, x10, #0x204
  42a6e0:	cmp	w12, #0x0
  42a6e4:	csel	x9, x10, x9, ne  // ne = any
  42a6e8:	ldurh	w13, [x11, #1]
  42a6ec:	ldrb	w14, [x11, #3]
  42a6f0:	ldrh	w10, [x9]
  42a6f4:	ldrb	w9, [x9, #2]
  42a6f8:	eor	w10, w13, w10
  42a6fc:	eor	w9, w14, w9
  42a700:	orr	w9, w10, w9
  42a704:	tst	w9, #0xffff
  42a708:	b.eq	42a794 <feof@plt+0x27a94>  // b.none
  42a70c:	cmp	x8, #0x7
  42a710:	b.cc	42a74c <feof@plt+0x27a4c>  // b.lo, b.ul, b.last
  42a714:	adrp	x8, 463000 <_obstack_memory_used@@Base+0xddd8>
  42a718:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  42a71c:	add	x8, x8, #0x1ca
  42a720:	add	x9, x9, #0x20c
  42a724:	cmp	w12, #0x0
  42a728:	csel	x8, x9, x8, ne  // ne = any
  42a72c:	ldur	w10, [x11, #1]
  42a730:	ldurh	w12, [x11, #5]
  42a734:	ldr	w9, [x8]
  42a738:	ldrh	w8, [x8, #4]
  42a73c:	eor	w9, w10, w9
  42a740:	eor	w8, w12, w8
  42a744:	orr	w8, w9, w8
  42a748:	cbz	w8, 42a79c <feof@plt+0x27a9c>
  42a74c:	mov	w26, w22
  42a750:	ldr	x8, [x20, #1072]
  42a754:	cbz	x8, 42a778 <feof@plt+0x27a78>
  42a758:	ldr	x9, [x20]
  42a75c:	ldr	w1, [x19]
  42a760:	sub	x2, x21, #0x1
  42a764:	mov	x0, x20
  42a768:	ldr	x9, [x9]
  42a76c:	sub	x9, x9, x21
  42a770:	add	x3, x9, #0x1
  42a774:	blr	x8
  42a778:	ldrb	w8, [x20, #21]
  42a77c:	cbnz	w8, 42b160 <feof@plt+0x28460>
  42a780:	ldrh	w8, [x19, #6]
  42a784:	mov	w22, w26
  42a788:	orr	w8, w8, #0x1
  42a78c:	strh	w8, [x19, #6]
  42a790:	b	429d28 <feof@plt+0x27028>
  42a794:	mov	w8, #0x4                   	// #4
  42a798:	b	42a7a0 <feof@plt+0x27aa0>
  42a79c:	mov	w8, #0x7                   	// #7
  42a7a0:	add	x8, x11, x8
  42a7a4:	ldrb	w9, [x8]
  42a7a8:	cmp	w9, #0x2e
  42a7ac:	b.hi	42a3e4 <feof@plt+0x276e4>  // b.pmore
  42a7b0:	mov	w10, #0x1                   	// #1
  42a7b4:	mov	x11, #0x200                 	// #512
  42a7b8:	lsl	x10, x10, x9
  42a7bc:	movk	x11, #0x4003, lsl #32
  42a7c0:	tst	x10, x11
  42a7c4:	b.eq	42a7d0 <feof@plt+0x27ad0>  // b.none
  42a7c8:	add	x8, x8, #0x1
  42a7cc:	b	42a7a4 <feof@plt+0x27aa4>
  42a7d0:	cmp	x9, #0x2d
  42a7d4:	b.ne	42a3e4 <feof@plt+0x276e4>  // b.any
  42a7d8:	ldrb	w9, [x21]
  42a7dc:	add	x10, x8, #0x1
  42a7e0:	cmp	w9, #0x2a
  42a7e4:	b.eq	42a81c <feof@plt+0x27b1c>  // b.none
  42a7e8:	mov	x8, x10
  42a7ec:	b	42a7f4 <feof@plt+0x27af4>
  42a7f0:	add	x8, x8, #0x1
  42a7f4:	ldrb	w9, [x8]
  42a7f8:	cmp	w9, #0xd
  42a7fc:	b.hi	42a7f0 <feof@plt+0x27af0>  // b.pmore
  42a800:	mov	w10, #0x1                   	// #1
  42a804:	lsl	w10, w10, w9
  42a808:	mov	w11, #0x2401                	// #9217
  42a80c:	tst	w10, w11
  42a810:	b.eq	42a7f0 <feof@plt+0x27af0>  // b.none
  42a814:	b	42a3e4 <feof@plt+0x276e4>
  42a818:	add	x10, x8, #0x1
  42a81c:	ldrb	w9, [x10]
  42a820:	mov	x8, x10
  42a824:	cmp	w9, #0x29
  42a828:	b.le	42a84c <feof@plt+0x27b4c>
  42a82c:	cmp	w9, #0x2a
  42a830:	b.ne	42a818 <feof@plt+0x27b18>  // b.any
  42a834:	mov	x10, x8
  42a838:	ldrb	w9, [x10, #1]!
  42a83c:	cmp	w9, #0x2f
  42a840:	mov	w9, #0x2a                  	// #42
  42a844:	b.ne	42a81c <feof@plt+0x27b1c>  // b.any
  42a848:	b	42a3e4 <feof@plt+0x276e4>
  42a84c:	cbz	w9, 42a3e4 <feof@plt+0x276e4>
  42a850:	cmp	w9, #0xa
  42a854:	b.eq	42a3e4 <feof@plt+0x276e4>  // b.none
  42a858:	cmp	w9, #0xd
  42a85c:	b.ne	42a818 <feof@plt+0x27b18>  // b.any
  42a860:	b	42a3e4 <feof@plt+0x276e4>
  42a864:	ldr	x8, [x23]
  42a868:	ldr	x9, [x23, #32]
  42a86c:	cmp	x8, x9
  42a870:	b.cs	42a8b4 <feof@plt+0x27bb4>  // b.hs, b.nlast
  42a874:	ldr	x0, [x20, #40]
  42a878:	mov	w10, #0x18                  	// #24
  42a87c:	mov	w2, wzr
  42a880:	ldr	w8, [x0, #12]
  42a884:	ldr	x9, [x0]
  42a888:	sub	w8, w8, #0x1
  42a88c:	smaddl	x8, w8, w10, x9
  42a890:	ldr	w9, [x0, #60]
  42a894:	ldr	w10, [x8]
  42a898:	ldrb	w11, [x8, #6]
  42a89c:	ldr	w8, [x8, #16]
  42a8a0:	sub	w9, w9, w10
  42a8a4:	lsr	w9, w9, w11
  42a8a8:	add	w8, w8, w9
  42a8ac:	add	w1, w8, #0x1
  42a8b0:	bl	42ebc8 <feof@plt+0x2bec8>
  42a8b4:	mov	w8, #0x1                   	// #1
  42a8b8:	strb	w8, [x23, #104]
  42a8bc:	b	429c40 <feof@plt+0x26f40>
  42a8c0:	mov	w8, #0x16                  	// #22
  42a8c4:	strb	w8, [x19, #4]
  42a8c8:	ldrb	w8, [x20, #16]
  42a8cc:	cbnz	w8, 42b0e8 <feof@plt+0x283e8>
  42a8d0:	ldr	x8, [x20, #40]
  42a8d4:	mov	w9, #0x40                  	// #64
  42a8d8:	ldr	w8, [x8, #60]
  42a8dc:	strh	w9, [x19, #6]
  42a8e0:	str	w8, [x19]
  42a8e4:	b	42b0e8 <feof@plt+0x283e8>
  42a8e8:	cmp	w28, #0x4c
  42a8ec:	b.eq	42a8f8 <feof@plt+0x27bf8>  // b.none
  42a8f0:	ldrb	w8, [x20, #1130]
  42a8f4:	cbz	w8, 42adf4 <feof@plt+0x280f4>
  42a8f8:	ldr	x8, [x23]
  42a8fc:	ldrb	w9, [x8]
  42a900:	cmp	w9, #0x27
  42a904:	cset	w10, eq  // eq = none
  42a908:	cmp	w28, #0x52
  42a90c:	cset	w11, ne  // ne = any
  42a910:	cmp	w9, #0x22
  42a914:	b.eq	42a970 <feof@plt+0x27c70>  // b.none
  42a918:	and	w10, w11, w10
  42a91c:	tbnz	w10, #0, 42a970 <feof@plt+0x27c70>
  42a920:	cmp	w28, #0x52
  42a924:	b.eq	42adbc <feof@plt+0x280bc>  // b.none
  42a928:	cmp	w9, #0x52
  42a92c:	b.ne	42adbc <feof@plt+0x280bc>  // b.any
  42a930:	ldrb	w9, [x8, #1]
  42a934:	cmp	w9, #0x22
  42a938:	b.ne	42aff4 <feof@plt+0x282f4>  // b.any
  42a93c:	ldrb	w9, [x20, #1130]
  42a940:	cbnz	w9, 42a970 <feof@plt+0x27c70>
  42a944:	b	42aff4 <feof@plt+0x282f4>
  42a948:	mov	w8, #0x52                  	// #82
  42a94c:	strb	w8, [x19, #4]
  42a950:	ldrb	w8, [x20, #33]
  42a954:	strb	wzr, [x20, #32]
  42a958:	cbnz	w8, 42b0e8 <feof@plt+0x283e8>
  42a95c:	ldrb	w8, [x20, #24]
  42a960:	sub	w8, w8, #0x1
  42a964:	strb	w8, [x20, #24]
  42a968:	b	42b0e8 <feof@plt+0x283e8>
  42a96c:	ldr	x8, [x23]
  42a970:	sub	x2, x8, #0x1
  42a974:	mov	x0, x20
  42a978:	mov	x1, x19
  42a97c:	bl	42b628 <feof@plt+0x28928>
  42a980:	b	42b068 <feof@plt+0x28368>
  42a984:	ldr	x8, [x23]
  42a988:	mov	x2, sp
  42a98c:	mov	w1, #0x1                   	// #1
  42a990:	mov	x0, x20
  42a994:	sub	x21, x8, #0x1
  42a998:	str	x21, [x23]
  42a99c:	str	wzr, [sp, #8]
  42a9a0:	str	xzr, [sp]
  42a9a4:	bl	42cc84 <feof@plt+0x29f84>
  42a9a8:	tbz	w0, #0, 42ad40 <feof@plt+0x28040>
  42a9ac:	mov	w8, #0x35                  	// #53
  42a9b0:	add	x4, x19, #0x10
  42a9b4:	mov	x3, sp
  42a9b8:	mov	w2, #0x1                   	// #1
  42a9bc:	mov	x0, x20
  42a9c0:	mov	x1, x21
  42a9c4:	strb	w8, [x19, #4]
  42a9c8:	bl	42ca2c <feof@plt+0x29d2c>
  42a9cc:	str	x0, [x19, #8]
  42a9d0:	b	42ac20 <feof@plt+0x27f20>
  42a9d4:	mov	w8, #0x1                   	// #1
  42a9d8:	strb	w8, [x19, #4]
  42a9dc:	ldr	x8, [x23]
  42a9e0:	ldrb	w9, [x8]
  42a9e4:	cmp	w9, #0x3d
  42a9e8:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42a9ec:	add	x8, x8, #0x1
  42a9f0:	mov	w9, #0x18                  	// #24
  42a9f4:	b	42afdc <feof@plt+0x282dc>
  42a9f8:	mov	w8, #0x8                   	// #8
  42a9fc:	strb	w8, [x19, #4]
  42aa00:	ldr	x8, [x23]
  42aa04:	ldrb	w9, [x8]
  42aa08:	cmp	w9, #0x3d
  42aa0c:	b.ne	42ae08 <feof@plt+0x28108>  // b.any
  42aa10:	add	x8, x8, #0x1
  42aa14:	mov	w9, #0x1f                  	// #31
  42aa18:	b	42afdc <feof@plt+0x282dc>
  42aa1c:	mov	w8, #0x14                  	// #20
  42aa20:	strb	w8, [x19, #4]
  42aa24:	b	42b06c <feof@plt+0x2836c>
  42aa28:	mov	w8, #0x4                   	// #4
  42aa2c:	strb	w8, [x19, #4]
  42aa30:	ldr	x8, [x23]
  42aa34:	ldrb	w9, [x8]
  42aa38:	cmp	w9, #0x3d
  42aa3c:	b.eq	42aebc <feof@plt+0x281bc>  // b.none
  42aa40:	cmp	w9, #0x2b
  42aa44:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42aa48:	add	x8, x8, #0x1
  42aa4c:	mov	w9, #0x2d                  	// #45
  42aa50:	b	42afdc <feof@plt+0x282dc>
  42aa54:	ldrb	w8, [x20, #19]
  42aa58:	cbz	w8, 42aa7c <feof@plt+0x27d7c>
  42aa5c:	ldr	x8, [x23]
  42aa60:	mov	x0, x20
  42aa64:	mov	x1, x19
  42aa68:	sub	x2, x8, #0x1
  42aa6c:	bl	42b628 <feof@plt+0x28928>
  42aa70:	ldrb	w8, [x19, #4]
  42aa74:	cmp	w8, #0x3
  42aa78:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42aa7c:	mov	w8, #0x3                   	// #3
  42aa80:	strb	w8, [x19, #4]
  42aa84:	ldr	x8, [x23]
  42aa88:	ldrb	w9, [x8]
  42aa8c:	cmp	w9, #0x3c
  42aa90:	b.eq	42af40 <feof@plt+0x28240>  // b.none
  42aa94:	cmp	w9, #0x3d
  42aa98:	b.ne	42af6c <feof@plt+0x2826c>  // b.any
  42aa9c:	add	x8, x8, #0x1
  42aaa0:	mov	w9, #0x1a                  	// #26
  42aaa4:	b	42afdc <feof@plt+0x282dc>
  42aaa8:	mov	w8, #0x11                  	// #17
  42aaac:	strb	w8, [x19, #4]
  42aab0:	b	42b06c <feof@plt+0x2836c>
  42aab4:	mov	w8, #0x34                  	// #52
  42aab8:	strb	w8, [x19, #4]
  42aabc:	b	42b06c <feof@plt+0x2836c>
  42aac0:	mov	w8, #0x2a                  	// #42
  42aac4:	strb	w8, [x19, #4]
  42aac8:	b	42b06c <feof@plt+0x2836c>
  42aacc:	mov	w8, #0x25                  	// #37
  42aad0:	strb	w8, [x19, #4]
  42aad4:	ldr	x8, [x23]
  42aad8:	ldrb	w9, [x8]
  42aadc:	cmp	w9, #0x23
  42aae0:	b.ne	42aaf4 <feof@plt+0x27df4>  // b.any
  42aae4:	add	x8, x8, #0x1
  42aae8:	mov	w9, #0x26                  	// #38
  42aaec:	str	x8, [x23]
  42aaf0:	strb	w9, [x19, #4]
  42aaf4:	str	wzr, [x19, #8]
  42aaf8:	b	42b068 <feof@plt+0x28368>
  42aafc:	mov	w8, #0x9                   	// #9
  42ab00:	strb	w8, [x19, #4]
  42ab04:	ldr	x8, [x23]
  42ab08:	ldrb	w9, [x8]
  42ab0c:	cmp	w9, #0x3d
  42ab10:	b.eq	42aec8 <feof@plt+0x281c8>  // b.none
  42ab14:	cmp	w9, #0x26
  42ab18:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ab1c:	add	x8, x8, #0x1
  42ab20:	mov	w9, #0xf                   	// #15
  42ab24:	b	42afdc <feof@plt+0x282dc>
  42ab28:	mov	w8, #0x15                  	// #21
  42ab2c:	strb	w8, [x19, #4]
  42ab30:	b	42b06c <feof@plt+0x2836c>
  42ab34:	mov	w8, #0x6                   	// #6
  42ab38:	strb	w8, [x19, #4]
  42ab3c:	ldr	x8, [x23]
  42ab40:	ldrb	w9, [x8]
  42ab44:	cmp	w9, #0x3d
  42ab48:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ab4c:	add	x8, x8, #0x1
  42ab50:	mov	w9, #0x1d                  	// #29
  42ab54:	b	42afdc <feof@plt+0x282dc>
  42ab58:	mov	w8, #0x13                  	// #19
  42ab5c:	strb	w8, [x19, #4]
  42ab60:	b	42b06c <feof@plt+0x2836c>
  42ab64:	mov	w8, #0x5                   	// #5
  42ab68:	strb	w8, [x19, #4]
  42ab6c:	ldr	x8, [x23]
  42ab70:	ldrb	w9, [x8]
  42ab74:	cmp	w9, #0x2d
  42ab78:	b.eq	42af28 <feof@plt+0x28228>  // b.none
  42ab7c:	cmp	w9, #0x3d
  42ab80:	b.eq	42af34 <feof@plt+0x28234>  // b.none
  42ab84:	cmp	w9, #0x3e
  42ab88:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ab8c:	add	x8, x8, #0x1
  42ab90:	mov	w9, #0x2f                  	// #47
  42ab94:	str	x8, [x23]
  42ab98:	strb	w9, [x19, #4]
  42ab9c:	ldr	x8, [x23]
  42aba0:	ldrb	w9, [x8]
  42aba4:	cmp	w9, #0x2a
  42aba8:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42abac:	ldrb	w9, [x20, #1120]
  42abb0:	cbz	w9, 42b068 <feof@plt+0x28368>
  42abb4:	add	x8, x8, #0x1
  42abb8:	mov	w9, #0x32                  	// #50
  42abbc:	b	42afdc <feof@plt+0x282dc>
  42abc0:	mov	w8, #0x30                  	// #48
  42abc4:	strb	w8, [x19, #4]
  42abc8:	ldr	x8, [x23]
  42abcc:	ldrb	w9, [x8]
  42abd0:	ldrh	w10, [x27, x9, lsl #1]
  42abd4:	tbnz	w10, #2, 42ac00 <feof@plt+0x27f00>
  42abd8:	cmp	w9, #0x2a
  42abdc:	b.eq	42afcc <feof@plt+0x282cc>  // b.none
  42abe0:	cmp	w9, #0x2e
  42abe4:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42abe8:	ldrb	w9, [x8, #1]
  42abec:	cmp	w9, #0x2e
  42abf0:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42abf4:	add	x8, x8, #0x2
  42abf8:	mov	w9, #0x2c                  	// #44
  42abfc:	b	42afdc <feof@plt+0x282dc>
  42ac00:	mov	w8, #0x37                  	// #55
  42ac04:	add	x1, x19, #0x8
  42ac08:	mov	x2, sp
  42ac0c:	mov	x0, x20
  42ac10:	str	wzr, [sp, #8]
  42ac14:	str	xzr, [sp]
  42ac18:	strb	w8, [x19, #4]
  42ac1c:	bl	42b3dc <feof@plt+0x286dc>
  42ac20:	mov	x2, sp
  42ac24:	mov	x0, x20
  42ac28:	mov	x1, x19
  42ac2c:	bl	42b534 <feof@plt+0x28834>
  42ac30:	b	42b068 <feof@plt+0x28368>
  42ac34:	mov	w8, #0x12                  	// #18
  42ac38:	strb	w8, [x19, #4]
  42ac3c:	ldr	x8, [x23]
  42ac40:	ldrb	w9, [x8]
  42ac44:	cmp	w9, #0x3e
  42ac48:	b.eq	42aed4 <feof@plt+0x281d4>  // b.none
  42ac4c:	cmp	w9, #0x3a
  42ac50:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ac54:	ldrb	w9, [x20, #1120]
  42ac58:	cbz	w9, 42b068 <feof@plt+0x28368>
  42ac5c:	add	x8, x8, #0x1
  42ac60:	mov	w9, #0x31                  	// #49
  42ac64:	b	42afdc <feof@plt+0x282dc>
  42ac68:	mov	w8, #0x2b                  	// #43
  42ac6c:	strb	w8, [x19, #4]
  42ac70:	b	42b06c <feof@plt+0x2836c>
  42ac74:	strb	wzr, [x19, #4]
  42ac78:	ldr	x8, [x23]
  42ac7c:	ldrb	w9, [x8]
  42ac80:	cmp	w9, #0x3d
  42ac84:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ac88:	add	x8, x8, #0x1
  42ac8c:	mov	w9, #0x17                  	// #23
  42ac90:	b	42afdc <feof@plt+0x282dc>
  42ac94:	mov	w8, #0x2                   	// #2
  42ac98:	strb	w8, [x19, #4]
  42ac9c:	ldr	x8, [x23]
  42aca0:	ldrb	w9, [x8]
  42aca4:	cmp	w9, #0x3e
  42aca8:	b.eq	42aef0 <feof@plt+0x281f0>  // b.none
  42acac:	cmp	w9, #0x3d
  42acb0:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42acb4:	add	x8, x8, #0x1
  42acb8:	mov	w9, #0x19                  	// #25
  42acbc:	b	42afdc <feof@plt+0x282dc>
  42acc0:	mov	w8, #0x27                  	// #39
  42acc4:	strb	w8, [x19, #4]
  42acc8:	b	42b06c <feof@plt+0x2836c>
  42accc:	mov	w8, #0x28                  	// #40
  42acd0:	strb	w8, [x19, #4]
  42acd4:	b	42b06c <feof@plt+0x2836c>
  42acd8:	mov	w8, #0xb                   	// #11
  42acdc:	strb	w8, [x19, #4]
  42ace0:	ldr	x8, [x23]
  42ace4:	ldrb	w9, [x8]
  42ace8:	cmp	w9, #0x3d
  42acec:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42acf0:	add	x8, x8, #0x1
  42acf4:	mov	w9, #0x22                  	// #34
  42acf8:	b	42afdc <feof@plt+0x282dc>
  42acfc:	mov	w8, #0x29                  	// #41
  42ad00:	strb	w8, [x19, #4]
  42ad04:	b	42b06c <feof@plt+0x2836c>
  42ad08:	mov	w8, #0xa                   	// #10
  42ad0c:	strb	w8, [x19, #4]
  42ad10:	ldr	x8, [x23]
  42ad14:	ldrb	w9, [x8]
  42ad18:	cmp	w9, #0x3d
  42ad1c:	b.eq	42af1c <feof@plt+0x2821c>  // b.none
  42ad20:	cmp	w9, #0x7c
  42ad24:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ad28:	add	x8, x8, #0x1
  42ad2c:	mov	w9, #0x10                  	// #16
  42ad30:	b	42afdc <feof@plt+0x282dc>
  42ad34:	mov	w8, #0xe                   	// #14
  42ad38:	strb	w8, [x19, #4]
  42ad3c:	b	42b06c <feof@plt+0x2836c>
  42ad40:	ldr	x8, [x23]
  42ad44:	add	x8, x8, #0x1
  42ad48:	str	x8, [x23]
  42ad4c:	ldr	x8, [x20, #64]
  42ad50:	ldr	x21, [x23]
  42ad54:	ldp	x0, x9, [x8, #16]
  42ad58:	sub	x9, x9, x0
  42ad5c:	cmp	x9, #0x1
  42ad60:	b.hi	42ae90 <feof@plt+0x28190>  // b.pmore
  42ad64:	mov	x9, x20
  42ad68:	ldr	x8, [x9, #72]!
  42ad6c:	cbz	x8, 42ad98 <feof@plt+0x28098>
  42ad70:	ldr	x10, [x8, #24]
  42ad74:	ldr	x11, [x8, #8]
  42ad78:	sub	x10, x10, x11
  42ad7c:	sub	x10, x10, #0x2
  42ad80:	lsr	x10, x10, #1
  42ad84:	cmp	x10, #0xfa1
  42ad88:	b.cc	42ae70 <feof@plt+0x28170>  // b.lo, b.ul, b.last
  42ad8c:	mov	x9, x8
  42ad90:	ldr	x8, [x8]
  42ad94:	cbnz	x8, 42ad70 <feof@plt+0x28070>
  42ad98:	mov	w0, #0x1f60                	// #8032
  42ad9c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42ada0:	mov	w8, #0x1f40                	// #8000
  42ada4:	add	x8, x0, x8
  42ada8:	str	x0, [x0, #8008]
  42adac:	str	x0, [x0, #8016]
  42adb0:	str	x8, [x0, #8024]
  42adb4:	str	xzr, [x0, #8000]
  42adb8:	b	42ae84 <feof@plt+0x28184>
  42adbc:	cmp	w28, #0x75
  42adc0:	b.ne	42aff4 <feof@plt+0x282f4>  // b.any
  42adc4:	cmp	w9, #0x38
  42adc8:	b.ne	42aff4 <feof@plt+0x282f4>  // b.any
  42adcc:	ldrb	w9, [x8, #1]
  42add0:	cmp	w9, #0x22
  42add4:	b.eq	42a970 <feof@plt+0x27c70>  // b.none
  42add8:	cmp	w9, #0x52
  42addc:	b.eq	42afe8 <feof@plt+0x282e8>  // b.none
  42ade0:	cmp	w9, #0x27
  42ade4:	b.ne	42aff4 <feof@plt+0x282f4>  // b.any
  42ade8:	ldrb	w9, [x20, #1129]
  42adec:	cbnz	w9, 42a970 <feof@plt+0x27c70>
  42adf0:	b	42aff4 <feof@plt+0x282f4>
  42adf4:	cmp	w28, #0x52
  42adf8:	b.eq	42aff4 <feof@plt+0x282f4>  // b.none
  42adfc:	ldrb	w8, [x20, #1128]
  42ae00:	cbnz	w8, 42a8f8 <feof@plt+0x27bf8>
  42ae04:	b	42aff4 <feof@plt+0x282f4>
  42ae08:	ldrb	w10, [x20, #1126]
  42ae0c:	cbz	w10, 42b068 <feof@plt+0x28368>
  42ae10:	cmp	w9, #0x3e
  42ae14:	b.eq	42b10c <feof@plt+0x2840c>  // b.none
  42ae18:	cmp	w9, #0x3a
  42ae1c:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ae20:	add	x8, x8, #0x1
  42ae24:	str	x8, [x23]
  42ae28:	ldrh	w8, [x19, #6]
  42ae2c:	mov	w9, #0x25                  	// #37
  42ae30:	strb	w9, [x19, #4]
  42ae34:	orr	w8, w8, #0x2
  42ae38:	strh	w8, [x19, #6]
  42ae3c:	ldr	x8, [x23]
  42ae40:	ldrb	w9, [x8]
  42ae44:	cmp	w9, #0x25
  42ae48:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ae4c:	ldrb	w9, [x8, #1]
  42ae50:	cmp	w9, #0x3a
  42ae54:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42ae58:	add	x8, x8, #0x2
  42ae5c:	mov	w9, #0x26                  	// #38
  42ae60:	str	x8, [x23]
  42ae64:	strb	w9, [x19, #4]
  42ae68:	str	wzr, [x19, #8]
  42ae6c:	b	42b068 <feof@plt+0x28368>
  42ae70:	ldr	x10, [x8]
  42ae74:	str	x10, [x9]
  42ae78:	ldr	x0, [x8, #8]
  42ae7c:	str	xzr, [x8]
  42ae80:	str	x0, [x8, #16]
  42ae84:	ldr	x9, [x20, #64]
  42ae88:	str	x9, [x8]
  42ae8c:	str	x8, [x20, #64]
  42ae90:	add	x9, x0, #0x2
  42ae94:	str	x9, [x8, #16]
  42ae98:	ldurb	w8, [x21, #-1]
  42ae9c:	mov	w9, #0x3d                  	// #61
  42aea0:	mov	w10, #0x1                   	// #1
  42aea4:	strb	wzr, [x0, #1]
  42aea8:	strb	w8, [x0]
  42aeac:	strb	w9, [x19, #4]
  42aeb0:	str	w10, [x19, #8]
  42aeb4:	str	x0, [x19, #16]
  42aeb8:	b	42b068 <feof@plt+0x28368>
  42aebc:	add	x8, x8, #0x1
  42aec0:	mov	w9, #0x1b                  	// #27
  42aec4:	b	42afdc <feof@plt+0x282dc>
  42aec8:	add	x8, x8, #0x1
  42aecc:	mov	w9, #0x20                  	// #32
  42aed0:	b	42afdc <feof@plt+0x282dc>
  42aed4:	ldrb	w9, [x20, #1126]
  42aed8:	cbz	w9, 42b068 <feof@plt+0x28368>
  42aedc:	add	x8, x8, #0x1
  42aee0:	str	x8, [x23]
  42aee4:	ldrh	w8, [x19, #6]
  42aee8:	mov	w9, #0x28                  	// #40
  42aeec:	b	42b130 <feof@plt+0x28430>
  42aef0:	add	x8, x8, #0x1
  42aef4:	mov	w9, #0xc                   	// #12
  42aef8:	str	x8, [x23]
  42aefc:	strb	w9, [x19, #4]
  42af00:	ldr	x8, [x23]
  42af04:	ldrb	w9, [x8]
  42af08:	cmp	w9, #0x3d
  42af0c:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42af10:	add	x8, x8, #0x1
  42af14:	mov	w9, #0x23                  	// #35
  42af18:	b	42afdc <feof@plt+0x282dc>
  42af1c:	add	x8, x8, #0x1
  42af20:	mov	w9, #0x21                  	// #33
  42af24:	b	42afdc <feof@plt+0x282dc>
  42af28:	add	x8, x8, #0x1
  42af2c:	mov	w9, #0x2e                  	// #46
  42af30:	b	42afdc <feof@plt+0x282dc>
  42af34:	add	x8, x8, #0x1
  42af38:	mov	w9, #0x1c                  	// #28
  42af3c:	b	42afdc <feof@plt+0x282dc>
  42af40:	add	x8, x8, #0x1
  42af44:	mov	w9, #0xd                   	// #13
  42af48:	str	x8, [x23]
  42af4c:	strb	w9, [x19, #4]
  42af50:	ldr	x8, [x23]
  42af54:	ldrb	w9, [x8]
  42af58:	cmp	w9, #0x3d
  42af5c:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42af60:	add	x8, x8, #0x1
  42af64:	mov	w9, #0x24                  	// #36
  42af68:	b	42afdc <feof@plt+0x282dc>
  42af6c:	ldrb	w10, [x20, #1126]
  42af70:	cbz	w10, 42b068 <feof@plt+0x28368>
  42af74:	cmp	w9, #0x25
  42af78:	b.eq	42b120 <feof@plt+0x28420>  // b.none
  42af7c:	cmp	w9, #0x3a
  42af80:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42af84:	ldrb	w9, [x20, #1120]
  42af88:	cbz	w9, 42afb8 <feof@plt+0x282b8>
  42af8c:	ldr	w9, [x20, #1116]
  42af90:	sub	w9, w9, #0xb
  42af94:	cmp	w9, #0x2
  42af98:	b.cc	42afb8 <feof@plt+0x282b8>  // b.lo, b.ul, b.last
  42af9c:	ldrb	w9, [x8, #1]
  42afa0:	cmp	w9, #0x3a
  42afa4:	b.ne	42afb8 <feof@plt+0x282b8>  // b.any
  42afa8:	ldrb	w9, [x8, #2]
  42afac:	orr	w9, w9, #0x4
  42afb0:	cmp	w9, #0x3e
  42afb4:	b.ne	42b068 <feof@plt+0x28368>  // b.any
  42afb8:	add	x8, x8, #0x1
  42afbc:	str	x8, [x23]
  42afc0:	ldrh	w8, [x19, #6]
  42afc4:	mov	w9, #0x27                  	// #39
  42afc8:	b	42b130 <feof@plt+0x28430>
  42afcc:	ldrb	w9, [x20, #1120]
  42afd0:	cbz	w9, 42b068 <feof@plt+0x28368>
  42afd4:	add	x8, x8, #0x1
  42afd8:	mov	w9, #0x33                  	// #51
  42afdc:	str	x8, [x23]
  42afe0:	strb	w9, [x19, #4]
  42afe4:	b	42b068 <feof@plt+0x28368>
  42afe8:	ldrb	w9, [x8, #2]
  42afec:	cmp	w9, #0x22
  42aff0:	b.eq	42a93c <feof@plt+0x27c3c>  // b.none
  42aff4:	mov	w8, #0x35                  	// #53
  42aff8:	strb	w8, [x19, #4]
  42affc:	str	wzr, [sp, #8]
  42b000:	str	xzr, [sp]
  42b004:	ldr	x8, [x23]
  42b008:	add	x4, x19, #0x10
  42b00c:	mov	x3, sp
  42b010:	mov	x0, x20
  42b014:	sub	x1, x8, #0x1
  42b018:	mov	w2, wzr
  42b01c:	bl	42ca2c <feof@plt+0x29d2c>
  42b020:	str	x0, [x19, #8]
  42b024:	mov	x2, sp
  42b028:	mov	x0, x20
  42b02c:	mov	x1, x19
  42b030:	bl	42b534 <feof@plt+0x28834>
  42b034:	ldr	x8, [x19, #8]
  42b038:	ldrb	w9, [x8, #18]
  42b03c:	tbz	w9, #2, 42b058 <feof@plt+0x28358>
  42b040:	ldrh	w9, [x19, #6]
  42b044:	orr	w9, w9, #0x10
  42b048:	strh	w9, [x19, #6]
  42b04c:	ldrb	w8, [x8, #16]
  42b050:	lsr	w8, w8, #1
  42b054:	strb	w8, [x19, #4]
  42b058:	tbz	w22, #0, 42b068 <feof@plt+0x28368>
  42b05c:	ldrh	w8, [x19, #6]
  42b060:	orr	w8, w8, #0x20
  42b064:	strh	w8, [x19, #6]
  42b068:	ldr	w21, [x19]
  42b06c:	cmp	w21, #0x2
  42b070:	b.cc	42b0e8 <feof@plt+0x283e8>  // b.lo, b.ul, b.last
  42b074:	ldrb	w8, [x19, #4]
  42b078:	cmp	w8, #0x16
  42b07c:	b.eq	42b0e8 <feof@plt+0x283e8>  // b.none
  42b080:	ldr	w9, [x23, #56]
  42b084:	ldr	x10, [x23, #48]
  42b088:	ldr	x8, [x23]
  42b08c:	lsl	x9, x9, #4
  42b090:	ldr	x9, [x10, x9]
  42b094:	cmp	x8, x9
  42b098:	b.cc	42b0b8 <feof@plt+0x283b8>  // b.lo, b.ul, b.last
  42b09c:	ldr	x9, [x20, #8]
  42b0a0:	cbnz	x9, 42b0b8 <feof@plt+0x283b8>
  42b0a4:	mov	x0, x20
  42b0a8:	mov	w1, wzr
  42b0ac:	bl	4291e4 <feof@plt+0x264e4>
  42b0b0:	ldr	w21, [x19]
  42b0b4:	ldr	x8, [x23]
  42b0b8:	ldr	w9, [x23, #8]
  42b0bc:	ldr	x0, [x20, #40]
  42b0c0:	sub	w1, w8, w9
  42b0c4:	bl	42edcc <feof@plt+0x2c0cc>
  42b0c8:	ldr	x8, [x20, #40]
  42b0cc:	ldr	w1, [x19]
  42b0d0:	mov	w2, w21
  42b0d4:	bfi	x2, x0, #32, #32
  42b0d8:	mov	x0, x8
  42b0dc:	mov	x3, xzr
  42b0e0:	bl	42deec <feof@plt+0x2b1ec>
  42b0e4:	str	w0, [x19]
  42b0e8:	mov	x0, x19
  42b0ec:	ldp	x20, x19, [sp, #96]
  42b0f0:	ldp	x22, x21, [sp, #80]
  42b0f4:	ldp	x24, x23, [sp, #64]
  42b0f8:	ldp	x26, x25, [sp, #48]
  42b0fc:	ldp	x28, x27, [sp, #32]
  42b100:	ldp	x29, x30, [sp, #16]
  42b104:	add	sp, sp, #0x70
  42b108:	ret
  42b10c:	add	x8, x8, #0x1
  42b110:	str	x8, [x23]
  42b114:	ldrh	w8, [x19, #6]
  42b118:	mov	w9, #0x2a                  	// #42
  42b11c:	b	42b130 <feof@plt+0x28430>
  42b120:	add	x8, x8, #0x1
  42b124:	str	x8, [x23]
  42b128:	ldrh	w8, [x19, #6]
  42b12c:	mov	w9, #0x29                  	// #41
  42b130:	orr	w8, w8, #0x2
  42b134:	strh	w8, [x19, #6]
  42b138:	strb	w9, [x19, #4]
  42b13c:	b	42b068 <feof@plt+0x28368>
  42b140:	cmp	w28, #0x3d
  42b144:	b.ne	42b154 <feof@plt+0x28454>  // b.any
  42b148:	add	x8, x21, #0x1
  42b14c:	mov	w9, #0x1e                  	// #30
  42b150:	b	42afdc <feof@plt+0x282dc>
  42b154:	mov	w8, #0x7                   	// #7
  42b158:	strb	w8, [x19, #4]
  42b15c:	b	42b068 <feof@plt+0x28368>
  42b160:	tbz	w26, #0, 42b170 <feof@plt+0x28470>
  42b164:	ldrh	w8, [x19, #6]
  42b168:	orr	w8, w8, #0x20
  42b16c:	strh	w8, [x19, #6]
  42b170:	ldr	x8, [x20]
  42b174:	ldrb	w10, [x20, #16]
  42b178:	mov	w11, #0x1                   	// #1
  42b17c:	cmp	w28, #0x2f
  42b180:	ldr	x8, [x8]
  42b184:	ldurb	w9, [x8, #-1]
  42b188:	sub	w8, w8, w21
  42b18c:	ldrh	w9, [x27, x9, lsl #1]
  42b190:	bic	w9, w11, w9, lsr #10
  42b194:	add	w25, w9, w8
  42b198:	cbz	w10, 42b1a8 <feof@plt+0x284a8>
  42b19c:	mov	w24, w25
  42b1a0:	b.eq	42b1b8 <feof@plt+0x284b8>  // b.none
  42b1a4:	b	42b1bc <feof@plt+0x284bc>
  42b1a8:	b.ne	42b314 <feof@plt+0x28614>  // b.any
  42b1ac:	ldrb	w8, [x20, #25]
  42b1b0:	mov	w24, w25
  42b1b4:	cbz	w8, 42b1bc <feof@plt+0x284bc>
  42b1b8:	add	w24, w25, #0x2
  42b1bc:	mov	w1, w24
  42b1c0:	mov	x0, x20
  42b1c4:	bl	42d11c <feof@plt+0x2a41c>
  42b1c8:	mov	w8, #0x4f                  	// #79
  42b1cc:	mov	w9, #0x2f                  	// #47
  42b1d0:	mov	x22, x0
  42b1d4:	str	w24, [x19, #8]
  42b1d8:	str	x0, [x19, #16]
  42b1dc:	strb	w8, [x19, #4]
  42b1e0:	strb	w9, [x0], #1
  42b1e4:	sub	w2, w25, #0x1
  42b1e8:	mov	x1, x21
  42b1ec:	bl	402640 <memcpy@plt>
  42b1f0:	ldrb	w8, [x20, #16]
  42b1f4:	cbz	w8, 42b204 <feof@plt+0x28504>
  42b1f8:	cmp	w28, #0x2f
  42b1fc:	b.eq	42b214 <feof@plt+0x28514>  // b.none
  42b200:	b	42b280 <feof@plt+0x28580>
  42b204:	cmp	w28, #0x2f
  42b208:	b.ne	42b280 <feof@plt+0x28580>  // b.any
  42b20c:	ldrb	w8, [x20, #25]
  42b210:	cbz	w8, 42b280 <feof@plt+0x28580>
  42b214:	sub	w9, w24, #0x2
  42b218:	mov	w8, #0x2a                  	// #42
  42b21c:	sub	w10, w24, #0x1
  42b220:	mov	w11, #0x2f                  	// #47
  42b224:	cmp	w9, #0x3
  42b228:	strb	w8, [x22, #1]
  42b22c:	strb	w8, [x22, x9]
  42b230:	strb	w11, [x22, w10, uxtw]
  42b234:	b.cc	42b280 <feof@plt+0x28580>  // b.lo, b.ul, b.last
  42b238:	add	x8, x22, #0x3
  42b23c:	sub	x9, x9, #0x2
  42b240:	mov	w10, #0x7c                  	// #124
  42b244:	b	42b258 <feof@plt+0x28558>
  42b248:	sturb	w10, [x8, #-1]
  42b24c:	subs	x9, x9, #0x1
  42b250:	add	x8, x8, #0x1
  42b254:	b.eq	42b280 <feof@plt+0x28580>  // b.none
  42b258:	ldurb	w11, [x8, #-1]
  42b25c:	cmp	w11, #0x2f
  42b260:	b.ne	42b24c <feof@plt+0x2854c>  // b.any
  42b264:	ldurb	w11, [x8, #-2]
  42b268:	cmp	w11, #0x2a
  42b26c:	b.eq	42b248 <feof@plt+0x28548>  // b.none
  42b270:	ldrb	w11, [x8]
  42b274:	cmp	w11, #0x2a
  42b278:	b.eq	42b248 <feof@plt+0x28548>  // b.none
  42b27c:	b	42b24c <feof@plt+0x2854c>
  42b280:	ldr	w8, [x20, #1396]
  42b284:	cbnz	w8, 42b2a0 <feof@plt+0x285a0>
  42b288:	mov	w8, #0x100                 	// #256
  42b28c:	mov	w0, #0x1000                	// #4096
  42b290:	str	w8, [x20, #1396]
  42b294:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42b298:	ldr	w8, [x20, #1396]
  42b29c:	str	x0, [x20, #1384]
  42b2a0:	ldr	w9, [x20, #1392]
  42b2a4:	cmp	w9, w8
  42b2a8:	b.ne	42b2c4 <feof@plt+0x285c4>  // b.any
  42b2ac:	ldr	x0, [x20, #1384]
  42b2b0:	lsl	w8, w8, #1
  42b2b4:	sbfiz	x1, x8, #4, #32
  42b2b8:	str	w8, [x20, #1396]
  42b2bc:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  42b2c0:	str	x0, [x20, #1384]
  42b2c4:	ldrsw	x21, [x19, #8]
  42b2c8:	add	x0, x21, #0x1
  42b2cc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42b2d0:	ldrsw	x8, [x20, #1392]
  42b2d4:	ldr	x22, [x20, #1384]
  42b2d8:	mov	x2, x21
  42b2dc:	lsl	x24, x8, #4
  42b2e0:	str	x0, [x22, x24]
  42b2e4:	ldr	x1, [x19, #16]
  42b2e8:	bl	402640 <memcpy@plt>
  42b2ec:	ldr	x8, [x22, x24]
  42b2f0:	strb	wzr, [x8, x21]
  42b2f4:	ldr	x8, [x20, #1384]
  42b2f8:	ldrsw	x9, [x20, #1392]
  42b2fc:	ldr	w10, [x19]
  42b300:	add	x8, x8, x9, lsl #4
  42b304:	add	w9, w9, #0x1
  42b308:	str	w10, [x8, #8]
  42b30c:	str	w9, [x20, #1392]
  42b310:	b	42b068 <feof@plt+0x28368>
  42b314:	mov	w24, w25
  42b318:	b	42b1bc <feof@plt+0x284bc>
  42b31c:	stp	x29, x30, [sp, #-48]!
  42b320:	stp	x20, x19, [sp, #32]
  42b324:	ldrb	w8, [x0, #16]
  42b328:	str	x21, [sp, #16]
  42b32c:	mov	x29, sp
  42b330:	cbz	w8, 42b34c <feof@plt+0x2864c>
  42b334:	mov	w19, wzr
  42b338:	mov	w0, w19
  42b33c:	ldp	x20, x19, [sp, #32]
  42b340:	ldr	x21, [sp, #16]
  42b344:	ldp	x29, x30, [sp], #48
  42b348:	ret
  42b34c:	ldr	x8, [x0]
  42b350:	mov	x20, x0
  42b354:	ldrb	w9, [x8, #104]
  42b358:	cbz	w9, 42b3c4 <feof@plt+0x286c4>
  42b35c:	ldr	x10, [x8, #16]
  42b360:	ldr	x9, [x8, #32]
  42b364:	cmp	x10, x9
  42b368:	b.cc	42b3cc <feof@plt+0x286cc>  // b.lo, b.ul, b.last
  42b36c:	ldrb	w11, [x20, #25]
  42b370:	cbnz	w11, 42b334 <feof@plt+0x28634>
  42b374:	ldrb	w21, [x8, #105]
  42b378:	cmp	x10, x9
  42b37c:	b.ls	42b394 <feof@plt+0x28694>  // b.plast
  42b380:	ldr	x10, [x8, #24]
  42b384:	cmp	x10, x9
  42b388:	b.eq	42b394 <feof@plt+0x28694>  // b.none
  42b38c:	tbnz	w21, #1, 42b394 <feof@plt+0x28694>
  42b390:	str	x9, [x8, #16]
  42b394:	mov	x0, x20
  42b398:	bl	4206a4 <feof@plt+0x1d9a4>
  42b39c:	ldr	x8, [x20]
  42b3a0:	cmp	x8, #0x0
  42b3a4:	cset	w9, ne  // ne = any
  42b3a8:	tst	w21, #0x4
  42b3ac:	cset	w10, eq  // eq = none
  42b3b0:	and	w9, w10, w9
  42b3b4:	and	w19, w19, w9
  42b3b8:	tbnz	w21, #2, 42b338 <feof@plt+0x28638>
  42b3bc:	cbnz	x8, 42b354 <feof@plt+0x28654>
  42b3c0:	b	42b338 <feof@plt+0x28638>
  42b3c4:	mov	w19, #0x1                   	// #1
  42b3c8:	b	42b338 <feof@plt+0x28638>
  42b3cc:	mov	x0, x20
  42b3d0:	bl	428c88 <feof@plt+0x25f88>
  42b3d4:	mov	w19, #0x1                   	// #1
  42b3d8:	b	42b338 <feof@plt+0x28638>
  42b3dc:	stp	x29, x30, [sp, #-80]!
  42b3e0:	stp	x24, x23, [sp, #32]
  42b3e4:	stp	x22, x21, [sp, #48]
  42b3e8:	stp	x20, x19, [sp, #64]
  42b3ec:	ldr	x8, [x0]
  42b3f0:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42b3f4:	mov	x21, x2
  42b3f8:	mov	x19, x1
  42b3fc:	ldr	x22, [x8]
  42b400:	mov	x20, x0
  42b404:	add	x23, x23, #0x3c4
  42b408:	mov	w24, #0x204                 	// #516
  42b40c:	mov	x9, x22
  42b410:	str	x25, [sp, #16]
  42b414:	mov	x29, sp
  42b418:	mov	x10, x9
  42b41c:	b	42b434 <feof@plt+0x28734>
  42b420:	ldrb	w12, [x20, #1127]
  42b424:	cbz	w12, 42b4a0 <feof@plt+0x287a0>
  42b428:	str	w11, [x21]
  42b42c:	strb	wzr, [x21, #4]
  42b430:	add	x10, x10, #0x1
  42b434:	ldrb	w11, [x10]
  42b438:	ldrh	w12, [x23, x11, lsl #1]
  42b43c:	cmp	x11, #0x2e
  42b440:	and	w12, w12, w24
  42b444:	b.eq	42b428 <feof@plt+0x28728>  // b.none
  42b448:	cbnz	w12, 42b428 <feof@plt+0x28728>
  42b44c:	cmp	w11, #0x2d
  42b450:	b.eq	42b470 <feof@plt+0x28770>  // b.none
  42b454:	cmp	w11, #0x2b
  42b458:	b.eq	42b470 <feof@plt+0x28770>  // b.none
  42b45c:	cmp	w11, #0x27
  42b460:	b.ne	42b4a0 <feof@plt+0x287a0>  // b.any
  42b464:	ldrb	w12, [x20, #1166]
  42b468:	cbnz	w12, 42b428 <feof@plt+0x28728>
  42b46c:	b	42b4a0 <feof@plt+0x287a0>
  42b470:	ldurb	w12, [x10, #-1]
  42b474:	cmp	w12, #0x64
  42b478:	b.gt	42b490 <feof@plt+0x28790>
  42b47c:	cmp	w12, #0x45
  42b480:	b.eq	42b428 <feof@plt+0x28728>  // b.none
  42b484:	cmp	w12, #0x50
  42b488:	b.eq	42b420 <feof@plt+0x28720>  // b.none
  42b48c:	b	42b4a0 <feof@plt+0x287a0>
  42b490:	cmp	w12, #0x65
  42b494:	b.eq	42b428 <feof@plt+0x28728>  // b.none
  42b498:	cmp	w12, #0x70
  42b49c:	b.eq	42b420 <feof@plt+0x28720>  // b.none
  42b4a0:	mov	x25, x10
  42b4a4:	cmp	x10, x9
  42b4a8:	b.ls	42b4c4 <feof@plt+0x287c4>  // b.plast
  42b4ac:	mov	x10, x25
  42b4b0:	ldrb	w11, [x10, #-1]!
  42b4b4:	cmp	w11, #0x27
  42b4b8:	b.ne	42b4c4 <feof@plt+0x287c4>  // b.any
  42b4bc:	ldrb	w11, [x20, #1166]
  42b4c0:	cbnz	w11, 42b4a0 <feof@plt+0x287a0>
  42b4c4:	mov	x0, x20
  42b4c8:	mov	w1, wzr
  42b4cc:	mov	x2, x21
  42b4d0:	str	x25, [x8]
  42b4d4:	bl	42cc84 <feof@plt+0x29f84>
  42b4d8:	tbz	w0, #0, 42b4e8 <feof@plt+0x287e8>
  42b4dc:	ldr	x8, [x20]
  42b4e0:	ldr	x9, [x8]
  42b4e4:	b	42b418 <feof@plt+0x28718>
  42b4e8:	sub	x21, x22, #0x1
  42b4ec:	sub	w8, w25, w21
  42b4f0:	add	w1, w8, #0x1
  42b4f4:	mov	x0, x20
  42b4f8:	str	w8, [x19]
  42b4fc:	bl	42d11c <feof@plt+0x2a41c>
  42b500:	ldr	w2, [x19]
  42b504:	mov	x1, x21
  42b508:	mov	x20, x0
  42b50c:	bl	402640 <memcpy@plt>
  42b510:	ldr	w8, [x19]
  42b514:	ldr	x25, [sp, #16]
  42b518:	strb	wzr, [x20, x8]
  42b51c:	str	x20, [x19, #8]
  42b520:	ldp	x20, x19, [sp, #64]
  42b524:	ldp	x22, x21, [sp, #48]
  42b528:	ldp	x24, x23, [sp, #32]
  42b52c:	ldp	x29, x30, [sp], #80
  42b530:	ret
  42b534:	stp	x29, x30, [sp, #-48]!
  42b538:	stp	x22, x21, [sp, #16]
  42b53c:	stp	x20, x19, [sp, #32]
  42b540:	ldr	w8, [x0, #1192]
  42b544:	ldr	w9, [x2, #8]
  42b548:	mov	x29, sp
  42b54c:	cmp	w8, w9
  42b550:	b.ge	42b560 <feof@plt+0x28860>  // b.tcont
  42b554:	ldrb	w8, [x0, #18]
  42b558:	mov	x19, x0
  42b55c:	cbz	w8, 42b570 <feof@plt+0x28870>
  42b560:	ldp	x20, x19, [sp, #32]
  42b564:	ldp	x22, x21, [sp, #16]
  42b568:	ldp	x29, x30, [sp], #48
  42b56c:	ret
  42b570:	ldrb	w8, [x1, #4]
  42b574:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42b578:	add	x9, x9, #0x718
  42b57c:	mov	x20, x2
  42b580:	lsl	x8, x8, #4
  42b584:	ldr	w8, [x9, x8]
  42b588:	mov	x21, x1
  42b58c:	cmp	w8, #0x1
  42b590:	b.eq	42b5a4 <feof@plt+0x288a4>  // b.none
  42b594:	cmp	w8, #0x2
  42b598:	b.ne	42b5b8 <feof@plt+0x288b8>  // b.any
  42b59c:	ldr	w8, [x21, #8]
  42b5a0:	b	42b5bc <feof@plt+0x288bc>
  42b5a4:	ldr	x8, [x21, #8]
  42b5a8:	ldr	w8, [x8, #8]
  42b5ac:	add	w8, w8, w8, lsl #2
  42b5b0:	lsl	w8, w8, #1
  42b5b4:	b	42b5bc <feof@plt+0x288bc>
  42b5b8:	mov	w8, #0x6                   	// #6
  42b5bc:	mov	w0, w8
  42b5c0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42b5c4:	mov	x22, x0
  42b5c8:	mov	x0, x19
  42b5cc:	mov	x1, x21
  42b5d0:	mov	x2, x22
  42b5d4:	mov	w3, wzr
  42b5d8:	bl	42cf30 <feof@plt+0x2a230>
  42b5dc:	ldr	w8, [x20, #8]
  42b5e0:	ldr	w2, [x21]
  42b5e4:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  42b5e8:	adrp	x10, 463000 <_obstack_memory_used@@Base+0xddd8>
  42b5ec:	add	x9, x9, #0x2a
  42b5f0:	add	x10, x10, #0x14
  42b5f4:	cmp	w8, #0x1
  42b5f8:	sub	w5, w0, w22
  42b5fc:	csel	x4, x10, x9, eq  // eq = none
  42b600:	mov	w1, #0x10                  	// #16
  42b604:	mov	x0, x19
  42b608:	mov	w3, wzr
  42b60c:	mov	x6, x22
  42b610:	bl	4229a0 <feof@plt+0x1fca0>
  42b614:	mov	x0, x22
  42b618:	ldp	x20, x19, [sp, #32]
  42b61c:	ldp	x22, x21, [sp, #16]
  42b620:	ldp	x29, x30, [sp], #48
  42b624:	b	402770 <free@plt>
  42b628:	sub	sp, sp, #0xf0
  42b62c:	stp	x29, x30, [sp, #144]
  42b630:	stp	x28, x27, [sp, #160]
  42b634:	stp	x26, x25, [sp, #176]
  42b638:	stp	x24, x23, [sp, #192]
  42b63c:	stp	x22, x21, [sp, #208]
  42b640:	stp	x20, x19, [sp, #224]
  42b644:	mov	x8, x2
  42b648:	ldrb	w9, [x8], #1
  42b64c:	mov	x26, x2
  42b650:	mov	x21, x1
  42b654:	mov	x23, x0
  42b658:	cmp	w9, #0x4c
  42b65c:	add	x29, sp, #0x90
  42b660:	b.eq	42b67c <feof@plt+0x2897c>  // b.none
  42b664:	cmp	w9, #0x75
  42b668:	b.eq	42b684 <feof@plt+0x28984>  // b.none
  42b66c:	cmp	w9, #0x55
  42b670:	mov	x12, x8
  42b674:	mov	w10, w9
  42b678:	b.ne	42b6a0 <feof@plt+0x289a0>  // b.any
  42b67c:	ldrb	w10, [x26, #1]
  42b680:	b	42b69c <feof@plt+0x2899c>
  42b684:	ldrb	w10, [x26, #1]
  42b688:	cmp	w10, #0x38
  42b68c:	b.ne	42b69c <feof@plt+0x2899c>  // b.any
  42b690:	ldrb	w10, [x26, #2]
  42b694:	add	x12, x26, #0x3
  42b698:	b	42b6a0 <feof@plt+0x289a0>
  42b69c:	add	x12, x26, #0x2
  42b6a0:	cmp	w10, #0x22
  42b6a4:	stur	x23, [x29, #-64]
  42b6a8:	b.eq	42b700 <feof@plt+0x28a00>  // b.none
  42b6ac:	cmp	w10, #0x27
  42b6b0:	b.eq	42b738 <feof@plt+0x28a38>  // b.none
  42b6b4:	cmp	w10, #0x52
  42b6b8:	b.ne	42b768 <feof@plt+0x28a68>  // b.any
  42b6bc:	ldr	x10, [x23]
  42b6c0:	cmp	w9, #0x4c
  42b6c4:	str	x21, [sp, #40]
  42b6c8:	ldr	x11, [x10, #48]
  42b6cc:	ldr	w10, [x10, #56]
  42b6d0:	add	x20, x11, x10, lsl #4
  42b6d4:	b.eq	42b778 <feof@plt+0x28a78>  // b.none
  42b6d8:	cmp	w9, #0x55
  42b6dc:	b.eq	42b780 <feof@plt+0x28a80>  // b.none
  42b6e0:	cmp	w9, #0x75
  42b6e4:	b.ne	42b788 <feof@plt+0x28a88>  // b.any
  42b6e8:	ldrb	w8, [x8]
  42b6ec:	mov	w9, #0x40                  	// #64
  42b6f0:	cmp	w8, #0x38
  42b6f4:	mov	w8, #0x42                  	// #66
  42b6f8:	csel	w8, w8, w9, eq  // eq = none
  42b6fc:	b	42b78c <feof@plt+0x28a8c>
  42b700:	cmp	w9, #0x4c
  42b704:	b.eq	42c53c <feof@plt+0x2983c>  // b.none
  42b708:	cmp	w9, #0x55
  42b70c:	b.eq	42c54c <feof@plt+0x2984c>  // b.none
  42b710:	cmp	w9, #0x75
  42b714:	b.ne	42c55c <feof@plt+0x2985c>  // b.any
  42b718:	ldrb	w8, [x8]
  42b71c:	mov	w9, #0x40                  	// #64
  42b720:	mov	w10, #0x42                  	// #66
  42b724:	mov	w24, #0x22                  	// #34
  42b728:	cmp	w8, #0x38
  42b72c:	csel	w22, w10, w9, eq  // eq = none
  42b730:	mov	w8, wzr
  42b734:	b	42c590 <feof@plt+0x29890>
  42b738:	cmp	w9, #0x4c
  42b73c:	b.eq	42c56c <feof@plt+0x2986c>  // b.none
  42b740:	cmp	w9, #0x55
  42b744:	b.eq	42c574 <feof@plt+0x29874>  // b.none
  42b748:	cmp	w9, #0x75
  42b74c:	b.ne	42c57c <feof@plt+0x2987c>  // b.any
  42b750:	ldrb	w8, [x8]
  42b754:	mov	w9, #0x3a                  	// #58
  42b758:	mov	w10, #0x3c                  	// #60
  42b75c:	cmp	w8, #0x38
  42b760:	csel	w22, w10, w9, eq  // eq = none
  42b764:	b	42c580 <feof@plt+0x29880>
  42b768:	mov	w22, #0x44                  	// #68
  42b76c:	mov	w24, #0x3e                  	// #62
  42b770:	mov	w8, wzr
  42b774:	b	42c590 <feof@plt+0x29890>
  42b778:	mov	w8, #0x3f                  	// #63
  42b77c:	b	42b78c <feof@plt+0x28a8c>
  42b780:	mov	w8, #0x41                  	// #65
  42b784:	b	42b78c <feof@plt+0x28a8c>
  42b788:	mov	w8, #0x3e                  	// #62
  42b78c:	str	w8, [sp, #36]
  42b790:	mov	x25, xzr
  42b794:	mov	x22, xzr
  42b798:	mov	x19, xzr
  42b79c:	mov	w8, wzr
  42b7a0:	add	x27, x12, #0x1
  42b7a4:	add	x28, x23, #0x48
  42b7a8:	stur	xzr, [x29, #-48]
  42b7ac:	str	wzr, [sp, #60]
  42b7b0:	str	xzr, [sp, #48]
  42b7b4:	stp	x27, x12, [sp, #8]
  42b7b8:	str	x26, [sp, #24]
  42b7bc:	stur	x28, [x29, #-56]
  42b7c0:	ldr	x11, [sp, #48]
  42b7c4:	mov	w9, w8
  42b7c8:	mov	w8, w11
  42b7cc:	mov	x24, x27
  42b7d0:	str	x11, [sp, #48]
  42b7d4:	str	x8, [sp, #64]
  42b7d8:	sub	x20, x20, #0x10
  42b7dc:	ldr	x8, [x20, #16]!
  42b7e0:	cmp	x8, x24
  42b7e4:	b.cc	42b7dc <feof@plt+0x28adc>  // b.lo, b.ul, b.last
  42b7e8:	stur	w9, [x29, #-68]
  42b7ec:	b.eq	42b830 <feof@plt+0x28b30>  // b.none
  42b7f0:	mov	x27, x24
  42b7f4:	ldrb	w21, [x27], #1
  42b7f8:	cmp	x19, #0x10
  42b7fc:	b.ls	42c004 <feof@plt+0x29304>  // b.plast
  42b800:	ldur	w8, [x29, #-68]
  42b804:	cbnz	w8, 42c08c <feof@plt+0x2938c>
  42b808:	ldr	x8, [sp, #64]
  42b80c:	mov	w9, wzr
  42b810:	mov	x24, x27
  42b814:	cmp	x19, x8
  42b818:	b.ls	42b7d8 <feof@plt+0x28ad8>  // b.plast
  42b81c:	b	42c018 <feof@plt+0x29318>
  42b820:	mov	x26, x24
  42b824:	ldr	x8, [x20, #16]!
  42b828:	cmp	x8, x24
  42b82c:	b.ne	42b7f0 <feof@plt+0x28af0>  // b.any
  42b830:	ldr	w21, [x20, #8]
  42b834:	cbz	w21, 42b824 <feof@plt+0x28b24>
  42b838:	cmp	w21, #0x5c
  42b83c:	b.eq	42b848 <feof@plt+0x28b48>  // b.none
  42b840:	cmp	w21, #0x20
  42b844:	b.ne	42b894 <feof@plt+0x28b94>  // b.any
  42b848:	sub	x21, x24, x26
  42b84c:	cbz	x25, 42b8fc <feof@plt+0x28bfc>
  42b850:	ldp	x0, x8, [x22, #16]
  42b854:	sub	x28, x8, x0
  42b858:	subs	x27, x21, x28
  42b85c:	b.ls	42b974 <feof@plt+0x28c74>  // b.plast
  42b860:	mov	x1, x26
  42b864:	mov	x2, x28
  42b868:	bl	402640 <memcpy@plt>
  42b86c:	ldr	x8, [x22, #16]
  42b870:	mov	x0, x23
  42b874:	mov	x1, x22
  42b878:	mov	x2, x27
  42b87c:	add	x8, x8, x28
  42b880:	str	x8, [x22, #16]
  42b884:	add	x26, x26, x28
  42b888:	bl	42da28 <feof@plt+0x2ad28>
  42b88c:	mov	x22, x0
  42b890:	b	42b978 <feof@plt+0x28c78>
  42b894:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  42b898:	add	x8, x8, #0x968
  42b89c:	ldrb	w8, [x8, x21]
  42b8a0:	cbz	w8, 42c9fc <feof@plt+0x29cfc>
  42b8a4:	str	wzr, [x20, #8]
  42b8a8:	ldrb	w8, [x23, #1125]
  42b8ac:	cbz	w8, 42b824 <feof@plt+0x28b24>
  42b8b0:	sub	x23, x24, x26
  42b8b4:	cbz	x25, 42badc <feof@plt+0x28ddc>
  42b8b8:	ldp	x0, x8, [x22, #16]
  42b8bc:	sub	x28, x8, x0
  42b8c0:	subs	x27, x23, x28
  42b8c4:	b.ls	42bb54 <feof@plt+0x28e54>  // b.plast
  42b8c8:	mov	x1, x26
  42b8cc:	mov	x2, x28
  42b8d0:	bl	402640 <memcpy@plt>
  42b8d4:	ldr	x8, [x22, #16]
  42b8d8:	ldur	x0, [x29, #-64]
  42b8dc:	mov	x1, x22
  42b8e0:	mov	x2, x27
  42b8e4:	add	x8, x8, x28
  42b8e8:	str	x8, [x22, #16]
  42b8ec:	add	x26, x26, x28
  42b8f0:	bl	42da28 <feof@plt+0x2ad28>
  42b8f4:	mov	x22, x0
  42b8f8:	b	42bb58 <feof@plt+0x28e58>
  42b8fc:	ldr	x25, [x28]
  42b900:	cbz	x25, 42b980 <feof@plt+0x28c80>
  42b904:	ldr	x8, [x25, #24]
  42b908:	ldr	x9, [x25, #8]
  42b90c:	add	x10, x21, x21, lsl #1
  42b910:	sub	x8, x8, x9
  42b914:	mov	w9, #0x1f40                	// #8000
  42b918:	cmp	x8, x21
  42b91c:	add	x9, x9, x10, lsr #1
  42b920:	b.cc	42b934 <feof@plt+0x28c34>  // b.lo, b.ul, b.last
  42b924:	cmp	x8, x9
  42b928:	b.hi	42b934 <feof@plt+0x28c34>  // b.pmore
  42b92c:	mov	x8, x28
  42b930:	b	42b95c <feof@plt+0x28c5c>
  42b934:	mov	x8, x25
  42b938:	ldr	x25, [x25]
  42b93c:	cbz	x25, 42b980 <feof@plt+0x28c80>
  42b940:	ldr	x10, [x25, #24]
  42b944:	ldr	x11, [x25, #8]
  42b948:	sub	x10, x10, x11
  42b94c:	cmp	x10, x21
  42b950:	b.cc	42b934 <feof@plt+0x28c34>  // b.lo, b.ul, b.last
  42b954:	cmp	x10, x9
  42b958:	b.hi	42b934 <feof@plt+0x28c34>  // b.pmore
  42b95c:	ldr	x9, [x25]
  42b960:	str	x9, [x8]
  42b964:	ldr	x8, [x25, #8]
  42b968:	str	xzr, [x25]
  42b96c:	str	x8, [x25, #16]
  42b970:	b	42b9a8 <feof@plt+0x28ca8>
  42b974:	mov	x27, x21
  42b978:	ldur	x28, [x29, #-56]
  42b97c:	b	42b9b0 <feof@plt+0x28cb0>
  42b980:	mov	w8, #0x1f40                	// #8000
  42b984:	cmp	x21, x8
  42b988:	csel	x8, x21, x8, hi  // hi = pmore
  42b98c:	add	x8, x8, #0x7
  42b990:	and	x22, x8, #0xfffffffffffffff8
  42b994:	add	x0, x22, #0x20
  42b998:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42b99c:	add	x25, x0, x22
  42b9a0:	stp	x0, x25, [x25, #16]
  42b9a4:	stp	xzr, x0, [x25]
  42b9a8:	mov	x27, x21
  42b9ac:	mov	x22, x25
  42b9b0:	ldr	x0, [x22, #16]
  42b9b4:	mov	x1, x26
  42b9b8:	mov	x2, x27
  42b9bc:	bl	402640 <memcpy@plt>
  42b9c0:	ldr	x8, [x22, #16]
  42b9c4:	add	x8, x8, x27
  42b9c8:	str	x8, [x22, #16]
  42b9cc:	cbz	x25, 42b9fc <feof@plt+0x28cfc>
  42b9d0:	ldr	x9, [x22, #24]
  42b9d4:	ldur	x26, [x29, #-48]
  42b9d8:	cmp	x9, x8
  42b9dc:	b.ne	42ba90 <feof@plt+0x28d90>  // b.any
  42b9e0:	mov	w2, #0x1                   	// #1
  42b9e4:	mov	x0, x23
  42b9e8:	mov	x1, x22
  42b9ec:	str	x8, [x22, #16]
  42b9f0:	bl	42da28 <feof@plt+0x2ad28>
  42b9f4:	mov	x22, x0
  42b9f8:	b	42ba90 <feof@plt+0x28d90>
  42b9fc:	ldr	x25, [x28]
  42ba00:	ldur	x26, [x29, #-48]
  42ba04:	mov	w11, #0x1f41                	// #8001
  42ba08:	cbz	x25, 42ba4c <feof@plt+0x28d4c>
  42ba0c:	ldr	x8, [x25, #8]
  42ba10:	ldr	x9, [x25, #24]
  42ba14:	mvn	x8, x8
  42ba18:	add	x8, x9, x8
  42ba1c:	cmp	x8, x11
  42ba20:	b.cc	42ba74 <feof@plt+0x28d74>  // b.lo, b.ul, b.last
  42ba24:	mov	x8, x25
  42ba28:	ldr	x25, [x25]
  42ba2c:	cbz	x25, 42ba4c <feof@plt+0x28d4c>
  42ba30:	ldr	x9, [x25, #8]
  42ba34:	ldr	x10, [x25, #24]
  42ba38:	mvn	x9, x9
  42ba3c:	add	x9, x10, x9
  42ba40:	cmp	x9, x11
  42ba44:	b.cs	42ba24 <feof@plt+0x28d24>  // b.hs, b.nlast
  42ba48:	b	42ba78 <feof@plt+0x28d78>
  42ba4c:	mov	w0, #0x1f60                	// #8032
  42ba50:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42ba54:	mov	w8, #0x1f40                	// #8000
  42ba58:	add	x25, x0, x8
  42ba5c:	str	x0, [x0, #8008]
  42ba60:	str	x0, [x0, #8016]
  42ba64:	str	x25, [x0, #8024]
  42ba68:	str	xzr, [x0, #8000]
  42ba6c:	mov	x22, x25
  42ba70:	b	42ba90 <feof@plt+0x28d90>
  42ba74:	mov	x8, x28
  42ba78:	ldr	x9, [x25]
  42ba7c:	mov	x22, x25
  42ba80:	str	x9, [x8]
  42ba84:	ldr	x8, [x25, #8]
  42ba88:	str	xzr, [x25]
  42ba8c:	str	x8, [x25, #16]
  42ba90:	ldr	x8, [x22, #16]
  42ba94:	mov	w9, #0x5c                  	// #92
  42ba98:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42ba9c:	add	x10, x10, #0x269
  42baa0:	strb	w9, [x8]
  42baa4:	ldr	x8, [x22, #16]
  42baa8:	add	x9, x21, x26
  42baac:	cmp	x24, x10
  42bab0:	add	x21, x9, #0x1
  42bab4:	add	x8, x8, #0x1
  42bab8:	str	x8, [x22, #16]
  42babc:	b.eq	42bd98 <feof@plt+0x29098>  // b.none
  42bac0:	cmp	x19, #0x10
  42bac4:	b.hi	42bd98 <feof@plt+0x29098>  // b.pmore
  42bac8:	mov	w8, #0x5c                  	// #92
  42bacc:	sub	x9, x29, #0x28
  42bad0:	strb	w8, [x9, x19]
  42bad4:	add	x19, x19, #0x1
  42bad8:	b	42bd98 <feof@plt+0x29098>
  42badc:	ldr	x25, [x28]
  42bae0:	cbz	x25, 42bb60 <feof@plt+0x28e60>
  42bae4:	ldr	x8, [x25, #24]
  42bae8:	ldr	x9, [x25, #8]
  42baec:	add	x10, x23, x23, lsl #1
  42baf0:	sub	x8, x8, x9
  42baf4:	mov	w9, #0x1f40                	// #8000
  42baf8:	cmp	x8, x23
  42bafc:	add	x9, x9, x10, lsr #1
  42bb00:	b.cc	42bb14 <feof@plt+0x28e14>  // b.lo, b.ul, b.last
  42bb04:	cmp	x8, x9
  42bb08:	b.hi	42bb14 <feof@plt+0x28e14>  // b.pmore
  42bb0c:	mov	x8, x28
  42bb10:	b	42bb3c <feof@plt+0x28e3c>
  42bb14:	mov	x8, x25
  42bb18:	ldr	x25, [x25]
  42bb1c:	cbz	x25, 42bb60 <feof@plt+0x28e60>
  42bb20:	ldr	x10, [x25, #24]
  42bb24:	ldr	x11, [x25, #8]
  42bb28:	sub	x10, x10, x11
  42bb2c:	cmp	x10, x23
  42bb30:	b.cc	42bb14 <feof@plt+0x28e14>  // b.lo, b.ul, b.last
  42bb34:	cmp	x10, x9
  42bb38:	b.hi	42bb14 <feof@plt+0x28e14>  // b.pmore
  42bb3c:	ldr	x9, [x25]
  42bb40:	str	x9, [x8]
  42bb44:	ldr	x8, [x25, #8]
  42bb48:	str	xzr, [x25]
  42bb4c:	str	x8, [x25, #16]
  42bb50:	b	42bb88 <feof@plt+0x28e88>
  42bb54:	mov	x27, x23
  42bb58:	ldur	x28, [x29, #-56]
  42bb5c:	b	42bb90 <feof@plt+0x28e90>
  42bb60:	mov	w8, #0x1f40                	// #8000
  42bb64:	cmp	x23, x8
  42bb68:	csel	x8, x23, x8, hi  // hi = pmore
  42bb6c:	add	x8, x8, #0x7
  42bb70:	and	x22, x8, #0xfffffffffffffff8
  42bb74:	add	x0, x22, #0x20
  42bb78:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42bb7c:	add	x25, x0, x22
  42bb80:	stp	x0, x25, [x25, #16]
  42bb84:	stp	xzr, x0, [x25]
  42bb88:	mov	x27, x23
  42bb8c:	mov	x22, x25
  42bb90:	ldr	x0, [x22, #16]
  42bb94:	mov	x1, x26
  42bb98:	mov	x2, x27
  42bb9c:	bl	402640 <memcpy@plt>
  42bba0:	ldr	x8, [x22, #16]
  42bba4:	add	x0, x8, x27
  42bba8:	str	x0, [x22, #16]
  42bbac:	cbz	x25, 42bc04 <feof@plt+0x28f04>
  42bbb0:	ldr	x8, [x22, #24]
  42bbb4:	sub	x26, x8, x0
  42bbb8:	cmp	x26, #0x1
  42bbbc:	b.hi	42bc54 <feof@plt+0x28f54>  // b.pmore
  42bbc0:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42bbc4:	add	x27, x27, #0x1ec
  42bbc8:	mov	x1, x27
  42bbcc:	mov	x2, x26
  42bbd0:	bl	402640 <memcpy@plt>
  42bbd4:	ldr	x8, [x22, #16]
  42bbd8:	ldur	x0, [x29, #-64]
  42bbdc:	add	x28, x27, x26
  42bbe0:	mov	x1, x22
  42bbe4:	add	x8, x8, x26
  42bbe8:	str	x8, [x22, #16]
  42bbec:	mov	w8, #0x2                   	// #2
  42bbf0:	sub	x26, x8, x26
  42bbf4:	mov	x2, x26
  42bbf8:	bl	42da28 <feof@plt+0x2ad28>
  42bbfc:	mov	x22, x0
  42bc00:	b	42bcac <feof@plt+0x28fac>
  42bc04:	ldr	x25, [x28]
  42bc08:	cbz	x25, 42bc5c <feof@plt+0x28f5c>
  42bc0c:	ldr	x8, [x25, #24]
  42bc10:	ldr	x9, [x25, #8]
  42bc14:	sub	x8, x8, x9
  42bc18:	sub	x8, x8, #0x2
  42bc1c:	lsr	x8, x8, #1
  42bc20:	cmp	x8, #0xfa1
  42bc24:	b.cc	42bc80 <feof@plt+0x28f80>  // b.lo, b.ul, b.last
  42bc28:	mov	x8, x25
  42bc2c:	ldr	x25, [x25]
  42bc30:	cbz	x25, 42bc5c <feof@plt+0x28f5c>
  42bc34:	ldr	x9, [x25, #24]
  42bc38:	ldr	x10, [x25, #8]
  42bc3c:	sub	x9, x9, x10
  42bc40:	sub	x9, x9, #0x2
  42bc44:	lsr	x9, x9, #1
  42bc48:	cmp	x9, #0xfa1
  42bc4c:	b.cs	42bc28 <feof@plt+0x28f28>  // b.hs, b.nlast
  42bc50:	b	42bc84 <feof@plt+0x28f84>
  42bc54:	mov	w26, #0x2                   	// #2
  42bc58:	b	42bca0 <feof@plt+0x28fa0>
  42bc5c:	mov	w0, #0x1f60                	// #8032
  42bc60:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42bc64:	mov	w8, #0x1f40                	// #8000
  42bc68:	add	x25, x0, x8
  42bc6c:	str	x0, [x0, #8008]
  42bc70:	str	x0, [x0, #8016]
  42bc74:	str	xzr, [x0, #8000]
  42bc78:	str	x25, [x0, #8024]
  42bc7c:	b	42bc98 <feof@plt+0x28f98>
  42bc80:	mov	x8, x28
  42bc84:	ldr	x9, [x25]
  42bc88:	str	x9, [x8]
  42bc8c:	ldr	x8, [x25, #8]
  42bc90:	str	xzr, [x25]
  42bc94:	str	x8, [x25, #16]
  42bc98:	mov	w26, #0x2                   	// #2
  42bc9c:	mov	x22, x25
  42bca0:	adrp	x27, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42bca4:	add	x27, x27, #0x1ec
  42bca8:	mov	x28, x27
  42bcac:	ldr	x0, [x22, #16]
  42bcb0:	mov	x1, x28
  42bcb4:	mov	x2, x26
  42bcb8:	bl	402640 <memcpy@plt>
  42bcbc:	ldr	x8, [x22, #16]
  42bcc0:	cmp	x24, x27
  42bcc4:	add	x8, x8, x26
  42bcc8:	str	x8, [x22, #16]
  42bccc:	b.eq	42bcf0 <feof@plt+0x28ff0>  // b.none
  42bcd0:	ldp	x28, x10, [x29, #-56]
  42bcd4:	cmp	x19, #0x10
  42bcd8:	b.hi	42bcf4 <feof@plt+0x28ff4>  // b.pmore
  42bcdc:	sub	x8, x29, #0x28
  42bce0:	mov	w9, #0x3f3f                	// #16191
  42bce4:	strh	w9, [x8, x19]
  42bce8:	add	x19, x19, #0x2
  42bcec:	b	42bcf4 <feof@plt+0x28ff4>
  42bcf0:	ldp	x28, x10, [x29, #-56]
  42bcf4:	and	w8, w21, #0xff
  42bcf8:	cmp	w8, #0x2f
  42bcfc:	add	x23, x10, x23
  42bd00:	b.ne	42bfa4 <feof@plt+0x292a4>  // b.any
  42bd04:	ldr	x8, [x20, #16]
  42bd08:	cmp	x8, x24
  42bd0c:	b.ne	42bfa4 <feof@plt+0x292a4>  // b.any
  42bd10:	ldr	w8, [x20, #24]
  42bd14:	cmp	w8, #0x20
  42bd18:	b.eq	42bd24 <feof@plt+0x29024>  // b.none
  42bd1c:	cmp	w8, #0x5c
  42bd20:	b.ne	42ca14 <feof@plt+0x29d14>  // b.any
  42bd24:	ldp	x8, x9, [x22, #16]
  42bd28:	cmp	x9, x8
  42bd2c:	b.ne	42bd48 <feof@plt+0x29048>  // b.any
  42bd30:	ldur	x0, [x29, #-64]
  42bd34:	mov	w2, #0x1                   	// #1
  42bd38:	mov	x1, x22
  42bd3c:	bl	42da28 <feof@plt+0x2ad28>
  42bd40:	ldr	x8, [x0, #16]
  42bd44:	mov	x22, x0
  42bd48:	mov	w9, #0x2f                  	// #47
  42bd4c:	strb	w9, [x8]
  42bd50:	ldr	x8, [x22, #16]
  42bd54:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42bd58:	add	x9, x9, #0x47c
  42bd5c:	cmp	x24, x9
  42bd60:	add	x8, x8, #0x1
  42bd64:	add	x21, x23, #0x3
  42bd68:	str	x8, [x22, #16]
  42bd6c:	b.eq	42bd90 <feof@plt+0x29090>  // b.none
  42bd70:	ldur	x23, [x29, #-64]
  42bd74:	cmp	x19, #0x10
  42bd78:	b.hi	42bd94 <feof@plt+0x29094>  // b.pmore
  42bd7c:	sub	x8, x29, #0x28
  42bd80:	mov	w9, #0x2f                  	// #47
  42bd84:	strb	w9, [x8, x19]
  42bd88:	add	x19, x19, #0x1
  42bd8c:	b	42bd94 <feof@plt+0x29094>
  42bd90:	ldur	x23, [x29, #-64]
  42bd94:	add	x20, x20, #0x10
  42bd98:	ldr	w8, [x20, #8]
  42bd9c:	cmp	w8, #0x20
  42bda0:	b.ne	42bea0 <feof@plt+0x291a0>  // b.any
  42bda4:	cbz	x25, 42bdcc <feof@plt+0x290cc>
  42bda8:	ldp	x9, x8, [x22, #16]
  42bdac:	cmp	x8, x9
  42bdb0:	b.ne	42be5c <feof@plt+0x2915c>  // b.any
  42bdb4:	mov	w2, #0x1                   	// #1
  42bdb8:	mov	x0, x23
  42bdbc:	mov	x1, x22
  42bdc0:	bl	42da28 <feof@plt+0x2ad28>
  42bdc4:	mov	x22, x0
  42bdc8:	b	42be5c <feof@plt+0x2915c>
  42bdcc:	ldr	x25, [x28]
  42bdd0:	mov	w11, #0x1f41                	// #8001
  42bdd4:	cbz	x25, 42be18 <feof@plt+0x29118>
  42bdd8:	ldr	x8, [x25, #8]
  42bddc:	ldr	x9, [x25, #24]
  42bde0:	mvn	x8, x8
  42bde4:	add	x8, x9, x8
  42bde8:	cmp	x8, x11
  42bdec:	b.cc	42be40 <feof@plt+0x29140>  // b.lo, b.ul, b.last
  42bdf0:	mov	x8, x25
  42bdf4:	ldr	x25, [x25]
  42bdf8:	cbz	x25, 42be18 <feof@plt+0x29118>
  42bdfc:	ldr	x9, [x25, #8]
  42be00:	ldr	x10, [x25, #24]
  42be04:	mvn	x9, x9
  42be08:	add	x9, x10, x9
  42be0c:	cmp	x9, x11
  42be10:	b.cs	42bdf0 <feof@plt+0x290f0>  // b.hs, b.nlast
  42be14:	b	42be44 <feof@plt+0x29144>
  42be18:	mov	w0, #0x1f60                	// #8032
  42be1c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42be20:	mov	w8, #0x1f40                	// #8000
  42be24:	add	x25, x0, x8
  42be28:	str	x0, [x0, #8008]
  42be2c:	str	x0, [x0, #8016]
  42be30:	str	x25, [x0, #8024]
  42be34:	str	xzr, [x0, #8000]
  42be38:	mov	x22, x25
  42be3c:	b	42be5c <feof@plt+0x2915c>
  42be40:	mov	x8, x28
  42be44:	ldr	x9, [x25]
  42be48:	mov	x22, x25
  42be4c:	str	x9, [x8]
  42be50:	ldr	x8, [x25, #8]
  42be54:	str	xzr, [x25]
  42be58:	str	x8, [x25, #16]
  42be5c:	ldr	x8, [x22, #16]
  42be60:	mov	w9, #0x20                  	// #32
  42be64:	add	x21, x21, #0x1
  42be68:	strb	w9, [x8]
  42be6c:	ldr	x8, [x22, #16]
  42be70:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  42be74:	add	x9, x9, #0xf4b
  42be78:	cmp	x24, x9
  42be7c:	add	x8, x8, #0x1
  42be80:	str	x8, [x22, #16]
  42be84:	b.eq	42bea0 <feof@plt+0x291a0>  // b.none
  42be88:	cmp	x19, #0x10
  42be8c:	b.hi	42bea0 <feof@plt+0x291a0>  // b.pmore
  42be90:	sub	x8, x29, #0x28
  42be94:	mov	w9, #0x20                  	// #32
  42be98:	strb	w9, [x8, x19]
  42be9c:	add	x19, x19, #0x1
  42bea0:	cbz	x25, 42bec8 <feof@plt+0x291c8>
  42bea4:	ldp	x9, x8, [x22, #16]
  42bea8:	cmp	x8, x9
  42beac:	b.ne	42bf58 <feof@plt+0x29258>  // b.any
  42beb0:	mov	w2, #0x1                   	// #1
  42beb4:	mov	x0, x23
  42beb8:	mov	x1, x22
  42bebc:	bl	42da28 <feof@plt+0x2ad28>
  42bec0:	mov	x22, x0
  42bec4:	b	42bf58 <feof@plt+0x29258>
  42bec8:	ldr	x25, [x28]
  42becc:	mov	w11, #0x1f41                	// #8001
  42bed0:	cbz	x25, 42bf14 <feof@plt+0x29214>
  42bed4:	ldr	x8, [x25, #8]
  42bed8:	ldr	x9, [x25, #24]
  42bedc:	mvn	x8, x8
  42bee0:	add	x8, x9, x8
  42bee4:	cmp	x8, x11
  42bee8:	b.cc	42bf3c <feof@plt+0x2923c>  // b.lo, b.ul, b.last
  42beec:	mov	x8, x25
  42bef0:	ldr	x25, [x25]
  42bef4:	cbz	x25, 42bf14 <feof@plt+0x29214>
  42bef8:	ldr	x9, [x25, #8]
  42befc:	ldr	x10, [x25, #24]
  42bf00:	mvn	x9, x9
  42bf04:	add	x9, x10, x9
  42bf08:	cmp	x9, x11
  42bf0c:	b.cs	42beec <feof@plt+0x291ec>  // b.hs, b.nlast
  42bf10:	b	42bf40 <feof@plt+0x29240>
  42bf14:	mov	w0, #0x1f60                	// #8032
  42bf18:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42bf1c:	mov	w8, #0x1f40                	// #8000
  42bf20:	add	x25, x0, x8
  42bf24:	str	x0, [x0, #8008]
  42bf28:	str	x0, [x0, #8016]
  42bf2c:	str	x25, [x0, #8024]
  42bf30:	str	xzr, [x0, #8000]
  42bf34:	mov	x22, x25
  42bf38:	b	42bf58 <feof@plt+0x29258>
  42bf3c:	mov	x8, x28
  42bf40:	ldr	x9, [x25]
  42bf44:	mov	x22, x25
  42bf48:	str	x9, [x8]
  42bf4c:	ldr	x8, [x25, #8]
  42bf50:	str	xzr, [x25]
  42bf54:	str	x8, [x25, #16]
  42bf58:	ldr	x8, [x22, #16]
  42bf5c:	mov	w9, #0xa                   	// #10
  42bf60:	strb	w9, [x8]
  42bf64:	ldr	x8, [x22, #16]
  42bf68:	adrp	x9, 455000 <_obstack_begin_1@@Base+0xa4>
  42bf6c:	add	x9, x9, #0xcdf
  42bf70:	cmp	x24, x9
  42bf74:	add	x8, x8, #0x1
  42bf78:	str	x8, [x22, #16]
  42bf7c:	add	x8, x21, #0x1
  42bf80:	stur	x8, [x29, #-48]
  42bf84:	b.eq	42b820 <feof@plt+0x28b20>  // b.none
  42bf88:	cmp	x19, #0x10
  42bf8c:	b.hi	42b820 <feof@plt+0x28b20>  // b.pmore
  42bf90:	sub	x8, x29, #0x28
  42bf94:	mov	w9, #0xa                   	// #10
  42bf98:	strb	w9, [x8, x19]
  42bf9c:	add	x19, x19, #0x1
  42bfa0:	b	42b820 <feof@plt+0x28b20>
  42bfa4:	ldp	x8, x9, [x22, #16]
  42bfa8:	add	x27, x24, #0x1
  42bfac:	cmp	x9, x8
  42bfb0:	b.ne	42bfcc <feof@plt+0x292cc>  // b.any
  42bfb4:	ldur	x0, [x29, #-64]
  42bfb8:	mov	w2, #0x1                   	// #1
  42bfbc:	mov	x1, x22
  42bfc0:	bl	42da28 <feof@plt+0x2ad28>
  42bfc4:	ldr	x8, [x0, #16]
  42bfc8:	mov	x22, x0
  42bfcc:	strb	w21, [x8]
  42bfd0:	ldr	x8, [x22, #16]
  42bfd4:	cmp	x19, #0x10
  42bfd8:	add	x8, x8, #0x1
  42bfdc:	str	x8, [x22, #16]
  42bfe0:	add	x8, x23, #0x3
  42bfe4:	stur	x8, [x29, #-48]
  42bfe8:	b.hi	42bff8 <feof@plt+0x292f8>  // b.pmore
  42bfec:	sub	x8, x29, #0x28
  42bff0:	strb	w21, [x8, x19]
  42bff4:	add	x19, x19, #0x1
  42bff8:	ldur	x23, [x29, #-64]
  42bffc:	mov	x26, x27
  42c000:	b	42b800 <feof@plt+0x28b00>
  42c004:	add	x8, x19, #0x1
  42c008:	sub	x9, x29, #0x28
  42c00c:	strb	w21, [x9, x19]
  42c010:	mov	x19, x8
  42c014:	b	42b800 <feof@plt+0x28b00>
  42c018:	ldr	x11, [sp, #64]
  42c01c:	adrp	x13, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42c020:	sub	x12, x29, #0x14
  42c024:	add	x13, x13, #0x66c
  42c028:	sub	x8, x29, #0x28
  42c02c:	ldrb	w5, [x8, x11]
  42c030:	sub	w8, w5, #0x21
  42c034:	cmp	w8, #0x5d
  42c038:	strb	w5, [x12, x11]
  42c03c:	b.hi	42c070 <feof@plt+0x29370>  // b.pmore
  42c040:	adr	x9, 42c050 <feof@plt+0x29350>
  42c044:	ldrb	w10, [x13, x8]
  42c048:	add	x9, x9, x10, lsl #2
  42c04c:	br	x9
  42c050:	cmp	x11, #0xf
  42c054:	b.hi	42c070 <feof@plt+0x29370>  // b.pmore
  42c058:	add	x11, x11, #0x1
  42c05c:	cmp	x19, x11
  42c060:	b.ne	42c028 <feof@plt+0x29328>  // b.any
  42c064:	mov	w9, wzr
  42c068:	mov	x11, x19
  42c06c:	b	42b7c8 <feof@plt+0x28ac8>
  42c070:	cmp	w5, #0x28
  42c074:	b.ne	42c8a8 <feof@plt+0x29ba8>  // b.any
  42c078:	mov	w8, #0x22                  	// #34
  42c07c:	strb	w8, [x12, x11]
  42c080:	mov	w9, #0x1                   	// #1
  42c084:	mov	w19, #0x11                  	// #17
  42c088:	b	42b7c8 <feof@plt+0x28ac8>
  42c08c:	cmp	w8, #0x2
  42c090:	b.ne	42c0e0 <feof@plt+0x293e0>  // b.any
  42c094:	ldr	x8, [sp, #48]
  42c098:	ldr	w9, [sp, #60]
  42c09c:	cmp	w9, w8
  42c0a0:	mov	w8, w9
  42c0a4:	b.hi	42c3ac <feof@plt+0x296ac>  // b.pmore
  42c0a8:	str	w8, [sp, #60]
  42c0ac:	mov	w8, w8
  42c0b0:	cmp	x19, x8
  42c0b4:	b.ls	42c0e8 <feof@plt+0x293e8>  // b.plast
  42c0b8:	sub	x9, x29, #0x28
  42c0bc:	sub	x10, x29, #0x14
  42c0c0:	ldrb	w9, [x9, x8]
  42c0c4:	ldrb	w8, [x10, x8]
  42c0c8:	cmp	w9, w8
  42c0cc:	b.ne	42c0e8 <feof@plt+0x293e8>  // b.any
  42c0d0:	ldr	w9, [sp, #60]
  42c0d4:	ldr	x8, [sp, #48]
  42c0d8:	add	w9, w9, #0x1
  42c0dc:	b	42c09c <feof@plt+0x2939c>
  42c0e0:	mov	x10, x19
  42c0e4:	b	42c104 <feof@plt+0x29404>
  42c0e8:	mov	w8, #0x1                   	// #1
  42c0ec:	stur	w8, [x29, #-68]
  42c0f0:	ldr	w8, [sp, #60]
  42c0f4:	cmp	x19, w8, uxtw
  42c0f8:	mov	w8, #0x2                   	// #2
  42c0fc:	b.eq	42b7c0 <feof@plt+0x28ac0>  // b.none
  42c100:	mov	w10, #0x11                  	// #17
  42c104:	ldr	w11, [sp, #60]
  42c108:	and	w9, w21, #0xff
  42c10c:	mov	x19, xzr
  42c110:	cmp	w9, #0x29
  42c114:	mov	w8, #0x2                   	// #2
  42c118:	str	wzr, [sp, #60]
  42c11c:	b.eq	42b7c0 <feof@plt+0x28ac0>  // b.none
  42c120:	ldur	w8, [x29, #-68]
  42c124:	cmp	w9, #0xa
  42c128:	mov	x19, x10
  42c12c:	str	w11, [sp, #60]
  42c130:	b.ne	42b7c0 <feof@plt+0x28ac0>  // b.any
  42c134:	ldrb	w8, [x23, #16]
  42c138:	cbnz	w8, 42c94c <feof@plt+0x29c4c>
  42c13c:	ldrb	w8, [x23, #25]
  42c140:	cbz	w8, 42c158 <feof@plt+0x29458>
  42c144:	ldr	x8, [x23]
  42c148:	ldr	x9, [x8, #16]
  42c14c:	ldr	x8, [x8, #32]
  42c150:	cmp	x9, x8
  42c154:	b.cs	42c94c <feof@plt+0x29c4c>  // b.hs, b.nlast
  42c158:	sub	x19, x27, x26
  42c15c:	str	w11, [sp, #60]
  42c160:	str	x10, [sp, #64]
  42c164:	cbz	x25, 42c1b0 <feof@plt+0x294b0>
  42c168:	ldp	x0, x8, [x22, #16]
  42c16c:	ldur	w21, [x29, #-68]
  42c170:	sub	x28, x8, x0
  42c174:	subs	x27, x19, x28
  42c178:	b.ls	42c22c <feof@plt+0x2952c>  // b.plast
  42c17c:	mov	x1, x26
  42c180:	mov	x2, x28
  42c184:	bl	402640 <memcpy@plt>
  42c188:	ldr	x8, [x22, #16]
  42c18c:	mov	x0, x23
  42c190:	mov	x1, x22
  42c194:	mov	x2, x27
  42c198:	add	x8, x8, x28
  42c19c:	str	x8, [x22, #16]
  42c1a0:	add	x26, x26, x28
  42c1a4:	bl	42da28 <feof@plt+0x2ad28>
  42c1a8:	mov	x22, x0
  42c1ac:	b	42c230 <feof@plt+0x29530>
  42c1b0:	ldr	x25, [x28]
  42c1b4:	ldur	w21, [x29, #-68]
  42c1b8:	cbz	x25, 42c238 <feof@plt+0x29538>
  42c1bc:	ldr	x8, [x25, #24]
  42c1c0:	ldr	x9, [x25, #8]
  42c1c4:	add	x10, x19, x19, lsl #1
  42c1c8:	sub	x8, x8, x9
  42c1cc:	mov	w9, #0x1f40                	// #8000
  42c1d0:	cmp	x8, x19
  42c1d4:	add	x9, x9, x10, lsr #1
  42c1d8:	b.cc	42c1ec <feof@plt+0x294ec>  // b.lo, b.ul, b.last
  42c1dc:	cmp	x8, x9
  42c1e0:	b.hi	42c1ec <feof@plt+0x294ec>  // b.pmore
  42c1e4:	mov	x8, x28
  42c1e8:	b	42c214 <feof@plt+0x29514>
  42c1ec:	mov	x8, x25
  42c1f0:	ldr	x25, [x25]
  42c1f4:	cbz	x25, 42c238 <feof@plt+0x29538>
  42c1f8:	ldr	x10, [x25, #24]
  42c1fc:	ldr	x11, [x25, #8]
  42c200:	sub	x10, x10, x11
  42c204:	cmp	x10, x19
  42c208:	b.cc	42c1ec <feof@plt+0x294ec>  // b.lo, b.ul, b.last
  42c20c:	cmp	x10, x9
  42c210:	b.hi	42c1ec <feof@plt+0x294ec>  // b.pmore
  42c214:	ldr	x9, [x25]
  42c218:	str	x9, [x8]
  42c21c:	ldr	x8, [x25, #8]
  42c220:	str	xzr, [x25]
  42c224:	str	x8, [x25, #16]
  42c228:	b	42c260 <feof@plt+0x29560>
  42c22c:	mov	x27, x19
  42c230:	ldur	x28, [x29, #-56]
  42c234:	b	42c268 <feof@plt+0x29568>
  42c238:	mov	w8, #0x1f40                	// #8000
  42c23c:	cmp	x19, x8
  42c240:	csel	x8, x19, x8, hi  // hi = pmore
  42c244:	add	x8, x8, #0x7
  42c248:	and	x20, x8, #0xfffffffffffffff8
  42c24c:	add	x0, x20, #0x20
  42c250:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42c254:	add	x25, x0, x20
  42c258:	stp	x0, x25, [x25, #16]
  42c25c:	stp	xzr, x0, [x25]
  42c260:	mov	x27, x19
  42c264:	mov	x22, x25
  42c268:	ldr	x0, [x22, #16]
  42c26c:	mov	x1, x26
  42c270:	mov	x2, x27
  42c274:	bl	402640 <memcpy@plt>
  42c278:	ldr	x8, [x22, #16]
  42c27c:	add	x8, x8, x27
  42c280:	str	x8, [x22, #16]
  42c284:	ldr	x8, [x23]
  42c288:	ldr	x9, [x8]
  42c28c:	ldr	x10, [x8, #32]
  42c290:	cmp	x9, x10
  42c294:	b.cs	42c2dc <feof@plt+0x295dc>  // b.hs, b.nlast
  42c298:	ldr	x0, [x23, #40]
  42c29c:	mov	w10, #0x18                  	// #24
  42c2a0:	mov	w2, wzr
  42c2a4:	ldr	w8, [x0, #12]
  42c2a8:	ldr	x9, [x0]
  42c2ac:	sub	w8, w8, #0x1
  42c2b0:	smaddl	x8, w8, w10, x9
  42c2b4:	ldr	w9, [x0, #60]
  42c2b8:	ldr	w10, [x8]
  42c2bc:	ldrb	w11, [x8, #6]
  42c2c0:	ldr	w8, [x8, #16]
  42c2c4:	sub	w9, w9, w10
  42c2c8:	lsr	w9, w9, w11
  42c2cc:	add	w8, w8, w9
  42c2d0:	add	w1, w8, #0x1
  42c2d4:	bl	42ebc8 <feof@plt+0x2bec8>
  42c2d8:	ldr	x8, [x23]
  42c2dc:	mov	w9, #0x1                   	// #1
  42c2e0:	mov	x0, x23
  42c2e4:	mov	w1, wzr
  42c2e8:	strb	w9, [x8, #104]
  42c2ec:	str	x24, [x8]
  42c2f0:	bl	4291e4 <feof@plt+0x264e4>
  42c2f4:	ldrb	w8, [x23, #16]
  42c2f8:	ldur	x24, [x29, #-48]
  42c2fc:	cbnz	w8, 42c848 <feof@plt+0x29b48>
  42c300:	ldr	x8, [x23]
  42c304:	add	x24, x19, x24
  42c308:	ldrb	w9, [x8, #104]
  42c30c:	cbz	w9, 42c388 <feof@plt+0x29688>
  42c310:	ldr	x10, [x8, #16]
  42c314:	ldr	x9, [x8, #32]
  42c318:	cmp	x10, x9
  42c31c:	b.cc	42c37c <feof@plt+0x2967c>  // b.lo, b.ul, b.last
  42c320:	ldrb	w11, [x23, #25]
  42c324:	cbnz	w11, 42c848 <feof@plt+0x29b48>
  42c328:	ldrb	w20, [x8, #105]
  42c32c:	cmp	x10, x9
  42c330:	b.ls	42c348 <feof@plt+0x29648>  // b.plast
  42c334:	ldr	x10, [x8, #24]
  42c338:	cmp	x10, x9
  42c33c:	b.eq	42c348 <feof@plt+0x29648>  // b.none
  42c340:	tbnz	w20, #1, 42c348 <feof@plt+0x29648>
  42c344:	str	x9, [x8, #16]
  42c348:	mov	x0, x23
  42c34c:	bl	4206a4 <feof@plt+0x1d9a4>
  42c350:	ldr	x8, [x23]
  42c354:	cmp	x8, #0x0
  42c358:	cset	w9, ne  // ne = any
  42c35c:	tst	w20, #0x4
  42c360:	cset	w10, eq  // eq = none
  42c364:	and	w9, w10, w9
  42c368:	and	w19, w19, w9
  42c36c:	tbnz	w20, #2, 42c374 <feof@plt+0x29674>
  42c370:	cbnz	x8, 42c308 <feof@plt+0x29608>
  42c374:	tbnz	w19, #0, 42c388 <feof@plt+0x29688>
  42c378:	b	42c848 <feof@plt+0x29b48>
  42c37c:	mov	x0, x23
  42c380:	bl	428c88 <feof@plt+0x25f88>
  42c384:	ldr	x8, [x23]
  42c388:	ldr	x27, [x8]
  42c38c:	ldr	x9, [x8, #48]
  42c390:	ldr	w8, [x8, #56]
  42c394:	ldr	x19, [sp, #64]
  42c398:	stur	x24, [x29, #-48]
  42c39c:	mov	x26, x27
  42c3a0:	add	x20, x9, x8, lsl #4
  42c3a4:	mov	w8, w21
  42c3a8:	b	42b7c0 <feof@plt+0x28ac0>
  42c3ac:	ldr	w21, [sp, #36]
  42c3b0:	mov	x24, x27
  42c3b4:	ldrb	w8, [x23, #1161]
  42c3b8:	cbz	w8, 42c470 <feof@plt+0x29770>
  42c3bc:	ldrb	w11, [x24]
  42c3c0:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42c3c4:	add	x19, x19, #0x3c4
  42c3c8:	cmp	x11, #0x5f
  42c3cc:	b.ne	42c3dc <feof@plt+0x296dc>  // b.any
  42c3d0:	ldrb	w8, [x24, #1]
  42c3d4:	cmp	w8, #0x5f
  42c3d8:	b.ne	42c444 <feof@plt+0x29744>  // b.any
  42c3dc:	ldrh	w8, [x19, x11, lsl #1]
  42c3e0:	tbz	w8, #9, 42c444 <feof@plt+0x29744>
  42c3e4:	mov	x8, x24
  42c3e8:	ldrb	w10, [x8, #1]!
  42c3ec:	mov	w9, #0x204                 	// #516
  42c3f0:	sub	w11, w11, #0x71
  42c3f4:	ldrh	w12, [x19, x10, lsl #1]
  42c3f8:	tst	w12, w9
  42c3fc:	b.eq	42c420 <feof@plt+0x29720>  // b.none
  42c400:	mov	w12, #0x43                  	// #67
  42c404:	mul	w11, w11, w12
  42c408:	add	w11, w11, w10, uxtb
  42c40c:	ldrb	w10, [x8, #1]!
  42c410:	sub	w11, w11, #0x71
  42c414:	ldrh	w13, [x19, x10, lsl #1]
  42c418:	tst	w13, w9
  42c41c:	b.ne	42c404 <feof@plt+0x29704>  // b.any
  42c420:	ldr	x0, [x23, #1088]
  42c424:	sub	x2, x8, x24
  42c428:	add	w3, w11, w2
  42c42c:	mov	x1, x24
  42c430:	mov	w4, wzr
  42c434:	bl	436a60 <feof@plt+0x33d60>
  42c438:	cbz	x0, 42c444 <feof@plt+0x29744>
  42c43c:	ldrb	w8, [x0, #18]
  42c440:	tbnz	w8, #1, 42c8e8 <feof@plt+0x29be8>
  42c444:	ldrb	w8, [x24]
  42c448:	ldrh	w8, [x19, x8, lsl #1]
  42c44c:	tbz	w8, #9, 42c470 <feof@plt+0x29770>
  42c450:	mov	w0, w21
  42c454:	bl	423530 <feof@plt+0x20830>
  42c458:	mov	w21, w0
  42c45c:	mov	w8, #0x204                 	// #516
  42c460:	ldrb	w9, [x24, #1]!
  42c464:	ldrh	w9, [x19, x9, lsl #1]
  42c468:	tst	w9, w8
  42c46c:	b.ne	42c460 <feof@plt+0x29760>  // b.any
  42c470:	ldr	x8, [x23]
  42c474:	sub	x22, x24, x26
  42c478:	str	x24, [x8]
  42c47c:	cbz	x25, 42c504 <feof@plt+0x29804>
  42c480:	ldur	x8, [x29, #-48]
  42c484:	mov	x0, x23
  42c488:	add	x19, x22, x8
  42c48c:	add	x1, x19, #0x1
  42c490:	bl	42d11c <feof@plt+0x2a41c>
  42c494:	ldr	x8, [sp, #40]
  42c498:	mov	x20, x0
  42c49c:	str	w19, [x8, #8]
  42c4a0:	mov	x19, x25
  42c4a4:	strb	w21, [x8, #4]
  42c4a8:	str	x0, [x8, #16]
  42c4ac:	ldp	x1, x8, [x19, #8]
  42c4b0:	mov	x0, x20
  42c4b4:	sub	x2, x8, x1
  42c4b8:	bl	402640 <memcpy@plt>
  42c4bc:	ldp	x9, x8, [x19, #8]
  42c4c0:	ldr	x19, [x19]
  42c4c4:	sub	x8, x8, x9
  42c4c8:	add	x20, x20, x8
  42c4cc:	cbnz	x19, 42c4ac <feof@plt+0x297ac>
  42c4d0:	mov	x9, x25
  42c4d4:	mov	x8, x9
  42c4d8:	ldr	x9, [x9]
  42c4dc:	cbnz	x9, 42c4d4 <feof@plt+0x297d4>
  42c4e0:	ldr	x9, [x28]
  42c4e4:	mov	x0, x20
  42c4e8:	mov	x1, x26
  42c4ec:	mov	x2, x22
  42c4f0:	str	x9, [x8]
  42c4f4:	str	x25, [x28]
  42c4f8:	bl	402640 <memcpy@plt>
  42c4fc:	strb	wzr, [x20, x22]
  42c500:	b	42c828 <feof@plt+0x29b28>
  42c504:	add	w1, w22, #0x1
  42c508:	mov	x0, x23
  42c50c:	bl	42d11c <feof@plt+0x2a41c>
  42c510:	and	x23, x22, #0xffffffff
  42c514:	mov	x1, x26
  42c518:	mov	x2, x23
  42c51c:	mov	x20, x0
  42c520:	bl	402640 <memcpy@plt>
  42c524:	ldr	x8, [sp, #40]
  42c528:	strb	wzr, [x20, x23]
  42c52c:	strb	w21, [x8, #4]
  42c530:	str	w22, [x8, #8]
  42c534:	str	x20, [x8, #16]
  42c538:	b	42c828 <feof@plt+0x29b28>
  42c53c:	mov	w22, #0x3f                  	// #63
  42c540:	mov	w24, #0x22                  	// #34
  42c544:	mov	w8, wzr
  42c548:	b	42c590 <feof@plt+0x29890>
  42c54c:	mov	w22, #0x41                  	// #65
  42c550:	mov	w24, #0x22                  	// #34
  42c554:	mov	w8, wzr
  42c558:	b	42c590 <feof@plt+0x29890>
  42c55c:	mov	w22, #0x3e                  	// #62
  42c560:	mov	w24, #0x22                  	// #34
  42c564:	mov	w8, wzr
  42c568:	b	42c590 <feof@plt+0x29890>
  42c56c:	mov	w22, #0x39                  	// #57
  42c570:	b	42c580 <feof@plt+0x29880>
  42c574:	mov	w22, #0x3b                  	// #59
  42c578:	b	42c580 <feof@plt+0x29880>
  42c57c:	mov	w22, #0x38                  	// #56
  42c580:	mov	w24, #0x27                  	// #39
  42c584:	mov	w8, wzr
  42c588:	b	42c590 <feof@plt+0x29890>
  42c58c:	add	x12, x23, #0x2
  42c590:	mov	x23, x12
  42c594:	ldrb	w9, [x12], #1
  42c598:	cmp	w9, #0x5c
  42c59c:	b.ne	42c5b8 <feof@plt+0x298b8>  // b.any
  42c5a0:	ldur	x10, [x29, #-64]
  42c5a4:	ldrb	w10, [x10, #19]
  42c5a8:	cbnz	w10, 42c5b8 <feof@plt+0x298b8>
  42c5ac:	ldrb	w10, [x12]
  42c5b0:	cmp	w10, #0xa
  42c5b4:	b.ne	42c58c <feof@plt+0x2988c>  // b.any
  42c5b8:	cmp	w24, w9
  42c5bc:	b.eq	42c5d8 <feof@plt+0x298d8>  // b.none
  42c5c0:	cbz	w9, 42c5d0 <feof@plt+0x298d0>
  42c5c4:	cmp	w9, #0xa
  42c5c8:	b.ne	42c590 <feof@plt+0x29890>  // b.any
  42c5cc:	b	42c604 <feof@plt+0x29904>
  42c5d0:	mov	w8, #0x1                   	// #1
  42c5d4:	b	42c590 <feof@plt+0x29890>
  42c5d8:	mov	x23, x12
  42c5dc:	tbz	w8, #0, 42c620 <feof@plt+0x29920>
  42c5e0:	ldur	x8, [x29, #-64]
  42c5e4:	ldrb	w8, [x8, #18]
  42c5e8:	cbnz	w8, 42c620 <feof@plt+0x29920>
  42c5ec:	ldur	x0, [x29, #-64]
  42c5f0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c5f4:	add	x2, x2, #0x3f
  42c5f8:	mov	w1, wzr
  42c5fc:	bl	4223e4 <feof@plt+0x1f6e4>
  42c600:	b	42c620 <feof@plt+0x29920>
  42c604:	cmp	w24, #0x3e
  42c608:	b.ne	42c618 <feof@plt+0x29918>  // b.any
  42c60c:	mov	w8, #0x3                   	// #3
  42c610:	strb	w8, [x21, #4]
  42c614:	b	42c828 <feof@plt+0x29b28>
  42c618:	mov	w22, #0x3d                  	// #61
  42c61c:	tbnz	w8, #0, 42c5e0 <feof@plt+0x298e0>
  42c620:	ldur	x19, [x29, #-64]
  42c624:	cmp	w22, #0x3d
  42c628:	b.ne	42c650 <feof@plt+0x29950>  // b.any
  42c62c:	ldr	w8, [x19, #1116]
  42c630:	cmp	w8, #0x15
  42c634:	b.eq	42c650 <feof@plt+0x29950>  // b.none
  42c638:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c63c:	add	x2, x2, #0x66
  42c640:	mov	w1, #0x2                   	// #2
  42c644:	mov	x0, x19
  42c648:	mov	w3, w24
  42c64c:	bl	4223e4 <feof@plt+0x1f6e4>
  42c650:	ldrb	w8, [x19, #1161]
  42c654:	cbz	w8, 42c720 <feof@plt+0x29a20>
  42c658:	ldrb	w12, [x23]
  42c65c:	cmp	x12, #0x5f
  42c660:	b.ne	42c670 <feof@plt+0x29970>  // b.any
  42c664:	ldrb	w8, [x23, #1]
  42c668:	cmp	w8, #0x5f
  42c66c:	b.ne	42c6e4 <feof@plt+0x299e4>  // b.any
  42c670:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42c674:	add	x9, x9, #0x3c4
  42c678:	ldrh	w8, [x9, x12, lsl #1]
  42c67c:	tbz	w8, #9, 42c6e4 <feof@plt+0x299e4>
  42c680:	mov	x8, x23
  42c684:	ldrb	w11, [x8, #1]!
  42c688:	mov	w10, #0x204                 	// #516
  42c68c:	sub	w12, w12, #0x71
  42c690:	ldrh	w13, [x9, x11, lsl #1]
  42c694:	tst	w13, w10
  42c698:	b.eq	42c6bc <feof@plt+0x299bc>  // b.none
  42c69c:	mov	w13, #0x43                  	// #67
  42c6a0:	mul	w12, w12, w13
  42c6a4:	add	w12, w12, w11, uxtb
  42c6a8:	ldrb	w11, [x8, #1]!
  42c6ac:	sub	w12, w12, #0x71
  42c6b0:	ldrh	w14, [x9, x11, lsl #1]
  42c6b4:	tst	w14, w10
  42c6b8:	b.ne	42c6a0 <feof@plt+0x299a0>  // b.any
  42c6bc:	ldur	x9, [x29, #-64]
  42c6c0:	sub	x2, x8, x23
  42c6c4:	add	w3, w12, w2
  42c6c8:	mov	x1, x23
  42c6cc:	ldr	x0, [x9, #1088]
  42c6d0:	mov	w4, wzr
  42c6d4:	bl	436a60 <feof@plt+0x33d60>
  42c6d8:	cbz	x0, 42c6e4 <feof@plt+0x299e4>
  42c6dc:	ldrb	w8, [x0, #18]
  42c6e0:	tbnz	w8, #1, 42c7c0 <feof@plt+0x29ac0>
  42c6e4:	ldrb	w8, [x23]
  42c6e8:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42c6ec:	add	x19, x19, #0x3c4
  42c6f0:	ldrh	w8, [x19, x8, lsl #1]
  42c6f4:	tbz	w8, #9, 42c7ec <feof@plt+0x29aec>
  42c6f8:	mov	w0, w22
  42c6fc:	bl	423558 <feof@plt+0x20858>
  42c700:	bl	423530 <feof@plt+0x20830>
  42c704:	mov	w22, w0
  42c708:	mov	w8, #0x204                 	// #516
  42c70c:	ldrb	w9, [x23, #1]!
  42c710:	ldrh	w9, [x19, x9, lsl #1]
  42c714:	tst	w9, w8
  42c718:	b.ne	42c70c <feof@plt+0x29a0c>  // b.any
  42c71c:	b	42c7ec <feof@plt+0x29aec>
  42c720:	ldrb	w8, [x19, #1199]
  42c724:	cbz	w8, 42c7ec <feof@plt+0x29aec>
  42c728:	ldrb	w12, [x23]
  42c72c:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42c730:	add	x9, x9, #0x3c4
  42c734:	ldrh	w8, [x9, x12, lsl #1]
  42c738:	tbz	w8, #9, 42c7ec <feof@plt+0x29aec>
  42c73c:	mov	x8, x23
  42c740:	ldrb	w11, [x8, #1]!
  42c744:	mov	w10, #0x204                 	// #516
  42c748:	sub	w12, w12, #0x71
  42c74c:	ldrh	w13, [x9, x11, lsl #1]
  42c750:	tst	w13, w10
  42c754:	b.eq	42c778 <feof@plt+0x29a78>  // b.none
  42c758:	mov	w13, #0x43                  	// #67
  42c75c:	mul	w12, w12, w13
  42c760:	add	w12, w12, w11, uxtb
  42c764:	ldrb	w11, [x8, #1]!
  42c768:	sub	w12, w12, #0x71
  42c76c:	ldrh	w14, [x9, x11, lsl #1]
  42c770:	tst	w14, w10
  42c774:	b.ne	42c75c <feof@plt+0x29a5c>  // b.any
  42c778:	ldur	x9, [x29, #-64]
  42c77c:	sub	x2, x8, x23
  42c780:	add	w3, w12, w2
  42c784:	mov	x1, x23
  42c788:	ldr	x0, [x9, #1088]
  42c78c:	mov	w4, wzr
  42c790:	bl	436a60 <feof@plt+0x33d60>
  42c794:	cbz	x0, 42c7ec <feof@plt+0x29aec>
  42c798:	ldrb	w8, [x0, #18]
  42c79c:	tbz	w8, #1, 42c7ec <feof@plt+0x29aec>
  42c7a0:	ldur	x0, [x29, #-64]
  42c7a4:	ldrb	w8, [x0, #18]
  42c7a8:	cbnz	w8, 42c7ec <feof@plt+0x29aec>
  42c7ac:	ldr	w2, [x21]
  42c7b0:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c7b4:	add	x4, x4, #0xda
  42c7b8:	mov	w1, #0x17                  	// #23
  42c7bc:	b	42c7e4 <feof@plt+0x29ae4>
  42c7c0:	ldur	x0, [x29, #-64]
  42c7c4:	ldrb	w8, [x0, #1162]
  42c7c8:	cbz	w8, 42c7ec <feof@plt+0x29aec>
  42c7cc:	ldrb	w8, [x0, #18]
  42c7d0:	cbnz	w8, 42c7ec <feof@plt+0x29aec>
  42c7d4:	ldr	w2, [x21]
  42c7d8:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c7dc:	add	x4, x4, #0x87
  42c7e0:	mov	w1, #0x13                  	// #19
  42c7e4:	mov	w3, wzr
  42c7e8:	bl	4229a0 <feof@plt+0x1fca0>
  42c7ec:	ldur	x0, [x29, #-64]
  42c7f0:	sub	x19, x23, x26
  42c7f4:	add	w1, w19, #0x1
  42c7f8:	ldr	x8, [x0]
  42c7fc:	str	x23, [x8]
  42c800:	bl	42d11c <feof@plt+0x2a41c>
  42c804:	and	x23, x19, #0xffffffff
  42c808:	mov	x1, x26
  42c80c:	mov	x2, x23
  42c810:	mov	x20, x0
  42c814:	bl	402640 <memcpy@plt>
  42c818:	strb	wzr, [x20, x23]
  42c81c:	strb	w22, [x21, #4]
  42c820:	str	w19, [x21, #8]
  42c824:	str	x20, [x21, #16]
  42c828:	ldp	x20, x19, [sp, #224]
  42c82c:	ldp	x22, x21, [sp, #208]
  42c830:	ldp	x24, x23, [sp, #192]
  42c834:	ldp	x26, x25, [sp, #176]
  42c838:	ldp	x28, x27, [sp, #160]
  42c83c:	ldp	x29, x30, [sp, #144]
  42c840:	add	sp, sp, #0xf0
  42c844:	ret
  42c848:	ldr	x10, [sp, #40]
  42c84c:	mov	w8, #0x16                  	// #22
  42c850:	mov	w9, #0x40                  	// #64
  42c854:	strb	w8, [x10, #4]
  42c858:	ldr	x8, [x23, #40]
  42c85c:	ldr	w2, [x10]
  42c860:	ldr	w8, [x8, #60]
  42c864:	strh	w9, [x10, #6]
  42c868:	str	w8, [x10]
  42c86c:	cbz	x25, 42c88c <feof@plt+0x29b8c>
  42c870:	mov	x9, x25
  42c874:	mov	x8, x9
  42c878:	ldr	x9, [x9]
  42c87c:	cbnz	x9, 42c874 <feof@plt+0x29b74>
  42c880:	ldr	x9, [x28]
  42c884:	str	x9, [x8]
  42c888:	str	x25, [x28]
  42c88c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c890:	add	x4, x4, #0x1a8
  42c894:	mov	w1, #0x3                   	// #3
  42c898:	mov	x0, x23
  42c89c:	mov	w3, wzr
  42c8a0:	bl	4228a4 <feof@plt+0x1fba4>
  42c8a4:	b	42c828 <feof@plt+0x29b28>
  42c8a8:	ldr	x8, [x23]
  42c8ac:	cmp	w11, #0x10
  42c8b0:	ldr	w8, [x8, #8]
  42c8b4:	sub	w8, w27, w8
  42c8b8:	add	w3, w8, #0x1
  42c8bc:	b.ne	42c91c <feof@plt+0x29c1c>  // b.any
  42c8c0:	ldr	x21, [sp, #40]
  42c8c4:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c8c8:	add	x4, x4, #0x121
  42c8cc:	mov	w1, #0x3                   	// #3
  42c8d0:	ldr	w2, [x21]
  42c8d4:	mov	x0, x23
  42c8d8:	bl	4228a4 <feof@plt+0x1fba4>
  42c8dc:	ldp	x20, x24, [sp, #16]
  42c8e0:	ldr	x19, [sp, #8]
  42c8e4:	b	42c994 <feof@plt+0x29c94>
  42c8e8:	ldrb	w8, [x23, #1162]
  42c8ec:	cbz	w8, 42c470 <feof@plt+0x29770>
  42c8f0:	ldrb	w8, [x23, #18]
  42c8f4:	cbnz	w8, 42c470 <feof@plt+0x29770>
  42c8f8:	ldr	x8, [sp, #40]
  42c8fc:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c900:	add	x4, x4, #0x87
  42c904:	mov	w1, #0x13                  	// #19
  42c908:	ldr	w2, [x8]
  42c90c:	mov	x0, x23
  42c910:	mov	w3, wzr
  42c914:	bl	4229a0 <feof@plt+0x1fca0>
  42c918:	b	42c470 <feof@plt+0x29770>
  42c91c:	ldr	x8, [sp, #40]
  42c920:	ldp	x20, x24, [sp, #16]
  42c924:	ldr	x19, [sp, #8]
  42c928:	cmp	w5, #0xa
  42c92c:	ldr	w2, [x8]
  42c930:	b.ne	42c97c <feof@plt+0x29c7c>  // b.any
  42c934:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c938:	add	x4, x4, #0x150
  42c93c:	mov	w1, #0x3                   	// #3
  42c940:	mov	x0, x23
  42c944:	bl	4228a4 <feof@plt+0x1fba4>
  42c948:	b	42c990 <feof@plt+0x29c90>
  42c94c:	ldr	x8, [sp, #40]
  42c950:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c954:	add	x4, x4, #0x1a8
  42c958:	mov	w1, #0x3                   	// #3
  42c95c:	ldr	w2, [x8]
  42c960:	mov	x0, x23
  42c964:	mov	w3, wzr
  42c968:	bl	4228a4 <feof@plt+0x1fba4>
  42c96c:	mov	w21, #0x3d                  	// #61
  42c970:	ldrb	w8, [x23, #1161]
  42c974:	cbnz	w8, 42c3bc <feof@plt+0x296bc>
  42c978:	b	42c470 <feof@plt+0x29770>
  42c97c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  42c980:	add	x4, x4, #0x179
  42c984:	mov	w1, #0x3                   	// #3
  42c988:	mov	x0, x23
  42c98c:	bl	4228a4 <feof@plt+0x1fba4>
  42c990:	ldr	x21, [sp, #40]
  42c994:	ldr	x8, [x23]
  42c998:	eor	x9, x24, #0xffffffff
  42c99c:	add	x19, x9, x19
  42c9a0:	add	w1, w19, #0x1
  42c9a4:	mov	x0, x23
  42c9a8:	str	x20, [x8]
  42c9ac:	bl	42d11c <feof@plt+0x2a41c>
  42c9b0:	and	x22, x19, #0xffffffff
  42c9b4:	mov	x1, x24
  42c9b8:	mov	x2, x22
  42c9bc:	mov	x20, x0
  42c9c0:	bl	402640 <memcpy@plt>
  42c9c4:	mov	w8, #0x3d                  	// #61
  42c9c8:	strb	wzr, [x20, x22]
  42c9cc:	str	w19, [x21, #8]
  42c9d0:	strb	w8, [x21, #4]
  42c9d4:	str	x20, [x21, #16]
  42c9d8:	cbz	x25, 42c828 <feof@plt+0x29b28>
  42c9dc:	mov	x9, x25
  42c9e0:	mov	x8, x9
  42c9e4:	ldr	x9, [x9]
  42c9e8:	cbnz	x9, 42c9e0 <feof@plt+0x29ce0>
  42c9ec:	ldr	x9, [x28]
  42c9f0:	str	x9, [x8]
  42c9f4:	str	x25, [x28]
  42c9f8:	b	42c828 <feof@plt+0x29b28>
  42c9fc:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42ca00:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42ca04:	add	x0, x0, #0xd20
  42ca08:	add	x2, x2, #0x112
  42ca0c:	mov	w1, #0x6f0                 	// #1776
  42ca10:	bl	408b70 <feof@plt+0x5e70>
  42ca14:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42ca18:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42ca1c:	add	x0, x0, #0xd20
  42ca20:	add	x2, x2, #0x112
  42ca24:	mov	w1, #0x6e1                 	// #1761
  42ca28:	bl	408b70 <feof@plt+0x5e70>
  42ca2c:	stp	x29, x30, [sp, #-80]!
  42ca30:	stp	x24, x23, [sp, #32]
  42ca34:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42ca38:	stp	x22, x21, [sp, #48]
  42ca3c:	stp	x20, x19, [sp, #64]
  42ca40:	mov	x20, x4
  42ca44:	mov	x22, x3
  42ca48:	mov	x21, x1
  42ca4c:	mov	x19, x0
  42ca50:	add	x23, x23, #0x3c4
  42ca54:	str	x25, [sp, #16]
  42ca58:	mov	x29, sp
  42ca5c:	tbnz	w2, #0, 42cac8 <feof@plt+0x29dc8>
  42ca60:	ldr	x8, [x19]
  42ca64:	ldrb	w12, [x21]
  42ca68:	mov	w9, #0x204                 	// #516
  42ca6c:	ldr	x24, [x8]
  42ca70:	sub	w25, w12, #0x71
  42ca74:	ldrb	w10, [x24]
  42ca78:	ldrh	w11, [x23, x10, lsl #1]
  42ca7c:	tst	w11, w9
  42ca80:	b.eq	42caa4 <feof@plt+0x29da4>  // b.none
  42ca84:	mov	w11, #0x43                  	// #67
  42ca88:	mul	w12, w25, w11
  42ca8c:	add	w12, w12, w10, uxtb
  42ca90:	ldrb	w10, [x24, #1]!
  42ca94:	sub	w25, w12, #0x71
  42ca98:	ldrh	w13, [x23, x10, lsl #1]
  42ca9c:	tst	w13, w9
  42caa0:	b.ne	42ca88 <feof@plt+0x29d88>  // b.any
  42caa4:	ldurb	w9, [x24, #-1]
  42caa8:	mov	x0, x19
  42caac:	mov	w1, wzr
  42cab0:	mov	x2, x22
  42cab4:	strb	wzr, [x22, #4]
  42cab8:	str	w9, [x22]
  42cabc:	str	x24, [x8]
  42cac0:	bl	42cc84 <feof@plt+0x29f84>
  42cac4:	tbz	w0, #0, 42cb5c <feof@plt+0x29e5c>
  42cac8:	mov	w24, #0x204                 	// #516
  42cacc:	b	42cae4 <feof@plt+0x29de4>
  42cad0:	mov	x0, x19
  42cad4:	mov	w1, wzr
  42cad8:	mov	x2, x22
  42cadc:	bl	42cc84 <feof@plt+0x29f84>
  42cae0:	tbz	w0, #0, 42cb24 <feof@plt+0x29e24>
  42cae4:	ldr	x8, [x19]
  42cae8:	ldr	x10, [x8]
  42caec:	ldrb	w9, [x10]
  42caf0:	ldrh	w11, [x23, x9, lsl #1]
  42caf4:	tst	w11, w24
  42caf8:	b.eq	42cad0 <feof@plt+0x29dd0>  // b.none
  42cafc:	add	x10, x10, #0x1
  42cb00:	and	w9, w9, #0xff
  42cb04:	strb	wzr, [x22, #4]
  42cb08:	str	w9, [x22]
  42cb0c:	str	x10, [x8]
  42cb10:	ldrb	w9, [x10], #1
  42cb14:	ldrh	w11, [x23, x9, lsl #1]
  42cb18:	tst	w11, w24
  42cb1c:	b.ne	42cb00 <feof@plt+0x29e00>  // b.any
  42cb20:	b	42cad0 <feof@plt+0x29dd0>
  42cb24:	ldr	x8, [x19]
  42cb28:	mov	x0, x19
  42cb2c:	mov	x1, x21
  42cb30:	ldr	x8, [x8]
  42cb34:	sub	x2, x8, x21
  42cb38:	bl	41c524 <feof@plt+0x19824>
  42cb3c:	ldr	x8, [x19]
  42cb40:	mov	x22, x0
  42cb44:	mov	x0, x19
  42cb48:	mov	x1, x21
  42cb4c:	ldr	w8, [x8]
  42cb50:	sub	w2, w8, w21
  42cb54:	bl	428bc4 <feof@plt+0x25ec4>
  42cb58:	b	42cb7c <feof@plt+0x29e7c>
  42cb5c:	ldr	x0, [x19, #1088]
  42cb60:	sub	x8, x24, x21
  42cb64:	add	w3, w25, w8
  42cb68:	and	x2, x8, #0xffffffff
  42cb6c:	mov	w4, #0x1                   	// #1
  42cb70:	mov	x1, x21
  42cb74:	bl	436a60 <feof@plt+0x33d60>
  42cb78:	mov	x22, x0
  42cb7c:	str	x0, [x20]
  42cb80:	ldrh	w8, [x22, #18]
  42cb84:	tbz	w8, #4, 42cb90 <feof@plt+0x29e90>
  42cb88:	ldrb	w9, [x19, #18]
  42cb8c:	cbz	w9, 42cbac <feof@plt+0x29eac>
  42cb90:	mov	x0, x22
  42cb94:	ldp	x20, x19, [sp, #64]
  42cb98:	ldp	x22, x21, [sp, #48]
  42cb9c:	ldp	x24, x23, [sp, #32]
  42cba0:	ldr	x25, [sp, #16]
  42cba4:	ldp	x29, x30, [sp], #80
  42cba8:	ret
  42cbac:	tbz	w8, #3, 42cbd0 <feof@plt+0x29ed0>
  42cbb0:	ldrb	w8, [x19, #23]
  42cbb4:	cbnz	w8, 42cbd0 <feof@plt+0x29ed0>
  42cbb8:	ldr	x3, [x22]
  42cbbc:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cbc0:	add	x2, x2, #0xe61
  42cbc4:	mov	w1, #0x3                   	// #3
  42cbc8:	mov	x0, x19
  42cbcc:	bl	4223e4 <feof@plt+0x1f6e4>
  42cbd0:	ldr	x8, [x19, #1272]
  42cbd4:	cmp	x22, x8
  42cbd8:	b.ne	42cc0c <feof@plt+0x29f0c>  // b.any
  42cbdc:	ldrb	w8, [x19, #22]
  42cbe0:	cbnz	w8, 42cc0c <feof@plt+0x29f0c>
  42cbe4:	ldrb	w8, [x19, #1120]
  42cbe8:	cbz	w8, 42cbf8 <feof@plt+0x29ef8>
  42cbec:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cbf0:	add	x2, x2, #0xe7e
  42cbf4:	b	42cc00 <feof@plt+0x29f00>
  42cbf8:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cbfc:	add	x2, x2, #0xec5
  42cc00:	mov	w1, #0x2                   	// #2
  42cc04:	mov	x0, x19
  42cc08:	bl	4223e4 <feof@plt+0x1f6e4>
  42cc0c:	ldr	x8, [x19, #1280]
  42cc10:	cmp	x22, x8
  42cc14:	b.ne	42cc60 <feof@plt+0x29f60>  // b.any
  42cc18:	ldrb	w8, [x19, #1154]
  42cc1c:	cbz	w8, 42cc28 <feof@plt+0x29f28>
  42cc20:	ldrb	w8, [x19, #1167]
  42cc24:	cbz	w8, 42cc3c <feof@plt+0x29f3c>
  42cc28:	ldrb	w8, [x19, #22]
  42cc2c:	cbnz	w8, 42cc60 <feof@plt+0x29f60>
  42cc30:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cc34:	add	x2, x2, #0xf64
  42cc38:	b	42cc54 <feof@plt+0x29f54>
  42cc3c:	ldr	x8, [x19]
  42cc40:	cbz	x8, 42cc4c <feof@plt+0x29f4c>
  42cc44:	ldrb	w8, [x8, #106]
  42cc48:	cbnz	w8, 42cc60 <feof@plt+0x29f60>
  42cc4c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cc50:	add	x2, x2, #0xf3c
  42cc54:	mov	w1, #0x2                   	// #2
  42cc58:	mov	x0, x19
  42cc5c:	bl	4223e4 <feof@plt+0x1f6e4>
  42cc60:	ldrb	w8, [x22, #19]
  42cc64:	tbz	w8, #1, 42cb90 <feof@plt+0x29e90>
  42cc68:	ldr	x3, [x22]
  42cc6c:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cc70:	add	x2, x2, #0xf0a
  42cc74:	mov	w1, #0xf                   	// #15
  42cc78:	mov	x0, x19
  42cc7c:	bl	422514 <feof@plt+0x1f814>
  42cc80:	b	42cb90 <feof@plt+0x29e90>
  42cc84:	stp	x29, x30, [sp, #-32]!
  42cc88:	str	x19, [sp, #16]
  42cc8c:	ldr	x19, [x0]
  42cc90:	mov	x29, sp
  42cc94:	ldr	x8, [x19]
  42cc98:	ldrb	w9, [x8]
  42cc9c:	cmp	w9, #0x24
  42cca0:	b.ne	42ccdc <feof@plt+0x29fdc>  // b.any
  42cca4:	ldrb	w9, [x0, #1146]
  42cca8:	cbz	w9, 42cd38 <feof@plt+0x2a038>
  42ccac:	add	x8, x8, #0x1
  42ccb0:	str	x8, [x19]
  42ccb4:	ldrb	w8, [x0, #1148]
  42ccb8:	cbz	w8, 42cd30 <feof@plt+0x2a030>
  42ccbc:	ldrb	w8, [x0, #18]
  42ccc0:	cbnz	w8, 42cd30 <feof@plt+0x2a030>
  42ccc4:	adrp	x2, 460000 <_obstack_memory_used@@Base+0xadd8>
  42ccc8:	add	x2, x2, #0x8f2
  42cccc:	mov	w1, #0x2                   	// #2
  42ccd0:	strb	wzr, [x0, #1148]
  42ccd4:	bl	4223e4 <feof@plt+0x1f6e4>
  42ccd8:	b	42cd30 <feof@plt+0x2a030>
  42ccdc:	ldrb	w10, [x0, #1147]
  42cce0:	cmp	w9, #0x5c
  42cce4:	ccmp	w10, #0x0, #0x4, eq  // eq = none
  42cce8:	b.eq	42cd38 <feof@plt+0x2a038>  // b.none
  42ccec:	ldrb	w9, [x8, #1]
  42ccf0:	orr	w9, w9, #0x20
  42ccf4:	cmp	w9, #0x75
  42ccf8:	b.ne	42cd38 <feof@plt+0x2a038>  // b.any
  42ccfc:	mov	x4, x2
  42cd00:	ldr	x2, [x19, #32]
  42cd04:	add	x8, x8, #0x2
  42cd08:	str	x8, [x19]
  42cd0c:	cmp	w1, #0x0
  42cd10:	mov	w8, #0x1                   	// #1
  42cd14:	cinc	w3, w8, eq  // eq = none
  42cd18:	add	x5, x29, #0x1c
  42cd1c:	mov	x1, x19
  42cd20:	mov	x6, xzr
  42cd24:	mov	x7, xzr
  42cd28:	bl	41adb0 <feof@plt+0x180b0>
  42cd2c:	tbz	w0, #0, 42cd48 <feof@plt+0x2a048>
  42cd30:	mov	w0, #0x1                   	// #1
  42cd34:	b	42cd3c <feof@plt+0x2a03c>
  42cd38:	mov	w0, wzr
  42cd3c:	ldr	x19, [sp, #16]
  42cd40:	ldp	x29, x30, [sp], #32
  42cd44:	ret
  42cd48:	ldr	x8, [x19]
  42cd4c:	mov	w0, wzr
  42cd50:	sub	x8, x8, #0x2
  42cd54:	str	x8, [x19]
  42cd58:	b	42cd3c <feof@plt+0x2a03c>
  42cd5c:	ldrb	w8, [x0, #4]
  42cd60:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cd64:	add	x9, x9, #0x718
  42cd68:	lsl	x8, x8, #4
  42cd6c:	ldr	w8, [x9, x8]
  42cd70:	cmp	w8, #0x1
  42cd74:	b.eq	42cd88 <feof@plt+0x2a088>  // b.none
  42cd78:	cmp	w8, #0x2
  42cd7c:	b.ne	42cd9c <feof@plt+0x2a09c>  // b.any
  42cd80:	ldr	w0, [x0, #8]
  42cd84:	ret
  42cd88:	ldr	x8, [x0, #8]
  42cd8c:	ldr	w8, [x8, #8]
  42cd90:	add	w8, w8, w8, lsl #2
  42cd94:	lsl	w0, w8, #1
  42cd98:	ret
  42cd9c:	mov	w0, #0x6                   	// #6
  42cda0:	ret
  42cda4:	stp	x29, x30, [sp, #-48]!
  42cda8:	stp	x22, x21, [sp, #16]
  42cdac:	stp	x20, x19, [sp, #32]
  42cdb0:	ldr	w8, [x1, #8]
  42cdb4:	mov	x19, x0
  42cdb8:	mov	x29, sp
  42cdbc:	cbz	w8, 42ce08 <feof@plt+0x2a108>
  42cdc0:	ldr	x21, [x1]
  42cdc4:	mov	x20, x1
  42cdc8:	mov	x22, xzr
  42cdcc:	b	42cde4 <feof@plt+0x2a0e4>
  42cdd0:	strb	w8, [x19], #1
  42cdd4:	ldr	w8, [x20, #8]
  42cdd8:	add	x22, x22, #0x1
  42cddc:	cmp	x22, x8
  42cde0:	b.cs	42ce08 <feof@plt+0x2a108>  // b.hs, b.nlast
  42cde4:	add	x1, x21, x22
  42cde8:	ldrsb	w8, [x1]
  42cdec:	tbz	w8, #31, 42cdd0 <feof@plt+0x2a0d0>
  42cdf0:	mov	x0, x19
  42cdf4:	bl	42ce1c <feof@plt+0x2a11c>
  42cdf8:	add	x8, x22, x0
  42cdfc:	sub	x22, x8, #0x1
  42ce00:	add	x19, x19, #0xa
  42ce04:	b	42cdd4 <feof@plt+0x2a0d4>
  42ce08:	mov	x0, x19
  42ce0c:	ldp	x20, x19, [sp, #32]
  42ce10:	ldp	x22, x21, [sp, #16]
  42ce14:	ldp	x29, x30, [sp], #48
  42ce18:	ret
  42ce1c:	stp	x29, x30, [sp, #-16]!
  42ce20:	ldrb	w9, [x1]
  42ce24:	mov	x29, sp
  42ce28:	tbnz	w9, #7, 42ce38 <feof@plt+0x2a138>
  42ce2c:	mov	x8, xzr
  42ce30:	and	x9, x9, #0x7f
  42ce34:	b	42ce9c <feof@plt+0x2a19c>
  42ce38:	mov	x8, xzr
  42ce3c:	mov	w10, w9
  42ce40:	mov	w11, w10
  42ce44:	lsl	w10, w10, #1
  42ce48:	sub	x8, x8, #0x1
  42ce4c:	tbnz	w11, #6, 42ce40 <feof@plt+0x2a140>
  42ce50:	mvn	x10, x8
  42ce54:	mov	w11, #0x3f                  	// #63
  42ce58:	lsr	x11, x11, x10
  42ce5c:	cmn	w8, #0x1
  42ce60:	and	x9, x11, x9
  42ce64:	b.eq	42ce98 <feof@plt+0x2a198>  // b.none
  42ce68:	add	x11, x1, #0x1
  42ce6c:	ldrb	w12, [x11]
  42ce70:	and	w13, w12, #0xc0
  42ce74:	cmp	w13, #0x80
  42ce78:	b.ne	42cf18 <feof@plt+0x2a218>  // b.any
  42ce7c:	bfi	x12, x9, #6, #58
  42ce80:	subs	w10, w10, #0x1
  42ce84:	mov	x9, x12
  42ce88:	add	x11, x11, #0x1
  42ce8c:	b.ne	42ce6c <feof@plt+0x2a16c>  // b.any
  42ce90:	neg	x8, x8
  42ce94:	b	42ce9c <feof@plt+0x2a19c>
  42ce98:	mov	w8, #0x1                   	// #1
  42ce9c:	mov	w10, #0x555c                	// #21852
  42cea0:	adrp	x12, 463000 <_obstack_memory_used@@Base+0xddd8>
  42cea4:	ubfx	x11, x9, #28, #4
  42cea8:	add	x12, x12, #0x391
  42ceac:	ubfx	x13, x9, #24, #4
  42ceb0:	ubfx	x14, x9, #20, #4
  42ceb4:	ubfx	x15, x9, #16, #4
  42ceb8:	ubfx	x16, x9, #12, #4
  42cebc:	ubfx	x17, x9, #8, #4
  42cec0:	strh	w10, [x0]
  42cec4:	ubfx	x10, x9, #4, #4
  42cec8:	and	x9, x9, #0xf
  42cecc:	ldrb	w11, [x12, x11]
  42ced0:	ldrb	w13, [x12, x13]
  42ced4:	ldrb	w14, [x12, x14]
  42ced8:	ldrb	w15, [x12, x15]
  42cedc:	ldrb	w16, [x12, x16]
  42cee0:	ldrb	w17, [x12, x17]
  42cee4:	ldrb	w10, [x12, x10]
  42cee8:	ldrb	w9, [x12, x9]
  42ceec:	strb	w11, [x0, #2]
  42cef0:	strb	w13, [x0, #3]
  42cef4:	strb	w14, [x0, #4]
  42cef8:	strb	w15, [x0, #5]
  42cefc:	strb	w16, [x0, #6]
  42cf00:	strb	w17, [x0, #7]
  42cf04:	strb	w10, [x0, #8]
  42cf08:	strb	w9, [x0, #9]
  42cf0c:	mov	x0, x8
  42cf10:	ldp	x29, x30, [sp], #16
  42cf14:	ret
  42cf18:	adrp	x0, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cf1c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42cf20:	add	x0, x0, #0xd20
  42cf24:	add	x2, x2, #0x385
  42cf28:	mov	w1, #0xc89                 	// #3209
  42cf2c:	bl	408b70 <feof@plt+0x5e70>
  42cf30:	stp	x29, x30, [sp, #-48]!
  42cf34:	stp	x22, x21, [sp, #16]
  42cf38:	stp	x20, x19, [sp, #32]
  42cf3c:	ldrb	w8, [x1, #4]
  42cf40:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cf44:	add	x9, x9, #0x718
  42cf48:	mov	x19, x2
  42cf4c:	lsl	x10, x8, #4
  42cf50:	ldr	w10, [x9, x10]
  42cf54:	mov	x29, sp
  42cf58:	cmp	w10, #0x3
  42cf5c:	b.hi	42d070 <feof@plt+0x2a370>  // b.pmore
  42cf60:	adrp	x11, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cf64:	add	x11, x11, #0x6ca
  42cf68:	adr	x12, 42cf7c <feof@plt+0x2a27c>
  42cf6c:	ldrb	w13, [x11, x10]
  42cf70:	add	x12, x12, x13, lsl #2
  42cf74:	mov	x20, x1
  42cf78:	br	x12
  42cf7c:	ldrh	w10, [x20, #6]
  42cf80:	tbnz	w10, #1, 42d044 <feof@plt+0x2a344>
  42cf84:	tbnz	w10, #4, 42cf94 <feof@plt+0x2a294>
  42cf88:	add	x8, x9, x8, lsl #4
  42cf8c:	add	x8, x8, #0x8
  42cf90:	b	42d054 <feof@plt+0x2a354>
  42cf94:	tbz	w3, #0, 42cff4 <feof@plt+0x2a2f4>
  42cf98:	ldr	x8, [x20, #16]
  42cf9c:	mov	x0, x19
  42cfa0:	ldr	x1, [x8]
  42cfa4:	ldr	w2, [x8, #8]
  42cfa8:	bl	402640 <memcpy@plt>
  42cfac:	ldr	x8, [x20, #16]
  42cfb0:	ldr	w8, [x8, #8]
  42cfb4:	add	x19, x19, x8
  42cfb8:	b	42d070 <feof@plt+0x2a370>
  42cfbc:	ldr	x1, [x20, #16]
  42cfc0:	ldr	w2, [x20, #8]
  42cfc4:	mov	x0, x19
  42cfc8:	bl	402640 <memcpy@plt>
  42cfcc:	ldr	w8, [x20, #8]
  42cfd0:	add	x19, x19, x8
  42cfd4:	b	42d070 <feof@plt+0x2a370>
  42cfd8:	add	x8, x9, x8, lsl #4
  42cfdc:	ldr	x3, [x8, #8]
  42cfe0:	adrp	x2, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42cfe4:	add	x2, x2, #0xe47
  42cfe8:	mov	w1, #0x4                   	// #4
  42cfec:	bl	4223e4 <feof@plt+0x1f6e4>
  42cff0:	b	42d070 <feof@plt+0x2a370>
  42cff4:	ldr	x20, [x20, #8]
  42cff8:	ldr	w8, [x20, #8]
  42cffc:	cbz	w8, 42d070 <feof@plt+0x2a370>
  42d000:	ldr	x21, [x20]
  42d004:	mov	x22, xzr
  42d008:	b	42d020 <feof@plt+0x2a320>
  42d00c:	strb	w8, [x19], #1
  42d010:	ldr	w8, [x20, #8]
  42d014:	add	x22, x22, #0x1
  42d018:	cmp	x22, x8
  42d01c:	b.cs	42d070 <feof@plt+0x2a370>  // b.hs, b.nlast
  42d020:	add	x1, x21, x22
  42d024:	ldrsb	w8, [x1]
  42d028:	tbz	w8, #31, 42d00c <feof@plt+0x2a30c>
  42d02c:	mov	x0, x19
  42d030:	bl	42ce1c <feof@plt+0x2a11c>
  42d034:	add	x8, x22, x0
  42d038:	sub	x22, x8, #0x1
  42d03c:	add	x19, x19, #0xa
  42d040:	b	42d010 <feof@plt+0x2a310>
  42d044:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d048:	add	x9, x9, #0xc58
  42d04c:	add	x8, x9, x8, lsl #3
  42d050:	sub	x8, x8, #0x128
  42d054:	ldr	x9, [x8]
  42d058:	ldrb	w8, [x9]
  42d05c:	cbz	w8, 42d070 <feof@plt+0x2a370>
  42d060:	add	x9, x9, #0x1
  42d064:	strb	w8, [x19], #1
  42d068:	ldrb	w8, [x9], #1
  42d06c:	cbnz	w8, 42d064 <feof@plt+0x2a364>
  42d070:	mov	x0, x19
  42d074:	ldp	x20, x19, [sp, #32]
  42d078:	ldp	x22, x21, [sp, #16]
  42d07c:	ldp	x29, x30, [sp], #48
  42d080:	ret
  42d084:	stp	x29, x30, [sp, #-48]!
  42d088:	stp	x20, x19, [sp, #32]
  42d08c:	ldrb	w8, [x1, #4]
  42d090:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d094:	add	x9, x9, #0x718
  42d098:	mov	x19, x1
  42d09c:	lsl	x8, x8, #4
  42d0a0:	ldr	w8, [x9, x8]
  42d0a4:	mov	x20, x0
  42d0a8:	str	x21, [sp, #16]
  42d0ac:	mov	x29, sp
  42d0b0:	cmp	w8, #0x1
  42d0b4:	b.eq	42d0c8 <feof@plt+0x2a3c8>  // b.none
  42d0b8:	cmp	w8, #0x2
  42d0bc:	b.ne	42d0dc <feof@plt+0x2a3dc>  // b.any
  42d0c0:	ldr	w8, [x19, #8]
  42d0c4:	b	42d0e0 <feof@plt+0x2a3e0>
  42d0c8:	ldr	x8, [x19, #8]
  42d0cc:	ldr	w8, [x8, #8]
  42d0d0:	add	w8, w8, w8, lsl #2
  42d0d4:	lsl	w8, w8, #1
  42d0d8:	b	42d0e0 <feof@plt+0x2a3e0>
  42d0dc:	mov	w8, #0x6                   	// #6
  42d0e0:	add	w1, w8, #0x1
  42d0e4:	mov	x0, x20
  42d0e8:	bl	42d11c <feof@plt+0x2a41c>
  42d0ec:	mov	x21, x0
  42d0f0:	mov	x0, x20
  42d0f4:	mov	x1, x19
  42d0f8:	mov	x2, x21
  42d0fc:	mov	w3, wzr
  42d100:	bl	42cf30 <feof@plt+0x2a230>
  42d104:	strb	wzr, [x0]
  42d108:	mov	x0, x21
  42d10c:	ldp	x20, x19, [sp, #32]
  42d110:	ldr	x21, [sp, #16]
  42d114:	ldp	x29, x30, [sp], #48
  42d118:	ret
  42d11c:	stp	x29, x30, [sp, #-48]!
  42d120:	stp	x20, x19, [sp, #32]
  42d124:	ldr	x8, [x0, #64]
  42d128:	str	x21, [sp, #16]
  42d12c:	mov	x20, x0
  42d130:	mov	x19, x1
  42d134:	ldp	x0, x9, [x8, #16]
  42d138:	mov	x29, sp
  42d13c:	sub	x9, x9, x0
  42d140:	cmp	x9, x1
  42d144:	b.cs	42d1ec <feof@plt+0x2a4ec>  // b.hs, b.nlast
  42d148:	mov	x9, x20
  42d14c:	ldr	x8, [x9, #72]!
  42d150:	cbz	x8, 42d1a0 <feof@plt+0x2a4a0>
  42d154:	ldr	x10, [x8, #24]
  42d158:	ldr	x11, [x8, #8]
  42d15c:	add	x12, x19, x19, lsl #1
  42d160:	mov	w13, #0x1f40                	// #8000
  42d164:	sub	x11, x10, x11
  42d168:	cmp	x11, x19
  42d16c:	add	x10, x13, x12, lsr #1
  42d170:	b.cc	42d17c <feof@plt+0x2a47c>  // b.lo, b.ul, b.last
  42d174:	cmp	x11, x10
  42d178:	b.ls	42d1cc <feof@plt+0x2a4cc>  // b.plast
  42d17c:	mov	x9, x8
  42d180:	ldr	x8, [x8]
  42d184:	cbz	x8, 42d1a0 <feof@plt+0x2a4a0>
  42d188:	ldr	x11, [x8, #24]
  42d18c:	ldr	x12, [x8, #8]
  42d190:	sub	x11, x11, x12
  42d194:	cmp	x11, x19
  42d198:	b.cs	42d174 <feof@plt+0x2a474>  // b.hs, b.nlast
  42d19c:	b	42d17c <feof@plt+0x2a47c>
  42d1a0:	mov	w8, #0x1f40                	// #8000
  42d1a4:	cmp	x19, x8
  42d1a8:	csel	x8, x19, x8, hi  // hi = pmore
  42d1ac:	add	x8, x8, #0x7
  42d1b0:	and	x21, x8, #0xfffffffffffffff8
  42d1b4:	add	x0, x21, #0x20
  42d1b8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42d1bc:	add	x8, x0, x21
  42d1c0:	stp	x0, x8, [x8, #16]
  42d1c4:	stp	xzr, x0, [x8]
  42d1c8:	b	42d1e0 <feof@plt+0x2a4e0>
  42d1cc:	ldr	x10, [x8]
  42d1d0:	str	x10, [x9]
  42d1d4:	ldr	x0, [x8, #8]
  42d1d8:	str	xzr, [x8]
  42d1dc:	str	x0, [x8, #16]
  42d1e0:	ldr	x9, [x20, #64]
  42d1e4:	str	x9, [x8]
  42d1e8:	str	x8, [x20, #64]
  42d1ec:	add	x9, x0, x19
  42d1f0:	str	x9, [x8, #16]
  42d1f4:	ldp	x20, x19, [sp, #32]
  42d1f8:	ldr	x21, [sp, #16]
  42d1fc:	ldp	x29, x30, [sp], #48
  42d200:	ret
  42d204:	tbnz	w1, #1, 42d224 <feof@plt+0x2a524>
  42d208:	and	w8, w1, #0xff
  42d20c:	tbnz	w8, #4, 42d23c <feof@plt+0x2a53c>
  42d210:	adrp	x8, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d214:	add	x8, x8, #0x718
  42d218:	add	x8, x8, w0, uxtw #4
  42d21c:	ldr	x0, [x8, #8]
  42d220:	ret
  42d224:	adrp	x8, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d228:	add	x8, x8, #0xc58
  42d22c:	add	x8, x8, w0, sxtw #3
  42d230:	sub	x8, x8, #0x128
  42d234:	ldr	x0, [x8]
  42d238:	ret
  42d23c:	b	439198 <feof@plt+0x36498>
  42d240:	sub	sp, sp, #0x40
  42d244:	stp	x29, x30, [sp, #16]
  42d248:	stp	x22, x21, [sp, #32]
  42d24c:	stp	x20, x19, [sp, #48]
  42d250:	ldrb	w8, [x0, #4]
  42d254:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d258:	add	x9, x9, #0x718
  42d25c:	mov	x20, x0
  42d260:	lsl	x10, x8, #4
  42d264:	ldr	w10, [x9, x10]
  42d268:	mov	x19, x1
  42d26c:	add	x29, sp, #0x10
  42d270:	cmp	w10, #0x2
  42d274:	b.eq	42d328 <feof@plt+0x2a628>  // b.none
  42d278:	cmp	w10, #0x1
  42d27c:	b.eq	42d29c <feof@plt+0x2a59c>  // b.none
  42d280:	cbnz	w10, 42d398 <feof@plt+0x2a698>
  42d284:	ldrh	w10, [x20, #6]
  42d288:	tbnz	w10, #1, 42d34c <feof@plt+0x2a64c>
  42d28c:	tbnz	w10, #4, 42d29c <feof@plt+0x2a59c>
  42d290:	add	x8, x9, x8, lsl #4
  42d294:	add	x8, x8, #0x8
  42d298:	b	42d35c <feof@plt+0x2a65c>
  42d29c:	ldr	x8, [x20, #8]
  42d2a0:	ldr	w9, [x8, #8]
  42d2a4:	cbz	w9, 42d398 <feof@plt+0x2a698>
  42d2a8:	ldr	x21, [x8]
  42d2ac:	mov	x22, xzr
  42d2b0:	b	42d2ec <feof@plt+0x2a5ec>
  42d2b4:	add	x0, sp, #0x4
  42d2b8:	bl	42ce1c <feof@plt+0x2a11c>
  42d2bc:	add	x8, x22, x0
  42d2c0:	add	x0, sp, #0x4
  42d2c4:	mov	w1, #0x1                   	// #1
  42d2c8:	mov	w2, #0xa                   	// #10
  42d2cc:	mov	x3, x19
  42d2d0:	sub	x22, x8, #0x1
  42d2d4:	bl	402bd0 <fwrite_unlocked@plt>
  42d2d8:	ldr	x8, [x20, #8]
  42d2dc:	add	x22, x22, #0x1
  42d2e0:	ldr	w9, [x8, #8]
  42d2e4:	cmp	x22, x9
  42d2e8:	b.cs	42d398 <feof@plt+0x2a698>  // b.hs, b.nlast
  42d2ec:	add	x1, x21, x22
  42d2f0:	ldrsb	w9, [x1]
  42d2f4:	tbnz	w9, #31, 42d2b4 <feof@plt+0x2a5b4>
  42d2f8:	ldr	x9, [x8]
  42d2fc:	ldp	x8, x10, [x19, #40]
  42d300:	ldrb	w1, [x9, x22]
  42d304:	cmp	x8, x10
  42d308:	b.cs	42d31c <feof@plt+0x2a61c>  // b.hs, b.nlast
  42d30c:	add	x9, x8, #0x1
  42d310:	str	x9, [x19, #40]
  42d314:	strb	w1, [x8]
  42d318:	b	42d2d8 <feof@plt+0x2a5d8>
  42d31c:	mov	x0, x19
  42d320:	bl	402730 <__overflow@plt>
  42d324:	b	42d2d8 <feof@plt+0x2a5d8>
  42d328:	ldr	x0, [x20, #16]
  42d32c:	ldr	w2, [x20, #8]
  42d330:	mov	x3, x19
  42d334:	ldp	x20, x19, [sp, #48]
  42d338:	ldp	x22, x21, [sp, #32]
  42d33c:	ldp	x29, x30, [sp, #16]
  42d340:	mov	w1, #0x1                   	// #1
  42d344:	add	sp, sp, #0x40
  42d348:	b	402bd0 <fwrite_unlocked@plt>
  42d34c:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d350:	add	x9, x9, #0xc58
  42d354:	add	x8, x9, x8, lsl #3
  42d358:	sub	x8, x8, #0x128
  42d35c:	ldr	x20, [x8]
  42d360:	ldrb	w8, [x20], #1
  42d364:	ldp	x9, x10, [x19, #40]
  42d368:	cmp	x9, x10
  42d36c:	b.cs	42d388 <feof@plt+0x2a688>  // b.hs, b.nlast
  42d370:	add	x10, x9, #0x1
  42d374:	str	x10, [x19, #40]
  42d378:	strb	w8, [x9]
  42d37c:	ldrb	w8, [x20], #1
  42d380:	cbnz	w8, 42d364 <feof@plt+0x2a664>
  42d384:	b	42d398 <feof@plt+0x2a698>
  42d388:	and	w1, w8, #0xff
  42d38c:	mov	x0, x19
  42d390:	bl	402730 <__overflow@plt>
  42d394:	b	42d37c <feof@plt+0x2a67c>
  42d398:	ldp	x20, x19, [sp, #48]
  42d39c:	ldp	x22, x21, [sp, #32]
  42d3a0:	ldp	x29, x30, [sp, #16]
  42d3a4:	add	sp, sp, #0x40
  42d3a8:	ret
  42d3ac:	stp	x29, x30, [sp, #-16]!
  42d3b0:	ldrb	w8, [x0, #4]
  42d3b4:	ldrb	w9, [x1, #4]
  42d3b8:	mov	x29, sp
  42d3bc:	cmp	w8, w9
  42d3c0:	b.ne	42d45c <feof@plt+0x2a75c>  // b.any
  42d3c4:	ldrh	w9, [x0, #6]
  42d3c8:	ldrh	w10, [x1, #6]
  42d3cc:	cmp	w9, w10
  42d3d0:	b.ne	42d45c <feof@plt+0x2a75c>  // b.any
  42d3d4:	adrp	x10, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d3d8:	lsl	x9, x8, #4
  42d3dc:	add	x10, x10, #0x718
  42d3e0:	ldr	w9, [x10, x9]
  42d3e4:	cmp	w9, #0x1
  42d3e8:	b.eq	42d418 <feof@plt+0x2a718>  // b.none
  42d3ec:	cmp	w9, #0x2
  42d3f0:	b.eq	42d438 <feof@plt+0x2a738>  // b.none
  42d3f4:	cmp	w9, #0x3
  42d3f8:	b.ne	42d468 <feof@plt+0x2a768>  // b.any
  42d3fc:	cmp	w8, #0x50
  42d400:	b.ne	42d488 <feof@plt+0x2a788>  // b.any
  42d404:	ldr	w8, [x0, #8]
  42d408:	ldr	w9, [x1, #8]
  42d40c:	cmp	w8, w9
  42d410:	b.eq	42d428 <feof@plt+0x2a728>  // b.none
  42d414:	b	42d45c <feof@plt+0x2a75c>
  42d418:	ldr	x8, [x0, #8]
  42d41c:	ldr	x9, [x1, #8]
  42d420:	cmp	x8, x9
  42d424:	b.ne	42d45c <feof@plt+0x2a75c>  // b.any
  42d428:	ldr	x8, [x0, #16]
  42d42c:	ldr	x9, [x1, #16]
  42d430:	cmp	x8, x9
  42d434:	b	42d47c <feof@plt+0x2a77c>
  42d438:	ldr	w2, [x0, #8]
  42d43c:	ldr	w8, [x1, #8]
  42d440:	cmp	w2, w8
  42d444:	b.ne	42d45c <feof@plt+0x2a75c>  // b.any
  42d448:	ldr	x0, [x0, #16]
  42d44c:	ldr	x1, [x1, #16]
  42d450:	bl	402cb0 <bcmp@plt>
  42d454:	cmp	w0, #0x0
  42d458:	b	42d47c <feof@plt+0x2a77c>
  42d45c:	mov	w0, wzr
  42d460:	ldp	x29, x30, [sp], #16
  42d464:	ret
  42d468:	cmp	w8, #0x26
  42d46c:	b.ne	42d488 <feof@plt+0x2a788>  // b.any
  42d470:	ldr	w8, [x0, #8]
  42d474:	ldr	w9, [x1, #8]
  42d478:	cmp	w8, w9
  42d47c:	cset	w0, eq  // eq = none
  42d480:	ldp	x29, x30, [sp], #16
  42d484:	ret
  42d488:	mov	w0, #0x1                   	// #1
  42d48c:	ldp	x29, x30, [sp], #16
  42d490:	ret
  42d494:	ldrb	w10, [x1, #6]
  42d498:	ldrb	w9, [x1, #4]
  42d49c:	ldrh	w13, [x2, #6]
  42d4a0:	ldrb	w11, [x2, #4]
  42d4a4:	mov	w14, #0x35                  	// #53
  42d4a8:	tst	w10, #0x10
  42d4ac:	csel	w12, w9, w14, eq  // eq = none
  42d4b0:	tst	w13, #0x10
  42d4b4:	mov	x8, x0
  42d4b8:	csel	w9, w11, w14, eq  // eq = none
  42d4bc:	tbnz	w13, #1, 42d4dc <feof@plt+0x2a7dc>
  42d4c0:	adrp	x10, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d4c4:	lsl	x13, x9, #4
  42d4c8:	add	x10, x10, #0x718
  42d4cc:	ldr	w13, [x10, x13]
  42d4d0:	cbz	w13, 42d4f0 <feof@plt+0x2a7f0>
  42d4d4:	mov	w10, #0xffffffff            	// #-1
  42d4d8:	b	42d518 <feof@plt+0x2a818>
  42d4dc:	adrp	x10, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d4e0:	add	x10, x10, #0xc58
  42d4e4:	add	x10, x10, w9, uxtw #3
  42d4e8:	sub	x10, x10, #0x128
  42d4ec:	b	42d4f8 <feof@plt+0x2a7f8>
  42d4f0:	add	x10, x10, x9, lsl #4
  42d4f4:	add	x10, x10, #0x8
  42d4f8:	ldr	x10, [x10]
  42d4fc:	cmp	w12, #0xd
  42d500:	ldrb	w10, [x10]
  42d504:	b.hi	42d518 <feof@plt+0x2a818>  // b.pmore
  42d508:	cmp	w10, #0x3d
  42d50c:	b.ne	42d518 <feof@plt+0x2a818>  // b.any
  42d510:	mov	w0, #0x1                   	// #1
  42d514:	ret
  42d518:	sub	w12, w12, #0x2
  42d51c:	cmp	w12, #0x40
  42d520:	mov	w0, wzr
  42d524:	b.hi	42d728 <feof@plt+0x2aa28>  // b.pmore
  42d528:	adrp	x13, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d52c:	add	x13, x13, #0x6ce
  42d530:	adr	x14, 42d540 <feof@plt+0x2a840>
  42d534:	ldrb	w15, [x13, x12]
  42d538:	add	x14, x14, x15, lsl #2
  42d53c:	br	x14
  42d540:	ldrb	w8, [x8, #1161]
  42d544:	cbz	w8, 42d578 <feof@plt+0x2a878>
  42d548:	cmp	w9, #0x35
  42d54c:	b.eq	42d510 <feof@plt+0x2a810>  // b.none
  42d550:	sub	x8, x11, #0x37
  42d554:	cmp	x8, #0x18
  42d558:	b.hi	42d578 <feof@plt+0x2a878>  // b.pmore
  42d55c:	ldr	x8, [x2, #16]
  42d560:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42d564:	add	x9, x9, #0x3c4
  42d568:	ldrb	w8, [x8]
  42d56c:	ldrh	w8, [x9, x8, lsl #1]
  42d570:	ubfx	w0, w8, #9, #1
  42d574:	b	42d728 <feof@plt+0x2aa28>
  42d578:	mov	w0, wzr
  42d57c:	ret
  42d580:	orr	w8, w10, #0x4
  42d584:	cmp	w8, #0x3e
  42d588:	cset	w0, eq  // eq = none
  42d58c:	ret
  42d590:	cmp	w10, #0x3e
  42d594:	cset	w0, eq  // eq = none
  42d598:	ret
  42d59c:	cmp	w10, #0x25
  42d5a0:	mov	w0, #0x1                   	// #1
  42d5a4:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d5a8:	cmp	w10, #0x3c
  42d5ac:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d5b0:	cmp	w10, #0x3a
  42d5b4:	cset	w0, eq  // eq = none
  42d5b8:	ret
  42d5bc:	cmp	w10, #0x2b
  42d5c0:	cset	w0, eq  // eq = none
  42d5c4:	ret
  42d5c8:	cmp	w10, #0x2d
  42d5cc:	cset	w8, eq  // eq = none
  42d5d0:	cmp	w10, #0x3e
  42d5d4:	b	42d60c <feof@plt+0x2a90c>
  42d5d8:	cmp	w10, #0x2f
  42d5dc:	cset	w8, eq  // eq = none
  42d5e0:	cmp	w10, #0x2a
  42d5e4:	b	42d60c <feof@plt+0x2a90c>
  42d5e8:	cmp	w10, #0x26
  42d5ec:	cset	w0, eq  // eq = none
  42d5f0:	ret
  42d5f4:	cmp	w10, #0x7c
  42d5f8:	cset	w0, eq  // eq = none
  42d5fc:	ret
  42d600:	cmp	w10, #0x23
  42d604:	cset	w8, eq  // eq = none
  42d608:	cmp	w10, #0x25
  42d60c:	cset	w9, eq  // eq = none
  42d610:	orr	w0, w8, w9
  42d614:	ret
  42d618:	cmp	w10, #0x2a
  42d61c:	cset	w0, eq  // eq = none
  42d620:	ret
  42d624:	cmp	w10, #0x25
  42d628:	mov	w0, #0x1                   	// #1
  42d62c:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d630:	cmp	w10, #0x2e
  42d634:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d638:	cmp	w9, #0x37
  42d63c:	cset	w0, eq  // eq = none
  42d640:	ret
  42d644:	cmp	w9, #0x35
  42d648:	mov	w0, #0x1                   	// #1
  42d64c:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d650:	cmp	w9, #0x38
  42d654:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d658:	cmp	w9, #0x37
  42d65c:	b.ne	42d6ac <feof@plt+0x2a9ac>  // b.any
  42d660:	ldr	w10, [x2, #8]
  42d664:	cbz	w10, 42d510 <feof@plt+0x2a810>
  42d668:	ldr	x11, [x2, #16]
  42d66c:	adrp	x12, 467000 <_obstack_memory_used@@Base+0x11dd8>
  42d670:	add	x12, x12, #0x3c4
  42d674:	mov	w13, #0x204                 	// #516
  42d678:	mov	w0, #0x1                   	// #1
  42d67c:	b	42d68c <feof@plt+0x2a98c>
  42d680:	subs	x10, x10, #0x1
  42d684:	add	x11, x11, #0x1
  42d688:	b.eq	42d728 <feof@plt+0x2aa28>  // b.none
  42d68c:	ldrb	w14, [x11]
  42d690:	ldrh	w15, [x12, x14, lsl #1]
  42d694:	tst	w15, w13
  42d698:	b.ne	42d680 <feof@plt+0x2a980>  // b.any
  42d69c:	cmp	w14, #0x24
  42d6a0:	b.ne	42d6ac <feof@plt+0x2a9ac>  // b.any
  42d6a4:	ldrb	w14, [x8, #1146]
  42d6a8:	cbnz	w14, 42d680 <feof@plt+0x2a980>
  42d6ac:	cmp	w9, #0x3e
  42d6b0:	cset	w0, eq  // eq = none
  42d6b4:	ret
  42d6b8:	orr	w8, w9, #0x2
  42d6bc:	cmp	w8, #0x37
  42d6c0:	cset	w8, eq  // eq = none
  42d6c4:	cmp	w10, #0x2e
  42d6c8:	cset	w9, eq  // eq = none
  42d6cc:	cmp	w10, #0x2b
  42d6d0:	orr	w8, w8, w9
  42d6d4:	cset	w9, eq  // eq = none
  42d6d8:	cmp	w10, #0x2d
  42d6dc:	orr	w8, w9, w8
  42d6e0:	cset	w9, eq  // eq = none
  42d6e4:	orr	w0, w9, w8
  42d6e8:	ret
  42d6ec:	ldr	x10, [x1, #16]
  42d6f0:	cmp	w9, #0x35
  42d6f4:	ldrb	w10, [x10]
  42d6f8:	b.ne	42d704 <feof@plt+0x2aa04>  // b.any
  42d6fc:	cmp	w10, #0x5c
  42d700:	b.eq	42d510 <feof@plt+0x2a810>  // b.none
  42d704:	cmp	w10, #0x40
  42d708:	mov	w0, wzr
  42d70c:	b.ne	42d728 <feof@plt+0x2aa28>  // b.any
  42d710:	ldrb	w8, [x8, #1122]
  42d714:	cbz	w8, 42d728 <feof@plt+0x2aa28>
  42d718:	cmp	w9, #0x35
  42d71c:	cset	w8, eq  // eq = none
  42d720:	cmp	w9, #0x3e
  42d724:	b	42d60c <feof@plt+0x2a90c>
  42d728:	ret
  42d72c:	stp	x29, x30, [sp, #-48]!
  42d730:	stp	x22, x21, [sp, #16]
  42d734:	stp	x20, x19, [sp, #32]
  42d738:	mov	x29, sp
  42d73c:	mov	x19, x1
  42d740:	mov	x20, x0
  42d744:	bl	432114 <feof@plt+0x2f414>
  42d748:	ldrb	w8, [x0, #4]
  42d74c:	cmp	w8, #0x16
  42d750:	b.ne	42d780 <feof@plt+0x2aa80>  // b.any
  42d754:	ldp	x8, x9, [x19, #40]
  42d758:	cmp	x8, x9
  42d75c:	b.cs	42d7e0 <feof@plt+0x2aae0>  // b.hs, b.nlast
  42d760:	add	x9, x8, #0x1
  42d764:	mov	w10, #0xa                   	// #10
  42d768:	str	x9, [x19, #40]
  42d76c:	strb	w10, [x8]
  42d770:	ldp	x20, x19, [sp, #32]
  42d774:	ldp	x22, x21, [sp, #16]
  42d778:	ldp	x29, x30, [sp], #48
  42d77c:	ret
  42d780:	mov	x21, x0
  42d784:	mov	w22, #0x20                  	// #32
  42d788:	b	42d7a4 <feof@plt+0x2aaa4>
  42d78c:	add	x9, x8, #0x1
  42d790:	str	x9, [x19, #40]
  42d794:	strb	w22, [x8]
  42d798:	ldrb	w8, [x21, #4]
  42d79c:	cmp	w8, #0x16
  42d7a0:	b.eq	42d754 <feof@plt+0x2aa54>  // b.none
  42d7a4:	mov	x0, x21
  42d7a8:	mov	x1, x19
  42d7ac:	bl	42d240 <feof@plt+0x2a540>
  42d7b0:	mov	x0, x20
  42d7b4:	bl	432114 <feof@plt+0x2f414>
  42d7b8:	ldrb	w8, [x0, #6]
  42d7bc:	mov	x21, x0
  42d7c0:	tbz	w8, #0, 42d798 <feof@plt+0x2aa98>
  42d7c4:	ldp	x8, x9, [x19, #40]
  42d7c8:	cmp	x8, x9
  42d7cc:	b.cc	42d78c <feof@plt+0x2aa8c>  // b.lo, b.ul, b.last
  42d7d0:	mov	w1, #0x20                  	// #32
  42d7d4:	mov	x0, x19
  42d7d8:	bl	402730 <__overflow@plt>
  42d7dc:	b	42d798 <feof@plt+0x2aa98>
  42d7e0:	mov	x0, x19
  42d7e4:	ldp	x20, x19, [sp, #32]
  42d7e8:	ldp	x22, x21, [sp, #16]
  42d7ec:	mov	w1, #0xa                   	// #10
  42d7f0:	ldp	x29, x30, [sp], #48
  42d7f4:	b	402730 <__overflow@plt>
  42d7f8:	stp	x29, x30, [sp, #-80]!
  42d7fc:	stp	x20, x19, [sp, #64]
  42d800:	mov	x19, x0
  42d804:	str	x25, [sp, #16]
  42d808:	stp	x24, x23, [sp, #32]
  42d80c:	stp	x22, x21, [sp, #48]
  42d810:	mov	x29, sp
  42d814:	cbz	x1, 42d850 <feof@plt+0x2ab50>
  42d818:	mov	x0, x1
  42d81c:	mov	x22, x1
  42d820:	bl	4026d0 <strlen@plt>
  42d824:	mov	x23, x0
  42d828:	add	w20, w23, #0x78
  42d82c:	mov	x0, x20
  42d830:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42d834:	adrp	x1, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d838:	add	x1, x1, #0xe5c
  42d83c:	mov	x2, x22
  42d840:	mov	x21, x0
  42d844:	bl	402880 <sprintf@plt>
  42d848:	add	w23, w23, #0x2
  42d84c:	b	42d864 <feof@plt+0x2ab64>
  42d850:	mov	w0, #0x78                  	// #120
  42d854:	mov	w20, #0x78                  	// #120
  42d858:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42d85c:	mov	x21, x0
  42d860:	mov	w23, wzr
  42d864:	mov	x0, x19
  42d868:	bl	432114 <feof@plt+0x2f414>
  42d86c:	ldrb	w8, [x0, #4]
  42d870:	cmp	w8, #0x16
  42d874:	b.ne	42d898 <feof@plt+0x2ab98>  // b.any
  42d878:	strb	wzr, [x21, w23, uxtw]
  42d87c:	mov	x0, x21
  42d880:	ldp	x20, x19, [sp, #64]
  42d884:	ldp	x22, x21, [sp, #48]
  42d888:	ldp	x24, x23, [sp, #32]
  42d88c:	ldr	x25, [sp, #16]
  42d890:	ldp	x29, x30, [sp], #80
  42d894:	ret
  42d898:	adrp	x24, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42d89c:	mov	x22, x0
  42d8a0:	add	x24, x24, #0x718
  42d8a4:	mov	w25, #0x20                  	// #32
  42d8a8:	b	42d8b8 <feof@plt+0x2abb8>
  42d8ac:	ldrb	w8, [x22, #4]
  42d8b0:	cmp	w8, #0x16
  42d8b4:	b.eq	42d878 <feof@plt+0x2ab78>  // b.none
  42d8b8:	and	x8, x8, #0xff
  42d8bc:	lsl	x8, x8, #4
  42d8c0:	ldr	w8, [x24, x8]
  42d8c4:	cmp	w8, #0x1
  42d8c8:	b.eq	42d8dc <feof@plt+0x2abdc>  // b.none
  42d8cc:	cmp	w8, #0x2
  42d8d0:	b.ne	42d8f0 <feof@plt+0x2abf0>  // b.any
  42d8d4:	ldr	w8, [x22, #8]
  42d8d8:	b	42d8f4 <feof@plt+0x2abf4>
  42d8dc:	ldr	x8, [x22, #8]
  42d8e0:	ldr	w8, [x8, #8]
  42d8e4:	add	w8, w8, w8, lsl #2
  42d8e8:	lsl	w8, w8, #1
  42d8ec:	b	42d8f4 <feof@plt+0x2abf4>
  42d8f0:	mov	w8, #0x6                   	// #6
  42d8f4:	add	w8, w23, w8
  42d8f8:	add	w8, w8, #0x2
  42d8fc:	cmp	w8, w20
  42d900:	b.ls	42d920 <feof@plt+0x2ac20>  // b.plast
  42d904:	lsl	w9, w20, #1
  42d908:	cmp	w8, w9
  42d90c:	csel	w20, w8, w9, hi  // hi = pmore
  42d910:	mov	x0, x21
  42d914:	mov	x1, x20
  42d918:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  42d91c:	mov	x21, x0
  42d920:	add	x2, x21, w23, uxtw
  42d924:	mov	x0, x19
  42d928:	mov	x1, x22
  42d92c:	mov	w3, wzr
  42d930:	bl	42cf30 <feof@plt+0x2a230>
  42d934:	sub	x23, x0, x21
  42d938:	mov	x0, x19
  42d93c:	bl	432114 <feof@plt+0x2f414>
  42d940:	ldrb	w8, [x0, #6]
  42d944:	mov	x22, x0
  42d948:	tbz	w8, #0, 42d8ac <feof@plt+0x2abac>
  42d94c:	add	w8, w23, #0x1
  42d950:	strb	w25, [x21, w23, uxtw]
  42d954:	mov	w23, w8
  42d958:	b	42d8ac <feof@plt+0x2abac>
  42d95c:	mov	x9, x1
  42d960:	mov	x8, x9
  42d964:	ldr	x9, [x9]
  42d968:	cbnz	x9, 42d960 <feof@plt+0x2ac60>
  42d96c:	ldr	x9, [x0, #72]
  42d970:	str	x9, [x8]
  42d974:	str	x1, [x0, #72]
  42d978:	ret
  42d97c:	stp	x29, x30, [sp, #-32]!
  42d980:	str	x19, [sp, #16]
  42d984:	mov	x8, x0
  42d988:	ldr	x0, [x8, #72]!
  42d98c:	mov	x29, sp
  42d990:	cbz	x0, 42d9d8 <feof@plt+0x2acd8>
  42d994:	mov	x9, x0
  42d998:	ldr	x11, [x9, #8]!
  42d99c:	add	x10, x1, x1, lsl #1
  42d9a0:	mov	w13, #0x1f40                	// #8000
  42d9a4:	add	x10, x13, x10, lsr #1
  42d9a8:	ldr	x12, [x9, #16]
  42d9ac:	sub	x11, x12, x11
  42d9b0:	cmp	x11, x1
  42d9b4:	ccmp	x11, x10, #0x2, cs  // cs = hs, nlast
  42d9b8:	b.ls	42da08 <feof@plt+0x2ad08>  // b.plast
  42d9bc:	mov	x8, x0
  42d9c0:	ldr	x0, [x0]
  42d9c4:	cbz	x0, 42d9d8 <feof@plt+0x2acd8>
  42d9c8:	mov	x9, x0
  42d9cc:	ldr	x11, [x9, #8]!
  42d9d0:	ldr	x12, [x9, #16]
  42d9d4:	b	42d9ac <feof@plt+0x2acac>
  42d9d8:	mov	w8, #0x1f40                	// #8000
  42d9dc:	cmp	x1, x8
  42d9e0:	csel	x8, x1, x8, hi  // hi = pmore
  42d9e4:	add	x8, x8, #0x7
  42d9e8:	and	x19, x8, #0xfffffffffffffff8
  42d9ec:	add	x0, x19, #0x20
  42d9f0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42d9f4:	mov	x8, x0
  42d9f8:	add	x0, x0, x19
  42d9fc:	stp	x8, x0, [x0, #16]
  42da00:	stp	xzr, x8, [x0]
  42da04:	b	42da1c <feof@plt+0x2ad1c>
  42da08:	ldr	x10, [x0]
  42da0c:	str	x10, [x8]
  42da10:	str	xzr, [x0]
  42da14:	ldr	x8, [x9]
  42da18:	str	x8, [x0, #16]
  42da1c:	ldr	x19, [sp, #16]
  42da20:	ldp	x29, x30, [sp], #32
  42da24:	ret
  42da28:	stp	x29, x30, [sp, #-32]!
  42da2c:	stp	x20, x19, [sp, #16]
  42da30:	ldp	x9, x8, [x1, #16]
  42da34:	ldr	x20, [x0, #72]!
  42da38:	mov	x19, x1
  42da3c:	mov	x29, sp
  42da40:	sub	x8, x8, x9
  42da44:	add	x8, x2, x8, lsl #1
  42da48:	cbz	x20, 42da98 <feof@plt+0x2ad98>
  42da4c:	ldr	x9, [x20, #24]
  42da50:	ldr	x10, [x20, #8]
  42da54:	add	x11, x8, x8, lsl #1
  42da58:	mov	w12, #0x1f40                	// #8000
  42da5c:	sub	x10, x9, x10
  42da60:	cmp	x10, x8
  42da64:	add	x9, x12, x11, lsr #1
  42da68:	b.cc	42da74 <feof@plt+0x2ad74>  // b.lo, b.ul, b.last
  42da6c:	cmp	x10, x9
  42da70:	b.ls	42dac4 <feof@plt+0x2adc4>  // b.plast
  42da74:	mov	x0, x20
  42da78:	ldr	x20, [x20]
  42da7c:	cbz	x20, 42da98 <feof@plt+0x2ad98>
  42da80:	ldr	x10, [x20, #24]
  42da84:	ldr	x11, [x20, #8]
  42da88:	sub	x10, x10, x11
  42da8c:	cmp	x10, x8
  42da90:	b.cs	42da6c <feof@plt+0x2ad6c>  // b.hs, b.nlast
  42da94:	b	42da74 <feof@plt+0x2ad74>
  42da98:	mov	w9, #0x1f40                	// #8000
  42da9c:	cmp	x8, x9
  42daa0:	csel	x8, x8, x9, hi  // hi = pmore
  42daa4:	add	x8, x8, #0x7
  42daa8:	and	x20, x8, #0xfffffffffffffff8
  42daac:	add	x0, x20, #0x20
  42dab0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42dab4:	add	x20, x0, x20
  42dab8:	stp	x0, x20, [x20, #16]
  42dabc:	stp	xzr, x0, [x20]
  42dac0:	b	42dad8 <feof@plt+0x2add8>
  42dac4:	ldr	x8, [x20]
  42dac8:	str	x8, [x0]
  42dacc:	ldr	x8, [x20, #8]
  42dad0:	str	xzr, [x20]
  42dad4:	str	x8, [x20, #16]
  42dad8:	str	x20, [x19]
  42dadc:	ldp	x1, x8, [x19, #16]
  42dae0:	ldr	x0, [x20, #8]
  42dae4:	sub	x2, x8, x1
  42dae8:	bl	402640 <memcpy@plt>
  42daec:	mov	x0, x20
  42daf0:	ldp	x20, x19, [sp, #16]
  42daf4:	ldp	x29, x30, [sp], #32
  42daf8:	ret
  42dafc:	stp	x29, x30, [sp, #-48]!
  42db00:	stp	x20, x19, [sp, #32]
  42db04:	ldr	x20, [x1]
  42db08:	str	x21, [sp, #16]
  42db0c:	mov	x19, x1
  42db10:	mov	x29, sp
  42db14:	ldp	x9, x8, [x20, #16]
  42db18:	ldr	x21, [x0, #72]!
  42db1c:	sub	x8, x8, x9
  42db20:	add	x8, x2, x8, lsl #1
  42db24:	cbz	x21, 42db74 <feof@plt+0x2ae74>
  42db28:	ldr	x9, [x21, #24]
  42db2c:	ldr	x10, [x21, #8]
  42db30:	add	x11, x8, x8, lsl #1
  42db34:	mov	w12, #0x1f40                	// #8000
  42db38:	sub	x10, x9, x10
  42db3c:	cmp	x10, x8
  42db40:	add	x9, x12, x11, lsr #1
  42db44:	b.cc	42db50 <feof@plt+0x2ae50>  // b.lo, b.ul, b.last
  42db48:	cmp	x10, x9
  42db4c:	b.ls	42dba0 <feof@plt+0x2aea0>  // b.plast
  42db50:	mov	x0, x21
  42db54:	ldr	x21, [x21]
  42db58:	cbz	x21, 42db74 <feof@plt+0x2ae74>
  42db5c:	ldr	x10, [x21, #24]
  42db60:	ldr	x11, [x21, #8]
  42db64:	sub	x10, x10, x11
  42db68:	cmp	x10, x8
  42db6c:	b.cs	42db48 <feof@plt+0x2ae48>  // b.hs, b.nlast
  42db70:	b	42db50 <feof@plt+0x2ae50>
  42db74:	mov	w9, #0x1f40                	// #8000
  42db78:	cmp	x8, x9
  42db7c:	csel	x8, x8, x9, hi  // hi = pmore
  42db80:	add	x8, x8, #0x7
  42db84:	and	x21, x8, #0xfffffffffffffff8
  42db88:	add	x0, x21, #0x20
  42db8c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42db90:	add	x21, x0, x21
  42db94:	stp	x0, x21, [x21, #16]
  42db98:	stp	xzr, x0, [x21]
  42db9c:	b	42dbb4 <feof@plt+0x2aeb4>
  42dba0:	ldr	x8, [x21]
  42dba4:	str	x8, [x0]
  42dba8:	ldr	x8, [x21, #8]
  42dbac:	str	xzr, [x21]
  42dbb0:	str	x8, [x21, #16]
  42dbb4:	ldp	x1, x8, [x20, #16]
  42dbb8:	ldr	x0, [x21, #8]
  42dbbc:	sub	x2, x8, x1
  42dbc0:	bl	402640 <memcpy@plt>
  42dbc4:	str	x20, [x21]
  42dbc8:	str	x21, [x19]
  42dbcc:	ldp	x20, x19, [sp, #32]
  42dbd0:	ldr	x21, [sp, #16]
  42dbd4:	ldp	x29, x30, [sp], #48
  42dbd8:	ret
  42dbdc:	stp	x29, x30, [sp, #-32]!
  42dbe0:	str	x19, [sp, #16]
  42dbe4:	mov	x29, sp
  42dbe8:	cbz	x0, 42dbfc <feof@plt+0x2aefc>
  42dbec:	ldp	x19, x0, [x0]
  42dbf0:	bl	402770 <free@plt>
  42dbf4:	mov	x0, x19
  42dbf8:	cbnz	x19, 42dbec <feof@plt+0x2aeec>
  42dbfc:	ldr	x19, [sp, #16]
  42dc00:	ldp	x29, x30, [sp], #32
  42dc04:	ret
  42dc08:	stp	x29, x30, [sp, #-48]!
  42dc0c:	stp	x20, x19, [sp, #32]
  42dc10:	ldr	x8, [x0, #56]
  42dc14:	str	x21, [sp, #16]
  42dc18:	mov	x20, x0
  42dc1c:	mov	x19, x1
  42dc20:	ldp	x0, x9, [x8, #16]
  42dc24:	mov	x29, sp
  42dc28:	sub	x9, x9, x0
  42dc2c:	cmp	x9, x1
  42dc30:	b.cs	42dcd8 <feof@plt+0x2afd8>  // b.hs, b.nlast
  42dc34:	mov	x9, x20
  42dc38:	ldr	x8, [x9, #72]!
  42dc3c:	cbz	x8, 42dc8c <feof@plt+0x2af8c>
  42dc40:	ldr	x10, [x8, #24]
  42dc44:	ldr	x11, [x8, #8]
  42dc48:	add	x12, x19, x19, lsl #1
  42dc4c:	mov	w13, #0x1f40                	// #8000
  42dc50:	sub	x11, x10, x11
  42dc54:	cmp	x11, x19
  42dc58:	add	x10, x13, x12, lsr #1
  42dc5c:	b.cc	42dc68 <feof@plt+0x2af68>  // b.lo, b.ul, b.last
  42dc60:	cmp	x11, x10
  42dc64:	b.ls	42dcb8 <feof@plt+0x2afb8>  // b.plast
  42dc68:	mov	x9, x8
  42dc6c:	ldr	x8, [x8]
  42dc70:	cbz	x8, 42dc8c <feof@plt+0x2af8c>
  42dc74:	ldr	x11, [x8, #24]
  42dc78:	ldr	x12, [x8, #8]
  42dc7c:	sub	x11, x11, x12
  42dc80:	cmp	x11, x19
  42dc84:	b.cs	42dc60 <feof@plt+0x2af60>  // b.hs, b.nlast
  42dc88:	b	42dc68 <feof@plt+0x2af68>
  42dc8c:	mov	w8, #0x1f40                	// #8000
  42dc90:	cmp	x19, x8
  42dc94:	csel	x8, x19, x8, hi  // hi = pmore
  42dc98:	add	x8, x8, #0x7
  42dc9c:	and	x21, x8, #0xfffffffffffffff8
  42dca0:	add	x0, x21, #0x20
  42dca4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  42dca8:	add	x8, x0, x21
  42dcac:	stp	x0, x8, [x8, #16]
  42dcb0:	stp	xzr, x0, [x8]
  42dcb4:	b	42dccc <feof@plt+0x2afcc>
  42dcb8:	ldr	x10, [x8]
  42dcbc:	str	x10, [x9]
  42dcc0:	ldr	x0, [x8, #8]
  42dcc4:	str	xzr, [x8]
  42dcc8:	str	x0, [x8, #16]
  42dccc:	ldr	x9, [x20, #56]
  42dcd0:	str	x9, [x8]
  42dcd4:	str	x8, [x20, #56]
  42dcd8:	add	x9, x0, x19
  42dcdc:	str	x9, [x8, #16]
  42dce0:	ldp	x20, x19, [sp, #32]
  42dce4:	ldr	x21, [sp, #16]
  42dce8:	ldp	x29, x30, [sp], #48
  42dcec:	ret
  42dcf0:	stp	x29, x30, [sp, #-48]!
  42dcf4:	stp	x20, x19, [sp, #32]
  42dcf8:	ldr	x8, [x0, #1088]
  42dcfc:	ldr	x9, [x0, #56]
  42dd00:	mov	x20, x1
  42dd04:	str	x21, [sp, #16]
  42dd08:	ldr	x8, [x8, #104]
  42dd0c:	ldr	x19, [x9, #16]
  42dd10:	mov	x29, sp
  42dd14:	cbz	x8, 42dd38 <feof@plt+0x2b038>
  42dd18:	mov	x0, x20
  42dd1c:	blr	x8
  42dd20:	mov	x1, x19
  42dd24:	mov	x2, x20
  42dd28:	mov	x21, x0
  42dd2c:	bl	402640 <memcpy@plt>
  42dd30:	mov	x19, x21
  42dd34:	b	42dd40 <feof@plt+0x2b040>
  42dd38:	add	x8, x19, x20
  42dd3c:	str	x8, [x9, #16]
  42dd40:	mov	x0, x19
  42dd44:	ldp	x20, x19, [sp, #32]
  42dd48:	ldr	x21, [sp, #16]
  42dd4c:	ldp	x29, x30, [sp], #48
  42dd50:	ret
  42dd54:	ldrb	w8, [x0, #4]
  42dd58:	adrp	x10, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42dd5c:	add	x10, x10, #0x718
  42dd60:	lsl	x9, x8, #4
  42dd64:	ldr	w9, [x10, x9]
  42dd68:	cmp	w9, #0x3
  42dd6c:	b.hi	42ddc8 <feof@plt+0x2b0c8>  // b.pmore
  42dd70:	adrp	x10, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42dd74:	add	x10, x10, #0x70f
  42dd78:	adr	x11, 42dd8c <feof@plt+0x2b08c>
  42dd7c:	ldrb	w12, [x10, x9]
  42dd80:	add	x11, x11, x12, lsl #2
  42dd84:	mov	w0, wzr
  42dd88:	br	x11
  42dd8c:	cmp	w8, #0x26
  42dd90:	mov	w8, #0x6                   	// #6
  42dd94:	mov	w9, #0x4                   	// #4
  42dd98:	csel	w0, w9, w8, eq  // eq = none
  42dd9c:	ret
  42dda0:	mov	w0, #0x2                   	// #2
  42dda4:	ret
  42dda8:	sub	w8, w8, #0x50
  42ddac:	cmp	w8, #0x4
  42ddb0:	b.cs	42ddc8 <feof@plt+0x2b0c8>  // b.hs, b.nlast
  42ddb4:	adrp	x9, 462000 <_obstack_memory_used@@Base+0xcdd8>
  42ddb8:	sxtb	x8, w8
  42ddbc:	add	x9, x9, #0x510
  42ddc0:	ldr	w0, [x9, x8, lsl #2]
  42ddc4:	ret
  42ddc8:	mov	w0, #0x6                   	// #6
  42ddcc:	ret
  42ddd0:	str	w1, [x0, #1408]
  42ddd4:	ret
  42ddd8:	str	wzr, [x0, #1408]
  42dddc:	ret
  42dde0:	ldr	x0, [x0, #88]
  42dde4:	cbz	x0, 42ddec <feof@plt+0x2b0ec>
  42dde8:	b	4541b4 <feof@plt+0x514b4>
  42ddec:	ret
  42ddf0:	stp	x29, x30, [sp, #-48]!
  42ddf4:	adrp	x1, 42d000 <feof@plt+0x2a300>
  42ddf8:	adrp	x2, 42d000 <feof@plt+0x2a300>
  42ddfc:	stp	x20, x19, [sp, #32]
  42de00:	mov	x19, x0
  42de04:	add	x1, x1, #0xe84
  42de08:	add	x2, x2, #0xea0
  42de0c:	mov	w0, #0x64                  	// #100
  42de10:	mov	x3, xzr
  42de14:	str	x21, [sp, #16]
  42de18:	mov	x29, sp
  42de1c:	bl	453fc4 <feof@plt+0x512c4>
  42de20:	ldr	w8, [x19, #96]
  42de24:	str	x0, [x19, #88]
  42de28:	cbz	w8, 42de74 <feof@plt+0x2b174>
  42de2c:	ldr	x1, [x19, #104]
  42de30:	mov	w2, #0x1                   	// #1
  42de34:	bl	4548bc <feof@plt+0x51bbc>
  42de38:	ldr	w8, [x19, #96]
  42de3c:	cmp	w8, #0x2
  42de40:	b.cc	42de74 <feof@plt+0x2b174>  // b.lo, b.ul, b.last
  42de44:	mov	w20, #0x1                   	// #1
  42de48:	mov	w21, #0x18                  	// #24
  42de4c:	ldr	x8, [x19, #104]
  42de50:	ldr	x0, [x19, #88]
  42de54:	mov	w2, #0x1                   	// #1
  42de58:	add	x1, x8, x21
  42de5c:	bl	4548bc <feof@plt+0x51bbc>
  42de60:	ldr	w8, [x19, #96]
  42de64:	add	x20, x20, #0x1
  42de68:	add	x21, x21, #0x18
  42de6c:	cmp	x20, x8
  42de70:	b.cc	42de4c <feof@plt+0x2b14c>  // b.lo, b.ul, b.last
  42de74:	ldp	x20, x19, [sp, #32]
  42de78:	ldr	x21, [sp, #16]
  42de7c:	ldp	x29, x30, [sp], #48
  42de80:	ret
  42de84:	ldp	w8, w9, [x0]
  42de88:	ldr	w10, [x0, #8]
  42de8c:	ldr	w11, [x0, #16]
  42de90:	add	w8, w9, w8
  42de94:	add	w8, w8, w10
  42de98:	add	w0, w8, w11
  42de9c:	ret
  42dea0:	ldr	w8, [x0]
  42dea4:	ldr	w9, [x1]
  42dea8:	cmp	w8, w9
  42deac:	b.ne	42dee4 <feof@plt+0x2b1e4>  // b.any
  42deb0:	ldr	w8, [x0, #4]
  42deb4:	ldr	w9, [x1, #4]
  42deb8:	cmp	w8, w9
  42debc:	b.ne	42dee4 <feof@plt+0x2b1e4>  // b.any
  42dec0:	ldr	w8, [x0, #8]
  42dec4:	ldr	w9, [x1, #8]
  42dec8:	cmp	w8, w9
  42decc:	b.ne	42dee4 <feof@plt+0x2b1e4>  // b.any
  42ded0:	ldr	x8, [x0, #16]
  42ded4:	ldr	x9, [x1, #16]
  42ded8:	cmp	x8, x9
  42dedc:	cset	w0, eq  // eq = none
  42dee0:	ret
  42dee4:	mov	w0, wzr
  42dee8:	ret
  42deec:	sub	sp, sp, #0x60
  42def0:	stp	x22, x21, [sp, #64]
  42def4:	stp	x20, x19, [sp, #80]
  42def8:	mov	x21, x3
  42defc:	mov	x20, x2
  42df00:	mov	w22, w1
  42df04:	mov	x19, x0
  42df08:	stp	x29, x30, [sp, #32]
  42df0c:	stp	x24, x23, [sp, #48]
  42df10:	add	x29, sp, #0x20
  42df14:	tbnz	w1, #31, 42df20 <feof@plt+0x2b220>
  42df18:	cbz	x21, 42df38 <feof@plt+0x2b238>
  42df1c:	b	42df44 <feof@plt+0x2b244>
  42df20:	ldr	x8, [x19, #104]
  42df24:	and	w9, w22, #0x7fffffff
  42df28:	mov	w10, #0x18                  	// #24
  42df2c:	umull	x9, w9, w10
  42df30:	ldr	w22, [x8, x9]
  42df34:	cbnz	x21, 42df44 <feof@plt+0x2b244>
  42df38:	cbnz	w22, 42df44 <feof@plt+0x2b244>
  42df3c:	mov	w23, wzr
  42df40:	b	42e0dc <feof@plt+0x2b3dc>
  42df44:	lsr	w8, w22, #28
  42df48:	cmp	w8, #0x4
  42df4c:	lsr	x23, x20, #32
  42df50:	b.hi	42dfc8 <feof@plt+0x2b2c8>  // b.pmore
  42df54:	cmp	w20, #0x2
  42df58:	b.cc	42dfc8 <feof@plt+0x2b2c8>  // b.lo, b.ul, b.last
  42df5c:	subs	w24, w23, w20
  42df60:	b.cc	42dfc8 <feof@plt+0x2b2c8>  // b.lo, b.ul, b.last
  42df64:	cbnz	x21, 42dfc8 <feof@plt+0x2b2c8>
  42df68:	cmp	w22, w20
  42df6c:	b.ne	42dfc8 <feof@plt+0x2b2c8>  // b.any
  42df70:	ldr	w8, [x19, #36]
  42df74:	cbz	w8, 42df94 <feof@plt+0x2b294>
  42df78:	ldr	x9, [x19, #24]
  42df7c:	sub	w8, w8, #0x1
  42df80:	sbfiz	x8, x8, #5, #32
  42df84:	ldr	w8, [x9, x8]
  42df88:	cmp	w8, w23
  42df8c:	b.hi	42dfa0 <feof@plt+0x2b2a0>  // b.pmore
  42df90:	b	42dfc8 <feof@plt+0x2b2c8>
  42df94:	mov	w8, #0x80000000            	// #-2147483648
  42df98:	cmp	w8, w23
  42df9c:	b.ls	42dfc8 <feof@plt+0x2b2c8>  // b.plast
  42dfa0:	cmp	w8, w20
  42dfa4:	b.ls	42dfc8 <feof@plt+0x2b2c8>  // b.plast
  42dfa8:	mov	x0, x19
  42dfac:	mov	w1, w20
  42dfb0:	bl	42e10c <feof@plt+0x2b40c>
  42dfb4:	ldrh	w8, [x0, #6]
  42dfb8:	lsr	x9, x8, #8
  42dfbc:	lsr	w8, w24, w9
  42dfc0:	lsr	w9, w8, w9
  42dfc4:	cbz	w9, 42e0f8 <feof@plt+0x2b3f8>
  42dfc8:	cmp	w22, w20
  42dfcc:	b.ne	42dfdc <feof@plt+0x2b2dc>  // b.any
  42dfd0:	cbnz	x21, 42dfdc <feof@plt+0x2b2dc>
  42dfd4:	cmp	w22, w23
  42dfd8:	b.eq	42e0dc <feof@plt+0x2b3dc>  // b.none
  42dfdc:	cbnz	x21, 42dfec <feof@plt+0x2b2ec>
  42dfe0:	ldr	w8, [x19, #128]
  42dfe4:	add	w8, w8, #0x1
  42dfe8:	str	w8, [x19, #128]
  42dfec:	stp	w22, w20, [sp, #8]
  42dff0:	str	w23, [sp, #16]
  42dff4:	str	x21, [sp, #24]
  42dff8:	ldr	x0, [x19, #88]
  42dffc:	add	x1, sp, #0x8
  42e000:	mov	w2, #0x1                   	// #1
  42e004:	bl	4548bc <feof@plt+0x51bbc>
  42e008:	ldr	x8, [x0]
  42e00c:	cbnz	x8, 42e0c0 <feof@plt+0x2b3c0>
  42e010:	ldp	w8, w9, [x19, #96]
  42e014:	mov	x20, x0
  42e018:	cmp	w8, w9
  42e01c:	b.cc	42e08c <feof@plt+0x2b38c>  // b.lo, b.ul, b.last
  42e020:	ldr	x8, [x19, #72]
  42e024:	ldr	x21, [x19, #104]
  42e028:	adrp	x10, 455000 <_obstack_begin_1@@Base+0xa4>
  42e02c:	add	x10, x10, #0x3e0
  42e030:	cmp	x8, #0x0
  42e034:	lsl	w11, w9, #1
  42e038:	mov	w12, #0x80                  	// #128
  42e03c:	csel	x8, x10, x8, eq  // eq = none
  42e040:	cmp	w9, #0x0
  42e044:	mov	w13, #0x18                  	// #24
  42e048:	csel	w9, w12, w11, eq  // eq = none
  42e04c:	umull	x1, w9, w13
  42e050:	mov	x0, x21
  42e054:	str	w9, [x19, #100]
  42e058:	blr	x8
  42e05c:	sub	x8, x0, x21
  42e060:	str	x0, [x19, #104]
  42e064:	str	x8, [sp]
  42e068:	ldr	w8, [x19, #100]
  42e06c:	cmp	w8, #0x81
  42e070:	b.cc	42e088 <feof@plt+0x2b388>  // b.lo, b.ul, b.last
  42e074:	ldr	x0, [x19, #88]
  42e078:	adrp	x1, 42e000 <feof@plt+0x2b300>
  42e07c:	add	x1, x1, #0x2ac
  42e080:	mov	x2, sp
  42e084:	bl	454a88 <feof@plt+0x51d88>
  42e088:	ldr	w8, [x19, #96]
  42e08c:	ldr	x9, [x19, #104]
  42e090:	mov	w10, #0x18                  	// #24
  42e094:	add	w11, w8, #0x1
  42e098:	umaddl	x9, w8, w10, x9
  42e09c:	str	x9, [x20]
  42e0a0:	str	w11, [x19, #96]
  42e0a4:	ldr	x9, [x19, #104]
  42e0a8:	ldr	x11, [sp, #24]
  42e0ac:	ldur	q0, [sp, #8]
  42e0b0:	umaddl	x8, w8, w10, x9
  42e0b4:	str	x11, [x8, #16]
  42e0b8:	str	q0, [x8]
  42e0bc:	ldr	x8, [x20]
  42e0c0:	ldr	x9, [x19, #104]
  42e0c4:	sub	x8, x8, x9
  42e0c8:	mov	w9, #0xaaab                	// #43691
  42e0cc:	lsr	x8, x8, #3
  42e0d0:	movk	w9, #0xaaaa, lsl #16
  42e0d4:	mul	w8, w8, w9
  42e0d8:	orr	w23, w8, #0x80000000
  42e0dc:	mov	w0, w23
  42e0e0:	ldp	x20, x19, [sp, #80]
  42e0e4:	ldp	x22, x21, [sp, #64]
  42e0e8:	ldp	x24, x23, [sp, #48]
  42e0ec:	ldp	x29, x30, [sp, #32]
  42e0f0:	add	sp, sp, #0x60
  42e0f4:	ret
  42e0f8:	ldr	w9, [x19, #124]
  42e0fc:	orr	w23, w8, w20
  42e100:	add	w8, w9, #0x1
  42e104:	str	w8, [x19, #124]
  42e108:	b	42e0dc <feof@plt+0x2b3dc>
  42e10c:	tbz	w1, #31, 42e128 <feof@plt+0x2b428>
  42e110:	ldr	x8, [x0, #104]
  42e114:	and	w9, w1, #0x7fffffff
  42e118:	mov	w10, #0x18                  	// #24
  42e11c:	umull	x9, w9, w10
  42e120:	ldr	w1, [x8, x9]
  42e124:	tbnz	w1, #31, 42e21c <feof@plt+0x2b51c>
  42e128:	mov	w8, wzr
  42e12c:	mov	w9, w1
  42e130:	lsr	w10, w9, #28
  42e134:	cmp	w10, #0x7
  42e138:	b.cc	42e15c <feof@plt+0x2b45c>  // b.lo, b.ul, b.last
  42e13c:	tbnz	w9, #31, 42e15c <feof@plt+0x2b45c>
  42e140:	cbz	w8, 42e1a8 <feof@plt+0x2b4a8>
  42e144:	ldr	x8, [x0, #104]
  42e148:	and	w9, w1, #0x7fffffff
  42e14c:	mov	w10, #0x18                  	// #24
  42e150:	umull	x9, w9, w10
  42e154:	ldr	w1, [x8, x9]
  42e158:	b	42e1ac <feof@plt+0x2b4ac>
  42e15c:	cbz	w8, 42e174 <feof@plt+0x2b474>
  42e160:	ldr	x8, [x0, #104]
  42e164:	and	w9, w1, #0x7fffffff
  42e168:	mov	w10, #0x18                  	// #24
  42e16c:	umull	x9, w9, w10
  42e170:	ldr	w1, [x8, x9]
  42e174:	mov	x8, xzr
  42e178:	cbz	x0, 42e29c <feof@plt+0x2b59c>
  42e17c:	cmp	w1, #0x2
  42e180:	b.cc	42e29c <feof@plt+0x2b59c>  // b.lo, b.ul, b.last
  42e184:	ldrsw	x10, [x0, #16]
  42e188:	ldr	x9, [x0]
  42e18c:	mov	w8, #0x18                  	// #24
  42e190:	madd	x8, x10, x8, x9
  42e194:	ldr	w11, [x8]
  42e198:	cmp	w1, w11
  42e19c:	b.cs	42e234 <feof@plt+0x2b534>  // b.hs, b.nlast
  42e1a0:	mov	w11, wzr
  42e1a4:	b	42e258 <feof@plt+0x2b558>
  42e1a8:	cbz	x0, 42e2a4 <feof@plt+0x2b5a4>
  42e1ac:	ldrsw	x10, [x0, #40]
  42e1b0:	ldr	x9, [x0, #24]
  42e1b4:	add	x8, x9, x10, lsl #5
  42e1b8:	ldr	w11, [x8]
  42e1bc:	cmp	w1, w11
  42e1c0:	b.cs	42e1cc <feof@plt+0x2b4cc>  // b.hs, b.nlast
  42e1c4:	ldr	w8, [x0, #36]
  42e1c8:	b	42e204 <feof@plt+0x2b504>
  42e1cc:	cbz	w10, 42e29c <feof@plt+0x2b59c>
  42e1d0:	ldur	w11, [x8, #-32]
  42e1d4:	cmp	w1, w11
  42e1d8:	b.cc	42e29c <feof@plt+0x2b59c>  // b.lo, b.ul, b.last
  42e1dc:	sub	w8, w10, #0x1
  42e1e0:	mov	w10, wzr
  42e1e4:	b	42e204 <feof@plt+0x2b504>
  42e1e8:	add	w11, w10, w8
  42e1ec:	lsr	w11, w11, #1
  42e1f0:	lsl	x12, x11, #5
  42e1f4:	ldr	w12, [x9, x12]
  42e1f8:	cmp	w12, w1
  42e1fc:	csinc	w10, w10, w11, ls  // ls = plast
  42e200:	csel	w8, w8, w11, hi  // hi = pmore
  42e204:	cmp	w10, w8
  42e208:	b.cc	42e1e8 <feof@plt+0x2b4e8>  // b.lo, b.ul, b.last
  42e20c:	str	w8, [x0, #40]
  42e210:	sxtw	x8, w8
  42e214:	add	x0, x9, x8, lsl #5
  42e218:	ret
  42e21c:	and	x9, x1, #0x7fffffff
  42e220:	mov	w10, #0x18                  	// #24
  42e224:	mul	x9, x9, x10
  42e228:	ldr	w9, [x8, x9]
  42e22c:	mov	w8, #0x1                   	// #1
  42e230:	b	42e130 <feof@plt+0x2b430>
  42e234:	ldr	w12, [x0, #12]
  42e238:	add	w11, w10, #0x1
  42e23c:	cmp	w11, w12
  42e240:	b.eq	42e29c <feof@plt+0x2b59c>  // b.none
  42e244:	ldr	w11, [x8, #24]
  42e248:	cmp	w1, w11
  42e24c:	mov	w11, w10
  42e250:	mov	w10, w12
  42e254:	b.cc	42e29c <feof@plt+0x2b59c>  // b.lo, b.ul, b.last
  42e258:	sub	w8, w10, w11
  42e25c:	cmp	w8, #0x2
  42e260:	b.cc	42e290 <feof@plt+0x2b590>  // b.lo, b.ul, b.last
  42e264:	mov	w8, #0x18                  	// #24
  42e268:	add	w12, w11, w10
  42e26c:	lsr	w12, w12, #1
  42e270:	umull	x13, w12, w8
  42e274:	ldr	w13, [x9, x13]
  42e278:	cmp	w13, w1
  42e27c:	csel	w11, w11, w12, hi  // hi = pmore
  42e280:	csel	w10, w12, w10, hi  // hi = pmore
  42e284:	sub	w12, w10, w11
  42e288:	cmp	w12, #0x1
  42e28c:	b.hi	42e268 <feof@plt+0x2b568>  // b.pmore
  42e290:	mov	w8, #0x18                  	// #24
  42e294:	smaddl	x8, w11, w8, x9
  42e298:	str	w11, [x0, #16]
  42e29c:	mov	x0, x8
  42e2a0:	ret
  42e2a4:	mov	x0, xzr
  42e2a8:	ret
  42e2ac:	ldr	x9, [x0]
  42e2b0:	ldr	x10, [x1]
  42e2b4:	mov	x8, x0
  42e2b8:	mov	w0, #0x1                   	// #1
  42e2bc:	add	x9, x10, x9
  42e2c0:	str	x9, [x8]
  42e2c4:	ret
  42e2c8:	ldr	x8, [x0, #104]
  42e2cc:	and	w9, w1, #0x7fffffff
  42e2d0:	mov	w10, #0x18                  	// #24
  42e2d4:	umaddl	x8, w9, w10, x8
  42e2d8:	ldr	x0, [x8, #16]
  42e2dc:	ret
  42e2e0:	ldr	x8, [x0, #104]
  42e2e4:	and	w9, w1, #0x7fffffff
  42e2e8:	mov	w10, #0x18                  	// #24
  42e2ec:	umull	x9, w9, w10
  42e2f0:	ldr	w0, [x8, x9]
  42e2f4:	ret
  42e2f8:	stp	x29, x30, [sp, #-32]!
  42e2fc:	str	x19, [sp, #16]
  42e300:	mov	w19, w1
  42e304:	mov	x29, sp
  42e308:	tbnz	w1, #31, 42e330 <feof@plt+0x2b630>
  42e30c:	cmp	w19, #0x2
  42e310:	b.cc	42e38c <feof@plt+0x2b68c>  // b.lo, b.ul, b.last
  42e314:	ldr	w8, [x0, #36]
  42e318:	cbz	w8, 42e348 <feof@plt+0x2b648>
  42e31c:	ldr	x9, [x0, #24]
  42e320:	sub	w8, w8, #0x1
  42e324:	sbfiz	x8, x8, #5, #32
  42e328:	ldr	w8, [x9, x8]
  42e32c:	b	42e34c <feof@plt+0x2b64c>
  42e330:	ldr	x8, [x0, #104]
  42e334:	and	w9, w19, #0x7fffffff
  42e338:	mov	w10, #0x18                  	// #24
  42e33c:	umaddl	x8, w9, w10, x8
  42e340:	ldp	w19, w8, [x8, #4]
  42e344:	b	42e390 <feof@plt+0x2b690>
  42e348:	mov	w8, #0x80000000            	// #-2147483648
  42e34c:	mov	w9, #0x50000000            	// #1342177280
  42e350:	cmp	w19, w9
  42e354:	b.hi	42e38c <feof@plt+0x2b68c>  // b.pmore
  42e358:	cmp	w8, w19
  42e35c:	b.ls	42e38c <feof@plt+0x2b68c>  // b.plast
  42e360:	mov	w1, w19
  42e364:	bl	42e10c <feof@plt+0x2b40c>
  42e368:	ldrh	w8, [x0, #6]
  42e36c:	mov	w9, #0xffffffff            	// #-1
  42e370:	lsr	x8, x8, #8
  42e374:	lsl	w9, w9, w8
  42e378:	bic	w9, w19, w9
  42e37c:	sub	w19, w19, w9
  42e380:	lsl	w8, w9, w8
  42e384:	add	w8, w19, w8
  42e388:	b	42e390 <feof@plt+0x2b690>
  42e38c:	mov	w8, w19
  42e390:	mov	w0, w19
  42e394:	ldr	x19, [sp, #16]
  42e398:	bfi	x0, x8, #32, #32
  42e39c:	ldp	x29, x30, [sp], #32
  42e3a0:	ret
  42e3a4:	stp	x29, x30, [sp, #-32]!
  42e3a8:	str	x19, [sp, #16]
  42e3ac:	mov	x29, sp
  42e3b0:	tbnz	w1, #31, 42e3d8 <feof@plt+0x2b6d8>
  42e3b4:	mov	w19, w1
  42e3b8:	bl	42e10c <feof@plt+0x2b40c>
  42e3bc:	cbz	x0, 42e3e0 <feof@plt+0x2b6e0>
  42e3c0:	ldrb	w8, [x0, #7]
  42e3c4:	mov	w9, #0xffffffff            	// #-1
  42e3c8:	lsl	w8, w9, w8
  42e3cc:	bics	wzr, w19, w8
  42e3d0:	cset	w0, eq  // eq = none
  42e3d4:	b	42e3e4 <feof@plt+0x2b6e4>
  42e3d8:	mov	w0, wzr
  42e3dc:	b	42e3e4 <feof@plt+0x2b6e4>
  42e3e0:	mov	w0, #0x1                   	// #1
  42e3e4:	ldr	x19, [sp, #16]
  42e3e8:	ldp	x29, x30, [sp], #32
  42e3ec:	ret
  42e3f0:	stp	x29, x30, [sp, #-32]!
  42e3f4:	str	x19, [sp, #16]
  42e3f8:	mov	w19, w1
  42e3fc:	mov	x29, sp
  42e400:	tbnz	w1, #31, 42e428 <feof@plt+0x2b728>
  42e404:	ldr	w8, [x0, #36]
  42e408:	cbz	w8, 42e444 <feof@plt+0x2b744>
  42e40c:	ldr	x9, [x0, #24]
  42e410:	sub	w8, w8, #0x1
  42e414:	sbfiz	x8, x8, #5, #32
  42e418:	ldr	w8, [x9, x8]
  42e41c:	cmp	w19, #0x2
  42e420:	b.cs	42e450 <feof@plt+0x2b750>  // b.hs, b.nlast
  42e424:	b	42e470 <feof@plt+0x2b770>
  42e428:	ldr	x8, [x0, #104]
  42e42c:	and	w9, w19, #0x7fffffff
  42e430:	mov	w10, #0x18                  	// #24
  42e434:	umull	x9, w9, w10
  42e438:	ldr	w19, [x8, x9]
  42e43c:	ldr	w8, [x0, #36]
  42e440:	cbnz	w8, 42e40c <feof@plt+0x2b70c>
  42e444:	mov	w8, #0x80000000            	// #-2147483648
  42e448:	cmp	w19, #0x2
  42e44c:	b.cc	42e470 <feof@plt+0x2b770>  // b.lo, b.ul, b.last
  42e450:	cmp	w19, w8
  42e454:	b.cs	42e470 <feof@plt+0x2b770>  // b.hs, b.nlast
  42e458:	mov	w1, w19
  42e45c:	bl	42e10c <feof@plt+0x2b40c>
  42e460:	ldrb	w8, [x0, #7]
  42e464:	mov	w9, #0xffffffff            	// #-1
  42e468:	lsl	w8, w9, w8
  42e46c:	and	w19, w8, w19
  42e470:	mov	w0, w19
  42e474:	ldr	x19, [sp, #16]
  42e478:	ldp	x29, x30, [sp], #32
  42e47c:	ret
  42e480:	stp	x29, x30, [sp, #-32]!
  42e484:	movi	v0.2d, #0x0
  42e488:	adrp	x8, 455000 <_obstack_begin_1@@Base+0xa4>
  42e48c:	stp	x20, x19, [sp, #16]
  42e490:	mov	w19, w1
  42e494:	add	x8, x8, #0x3e0
  42e498:	stp	q0, q0, [x0, #96]
  42e49c:	stp	q0, q0, [x0, #64]
  42e4a0:	stp	q0, q0, [x0, #32]
  42e4a4:	stp	q0, q0, [x0]
  42e4a8:	movi	v0.2s, #0x1
  42e4ac:	adrp	x1, 42d000 <feof@plt+0x2a300>
  42e4b0:	adrp	x2, 42d000 <feof@plt+0x2a300>
  42e4b4:	mov	x20, x0
  42e4b8:	str	xzr, [x0, #128]
  42e4bc:	str	x8, [x0, #72]
  42e4c0:	str	d0, [x0, #56]
  42e4c4:	add	x1, x1, #0xe84
  42e4c8:	add	x2, x2, #0xea0
  42e4cc:	mov	w0, #0x64                  	// #100
  42e4d0:	mov	x3, xzr
  42e4d4:	mov	x29, sp
  42e4d8:	bl	453fc4 <feof@plt+0x512c4>
  42e4dc:	str	x0, [x20, #88]
  42e4e0:	str	w19, [x20, #112]
  42e4e4:	ldp	x20, x19, [sp, #16]
  42e4e8:	ldp	x29, x30, [sp], #32
  42e4ec:	ret
  42e4f0:	ldr	w9, [x1, #20]
  42e4f4:	tbz	w9, #31, 42e50c <feof@plt+0x2b80c>
  42e4f8:	ldr	x8, [x0, #104]
  42e4fc:	and	x9, x9, #0x7fffffff
  42e500:	mov	w10, #0x18                  	// #24
  42e504:	mul	x9, x9, x10
  42e508:	ldr	w9, [x8, x9]
  42e50c:	mov	x8, xzr
  42e510:	cbz	x0, 42e5a8 <feof@plt+0x2b8a8>
  42e514:	cmp	w9, #0x2
  42e518:	b.cc	42e5a8 <feof@plt+0x2b8a8>  // b.lo, b.ul, b.last
  42e51c:	ldrsw	x11, [x0, #16]
  42e520:	ldr	x10, [x0]
  42e524:	mov	w8, #0x18                  	// #24
  42e528:	madd	x8, x11, x8, x10
  42e52c:	ldr	w12, [x8]
  42e530:	cmp	w9, w12
  42e534:	b.cs	42e540 <feof@plt+0x2b840>  // b.hs, b.nlast
  42e538:	mov	w12, wzr
  42e53c:	b	42e564 <feof@plt+0x2b864>
  42e540:	ldr	w13, [x0, #12]
  42e544:	add	w12, w11, #0x1
  42e548:	cmp	w12, w13
  42e54c:	b.eq	42e5a8 <feof@plt+0x2b8a8>  // b.none
  42e550:	ldr	w12, [x8, #24]
  42e554:	cmp	w9, w12
  42e558:	mov	w12, w11
  42e55c:	mov	w11, w13
  42e560:	b.cc	42e5a8 <feof@plt+0x2b8a8>  // b.lo, b.ul, b.last
  42e564:	sub	w8, w11, w12
  42e568:	cmp	w8, #0x2
  42e56c:	b.cc	42e59c <feof@plt+0x2b89c>  // b.lo, b.ul, b.last
  42e570:	mov	w8, #0x18                  	// #24
  42e574:	add	w13, w12, w11
  42e578:	lsr	w13, w13, #1
  42e57c:	umull	x14, w13, w8
  42e580:	ldr	w14, [x10, x14]
  42e584:	cmp	w14, w9
  42e588:	csel	w12, w12, w13, hi  // hi = pmore
  42e58c:	csel	w11, w13, w11, hi  // hi = pmore
  42e590:	sub	w13, w11, w12
  42e594:	cmp	w13, #0x1
  42e598:	b.hi	42e574 <feof@plt+0x2b874>  // b.pmore
  42e59c:	mov	w8, #0x18                  	// #24
  42e5a0:	smaddl	x8, w12, w8, x10
  42e5a4:	str	w12, [x0, #16]
  42e5a8:	mov	x0, x8
  42e5ac:	ret
  42e5b0:	stp	x29, x30, [sp, #-64]!
  42e5b4:	stp	x22, x21, [sp, #32]
  42e5b8:	stp	x20, x19, [sp, #48]
  42e5bc:	ldr	w8, [x0, #12]
  42e5c0:	ldr	x9, [x0]
  42e5c4:	mov	w21, #0x18                  	// #24
  42e5c8:	str	x23, [sp, #16]
  42e5cc:	sub	w8, w8, #0x1
  42e5d0:	smaddl	x11, w8, w21, x9
  42e5d4:	mov	x23, x11
  42e5d8:	ldr	w8, [x23, #20]!
  42e5dc:	mov	x29, sp
  42e5e0:	cbnz	w8, 42e5f8 <feof@plt+0x2b8f8>
  42e5e4:	ldp	x20, x19, [sp, #48]
  42e5e8:	ldp	x22, x21, [sp, #32]
  42e5ec:	ldr	x23, [sp, #16]
  42e5f0:	ldp	x29, x30, [sp], #64
  42e5f4:	ret
  42e5f8:	adrp	x20, 463000 <_obstack_memory_used@@Base+0xddd8>
  42e5fc:	mov	x19, x0
  42e600:	adrp	x22, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  42e604:	add	x20, x20, #0x3b3
  42e608:	ldr	x0, [x22, #1416]
  42e60c:	ldr	x2, [x11, #8]
  42e610:	mov	x1, x20
  42e614:	bl	4026f0 <fprintf@plt>
  42e618:	ldr	w8, [x23]
  42e61c:	tbz	w8, #31, 42e630 <feof@plt+0x2b930>
  42e620:	ldr	x9, [x19, #104]
  42e624:	and	x8, x8, #0x7fffffff
  42e628:	mul	x8, x8, x21
  42e62c:	ldr	w8, [x9, x8]
  42e630:	cmp	w8, #0x2
  42e634:	b.cs	42e640 <feof@plt+0x2b940>  // b.hs, b.nlast
  42e638:	mov	x11, xzr
  42e63c:	b	42e6c0 <feof@plt+0x2b9c0>
  42e640:	ldrsw	x10, [x19, #16]
  42e644:	ldr	x9, [x19]
  42e648:	madd	x11, x10, x21, x9
  42e64c:	ldr	w12, [x11]
  42e650:	cmp	w8, w12
  42e654:	b.cs	42e660 <feof@plt+0x2b960>  // b.hs, b.nlast
  42e658:	mov	w12, wzr
  42e65c:	b	42e684 <feof@plt+0x2b984>
  42e660:	ldr	w13, [x19, #12]
  42e664:	add	w12, w10, #0x1
  42e668:	cmp	w12, w13
  42e66c:	b.eq	42e6c0 <feof@plt+0x2b9c0>  // b.none
  42e670:	ldr	w12, [x11, #24]
  42e674:	cmp	w8, w12
  42e678:	mov	w12, w10
  42e67c:	mov	w10, w13
  42e680:	b.cc	42e6c0 <feof@plt+0x2b9c0>  // b.lo, b.ul, b.last
  42e684:	sub	w11, w10, w12
  42e688:	cmp	w11, #0x2
  42e68c:	b.cc	42e6b8 <feof@plt+0x2b9b8>  // b.lo, b.ul, b.last
  42e690:	add	w11, w12, w10
  42e694:	lsr	w11, w11, #1
  42e698:	umull	x13, w11, w21
  42e69c:	ldr	w13, [x9, x13]
  42e6a0:	cmp	w13, w8
  42e6a4:	csel	w12, w12, w11, hi  // hi = pmore
  42e6a8:	csel	w10, w11, w10, hi  // hi = pmore
  42e6ac:	sub	w11, w10, w12
  42e6b0:	cmp	w11, #0x1
  42e6b4:	b.hi	42e690 <feof@plt+0x2b990>  // b.pmore
  42e6b8:	smaddl	x11, w12, w21, x9
  42e6bc:	str	w12, [x19, #16]
  42e6c0:	mov	x23, x11
  42e6c4:	ldr	w8, [x23, #20]!
  42e6c8:	cbz	w8, 42e5e4 <feof@plt+0x2b8e4>
  42e6cc:	b	42e608 <feof@plt+0x2b908>
  42e6d0:	stp	x29, x30, [sp, #-96]!
  42e6d4:	stp	x28, x27, [sp, #16]
  42e6d8:	stp	x26, x25, [sp, #32]
  42e6dc:	stp	x24, x23, [sp, #48]
  42e6e0:	stp	x22, x21, [sp, #64]
  42e6e4:	stp	x20, x19, [sp, #80]
  42e6e8:	ldr	w8, [x0, #56]
  42e6ec:	mov	w21, w4
  42e6f0:	mov	x24, x3
  42e6f4:	mov	w22, w2
  42e6f8:	lsr	w9, w8, #29
  42e6fc:	mov	x19, x0
  42e700:	cmp	w9, #0x2
  42e704:	mov	w23, w1
  42e708:	mov	x29, sp
  42e70c:	b.hi	42e730 <feof@plt+0x2ba30>  // b.pmore
  42e710:	ldr	w10, [x19, #120]
  42e714:	mov	w9, #0x1                   	// #1
  42e718:	lsl	w9, w9, w10
  42e71c:	add	w8, w9, w8
  42e720:	cbz	w10, 42e734 <feof@plt+0x2ba34>
  42e724:	neg	w9, w9
  42e728:	and	w8, w8, w9
  42e72c:	b	42e734 <feof@plt+0x2ba34>
  42e730:	add	w8, w8, #0x1
  42e734:	ldr	w26, [x19, #12]
  42e738:	cmp	w23, #0x1
  42e73c:	b.ne	42e770 <feof@plt+0x2ba70>  // b.any
  42e740:	cbnz	x24, 42e770 <feof@plt+0x2ba70>
  42e744:	ldr	x9, [x19]
  42e748:	sub	w10, w26, #0x1
  42e74c:	mov	w11, #0x18                  	// #24
  42e750:	smaddl	x9, w10, w11, x9
  42e754:	ldr	w9, [x9, #20]
  42e758:	cbnz	w9, 42e770 <feof@plt+0x2ba70>
  42e75c:	ldr	w8, [x19, #48]
  42e760:	mov	x20, xzr
  42e764:	sub	w8, w8, #0x1
  42e768:	str	w8, [x19, #48]
  42e76c:	b	42e9e4 <feof@plt+0x2bce4>
  42e770:	ldr	w9, [x19, #8]
  42e774:	lsr	w10, w8, #28
  42e778:	cmp	w10, #0x6
  42e77c:	csel	w25, wzr, w8, hi  // hi = pmore
  42e780:	cmp	w26, w9
  42e784:	b.ne	42e7fc <feof@plt+0x2bafc>  // b.any
  42e788:	ldr	x10, [x19, #80]
  42e78c:	lsl	w8, w26, #1
  42e790:	cmp	w26, #0x0
  42e794:	mov	w9, #0x100                 	// #256
  42e798:	ldr	x20, [x19]
  42e79c:	csel	w8, w9, w8, eq  // eq = none
  42e7a0:	mov	w27, #0x18                  	// #24
  42e7a4:	umull	x0, w8, w27
  42e7a8:	blr	x10
  42e7ac:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  42e7b0:	movk	x8, #0xaaab
  42e7b4:	ldr	x9, [x19, #72]
  42e7b8:	umulh	x8, x0, x8
  42e7bc:	lsr	x28, x8, #4
  42e7c0:	ubfx	x8, x8, #4, #32
  42e7c4:	add	x8, x8, w28, uxtw #1
  42e7c8:	lsl	x1, x8, #3
  42e7cc:	mov	x0, x20
  42e7d0:	blr	x9
  42e7d4:	sub	w8, w28, w26
  42e7d8:	mov	x20, x0
  42e7dc:	madd	x0, x26, x27, x0
  42e7e0:	umull	x2, w8, w27
  42e7e4:	mov	w1, wzr
  42e7e8:	bl	402790 <memset@plt>
  42e7ec:	ldr	w8, [x19, #12]
  42e7f0:	str	x20, [x19]
  42e7f4:	str	w28, [x19, #8]
  42e7f8:	b	42e804 <feof@plt+0x2bb04>
  42e7fc:	ldr	x20, [x19]
  42e800:	mov	w8, w26
  42e804:	mov	w9, #0x18                  	// #24
  42e808:	add	w8, w8, #0x1
  42e80c:	madd	x20, x26, x9, x20
  42e810:	str	w8, [x19, #12]
  42e814:	str	w25, [x20]
  42e818:	strb	w23, [x20, #4]
  42e81c:	cbz	x24, 42e83c <feof@plt+0x2bb3c>
  42e820:	ldrb	w8, [x24]
  42e824:	cmp	w8, #0x0
  42e828:	adrp	x8, 463000 <_obstack_memory_used@@Base+0xddd8>
  42e82c:	ccmp	w23, #0x3, #0x4, eq  // eq = none
  42e830:	add	x8, x8, #0x3df
  42e834:	csel	x2, x8, x24, ne  // ne = any
  42e838:	b	42e840 <feof@plt+0x2bb40>
  42e83c:	mov	x2, xzr
  42e840:	cmp	w23, #0x3
  42e844:	mov	w8, #0x2                   	// #2
  42e848:	csel	w8, w8, w23, eq  // eq = none
  42e84c:	cmp	w8, #0x1
  42e850:	b.ne	42e86c <feof@plt+0x2bb6c>  // b.any
  42e854:	ldur	w10, [x20, #-4]
  42e858:	tbnz	w10, #31, 42e874 <feof@plt+0x2bb74>
  42e85c:	cmp	w10, #0x2
  42e860:	b.cs	42e890 <feof@plt+0x2bb90>  // b.hs, b.nlast
  42e864:	mov	x9, xzr
  42e868:	b	42e91c <feof@plt+0x2bc1c>
  42e86c:	mov	x9, xzr
  42e870:	b	42e944 <feof@plt+0x2bc44>
  42e874:	ldr	x9, [x19, #104]
  42e878:	and	x10, x10, #0x7fffffff
  42e87c:	mov	w11, #0x18                  	// #24
  42e880:	mul	x10, x10, x11
  42e884:	ldr	w10, [x9, x10]
  42e888:	cmp	w10, #0x2
  42e88c:	b.cc	42e864 <feof@plt+0x2bb64>  // b.lo, b.ul, b.last
  42e890:	ldrsw	x12, [x19, #16]
  42e894:	ldr	x11, [x19]
  42e898:	mov	w9, #0x18                  	// #24
  42e89c:	madd	x9, x12, x9, x11
  42e8a0:	ldr	w13, [x9]
  42e8a4:	cmp	w10, w13
  42e8a8:	b.cs	42e8f8 <feof@plt+0x2bbf8>  // b.hs, b.nlast
  42e8ac:	mov	w13, wzr
  42e8b0:	sub	w9, w12, w13
  42e8b4:	cmp	w9, #0x2
  42e8b8:	b.cc	42e8e8 <feof@plt+0x2bbe8>  // b.lo, b.ul, b.last
  42e8bc:	mov	w9, #0x18                  	// #24
  42e8c0:	add	w14, w13, w12
  42e8c4:	lsr	w14, w14, #1
  42e8c8:	umull	x15, w14, w9
  42e8cc:	ldr	w15, [x11, x15]
  42e8d0:	cmp	w15, w10
  42e8d4:	csel	w13, w13, w14, hi  // hi = pmore
  42e8d8:	csel	w12, w14, w12, hi  // hi = pmore
  42e8dc:	sub	w14, w12, w13
  42e8e0:	cmp	w14, #0x1
  42e8e4:	b.hi	42e8c0 <feof@plt+0x2bbc0>  // b.pmore
  42e8e8:	mov	w9, #0x18                  	// #24
  42e8ec:	smaddl	x9, w13, w9, x11
  42e8f0:	str	w13, [x19, #16]
  42e8f4:	b	42e91c <feof@plt+0x2bc1c>
  42e8f8:	ldr	w14, [x19, #12]
  42e8fc:	add	w13, w12, #0x1
  42e900:	cmp	w13, w14
  42e904:	b.eq	42e91c <feof@plt+0x2bc1c>  // b.none
  42e908:	ldr	w13, [x9, #24]
  42e90c:	cmp	w10, w13
  42e910:	mov	w13, w12
  42e914:	mov	w12, w14
  42e918:	b.cs	42e8b0 <feof@plt+0x2bbb0>  // b.hs, b.nlast
  42e91c:	cbnz	x2, 42e944 <feof@plt+0x2bc44>
  42e920:	ldr	w10, [x9, #24]
  42e924:	ldr	w11, [x9]
  42e928:	ldrb	w12, [x9, #6]
  42e92c:	ldr	w13, [x9, #16]
  42e930:	ldr	x2, [x9, #8]
  42e934:	ldrb	w22, [x9, #5]
  42e938:	sub	w10, w10, w11
  42e93c:	lsr	w10, w10, w12
  42e940:	add	w21, w10, w13
  42e944:	strb	w22, [x20, #5]
  42e948:	str	x2, [x20, #8]
  42e94c:	str	w21, [x20, #16]
  42e950:	ldr	w10, [x19, #12]
  42e954:	cmp	w8, #0x2
  42e958:	sub	w10, w10, #0x1
  42e95c:	str	w10, [x19, #16]
  42e960:	strh	wzr, [x20, #6]
  42e964:	stp	w25, w25, [x19, #56]
  42e968:	str	wzr, [x19, #64]
  42e96c:	b.eq	42e9a4 <feof@plt+0x2bca4>  // b.none
  42e970:	cbnz	w8, 42e9ac <feof@plt+0x2bcac>
  42e974:	ldr	w21, [x19, #48]
  42e978:	cbz	w21, 42e9cc <feof@plt+0x2bccc>
  42e97c:	ldur	w8, [x20, #-24]
  42e980:	ldr	w9, [x20]
  42e984:	ldurb	w10, [x20, #-18]
  42e988:	mov	w11, #0xffffffff            	// #-1
  42e98c:	mvn	w12, w8
  42e990:	add	w9, w9, w12
  42e994:	lsl	w10, w11, w10
  42e998:	and	w9, w10, w9
  42e99c:	add	w8, w9, w8
  42e9a0:	b	42e9d0 <feof@plt+0x2bcd0>
  42e9a4:	ldur	w8, [x20, #-4]
  42e9a8:	b	42e9c4 <feof@plt+0x2bcc4>
  42e9ac:	cmp	w8, #0x1
  42e9b0:	b.ne	42e9e4 <feof@plt+0x2bce4>  // b.any
  42e9b4:	ldr	w8, [x19, #48]
  42e9b8:	sub	w8, w8, #0x1
  42e9bc:	str	w8, [x19, #48]
  42e9c0:	ldr	w8, [x9, #20]
  42e9c4:	str	w8, [x20, #20]
  42e9c8:	b	42e9e4 <feof@plt+0x2bce4>
  42e9cc:	mov	w8, wzr
  42e9d0:	str	w8, [x20, #20]
  42e9d4:	ldrb	w8, [x19, #52]
  42e9d8:	add	w9, w21, #0x1
  42e9dc:	str	w9, [x19, #48]
  42e9e0:	cbnz	w8, 42ea04 <feof@plt+0x2bd04>
  42e9e4:	mov	x0, x20
  42e9e8:	ldp	x20, x19, [sp, #80]
  42e9ec:	ldp	x22, x21, [sp, #64]
  42e9f0:	ldp	x24, x23, [sp, #48]
  42e9f4:	ldp	x26, x25, [sp, #32]
  42e9f8:	ldp	x28, x27, [sp, #16]
  42e9fc:	ldp	x29, x30, [sp], #96
  42ea00:	ret
  42ea04:	adrp	x19, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  42ea08:	ldr	x0, [x19, #1416]
  42ea0c:	cbz	w21, 42ea4c <feof@plt+0x2bd4c>
  42ea10:	mov	w22, #0x2e                  	// #46
  42ea14:	ldp	x8, x9, [x0, #40]
  42ea18:	cmp	x8, x9
  42ea1c:	b.cs	42ea3c <feof@plt+0x2bd3c>  // b.hs, b.nlast
  42ea20:	add	x9, x8, #0x1
  42ea24:	str	x9, [x0, #40]
  42ea28:	strb	w22, [x8]
  42ea2c:	ldr	x0, [x19, #1416]
  42ea30:	subs	w21, w21, #0x1
  42ea34:	b.ne	42ea14 <feof@plt+0x2bd14>  // b.any
  42ea38:	b	42ea48 <feof@plt+0x2bd48>
  42ea3c:	mov	w1, #0x2e                  	// #46
  42ea40:	bl	402730 <__overflow@plt>
  42ea44:	b	42ea2c <feof@plt+0x2bd2c>
  42ea48:	ldr	x2, [x20, #8]
  42ea4c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42ea50:	add	x1, x1, #0x56d
  42ea54:	bl	4026f0 <fprintf@plt>
  42ea58:	b	42e9e4 <feof@plt+0x2bce4>
  42ea5c:	ldr	x8, [x0, #24]
  42ea60:	cmp	x8, #0x0
  42ea64:	cset	w0, ne  // ne = any
  42ea68:	ret
  42ea6c:	stp	x29, x30, [sp, #-80]!
  42ea70:	stp	x26, x25, [sp, #16]
  42ea74:	stp	x24, x23, [sp, #32]
  42ea78:	stp	x22, x21, [sp, #48]
  42ea7c:	stp	x20, x19, [sp, #64]
  42ea80:	ldr	w24, [x0, #36]
  42ea84:	mov	w21, w3
  42ea88:	mov	w20, w2
  42ea8c:	mov	x19, x0
  42ea90:	mov	x22, x1
  42ea94:	mov	x29, sp
  42ea98:	cbz	w24, 42eab0 <feof@plt+0x2bdb0>
  42ea9c:	ldr	x8, [x19, #24]
  42eaa0:	sub	w9, w24, #0x1
  42eaa4:	sbfiz	x9, x9, #5, #32
  42eaa8:	ldr	w8, [x8, x9]
  42eaac:	b	42eab4 <feof@plt+0x2bdb4>
  42eab0:	mov	w8, #0x80000000            	// #-2147483648
  42eab4:	sub	w25, w8, w21
  42eab8:	lsr	w8, w25, #28
  42eabc:	cmp	w8, #0x7
  42eac0:	b.cs	42eacc <feof@plt+0x2bdcc>  // b.hs, b.nlast
  42eac4:	mov	x23, xzr
  42eac8:	b	42eb88 <feof@plt+0x2be88>
  42eacc:	ldr	w8, [x19, #32]
  42ead0:	cmp	w24, w8
  42ead4:	b.ne	42eb34 <feof@plt+0x2be34>  // b.any
  42ead8:	ldr	x9, [x19, #80]
  42eadc:	lsl	w8, w24, #1
  42eae0:	cmp	w24, #0x0
  42eae4:	ldr	x23, [x19, #24]
  42eae8:	mov	w10, #0x100                 	// #256
  42eaec:	csel	w8, w10, w8, eq  // eq = none
  42eaf0:	lsl	x0, x8, #5
  42eaf4:	blr	x9
  42eaf8:	ldr	x8, [x19, #72]
  42eafc:	lsr	x26, x0, #5
  42eb00:	and	x1, x0, #0x1fffffffe0
  42eb04:	mov	x0, x23
  42eb08:	blr	x8
  42eb0c:	sub	w8, w26, w24
  42eb10:	mov	x23, x0
  42eb14:	add	x0, x0, x24, lsl #5
  42eb18:	lsl	x2, x8, #5
  42eb1c:	mov	w1, wzr
  42eb20:	bl	402790 <memset@plt>
  42eb24:	ldr	w8, [x19, #36]
  42eb28:	str	x23, [x19, #24]
  42eb2c:	str	w26, [x19, #32]
  42eb30:	b	42eb3c <feof@plt+0x2be3c>
  42eb34:	ldr	x23, [x19, #24]
  42eb38:	mov	w8, w24
  42eb3c:	add	x23, x23, x24, lsl #5
  42eb40:	add	w8, w8, #0x1
  42eb44:	str	w8, [x19, #36]
  42eb48:	str	x22, [x23, #8]
  42eb4c:	stp	w25, w21, [x23]
  42eb50:	ldr	x8, [x19, #72]
  42eb54:	lsl	w9, w21, #1
  42eb58:	lsl	x21, x9, #2
  42eb5c:	mov	x0, xzr
  42eb60:	mov	x1, x21
  42eb64:	blr	x8
  42eb68:	mov	w1, wzr
  42eb6c:	mov	x2, x21
  42eb70:	str	x0, [x23, #16]
  42eb74:	str	w20, [x23, #24]
  42eb78:	bl	402790 <memset@plt>
  42eb7c:	ldr	w8, [x19, #36]
  42eb80:	sub	w8, w8, #0x1
  42eb84:	str	w8, [x19, #40]
  42eb88:	mov	x0, x23
  42eb8c:	ldp	x20, x19, [sp, #64]
  42eb90:	ldp	x22, x21, [sp, #48]
  42eb94:	ldp	x24, x23, [sp, #32]
  42eb98:	ldp	x26, x25, [sp, #16]
  42eb9c:	ldp	x29, x30, [sp], #80
  42eba0:	ret
  42eba4:	ldr	x8, [x0, #16]
  42eba8:	mov	w10, #0x1                   	// #1
  42ebac:	lsl	w9, w1, #1
  42ebb0:	bfi	w10, w1, #1, #31
  42ebb4:	str	w2, [x8, w9, uxtw #2]
  42ebb8:	str	w3, [x8, w10, uxtw #2]
  42ebbc:	ldr	w8, [x0]
  42ebc0:	add	w0, w8, w1
  42ebc4:	ret
  42ebc8:	stp	x29, x30, [sp, #-64]!
  42ebcc:	stp	x24, x23, [sp, #16]
  42ebd0:	stp	x22, x21, [sp, #32]
  42ebd4:	stp	x20, x19, [sp, #48]
  42ebd8:	ldr	w9, [x0, #12]
  42ebdc:	ldr	x11, [x0]
  42ebe0:	mov	w12, #0x18                  	// #24
  42ebe4:	mov	x19, x0
  42ebe8:	sub	w9, w9, #0x1
  42ebec:	ldp	w10, w8, [x0, #56]
  42ebf0:	smaddl	x0, w9, w12, x11
  42ebf4:	ldr	w13, [x0]
  42ebf8:	ldrh	w16, [x0, #6]
  42ebfc:	ldr	w9, [x0, #16]
  42ec00:	mov	w20, w1
  42ec04:	sub	w11, w8, w13
  42ec08:	lsr	w15, w11, w16
  42ec0c:	sub	w9, w1, w9
  42ec10:	mov	w21, #0x6fffffff            	// #1879048191
  42ec14:	and	w12, w16, #0xff
  42ec18:	sub	w14, w9, w15
  42ec1c:	lsr	w11, w16, #8
  42ec20:	mov	x29, sp
  42ec24:	tbnz	w14, #31, 42ec78 <feof@plt+0x2bf78>
  42ec28:	cmp	w14, #0xb
  42ec2c:	mul	w1, w14, w12
  42ec30:	sub	w17, w12, w11
  42ec34:	cset	w18, lt  // lt = tstop
  42ec38:	cmp	w1, #0x3e9
  42ec3c:	lsr	w3, w2, w17
  42ec40:	cset	w1, lt  // lt = tstop
  42ec44:	cbnz	w3, 42ec78 <feof@plt+0x2bf78>
  42ec48:	orr	w18, w18, w1
  42ec4c:	cbz	w18, 42ec78 <feof@plt+0x2bf78>
  42ec50:	cmp	w2, #0x50
  42ec54:	b.hi	42ec60 <feof@plt+0x2bf60>  // b.pmore
  42ec58:	cmp	w17, #0x9
  42ec5c:	b.gt	42ec78 <feof@plt+0x2bf78>
  42ec60:	mov	w17, #0x1                   	// #1
  42ec64:	movk	w17, #0x5000, lsl #16
  42ec68:	cmp	w10, w17
  42ec6c:	b.cc	42ece8 <feof@plt+0x2bfe8>  // b.lo, b.ul, b.last
  42ec70:	cmp	w16, #0xff
  42ec74:	b.ls	42ecc8 <feof@plt+0x2bfc8>  // b.plast
  42ec78:	cmp	w2, #0x1, lsl #12
  42ec7c:	b.hi	42ecf4 <feof@plt+0x2bff4>  // b.pmore
  42ec80:	mov	w8, #0x1                   	// #1
  42ec84:	movk	w8, #0x6000, lsl #16
  42ec88:	cmp	w10, w8
  42ec8c:	b.cs	42ecf4 <feof@plt+0x2bff4>  // b.hs, b.nlast
  42ec90:	mov	w8, #0x50000000            	// #1342177280
  42ec94:	cmp	w10, w8
  42ec98:	b.hi	42eca4 <feof@plt+0x2bfa4>  // b.pmore
  42ec9c:	ldr	w23, [x19, #120]
  42eca0:	b	42eca8 <feof@plt+0x2bfa8>
  42eca4:	mov	w23, wzr
  42eca8:	mov	w8, #0x6                   	// #6
  42ecac:	mov	w16, #0x1                   	// #1
  42ecb0:	add	w8, w8, #0x1
  42ecb4:	lsl	w22, w16, w8
  42ecb8:	cmp	w22, w2
  42ecbc:	b.ls	42ecb0 <feof@plt+0x2bfb0>  // b.plast
  42ecc0:	add	w24, w23, w8
  42ecc4:	b	42ed0c <feof@plt+0x2c00c>
  42ecc8:	mov	w16, #0x1                   	// #1
  42eccc:	movk	w16, #0x6000, lsl #16
  42ecd0:	cmp	w10, w16
  42ecd4:	b.cc	42ece8 <feof@plt+0x2bfe8>  // b.lo, b.ul, b.last
  42ecd8:	cmp	w10, w21
  42ecdc:	b.hi	42ecf4 <feof@plt+0x2bff4>  // b.pmore
  42ece0:	ldr	w16, [x19, #64]
  42ece4:	cbnz	w16, 42ecf4 <feof@plt+0x2bff4>
  42ece8:	ldr	w22, [x19, #64]
  42ecec:	lsl	w9, w14, w12
  42ecf0:	b	42ed68 <feof@plt+0x2c068>
  42ecf4:	mov	w22, wzr
  42ecf8:	mov	w24, wzr
  42ecfc:	mov	w23, wzr
  42ed00:	cmp	w10, w21
  42ed04:	mov	w8, wzr
  42ed08:	b.hi	42ed94 <feof@plt+0x2c094>  // b.pmore
  42ed0c:	cbnz	w15, 42ed34 <feof@plt+0x2c034>
  42ed10:	tbnz	w14, #31, 42ed34 <feof@plt+0x2c034>
  42ed14:	sub	w8, w10, w13
  42ed18:	mov	w10, #0xffffffff            	// #-1
  42ed1c:	lsl	w10, w10, w12
  42ed20:	bic	w8, w8, w10
  42ed24:	lsr	w8, w8, w11
  42ed28:	sub	w10, w24, w23
  42ed2c:	lsr	w8, w8, w10
  42ed30:	cbz	w8, 42edac <feof@plt+0x2c0ac>
  42ed34:	ldrb	w2, [x0, #5]
  42ed38:	ldr	x3, [x0, #8]
  42ed3c:	mov	w1, #0x2                   	// #2
  42ed40:	mov	x0, x19
  42ed44:	mov	w4, w20
  42ed48:	bl	42e6d0 <feof@plt+0x2b9d0>
  42ed4c:	ldr	w10, [x0, #16]
  42ed50:	mov	w9, w24
  42ed54:	ldr	w8, [x0]
  42ed58:	bfi	w9, w23, #8, #24
  42ed5c:	strh	w9, [x0, #6]
  42ed60:	sub	w9, w20, w10
  42ed64:	lsl	w9, w9, w24
  42ed68:	add	w8, w9, w8
  42ed6c:	cmp	w8, w21
  42ed70:	b.ls	42ed7c <feof@plt+0x2c07c>  // b.plast
  42ed74:	mov	w8, wzr
  42ed78:	b	42ed94 <feof@plt+0x2c094>
  42ed7c:	ldr	w9, [x19, #56]
  42ed80:	str	w8, [x19, #60]
  42ed84:	cmp	w8, w9
  42ed88:	b.ls	42ed90 <feof@plt+0x2c090>  // b.plast
  42ed8c:	str	w8, [x19, #56]
  42ed90:	str	w22, [x19, #64]
  42ed94:	ldp	x20, x19, [sp, #48]
  42ed98:	ldp	x22, x21, [sp, #32]
  42ed9c:	ldp	x24, x23, [sp, #16]
  42eda0:	mov	w0, w8
  42eda4:	ldp	x29, x30, [sp], #64
  42eda8:	ret
  42edac:	cmp	w23, w11
  42edb0:	b.lt	42ed34 <feof@plt+0x2c034>  // b.tstop
  42edb4:	mov	w8, w9
  42edb8:	mov	w9, #0x20                  	// #32
  42edbc:	sub	x9, x9, w24, sxtw
  42edc0:	lsr	x8, x8, x9
  42edc4:	cbz	x8, 42ed4c <feof@plt+0x2c04c>
  42edc8:	b	42ed34 <feof@plt+0x2c034>
  42edcc:	stp	x29, x30, [sp, #-48]!
  42edd0:	str	x21, [sp, #16]
  42edd4:	stp	x20, x19, [sp, #32]
  42edd8:	mov	x19, x0
  42eddc:	ldp	w0, w8, [x0, #60]
  42ede0:	mov	w20, w1
  42ede4:	mov	x29, sp
  42ede8:	cmp	w8, w1
  42edec:	b.ls	42ee00 <feof@plt+0x2c100>  // b.plast
  42edf0:	ldr	w9, [x19, #12]
  42edf4:	ldr	x8, [x19]
  42edf8:	sub	w9, w9, #0x1
  42edfc:	b	42ee64 <feof@plt+0x2c164>
  42ee00:	cmp	w20, #0x1, lsl #12
  42ee04:	b.hi	42ee8c <feof@plt+0x2c18c>  // b.pmore
  42ee08:	mov	w8, #0x60000000            	// #1610612736
  42ee0c:	cmp	w0, w8
  42ee10:	b.hi	42ee8c <feof@plt+0x2c18c>  // b.pmore
  42ee14:	ldr	w8, [x19, #12]
  42ee18:	ldr	x9, [x19]
  42ee1c:	mov	w21, #0x18                  	// #24
  42ee20:	add	w2, w20, #0x32
  42ee24:	sub	w8, w8, #0x1
  42ee28:	smaddl	x8, w8, w21, x9
  42ee2c:	ldr	w9, [x8]
  42ee30:	ldrb	w10, [x8, #6]
  42ee34:	ldr	w8, [x8, #16]
  42ee38:	sub	w9, w0, w9
  42ee3c:	lsr	w9, w9, w10
  42ee40:	add	w1, w9, w8
  42ee44:	mov	x0, x19
  42ee48:	bl	42ebc8 <feof@plt+0x2bec8>
  42ee4c:	ldr	w9, [x19, #12]
  42ee50:	ldr	x8, [x19]
  42ee54:	sub	w9, w9, #0x1
  42ee58:	smaddl	x10, w9, w21, x8
  42ee5c:	ldrb	w10, [x10, #6]
  42ee60:	cbz	w10, 42ee8c <feof@plt+0x2c18c>
  42ee64:	sxtw	x9, w9
  42ee68:	mov	w10, #0x18                  	// #24
  42ee6c:	madd	x8, x9, x10, x8
  42ee70:	ldrb	w8, [x8, #7]
  42ee74:	ldr	w9, [x19, #56]
  42ee78:	lsl	w8, w20, w8
  42ee7c:	add	w0, w8, w0
  42ee80:	cmp	w0, w9
  42ee84:	b.cc	42ee8c <feof@plt+0x2c18c>  // b.lo, b.ul, b.last
  42ee88:	str	w0, [x19, #56]
  42ee8c:	ldp	x20, x19, [sp, #32]
  42ee90:	ldr	x21, [sp, #16]
  42ee94:	ldp	x29, x30, [sp], #48
  42ee98:	ret
  42ee9c:	ldr	w8, [x1, #16]
  42eea0:	ldrh	w9, [x1, #6]
  42eea4:	ldr	w10, [x1]
  42eea8:	sub	w8, w2, w8
  42eeac:	lsl	w8, w8, w9
  42eeb0:	add	w8, w8, w10
  42eeb4:	mov	w10, #0x60000000            	// #1610612736
  42eeb8:	cmp	w8, w10
  42eebc:	b.hi	42eedc <feof@plt+0x2c1dc>  // b.pmore
  42eec0:	and	w10, w9, #0xff
  42eec4:	mov	w11, #0xffffffff            	// #-1
  42eec8:	lsl	w10, w11, w10
  42eecc:	bic	w10, w3, w10
  42eed0:	lsr	w9, w9, #8
  42eed4:	lsl	w9, w10, w9
  42eed8:	add	w8, w9, w8
  42eedc:	ldr	w9, [x0, #36]
  42eee0:	cbz	w9, 42eef8 <feof@plt+0x2c1f8>
  42eee4:	ldr	x10, [x0, #24]
  42eee8:	sub	w9, w9, #0x1
  42eeec:	sbfiz	x9, x9, #5, #32
  42eef0:	ldr	w9, [x10, x9]
  42eef4:	b	42eefc <feof@plt+0x2c1fc>
  42eef8:	mov	w9, #0x80000000            	// #-2147483648
  42eefc:	ldr	w10, [x0, #56]
  42ef00:	sub	w11, w9, #0x1
  42ef04:	cmp	w8, w9
  42ef08:	csel	w8, w8, w11, cc  // cc = lo, ul, last
  42ef0c:	cmp	w8, w10
  42ef10:	b.ls	42ef18 <feof@plt+0x2c218>  // b.plast
  42ef14:	str	w8, [x0, #56]
  42ef18:	mov	w0, w8
  42ef1c:	ret
  42ef20:	stp	x29, x30, [sp, #-64]!
  42ef24:	stp	x22, x21, [sp, #32]
  42ef28:	stp	x20, x19, [sp, #48]
  42ef2c:	mov	w21, w2
  42ef30:	mov	w19, w1
  42ef34:	mov	x20, x0
  42ef38:	str	x23, [sp, #16]
  42ef3c:	mov	x29, sp
  42ef40:	tbz	w1, #31, 42ef5c <feof@plt+0x2c25c>
  42ef44:	ldr	x8, [x20, #104]
  42ef48:	and	w9, w19, #0x7fffffff
  42ef4c:	mov	w10, #0x18                  	// #24
  42ef50:	umull	x9, w9, w10
  42ef54:	ldr	w19, [x8, x9]
  42ef58:	tbnz	w19, #31, 42f020 <feof@plt+0x2c320>
  42ef5c:	mov	w8, w19
  42ef60:	lsr	w9, w8, #28
  42ef64:	cmp	w9, #0x7
  42ef68:	b.cc	42ef70 <feof@plt+0x2c270>  // b.lo, b.ul, b.last
  42ef6c:	tbz	w8, #31, 42f128 <feof@plt+0x2c428>
  42ef70:	cbz	w21, 42f128 <feof@plt+0x2c428>
  42ef74:	cmp	w19, #0x2
  42ef78:	b.cc	42f128 <feof@plt+0x2c428>  // b.lo, b.ul, b.last
  42ef7c:	mov	x0, x20
  42ef80:	mov	w1, w19
  42ef84:	bl	42e10c <feof@plt+0x2b40c>
  42ef88:	ldr	w8, [x0]
  42ef8c:	mov	x22, x0
  42ef90:	lsr	w9, w8, #28
  42ef94:	cmp	w9, #0x7
  42ef98:	b.cs	42f034 <feof@plt+0x2c334>  // b.hs, b.nlast
  42ef9c:	ldrh	w9, [x22, #6]
  42efa0:	lsr	w10, w9, #8
  42efa4:	lsl	w11, w21, w10
  42efa8:	add	w11, w11, w19
  42efac:	cmp	w8, w11
  42efb0:	b.cs	42f128 <feof@plt+0x2c428>  // b.hs, b.nlast
  42efb4:	ldr	w11, [x22, #16]
  42efb8:	ldr	w13, [x20, #12]
  42efbc:	sub	w8, w19, w8
  42efc0:	mov	w12, #0xffffffff            	// #-1
  42efc4:	ldr	x14, [x20]
  42efc8:	lsr	w15, w8, w9
  42efcc:	lsl	w9, w12, w9
  42efd0:	bic	w8, w8, w9
  42efd4:	lsr	w9, w8, w10
  42efd8:	add	w8, w15, w11
  42efdc:	sub	w10, w13, #0x1
  42efe0:	mov	w11, #0x18                  	// #24
  42efe4:	smaddl	x11, w10, w11, x14
  42efe8:	cmp	x11, x22
  42efec:	b.eq	42f084 <feof@plt+0x2c384>  // b.none
  42eff0:	ldrh	w12, [x22, #6]
  42eff4:	ldr	w13, [x22, #24]
  42eff8:	lsr	w10, w12, #8
  42effc:	lsl	w14, w21, w10
  42f000:	add	w14, w14, w19
  42f004:	cmp	w14, w13
  42f008:	b.cc	42f090 <feof@plt+0x2c390>  // b.lo, b.ul, b.last
  42f00c:	ldr	w10, [x22, #40]
  42f010:	add	x22, x22, #0x18
  42f014:	cmp	w8, w10
  42f018:	b.cs	42efe8 <feof@plt+0x2c2e8>  // b.hs, b.nlast
  42f01c:	b	42f128 <feof@plt+0x2c428>
  42f020:	and	x9, x19, #0x7fffffff
  42f024:	mov	w10, #0x18                  	// #24
  42f028:	mul	x9, x9, x10
  42f02c:	ldr	w8, [x8, x9]
  42f030:	b	42ef60 <feof@plt+0x2c260>
  42f034:	mov	w23, #0x18                  	// #24
  42f038:	b	42f06c <feof@plt+0x2c36c>
  42f03c:	ldr	x9, [x22, #16]
  42f040:	sub	w8, w19, w8
  42f044:	lsl	w8, w8, #1
  42f048:	mov	x0, x20
  42f04c:	ldr	w19, [x9, w8, uxtw #2]
  42f050:	mov	w1, w19
  42f054:	bl	42e10c <feof@plt+0x2b40c>
  42f058:	ldr	w8, [x0]
  42f05c:	mov	x22, x0
  42f060:	lsr	w9, w8, #28
  42f064:	cmp	w9, #0x7
  42f068:	b.cc	42ef9c <feof@plt+0x2c29c>  // b.lo, b.ul, b.last
  42f06c:	tbz	w19, #31, 42f03c <feof@plt+0x2c33c>
  42f070:	ldr	x9, [x20, #104]
  42f074:	and	w10, w19, #0x7fffffff
  42f078:	umull	x10, w10, w23
  42f07c:	ldr	w19, [x9, x10]
  42f080:	b	42f03c <feof@plt+0x2c33c>
  42f084:	ldrh	w12, [x11, #6]
  42f088:	mov	x22, x11
  42f08c:	lsr	w10, w12, #8
  42f090:	and	w11, w12, #0xff
  42f094:	add	w9, w9, w21
  42f098:	sub	w12, w11, w10
  42f09c:	lsr	w12, w9, w12
  42f0a0:	cbnz	w12, 42f128 <feof@plt+0x2c428>
  42f0a4:	ldr	w12, [x22, #16]
  42f0a8:	ldr	w13, [x22]
  42f0ac:	sub	w8, w8, w12
  42f0b0:	lsl	w8, w8, w11
  42f0b4:	add	w8, w8, w13
  42f0b8:	mov	w12, #0x60000000            	// #1610612736
  42f0bc:	cmp	w8, w12
  42f0c0:	b.hi	42f0d8 <feof@plt+0x2c3d8>  // b.pmore
  42f0c4:	mov	w12, #0xffffffff            	// #-1
  42f0c8:	lsl	w11, w12, w11
  42f0cc:	bic	w9, w9, w11
  42f0d0:	lsl	w9, w9, w10
  42f0d4:	add	w8, w8, w9
  42f0d8:	ldr	w9, [x20, #36]
  42f0dc:	cbz	w9, 42f0f4 <feof@plt+0x2c3f4>
  42f0e0:	ldr	x10, [x20, #24]
  42f0e4:	sub	w9, w9, #0x1
  42f0e8:	sbfiz	x9, x9, #5, #32
  42f0ec:	ldr	w9, [x10, x9]
  42f0f0:	b	42f0f8 <feof@plt+0x2c3f8>
  42f0f4:	mov	w9, #0x80000000            	// #-2147483648
  42f0f8:	ldr	w10, [x20, #56]
  42f0fc:	sub	w11, w9, #0x1
  42f100:	cmp	w8, w9
  42f104:	csel	w21, w8, w11, cc  // cc = lo, ul, last
  42f108:	cmp	w21, w10
  42f10c:	b.ls	42f114 <feof@plt+0x2c414>  // b.plast
  42f110:	str	w21, [x20, #56]
  42f114:	mov	x0, x20
  42f118:	mov	w1, w21
  42f11c:	bl	42e10c <feof@plt+0x2b40c>
  42f120:	cmp	x22, x0
  42f124:	csel	w19, w21, w19, eq  // eq = none
  42f128:	mov	w0, w19
  42f12c:	ldp	x20, x19, [sp, #48]
  42f130:	ldp	x22, x21, [sp, #32]
  42f134:	ldr	x23, [sp, #16]
  42f138:	ldp	x29, x30, [sp], #64
  42f13c:	ret
  42f140:	tbz	w1, #31, 42f158 <feof@plt+0x2c458>
  42f144:	ldr	x8, [x0, #104]
  42f148:	and	w9, w1, #0x7fffffff
  42f14c:	mov	w10, #0x18                  	// #24
  42f150:	umull	x9, w9, w10
  42f154:	ldr	w1, [x8, x9]
  42f158:	lsr	w8, w1, #28
  42f15c:	cmp	w8, #0x6
  42f160:	cset	w8, hi  // hi = pmore
  42f164:	cmp	w1, #0x0
  42f168:	cset	w9, ge  // ge = tcont
  42f16c:	and	w0, w8, w9
  42f170:	ret
  42f174:	stp	x29, x30, [sp, #-64]!
  42f178:	stp	x22, x21, [sp, #32]
  42f17c:	stp	x20, x19, [sp, #48]
  42f180:	mov	x20, x3
  42f184:	mov	w19, w1
  42f188:	mov	x21, x0
  42f18c:	mov	w8, w1
  42f190:	str	x23, [sp, #16]
  42f194:	mov	x29, sp
  42f198:	tbnz	w1, #31, 42f1b0 <feof@plt+0x2c4b0>
  42f19c:	cmp	w8, #0x1
  42f1a0:	b.hi	42f1cc <feof@plt+0x2c4cc>  // b.pmore
  42f1a4:	cbz	x20, 42f304 <feof@plt+0x2c604>
  42f1a8:	str	xzr, [x20]
  42f1ac:	b	42f304 <feof@plt+0x2c604>
  42f1b0:	ldr	x8, [x21, #104]
  42f1b4:	and	w9, w19, #0x7fffffff
  42f1b8:	mov	w10, #0x18                  	// #24
  42f1bc:	umull	x9, w9, w10
  42f1c0:	ldr	w8, [x8, x9]
  42f1c4:	cmp	w8, #0x1
  42f1c8:	b.ls	42f1a4 <feof@plt+0x2c4a4>  // b.plast
  42f1cc:	cmp	w2, #0x2
  42f1d0:	b.eq	42f2a0 <feof@plt+0x2c5a0>  // b.none
  42f1d4:	cmp	w2, #0x1
  42f1d8:	b.eq	42f240 <feof@plt+0x2c540>  // b.none
  42f1dc:	cbnz	w2, 42f31c <feof@plt+0x2c61c>
  42f1e0:	tbz	w19, #31, 42f1f8 <feof@plt+0x2c4f8>
  42f1e4:	ldr	x8, [x21, #104]
  42f1e8:	and	w9, w19, #0x7fffffff
  42f1ec:	mov	w10, #0x18                  	// #24
  42f1f0:	umull	x9, w9, w10
  42f1f4:	ldr	w19, [x8, x9]
  42f1f8:	mov	x0, x21
  42f1fc:	mov	w1, w19
  42f200:	bl	42e10c <feof@plt+0x2b40c>
  42f204:	cbz	x0, 42f2fc <feof@plt+0x2c5fc>
  42f208:	ldr	w8, [x0]
  42f20c:	lsr	w8, w8, #28
  42f210:	cmp	w8, #0x7
  42f214:	b.cc	42f2fc <feof@plt+0x2c5fc>  // b.lo, b.ul, b.last
  42f218:	mov	w22, #0x6fffffff            	// #1879048191
  42f21c:	ldr	w19, [x0, #24]
  42f220:	mov	x0, x21
  42f224:	mov	w1, w19
  42f228:	bl	42e10c <feof@plt+0x2b40c>
  42f22c:	cbz	x0, 42f2fc <feof@plt+0x2c5fc>
  42f230:	ldr	w8, [x0]
  42f234:	cmp	w8, w22
  42f238:	b.hi	42f21c <feof@plt+0x2c51c>  // b.pmore
  42f23c:	b	42f2fc <feof@plt+0x2c5fc>
  42f240:	mov	x0, x21
  42f244:	mov	w1, w19
  42f248:	bl	42e10c <feof@plt+0x2b40c>
  42f24c:	cbz	x0, 42f2fc <feof@plt+0x2c5fc>
  42f250:	mov	w22, #0x18                  	// #24
  42f254:	b	42f278 <feof@plt+0x2c578>
  42f258:	ldr	x9, [x0, #16]
  42f25c:	sub	w8, w19, w8
  42f260:	lsl	w8, w8, #1
  42f264:	mov	x0, x21
  42f268:	ldr	w19, [x9, w8, uxtw #2]
  42f26c:	mov	w1, w19
  42f270:	bl	42e10c <feof@plt+0x2b40c>
  42f274:	cbz	x0, 42f2fc <feof@plt+0x2c5fc>
  42f278:	ldr	w8, [x0]
  42f27c:	lsr	w9, w8, #28
  42f280:	cmp	w9, #0x6
  42f284:	b.ls	42f2fc <feof@plt+0x2c5fc>  // b.plast
  42f288:	tbz	w19, #31, 42f258 <feof@plt+0x2c558>
  42f28c:	ldr	x9, [x21, #104]
  42f290:	and	w10, w19, #0x7fffffff
  42f294:	umull	x10, w10, w22
  42f298:	ldr	w19, [x9, x10]
  42f29c:	b	42f258 <feof@plt+0x2c558>
  42f2a0:	mov	w23, #0x18                  	// #24
  42f2a4:	mov	w22, w19
  42f2a8:	tbz	w19, #31, 42f2ec <feof@plt+0x2c5ec>
  42f2ac:	b	42f2dc <feof@plt+0x2c5dc>
  42f2b0:	ldr	w8, [x0]
  42f2b4:	lsr	w9, w8, #28
  42f2b8:	cmp	w9, #0x6
  42f2bc:	b.ls	42f2fc <feof@plt+0x2c5fc>  // b.plast
  42f2c0:	ldr	x9, [x0, #16]
  42f2c4:	sub	w8, w22, w8
  42f2c8:	mov	w10, #0x1                   	// #1
  42f2cc:	bfi	w10, w8, #1, #31
  42f2d0:	ldr	w19, [x9, w10, uxtw #2]
  42f2d4:	mov	w22, w19
  42f2d8:	tbz	w19, #31, 42f2ec <feof@plt+0x2c5ec>
  42f2dc:	ldr	x8, [x21, #104]
  42f2e0:	and	w9, w19, #0x7fffffff
  42f2e4:	umull	x9, w9, w23
  42f2e8:	ldr	w22, [x8, x9]
  42f2ec:	mov	x0, x21
  42f2f0:	mov	w1, w22
  42f2f4:	bl	42e10c <feof@plt+0x2b40c>
  42f2f8:	cbnz	x0, 42f2b0 <feof@plt+0x2c5b0>
  42f2fc:	cbz	x20, 42f304 <feof@plt+0x2c604>
  42f300:	str	x0, [x20]
  42f304:	mov	w0, w19
  42f308:	ldp	x20, x19, [sp, #48]
  42f30c:	ldp	x22, x21, [sp, #32]
  42f310:	ldr	x23, [sp, #16]
  42f314:	ldp	x29, x30, [sp], #64
  42f318:	ret
  42f31c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  42f320:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42f324:	add	x0, x0, #0x3e7
  42f328:	add	x2, x2, #0x419
  42f32c:	mov	w1, #0x621                 	// #1569
  42f330:	bl	408b70 <feof@plt+0x5e70>
  42f334:	cbz	x0, 42f348 <feof@plt+0x2c648>
  42f338:	ldr	w8, [x0]
  42f33c:	lsr	w8, w8, #28
  42f340:	cmp	w8, #0x6
  42f344:	cset	w0, hi  // hi = pmore
  42f348:	ret
  42f34c:	tbz	w2, #31, 42f364 <feof@plt+0x2c664>
  42f350:	ldr	x8, [x0, #104]
  42f354:	and	w9, w2, #0x7fffffff
  42f358:	mov	w10, #0x18                  	// #24
  42f35c:	umull	x9, w9, w10
  42f360:	ldr	w2, [x8, x9]
  42f364:	ldr	w8, [x1]
  42f368:	ldr	x9, [x1, #16]
  42f36c:	sub	w8, w2, w8
  42f370:	lsl	w8, w8, #1
  42f374:	ldr	w0, [x9, w8, uxtw #2]
  42f378:	ret
  42f37c:	stp	x29, x30, [sp, #-48]!
  42f380:	stp	x20, x19, [sp, #32]
  42f384:	mov	w19, w1
  42f388:	mov	x20, x0
  42f38c:	str	x21, [sp, #16]
  42f390:	mov	x29, sp
  42f394:	tbnz	w1, #31, 42f3a8 <feof@plt+0x2c6a8>
  42f398:	cmp	w19, #0x2
  42f39c:	b.cs	42f3c4 <feof@plt+0x2c6c4>  // b.hs, b.nlast
  42f3a0:	mov	w0, wzr
  42f3a4:	b	42f42c <feof@plt+0x2c72c>
  42f3a8:	ldr	x8, [x20, #104]
  42f3ac:	and	w9, w19, #0x7fffffff
  42f3b0:	mov	w10, #0x18                  	// #24
  42f3b4:	umull	x9, w9, w10
  42f3b8:	ldr	w19, [x8, x9]
  42f3bc:	cmp	w19, #0x2
  42f3c0:	b.cc	42f3a0 <feof@plt+0x2c6a0>  // b.lo, b.ul, b.last
  42f3c4:	tbz	w19, #31, 42f3dc <feof@plt+0x2c6dc>
  42f3c8:	ldr	x8, [x20, #104]
  42f3cc:	and	w9, w19, #0x7fffffff
  42f3d0:	mov	w10, #0x18                  	// #24
  42f3d4:	umull	x9, w9, w10
  42f3d8:	ldr	w19, [x8, x9]
  42f3dc:	mov	x0, x20
  42f3e0:	mov	w1, w19
  42f3e4:	bl	42e10c <feof@plt+0x2b40c>
  42f3e8:	ldr	w8, [x0]
  42f3ec:	lsr	w9, w8, #28
  42f3f0:	cmp	w9, #0x7
  42f3f4:	b.cc	42f418 <feof@plt+0x2c718>  // b.lo, b.ul, b.last
  42f3f8:	mov	w21, #0x6fffffff            	// #1879048191
  42f3fc:	ldr	w19, [x0, #24]
  42f400:	mov	x0, x20
  42f404:	mov	w1, w19
  42f408:	bl	42e10c <feof@plt+0x2b40c>
  42f40c:	ldr	w8, [x0]
  42f410:	cmp	w8, w21
  42f414:	b.hi	42f3fc <feof@plt+0x2c6fc>  // b.pmore
  42f418:	ldrb	w9, [x0, #6]
  42f41c:	ldr	w10, [x0, #16]
  42f420:	sub	w8, w19, w8
  42f424:	lsr	w8, w8, w9
  42f428:	add	w0, w8, w10
  42f42c:	ldp	x20, x19, [sp, #32]
  42f430:	ldr	x21, [sp, #16]
  42f434:	ldp	x29, x30, [sp], #48
  42f438:	ret
  42f43c:	stp	x29, x30, [sp, #-32]!
  42f440:	stp	x20, x19, [sp, #16]
  42f444:	mov	x19, x0
  42f448:	mov	x29, sp
  42f44c:	tbnz	w1, #31, 42f460 <feof@plt+0x2c760>
  42f450:	cmp	w1, #0x2
  42f454:	b.cs	42f47c <feof@plt+0x2c77c>  // b.hs, b.nlast
  42f458:	mov	x0, xzr
  42f45c:	b	42f4cc <feof@plt+0x2c7cc>
  42f460:	ldr	x8, [x19, #104]
  42f464:	and	w9, w1, #0x7fffffff
  42f468:	mov	w10, #0x18                  	// #24
  42f46c:	umull	x9, w9, w10
  42f470:	ldr	w1, [x8, x9]
  42f474:	cmp	w1, #0x2
  42f478:	b.cc	42f458 <feof@plt+0x2c758>  // b.lo, b.ul, b.last
  42f47c:	tbz	w1, #31, 42f494 <feof@plt+0x2c794>
  42f480:	ldr	x8, [x19, #104]
  42f484:	and	w9, w1, #0x7fffffff
  42f488:	mov	w10, #0x18                  	// #24
  42f48c:	umull	x9, w9, w10
  42f490:	ldr	w1, [x8, x9]
  42f494:	mov	x0, x19
  42f498:	bl	42e10c <feof@plt+0x2b40c>
  42f49c:	ldr	w8, [x0]
  42f4a0:	lsr	w8, w8, #28
  42f4a4:	cmp	w8, #0x7
  42f4a8:	b.cc	42f4c8 <feof@plt+0x2c7c8>  // b.lo, b.ul, b.last
  42f4ac:	mov	w20, #0x6fffffff            	// #1879048191
  42f4b0:	ldr	w1, [x0, #24]
  42f4b4:	mov	x0, x19
  42f4b8:	bl	42e10c <feof@plt+0x2b40c>
  42f4bc:	ldr	w8, [x0]
  42f4c0:	cmp	w8, w20
  42f4c4:	b.hi	42f4b0 <feof@plt+0x2c7b0>  // b.pmore
  42f4c8:	ldr	x0, [x0, #8]
  42f4cc:	ldp	x20, x19, [sp, #16]
  42f4d0:	ldp	x29, x30, [sp], #32
  42f4d4:	ret
  42f4d8:	ldr	x8, [x0, #8]
  42f4dc:	ldr	x0, [x8]
  42f4e0:	ret
  42f4e4:	stp	x29, x30, [sp, #-48]!
  42f4e8:	stp	x20, x19, [sp, #32]
  42f4ec:	mov	w20, w1
  42f4f0:	mov	x19, x0
  42f4f4:	str	x21, [sp, #16]
  42f4f8:	mov	x29, sp
  42f4fc:	tbnz	w1, #31, 42f510 <feof@plt+0x2c810>
  42f500:	cmp	w20, #0x2
  42f504:	b.cs	42f52c <feof@plt+0x2c82c>  // b.hs, b.nlast
  42f508:	mov	w0, wzr
  42f50c:	b	42f59c <feof@plt+0x2c89c>
  42f510:	ldr	x8, [x19, #104]
  42f514:	and	w9, w20, #0x7fffffff
  42f518:	mov	w10, #0x18                  	// #24
  42f51c:	umull	x9, w9, w10
  42f520:	ldr	w20, [x8, x9]
  42f524:	cmp	w20, #0x2
  42f528:	b.cc	42f508 <feof@plt+0x2c808>  // b.lo, b.ul, b.last
  42f52c:	mov	x0, x19
  42f530:	mov	w1, w20
  42f534:	bl	42e10c <feof@plt+0x2b40c>
  42f538:	cbz	x0, 42f59c <feof@plt+0x2c89c>
  42f53c:	mov	w21, #0x18                  	// #24
  42f540:	b	42f554 <feof@plt+0x2c854>
  42f544:	mov	x0, x19
  42f548:	mov	w1, w20
  42f54c:	bl	42e10c <feof@plt+0x2b40c>
  42f550:	cbz	x0, 42f59c <feof@plt+0x2c89c>
  42f554:	ldr	w8, [x0]
  42f558:	lsr	w9, w8, #28
  42f55c:	cmp	w9, #0x6
  42f560:	b.ls	42f598 <feof@plt+0x2c898>  // b.plast
  42f564:	tbz	w20, #31, 42f578 <feof@plt+0x2c878>
  42f568:	ldr	x9, [x19, #104]
  42f56c:	and	w10, w20, #0x7fffffff
  42f570:	umull	x10, w10, w21
  42f574:	ldr	w20, [x9, x10]
  42f578:	ldr	x9, [x0, #16]
  42f57c:	sub	w8, w20, w8
  42f580:	lsl	w8, w8, #1
  42f584:	ldr	w20, [x9, w8, uxtw #2]
  42f588:	cmp	w20, #0x1
  42f58c:	b.hi	42f544 <feof@plt+0x2c844>  // b.pmore
  42f590:	ldr	w20, [x0, #24]
  42f594:	b	42f544 <feof@plt+0x2c844>
  42f598:	ldrb	w0, [x0, #5]
  42f59c:	ldp	x20, x19, [sp, #32]
  42f5a0:	ldr	x21, [sp, #16]
  42f5a4:	ldp	x29, x30, [sp], #48
  42f5a8:	ret
  42f5ac:	stp	x29, x30, [sp, #-80]!
  42f5b0:	stp	x22, x21, [sp, #48]
  42f5b4:	stp	x20, x19, [sp, #64]
  42f5b8:	mov	w20, w2
  42f5bc:	mov	w21, w1
  42f5c0:	mov	x19, x0
  42f5c4:	mov	w22, w1
  42f5c8:	str	x25, [sp, #16]
  42f5cc:	stp	x24, x23, [sp, #32]
  42f5d0:	mov	x29, sp
  42f5d4:	tbnz	w1, #31, 42f5f0 <feof@plt+0x2c8f0>
  42f5d8:	mov	w23, w20
  42f5dc:	tbnz	w20, #31, 42f60c <feof@plt+0x2c90c>
  42f5e0:	cmp	w22, w23
  42f5e4:	b.ne	42f628 <feof@plt+0x2c928>  // b.any
  42f5e8:	mov	w0, wzr
  42f5ec:	b	42f83c <feof@plt+0x2cb3c>
  42f5f0:	ldr	x8, [x19, #104]
  42f5f4:	and	w9, w21, #0x7fffffff
  42f5f8:	mov	w10, #0x18                  	// #24
  42f5fc:	umull	x9, w9, w10
  42f600:	ldr	w22, [x8, x9]
  42f604:	mov	w23, w20
  42f608:	tbz	w20, #31, 42f5e0 <feof@plt+0x2c8e0>
  42f60c:	ldr	x8, [x19, #104]
  42f610:	and	w9, w20, #0x7fffffff
  42f614:	mov	w10, #0x18                  	// #24
  42f618:	umull	x9, w9, w10
  42f61c:	ldr	w23, [x8, x9]
  42f620:	cmp	w22, w23
  42f624:	b.eq	42f5e8 <feof@plt+0x2c8e8>  // b.none
  42f628:	mov	w24, w22
  42f62c:	tbz	w22, #31, 42f644 <feof@plt+0x2c944>
  42f630:	ldr	x8, [x19, #104]
  42f634:	and	w9, w22, #0x7fffffff
  42f638:	mov	w10, #0x18                  	// #24
  42f63c:	umull	x9, w9, w10
  42f640:	ldr	w24, [x8, x9]
  42f644:	lsr	w8, w24, #28
  42f648:	cmp	w8, #0x7
  42f64c:	mov	w25, #0x6fffffff            	// #1879048191
  42f650:	b.cc	42f67c <feof@plt+0x2c97c>  // b.lo, b.ul, b.last
  42f654:	tbnz	w24, #31, 42f67c <feof@plt+0x2c97c>
  42f658:	mov	w8, w22
  42f65c:	tbz	w22, #31, 42f674 <feof@plt+0x2c974>
  42f660:	ldr	x8, [x19, #104]
  42f664:	and	w9, w22, #0x7fffffff
  42f668:	mov	w10, #0x18                  	// #24
  42f66c:	umull	x9, w9, w10
  42f670:	ldr	w8, [x8, x9]
  42f674:	cmp	w8, #0x2
  42f678:	b.cs	42f7b8 <feof@plt+0x2cab8>  // b.hs, b.nlast
  42f67c:	mov	w8, w23
  42f680:	tbnz	w23, #31, 42f690 <feof@plt+0x2c990>
  42f684:	cmp	w8, w25
  42f688:	b.hi	42f6ac <feof@plt+0x2c9ac>  // b.pmore
  42f68c:	b	42f778 <feof@plt+0x2ca78>
  42f690:	ldr	x8, [x19, #104]
  42f694:	and	w9, w23, #0x7fffffff
  42f698:	mov	w10, #0x18                  	// #24
  42f69c:	umull	x9, w9, w10
  42f6a0:	ldr	w8, [x8, x9]
  42f6a4:	cmp	w8, w25
  42f6a8:	b.ls	42f778 <feof@plt+0x2ca78>  // b.plast
  42f6ac:	tbnz	w8, #31, 42f778 <feof@plt+0x2ca78>
  42f6b0:	mov	w8, w23
  42f6b4:	tbz	w23, #31, 42f6cc <feof@plt+0x2c9cc>
  42f6b8:	ldr	x8, [x19, #104]
  42f6bc:	and	w9, w23, #0x7fffffff
  42f6c0:	mov	w10, #0x18                  	// #24
  42f6c4:	umull	x9, w9, w10
  42f6c8:	ldr	w8, [x8, x9]
  42f6cc:	cmp	w8, #0x2
  42f6d0:	b.cs	42f7f4 <feof@plt+0x2caf4>  // b.hs, b.nlast
  42f6d4:	cmp	w22, w23
  42f6d8:	b.ne	42f778 <feof@plt+0x2ca78>  // b.any
  42f6dc:	cmp	w24, w25
  42f6e0:	b.ls	42f778 <feof@plt+0x2ca78>  // b.plast
  42f6e4:	tbnz	w24, #31, 42f778 <feof@plt+0x2ca78>
  42f6e8:	mov	x0, x19
  42f6ec:	mov	w1, w21
  42f6f0:	bl	42e10c <feof@plt+0x2b40c>
  42f6f4:	mov	x22, x0
  42f6f8:	mov	x0, x19
  42f6fc:	mov	w1, w20
  42f700:	bl	42e10c <feof@plt+0x2b40c>
  42f704:	cbz	x22, 42f854 <feof@plt+0x2cb54>
  42f708:	mov	x23, x0
  42f70c:	b	42f728 <feof@plt+0x2ca28>
  42f710:	ldr	w21, [x22, #24]
  42f714:	mov	x0, x19
  42f718:	mov	w1, w21
  42f71c:	bl	42e10c <feof@plt+0x2b40c>
  42f720:	mov	x22, x0
  42f724:	cbz	x0, 42f854 <feof@plt+0x2cb54>
  42f728:	cbz	x23, 42f830 <feof@plt+0x2cb30>
  42f72c:	ldr	w8, [x22]
  42f730:	lsr	w9, w8, #28
  42f734:	cmp	w9, #0x7
  42f738:	b.cc	42f830 <feof@plt+0x2cb30>  // b.lo, b.ul, b.last
  42f73c:	cmp	x22, x23
  42f740:	b.eq	42f830 <feof@plt+0x2cb30>  // b.none
  42f744:	ldr	w9, [x23]
  42f748:	lsr	w10, w9, #28
  42f74c:	cmp	w10, #0x7
  42f750:	b.cc	42f830 <feof@plt+0x2cb30>  // b.lo, b.ul, b.last
  42f754:	cmp	w8, w9
  42f758:	b.cc	42f710 <feof@plt+0x2ca10>  // b.lo, b.ul, b.last
  42f75c:	ldr	w20, [x23, #24]
  42f760:	mov	x0, x19
  42f764:	mov	w1, w20
  42f768:	bl	42e10c <feof@plt+0x2b40c>
  42f76c:	mov	x23, x0
  42f770:	cbnz	x22, 42f728 <feof@plt+0x2ca28>
  42f774:	b	42f854 <feof@plt+0x2cb54>
  42f778:	tbnz	w22, #31, 42f788 <feof@plt+0x2ca88>
  42f77c:	tbnz	w23, #31, 42f7a0 <feof@plt+0x2caa0>
  42f780:	sub	w0, w23, w22
  42f784:	b	42f83c <feof@plt+0x2cb3c>
  42f788:	ldr	x8, [x19, #104]
  42f78c:	and	w9, w22, #0x7fffffff
  42f790:	mov	w10, #0x18                  	// #24
  42f794:	umull	x9, w9, w10
  42f798:	ldr	w22, [x8, x9]
  42f79c:	tbz	w23, #31, 42f780 <feof@plt+0x2ca80>
  42f7a0:	ldr	x8, [x19, #104]
  42f7a4:	and	w9, w23, #0x7fffffff
  42f7a8:	mov	w10, #0x18                  	// #24
  42f7ac:	umull	x9, w9, w10
  42f7b0:	ldr	w23, [x8, x9]
  42f7b4:	b	42f780 <feof@plt+0x2ca80>
  42f7b8:	tbz	w22, #31, 42f7d0 <feof@plt+0x2cad0>
  42f7bc:	ldr	x8, [x19, #104]
  42f7c0:	and	w9, w22, #0x7fffffff
  42f7c4:	mov	w10, #0x18                  	// #24
  42f7c8:	umull	x9, w9, w10
  42f7cc:	ldr	w22, [x8, x9]
  42f7d0:	mov	x0, x19
  42f7d4:	mov	w1, w22
  42f7d8:	bl	42e10c <feof@plt+0x2b40c>
  42f7dc:	cbz	x0, 42f67c <feof@plt+0x2c97c>
  42f7e0:	ldr	w8, [x0]
  42f7e4:	cmp	w8, w25
  42f7e8:	b.ls	42f67c <feof@plt+0x2c97c>  // b.plast
  42f7ec:	ldr	w22, [x0, #24]
  42f7f0:	b	42f7d0 <feof@plt+0x2cad0>
  42f7f4:	tbz	w23, #31, 42f80c <feof@plt+0x2cb0c>
  42f7f8:	ldr	x8, [x19, #104]
  42f7fc:	and	w9, w23, #0x7fffffff
  42f800:	mov	w10, #0x18                  	// #24
  42f804:	umull	x9, w9, w10
  42f808:	ldr	w23, [x8, x9]
  42f80c:	mov	x0, x19
  42f810:	mov	w1, w23
  42f814:	bl	42e10c <feof@plt+0x2b40c>
  42f818:	cbz	x0, 42f6d4 <feof@plt+0x2c9d4>
  42f81c:	ldr	w8, [x0]
  42f820:	cmp	w8, w25
  42f824:	b.ls	42f6d4 <feof@plt+0x2c9d4>  // b.plast
  42f828:	ldr	w23, [x0, #24]
  42f82c:	b	42f80c <feof@plt+0x2cb0c>
  42f830:	cmp	x22, x23
  42f834:	b.ne	42f854 <feof@plt+0x2cb54>  // b.any
  42f838:	sub	w0, w20, w21
  42f83c:	ldp	x20, x19, [sp, #64]
  42f840:	ldp	x22, x21, [sp, #48]
  42f844:	ldp	x24, x23, [sp, #32]
  42f848:	ldr	x25, [sp, #16]
  42f84c:	ldp	x29, x30, [sp], #80
  42f850:	ret
  42f854:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  42f858:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42f85c:	add	x0, x0, #0x3e7
  42f860:	add	x2, x2, #0x3ff
  42f864:	mov	w1, #0x549                 	// #1353
  42f868:	bl	408b70 <feof@plt+0x5e70>
  42f86c:	stp	x29, x30, [sp, #-48]!
  42f870:	stp	x20, x19, [sp, #32]
  42f874:	mov	x19, x0
  42f878:	stp	x22, x21, [sp, #16]
  42f87c:	mov	x29, sp
  42f880:	tbz	w1, #31, 42f89c <feof@plt+0x2cb9c>
  42f884:	ldr	x8, [x19, #104]
  42f888:	and	w9, w1, #0x7fffffff
  42f88c:	mov	w10, #0x18                  	// #24
  42f890:	umull	x9, w9, w10
  42f894:	ldr	w1, [x8, x9]
  42f898:	tbnz	w1, #31, 42f940 <feof@plt+0x2cc40>
  42f89c:	mov	w8, w1
  42f8a0:	lsr	w9, w8, #28
  42f8a4:	cmp	w9, #0x7
  42f8a8:	mov	w0, wzr
  42f8ac:	b.cc	42f930 <feof@plt+0x2cc30>  // b.lo, b.ul, b.last
  42f8b0:	tbnz	w8, #31, 42f930 <feof@plt+0x2cc30>
  42f8b4:	mov	w21, #0x6fffffff            	// #1879048191
  42f8b8:	mov	w22, #0x18                  	// #24
  42f8bc:	mov	x0, x19
  42f8c0:	mov	w20, w1
  42f8c4:	bl	42e10c <feof@plt+0x2b40c>
  42f8c8:	mov	w10, w20
  42f8cc:	tbz	w20, #31, 42f8e0 <feof@plt+0x2cbe0>
  42f8d0:	ldr	x8, [x19, #104]
  42f8d4:	and	w9, w20, #0x7fffffff
  42f8d8:	umull	x9, w9, w22
  42f8dc:	ldr	w10, [x8, x9]
  42f8e0:	ldr	w9, [x0]
  42f8e4:	ldr	x8, [x0, #16]
  42f8e8:	sub	w10, w10, w9
  42f8ec:	lsl	w10, w10, #1
  42f8f0:	ldr	w1, [x8, w10, uxtw #2]
  42f8f4:	mov	w10, w1
  42f8f8:	tbz	w1, #31, 42f90c <feof@plt+0x2cc0c>
  42f8fc:	ldr	x10, [x19, #104]
  42f900:	and	x11, x1, #0x7fffffff
  42f904:	mul	x11, x11, x22
  42f908:	ldr	w10, [x10, x11]
  42f90c:	cmp	w10, w21
  42f910:	b.ls	42f918 <feof@plt+0x2cc18>  // b.plast
  42f914:	tbz	w10, #31, 42f8bc <feof@plt+0x2cbbc>
  42f918:	sub	w9, w20, w9
  42f91c:	mov	w10, #0x1                   	// #1
  42f920:	bfi	w10, w9, #1, #31
  42f924:	ldr	w8, [x8, w10, uxtw #2]
  42f928:	cmp	w1, w8
  42f92c:	cset	w0, eq  // eq = none
  42f930:	ldp	x20, x19, [sp, #32]
  42f934:	ldp	x22, x21, [sp, #16]
  42f938:	ldp	x29, x30, [sp], #48
  42f93c:	ret
  42f940:	and	x9, x1, #0x7fffffff
  42f944:	mov	w10, #0x18                  	// #24
  42f948:	mul	x9, x9, x10
  42f94c:	ldr	w8, [x8, x9]
  42f950:	b	42f8a0 <feof@plt+0x2cba0>
  42f954:	stp	x29, x30, [sp, #-48]!
  42f958:	stp	x22, x21, [sp, #16]
  42f95c:	stp	x20, x19, [sp, #32]
  42f960:	ldr	x22, [x2]
  42f964:	mov	x19, x2
  42f968:	mov	x20, x0
  42f96c:	mov	x29, sp
  42f970:	tbz	w1, #31, 42f99c <feof@plt+0x2cc9c>
  42f974:	ldr	x8, [x20, #104]
  42f978:	and	w9, w1, #0x7fffffff
  42f97c:	mov	w10, #0x18                  	// #24
  42f980:	umull	x9, w9, w10
  42f984:	ldr	w1, [x8, x9]
  42f988:	tbz	w1, #31, 42f99c <feof@plt+0x2cc9c>
  42f98c:	and	x9, x1, #0x7fffffff
  42f990:	mov	w10, #0x18                  	// #24
  42f994:	mul	x9, x9, x10
  42f998:	ldr	w1, [x8, x9]
  42f99c:	ldr	w8, [x22]
  42f9a0:	ldr	x9, [x22, #16]
  42f9a4:	mov	x0, x20
  42f9a8:	sub	w8, w1, w8
  42f9ac:	lsl	w8, w8, #1
  42f9b0:	ldr	w21, [x9, w8, uxtw #2]
  42f9b4:	mov	w1, w21
  42f9b8:	bl	42e10c <feof@plt+0x2b40c>
  42f9bc:	cbz	x0, 42f9d0 <feof@plt+0x2ccd0>
  42f9c0:	ldr	w8, [x0]
  42f9c4:	lsr	w8, w8, #28
  42f9c8:	cmp	w8, #0x6
  42f9cc:	b.hi	42f9e0 <feof@plt+0x2cce0>  // b.pmore
  42f9d0:	ldr	w21, [x22, #24]
  42f9d4:	mov	x0, x20
  42f9d8:	mov	w1, w21
  42f9dc:	bl	42e10c <feof@plt+0x2b40c>
  42f9e0:	str	x0, [x19]
  42f9e4:	mov	w0, w21
  42f9e8:	ldp	x20, x19, [sp, #32]
  42f9ec:	ldp	x22, x21, [sp, #16]
  42f9f0:	ldp	x29, x30, [sp], #48
  42f9f4:	ret
  42f9f8:	stp	x29, x30, [sp, #-80]!
  42f9fc:	stp	x22, x21, [sp, #48]
  42fa00:	stp	x20, x19, [sp, #64]
  42fa04:	mov	x20, x2
  42fa08:	mov	w19, w1
  42fa0c:	mov	x21, x0
  42fa10:	stp	x26, x25, [sp, #16]
  42fa14:	stp	x24, x23, [sp, #32]
  42fa18:	mov	x29, sp
  42fa1c:	tbz	w1, #31, 42fa34 <feof@plt+0x2cd34>
  42fa20:	ldr	x8, [x21, #104]
  42fa24:	and	w9, w19, #0x7fffffff
  42fa28:	mov	w10, #0x18                  	// #24
  42fa2c:	umull	x9, w9, w10
  42fa30:	ldr	w19, [x8, x9]
  42fa34:	mov	x0, x21
  42fa38:	mov	w1, w19
  42fa3c:	bl	42e10c <feof@plt+0x2b40c>
  42fa40:	cbz	x0, 42fc40 <feof@plt+0x2cf40>
  42fa44:	ldr	w8, [x0]
  42fa48:	mov	x22, x0
  42fa4c:	lsr	w8, w8, #28
  42fa50:	cmp	w8, #0x7
  42fa54:	b.cc	42fc40 <feof@plt+0x2cf40>  // b.lo, b.ul, b.last
  42fa58:	mov	w8, w19
  42fa5c:	tbnz	w19, #31, 42fa70 <feof@plt+0x2cd70>
  42fa60:	cmp	w8, #0x2
  42fa64:	b.cs	42fa8c <feof@plt+0x2cd8c>  // b.hs, b.nlast
  42fa68:	mov	x0, xzr
  42fa6c:	b	42faf0 <feof@plt+0x2cdf0>
  42fa70:	ldr	x8, [x21, #104]
  42fa74:	and	w9, w19, #0x7fffffff
  42fa78:	mov	w10, #0x18                  	// #24
  42fa7c:	umull	x9, w9, w10
  42fa80:	ldr	w8, [x8, x9]
  42fa84:	cmp	w8, #0x2
  42fa88:	b.cc	42fa68 <feof@plt+0x2cd68>  // b.lo, b.ul, b.last
  42fa8c:	mov	x0, x21
  42fa90:	mov	w1, w19
  42fa94:	bl	42e10c <feof@plt+0x2b40c>
  42fa98:	cbz	x0, 42faf0 <feof@plt+0x2cdf0>
  42fa9c:	mov	w24, #0x18                  	// #24
  42faa0:	mov	w23, w19
  42faa4:	b	42fac8 <feof@plt+0x2cdc8>
  42faa8:	ldr	x9, [x0, #16]
  42faac:	sub	w8, w23, w8
  42fab0:	lsl	w8, w8, #1
  42fab4:	mov	x0, x21
  42fab8:	ldr	w23, [x9, w8, uxtw #2]
  42fabc:	mov	w1, w23
  42fac0:	bl	42e10c <feof@plt+0x2b40c>
  42fac4:	cbz	x0, 42faf4 <feof@plt+0x2cdf4>
  42fac8:	ldr	w8, [x0]
  42facc:	lsr	w9, w8, #28
  42fad0:	cmp	w9, #0x6
  42fad4:	b.ls	42faf4 <feof@plt+0x2cdf4>  // b.plast
  42fad8:	tbz	w23, #31, 42faa8 <feof@plt+0x2cda8>
  42fadc:	ldr	x9, [x21, #104]
  42fae0:	and	w10, w23, #0x7fffffff
  42fae4:	umull	x10, w10, w24
  42fae8:	ldr	w23, [x9, x10]
  42faec:	b	42faa8 <feof@plt+0x2cda8>
  42faf0:	mov	w23, w19
  42faf4:	cmp	w23, #0x2
  42faf8:	b.cc	42fb04 <feof@plt+0x2ce04>  // b.lo, b.ul, b.last
  42fafc:	ldrb	w8, [x0, #5]
  42fb00:	cbz	w8, 42fc40 <feof@plt+0x2cf40>
  42fb04:	mov	w25, #0x6fffffff            	// #1879048191
  42fb08:	mov	w26, #0x18                  	// #24
  42fb0c:	b	42fb20 <feof@plt+0x2ce20>
  42fb10:	mov	x0, xzr
  42fb14:	mov	w23, w19
  42fb18:	mov	x22, x24
  42fb1c:	cbz	x24, 42fc38 <feof@plt+0x2cf38>
  42fb20:	ldr	w8, [x22]
  42fb24:	cmp	w8, w25
  42fb28:	b.ls	42fc38 <feof@plt+0x2cf38>  // b.plast
  42fb2c:	cmp	w23, #0x2
  42fb30:	b.cc	42fb3c <feof@plt+0x2ce3c>  // b.lo, b.ul, b.last
  42fb34:	ldrb	w9, [x0, #5]
  42fb38:	cbz	w9, 42fc38 <feof@plt+0x2cf38>
  42fb3c:	tbz	w19, #31, 42fb60 <feof@plt+0x2ce60>
  42fb40:	ldr	x9, [x21, #104]
  42fb44:	and	w10, w19, #0x7fffffff
  42fb48:	umull	x10, w10, w26
  42fb4c:	ldr	w19, [x9, x10]
  42fb50:	tbz	w19, #31, 42fb60 <feof@plt+0x2ce60>
  42fb54:	and	x10, x19, #0x7fffffff
  42fb58:	mul	x10, x10, x26
  42fb5c:	ldr	w19, [x9, x10]
  42fb60:	ldr	x9, [x22, #16]
  42fb64:	sub	w8, w19, w8
  42fb68:	lsl	w8, w8, #1
  42fb6c:	mov	x0, x21
  42fb70:	ldr	w19, [x9, w8, uxtw #2]
  42fb74:	mov	w1, w19
  42fb78:	bl	42e10c <feof@plt+0x2b40c>
  42fb7c:	cbz	x0, 42fba4 <feof@plt+0x2cea4>
  42fb80:	ldr	w8, [x0]
  42fb84:	mov	x24, x0
  42fb88:	cmp	w8, w25
  42fb8c:	b.ls	42fba4 <feof@plt+0x2cea4>  // b.plast
  42fb90:	mov	w8, w19
  42fb94:	tbnz	w19, #31, 42fbc0 <feof@plt+0x2cec0>
  42fb98:	cmp	w8, #0x2
  42fb9c:	b.cc	42fb10 <feof@plt+0x2ce10>  // b.lo, b.ul, b.last
  42fba0:	b	42fbd8 <feof@plt+0x2ced8>
  42fba4:	ldr	w19, [x22, #24]
  42fba8:	mov	x0, x21
  42fbac:	mov	w1, w19
  42fbb0:	bl	42e10c <feof@plt+0x2b40c>
  42fbb4:	mov	x24, x0
  42fbb8:	mov	w8, w19
  42fbbc:	tbz	w19, #31, 42fb98 <feof@plt+0x2ce98>
  42fbc0:	ldr	x8, [x21, #104]
  42fbc4:	and	w9, w19, #0x7fffffff
  42fbc8:	umull	x9, w9, w26
  42fbcc:	ldr	w8, [x8, x9]
  42fbd0:	cmp	w8, #0x2
  42fbd4:	b.cc	42fb10 <feof@plt+0x2ce10>  // b.lo, b.ul, b.last
  42fbd8:	mov	x0, x21
  42fbdc:	mov	w1, w19
  42fbe0:	bl	42e10c <feof@plt+0x2b40c>
  42fbe4:	mov	w23, w19
  42fbe8:	cbnz	x0, 42fc10 <feof@plt+0x2cf10>
  42fbec:	b	42fb18 <feof@plt+0x2ce18>
  42fbf0:	ldr	x9, [x0, #16]
  42fbf4:	sub	w8, w23, w8
  42fbf8:	lsl	w8, w8, #1
  42fbfc:	mov	x0, x21
  42fc00:	ldr	w23, [x9, w8, uxtw #2]
  42fc04:	mov	w1, w23
  42fc08:	bl	42e10c <feof@plt+0x2b40c>
  42fc0c:	cbz	x0, 42fb18 <feof@plt+0x2ce18>
  42fc10:	ldr	w8, [x0]
  42fc14:	lsr	w9, w8, #28
  42fc18:	cmp	w9, #0x6
  42fc1c:	b.ls	42fb18 <feof@plt+0x2ce18>  // b.plast
  42fc20:	tbz	w23, #31, 42fbf0 <feof@plt+0x2cef0>
  42fc24:	ldr	x9, [x21, #104]
  42fc28:	and	w10, w23, #0x7fffffff
  42fc2c:	umull	x10, w10, w26
  42fc30:	ldr	w23, [x9, x10]
  42fc34:	b	42fbf0 <feof@plt+0x2cef0>
  42fc38:	cbz	x20, 42fc40 <feof@plt+0x2cf40>
  42fc3c:	str	x22, [x20]
  42fc40:	mov	w0, w19
  42fc44:	ldp	x20, x19, [sp, #64]
  42fc48:	ldp	x22, x21, [sp, #48]
  42fc4c:	ldp	x24, x23, [sp, #32]
  42fc50:	ldp	x26, x25, [sp, #16]
  42fc54:	ldp	x29, x30, [sp], #80
  42fc58:	ret
  42fc5c:	stp	x29, x30, [sp, #-16]!
  42fc60:	movi	v0.2d, #0x0
  42fc64:	mov	x29, sp
  42fc68:	stp	q0, q0, [x8]
  42fc6c:	tbnz	w2, #31, 42fc80 <feof@plt+0x2cf80>
  42fc70:	cmp	w2, #0x2
  42fc74:	b.cs	42fca4 <feof@plt+0x2cfa4>  // b.hs, b.nlast
  42fc78:	ldp	x29, x30, [sp], #16
  42fc7c:	ret
  42fc80:	ldr	x9, [x0, #104]
  42fc84:	and	w10, w2, #0x7fffffff
  42fc88:	mov	w11, #0x18                  	// #24
  42fc8c:	umaddl	x9, w10, w11, x9
  42fc90:	ldr	x10, [x9, #16]
  42fc94:	str	x10, [x8, #16]
  42fc98:	ldr	w2, [x9]
  42fc9c:	cmp	w2, #0x2
  42fca0:	b.cc	42fc78 <feof@plt+0x2cf78>  // b.lo, b.ul, b.last
  42fca4:	cbz	x1, 42fd24 <feof@plt+0x2d024>
  42fca8:	mov	w9, w2
  42fcac:	tbz	w2, #31, 42fcc4 <feof@plt+0x2cfc4>
  42fcb0:	ldr	x9, [x0, #104]
  42fcb4:	and	w10, w2, #0x7fffffff
  42fcb8:	mov	w11, #0x18                  	// #24
  42fcbc:	umull	x10, w10, w11
  42fcc0:	ldr	w9, [x9, x10]
  42fcc4:	lsr	w10, w9, #28
  42fcc8:	cmp	w10, #0x7
  42fccc:	b.cc	42fcd4 <feof@plt+0x2cfd4>  // b.lo, b.ul, b.last
  42fcd0:	tbz	w9, #31, 42fd3c <feof@plt+0x2d03c>
  42fcd4:	ldr	x9, [x1, #8]
  42fcd8:	mov	w11, #0xffffffff            	// #-1
  42fcdc:	str	x9, [x8]
  42fce0:	ldr	w9, [x1]
  42fce4:	ldrh	w10, [x1, #6]
  42fce8:	ldr	w12, [x1, #16]
  42fcec:	sub	w9, w2, w9
  42fcf0:	lsl	w11, w11, w10
  42fcf4:	bic	w11, w9, w11
  42fcf8:	lsr	w9, w9, w10
  42fcfc:	lsr	x10, x10, #8
  42fd00:	add	w9, w9, w12
  42fd04:	lsr	w10, w11, w10
  42fd08:	stp	w9, w10, [x8, #8]
  42fd0c:	ldrb	w9, [x1, #5]
  42fd10:	cmp	w9, #0x0
  42fd14:	cset	w9, ne  // ne = any
  42fd18:	strb	w9, [x8, #24]
  42fd1c:	ldp	x29, x30, [sp], #16
  42fd20:	ret
  42fd24:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fd28:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fd2c:	add	x0, x0, #0x3e7
  42fd30:	add	x2, x2, #0x432
  42fd34:	mov	w1, #0x6bd                 	// #1725
  42fd38:	bl	408b70 <feof@plt+0x5e70>
  42fd3c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fd40:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fd44:	add	x0, x0, #0x3e7
  42fd48:	add	x2, x2, #0x432
  42fd4c:	mov	w1, #0x6c5                 	// #1733
  42fd50:	bl	408b70 <feof@plt+0x5e70>
  42fd54:	sub	sp, sp, #0x60
  42fd58:	adrp	x8, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42fd5c:	adrp	x9, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42fd60:	add	x8, x8, #0xd3d
  42fd64:	add	x9, x9, #0xd46
  42fd68:	stp	x29, x30, [sp, #48]
  42fd6c:	stp	x22, x21, [sp, #64]
  42fd70:	stp	x20, x19, [sp, #80]
  42fd74:	stp	x8, x9, [sp, #8]
  42fd78:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  42fd7c:	ldr	x8, [x8, #1416]
  42fd80:	adrp	x10, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42fd84:	adrp	x11, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42fd88:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fd8c:	cmp	x0, #0x0
  42fd90:	mov	x20, x1
  42fd94:	add	x10, x10, #0xd4f
  42fd98:	add	x11, x11, #0xd59
  42fd9c:	add	x9, x9, #0x44a
  42fda0:	csel	x19, x8, x0, eq  // eq = none
  42fda4:	add	x29, sp, #0x30
  42fda8:	stp	x10, x11, [sp, #24]
  42fdac:	str	x9, [sp, #40]
  42fdb0:	tbz	w3, #0, 42fe08 <feof@plt+0x2d108>
  42fdb4:	ldr	x8, [x20, #24]
  42fdb8:	sxtw	x9, w2
  42fdbc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fdc0:	adrp	x5, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fdc4:	add	x20, x8, x9, lsl #5
  42fdc8:	ldr	w4, [x20]
  42fdcc:	adrp	x6, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fdd0:	add	x1, x1, #0x459
  42fdd4:	add	x5, x5, #0x44a
  42fdd8:	add	x6, x6, #0x48d
  42fddc:	mov	x0, x19
  42fde0:	mov	x3, x20
  42fde4:	bl	4026f0 <fprintf@plt>
  42fde8:	ldr	x8, [x20, #8]
  42fdec:	ldr	w3, [x20, #4]
  42fdf0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fdf4:	add	x1, x1, #0x4ba
  42fdf8:	ldr	x2, [x8]
  42fdfc:	mov	x0, x19
  42fe00:	bl	4026f0 <fprintf@plt>
  42fe04:	b	42ff80 <feof@plt+0x2d280>
  42fe08:	ldr	x8, [x20]
  42fe0c:	mov	w9, #0x18                  	// #24
  42fe10:	smaddl	x21, w2, w9, x8
  42fe14:	ldrb	w8, [x21, #4]
  42fe18:	ldr	w4, [x21]
  42fe1c:	cmp	x8, #0x4
  42fe20:	b.hi	42fe30 <feof@plt+0x2d130>  // b.pmore
  42fe24:	add	x9, sp, #0x8
  42fe28:	ldr	x5, [x9, x8, lsl #3]
  42fe2c:	b	42fe38 <feof@plt+0x2d138>
  42fe30:	adrp	x5, 457000 <_obstack_memory_used@@Base+0x1dd8>
  42fe34:	add	x5, x5, #0x1eb
  42fe38:	ldrb	w8, [x21, #5]
  42fe3c:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fe40:	adrp	x10, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fe44:	add	x9, x9, #0x489
  42fe48:	add	x10, x10, #0x48d
  42fe4c:	cmp	w8, #0x0
  42fe50:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  42fe54:	csel	x6, x10, x9, eq  // eq = none
  42fe58:	add	x1, x1, #0x459
  42fe5c:	mov	x0, x19
  42fe60:	mov	x3, x21
  42fe64:	bl	4026f0 <fprintf@plt>
  42fe68:	ldr	w8, [x21, #20]
  42fe6c:	tbnz	w8, #31, 42fe80 <feof@plt+0x2d180>
  42fe70:	cmp	w8, #0x2
  42fe74:	b.cs	42fe9c <feof@plt+0x2d19c>  // b.hs, b.nlast
  42fe78:	mov	x22, xzr
  42fe7c:	b	42ff28 <feof@plt+0x2d228>
  42fe80:	ldr	x9, [x20, #104]
  42fe84:	and	x8, x8, #0x7fffffff
  42fe88:	mov	w10, #0x18                  	// #24
  42fe8c:	mul	x8, x8, x10
  42fe90:	ldr	w8, [x9, x8]
  42fe94:	cmp	w8, #0x2
  42fe98:	b.cc	42fe78 <feof@plt+0x2d178>  // b.lo, b.ul, b.last
  42fe9c:	ldrsw	x10, [x20, #16]
  42fea0:	ldr	x9, [x20]
  42fea4:	mov	w11, #0x18                  	// #24
  42fea8:	madd	x22, x10, x11, x9
  42feac:	ldr	w11, [x22]
  42feb0:	cmp	w8, w11
  42feb4:	b.cs	42fec0 <feof@plt+0x2d1c0>  // b.hs, b.nlast
  42feb8:	mov	w11, wzr
  42febc:	b	42fee4 <feof@plt+0x2d1e4>
  42fec0:	ldr	w12, [x20, #12]
  42fec4:	add	w11, w10, #0x1
  42fec8:	cmp	w11, w12
  42fecc:	b.eq	42ff28 <feof@plt+0x2d228>  // b.none
  42fed0:	ldr	w11, [x22, #24]
  42fed4:	cmp	w8, w11
  42fed8:	mov	w11, w10
  42fedc:	mov	w10, w12
  42fee0:	b.cc	42ff28 <feof@plt+0x2d228>  // b.lo, b.ul, b.last
  42fee4:	sub	w12, w10, w11
  42fee8:	cmp	w12, #0x2
  42feec:	b.cc	42ff1c <feof@plt+0x2d21c>  // b.lo, b.ul, b.last
  42fef0:	mov	w12, #0x18                  	// #24
  42fef4:	add	w13, w11, w10
  42fef8:	lsr	w13, w13, #1
  42fefc:	umull	x14, w13, w12
  42ff00:	ldr	w14, [x9, x14]
  42ff04:	cmp	w14, w8
  42ff08:	csel	w11, w11, w13, hi  // hi = pmore
  42ff0c:	csel	w10, w13, w10, hi  // hi = pmore
  42ff10:	sub	w13, w10, w11
  42ff14:	cmp	w13, #0x1
  42ff18:	b.hi	42fef4 <feof@plt+0x2d1f4>  // b.pmore
  42ff1c:	mov	w8, #0x18                  	// #24
  42ff20:	smaddl	x22, w11, w8, x9
  42ff24:	str	w11, [x20, #16]
  42ff28:	ldr	x2, [x21, #8]
  42ff2c:	ldr	w3, [x21, #16]
  42ff30:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  42ff34:	add	x1, x1, #0x490
  42ff38:	mov	x0, x19
  42ff3c:	bl	4026f0 <fprintf@plt>
  42ff40:	cbz	x22, 42ff64 <feof@plt+0x2d264>
  42ff44:	ldr	x8, [x20]
  42ff48:	ldr	x3, [x22, #8]
  42ff4c:	mov	w9, #0xaaab                	// #43691
  42ff50:	movk	w9, #0xaaaa, lsl #16
  42ff54:	sub	x8, x22, x8
  42ff58:	lsr	x8, x8, #3
  42ff5c:	mul	w2, w8, w9
  42ff60:	b	42ff70 <feof@plt+0x2d270>
  42ff64:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  42ff68:	add	x3, x3, #0x4b5
  42ff6c:	mov	w2, #0xffffffff            	// #-1
  42ff70:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  42ff74:	add	x1, x1, #0x49d
  42ff78:	mov	x0, x19
  42ff7c:	bl	4026f0 <fprintf@plt>
  42ff80:	mov	x1, x19
  42ff84:	ldp	x20, x19, [sp, #80]
  42ff88:	ldp	x22, x21, [sp, #64]
  42ff8c:	ldp	x29, x30, [sp, #48]
  42ff90:	mov	w0, #0xa                   	// #10
  42ff94:	add	sp, sp, #0x60
  42ff98:	b	4029a0 <fputc@plt>
  42ff9c:	sub	sp, sp, #0x70
  42ffa0:	stp	x22, x21, [sp, #80]
  42ffa4:	stp	x20, x19, [sp, #96]
  42ffa8:	mov	x19, x2
  42ffac:	mov	w20, w1
  42ffb0:	mov	x22, x0
  42ffb4:	stp	x29, x30, [sp, #32]
  42ffb8:	str	x25, [sp, #48]
  42ffbc:	stp	x24, x23, [sp, #64]
  42ffc0:	add	x29, sp, #0x20
  42ffc4:	tbz	w1, #31, 42ffdc <feof@plt+0x2d2dc>
  42ffc8:	ldr	x8, [x22, #104]
  42ffcc:	and	w9, w20, #0x7fffffff
  42ffd0:	mov	w10, #0x18                  	// #24
  42ffd4:	umull	x9, w9, w10
  42ffd8:	ldr	w20, [x8, x9]
  42ffdc:	cbz	w20, 43020c <feof@plt+0x2d50c>
  42ffe0:	mov	w8, w20
  42ffe4:	tbnz	w20, #31, 430018 <feof@plt+0x2d318>
  42ffe8:	cmp	w8, #0x2
  42ffec:	b.cs	430034 <feof@plt+0x2d334>  // b.hs, b.nlast
  42fff0:	adrp	x21, 455000 <_obstack_begin_1@@Base+0xa4>
  42fff4:	add	x21, x21, #0xce0
  42fff8:	mov	x7, xzr
  42fffc:	mov	w4, #0xffffffff            	// #-1
  430000:	mov	w24, w20
  430004:	mov	w5, #0xffffffff            	// #-1
  430008:	mov	w6, #0xffffffff            	// #-1
  43000c:	mov	x3, x21
  430010:	mov	w8, #0xffffffff            	// #-1
  430014:	b	4301ec <feof@plt+0x2d4ec>
  430018:	ldr	x8, [x22, #104]
  43001c:	and	w9, w20, #0x7fffffff
  430020:	mov	w10, #0x18                  	// #24
  430024:	umull	x9, w9, w10
  430028:	ldr	w8, [x8, x9]
  43002c:	cmp	w8, #0x2
  430030:	b.cc	42fff0 <feof@plt+0x2d2f0>  // b.lo, b.ul, b.last
  430034:	adrp	x21, 455000 <_obstack_begin_1@@Base+0xa4>
  430038:	mov	w25, #0x18                  	// #24
  43003c:	add	x21, x21, #0xce0
  430040:	mov	w24, w20
  430044:	mov	w23, w24
  430048:	tbz	w24, #31, 43005c <feof@plt+0x2d35c>
  43004c:	ldr	x8, [x22, #104]
  430050:	and	w9, w24, #0x7fffffff
  430054:	umull	x9, w9, w25
  430058:	ldr	w23, [x8, x9]
  43005c:	mov	x0, x22
  430060:	mov	w1, w23
  430064:	bl	42e10c <feof@plt+0x2b40c>
  430068:	mov	x7, x0
  43006c:	cbz	x0, 4300a0 <feof@plt+0x2d3a0>
  430070:	ldr	w8, [x7]
  430074:	lsr	w9, w8, #28
  430078:	cmp	w9, #0x7
  43007c:	b.cc	4300b8 <feof@plt+0x2d3b8>  // b.lo, b.ul, b.last
  430080:	ldr	x9, [x7, #16]
  430084:	sub	w8, w23, w8
  430088:	mov	w10, #0x1                   	// #1
  43008c:	bfi	w10, w8, #1, #31
  430090:	ldr	w24, [x9, w10, uxtw #2]
  430094:	mov	w23, w24
  430098:	tbz	w24, #31, 43005c <feof@plt+0x2d35c>
  43009c:	b	43004c <feof@plt+0x2d34c>
  4300a0:	mov	w4, #0xffffffff            	// #-1
  4300a4:	mov	x3, x21
  4300a8:	mov	w5, #0xffffffff            	// #-1
  4300ac:	mov	w6, #0xffffffff            	// #-1
  4300b0:	mov	w8, #0xffffffff            	// #-1
  4300b4:	b	4301ec <feof@plt+0x2d4ec>
  4300b8:	ldrb	w8, [x7, #5]
  4300bc:	ldr	w9, [x7]
  4300c0:	ldrh	w10, [x7, #6]
  4300c4:	ldr	w11, [x7, #16]
  4300c8:	ldr	x21, [x7, #8]
  4300cc:	cmp	w8, #0x0
  4300d0:	mov	w8, #0xffffffff            	// #-1
  4300d4:	sub	w9, w24, w9
  4300d8:	lsl	w8, w8, w10
  4300dc:	bic	w8, w9, w8
  4300e0:	lsr	w9, w9, w10
  4300e4:	lsr	x10, x10, #8
  4300e8:	cset	w6, ne  // ne = any
  4300ec:	cmp	w24, w20
  4300f0:	add	w4, w9, w11
  4300f4:	lsr	w5, w8, w10
  4300f8:	cset	w8, ne  // ne = any
  4300fc:	b.eq	430110 <feof@plt+0x2d410>  // b.none
  430100:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  430104:	mov	w8, #0x1                   	// #1
  430108:	add	x3, x3, #0x4d1
  43010c:	b	4301ec <feof@plt+0x2d4ec>
  430110:	ldr	w9, [x7, #20]
  430114:	tbz	w9, #31, 43012c <feof@plt+0x2d42c>
  430118:	ldr	x10, [x22, #104]
  43011c:	and	x9, x9, #0x7fffffff
  430120:	mov	w11, #0x18                  	// #24
  430124:	mul	x9, x9, x11
  430128:	ldr	w9, [x10, x9]
  43012c:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  430130:	add	x3, x3, #0x4d5
  430134:	cbz	x22, 430164 <feof@plt+0x2d464>
  430138:	cmp	w9, #0x2
  43013c:	b.cc	430164 <feof@plt+0x2d464>  // b.lo, b.ul, b.last
  430140:	ldrsw	x11, [x22, #16]
  430144:	ldr	x10, [x22]
  430148:	mov	w12, #0x18                  	// #24
  43014c:	madd	x13, x11, x12, x10
  430150:	ldr	w12, [x13]
  430154:	cmp	w9, w12
  430158:	b.cs	43016c <feof@plt+0x2d46c>  // b.hs, b.nlast
  43015c:	mov	w12, wzr
  430160:	b	430190 <feof@plt+0x2d490>
  430164:	mov	w8, wzr
  430168:	b	4301e8 <feof@plt+0x2d4e8>
  43016c:	ldr	w14, [x22, #12]
  430170:	add	w12, w11, #0x1
  430174:	cmp	w12, w14
  430178:	b.eq	4301d4 <feof@plt+0x2d4d4>  // b.none
  43017c:	ldr	w12, [x13, #24]
  430180:	cmp	w9, w12
  430184:	mov	w12, w11
  430188:	mov	w11, w14
  43018c:	b.cc	4301d8 <feof@plt+0x2d4d8>  // b.lo, b.ul, b.last
  430190:	sub	w13, w11, w12
  430194:	cmp	w13, #0x2
  430198:	b.cc	4301c8 <feof@plt+0x2d4c8>  // b.lo, b.ul, b.last
  43019c:	mov	w13, #0x18                  	// #24
  4301a0:	add	w14, w12, w11
  4301a4:	lsr	w14, w14, #1
  4301a8:	umull	x15, w14, w13
  4301ac:	ldr	w15, [x10, x15]
  4301b0:	cmp	w15, w9
  4301b4:	csel	w12, w12, w14, hi  // hi = pmore
  4301b8:	csel	w11, w14, w11, hi  // hi = pmore
  4301bc:	sub	w14, w11, w12
  4301c0:	cmp	w14, #0x1
  4301c4:	b.hi	4301a0 <feof@plt+0x2d4a0>  // b.pmore
  4301c8:	mov	w9, #0x18                  	// #24
  4301cc:	smaddl	x13, w12, w9, x10
  4301d0:	str	w12, [x22, #16]
  4301d4:	cbz	x13, 4301e0 <feof@plt+0x2d4e0>
  4301d8:	ldr	x3, [x13, #8]
  4301dc:	b	4301e8 <feof@plt+0x2d4e8>
  4301e0:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  4301e4:	add	x3, x3, #0x4d5
  4301e8:	mov	w24, w20
  4301ec:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4301f0:	add	x1, x1, #0x4dc
  4301f4:	mov	x0, x19
  4301f8:	mov	x2, x21
  4301fc:	str	w24, [sp, #16]
  430200:	str	w20, [sp, #8]
  430204:	str	w8, [sp]
  430208:	bl	4026f0 <fprintf@plt>
  43020c:	ldp	x20, x19, [sp, #96]
  430210:	ldp	x22, x21, [sp, #80]
  430214:	ldp	x24, x23, [sp, #64]
  430218:	ldr	x25, [sp, #48]
  43021c:	ldp	x29, x30, [sp, #32]
  430220:	add	sp, sp, #0x70
  430224:	ret
  430228:	stp	x29, x30, [sp, #-64]!
  43022c:	stp	x24, x23, [sp, #16]
  430230:	stp	x22, x21, [sp, #32]
  430234:	stp	x20, x19, [sp, #48]
  430238:	mov	x29, sp
  43023c:	cbz	x0, 4302a8 <feof@plt+0x2d5a8>
  430240:	ldr	w22, [x0, #12]
  430244:	mov	x20, x0
  430248:	cbz	w22, 4302a4 <feof@plt+0x2d5a4>
  43024c:	cmp	w22, #0x1
  430250:	b.mi	4302a4 <feof@plt+0x2d5a4>  // b.first
  430254:	mov	x19, x2
  430258:	mov	x21, x1
  43025c:	mov	w23, #0x18                  	// #24
  430260:	b	430270 <feof@plt+0x2d570>
  430264:	cmp	w22, #0x2
  430268:	mov	w22, w24
  43026c:	b.mi	4302a4 <feof@plt+0x2d5a4>  // b.first
  430270:	ldr	x8, [x20]
  430274:	sub	w24, w22, #0x1
  430278:	umaddl	x8, w24, w23, x8
  43027c:	ldr	x0, [x8, #8]
  430280:	cbz	x0, 430264 <feof@plt+0x2d564>
  430284:	mov	x1, x21
  430288:	bl	453a30 <feof@plt+0x50d30>
  43028c:	cbnz	w0, 430264 <feof@plt+0x2d564>
  430290:	ldr	w8, [x20, #12]
  430294:	cmp	w8, w22
  430298:	b.ne	4302bc <feof@plt+0x2d5bc>  // b.any
  43029c:	ldr	w8, [x20, #56]
  4302a0:	b	4302d0 <feof@plt+0x2d5d0>
  4302a4:	mov	w0, wzr
  4302a8:	ldp	x20, x19, [sp, #48]
  4302ac:	ldp	x22, x21, [sp, #32]
  4302b0:	ldp	x24, x23, [sp, #16]
  4302b4:	ldp	x29, x30, [sp], #64
  4302b8:	ret
  4302bc:	ldr	x8, [x20]
  4302c0:	mov	w9, #0x18                  	// #24
  4302c4:	smull	x9, w22, w9
  4302c8:	ldr	w8, [x8, x9]
  4302cc:	sub	w8, w8, #0x1
  4302d0:	mov	w0, #0x1                   	// #1
  4302d4:	str	w8, [x19]
  4302d8:	b	4302a8 <feof@plt+0x2d5a8>
  4302dc:	ldp	w9, w11, [x0, #8]
  4302e0:	ldp	w10, w8, [x0, #32]
  4302e4:	ldr	x16, [x0, #24]
  4302e8:	add	x12, x9, x9, lsl #1
  4302ec:	add	x14, x11, x11, lsl #1
  4302f0:	lsl	x13, x12, #3
  4302f4:	lsl	x12, x14, #3
  4302f8:	lsl	x10, x10, #5
  4302fc:	cbz	x16, 430314 <feof@plt+0x2d614>
  430300:	sub	w14, w8, #0x1
  430304:	sxtw	x14, w14
  430308:	add	x17, x16, x14, lsl #5
  43030c:	cmp	x16, x17
  430310:	b.ls	430364 <feof@plt+0x2d664>  // b.plast
  430314:	mov	x14, xzr
  430318:	mov	x15, xzr
  43031c:	stp	x9, x11, [x1]
  430320:	stp	x13, x12, [x1, #16]
  430324:	adrp	x9, 47d000 <stderr@@GLIBC_2.17+0xa78>
  430328:	ldr	w9, [x9, #2400]
  43032c:	adrp	x11, 47d000 <stderr@@GLIBC_2.17+0xa78>
  430330:	str	x9, [x1, #32]
  430334:	ldr	w9, [x11, #2404]
  430338:	lsl	x11, x8, #5
  43033c:	stp	x10, x11, [x1, #56]
  430340:	stp	x14, x15, [x1, #72]
  430344:	stp	x9, x8, [x1, #40]
  430348:	ldr	w8, [x0, #100]
  43034c:	add	x8, x8, x8, lsl #1
  430350:	lsl	x8, x8, #3
  430354:	str	x8, [x1, #88]
  430358:	ldr	w8, [x0, #96]
  43035c:	str	x8, [x1, #96]
  430360:	ret
  430364:	mov	x14, xzr
  430368:	mov	x15, xzr
  43036c:	b	43037c <feof@plt+0x2d67c>
  430370:	add	x16, x16, #0x20
  430374:	cmp	x16, x17
  430378:	b.hi	43031c <feof@plt+0x2d61c>  // b.pmore
  43037c:	ldr	w18, [x16, #4]
  430380:	lsl	w18, w18, #1
  430384:	add	x14, x14, w18, uxtw #2
  430388:	cbz	w18, 430370 <feof@plt+0x2d670>
  43038c:	ldr	x2, [x16, #16]
  430390:	mov	x3, xzr
  430394:	add	x4, x2, x3, lsl #2
  430398:	ldp	w5, w4, [x4]
  43039c:	add	x6, x15, #0x4
  4303a0:	add	x3, x3, #0x2
  4303a4:	cmp	w5, w4
  4303a8:	csel	x15, x6, x15, eq  // eq = none
  4303ac:	cmp	x3, x18
  4303b0:	b.cc	430394 <feof@plt+0x2d694>  // b.lo, b.ul, b.last
  4303b4:	b	430370 <feof@plt+0x2d670>
  4303b8:	stp	x29, x30, [sp, #-96]!
  4303bc:	stp	x28, x27, [sp, #16]
  4303c0:	stp	x26, x25, [sp, #32]
  4303c4:	stp	x24, x23, [sp, #48]
  4303c8:	stp	x22, x21, [sp, #64]
  4303cc:	stp	x20, x19, [sp, #80]
  4303d0:	mov	x29, sp
  4303d4:	cbz	x1, 430578 <feof@plt+0x2d878>
  4303d8:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4303dc:	ldr	x8, [x8, #1416]
  4303e0:	mov	w22, w2
  4303e4:	ldr	w2, [x1, #12]
  4303e8:	cmp	x0, #0x0
  4303ec:	mov	x20, x1
  4303f0:	csel	x21, x8, x0, eq  // eq = none
  4303f4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4303f8:	add	x1, x1, #0x50d
  4303fc:	mov	x0, x21
  430400:	mov	w19, w3
  430404:	bl	4026f0 <fprintf@plt>
  430408:	ldr	w2, [x20, #36]
  43040c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  430410:	add	x1, x1, #0x526
  430414:	mov	x0, x21
  430418:	bl	4026f0 <fprintf@plt>
  43041c:	ldr	w2, [x20, #48]
  430420:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  430424:	add	x1, x1, #0x53f
  430428:	mov	x0, x21
  43042c:	bl	4026f0 <fprintf@plt>
  430430:	ldr	w2, [x20, #56]
  430434:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  430438:	add	x1, x1, #0x558
  43043c:	mov	x0, x21
  430440:	bl	4026f0 <fprintf@plt>
  430444:	cbz	w22, 43049c <feof@plt+0x2d79c>
  430448:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  43044c:	add	x0, x0, #0x571
  430450:	mov	w1, #0x14                  	// #20
  430454:	mov	w2, #0x1                   	// #1
  430458:	mov	x3, x21
  43045c:	bl	402bf0 <fwrite@plt>
  430460:	mov	w23, wzr
  430464:	ldr	w8, [x20, #12]
  430468:	cmp	w23, w8
  43046c:	b.cs	430490 <feof@plt+0x2d790>  // b.hs, b.nlast
  430470:	mov	x0, x21
  430474:	mov	x1, x20
  430478:	mov	w2, w23
  43047c:	mov	w3, wzr
  430480:	bl	42fd54 <feof@plt+0x2d054>
  430484:	add	w23, w23, #0x1
  430488:	cmp	w22, w23
  43048c:	b.ne	430464 <feof@plt+0x2d764>  // b.any
  430490:	mov	w0, #0xa                   	// #10
  430494:	mov	x1, x21
  430498:	bl	4029a0 <fputc@plt>
  43049c:	cbz	w19, 430578 <feof@plt+0x2d878>
  4304a0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  4304a4:	add	x0, x0, #0x586
  4304a8:	mov	w1, #0x11                  	// #17
  4304ac:	mov	w2, #0x1                   	// #1
  4304b0:	mov	x3, x21
  4304b4:	bl	402bf0 <fwrite@plt>
  4304b8:	adrp	x23, 463000 <_obstack_memory_used@@Base+0xddd8>
  4304bc:	adrp	x24, 463000 <_obstack_memory_used@@Base+0xddd8>
  4304c0:	adrp	x25, 463000 <_obstack_memory_used@@Base+0xddd8>
  4304c4:	adrp	x26, 463000 <_obstack_memory_used@@Base+0xddd8>
  4304c8:	mov	w22, wzr
  4304cc:	add	x23, x23, #0x459
  4304d0:	add	x24, x24, #0x44a
  4304d4:	add	x25, x25, #0x48d
  4304d8:	add	x26, x26, #0x4ba
  4304dc:	ldr	w8, [x20, #36]
  4304e0:	cmp	w22, w8
  4304e4:	b.cs	430554 <feof@plt+0x2d854>  // b.hs, b.nlast
  4304e8:	ldr	x8, [x20, #24]
  4304ec:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4304f0:	ldr	x9, [x9, #1416]
  4304f4:	sxtw	x10, w22
  4304f8:	add	x27, x8, x10, lsl #5
  4304fc:	ldr	w4, [x27]
  430500:	cmp	x21, #0x0
  430504:	csel	x28, x9, x21, eq  // eq = none
  430508:	mov	x0, x28
  43050c:	mov	x1, x23
  430510:	mov	w2, w22
  430514:	mov	x3, x27
  430518:	mov	x5, x24
  43051c:	mov	x6, x25
  430520:	bl	4026f0 <fprintf@plt>
  430524:	ldr	x8, [x27, #8]
  430528:	ldr	w3, [x27, #4]
  43052c:	mov	x0, x28
  430530:	mov	x1, x26
  430534:	ldr	x2, [x8]
  430538:	bl	4026f0 <fprintf@plt>
  43053c:	mov	w0, #0xa                   	// #10
  430540:	mov	x1, x28
  430544:	bl	4029a0 <fputc@plt>
  430548:	add	w22, w22, #0x1
  43054c:	cmp	w19, w22
  430550:	b.ne	4304dc <feof@plt+0x2d7dc>  // b.any
  430554:	mov	x1, x21
  430558:	ldp	x20, x19, [sp, #80]
  43055c:	ldp	x22, x21, [sp, #64]
  430560:	ldp	x24, x23, [sp, #48]
  430564:	ldp	x26, x25, [sp, #32]
  430568:	ldp	x28, x27, [sp, #16]
  43056c:	mov	w0, #0xa                   	// #10
  430570:	ldp	x29, x30, [sp], #96
  430574:	b	4029a0 <fputc@plt>
  430578:	ldp	x20, x19, [sp, #80]
  43057c:	ldp	x22, x21, [sp, #64]
  430580:	ldp	x24, x23, [sp, #48]
  430584:	ldp	x26, x25, [sp, #32]
  430588:	ldp	x28, x27, [sp, #16]
  43058c:	ldp	x29, x30, [sp], #96
  430590:	ret
  430594:	mov	w8, #0x1                   	// #1
  430598:	str	x1, [x0]
  43059c:	str	wzr, [x0, #64]
  4305a0:	str	xzr, [x0, #72]
  4305a4:	str	wzr, [x0, #80]
  4305a8:	strb	wzr, [x0, #84]
  4305ac:	str	wzr, [x0, #120]
  4305b0:	str	wzr, [x0, #144]
  4305b4:	str	xzr, [x0, #152]
  4305b8:	strh	wzr, [x0, #160]
  4305bc:	stp	w2, wzr, [x0, #16]
  4305c0:	str	w8, [x0, #8]
  4305c4:	str	x3, [x0, #24]
  4305c8:	ret
  4305cc:	stp	x29, x30, [sp, #-64]!
  4305d0:	stp	x22, x21, [sp, #32]
  4305d4:	stp	x20, x19, [sp, #48]
  4305d8:	ldrsw	x8, [x0, #8]
  4305dc:	mov	x19, x3
  4305e0:	mov	w20, w2
  4305e4:	mov	w21, w1
  4305e8:	mov	x22, x0
  4305ec:	add	w9, w8, #0x1
  4305f0:	cmp	w8, #0x2
  4305f4:	str	x23, [sp, #16]
  4305f8:	mov	x29, sp
  4305fc:	str	w9, [x0, #8]
  430600:	b.gt	430614 <feof@plt+0x2d914>
  430604:	add	x8, x22, x8, lsl #4
  430608:	stp	w21, w20, [x8, #16]
  43060c:	add	x8, x8, #0x18
  430610:	b	43065c <feof@plt+0x2d95c>
  430614:	ldr	x0, [x22, #72]
  430618:	sub	w23, w8, #0x3
  43061c:	cbz	x0, 430640 <feof@plt+0x2d940>
  430620:	ldrsw	x8, [x22, #64]
  430624:	cmp	w23, w8
  430628:	b.lt	430654 <feof@plt+0x2d954>  // b.tstop
  43062c:	lsl	w9, w8, #1
  430630:	lsl	x1, x8, #5
  430634:	str	w9, [x22, #64]
  430638:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  43063c:	b	430650 <feof@plt+0x2d950>
  430640:	mov	w8, #0x10                  	// #16
  430644:	mov	w0, #0x100                 	// #256
  430648:	str	w8, [x22, #64]
  43064c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  430650:	str	x0, [x22, #72]
  430654:	add	x8, x0, w23, uxtw #4
  430658:	stp	w21, w20, [x8], #8
  43065c:	str	x19, [x8]
  430660:	ldp	x20, x19, [sp, #48]
  430664:	ldp	x22, x21, [sp, #32]
  430668:	ldr	x23, [sp, #16]
  43066c:	ldp	x29, x30, [sp], #64
  430670:	ret
  430674:	stp	x29, x30, [sp, #-48]!
  430678:	stp	x20, x19, [sp, #32]
  43067c:	ldr	w8, [x0, #120]
  430680:	mov	x19, x0
  430684:	str	x21, [sp, #16]
  430688:	mov	x29, sp
  43068c:	cbz	w8, 4306ec <feof@plt+0x2d9ec>
  430690:	mov	w21, wzr
  430694:	b	4306a4 <feof@plt+0x2d9a4>
  430698:	add	w21, w21, #0x1
  43069c:	cmp	w21, w8
  4306a0:	b.cs	4306ec <feof@plt+0x2d9ec>  // b.hs, b.nlast
  4306a4:	cmp	w21, #0x1
  4306a8:	b.gt	4306c0 <feof@plt+0x2d9c0>
  4306ac:	add	x9, x19, w21, sxtw #3
  4306b0:	add	x9, x9, #0x80
  4306b4:	ldr	x20, [x9]
  4306b8:	cbnz	x20, 4306d4 <feof@plt+0x2d9d4>
  4306bc:	b	430698 <feof@plt+0x2d998>
  4306c0:	ldr	x9, [x19, #152]
  4306c4:	sub	w10, w21, #0x2
  4306c8:	add	x9, x9, w10, sxtw #3
  4306cc:	ldr	x20, [x9]
  4306d0:	cbz	x20, 430698 <feof@plt+0x2d998>
  4306d4:	ldr	x0, [x20, #8]
  4306d8:	bl	402770 <free@plt>
  4306dc:	mov	x0, x20
  4306e0:	bl	402940 <_ZdlPv@plt>
  4306e4:	ldr	w8, [x19, #120]
  4306e8:	b	430698 <feof@plt+0x2d998>
  4306ec:	ldr	x0, [x19, #152]
  4306f0:	bl	402770 <free@plt>
  4306f4:	ldr	x0, [x19, #72]
  4306f8:	ldp	x20, x19, [sp, #32]
  4306fc:	ldr	x21, [sp, #16]
  430700:	ldp	x29, x30, [sp], #48
  430704:	b	402770 <free@plt>
  430708:	cmp	w1, #0x2
  43070c:	b.gt	43071c <feof@plt+0x2da1c>
  430710:	add	x8, x0, w1, sxtw #4
  430714:	ldr	w0, [x8, #16]!
  430718:	ret
  43071c:	ldr	x8, [x0, #72]
  430720:	add	x8, x8, w1, sxtw #4
  430724:	ldr	w0, [x8, #-48]!
  430728:	ret
  43072c:	cmp	w1, #0x2
  430730:	b.gt	430740 <feof@plt+0x2da40>
  430734:	add	x8, x0, w1, sxtw #4
  430738:	add	x0, x8, #0x10
  43073c:	ret
  430740:	ldr	x8, [x0, #72]
  430744:	add	x8, x8, w1, sxtw #4
  430748:	sub	x0, x8, #0x30
  43074c:	ret
  430750:	cmp	w1, #0x2
  430754:	b.gt	430764 <feof@plt+0x2da64>
  430758:	add	x8, x0, w1, sxtw #4
  43075c:	add	x0, x8, #0x10
  430760:	ret
  430764:	ldr	x8, [x0, #72]
  430768:	add	x8, x8, w1, sxtw #4
  43076c:	sub	x0, x8, #0x30
  430770:	ret
  430774:	sub	sp, sp, #0x40
  430778:	stp	x20, x19, [sp, #48]
  43077c:	mov	x20, x0
  430780:	mov	x19, x8
  430784:	stp	x29, x30, [sp, #32]
  430788:	add	x29, sp, #0x20
  43078c:	cbz	w1, 4307a4 <feof@plt+0x2daa4>
  430790:	cmp	w1, #0x2
  430794:	b.gt	4307f8 <feof@plt+0x2daf8>
  430798:	add	x8, x20, w1, sxtw #4
  43079c:	add	x8, x8, #0x10
  4307a0:	b	430804 <feof@plt+0x2db04>
  4307a4:	ldrb	w8, [x20, #84]
  4307a8:	cbnz	w8, 4307dc <feof@plt+0x2dadc>
  4307ac:	ldr	w0, [x20, #16]
  4307b0:	mov	x8, sp
  4307b4:	mov	w1, wzr
  4307b8:	bl	417354 <feof@plt+0x14654>
  4307bc:	ldp	q0, q1, [sp]
  4307c0:	ldr	w8, [x20, #80]
  4307c4:	stur	q1, [x20, #104]
  4307c8:	stur	q0, [x20, #88]
  4307cc:	cbz	w8, 4307d4 <feof@plt+0x2dad4>
  4307d0:	str	w8, [x20, #100]
  4307d4:	mov	w8, #0x1                   	// #1
  4307d8:	strb	w8, [x20, #84]
  4307dc:	ldur	q0, [x20, #104]
  4307e0:	ldur	q1, [x20, #88]
  4307e4:	stp	q1, q0, [x19]
  4307e8:	ldp	x20, x19, [sp, #48]
  4307ec:	ldp	x29, x30, [sp, #32]
  4307f0:	add	sp, sp, #0x40
  4307f4:	ret
  4307f8:	ldr	x8, [x20, #72]
  4307fc:	add	x8, x8, w1, sxtw #4
  430800:	sub	x8, x8, #0x30
  430804:	ldr	w0, [x8]
  430808:	mov	x8, x19
  43080c:	ldp	x20, x19, [sp, #48]
  430810:	ldp	x29, x30, [sp, #32]
  430814:	mov	w1, wzr
  430818:	add	sp, sp, #0x40
  43081c:	b	417354 <feof@plt+0x14654>
  430820:	str	w1, [x0, #80]
  430824:	strb	wzr, [x0, #84]
  430828:	ret
  43082c:	stp	x29, x30, [sp, #-48]!
  430830:	stp	x22, x21, [sp, #16]
  430834:	stp	x20, x19, [sp, #32]
  430838:	ldr	w8, [x0, #8]
  43083c:	mov	w19, w3
  430840:	mov	x20, x0
  430844:	mov	w21, w2
  430848:	cmp	w8, w1
  43084c:	mov	x29, sp
  430850:	b.ne	430878 <feof@plt+0x2db78>  // b.any
  430854:	add	w8, w1, #0x1
  430858:	cmp	w1, #0x2
  43085c:	str	w8, [x20, #8]
  430860:	b.gt	430894 <feof@plt+0x2db94>
  430864:	add	x8, x20, w1, sxtw #4
  430868:	stp	w21, w19, [x8, #16]
  43086c:	str	xzr, [x8, #24]
  430870:	cbnz	w1, 4308fc <feof@plt+0x2dbfc>
  430874:	b	4308d4 <feof@plt+0x2dbd4>
  430878:	cmp	w1, #0x2
  43087c:	b.gt	4308c0 <feof@plt+0x2dbc0>
  430880:	add	x8, x20, w1, sxtw #4
  430884:	add	x8, x8, #0x10
  430888:	stp	w21, w19, [x8]
  43088c:	cbnz	w1, 4308fc <feof@plt+0x2dbfc>
  430890:	b	4308d4 <feof@plt+0x2dbd4>
  430894:	ldr	x0, [x20, #72]
  430898:	sub	w22, w1, #0x3
  43089c:	cbz	x0, 4308dc <feof@plt+0x2dbdc>
  4308a0:	ldrsw	x8, [x20, #64]
  4308a4:	cmp	w22, w8
  4308a8:	b.lt	4308f0 <feof@plt+0x2dbf0>  // b.tstop
  4308ac:	lsl	w9, w8, #1
  4308b0:	lsl	x1, x8, #5
  4308b4:	str	w9, [x20, #64]
  4308b8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4308bc:	b	4308ec <feof@plt+0x2dbec>
  4308c0:	ldr	x8, [x20, #72]
  4308c4:	add	x8, x8, w1, sxtw #4
  4308c8:	sub	x8, x8, #0x30
  4308cc:	stp	w21, w19, [x8]
  4308d0:	cbnz	w1, 4308fc <feof@plt+0x2dbfc>
  4308d4:	strb	wzr, [x20, #84]
  4308d8:	b	4308fc <feof@plt+0x2dbfc>
  4308dc:	mov	w8, #0x10                  	// #16
  4308e0:	mov	w0, #0x100                 	// #256
  4308e4:	str	w8, [x20, #64]
  4308e8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4308ec:	str	x0, [x20, #72]
  4308f0:	add	x8, x0, w22, uxtw #4
  4308f4:	stp	w21, w19, [x8]
  4308f8:	str	xzr, [x8, #8]
  4308fc:	ldp	x20, x19, [sp, #32]
  430900:	ldp	x22, x21, [sp, #16]
  430904:	ldp	x29, x30, [sp], #48
  430908:	ret
  43090c:	stp	x29, x30, [sp, #-48]!
  430910:	stp	x20, x19, [sp, #32]
  430914:	str	x21, [sp, #16]
  430918:	mov	x20, x0
  43091c:	ldr	w21, [x0, #16]
  430920:	ldr	x0, [x0]
  430924:	mov	x19, x1
  430928:	mov	x29, sp
  43092c:	tbnz	w21, #31, 430954 <feof@plt+0x2dc54>
  430930:	cmp	w21, #0x2
  430934:	b.cc	43099c <feof@plt+0x2dc9c>  // b.lo, b.ul, b.last
  430938:	ldr	w8, [x0, #36]
  43093c:	cbz	w8, 43096c <feof@plt+0x2dc6c>
  430940:	ldr	x9, [x0, #24]
  430944:	sub	w8, w8, #0x1
  430948:	sbfiz	x8, x8, #5, #32
  43094c:	ldr	w8, [x9, x8]
  430950:	b	430970 <feof@plt+0x2dc70>
  430954:	ldr	x8, [x0, #104]
  430958:	and	x9, x21, #0x7fffffff
  43095c:	mov	w10, #0x18                  	// #24
  430960:	madd	x8, x9, x10, x8
  430964:	ldr	w21, [x8, #4]
  430968:	b	43099c <feof@plt+0x2dc9c>
  43096c:	mov	w8, #0x80000000            	// #-2147483648
  430970:	mov	w9, #0x50000000            	// #1342177280
  430974:	cmp	w21, w9
  430978:	b.hi	43099c <feof@plt+0x2dc9c>  // b.pmore
  43097c:	cmp	w8, w21
  430980:	b.ls	43099c <feof@plt+0x2dc9c>  // b.plast
  430984:	mov	w1, w21
  430988:	bl	42e10c <feof@plt+0x2b40c>
  43098c:	ldrb	w8, [x0, #7]
  430990:	mov	w9, #0xffffffff            	// #-1
  430994:	lsl	w8, w9, w8
  430998:	and	w21, w8, w21
  43099c:	mov	x0, x20
  4309a0:	mov	w1, w21
  4309a4:	mov	w2, w21
  4309a8:	mov	x3, x19
  4309ac:	ldp	x20, x19, [sp, #32]
  4309b0:	ldr	x21, [sp, #16]
  4309b4:	ldp	x29, x30, [sp], #48
  4309b8:	b	430a6c <feof@plt+0x2dd6c>
  4309bc:	stp	x29, x30, [sp, #-48]!
  4309c0:	stp	x20, x19, [sp, #32]
  4309c4:	mov	x20, x0
  4309c8:	ldr	x0, [x0]
  4309cc:	str	x21, [sp, #16]
  4309d0:	mov	x19, x2
  4309d4:	mov	w21, w1
  4309d8:	mov	x29, sp
  4309dc:	tbnz	w1, #31, 430a04 <feof@plt+0x2dd04>
  4309e0:	cmp	w21, #0x2
  4309e4:	b.cc	430a4c <feof@plt+0x2dd4c>  // b.lo, b.ul, b.last
  4309e8:	ldr	w8, [x0, #36]
  4309ec:	cbz	w8, 430a1c <feof@plt+0x2dd1c>
  4309f0:	ldr	x9, [x0, #24]
  4309f4:	sub	w8, w8, #0x1
  4309f8:	sbfiz	x8, x8, #5, #32
  4309fc:	ldr	w8, [x9, x8]
  430a00:	b	430a20 <feof@plt+0x2dd20>
  430a04:	ldr	x8, [x0, #104]
  430a08:	and	w9, w21, #0x7fffffff
  430a0c:	mov	w10, #0x18                  	// #24
  430a10:	umaddl	x8, w9, w10, x8
  430a14:	ldr	w21, [x8, #4]
  430a18:	b	430a4c <feof@plt+0x2dd4c>
  430a1c:	mov	w8, #0x80000000            	// #-2147483648
  430a20:	mov	w9, #0x50000000            	// #1342177280
  430a24:	cmp	w21, w9
  430a28:	b.hi	430a4c <feof@plt+0x2dd4c>  // b.pmore
  430a2c:	cmp	w8, w21
  430a30:	b.ls	430a4c <feof@plt+0x2dd4c>  // b.plast
  430a34:	mov	w1, w21
  430a38:	bl	42e10c <feof@plt+0x2b40c>
  430a3c:	ldrb	w8, [x0, #7]
  430a40:	mov	w9, #0xffffffff            	// #-1
  430a44:	lsl	w8, w9, w8
  430a48:	and	w21, w8, w21
  430a4c:	mov	x0, x20
  430a50:	mov	w1, w21
  430a54:	mov	w2, w21
  430a58:	mov	x3, x19
  430a5c:	ldp	x20, x19, [sp, #32]
  430a60:	ldr	x21, [sp, #16]
  430a64:	ldp	x29, x30, [sp], #48
  430a68:	b	430a6c <feof@plt+0x2dd6c>
  430a6c:	sub	sp, sp, #0x80
  430a70:	stp	x29, x30, [sp, #64]
  430a74:	stp	x24, x23, [sp, #80]
  430a78:	stp	x22, x21, [sp, #96]
  430a7c:	stp	x20, x19, [sp, #112]
  430a80:	ldrb	w8, [x0, #160]
  430a84:	add	x29, sp, #0x40
  430a88:	cbnz	w8, 430e84 <feof@plt+0x2e184>
  430a8c:	mov	w8, #0x1                   	// #1
  430a90:	movk	w8, #0x6000, lsl #16
  430a94:	mov	x19, x0
  430a98:	mov	w22, w1
  430a9c:	cmp	w1, w8
  430aa0:	b.cs	430b4c <feof@plt+0x2de4c>  // b.hs, b.nlast
  430aa4:	mov	w21, w2
  430aa8:	cmp	w2, w8
  430aac:	b.cs	430bb4 <feof@plt+0x2deb4>  // b.hs, b.nlast
  430ab0:	add	x8, sp, #0x20
  430ab4:	mov	w1, #0x1                   	// #1
  430ab8:	mov	w0, w22
  430abc:	mov	x20, x3
  430ac0:	mov	w23, #0x1                   	// #1
  430ac4:	bl	417354 <feof@plt+0x14654>
  430ac8:	mov	x8, sp
  430acc:	mov	w1, #0x1                   	// #1
  430ad0:	mov	w0, w21
  430ad4:	bl	417354 <feof@plt+0x14654>
  430ad8:	ldr	x8, [sp, #32]
  430adc:	ldr	x9, [sp]
  430ae0:	cmp	x8, x9
  430ae4:	b.eq	430c1c <feof@plt+0x2df1c>  // b.none
  430ae8:	ldr	w8, [x19, #120]
  430aec:	strb	w23, [x19, #160]
  430af0:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430af4:	mov	w21, wzr
  430af8:	b	430b30 <feof@plt+0x2de30>
  430afc:	ldr	x9, [x19, #152]
  430b00:	sub	w10, w21, #0x2
  430b04:	add	x9, x9, w10, sxtw #3
  430b08:	ldr	x20, [x9]
  430b0c:	cbz	x20, 430b24 <feof@plt+0x2de24>
  430b10:	ldr	x0, [x20, #8]
  430b14:	bl	402770 <free@plt>
  430b18:	mov	x0, x20
  430b1c:	bl	402940 <_ZdlPv@plt>
  430b20:	ldr	w8, [x19, #120]
  430b24:	add	w21, w21, #0x1
  430b28:	cmp	w21, w8
  430b2c:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430b30:	cmp	w21, #0x1
  430b34:	b.gt	430afc <feof@plt+0x2ddfc>
  430b38:	add	x9, x19, w21, sxtw #3
  430b3c:	add	x9, x9, #0x80
  430b40:	ldr	x20, [x9]
  430b44:	cbnz	x20, 430b10 <feof@plt+0x2de10>
  430b48:	b	430b24 <feof@plt+0x2de24>
  430b4c:	ldr	w8, [x19, #120]
  430b50:	mov	w9, #0x1                   	// #1
  430b54:	strb	w9, [x19, #160]
  430b58:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430b5c:	mov	w21, wzr
  430b60:	b	430b98 <feof@plt+0x2de98>
  430b64:	ldr	x9, [x19, #152]
  430b68:	sub	w10, w21, #0x2
  430b6c:	add	x9, x9, w10, sxtw #3
  430b70:	ldr	x20, [x9]
  430b74:	cbz	x20, 430b8c <feof@plt+0x2de8c>
  430b78:	ldr	x0, [x20, #8]
  430b7c:	bl	402770 <free@plt>
  430b80:	mov	x0, x20
  430b84:	bl	402940 <_ZdlPv@plt>
  430b88:	ldr	w8, [x19, #120]
  430b8c:	add	w21, w21, #0x1
  430b90:	cmp	w21, w8
  430b94:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430b98:	cmp	w21, #0x1
  430b9c:	b.gt	430b64 <feof@plt+0x2de64>
  430ba0:	add	x9, x19, w21, sxtw #3
  430ba4:	add	x9, x9, #0x80
  430ba8:	ldr	x20, [x9]
  430bac:	cbnz	x20, 430b78 <feof@plt+0x2de78>
  430bb0:	b	430b8c <feof@plt+0x2de8c>
  430bb4:	ldr	w8, [x19, #120]
  430bb8:	mov	w9, #0x1                   	// #1
  430bbc:	strb	w9, [x19, #160]
  430bc0:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430bc4:	mov	w21, wzr
  430bc8:	b	430c00 <feof@plt+0x2df00>
  430bcc:	ldr	x9, [x19, #152]
  430bd0:	sub	w10, w21, #0x2
  430bd4:	add	x9, x9, w10, sxtw #3
  430bd8:	ldr	x20, [x9]
  430bdc:	cbz	x20, 430bf4 <feof@plt+0x2def4>
  430be0:	ldr	x0, [x20, #8]
  430be4:	bl	402770 <free@plt>
  430be8:	mov	x0, x20
  430bec:	bl	402940 <_ZdlPv@plt>
  430bf0:	ldr	w8, [x19, #120]
  430bf4:	add	w21, w21, #0x1
  430bf8:	cmp	w21, w8
  430bfc:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430c00:	cmp	w21, #0x1
  430c04:	b.gt	430bcc <feof@plt+0x2decc>
  430c08:	add	x9, x19, w21, sxtw #3
  430c0c:	add	x9, x9, #0x80
  430c10:	ldr	x20, [x9]
  430c14:	cbnz	x20, 430be0 <feof@plt+0x2dee0>
  430c18:	b	430bf4 <feof@plt+0x2def4>
  430c1c:	ldr	w8, [sp, #40]
  430c20:	ldr	w9, [sp, #8]
  430c24:	cmp	w8, w9
  430c28:	b.ne	430ca4 <feof@plt+0x2dfa4>  // b.any
  430c2c:	ldr	w23, [sp, #44]
  430c30:	ldr	w8, [sp, #12]
  430c34:	cmp	w23, w8
  430c38:	b.le	430d0c <feof@plt+0x2e00c>
  430c3c:	ldr	w8, [x19, #120]
  430c40:	mov	w9, #0x1                   	// #1
  430c44:	strb	w9, [x19, #160]
  430c48:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430c4c:	mov	w21, wzr
  430c50:	b	430c88 <feof@plt+0x2df88>
  430c54:	ldr	x9, [x19, #152]
  430c58:	sub	w10, w21, #0x2
  430c5c:	add	x9, x9, w10, sxtw #3
  430c60:	ldr	x20, [x9]
  430c64:	cbz	x20, 430c7c <feof@plt+0x2df7c>
  430c68:	ldr	x0, [x20, #8]
  430c6c:	bl	402770 <free@plt>
  430c70:	mov	x0, x20
  430c74:	bl	402940 <_ZdlPv@plt>
  430c78:	ldr	w8, [x19, #120]
  430c7c:	add	w21, w21, #0x1
  430c80:	cmp	w21, w8
  430c84:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430c88:	cmp	w21, #0x1
  430c8c:	b.gt	430c54 <feof@plt+0x2df54>
  430c90:	add	x9, x19, w21, sxtw #3
  430c94:	add	x9, x9, #0x80
  430c98:	ldr	x20, [x9]
  430c9c:	cbnz	x20, 430c68 <feof@plt+0x2df68>
  430ca0:	b	430c7c <feof@plt+0x2df7c>
  430ca4:	ldr	w8, [x19, #120]
  430ca8:	mov	w9, #0x1                   	// #1
  430cac:	strb	w9, [x19, #160]
  430cb0:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430cb4:	mov	w21, wzr
  430cb8:	b	430cf0 <feof@plt+0x2dff0>
  430cbc:	ldr	x9, [x19, #152]
  430cc0:	sub	w10, w21, #0x2
  430cc4:	add	x9, x9, w10, sxtw #3
  430cc8:	ldr	x20, [x9]
  430ccc:	cbz	x20, 430ce4 <feof@plt+0x2dfe4>
  430cd0:	ldr	x0, [x20, #8]
  430cd4:	bl	402770 <free@plt>
  430cd8:	mov	x0, x20
  430cdc:	bl	402940 <_ZdlPv@plt>
  430ce0:	ldr	w8, [x19, #120]
  430ce4:	add	w21, w21, #0x1
  430ce8:	cmp	w21, w8
  430cec:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430cf0:	cmp	w21, #0x1
  430cf4:	b.gt	430cbc <feof@plt+0x2dfbc>
  430cf8:	add	x9, x19, w21, sxtw #3
  430cfc:	add	x9, x9, #0x80
  430d00:	ldr	x20, [x9]
  430d04:	cbnz	x20, 430cd0 <feof@plt+0x2dfd0>
  430d08:	b	430ce4 <feof@plt+0x2dfe4>
  430d0c:	mov	w1, #0xa                   	// #10
  430d10:	mov	x0, x20
  430d14:	bl	4027b0 <strchr@plt>
  430d18:	cbz	x0, 430d98 <feof@plt+0x2e098>
  430d1c:	cmp	w22, w21
  430d20:	b.ne	430db8 <feof@plt+0x2e0b8>  // b.any
  430d24:	cmp	w23, #0x1
  430d28:	b.ne	430e1c <feof@plt+0x2e11c>  // b.any
  430d2c:	ldrb	w8, [x0, #1]
  430d30:	cbz	w8, 430d98 <feof@plt+0x2e098>
  430d34:	ldr	w8, [x19, #120]
  430d38:	mov	w9, #0x1                   	// #1
  430d3c:	strb	w9, [x19, #160]
  430d40:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430d44:	mov	w21, wzr
  430d48:	b	430d58 <feof@plt+0x2e058>
  430d4c:	add	w21, w21, #0x1
  430d50:	cmp	w21, w8
  430d54:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430d58:	cmp	w21, #0x1
  430d5c:	b.gt	430d6c <feof@plt+0x2e06c>
  430d60:	add	x9, x19, w21, sxtw #3
  430d64:	add	x9, x9, #0x80
  430d68:	b	430d78 <feof@plt+0x2e078>
  430d6c:	ldr	x9, [x19, #152]
  430d70:	sub	w10, w21, #0x2
  430d74:	add	x9, x9, w10, sxtw #3
  430d78:	ldr	x20, [x9]
  430d7c:	cbz	x20, 430d4c <feof@plt+0x2e04c>
  430d80:	ldr	x0, [x20, #8]
  430d84:	bl	402770 <free@plt>
  430d88:	mov	x0, x20
  430d8c:	bl	402940 <_ZdlPv@plt>
  430d90:	ldr	w8, [x19, #120]
  430d94:	b	430d4c <feof@plt+0x2e04c>
  430d98:	ldr	w8, [x19, #120]
  430d9c:	cbz	w8, 430f28 <feof@plt+0x2e228>
  430da0:	sub	w9, w8, #0x1
  430da4:	cmp	w9, #0x1
  430da8:	b.gt	430e9c <feof@plt+0x2e19c>
  430dac:	add	x8, x19, w9, sxtw #3
  430db0:	add	x8, x8, #0x80
  430db4:	b	430ea8 <feof@plt+0x2e1a8>
  430db8:	ldr	w8, [x19, #120]
  430dbc:	mov	w9, #0x1                   	// #1
  430dc0:	strb	w9, [x19, #160]
  430dc4:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430dc8:	mov	w21, wzr
  430dcc:	b	430ddc <feof@plt+0x2e0dc>
  430dd0:	add	w21, w21, #0x1
  430dd4:	cmp	w21, w8
  430dd8:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430ddc:	cmp	w21, #0x1
  430de0:	b.gt	430df0 <feof@plt+0x2e0f0>
  430de4:	add	x9, x19, w21, sxtw #3
  430de8:	add	x9, x9, #0x80
  430dec:	b	430dfc <feof@plt+0x2e0fc>
  430df0:	ldr	x9, [x19, #152]
  430df4:	sub	w10, w21, #0x2
  430df8:	add	x9, x9, w10, sxtw #3
  430dfc:	ldr	x20, [x9]
  430e00:	cbz	x20, 430dd0 <feof@plt+0x2e0d0>
  430e04:	ldr	x0, [x20, #8]
  430e08:	bl	402770 <free@plt>
  430e0c:	mov	x0, x20
  430e10:	bl	402940 <_ZdlPv@plt>
  430e14:	ldr	w8, [x19, #120]
  430e18:	b	430dd0 <feof@plt+0x2e0d0>
  430e1c:	ldr	w8, [x19, #120]
  430e20:	mov	w9, #0x1                   	// #1
  430e24:	strb	w9, [x19, #160]
  430e28:	cbz	w8, 430e80 <feof@plt+0x2e180>
  430e2c:	mov	w21, wzr
  430e30:	b	430e40 <feof@plt+0x2e140>
  430e34:	add	w21, w21, #0x1
  430e38:	cmp	w21, w8
  430e3c:	b.cs	430e80 <feof@plt+0x2e180>  // b.hs, b.nlast
  430e40:	cmp	w21, #0x1
  430e44:	b.gt	430e54 <feof@plt+0x2e154>
  430e48:	add	x9, x19, w21, sxtw #3
  430e4c:	add	x9, x9, #0x80
  430e50:	b	430e60 <feof@plt+0x2e160>
  430e54:	ldr	x9, [x19, #152]
  430e58:	sub	w10, w21, #0x2
  430e5c:	add	x9, x9, w10, sxtw #3
  430e60:	ldr	x20, [x9]
  430e64:	cbz	x20, 430e34 <feof@plt+0x2e134>
  430e68:	ldr	x0, [x20, #8]
  430e6c:	bl	402770 <free@plt>
  430e70:	mov	x0, x20
  430e74:	bl	402940 <_ZdlPv@plt>
  430e78:	ldr	w8, [x19, #120]
  430e7c:	b	430e34 <feof@plt+0x2e134>
  430e80:	str	wzr, [x19, #120]
  430e84:	ldp	x20, x19, [sp, #112]
  430e88:	ldp	x22, x21, [sp, #96]
  430e8c:	ldp	x24, x23, [sp, #80]
  430e90:	ldp	x29, x30, [sp, #64]
  430e94:	add	sp, sp, #0x80
  430e98:	ret
  430e9c:	ldr	x9, [x19, #152]
  430ea0:	sub	w8, w8, #0x3
  430ea4:	add	x8, x9, w8, sxtw #3
  430ea8:	ldr	x23, [x8]
  430eac:	cbz	x23, 430f28 <feof@plt+0x2e228>
  430eb0:	ldr	x24, [x23, #16]
  430eb4:	cbz	x24, 430ecc <feof@plt+0x2e1cc>
  430eb8:	ldr	x8, [x23, #8]
  430ebc:	add	x8, x24, x8
  430ec0:	ldurb	w8, [x8, #-1]
  430ec4:	cmp	w8, #0xa
  430ec8:	b.eq	430f28 <feof@plt+0x2e228>  // b.none
  430ecc:	ldr	w8, [x23, #4]
  430ed0:	cmp	w8, w22
  430ed4:	b.ne	430f28 <feof@plt+0x2e228>  // b.any
  430ed8:	mov	x0, x20
  430edc:	str	w21, [x23, #4]
  430ee0:	bl	4026d0 <strlen@plt>
  430ee4:	ldr	x8, [x23, #8]
  430ee8:	add	x9, x24, x0
  430eec:	mov	x19, x0
  430ef0:	add	x1, x9, #0x1
  430ef4:	mov	x0, x8
  430ef8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  430efc:	ldr	x8, [x23, #16]
  430f00:	str	x0, [x23, #8]
  430f04:	mov	x1, x20
  430f08:	mov	x2, x19
  430f0c:	add	x0, x0, x8
  430f10:	bl	402640 <memcpy@plt>
  430f14:	ldp	x9, x8, [x23, #8]
  430f18:	add	x8, x8, x19
  430f1c:	str	x8, [x23, #16]
  430f20:	strb	wzr, [x9, x8]
  430f24:	b	430e84 <feof@plt+0x2e184>
  430f28:	mov	w0, #0x18                  	// #24
  430f2c:	bl	402970 <_Znwm@plt>
  430f30:	mov	x23, x0
  430f34:	stp	w22, w21, [x0]
  430f38:	mov	x0, x20
  430f3c:	bl	45547c <_obstack_memory_used@@Base+0x254>
  430f40:	str	x0, [x23, #8]
  430f44:	mov	x0, x20
  430f48:	bl	4026d0 <strlen@plt>
  430f4c:	str	x0, [x23, #16]
  430f50:	ldrsw	x8, [x19, #120]
  430f54:	add	w9, w8, #0x1
  430f58:	cmp	w8, #0x1
  430f5c:	str	w9, [x19, #120]
  430f60:	b.gt	430f70 <feof@plt+0x2e270>
  430f64:	add	x8, x19, x8, lsl #3
  430f68:	str	x23, [x8, #128]
  430f6c:	b	430e84 <feof@plt+0x2e184>
  430f70:	ldr	x0, [x19, #152]
  430f74:	sub	w20, w8, #0x2
  430f78:	cbz	x0, 430f9c <feof@plt+0x2e29c>
  430f7c:	ldrsw	x8, [x19, #144]
  430f80:	cmp	w20, w8
  430f84:	b.lt	430fb0 <feof@plt+0x2e2b0>  // b.tstop
  430f88:	lsl	w9, w8, #1
  430f8c:	lsl	x1, x8, #4
  430f90:	str	w9, [x19, #144]
  430f94:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  430f98:	b	430fac <feof@plt+0x2e2ac>
  430f9c:	mov	w8, #0x10                  	// #16
  430fa0:	mov	w0, #0x80                  	// #128
  430fa4:	str	w8, [x19, #144]
  430fa8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  430fac:	str	x0, [x19, #152]
  430fb0:	str	x23, [x0, w20, uxtw #3]
  430fb4:	b	430e84 <feof@plt+0x2e184>
  430fb8:	ldr	w8, [x0, #16]
  430fbc:	mov	x2, x1
  430fc0:	mov	w1, w8
  430fc4:	b	430fc8 <feof@plt+0x2e2c8>
  430fc8:	stp	x29, x30, [sp, #-48]!
  430fcc:	stp	x22, x21, [sp, #16]
  430fd0:	stp	x20, x19, [sp, #32]
  430fd4:	mov	x19, x0
  430fd8:	ldr	x0, [x0]
  430fdc:	mov	x20, x2
  430fe0:	mov	w21, w1
  430fe4:	mov	x29, sp
  430fe8:	tbnz	w1, #31, 431010 <feof@plt+0x2e310>
  430fec:	cmp	w21, #0x2
  430ff0:	b.cc	43106c <feof@plt+0x2e36c>  // b.lo, b.ul, b.last
  430ff4:	ldr	w8, [x0, #36]
  430ff8:	cbz	w8, 431028 <feof@plt+0x2e328>
  430ffc:	ldr	x9, [x0, #24]
  431000:	sub	w8, w8, #0x1
  431004:	sbfiz	x8, x8, #5, #32
  431008:	ldr	w8, [x9, x8]
  43100c:	b	43102c <feof@plt+0x2e32c>
  431010:	ldr	x8, [x0, #104]
  431014:	and	w9, w21, #0x7fffffff
  431018:	mov	w10, #0x18                  	// #24
  43101c:	umaddl	x8, w9, w10, x8
  431020:	ldr	w21, [x8, #8]
  431024:	b	43106c <feof@plt+0x2e36c>
  431028:	mov	w8, #0x80000000            	// #-2147483648
  43102c:	mov	w9, #0x50000000            	// #1342177280
  431030:	cmp	w21, w9
  431034:	b.hi	43106c <feof@plt+0x2e36c>  // b.pmore
  431038:	cmp	w8, w21
  43103c:	b.ls	43106c <feof@plt+0x2e36c>  // b.plast
  431040:	mov	w1, w21
  431044:	bl	42e10c <feof@plt+0x2b40c>
  431048:	ldrh	w8, [x0, #6]
  43104c:	mov	w9, #0xffffffff            	// #-1
  431050:	ldr	x0, [x19]
  431054:	lsr	x8, x8, #8
  431058:	lsl	w9, w9, w8
  43105c:	bic	w9, w21, w9
  431060:	sub	w10, w21, w9
  431064:	lsl	w8, w9, w8
  431068:	add	w21, w10, w8
  43106c:	mov	w2, #0x1                   	// #1
  431070:	mov	w1, w21
  431074:	mov	w22, #0x1                   	// #1
  431078:	bl	42ef20 <feof@plt+0x2c220>
  43107c:	cmp	w0, w21
  431080:	b.ne	4310ec <feof@plt+0x2e3ec>  // b.any
  431084:	ldr	w8, [x19, #120]
  431088:	strb	w22, [x19, #160]
  43108c:	cbz	w8, 43110c <feof@plt+0x2e40c>
  431090:	mov	w21, wzr
  431094:	b	4310a4 <feof@plt+0x2e3a4>
  431098:	add	w21, w21, #0x1
  43109c:	cmp	w21, w8
  4310a0:	b.cs	43110c <feof@plt+0x2e40c>  // b.hs, b.nlast
  4310a4:	cmp	w21, #0x1
  4310a8:	b.gt	4310c0 <feof@plt+0x2e3c0>
  4310ac:	add	x9, x19, w21, sxtw #3
  4310b0:	add	x9, x9, #0x80
  4310b4:	ldr	x20, [x9]
  4310b8:	cbnz	x20, 4310d4 <feof@plt+0x2e3d4>
  4310bc:	b	431098 <feof@plt+0x2e398>
  4310c0:	ldr	x9, [x19, #152]
  4310c4:	sub	w10, w21, #0x2
  4310c8:	add	x9, x9, w10, sxtw #3
  4310cc:	ldr	x20, [x9]
  4310d0:	cbz	x20, 431098 <feof@plt+0x2e398>
  4310d4:	ldr	x0, [x20, #8]
  4310d8:	bl	402770 <free@plt>
  4310dc:	mov	x0, x20
  4310e0:	bl	402940 <_ZdlPv@plt>
  4310e4:	ldr	w8, [x19, #120]
  4310e8:	b	431098 <feof@plt+0x2e398>
  4310ec:	mov	w1, w0
  4310f0:	mov	x0, x19
  4310f4:	mov	x3, x20
  4310f8:	ldp	x20, x19, [sp, #32]
  4310fc:	ldp	x22, x21, [sp, #16]
  431100:	mov	w2, w1
  431104:	ldp	x29, x30, [sp], #48
  431108:	b	430a6c <feof@plt+0x2dd6c>
  43110c:	str	wzr, [x19, #120]
  431110:	ldp	x20, x19, [sp, #32]
  431114:	ldp	x22, x21, [sp, #16]
  431118:	ldp	x29, x30, [sp], #48
  43111c:	ret
  431120:	stp	x29, x30, [sp, #-48]!
  431124:	stp	x20, x19, [sp, #32]
  431128:	ldr	w8, [x0, #120]
  43112c:	mov	x19, x0
  431130:	mov	w9, #0x1                   	// #1
  431134:	str	x21, [sp, #16]
  431138:	mov	x29, sp
  43113c:	strb	w9, [x0, #160]
  431140:	cbz	w8, 4311a0 <feof@plt+0x2e4a0>
  431144:	mov	w21, wzr
  431148:	b	431158 <feof@plt+0x2e458>
  43114c:	add	w21, w21, #0x1
  431150:	cmp	w21, w8
  431154:	b.cs	4311a0 <feof@plt+0x2e4a0>  // b.hs, b.nlast
  431158:	cmp	w21, #0x1
  43115c:	b.gt	431174 <feof@plt+0x2e474>
  431160:	add	x9, x19, w21, sxtw #3
  431164:	add	x9, x9, #0x80
  431168:	ldr	x20, [x9]
  43116c:	cbnz	x20, 431188 <feof@plt+0x2e488>
  431170:	b	43114c <feof@plt+0x2e44c>
  431174:	ldr	x9, [x19, #152]
  431178:	sub	w10, w21, #0x2
  43117c:	add	x9, x9, w10, sxtw #3
  431180:	ldr	x20, [x9]
  431184:	cbz	x20, 43114c <feof@plt+0x2e44c>
  431188:	ldr	x0, [x20, #8]
  43118c:	bl	402770 <free@plt>
  431190:	mov	x0, x20
  431194:	bl	402940 <_ZdlPv@plt>
  431198:	ldr	w8, [x19, #120]
  43119c:	b	43114c <feof@plt+0x2e44c>
  4311a0:	str	wzr, [x19, #120]
  4311a4:	ldp	x20, x19, [sp, #32]
  4311a8:	ldr	x21, [sp, #16]
  4311ac:	ldp	x29, x30, [sp], #48
  4311b0:	ret
  4311b4:	stp	x29, x30, [sp, #-32]!
  4311b8:	stp	x20, x19, [sp, #16]
  4311bc:	mov	x19, x0
  4311c0:	ldr	w20, [x0, #16]
  4311c4:	ldr	x0, [x0]
  4311c8:	mov	x29, sp
  4311cc:	tbnz	w20, #31, 4311f4 <feof@plt+0x2e4f4>
  4311d0:	cmp	w20, #0x2
  4311d4:	b.cc	431250 <feof@plt+0x2e550>  // b.lo, b.ul, b.last
  4311d8:	ldr	w8, [x0, #36]
  4311dc:	cbz	w8, 43120c <feof@plt+0x2e50c>
  4311e0:	ldr	x9, [x0, #24]
  4311e4:	sub	w8, w8, #0x1
  4311e8:	sbfiz	x8, x8, #5, #32
  4311ec:	ldr	w8, [x9, x8]
  4311f0:	b	431210 <feof@plt+0x2e510>
  4311f4:	ldr	x8, [x0, #104]
  4311f8:	and	x9, x20, #0x7fffffff
  4311fc:	mov	w10, #0x18                  	// #24
  431200:	madd	x8, x9, x10, x8
  431204:	ldp	w20, w8, [x8, #4]
  431208:	b	431254 <feof@plt+0x2e554>
  43120c:	mov	w8, #0x80000000            	// #-2147483648
  431210:	mov	w9, #0x50000000            	// #1342177280
  431214:	cmp	w20, w9
  431218:	b.hi	431250 <feof@plt+0x2e550>  // b.pmore
  43121c:	cmp	w8, w20
  431220:	b.ls	431250 <feof@plt+0x2e550>  // b.plast
  431224:	mov	w1, w20
  431228:	bl	42e10c <feof@plt+0x2b40c>
  43122c:	ldrh	w8, [x0, #6]
  431230:	mov	w9, #0xffffffff            	// #-1
  431234:	lsr	x8, x8, #8
  431238:	lsl	w9, w9, w8
  43123c:	bic	w9, w20, w9
  431240:	sub	w20, w20, w9
  431244:	lsl	w8, w9, w8
  431248:	add	w8, w20, w8
  43124c:	b	431254 <feof@plt+0x2e554>
  431250:	mov	w8, w20
  431254:	mov	w1, w20
  431258:	mov	x0, x19
  43125c:	ldp	x20, x19, [sp, #16]
  431260:	adrp	x2, 455000 <_obstack_begin_1@@Base+0xa4>
  431264:	bfi	x1, x8, #32, #32
  431268:	add	x2, x2, #0xce0
  43126c:	ldp	x29, x30, [sp], #32
  431270:	b	431340 <feof@plt+0x2e640>
  431274:	stp	x29, x30, [sp, #-32]!
  431278:	stp	x20, x19, [sp, #16]
  43127c:	mov	x19, x0
  431280:	ldr	x0, [x0]
  431284:	mov	w20, w1
  431288:	mov	x29, sp
  43128c:	tbnz	w1, #31, 4312b4 <feof@plt+0x2e5b4>
  431290:	cmp	w20, #0x2
  431294:	b.cc	431310 <feof@plt+0x2e610>  // b.lo, b.ul, b.last
  431298:	ldr	w8, [x0, #36]
  43129c:	cbz	w8, 4312cc <feof@plt+0x2e5cc>
  4312a0:	ldr	x9, [x0, #24]
  4312a4:	sub	w8, w8, #0x1
  4312a8:	sbfiz	x8, x8, #5, #32
  4312ac:	ldr	w8, [x9, x8]
  4312b0:	b	4312d0 <feof@plt+0x2e5d0>
  4312b4:	ldr	x8, [x0, #104]
  4312b8:	and	w9, w20, #0x7fffffff
  4312bc:	mov	w10, #0x18                  	// #24
  4312c0:	umaddl	x8, w9, w10, x8
  4312c4:	ldp	w20, w8, [x8, #4]
  4312c8:	b	431314 <feof@plt+0x2e614>
  4312cc:	mov	w8, #0x80000000            	// #-2147483648
  4312d0:	mov	w9, #0x50000000            	// #1342177280
  4312d4:	cmp	w20, w9
  4312d8:	b.hi	431310 <feof@plt+0x2e610>  // b.pmore
  4312dc:	cmp	w8, w20
  4312e0:	b.ls	431310 <feof@plt+0x2e610>  // b.plast
  4312e4:	mov	w1, w20
  4312e8:	bl	42e10c <feof@plt+0x2b40c>
  4312ec:	ldrh	w8, [x0, #6]
  4312f0:	mov	w9, #0xffffffff            	// #-1
  4312f4:	lsr	x8, x8, #8
  4312f8:	lsl	w9, w9, w8
  4312fc:	bic	w9, w20, w9
  431300:	sub	w20, w20, w9
  431304:	lsl	w8, w9, w8
  431308:	add	w8, w20, w8
  43130c:	b	431314 <feof@plt+0x2e614>
  431310:	mov	w8, w20
  431314:	mov	w1, w20
  431318:	mov	x0, x19
  43131c:	ldp	x20, x19, [sp, #16]
  431320:	adrp	x2, 455000 <_obstack_begin_1@@Base+0xa4>
  431324:	bfi	x1, x8, #32, #32
  431328:	add	x2, x2, #0xce0
  43132c:	ldp	x29, x30, [sp], #32
  431330:	b	431340 <feof@plt+0x2e640>
  431334:	adrp	x2, 455000 <_obstack_begin_1@@Base+0xa4>
  431338:	add	x2, x2, #0xce0
  43133c:	b	431340 <feof@plt+0x2e640>
  431340:	stp	x29, x30, [sp, #-64]!
  431344:	stp	x22, x21, [sp, #32]
  431348:	stp	x20, x19, [sp, #48]
  43134c:	mov	x19, x0
  431350:	ldr	x0, [x0]
  431354:	str	x23, [sp, #16]
  431358:	mov	x23, x1
  43135c:	mov	x20, x2
  431360:	mov	w21, w23
  431364:	mov	x29, sp
  431368:	tbz	w23, #31, 431380 <feof@plt+0x2e680>
  43136c:	ldr	x8, [x0, #104]
  431370:	and	x9, x23, #0x7fffffff
  431374:	mov	w10, #0x18                  	// #24
  431378:	mul	x9, x9, x10
  43137c:	ldr	w21, [x8, x9]
  431380:	ldr	w8, [x0, #36]
  431384:	lsr	x22, x23, #32
  431388:	cbz	w8, 4313a8 <feof@plt+0x2e6a8>
  43138c:	ldr	x9, [x0, #24]
  431390:	sub	w8, w8, #0x1
  431394:	sbfiz	x8, x8, #5, #32
  431398:	ldr	w8, [x9, x8]
  43139c:	cmp	w21, #0x2
  4313a0:	b.cs	4313b4 <feof@plt+0x2e6b4>  // b.hs, b.nlast
  4313a4:	b	4313d8 <feof@plt+0x2e6d8>
  4313a8:	mov	w8, #0x80000000            	// #-2147483648
  4313ac:	cmp	w21, #0x2
  4313b0:	b.cc	4313d8 <feof@plt+0x2e6d8>  // b.lo, b.ul, b.last
  4313b4:	cmp	w21, w8
  4313b8:	b.cs	4313d8 <feof@plt+0x2e6d8>  // b.hs, b.nlast
  4313bc:	mov	w1, w21
  4313c0:	bl	42e10c <feof@plt+0x2b40c>
  4313c4:	ldrb	w8, [x0, #7]
  4313c8:	ldr	x0, [x19]
  4313cc:	mov	w9, #0xffffffff            	// #-1
  4313d0:	lsl	w8, w9, w8
  4313d4:	and	w21, w8, w21
  4313d8:	tbnz	w22, #31, 431400 <feof@plt+0x2e700>
  4313dc:	ldr	w8, [x0, #36]
  4313e0:	cbz	w8, 43141c <feof@plt+0x2e71c>
  4313e4:	ldr	x9, [x0, #24]
  4313e8:	sub	w8, w8, #0x1
  4313ec:	sbfiz	x8, x8, #5, #32
  4313f0:	ldr	w8, [x9, x8]
  4313f4:	cmp	w22, #0x2
  4313f8:	b.cs	431428 <feof@plt+0x2e728>  // b.hs, b.nlast
  4313fc:	b	43144c <feof@plt+0x2e74c>
  431400:	ldr	x8, [x0, #104]
  431404:	ubfx	x9, x23, #32, #31
  431408:	mov	w10, #0x18                  	// #24
  43140c:	mul	x9, x9, x10
  431410:	ldr	w22, [x8, x9]
  431414:	ldr	w8, [x0, #36]
  431418:	cbnz	w8, 4313e4 <feof@plt+0x2e6e4>
  43141c:	mov	w8, #0x80000000            	// #-2147483648
  431420:	cmp	w22, #0x2
  431424:	b.cc	43144c <feof@plt+0x2e74c>  // b.lo, b.ul, b.last
  431428:	cmp	w22, w8
  43142c:	b.cs	43144c <feof@plt+0x2e74c>  // b.hs, b.nlast
  431430:	mov	w1, w22
  431434:	bl	42e10c <feof@plt+0x2b40c>
  431438:	ldrb	w8, [x0, #7]
  43143c:	ldr	x0, [x19]
  431440:	mov	w9, #0xffffffff            	// #-1
  431444:	lsl	w8, w9, w8
  431448:	and	w22, w8, w22
  43144c:	mov	w2, #0x1                   	// #1
  431450:	mov	w1, w22
  431454:	mov	w23, #0x1                   	// #1
  431458:	bl	42ef20 <feof@plt+0x2c220>
  43145c:	cmp	w0, w22
  431460:	b.ne	4314cc <feof@plt+0x2e7cc>  // b.any
  431464:	ldr	w8, [x19, #120]
  431468:	strb	w23, [x19, #160]
  43146c:	cbz	w8, 4314f0 <feof@plt+0x2e7f0>
  431470:	mov	w21, wzr
  431474:	b	431484 <feof@plt+0x2e784>
  431478:	add	w21, w21, #0x1
  43147c:	cmp	w21, w8
  431480:	b.cs	4314f0 <feof@plt+0x2e7f0>  // b.hs, b.nlast
  431484:	cmp	w21, #0x1
  431488:	b.gt	4314a0 <feof@plt+0x2e7a0>
  43148c:	add	x9, x19, w21, sxtw #3
  431490:	add	x9, x9, #0x80
  431494:	ldr	x20, [x9]
  431498:	cbnz	x20, 4314b4 <feof@plt+0x2e7b4>
  43149c:	b	431478 <feof@plt+0x2e778>
  4314a0:	ldr	x9, [x19, #152]
  4314a4:	sub	w10, w21, #0x2
  4314a8:	add	x9, x9, w10, sxtw #3
  4314ac:	ldr	x20, [x9]
  4314b0:	cbz	x20, 431478 <feof@plt+0x2e778>
  4314b4:	ldr	x0, [x20, #8]
  4314b8:	bl	402770 <free@plt>
  4314bc:	mov	x0, x20
  4314c0:	bl	402940 <_ZdlPv@plt>
  4314c4:	ldr	w8, [x19, #120]
  4314c8:	b	431478 <feof@plt+0x2e778>
  4314cc:	mov	w2, w0
  4314d0:	mov	x0, x19
  4314d4:	mov	w1, w21
  4314d8:	mov	x3, x20
  4314dc:	ldp	x20, x19, [sp, #48]
  4314e0:	ldp	x22, x21, [sp, #32]
  4314e4:	ldr	x23, [sp, #16]
  4314e8:	ldp	x29, x30, [sp], #64
  4314ec:	b	430a6c <feof@plt+0x2dd6c>
  4314f0:	str	wzr, [x19, #120]
  4314f4:	ldp	x20, x19, [sp, #48]
  4314f8:	ldp	x22, x21, [sp, #32]
  4314fc:	ldr	x23, [sp, #16]
  431500:	ldp	x29, x30, [sp], #64
  431504:	ret
  431508:	stp	x29, x30, [sp, #-48]!
  43150c:	stp	x20, x19, [sp, #32]
  431510:	str	x21, [sp, #16]
  431514:	mov	x19, x0
  431518:	ldr	w21, [x0, #16]
  43151c:	ldr	x0, [x0]
  431520:	mov	x20, x1
  431524:	mov	x29, sp
  431528:	tbnz	w21, #31, 431550 <feof@plt+0x2e850>
  43152c:	cmp	w21, #0x2
  431530:	b.cc	4315ac <feof@plt+0x2e8ac>  // b.lo, b.ul, b.last
  431534:	ldr	w8, [x0, #36]
  431538:	cbz	w8, 431568 <feof@plt+0x2e868>
  43153c:	ldr	x9, [x0, #24]
  431540:	sub	w8, w8, #0x1
  431544:	sbfiz	x8, x8, #5, #32
  431548:	ldr	w8, [x9, x8]
  43154c:	b	43156c <feof@plt+0x2e86c>
  431550:	ldr	x8, [x0, #104]
  431554:	and	x9, x21, #0x7fffffff
  431558:	mov	w10, #0x18                  	// #24
  43155c:	madd	x8, x9, x10, x8
  431560:	ldp	w21, w8, [x8, #4]
  431564:	b	4315b0 <feof@plt+0x2e8b0>
  431568:	mov	w8, #0x80000000            	// #-2147483648
  43156c:	mov	w9, #0x50000000            	// #1342177280
  431570:	cmp	w21, w9
  431574:	b.hi	4315ac <feof@plt+0x2e8ac>  // b.pmore
  431578:	cmp	w8, w21
  43157c:	b.ls	4315ac <feof@plt+0x2e8ac>  // b.plast
  431580:	mov	w1, w21
  431584:	bl	42e10c <feof@plt+0x2b40c>
  431588:	ldrh	w8, [x0, #6]
  43158c:	mov	w9, #0xffffffff            	// #-1
  431590:	lsr	x8, x8, #8
  431594:	lsl	w9, w9, w8
  431598:	bic	w9, w21, w9
  43159c:	sub	w21, w21, w9
  4315a0:	lsl	w8, w9, w8
  4315a4:	add	w8, w21, w8
  4315a8:	b	4315b0 <feof@plt+0x2e8b0>
  4315ac:	mov	w8, w21
  4315b0:	mov	w1, w21
  4315b4:	mov	x0, x19
  4315b8:	mov	x2, x20
  4315bc:	ldp	x20, x19, [sp, #32]
  4315c0:	ldr	x21, [sp, #16]
  4315c4:	bfi	x1, x8, #32, #32
  4315c8:	ldp	x29, x30, [sp], #48
  4315cc:	b	431340 <feof@plt+0x2e640>
  4315d0:	stp	x29, x30, [sp, #-48]!
  4315d4:	stp	x20, x19, [sp, #32]
  4315d8:	mov	x20, x0
  4315dc:	ldr	x0, [x0]
  4315e0:	str	x21, [sp, #16]
  4315e4:	mov	x19, x2
  4315e8:	mov	w21, w1
  4315ec:	mov	x29, sp
  4315f0:	tbnz	w1, #31, 431618 <feof@plt+0x2e918>
  4315f4:	cmp	w21, #0x2
  4315f8:	b.cc	431674 <feof@plt+0x2e974>  // b.lo, b.ul, b.last
  4315fc:	ldr	w8, [x0, #36]
  431600:	cbz	w8, 431630 <feof@plt+0x2e930>
  431604:	ldr	x9, [x0, #24]
  431608:	sub	w8, w8, #0x1
  43160c:	sbfiz	x8, x8, #5, #32
  431610:	ldr	w8, [x9, x8]
  431614:	b	431634 <feof@plt+0x2e934>
  431618:	ldr	x8, [x0, #104]
  43161c:	and	w9, w21, #0x7fffffff
  431620:	mov	w10, #0x18                  	// #24
  431624:	umaddl	x8, w9, w10, x8
  431628:	ldp	w21, w8, [x8, #4]
  43162c:	b	431678 <feof@plt+0x2e978>
  431630:	mov	w8, #0x80000000            	// #-2147483648
  431634:	mov	w9, #0x50000000            	// #1342177280
  431638:	cmp	w21, w9
  43163c:	b.hi	431674 <feof@plt+0x2e974>  // b.pmore
  431640:	cmp	w8, w21
  431644:	b.ls	431674 <feof@plt+0x2e974>  // b.plast
  431648:	mov	w1, w21
  43164c:	bl	42e10c <feof@plt+0x2b40c>
  431650:	ldrh	w8, [x0, #6]
  431654:	mov	w9, #0xffffffff            	// #-1
  431658:	lsr	x8, x8, #8
  43165c:	lsl	w9, w9, w8
  431660:	bic	w9, w21, w9
  431664:	sub	w21, w21, w9
  431668:	lsl	w8, w9, w8
  43166c:	add	w8, w21, w8
  431670:	b	431678 <feof@plt+0x2e978>
  431674:	mov	w8, w21
  431678:	mov	w1, w21
  43167c:	mov	x0, x20
  431680:	mov	x2, x19
  431684:	ldp	x20, x19, [sp, #32]
  431688:	ldr	x21, [sp, #16]
  43168c:	bfi	x1, x8, #32, #32
  431690:	ldp	x29, x30, [sp], #48
  431694:	b	431340 <feof@plt+0x2e640>
  431698:	ldr	w8, [x0, #120]
  43169c:	cbz	w8, 4316b8 <feof@plt+0x2e9b8>
  4316a0:	sub	w9, w8, #0x1
  4316a4:	cmp	w9, #0x1
  4316a8:	b.gt	4316c0 <feof@plt+0x2e9c0>
  4316ac:	add	x8, x0, w9, sxtw #3
  4316b0:	ldr	x0, [x8, #128]!
  4316b4:	ret
  4316b8:	mov	x0, xzr
  4316bc:	ret
  4316c0:	ldr	x9, [x0, #152]
  4316c4:	sub	w8, w8, #0x3
  4316c8:	add	x8, x9, w8, sxtw #3
  4316cc:	ldr	x0, [x8]
  4316d0:	ret
  4316d4:	stp	x29, x30, [sp, #-48]!
  4316d8:	stp	x20, x19, [sp, #32]
  4316dc:	ldrb	w8, [x0, #160]
  4316e0:	str	x21, [sp, #16]
  4316e4:	mov	x29, sp
  4316e8:	cbnz	w8, 431778 <feof@plt+0x2ea78>
  4316ec:	mov	w8, #0x1                   	// #1
  4316f0:	movk	w8, #0x6000, lsl #16
  4316f4:	cmp	w1, w8
  4316f8:	b.cs	431704 <feof@plt+0x2ea04>  // b.hs, b.nlast
  4316fc:	mov	w0, wzr
  431700:	b	43177c <feof@plt+0x2ea7c>
  431704:	ldr	w8, [x0, #120]
  431708:	mov	x19, x0
  43170c:	mov	w9, #0x1                   	// #1
  431710:	strb	w9, [x0, #160]
  431714:	cbz	w8, 431774 <feof@plt+0x2ea74>
  431718:	mov	w21, wzr
  43171c:	b	43172c <feof@plt+0x2ea2c>
  431720:	add	w21, w21, #0x1
  431724:	cmp	w21, w8
  431728:	b.cs	431774 <feof@plt+0x2ea74>  // b.hs, b.nlast
  43172c:	cmp	w21, #0x1
  431730:	b.gt	431748 <feof@plt+0x2ea48>
  431734:	add	x9, x19, w21, sxtw #3
  431738:	add	x9, x9, #0x80
  43173c:	ldr	x20, [x9]
  431740:	cbnz	x20, 43175c <feof@plt+0x2ea5c>
  431744:	b	431720 <feof@plt+0x2ea20>
  431748:	ldr	x9, [x19, #152]
  43174c:	sub	w10, w21, #0x2
  431750:	add	x9, x9, w10, sxtw #3
  431754:	ldr	x20, [x9]
  431758:	cbz	x20, 431720 <feof@plt+0x2ea20>
  43175c:	ldr	x0, [x20, #8]
  431760:	bl	402770 <free@plt>
  431764:	mov	x0, x20
  431768:	bl	402940 <_ZdlPv@plt>
  43176c:	ldr	w8, [x19, #120]
  431770:	b	431720 <feof@plt+0x2ea20>
  431774:	str	wzr, [x19, #120]
  431778:	mov	w0, #0x1                   	// #1
  43177c:	ldp	x20, x19, [sp, #32]
  431780:	ldr	x21, [sp, #16]
  431784:	ldp	x29, x30, [sp], #48
  431788:	ret
  43178c:	ldr	x8, [x0, #16]
  431790:	cbz	x8, 4317ac <feof@plt+0x2eaac>
  431794:	ldr	x9, [x0, #8]
  431798:	add	x8, x8, x9
  43179c:	ldurb	w8, [x8, #-1]
  4317a0:	cmp	w8, #0xa
  4317a4:	cset	w0, eq  // eq = none
  4317a8:	ret
  4317ac:	mov	w0, wzr
  4317b0:	ret
  4317b4:	stp	x29, x30, [sp, #-48]!
  4317b8:	stp	x20, x19, [sp, #32]
  4317bc:	ldr	w8, [x0, #4]
  4317c0:	str	x21, [sp, #16]
  4317c4:	mov	x29, sp
  4317c8:	cmp	w8, w1
  4317cc:	b.ne	43182c <feof@plt+0x2eb2c>  // b.any
  4317d0:	mov	x19, x0
  4317d4:	str	w2, [x0, #4]
  4317d8:	mov	x0, x3
  4317dc:	mov	x20, x3
  4317e0:	bl	4026d0 <strlen@plt>
  4317e4:	ldp	x8, x9, [x19, #8]
  4317e8:	mov	x21, x0
  4317ec:	add	x9, x0, x9
  4317f0:	add	x1, x9, #0x1
  4317f4:	mov	x0, x8
  4317f8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4317fc:	ldr	x8, [x19, #16]
  431800:	str	x0, [x19, #8]
  431804:	mov	x1, x20
  431808:	mov	x2, x21
  43180c:	add	x0, x0, x8
  431810:	bl	402640 <memcpy@plt>
  431814:	ldp	x9, x8, [x19, #8]
  431818:	mov	w0, #0x1                   	// #1
  43181c:	add	x8, x8, x21
  431820:	str	x8, [x19, #16]
  431824:	strb	wzr, [x9, x8]
  431828:	b	431830 <feof@plt+0x2eb30>
  43182c:	mov	w0, wzr
  431830:	ldp	x20, x19, [sp, #32]
  431834:	ldr	x21, [sp, #16]
  431838:	ldp	x29, x30, [sp], #48
  43183c:	ret
  431840:	stp	x29, x30, [sp, #-32]!
  431844:	stp	x20, x19, [sp, #16]
  431848:	mov	x20, x0
  43184c:	stp	w1, w2, [x0]
  431850:	mov	x0, x3
  431854:	mov	x29, sp
  431858:	mov	x19, x3
  43185c:	bl	45547c <_obstack_memory_used@@Base+0x254>
  431860:	str	x0, [x20, #8]
  431864:	mov	x0, x19
  431868:	bl	4026d0 <strlen@plt>
  43186c:	str	x0, [x20, #16]
  431870:	ldp	x20, x19, [sp, #16]
  431874:	ldp	x29, x30, [sp], #32
  431878:	ret
  43187c:	sub	sp, sp, #0x70
  431880:	stp	x29, x30, [sp, #64]
  431884:	stp	x20, x19, [sp, #96]
  431888:	str	x21, [sp, #80]
  43188c:	mov	x21, x0
  431890:	ldr	w0, [x0]
  431894:	mov	x20, x1
  431898:	add	x8, sp, #0x20
  43189c:	mov	w1, #0x1                   	// #1
  4318a0:	add	x29, sp, #0x40
  4318a4:	mov	w19, w2
  4318a8:	bl	417354 <feof@plt+0x14654>
  4318ac:	ldr	x8, [sp, #32]
  4318b0:	cmp	x8, x20
  4318b4:	b.ne	4318c4 <feof@plt+0x2ebc4>  // b.any
  4318b8:	ldr	w8, [sp, #40]
  4318bc:	cmp	w8, w19
  4318c0:	b.le	4318cc <feof@plt+0x2ebcc>
  4318c4:	mov	w0, wzr
  4318c8:	b	4318f8 <feof@plt+0x2ebf8>
  4318cc:	ldr	w0, [x21, #4]
  4318d0:	mov	x8, sp
  4318d4:	mov	w1, #0x1                   	// #1
  4318d8:	bl	417354 <feof@plt+0x14654>
  4318dc:	ldr	x8, [sp]
  4318e0:	ldr	w9, [sp, #8]
  4318e4:	cmp	x8, x20
  4318e8:	cset	w8, eq  // eq = none
  4318ec:	cmp	w9, w19
  4318f0:	cset	w9, ge  // ge = tcont
  4318f4:	and	w0, w8, w9
  4318f8:	ldp	x20, x19, [sp, #96]
  4318fc:	ldr	x21, [sp, #80]
  431900:	ldp	x29, x30, [sp, #64]
  431904:	add	sp, sp, #0x70
  431908:	ret
  43190c:	stp	x29, x30, [sp, #-48]!
  431910:	stp	x20, x19, [sp, #32]
  431914:	ldrh	w8, [x1, #18]
  431918:	str	x21, [sp, #16]
  43191c:	mov	x29, sp
  431920:	and	w8, w8, #0x3
  431924:	cmp	w8, #0x2
  431928:	b.ne	431974 <feof@plt+0x2ec74>  // b.any
  43192c:	ldr	x21, [x1, #24]
  431930:	mov	x20, x1
  431934:	ldrb	w8, [x21, #19]
  431938:	tbnz	w8, #5, 431974 <feof@plt+0x2ec74>
  43193c:	mov	x19, x0
  431940:	ldr	x0, [x0, #40]
  431944:	ldr	w1, [x21, #8]
  431948:	bl	42e10c <feof@plt+0x2b40c>
  43194c:	ldr	w8, [x0, #20]
  431950:	cbnz	w8, 431974 <feof@plt+0x2ec74>
  431954:	ldr	w2, [x21, #8]
  431958:	ldr	x5, [x20]
  43195c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  431960:	add	x4, x4, #0x650
  431964:	mov	w1, #0xe                   	// #14
  431968:	mov	x0, x19
  43196c:	mov	w3, wzr
  431970:	bl	4229a0 <feof@plt+0x1fca0>
  431974:	ldp	x20, x19, [sp, #32]
  431978:	ldr	x21, [sp, #16]
  43197c:	mov	w0, #0x1                   	// #1
  431980:	ldp	x29, x30, [sp], #48
  431984:	ret
  431988:	sub	sp, sp, #0x50
  43198c:	stp	x29, x30, [sp, #16]
  431990:	stp	x24, x23, [sp, #32]
  431994:	stp	x22, x21, [sp, #48]
  431998:	stp	x20, x19, [sp, #64]
  43199c:	ldr	w8, [x1, #24]
  4319a0:	mov	x20, x1
  4319a4:	mov	x19, x0
  4319a8:	add	x29, sp, #0x10
  4319ac:	cmp	w8, #0xa
  4319b0:	b.hi	431a50 <feof@plt+0x2ed50>  // b.pmore
  4319b4:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  4319b8:	add	x9, x9, #0x598
  4319bc:	adr	x10, 4319cc <feof@plt+0x2eccc>
  4319c0:	ldrb	w11, [x9, x8]
  4319c4:	add	x10, x10, x11, lsl #2
  4319c8:	br	x10
  4319cc:	ldrb	w8, [x19, #1134]
  4319d0:	cbz	w8, 4319ec <feof@plt+0x2ecec>
  4319d4:	ldr	x3, [x20]
  4319d8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  4319dc:	add	x2, x2, #0x683
  4319e0:	mov	w1, #0x14                  	// #20
  4319e4:	mov	x0, x19
  4319e8:	bl	422514 <feof@plt+0x1f814>
  4319ec:	ldr	x8, [x19, #640]
  4319f0:	cbnz	x8, 431d28 <feof@plt+0x2f028>
  4319f4:	ldr	x0, [x19, #656]
  4319f8:	cmn	x0, #0x2
  4319fc:	b.ne	431a14 <feof@plt+0x2ed14>  // b.any
  431a00:	ldr	x8, [x19, #1056]
  431a04:	cbz	x8, 431c30 <feof@plt+0x2ef30>
  431a08:	mov	x0, x19
  431a0c:	blr	x8
  431a10:	str	x0, [x19, #656]
  431a14:	tbnz	x0, #63, 431c30 <feof@plt+0x2ef30>
  431a18:	add	x0, x19, #0x290
  431a1c:	bl	4026e0 <gmtime@plt>
  431a20:	mov	x21, x0
  431a24:	cbnz	x0, 431c60 <feof@plt+0x2ef60>
  431a28:	b	431cfc <feof@plt+0x2effc>
  431a2c:	ldr	x8, [x19, #40]
  431a30:	ldr	w8, [x8, #48]
  431a34:	sub	w21, w8, #0x1
  431a38:	b	431d4c <feof@plt+0x2f04c>
  431a3c:	ldrb	w9, [x19, #1160]
  431a40:	ldr	x8, [x19, #40]
  431a44:	cbz	w9, 431c04 <feof@plt+0x2ef04>
  431a48:	ldr	w1, [x8, #60]
  431a4c:	b	431c20 <feof@plt+0x2ef20>
  431a50:	ldr	x3, [x20]
  431a54:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431a58:	add	x2, x2, #0x667
  431a5c:	mov	w1, #0x4                   	// #4
  431a60:	mov	x0, x19
  431a64:	bl	4223e4 <feof@plt+0x1f6e4>
  431a68:	b	431d48 <feof@plt+0x2f048>
  431a6c:	ldr	x8, [x19]
  431a70:	cbz	x8, 431d48 <feof@plt+0x2f048>
  431a74:	ldrb	w8, [x8, #106]
  431a78:	cbz	w8, 431d48 <feof@plt+0x2f048>
  431a7c:	mov	w21, wzr
  431a80:	b	431d4c <feof@plt+0x2f04c>
  431a84:	ldrb	w8, [x19, #1134]
  431a88:	cbz	w8, 431aa4 <feof@plt+0x2eda4>
  431a8c:	ldr	x3, [x20]
  431a90:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431a94:	add	x2, x2, #0x683
  431a98:	mov	w1, #0x14                  	// #20
  431a9c:	mov	x0, x19
  431aa0:	bl	422514 <feof@plt+0x1f814>
  431aa4:	mov	x0, x19
  431aa8:	bl	427e08 <feof@plt+0x25108>
  431aac:	ldr	x20, [x0, #88]
  431ab0:	cbnz	x20, 431d6c <feof@plt+0x2f06c>
  431ab4:	mov	x21, x0
  431ab8:	bl	427e10 <feof@plt+0x25110>
  431abc:	cbz	x0, 431ce8 <feof@plt+0x2efe8>
  431ac0:	bl	427d84 <feof@plt+0x25084>
  431ac4:	cbz	x0, 431cc0 <feof@plt+0x2efc0>
  431ac8:	add	x0, x0, #0x58
  431acc:	bl	4028d0 <localtime@plt>
  431ad0:	cbz	x0, 431cc0 <feof@plt+0x2efc0>
  431ad4:	bl	402a40 <asctime@plt>
  431ad8:	mov	x22, x0
  431adc:	bl	4026d0 <strlen@plt>
  431ae0:	mov	x23, x0
  431ae4:	add	x1, x0, #0x2
  431ae8:	mov	x0, x19
  431aec:	bl	42d11c <feof@plt+0x2a41c>
  431af0:	mov	w24, #0x22                  	// #34
  431af4:	mov	x20, x0
  431af8:	strb	w24, [x0], #1
  431afc:	mov	x1, x22
  431b00:	bl	402860 <strcpy@plt>
  431b04:	strb	w24, [x20, x23]
  431b08:	b	431cdc <feof@plt+0x2efdc>
  431b0c:	ldr	x0, [x19, #40]
  431b10:	ldr	w1, [x0, #60]
  431b14:	bl	42f43c <feof@plt+0x2c73c>
  431b18:	mov	x21, x0
  431b1c:	b	431b30 <feof@plt+0x2ee30>
  431b20:	ldr	x0, [x19, #288]
  431b24:	bl	427d7c <feof@plt+0x2507c>
  431b28:	mov	x21, x0
  431b2c:	cbz	x0, 431d88 <feof@plt+0x2f088>
  431b30:	ldr	x8, [x19, #1080]
  431b34:	cbz	x8, 431b44 <feof@plt+0x2ee44>
  431b38:	mov	x0, x21
  431b3c:	blr	x8
  431b40:	mov	x21, x0
  431b44:	mov	x0, x21
  431b48:	bl	4026d0 <strlen@plt>
  431b4c:	mov	x22, x0
  431b50:	lsl	w8, w22, #1
  431b54:	add	w1, w8, #0x3
  431b58:	mov	x0, x19
  431b5c:	bl	42d11c <feof@plt+0x2a41c>
  431b60:	mov	w8, #0x22                  	// #34
  431b64:	mov	x9, x0
  431b68:	mov	x20, x0
  431b6c:	strb	w8, [x9], #1
  431b70:	cbz	w22, 431bb0 <feof@plt+0x2eeb0>
  431b74:	mov	w10, #0x5c                  	// #92
  431b78:	b	431b88 <feof@plt+0x2ee88>
  431b7c:	strb	w10, [x9], #1
  431b80:	strb	w11, [x9], #1
  431b84:	cbz	w22, 431bb0 <feof@plt+0x2eeb0>
  431b88:	ldrb	w11, [x21], #1
  431b8c:	sub	w22, w22, #0x1
  431b90:	cmp	w11, #0x5c
  431b94:	b.eq	431b7c <feof@plt+0x2ee7c>  // b.none
  431b98:	cmp	w11, #0x22
  431b9c:	b.eq	431b7c <feof@plt+0x2ee7c>  // b.none
  431ba0:	cmp	w11, #0xa
  431ba4:	b.ne	431b80 <feof@plt+0x2ee80>  // b.any
  431ba8:	mov	w11, #0x6e                  	// #110
  431bac:	b	431b7c <feof@plt+0x2ee7c>
  431bb0:	strh	w8, [x9]
  431bb4:	cbnz	x20, 431d6c <feof@plt+0x2f06c>
  431bb8:	b	431d48 <feof@plt+0x2f048>
  431bbc:	ldr	x8, [x19, #1040]
  431bc0:	mov	x0, x19
  431bc4:	blr	x8
  431bc8:	mov	w21, w0
  431bcc:	b	431d4c <feof@plt+0x2f04c>
  431bd0:	ldrb	w8, [x19, #1244]
  431bd4:	cbz	w8, 431bf4 <feof@plt+0x2eef4>
  431bd8:	ldrb	w8, [x19, #16]
  431bdc:	cbz	w8, 431bf4 <feof@plt+0x2eef4>
  431be0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431be4:	add	x2, x2, #0x774
  431be8:	mov	w1, #0x3                   	// #3
  431bec:	mov	x0, x19
  431bf0:	bl	4223e4 <feof@plt+0x1f6e4>
  431bf4:	ldr	w21, [x19, #1376]
  431bf8:	add	w8, w21, #0x1
  431bfc:	str	w8, [x19, #1376]
  431c00:	b	431d4c <feof@plt+0x2f04c>
  431c04:	mov	x0, x8
  431c08:	mov	w1, w2
  431c0c:	mov	w2, wzr
  431c10:	mov	x3, xzr
  431c14:	bl	42f174 <feof@plt+0x2c474>
  431c18:	ldr	x8, [x19, #40]
  431c1c:	mov	w1, w0
  431c20:	mov	x0, x8
  431c24:	bl	42f37c <feof@plt+0x2c67c>
  431c28:	mov	w21, w0
  431c2c:	b	431d4c <feof@plt+0x2f04c>
  431c30:	bl	402ac0 <__errno_location@plt>
  431c34:	mov	x21, x0
  431c38:	str	wzr, [x0]
  431c3c:	mov	x0, xzr
  431c40:	bl	402a80 <time@plt>
  431c44:	cmn	x0, #0x1
  431c48:	str	x0, [sp, #8]
  431c4c:	b.eq	431cf4 <feof@plt+0x2eff4>  // b.none
  431c50:	add	x0, sp, #0x8
  431c54:	bl	4028d0 <localtime@plt>
  431c58:	mov	x21, x0
  431c5c:	cbz	x0, 431cfc <feof@plt+0x2effc>
  431c60:	mov	w1, #0xe                   	// #14
  431c64:	mov	x0, x19
  431c68:	bl	42d11c <feof@plt+0x2a41c>
  431c6c:	str	x0, [x19, #640]
  431c70:	ldp	w3, w8, [x21, #12]
  431c74:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  431c78:	sxtw	x8, w8
  431c7c:	add	x9, x9, #0x5f0
  431c80:	ldr	w10, [x21, #20]
  431c84:	ldr	x2, [x9, x8, lsl #3]
  431c88:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  431c8c:	add	x1, x1, #0x71b
  431c90:	add	w4, w10, #0x76c
  431c94:	bl	402880 <sprintf@plt>
  431c98:	mov	w1, #0xb                   	// #11
  431c9c:	mov	x0, x19
  431ca0:	bl	42d11c <feof@plt+0x2a41c>
  431ca4:	str	x0, [x19, #648]
  431ca8:	ldp	w3, w2, [x21, #4]
  431cac:	ldr	w4, [x21]
  431cb0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  431cb4:	add	x1, x1, #0x728
  431cb8:	bl	402880 <sprintf@plt>
  431cbc:	b	431d28 <feof@plt+0x2f028>
  431cc0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431cc4:	add	x2, x2, #0x6b0
  431cc8:	mov	x0, x19
  431ccc:	mov	w1, wzr
  431cd0:	bl	422e3c <feof@plt+0x2013c>
  431cd4:	adrp	x20, 463000 <_obstack_memory_used@@Base+0xddd8>
  431cd8:	add	x20, x20, #0x6d3
  431cdc:	str	x20, [x21, #88]
  431ce0:	cbnz	x20, 431d6c <feof@plt+0x2f06c>
  431ce4:	b	431d48 <feof@plt+0x2f048>
  431ce8:	ldr	x20, [x21, #88]
  431cec:	cbnz	x20, 431d6c <feof@plt+0x2f06c>
  431cf0:	b	431d48 <feof@plt+0x2f048>
  431cf4:	ldr	w8, [x21]
  431cf8:	cbz	w8, 431c50 <feof@plt+0x2ef50>
  431cfc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431d00:	add	x2, x2, #0x739
  431d04:	mov	x0, x19
  431d08:	mov	w1, wzr
  431d0c:	bl	422e3c <feof@plt+0x2013c>
  431d10:	adrp	x8, 463000 <_obstack_memory_used@@Base+0xddd8>
  431d14:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  431d18:	add	x8, x8, #0x75b
  431d1c:	add	x9, x9, #0x769
  431d20:	str	x8, [x19, #640]
  431d24:	str	x9, [x19, #648]
  431d28:	ldr	w8, [x20, #24]
  431d2c:	cmp	w8, #0x1
  431d30:	b.ne	431d40 <feof@plt+0x2f040>  // b.any
  431d34:	ldr	x20, [x19, #640]
  431d38:	cbnz	x20, 431d6c <feof@plt+0x2f06c>
  431d3c:	b	431d48 <feof@plt+0x2f048>
  431d40:	ldr	x20, [x19, #648]
  431d44:	cbnz	x20, 431d6c <feof@plt+0x2f06c>
  431d48:	mov	w21, #0x1                   	// #1
  431d4c:	mov	w1, #0x15                  	// #21
  431d50:	mov	x0, x19
  431d54:	bl	42d11c <feof@plt+0x2a41c>
  431d58:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  431d5c:	add	x1, x1, #0xefa
  431d60:	mov	w2, w21
  431d64:	mov	x20, x0
  431d68:	bl	402880 <sprintf@plt>
  431d6c:	mov	x0, x20
  431d70:	ldp	x20, x19, [sp, #64]
  431d74:	ldp	x22, x21, [sp, #48]
  431d78:	ldp	x24, x23, [sp, #32]
  431d7c:	ldp	x29, x30, [sp, #16]
  431d80:	add	sp, sp, #0x50
  431d84:	ret
  431d88:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  431d8c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431d90:	add	x0, x0, #0x6ee
  431d94:	add	x2, x2, #0x703
  431d98:	mov	w1, #0x1c5                 	// #453
  431d9c:	bl	408b70 <feof@plt+0x5e70>
  431da0:	cbz	w2, 431de0 <feof@plt+0x2f0e0>
  431da4:	mov	w8, #0x5c                  	// #92
  431da8:	b	431db8 <feof@plt+0x2f0b8>
  431dac:	strb	w8, [x0], #1
  431db0:	strb	w9, [x0], #1
  431db4:	cbz	w2, 431de0 <feof@plt+0x2f0e0>
  431db8:	ldrb	w9, [x1], #1
  431dbc:	sub	w2, w2, #0x1
  431dc0:	cmp	w9, #0x5c
  431dc4:	b.eq	431dac <feof@plt+0x2f0ac>  // b.none
  431dc8:	cmp	w9, #0x22
  431dcc:	b.eq	431dac <feof@plt+0x2f0ac>  // b.none
  431dd0:	cmp	w9, #0xa
  431dd4:	b.ne	431db0 <feof@plt+0x2f0b0>  // b.any
  431dd8:	mov	w9, #0x6e                  	// #110
  431ddc:	b	431dac <feof@plt+0x2f0ac>
  431de0:	ret
  431de4:	stp	x29, x30, [sp, #-48]!
  431de8:	stp	x20, x19, [sp, #32]
  431dec:	ldrh	w5, [x1, #16]
  431df0:	str	x21, [sp, #16]
  431df4:	mov	x29, sp
  431df8:	cmp	w5, w3
  431dfc:	b.ne	431e08 <feof@plt+0x2f108>  // b.any
  431e00:	mov	w0, #0x1                   	// #1
  431e04:	b	431e94 <feof@plt+0x2f194>
  431e08:	mov	w8, w3
  431e0c:	mov	x20, x2
  431e10:	mov	x21, x1
  431e14:	mov	x19, x0
  431e18:	b.ls	431e50 <feof@plt+0x2f150>  // b.plast
  431e1c:	add	w9, w8, #0x1
  431e20:	cmp	w9, w5
  431e24:	b.ne	431e30 <feof@plt+0x2f130>  // b.any
  431e28:	ldrb	w9, [x21, #19]
  431e2c:	tbnz	w9, #3, 431ea4 <feof@plt+0x2f1a4>
  431e30:	ldr	x3, [x20]
  431e34:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431e38:	add	x2, x2, #0x845
  431e3c:	mov	w1, #0x3                   	// #3
  431e40:	mov	x0, x19
  431e44:	mov	w4, w5
  431e48:	mov	w5, w8
  431e4c:	b	431e68 <feof@plt+0x2f168>
  431e50:	ldr	x3, [x20]
  431e54:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431e58:	add	x2, x2, #0x879
  431e5c:	mov	w1, #0x3                   	// #3
  431e60:	mov	x0, x19
  431e64:	mov	w4, w8
  431e68:	bl	4223e4 <feof@plt+0x1f6e4>
  431e6c:	ldr	w2, [x21, #8]
  431e70:	cmp	w2, #0x3
  431e74:	b.cc	431e90 <feof@plt+0x2f190>  // b.lo, b.ul, b.last
  431e78:	ldr	x4, [x20]
  431e7c:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  431e80:	add	x3, x3, #0x8ab
  431e84:	mov	w1, #0x5                   	// #5
  431e88:	mov	x0, x19
  431e8c:	bl	422c94 <feof@plt+0x1ff94>
  431e90:	mov	w0, wzr
  431e94:	ldp	x20, x19, [sp, #32]
  431e98:	ldr	x21, [sp, #16]
  431e9c:	ldp	x29, x30, [sp], #48
  431ea0:	ret
  431ea4:	mov	w0, #0x1                   	// #1
  431ea8:	tbnz	w9, #4, 431e94 <feof@plt+0x2f194>
  431eac:	ldrb	w8, [x19, #1154]
  431eb0:	cbz	w8, 431e94 <feof@plt+0x2f194>
  431eb4:	ldrb	w8, [x19, #1167]
  431eb8:	cbnz	w8, 431e00 <feof@plt+0x2f100>
  431ebc:	ldrb	w8, [x19, #1120]
  431ec0:	cbz	w8, 431ed0 <feof@plt+0x2f1d0>
  431ec4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431ec8:	add	x2, x2, #0x7b1
  431ecc:	b	431ed8 <feof@plt+0x2f1d8>
  431ed0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  431ed4:	add	x2, x2, #0x7fc
  431ed8:	mov	w1, #0x2                   	// #2
  431edc:	mov	x0, x19
  431ee0:	bl	4223e4 <feof@plt+0x1f6e4>
  431ee4:	mov	w0, #0x1                   	// #1
  431ee8:	b	431e94 <feof@plt+0x2f194>
  431eec:	stp	x29, x30, [sp, #-48]!
  431ef0:	stp	x22, x21, [sp, #16]
  431ef4:	stp	x20, x19, [sp, #32]
  431ef8:	ldr	x8, [x0, #136]
  431efc:	mov	w19, w3
  431f00:	mov	x20, x2
  431f04:	mov	x21, x0
  431f08:	mov	x22, x1
  431f0c:	mov	x29, sp
  431f10:	cbz	x1, 431f48 <feof@plt+0x2f248>
  431f14:	ldr	x0, [x8]
  431f18:	cbz	x0, 431f68 <feof@plt+0x2f268>
  431f1c:	mov	w8, #0x1                   	// #1
  431f20:	mov	w9, #0x18                  	// #24
  431f24:	str	x0, [x21, #136]
  431f28:	str	w8, [x0, #48]
  431f2c:	umaddl	x8, w19, w9, x20
  431f30:	stp	xzr, x22, [x0, #32]
  431f34:	stp	x20, x8, [x0, #16]
  431f38:	ldp	x20, x19, [sp, #32]
  431f3c:	ldp	x22, x21, [sp, #16]
  431f40:	ldp	x29, x30, [sp], #48
  431f44:	ret
  431f48:	ldr	w9, [x8, #48]
  431f4c:	cmp	w9, #0x2
  431f50:	add	x9, x8, #0x28
  431f54:	b.ne	431f5c <feof@plt+0x2f25c>  // b.any
  431f58:	ldr	x9, [x9]
  431f5c:	ldr	x22, [x9]
  431f60:	ldr	x0, [x8]
  431f64:	cbnz	x0, 431f1c <feof@plt+0x2f21c>
  431f68:	mov	w0, #0x38                  	// #56
  431f6c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  431f70:	movi	v0.2d, #0x0
  431f74:	str	xzr, [x0, #48]
  431f78:	stp	q0, q0, [x0, #16]
  431f7c:	ldr	x8, [x21, #136]
  431f80:	stp	xzr, x8, [x0]
  431f84:	str	x0, [x8]
  431f88:	b	431f1c <feof@plt+0x2f21c>
  431f8c:	stp	x29, x30, [sp, #-48]!
  431f90:	stp	x22, x21, [sp, #16]
  431f94:	stp	x20, x19, [sp, #32]
  431f98:	ldr	x8, [x0, #136]
  431f9c:	mov	x22, x0
  431fa0:	mov	x19, x3
  431fa4:	mov	x20, x2
  431fa8:	ldr	x0, [x8]
  431fac:	mov	x21, x1
  431fb0:	mov	x29, sp
  431fb4:	cbnz	x0, 431fd8 <feof@plt+0x2f2d8>
  431fb8:	mov	w0, #0x38                  	// #56
  431fbc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  431fc0:	movi	v0.2d, #0x0
  431fc4:	str	xzr, [x0, #48]
  431fc8:	stp	q0, q0, [x0, #16]
  431fcc:	ldr	x8, [x22, #136]
  431fd0:	stp	xzr, x8, [x0]
  431fd4:	str	x0, [x8]
  431fd8:	mov	w8, #0x1                   	// #1
  431fdc:	add	x9, x20, x19
  431fe0:	str	x0, [x22, #136]
  431fe4:	stp	xzr, x21, [x0, #32]
  431fe8:	str	w8, [x0, #48]
  431fec:	stp	x20, x9, [x0, #16]
  431ff0:	ldrh	w8, [x21, #18]
  431ff4:	orr	w8, w8, #0x40
  431ff8:	strh	w8, [x21, #18]
  431ffc:	ldp	x20, x19, [sp, #32]
  432000:	ldp	x22, x21, [sp, #16]
  432004:	ldp	x29, x30, [sp], #48
  432008:	ret
  43200c:	stp	x29, x30, [sp, #-48]!
  432010:	stp	x22, x21, [sp, #16]
  432014:	stp	x20, x19, [sp, #32]
  432018:	ldr	x19, [x0, #136]
  43201c:	add	x8, x0, #0x50
  432020:	mov	x29, sp
  432024:	cmp	x19, x8
  432028:	b.eq	4320fc <feof@plt+0x2f3fc>  // b.none
  43202c:	ldr	x21, [x19, #40]
  432030:	mov	x20, x0
  432034:	cbz	x21, 4320a0 <feof@plt+0x2f3a0>
  432038:	ldr	w8, [x19, #48]
  43203c:	cmp	w8, #0x2
  432040:	b.ne	4320cc <feof@plt+0x2f3cc>  // b.any
  432044:	ldr	x8, [x19, #32]
  432048:	ldr	x22, [x21]
  43204c:	cbz	x8, 43205c <feof@plt+0x2f35c>
  432050:	ldr	x0, [x21, #8]
  432054:	cbz	x0, 43205c <feof@plt+0x2f35c>
  432058:	bl	402770 <free@plt>
  43205c:	mov	x0, x21
  432060:	bl	402770 <free@plt>
  432064:	str	xzr, [x19, #40]
  432068:	cbz	x22, 432088 <feof@plt+0x2f388>
  43206c:	ldr	x8, [x19, #8]
  432070:	cbnz	x8, 4320d8 <feof@plt+0x2f3d8>
  432074:	cmp	x8, x22
  432078:	b.eq	432088 <feof@plt+0x2f388>  // b.none
  43207c:	ldrh	w8, [x22, #18]
  432080:	and	w8, w8, #0xffffffbf
  432084:	strh	w8, [x22, #18]
  432088:	ldr	x8, [x20, #184]
  43208c:	cmp	x22, x8
  432090:	b.ne	4320a0 <feof@plt+0x2f3a0>  // b.any
  432094:	ldr	x8, [x19, #8]
  432098:	cbnz	x8, 4320a0 <feof@plt+0x2f3a0>
  43209c:	str	xzr, [x20, #184]
  4320a0:	ldr	x0, [x19, #32]
  4320a4:	cbz	x0, 4320ac <feof@plt+0x2f3ac>
  4320a8:	bl	42dbdc <feof@plt+0x2aedc>
  4320ac:	ldr	x8, [x19, #8]
  4320b0:	mov	x0, x19
  4320b4:	str	x8, [x20, #136]
  4320b8:	str	xzr, [x8]
  4320bc:	ldp	x20, x19, [sp, #32]
  4320c0:	ldp	x22, x21, [sp, #16]
  4320c4:	ldp	x29, x30, [sp], #48
  4320c8:	b	402770 <free@plt>
  4320cc:	mov	x22, x21
  4320d0:	ldr	x8, [x19, #8]
  4320d4:	cbz	x8, 432074 <feof@plt+0x2f374>
  4320d8:	ldr	w9, [x8, #48]
  4320dc:	add	x8, x8, #0x28
  4320e0:	cmp	w9, #0x2
  4320e4:	b.ne	4320ec <feof@plt+0x2f3ec>  // b.any
  4320e8:	ldr	x8, [x8]
  4320ec:	ldr	x8, [x8]
  4320f0:	cmp	x8, x22
  4320f4:	b.ne	43207c <feof@plt+0x2f37c>  // b.any
  4320f8:	b	432088 <feof@plt+0x2f388>
  4320fc:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432100:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  432104:	add	x0, x0, #0x6ee
  432108:	add	x2, x2, #0x8c3
  43210c:	mov	w1, #0x9eb                 	// #2539
  432110:	bl	408b70 <feof@plt+0x5e70>
  432114:	mov	x1, xzr
  432118:	b	43211c <feof@plt+0x2f41c>
  43211c:	sub	sp, sp, #0x80
  432120:	stp	x29, x30, [sp, #32]
  432124:	stp	x28, x27, [sp, #48]
  432128:	stp	x26, x25, [sp, #64]
  43212c:	stp	x24, x23, [sp, #80]
  432130:	stp	x22, x21, [sp, #96]
  432134:	stp	x20, x19, [sp, #112]
  432138:	ldrb	w26, [x0, #192]
  43213c:	mov	x20, x1
  432140:	mov	x19, x0
  432144:	mov	w21, wzr
  432148:	add	x25, x0, #0xb0
  43214c:	adrp	x28, 47d000 <stderr@@GLIBC_2.17+0xa78>
  432150:	add	x29, sp, #0x20
  432154:	b	432168 <feof@plt+0x2f468>
  432158:	mov	x0, x19
  43215c:	bl	43200c <feof@plt+0x2f30c>
  432160:	ldrb	w8, [x19, #16]
  432164:	cbz	w8, 432588 <feof@plt+0x2f888>
  432168:	ldr	x8, [x19, #136]
  43216c:	ldr	x9, [x8, #8]
  432170:	cbz	x9, 4321c0 <feof@plt+0x2f4c0>
  432174:	ldr	w10, [x8, #48]
  432178:	cbz	w10, 43219c <feof@plt+0x2f49c>
  43217c:	cmp	w10, #0x2
  432180:	b.eq	43219c <feof@plt+0x2f49c>  // b.none
  432184:	cmp	w10, #0x1
  432188:	b.ne	432704 <feof@plt+0x2fa04>  // b.any
  43218c:	ldp	x9, x10, [x8, #16]
  432190:	cmp	x9, x10
  432194:	b.eq	4321a8 <feof@plt+0x2f4a8>  // b.none
  432198:	b	4321e8 <feof@plt+0x2f4e8>
  43219c:	ldp	x9, x11, [x8, #16]
  4321a0:	cmp	x9, x11
  4321a4:	b.ne	4321d4 <feof@plt+0x2f4d4>  // b.any
  4321a8:	ldr	x8, [x8, #40]
  4321ac:	cbz	x8, 432158 <feof@plt+0x2f458>
  4321b0:	ldr	w8, [x28, #2400]
  4321b4:	add	w8, w8, #0x1
  4321b8:	str	w8, [x28, #2400]
  4321bc:	b	432158 <feof@plt+0x2f458>
  4321c0:	mov	x0, x19
  4321c4:	bl	4298e8 <feof@plt+0x26be8>
  4321c8:	ldr	w21, [x0]
  4321cc:	mov	x22, x0
  4321d0:	b	432200 <feof@plt+0x2f500>
  4321d4:	cbz	w10, 4322cc <feof@plt+0x2f5cc>
  4321d8:	cmp	w10, #0x2
  4321dc:	b.eq	4322a8 <feof@plt+0x2f5a8>  // b.none
  4321e0:	cmp	w10, #0x1
  4321e4:	b.ne	432734 <feof@plt+0x2fa34>  // b.any
  4321e8:	mov	x10, x9
  4321ec:	ldr	w21, [x10], #24
  4321f0:	mov	x22, x9
  4321f4:	str	x10, [x8, #16]
  4321f8:	ldrb	w8, [x22, #6]
  4321fc:	tbnz	w8, #3, 432334 <feof@plt+0x2f634>
  432200:	ldrb	w9, [x19, #16]
  432204:	ldrb	w8, [x22, #4]
  432208:	cbz	w9, 432214 <feof@plt+0x2f514>
  43220c:	cmp	w8, #0x4f
  432210:	b.eq	432168 <feof@plt+0x2f468>  // b.none
  432214:	cmp	w8, #0x35
  432218:	b.ne	43258c <feof@plt+0x2f88c>  // b.any
  43221c:	ldr	x1, [x22, #8]
  432220:	ldrh	w8, [x1, #18]
  432224:	tst	w8, #0x3
  432228:	b.eq	43258c <feof@plt+0x2f88c>  // b.none
  43222c:	ldrb	w9, [x22, #7]
  432230:	tbnz	w9, #2, 43258c <feof@plt+0x2f88c>
  432234:	tbnz	w8, #6, 432634 <feof@plt+0x2f934>
  432238:	ldrb	w8, [x19, #192]
  43223c:	cbnz	w8, 432270 <feof@plt+0x2f570>
  432240:	ldr	x8, [x19, #136]
  432244:	cbz	x8, 432264 <feof@plt+0x2f564>
  432248:	ldr	w9, [x8, #48]
  43224c:	add	x8, x8, #0x28
  432250:	cmp	w9, #0x2
  432254:	b.ne	43225c <feof@plt+0x2f55c>  // b.any
  432258:	ldr	x8, [x8]
  43225c:	ldr	x8, [x8]
  432260:	cbnz	x8, 432270 <feof@plt+0x2f570>
  432264:	ldr	w8, [x22]
  432268:	str	x1, [x19, #184]
  43226c:	str	w8, [x19, #176]
  432270:	ldrb	w8, [x19, #24]
  432274:	cbnz	w8, 43258c <feof@plt+0x2f88c>
  432278:	ldrb	w8, [x1, #19]
  43227c:	tbz	w8, #0, 4322f8 <feof@plt+0x2f5f8>
  432280:	ldr	x8, [x19, #992]
  432284:	cbz	x8, 43258c <feof@plt+0x2f88c>
  432288:	mov	x0, x19
  43228c:	mov	w1, wzr
  432290:	bl	429790 <feof@plt+0x26a90>
  432294:	ldrb	w8, [x0, #4]
  432298:	cmp	w8, #0x53
  43229c:	b.ne	4322d8 <feof@plt+0x2f5d8>  // b.any
  4322a0:	mov	w23, #0x1                   	// #1
  4322a4:	b	4322e0 <feof@plt+0x2f5e0>
  4322a8:	ldr	x10, [x8, #40]
  4322ac:	ldr	x22, [x9]
  4322b0:	ldr	x11, [x10, #8]
  4322b4:	cbz	x11, 432320 <feof@plt+0x2f620>
  4322b8:	ldr	x9, [x10, #16]
  4322bc:	ldr	w21, [x9], #4
  4322c0:	str	x9, [x10, #16]
  4322c4:	ldr	x9, [x8, #16]
  4322c8:	b	432324 <feof@plt+0x2f624>
  4322cc:	ldr	x22, [x9], #8
  4322d0:	ldr	w21, [x22]
  4322d4:	b	432328 <feof@plt+0x2f628>
  4322d8:	ldrb	w8, [x0, #6]
  4322dc:	and	w23, w8, #0x1
  4322e0:	ldr	x8, [x19, #992]
  4322e4:	mov	x0, x19
  4322e8:	mov	x1, x22
  4322ec:	blr	x8
  4322f0:	mov	x1, x0
  4322f4:	cbz	x0, 432660 <feof@plt+0x2f960>
  4322f8:	mov	x0, x19
  4322fc:	mov	x2, x22
  432300:	mov	w3, w21
  432304:	bl	433c10 <feof@plt+0x30f10>
  432308:	cbz	w0, 43258c <feof@plt+0x2f88c>
  43230c:	cmp	w0, #0x2
  432310:	b.eq	432168 <feof@plt+0x2f468>  // b.none
  432314:	ldrb	w8, [x19, #16]
  432318:	cbnz	w8, 432168 <feof@plt+0x2f468>
  43231c:	b	432614 <feof@plt+0x2f914>
  432320:	ldr	w21, [x22]
  432324:	add	x9, x9, #0x8
  432328:	str	x9, [x8, #16]
  43232c:	ldrb	w8, [x22, #6]
  432330:	tbz	w8, #3, 432200 <feof@plt+0x2f500>
  432334:	stur	x22, [x29, #-8]
  432338:	ldr	x27, [x19, #136]
  43233c:	cbz	x27, 43274c <feof@plt+0x2fa4c>
  432340:	ldr	w8, [x27, #48]
  432344:	add	x9, x27, #0x28
  432348:	cmp	w8, #0x2
  43234c:	b.ne	432354 <feof@plt+0x2f654>  // b.any
  432350:	ldr	x9, [x9]
  432354:	ldr	x9, [x9]
  432358:	cbz	x9, 43274c <feof@plt+0x2fa4c>
  43235c:	cmp	w8, #0x2
  432360:	mov	x9, x25
  432364:	b.ne	432374 <feof@plt+0x2f674>  // b.any
  432368:	ldr	x9, [x27, #40]
  43236c:	ldr	x9, [x9, #16]
  432370:	sub	x9, x9, #0x4
  432374:	ldr	w23, [x9]
  432378:	mov	x24, xzr
  43237c:	cbz	w8, 4323c4 <feof@plt+0x2f6c4>
  432380:	cmp	w8, #0x2
  432384:	b.eq	4323a0 <feof@plt+0x2f6a0>  // b.none
  432388:	cmp	w8, #0x1
  43238c:	b.ne	4323d4 <feof@plt+0x2f6d4>  // b.any
  432390:	ldr	x24, [x27, #16]
  432394:	add	x8, x24, #0x18
  432398:	str	x8, [x27, #16]
  43239c:	b	4323d4 <feof@plt+0x2f6d4>
  4323a0:	ldr	x8, [x27, #16]
  4323a4:	ldr	x9, [x27, #40]
  4323a8:	add	x10, x8, #0x8
  4323ac:	str	x10, [x27, #16]
  4323b0:	ldr	x10, [x9, #16]
  4323b4:	ldr	x24, [x8]
  4323b8:	add	x8, x10, #0x4
  4323bc:	str	x8, [x9, #16]
  4323c0:	b	4323d4 <feof@plt+0x2f6d4>
  4323c4:	ldr	x8, [x27, #16]
  4323c8:	add	x9, x8, #0x8
  4323cc:	str	x9, [x27, #16]
  4323d0:	ldr	x24, [x8]
  4323d4:	ldrb	w8, [x24, #4]
  4323d8:	cmp	w8, #0x53
  4323dc:	b.ne	4323e8 <feof@plt+0x2f6e8>  // b.any
  4323e0:	ldrb	w8, [x24, #6]
  4323e4:	tbnz	w8, #3, 43271c <feof@plt+0x2fa1c>
  4323e8:	sub	x2, x29, #0x8
  4323ec:	mov	x0, x19
  4323f0:	mov	w1, w23
  4323f4:	mov	x3, x24
  4323f8:	bl	43522c <feof@plt+0x3252c>
  4323fc:	tbz	w0, #0, 432414 <feof@plt+0x2f714>
  432400:	ldrb	w8, [x24, #6]
  432404:	tbz	w8, #3, 432414 <feof@plt+0x2f714>
  432408:	ldr	w8, [x27, #48]
  43240c:	cbnz	w8, 432380 <feof@plt+0x2f680>
  432410:	b	4323c4 <feof@plt+0x2f6c4>
  432414:	ldr	w8, [x27, #48]
  432418:	cmp	w8, #0x2
  43241c:	b.ne	4324d4 <feof@plt+0x2f7d4>  // b.any
  432420:	mov	w0, #0x10                  	// #16
  432424:	str	x20, [sp, #8]
  432428:	mov	x20, x25
  43242c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  432430:	mov	x24, x0
  432434:	mov	w1, #0x8                   	// #8
  432438:	mov	x0, x19
  43243c:	bl	42d97c <feof@plt+0x2ac7c>
  432440:	ldp	x8, x9, [x0, #16]
  432444:	cmp	x8, x9
  432448:	b.hi	432764 <feof@plt+0x2fa64>  // b.pmore
  43244c:	ldur	x9, [x29, #-8]
  432450:	mov	x25, x0
  432454:	stur	w26, [x29, #-12]
  432458:	cbz	x24, 43246c <feof@plt+0x2f76c>
  43245c:	ldr	x10, [x25, #8]
  432460:	sub	x10, x8, x10
  432464:	lsr	x10, x10, #3
  432468:	str	w23, [x24, w10, uxtw #2]
  43246c:	str	x9, [x8], #8
  432470:	str	x8, [x25, #16]
  432474:	ldr	x8, [x27, #40]
  432478:	ldr	x27, [x25, #8]
  43247c:	ldr	x26, [x8]
  432480:	ldr	x8, [x19, #136]
  432484:	cbz	x26, 432540 <feof@plt+0x2f840>
  432488:	ldr	x23, [x8]
  43248c:	cbz	x23, 432560 <feof@plt+0x2f860>
  432490:	mov	w8, #0x2                   	// #2
  432494:	mov	w0, #0x18                  	// #24
  432498:	str	x23, [x19, #136]
  43249c:	str	w8, [x23, #48]
  4324a0:	str	x25, [x23, #32]
  4324a4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4324a8:	add	x8, x27, #0x8
  4324ac:	stp	x26, x24, [x0]
  4324b0:	str	x24, [x0, #16]
  4324b4:	stp	x27, x8, [x23, #16]
  4324b8:	ldur	w26, [x29, #-12]
  4324bc:	mov	x25, x20
  4324c0:	ldr	x20, [sp, #8]
  4324c4:	str	x0, [x23, #40]
  4324c8:	ldrb	w8, [x19, #16]
  4324cc:	cbnz	w8, 432168 <feof@plt+0x2f468>
  4324d0:	b	432614 <feof@plt+0x2f914>
  4324d4:	ldr	x8, [x19, #136]
  4324d8:	ldur	x23, [x29, #-8]
  4324dc:	ldr	w9, [x8, #48]
  4324e0:	cmp	w9, #0x2
  4324e4:	add	x9, x8, #0x28
  4324e8:	b.ne	4324f0 <feof@plt+0x2f7f0>  // b.any
  4324ec:	ldr	x9, [x9]
  4324f0:	ldr	x0, [x8]
  4324f4:	ldr	x24, [x9]
  4324f8:	mov	w27, #0x1                   	// #1
  4324fc:	cbnz	x0, 432520 <feof@plt+0x2f820>
  432500:	mov	w0, #0x38                  	// #56
  432504:	bl	45535c <_obstack_memory_used@@Base+0x134>
  432508:	movi	v0.2d, #0x0
  43250c:	stp	q0, q0, [x0, #16]
  432510:	str	xzr, [x0, #48]
  432514:	ldr	x8, [x19, #136]
  432518:	stp	xzr, x8, [x0]
  43251c:	str	x0, [x8]
  432520:	add	x8, x23, #0x18
  432524:	str	x0, [x19, #136]
  432528:	str	w27, [x0, #48]
  43252c:	stp	xzr, x24, [x0, #32]
  432530:	stp	x23, x8, [x0, #16]
  432534:	ldrb	w8, [x19, #16]
  432538:	cbnz	w8, 432168 <feof@plt+0x2f468>
  43253c:	b	432614 <feof@plt+0x2f914>
  432540:	ldr	w9, [x8, #48]
  432544:	cmp	w9, #0x2
  432548:	add	x9, x8, #0x28
  43254c:	b.ne	432554 <feof@plt+0x2f854>  // b.any
  432550:	ldr	x9, [x9]
  432554:	ldr	x26, [x9]
  432558:	ldr	x23, [x8]
  43255c:	cbnz	x23, 432490 <feof@plt+0x2f790>
  432560:	mov	w0, #0x38                  	// #56
  432564:	bl	45535c <_obstack_memory_used@@Base+0x134>
  432568:	movi	v0.2d, #0x0
  43256c:	stp	q0, q0, [x0, #16]
  432570:	str	xzr, [x0, #48]
  432574:	ldr	x8, [x19, #136]
  432578:	mov	x23, x0
  43257c:	stp	xzr, x8, [x0]
  432580:	str	x0, [x8]
  432584:	b	432490 <feof@plt+0x2f790>
  432588:	add	x22, x19, #0x298
  43258c:	cbz	x20, 4325bc <feof@plt+0x2f8bc>
  432590:	cbnz	w21, 432598 <feof@plt+0x2f898>
  432594:	ldr	w21, [x22]
  432598:	str	w21, [x20]
  43259c:	ldrb	w8, [x19, #1157]
  4325a0:	cbz	w8, 4325e4 <feof@plt+0x2f8e4>
  4325a4:	ldrb	w8, [x19, #1160]
  4325a8:	cbz	w8, 4325b8 <feof@plt+0x2f8b8>
  4325ac:	ldrb	w8, [x19, #16]
  4325b0:	cbz	w8, 4325b8 <feof@plt+0x2f8b8>
  4325b4:	ldr	w21, [x19, #48]
  4325b8:	str	w21, [x20]
  4325bc:	strb	w26, [x19, #192]
  4325c0:	mov	x0, x22
  4325c4:	ldp	x20, x19, [sp, #112]
  4325c8:	ldp	x22, x21, [sp, #96]
  4325cc:	ldp	x24, x23, [sp, #80]
  4325d0:	ldp	x26, x25, [sp, #64]
  4325d4:	ldp	x28, x27, [sp, #48]
  4325d8:	ldp	x29, x30, [sp, #32]
  4325dc:	add	sp, sp, #0x80
  4325e0:	ret
  4325e4:	ldr	x8, [x19, #136]
  4325e8:	cbz	x8, 4325a4 <feof@plt+0x2f8a4>
  4325ec:	ldr	w9, [x8, #48]
  4325f0:	add	x8, x8, #0x28
  4325f4:	cmp	w9, #0x2
  4325f8:	b.ne	432600 <feof@plt+0x2f900>  // b.any
  4325fc:	ldr	x8, [x8]
  432600:	ldr	x8, [x8]
  432604:	cbz	x8, 4325a4 <feof@plt+0x2f8a4>
  432608:	ldr	w21, [x25]
  43260c:	str	w21, [x20]
  432610:	b	4325a4 <feof@plt+0x2f8a4>
  432614:	mov	x0, x19
  432618:	bl	429a78 <feof@plt+0x26d78>
  43261c:	mov	w8, #0x53                  	// #83
  432620:	str	x22, [x0, #8]
  432624:	strb	w8, [x0, #4]
  432628:	strh	wzr, [x0, #6]
  43262c:	mov	x22, x0
  432630:	b	43258c <feof@plt+0x2f88c>
  432634:	mov	x0, x19
  432638:	bl	429a78 <feof@plt+0x26d78>
  43263c:	ldrb	w8, [x22, #4]
  432640:	strb	w8, [x0, #4]
  432644:	ldrh	w8, [x22, #6]
  432648:	orr	w8, w8, #0x400
  43264c:	strh	w8, [x0, #6]
  432650:	ldur	q0, [x22, #8]
  432654:	mov	x22, x0
  432658:	stur	q0, [x0, #8]
  43265c:	b	43258c <feof@plt+0x2f88c>
  432660:	cbz	w23, 43258c <feof@plt+0x2f88c>
  432664:	mov	x0, x19
  432668:	mov	w1, wzr
  43266c:	bl	429790 <feof@plt+0x26a90>
  432670:	ldrb	w8, [x0, #4]
  432674:	cmp	w8, #0x53
  432678:	b.eq	43258c <feof@plt+0x2f88c>  // b.none
  43267c:	ldrb	w8, [x0, #6]
  432680:	mov	x24, x0
  432684:	tbnz	w8, #0, 43258c <feof@plt+0x2f88c>
  432688:	mov	x0, x19
  43268c:	bl	429a78 <feof@plt+0x26d78>
  432690:	mov	w8, #0x53                  	// #83
  432694:	str	x24, [x0, #8]
  432698:	strb	w8, [x0, #4]
  43269c:	strh	wzr, [x0, #6]
  4326a0:	ldr	x8, [x19, #136]
  4326a4:	mov	x23, x0
  4326a8:	ldr	w9, [x8, #48]
  4326ac:	cmp	w9, #0x2
  4326b0:	add	x9, x8, #0x28
  4326b4:	b.ne	4326bc <feof@plt+0x2f9bc>  // b.any
  4326b8:	ldr	x9, [x9]
  4326bc:	ldr	x0, [x8]
  4326c0:	ldr	x24, [x9]
  4326c4:	cbnz	x0, 4326e8 <feof@plt+0x2f9e8>
  4326c8:	mov	w0, #0x38                  	// #56
  4326cc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4326d0:	movi	v0.2d, #0x0
  4326d4:	str	xzr, [x0, #48]
  4326d8:	stp	q0, q0, [x0, #16]
  4326dc:	ldr	x8, [x19, #136]
  4326e0:	stp	xzr, x8, [x0]
  4326e4:	str	x0, [x8]
  4326e8:	mov	w8, #0x1                   	// #1
  4326ec:	add	x9, x23, #0x18
  4326f0:	str	x0, [x19, #136]
  4326f4:	stp	xzr, x24, [x0, #32]
  4326f8:	str	w8, [x0, #48]
  4326fc:	stp	x23, x9, [x0, #16]
  432700:	b	43258c <feof@plt+0x2f88c>
  432704:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432708:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43270c:	add	x0, x0, #0x6ee
  432710:	add	x2, x2, #0x9d3
  432714:	mov	w1, #0xa2f                 	// #2607
  432718:	bl	408b70 <feof@plt+0x5e70>
  43271c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432720:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  432724:	add	x0, x0, #0x6ee
  432728:	add	x2, x2, #0xa0a
  43272c:	mov	w1, #0x380                 	// #896
  432730:	bl	408b70 <feof@plt+0x5e70>
  432734:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432738:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43273c:	add	x0, x0, #0x6ee
  432740:	add	x2, x2, #0x9ea
  432744:	mov	w1, #0xa59                 	// #2649
  432748:	bl	408b70 <feof@plt+0x5e70>
  43274c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432750:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  432754:	add	x0, x0, #0x6ee
  432758:	add	x2, x2, #0xa0a
  43275c:	mov	w1, #0x352                 	// #850
  432760:	bl	408b70 <feof@plt+0x5e70>
  432764:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432768:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43276c:	add	x0, x0, #0x6ee
  432770:	add	x2, x2, #0xa5b
  432774:	mov	w1, #0x953                 	// #2387
  432778:	bl	408b70 <feof@plt+0x5e70>
  43277c:	b	43211c <feof@plt+0x2f41c>
  432780:	ldr	x8, [x0, #136]
  432784:	ldr	w9, [x8, #48]
  432788:	add	x8, x8, #0x28
  43278c:	cmp	w9, #0x2
  432790:	b.ne	432798 <feof@plt+0x2fa98>  // b.any
  432794:	ldr	x8, [x8]
  432798:	ldr	x8, [x8]
  43279c:	cbz	x8, 4327b4 <feof@plt+0x2fab4>
  4327a0:	ldr	x8, [x8, #24]
  4327a4:	cbz	x8, 4327b4 <feof@plt+0x2fab4>
  4327a8:	ldrb	w8, [x8, #19]
  4327ac:	ubfx	w0, w8, #4, #1
  4327b0:	ret
  4327b4:	mov	w0, wzr
  4327b8:	ret
  4327bc:	stp	x29, x30, [sp, #-32]!
  4327c0:	ldr	x8, [x0]
  4327c4:	str	x19, [sp, #16]
  4327c8:	mov	x19, x0
  4327cc:	mov	x29, sp
  4327d0:	ldrb	w9, [x8, #105]
  4327d4:	orr	w9, w9, #0x4
  4327d8:	strb	w9, [x8, #105]
  4327dc:	ldrb	w8, [x0, #27]
  4327e0:	ldrb	w9, [x0, #24]
  4327e4:	ldrb	w10, [x0, #1160]
  4327e8:	add	w8, w8, #0x1
  4327ec:	add	w9, w9, #0x1
  4327f0:	strb	w8, [x0, #27]
  4327f4:	strb	w9, [x0, #24]
  4327f8:	cbz	w10, 43280c <feof@plt+0x2fb0c>
  4327fc:	mov	x0, x19
  432800:	bl	437280 <feof@plt+0x34580>
  432804:	tbnz	w0, #0, 4327fc <feof@plt+0x2fafc>
  432808:	b	432824 <feof@plt+0x2fb24>
  43280c:	mov	x0, x19
  432810:	mov	x1, xzr
  432814:	bl	43211c <feof@plt+0x2f41c>
  432818:	ldrb	w8, [x0, #4]
  43281c:	cmp	w8, #0x16
  432820:	b.ne	43280c <feof@plt+0x2fb0c>  // b.any
  432824:	ldrb	w8, [x19, #27]
  432828:	ldrb	w9, [x19, #24]
  43282c:	sub	w8, w8, #0x1
  432830:	sub	w9, w9, #0x1
  432834:	strb	w8, [x19, #27]
  432838:	strb	w9, [x19, #24]
  43283c:	ldr	x19, [sp, #16]
  432840:	ldp	x29, x30, [sp], #32
  432844:	ret
  432848:	ldr	w8, [x0, #496]
  43284c:	add	w8, w8, w1
  432850:	str	w8, [x0, #496]
  432854:	cbz	w1, 43289c <feof@plt+0x2fb9c>
  432858:	ldr	x8, [x0, #448]
  43285c:	ldr	x9, [x0, #488]
  432860:	b	432868 <feof@plt+0x2fb68>
  432864:	cbz	w1, 43289c <feof@plt+0x2fb9c>
  432868:	sub	x8, x8, #0x18
  43286c:	str	x8, [x0, #448]
  432870:	ldr	x10, [x9, #16]
  432874:	sub	w1, w1, #0x1
  432878:	cmp	x8, x10
  43287c:	b.ne	432864 <feof@plt+0x2fb64>  // b.any
  432880:	ldr	x10, [x9, #8]
  432884:	cbz	x10, 432864 <feof@plt+0x2fb64>
  432888:	str	x10, [x0, #488]
  43288c:	ldr	x8, [x10, #24]
  432890:	mov	x9, x10
  432894:	str	x8, [x0, #448]
  432898:	b	432864 <feof@plt+0x2fb64>
  43289c:	ret
  4328a0:	stp	x29, x30, [sp, #-16]!
  4328a4:	ldr	x8, [x0, #136]
  4328a8:	mov	x29, sp
  4328ac:	ldr	x9, [x8, #8]
  4328b0:	cbz	x9, 4328e0 <feof@plt+0x2fbe0>
  4328b4:	cmp	w1, #0x1
  4328b8:	b.ne	43296c <feof@plt+0x2fc6c>  // b.any
  4328bc:	ldr	w9, [x8, #48]
  4328c0:	cbz	w9, 432958 <feof@plt+0x2fc58>
  4328c4:	cmp	w9, #0x2
  4328c8:	b.eq	432934 <feof@plt+0x2fc34>  // b.none
  4328cc:	cmp	w9, #0x1
  4328d0:	b.ne	432984 <feof@plt+0x2fc84>  // b.any
  4328d4:	ldr	x9, [x8, #16]
  4328d8:	sub	x9, x9, #0x18
  4328dc:	b	432960 <feof@plt+0x2fc60>
  4328e0:	ldr	w8, [x0, #496]
  4328e4:	add	w8, w8, w1
  4328e8:	str	w8, [x0, #496]
  4328ec:	cbz	w1, 432964 <feof@plt+0x2fc64>
  4328f0:	ldr	x8, [x0, #448]
  4328f4:	ldr	x9, [x0, #488]
  4328f8:	b	432900 <feof@plt+0x2fc00>
  4328fc:	cbz	w1, 432964 <feof@plt+0x2fc64>
  432900:	sub	x8, x8, #0x18
  432904:	str	x8, [x0, #448]
  432908:	ldr	x10, [x9, #16]
  43290c:	sub	w1, w1, #0x1
  432910:	cmp	x8, x10
  432914:	b.ne	4328fc <feof@plt+0x2fbfc>  // b.any
  432918:	ldr	x10, [x9, #8]
  43291c:	cbz	x10, 4328fc <feof@plt+0x2fbfc>
  432920:	str	x10, [x0, #488]
  432924:	ldr	x8, [x10, #24]
  432928:	mov	x9, x10
  43292c:	str	x8, [x0, #448]
  432930:	b	4328fc <feof@plt+0x2fbfc>
  432934:	ldr	x9, [x8, #16]
  432938:	sub	x9, x9, #0x8
  43293c:	str	x9, [x8, #16]
  432940:	ldr	x8, [x0, #136]
  432944:	ldr	x8, [x8, #40]
  432948:	cbz	x8, 43299c <feof@plt+0x2fc9c>
  43294c:	ldr	x9, [x8, #16]
  432950:	sub	x9, x9, #0x4
  432954:	b	432960 <feof@plt+0x2fc60>
  432958:	ldr	x9, [x8, #16]
  43295c:	sub	x9, x9, #0x8
  432960:	str	x9, [x8, #16]
  432964:	ldp	x29, x30, [sp], #16
  432968:	ret
  43296c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432970:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  432974:	add	x0, x0, #0x6ee
  432978:	add	x2, x2, #0x8d4
  43297c:	mov	w1, #0xb8f                 	// #2959
  432980:	bl	408b70 <feof@plt+0x5e70>
  432984:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432988:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43298c:	add	x0, x0, #0x6ee
  432990:	add	x2, x2, #0x8d4
  432994:	mov	w1, #0xba1                 	// #2977
  432998:	bl	408b70 <feof@plt+0x5e70>
  43299c:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  4329a0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  4329a4:	add	x0, x0, #0x6ee
  4329a8:	add	x2, x2, #0x8d4
  4329ac:	mov	w1, #0xb9e                 	// #2974
  4329b0:	bl	408b70 <feof@plt+0x5e70>
  4329b4:	ldrh	w8, [x0, #18]
  4329b8:	mov	w9, #0xff3c                	// #65340
  4329bc:	str	xzr, [x0, #24]
  4329c0:	and	w8, w8, w9
  4329c4:	strh	w8, [x0, #18]
  4329c8:	ret
  4329cc:	stp	x29, x30, [sp, #-64]!
  4329d0:	stp	x24, x23, [sp, #16]
  4329d4:	stp	x22, x21, [sp, #32]
  4329d8:	stp	x20, x19, [sp, #48]
  4329dc:	ldrh	w8, [x2, #18]
  4329e0:	mov	x19, x2
  4329e4:	mov	x21, x0
  4329e8:	mov	x29, sp
  4329ec:	and	w8, w8, #0x3
  4329f0:	cmp	w8, #0x1
  4329f4:	b.ne	432a18 <feof@plt+0x2fd18>  // b.any
  4329f8:	ldr	x3, [x19]
  4329fc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  432a00:	add	x2, x2, #0x8e7
  432a04:	mov	w1, #0x3                   	// #3
  432a08:	mov	x0, x21
  432a0c:	bl	4223e4 <feof@plt+0x1f6e4>
  432a10:	mov	w0, wzr
  432a14:	b	432ac8 <feof@plt+0x2fdc8>
  432a18:	ldr	w8, [x21, #512]
  432a1c:	add	w23, w1, #0x1
  432a20:	add	w9, w23, w23, lsl #1
  432a24:	lsl	w24, w9, #3
  432a28:	mov	x20, x3
  432a2c:	mov	w22, w1
  432a30:	cmp	w24, w8
  432a34:	b.ls	432a50 <feof@plt+0x2fd50>  // b.plast
  432a38:	ldr	x0, [x21, #504]
  432a3c:	mov	w1, w24
  432a40:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  432a44:	str	x0, [x21, #504]
  432a48:	str	w24, [x21, #512]
  432a4c:	b	432a54 <feof@plt+0x2fd54>
  432a50:	ldr	x0, [x21, #504]
  432a54:	mov	w8, #0x18                  	// #24
  432a58:	umaddl	x8, w22, w8, x0
  432a5c:	str	x19, [x8]
  432a60:	ldr	x9, [x19, #24]
  432a64:	mov	x1, x21
  432a68:	mov	w22, w22
  432a6c:	lsl	x10, x22, #3
  432a70:	str	x9, [x8, #8]
  432a74:	ldrh	w9, [x19, #18]
  432a78:	add	x10, x10, #0x8
  432a7c:	and	w9, w9, #0x3
  432a80:	str	w9, [x8, #16]
  432a84:	ldr	x8, [x1, #56]!
  432a88:	ldp	x8, x9, [x8, #16]
  432a8c:	sub	x9, x9, x8
  432a90:	cmp	x9, x10
  432a94:	b.cs	432aac <feof@plt+0x2fdac>  // b.hs, b.nlast
  432a98:	mov	w2, #0x8                   	// #8
  432a9c:	mov	x0, x21
  432aa0:	bl	42dafc <feof@plt+0x2adfc>
  432aa4:	ldr	x8, [x21, #56]
  432aa8:	ldr	x8, [x8, #16]
  432aac:	str	x20, [x8, x22, lsl #3]
  432ab0:	ldrh	w8, [x19, #18]
  432ab4:	mov	w0, #0x1                   	// #1
  432ab8:	strh	w23, [x19, #24]
  432abc:	and	w8, w8, #0xfffc
  432ac0:	orr	w8, w8, #0x1
  432ac4:	strh	w8, [x19, #18]
  432ac8:	ldp	x20, x19, [sp, #48]
  432acc:	ldp	x22, x21, [sp, #32]
  432ad0:	ldp	x24, x23, [sp, #16]
  432ad4:	ldp	x29, x30, [sp], #64
  432ad8:	ret
  432adc:	cbz	w1, 432b1c <feof@plt+0x2fe1c>
  432ae0:	sub	w8, w1, #0x1
  432ae4:	mov	w9, #0x18                  	// #24
  432ae8:	umull	x8, w8, w9
  432aec:	ldr	x9, [x0, #504]
  432af0:	subs	w1, w1, #0x1
  432af4:	add	x9, x9, x8
  432af8:	ldr	x10, [x9]
  432afc:	ldrh	w11, [x9, #16]
  432b00:	sub	x8, x8, #0x18
  432b04:	ldrh	w12, [x10, #18]
  432b08:	bfxil	w12, w11, #0, #2
  432b0c:	strh	w12, [x10, #18]
  432b10:	ldr	x9, [x9, #8]
  432b14:	str	x9, [x10, #24]
  432b18:	b.ne	432aec <feof@plt+0x2fdec>  // b.any
  432b1c:	ret
  432b20:	ldr	w8, [x0, #48]
  432b24:	ldrb	w9, [x2, #19]
  432b28:	str	xzr, [x2]
  432b2c:	strb	wzr, [x2, #18]
  432b30:	str	w8, [x2, #8]
  432b34:	and	w8, w9, #0xfffffff7
  432b38:	strh	wzr, [x2, #16]
  432b3c:	strb	w8, [x2, #19]
  432b40:	ldrb	w10, [x0, #1151]
  432b44:	mov	w8, #0xd7                  	// #215
  432b48:	and	w8, w9, w8
  432b4c:	str	wzr, [x2, #12]
  432b50:	cmp	w10, #0x0
  432b54:	cset	w9, eq  // eq = none
  432b58:	bfi	w8, w9, #5, #1
  432b5c:	and	w9, w8, #0xbbbbbbbb
  432b60:	strb	w9, [x2, #19]
  432b64:	ldr	x9, [x0]
  432b68:	cbz	x9, 432b7c <feof@plt+0x2fe7c>
  432b6c:	ldrb	w9, [x9, #106]
  432b70:	cmp	w9, #0x0
  432b74:	cset	w9, ne  // ne = any
  432b78:	lsl	w9, w9, #4
  432b7c:	mov	w10, #0xa0                  	// #160
  432b80:	and	w8, w8, w10
  432b84:	bfxil	w8, w1, #0, #2
  432b88:	orr	w8, w8, w9
  432b8c:	mov	x0, x2
  432b90:	strb	w8, [x2, #19]
  432b94:	ret
  432b98:	sub	sp, sp, #0xd0
  432b9c:	stp	x29, x30, [sp, #112]
  432ba0:	stp	x28, x27, [sp, #128]
  432ba4:	stp	x26, x25, [sp, #144]
  432ba8:	stp	x24, x23, [sp, #160]
  432bac:	stp	x22, x21, [sp, #176]
  432bb0:	stp	x20, x19, [sp, #192]
  432bb4:	ldrb	w8, [x0, #1160]
  432bb8:	mov	x21, x0
  432bbc:	mov	x22, x1
  432bc0:	add	x29, sp, #0x70
  432bc4:	str	x0, [sp, #40]
  432bc8:	cbz	w8, 432bdc <feof@plt+0x2fedc>
  432bcc:	mov	x0, x21
  432bd0:	bl	438518 <feof@plt+0x35818>
  432bd4:	mov	x23, x0
  432bd8:	b	4333ec <feof@plt+0x306ec>
  432bdc:	ldr	x19, [x21, #448]
  432be0:	add	x8, sp, #0x30
  432be4:	mov	x0, x21
  432be8:	str	x8, [x21, #448]
  432bec:	bl	429bf8 <feof@plt+0x26ef8>
  432bf0:	str	x19, [x21, #448]
  432bf4:	ldrb	w8, [x0, #6]
  432bf8:	mov	x23, x0
  432bfc:	str	x22, [sp, #8]
  432c00:	tbnz	w8, #0, 432f34 <feof@plt+0x30234>
  432c04:	ldrb	w8, [x23, #4]
  432c08:	cmp	w8, #0x4f
  432c0c:	b.eq	432e0c <feof@plt+0x3010c>  // b.none
  432c10:	cmp	w8, #0x16
  432c14:	b.eq	432f34 <feof@plt+0x30234>  // b.none
  432c18:	cmp	w8, #0x14
  432c1c:	b.ne	432e14 <feof@plt+0x30114>  // b.any
  432c20:	adrp	x19, 463000 <_obstack_memory_used@@Base+0xddd8>
  432c24:	adrp	x23, 463000 <_obstack_memory_used@@Base+0xddd8>
  432c28:	adrp	x24, 463000 <_obstack_memory_used@@Base+0xddd8>
  432c2c:	adrp	x22, 463000 <_obstack_memory_used@@Base+0xddd8>
  432c30:	mov	w8, wzr
  432c34:	mov	w27, wzr
  432c38:	mov	w9, wzr
  432c3c:	add	x19, x19, #0x5a3
  432c40:	add	x23, x23, #0xe4f
  432c44:	add	x24, x24, #0xe7d
  432c48:	mov	w25, #0x1                   	// #1
  432c4c:	add	x22, x22, #0xe1e
  432c50:	b	432c70 <feof@plt+0x2ff70>
  432c54:	tst	w28, #0xff
  432c58:	cset	w11, eq  // eq = none
  432c5c:	mov	w8, wzr
  432c60:	mov	w9, wzr
  432c64:	and	w11, w11, w26
  432c68:	mov	w27, w20
  432c6c:	tbz	w11, #0, 432e40 <feof@plt+0x30140>
  432c70:	mov	x0, x21
  432c74:	mov	w26, w9
  432c78:	mov	w20, w27
  432c7c:	mov	w28, w8
  432c80:	bl	4298e8 <feof@plt+0x26be8>
  432c84:	ldrb	w10, [x0, #4]
  432c88:	mov	x1, x0
  432c8c:	sub	w8, w10, #0x13
  432c90:	cmp	w8, #0x22
  432c94:	b.hi	432cc0 <feof@plt+0x2ffc0>  // b.pmore
  432c98:	adr	x9, 432c54 <feof@plt+0x2ff54>
  432c9c:	ldrb	w11, [x19, x8]
  432ca0:	add	x9, x9, x11, lsl #2
  432ca4:	br	x9
  432ca8:	tst	w28, #0xff
  432cac:	b.ne	43366c <feof@plt+0x3096c>  // b.any
  432cb0:	cbz	w20, 43366c <feof@plt+0x3096c>
  432cb4:	eor	w8, w26, #0x1
  432cb8:	tbnz	w8, #0, 432c54 <feof@plt+0x2ff54>
  432cbc:	b	43366c <feof@plt+0x3096c>
  432cc0:	cmp	w10, #0x4f
  432cc4:	b.ne	432e40 <feof@plt+0x30140>  // b.any
  432cc8:	ldrb	w11, [x21, #1124]
  432ccc:	mov	w8, w28
  432cd0:	mov	w27, w20
  432cd4:	mov	w9, w26
  432cd8:	cbz	w11, 432c70 <feof@plt+0x2ff70>
  432cdc:	b	432e40 <feof@plt+0x30140>
  432ce0:	tst	w28, #0xff
  432ce4:	b.ne	432e40 <feof@plt+0x30140>  // b.any
  432ce8:	tbz	w26, #0, 432d74 <feof@plt+0x30074>
  432cec:	ldrb	w10, [x21, #1154]
  432cf0:	mov	w8, #0x1                   	// #1
  432cf4:	mov	w27, w20
  432cf8:	mov	w9, #0x1                   	// #1
  432cfc:	cbz	w10, 432c70 <feof@plt+0x2ff70>
  432d00:	ldrb	w10, [x21, #1142]
  432d04:	mov	w8, #0x1                   	// #1
  432d08:	mov	w27, w20
  432d0c:	mov	w9, #0x1                   	// #1
  432d10:	cbz	w10, 432c70 <feof@plt+0x2ff70>
  432d14:	ldrb	w8, [x21, #1120]
  432d18:	mov	w1, #0xa                   	// #10
  432d1c:	mov	x0, x21
  432d20:	cmp	w8, #0x0
  432d24:	csel	x2, x24, x23, eq  // eq = none
  432d28:	bl	422644 <feof@plt+0x1f944>
  432d2c:	mov	w8, #0x1                   	// #1
  432d30:	mov	w27, w20
  432d34:	mov	w9, #0x1                   	// #1
  432d38:	b	432c70 <feof@plt+0x2ff70>
  432d3c:	tst	w28, #0xff
  432d40:	b.ne	432e40 <feof@plt+0x30140>  // b.any
  432d44:	eor	w8, w26, #0x1
  432d48:	tbz	w8, #0, 432e40 <feof@plt+0x30140>
  432d4c:	ldp	x2, x3, [x1, #8]
  432d50:	mov	x0, x21
  432d54:	mov	w1, w20
  432d58:	mov	w26, w20
  432d5c:	bl	4329cc <feof@plt+0x2fccc>
  432d60:	mov	w8, wzr
  432d64:	add	w27, w20, #0x1
  432d68:	mov	w9, #0x1                   	// #1
  432d6c:	tbnz	w0, #0, 432c70 <feof@plt+0x2ff70>
  432d70:	b	433688 <feof@plt+0x30988>
  432d74:	ldr	x2, [x21, #1272]
  432d78:	mov	x0, x21
  432d7c:	mov	w1, w20
  432d80:	mov	x3, x2
  432d84:	bl	4329cc <feof@plt+0x2fccc>
  432d88:	ldrb	w8, [x21, #1152]
  432d8c:	add	w27, w20, #0x1
  432d90:	strb	w25, [x21, #22]
  432d94:	cbz	w8, 432dd0 <feof@plt+0x300d0>
  432d98:	ldrsb	w8, [x21, #1198]
  432d9c:	mov	w9, wzr
  432da0:	cmp	w8, #0x1
  432da4:	mov	w8, #0x1                   	// #1
  432da8:	b.lt	432c70 <feof@plt+0x2ff70>  // b.tstop
  432dac:	ldrb	w10, [x21, #1120]
  432db0:	mov	w9, wzr
  432db4:	mov	w8, #0x1                   	// #1
  432db8:	cbnz	w10, 432c70 <feof@plt+0x2ff70>
  432dbc:	mov	x0, x21
  432dc0:	mov	w1, wzr
  432dc4:	mov	x2, x22
  432dc8:	bl	4223e4 <feof@plt+0x1f6e4>
  432dcc:	b	432e00 <feof@plt+0x30100>
  432dd0:	ldrb	w8, [x21, #1154]
  432dd4:	cbz	w8, 432d98 <feof@plt+0x30098>
  432dd8:	ldrb	w8, [x21, #1142]
  432ddc:	cbz	w8, 432d98 <feof@plt+0x30098>
  432de0:	ldrb	w8, [x21, #1120]
  432de4:	mov	w1, #0xa                   	// #10
  432de8:	mov	x0, x21
  432dec:	cmp	w8, #0x0
  432df0:	adrp	x8, 463000 <_obstack_memory_used@@Base+0xddd8>
  432df4:	add	x8, x8, #0xdeb
  432df8:	csel	x2, x22, x8, eq  // eq = none
  432dfc:	bl	422644 <feof@plt+0x1f944>
  432e00:	mov	w9, wzr
  432e04:	mov	w8, #0x1                   	// #1
  432e08:	b	432c70 <feof@plt+0x2ff70>
  432e0c:	ldrb	w9, [x21, #1124]
  432e10:	cbz	w9, 432f34 <feof@plt+0x30234>
  432e14:	ldrb	w9, [x21, #1152]
  432e18:	cbz	w9, 432e88 <feof@plt+0x30188>
  432e1c:	ldrb	w8, [x21, #1120]
  432e20:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e24:	adrp	x10, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e28:	add	x9, x9, #0xc71
  432e2c:	add	x10, x10, #0xca4
  432e30:	cmp	w8, #0x0
  432e34:	csel	x2, x10, x9, eq  // eq = none
  432e38:	mov	w1, #0x2                   	// #2
  432e3c:	b	432f2c <feof@plt+0x3022c>
  432e40:	adrp	x8, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e44:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e48:	adrp	x11, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e4c:	adrp	x12, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e50:	adrp	x13, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e54:	add	x8, x8, #0xd43
  432e58:	add	x9, x9, #0xd67
  432e5c:	add	x11, x11, #0xd87
  432e60:	add	x12, x12, #0xdb2
  432e64:	add	x13, x13, #0xdd2
  432e68:	tst	w28, #0xff
  432e6c:	stp	x8, x9, [x29, #-40]
  432e70:	stp	x11, x12, [x29, #-24]
  432e74:	stur	x13, [x29, #-8]
  432e78:	b.eq	432eb8 <feof@plt+0x301b8>  // b.none
  432e7c:	mov	x3, xzr
  432e80:	mov	w19, #0x4                   	// #4
  432e84:	b	432ee4 <feof@plt+0x301e4>
  432e88:	sub	w8, w8, #0x34
  432e8c:	cmp	w8, #0xf
  432e90:	mov	w1, wzr
  432e94:	b.hi	432f24 <feof@plt+0x30224>  // b.pmore
  432e98:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  432e9c:	add	x9, x9, #0x5c6
  432ea0:	adr	x10, 432eb0 <feof@plt+0x301b0>
  432ea4:	ldrb	w11, [x9, x8]
  432ea8:	add	x10, x10, x11, lsl #2
  432eac:	br	x10
  432eb0:	mov	w1, #0x2                   	// #2
  432eb4:	b	432f24 <feof@plt+0x30224>
  432eb8:	cmp	w10, #0x16
  432ebc:	b.ne	432ed4 <feof@plt+0x301d4>  // b.any
  432ec0:	tst	w26, #0x1
  432ec4:	mov	w8, #0x2                   	// #2
  432ec8:	mov	x3, xzr
  432ecc:	cinc	x19, x8, ne  // ne = any
  432ed0:	b	432ee4 <feof@plt+0x301e4>
  432ed4:	mov	x0, x21
  432ed8:	and	x19, x26, #0x1
  432edc:	bl	42d084 <feof@plt+0x2a384>
  432ee0:	mov	x3, x0
  432ee4:	sub	x8, x29, #0x28
  432ee8:	ldr	x2, [x8, x19, lsl #3]
  432eec:	ldr	x22, [sp, #8]
  432ef0:	mov	w1, #0x3                   	// #3
  432ef4:	mov	x0, x21
  432ef8:	bl	4223e4 <feof@plt+0x1f6e4>
  432efc:	b	4333a4 <feof@plt+0x306a4>
  432f00:	ldr	x8, [x23, #16]
  432f04:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  432f08:	add	x0, x0, #0xcd5
  432f0c:	mov	w2, #0x1d                  	// #29
  432f10:	ldrb	w1, [x8]
  432f14:	bl	402920 <memchr@plt>
  432f18:	cmp	x0, #0x0
  432f1c:	cset	w8, eq  // eq = none
  432f20:	lsl	w1, w8, #1
  432f24:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  432f28:	add	x2, x2, #0xcf2
  432f2c:	mov	x0, x21
  432f30:	bl	4223e4 <feof@plt+0x1f6e4>
  432f34:	mov	w20, wzr
  432f38:	mov	w28, wzr
  432f3c:	mov	x24, xzr
  432f40:	mov	x9, x21
  432f44:	ldr	x8, [x9, #56]!
  432f48:	str	x9, [sp, #24]
  432f4c:	ldp	x27, x9, [x8, #16]
  432f50:	sub	x8, x9, x27
  432f54:	cmp	x8, #0x2f
  432f58:	b.hi	432f74 <feof@plt+0x30274>  // b.pmore
  432f5c:	ldr	x1, [sp, #24]
  432f60:	mov	w2, #0x30                  	// #48
  432f64:	mov	x0, x21
  432f68:	bl	42dafc <feof@plt+0x2adfc>
  432f6c:	ldr	x8, [x21, #56]
  432f70:	ldr	x27, [x8, #16]
  432f74:	ldr	w8, [x21, #48]
  432f78:	ldrb	w9, [x27, #19]
  432f7c:	str	xzr, [x27]
  432f80:	strb	wzr, [x27, #18]
  432f84:	str	w8, [x27, #8]
  432f88:	and	w8, w9, #0xfffffff7
  432f8c:	strh	wzr, [x27, #16]
  432f90:	strb	w8, [x27, #19]
  432f94:	ldrb	w10, [x21, #1151]
  432f98:	mov	w8, #0xd7                  	// #215
  432f9c:	and	w8, w9, w8
  432fa0:	str	wzr, [x27, #12]
  432fa4:	cmp	w10, #0x0
  432fa8:	cset	w9, eq  // eq = none
  432fac:	bfi	w8, w9, #5, #1
  432fb0:	and	w9, w8, #0xbbbbbbbb
  432fb4:	strb	w9, [x27, #19]
  432fb8:	ldr	x9, [x21]
  432fbc:	cbz	x9, 432fd0 <feof@plt+0x302d0>
  432fc0:	ldrb	w9, [x9, #106]
  432fc4:	cmp	w9, #0x0
  432fc8:	cset	w9, ne  // ne = any
  432fcc:	lsl	w9, w9, #4
  432fd0:	mov	w10, #0xa0                  	// #160
  432fd4:	and	w8, w8, w10
  432fd8:	orr	w8, w9, w8
  432fdc:	strb	w8, [x27, #19]
  432fe0:	str	w20, [sp, #4]
  432fe4:	cbz	x23, 433008 <feof@plt+0x30308>
  432fe8:	ldr	x9, [x23, #16]
  432fec:	ldr	q0, [x23]
  432ff0:	add	x1, x27, #0x18
  432ff4:	mov	w10, #0x1                   	// #1
  432ff8:	str	x9, [x27, #40]
  432ffc:	stur	q0, [x27, #24]
  433000:	str	w10, [x27, #12]
  433004:	b	433020 <feof@plt+0x30320>
  433008:	orr	w8, w8, w28, lsl #3
  43300c:	orr	w8, w8, #0x4
  433010:	mov	x1, xzr
  433014:	strh	w20, [x27, #16]
  433018:	str	x24, [x27]
  43301c:	strb	w8, [x27, #19]
  433020:	ldr	x24, [sp, #24]
  433024:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x11dd8>
  433028:	mov	w23, wzr
  43302c:	ubfx	w8, w8, #3, #1
  433030:	mov	w9, #0x1                   	// #1
  433034:	mov	w22, #0x18                  	// #24
  433038:	add	x19, x19, #0x3c4
  43303c:	str	wzr, [sp, #20]
  433040:	stur	x21, [x29, #-40]
  433044:	sturb	wzr, [x29, #-30]
  433048:	stur	xzr, [x29, #-28]
  43304c:	stur	wzr, [x29, #-20]
  433050:	sturb	w9, [x29, #-32]
  433054:	sturb	w8, [x29, #-31]
  433058:	b	433080 <feof@plt+0x30380>
  43305c:	ldr	w9, [sp, #20]
  433060:	str	w8, [x1, #8]
  433064:	add	w9, w9, #0x1
  433068:	str	w9, [sp, #20]
  43306c:	mov	w23, #0x1                   	// #1
  433070:	sub	x0, x29, #0x28
  433074:	bl	435d10 <feof@plt+0x33010>
  433078:	mov	x1, xzr
  43307c:	cbz	w0, 43339c <feof@plt+0x3069c>
  433080:	cbnz	x1, 433290 <feof@plt+0x30590>
  433084:	ldr	x8, [x24]
  433088:	ldr	w9, [x27, #12]
  43308c:	ldp	x27, x10, [x8, #16]
  433090:	sub	x8, x10, x27
  433094:	orr	x10, xzr, #0x30
  433098:	madd	x9, x9, x22, x10
  43309c:	cmp	x8, x9
  4330a0:	b.cs	4330bc <feof@plt+0x303bc>  // b.hs, b.nlast
  4330a4:	mov	w2, #0x18                  	// #24
  4330a8:	mov	x0, x21
  4330ac:	mov	x1, x24
  4330b0:	bl	42dafc <feof@plt+0x2adfc>
  4330b4:	ldr	x8, [x21, #56]
  4330b8:	ldr	x27, [x8, #16]
  4330bc:	ldr	w8, [x27, #12]
  4330c0:	ldr	x20, [x21, #448]
  4330c4:	mov	x0, x21
  4330c8:	madd	x8, x8, x22, x27
  4330cc:	add	x8, x8, #0x18
  4330d0:	str	x8, [x21, #448]
  4330d4:	bl	429bf8 <feof@plt+0x26ef8>
  4330d8:	str	x20, [x21, #448]
  4330dc:	ldrb	w8, [x0, #4]
  4330e0:	str	w23, [sp, #36]
  4330e4:	cmp	w8, #0x35
  4330e8:	b.ne	433114 <feof@plt+0x30414>  // b.any
  4330ec:	ldr	x9, [x0, #8]
  4330f0:	ldrh	w10, [x9, #18]
  4330f4:	and	w10, w10, #0x3
  4330f8:	cmp	w10, #0x1
  4330fc:	b.ne	433114 <feof@plt+0x30414>  // b.any
  433100:	mov	w8, #0x50                  	// #80
  433104:	strb	w8, [x0, #4]
  433108:	ldrh	w8, [x9, #24]
  43310c:	str	w8, [x0, #8]
  433110:	b	433270 <feof@plt+0x30570>
  433114:	ldrb	w9, [x21, #1138]
  433118:	cbz	w9, 433270 <feof@plt+0x30570>
  43311c:	ldrh	w9, [x27, #16]
  433120:	cbz	w9, 433270 <feof@plt+0x30570>
  433124:	cmp	w8, #0x3e
  433128:	b.eq	433134 <feof@plt+0x30434>  // b.none
  43312c:	cmp	w8, #0x38
  433130:	b.ne	433270 <feof@plt+0x30570>  // b.any
  433134:	ldr	w8, [x0, #8]
  433138:	cmp	w8, #0x3
  43313c:	b.cc	433270 <feof@plt+0x30570>  // b.lo, b.ul, b.last
  433140:	ldr	x9, [x0, #16]
  433144:	add	x8, x8, x9
  433148:	sub	x23, x8, #0x1
  43314c:	add	x24, x9, #0x1
  433150:	b	433160 <feof@plt+0x30460>
  433154:	ldr	x21, [sp, #40]
  433158:	cmp	x24, x23
  43315c:	b.cs	433270 <feof@plt+0x30570>  // b.hs, b.nlast
  433160:	mov	w11, #0x204                 	// #516
  433164:	cmp	x24, x23
  433168:	b.cc	4331c8 <feof@plt+0x304c8>  // b.lo, b.ul, b.last
  43316c:	cmp	x24, x23
  433170:	b.cs	4331e8 <feof@plt+0x304e8>  // b.hs, b.nlast
  433174:	mov	x8, x24
  433178:	b	433188 <feof@plt+0x30488>
  43317c:	add	x8, x8, #0x1
  433180:	cmp	x23, x8
  433184:	b.eq	4331f8 <feof@plt+0x304f8>  // b.none
  433188:	ldrb	w9, [x8]
  43318c:	ldrh	w10, [x19, x9, lsl #1]
  433190:	tst	w10, w11
  433194:	b.ne	43317c <feof@plt+0x3047c>  // b.any
  433198:	cmp	w9, #0x24
  43319c:	b.ne	4331a8 <feof@plt+0x304a8>  // b.any
  4331a0:	ldrb	w9, [x21, #1146]
  4331a4:	cbnz	w9, 43317c <feof@plt+0x3047c>
  4331a8:	mov	x22, x24
  4331ac:	mov	x24, x8
  4331b0:	ldrh	w20, [x27, #16]
  4331b4:	cbnz	x20, 433210 <feof@plt+0x30510>
  4331b8:	b	433154 <feof@plt+0x30454>
  4331bc:	add	x24, x24, #0x1
  4331c0:	cmp	x23, x24
  4331c4:	b.eq	433200 <feof@plt+0x30500>  // b.none
  4331c8:	ldrb	w8, [x24]
  4331cc:	ldrh	w9, [x19, x8, lsl #1]
  4331d0:	tbnz	w9, #9, 43316c <feof@plt+0x3046c>
  4331d4:	cmp	w8, #0x24
  4331d8:	b.ne	4331bc <feof@plt+0x304bc>  // b.any
  4331dc:	ldrb	w8, [x21, #1146]
  4331e0:	cbz	w8, 4331bc <feof@plt+0x304bc>
  4331e4:	b	43316c <feof@plt+0x3046c>
  4331e8:	mov	x22, x24
  4331ec:	ldrh	w20, [x27, #16]
  4331f0:	cbnz	x20, 433210 <feof@plt+0x30510>
  4331f4:	b	433154 <feof@plt+0x30454>
  4331f8:	mov	x22, x24
  4331fc:	b	433204 <feof@plt+0x30504>
  433200:	mov	x22, x23
  433204:	mov	x24, x23
  433208:	ldrh	w20, [x27, #16]
  43320c:	cbz	x20, 433154 <feof@plt+0x30454>
  433210:	ldr	x28, [x27]
  433214:	sub	x21, x24, x22
  433218:	and	x25, x21, #0xffffffff
  43321c:	b	43322c <feof@plt+0x3052c>
  433220:	subs	x20, x20, #0x1
  433224:	add	x28, x28, #0x8
  433228:	b.eq	433154 <feof@plt+0x30454>  // b.none
  43322c:	ldr	x8, [x28]
  433230:	ldr	w9, [x8, #8]
  433234:	cmp	w9, w21
  433238:	b.ne	433220 <feof@plt+0x30520>  // b.any
  43323c:	ldr	x26, [x8]
  433240:	mov	x0, x22
  433244:	mov	x2, x25
  433248:	mov	x1, x26
  43324c:	bl	402cb0 <bcmp@plt>
  433250:	cbnz	w0, 433220 <feof@plt+0x30520>
  433254:	ldr	x0, [sp, #40]
  433258:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43325c:	mov	w1, #0x6                   	// #6
  433260:	add	x2, x2, #0xea9
  433264:	mov	x3, x26
  433268:	bl	422514 <feof@plt+0x1f814>
  43326c:	b	433154 <feof@plt+0x30454>
  433270:	ldr	w8, [x27, #12]
  433274:	ldr	x24, [sp, #24]
  433278:	ldr	w23, [sp, #36]
  43327c:	mov	w22, #0x18                  	// #24
  433280:	add	w9, w8, #0x1
  433284:	madd	x8, x8, x22, x27
  433288:	add	x1, x8, #0x18
  43328c:	str	w9, [x27, #12]
  433290:	ldr	w8, [x27, #12]
  433294:	cmp	w8, #0x2
  433298:	b.cc	433320 <feof@plt+0x30620>  // b.lo, b.ul, b.last
  43329c:	ldurb	w9, [x1, #-20]
  4332a0:	cmp	w9, #0x25
  4332a4:	b.ne	433320 <feof@plt+0x30620>  // b.any
  4332a8:	ldrb	w9, [x27, #19]
  4332ac:	tbz	w9, #2, 433320 <feof@plt+0x30620>
  4332b0:	ldrb	w9, [x1, #4]
  4332b4:	cmp	w9, #0x50
  4332b8:	b.ne	433314 <feof@plt+0x30614>  // b.any
  4332bc:	ldrh	w9, [x1, #6]
  4332c0:	sub	x8, x1, #0x18
  4332c4:	tbz	w9, #0, 4332d0 <feof@plt+0x305d0>
  4332c8:	orr	w9, w9, #0x200
  4332cc:	strh	w9, [x1, #6]
  4332d0:	ldurh	w10, [x1, #-18]
  4332d4:	tbz	w10, #1, 4332e0 <feof@plt+0x305e0>
  4332d8:	orr	w9, w9, #0x100
  4332dc:	strh	w9, [x1, #6]
  4332e0:	and	w9, w9, #0xfffffffe
  4332e4:	and	w10, w10, #0x1
  4332e8:	orr	w9, w10, w9
  4332ec:	orr	w9, w9, #0x4
  4332f0:	strh	w9, [x1, #6]
  4332f4:	ldr	x9, [x1, #16]
  4332f8:	ldr	q0, [x1]
  4332fc:	str	x9, [x8, #16]
  433300:	str	q0, [x8]
  433304:	ldr	w8, [x27, #12]
  433308:	sub	w8, w8, #0x1
  43330c:	str	w8, [x27, #12]
  433310:	b	433320 <feof@plt+0x30620>
  433314:	ldr	w9, [x21, #1116]
  433318:	cmp	w9, #0x15
  43331c:	b.ne	43361c <feof@plt+0x3091c>  // b.any
  433320:	ldrb	w9, [x1, #4]
  433324:	cmp	w9, #0x26
  433328:	b.eq	43333c <feof@plt+0x3063c>  // b.none
  43332c:	cmp	w9, #0x16
  433330:	b.eq	433384 <feof@plt+0x30684>  // b.none
  433334:	mov	w23, wzr
  433338:	b	433070 <feof@plt+0x30370>
  43333c:	subs	w8, w8, #0x1
  433340:	b.eq	433388 <feof@plt+0x30688>  // b.none
  433344:	tbnz	w23, #0, 43305c <feof@plt+0x3035c>
  433348:	str	w8, [x27, #12]
  43334c:	ldurh	w8, [x1, #-18]
  433350:	ldrh	w10, [x1, #6]
  433354:	orr	w9, w8, #0x8
  433358:	tst	w10, #0x3
  43335c:	sturh	w9, [x1, #-18]
  433360:	b.eq	43306c <feof@plt+0x3036c>  // b.none
  433364:	mov	w12, #0x108                 	// #264
  433368:	orr	w8, w8, w12
  43336c:	tst	w10, #0x2
  433370:	and	w11, w10, #0x1
  433374:	csel	w8, w9, w8, eq  // eq = none
  433378:	orr	w8, w8, w11, lsl #9
  43337c:	sturh	w8, [x1, #-18]
  433380:	b	43306c <feof@plt+0x3036c>
  433384:	tbz	w23, #0, 4334f8 <feof@plt+0x307f8>
  433388:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43338c:	add	x2, x2, #0xc3b
  433390:	mov	w1, #0x3                   	// #3
  433394:	mov	x0, x21
  433398:	bl	4223e4 <feof@plt+0x1f6e4>
  43339c:	ldr	x22, [sp, #8]
  4333a0:	ldr	w20, [sp, #4]
  4333a4:	mov	x23, xzr
  4333a8:	strb	wzr, [x21, #22]
  4333ac:	cbz	w20, 4333ec <feof@plt+0x306ec>
  4333b0:	sub	w8, w20, #0x1
  4333b4:	mov	w9, #0x18                  	// #24
  4333b8:	umull	x8, w8, w9
  4333bc:	ldr	x9, [x21, #504]
  4333c0:	sub	w20, w20, #0x1
  4333c4:	add	x9, x9, x8
  4333c8:	ldr	x10, [x9]
  4333cc:	ldrh	w11, [x9, #16]
  4333d0:	sub	x8, x8, #0x18
  4333d4:	ldrh	w12, [x10, #18]
  4333d8:	bfxil	w12, w11, #0, #2
  4333dc:	strh	w12, [x10, #18]
  4333e0:	ldr	x9, [x9, #8]
  4333e4:	str	x9, [x10, #24]
  4333e8:	cbnz	w20, 4333bc <feof@plt+0x306bc>
  4333ec:	cbz	x23, 433470 <feof@plt+0x30770>
  4333f0:	ldrh	w19, [x22, #18]
  4333f4:	tbz	w19, #1, 433744 <feof@plt+0x30a44>
  4333f8:	and	w8, w19, #0x3
  4333fc:	cmp	w8, #0x2
  433400:	b.ne	43344c <feof@plt+0x3074c>  // b.any
  433404:	ldrb	w8, [x21, #1151]
  433408:	cbz	w8, 43344c <feof@plt+0x3074c>
  43340c:	ldr	x19, [x22, #24]
  433410:	ldrb	w8, [x19, #19]
  433414:	tbnz	w8, #5, 43344c <feof@plt+0x3074c>
  433418:	ldr	x0, [x21, #40]
  43341c:	ldr	w1, [x19, #8]
  433420:	bl	42e10c <feof@plt+0x2b40c>
  433424:	ldr	w8, [x0, #20]
  433428:	cbnz	w8, 43344c <feof@plt+0x3074c>
  43342c:	ldr	w2, [x19, #8]
  433430:	ldr	x5, [x22]
  433434:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  433438:	add	x4, x4, #0x650
  43343c:	mov	w1, #0xe                   	// #14
  433440:	mov	x0, x21
  433444:	mov	w3, wzr
  433448:	bl	4229a0 <feof@plt+0x1fca0>
  43344c:	ldrh	w8, [x22, #18]
  433450:	tbnz	w8, #5, 4336c8 <feof@plt+0x309c8>
  433454:	mvn	w9, w8
  433458:	tst	w9, #0x3
  43345c:	b.ne	433478 <feof@plt+0x30778>  // b.any
  433460:	ldr	x8, [sp, #40]
  433464:	ldrb	w8, [x8, #1143]
  433468:	cbnz	w8, 4336c8 <feof@plt+0x309c8>
  43346c:	b	433730 <feof@plt+0x30a30>
  433470:	mov	w0, wzr
  433474:	b	43377c <feof@plt+0x30a7c>
  433478:	tbnz	w8, #8, 433730 <feof@plt+0x30a30>
  43347c:	ldr	x21, [x22, #24]
  433480:	ldrb	w8, [x21, #18]
  433484:	cbz	w8, 4334a0 <feof@plt+0x307a0>
  433488:	ldr	x0, [sp, #40]
  43348c:	sub	w2, w8, #0x1
  433490:	mov	x1, x21
  433494:	ldr	x9, [x0, #1048]
  433498:	blr	x9
  43349c:	strb	wzr, [x21, #18]
  4334a0:	ldrh	w9, [x21, #16]
  4334a4:	ldrh	w8, [x23, #16]
  4334a8:	cmp	w9, w8
  4334ac:	b.ne	4336c8 <feof@plt+0x309c8>  // b.any
  4334b0:	ldrb	w8, [x21, #19]
  4334b4:	ldrb	w10, [x23, #19]
  4334b8:	eor	w10, w10, w8
  4334bc:	tst	w10, #0xc
  4334c0:	b.ne	4336c8 <feof@plt+0x309c8>  // b.any
  4334c4:	sub	w9, w9, #0x1
  4334c8:	cmn	w9, #0x1
  4334cc:	b.eq	43364c <feof@plt+0x3094c>  // b.none
  4334d0:	ldr	x10, [x21]
  4334d4:	ldr	x11, [x23]
  4334d8:	mov	w12, w9
  4334dc:	lsl	x12, x12, #3
  4334e0:	ldr	x10, [x10, x12]
  4334e4:	ldr	x11, [x11, x12]
  4334e8:	sub	w9, w9, #0x1
  4334ec:	cmp	x10, x11
  4334f0:	b.eq	4334c8 <feof@plt+0x307c8>  // b.none
  4334f4:	b	4336c8 <feof@plt+0x309c8>
  4334f8:	ldurb	w8, [x29, #-31]
  4334fc:	cbz	w8, 433520 <feof@plt+0x30820>
  433500:	ldur	w8, [x29, #-28]
  433504:	cbz	w8, 433528 <feof@plt+0x30828>
  433508:	ldur	x0, [x29, #-40]
  43350c:	ldur	w2, [x29, #-20]
  433510:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  433514:	add	x3, x3, #0xee3
  433518:	mov	w1, #0x3                   	// #3
  43351c:	bl	422c94 <feof@plt+0x1ff94>
  433520:	ldur	w8, [x29, #-28]
  433524:	cbnz	w8, 43339c <feof@plt+0x3069c>
  433528:	ldr	w8, [x27, #12]
  43352c:	mov	w9, #0x18                  	// #24
  433530:	mov	x0, x21
  433534:	sub	w8, w8, #0x1
  433538:	str	w8, [x27, #12]
  43353c:	umull	x8, w8, w9
  433540:	add	x1, x8, #0x18
  433544:	bl	42dcf0 <feof@plt+0x2aff0>
  433548:	ldr	w8, [x0, #12]
  43354c:	mov	x23, x0
  433550:	cbz	w8, 433560 <feof@plt+0x30860>
  433554:	ldrh	w9, [x23, #30]
  433558:	and	w9, w9, #0xfffe
  43355c:	strh	w9, [x23, #30]
  433560:	ldr	x22, [sp, #8]
  433564:	ldr	w20, [sp, #4]
  433568:	ldr	w12, [sp, #20]
  43356c:	cbz	w12, 4333a8 <feof@plt+0x306a8>
  433570:	ldr	x9, [x24]
  433574:	mov	x11, x24
  433578:	ldp	x1, x10, [x9, #16]
  43357c:	mov	w9, #0x18                  	// #24
  433580:	umull	x24, w12, w9
  433584:	sub	x9, x10, x1
  433588:	cmp	x9, x24
  43358c:	b.cs	4335ac <feof@plt+0x308ac>  // b.hs, b.nlast
  433590:	mov	x0, x21
  433594:	mov	x1, x11
  433598:	mov	x2, x24
  43359c:	bl	42dafc <feof@plt+0x2adfc>
  4335a0:	ldr	x8, [x21, #56]
  4335a4:	ldr	x1, [x8, #16]
  4335a8:	ldr	w8, [x23, #12]
  4335ac:	add	x9, x23, #0x18
  4335b0:	cbz	w8, 433628 <feof@plt+0x30928>
  4335b4:	mov	w11, wzr
  4335b8:	mov	w10, wzr
  4335bc:	mov	w13, wzr
  4335c0:	mov	w12, #0x18                  	// #24
  4335c4:	b	4335ec <feof@plt+0x308ec>
  4335c8:	ldr	x15, [x14, #16]
  4335cc:	ldr	q0, [x14]
  4335d0:	umaddl	x14, w10, w12, x9
  4335d4:	add	w10, w10, #0x1
  4335d8:	str	x15, [x14, #16]
  4335dc:	str	q0, [x14]
  4335e0:	add	w11, w11, #0x1
  4335e4:	cmp	w11, w8
  4335e8:	b.eq	43362c <feof@plt+0x3092c>  // b.none
  4335ec:	umaddl	x14, w11, w12, x9
  4335f0:	ldrb	w15, [x14, #4]
  4335f4:	cmp	w15, #0x26
  4335f8:	b.ne	4335c8 <feof@plt+0x308c8>  // b.any
  4335fc:	ldr	x8, [x14, #16]
  433600:	ldr	q0, [x14]
  433604:	umaddl	x14, w13, w12, x1
  433608:	add	w13, w13, #0x1
  43360c:	str	x8, [x14, #16]
  433610:	str	q0, [x14]
  433614:	ldr	w8, [x23, #12]
  433618:	b	4335e0 <feof@plt+0x308e0>
  43361c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  433620:	add	x2, x2, #0xd1a
  433624:	b	433390 <feof@plt+0x30690>
  433628:	mov	w10, wzr
  43362c:	mov	w8, #0x18                  	// #24
  433630:	umaddl	x0, w10, w8, x9
  433634:	mov	x2, x24
  433638:	bl	402640 <memcpy@plt>
  43363c:	ldrb	w8, [x23, #19]
  433640:	orr	w8, w8, #0x40
  433644:	strb	w8, [x23, #19]
  433648:	b	4333a8 <feof@plt+0x306a8>
  43364c:	and	w8, w8, #0x3
  433650:	cmp	w8, #0x2
  433654:	b.ne	433690 <feof@plt+0x30990>  // b.any
  433658:	mov	x0, x21
  43365c:	mov	x1, x23
  433660:	bl	4388ac <feof@plt+0x35bac>
  433664:	tbnz	w0, #0, 4336c8 <feof@plt+0x309c8>
  433668:	b	433730 <feof@plt+0x30a30>
  43366c:	mov	w8, w20
  433670:	lsl	x1, x8, #3
  433674:	mov	x0, x21
  433678:	bl	42dcf0 <feof@plt+0x2aff0>
  43367c:	mov	x24, x0
  433680:	mov	x23, xzr
  433684:	b	432f40 <feof@plt+0x30240>
  433688:	ldr	x22, [sp, #8]
  43368c:	b	4333a4 <feof@plt+0x306a4>
  433690:	ldr	w19, [x21, #12]
  433694:	ldr	w8, [x23, #12]
  433698:	cmp	w19, w8
  43369c:	b.ne	4336c8 <feof@plt+0x309c8>  // b.any
  4336a0:	mov	w20, #0x18                  	// #24
  4336a4:	cbz	x19, 433730 <feof@plt+0x30a30>
  4336a8:	sub	w8, w19, #0x1
  4336ac:	umaddl	x9, w8, w20, x21
  4336b0:	umaddl	x8, w8, w20, x23
  4336b4:	add	x0, x9, #0x18
  4336b8:	add	x1, x8, #0x18
  4336bc:	bl	42d3ac <feof@plt+0x2a6ac>
  4336c0:	sub	x19, x19, #0x1
  4336c4:	cbnz	w0, 4336a4 <feof@plt+0x309a4>
  4336c8:	ldr	x0, [sp, #40]
  4336cc:	ldrh	w8, [x22, #18]
  4336d0:	mov	w9, #0x23                  	// #35
  4336d4:	ldr	x5, [x22]
  4336d8:	ldr	w2, [x0, #48]
  4336dc:	and	w8, w8, w9
  4336e0:	cmp	w8, #0x3
  4336e4:	mov	w8, #0xb                   	// #11
  4336e8:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  4336ec:	csel	w1, w8, wzr, eq  // eq = none
  4336f0:	add	x4, x4, #0x906
  4336f4:	mov	w3, wzr
  4336f8:	bl	422a9c <feof@plt+0x1fd9c>
  4336fc:	tbz	w0, #0, 433730 <feof@plt+0x30a30>
  433700:	ldrh	w8, [x22, #18]
  433704:	and	w8, w8, #0x3
  433708:	cmp	w8, #0x2
  43370c:	b.ne	433730 <feof@plt+0x30a30>  // b.any
  433710:	ldr	x8, [x22, #24]
  433714:	ldr	x0, [sp, #40]
  433718:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  43371c:	add	x4, x4, #0x915
  433720:	ldr	w2, [x8, #8]
  433724:	mov	w1, #0x5                   	// #5
  433728:	mov	w3, wzr
  43372c:	bl	4228a4 <feof@plt+0x1fba4>
  433730:	ldrh	w8, [x22, #18]
  433734:	mov	w9, #0xffffff3c            	// #-196
  433738:	str	xzr, [x22, #24]
  43373c:	and	w19, w8, w9
  433740:	strh	w19, [x22, #18]
  433744:	ldr	x20, [x22]
  433748:	and	w8, w19, #0xfffffffc
  43374c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  433750:	orr	w21, w8, #0x2
  433754:	add	x1, x1, #0x945
  433758:	mov	w2, #0x7                   	// #7
  43375c:	mov	x0, x20
  433760:	strh	w21, [x22, #18]
  433764:	str	x23, [x22, #24]
  433768:	bl	402980 <strncmp@plt>
  43376c:	cbz	w0, 43379c <feof@plt+0x30a9c>
  433770:	and	w8, w21, #0xfffffeff
  433774:	mov	w0, #0x1                   	// #1
  433778:	strh	w8, [x22, #18]
  43377c:	ldp	x20, x19, [sp, #192]
  433780:	ldp	x22, x21, [sp, #176]
  433784:	ldp	x24, x23, [sp, #160]
  433788:	ldp	x26, x25, [sp, #144]
  43378c:	ldp	x28, x27, [sp, #128]
  433790:	ldp	x29, x30, [sp, #112]
  433794:	add	sp, sp, #0xd0
  433798:	ret
  43379c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4337a0:	add	x1, x1, #0x94d
  4337a4:	mov	x0, x20
  4337a8:	bl	402b40 <strcmp@plt>
  4337ac:	cbz	w0, 433770 <feof@plt+0x30a70>
  4337b0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4337b4:	add	x1, x1, #0x962
  4337b8:	mov	x0, x20
  4337bc:	bl	402b40 <strcmp@plt>
  4337c0:	cbz	w0, 433770 <feof@plt+0x30a70>
  4337c4:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4337c8:	add	x1, x1, #0x976
  4337cc:	mov	x0, x20
  4337d0:	bl	402b40 <strcmp@plt>
  4337d4:	cbz	w0, 433770 <feof@plt+0x30a70>
  4337d8:	mov	w9, #0xfffffc02            	// #-1022
  4337dc:	and	w8, w19, #0x3fc
  4337e0:	and	w9, w21, w9
  4337e4:	orr	w8, w8, w9
  4337e8:	orr	w21, w8, #0x20
  4337ec:	strh	w21, [x22, #18]
  4337f0:	b	433770 <feof@plt+0x30a70>
  4337f4:	ldr	x8, [x1, #24]
  4337f8:	add	w9, w2, #0x1
  4337fc:	strb	w9, [x8, #18]
  433800:	ret
  433804:	stp	x29, x30, [sp, #-48]!
  433808:	stp	x20, x19, [sp, #32]
  43380c:	ldrh	w8, [x1, #18]
  433810:	mov	x19, x1
  433814:	mov	x20, x0
  433818:	str	x21, [sp, #16]
  43381c:	orr	w9, w8, #0x80
  433820:	ands	w8, w8, #0x3
  433824:	mov	x29, sp
  433828:	strh	w9, [x1, #18]
  43382c:	b.eq	433888 <feof@plt+0x30b88>  // b.none
  433830:	cmp	w8, #0x3
  433834:	b.eq	433864 <feof@plt+0x30b64>  // b.none
  433838:	cmp	w8, #0x2
  43383c:	b.ne	4338a0 <feof@plt+0x30ba0>  // b.any
  433840:	ldr	x21, [x19, #24]
  433844:	ldrb	w8, [x21, #18]
  433848:	cbz	w8, 433864 <feof@plt+0x30b64>
  43384c:	ldr	x9, [x20, #1048]
  433850:	sub	w2, w8, #0x1
  433854:	mov	x0, x20
  433858:	mov	x1, x21
  43385c:	blr	x9
  433860:	strb	wzr, [x21, #18]
  433864:	ldr	x3, [x20, #1008]
  433868:	cbz	x3, 433890 <feof@plt+0x30b90>
  43386c:	ldr	w1, [x20, #48]
  433870:	mov	x0, x20
  433874:	mov	x2, x19
  433878:	ldp	x20, x19, [sp, #32]
  43387c:	ldr	x21, [sp, #16]
  433880:	ldp	x29, x30, [sp], #48
  433884:	br	x3
  433888:	ldr	x3, [x20, #1016]
  43388c:	cbnz	x3, 43386c <feof@plt+0x30b6c>
  433890:	ldp	x20, x19, [sp, #32]
  433894:	ldr	x21, [sp, #16]
  433898:	ldp	x29, x30, [sp], #48
  43389c:	ret
  4338a0:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  4338a4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  4338a8:	add	x0, x0, #0x6ee
  4338ac:	add	x2, x2, #0x98d
  4338b0:	mov	w1, #0xe0b                 	// #3595
  4338b4:	bl	408b70 <feof@plt+0x5e70>
  4338b8:	stp	x29, x30, [sp, #-80]!
  4338bc:	stp	x26, x25, [sp, #16]
  4338c0:	stp	x24, x23, [sp, #32]
  4338c4:	stp	x22, x21, [sp, #48]
  4338c8:	stp	x20, x19, [sp, #64]
  4338cc:	ldr	x20, [x1, #24]
  4338d0:	ldr	w9, [x1, #8]
  4338d4:	mov	x21, x1
  4338d8:	mov	x19, x0
  4338dc:	ldrb	w8, [x20, #19]
  4338e0:	add	w9, w9, w9, lsl #2
  4338e4:	lsl	w10, w9, #1
  4338e8:	mov	x29, sp
  4338ec:	tbnz	w8, #2, 4338f8 <feof@plt+0x30bf8>
  4338f0:	add	w23, w10, #0x2
  4338f4:	b	433978 <feof@plt+0x30c78>
  4338f8:	ldrh	w9, [x20, #16]
  4338fc:	add	w23, w10, #0x6
  433900:	cbz	x9, 433978 <feof@plt+0x30c78>
  433904:	ldr	x10, [x20]
  433908:	cmp	w9, #0x1
  43390c:	b.ne	433918 <feof@plt+0x30c18>  // b.any
  433910:	mov	x11, xzr
  433914:	b	43395c <feof@plt+0x30c5c>
  433918:	and	x11, x9, #0xfffe
  43391c:	mov	w12, wzr
  433920:	add	x13, x10, #0x8
  433924:	mov	x14, x11
  433928:	ldp	x15, x16, [x13, #-8]
  43392c:	subs	x14, x14, #0x2
  433930:	add	x13, x13, #0x10
  433934:	ldr	w15, [x15, #8]
  433938:	ldr	w16, [x16, #8]
  43393c:	add	w15, w23, w15
  433940:	add	w12, w12, w16
  433944:	add	w23, w15, #0x1
  433948:	add	w12, w12, #0x1
  43394c:	b.ne	433928 <feof@plt+0x30c28>  // b.any
  433950:	cmp	x11, x9
  433954:	add	w23, w12, w23
  433958:	b.eq	433978 <feof@plt+0x30c78>  // b.none
  43395c:	ldr	x12, [x10, x11, lsl #3]
  433960:	add	x11, x11, #0x1
  433964:	cmp	x11, x9
  433968:	ldr	w12, [x12, #8]
  43396c:	add	w12, w23, w12
  433970:	add	w23, w12, #0x1
  433974:	b.cc	43395c <feof@plt+0x30c5c>  // b.lo, b.ul, b.last
  433978:	ldrb	w9, [x19, #1160]
  43397c:	cbz	w9, 433a94 <feof@plt+0x30d94>
  433980:	mov	x0, x20
  433984:	bl	438400 <feof@plt+0x35700>
  433988:	add	w23, w23, w0
  43398c:	ldr	w8, [x19, #512]
  433990:	ldr	x0, [x19, #504]
  433994:	cmp	w23, w8
  433998:	b.ls	4339ac <feof@plt+0x30cac>  // b.plast
  43399c:	mov	w1, w23
  4339a0:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4339a4:	str	x0, [x19, #504]
  4339a8:	str	w23, [x19, #512]
  4339ac:	mov	x1, x21
  4339b0:	bl	42cda4 <feof@plt+0x2a0a4>
  4339b4:	ldrb	w8, [x20, #19]
  4339b8:	mov	x21, x0
  4339bc:	tbz	w8, #2, 433a54 <feof@plt+0x30d54>
  4339c0:	mov	w8, #0x28                  	// #40
  4339c4:	strb	w8, [x21], #1
  4339c8:	ldrh	w8, [x20, #16]
  4339cc:	cbz	w8, 433a4c <feof@plt+0x30d4c>
  4339d0:	mov	x22, xzr
  4339d4:	mov	w23, #0x2c                  	// #44
  4339d8:	mov	w24, #0x2e2e                	// #11822
  4339dc:	mov	w25, #0x2e                  	// #46
  4339e0:	b	4339f4 <feof@plt+0x30cf4>
  4339e4:	strb	w23, [x21], #1
  4339e8:	ldrh	w8, [x20, #16]
  4339ec:	cmp	x22, x8
  4339f0:	b.cs	433a4c <feof@plt+0x30d4c>  // b.hs, b.nlast
  4339f4:	ldr	x9, [x20]
  4339f8:	ldr	x26, [x9, x22, lsl #3]
  4339fc:	ldr	x9, [x19, #1272]
  433a00:	cmp	x26, x9
  433a04:	b.eq	433a24 <feof@plt+0x30d24>  // b.none
  433a08:	ldr	x1, [x26]
  433a0c:	ldr	w2, [x26, #8]
  433a10:	mov	x0, x21
  433a14:	bl	402640 <memcpy@plt>
  433a18:	ldr	w9, [x26, #8]
  433a1c:	ldrh	w8, [x20, #16]
  433a20:	add	x21, x21, x9
  433a24:	add	x22, x22, #0x1
  433a28:	cmp	x22, w8, uxth
  433a2c:	b.cc	4339e4 <feof@plt+0x30ce4>  // b.lo, b.ul, b.last
  433a30:	ldrb	w8, [x20, #19]
  433a34:	tbz	w8, #3, 4339e8 <feof@plt+0x30ce8>
  433a38:	add	x8, x21, #0x3
  433a3c:	strh	w24, [x21]
  433a40:	strb	w25, [x21, #2]
  433a44:	mov	x21, x8
  433a48:	b	4339e8 <feof@plt+0x30ce8>
  433a4c:	mov	w8, #0x29                  	// #41
  433a50:	strb	w8, [x21], #1
  433a54:	mov	w8, #0x20                  	// #32
  433a58:	strb	w8, [x21], #1
  433a5c:	ldrb	w8, [x19, #1160]
  433a60:	cbz	w8, 433afc <feof@plt+0x30dfc>
  433a64:	mov	x0, x20
  433a68:	mov	x1, x21
  433a6c:	bl	438464 <feof@plt+0x35764>
  433a70:	mov	x21, x0
  433a74:	strb	wzr, [x21]
  433a78:	ldr	x0, [x19, #504]
  433a7c:	ldp	x20, x19, [sp, #64]
  433a80:	ldp	x22, x21, [sp, #48]
  433a84:	ldp	x24, x23, [sp, #32]
  433a88:	ldp	x26, x25, [sp, #16]
  433a8c:	ldp	x29, x30, [sp], #80
  433a90:	ret
  433a94:	ldr	w9, [x20, #12]
  433a98:	tbnz	w8, #6, 433bb4 <feof@plt+0x30eb4>
  433a9c:	cbz	w9, 43398c <feof@plt+0x30c8c>
  433aa0:	mov	w24, w9
  433aa4:	add	x22, x20, #0x18
  433aa8:	b	433ae4 <feof@plt+0x30de4>
  433aac:	mov	x0, x22
  433ab0:	bl	42cd5c <feof@plt+0x2a05c>
  433ab4:	ldrh	w8, [x22, #6]
  433ab8:	add	w9, w0, w23
  433abc:	add	x22, x22, #0x18
  433ac0:	ubfx	w10, w8, #2, #1
  433ac4:	add	w9, w9, w10
  433ac8:	tst	w8, #0x8
  433acc:	add	w10, w9, #0x3
  433ad0:	and	w8, w8, #0x1
  433ad4:	csel	w9, w9, w10, eq  // eq = none
  433ad8:	subs	x24, x24, #0x1
  433adc:	add	w23, w9, w8
  433ae0:	b.eq	43398c <feof@plt+0x30c8c>  // b.none
  433ae4:	ldrb	w8, [x22, #4]
  433ae8:	cmp	w8, #0x50
  433aec:	b.ne	433aac <feof@plt+0x30dac>  // b.any
  433af0:	ldr	x8, [x22, #16]
  433af4:	ldr	w0, [x8, #8]
  433af8:	b	433ab4 <feof@plt+0x30db4>
  433afc:	ldr	w8, [x20, #12]
  433b00:	cbz	w8, 433a74 <feof@plt+0x30d74>
  433b04:	ldrb	w9, [x20, #19]
  433b08:	tbnz	w9, #6, 433be0 <feof@plt+0x30ee0>
  433b0c:	mov	w22, w8
  433b10:	add	x20, x20, #0x18
  433b14:	mov	w23, #0x2320                	// #8992
  433b18:	mov	w24, #0x23                  	// #35
  433b1c:	mov	w25, #0x20                  	// #32
  433b20:	b	433b30 <feof@plt+0x30e30>
  433b24:	subs	x22, x22, #0x1
  433b28:	add	x20, x20, #0x18
  433b2c:	b.eq	433a74 <feof@plt+0x30d74>  // b.none
  433b30:	ldrh	w8, [x20, #6]
  433b34:	tbz	w8, #0, 433b40 <feof@plt+0x30e40>
  433b38:	strb	w25, [x21], #1
  433b3c:	ldrh	w8, [x20, #6]
  433b40:	tbz	w8, #2, 433b48 <feof@plt+0x30e48>
  433b44:	strb	w24, [x21], #1
  433b48:	ldrb	w8, [x20, #4]
  433b4c:	cmp	w8, #0x50
  433b50:	b.ne	433b80 <feof@plt+0x30e80>  // b.any
  433b54:	ldr	x8, [x20, #16]
  433b58:	mov	x0, x21
  433b5c:	ldr	x1, [x8]
  433b60:	ldr	w2, [x8, #8]
  433b64:	bl	402640 <memcpy@plt>
  433b68:	ldr	x8, [x20, #16]
  433b6c:	ldr	w8, [x8, #8]
  433b70:	add	x21, x21, x8
  433b74:	ldrb	w8, [x20, #6]
  433b78:	tbz	w8, #3, 433b24 <feof@plt+0x30e24>
  433b7c:	b	433ba0 <feof@plt+0x30ea0>
  433b80:	mov	w3, #0x1                   	// #1
  433b84:	mov	x0, x19
  433b88:	mov	x1, x20
  433b8c:	mov	x2, x21
  433b90:	bl	42cf30 <feof@plt+0x2a230>
  433b94:	mov	x21, x0
  433b98:	ldrb	w8, [x20, #6]
  433b9c:	tbz	w8, #3, 433b24 <feof@plt+0x30e24>
  433ba0:	add	x8, x21, #0x3
  433ba4:	strh	w23, [x21]
  433ba8:	strb	w24, [x21, #2]
  433bac:	mov	x21, x8
  433bb0:	b	433b24 <feof@plt+0x30e24>
  433bb4:	mov	w8, #0x18                  	// #24
  433bb8:	cbz	x9, 43398c <feof@plt+0x30c8c>
  433bbc:	sub	w10, w9, #0x1
  433bc0:	umaddl	x10, w10, w8, x20
  433bc4:	ldrb	w10, [x10, #28]
  433bc8:	sub	x9, x9, #0x1
  433bcc:	cmp	w10, #0x26
  433bd0:	b.eq	433bb8 <feof@plt+0x30eb8>  // b.none
  433bd4:	add	w9, w9, #0x1
  433bd8:	cbnz	w9, 433aa0 <feof@plt+0x30da0>
  433bdc:	b	43398c <feof@plt+0x30c8c>
  433be0:	mov	w9, #0x18                  	// #24
  433be4:	cbz	x8, 433a74 <feof@plt+0x30d74>
  433be8:	sub	w10, w8, #0x1
  433bec:	umaddl	x10, w10, w9, x20
  433bf0:	ldrb	w10, [x10, #28]
  433bf4:	sub	x8, x8, #0x1
  433bf8:	cmp	w10, #0x26
  433bfc:	b.eq	433be4 <feof@plt+0x30ee4>  // b.none
  433c00:	cmn	w8, #0x1
  433c04:	b.eq	433a74 <feof@plt+0x30d74>  // b.none
  433c08:	add	x8, x8, #0x1
  433c0c:	b	433b0c <feof@plt+0x30e0c>
  433c10:	sub	sp, sp, #0x140
  433c14:	mov	w8, #0x1                   	// #1
  433c18:	stp	x29, x30, [sp, #224]
  433c1c:	stp	x28, x27, [sp, #240]
  433c20:	stp	x26, x25, [sp, #256]
  433c24:	stp	x24, x23, [sp, #272]
  433c28:	stp	x22, x21, [sp, #288]
  433c2c:	stp	x20, x19, [sp, #304]
  433c30:	strb	wzr, [x0, #440]
  433c34:	strb	wzr, [x0, #19]
  433c38:	strb	w8, [x0, #192]
  433c3c:	ldrh	w8, [x1, #18]
  433c40:	mov	w26, w3
  433c44:	mov	x27, x1
  433c48:	mov	x19, x0
  433c4c:	and	w9, w8, #0x3
  433c50:	cmp	w9, #0x2
  433c54:	add	x29, sp, #0xe0
  433c58:	b.ne	433ccc <feof@plt+0x30fcc>  // b.any
  433c5c:	ldr	x25, [x27, #24]
  433c60:	stur	xzr, [x29, #-48]
  433c64:	str	x2, [sp, #72]
  433c68:	ldrb	w9, [x25, #19]
  433c6c:	tbz	w9, #2, 434dec <feof@plt+0x320ec>
  433c70:	stur	wzr, [x29, #-52]
  433c74:	ldrb	w8, [x19, #24]
  433c78:	ldr	w9, [x19, #500]
  433c7c:	mov	x0, xzr
  433c80:	mov	w10, #0x1                   	// #1
  433c84:	add	w8, w8, #0x1
  433c88:	add	w9, w9, #0x1
  433c8c:	strb	w8, [x19, #24]
  433c90:	str	w9, [x19, #500]
  433c94:	strb	w10, [x19, #25]
  433c98:	mov	x20, x0
  433c9c:	mov	x0, x19
  433ca0:	mov	x1, xzr
  433ca4:	bl	43211c <feof@plt+0x2f41c>
  433ca8:	ldrb	w8, [x0, #4]
  433cac:	cmp	w8, #0x53
  433cb0:	b.ne	433d2c <feof@plt+0x3102c>  // b.any
  433cb4:	cbz	x20, 433c98 <feof@plt+0x30f98>
  433cb8:	ldrb	w8, [x20, #6]
  433cbc:	tbnz	w8, #0, 433c9c <feof@plt+0x30f9c>
  433cc0:	ldr	x8, [x0, #8]
  433cc4:	cbnz	x8, 433c9c <feof@plt+0x30f9c>
  433cc8:	b	433c98 <feof@plt+0x30f98>
  433ccc:	ldr	x8, [x19, #184]
  433cd0:	strb	wzr, [x19, #192]
  433cd4:	ldrh	w9, [x8, #18]
  433cd8:	and	w9, w9, #0x3
  433cdc:	cmp	w9, #0x2
  433ce0:	b.ne	433cfc <feof@plt+0x30ffc>  // b.any
  433ce4:	ldr	x8, [x8, #24]
  433ce8:	ldrb	w8, [x8, #19]
  433cec:	tbz	w8, #2, 433cfc <feof@plt+0x30ffc>
  433cf0:	ldrb	w8, [x19, #1157]
  433cf4:	mov	w3, w26
  433cf8:	cbnz	w8, 433d00 <feof@plt+0x31000>
  433cfc:	ldr	w3, [x19, #176]
  433d00:	mov	x0, x19
  433d04:	mov	x1, x27
  433d08:	mov	w2, w26
  433d0c:	ldp	x20, x19, [sp, #304]
  433d10:	ldp	x22, x21, [sp, #288]
  433d14:	ldp	x24, x23, [sp, #272]
  433d18:	ldp	x26, x25, [sp, #256]
  433d1c:	ldp	x28, x27, [sp, #240]
  433d20:	ldp	x29, x30, [sp, #224]
  433d24:	add	sp, sp, #0x140
  433d28:	b	4353f4 <feof@plt+0x326f4>
  433d2c:	cmp	w8, #0x14
  433d30:	b.eq	433dc4 <feof@plt+0x310c4>  // b.none
  433d34:	cmp	w8, #0x16
  433d38:	b.ne	433d48 <feof@plt+0x31048>  // b.any
  433d3c:	add	x8, x19, #0x2b0
  433d40:	cmp	x0, x8
  433d44:	b.ne	433dbc <feof@plt+0x310bc>  // b.any
  433d48:	mov	w1, #0x1                   	// #1
  433d4c:	mov	x0, x19
  433d50:	bl	4328a0 <feof@plt+0x2fba0>
  433d54:	cbz	x20, 433dbc <feof@plt+0x310bc>
  433d58:	ldr	x8, [x19, #136]
  433d5c:	ldr	w9, [x8, #48]
  433d60:	cmp	w9, #0x2
  433d64:	add	x9, x8, #0x28
  433d68:	b.ne	433d70 <feof@plt+0x31070>  // b.any
  433d6c:	ldr	x9, [x9]
  433d70:	ldr	x0, [x8]
  433d74:	ldr	x21, [x9]
  433d78:	cbnz	x0, 433d9c <feof@plt+0x3109c>
  433d7c:	mov	w0, #0x38                  	// #56
  433d80:	bl	45535c <_obstack_memory_used@@Base+0x134>
  433d84:	movi	v0.2d, #0x0
  433d88:	str	xzr, [x0, #48]
  433d8c:	stp	q0, q0, [x0, #16]
  433d90:	ldr	x8, [x19, #136]
  433d94:	stp	xzr, x8, [x0]
  433d98:	str	x0, [x8]
  433d9c:	mov	x10, xzr
  433da0:	mov	w8, #0x1                   	// #1
  433da4:	add	x9, x20, #0x18
  433da8:	str	x0, [x19, #136]
  433dac:	stp	xzr, x21, [x0, #32]
  433db0:	str	w8, [x0, #48]
  433db4:	stp	x20, x9, [x0, #16]
  433db8:	b	433de4 <feof@plt+0x310e4>
  433dbc:	mov	x10, xzr
  433dc0:	b	433de4 <feof@plt+0x310e4>
  433dc4:	mov	w8, #0x2                   	// #2
  433dc8:	sub	x2, x29, #0x30
  433dcc:	sub	x3, x29, #0x34
  433dd0:	mov	x0, x19
  433dd4:	mov	x1, x27
  433dd8:	strb	w8, [x19, #25]
  433ddc:	bl	435670 <feof@plt+0x32970>
  433de0:	mov	x10, x0
  433de4:	ldr	w8, [x19, #500]
  433de8:	ldrb	w9, [x19, #24]
  433dec:	strb	wzr, [x19, #25]
  433df0:	sub	w8, w8, #0x1
  433df4:	sub	w9, w9, #0x1
  433df8:	str	w8, [x19, #500]
  433dfc:	strb	w9, [x19, #24]
  433e00:	cbz	x10, 4341e4 <feof@plt+0x314e4>
  433e04:	ldrh	w8, [x25, #16]
  433e08:	str	x10, [sp, #40]
  433e0c:	cbz	w8, 434d88 <feof@plt+0x32088>
  433e10:	ldr	x8, [sp, #40]
  433e14:	str	x25, [sp, #48]
  433e18:	str	x27, [sp, #64]
  433e1c:	str	w26, [sp, #28]
  433e20:	ldr	x28, [x8, #8]
  433e24:	stur	xzr, [x29, #-16]
  433e28:	ldrb	w8, [x25, #19]
  433e2c:	ldr	w24, [x25, #12]
  433e30:	str	x28, [sp, #112]
  433e34:	tbnz	w8, #6, 4351bc <feof@plt+0x324bc>
  433e38:	cmp	w24, #0x0
  433e3c:	cset	w8, eq  // eq = none
  433e40:	cbz	w24, 434230 <feof@plt+0x31530>
  433e44:	str	w8, [sp, #100]
  433e48:	mov	x21, xzr
  433e4c:	mov	w8, w24
  433e50:	add	x11, x19, #0x40
  433e54:	mov	w9, #0x18                  	// #24
  433e58:	mov	w23, #0x30                  	// #48
  433e5c:	mov	w20, #0x5c                  	// #92
  433e60:	mov	w10, w24
  433e64:	stur	x8, [x29, #-96]
  433e68:	stur	x11, [x29, #-80]
  433e6c:	b	433e98 <feof@plt+0x31198>
  433e70:	madd	x8, x22, x23, x28
  433e74:	ldr	w8, [x8, #24]
  433e78:	add	w8, w24, w8
  433e7c:	add	w24, w8, #0x1
  433e80:	ldur	w10, [x29, #-88]
  433e84:	mov	w9, #0x18                  	// #24
  433e88:	ldur	x8, [x29, #-96]
  433e8c:	add	x21, x21, #0x1
  433e90:	cmp	x21, x8
  433e94:	b.eq	434228 <feof@plt+0x31528>  // b.none
  433e98:	madd	x8, x21, x9, x25
  433e9c:	ldrb	w8, [x8, #28]
  433ea0:	cmp	w8, #0x50
  433ea4:	b.ne	433e88 <feof@plt+0x31188>  // b.any
  433ea8:	madd	x8, x21, x9, x25
  433eac:	ldr	w9, [x8, #32]
  433eb0:	ldrh	w8, [x8, #30]
  433eb4:	mov	w12, #0x18                  	// #24
  433eb8:	add	w10, w10, #0x2
  433ebc:	sub	w22, w9, #0x1
  433ec0:	umaddl	x9, w22, w23, x28
  433ec4:	stur	w10, [x29, #-88]
  433ec8:	stur	x9, [x29, #-64]
  433ecc:	tbnz	w8, #2, 433f0c <feof@plt+0x3120c>
  433ed0:	tbnz	w8, #3, 433e70 <feof@plt+0x31170>
  433ed4:	cbz	x21, 433ee4 <feof@plt+0x311e4>
  433ed8:	madd	x8, x21, x12, x25
  433edc:	ldrb	w8, [x8, #6]
  433ee0:	tbnz	w8, #3, 433e70 <feof@plt+0x31170>
  433ee4:	madd	x8, x22, x23, x28
  433ee8:	ldr	x8, [x8, #8]
  433eec:	cbnz	x8, 433f00 <feof@plt+0x31200>
  433ef0:	ldur	x1, [x29, #-64]
  433ef4:	mov	x0, x19
  433ef8:	bl	435b0c <feof@plt+0x32e0c>
  433efc:	ldur	x11, [x29, #-80]
  433f00:	madd	x8, x22, x23, x28
  433f04:	ldr	w8, [x8, #28]
  433f08:	b	433e78 <feof@plt+0x31178>
  433f0c:	madd	x9, x22, x23, x28
  433f10:	ldr	x8, [x9, #16]!
  433f14:	add	w24, w24, #0x2
  433f18:	cbnz	x8, 433e80 <feof@plt+0x31180>
  433f1c:	ldr	x8, [x11]
  433f20:	stur	x9, [x29, #-104]
  433f24:	ldp	x27, x9, [x8, #16]
  433f28:	sub	x8, x9, x27
  433f2c:	cmp	x8, #0x2
  433f30:	b.hi	433f4c <feof@plt+0x3124c>  // b.pmore
  433f34:	ldur	x1, [x29, #-80]
  433f38:	mov	w2, #0x3                   	// #3
  433f3c:	mov	x0, x19
  433f40:	bl	42dafc <feof@plt+0x2adfc>
  433f44:	ldr	x8, [x19, #64]
  433f48:	ldr	x27, [x8, #16]
  433f4c:	mov	w8, #0x22                  	// #34
  433f50:	strb	w8, [x27], #1
  433f54:	madd	x9, x22, x23, x28
  433f58:	ldr	w8, [x9, #24]!
  433f5c:	stur	x9, [x29, #-72]
  433f60:	cbz	w8, 434184 <feof@plt+0x31484>
  433f64:	str	x24, [sp, #104]
  433f68:	mov	x24, xzr
  433f6c:	mov	w26, wzr
  433f70:	mov	x25, xzr
  433f74:	b	433fa0 <feof@plt+0x312a0>
  433f78:	ldr	x8, [x28, #16]
  433f7c:	mov	x25, xzr
  433f80:	ldrb	w8, [x8]
  433f84:	cmp	w8, #0x5c
  433f88:	csinc	w26, wzr, w26, ne  // ne = any
  433f8c:	ldur	x8, [x29, #-72]
  433f90:	add	x24, x24, #0x1
  433f94:	ldr	w8, [x8]
  433f98:	cmp	x24, x8
  433f9c:	b.cs	434158 <feof@plt+0x31458>  // b.hs, b.nlast
  433fa0:	ldur	x8, [x29, #-64]
  433fa4:	ldr	x8, [x8]
  433fa8:	ldr	x28, [x8, x24, lsl #3]
  433fac:	ldrb	w0, [x28, #4]
  433fb0:	sub	w8, w0, #0x38
  433fb4:	cmp	w8, #0x1b
  433fb8:	b.hi	434120 <feof@plt+0x31420>  // b.pmore
  433fbc:	mov	w9, #0x1                   	// #1
  433fc0:	lsl	w9, w9, w8
  433fc4:	mov	w10, #0x7df                 	// #2015
  433fc8:	tst	w9, w10
  433fcc:	b.eq	4340fc <feof@plt+0x313fc>  // b.none
  433fd0:	mov	x0, x28
  433fd4:	bl	42cd5c <feof@plt+0x2a05c>
  433fd8:	mov	w8, w0
  433fdc:	ldur	x1, [x29, #-80]
  433fe0:	lsl	x8, x8, #2
  433fe4:	mov	w22, #0x1                   	// #1
  433fe8:	ldr	x9, [x1]
  433fec:	add	x23, x8, #0x3
  433ff0:	ldr	x10, [x9, #24]
  433ff4:	sub	x8, x10, x27
  433ff8:	cmp	x8, x23
  433ffc:	b.cs	434024 <feof@plt+0x31324>  // b.hs, b.nlast
  434000:	ldr	x8, [x9, #16]
  434004:	mov	x0, x19
  434008:	mov	x2, x23
  43400c:	sub	x27, x27, x8
  434010:	bl	42dafc <feof@plt+0x2adfc>
  434014:	ldr	x8, [x19, #64]
  434018:	ldr	x8, [x8, #16]
  43401c:	add	x27, x8, x27
  434020:	b	434028 <feof@plt+0x31328>
  434024:	ldr	x8, [x9, #16]
  434028:	sub	x9, x27, #0x1
  43402c:	cmp	x9, x8
  434030:	b.eq	43404c <feof@plt+0x3134c>  // b.none
  434034:	cmp	x25, #0x0
  434038:	csel	x8, x28, x25, eq  // eq = none
  43403c:	ldrb	w8, [x8, #6]
  434040:	tbz	w8, #0, 43404c <feof@plt+0x3134c>
  434044:	mov	w8, #0x20                  	// #32
  434048:	strb	w8, [x27], #1
  43404c:	cbz	w22, 4340bc <feof@plt+0x313bc>
  434050:	mov	x0, x19
  434054:	mov	x1, x23
  434058:	bl	42d97c <feof@plt+0x2ac7c>
  43405c:	ldr	x23, [x0, #16]
  434060:	mov	x25, x0
  434064:	mov	w3, #0x1                   	// #1
  434068:	mov	x0, x19
  43406c:	mov	x1, x28
  434070:	mov	x2, x23
  434074:	bl	42cf30 <feof@plt+0x2a230>
  434078:	cmp	w0, w23
  43407c:	b.eq	4340d8 <feof@plt+0x313d8>  // b.none
  434080:	sub	w8, w23, w0
  434084:	b	434098 <feof@plt+0x31398>
  434088:	strb	w20, [x27], #1
  43408c:	adds	w8, w8, #0x1
  434090:	strb	w9, [x27], #1
  434094:	b.cs	4340d8 <feof@plt+0x313d8>  // b.hs, b.nlast
  434098:	ldrb	w9, [x23], #1
  43409c:	cmp	w9, #0x5c
  4340a0:	b.eq	434088 <feof@plt+0x31388>  // b.none
  4340a4:	cmp	w9, #0x22
  4340a8:	b.eq	434088 <feof@plt+0x31388>  // b.none
  4340ac:	cmp	w9, #0xa
  4340b0:	b.ne	43408c <feof@plt+0x3138c>  // b.any
  4340b4:	mov	w9, #0x6e                  	// #110
  4340b8:	b	434088 <feof@plt+0x31388>
  4340bc:	mov	w3, #0x1                   	// #1
  4340c0:	mov	x0, x19
  4340c4:	mov	x1, x28
  4340c8:	mov	x2, x27
  4340cc:	bl	42cf30 <feof@plt+0x2a230>
  4340d0:	mov	x27, x0
  4340d4:	b	4340e4 <feof@plt+0x313e4>
  4340d8:	mov	x0, x19
  4340dc:	mov	x1, x25
  4340e0:	bl	42d95c <feof@plt+0x2ac5c>
  4340e4:	ldrb	w8, [x28, #4]
  4340e8:	cmp	w8, #0x3d
  4340ec:	b.eq	433f78 <feof@plt+0x31278>  // b.none
  4340f0:	mov	x25, xzr
  4340f4:	mov	w26, wzr
  4340f8:	b	433f8c <feof@plt+0x3128c>
  4340fc:	cmp	w8, #0x1b
  434100:	b.ne	434120 <feof@plt+0x31420>  // b.any
  434104:	cbz	x25, 434150 <feof@plt+0x31450>
  434108:	ldrb	w8, [x25, #6]
  43410c:	tbnz	w8, #0, 433f8c <feof@plt+0x3128c>
  434110:	ldr	x8, [x28, #8]
  434114:	cbnz	x8, 433f8c <feof@plt+0x3128c>
  434118:	mov	x25, xzr
  43411c:	b	433f8c <feof@plt+0x3128c>
  434120:	bl	42356c <feof@plt+0x2086c>
  434124:	tbnz	w0, #0, 433fd0 <feof@plt+0x312d0>
  434128:	ldrb	w0, [x28, #4]
  43412c:	bl	42357c <feof@plt+0x2087c>
  434130:	mov	w23, w0
  434134:	mov	x0, x28
  434138:	bl	42cd5c <feof@plt+0x2a05c>
  43413c:	mov	w8, w0
  434140:	tbnz	w23, #0, 433fdc <feof@plt+0x312dc>
  434144:	ldur	x1, [x29, #-80]
  434148:	mov	w22, wzr
  43414c:	b	433fe8 <feof@plt+0x312e8>
  434150:	ldr	x25, [x28, #8]
  434154:	b	433f8c <feof@plt+0x3128c>
  434158:	ldr	x25, [sp, #48]
  43415c:	ldr	x24, [sp, #104]
  434160:	tbz	w26, #0, 43417c <feof@plt+0x3147c>
  434164:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  434168:	mov	x0, x19
  43416c:	mov	w1, wzr
  434170:	add	x2, x2, #0xb84
  434174:	bl	4223e4 <feof@plt+0x1f6e4>
  434178:	sub	x27, x27, #0x1
  43417c:	ldr	w26, [sp, #28]
  434180:	ldr	x28, [sp, #112]
  434184:	mov	x8, x27
  434188:	mov	w9, #0x22                  	// #34
  43418c:	strb	w9, [x8], #2
  434190:	ldr	x9, [x19, #64]
  434194:	mov	x0, x19
  434198:	ldr	x22, [x9, #16]
  43419c:	str	x8, [x9, #16]
  4341a0:	sub	x8, x27, x22
  4341a4:	add	x23, x8, #0x1
  4341a8:	bl	429a78 <feof@plt+0x26d78>
  4341ac:	mov	w8, #0x3e                  	// #62
  4341b0:	strb	wzr, [x22, w23, uxtw]
  4341b4:	strb	w8, [x0, #4]
  4341b8:	ldur	x8, [x29, #-104]
  4341bc:	ldr	x27, [sp, #64]
  4341c0:	ldur	w10, [x29, #-88]
  4341c4:	ldur	x11, [x29, #-80]
  4341c8:	str	w23, [x0, #8]
  4341cc:	str	x22, [x0, #16]
  4341d0:	strh	wzr, [x0, #6]
  4341d4:	str	x0, [x8]
  4341d8:	mov	w9, #0x18                  	// #24
  4341dc:	mov	w23, #0x30                  	// #48
  4341e0:	b	433e88 <feof@plt+0x31188>
  4341e4:	ldrb	w8, [x19, #1138]
  4341e8:	cbz	w8, 434210 <feof@plt+0x31510>
  4341ec:	ldr	x8, [x27, #24]
  4341f0:	ldrb	w8, [x8, #19]
  4341f4:	tbnz	w8, #4, 434210 <feof@plt+0x31510>
  4341f8:	ldr	x3, [x27]
  4341fc:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  434200:	add	x2, x2, #0xa71
  434204:	mov	w1, #0x6                   	// #6
  434208:	mov	x0, x19
  43420c:	bl	422514 <feof@plt+0x1f814>
  434210:	ldur	x1, [x29, #-48]
  434214:	cbz	x1, 434220 <feof@plt+0x31520>
  434218:	mov	x0, x19
  43421c:	bl	42d95c <feof@plt+0x2ac5c>
  434220:	mov	w0, wzr
  434224:	b	435170 <feof@plt+0x32470>
  434228:	stur	w10, [x29, #-88]
  43422c:	b	434240 <feof@plt+0x31540>
  434230:	mov	w8, #0x1                   	// #1
  434234:	stur	xzr, [x29, #-96]
  434238:	stur	wzr, [x29, #-88]
  43423c:	str	w8, [sp, #100]
  434240:	ldrb	w22, [x19, #1157]
  434244:	mov	w20, w24
  434248:	lsl	x23, x20, #3
  43424c:	str	w22, [sp, #104]
  434250:	cbz	w22, 4342a8 <feof@plt+0x315a8>
  434254:	lsl	x0, x20, #4
  434258:	bl	45535c <_obstack_memory_used@@Base+0x134>
  43425c:	stur	x0, [x29, #-16]
  434260:	mov	x0, x19
  434264:	mov	x1, x23
  434268:	bl	42d97c <feof@plt+0x2ac7c>
  43426c:	mov	x8, x0
  434270:	ldr	x9, [x8, #8]!
  434274:	mov	x21, x0
  434278:	ldr	x0, [x19, #40]
  43427c:	cmp	w22, #0x1
  434280:	str	x9, [sp, #16]
  434284:	stur	x8, [x29, #-80]
  434288:	ldur	w8, [x29, #-88]
  43428c:	mov	x1, x27
  434290:	mov	w2, w26
  434294:	csel	w3, w8, w20, eq  // eq = none
  434298:	bl	42ea6c <feof@plt+0x2bd6c>
  43429c:	stur	x0, [x29, #-104]
  4342a0:	mov	x0, x21
  4342a4:	b	4342c8 <feof@plt+0x315c8>
  4342a8:	mov	x0, x19
  4342ac:	mov	x1, x23
  4342b0:	bl	42d97c <feof@plt+0x2ac7c>
  4342b4:	mov	x8, x0
  4342b8:	ldr	x9, [x8, #8]!
  4342bc:	str	x9, [sp, #16]
  4342c0:	stur	x8, [x29, #-80]
  4342c4:	stur	xzr, [x29, #-104]
  4342c8:	ldrh	w8, [x25, #16]
  4342cc:	mov	w10, #0x30                  	// #48
  4342d0:	ldrb	w9, [x25, #19]
  4342d4:	stur	x0, [x29, #-88]
  4342d8:	madd	x8, x8, x10, x28
  4342dc:	ldur	w8, [x8, #-24]
  4342e0:	stur	xzr, [x29, #-28]
  4342e4:	ubfx	w9, w9, #3, #1
  4342e8:	stur	x19, [x29, #-40]
  4342ec:	cmp	w8, #0x0
  4342f0:	cset	w8, ne  // ne = any
  4342f4:	sturb	w8, [x29, #-32]
  4342f8:	ldr	w8, [sp, #100]
  4342fc:	sturb	w9, [x29, #-31]
  434300:	sturb	wzr, [x29, #-30]
  434304:	stur	wzr, [x29, #-20]
  434308:	tbz	w8, #0, 4343a8 <feof@plt+0x316a8>
  43430c:	ldr	w8, [sp, #104]
  434310:	cbz	w8, 434cfc <feof@plt+0x31ffc>
  434314:	mov	x20, x0
  434318:	ldur	x22, [x29, #-16]
  43431c:	ldr	x8, [x20, #16]!
  434320:	ldur	x9, [x29, #-80]
  434324:	ldr	x10, [x19, #136]
  434328:	mov	x23, x27
  43432c:	ldr	x9, [x9]
  434330:	cbnz	x27, 43434c <feof@plt+0x3164c>
  434334:	ldr	w11, [x10, #48]
  434338:	cmp	w11, #0x2
  43433c:	add	x11, x10, #0x28
  434340:	b.ne	434348 <feof@plt+0x31648>  // b.any
  434344:	ldr	x11, [x11]
  434348:	ldr	x23, [x11]
  43434c:	ldr	x25, [x10]
  434350:	sub	x21, x8, x9
  434354:	cbnz	x25, 434380 <feof@plt+0x31680>
  434358:	mov	w0, #0x38                  	// #56
  43435c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  434360:	mov	x25, x0
  434364:	movi	v0.2d, #0x0
  434368:	ldur	x0, [x29, #-88]
  43436c:	str	xzr, [x25, #48]
  434370:	stp	q0, q0, [x25, #16]
  434374:	ldr	x8, [x19, #136]
  434378:	stp	xzr, x8, [x25]
  43437c:	str	x25, [x8]
  434380:	str	x25, [x19, #136]
  434384:	mov	w8, #0x2                   	// #2
  434388:	str	x0, [x25, #32]
  43438c:	mov	w0, #0x18                  	// #24
  434390:	str	w8, [x25, #48]
  434394:	bl	45535c <_obstack_memory_used@@Base+0x134>
  434398:	stp	x23, x22, [x0]
  43439c:	str	x22, [x0, #16]
  4343a0:	str	x0, [x25, #40]
  4343a4:	b	434d50 <feof@plt+0x32050>
  4343a8:	mov	x22, xzr
  4343ac:	add	x1, x25, #0x18
  4343b0:	add	x21, x19, #0x298
  4343b4:	mov	w20, #0x18                  	// #24
  4343b8:	stur	wzr, [x29, #-64]
  4343bc:	stp	x21, xzr, [sp, #80]
  4343c0:	b	4343e0 <feof@plt+0x316e0>
  4343c4:	ldur	x0, [x29, #-88]
  4343c8:	ldur	x9, [x29, #-96]
  4343cc:	add	x22, x22, #0x1
  4343d0:	madd	x8, x22, x20, x25
  4343d4:	add	x1, x8, #0x18
  4343d8:	cmp	x22, x9
  4343dc:	b.eq	43430c <feof@plt+0x3160c>  // b.none
  4343e0:	sub	x0, x29, #0x28
  4343e4:	stur	x1, [x29, #-72]
  4343e8:	bl	435d10 <feof@plt+0x33010>
  4343ec:	cmp	w0, #0x2
  4343f0:	b.eq	434580 <feof@plt+0x31880>  // b.none
  4343f4:	cmp	w0, #0x4
  4343f8:	b.eq	4344c4 <feof@plt+0x317c4>  // b.none
  4343fc:	cmp	w0, #0x3
  434400:	b.ne	4343c4 <feof@plt+0x316c4>  // b.any
  434404:	ldur	x0, [x29, #-88]
  434408:	cbz	x22, 4344a4 <feof@plt+0x317a4>
  43440c:	ldur	x8, [x29, #-72]
  434410:	ldurb	w8, [x8, #-18]
  434414:	tbnz	w8, #3, 4344a4 <feof@plt+0x317a4>
  434418:	mov	x0, x19
  43441c:	bl	429a78 <feof@plt+0x26d78>
  434420:	mov	x23, x0
  434424:	mov	w8, #0x53                  	// #83
  434428:	strb	w8, [x23, #4]
  43442c:	ldur	x8, [x29, #-72]
  434430:	strh	wzr, [x23, #6]
  434434:	ldur	x0, [x29, #-88]
  434438:	str	x8, [x23, #8]
  43443c:	ldrb	w8, [x19, #1157]
  434440:	ldp	x20, x9, [x0, #16]
  434444:	cmp	w8, #0x1
  434448:	ldur	w8, [x29, #-64]
  43444c:	csel	w1, w8, w22, hi  // hi = pmore
  434450:	cmp	x20, x9
  434454:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  434458:	ldur	x21, [x29, #-16]
  43445c:	cbz	x21, 434494 <feof@plt+0x31794>
  434460:	ldur	x8, [x29, #-80]
  434464:	ldr	w2, [x23]
  434468:	ldr	x8, [x8]
  43446c:	sub	x8, x20, x8
  434470:	ubfx	x24, x8, #3, #32
  434474:	ldur	x8, [x29, #-104]
  434478:	cbz	x8, 434490 <feof@plt+0x31790>
  43447c:	mov	x0, x8
  434480:	mov	w3, w2
  434484:	bl	42eba4 <feof@plt+0x2bea4>
  434488:	mov	w2, w0
  43448c:	ldur	x0, [x29, #-88]
  434490:	str	w2, [x21, x24, lsl #2]
  434494:	ldr	x21, [sp, #80]
  434498:	str	x23, [x20], #8
  43449c:	str	x20, [x0, #16]
  4344a0:	mov	w20, #0x18                  	// #24
  4344a4:	ldur	x9, [x29, #-80]
  4344a8:	ldr	x8, [x0, #16]
  4344ac:	ldr	x9, [x9]
  4344b0:	sub	x10, x8, #0x8
  4344b4:	cmp	x8, x9
  4344b8:	csel	x8, xzr, x10, eq  // eq = none
  4344bc:	str	x8, [sp, #88]
  4344c0:	b	4343c8 <feof@plt+0x316c8>
  4344c4:	ldp	x0, x9, [x29, #-88]
  4344c8:	ldr	x13, [sp, #88]
  4344cc:	mov	w12, #0x18                  	// #24
  4344d0:	ldr	x8, [x0, #16]
  4344d4:	ldr	x9, [x9]
  4344d8:	sub	x10, x8, #0x8
  4344dc:	cmp	x8, x9
  4344e0:	csel	x20, xzr, x10, eq  // eq = none
  4344e4:	cmp	x20, #0x0
  4344e8:	cset	w10, ne  // ne = any
  4344ec:	cmp	x20, x13
  4344f0:	b.eq	434538 <feof@plt+0x31838>  // b.none
  4344f4:	cbz	x20, 434538 <feof@plt+0x31838>
  4344f8:	ldr	x11, [x20]
  4344fc:	ldrb	w11, [x11, #4]
  434500:	cmp	w11, #0x53
  434504:	b.ne	434538 <feof@plt+0x31838>  // b.any
  434508:	cmp	x8, x9
  43450c:	b.ls	434518 <feof@plt+0x31818>  // b.plast
  434510:	sub	x8, x8, #0x8
  434514:	str	x8, [x0, #16]
  434518:	sub	x10, x8, #0x8
  43451c:	cmp	x8, x9
  434520:	csel	x20, xzr, x10, eq  // eq = none
  434524:	cmp	x20, #0x0
  434528:	cset	w10, ne  // ne = any
  43452c:	cmp	x20, x13
  434530:	b.eq	434538 <feof@plt+0x31838>  // b.none
  434534:	cbnz	x20, 4344f8 <feof@plt+0x317f8>
  434538:	madd	x21, x22, x12, x25
  43453c:	ldrb	w11, [x21, #30]!
  434540:	tbnz	w11, #3, 4345fc <feof@plt+0x318fc>
  434544:	ldr	x10, [x0, #24]
  434548:	ldr	x21, [sp, #80]
  43454c:	cmp	x8, x10
  434550:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  434554:	ldur	x10, [x29, #-16]
  434558:	mov	w20, #0x18                  	// #24
  43455c:	cbz	x10, 434570 <feof@plt+0x31870>
  434560:	ldr	w11, [x21]
  434564:	sub	x9, x8, x9
  434568:	lsr	x9, x9, #3
  43456c:	str	w11, [x10, w9, uxtw #2]
  434570:	str	x21, [x8], #8
  434574:	str	xzr, [sp, #88]
  434578:	str	x8, [x0, #16]
  43457c:	b	4343c8 <feof@plt+0x316c8>
  434580:	madd	x8, x22, x20, x25
  434584:	ldrb	w8, [x8, #28]
  434588:	cmp	w8, #0x50
  43458c:	b.ne	434618 <feof@plt+0x31918>  // b.any
  434590:	madd	x8, x22, x20, x25
  434594:	ldrh	w11, [x8, #30]!
  434598:	str	x8, [sp, #56]
  43459c:	mov	x17, x8
  4345a0:	ldr	w8, [x17, #2]!
  4345a4:	ldur	x0, [x29, #-88]
  4345a8:	ldr	w13, [sp, #104]
  4345ac:	ldur	x16, [x29, #-72]
  4345b0:	sub	w9, w8, #0x1
  4345b4:	tbnz	w11, #2, 434694 <feof@plt+0x31994>
  4345b8:	mov	w14, #0x30                  	// #48
  4345bc:	umaddl	x10, w9, w14, x28
  4345c0:	tbnz	w11, #3, 434718 <feof@plt+0x31a18>
  4345c4:	cbz	x22, 4345d0 <feof@plt+0x318d0>
  4345c8:	ldurb	w11, [x16, #-18]
  4345cc:	tbnz	w11, #3, 434764 <feof@plt+0x31a64>
  4345d0:	ldrb	w8, [x19, #1157]
  4345d4:	madd	x10, x9, x14, x28
  4345d8:	ldr	w15, [x10, #28]
  4345dc:	ldr	x26, [x10, #8]
  4345e0:	cmp	w8, #0x0
  4345e4:	cset	w18, ne  // ne = any
  4345e8:	cbz	w8, 434790 <feof@plt+0x31a90>
  4345ec:	cbz	x26, 4347b4 <feof@plt+0x31ab4>
  4345f0:	madd	x9, x9, x14, x28
  4345f4:	ldr	x9, [x9, #40]
  4345f8:	b	4347b8 <feof@plt+0x31ab8>
  4345fc:	cbz	w10, 434610 <feof@plt+0x31910>
  434600:	ldr	x8, [x20]
  434604:	ldrb	w8, [x8, #4]
  434608:	cmp	w8, #0x53
  43460c:	b.ne	4346c0 <feof@plt+0x319c0>  // b.any
  434610:	str	xzr, [sp, #88]
  434614:	b	43470c <feof@plt+0x31a0c>
  434618:	ldrb	w8, [x19, #1157]
  43461c:	ldur	x0, [x29, #-88]
  434620:	cmp	w8, #0x1
  434624:	ldp	x20, x9, [x0, #16]
  434628:	ldur	w8, [x29, #-64]
  43462c:	csel	w1, w8, w22, hi  // hi = pmore
  434630:	cmp	x20, x9
  434634:	ldur	x9, [x29, #-72]
  434638:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  43463c:	ldur	x21, [x29, #-16]
  434640:	cbz	x21, 43467c <feof@plt+0x3197c>
  434644:	ldur	x8, [x29, #-80]
  434648:	ldr	w2, [x9]
  43464c:	ldr	x8, [x8]
  434650:	sub	x8, x20, x8
  434654:	ubfx	x23, x8, #3, #32
  434658:	ldur	x8, [x29, #-104]
  43465c:	cbz	x8, 434678 <feof@plt+0x31978>
  434660:	mov	x0, x8
  434664:	mov	w3, w2
  434668:	bl	42eba4 <feof@plt+0x2bea4>
  43466c:	ldur	x9, [x29, #-72]
  434670:	mov	w2, w0
  434674:	ldur	x0, [x29, #-88]
  434678:	str	w2, [x21, x23, lsl #2]
  43467c:	ldur	w8, [x29, #-64]
  434680:	str	x9, [x20], #8
  434684:	str	x20, [x0, #16]
  434688:	add	w8, w8, #0x1
  43468c:	stur	w8, [x29, #-64]
  434690:	b	43470c <feof@plt+0x31a0c>
  434694:	ldrb	w8, [x19, #1157]
  434698:	mov	w10, #0x30                  	// #48
  43469c:	madd	x9, x9, x10, x28
  4346a0:	add	x26, x9, #0x10
  4346a4:	cbz	w8, 43473c <feof@plt+0x31a3c>
  4346a8:	ldr	x25, [x26]
  4346ac:	str	xzr, [sp, #32]
  4346b0:	mov	w12, #0x1                   	// #1
  4346b4:	mov	w18, #0x1                   	// #1
  4346b8:	mov	w15, #0x1                   	// #1
  4346bc:	b	4348f4 <feof@plt+0x31bf4>
  4346c0:	mov	x0, x19
  4346c4:	bl	429a78 <feof@plt+0x26d78>
  4346c8:	ldr	x8, [x20]
  4346cc:	str	xzr, [sp, #88]
  4346d0:	ldrb	w8, [x8, #4]
  4346d4:	strb	w8, [x0, #4]
  4346d8:	ldr	x8, [x20]
  4346dc:	ldur	q0, [x8, #8]
  4346e0:	stur	q0, [x0, #8]
  4346e4:	ldr	x8, [x20]
  4346e8:	ldrh	w9, [x21]
  4346ec:	ldrh	w8, [x8, #6]
  4346f0:	tst	w9, #0x8
  4346f4:	and	w9, w8, #0xfffffff7
  4346f8:	orr	w8, w8, #0x8
  4346fc:	csel	w8, w9, w8, eq  // eq = none
  434700:	strh	w8, [x0, #6]
  434704:	str	x0, [x20]
  434708:	ldur	x0, [x29, #-88]
  43470c:	ldr	x21, [sp, #80]
  434710:	mov	w20, #0x18                  	// #24
  434714:	b	4343c8 <feof@plt+0x316c8>
  434718:	madd	x8, x9, x14, x28
  43471c:	ldrb	w11, [x19, #1157]
  434720:	ldr	w15, [x8, #24]
  434724:	ldr	x26, [x10]
  434728:	cbz	w11, 434754 <feof@plt+0x31a54>
  43472c:	cbz	x26, 434798 <feof@plt+0x31a98>
  434730:	madd	x8, x9, x14, x28
  434734:	ldr	x8, [x8, #32]
  434738:	b	43479c <feof@plt+0x31a9c>
  43473c:	mov	x25, xzr
  434740:	mov	w18, wzr
  434744:	str	xzr, [sp, #32]
  434748:	mov	w12, #0x1                   	// #1
  43474c:	mov	w15, #0x1                   	// #1
  434750:	b	4348f4 <feof@plt+0x31bf4>
  434754:	mov	w12, wzr
  434758:	mov	x25, xzr
  43475c:	mov	w18, wzr
  434760:	b	4348f0 <feof@plt+0x31bf0>
  434764:	ldrb	w12, [x19, #1157]
  434768:	madd	x11, x9, x14, x28
  43476c:	ldr	w15, [x11, #24]
  434770:	ldr	x26, [x10]
  434774:	cmp	w12, #0x0
  434778:	cset	w18, ne  // ne = any
  43477c:	cbz	w12, 434838 <feof@plt+0x31b38>
  434780:	cbz	x26, 434840 <feof@plt+0x31b40>
  434784:	madd	x9, x9, x14, x28
  434788:	ldr	x9, [x9, #32]
  43478c:	b	434844 <feof@plt+0x31b44>
  434790:	mov	x25, xzr
  434794:	b	4347c0 <feof@plt+0x31ac0>
  434798:	mov	x8, xzr
  43479c:	cmp	x26, #0x0
  4347a0:	mov	w12, wzr
  4347a4:	str	xzr, [sp, #32]
  4347a8:	csel	x25, xzr, x8, eq  // eq = none
  4347ac:	mov	w18, #0x1                   	// #1
  4347b0:	b	4348f4 <feof@plt+0x31bf4>
  4347b4:	mov	x9, xzr
  4347b8:	cmp	x26, #0x0
  4347bc:	csel	x25, xzr, x9, eq  // eq = none
  4347c0:	ldr	x12, [sp, #88]
  4347c4:	cbz	x12, 4347e8 <feof@plt+0x31ae8>
  4347c8:	ldur	x10, [x29, #-80]
  4347cc:	ldr	x9, [x0, #16]
  4347d0:	ldr	x10, [x10]
  4347d4:	sub	x11, x9, #0x8
  4347d8:	cmp	x9, x10
  4347dc:	csel	x9, xzr, x11, eq  // eq = none
  4347e0:	cmp	x9, x12
  4347e4:	b.eq	4347f4 <feof@plt+0x31af4>  // b.none
  4347e8:	str	xzr, [sp, #32]
  4347ec:	mov	w12, #0x2                   	// #2
  4347f0:	b	4348f4 <feof@plt+0x31bf4>
  4347f4:	cbz	w15, 4347e8 <feof@plt+0x31ae8>
  4347f8:	sub	w9, w15, #0x1
  4347fc:	add	x9, x26, w9, uxtw #3
  434800:	add	x9, x9, #0x8
  434804:	ldr	x10, [x26]
  434808:	ldrb	w10, [x10, #4]
  43480c:	cmp	w10, #0x53
  434810:	b.ne	4347e8 <feof@plt+0x31ae8>  // b.any
  434814:	add	x10, x25, #0x4
  434818:	cmp	w8, #0x0
  43481c:	add	x26, x26, #0x8
  434820:	csel	x25, x10, x25, ne  // ne = any
  434824:	subs	w15, w15, #0x1
  434828:	mov	w12, #0x2                   	// #2
  43482c:	b.ne	434804 <feof@plt+0x31b04>  // b.any
  434830:	mov	x26, x9
  434834:	b	4348f0 <feof@plt+0x31bf0>
  434838:	mov	x25, xzr
  43483c:	b	43484c <feof@plt+0x31b4c>
  434840:	mov	x9, xzr
  434844:	cmp	x26, #0x0
  434848:	csel	x25, xzr, x9, eq  // eq = none
  43484c:	ldur	x10, [x29, #-80]
  434850:	ldr	x9, [x0, #16]
  434854:	ldr	x10, [x10]
  434858:	sub	x11, x9, x10
  43485c:	lsr	x11, x11, #3
  434860:	cbz	w11, 4348ec <feof@plt+0x31bec>
  434864:	sub	x11, x9, #0x8
  434868:	cmp	x9, x10
  43486c:	csel	x12, xzr, x11, eq  // eq = none
  434870:	str	x12, [sp, #32]
  434874:	ldr	x12, [x12]
  434878:	ldrb	w12, [x12, #4]
  43487c:	cmp	w12, #0x13
  434880:	b.ne	4348b4 <feof@plt+0x31bb4>  // b.any
  434884:	ldr	x12, [sp, #48]
  434888:	ldrb	w12, [x12, #19]
  43488c:	tbz	w12, #3, 4348b4 <feof@plt+0x31bb4>
  434890:	ldr	x12, [sp, #48]
  434894:	ldrh	w12, [x12, #16]
  434898:	cmp	w8, w12
  43489c:	b.ne	4348b4 <feof@plt+0x31bb4>  // b.any
  4348a0:	cbz	x26, 4348d4 <feof@plt+0x31bd4>
  4348a4:	ldr	x8, [x26]
  4348a8:	cbz	x8, 4348d4 <feof@plt+0x31bd4>
  4348ac:	mov	w12, wzr
  4348b0:	b	4348f4 <feof@plt+0x31bf4>
  4348b4:	ldr	x8, [sp, #88]
  4348b8:	ldr	x9, [sp, #32]
  4348bc:	mov	w12, wzr
  4348c0:	cmp	x9, x8
  4348c4:	ccmp	w15, #0x0, #0x0, ne  // ne = any
  4348c8:	csel	x9, xzr, x9, ne  // ne = any
  4348cc:	str	x9, [sp, #32]
  4348d0:	b	4348f4 <feof@plt+0x31bf4>
  4348d4:	cmp	x9, x10
  4348d8:	b.ls	4348ec <feof@plt+0x31bec>  // b.plast
  4348dc:	mov	w12, wzr
  4348e0:	str	xzr, [sp, #32]
  4348e4:	str	x11, [x0, #16]
  4348e8:	b	4348f4 <feof@plt+0x31bf4>
  4348ec:	mov	w12, wzr
  4348f0:	str	xzr, [sp, #32]
  4348f4:	ldrb	w8, [x19, #16]
  4348f8:	stp	w18, w15, [sp, #96]
  4348fc:	cbz	w8, 434910 <feof@plt+0x31c10>
  434900:	cbz	x22, 434a10 <feof@plt+0x31d10>
  434904:	ldrb	w8, [x19, #17]
  434908:	cbnz	w8, 434914 <feof@plt+0x31c14>
  43490c:	b	434a10 <feof@plt+0x31d10>
  434910:	cbz	x22, 434a10 <feof@plt+0x31d10>
  434914:	ldurb	w8, [x16, #-18]
  434918:	tbnz	w8, #3, 434a10 <feof@plt+0x31d10>
  43491c:	ldr	x8, [sp, #88]
  434920:	cbz	x8, 434948 <feof@plt+0x31c48>
  434924:	ldur	x9, [x29, #-80]
  434928:	ldr	x8, [x0, #16]
  43492c:	ldr	x9, [x9]
  434930:	sub	x10, x8, #0x8
  434934:	cmp	x8, x9
  434938:	ldr	x9, [sp, #88]
  43493c:	csel	x8, xzr, x10, eq  // eq = none
  434940:	cmp	x8, x9
  434944:	b.eq	434a10 <feof@plt+0x31d10>  // b.none
  434948:	mov	x0, x19
  43494c:	mov	x20, x17
  434950:	mov	w24, w12
  434954:	bl	429a78 <feof@plt+0x26d78>
  434958:	ldur	x16, [x29, #-72]
  43495c:	mov	x10, x0
  434960:	mov	w8, #0x53                  	// #83
  434964:	strb	w8, [x10, #4]
  434968:	str	x16, [x10, #8]
  43496c:	strh	wzr, [x10, #6]
  434970:	ldur	x0, [x29, #-88]
  434974:	ldrb	w8, [x19, #1157]
  434978:	ldp	x21, x9, [x0, #16]
  43497c:	cmp	w8, #0x1
  434980:	ldur	w8, [x29, #-64]
  434984:	csel	w1, w8, w22, hi  // hi = pmore
  434988:	cmp	x21, x9
  43498c:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  434990:	ldur	x23, [x29, #-16]
  434994:	ldp	w15, w13, [sp, #100]
  434998:	ldr	w18, [sp, #96]
  43499c:	mov	w12, w24
  4349a0:	mov	x17, x20
  4349a4:	cbz	x23, 434a04 <feof@plt+0x31d04>
  4349a8:	str	x17, [sp, #8]
  4349ac:	ldur	x8, [x29, #-80]
  4349b0:	ldr	w2, [x10]
  4349b4:	ldr	x8, [x8]
  4349b8:	sub	x8, x21, x8
  4349bc:	ubfx	x9, x8, #3, #32
  4349c0:	ldur	x8, [x29, #-104]
  4349c4:	cbz	x8, 4349fc <feof@plt+0x31cfc>
  4349c8:	mov	x0, x8
  4349cc:	mov	w3, w2
  4349d0:	mov	x20, x10
  4349d4:	str	x9, [sp]
  4349d8:	bl	42eba4 <feof@plt+0x2bea4>
  4349dc:	ldr	x9, [sp]
  4349e0:	ldp	w18, w15, [sp, #96]
  4349e4:	ldur	x16, [x29, #-72]
  4349e8:	ldr	w13, [sp, #104]
  4349ec:	mov	w2, w0
  4349f0:	ldur	x0, [x29, #-88]
  4349f4:	mov	x10, x20
  4349f8:	mov	w12, w24
  4349fc:	ldr	x17, [sp, #8]
  434a00:	str	w2, [x23, x9, lsl #2]
  434a04:	str	x10, [x21], #8
  434a08:	str	x21, [x0, #16]
  434a0c:	ldr	x21, [sp, #80]
  434a10:	cbz	w15, 434b2c <feof@plt+0x31e2c>
  434a14:	ldur	x21, [x29, #-16]
  434a18:	mov	w27, wzr
  434a1c:	b	434a2c <feof@plt+0x31d2c>
  434a20:	add	w27, w27, #0x1
  434a24:	cmp	w15, w27
  434a28:	b.eq	434af0 <feof@plt+0x31df0>  // b.none
  434a2c:	ldrb	w8, [x19, #1157]
  434a30:	ldur	w10, [x29, #-64]
  434a34:	cmp	w13, #0x1
  434a38:	csel	w9, w27, wzr, hi  // hi = pmore
  434a3c:	cmp	w8, #0x1
  434a40:	add	w9, w9, w10
  434a44:	csel	w1, w9, w22, hi  // hi = pmore
  434a48:	cbz	x26, 434ae0 <feof@plt+0x31de0>
  434a4c:	ldr	x24, [x26]
  434a50:	mov	x8, x25
  434a54:	cbnz	w18, 434a5c <feof@plt+0x31d5c>
  434a58:	ldr	x8, [x26]
  434a5c:	ldp	x23, x9, [x0, #16]
  434a60:	cmp	x23, x9
  434a64:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  434a68:	cbz	x21, 434ab8 <feof@plt+0x31db8>
  434a6c:	ldur	x9, [x29, #-80]
  434a70:	ldr	w2, [x8]
  434a74:	ldr	x9, [x9]
  434a78:	sub	x8, x23, x9
  434a7c:	ubfx	x28, x8, #3, #32
  434a80:	ldur	x8, [x29, #-104]
  434a84:	cbz	x8, 434ab0 <feof@plt+0x31db0>
  434a88:	ldr	w3, [x16]
  434a8c:	mov	x0, x8
  434a90:	mov	w20, w12
  434a94:	bl	42eba4 <feof@plt+0x2bea4>
  434a98:	ldp	w18, w15, [sp, #96]
  434a9c:	ldur	x16, [x29, #-72]
  434aa0:	ldr	w13, [sp, #104]
  434aa4:	mov	w2, w0
  434aa8:	ldur	x0, [x29, #-88]
  434aac:	mov	w12, w20
  434ab0:	str	w2, [x21, x28, lsl #2]
  434ab4:	ldr	x28, [sp, #112]
  434ab8:	orr	w8, w12, #0x2
  434abc:	str	x24, [x23], #8
  434ac0:	cmp	w8, #0x2
  434ac4:	str	x23, [x0, #16]
  434ac8:	b.ne	434a20 <feof@plt+0x31d20>  // b.any
  434acc:	add	x8, x25, #0x4
  434ad0:	cmp	w18, #0x0
  434ad4:	add	x26, x26, #0x8
  434ad8:	csel	x25, x25, x8, eq  // eq = none
  434adc:	b	434a20 <feof@plt+0x31d20>
  434ae0:	mov	x24, xzr
  434ae4:	mov	x8, x25
  434ae8:	cbnz	w18, 434a5c <feof@plt+0x31d5c>
  434aec:	b	434a58 <feof@plt+0x31d58>
  434af0:	ldp	x8, x27, [sp, #56]
  434af4:	ldr	w26, [sp, #28]
  434af8:	ldr	x25, [sp, #48]
  434afc:	ldr	x21, [sp, #80]
  434b00:	ldrb	w8, [x8]
  434b04:	ldr	x12, [sp, #32]
  434b08:	mov	w20, #0x18                  	// #24
  434b0c:	tbz	w8, #3, 434c20 <feof@plt+0x31f20>
  434b10:	ldur	x9, [x29, #-80]
  434b14:	ldr	x8, [x0, #16]
  434b18:	ldr	x9, [x9]
  434b1c:	sub	x10, x8, #0x8
  434b20:	cmp	x8, x9
  434b24:	csel	x12, xzr, x10, eq  // eq = none
  434b28:	b	434c20 <feof@plt+0x31f20>
  434b2c:	ldrb	w8, [x19, #1154]
  434b30:	ldr	x25, [sp, #48]
  434b34:	cbz	w8, 434b58 <feof@plt+0x31e58>
  434b38:	ldrb	w8, [x19, #1152]
  434b3c:	cbnz	w8, 434b58 <feof@plt+0x31e58>
  434b40:	ldrb	w8, [x25, #19]
  434b44:	tbnz	w8, #4, 434b58 <feof@plt+0x31e58>
  434b48:	ldr	x8, [x19]
  434b4c:	cbz	x8, 434bbc <feof@plt+0x31ebc>
  434b50:	ldrb	w8, [x8, #106]
  434b54:	cbz	w8, 434bbc <feof@plt+0x31ebc>
  434b58:	ldrsb	w8, [x19, #1198]
  434b5c:	ldr	w26, [sp, #28]
  434b60:	mov	w20, #0x18                  	// #24
  434b64:	cmp	w8, #0x1
  434b68:	b.lt	434c1c <feof@plt+0x31f1c>  // b.tstop
  434b6c:	ldrb	w8, [x19, #1120]
  434b70:	ldr	x12, [sp, #32]
  434b74:	cbnz	w8, 434c20 <feof@plt+0x31f20>
  434b78:	ldrb	w8, [x25, #19]
  434b7c:	tbnz	w8, #4, 434c20 <feof@plt+0x31f20>
  434b80:	ldr	x8, [x19]
  434b84:	cbz	x8, 434b90 <feof@plt+0x31e90>
  434b88:	ldrb	w8, [x8, #106]
  434b8c:	cbnz	w8, 434c20 <feof@plt+0x31f20>
  434b90:	ldr	x3, [x27]
  434b94:	ldr	w4, [x17]
  434b98:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  434b9c:	mov	w1, #0x16                  	// #22
  434ba0:	mov	x0, x19
  434ba4:	add	x2, x2, #0xb36
  434ba8:	bl	422514 <feof@plt+0x1f814>
  434bac:	ldr	x12, [sp, #32]
  434bb0:	ldr	w15, [sp, #100]
  434bb4:	ldur	x0, [x29, #-88]
  434bb8:	b	434c20 <feof@plt+0x31f20>
  434bbc:	ldrb	w8, [x19, #1120]
  434bc0:	ldr	w26, [sp, #28]
  434bc4:	mov	w20, #0x18                  	// #24
  434bc8:	cbz	w8, 434be8 <feof@plt+0x31ee8>
  434bcc:	ldr	x3, [x27]
  434bd0:	ldr	w4, [x17]
  434bd4:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  434bd8:	mov	w1, #0x15                  	// #21
  434bdc:	mov	x0, x19
  434be0:	add	x2, x2, #0xae6
  434be4:	b	434c10 <feof@plt+0x31f10>
  434be8:	ldrsb	w8, [x19, #1198]
  434bec:	cbz	w8, 434c1c <feof@plt+0x31f1c>
  434bf0:	ldr	x3, [x27]
  434bf4:	ldr	w4, [x17]
  434bf8:	cmp	w8, #0x0
  434bfc:	mov	w8, #0x15                  	// #21
  434c00:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  434c04:	cinc	w1, w8, gt
  434c08:	mov	x0, x19
  434c0c:	add	x2, x2, #0xb36
  434c10:	bl	422644 <feof@plt+0x1f944>
  434c14:	ldr	w15, [sp, #100]
  434c18:	ldur	x0, [x29, #-88]
  434c1c:	ldr	x12, [sp, #32]
  434c20:	ldrb	w8, [x19, #16]
  434c24:	cbnz	w8, 434c94 <feof@plt+0x31f94>
  434c28:	ldr	x8, [sp, #56]
  434c2c:	ldrb	w8, [x8]
  434c30:	tbnz	w8, #3, 434c94 <feof@plt+0x31f94>
  434c34:	ldr	x8, [x0, #16]
  434c38:	ldr	x9, [sp, #88]
  434c3c:	cbz	x9, 434c60 <feof@plt+0x31f60>
  434c40:	ldur	x9, [x29, #-80]
  434c44:	sub	x10, x8, #0x8
  434c48:	ldr	x9, [x9]
  434c4c:	cmp	x8, x9
  434c50:	csel	x9, xzr, x10, eq  // eq = none
  434c54:	ldr	x10, [sp, #88]
  434c58:	cmp	x9, x10
  434c5c:	b.eq	434c94 <feof@plt+0x31f94>  // b.none
  434c60:	ldr	x9, [x0, #24]
  434c64:	cmp	x8, x9
  434c68:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  434c6c:	ldur	x9, [x29, #-16]
  434c70:	cbz	x9, 434c8c <feof@plt+0x31f8c>
  434c74:	ldur	x10, [x29, #-80]
  434c78:	ldr	w11, [x21]
  434c7c:	ldr	x10, [x10]
  434c80:	sub	x10, x8, x10
  434c84:	lsr	x10, x10, #3
  434c88:	str	w11, [x9, w10, uxtw #2]
  434c8c:	str	x21, [x8], #8
  434c90:	str	x8, [x0, #16]
  434c94:	cbz	x12, 434cec <feof@plt+0x31fec>
  434c98:	mov	x0, x19
  434c9c:	mov	x23, x12
  434ca0:	bl	429a78 <feof@plt+0x26d78>
  434ca4:	ldr	x8, [x23]
  434ca8:	ldr	x9, [sp, #56]
  434cac:	ldr	w15, [sp, #100]
  434cb0:	ldrb	w8, [x8, #4]
  434cb4:	strb	w8, [x0, #4]
  434cb8:	ldr	x8, [x23]
  434cbc:	ldur	q0, [x8, #8]
  434cc0:	stur	q0, [x0, #8]
  434cc4:	ldr	x8, [x23]
  434cc8:	ldrh	w9, [x9]
  434ccc:	ldrh	w8, [x8, #6]
  434cd0:	tst	w9, #0x8
  434cd4:	and	w9, w8, #0xfffffff7
  434cd8:	orr	w8, w8, #0x8
  434cdc:	csel	w8, w9, w8, eq  // eq = none
  434ce0:	strh	w8, [x0, #6]
  434ce4:	str	x0, [x23]
  434ce8:	ldur	x0, [x29, #-88]
  434cec:	ldur	w8, [x29, #-64]
  434cf0:	add	w8, w15, w8
  434cf4:	stur	w8, [x29, #-64]
  434cf8:	b	4343c8 <feof@plt+0x316c8>
  434cfc:	mov	x20, x0
  434d00:	ldr	x8, [x20, #16]!
  434d04:	ldur	x10, [x29, #-80]
  434d08:	ldr	x9, [x19, #136]
  434d0c:	ldr	x10, [x10]
  434d10:	ldr	x25, [x9]
  434d14:	sub	x21, x8, x10
  434d18:	cbnz	x25, 434d44 <feof@plt+0x32044>
  434d1c:	mov	w0, #0x38                  	// #56
  434d20:	bl	45535c <_obstack_memory_used@@Base+0x134>
  434d24:	mov	x25, x0
  434d28:	movi	v0.2d, #0x0
  434d2c:	ldur	x0, [x29, #-88]
  434d30:	str	xzr, [x25, #48]
  434d34:	stp	q0, q0, [x25, #16]
  434d38:	ldr	x8, [x19, #136]
  434d3c:	stp	xzr, x8, [x25]
  434d40:	str	x25, [x8]
  434d44:	str	x25, [x19, #136]
  434d48:	str	wzr, [x25, #48]
  434d4c:	stp	x0, x27, [x25, #32]
  434d50:	ldr	x9, [sp, #16]
  434d54:	lsr	x8, x21, #3
  434d58:	adrp	x10, 47d000 <stderr@@GLIBC_2.17+0xa78>
  434d5c:	add	x8, x9, w8, uxtw #3
  434d60:	stp	x9, x8, [x25, #16]
  434d64:	ldur	x9, [x29, #-80]
  434d68:	ldr	x8, [x20]
  434d6c:	ldr	w11, [x10, #2404]
  434d70:	ldr	x25, [sp, #48]
  434d74:	ldr	x9, [x9]
  434d78:	sub	x8, x8, x9
  434d7c:	lsr	x8, x8, #3
  434d80:	add	w8, w11, w8
  434d84:	str	w8, [x10, #2404]
  434d88:	ldur	w20, [x29, #-52]
  434d8c:	cbz	w20, 434de0 <feof@plt+0x320e0>
  434d90:	ldr	x8, [sp, #40]
  434d94:	ldr	x8, [x8, #8]
  434d98:	add	x21, x8, #0x28
  434d9c:	b	434dac <feof@plt+0x320ac>
  434da0:	subs	x20, x20, #0x1
  434da4:	add	x21, x21, #0x30
  434da8:	b.eq	434de0 <feof@plt+0x320e0>  // b.none
  434dac:	ldur	x0, [x21, #-32]
  434db0:	cbz	x0, 434dbc <feof@plt+0x320bc>
  434db4:	bl	402770 <free@plt>
  434db8:	stur	xzr, [x21, #-32]
  434dbc:	ldur	x0, [x21, #-8]
  434dc0:	cbz	x0, 434dcc <feof@plt+0x320cc>
  434dc4:	bl	402770 <free@plt>
  434dc8:	stur	xzr, [x21, #-8]
  434dcc:	ldr	x0, [x21]
  434dd0:	cbz	x0, 434da0 <feof@plt+0x320a0>
  434dd4:	bl	402770 <free@plt>
  434dd8:	str	xzr, [x21]
  434ddc:	b	434da0 <feof@plt+0x320a0>
  434de0:	ldr	x0, [sp, #40]
  434de4:	bl	42dbdc <feof@plt+0x2aedc>
  434de8:	ldrh	w8, [x27, #18]
  434dec:	orr	w9, w8, #0x40
  434df0:	strh	w9, [x27, #18]
  434df4:	tbnz	w8, #7, 434e54 <feof@plt+0x32154>
  434df8:	orr	w9, w8, #0xc0
  434dfc:	ands	w8, w8, #0x3
  434e00:	strh	w9, [x27, #18]
  434e04:	b.eq	4350e0 <feof@plt+0x323e0>  // b.none
  434e08:	cmp	w8, #0x3
  434e0c:	b.eq	434e3c <feof@plt+0x3213c>  // b.none
  434e10:	cmp	w8, #0x2
  434e14:	b.ne	435214 <feof@plt+0x32514>  // b.any
  434e18:	ldr	x23, [x27, #24]
  434e1c:	ldrb	w8, [x23, #18]
  434e20:	cbz	w8, 434e3c <feof@plt+0x3213c>
  434e24:	ldr	x9, [x19, #1048]
  434e28:	sub	w2, w8, #0x1
  434e2c:	mov	x0, x19
  434e30:	mov	x1, x23
  434e34:	blr	x9
  434e38:	strb	wzr, [x23, #18]
  434e3c:	ldr	x8, [x19, #1008]
  434e40:	cbz	x8, 434e54 <feof@plt+0x32154>
  434e44:	ldr	w1, [x19, #48]
  434e48:	mov	x0, x19
  434e4c:	mov	x2, x27
  434e50:	blr	x8
  434e54:	ldr	x8, [x19, #1032]
  434e58:	cbz	x8, 434e6c <feof@plt+0x3216c>
  434e5c:	mov	x0, x19
  434e60:	mov	w1, w26
  434e64:	mov	x2, x27
  434e68:	blr	x8
  434e6c:	ldrb	w8, [x25, #19]
  434e70:	ldrh	w9, [x25, #16]
  434e74:	orr	w10, w8, #0x20
  434e78:	strb	w10, [x25, #19]
  434e7c:	cbz	w9, 434f9c <feof@plt+0x3229c>
  434e80:	ldur	x20, [x29, #-48]
  434e84:	cbz	x20, 43516c <feof@plt+0x3246c>
  434e88:	ldrb	w8, [x19, #16]
  434e8c:	cbnz	w8, 434f10 <feof@plt+0x32210>
  434e90:	mov	x0, x19
  434e94:	bl	429a78 <feof@plt+0x26d78>
  434e98:	ldr	x9, [sp, #72]
  434e9c:	mov	w8, #0x53                  	// #83
  434ea0:	strb	w8, [x0, #4]
  434ea4:	strh	wzr, [x0, #6]
  434ea8:	str	x9, [x0, #8]
  434eac:	ldr	x8, [x19, #136]
  434eb0:	mov	x21, x0
  434eb4:	ldr	w9, [x8, #48]
  434eb8:	cmp	w9, #0x2
  434ebc:	add	x9, x8, #0x28
  434ec0:	b.ne	434ec8 <feof@plt+0x321c8>  // b.any
  434ec4:	ldr	x9, [x9]
  434ec8:	ldr	x0, [x8]
  434ecc:	ldr	x22, [x9]
  434ed0:	cbnz	x0, 434ef8 <feof@plt+0x321f8>
  434ed4:	mov	w0, #0x38                  	// #56
  434ed8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  434edc:	movi	v0.2d, #0x0
  434ee0:	str	xzr, [x0, #48]
  434ee4:	stp	q0, q0, [x0, #16]
  434ee8:	ldr	x8, [x19, #136]
  434eec:	stp	xzr, x8, [x0]
  434ef0:	str	x0, [x8]
  434ef4:	ldur	x20, [x29, #-48]
  434ef8:	mov	w8, #0x1                   	// #1
  434efc:	add	x9, x21, #0x18
  434f00:	str	x0, [x19, #136]
  434f04:	stp	xzr, x22, [x0, #32]
  434f08:	str	w8, [x0, #48]
  434f0c:	stp	x21, x9, [x0, #16]
  434f10:	adrp	x21, 47d000 <stderr@@GLIBC_2.17+0xa78>
  434f14:	b	434f20 <feof@plt+0x32220>
  434f18:	mov	x20, x22
  434f1c:	cbz	x22, 434f90 <feof@plt+0x32290>
  434f20:	ldp	x22, x24, [x20]
  434f24:	str	xzr, [x20]
  434f28:	ldr	x8, [x19, #136]
  434f2c:	ldr	x9, [x20, #16]
  434f30:	ldr	x0, [x8]
  434f34:	sub	x8, x9, x24
  434f38:	lsr	x23, x8, #3
  434f3c:	cbnz	x0, 434f60 <feof@plt+0x32260>
  434f40:	mov	w0, #0x38                  	// #56
  434f44:	bl	45535c <_obstack_memory_used@@Base+0x134>
  434f48:	movi	v0.2d, #0x0
  434f4c:	stp	q0, q0, [x0, #16]
  434f50:	str	xzr, [x0, #48]
  434f54:	ldr	x8, [x19, #136]
  434f58:	stp	xzr, x8, [x0]
  434f5c:	str	x0, [x8]
  434f60:	add	x8, x24, w23, uxtw #3
  434f64:	str	x0, [x19, #136]
  434f68:	str	wzr, [x0, #48]
  434f6c:	stp	x20, xzr, [x0, #32]
  434f70:	stp	x24, x8, [x0, #16]
  434f74:	stur	x22, [x29, #-48]
  434f78:	ldrb	w8, [x19, #1157]
  434f7c:	cbnz	w8, 434f18 <feof@plt+0x32218>
  434f80:	ldr	w8, [x21, #2404]
  434f84:	add	w8, w8, w23
  434f88:	str	w8, [x21, #2404]
  434f8c:	b	434f18 <feof@plt+0x32218>
  434f90:	strb	wzr, [x19, #192]
  434f94:	mov	w0, #0x2                   	// #2
  434f98:	b	435174 <feof@plt+0x32474>
  434f9c:	ldr	w23, [x25, #12]
  434fa0:	tbnz	w8, #6, 435194 <feof@plt+0x32494>
  434fa4:	ldrb	w8, [x19, #1157]
  434fa8:	add	x21, x25, #0x18
  434fac:	cbz	w8, 4350ec <feof@plt+0x323ec>
  434fb0:	mov	w20, w23
  434fb4:	lsl	x0, x20, #4
  434fb8:	lsl	x25, x20, #3
  434fbc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  434fc0:	mov	x24, x0
  434fc4:	mov	x0, x19
  434fc8:	mov	x1, x25
  434fcc:	bl	42d97c <feof@plt+0x2ac7c>
  434fd0:	ldr	x8, [x19, #40]
  434fd4:	mov	x25, x0
  434fd8:	mov	x1, x27
  434fdc:	mov	w2, w26
  434fe0:	mov	x0, x8
  434fe4:	mov	w3, w23
  434fe8:	str	x27, [sp, #64]
  434fec:	bl	42ea6c <feof@plt+0x2bd6c>
  434ff0:	cbz	w23, 43505c <feof@plt+0x3235c>
  434ff4:	ldr	x27, [x25, #16]
  434ff8:	mov	x22, x0
  434ffc:	mov	x26, xzr
  435000:	b	435020 <feof@plt+0x32320>
  435004:	str	w2, [x24, x28, lsl #2]
  435008:	add	x26, x26, #0x1
  43500c:	str	x21, [x27], #8
  435010:	cmp	w20, w26
  435014:	add	x21, x21, #0x18
  435018:	str	x27, [x25, #16]
  43501c:	b.eq	43505c <feof@plt+0x3235c>  // b.none
  435020:	ldr	x8, [x25, #24]
  435024:	cmp	x27, x8
  435028:	b.hi	4351fc <feof@plt+0x324fc>  // b.pmore
  43502c:	cbz	x24, 435008 <feof@plt+0x32308>
  435030:	ldr	x8, [x25, #8]
  435034:	ldr	w2, [x21]
  435038:	sub	x8, x27, x8
  43503c:	ubfx	x28, x8, #3, #32
  435040:	cbz	x22, 435004 <feof@plt+0x32304>
  435044:	mov	x0, x22
  435048:	mov	w1, w26
  43504c:	mov	w3, w2
  435050:	bl	42eba4 <feof@plt+0x2bea4>
  435054:	mov	w2, w0
  435058:	b	435004 <feof@plt+0x32304>
  43505c:	ldr	x21, [x25, #8]
  435060:	ldr	x8, [x19, #136]
  435064:	ldr	x26, [sp, #64]
  435068:	cbnz	x26, 435084 <feof@plt+0x32384>
  43506c:	ldr	w9, [x8, #48]
  435070:	cmp	w9, #0x2
  435074:	add	x9, x8, #0x28
  435078:	b.ne	435080 <feof@plt+0x32380>  // b.any
  43507c:	ldr	x9, [x9]
  435080:	ldr	x26, [x9]
  435084:	ldr	x22, [x8]
  435088:	cbnz	x22, 4350b0 <feof@plt+0x323b0>
  43508c:	mov	w0, #0x38                  	// #56
  435090:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435094:	movi	v0.2d, #0x0
  435098:	str	xzr, [x0, #48]
  43509c:	stp	q0, q0, [x0, #16]
  4350a0:	ldr	x8, [x19, #136]
  4350a4:	mov	x22, x0
  4350a8:	stp	xzr, x8, [x0]
  4350ac:	str	x0, [x8]
  4350b0:	mov	w8, #0x2                   	// #2
  4350b4:	mov	w0, #0x18                  	// #24
  4350b8:	str	x22, [x19, #136]
  4350bc:	str	w8, [x22, #48]
  4350c0:	str	x25, [x22, #32]
  4350c4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4350c8:	add	x8, x21, x20, lsl #3
  4350cc:	stp	x26, x24, [x0]
  4350d0:	str	x24, [x0, #16]
  4350d4:	str	x0, [x22, #40]
  4350d8:	stp	x21, x8, [x22, #16]
  4350dc:	b	435154 <feof@plt+0x32454>
  4350e0:	ldr	x8, [x19, #1016]
  4350e4:	cbnz	x8, 434e44 <feof@plt+0x32144>
  4350e8:	b	434e54 <feof@plt+0x32154>
  4350ec:	ldr	x8, [x19, #136]
  4350f0:	cbnz	x27, 43510c <feof@plt+0x3240c>
  4350f4:	ldr	w9, [x8, #48]
  4350f8:	cmp	w9, #0x2
  4350fc:	add	x9, x8, #0x28
  435100:	b.ne	435108 <feof@plt+0x32408>  // b.any
  435104:	ldr	x9, [x9]
  435108:	ldr	x27, [x9]
  43510c:	ldr	x0, [x8]
  435110:	cbnz	x0, 435134 <feof@plt+0x32434>
  435114:	mov	w0, #0x38                  	// #56
  435118:	bl	45535c <_obstack_memory_used@@Base+0x134>
  43511c:	movi	v0.2d, #0x0
  435120:	str	xzr, [x0, #48]
  435124:	stp	q0, q0, [x0, #16]
  435128:	ldr	x8, [x19, #136]
  43512c:	stp	xzr, x8, [x0]
  435130:	str	x0, [x8]
  435134:	mov	w8, #0x1                   	// #1
  435138:	mov	w9, #0x18                  	// #24
  43513c:	str	x0, [x19, #136]
  435140:	str	w8, [x0, #48]
  435144:	umaddl	x8, w23, w9, x25
  435148:	add	x8, x8, #0x18
  43514c:	stp	xzr, x27, [x0, #32]
  435150:	stp	x21, x8, [x0, #16]
  435154:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  435158:	ldr	w9, [x8, #2404]
  43515c:	add	w9, w9, w23
  435160:	str	w9, [x8, #2404]
  435164:	ldur	x20, [x29, #-48]
  435168:	cbnz	x20, 434e88 <feof@plt+0x32188>
  43516c:	mov	w0, #0x1                   	// #1
  435170:	strb	wzr, [x19, #192]
  435174:	ldp	x20, x19, [sp, #304]
  435178:	ldp	x22, x21, [sp, #288]
  43517c:	ldp	x24, x23, [sp, #272]
  435180:	ldp	x26, x25, [sp, #256]
  435184:	ldp	x28, x27, [sp, #240]
  435188:	ldp	x29, x30, [sp, #224]
  43518c:	add	sp, sp, #0x140
  435190:	ret
  435194:	mov	w8, #0x18                  	// #24
  435198:	cbz	x23, 434fa4 <feof@plt+0x322a4>
  43519c:	sub	w9, w23, #0x1
  4351a0:	umaddl	x9, w9, w8, x25
  4351a4:	ldrb	w9, [x9, #28]
  4351a8:	sub	x23, x23, #0x1
  4351ac:	cmp	w9, #0x26
  4351b0:	b.eq	435198 <feof@plt+0x32498>  // b.none
  4351b4:	add	w23, w23, #0x1
  4351b8:	b	434fa4 <feof@plt+0x322a4>
  4351bc:	mov	w8, #0x18                  	// #24
  4351c0:	cbz	x24, 4351e8 <feof@plt+0x324e8>
  4351c4:	sub	w9, w24, #0x1
  4351c8:	umaddl	x9, w9, w8, x25
  4351cc:	ldrb	w9, [x9, #28]
  4351d0:	sub	x24, x24, #0x1
  4351d4:	cmp	w9, #0x26
  4351d8:	b.eq	4351c0 <feof@plt+0x324c0>  // b.none
  4351dc:	ldr	x28, [sp, #112]
  4351e0:	add	w24, w24, #0x1
  4351e4:	b	433e38 <feof@plt+0x31138>
  4351e8:	stur	xzr, [x29, #-96]
  4351ec:	stur	wzr, [x29, #-88]
  4351f0:	ldr	x28, [sp, #112]
  4351f4:	mov	w8, #0x1                   	// #1
  4351f8:	b	43423c <feof@plt+0x3153c>
  4351fc:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  435200:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  435204:	add	x0, x0, #0x6ee
  435208:	add	x2, x2, #0xa5b
  43520c:	mov	w1, #0x953                 	// #2387
  435210:	bl	408b70 <feof@plt+0x5e70>
  435214:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  435218:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  43521c:	add	x0, x0, #0x6ee
  435220:	add	x2, x2, #0x98d
  435224:	mov	w1, #0xe0b                 	// #3595
  435228:	bl	408b70 <feof@plt+0x5e70>
  43522c:	stp	x29, x30, [sp, #-80]!
  435230:	stp	x26, x25, [sp, #16]
  435234:	stp	x24, x23, [sp, #32]
  435238:	stp	x22, x21, [sp, #48]
  43523c:	stp	x20, x19, [sp, #64]
  435240:	ldr	x8, [x2]
  435244:	mov	x19, x0
  435248:	mov	x29, sp
  43524c:	mov	x21, x3
  435250:	mov	x0, x8
  435254:	mov	x23, x2
  435258:	mov	w20, w1
  43525c:	bl	42cd5c <feof@plt+0x2a05c>
  435260:	mov	w22, w0
  435264:	mov	x0, x21
  435268:	bl	42cd5c <feof@plt+0x2a05c>
  43526c:	add	w8, w22, w0
  435270:	add	w8, w8, #0x1
  435274:	add	x8, x8, #0xf
  435278:	and	x8, x8, #0x1fffffff0
  43527c:	mov	x9, sp
  435280:	sub	x22, x9, x8
  435284:	mov	sp, x22
  435288:	ldr	x1, [x23]
  43528c:	mov	w3, #0x1                   	// #1
  435290:	mov	x0, x19
  435294:	mov	x2, x22
  435298:	bl	42cf30 <feof@plt+0x2a230>
  43529c:	ldr	x8, [x23]
  4352a0:	mov	x24, x0
  4352a4:	mov	x2, x0
  4352a8:	ldrb	w8, [x8, #4]
  4352ac:	cmp	w8, #0x7
  4352b0:	b.ne	4352cc <feof@plt+0x325cc>  // b.any
  4352b4:	ldrb	w8, [x21, #4]
  4352b8:	mov	x2, x24
  4352bc:	cbz	w8, 4352cc <feof@plt+0x325cc>
  4352c0:	mov	w8, #0x20                  	// #32
  4352c4:	mov	x2, x24
  4352c8:	strb	w8, [x2], #1
  4352cc:	ldrb	w8, [x21, #4]
  4352d0:	cmp	w8, #0x53
  4352d4:	b.eq	4352ec <feof@plt+0x325ec>  // b.none
  4352d8:	mov	w3, #0x1                   	// #1
  4352dc:	mov	x0, x19
  4352e0:	mov	x1, x21
  4352e4:	bl	42cf30 <feof@plt+0x2a230>
  4352e8:	mov	x2, x0
  4352ec:	mov	w8, #0xa                   	// #10
  4352f0:	strb	w8, [x2]
  4352f4:	sub	x2, x2, x22
  4352f8:	mov	w3, #0x1                   	// #1
  4352fc:	mov	x0, x19
  435300:	mov	x1, x22
  435304:	bl	4205b4 <feof@plt+0x1d8b4>
  435308:	mov	x0, x19
  43530c:	bl	428c88 <feof@plt+0x25f88>
  435310:	mov	x0, x19
  435314:	bl	429a78 <feof@plt+0x26d78>
  435318:	str	x0, [x19, #448]
  43531c:	mov	x0, x19
  435320:	bl	429bf8 <feof@plt+0x26ef8>
  435324:	ldr	x8, [x19]
  435328:	mov	x25, x0
  43532c:	ldr	x9, [x8]
  435330:	ldr	x8, [x8, #32]
  435334:	cmp	x9, x8
  435338:	b.eq	4353c8 <feof@plt+0x326c8>  // b.none
  43533c:	ldr	w26, [x25]
  435340:	mov	x0, x19
  435344:	bl	4206a4 <feof@plt+0x1d9a4>
  435348:	mov	w1, #0x1                   	// #1
  43534c:	mov	x0, x19
  435350:	bl	4328a0 <feof@plt+0x2fba0>
  435354:	strb	wzr, [x24]
  435358:	ldr	x8, [x23]
  43535c:	mov	w0, wzr
  435360:	ldr	x9, [x8, #16]
  435364:	ldr	q0, [x8]
  435368:	str	x9, [x25, #16]
  43536c:	str	q0, [x25]
  435370:	str	x25, [x23]
  435374:	ldrh	w8, [x25, #6]
  435378:	str	w26, [x25]
  43537c:	and	w8, w8, #0xfffffff7
  435380:	strh	w8, [x25, #6]
  435384:	ldr	w8, [x19, #1116]
  435388:	cmp	w8, #0x15
  43538c:	b.eq	4353d8 <feof@plt+0x326d8>  // b.none
  435390:	mov	x0, x19
  435394:	mov	x1, x21
  435398:	bl	42d084 <feof@plt+0x2a384>
  43539c:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  4353a0:	mov	x6, x0
  4353a4:	add	x4, x4, #0xa1b
  4353a8:	mov	w1, #0x3                   	// #3
  4353ac:	mov	x0, x19
  4353b0:	mov	w2, w20
  4353b4:	mov	w3, wzr
  4353b8:	mov	x5, x22
  4353bc:	bl	4228a4 <feof@plt+0x1fba4>
  4353c0:	mov	w0, wzr
  4353c4:	b	4353d8 <feof@plt+0x326d8>
  4353c8:	mov	x0, x19
  4353cc:	str	x25, [x23]
  4353d0:	bl	4206a4 <feof@plt+0x1d9a4>
  4353d4:	mov	w0, #0x1                   	// #1
  4353d8:	mov	sp, x29
  4353dc:	ldp	x20, x19, [sp, #64]
  4353e0:	ldp	x22, x21, [sp, #48]
  4353e4:	ldp	x24, x23, [sp, #32]
  4353e8:	ldp	x26, x25, [sp, #16]
  4353ec:	ldp	x29, x30, [sp], #80
  4353f0:	ret
  4353f4:	stp	x29, x30, [sp, #-80]!
  4353f8:	stp	x24, x23, [sp, #32]
  4353fc:	stp	x22, x21, [sp, #48]
  435400:	stp	x20, x19, [sp, #64]
  435404:	ldr	w8, [x1, #24]
  435408:	mov	w23, w2
  43540c:	mov	x19, x0
  435410:	str	x25, [sp, #16]
  435414:	cmp	w8, #0x7
  435418:	mov	x29, sp
  43541c:	b.ne	435430 <feof@plt+0x32730>  // b.any
  435420:	ldrb	w8, [x19, #16]
  435424:	cbz	w8, 435634 <feof@plt+0x32934>
  435428:	mov	w0, wzr
  43542c:	b	435618 <feof@plt+0x32918>
  435430:	mov	x0, x19
  435434:	mov	w2, w3
  435438:	mov	x20, x1
  43543c:	bl	431988 <feof@plt+0x2ec88>
  435440:	mov	x21, x0
  435444:	bl	4026d0 <strlen@plt>
  435448:	add	x8, x0, #0x10
  43544c:	and	x8, x8, #0xfffffffffffffff0
  435450:	mov	x9, sp
  435454:	sub	x24, x9, x8
  435458:	mov	x22, x0
  43545c:	mov	sp, x24
  435460:	mov	x0, x24
  435464:	mov	x1, x21
  435468:	mov	x2, x22
  43546c:	bl	402640 <memcpy@plt>
  435470:	mov	w8, #0xa                   	// #10
  435474:	mov	w3, #0x1                   	// #1
  435478:	mov	x0, x19
  43547c:	mov	x1, x24
  435480:	mov	x2, x22
  435484:	strb	w8, [x24, x22]
  435488:	bl	4205b4 <feof@plt+0x1d8b4>
  43548c:	mov	x0, x19
  435490:	bl	428c88 <feof@plt+0x25f88>
  435494:	mov	x0, x19
  435498:	bl	429a78 <feof@plt+0x26d78>
  43549c:	str	x0, [x19, #448]
  4354a0:	mov	x0, x19
  4354a4:	bl	429bf8 <feof@plt+0x26ef8>
  4354a8:	str	w23, [x0]
  4354ac:	ldr	x8, [x19, #136]
  4354b0:	mov	x21, x0
  4354b4:	ldr	w9, [x8, #48]
  4354b8:	cmp	w9, #0x2
  4354bc:	b.ne	43559c <feof@plt+0x3289c>  // b.any
  4354c0:	mov	w0, #0x10                  	// #16
  4354c4:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4354c8:	mov	x22, x0
  4354cc:	mov	w1, #0x8                   	// #8
  4354d0:	mov	x0, x19
  4354d4:	bl	42d97c <feof@plt+0x2ac7c>
  4354d8:	ldr	x8, [x19, #40]
  4354dc:	mov	x24, x0
  4354e0:	mov	w3, #0x1                   	// #1
  4354e4:	mov	x1, x20
  4354e8:	mov	x0, x8
  4354ec:	mov	w2, w23
  4354f0:	bl	42ea6c <feof@plt+0x2bd6c>
  4354f4:	ldp	x23, x8, [x24, #16]
  4354f8:	cmp	x23, x8
  4354fc:	b.hi	435658 <feof@plt+0x32958>  // b.pmore
  435500:	cbz	x22, 435530 <feof@plt+0x32830>
  435504:	ldr	x8, [x19, #40]
  435508:	ldr	x9, [x24, #8]
  43550c:	ldr	w2, [x8, #112]
  435510:	sub	x8, x23, x9
  435514:	ubfx	x25, x8, #3, #32
  435518:	cbz	x0, 43552c <feof@plt+0x3282c>
  43551c:	mov	w1, wzr
  435520:	mov	w3, w2
  435524:	bl	42eba4 <feof@plt+0x2bea4>
  435528:	mov	w2, w0
  43552c:	str	w2, [x22, x25, lsl #2]
  435530:	str	x21, [x23], #8
  435534:	str	x23, [x24, #16]
  435538:	ldr	x8, [x19, #136]
  43553c:	ldr	x23, [x24, #8]
  435540:	ldr	x21, [x8]
  435544:	cbnz	x21, 43556c <feof@plt+0x3286c>
  435548:	mov	w0, #0x38                  	// #56
  43554c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435550:	movi	v0.2d, #0x0
  435554:	str	xzr, [x0, #48]
  435558:	stp	q0, q0, [x0, #16]
  43555c:	ldr	x8, [x19, #136]
  435560:	mov	x21, x0
  435564:	stp	xzr, x8, [x0]
  435568:	str	x0, [x8]
  43556c:	mov	w8, #0x2                   	// #2
  435570:	mov	w0, #0x18                  	// #24
  435574:	str	x21, [x19, #136]
  435578:	str	w8, [x21, #48]
  43557c:	str	x24, [x21, #32]
  435580:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435584:	add	x8, x23, #0x8
  435588:	stp	x20, x22, [x0]
  43558c:	str	x22, [x0, #16]
  435590:	str	x0, [x21, #40]
  435594:	stp	x23, x8, [x21, #16]
  435598:	b	4355e0 <feof@plt+0x328e0>
  43559c:	ldr	x0, [x8]
  4355a0:	ldr	x22, [x8, #40]
  4355a4:	cbnz	x0, 4355c8 <feof@plt+0x328c8>
  4355a8:	mov	w0, #0x38                  	// #56
  4355ac:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4355b0:	movi	v0.2d, #0x0
  4355b4:	str	xzr, [x0, #48]
  4355b8:	stp	q0, q0, [x0, #16]
  4355bc:	ldr	x8, [x19, #136]
  4355c0:	stp	xzr, x8, [x0]
  4355c4:	str	x0, [x8]
  4355c8:	mov	w8, #0x1                   	// #1
  4355cc:	add	x9, x21, #0x18
  4355d0:	str	x0, [x19, #136]
  4355d4:	stp	xzr, x22, [x0, #32]
  4355d8:	str	w8, [x0, #48]
  4355dc:	stp	x21, x9, [x0, #16]
  4355e0:	ldr	x8, [x19]
  4355e4:	ldr	x9, [x8]
  4355e8:	ldr	x8, [x8, #32]
  4355ec:	cmp	x9, x8
  4355f0:	b.eq	43560c <feof@plt+0x3290c>  // b.none
  4355f4:	ldr	x3, [x20]
  4355f8:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  4355fc:	add	x2, x2, #0x667
  435600:	mov	w1, #0x4                   	// #4
  435604:	mov	x0, x19
  435608:	bl	4223e4 <feof@plt+0x1f6e4>
  43560c:	mov	x0, x19
  435610:	bl	4206a4 <feof@plt+0x1d9a4>
  435614:	mov	w0, #0x1                   	// #1
  435618:	mov	sp, x29
  43561c:	ldp	x20, x19, [sp, #64]
  435620:	ldp	x22, x21, [sp, #48]
  435624:	ldp	x24, x23, [sp, #32]
  435628:	ldr	x25, [sp, #16]
  43562c:	ldp	x29, x30, [sp], #80
  435630:	ret
  435634:	mov	x0, x19
  435638:	mov	w1, w23
  43563c:	mov	sp, x29
  435640:	ldp	x20, x19, [sp, #64]
  435644:	ldp	x22, x21, [sp, #48]
  435648:	ldp	x24, x23, [sp, #32]
  43564c:	ldr	x25, [sp, #16]
  435650:	ldp	x29, x30, [sp], #80
  435654:	b	41f7d8 <feof@plt+0x1cad8>
  435658:	adrp	x0, 463000 <_obstack_memory_used@@Base+0xddd8>
  43565c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  435660:	add	x0, x0, #0x6ee
  435664:	add	x2, x2, #0xa5b
  435668:	mov	w1, #0x953                 	// #2387
  43566c:	bl	408b70 <feof@plt+0x5e70>
  435670:	sub	sp, sp, #0xb0
  435674:	stp	x29, x30, [sp, #80]
  435678:	stp	x28, x27, [sp, #96]
  43567c:	stp	x26, x25, [sp, #112]
  435680:	stp	x24, x23, [sp, #128]
  435684:	stp	x22, x21, [sp, #144]
  435688:	stp	x20, x19, [sp, #160]
  43568c:	stp	x3, x1, [sp, #16]
  435690:	ldr	x8, [x1, #24]
  435694:	add	x29, sp, #0x50
  435698:	ldrb	w22, [x0, #1157]
  43569c:	mov	x25, x2
  4356a0:	stur	x8, [x29, #-24]
  4356a4:	ldrh	w8, [x8, #16]
  4356a8:	mov	x20, x0
  4356ac:	cmp	w8, #0x0
  4356b0:	csinc	w19, w8, wzr, ne  // ne = any
  4356b4:	mov	w8, #0x1c0                 	// #448
  4356b8:	umull	x1, w19, w8
  4356bc:	bl	42d97c <feof@plt+0x2ac7c>
  4356c0:	ldr	x24, [x0, #8]
  4356c4:	add	x8, x19, w19, uxtw #1
  4356c8:	lsl	x26, x8, #4
  4356cc:	mov	x21, x0
  4356d0:	mov	x0, x24
  4356d4:	mov	w1, wzr
  4356d8:	mov	x2, x26
  4356dc:	bl	402790 <memset@plt>
  4356e0:	mov	w23, wzr
  4356e4:	add	x8, x24, x26
  4356e8:	add	x9, x20, #0x2b0
  4356ec:	mov	w19, #0x201                 	// #513
  4356f0:	mov	x26, x21
  4356f4:	stur	x9, [x29, #-32]
  4356f8:	str	x8, [x21, #16]
  4356fc:	str	x24, [sp, #8]
  435700:	str	x21, [sp, #32]
  435704:	b	435718 <feof@plt+0x32a18>
  435708:	ldrb	w9, [x27, #4]
  43570c:	sub	w10, w9, #0x15
  435710:	cmp	w10, #0x1
  435714:	b.ls	4359f0 <feof@plt+0x32cf0>  // b.plast
  435718:	ldr	x8, [x26, #16]
  43571c:	add	w9, w23, #0x1
  435720:	stur	w23, [x29, #-36]
  435724:	stur	w9, [x29, #-12]
  435728:	str	x8, [x24]
  43572c:	cbz	w22, 43573c <feof@plt+0x32a3c>
  435730:	mov	w0, #0xc8                  	// #200
  435734:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435738:	str	x0, [x24, #32]
  43573c:	mov	w8, wzr
  435740:	mov	w23, #0x32                  	// #50
  435744:	stur	wzr, [x29, #-16]
  435748:	add	w21, w8, #0x2
  43574c:	stur	w8, [x29, #-8]
  435750:	b	435764 <feof@plt+0x32a64>
  435754:	strh	w19, [x20, #24]
  435758:	ldrb	w8, [x27, #4]
  43575c:	cmp	w8, #0x16
  435760:	b.eq	43595c <feof@plt+0x32c5c>  // b.none
  435764:	ldr	x8, [x24]
  435768:	ldr	x9, [x26, #24]
  43576c:	add	x8, x8, x21, lsl #3
  435770:	cmp	x9, x8
  435774:	b.cs	435794 <feof@plt+0x32a94>  // b.hs, b.nlast
  435778:	mov	w2, #0x1f40                	// #8000
  43577c:	mov	x0, x20
  435780:	mov	x1, x26
  435784:	bl	42da28 <feof@plt+0x2ad28>
  435788:	ldr	x8, [x0, #16]
  43578c:	mov	x26, x0
  435790:	str	x8, [x24]
  435794:	cbz	w22, 4357b4 <feof@plt+0x32ab4>
  435798:	cmp	w21, w23
  43579c:	b.ls	4357b4 <feof@plt+0x32ab4>  // b.plast
  4357a0:	ldr	x0, [x24, #32]
  4357a4:	add	w23, w23, #0x3e8
  4357a8:	lsl	x1, x23, #2
  4357ac:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4357b0:	str	x0, [x24, #32]
  4357b4:	sub	x1, x29, #0x4
  4357b8:	mov	x0, x20
  4357bc:	bl	43211c <feof@plt+0x2f41c>
  4357c0:	ldrb	w8, [x0, #4]
  4357c4:	mov	x28, x0
  4357c8:	cmp	w8, #0x51
  4357cc:	b.ne	435880 <feof@plt+0x32b80>  // b.any
  4357d0:	mov	x0, x20
  4357d4:	bl	429a78 <feof@plt+0x26d78>
  4357d8:	ldr	q0, [x28]
  4357dc:	ldr	x8, [x28, #16]
  4357e0:	mov	x27, x0
  4357e4:	str	q0, [x0]
  4357e8:	str	x8, [x0, #16]
  4357ec:	ldr	x28, [x25]
  4357f0:	cbz	x28, 435828 <feof@plt+0x32b28>
  4357f4:	ldp	x8, x9, [x28, #16]
  4357f8:	sub	x9, x9, x8
  4357fc:	cmp	x9, #0x8
  435800:	b.cs	43583c <feof@plt+0x32b3c>  // b.hs, b.nlast
  435804:	ldr	x9, [x28, #8]
  435808:	mov	x0, x20
  43580c:	sub	x8, x8, x9
  435810:	lsl	x1, x8, #1
  435814:	bl	42d97c <feof@plt+0x2ac7c>
  435818:	str	x0, [x25]
  43581c:	str	x28, [x0]
  435820:	ldr	x28, [x25]
  435824:	b	43583c <feof@plt+0x32b3c>
  435828:	mov	w1, #0x100                 	// #256
  43582c:	mov	x0, x20
  435830:	bl	42d97c <feof@plt+0x2ac7c>
  435834:	mov	x28, x0
  435838:	str	x0, [x25]
  43583c:	ldr	x8, [x28, #16]
  435840:	str	x27, [x8]
  435844:	ldr	x8, [x25]
  435848:	ldr	x9, [x8, #16]
  43584c:	add	x9, x9, #0x8
  435850:	str	x9, [x8, #16]
  435854:	ldrb	w8, [x27, #4]
  435858:	cmp	w8, #0x52
  43585c:	b.eq	435754 <feof@plt+0x32a54>  // b.none
  435860:	sub	x1, x29, #0x4
  435864:	mov	x0, x20
  435868:	bl	43211c <feof@plt+0x2f41c>
  43586c:	ldrb	w8, [x0, #4]
  435870:	mov	x27, x0
  435874:	cmp	w8, #0x16
  435878:	b.ne	4357ec <feof@plt+0x32aec>  // b.any
  43587c:	b	435754 <feof@plt+0x32a54>
  435880:	sub	w9, w8, #0x13
  435884:	cmp	w9, #0x12
  435888:	b.hi	4358d8 <feof@plt+0x32bd8>  // b.pmore
  43588c:	adrp	x11, 463000 <_obstack_memory_used@@Base+0xddd8>
  435890:	add	x11, x11, #0x5d6
  435894:	adr	x8, 4358a8 <feof@plt+0x32ba8>
  435898:	ldrb	w10, [x11, x9]
  43589c:	add	x8, x8, x10, lsl #2
  4358a0:	mov	x27, x28
  4358a4:	br	x8
  4358a8:	ldur	w8, [x29, #-16]
  4358ac:	ldur	w12, [x29, #-8]
  4358b0:	cbnz	w8, 435920 <feof@plt+0x32c20>
  4358b4:	ldur	x9, [x29, #-24]
  4358b8:	ldrb	w8, [x9, #19]
  4358bc:	tbz	w8, #3, 435958 <feof@plt+0x32c58>
  4358c0:	ldrh	w8, [x9, #16]
  4358c4:	ldur	w9, [x29, #-12]
  4358c8:	cmp	w9, w8
  4358cc:	b.ne	435958 <feof@plt+0x32c58>  // b.any
  4358d0:	stur	wzr, [x29, #-16]
  4358d4:	b	435920 <feof@plt+0x32c20>
  4358d8:	cmp	w8, #0x53
  4358dc:	b.ne	43590c <feof@plt+0x32c0c>  // b.any
  4358e0:	ldur	w12, [x29, #-8]
  4358e4:	mov	w8, wzr
  4358e8:	cbz	w12, 435748 <feof@plt+0x32a48>
  4358ec:	b	435920 <feof@plt+0x32c20>
  4358f0:	ldur	w8, [x29, #-16]
  4358f4:	add	w8, w8, #0x1
  4358f8:	b	435908 <feof@plt+0x32c08>
  4358fc:	ldur	w8, [x29, #-16]
  435900:	cbz	w8, 435958 <feof@plt+0x32c58>
  435904:	sub	w8, w8, #0x1
  435908:	stur	w8, [x29, #-16]
  43590c:	ldur	w12, [x29, #-8]
  435910:	b	435920 <feof@plt+0x32c20>
  435914:	ldrb	w8, [x28, #6]
  435918:	ldur	w12, [x29, #-8]
  43591c:	tbnz	w8, #6, 435958 <feof@plt+0x32c58>
  435920:	ldrb	w10, [x20, #1157]
  435924:	ldr	x9, [x24]
  435928:	mov	w8, w12
  43592c:	cbz	w10, 43594c <feof@plt+0x32c4c>
  435930:	ldr	x10, [x24, #32]
  435934:	ldur	w11, [x29, #-4]
  435938:	str	x28, [x9, x8, lsl #3]
  43593c:	cbz	x10, 435944 <feof@plt+0x32c44>
  435940:	str	w11, [x10, x8, lsl #2]
  435944:	add	w8, w12, #0x1
  435948:	b	435748 <feof@plt+0x32a48>
  43594c:	str	x28, [x9, x8, lsl #3]
  435950:	add	w8, w12, #0x1
  435954:	b	435748 <feof@plt+0x32a48>
  435958:	mov	x27, x28
  43595c:	ldp	w23, w8, [x29, #-12]
  435960:	mov	w8, w8
  435964:	cbz	x8, 435988 <feof@plt+0x32c88>
  435968:	ldr	x9, [x24]
  43596c:	sub	w10, w8, #0x1
  435970:	sub	x8, x8, #0x1
  435974:	ldr	x9, [x9, w10, uxtw #3]
  435978:	ldrb	w9, [x9, #4]
  43597c:	cmp	w9, #0x53
  435980:	b.eq	435964 <feof@plt+0x32c64>  // b.none
  435984:	add	w8, w8, #0x1
  435988:	str	w8, [x24, #24]
  43598c:	ldrb	w11, [x20, #1157]
  435990:	ldr	x10, [x24]
  435994:	mov	w9, w8
  435998:	cbz	w11, 4359b8 <feof@plt+0x32cb8>
  43599c:	ldr	x8, [x24, #32]
  4359a0:	ldr	w11, [x20, #688]
  4359a4:	ldur	x12, [x29, #-32]
  4359a8:	str	x12, [x10, x9, lsl #3]
  4359ac:	cbz	x8, 4359c0 <feof@plt+0x32cc0>
  4359b0:	str	w11, [x8, x9, lsl #2]
  4359b4:	b	4359c0 <feof@plt+0x32cc0>
  4359b8:	ldur	x8, [x29, #-32]
  4359bc:	str	x8, [x10, x9, lsl #3]
  4359c0:	ldur	x8, [x29, #-24]
  4359c4:	ldrh	w8, [x8, #16]
  4359c8:	cmp	w23, w8
  4359cc:	b.hi	435708 <feof@plt+0x32a08>  // b.pmore
  4359d0:	mov	x10, x24
  4359d4:	ldr	x11, [x10], #48
  4359d8:	add	w9, w9, #0x1
  4359dc:	cmp	w23, w8
  4359e0:	add	x9, x11, w9, uxtw #3
  4359e4:	csel	x24, x24, x10, eq  // eq = none
  4359e8:	str	x9, [x26, #16]
  4359ec:	b	435708 <feof@plt+0x32a08>
  4359f0:	cmp	w9, #0x16
  4359f4:	b.ne	435a3c <feof@plt+0x32d3c>  // b.any
  4359f8:	ldr	x8, [x20, #136]
  4359fc:	ldr	x19, [sp, #32]
  435a00:	ldr	x8, [x8, #8]
  435a04:	cbnz	x8, 435a10 <feof@plt+0x32d10>
  435a08:	ldrb	w8, [x20, #16]
  435a0c:	cbz	w8, 435a1c <feof@plt+0x32d1c>
  435a10:	mov	w1, #0x1                   	// #1
  435a14:	mov	x0, x20
  435a18:	bl	4328a0 <feof@plt+0x2fba0>
  435a1c:	ldr	x8, [sp, #24]
  435a20:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  435a24:	add	x2, x2, #0xab7
  435a28:	mov	w1, #0x3                   	// #3
  435a2c:	ldr	x3, [x8]
  435a30:	mov	x0, x20
  435a34:	bl	4223e4 <feof@plt+0x1f6e4>
  435a38:	b	435aac <feof@plt+0x32dac>
  435a3c:	ldr	x19, [sp, #32]
  435a40:	ldur	x1, [x29, #-24]
  435a44:	ldur	w9, [x29, #-36]
  435a48:	mov	w25, w23
  435a4c:	cbnz	w9, 435a6c <feof@plt+0x32d6c>
  435a50:	cbz	w8, 435a5c <feof@plt+0x32d5c>
  435a54:	mov	w25, #0x1                   	// #1
  435a58:	b	435a6c <feof@plt+0x32d6c>
  435a5c:	ldr	x8, [sp, #8]
  435a60:	ldr	w8, [x8, #24]
  435a64:	cmp	w8, #0x0
  435a68:	cset	w25, ne  // ne = any
  435a6c:	ldr	x2, [sp, #24]
  435a70:	mov	x0, x20
  435a74:	mov	w3, w25
  435a78:	mov	x21, x1
  435a7c:	bl	431de4 <feof@plt+0x2f0e4>
  435a80:	tbz	w0, #0, 435aac <feof@plt+0x32dac>
  435a84:	ldrb	w8, [x21, #19]
  435a88:	tbz	w8, #3, 435afc <feof@plt+0x32dfc>
  435a8c:	ldrh	w8, [x21, #16]
  435a90:	cmp	w25, w8
  435a94:	b.cs	435ae0 <feof@plt+0x32de0>  // b.hs, b.nlast
  435a98:	ldr	x10, [sp, #8]
  435a9c:	mov	w9, #0x30                  	// #48
  435aa0:	madd	x8, x8, x9, x10
  435aa4:	stur	xzr, [x8, #-48]
  435aa8:	b	435afc <feof@plt+0x32dfc>
  435aac:	mov	x0, x20
  435ab0:	mov	x1, x19
  435ab4:	bl	42d95c <feof@plt+0x2ac5c>
  435ab8:	mov	x19, xzr
  435abc:	mov	x0, x19
  435ac0:	ldp	x20, x19, [sp, #160]
  435ac4:	ldp	x22, x21, [sp, #144]
  435ac8:	ldp	x24, x23, [sp, #128]
  435acc:	ldp	x26, x25, [sp, #112]
  435ad0:	ldp	x28, x27, [sp, #96]
  435ad4:	ldp	x29, x30, [sp, #80]
  435ad8:	add	sp, sp, #0xb0
  435adc:	ret
  435ae0:	cmp	w25, #0x1
  435ae4:	b.ne	435afc <feof@plt+0x32dfc>  // b.any
  435ae8:	ldr	x9, [sp, #8]
  435aec:	ldr	w9, [x9, #24]
  435af0:	cbnz	w9, 435afc <feof@plt+0x32dfc>
  435af4:	ldrb	w9, [x20, #1153]
  435af8:	cbz	w9, 435a98 <feof@plt+0x32d98>
  435afc:	ldr	x8, [sp, #16]
  435b00:	cbz	x8, 435abc <feof@plt+0x32dbc>
  435b04:	str	w23, [x8]
  435b08:	b	435abc <feof@plt+0x32dbc>
  435b0c:	sub	sp, sp, #0x60
  435b10:	stp	x29, x30, [sp, #16]
  435b14:	stp	x26, x25, [sp, #32]
  435b18:	stp	x24, x23, [sp, #48]
  435b1c:	stp	x22, x21, [sp, #64]
  435b20:	stp	x20, x19, [sp, #80]
  435b24:	ldr	w8, [x1, #24]
  435b28:	add	x29, sp, #0x10
  435b2c:	cbz	w8, 435cf4 <feof@plt+0x32ff4>
  435b30:	ldr	x8, [x1, #8]
  435b34:	mov	x20, x1
  435b38:	cbnz	x8, 435cf4 <feof@plt+0x32ff4>
  435b3c:	ldrb	w8, [x0, #1138]
  435b40:	ldrb	w21, [x0, #1157]
  435b44:	mov	x19, x0
  435b48:	strb	wzr, [x0, #1138]
  435b4c:	cmp	w8, #0x0
  435b50:	mov	w0, #0x800                 	// #2048
  435b54:	cset	w22, ne  // ne = any
  435b58:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435b5c:	str	x0, [x20, #8]
  435b60:	ldrb	w8, [x19, #1157]
  435b64:	cbz	w8, 435b74 <feof@plt+0x32e74>
  435b68:	mov	w0, #0x400                 	// #1024
  435b6c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435b70:	str	x0, [x20, #40]
  435b74:	cbz	w21, 435bf4 <feof@plt+0x32ef4>
  435b78:	ldr	x8, [x19, #136]
  435b7c:	ldr	x25, [x20, #32]
  435b80:	ldr	x23, [x20]
  435b84:	ldr	w24, [x20, #24]
  435b88:	ldr	w9, [x8, #48]
  435b8c:	cmp	w9, #0x2
  435b90:	add	x9, x8, #0x28
  435b94:	b.ne	435b9c <feof@plt+0x32e9c>  // b.any
  435b98:	ldr	x9, [x9]
  435b9c:	ldr	x21, [x8]
  435ba0:	ldr	x26, [x9]
  435ba4:	cbnz	x21, 435bcc <feof@plt+0x32ecc>
  435ba8:	mov	w0, #0x38                  	// #56
  435bac:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435bb0:	movi	v0.2d, #0x0
  435bb4:	str	xzr, [x0, #48]
  435bb8:	stp	q0, q0, [x0, #16]
  435bbc:	ldr	x8, [x19, #136]
  435bc0:	mov	x21, x0
  435bc4:	stp	xzr, x8, [x0]
  435bc8:	str	x0, [x8]
  435bcc:	mov	w8, #0x2                   	// #2
  435bd0:	mov	w0, #0x18                  	// #24
  435bd4:	str	x21, [x19, #136]
  435bd8:	str	w8, [x21, #48]
  435bdc:	str	xzr, [x21, #32]
  435be0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435be4:	stp	x26, x25, [x0]
  435be8:	str	x25, [x0, #16]
  435bec:	str	x0, [x21, #40]
  435bf0:	b	435c38 <feof@plt+0x32f38>
  435bf4:	ldr	x8, [x19, #136]
  435bf8:	ldr	x23, [x20]
  435bfc:	ldr	w24, [x20, #24]
  435c00:	ldr	x21, [x8]
  435c04:	cbnz	x21, 435c2c <feof@plt+0x32f2c>
  435c08:	mov	w0, #0x38                  	// #56
  435c0c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435c10:	movi	v0.2d, #0x0
  435c14:	str	xzr, [x0, #48]
  435c18:	stp	q0, q0, [x0, #16]
  435c1c:	ldr	x8, [x19, #136]
  435c20:	mov	x21, x0
  435c24:	stp	xzr, x8, [x0]
  435c28:	str	x0, [x8]
  435c2c:	str	x21, [x19, #136]
  435c30:	stp	xzr, xzr, [x21, #32]
  435c34:	str	wzr, [x21, #48]
  435c38:	add	w8, w24, #0x1
  435c3c:	add	x8, x23, w8, uxtw #3
  435c40:	stp	x23, x8, [x21, #16]
  435c44:	ldr	w8, [x20, #28]
  435c48:	mov	w21, #0x100                 	// #256
  435c4c:	b	435c5c <feof@plt+0x32f5c>
  435c50:	str	x0, [x9, x8, lsl #3]
  435c54:	add	w8, w8, #0x1
  435c58:	str	w8, [x20, #28]
  435c5c:	add	w23, w8, #0x1
  435c60:	cmp	x21, x23
  435c64:	b.cs	435ca4 <feof@plt+0x32fa4>  // b.hs, b.nlast
  435c68:	ldr	x0, [x20, #8]
  435c6c:	lsl	x1, x23, #4
  435c70:	lsl	x21, x23, #1
  435c74:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  435c78:	str	x0, [x20, #8]
  435c7c:	ldrb	w8, [x19, #1157]
  435c80:	cbz	w8, 435ca4 <feof@plt+0x32fa4>
  435c84:	ldr	x0, [x20, #40]
  435c88:	lsl	x1, x23, #3
  435c8c:	cbz	x0, 435c98 <feof@plt+0x32f98>
  435c90:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  435c94:	b	435ca0 <feof@plt+0x32fa0>
  435c98:	mov	x0, x1
  435c9c:	bl	45535c <_obstack_memory_used@@Base+0x134>
  435ca0:	str	x0, [x20, #40]
  435ca4:	sub	x1, x29, #0x4
  435ca8:	mov	x0, x19
  435cac:	bl	43211c <feof@plt+0x2f41c>
  435cb0:	ldrb	w8, [x0, #4]
  435cb4:	cmp	w8, #0x16
  435cb8:	b.eq	435ce8 <feof@plt+0x32fe8>  // b.none
  435cbc:	ldr	w8, [x20, #28]
  435cc0:	ldrb	w10, [x19, #1157]
  435cc4:	ldr	x9, [x20, #8]
  435cc8:	cbz	w10, 435c50 <feof@plt+0x32f50>
  435ccc:	ldr	x10, [x20, #40]
  435cd0:	ldur	w11, [x29, #-4]
  435cd4:	str	x0, [x9, x8, lsl #3]
  435cd8:	cbz	x10, 435c54 <feof@plt+0x32f54>
  435cdc:	str	w11, [x10, x8, lsl #2]
  435ce0:	ldr	w8, [x20, #28]
  435ce4:	b	435c54 <feof@plt+0x32f54>
  435ce8:	mov	x0, x19
  435cec:	bl	43200c <feof@plt+0x2f30c>
  435cf0:	strb	w22, [x19, #1138]
  435cf4:	ldp	x20, x19, [sp, #80]
  435cf8:	ldp	x22, x21, [sp, #64]
  435cfc:	ldp	x24, x23, [sp, #48]
  435d00:	ldp	x26, x25, [sp, #32]
  435d04:	ldp	x29, x30, [sp, #16]
  435d08:	add	sp, sp, #0x60
  435d0c:	ret
  435d10:	stp	x29, x30, [sp, #-16]!
  435d14:	ldrb	w8, [x0, #9]
  435d18:	mov	x29, sp
  435d1c:	cbz	w8, 435d94 <feof@plt+0x33094>
  435d20:	ldrb	w9, [x1, #4]
  435d24:	cmp	w9, #0x35
  435d28:	b.ne	435d40 <feof@plt+0x33040>  // b.any
  435d2c:	ldr	x8, [x0]
  435d30:	ldr	x10, [x1, #8]
  435d34:	ldr	x11, [x8, #1280]
  435d38:	cmp	x10, x11
  435d3c:	b.eq	435db4 <feof@plt+0x330b4>  // b.none
  435d40:	ldr	w8, [x0, #12]
  435d44:	cmp	w8, #0x1
  435d48:	b.ne	435d68 <feof@plt+0x33068>  // b.any
  435d4c:	cmp	w9, #0x14
  435d50:	b.ne	435da0 <feof@plt+0x330a0>  // b.any
  435d54:	mov	w8, #0x2                   	// #2
  435d58:	str	w8, [x0, #12]
  435d5c:	mov	w0, #0x1                   	// #1
  435d60:	ldp	x29, x30, [sp], #16
  435d64:	ret
  435d68:	cmp	w8, #0x2
  435d6c:	b.lt	435d94 <feof@plt+0x33094>  // b.tstop
  435d70:	b.ne	435e08 <feof@plt+0x33108>  // b.any
  435d74:	cmp	w9, #0x26
  435d78:	b.ne	435e00 <feof@plt+0x33100>  // b.any
  435d7c:	ldr	x0, [x0]
  435d80:	ldr	w2, [x1]
  435d84:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  435d88:	add	x3, x3, #0xc0c
  435d8c:	mov	w1, #0x3                   	// #3
  435d90:	b	435dd4 <feof@plt+0x330d4>
  435d94:	mov	w0, #0x2                   	// #2
  435d98:	ldp	x29, x30, [sp], #16
  435d9c:	ret
  435da0:	ldr	x8, [x0]
  435da4:	ldr	w2, [x0, #20]
  435da8:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  435dac:	add	x3, x3, #0xbd9
  435db0:	b	435dcc <feof@plt+0x330cc>
  435db4:	ldr	w9, [x0, #12]
  435db8:	cmp	w9, #0x1
  435dbc:	b.lt	435de4 <feof@plt+0x330e4>  // b.tstop
  435dc0:	ldr	w2, [x1]
  435dc4:	adrp	x3, 463000 <_obstack_memory_used@@Base+0xddd8>
  435dc8:	add	x3, x3, #0xbaf
  435dcc:	mov	w1, #0x3                   	// #3
  435dd0:	mov	x0, x8
  435dd4:	bl	422c94 <feof@plt+0x1ff94>
  435dd8:	mov	w0, wzr
  435ddc:	ldp	x29, x30, [sp], #16
  435de0:	ret
  435de4:	add	w8, w9, #0x1
  435de8:	str	w8, [x0, #12]
  435dec:	ldr	w8, [x1]
  435df0:	str	w8, [x0, #20]
  435df4:	mov	w0, #0x3                   	// #3
  435df8:	ldp	x29, x30, [sp], #16
  435dfc:	ret
  435e00:	mov	w8, #0x3                   	// #3
  435e04:	str	w8, [x0, #12]
  435e08:	ldrb	w9, [x0, #10]
  435e0c:	strb	wzr, [x0, #10]
  435e10:	ldrb	w10, [x1, #4]
  435e14:	cmp	w10, #0x14
  435e18:	b.eq	435e40 <feof@plt+0x33140>  // b.none
  435e1c:	cmp	w10, #0x15
  435e20:	b.eq	435e4c <feof@plt+0x3314c>  // b.none
  435e24:	cmp	w10, #0x26
  435e28:	b.ne	435e70 <feof@plt+0x33170>  // b.any
  435e2c:	mov	w8, #0x1                   	// #1
  435e30:	strb	w8, [x0, #10]
  435e34:	ldr	w8, [x1]
  435e38:	str	w8, [x0, #16]
  435e3c:	b	435e70 <feof@plt+0x33170>
  435e40:	add	w8, w8, #0x1
  435e44:	str	w8, [x0, #12]
  435e48:	b	435e70 <feof@plt+0x33170>
  435e4c:	sub	w8, w8, #0x1
  435e50:	cmp	w8, #0x2
  435e54:	str	w8, [x0, #12]
  435e58:	b.ne	435e70 <feof@plt+0x33170>  // b.any
  435e5c:	str	wzr, [x0, #12]
  435e60:	cbnz	w9, 435d7c <feof@plt+0x3307c>
  435e64:	mov	w0, #0x4                   	// #4
  435e68:	ldp	x29, x30, [sp], #16
  435e6c:	ret
  435e70:	ldrb	w8, [x0, #8]
  435e74:	cmp	w8, #0x0
  435e78:	mov	w8, #0x1                   	// #1
  435e7c:	cinc	w0, w8, ne  // ne = any
  435e80:	ldp	x29, x30, [sp], #16
  435e84:	ret
  435e88:	mov	w0, #0x1                   	// #1
  435e8c:	mov	w1, #0x38                  	// #56
  435e90:	b	455390 <_obstack_memory_used@@Base+0x168>
  435e94:	stp	x29, x30, [sp, #-32]!
  435e98:	stp	x20, x19, [sp, #16]
  435e9c:	mov	x19, x0
  435ea0:	ldr	x0, [x0]
  435ea4:	mov	x29, sp
  435ea8:	cbz	x0, 435ed8 <feof@plt+0x331d8>
  435eac:	ldr	w8, [x19, #8]
  435eb0:	cbz	w8, 435ed4 <feof@plt+0x331d4>
  435eb4:	mov	x20, xzr
  435eb8:	ldr	x0, [x0, x20, lsl #3]
  435ebc:	bl	402770 <free@plt>
  435ec0:	ldr	w8, [x19, #8]
  435ec4:	ldr	x0, [x19]
  435ec8:	add	x20, x20, #0x1
  435ecc:	cmp	x20, x8
  435ed0:	b.cc	435eb8 <feof@plt+0x331b8>  // b.lo, b.ul, b.last
  435ed4:	bl	402770 <free@plt>
  435ed8:	ldr	x0, [x19, #16]
  435edc:	cbz	x0, 435f0c <feof@plt+0x3320c>
  435ee0:	ldr	w8, [x19, #24]
  435ee4:	cbz	w8, 435f08 <feof@plt+0x33208>
  435ee8:	mov	x20, xzr
  435eec:	ldr	x0, [x0, x20, lsl #3]
  435ef0:	bl	402770 <free@plt>
  435ef4:	ldr	w8, [x19, #24]
  435ef8:	ldr	x0, [x19, #16]
  435efc:	add	x20, x20, #0x1
  435f00:	cmp	x20, x8
  435f04:	b.cc	435eec <feof@plt+0x331ec>  // b.lo, b.ul, b.last
  435f08:	bl	402770 <free@plt>
  435f0c:	ldr	x0, [x19, #32]
  435f10:	cbz	x0, 435f48 <feof@plt+0x33248>
  435f14:	ldr	w8, [x19, #48]
  435f18:	cbz	w8, 435f3c <feof@plt+0x3323c>
  435f1c:	mov	x20, xzr
  435f20:	ldr	x0, [x0, x20, lsl #3]
  435f24:	bl	402770 <free@plt>
  435f28:	ldr	w8, [x19, #48]
  435f2c:	ldr	x0, [x19, #32]
  435f30:	add	x20, x20, #0x1
  435f34:	cmp	x20, x8
  435f38:	b.cc	435f20 <feof@plt+0x33220>  // b.lo, b.ul, b.last
  435f3c:	bl	402770 <free@plt>
  435f40:	ldr	x0, [x19, #40]
  435f44:	bl	402770 <free@plt>
  435f48:	mov	x0, x19
  435f4c:	ldp	x20, x19, [sp, #16]
  435f50:	ldp	x29, x30, [sp], #32
  435f54:	b	402770 <free@plt>
  435f58:	stp	x29, x30, [sp, #-48]!
  435f5c:	stp	x22, x21, [sp, #16]
  435f60:	stp	x20, x19, [sp, #32]
  435f64:	ldp	w8, w9, [x0, #8]
  435f68:	mov	w20, w2
  435f6c:	mov	x19, x0
  435f70:	mov	x21, x1
  435f74:	cmp	w8, w9
  435f78:	mov	x29, sp
  435f7c:	b.ne	435f9c <feof@plt+0x3329c>  // b.any
  435f80:	ldr	x0, [x19]
  435f84:	lsl	w8, w8, #1
  435f88:	add	w8, w8, #0x4
  435f8c:	lsl	x1, x8, #3
  435f90:	str	w8, [x19, #12]
  435f94:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  435f98:	str	x0, [x19]
  435f9c:	ldr	x8, [x19, #32]
  435fa0:	cbz	x8, 436028 <feof@plt+0x33328>
  435fa4:	ldr	w9, [x19, #48]
  435fa8:	cbz	w9, 436028 <feof@plt+0x33328>
  435fac:	mov	x22, xzr
  435fb0:	ldr	x9, [x19, #40]
  435fb4:	lsl	x10, x22, #3
  435fb8:	ldr	x0, [x8, x10]
  435fbc:	mov	x1, x21
  435fc0:	ldr	x2, [x9, x10]
  435fc4:	bl	453a34 <feof@plt+0x50d34>
  435fc8:	cbnz	w0, 436008 <feof@plt+0x33308>
  435fcc:	ldr	x8, [x19, #40]
  435fd0:	ldr	x8, [x8, x22, lsl #3]
  435fd4:	add	x9, x21, x8
  435fd8:	ldrb	w10, [x9]
  435fdc:	cmp	w10, #0x2f
  435fe0:	b.ne	436008 <feof@plt+0x33308>  // b.any
  435fe4:	ldrb	w10, [x9, #1]
  435fe8:	cmp	w10, #0x2e
  435fec:	b.ne	436020 <feof@plt+0x33320>  // b.any
  435ff0:	ldrb	w10, [x9, #2]
  435ff4:	cmp	w10, #0x2e
  435ff8:	b.ne	436020 <feof@plt+0x33320>  // b.any
  435ffc:	ldrb	w9, [x9, #3]
  436000:	cmp	w9, #0x2f
  436004:	b.ne	436020 <feof@plt+0x33320>  // b.any
  436008:	ldr	w8, [x19, #48]
  43600c:	add	x22, x22, #0x1
  436010:	cmp	x22, x8
  436014:	b.cs	436028 <feof@plt+0x33328>  // b.hs, b.nlast
  436018:	ldr	x8, [x19, #32]
  43601c:	b	435fb0 <feof@plt+0x332b0>
  436020:	add	x8, x21, x8
  436024:	add	x21, x8, #0x1
  436028:	ldrb	w8, [x21]
  43602c:	cmp	w8, #0x2e
  436030:	b.ne	436054 <feof@plt+0x33354>  // b.any
  436034:	ldrb	w8, [x21, #1]
  436038:	cmp	w8, #0x2f
  43603c:	b.ne	436054 <feof@plt+0x33354>  // b.any
  436040:	add	x21, x21, #0x1
  436044:	ldrb	w8, [x21, #1]!
  436048:	cmp	w8, #0x2f
  43604c:	b.eq	436044 <feof@plt+0x33344>  // b.none
  436050:	b	43602c <feof@plt+0x3332c>
  436054:	mov	x0, x21
  436058:	cbz	w20, 436064 <feof@plt+0x33364>
  43605c:	bl	43608c <feof@plt+0x3338c>
  436060:	b	436068 <feof@plt+0x33368>
  436064:	bl	45547c <_obstack_memory_used@@Base+0x254>
  436068:	ldr	w8, [x19, #8]
  43606c:	ldr	x9, [x19]
  436070:	add	w10, w8, #0x1
  436074:	str	w10, [x19, #8]
  436078:	str	x0, [x9, x8, lsl #3]
  43607c:	ldp	x20, x19, [sp, #32]
  436080:	ldp	x22, x21, [sp, #16]
  436084:	ldp	x29, x30, [sp], #48
  436088:	ret
  43608c:	stp	x29, x30, [sp, #-32]!
  436090:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  436094:	str	x19, [sp, #16]
  436098:	mov	x19, x0
  43609c:	mov	w8, wzr
  4360a0:	add	x9, x9, #0xefb
  4360a4:	mov	x10, x0
  4360a8:	mov	x29, sp
  4360ac:	b	4360c0 <feof@plt+0x333c0>
  4360b0:	sub	w8, w8, w11
  4360b4:	add	w8, w8, #0x1
  4360b8:	add	x10, x10, #0x1
  4360bc:	add	w8, w8, #0x1
  4360c0:	ldrb	w11, [x10]
  4360c4:	cmp	w11, #0x24
  4360c8:	b.hi	4360b8 <feof@plt+0x333b8>  // b.pmore
  4360cc:	adr	x12, 4360b4 <feof@plt+0x333b4>
  4360d0:	ldrb	w13, [x9, x11]
  4360d4:	add	x12, x12, x13, lsl #2
  4360d8:	br	x12
  4360dc:	mov	x11, xzr
  4360e0:	add	x12, x10, x11
  4360e4:	sub	x12, x12, #0x1
  4360e8:	cmp	x12, x19
  4360ec:	b.cc	4360b0 <feof@plt+0x333b0>  // b.lo, b.ul, b.last
  4360f0:	ldrb	w12, [x12]
  4360f4:	sub	x11, x11, #0x1
  4360f8:	cmp	w12, #0x5c
  4360fc:	b.eq	4360e0 <feof@plt+0x333e0>  // b.none
  436100:	sub	w8, w8, w11
  436104:	b	4360b8 <feof@plt+0x333b8>
  436108:	add	w8, w8, #0x1
  43610c:	sxtw	x0, w8
  436110:	bl	45535c <_obstack_memory_used@@Base+0x134>
  436114:	adrp	x9, 463000 <_obstack_memory_used@@Base+0xddd8>
  436118:	sub	x8, x19, #0x1
  43611c:	add	x9, x9, #0xf20
  436120:	mov	w10, #0x5c                  	// #92
  436124:	mov	w11, #0x24                  	// #36
  436128:	mov	x13, x19
  43612c:	mov	x12, x0
  436130:	b	436144 <feof@plt+0x33444>
  436134:	strb	w10, [x12], #1
  436138:	ldrb	w14, [x13], #1
  43613c:	add	x8, x8, #0x1
  436140:	strb	w14, [x12], #1
  436144:	ldrb	w14, [x13]
  436148:	cmp	w14, #0x24
  43614c:	b.hi	436138 <feof@plt+0x33438>  // b.pmore
  436150:	adr	x15, 436134 <feof@plt+0x33434>
  436154:	ldrb	w16, [x9, x14]
  436158:	add	x15, x15, x16, lsl #2
  43615c:	br	x15
  436160:	mov	x14, x8
  436164:	cmp	x14, x19
  436168:	b.cc	436134 <feof@plt+0x33434>  // b.lo, b.ul, b.last
  43616c:	ldrb	w15, [x14], #-1
  436170:	strb	w10, [x12], #1
  436174:	cmp	w15, #0x5c
  436178:	b.eq	436164 <feof@plt+0x33464>  // b.none
  43617c:	b	436138 <feof@plt+0x33438>
  436180:	strb	w11, [x12], #1
  436184:	b	436138 <feof@plt+0x33438>
  436188:	ldr	x19, [sp, #16]
  43618c:	strb	wzr, [x12]
  436190:	ldp	x29, x30, [sp], #32
  436194:	ret
  436198:	stp	x29, x30, [sp, #-48]!
  43619c:	stp	x20, x19, [sp, #32]
  4361a0:	ldr	w8, [x0, #8]
  4361a4:	str	x21, [sp, #16]
  4361a8:	mov	x29, sp
  4361ac:	cbnz	w8, 436224 <feof@plt+0x33524>
  4361b0:	ldrb	w8, [x1]
  4361b4:	mov	x19, x0
  4361b8:	cbz	w8, 436238 <feof@plt+0x33538>
  4361bc:	mov	x0, x1
  4361c0:	bl	454e54 <feof@plt+0x52154>
  4361c4:	mov	x21, x0
  4361c8:	bl	4026d0 <strlen@plt>
  4361cc:	add	x9, x0, #0x12
  4361d0:	mov	x8, sp
  4361d4:	and	x9, x9, #0xfffffffffffffff0
  4361d8:	sub	x20, x8, x9
  4361dc:	mov	sp, x20
  4361e0:	mov	x0, x20
  4361e4:	mov	x1, x21
  4361e8:	bl	402860 <strcpy@plt>
  4361ec:	mov	w1, #0x2e                  	// #46
  4361f0:	mov	x0, x20
  4361f4:	bl	402aa0 <strrchr@plt>
  4361f8:	cbnz	x0, 436208 <feof@plt+0x33508>
  4361fc:	mov	x0, x20
  436200:	bl	4026d0 <strlen@plt>
  436204:	add	x0, x20, x0
  436208:	mov	w8, #0x6f2e                	// #28462
  43620c:	strb	wzr, [x0, #2]
  436210:	strh	w8, [x0]
  436214:	mov	w2, #0x1                   	// #1
  436218:	mov	x0, x19
  43621c:	mov	x1, x20
  436220:	bl	435f58 <feof@plt+0x33258>
  436224:	mov	sp, x29
  436228:	ldp	x20, x19, [sp, #32]
  43622c:	ldr	x21, [sp, #16]
  436230:	ldp	x29, x30, [sp], #48
  436234:	ret
  436238:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  43623c:	add	x1, x1, #0x257
  436240:	mov	w2, #0x1                   	// #1
  436244:	mov	x0, x19
  436248:	mov	sp, x29
  43624c:	ldp	x20, x19, [sp, #32]
  436250:	ldr	x21, [sp, #16]
  436254:	ldp	x29, x30, [sp], #48
  436258:	b	435f58 <feof@plt+0x33258>
  43625c:	stp	x29, x30, [sp, #-48]!
  436260:	stp	x20, x19, [sp, #32]
  436264:	ldr	x8, [x0, #32]
  436268:	mov	x19, x0
  43626c:	mov	x20, x1
  436270:	str	x21, [sp, #16]
  436274:	mov	x29, sp
  436278:	cbz	x8, 436300 <feof@plt+0x33600>
  43627c:	ldr	w9, [x19, #48]
  436280:	cbz	w9, 436300 <feof@plt+0x33600>
  436284:	mov	x21, xzr
  436288:	ldr	x9, [x19, #40]
  43628c:	lsl	x10, x21, #3
  436290:	ldr	x0, [x8, x10]
  436294:	mov	x1, x20
  436298:	ldr	x2, [x9, x10]
  43629c:	bl	453a34 <feof@plt+0x50d34>
  4362a0:	cbnz	w0, 4362e0 <feof@plt+0x335e0>
  4362a4:	ldr	x8, [x19, #40]
  4362a8:	ldr	x8, [x8, x21, lsl #3]
  4362ac:	add	x9, x20, x8
  4362b0:	ldrb	w10, [x9]
  4362b4:	cmp	w10, #0x2f
  4362b8:	b.ne	4362e0 <feof@plt+0x335e0>  // b.any
  4362bc:	ldrb	w10, [x9, #1]
  4362c0:	cmp	w10, #0x2e
  4362c4:	b.ne	4362f8 <feof@plt+0x335f8>  // b.any
  4362c8:	ldrb	w10, [x9, #2]
  4362cc:	cmp	w10, #0x2e
  4362d0:	b.ne	4362f8 <feof@plt+0x335f8>  // b.any
  4362d4:	ldrb	w9, [x9, #3]
  4362d8:	cmp	w9, #0x2f
  4362dc:	b.ne	4362f8 <feof@plt+0x335f8>  // b.any
  4362e0:	ldr	w8, [x19, #48]
  4362e4:	add	x21, x21, #0x1
  4362e8:	cmp	x21, x8
  4362ec:	b.cs	436300 <feof@plt+0x33600>  // b.hs, b.nlast
  4362f0:	ldr	x8, [x19, #32]
  4362f4:	b	436288 <feof@plt+0x33588>
  4362f8:	add	x8, x20, x8
  4362fc:	add	x20, x8, #0x1
  436300:	ldrb	w8, [x20]
  436304:	cmp	w8, #0x2e
  436308:	b.ne	43632c <feof@plt+0x3362c>  // b.any
  43630c:	ldrb	w8, [x20, #1]
  436310:	cmp	w8, #0x2f
  436314:	b.ne	43632c <feof@plt+0x3362c>  // b.any
  436318:	add	x20, x20, #0x1
  43631c:	ldrb	w8, [x20, #1]!
  436320:	cmp	w8, #0x2f
  436324:	b.eq	43631c <feof@plt+0x3361c>  // b.none
  436328:	b	436304 <feof@plt+0x33604>
  43632c:	mov	x0, x20
  436330:	bl	43608c <feof@plt+0x3338c>
  436334:	ldp	w8, w9, [x19, #24]
  436338:	mov	x20, x0
  43633c:	cmp	w8, w9
  436340:	b.ne	436368 <feof@plt+0x33668>  // b.any
  436344:	ldr	x0, [x19, #16]
  436348:	lsl	w8, w8, #1
  43634c:	add	w8, w8, #0x8
  436350:	lsl	x1, x8, #3
  436354:	str	w8, [x19, #28]
  436358:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  43635c:	ldr	w8, [x19, #24]
  436360:	str	x0, [x19, #16]
  436364:	b	43636c <feof@plt+0x3366c>
  436368:	ldr	x0, [x19, #16]
  43636c:	add	w9, w8, #0x1
  436370:	str	w9, [x19, #24]
  436374:	str	x20, [x0, w8, uxtw #3]
  436378:	ldp	x20, x19, [sp, #32]
  43637c:	ldr	x21, [sp, #16]
  436380:	ldp	x29, x30, [sp], #48
  436384:	ret
  436388:	stp	x29, x30, [sp, #-64]!
  43638c:	stp	x24, x23, [sp, #16]
  436390:	stp	x22, x21, [sp, #32]
  436394:	stp	x20, x19, [sp, #48]
  436398:	ldrb	w8, [x1]
  43639c:	mov	x29, sp
  4363a0:	cbz	w8, 436470 <feof@plt+0x33770>
  4363a4:	mov	x20, x1
  4363a8:	mov	x19, x0
  4363ac:	b	4363d8 <feof@plt+0x336d8>
  4363b0:	ldr	x9, [x19, #32]
  4363b4:	mov	w10, w8
  4363b8:	lsl	x10, x10, #3
  4363bc:	add	w8, w8, #0x1
  4363c0:	str	x22, [x9, x10]
  4363c4:	ldr	x9, [x19, #40]
  4363c8:	str	x21, [x9, x10]
  4363cc:	str	w8, [x19, #48]
  4363d0:	ldrb	w8, [x20]
  4363d4:	cbz	w8, 436470 <feof@plt+0x33770>
  4363d8:	add	x23, x20, #0x1
  4363dc:	ands	w8, w8, #0xff
  4363e0:	b.eq	4363f8 <feof@plt+0x336f8>  // b.none
  4363e4:	cmp	w8, #0x3a
  4363e8:	b.eq	4363f8 <feof@plt+0x336f8>  // b.none
  4363ec:	ldrb	w8, [x23], #1
  4363f0:	ands	w8, w8, #0xff
  4363f4:	b.ne	4363e4 <feof@plt+0x336e4>  // b.any
  4363f8:	sub	x24, x23, #0x1
  4363fc:	sub	x21, x24, x20
  436400:	add	x0, x21, #0x1
  436404:	bl	45535c <_obstack_memory_used@@Base+0x134>
  436408:	mov	x1, x20
  43640c:	mov	x2, x21
  436410:	mov	x22, x0
  436414:	bl	402640 <memcpy@plt>
  436418:	strb	wzr, [x22, x21]
  43641c:	ldurb	w9, [x23, #-1]
  436420:	ldp	w8, w10, [x19, #48]
  436424:	cmp	w9, #0x3a
  436428:	csel	x20, x23, x24, eq  // eq = none
  43642c:	cmp	w8, w10
  436430:	b.ne	4363b0 <feof@plt+0x336b0>  // b.any
  436434:	ldr	x0, [x19, #32]
  436438:	lsl	w8, w8, #1
  43643c:	add	w8, w8, #0x8
  436440:	lsl	x1, x8, #3
  436444:	str	w8, [x19, #52]
  436448:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  43644c:	ldr	w9, [x19, #52]
  436450:	ldr	x8, [x19, #40]
  436454:	str	x0, [x19, #32]
  436458:	lsl	x1, x9, #3
  43645c:	mov	x0, x8
  436460:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  436464:	ldr	w8, [x19, #48]
  436468:	str	x0, [x19, #40]
  43646c:	b	4363b0 <feof@plt+0x336b0>
  436470:	ldp	x20, x19, [sp, #48]
  436474:	ldp	x22, x21, [sp, #32]
  436478:	ldp	x24, x23, [sp, #16]
  43647c:	ldp	x29, x30, [sp], #64
  436480:	ret
  436484:	stp	x29, x30, [sp, #-80]!
  436488:	stp	x26, x25, [sp, #16]
  43648c:	stp	x24, x23, [sp, #32]
  436490:	stp	x22, x21, [sp, #48]
  436494:	stp	x20, x19, [sp, #64]
  436498:	ldr	w8, [x0, #8]
  43649c:	sub	w9, w2, #0x1
  4364a0:	cmp	w9, #0x21
  4364a4:	mov	w9, #0x22                  	// #34
  4364a8:	mov	x19, x1
  4364ac:	mov	x20, x0
  4364b0:	csel	w24, w9, w2, cc  // cc = lo, ul, last
  4364b4:	mov	x29, sp
  4364b8:	cbz	w8, 436580 <feof@plt+0x33880>
  4364bc:	ldr	x8, [x20]
  4364c0:	ldr	x0, [x8]
  4364c4:	bl	4026d0 <strlen@plt>
  4364c8:	ldr	x8, [x20]
  4364cc:	mov	x21, x0
  4364d0:	mov	x1, x19
  4364d4:	ldr	x8, [x8]
  4364d8:	mov	x0, x8
  4364dc:	bl	4027a0 <fputs_unlocked@plt>
  4364e0:	ldr	w8, [x20, #8]
  4364e4:	cmp	w8, #0x2
  4364e8:	b.cc	436584 <feof@plt+0x33884>  // b.lo, b.ul, b.last
  4364ec:	adrp	x22, 463000 <_obstack_memory_used@@Base+0xddd8>
  4364f0:	mov	w25, #0x1                   	// #1
  4364f4:	add	x22, x22, #0xf48
  4364f8:	mov	w26, #0x20                  	// #32
  4364fc:	b	436530 <feof@plt+0x33830>
  436500:	mov	x0, x22
  436504:	mov	x1, x19
  436508:	bl	4027a0 <fputs_unlocked@plt>
  43650c:	ldr	x8, [x20]
  436510:	mov	x1, x19
  436514:	add	w21, w23, #0x1
  436518:	ldr	x0, [x8, x25, lsl #3]
  43651c:	bl	4027a0 <fputs_unlocked@plt>
  436520:	ldr	w8, [x20, #8]
  436524:	add	x25, x25, #0x1
  436528:	cmp	x25, x8
  43652c:	b.cs	436584 <feof@plt+0x33884>  // b.hs, b.nlast
  436530:	ldr	x8, [x20]
  436534:	ldr	x0, [x8, x25, lsl #3]
  436538:	bl	4026d0 <strlen@plt>
  43653c:	mov	x23, x0
  436540:	add	w21, w21, w23
  436544:	cbz	w24, 436550 <feof@plt+0x33850>
  436548:	cmp	w21, w24
  43654c:	b.hi	436500 <feof@plt+0x33800>  // b.pmore
  436550:	ldp	x8, x9, [x19, #40]
  436554:	cmp	x8, x9
  436558:	b.cs	436570 <feof@plt+0x33870>  // b.hs, b.nlast
  43655c:	add	x9, x8, #0x1
  436560:	str	x9, [x19, #40]
  436564:	strb	w26, [x8]
  436568:	mov	w23, w21
  43656c:	b	43650c <feof@plt+0x3380c>
  436570:	mov	w1, #0x20                  	// #32
  436574:	mov	x0, x19
  436578:	bl	402730 <__overflow@plt>
  43657c:	b	436568 <feof@plt+0x33868>
  436580:	mov	w21, wzr
  436584:	ldp	x8, x9, [x19, #40]
  436588:	cmp	x8, x9
  43658c:	b.cs	436640 <feof@plt+0x33940>  // b.hs, b.nlast
  436590:	add	x9, x8, #0x1
  436594:	mov	w10, #0x3a                  	// #58
  436598:	str	x9, [x19, #40]
  43659c:	strb	w10, [x8]
  4365a0:	ldr	w8, [x20, #24]
  4365a4:	cbz	w8, 436654 <feof@plt+0x33954>
  4365a8:	adrp	x22, 463000 <_obstack_memory_used@@Base+0xddd8>
  4365ac:	mov	x23, xzr
  4365b0:	add	x22, x22, #0xf48
  4365b4:	mov	w25, #0x20                  	// #32
  4365b8:	b	4365e8 <feof@plt+0x338e8>
  4365bc:	mov	x0, x22
  4365c0:	mov	x1, x19
  4365c4:	bl	4027a0 <fputs_unlocked@plt>
  4365c8:	ldr	x8, [x20, #16]
  4365cc:	mov	x1, x19
  4365d0:	ldr	x0, [x8, x23, lsl #3]
  4365d4:	bl	4027a0 <fputs_unlocked@plt>
  4365d8:	ldr	w8, [x20, #24]
  4365dc:	add	x23, x23, #0x1
  4365e0:	cmp	x23, x8
  4365e4:	b.cs	436654 <feof@plt+0x33954>  // b.hs, b.nlast
  4365e8:	ldr	x8, [x20, #16]
  4365ec:	mov	w26, w21
  4365f0:	ldr	x0, [x8, x23, lsl #3]
  4365f4:	bl	4026d0 <strlen@plt>
  4365f8:	mov	x21, x0
  4365fc:	add	w8, w26, w21
  436600:	add	w26, w8, #0x1
  436604:	cbz	w24, 436610 <feof@plt+0x33910>
  436608:	cmp	w26, w24
  43660c:	b.hi	4365bc <feof@plt+0x338bc>  // b.pmore
  436610:	ldp	x8, x9, [x19, #40]
  436614:	cmp	x8, x9
  436618:	b.cs	436630 <feof@plt+0x33930>  // b.hs, b.nlast
  43661c:	add	x9, x8, #0x1
  436620:	str	x9, [x19, #40]
  436624:	strb	w25, [x8]
  436628:	mov	w21, w26
  43662c:	b	4365c8 <feof@plt+0x338c8>
  436630:	mov	w1, #0x20                  	// #32
  436634:	mov	x0, x19
  436638:	bl	402730 <__overflow@plt>
  43663c:	b	436628 <feof@plt+0x33928>
  436640:	mov	w1, #0x3a                  	// #58
  436644:	mov	x0, x19
  436648:	bl	402730 <__overflow@plt>
  43664c:	ldr	w8, [x20, #24]
  436650:	cbnz	w8, 4365a8 <feof@plt+0x338a8>
  436654:	ldp	x8, x9, [x19, #40]
  436658:	cmp	x8, x9
  43665c:	b.cs	436688 <feof@plt+0x33988>  // b.hs, b.nlast
  436660:	add	x9, x8, #0x1
  436664:	mov	w10, #0xa                   	// #10
  436668:	str	x9, [x19, #40]
  43666c:	strb	w10, [x8]
  436670:	ldp	x20, x19, [sp, #64]
  436674:	ldp	x22, x21, [sp, #48]
  436678:	ldp	x24, x23, [sp, #32]
  43667c:	ldp	x26, x25, [sp, #16]
  436680:	ldp	x29, x30, [sp], #80
  436684:	ret
  436688:	mov	x0, x19
  43668c:	ldp	x20, x19, [sp, #64]
  436690:	ldp	x22, x21, [sp, #48]
  436694:	ldp	x24, x23, [sp, #32]
  436698:	ldp	x26, x25, [sp, #16]
  43669c:	mov	w1, #0xa                   	// #10
  4366a0:	ldp	x29, x30, [sp], #80
  4366a4:	b	402730 <__overflow@plt>
  4366a8:	stp	x29, x30, [sp, #-64]!
  4366ac:	stp	x22, x21, [sp, #32]
  4366b0:	stp	x20, x19, [sp, #48]
  4366b4:	ldr	w8, [x0, #24]
  4366b8:	str	x23, [sp, #16]
  4366bc:	mov	x29, sp
  4366c0:	cmp	w8, #0x2
  4366c4:	b.cc	436778 <feof@plt+0x33a78>  // b.lo, b.ul, b.last
  4366c8:	mov	x19, x0
  4366cc:	mov	x20, x1
  4366d0:	mov	w21, #0x1                   	// #1
  4366d4:	mov	w22, #0xa                   	// #10
  4366d8:	mov	w23, #0x3a                  	// #58
  4366dc:	ldp	x8, x9, [x20, #40]
  4366e0:	cmp	x8, x9
  4366e4:	b.cs	436748 <feof@plt+0x33a48>  // b.hs, b.nlast
  4366e8:	add	x9, x8, #0x1
  4366ec:	str	x9, [x20, #40]
  4366f0:	strb	w22, [x8]
  4366f4:	ldr	x8, [x19, #16]
  4366f8:	mov	x1, x20
  4366fc:	ldr	x0, [x8, x21, lsl #3]
  436700:	bl	4027a0 <fputs_unlocked@plt>
  436704:	ldp	x8, x9, [x20, #40]
  436708:	cmp	x8, x9
  43670c:	b.cs	436758 <feof@plt+0x33a58>  // b.hs, b.nlast
  436710:	add	x9, x8, #0x1
  436714:	str	x9, [x20, #40]
  436718:	strb	w23, [x8]
  43671c:	ldp	x8, x9, [x20, #40]
  436720:	cmp	x8, x9
  436724:	b.cs	436768 <feof@plt+0x33a68>  // b.hs, b.nlast
  436728:	add	x9, x8, #0x1
  43672c:	str	x9, [x20, #40]
  436730:	strb	w22, [x8]
  436734:	ldr	w8, [x19, #24]
  436738:	add	x21, x21, #0x1
  43673c:	cmp	x21, x8
  436740:	b.cc	4366dc <feof@plt+0x339dc>  // b.lo, b.ul, b.last
  436744:	b	436778 <feof@plt+0x33a78>
  436748:	mov	w1, #0xa                   	// #10
  43674c:	mov	x0, x20
  436750:	bl	402730 <__overflow@plt>
  436754:	b	4366f4 <feof@plt+0x339f4>
  436758:	mov	w1, #0x3a                  	// #58
  43675c:	mov	x0, x20
  436760:	bl	402730 <__overflow@plt>
  436764:	b	43671c <feof@plt+0x33a1c>
  436768:	mov	w1, #0xa                   	// #10
  43676c:	mov	x0, x20
  436770:	bl	402730 <__overflow@plt>
  436774:	b	436734 <feof@plt+0x33a34>
  436778:	ldp	x20, x19, [sp, #48]
  43677c:	ldp	x22, x21, [sp, #32]
  436780:	ldr	x23, [sp, #16]
  436784:	ldp	x29, x30, [sp], #64
  436788:	ret
  43678c:	sub	sp, sp, #0x40
  436790:	stp	x22, x21, [sp, #32]
  436794:	stp	x20, x19, [sp, #48]
  436798:	mov	x19, x1
  43679c:	add	x21, x0, #0x18
  4367a0:	mov	x20, x0
  4367a4:	mov	w1, #0x4                   	// #4
  4367a8:	mov	w2, #0x1                   	// #1
  4367ac:	mov	x0, x21
  4367b0:	mov	x3, x19
  4367b4:	stp	x29, x30, [sp, #16]
  4367b8:	add	x29, sp, #0x10
  4367bc:	bl	402bd0 <fwrite_unlocked@plt>
  4367c0:	cmp	x0, #0x1
  4367c4:	b.ne	436838 <feof@plt+0x33b38>  // b.any
  4367c8:	ldr	w8, [x21]
  4367cc:	cbz	w8, 436830 <feof@plt+0x33b30>
  4367d0:	mov	x22, xzr
  4367d4:	ldr	x8, [x20, #16]
  4367d8:	ldr	x0, [x8, x22, lsl #3]
  4367dc:	bl	4026d0 <strlen@plt>
  4367e0:	str	x0, [sp, #8]
  4367e4:	add	x0, sp, #0x8
  4367e8:	mov	w1, #0x8                   	// #8
  4367ec:	mov	w2, #0x1                   	// #1
  4367f0:	mov	x3, x19
  4367f4:	bl	402bd0 <fwrite_unlocked@plt>
  4367f8:	cmp	x0, #0x1
  4367fc:	b.ne	436838 <feof@plt+0x33b38>  // b.any
  436800:	ldr	x8, [x20, #16]
  436804:	ldr	x1, [sp, #8]
  436808:	mov	w2, #0x1                   	// #1
  43680c:	mov	x3, x19
  436810:	ldr	x0, [x8, x22, lsl #3]
  436814:	bl	402bd0 <fwrite_unlocked@plt>
  436818:	cmp	x0, #0x1
  43681c:	b.ne	436838 <feof@plt+0x33b38>  // b.any
  436820:	ldr	w8, [x21]
  436824:	add	x22, x22, #0x1
  436828:	cmp	x22, x8
  43682c:	b.cc	4367d4 <feof@plt+0x33ad4>  // b.lo, b.ul, b.last
  436830:	mov	w0, wzr
  436834:	b	43683c <feof@plt+0x33b3c>
  436838:	mov	w0, #0xffffffff            	// #-1
  43683c:	ldp	x20, x19, [sp, #48]
  436840:	ldp	x22, x21, [sp, #32]
  436844:	ldp	x29, x30, [sp, #16]
  436848:	add	sp, sp, #0x40
  43684c:	ret
  436850:	sub	sp, sp, #0x60
  436854:	stp	x29, x30, [sp, #16]
  436858:	stp	x20, x19, [sp, #80]
  43685c:	add	x29, sp, #0x10
  436860:	mov	x20, x1
  436864:	stp	x22, x21, [sp, #64]
  436868:	mov	x19, x2
  43686c:	mov	x21, x0
  436870:	sub	x0, x29, #0x4
  436874:	mov	w1, #0x1                   	// #1
  436878:	mov	w2, #0x4                   	// #4
  43687c:	mov	x3, x20
  436880:	stp	x26, x25, [sp, #32]
  436884:	stp	x24, x23, [sp, #48]
  436888:	bl	402780 <fread_unlocked@plt>
  43688c:	cmp	x0, #0x4
  436890:	b.ne	436944 <feof@plt+0x33c44>  // b.any
  436894:	mov	w0, #0x200                 	// #512
  436898:	bl	45535c <_obstack_memory_used@@Base+0x134>
  43689c:	ldur	w25, [x29, #-4]
  4368a0:	mov	x22, x0
  4368a4:	cbz	w25, 43694c <feof@plt+0x33c4c>
  4368a8:	mov	w26, wzr
  4368ac:	mov	w23, #0x200                 	// #512
  4368b0:	b	4368c0 <feof@plt+0x33bc0>
  4368b4:	add	w26, w26, #0x1
  4368b8:	cmp	w26, w25
  4368bc:	b.cs	43694c <feof@plt+0x33c4c>  // b.hs, b.nlast
  4368c0:	mov	x0, sp
  4368c4:	mov	w1, #0x1                   	// #1
  4368c8:	mov	w2, #0x8                   	// #8
  4368cc:	mov	x3, x20
  4368d0:	bl	402780 <fread_unlocked@plt>
  4368d4:	cmp	x0, #0x8
  4368d8:	b.ne	436954 <feof@plt+0x33c54>  // b.any
  4368dc:	ldr	x24, [sp]
  4368e0:	add	x8, x24, #0x1
  4368e4:	cmp	x23, x8
  4368e8:	b.cs	436900 <feof@plt+0x33c00>  // b.hs, b.nlast
  4368ec:	add	x23, x24, #0x80
  4368f0:	mov	x0, x22
  4368f4:	mov	x1, x23
  4368f8:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4368fc:	mov	x22, x0
  436900:	mov	w1, #0x1                   	// #1
  436904:	mov	x0, x22
  436908:	mov	x2, x24
  43690c:	mov	x3, x20
  436910:	bl	402780 <fread_unlocked@plt>
  436914:	cmp	x0, x24
  436918:	b.ne	436954 <feof@plt+0x33c54>  // b.any
  43691c:	strb	wzr, [x22, x24]
  436920:	cbz	x19, 4368b4 <feof@plt+0x33bb4>
  436924:	mov	x0, x22
  436928:	mov	x1, x19
  43692c:	bl	453a30 <feof@plt+0x50d30>
  436930:	cbz	w0, 4368b4 <feof@plt+0x33bb4>
  436934:	mov	x0, x21
  436938:	mov	x1, x22
  43693c:	bl	43625c <feof@plt+0x3355c>
  436940:	b	4368b4 <feof@plt+0x33bb4>
  436944:	mov	w19, #0xffffffff            	// #-1
  436948:	b	436960 <feof@plt+0x33c60>
  43694c:	mov	w19, wzr
  436950:	b	436958 <feof@plt+0x33c58>
  436954:	mov	w19, #0xffffffff            	// #-1
  436958:	mov	x0, x22
  43695c:	bl	402770 <free@plt>
  436960:	mov	w0, w19
  436964:	ldp	x20, x19, [sp, #80]
  436968:	ldp	x22, x21, [sp, #64]
  43696c:	ldp	x24, x23, [sp, #48]
  436970:	ldp	x26, x25, [sp, #32]
  436974:	ldp	x29, x30, [sp, #16]
  436978:	add	sp, sp, #0x60
  43697c:	ret
  436980:	stp	x29, x30, [sp, #-48]!
  436984:	str	x21, [sp, #16]
  436988:	mov	w21, #0x1                   	// #1
  43698c:	stp	x20, x19, [sp, #32]
  436990:	lsl	w19, w21, w0
  436994:	mov	w0, #0x1                   	// #1
  436998:	mov	w1, #0x90                  	// #144
  43699c:	mov	x29, sp
  4369a0:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4369a4:	adrp	x3, 455000 <_obstack_begin_1@@Base+0xa4>
  4369a8:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x5e0>
  4369ac:	add	x3, x3, #0x35c
  4369b0:	add	x4, x4, #0x770
  4369b4:	mov	x1, xzr
  4369b8:	mov	x2, xzr
  4369bc:	mov	x20, x0
  4369c0:	bl	454eb0 <_obstack_begin@@Base>
  4369c4:	mov	w1, #0x8                   	// #8
  4369c8:	mov	x0, x19
  4369cc:	str	xzr, [x20, #48]
  4369d0:	bl	455390 <_obstack_memory_used@@Base+0x168>
  4369d4:	str	x0, [x20, #88]
  4369d8:	strb	w21, [x20, #136]
  4369dc:	str	w19, [x20, #112]
  4369e0:	mov	x0, x20
  4369e4:	ldp	x20, x19, [sp, #32]
  4369e8:	ldr	x21, [sp, #16]
  4369ec:	ldp	x29, x30, [sp], #48
  4369f0:	ret
  4369f4:	stp	x29, x30, [sp, #-32]!
  4369f8:	mov	x1, xzr
  4369fc:	str	x19, [sp, #16]
  436a00:	mov	x29, sp
  436a04:	mov	x19, x0
  436a08:	bl	455194 <_obstack_free@@Base>
  436a0c:	ldrb	w8, [x19, #136]
  436a10:	cbz	w8, 436a1c <feof@plt+0x33d1c>
  436a14:	ldr	x0, [x19, #88]
  436a18:	bl	402770 <free@plt>
  436a1c:	mov	x0, x19
  436a20:	ldr	x19, [sp, #16]
  436a24:	ldp	x29, x30, [sp], #32
  436a28:	b	402770 <free@plt>
  436a2c:	mov	w4, w3
  436a30:	mov	w8, wzr
  436a34:	cbz	x2, 436a58 <feof@plt+0x33d58>
  436a38:	mov	w9, #0x43                  	// #67
  436a3c:	mov	x10, x2
  436a40:	mov	x11, x1
  436a44:	ldrb	w12, [x11], #1
  436a48:	sub	x10, x10, #0x1
  436a4c:	madd	w8, w8, w9, w12
  436a50:	sub	w8, w8, #0x71
  436a54:	cbnz	x10, 436a44 <feof@plt+0x33d44>
  436a58:	add	w3, w8, w2
  436a5c:	b	436a60 <feof@plt+0x33d60>
  436a60:	sub	sp, sp, #0x70
  436a64:	stp	x29, x30, [sp, #16]
  436a68:	stp	x28, x27, [sp, #32]
  436a6c:	stp	x26, x25, [sp, #48]
  436a70:	stp	x24, x23, [sp, #64]
  436a74:	stp	x22, x21, [sp, #80]
  436a78:	stp	x20, x19, [sp, #96]
  436a7c:	ldr	w9, [x0, #112]
  436a80:	ldr	w8, [x0, #128]
  436a84:	ldr	x27, [x0, #88]
  436a88:	add	x29, sp, #0x10
  436a8c:	sub	w28, w9, #0x1
  436a90:	add	w8, w8, #0x1
  436a94:	stp	w4, w9, [sp, #4]
  436a98:	and	w26, w28, w3
  436a9c:	str	w8, [x0, #128]
  436aa0:	ldr	x20, [x27, w26, uxtw #3]
  436aa4:	mov	w23, w3
  436aa8:	mov	x21, x2
  436aac:	mov	x22, x1
  436ab0:	mov	x19, x0
  436ab4:	cmn	x20, #0x1
  436ab8:	stur	w26, [x29, #-4]
  436abc:	b.eq	436b14 <feof@plt+0x33e14>  // b.none
  436ac0:	cbnz	x20, 436ad4 <feof@plt+0x33dd4>
  436ac4:	ldp	w8, w10, [sp, #4]
  436ac8:	cbnz	w8, 436b98 <feof@plt+0x33e98>
  436acc:	mov	x20, xzr
  436ad0:	b	436d2c <feof@plt+0x3402c>
  436ad4:	ldr	w8, [x20, #12]
  436ad8:	cmp	w8, w23
  436adc:	b.ne	436b0c <feof@plt+0x33e0c>  // b.any
  436ae0:	ldr	w8, [x20, #8]
  436ae4:	cmp	w8, w21
  436ae8:	b.ne	436b0c <feof@plt+0x33e0c>  // b.any
  436aec:	ldr	x0, [x20]
  436af0:	mov	x1, x22
  436af4:	mov	x2, x21
  436af8:	bl	402cb0 <bcmp@plt>
  436afc:	ldr	w8, [sp, #8]
  436b00:	stur	w8, [x29, #-4]
  436b04:	cbnz	w0, 436b14 <feof@plt+0x33e14>
  436b08:	b	436d2c <feof@plt+0x3402c>
  436b0c:	ldr	w8, [sp, #8]
  436b10:	stur	w8, [x29, #-4]
  436b14:	ldr	w24, [x19, #132]
  436b18:	add	w8, w23, w23, lsl #4
  436b1c:	and	w8, w28, w8
  436b20:	orr	w25, w8, #0x1
  436b24:	add	w24, w24, #0x1
  436b28:	add	w8, w26, w25
  436b2c:	str	w24, [x19, #132]
  436b30:	and	w26, w8, w28
  436b34:	ldr	x20, [x27, w26, uxtw #3]
  436b38:	cbz	x20, 436b8c <feof@plt+0x33e8c>
  436b3c:	cmn	x20, #0x1
  436b40:	b.eq	436b74 <feof@plt+0x33e74>  // b.none
  436b44:	ldr	w8, [x20, #12]
  436b48:	cmp	w8, w23
  436b4c:	b.ne	436b24 <feof@plt+0x33e24>  // b.any
  436b50:	ldr	w8, [x20, #8]
  436b54:	cmp	w8, w21
  436b58:	b.ne	436b24 <feof@plt+0x33e24>  // b.any
  436b5c:	ldr	x0, [x20]
  436b60:	mov	x1, x22
  436b64:	mov	x2, x21
  436b68:	bl	402cb0 <bcmp@plt>
  436b6c:	cbnz	w0, 436b24 <feof@plt+0x33e24>
  436b70:	b	436d2c <feof@plt+0x3402c>
  436b74:	ldr	w8, [sp, #8]
  436b78:	ldur	w9, [x29, #-4]
  436b7c:	cmp	w9, w8
  436b80:	csel	w9, w9, w26, eq  // eq = none
  436b84:	stur	w9, [x29, #-4]
  436b88:	b	436b24 <feof@plt+0x33e24>
  436b8c:	ldr	w8, [sp, #4]
  436b90:	ldur	w10, [x29, #-4]
  436b94:	cbz	w8, 436acc <feof@plt+0x33dcc>
  436b98:	ldr	w9, [sp, #8]
  436b9c:	ldr	x8, [x19, #96]
  436ba0:	mov	x0, x19
  436ba4:	cmp	w10, w9
  436ba8:	csel	w24, w26, w10, eq  // eq = none
  436bac:	blr	x8
  436bb0:	ldr	x8, [x19, #88]
  436bb4:	mov	x20, x0
  436bb8:	str	x0, [x8, w24, uxtw #3]
  436bbc:	stp	w21, w23, [x0, #8]
  436bc0:	ldr	x8, [x19, #104]
  436bc4:	cbz	x8, 436be8 <feof@plt+0x33ee8>
  436bc8:	add	x0, x21, #0x1
  436bcc:	blr	x8
  436bd0:	mov	x1, x22
  436bd4:	mov	x2, x21
  436bd8:	mov	x23, x0
  436bdc:	bl	402640 <memcpy@plt>
  436be0:	strb	wzr, [x23, x21]
  436be4:	b	436c74 <feof@plt+0x33f74>
  436be8:	ldp	x0, x8, [x19, #24]
  436bec:	add	x1, x21, #0x1
  436bf0:	sub	x8, x8, x0
  436bf4:	cmp	x8, x1
  436bf8:	b.cs	436c08 <feof@plt+0x33f08>  // b.hs, b.nlast
  436bfc:	mov	x0, x19
  436c00:	bl	45500c <_obstack_newchunk@@Base>
  436c04:	ldr	x0, [x19, #24]
  436c08:	mov	x1, x22
  436c0c:	mov	x2, x21
  436c10:	bl	402640 <memcpy@plt>
  436c14:	ldr	x8, [x19, #24]
  436c18:	add	x8, x8, x21
  436c1c:	add	x9, x8, #0x1
  436c20:	str	x9, [x19, #24]
  436c24:	strb	wzr, [x8]
  436c28:	ldp	x23, x8, [x19, #16]
  436c2c:	cmp	x8, x23
  436c30:	b.ne	436c40 <feof@plt+0x33f40>  // b.any
  436c34:	ldrb	w9, [x19, #80]
  436c38:	orr	w9, w9, #0x2
  436c3c:	strb	w9, [x19, #80]
  436c40:	ldr	x10, [x19, #48]
  436c44:	ldr	x11, [x19, #8]
  436c48:	ldr	x9, [x19, #32]
  436c4c:	add	x8, x10, x8
  436c50:	bic	x8, x8, x10
  436c54:	sub	x10, x8, x11
  436c58:	sub	x11, x9, x11
  436c5c:	cmp	x10, x11
  436c60:	str	x8, [x19, #24]
  436c64:	b.ls	436c70 <feof@plt+0x33f70>  // b.plast
  436c68:	mov	x8, x9
  436c6c:	str	x9, [x19, #24]
  436c70:	str	x8, [x19, #16]
  436c74:	str	x23, [x20]
  436c78:	ldp	w8, w9, [x19, #112]
  436c7c:	add	w9, w9, #0x1
  436c80:	add	w10, w8, w8, lsl #1
  436c84:	cmp	w10, w9, lsl #2
  436c88:	str	w9, [x19, #116]
  436c8c:	b.hi	436d2c <feof@plt+0x3402c>  // b.pmore
  436c90:	lsl	w21, w8, #1
  436c94:	mov	w1, #0x8                   	// #8
  436c98:	mov	x0, x21
  436c9c:	bl	455390 <_obstack_memory_used@@Base+0x168>
  436ca0:	mov	x22, x0
  436ca4:	ldr	x0, [x19, #88]
  436ca8:	ldr	w9, [x19, #112]
  436cac:	sub	w8, w21, #0x1
  436cb0:	mov	x10, x0
  436cb4:	add	x9, x0, x9, lsl #3
  436cb8:	b	436ccc <feof@plt+0x33fcc>
  436cbc:	str	x11, [x22, x12, lsl #3]
  436cc0:	add	x10, x10, #0x8
  436cc4:	cmp	x10, x9
  436cc8:	b.cs	436d10 <feof@plt+0x34010>  // b.hs, b.nlast
  436ccc:	ldr	x11, [x10]
  436cd0:	add	x12, x11, #0x1
  436cd4:	cmp	x12, #0x2
  436cd8:	b.cc	436cc0 <feof@plt+0x33fc0>  // b.lo, b.ul, b.last
  436cdc:	ldr	w13, [x11, #12]
  436ce0:	and	w12, w13, w8
  436ce4:	ldr	x14, [x22, w12, uxtw #3]
  436ce8:	cbz	x14, 436cbc <feof@plt+0x33fbc>
  436cec:	add	w13, w13, w13, lsl #4
  436cf0:	and	w13, w13, w8
  436cf4:	orr	w13, w13, #0x1
  436cf8:	add	w12, w12, w13
  436cfc:	and	w12, w12, w8
  436d00:	ldr	x14, [x22, w12, uxtw #3]
  436d04:	cbnz	x14, 436cf8 <feof@plt+0x33ff8>
  436d08:	mov	w12, w12
  436d0c:	b	436cbc <feof@plt+0x33fbc>
  436d10:	ldrb	w8, [x19, #136]
  436d14:	cbz	w8, 436d1c <feof@plt+0x3401c>
  436d18:	bl	402770 <free@plt>
  436d1c:	mov	w8, #0x1                   	// #1
  436d20:	str	x22, [x19, #88]
  436d24:	strb	w8, [x19, #136]
  436d28:	str	w21, [x19, #112]
  436d2c:	mov	x0, x20
  436d30:	ldp	x20, x19, [sp, #96]
  436d34:	ldp	x22, x21, [sp, #80]
  436d38:	ldp	x24, x23, [sp, #64]
  436d3c:	ldp	x26, x25, [sp, #48]
  436d40:	ldp	x28, x27, [sp, #32]
  436d44:	ldp	x29, x30, [sp, #16]
  436d48:	add	sp, sp, #0x70
  436d4c:	ret
  436d50:	stp	x29, x30, [sp, #-64]!
  436d54:	stp	x22, x21, [sp, #32]
  436d58:	stp	x20, x19, [sp, #48]
  436d5c:	ldr	x22, [x0, #88]
  436d60:	ldr	w8, [x0, #112]
  436d64:	str	x23, [sp, #16]
  436d68:	mov	x19, x2
  436d6c:	mov	x20, x1
  436d70:	mov	x21, x0
  436d74:	add	x23, x22, x8, lsl #3
  436d78:	mov	x29, sp
  436d7c:	b	436d8c <feof@plt+0x3408c>
  436d80:	add	x22, x22, #0x8
  436d84:	cmp	x22, x23
  436d88:	b.cs	436dac <feof@plt+0x340ac>  // b.hs, b.nlast
  436d8c:	ldr	x1, [x22]
  436d90:	add	x8, x1, #0x1
  436d94:	cmp	x8, #0x2
  436d98:	b.cc	436d80 <feof@plt+0x34080>  // b.lo, b.ul, b.last
  436d9c:	ldr	x0, [x21, #120]
  436da0:	mov	x2, x19
  436da4:	blr	x20
  436da8:	cbnz	w0, 436d80 <feof@plt+0x34080>
  436dac:	ldp	x20, x19, [sp, #48]
  436db0:	ldp	x22, x21, [sp, #32]
  436db4:	ldr	x23, [sp, #16]
  436db8:	ldp	x29, x30, [sp], #64
  436dbc:	ret
  436dc0:	stp	x29, x30, [sp, #-64]!
  436dc4:	stp	x24, x23, [sp, #16]
  436dc8:	stp	x22, x21, [sp, #32]
  436dcc:	stp	x20, x19, [sp, #48]
  436dd0:	ldr	x22, [x0, #88]
  436dd4:	ldr	w8, [x0, #112]
  436dd8:	mov	x19, x2
  436ddc:	mov	x20, x1
  436de0:	mov	x21, x0
  436de4:	add	x23, x22, x8, lsl #3
  436de8:	mov	x24, #0xffffffffffffffff    	// #-1
  436dec:	mov	x29, sp
  436df0:	b	436e00 <feof@plt+0x34100>
  436df4:	add	x22, x22, #0x8
  436df8:	cmp	x22, x23
  436dfc:	b.cs	436e28 <feof@plt+0x34128>  // b.hs, b.nlast
  436e00:	ldr	x1, [x22]
  436e04:	add	x8, x1, #0x1
  436e08:	cmp	x8, #0x2
  436e0c:	b.cc	436df4 <feof@plt+0x340f4>  // b.lo, b.ul, b.last
  436e10:	ldr	x0, [x21, #120]
  436e14:	mov	x2, x19
  436e18:	blr	x20
  436e1c:	cbz	w0, 436df4 <feof@plt+0x340f4>
  436e20:	str	x24, [x22]
  436e24:	b	436df4 <feof@plt+0x340f4>
  436e28:	ldp	x20, x19, [sp, #48]
  436e2c:	ldp	x22, x21, [sp, #32]
  436e30:	ldp	x24, x23, [sp, #16]
  436e34:	ldp	x29, x30, [sp], #64
  436e38:	ret
  436e3c:	stp	x29, x30, [sp, #-64]!
  436e40:	stp	x22, x21, [sp, #32]
  436e44:	stp	x20, x19, [sp, #48]
  436e48:	ldrb	w8, [x0, #136]
  436e4c:	str	x23, [sp, #16]
  436e50:	mov	w19, w3
  436e54:	mov	w21, w2
  436e58:	mov	x22, x1
  436e5c:	mov	x20, x0
  436e60:	and	w23, w4, #0x1
  436e64:	mov	x29, sp
  436e68:	cbz	w8, 436e74 <feof@plt+0x34174>
  436e6c:	ldr	x0, [x20, #88]
  436e70:	bl	402770 <free@plt>
  436e74:	str	x22, [x20, #88]
  436e78:	stp	w21, w19, [x20, #112]
  436e7c:	strb	w23, [x20, #136]
  436e80:	ldp	x20, x19, [sp, #48]
  436e84:	ldp	x22, x21, [sp, #32]
  436e88:	ldr	x23, [sp, #16]
  436e8c:	ldp	x29, x30, [sp], #64
  436e90:	ret
  436e94:	stp	d11, d10, [sp, #-128]!
  436e98:	stp	d9, d8, [sp, #16]
  436e9c:	stp	x29, x30, [sp, #32]
  436ea0:	stp	x26, x25, [sp, #64]
  436ea4:	stp	x24, x23, [sp, #80]
  436ea8:	stp	x22, x21, [sp, #96]
  436eac:	stp	x20, x19, [sp, #112]
  436eb0:	str	x27, [sp, #48]
  436eb4:	ldr	x8, [x0, #88]
  436eb8:	ldr	w27, [x0, #112]
  436ebc:	mov	x20, x0
  436ec0:	mov	x22, xzr
  436ec4:	mov	x19, xzr
  436ec8:	mov	x25, xzr
  436ecc:	mov	x23, xzr
  436ed0:	add	x9, x8, x27, lsl #3
  436ed4:	fmov	d8, xzr
  436ed8:	mov	x29, sp
  436edc:	ldr	x10, [x8]
  436ee0:	cbz	x10, 436f14 <feof@plt+0x34214>
  436ee4:	cmn	x10, #0x1
  436ee8:	b.ne	436ef4 <feof@plt+0x341f4>  // b.any
  436eec:	add	x22, x22, #0x1
  436ef0:	b	436f14 <feof@plt+0x34214>
  436ef4:	ldr	w10, [x10, #8]
  436ef8:	add	x23, x23, #0x1
  436efc:	ucvtf	d0, w10
  436f00:	cmp	x19, x10
  436f04:	fmul	d0, d0, d0
  436f08:	add	x25, x25, x10
  436f0c:	csel	x19, x10, x19, cc  // cc = lo, ul, last
  436f10:	fadd	d8, d8, d0
  436f14:	add	x8, x8, #0x8
  436f18:	cmp	x8, x9
  436f1c:	b.cc	436edc <feof@plt+0x341dc>  // b.lo, b.ul, b.last
  436f20:	ldr	w24, [x20, #116]
  436f24:	adrp	x26, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  436f28:	ldr	x0, [x26, #1416]
  436f2c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  436f30:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  436f34:	add	x1, x1, #0xf58
  436f38:	add	x2, x2, #0xf6f
  436f3c:	mov	x3, x24
  436f40:	lsl	x21, x27, #3
  436f44:	bl	4026f0 <fprintf@plt>
  436f48:	ldr	x0, [x26, #1416]
  436f4c:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  436f50:	ucvtf	d0, x23
  436f54:	fmov	d1, x8
  436f58:	fmul	d0, d0, d1
  436f5c:	ucvtf	d9, w24
  436f60:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  436f64:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  436f68:	fdiv	d0, d0, d9
  436f6c:	add	x1, x1, #0xf78
  436f70:	add	x2, x2, #0xf8b
  436f74:	mov	x3, x23
  436f78:	bl	4026f0 <fprintf@plt>
  436f7c:	ldr	x0, [x26, #1416]
  436f80:	ldr	w3, [x20, #112]
  436f84:	adrp	x23, 463000 <_obstack_memory_used@@Base+0xddd8>
  436f88:	add	x23, x23, #0xf65
  436f8c:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  436f90:	add	x2, x2, #0xf98
  436f94:	mov	x1, x23
  436f98:	bl	4026f0 <fprintf@plt>
  436f9c:	ldr	x0, [x26, #1416]
  436fa0:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  436fa4:	add	x2, x2, #0xf9f
  436fa8:	mov	x1, x23
  436fac:	mov	x3, x22
  436fb0:	bl	4026f0 <fprintf@plt>
  436fb4:	ldr	x8, [x20, #104]
  436fb8:	cbnz	x8, 436ff4 <feof@plt+0x342f4>
  436fbc:	mov	x0, x20
  436fc0:	bl	455228 <_obstack_memory_used@@Base>
  436fc4:	mov	x8, x0
  436fc8:	ldr	x0, [x26, #1416]
  436fcc:	lsr	x9, x25, #11
  436fd0:	cmp	x9, #0x5
  436fd4:	sub	x8, x8, x25
  436fd8:	mov	x3, x25
  436fdc:	b.cc	437020 <feof@plt+0x34320>  // b.lo, b.ul, b.last
  436fe0:	lsr	x10, x25, #21
  436fe4:	cmp	x10, #0x4
  436fe8:	b.hi	43701c <feof@plt+0x3431c>  // b.pmore
  436fec:	lsr	x3, x25, #10
  436ff0:	b	437020 <feof@plt+0x34320>
  436ff4:	ldr	x0, [x26, #1416]
  436ff8:	lsr	x8, x25, #11
  436ffc:	cmp	x8, #0x5
  437000:	mov	x3, x25
  437004:	b.cc	437064 <feof@plt+0x34364>  // b.lo, b.ul, b.last
  437008:	lsr	x9, x25, #21
  43700c:	cmp	x9, #0x4
  437010:	b.hi	437060 <feof@plt+0x34360>  // b.pmore
  437014:	lsr	x3, x25, #10
  437018:	b	437064 <feof@plt+0x34364>
  43701c:	lsr	x3, x25, #20
  437020:	cmp	x25, #0xa00, lsl #12
  437024:	mov	w10, #0x4d                  	// #77
  437028:	mov	w11, #0x6b                  	// #107
  43702c:	mov	w12, #0x20                  	// #32
  437030:	lsr	x13, x8, #11
  437034:	csel	w14, w11, w10, cc  // cc = lo, ul, last
  437038:	cmp	x9, #0x5
  43703c:	csel	w4, w12, w14, cc  // cc = lo, ul, last
  437040:	cmp	x13, #0x5
  437044:	mov	x5, x8
  437048:	b.cc	43709c <feof@plt+0x3439c>  // b.lo, b.ul, b.last
  43704c:	lsr	x9, x8, #21
  437050:	cmp	x9, #0x4
  437054:	b.hi	437098 <feof@plt+0x34398>  // b.pmore
  437058:	lsr	x5, x8, #10
  43705c:	b	43709c <feof@plt+0x3439c>
  437060:	lsr	x3, x25, #20
  437064:	cmp	x25, #0xa00, lsl #12
  437068:	mov	w9, #0x4d                  	// #77
  43706c:	mov	w10, #0x6b                  	// #107
  437070:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  437074:	cmp	x8, #0x5
  437078:	mov	w8, #0x20                  	// #32
  43707c:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  437080:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  437084:	csel	w4, w8, w9, cc  // cc = lo, ul, last
  437088:	add	x1, x1, #0xfa8
  43708c:	add	x2, x2, #0xfb4
  437090:	bl	4026f0 <fprintf@plt>
  437094:	b	4370c0 <feof@plt+0x343c0>
  437098:	lsr	x5, x8, #20
  43709c:	cmp	x8, #0xa00, lsl #12
  4370a0:	csel	w8, w11, w10, cc  // cc = lo, ul, last
  4370a4:	cmp	x13, #0x5
  4370a8:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4370ac:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  4370b0:	csel	w6, w12, w8, cc  // cc = lo, ul, last
  4370b4:	add	x1, x1, #0xfbf
  4370b8:	add	x2, x2, #0xfdc
  4370bc:	bl	4026f0 <fprintf@plt>
  4370c0:	ldr	x0, [x26, #1416]
  4370c4:	cmp	w27, #0x500
  4370c8:	b.cc	4370e4 <feof@plt+0x343e4>  // b.lo, b.ul, b.last
  4370cc:	ubfx	x8, x27, #18, #14
  4370d0:	cmp	w8, #0x4
  4370d4:	b.hi	4370e0 <feof@plt+0x343e0>  // b.pmore
  4370d8:	lsr	x21, x27, #7
  4370dc:	b	4370e4 <feof@plt+0x343e4>
  4370e0:	lsr	x21, x27, #17
  4370e4:	cmp	w27, #0x140, lsl #12
  4370e8:	mov	w8, #0x4d                  	// #77
  4370ec:	mov	w9, #0x6b                  	// #107
  4370f0:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  4370f4:	cmp	w27, #0x500
  4370f8:	mov	w9, #0x20                  	// #32
  4370fc:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  437100:	adrp	x2, 463000 <_obstack_memory_used@@Base+0xddd8>
  437104:	csel	w4, w9, w8, cc  // cc = lo, ul, last
  437108:	add	x1, x1, #0xfa8
  43710c:	add	x2, x2, #0xfeb
  437110:	mov	x3, x21
  437114:	bl	4026f0 <fprintf@plt>
  437118:	ldp	s2, s1, [x20, #128]
  43711c:	ldr	x0, [x26, #1416]
  437120:	ucvtf	d0, x25
  437124:	adrp	x21, 463000 <_obstack_memory_used@@Base+0xddd8>
  437128:	fdiv	d10, d8, d9
  43712c:	fdiv	d8, d0, d9
  437130:	ucvtf	d0, d1
  437134:	ucvtf	d1, d2
  437138:	add	x21, x21, #0xff7
  43713c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  437140:	fdiv	d0, d0, d1
  437144:	add	x2, x2, #0x2
  437148:	mov	x1, x21
  43714c:	fmul	d11, d8, d8
  437150:	bl	4026f0 <fprintf@plt>
  437154:	ldr	s0, [x20, #128]
  437158:	ldr	x0, [x26, #1416]
  43715c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  437160:	add	x2, x2, #0xf
  437164:	ucvtf	d0, d0
  437168:	fdiv	d0, d9, d0
  43716c:	mov	x1, x21
  437170:	bl	4026f0 <fprintf@plt>
  437174:	fsub	d0, d10, d11
  437178:	fcmp	d0, #0.0
  43717c:	b.mi	437208 <feof@plt+0x34508>  // b.first
  437180:	ldr	x0, [x26, #1416]
  437184:	fmov	d1, xzr
  437188:	b.eq	4371b4 <feof@plt+0x344b4>  // b.none
  43718c:	adrp	x8, 463000 <_obstack_memory_used@@Base+0xddd8>
  437190:	ldr	d2, [x8, #3920]
  437194:	mov	v1.16b, v0.16b
  437198:	fmul	d3, d1, d1
  43719c:	fsub	d3, d3, d0
  4371a0:	fadd	d4, d1, d1
  4371a4:	fdiv	d3, d3, d4
  4371a8:	fcmp	d3, d2
  4371ac:	fsub	d1, d1, d3
  4371b0:	b.gt	437198 <feof@plt+0x34498>
  4371b4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  4371b8:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  4371bc:	add	x1, x1, #0x1b
  4371c0:	add	x2, x2, #0x37
  4371c4:	mov	v0.16b, v8.16b
  4371c8:	bl	4026f0 <fprintf@plt>
  4371cc:	ldr	x0, [x26, #1416]
  4371d0:	mov	x3, x19
  4371d4:	ldp	x20, x19, [sp, #112]
  4371d8:	ldp	x22, x21, [sp, #96]
  4371dc:	ldp	x24, x23, [sp, #80]
  4371e0:	ldp	x26, x25, [sp, #64]
  4371e4:	ldr	x27, [sp, #48]
  4371e8:	ldp	x29, x30, [sp, #32]
  4371ec:	ldp	d9, d8, [sp, #16]
  4371f0:	adrp	x1, 463000 <_obstack_memory_used@@Base+0xddd8>
  4371f4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  4371f8:	add	x1, x1, #0xf65
  4371fc:	add	x2, x2, #0x43
  437200:	ldp	d11, d10, [sp], #128
  437204:	b	4026f0 <fprintf@plt>
  437208:	adrp	x0, 464000 <_obstack_memory_used@@Base+0xedd8>
  43720c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  437210:	add	x0, x0, #0x52
  437214:	add	x2, x2, #0x68
  437218:	mov	w1, #0x165                 	// #357
  43721c:	bl	408b70 <feof@plt+0x5e70>
  437220:	ldr	x8, [x0]
  437224:	add	x10, x1, x2
  437228:	str	x8, [x0, #8]
  43722c:	ldr	x9, [x8]
  437230:	str	x9, [x0, #1344]
  437234:	ldr	x9, [x8, #32]
  437238:	str	x9, [x0, #1352]
  43723c:	ldr	x9, [x8, #16]
  437240:	str	x9, [x0, #1360]
  437244:	strb	wzr, [x8, #104]
  437248:	stp	x1, x1, [x8]
  43724c:	str	x10, [x8, #32]
  437250:	ret
  437254:	ldr	x8, [x0, #8]
  437258:	ldr	x9, [x0, #1344]
  43725c:	mov	w10, #0x1                   	// #1
  437260:	str	x9, [x8]
  437264:	ldr	x9, [x0, #1352]
  437268:	str	x9, [x8, #32]
  43726c:	ldr	x9, [x0, #1360]
  437270:	strb	w10, [x8, #104]
  437274:	str	x9, [x8, #8]
  437278:	str	xzr, [x0, #8]
  43727c:	ret
  437280:	stp	x29, x30, [sp, #-32]!
  437284:	str	x19, [sp, #16]
  437288:	mov	x19, x0
  43728c:	mov	x29, sp
  437290:	ldr	x8, [x19]
  437294:	ldrb	w8, [x8, #104]
  437298:	cbz	w8, 4372a8 <feof@plt+0x345a8>
  43729c:	mov	x0, x19
  4372a0:	bl	42b31c <feof@plt+0x2861c>
  4372a4:	tbz	w0, #0, 4372d4 <feof@plt+0x345d4>
  4372a8:	mov	x0, x19
  4372ac:	mov	x1, xzr
  4372b0:	mov	w2, wzr
  4372b4:	bl	4372e4 <feof@plt+0x345e4>
  4372b8:	tbz	w0, #0, 437290 <feof@plt+0x34590>
  4372bc:	ldrb	w8, [x19, #18]
  4372c0:	cbnz	w8, 437290 <feof@plt+0x34590>
  4372c4:	ldr	x8, [x19]
  4372c8:	cmp	x8, #0x0
  4372cc:	cset	w0, ne  // ne = any
  4372d0:	b	4372d8 <feof@plt+0x345d8>
  4372d4:	mov	w0, wzr
  4372d8:	ldr	x19, [sp, #16]
  4372dc:	ldp	x29, x30, [sp], #32
  4372e0:	ret
  4372e4:	sub	sp, sp, #0x100
  4372e8:	stp	x29, x30, [sp, #160]
  4372ec:	stp	x28, x27, [sp, #176]
  4372f0:	stp	x26, x25, [sp, #192]
  4372f4:	stp	x24, x23, [sp, #208]
  4372f8:	stp	x22, x21, [sp, #224]
  4372fc:	stp	x20, x19, [sp, #240]
  437300:	ldr	x8, [x0]
  437304:	ldr	x9, [x0, #136]
  437308:	ldrb	w10, [x0, #19]
  43730c:	mov	w25, w2
  437310:	ldr	x8, [x8]
  437314:	mov	x19, x0
  437318:	cmp	w10, #0x0
  43731c:	cset	w10, ne  // ne = any
  437320:	str	x8, [x9, #16]
  437324:	ldr	x8, [x0]
  437328:	ldr	x9, [x0, #136]
  43732c:	add	x29, sp, #0xa0
  437330:	str	w10, [sp, #60]
  437334:	ldr	x8, [x8, #32]
  437338:	str	x8, [x9, #24]
  43733c:	tbnz	w2, #0, 437354 <feof@plt+0x34654>
  437340:	ldr	x8, [x19, #1312]
  437344:	ldr	x9, [x19, #40]
  437348:	str	x8, [x19, #1328]
  43734c:	ldr	w8, [x9, #60]
  437350:	str	w8, [x19, #1336]
  437354:	str	xzr, [sp, #40]
  437358:	ldr	x8, [x19]
  43735c:	cmp	x1, #0x0
  437360:	mov	w27, wzr
  437364:	cset	w9, ne  // ne = any
  437368:	ldr	x8, [x8]
  43736c:	stur	wzr, [x29, #-76]
  437370:	str	xzr, [sp, #8]
  437374:	stur	xzr, [x29, #-72]
  437378:	str	xzr, [sp, #32]
  43737c:	stur	xzr, [x29, #-64]
  437380:	str	wzr, [sp, #64]
  437384:	str	wzr, [sp, #48]
  437388:	str	x1, [sp, #72]
  43738c:	str	w9, [sp, #20]
  437390:	str	x8, [sp, #24]
  437394:	stur	w25, [x29, #-52]
  437398:	ldr	x24, [x19, #136]
  43739c:	ldr	x9, [x19, #1320]
  4373a0:	ldr	x21, [x19, #1328]
  4373a4:	ldp	x23, x8, [x24, #16]
  4373a8:	sub	x9, x9, x21
  4373ac:	sub	x8, x8, x23
  4373b0:	add	x8, x8, #0x3
  4373b4:	cmp	x8, x9
  4373b8:	b.ls	4373ec <feof@plt+0x346ec>  // b.plast
  4373bc:	ldr	x0, [x19, #1312]
  4373c0:	sub	x20, x21, x0
  4373c4:	add	x8, x20, x8
  4373c8:	add	x8, x8, x8, lsl #1
  4373cc:	lsr	x22, x8, #1
  4373d0:	mov	x1, x22
  4373d4:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4373d8:	add	x8, x0, x22
  4373dc:	add	x21, x0, x20
  4373e0:	str	x0, [x19, #1312]
  4373e4:	str	x8, [x19, #1320]
  4373e8:	str	x21, [x19, #1328]
  4373ec:	ldur	w25, [x29, #-52]
  4373f0:	mov	w20, w27
  4373f4:	sub	w27, w27, #0x1
  4373f8:	b	437404 <feof@plt+0x34704>
  4373fc:	ldr	x8, [x19]
  437400:	ldr	x23, [x8]
  437404:	ldr	x8, [x24, #8]
  437408:	mov	x28, x23
  43740c:	mov	x26, x21
  437410:	cbnz	x8, 437444 <feof@plt+0x34744>
  437414:	tbnz	w25, #0, 437444 <feof@plt+0x34744>
  437418:	ldr	x8, [x19]
  43741c:	ldr	w9, [x8, #56]
  437420:	ldr	x10, [x8, #48]
  437424:	lsl	x9, x9, #4
  437428:	ldr	x9, [x10, x9]
  43742c:	cmp	x28, x9
  437430:	b.cc	437444 <feof@plt+0x34744>  // b.lo, b.ul, b.last
  437434:	mov	x0, x19
  437438:	mov	w1, wzr
  43743c:	str	x28, [x8]
  437440:	bl	4291e4 <feof@plt+0x264e4>
  437444:	mov	x23, x28
  437448:	ldrb	w8, [x23], #1
  43744c:	mov	x21, x26
  437450:	cmp	w8, #0x7a
  437454:	strb	w8, [x21], #1
  437458:	b.hi	437868 <feof@plt+0x34b68>  // b.pmore
  43745c:	adrp	x11, 464000 <_obstack_memory_used@@Base+0xedd8>
  437460:	add	x11, x11, #0x74
  437464:	adr	x9, 437404 <feof@plt+0x34704>
  437468:	ldrh	w10, [x11, x8, lsl #1]
  43746c:	add	x9, x9, x10, lsl #2
  437470:	br	x9
  437474:	ldr	x8, [x24, #8]
  437478:	str	x26, [x19, #1328]
  43747c:	cbnz	x8, 437c04 <feof@plt+0x34f04>
  437480:	ldr	x8, [x19]
  437484:	mov	w22, #0x1                   	// #1
  437488:	str	x23, [x8]
  43748c:	tbnz	w25, #0, 4380cc <feof@plt+0x353cc>
  437490:	strb	w22, [x8, #104]
  437494:	ldr	x0, [x19, #40]
  437498:	mov	w10, #0x18                  	// #24
  43749c:	mov	w2, wzr
  4374a0:	ldr	w8, [x0, #12]
  4374a4:	ldr	x9, [x0]
  4374a8:	sub	w8, w8, #0x1
  4374ac:	smaddl	x8, w8, w10, x9
  4374b0:	ldr	w9, [x0, #60]
  4374b4:	ldr	w10, [x8]
  4374b8:	ldrb	w11, [x8, #6]
  4374bc:	ldr	w8, [x8, #16]
  4374c0:	sub	w9, w9, w10
  4374c4:	lsr	w9, w9, w11
  4374c8:	add	w8, w8, w9
  4374cc:	add	w1, w8, #0x1
  4374d0:	bl	42ebc8 <feof@plt+0x2bec8>
  4374d4:	cmp	w27, #0x1
  4374d8:	b.hi	4380cc <feof@plt+0x353cc>  // b.pmore
  4374dc:	ldrb	w8, [x19, #16]
  4374e0:	cbnz	w8, 4380c8 <feof@plt+0x353c8>
  4374e4:	mov	x0, x19
  4374e8:	bl	42b31c <feof@plt+0x2861c>
  4374ec:	tbz	w0, #0, 4380c8 <feof@plt+0x353c8>
  4374f0:	cmp	w20, #0x2
  4374f4:	b.ne	4373fc <feof@plt+0x346fc>  // b.any
  4374f8:	mov	w8, #0x20                  	// #32
  4374fc:	strb	w8, [x26]
  437500:	b	4373fc <feof@plt+0x346fc>
  437504:	ldr	w8, [sp, #64]
  437508:	add	x21, x26, #0x1
  43750c:	cbnz	w8, 437afc <feof@plt+0x34dfc>
  437510:	ldrb	w8, [x23]
  437514:	cmp	w8, #0x2a
  437518:	b.ne	437af8 <feof@plt+0x34df8>  // b.any
  43751c:	ldr	w2, [sp, #20]
  437520:	mov	x0, x19
  437524:	mov	x1, x23
  437528:	str	x21, [x19, #1328]
  43752c:	bl	438198 <feof@plt+0x35498>
  437530:	ldr	x21, [x19, #1328]
  437534:	mov	x23, x0
  437538:	str	wzr, [sp, #64]
  43753c:	b	437404 <feof@plt+0x34704>
  437540:	ldr	x8, [sp, #72]
  437544:	ldr	w9, [sp, #64]
  437548:	ldrb	w10, [x19, #18]
  43754c:	cmp	x8, #0x0
  437550:	cset	w8, ne  // ne = any
  437554:	cmp	w9, #0x0
  437558:	cset	w9, eq  // eq = none
  43755c:	cbnz	w10, 437868 <feof@plt+0x34b68>
  437560:	orr	w8, w8, w9
  437564:	tbz	w8, #0, 437868 <feof@plt+0x34b68>
  437568:	str	x26, [x19, #1328]
  43756c:	ldrb	w8, [x28]
  437570:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  437574:	mov	x22, xzr
  437578:	mov	x25, x26
  43757c:	add	x10, x10, #0x3c4
  437580:	mov	w11, #0x204                 	// #516
  437584:	add	x9, x28, x22
  437588:	strb	w8, [x26, x22]
  43758c:	ldrb	w8, [x9, #1]
  437590:	add	x25, x25, #0x1
  437594:	add	x22, x22, #0x1
  437598:	ldrh	w9, [x10, x8, lsl #1]
  43759c:	tst	w9, w11
  4375a0:	b.ne	437584 <feof@plt+0x34884>  // b.any
  4375a4:	ldr	x8, [x19, #136]
  4375a8:	add	x9, x28, x22
  4375ac:	add	x21, x26, x22
  4375b0:	mov	w3, #0x1                   	// #1
  4375b4:	str	x9, [x8, #16]
  4375b8:	ldr	x1, [x19, #1328]
  4375bc:	ldr	x0, [x19, #1088]
  4375c0:	sub	x2, x21, x1
  4375c4:	bl	436a2c <feof@plt+0x33d2c>
  4375c8:	str	x21, [x19, #1328]
  4375cc:	ldr	x23, [x24, #16]
  4375d0:	ldrh	w8, [x0, #18]
  4375d4:	mov	x28, x0
  4375d8:	cmp	w20, #0x1
  4375dc:	b.hi	4375ec <feof@plt+0x348ec>  // b.pmore
  4375e0:	tbz	w8, #1, 4375ec <feof@plt+0x348ec>
  4375e4:	ldrb	w9, [x19, #24]
  4375e8:	cbz	w9, 4378e4 <feof@plt+0x34be4>
  4375ec:	ldr	x9, [sp, #72]
  4375f0:	cbz	x9, 437600 <feof@plt+0x34900>
  4375f4:	and	w8, w8, #0x3
  4375f8:	cmp	w8, #0x1
  4375fc:	b.eq	437664 <feof@plt+0x34964>  // b.none
  437600:	cmp	w20, #0x5
  437604:	mov	w27, #0x6                   	// #6
  437608:	b.eq	4373ec <feof@plt+0x346ec>  // b.none
  43760c:	ldrb	w8, [x19, #20]
  437610:	cbz	w8, 43790c <feof@plt+0x34c0c>
  437614:	ldr	x8, [x19, #1248]
  437618:	mov	w27, #0x3                   	// #3
  43761c:	cmp	x8, x28
  437620:	b.eq	4373ec <feof@plt+0x346ec>  // b.none
  437624:	ldr	x8, [x19, #1288]
  437628:	mov	w27, #0x8                   	// #8
  43762c:	cmp	x8, x28
  437630:	b.eq	4373ec <feof@plt+0x346ec>  // b.none
  437634:	ldr	x8, [x19, #1296]
  437638:	mov	w27, #0x8                   	// #8
  43763c:	cmp	x8, x28
  437640:	b.eq	4373ec <feof@plt+0x346ec>  // b.none
  437644:	mov	x21, x25
  437648:	b	43786c <feof@plt+0x34b6c>
  43764c:	ldr	w9, [sp, #64]
  437650:	add	x21, x26, #0x1
  437654:	cmp	w9, w8
  437658:	b.ne	4378d4 <feof@plt+0x34bd4>  // b.any
  43765c:	str	wzr, [sp, #64]
  437660:	b	43786c <feof@plt+0x34b6c>
  437664:	str	x26, [x19, #1328]
  437668:	ldrh	w2, [x28, #24]
  43766c:	ldr	x1, [sp, #72]
  437670:	mov	x0, x19
  437674:	bl	438300 <feof@plt+0x35600>
  437678:	ldr	x21, [x19, #1312]
  43767c:	b	43786c <feof@plt+0x34b6c>
  437680:	ldr	x8, [sp, #24]
  437684:	add	x21, x26, #0x1
  437688:	cmp	x28, x8
  43768c:	b.ne	437acc <feof@plt+0x34dcc>  // b.any
  437690:	ldr	x8, [x19, #136]
  437694:	ldr	x8, [x8, #8]
  437698:	cbnz	x8, 437acc <feof@plt+0x34dcc>
  43769c:	ldrb	w8, [x19, #16]
  4376a0:	cbnz	w8, 437acc <feof@plt+0x34dcc>
  4376a4:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4376a8:	add	x26, x26, #0x3c4
  4376ac:	str	x21, [x19, #1328]
  4376b0:	mov	x22, x23
  4376b4:	ldrb	w8, [x23], #1
  4376b8:	mov	x25, x21
  4376bc:	ldrh	w9, [x26, x8, lsl #1]
  4376c0:	strb	w8, [x21], #1
  4376c4:	tbnz	w9, #11, 4376b0 <feof@plt+0x349b0>
  4376c8:	cmp	w8, #0x2f
  4376cc:	b.ne	437a38 <feof@plt+0x34d38>  // b.any
  4376d0:	ldrb	w8, [x23]
  4376d4:	cmp	w8, #0x2a
  4376d8:	b.ne	437a38 <feof@plt+0x34d38>  // b.any
  4376dc:	mov	x0, x19
  4376e0:	mov	x1, x23
  4376e4:	mov	w2, wzr
  4376e8:	str	x21, [x19, #1328]
  4376ec:	bl	438198 <feof@plt+0x35498>
  4376f0:	ldr	x21, [x19, #1328]
  4376f4:	mov	x23, x0
  4376f8:	b	4376b0 <feof@plt+0x349b0>
  4376fc:	ldr	w8, [sp, #64]
  437700:	add	x21, x26, #0x1
  437704:	cbnz	w8, 43786c <feof@plt+0x34b6c>
  437708:	ldr	w8, [sp, #48]
  43770c:	cmp	w27, #0x7
  437710:	add	w8, w8, #0x1
  437714:	str	w8, [sp, #48]
  437718:	b.hi	43765c <feof@plt+0x3495c>  // b.pmore
  43771c:	adrp	x10, 464000 <_obstack_memory_used@@Base+0xedd8>
  437720:	add	x10, x10, #0x16a
  437724:	adr	x8, 43765c <feof@plt+0x3495c>
  437728:	ldrb	w9, [x10, x27]
  43772c:	add	x8, x8, x9, lsl #2
  437730:	br	x8
  437734:	ldur	x11, [x29, #-72]
  437738:	ldrh	w8, [x11, #18]
  43773c:	tbnz	w8, #6, 437adc <feof@plt+0x34ddc>
  437740:	ldr	x9, [sp, #32]
  437744:	ldr	x10, [sp, #8]
  437748:	ldr	x8, [x19, #1312]
  43774c:	str	wzr, [sp, #64]
  437750:	mov	w20, #0x2                   	// #2
  437754:	str	x10, [x9]
  437758:	mov	w9, #0x1                   	// #1
  43775c:	str	w9, [sp, #48]
  437760:	add	x21, x8, x10
  437764:	b	43786c <feof@plt+0x34b6c>
  437768:	ldr	w8, [sp, #64]
  43776c:	add	x21, x26, #0x1
  437770:	cbnz	w8, 43786c <feof@plt+0x34b6c>
  437774:	ldr	w8, [sp, #48]
  437778:	cmp	w20, #0x2
  43777c:	sub	w8, w8, #0x1
  437780:	b.ne	4379a8 <feof@plt+0x34ca8>  // b.any
  437784:	cbnz	w8, 4379a8 <feof@plt+0x34ca8>
  437788:	ldur	x2, [x29, #-72]
  43778c:	ldrh	w8, [x2, #18]
  437790:	mvn	w8, w8
  437794:	tst	w8, #0x3
  437798:	b.ne	4379d0 <feof@plt+0x34cd0>  // b.any
  43779c:	ldp	w8, w3, [sp, #40]
  4377a0:	add	w3, w3, #0x1
  4377a4:	cmp	w3, w8
  4377a8:	b.hi	4377bc <feof@plt+0x34abc>  // b.pmore
  4377ac:	ldr	x8, [x19, #1312]
  4377b0:	ldr	x9, [sp, #32]
  4377b4:	sub	x8, x21, x8
  4377b8:	str	x8, [x9, w3, uxtw #3]
  4377bc:	ldr	w8, [sp, #40]
  4377c0:	movi	v0.2d, #0x0
  4377c4:	sub	x1, x29, #0x30
  4377c8:	mov	x0, x19
  4377cc:	stp	q0, q0, [x29, #-32]
  4377d0:	stur	q0, [x29, #-48]
  4377d4:	sturh	w8, [x29, #-32]
  4377d8:	str	w3, [sp, #44]
  4377dc:	bl	431de4 <feof@plt+0x2f0e4>
  4377e0:	tbnz	w0, #0, 437ca4 <feof@plt+0x34fa4>
  4377e4:	mov	w20, wzr
  4377e8:	str	wzr, [sp, #64]
  4377ec:	str	wzr, [sp, #48]
  4377f0:	b	43786c <feof@plt+0x34b6c>
  4377f4:	cmp	w20, #0x2
  4377f8:	add	x21, x26, #0x1
  4377fc:	b.ne	43786c <feof@plt+0x34b6c>  // b.any
  437800:	ldr	w10, [sp, #44]
  437804:	ldr	w8, [sp, #64]
  437808:	cbnz	w8, 43786c <feof@plt+0x34b6c>
  43780c:	ldr	w8, [sp, #48]
  437810:	cmp	w8, #0x1
  437814:	b.ne	43786c <feof@plt+0x34b6c>  // b.any
  437818:	ldr	w8, [sp, #40]
  43781c:	add	w10, w10, #0x1
  437820:	str	w10, [sp, #44]
  437824:	cmp	w10, w8
  437828:	b.ls	437984 <feof@plt+0x34c84>  // b.plast
  43782c:	mov	w8, #0x1                   	// #1
  437830:	str	wzr, [sp, #64]
  437834:	str	w8, [sp, #48]
  437838:	mov	w20, #0x2                   	// #2
  43783c:	b	43786c <feof@plt+0x34b6c>
  437840:	ldp	w8, w9, [sp, #60]
  437844:	tst	w8, #0x1
  437848:	mov	w8, #0x3e                  	// #62
  43784c:	csel	w9, w8, w9, ne  // ne = any
  437850:	str	w9, [sp, #64]
  437854:	b	437868 <feof@plt+0x34b68>
  437858:	ldr	w8, [sp, #64]
  43785c:	cmp	w8, #0x3e
  437860:	csel	w8, wzr, w8, eq  // eq = none
  437864:	str	w8, [sp, #64]
  437868:	add	x21, x26, #0x1
  43786c:	ldrb	w8, [x19, #16]
  437870:	cbnz	w8, 437878 <feof@plt+0x34b78>
  437874:	strb	wzr, [x19, #440]
  437878:	mov	w8, #0x16b                 	// #363
  43787c:	lsr	w8, w8, w20
  437880:	tst	w8, #0x1
  437884:	csel	w8, w20, wzr, eq  // eq = none
  437888:	cmp	w20, #0x9
  43788c:	str	wzr, [sp, #60]
  437890:	csel	w27, w8, w20, cc  // cc = lo, ul, last
  437894:	b	4373ec <feof@plt+0x346ec>
  437898:	ldrb	w8, [x23]
  43789c:	add	x21, x26, #0x1
  4378a0:	sub	w9, w8, #0x22
  4378a4:	cmp	w9, #0x3a
  4378a8:	b.hi	43786c <feof@plt+0x34b6c>  // b.pmore
  4378ac:	mov	w10, #0x1                   	// #1
  4378b0:	lsl	x9, x10, x9
  4378b4:	mov	x10, #0x21                  	// #33
  4378b8:	movk	x10, #0x400, lsl #48
  4378bc:	tst	x9, x10
  4378c0:	b.eq	43786c <feof@plt+0x34b6c>  // b.none
  4378c4:	add	x23, x28, #0x2
  4378c8:	add	x21, x26, #0x2
  4378cc:	strb	w8, [x26, #1]
  4378d0:	b	43786c <feof@plt+0x34b6c>
  4378d4:	cmp	w9, #0x0
  4378d8:	csel	w9, w8, w9, eq  // eq = none
  4378dc:	str	w9, [sp, #64]
  4378e0:	b	43786c <feof@plt+0x34b6c>
  4378e4:	strb	wzr, [x19, #440]
  4378e8:	ldrh	w10, [x28, #18]
  4378ec:	and	w8, w10, #0x3
  4378f0:	cmp	w8, #0x3
  4378f4:	b.ne	437914 <feof@plt+0x34c14>  // b.any
  4378f8:	ldr	w9, [x28, #24]
  4378fc:	cmp	w9, #0xa
  437900:	b.ne	437b04 <feof@plt+0x34e04>  // b.any
  437904:	mov	w8, #0x1                   	// #1
  437908:	b	437924 <feof@plt+0x34c24>
  43790c:	add	x21, x26, x22
  437910:	b	43786c <feof@plt+0x34b6c>
  437914:	ldr	x9, [x28, #24]
  437918:	ldrb	w11, [x9, #19]
  43791c:	tbz	w11, #2, 437b04 <feof@plt+0x34e04>
  437920:	ldrh	w8, [x9, #16]
  437924:	ldur	x1, [x29, #-64]
  437928:	add	x21, x26, x22
  43792c:	str	w8, [sp, #40]
  437930:	cbz	x1, 43793c <feof@plt+0x34c3c>
  437934:	mov	x0, x19
  437938:	bl	42d95c <feof@plt+0x2ac5c>
  43793c:	ldr	w8, [sp, #40]
  437940:	mov	x0, x19
  437944:	lsl	w8, w8, #3
  437948:	add	w1, w8, #0x8
  43794c:	bl	42d97c <feof@plt+0x2ac7c>
  437950:	ldr	x8, [x19, #40]
  437954:	ldr	x9, [x19, #1312]
  437958:	ldr	x10, [x0, #16]
  43795c:	str	wzr, [sp, #44]
  437960:	ldr	w8, [x8, #60]
  437964:	stur	x0, [x29, #-64]
  437968:	str	x10, [sp, #32]
  43796c:	mov	w27, #0x1                   	// #1
  437970:	stur	w8, [x29, #-76]
  437974:	sub	x8, x26, x9
  437978:	str	x8, [sp, #8]
  43797c:	stur	x28, [x29, #-72]
  437980:	b	4373ec <feof@plt+0x346ec>
  437984:	ldr	x8, [x19, #1312]
  437988:	mov	w9, #0x1                   	// #1
  43798c:	str	w9, [sp, #48]
  437990:	ldr	x9, [sp, #32]
  437994:	sub	x8, x21, x8
  437998:	str	wzr, [sp, #64]
  43799c:	mov	w20, #0x2                   	// #2
  4379a0:	str	x8, [x9, w10, uxtw #3]
  4379a4:	b	43786c <feof@plt+0x34b6c>
  4379a8:	cmp	w20, #0x9
  4379ac:	str	w8, [sp, #48]
  4379b0:	b.hi	43765c <feof@plt+0x3495c>  // b.pmore
  4379b4:	mov	w8, #0x1                   	// #1
  4379b8:	lsl	w8, w8, w20
  4379bc:	mov	w9, #0x290                 	// #656
  4379c0:	tst	w8, w9
  4379c4:	b.eq	43765c <feof@plt+0x3495c>  // b.none
  4379c8:	mov	w20, wzr
  4379cc:	b	43765c <feof@plt+0x3495c>
  4379d0:	ldr	x1, [x2, #24]
  4379d4:	ldp	w9, w10, [sp, #40]
  4379d8:	ldrb	w8, [x1, #19]
  4379dc:	add	w22, w10, #0x1
  4379e0:	cmp	w22, w9
  4379e4:	orr	w8, w8, #0x20
  4379e8:	strb	w8, [x1, #19]
  4379ec:	b.hi	437a00 <feof@plt+0x34d00>  // b.pmore
  4379f0:	ldr	x8, [x19, #1312]
  4379f4:	ldr	x9, [sp, #32]
  4379f8:	sub	x8, x21, x8
  4379fc:	str	x8, [x9, w22, uxtw #3]
  437a00:	cbnz	w10, 437be4 <feof@plt+0x34ee4>
  437a04:	ldrh	w8, [x1, #16]
  437a08:	cbz	w8, 437bd0 <feof@plt+0x34ed0>
  437a0c:	mov	w22, #0x1                   	// #1
  437a10:	b	437be4 <feof@plt+0x34ee4>
  437a14:	str	wzr, [sp, #64]
  437a18:	mov	w20, #0x4                   	// #4
  437a1c:	b	43786c <feof@plt+0x34b6c>
  437a20:	str	wzr, [sp, #64]
  437a24:	mov	w20, #0x7                   	// #7
  437a28:	b	43786c <feof@plt+0x34b6c>
  437a2c:	str	wzr, [sp, #64]
  437a30:	mov	w20, #0x9                   	// #9
  437a34:	b	43786c <feof@plt+0x34b6c>
  437a38:	str	x25, [x19, #1328]
  437a3c:	ldrb	w8, [x22]
  437a40:	cmp	x8, #0xa
  437a44:	b.eq	438144 <feof@plt+0x35444>  // b.none
  437a48:	ldrh	w9, [x26, x8, lsl #1]
  437a4c:	tbz	w9, #2, 437a5c <feof@plt+0x34d5c>
  437a50:	ldr	w10, [x19, #1116]
  437a54:	cmp	w10, #0x15
  437a58:	b.ne	438128 <feof@plt+0x35428>  // b.any
  437a5c:	tbnz	w9, #9, 437a70 <feof@plt+0x34d70>
  437a60:	cmp	w8, #0x24
  437a64:	b.ne	437ab8 <feof@plt+0x34db8>  // b.any
  437a68:	ldrb	w9, [x19, #1146]
  437a6c:	cbz	w9, 437ab8 <feof@plt+0x34db8>
  437a70:	mov	x21, x25
  437a74:	mov	x9, x22
  437a78:	mov	w11, #0x204                 	// #516
  437a7c:	strb	w8, [x21], #1
  437a80:	ldrb	w8, [x9, #1]!
  437a84:	ldrh	w10, [x26, x8, lsl #1]
  437a88:	tst	w10, w11
  437a8c:	b.ne	437a7c <feof@plt+0x34d7c>  // b.any
  437a90:	ldr	x8, [x19, #136]
  437a94:	mov	w3, #0x1                   	// #1
  437a98:	str	x9, [x8, #16]
  437a9c:	ldr	x1, [x19, #1328]
  437aa0:	ldr	x0, [x19, #1088]
  437aa4:	sub	x2, x21, x1
  437aa8:	bl	436a2c <feof@plt+0x33d2c>
  437aac:	str	x21, [x19, #1328]
  437ab0:	ldrb	w8, [x0, #16]
  437ab4:	tbnz	w8, #0, 438128 <feof@plt+0x35428>
  437ab8:	ldr	w8, [x19, #1116]
  437abc:	cmp	w8, #0x15
  437ac0:	b.ne	438128 <feof@plt+0x35428>  // b.any
  437ac4:	mov	x21, x25
  437ac8:	mov	x23, x22
  437acc:	ldrb	w8, [x19, #20]
  437ad0:	mov	w27, #0x5                   	// #5
  437ad4:	cbnz	w8, 4373ec <feof@plt+0x346ec>
  437ad8:	b	43786c <feof@plt+0x34b6c>
  437adc:	mvn	w8, w8
  437ae0:	tst	w8, #0x3
  437ae4:	b.ne	437b1c <feof@plt+0x34e1c>  // b.any
  437ae8:	ldr	w8, [x11, #24]
  437aec:	cmp	w8, #0xa
  437af0:	b.eq	437b28 <feof@plt+0x34e28>  // b.none
  437af4:	b	437b58 <feof@plt+0x34e58>
  437af8:	mov	w8, wzr
  437afc:	str	w8, [sp, #64]
  437b00:	b	43786c <feof@plt+0x34b6c>
  437b04:	tbz	w10, #6, 437c14 <feof@plt+0x34f14>
  437b08:	cmp	w8, #0x3
  437b0c:	b.ne	437b74 <feof@plt+0x34e74>  // b.any
  437b10:	cmp	w9, #0xa
  437b14:	b.eq	437b80 <feof@plt+0x34e80>  // b.none
  437b18:	b	437bb0 <feof@plt+0x34eb0>
  437b1c:	ldr	x8, [x11, #24]
  437b20:	ldrb	w8, [x8, #19]
  437b24:	tbz	w8, #2, 437b58 <feof@plt+0x34e58>
  437b28:	ldr	x8, [x19, #136]
  437b2c:	mov	w9, #0x1                   	// #1
  437b30:	b	437b40 <feof@plt+0x34e40>
  437b34:	ldr	x8, [x8, #8]
  437b38:	add	x9, x9, #0x1
  437b3c:	cbz	x8, 437740 <feof@plt+0x34a40>
  437b40:	cmp	x9, #0x15
  437b44:	b.cc	437b34 <feof@plt+0x34e34>  // b.lo, b.ul, b.last
  437b48:	ldr	x10, [x8, #40]
  437b4c:	cmp	x10, x11
  437b50:	b.ne	437b34 <feof@plt+0x34e34>  // b.any
  437b54:	cbz	x8, 437740 <feof@plt+0x34a40>
  437b58:	ldr	x3, [x11]
  437b5c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  437b60:	mov	w1, #0x3                   	// #3
  437b64:	mov	x0, x19
  437b68:	add	x2, x2, #0x172
  437b6c:	bl	4223e4 <feof@plt+0x1f6e4>
  437b70:	b	4379c8 <feof@plt+0x34cc8>
  437b74:	ldr	x8, [x28, #24]
  437b78:	ldrb	w8, [x8, #19]
  437b7c:	tbz	w8, #2, 437bb0 <feof@plt+0x34eb0>
  437b80:	ldr	x8, [x19, #136]
  437b84:	mov	w9, #0x1                   	// #1
  437b88:	b	437b98 <feof@plt+0x34e98>
  437b8c:	ldr	x8, [x8, #8]
  437b90:	add	x9, x9, #0x1
  437b94:	cbz	x8, 437c14 <feof@plt+0x34f14>
  437b98:	cmp	x9, #0x15
  437b9c:	b.cc	437b8c <feof@plt+0x34e8c>  // b.lo, b.ul, b.last
  437ba0:	ldr	x10, [x8, #40]
  437ba4:	cmp	x10, x28
  437ba8:	b.ne	437b8c <feof@plt+0x34e8c>  // b.any
  437bac:	cbz	x8, 437c14 <feof@plt+0x34f14>
  437bb0:	ldr	x3, [x28]
  437bb4:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  437bb8:	mov	w1, #0x3                   	// #3
  437bbc:	mov	x0, x19
  437bc0:	add	x2, x2, #0x172
  437bc4:	add	x21, x26, x22
  437bc8:	bl	4223e4 <feof@plt+0x1f6e4>
  437bcc:	b	43786c <feof@plt+0x34b6c>
  437bd0:	ldr	x8, [x19, #1312]
  437bd4:	ldr	x9, [sp, #8]
  437bd8:	add	x8, x8, x9
  437bdc:	cmp	x8, x26
  437be0:	cset	w22, ne  // ne = any
  437be4:	mov	x0, x19
  437be8:	mov	w3, w22
  437bec:	bl	431de4 <feof@plt+0x2f0e4>
  437bf0:	tbnz	w0, #0, 437e94 <feof@plt+0x35194>
  437bf4:	mov	w20, wzr
  437bf8:	str	wzr, [sp, #64]
  437bfc:	stp	w22, wzr, [sp, #44]
  437c00:	b	43786c <feof@plt+0x34b6c>
  437c04:	mov	x0, x19
  437c08:	bl	43200c <feof@plt+0x2f30c>
  437c0c:	mov	w27, w20
  437c10:	b	437398 <feof@plt+0x34698>
  437c14:	str	x26, [x19, #1328]
  437c18:	ldrh	w8, [x28, #18]
  437c1c:	mov	x20, x28
  437c20:	mvn	w8, w8
  437c24:	tst	w8, #0x3
  437c28:	b.ne	437c70 <feof@plt+0x34f70>  // b.any
  437c2c:	mov	x0, x19
  437c30:	mov	x1, x20
  437c34:	mov	w2, wzr
  437c38:	bl	431988 <feof@plt+0x2ec88>
  437c3c:	mov	x22, x0
  437c40:	bl	4026d0 <strlen@plt>
  437c44:	mov	x28, x0
  437c48:	add	x1, x0, #0x1
  437c4c:	mov	x0, x19
  437c50:	bl	42d11c <feof@plt+0x2a41c>
  437c54:	mov	x1, x22
  437c58:	mov	x2, x28
  437c5c:	mov	x21, x0
  437c60:	bl	402640 <memcpy@plt>
  437c64:	mov	w8, #0xa                   	// #10
  437c68:	strb	w8, [x21, x28]
  437c6c:	b	437c88 <feof@plt+0x34f88>
  437c70:	ldr	x8, [x20, #24]
  437c74:	ldrb	w9, [x8, #19]
  437c78:	ldr	x21, [x8, #24]
  437c7c:	ldr	w28, [x8, #12]
  437c80:	orr	w9, w9, #0x20
  437c84:	strb	w9, [x8, #19]
  437c88:	mov	x0, x19
  437c8c:	mov	x1, x20
  437c90:	mov	x2, x21
  437c94:	mov	x3, x28
  437c98:	bl	431f8c <feof@plt+0x2f28c>
  437c9c:	mov	w27, wzr
  437ca0:	b	437398 <feof@plt+0x34698>
  437ca4:	ldr	x20, [sp, #32]
  437ca8:	ldr	x10, [x19, #1312]
  437cac:	mov	x0, x19
  437cb0:	ldp	x9, x8, [x20]
  437cb4:	sub	x21, x8, x9
  437cb8:	ldr	x8, [sp, #8]
  437cbc:	add	x1, x21, #0x2
  437cc0:	add	x8, x10, x8
  437cc4:	str	x8, [x19, #1328]
  437cc8:	str	x23, [x24, #16]
  437ccc:	bl	42d11c <feof@plt+0x2a41c>
  437cd0:	mov	x22, x0
  437cd4:	mov	w8, #0x28                  	// #40
  437cd8:	strb	w8, [x22], #1
  437cdc:	ldr	x8, [x19, #1312]
  437ce0:	ldr	x9, [x20]
  437ce4:	mov	x25, x0
  437ce8:	mov	x0, x22
  437cec:	mov	x2, x21
  437cf0:	add	x1, x8, x9
  437cf4:	bl	402640 <memcpy@plt>
  437cf8:	add	x8, x21, x25
  437cfc:	mov	w9, #0xa                   	// #10
  437d00:	strb	w9, [x8, #1]
  437d04:	ldr	x10, [x24, #24]
  437d08:	add	x9, x22, x21
  437d0c:	mov	w2, #0x1                   	// #1
  437d10:	mov	x0, x19
  437d14:	str	x10, [sp, #64]
  437d18:	ldp	x8, x10, [x19]
  437d1c:	mov	x1, xzr
  437d20:	str	x10, [sp, #48]
  437d24:	ldrb	w10, [x8, #104]
  437d28:	ldr	x27, [x8, #32]
  437d2c:	ldp	x26, x28, [x8]
  437d30:	str	x9, [x8, #32]
  437d34:	str	w10, [sp, #4]
  437d38:	stp	x25, x25, [x8]
  437d3c:	strb	wzr, [x8, #104]
  437d40:	ldrb	w9, [x19, #16]
  437d44:	str	x8, [x19, #8]
  437d48:	mov	w8, #0x1                   	// #1
  437d4c:	strb	w8, [x19, #16]
  437d50:	ldr	x20, [x24, #8]
  437d54:	cmp	w9, #0x0
  437d58:	cset	w22, ne  // ne = any
  437d5c:	str	xzr, [x24, #8]
  437d60:	bl	4372e4 <feof@plt+0x345e4>
  437d64:	ldr	x9, [x19, #1320]
  437d68:	ldr	x8, [x19, #1328]
  437d6c:	strb	w22, [x19, #16]
  437d70:	sub	x9, x9, x8
  437d74:	cmp	x9, #0x3
  437d78:	b.hi	437dac <feof@plt+0x350ac>  // b.pmore
  437d7c:	ldr	x0, [x19, #1312]
  437d80:	sub	x21, x8, x0
  437d84:	add	x8, x21, x21, lsl #1
  437d88:	add	x8, x8, #0xc
  437d8c:	lsr	x22, x8, #1
  437d90:	mov	x1, x22
  437d94:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  437d98:	add	x9, x0, x22
  437d9c:	add	x8, x0, x21
  437da0:	str	x0, [x19, #1312]
  437da4:	str	x9, [x19, #1320]
  437da8:	str	x8, [x19, #1328]
  437dac:	mov	w9, #0xa                   	// #10
  437db0:	strb	w9, [x8]
  437db4:	ldr	x8, [x19, #1312]
  437db8:	ldr	x22, [sp, #8]
  437dbc:	ldr	x9, [x19]
  437dc0:	mov	x0, x19
  437dc4:	mov	w2, wzr
  437dc8:	add	x8, x8, x22
  437dcc:	stp	x8, x8, [x9]
  437dd0:	ldr	x10, [x19, #1328]
  437dd4:	ldur	x21, [x29, #-72]
  437dd8:	str	x10, [x9, #32]
  437ddc:	str	x8, [x24, #16]
  437de0:	ldr	x8, [x19]
  437de4:	mov	x1, x21
  437de8:	ldr	x8, [x8, #32]
  437dec:	str	x8, [x24, #24]
  437df0:	ldrb	w8, [x19, #24]
  437df4:	add	w8, w8, #0x1
  437df8:	strb	w8, [x19, #24]
  437dfc:	bl	431988 <feof@plt+0x2ec88>
  437e00:	ldrb	w8, [x19, #24]
  437e04:	sub	w8, w8, #0x1
  437e08:	strb	w8, [x19, #24]
  437e0c:	str	x20, [x24, #8]
  437e10:	ldr	x8, [x19]
  437e14:	mov	x20, x0
  437e18:	stp	x26, x28, [x8]
  437e1c:	ldr	w9, [sp, #4]
  437e20:	str	x27, [x8, #32]
  437e24:	strb	w9, [x8, #104]
  437e28:	ldr	x8, [x19, #1312]
  437e2c:	ldr	x9, [sp, #48]
  437e30:	add	x8, x8, x22
  437e34:	str	x8, [x19, #1328]
  437e38:	ldr	x8, [sp, #64]
  437e3c:	str	x9, [x19, #8]
  437e40:	stp	x23, x8, [x24, #16]
  437e44:	bl	4026d0 <strlen@plt>
  437e48:	mov	x28, x0
  437e4c:	add	x1, x0, #0x1
  437e50:	mov	x0, x19
  437e54:	bl	42d11c <feof@plt+0x2a41c>
  437e58:	mov	x1, x20
  437e5c:	mov	x2, x28
  437e60:	mov	x22, x0
  437e64:	bl	402640 <memcpy@plt>
  437e68:	mov	w8, #0xa                   	// #10
  437e6c:	mov	x0, x19
  437e70:	mov	x1, x21
  437e74:	mov	x2, x22
  437e78:	mov	x3, x28
  437e7c:	strb	w8, [x22, x28]
  437e80:	bl	431f8c <feof@plt+0x2f28c>
  437e84:	mov	w27, wzr
  437e88:	str	wzr, [sp, #64]
  437e8c:	str	wzr, [sp, #48]
  437e90:	b	437398 <feof@plt+0x34698>
  437e94:	ldr	x8, [x19, #1312]
  437e98:	ldr	x9, [sp, #8]
  437e9c:	mov	w25, w22
  437ea0:	add	x8, x8, x9
  437ea4:	str	x8, [x19, #1328]
  437ea8:	ldur	x8, [x29, #-72]
  437eac:	str	x23, [x24, #16]
  437eb0:	ldr	x20, [x8, #24]
  437eb4:	ldrh	w8, [x20, #16]
  437eb8:	cbz	w8, 437f08 <feof@plt+0x35208>
  437ebc:	ldr	x9, [x20, #24]
  437ec0:	ldrh	w11, [x9, #4]
  437ec4:	ldr	w8, [x9]
  437ec8:	cbz	w11, 437f60 <feof@plt+0x35260>
  437ecc:	ldr	x21, [sp, #32]
  437ed0:	mov	x10, x8
  437ed4:	add	x10, x10, #0xd
  437ed8:	add	x11, x21, w11, uxth #3
  437edc:	and	x10, x10, #0x1fffffff8
  437ee0:	ldp	x13, x12, [x11, #-8]
  437ee4:	add	x9, x9, x10
  437ee8:	ldr	w10, [x9]
  437eec:	ldrh	w11, [x9, #4]
  437ef0:	mvn	x13, x13
  437ef4:	add	x12, x13, x12
  437ef8:	add	x8, x8, x10
  437efc:	add	x8, x8, x12, lsl #1
  437f00:	cbnz	w11, 437ed4 <feof@plt+0x351d4>
  437f04:	b	437f64 <feof@plt+0x35264>
  437f08:	ldur	x8, [x29, #-72]
  437f0c:	ldrh	w8, [x8, #18]
  437f10:	mvn	w8, w8
  437f14:	tst	w8, #0x3
  437f18:	b.ne	438090 <feof@plt+0x35390>  // b.any
  437f1c:	ldur	x1, [x29, #-72]
  437f20:	mov	x0, x19
  437f24:	mov	w2, wzr
  437f28:	bl	431988 <feof@plt+0x2ec88>
  437f2c:	mov	x20, x0
  437f30:	bl	4026d0 <strlen@plt>
  437f34:	mov	x22, x0
  437f38:	add	x1, x0, #0x1
  437f3c:	mov	x0, x19
  437f40:	bl	42d11c <feof@plt+0x2a41c>
  437f44:	mov	x1, x20
  437f48:	mov	x2, x22
  437f4c:	mov	x28, x0
  437f50:	bl	402640 <memcpy@plt>
  437f54:	mov	w8, #0xa                   	// #10
  437f58:	strb	w8, [x28, x22]
  437f5c:	b	4380a4 <feof@plt+0x353a4>
  437f60:	ldr	x21, [sp, #32]
  437f64:	add	x1, x8, #0x1
  437f68:	mov	x0, x19
  437f6c:	bl	42d97c <feof@plt+0x2ac7c>
  437f70:	ldr	x9, [x0, #16]
  437f74:	ldr	x10, [x20, #24]
  437f78:	mov	x22, x0
  437f7c:	mov	w8, wzr
  437f80:	mov	x3, xzr
  437f84:	mov	w16, #0x5c                  	// #92
  437f88:	b	437f9c <feof@plt+0x3529c>
  437f8c:	ldr	w11, [x10]
  437f90:	add	x11, x11, #0xd
  437f94:	and	x11, x11, #0x1fffffff8
  437f98:	add	x10, x10, x11
  437f9c:	ldr	w11, [x10]
  437fa0:	add	x3, x3, x11
  437fa4:	cbz	w11, 437fcc <feof@plt+0x352cc>
  437fa8:	add	x12, x10, #0x6
  437fac:	ldrb	w13, [x12], #1
  437fb0:	cmp	w8, #0x0
  437fb4:	cset	w14, eq  // eq = none
  437fb8:	cmp	w13, #0x22
  437fbc:	csel	w8, w14, w8, eq  // eq = none
  437fc0:	subs	x11, x11, #0x1
  437fc4:	strb	w13, [x9], #1
  437fc8:	b.ne	437fac <feof@plt+0x352ac>  // b.any
  437fcc:	ldrh	w11, [x10, #4]
  437fd0:	cbz	x11, 438060 <feof@plt+0x35360>
  437fd4:	add	x11, x21, x11, lsl #3
  437fd8:	ldp	x12, x14, [x11, #-8]
  437fdc:	mvn	x11, x12
  437fe0:	cmn	x14, x11
  437fe4:	b.eq	437f8c <feof@plt+0x3528c>  // b.none
  437fe8:	ldr	x11, [x19, #1312]
  437fec:	mov	w13, wzr
  437ff0:	add	x11, x11, x12
  437ff4:	sub	x12, x12, x14
  437ff8:	add	x12, x12, #0x1
  437ffc:	mov	x14, x11
  438000:	b	438020 <feof@plt+0x35320>
  438004:	strb	w16, [x9], #1
  438008:	add	x3, x3, #0x1
  43800c:	ldrb	w15, [x14], #1
  438010:	adds	x12, x12, #0x1
  438014:	add	x3, x3, #0x1
  438018:	strb	w15, [x9], #1
  43801c:	b.cs	437f8c <feof@plt+0x3528c>  // b.hs, b.nlast
  438020:	cbz	w8, 43800c <feof@plt+0x3530c>
  438024:	ldrb	w15, [x14]
  438028:	cmp	w15, #0x22
  43802c:	b.ne	438050 <feof@plt+0x35350>  // b.any
  438030:	cmp	x14, x11
  438034:	b.ls	438004 <feof@plt+0x35304>  // b.plast
  438038:	ldurb	w15, [x14, #-1]
  43803c:	cmp	w15, #0x5c
  438040:	b.eq	438004 <feof@plt+0x35304>  // b.none
  438044:	cmp	w13, #0x0
  438048:	cset	w13, eq  // eq = none
  43804c:	b	438004 <feof@plt+0x35304>
  438050:	cbz	w13, 43800c <feof@plt+0x3530c>
  438054:	cmp	w15, #0x5c
  438058:	b.eq	438004 <feof@plt+0x35304>  // b.none
  43805c:	b	43800c <feof@plt+0x3530c>
  438060:	mov	w8, #0xa                   	// #10
  438064:	strb	w8, [x9]
  438068:	ldr	x2, [x22, #16]
  43806c:	ldur	x1, [x29, #-72]
  438070:	mov	x0, x19
  438074:	bl	431f8c <feof@plt+0x2f28c>
  438078:	stp	w25, wzr, [sp, #44]
  43807c:	ldr	x8, [x19, #136]
  438080:	mov	w27, wzr
  438084:	str	wzr, [sp, #64]
  438088:	str	x22, [x8, #32]
  43808c:	b	437398 <feof@plt+0x34698>
  438090:	ldrb	w8, [x20, #19]
  438094:	ldr	x28, [x20, #24]
  438098:	ldr	w22, [x20, #12]
  43809c:	orr	w8, w8, #0x20
  4380a0:	strb	w8, [x20, #19]
  4380a4:	ldur	x1, [x29, #-72]
  4380a8:	mov	x0, x19
  4380ac:	mov	x2, x28
  4380b0:	mov	x3, x22
  4380b4:	bl	431f8c <feof@plt+0x2f28c>
  4380b8:	mov	w27, wzr
  4380bc:	str	wzr, [sp, #64]
  4380c0:	stp	w25, wzr, [sp, #44]
  4380c4:	b	437398 <feof@plt+0x34698>
  4380c8:	mov	w22, #0x1                   	// #1
  4380cc:	ldp	x21, x1, [x29, #-72]
  4380d0:	cbz	x1, 4380dc <feof@plt+0x353dc>
  4380d4:	mov	x0, x19
  4380d8:	bl	42d95c <feof@plt+0x2ac5c>
  4380dc:	cmp	w20, #0x2
  4380e0:	b.ne	438104 <feof@plt+0x35404>  // b.any
  4380e4:	ldr	x5, [x21]
  4380e8:	ldur	w2, [x29, #-76]
  4380ec:	adrp	x4, 463000 <_obstack_memory_used@@Base+0xddd8>
  4380f0:	add	x4, x4, #0xab7
  4380f4:	mov	w1, #0x3                   	// #3
  4380f8:	mov	x0, x19
  4380fc:	mov	w3, wzr
  438100:	bl	4228a4 <feof@plt+0x1fba4>
  438104:	mov	w0, w22
  438108:	ldp	x20, x19, [sp, #240]
  43810c:	ldp	x22, x21, [sp, #224]
  438110:	ldp	x24, x23, [sp, #208]
  438114:	ldp	x26, x25, [sp, #192]
  438118:	ldp	x28, x27, [sp, #176]
  43811c:	ldp	x29, x30, [sp, #160]
  438120:	add	sp, sp, #0x100
  438124:	ret
  438128:	ldr	x8, [x19]
  43812c:	mov	x0, x19
  438130:	mov	w1, wzr
  438134:	str	x22, [x8]
  438138:	bl	41e230 <feof@plt+0x1b530>
  43813c:	mov	w22, wzr
  438140:	b	4380cc <feof@plt+0x353cc>
  438144:	ldr	x8, [x19]
  438148:	mov	w9, #0x1                   	// #1
  43814c:	mov	w10, #0x18                  	// #24
  438150:	mov	w2, wzr
  438154:	strb	w9, [x8, #104]
  438158:	ldr	x0, [x19, #40]
  43815c:	ldr	w8, [x0, #12]
  438160:	ldr	x9, [x0]
  438164:	sub	w8, w8, #0x1
  438168:	smaddl	x8, w8, w10, x9
  43816c:	ldr	w9, [x0, #60]
  438170:	ldr	w10, [x8]
  438174:	ldrb	w11, [x8, #6]
  438178:	ldr	w8, [x8, #16]
  43817c:	sub	w9, w9, w10
  438180:	lsr	w9, w9, w11
  438184:	add	w8, w8, w9
  438188:	add	w1, w8, #0x1
  43818c:	bl	42ebc8 <feof@plt+0x2bec8>
  438190:	mov	w22, wzr
  438194:	b	4380cc <feof@plt+0x353cc>
  438198:	stp	x29, x30, [sp, #-64]!
  43819c:	stp	x22, x21, [sp, #32]
  4381a0:	stp	x20, x19, [sp, #48]
  4381a4:	str	x23, [sp, #16]
  4381a8:	ldr	x8, [x0, #40]
  4381ac:	ldr	x23, [x0]
  4381b0:	mov	x20, x1
  4381b4:	mov	x19, x0
  4381b8:	ldr	w22, [x8, #60]
  4381bc:	str	x1, [x23]
  4381c0:	ldr	x8, [x0, #136]
  4381c4:	mov	w21, w2
  4381c8:	mov	x29, sp
  4381cc:	ldr	x8, [x8, #8]
  4381d0:	cbz	x8, 438224 <feof@plt+0x35524>
  4381d4:	mov	x8, x20
  4381d8:	ldrb	w9, [x8, #1]!
  4381dc:	cmp	w9, #0x2f
  4381e0:	cinc	x8, x8, eq  // eq = none
  4381e4:	b	4381f0 <feof@plt+0x354f0>
  4381e8:	cmp	w10, #0xa
  4381ec:	b.eq	438294 <feof@plt+0x35594>  // b.none
  4381f0:	mov	x9, x8
  4381f4:	ldrb	w10, [x8], #1
  4381f8:	cmp	w10, #0x2f
  4381fc:	b.ne	4381e8 <feof@plt+0x354e8>  // b.any
  438200:	ldurb	w10, [x9, #-1]
  438204:	cmp	w10, #0x2a
  438208:	b.ne	4381f0 <feof@plt+0x354f0>  // b.any
  43820c:	add	x8, x9, #0x1
  438210:	mov	w22, wzr
  438214:	str	x8, [x23]
  438218:	ldrb	w8, [x19, #16]
  43821c:	cbnz	w8, 4382c0 <feof@plt+0x355c0>
  438220:	b	43823c <feof@plt+0x3553c>
  438224:	mov	x0, x19
  438228:	bl	429428 <feof@plt+0x26728>
  43822c:	tbnz	w0, #0, 438298 <feof@plt+0x35598>
  438230:	mov	w22, wzr
  438234:	ldrb	w8, [x19, #16]
  438238:	cbnz	w8, 4382c0 <feof@plt+0x355c0>
  43823c:	ldrb	w8, [x19, #1123]
  438240:	cbnz	w8, 4382cc <feof@plt+0x355cc>
  438244:	ldr	x8, [x23]
  438248:	ldr	x0, [x19, #1328]
  43824c:	mov	x1, x20
  438250:	sub	x21, x8, x20
  438254:	mov	x2, x21
  438258:	bl	402640 <memcpy@plt>
  43825c:	ldr	x8, [x19, #1328]
  438260:	add	x8, x8, x21
  438264:	str	x8, [x19, #1328]
  438268:	cbz	w22, 4382e8 <feof@plt+0x355e8>
  43826c:	add	x9, x8, #0x1
  438270:	mov	w10, #0x2a                  	// #42
  438274:	str	x9, [x19, #1328]
  438278:	strb	w10, [x8]
  43827c:	ldr	x8, [x19, #1328]
  438280:	mov	w9, #0x2f                  	// #47
  438284:	add	x10, x8, #0x1
  438288:	str	x10, [x19, #1328]
  43828c:	strb	w9, [x8]
  438290:	b	4382e8 <feof@plt+0x355e8>
  438294:	str	x9, [x23]
  438298:	adrp	x4, 462000 <_obstack_memory_used@@Base+0xcdd8>
  43829c:	add	x4, x4, #0xd93
  4382a0:	mov	w1, #0x3                   	// #3
  4382a4:	mov	x0, x19
  4382a8:	mov	w2, w22
  4382ac:	mov	w3, wzr
  4382b0:	bl	4228a4 <feof@plt+0x1fba4>
  4382b4:	mov	w22, #0x1                   	// #1
  4382b8:	ldrb	w8, [x19, #16]
  4382bc:	cbz	w8, 43823c <feof@plt+0x3553c>
  4382c0:	cbz	w21, 4382dc <feof@plt+0x355dc>
  4382c4:	ldrb	w8, [x19, #1124]
  4382c8:	cbz	w8, 438244 <feof@plt+0x35544>
  4382cc:	ldr	x8, [x19, #1328]
  4382d0:	sub	x8, x8, #0x1
  4382d4:	str	x8, [x19, #1328]
  4382d8:	b	4382e8 <feof@plt+0x355e8>
  4382dc:	ldr	x8, [x19, #1328]
  4382e0:	mov	w9, #0x20                  	// #32
  4382e4:	sturb	w9, [x8, #-1]
  4382e8:	ldr	x0, [x23]
  4382ec:	ldp	x20, x19, [sp, #48]
  4382f0:	ldp	x22, x21, [sp, #32]
  4382f4:	ldr	x23, [sp, #16]
  4382f8:	ldp	x29, x30, [sp], #64
  4382fc:	ret
  438300:	stp	x29, x30, [sp, #-64]!
  438304:	stp	x24, x23, [sp, #16]
  438308:	stp	x22, x21, [sp, #32]
  43830c:	stp	x20, x19, [sp, #48]
  438310:	ldr	x8, [x0, #1328]
  438314:	ldr	x9, [x0, #1312]
  438318:	ldrh	w10, [x1, #16]
  43831c:	mov	x19, x1
  438320:	mov	x21, x0
  438324:	sub	x20, x8, x9
  438328:	mov	x29, sp
  43832c:	cbz	w10, 4383c0 <feof@plt+0x356c0>
  438330:	mov	x23, x21
  438334:	ldr	w8, [x19, #12]
  438338:	ldr	x9, [x23, #56]!
  43833c:	add	x11, x20, #0xd
  438340:	and	x24, x11, #0xfffffffffffffff8
  438344:	mov	w22, w2
  438348:	ldp	x9, x10, [x9, #16]
  43834c:	add	x2, x24, x8
  438350:	sub	x10, x10, x9
  438354:	cmp	x2, x10
  438358:	b.ls	438374 <feof@plt+0x35674>  // b.plast
  43835c:	mov	x0, x21
  438360:	mov	x1, x23
  438364:	bl	42dafc <feof@plt+0x2adfc>
  438368:	ldr	x8, [x21, #56]
  43836c:	ldr	x9, [x8, #16]
  438370:	ldr	w8, [x19, #12]
  438374:	add	x8, x9, x8
  438378:	str	x9, [x19, #24]
  43837c:	str	w20, [x8]
  438380:	strh	w22, [x8, #4]
  438384:	ldr	x1, [x21, #1312]
  438388:	add	x0, x8, #0x6
  43838c:	mov	x2, x20
  438390:	bl	402640 <memcpy@plt>
  438394:	ldr	x8, [x21, #1312]
  438398:	str	x8, [x21, #1328]
  43839c:	ldr	w8, [x19, #12]
  4383a0:	add	w8, w8, w24
  4383a4:	str	w8, [x19, #12]
  4383a8:	cbnz	w22, 4383ec <feof@plt+0x356ec>
  4383ac:	ldr	x9, [x23]
  4383b0:	ldr	x10, [x9, #16]
  4383b4:	add	x8, x10, w8, uxtw
  4383b8:	str	x8, [x9, #16]
  4383bc:	b	4383ec <feof@plt+0x356ec>
  4383c0:	add	x1, x20, #0x1
  4383c4:	mov	x0, x21
  4383c8:	bl	42d11c <feof@plt+0x2a41c>
  4383cc:	ldr	x1, [x21, #1312]
  4383d0:	mov	x2, x20
  4383d4:	mov	x21, x0
  4383d8:	bl	402640 <memcpy@plt>
  4383dc:	mov	w8, #0xa                   	// #10
  4383e0:	strb	w8, [x21, x20]
  4383e4:	str	x21, [x19, #24]
  4383e8:	str	w20, [x19, #12]
  4383ec:	ldp	x20, x19, [sp, #48]
  4383f0:	ldp	x22, x21, [sp, #32]
  4383f4:	ldp	x24, x23, [sp, #16]
  4383f8:	ldp	x29, x30, [sp], #64
  4383fc:	ret
  438400:	ldrb	w9, [x0, #19]
  438404:	mov	x8, x0
  438408:	tbz	w9, #2, 43845c <feof@plt+0x3575c>
  43840c:	ldrh	w9, [x8, #16]
  438410:	cbz	w9, 43845c <feof@plt+0x3575c>
  438414:	ldr	x9, [x8, #24]
  438418:	ldrh	w11, [x9, #4]
  43841c:	ldr	w0, [x9]
  438420:	cbz	w11, 438458 <feof@plt+0x35758>
  438424:	ldr	x8, [x8]
  438428:	mov	x10, x0
  43842c:	add	x11, x8, w11, uxth #3
  438430:	ldur	x11, [x11, #-8]
  438434:	add	x10, x10, #0xd
  438438:	and	x10, x10, #0x1fffffff8
  43843c:	add	x9, x9, x10
  438440:	ldr	w12, [x11, #8]
  438444:	ldr	w10, [x9]
  438448:	ldrh	w11, [x9, #4]
  43844c:	add	x12, x0, x12
  438450:	add	x0, x12, x10
  438454:	cbnz	w11, 43842c <feof@plt+0x3572c>
  438458:	ret
  43845c:	ldr	w0, [x8, #12]
  438460:	ret
  438464:	stp	x29, x30, [sp, #-48]!
  438468:	stp	x22, x21, [sp, #16]
  43846c:	stp	x20, x19, [sp, #32]
  438470:	ldrb	w8, [x0, #19]
  438474:	mov	x19, x0
  438478:	mov	x20, x1
  43847c:	mov	x29, sp
  438480:	tbz	w8, #2, 4384ec <feof@plt+0x357ec>
  438484:	ldrh	w8, [x19, #16]
  438488:	cbz	w8, 4384ec <feof@plt+0x357ec>
  43848c:	ldr	x21, [x19, #24]
  438490:	ldr	w2, [x21]
  438494:	add	x1, x21, #0x6
  438498:	mov	x0, x20
  43849c:	bl	402640 <memcpy@plt>
  4384a0:	ldr	w9, [x21]
  4384a4:	ldrh	w8, [x21, #4]
  4384a8:	add	x20, x20, x9
  4384ac:	cbz	w8, 438504 <feof@plt+0x35804>
  4384b0:	ldr	x9, [x19]
  4384b4:	mov	x0, x20
  4384b8:	add	x8, x9, w8, uxth #3
  4384bc:	ldur	x22, [x8, #-8]
  4384c0:	ldr	x1, [x22]
  4384c4:	ldr	w2, [x22, #8]
  4384c8:	bl	402640 <memcpy@plt>
  4384cc:	ldr	w8, [x21]
  4384d0:	ldr	w9, [x22, #8]
  4384d4:	add	x8, x8, #0xd
  4384d8:	and	x8, x8, #0x1fffffff8
  4384dc:	add	x21, x21, x8
  4384e0:	ldr	w2, [x21]
  4384e4:	add	x20, x20, x9
  4384e8:	b	438494 <feof@plt+0x35794>
  4384ec:	ldr	x1, [x19, #24]
  4384f0:	ldr	w2, [x19, #12]
  4384f4:	mov	x0, x20
  4384f8:	bl	402640 <memcpy@plt>
  4384fc:	ldr	w8, [x19, #12]
  438500:	add	x20, x20, x8
  438504:	mov	x0, x20
  438508:	ldp	x20, x19, [sp, #32]
  43850c:	ldp	x22, x21, [sp, #16]
  438510:	ldp	x29, x30, [sp], #48
  438514:	ret
  438518:	stp	x29, x30, [sp, #-80]!
  43851c:	stp	x24, x23, [sp, #32]
  438520:	stp	x22, x21, [sp, #48]
  438524:	stp	x20, x19, [sp, #64]
  438528:	ldr	x8, [x0, #1312]
  43852c:	ldr	x9, [x0]
  438530:	ldr	x24, [x0, #136]
  438534:	mov	x19, x0
  438538:	str	x8, [x0, #1328]
  43853c:	ldr	x9, [x9]
  438540:	str	x25, [sp, #16]
  438544:	mov	x29, sp
  438548:	str	x9, [x24, #16]
  43854c:	ldr	x8, [x0]
  438550:	ldr	x10, [x8, #32]
  438554:	str	x10, [x24, #24]
  438558:	ldr	x11, [x0, #1320]
  43855c:	ldr	x8, [x0, #1328]
  438560:	sub	x10, x10, x9
  438564:	add	x10, x10, #0x3
  438568:	sub	x11, x11, x8
  43856c:	cmp	x10, x11
  438570:	b.ls	4385a8 <feof@plt+0x358a8>  // b.plast
  438574:	ldr	x0, [x19, #1312]
  438578:	sub	x21, x8, x0
  43857c:	add	x8, x21, x10
  438580:	add	x8, x8, x8, lsl #1
  438584:	lsr	x20, x8, #1
  438588:	mov	x1, x20
  43858c:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  438590:	add	x9, x0, x20
  438594:	add	x8, x0, x21
  438598:	str	x0, [x19, #1312]
  43859c:	str	x9, [x19, #1320]
  4385a0:	str	x8, [x19, #1328]
  4385a4:	ldr	x9, [x24, #16]
  4385a8:	ldrb	w9, [x9]
  4385ac:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4385b0:	add	x23, x23, #0x3c4
  4385b4:	mov	w20, wzr
  4385b8:	cmp	w9, #0x28
  4385bc:	b.ne	4386fc <feof@plt+0x359fc>  // b.any
  4385c0:	ldr	x9, [x19, #136]
  4385c4:	mov	w21, #0x204                 	// #516
  4385c8:	ldr	x9, [x9, #16]
  4385cc:	add	x1, x9, #0x1
  4385d0:	b	4385e8 <feof@plt+0x358e8>
  4385d4:	sub	x8, x8, #0x1
  4385d8:	str	x8, [x19, #1328]
  4385dc:	ldurb	w9, [x1, #-1]
  4385e0:	cmp	w9, #0x2c
  4385e4:	b.ne	438708 <feof@plt+0x35a08>  // b.any
  4385e8:	mov	x22, x1
  4385ec:	ldrb	w10, [x1], #1
  4385f0:	mov	x9, x8
  4385f4:	ldrh	w11, [x23, x10, lsl #1]
  4385f8:	strb	w10, [x8], #1
  4385fc:	tbnz	w11, #11, 4385e8 <feof@plt+0x358e8>
  438600:	cmp	w10, #0x2f
  438604:	b.ne	438630 <feof@plt+0x35930>  // b.any
  438608:	ldrb	w10, [x1]
  43860c:	cmp	w10, #0x2a
  438610:	b.ne	438630 <feof@plt+0x35930>  // b.any
  438614:	mov	x0, x19
  438618:	mov	w2, wzr
  43861c:	str	x8, [x19, #1328]
  438620:	bl	438198 <feof@plt+0x35498>
  438624:	ldr	x8, [x19, #1328]
  438628:	mov	x1, x0
  43862c:	b	4385e8 <feof@plt+0x358e8>
  438630:	str	x9, [x19, #1328]
  438634:	ldrb	w8, [x22]
  438638:	ldrh	w10, [x23, x8, lsl #1]
  43863c:	tbnz	w10, #9, 438650 <feof@plt+0x35950>
  438640:	cmp	w8, #0x24
  438644:	b.ne	438718 <feof@plt+0x35a18>  // b.any
  438648:	ldrb	w10, [x19, #1146]
  43864c:	cbz	w10, 438788 <feof@plt+0x35a88>
  438650:	mov	x10, xzr
  438654:	add	x11, x22, x10
  438658:	strb	w8, [x9, x10]
  43865c:	ldrb	w8, [x11, #1]
  438660:	add	x10, x10, #0x1
  438664:	ldrh	w11, [x23, x8, lsl #1]
  438668:	tst	w11, w21
  43866c:	b.ne	438654 <feof@plt+0x35954>  // b.any
  438670:	ldr	x8, [x19, #136]
  438674:	add	x11, x22, x10
  438678:	add	x25, x9, x10
  43867c:	mov	w3, #0x1                   	// #1
  438680:	str	x11, [x8, #16]
  438684:	ldr	x1, [x19, #1328]
  438688:	ldr	x0, [x19, #1088]
  43868c:	sub	x2, x25, x1
  438690:	bl	436a2c <feof@plt+0x33d2c>
  438694:	mov	x2, x0
  438698:	mov	x0, x19
  43869c:	mov	w1, w20
  4386a0:	mov	x3, x2
  4386a4:	str	x25, [x19, #1328]
  4386a8:	bl	4329cc <feof@plt+0x2fccc>
  4386ac:	tbz	w0, #0, 438788 <feof@plt+0x35a88>
  4386b0:	ldr	x8, [x19, #136]
  4386b4:	add	w20, w20, #0x1
  4386b8:	ldr	x1, [x8, #16]
  4386bc:	ldr	x8, [x19, #1328]
  4386c0:	ldrb	w9, [x1], #1
  4386c4:	ldrh	w10, [x23, x9, lsl #1]
  4386c8:	strb	w9, [x8], #1
  4386cc:	tbnz	w10, #11, 4386c0 <feof@plt+0x359c0>
  4386d0:	cmp	w9, #0x2f
  4386d4:	b.ne	4385d4 <feof@plt+0x358d4>  // b.any
  4386d8:	ldrb	w9, [x1]
  4386dc:	cmp	w9, #0x2a
  4386e0:	b.ne	4385d4 <feof@plt+0x358d4>  // b.any
  4386e4:	mov	x0, x19
  4386e8:	mov	w2, wzr
  4386ec:	str	x8, [x19, #1328]
  4386f0:	bl	438198 <feof@plt+0x35498>
  4386f4:	mov	x1, x0
  4386f8:	b	4386bc <feof@plt+0x359bc>
  4386fc:	mov	w25, wzr
  438700:	mov	x22, xzr
  438704:	b	43874c <feof@plt+0x35a4c>
  438708:	sub	x22, x1, #0x1
  43870c:	cmp	w9, #0x29
  438710:	b.eq	438728 <feof@plt+0x35a28>  // b.none
  438714:	b	438788 <feof@plt+0x35a88>
  438718:	cbnz	w20, 438788 <feof@plt+0x35a88>
  43871c:	cmp	w8, #0x29
  438720:	b.ne	438788 <feof@plt+0x35a88>  // b.any
  438724:	mov	w20, wzr
  438728:	ldr	x8, [x19, #136]
  43872c:	mov	w10, w20
  438730:	add	x9, x22, #0x1
  438734:	lsl	x1, x10, #3
  438738:	mov	x0, x19
  43873c:	str	x9, [x8, #16]
  438740:	bl	42dcf0 <feof@plt+0x2aff0>
  438744:	mov	x22, x0
  438748:	mov	w25, #0x4                   	// #4
  43874c:	mov	w1, #0x30                  	// #48
  438750:	mov	x0, x19
  438754:	bl	42dc08 <feof@plt+0x2af08>
  438758:	mov	x2, x0
  43875c:	mov	w1, #0x2                   	// #2
  438760:	mov	x0, x19
  438764:	bl	432b20 <feof@plt+0x2fe20>
  438768:	ldrb	w8, [x0, #19]
  43876c:	mov	x21, x0
  438770:	str	x22, [x0]
  438774:	strh	w20, [x0, #16]
  438778:	and	w8, w8, #0xfffffffb
  43877c:	orr	w8, w8, w25
  438780:	strb	w8, [x0, #19]
  438784:	b	4387b8 <feof@plt+0x35ab8>
  438788:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  43878c:	add	x2, x2, #0x1a1
  438790:	mov	w1, #0x3                   	// #3
  438794:	mov	x0, x19
  438798:	bl	4223e4 <feof@plt+0x1f6e4>
  43879c:	mov	x8, x22
  4387a0:	ldrb	w9, [x8], #1
  4387a4:	ldr	x10, [x19, #136]
  4387a8:	mov	x21, xzr
  4387ac:	cmp	w9, #0x29
  4387b0:	csel	x8, x22, x8, ne  // ne = any
  4387b4:	str	x8, [x10, #16]
  4387b8:	ldr	x1, [x24, #16]
  4387bc:	ldrb	w22, [x19, #1124]
  4387c0:	ldr	x8, [x19, #1328]
  4387c4:	mov	x9, x1
  4387c8:	ldrb	w11, [x1], #1
  4387cc:	mov	x10, x8
  4387d0:	ldrh	w12, [x23, x11, lsl #1]
  4387d4:	strb	w11, [x8], #1
  4387d8:	tbnz	w12, #11, 4387c4 <feof@plt+0x35ac4>
  4387dc:	cmp	w11, #0x2f
  4387e0:	b.ne	438810 <feof@plt+0x35b10>  // b.any
  4387e4:	cbz	w22, 438810 <feof@plt+0x35b10>
  4387e8:	ldrb	w11, [x1]
  4387ec:	cmp	w11, #0x2a
  4387f0:	b.ne	438810 <feof@plt+0x35b10>  // b.any
  4387f4:	mov	x0, x19
  4387f8:	mov	w2, wzr
  4387fc:	str	x8, [x19, #1328]
  438800:	bl	438198 <feof@plt+0x35498>
  438804:	ldr	x8, [x19, #1328]
  438808:	mov	x1, x0
  43880c:	b	4387c4 <feof@plt+0x35ac4>
  438810:	ldr	x8, [x19]
  438814:	str	x10, [x19, #1328]
  438818:	mov	x0, x19
  43881c:	mov	x1, x21
  438820:	str	x9, [x8]
  438824:	ldrb	w8, [x19, #24]
  438828:	mov	w2, wzr
  43882c:	add	w8, w8, #0x1
  438830:	strb	w8, [x19, #24]
  438834:	bl	4372e4 <feof@plt+0x345e4>
  438838:	ldrb	w8, [x19, #24]
  43883c:	mov	x0, x19
  438840:	mov	w1, w20
  438844:	sub	w8, w8, #0x1
  438848:	strb	w8, [x19, #24]
  43884c:	bl	432adc <feof@plt+0x2fddc>
  438850:	cbz	x21, 438890 <feof@plt+0x35b90>
  438854:	ldr	x8, [x19, #1312]
  438858:	ldr	x10, [x19, #1328]
  43885c:	mov	x9, x10
  438860:	cmp	x10, x8
  438864:	b.ls	43887c <feof@plt+0x35b7c>  // b.plast
  438868:	mov	x10, x9
  43886c:	ldrb	w11, [x10, #-1]!
  438870:	ldrh	w11, [x23, x11, lsl #1]
  438874:	tst	w11, #0xc00
  438878:	b.ne	43885c <feof@plt+0x35b5c>  // b.any
  43887c:	mov	x0, x19
  438880:	mov	x1, x21
  438884:	mov	w2, wzr
  438888:	str	x9, [x19, #1328]
  43888c:	bl	438300 <feof@plt+0x35600>
  438890:	mov	x0, x21
  438894:	ldp	x20, x19, [sp, #64]
  438898:	ldp	x22, x21, [sp, #48]
  43889c:	ldp	x24, x23, [sp, #32]
  4388a0:	ldr	x25, [sp, #16]
  4388a4:	ldp	x29, x30, [sp], #80
  4388a8:	ret
  4388ac:	stp	x29, x30, [sp, #-96]!
  4388b0:	stp	x26, x25, [sp, #32]
  4388b4:	stp	x24, x23, [sp, #48]
  4388b8:	stp	x22, x21, [sp, #64]
  4388bc:	stp	x20, x19, [sp, #80]
  4388c0:	ldr	w8, [x0, #12]
  4388c4:	ldr	w9, [x1, #12]
  4388c8:	mov	x19, x0
  4388cc:	str	x27, [sp, #16]
  4388d0:	mov	x29, sp
  4388d4:	add	w0, w9, w8
  4388d8:	mov	x21, x1
  4388dc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4388e0:	ldr	w8, [x19, #12]
  4388e4:	ldrh	w9, [x19, #16]
  4388e8:	ldr	x22, [x19, #24]
  4388ec:	mov	x19, x0
  4388f0:	add	x20, x0, x8
  4388f4:	cbz	w9, 438b04 <feof@plt+0x35e04>
  4388f8:	ldr	x21, [x21, #24]
  4388fc:	mov	x25, x22
  438900:	ldrh	w8, [x25, #4]!
  438904:	ldrh	w9, [x21, #4]
  438908:	cmp	w8, w9
  43890c:	b.ne	438cb4 <feof@plt+0x35fb4>  // b.any
  438910:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  438914:	mov	w26, wzr
  438918:	mov	w27, wzr
  43891c:	add	x23, x23, #0x3c4
  438920:	mov	w24, #0x20                  	// #32
  438924:	ldr	w9, [x22]
  438928:	cbz	w9, 4389e0 <feof@plt+0x35ce0>
  43892c:	add	x10, x22, #0x6
  438930:	mov	x8, x19
  438934:	b	438954 <feof@plt+0x35c54>
  438938:	mov	w12, w27
  43893c:	add	x10, x10, #0x1
  438940:	sub	x9, x9, #0x1
  438944:	mov	w27, w12
  438948:	strb	w11, [x8]
  43894c:	add	x8, x8, #0x1
  438950:	cbz	x9, 4389e4 <feof@plt+0x35ce4>
  438954:	ldrb	w11, [x10]
  438958:	tst	w27, #0xff
  43895c:	b.ne	43899c <feof@plt+0x35c9c>  // b.any
  438960:	ldrh	w12, [x23, x11, lsl #1]
  438964:	and	w12, w12, #0xc00
  438968:	cbz	w12, 43899c <feof@plt+0x35c9c>
  43896c:	add	x11, x10, x9
  438970:	sub	x13, x9, #0x1
  438974:	mov	x9, x13
  438978:	cbz	x13, 4389c4 <feof@plt+0x35cc4>
  43897c:	ldrb	w12, [x10, #1]
  438980:	ldrh	w13, [x23, x12, lsl #1]
  438984:	add	x12, x10, #0x1
  438988:	mov	x10, x12
  43898c:	and	w14, w13, #0xc00
  438990:	sub	x13, x9, #0x1
  438994:	cbnz	w14, 438974 <feof@plt+0x35c74>
  438998:	b	4389c8 <feof@plt+0x35cc8>
  43899c:	cmp	w11, #0x27
  4389a0:	b.eq	4389ac <feof@plt+0x35cac>  // b.none
  4389a4:	cmp	w11, #0x22
  4389a8:	b.ne	438938 <feof@plt+0x35c38>  // b.any
  4389ac:	tst	w27, #0xff
  4389b0:	mov	w12, w11
  4389b4:	b.eq	43893c <feof@plt+0x35c3c>  // b.none
  4389b8:	cmp	w11, w27, uxtb
  4389bc:	csel	w12, wzr, w27, eq  // eq = none
  4389c0:	b	43893c <feof@plt+0x35c3c>
  4389c4:	mov	x12, x11
  4389c8:	mov	w27, wzr
  4389cc:	strb	w24, [x8]
  4389d0:	mov	x10, x12
  4389d4:	add	x8, x8, #0x1
  4389d8:	cbnz	x9, 438954 <feof@plt+0x35c54>
  4389dc:	b	4389e4 <feof@plt+0x35ce4>
  4389e0:	mov	x8, x19
  4389e4:	ldr	w9, [x21]
  4389e8:	sub	x2, x8, x19
  4389ec:	cbz	w9, 438aa4 <feof@plt+0x35da4>
  4389f0:	add	x10, x21, #0x6
  4389f4:	mov	x8, x20
  4389f8:	b	438a18 <feof@plt+0x35d18>
  4389fc:	mov	w12, w26
  438a00:	add	x10, x10, #0x1
  438a04:	sub	x9, x9, #0x1
  438a08:	mov	w26, w12
  438a0c:	strb	w11, [x8]
  438a10:	add	x8, x8, #0x1
  438a14:	cbz	x9, 438aa8 <feof@plt+0x35da8>
  438a18:	ldrb	w11, [x10]
  438a1c:	tst	w26, #0xff
  438a20:	b.ne	438a60 <feof@plt+0x35d60>  // b.any
  438a24:	ldrh	w12, [x23, x11, lsl #1]
  438a28:	and	w12, w12, #0xc00
  438a2c:	cbz	w12, 438a60 <feof@plt+0x35d60>
  438a30:	add	x11, x10, x9
  438a34:	sub	x13, x9, #0x1
  438a38:	mov	x9, x13
  438a3c:	cbz	x13, 438a88 <feof@plt+0x35d88>
  438a40:	ldrb	w12, [x10, #1]
  438a44:	ldrh	w13, [x23, x12, lsl #1]
  438a48:	add	x12, x10, #0x1
  438a4c:	mov	x10, x12
  438a50:	and	w14, w13, #0xc00
  438a54:	sub	x13, x9, #0x1
  438a58:	cbnz	w14, 438a38 <feof@plt+0x35d38>
  438a5c:	b	438a8c <feof@plt+0x35d8c>
  438a60:	cmp	w11, #0x27
  438a64:	b.eq	438a70 <feof@plt+0x35d70>  // b.none
  438a68:	cmp	w11, #0x22
  438a6c:	b.ne	4389fc <feof@plt+0x35cfc>  // b.any
  438a70:	tst	w26, #0xff
  438a74:	mov	w12, w11
  438a78:	b.eq	438a00 <feof@plt+0x35d00>  // b.none
  438a7c:	cmp	w11, w26, uxtb
  438a80:	csel	w12, wzr, w26, eq  // eq = none
  438a84:	b	438a00 <feof@plt+0x35d00>
  438a88:	mov	x12, x11
  438a8c:	mov	w26, wzr
  438a90:	strb	w24, [x8]
  438a94:	mov	x10, x12
  438a98:	add	x8, x8, #0x1
  438a9c:	cbnz	x9, 438a18 <feof@plt+0x35d18>
  438aa0:	b	438aa8 <feof@plt+0x35da8>
  438aa4:	mov	x8, x20
  438aa8:	sub	x8, x8, x20
  438aac:	cmp	x2, x8
  438ab0:	b.ne	438cb4 <feof@plt+0x35fb4>  // b.any
  438ab4:	mov	x0, x19
  438ab8:	mov	x1, x20
  438abc:	bl	402cb0 <bcmp@plt>
  438ac0:	cbnz	w0, 438cb4 <feof@plt+0x35fb4>
  438ac4:	ldrh	w8, [x25]
  438ac8:	cbz	w8, 438ce0 <feof@plt+0x35fe0>
  438acc:	ldr	w8, [x22]
  438ad0:	ldr	w9, [x21]
  438ad4:	add	x8, x8, #0xd
  438ad8:	add	x9, x9, #0xd
  438adc:	and	x8, x8, #0x1fffffff8
  438ae0:	and	x9, x9, #0x1fffffff8
  438ae4:	add	x22, x22, x8
  438ae8:	add	x21, x21, x9
  438aec:	mov	x25, x22
  438af0:	ldrh	w8, [x25, #4]!
  438af4:	ldrh	w9, [x21, #4]
  438af8:	cmp	w8, w9
  438afc:	b.eq	438924 <feof@plt+0x35c24>  // b.none
  438b00:	b	438cb4 <feof@plt+0x35fb4>
  438b04:	mov	x9, x19
  438b08:	cbz	w8, 438bc4 <feof@plt+0x35ec4>
  438b0c:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  438b10:	mov	w12, wzr
  438b14:	add	x10, x10, #0x3c4
  438b18:	mov	w11, #0x20                  	// #32
  438b1c:	mov	x9, x19
  438b20:	b	438b40 <feof@plt+0x35e40>
  438b24:	mov	w14, w12
  438b28:	add	x22, x22, #0x1
  438b2c:	sub	x8, x8, #0x1
  438b30:	strb	w13, [x9]
  438b34:	add	x9, x9, #0x1
  438b38:	mov	w12, w14
  438b3c:	cbz	x8, 438bc4 <feof@plt+0x35ec4>
  438b40:	ldrb	w13, [x22]
  438b44:	tst	w12, #0xff
  438b48:	b.ne	438b88 <feof@plt+0x35e88>  // b.any
  438b4c:	ldrh	w14, [x10, x13, lsl #1]
  438b50:	and	w14, w14, #0xc00
  438b54:	cbz	w14, 438b88 <feof@plt+0x35e88>
  438b58:	add	x12, x22, x8
  438b5c:	sub	x14, x8, #0x1
  438b60:	mov	x8, x14
  438b64:	cbz	x14, 438bb0 <feof@plt+0x35eb0>
  438b68:	ldrb	w13, [x22, #1]
  438b6c:	ldrh	w14, [x10, x13, lsl #1]
  438b70:	add	x13, x22, #0x1
  438b74:	mov	x22, x13
  438b78:	and	w15, w14, #0xc00
  438b7c:	sub	x14, x8, #0x1
  438b80:	cbnz	w15, 438b60 <feof@plt+0x35e60>
  438b84:	b	438bb4 <feof@plt+0x35eb4>
  438b88:	cmp	w13, #0x27
  438b8c:	b.eq	438b98 <feof@plt+0x35e98>  // b.none
  438b90:	cmp	w13, #0x22
  438b94:	b.ne	438b24 <feof@plt+0x35e24>  // b.any
  438b98:	tst	w12, #0xff
  438b9c:	mov	w14, w13
  438ba0:	b.eq	438b28 <feof@plt+0x35e28>  // b.none
  438ba4:	cmp	w13, w12, uxtb
  438ba8:	csel	w14, wzr, w12, eq  // eq = none
  438bac:	b	438b28 <feof@plt+0x35e28>
  438bb0:	mov	x13, x12
  438bb4:	mov	w14, wzr
  438bb8:	strb	w11, [x9]
  438bbc:	mov	x22, x13
  438bc0:	b	438b34 <feof@plt+0x35e34>
  438bc4:	ldr	w8, [x21, #12]
  438bc8:	sub	x2, x9, x19
  438bcc:	mov	x9, x20
  438bd0:	cbz	w8, 438c90 <feof@plt+0x35f90>
  438bd4:	ldr	x12, [x21, #24]
  438bd8:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  438bdc:	mov	w13, wzr
  438be0:	add	x10, x10, #0x3c4
  438be4:	mov	w11, #0x20                  	// #32
  438be8:	mov	x9, x20
  438bec:	b	438c0c <feof@plt+0x35f0c>
  438bf0:	mov	w15, w13
  438bf4:	add	x12, x12, #0x1
  438bf8:	sub	x8, x8, #0x1
  438bfc:	strb	w14, [x9]
  438c00:	add	x9, x9, #0x1
  438c04:	mov	w13, w15
  438c08:	cbz	x8, 438c90 <feof@plt+0x35f90>
  438c0c:	ldrb	w14, [x12]
  438c10:	tst	w13, #0xff
  438c14:	b.ne	438c54 <feof@plt+0x35f54>  // b.any
  438c18:	ldrh	w15, [x10, x14, lsl #1]
  438c1c:	and	w15, w15, #0xc00
  438c20:	cbz	w15, 438c54 <feof@plt+0x35f54>
  438c24:	add	x13, x12, x8
  438c28:	sub	x15, x8, #0x1
  438c2c:	mov	x8, x15
  438c30:	cbz	x15, 438c7c <feof@plt+0x35f7c>
  438c34:	ldrb	w14, [x12, #1]
  438c38:	ldrh	w15, [x10, x14, lsl #1]
  438c3c:	add	x14, x12, #0x1
  438c40:	mov	x12, x14
  438c44:	and	w16, w15, #0xc00
  438c48:	sub	x15, x8, #0x1
  438c4c:	cbnz	w16, 438c2c <feof@plt+0x35f2c>
  438c50:	b	438c80 <feof@plt+0x35f80>
  438c54:	cmp	w14, #0x27
  438c58:	b.eq	438c64 <feof@plt+0x35f64>  // b.none
  438c5c:	cmp	w14, #0x22
  438c60:	b.ne	438bf0 <feof@plt+0x35ef0>  // b.any
  438c64:	tst	w13, #0xff
  438c68:	mov	w15, w14
  438c6c:	b.eq	438bf4 <feof@plt+0x35ef4>  // b.none
  438c70:	cmp	w14, w13, uxtb
  438c74:	csel	w15, wzr, w13, eq  // eq = none
  438c78:	b	438bf4 <feof@plt+0x35ef4>
  438c7c:	mov	x14, x13
  438c80:	mov	w15, wzr
  438c84:	strb	w11, [x9]
  438c88:	mov	x12, x14
  438c8c:	b	438c00 <feof@plt+0x35f00>
  438c90:	sub	x8, x9, x20
  438c94:	cmp	x2, x8
  438c98:	b.ne	438cb4 <feof@plt+0x35fb4>  // b.any
  438c9c:	mov	x0, x19
  438ca0:	mov	x1, x20
  438ca4:	bl	402cb0 <bcmp@plt>
  438ca8:	cmp	w0, #0x0
  438cac:	cset	w20, ne  // ne = any
  438cb0:	b	438cb8 <feof@plt+0x35fb8>
  438cb4:	mov	w20, #0x1                   	// #1
  438cb8:	mov	x0, x19
  438cbc:	bl	402770 <free@plt>
  438cc0:	mov	w0, w20
  438cc4:	ldp	x20, x19, [sp, #80]
  438cc8:	ldp	x22, x21, [sp, #64]
  438ccc:	ldp	x24, x23, [sp, #48]
  438cd0:	ldp	x26, x25, [sp, #32]
  438cd4:	ldr	x27, [sp, #16]
  438cd8:	ldp	x29, x30, [sp], #96
  438cdc:	ret
  438ce0:	mov	w20, wzr
  438ce4:	b	438cb8 <feof@plt+0x35fb8>
  438ce8:	sxtw	x8, w1
  438cec:	sbfiz	x9, x1, #4, #32
  438cf0:	adrp	x10, 464000 <_obstack_memory_used@@Base+0xedd8>
  438cf4:	add	x10, x10, #0x202
  438cf8:	sub	x8, x9, x8
  438cfc:	add	x8, x10, x8
  438d00:	ldrb	w9, [x8]
  438d04:	ldrb	w11, [x8, #1]
  438d08:	ldrb	w12, [x8, #2]
  438d0c:	add	x10, x0, #0x48d
  438d10:	strb	w9, [x0, #1152]
  438d14:	ldrb	w9, [x8, #3]
  438d18:	strb	w11, [x0, #1120]
  438d1c:	ldrb	w11, [x8, #4]
  438d20:	strb	w12, [x0, #1127]
  438d24:	ldrb	w12, [x8, #5]
  438d28:	strb	w9, [x0, #1147]
  438d2c:	ldrb	w9, [x8, #6]
  438d30:	strb	w11, [x0, #1164]
  438d34:	ldrb	w11, [x8, #7]
  438d38:	strb	w12, [x0, #1153]
  438d3c:	ldrb	w12, [x8, #8]
  438d40:	strb	w9, [x0, #1126]
  438d44:	ldrb	w9, [x8, #9]
  438d48:	strb	w11, [x0, #1128]
  438d4c:	ldrh	w11, [x8, #10]
  438d50:	strb	w12, [x0, #1130]
  438d54:	ldrb	w12, [x8, #12]
  438d58:	strb	w9, [x0, #1161]
  438d5c:	ldrb	w9, [x8, #13]
  438d60:	ldrb	w8, [x8, #14]
  438d64:	str	w1, [x0, #1116]
  438d68:	strh	w11, [x10]
  438d6c:	strb	w12, [x0, #1125]
  438d70:	strb	w9, [x0, #1129]
  438d74:	strb	w8, [x0, #1167]
  438d78:	ret
  438d7c:	stp	x29, x30, [sp, #-64]!
  438d80:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  438d84:	ldrb	w9, [x8, #2664]
  438d88:	stp	x22, x21, [sp, #32]
  438d8c:	stp	x20, x19, [sp, #48]
  438d90:	mov	x21, x2
  438d94:	mov	x19, x1
  438d98:	mov	w22, w0
  438d9c:	stp	x24, x23, [sp, #16]
  438da0:	mov	x29, sp
  438da4:	tbnz	w9, #0, 438e08 <feof@plt+0x36108>
  438da8:	mov	w9, #0x1                   	// #1
  438dac:	strb	w9, [x8, #2664]
  438db0:	bl	428c84 <feof@plt+0x25f84>
  438db4:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  438db8:	adrp	x0, 461000 <_obstack_memory_used@@Base+0xbdd8>
  438dbc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  438dc0:	add	x8, x8, #0x989
  438dc4:	mov	w9, #0x5d                  	// #93
  438dc8:	mov	w10, #0x7c                  	// #124
  438dcc:	mov	w11, #0x5b5e                	// #23390
  438dd0:	mov	w12, #0x7d                  	// #125
  438dd4:	mov	w13, #0x5c                  	// #92
  438dd8:	mov	w14, #0x237b                	// #9083
  438ddc:	mov	w15, #0x7e                  	// #126
  438de0:	add	x0, x0, #0x88f
  438de4:	add	x1, x1, #0x74e
  438de8:	strb	w9, [x8, #8]
  438dec:	strb	w10, [x8]
  438df0:	strh	w11, [x8, #6]
  438df4:	strb	w12, [x8, #29]
  438df8:	strb	w13, [x8, #14]
  438dfc:	sturh	w14, [x8, #27]
  438e00:	strb	w15, [x8, #12]
  438e04:	bl	4026a0 <bindtextdomain@plt>
  438e08:	mov	w0, #0x1                   	// #1
  438e0c:	mov	w1, #0x588                 	// #1416
  438e10:	mov	w24, #0x1                   	// #1
  438e14:	bl	455390 <_obstack_memory_used@@Base+0x168>
  438e18:	sxtw	x8, w22
  438e1c:	sbfiz	x9, x22, #4, #32
  438e20:	adrp	x10, 464000 <_obstack_memory_used@@Base+0xedd8>
  438e24:	add	x10, x10, #0x202
  438e28:	sub	x8, x9, x8
  438e2c:	add	x8, x10, x8
  438e30:	ldrb	w10, [x8, #1]
  438e34:	ldrb	w11, [x8, #2]
  438e38:	movi	v0.2d, #0x0
  438e3c:	mov	x23, x0
  438e40:	str	q0, [x23, #80]!
  438e44:	ldrb	w9, [x8]
  438e48:	strb	w10, [x0, #1120]
  438e4c:	ldrb	w10, [x8, #4]
  438e50:	strb	w11, [x0, #1127]
  438e54:	ldrb	w11, [x8, #5]
  438e58:	strb	w9, [x0, #1152]
  438e5c:	ldrb	w9, [x8, #3]
  438e60:	strb	w10, [x0, #1164]
  438e64:	ldrb	w10, [x8, #7]
  438e68:	strb	w11, [x0, #1153]
  438e6c:	ldrb	w11, [x8, #8]
  438e70:	strb	w9, [x0, #1147]
  438e74:	ldrb	w9, [x8, #6]
  438e78:	strb	w10, [x0, #1128]
  438e7c:	ldrb	w10, [x8, #9]
  438e80:	strb	w11, [x0, #1130]
  438e84:	ldrh	w11, [x8, #10]
  438e88:	strb	w9, [x0, #1126]
  438e8c:	add	x9, x0, #0x48d
  438e90:	strb	w10, [x0, #1161]
  438e94:	ldrb	w10, [x8, #12]
  438e98:	str	xzr, [x0, #128]
  438e9c:	str	w22, [x0, #1116]
  438ea0:	stp	q0, q0, [x0, #96]
  438ea4:	strh	w11, [x9]
  438ea8:	ldrb	w11, [x8, #13]
  438eac:	ldrb	w8, [x8, #14]
  438eb0:	add	x9, x0, #0x463
  438eb4:	strb	w10, [x0, #1125]
  438eb8:	mov	w10, #0x101                 	// #257
  438ebc:	strb	w11, [x0, #1129]
  438ec0:	mov	w11, #0x8                   	// #8
  438ec4:	strb	w8, [x0, #1167]
  438ec8:	strh	w10, [x9]
  438ecc:	mov	w9, #0xff                  	// #255
  438ed0:	mov	w8, #0x102                 	// #258
  438ed4:	str	w11, [x0, #1112]
  438ed8:	add	x11, x0, #0x473
  438edc:	strh	w9, [x0, #1198]
  438ee0:	mov	w9, #0x100                 	// #256
  438ee4:	strh	w8, [x0, #1136]
  438ee8:	strb	w24, [x0, #1132]
  438eec:	strh	w9, [x11]
  438ef0:	add	x11, x0, #0x485
  438ef4:	strb	w24, [x0, #1146]
  438ef8:	strb	w24, [x0, #1148]
  438efc:	strh	w10, [x0, #1142]
  438f00:	strb	wzr, [x0, #1144]
  438f04:	strh	w8, [x11]
  438f08:	mov	w11, #0x20                  	// #32
  438f0c:	dup	v0.2d, x11
  438f10:	adrp	x11, 464000 <_obstack_memory_used@@Base+0xedd8>
  438f14:	ldr	q1, [x11, #464]
  438f18:	add	x8, x0, #0x4b8
  438f1c:	mov	x20, x0
  438f20:	str	w24, [x0, #1192]
  438f24:	strh	w10, [x0, #1162]
  438f28:	strb	w24, [x0, #1245]
  438f2c:	strb	wzr, [x0, #1134]
  438f30:	stp	q1, q0, [x8]
  438f34:	strh	w9, [x0, #1240]
  438f38:	strb	w24, [x0, #1242]
  438f3c:	bl	41c8d0 <feof@plt+0x19bd0>
  438f40:	str	x0, [x20, #1168]
  438f44:	str	xzr, [x20, #1176]
  438f48:	bl	41c8d0 <feof@plt+0x19bd0>
  438f4c:	ldrb	w9, [x20, #1123]
  438f50:	adrp	x8, 455000 <_obstack_begin_1@@Base+0xa4>
  438f54:	add	x8, x8, #0xce0
  438f58:	str	x8, [x20, #224]
  438f5c:	mov	w8, #0x53                  	// #83
  438f60:	str	x21, [x20, #40]
  438f64:	strb	w8, [x20, #668]
  438f68:	mov	w8, #0x16                  	// #22
  438f6c:	cmp	w9, #0x0
  438f70:	add	x21, x20, #0x1c8
  438f74:	str	x0, [x20, #1184]
  438f78:	strb	w8, [x20, #692]
  438f7c:	cset	w8, eq  // eq = none
  438f80:	mov	w1, #0xfa                  	// #250
  438f84:	mov	x0, x21
  438f88:	str	xzr, [x20, #672]
  438f8c:	strh	wzr, [x20, #694]
  438f90:	strb	w8, [x20, #21]
  438f94:	bl	4296e4 <feof@plt+0x269e4>
  438f98:	ldr	x8, [x20, #472]
  438f9c:	mov	x0, x20
  438fa0:	mov	x1, xzr
  438fa4:	str	x21, [x20, #488]
  438fa8:	str	x23, [x20, #136]
  438fac:	str	xzr, [x20, #120]
  438fb0:	str	xzr, [x20, #88]
  438fb4:	str	x8, [x20, #448]
  438fb8:	str	xzr, [x23]
  438fbc:	bl	42d97c <feof@plt+0x2ac7c>
  438fc0:	str	x0, [x20, #56]
  438fc4:	mov	x0, x20
  438fc8:	mov	x1, xzr
  438fcc:	bl	42d97c <feof@plt+0x2ac7c>
  438fd0:	str	x0, [x20, #64]
  438fd4:	mov	x8, #0xfffffffffffffffe    	// #-2
  438fd8:	mov	x0, x20
  438fdc:	str	xzr, [x20, #1400]
  438fe0:	str	wzr, [x20, #1408]
  438fe4:	str	x8, [x20, #656]
  438fe8:	bl	425b48 <feof@plt+0x22e48>
  438fec:	adrp	x3, 455000 <_obstack_begin_1@@Base+0xa4>
  438ff0:	adrp	x4, 402000 <_Unwind_Backtrace@plt-0x5e0>
  438ff4:	add	x0, x20, #0x328
  438ff8:	add	x3, x3, #0x35c
  438ffc:	add	x4, x4, #0x770
  439000:	mov	x1, xzr
  439004:	mov	x2, xzr
  439008:	bl	454eb0 <_obstack_begin@@Base>
  43900c:	mov	x0, x20
  439010:	bl	427680 <feof@plt+0x24980>
  439014:	mov	x0, x20
  439018:	mov	x1, x19
  43901c:	bl	4289c0 <feof@plt+0x25cc0>
  439020:	mov	x0, x20
  439024:	ldp	x20, x19, [sp, #48]
  439028:	ldp	x22, x21, [sp, #32]
  43902c:	ldp	x24, x23, [sp, #16]
  439030:	ldp	x29, x30, [sp], #64
  439034:	ret
  439038:	str	x1, [x0, #40]
  43903c:	ret
  439040:	stp	x29, x30, [sp, #-48]!
  439044:	stp	x22, x21, [sp, #16]
  439048:	stp	x20, x19, [sp, #32]
  43904c:	mov	x19, x0
  439050:	ldr	x0, [x0, #1096]
  439054:	mov	x29, sp
  439058:	bl	402770 <free@plt>
  43905c:	ldr	x8, [x19]
  439060:	cbz	x8, 439074 <feof@plt+0x36374>
  439064:	mov	x0, x19
  439068:	bl	4206a4 <feof@plt+0x1d9a4>
  43906c:	ldr	x8, [x19]
  439070:	cbnz	x8, 439064 <feof@plt+0x36364>
  439074:	ldr	x0, [x19, #1312]
  439078:	bl	402770 <free@plt>
  43907c:	ldr	x0, [x19, #504]
  439080:	cbz	x0, 439090 <feof@plt+0x36390>
  439084:	bl	402770 <free@plt>
  439088:	str	xzr, [x19, #504]
  43908c:	str	wzr, [x19, #512]
  439090:	ldr	x0, [x19, #712]
  439094:	cbz	x0, 43909c <feof@plt+0x3639c>
  439098:	bl	435e94 <feof@plt+0x33194>
  43909c:	add	x0, x19, #0x328
  4390a0:	mov	x1, xzr
  4390a4:	bl	455194 <_obstack_free@@Base>
  4390a8:	mov	x0, x19
  4390ac:	bl	428bd4 <feof@plt+0x25ed4>
  4390b0:	mov	x0, x19
  4390b4:	bl	4277e0 <feof@plt+0x24ae0>
  4390b8:	mov	x0, x19
  4390bc:	bl	41a944 <feof@plt+0x17c44>
  4390c0:	ldr	x0, [x19, #56]
  4390c4:	bl	42dbdc <feof@plt+0x2aedc>
  4390c8:	ldr	x0, [x19, #64]
  4390cc:	bl	42dbdc <feof@plt+0x2aedc>
  4390d0:	ldr	x0, [x19, #72]
  4390d4:	bl	42dbdc <feof@plt+0x2aedc>
  4390d8:	add	x21, x19, #0x1c8
  4390dc:	mov	x20, x21
  4390e0:	b	4390ec <feof@plt+0x363ec>
  4390e4:	mov	x20, x22
  4390e8:	cbz	x22, 43910c <feof@plt+0x3640c>
  4390ec:	ldr	x0, [x20, #16]
  4390f0:	ldr	x22, [x20]
  4390f4:	bl	402770 <free@plt>
  4390f8:	cmp	x20, x21
  4390fc:	b.eq	4390e4 <feof@plt+0x363e4>  // b.none
  439100:	mov	x0, x20
  439104:	bl	402770 <free@plt>
  439108:	b	4390e4 <feof@plt+0x363e4>
  43910c:	ldr	x0, [x19, #80]
  439110:	cbz	x0, 439124 <feof@plt+0x36424>
  439114:	ldr	x20, [x0]
  439118:	bl	402770 <free@plt>
  43911c:	mov	x0, x20
  439120:	cbnz	x20, 439114 <feof@plt+0x36414>
  439124:	ldr	x0, [x19, #1384]
  439128:	cbz	x0, 43917c <feof@plt+0x3647c>
  43912c:	ldr	w8, [x19, #1392]
  439130:	cmp	w8, #0x1
  439134:	b.lt	439178 <feof@plt+0x36478>  // b.tstop
  439138:	mov	x20, xzr
  43913c:	mov	x21, xzr
  439140:	ldr	x0, [x0, x20]
  439144:	bl	402770 <free@plt>
  439148:	ldrsw	x8, [x19, #1392]
  43914c:	ldr	x0, [x19, #1384]
  439150:	add	x21, x21, #0x1
  439154:	add	x20, x20, #0x10
  439158:	cmp	x21, x8
  43915c:	b.lt	439140 <feof@plt+0x36440>  // b.tstop
  439160:	b	439178 <feof@plt+0x36478>
  439164:	ldr	x8, [x20]
  439168:	str	x8, [x19, #1400]
  43916c:	ldr	x0, [x20, #8]
  439170:	bl	402770 <free@plt>
  439174:	mov	x0, x20
  439178:	bl	402770 <free@plt>
  43917c:	ldr	x20, [x19, #1400]
  439180:	cbnz	x20, 439164 <feof@plt+0x36464>
  439184:	mov	x0, x19
  439188:	ldp	x20, x19, [sp, #32]
  43918c:	ldp	x22, x21, [sp, #16]
  439190:	ldp	x29, x30, [sp], #48
  439194:	b	402770 <free@plt>
  439198:	sub	w8, w0, #0x1
  43919c:	cmp	w8, #0x21
  4391a0:	mov	x0, xzr
  4391a4:	b.hi	439240 <feof@plt+0x36540>  // b.pmore
  4391a8:	adrp	x9, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391ac:	add	x9, x9, #0x1e0
  4391b0:	adr	x10, 4391c8 <feof@plt+0x364c8>
  4391b4:	ldrb	w11, [x9, x8]
  4391b8:	add	x10, x10, x11, lsl #2
  4391bc:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391c0:	add	x8, x8, #0x350
  4391c4:	br	x10
  4391c8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391cc:	add	x8, x8, #0x3a0
  4391d0:	b	43923c <feof@plt+0x3653c>
  4391d4:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391d8:	add	x8, x8, #0x370
  4391dc:	b	43923c <feof@plt+0x3653c>
  4391e0:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391e4:	add	x8, x8, #0x380
  4391e8:	b	43923c <feof@plt+0x3653c>
  4391ec:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391f0:	add	x8, x8, #0x3e0
  4391f4:	b	43923c <feof@plt+0x3653c>
  4391f8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4391fc:	add	x8, x8, #0x390
  439200:	b	43923c <feof@plt+0x3653c>
  439204:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  439208:	add	x8, x8, #0x3c0
  43920c:	b	43923c <feof@plt+0x3653c>
  439210:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  439214:	add	x8, x8, #0x3b0
  439218:	b	43923c <feof@plt+0x3653c>
  43921c:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  439220:	add	x8, x8, #0x360
  439224:	b	43923c <feof@plt+0x3653c>
  439228:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  43922c:	add	x8, x8, #0x3d0
  439230:	b	43923c <feof@plt+0x3653c>
  439234:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  439238:	add	x8, x8, #0x3f0
  43923c:	ldr	x0, [x8]
  439240:	ret
  439244:	stp	x29, x30, [sp, #-48]!
  439248:	stp	x22, x21, [sp, #16]
  43924c:	stp	x20, x19, [sp, #32]
  439250:	ldrb	w8, [x0, #1160]
  439254:	mov	x19, x0
  439258:	mov	x29, sp
  43925c:	cbz	w8, 439268 <feof@plt+0x36568>
  439260:	mov	w8, #0xa                   	// #10
  439264:	b	439284 <feof@plt+0x36584>
  439268:	ldrb	w8, [x19, #1243]
  43926c:	cbz	w8, 439278 <feof@plt+0x36578>
  439270:	ldrb	w8, [x19, #1153]
  439274:	cbz	w8, 439280 <feof@plt+0x36580>
  439278:	mov	w8, #0xb                   	// #11
  43927c:	b	439284 <feof@plt+0x36584>
  439280:	mov	w8, #0xc                   	// #12
  439284:	adrp	x20, 464000 <_obstack_memory_used@@Base+0xedd8>
  439288:	add	x20, x20, #0x400
  43928c:	add	x21, x20, x8, lsl #4
  439290:	mov	w22, #0x23                  	// #35
  439294:	b	4392ac <feof@plt+0x365ac>
  439298:	ldrh	w8, [x20, #10]
  43929c:	str	w8, [x0, #24]
  4392a0:	add	x20, x20, #0x10
  4392a4:	cmp	x20, x21
  4392a8:	b.cs	4392fc <feof@plt+0x365fc>  // b.hs, b.nlast
  4392ac:	ldrh	w8, [x20, #10]
  4392b0:	cmp	w8, #0xa
  4392b4:	b.ne	4392cc <feof@plt+0x365cc>  // b.any
  4392b8:	ldr	w8, [x19, #1116]
  4392bc:	cmp	w8, #0x15
  4392c0:	b.eq	4392a0 <feof@plt+0x365a0>  // b.none
  4392c4:	ldr	x8, [x19, #1040]
  4392c8:	cbz	x8, 4392a0 <feof@plt+0x365a0>
  4392cc:	ldr	x1, [x20]
  4392d0:	ldrh	w2, [x20, #8]
  4392d4:	mov	x0, x19
  4392d8:	bl	428bc4 <feof@plt+0x25ec4>
  4392dc:	ldrh	w8, [x0, #18]
  4392e0:	orr	w9, w8, #0x3
  4392e4:	strh	w9, [x0, #18]
  4392e8:	ldrb	w9, [x20, #12]
  4392ec:	cbz	w9, 439298 <feof@plt+0x36598>
  4392f0:	orr	w8, w8, w22
  4392f4:	strh	w8, [x0, #18]
  4392f8:	b	439298 <feof@plt+0x36598>
  4392fc:	ldp	x20, x19, [sp, #32]
  439300:	ldp	x22, x21, [sp, #16]
  439304:	ldp	x29, x30, [sp], #48
  439308:	ret
  43930c:	stp	x29, x30, [sp, #-64]!
  439310:	stp	x22, x21, [sp, #32]
  439314:	stp	x20, x19, [sp, #48]
  439318:	ldrb	w8, [x0, #1160]
  43931c:	mov	x19, x0
  439320:	mov	w20, w1
  439324:	str	x23, [sp, #16]
  439328:	mov	x29, sp
  43932c:	cbz	w8, 439338 <feof@plt+0x36638>
  439330:	mov	w8, #0xa                   	// #10
  439334:	b	439354 <feof@plt+0x36654>
  439338:	ldrb	w8, [x19, #1243]
  43933c:	cbz	w8, 439348 <feof@plt+0x36648>
  439340:	ldrb	w8, [x19, #1153]
  439344:	cbz	w8, 439350 <feof@plt+0x36650>
  439348:	mov	w8, #0xb                   	// #11
  43934c:	b	439354 <feof@plt+0x36654>
  439350:	mov	w8, #0xc                   	// #12
  439354:	adrp	x21, 464000 <_obstack_memory_used@@Base+0xedd8>
  439358:	add	x21, x21, #0x400
  43935c:	add	x22, x21, x8, lsl #4
  439360:	mov	w23, #0x23                  	// #35
  439364:	b	43937c <feof@plt+0x3667c>
  439368:	ldrh	w8, [x21, #10]
  43936c:	str	w8, [x0, #24]
  439370:	add	x21, x21, #0x10
  439374:	cmp	x21, x22
  439378:	b.cs	4393cc <feof@plt+0x366cc>  // b.hs, b.nlast
  43937c:	ldrh	w8, [x21, #10]
  439380:	cmp	w8, #0xa
  439384:	b.ne	43939c <feof@plt+0x3669c>  // b.any
  439388:	ldr	w8, [x19, #1116]
  43938c:	cmp	w8, #0x15
  439390:	b.eq	439370 <feof@plt+0x36670>  // b.none
  439394:	ldr	x8, [x19, #1040]
  439398:	cbz	x8, 439370 <feof@plt+0x36670>
  43939c:	ldr	x1, [x21]
  4393a0:	ldrh	w2, [x21, #8]
  4393a4:	mov	x0, x19
  4393a8:	bl	428bc4 <feof@plt+0x25ec4>
  4393ac:	ldrh	w8, [x0, #18]
  4393b0:	orr	w9, w8, #0x3
  4393b4:	strh	w9, [x0, #18]
  4393b8:	ldrb	w9, [x21, #12]
  4393bc:	cbz	w9, 439368 <feof@plt+0x36668>
  4393c0:	orr	w8, w8, w23
  4393c4:	strh	w8, [x0, #18]
  4393c8:	b	439368 <feof@plt+0x36668>
  4393cc:	ldrb	w8, [x19, #1160]
  4393d0:	cbnz	w8, 4393f4 <feof@plt+0x366f4>
  4393d4:	ldrb	w8, [x19, #1243]
  4393d8:	cbz	w8, 4393e4 <feof@plt+0x366e4>
  4393dc:	ldrb	w8, [x19, #1153]
  4393e0:	cbz	w8, 4393f4 <feof@plt+0x366f4>
  4393e4:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  4393e8:	add	x1, x1, #0x5a0
  4393ec:	mov	x0, x19
  4393f0:	bl	420384 <feof@plt+0x1d684>
  4393f4:	ldrb	w9, [x19, #1120]
  4393f8:	ldr	w8, [x19, #1116]
  4393fc:	cbz	w9, 439418 <feof@plt+0x36718>
  439400:	sub	w8, w8, #0xd
  439404:	cmp	w8, #0x8
  439408:	b.cs	439448 <feof@plt+0x36748>  // b.hs, b.nlast
  43940c:	adrp	x9, 464000 <_obstack_memory_used@@Base+0xedd8>
  439410:	add	x9, x9, #0x4c0
  439414:	b	43945c <feof@plt+0x3675c>
  439418:	sub	w8, w8, #0x2
  43941c:	cmp	w8, #0x14
  439420:	b.cs	439434 <feof@plt+0x36734>  // b.hs, b.nlast
  439424:	mov	w9, #0x1d7                 	// #471
  439428:	movk	w9, #0x8, lsl #16
  43942c:	lsr	w9, w9, w8
  439430:	tbnz	w9, #0, 439454 <feof@plt+0x36754>
  439434:	ldrb	w8, [x19, #1152]
  439438:	cbz	w8, 439468 <feof@plt+0x36768>
  43943c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  439440:	add	x1, x1, #0x683
  439444:	b	439460 <feof@plt+0x36760>
  439448:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  43944c:	add	x1, x1, #0x5fb
  439450:	b	439460 <feof@plt+0x36760>
  439454:	adrp	x9, 464000 <_obstack_memory_used@@Base+0xedd8>
  439458:	add	x9, x9, #0x500
  43945c:	ldr	x1, [x9, w8, sxtw #3]
  439460:	mov	x0, x19
  439464:	bl	420384 <feof@plt+0x1d684>
  439468:	ldrb	w8, [x19, #1128]
  43946c:	cbz	w8, 4394a8 <feof@plt+0x367a8>
  439470:	ldrb	w8, [x19, #1120]
  439474:	cbz	w8, 439488 <feof@plt+0x36788>
  439478:	ldr	w8, [x19, #1116]
  43947c:	sub	w8, w8, #0xb
  439480:	cmp	w8, #0x2
  439484:	b.cc	4394a8 <feof@plt+0x367a8>  // b.lo, b.ul, b.last
  439488:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  43948c:	add	x1, x1, #0x69c
  439490:	mov	x0, x19
  439494:	bl	420384 <feof@plt+0x1d684>
  439498:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  43949c:	add	x1, x1, #0x6ae
  4394a0:	mov	x0, x19
  4394a4:	bl	420384 <feof@plt+0x1d684>
  4394a8:	adrp	x8, 464000 <_obstack_memory_used@@Base+0xedd8>
  4394ac:	adrp	x9, 464000 <_obstack_memory_used@@Base+0xedd8>
  4394b0:	add	x8, x8, #0x6c0
  4394b4:	add	x9, x9, #0x6d2
  4394b8:	cmp	w20, #0x0
  4394bc:	csel	x1, x9, x8, eq  // eq = none
  4394c0:	mov	x0, x19
  4394c4:	bl	420384 <feof@plt+0x1d684>
  4394c8:	ldrb	w8, [x19, #1122]
  4394cc:	cbz	w8, 4394f0 <feof@plt+0x367f0>
  4394d0:	mov	x0, x19
  4394d4:	ldp	x20, x19, [sp, #48]
  4394d8:	ldp	x22, x21, [sp, #32]
  4394dc:	ldr	x23, [sp, #16]
  4394e0:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  4394e4:	add	x1, x1, #0x6e4
  4394e8:	ldp	x29, x30, [sp], #64
  4394ec:	b	420384 <feof@plt+0x1d684>
  4394f0:	ldp	x20, x19, [sp, #48]
  4394f4:	ldp	x22, x21, [sp, #32]
  4394f8:	ldr	x23, [sp, #16]
  4394fc:	ldp	x29, x30, [sp], #64
  439500:	ret
  439504:	stp	x29, x30, [sp, #-48]!
  439508:	stp	x22, x21, [sp, #16]
  43950c:	stp	x20, x19, [sp, #32]
  439510:	ldrb	w8, [x0, #1120]
  439514:	mov	x19, x0
  439518:	mov	x29, sp
  43951c:	cbz	w8, 439524 <feof@plt+0x36824>
  439520:	strb	wzr, [x19, #1138]
  439524:	ldrb	w9, [x19, #1155]
  439528:	cbz	w9, 439540 <feof@plt+0x36840>
  43952c:	ldrb	w9, [x19, #1244]
  439530:	cbnz	w9, 43953c <feof@plt+0x3683c>
  439534:	mov	w9, #0x1                   	// #1
  439538:	strb	w9, [x19, #24]
  43953c:	strb	wzr, [x19, #1160]
  439540:	ldrb	w9, [x19, #1136]
  439544:	cmp	w9, #0x2
  439548:	b.ne	43955c <feof@plt+0x3685c>  // b.any
  43954c:	ldrb	w9, [x19, #1125]
  439550:	cmp	w9, #0x0
  439554:	cset	w9, eq  // eq = none
  439558:	strb	w9, [x19, #1136]
  43955c:	ldrb	w9, [x19, #1160]
  439560:	cbz	w9, 43956c <feof@plt+0x3686c>
  439564:	strb	wzr, [x19, #1125]
  439568:	strb	wzr, [x19, #1136]
  43956c:	cbz	w8, 43957c <feof@plt+0x3687c>
  439570:	ldrb	w8, [x19, #1158]
  439574:	cmp	w8, #0x0
  439578:	cset	w8, ne  // ne = any
  43957c:	ldrb	w9, [x19, #1159]
  439580:	mov	w10, #0x84                  	// #132
  439584:	orr	w10, w8, w10
  439588:	cmp	w9, #0x0
  43958c:	csel	w8, w8, w10, eq  // eq = none
  439590:	cbz	w8, 4395e8 <feof@plt+0x368e8>
  439594:	adrp	x21, 464000 <_obstack_memory_used@@Base+0xedd8>
  439598:	adrp	x22, 464000 <_obstack_memory_used@@Base+0xedd8>
  43959c:	lsl	w20, w8, #2
  4395a0:	add	x21, x21, #0x350
  4395a4:	add	x22, x22, #0x400
  4395a8:	ldr	x1, [x21]
  4395ac:	ldrh	w2, [x21, #8]
  4395b0:	mov	x0, x19
  4395b4:	bl	428bc4 <feof@plt+0x25ec4>
  4395b8:	ldrh	w8, [x0, #18]
  4395bc:	ldrb	w9, [x0, #16]
  4395c0:	orr	w8, w8, w20
  4395c4:	and	w9, w9, #0xfe
  4395c8:	strh	w8, [x0, #18]
  4395cc:	strb	w9, [x0, #16]
  4395d0:	ldrb	w8, [x21, #10]
  4395d4:	add	x21, x21, #0x10
  4395d8:	cmp	x21, x22
  4395dc:	lsl	w8, w8, #1
  4395e0:	strb	w8, [x0, #16]
  4395e4:	b.cc	4395a8 <feof@plt+0x368a8>  // b.lo, b.ul, b.last
  4395e8:	ldp	x20, x19, [sp, #32]
  4395ec:	ldp	x22, x21, [sp, #16]
  4395f0:	ldp	x29, x30, [sp], #48
  4395f4:	ret
  4395f8:	stp	x29, x30, [sp, #-48]!
  4395fc:	stp	x20, x19, [sp, #32]
  439600:	ldr	w8, [x0, #1200]
  439604:	mov	x19, x0
  439608:	mov	x20, x1
  43960c:	str	x21, [sp, #16]
  439610:	mov	x29, sp
  439614:	cbz	w8, 439630 <feof@plt+0x36930>
  439618:	ldr	x0, [x19, #712]
  43961c:	cbnz	x0, 439628 <feof@plt+0x36928>
  439620:	bl	435e88 <feof@plt+0x33188>
  439624:	str	x0, [x19, #712]
  439628:	mov	x1, x20
  43962c:	bl	436198 <feof@plt+0x33498>
  439630:	add	x2, x19, #0xd8
  439634:	mov	x0, x19
  439638:	mov	x1, x20
  43963c:	mov	w3, wzr
  439640:	mov	w4, wzr
  439644:	mov	w5, wzr
  439648:	mov	w6, wzr
  43964c:	bl	426488 <feof@plt+0x23788>
  439650:	str	x0, [x19, #288]
  439654:	bl	426478 <feof@plt+0x23778>
  439658:	tbz	w0, #0, 439664 <feof@plt+0x36964>
  43965c:	mov	x20, xzr
  439660:	b	439710 <feof@plt+0x36a10>
  439664:	ldr	x1, [x19, #288]
  439668:	mov	x0, x19
  43966c:	mov	w2, wzr
  439670:	mov	w3, wzr
  439674:	bl	426ec0 <feof@plt+0x241c0>
  439678:	ldrb	w8, [x19, #1155]
  43967c:	cbz	w8, 439710 <feof@plt+0x36a10>
  439680:	mov	x0, x19
  439684:	bl	429bf8 <feof@plt+0x26ef8>
  439688:	ldrb	w8, [x0, #4]
  43968c:	cmp	w8, #0x25
  439690:	b.ne	4396e8 <feof@plt+0x369e8>  // b.any
  439694:	mov	x20, x0
  439698:	mov	w8, #0x1                   	// #1
  43969c:	mov	x0, x19
  4396a0:	strb	w8, [x19, #16]
  4396a4:	bl	429bf8 <feof@plt+0x26ef8>
  4396a8:	mov	x21, x0
  4396ac:	mov	w1, #0x1                   	// #1
  4396b0:	mov	x0, x19
  4396b4:	bl	4328a0 <feof@plt+0x2fba0>
  4396b8:	strb	wzr, [x19, #16]
  4396bc:	ldrb	w8, [x21, #4]
  4396c0:	cmp	w8, #0x37
  4396c4:	b.ne	4396e8 <feof@plt+0x369e8>  // b.any
  4396c8:	ldrh	w8, [x20, #6]
  4396cc:	mov	x0, x19
  4396d0:	and	w1, w8, #0x1
  4396d4:	bl	41e230 <feof@plt+0x1b530>
  4396d8:	cbz	w0, 4396e8 <feof@plt+0x369e8>
  4396dc:	mov	x0, x19
  4396e0:	bl	4397bc <feof@plt+0x36abc>
  4396e4:	b	4396f4 <feof@plt+0x369f4>
  4396e8:	mov	w1, #0x1                   	// #1
  4396ec:	mov	x0, x19
  4396f0:	bl	4328a0 <feof@plt+0x2fba0>
  4396f4:	ldr	x8, [x19, #40]
  4396f8:	mov	w10, #0x18                  	// #24
  4396fc:	ldr	w9, [x8, #12]
  439700:	ldr	x8, [x8]
  439704:	sub	w9, w9, #0x1
  439708:	smaddl	x8, w9, w10, x8
  43970c:	ldr	x20, [x8, #8]
  439710:	mov	x0, x20
  439714:	ldp	x20, x19, [sp, #32]
  439718:	ldr	x21, [sp, #16]
  43971c:	ldp	x29, x30, [sp], #48
  439720:	ret
  439724:	stp	x29, x30, [sp, #-32]!
  439728:	stp	x20, x19, [sp, #16]
  43972c:	ldrb	w8, [x0, #1151]
  439730:	mov	x19, x0
  439734:	mov	x20, x1
  439738:	mov	x29, sp
  43973c:	cbz	w8, 439760 <feof@plt+0x36a60>
  439740:	adrp	x1, 431000 <feof@plt+0x2e300>
  439744:	add	x1, x1, #0x90c
  439748:	mov	x0, x19
  43974c:	mov	x2, xzr
  439750:	bl	428c40 <feof@plt+0x25f40>
  439754:	b	439760 <feof@plt+0x36a60>
  439758:	mov	x0, x19
  43975c:	bl	4206a4 <feof@plt+0x1d9a4>
  439760:	ldr	x8, [x19]
  439764:	cbnz	x8, 439758 <feof@plt+0x36a58>
  439768:	cbz	x20, 439798 <feof@plt+0x36a98>
  43976c:	ldr	w8, [x19, #1200]
  439770:	cbz	w8, 439798 <feof@plt+0x36a98>
  439774:	ldr	x0, [x19, #712]
  439778:	mov	w2, #0x48                  	// #72
  43977c:	mov	x1, x20
  439780:	bl	436484 <feof@plt+0x33784>
  439784:	ldrb	w8, [x19, #1205]
  439788:	cbz	w8, 439798 <feof@plt+0x36a98>
  43978c:	ldr	x0, [x19, #712]
  439790:	mov	x1, x20
  439794:	bl	4366a8 <feof@plt+0x339a8>
  439798:	ldrb	w8, [x19, #1131]
  43979c:	cbz	w8, 4397b0 <feof@plt+0x36ab0>
  4397a0:	mov	x0, x19
  4397a4:	ldp	x20, x19, [sp, #16]
  4397a8:	ldp	x29, x30, [sp], #32
  4397ac:	b	4279ec <feof@plt+0x24cec>
  4397b0:	ldp	x20, x19, [sp, #16]
  4397b4:	ldp	x29, x30, [sp], #32
  4397b8:	ret
  4397bc:	stp	x29, x30, [sp, #-48]!
  4397c0:	stp	x22, x21, [sp, #16]
  4397c4:	stp	x20, x19, [sp, #32]
  4397c8:	mov	x29, sp
  4397cc:	mov	x19, x0
  4397d0:	bl	429bf8 <feof@plt+0x26ef8>
  4397d4:	ldrb	w8, [x0, #4]
  4397d8:	cmp	w8, #0x25
  4397dc:	b.ne	439894 <feof@plt+0x36b94>  // b.any
  4397e0:	mov	x0, x19
  4397e4:	bl	429bf8 <feof@plt+0x26ef8>
  4397e8:	ldrb	w8, [x0, #4]
  4397ec:	cmp	w8, #0x37
  4397f0:	b.ne	43989c <feof@plt+0x36b9c>  // b.any
  4397f4:	mov	x0, x19
  4397f8:	bl	429bf8 <feof@plt+0x26ef8>
  4397fc:	ldrb	w8, [x0, #4]
  439800:	cmp	w8, #0x3e
  439804:	b.ne	4398a4 <feof@plt+0x36ba4>  // b.any
  439808:	ldr	w8, [x0, #8]
  43980c:	mov	x20, x0
  439810:	cmp	w8, #0x5
  439814:	b.cc	4398a4 <feof@plt+0x36ba4>  // b.lo, b.ul, b.last
  439818:	ldr	x9, [x20, #16]
  43981c:	sub	w10, w8, #0x2
  439820:	ldrb	w10, [x9, w10, uxtw]
  439824:	cmp	w10, #0x2f
  439828:	b.ne	4398a4 <feof@plt+0x36ba4>  // b.any
  43982c:	sub	w10, w8, #0x3
  439830:	ldrb	w11, [x9, x10]
  439834:	cmp	w11, #0x2f
  439838:	b.ne	4398a4 <feof@plt+0x36ba4>  // b.any
  43983c:	ldr	x22, [x19, #920]
  439840:	cbz	x22, 439880 <feof@plt+0x36b80>
  439844:	add	x10, x10, #0xf
  439848:	mov	x11, sp
  43984c:	and	x10, x10, #0x1fffffff0
  439850:	sub	x21, x11, x10
  439854:	mov	sp, x21
  439858:	add	x1, x9, #0x1
  43985c:	sub	w2, w8, #0x4
  439860:	mov	x0, x21
  439864:	bl	402640 <memcpy@plt>
  439868:	ldr	w8, [x20, #8]
  43986c:	mov	x0, x19
  439870:	mov	x1, x21
  439874:	sub	w8, w8, #0x4
  439878:	strb	wzr, [x21, w8, uxtw]
  43987c:	blr	x22
  439880:	mov	sp, x29
  439884:	ldp	x20, x19, [sp, #32]
  439888:	ldp	x22, x21, [sp, #16]
  43988c:	ldp	x29, x30, [sp], #48
  439890:	ret
  439894:	mov	w1, #0x1                   	// #1
  439898:	b	4398a8 <feof@plt+0x36ba8>
  43989c:	mov	w1, #0x2                   	// #2
  4398a0:	b	4398a8 <feof@plt+0x36ba8>
  4398a4:	mov	w1, #0x3                   	// #3
  4398a8:	mov	x0, x19
  4398ac:	mov	sp, x29
  4398b0:	ldp	x20, x19, [sp, #32]
  4398b4:	ldp	x22, x21, [sp, #16]
  4398b8:	ldp	x29, x30, [sp], #48
  4398bc:	b	4328a0 <feof@plt+0x2fba0>
  4398c0:	sub	sp, sp, #0x60
  4398c4:	stp	x29, x30, [sp, #80]
  4398c8:	add	x29, sp, #0x50
  4398cc:	movi	v0.2d, #0x0
  4398d0:	stp	q0, q0, [sp]
  4398d4:	str	x0, [sp]
  4398d8:	str	w1, [sp, #8]
  4398dc:	mov	x0, sp
  4398e0:	mov	w1, #0x48                  	// #72
  4398e4:	str	xzr, [sp, #64]
  4398e8:	stp	q0, q0, [sp, #32]
  4398ec:	bl	439a30 <feof@plt+0x36d30>
  4398f0:	cbz	x0, 43990c <feof@plt+0x36c0c>
  4398f4:	ldp	q0, q3, [sp]
  4398f8:	ldr	x8, [sp, #64]
  4398fc:	ldp	q1, q2, [sp, #32]
  439900:	stp	q0, q3, [x0]
  439904:	str	x8, [x0, #64]
  439908:	stp	q1, q2, [x0, #32]
  43990c:	ldp	x29, x30, [sp, #80]
  439910:	add	sp, sp, #0x60
  439914:	ret
  439918:	sub	sp, sp, #0x50
  43991c:	stp	x29, x30, [sp, #48]
  439920:	str	x19, [sp, #64]
  439924:	add	x29, sp, #0x30
  439928:	add	w8, w1, #0x1
  43992c:	stp	x0, x2, [sp, #8]
  439930:	stp	x3, x4, [sp, #24]
  439934:	mov	w1, #0x1000                	// #4096
  439938:	mov	x2, xzr
  43993c:	mov	x3, xzr
  439940:	mov	x19, x0
  439944:	str	w8, [sp]
  439948:	str	wzr, [sp, #40]
  43994c:	bl	439a30 <feof@plt+0x36d30>
  439950:	cbz	x0, 439974 <feof@plt+0x36c74>
  439954:	mov	x1, x0
  439958:	mov	w2, #0x1000                	// #4096
  43995c:	mov	x0, x19
  439960:	mov	x3, xzr
  439964:	mov	x4, xzr
  439968:	bl	439bf4 <feof@plt+0x36ef4>
  43996c:	mov	w8, #0x1                   	// #1
  439970:	b	439978 <feof@plt+0x36c78>
  439974:	mov	w8, wzr
  439978:	adrp	x0, 439000 <feof@plt+0x36300>
  43997c:	add	x0, x0, #0x9a0
  439980:	mov	x1, sp
  439984:	str	w8, [sp, #44]
  439988:	bl	4025e0 <_Unwind_Backtrace@plt>
  43998c:	ldr	w0, [sp, #40]
  439990:	ldr	x19, [sp, #64]
  439994:	ldp	x29, x30, [sp, #48]
  439998:	add	sp, sp, #0x50
  43999c:	ret
  4399a0:	stp	x29, x30, [sp, #-32]!
  4399a4:	str	x19, [sp, #16]
  4399a8:	mov	x29, sp
  4399ac:	mov	x19, x1
  4399b0:	add	x1, x29, #0x1c
  4399b4:	str	wzr, [x29, #28]
  4399b8:	bl	402610 <_Unwind_GetIPInfo@plt>
  4399bc:	ldr	w8, [x19]
  4399c0:	subs	w8, w8, #0x1
  4399c4:	b.lt	4399d4 <feof@plt+0x36cd4>  // b.tstop
  4399c8:	mov	w0, wzr
  4399cc:	str	w8, [x19]
  4399d0:	b	439a24 <feof@plt+0x36d24>
  4399d4:	ldr	w8, [x29, #28]
  4399d8:	ldr	w9, [x19, #44]
  4399dc:	cmp	w8, #0x0
  4399e0:	cset	w8, eq  // eq = none
  4399e4:	sub	x1, x0, x8
  4399e8:	cbz	w9, 4399fc <feof@plt+0x36cfc>
  4399ec:	ldp	x0, x2, [x19, #8]
  4399f0:	ldp	x3, x4, [x19, #24]
  4399f4:	bl	439e6c <feof@plt+0x3716c>
  4399f8:	b	439a14 <feof@plt+0x36d14>
  4399fc:	ldr	x8, [x19, #16]
  439a00:	ldr	x0, [x19, #32]
  439a04:	mov	x2, xzr
  439a08:	mov	w3, wzr
  439a0c:	mov	x4, xzr
  439a10:	blr	x8
  439a14:	cmp	w0, #0x0
  439a18:	mov	w8, #0x5                   	// #5
  439a1c:	str	w0, [x19, #40]
  439a20:	csel	w0, wzr, w8, eq  // eq = none
  439a24:	ldr	x19, [sp, #16]
  439a28:	ldp	x29, x30, [sp], #32
  439a2c:	ret
  439a30:	stp	x29, x30, [sp, #-64]!
  439a34:	stp	x24, x23, [sp, #16]
  439a38:	stp	x22, x21, [sp, #32]
  439a3c:	stp	x20, x19, [sp, #48]
  439a40:	mov	x29, sp
  439a44:	ldr	w8, [x0, #8]
  439a48:	mov	x20, x3
  439a4c:	mov	x19, x2
  439a50:	mov	x21, x0
  439a54:	mov	x22, x1
  439a58:	cbz	w8, 439a74 <feof@plt+0x36d74>
  439a5c:	add	x8, x21, #0x3c
  439a60:	mov	w9, #0x1                   	// #1
  439a64:	ldaxr	w10, [x8]
  439a68:	stlxr	w11, w9, [x8]
  439a6c:	cbnz	w11, 439a64 <feof@plt+0x36d64>
  439a70:	cbnz	w10, 439b5c <feof@plt+0x36e5c>
  439a74:	mov	x8, x21
  439a78:	ldr	x23, [x8, #64]!
  439a7c:	cbz	x23, 439b48 <feof@plt+0x36e48>
  439a80:	ldr	x9, [x23, #8]
  439a84:	cmp	x9, x22
  439a88:	b.cs	439aa8 <feof@plt+0x36da8>  // b.hs, b.nlast
  439a8c:	mov	x10, x23
  439a90:	ldr	x23, [x23]
  439a94:	cbz	x23, 439b48 <feof@plt+0x36e48>
  439a98:	ldr	x9, [x23, #8]
  439a9c:	cmp	x9, x22
  439aa0:	b.cc	439a8c <feof@plt+0x36d8c>  // b.lo, b.ul, b.last
  439aa4:	b	439aac <feof@plt+0x36dac>
  439aa8:	mov	x10, x8
  439aac:	ldr	x11, [x23]
  439ab0:	add	x12, x22, #0x7
  439ab4:	and	x22, x12, #0xfffffffffffffff8
  439ab8:	subs	x9, x9, x22
  439abc:	str	x11, [x10]
  439ac0:	b.ls	439b48 <feof@plt+0x36e48>  // b.plast
  439ac4:	cmp	x9, #0x10
  439ac8:	b.cc	439b48 <feof@plt+0x36e48>  // b.lo, b.ul, b.last
  439acc:	ldr	x10, [x8]
  439ad0:	cbz	x10, 439b3c <feof@plt+0x36e3c>
  439ad4:	mov	x12, xzr
  439ad8:	mov	x11, xzr
  439adc:	mov	x13, x10
  439ae0:	mov	x0, x8
  439ae4:	b	439afc <feof@plt+0x36dfc>
  439ae8:	mov	x11, x0
  439aec:	mov	x0, x13
  439af0:	ldr	x13, [x13]
  439af4:	add	x12, x12, #0x1
  439af8:	cbz	x13, 439b18 <feof@plt+0x36e18>
  439afc:	cbz	x11, 439ae8 <feof@plt+0x36de8>
  439b00:	ldr	x14, [x11]
  439b04:	ldr	x15, [x13, #8]
  439b08:	ldr	x14, [x14, #8]
  439b0c:	cmp	x15, x14
  439b10:	b.cc	439ae8 <feof@plt+0x36de8>  // b.lo, b.ul, b.last
  439b14:	b	439aec <feof@plt+0x36dec>
  439b18:	cmp	x12, #0x10
  439b1c:	b.cc	439b3c <feof@plt+0x36e3c>  // b.lo, b.ul, b.last
  439b20:	ldr	x10, [x11]
  439b24:	ldr	x12, [x10, #8]
  439b28:	cmp	x12, x9
  439b2c:	b.cs	439b48 <feof@plt+0x36e48>  // b.hs, b.nlast
  439b30:	ldr	x10, [x10]
  439b34:	str	x10, [x11]
  439b38:	ldr	x10, [x8]
  439b3c:	add	x11, x23, x22
  439b40:	stp	x10, x9, [x11]
  439b44:	str	x11, [x8]
  439b48:	ldr	w8, [x21, #8]
  439b4c:	cbz	w8, 439b58 <feof@plt+0x36e58>
  439b50:	add	x8, x21, #0x3c
  439b54:	stlr	wzr, [x8]
  439b58:	cbnz	x23, 439bdc <feof@plt+0x36edc>
  439b5c:	bl	402c10 <getpagesize@plt>
  439b60:	sxtw	x8, w0
  439b64:	add	x9, x22, x8
  439b68:	sub	x9, x9, #0x1
  439b6c:	neg	x8, x8
  439b70:	and	x24, x9, x8
  439b74:	mov	w2, #0x3                   	// #3
  439b78:	mov	w3, #0x22                  	// #34
  439b7c:	mov	w4, #0xffffffff            	// #-1
  439b80:	mov	x0, xzr
  439b84:	mov	x1, x24
  439b88:	mov	x5, xzr
  439b8c:	bl	402960 <mmap@plt>
  439b90:	cmn	x0, #0x1
  439b94:	b.eq	439bbc <feof@plt+0x36ebc>  // b.none
  439b98:	add	x8, x22, #0x7
  439b9c:	and	x8, x8, #0xfffffffffffffff8
  439ba0:	mov	x23, x0
  439ba4:	subs	x2, x24, x8
  439ba8:	b.ls	439bdc <feof@plt+0x36edc>  // b.plast
  439bac:	add	x1, x23, x8
  439bb0:	mov	x0, x21
  439bb4:	bl	439bf4 <feof@plt+0x36ef4>
  439bb8:	b	439bdc <feof@plt+0x36edc>
  439bbc:	cbz	x19, 439bd8 <feof@plt+0x36ed8>
  439bc0:	bl	402ac0 <__errno_location@plt>
  439bc4:	ldr	w2, [x0]
  439bc8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  439bcc:	add	x1, x1, #0x7b2
  439bd0:	mov	x0, x20
  439bd4:	blr	x19
  439bd8:	mov	x23, xzr
  439bdc:	mov	x0, x23
  439be0:	ldp	x20, x19, [sp, #48]
  439be4:	ldp	x22, x21, [sp, #32]
  439be8:	ldp	x24, x23, [sp, #16]
  439bec:	ldp	x29, x30, [sp], #64
  439bf0:	ret
  439bf4:	stp	x29, x30, [sp, #-48]!
  439bf8:	str	x21, [sp, #16]
  439bfc:	stp	x20, x19, [sp, #32]
  439c00:	mov	x29, sp
  439c04:	mov	x21, x2
  439c08:	mov	x20, x1
  439c0c:	cmp	x2, #0x10, lsl #12
  439c10:	mov	x19, x0
  439c14:	b.cc	439c40 <feof@plt+0x36f40>  // b.lo, b.ul, b.last
  439c18:	bl	402c10 <getpagesize@plt>
  439c1c:	sxtw	x8, w0
  439c20:	sub	x8, x8, #0x1
  439c24:	orr	x9, x20, x21
  439c28:	tst	x8, x9
  439c2c:	b.ne	439c40 <feof@plt+0x36f40>  // b.any
  439c30:	mov	x0, x20
  439c34:	mov	x1, x21
  439c38:	bl	4029b0 <munmap@plt>
  439c3c:	cbz	w0, 439cf4 <feof@plt+0x36ff4>
  439c40:	ldr	w8, [x19, #8]
  439c44:	cbz	w8, 439c60 <feof@plt+0x36f60>
  439c48:	add	x8, x19, #0x3c
  439c4c:	mov	w9, #0x1                   	// #1
  439c50:	ldaxr	w10, [x8]
  439c54:	stlxr	w11, w9, [x8]
  439c58:	cbnz	w11, 439c50 <feof@plt+0x36f50>
  439c5c:	cbnz	w10, 439cf4 <feof@plt+0x36ff4>
  439c60:	cmp	x21, #0x10
  439c64:	b.cc	439ce4 <feof@plt+0x36fe4>  // b.lo, b.ul, b.last
  439c68:	mov	x8, x19
  439c6c:	ldr	x9, [x8, #64]!
  439c70:	cbz	x9, 439cdc <feof@plt+0x36fdc>
  439c74:	mov	x11, xzr
  439c78:	mov	x10, xzr
  439c7c:	mov	x12, x9
  439c80:	mov	x0, x8
  439c84:	b	439c9c <feof@plt+0x36f9c>
  439c88:	mov	x10, x0
  439c8c:	mov	x0, x12
  439c90:	ldr	x12, [x12]
  439c94:	add	x11, x11, #0x1
  439c98:	cbz	x12, 439cb8 <feof@plt+0x36fb8>
  439c9c:	cbz	x10, 439c88 <feof@plt+0x36f88>
  439ca0:	ldr	x13, [x10]
  439ca4:	ldr	x14, [x12, #8]
  439ca8:	ldr	x13, [x13, #8]
  439cac:	cmp	x14, x13
  439cb0:	b.cc	439c88 <feof@plt+0x36f88>  // b.lo, b.ul, b.last
  439cb4:	b	439c8c <feof@plt+0x36f8c>
  439cb8:	cmp	x11, #0x10
  439cbc:	b.cc	439cdc <feof@plt+0x36fdc>  // b.lo, b.ul, b.last
  439cc0:	ldr	x9, [x10]
  439cc4:	ldr	x11, [x9, #8]
  439cc8:	cmp	x11, x21
  439ccc:	b.cs	439ce4 <feof@plt+0x36fe4>  // b.hs, b.nlast
  439cd0:	ldr	x9, [x9]
  439cd4:	str	x9, [x10]
  439cd8:	ldr	x9, [x8]
  439cdc:	stp	x9, x21, [x20]
  439ce0:	str	x20, [x8]
  439ce4:	ldr	w8, [x19, #8]
  439ce8:	cbz	w8, 439cf4 <feof@plt+0x36ff4>
  439cec:	add	x8, x19, #0x3c
  439cf0:	stlr	wzr, [x8]
  439cf4:	ldp	x20, x19, [sp, #32]
  439cf8:	ldr	x21, [sp, #16]
  439cfc:	ldp	x29, x30, [sp], #48
  439d00:	ret
  439d04:	stp	x29, x30, [sp, #-80]!
  439d08:	str	x25, [sp, #16]
  439d0c:	stp	x24, x23, [sp, #32]
  439d10:	stp	x22, x21, [sp, #48]
  439d14:	stp	x20, x19, [sp, #64]
  439d18:	mov	x29, sp
  439d1c:	ldr	x8, [x4, #16]
  439d20:	mov	x19, x4
  439d24:	mov	x20, x1
  439d28:	cmp	x8, x1
  439d2c:	b.cs	439d68 <feof@plt+0x37068>  // b.hs, b.nlast
  439d30:	mov	x22, x3
  439d34:	mov	x24, x2
  439d38:	mov	x21, x0
  439d3c:	bl	402c10 <getpagesize@plt>
  439d40:	ldr	x9, [x19, #8]
  439d44:	cbz	x9, 439d70 <feof@plt+0x37070>
  439d48:	sxtw	x8, w0
  439d4c:	add	x9, x9, x20
  439d50:	cmp	x9, x8
  439d54:	lsl	x9, x9, #1
  439d58:	b.cs	439d78 <feof@plt+0x37078>  // b.hs, b.nlast
  439d5c:	cmp	x9, x8
  439d60:	csel	x23, x8, x9, hi  // hi = pmore
  439d64:	b	439d88 <feof@plt+0x37088>
  439d68:	ldp	x22, x9, [x19]
  439d6c:	b	439de4 <feof@plt+0x370e4>
  439d70:	lsl	x23, x20, #4
  439d74:	b	439d88 <feof@plt+0x37088>
  439d78:	add	x9, x8, x9
  439d7c:	sub	x9, x9, #0x1
  439d80:	neg	x8, x8
  439d84:	and	x23, x9, x8
  439d88:	mov	x0, x21
  439d8c:	mov	x1, x23
  439d90:	mov	x2, x24
  439d94:	mov	x3, x22
  439d98:	bl	439a30 <feof@plt+0x36d30>
  439d9c:	cbz	x0, 439df4 <feof@plt+0x370f4>
  439da0:	ldr	x24, [x19]
  439da4:	mov	x22, x0
  439da8:	cbz	x24, 439dd4 <feof@plt+0x370d4>
  439dac:	ldr	x25, [x19, #8]
  439db0:	mov	x0, x22
  439db4:	mov	x1, x24
  439db8:	mov	x2, x25
  439dbc:	bl	402640 <memcpy@plt>
  439dc0:	ldr	x8, [x19, #16]
  439dc4:	mov	x0, x21
  439dc8:	mov	x1, x24
  439dcc:	add	x2, x8, x25
  439dd0:	bl	439bf4 <feof@plt+0x36ef4>
  439dd4:	ldr	x9, [x19, #8]
  439dd8:	str	x22, [x19]
  439ddc:	sub	x8, x23, x9
  439de0:	str	x8, [x19, #16]
  439de4:	add	x0, x22, x9
  439de8:	add	x9, x9, x20
  439dec:	sub	x8, x8, x20
  439df0:	stp	x9, x8, [x19, #8]
  439df4:	ldp	x20, x19, [sp, #64]
  439df8:	ldp	x22, x21, [sp, #48]
  439dfc:	ldp	x24, x23, [sp, #32]
  439e00:	ldr	x25, [sp, #16]
  439e04:	ldp	x29, x30, [sp], #80
  439e08:	ret
  439e0c:	ldp	x0, x8, [x1]
  439e10:	add	x8, x0, x8
  439e14:	stp	x8, xzr, [x1]
  439e18:	ret
  439e1c:	stp	x29, x30, [sp, #-32]!
  439e20:	str	x19, [sp, #16]
  439e24:	mov	x29, sp
  439e28:	ldp	x8, x9, [x1, #8]
  439e2c:	ldr	x10, [x1]
  439e30:	mov	x19, x1
  439e34:	add	x11, x8, #0x7
  439e38:	add	x8, x9, x8
  439e3c:	and	x9, x11, #0xfffffffffffffff8
  439e40:	sub	x2, x8, x9
  439e44:	add	x1, x10, x9
  439e48:	bl	439bf4 <feof@plt+0x36ef4>
  439e4c:	ldr	x8, [x19, #8]
  439e50:	str	xzr, [x19, #16]
  439e54:	cbnz	x8, 439e5c <feof@plt+0x3715c>
  439e58:	str	xzr, [x19]
  439e5c:	ldr	x19, [sp, #16]
  439e60:	mov	w0, #0x1                   	// #1
  439e64:	ldp	x29, x30, [sp], #32
  439e68:	ret
  439e6c:	stp	x29, x30, [sp, #-64]!
  439e70:	str	x23, [sp, #16]
  439e74:	stp	x22, x21, [sp, #32]
  439e78:	stp	x20, x19, [sp, #48]
  439e7c:	mov	x29, sp
  439e80:	mov	x21, x2
  439e84:	mov	x22, x1
  439e88:	mov	x1, x3
  439e8c:	mov	x2, x4
  439e90:	mov	x19, x4
  439e94:	mov	x20, x3
  439e98:	mov	x23, x0
  439e9c:	bl	439ef0 <feof@plt+0x371f0>
  439ea0:	cbz	w0, 439eac <feof@plt+0x371ac>
  439ea4:	ldr	w8, [x23, #56]
  439ea8:	cbz	w8, 439ec4 <feof@plt+0x371c4>
  439eac:	ldp	x20, x19, [sp, #48]
  439eb0:	ldp	x22, x21, [sp, #32]
  439eb4:	ldr	x23, [sp, #16]
  439eb8:	mov	w0, wzr
  439ebc:	ldp	x29, x30, [sp], #64
  439ec0:	ret
  439ec4:	ldr	x5, [x23, #24]
  439ec8:	mov	x0, x23
  439ecc:	mov	x1, x22
  439ed0:	mov	x2, x21
  439ed4:	mov	x3, x20
  439ed8:	mov	x4, x19
  439edc:	ldp	x20, x19, [sp, #48]
  439ee0:	ldp	x22, x21, [sp, #32]
  439ee4:	ldr	x23, [sp, #16]
  439ee8:	ldp	x29, x30, [sp], #64
  439eec:	br	x5
  439ef0:	sub	sp, sp, #0x90
  439ef4:	stp	x29, x30, [sp, #80]
  439ef8:	str	x23, [sp, #96]
  439efc:	stp	x22, x21, [sp, #112]
  439f00:	stp	x20, x19, [sp, #128]
  439f04:	add	x29, sp, #0x50
  439f08:	ldr	w8, [x0, #8]
  439f0c:	mov	x21, x2
  439f10:	mov	x19, x0
  439f14:	mov	x20, x1
  439f18:	cbz	w8, 439f44 <feof@plt+0x37244>
  439f1c:	add	x8, x19, #0x38
  439f20:	ldar	w8, [x8]
  439f24:	cbz	w8, 439f4c <feof@plt+0x3724c>
  439f28:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  439f2c:	add	x1, x1, #0x7b7
  439f30:	mov	w2, #0xffffffff            	// #-1
  439f34:	mov	x0, x21
  439f38:	blr	x20
  439f3c:	mov	w0, wzr
  439f40:	b	43a0e0 <feof@plt+0x373e0>
  439f44:	ldr	w8, [x19, #56]
  439f48:	cbnz	w8, 439f28 <feof@plt+0x37228>
  439f4c:	ldr	w8, [x19, #8]
  439f50:	cbz	w8, 439f68 <feof@plt+0x37268>
  439f54:	add	x8, x19, #0x18
  439f58:	ldar	x8, [x8]
  439f5c:	str	x8, [x29, #24]
  439f60:	cbnz	x8, 43a0dc <feof@plt+0x373dc>
  439f64:	b	439f74 <feof@plt+0x37274>
  439f68:	ldr	x8, [x19, #24]
  439f6c:	str	x8, [x29, #24]
  439f70:	cbnz	x8, 43a0dc <feof@plt+0x373dc>
  439f74:	ldr	x22, [x19]
  439f78:	cbz	x22, 439fb8 <feof@plt+0x372b8>
  439f7c:	add	x3, sp, #0xc
  439f80:	mov	x0, x22
  439f84:	mov	x1, x20
  439f88:	mov	x2, x21
  439f8c:	bl	43a1b4 <feof@plt+0x374b4>
  439f90:	ldr	w8, [sp, #12]
  439f94:	cmp	w0, #0x0
  439f98:	cset	w9, lt  // lt = tstop
  439f9c:	mov	w2, w0
  439fa0:	cmp	w8, #0x0
  439fa4:	cset	w10, eq  // eq = none
  439fa8:	and	w23, w9, w10
  439fac:	tbz	w0, #31, 43a088 <feof@plt+0x37388>
  439fb0:	cbnz	w8, 439fbc <feof@plt+0x372bc>
  439fb4:	b	43a088 <feof@plt+0x37388>
  439fb8:	mov	w23, wzr
  439fbc:	adrp	x22, 464000 <_obstack_memory_used@@Base+0xedd8>
  439fc0:	add	x22, x22, #0x7dd
  439fc4:	add	x3, sp, #0xc
  439fc8:	mov	x0, x22
  439fcc:	mov	x1, x20
  439fd0:	mov	x2, x21
  439fd4:	bl	43a1b4 <feof@plt+0x374b4>
  439fd8:	ldr	w8, [sp, #12]
  439fdc:	mov	w9, #0xffffffff            	// #-1
  439fe0:	mov	w2, w0
  439fe4:	cmp	w8, #0x0
  439fe8:	ccmp	w0, w9, #0x0, eq  // eq = none
  439fec:	csinc	w23, w23, wzr, gt
  439ff0:	tbz	w0, #31, 43a088 <feof@plt+0x37388>
  439ff4:	cbz	w8, 43a088 <feof@plt+0x37388>
  439ff8:	adrp	x22, 464000 <_obstack_memory_used@@Base+0xedd8>
  439ffc:	add	x22, x22, #0x7ec
  43a000:	add	x3, sp, #0xc
  43a004:	mov	x0, x22
  43a008:	mov	x1, x20
  43a00c:	mov	x2, x21
  43a010:	bl	43a1b4 <feof@plt+0x374b4>
  43a014:	ldr	w8, [sp, #12]
  43a018:	mov	w9, #0xffffffff            	// #-1
  43a01c:	mov	w2, w0
  43a020:	cmp	w8, #0x0
  43a024:	ccmp	w0, w9, #0x0, eq  // eq = none
  43a028:	csinc	w23, w23, wzr, gt
  43a02c:	tbz	w0, #31, 43a088 <feof@plt+0x37388>
  43a030:	cbz	w8, 43a088 <feof@plt+0x37388>
  43a034:	add	x22, sp, #0x10
  43a038:	bl	402930 <getpid@plt>
  43a03c:	adrp	x2, 464000 <_obstack_memory_used@@Base+0xedd8>
  43a040:	sxtw	x3, w0
  43a044:	add	x2, x2, #0x7ff
  43a048:	add	x0, sp, #0x10
  43a04c:	mov	w1, #0x40                  	// #64
  43a050:	bl	402a20 <snprintf@plt>
  43a054:	add	x0, sp, #0x10
  43a058:	add	x3, sp, #0xc
  43a05c:	mov	x1, x20
  43a060:	mov	x2, x21
  43a064:	bl	43a1b4 <feof@plt+0x374b4>
  43a068:	ldr	w8, [sp, #12]
  43a06c:	mov	w9, #0xffffffff            	// #-1
  43a070:	mov	w2, w0
  43a074:	cmp	w8, #0x0
  43a078:	ccmp	w0, w9, #0x0, eq  // eq = none
  43a07c:	csinc	w23, w23, wzr, gt
  43a080:	tbz	w0, #31, 43a088 <feof@plt+0x37388>
  43a084:	cbnz	w8, 43a0c0 <feof@plt+0x373c0>
  43a088:	tbnz	w2, #31, 43a0c0 <feof@plt+0x373c0>
  43a08c:	add	x5, x29, #0x18
  43a090:	mov	x0, x19
  43a094:	mov	x1, x22
  43a098:	mov	x3, x20
  43a09c:	mov	x4, x21
  43a0a0:	bl	43a430 <feof@plt+0x37730>
  43a0a4:	cbz	w0, 43a10c <feof@plt+0x3740c>
  43a0a8:	ldr	w9, [x19, #8]
  43a0ac:	ldr	x8, [x29, #24]
  43a0b0:	cbz	w9, 43a0d8 <feof@plt+0x373d8>
  43a0b4:	add	x9, x19, #0x18
  43a0b8:	stlr	x8, [x9]
  43a0bc:	b	43a0dc <feof@plt+0x373dc>
  43a0c0:	cbnz	w23, 43a10c <feof@plt+0x3740c>
  43a0c4:	ldr	x1, [x19]
  43a0c8:	cbz	x1, 43a0f8 <feof@plt+0x373f8>
  43a0cc:	mov	w2, #0x2                   	// #2
  43a0d0:	mov	x0, x21
  43a0d4:	b	43a108 <feof@plt+0x37408>
  43a0d8:	str	x8, [x19, #24]
  43a0dc:	mov	w0, #0x1                   	// #1
  43a0e0:	ldp	x20, x19, [sp, #128]
  43a0e4:	ldp	x22, x21, [sp, #112]
  43a0e8:	ldr	x23, [sp, #96]
  43a0ec:	ldp	x29, x30, [sp, #80]
  43a0f0:	add	sp, sp, #0x90
  43a0f4:	ret
  43a0f8:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  43a0fc:	add	x1, x1, #0x816
  43a100:	mov	x0, x21
  43a104:	mov	w2, wzr
  43a108:	blr	x20
  43a10c:	ldr	w8, [x19, #8]
  43a110:	cbz	w8, 43a128 <feof@plt+0x37428>
  43a114:	add	x8, x19, #0x38
  43a118:	mov	w9, #0x1                   	// #1
  43a11c:	mov	w0, wzr
  43a120:	stlr	w9, [x8]
  43a124:	b	43a0e0 <feof@plt+0x373e0>
  43a128:	mov	w8, #0x1                   	// #1
  43a12c:	mov	w0, wzr
  43a130:	str	w8, [x19, #56]
  43a134:	b	43a0e0 <feof@plt+0x373e0>
  43a138:	stp	x29, x30, [sp, #-64]!
  43a13c:	str	x23, [sp, #16]
  43a140:	stp	x22, x21, [sp, #32]
  43a144:	stp	x20, x19, [sp, #48]
  43a148:	mov	x29, sp
  43a14c:	mov	x21, x2
  43a150:	mov	x22, x1
  43a154:	mov	x1, x3
  43a158:	mov	x2, x4
  43a15c:	mov	x19, x4
  43a160:	mov	x20, x3
  43a164:	mov	x23, x0
  43a168:	bl	439ef0 <feof@plt+0x371f0>
  43a16c:	cbz	w0, 43a1a0 <feof@plt+0x374a0>
  43a170:	ldr	w8, [x23, #56]
  43a174:	cbz	w8, 43a180 <feof@plt+0x37480>
  43a178:	mov	w0, wzr
  43a17c:	b	43a1a0 <feof@plt+0x374a0>
  43a180:	ldr	x8, [x23, #40]
  43a184:	mov	x0, x23
  43a188:	mov	x1, x22
  43a18c:	mov	x2, x21
  43a190:	mov	x3, x20
  43a194:	mov	x4, x19
  43a198:	blr	x8
  43a19c:	mov	w0, #0x1                   	// #1
  43a1a0:	ldp	x20, x19, [sp, #48]
  43a1a4:	ldp	x22, x21, [sp, #32]
  43a1a8:	ldr	x23, [sp, #16]
  43a1ac:	ldp	x29, x30, [sp], #64
  43a1b0:	ret
  43a1b4:	stp	x29, x30, [sp, #-64]!
  43a1b8:	str	x23, [sp, #16]
  43a1bc:	stp	x22, x21, [sp, #32]
  43a1c0:	stp	x20, x19, [sp, #48]
  43a1c4:	mov	x29, sp
  43a1c8:	mov	x21, x3
  43a1cc:	mov	x20, x2
  43a1d0:	mov	x19, x1
  43a1d4:	mov	x22, x0
  43a1d8:	cbz	x3, 43a1e0 <feof@plt+0x374e0>
  43a1dc:	str	wzr, [x21]
  43a1e0:	mov	w1, #0x80000               	// #524288
  43a1e4:	mov	x0, x22
  43a1e8:	bl	402720 <open@plt>
  43a1ec:	tbnz	w0, #31, 43a204 <feof@plt+0x37504>
  43a1f0:	mov	w1, #0x2                   	// #2
  43a1f4:	mov	w2, #0x1                   	// #1
  43a1f8:	mov	w23, w0
  43a1fc:	bl	402c80 <fcntl@plt>
  43a200:	b	43a238 <feof@plt+0x37538>
  43a204:	bl	402ac0 <__errno_location@plt>
  43a208:	cbz	x21, 43a224 <feof@plt+0x37524>
  43a20c:	ldr	w8, [x0]
  43a210:	cmp	w8, #0x2
  43a214:	b.ne	43a224 <feof@plt+0x37524>  // b.any
  43a218:	mov	w8, #0x1                   	// #1
  43a21c:	str	w8, [x21]
  43a220:	b	43a234 <feof@plt+0x37534>
  43a224:	ldr	w2, [x0]
  43a228:	mov	x0, x20
  43a22c:	mov	x1, x22
  43a230:	blr	x19
  43a234:	mov	w23, #0xffffffff            	// #-1
  43a238:	mov	w0, w23
  43a23c:	ldp	x20, x19, [sp, #48]
  43a240:	ldp	x22, x21, [sp, #32]
  43a244:	ldr	x23, [sp, #16]
  43a248:	ldp	x29, x30, [sp], #64
  43a24c:	ret
  43a250:	stp	x29, x30, [sp, #-32]!
  43a254:	stp	x20, x19, [sp, #16]
  43a258:	mov	x29, sp
  43a25c:	mov	x20, x2
  43a260:	mov	x19, x1
  43a264:	bl	402b30 <close@plt>
  43a268:	tbnz	w0, #31, 43a274 <feof@plt+0x37574>
  43a26c:	mov	w0, #0x1                   	// #1
  43a270:	b	43a290 <feof@plt+0x37590>
  43a274:	bl	402ac0 <__errno_location@plt>
  43a278:	ldr	w2, [x0]
  43a27c:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  43a280:	add	x1, x1, #0x845
  43a284:	mov	x0, x20
  43a288:	blr	x19
  43a28c:	mov	w0, wzr
  43a290:	ldp	x20, x19, [sp, #16]
  43a294:	ldp	x29, x30, [sp], #32
  43a298:	ret
  43a29c:	stp	x29, x30, [sp, #-80]!
  43a2a0:	stp	x26, x25, [sp, #16]
  43a2a4:	stp	x24, x23, [sp, #32]
  43a2a8:	stp	x22, x21, [sp, #48]
  43a2ac:	stp	x20, x19, [sp, #64]
  43a2b0:	mov	x29, sp
  43a2b4:	mov	x20, x3
  43a2b8:	mov	x25, x2
  43a2bc:	mov	x26, x1
  43a2c0:	mov	w1, #0x13b4                	// #5044
  43a2c4:	mov	x2, x3
  43a2c8:	mov	x3, x4
  43a2cc:	mov	x22, x6
  43a2d0:	mov	x23, x5
  43a2d4:	mov	x19, x4
  43a2d8:	mov	x21, x0
  43a2dc:	bl	439a30 <feof@plt+0x36d30>
  43a2e0:	cbz	x0, 43a32c <feof@plt+0x3762c>
  43a2e4:	mov	x24, x0
  43a2e8:	mov	x0, x21
  43a2ec:	mov	x1, x26
  43a2f0:	mov	x2, x25
  43a2f4:	mov	x3, x24
  43a2f8:	mov	x4, x20
  43a2fc:	mov	x5, x19
  43a300:	mov	x6, x23
  43a304:	mov	x7, x22
  43a308:	bl	43a344 <feof@plt+0x37644>
  43a30c:	mov	w22, w0
  43a310:	mov	w2, #0x13b4                	// #5044
  43a314:	mov	x0, x21
  43a318:	mov	x1, x24
  43a31c:	mov	x3, x20
  43a320:	mov	x4, x19
  43a324:	bl	439bf4 <feof@plt+0x36ef4>
  43a328:	mov	w0, w22
  43a32c:	ldp	x20, x19, [sp, #64]
  43a330:	ldp	x22, x21, [sp, #48]
  43a334:	ldp	x24, x23, [sp, #32]
  43a338:	ldp	x26, x25, [sp, #16]
  43a33c:	ldp	x29, x30, [sp], #80
  43a340:	ret
  43a344:	stp	x29, x30, [sp, #-80]!
  43a348:	str	x25, [sp, #16]
  43a34c:	stp	x24, x23, [sp, #32]
  43a350:	stp	x22, x21, [sp, #48]
  43a354:	stp	x20, x19, [sp, #64]
  43a358:	mov	x29, sp
  43a35c:	subs	x23, x2, #0xc
  43a360:	str	xzr, [x6]
  43a364:	str	xzr, [x7]
  43a368:	b.cc	43a414 <feof@plt+0x37714>  // b.lo, b.ul, b.last
  43a36c:	ldr	w8, [x1]
  43a370:	mov	w9, #0x4c5a                	// #19546
  43a374:	movk	w9, #0x4249, lsl #16
  43a378:	mov	x22, x1
  43a37c:	cmp	w8, w9
  43a380:	b.ne	43a414 <feof@plt+0x37714>  // b.any
  43a384:	ldrb	w8, [x22, #5]
  43a388:	ldrb	w9, [x22, #4]
  43a38c:	ldrb	w10, [x22, #6]
  43a390:	ldrb	w11, [x22, #7]
  43a394:	lsl	w8, w8, #8
  43a398:	bfi	w8, w9, #16, #8
  43a39c:	ldrb	w9, [x22, #8]
  43a3a0:	orr	w8, w8, w10
  43a3a4:	ldrb	w10, [x22, #9]
  43a3a8:	lsl	x8, x8, #16
  43a3ac:	bfi	x8, x11, #8, #8
  43a3b0:	ldrb	w11, [x22, #10]
  43a3b4:	ldrb	w24, [x22, #11]
  43a3b8:	orr	x8, x8, x9
  43a3bc:	lsl	x9, x10, #8
  43a3c0:	bfi	x9, x8, #16, #48
  43a3c4:	orr	x8, x9, x11
  43a3c8:	bfi	x24, x8, #8, #56
  43a3cc:	mov	x21, x3
  43a3d0:	mov	x1, x24
  43a3d4:	mov	x2, x4
  43a3d8:	mov	x3, x5
  43a3dc:	mov	x19, x7
  43a3e0:	mov	x20, x6
  43a3e4:	bl	439a30 <feof@plt+0x36d30>
  43a3e8:	cbz	x0, 43a418 <feof@plt+0x37718>
  43a3ec:	mov	x25, x0
  43a3f0:	add	x0, x22, #0xc
  43a3f4:	mov	x1, x23
  43a3f8:	mov	x2, x21
  43a3fc:	mov	x3, x25
  43a400:	mov	x4, x24
  43a404:	bl	43bf78 <feof@plt+0x39278>
  43a408:	cbz	w0, 43a414 <feof@plt+0x37714>
  43a40c:	str	x25, [x20]
  43a410:	str	x24, [x19]
  43a414:	mov	w0, #0x1                   	// #1
  43a418:	ldp	x20, x19, [sp, #64]
  43a41c:	ldp	x22, x21, [sp, #48]
  43a420:	ldp	x24, x23, [sp, #32]
  43a424:	ldr	x25, [sp, #16]
  43a428:	ldp	x29, x30, [sp], #80
  43a42c:	ret
  43a430:	sub	sp, sp, #0xe0
  43a434:	stp	x29, x30, [sp, #128]
  43a438:	stp	x28, x27, [sp, #144]
  43a43c:	stp	x26, x25, [sp, #160]
  43a440:	stp	x24, x23, [sp, #176]
  43a444:	stp	x22, x21, [sp, #192]
  43a448:	stp	x20, x19, [sp, #208]
  43a44c:	add	x29, sp, #0x80
  43a450:	mov	x23, x4
  43a454:	mov	x24, x3
  43a458:	adrp	x25, 43a000 <feof@plt+0x37300>
  43a45c:	mov	x19, x5
  43a460:	add	x25, x25, #0x5ac
  43a464:	mov	w8, #0x1                   	// #1
  43a468:	sub	x26, x29, #0x8
  43a46c:	sub	x6, x29, #0x10
  43a470:	sub	x7, x29, #0x4
  43a474:	mov	x3, xzr
  43a478:	mov	x4, x24
  43a47c:	mov	x5, x23
  43a480:	mov	w21, w2
  43a484:	mov	x22, x1
  43a488:	mov	x20, x0
  43a48c:	stur	x25, [x29, #-16]
  43a490:	str	wzr, [sp, #40]
  43a494:	str	xzr, [sp, #32]
  43a498:	str	wzr, [sp, #24]
  43a49c:	sub	x27, x29, #0x10
  43a4a0:	str	w8, [sp, #16]
  43a4a4:	stp	x26, xzr, [sp]
  43a4a8:	sub	x28, x29, #0x4
  43a4ac:	bl	43a5d4 <feof@plt+0x378d4>
  43a4b0:	cbz	w0, 43a58c <feof@plt+0x3788c>
  43a4b4:	cmp	w0, #0x0
  43a4b8:	adrp	x0, 43b000 <feof@plt+0x38300>
  43a4bc:	csinv	w8, w21, wzr, lt  // lt = tstop
  43a4c0:	add	x0, x0, #0xd68
  43a4c4:	add	x1, sp, #0x30
  43a4c8:	stp	x20, x24, [sp, #48]
  43a4cc:	stp	x23, x27, [sp, #64]
  43a4d0:	stp	x28, x26, [sp, #80]
  43a4d4:	str	x22, [sp, #96]
  43a4d8:	str	w8, [sp, #104]
  43a4dc:	bl	402900 <dl_iterate_phdr@plt>
  43a4e0:	ldr	w10, [x20, #8]
  43a4e4:	ldur	w9, [x29, #-4]
  43a4e8:	add	x8, x20, #0x28
  43a4ec:	cbz	w10, 43a504 <feof@plt+0x37804>
  43a4f0:	cbz	w9, 43a518 <feof@plt+0x37818>
  43a4f4:	adrp	x9, 43b000 <feof@plt+0x38300>
  43a4f8:	add	x9, x9, #0xe58
  43a4fc:	stlr	x9, [x8]
  43a500:	b	43a550 <feof@plt+0x37850>
  43a504:	cbz	w9, 43a534 <feof@plt+0x37834>
  43a508:	adrp	x9, 43b000 <feof@plt+0x38300>
  43a50c:	add	x9, x9, #0xe58
  43a510:	str	x9, [x8]
  43a514:	b	43a550 <feof@plt+0x37850>
  43a518:	adrp	x9, 43b000 <feof@plt+0x38300>
  43a51c:	add	x9, x9, #0xf64
  43a520:	ldaxr	x10, [x8]
  43a524:	cbnz	x10, 43a54c <feof@plt+0x3784c>
  43a528:	stlxr	w10, x9, [x8]
  43a52c:	cbnz	w10, 43a520 <feof@plt+0x37820>
  43a530:	b	43a550 <feof@plt+0x37850>
  43a534:	ldr	x9, [x8]
  43a538:	cbnz	x9, 43a550 <feof@plt+0x37850>
  43a53c:	adrp	x9, 43b000 <feof@plt+0x38300>
  43a540:	add	x9, x9, #0xf64
  43a544:	str	x9, [x8]
  43a548:	b	43a550 <feof@plt+0x37850>
  43a54c:	clrex
  43a550:	ldr	w8, [x20, #8]
  43a554:	cbz	w8, 43a56c <feof@plt+0x3786c>
  43a558:	add	x8, x20, #0x18
  43a55c:	ldar	x8, [x8]
  43a560:	str	x8, [x19]
  43a564:	cbnz	x8, 43a578 <feof@plt+0x37878>
  43a568:	b	43a580 <feof@plt+0x37880>
  43a56c:	ldr	x8, [x20, #24]
  43a570:	str	x8, [x19]
  43a574:	cbz	x8, 43a580 <feof@plt+0x37880>
  43a578:	cmp	x8, x25
  43a57c:	b.ne	43a588 <feof@plt+0x37888>  // b.any
  43a580:	ldur	x8, [x29, #-16]
  43a584:	str	x8, [x19]
  43a588:	mov	w0, #0x1                   	// #1
  43a58c:	ldp	x20, x19, [sp, #208]
  43a590:	ldp	x22, x21, [sp, #192]
  43a594:	ldp	x24, x23, [sp, #176]
  43a598:	ldp	x26, x25, [sp, #160]
  43a59c:	ldp	x28, x27, [sp, #144]
  43a5a0:	ldp	x29, x30, [sp, #128]
  43a5a4:	add	sp, sp, #0xe0
  43a5a8:	ret
  43a5ac:	stp	x29, x30, [sp, #-16]!
  43a5b0:	mov	x29, sp
  43a5b4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43a5b8:	mov	x0, x4
  43a5bc:	add	x1, x1, #0x139
  43a5c0:	mov	w2, #0xffffffff            	// #-1
  43a5c4:	blr	x3
  43a5c8:	mov	w0, wzr
  43a5cc:	ldp	x29, x30, [sp], #16
  43a5d0:	ret
  43a5d4:	stp	x29, x30, [sp, #-96]!
  43a5d8:	stp	x28, x27, [sp, #16]
  43a5dc:	stp	x26, x25, [sp, #32]
  43a5e0:	stp	x24, x23, [sp, #48]
  43a5e4:	stp	x22, x21, [sp, #64]
  43a5e8:	stp	x20, x19, [sp, #80]
  43a5ec:	mov	x29, sp
  43a5f0:	sub	sp, sp, #0x3c0
  43a5f4:	ldr	w28, [x29, #120]
  43a5f8:	ldr	x21, [x29, #96]
  43a5fc:	mov	x26, x7
  43a600:	mov	x24, x6
  43a604:	mov	x25, x5
  43a608:	mov	x22, x4
  43a60c:	mov	x23, x3
  43a610:	mov	w20, w2
  43a614:	mov	x27, x1
  43a618:	mov	x19, x0
  43a61c:	cbnz	w28, 43a628 <feof@plt+0x37928>
  43a620:	str	wzr, [x26]
  43a624:	str	wzr, [x21]
  43a628:	sub	x6, x29, #0x28
  43a62c:	mov	w3, #0x40                  	// #64
  43a630:	mov	x0, x19
  43a634:	mov	w1, w20
  43a638:	mov	x2, xzr
  43a63c:	mov	x4, x22
  43a640:	mov	x5, x25
  43a644:	bl	43d4cc <feof@plt+0x3a7cc>
  43a648:	cbz	w0, 43a770 <feof@plt+0x37a70>
  43a64c:	ldur	x8, [x29, #-40]
  43a650:	stp	x27, x24, [sp, #232]
  43a654:	stp	x26, x23, [sp, #248]
  43a658:	str	w28, [sp, #280]
  43a65c:	ldrb	w9, [x8, #5]
  43a660:	str	x21, [sp, #224]
  43a664:	str	w20, [sp, #324]
  43a668:	ldrb	w24, [x8]
  43a66c:	str	w9, [sp, #300]
  43a670:	ldrh	w9, [x8, #18]
  43a674:	ldrb	w23, [x8, #1]
  43a678:	mov	x2, x22
  43a67c:	ldrb	w22, [x8, #2]
  43a680:	str	w9, [sp, #264]
  43a684:	ldr	w9, [x8, #48]
  43a688:	ldrb	w20, [x8, #3]
  43a68c:	mov	x0, x19
  43a690:	ldrb	w21, [x8, #4]
  43a694:	ldrb	w19, [x8, #6]
  43a698:	mov	x3, x25
  43a69c:	ldrh	w25, [x8, #16]
  43a6a0:	ldr	x27, [x8, #40]
  43a6a4:	ldrh	w26, [x8, #60]
  43a6a8:	ldrh	w28, [x8, #62]
  43a6ac:	sub	x1, x29, #0x28
  43a6b0:	str	w9, [sp, #272]
  43a6b4:	str	x0, [sp, #288]
  43a6b8:	stp	x3, x2, [sp, #304]
  43a6bc:	bl	43d58c <feof@plt+0x3a88c>
  43a6c0:	cmp	w24, #0x7f
  43a6c4:	b.ne	43a720 <feof@plt+0x37a20>  // b.any
  43a6c8:	cmp	w23, #0x45
  43a6cc:	b.ne	43a720 <feof@plt+0x37a20>  // b.any
  43a6d0:	cmp	w22, #0x4c
  43a6d4:	b.ne	43a720 <feof@plt+0x37a20>  // b.any
  43a6d8:	cmp	w20, #0x46
  43a6dc:	b.ne	43a720 <feof@plt+0x37a20>  // b.any
  43a6e0:	cmp	w19, #0x1
  43a6e4:	b.ne	43a72c <feof@plt+0x37a2c>  // b.any
  43a6e8:	ldr	x22, [sp, #312]
  43a6ec:	ldr	w20, [sp, #324]
  43a6f0:	cmp	w21, #0x2
  43a6f4:	b.ne	43a74c <feof@plt+0x37a4c>  // b.any
  43a6f8:	ldr	w8, [sp, #300]
  43a6fc:	sub	w8, w8, #0x1
  43a700:	cmp	w8, #0x2
  43a704:	b.cs	43a758 <feof@plt+0x37a58>  // b.hs, b.nlast
  43a708:	ldr	w8, [x29, #112]
  43a70c:	cbz	w8, 43a7b0 <feof@plt+0x37ab0>
  43a710:	cmp	w25, #0x3
  43a714:	b.ne	43a7b0 <feof@plt+0x37ab0>  // b.any
  43a718:	mov	w25, #0xffffffff            	// #-1
  43a71c:	b	43a78c <feof@plt+0x37a8c>
  43a720:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43a724:	add	x1, x1, #0x159
  43a728:	b	43a734 <feof@plt+0x37a34>
  43a72c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43a730:	add	x1, x1, #0x174
  43a734:	ldp	x25, x22, [sp, #304]
  43a738:	mov	w2, wzr
  43a73c:	mov	x0, x25
  43a740:	blr	x22
  43a744:	ldr	w20, [sp, #324]
  43a748:	b	43a770 <feof@plt+0x37a70>
  43a74c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43a750:	add	x1, x1, #0x1a0
  43a754:	b	43a760 <feof@plt+0x37a60>
  43a758:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43a75c:	add	x1, x1, #0x1c8
  43a760:	ldr	x25, [sp, #304]
  43a764:	mov	w2, wzr
  43a768:	mov	x0, x25
  43a76c:	blr	x22
  43a770:	cmn	w20, #0x1
  43a774:	b.eq	43a788 <feof@plt+0x37a88>  // b.none
  43a778:	mov	w0, w20
  43a77c:	mov	x1, x22
  43a780:	mov	x2, x25
  43a784:	bl	43a250 <feof@plt+0x37550>
  43a788:	mov	w25, wzr
  43a78c:	mov	w0, w25
  43a790:	add	sp, sp, #0x3c0
  43a794:	ldp	x20, x19, [sp, #80]
  43a798:	ldp	x22, x21, [sp, #64]
  43a79c:	ldp	x24, x23, [sp, #48]
  43a7a0:	ldp	x26, x25, [sp, #32]
  43a7a4:	ldp	x28, x27, [sp, #16]
  43a7a8:	ldp	x29, x30, [sp], #96
  43a7ac:	ret
  43a7b0:	cmp	w26, #0x0
  43a7b4:	mov	w9, #0xffff                	// #65535
  43a7b8:	cset	w8, eq  // eq = none
  43a7bc:	cmp	w28, w9
  43a7c0:	cset	w9, eq  // eq = none
  43a7c4:	cbz	x27, 43a844 <feof@plt+0x37b44>
  43a7c8:	ldr	x25, [sp, #304]
  43a7cc:	ldr	x21, [sp, #288]
  43a7d0:	orr	w8, w8, w9
  43a7d4:	cbz	w8, 43a84c <feof@plt+0x37b4c>
  43a7d8:	add	x6, sp, #0x220
  43a7dc:	mov	w3, #0x8                   	// #8
  43a7e0:	mov	x0, x21
  43a7e4:	mov	w1, w20
  43a7e8:	mov	x2, x27
  43a7ec:	mov	x4, x22
  43a7f0:	mov	x5, x25
  43a7f4:	bl	43d4cc <feof@plt+0x3a7cc>
  43a7f8:	cbz	w0, 43a770 <feof@plt+0x37a70>
  43a7fc:	ldr	x8, [sp, #544]
  43a800:	cbnz	w26, 43a808 <feof@plt+0x37b08>
  43a804:	ldr	w26, [x8, #32]
  43a808:	mov	w9, #0xffff                	// #65535
  43a80c:	cmp	w28, w9
  43a810:	b.ne	43a82c <feof@plt+0x37b2c>  // b.any
  43a814:	ldr	w8, [x8, #40]
  43a818:	lsr	w9, w8, #16
  43a81c:	cmp	w9, #0x0
  43a820:	sub	w10, w8, #0x100
  43a824:	ccmp	w8, w26, #0x0, ne  // ne = any
  43a828:	csel	w28, w10, w8, cs  // cs = hs, nlast
  43a82c:	add	x1, sp, #0x220
  43a830:	mov	x0, x21
  43a834:	mov	x2, x22
  43a838:	mov	x3, x25
  43a83c:	bl	43d58c <feof@plt+0x3a88c>
  43a840:	b	43a84c <feof@plt+0x37b4c>
  43a844:	ldr	x25, [sp, #304]
  43a848:	ldr	x21, [sp, #288]
  43a84c:	sub	w8, w26, #0x1
  43a850:	add	x2, x27, #0x40
  43a854:	lsl	x3, x8, #6
  43a858:	sub	x6, x29, #0x40
  43a85c:	mov	x0, x21
  43a860:	mov	w1, w20
  43a864:	mov	x4, x22
  43a868:	mov	x5, x25
  43a86c:	bl	43d4cc <feof@plt+0x3a7cc>
  43a870:	cbz	w0, 43a770 <feof@plt+0x37a70>
  43a874:	ldur	x9, [x29, #-64]
  43a878:	sub	w8, w28, #0x1
  43a87c:	sub	x6, x29, #0x58
  43a880:	mov	x0, x21
  43a884:	str	x9, [sp, #176]
  43a888:	add	x8, x9, x8, lsl #6
  43a88c:	ldp	x2, x3, [x8, #24]
  43a890:	mov	w1, w20
  43a894:	mov	x4, x22
  43a898:	mov	x5, x25
  43a89c:	str	x3, [sp, #208]
  43a8a0:	bl	43d4cc <feof@plt+0x3a7cc>
  43a8a4:	cbz	w0, 43a988 <feof@plt+0x37c88>
  43a8a8:	ldur	x9, [x29, #-88]
  43a8ac:	add	x8, sp, #0x220
  43a8b0:	movi	v0.2d, #0x0
  43a8b4:	cmp	w26, #0x2
  43a8b8:	str	x9, [sp, #200]
  43a8bc:	stp	q0, q0, [x8]
  43a8c0:	stp	q0, q0, [x8, #32]
  43a8c4:	stp	q0, q0, [x8, #64]
  43a8c8:	stp	q0, q0, [x8, #96]
  43a8cc:	stp	q0, q0, [x8, #128]
  43a8d0:	stp	q0, q0, [x8, #160]
  43a8d4:	stp	q0, q0, [x8, #192]
  43a8d8:	stp	q0, q0, [x8, #224]
  43a8dc:	stp	q0, q0, [x8, #256]
  43a8e0:	stp	q0, q0, [x8, #288]
  43a8e4:	str	w26, [sp, #104]
  43a8e8:	b.cc	43adf8 <feof@plt+0x380f8>  // b.lo, b.ul, b.last
  43a8ec:	ldr	w8, [sp, #280]
  43a8f0:	ldr	x11, [x29, #128]
  43a8f4:	ldr	w12, [sp, #264]
  43a8f8:	ldr	w13, [x29, #136]
  43a8fc:	cmp	w8, #0x0
  43a900:	cset	w10, ne  // ne = any
  43a904:	cmp	x11, #0x0
  43a908:	str	x11, [sp, #96]
  43a90c:	cset	w11, eq  // eq = none
  43a910:	and	w10, w10, w11
  43a914:	ldr	w11, [sp, #272]
  43a918:	add	x8, sp, #0x160
  43a91c:	cmp	w12, #0x15
  43a920:	ldr	x19, [sp, #176]
  43a924:	mov	w9, w26
  43a928:	str	w10, [sp, #196]
  43a92c:	cset	w10, eq  // eq = none
  43a930:	tst	w11, #0x2
  43a934:	add	x8, x8, #0x18
  43a938:	cset	w11, eq  // eq = none
  43a93c:	str	x8, [sp, #80]
  43a940:	sub	x8, x9, #0x1
  43a944:	mov	x27, xzr
  43a948:	mov	w24, wzr
  43a94c:	mov	w28, wzr
  43a950:	and	w10, w10, w11
  43a954:	str	x8, [sp, #184]
  43a958:	mov	w8, w13
  43a95c:	str	xzr, [sp, #160]
  43a960:	str	wzr, [sp, #220]
  43a964:	stp	xzr, xzr, [sp, #120]
  43a968:	str	wzr, [sp, #168]
  43a96c:	str	xzr, [sp, #112]
  43a970:	str	wzr, [sp, #108]
  43a974:	stp	xzr, xzr, [sp, #136]
  43a978:	str	wzr, [sp, #156]
  43a97c:	str	w10, [sp, #192]
  43a980:	str	x8, [sp, #88]
  43a984:	b	43a9c8 <feof@plt+0x37cc8>
  43a988:	sub	x1, x29, #0x40
  43a98c:	b	43b184 <feof@plt+0x38484>
  43a990:	ldr	x8, [x20, #16]
  43a994:	ldr	x9, [sp, #376]
  43a998:	ldr	w20, [sp, #324]
  43a99c:	stp	x8, x9, [sp, #352]
  43a9a0:	ldr	x8, [x19]
  43a9a4:	ldr	x19, [sp, #176]
  43a9a8:	str	x8, [sp, #368]
  43a9ac:	add	x8, sp, #0x160
  43a9b0:	str	x8, [sp, #136]
  43a9b4:	mov	w13, w21
  43a9b8:	ldr	x8, [sp, #184]
  43a9bc:	add	x27, x27, #0x1
  43a9c0:	cmp	x8, x27
  43a9c4:	b.eq	43af54 <feof@plt+0x38254>  // b.none
  43a9c8:	and	x8, x27, #0xffffffff
  43a9cc:	add	x23, x19, x8, lsl #6
  43a9d0:	ldr	w9, [x23, #4]!
  43a9d4:	mov	x26, x8
  43a9d8:	add	x8, x27, #0x1
  43a9dc:	cmp	w9, #0xb
  43a9e0:	b.eq	43a9f4 <feof@plt+0x37cf4>  // b.none
  43a9e4:	cmp	w9, #0x2
  43a9e8:	b.ne	43a9f8 <feof@plt+0x37cf8>  // b.any
  43a9ec:	str	w8, [sp, #164]
  43a9f0:	b	43a9f8 <feof@plt+0x37cf8>
  43a9f4:	str	w8, [sp, #160]
  43a9f8:	lsl	x8, x26, #6
  43a9fc:	ldr	w8, [x19, x8]
  43aa00:	ldr	x9, [sp, #208]
  43aa04:	cmp	x9, x8
  43aa08:	b.ls	43af2c <feof@plt+0x3822c>  // b.plast
  43aa0c:	ldr	x9, [sp, #200]
  43aa10:	str	x23, [sp, #264]
  43aa14:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa18:	add	x1, x1, #0x274
  43aa1c:	add	x23, x9, x8
  43aa20:	mov	x0, x23
  43aa24:	mov	w21, w13
  43aa28:	bl	402b40 <strcmp@plt>
  43aa2c:	str	x23, [sp, #272]
  43aa30:	cbz	w0, 43aaf0 <feof@plt+0x37df0>
  43aa34:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa38:	mov	x0, x23
  43aa3c:	add	x1, x1, #0x280
  43aa40:	bl	402b40 <strcmp@plt>
  43aa44:	cbz	w0, 43aaf8 <feof@plt+0x37df8>
  43aa48:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa4c:	mov	x0, x23
  43aa50:	add	x1, x1, #0x28c
  43aa54:	bl	402b40 <strcmp@plt>
  43aa58:	cbz	w0, 43ab00 <feof@plt+0x37e00>
  43aa5c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa60:	mov	x0, x23
  43aa64:	add	x1, x1, #0x29a
  43aa68:	bl	402b40 <strcmp@plt>
  43aa6c:	cbz	w0, 43ab08 <feof@plt+0x37e08>
  43aa70:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa74:	mov	x0, x23
  43aa78:	add	x1, x1, #0x2a8
  43aa7c:	bl	402b40 <strcmp@plt>
  43aa80:	cbz	w0, 43ab10 <feof@plt+0x37e10>
  43aa84:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa88:	mov	x0, x23
  43aa8c:	add	x1, x1, #0x2b3
  43aa90:	bl	402b40 <strcmp@plt>
  43aa94:	cbz	w0, 43ab18 <feof@plt+0x37e18>
  43aa98:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aa9c:	mov	x0, x23
  43aaa0:	add	x1, x1, #0x2c0
  43aaa4:	bl	402b40 <strcmp@plt>
  43aaa8:	cbz	w0, 43ab20 <feof@plt+0x37e20>
  43aaac:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aab0:	mov	x0, x23
  43aab4:	add	x1, x1, #0x2cd
  43aab8:	bl	402b40 <strcmp@plt>
  43aabc:	cbz	w0, 43ab28 <feof@plt+0x37e28>
  43aac0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aac4:	mov	x0, x23
  43aac8:	add	x1, x1, #0x2dc
  43aacc:	bl	402b40 <strcmp@plt>
  43aad0:	cbz	w0, 43ab30 <feof@plt+0x37e30>
  43aad4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43aad8:	mov	x0, x23
  43aadc:	add	x1, x1, #0x2eb
  43aae0:	bl	402b40 <strcmp@plt>
  43aae4:	cbnz	w0, 43ab54 <feof@plt+0x37e54>
  43aae8:	mov	w8, #0x9                   	// #9
  43aaec:	b	43ab34 <feof@plt+0x37e34>
  43aaf0:	mov	x8, xzr
  43aaf4:	b	43ab34 <feof@plt+0x37e34>
  43aaf8:	mov	w8, #0x1                   	// #1
  43aafc:	b	43ab34 <feof@plt+0x37e34>
  43ab00:	mov	w8, #0x2                   	// #2
  43ab04:	b	43ab34 <feof@plt+0x37e34>
  43ab08:	mov	w8, #0x3                   	// #3
  43ab0c:	b	43ab34 <feof@plt+0x37e34>
  43ab10:	mov	w8, #0x4                   	// #4
  43ab14:	b	43ab34 <feof@plt+0x37e34>
  43ab18:	mov	w8, #0x5                   	// #5
  43ab1c:	b	43ab34 <feof@plt+0x37e34>
  43ab20:	mov	w8, #0x6                   	// #6
  43ab24:	b	43ab34 <feof@plt+0x37e34>
  43ab28:	mov	w8, #0x7                   	// #7
  43ab2c:	b	43ab34 <feof@plt+0x37e34>
  43ab30:	mov	w8, #0x8                   	// #8
  43ab34:	add	x9, x19, x26, lsl #6
  43ab38:	ldur	q0, [x9, #24]
  43ab3c:	add	x10, sp, #0x220
  43ab40:	add	x8, x10, x8, lsl #5
  43ab44:	str	q0, [x8]
  43ab48:	ldr	w9, [x9, #8]
  43ab4c:	ubfx	w9, w9, #11, #1
  43ab50:	str	w9, [x8, #24]
  43ab54:	ldr	w8, [sp, #220]
  43ab58:	ldr	w9, [sp, #196]
  43ab5c:	cmp	w8, #0x0
  43ab60:	cset	w8, ne  // ne = any
  43ab64:	orr	w8, w9, w8
  43ab68:	tbnz	w8, #0, 43ab84 <feof@plt+0x37e84>
  43ab6c:	ldr	x0, [sp, #272]
  43ab70:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ab74:	add	x1, x1, #0x20d
  43ab78:	bl	402b40 <strcmp@plt>
  43ab7c:	cbz	w0, 43abb0 <feof@plt+0x37eb0>
  43ab80:	str	wzr, [sp, #220]
  43ab84:	mov	w13, w21
  43ab88:	ldr	w8, [sp, #280]
  43ab8c:	orr	w8, w24, w8
  43ab90:	cbnz	w8, 43acf8 <feof@plt+0x37ff8>
  43ab94:	ldr	x0, [sp, #272]
  43ab98:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ab9c:	add	x1, x1, #0x224
  43aba0:	bl	402b40 <strcmp@plt>
  43aba4:	cbz	w0, 43ac7c <feof@plt+0x37f7c>
  43aba8:	mov	w24, wzr
  43abac:	b	43acf4 <feof@plt+0x37ff4>
  43abb0:	str	w24, [sp, #172]
  43abb4:	add	x24, x19, x26, lsl #6
  43abb8:	ldr	x3, [x24, #32]!
  43abbc:	ldr	x0, [sp, #288]
  43abc0:	add	x6, sp, #0x1d8
  43abc4:	mov	w1, w20
  43abc8:	ldur	x2, [x24, #-8]
  43abcc:	mov	x4, x22
  43abd0:	mov	x5, x25
  43abd4:	bl	43d4cc <feof@plt+0x3a7cc>
  43abd8:	cbz	w0, 43b8e4 <feof@plt+0x38be4>
  43abdc:	ldr	x19, [sp, #472]
  43abe0:	ldr	w8, [x19, #8]
  43abe4:	cmp	w8, #0x3
  43abe8:	b.ne	43ac3c <feof@plt+0x37f3c>  // b.any
  43abec:	ldr	w8, [x19]
  43abf0:	cmp	w8, #0x4
  43abf4:	b.ne	43ac3c <feof@plt+0x37f3c>  // b.any
  43abf8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43abfc:	add	x0, x19, #0xc
  43ac00:	mov	w2, #0x4                   	// #4
  43ac04:	add	x1, x1, #0x220
  43ac08:	bl	402980 <strncmp@plt>
  43ac0c:	cbnz	w0, 43ac3c <feof@plt+0x37f3c>
  43ac10:	ldr	w8, [x19, #4]
  43ac14:	ldr	x9, [x24]
  43ac18:	add	x10, x19, #0x10
  43ac1c:	add	w11, w8, #0x10
  43ac20:	cmp	x9, x11
  43ac24:	ldr	w9, [sp, #168]
  43ac28:	csel	w9, w9, w8, hi  // hi = pmore
  43ac2c:	ldr	x8, [sp, #128]
  43ac30:	str	w9, [sp, #168]
  43ac34:	csel	x8, x8, x10, hi  // hi = pmore
  43ac38:	str	x8, [sp, #128]
  43ac3c:	ldr	w24, [sp, #172]
  43ac40:	ldr	x19, [sp, #176]
  43ac44:	mov	w13, w21
  43ac48:	cbz	w21, 43acd4 <feof@plt+0x37fd4>
  43ac4c:	ldr	w8, [sp, #168]
  43ac50:	cmp	w8, w13
  43ac54:	b.ne	43baa0 <feof@plt+0x38da0>  // b.any
  43ac58:	ldr	x0, [sp, #128]
  43ac5c:	ldp	x2, x1, [sp, #88]
  43ac60:	bl	402cb0 <bcmp@plt>
  43ac64:	mov	w8, #0x1                   	// #1
  43ac68:	str	w8, [sp, #220]
  43ac6c:	cbnz	w0, 43bab4 <feof@plt+0x38db4>
  43ac70:	mov	w13, w21
  43ac74:	str	w21, [sp, #168]
  43ac78:	b	43ab88 <feof@plt+0x37e88>
  43ac7c:	add	x19, x19, x26, lsl #6
  43ac80:	ldr	x3, [x19, #32]!
  43ac84:	ldr	x0, [sp, #288]
  43ac88:	add	x6, sp, #0x1c0
  43ac8c:	mov	w1, w20
  43ac90:	ldur	x2, [x19, #-8]
  43ac94:	mov	x4, x22
  43ac98:	mov	x5, x25
  43ac9c:	bl	43d4cc <feof@plt+0x3a7cc>
  43aca0:	cbz	w0, 43b928 <feof@plt+0x38c28>
  43aca4:	ldr	x23, [sp, #448]
  43aca8:	ldr	x19, [x19]
  43acac:	mov	x0, x23
  43acb0:	mov	x1, x19
  43acb4:	bl	402c60 <strnlen@plt>
  43acb8:	add	x8, x0, #0x3
  43acbc:	and	x8, x8, #0xfffffffffffffffc
  43acc0:	add	x9, x8, #0x4
  43acc4:	cmp	x9, x19
  43acc8:	b.ls	43ace0 <feof@plt+0x37fe0>  // b.plast
  43accc:	mov	w24, #0x1                   	// #1
  43acd0:	b	43acf0 <feof@plt+0x37ff0>
  43acd4:	mov	w8, #0x1                   	// #1
  43acd8:	str	w8, [sp, #220]
  43acdc:	b	43ab88 <feof@plt+0x37e88>
  43ace0:	ldr	w8, [x23, x8]
  43ace4:	mov	w24, #0x1                   	// #1
  43ace8:	str	x23, [sp, #112]
  43acec:	str	w8, [sp, #108]
  43acf0:	ldr	x19, [sp, #176]
  43acf4:	mov	w13, w21
  43acf8:	cbnz	w28, 43ad8c <feof@plt+0x3808c>
  43acfc:	ldr	x0, [sp, #272]
  43ad00:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ad04:	add	x1, x1, #0x233
  43ad08:	bl	402b40 <strcmp@plt>
  43ad0c:	cbz	w0, 43ad18 <feof@plt+0x38018>
  43ad10:	mov	w28, wzr
  43ad14:	b	43ad88 <feof@plt+0x38088>
  43ad18:	add	x19, x19, x26, lsl #6
  43ad1c:	ldr	x3, [x19, #32]!
  43ad20:	ldr	x0, [sp, #288]
  43ad24:	add	x6, sp, #0x1a8
  43ad28:	mov	w1, w20
  43ad2c:	ldur	x2, [x19, #-8]
  43ad30:	mov	x4, x22
  43ad34:	mov	x5, x25
  43ad38:	bl	43d4cc <feof@plt+0x3a7cc>
  43ad3c:	cbz	w0, 43b934 <feof@plt+0x38c34>
  43ad40:	ldr	x28, [sp, #424]
  43ad44:	ldr	x19, [x19]
  43ad48:	mov	x0, x28
  43ad4c:	mov	x1, x19
  43ad50:	bl	402c60 <strnlen@plt>
  43ad54:	ldr	x10, [sp, #144]
  43ad58:	add	x8, x0, #0x1
  43ad5c:	cmp	x0, x19
  43ad60:	add	x9, x28, x8
  43ad64:	csel	x10, x9, x10, cc  // cc = lo, ul, last
  43ad68:	ldr	w9, [sp, #156]
  43ad6c:	sub	w8, w19, w8
  43ad70:	ldr	x19, [sp, #176]
  43ad74:	str	x28, [sp, #120]
  43ad78:	csel	w9, w8, w9, cc  // cc = lo, ul, last
  43ad7c:	mov	w28, #0x1                   	// #1
  43ad80:	str	x10, [sp, #144]
  43ad84:	str	w9, [sp, #156]
  43ad88:	mov	w13, w21
  43ad8c:	ldr	w8, [sp, #192]
  43ad90:	cbz	w8, 43a9b8 <feof@plt+0x37cb8>
  43ad94:	ldr	x8, [sp, #264]
  43ad98:	ldr	w8, [x8]
  43ad9c:	cmp	w8, #0x1
  43ada0:	b.ne	43a9b8 <feof@plt+0x37cb8>  // b.any
  43ada4:	ldr	x0, [sp, #272]
  43ada8:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43adac:	add	x1, x1, #0x245
  43adb0:	bl	402b40 <strcmp@plt>
  43adb4:	cbnz	w0, 43a9b4 <feof@plt+0x37cb4>
  43adb8:	mov	w1, w20
  43adbc:	add	x20, x19, x26, lsl #6
  43adc0:	mov	x19, x20
  43adc4:	ldr	x3, [x19, #32]!
  43adc8:	ldr	x0, [sp, #288]
  43adcc:	ldr	x6, [sp, #80]
  43add0:	mov	x4, x22
  43add4:	ldur	x2, [x19, #-8]
  43add8:	mov	x5, x25
  43addc:	bl	43d4cc <feof@plt+0x3a7cc>
  43ade0:	cbnz	w0, 43a990 <feof@plt+0x37c90>
  43ade4:	str	w24, [sp, #172]
  43ade8:	ldr	x24, [sp, #136]
  43adec:	ldr	w20, [sp, #324]
  43adf0:	ldr	x21, [sp, #288]
  43adf4:	b	43b0b0 <feof@plt+0x383b0>
  43adf8:	ldr	x19, [sp, #176]
  43adfc:	mov	w23, wzr
  43ae00:	str	wzr, [sp, #220]
  43ae04:	stp	xzr, xzr, [sp, #120]
  43ae08:	str	wzr, [sp, #168]
  43ae0c:	mov	w24, wzr
  43ae10:	mov	x27, xzr
  43ae14:	str	wzr, [sp, #108]
  43ae18:	mov	w28, wzr
  43ae1c:	stp	xzr, xzr, [sp, #136]
  43ae20:	str	wzr, [sp, #156]
  43ae24:	mov	w10, w23
  43ae28:	ldr	w9, [sp, #280]
  43ae2c:	ldr	x21, [sp, #288]
  43ae30:	mov	w8, wzr
  43ae34:	cbnz	w9, 43af64 <feof@plt+0x38264>
  43ae38:	ldr	x23, [sp, #136]
  43ae3c:	cbz	w10, 43af68 <feof@plt+0x38268>
  43ae40:	sub	w8, w10, #0x1
  43ae44:	str	w24, [sp, #172]
  43ae48:	mov	x24, x23
  43ae4c:	add	x23, x19, x8, lsl #6
  43ae50:	ldr	w19, [x23, #40]
  43ae54:	ldr	w8, [sp, #104]
  43ae58:	cmp	w19, w8
  43ae5c:	b.cs	43b09c <feof@plt+0x3839c>  // b.hs, b.nlast
  43ae60:	ldr	x3, [x23, #32]!
  43ae64:	add	x6, sp, #0x208
  43ae68:	mov	x0, x21
  43ae6c:	mov	w1, w20
  43ae70:	ldur	x2, [x23, #-8]
  43ae74:	mov	x4, x22
  43ae78:	mov	x5, x25
  43ae7c:	bl	43d4cc <feof@plt+0x3a7cc>
  43ae80:	cbz	w0, 43b0b0 <feof@plt+0x383b0>
  43ae84:	ldr	x9, [sp, #176]
  43ae88:	sub	w8, w19, #0x1
  43ae8c:	mov	x19, x21
  43ae90:	add	x6, sp, #0x1f0
  43ae94:	add	x21, x9, x8, lsl #6
  43ae98:	ldr	x3, [x21, #32]!
  43ae9c:	mov	x0, x19
  43aea0:	mov	w1, w20
  43aea4:	mov	x4, x22
  43aea8:	ldur	x2, [x21, #-8]
  43aeac:	mov	x5, x25
  43aeb0:	bl	43d4cc <feof@plt+0x3a7cc>
  43aeb4:	cbz	w0, 43b8d0 <feof@plt+0x38bd0>
  43aeb8:	mov	w1, #0x18                  	// #24
  43aebc:	mov	x0, x19
  43aec0:	mov	x2, x22
  43aec4:	mov	x3, x25
  43aec8:	bl	439a30 <feof@plt+0x36d30>
  43aecc:	cbz	x0, 43b944 <feof@plt+0x38c44>
  43aed0:	ldr	x8, [x21]
  43aed4:	ldr	x9, [x23]
  43aed8:	ldr	x1, [sp, #520]
  43aedc:	ldr	x19, [sp, #496]
  43aee0:	str	x8, [sp, #280]
  43aee4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  43aee8:	movk	x8, #0xaaab
  43aeec:	umulh	x8, x9, x8
  43aef0:	mov	x26, x0
  43aef4:	cmp	x9, #0x18
  43aef8:	lsr	x23, x8, #4
  43aefc:	str	w28, [sp, #272]
  43af00:	str	x9, [sp, #264]
  43af04:	b.cc	43b94c <feof@plt+0x38c4c>  // b.lo, b.ul, b.last
  43af08:	cmp	x23, #0x1
  43af0c:	csinc	x10, x23, xzr, hi  // hi = pmore
  43af10:	cmp	x10, #0x2
  43af14:	b.cs	43bb48 <feof@plt+0x38e48>  // b.hs, b.nlast
  43af18:	ldr	x21, [sp, #288]
  43af1c:	mov	x8, xzr
  43af20:	mov	x28, xzr
  43af24:	mov	x9, x1
  43af28:	b	43bbf4 <feof@plt+0x38ef4>
  43af2c:	str	w24, [sp, #172]
  43af30:	ldr	x24, [sp, #136]
  43af34:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43af38:	add	x1, x1, #0x1ef
  43af3c:	mov	x0, x25
  43af40:	mov	w2, wzr
  43af44:	blr	x22
  43af48:	mov	w19, wzr
  43af4c:	ldr	x21, [sp, #288]
  43af50:	b	43b0b4 <feof@plt+0x383b4>
  43af54:	ldr	x27, [sp, #112]
  43af58:	ldp	w23, w10, [sp, #160]
  43af5c:	cbnz	w10, 43ae28 <feof@plt+0x38128>
  43af60:	b	43ae24 <feof@plt+0x38124>
  43af64:	ldr	x23, [sp, #136]
  43af68:	sub	x1, x29, #0x40
  43af6c:	mov	x0, x21
  43af70:	mov	x2, x22
  43af74:	mov	x3, x25
  43af78:	str	w8, [sp, #324]
  43af7c:	mov	w19, w28
  43af80:	bl	43d58c <feof@plt+0x3a88c>
  43af84:	sub	x1, x29, #0x58
  43af88:	mov	x0, x21
  43af8c:	mov	x2, x22
  43af90:	mov	x3, x25
  43af94:	bl	43d58c <feof@plt+0x3a88c>
  43af98:	ldr	x8, [sp, #128]
  43af9c:	cbz	x8, 43b29c <feof@plt+0x3859c>
  43afa0:	ldr	w26, [sp, #168]
  43afa4:	str	w24, [sp, #172]
  43afa8:	mov	x24, x23
  43afac:	str	x27, [sp, #112]
  43afb0:	mov	w23, w26
  43afb4:	lsl	x8, x23, #1
  43afb8:	add	x27, x8, #0x21
  43afbc:	mov	x0, x21
  43afc0:	mov	x1, x27
  43afc4:	mov	x2, x22
  43afc8:	mov	x3, x25
  43afcc:	bl	439a30 <feof@plt+0x36d30>
  43afd0:	cbz	x0, 43b198 <feof@plt+0x38498>
  43afd4:	adrp	x8, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43afd8:	add	x8, x8, #0x318
  43afdc:	ldur	q0, [x8, #9]
  43afe0:	ldr	q1, [x8]
  43afe4:	mov	x28, x0
  43afe8:	stur	q0, [x0, #9]
  43afec:	str	q1, [x0]
  43aff0:	cbz	w26, 43b1a8 <feof@plt+0x384a8>
  43aff4:	ldr	x11, [sp, #128]
  43aff8:	ldrb	w9, [x11]
  43affc:	lsr	w8, w9, #4
  43b000:	cmp	w9, #0xa0
  43b004:	orr	w10, w8, #0x30
  43b008:	add	w8, w8, #0x57
  43b00c:	csel	w8, w10, w8, cc  // cc = lo, ul, last
  43b010:	mov	w10, #0x30                  	// #48
  43b014:	bfxil	w10, w9, #0, #4
  43b018:	and	w9, w9, #0xf
  43b01c:	cmp	w9, #0xa
  43b020:	add	w9, w9, #0x57
  43b024:	strb	w8, [x28, #25]
  43b028:	add	x8, x28, #0x1c
  43b02c:	csel	w9, w10, w9, cc  // cc = lo, ul, last
  43b030:	mov	w10, #0x2f                  	// #47
  43b034:	cmp	w26, #0x1
  43b038:	strb	w9, [x28, #26]
  43b03c:	strb	w10, [x28, #27]
  43b040:	b.eq	43b1ac <feof@plt+0x384ac>  // b.none
  43b044:	sub	x9, x23, #0x1
  43b048:	add	x10, x11, #0x1
  43b04c:	ldrb	w12, [x10], #1
  43b050:	lsr	w11, w12, #4
  43b054:	cmp	w12, #0xa0
  43b058:	orr	w13, w11, #0x30
  43b05c:	add	w11, w11, #0x57
  43b060:	csel	w11, w13, w11, cc  // cc = lo, ul, last
  43b064:	mov	w13, #0x30                  	// #48
  43b068:	bfxil	w13, w12, #0, #4
  43b06c:	and	w12, w12, #0xf
  43b070:	cmp	w12, #0xa
  43b074:	add	w12, w12, #0x57
  43b078:	strb	w11, [x8]
  43b07c:	add	x11, x8, #0x2
  43b080:	csel	w12, w13, w12, cc  // cc = lo, ul, last
  43b084:	subs	x9, x9, #0x1
  43b088:	strb	w12, [x8, #1]
  43b08c:	mov	x8, x11
  43b090:	b.ne	43b04c <feof@plt+0x3834c>  // b.any
  43b094:	mov	x8, x11
  43b098:	b	43b1ac <feof@plt+0x384ac>
  43b09c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43b0a0:	add	x1, x1, #0x24a
  43b0a4:	mov	x0, x25
  43b0a8:	mov	w2, wzr
  43b0ac:	blr	x22
  43b0b0:	mov	w19, wzr
  43b0b4:	mov	w23, #0x1                   	// #1
  43b0b8:	sub	x1, x29, #0x40
  43b0bc:	mov	x0, x21
  43b0c0:	mov	x2, x22
  43b0c4:	mov	x3, x25
  43b0c8:	bl	43d58c <feof@plt+0x3a88c>
  43b0cc:	sub	x1, x29, #0x58
  43b0d0:	mov	x0, x21
  43b0d4:	mov	x2, x22
  43b0d8:	mov	x3, x25
  43b0dc:	bl	43d58c <feof@plt+0x3a88c>
  43b0e0:	tbnz	w23, #0, 43b0f8 <feof@plt+0x383f8>
  43b0e4:	add	x1, sp, #0x208
  43b0e8:	mov	x0, x21
  43b0ec:	mov	x2, x22
  43b0f0:	mov	x3, x25
  43b0f4:	bl	43d58c <feof@plt+0x3a88c>
  43b0f8:	mov	w23, wzr
  43b0fc:	cbz	w19, 43b114 <feof@plt+0x38414>
  43b100:	add	x1, sp, #0x1f0
  43b104:	mov	x0, x21
  43b108:	mov	x2, x22
  43b10c:	mov	x3, x25
  43b110:	bl	43d58c <feof@plt+0x3a88c>
  43b114:	ldr	w8, [sp, #172]
  43b118:	cbz	w8, 43b130 <feof@plt+0x38430>
  43b11c:	add	x1, sp, #0x1c0
  43b120:	mov	x0, x21
  43b124:	mov	x2, x22
  43b128:	mov	x3, x25
  43b12c:	bl	43d58c <feof@plt+0x3a88c>
  43b130:	cbz	w28, 43b148 <feof@plt+0x38448>
  43b134:	add	x1, sp, #0x1a8
  43b138:	mov	x0, x21
  43b13c:	mov	x2, x22
  43b140:	mov	x3, x25
  43b144:	bl	43d58c <feof@plt+0x3a88c>
  43b148:	ldr	w8, [sp, #220]
  43b14c:	cbz	w8, 43b164 <feof@plt+0x38464>
  43b150:	add	x1, sp, #0x1d8
  43b154:	mov	x0, x21
  43b158:	mov	x2, x22
  43b15c:	mov	x3, x25
  43b160:	bl	43d58c <feof@plt+0x3a88c>
  43b164:	cbz	w23, 43b17c <feof@plt+0x3847c>
  43b168:	add	x1, sp, #0x190
  43b16c:	mov	x0, x21
  43b170:	mov	x2, x22
  43b174:	mov	x3, x25
  43b178:	bl	43d58c <feof@plt+0x3a88c>
  43b17c:	cbz	x24, 43a770 <feof@plt+0x37a70>
  43b180:	add	x1, x24, #0x18
  43b184:	mov	x0, x21
  43b188:	mov	x2, x22
  43b18c:	mov	x3, x25
  43b190:	bl	43d58c <feof@plt+0x3a88c>
  43b194:	b	43a770 <feof@plt+0x37a70>
  43b198:	mov	x23, x24
  43b19c:	ldr	w24, [sp, #172]
  43b1a0:	ldr	x27, [sp, #112]
  43b1a4:	b	43b29c <feof@plt+0x3859c>
  43b1a8:	add	x8, x28, #0x19
  43b1ac:	mov	w10, #0x642e                	// #25646
  43b1b0:	mov	w9, #0x6775                	// #26485
  43b1b4:	movk	w10, #0x6265, lsl #16
  43b1b8:	add	x3, sp, #0x190
  43b1bc:	mov	x0, x28
  43b1c0:	mov	x1, x22
  43b1c4:	mov	x2, x25
  43b1c8:	mov	x23, x24
  43b1cc:	strh	w9, [x8, #4]
  43b1d0:	str	w10, [x8]
  43b1d4:	strb	wzr, [x8, #6]
  43b1d8:	bl	43a1b4 <feof@plt+0x374b4>
  43b1dc:	mov	w26, w0
  43b1e0:	mov	x0, x21
  43b1e4:	mov	x1, x28
  43b1e8:	mov	x2, x27
  43b1ec:	mov	x3, x22
  43b1f0:	mov	x4, x25
  43b1f4:	bl	439bf4 <feof@plt+0x36ef4>
  43b1f8:	ldr	w24, [sp, #172]
  43b1fc:	ldr	x27, [sp, #112]
  43b200:	tbnz	w26, #31, 43b29c <feof@plt+0x3859c>
  43b204:	add	x1, sp, #0x1d8
  43b208:	mov	x0, x21
  43b20c:	mov	x2, x22
  43b210:	mov	x3, x25
  43b214:	bl	43d58c <feof@plt+0x3a88c>
  43b218:	cbz	w24, 43b230 <feof@plt+0x38530>
  43b21c:	add	x1, sp, #0x1c0
  43b220:	mov	x0, x21
  43b224:	mov	x2, x22
  43b228:	mov	x3, x25
  43b22c:	bl	43d58c <feof@plt+0x3a88c>
  43b230:	cbz	w19, 43b248 <feof@plt+0x38548>
  43b234:	add	x1, sp, #0x1a8
  43b238:	mov	x0, x21
  43b23c:	mov	x2, x22
  43b240:	mov	x3, x25
  43b244:	bl	43d58c <feof@plt+0x3a88c>
  43b248:	mov	w8, #0x1                   	// #1
  43b24c:	str	w8, [sp, #24]
  43b250:	ldr	x8, [sp, #224]
  43b254:	ldp	x7, x3, [sp, #248]
  43b258:	ldr	x6, [sp, #240]
  43b25c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  43b260:	add	x1, x1, #0xce0
  43b264:	mov	x0, x21
  43b268:	mov	w2, w26
  43b26c:	mov	x4, x22
  43b270:	mov	x5, x25
  43b274:	str	wzr, [sp, #40]
  43b278:	str	xzr, [sp, #32]
  43b27c:	str	wzr, [sp, #16]
  43b280:	stp	x8, xzr, [sp]
  43b284:	bl	43a5d4 <feof@plt+0x378d4>
  43b288:	mov	x2, x25
  43b28c:	mov	w25, w0
  43b290:	tbz	w0, #31, 43b374 <feof@plt+0x38674>
  43b294:	mov	w0, w26
  43b298:	b	43b42c <feof@plt+0x3872c>
  43b29c:	ldr	w8, [sp, #220]
  43b2a0:	cbz	w8, 43b2b8 <feof@plt+0x385b8>
  43b2a4:	add	x1, sp, #0x1d8
  43b2a8:	mov	x0, x21
  43b2ac:	mov	x2, x22
  43b2b0:	mov	x3, x25
  43b2b4:	bl	43d58c <feof@plt+0x3a88c>
  43b2b8:	ldr	x26, [sp, #232]
  43b2bc:	cbz	x23, 43b2d4 <feof@plt+0x385d4>
  43b2c0:	add	x1, x23, #0x18
  43b2c4:	mov	x0, x21
  43b2c8:	mov	x2, x22
  43b2cc:	mov	x3, x25
  43b2d0:	bl	43d58c <feof@plt+0x3a88c>
  43b2d4:	cbz	x27, 43b37c <feof@plt+0x3867c>
  43b2d8:	ldr	w3, [sp, #108]
  43b2dc:	mov	x0, x21
  43b2e0:	mov	x1, x26
  43b2e4:	mov	x2, x27
  43b2e8:	mov	x4, x22
  43b2ec:	mov	x5, x25
  43b2f0:	bl	43cf30 <feof@plt+0x3a230>
  43b2f4:	tbnz	w0, #31, 43b37c <feof@plt+0x3867c>
  43b2f8:	mov	w27, w0
  43b2fc:	add	x1, sp, #0x1c0
  43b300:	mov	x0, x21
  43b304:	mov	x2, x22
  43b308:	mov	x3, x25
  43b30c:	bl	43d58c <feof@plt+0x3a88c>
  43b310:	cbz	w19, 43b328 <feof@plt+0x38628>
  43b314:	add	x1, sp, #0x1a8
  43b318:	mov	x0, x21
  43b31c:	mov	x2, x22
  43b320:	mov	x3, x25
  43b324:	bl	43d58c <feof@plt+0x3a88c>
  43b328:	mov	w8, #0x1                   	// #1
  43b32c:	str	w8, [sp, #24]
  43b330:	ldr	x8, [sp, #224]
  43b334:	ldp	x7, x3, [sp, #248]
  43b338:	ldr	x6, [sp, #240]
  43b33c:	adrp	x1, 455000 <_obstack_begin_1@@Base+0xa4>
  43b340:	add	x1, x1, #0xce0
  43b344:	mov	x0, x21
  43b348:	mov	w2, w27
  43b34c:	mov	x4, x22
  43b350:	mov	x5, x25
  43b354:	str	wzr, [sp, #40]
  43b358:	str	xzr, [sp, #32]
  43b35c:	str	wzr, [sp, #16]
  43b360:	stp	x8, xzr, [sp]
  43b364:	bl	43a5d4 <feof@plt+0x378d4>
  43b368:	mov	x2, x25
  43b36c:	mov	w25, w0
  43b370:	tbnz	w0, #31, 43b428 <feof@plt+0x38728>
  43b374:	mov	w0, w20
  43b378:	b	43b42c <feof@plt+0x3872c>
  43b37c:	cbz	w24, 43b394 <feof@plt+0x38694>
  43b380:	add	x1, sp, #0x1c0
  43b384:	mov	x0, x21
  43b388:	mov	x2, x22
  43b38c:	mov	x3, x25
  43b390:	bl	43d58c <feof@plt+0x3a88c>
  43b394:	ldr	x2, [sp, #120]
  43b398:	str	xzr, [sp, #344]
  43b39c:	cbz	x2, 43b438 <feof@plt+0x38738>
  43b3a0:	mov	x0, x21
  43b3a4:	mov	x1, x26
  43b3a8:	mov	w3, wzr
  43b3ac:	mov	x4, x22
  43b3b0:	mov	x5, x25
  43b3b4:	bl	43cf30 <feof@plt+0x3a230>
  43b3b8:	tbnz	w0, #31, 43b438 <feof@plt+0x38738>
  43b3bc:	ldr	w8, [sp, #156]
  43b3c0:	ldp	x7, x3, [sp, #248]
  43b3c4:	ldr	x6, [sp, #240]
  43b3c8:	mov	w27, w0
  43b3cc:	str	w8, [sp, #40]
  43b3d0:	ldr	x8, [sp, #144]
  43b3d4:	add	x9, sp, #0x158
  43b3d8:	mov	x0, x21
  43b3dc:	mov	x1, x26
  43b3e0:	str	x8, [sp, #32]
  43b3e4:	mov	w8, #0x1                   	// #1
  43b3e8:	str	w8, [sp, #24]
  43b3ec:	ldr	x8, [sp, #224]
  43b3f0:	mov	w2, w27
  43b3f4:	mov	x4, x22
  43b3f8:	mov	x5, x25
  43b3fc:	str	wzr, [sp, #16]
  43b400:	stp	x8, x9, [sp]
  43b404:	bl	43a5d4 <feof@plt+0x378d4>
  43b408:	mov	x3, x25
  43b40c:	mov	w25, w0
  43b410:	add	x1, sp, #0x1a8
  43b414:	mov	x0, x21
  43b418:	mov	x2, x22
  43b41c:	bl	43d58c <feof@plt+0x3a88c>
  43b420:	tbz	w25, #31, 43b450 <feof@plt+0x38750>
  43b424:	ldr	x2, [sp, #304]
  43b428:	mov	w0, w27
  43b42c:	mov	x1, x22
  43b430:	bl	43a250 <feof@plt+0x37550>
  43b434:	b	43a78c <feof@plt+0x37a8c>
  43b438:	cbz	w19, 43b450 <feof@plt+0x38750>
  43b43c:	ldr	x3, [sp, #304]
  43b440:	add	x1, sp, #0x1a8
  43b444:	mov	x0, x21
  43b448:	mov	x2, x22
  43b44c:	bl	43d58c <feof@plt+0x3a88c>
  43b450:	ldr	x8, [sp, #552]
  43b454:	ldr	x10, [sp, #544]
  43b458:	ldr	x9, [sp, #584]
  43b45c:	cmp	x8, #0x0
  43b460:	add	x11, x10, x8
  43b464:	bic	x8, x11, x11, asr #63
  43b468:	csel	x25, xzr, x10, eq  // eq = none
  43b46c:	csel	x8, xzr, x8, eq  // eq = none
  43b470:	cbz	x9, 43b490 <feof@plt+0x38790>
  43b474:	ldr	x10, [sp, #576]
  43b478:	cmp	x10, x25
  43b47c:	add	x9, x10, x9
  43b480:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b484:	csel	x25, x10, x25, eq  // eq = none
  43b488:	cmp	x9, x8
  43b48c:	csel	x8, x9, x8, gt
  43b490:	ldr	w19, [sp, #324]
  43b494:	ldr	x9, [sp, #616]
  43b498:	cbz	x9, 43b4b8 <feof@plt+0x387b8>
  43b49c:	ldr	x10, [sp, #608]
  43b4a0:	cmp	x10, x25
  43b4a4:	add	x9, x10, x9
  43b4a8:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b4ac:	csel	x25, x10, x25, eq  // eq = none
  43b4b0:	cmp	x9, x8
  43b4b4:	csel	x8, x9, x8, gt
  43b4b8:	ldr	x9, [sp, #648]
  43b4bc:	cbz	x9, 43b4dc <feof@plt+0x387dc>
  43b4c0:	ldr	x10, [sp, #640]
  43b4c4:	cmp	x10, x25
  43b4c8:	add	x9, x10, x9
  43b4cc:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b4d0:	csel	x25, x10, x25, eq  // eq = none
  43b4d4:	cmp	x9, x8
  43b4d8:	csel	x8, x9, x8, gt
  43b4dc:	ldr	x9, [sp, #680]
  43b4e0:	cbz	x9, 43b500 <feof@plt+0x38800>
  43b4e4:	ldr	x10, [sp, #672]
  43b4e8:	cmp	x10, x25
  43b4ec:	add	x9, x10, x9
  43b4f0:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b4f4:	csel	x25, x10, x25, eq  // eq = none
  43b4f8:	cmp	x9, x8
  43b4fc:	csel	x8, x9, x8, gt
  43b500:	ldr	x9, [sp, #712]
  43b504:	cbz	x9, 43b524 <feof@plt+0x38824>
  43b508:	ldr	x10, [sp, #704]
  43b50c:	cmp	x10, x25
  43b510:	add	x9, x10, x9
  43b514:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b518:	csel	x25, x10, x25, eq  // eq = none
  43b51c:	cmp	x9, x8
  43b520:	csel	x8, x9, x8, gt
  43b524:	ldr	x9, [sp, #744]
  43b528:	cbz	x9, 43b548 <feof@plt+0x38848>
  43b52c:	ldr	x10, [sp, #736]
  43b530:	cmp	x10, x25
  43b534:	add	x9, x10, x9
  43b538:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b53c:	csel	x25, x10, x25, eq  // eq = none
  43b540:	cmp	x9, x8
  43b544:	csel	x8, x9, x8, gt
  43b548:	ldr	x9, [sp, #776]
  43b54c:	cbz	x9, 43b56c <feof@plt+0x3886c>
  43b550:	ldr	x10, [sp, #768]
  43b554:	cmp	x10, x25
  43b558:	add	x9, x10, x9
  43b55c:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b560:	csel	x25, x10, x25, eq  // eq = none
  43b564:	cmp	x9, x8
  43b568:	csel	x8, x9, x8, gt
  43b56c:	ldr	x9, [sp, #808]
  43b570:	cbz	x9, 43b590 <feof@plt+0x38890>
  43b574:	ldr	x10, [sp, #800]
  43b578:	cmp	x10, x25
  43b57c:	add	x9, x10, x9
  43b580:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b584:	csel	x25, x10, x25, eq  // eq = none
  43b588:	cmp	x9, x8
  43b58c:	csel	x8, x9, x8, gt
  43b590:	ldr	x9, [sp, #840]
  43b594:	cbz	x9, 43b5b4 <feof@plt+0x388b4>
  43b598:	ldr	x10, [sp, #832]
  43b59c:	cmp	x10, x25
  43b5a0:	add	x9, x10, x9
  43b5a4:	ccmp	x25, #0x0, #0x4, ge  // ge = tcont
  43b5a8:	csel	x25, x10, x25, eq  // eq = none
  43b5ac:	cmp	x9, x8
  43b5b0:	csel	x8, x9, x8, gt
  43b5b4:	cbz	x25, 43b8b0 <feof@plt+0x38bb0>
  43b5b8:	cbz	x8, 43b8b0 <feof@plt+0x38bb0>
  43b5bc:	ldr	x19, [sp, #304]
  43b5c0:	sub	x3, x8, x25
  43b5c4:	add	x6, sp, #0x190
  43b5c8:	mov	x0, x21
  43b5cc:	mov	w1, w20
  43b5d0:	mov	x2, x25
  43b5d4:	mov	x4, x22
  43b5d8:	mov	x5, x19
  43b5dc:	bl	43d4cc <feof@plt+0x3a7cc>
  43b5e0:	cbz	w0, 43b8f0 <feof@plt+0x38bf0>
  43b5e4:	mov	w0, w20
  43b5e8:	mov	x1, x22
  43b5ec:	mov	x2, x19
  43b5f0:	bl	43a250 <feof@plt+0x37550>
  43b5f4:	mov	w23, #0x1                   	// #1
  43b5f8:	cbz	w0, 43bae8 <feof@plt+0x38de8>
  43b5fc:	ldr	x11, [sp, #544]
  43b600:	ldr	x9, [sp, #400]
  43b604:	ldr	x8, [sp, #552]
  43b608:	ldr	x12, [sp, #576]
  43b60c:	ldr	x14, [sp, #608]
  43b610:	ldr	x16, [sp, #640]
  43b614:	ldr	x18, [sp, #672]
  43b618:	ldr	x1, [sp, #704]
  43b61c:	ldr	x3, [sp, #736]
  43b620:	ldr	x5, [sp, #768]
  43b624:	ldr	x7, [sp, #800]
  43b628:	ldr	x20, [sp, #832]
  43b62c:	ldr	x10, [sp, #584]
  43b630:	ldr	x13, [sp, #616]
  43b634:	ldr	x15, [sp, #648]
  43b638:	sub	x11, x11, x25
  43b63c:	ldr	x17, [sp, #680]
  43b640:	sub	x12, x12, x25
  43b644:	sub	x14, x14, x25
  43b648:	sub	x16, x16, x25
  43b64c:	sub	x18, x18, x25
  43b650:	sub	x1, x1, x25
  43b654:	sub	x3, x3, x25
  43b658:	sub	x5, x5, x25
  43b65c:	sub	x7, x7, x25
  43b660:	sub	x20, x20, x25
  43b664:	cmp	x8, #0x0
  43b668:	add	x11, x9, x11
  43b66c:	ldr	x0, [sp, #712]
  43b670:	add	x12, x9, x12
  43b674:	add	x14, x9, x14
  43b678:	add	x16, x9, x16
  43b67c:	add	x18, x9, x18
  43b680:	add	x1, x9, x1
  43b684:	add	x3, x9, x3
  43b688:	add	x5, x9, x5
  43b68c:	add	x7, x9, x7
  43b690:	add	x9, x9, x20
  43b694:	cset	w20, ne  // ne = any
  43b698:	cinc	w21, w23, ne  // ne = any
  43b69c:	csel	x11, xzr, x11, eq  // eq = none
  43b6a0:	cmp	x10, #0x0
  43b6a4:	ldr	x2, [sp, #744]
  43b6a8:	csel	w10, w20, w21, eq  // eq = none
  43b6ac:	csel	x12, xzr, x12, eq  // eq = none
  43b6b0:	cmp	x13, #0x0
  43b6b4:	ldr	x4, [sp, #776]
  43b6b8:	str	x11, [sp, #560]
  43b6bc:	csel	x11, xzr, x14, eq  // eq = none
  43b6c0:	cinc	w10, w10, ne  // ne = any
  43b6c4:	cmp	x15, #0x0
  43b6c8:	ldr	x6, [sp, #808]
  43b6cc:	str	x12, [sp, #592]
  43b6d0:	csel	x12, xzr, x16, eq  // eq = none
  43b6d4:	cinc	w10, w10, ne  // ne = any
  43b6d8:	cmp	x17, #0x0
  43b6dc:	ldr	x19, [sp, #840]
  43b6e0:	str	x11, [sp, #624]
  43b6e4:	str	x12, [sp, #656]
  43b6e8:	csel	x11, xzr, x18, eq  // eq = none
  43b6ec:	cinc	w12, w10, ne  // ne = any
  43b6f0:	cmp	x0, #0x0
  43b6f4:	csel	x10, xzr, x1, eq  // eq = none
  43b6f8:	cmp	x2, #0x0
  43b6fc:	ldr	x21, [sp, #288]
  43b700:	str	x10, [sp, #720]
  43b704:	csel	x10, xzr, x3, eq  // eq = none
  43b708:	cmp	x4, #0x0
  43b70c:	ldr	x20, [x29, #104]
  43b710:	str	x11, [sp, #688]
  43b714:	csel	x11, xzr, x5, eq  // eq = none
  43b718:	cmp	x6, #0x0
  43b71c:	str	x10, [sp, #752]
  43b720:	csel	x10, xzr, x7, eq  // eq = none
  43b724:	cmp	x19, #0x0
  43b728:	mov	x24, xzr
  43b72c:	mov	x22, xzr
  43b730:	mov	w19, w12
  43b734:	csel	x9, xzr, x9, eq  // eq = none
  43b738:	add	x25, sp, #0x220
  43b73c:	str	x11, [sp, #784]
  43b740:	str	x10, [sp, #816]
  43b744:	str	x9, [sp, #848]
  43b748:	cbnz	x8, 43b7cc <feof@plt+0x38acc>
  43b74c:	b	43b760 <feof@plt+0x38a60>
  43b750:	add	x8, x25, x24
  43b754:	ldr	x8, [x8, #40]
  43b758:	add	x24, x24, #0x20
  43b75c:	cbnz	x8, 43b7cc <feof@plt+0x38acc>
  43b760:	add	x23, x25, x24
  43b764:	ldr	x2, [x23, #168]
  43b768:	cbz	x2, 43b7cc <feof@plt+0x38acc>
  43b76c:	mov	w26, w19
  43b770:	cbnz	x22, 43b790 <feof@plt+0x38a90>
  43b774:	ldp	x3, x2, [sp, #304]
  43b778:	mov	w1, #0x13b4                	// #5044
  43b77c:	mov	x0, x21
  43b780:	bl	439a30 <feof@plt+0x36d30>
  43b784:	cbz	x0, 43bc34 <feof@plt+0x38f34>
  43b788:	ldr	x2, [x23, #168]
  43b78c:	mov	x22, x0
  43b790:	add	x19, x25, x24
  43b794:	ldr	x1, [x19, #176]
  43b798:	ldp	x5, x4, [sp, #304]
  43b79c:	add	x6, sp, #0x150
  43b7a0:	add	x7, sp, #0x148
  43b7a4:	mov	x0, x21
  43b7a8:	mov	x3, x22
  43b7ac:	stp	xzr, xzr, [sp, #328]
  43b7b0:	bl	43a344 <feof@plt+0x37644>
  43b7b4:	cbz	w0, 43bc34 <feof@plt+0x38f34>
  43b7b8:	ldp	x9, x8, [sp, #328]
  43b7bc:	str	x8, [x19, #16]
  43b7c0:	str	x9, [x23, #8]
  43b7c4:	str	wzr, [x19, #24]
  43b7c8:	mov	w19, w26
  43b7cc:	cmp	x24, #0x80
  43b7d0:	b.ne	43b750 <feof@plt+0x38a50>  // b.any
  43b7d4:	ldr	x25, [sp, #304]
  43b7d8:	mov	x24, xzr
  43b7dc:	add	x28, sp, #0x220
  43b7e0:	b	43b80c <feof@plt+0x38b0c>
  43b7e4:	mov	x25, xzr
  43b7e8:	mov	x8, xzr
  43b7ec:	str	x25, [x23, #16]
  43b7f0:	ldr	x25, [sp, #304]
  43b7f4:	sub	w19, w19, #0x1
  43b7f8:	str	x8, [x27, #8]
  43b7fc:	str	wzr, [x27, #24]
  43b800:	add	x24, x24, #0x20
  43b804:	cmp	x24, #0xa0
  43b808:	b.eq	43babc <feof@plt+0x38dbc>  // b.none
  43b80c:	add	x27, x28, x24
  43b810:	ldr	x8, [x27, #8]
  43b814:	cbz	x8, 43b800 <feof@plt+0x38b00>
  43b818:	ldr	w9, [x27, #24]
  43b81c:	cbz	w9, 43b800 <feof@plt+0x38b00>
  43b820:	cbnz	x22, 43b844 <feof@plt+0x38b44>
  43b824:	ldr	x2, [sp, #312]
  43b828:	mov	w1, #0x13b4                	// #5044
  43b82c:	mov	x0, x21
  43b830:	mov	x3, x25
  43b834:	bl	439a30 <feof@plt+0x36d30>
  43b838:	cbz	x0, 43bd34 <feof@plt+0x39034>
  43b83c:	ldr	x8, [x27, #8]
  43b840:	mov	x22, x0
  43b844:	subs	x26, x8, #0x18
  43b848:	add	x23, x28, x24
  43b84c:	b.cc	43b7e4 <feof@plt+0x38ae4>  // b.lo, b.ul, b.last
  43b850:	ldr	x21, [x23, #16]
  43b854:	ldr	w8, [x21]
  43b858:	cmp	w8, #0x1
  43b85c:	b.ne	43b8a0 <feof@plt+0x38ba0>  // b.any
  43b860:	ldr	x1, [x21, #8]
  43b864:	ldr	x0, [sp, #288]
  43b868:	ldr	x2, [sp, #312]
  43b86c:	mov	x3, x25
  43b870:	bl	439a30 <feof@plt+0x36d30>
  43b874:	cbz	x0, 43bd3c <feof@plt+0x3903c>
  43b878:	ldr	x4, [x21, #8]
  43b87c:	mov	x25, x0
  43b880:	add	x0, x21, #0x18
  43b884:	mov	x1, x26
  43b888:	mov	x2, x22
  43b88c:	mov	x3, x25
  43b890:	bl	43bf78 <feof@plt+0x39278>
  43b894:	cbz	w0, 43b8a0 <feof@plt+0x38ba0>
  43b898:	ldr	x8, [x21, #8]
  43b89c:	b	43b8a8 <feof@plt+0x38ba8>
  43b8a0:	mov	x25, xzr
  43b8a4:	mov	x8, xzr
  43b8a8:	ldr	x21, [sp, #288]
  43b8ac:	b	43b7ec <feof@plt+0x38aec>
  43b8b0:	ldr	x25, [sp, #304]
  43b8b4:	mov	w0, w20
  43b8b8:	mov	x1, x22
  43b8bc:	mov	x2, x25
  43b8c0:	bl	43a250 <feof@plt+0x37550>
  43b8c4:	cbz	w0, 43b90c <feof@plt+0x38c0c>
  43b8c8:	mov	w25, #0x1                   	// #1
  43b8cc:	b	43a78c <feof@plt+0x37a8c>
  43b8d0:	mov	w8, wzr
  43b8d4:	mov	w23, wzr
  43b8d8:	mov	x21, x19
  43b8dc:	mov	w19, wzr
  43b8e0:	b	43b0b8 <feof@plt+0x383b8>
  43b8e4:	ldr	x24, [sp, #136]
  43b8e8:	str	wzr, [sp, #220]
  43b8ec:	b	43af48 <feof@plt+0x38248>
  43b8f0:	mov	w28, wzr
  43b8f4:	mov	x24, xzr
  43b8f8:	mov	w23, wzr
  43b8fc:	mov	x25, x19
  43b900:	str	wzr, [sp, #220]
  43b904:	str	wzr, [sp, #172]
  43b908:	b	43bd5c <feof@plt+0x3905c>
  43b90c:	str	wzr, [sp, #220]
  43b910:	str	wzr, [sp, #172]
  43b914:	mov	w28, wzr
  43b918:	mov	x24, xzr
  43b91c:	mov	w23, wzr
  43b920:	cbnz	w19, 43b100 <feof@plt+0x38400>
  43b924:	b	43b114 <feof@plt+0x38414>
  43b928:	ldr	x24, [sp, #136]
  43b92c:	str	wzr, [sp, #172]
  43b930:	b	43af48 <feof@plt+0x38248>
  43b934:	str	w24, [sp, #172]
  43b938:	ldr	x24, [sp, #136]
  43b93c:	mov	w28, wzr
  43b940:	b	43af48 <feof@plt+0x38248>
  43b944:	ldr	x21, [sp, #288]
  43b948:	b	43bd28 <feof@plt+0x39028>
  43b94c:	ldr	x21, [sp, #288]
  43b950:	mov	x28, xzr
  43b954:	add	x8, x28, x28, lsl #1
  43b958:	str	x1, [sp, #208]
  43b95c:	lsl	x1, x8, #3
  43b960:	mov	x0, x21
  43b964:	mov	x2, x22
  43b968:	mov	x3, x25
  43b96c:	str	x27, [sp, #112]
  43b970:	str	x1, [sp, #200]
  43b974:	bl	439a30 <feof@plt+0x36d30>
  43b978:	cbz	x0, 43bd0c <feof@plt+0x3900c>
  43b97c:	ldp	x17, x8, [sp, #256]
  43b980:	mov	x27, x0
  43b984:	ldr	x0, [sp, #280]
  43b988:	cmp	x8, #0x18
  43b98c:	b.cc	43ba40 <feof@plt+0x38d40>  // b.lo, b.ul, b.last
  43b990:	ldr	x10, [sp, #208]
  43b994:	mov	w8, wzr
  43b998:	mov	x9, xzr
  43b99c:	mov	w11, #0x18                  	// #24
  43b9a0:	add	x10, x10, #0x8
  43b9a4:	b	43b9d0 <feof@plt+0x38cd0>
  43b9a8:	madd	x12, x12, x11, x27
  43b9ac:	add	x13, x13, x17
  43b9b0:	str	x13, [x12, #8]
  43b9b4:	ldr	x13, [x10, #8]
  43b9b8:	add	w8, w8, #0x1
  43b9bc:	str	x13, [x12, #16]
  43b9c0:	add	x9, x9, #0x1
  43b9c4:	cmp	x9, x23
  43b9c8:	add	x10, x10, #0x18
  43b9cc:	b.cs	43ba40 <feof@plt+0x38d40>  // b.hs, b.nlast
  43b9d0:	ldurb	w12, [x10, #-4]
  43b9d4:	and	w12, w12, #0xf
  43b9d8:	sub	w12, w12, #0x1
  43b9dc:	and	w12, w12, #0xff
  43b9e0:	cmp	w12, #0x1
  43b9e4:	b.hi	43b9c0 <feof@plt+0x38cc0>  // b.pmore
  43b9e8:	ldurh	w12, [x10, #-2]
  43b9ec:	cbz	w12, 43b9c0 <feof@plt+0x38cc0>
  43b9f0:	ldur	w12, [x10, #-8]
  43b9f4:	cmp	x0, x12
  43b9f8:	b.ls	43bce0 <feof@plt+0x38fe0>  // b.plast
  43b9fc:	add	x12, x19, x12
  43ba00:	umull	x13, w8, w11
  43ba04:	str	x12, [x27, x13]
  43ba08:	ldr	x13, [x10]
  43ba0c:	mov	w12, w8
  43ba10:	cbz	x24, 43b9a8 <feof@plt+0x38ca8>
  43ba14:	ldr	x15, [x24]
  43ba18:	mov	x16, x24
  43ba1c:	subs	x14, x13, x15
  43ba20:	b.cc	43b9a8 <feof@plt+0x38ca8>  // b.lo, b.ul, b.last
  43ba24:	ldr	x16, [x16, #16]
  43ba28:	add	x15, x16, x15
  43ba2c:	cmp	x13, x15
  43ba30:	b.cs	43b9a8 <feof@plt+0x38ca8>  // b.hs, b.nlast
  43ba34:	ldr	x13, [x24, #8]
  43ba38:	ldr	x13, [x13, x14]
  43ba3c:	b	43b9a8 <feof@plt+0x38ca8>
  43ba40:	adrp	x3, 43d000 <feof@plt+0x3a300>
  43ba44:	add	x3, x3, #0x4b4
  43ba48:	mov	w2, #0x18                  	// #24
  43ba4c:	mov	x0, x27
  43ba50:	mov	x1, x28
  43ba54:	bl	443af8 <feof@plt+0x40df8>
  43ba58:	add	x1, sp, #0x208
  43ba5c:	mov	x0, x21
  43ba60:	mov	x2, x22
  43ba64:	mov	x3, x25
  43ba68:	stp	xzr, x27, [x26]
  43ba6c:	str	x28, [x26, #16]
  43ba70:	bl	43d58c <feof@plt+0x3a88c>
  43ba74:	ldr	x9, [sp, #248]
  43ba78:	mov	w8, #0x1                   	// #1
  43ba7c:	str	w8, [x9]
  43ba80:	ldr	w9, [x21, #8]
  43ba84:	add	x8, x21, #0x30
  43ba88:	cbnz	w9, 43bb04 <feof@plt+0x38e04>
  43ba8c:	mov	x9, x8
  43ba90:	ldr	x8, [x8]
  43ba94:	cbnz	x8, 43ba8c <feof@plt+0x38d8c>
  43ba98:	str	x26, [x9]
  43ba9c:	b	43bb24 <feof@plt+0x38e24>
  43baa0:	ldr	x24, [sp, #136]
  43baa4:	mov	w8, #0x1                   	// #1
  43baa8:	mov	w19, wzr
  43baac:	str	w8, [sp, #220]
  43bab0:	b	43af4c <feof@plt+0x3824c>
  43bab4:	ldr	x24, [sp, #136]
  43bab8:	b	43af48 <feof@plt+0x38248>
  43babc:	cbz	x22, 43bad8 <feof@plt+0x38dd8>
  43bac0:	ldr	x3, [sp, #312]
  43bac4:	mov	w2, #0x13b4                	// #5044
  43bac8:	mov	x0, x21
  43bacc:	mov	x1, x22
  43bad0:	mov	x4, x25
  43bad4:	bl	439bf4 <feof@plt+0x36ef4>
  43bad8:	cbz	w19, 43bc3c <feof@plt+0x38f3c>
  43badc:	ldr	x22, [sp, #312]
  43bae0:	mov	w23, #0x1                   	// #1
  43bae4:	b	43bc58 <feof@plt+0x38f58>
  43bae8:	ldr	x25, [sp, #304]
  43baec:	str	wzr, [sp, #220]
  43baf0:	str	wzr, [sp, #172]
  43baf4:	mov	w28, wzr
  43baf8:	mov	x24, xzr
  43bafc:	b	43bd5c <feof@plt+0x3905c>
  43bb00:	clrex
  43bb04:	mov	x10, x8
  43bb08:	mov	x9, x10
  43bb0c:	ldar	x10, [x10]
  43bb10:	cbnz	x10, 43bb08 <feof@plt+0x38e08>
  43bb14:	ldaxr	x10, [x9]
  43bb18:	cbnz	x10, 43bb00 <feof@plt+0x38e00>
  43bb1c:	stlxr	w10, x26, [x9]
  43bb20:	cbnz	w10, 43bb14 <feof@plt+0x38e14>
  43bb24:	ldp	x25, x22, [sp, #304]
  43bb28:	ldr	x21, [sp, #288]
  43bb2c:	ldr	w20, [sp, #324]
  43bb30:	ldr	w28, [sp, #272]
  43bb34:	mov	x23, x24
  43bb38:	ldr	w24, [sp, #172]
  43bb3c:	ldr	x27, [sp, #112]
  43bb40:	mov	w8, #0x1                   	// #1
  43bb44:	b	43af68 <feof@plt+0x38268>
  43bb48:	and	x8, x10, #0xffffffffffffffe
  43bb4c:	mov	w9, #0x18                  	// #24
  43bb50:	mov	x11, xzr
  43bb54:	mov	x12, xzr
  43bb58:	madd	x9, x8, x9, x1
  43bb5c:	add	x13, x1, #0x1e
  43bb60:	mov	x14, x8
  43bb64:	b	43bba8 <feof@plt+0x38ea8>
  43bb68:	cmp	w18, #0x2
  43bb6c:	and	w15, w15, #0xff
  43bb70:	cset	w18, cc  // cc = lo, ul, last
  43bb74:	cmp	w15, #0x2
  43bb78:	cset	w15, cc  // cc = lo, ul, last
  43bb7c:	tst	w16, #0xffff
  43bb80:	cset	w16, ne  // ne = any
  43bb84:	tst	w17, #0xffff
  43bb88:	cset	w17, ne  // ne = any
  43bb8c:	and	w15, w15, w16
  43bb90:	add	x11, x11, x15
  43bb94:	and	w15, w18, w17
  43bb98:	subs	x14, x14, #0x2
  43bb9c:	add	x12, x12, x15
  43bba0:	add	x13, x13, #0x30
  43bba4:	b.eq	43bbe4 <feof@plt+0x38ee4>  // b.none
  43bba8:	ldurb	w15, [x13, #-26]
  43bbac:	ldurb	w16, [x13, #-2]
  43bbb0:	and	w15, w15, #0xf
  43bbb4:	sub	w15, w15, #0x1
  43bbb8:	and	w16, w16, #0xf
  43bbbc:	and	w17, w15, #0xff
  43bbc0:	cmp	w17, #0x1
  43bbc4:	sub	w17, w16, #0x1
  43bbc8:	b.hi	43bbd0 <feof@plt+0x38ed0>  // b.pmore
  43bbcc:	ldurh	w16, [x13, #-24]
  43bbd0:	and	w18, w17, #0xff
  43bbd4:	cmp	w18, #0x1
  43bbd8:	b.hi	43bb68 <feof@plt+0x38e68>  // b.pmore
  43bbdc:	ldrh	w17, [x13]
  43bbe0:	b	43bb68 <feof@plt+0x38e68>
  43bbe4:	ldr	x21, [sp, #288]
  43bbe8:	cmp	x10, x8
  43bbec:	add	x28, x12, x11
  43bbf0:	b.eq	43b954 <feof@plt+0x38c54>  // b.none
  43bbf4:	add	x9, x9, #0x6
  43bbf8:	b	43bc0c <feof@plt+0x38f0c>
  43bbfc:	add	x8, x8, #0x1
  43bc00:	cmp	x8, x23
  43bc04:	add	x9, x9, #0x18
  43bc08:	b.cs	43b954 <feof@plt+0x38c54>  // b.hs, b.nlast
  43bc0c:	ldurb	w10, [x9, #-2]
  43bc10:	and	w10, w10, #0xf
  43bc14:	sub	w10, w10, #0x1
  43bc18:	and	w10, w10, #0xff
  43bc1c:	cmp	w10, #0x1
  43bc20:	b.hi	43bbfc <feof@plt+0x38efc>  // b.pmore
  43bc24:	ldrh	w10, [x9]
  43bc28:	cmp	w10, #0x0
  43bc2c:	cinc	x28, x28, ne  // ne = any
  43bc30:	b	43bbfc <feof@plt+0x38efc>
  43bc34:	ldp	x25, x22, [sp, #304]
  43bc38:	b	43bd44 <feof@plt+0x39044>
  43bc3c:	ldr	x22, [sp, #312]
  43bc40:	add	x1, sp, #0x190
  43bc44:	mov	x0, x21
  43bc48:	mov	x3, x25
  43bc4c:	mov	x2, x22
  43bc50:	bl	43d58c <feof@plt+0x3a88c>
  43bc54:	mov	w23, wzr
  43bc58:	ldr	w13, [sp, #300]
  43bc5c:	ldr	x2, [sp, #560]
  43bc60:	ldr	x3, [sp, #552]
  43bc64:	ldr	x4, [sp, #592]
  43bc68:	ldr	x5, [sp, #584]
  43bc6c:	ldr	x6, [sp, #624]
  43bc70:	ldr	x7, [sp, #616]
  43bc74:	ldr	x8, [sp, #656]
  43bc78:	ldr	x9, [sp, #648]
  43bc7c:	ldr	x10, [sp, #688]
  43bc80:	ldr	x11, [sp, #680]
  43bc84:	ldr	x12, [sp, #344]
  43bc88:	ldr	x14, [sp, #240]
  43bc8c:	ldr	x1, [sp, #256]
  43bc90:	cmp	w13, #0x2
  43bc94:	cset	w13, eq  // eq = none
  43bc98:	mov	x0, x21
  43bc9c:	stp	x14, x20, [sp, #64]
  43bca0:	stp	x22, x25, [sp, #48]
  43bca4:	str	x12, [sp, #40]
  43bca8:	str	w13, [sp, #32]
  43bcac:	stp	x10, x11, [sp, #16]
  43bcb0:	stp	x8, x9, [sp]
  43bcb4:	bl	43d5dc <feof@plt+0x3a8dc>
  43bcb8:	cbz	w0, 43bccc <feof@plt+0x38fcc>
  43bcbc:	ldr	x8, [sp, #224]
  43bcc0:	mov	w25, #0x1                   	// #1
  43bcc4:	str	w25, [x8]
  43bcc8:	b	43a78c <feof@plt+0x37a8c>
  43bccc:	str	wzr, [sp, #220]
  43bcd0:	str	wzr, [sp, #172]
  43bcd4:	mov	w28, wzr
  43bcd8:	mov	x24, xzr
  43bcdc:	b	43bd58 <feof@plt+0x39058>
  43bce0:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43bce4:	add	x1, x1, #0x2f7
  43bce8:	mov	x0, x25
  43bcec:	mov	w2, wzr
  43bcf0:	blr	x22
  43bcf4:	ldr	x2, [sp, #200]
  43bcf8:	mov	x0, x21
  43bcfc:	mov	x1, x27
  43bd00:	mov	x3, x22
  43bd04:	mov	x4, x25
  43bd08:	bl	439bf4 <feof@plt+0x36ef4>
  43bd0c:	mov	w2, #0x18                  	// #24
  43bd10:	mov	x0, x21
  43bd14:	mov	x1, x26
  43bd18:	mov	x3, x22
  43bd1c:	mov	x4, x25
  43bd20:	bl	439bf4 <feof@plt+0x36ef4>
  43bd24:	ldr	w28, [sp, #272]
  43bd28:	mov	w23, wzr
  43bd2c:	mov	w19, #0x1                   	// #1
  43bd30:	b	43b0b8 <feof@plt+0x383b8>
  43bd34:	ldr	x22, [sp, #312]
  43bd38:	b	43bd44 <feof@plt+0x39044>
  43bd3c:	ldp	x25, x22, [sp, #304]
  43bd40:	ldr	x21, [sp, #288]
  43bd44:	str	wzr, [sp, #220]
  43bd48:	str	wzr, [sp, #172]
  43bd4c:	mov	w28, wzr
  43bd50:	mov	x24, xzr
  43bd54:	mov	w23, #0x1                   	// #1
  43bd58:	mov	w20, #0xffffffff            	// #-1
  43bd5c:	ldr	w19, [sp, #324]
  43bd60:	cbnz	w19, 43b100 <feof@plt+0x38400>
  43bd64:	b	43b114 <feof@plt+0x38414>
  43bd68:	sub	sp, sp, #0x70
  43bd6c:	stp	x29, x30, [sp, #64]
  43bd70:	str	x21, [sp, #80]
  43bd74:	stp	x20, x19, [sp, #96]
  43bd78:	add	x29, sp, #0x40
  43bd7c:	ldr	x20, [x0, #8]
  43bd80:	mov	x21, x0
  43bd84:	mov	x19, x2
  43bd88:	cbz	x20, 43bdd0 <feof@plt+0x390d0>
  43bd8c:	ldrb	w8, [x20]
  43bd90:	cbz	w8, 43bdd0 <feof@plt+0x390d0>
  43bd94:	ldr	w0, [x19, #56]
  43bd98:	cmn	w0, #0x1
  43bd9c:	b.eq	43bdb4 <feof@plt+0x390b4>  // b.none
  43bda0:	ldp	x1, x2, [x19, #8]
  43bda4:	bl	43a250 <feof@plt+0x37550>
  43bda8:	mov	w8, #0xffffffff            	// #-1
  43bdac:	str	w8, [x19, #56]
  43bdb0:	ldr	x20, [x21, #8]
  43bdb4:	ldp	x1, x2, [x19, #8]
  43bdb8:	add	x3, x29, #0x1c
  43bdbc:	mov	x0, x20
  43bdc0:	bl	43a1b4 <feof@plt+0x374b4>
  43bdc4:	mov	w2, w0
  43bdc8:	tbz	w0, #31, 43bde8 <feof@plt+0x390e8>
  43bdcc:	b	43be40 <feof@plt+0x39140>
  43bdd0:	ldr	w2, [x19, #56]
  43bdd4:	cmn	w2, #0x1
  43bdd8:	b.eq	43be40 <feof@plt+0x39140>  // b.none
  43bddc:	ldr	x20, [x19, #48]
  43bde0:	mov	w8, #0xffffffff            	// #-1
  43bde4:	str	w8, [x19, #56]
  43bde8:	ldr	x3, [x21]
  43bdec:	ldp	x0, x4, [x19]
  43bdf0:	ldr	x5, [x19, #16]
  43bdf4:	ldr	x7, [x19, #32]
  43bdf8:	add	x8, x29, #0x18
  43bdfc:	sub	x6, x29, #0x8
  43be00:	mov	x1, x20
  43be04:	str	wzr, [sp, #40]
  43be08:	str	xzr, [sp, #32]
  43be0c:	str	wzr, [sp, #24]
  43be10:	str	wzr, [sp, #16]
  43be14:	stp	x8, xzr, [sp]
  43be18:	bl	43a5d4 <feof@plt+0x378d4>
  43be1c:	cbz	w0, 43be40 <feof@plt+0x39140>
  43be20:	ldr	w8, [x29, #24]
  43be24:	cbz	w8, 43be40 <feof@plt+0x39140>
  43be28:	ldr	x8, [x19, #40]
  43be2c:	mov	w9, #0x1                   	// #1
  43be30:	str	w9, [x8]
  43be34:	ldur	x8, [x29, #-8]
  43be38:	ldr	x9, [x19, #24]
  43be3c:	str	x8, [x9]
  43be40:	ldp	x20, x19, [sp, #96]
  43be44:	ldr	x21, [sp, #80]
  43be48:	ldp	x29, x30, [sp, #64]
  43be4c:	mov	w0, wzr
  43be50:	add	sp, sp, #0x70
  43be54:	ret
  43be58:	ldr	w8, [x0, #8]
  43be5c:	mov	x5, x2
  43be60:	cbz	w8, 43bed4 <feof@plt+0x391d4>
  43be64:	add	x8, x0, #0x30
  43be68:	ldar	x9, [x8]
  43be6c:	cbz	x9, 43bf50 <feof@plt+0x39250>
  43be70:	mov	w10, #0x18                  	// #24
  43be74:	b	43be80 <feof@plt+0x39180>
  43be78:	ldar	x9, [x9]
  43be7c:	cbz	x9, 43bf50 <feof@plt+0x39250>
  43be80:	ldr	x13, [x9, #16]
  43be84:	cbz	x13, 43be78 <feof@plt+0x39178>
  43be88:	ldr	x12, [x9, #8]
  43be8c:	mov	x8, xzr
  43be90:	b	43bea0 <feof@plt+0x391a0>
  43be94:	cmp	x8, x14
  43be98:	mov	x13, x14
  43be9c:	b.cs	43be78 <feof@plt+0x39178>  // b.hs, b.nlast
  43bea0:	add	x11, x13, x8
  43bea4:	lsr	x14, x11, #1
  43bea8:	madd	x11, x14, x10, x12
  43beac:	ldr	x3, [x11, #8]
  43beb0:	cmp	x3, x1
  43beb4:	b.hi	43be94 <feof@plt+0x39194>  // b.pmore
  43beb8:	ldr	x8, [x11, #16]
  43bebc:	add	x15, x8, x3
  43bec0:	cmp	x15, x1
  43bec4:	b.hi	43bf40 <feof@plt+0x39240>  // b.pmore
  43bec8:	add	x8, x14, #0x1
  43becc:	mov	x14, x13
  43bed0:	b	43be94 <feof@plt+0x39194>
  43bed4:	ldr	x9, [x0, #48]
  43bed8:	cbz	x9, 43bf50 <feof@plt+0x39250>
  43bedc:	mov	w10, #0x18                  	// #24
  43bee0:	b	43beec <feof@plt+0x391ec>
  43bee4:	ldr	x9, [x9]
  43bee8:	cbz	x9, 43bf50 <feof@plt+0x39250>
  43beec:	ldr	x13, [x9, #16]
  43bef0:	cbz	x13, 43bee4 <feof@plt+0x391e4>
  43bef4:	ldr	x12, [x9, #8]
  43bef8:	mov	x8, xzr
  43befc:	b	43bf0c <feof@plt+0x3920c>
  43bf00:	cmp	x8, x14
  43bf04:	mov	x13, x14
  43bf08:	b.cs	43bee4 <feof@plt+0x391e4>  // b.hs, b.nlast
  43bf0c:	add	x11, x13, x8
  43bf10:	lsr	x14, x11, #1
  43bf14:	madd	x11, x14, x10, x12
  43bf18:	ldr	x3, [x11, #8]
  43bf1c:	cmp	x3, x1
  43bf20:	b.hi	43bf00 <feof@plt+0x39200>  // b.pmore
  43bf24:	ldr	x8, [x11, #16]
  43bf28:	add	x15, x8, x3
  43bf2c:	cmp	x15, x1
  43bf30:	b.hi	43bf40 <feof@plt+0x39240>  // b.pmore
  43bf34:	add	x8, x14, #0x1
  43bf38:	mov	x14, x13
  43bf3c:	b	43bf00 <feof@plt+0x39200>
  43bf40:	ldr	x2, [x11]
  43bf44:	mov	x0, x4
  43bf48:	mov	x4, x8
  43bf4c:	br	x5
  43bf50:	mov	x0, x4
  43bf54:	mov	x2, xzr
  43bf58:	mov	x3, xzr
  43bf5c:	mov	x4, xzr
  43bf60:	br	x5
  43bf64:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43bf68:	mov	x0, x4
  43bf6c:	add	x1, x1, #0x357
  43bf70:	mov	w2, #0xffffffff            	// #-1
  43bf74:	br	x3
  43bf78:	sub	sp, sp, #0xd0
  43bf7c:	stp	x29, x30, [sp, #112]
  43bf80:	stp	x28, x27, [sp, #128]
  43bf84:	stp	x26, x25, [sp, #144]
  43bf88:	stp	x24, x23, [sp, #160]
  43bf8c:	stp	x22, x21, [sp, #176]
  43bf90:	stp	x20, x19, [sp, #192]
  43bf94:	add	x29, sp, #0x70
  43bf98:	mov	x19, x3
  43bf9c:	add	x27, x0, x1
  43bfa0:	cmp	x1, #0x5
  43bfa4:	add	x20, x3, x4
  43bfa8:	mov	x23, x3
  43bfac:	b.lt	43c900 <feof@plt+0x39c00>  // b.tstop
  43bfb0:	mov	w8, #0x1278                	// #4728
  43bfb4:	mov	w9, #0x1378                	// #4984
  43bfb8:	add	x10, x2, #0x800
  43bfbc:	str	x10, [sp, #32]
  43bfc0:	add	x10, x2, x8
  43bfc4:	add	x8, x2, x9
  43bfc8:	mov	x26, x2
  43bfcc:	mov	x25, x0
  43bfd0:	str	x8, [sp, #8]
  43bfd4:	mov	x23, x19
  43bfd8:	stur	x27, [x29, #-48]
  43bfdc:	str	x2, [sp, #40]
  43bfe0:	stur	x20, [x29, #-40]
  43bfe4:	str	x4, [sp]
  43bfe8:	str	x10, [sp, #48]
  43bfec:	ldrsb	w8, [x25]
  43bff0:	mov	w0, wzr
  43bff4:	tbnz	w8, #31, 43c90c <feof@plt+0x39c0c>
  43bff8:	and	w9, w8, #0xf
  43bffc:	cmp	w9, #0x8
  43c000:	b.ne	43c90c <feof@plt+0x39c0c>  // b.any
  43c004:	ldrb	w9, [x25, #1]
  43c008:	tbnz	w9, #5, 43c908 <feof@plt+0x39c08>
  43c00c:	and	w8, w8, #0xff
  43c010:	bfi	w9, w8, #8, #8
  43c014:	mov	w8, #0x7bdf                	// #31711
  43c018:	movk	w8, #0xbdef, lsl #16
  43c01c:	mul	w8, w9, w8
  43c020:	mov	w9, #0x1084                	// #4228
  43c024:	movk	w9, #0x842, lsl #16
  43c028:	cmp	w8, w9
  43c02c:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c030:	add	x25, x25, #0x2
  43c034:	tst	x25, #0x3
  43c038:	b.eq	43c060 <feof@plt+0x39360>  // b.none
  43c03c:	mov	w24, wzr
  43c040:	mov	x21, xzr
  43c044:	ldrb	w8, [x25], #1
  43c048:	lsl	x8, x8, x24
  43c04c:	tst	x25, #0x3
  43c050:	orr	x21, x8, x21
  43c054:	add	w24, w24, #0x8
  43c058:	b.ne	43c044 <feof@plt+0x39344>  // b.any
  43c05c:	b	43c078 <feof@plt+0x39378>
  43c060:	mov	w24, wzr
  43c064:	mov	x21, xzr
  43c068:	b	43c078 <feof@plt+0x39378>
  43c06c:	ldr	x26, [sp, #40]
  43c070:	ldr	x8, [sp, #56]
  43c074:	tbnz	w8, #0, 43c8f0 <feof@plt+0x39bf0>
  43c078:	cmp	w24, #0xe
  43c07c:	b.hi	43c0a0 <feof@plt+0x393a0>  // b.pmore
  43c080:	sub	x8, x27, x25
  43c084:	cmp	x8, #0x4
  43c088:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c08c:	ldr	w8, [x25], #4
  43c090:	lsl	x8, x8, x24
  43c094:	add	w24, w24, #0x20
  43c098:	orr	x21, x8, x21
  43c09c:	prfm	pldl1strm, [x25]
  43c0a0:	ubfx	w8, w21, #1, #2
  43c0a4:	str	x21, [sp, #56]
  43c0a8:	cbz	w8, 43c1c4 <feof@plt+0x394c4>
  43c0ac:	lsr	x21, x21, #3
  43c0b0:	cmp	w8, #0x1
  43c0b4:	sub	w28, w24, #0x3
  43c0b8:	b.eq	43c258 <feof@plt+0x39558>  // b.none
  43c0bc:	cmp	w8, #0x3
  43c0c0:	b.eq	43c908 <feof@plt+0x39c08>  // b.none
  43c0c4:	cmp	w28, #0xe
  43c0c8:	b.hi	43c0ec <feof@plt+0x393ec>  // b.pmore
  43c0cc:	sub	x8, x27, x25
  43c0d0:	cmp	x8, #0x4
  43c0d4:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c0d8:	ldr	w8, [x25], #4
  43c0dc:	lsl	x8, x8, x28
  43c0e0:	add	w28, w24, #0x1d
  43c0e4:	orr	x21, x8, x21
  43c0e8:	prfm	pldl1strm, [x25]
  43c0ec:	and	w20, w21, #0x1f
  43c0f0:	cmp	w20, #0x1d
  43c0f4:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c0f8:	ubfx	w22, w21, #5, #5
  43c0fc:	cmp	w22, #0x1d
  43c100:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c104:	sub	w9, w28, #0xe
  43c108:	lsr	x10, x21, #14
  43c10c:	cmp	w9, #0xe
  43c110:	stp	xzr, xzr, [x29, #-24]
  43c114:	stur	wzr, [x29, #-9]
  43c118:	b.hi	43c13c <feof@plt+0x3943c>  // b.pmore
  43c11c:	sub	x8, x27, x25
  43c120:	cmp	x8, #0x4
  43c124:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c128:	ldr	w8, [x25], #4
  43c12c:	lsl	x8, x8, x9
  43c130:	add	w9, w28, #0x12
  43c134:	orr	x10, x8, x10
  43c138:	prfm	pldl1strm, [x25]
  43c13c:	ubfx	w8, w21, #10, #4
  43c140:	and	w11, w10, #0x7
  43c144:	ubfx	w12, w10, #3, #3
  43c148:	ubfx	w13, w10, #6, #3
  43c14c:	ubfx	w14, w10, #9, #3
  43c150:	sturb	w11, [x29, #-8]
  43c154:	sturb	w12, [x29, #-7]
  43c158:	sturb	w13, [x29, #-6]
  43c15c:	sturb	w14, [x29, #-24]
  43c160:	cbz	w8, 43c278 <feof@plt+0x39578>
  43c164:	add	w8, w8, #0x4
  43c168:	ubfx	w11, w10, #12, #3
  43c16c:	lsr	x21, x10, #15
  43c170:	cmp	w8, #0x5
  43c174:	sub	w28, w9, #0xf
  43c178:	sturb	w11, [x29, #-16]
  43c17c:	b.eq	43c280 <feof@plt+0x39580>  // b.none
  43c180:	cmp	w28, #0xe
  43c184:	b.hi	43c1a8 <feof@plt+0x394a8>  // b.pmore
  43c188:	sub	x10, x27, x25
  43c18c:	cmp	x10, #0x4
  43c190:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c194:	ldr	w10, [x25], #4
  43c198:	lsl	x10, x10, x28
  43c19c:	add	w28, w9, #0x11
  43c1a0:	orr	x21, x10, x21
  43c1a4:	prfm	pldl1strm, [x25]
  43c1a8:	and	w9, w21, #0x7
  43c1ac:	cmp	w8, #0x6
  43c1b0:	sturb	w9, [x29, #-17]
  43c1b4:	b.ne	43c768 <feof@plt+0x39a68>  // b.any
  43c1b8:	lsr	x21, x21, #3
  43c1bc:	sub	w28, w28, #0x3
  43c1c0:	b	43c280 <feof@plt+0x39580>
  43c1c4:	sub	w8, w24, #0xc
  43c1c8:	lsr	w8, w8, #3
  43c1cc:	mvn	x8, x8
  43c1d0:	add	x9, x8, x25
  43c1d4:	sub	x8, x27, x9
  43c1d8:	cmp	x8, #0x4
  43c1dc:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c1e0:	ldrh	w8, [x9, #2]
  43c1e4:	ldrh	w24, [x9]
  43c1e8:	eor	w8, w8, #0xffff
  43c1ec:	cmp	w8, w24
  43c1f0:	b.ne	43c908 <feof@plt+0x39c08>  // b.any
  43c1f4:	add	x25, x9, #0x4
  43c1f8:	sub	w9, w27, w25
  43c1fc:	cmp	w8, w9
  43c200:	mov	w0, wzr
  43c204:	b.hi	43c90c <feof@plt+0x39c0c>  // b.pmore
  43c208:	sub	w9, w20, w23
  43c20c:	cmp	w8, w9
  43c210:	b.hi	43c90c <feof@plt+0x39c0c>  // b.pmore
  43c214:	mov	x0, x23
  43c218:	mov	x1, x25
  43c21c:	mov	x2, x24
  43c220:	bl	402640 <memcpy@plt>
  43c224:	add	x25, x25, x24
  43c228:	tst	x25, #0x3
  43c22c:	add	x23, x23, x24
  43c230:	b.eq	43c26c <feof@plt+0x3956c>  // b.none
  43c234:	mov	w24, wzr
  43c238:	mov	x21, xzr
  43c23c:	ldrb	w8, [x25], #1
  43c240:	lsl	x8, x8, x24
  43c244:	tst	x25, #0x3
  43c248:	orr	x21, x8, x21
  43c24c:	add	w24, w24, #0x8
  43c250:	b.ne	43c23c <feof@plt+0x3953c>  // b.any
  43c254:	b	43c070 <feof@plt+0x39370>
  43c258:	adrp	x13, 464000 <_obstack_memory_used@@Base+0xedd8>
  43c25c:	adrp	x26, 464000 <_obstack_memory_used@@Base+0xedd8>
  43c260:	add	x13, x13, #0xb34
  43c264:	add	x26, x26, #0x854
  43c268:	b	43c2fc <feof@plt+0x395fc>
  43c26c:	mov	x21, xzr
  43c270:	mov	w24, wzr
  43c274:	b	43c070 <feof@plt+0x39370>
  43c278:	lsr	x21, x10, #12
  43c27c:	sub	w28, w9, #0xc
  43c280:	sub	x0, x29, #0x18
  43c284:	mov	w1, #0x13                  	// #19
  43c288:	mov	x2, x26
  43c28c:	mov	x3, x26
  43c290:	bl	43cbc0 <feof@plt+0x39ec0>
  43c294:	cbz	w0, 43c908 <feof@plt+0x39c08>
  43c298:	ldr	x24, [sp, #48]
  43c29c:	add	w9, w20, #0x101
  43c2a0:	add	w8, w22, #0x1
  43c2a4:	stur	x9, [x29, #-32]
  43c2a8:	add	x9, x24, x9
  43c2ac:	add	x20, x9, x8
  43c2b0:	cmp	x20, x24
  43c2b4:	stp	x9, x8, [sp, #16]
  43c2b8:	b.hi	43c5f4 <feof@plt+0x398f4>  // b.pmore
  43c2bc:	ldr	x8, [sp, #8]
  43c2c0:	ldrb	w8, [x8]
  43c2c4:	cbz	w8, 43c908 <feof@plt+0x39c08>
  43c2c8:	ldr	x0, [sp, #48]
  43c2cc:	ldur	x1, [x29, #-32]
  43c2d0:	mov	x2, x26
  43c2d4:	mov	x3, x26
  43c2d8:	bl	43cbc0 <feof@plt+0x39ec0>
  43c2dc:	cbz	w0, 43c908 <feof@plt+0x39c08>
  43c2e0:	ldp	x0, x1, [sp, #16]
  43c2e4:	ldr	x3, [sp, #32]
  43c2e8:	mov	x2, x26
  43c2ec:	bl	43cbc0 <feof@plt+0x39ec0>
  43c2f0:	cbz	w0, 43c908 <feof@plt+0x39c08>
  43c2f4:	ldr	x13, [sp, #32]
  43c2f8:	ldur	x20, [x29, #-40]
  43c2fc:	mov	w24, w28
  43c300:	stur	x13, [x29, #-32]
  43c304:	b	43c32c <feof@plt+0x3962c>
  43c308:	mov	w22, w28
  43c30c:	add	x1, x23, x19
  43c310:	mov	x0, x23
  43c314:	mov	x2, x22
  43c318:	bl	402640 <memcpy@plt>
  43c31c:	add	x23, x23, x22
  43c320:	mov	x19, x20
  43c324:	ldp	x27, x20, [x29, #-48]
  43c328:	ldur	x13, [x29, #-32]
  43c32c:	cmp	w24, #0xe
  43c330:	b.hi	43c354 <feof@plt+0x39654>  // b.pmore
  43c334:	sub	x8, x27, x25
  43c338:	cmp	x8, #0x4
  43c33c:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c340:	ldr	w8, [x25], #4
  43c344:	lsl	x8, x8, x24
  43c348:	add	w24, w24, #0x20
  43c34c:	orr	x21, x8, x21
  43c350:	prfm	pldl1strm, [x25]
  43c354:	and	x8, x21, #0xff
  43c358:	ldrh	w10, [x26, x8, lsl #1]
  43c35c:	ubfx	w9, w10, #9, #3
  43c360:	and	x8, x10, #0x1ff
  43c364:	tbnz	w10, #12, 43c370 <feof@plt+0x39670>
  43c368:	add	w9, w9, #0x1
  43c36c:	b	43c398 <feof@plt+0x39698>
  43c370:	mov	w10, #0xffffffff            	// #-1
  43c374:	lsl	w9, w10, w9
  43c378:	mvn	w9, w9
  43c37c:	and	x9, x9, x21, lsr #8
  43c380:	add	x8, x8, x9
  43c384:	add	x8, x26, x8, lsl #1
  43c388:	ldrh	w10, [x8, #512]
  43c38c:	mov	w9, #0x8                   	// #8
  43c390:	and	w8, w10, #0x1ff
  43c394:	bfxil	w9, w10, #9, #3
  43c398:	sub	w24, w24, w9
  43c39c:	cmp	w8, #0xff
  43c3a0:	lsr	x21, x21, x9
  43c3a4:	b.hi	43c3bc <feof@plt+0x396bc>  // b.pmore
  43c3a8:	cmp	x23, x20
  43c3ac:	b.eq	43c908 <feof@plt+0x39c08>  // b.none
  43c3b0:	strb	w8, [x23], #1
  43c3b4:	prfm	pstl1keep, [x23]
  43c3b8:	b	43c32c <feof@plt+0x3962c>
  43c3bc:	cmp	w8, #0x100
  43c3c0:	b.eq	43c06c <feof@plt+0x3936c>  // b.none
  43c3c4:	cmp	w8, #0x108
  43c3c8:	b.hi	43c3dc <feof@plt+0x396dc>  // b.pmore
  43c3cc:	sub	w28, w8, #0xfe
  43c3d0:	cmp	w24, #0xe
  43c3d4:	b.ls	43c46c <feof@plt+0x3976c>  // b.plast
  43c3d8:	b	43c48c <feof@plt+0x3978c>
  43c3dc:	cmp	w8, #0x11d
  43c3e0:	b.ne	43c3f4 <feof@plt+0x396f4>  // b.any
  43c3e4:	mov	w28, #0x102                 	// #258
  43c3e8:	cmp	w24, #0xe
  43c3ec:	b.ls	43c46c <feof@plt+0x3976c>  // b.plast
  43c3f0:	b	43c48c <feof@plt+0x3978c>
  43c3f4:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c3f8:	cmp	w24, #0xe
  43c3fc:	b.hi	43c420 <feof@plt+0x39720>  // b.pmore
  43c400:	sub	x9, x27, x25
  43c404:	cmp	x9, #0x4
  43c408:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c40c:	ldr	w9, [x25], #4
  43c410:	lsl	x9, x9, x24
  43c414:	add	w24, w24, #0x20
  43c418:	orr	x21, x9, x21
  43c41c:	prfm	pldl1strm, [x25]
  43c420:	sub	w8, w8, #0x109
  43c424:	lsr	w9, w8, #2
  43c428:	mov	w11, #0xfffffff8            	// #-8
  43c42c:	mov	w12, #0x2                   	// #2
  43c430:	and	w8, w8, #0x3
  43c434:	add	w10, w9, #0x1
  43c438:	lsl	w11, w11, w9
  43c43c:	lsl	w9, w12, w9
  43c440:	lsl	w8, w8, w10
  43c444:	eor	w11, w11, #0xfffffff8
  43c448:	sub	w9, w9, #0x1
  43c44c:	add	w8, w8, w11
  43c450:	and	w9, w9, w21
  43c454:	add	w8, w8, w9
  43c458:	lsr	x21, x21, x10
  43c45c:	add	w28, w8, #0xb
  43c460:	sub	w24, w24, w10
  43c464:	cmp	w24, #0xe
  43c468:	b.hi	43c48c <feof@plt+0x3978c>  // b.pmore
  43c46c:	sub	x8, x27, x25
  43c470:	cmp	x8, #0x4
  43c474:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c478:	ldr	w8, [x25], #4
  43c47c:	lsl	x8, x8, x24
  43c480:	add	w24, w24, #0x20
  43c484:	orr	x21, x8, x21
  43c488:	prfm	pldl1strm, [x25]
  43c48c:	and	x8, x21, #0xff
  43c490:	ldrh	w10, [x13, x8, lsl #1]
  43c494:	ubfx	w9, w10, #9, #3
  43c498:	and	x8, x10, #0x1ff
  43c49c:	tbnz	w10, #12, 43c4a8 <feof@plt+0x397a8>
  43c4a0:	add	w9, w9, #0x1
  43c4a4:	b	43c4d0 <feof@plt+0x397d0>
  43c4a8:	mov	w10, #0xffffffff            	// #-1
  43c4ac:	lsl	w9, w10, w9
  43c4b0:	mvn	w9, w9
  43c4b4:	and	x9, x9, x21, lsr #8
  43c4b8:	add	x8, x8, x9
  43c4bc:	add	x8, x13, x8, lsl #1
  43c4c0:	ldrh	w10, [x8, #512]
  43c4c4:	mov	w9, #0x8                   	// #8
  43c4c8:	and	w8, w10, #0x1ff
  43c4cc:	bfxil	w9, w10, #9, #3
  43c4d0:	sub	w24, w24, w9
  43c4d4:	lsr	x21, x21, x9
  43c4d8:	cbz	w8, 43c4f4 <feof@plt+0x397f4>
  43c4dc:	cmp	w8, #0x1d
  43c4e0:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c4e4:	cmp	w8, #0x3
  43c4e8:	b.hi	43c528 <feof@plt+0x39828>  // b.pmore
  43c4ec:	add	w27, w8, #0x1
  43c4f0:	b	43c594 <feof@plt+0x39894>
  43c4f4:	cmp	x23, x19
  43c4f8:	b.eq	43c908 <feof@plt+0x39c08>  // b.none
  43c4fc:	sub	w8, w20, w23
  43c500:	cmp	w28, w8
  43c504:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c508:	ldurb	w1, [x23, #-1]
  43c50c:	mov	w22, w28
  43c510:	mov	x0, x23
  43c514:	mov	x2, x22
  43c518:	bl	402790 <memset@plt>
  43c51c:	ldur	x13, [x29, #-32]
  43c520:	add	x23, x23, x22
  43c524:	b	43c32c <feof@plt+0x3962c>
  43c528:	cmp	w24, #0xe
  43c52c:	b.hi	43c550 <feof@plt+0x39850>  // b.pmore
  43c530:	sub	x9, x27, x25
  43c534:	cmp	x9, #0x4
  43c538:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c53c:	ldr	w9, [x25], #4
  43c540:	lsl	x9, x9, x24
  43c544:	add	w24, w24, #0x20
  43c548:	orr	x21, x9, x21
  43c54c:	prfm	pldl1strm, [x25]
  43c550:	sub	w8, w8, #0x4
  43c554:	lsr	w9, w8, #1
  43c558:	mov	w11, #0xfffffffc            	// #-4
  43c55c:	mov	w12, #0x2                   	// #2
  43c560:	and	w8, w8, #0x1
  43c564:	add	w10, w9, #0x1
  43c568:	lsl	w11, w11, w9
  43c56c:	lsl	w9, w12, w9
  43c570:	lsl	w8, w8, w10
  43c574:	eor	w11, w11, #0xfffffffc
  43c578:	sub	w9, w9, #0x1
  43c57c:	add	w8, w8, w11
  43c580:	and	w9, w9, w21
  43c584:	add	w8, w8, w9
  43c588:	lsr	x21, x21, x10
  43c58c:	add	w27, w8, #0x5
  43c590:	sub	w24, w24, w10
  43c594:	sub	w8, w23, w19
  43c598:	cmp	w27, w8
  43c59c:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c5a0:	sub	w8, w20, w23
  43c5a4:	cmp	w28, w8
  43c5a8:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c5ac:	mov	x8, xzr
  43c5b0:	mov	x20, x19
  43c5b4:	cmp	w27, w28
  43c5b8:	sub	x19, x8, w27, uxtw
  43c5bc:	b.cs	43c308 <feof@plt+0x39608>  // b.hs, b.nlast
  43c5c0:	cmp	w28, w27
  43c5c4:	csel	w22, w28, w27, cc  // cc = lo, ul, last
  43c5c8:	add	x1, x23, x19
  43c5cc:	mov	x0, x23
  43c5d0:	mov	x2, x22
  43c5d4:	bl	402640 <memcpy@plt>
  43c5d8:	subs	w28, w28, w22
  43c5dc:	add	x23, x23, x22
  43c5e0:	b.ne	43c5c0 <feof@plt+0x398c0>  // b.any
  43c5e4:	b	43c320 <feof@plt+0x39620>
  43c5e8:	strb	w8, [x24], #1
  43c5ec:	cmp	x24, x20
  43c5f0:	b.cs	43c2bc <feof@plt+0x395bc>  // b.hs, b.nlast
  43c5f4:	cmp	w28, #0xe
  43c5f8:	b.hi	43c61c <feof@plt+0x3991c>  // b.pmore
  43c5fc:	sub	x8, x27, x25
  43c600:	cmp	x8, #0x4
  43c604:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c608:	ldr	w8, [x25], #4
  43c60c:	lsl	x8, x8, x28
  43c610:	add	w28, w28, #0x20
  43c614:	orr	x21, x8, x21
  43c618:	prfm	pldl1strm, [x25]
  43c61c:	and	x8, x21, #0xff
  43c620:	ldrh	w8, [x26, x8, lsl #1]
  43c624:	tbnz	w8, #12, 43c908 <feof@plt+0x39c08>
  43c628:	ubfx	x9, x8, #9, #3
  43c62c:	add	x9, x9, #0x1
  43c630:	tst	w8, #0x1f0
  43c634:	lsr	x21, x21, x9
  43c638:	sub	w28, w28, w9
  43c63c:	b.eq	43c5e8 <feof@plt+0x398e8>  // b.none
  43c640:	and	w8, w8, #0x1ff
  43c644:	cmp	w8, #0x12
  43c648:	b.eq	43c6c4 <feof@plt+0x399c4>  // b.none
  43c64c:	cmp	w8, #0x11
  43c650:	b.eq	43c6f8 <feof@plt+0x399f8>  // b.none
  43c654:	cmp	w8, #0x10
  43c658:	b.ne	43c908 <feof@plt+0x39c08>  // b.any
  43c65c:	ldr	x8, [sp, #48]
  43c660:	cmp	x24, x8
  43c664:	b.eq	43c908 <feof@plt+0x39c08>  // b.none
  43c668:	and	w9, w21, #0x3
  43c66c:	add	w8, w9, #0x3
  43c670:	sub	w10, w20, w24
  43c674:	cmp	w8, w10
  43c678:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c67c:	ldurb	w8, [x24, #-1]
  43c680:	lsr	x21, x21, #2
  43c684:	cmp	w9, #0x1
  43c688:	sub	w28, w28, #0x2
  43c68c:	b.eq	43c6a8 <feof@plt+0x399a8>  // b.none
  43c690:	cmp	w9, #0x2
  43c694:	b.eq	43c6a4 <feof@plt+0x399a4>  // b.none
  43c698:	cmp	w9, #0x3
  43c69c:	b.ne	43c6ac <feof@plt+0x399ac>  // b.any
  43c6a0:	strb	w8, [x24], #1
  43c6a4:	strb	w8, [x24], #1
  43c6a8:	strb	w8, [x24], #1
  43c6ac:	add	x9, x24, #0x3
  43c6b0:	strb	w8, [x24]
  43c6b4:	strb	w8, [x24, #1]
  43c6b8:	strb	w8, [x24, #2]
  43c6bc:	mov	x24, x9
  43c6c0:	b	43c5ec <feof@plt+0x398ec>
  43c6c4:	and	w8, w21, #0x7f
  43c6c8:	add	w22, w8, #0xb
  43c6cc:	sub	w8, w20, w24
  43c6d0:	cmp	w22, w8
  43c6d4:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c6d8:	mov	x0, x24
  43c6dc:	mov	w1, wzr
  43c6e0:	mov	x2, x22
  43c6e4:	sub	w28, w28, #0x7
  43c6e8:	lsr	x21, x21, #7
  43c6ec:	bl	402790 <memset@plt>
  43c6f0:	add	x24, x24, x22
  43c6f4:	b	43c5ec <feof@plt+0x398ec>
  43c6f8:	and	w8, w21, #0x7
  43c6fc:	add	w9, w8, #0x3
  43c700:	sub	w10, w20, w24
  43c704:	cmp	w9, w10
  43c708:	b.hi	43c908 <feof@plt+0x39c08>  // b.pmore
  43c70c:	sub	w8, w8, #0x1
  43c710:	lsr	x21, x21, #3
  43c714:	cmp	w8, #0x6
  43c718:	sub	w28, w28, #0x3
  43c71c:	b.hi	43c754 <feof@plt+0x39a54>  // b.pmore
  43c720:	adrp	x11, 464000 <_obstack_memory_used@@Base+0xedd8>
  43c724:	add	x11, x11, #0x84c
  43c728:	adr	x9, 43c738 <feof@plt+0x39a38>
  43c72c:	ldrb	w10, [x11, x8]
  43c730:	add	x9, x9, x10, lsl #2
  43c734:	br	x9
  43c738:	strb	wzr, [x24], #1
  43c73c:	strb	wzr, [x24], #1
  43c740:	strb	wzr, [x24], #1
  43c744:	strb	wzr, [x24], #1
  43c748:	strb	wzr, [x24], #1
  43c74c:	strb	wzr, [x24], #1
  43c750:	strb	wzr, [x24], #1
  43c754:	add	x8, x24, #0x3
  43c758:	strh	wzr, [x24]
  43c75c:	strb	wzr, [x24, #2]
  43c760:	mov	x24, x8
  43c764:	b	43c5ec <feof@plt+0x398ec>
  43c768:	ubfx	w9, w21, #3, #3
  43c76c:	cmp	w8, #0x7
  43c770:	sturb	w9, [x29, #-15]
  43c774:	b.ne	43c784 <feof@plt+0x39a84>  // b.any
  43c778:	lsr	x21, x21, #6
  43c77c:	sub	w28, w28, #0x6
  43c780:	b	43c280 <feof@plt+0x39580>
  43c784:	ubfx	w9, w21, #6, #3
  43c788:	cmp	w8, #0x8
  43c78c:	sturb	w9, [x29, #-18]
  43c790:	b.ne	43c7a0 <feof@plt+0x39aa0>  // b.any
  43c794:	lsr	x21, x21, #9
  43c798:	sub	w28, w28, #0x9
  43c79c:	b	43c280 <feof@plt+0x39580>
  43c7a0:	ubfx	w9, w21, #9, #3
  43c7a4:	cmp	w8, #0x9
  43c7a8:	sturb	w9, [x29, #-14]
  43c7ac:	b.ne	43c7bc <feof@plt+0x39abc>  // b.any
  43c7b0:	lsr	x21, x21, #12
  43c7b4:	sub	w28, w28, #0xc
  43c7b8:	b	43c280 <feof@plt+0x39580>
  43c7bc:	ubfx	w9, w21, #12, #3
  43c7c0:	lsr	x21, x21, #15
  43c7c4:	cmp	w8, #0xa
  43c7c8:	sturb	w9, [x29, #-19]
  43c7cc:	sub	w9, w28, #0xf
  43c7d0:	b.ne	43c7dc <feof@plt+0x39adc>  // b.any
  43c7d4:	mov	w28, w9
  43c7d8:	b	43c280 <feof@plt+0x39580>
  43c7dc:	cmp	w9, #0xe
  43c7e0:	b.hi	43c804 <feof@plt+0x39b04>  // b.pmore
  43c7e4:	sub	x10, x27, x25
  43c7e8:	cmp	x10, #0x4
  43c7ec:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c7f0:	ldr	w10, [x25], #4
  43c7f4:	lsl	x10, x10, x9
  43c7f8:	add	w9, w28, #0x11
  43c7fc:	orr	x21, x10, x21
  43c800:	prfm	pldl1strm, [x25]
  43c804:	and	w10, w21, #0x7
  43c808:	cmp	w8, #0xb
  43c80c:	sturb	w10, [x29, #-13]
  43c810:	b.ne	43c820 <feof@plt+0x39b20>  // b.any
  43c814:	lsr	x21, x21, #3
  43c818:	sub	w28, w9, #0x3
  43c81c:	b	43c280 <feof@plt+0x39580>
  43c820:	ubfx	w10, w21, #3, #3
  43c824:	cmp	w8, #0xc
  43c828:	sturb	w10, [x29, #-20]
  43c82c:	b.ne	43c83c <feof@plt+0x39b3c>  // b.any
  43c830:	lsr	x21, x21, #6
  43c834:	sub	w28, w9, #0x6
  43c838:	b	43c280 <feof@plt+0x39580>
  43c83c:	ubfx	w10, w21, #6, #3
  43c840:	cmp	w8, #0xd
  43c844:	sturb	w10, [x29, #-12]
  43c848:	b.ne	43c858 <feof@plt+0x39b58>  // b.any
  43c84c:	lsr	x21, x21, #9
  43c850:	sub	w28, w9, #0x9
  43c854:	b	43c280 <feof@plt+0x39580>
  43c858:	ubfx	w10, w21, #9, #3
  43c85c:	cmp	w8, #0xe
  43c860:	sturb	w10, [x29, #-21]
  43c864:	b.ne	43c870 <feof@plt+0x39b70>  // b.any
  43c868:	lsr	x21, x21, #12
  43c86c:	b	43c27c <feof@plt+0x3957c>
  43c870:	ubfx	w10, w21, #12, #3
  43c874:	lsr	x21, x21, #15
  43c878:	cmp	w8, #0xf
  43c87c:	sub	w28, w9, #0xf
  43c880:	sturb	w10, [x29, #-11]
  43c884:	b.eq	43c280 <feof@plt+0x39580>  // b.none
  43c888:	cmp	w28, #0xe
  43c88c:	b.hi	43c8b0 <feof@plt+0x39bb0>  // b.pmore
  43c890:	sub	x10, x27, x25
  43c894:	cmp	x10, #0x4
  43c898:	b.lt	43c908 <feof@plt+0x39c08>  // b.tstop
  43c89c:	ldr	w10, [x25], #4
  43c8a0:	lsl	x10, x10, x28
  43c8a4:	add	w28, w9, #0x11
  43c8a8:	orr	x21, x10, x21
  43c8ac:	prfm	pldl1strm, [x25]
  43c8b0:	and	w9, w21, #0x7
  43c8b4:	cmp	w8, #0x10
  43c8b8:	sturb	w9, [x29, #-22]
  43c8bc:	b.eq	43c1b8 <feof@plt+0x394b8>  // b.none
  43c8c0:	ubfx	w9, w21, #3, #3
  43c8c4:	cmp	w8, #0x11
  43c8c8:	sturb	w9, [x29, #-10]
  43c8cc:	b.eq	43c778 <feof@plt+0x39a78>  // b.none
  43c8d0:	ubfx	w9, w21, #6, #3
  43c8d4:	cmp	w8, #0x12
  43c8d8:	sturb	w9, [x29, #-23]
  43c8dc:	b.eq	43c794 <feof@plt+0x39a94>  // b.none
  43c8e0:	ubfx	w8, w21, #9, #3
  43c8e4:	lsr	x21, x21, #12
  43c8e8:	sturb	w8, [x29, #-9]
  43c8ec:	b	43c7b4 <feof@plt+0x39ab4>
  43c8f0:	ldr	x4, [sp]
  43c8f4:	sub	x8, x27, x25
  43c8f8:	cmp	x8, #0x5
  43c8fc:	b.ge	43bfec <feof@plt+0x392ec>  // b.tcont
  43c900:	cmp	x23, x20
  43c904:	b.eq	43c92c <feof@plt+0x39c2c>  // b.none
  43c908:	mov	w0, wzr
  43c90c:	ldp	x20, x19, [sp, #192]
  43c910:	ldp	x22, x21, [sp, #176]
  43c914:	ldp	x24, x23, [sp, #160]
  43c918:	ldp	x26, x25, [sp, #144]
  43c91c:	ldp	x28, x27, [sp, #128]
  43c920:	ldp	x29, x30, [sp, #112]
  43c924:	add	sp, sp, #0xd0
  43c928:	ret
  43c92c:	ldur	w8, [x27, #-4]
  43c930:	lsr	x9, x4, #4
  43c934:	cmp	x9, #0x15b
  43c938:	b.cc	43cb58 <feof@plt+0x39e58>  // b.lo, b.ul, b.last
  43c93c:	mov	w13, #0x8071                	// #32881
  43c940:	mov	w9, wzr
  43c944:	mov	w10, #0x1                   	// #1
  43c948:	mov	w11, #0x15b0                	// #5552
  43c94c:	mov	x12, #0xffffffffffffea50    	// #-5552
  43c950:	movk	w13, #0x8007, lsl #16
  43c954:	mov	w14, #0xfff1                	// #65521
  43c958:	mov	x15, xzr
  43c95c:	add	x16, x19, x15
  43c960:	ldrb	w17, [x16]
  43c964:	ldrb	w18, [x16, #1]
  43c968:	add	x15, x15, #0x10
  43c96c:	add	w10, w10, w17
  43c970:	ldrb	w17, [x16, #2]
  43c974:	add	w9, w10, w9
  43c978:	add	w10, w10, w18
  43c97c:	ldrb	w18, [x16, #3]
  43c980:	add	w9, w9, w10
  43c984:	add	w10, w10, w17
  43c988:	ldrb	w17, [x16, #4]
  43c98c:	add	w9, w9, w10
  43c990:	add	w10, w10, w18
  43c994:	ldrb	w18, [x16, #5]
  43c998:	add	w9, w9, w10
  43c99c:	add	w10, w10, w17
  43c9a0:	ldrb	w17, [x16, #6]
  43c9a4:	add	w9, w9, w10
  43c9a8:	add	w10, w10, w18
  43c9ac:	ldrb	w18, [x16, #7]
  43c9b0:	add	w9, w9, w10
  43c9b4:	add	w10, w10, w17
  43c9b8:	ldrb	w17, [x16, #8]
  43c9bc:	add	w9, w9, w10
  43c9c0:	add	w10, w10, w18
  43c9c4:	ldrb	w18, [x16, #9]
  43c9c8:	add	w9, w9, w10
  43c9cc:	add	w10, w10, w17
  43c9d0:	ldrb	w17, [x16, #10]
  43c9d4:	add	w9, w9, w10
  43c9d8:	add	w10, w10, w18
  43c9dc:	ldrb	w18, [x16, #11]
  43c9e0:	add	w9, w9, w10
  43c9e4:	add	w10, w10, w17
  43c9e8:	ldrb	w17, [x16, #12]
  43c9ec:	add	w9, w9, w10
  43c9f0:	add	w10, w10, w18
  43c9f4:	ldrb	w18, [x16, #13]
  43c9f8:	add	w9, w9, w10
  43c9fc:	add	w10, w10, w17
  43ca00:	ldrb	w17, [x16, #14]
  43ca04:	ldrb	w16, [x16, #15]
  43ca08:	add	w9, w9, w10
  43ca0c:	add	w10, w10, w18
  43ca10:	add	w9, w9, w10
  43ca14:	add	w10, w10, w17
  43ca18:	sub	w17, w15, #0x10
  43ca1c:	lsr	w17, w17, #5
  43ca20:	add	w9, w9, w10
  43ca24:	add	w10, w10, w16
  43ca28:	cmp	w17, #0xad
  43ca2c:	add	w9, w9, w10
  43ca30:	b.cc	43c95c <feof@plt+0x39c5c>  // b.lo, b.ul, b.last
  43ca34:	add	x4, x4, x12
  43ca38:	umull	x15, w10, w13
  43ca3c:	umull	x16, w9, w13
  43ca40:	lsr	x15, x15, #47
  43ca44:	lsr	x16, x16, #47
  43ca48:	lsr	x17, x4, #4
  43ca4c:	add	x19, x19, x11
  43ca50:	msub	w10, w15, w14, w10
  43ca54:	cmp	x17, #0x15a
  43ca58:	msub	w9, w16, w14, w9
  43ca5c:	b.hi	43c958 <feof@plt+0x39c58>  // b.pmore
  43ca60:	subs	x11, x4, #0x10
  43ca64:	b.cc	43cb68 <feof@plt+0x39e68>  // b.lo, b.ul, b.last
  43ca68:	and	x12, x11, #0xfffffffffffffff0
  43ca6c:	add	x13, x12, #0x10
  43ca70:	mov	x14, x19
  43ca74:	ldrb	w15, [x14]
  43ca78:	ldrb	w16, [x14, #1]
  43ca7c:	sub	x4, x4, #0x10
  43ca80:	cmp	x4, #0xf
  43ca84:	add	w10, w10, w15
  43ca88:	ldrb	w15, [x14, #2]
  43ca8c:	add	w9, w10, w9
  43ca90:	add	w10, w10, w16
  43ca94:	ldrb	w16, [x14, #3]
  43ca98:	add	w9, w9, w10
  43ca9c:	add	w10, w10, w15
  43caa0:	ldrb	w15, [x14, #4]
  43caa4:	add	w9, w9, w10
  43caa8:	add	w10, w10, w16
  43caac:	ldrb	w16, [x14, #5]
  43cab0:	add	w9, w9, w10
  43cab4:	add	w10, w10, w15
  43cab8:	ldrb	w15, [x14, #6]
  43cabc:	add	w9, w9, w10
  43cac0:	add	w10, w10, w16
  43cac4:	ldrb	w16, [x14, #7]
  43cac8:	add	w9, w9, w10
  43cacc:	add	w10, w10, w15
  43cad0:	ldrb	w15, [x14, #8]
  43cad4:	add	w9, w9, w10
  43cad8:	add	w10, w10, w16
  43cadc:	ldrb	w16, [x14, #9]
  43cae0:	add	w9, w9, w10
  43cae4:	add	w10, w10, w15
  43cae8:	ldrb	w15, [x14, #10]
  43caec:	add	w9, w9, w10
  43caf0:	add	w10, w10, w16
  43caf4:	ldrb	w16, [x14, #11]
  43caf8:	add	w9, w9, w10
  43cafc:	add	w10, w10, w15
  43cb00:	ldrb	w15, [x14, #12]
  43cb04:	add	w9, w9, w10
  43cb08:	add	w10, w10, w16
  43cb0c:	ldrb	w16, [x14, #13]
  43cb10:	add	w9, w9, w10
  43cb14:	add	w10, w10, w15
  43cb18:	ldrb	w15, [x14, #14]
  43cb1c:	add	w9, w9, w10
  43cb20:	add	w10, w10, w16
  43cb24:	add	w9, w9, w10
  43cb28:	add	w10, w10, w15
  43cb2c:	ldrb	w15, [x14, #15]
  43cb30:	add	w9, w9, w10
  43cb34:	add	x14, x14, #0x10
  43cb38:	add	w10, w10, w15
  43cb3c:	add	w9, w9, w10
  43cb40:	b.hi	43ca74 <feof@plt+0x39d74>  // b.pmore
  43cb44:	add	x19, x19, x13
  43cb48:	sub	x4, x11, x12
  43cb4c:	rev	w8, w8
  43cb50:	cbnz	x4, 43cb70 <feof@plt+0x39e70>
  43cb54:	b	43cb8c <feof@plt+0x39e8c>
  43cb58:	mov	w9, wzr
  43cb5c:	mov	w10, #0x1                   	// #1
  43cb60:	subs	x11, x4, #0x10
  43cb64:	b.cs	43ca68 <feof@plt+0x39d68>  // b.hs, b.nlast
  43cb68:	rev	w8, w8
  43cb6c:	cbz	x4, 43cb8c <feof@plt+0x39e8c>
  43cb70:	mov	x11, xzr
  43cb74:	ldrb	w12, [x19, x11]
  43cb78:	add	x11, x11, #0x1
  43cb7c:	cmp	x4, w11, uxtw
  43cb80:	add	w10, w10, w12
  43cb84:	add	w9, w10, w9
  43cb88:	b.hi	43cb74 <feof@plt+0x39e74>  // b.pmore
  43cb8c:	mov	w11, #0x8071                	// #32881
  43cb90:	movk	w11, #0x8007, lsl #16
  43cb94:	umull	x13, w10, w11
  43cb98:	umull	x11, w9, w11
  43cb9c:	mov	w12, #0xfff1                	// #65521
  43cba0:	lsr	x13, x13, #47
  43cba4:	lsr	x11, x11, #47
  43cba8:	msub	w10, w13, w12, w10
  43cbac:	msub	w9, w11, w12, w9
  43cbb0:	orr	w9, w10, w9, lsl #16
  43cbb4:	cmp	w9, w8
  43cbb8:	cset	w0, eq  // eq = none
  43cbbc:	b	43c90c <feof@plt+0x39c0c>
  43cbc0:	sub	sp, sp, #0xc0
  43cbc4:	stp	x29, x30, [sp, #112]
  43cbc8:	str	x25, [sp, #128]
  43cbcc:	stp	x24, x23, [sp, #144]
  43cbd0:	stp	x22, x21, [sp, #160]
  43cbd4:	stp	x20, x19, [sp, #176]
  43cbd8:	add	x29, sp, #0x70
  43cbdc:	mov	x19, x3
  43cbe0:	add	x20, x2, #0x1, lsl #12
  43cbe4:	movi	v0.2d, #0x0
  43cbe8:	stp	q0, q0, [x29, #-32]
  43cbec:	cbz	x1, 43cc50 <feof@plt+0x39f50>
  43cbf0:	mov	x8, xzr
  43cbf4:	sub	x9, x29, #0x20
  43cbf8:	add	x10, sp, #0x30
  43cbfc:	add	x11, sp, #0x10
  43cc00:	b	43cc30 <feof@plt+0x39f30>
  43cc04:	ldrh	w12, [x11, x12, lsl #1]
  43cc08:	strh	w8, [x20, x12, lsl #1]
  43cc0c:	ldrb	w12, [x0, x8]
  43cc10:	lsl	x14, x12, #1
  43cc14:	ldrh	w13, [x9, x14]
  43cc18:	strh	w8, [x11, x14]
  43cc1c:	add	x8, x8, #0x1
  43cc20:	add	w13, w13, #0x1
  43cc24:	cmp	x1, x8
  43cc28:	strh	w13, [x9, x12, lsl #1]
  43cc2c:	b.eq	43cc50 <feof@plt+0x39f50>  // b.none
  43cc30:	ldrb	w12, [x0, x8]
  43cc34:	cmp	x12, #0xf
  43cc38:	b.hi	43cf08 <feof@plt+0x3a208>  // b.pmore
  43cc3c:	ldrh	w13, [x9, x12, lsl #1]
  43cc40:	cbnz	w13, 43cc04 <feof@plt+0x39f04>
  43cc44:	lsl	x14, x12, #1
  43cc48:	strh	w8, [x10, x14]
  43cc4c:	b	43cc18 <feof@plt+0x39f18>
  43cc50:	mov	w2, #0x800                 	// #2048
  43cc54:	mov	x0, x19
  43cc58:	mov	w1, wzr
  43cc5c:	bl	402790 <memset@plt>
  43cc60:	mov	w8, wzr
  43cc64:	mov	w9, #0x1                   	// #1
  43cc68:	sub	x10, x29, #0x20
  43cc6c:	add	x11, sp, #0x30
  43cc70:	mov	w12, #0x1                   	// #1
  43cc74:	b	43cc84 <feof@plt+0x39f84>
  43cc78:	add	x12, x12, #0x1
  43cc7c:	cmp	x12, #0x9
  43cc80:	b.eq	43cd28 <feof@plt+0x3a028>  // b.none
  43cc84:	ldrh	w13, [x10, x12, lsl #1]
  43cc88:	cbz	w13, 43cc78 <feof@plt+0x39f78>
  43cc8c:	lsl	w17, w9, w12
  43cc90:	cmp	w17, w13
  43cc94:	b.cc	43cf08 <feof@plt+0x3a208>  // b.lo, b.ul, b.last
  43cc98:	ldrh	w15, [x11, x12, lsl #1]
  43cc9c:	sub	x18, x12, #0x1
  43cca0:	mov	x14, xzr
  43cca4:	lsl	x16, x18, #9
  43cca8:	sxtw	x17, w17
  43ccac:	lsl	w18, w9, w18
  43ccb0:	cmp	w15, #0x1ff
  43ccb4:	b.hi	43cf08 <feof@plt+0x3a208>  // b.pmore
  43ccb8:	cmp	w8, #0xff
  43ccbc:	b.hi	43cce0 <feof@plt+0x39fe0>  // b.pmore
  43ccc0:	orr	w0, w16, w15
  43ccc4:	mov	w1, w8
  43ccc8:	ldrh	w2, [x19, x1, lsl #1]
  43cccc:	cbnz	w2, 43cf08 <feof@plt+0x3a208>
  43ccd0:	strh	w0, [x19, x1, lsl #1]
  43ccd4:	add	x1, x1, x17
  43ccd8:	cmp	x1, #0x100
  43ccdc:	b.cc	43ccc8 <feof@plt+0x39fc8>  // b.lo, b.ul, b.last
  43cce0:	add	x14, x14, #0x1
  43cce4:	cmp	x14, x13
  43cce8:	b.cs	43ccf4 <feof@plt+0x39ff4>  // b.hs, b.nlast
  43ccec:	mov	w15, w15
  43ccf0:	ldrh	w15, [x20, x15, lsl #1]
  43ccf4:	mov	w1, w18
  43ccf8:	mov	w0, w1
  43ccfc:	tst	w1, w8
  43cd00:	lsr	w1, w1, #1
  43cd04:	b.ne	43ccf8 <feof@plt+0x39ff8>  // b.any
  43cd08:	sub	w1, w0, #0x1
  43cd0c:	and	w8, w1, w8
  43cd10:	cmp	w0, #0x0
  43cd14:	add	w8, w8, w0
  43cd18:	csel	w8, wzr, w8, eq  // eq = none
  43cd1c:	cmp	x14, x13
  43cd20:	b.ne	43ccb0 <feof@plt+0x39fb0>  // b.any
  43cd24:	b	43cc78 <feof@plt+0x39f78>
  43cd28:	mov	w9, #0x9                   	// #9
  43cd2c:	sub	x10, x29, #0x20
  43cd30:	mov	x11, sp
  43cd34:	mov	w12, #0x1                   	// #1
  43cd38:	b	43cd4c <feof@plt+0x3a04c>
  43cd3c:	cbnz	w13, 43cf08 <feof@plt+0x3a208>
  43cd40:	add	x9, x9, #0x1
  43cd44:	cmp	x9, #0x10
  43cd48:	b.eq	43cdb8 <feof@plt+0x3a0b8>  // b.none
  43cd4c:	ldrh	w13, [x10, x9, lsl #1]
  43cd50:	cbz	w13, 43cd40 <feof@plt+0x3a040>
  43cd54:	mov	x14, xzr
  43cd58:	add	x15, x11, x9, lsl #1
  43cd5c:	sturh	w8, [x15, #-18]
  43cd60:	b	43cd78 <feof@plt+0x3a078>
  43cd64:	add	w8, w17, w8
  43cd68:	bic	w13, w13, w15
  43cd6c:	add	w14, w14, #0x1
  43cd70:	cmp	x9, x14
  43cd74:	b.ls	43cd3c <feof@plt+0x3a03c>  // b.plast
  43cd78:	lsl	w15, w12, w14
  43cd7c:	tst	w15, w13
  43cd80:	b.eq	43cd6c <feof@plt+0x3a06c>  // b.none
  43cd84:	subs	x16, x9, x14
  43cd88:	b.eq	43cd68 <feof@plt+0x3a068>  // b.none
  43cd8c:	sub	w17, w16, #0x1
  43cd90:	mov	w18, #0x1                   	// #1
  43cd94:	lsl	w17, w18, w17
  43cd98:	tst	w17, w8
  43cd9c:	b.eq	43cd64 <feof@plt+0x3a064>  // b.none
  43cda0:	bic	w8, w8, w17
  43cda4:	cmp	x16, w18, uxtw
  43cda8:	add	w18, w18, #0x1
  43cdac:	lsr	w17, w17, #1
  43cdb0:	b.hi	43cd98 <feof@plt+0x3a098>  // b.pmore
  43cdb4:	b	43cd68 <feof@plt+0x3a068>
  43cdb8:	mov	x21, xzr
  43cdbc:	add	x8, x19, #0x200
  43cdc0:	mov	w9, #0xf                   	// #15
  43cdc4:	sub	x10, x29, #0x20
  43cdc8:	add	x11, sp, #0x30
  43cdcc:	mov	x12, sp
  43cdd0:	mov	w13, #0x1                   	// #1
  43cdd4:	b	43cdec <feof@plt+0x3a0ec>
  43cdd8:	mov	x6, x21
  43cddc:	sub	x9, x9, #0x1
  43cde0:	cmp	x9, #0x8
  43cde4:	mov	x21, x6
  43cde8:	b.ls	43cf28 <feof@plt+0x3a228>  // b.plast
  43cdec:	ldrh	w14, [x10, x9, lsl #1]
  43cdf0:	cbz	x14, 43cdd8 <feof@plt+0x3a0d8>
  43cdf4:	lsl	x18, x9, #1
  43cdf8:	add	x0, x18, x12
  43cdfc:	ldrh	w17, [x11, x18]
  43ce00:	ldurh	w1, [x0, #-18]
  43ce04:	sub	x16, x9, #0x8
  43ce08:	lsl	w18, w13, w16
  43ce0c:	sub	w3, w9, #0x1
  43ce10:	mov	x15, xzr
  43ce14:	mov	x4, xzr
  43ce18:	mov	x5, xzr
  43ce1c:	sxtw	x0, w18
  43ce20:	lsl	x2, x16, #9
  43ce24:	lsl	w3, w13, w3
  43ce28:	mov	w7, #0x100                 	// #256
  43ce2c:	and	w22, w1, #0xff
  43ce30:	cmp	x7, x22
  43ce34:	b.ne	43ce40 <feof@plt+0x3a140>  // b.any
  43ce38:	mov	x6, x21
  43ce3c:	b	43ce8c <feof@plt+0x3a18c>
  43ce40:	ldrh	w5, [x19, x22, lsl #1]
  43ce44:	cbz	w5, 43ce68 <feof@plt+0x3a168>
  43ce48:	tbz	w5, #12, 43cf08 <feof@plt+0x3a208>
  43ce4c:	ubfx	x4, x5, #9, #3
  43ce50:	cmp	x16, x4
  43ce54:	b.hi	43cf08 <feof@plt+0x3a208>  // b.pmore
  43ce58:	and	x5, x5, #0x1ff
  43ce5c:	mov	x6, x21
  43ce60:	mov	x7, x22
  43ce64:	b	43ce8c <feof@plt+0x3a18c>
  43ce68:	cmp	x21, #0x1ff
  43ce6c:	b.hi	43cf08 <feof@plt+0x3a208>  // b.pmore
  43ce70:	add	w4, w21, w2
  43ce74:	add	w4, w4, #0x1, lsl #12
  43ce78:	add	x6, x21, x0
  43ce7c:	strh	w4, [x19, x22, lsl #1]
  43ce80:	mov	x7, x22
  43ce84:	mov	x5, x21
  43ce88:	mov	x4, x16
  43ce8c:	lsr	w21, w1, #8
  43ce90:	lsl	w22, w13, w4
  43ce94:	cmp	w21, w22
  43ce98:	b.cs	43cebc <feof@plt+0x3a1bc>  // b.hs, b.nlast
  43ce9c:	orr	w23, w2, w17
  43cea0:	add	x24, x8, x5, lsl #1
  43cea4:	ldrh	w25, [x24, x21, lsl #1]
  43cea8:	cbnz	w25, 43cf08 <feof@plt+0x3a208>
  43ceac:	strh	w23, [x24, x21, lsl #1]
  43ceb0:	add	x21, x21, x18
  43ceb4:	cmp	x21, x22
  43ceb8:	b.cc	43cea4 <feof@plt+0x3a1a4>  // b.lo, b.ul, b.last
  43cebc:	add	x15, x15, #0x1
  43cec0:	cmp	x15, x14
  43cec4:	b.cs	43ced0 <feof@plt+0x3a1d0>  // b.hs, b.nlast
  43cec8:	mov	w17, w17
  43cecc:	ldrh	w17, [x20, x17, lsl #1]
  43ced0:	mov	w22, w3
  43ced4:	mov	w21, w22
  43ced8:	tst	w22, w1
  43cedc:	lsr	w22, w22, #1
  43cee0:	b.ne	43ced4 <feof@plt+0x3a1d4>  // b.any
  43cee4:	sub	w22, w21, #0x1
  43cee8:	and	w1, w22, w1
  43ceec:	cmp	w21, #0x0
  43cef0:	add	w1, w1, w21
  43cef4:	csel	w1, wzr, w1, eq  // eq = none
  43cef8:	cmp	x15, x14
  43cefc:	mov	x21, x6
  43cf00:	b.ne	43ce2c <feof@plt+0x3a12c>  // b.any
  43cf04:	b	43cddc <feof@plt+0x3a0dc>
  43cf08:	mov	w0, wzr
  43cf0c:	ldp	x20, x19, [sp, #176]
  43cf10:	ldp	x22, x21, [sp, #160]
  43cf14:	ldp	x24, x23, [sp, #144]
  43cf18:	ldr	x25, [sp, #128]
  43cf1c:	ldp	x29, x30, [sp, #112]
  43cf20:	add	sp, sp, #0xc0
  43cf24:	ret
  43cf28:	mov	w0, #0x1                   	// #1
  43cf2c:	b	43cf0c <feof@plt+0x3a20c>
  43cf30:	sub	sp, sp, #0x120
  43cf34:	stp	x29, x30, [sp, #192]
  43cf38:	stp	x28, x27, [sp, #208]
  43cf3c:	stp	x26, x25, [sp, #224]
  43cf40:	stp	x24, x23, [sp, #240]
  43cf44:	stp	x22, x21, [sp, #256]
  43cf48:	stp	x20, x19, [sp, #272]
  43cf4c:	add	x29, sp, #0xc0
  43cf50:	mov	x24, x2
  43cf54:	mov	x22, x0
  43cf58:	add	x2, sp, #0x38
  43cf5c:	mov	w0, wzr
  43cf60:	mov	x19, x5
  43cf64:	mov	x20, x4
  43cf68:	mov	w21, w3
  43cf6c:	mov	x26, x1
  43cf70:	bl	402b70 <__lxstat@plt>
  43cf74:	mov	x23, xzr
  43cf78:	str	w21, [sp, #20]
  43cf7c:	tbnz	w0, #31, 43d120 <feof@plt+0x3a420>
  43cf80:	ldr	w8, [sp, #72]
  43cf84:	and	w8, w8, #0xf000
  43cf88:	cmp	w8, #0xa, lsl #12
  43cf8c:	b.ne	43d120 <feof@plt+0x3a420>  // b.any
  43cf90:	mov	x27, xzr
  43cf94:	mov	x23, xzr
  43cf98:	mov	w1, #0x80                  	// #128
  43cf9c:	mov	x0, x22
  43cfa0:	mov	x2, x20
  43cfa4:	mov	x3, x19
  43cfa8:	bl	439a30 <feof@plt+0x36d30>
  43cfac:	cbz	x0, 43d140 <feof@plt+0x3a440>
  43cfb0:	mov	x28, x0
  43cfb4:	mov	w25, #0x80                  	// #128
  43cfb8:	mov	x0, x26
  43cfbc:	mov	x1, x28
  43cfc0:	mov	x2, x25
  43cfc4:	bl	402680 <readlink@plt>
  43cfc8:	tbnz	x0, #63, 43d128 <feof@plt+0x3a428>
  43cfcc:	sub	x8, x25, #0x1
  43cfd0:	cmp	x0, x8
  43cfd4:	b.cc	43d014 <feof@plt+0x3a314>  // b.lo, b.ul, b.last
  43cfd8:	mov	x0, x22
  43cfdc:	mov	x1, x28
  43cfe0:	mov	x2, x25
  43cfe4:	mov	x3, x20
  43cfe8:	mov	x4, x19
  43cfec:	bl	439bf4 <feof@plt+0x36ef4>
  43cff0:	lsl	x25, x25, #1
  43cff4:	mov	x0, x22
  43cff8:	mov	x1, x25
  43cffc:	mov	x2, x20
  43d000:	mov	x3, x19
  43d004:	bl	439a30 <feof@plt+0x36d30>
  43d008:	mov	x28, x0
  43d00c:	cbnz	x0, 43cfb8 <feof@plt+0x3a2b8>
  43d010:	b	43d140 <feof@plt+0x3a440>
  43d014:	strb	wzr, [x28, x0]
  43d018:	ldrb	w8, [x28]
  43d01c:	cmp	w8, #0x2f
  43d020:	b.eq	43d0d0 <feof@plt+0x3a3d0>  // b.none
  43d024:	mov	w1, #0x2f                  	// #47
  43d028:	mov	x0, x26
  43d02c:	bl	402aa0 <strrchr@plt>
  43d030:	cbz	x0, 43d0d0 <feof@plt+0x3a3d0>
  43d034:	sub	x8, x0, x26
  43d038:	mov	x0, x28
  43d03c:	str	x24, [sp, #24]
  43d040:	add	x24, x8, #0x1
  43d044:	bl	4026d0 <strlen@plt>
  43d048:	add	x8, x24, x0
  43d04c:	add	x1, x8, #0x1
  43d050:	mov	x0, x22
  43d054:	mov	x2, x20
  43d058:	mov	x3, x19
  43d05c:	str	x1, [sp, #8]
  43d060:	bl	439a30 <feof@plt+0x36d30>
  43d064:	cbz	x0, 43d4a8 <feof@plt+0x3a7a8>
  43d068:	mov	x1, x26
  43d06c:	mov	x2, x24
  43d070:	mov	x21, x0
  43d074:	bl	402640 <memcpy@plt>
  43d078:	add	x8, x21, x24
  43d07c:	mov	x0, x28
  43d080:	str	x8, [sp]
  43d084:	bl	4026d0 <strlen@plt>
  43d088:	mov	x26, x0
  43d08c:	ldr	x0, [sp]
  43d090:	mov	x1, x28
  43d094:	mov	x2, x26
  43d098:	bl	402640 <memcpy@plt>
  43d09c:	add	x8, x26, x24
  43d0a0:	mov	x0, x22
  43d0a4:	mov	x1, x28
  43d0a8:	mov	x2, x25
  43d0ac:	mov	x3, x20
  43d0b0:	mov	x4, x19
  43d0b4:	strb	wzr, [x21, x8]
  43d0b8:	bl	439bf4 <feof@plt+0x36ef4>
  43d0bc:	ldr	x25, [sp, #8]
  43d0c0:	ldr	x24, [sp, #24]
  43d0c4:	mov	x26, x21
  43d0c8:	cbnz	x23, 43d0d8 <feof@plt+0x3a3d8>
  43d0cc:	b	43d0f0 <feof@plt+0x3a3f0>
  43d0d0:	mov	x26, x28
  43d0d4:	cbz	x23, 43d0f0 <feof@plt+0x3a3f0>
  43d0d8:	mov	x0, x22
  43d0dc:	mov	x1, x23
  43d0e0:	mov	x2, x27
  43d0e4:	mov	x3, x20
  43d0e8:	mov	x4, x19
  43d0ec:	bl	439bf4 <feof@plt+0x36ef4>
  43d0f0:	add	x2, sp, #0x38
  43d0f4:	mov	w0, wzr
  43d0f8:	mov	x1, x26
  43d0fc:	bl	402b70 <__lxstat@plt>
  43d100:	tbnz	w0, #31, 43d4a0 <feof@plt+0x3a7a0>
  43d104:	ldr	w8, [sp, #72]
  43d108:	mov	x27, x25
  43d10c:	mov	x23, x26
  43d110:	and	w8, w8, #0xf000
  43d114:	cmp	w8, #0xa, lsl #12
  43d118:	b.eq	43cf98 <feof@plt+0x3a298>  // b.none
  43d11c:	b	43d144 <feof@plt+0x3a444>
  43d120:	mov	x25, x23
  43d124:	b	43d144 <feof@plt+0x3a444>
  43d128:	mov	x0, x22
  43d12c:	mov	x1, x28
  43d130:	mov	x2, x25
  43d134:	mov	x3, x20
  43d138:	mov	x4, x19
  43d13c:	bl	439bf4 <feof@plt+0x36ef4>
  43d140:	mov	x25, x27
  43d144:	mov	w1, #0x2f                  	// #47
  43d148:	mov	x0, x26
  43d14c:	str	x23, [sp, #24]
  43d150:	bl	402aa0 <strrchr@plt>
  43d154:	adrp	x9, 455000 <_obstack_begin_1@@Base+0xa4>
  43d158:	sub	x8, x0, x26
  43d15c:	add	x9, x9, #0xce0
  43d160:	cmp	x0, #0x0
  43d164:	mov	x0, x24
  43d168:	csel	x28, x9, x26, eq  // eq = none
  43d16c:	csinc	x27, xzr, x8, eq  // eq = none
  43d170:	bl	4026d0 <strlen@plt>
  43d174:	add	x23, x27, x0
  43d178:	mov	x26, x0
  43d17c:	add	x1, x23, #0x1
  43d180:	mov	x0, x22
  43d184:	mov	x2, x20
  43d188:	mov	x3, x19
  43d18c:	str	x1, [sp, #8]
  43d190:	bl	439a30 <feof@plt+0x36d30>
  43d194:	mov	x21, x22
  43d198:	mov	x22, x24
  43d19c:	str	x28, [sp]
  43d1a0:	cbz	x0, 43d208 <feof@plt+0x3a508>
  43d1a4:	mov	x1, x28
  43d1a8:	mov	x2, x27
  43d1ac:	mov	x24, x0
  43d1b0:	bl	402640 <memcpy@plt>
  43d1b4:	add	x0, x24, x27
  43d1b8:	mov	x1, x22
  43d1bc:	mov	x2, x26
  43d1c0:	bl	402640 <memcpy@plt>
  43d1c4:	add	x3, sp, #0x38
  43d1c8:	mov	x0, x24
  43d1cc:	mov	x1, x20
  43d1d0:	mov	x2, x19
  43d1d4:	strb	wzr, [x24, x23]
  43d1d8:	bl	43a1b4 <feof@plt+0x374b4>
  43d1dc:	ldr	x2, [sp, #8]
  43d1e0:	mov	w26, w0
  43d1e4:	mov	x0, x21
  43d1e8:	mov	x1, x24
  43d1ec:	mov	x3, x20
  43d1f0:	mov	x4, x19
  43d1f4:	bl	439bf4 <feof@plt+0x36ef4>
  43d1f8:	mov	x28, x22
  43d1fc:	mov	x22, x21
  43d200:	tbz	w26, #31, 43d370 <feof@plt+0x3a670>
  43d204:	b	43d210 <feof@plt+0x3a510>
  43d208:	mov	x28, x22
  43d20c:	mov	x22, x21
  43d210:	mov	x0, x28
  43d214:	bl	4026d0 <strlen@plt>
  43d218:	add	x23, x27, x0
  43d21c:	add	x21, x23, #0x8
  43d220:	mov	x26, x0
  43d224:	mov	x0, x22
  43d228:	mov	x1, x21
  43d22c:	mov	x2, x20
  43d230:	mov	x3, x19
  43d234:	bl	439a30 <feof@plt+0x36d30>
  43d238:	cbz	x0, 43d2b4 <feof@plt+0x3a5b4>
  43d23c:	ldr	x1, [sp]
  43d240:	mov	x2, x27
  43d244:	mov	x24, x0
  43d248:	add	x23, x23, #0x7
  43d24c:	bl	402640 <memcpy@plt>
  43d250:	add	x8, x24, x27
  43d254:	mov	w9, #0x642e                	// #25646
  43d258:	mov	w10, #0x7562                	// #30050
  43d25c:	movk	w9, #0x6265, lsl #16
  43d260:	movk	w10, #0x2f67, lsl #16
  43d264:	add	x0, x8, #0x7
  43d268:	mov	x1, x28
  43d26c:	mov	x2, x26
  43d270:	str	w9, [x8]
  43d274:	stur	w10, [x8, #3]
  43d278:	bl	402640 <memcpy@plt>
  43d27c:	add	x3, sp, #0x38
  43d280:	mov	x0, x24
  43d284:	mov	x1, x20
  43d288:	mov	x2, x19
  43d28c:	strb	wzr, [x24, x23]
  43d290:	bl	43a1b4 <feof@plt+0x374b4>
  43d294:	mov	w26, w0
  43d298:	mov	x0, x22
  43d29c:	mov	x1, x24
  43d2a0:	mov	x2, x21
  43d2a4:	mov	x3, x20
  43d2a8:	mov	x4, x19
  43d2ac:	bl	439bf4 <feof@plt+0x36ef4>
  43d2b0:	tbz	w26, #31, 43d370 <feof@plt+0x3a670>
  43d2b4:	mov	x0, x28
  43d2b8:	bl	4026d0 <strlen@plt>
  43d2bc:	add	x23, x27, x0
  43d2c0:	add	x21, x23, #0x10
  43d2c4:	mov	x26, x0
  43d2c8:	mov	x0, x22
  43d2cc:	mov	x1, x21
  43d2d0:	mov	x2, x20
  43d2d4:	mov	x3, x19
  43d2d8:	bl	439a30 <feof@plt+0x36d30>
  43d2dc:	cbz	x0, 43d36c <feof@plt+0x3a66c>
  43d2e0:	adrp	x8, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d2e4:	add	x8, x8, #0x341
  43d2e8:	ldur	x9, [x8, #7]
  43d2ec:	ldr	x8, [x8]
  43d2f0:	ldr	x1, [sp]
  43d2f4:	add	x10, x23, #0xf
  43d2f8:	add	x23, x0, #0xf
  43d2fc:	mov	x24, x0
  43d300:	stur	x9, [x0, #7]
  43d304:	str	x8, [x0]
  43d308:	mov	x0, x23
  43d30c:	mov	x2, x27
  43d310:	str	x10, [sp, #8]
  43d314:	bl	402640 <memcpy@plt>
  43d318:	add	x0, x23, x27
  43d31c:	mov	x1, x28
  43d320:	mov	x2, x26
  43d324:	bl	402640 <memcpy@plt>
  43d328:	ldr	x8, [sp, #8]
  43d32c:	add	x3, sp, #0x38
  43d330:	mov	x0, x24
  43d334:	mov	x1, x20
  43d338:	mov	x2, x19
  43d33c:	strb	wzr, [x24, x8]
  43d340:	bl	43a1b4 <feof@plt+0x374b4>
  43d344:	mov	w23, w0
  43d348:	mov	x0, x22
  43d34c:	mov	x1, x24
  43d350:	mov	x2, x21
  43d354:	mov	x3, x20
  43d358:	mov	x4, x19
  43d35c:	bl	439bf4 <feof@plt+0x36ef4>
  43d360:	cmp	w23, #0x0
  43d364:	csinv	w26, w23, wzr, ge  // ge = tcont
  43d368:	b	43d370 <feof@plt+0x3a670>
  43d36c:	mov	w26, #0xffffffff            	// #-1
  43d370:	ldr	x23, [sp, #24]
  43d374:	mov	x27, x25
  43d378:	cbz	x23, 43d398 <feof@plt+0x3a698>
  43d37c:	cbz	x27, 43d398 <feof@plt+0x3a698>
  43d380:	mov	x0, x22
  43d384:	mov	x1, x23
  43d388:	mov	x2, x27
  43d38c:	mov	x3, x20
  43d390:	mov	x4, x19
  43d394:	bl	439bf4 <feof@plt+0x36ef4>
  43d398:	tbnz	w26, #31, 43d478 <feof@plt+0x3a778>
  43d39c:	ldr	w23, [sp, #20]
  43d3a0:	cbz	w23, 43d47c <feof@plt+0x3a77c>
  43d3a4:	add	x2, sp, #0x38
  43d3a8:	mov	w0, wzr
  43d3ac:	mov	w1, w26
  43d3b0:	bl	402600 <__fxstat@plt>
  43d3b4:	tbnz	w0, #31, 43d420 <feof@plt+0x3a720>
  43d3b8:	ldr	x3, [sp, #104]
  43d3bc:	add	x6, sp, #0x20
  43d3c0:	mov	x0, x22
  43d3c4:	mov	w1, w26
  43d3c8:	mov	x2, xzr
  43d3cc:	mov	x4, x20
  43d3d0:	mov	x5, x19
  43d3d4:	bl	43d4cc <feof@plt+0x3a7cc>
  43d3d8:	cbz	w0, 43d438 <feof@plt+0x3a738>
  43d3dc:	ldr	x10, [sp, #104]
  43d3e0:	cmp	x10, #0x1
  43d3e4:	b.lt	43d448 <feof@plt+0x3a748>  // b.tstop
  43d3e8:	ldr	x8, [sp, #32]
  43d3ec:	adrp	x11, 464000 <_obstack_memory_used@@Base+0xedd8>
  43d3f0:	mov	w9, #0xffffffff            	// #-1
  43d3f4:	add	x11, x11, #0xd34
  43d3f8:	add	x10, x8, x10
  43d3fc:	ldrb	w12, [x8], #1
  43d400:	and	w13, w9, #0xff
  43d404:	eor	w12, w13, w12
  43d408:	ldr	w12, [x11, w12, uxtw #2]
  43d40c:	cmp	x8, x10
  43d410:	eor	w9, w12, w9, lsr #8
  43d414:	b.cc	43d3fc <feof@plt+0x3a6fc>  // b.lo, b.ul, b.last
  43d418:	mvn	w21, w9
  43d41c:	b	43d44c <feof@plt+0x3a74c>
  43d420:	bl	402ac0 <__errno_location@plt>
  43d424:	ldr	w2, [x0]
  43d428:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d42c:	add	x1, x1, #0x351
  43d430:	mov	x0, x19
  43d434:	blr	x20
  43d438:	mov	w21, wzr
  43d43c:	cmp	w21, w23
  43d440:	b.eq	43d47c <feof@plt+0x3a77c>  // b.none
  43d444:	b	43d468 <feof@plt+0x3a768>
  43d448:	mov	w21, wzr
  43d44c:	add	x1, sp, #0x20
  43d450:	mov	x0, x22
  43d454:	mov	x2, x20
  43d458:	mov	x3, x19
  43d45c:	bl	43d58c <feof@plt+0x3a88c>
  43d460:	cmp	w21, w23
  43d464:	b.eq	43d47c <feof@plt+0x3a77c>  // b.none
  43d468:	mov	w0, w26
  43d46c:	mov	x1, x20
  43d470:	mov	x2, x19
  43d474:	bl	43a250 <feof@plt+0x37550>
  43d478:	mov	w26, #0xffffffff            	// #-1
  43d47c:	mov	w0, w26
  43d480:	ldp	x20, x19, [sp, #272]
  43d484:	ldp	x22, x21, [sp, #256]
  43d488:	ldp	x24, x23, [sp, #240]
  43d48c:	ldp	x26, x25, [sp, #224]
  43d490:	ldp	x28, x27, [sp, #208]
  43d494:	ldp	x29, x30, [sp, #192]
  43d498:	add	sp, sp, #0x120
  43d49c:	ret
  43d4a0:	mov	x23, x26
  43d4a4:	b	43d144 <feof@plt+0x3a444>
  43d4a8:	mov	w26, #0xffffffff            	// #-1
  43d4ac:	cbnz	x23, 43d37c <feof@plt+0x3a67c>
  43d4b0:	b	43d398 <feof@plt+0x3a698>
  43d4b4:	ldr	x8, [x0, #8]
  43d4b8:	ldr	x9, [x1, #8]
  43d4bc:	cmp	x8, x9
  43d4c0:	cset	w8, hi  // hi = pmore
  43d4c4:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  43d4c8:	ret
  43d4cc:	stp	x29, x30, [sp, #-80]!
  43d4d0:	str	x25, [sp, #16]
  43d4d4:	stp	x24, x23, [sp, #32]
  43d4d8:	stp	x22, x21, [sp, #48]
  43d4dc:	stp	x20, x19, [sp, #64]
  43d4e0:	mov	x29, sp
  43d4e4:	mov	x21, x6
  43d4e8:	mov	x20, x5
  43d4ec:	mov	x19, x4
  43d4f0:	mov	x22, x3
  43d4f4:	mov	x23, x2
  43d4f8:	mov	w24, w1
  43d4fc:	bl	402c10 <getpagesize@plt>
  43d500:	sxtw	x8, w0
  43d504:	udiv	x9, x23, x8
  43d508:	add	x10, x22, x8
  43d50c:	msub	w25, w9, w0, w23
  43d510:	add	x9, x10, x25
  43d514:	sub	x9, x9, #0x1
  43d518:	neg	x8, x8
  43d51c:	and	x22, x9, x8
  43d520:	sub	x5, x23, x25
  43d524:	mov	w2, #0x1                   	// #1
  43d528:	mov	w3, #0x2                   	// #2
  43d52c:	mov	x0, xzr
  43d530:	mov	x1, x22
  43d534:	mov	w4, w24
  43d538:	bl	402960 <mmap@plt>
  43d53c:	cmn	x0, #0x1
  43d540:	b.eq	43d558 <feof@plt+0x3a858>  // b.none
  43d544:	add	x8, x0, x25
  43d548:	stp	x0, x22, [x21, #8]
  43d54c:	mov	w0, #0x1                   	// #1
  43d550:	str	x8, [x21]
  43d554:	b	43d574 <feof@plt+0x3a874>
  43d558:	bl	402ac0 <__errno_location@plt>
  43d55c:	ldr	w2, [x0]
  43d560:	adrp	x1, 464000 <_obstack_memory_used@@Base+0xedd8>
  43d564:	add	x1, x1, #0x7b2
  43d568:	mov	x0, x20
  43d56c:	blr	x19
  43d570:	mov	w0, wzr
  43d574:	ldp	x20, x19, [sp, #64]
  43d578:	ldp	x22, x21, [sp, #48]
  43d57c:	ldp	x24, x23, [sp, #32]
  43d580:	ldr	x25, [sp, #16]
  43d584:	ldp	x29, x30, [sp], #80
  43d588:	ret
  43d58c:	stp	x29, x30, [sp, #-32]!
  43d590:	str	x19, [sp, #16]
  43d594:	mov	x29, sp
  43d598:	ldp	x0, x1, [x1, #8]
  43d59c:	mov	x19, x3
  43d5a0:	str	x2, [x29, #24]
  43d5a4:	bl	4029b0 <munmap@plt>
  43d5a8:	tbnz	w0, #31, 43d5b8 <feof@plt+0x3a8b8>
  43d5ac:	ldr	x19, [sp, #16]
  43d5b0:	ldp	x29, x30, [sp], #32
  43d5b4:	ret
  43d5b8:	bl	402ac0 <__errno_location@plt>
  43d5bc:	ldr	w2, [x0]
  43d5c0:	mov	x0, x19
  43d5c4:	ldr	x3, [x29, #24]
  43d5c8:	ldr	x19, [sp, #16]
  43d5cc:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d5d0:	add	x1, x1, #0x379
  43d5d4:	ldp	x29, x30, [sp], #32
  43d5d8:	br	x3
  43d5dc:	stp	x29, x30, [sp, #-96]!
  43d5e0:	stp	x28, x27, [sp, #16]
  43d5e4:	stp	x26, x25, [sp, #32]
  43d5e8:	stp	x24, x23, [sp, #48]
  43d5ec:	stp	x22, x21, [sp, #64]
  43d5f0:	stp	x20, x19, [sp, #80]
  43d5f4:	mov	x29, sp
  43d5f8:	sub	sp, sp, #0x2e0
  43d5fc:	ldr	x8, [x29, #136]
  43d600:	ldp	x21, x20, [x29, #144]
  43d604:	ldr	w9, [x29, #128]
  43d608:	mov	x22, x5
  43d60c:	str	x8, [sp, #208]
  43d610:	ldr	x8, [x29, #120]
  43d614:	mov	x23, x4
  43d618:	mov	x19, x0
  43d61c:	str	x1, [sp, #232]
  43d620:	str	x8, [sp, #248]
  43d624:	ldr	x8, [x29, #112]
  43d628:	stp	xzr, xzr, [sp, #328]
  43d62c:	stp	xzr, xzr, [sp, #344]
  43d630:	stp	xzr, xzr, [sp, #288]
  43d634:	str	x8, [sp, #240]
  43d638:	ldr	x8, [x29, #104]
  43d63c:	stp	xzr, xzr, [sp, #304]
  43d640:	stp	x2, x3, [sp, #472]
  43d644:	str	wzr, [sp, #512]
  43d648:	str	x8, [sp, #224]
  43d64c:	ldr	x8, [x29, #96]
  43d650:	str	x2, [sp, #464]
  43d654:	str	w9, [sp, #256]
  43d658:	str	w9, [sp, #488]
  43d65c:	str	x8, [sp, #216]
  43d660:	adrp	x8, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d664:	add	x8, x8, #0x274
  43d668:	stp	xzr, x8, [sp, #448]
  43d66c:	stp	x21, x20, [sp, #496]
  43d670:	stp	xzr, xzr, [sp, #432]
  43d674:	cbz	x3, 43e72c <feof@plt+0x3ba2c>
  43d678:	mov	x26, x7
  43d67c:	mov	x28, x6
  43d680:	mov	w8, wzr
  43d684:	mov	x11, x2
  43d688:	mov	x12, x3
  43d68c:	str	xzr, [sp, #272]
  43d690:	str	xzr, [sp, #184]
  43d694:	cbnz	w8, 43e638 <feof@plt+0x3b938>
  43d698:	cmp	x12, #0x3
  43d69c:	stp	x2, x3, [sp, #160]
  43d6a0:	str	x11, [sp, #176]
  43d6a4:	b.hi	43d6f8 <feof@plt+0x3a9f8>  // b.pmore
  43d6a8:	ldr	w8, [sp, #464]
  43d6ac:	ldr	x4, [sp, #456]
  43d6b0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d6b4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d6b8:	sub	w5, w11, w8
  43d6bc:	sub	x0, x29, #0xd8
  43d6c0:	mov	w1, #0xc8                  	// #200
  43d6c4:	add	x2, x2, #0x4f7
  43d6c8:	add	x3, x3, #0x4e7
  43d6cc:	mov	x24, x12
  43d6d0:	bl	402a20 <snprintf@plt>
  43d6d4:	ldp	x8, x0, [sp, #496]
  43d6d8:	sub	x1, x29, #0xd8
  43d6dc:	mov	w2, wzr
  43d6e0:	blr	x8
  43d6e4:	mov	x12, x24
  43d6e8:	mov	w8, wzr
  43d6ec:	mov	w9, #0x1                   	// #1
  43d6f0:	str	w9, [sp, #512]
  43d6f4:	b	43d758 <feof@plt+0x3aa58>
  43d6f8:	ldr	w8, [sp, #488]
  43d6fc:	add	x9, x11, #0x4
  43d700:	sub	x12, x12, #0x4
  43d704:	stp	x9, x12, [sp, #472]
  43d708:	cbz	w8, 43d72c <feof@plt+0x3aa2c>
  43d70c:	ldrb	w8, [x11]
  43d710:	ldrb	w9, [x11, #1]
  43d714:	ldrb	w10, [x11, #2]
  43d718:	lsl	w8, w8, #24
  43d71c:	bfi	w8, w9, #16, #8
  43d720:	bfi	w8, w10, #8, #8
  43d724:	add	x9, x11, #0x3
  43d728:	b	43d748 <feof@plt+0x3aa48>
  43d72c:	ldrb	w8, [x11, #3]
  43d730:	ldrb	w9, [x11, #2]
  43d734:	ldrb	w10, [x11, #1]
  43d738:	lsl	w8, w8, #24
  43d73c:	bfi	w8, w9, #16, #8
  43d740:	bfi	w8, w10, #8, #8
  43d744:	mov	x9, x11
  43d748:	ldrb	w9, [x9]
  43d74c:	orr	w8, w8, w9
  43d750:	cmn	w8, #0x1
  43d754:	b.eq	43dbf4 <feof@plt+0x3aef4>  // b.none
  43d758:	str	wzr, [sp, #260]
  43d75c:	mov	w0, w8
  43d760:	add	x8, sp, #0x1c8
  43d764:	ldp	q1, q0, [x8]
  43d768:	ldp	q2, q3, [x8, #32]
  43d76c:	subs	x12, x12, x0
  43d770:	str	q1, [sp, #368]
  43d774:	stp	q0, q2, [sp, #384]
  43d778:	str	q3, [sp, #416]
  43d77c:	str	x0, [sp, #392]
  43d780:	b.cc	43e89c <feof@plt+0x3bb9c>  // b.lo, b.ul, b.last
  43d784:	ldr	x9, [sp, #472]
  43d788:	ldr	x8, [sp, #384]
  43d78c:	cmp	x0, #0x1
  43d790:	add	x13, x9, x0
  43d794:	stp	x13, x12, [sp, #472]
  43d798:	b.ls	43e8f0 <feof@plt+0x3bbf0>  // b.plast
  43d79c:	ldr	w10, [sp, #400]
  43d7a0:	add	x9, x8, #0x2
  43d7a4:	sub	x11, x0, #0x2
  43d7a8:	stp	x9, x11, [sp, #384]
  43d7ac:	cmp	w10, #0x0
  43d7b0:	cinc	x10, x8, eq  // eq = none
  43d7b4:	cinc	x8, x8, ne  // ne = any
  43d7b8:	ldrb	w10, [x10]
  43d7bc:	ldrb	w11, [x8]
  43d7c0:	bfi	w11, w10, #8, #8
  43d7c4:	sub	w8, w11, #0x2
  43d7c8:	and	w8, w8, #0xffff
  43d7cc:	cmp	w8, #0x3
  43d7d0:	b.cs	43e940 <feof@plt+0x3bc40>  // b.hs, b.nlast
  43d7d4:	str	x0, [sp, #144]
  43d7d8:	add	x4, sp, #0x1b0
  43d7dc:	mov	w1, #0x8                   	// #8
  43d7e0:	mov	x0, x19
  43d7e4:	mov	x2, x21
  43d7e8:	mov	x3, x20
  43d7ec:	str	w11, [sp, #140]
  43d7f0:	stp	x13, x12, [sp, #120]
  43d7f4:	bl	439d04 <feof@plt+0x37004>
  43d7f8:	cbz	x0, 43e638 <feof@plt+0x3b938>
  43d7fc:	mov	x25, x0
  43d800:	mov	w1, #0x88                  	// #136
  43d804:	mov	x0, x19
  43d808:	mov	x2, x21
  43d80c:	mov	x3, x20
  43d810:	bl	439a30 <feof@plt+0x36d30>
  43d814:	cbz	x0, 43e638 <feof@plt+0x3b938>
  43d818:	ldr	x8, [sp, #272]
  43d81c:	str	x0, [x25]
  43d820:	str	x0, [sp, #152]
  43d824:	str	xzr, [x0, #88]!
  43d828:	add	x8, x8, #0x1
  43d82c:	str	x8, [sp, #272]
  43d830:	ldr	w8, [sp, #260]
  43d834:	str	x0, [sp, #200]
  43d838:	str	xzr, [x0, #8]
  43d83c:	cbz	w8, 43dbd8 <feof@plt+0x3aed8>
  43d840:	add	x0, sp, #0x170
  43d844:	bl	43f0c0 <feof@plt+0x3c3c0>
  43d848:	ldr	x8, [sp, #200]
  43d84c:	cmp	x0, x26
  43d850:	stp	xzr, xzr, [x8]
  43d854:	b.cs	43e980 <feof@plt+0x3bc80>  // b.hs, b.nlast
  43d858:	stp	x23, x22, [sp, #88]
  43d85c:	add	x25, x28, x0
  43d860:	sub	x22, x26, x0
  43d864:	str	wzr, [sp, #280]
  43d868:	str	xzr, [sp, #264]
  43d86c:	stp	x26, x25, [sp, #104]
  43d870:	str	x22, [sp, #192]
  43d874:	mov	w9, #0x2                   	// #2
  43d878:	mov	x23, xzr
  43d87c:	mov	w27, wzr
  43d880:	mov	w8, wzr
  43d884:	sub	x9, x9, x22
  43d888:	b	43d8a8 <feof@plt+0x3aba8>
  43d88c:	and	x9, x24, #0x7f
  43d890:	lsl	x9, x9, x27
  43d894:	orr	x23, x9, x23
  43d898:	sxtb	w10, w24
  43d89c:	add	w27, w27, #0x7
  43d8a0:	add	x9, x26, #0x1
  43d8a4:	tbz	w10, #31, 43d904 <feof@plt+0x3ac04>
  43d8a8:	cbz	x22, 43e5f8 <feof@plt+0x3b8f8>
  43d8ac:	ldrb	w24, [x25], #1
  43d8b0:	mov	x26, x9
  43d8b4:	cmp	w27, #0x3f
  43d8b8:	sub	x22, x22, #0x1
  43d8bc:	b.ls	43d88c <feof@plt+0x3ab8c>  // b.plast
  43d8c0:	cbnz	w8, 43d898 <feof@plt+0x3ab98>
  43d8c4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d8c8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d8cc:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d8d0:	sub	w5, w25, w28
  43d8d4:	sub	x0, x29, #0xd8
  43d8d8:	mov	w1, #0xc8                  	// #200
  43d8dc:	add	x2, x2, #0x4f7
  43d8e0:	add	x3, x3, #0x5b0
  43d8e4:	add	x4, x4, #0x28c
  43d8e8:	bl	402a20 <snprintf@plt>
  43d8ec:	sub	x1, x29, #0xd8
  43d8f0:	mov	x0, x20
  43d8f4:	mov	w2, wzr
  43d8f8:	blr	x21
  43d8fc:	mov	w8, #0x1                   	// #1
  43d900:	b	43d898 <feof@plt+0x3ab98>
  43d904:	cbz	x23, 43dc80 <feof@plt+0x3af80>
  43d908:	ldr	w8, [sp, #280]
  43d90c:	cbnz	w8, 43e638 <feof@plt+0x3b938>
  43d910:	ldr	x9, [sp, #264]
  43d914:	adrp	x27, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d918:	mov	w22, wzr
  43d91c:	mov	x23, x25
  43d920:	add	x9, x9, #0x1
  43d924:	add	x27, x27, #0x4f7
  43d928:	str	x9, [sp, #264]
  43d92c:	b	43d93c <feof@plt+0x3ac3c>
  43d930:	add	w22, w22, #0x7
  43d934:	add	x26, x26, #0x1
  43d938:	tbz	w24, #31, 43d9dc <feof@plt+0x3acdc>
  43d93c:	cmp	x26, #0x1
  43d940:	mov	x25, x23
  43d944:	b.eq	43d998 <feof@plt+0x3ac98>  // b.none
  43d948:	mov	x23, x25
  43d94c:	ldrsb	w24, [x23], #1
  43d950:	cmp	w22, #0x40
  43d954:	b.cc	43d930 <feof@plt+0x3ac30>  // b.lo, b.ul, b.last
  43d958:	cbnz	w8, 43d930 <feof@plt+0x3ac30>
  43d95c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d960:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d964:	sub	w5, w23, w28
  43d968:	sub	x0, x29, #0xd8
  43d96c:	mov	w1, #0xc8                  	// #200
  43d970:	mov	x2, x27
  43d974:	add	x3, x3, #0x5b0
  43d978:	add	x4, x4, #0x28c
  43d97c:	bl	402a20 <snprintf@plt>
  43d980:	sub	x1, x29, #0xd8
  43d984:	mov	x0, x20
  43d988:	mov	w2, wzr
  43d98c:	blr	x21
  43d990:	mov	w8, #0x1                   	// #1
  43d994:	b	43d930 <feof@plt+0x3ac30>
  43d998:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d99c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d9a0:	sub	w5, w25, w28
  43d9a4:	sub	x0, x29, #0xd8
  43d9a8:	mov	w1, #0xc8                  	// #200
  43d9ac:	mov	x2, x27
  43d9b0:	add	x3, x3, #0x4e7
  43d9b4:	add	x4, x4, #0x28c
  43d9b8:	bl	402a20 <snprintf@plt>
  43d9bc:	sub	x1, x29, #0xd8
  43d9c0:	mov	x0, x20
  43d9c4:	mov	w2, wzr
  43d9c8:	blr	x21
  43d9cc:	mov	w8, #0x1                   	// #1
  43d9d0:	mov	x22, xzr
  43d9d4:	str	w8, [sp, #280]
  43d9d8:	b	43da40 <feof@plt+0x3ad40>
  43d9dc:	cmp	x26, #0x1
  43d9e0:	b.ne	43da2c <feof@plt+0x3ad2c>  // b.any
  43d9e4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d9e8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43d9ec:	sub	w5, w23, w28
  43d9f0:	sub	x0, x29, #0xd8
  43d9f4:	mov	w1, #0xc8                  	// #200
  43d9f8:	mov	x2, x27
  43d9fc:	add	x3, x3, #0x4e7
  43da00:	add	x4, x4, #0x28c
  43da04:	bl	402a20 <snprintf@plt>
  43da08:	sub	x1, x29, #0xd8
  43da0c:	mov	x0, x20
  43da10:	mov	w2, wzr
  43da14:	blr	x21
  43da18:	mov	w8, #0x1                   	// #1
  43da1c:	mov	x22, xzr
  43da20:	str	w8, [sp, #280]
  43da24:	mov	x25, x23
  43da28:	b	43da40 <feof@plt+0x3ad40>
  43da2c:	add	x25, x25, #0x2
  43da30:	neg	x22, x26
  43da34:	str	wzr, [sp, #280]
  43da38:	b	43da40 <feof@plt+0x3ad40>
  43da3c:	cbz	x26, 43d874 <feof@plt+0x3ab74>
  43da40:	mov	x26, xzr
  43da44:	mov	w23, wzr
  43da48:	mov	w8, wzr
  43da4c:	b	43da68 <feof@plt+0x3ad68>
  43da50:	and	x9, x24, #0x7f
  43da54:	lsl	x9, x9, x23
  43da58:	orr	x26, x9, x26
  43da5c:	sxtb	w9, w24
  43da60:	add	w23, w23, #0x7
  43da64:	tbz	w9, #31, 43db14 <feof@plt+0x3ae14>
  43da68:	cbz	x22, 43dabc <feof@plt+0x3adbc>
  43da6c:	ldrb	w24, [x25], #1
  43da70:	cmp	w23, #0x3f
  43da74:	sub	x22, x22, #0x1
  43da78:	b.ls	43da50 <feof@plt+0x3ad50>  // b.plast
  43da7c:	cbnz	w8, 43da5c <feof@plt+0x3ad5c>
  43da80:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43da84:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43da88:	sub	w5, w25, w28
  43da8c:	sub	x0, x29, #0xd8
  43da90:	mov	w1, #0xc8                  	// #200
  43da94:	mov	x2, x27
  43da98:	add	x3, x3, #0x5b0
  43da9c:	add	x4, x4, #0x28c
  43daa0:	bl	402a20 <snprintf@plt>
  43daa4:	sub	x1, x29, #0xd8
  43daa8:	mov	x0, x20
  43daac:	mov	w2, wzr
  43dab0:	blr	x21
  43dab4:	mov	w8, #0x1                   	// #1
  43dab8:	b	43da5c <feof@plt+0x3ad5c>
  43dabc:	ldr	w8, [sp, #280]
  43dac0:	cbz	w8, 43dad0 <feof@plt+0x3add0>
  43dac4:	mov	x22, xzr
  43dac8:	mov	x26, xzr
  43dacc:	b	43db14 <feof@plt+0x3ae14>
  43dad0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dad4:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dad8:	sub	w5, w25, w28
  43dadc:	sub	x0, x29, #0xd8
  43dae0:	mov	w1, #0xc8                  	// #200
  43dae4:	mov	x2, x27
  43dae8:	add	x3, x3, #0x4e7
  43daec:	add	x4, x4, #0x28c
  43daf0:	bl	402a20 <snprintf@plt>
  43daf4:	sub	x1, x29, #0xd8
  43daf8:	mov	x0, x20
  43dafc:	mov	w2, wzr
  43db00:	blr	x21
  43db04:	mov	w8, #0x1                   	// #1
  43db08:	mov	x22, xzr
  43db0c:	mov	x26, xzr
  43db10:	str	w8, [sp, #280]
  43db14:	mov	w23, wzr
  43db18:	mov	w8, wzr
  43db1c:	b	43db28 <feof@plt+0x3ae28>
  43db20:	add	w23, w23, #0x7
  43db24:	tbz	w24, #31, 43da3c <feof@plt+0x3ad3c>
  43db28:	cbz	x22, 43db7c <feof@plt+0x3ae7c>
  43db2c:	ldrsb	w24, [x25], #1
  43db30:	cmp	w23, #0x40
  43db34:	sub	x22, x22, #0x1
  43db38:	b.cc	43db20 <feof@plt+0x3ae20>  // b.lo, b.ul, b.last
  43db3c:	cbnz	w8, 43db20 <feof@plt+0x3ae20>
  43db40:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43db44:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43db48:	sub	w5, w25, w28
  43db4c:	sub	x0, x29, #0xd8
  43db50:	mov	w1, #0xc8                  	// #200
  43db54:	mov	x2, x27
  43db58:	add	x3, x3, #0x5b0
  43db5c:	add	x4, x4, #0x28c
  43db60:	bl	402a20 <snprintf@plt>
  43db64:	sub	x1, x29, #0xd8
  43db68:	mov	x0, x20
  43db6c:	mov	w2, wzr
  43db70:	blr	x21
  43db74:	mov	w8, #0x1                   	// #1
  43db78:	b	43db20 <feof@plt+0x3ae20>
  43db7c:	ldr	w8, [sp, #280]
  43db80:	cbz	w8, 43db90 <feof@plt+0x3ae90>
  43db84:	mov	x22, xzr
  43db88:	cbnz	x26, 43da40 <feof@plt+0x3ad40>
  43db8c:	b	43d874 <feof@plt+0x3ab74>
  43db90:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43db94:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43db98:	sub	w5, w25, w28
  43db9c:	sub	x0, x29, #0xd8
  43dba0:	mov	w1, #0xc8                  	// #200
  43dba4:	mov	x2, x27
  43dba8:	add	x3, x3, #0x4e7
  43dbac:	add	x4, x4, #0x28c
  43dbb0:	bl	402a20 <snprintf@plt>
  43dbb4:	sub	x1, x29, #0xd8
  43dbb8:	mov	x0, x20
  43dbbc:	mov	w2, wzr
  43dbc0:	blr	x21
  43dbc4:	mov	x22, xzr
  43dbc8:	mov	w8, #0x1                   	// #1
  43dbcc:	str	w8, [sp, #280]
  43dbd0:	cbnz	x26, 43da40 <feof@plt+0x3ad40>
  43dbd4:	b	43d874 <feof@plt+0x3ab74>
  43dbd8:	ldp	x8, x9, [sp, #384]
  43dbdc:	cmp	x9, #0x3
  43dbe0:	b.hi	43dc0c <feof@plt+0x3af0c>  // b.pmore
  43dbe4:	ldr	w9, [sp, #424]
  43dbe8:	cbz	w9, 43dc30 <feof@plt+0x3af30>
  43dbec:	mov	x0, xzr
  43dbf0:	b	43d848 <feof@plt+0x3ab48>
  43dbf4:	add	x0, sp, #0x1c8
  43dbf8:	bl	43f0c0 <feof@plt+0x3c3c0>
  43dbfc:	ldr	x12, [sp, #480]
  43dc00:	mov	w8, #0x1                   	// #1
  43dc04:	str	w8, [sp, #260]
  43dc08:	b	43d760 <feof@plt+0x3aa60>
  43dc0c:	ldr	w10, [sp, #400]
  43dc10:	add	x11, x8, #0x4
  43dc14:	sub	x9, x9, #0x4
  43dc18:	stp	x11, x9, [sp, #384]
  43dc1c:	cbz	w10, 43dc78 <feof@plt+0x3af78>
  43dc20:	ldr	w8, [x8]
  43dc24:	lsl	x8, x8, #32
  43dc28:	rev	x0, x8
  43dc2c:	b	43d848 <feof@plt+0x3ab48>
  43dc30:	ldr	w9, [sp, #376]
  43dc34:	ldr	x4, [sp, #368]
  43dc38:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dc3c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dc40:	sub	w5, w8, w9
  43dc44:	sub	x0, x29, #0xd8
  43dc48:	mov	w1, #0xc8                  	// #200
  43dc4c:	add	x2, x2, #0x4f7
  43dc50:	add	x3, x3, #0x4e7
  43dc54:	bl	402a20 <snprintf@plt>
  43dc58:	ldp	x8, x0, [sp, #408]
  43dc5c:	sub	x1, x29, #0xd8
  43dc60:	mov	w2, wzr
  43dc64:	blr	x8
  43dc68:	mov	w8, #0x1                   	// #1
  43dc6c:	mov	x0, xzr
  43dc70:	str	w8, [sp, #424]
  43dc74:	b	43d848 <feof@plt+0x3ab48>
  43dc78:	ldr	w0, [x8]
  43dc7c:	b	43d848 <feof@plt+0x3ab48>
  43dc80:	ldr	x26, [sp, #104]
  43dc84:	ldr	x27, [sp, #192]
  43dc88:	ldr	w8, [sp, #280]
  43dc8c:	cbnz	w8, 43e638 <feof@plt+0x3b938>
  43dc90:	ldr	x23, [sp, #264]
  43dc94:	cbz	x23, 43e4bc <feof@plt+0x3b7bc>
  43dc98:	lsl	x24, x23, #5
  43dc9c:	mov	x0, x19
  43dca0:	mov	x1, x24
  43dca4:	mov	x2, x21
  43dca8:	mov	x3, x20
  43dcac:	bl	439a30 <feof@plt+0x36d30>
  43dcb0:	ldr	x8, [sp, #152]
  43dcb4:	str	x0, [x8, #96]
  43dcb8:	cbz	x0, 43e638 <feof@plt+0x3b938>
  43dcbc:	ldr	x8, [sp, #200]
  43dcc0:	mov	w1, wzr
  43dcc4:	mov	x2, x24
  43dcc8:	str	x23, [x8]
  43dccc:	bl	402790 <memset@plt>
  43dcd0:	ldr	x26, [sp, #112]
  43dcd4:	str	xzr, [sp, #56]
  43dcd8:	mov	w9, #0x2                   	// #2
  43dcdc:	mov	w23, wzr
  43dce0:	mov	w8, wzr
  43dce4:	mov	x25, x27
  43dce8:	sub	x9, x9, x27
  43dcec:	str	xzr, [sp, #264]
  43dcf0:	b	43dd18 <feof@plt+0x3b018>
  43dcf4:	ldr	x10, [sp, #264]
  43dcf8:	and	x9, x24, #0x7f
  43dcfc:	lsl	x9, x9, x23
  43dd00:	orr	x10, x9, x10
  43dd04:	str	x10, [sp, #264]
  43dd08:	sxtb	w10, w24
  43dd0c:	add	w23, w23, #0x7
  43dd10:	add	x9, x22, #0x1
  43dd14:	tbz	w10, #31, 43dd74 <feof@plt+0x3b074>
  43dd18:	cbz	x25, 43e468 <feof@plt+0x3b768>
  43dd1c:	ldrb	w24, [x26], #1
  43dd20:	mov	x22, x9
  43dd24:	cmp	w23, #0x3f
  43dd28:	sub	x25, x25, #0x1
  43dd2c:	b.ls	43dcf4 <feof@plt+0x3aff4>  // b.plast
  43dd30:	cbnz	w8, 43dd08 <feof@plt+0x3b008>
  43dd34:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dd38:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dd3c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dd40:	sub	w5, w26, w28
  43dd44:	sub	x0, x29, #0xd8
  43dd48:	mov	w1, #0xc8                  	// #200
  43dd4c:	add	x2, x2, #0x4f7
  43dd50:	add	x3, x3, #0x5b0
  43dd54:	add	x4, x4, #0x28c
  43dd58:	bl	402a20 <snprintf@plt>
  43dd5c:	sub	x1, x29, #0xd8
  43dd60:	mov	x0, x20
  43dd64:	mov	w2, wzr
  43dd68:	blr	x21
  43dd6c:	mov	w8, #0x1                   	// #1
  43dd70:	b	43dd08 <feof@plt+0x3b008>
  43dd74:	ldr	x8, [sp, #264]
  43dd78:	cbz	x8, 43e4a0 <feof@plt+0x3b7a0>
  43dd7c:	mov	x24, x26
  43dd80:	adrp	x26, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dd84:	mov	w23, wzr
  43dd88:	mov	w8, wzr
  43dd8c:	add	x26, x26, #0x4f7
  43dd90:	str	xzr, [sp, #64]
  43dd94:	b	43ddbc <feof@plt+0x3b0bc>
  43dd98:	ldr	x10, [sp, #64]
  43dd9c:	and	x9, x25, #0x7f
  43dda0:	lsl	x9, x9, x23
  43dda4:	orr	x10, x9, x10
  43dda8:	str	x10, [sp, #64]
  43ddac:	sxtb	w9, w25
  43ddb0:	add	w23, w23, #0x7
  43ddb4:	add	x22, x22, #0x1
  43ddb8:	tbz	w9, #31, 43de50 <feof@plt+0x3b150>
  43ddbc:	cmp	x22, #0x1
  43ddc0:	b.eq	43de14 <feof@plt+0x3b114>  // b.none
  43ddc4:	mov	x27, x24
  43ddc8:	ldrb	w25, [x24], #1
  43ddcc:	cmp	w23, #0x3f
  43ddd0:	b.ls	43dd98 <feof@plt+0x3b098>  // b.plast
  43ddd4:	cbnz	w8, 43ddac <feof@plt+0x3b0ac>
  43ddd8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dddc:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dde0:	sub	w5, w24, w28
  43dde4:	sub	x0, x29, #0xd8
  43dde8:	mov	w1, #0xc8                  	// #200
  43ddec:	mov	x2, x26
  43ddf0:	add	x3, x3, #0x5b0
  43ddf4:	add	x4, x4, #0x28c
  43ddf8:	bl	402a20 <snprintf@plt>
  43ddfc:	sub	x1, x29, #0xd8
  43de00:	mov	x0, x20
  43de04:	mov	w2, wzr
  43de08:	blr	x21
  43de0c:	mov	w8, #0x1                   	// #1
  43de10:	b	43ddac <feof@plt+0x3b0ac>
  43de14:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43de18:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43de1c:	sub	w5, w24, w28
  43de20:	sub	x0, x29, #0xd8
  43de24:	mov	w1, #0xc8                  	// #200
  43de28:	mov	x2, x26
  43de2c:	add	x3, x3, #0x4e7
  43de30:	add	x4, x4, #0x28c
  43de34:	bl	402a20 <snprintf@plt>
  43de38:	sub	x1, x29, #0xd8
  43de3c:	mov	x0, x20
  43de40:	mov	w2, wzr
  43de44:	blr	x21
  43de48:	str	xzr, [sp, #64]
  43de4c:	b	43de8c <feof@plt+0x3b18c>
  43de50:	cmp	x22, #0x1
  43de54:	b.ne	43de9c <feof@plt+0x3b19c>  // b.any
  43de58:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43de5c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43de60:	sub	w5, w24, w28
  43de64:	sub	x0, x29, #0xd8
  43de68:	mov	w1, #0xc8                  	// #200
  43de6c:	mov	x2, x26
  43de70:	add	x3, x3, #0x4e7
  43de74:	add	x4, x4, #0x28c
  43de78:	bl	402a20 <snprintf@plt>
  43de7c:	sub	x1, x29, #0xd8
  43de80:	mov	x0, x20
  43de84:	mov	w2, wzr
  43de88:	blr	x21
  43de8c:	mov	x26, xzr
  43de90:	str	wzr, [sp, #52]
  43de94:	mov	w9, #0x1                   	// #1
  43de98:	b	43deb0 <feof@plt+0x3b1b0>
  43de9c:	ldrb	w8, [x27, #1]
  43dea0:	mov	w9, wzr
  43dea4:	add	x24, x27, #0x2
  43dea8:	neg	x26, x22
  43deac:	str	w8, [sp, #52]
  43deb0:	mov	x22, xzr
  43deb4:	str	w9, [sp, #84]
  43deb8:	str	w9, [sp, #280]
  43debc:	str	x26, [sp, #192]
  43dec0:	str	x24, [sp, #112]
  43dec4:	mov	x23, xzr
  43dec8:	mov	w27, wzr
  43decc:	mov	w8, wzr
  43ded0:	b	43deec <feof@plt+0x3b1ec>
  43ded4:	and	x9, x25, #0x7f
  43ded8:	lsl	x9, x9, x27
  43dedc:	orr	x23, x9, x23
  43dee0:	sxtb	w9, w25
  43dee4:	add	w27, w27, #0x7
  43dee8:	tbz	w9, #31, 43df44 <feof@plt+0x3b244>
  43deec:	cbz	x26, 43e008 <feof@plt+0x3b308>
  43def0:	ldrb	w25, [x24], #1
  43def4:	cmp	w27, #0x3f
  43def8:	sub	x26, x26, #0x1
  43defc:	b.ls	43ded4 <feof@plt+0x3b1d4>  // b.plast
  43df00:	cbnz	w8, 43dee0 <feof@plt+0x3b1e0>
  43df04:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43df08:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43df0c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43df10:	sub	w5, w24, w28
  43df14:	sub	x0, x29, #0xd8
  43df18:	mov	w1, #0xc8                  	// #200
  43df1c:	add	x2, x2, #0x4f7
  43df20:	add	x3, x3, #0x5b0
  43df24:	add	x4, x4, #0x28c
  43df28:	bl	402a20 <snprintf@plt>
  43df2c:	sub	x1, x29, #0xd8
  43df30:	mov	x0, x20
  43df34:	mov	w2, wzr
  43df38:	blr	x21
  43df3c:	mov	w8, #0x1                   	// #1
  43df40:	b	43dee0 <feof@plt+0x3b1e0>
  43df44:	cbz	x23, 43e048 <feof@plt+0x3b348>
  43df48:	adrp	x27, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43df4c:	mov	w23, wzr
  43df50:	mov	w8, wzr
  43df54:	add	x22, x22, #0x1
  43df58:	add	x27, x27, #0x4f7
  43df5c:	b	43df68 <feof@plt+0x3b268>
  43df60:	add	w23, w23, #0x7
  43df64:	tbz	w25, #31, 43dec4 <feof@plt+0x3b1c4>
  43df68:	cbz	x26, 43dfbc <feof@plt+0x3b2bc>
  43df6c:	ldrsb	w25, [x24], #1
  43df70:	cmp	w23, #0x40
  43df74:	sub	x26, x26, #0x1
  43df78:	b.cc	43df60 <feof@plt+0x3b260>  // b.lo, b.ul, b.last
  43df7c:	cbnz	w8, 43df60 <feof@plt+0x3b260>
  43df80:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43df84:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43df88:	sub	w5, w24, w28
  43df8c:	sub	x0, x29, #0xd8
  43df90:	mov	w1, #0xc8                  	// #200
  43df94:	mov	x2, x27
  43df98:	add	x3, x3, #0x5b0
  43df9c:	add	x4, x4, #0x28c
  43dfa0:	bl	402a20 <snprintf@plt>
  43dfa4:	sub	x1, x29, #0xd8
  43dfa8:	mov	x0, x20
  43dfac:	mov	w2, wzr
  43dfb0:	blr	x21
  43dfb4:	mov	w8, #0x1                   	// #1
  43dfb8:	b	43df60 <feof@plt+0x3b260>
  43dfbc:	ldr	w8, [sp, #280]
  43dfc0:	cbnz	w8, 43dec4 <feof@plt+0x3b1c4>
  43dfc4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dfc8:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43dfcc:	sub	w5, w24, w28
  43dfd0:	sub	x0, x29, #0xd8
  43dfd4:	mov	w1, #0xc8                  	// #200
  43dfd8:	mov	x2, x27
  43dfdc:	add	x3, x3, #0x4e7
  43dfe0:	add	x4, x4, #0x28c
  43dfe4:	bl	402a20 <snprintf@plt>
  43dfe8:	sub	x1, x29, #0xd8
  43dfec:	mov	x0, x20
  43dff0:	mov	w2, wzr
  43dff4:	blr	x21
  43dff8:	mov	w8, #0x1                   	// #1
  43dffc:	mov	x26, xzr
  43e000:	str	w8, [sp, #280]
  43e004:	b	43dec4 <feof@plt+0x3b1c4>
  43e008:	ldr	w8, [sp, #280]
  43e00c:	cbnz	w8, 43e048 <feof@plt+0x3b348>
  43e010:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e014:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e018:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e01c:	sub	w5, w24, w28
  43e020:	sub	x0, x29, #0xd8
  43e024:	mov	w1, #0xc8                  	// #200
  43e028:	add	x2, x2, #0x4f7
  43e02c:	add	x3, x3, #0x4e7
  43e030:	add	x4, x4, #0x28c
  43e034:	bl	402a20 <snprintf@plt>
  43e038:	sub	x1, x29, #0xd8
  43e03c:	mov	x0, x20
  43e040:	mov	w2, wzr
  43e044:	blr	x21
  43e048:	cbz	x22, 43e270 <feof@plt+0x3b570>
  43e04c:	lsl	x1, x22, #3
  43e050:	mov	x0, x19
  43e054:	mov	x2, x21
  43e058:	mov	x3, x20
  43e05c:	bl	439a30 <feof@plt+0x36d30>
  43e060:	ldr	x26, [sp, #112]
  43e064:	ldr	x27, [sp, #192]
  43e068:	cbz	x0, 43e98c <feof@plt+0x3bc8c>
  43e06c:	str	x0, [sp, #72]
  43e070:	str	xzr, [sp, #280]
  43e074:	b	43e094 <feof@plt+0x3b394>
  43e078:	ldr	x23, [sp, #72]
  43e07c:	ldr	x11, [sp, #280]
  43e080:	cbz	x24, 43e268 <feof@plt+0x3b568>
  43e084:	add	x8, x23, x11, lsl #3
  43e088:	add	x11, x11, #0x1
  43e08c:	stp	w24, w25, [x8]
  43e090:	str	x11, [sp, #280]
  43e094:	mov	x24, xzr
  43e098:	mov	w23, wzr
  43e09c:	mov	w8, wzr
  43e0a0:	b	43e0bc <feof@plt+0x3b3bc>
  43e0a4:	and	x9, x25, #0x7f
  43e0a8:	lsl	x9, x9, x23
  43e0ac:	orr	x24, x9, x24
  43e0b0:	sxtb	w9, w25
  43e0b4:	add	w23, w23, #0x7
  43e0b8:	tbz	w9, #31, 43e170 <feof@plt+0x3b470>
  43e0bc:	cbz	x27, 43e114 <feof@plt+0x3b414>
  43e0c0:	ldrb	w25, [x26], #1
  43e0c4:	cmp	w23, #0x3f
  43e0c8:	sub	x27, x27, #0x1
  43e0cc:	b.ls	43e0a4 <feof@plt+0x3b3a4>  // b.plast
  43e0d0:	cbnz	w8, 43e0b0 <feof@plt+0x3b3b0>
  43e0d4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e0d8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e0dc:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e0e0:	sub	w5, w26, w28
  43e0e4:	sub	x0, x29, #0xd8
  43e0e8:	mov	w1, #0xc8                  	// #200
  43e0ec:	add	x2, x2, #0x4f7
  43e0f0:	add	x3, x3, #0x5b0
  43e0f4:	add	x4, x4, #0x28c
  43e0f8:	bl	402a20 <snprintf@plt>
  43e0fc:	sub	x1, x29, #0xd8
  43e100:	mov	x0, x20
  43e104:	mov	w2, wzr
  43e108:	blr	x21
  43e10c:	mov	w8, #0x1                   	// #1
  43e110:	b	43e0b0 <feof@plt+0x3b3b0>
  43e114:	ldr	w8, [sp, #84]
  43e118:	cbz	w8, 43e128 <feof@plt+0x3b428>
  43e11c:	mov	x27, xzr
  43e120:	mov	x24, xzr
  43e124:	b	43e170 <feof@plt+0x3b470>
  43e128:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e12c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e130:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e134:	sub	w5, w26, w28
  43e138:	sub	x0, x29, #0xd8
  43e13c:	mov	w1, #0xc8                  	// #200
  43e140:	add	x2, x2, #0x4f7
  43e144:	add	x3, x3, #0x4e7
  43e148:	add	x4, x4, #0x28c
  43e14c:	bl	402a20 <snprintf@plt>
  43e150:	sub	x1, x29, #0xd8
  43e154:	mov	x0, x20
  43e158:	mov	w2, wzr
  43e15c:	blr	x21
  43e160:	mov	w8, #0x1                   	// #1
  43e164:	mov	x27, xzr
  43e168:	mov	x24, xzr
  43e16c:	str	w8, [sp, #84]
  43e170:	mov	x25, xzr
  43e174:	mov	w23, wzr
  43e178:	mov	w8, wzr
  43e17c:	b	43e19c <feof@plt+0x3b49c>
  43e180:	and	x9, x26, #0x7f
  43e184:	lsl	x9, x9, x23
  43e188:	orr	x25, x9, x25
  43e18c:	sxtb	w9, w26
  43e190:	add	w23, w23, #0x7
  43e194:	mov	x26, x22
  43e198:	tbz	w9, #31, 43e078 <feof@plt+0x3b378>
  43e19c:	cbz	x27, 43e1f8 <feof@plt+0x3b4f8>
  43e1a0:	mov	x22, x26
  43e1a4:	ldrb	w26, [x22], #1
  43e1a8:	cmp	w23, #0x3f
  43e1ac:	sub	x27, x27, #0x1
  43e1b0:	b.ls	43e180 <feof@plt+0x3b480>  // b.plast
  43e1b4:	cbnz	w8, 43e18c <feof@plt+0x3b48c>
  43e1b8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e1bc:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e1c0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e1c4:	sub	w5, w22, w28
  43e1c8:	sub	x0, x29, #0xd8
  43e1cc:	mov	w1, #0xc8                  	// #200
  43e1d0:	add	x2, x2, #0x4f7
  43e1d4:	add	x3, x3, #0x5b0
  43e1d8:	add	x4, x4, #0x28c
  43e1dc:	bl	402a20 <snprintf@plt>
  43e1e0:	sub	x1, x29, #0xd8
  43e1e4:	mov	x0, x20
  43e1e8:	mov	w2, wzr
  43e1ec:	blr	x21
  43e1f0:	mov	w8, #0x1                   	// #1
  43e1f4:	b	43e18c <feof@plt+0x3b48c>
  43e1f8:	ldr	w8, [sp, #84]
  43e1fc:	ldr	x23, [sp, #72]
  43e200:	cbz	w8, 43e218 <feof@plt+0x3b518>
  43e204:	mov	x27, xzr
  43e208:	mov	x25, xzr
  43e20c:	ldr	x11, [sp, #280]
  43e210:	cbnz	x24, 43e084 <feof@plt+0x3b384>
  43e214:	b	43e268 <feof@plt+0x3b568>
  43e218:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e21c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e220:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e224:	sub	w5, w26, w28
  43e228:	sub	x0, x29, #0xd8
  43e22c:	mov	w1, #0xc8                  	// #200
  43e230:	add	x2, x2, #0x4f7
  43e234:	add	x3, x3, #0x4e7
  43e238:	add	x4, x4, #0x28c
  43e23c:	bl	402a20 <snprintf@plt>
  43e240:	sub	x1, x29, #0xd8
  43e244:	mov	x0, x20
  43e248:	mov	w2, wzr
  43e24c:	blr	x21
  43e250:	mov	w8, #0x1                   	// #1
  43e254:	mov	x27, xzr
  43e258:	mov	x25, xzr
  43e25c:	str	w8, [sp, #84]
  43e260:	ldr	x11, [sp, #280]
  43e264:	cbnz	x24, 43e084 <feof@plt+0x3b384>
  43e268:	ldr	x9, [sp, #152]
  43e26c:	b	43e3d8 <feof@plt+0x3b6d8>
  43e270:	ldr	x9, [sp, #152]
  43e274:	ldr	x26, [sp, #112]
  43e278:	mov	w8, wzr
  43e27c:	b	43e288 <feof@plt+0x3b588>
  43e280:	add	w22, w22, #0x7
  43e284:	tbz	w23, #31, 43e344 <feof@plt+0x3b644>
  43e288:	ldr	x10, [sp, #192]
  43e28c:	cbz	x10, 43e2ec <feof@plt+0x3b5ec>
  43e290:	ldrsb	w23, [x26], #1
  43e294:	cmp	w22, #0x40
  43e298:	sub	x10, x10, #0x1
  43e29c:	str	x10, [sp, #192]
  43e2a0:	b.cc	43e280 <feof@plt+0x3b580>  // b.lo, b.ul, b.last
  43e2a4:	cbnz	w8, 43e280 <feof@plt+0x3b580>
  43e2a8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e2ac:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e2b0:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e2b4:	sub	w5, w26, w28
  43e2b8:	sub	x0, x29, #0xd8
  43e2bc:	mov	w1, #0xc8                  	// #200
  43e2c0:	add	x2, x2, #0x4f7
  43e2c4:	add	x3, x3, #0x5b0
  43e2c8:	add	x4, x4, #0x28c
  43e2cc:	bl	402a20 <snprintf@plt>
  43e2d0:	sub	x1, x29, #0xd8
  43e2d4:	mov	x0, x20
  43e2d8:	mov	w2, wzr
  43e2dc:	blr	x21
  43e2e0:	ldr	x9, [sp, #152]
  43e2e4:	mov	w8, #0x1                   	// #1
  43e2e8:	b	43e280 <feof@plt+0x3b580>
  43e2ec:	ldr	w8, [sp, #84]
  43e2f0:	cbz	w8, 43e2fc <feof@plt+0x3b5fc>
  43e2f4:	str	xzr, [sp, #192]
  43e2f8:	b	43e344 <feof@plt+0x3b644>
  43e2fc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e300:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e304:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e308:	sub	w5, w26, w28
  43e30c:	sub	x0, x29, #0xd8
  43e310:	mov	w1, #0xc8                  	// #200
  43e314:	add	x2, x2, #0x4f7
  43e318:	add	x3, x3, #0x4e7
  43e31c:	add	x4, x4, #0x28c
  43e320:	bl	402a20 <snprintf@plt>
  43e324:	sub	x1, x29, #0xd8
  43e328:	mov	x0, x20
  43e32c:	mov	w2, wzr
  43e330:	blr	x21
  43e334:	ldr	x9, [sp, #152]
  43e338:	mov	w8, #0x1                   	// #1
  43e33c:	str	xzr, [sp, #192]
  43e340:	str	w8, [sp, #84]
  43e344:	mov	w22, wzr
  43e348:	mov	w8, wzr
  43e34c:	b	43e358 <feof@plt+0x3b658>
  43e350:	add	w22, w22, #0x7
  43e354:	tbz	w23, #31, 43e3cc <feof@plt+0x3b6cc>
  43e358:	ldr	x10, [sp, #192]
  43e35c:	cbz	x10, 43e3bc <feof@plt+0x3b6bc>
  43e360:	ldrsb	w23, [x26], #1
  43e364:	cmp	w22, #0x40
  43e368:	sub	x10, x10, #0x1
  43e36c:	str	x10, [sp, #192]
  43e370:	b.cc	43e350 <feof@plt+0x3b650>  // b.lo, b.ul, b.last
  43e374:	cbnz	w8, 43e350 <feof@plt+0x3b650>
  43e378:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e37c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e380:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e384:	sub	w5, w26, w28
  43e388:	sub	x0, x29, #0xd8
  43e38c:	mov	w1, #0xc8                  	// #200
  43e390:	add	x2, x2, #0x4f7
  43e394:	add	x3, x3, #0x5b0
  43e398:	add	x4, x4, #0x28c
  43e39c:	bl	402a20 <snprintf@plt>
  43e3a0:	sub	x1, x29, #0xd8
  43e3a4:	mov	x0, x20
  43e3a8:	mov	w2, wzr
  43e3ac:	blr	x21
  43e3b0:	ldr	x9, [sp, #152]
  43e3b4:	mov	w8, #0x1                   	// #1
  43e3b8:	b	43e350 <feof@plt+0x3b650>
  43e3bc:	ldr	w8, [sp, #84]
  43e3c0:	cbz	w8, 43e414 <feof@plt+0x3b714>
  43e3c4:	mov	x27, xzr
  43e3c8:	b	43e3d0 <feof@plt+0x3b6d0>
  43e3cc:	ldr	x27, [sp, #192]
  43e3d0:	mov	x11, xzr
  43e3d4:	mov	x23, xzr
  43e3d8:	ldr	x8, [x9, #96]
  43e3dc:	ldr	x9, [sp, #56]
  43e3e0:	ldr	x10, [sp, #264]
  43e3e4:	add	x8, x8, x9, lsl #5
  43e3e8:	str	x10, [x8]
  43e3ec:	ldr	x10, [sp, #64]
  43e3f0:	add	x9, x9, #0x1
  43e3f4:	str	w10, [x8, #8]
  43e3f8:	ldr	w10, [sp, #52]
  43e3fc:	stp	x11, x23, [x8, #16]
  43e400:	str	x9, [sp, #56]
  43e404:	str	w10, [x8, #12]
  43e408:	ldr	w8, [sp, #84]
  43e40c:	cbz	w8, 43dcd8 <feof@plt+0x3afd8>
  43e410:	b	43e98c <feof@plt+0x3bc8c>
  43e414:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e418:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e41c:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e420:	sub	w5, w26, w28
  43e424:	sub	x0, x29, #0xd8
  43e428:	mov	w1, #0xc8                  	// #200
  43e42c:	add	x2, x2, #0x4f7
  43e430:	add	x3, x3, #0x4e7
  43e434:	add	x4, x4, #0x28c
  43e438:	bl	402a20 <snprintf@plt>
  43e43c:	sub	x1, x29, #0xd8
  43e440:	mov	x0, x20
  43e444:	mov	w2, wzr
  43e448:	blr	x21
  43e44c:	ldr	x9, [sp, #152]
  43e450:	mov	w8, #0x1                   	// #1
  43e454:	mov	x27, xzr
  43e458:	mov	x11, xzr
  43e45c:	mov	x23, xzr
  43e460:	str	w8, [sp, #84]
  43e464:	b	43e3d8 <feof@plt+0x3b6d8>
  43e468:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e46c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e470:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e474:	sub	w5, w26, w28
  43e478:	sub	x0, x29, #0xd8
  43e47c:	mov	w1, #0xc8                  	// #200
  43e480:	add	x2, x2, #0x4f7
  43e484:	add	x3, x3, #0x4e7
  43e488:	add	x4, x4, #0x28c
  43e48c:	bl	402a20 <snprintf@plt>
  43e490:	sub	x1, x29, #0xd8
  43e494:	mov	x0, x20
  43e498:	mov	w2, wzr
  43e49c:	blr	x21
  43e4a0:	ldr	x8, [sp, #152]
  43e4a4:	adrp	x3, 43f000 <feof@plt+0x3c300>
  43e4a8:	mov	w2, #0x20                  	// #32
  43e4ac:	add	x3, x3, #0x16c
  43e4b0:	ldp	x1, x0, [x8, #88]
  43e4b4:	bl	443af8 <feof@plt+0x40df8>
  43e4b8:	ldr	x26, [sp, #104]
  43e4bc:	ldp	x8, x9, [sp, #384]
  43e4c0:	ldp	x23, x22, [sp, #88]
  43e4c4:	cbz	x9, 43e4e0 <feof@plt+0x3b7e0>
  43e4c8:	add	x11, x8, #0x1
  43e4cc:	sub	x10, x9, #0x1
  43e4d0:	stp	x11, x10, [sp, #384]
  43e4d4:	ldrb	w9, [x8]
  43e4d8:	mov	x8, x11
  43e4dc:	b	43e53c <feof@plt+0x3b83c>
  43e4e0:	ldr	w9, [sp, #424]
  43e4e4:	cbz	w9, 43e4f4 <feof@plt+0x3b7f4>
  43e4e8:	mov	x10, xzr
  43e4ec:	mov	w9, wzr
  43e4f0:	b	43e53c <feof@plt+0x3b83c>
  43e4f4:	ldr	w9, [sp, #376]
  43e4f8:	ldr	x4, [sp, #368]
  43e4fc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e500:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e504:	sub	w5, w8, w9
  43e508:	sub	x0, x29, #0xd8
  43e50c:	mov	w1, #0xc8                  	// #200
  43e510:	add	x2, x2, #0x4f7
  43e514:	add	x3, x3, #0x4e7
  43e518:	bl	402a20 <snprintf@plt>
  43e51c:	ldp	x8, x0, [sp, #408]
  43e520:	sub	x1, x29, #0xd8
  43e524:	mov	w2, wzr
  43e528:	blr	x8
  43e52c:	ldp	x8, x10, [sp, #384]
  43e530:	mov	w11, #0x1                   	// #1
  43e534:	mov	w9, wzr
  43e538:	str	w11, [sp, #424]
  43e53c:	ldp	x11, x14, [sp, #144]
  43e540:	ldr	w13, [sp, #260]
  43e544:	ldr	x12, [sp, #184]
  43e548:	ldp	x1, x3, [sp, #232]
  43e54c:	stp	x8, x10, [x14]
  43e550:	ldr	x10, [sp, #176]
  43e554:	cmp	w13, #0x0
  43e558:	str	w9, [x14, #48]
  43e55c:	mov	w9, #0xc                   	// #12
  43e560:	sub	x8, x8, x10
  43e564:	ldr	w10, [sp, #140]
  43e568:	add	x11, x11, x12
  43e56c:	stp	x8, x12, [x14, #16]
  43e570:	ldr	x4, [sp, #248]
  43e574:	stp	w10, w13, [x14, #40]
  43e578:	mov	w10, #0x4                   	// #4
  43e57c:	csel	x9, x10, x9, eq  // eq = none
  43e580:	add	x8, x11, x9
  43e584:	str	x8, [sp, #184]
  43e588:	str	x8, [x14, #32]
  43e58c:	add	x8, sp, #0x16c
  43e590:	str	x8, [sp, #40]
  43e594:	add	x8, sp, #0x148
  43e598:	stp	x14, x8, [sp, #24]
  43e59c:	ldp	x8, x5, [sp, #208]
  43e5a0:	ldr	x6, [sp, #224]
  43e5a4:	ldr	w7, [sp, #256]
  43e5a8:	movi	v0.2d, #0x0
  43e5ac:	add	x2, sp, #0x170
  43e5b0:	mov	x0, x19
  43e5b4:	stur	q0, [x14, #56]
  43e5b8:	stur	q0, [x14, #72]
  43e5bc:	stur	q0, [x14, #104]
  43e5c0:	stur	q0, [x14, #120]
  43e5c4:	stp	x21, x20, [sp, #8]
  43e5c8:	str	x8, [sp]
  43e5cc:	bl	43eb58 <feof@plt+0x3be58>
  43e5d0:	cbz	w0, 43e638 <feof@plt+0x3b938>
  43e5d4:	ldr	w8, [sp, #424]
  43e5d8:	cbnz	w8, 43e638 <feof@plt+0x3b938>
  43e5dc:	ldr	w8, [sp, #512]
  43e5e0:	ldp	x11, x12, [sp, #120]
  43e5e4:	ldp	x2, x3, [sp, #160]
  43e5e8:	cbnz	x12, 43d694 <feof@plt+0x3a994>
  43e5ec:	ldr	x28, [sp, #272]
  43e5f0:	cbnz	w8, 43e63c <feof@plt+0x3b93c>
  43e5f4:	b	43e730 <feof@plt+0x3ba30>
  43e5f8:	ldr	w8, [sp, #280]
  43e5fc:	cbnz	w8, 43e638 <feof@plt+0x3b938>
  43e600:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e604:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e608:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e60c:	sub	w5, w25, w28
  43e610:	add	x2, x2, #0x4f7
  43e614:	add	x3, x3, #0x4e7
  43e618:	add	x4, x4, #0x28c
  43e61c:	sub	x0, x29, #0xd8
  43e620:	mov	w1, #0xc8                  	// #200
  43e624:	bl	402a20 <snprintf@plt>
  43e628:	sub	x1, x29, #0xd8
  43e62c:	mov	x0, x20
  43e630:	mov	w2, wzr
  43e634:	blr	x21
  43e638:	ldr	x28, [sp, #272]
  43e63c:	cbz	x28, 43e6fc <feof@plt+0x3b9fc>
  43e640:	ldr	x22, [sp, #432]
  43e644:	mov	x23, xzr
  43e648:	b	43e688 <feof@plt+0x3b988>
  43e64c:	mov	x2, xzr
  43e650:	mov	x0, x19
  43e654:	mov	x3, x21
  43e658:	mov	x4, x20
  43e65c:	bl	439bf4 <feof@plt+0x36ef4>
  43e660:	stp	xzr, xzr, [x24]
  43e664:	ldr	x1, [x22, x23, lsl #3]
  43e668:	mov	w2, #0x88                  	// #136
  43e66c:	mov	x0, x19
  43e670:	mov	x3, x21
  43e674:	mov	x4, x20
  43e678:	bl	439bf4 <feof@plt+0x36ef4>
  43e67c:	add	x23, x23, #0x1
  43e680:	cmp	x23, x28
  43e684:	b.eq	43e6dc <feof@plt+0x3b9dc>  // b.none
  43e688:	ldr	x25, [x22, x23, lsl #3]
  43e68c:	mov	x24, x25
  43e690:	ldr	x8, [x24, #88]!
  43e694:	ldr	x1, [x25, #96]
  43e698:	cbz	x8, 43e64c <feof@plt+0x3b94c>
  43e69c:	mov	x26, xzr
  43e6a0:	mov	x27, xzr
  43e6a4:	add	x8, x1, x26
  43e6a8:	ldp	x9, x1, [x8, #16]
  43e6ac:	mov	x0, x19
  43e6b0:	mov	x3, x21
  43e6b4:	mov	x4, x20
  43e6b8:	lsl	x2, x9, #3
  43e6bc:	bl	439bf4 <feof@plt+0x36ef4>
  43e6c0:	ldp	x8, x1, [x25, #88]
  43e6c4:	add	x27, x27, #0x1
  43e6c8:	add	x26, x26, #0x20
  43e6cc:	cmp	x27, x8
  43e6d0:	b.cc	43e6a4 <feof@plt+0x3b9a4>  // b.lo, b.ul, b.last
  43e6d4:	lsl	x2, x8, #5
  43e6d8:	b	43e650 <feof@plt+0x3b950>
  43e6dc:	ldp	x8, x9, [sp, #440]
  43e6e0:	add	x1, sp, #0x1b0
  43e6e4:	mov	x0, x19
  43e6e8:	mov	x2, x21
  43e6ec:	add	x8, x9, x8
  43e6f0:	mov	x3, x20
  43e6f4:	stp	xzr, x8, [sp, #440]
  43e6f8:	bl	439e1c <feof@plt+0x3711c>
  43e6fc:	ldr	x8, [sp, #352]
  43e700:	cbz	x8, 43e840 <feof@plt+0x3bb40>
  43e704:	ldp	x8, x9, [sp, #336]
  43e708:	add	x1, sp, #0x148
  43e70c:	mov	x0, x19
  43e710:	mov	x2, x21
  43e714:	add	x8, x9, x8
  43e718:	mov	x3, x20
  43e71c:	stp	xzr, x8, [sp, #336]
  43e720:	bl	439e1c <feof@plt+0x3711c>
  43e724:	str	xzr, [sp, #352]
  43e728:	b	43e840 <feof@plt+0x3bb40>
  43e72c:	mov	x28, xzr
  43e730:	ldr	q0, [sp, #432]
  43e734:	ldr	x8, [sp, #448]
  43e738:	mov	x25, x2
  43e73c:	mov	x24, x3
  43e740:	add	x1, sp, #0x148
  43e744:	mov	x0, x19
  43e748:	mov	x2, x21
  43e74c:	mov	x3, x20
  43e750:	mov	x27, x23
  43e754:	mov	x26, x22
  43e758:	str	q0, [sp, #288]
  43e75c:	stp	x8, x28, [sp, #304]
  43e760:	bl	439e1c <feof@plt+0x3711c>
  43e764:	cbz	w0, 43e840 <feof@plt+0x3bb40>
  43e768:	add	x1, sp, #0x120
  43e76c:	mov	x0, x19
  43e770:	mov	x2, x21
  43e774:	mov	x3, x20
  43e778:	bl	439e1c <feof@plt+0x3711c>
  43e77c:	cbz	w0, 43e840 <feof@plt+0x3bb40>
  43e780:	ldr	x22, [sp, #328]
  43e784:	ldr	x23, [sp, #352]
  43e788:	ldr	x8, [sp, #312]
  43e78c:	ldr	x28, [sp, #288]
  43e790:	adrp	x3, 43e000 <feof@plt+0x3b300>
  43e794:	add	x3, x3, #0xae8
  43e798:	mov	w2, #0x18                  	// #24
  43e79c:	mov	x0, x22
  43e7a0:	mov	x1, x23
  43e7a4:	str	x8, [sp, #280]
  43e7a8:	bl	443af8 <feof@plt+0x40df8>
  43e7ac:	mov	w1, #0xa0                  	// #160
  43e7b0:	mov	x0, x19
  43e7b4:	mov	x2, x21
  43e7b8:	mov	x3, x20
  43e7bc:	bl	439a30 <feof@plt+0x36d30>
  43e7c0:	cbz	x0, 43e840 <feof@plt+0x3bb40>
  43e7c4:	ldr	x10, [sp, #208]
  43e7c8:	ldp	x8, x9, [x29, #160]
  43e7cc:	movi	v0.2d, #0x0
  43e7d0:	stp	x23, x28, [x0, #32]
  43e7d4:	stp	xzr, x10, [x0]
  43e7d8:	ldr	x10, [sp, #232]
  43e7dc:	stp	x24, x27, [x0, #64]
  43e7e0:	stp	q0, q0, [x0, #128]
  43e7e4:	stp	x10, x22, [x0, #16]
  43e7e8:	ldr	x10, [sp, #280]
  43e7ec:	stp	x10, x25, [x0, #48]
  43e7f0:	ldr	x10, [sp, #216]
  43e7f4:	stp	x26, x10, [x0, #80]
  43e7f8:	ldr	x10, [sp, #224]
  43e7fc:	str	x10, [x0, #96]
  43e800:	ldr	x10, [sp, #240]
  43e804:	str	x10, [x0, #104]
  43e808:	ldr	x10, [sp, #248]
  43e80c:	str	x10, [x0, #112]
  43e810:	ldr	w10, [sp, #256]
  43e814:	str	w10, [x0, #120]
  43e818:	cbz	x9, 43e820 <feof@plt+0x3bb20>
  43e81c:	str	x0, [x9]
  43e820:	ldr	w10, [x19, #8]
  43e824:	add	x9, x19, #0x20
  43e828:	cbnz	w10, 43e868 <feof@plt+0x3bb68>
  43e82c:	mov	x10, x9
  43e830:	ldr	x9, [x9]
  43e834:	cbnz	x9, 43e82c <feof@plt+0x3bb2c>
  43e838:	str	x0, [x10]
  43e83c:	b	43e888 <feof@plt+0x3bb88>
  43e840:	mov	w0, wzr
  43e844:	add	sp, sp, #0x2e0
  43e848:	ldp	x20, x19, [sp, #80]
  43e84c:	ldp	x22, x21, [sp, #64]
  43e850:	ldp	x24, x23, [sp, #48]
  43e854:	ldp	x26, x25, [sp, #32]
  43e858:	ldp	x28, x27, [sp, #16]
  43e85c:	ldp	x29, x30, [sp], #96
  43e860:	ret
  43e864:	clrex
  43e868:	mov	x11, x9
  43e86c:	mov	x10, x11
  43e870:	ldar	x11, [x11]
  43e874:	cbnz	x11, 43e86c <feof@plt+0x3bb6c>
  43e878:	ldaxr	x11, [x10]
  43e87c:	cbnz	x11, 43e864 <feof@plt+0x3bb64>
  43e880:	stlxr	w11, x0, [x10]
  43e884:	cbnz	w11, 43e878 <feof@plt+0x3bb78>
  43e888:	adrp	x9, 43e000 <feof@plt+0x3b300>
  43e88c:	add	x9, x9, #0xa04
  43e890:	mov	w0, #0x1                   	// #1
  43e894:	str	x9, [x8]
  43e898:	b	43e844 <feof@plt+0x3bb44>
  43e89c:	ldr	w8, [sp, #512]
  43e8a0:	cbnz	w8, 43e638 <feof@plt+0x3b938>
  43e8a4:	ldr	w8, [sp, #472]
  43e8a8:	ldr	w9, [sp, #464]
  43e8ac:	ldr	x4, [sp, #456]
  43e8b0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e8b4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e8b8:	sub	w5, w8, w9
  43e8bc:	add	x2, x2, #0x4f7
  43e8c0:	add	x3, x3, #0x4e7
  43e8c4:	sub	x0, x29, #0xd8
  43e8c8:	mov	w1, #0xc8                  	// #200
  43e8cc:	bl	402a20 <snprintf@plt>
  43e8d0:	ldp	x8, x0, [sp, #496]
  43e8d4:	sub	x1, x29, #0xd8
  43e8d8:	mov	w2, wzr
  43e8dc:	blr	x8
  43e8e0:	ldr	x28, [sp, #272]
  43e8e4:	mov	w8, #0x1                   	// #1
  43e8e8:	str	w8, [sp, #512]
  43e8ec:	b	43e63c <feof@plt+0x3b93c>
  43e8f0:	ldr	w9, [sp, #424]
  43e8f4:	cbnz	w9, 43e944 <feof@plt+0x3bc44>
  43e8f8:	ldr	w9, [sp, #376]
  43e8fc:	ldr	x4, [sp, #368]
  43e900:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e904:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e908:	sub	w5, w8, w9
  43e90c:	add	x2, x2, #0x4f7
  43e910:	add	x3, x3, #0x4e7
  43e914:	sub	x0, x29, #0xd8
  43e918:	mov	w1, #0xc8                  	// #200
  43e91c:	bl	402a20 <snprintf@plt>
  43e920:	ldp	x8, x0, [sp, #408]
  43e924:	sub	x1, x29, #0xd8
  43e928:	mov	w2, wzr
  43e92c:	blr	x8
  43e930:	ldr	x8, [sp, #384]
  43e934:	mov	w9, #0x1                   	// #1
  43e938:	str	w9, [sp, #424]
  43e93c:	b	43e944 <feof@plt+0x3bc44>
  43e940:	mov	x8, x9
  43e944:	ldr	w9, [sp, #376]
  43e948:	ldr	x4, [sp, #368]
  43e94c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e950:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e954:	sub	w5, w8, w9
  43e958:	add	x2, x2, #0x4f7
  43e95c:	add	x3, x3, #0x4cc
  43e960:	sub	x0, x29, #0xd8
  43e964:	mov	w1, #0xc8                  	// #200
  43e968:	bl	402a20 <snprintf@plt>
  43e96c:	ldp	x8, x0, [sp, #408]
  43e970:	sub	x1, x29, #0xd8
  43e974:	mov	w2, wzr
  43e978:	blr	x8
  43e97c:	b	43e638 <feof@plt+0x3b938>
  43e980:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43e984:	add	x1, x1, #0x506
  43e988:	b	43e62c <feof@plt+0x3b92c>
  43e98c:	ldr	x9, [sp, #152]
  43e990:	ldp	x8, x1, [x9, #88]
  43e994:	cbz	x8, 43e9e0 <feof@plt+0x3bce0>
  43e998:	ldr	x28, [sp, #272]
  43e99c:	mov	x22, xzr
  43e9a0:	mov	x23, xzr
  43e9a4:	add	x8, x1, x22
  43e9a8:	ldp	x9, x1, [x8, #16]
  43e9ac:	mov	x0, x19
  43e9b0:	mov	x3, x21
  43e9b4:	mov	x4, x20
  43e9b8:	lsl	x2, x9, #3
  43e9bc:	bl	439bf4 <feof@plt+0x36ef4>
  43e9c0:	ldr	x9, [sp, #152]
  43e9c4:	add	x23, x23, #0x1
  43e9c8:	add	x22, x22, #0x20
  43e9cc:	ldp	x8, x1, [x9, #88]
  43e9d0:	cmp	x23, x8
  43e9d4:	b.cc	43e9a4 <feof@plt+0x3bca4>  // b.lo, b.ul, b.last
  43e9d8:	lsl	x2, x8, #5
  43e9dc:	b	43e9e8 <feof@plt+0x3bce8>
  43e9e0:	ldr	x28, [sp, #272]
  43e9e4:	mov	x2, xzr
  43e9e8:	mov	x0, x19
  43e9ec:	mov	x3, x21
  43e9f0:	mov	x4, x20
  43e9f4:	bl	439bf4 <feof@plt+0x36ef4>
  43e9f8:	ldr	x8, [sp, #200]
  43e9fc:	stp	xzr, xzr, [x8]
  43ea00:	b	43e63c <feof@plt+0x3b93c>
  43ea04:	sub	sp, sp, #0x50
  43ea08:	stp	x29, x30, [sp, #16]
  43ea0c:	stp	x24, x23, [sp, #32]
  43ea10:	stp	x22, x21, [sp, #48]
  43ea14:	stp	x20, x19, [sp, #64]
  43ea18:	add	x29, sp, #0x10
  43ea1c:	ldr	w8, [x0, #8]
  43ea20:	mov	x20, x4
  43ea24:	mov	x22, x3
  43ea28:	mov	x19, x2
  43ea2c:	mov	x23, x0
  43ea30:	mov	x21, x1
  43ea34:	cbz	w8, 43ea7c <feof@plt+0x3bd7c>
  43ea38:	add	x8, x23, #0x20
  43ea3c:	ldar	x24, [x8]
  43ea40:	cbz	x24, 43eab8 <feof@plt+0x3bdb8>
  43ea44:	sub	x6, x29, #0x4
  43ea48:	mov	x0, x23
  43ea4c:	mov	x1, x24
  43ea50:	mov	x2, x21
  43ea54:	mov	x3, x19
  43ea58:	mov	x4, x22
  43ea5c:	mov	x5, x20
  43ea60:	bl	440574 <feof@plt+0x3d874>
  43ea64:	ldur	w8, [x29, #-4]
  43ea68:	orr	w8, w8, w0
  43ea6c:	cbnz	w8, 43ead0 <feof@plt+0x3bdd0>
  43ea70:	ldar	x24, [x24]
  43ea74:	cbnz	x24, 43ea44 <feof@plt+0x3bd44>
  43ea78:	b	43eab8 <feof@plt+0x3bdb8>
  43ea7c:	ldr	x24, [x23, #32]
  43ea80:	cbz	x24, 43eab8 <feof@plt+0x3bdb8>
  43ea84:	sub	x6, x29, #0x4
  43ea88:	mov	x0, x23
  43ea8c:	mov	x1, x24
  43ea90:	mov	x2, x21
  43ea94:	mov	x3, x19
  43ea98:	mov	x4, x22
  43ea9c:	mov	x5, x20
  43eaa0:	bl	440574 <feof@plt+0x3d874>
  43eaa4:	ldur	w8, [x29, #-4]
  43eaa8:	orr	w8, w8, w0
  43eaac:	cbnz	w8, 43ead0 <feof@plt+0x3bdd0>
  43eab0:	ldr	x24, [x24]
  43eab4:	cbnz	x24, 43ea84 <feof@plt+0x3bd84>
  43eab8:	mov	x0, x20
  43eabc:	mov	x1, x21
  43eac0:	mov	x2, xzr
  43eac4:	mov	w3, wzr
  43eac8:	mov	x4, xzr
  43eacc:	blr	x19
  43ead0:	ldp	x20, x19, [sp, #64]
  43ead4:	ldp	x22, x21, [sp, #48]
  43ead8:	ldp	x24, x23, [sp, #32]
  43eadc:	ldp	x29, x30, [sp, #16]
  43eae0:	add	sp, sp, #0x50
  43eae4:	ret
  43eae8:	ldr	x8, [x0]
  43eaec:	ldr	x9, [x1]
  43eaf0:	cmp	x8, x9
  43eaf4:	b.cs	43eb00 <feof@plt+0x3be00>  // b.hs, b.nlast
  43eaf8:	mov	w0, #0xffffffff            	// #-1
  43eafc:	ret
  43eb00:	b.ls	43eb0c <feof@plt+0x3be0c>  // b.plast
  43eb04:	mov	w0, #0x1                   	// #1
  43eb08:	ret
  43eb0c:	ldr	x8, [x0, #8]
  43eb10:	ldr	x9, [x1, #8]
  43eb14:	cmp	x8, x9
  43eb18:	b.cs	43eb24 <feof@plt+0x3be24>  // b.hs, b.nlast
  43eb1c:	mov	w0, #0x1                   	// #1
  43eb20:	ret
  43eb24:	b.ls	43eb30 <feof@plt+0x3be30>  // b.plast
  43eb28:	mov	w0, #0xffffffff            	// #-1
  43eb2c:	ret
  43eb30:	ldr	x8, [x0, #16]
  43eb34:	ldr	x9, [x1, #16]
  43eb38:	ldr	x8, [x8, #56]
  43eb3c:	ldr	x9, [x9, #56]
  43eb40:	cmp	x8, x9
  43eb44:	b.ge	43eb50 <feof@plt+0x3be50>  // b.tcont
  43eb48:	mov	w0, #0xffffffff            	// #-1
  43eb4c:	ret
  43eb50:	cset	w0, gt
  43eb54:	ret
  43eb58:	sub	sp, sp, #0x1d0
  43eb5c:	stp	x29, x30, [sp, #368]
  43eb60:	stp	x28, x27, [sp, #384]
  43eb64:	stp	x26, x25, [sp, #400]
  43eb68:	stp	x24, x23, [sp, #416]
  43eb6c:	stp	x22, x21, [sp, #432]
  43eb70:	stp	x20, x19, [sp, #448]
  43eb74:	add	x29, sp, #0x170
  43eb78:	ldr	x8, [x2, #24]
  43eb7c:	cbz	x8, 43f030 <feof@plt+0x3c330>
  43eb80:	ldr	x9, [x29, #136]
  43eb84:	ldp	x27, x20, [x29, #120]
  43eb88:	ldr	x28, [x29, #96]
  43eb8c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43eb90:	str	x9, [sp, #128]
  43eb94:	ldr	x9, [x29, #112]
  43eb98:	mov	w26, w7
  43eb9c:	mov	x23, x4
  43eba0:	mov	x24, x3
  43eba4:	str	x9, [sp, #144]
  43eba8:	ldr	x9, [x29, #104]
  43ebac:	mov	x19, x2
  43ebb0:	add	x21, x21, #0x5b0
  43ebb4:	stp	x0, x1, [sp, #112]
  43ebb8:	stp	x5, x6, [sp, #96]
  43ebbc:	str	x9, [sp, #152]
  43ebc0:	str	x20, [sp, #136]
  43ebc4:	ldr	x10, [x19, #16]
  43ebc8:	cbz	x8, 43f038 <feof@plt+0x3c338>
  43ebcc:	mov	w9, wzr
  43ebd0:	mov	w22, wzr
  43ebd4:	mov	x20, xzr
  43ebd8:	add	x11, x10, #0x1
  43ebdc:	sub	x8, x8, #0x1
  43ebe0:	stp	x11, x8, [x19, #16]
  43ebe4:	ldrb	w25, [x10]
  43ebe8:	cmp	w22, #0x3f
  43ebec:	b.hi	43ec08 <feof@plt+0x3bf08>  // b.pmore
  43ebf0:	and	x8, x25, #0x7f
  43ebf4:	lsl	x8, x8, x22
  43ebf8:	orr	x20, x8, x20
  43ebfc:	sxtb	w8, w25
  43ec00:	tbnz	w8, #31, 43ec14 <feof@plt+0x3bf14>
  43ec04:	b	43ec64 <feof@plt+0x3bf64>
  43ec08:	cbz	w9, 43ec24 <feof@plt+0x3bf24>
  43ec0c:	sxtb	w8, w25
  43ec10:	tbz	w8, #31, 43ec64 <feof@plt+0x3bf64>
  43ec14:	ldp	x10, x8, [x19, #16]
  43ec18:	add	w22, w22, #0x7
  43ec1c:	cbnz	x8, 43ebd8 <feof@plt+0x3bed8>
  43ec20:	b	43f038 <feof@plt+0x3c338>
  43ec24:	ldr	w8, [x19, #8]
  43ec28:	ldr	x4, [x19]
  43ec2c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ec30:	add	x0, sp, #0xa0
  43ec34:	sub	w5, w11, w8
  43ec38:	mov	w1, #0xc8                  	// #200
  43ec3c:	add	x2, x2, #0x4f7
  43ec40:	mov	x3, x21
  43ec44:	bl	402a20 <snprintf@plt>
  43ec48:	ldp	x8, x0, [x19, #40]
  43ec4c:	add	x1, sp, #0xa0
  43ec50:	mov	w2, wzr
  43ec54:	blr	x8
  43ec58:	mov	w9, #0x1                   	// #1
  43ec5c:	sxtb	w8, w25
  43ec60:	tbnz	w8, #31, 43ec14 <feof@plt+0x3bf14>
  43ec64:	cbz	x20, 43f030 <feof@plt+0x3c330>
  43ec68:	ldr	x8, [x27, #88]
  43ec6c:	sub	x10, x20, #0x1
  43ec70:	cmp	x10, x8
  43ec74:	b.cs	43ee44 <feof@plt+0x3c144>  // b.hs, b.nlast
  43ec78:	ldr	x9, [x27, #96]
  43ec7c:	add	x25, x9, x10, lsl #5
  43ec80:	ldr	x10, [x25]
  43ec84:	cmp	x10, x20
  43ec88:	b.ne	43ee4c <feof@plt+0x3c14c>  // b.any
  43ec8c:	cbz	x25, 43f098 <feof@plt+0x3c398>
  43ec90:	ldr	x9, [sp, #128]
  43ec94:	cbz	x9, 43eca0 <feof@plt+0x3bfa0>
  43ec98:	ldr	w8, [x25, #8]
  43ec9c:	str	w8, [x9]
  43eca0:	ldr	x8, [x25, #16]
  43eca4:	str	w26, [sp, #60]
  43eca8:	cbz	x8, 43ee88 <feof@plt+0x3c188>
  43ecac:	str	xzr, [sp, #88]
  43ecb0:	stp	xzr, xzr, [sp, #64]
  43ecb4:	ldr	x8, [x25, #24]
  43ecb8:	mov	x26, xzr
  43ecbc:	mov	x22, xzr
  43ecc0:	mov	x20, xzr
  43ecc4:	str	wzr, [sp, #56]
  43ecc8:	str	wzr, [sp, #84]
  43eccc:	b	43ed00 <feof@plt+0x3c000>
  43ecd0:	ldr	w9, [sp, #160]
  43ecd4:	ldr	x10, [sp, #168]
  43ecd8:	cmp	w9, #0x1
  43ecdc:	ldr	w9, [sp, #92]
  43ece0:	csel	x22, x10, x22, eq  // eq = none
  43ece4:	csinc	w9, w9, wzr, ne  // ne = any
  43ece8:	str	w9, [sp, #92]
  43ecec:	ldr	x9, [x25, #16]
  43ecf0:	add	x20, x20, #0x1
  43ecf4:	add	x26, x26, #0x8
  43ecf8:	cmp	x20, x9
  43ecfc:	b.cs	43ee9c <feof@plt+0x3c19c>  // b.hs, b.nlast
  43ed00:	add	x8, x8, x26
  43ed04:	ldp	w3, w2, [x27, #40]
  43ed08:	ldr	w0, [x8, #4]
  43ed0c:	ldr	w4, [x27, #48]
  43ed10:	add	x8, sp, #0xa0
  43ed14:	mov	x1, x19
  43ed18:	mov	x5, x24
  43ed1c:	mov	x6, x23
  43ed20:	mov	x7, x28
  43ed24:	str	x8, [sp]
  43ed28:	bl	43f184 <feof@plt+0x3c484>
  43ed2c:	cbz	w0, 43f098 <feof@plt+0x3c398>
  43ed30:	ldr	x8, [x25, #24]
  43ed34:	ldr	w10, [x8, x26]
  43ed38:	sub	w9, w10, #0x3
  43ed3c:	cmp	w9, #0x18
  43ed40:	b.hi	43ed80 <feof@plt+0x3c080>  // b.pmore
  43ed44:	adrp	x12, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ed48:	add	x12, x12, #0x380
  43ed4c:	adr	x10, 43ecd0 <feof@plt+0x3bfd0>
  43ed50:	ldrb	w11, [x12, x9]
  43ed54:	add	x10, x10, x11, lsl #2
  43ed58:	br	x10
  43ed5c:	ldr	w9, [x25, #8]
  43ed60:	cmp	w9, #0x11
  43ed64:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43ed68:	ldr	w9, [sp, #160]
  43ed6c:	cmp	w9, #0x4
  43ed70:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43ed74:	ldr	x9, [sp, #168]
  43ed78:	str	x9, [x27, #64]
  43ed7c:	b	43ecec <feof@plt+0x3bfec>
  43ed80:	cmp	w10, #0x55
  43ed84:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43ed88:	ldr	w9, [sp, #160]
  43ed8c:	cmp	w9, #0x8
  43ed90:	b.eq	43ed9c <feof@plt+0x3c09c>  // b.none
  43ed94:	cmp	w9, #0x2
  43ed98:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43ed9c:	ldr	x9, [sp, #168]
  43eda0:	str	x9, [sp, #64]
  43eda4:	mov	w9, #0x1                   	// #1
  43eda8:	str	w9, [sp, #88]
  43edac:	b	43ecec <feof@plt+0x3bfec>
  43edb0:	ldr	w9, [x25, #8]
  43edb4:	cmp	w9, #0x11
  43edb8:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43edbc:	ldr	w9, [sp, #160]
  43edc0:	cmp	w9, #0x8
  43edc4:	b.eq	43edd0 <feof@plt+0x3c0d0>  // b.none
  43edc8:	cmp	w9, #0x2
  43edcc:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43edd0:	ldr	x9, [sp, #168]
  43edd4:	str	x9, [x27, #56]
  43edd8:	b	43ecec <feof@plt+0x3bfec>
  43eddc:	ldr	w9, [sp, #160]
  43ede0:	cmp	w9, #0x2
  43ede4:	b.eq	43ee28 <feof@plt+0x3c128>  // b.none
  43ede8:	cmp	w9, #0x1
  43edec:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43edf0:	ldr	x9, [sp, #168]
  43edf4:	str	x9, [sp, #72]
  43edf8:	mov	w9, #0x1                   	// #1
  43edfc:	str	w9, [sp, #84]
  43ee00:	b	43ecec <feof@plt+0x3bfec>
  43ee04:	ldr	w9, [x25, #8]
  43ee08:	cmp	w9, #0x11
  43ee0c:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43ee10:	ldr	w9, [sp, #160]
  43ee14:	cmp	w9, #0x4
  43ee18:	b.ne	43ecec <feof@plt+0x3bfec>  // b.any
  43ee1c:	ldr	x9, [sp, #168]
  43ee20:	str	x9, [x27, #72]
  43ee24:	b	43ecec <feof@plt+0x3bfec>
  43ee28:	ldr	x9, [sp, #168]
  43ee2c:	str	x9, [sp, #72]
  43ee30:	mov	w9, #0x1                   	// #1
  43ee34:	str	w9, [sp, #84]
  43ee38:	mov	w9, #0x1                   	// #1
  43ee3c:	str	w9, [sp, #56]
  43ee40:	b	43ecec <feof@plt+0x3bfec>
  43ee44:	cbz	x8, 43f084 <feof@plt+0x3c384>
  43ee48:	ldr	x9, [x27, #96]
  43ee4c:	mov	x10, xzr
  43ee50:	b	43ee60 <feof@plt+0x3c160>
  43ee54:	cmp	x10, x11
  43ee58:	mov	x8, x11
  43ee5c:	b.cs	43f084 <feof@plt+0x3c384>  // b.hs, b.nlast
  43ee60:	add	x11, x8, x10
  43ee64:	lsr	x11, x11, #1
  43ee68:	add	x25, x9, x11, lsl #5
  43ee6c:	ldr	x12, [x25]
  43ee70:	cmp	x12, x20
  43ee74:	b.hi	43ee54 <feof@plt+0x3c154>  // b.pmore
  43ee78:	b.cs	43ec8c <feof@plt+0x3bf8c>  // b.hs, b.nlast
  43ee7c:	add	x10, x11, #0x1
  43ee80:	mov	x11, x8
  43ee84:	b	43ee54 <feof@plt+0x3c154>
  43ee88:	stp	xzr, xzr, [sp, #64]
  43ee8c:	str	wzr, [sp, #84]
  43ee90:	str	wzr, [sp, #56]
  43ee94:	str	xzr, [sp, #88]
  43ee98:	mov	x22, xzr
  43ee9c:	ldr	w8, [x25, #8]
  43eea0:	ldr	w26, [sp, #60]
  43eea4:	cmp	w8, #0x2e
  43eea8:	b.eq	43eeb4 <feof@plt+0x3c1b4>  // b.none
  43eeac:	cmp	w8, #0x11
  43eeb0:	b.ne	43efd0 <feof@plt+0x3c2d0>  // b.any
  43eeb4:	ldr	w8, [sp, #88]
  43eeb8:	cbz	w8, 43eef8 <feof@plt+0x3c1f8>
  43eebc:	ldr	x8, [sp, #136]
  43eec0:	ldp	x0, x1, [sp, #112]
  43eec4:	ldr	x3, [sp, #64]
  43eec8:	ldp	x6, x7, [sp, #96]
  43eecc:	str	x8, [sp, #16]
  43eed0:	ldr	x8, [sp, #144]
  43eed4:	mov	x2, x27
  43eed8:	mov	x4, x22
  43eedc:	mov	w5, w26
  43eee0:	str	x8, [sp, #8]
  43eee4:	ldr	x8, [sp, #152]
  43eee8:	str	x8, [sp]
  43eeec:	bl	4400d4 <feof@plt+0x3d3d4>
  43eef0:	cbnz	w0, 43efac <feof@plt+0x3c2ac>
  43eef4:	b	43f098 <feof@plt+0x3c398>
  43eef8:	ldr	w8, [sp, #84]
  43eefc:	cbz	w8, 43efac <feof@plt+0x3c2ac>
  43ef00:	ldr	w8, [sp, #92]
  43ef04:	cbz	w8, 43efac <feof@plt+0x3c2ac>
  43ef08:	ldr	w8, [sp, #56]
  43ef0c:	ldr	x10, [sp, #120]
  43ef10:	ldr	x11, [sp, #72]
  43ef14:	cmp	w8, #0x0
  43ef18:	ldr	x8, [sp, #136]
  43ef1c:	csel	x9, xzr, x22, eq  // eq = none
  43ef20:	add	x22, x22, x10
  43ef24:	add	x10, x11, x10
  43ef28:	ldr	x8, [x8, #24]
  43ef2c:	add	x13, x10, x9
  43ef30:	cbz	x8, 43ef74 <feof@plt+0x3c274>
  43ef34:	ldr	x9, [sp, #136]
  43ef38:	sub	x11, x8, #0x1
  43ef3c:	mov	w8, #0x18                  	// #24
  43ef40:	ldr	x10, [x9]
  43ef44:	madd	x8, x11, x8, x10
  43ef48:	ldr	x9, [x8, #8]!
  43ef4c:	cmp	x22, x9
  43ef50:	b.eq	43ef60 <feof@plt+0x3c260>  // b.none
  43ef54:	add	x12, x9, #0x1
  43ef58:	cmp	x22, x12
  43ef5c:	b.ne	43ef74 <feof@plt+0x3c274>  // b.any
  43ef60:	mov	w12, #0x18                  	// #24
  43ef64:	madd	x10, x11, x12, x10
  43ef68:	ldr	x10, [x10, #16]
  43ef6c:	cmp	x10, x27
  43ef70:	b.eq	43f020 <feof@plt+0x3c320>  // b.none
  43ef74:	ldr	x20, [sp, #136]
  43ef78:	ldr	x0, [sp, #112]
  43ef7c:	ldp	x3, x2, [sp, #144]
  43ef80:	mov	w1, #0x18                  	// #24
  43ef84:	mov	x4, x20
  43ef88:	str	x13, [sp, #72]
  43ef8c:	bl	439d04 <feof@plt+0x37004>
  43ef90:	cbz	x0, 43f098 <feof@plt+0x3c398>
  43ef94:	ldr	x8, [sp, #72]
  43ef98:	str	x27, [x0, #16]
  43ef9c:	stp	x22, x8, [x0]
  43efa0:	ldr	x8, [x20, #24]
  43efa4:	add	x8, x8, #0x1
  43efa8:	str	x8, [x20, #24]
  43efac:	ldr	w8, [x25, #8]
  43efb0:	cmp	w8, #0x11
  43efb4:	b.ne	43efd0 <feof@plt+0x3c2d0>  // b.any
  43efb8:	ldr	w8, [sp, #88]
  43efbc:	cbnz	w8, 43f030 <feof@plt+0x3c330>
  43efc0:	ldr	w8, [sp, #84]
  43efc4:	cbz	w8, 43efd0 <feof@plt+0x3c2d0>
  43efc8:	ldr	w8, [sp, #92]
  43efcc:	cbnz	w8, 43f030 <feof@plt+0x3c330>
  43efd0:	ldr	w8, [x25, #12]
  43efd4:	ldr	x20, [sp, #136]
  43efd8:	cbz	w8, 43f010 <feof@plt+0x3c310>
  43efdc:	ldr	x8, [sp, #144]
  43efe0:	ldp	x0, x1, [sp, #112]
  43efe4:	ldp	x5, x6, [sp, #96]
  43efe8:	mov	x2, x19
  43efec:	stp	x8, x27, [sp, #16]
  43eff0:	ldr	x8, [sp, #152]
  43eff4:	mov	x3, x24
  43eff8:	mov	x4, x23
  43effc:	mov	w7, w26
  43f000:	stp	x20, xzr, [sp, #32]
  43f004:	stp	x28, x8, [sp]
  43f008:	bl	43eb58 <feof@plt+0x3be58>
  43f00c:	cbz	w0, 43f098 <feof@plt+0x3c398>
  43f010:	ldr	x8, [x19, #24]
  43f014:	mov	w22, #0x1                   	// #1
  43f018:	cbnz	x8, 43ebc4 <feof@plt+0x3bec4>
  43f01c:	b	43f09c <feof@plt+0x3c39c>
  43f020:	cmp	x13, x9
  43f024:	b.ls	43efac <feof@plt+0x3c2ac>  // b.plast
  43f028:	str	x13, [x8]
  43f02c:	b	43efac <feof@plt+0x3c2ac>
  43f030:	mov	w22, #0x1                   	// #1
  43f034:	b	43f09c <feof@plt+0x3c39c>
  43f038:	ldr	w8, [x19, #56]
  43f03c:	mov	w22, #0x1                   	// #1
  43f040:	cbnz	w8, 43f09c <feof@plt+0x3c39c>
  43f044:	ldr	w8, [x19, #8]
  43f048:	ldr	x4, [x19]
  43f04c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f050:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f054:	sub	w5, w10, w8
  43f058:	add	x2, x2, #0x4f7
  43f05c:	add	x3, x3, #0x4e7
  43f060:	add	x0, sp, #0xa0
  43f064:	mov	w1, #0xc8                  	// #200
  43f068:	bl	402a20 <snprintf@plt>
  43f06c:	ldp	x8, x0, [x19, #40]
  43f070:	add	x1, sp, #0xa0
  43f074:	mov	w2, wzr
  43f078:	blr	x8
  43f07c:	str	w22, [x19, #56]
  43f080:	b	43f09c <feof@plt+0x3c39c>
  43f084:	ldp	x0, x8, [sp, #144]
  43f088:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f08c:	add	x1, x1, #0x521
  43f090:	mov	w2, wzr
  43f094:	blr	x8
  43f098:	mov	w22, wzr
  43f09c:	mov	w0, w22
  43f0a0:	ldp	x20, x19, [sp, #448]
  43f0a4:	ldp	x22, x21, [sp, #432]
  43f0a8:	ldp	x24, x23, [sp, #416]
  43f0ac:	ldp	x26, x25, [sp, #400]
  43f0b0:	ldp	x28, x27, [sp, #384]
  43f0b4:	ldp	x29, x30, [sp, #368]
  43f0b8:	add	sp, sp, #0x1d0
  43f0bc:	ret
  43f0c0:	sub	sp, sp, #0xf0
  43f0c4:	stp	x29, x30, [sp, #208]
  43f0c8:	str	x19, [sp, #224]
  43f0cc:	add	x29, sp, #0xd0
  43f0d0:	ldp	x8, x9, [x0, #16]
  43f0d4:	mov	x19, x0
  43f0d8:	cmp	x9, #0x7
  43f0dc:	b.hi	43f0f0 <feof@plt+0x3c3f0>  // b.pmore
  43f0e0:	ldr	w9, [x19, #56]
  43f0e4:	cbz	w9, 43f110 <feof@plt+0x3c410>
  43f0e8:	mov	x0, xzr
  43f0ec:	b	43f15c <feof@plt+0x3c45c>
  43f0f0:	ldr	w10, [x19, #32]
  43f0f4:	add	x11, x8, #0x8
  43f0f8:	sub	x9, x9, #0x8
  43f0fc:	stp	x11, x9, [x19, #16]
  43f100:	cbz	w10, 43f158 <feof@plt+0x3c458>
  43f104:	ldr	x8, [x8]
  43f108:	rev	x0, x8
  43f10c:	b	43f15c <feof@plt+0x3c45c>
  43f110:	ldr	w9, [x19, #8]
  43f114:	ldr	x4, [x19]
  43f118:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f11c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f120:	sub	w5, w8, w9
  43f124:	add	x2, x2, #0x4f7
  43f128:	add	x3, x3, #0x4e7
  43f12c:	add	x0, sp, #0x8
  43f130:	mov	w1, #0xc8                  	// #200
  43f134:	bl	402a20 <snprintf@plt>
  43f138:	ldp	x8, x0, [x19, #40]
  43f13c:	add	x1, sp, #0x8
  43f140:	mov	w2, wzr
  43f144:	blr	x8
  43f148:	mov	w8, #0x1                   	// #1
  43f14c:	mov	x0, xzr
  43f150:	str	w8, [x19, #56]
  43f154:	b	43f15c <feof@plt+0x3c45c>
  43f158:	ldr	x0, [x8]
  43f15c:	ldr	x19, [sp, #224]
  43f160:	ldp	x29, x30, [sp, #208]
  43f164:	add	sp, sp, #0xf0
  43f168:	ret
  43f16c:	ldr	x8, [x0]
  43f170:	ldr	x9, [x1]
  43f174:	cmp	x8, x9
  43f178:	cset	w8, hi  // hi = pmore
  43f17c:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
  43f180:	ret
  43f184:	sub	sp, sp, #0x140
  43f188:	stp	x29, x30, [sp, #224]
  43f18c:	stp	x28, x27, [sp, #240]
  43f190:	stp	x26, x25, [sp, #256]
  43f194:	stp	x24, x23, [sp, #272]
  43f198:	stp	x22, x21, [sp, #288]
  43f19c:	stp	x20, x19, [sp, #304]
  43f1a0:	add	x29, sp, #0xe0
  43f1a4:	ldr	x26, [x29, #96]
  43f1a8:	sub	w8, w0, #0x1
  43f1ac:	mov	x20, x7
  43f1b0:	mov	w23, w2
  43f1b4:	mov	x19, x1
  43f1b8:	cmp	w8, #0x1f
  43f1bc:	stp	xzr, xzr, [x26]
  43f1c0:	b.hi	43f1f4 <feof@plt+0x3c4f4>  // b.pmore
  43f1c4:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f1c8:	add	x9, x9, #0x39a
  43f1cc:	adr	x10, 43f1ec <feof@plt+0x3c4ec>
  43f1d0:	ldrh	w11, [x9, x8, lsl #1]
  43f1d4:	add	x10, x10, x11, lsl #2
  43f1d8:	mov	x22, x6
  43f1dc:	mov	x21, x5
  43f1e0:	mov	w24, w4
  43f1e4:	mov	w25, w3
  43f1e8:	br	x10
  43f1ec:	mov	w8, #0x2                   	// #2
  43f1f0:	b	43f63c <feof@plt+0x3c93c>
  43f1f4:	mov	w8, #0xffffe0ff            	// #-7937
  43f1f8:	add	w8, w0, w8
  43f1fc:	cmp	w8, #0x20
  43f200:	b.hi	43fa44 <feof@plt+0x3cd44>  // b.pmore
  43f204:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f208:	add	x9, x9, #0x3da
  43f20c:	adr	x10, 43f21c <feof@plt+0x3c51c>
  43f210:	ldrh	w11, [x9, x8, lsl #1]
  43f214:	add	x10, x10, x11, lsl #2
  43f218:	br	x10
  43f21c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f220:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f224:	mov	x22, xzr
  43f228:	mov	w23, wzr
  43f22c:	mov	w8, wzr
  43f230:	mov	w9, #0x8                   	// #8
  43f234:	add	x20, x20, #0x4f7
  43f238:	add	x21, x21, #0x5b0
  43f23c:	str	w9, [x26]
  43f240:	b	43f25c <feof@plt+0x3c55c>
  43f244:	and	x9, x24, #0x7f
  43f248:	lsl	x9, x9, x23
  43f24c:	orr	x22, x9, x22
  43f250:	sxtb	w9, w24
  43f254:	add	w23, w23, #0x7
  43f258:	tbz	w9, #31, 43faac <feof@plt+0x3cdac>
  43f25c:	ldp	x10, x11, [x19, #16]
  43f260:	cbz	x11, 43f9d4 <feof@plt+0x3ccd4>
  43f264:	add	x9, x10, #0x1
  43f268:	sub	x11, x11, #0x1
  43f26c:	stp	x9, x11, [x19, #16]
  43f270:	ldrb	w24, [x10]
  43f274:	cmp	w23, #0x3f
  43f278:	b.ls	43f244 <feof@plt+0x3c544>  // b.plast
  43f27c:	cbnz	w8, 43f250 <feof@plt+0x3c550>
  43f280:	ldr	w8, [x19, #8]
  43f284:	ldr	x4, [x19]
  43f288:	add	x0, sp, #0x10
  43f28c:	mov	w1, #0xc8                  	// #200
  43f290:	sub	w5, w9, w8
  43f294:	mov	x2, x20
  43f298:	mov	x3, x21
  43f29c:	bl	402a20 <snprintf@plt>
  43f2a0:	ldp	x8, x0, [x19, #40]
  43f2a4:	add	x1, sp, #0x10
  43f2a8:	mov	w2, wzr
  43f2ac:	blr	x8
  43f2b0:	mov	w8, #0x1                   	// #1
  43f2b4:	b	43f250 <feof@plt+0x3c550>
  43f2b8:	sub	w8, w24, #0x1
  43f2bc:	mov	w9, #0x1                   	// #1
  43f2c0:	cmp	w8, #0x7
  43f2c4:	str	w9, [x26]
  43f2c8:	b.hi	43fd38 <feof@plt+0x3d038>  // b.pmore
  43f2cc:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f2d0:	add	x9, x9, #0x42c
  43f2d4:	adr	x10, 43f61c <feof@plt+0x3c91c>
  43f2d8:	ldrh	w11, [x9, x8, lsl #1]
  43f2dc:	add	x10, x10, x11, lsl #2
  43f2e0:	br	x10
  43f2e4:	mov	w8, #0xa                   	// #10
  43f2e8:	str	w8, [x26]
  43f2ec:	ldp	x9, x8, [x19, #16]
  43f2f0:	cmp	x8, #0x1
  43f2f4:	b.hi	43fae4 <feof@plt+0x3cde4>  // b.pmore
  43f2f8:	ldr	w10, [x19, #56]
  43f2fc:	cbnz	w10, 43f368 <feof@plt+0x3c668>
  43f300:	ldr	w8, [x19, #8]
  43f304:	ldr	x4, [x19]
  43f308:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f30c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f310:	sub	w5, w9, w8
  43f314:	add	x2, x2, #0x4f7
  43f318:	add	x3, x3, #0x4e7
  43f31c:	add	x0, sp, #0x10
  43f320:	mov	w1, #0xc8                  	// #200
  43f324:	bl	402a20 <snprintf@plt>
  43f328:	ldp	x8, x0, [x19, #40]
  43f32c:	add	x1, sp, #0x10
  43f330:	mov	w2, wzr
  43f334:	blr	x8
  43f338:	ldr	x8, [x19, #24]
  43f33c:	mov	w10, #0x1                   	// #1
  43f340:	mov	x9, xzr
  43f344:	str	w10, [x19, #56]
  43f348:	b	43fe50 <feof@plt+0x3d150>
  43f34c:	mov	w8, #0xa                   	// #10
  43f350:	str	w8, [x26]
  43f354:	ldp	x9, x8, [x19, #16]
  43f358:	cmp	x8, #0x3
  43f35c:	b.hi	43fb08 <feof@plt+0x3ce08>  // b.pmore
  43f360:	ldr	w10, [x19, #56]
  43f364:	cbz	w10, 43f300 <feof@plt+0x3c600>
  43f368:	mov	x9, xzr
  43f36c:	b	43fe50 <feof@plt+0x3d150>
  43f370:	mov	w8, #0x2                   	// #2
  43f374:	b	43f660 <feof@plt+0x3c960>
  43f378:	mov	w8, #0x2                   	// #2
  43f37c:	b	43f694 <feof@plt+0x3c994>
  43f380:	mov	w8, #0x2                   	// #2
  43f384:	str	w8, [x26]
  43f388:	b	43fb60 <feof@plt+0x3ce60>
  43f38c:	mov	w8, #0x4                   	// #4
  43f390:	str	w8, [x26]
  43f394:	ldp	x20, x21, [x19, #16]
  43f398:	mov	x0, x20
  43f39c:	mov	x1, x21
  43f3a0:	bl	402c60 <strnlen@plt>
  43f3a4:	add	x9, x0, #0x1
  43f3a8:	subs	x8, x21, x9
  43f3ac:	b.cs	43fb2c <feof@plt+0x3ce2c>  // b.hs, b.nlast
  43f3b0:	ldr	w8, [x19, #56]
  43f3b4:	cbz	w8, 43fdf0 <feof@plt+0x3d0f0>
  43f3b8:	mov	x20, xzr
  43f3bc:	b	43fe34 <feof@plt+0x3d134>
  43f3c0:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f3c4:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f3c8:	mov	x22, xzr
  43f3cc:	mov	w23, wzr
  43f3d0:	mov	w8, wzr
  43f3d4:	mov	w9, #0xa                   	// #10
  43f3d8:	add	x20, x20, #0x4f7
  43f3dc:	add	x21, x21, #0x5b0
  43f3e0:	str	w9, [x26]
  43f3e4:	b	43f400 <feof@plt+0x3c700>
  43f3e8:	and	x9, x24, #0x7f
  43f3ec:	lsl	x9, x9, x23
  43f3f0:	orr	x22, x9, x22
  43f3f4:	sxtb	w9, w24
  43f3f8:	add	w23, w23, #0x7
  43f3fc:	tbz	w9, #31, 43fa34 <feof@plt+0x3cd34>
  43f400:	ldp	x10, x11, [x19, #16]
  43f404:	cbz	x11, 43f8e0 <feof@plt+0x3cbe0>
  43f408:	add	x9, x10, #0x1
  43f40c:	sub	x11, x11, #0x1
  43f410:	stp	x9, x11, [x19, #16]
  43f414:	ldrb	w24, [x10]
  43f418:	cmp	w23, #0x3f
  43f41c:	b.ls	43f3e8 <feof@plt+0x3c6e8>  // b.plast
  43f420:	cbnz	w8, 43f3f4 <feof@plt+0x3c6f4>
  43f424:	ldr	w8, [x19, #8]
  43f428:	ldr	x4, [x19]
  43f42c:	add	x0, sp, #0x10
  43f430:	mov	w1, #0xc8                  	// #200
  43f434:	sub	w5, w9, w8
  43f438:	mov	x2, x20
  43f43c:	mov	x3, x21
  43f440:	bl	402a20 <snprintf@plt>
  43f444:	ldp	x8, x0, [x19, #40]
  43f448:	add	x1, sp, #0x10
  43f44c:	mov	w2, wzr
  43f450:	blr	x8
  43f454:	mov	w8, #0x1                   	// #1
  43f458:	b	43f3f4 <feof@plt+0x3c6f4>
  43f45c:	mov	w8, #0xa                   	// #10
  43f460:	str	w8, [x26]
  43f464:	ldp	x8, x9, [x19, #16]
  43f468:	cbz	x9, 43fc20 <feof@plt+0x3cf20>
  43f46c:	add	x10, x8, #0x1
  43f470:	sub	x9, x9, #0x1
  43f474:	stp	x10, x9, [x19, #16]
  43f478:	ldrb	w8, [x8]
  43f47c:	cmp	x9, x8
  43f480:	b.cc	43fe58 <feof@plt+0x3d158>  // b.lo, b.ul, b.last
  43f484:	b	43ffa4 <feof@plt+0x3d2a4>
  43f488:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f48c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f490:	mov	x22, xzr
  43f494:	mov	w23, wzr
  43f498:	mov	w8, wzr
  43f49c:	mov	w9, #0x3                   	// #3
  43f4a0:	add	x20, x20, #0x4f7
  43f4a4:	add	x21, x21, #0x5a9
  43f4a8:	str	w9, [x26]
  43f4ac:	b	43f4c8 <feof@plt+0x3c7c8>
  43f4b0:	and	x9, x24, #0x7f
  43f4b4:	lsl	x9, x9, x23
  43f4b8:	orr	x22, x9, x22
  43f4bc:	sxtb	w9, w24
  43f4c0:	add	w23, w23, #0x7
  43f4c4:	tbz	w9, #31, 43fba0 <feof@plt+0x3cea0>
  43f4c8:	ldp	x10, x11, [x19, #16]
  43f4cc:	cbz	x11, 43fabc <feof@plt+0x3cdbc>
  43f4d0:	add	x9, x10, #0x1
  43f4d4:	sub	x11, x11, #0x1
  43f4d8:	stp	x9, x11, [x19, #16]
  43f4dc:	ldrb	w24, [x10]
  43f4e0:	cmp	w23, #0x3f
  43f4e4:	b.ls	43f4b0 <feof@plt+0x3c7b0>  // b.plast
  43f4e8:	cbnz	w8, 43f4bc <feof@plt+0x3c7bc>
  43f4ec:	ldr	w8, [x19, #8]
  43f4f0:	ldr	x4, [x19]
  43f4f4:	add	x0, sp, #0x10
  43f4f8:	mov	w1, #0xc8                  	// #200
  43f4fc:	sub	w5, w9, w8
  43f500:	mov	x2, x20
  43f504:	mov	x3, x21
  43f508:	bl	402a20 <snprintf@plt>
  43f50c:	ldp	x8, x0, [x19, #40]
  43f510:	add	x1, sp, #0x10
  43f514:	mov	w2, wzr
  43f518:	blr	x8
  43f51c:	mov	w8, #0x1                   	// #1
  43f520:	b	43f4bc <feof@plt+0x3c7bc>
  43f524:	cbz	w23, 43fc34 <feof@plt+0x3cf34>
  43f528:	mov	x0, x19
  43f52c:	bl	43f0c0 <feof@plt+0x3c3c0>
  43f530:	cmp	x0, x22
  43f534:	b.cs	43fb38 <feof@plt+0x3ce38>  // b.hs, b.nlast
  43f538:	mov	w8, #0x4                   	// #4
  43f53c:	add	x9, x21, x0
  43f540:	str	w8, [x26]
  43f544:	str	x9, [x26, #8]
  43f548:	b	43ffb8 <feof@plt+0x3d2b8>
  43f54c:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f550:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f554:	mov	x22, xzr
  43f558:	mov	w23, wzr
  43f55c:	mov	w8, wzr
  43f560:	mov	w9, #0x2                   	// #2
  43f564:	add	x20, x20, #0x4f7
  43f568:	add	x21, x21, #0x5b0
  43f56c:	str	w9, [x26]
  43f570:	b	43f58c <feof@plt+0x3c88c>
  43f574:	and	x9, x24, #0x7f
  43f578:	lsl	x9, x9, x23
  43f57c:	orr	x22, x9, x22
  43f580:	sxtb	w9, w24
  43f584:	add	w23, w23, #0x7
  43f588:	tbz	w9, #31, 43faac <feof@plt+0x3cdac>
  43f58c:	ldp	x10, x11, [x19, #16]
  43f590:	cbz	x11, 43f9d4 <feof@plt+0x3ccd4>
  43f594:	add	x9, x10, #0x1
  43f598:	sub	x11, x11, #0x1
  43f59c:	stp	x9, x11, [x19, #16]
  43f5a0:	ldrb	w24, [x10]
  43f5a4:	cmp	w23, #0x3f
  43f5a8:	b.ls	43f574 <feof@plt+0x3c874>  // b.plast
  43f5ac:	cbnz	w8, 43f580 <feof@plt+0x3c880>
  43f5b0:	ldr	w8, [x19, #8]
  43f5b4:	ldr	x4, [x19]
  43f5b8:	add	x0, sp, #0x10
  43f5bc:	mov	w1, #0xc8                  	// #200
  43f5c0:	sub	w5, w9, w8
  43f5c4:	mov	x2, x20
  43f5c8:	mov	x3, x21
  43f5cc:	bl	402a20 <snprintf@plt>
  43f5d0:	ldp	x8, x0, [x19, #40]
  43f5d4:	add	x1, sp, #0x10
  43f5d8:	mov	w2, wzr
  43f5dc:	blr	x8
  43f5e0:	mov	w8, #0x1                   	// #1
  43f5e4:	b	43f580 <feof@plt+0x3c880>
  43f5e8:	mov	w8, #0x6                   	// #6
  43f5ec:	cmp	w25, #0x2
  43f5f0:	str	w8, [x26]
  43f5f4:	b.ne	43fb5c <feof@plt+0x3ce5c>  // b.any
  43f5f8:	sub	w8, w24, #0x1
  43f5fc:	cmp	w8, #0x7
  43f600:	b.hi	43fd38 <feof@plt+0x3d038>  // b.pmore
  43f604:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f608:	add	x9, x9, #0x41c
  43f60c:	adr	x10, 43f61c <feof@plt+0x3c91c>
  43f610:	ldrh	w11, [x9, x8, lsl #1]
  43f614:	add	x10, x10, x11, lsl #2
  43f618:	br	x10
  43f61c:	ldp	x8, x9, [x19, #16]
  43f620:	cbz	x9, 43fce8 <feof@plt+0x3cfe8>
  43f624:	add	x10, x8, #0x1
  43f628:	sub	x9, x9, #0x1
  43f62c:	stp	x10, x9, [x19, #16]
  43f630:	ldrb	w0, [x8]
  43f634:	b	43fb68 <feof@plt+0x3ce68>
  43f638:	mov	w8, #0x5                   	// #5
  43f63c:	str	w8, [x26]
  43f640:	ldp	x8, x9, [x19, #16]
  43f644:	cbz	x9, 43f6a4 <feof@plt+0x3c9a4>
  43f648:	add	x10, x8, #0x1
  43f64c:	sub	x9, x9, #0x1
  43f650:	stp	x10, x9, [x19, #16]
  43f654:	ldrb	w8, [x8]
  43f658:	b	43fc5c <feof@plt+0x3cf5c>
  43f65c:	mov	w8, #0x5                   	// #5
  43f660:	str	w8, [x26]
  43f664:	ldp	x8, x9, [x19, #16]
  43f668:	cmp	x9, #0x1
  43f66c:	b.ls	43f6a4 <feof@plt+0x3c9a4>  // b.plast
  43f670:	ldr	w10, [x19, #32]
  43f674:	add	x11, x8, #0x2
  43f678:	sub	x9, x9, #0x2
  43f67c:	stp	x11, x9, [x19, #16]
  43f680:	cbz	w10, 43fc50 <feof@plt+0x3cf50>
  43f684:	ldrh	w8, [x8]
  43f688:	lsl	x8, x8, #48
  43f68c:	b	43f930 <feof@plt+0x3cc30>
  43f690:	mov	w8, #0x5                   	// #5
  43f694:	str	w8, [x26]
  43f698:	ldp	x8, x9, [x19, #16]
  43f69c:	cmp	x9, #0x3
  43f6a0:	b.hi	43f914 <feof@plt+0x3cc14>  // b.pmore
  43f6a4:	ldr	w9, [x19, #56]
  43f6a8:	cbz	w9, 43f6b4 <feof@plt+0x3c9b4>
  43f6ac:	mov	x8, xzr
  43f6b0:	b	43fc5c <feof@plt+0x3cf5c>
  43f6b4:	ldr	w9, [x19, #8]
  43f6b8:	ldr	x4, [x19]
  43f6bc:	sub	w5, w8, w9
  43f6c0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f6c4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f6c8:	add	x2, x2, #0x4f7
  43f6cc:	add	x3, x3, #0x4e7
  43f6d0:	add	x0, sp, #0x10
  43f6d4:	mov	w1, #0xc8                  	// #200
  43f6d8:	bl	402a20 <snprintf@plt>
  43f6dc:	ldp	x8, x0, [x19, #40]
  43f6e0:	add	x1, sp, #0x10
  43f6e4:	mov	w2, wzr
  43f6e8:	blr	x8
  43f6ec:	mov	w9, #0x1                   	// #1
  43f6f0:	mov	x8, xzr
  43f6f4:	str	w9, [x19, #56]
  43f6f8:	b	43fc5c <feof@plt+0x3cf5c>
  43f6fc:	mov	w8, #0x5                   	// #5
  43f700:	str	w8, [x26]
  43f704:	b	43fb60 <feof@plt+0x3ce60>
  43f708:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f70c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f710:	mov	x22, xzr
  43f714:	mov	w23, wzr
  43f718:	mov	w8, wzr
  43f71c:	mov	w9, #0x5                   	// #5
  43f720:	add	x20, x20, #0x4f7
  43f724:	add	x21, x21, #0x5b0
  43f728:	str	w9, [x26]
  43f72c:	b	43f748 <feof@plt+0x3ca48>
  43f730:	and	x9, x24, #0x7f
  43f734:	lsl	x9, x9, x23
  43f738:	orr	x22, x9, x22
  43f73c:	sxtb	w9, w24
  43f740:	add	w23, w23, #0x7
  43f744:	tbz	w9, #31, 43faac <feof@plt+0x3cdac>
  43f748:	ldp	x10, x11, [x19, #16]
  43f74c:	cbz	x11, 43f9d4 <feof@plt+0x3ccd4>
  43f750:	add	x9, x10, #0x1
  43f754:	sub	x11, x11, #0x1
  43f758:	stp	x9, x11, [x19, #16]
  43f75c:	ldrb	w24, [x10]
  43f760:	cmp	w23, #0x3f
  43f764:	b.ls	43f730 <feof@plt+0x3ca30>  // b.plast
  43f768:	cbnz	w8, 43f73c <feof@plt+0x3ca3c>
  43f76c:	ldr	w8, [x19, #8]
  43f770:	ldr	x4, [x19]
  43f774:	add	x0, sp, #0x10
  43f778:	mov	w1, #0xc8                  	// #200
  43f77c:	sub	w5, w9, w8
  43f780:	mov	x2, x20
  43f784:	mov	x3, x21
  43f788:	bl	402a20 <snprintf@plt>
  43f78c:	ldp	x8, x0, [x19, #40]
  43f790:	add	x1, sp, #0x10
  43f794:	mov	w2, wzr
  43f798:	blr	x8
  43f79c:	mov	w8, #0x1                   	// #1
  43f7a0:	b	43f73c <feof@plt+0x3ca3c>
  43f7a4:	str	x26, [sp, #8]
  43f7a8:	mov	x26, xzr
  43f7ac:	mov	w28, wzr
  43f7b0:	mov	w8, wzr
  43f7b4:	b	43f7d0 <feof@plt+0x3cad0>
  43f7b8:	and	x9, x27, #0x7f
  43f7bc:	lsl	x9, x9, x28
  43f7c0:	orr	x26, x9, x26
  43f7c4:	sxtb	w9, w27
  43f7c8:	add	w28, w28, #0x7
  43f7cc:	tbz	w9, #31, 43fdc0 <feof@plt+0x3d0c0>
  43f7d0:	ldp	x10, x11, [x19, #16]
  43f7d4:	cbz	x11, 43fad4 <feof@plt+0x3cdd4>
  43f7d8:	add	x9, x10, #0x1
  43f7dc:	sub	x11, x11, #0x1
  43f7e0:	stp	x9, x11, [x19, #16]
  43f7e4:	ldrb	w27, [x10]
  43f7e8:	cmp	w28, #0x3f
  43f7ec:	b.ls	43f7b8 <feof@plt+0x3cab8>  // b.plast
  43f7f0:	cbnz	w8, 43f7c4 <feof@plt+0x3cac4>
  43f7f4:	ldr	w8, [x19, #8]
  43f7f8:	ldr	x4, [x19]
  43f7fc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f800:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f804:	sub	w5, w9, w8
  43f808:	add	x0, sp, #0x10
  43f80c:	mov	w1, #0xc8                  	// #200
  43f810:	add	x2, x2, #0x4f7
  43f814:	add	x3, x3, #0x5b0
  43f818:	bl	402a20 <snprintf@plt>
  43f81c:	ldp	x8, x0, [x19, #40]
  43f820:	add	x1, sp, #0x10
  43f824:	mov	w2, wzr
  43f828:	blr	x8
  43f82c:	mov	w8, #0x1                   	// #1
  43f830:	b	43f7c4 <feof@plt+0x3cac4>
  43f834:	mov	w8, #0x8                   	// #8
  43f838:	str	w8, [x26]
  43f83c:	cbnz	w23, 43fb60 <feof@plt+0x3ce60>
  43f840:	b	43fb70 <feof@plt+0x3ce70>
  43f844:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f848:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f84c:	mov	x22, xzr
  43f850:	mov	w23, wzr
  43f854:	mov	w8, wzr
  43f858:	mov	w9, #0xb                   	// #11
  43f85c:	add	x20, x20, #0x4f7
  43f860:	add	x21, x21, #0x5b0
  43f864:	str	w9, [x26]
  43f868:	b	43f884 <feof@plt+0x3cb84>
  43f86c:	and	x9, x24, #0x7f
  43f870:	lsl	x9, x9, x23
  43f874:	orr	x22, x9, x22
  43f878:	sxtb	w9, w24
  43f87c:	add	w23, w23, #0x7
  43f880:	tbz	w9, #31, 43fa34 <feof@plt+0x3cd34>
  43f884:	ldp	x10, x11, [x19, #16]
  43f888:	cbz	x11, 43f8e0 <feof@plt+0x3cbe0>
  43f88c:	add	x9, x10, #0x1
  43f890:	sub	x11, x11, #0x1
  43f894:	stp	x9, x11, [x19, #16]
  43f898:	ldrb	w24, [x10]
  43f89c:	cmp	w23, #0x3f
  43f8a0:	b.ls	43f86c <feof@plt+0x3cb6c>  // b.plast
  43f8a4:	cbnz	w8, 43f878 <feof@plt+0x3cb78>
  43f8a8:	ldr	w8, [x19, #8]
  43f8ac:	ldr	x4, [x19]
  43f8b0:	add	x0, sp, #0x10
  43f8b4:	mov	w1, #0xc8                  	// #200
  43f8b8:	sub	w5, w9, w8
  43f8bc:	mov	x2, x20
  43f8c0:	mov	x3, x21
  43f8c4:	bl	402a20 <snprintf@plt>
  43f8c8:	ldp	x8, x0, [x19, #40]
  43f8cc:	add	x1, sp, #0x10
  43f8d0:	mov	w2, wzr
  43f8d4:	blr	x8
  43f8d8:	mov	w8, #0x1                   	// #1
  43f8dc:	b	43f878 <feof@plt+0x3cb78>
  43f8e0:	ldr	w8, [x19, #56]
  43f8e4:	cbz	w8, 43fbc4 <feof@plt+0x3cec4>
  43f8e8:	mov	x8, xzr
  43f8ec:	mov	x22, xzr
  43f8f0:	b	43fc0c <feof@plt+0x3cf0c>
  43f8f4:	mov	w8, #0x2                   	// #2
  43f8f8:	mov	w0, #0x1                   	// #1
  43f8fc:	str	w8, [x26]
  43f900:	str	x0, [x26, #8]
  43f904:	b	43ffbc <feof@plt+0x3d2bc>
  43f908:	mov	w8, #0x9                   	// #9
  43f90c:	str	w8, [x26]
  43f910:	b	43fb60 <feof@plt+0x3ce60>
  43f914:	ldr	w10, [x19, #32]
  43f918:	add	x11, x8, #0x4
  43f91c:	sub	x9, x9, #0x4
  43f920:	stp	x11, x9, [x19, #16]
  43f924:	cbz	w10, 43fc58 <feof@plt+0x3cf58>
  43f928:	ldr	w8, [x8]
  43f92c:	lsl	x8, x8, #32
  43f930:	rev	x8, x8
  43f934:	b	43fc5c <feof@plt+0x3cf5c>
  43f938:	adrp	x20, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f93c:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43f940:	mov	x22, xzr
  43f944:	mov	w23, wzr
  43f948:	mov	w8, wzr
  43f94c:	mov	w9, #0x8                   	// #8
  43f950:	add	x20, x20, #0x4f7
  43f954:	add	x21, x21, #0x5b0
  43f958:	str	w9, [x26]
  43f95c:	b	43f978 <feof@plt+0x3cc78>
  43f960:	and	x9, x24, #0x7f
  43f964:	lsl	x9, x9, x23
  43f968:	orr	x22, x9, x22
  43f96c:	sxtb	w9, w24
  43f970:	add	w23, w23, #0x7
  43f974:	tbz	w9, #31, 43faac <feof@plt+0x3cdac>
  43f978:	ldp	x10, x11, [x19, #16]
  43f97c:	cbz	x11, 43f9d4 <feof@plt+0x3ccd4>
  43f980:	add	x9, x10, #0x1
  43f984:	sub	x11, x11, #0x1
  43f988:	stp	x9, x11, [x19, #16]
  43f98c:	ldrb	w24, [x10]
  43f990:	cmp	w23, #0x3f
  43f994:	b.ls	43f960 <feof@plt+0x3cc60>  // b.plast
  43f998:	cbnz	w8, 43f96c <feof@plt+0x3cc6c>
  43f99c:	ldr	w8, [x19, #8]
  43f9a0:	ldr	x4, [x19]
  43f9a4:	add	x0, sp, #0x10
  43f9a8:	mov	w1, #0xc8                  	// #200
  43f9ac:	sub	w5, w9, w8
  43f9b0:	mov	x2, x20
  43f9b4:	mov	x3, x21
  43f9b8:	bl	402a20 <snprintf@plt>
  43f9bc:	ldp	x8, x0, [x19, #40]
  43f9c0:	add	x1, sp, #0x10
  43f9c4:	mov	w2, wzr
  43f9c8:	blr	x8
  43f9cc:	mov	w8, #0x1                   	// #1
  43f9d0:	b	43f96c <feof@plt+0x3cc6c>
  43f9d4:	ldr	w8, [x19, #56]
  43f9d8:	cbz	w8, 43fa68 <feof@plt+0x3cd68>
  43f9dc:	mov	x22, xzr
  43f9e0:	b	43faac <feof@plt+0x3cdac>
  43f9e4:	cbz	w23, 43fc64 <feof@plt+0x3cf64>
  43f9e8:	mov	x0, x19
  43f9ec:	bl	43f0c0 <feof@plt+0x3c3c0>
  43f9f0:	str	x0, [x26, #8]
  43f9f4:	cbz	x20, 43fab4 <feof@plt+0x3cdb4>
  43f9f8:	mov	w8, #0x7                   	// #7
  43f9fc:	str	w8, [x26]
  43fa00:	b	43ffb8 <feof@plt+0x3d2b8>
  43fa04:	cbz	w23, 43fc80 <feof@plt+0x3cf80>
  43fa08:	mov	x0, x19
  43fa0c:	bl	43f0c0 <feof@plt+0x3c3c0>
  43fa10:	cbz	x20, 43fab4 <feof@plt+0x3cdb4>
  43fa14:	ldr	x8, [x20, #112]
  43fa18:	cmp	x0, x8
  43fa1c:	b.cs	43fc9c <feof@plt+0x3cf9c>  // b.hs, b.nlast
  43fa20:	mov	w8, #0x4                   	// #4
  43fa24:	str	w8, [x26]
  43fa28:	ldr	x8, [x20, #104]
  43fa2c:	add	x8, x8, x0
  43fa30:	b	43fc5c <feof@plt+0x3cf5c>
  43fa34:	ldr	x8, [x19, #24]
  43fa38:	cmp	x8, x22
  43fa3c:	b.cs	43fc0c <feof@plt+0x3cf0c>  // b.hs, b.nlast
  43fa40:	b	43fe58 <feof@plt+0x3d158>
  43fa44:	ldr	w8, [x19, #16]
  43fa48:	ldr	w9, [x19, #8]
  43fa4c:	ldr	x4, [x19]
  43fa50:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fa54:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fa58:	sub	w5, w8, w9
  43fa5c:	add	x2, x2, #0x4f7
  43fa60:	add	x3, x3, #0x577
  43fa64:	b	43fcbc <feof@plt+0x3cfbc>
  43fa68:	ldr	w8, [x19, #8]
  43fa6c:	ldr	x4, [x19]
  43fa70:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fa74:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fa78:	sub	w5, w10, w8
  43fa7c:	add	x2, x2, #0x4f7
  43fa80:	add	x3, x3, #0x4e7
  43fa84:	add	x0, sp, #0x10
  43fa88:	mov	w1, #0xc8                  	// #200
  43fa8c:	bl	402a20 <snprintf@plt>
  43fa90:	ldp	x8, x0, [x19, #40]
  43fa94:	add	x1, sp, #0x10
  43fa98:	mov	w2, wzr
  43fa9c:	blr	x8
  43faa0:	mov	w8, #0x1                   	// #1
  43faa4:	mov	x22, xzr
  43faa8:	str	w8, [x19, #56]
  43faac:	str	x22, [x26, #8]
  43fab0:	b	43ffb8 <feof@plt+0x3d2b8>
  43fab4:	str	wzr, [x26]
  43fab8:	b	43ffb8 <feof@plt+0x3d2b8>
  43fabc:	ldr	w8, [x19, #56]
  43fac0:	cbnz	w8, 43f6ac <feof@plt+0x3c9ac>
  43fac4:	ldr	w8, [x19, #8]
  43fac8:	ldr	x4, [x19]
  43facc:	sub	w5, w10, w8
  43fad0:	b	43f6c0 <feof@plt+0x3c9c0>
  43fad4:	ldr	w8, [x19, #56]
  43fad8:	cbz	w8, 43fd7c <feof@plt+0x3d07c>
  43fadc:	mov	x26, xzr
  43fae0:	b	43fdc0 <feof@plt+0x3d0c0>
  43fae4:	ldr	w10, [x19, #32]
  43fae8:	add	x11, x9, #0x2
  43faec:	sub	x8, x8, #0x2
  43faf0:	stp	x11, x8, [x19, #16]
  43faf4:	cbz	w10, 43fe44 <feof@plt+0x3d144>
  43faf8:	ldrh	w9, [x9]
  43fafc:	lsl	x9, x9, #48
  43fb00:	rev	x9, x9
  43fb04:	b	43fe50 <feof@plt+0x3d150>
  43fb08:	ldr	w10, [x19, #32]
  43fb0c:	add	x11, x9, #0x4
  43fb10:	sub	x8, x8, #0x4
  43fb14:	stp	x11, x8, [x19, #16]
  43fb18:	cbz	w10, 43fe4c <feof@plt+0x3d14c>
  43fb1c:	ldr	w9, [x9]
  43fb20:	lsl	x9, x9, #32
  43fb24:	rev	x9, x9
  43fb28:	b	43fe50 <feof@plt+0x3d150>
  43fb2c:	add	x9, x20, x9
  43fb30:	stp	x9, x8, [x19, #16]
  43fb34:	b	43fe34 <feof@plt+0x3d134>
  43fb38:	ldr	w8, [x19, #16]
  43fb3c:	ldr	w9, [x19, #8]
  43fb40:	ldr	x4, [x19]
  43fb44:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fb48:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fb4c:	sub	w5, w8, w9
  43fb50:	add	x2, x2, #0x4f7
  43fb54:	add	x3, x3, #0x53b
  43fb58:	b	43fcbc <feof@plt+0x3cfbc>
  43fb5c:	cbz	w23, 43fb70 <feof@plt+0x3ce70>
  43fb60:	mov	x0, x19
  43fb64:	bl	43f0c0 <feof@plt+0x3c3c0>
  43fb68:	str	x0, [x26, #8]
  43fb6c:	b	43ffb8 <feof@plt+0x3d2b8>
  43fb70:	ldp	x8, x9, [x19, #16]
  43fb74:	cmp	x9, #0x3
  43fb78:	b.ls	43fce8 <feof@plt+0x3cfe8>  // b.plast
  43fb7c:	ldr	w10, [x19, #32]
  43fb80:	add	x11, x8, #0x4
  43fb84:	sub	x9, x9, #0x4
  43fb88:	stp	x11, x9, [x19, #16]
  43fb8c:	cbz	w10, 43ff30 <feof@plt+0x3d230>
  43fb90:	ldr	w8, [x8]
  43fb94:	lsl	x8, x8, #32
  43fb98:	rev	x0, x8
  43fb9c:	b	43fb68 <feof@plt+0x3ce68>
  43fba0:	cmp	w23, #0x40
  43fba4:	and	w8, w24, #0x40
  43fba8:	mov	x9, #0xffffffffffffffff    	// #-1
  43fbac:	cset	w10, cc  // cc = lo, ul, last
  43fbb0:	lsl	x9, x9, x23
  43fbb4:	tst	w10, w8, lsr #6
  43fbb8:	csel	x8, x9, xzr, ne  // ne = any
  43fbbc:	orr	x8, x22, x8
  43fbc0:	b	43fc5c <feof@plt+0x3cf5c>
  43fbc4:	ldr	w8, [x19, #8]
  43fbc8:	ldr	x4, [x19]
  43fbcc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fbd0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fbd4:	sub	w5, w10, w8
  43fbd8:	add	x2, x2, #0x4f7
  43fbdc:	add	x3, x3, #0x4e7
  43fbe0:	add	x0, sp, #0x10
  43fbe4:	mov	w1, #0xc8                  	// #200
  43fbe8:	bl	402a20 <snprintf@plt>
  43fbec:	ldp	x8, x0, [x19, #40]
  43fbf0:	add	x1, sp, #0x10
  43fbf4:	mov	w2, wzr
  43fbf8:	blr	x8
  43fbfc:	ldr	x8, [x19, #24]
  43fc00:	mov	x22, xzr
  43fc04:	mov	w9, #0x1                   	// #1
  43fc08:	str	w9, [x19, #56]
  43fc0c:	ldr	x9, [x19, #16]
  43fc10:	sub	x8, x8, x22
  43fc14:	str	x8, [x19, #24]
  43fc18:	add	x8, x9, x22
  43fc1c:	b	43ffb4 <feof@plt+0x3d2b4>
  43fc20:	ldr	w9, [x19, #56]
  43fc24:	cbz	w9, 43ff5c <feof@plt+0x3d25c>
  43fc28:	mov	x8, xzr
  43fc2c:	mov	x9, xzr
  43fc30:	b	43ffa4 <feof@plt+0x3d2a4>
  43fc34:	ldp	x8, x9, [x19, #16]
  43fc38:	cmp	x9, #0x3
  43fc3c:	b.hi	43fec4 <feof@plt+0x3d1c4>  // b.pmore
  43fc40:	ldr	w9, [x19, #56]
  43fc44:	cbz	w9, 43ffdc <feof@plt+0x3d2dc>
  43fc48:	mov	x0, xzr
  43fc4c:	b	43f530 <feof@plt+0x3c830>
  43fc50:	ldrh	w8, [x8]
  43fc54:	b	43fc5c <feof@plt+0x3cf5c>
  43fc58:	ldr	w8, [x8]
  43fc5c:	str	x8, [x26, #8]
  43fc60:	b	43ffb8 <feof@plt+0x3d2b8>
  43fc64:	ldp	x8, x9, [x19, #16]
  43fc68:	cmp	x9, #0x3
  43fc6c:	b.hi	43fee8 <feof@plt+0x3d1e8>  // b.pmore
  43fc70:	ldr	w9, [x19, #56]
  43fc74:	cbz	w9, 440024 <feof@plt+0x3d324>
  43fc78:	mov	x0, xzr
  43fc7c:	b	43f9f0 <feof@plt+0x3ccf0>
  43fc80:	ldp	x8, x9, [x19, #16]
  43fc84:	cmp	x9, #0x3
  43fc88:	b.hi	43ff0c <feof@plt+0x3d20c>  // b.pmore
  43fc8c:	ldr	w9, [x19, #56]
  43fc90:	cbz	w9, 44006c <feof@plt+0x3d36c>
  43fc94:	mov	x0, xzr
  43fc98:	b	43fa10 <feof@plt+0x3cd10>
  43fc9c:	ldr	w8, [x19, #16]
  43fca0:	ldr	w9, [x19, #8]
  43fca4:	ldr	x4, [x19]
  43fca8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fcac:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fcb0:	sub	w5, w8, w9
  43fcb4:	add	x2, x2, #0x4f7
  43fcb8:	add	x3, x3, #0x555
  43fcbc:	add	x0, sp, #0x10
  43fcc0:	mov	w1, #0xc8                  	// #200
  43fcc4:	bl	402a20 <snprintf@plt>
  43fcc8:	ldp	x8, x0, [x19, #40]
  43fccc:	add	x1, sp, #0x10
  43fcd0:	mov	w2, wzr
  43fcd4:	blr	x8
  43fcd8:	b	43fe60 <feof@plt+0x3d160>
  43fcdc:	ldp	x8, x9, [x19, #16]
  43fce0:	cmp	x9, #0x1
  43fce4:	b.hi	43ff38 <feof@plt+0x3d238>  // b.pmore
  43fce8:	ldr	w9, [x19, #56]
  43fcec:	cbnz	w9, 43fd74 <feof@plt+0x3d074>
  43fcf0:	ldr	w9, [x19, #8]
  43fcf4:	ldr	x4, [x19]
  43fcf8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fcfc:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fd00:	sub	w5, w8, w9
  43fd04:	add	x2, x2, #0x4f7
  43fd08:	add	x3, x3, #0x4e7
  43fd0c:	add	x0, sp, #0x10
  43fd10:	mov	w1, #0xc8                  	// #200
  43fd14:	bl	402a20 <snprintf@plt>
  43fd18:	ldp	x8, x0, [x19, #40]
  43fd1c:	add	x1, sp, #0x10
  43fd20:	mov	w2, wzr
  43fd24:	blr	x8
  43fd28:	mov	w8, #0x1                   	// #1
  43fd2c:	mov	x0, xzr
  43fd30:	str	w8, [x19, #56]
  43fd34:	b	43fb68 <feof@plt+0x3ce68>
  43fd38:	ldr	w8, [x19, #16]
  43fd3c:	ldr	w9, [x19, #8]
  43fd40:	ldr	x4, [x19]
  43fd44:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fd48:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fd4c:	sub	w5, w8, w9
  43fd50:	add	x2, x2, #0x4f7
  43fd54:	add	x3, x3, #0x58f
  43fd58:	add	x0, sp, #0x10
  43fd5c:	mov	w1, #0xc8                  	// #200
  43fd60:	bl	402a20 <snprintf@plt>
  43fd64:	ldp	x8, x0, [x19, #40]
  43fd68:	add	x1, sp, #0x10
  43fd6c:	mov	w2, wzr
  43fd70:	blr	x8
  43fd74:	mov	x0, xzr
  43fd78:	b	43fb68 <feof@plt+0x3ce68>
  43fd7c:	ldr	w8, [x19, #8]
  43fd80:	ldr	x4, [x19]
  43fd84:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fd88:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fd8c:	sub	w5, w10, w8
  43fd90:	add	x2, x2, #0x4f7
  43fd94:	add	x3, x3, #0x4e7
  43fd98:	add	x0, sp, #0x10
  43fd9c:	mov	w1, #0xc8                  	// #200
  43fda0:	bl	402a20 <snprintf@plt>
  43fda4:	ldp	x8, x0, [x19, #40]
  43fda8:	add	x1, sp, #0x10
  43fdac:	mov	w2, wzr
  43fdb0:	blr	x8
  43fdb4:	mov	w8, #0x1                   	// #1
  43fdb8:	mov	x26, xzr
  43fdbc:	str	w8, [x19, #56]
  43fdc0:	ldr	x8, [sp, #8]
  43fdc4:	mov	w0, w26
  43fdc8:	mov	x1, x19
  43fdcc:	mov	w2, w23
  43fdd0:	mov	w3, w25
  43fdd4:	mov	w4, w24
  43fdd8:	mov	x5, x21
  43fddc:	mov	x6, x22
  43fde0:	mov	x7, x20
  43fde4:	str	x8, [sp]
  43fde8:	bl	43f184 <feof@plt+0x3c484>
  43fdec:	b	43ffbc <feof@plt+0x3d2bc>
  43fdf0:	ldr	w8, [x19, #8]
  43fdf4:	ldr	x4, [x19]
  43fdf8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fdfc:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fe00:	sub	w5, w20, w8
  43fe04:	add	x2, x2, #0x4f7
  43fe08:	add	x3, x3, #0x4e7
  43fe0c:	add	x0, sp, #0x10
  43fe10:	mov	w1, #0xc8                  	// #200
  43fe14:	bl	402a20 <snprintf@plt>
  43fe18:	ldp	x8, x0, [x19, #40]
  43fe1c:	add	x1, sp, #0x10
  43fe20:	mov	w2, wzr
  43fe24:	blr	x8
  43fe28:	mov	w8, #0x1                   	// #1
  43fe2c:	mov	x20, xzr
  43fe30:	str	w8, [x19, #56]
  43fe34:	cmp	x20, #0x0
  43fe38:	str	x20, [x26, #8]
  43fe3c:	cset	w0, ne  // ne = any
  43fe40:	b	43ffbc <feof@plt+0x3d2bc>
  43fe44:	ldrh	w9, [x9]
  43fe48:	b	43fe50 <feof@plt+0x3d150>
  43fe4c:	ldr	w9, [x9]
  43fe50:	subs	x8, x8, x9
  43fe54:	b.cs	43fe68 <feof@plt+0x3d168>  // b.hs, b.nlast
  43fe58:	ldr	w8, [x19, #56]
  43fe5c:	cbz	w8, 43fe78 <feof@plt+0x3d178>
  43fe60:	mov	w0, wzr
  43fe64:	b	43ffbc <feof@plt+0x3d2bc>
  43fe68:	ldr	x10, [x19, #16]
  43fe6c:	str	x8, [x19, #24]
  43fe70:	add	x8, x10, x9
  43fe74:	b	43ffb4 <feof@plt+0x3d2b4>
  43fe78:	ldr	w8, [x19, #16]
  43fe7c:	ldr	w9, [x19, #8]
  43fe80:	ldr	x4, [x19]
  43fe84:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fe88:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43fe8c:	sub	w5, w8, w9
  43fe90:	add	x2, x2, #0x4f7
  43fe94:	add	x3, x3, #0x4e7
  43fe98:	add	x0, sp, #0x10
  43fe9c:	mov	w1, #0xc8                  	// #200
  43fea0:	bl	402a20 <snprintf@plt>
  43fea4:	ldp	x8, x0, [x19, #40]
  43fea8:	add	x1, sp, #0x10
  43feac:	mov	w2, wzr
  43feb0:	blr	x8
  43feb4:	mov	w8, #0x1                   	// #1
  43feb8:	mov	w0, wzr
  43febc:	str	w8, [x19, #56]
  43fec0:	b	43ffbc <feof@plt+0x3d2bc>
  43fec4:	ldr	w10, [x19, #32]
  43fec8:	add	x11, x8, #0x4
  43fecc:	sub	x9, x9, #0x4
  43fed0:	stp	x11, x9, [x19, #16]
  43fed4:	cbz	w10, 4400b4 <feof@plt+0x3d3b4>
  43fed8:	ldr	w8, [x8]
  43fedc:	lsl	x8, x8, #32
  43fee0:	rev	x0, x8
  43fee4:	b	43f530 <feof@plt+0x3c830>
  43fee8:	ldr	w10, [x19, #32]
  43feec:	add	x11, x8, #0x4
  43fef0:	sub	x9, x9, #0x4
  43fef4:	stp	x11, x9, [x19, #16]
  43fef8:	cbz	w10, 4400bc <feof@plt+0x3d3bc>
  43fefc:	ldr	w8, [x8]
  43ff00:	lsl	x8, x8, #32
  43ff04:	rev	x0, x8
  43ff08:	b	43f9f0 <feof@plt+0x3ccf0>
  43ff0c:	ldr	w10, [x19, #32]
  43ff10:	add	x11, x8, #0x4
  43ff14:	sub	x9, x9, #0x4
  43ff18:	stp	x11, x9, [x19, #16]
  43ff1c:	cbz	w10, 4400c4 <feof@plt+0x3d3c4>
  43ff20:	ldr	w8, [x8]
  43ff24:	lsl	x8, x8, #32
  43ff28:	rev	x0, x8
  43ff2c:	b	43fa10 <feof@plt+0x3cd10>
  43ff30:	ldr	w0, [x8]
  43ff34:	b	43fb68 <feof@plt+0x3ce68>
  43ff38:	ldr	w10, [x19, #32]
  43ff3c:	add	x11, x8, #0x2
  43ff40:	sub	x9, x9, #0x2
  43ff44:	stp	x11, x9, [x19, #16]
  43ff48:	cbz	w10, 4400cc <feof@plt+0x3d3cc>
  43ff4c:	ldrh	w8, [x8]
  43ff50:	lsl	x8, x8, #48
  43ff54:	rev	x0, x8
  43ff58:	b	43fb68 <feof@plt+0x3ce68>
  43ff5c:	ldr	w9, [x19, #8]
  43ff60:	ldr	x4, [x19]
  43ff64:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ff68:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ff6c:	sub	w5, w8, w9
  43ff70:	add	x2, x2, #0x4f7
  43ff74:	add	x3, x3, #0x4e7
  43ff78:	add	x0, sp, #0x10
  43ff7c:	mov	w1, #0xc8                  	// #200
  43ff80:	bl	402a20 <snprintf@plt>
  43ff84:	ldp	x8, x0, [x19, #40]
  43ff88:	add	x1, sp, #0x10
  43ff8c:	mov	w2, wzr
  43ff90:	blr	x8
  43ff94:	ldr	x9, [x19, #24]
  43ff98:	mov	x8, xzr
  43ff9c:	mov	w10, #0x1                   	// #1
  43ffa0:	str	w10, [x19, #56]
  43ffa4:	ldr	x10, [x19, #16]
  43ffa8:	sub	x9, x9, x8
  43ffac:	str	x9, [x19, #24]
  43ffb0:	add	x8, x10, x8
  43ffb4:	str	x8, [x19, #16]
  43ffb8:	mov	w0, #0x1                   	// #1
  43ffbc:	ldp	x20, x19, [sp, #304]
  43ffc0:	ldp	x22, x21, [sp, #288]
  43ffc4:	ldp	x24, x23, [sp, #272]
  43ffc8:	ldp	x26, x25, [sp, #256]
  43ffcc:	ldp	x28, x27, [sp, #240]
  43ffd0:	ldp	x29, x30, [sp, #224]
  43ffd4:	add	sp, sp, #0x140
  43ffd8:	ret
  43ffdc:	ldr	w9, [x19, #8]
  43ffe0:	ldr	x4, [x19]
  43ffe4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ffe8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  43ffec:	sub	w5, w8, w9
  43fff0:	add	x2, x2, #0x4f7
  43fff4:	add	x3, x3, #0x4e7
  43fff8:	add	x0, sp, #0x10
  43fffc:	mov	w1, #0xc8                  	// #200
  440000:	bl	402a20 <snprintf@plt>
  440004:	ldp	x8, x0, [x19, #40]
  440008:	add	x1, sp, #0x10
  44000c:	mov	w2, wzr
  440010:	blr	x8
  440014:	mov	w8, #0x1                   	// #1
  440018:	mov	x0, xzr
  44001c:	str	w8, [x19, #56]
  440020:	b	43f530 <feof@plt+0x3c830>
  440024:	ldr	w9, [x19, #8]
  440028:	ldr	x4, [x19]
  44002c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440030:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440034:	sub	w5, w8, w9
  440038:	add	x2, x2, #0x4f7
  44003c:	add	x3, x3, #0x4e7
  440040:	add	x0, sp, #0x10
  440044:	mov	w1, #0xc8                  	// #200
  440048:	bl	402a20 <snprintf@plt>
  44004c:	ldp	x8, x0, [x19, #40]
  440050:	add	x1, sp, #0x10
  440054:	mov	w2, wzr
  440058:	blr	x8
  44005c:	mov	w8, #0x1                   	// #1
  440060:	mov	x0, xzr
  440064:	str	w8, [x19, #56]
  440068:	b	43f9f0 <feof@plt+0x3ccf0>
  44006c:	ldr	w9, [x19, #8]
  440070:	ldr	x4, [x19]
  440074:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440078:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44007c:	sub	w5, w8, w9
  440080:	add	x2, x2, #0x4f7
  440084:	add	x3, x3, #0x4e7
  440088:	add	x0, sp, #0x10
  44008c:	mov	w1, #0xc8                  	// #200
  440090:	bl	402a20 <snprintf@plt>
  440094:	ldp	x8, x0, [x19, #40]
  440098:	add	x1, sp, #0x10
  44009c:	mov	w2, wzr
  4400a0:	blr	x8
  4400a4:	mov	w8, #0x1                   	// #1
  4400a8:	mov	x0, xzr
  4400ac:	str	w8, [x19, #56]
  4400b0:	b	43fa10 <feof@plt+0x3cd10>
  4400b4:	ldr	w0, [x8]
  4400b8:	b	43f530 <feof@plt+0x3c830>
  4400bc:	ldr	w0, [x8]
  4400c0:	b	43f9f0 <feof@plt+0x3ccf0>
  4400c4:	ldr	w0, [x8]
  4400c8:	b	43fa10 <feof@plt+0x3cd10>
  4400cc:	ldrh	w0, [x8]
  4400d0:	b	43fb68 <feof@plt+0x3ce68>
  4400d4:	sub	sp, sp, #0x170
  4400d8:	stp	x29, x30, [sp, #272]
  4400dc:	stp	x28, x27, [sp, #288]
  4400e0:	stp	x26, x25, [sp, #304]
  4400e4:	stp	x24, x23, [sp, #320]
  4400e8:	stp	x22, x21, [sp, #336]
  4400ec:	stp	x20, x19, [sp, #352]
  4400f0:	add	x29, sp, #0x110
  4400f4:	ldp	x19, x20, [x29, #96]
  4400f8:	subs	x8, x7, x3
  4400fc:	b.ls	44052c <feof@plt+0x3d82c>  // b.plast
  440100:	ldr	x25, [x29, #112]
  440104:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440108:	adrp	x27, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44010c:	mov	x23, x4
  440110:	mov	x21, x2
  440114:	mov	x22, x1
  440118:	mov	x24, x0
  44011c:	add	x9, x9, #0x29a
  440120:	add	x10, x6, x3
  440124:	add	x27, x27, #0x43c
  440128:	str	w5, [sp, #32]
  44012c:	stp	x19, x20, [sp, #40]
  440130:	str	wzr, [sp, #56]
  440134:	stp	x9, x6, [sp]
  440138:	stp	x10, x8, [sp, #16]
  44013c:	b	44014c <feof@plt+0x3d44c>
  440140:	mov	x23, x0
  440144:	ldr	w8, [sp, #56]
  440148:	cbnz	w8, 440540 <feof@plt+0x3d840>
  44014c:	ldr	w8, [x21, #48]
  440150:	sub	w8, w8, #0x1
  440154:	cmp	w8, #0x7
  440158:	b.hi	4401b8 <feof@plt+0x3d4b8>  // b.pmore
  44015c:	adr	x9, 44016c <feof@plt+0x3d46c>
  440160:	ldrb	w10, [x27, x8]
  440164:	add	x9, x9, x10, lsl #2
  440168:	br	x9
  44016c:	ldp	x8, x9, [sp, #16]
  440170:	cbz	x9, 440208 <feof@plt+0x3d508>
  440174:	add	x10, x8, #0x1
  440178:	sub	x9, x9, #0x1
  44017c:	stp	x10, x9, [sp, #16]
  440180:	ldrb	w28, [x8]
  440184:	b	440290 <feof@plt+0x3d590>
  440188:	ldp	x8, x9, [sp, #16]
  44018c:	cmp	x9, #0x1
  440190:	b.ls	440208 <feof@plt+0x3d508>  // b.plast
  440194:	ldr	w10, [sp, #32]
  440198:	add	x11, x8, #0x2
  44019c:	sub	x9, x9, #0x2
  4401a0:	stp	x11, x9, [sp, #16]
  4401a4:	cbz	w10, 440284 <feof@plt+0x3d584>
  4401a8:	ldrh	w8, [x8]
  4401ac:	lsl	x8, x8, #48
  4401b0:	rev	x28, x8
  4401b4:	b	440290 <feof@plt+0x3d590>
  4401b8:	ldr	w8, [sp, #16]
  4401bc:	ldr	w9, [sp, #8]
  4401c0:	ldr	x4, [sp]
  4401c4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4401c8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4401cc:	sub	w5, w8, w9
  4401d0:	add	x0, sp, #0x40
  4401d4:	mov	w1, #0xc8                  	// #200
  4401d8:	add	x2, x2, #0x4f7
  4401dc:	add	x3, x3, #0x58f
  4401e0:	bl	402a20 <snprintf@plt>
  4401e4:	ldp	x8, x0, [sp, #40]
  4401e8:	add	x1, sp, #0x40
  4401ec:	mov	w2, wzr
  4401f0:	blr	x8
  4401f4:	mov	x28, xzr
  4401f8:	b	440290 <feof@plt+0x3d590>
  4401fc:	ldp	x8, x9, [sp, #16]
  440200:	cmp	x9, #0x3
  440204:	b.hi	440260 <feof@plt+0x3d560>  // b.pmore
  440208:	ldr	w9, [sp, #8]
  44020c:	ldr	x4, [sp]
  440210:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440214:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440218:	sub	w5, w8, w9
  44021c:	add	x0, sp, #0x40
  440220:	mov	w1, #0xc8                  	// #200
  440224:	add	x2, x2, #0x4f7
  440228:	add	x3, x3, #0x4e7
  44022c:	bl	402a20 <snprintf@plt>
  440230:	ldp	x8, x0, [sp, #40]
  440234:	add	x1, sp, #0x40
  440238:	mov	w2, wzr
  44023c:	blr	x8
  440240:	mov	w8, #0x1                   	// #1
  440244:	mov	x28, xzr
  440248:	str	w8, [sp, #56]
  44024c:	b	440290 <feof@plt+0x3d590>
  440250:	mov	x0, sp
  440254:	bl	43f0c0 <feof@plt+0x3c3c0>
  440258:	mov	x28, x0
  44025c:	b	440290 <feof@plt+0x3d590>
  440260:	ldr	w10, [sp, #32]
  440264:	add	x11, x8, #0x4
  440268:	sub	x9, x9, #0x4
  44026c:	stp	x11, x9, [sp, #16]
  440270:	cbz	w10, 44028c <feof@plt+0x3d58c>
  440274:	ldr	w8, [x8]
  440278:	lsl	x8, x8, #32
  44027c:	rev	x28, x8
  440280:	b	440290 <feof@plt+0x3d590>
  440284:	ldrh	w28, [x8]
  440288:	b	440290 <feof@plt+0x3d590>
  44028c:	ldr	w28, [x8]
  440290:	ldr	w8, [x21, #48]
  440294:	sub	w8, w8, #0x1
  440298:	cmp	w8, #0x7
  44029c:	b.hi	440304 <feof@plt+0x3d604>  // b.pmore
  4402a0:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4402a4:	add	x11, x11, #0x444
  4402a8:	adr	x9, 4402b8 <feof@plt+0x3d5b8>
  4402ac:	ldrb	w10, [x11, x8]
  4402b0:	add	x9, x9, x10, lsl #2
  4402b4:	br	x9
  4402b8:	ldp	x8, x9, [sp, #16]
  4402bc:	cbz	x9, 440390 <feof@plt+0x3d690>
  4402c0:	add	x10, x8, #0x1
  4402c4:	sub	x9, x9, #0x1
  4402c8:	stp	x10, x9, [sp, #16]
  4402cc:	ldrb	w0, [x8]
  4402d0:	b	440434 <feof@plt+0x3d734>
  4402d4:	ldp	x8, x9, [sp, #16]
  4402d8:	cmp	x9, #0x1
  4402dc:	b.ls	440350 <feof@plt+0x3d650>  // b.plast
  4402e0:	ldr	w10, [sp, #32]
  4402e4:	add	x11, x8, #0x2
  4402e8:	sub	x9, x9, #0x2
  4402ec:	stp	x11, x9, [sp, #16]
  4402f0:	cbz	w10, 4403e0 <feof@plt+0x3d6e0>
  4402f4:	ldrh	w8, [x8]
  4402f8:	lsl	x8, x8, #48
  4402fc:	rev	x0, x8
  440300:	b	440434 <feof@plt+0x3d734>
  440304:	ldr	w8, [sp, #16]
  440308:	ldr	w9, [sp, #8]
  44030c:	ldr	x4, [sp]
  440310:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440314:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440318:	sub	w5, w8, w9
  44031c:	add	x0, sp, #0x40
  440320:	mov	w1, #0xc8                  	// #200
  440324:	add	x2, x2, #0x4f7
  440328:	add	x3, x3, #0x58f
  44032c:	bl	402a20 <snprintf@plt>
  440330:	ldp	x8, x0, [sp, #40]
  440334:	add	x1, sp, #0x40
  440338:	mov	w2, wzr
  44033c:	blr	x8
  440340:	b	440358 <feof@plt+0x3d658>
  440344:	ldp	x8, x9, [sp, #16]
  440348:	cmp	x9, #0x3
  44034c:	b.hi	44036c <feof@plt+0x3d66c>  // b.pmore
  440350:	ldr	w9, [sp, #56]
  440354:	cbz	w9, 4403a0 <feof@plt+0x3d6a0>
  440358:	mov	x0, xzr
  44035c:	b	440434 <feof@plt+0x3d734>
  440360:	mov	x0, sp
  440364:	bl	43f0c0 <feof@plt+0x3c3c0>
  440368:	b	440434 <feof@plt+0x3d734>
  44036c:	ldr	w10, [sp, #32]
  440370:	add	x11, x8, #0x4
  440374:	sub	x9, x9, #0x4
  440378:	stp	x11, x9, [sp, #16]
  44037c:	cbz	w10, 4403e8 <feof@plt+0x3d6e8>
  440380:	ldr	w8, [x8]
  440384:	lsl	x8, x8, #32
  440388:	rev	x0, x8
  44038c:	b	440434 <feof@plt+0x3d734>
  440390:	ldr	w9, [sp, #56]
  440394:	cbz	w9, 4403f0 <feof@plt+0x3d6f0>
  440398:	mov	w0, wzr
  44039c:	b	440434 <feof@plt+0x3d734>
  4403a0:	ldr	w9, [sp, #8]
  4403a4:	ldr	x4, [sp]
  4403a8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4403ac:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4403b0:	sub	w5, w8, w9
  4403b4:	add	x0, sp, #0x40
  4403b8:	mov	w1, #0xc8                  	// #200
  4403bc:	add	x2, x2, #0x4f7
  4403c0:	add	x3, x3, #0x4e7
  4403c4:	bl	402a20 <snprintf@plt>
  4403c8:	ldp	x8, x0, [sp, #40]
  4403cc:	add	x1, sp, #0x40
  4403d0:	mov	w2, wzr
  4403d4:	blr	x8
  4403d8:	mov	x0, xzr
  4403dc:	b	44042c <feof@plt+0x3d72c>
  4403e0:	ldrh	w0, [x8]
  4403e4:	b	440434 <feof@plt+0x3d734>
  4403e8:	ldr	w0, [x8]
  4403ec:	b	440434 <feof@plt+0x3d734>
  4403f0:	ldr	w9, [sp, #8]
  4403f4:	ldr	x4, [sp]
  4403f8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4403fc:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440400:	sub	w5, w8, w9
  440404:	add	x0, sp, #0x40
  440408:	mov	w1, #0xc8                  	// #200
  44040c:	add	x2, x2, #0x4f7
  440410:	add	x3, x3, #0x4e7
  440414:	bl	402a20 <snprintf@plt>
  440418:	ldp	x8, x0, [sp, #40]
  44041c:	add	x1, sp, #0x40
  440420:	mov	w2, wzr
  440424:	blr	x8
  440428:	mov	w0, wzr
  44042c:	mov	w8, #0x1                   	// #1
  440430:	str	w8, [sp, #56]
  440434:	orr	x8, x0, x28
  440438:	cbz	x8, 440548 <feof@plt+0x3d848>
  44043c:	ldr	w8, [x21, #48]
  440440:	sub	w8, w8, #0x1
  440444:	cmp	w8, #0x7
  440448:	b.hi	440498 <feof@plt+0x3d798>  // b.pmore
  44044c:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440450:	add	x11, x11, #0x44c
  440454:	adr	x9, 440464 <feof@plt+0x3d764>
  440458:	ldrb	w10, [x11, x8]
  44045c:	add	x9, x9, x10, lsl #2
  440460:	br	x9
  440464:	cmp	x28, #0xff
  440468:	b.eq	440140 <feof@plt+0x3d440>  // b.none
  44046c:	b	440498 <feof@plt+0x3d798>
  440470:	mov	w8, #0xffff                	// #65535
  440474:	cmp	x28, x8
  440478:	b.eq	440140 <feof@plt+0x3d440>  // b.none
  44047c:	b	440498 <feof@plt+0x3d798>
  440480:	mov	w8, #0xffffffff            	// #-1
  440484:	cmp	x28, x8
  440488:	b.ne	440498 <feof@plt+0x3d798>  // b.any
  44048c:	b	440140 <feof@plt+0x3d440>
  440490:	cmn	x28, #0x1
  440494:	b.eq	440140 <feof@plt+0x3d440>  // b.none
  440498:	ldr	x8, [x25, #24]
  44049c:	add	x9, x23, x22
  4404a0:	add	x26, x9, x28
  4404a4:	add	x28, x9, x0
  4404a8:	cbz	x8, 4404e8 <feof@plt+0x3d7e8>
  4404ac:	ldr	x10, [x25]
  4404b0:	sub	x11, x8, #0x1
  4404b4:	mov	w8, #0x18                  	// #24
  4404b8:	madd	x8, x11, x8, x10
  4404bc:	ldr	x9, [x8, #8]!
  4404c0:	cmp	x26, x9
  4404c4:	b.eq	4404d4 <feof@plt+0x3d7d4>  // b.none
  4404c8:	add	x12, x9, #0x1
  4404cc:	cmp	x26, x12
  4404d0:	b.ne	4404e8 <feof@plt+0x3d7e8>  // b.any
  4404d4:	mov	w12, #0x18                  	// #24
  4404d8:	madd	x10, x11, x12, x10
  4404dc:	ldr	x10, [x10, #16]
  4404e0:	cmp	x10, x21
  4404e4:	b.eq	44051c <feof@plt+0x3d81c>  // b.none
  4404e8:	mov	w1, #0x18                  	// #24
  4404ec:	mov	x0, x24
  4404f0:	mov	x2, x19
  4404f4:	mov	x3, x20
  4404f8:	mov	x4, x25
  4404fc:	bl	439d04 <feof@plt+0x37004>
  440500:	cbz	x0, 440554 <feof@plt+0x3d854>
  440504:	stp	x26, x28, [x0]
  440508:	str	x21, [x0, #16]
  44050c:	ldr	x8, [x25, #24]
  440510:	add	x8, x8, #0x1
  440514:	str	x8, [x25, #24]
  440518:	b	440144 <feof@plt+0x3d444>
  44051c:	cmp	x28, x9
  440520:	b.ls	440144 <feof@plt+0x3d444>  // b.plast
  440524:	str	x28, [x8]
  440528:	b	440144 <feof@plt+0x3d444>
  44052c:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440530:	add	x1, x1, #0x729
  440534:	mov	x0, x20
  440538:	mov	w2, wzr
  44053c:	blr	x19
  440540:	mov	w0, wzr
  440544:	b	440554 <feof@plt+0x3d854>
  440548:	ldr	w8, [sp, #56]
  44054c:	cmp	w8, #0x0
  440550:	cset	w0, eq  // eq = none
  440554:	ldp	x20, x19, [sp, #352]
  440558:	ldp	x22, x21, [sp, #336]
  44055c:	ldp	x24, x23, [sp, #320]
  440560:	ldp	x26, x25, [sp, #304]
  440564:	ldp	x28, x27, [sp, #288]
  440568:	ldp	x29, x30, [sp, #272]
  44056c:	add	sp, sp, #0x170
  440570:	ret
  440574:	sub	sp, sp, #0x140
  440578:	stp	x29, x30, [sp, #224]
  44057c:	stp	x28, x27, [sp, #240]
  440580:	stp	x26, x25, [sp, #256]
  440584:	stp	x24, x23, [sp, #272]
  440588:	stp	x22, x21, [sp, #288]
  44058c:	stp	x20, x19, [sp, #304]
  440590:	add	x29, sp, #0xe0
  440594:	mov	w8, #0x1                   	// #1
  440598:	str	w8, [x6]
  44059c:	ldr	x8, [x1, #32]
  4405a0:	mov	x22, x6
  4405a4:	cbz	x8, 440614 <feof@plt+0x3d914>
  4405a8:	ldr	x10, [x1, #24]
  4405ac:	mov	x20, x5
  4405b0:	mov	x23, x4
  4405b4:	mov	x27, x3
  4405b8:	mov	x21, x2
  4405bc:	mov	x25, x1
  4405c0:	mov	x24, x0
  4405c4:	mov	x11, xzr
  4405c8:	mov	x12, x8
  4405cc:	b	4405dc <feof@plt+0x3d8dc>
  4405d0:	mov	x12, x13
  4405d4:	cmp	x11, x12
  4405d8:	b.cs	440614 <feof@plt+0x3d914>  // b.hs, b.nlast
  4405dc:	add	x9, x12, x11
  4405e0:	lsr	x13, x9, #1
  4405e4:	add	x9, x13, x13, lsl #1
  4405e8:	lsl	x14, x9, #3
  4405ec:	add	x9, x10, x14
  4405f0:	ldr	x15, [x9]
  4405f4:	cmp	x15, x21
  4405f8:	b.hi	4405d0 <feof@plt+0x3d8d0>  // b.pmore
  4405fc:	ldr	x15, [x9, #8]
  440600:	cmp	x15, x21
  440604:	b.hi	44063c <feof@plt+0x3d93c>  // b.pmore
  440608:	add	x11, x13, #0x1
  44060c:	cmp	x11, x12
  440610:	b.cc	4405dc <feof@plt+0x3d8dc>  // b.lo, b.ul, b.last
  440614:	mov	w0, wzr
  440618:	str	wzr, [x22]
  44061c:	ldp	x20, x19, [sp, #304]
  440620:	ldp	x22, x21, [sp, #288]
  440624:	ldp	x24, x23, [sp, #272]
  440628:	ldp	x26, x25, [sp, #256]
  44062c:	ldp	x28, x27, [sp, #240]
  440630:	ldp	x29, x30, [sp, #224]
  440634:	add	sp, sp, #0x140
  440638:	ret
  44063c:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  440640:	asr	x15, x14, #3
  440644:	movk	x13, #0xaaab
  440648:	orr	x14, xzr, #0x1
  44064c:	madd	x15, x15, x13, x14
  440650:	cmp	x15, x8
  440654:	b.cs	4406a4 <feof@plt+0x3d9a4>  // b.hs, b.nlast
  440658:	add	x11, x12, x11
  44065c:	lsr	x11, x11, #1
  440660:	mov	w12, #0x18                  	// #24
  440664:	madd	x11, x11, x12, x10
  440668:	add	x11, x11, #0x18
  44066c:	ldr	x12, [x11]
  440670:	cmp	x12, x21
  440674:	b.hi	4406a4 <feof@plt+0x3d9a4>  // b.pmore
  440678:	ldr	x12, [x11, #8]
  44067c:	cmp	x12, x21
  440680:	b.ls	4406a0 <feof@plt+0x3d9a0>  // b.plast
  440684:	sub	x12, x11, x10
  440688:	asr	x12, x12, #3
  44068c:	madd	x12, x12, x13, x14
  440690:	add	x9, x9, #0x18
  440694:	cmp	x12, x8
  440698:	add	x11, x11, #0x18
  44069c:	b.cc	44066c <feof@plt+0x3d96c>  // b.lo, b.ul, b.last
  4406a0:	sub	x9, x11, #0x18
  4406a4:	ldr	x19, [x9, #16]
  4406a8:	cmp	x9, x10
  4406ac:	ldr	x8, [x19, #104]
  4406b0:	str	x8, [sp, #104]
  4406b4:	b.ls	440710 <feof@plt+0x3da10>  // b.plast
  4406b8:	ldur	x10, [x9, #-24]
  4406bc:	cmp	x10, x21
  4406c0:	b.hi	440710 <feof@plt+0x3da10>  // b.pmore
  4406c4:	ldur	x10, [x9, #-16]
  4406c8:	cmp	x10, x21
  4406cc:	b.ls	440710 <feof@plt+0x3da10>  // b.plast
  4406d0:	ldr	w10, [x24, #8]
  4406d4:	cbz	w10, 4406e4 <feof@plt+0x3d9e4>
  4406d8:	add	x8, x19, #0x68
  4406dc:	ldar	x8, [x8]
  4406e0:	str	x8, [sp, #104]
  4406e4:	cmn	x8, #0x1
  4406e8:	b.ne	440710 <feof@plt+0x3da10>  // b.any
  4406ec:	ldur	x19, [x9, #-8]
  4406f0:	sub	x28, x9, #0x18
  4406f4:	mov	x9, x28
  4406f8:	ldr	x8, [x19, #104]
  4406fc:	str	x8, [sp, #104]
  440700:	ldr	x10, [x25, #24]
  440704:	cmp	x28, x10
  440708:	b.hi	4406b8 <feof@plt+0x3d9b8>  // b.pmore
  44070c:	b	440714 <feof@plt+0x3da14>
  440710:	mov	x28, x9
  440714:	ldr	w9, [x24, #8]
  440718:	cbz	w9, 440728 <feof@plt+0x3da28>
  44071c:	add	x8, x19, #0x68
  440720:	ldar	x8, [x8]
  440724:	str	x8, [sp, #104]
  440728:	cbz	x8, 440838 <feof@plt+0x3db38>
  44072c:	mov	w9, wzr
  440730:	cmn	x8, #0x1
  440734:	b.eq	440a98 <feof@plt+0x3dd98>  // b.none
  440738:	ldr	x11, [x28, #16]
  44073c:	ldr	x12, [x11, #112]
  440740:	cbz	x12, 44078c <feof@plt+0x3da8c>
  440744:	mov	x13, xzr
  440748:	mov	w10, #0x18                  	// #24
  44074c:	b	44075c <feof@plt+0x3da5c>
  440750:	cmp	x13, x9
  440754:	mov	x12, x9
  440758:	b.cs	44078c <feof@plt+0x3da8c>  // b.hs, b.nlast
  44075c:	add	x9, x12, x13
  440760:	lsr	x9, x9, #1
  440764:	madd	x14, x9, x10, x8
  440768:	ldr	x15, [x14]
  44076c:	cmp	x15, x21
  440770:	b.hi	440750 <feof@plt+0x3da50>  // b.pmore
  440774:	ldr	x13, [x14, #24]
  440778:	cmp	x13, x21
  44077c:	b.hi	44095c <feof@plt+0x3dc5c>  // b.pmore
  440780:	add	x13, x9, #0x1
  440784:	mov	x9, x12
  440788:	b	440750 <feof@plt+0x3da50>
  44078c:	ldr	x25, [x11, #80]
  440790:	cbnz	x25, 440828 <feof@plt+0x3db28>
  440794:	ldr	x25, [x11, #64]
  440798:	cbz	x25, 440824 <feof@plt+0x3db24>
  44079c:	ldrb	w8, [x25]
  4407a0:	cmp	w8, #0x2f
  4407a4:	b.eq	440824 <feof@plt+0x3db24>  // b.none
  4407a8:	ldr	x26, [x11, #72]
  4407ac:	cbz	x26, 440824 <feof@plt+0x3db24>
  4407b0:	mov	x0, x25
  4407b4:	str	x27, [sp, #24]
  4407b8:	bl	4026d0 <strlen@plt>
  4407bc:	mov	x19, x0
  4407c0:	mov	x0, x26
  4407c4:	bl	4026d0 <strlen@plt>
  4407c8:	add	x8, x19, x0
  4407cc:	mov	x27, x0
  4407d0:	add	x1, x8, #0x2
  4407d4:	mov	x0, x24
  4407d8:	mov	x2, x23
  4407dc:	mov	x3, x20
  4407e0:	str	x19, [sp, #16]
  4407e4:	bl	439a30 <feof@plt+0x36d30>
  4407e8:	cbz	x0, 440618 <feof@plt+0x3d918>
  4407ec:	mov	x1, x26
  4407f0:	mov	x2, x27
  4407f4:	mov	x23, x0
  4407f8:	bl	402640 <memcpy@plt>
  4407fc:	add	x0, x23, x27
  440800:	mov	w8, #0x2f                  	// #47
  440804:	strb	w8, [x0], #1
  440808:	ldr	x8, [sp, #16]
  44080c:	mov	x1, x25
  440810:	add	x2, x8, #0x1
  440814:	bl	402640 <memcpy@plt>
  440818:	ldr	x11, [x28, #16]
  44081c:	ldr	x27, [sp, #24]
  440820:	mov	x25, x23
  440824:	str	x25, [x11, #80]
  440828:	mov	x0, x20
  44082c:	mov	x1, x21
  440830:	mov	x2, x25
  440834:	b	440acc <feof@plt+0x3ddcc>
  440838:	ldr	x4, [x28, #16]
  44083c:	add	x5, sp, #0x28
  440840:	add	x6, sp, #0x68
  440844:	add	x7, sp, #0x20
  440848:	mov	x0, x24
  44084c:	mov	x1, x25
  440850:	mov	x2, x23
  440854:	mov	x3, x20
  440858:	str	x27, [sp, #24]
  44085c:	bl	440b98 <feof@plt+0x3de98>
  440860:	cbz	w0, 440930 <feof@plt+0x3dc30>
  440864:	ldr	w8, [x24, #8]
  440868:	ldr	x26, [x28, #16]
  44086c:	add	x27, x25, #0x80
  440870:	cmp	w8, #0x0
  440874:	csel	x8, x27, xzr, eq  // eq = none
  440878:	str	x8, [sp, #16]
  44087c:	cbnz	x8, 44088c <feof@plt+0x3db8c>
  440880:	movi	v0.2d, #0x0
  440884:	sub	x27, x29, #0x30
  440888:	stp	q0, q0, [x29, #-48]
  44088c:	adrp	x8, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440890:	add	x8, x8, #0x274
  440894:	str	x8, [sp, #112]
  440898:	ldr	x8, [x25, #56]
  44089c:	str	x8, [sp, #120]
  4408a0:	ldr	x8, [x26]
  4408a4:	str	x8, [sp, #128]
  4408a8:	ldr	x8, [x26, #8]
  4408ac:	str	x8, [sp, #136]
  4408b0:	ldr	w9, [x25, #120]
  4408b4:	stp	x23, x20, [sp, #152]
  4408b8:	str	wzr, [sp, #168]
  4408bc:	str	w9, [sp, #144]
  4408c0:	cbz	x8, 4408f8 <feof@plt+0x3dbf8>
  4408c4:	add	x4, sp, #0x70
  4408c8:	add	x5, sp, #0x28
  4408cc:	mov	x0, x24
  4408d0:	mov	x1, x25
  4408d4:	mov	x2, x26
  4408d8:	mov	x3, xzr
  4408dc:	mov	x6, x23
  4408e0:	mov	x7, x20
  4408e4:	stp	x27, x27, [sp]
  4408e8:	bl	442a10 <feof@plt+0x3fd10>
  4408ec:	cbz	w0, 440a14 <feof@plt+0x3dd14>
  4408f0:	ldr	x8, [sp, #136]
  4408f4:	cbnz	x8, 4408c4 <feof@plt+0x3dbc4>
  4408f8:	ldr	x26, [x27, #24]
  4408fc:	cbz	x26, 4409d4 <feof@plt+0x3dcd4>
  440900:	ldr	x8, [sp, #16]
  440904:	cbz	x8, 4409dc <feof@plt+0x3dcdc>
  440908:	mov	x0, x24
  44090c:	mov	x1, x8
  440910:	mov	x2, x23
  440914:	mov	x3, x20
  440918:	bl	439e0c <feof@plt+0x3710c>
  44091c:	mov	x27, x0
  440920:	cbz	x0, 440a18 <feof@plt+0x3dd18>
  440924:	ldr	x8, [sp, #16]
  440928:	str	xzr, [x8, #24]
  44092c:	b	4409f8 <feof@plt+0x3dcf8>
  440930:	mov	x27, xzr
  440934:	mov	x26, xzr
  440938:	mov	w9, wzr
  44093c:	ldr	w8, [x24, #8]
  440940:	cbnz	w8, 440a60 <feof@plt+0x3dd60>
  440944:	ldr	x8, [sp, #32]
  440948:	str	x26, [x19, #128]
  44094c:	stp	x8, x27, [x19, #112]
  440950:	ldr	x8, [sp, #104]
  440954:	str	x8, [x19, #104]
  440958:	b	440a8c <feof@plt+0x3dd8c>
  44095c:	ldr	x10, [x11, #128]
  440960:	cbz	x10, 4409b8 <feof@plt+0x3dcb8>
  440964:	ldr	x11, [x11, #120]
  440968:	mov	x13, xzr
  44096c:	mov	x14, x10
  440970:	b	440980 <feof@plt+0x3dc80>
  440974:	mov	x14, x15
  440978:	cmp	x13, x14
  44097c:	b.cs	4409b8 <feof@plt+0x3dcb8>  // b.hs, b.nlast
  440980:	add	x12, x14, x13
  440984:	lsr	x15, x12, #1
  440988:	add	x12, x15, x15, lsl #1
  44098c:	lsl	x16, x12, #3
  440990:	add	x12, x11, x16
  440994:	ldr	x17, [x12]
  440998:	cmp	x17, x21
  44099c:	b.hi	440974 <feof@plt+0x3dc74>  // b.pmore
  4409a0:	ldr	x17, [x12, #8]
  4409a4:	cmp	x17, x21
  4409a8:	b.hi	440adc <feof@plt+0x3dddc>  // b.pmore
  4409ac:	add	x13, x15, #0x1
  4409b0:	cmp	x13, x14
  4409b4:	b.cc	440980 <feof@plt+0x3dc80>  // b.lo, b.ul, b.last
  4409b8:	mov	w10, #0x18                  	// #24
  4409bc:	madd	x8, x9, x10, x8
  4409c0:	ldr	x2, [x8, #8]
  4409c4:	ldr	w3, [x8, #16]
  4409c8:	mov	x0, x20
  4409cc:	mov	x1, x21
  4409d0:	b	440ad0 <feof@plt+0x3ddd0>
  4409d4:	mov	x27, xzr
  4409d8:	b	440a1c <feof@plt+0x3dd1c>
  4409dc:	sub	x1, x29, #0x30
  4409e0:	mov	x0, x24
  4409e4:	mov	x2, x23
  4409e8:	mov	x3, x20
  4409ec:	bl	439e1c <feof@plt+0x3711c>
  4409f0:	cbz	w0, 440a14 <feof@plt+0x3dd14>
  4409f4:	ldr	x27, [x27]
  4409f8:	adrp	x3, 443000 <feof@plt+0x40300>
  4409fc:	add	x3, x3, #0x1a4
  440a00:	mov	w2, #0x18                  	// #24
  440a04:	mov	x0, x27
  440a08:	mov	x1, x26
  440a0c:	bl	443af8 <feof@plt+0x40df8>
  440a10:	b	440a1c <feof@plt+0x3dd1c>
  440a14:	mov	x27, xzr
  440a18:	mov	x26, xzr
  440a1c:	ldr	x8, [sp, #72]
  440a20:	cbz	x8, 440a3c <feof@plt+0x3dd3c>
  440a24:	ldr	x1, [sp, #80]
  440a28:	lsl	x2, x8, #3
  440a2c:	mov	x0, x24
  440a30:	mov	x3, x23
  440a34:	mov	x4, x20
  440a38:	bl	439bf4 <feof@plt+0x36ef4>
  440a3c:	ldp	x8, x1, [sp, #88]
  440a40:	mov	x0, x24
  440a44:	mov	x3, x23
  440a48:	mov	x4, x20
  440a4c:	lsl	x2, x8, #3
  440a50:	bl	439bf4 <feof@plt+0x36ef4>
  440a54:	mov	w9, #0x1                   	// #1
  440a58:	ldr	w8, [x24, #8]
  440a5c:	cbz	w8, 440944 <feof@plt+0x3dc44>
  440a60:	ldr	x8, [sp, #32]
  440a64:	add	x10, x19, #0x70
  440a68:	add	x11, x19, #0x78
  440a6c:	add	x12, x19, #0x80
  440a70:	stlr	x8, [x10]
  440a74:	stlr	x27, [x11]
  440a78:	stlr	x26, [x12]
  440a7c:	ldr	x8, [sp, #104]
  440a80:	add	x10, x19, #0x68
  440a84:	stlr	x8, [x10]
  440a88:	ldr	x8, [sp, #104]
  440a8c:	ldr	x27, [sp, #24]
  440a90:	cmn	x8, #0x1
  440a94:	b.ne	440738 <feof@plt+0x3da38>  // b.any
  440a98:	cbz	w9, 440ac0 <feof@plt+0x3ddc0>
  440a9c:	mov	x0, x24
  440aa0:	mov	x1, x25
  440aa4:	mov	x2, x21
  440aa8:	mov	x3, x27
  440aac:	mov	x4, x23
  440ab0:	mov	x5, x20
  440ab4:	mov	x6, x22
  440ab8:	bl	440574 <feof@plt+0x3d874>
  440abc:	b	44061c <feof@plt+0x3d91c>
  440ac0:	mov	x0, x20
  440ac4:	mov	x1, x21
  440ac8:	mov	x2, xzr
  440acc:	mov	w3, wzr
  440ad0:	mov	x4, xzr
  440ad4:	blr	x27
  440ad8:	b	44061c <feof@plt+0x3d91c>
  440adc:	mov	x15, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  440ae0:	asr	x17, x16, #3
  440ae4:	movk	x15, #0xaaab
  440ae8:	orr	x16, xzr, #0x1
  440aec:	madd	x17, x17, x15, x16
  440af0:	cmp	x17, x10
  440af4:	b.cs	440b44 <feof@plt+0x3de44>  // b.hs, b.nlast
  440af8:	add	x13, x14, x13
  440afc:	lsr	x13, x13, #1
  440b00:	mov	w14, #0x18                  	// #24
  440b04:	madd	x13, x13, x14, x11
  440b08:	add	x13, x13, #0x18
  440b0c:	ldr	x14, [x13]
  440b10:	cmp	x14, x21
  440b14:	b.hi	440b40 <feof@plt+0x3de40>  // b.pmore
  440b18:	ldr	x14, [x13, #8]
  440b1c:	cmp	x14, x21
  440b20:	b.ls	440b44 <feof@plt+0x3de44>  // b.plast
  440b24:	sub	x14, x13, x11
  440b28:	asr	x14, x14, #3
  440b2c:	madd	x14, x14, x15, x16
  440b30:	add	x12, x12, #0x18
  440b34:	cmp	x14, x10
  440b38:	add	x13, x13, #0x18
  440b3c:	b.cc	440b0c <feof@plt+0x3de0c>  // b.lo, b.ul, b.last
  440b40:	sub	x12, x13, #0x18
  440b44:	mov	w10, #0x18                  	// #24
  440b48:	madd	x8, x9, x10, x8
  440b4c:	ldr	x9, [x8, #8]
  440b50:	ldr	x22, [x12, #16]
  440b54:	add	x4, sp, #0x70
  440b58:	add	x5, sp, #0x28
  440b5c:	str	x9, [sp, #112]
  440b60:	ldr	w8, [x8, #16]
  440b64:	mov	x0, x21
  440b68:	mov	x1, x22
  440b6c:	mov	x2, x27
  440b70:	mov	x3, x20
  440b74:	str	w8, [sp, #40]
  440b78:	bl	442874 <feof@plt+0x3fb74>
  440b7c:	cbnz	w0, 44061c <feof@plt+0x3d91c>
  440b80:	ldr	x2, [sp, #112]
  440b84:	ldr	w3, [sp, #40]
  440b88:	ldr	x4, [x22]
  440b8c:	mov	x0, x20
  440b90:	mov	x1, x21
  440b94:	b	440ad4 <feof@plt+0x3ddd4>
  440b98:	sub	sp, sp, #0x1f0
  440b9c:	stp	x29, x30, [sp, #400]
  440ba0:	stp	x28, x27, [sp, #416]
  440ba4:	stp	x26, x25, [sp, #432]
  440ba8:	stp	x24, x23, [sp, #448]
  440bac:	stp	x22, x21, [sp, #464]
  440bb0:	stp	x20, x19, [sp, #480]
  440bb4:	add	x29, sp, #0x190
  440bb8:	movi	v0.2d, #0x0
  440bbc:	stp	q0, q0, [sp, #160]
  440bc0:	stp	q0, q0, [x5, #32]
  440bc4:	stp	q0, q0, [x5]
  440bc8:	ldr	x8, [x4, #56]
  440bcc:	ldr	x9, [x1, #80]
  440bd0:	mov	x23, x5
  440bd4:	mov	x21, x3
  440bd8:	mov	x22, x2
  440bdc:	subs	x9, x9, x8
  440be0:	mov	x19, x7
  440be4:	stp	x7, x0, [sp, #80]
  440be8:	str	x6, [sp, #72]
  440bec:	b.ls	440c78 <feof@plt+0x3df78>  // b.plast
  440bf0:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440bf4:	add	x10, x10, #0x280
  440bf8:	str	x10, [sp, #96]
  440bfc:	ldr	x10, [x1, #72]
  440c00:	mov	x20, x4
  440c04:	mov	x25, x1
  440c08:	mov	x24, x0
  440c0c:	add	x8, x10, x8
  440c10:	str	x10, [sp, #104]
  440c14:	stp	x8, x9, [sp, #112]
  440c18:	ldr	w11, [x1, #120]
  440c1c:	cmp	x9, #0x3
  440c20:	stp	x22, x21, [sp, #136]
  440c24:	str	wzr, [sp, #152]
  440c28:	str	w11, [sp, #128]
  440c2c:	b.hi	440c90 <feof@plt+0x3df90>  // b.pmore
  440c30:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440c34:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440c38:	adrp	x4, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440c3c:	sub	w5, w8, w10
  440c40:	add	x2, x2, #0x4f7
  440c44:	add	x3, x3, #0x4e7
  440c48:	add	x4, x4, #0x280
  440c4c:	add	x0, sp, #0xc0
  440c50:	mov	w1, #0xc8                  	// #200
  440c54:	bl	402a20 <snprintf@plt>
  440c58:	ldp	x8, x0, [sp, #136]
  440c5c:	add	x1, sp, #0xc0
  440c60:	mov	w2, wzr
  440c64:	blr	x8
  440c68:	mov	w8, wzr
  440c6c:	mov	w9, #0x1                   	// #1
  440c70:	str	w9, [sp, #152]
  440c74:	b	440cdc <feof@plt+0x3dfdc>
  440c78:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440c7c:	add	x1, x1, #0x5ca
  440c80:	mov	x0, x21
  440c84:	mov	w2, wzr
  440c88:	blr	x22
  440c8c:	b	440dc0 <feof@plt+0x3e0c0>
  440c90:	add	x10, x8, #0x4
  440c94:	sub	x9, x9, #0x4
  440c98:	stp	x10, x9, [sp, #112]
  440c9c:	cbz	w11, 440cb4 <feof@plt+0x3dfb4>
  440ca0:	ldrb	w9, [x8]
  440ca4:	ldrb	w10, [x8, #1]
  440ca8:	ldrb	w11, [x8, #2]
  440cac:	add	x8, x8, #0x3
  440cb0:	b	440cc0 <feof@plt+0x3dfc0>
  440cb4:	ldrb	w9, [x8, #3]
  440cb8:	ldrb	w10, [x8, #2]
  440cbc:	ldrb	w11, [x8, #1]
  440cc0:	lsl	w9, w9, #24
  440cc4:	bfi	w9, w10, #16, #8
  440cc8:	bfi	w9, w11, #8, #8
  440ccc:	ldrb	w8, [x8]
  440cd0:	orr	w8, w9, w8
  440cd4:	cmn	w8, #0x1
  440cd8:	b.eq	440ec8 <feof@plt+0x3e1c8>  // b.none
  440cdc:	mov	w9, wzr
  440ce0:	mov	w0, w8
  440ce4:	ldr	x8, [sp, #112]
  440ce8:	cmp	x0, #0x1
  440cec:	str	x0, [sp, #120]
  440cf0:	b.hi	440d4c <feof@plt+0x3e04c>  // b.pmore
  440cf4:	ldr	w9, [sp, #152]
  440cf8:	cbnz	w9, 440d40 <feof@plt+0x3e040>
  440cfc:	ldr	w9, [sp, #104]
  440d00:	ldr	x4, [sp, #96]
  440d04:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440d08:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440d0c:	sub	w5, w8, w9
  440d10:	add	x2, x2, #0x4f7
  440d14:	add	x3, x3, #0x4e7
  440d18:	add	x0, sp, #0xc0
  440d1c:	mov	w1, #0xc8                  	// #200
  440d20:	bl	402a20 <snprintf@plt>
  440d24:	ldp	x8, x0, [sp, #136]
  440d28:	add	x1, sp, #0xc0
  440d2c:	mov	w2, wzr
  440d30:	blr	x8
  440d34:	ldr	x8, [sp, #112]
  440d38:	mov	w9, #0x1                   	// #1
  440d3c:	str	w9, [sp, #152]
  440d40:	mov	x10, x8
  440d44:	str	wzr, [x23]
  440d48:	b	440d88 <feof@plt+0x3e088>
  440d4c:	ldr	w11, [sp, #128]
  440d50:	add	x10, x8, #0x2
  440d54:	sub	x12, x0, #0x2
  440d58:	stp	x10, x12, [sp, #112]
  440d5c:	cmp	w11, #0x0
  440d60:	cinc	x13, x8, eq  // eq = none
  440d64:	cinc	x14, x8, ne  // ne = any
  440d68:	ldrb	w13, [x13]
  440d6c:	ldrb	w14, [x14]
  440d70:	bfi	w14, w13, #8, #8
  440d74:	sub	w13, w14, #0x2
  440d78:	and	w13, w13, #0xffff
  440d7c:	cmp	w13, #0x2
  440d80:	str	w14, [x23]
  440d84:	b.ls	440e58 <feof@plt+0x3e158>  // b.plast
  440d88:	ldr	w8, [sp, #104]
  440d8c:	ldr	x4, [sp, #96]
  440d90:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440d94:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440d98:	sub	w5, w10, w8
  440d9c:	add	x2, x2, #0x4f7
  440da0:	add	x3, x3, #0x5e8
  440da4:	add	x0, sp, #0xc0
  440da8:	mov	w1, #0xc8                  	// #200
  440dac:	bl	402a20 <snprintf@plt>
  440db0:	ldp	x8, x0, [sp, #136]
  440db4:	add	x1, sp, #0xc0
  440db8:	mov	w2, wzr
  440dbc:	blr	x8
  440dc0:	ldp	x8, x9, [sp, #168]
  440dc4:	ldr	x19, [sp, #88]
  440dc8:	add	x1, sp, #0xa0
  440dcc:	mov	x2, x22
  440dd0:	add	x8, x9, x8
  440dd4:	mov	x0, x19
  440dd8:	mov	x3, x21
  440ddc:	stp	xzr, x8, [sp, #168]
  440de0:	bl	439e1c <feof@plt+0x3711c>
  440de4:	ldr	x8, [x23, #32]
  440de8:	cbz	x8, 440e04 <feof@plt+0x3e104>
  440dec:	ldr	x1, [x23, #40]
  440df0:	lsl	x2, x8, #3
  440df4:	mov	x0, x19
  440df8:	mov	x3, x22
  440dfc:	mov	x4, x21
  440e00:	bl	439bf4 <feof@plt+0x36ef4>
  440e04:	ldp	x8, x1, [x23, #48]
  440e08:	mov	x0, x19
  440e0c:	mov	x3, x22
  440e10:	mov	x4, x21
  440e14:	lsl	x2, x8, #3
  440e18:	bl	439bf4 <feof@plt+0x36ef4>
  440e1c:	ldr	x10, [sp, #72]
  440e20:	mov	x9, #0xffffffffffffffff    	// #-1
  440e24:	mov	x8, xzr
  440e28:	mov	w0, wzr
  440e2c:	str	x9, [x10]
  440e30:	ldr	x9, [sp, #80]
  440e34:	str	x8, [x9]
  440e38:	ldp	x20, x19, [sp, #480]
  440e3c:	ldp	x22, x21, [sp, #464]
  440e40:	ldp	x24, x23, [sp, #448]
  440e44:	ldp	x26, x25, [sp, #432]
  440e48:	ldp	x28, x27, [sp, #416]
  440e4c:	ldp	x29, x30, [sp, #400]
  440e50:	add	sp, sp, #0x1f0
  440e54:	ret
  440e58:	cbz	w9, 440f00 <feof@plt+0x3e200>
  440e5c:	add	x0, sp, #0x60
  440e60:	bl	43f0c0 <feof@plt+0x3c3c0>
  440e64:	ldr	x9, [sp, #96]
  440e68:	ldp	x19, x8, [sp, #112]
  440e6c:	ldr	w27, [sp, #152]
  440e70:	str	x9, [sp, #64]
  440e74:	ldr	x9, [sp, #104]
  440e78:	subs	x8, x8, x0
  440e7c:	str	x9, [sp, #56]
  440e80:	b.cs	440ed8 <feof@plt+0x3e1d8>  // b.hs, b.nlast
  440e84:	cbnz	w27, 440dc0 <feof@plt+0x3e0c0>
  440e88:	ldp	x8, x4, [sp, #56]
  440e8c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440e90:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440e94:	add	x2, x2, #0x4f7
  440e98:	sub	w5, w19, w8
  440e9c:	add	x3, x3, #0x4e7
  440ea0:	add	x0, sp, #0xc0
  440ea4:	mov	w1, #0xc8                  	// #200
  440ea8:	bl	402a20 <snprintf@plt>
  440eac:	ldp	x8, x0, [sp, #136]
  440eb0:	add	x1, sp, #0xc0
  440eb4:	mov	w2, wzr
  440eb8:	blr	x8
  440ebc:	mov	w8, #0x1                   	// #1
  440ec0:	str	w8, [sp, #152]
  440ec4:	b	440dc0 <feof@plt+0x3e0c0>
  440ec8:	add	x0, sp, #0x60
  440ecc:	bl	43f0c0 <feof@plt+0x3c3c0>
  440ed0:	mov	w9, #0x1                   	// #1
  440ed4:	b	440ce4 <feof@plt+0x3dfe4>
  440ed8:	ldr	x9, [sp, #136]
  440edc:	str	x9, [sp, #40]
  440ee0:	ldr	x9, [sp, #144]
  440ee4:	str	x9, [sp, #48]
  440ee8:	add	x9, x19, x0
  440eec:	stp	x9, x8, [sp, #112]
  440ef0:	cbz	x0, 440f18 <feof@plt+0x3e218>
  440ef4:	ldrb	w9, [x19], #1
  440ef8:	sub	x8, x0, #0x1
  440efc:	b	440fd0 <feof@plt+0x3e2d0>
  440f00:	cmp	x12, #0x3
  440f04:	b.hi	440f28 <feof@plt+0x3e228>  // b.pmore
  440f08:	ldr	w8, [sp, #152]
  440f0c:	cbz	w8, 440f48 <feof@plt+0x3e248>
  440f10:	mov	x0, xzr
  440f14:	b	440e64 <feof@plt+0x3e164>
  440f18:	cbz	w27, 440f90 <feof@plt+0x3e290>
  440f1c:	mov	x8, xzr
  440f20:	mov	w9, wzr
  440f24:	b	440fd0 <feof@plt+0x3e2d0>
  440f28:	add	x9, x8, #0x6
  440f2c:	sub	x10, x0, #0x6
  440f30:	stp	x9, x10, [sp, #112]
  440f34:	cbz	w11, 441008 <feof@plt+0x3e308>
  440f38:	ldur	w8, [x8, #2]
  440f3c:	lsl	x8, x8, #32
  440f40:	rev	x0, x8
  440f44:	b	440e64 <feof@plt+0x3e164>
  440f48:	ldr	w8, [sp, #104]
  440f4c:	ldr	x4, [sp, #96]
  440f50:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440f54:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440f58:	sub	w5, w10, w8
  440f5c:	add	x2, x2, #0x4f7
  440f60:	add	x3, x3, #0x4e7
  440f64:	add	x0, sp, #0xc0
  440f68:	mov	w1, #0xc8                  	// #200
  440f6c:	bl	402a20 <snprintf@plt>
  440f70:	ldp	x8, x0, [sp, #136]
  440f74:	add	x1, sp, #0xc0
  440f78:	mov	w2, wzr
  440f7c:	blr	x8
  440f80:	mov	w8, #0x1                   	// #1
  440f84:	mov	x0, xzr
  440f88:	str	w8, [sp, #152]
  440f8c:	b	440e64 <feof@plt+0x3e164>
  440f90:	ldp	x8, x4, [sp, #56]
  440f94:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440f98:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  440f9c:	add	x2, x2, #0x4f7
  440fa0:	sub	w5, w19, w8
  440fa4:	add	x3, x3, #0x4e7
  440fa8:	add	x0, sp, #0xc0
  440fac:	mov	w1, #0xc8                  	// #200
  440fb0:	bl	402a20 <snprintf@plt>
  440fb4:	ldp	x8, x0, [sp, #40]
  440fb8:	add	x1, sp, #0xc0
  440fbc:	mov	w2, wzr
  440fc0:	blr	x8
  440fc4:	mov	x8, xzr
  440fc8:	mov	w9, wzr
  440fcc:	mov	w27, #0x1                   	// #1
  440fd0:	ldr	w10, [x23]
  440fd4:	str	w9, [x23, #4]
  440fd8:	cmp	w10, #0x4
  440fdc:	b.ge	440fe8 <feof@plt+0x3e2e8>  // b.tcont
  440fe0:	mov	w9, #0x1                   	// #1
  440fe4:	b	441050 <feof@plt+0x3e350>
  440fe8:	cbz	x8, 440ff8 <feof@plt+0x3e2f8>
  440fec:	ldrb	w9, [x19], #1
  440ff0:	sub	x8, x8, #0x1
  440ff4:	b	441050 <feof@plt+0x3e350>
  440ff8:	cbz	w27, 441010 <feof@plt+0x3e310>
  440ffc:	mov	x8, xzr
  441000:	mov	w9, wzr
  441004:	b	441050 <feof@plt+0x3e350>
  441008:	ldur	w0, [x8, #2]
  44100c:	b	440e64 <feof@plt+0x3e164>
  441010:	ldp	x8, x4, [sp, #56]
  441014:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441018:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44101c:	add	x2, x2, #0x4f7
  441020:	sub	w5, w19, w8
  441024:	add	x3, x3, #0x4e7
  441028:	add	x0, sp, #0xc0
  44102c:	mov	w1, #0xc8                  	// #200
  441030:	bl	402a20 <snprintf@plt>
  441034:	ldp	x8, x0, [sp, #40]
  441038:	add	x1, sp, #0xc0
  44103c:	mov	w2, wzr
  441040:	blr	x8
  441044:	mov	x8, xzr
  441048:	mov	w9, wzr
  44104c:	mov	w27, #0x1                   	// #1
  441050:	str	w9, [x23, #8]
  441054:	cbz	x8, 441064 <feof@plt+0x3e364>
  441058:	cmp	x8, #0x1
  44105c:	b.ne	44114c <feof@plt+0x3e44c>  // b.any
  441060:	add	x19, x19, #0x1
  441064:	cbnz	w27, 4410a0 <feof@plt+0x3e3a0>
  441068:	ldp	x8, x4, [sp, #56]
  44106c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441070:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441074:	add	x2, x2, #0x4f7
  441078:	sub	w5, w19, w8
  44107c:	add	x3, x3, #0x4e7
  441080:	add	x0, sp, #0xc0
  441084:	mov	w1, #0xc8                  	// #200
  441088:	bl	402a20 <snprintf@plt>
  44108c:	ldp	x8, x0, [sp, #40]
  441090:	add	x1, sp, #0xc0
  441094:	mov	w2, wzr
  441098:	blr	x8
  44109c:	mov	w27, #0x1                   	// #1
  4410a0:	str	wzr, [x23, #12]
  4410a4:	mov	x8, xzr
  4410a8:	mov	w9, wzr
  4410ac:	str	wzr, [x23, #16]
  4410b0:	str	w9, [x23, #20]
  4410b4:	sub	w9, w9, #0x1
  4410b8:	subs	x28, x8, x9
  4410bc:	str	x19, [x23, #24]
  4410c0:	b.cs	4410d4 <feof@plt+0x3e3d4>  // b.hs, b.nlast
  4410c4:	cbnz	w27, 440dc0 <feof@plt+0x3e0c0>
  4410c8:	ldr	x8, [sp, #56]
  4410cc:	sub	w5, w19, w8
  4410d0:	b	4416d8 <feof@plt+0x3e9d8>
  4410d4:	stp	x25, x20, [sp]
  4410d8:	add	x25, x19, x9
  4410dc:	str	xzr, [x23, #32]
  4410e0:	b.le	4411a0 <feof@plt+0x3e4a0>
  4410e4:	mov	x20, xzr
  4410e8:	add	x26, x19, x8
  4410ec:	mov	x19, x25
  4410f0:	ldrb	w8, [x19]
  4410f4:	cbz	w8, 44111c <feof@plt+0x3e41c>
  4410f8:	sub	x1, x26, x19
  4410fc:	mov	x0, x19
  441100:	bl	402c60 <strnlen@plt>
  441104:	add	x8, x0, x19
  441108:	add	x19, x8, #0x1
  44110c:	add	x20, x20, #0x1
  441110:	cmp	x19, x26
  441114:	str	x20, [x23, #32]
  441118:	b.cc	4410f0 <feof@plt+0x3e3f0>  // b.lo, b.ul, b.last
  44111c:	mov	x26, x23
  441120:	str	xzr, [x26, #40]!
  441124:	str	x26, [sp, #32]
  441128:	cbz	x20, 4411d8 <feof@plt+0x3e4d8>
  44112c:	ldp	x2, x3, [sp, #136]
  441130:	lsl	x1, x20, #3
  441134:	mov	x0, x24
  441138:	bl	439a30 <feof@plt+0x36d30>
  44113c:	mov	x19, x0
  441140:	str	x0, [x26]
  441144:	cbnz	x0, 4411dc <feof@plt+0x3e4dc>
  441148:	b	440dc0 <feof@plt+0x3e0c0>
  44114c:	ldrsb	w9, [x19, #1]
  441150:	cmp	x8, #0x2
  441154:	str	w9, [x23, #12]
  441158:	b.ne	4411b4 <feof@plt+0x3e4b4>  // b.any
  44115c:	add	x19, x19, #0x2
  441160:	cbnz	w27, 4410a4 <feof@plt+0x3e3a4>
  441164:	ldp	x8, x4, [sp, #56]
  441168:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44116c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441170:	add	x2, x2, #0x4f7
  441174:	sub	w5, w19, w8
  441178:	add	x3, x3, #0x4e7
  44117c:	add	x0, sp, #0xc0
  441180:	mov	w1, #0xc8                  	// #200
  441184:	bl	402a20 <snprintf@plt>
  441188:	ldp	x8, x0, [sp, #40]
  44118c:	add	x1, sp, #0xc0
  441190:	mov	w2, wzr
  441194:	blr	x8
  441198:	mov	w27, #0x1                   	// #1
  44119c:	b	4410a4 <feof@plt+0x3e3a4>
  4411a0:	mov	x8, x23
  4411a4:	str	xzr, [x8, #40]!
  4411a8:	mov	x19, xzr
  4411ac:	str	x8, [sp, #32]
  4411b0:	b	4411dc <feof@plt+0x3e4dc>
  4411b4:	ldrb	w9, [x19, #2]
  4411b8:	cmp	x8, #0x3
  4411bc:	str	w9, [x23, #16]
  4411c0:	b.ne	441700 <feof@plt+0x3ea00>  // b.any
  4411c4:	add	x19, x19, #0x3
  4411c8:	cbz	w27, 441728 <feof@plt+0x3ea28>
  4411cc:	mov	x8, xzr
  4411d0:	mov	w9, wzr
  4411d4:	b	4410b0 <feof@plt+0x3e3b0>
  4411d8:	mov	x19, xzr
  4411dc:	ldrb	w8, [x25]
  4411e0:	cbz	w8, 441288 <feof@plt+0x3e588>
  4411e4:	mov	x26, xzr
  4411e8:	mov	x20, x25
  4411ec:	cbnz	w27, 440dc0 <feof@plt+0x3e0c0>
  4411f0:	mov	x0, x25
  4411f4:	mov	x1, x28
  4411f8:	bl	402c60 <strnlen@plt>
  4411fc:	add	x9, x0, #0x1
  441200:	subs	x8, x28, x9
  441204:	b.cs	441250 <feof@plt+0x3e550>  // b.hs, b.nlast
  441208:	ldp	x8, x4, [sp, #56]
  44120c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441210:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441214:	add	x0, sp, #0xc0
  441218:	sub	w5, w20, w8
  44121c:	mov	w1, #0xc8                  	// #200
  441220:	add	x2, x2, #0x4f7
  441224:	add	x3, x3, #0x4e7
  441228:	bl	402a20 <snprintf@plt>
  44122c:	ldp	x8, x0, [sp, #40]
  441230:	add	x1, sp, #0xc0
  441234:	mov	w2, wzr
  441238:	blr	x8
  44123c:	ldr	x8, [sp, #32]
  441240:	mov	x25, xzr
  441244:	mov	w27, #0x1                   	// #1
  441248:	ldr	x19, [x8]
  44124c:	b	441260 <feof@plt+0x3e560>
  441250:	mov	x28, x8
  441254:	ldr	x8, [sp, #32]
  441258:	mov	w27, wzr
  44125c:	add	x20, x25, x9
  441260:	str	x25, [x19, x26]
  441264:	ldr	x19, [x8]
  441268:	ldr	x8, [x19, x26]
  44126c:	cbz	x8, 440dc0 <feof@plt+0x3e0c0>
  441270:	ldrb	w8, [x20]
  441274:	add	x26, x26, #0x8
  441278:	mov	x25, x20
  44127c:	cbnz	w8, 4411ec <feof@plt+0x3e4ec>
  441280:	mov	x25, x20
  441284:	b	44128c <feof@plt+0x3e58c>
  441288:	mov	x20, x25
  44128c:	ldr	x24, [sp, #88]
  441290:	cbz	x28, 4416cc <feof@plt+0x3e9cc>
  441294:	mov	x19, xzr
  441298:	add	x20, x25, #0x1
  44129c:	cmp	x28, #0x2
  4412a0:	str	xzr, [x23, #48]
  4412a4:	b.lt	441374 <feof@plt+0x3e674>  // b.tstop
  4412a8:	mov	x19, xzr
  4412ac:	add	x26, x25, x28
  4412b0:	mov	x25, x20
  4412b4:	b	4412d0 <feof@plt+0x3e5d0>
  4412b8:	mov	w8, #0x1                   	// #1
  4412bc:	add	x25, x9, x8
  4412c0:	add	x19, x19, #0x1
  4412c4:	cmp	x25, x26
  4412c8:	str	x19, [x23, #48]
  4412cc:	b.cs	441374 <feof@plt+0x3e674>  // b.hs, b.nlast
  4412d0:	ldrb	w8, [x25]
  4412d4:	cbz	w8, 441374 <feof@plt+0x3e674>
  4412d8:	sub	x1, x26, x25
  4412dc:	mov	x0, x25
  4412e0:	bl	402c60 <strnlen@plt>
  4412e4:	add	x9, x0, x25
  4412e8:	ldrsb	w8, [x9, #1]!
  4412ec:	tbnz	w8, #31, 4412f8 <feof@plt+0x3e5f8>
  4412f0:	mov	w8, #0x1                   	// #1
  4412f4:	b	441310 <feof@plt+0x3e610>
  4412f8:	add	x8, x25, x0
  4412fc:	mov	w10, #0x2                   	// #2
  441300:	ldrsb	w11, [x8, x10]
  441304:	add	x10, x10, #0x1
  441308:	tbnz	w11, #31, 441300 <feof@plt+0x3e600>
  44130c:	sub	x8, x10, #0x1
  441310:	add	x9, x9, x8
  441314:	ldrsb	w10, [x9]
  441318:	tbnz	w10, #31, 441324 <feof@plt+0x3e624>
  44131c:	mov	w11, #0x1                   	// #1
  441320:	b	441340 <feof@plt+0x3e640>
  441324:	add	x10, x0, x8
  441328:	add	x10, x25, x10
  44132c:	mov	w11, #0x2                   	// #2
  441330:	ldrsb	w12, [x10, x11]
  441334:	add	x11, x11, #0x1
  441338:	tbnz	w12, #31, 441330 <feof@plt+0x3e630>
  44133c:	sub	x11, x11, #0x1
  441340:	add	x9, x9, x11
  441344:	ldrsb	w10, [x9]
  441348:	tbz	w10, #31, 4412b8 <feof@plt+0x3e5b8>
  44134c:	add	x8, x0, x8
  441350:	add	x8, x8, x11
  441354:	add	x8, x25, x8
  441358:	mov	x10, xzr
  44135c:	add	x8, x8, #0x2
  441360:	ldrsb	w11, [x8, x10]
  441364:	add	x10, x10, #0x1
  441368:	tbnz	w11, #31, 441360 <feof@plt+0x3e660>
  44136c:	add	x8, x10, #0x1
  441370:	b	4412bc <feof@plt+0x3e5bc>
  441374:	ldp	x2, x3, [sp, #136]
  441378:	lsl	x1, x19, #3
  44137c:	mov	x0, x24
  441380:	bl	439a30 <feof@plt+0x36d30>
  441384:	str	x0, [x23, #56]
  441388:	cbz	x0, 440dc0 <feof@plt+0x3e0c0>
  44138c:	ldrb	w9, [x20]
  441390:	cmp	w27, #0x0
  441394:	cset	w8, eq  // eq = none
  441398:	cbz	w9, 441710 <feof@plt+0x3ea10>
  44139c:	sub	x25, x28, #0x1
  4413a0:	str	xzr, [sp, #16]
  4413a4:	b	4413c4 <feof@plt+0x3e6c4>
  4413a8:	ldr	w8, [sp, #24]
  4413ac:	ldrb	w9, [x20]
  4413b0:	cmp	w8, #0x0
  4413b4:	add	x28, x28, #0x1
  4413b8:	cset	w8, eq  // eq = none
  4413bc:	str	x28, [sp, #16]
  4413c0:	cbz	w9, 441710 <feof@plt+0x3ea10>
  4413c4:	tbz	w8, #0, 440dc0 <feof@plt+0x3e0c0>
  4413c8:	mov	x0, x20
  4413cc:	mov	x1, x25
  4413d0:	bl	402c60 <strnlen@plt>
  4413d4:	add	x9, x0, #0x1
  4413d8:	subs	x25, x25, x9
  4413dc:	b.cc	4416d0 <feof@plt+0x3e9d0>  // b.lo, b.ul, b.last
  4413e0:	mov	x26, xzr
  4413e4:	mov	w27, wzr
  4413e8:	mov	w8, wzr
  4413ec:	add	x19, x20, x9
  4413f0:	b	44140c <feof@plt+0x3e70c>
  4413f4:	and	x9, x28, #0x7f
  4413f8:	lsl	x9, x9, x27
  4413fc:	orr	x26, x9, x26
  441400:	sxtb	w9, w28
  441404:	add	w27, w27, #0x7
  441408:	tbz	w9, #31, 4414a4 <feof@plt+0x3e7a4>
  44140c:	cbz	x25, 441460 <feof@plt+0x3e760>
  441410:	ldrb	w28, [x19], #1
  441414:	cmp	w27, #0x3f
  441418:	sub	x25, x25, #0x1
  44141c:	b.ls	4413f4 <feof@plt+0x3e6f4>  // b.plast
  441420:	cbnz	w8, 441400 <feof@plt+0x3e700>
  441424:	ldp	x8, x4, [sp, #56]
  441428:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44142c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441430:	add	x0, sp, #0xc0
  441434:	sub	w5, w19, w8
  441438:	mov	w1, #0xc8                  	// #200
  44143c:	add	x2, x2, #0x4f7
  441440:	add	x3, x3, #0x5b0
  441444:	bl	402a20 <snprintf@plt>
  441448:	ldp	x8, x0, [sp, #40]
  44144c:	add	x1, sp, #0xc0
  441450:	mov	w2, wzr
  441454:	blr	x8
  441458:	mov	w8, #0x1                   	// #1
  44145c:	b	441400 <feof@plt+0x3e700>
  441460:	ldp	x8, x4, [sp, #56]
  441464:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441468:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44146c:	add	x0, sp, #0xc0
  441470:	sub	w5, w19, w8
  441474:	mov	w1, #0xc8                  	// #200
  441478:	add	x2, x2, #0x4f7
  44147c:	add	x3, x3, #0x4e7
  441480:	bl	402a20 <snprintf@plt>
  441484:	ldp	x27, x0, [sp, #40]
  441488:	add	x1, sp, #0xc0
  44148c:	mov	w2, wzr
  441490:	blr	x27
  441494:	mov	w8, #0x1                   	// #1
  441498:	mov	x26, xzr
  44149c:	str	w8, [sp, #24]
  4414a0:	b	4414ac <feof@plt+0x3e7ac>
  4414a4:	ldr	x27, [sp, #40]
  4414a8:	str	wzr, [sp, #24]
  4414ac:	ldrb	w8, [x20]
  4414b0:	ldr	x28, [sp, #16]
  4414b4:	cmp	w8, #0x2f
  4414b8:	b.eq	441550 <feof@plt+0x3e850>  // b.none
  4414bc:	cbz	x26, 4414e0 <feof@plt+0x3e7e0>
  4414c0:	ldr	x9, [x23, #32]
  4414c4:	sub	x8, x26, #0x1
  4414c8:	cmp	x8, x9
  4414cc:	b.cs	442770 <feof@plt+0x3fa70>  // b.hs, b.nlast
  4414d0:	ldr	x9, [sp, #32]
  4414d4:	ldr	x9, [x9]
  4414d8:	ldr	x0, [x9, x8, lsl #3]
  4414dc:	b	4414ec <feof@plt+0x3e7ec>
  4414e0:	ldr	x8, [sp, #8]
  4414e4:	ldr	x0, [x8, #72]
  4414e8:	cbz	x0, 441550 <feof@plt+0x3e850>
  4414ec:	mov	x24, x0
  4414f0:	bl	4026d0 <strlen@plt>
  4414f4:	mov	x28, x0
  4414f8:	mov	x0, x20
  4414fc:	bl	4026d0 <strlen@plt>
  441500:	ldp	x2, x3, [sp, #136]
  441504:	mov	x27, x0
  441508:	add	x8, x28, x0
  44150c:	ldr	x0, [sp, #88]
  441510:	add	x1, x8, #0x2
  441514:	bl	439a30 <feof@plt+0x36d30>
  441518:	cbz	x0, 440dc0 <feof@plt+0x3e0c0>
  44151c:	mov	x1, x24
  441520:	mov	x2, x28
  441524:	mov	x26, x0
  441528:	bl	402640 <memcpy@plt>
  44152c:	add	x0, x26, x28
  441530:	mov	w8, #0x2f                  	// #47
  441534:	strb	w8, [x0], #1
  441538:	add	x2, x27, #0x1
  44153c:	mov	x1, x20
  441540:	bl	402640 <memcpy@plt>
  441544:	ldr	x27, [sp, #40]
  441548:	ldr	x28, [sp, #16]
  44154c:	mov	x20, x26
  441550:	ldr	x9, [x23, #56]
  441554:	mov	w26, wzr
  441558:	mov	w8, wzr
  44155c:	str	x20, [x9, x28, lsl #3]
  441560:	b	44156c <feof@plt+0x3e86c>
  441564:	add	w26, w26, #0x7
  441568:	tbz	w20, #31, 441610 <feof@plt+0x3e910>
  44156c:	cbz	x25, 4415c0 <feof@plt+0x3e8c0>
  441570:	ldrsb	w20, [x19], #1
  441574:	cmp	w26, #0x40
  441578:	sub	x25, x25, #0x1
  44157c:	b.cc	441564 <feof@plt+0x3e864>  // b.lo, b.ul, b.last
  441580:	cbnz	w8, 441564 <feof@plt+0x3e864>
  441584:	ldp	x8, x4, [sp, #56]
  441588:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44158c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441590:	add	x0, sp, #0xc0
  441594:	sub	w5, w19, w8
  441598:	mov	w1, #0xc8                  	// #200
  44159c:	add	x2, x2, #0x4f7
  4415a0:	add	x3, x3, #0x5b0
  4415a4:	bl	402a20 <snprintf@plt>
  4415a8:	ldr	x0, [sp, #48]
  4415ac:	add	x1, sp, #0xc0
  4415b0:	mov	w2, wzr
  4415b4:	blr	x27
  4415b8:	mov	w8, #0x1                   	// #1
  4415bc:	b	441564 <feof@plt+0x3e864>
  4415c0:	ldr	w8, [sp, #24]
  4415c4:	cbz	w8, 4415d0 <feof@plt+0x3e8d0>
  4415c8:	mov	x25, xzr
  4415cc:	b	441610 <feof@plt+0x3e910>
  4415d0:	ldp	x8, x4, [sp, #56]
  4415d4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4415d8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4415dc:	add	x0, sp, #0xc0
  4415e0:	sub	w5, w19, w8
  4415e4:	mov	w1, #0xc8                  	// #200
  4415e8:	add	x2, x2, #0x4f7
  4415ec:	add	x3, x3, #0x4e7
  4415f0:	bl	402a20 <snprintf@plt>
  4415f4:	ldr	x0, [sp, #48]
  4415f8:	add	x1, sp, #0xc0
  4415fc:	mov	w2, wzr
  441600:	blr	x27
  441604:	mov	w8, #0x1                   	// #1
  441608:	mov	x25, xzr
  44160c:	str	w8, [sp, #24]
  441610:	mov	w26, wzr
  441614:	mov	w8, wzr
  441618:	mov	x20, x19
  44161c:	b	441628 <feof@plt+0x3e928>
  441620:	add	w26, w26, #0x7
  441624:	tbz	w19, #31, 4413a8 <feof@plt+0x3e6a8>
  441628:	cbz	x25, 44167c <feof@plt+0x3e97c>
  44162c:	ldrsb	w19, [x20], #1
  441630:	cmp	w26, #0x40
  441634:	sub	x25, x25, #0x1
  441638:	b.cc	441620 <feof@plt+0x3e920>  // b.lo, b.ul, b.last
  44163c:	cbnz	w8, 441620 <feof@plt+0x3e920>
  441640:	ldp	x8, x4, [sp, #56]
  441644:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441648:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44164c:	add	x0, sp, #0xc0
  441650:	sub	w5, w20, w8
  441654:	mov	w1, #0xc8                  	// #200
  441658:	add	x2, x2, #0x4f7
  44165c:	add	x3, x3, #0x5b0
  441660:	bl	402a20 <snprintf@plt>
  441664:	ldr	x0, [sp, #48]
  441668:	add	x1, sp, #0xc0
  44166c:	mov	w2, wzr
  441670:	blr	x27
  441674:	mov	w8, #0x1                   	// #1
  441678:	b	441620 <feof@plt+0x3e920>
  44167c:	ldr	w8, [sp, #24]
  441680:	cbz	w8, 44168c <feof@plt+0x3e98c>
  441684:	mov	x25, xzr
  441688:	b	4413ac <feof@plt+0x3e6ac>
  44168c:	ldp	x8, x4, [sp, #56]
  441690:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441694:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441698:	add	x0, sp, #0xc0
  44169c:	sub	w5, w20, w8
  4416a0:	mov	w1, #0xc8                  	// #200
  4416a4:	add	x2, x2, #0x4f7
  4416a8:	add	x3, x3, #0x4e7
  4416ac:	bl	402a20 <snprintf@plt>
  4416b0:	ldr	x0, [sp, #48]
  4416b4:	add	x1, sp, #0xc0
  4416b8:	mov	w2, wzr
  4416bc:	blr	x27
  4416c0:	mov	x25, xzr
  4416c4:	mov	w8, #0x1                   	// #1
  4416c8:	b	4413ac <feof@plt+0x3e6ac>
  4416cc:	cbnz	w27, 440dc0 <feof@plt+0x3e0c0>
  4416d0:	ldr	x8, [sp, #56]
  4416d4:	sub	w5, w20, w8
  4416d8:	ldr	x4, [sp, #64]
  4416dc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4416e0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4416e4:	add	x2, x2, #0x4f7
  4416e8:	add	x3, x3, #0x4e7
  4416ec:	add	x0, sp, #0xc0
  4416f0:	mov	w1, #0xc8                  	// #200
  4416f4:	bl	402a20 <snprintf@plt>
  4416f8:	ldp	x8, x0, [sp, #40]
  4416fc:	b	440db4 <feof@plt+0x3e0b4>
  441700:	ldrb	w9, [x19, #3]
  441704:	add	x19, x19, #0x4
  441708:	sub	x8, x8, #0x4
  44170c:	b	4410b0 <feof@plt+0x3e3b0>
  441710:	cbz	w8, 440dc0 <feof@plt+0x3e0c0>
  441714:	ldr	x8, [x23, #48]
  441718:	cbz	x8, 44176c <feof@plt+0x3ea6c>
  44171c:	ldr	x8, [x23, #56]
  441720:	ldr	x27, [x8]
  441724:	b	441774 <feof@plt+0x3ea74>
  441728:	ldp	x8, x4, [sp, #56]
  44172c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441730:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441734:	add	x2, x2, #0x4f7
  441738:	sub	w5, w19, w8
  44173c:	add	x3, x3, #0x4e7
  441740:	add	x0, sp, #0xc0
  441744:	mov	w1, #0xc8                  	// #200
  441748:	bl	402a20 <snprintf@plt>
  44174c:	ldp	x8, x0, [sp, #40]
  441750:	add	x1, sp, #0xc0
  441754:	mov	w2, wzr
  441758:	blr	x8
  44175c:	mov	x8, xzr
  441760:	mov	w9, wzr
  441764:	mov	w27, #0x1                   	// #1
  441768:	b	4410b0 <feof@plt+0x3e3b0>
  44176c:	adrp	x27, 455000 <_obstack_begin_1@@Base+0xa4>
  441770:	add	x27, x27, #0xce0
  441774:	ldr	x26, [sp]
  441778:	ldr	x24, [sp, #88]
  44177c:	ldr	x20, [sp, #120]
  441780:	mov	w8, #0x1                   	// #1
  441784:	str	w8, [sp, #56]
  441788:	cbz	x20, 4426e8 <feof@plt+0x3f9e8>
  44178c:	ldr	x8, [sp, #8]
  441790:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441794:	mov	x28, xzr
  441798:	mov	w0, wzr
  44179c:	add	x8, x8, #0x48
  4417a0:	add	x19, x19, #0x454
  4417a4:	mov	w25, #0x1                   	// #1
  4417a8:	str	x8, [sp, #32]
  4417ac:	str	x27, [sp, #48]
  4417b0:	ldr	x10, [sp, #112]
  4417b4:	sub	x9, x20, #0x1
  4417b8:	str	w0, [sp, #64]
  4417bc:	add	x8, x10, #0x1
  4417c0:	stp	x8, x9, [sp, #112]
  4417c4:	ldrb	w12, [x10]
  4417c8:	ldr	w11, [x23, #20]
  4417cc:	cmp	w11, w12
  4417d0:	b.ls	441890 <feof@plt+0x3eb90>  // b.plast
  4417d4:	cmp	w12, #0xc
  4417d8:	b.hi	441920 <feof@plt+0x3ec20>  // b.pmore
  4417dc:	adr	x13, 4417ec <feof@plt+0x3eaec>
  4417e0:	ldrh	w14, [x19, x12, lsl #1]
  4417e4:	add	x13, x13, x14, lsl #2
  4417e8:	br	x13
  4417ec:	cbz	x9, 441880 <feof@plt+0x3eb80>
  4417f0:	mov	w10, wzr
  4417f4:	mov	w20, wzr
  4417f8:	mov	x26, xzr
  4417fc:	add	x11, x8, #0x1
  441800:	sub	x9, x9, #0x1
  441804:	stp	x11, x9, [sp, #112]
  441808:	ldrb	w19, [x8]
  44180c:	cmp	w20, #0x3f
  441810:	b.hi	441824 <feof@plt+0x3eb24>  // b.pmore
  441814:	and	x8, x19, #0x7f
  441818:	lsl	x8, x8, x20
  44181c:	orr	x26, x8, x26
  441820:	b	441864 <feof@plt+0x3eb64>
  441824:	cbnz	w10, 441864 <feof@plt+0x3eb64>
  441828:	ldr	w8, [sp, #104]
  44182c:	ldr	x4, [sp, #96]
  441830:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441834:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441838:	sub	w5, w11, w8
  44183c:	add	x0, sp, #0xc0
  441840:	mov	w1, #0xc8                  	// #200
  441844:	add	x2, x2, #0x4f7
  441848:	add	x3, x3, #0x5b0
  44184c:	bl	402a20 <snprintf@plt>
  441850:	ldp	x8, x0, [sp, #136]
  441854:	add	x1, sp, #0xc0
  441858:	mov	w2, wzr
  44185c:	blr	x8
  441860:	mov	w10, #0x1                   	// #1
  441864:	sxtb	w8, w19
  441868:	tbz	w8, #31, 441e60 <feof@plt+0x3f160>
  44186c:	ldp	x8, x9, [sp, #112]
  441870:	add	w20, w20, #0x7
  441874:	cbnz	x9, 4417fc <feof@plt+0x3eafc>
  441878:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44187c:	add	x19, x19, #0x454
  441880:	ldr	w9, [sp, #152]
  441884:	cbz	w9, 441edc <feof@plt+0x3f1dc>
  441888:	mov	x26, xzr
  44188c:	b	441f20 <feof@plt+0x3f220>
  441890:	sub	w8, w12, w11
  441894:	ldp	w11, w10, [x23, #12]
  441898:	ldr	w15, [sp, #64]
  44189c:	ldp	w12, w13, [x23, #4]
  4418a0:	ldr	x9, [sp, #184]
  4418a4:	udiv	w14, w8, w10
  4418a8:	add	w15, w14, w15
  4418ac:	ldp	x2, x3, [sp, #136]
  4418b0:	msub	w8, w14, w10, w8
  4418b4:	mul	w10, w12, w15
  4418b8:	add	w11, w11, w25
  4418bc:	udiv	w12, w15, w13
  4418c0:	udiv	w10, w10, w13
  4418c4:	msub	w12, w12, w13, w15
  4418c8:	add	x28, x28, x10
  4418cc:	add	w25, w11, w8
  4418d0:	str	w12, [sp, #64]
  4418d4:	cbz	x9, 441a0c <feof@plt+0x3ed0c>
  4418d8:	ldr	x8, [sp, #160]
  4418dc:	sub	x9, x9, #0x1
  4418e0:	mov	w10, #0x18                  	// #24
  4418e4:	mul	x10, x9, x10
  4418e8:	ldr	x10, [x8, x10]
  4418ec:	cmp	x10, x28
  4418f0:	b.ne	441a0c <feof@plt+0x3ed0c>  // b.any
  4418f4:	mov	w10, #0x18                  	// #24
  4418f8:	madd	x10, x9, x10, x8
  4418fc:	ldr	x10, [x10, #8]
  441900:	cmp	x10, x27
  441904:	b.ne	441a0c <feof@plt+0x3ed0c>  // b.any
  441908:	mov	w10, #0x18                  	// #24
  44190c:	madd	x8, x9, x10, x8
  441910:	ldr	w8, [x8, #16]
  441914:	cmp	w8, w25
  441918:	b.ne	441a0c <feof@plt+0x3ed0c>  // b.any
  44191c:	b	441a40 <feof@plt+0x3ed40>
  441920:	ldr	x8, [x23, #24]
  441924:	sub	w9, w12, #0x1
  441928:	ldrb	w20, [x8, w9, uxtw]
  44192c:	cbnz	w20, 441944 <feof@plt+0x3ec44>
  441930:	b	441a40 <feof@plt+0x3ed40>
  441934:	ldr	w8, [sp, #152]
  441938:	cbz	w8, 4419bc <feof@plt+0x3ecbc>
  44193c:	subs	w20, w20, #0x1
  441940:	b.eq	442554 <feof@plt+0x3f854>  // b.none
  441944:	mov	w26, wzr
  441948:	mov	w8, wzr
  44194c:	b	441958 <feof@plt+0x3ec58>
  441950:	add	w26, w26, #0x7
  441954:	tbz	w19, #31, 44193c <feof@plt+0x3ec3c>
  441958:	ldp	x10, x11, [sp, #112]
  44195c:	cbz	x11, 441934 <feof@plt+0x3ec34>
  441960:	add	x9, x10, #0x1
  441964:	sub	x11, x11, #0x1
  441968:	stp	x9, x11, [sp, #112]
  44196c:	ldrsb	w19, [x10]
  441970:	cmp	w26, #0x40
  441974:	b.cc	441950 <feof@plt+0x3ec50>  // b.lo, b.ul, b.last
  441978:	cbnz	w8, 441950 <feof@plt+0x3ec50>
  44197c:	ldr	w8, [sp, #104]
  441980:	ldr	x4, [sp, #96]
  441984:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441988:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44198c:	sub	w5, w9, w8
  441990:	add	x0, sp, #0xc0
  441994:	mov	w1, #0xc8                  	// #200
  441998:	add	x2, x2, #0x4f7
  44199c:	add	x3, x3, #0x5b0
  4419a0:	bl	402a20 <snprintf@plt>
  4419a4:	ldp	x8, x0, [sp, #136]
  4419a8:	add	x1, sp, #0xc0
  4419ac:	mov	w2, wzr
  4419b0:	blr	x8
  4419b4:	mov	w8, #0x1                   	// #1
  4419b8:	b	441950 <feof@plt+0x3ec50>
  4419bc:	ldr	w8, [sp, #104]
  4419c0:	ldr	x4, [sp, #96]
  4419c4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4419c8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4419cc:	sub	w5, w10, w8
  4419d0:	add	x0, sp, #0xc0
  4419d4:	mov	w1, #0xc8                  	// #200
  4419d8:	add	x2, x2, #0x4f7
  4419dc:	add	x3, x3, #0x4e7
  4419e0:	bl	402a20 <snprintf@plt>
  4419e4:	ldp	x8, x0, [sp, #136]
  4419e8:	add	x1, sp, #0xc0
  4419ec:	mov	w2, wzr
  4419f0:	blr	x8
  4419f4:	mov	w8, #0x1                   	// #1
  4419f8:	str	w8, [sp, #152]
  4419fc:	b	44193c <feof@plt+0x3ec3c>
  441a00:	ldr	x9, [sp, #184]
  441a04:	ldp	x2, x3, [sp, #136]
  441a08:	cbnz	x9, 4418d8 <feof@plt+0x3ebd8>
  441a0c:	add	x4, sp, #0xa0
  441a10:	mov	w1, #0x18                  	// #24
  441a14:	mov	x0, x24
  441a18:	bl	439d04 <feof@plt+0x37004>
  441a1c:	cbz	x0, 441a40 <feof@plt+0x3ed40>
  441a20:	ldr	x8, [x26, #16]
  441a24:	str	w25, [x0, #16]
  441a28:	add	x8, x8, x28
  441a2c:	stp	x8, x27, [x0]
  441a30:	ldr	x8, [sp, #184]
  441a34:	str	w8, [x0, #20]
  441a38:	add	x8, x8, #0x1
  441a3c:	str	x8, [sp, #184]
  441a40:	ldr	x20, [sp, #120]
  441a44:	ldr	w0, [sp, #64]
  441a48:	mov	w10, w25
  441a4c:	mov	x2, x27
  441a50:	mov	x1, x28
  441a54:	mov	x28, x1
  441a58:	mov	x27, x2
  441a5c:	mov	w25, w10
  441a60:	cbnz	x20, 4417b0 <feof@plt+0x3eab0>
  441a64:	b	4426e0 <feof@plt+0x3f9e0>
  441a68:	cbz	x9, 441b00 <feof@plt+0x3ee00>
  441a6c:	mov	w10, wzr
  441a70:	mov	w26, wzr
  441a74:	mov	x20, xzr
  441a78:	add	x11, x8, #0x1
  441a7c:	sub	x9, x9, #0x1
  441a80:	stp	x11, x9, [sp, #112]
  441a84:	ldrb	w19, [x8]
  441a88:	cmp	w26, #0x3f
  441a8c:	b.hi	441aa0 <feof@plt+0x3eda0>  // b.pmore
  441a90:	and	x8, x19, #0x7f
  441a94:	lsl	x8, x8, x26
  441a98:	orr	x20, x8, x20
  441a9c:	b	441ae0 <feof@plt+0x3ede0>
  441aa0:	cbnz	w10, 441ae0 <feof@plt+0x3ede0>
  441aa4:	ldr	w8, [sp, #104]
  441aa8:	ldr	x4, [sp, #96]
  441aac:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ab0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ab4:	sub	w5, w11, w8
  441ab8:	add	x0, sp, #0xc0
  441abc:	mov	w1, #0xc8                  	// #200
  441ac0:	add	x2, x2, #0x4f7
  441ac4:	add	x3, x3, #0x5b0
  441ac8:	bl	402a20 <snprintf@plt>
  441acc:	ldp	x8, x0, [sp, #136]
  441ad0:	add	x1, sp, #0xc0
  441ad4:	mov	w2, wzr
  441ad8:	blr	x8
  441adc:	mov	w10, #0x1                   	// #1
  441ae0:	sxtb	w8, w19
  441ae4:	tbz	w8, #31, 441e6c <feof@plt+0x3f16c>
  441ae8:	ldp	x8, x9, [sp, #112]
  441aec:	add	w26, w26, #0x7
  441af0:	cbnz	x9, 441a78 <feof@plt+0x3ed78>
  441af4:	ldr	x26, [sp]
  441af8:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441afc:	add	x19, x19, #0x454
  441b00:	ldr	w9, [sp, #152]
  441b04:	cbz	w9, 441fc8 <feof@plt+0x3f2c8>
  441b08:	mov	x20, xzr
  441b0c:	b	44200c <feof@plt+0x3f30c>
  441b10:	cbz	x9, 441bac <feof@plt+0x3eeac>
  441b14:	mov	w10, wzr
  441b18:	mov	x20, xzr
  441b1c:	mov	w26, #0x7                   	// #7
  441b20:	add	x11, x8, #0x1
  441b24:	sub	x9, x9, #0x1
  441b28:	stp	x11, x9, [sp, #112]
  441b2c:	ldrb	w19, [x8]
  441b30:	sub	w8, w26, #0x7
  441b34:	cmp	w8, #0x3f
  441b38:	b.hi	441b4c <feof@plt+0x3ee4c>  // b.pmore
  441b3c:	and	x9, x19, #0x7f
  441b40:	lsl	x8, x9, x8
  441b44:	orr	x20, x8, x20
  441b48:	b	441b8c <feof@plt+0x3ee8c>
  441b4c:	cbnz	w10, 441b8c <feof@plt+0x3ee8c>
  441b50:	ldr	w8, [sp, #104]
  441b54:	ldr	x4, [sp, #96]
  441b58:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441b5c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441b60:	sub	w5, w11, w8
  441b64:	add	x0, sp, #0xc0
  441b68:	mov	w1, #0xc8                  	// #200
  441b6c:	add	x2, x2, #0x4f7
  441b70:	add	x3, x3, #0x5a9
  441b74:	bl	402a20 <snprintf@plt>
  441b78:	ldp	x8, x0, [sp, #136]
  441b7c:	add	x1, sp, #0xc0
  441b80:	mov	w2, wzr
  441b84:	blr	x8
  441b88:	mov	w10, #0x1                   	// #1
  441b8c:	sxtb	w8, w19
  441b90:	tbz	w8, #31, 441e7c <feof@plt+0x3f17c>
  441b94:	ldp	x8, x9, [sp, #112]
  441b98:	add	w26, w26, #0x7
  441b9c:	cbnz	x9, 441b20 <feof@plt+0x3ee20>
  441ba0:	ldr	x26, [sp]
  441ba4:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ba8:	add	x19, x19, #0x454
  441bac:	ldr	w9, [sp, #152]
  441bb0:	cbz	w9, 442034 <feof@plt+0x3f334>
  441bb4:	mov	x8, xzr
  441bb8:	add	w25, w25, w8
  441bbc:	b	441a40 <feof@plt+0x3ed40>
  441bc0:	cbz	x9, 441c58 <feof@plt+0x3ef58>
  441bc4:	mov	w10, wzr
  441bc8:	mov	w26, wzr
  441bcc:	mov	x20, xzr
  441bd0:	add	x11, x8, #0x1
  441bd4:	sub	x9, x9, #0x1
  441bd8:	stp	x11, x9, [sp, #112]
  441bdc:	ldrb	w19, [x8]
  441be0:	cmp	w26, #0x3f
  441be4:	b.hi	441bf8 <feof@plt+0x3eef8>  // b.pmore
  441be8:	and	x8, x19, #0x7f
  441bec:	lsl	x8, x8, x26
  441bf0:	orr	x20, x8, x20
  441bf4:	b	441c38 <feof@plt+0x3ef38>
  441bf8:	cbnz	w10, 441c38 <feof@plt+0x3ef38>
  441bfc:	ldr	w8, [sp, #104]
  441c00:	ldr	x4, [sp, #96]
  441c04:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441c08:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441c0c:	sub	w5, w11, w8
  441c10:	add	x0, sp, #0xc0
  441c14:	mov	w1, #0xc8                  	// #200
  441c18:	add	x2, x2, #0x4f7
  441c1c:	add	x3, x3, #0x5b0
  441c20:	bl	402a20 <snprintf@plt>
  441c24:	ldp	x8, x0, [sp, #136]
  441c28:	add	x1, sp, #0xc0
  441c2c:	mov	w2, wzr
  441c30:	blr	x8
  441c34:	mov	w10, #0x1                   	// #1
  441c38:	sxtb	w8, w19
  441c3c:	tbz	w8, #31, 441eb0 <feof@plt+0x3f1b0>
  441c40:	ldp	x8, x9, [sp, #112]
  441c44:	add	w26, w26, #0x7
  441c48:	cbnz	x9, 441bd0 <feof@plt+0x3eed0>
  441c4c:	ldr	x26, [sp]
  441c50:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441c54:	add	x19, x19, #0x454
  441c58:	ldr	w9, [sp, #152]
  441c5c:	cbnz	w9, 442288 <feof@plt+0x3f588>
  441c60:	ldr	w9, [sp, #104]
  441c64:	ldr	x4, [sp, #96]
  441c68:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441c6c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441c70:	sub	w5, w8, w9
  441c74:	add	x0, sp, #0xc0
  441c78:	mov	w1, #0xc8                  	// #200
  441c7c:	add	x2, x2, #0x4f7
  441c80:	add	x3, x3, #0x4e7
  441c84:	bl	402a20 <snprintf@plt>
  441c88:	ldp	x8, x0, [sp, #136]
  441c8c:	add	x1, sp, #0xc0
  441c90:	mov	w2, wzr
  441c94:	blr	x8
  441c98:	mov	w8, #0x1                   	// #1
  441c9c:	adrp	x27, 455000 <_obstack_begin_1@@Base+0xa4>
  441ca0:	str	w8, [sp, #152]
  441ca4:	add	x27, x27, #0xce0
  441ca8:	b	441a40 <feof@plt+0x3ed40>
  441cac:	cbz	x9, 441df0 <feof@plt+0x3f0f0>
  441cb0:	mov	w10, wzr
  441cb4:	mov	w20, wzr
  441cb8:	add	x11, x8, #0x1
  441cbc:	sub	x9, x9, #0x1
  441cc0:	stp	x11, x9, [sp, #112]
  441cc4:	ldrsb	w19, [x8]
  441cc8:	cmp	w20, #0x40
  441ccc:	b.cc	441d10 <feof@plt+0x3f010>  // b.lo, b.ul, b.last
  441cd0:	cbnz	w10, 441d10 <feof@plt+0x3f010>
  441cd4:	ldr	w8, [sp, #104]
  441cd8:	ldr	x4, [sp, #96]
  441cdc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ce0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ce4:	sub	w5, w11, w8
  441ce8:	add	x0, sp, #0xc0
  441cec:	mov	w1, #0xc8                  	// #200
  441cf0:	add	x2, x2, #0x4f7
  441cf4:	add	x3, x3, #0x5b0
  441cf8:	bl	402a20 <snprintf@plt>
  441cfc:	ldp	x8, x0, [sp, #136]
  441d00:	add	x1, sp, #0xc0
  441d04:	mov	w2, wzr
  441d08:	blr	x8
  441d0c:	mov	w10, #0x1                   	// #1
  441d10:	tbz	w19, #31, 442558 <feof@plt+0x3f858>
  441d14:	ldp	x8, x9, [sp, #112]
  441d18:	add	w20, w20, #0x7
  441d1c:	cbnz	x9, 441cb8 <feof@plt+0x3efb8>
  441d20:	b	441de8 <feof@plt+0x3f0e8>
  441d24:	ldr	w8, [x23, #16]
  441d28:	mov	w9, #0xff                  	// #255
  441d2c:	sub	w9, w9, w11
  441d30:	ldp	w10, w11, [x23, #4]
  441d34:	udiv	w8, w9, w8
  441d38:	ldr	w9, [sp, #64]
  441d3c:	add	w8, w8, w9
  441d40:	mul	w9, w10, w8
  441d44:	udiv	w10, w8, w11
  441d48:	udiv	w9, w9, w11
  441d4c:	msub	w8, w10, w11, w8
  441d50:	add	x28, x28, x9
  441d54:	str	w8, [sp, #64]
  441d58:	b	441a40 <feof@plt+0x3ed40>
  441d5c:	cmp	x9, #0x1
  441d60:	b.hi	441e3c <feof@plt+0x3f13c>  // b.pmore
  441d64:	ldr	w9, [sp, #152]
  441d68:	cbz	w9, 442080 <feof@plt+0x3f380>
  441d6c:	mov	x8, xzr
  441d70:	b	4420cc <feof@plt+0x3f3cc>
  441d74:	cbz	x9, 441df0 <feof@plt+0x3f0f0>
  441d78:	mov	w10, wzr
  441d7c:	mov	w20, wzr
  441d80:	add	x11, x8, #0x1
  441d84:	sub	x9, x9, #0x1
  441d88:	stp	x11, x9, [sp, #112]
  441d8c:	ldrsb	w19, [x8]
  441d90:	cmp	w20, #0x40
  441d94:	b.cc	441dd8 <feof@plt+0x3f0d8>  // b.lo, b.ul, b.last
  441d98:	cbnz	w10, 441dd8 <feof@plt+0x3f0d8>
  441d9c:	ldr	w8, [sp, #104]
  441da0:	ldr	x4, [sp, #96]
  441da4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441da8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441dac:	sub	w5, w11, w8
  441db0:	add	x0, sp, #0xc0
  441db4:	mov	w1, #0xc8                  	// #200
  441db8:	add	x2, x2, #0x4f7
  441dbc:	add	x3, x3, #0x5b0
  441dc0:	bl	402a20 <snprintf@plt>
  441dc4:	ldp	x8, x0, [sp, #136]
  441dc8:	add	x1, sp, #0xc0
  441dcc:	mov	w2, wzr
  441dd0:	blr	x8
  441dd4:	mov	w10, #0x1                   	// #1
  441dd8:	tbz	w19, #31, 442558 <feof@plt+0x3f858>
  441ddc:	ldp	x8, x9, [sp, #112]
  441de0:	add	w20, w20, #0x7
  441de4:	cbnz	x9, 441d80 <feof@plt+0x3f080>
  441de8:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441dec:	add	x19, x19, #0x454
  441df0:	ldr	w9, [sp, #152]
  441df4:	cbnz	w9, 441a40 <feof@plt+0x3ed40>
  441df8:	ldr	w9, [sp, #104]
  441dfc:	ldr	x4, [sp, #96]
  441e00:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441e04:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441e08:	sub	w5, w8, w9
  441e0c:	add	x0, sp, #0xc0
  441e10:	mov	w1, #0xc8                  	// #200
  441e14:	add	x2, x2, #0x4f7
  441e18:	add	x3, x3, #0x4e7
  441e1c:	bl	402a20 <snprintf@plt>
  441e20:	ldp	x8, x0, [sp, #136]
  441e24:	add	x1, sp, #0xc0
  441e28:	mov	w2, wzr
  441e2c:	blr	x8
  441e30:	mov	w8, #0x1                   	// #1
  441e34:	str	w8, [sp, #152]
  441e38:	b	441a40 <feof@plt+0x3ed40>
  441e3c:	ldr	w8, [sp, #128]
  441e40:	add	x9, x10, #0x3
  441e44:	sub	x11, x20, #0x3
  441e48:	stp	x9, x11, [sp, #112]
  441e4c:	cbz	w8, 4420c8 <feof@plt+0x3f3c8>
  441e50:	ldurh	w8, [x10, #1]
  441e54:	lsl	x8, x8, #48
  441e58:	rev	x8, x8
  441e5c:	b	4420cc <feof@plt+0x3f3cc>
  441e60:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441e64:	add	x19, x19, #0x454
  441e68:	b	441f20 <feof@plt+0x3f220>
  441e6c:	ldr	x26, [sp]
  441e70:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441e74:	add	x19, x19, #0x454
  441e78:	b	44200c <feof@plt+0x3f30c>
  441e7c:	cmp	w26, #0x40
  441e80:	and	w8, w19, #0x40
  441e84:	cset	w9, cc  // cc = lo, ul, last
  441e88:	mov	x10, #0xffffffffffffffff    	// #-1
  441e8c:	lsl	x10, x10, x26
  441e90:	tst	w9, w8, lsr #6
  441e94:	ldr	x26, [sp]
  441e98:	csel	x8, x10, xzr, ne  // ne = any
  441e9c:	orr	x8, x20, x8
  441ea0:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ea4:	add	x19, x19, #0x454
  441ea8:	add	w25, w25, w8
  441eac:	b	441a40 <feof@plt+0x3ed40>
  441eb0:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441eb4:	add	x19, x19, #0x454
  441eb8:	cbz	x20, 442284 <feof@plt+0x3f584>
  441ebc:	ldr	x9, [x23, #48]
  441ec0:	ldr	x26, [sp]
  441ec4:	sub	x8, x20, #0x1
  441ec8:	cmp	x8, x9
  441ecc:	b.cs	4427a4 <feof@plt+0x3faa4>  // b.hs, b.nlast
  441ed0:	ldr	x9, [x23, #56]
  441ed4:	ldr	x27, [x9, x8, lsl #3]
  441ed8:	b	441a40 <feof@plt+0x3ed40>
  441edc:	ldr	w9, [sp, #104]
  441ee0:	ldr	x4, [sp, #96]
  441ee4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441ee8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441eec:	sub	w5, w8, w9
  441ef0:	add	x0, sp, #0xc0
  441ef4:	mov	w1, #0xc8                  	// #200
  441ef8:	add	x2, x2, #0x4f7
  441efc:	add	x3, x3, #0x4e7
  441f00:	bl	402a20 <snprintf@plt>
  441f04:	ldp	x8, x0, [sp, #136]
  441f08:	add	x1, sp, #0xc0
  441f0c:	mov	w2, wzr
  441f10:	blr	x8
  441f14:	mov	x26, xzr
  441f18:	mov	w8, #0x1                   	// #1
  441f1c:	str	w8, [sp, #152]
  441f20:	ldp	x8, x9, [sp, #112]
  441f24:	cbz	x9, 441fb8 <feof@plt+0x3f2b8>
  441f28:	add	x10, x8, #0x1
  441f2c:	sub	x20, x9, #0x1
  441f30:	stp	x10, x20, [sp, #112]
  441f34:	str	x10, [sp, #40]
  441f38:	ldrb	w10, [x8]
  441f3c:	sub	w10, w10, #0x1
  441f40:	cmp	w10, #0x3
  441f44:	b.hi	44211c <feof@plt+0x3f41c>  // b.pmore
  441f48:	adrp	x13, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441f4c:	add	x13, x13, #0x46e
  441f50:	adr	x11, 441a54 <feof@plt+0x3ed54>
  441f54:	ldrh	w12, [x13, x10, lsl #1]
  441f58:	add	x11, x11, x12, lsl #2
  441f5c:	ldr	x2, [sp, #48]
  441f60:	ldr	x26, [sp]
  441f64:	mov	w0, wzr
  441f68:	mov	x1, xzr
  441f6c:	mov	w10, #0x1                   	// #1
  441f70:	br	x11
  441f74:	ldr	x10, [sp, #8]
  441f78:	ldr	w10, [x10, #48]
  441f7c:	sub	w10, w10, #0x1
  441f80:	cmp	w10, #0x7
  441f84:	b.hi	4425b8 <feof@plt+0x3f8b8>  // b.pmore
  441f88:	adrp	x13, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441f8c:	add	x13, x13, #0x476
  441f90:	adr	x11, 441fa0 <feof@plt+0x3f2a0>
  441f94:	ldrh	w12, [x13, x10, lsl #1]
  441f98:	add	x11, x11, x12, lsl #2
  441f9c:	br	x11
  441fa0:	cbz	x20, 44266c <feof@plt+0x3f96c>
  441fa4:	add	x10, x8, #0x2
  441fa8:	sub	x9, x9, #0x2
  441fac:	stp	x10, x9, [sp, #112]
  441fb0:	ldrb	w28, [x8, #1]
  441fb4:	b	4426d4 <feof@plt+0x3f9d4>
  441fb8:	ldr	w9, [sp, #152]
  441fbc:	cbz	w9, 4420d8 <feof@plt+0x3f3d8>
  441fc0:	mov	x20, xzr
  441fc4:	b	44211c <feof@plt+0x3f41c>
  441fc8:	ldr	w9, [sp, #104]
  441fcc:	ldr	x4, [sp, #96]
  441fd0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441fd4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  441fd8:	sub	w5, w8, w9
  441fdc:	add	x0, sp, #0xc0
  441fe0:	mov	w1, #0xc8                  	// #200
  441fe4:	add	x2, x2, #0x4f7
  441fe8:	add	x3, x3, #0x4e7
  441fec:	bl	402a20 <snprintf@plt>
  441ff0:	ldp	x8, x0, [sp, #136]
  441ff4:	add	x1, sp, #0xc0
  441ff8:	mov	w2, wzr
  441ffc:	blr	x8
  442000:	mov	x20, xzr
  442004:	mov	w8, #0x1                   	// #1
  442008:	str	w8, [sp, #152]
  44200c:	ldr	w10, [sp, #64]
  442010:	ldp	w8, w9, [x23, #4]
  442014:	add	x10, x20, w10, uxtw
  442018:	mul	x8, x10, x8
  44201c:	udiv	x11, x10, x9
  442020:	udiv	x8, x8, x9
  442024:	add	x28, x8, x28
  442028:	msub	w8, w11, w9, w10
  44202c:	str	w8, [sp, #64]
  442030:	b	441a40 <feof@plt+0x3ed40>
  442034:	ldr	w9, [sp, #104]
  442038:	ldr	x4, [sp, #96]
  44203c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442040:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442044:	sub	w5, w8, w9
  442048:	add	x0, sp, #0xc0
  44204c:	mov	w1, #0xc8                  	// #200
  442050:	add	x2, x2, #0x4f7
  442054:	add	x3, x3, #0x4e7
  442058:	bl	402a20 <snprintf@plt>
  44205c:	ldp	x8, x0, [sp, #136]
  442060:	add	x1, sp, #0xc0
  442064:	mov	w2, wzr
  442068:	blr	x8
  44206c:	mov	x8, xzr
  442070:	mov	w9, #0x1                   	// #1
  442074:	str	w9, [sp, #152]
  442078:	add	w25, w25, w8
  44207c:	b	441a40 <feof@plt+0x3ed40>
  442080:	ldr	w9, [sp, #104]
  442084:	ldr	x4, [sp, #96]
  442088:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44208c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442090:	sub	w5, w8, w9
  442094:	add	x0, sp, #0xc0
  442098:	mov	w1, #0xc8                  	// #200
  44209c:	add	x2, x2, #0x4f7
  4420a0:	add	x3, x3, #0x4e7
  4420a4:	bl	402a20 <snprintf@plt>
  4420a8:	ldp	x8, x0, [sp, #136]
  4420ac:	add	x1, sp, #0xc0
  4420b0:	mov	w2, wzr
  4420b4:	blr	x8
  4420b8:	mov	w9, #0x1                   	// #1
  4420bc:	mov	x8, xzr
  4420c0:	str	w9, [sp, #152]
  4420c4:	b	4420cc <feof@plt+0x3f3cc>
  4420c8:	ldurh	w8, [x10, #1]
  4420cc:	str	wzr, [sp, #64]
  4420d0:	add	x28, x8, x28
  4420d4:	b	441a40 <feof@plt+0x3ed40>
  4420d8:	ldr	w9, [sp, #104]
  4420dc:	ldr	x4, [sp, #96]
  4420e0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4420e4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4420e8:	sub	w5, w8, w9
  4420ec:	add	x0, sp, #0xc0
  4420f0:	mov	w1, #0xc8                  	// #200
  4420f4:	add	x2, x2, #0x4f7
  4420f8:	add	x3, x3, #0x4e7
  4420fc:	bl	402a20 <snprintf@plt>
  442100:	ldp	x8, x0, [sp, #136]
  442104:	add	x1, sp, #0xc0
  442108:	mov	w2, wzr
  44210c:	blr	x8
  442110:	ldr	x20, [sp, #120]
  442114:	mov	w8, #0x1                   	// #1
  442118:	str	w8, [sp, #152]
  44211c:	sub	x8, x26, #0x1
  442120:	subs	x20, x20, x8
  442124:	b.cc	442794 <feof@plt+0x3fa94>  // b.lo, b.ul, b.last
  442128:	ldr	x9, [sp, #112]
  44212c:	ldr	w0, [sp, #64]
  442130:	ldr	x26, [sp]
  442134:	mov	w10, w25
  442138:	add	x8, x9, x8
  44213c:	stp	x8, x20, [sp, #112]
  442140:	b	441a4c <feof@plt+0x3ed4c>
  442144:	ldr	x19, [sp, #40]
  442148:	mov	x1, x20
  44214c:	mov	x0, x19
  442150:	bl	402c60 <strnlen@plt>
  442154:	add	x8, x0, #0x1
  442158:	cmp	x20, x8
  44215c:	b.cc	4427fc <feof@plt+0x3fafc>  // b.lo, b.ul, b.last
  442160:	add	x10, x19, x8
  442164:	subs	x9, x20, x8
  442168:	stp	x10, x9, [sp, #112]
  44216c:	b.eq	4422e4 <feof@plt+0x3f5e4>  // b.none
  442170:	mov	w8, wzr
  442174:	mov	w26, wzr
  442178:	mov	x20, xzr
  44217c:	add	x11, x10, #0x1
  442180:	sub	x9, x9, #0x1
  442184:	stp	x11, x9, [sp, #112]
  442188:	ldrb	w19, [x10]
  44218c:	cmp	w26, #0x3f
  442190:	b.hi	4421a4 <feof@plt+0x3f4a4>  // b.pmore
  442194:	and	x9, x19, #0x7f
  442198:	lsl	x9, x9, x26
  44219c:	orr	x20, x9, x20
  4421a0:	b	4421e4 <feof@plt+0x3f4e4>
  4421a4:	cbnz	w8, 4421e4 <feof@plt+0x3f4e4>
  4421a8:	ldr	w8, [sp, #104]
  4421ac:	ldr	x4, [sp, #96]
  4421b0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4421b4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4421b8:	sub	w5, w11, w8
  4421bc:	add	x0, sp, #0xc0
  4421c0:	mov	w1, #0xc8                  	// #200
  4421c4:	add	x2, x2, #0x4f7
  4421c8:	add	x3, x3, #0x5b0
  4421cc:	bl	402a20 <snprintf@plt>
  4421d0:	ldp	x8, x0, [sp, #136]
  4421d4:	add	x1, sp, #0xc0
  4421d8:	mov	w2, wzr
  4421dc:	blr	x8
  4421e0:	mov	w8, #0x1                   	// #1
  4421e4:	sxtb	w9, w19
  4421e8:	tbz	w9, #31, 44233c <feof@plt+0x3f63c>
  4421ec:	ldr	x9, [sp, #120]
  4421f0:	cbz	x9, 4422e4 <feof@plt+0x3f5e4>
  4421f4:	ldr	x10, [sp, #112]
  4421f8:	add	w26, w26, #0x7
  4421fc:	b	44217c <feof@plt+0x3f47c>
  442200:	cbz	x20, 442294 <feof@plt+0x3f594>
  442204:	ldr	x10, [sp, #40]
  442208:	mov	w8, wzr
  44220c:	mov	w26, wzr
  442210:	add	x9, x10, #0x1
  442214:	mov	x11, x10
  442218:	sub	x10, x20, #0x1
  44221c:	stp	x9, x10, [sp, #112]
  442220:	ldrsb	w19, [x11]
  442224:	cbnz	w8, 44226c <feof@plt+0x3f56c>
  442228:	cmp	w26, #0x40
  44222c:	b.cc	44226c <feof@plt+0x3f56c>  // b.lo, b.ul, b.last
  442230:	ldr	w8, [sp, #104]
  442234:	ldr	x4, [sp, #96]
  442238:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44223c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442240:	sub	w5, w9, w8
  442244:	add	x0, sp, #0xc0
  442248:	mov	w1, #0xc8                  	// #200
  44224c:	add	x2, x2, #0x4f7
  442250:	add	x3, x3, #0x5b0
  442254:	bl	402a20 <snprintf@plt>
  442258:	ldp	x8, x0, [sp, #136]
  44225c:	add	x1, sp, #0xc0
  442260:	mov	w2, wzr
  442264:	blr	x8
  442268:	mov	w8, #0x1                   	// #1
  44226c:	tbz	w19, #31, 442554 <feof@plt+0x3f854>
  442270:	ldr	x20, [sp, #120]
  442274:	cbz	x20, 442294 <feof@plt+0x3f594>
  442278:	ldr	x10, [sp, #112]
  44227c:	add	w26, w26, #0x7
  442280:	b	442210 <feof@plt+0x3f510>
  442284:	ldr	x26, [sp]
  442288:	adrp	x27, 455000 <_obstack_begin_1@@Base+0xa4>
  44228c:	add	x27, x27, #0xce0
  442290:	b	441a40 <feof@plt+0x3ed40>
  442294:	ldr	w8, [sp, #152]
  442298:	cbnz	w8, 442554 <feof@plt+0x3f854>
  44229c:	ldr	w8, [sp, #112]
  4422a0:	ldr	w9, [sp, #104]
  4422a4:	ldr	x4, [sp, #96]
  4422a8:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4422ac:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4422b0:	sub	w5, w8, w9
  4422b4:	add	x0, sp, #0xc0
  4422b8:	mov	w1, #0xc8                  	// #200
  4422bc:	add	x2, x2, #0x4f7
  4422c0:	add	x3, x3, #0x4e7
  4422c4:	bl	402a20 <snprintf@plt>
  4422c8:	ldp	x8, x0, [sp, #136]
  4422cc:	add	x1, sp, #0xc0
  4422d0:	mov	w2, wzr
  4422d4:	blr	x8
  4422d8:	mov	w8, #0x1                   	// #1
  4422dc:	str	w8, [sp, #152]
  4422e0:	b	442554 <feof@plt+0x3f854>
  4422e4:	ldr	w8, [sp, #152]
  4422e8:	cbz	w8, 4422f4 <feof@plt+0x3f5f4>
  4422ec:	mov	x20, xzr
  4422f0:	b	44233c <feof@plt+0x3f63c>
  4422f4:	ldr	w8, [sp, #112]
  4422f8:	ldr	w9, [sp, #104]
  4422fc:	ldr	x4, [sp, #96]
  442300:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442304:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442308:	sub	w5, w8, w9
  44230c:	add	x0, sp, #0xc0
  442310:	mov	w1, #0xc8                  	// #200
  442314:	add	x2, x2, #0x4f7
  442318:	add	x3, x3, #0x4e7
  44231c:	bl	402a20 <snprintf@plt>
  442320:	ldp	x8, x0, [sp, #136]
  442324:	add	x1, sp, #0xc0
  442328:	mov	w2, wzr
  44232c:	blr	x8
  442330:	mov	w8, #0x1                   	// #1
  442334:	mov	x20, xzr
  442338:	str	w8, [sp, #152]
  44233c:	mov	w26, wzr
  442340:	mov	w8, wzr
  442344:	b	442350 <feof@plt+0x3f650>
  442348:	add	w26, w26, #0x7
  44234c:	tbz	w19, #31, 4423fc <feof@plt+0x3f6fc>
  442350:	ldp	x10, x11, [sp, #112]
  442354:	cbz	x11, 4423b4 <feof@plt+0x3f6b4>
  442358:	add	x9, x10, #0x1
  44235c:	sub	x11, x11, #0x1
  442360:	stp	x9, x11, [sp, #112]
  442364:	ldrsb	w19, [x10]
  442368:	cmp	w26, #0x40
  44236c:	b.cc	442348 <feof@plt+0x3f648>  // b.lo, b.ul, b.last
  442370:	cbnz	w8, 442348 <feof@plt+0x3f648>
  442374:	ldr	w8, [sp, #104]
  442378:	ldr	x4, [sp, #96]
  44237c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442380:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442384:	sub	w5, w9, w8
  442388:	add	x0, sp, #0xc0
  44238c:	mov	w1, #0xc8                  	// #200
  442390:	add	x2, x2, #0x4f7
  442394:	add	x3, x3, #0x5b0
  442398:	bl	402a20 <snprintf@plt>
  44239c:	ldp	x8, x0, [sp, #136]
  4423a0:	add	x1, sp, #0xc0
  4423a4:	mov	w2, wzr
  4423a8:	blr	x8
  4423ac:	mov	w8, #0x1                   	// #1
  4423b0:	b	442348 <feof@plt+0x3f648>
  4423b4:	ldr	w8, [sp, #152]
  4423b8:	cbnz	w8, 4423fc <feof@plt+0x3f6fc>
  4423bc:	ldr	w8, [sp, #104]
  4423c0:	ldr	x4, [sp, #96]
  4423c4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4423c8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4423cc:	sub	w5, w10, w8
  4423d0:	add	x0, sp, #0xc0
  4423d4:	mov	w1, #0xc8                  	// #200
  4423d8:	add	x2, x2, #0x4f7
  4423dc:	add	x3, x3, #0x4e7
  4423e0:	bl	402a20 <snprintf@plt>
  4423e4:	ldp	x8, x0, [sp, #136]
  4423e8:	add	x1, sp, #0xc0
  4423ec:	mov	w2, wzr
  4423f0:	blr	x8
  4423f4:	mov	w8, #0x1                   	// #1
  4423f8:	str	w8, [sp, #152]
  4423fc:	mov	w26, wzr
  442400:	mov	w8, wzr
  442404:	b	442410 <feof@plt+0x3f710>
  442408:	add	w26, w26, #0x7
  44240c:	tbz	w19, #31, 4424bc <feof@plt+0x3f7bc>
  442410:	ldp	x10, x11, [sp, #112]
  442414:	cbz	x11, 442474 <feof@plt+0x3f774>
  442418:	add	x9, x10, #0x1
  44241c:	sub	x11, x11, #0x1
  442420:	stp	x9, x11, [sp, #112]
  442424:	ldrsb	w19, [x10]
  442428:	cmp	w26, #0x40
  44242c:	b.cc	442408 <feof@plt+0x3f708>  // b.lo, b.ul, b.last
  442430:	cbnz	w8, 442408 <feof@plt+0x3f708>
  442434:	ldr	w8, [sp, #104]
  442438:	ldr	x4, [sp, #96]
  44243c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442440:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442444:	sub	w5, w9, w8
  442448:	add	x0, sp, #0xc0
  44244c:	mov	w1, #0xc8                  	// #200
  442450:	add	x2, x2, #0x4f7
  442454:	add	x3, x3, #0x5b0
  442458:	bl	402a20 <snprintf@plt>
  44245c:	ldp	x8, x0, [sp, #136]
  442460:	add	x1, sp, #0xc0
  442464:	mov	w2, wzr
  442468:	blr	x8
  44246c:	mov	w8, #0x1                   	// #1
  442470:	b	442408 <feof@plt+0x3f708>
  442474:	ldr	w8, [sp, #152]
  442478:	cbnz	w8, 4424bc <feof@plt+0x3f7bc>
  44247c:	ldr	w8, [sp, #104]
  442480:	ldr	x4, [sp, #96]
  442484:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442488:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44248c:	sub	w5, w10, w8
  442490:	add	x0, sp, #0xc0
  442494:	mov	w1, #0xc8                  	// #200
  442498:	add	x2, x2, #0x4f7
  44249c:	add	x3, x3, #0x4e7
  4424a0:	bl	402a20 <snprintf@plt>
  4424a4:	ldp	x8, x0, [sp, #136]
  4424a8:	add	x1, sp, #0xc0
  4424ac:	mov	w2, wzr
  4424b0:	blr	x8
  4424b4:	mov	w8, #0x1                   	// #1
  4424b8:	str	w8, [sp, #152]
  4424bc:	ldr	x27, [sp, #40]
  4424c0:	ldrb	w8, [x27]
  4424c4:	cmp	w8, #0x2f
  4424c8:	b.eq	4426d4 <feof@plt+0x3f9d4>  // b.none
  4424cc:	ldr	x8, [sp, #32]
  4424d0:	cbz	w20, 4424ec <feof@plt+0x3f7ec>
  4424d4:	ldr	x9, [x23, #32]
  4424d8:	sub	w8, w20, #0x1
  4424dc:	cmp	x8, x9
  4424e0:	b.cs	442850 <feof@plt+0x3fb50>  // b.hs, b.nlast
  4424e4:	ldr	x9, [x23, #40]
  4424e8:	add	x8, x9, x8, lsl #3
  4424ec:	ldr	x26, [x8]
  4424f0:	mov	x0, x26
  4424f4:	bl	4026d0 <strlen@plt>
  4424f8:	ldr	x19, [sp, #40]
  4424fc:	mov	x20, x0
  442500:	mov	x0, x19
  442504:	bl	4026d0 <strlen@plt>
  442508:	ldr	x24, [sp, #88]
  44250c:	ldp	x2, x3, [sp, #136]
  442510:	add	x8, x20, x0
  442514:	str	x0, [sp, #24]
  442518:	add	x1, x8, #0x2
  44251c:	mov	x0, x24
  442520:	bl	439a30 <feof@plt+0x36d30>
  442524:	cbz	x0, 44279c <feof@plt+0x3fa9c>
  442528:	mov	x1, x26
  44252c:	mov	x2, x20
  442530:	mov	x27, x0
  442534:	bl	402640 <memcpy@plt>
  442538:	add	x0, x27, x20
  44253c:	mov	w8, #0x2f                  	// #47
  442540:	strb	w8, [x0], #1
  442544:	ldr	x8, [sp, #24]
  442548:	mov	x1, x19
  44254c:	add	x2, x8, #0x1
  442550:	bl	402640 <memcpy@plt>
  442554:	ldr	x26, [sp]
  442558:	adrp	x19, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44255c:	add	x19, x19, #0x454
  442560:	b	441a40 <feof@plt+0x3ed40>
  442564:	cmp	x20, #0x1
  442568:	b.hi	442624 <feof@plt+0x3f924>  // b.pmore
  44256c:	ldr	w8, [sp, #152]
  442570:	cbnz	w8, 44260c <feof@plt+0x3f90c>
  442574:	ldr	w8, [sp, #104]
  442578:	ldr	x9, [sp, #40]
  44257c:	ldr	x4, [sp, #96]
  442580:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442584:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442588:	sub	w5, w9, w8
  44258c:	add	x0, sp, #0xc0
  442590:	mov	w1, #0xc8                  	// #200
  442594:	add	x2, x2, #0x4f7
  442598:	add	x3, x3, #0x4e7
  44259c:	bl	402a20 <snprintf@plt>
  4425a0:	ldp	x8, x0, [sp, #136]
  4425a4:	add	x1, sp, #0xc0
  4425a8:	mov	w2, wzr
  4425ac:	blr	x8
  4425b0:	mov	x28, xzr
  4425b4:	b	4426cc <feof@plt+0x3f9cc>
  4425b8:	ldr	w8, [sp, #104]
  4425bc:	ldr	x9, [sp, #40]
  4425c0:	ldr	x4, [sp, #96]
  4425c4:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4425c8:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4425cc:	sub	w5, w9, w8
  4425d0:	add	x0, sp, #0xc0
  4425d4:	mov	w1, #0xc8                  	// #200
  4425d8:	add	x2, x2, #0x4f7
  4425dc:	add	x3, x3, #0x58f
  4425e0:	bl	402a20 <snprintf@plt>
  4425e4:	ldp	x8, x0, [sp, #136]
  4425e8:	add	x1, sp, #0xc0
  4425ec:	mov	w2, wzr
  4425f0:	blr	x8
  4425f4:	mov	x28, xzr
  4425f8:	b	441a40 <feof@plt+0x3ed40>
  4425fc:	cmp	x20, #0x3
  442600:	b.hi	442648 <feof@plt+0x3f948>  // b.pmore
  442604:	ldr	w8, [sp, #152]
  442608:	cbz	w8, 442574 <feof@plt+0x3f874>
  44260c:	mov	x28, xzr
  442610:	b	4426d4 <feof@plt+0x3f9d4>
  442614:	add	x0, sp, #0x60
  442618:	bl	43f0c0 <feof@plt+0x3c3c0>
  44261c:	mov	x28, x0
  442620:	b	441a40 <feof@plt+0x3ed40>
  442624:	ldr	w10, [sp, #128]
  442628:	add	x11, x8, #0x3
  44262c:	sub	x9, x9, #0x3
  442630:	stp	x11, x9, [sp, #112]
  442634:	cbz	w10, 44267c <feof@plt+0x3f97c>
  442638:	ldurh	w8, [x8, #1]
  44263c:	lsl	x8, x8, #48
  442640:	rev	x28, x8
  442644:	b	4426d4 <feof@plt+0x3f9d4>
  442648:	ldr	w10, [sp, #128]
  44264c:	add	x11, x8, #0x5
  442650:	sub	x9, x9, #0x5
  442654:	stp	x11, x9, [sp, #112]
  442658:	cbz	w10, 442684 <feof@plt+0x3f984>
  44265c:	ldur	w8, [x8, #1]
  442660:	lsl	x8, x8, #32
  442664:	rev	x28, x8
  442668:	b	4426d4 <feof@plt+0x3f9d4>
  44266c:	ldr	w8, [sp, #152]
  442670:	cbz	w8, 44268c <feof@plt+0x3f98c>
  442674:	mov	w28, wzr
  442678:	b	4426d4 <feof@plt+0x3f9d4>
  44267c:	ldurh	w28, [x8, #1]
  442680:	b	4426d4 <feof@plt+0x3f9d4>
  442684:	ldur	w28, [x8, #1]
  442688:	b	4426d4 <feof@plt+0x3f9d4>
  44268c:	ldr	w8, [sp, #104]
  442690:	ldr	x9, [sp, #40]
  442694:	ldr	x4, [sp, #96]
  442698:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44269c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4426a0:	sub	w5, w9, w8
  4426a4:	add	x0, sp, #0xc0
  4426a8:	mov	w1, #0xc8                  	// #200
  4426ac:	add	x2, x2, #0x4f7
  4426b0:	add	x3, x3, #0x4e7
  4426b4:	bl	402a20 <snprintf@plt>
  4426b8:	ldp	x8, x0, [sp, #136]
  4426bc:	add	x1, sp, #0xc0
  4426c0:	mov	w2, wzr
  4426c4:	blr	x8
  4426c8:	mov	w28, wzr
  4426cc:	mov	w8, #0x1                   	// #1
  4426d0:	str	w8, [sp, #152]
  4426d4:	ldr	x26, [sp]
  4426d8:	ldr	x24, [sp, #88]
  4426dc:	b	442558 <feof@plt+0x3f858>
  4426e0:	mov	w8, #0x1                   	// #1
  4426e4:	str	w8, [sp, #56]
  4426e8:	ldr	x8, [sp, #184]
  4426ec:	cbz	x8, 440dc0 <feof@plt+0x3e0c0>
  4426f0:	ldr	w8, [sp, #56]
  4426f4:	cbz	w8, 440dc0 <feof@plt+0x3e0c0>
  4426f8:	ldr	w8, [sp, #152]
  4426fc:	cbnz	w8, 440dc0 <feof@plt+0x3e0c0>
  442700:	ldr	x0, [sp, #88]
  442704:	add	x4, sp, #0xa0
  442708:	mov	w1, #0x18                  	// #24
  44270c:	mov	x2, x22
  442710:	mov	x3, x21
  442714:	bl	439d04 <feof@plt+0x37004>
  442718:	cbz	x0, 440dc0 <feof@plt+0x3e0c0>
  44271c:	mov	x8, #0xffffffffffffffff    	// #-1
  442720:	stp	xzr, xzr, [x0, #8]
  442724:	str	x8, [x0]
  442728:	ldr	x0, [sp, #88]
  44272c:	add	x1, sp, #0xa0
  442730:	mov	x2, x22
  442734:	mov	x3, x21
  442738:	bl	439e1c <feof@plt+0x3711c>
  44273c:	cbz	w0, 440dc0 <feof@plt+0x3e0c0>
  442740:	ldr	x19, [sp, #160]
  442744:	ldr	x1, [sp, #184]
  442748:	adrp	x3, 442000 <feof@plt+0x3f300>
  44274c:	add	x3, x3, #0x9cc
  442750:	mov	w2, #0x18                  	// #24
  442754:	mov	x0, x19
  442758:	bl	443af8 <feof@plt+0x40df8>
  44275c:	ldr	x8, [sp, #72]
  442760:	mov	w0, #0x1                   	// #1
  442764:	str	x19, [x8]
  442768:	ldr	x8, [sp, #184]
  44276c:	b	440e30 <feof@plt+0x3e130>
  442770:	ldr	w8, [sp, #112]
  442774:	ldr	w9, [sp, #104]
  442778:	ldr	x4, [sp, #96]
  44277c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442780:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442784:	sub	w5, w8, w9
  442788:	add	x2, x2, #0x4f7
  44278c:	add	x3, x3, #0x608
  442790:	b	440da4 <feof@plt+0x3e0a4>
  442794:	ldr	w8, [sp, #152]
  442798:	cbz	w8, 4427e8 <feof@plt+0x3fae8>
  44279c:	str	wzr, [sp, #56]
  4427a0:	b	4426e8 <feof@plt+0x3f9e8>
  4427a4:	ldr	w8, [sp, #112]
  4427a8:	ldr	w9, [sp, #104]
  4427ac:	ldr	x4, [sp, #96]
  4427b0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4427b4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4427b8:	sub	w5, w8, w9
  4427bc:	add	x2, x2, #0x4f7
  4427c0:	add	x3, x3, #0x66d
  4427c4:	add	x0, sp, #0xc0
  4427c8:	mov	w1, #0xc8                  	// #200
  4427cc:	bl	402a20 <snprintf@plt>
  4427d0:	ldp	x8, x0, [sp, #136]
  4427d4:	add	x1, sp, #0xc0
  4427d8:	mov	w2, wzr
  4427dc:	blr	x8
  4427e0:	str	wzr, [sp, #56]
  4427e4:	b	4426e8 <feof@plt+0x3f9e8>
  4427e8:	ldr	w8, [sp, #112]
  4427ec:	ldr	w9, [sp, #104]
  4427f0:	ldr	x4, [sp, #96]
  4427f4:	sub	w5, w8, w9
  4427f8:	b	442814 <feof@plt+0x3fb14>
  4427fc:	ldr	w8, [sp, #152]
  442800:	cbnz	w8, 44279c <feof@plt+0x3fa9c>
  442804:	ldr	w8, [sp, #104]
  442808:	ldr	x9, [sp, #40]
  44280c:	ldr	x4, [sp, #96]
  442810:	sub	w5, w9, w8
  442814:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442818:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44281c:	add	x2, x2, #0x4f7
  442820:	add	x3, x3, #0x4e7
  442824:	add	x0, sp, #0xc0
  442828:	mov	w1, #0xc8                  	// #200
  44282c:	bl	402a20 <snprintf@plt>
  442830:	ldp	x8, x0, [sp, #136]
  442834:	add	x1, sp, #0xc0
  442838:	mov	w2, wzr
  44283c:	blr	x8
  442840:	mov	w8, #0x1                   	// #1
  442844:	str	wzr, [sp, #56]
  442848:	str	w8, [sp, #152]
  44284c:	b	4426e8 <feof@plt+0x3f9e8>
  442850:	ldr	w8, [sp, #112]
  442854:	ldr	w9, [sp, #104]
  442858:	ldr	x4, [sp, #96]
  44285c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442860:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442864:	sub	w5, w8, w9
  442868:	add	x2, x2, #0x4f7
  44286c:	add	x3, x3, #0x63e
  442870:	b	4427c4 <feof@plt+0x3fac4>
  442874:	stp	x29, x30, [sp, #-64]!
  442878:	stp	x24, x23, [sp, #16]
  44287c:	stp	x22, x21, [sp, #32]
  442880:	stp	x20, x19, [sp, #48]
  442884:	mov	x29, sp
  442888:	ldr	x8, [x1, #32]
  44288c:	cbz	x8, 4428f8 <feof@plt+0x3fbf8>
  442890:	ldr	x9, [x1, #24]
  442894:	mov	x19, x5
  442898:	mov	x20, x4
  44289c:	mov	x22, x3
  4428a0:	mov	x21, x2
  4428a4:	mov	x23, x0
  4428a8:	mov	x11, xzr
  4428ac:	mov	x12, x8
  4428b0:	b	4428c0 <feof@plt+0x3fbc0>
  4428b4:	mov	x12, x13
  4428b8:	cmp	x11, x12
  4428bc:	b.cs	4428f8 <feof@plt+0x3fbf8>  // b.hs, b.nlast
  4428c0:	add	x10, x12, x11
  4428c4:	lsr	x13, x10, #1
  4428c8:	add	x10, x13, x13, lsl #1
  4428cc:	lsl	x14, x10, #3
  4428d0:	add	x10, x9, x14
  4428d4:	ldr	x15, [x10]
  4428d8:	cmp	x15, x23
  4428dc:	b.hi	4428b4 <feof@plt+0x3fbb4>  // b.pmore
  4428e0:	ldr	x15, [x10, #8]
  4428e4:	cmp	x15, x23
  4428e8:	b.hi	442910 <feof@plt+0x3fc10>  // b.pmore
  4428ec:	add	x11, x13, #0x1
  4428f0:	cmp	x11, x12
  4428f4:	b.cc	4428c0 <feof@plt+0x3fbc0>  // b.lo, b.ul, b.last
  4428f8:	mov	w0, wzr
  4428fc:	ldp	x20, x19, [sp, #48]
  442900:	ldp	x22, x21, [sp, #32]
  442904:	ldp	x24, x23, [sp, #16]
  442908:	ldp	x29, x30, [sp], #64
  44290c:	ret
  442910:	mov	x13, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  442914:	asr	x15, x14, #3
  442918:	movk	x13, #0xaaab
  44291c:	orr	x14, xzr, #0x1
  442920:	madd	x15, x15, x13, x14
  442924:	cmp	x15, x8
  442928:	b.cs	442978 <feof@plt+0x3fc78>  // b.hs, b.nlast
  44292c:	add	x11, x12, x11
  442930:	lsr	x11, x11, #1
  442934:	mov	w12, #0x18                  	// #24
  442938:	madd	x11, x11, x12, x9
  44293c:	add	x11, x11, #0x18
  442940:	ldr	x12, [x11]
  442944:	cmp	x12, x23
  442948:	b.hi	442978 <feof@plt+0x3fc78>  // b.pmore
  44294c:	ldr	x12, [x11, #8]
  442950:	cmp	x12, x23
  442954:	b.ls	442974 <feof@plt+0x3fc74>  // b.plast
  442958:	sub	x12, x11, x9
  44295c:	asr	x12, x12, #3
  442960:	madd	x12, x12, x13, x14
  442964:	add	x10, x10, #0x18
  442968:	cmp	x12, x8
  44296c:	add	x11, x11, #0x18
  442970:	b.cc	442940 <feof@plt+0x3fc40>  // b.lo, b.ul, b.last
  442974:	sub	x10, x11, #0x18
  442978:	ldr	x24, [x10, #16]
  44297c:	mov	x0, x23
  442980:	mov	x2, x21
  442984:	mov	x3, x22
  442988:	mov	x1, x24
  44298c:	mov	x4, x20
  442990:	mov	x5, x19
  442994:	bl	442874 <feof@plt+0x3fb74>
  442998:	cbnz	w0, 4428fc <feof@plt+0x3fbfc>
  44299c:	ldr	x2, [x20]
  4429a0:	ldr	w3, [x19]
  4429a4:	ldr	x4, [x24]
  4429a8:	mov	x0, x22
  4429ac:	mov	x1, x23
  4429b0:	blr	x21
  4429b4:	cbnz	w0, 4428fc <feof@plt+0x3fbfc>
  4429b8:	ldr	x8, [x24, #8]
  4429bc:	str	x8, [x20]
  4429c0:	ldr	w8, [x24, #16]
  4429c4:	str	w8, [x19]
  4429c8:	b	4428fc <feof@plt+0x3fbfc>
  4429cc:	ldr	x8, [x0]
  4429d0:	ldr	x9, [x1]
  4429d4:	cmp	x8, x9
  4429d8:	b.cs	4429e4 <feof@plt+0x3fce4>  // b.hs, b.nlast
  4429dc:	mov	w0, #0xffffffff            	// #-1
  4429e0:	ret
  4429e4:	b.ls	4429f0 <feof@plt+0x3fcf0>  // b.plast
  4429e8:	mov	w0, #0x1                   	// #1
  4429ec:	ret
  4429f0:	ldr	w8, [x0, #20]
  4429f4:	ldr	w9, [x1, #20]
  4429f8:	cmp	w8, w9
  4429fc:	b.ge	442a08 <feof@plt+0x3fd08>  // b.tcont
  442a00:	mov	w0, #0xffffffff            	// #-1
  442a04:	ret
  442a08:	cset	w0, gt
  442a0c:	ret
  442a10:	sub	sp, sp, #0x1c0
  442a14:	stp	x29, x30, [sp, #352]
  442a18:	stp	x28, x27, [sp, #368]
  442a1c:	stp	x26, x25, [sp, #384]
  442a20:	stp	x24, x23, [sp, #400]
  442a24:	stp	x22, x21, [sp, #416]
  442a28:	stp	x20, x19, [sp, #432]
  442a2c:	add	x29, sp, #0x160
  442a30:	ldr	x8, [x4, #24]
  442a34:	cbz	x8, 4430d4 <feof@plt+0x403d4>
  442a38:	ldr	x9, [x29, #104]
  442a3c:	mov	x21, x7
  442a40:	mov	x27, x6
  442a44:	mov	x28, x5
  442a48:	str	x9, [sp, #104]
  442a4c:	ldr	x9, [x29, #96]
  442a50:	mov	x19, x4
  442a54:	mov	x23, x3
  442a58:	mov	x24, x2
  442a5c:	mov	x25, x1
  442a60:	mov	x20, x0
  442a64:	stp	x0, x9, [sp, #112]
  442a68:	ldr	x10, [x19, #16]
  442a6c:	cbz	x8, 4430dc <feof@plt+0x403dc>
  442a70:	mov	w9, wzr
  442a74:	mov	w22, wzr
  442a78:	mov	x20, xzr
  442a7c:	add	x11, x10, #0x1
  442a80:	sub	x8, x8, #0x1
  442a84:	stp	x11, x8, [x19, #16]
  442a88:	ldrb	w26, [x10]
  442a8c:	cmp	w22, #0x3f
  442a90:	b.hi	442aac <feof@plt+0x3fdac>  // b.pmore
  442a94:	and	x8, x26, #0x7f
  442a98:	lsl	x8, x8, x22
  442a9c:	orr	x20, x8, x20
  442aa0:	sxtb	w8, w26
  442aa4:	tbnz	w8, #31, 442ab8 <feof@plt+0x3fdb8>
  442aa8:	b	442b0c <feof@plt+0x3fe0c>
  442aac:	cbz	w9, 442ac8 <feof@plt+0x3fdc8>
  442ab0:	sxtb	w8, w26
  442ab4:	tbz	w8, #31, 442b0c <feof@plt+0x3fe0c>
  442ab8:	ldp	x10, x8, [x19, #16]
  442abc:	add	w22, w22, #0x7
  442ac0:	cbnz	x8, 442a7c <feof@plt+0x3fd7c>
  442ac4:	b	4430dc <feof@plt+0x403dc>
  442ac8:	ldr	w8, [x19, #8]
  442acc:	ldr	x4, [x19]
  442ad0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442ad4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442ad8:	sub	w5, w11, w8
  442adc:	add	x0, sp, #0x90
  442ae0:	mov	w1, #0xc8                  	// #200
  442ae4:	add	x2, x2, #0x4f7
  442ae8:	add	x3, x3, #0x5b0
  442aec:	bl	402a20 <snprintf@plt>
  442af0:	ldp	x8, x0, [x19, #40]
  442af4:	add	x1, sp, #0x90
  442af8:	mov	w2, wzr
  442afc:	blr	x8
  442b00:	mov	w9, #0x1                   	// #1
  442b04:	sxtb	w8, w26
  442b08:	tbnz	w8, #31, 442ab8 <feof@plt+0x3fdb8>
  442b0c:	cbz	x20, 4430d4 <feof@plt+0x403d4>
  442b10:	ldr	x8, [x24, #88]
  442b14:	sub	x10, x20, #0x1
  442b18:	cmp	x10, x8
  442b1c:	b.cs	442be8 <feof@plt+0x3fee8>  // b.hs, b.nlast
  442b20:	ldr	x9, [x24, #96]
  442b24:	add	x26, x9, x10, lsl #5
  442b28:	ldr	x10, [x26]
  442b2c:	cmp	x10, x20
  442b30:	b.ne	442bf0 <feof@plt+0x3fef0>  // b.any
  442b34:	cbz	x26, 44313c <feof@plt+0x4043c>
  442b38:	ldr	w20, [x26, #8]
  442b3c:	str	x28, [sp, #64]
  442b40:	mov	x22, xzr
  442b44:	mov	w28, wzr
  442b48:	cmp	w20, #0x2e
  442b4c:	b.hi	442f9c <feof@plt+0x4029c>  // b.pmore
  442b50:	mov	x9, #0x8                   	// #8
  442b54:	mov	w8, #0x1                   	// #1
  442b58:	movk	x9, #0x2000, lsl #16
  442b5c:	lsl	x8, x8, x20
  442b60:	movk	x9, #0x4000, lsl #32
  442b64:	tst	x8, x9
  442b68:	ldr	x8, [sp, #120]
  442b6c:	b.eq	442bac <feof@plt+0x3feac>  // b.none
  442b70:	ldr	x0, [sp, #112]
  442b74:	mov	w1, #0x28                  	// #40
  442b78:	mov	x2, x27
  442b7c:	mov	x3, x21
  442b80:	bl	439a30 <feof@plt+0x36d30>
  442b84:	mov	x22, x0
  442b88:	cbz	x0, 443140 <feof@plt+0x40440>
  442b8c:	ldr	x8, [sp, #104]
  442b90:	ldr	x9, [sp, #120]
  442b94:	cmp	w20, #0x1d
  442b98:	movi	v0.2d, #0x0
  442b9c:	mov	w28, #0x1                   	// #1
  442ba0:	csel	x8, x8, x9, eq  // eq = none
  442ba4:	str	xzr, [x22, #32]
  442ba8:	stp	q0, q0, [x22]
  442bac:	str	x8, [sp, #24]
  442bb0:	ldr	x8, [x26, #16]
  442bb4:	str	x27, [sp, #80]
  442bb8:	cbz	x8, 442e64 <feof@plt+0x40164>
  442bbc:	mov	x27, xzr
  442bc0:	mov	x20, xzr
  442bc4:	str	wzr, [sp, #76]
  442bc8:	str	wzr, [sp, #60]
  442bcc:	str	xzr, [sp, #48]
  442bd0:	str	wzr, [sp, #20]
  442bd4:	str	wzr, [sp, #44]
  442bd8:	str	xzr, [sp, #32]
  442bdc:	str	wzr, [sp, #96]
  442be0:	str	xzr, [sp, #88]
  442be4:	b	442c64 <feof@plt+0x3ff64>
  442be8:	cbz	x8, 443128 <feof@plt+0x40428>
  442bec:	ldr	x9, [x24, #96]
  442bf0:	mov	x10, xzr
  442bf4:	b	442c04 <feof@plt+0x3ff04>
  442bf8:	cmp	x10, x11
  442bfc:	mov	x8, x11
  442c00:	b.cs	443128 <feof@plt+0x40428>  // b.hs, b.nlast
  442c04:	add	x11, x8, x10
  442c08:	lsr	x11, x11, #1
  442c0c:	add	x26, x9, x11, lsl #5
  442c10:	ldr	x12, [x26]
  442c14:	cmp	x12, x20
  442c18:	b.hi	442bf8 <feof@plt+0x3fef8>  // b.pmore
  442c1c:	b.cs	442b34 <feof@plt+0x3fe34>  // b.hs, b.nlast
  442c20:	add	x10, x11, #0x1
  442c24:	mov	x11, x8
  442c28:	b	442bf8 <feof@plt+0x3fef8>
  442c2c:	ldr	w8, [sp, #128]
  442c30:	ldr	x9, [sp, #136]
  442c34:	cmp	w8, #0x1
  442c38:	ldr	x8, [sp, #88]
  442c3c:	csel	x8, x9, x8, eq  // eq = none
  442c40:	str	x8, [sp, #88]
  442c44:	ldr	w8, [sp, #96]
  442c48:	csinc	w8, w8, wzr, ne  // ne = any
  442c4c:	str	w8, [sp, #96]
  442c50:	ldr	x8, [x26, #16]
  442c54:	add	x20, x20, #0x1
  442c58:	add	x27, x27, #0x8
  442c5c:	cmp	x20, x8
  442c60:	b.cs	442e80 <feof@plt+0x40180>  // b.hs, b.nlast
  442c64:	ldr	x8, [x26, #24]
  442c68:	ldp	w3, w2, [x24, #40]
  442c6c:	ldr	w4, [x24, #48]
  442c70:	ldp	x5, x6, [x25, #104]
  442c74:	add	x8, x8, x27
  442c78:	ldr	w0, [x8, #4]
  442c7c:	ldr	x7, [x25, #8]
  442c80:	add	x8, sp, #0x80
  442c84:	mov	x1, x19
  442c88:	str	x8, [sp]
  442c8c:	bl	43f184 <feof@plt+0x3c484>
  442c90:	cbz	w0, 44313c <feof@plt+0x4043c>
  442c94:	ldr	w8, [x26, #8]
  442c98:	cmp	w8, #0x11
  442c9c:	b.ne	442cbc <feof@plt+0x3ffbc>  // b.any
  442ca0:	ldr	x8, [x26, #24]
  442ca4:	ldr	w9, [sp, #128]
  442ca8:	ldr	x10, [sp, #136]
  442cac:	ldr	w8, [x8, x27]
  442cb0:	cmp	w9, #0x1
  442cb4:	ccmp	w8, #0x11, #0x0, eq  // eq = none
  442cb8:	csel	x23, x10, x23, eq  // eq = none
  442cbc:	cbz	w28, 442c50 <feof@plt+0x3ff50>
  442cc0:	ldr	x8, [x26, #24]
  442cc4:	ldr	w9, [x8, x27]
  442cc8:	cmp	w9, #0x30
  442ccc:	b.le	442d1c <feof@plt+0x4001c>
  442cd0:	sub	w10, w9, #0x47
  442cd4:	cmp	w10, #0x27
  442cd8:	b.hi	442d5c <feof@plt+0x4005c>  // b.pmore
  442cdc:	adrp	x12, 465000 <_obstack_memory_used@@Base+0xfdd8>
  442ce0:	add	x12, x12, #0x486
  442ce4:	adr	x9, 442c50 <feof@plt+0x3ff50>
  442ce8:	ldrb	w11, [x12, x10]
  442cec:	add	x9, x9, x11, lsl #2
  442cf0:	br	x9
  442cf4:	ldr	w8, [sp, #128]
  442cf8:	cmp	w8, #0x8
  442cfc:	b.eq	442d08 <feof@plt+0x40008>  // b.none
  442d00:	cmp	w8, #0x2
  442d04:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442d08:	ldr	x8, [sp, #136]
  442d0c:	str	x8, [sp, #48]
  442d10:	mov	w8, #0x1                   	// #1
  442d14:	str	w8, [sp, #60]
  442d18:	b	442c50 <feof@plt+0x3ff50>
  442d1c:	cmp	w9, #0x3
  442d20:	b.eq	442dc4 <feof@plt+0x400c4>  // b.none
  442d24:	cmp	w9, #0x11
  442d28:	b.eq	442c2c <feof@plt+0x3ff2c>  // b.none
  442d2c:	cmp	w9, #0x12
  442d30:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442d34:	ldr	w8, [sp, #128]
  442d38:	cmp	w8, #0x2
  442d3c:	b.eq	442e30 <feof@plt+0x40130>  // b.none
  442d40:	cmp	w8, #0x1
  442d44:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442d48:	ldr	x8, [sp, #136]
  442d4c:	str	x8, [sp, #32]
  442d50:	mov	w8, #0x1                   	// #1
  442d54:	str	w8, [sp, #44]
  442d58:	b	442c50 <feof@plt+0x3ff50>
  442d5c:	cmp	w9, #0x31
  442d60:	b.eq	442d90 <feof@plt+0x40090>  // b.none
  442d64:	mov	w8, #0x2007                	// #8199
  442d68:	cmp	w9, w8
  442d6c:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442d70:	ldr	w8, [sp, #128]
  442d74:	cmp	w8, #0x4
  442d78:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442d7c:	ldr	x8, [sp, #136]
  442d80:	str	x8, [x22]
  442d84:	mov	w8, #0x1                   	// #1
  442d88:	str	w8, [sp, #76]
  442d8c:	b	442c50 <feof@plt+0x3ff50>
  442d90:	ldr	w9, [sp, #76]
  442d94:	cbnz	w9, 442c50 <feof@plt+0x3ff50>
  442d98:	ldr	x4, [sp, #80]
  442d9c:	add	x2, x8, x27
  442da0:	add	x3, sp, #0x80
  442da4:	mov	x0, x25
  442da8:	mov	x1, x24
  442dac:	mov	x5, x21
  442db0:	bl	4431f8 <feof@plt+0x404f8>
  442db4:	cbz	x0, 442e4c <feof@plt+0x4014c>
  442db8:	str	wzr, [sp, #76]
  442dbc:	str	x0, [x22]
  442dc0:	b	442c50 <feof@plt+0x3ff50>
  442dc4:	ldr	x8, [x22]
  442dc8:	cbnz	x8, 442c50 <feof@plt+0x3ff50>
  442dcc:	ldr	w8, [sp, #128]
  442dd0:	cmp	w8, #0x4
  442dd4:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442dd8:	ldr	x8, [sp, #136]
  442ddc:	str	x8, [x22]
  442de0:	b	442c50 <feof@plt+0x3ff50>
  442de4:	ldr	w8, [sp, #128]
  442de8:	cmp	w8, #0x2
  442dec:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442df0:	ldr	x8, [sp, #136]
  442df4:	cbz	x8, 442e54 <feof@plt+0x40154>
  442df8:	ldr	x10, [sp, #64]
  442dfc:	sub	x8, x8, #0x1
  442e00:	ldr	x9, [x10, #48]
  442e04:	cmp	x8, x9
  442e08:	b.cs	443164 <feof@plt+0x40464>  // b.hs, b.nlast
  442e0c:	ldr	x9, [x10, #56]
  442e10:	ldr	x8, [x9, x8, lsl #3]
  442e14:	b	442e5c <feof@plt+0x4015c>
  442e18:	ldr	w8, [sp, #128]
  442e1c:	cmp	w8, #0x2
  442e20:	b.ne	442c50 <feof@plt+0x3ff50>  // b.any
  442e24:	ldr	x8, [sp, #136]
  442e28:	str	w8, [x22, #16]
  442e2c:	b	442c50 <feof@plt+0x3ff50>
  442e30:	ldr	x8, [sp, #136]
  442e34:	str	x8, [sp, #32]
  442e38:	mov	w8, #0x1                   	// #1
  442e3c:	str	w8, [sp, #44]
  442e40:	mov	w8, #0x1                   	// #1
  442e44:	str	w8, [sp, #20]
  442e48:	b	442c50 <feof@plt+0x3ff50>
  442e4c:	str	wzr, [sp, #76]
  442e50:	b	442c50 <feof@plt+0x3ff50>
  442e54:	adrp	x8, 455000 <_obstack_begin_1@@Base+0xa4>
  442e58:	add	x8, x8, #0xce0
  442e5c:	str	x8, [x22, #8]
  442e60:	b	442c50 <feof@plt+0x3ff50>
  442e64:	str	xzr, [sp, #88]
  442e68:	str	wzr, [sp, #96]
  442e6c:	str	xzr, [sp, #32]
  442e70:	str	wzr, [sp, #44]
  442e74:	str	wzr, [sp, #20]
  442e78:	str	xzr, [sp, #48]
  442e7c:	str	wzr, [sp, #60]
  442e80:	cbz	w28, 442e8c <feof@plt+0x4018c>
  442e84:	ldr	x8, [x22]
  442e88:	cbz	x8, 442fa4 <feof@plt+0x402a4>
  442e8c:	ldr	x27, [sp, #80]
  442e90:	ldr	x20, [sp, #112]
  442e94:	cbz	w28, 442fc4 <feof@plt+0x402c4>
  442e98:	ldr	w8, [sp, #60]
  442e9c:	cbz	w8, 442ed8 <feof@plt+0x401d8>
  442ea0:	ldr	x8, [sp, #24]
  442ea4:	ldr	x4, [sp, #48]
  442ea8:	mov	x0, x20
  442eac:	mov	x1, x25
  442eb0:	mov	x2, x24
  442eb4:	mov	x3, x22
  442eb8:	mov	x5, x23
  442ebc:	mov	x6, x27
  442ec0:	mov	x7, x21
  442ec4:	str	x8, [sp]
  442ec8:	bl	443304 <feof@plt+0x40604>
  442ecc:	ldr	x28, [sp, #64]
  442ed0:	cbnz	w0, 442f8c <feof@plt+0x4028c>
  442ed4:	b	44313c <feof@plt+0x4043c>
  442ed8:	ldr	x28, [sp, #64]
  442edc:	ldr	w8, [sp, #96]
  442ee0:	cbz	w8, 4430a8 <feof@plt+0x403a8>
  442ee4:	ldr	w8, [sp, #44]
  442ee8:	cbz	w8, 4430a8 <feof@plt+0x403a8>
  442eec:	ldr	w8, [sp, #20]
  442ef0:	ldp	x27, x12, [sp, #24]
  442ef4:	ldr	x11, [sp, #88]
  442ef8:	ldr	x9, [x25, #16]
  442efc:	cmp	w8, #0x0
  442f00:	ldr	x8, [x27, #24]
  442f04:	csel	x10, xzr, x11, eq  // eq = none
  442f08:	add	x10, x10, x12
  442f0c:	add	x20, x9, x11
  442f10:	add	x11, x10, x9
  442f14:	cbz	x8, 442f4c <feof@plt+0x4024c>
  442f18:	ldr	x9, [x27]
  442f1c:	mov	w10, #0x18                  	// #24
  442f20:	madd	x9, x8, x10, x9
  442f24:	ldur	x8, [x9, #-16]
  442f28:	cmp	x20, x8
  442f2c:	b.eq	442f3c <feof@plt+0x4023c>  // b.none
  442f30:	add	x10, x8, #0x1
  442f34:	cmp	x20, x10
  442f38:	b.ne	442f4c <feof@plt+0x4024c>  // b.any
  442f3c:	sub	x9, x9, #0x18
  442f40:	ldr	x10, [x9, #16]
  442f44:	cmp	x10, x22
  442f48:	b.eq	4430c4 <feof@plt+0x403c4>  // b.none
  442f4c:	ldr	x0, [sp, #112]
  442f50:	ldr	x2, [sp, #80]
  442f54:	mov	w1, #0x18                  	// #24
  442f58:	mov	x3, x21
  442f5c:	mov	x4, x27
  442f60:	str	x11, [sp, #96]
  442f64:	bl	439d04 <feof@plt+0x37004>
  442f68:	cbz	x0, 44313c <feof@plt+0x4043c>
  442f6c:	ldr	x8, [sp, #96]
  442f70:	str	x22, [x0, #16]
  442f74:	stp	x20, x8, [x0]
  442f78:	ldr	x8, [x27, #24]
  442f7c:	add	x8, x8, #0x1
  442f80:	str	x8, [x27, #24]
  442f84:	ldr	x27, [sp, #80]
  442f88:	ldr	x20, [sp, #112]
  442f8c:	mov	w8, #0x1                   	// #1
  442f90:	ldr	w9, [x26, #12]
  442f94:	cbnz	w9, 442fd4 <feof@plt+0x402d4>
  442f98:	b	443098 <feof@plt+0x40398>
  442f9c:	ldr	x8, [sp, #120]
  442fa0:	b	442bac <feof@plt+0x3feac>
  442fa4:	ldr	x20, [sp, #112]
  442fa8:	ldr	x27, [sp, #80]
  442fac:	mov	w2, #0x28                  	// #40
  442fb0:	mov	x1, x22
  442fb4:	mov	x0, x20
  442fb8:	mov	x3, x27
  442fbc:	mov	x4, x21
  442fc0:	bl	439bf4 <feof@plt+0x36ef4>
  442fc4:	ldr	x28, [sp, #64]
  442fc8:	mov	w8, wzr
  442fcc:	ldr	w9, [x26, #12]
  442fd0:	cbz	w9, 443098 <feof@plt+0x40398>
  442fd4:	cbz	w8, 443060 <feof@plt+0x40360>
  442fd8:	add	x8, sp, #0x90
  442fdc:	str	x8, [sp, #8]
  442fe0:	ldr	x8, [sp, #120]
  442fe4:	movi	v0.2d, #0x0
  442fe8:	mov	x0, x20
  442fec:	mov	x1, x25
  442ff0:	mov	x2, x24
  442ff4:	mov	x3, x23
  442ff8:	mov	x4, x19
  442ffc:	mov	x5, x28
  443000:	mov	x6, x27
  443004:	mov	x7, x21
  443008:	stp	q0, q0, [sp, #144]
  44300c:	str	x8, [sp]
  443010:	bl	442a10 <feof@plt+0x3fd10>
  443014:	cbz	w0, 44313c <feof@plt+0x4043c>
  443018:	ldr	x8, [sp, #168]
  44301c:	cbz	x8, 443098 <feof@plt+0x40398>
  443020:	add	x1, sp, #0x90
  443024:	mov	x0, x20
  443028:	mov	x2, x27
  44302c:	mov	x3, x21
  443030:	bl	439e1c <feof@plt+0x3711c>
  443034:	cbz	w0, 44313c <feof@plt+0x4043c>
  443038:	ldr	x26, [sp, #144]
  44303c:	ldr	x1, [sp, #168]
  443040:	adrp	x3, 443000 <feof@plt+0x40300>
  443044:	mov	w2, #0x18                  	// #24
  443048:	mov	x0, x26
  44304c:	add	x3, x3, #0x1a4
  443050:	bl	443af8 <feof@plt+0x40df8>
  443054:	ldr	x8, [sp, #168]
  443058:	stp	x26, x8, [x22, #24]
  44305c:	b	443098 <feof@plt+0x40398>
  443060:	ldr	x8, [sp, #104]
  443064:	mov	x0, x20
  443068:	mov	x1, x25
  44306c:	mov	x2, x24
  443070:	str	x8, [sp, #8]
  443074:	ldr	x8, [sp, #120]
  443078:	mov	x3, x23
  44307c:	mov	x4, x19
  443080:	mov	x5, x28
  443084:	mov	x6, x27
  443088:	mov	x7, x21
  44308c:	str	x8, [sp]
  443090:	bl	442a10 <feof@plt+0x3fd10>
  443094:	cbz	w0, 44313c <feof@plt+0x4043c>
  443098:	ldr	x8, [x19, #24]
  44309c:	mov	w22, #0x1                   	// #1
  4430a0:	cbnz	x8, 442a68 <feof@plt+0x3fd68>
  4430a4:	b	443140 <feof@plt+0x40440>
  4430a8:	mov	w2, #0x28                  	// #40
  4430ac:	mov	x0, x20
  4430b0:	mov	x1, x22
  4430b4:	mov	x3, x27
  4430b8:	mov	x4, x21
  4430bc:	bl	439bf4 <feof@plt+0x36ef4>
  4430c0:	b	442fc8 <feof@plt+0x402c8>
  4430c4:	cmp	x11, x8
  4430c8:	b.ls	442f84 <feof@plt+0x40284>  // b.plast
  4430cc:	str	x11, [x9, #8]
  4430d0:	b	442f84 <feof@plt+0x40284>
  4430d4:	mov	w22, #0x1                   	// #1
  4430d8:	b	443140 <feof@plt+0x40440>
  4430dc:	ldr	w8, [x19, #56]
  4430e0:	mov	w22, #0x1                   	// #1
  4430e4:	cbnz	w8, 443140 <feof@plt+0x40440>
  4430e8:	ldr	w8, [x19, #8]
  4430ec:	ldr	x4, [x19]
  4430f0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4430f4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4430f8:	sub	w5, w10, w8
  4430fc:	add	x2, x2, #0x4f7
  443100:	add	x3, x3, #0x4e7
  443104:	add	x0, sp, #0x90
  443108:	mov	w1, #0xc8                  	// #200
  44310c:	bl	402a20 <snprintf@plt>
  443110:	ldp	x8, x0, [x19, #40]
  443114:	add	x1, sp, #0x90
  443118:	mov	w2, wzr
  44311c:	blr	x8
  443120:	str	w22, [x19, #56]
  443124:	b	443140 <feof@plt+0x40440>
  443128:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44312c:	add	x1, x1, #0x521
  443130:	mov	x0, x21
  443134:	mov	w2, wzr
  443138:	blr	x27
  44313c:	mov	w22, wzr
  443140:	mov	w0, w22
  443144:	ldp	x20, x19, [sp, #432]
  443148:	ldp	x22, x21, [sp, #416]
  44314c:	ldp	x24, x23, [sp, #400]
  443150:	ldp	x26, x25, [sp, #384]
  443154:	ldp	x28, x27, [sp, #368]
  443158:	ldp	x29, x30, [sp, #352]
  44315c:	add	sp, sp, #0x1c0
  443160:	ret
  443164:	ldr	w8, [x19, #16]
  443168:	ldr	w9, [x19, #8]
  44316c:	ldr	x4, [x19]
  443170:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443174:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443178:	sub	w5, w8, w9
  44317c:	add	x2, x2, #0x4f7
  443180:	add	x3, x3, #0x698
  443184:	add	x0, sp, #0x90
  443188:	mov	w1, #0xc8                  	// #200
  44318c:	bl	402a20 <snprintf@plt>
  443190:	ldp	x8, x0, [x19, #40]
  443194:	add	x1, sp, #0x90
  443198:	mov	w2, wzr
  44319c:	blr	x8
  4431a0:	b	44313c <feof@plt+0x4043c>
  4431a4:	ldr	x8, [x0]
  4431a8:	ldr	x9, [x1]
  4431ac:	cmp	x8, x9
  4431b0:	b.cs	4431bc <feof@plt+0x404bc>  // b.hs, b.nlast
  4431b4:	mov	w0, #0xffffffff            	// #-1
  4431b8:	ret
  4431bc:	b.ls	4431c8 <feof@plt+0x404c8>  // b.plast
  4431c0:	mov	w0, #0x1                   	// #1
  4431c4:	ret
  4431c8:	ldr	x8, [x0, #8]
  4431cc:	ldr	x9, [x1, #8]
  4431d0:	cmp	x8, x9
  4431d4:	b.cs	4431e0 <feof@plt+0x404e0>  // b.hs, b.nlast
  4431d8:	mov	w0, #0x1                   	// #1
  4431dc:	ret
  4431e0:	b.hi	4431b4 <feof@plt+0x404b4>  // b.pmore
  4431e4:	ldr	x8, [x0, #16]
  4431e8:	ldr	x9, [x1, #16]
  4431ec:	ldr	x0, [x8]
  4431f0:	ldr	x1, [x9]
  4431f4:	b	402b40 <strcmp@plt>
  4431f8:	ldr	w8, [x2]
  4431fc:	cmp	w8, #0x47
  443200:	b.eq	44320c <feof@plt+0x4050c>  // b.none
  443204:	cmp	w8, #0x31
  443208:	b.ne	443218 <feof@plt+0x40518>  // b.any
  44320c:	ldr	w8, [x2, #4]
  443210:	cmp	w8, #0x20
  443214:	b.ne	443220 <feof@plt+0x40520>  // b.any
  443218:	mov	x0, xzr
  44321c:	ret
  443220:	ldr	w8, [x3]
  443224:	sub	w8, w8, #0x2
  443228:	cmp	w8, #0x5
  44322c:	b.hi	443218 <feof@plt+0x40518>  // b.pmore
  443230:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443234:	add	x9, x9, #0x4ae
  443238:	adr	x10, 443218 <feof@plt+0x40518>
  44323c:	ldrb	w11, [x9, x8]
  443240:	add	x10, x10, x11, lsl #2
  443244:	br	x10
  443248:	ldr	x2, [x3, #8]
  44324c:	mov	x3, x4
  443250:	mov	x4, x5
  443254:	b	4437b8 <feof@plt+0x40ab8>
  443258:	ldr	x10, [x0, #48]
  44325c:	cbz	x10, 443218 <feof@plt+0x40518>
  443260:	ldr	x8, [x0, #40]
  443264:	ldr	x9, [x3, #8]
  443268:	mov	x11, xzr
  44326c:	b	44327c <feof@plt+0x4057c>
  443270:	cmp	x11, x12
  443274:	mov	x10, x12
  443278:	b.cs	443218 <feof@plt+0x40518>  // b.hs, b.nlast
  44327c:	add	x12, x10, x11
  443280:	lsr	x12, x12, #1
  443284:	ldr	x1, [x8, x12, lsl #3]
  443288:	ldr	x13, [x1, #24]
  44328c:	subs	x2, x9, x13
  443290:	b.cc	443270 <feof@plt+0x40570>  // b.lo, b.ul, b.last
  443294:	ldr	x11, [x1, #32]
  443298:	cmp	x11, x9
  44329c:	b.hi	44324c <feof@plt+0x4054c>  // b.pmore
  4432a0:	add	x11, x12, #0x1
  4432a4:	mov	x12, x10
  4432a8:	b	443270 <feof@plt+0x40570>
  4432ac:	ldr	x0, [x0, #8]
  4432b0:	ldr	x9, [x0, #48]
  4432b4:	cbz	x9, 443218 <feof@plt+0x40518>
  4432b8:	ldr	x8, [x0, #40]
  4432bc:	ldr	x10, [x3, #8]
  4432c0:	mov	x11, xzr
  4432c4:	b	4432d4 <feof@plt+0x405d4>
  4432c8:	cmp	x11, x12
  4432cc:	mov	x9, x12
  4432d0:	b.cs	443218 <feof@plt+0x40518>  // b.hs, b.nlast
  4432d4:	add	x12, x9, x11
  4432d8:	lsr	x12, x12, #1
  4432dc:	ldr	x1, [x8, x12, lsl #3]
  4432e0:	ldr	x13, [x1, #24]
  4432e4:	subs	x2, x10, x13
  4432e8:	b.cc	4432c8 <feof@plt+0x405c8>  // b.lo, b.ul, b.last
  4432ec:	ldr	x11, [x1, #32]
  4432f0:	cmp	x11, x10
  4432f4:	b.hi	44324c <feof@plt+0x4054c>  // b.pmore
  4432f8:	add	x11, x12, #0x1
  4432fc:	mov	x12, x9
  443300:	b	4432c8 <feof@plt+0x405c8>
  443304:	sub	sp, sp, #0x170
  443308:	stp	x29, x30, [sp, #272]
  44330c:	stp	x28, x27, [sp, #288]
  443310:	stp	x26, x25, [sp, #304]
  443314:	stp	x24, x23, [sp, #320]
  443318:	stp	x22, x21, [sp, #336]
  44331c:	stp	x20, x19, [sp, #352]
  443320:	add	x29, sp, #0x110
  443324:	ldr	x8, [x1, #96]
  443328:	mov	x20, x7
  44332c:	mov	x19, x6
  443330:	subs	x8, x8, x4
  443334:	b.ls	443770 <feof@plt+0x40a70>  // b.plast
  443338:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44333c:	add	x9, x9, #0x29a
  443340:	str	x9, [sp]
  443344:	ldr	x9, [x1, #88]
  443348:	str	x8, [sp, #24]
  44334c:	ldr	x26, [x29, #96]
  443350:	mov	x24, x5
  443354:	add	x8, x9, x4
  443358:	stp	x9, x8, [sp, #8]
  44335c:	ldr	w8, [x1, #120]
  443360:	mov	x21, x3
  443364:	mov	x22, x2
  443368:	mov	x23, x1
  44336c:	mov	x25, x0
  443370:	stp	x19, x20, [sp, #40]
  443374:	str	wzr, [sp, #56]
  443378:	str	w8, [sp, #32]
  44337c:	b	44338c <feof@plt+0x4068c>
  443380:	mov	x24, x0
  443384:	ldr	w8, [sp, #56]
  443388:	cbnz	w8, 443784 <feof@plt+0x40a84>
  44338c:	ldr	w8, [x22, #48]
  443390:	sub	w8, w8, #0x1
  443394:	cmp	w8, #0x7
  443398:	b.hi	443400 <feof@plt+0x40700>  // b.pmore
  44339c:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4433a0:	add	x11, x11, #0x4b4
  4433a4:	adr	x9, 4433b4 <feof@plt+0x406b4>
  4433a8:	ldrb	w10, [x11, x8]
  4433ac:	add	x9, x9, x10, lsl #2
  4433b0:	br	x9
  4433b4:	ldp	x8, x9, [sp, #16]
  4433b8:	cbz	x9, 443450 <feof@plt+0x40750>
  4433bc:	add	x10, x8, #0x1
  4433c0:	sub	x9, x9, #0x1
  4433c4:	stp	x10, x9, [sp, #16]
  4433c8:	ldrb	w28, [x8]
  4433cc:	b	4434d8 <feof@plt+0x407d8>
  4433d0:	ldp	x8, x9, [sp, #16]
  4433d4:	cmp	x9, #0x1
  4433d8:	b.ls	443450 <feof@plt+0x40750>  // b.plast
  4433dc:	ldr	w10, [sp, #32]
  4433e0:	add	x11, x8, #0x2
  4433e4:	sub	x9, x9, #0x2
  4433e8:	stp	x11, x9, [sp, #16]
  4433ec:	cbz	w10, 4434cc <feof@plt+0x407cc>
  4433f0:	ldrh	w8, [x8]
  4433f4:	lsl	x8, x8, #48
  4433f8:	rev	x28, x8
  4433fc:	b	4434d8 <feof@plt+0x407d8>
  443400:	ldr	w8, [sp, #16]
  443404:	ldr	w9, [sp, #8]
  443408:	ldr	x4, [sp]
  44340c:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443410:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443414:	sub	w5, w8, w9
  443418:	add	x0, sp, #0x40
  44341c:	mov	w1, #0xc8                  	// #200
  443420:	add	x2, x2, #0x4f7
  443424:	add	x3, x3, #0x58f
  443428:	bl	402a20 <snprintf@plt>
  44342c:	ldp	x8, x0, [sp, #40]
  443430:	add	x1, sp, #0x40
  443434:	mov	w2, wzr
  443438:	blr	x8
  44343c:	mov	x28, xzr
  443440:	b	4434d8 <feof@plt+0x407d8>
  443444:	ldp	x8, x9, [sp, #16]
  443448:	cmp	x9, #0x3
  44344c:	b.hi	4434a8 <feof@plt+0x407a8>  // b.pmore
  443450:	ldr	w9, [sp, #8]
  443454:	ldr	x4, [sp]
  443458:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44345c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443460:	sub	w5, w8, w9
  443464:	add	x0, sp, #0x40
  443468:	mov	w1, #0xc8                  	// #200
  44346c:	add	x2, x2, #0x4f7
  443470:	add	x3, x3, #0x4e7
  443474:	bl	402a20 <snprintf@plt>
  443478:	ldp	x8, x0, [sp, #40]
  44347c:	add	x1, sp, #0x40
  443480:	mov	w2, wzr
  443484:	blr	x8
  443488:	mov	w8, #0x1                   	// #1
  44348c:	mov	x28, xzr
  443490:	str	w8, [sp, #56]
  443494:	b	4434d8 <feof@plt+0x407d8>
  443498:	mov	x0, sp
  44349c:	bl	43f0c0 <feof@plt+0x3c3c0>
  4434a0:	mov	x28, x0
  4434a4:	b	4434d8 <feof@plt+0x407d8>
  4434a8:	ldr	w10, [sp, #32]
  4434ac:	add	x11, x8, #0x4
  4434b0:	sub	x9, x9, #0x4
  4434b4:	stp	x11, x9, [sp, #16]
  4434b8:	cbz	w10, 4434d4 <feof@plt+0x407d4>
  4434bc:	ldr	w8, [x8]
  4434c0:	lsl	x8, x8, #32
  4434c4:	rev	x28, x8
  4434c8:	b	4434d8 <feof@plt+0x407d8>
  4434cc:	ldrh	w28, [x8]
  4434d0:	b	4434d8 <feof@plt+0x407d8>
  4434d4:	ldr	w28, [x8]
  4434d8:	ldr	w8, [x22, #48]
  4434dc:	sub	w8, w8, #0x1
  4434e0:	cmp	w8, #0x7
  4434e4:	b.hi	44354c <feof@plt+0x4084c>  // b.pmore
  4434e8:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4434ec:	add	x11, x11, #0x4bc
  4434f0:	adr	x9, 443500 <feof@plt+0x40800>
  4434f4:	ldrb	w10, [x11, x8]
  4434f8:	add	x9, x9, x10, lsl #2
  4434fc:	br	x9
  443500:	ldp	x8, x9, [sp, #16]
  443504:	cbz	x9, 4435d8 <feof@plt+0x408d8>
  443508:	add	x10, x8, #0x1
  44350c:	sub	x9, x9, #0x1
  443510:	stp	x10, x9, [sp, #16]
  443514:	ldrb	w0, [x8]
  443518:	b	44367c <feof@plt+0x4097c>
  44351c:	ldp	x8, x9, [sp, #16]
  443520:	cmp	x9, #0x1
  443524:	b.ls	443598 <feof@plt+0x40898>  // b.plast
  443528:	ldr	w10, [sp, #32]
  44352c:	add	x11, x8, #0x2
  443530:	sub	x9, x9, #0x2
  443534:	stp	x11, x9, [sp, #16]
  443538:	cbz	w10, 443628 <feof@plt+0x40928>
  44353c:	ldrh	w8, [x8]
  443540:	lsl	x8, x8, #48
  443544:	rev	x0, x8
  443548:	b	44367c <feof@plt+0x4097c>
  44354c:	ldr	w8, [sp, #16]
  443550:	ldr	w9, [sp, #8]
  443554:	ldr	x4, [sp]
  443558:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44355c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443560:	sub	w5, w8, w9
  443564:	add	x0, sp, #0x40
  443568:	mov	w1, #0xc8                  	// #200
  44356c:	add	x2, x2, #0x4f7
  443570:	add	x3, x3, #0x58f
  443574:	bl	402a20 <snprintf@plt>
  443578:	ldp	x8, x0, [sp, #40]
  44357c:	add	x1, sp, #0x40
  443580:	mov	w2, wzr
  443584:	blr	x8
  443588:	b	4435a0 <feof@plt+0x408a0>
  44358c:	ldp	x8, x9, [sp, #16]
  443590:	cmp	x9, #0x3
  443594:	b.hi	4435b4 <feof@plt+0x408b4>  // b.pmore
  443598:	ldr	w9, [sp, #56]
  44359c:	cbz	w9, 4435e8 <feof@plt+0x408e8>
  4435a0:	mov	x0, xzr
  4435a4:	b	44367c <feof@plt+0x4097c>
  4435a8:	mov	x0, sp
  4435ac:	bl	43f0c0 <feof@plt+0x3c3c0>
  4435b0:	b	44367c <feof@plt+0x4097c>
  4435b4:	ldr	w10, [sp, #32]
  4435b8:	add	x11, x8, #0x4
  4435bc:	sub	x9, x9, #0x4
  4435c0:	stp	x11, x9, [sp, #16]
  4435c4:	cbz	w10, 443630 <feof@plt+0x40930>
  4435c8:	ldr	w8, [x8]
  4435cc:	lsl	x8, x8, #32
  4435d0:	rev	x0, x8
  4435d4:	b	44367c <feof@plt+0x4097c>
  4435d8:	ldr	w9, [sp, #56]
  4435dc:	cbz	w9, 443638 <feof@plt+0x40938>
  4435e0:	mov	w0, wzr
  4435e4:	b	44367c <feof@plt+0x4097c>
  4435e8:	ldr	w9, [sp, #8]
  4435ec:	ldr	x4, [sp]
  4435f0:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4435f4:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4435f8:	sub	w5, w8, w9
  4435fc:	add	x0, sp, #0x40
  443600:	mov	w1, #0xc8                  	// #200
  443604:	add	x2, x2, #0x4f7
  443608:	add	x3, x3, #0x4e7
  44360c:	bl	402a20 <snprintf@plt>
  443610:	ldp	x8, x0, [sp, #40]
  443614:	add	x1, sp, #0x40
  443618:	mov	w2, wzr
  44361c:	blr	x8
  443620:	mov	x0, xzr
  443624:	b	443674 <feof@plt+0x40974>
  443628:	ldrh	w0, [x8]
  44362c:	b	44367c <feof@plt+0x4097c>
  443630:	ldr	w0, [x8]
  443634:	b	44367c <feof@plt+0x4097c>
  443638:	ldr	w9, [sp, #8]
  44363c:	ldr	x4, [sp]
  443640:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443644:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443648:	sub	w5, w8, w9
  44364c:	add	x0, sp, #0x40
  443650:	mov	w1, #0xc8                  	// #200
  443654:	add	x2, x2, #0x4f7
  443658:	add	x3, x3, #0x4e7
  44365c:	bl	402a20 <snprintf@plt>
  443660:	ldp	x8, x0, [sp, #40]
  443664:	add	x1, sp, #0x40
  443668:	mov	w2, wzr
  44366c:	blr	x8
  443670:	mov	w0, wzr
  443674:	mov	w8, #0x1                   	// #1
  443678:	str	w8, [sp, #56]
  44367c:	orr	x8, x0, x28
  443680:	cbz	x8, 44378c <feof@plt+0x40a8c>
  443684:	ldr	w8, [x22, #48]
  443688:	sub	w8, w8, #0x1
  44368c:	cmp	w8, #0x7
  443690:	b.hi	4436e0 <feof@plt+0x409e0>  // b.pmore
  443694:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443698:	add	x11, x11, #0x4c4
  44369c:	adr	x9, 4436ac <feof@plt+0x409ac>
  4436a0:	ldrb	w10, [x11, x8]
  4436a4:	add	x9, x9, x10, lsl #2
  4436a8:	br	x9
  4436ac:	cmp	x28, #0xff
  4436b0:	b.eq	443380 <feof@plt+0x40680>  // b.none
  4436b4:	b	4436e0 <feof@plt+0x409e0>
  4436b8:	mov	w8, #0xffff                	// #65535
  4436bc:	cmp	x28, x8
  4436c0:	b.eq	443380 <feof@plt+0x40680>  // b.none
  4436c4:	b	4436e0 <feof@plt+0x409e0>
  4436c8:	mov	w8, #0xffffffff            	// #-1
  4436cc:	cmp	x28, x8
  4436d0:	b.ne	4436e0 <feof@plt+0x409e0>  // b.any
  4436d4:	b	443380 <feof@plt+0x40680>
  4436d8:	cmn	x28, #0x1
  4436dc:	b.eq	443380 <feof@plt+0x40680>  // b.none
  4436e0:	ldr	x9, [x23, #16]
  4436e4:	ldr	x8, [x26, #24]
  4436e8:	add	x9, x9, x24
  4436ec:	add	x27, x9, x28
  4436f0:	add	x28, x9, x0
  4436f4:	cbz	x8, 44372c <feof@plt+0x40a2c>
  4436f8:	ldr	x9, [x26]
  4436fc:	mov	w10, #0x18                  	// #24
  443700:	madd	x9, x8, x10, x9
  443704:	ldur	x8, [x9, #-16]
  443708:	cmp	x27, x8
  44370c:	b.eq	44371c <feof@plt+0x40a1c>  // b.none
  443710:	add	x10, x8, #0x1
  443714:	cmp	x27, x10
  443718:	b.ne	44372c <feof@plt+0x40a2c>  // b.any
  44371c:	sub	x9, x9, #0x18
  443720:	ldr	x10, [x9, #16]
  443724:	cmp	x10, x21
  443728:	b.eq	443760 <feof@plt+0x40a60>  // b.none
  44372c:	mov	w1, #0x18                  	// #24
  443730:	mov	x0, x25
  443734:	mov	x2, x19
  443738:	mov	x3, x20
  44373c:	mov	x4, x26
  443740:	bl	439d04 <feof@plt+0x37004>
  443744:	cbz	x0, 443798 <feof@plt+0x40a98>
  443748:	stp	x27, x28, [x0]
  44374c:	str	x21, [x0, #16]
  443750:	ldr	x8, [x26, #24]
  443754:	add	x8, x8, #0x1
  443758:	str	x8, [x26, #24]
  44375c:	b	443384 <feof@plt+0x40684>
  443760:	cmp	x28, x8
  443764:	b.ls	443384 <feof@plt+0x40684>  // b.plast
  443768:	str	x28, [x9, #8]
  44376c:	b	443384 <feof@plt+0x40684>
  443770:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443774:	add	x1, x1, #0x720
  443778:	mov	x0, x20
  44377c:	mov	w2, wzr
  443780:	blr	x19
  443784:	mov	w0, wzr
  443788:	b	443798 <feof@plt+0x40a98>
  44378c:	ldr	w8, [sp, #56]
  443790:	cmp	w8, #0x0
  443794:	cset	w0, eq  // eq = none
  443798:	ldp	x20, x19, [sp, #352]
  44379c:	ldp	x22, x21, [sp, #336]
  4437a0:	ldp	x24, x23, [sp, #320]
  4437a4:	ldp	x26, x25, [sp, #304]
  4437a8:	ldp	x28, x27, [sp, #288]
  4437ac:	ldp	x29, x30, [sp, #272]
  4437b0:	add	sp, sp, #0x170
  4437b4:	ret
  4437b8:	sub	sp, sp, #0x180
  4437bc:	stp	x29, x30, [sp, #288]
  4437c0:	stp	x28, x27, [sp, #304]
  4437c4:	stp	x26, x25, [sp, #320]
  4437c8:	stp	x24, x23, [sp, #336]
  4437cc:	stp	x22, x21, [sp, #352]
  4437d0:	stp	x20, x19, [sp, #368]
  4437d4:	add	x29, sp, #0x120
  4437d8:	ldr	x9, [x1, #16]
  4437dc:	mov	x20, x4
  4437e0:	mov	x19, x3
  4437e4:	cmp	x9, x2
  4437e8:	b.hi	443918 <feof@plt+0x40c18>  // b.pmore
  4437ec:	ldr	x8, [x1, #8]
  4437f0:	sub	x9, x2, x9
  4437f4:	mov	x21, x1
  4437f8:	cmp	x8, x9
  4437fc:	b.ls	443918 <feof@plt+0x40c18>  // b.plast
  443800:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443804:	add	x10, x10, #0x274
  443808:	str	x10, [sp, #16]
  44380c:	ldr	x10, [x0, #56]
  443810:	mov	x22, x0
  443814:	str	x10, [sp, #24]
  443818:	ldr	x11, [x21]
  44381c:	subs	x10, x8, x9
  443820:	add	x9, x11, x9
  443824:	stp	x9, x10, [sp, #32]
  443828:	ldr	w8, [x0, #120]
  44382c:	stp	x19, x20, [sp, #56]
  443830:	str	wzr, [sp, #72]
  443834:	str	w8, [sp, #48]
  443838:	b.eq	4438cc <feof@plt+0x40bcc>  // b.none
  44383c:	adrp	x23, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443840:	adrp	x24, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443844:	mov	w8, wzr
  443848:	mov	w26, wzr
  44384c:	mov	x25, xzr
  443850:	add	x23, x23, #0x4f7
  443854:	add	x24, x24, #0x5b0
  443858:	add	x11, x9, #0x1
  44385c:	sub	x10, x10, #0x1
  443860:	stp	x11, x10, [sp, #32]
  443864:	ldrb	w27, [x9]
  443868:	cmp	w26, #0x3f
  44386c:	b.hi	443880 <feof@plt+0x40b80>  // b.pmore
  443870:	and	x9, x27, #0x7f
  443874:	lsl	x9, x9, x26
  443878:	orr	x25, x9, x25
  44387c:	b	4438b8 <feof@plt+0x40bb8>
  443880:	cbnz	w8, 4438b8 <feof@plt+0x40bb8>
  443884:	ldr	w8, [sp, #24]
  443888:	ldr	x4, [sp, #16]
  44388c:	add	x0, sp, #0x50
  443890:	mov	w1, #0xc8                  	// #200
  443894:	sub	w5, w11, w8
  443898:	mov	x2, x23
  44389c:	mov	x3, x24
  4438a0:	bl	402a20 <snprintf@plt>
  4438a4:	ldp	x8, x0, [sp, #56]
  4438a8:	add	x1, sp, #0x50
  4438ac:	mov	w2, wzr
  4438b0:	blr	x8
  4438b4:	mov	w8, #0x1                   	// #1
  4438b8:	sxtb	w9, w27
  4438bc:	tbz	w9, #31, 443930 <feof@plt+0x40c30>
  4438c0:	ldp	x9, x10, [sp, #32]
  4438c4:	add	w26, w26, #0x7
  4438c8:	cbnz	x10, 443858 <feof@plt+0x40b58>
  4438cc:	ldr	w8, [sp, #72]
  4438d0:	cbnz	w8, 44397c <feof@plt+0x40c7c>
  4438d4:	ldr	w8, [sp, #24]
  4438d8:	ldr	x4, [sp, #16]
  4438dc:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4438e0:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4438e4:	sub	w5, w9, w8
  4438e8:	add	x2, x2, #0x4f7
  4438ec:	add	x3, x3, #0x4e7
  4438f0:	add	x0, sp, #0x50
  4438f4:	mov	w1, #0xc8                  	// #200
  4438f8:	bl	402a20 <snprintf@plt>
  4438fc:	ldp	x8, x0, [sp, #56]
  443900:	add	x1, sp, #0x50
  443904:	mov	w2, wzr
  443908:	blr	x8
  44390c:	mov	w8, #0x1                   	// #1
  443910:	str	w8, [sp, #72]
  443914:	b	44397c <feof@plt+0x40c7c>
  443918:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44391c:	add	x1, x1, #0x6c9
  443920:	mov	x0, x20
  443924:	mov	w2, wzr
  443928:	blr	x19
  44392c:	b	4439b8 <feof@plt+0x40cb8>
  443930:	cbz	x25, 44397c <feof@plt+0x40c7c>
  443934:	ldr	x8, [x21, #88]
  443938:	sub	x10, x25, #0x1
  44393c:	cmp	x10, x8
  443940:	b.cs	443aa0 <feof@plt+0x40da0>  // b.hs, b.nlast
  443944:	ldr	x9, [x21, #96]
  443948:	add	x24, x9, x10, lsl #5
  44394c:	ldr	x10, [x24]
  443950:	cmp	x10, x25
  443954:	b.ne	443aa8 <feof@plt+0x40da8>  // b.any
  443958:	cbz	x24, 4439b8 <feof@plt+0x40cb8>
  44395c:	ldr	x8, [x24, #16]
  443960:	cbz	x8, 4439b8 <feof@plt+0x40cb8>
  443964:	mov	x25, xzr
  443968:	mov	x26, xzr
  44396c:	mov	x23, xzr
  443970:	add	x27, sp, #0x50
  443974:	mov	w28, #0x2007                	// #8199
  443978:	b	443a00 <feof@plt+0x40d00>
  44397c:	ldr	w8, [sp, #32]
  443980:	ldr	w9, [sp, #24]
  443984:	ldr	x4, [sp, #16]
  443988:	adrp	x2, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44398c:	adrp	x3, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443990:	sub	w5, w8, w9
  443994:	add	x2, x2, #0x4f7
  443998:	add	x3, x3, #0x6f7
  44399c:	add	x0, sp, #0x50
  4439a0:	mov	w1, #0xc8                  	// #200
  4439a4:	bl	402a20 <snprintf@plt>
  4439a8:	ldp	x8, x0, [sp, #56]
  4439ac:	add	x1, sp, #0x50
  4439b0:	mov	w2, wzr
  4439b4:	blr	x8
  4439b8:	mov	x23, xzr
  4439bc:	mov	x0, x23
  4439c0:	ldp	x20, x19, [sp, #368]
  4439c4:	ldp	x22, x21, [sp, #352]
  4439c8:	ldp	x24, x23, [sp, #336]
  4439cc:	ldp	x26, x25, [sp, #320]
  4439d0:	ldp	x28, x27, [sp, #304]
  4439d4:	ldp	x29, x30, [sp, #288]
  4439d8:	add	sp, sp, #0x180
  4439dc:	ret
  4439e0:	ldr	w8, [sp, #80]
  4439e4:	cmp	w8, #0x4
  4439e8:	b.eq	443af0 <feof@plt+0x40df0>  // b.none
  4439ec:	ldr	x8, [x24, #16]
  4439f0:	add	x26, x26, #0x1
  4439f4:	add	x25, x25, #0x8
  4439f8:	cmp	x26, x8
  4439fc:	b.cs	4439bc <feof@plt+0x40cbc>  // b.hs, b.nlast
  443a00:	ldr	x8, [x24, #24]
  443a04:	ldp	w3, w2, [x21, #40]
  443a08:	ldr	w4, [x21, #48]
  443a0c:	ldp	x5, x6, [x22, #104]
  443a10:	add	x8, x8, x25
  443a14:	ldr	w0, [x8, #4]
  443a18:	ldr	x7, [x22, #8]
  443a1c:	add	x1, sp, #0x10
  443a20:	str	x27, [sp]
  443a24:	bl	43f184 <feof@plt+0x3c484>
  443a28:	cbz	w0, 4439b8 <feof@plt+0x40cb8>
  443a2c:	ldr	x8, [x24, #24]
  443a30:	add	x2, x8, x25
  443a34:	ldr	w8, [x2]
  443a38:	cmp	w8, #0x6d
  443a3c:	b.gt	443a74 <feof@plt+0x40d74>
  443a40:	cmp	w8, #0x3
  443a44:	b.eq	443a88 <feof@plt+0x40d88>  // b.none
  443a48:	cmp	w8, #0x47
  443a4c:	b.ne	4439ec <feof@plt+0x40cec>  // b.any
  443a50:	add	x3, sp, #0x50
  443a54:	mov	x0, x22
  443a58:	mov	x1, x21
  443a5c:	mov	x4, x19
  443a60:	mov	x5, x20
  443a64:	bl	4431f8 <feof@plt+0x404f8>
  443a68:	cmp	x0, #0x0
  443a6c:	csel	x23, x23, x0, eq  // eq = none
  443a70:	b	4439ec <feof@plt+0x40cec>
  443a74:	cmp	w8, #0x6e
  443a78:	b.eq	4439e0 <feof@plt+0x40ce0>  // b.none
  443a7c:	cmp	w8, w28
  443a80:	b.eq	4439e0 <feof@plt+0x40ce0>  // b.none
  443a84:	b	4439ec <feof@plt+0x40cec>
  443a88:	cbnz	x23, 4439ec <feof@plt+0x40cec>
  443a8c:	ldr	w8, [sp, #80]
  443a90:	ldr	x9, [sp, #88]
  443a94:	cmp	w8, #0x4
  443a98:	csel	x23, x9, xzr, eq  // eq = none
  443a9c:	b	4439ec <feof@plt+0x40cec>
  443aa0:	cbz	x8, 443ae4 <feof@plt+0x40de4>
  443aa4:	ldr	x9, [x21, #96]
  443aa8:	mov	x10, xzr
  443aac:	b	443abc <feof@plt+0x40dbc>
  443ab0:	cmp	x10, x11
  443ab4:	mov	x8, x11
  443ab8:	b.cs	443ae4 <feof@plt+0x40de4>  // b.hs, b.nlast
  443abc:	add	x11, x8, x10
  443ac0:	lsr	x11, x11, #1
  443ac4:	add	x24, x9, x11, lsl #5
  443ac8:	ldr	x12, [x24]
  443acc:	cmp	x12, x25
  443ad0:	b.hi	443ab0 <feof@plt+0x40db0>  // b.pmore
  443ad4:	b.cs	443958 <feof@plt+0x40c58>  // b.hs, b.nlast
  443ad8:	add	x10, x11, #0x1
  443adc:	mov	x11, x8
  443ae0:	b	443ab0 <feof@plt+0x40db0>
  443ae4:	adrp	x1, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443ae8:	add	x1, x1, #0x521
  443aec:	b	443920 <feof@plt+0x40c20>
  443af0:	ldr	x23, [sp, #88]
  443af4:	b	4439bc <feof@plt+0x40cbc>
  443af8:	sub	sp, sp, #0x90
  443afc:	stp	x29, x30, [sp, #48]
  443b00:	stp	x28, x27, [sp, #64]
  443b04:	stp	x26, x25, [sp, #80]
  443b08:	stp	x24, x23, [sp, #96]
  443b0c:	stp	x22, x21, [sp, #112]
  443b10:	stp	x20, x19, [sp, #128]
  443b14:	add	x29, sp, #0x30
  443b18:	cmp	x1, #0x2
  443b1c:	b.cs	443b40 <feof@plt+0x40e40>  // b.hs, b.nlast
  443b20:	ldp	x20, x19, [sp, #128]
  443b24:	ldp	x22, x21, [sp, #112]
  443b28:	ldp	x24, x23, [sp, #96]
  443b2c:	ldp	x26, x25, [sp, #80]
  443b30:	ldp	x28, x27, [sp, #64]
  443b34:	ldp	x29, x30, [sp, #48]
  443b38:	add	sp, sp, #0x90
  443b3c:	ret
  443b40:	lsl	x8, x2, #1
  443b44:	mov	x19, x3
  443b48:	mov	x20, x2
  443b4c:	mov	x22, x1
  443b50:	mov	x21, x0
  443b54:	stur	x8, [x29, #-8]
  443b58:	and	x26, x2, #0xffffffffffffffe0
  443b5c:	add	x8, x2, #0x10
  443b60:	str	x8, [sp]
  443b64:	add	x8, x21, x20
  443b68:	str	x8, [sp, #16]
  443b6c:	add	x8, x21, x26
  443b70:	str	x8, [sp, #8]
  443b74:	ldr	x8, [sp]
  443b78:	add	x8, x21, x8
  443b7c:	str	x8, [sp, #24]
  443b80:	add	x8, x21, #0x10
  443b84:	stur	x8, [x29, #-16]
  443b88:	cbz	x20, 443bf0 <feof@plt+0x40ef0>
  443b8c:	lsr	x10, x22, #1
  443b90:	mul	x9, x10, x20
  443b94:	cmp	x20, #0x20
  443b98:	add	x8, x21, x9
  443b9c:	b.cc	443bbc <feof@plt+0x40ebc>  // b.lo, b.ul, b.last
  443ba0:	add	x10, x10, #0x1
  443ba4:	madd	x10, x10, x20, x21
  443ba8:	cmp	x21, x10
  443bac:	b.cs	443d78 <feof@plt+0x41078>  // b.hs, b.nlast
  443bb0:	ldr	x10, [sp, #16]
  443bb4:	cmp	x8, x10
  443bb8:	b.cs	443d78 <feof@plt+0x41078>  // b.hs, b.nlast
  443bbc:	mov	x10, xzr
  443bc0:	mov	x9, x21
  443bc4:	sub	x10, x20, x10
  443bc8:	ldrb	w11, [x8]
  443bcc:	ldrb	w12, [x9]
  443bd0:	subs	x10, x10, #0x1
  443bd4:	strb	w11, [x9], #1
  443bd8:	strb	w12, [x8], #1
  443bdc:	b.ne	443bc8 <feof@plt+0x40ec8>  // b.any
  443be0:	cmp	x22, #0x2
  443be4:	b.cs	443bf0 <feof@plt+0x40ef0>  // b.hs, b.nlast
  443be8:	mov	x23, xzr
  443bec:	b	443d48 <feof@plt+0x41048>
  443bf0:	ldr	x28, [sp, #24]
  443bf4:	mov	x27, xzr
  443bf8:	mov	x23, xzr
  443bfc:	mov	w25, #0x1                   	// #1
  443c00:	b	443c1c <feof@plt+0x40f1c>
  443c04:	mov	x23, x8
  443c08:	add	x25, x25, #0x1
  443c0c:	add	x27, x27, #0x1
  443c10:	cmp	x25, x22
  443c14:	add	x28, x28, x20
  443c18:	b.eq	443cf0 <feof@plt+0x40ff0>  // b.none
  443c1c:	madd	x24, x25, x20, x21
  443c20:	mov	x0, x21
  443c24:	mov	x1, x24
  443c28:	blr	x19
  443c2c:	cmp	w0, #0x1
  443c30:	b.lt	443c08 <feof@plt+0x40f08>  // b.tstop
  443c34:	add	x8, x23, #0x1
  443c38:	cmp	x25, x8
  443c3c:	b.eq	443c04 <feof@plt+0x40f04>  // b.none
  443c40:	cbz	x20, 443c04 <feof@plt+0x40f04>
  443c44:	mul	x10, x8, x20
  443c48:	cmp	x20, #0x20
  443c4c:	add	x9, x21, x10
  443c50:	b.cc	443c84 <feof@plt+0x40f84>  // b.lo, b.ul, b.last
  443c54:	ldur	x12, [x29, #-8]
  443c58:	mul	x11, x27, x20
  443c5c:	add	x12, x12, x11
  443c60:	add	x12, x21, x12
  443c64:	cmp	x9, x12
  443c68:	b.cs	443ca8 <feof@plt+0x40fa8>  // b.hs, b.nlast
  443c6c:	add	x11, x11, x20
  443c70:	add	x12, x23, #0x2
  443c74:	add	x11, x21, x11
  443c78:	madd	x12, x12, x20, x21
  443c7c:	cmp	x11, x12
  443c80:	b.cs	443ca8 <feof@plt+0x40fa8>  // b.hs, b.nlast
  443c84:	mov	x10, xzr
  443c88:	sub	x10, x20, x10
  443c8c:	ldrb	w11, [x24]
  443c90:	ldrb	w12, [x9]
  443c94:	subs	x10, x10, #0x1
  443c98:	strb	w11, [x9], #1
  443c9c:	strb	w12, [x24], #1
  443ca0:	b.ne	443c8c <feof@plt+0x40f8c>  // b.any
  443ca4:	b	443c04 <feof@plt+0x40f04>
  443ca8:	ldur	x11, [x29, #-16]
  443cac:	add	x9, x9, x26
  443cb0:	add	x24, x24, x26
  443cb4:	mov	x12, x26
  443cb8:	add	x10, x11, x10
  443cbc:	mov	x11, x28
  443cc0:	ldp	q0, q3, [x10, #-16]
  443cc4:	ldp	q1, q2, [x11, #-16]
  443cc8:	subs	x12, x12, #0x20
  443ccc:	stp	q1, q2, [x10, #-16]
  443cd0:	stp	q0, q3, [x11, #-16]
  443cd4:	add	x11, x11, #0x20
  443cd8:	add	x10, x10, #0x20
  443cdc:	b.ne	443cc0 <feof@plt+0x40fc0>  // b.any
  443ce0:	cmp	x26, x20
  443ce4:	mov	x10, x26
  443ce8:	b.eq	443c04 <feof@plt+0x40f04>  // b.none
  443cec:	b	443c88 <feof@plt+0x40f88>
  443cf0:	cbz	x23, 443d48 <feof@plt+0x41048>
  443cf4:	cbz	x20, 443d48 <feof@plt+0x41048>
  443cf8:	mul	x9, x23, x20
  443cfc:	cmp	x20, #0x20
  443d00:	add	x8, x21, x9
  443d04:	b.cc	443d24 <feof@plt+0x41024>  // b.lo, b.ul, b.last
  443d08:	add	x10, x23, #0x1
  443d0c:	madd	x10, x10, x20, x21
  443d10:	cmp	x21, x10
  443d14:	b.cs	443db4 <feof@plt+0x410b4>  // b.hs, b.nlast
  443d18:	ldr	x10, [sp, #16]
  443d1c:	cmp	x8, x10
  443d20:	b.cs	443db4 <feof@plt+0x410b4>  // b.hs, b.nlast
  443d24:	mov	x10, xzr
  443d28:	mov	x9, x21
  443d2c:	sub	x10, x20, x10
  443d30:	ldrb	w11, [x8]
  443d34:	ldrb	w12, [x9]
  443d38:	subs	x10, x10, #0x1
  443d3c:	strb	w11, [x9], #1
  443d40:	strb	w12, [x8], #1
  443d44:	b.ne	443d30 <feof@plt+0x41030>  // b.any
  443d48:	cmp	x22, x23, lsl #1
  443d4c:	b.hi	443df0 <feof@plt+0x410f0>  // b.pmore
  443d50:	add	x8, x23, #0x1
  443d54:	madd	x0, x8, x20, x21
  443d58:	sub	x1, x22, x8
  443d5c:	mov	x2, x20
  443d60:	mov	x3, x19
  443d64:	bl	443af8 <feof@plt+0x40df8>
  443d68:	cmp	x23, #0x2
  443d6c:	mov	x22, x23
  443d70:	b.cs	443b88 <feof@plt+0x40e88>  // b.hs, b.nlast
  443d74:	b	443b20 <feof@plt+0x40e20>
  443d78:	add	x8, x8, x26
  443d7c:	mov	x10, x26
  443d80:	mov	x11, x21
  443d84:	add	x12, x11, x9
  443d88:	ldp	q0, q1, [x12]
  443d8c:	ldp	q2, q3, [x11]
  443d90:	subs	x10, x10, #0x20
  443d94:	stp	q0, q1, [x11], #32
  443d98:	stp	q2, q3, [x12]
  443d9c:	b.ne	443d84 <feof@plt+0x41084>  // b.any
  443da0:	ldr	x9, [sp, #8]
  443da4:	cmp	x26, x20
  443da8:	mov	x10, x26
  443dac:	b.ne	443bc4 <feof@plt+0x40ec4>  // b.any
  443db0:	b	443be0 <feof@plt+0x40ee0>
  443db4:	add	x8, x8, x26
  443db8:	mov	x10, x26
  443dbc:	mov	x11, x21
  443dc0:	add	x12, x11, x9
  443dc4:	ldp	q0, q1, [x12]
  443dc8:	ldp	q2, q3, [x11]
  443dcc:	subs	x10, x10, #0x20
  443dd0:	stp	q0, q1, [x11], #32
  443dd4:	stp	q2, q3, [x12]
  443dd8:	b.ne	443dc0 <feof@plt+0x410c0>  // b.any
  443ddc:	ldr	x9, [sp, #8]
  443de0:	cmp	x26, x20
  443de4:	mov	x10, x26
  443de8:	b.ne	443d2c <feof@plt+0x4102c>  // b.any
  443dec:	b	443d48 <feof@plt+0x41048>
  443df0:	mov	x0, x21
  443df4:	mov	x1, x23
  443df8:	mov	x2, x20
  443dfc:	mov	x3, x19
  443e00:	bl	443af8 <feof@plt+0x40df8>
  443e04:	add	x8, x23, #0x1
  443e08:	sub	x22, x22, x8
  443e0c:	cmp	x22, #0x2
  443e10:	madd	x21, x8, x20, x21
  443e14:	b.cs	443b64 <feof@plt+0x40e64>  // b.hs, b.nlast
  443e18:	b	443b20 <feof@plt+0x40e20>
  443e1c:	mov	x8, x0
  443e20:	mov	w0, wzr
  443e24:	cbz	x8, 443e40 <feof@plt+0x41140>
  443e28:	cbz	x1, 443e40 <feof@plt+0x41140>
  443e2c:	cmp	w2, #0x1
  443e30:	b.lt	443e40 <feof@plt+0x41140>  // b.tstop
  443e34:	mov	w0, #0x1                   	// #1
  443e38:	stp	xzr, x1, [x8]
  443e3c:	str	w2, [x8, #16]
  443e40:	ret
  443e44:	mov	x8, x0
  443e48:	mov	w0, wzr
  443e4c:	cbz	x8, 443e70 <feof@plt+0x41170>
  443e50:	tbnz	w1, #31, 443e70 <feof@plt+0x41170>
  443e54:	cbz	x2, 443e70 <feof@plt+0x41170>
  443e58:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443e5c:	ldr	d0, [x9, #1864]
  443e60:	mov	w0, #0x1                   	// #1
  443e64:	str	w1, [x8, #8]
  443e68:	str	x2, [x8, #16]
  443e6c:	str	d0, [x8]
  443e70:	ret
  443e74:	sub	w9, w1, #0x1
  443e78:	mov	x8, x0
  443e7c:	cmp	w9, #0x4
  443e80:	mov	w0, wzr
  443e84:	b.hi	443ea8 <feof@plt+0x411a8>  // b.pmore
  443e88:	cbz	x8, 443ea8 <feof@plt+0x411a8>
  443e8c:	cbz	x2, 443ea8 <feof@plt+0x411a8>
  443e90:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  443e94:	ldr	d0, [x9, #1872]
  443e98:	mov	w0, #0x1                   	// #1
  443e9c:	str	w1, [x8, #8]
  443ea0:	str	x2, [x8, #16]
  443ea4:	str	d0, [x8]
  443ea8:	ret
  443eac:	sub	w9, w1, #0x1
  443eb0:	mov	x8, x0
  443eb4:	cmp	w9, #0x4
  443eb8:	mov	w0, wzr
  443ebc:	b.hi	443ee0 <feof@plt+0x411e0>  // b.pmore
  443ec0:	cbz	x8, 443ee0 <feof@plt+0x411e0>
  443ec4:	cbz	x2, 443ee0 <feof@plt+0x411e0>
  443ec8:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  443ecc:	ldr	d0, [x9, #3592]
  443ed0:	mov	w0, #0x1                   	// #1
  443ed4:	str	w1, [x8, #8]
  443ed8:	str	x2, [x8, #16]
  443edc:	str	d0, [x8]
  443ee0:	ret
  443ee4:	stp	x29, x30, [sp, #-32]!
  443ee8:	stp	x20, x19, [sp, #16]
  443eec:	ldr	x8, [x0, #24]
  443ef0:	mov	x19, x0
  443ef4:	mov	w20, w1
  443ef8:	mov	x29, sp
  443efc:	ldrb	w9, [x8]
  443f00:	cmp	w9, #0x5f
  443f04:	b.ne	443f1c <feof@plt+0x4121c>  // b.any
  443f08:	add	x10, x8, #0x1
  443f0c:	str	x10, [x19, #24]
  443f10:	ldrb	w9, [x8, #1]
  443f14:	mov	x8, x10
  443f18:	b	443f20 <feof@plt+0x41220>
  443f1c:	cbnz	w20, 443f64 <feof@plt+0x41264>
  443f20:	cmp	w9, #0x5a
  443f24:	b.ne	443f64 <feof@plt+0x41264>  // b.any
  443f28:	add	x8, x8, #0x1
  443f2c:	mov	x0, x19
  443f30:	mov	w1, w20
  443f34:	str	x8, [x19, #24]
  443f38:	bl	4440a0 <feof@plt+0x413a0>
  443f3c:	cbz	w20, 44408c <feof@plt+0x4138c>
  443f40:	ldrb	w8, [x19, #16]
  443f44:	tbz	w8, #0, 44408c <feof@plt+0x4138c>
  443f48:	ldr	x11, [x19, #24]
  443f4c:	ldrb	w8, [x11]
  443f50:	cmp	w8, #0x2e
  443f54:	b.ne	44408c <feof@plt+0x4138c>  // b.any
  443f58:	mov	w9, #0x18                  	// #24
  443f5c:	mov	w10, #0x4e                  	// #78
  443f60:	b	443f84 <feof@plt+0x41284>
  443f64:	mov	x8, xzr
  443f68:	b	444090 <feof@plt+0x41390>
  443f6c:	mov	x8, xzr
  443f70:	ldr	x11, [x19, #24]
  443f74:	mov	x0, x8
  443f78:	ldrb	w12, [x11]
  443f7c:	cmp	w12, #0x2e
  443f80:	b.ne	444090 <feof@plt+0x41390>  // b.any
  443f84:	ldrb	w8, [x11, #1]
  443f88:	cmp	w8, #0x5f
  443f8c:	b.eq	443fb4 <feof@plt+0x412b4>  // b.none
  443f90:	sub	w12, w8, #0x61
  443f94:	and	w12, w12, #0xff
  443f98:	cmp	w12, #0x1a
  443f9c:	b.cc	443fb4 <feof@plt+0x412b4>  // b.lo, b.ul, b.last
  443fa0:	sub	w8, w8, #0x30
  443fa4:	cmp	w8, #0xa
  443fa8:	mov	x12, x11
  443fac:	b.cc	443fdc <feof@plt+0x412dc>  // b.lo, b.ul, b.last
  443fb0:	b	44408c <feof@plt+0x4138c>
  443fb4:	add	x12, x11, #0x1
  443fb8:	ldrb	w8, [x12, #1]!
  443fbc:	cmp	w8, #0x5f
  443fc0:	sub	w13, w8, #0x61
  443fc4:	b.eq	443fb8 <feof@plt+0x412b8>  // b.none
  443fc8:	and	w13, w13, #0xff
  443fcc:	cmp	w13, #0x1a
  443fd0:	b.cc	443fb8 <feof@plt+0x412b8>  // b.lo, b.ul, b.last
  443fd4:	cmp	w8, #0x2e
  443fd8:	b.ne	444004 <feof@plt+0x41304>  // b.any
  443fdc:	ldrb	w8, [x12, #1]
  443fe0:	sub	w8, w8, #0x30
  443fe4:	cmp	w8, #0x9
  443fe8:	b.hi	444004 <feof@plt+0x41304>  // b.pmore
  443fec:	add	x12, x12, #0x1
  443ff0:	ldrb	w8, [x12, #1]!
  443ff4:	sub	w13, w8, #0x30
  443ff8:	cmp	w13, #0xa
  443ffc:	b.cc	443ff0 <feof@plt+0x412f0>  // b.lo, b.ul, b.last
  444000:	b	443fd4 <feof@plt+0x412d4>
  444004:	ldp	w13, w8, [x19, #40]
  444008:	str	x12, [x19, #24]
  44400c:	sxtw	x13, w13
  444010:	cmp	w13, w8
  444014:	mov	x8, xzr
  444018:	b.ge	443f70 <feof@plt+0x41270>  // b.tcont
  44401c:	ldr	x15, [x19, #32]
  444020:	sub	w14, w12, w11
  444024:	add	w16, w13, #0x1
  444028:	cmp	w14, #0x1
  44402c:	madd	x12, x13, x9, x15
  444030:	str	wzr, [x12, #4]
  444034:	str	w16, [x19, #40]
  444038:	b.lt	443f70 <feof@plt+0x41270>  // b.tstop
  44403c:	cbz	x15, 443f70 <feof@plt+0x41270>
  444040:	madd	x8, x13, x9, x15
  444044:	str	xzr, [x12]
  444048:	str	x11, [x8, #8]
  44404c:	str	w14, [x8, #16]
  444050:	cbz	x0, 443f6c <feof@plt+0x4126c>
  444054:	ldp	w11, w8, [x19, #40]
  444058:	sxtw	x11, w11
  44405c:	cmp	w11, w8
  444060:	b.ge	443f6c <feof@plt+0x4126c>  // b.tcont
  444064:	ldr	x13, [x19, #32]
  444068:	add	w14, w11, #0x1
  44406c:	madd	x8, x11, x9, x13
  444070:	str	wzr, [x8, #4]
  444074:	str	w14, [x19, #40]
  444078:	cbz	x13, 443f6c <feof@plt+0x4126c>
  44407c:	madd	x11, x11, x9, x13
  444080:	str	w10, [x8]
  444084:	stp	x0, x12, [x11, #8]
  444088:	b	443f70 <feof@plt+0x41270>
  44408c:	mov	x8, x0
  444090:	ldp	x20, x19, [sp, #16]
  444094:	mov	x0, x8
  444098:	ldp	x29, x30, [sp], #32
  44409c:	ret
  4440a0:	stp	x29, x30, [sp, #-48]!
  4440a4:	stp	x22, x21, [sp, #16]
  4440a8:	stp	x20, x19, [sp, #32]
  4440ac:	mov	x22, x0
  4440b0:	ldr	x9, [x22, #24]!
  4440b4:	mov	x19, x0
  4440b8:	mov	x29, sp
  4440bc:	ldrb	w8, [x9]
  4440c0:	cmp	w8, #0x54
  4440c4:	b.eq	4440d0 <feof@plt+0x413d0>  // b.none
  4440c8:	cmp	w8, #0x47
  4440cc:	b.ne	444174 <feof@plt+0x41474>  // b.any
  4440d0:	ldr	w10, [x19, #72]
  4440d4:	add	w8, w10, #0x14
  4440d8:	str	w8, [x19, #72]
  4440dc:	ldrb	w8, [x9]
  4440e0:	cmp	w8, #0x47
  4440e4:	b.eq	4441c4 <feof@plt+0x414c4>  // b.none
  4440e8:	cmp	w8, #0x54
  4440ec:	b.ne	445224 <feof@plt+0x42524>  // b.any
  4440f0:	add	x8, x9, #0x1
  4440f4:	str	x8, [x22]
  4440f8:	ldrb	w8, [x9, #1]
  4440fc:	cbz	w8, 445224 <feof@plt+0x42524>
  444100:	add	x8, x9, #0x2
  444104:	str	x8, [x22]
  444108:	ldrb	w11, [x9, #1]
  44410c:	mov	x20, xzr
  444110:	sub	w11, w11, #0x41
  444114:	cmp	w11, #0x35
  444118:	b.hi	445228 <feof@plt+0x42528>  // b.pmore
  44411c:	adrp	x12, 465000 <_obstack_memory_used@@Base+0xfdd8>
  444120:	add	x12, x12, #0x7bc
  444124:	adr	x13, 444134 <feof@plt+0x41434>
  444128:	ldrh	w14, [x12, x11, lsl #1]
  44412c:	add	x13, x13, x14, lsl #2
  444130:	br	x13
  444134:	mov	x0, x19
  444138:	bl	447c30 <feof@plt+0x44f30>
  44413c:	cbz	x0, 445224 <feof@plt+0x42524>
  444140:	ldp	w8, w9, [x19, #40]
  444144:	sxtw	x8, w8
  444148:	cmp	w8, w9
  44414c:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444150:	ldr	x9, [x19, #32]
  444154:	mov	w10, #0x18                  	// #24
  444158:	add	w11, w8, #0x1
  44415c:	madd	x20, x8, x10, x9
  444160:	str	wzr, [x20, #4]
  444164:	str	w11, [x19, #40]
  444168:	cbz	x9, 445224 <feof@plt+0x42524>
  44416c:	mov	w10, #0x30                  	// #48
  444170:	b	444be4 <feof@plt+0x41ee4>
  444174:	mov	x0, x19
  444178:	mov	w21, w1
  44417c:	bl	447480 <feof@plt+0x44780>
  444180:	mov	x20, x0
  444184:	cbz	x0, 445228 <feof@plt+0x42528>
  444188:	cbz	w21, 44424c <feof@plt+0x4154c>
  44418c:	ldrb	w8, [x19, #16]
  444190:	tbnz	w8, #0, 44424c <feof@plt+0x4154c>
  444194:	adrp	x8, 465000 <_obstack_memory_used@@Base+0xfdd8>
  444198:	add	x8, x8, #0x8c6
  44419c:	ldr	w9, [x20]
  4441a0:	sub	w9, w9, #0x2
  4441a4:	cmp	w9, #0x4e
  4441a8:	b.hi	445228 <feof@plt+0x42528>  // b.pmore
  4441ac:	adr	x10, 4441bc <feof@plt+0x414bc>
  4441b0:	ldrh	w11, [x8, x9, lsl #1]
  4441b4:	add	x10, x10, x11, lsl #2
  4441b8:	br	x10
  4441bc:	ldr	x20, [x20, #8]
  4441c0:	b	44419c <feof@plt+0x4149c>
  4441c4:	add	x8, x9, #0x1
  4441c8:	str	x8, [x22]
  4441cc:	ldrb	w8, [x9, #1]
  4441d0:	cbz	w8, 445224 <feof@plt+0x42524>
  4441d4:	add	x8, x9, #0x2
  4441d8:	str	x8, [x22]
  4441dc:	ldrb	w10, [x9, #1]
  4441e0:	mov	x20, xzr
  4441e4:	sub	w10, w10, #0x41
  4441e8:	cmp	w10, #0x31
  4441ec:	b.hi	445228 <feof@plt+0x42528>  // b.pmore
  4441f0:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4441f4:	add	x11, x11, #0x758
  4441f8:	adr	x12, 444208 <feof@plt+0x41508>
  4441fc:	ldrh	w13, [x11, x10, lsl #1]
  444200:	add	x12, x12, x13, lsl #2
  444204:	br	x12
  444208:	mov	x0, x19
  44420c:	mov	w1, wzr
  444210:	bl	4440a0 <feof@plt+0x413a0>
  444214:	cbz	x0, 445224 <feof@plt+0x42524>
  444218:	ldp	w8, w9, [x19, #40]
  44421c:	sxtw	x8, w8
  444220:	cmp	w8, w9
  444224:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444228:	ldr	x9, [x19, #32]
  44422c:	mov	w10, #0x18                  	// #24
  444230:	add	w11, w8, #0x1
  444234:	madd	x20, x8, x10, x9
  444238:	str	wzr, [x20, #4]
  44423c:	str	w11, [x19, #40]
  444240:	cbz	x9, 445224 <feof@plt+0x42524>
  444244:	mov	w10, #0x17                  	// #23
  444248:	b	444be4 <feof@plt+0x41ee4>
  44424c:	ldr	x8, [x22]
  444250:	ldrb	w9, [x8]
  444254:	cbz	w9, 445228 <feof@plt+0x42528>
  444258:	cmp	w9, #0x45
  44425c:	b.eq	445228 <feof@plt+0x42528>  // b.none
  444260:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  444264:	add	x11, x11, #0x828
  444268:	mov	x12, x20
  44426c:	ldr	w10, [x12]
  444270:	sub	w13, w10, #0x2
  444274:	cmp	w13, #0x4e
  444278:	mov	w10, wzr
  44427c:	b.hi	444d1c <feof@plt+0x4201c>  // b.pmore
  444280:	adr	x14, 444290 <feof@plt+0x41590>
  444284:	ldrh	w15, [x11, x13, lsl #1]
  444288:	add	x14, x14, x15, lsl #2
  44428c:	br	x14
  444290:	add	x10, x12, #0x8
  444294:	ldr	x12, [x10]
  444298:	cbnz	x12, 44426c <feof@plt+0x4156c>
  44429c:	b	444d18 <feof@plt+0x42018>
  4442a0:	add	x10, x12, #0x10
  4442a4:	b	444294 <feof@plt+0x41594>
  4442a8:	ldr	x8, [x20, #16]
  4442ac:	mov	x10, #0x1f                  	// #31
  4442b0:	mov	w9, #0x1                   	// #1
  4442b4:	movk	x10, #0x1a, lsl #48
  4442b8:	ldr	w11, [x8]
  4442bc:	sub	w11, w11, #0x1c
  4442c0:	cmp	w11, #0x34
  4442c4:	b.hi	445228 <feof@plt+0x42528>  // b.pmore
  4442c8:	lsl	x11, x9, x11
  4442cc:	tst	x11, x10
  4442d0:	b.eq	445228 <feof@plt+0x42528>  // b.none
  4442d4:	ldr	x8, [x8, #8]
  4442d8:	str	x8, [x20, #16]
  4442dc:	b	4442b8 <feof@plt+0x415b8>
  4442e0:	mov	x0, x19
  4442e4:	bl	447480 <feof@plt+0x44780>
  4442e8:	ldp	w9, w8, [x19, #40]
  4442ec:	sxtw	x9, w9
  4442f0:	cmp	w9, w8
  4442f4:	b.ge	444404 <feof@plt+0x41704>  // b.tcont
  4442f8:	ldr	x10, [x19, #32]
  4442fc:	mov	w8, #0x18                  	// #24
  444300:	add	w11, w9, #0x1
  444304:	madd	x8, x9, x8, x10
  444308:	str	wzr, [x8, #4]
  44430c:	str	w11, [x19, #40]
  444310:	cbz	x10, 444404 <feof@plt+0x41704>
  444314:	mov	w11, #0x42                  	// #66
  444318:	str	w11, [x8]
  44431c:	ldr	x15, [x22]
  444320:	ldrb	w12, [x15]
  444324:	cmp	w12, #0x6e
  444328:	b.ne	444df8 <feof@plt+0x420f8>  // b.any
  44432c:	add	x13, x15, #0x1
  444330:	str	x13, [x22]
  444334:	ldrb	w12, [x15, #1]
  444338:	mov	w11, #0x1                   	// #1
  44433c:	mov	x15, x13
  444340:	b	444dfc <feof@plt+0x420fc>
  444344:	ldrb	w8, [x8]
  444348:	cbz	w8, 444ba4 <feof@plt+0x41ea4>
  44434c:	add	x8, x9, #0x3
  444350:	str	x8, [x19, #24]
  444354:	ldrb	w20, [x9, #2]
  444358:	mov	x0, x19
  44435c:	mov	w1, wzr
  444360:	bl	4440a0 <feof@plt+0x413a0>
  444364:	cmp	w20, #0x6e
  444368:	b.ne	444bb0 <feof@plt+0x41eb0>  // b.any
  44436c:	cbz	x0, 445224 <feof@plt+0x42524>
  444370:	ldp	w8, w9, [x19, #40]
  444374:	sxtw	x8, w8
  444378:	cmp	w8, w9
  44437c:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444380:	ldr	x9, [x19, #32]
  444384:	mov	w10, #0x18                  	// #24
  444388:	add	w11, w8, #0x1
  44438c:	madd	x20, x8, x10, x9
  444390:	str	wzr, [x20, #4]
  444394:	str	w11, [x19, #40]
  444398:	cbz	x9, 445224 <feof@plt+0x42524>
  44439c:	mov	w10, #0x4a                  	// #74
  4443a0:	b	444be4 <feof@plt+0x41ee4>
  4443a4:	mov	x0, x19
  4443a8:	bl	447480 <feof@plt+0x44780>
  4443ac:	cbz	x0, 445224 <feof@plt+0x42524>
  4443b0:	ldp	w8, w9, [x19, #40]
  4443b4:	sxtw	x8, w8
  4443b8:	cmp	w8, w9
  4443bc:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  4443c0:	ldr	x9, [x19, #32]
  4443c4:	mov	w10, #0x18                  	// #24
  4443c8:	add	w11, w8, #0x1
  4443cc:	madd	x20, x8, x10, x9
  4443d0:	str	wzr, [x20, #4]
  4443d4:	str	w11, [x19, #40]
  4443d8:	cbz	x9, 445224 <feof@plt+0x42524>
  4443dc:	mov	w10, #0x13                  	// #19
  4443e0:	b	444be4 <feof@plt+0x41ee4>
  4443e4:	ldrb	w10, [x8]
  4443e8:	cmp	w10, #0x6e
  4443ec:	b.ne	444434 <feof@plt+0x41734>  // b.any
  4443f0:	add	x8, x9, #0x3
  4443f4:	str	x8, [x22]
  4443f8:	ldrb	w10, [x9, #3]
  4443fc:	mov	w9, #0x1                   	// #1
  444400:	b	444438 <feof@plt+0x41738>
  444404:	mov	x8, xzr
  444408:	b	445050 <feof@plt+0x42350>
  44440c:	ldr	x10, [x12, #8]
  444410:	cbz	x10, 44442c <feof@plt+0x4172c>
  444414:	ldr	w11, [x10]
  444418:	sub	w12, w11, #0x1
  44441c:	cmp	w12, #0x2
  444420:	b.cs	444cf0 <feof@plt+0x41ff0>  // b.hs, b.nlast
  444424:	ldr	x10, [x10, #16]
  444428:	cbnz	x10, 444414 <feof@plt+0x41714>
  44442c:	mov	w10, #0x1                   	// #1
  444430:	b	444d1c <feof@plt+0x4201c>
  444434:	mov	w9, wzr
  444438:	sub	w11, w10, #0x30
  44443c:	cmp	w11, #0x9
  444440:	b.hi	4444a4 <feof@plt+0x417a4>  // b.pmore
  444444:	mov	w12, #0x2f                  	// #47
  444448:	mov	w13, #0x6667                	// #26215
  44444c:	mov	w11, wzr
  444450:	movk	w12, #0x8000, lsl #16
  444454:	add	x8, x8, #0x1
  444458:	movk	w13, #0x6666, lsl #16
  44445c:	mov	w14, #0xa                   	// #10
  444460:	and	w15, w10, #0xff
  444464:	sub	w10, w12, w15
  444468:	smull	x10, w10, w13
  44446c:	lsr	x16, x10, #63
  444470:	asr	x10, x10, #34
  444474:	add	w10, w10, w16
  444478:	cmp	w11, w10
  44447c:	b.gt	445224 <feof@plt+0x42524>
  444480:	str	x8, [x22]
  444484:	ldrb	w10, [x8], #1
  444488:	madd	w11, w11, w14, w15
  44448c:	sub	w11, w11, #0x30
  444490:	sub	w15, w10, #0x30
  444494:	cmp	w15, #0xa
  444498:	b.cc	444460 <feof@plt+0x41760>  // b.lo, b.ul, b.last
  44449c:	sub	x8, x8, #0x1
  4444a0:	b	4444a8 <feof@plt+0x417a8>
  4444a4:	mov	w11, wzr
  4444a8:	cmp	w9, #0x0
  4444ac:	mov	x20, xzr
  4444b0:	cneg	w9, w11, ne  // ne = any
  4444b4:	cbz	w10, 445228 <feof@plt+0x42528>
  4444b8:	cmp	w9, #0x2
  4444bc:	b.lt	445228 <feof@plt+0x42528>  // b.tstop
  4444c0:	add	x12, x8, #0x1
  4444c4:	str	x12, [x22]
  4444c8:	ldrb	w8, [x8]
  4444cc:	cmp	w8, #0x5f
  4444d0:	b.ne	445224 <feof@plt+0x42524>  // b.any
  4444d4:	mov	x8, xzr
  4444d8:	sub	w13, w9, #0x1
  4444dc:	mov	w9, #0x18                  	// #24
  4444e0:	mov	w10, #0x41                  	// #65
  4444e4:	mov	w11, #0x40                  	// #64
  4444e8:	b	444a18 <feof@plt+0x41d18>
  4444ec:	mov	x0, x19
  4444f0:	bl	44523c <feof@plt+0x4253c>
  4444f4:	ldr	x10, [x19, #24]
  4444f8:	mov	x21, x0
  4444fc:	ldrb	w9, [x10]
  444500:	cmp	w9, #0x6e
  444504:	b.ne	444bf8 <feof@plt+0x41ef8>  // b.any
  444508:	add	x11, x10, #0x1
  44450c:	str	x11, [x22]
  444510:	ldrb	w9, [x10, #1]
  444514:	mov	w8, #0x1                   	// #1
  444518:	mov	x10, x11
  44451c:	b	444bfc <feof@plt+0x41efc>
  444520:	mov	x0, x19
  444524:	bl	44523c <feof@plt+0x4253c>
  444528:	cbz	x0, 445224 <feof@plt+0x42524>
  44452c:	ldp	w8, w9, [x19, #40]
  444530:	sxtw	x8, w8
  444534:	cmp	w8, w9
  444538:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  44453c:	ldr	x9, [x19, #32]
  444540:	mov	w10, #0x18                  	// #24
  444544:	add	w11, w8, #0x1
  444548:	madd	x20, x8, x10, x9
  44454c:	str	wzr, [x20, #4]
  444550:	str	w11, [x19, #40]
  444554:	cbz	x9, 445224 <feof@plt+0x42524>
  444558:	mov	w10, #0xe                   	// #14
  44455c:	b	444be4 <feof@plt+0x41ee4>
  444560:	mov	x0, x19
  444564:	bl	447480 <feof@plt+0x44780>
  444568:	cbz	x0, 445224 <feof@plt+0x42524>
  44456c:	ldp	w8, w9, [x19, #40]
  444570:	sxtw	x8, w8
  444574:	cmp	w8, w9
  444578:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  44457c:	ldr	x9, [x19, #32]
  444580:	mov	w10, #0x18                  	// #24
  444584:	add	w11, w8, #0x1
  444588:	madd	x20, x8, x10, x9
  44458c:	str	wzr, [x20, #4]
  444590:	str	w11, [x19, #40]
  444594:	cbz	x9, 445224 <feof@plt+0x42524>
  444598:	mov	w10, #0x14                  	// #20
  44459c:	b	444be4 <feof@plt+0x41ee4>
  4445a0:	mov	x0, x19
  4445a4:	bl	44523c <feof@plt+0x4253c>
  4445a8:	cbz	x0, 445224 <feof@plt+0x42524>
  4445ac:	ldp	w8, w9, [x19, #40]
  4445b0:	sxtw	x8, w8
  4445b4:	cmp	w8, w9
  4445b8:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  4445bc:	ldr	x9, [x19, #32]
  4445c0:	mov	w10, #0x18                  	// #24
  4445c4:	add	w11, w8, #0x1
  4445c8:	madd	x20, x8, x10, x9
  4445cc:	str	wzr, [x20, #4]
  4445d0:	str	w11, [x19, #40]
  4445d4:	cbz	x9, 445224 <feof@plt+0x42524>
  4445d8:	mov	w10, #0xc                   	// #12
  4445dc:	b	444be4 <feof@plt+0x41ee4>
  4445e0:	mov	x0, x19
  4445e4:	bl	44523c <feof@plt+0x4253c>
  4445e8:	cbz	x0, 445224 <feof@plt+0x42524>
  4445ec:	ldp	w8, w9, [x19, #40]
  4445f0:	sxtw	x8, w8
  4445f4:	cmp	w8, w9
  4445f8:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  4445fc:	ldr	x9, [x19, #32]
  444600:	mov	w10, #0x18                  	// #24
  444604:	add	w11, w8, #0x1
  444608:	madd	x20, x8, x10, x9
  44460c:	str	wzr, [x20, #4]
  444610:	str	w11, [x19, #40]
  444614:	cbz	x9, 445224 <feof@plt+0x42524>
  444618:	mov	w10, #0x12                  	// #18
  44461c:	b	444be4 <feof@plt+0x41ee4>
  444620:	mov	x0, x19
  444624:	bl	44523c <feof@plt+0x4253c>
  444628:	cbz	x0, 445224 <feof@plt+0x42524>
  44462c:	ldp	w8, w9, [x19, #40]
  444630:	sxtw	x8, w8
  444634:	cmp	w8, w9
  444638:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  44463c:	ldr	x9, [x19, #32]
  444640:	mov	w10, #0x18                  	// #24
  444644:	add	w11, w8, #0x1
  444648:	madd	x20, x8, x10, x9
  44464c:	str	wzr, [x20, #4]
  444650:	str	w11, [x19, #40]
  444654:	cbz	x9, 445224 <feof@plt+0x42524>
  444658:	mov	w10, #0xd                   	// #13
  44465c:	b	444be4 <feof@plt+0x41ee4>
  444660:	add	w8, w10, #0xa
  444664:	mov	x0, x19
  444668:	str	w8, [x19, #72]
  44466c:	bl	44523c <feof@plt+0x4253c>
  444670:	cbz	x0, 445224 <feof@plt+0x42524>
  444674:	ldp	w8, w9, [x19, #40]
  444678:	sxtw	x8, w8
  44467c:	cmp	w8, w9
  444680:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444684:	ldr	x9, [x19, #32]
  444688:	mov	w10, #0x18                  	// #24
  44468c:	add	w11, w8, #0x1
  444690:	madd	x20, x8, x10, x9
  444694:	str	wzr, [x20, #4]
  444698:	str	w11, [x19, #40]
  44469c:	cbz	x9, 445224 <feof@plt+0x42524>
  4446a0:	mov	w10, #0xa                   	// #10
  4446a4:	b	444be4 <feof@plt+0x41ee4>
  4446a8:	add	w8, w10, #0xf
  4446ac:	mov	x0, x19
  4446b0:	str	w8, [x19, #72]
  4446b4:	bl	44523c <feof@plt+0x4253c>
  4446b8:	cbz	x0, 445224 <feof@plt+0x42524>
  4446bc:	ldp	w8, w9, [x19, #40]
  4446c0:	sxtw	x8, w8
  4446c4:	cmp	w8, w9
  4446c8:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  4446cc:	ldr	x9, [x19, #32]
  4446d0:	mov	w10, #0x18                  	// #24
  4446d4:	add	w11, w8, #0x1
  4446d8:	madd	x20, x8, x10, x9
  4446dc:	str	wzr, [x20, #4]
  4446e0:	str	w11, [x19, #40]
  4446e4:	cbz	x9, 445224 <feof@plt+0x42524>
  4446e8:	mov	w10, #0x9                   	// #9
  4446ec:	b	444be4 <feof@plt+0x41ee4>
  4446f0:	mov	x0, x19
  4446f4:	bl	447480 <feof@plt+0x44780>
  4446f8:	cbz	x0, 445224 <feof@plt+0x42524>
  4446fc:	ldp	w8, w9, [x19, #40]
  444700:	sxtw	x8, w8
  444704:	cmp	w8, w9
  444708:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  44470c:	ldr	x9, [x19, #32]
  444710:	mov	w10, #0x18                  	// #24
  444714:	add	w11, w8, #0x1
  444718:	madd	x20, x8, x10, x9
  44471c:	str	wzr, [x20, #4]
  444720:	str	w11, [x19, #40]
  444724:	cbz	x9, 445224 <feof@plt+0x42524>
  444728:	mov	w10, #0x15                  	// #21
  44472c:	b	444be4 <feof@plt+0x41ee4>
  444730:	ldrb	w8, [x8]
  444734:	cbz	w8, 445224 <feof@plt+0x42524>
  444738:	add	x8, x9, #0x3
  44473c:	str	x8, [x22]
  444740:	ldrb	w10, [x9, #2]
  444744:	cmp	w10, #0x76
  444748:	b.eq	444e78 <feof@plt+0x42178>  // b.none
  44474c:	cmp	w10, #0x68
  444750:	b.ne	445224 <feof@plt+0x42524>  // b.any
  444754:	ldrb	w10, [x8]
  444758:	cmp	w10, #0x6e
  44475c:	b.ne	44476c <feof@plt+0x41a6c>  // b.any
  444760:	add	x8, x9, #0x4
  444764:	str	x8, [x22]
  444768:	ldrb	w10, [x9, #4]
  44476c:	sub	w9, w10, #0x30
  444770:	cmp	w9, #0x9
  444774:	b.hi	444f8c <feof@plt+0x4228c>  // b.pmore
  444778:	mov	w9, #0x2f                  	// #47
  44477c:	mov	w12, #0x6667                	// #26215
  444780:	mov	w11, wzr
  444784:	movk	w9, #0x8000, lsl #16
  444788:	add	x8, x8, #0x1
  44478c:	movk	w12, #0x6666, lsl #16
  444790:	mov	w13, #0xa                   	// #10
  444794:	and	w14, w10, #0xff
  444798:	sub	w10, w9, w14
  44479c:	smull	x10, w10, w12
  4447a0:	lsr	x15, x10, #63
  4447a4:	asr	x10, x10, #34
  4447a8:	add	w10, w10, w15
  4447ac:	cmp	w11, w10
  4447b0:	b.gt	445224 <feof@plt+0x42524>
  4447b4:	str	x8, [x22]
  4447b8:	ldrb	w10, [x8], #1
  4447bc:	madd	w11, w11, w13, w14
  4447c0:	sub	w11, w11, #0x30
  4447c4:	sub	w14, w10, #0x30
  4447c8:	cmp	w14, #0xa
  4447cc:	b.cc	444794 <feof@plt+0x41a94>  // b.lo, b.ul, b.last
  4447d0:	b	444f88 <feof@plt+0x42288>
  4447d4:	ldrb	w10, [x8]
  4447d8:	cmp	w10, #0x6e
  4447dc:	b.ne	4447ec <feof@plt+0x41aec>  // b.any
  4447e0:	add	x8, x9, #0x3
  4447e4:	str	x8, [x22]
  4447e8:	ldrb	w10, [x9, #3]
  4447ec:	sub	w9, w10, #0x30
  4447f0:	cmp	w9, #0x9
  4447f4:	b.hi	444854 <feof@plt+0x41b54>  // b.pmore
  4447f8:	mov	w9, #0x2f                  	// #47
  4447fc:	mov	w12, #0x6667                	// #26215
  444800:	mov	w11, wzr
  444804:	movk	w9, #0x8000, lsl #16
  444808:	add	x8, x8, #0x1
  44480c:	movk	w12, #0x6666, lsl #16
  444810:	mov	w13, #0xa                   	// #10
  444814:	and	w14, w10, #0xff
  444818:	sub	w10, w9, w14
  44481c:	smull	x10, w10, w12
  444820:	lsr	x15, x10, #63
  444824:	asr	x10, x10, #34
  444828:	add	w10, w10, w15
  44482c:	cmp	w11, w10
  444830:	b.gt	445224 <feof@plt+0x42524>
  444834:	str	x8, [x22]
  444838:	ldrb	w10, [x8], #1
  44483c:	madd	w11, w11, w13, w14
  444840:	sub	w11, w11, #0x30
  444844:	sub	w14, w10, #0x30
  444848:	cmp	w14, #0xa
  44484c:	b.cc	444814 <feof@plt+0x41b14>  // b.lo, b.ul, b.last
  444850:	sub	x8, x8, #0x1
  444854:	cmp	w10, #0x5f
  444858:	b.ne	445224 <feof@plt+0x42524>  // b.any
  44485c:	add	x8, x8, #0x1
  444860:	mov	x0, x19
  444864:	mov	w1, wzr
  444868:	str	x8, [x19, #24]
  44486c:	bl	4440a0 <feof@plt+0x413a0>
  444870:	cbz	x0, 445224 <feof@plt+0x42524>
  444874:	ldp	w8, w9, [x19, #40]
  444878:	sxtw	x8, w8
  44487c:	cmp	w8, w9
  444880:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444884:	ldr	x9, [x19, #32]
  444888:	mov	w10, #0x18                  	// #24
  44488c:	add	w11, w8, #0x1
  444890:	madd	x20, x8, x10, x9
  444894:	str	wzr, [x20, #4]
  444898:	str	w11, [x19, #40]
  44489c:	cbz	x9, 445224 <feof@plt+0x42524>
  4448a0:	mov	w10, #0xf                   	// #15
  4448a4:	b	444be4 <feof@plt+0x41ee4>
  4448a8:	ldrb	w10, [x8]
  4448ac:	cmp	w10, #0x6e
  4448b0:	b.ne	4448c0 <feof@plt+0x41bc0>  // b.any
  4448b4:	add	x8, x9, #0x3
  4448b8:	str	x8, [x22]
  4448bc:	ldrb	w10, [x9, #3]
  4448c0:	sub	w9, w10, #0x30
  4448c4:	cmp	w9, #0x9
  4448c8:	b.hi	444928 <feof@plt+0x41c28>  // b.pmore
  4448cc:	mov	w9, #0x2f                  	// #47
  4448d0:	mov	w12, #0x6667                	// #26215
  4448d4:	mov	w11, wzr
  4448d8:	movk	w9, #0x8000, lsl #16
  4448dc:	add	x8, x8, #0x1
  4448e0:	movk	w12, #0x6666, lsl #16
  4448e4:	mov	w13, #0xa                   	// #10
  4448e8:	and	w14, w10, #0xff
  4448ec:	sub	w10, w9, w14
  4448f0:	smull	x10, w10, w12
  4448f4:	lsr	x15, x10, #63
  4448f8:	asr	x10, x10, #34
  4448fc:	add	w10, w10, w15
  444900:	cmp	w11, w10
  444904:	b.gt	445224 <feof@plt+0x42524>
  444908:	str	x8, [x22]
  44490c:	ldrb	w10, [x8], #1
  444910:	madd	w11, w11, w13, w14
  444914:	sub	w11, w11, #0x30
  444918:	sub	w14, w10, #0x30
  44491c:	cmp	w14, #0xa
  444920:	b.cc	4448e8 <feof@plt+0x41be8>  // b.lo, b.ul, b.last
  444924:	sub	x8, x8, #0x1
  444928:	cmp	w10, #0x5f
  44492c:	b.ne	445224 <feof@plt+0x42524>  // b.any
  444930:	add	x11, x8, #0x1
  444934:	str	x11, [x22]
  444938:	ldrb	w9, [x8, #1]
  44493c:	cmp	w9, #0x6e
  444940:	b.ne	444950 <feof@plt+0x41c50>  // b.any
  444944:	add	x11, x8, #0x2
  444948:	str	x11, [x22]
  44494c:	ldrb	w9, [x8, #2]
  444950:	sub	w8, w9, #0x30
  444954:	cmp	w8, #0x9
  444958:	b.hi	4449b8 <feof@plt+0x41cb8>  // b.pmore
  44495c:	mov	w10, #0x2f                  	// #47
  444960:	add	x8, x11, #0x1
  444964:	mov	w11, #0x6667                	// #26215
  444968:	mov	w12, wzr
  44496c:	movk	w10, #0x8000, lsl #16
  444970:	movk	w11, #0x6666, lsl #16
  444974:	mov	w13, #0xa                   	// #10
  444978:	and	w14, w9, #0xff
  44497c:	sub	w9, w10, w14
  444980:	smull	x9, w9, w11
  444984:	lsr	x15, x9, #63
  444988:	asr	x9, x9, #34
  44498c:	add	w9, w9, w15
  444990:	cmp	w12, w9
  444994:	b.gt	445224 <feof@plt+0x42524>
  444998:	str	x8, [x22]
  44499c:	ldrb	w9, [x8], #1
  4449a0:	madd	w12, w12, w13, w14
  4449a4:	sub	w12, w12, #0x30
  4449a8:	sub	w14, w9, #0x30
  4449ac:	cmp	w14, #0xa
  4449b0:	b.cc	444978 <feof@plt+0x41c78>  // b.lo, b.ul, b.last
  4449b4:	sub	x11, x8, #0x1
  4449b8:	cmp	w9, #0x5f
  4449bc:	b.ne	445224 <feof@plt+0x42524>  // b.any
  4449c0:	add	x8, x11, #0x1
  4449c4:	mov	x0, x19
  4449c8:	mov	w1, wzr
  4449cc:	str	x8, [x19, #24]
  4449d0:	bl	4440a0 <feof@plt+0x413a0>
  4449d4:	cbz	x0, 445224 <feof@plt+0x42524>
  4449d8:	ldp	w8, w9, [x19, #40]
  4449dc:	sxtw	x8, w8
  4449e0:	cmp	w8, w9
  4449e4:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  4449e8:	ldr	x9, [x19, #32]
  4449ec:	mov	w10, #0x18                  	// #24
  4449f0:	add	w11, w8, #0x1
  4449f4:	madd	x20, x8, x10, x9
  4449f8:	str	wzr, [x20, #4]
  4449fc:	str	w11, [x19, #40]
  444a00:	cbz	x9, 445224 <feof@plt+0x42524>
  444a04:	mov	w10, #0x10                  	// #16
  444a08:	b	444be4 <feof@plt+0x41ee4>
  444a0c:	mov	x8, x14
  444a10:	cmp	w13, #0x0
  444a14:	b.le	444b60 <feof@plt+0x41e60>
  444a18:	ldrb	w15, [x12]
  444a1c:	mov	w13, w13
  444a20:	cmp	w15, #0x24
  444a24:	b.eq	444a60 <feof@plt+0x41d60>  // b.none
  444a28:	cbz	w15, 445224 <feof@plt+0x42524>
  444a2c:	mov	w14, #0x1                   	// #1
  444a30:	ands	w15, w15, #0xff
  444a34:	b.eq	444a58 <feof@plt+0x41d58>  // b.none
  444a38:	cmp	w15, #0x24
  444a3c:	b.eq	444a58 <feof@plt+0x41d58>  // b.none
  444a40:	cmp	x13, x14
  444a44:	b.eq	444a84 <feof@plt+0x41d84>  // b.none
  444a48:	ldrb	w15, [x12, x14]
  444a4c:	add	x14, x14, #0x1
  444a50:	ands	w15, w15, #0xff
  444a54:	b.ne	444a38 <feof@plt+0x41d38>  // b.any
  444a58:	sub	w15, w14, #0x1
  444a5c:	b	444a88 <feof@plt+0x41d88>
  444a60:	ldrb	w12, [x12, #1]
  444a64:	cmp	w12, #0x24
  444a68:	b.eq	444ad8 <feof@plt+0x41dd8>  // b.none
  444a6c:	cmp	w12, #0x53
  444a70:	b.eq	444ad4 <feof@plt+0x41dd4>  // b.none
  444a74:	cmp	w12, #0x5f
  444a78:	b.ne	445224 <feof@plt+0x42524>  // b.any
  444a7c:	mov	w12, #0x2e                  	// #46
  444a80:	b	444ad8 <feof@plt+0x41dd8>
  444a84:	mov	w15, w13
  444a88:	ldp	w16, w14, [x19, #40]
  444a8c:	sxtw	x16, w16
  444a90:	cmp	w16, w14
  444a94:	b.ge	445098 <feof@plt+0x42398>  // b.tcont
  444a98:	ldr	x17, [x19, #32]
  444a9c:	add	w18, w16, #0x1
  444aa0:	madd	x14, x16, x9, x17
  444aa4:	str	wzr, [x14, #4]
  444aa8:	str	w18, [x19, #40]
  444aac:	cbz	w15, 445098 <feof@plt+0x42398>
  444ab0:	cbz	x17, 445098 <feof@plt+0x42398>
  444ab4:	madd	x16, x16, x9, x17
  444ab8:	str	xzr, [x14]
  444abc:	str	x12, [x16, #8]
  444ac0:	str	w15, [x16, #16]
  444ac4:	ldr	x12, [x22]
  444ac8:	sub	w13, w13, w15
  444acc:	add	x12, x12, w15, uxtw
  444ad0:	b	444b18 <feof@plt+0x41e18>
  444ad4:	mov	w12, #0x2f                  	// #47
  444ad8:	ldp	w15, w14, [x19, #40]
  444adc:	sxtw	x15, w15
  444ae0:	cmp	w15, w14
  444ae4:	b.ge	4450a8 <feof@plt+0x423a8>  // b.tcont
  444ae8:	ldr	x16, [x19, #32]
  444aec:	add	w17, w15, #0x1
  444af0:	madd	x14, x15, x9, x16
  444af4:	str	wzr, [x14, #4]
  444af8:	str	w17, [x19, #40]
  444afc:	cbz	x16, 4450a8 <feof@plt+0x423a8>
  444b00:	madd	x15, x15, x9, x16
  444b04:	str	w10, [x14]
  444b08:	str	w12, [x15, #8]
  444b0c:	ldr	x12, [x22]
  444b10:	sub	w13, w13, #0x2
  444b14:	add	x12, x12, #0x2
  444b18:	str	x12, [x22]
  444b1c:	cbz	x8, 444a0c <feof@plt+0x41d0c>
  444b20:	ldp	w15, w16, [x19, #40]
  444b24:	sxtw	x15, w15
  444b28:	cmp	w15, w16
  444b2c:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444b30:	ldr	x16, [x19, #32]
  444b34:	add	w18, w15, #0x1
  444b38:	madd	x17, x15, x9, x16
  444b3c:	str	wzr, [x17, #4]
  444b40:	str	w18, [x19, #40]
  444b44:	cbz	x16, 445224 <feof@plt+0x42524>
  444b48:	madd	x15, x15, x9, x16
  444b4c:	str	w11, [x17]
  444b50:	stp	x8, x14, [x15, #8]
  444b54:	mov	x8, x17
  444b58:	cmp	w13, #0x0
  444b5c:	b.gt	444a18 <feof@plt+0x41d18>
  444b60:	ldp	w9, w10, [x19, #40]
  444b64:	sxtw	x9, w9
  444b68:	cmp	w9, w10
  444b6c:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444b70:	ldr	x10, [x19, #32]
  444b74:	mov	w11, #0x18                  	// #24
  444b78:	add	w12, w9, #0x1
  444b7c:	madd	x20, x9, x11, x10
  444b80:	str	wzr, [x20, #4]
  444b84:	str	w12, [x19, #40]
  444b88:	cbz	x10, 445224 <feof@plt+0x42524>
  444b8c:	mov	w12, #0x18                  	// #24
  444b90:	mov	w11, #0x3f                  	// #63
  444b94:	madd	x9, x9, x12, x10
  444b98:	str	w11, [x20]
  444b9c:	stp	x8, xzr, [x9, #8]
  444ba0:	b	445228 <feof@plt+0x42528>
  444ba4:	mov	x0, x19
  444ba8:	mov	w1, wzr
  444bac:	bl	4440a0 <feof@plt+0x413a0>
  444bb0:	cbz	x0, 445224 <feof@plt+0x42524>
  444bb4:	ldp	w8, w9, [x19, #40]
  444bb8:	sxtw	x8, w8
  444bbc:	cmp	w8, w9
  444bc0:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444bc4:	ldr	x9, [x19, #32]
  444bc8:	mov	w10, #0x18                  	// #24
  444bcc:	add	w11, w8, #0x1
  444bd0:	madd	x20, x8, x10, x9
  444bd4:	str	wzr, [x20, #4]
  444bd8:	str	w11, [x19, #40]
  444bdc:	cbz	x9, 445224 <feof@plt+0x42524>
  444be0:	mov	w10, #0x49                  	// #73
  444be4:	mov	w11, #0x18                  	// #24
  444be8:	madd	x8, x8, x11, x9
  444bec:	str	w10, [x20]
  444bf0:	stp	x0, xzr, [x8, #8]
  444bf4:	b	445228 <feof@plt+0x42528>
  444bf8:	mov	w8, wzr
  444bfc:	sub	w11, w9, #0x30
  444c00:	cmp	w11, #0x9
  444c04:	b.hi	444c68 <feof@plt+0x41f68>  // b.pmore
  444c08:	mov	w12, #0x2f                  	// #47
  444c0c:	mov	w13, #0x6667                	// #26215
  444c10:	mov	w11, wzr
  444c14:	movk	w12, #0x8000, lsl #16
  444c18:	add	x10, x10, #0x1
  444c1c:	movk	w13, #0x6666, lsl #16
  444c20:	mov	w14, #0xa                   	// #10
  444c24:	and	w15, w9, #0xff
  444c28:	sub	w9, w12, w15
  444c2c:	smull	x9, w9, w13
  444c30:	lsr	x16, x9, #63
  444c34:	asr	x9, x9, #34
  444c38:	add	w9, w9, w16
  444c3c:	cmp	w11, w9
  444c40:	b.gt	445224 <feof@plt+0x42524>
  444c44:	str	x10, [x22]
  444c48:	ldrb	w9, [x10], #1
  444c4c:	madd	w11, w11, w14, w15
  444c50:	sub	w11, w11, #0x30
  444c54:	sub	w15, w9, #0x30
  444c58:	cmp	w15, #0xa
  444c5c:	b.cc	444c24 <feof@plt+0x41f24>  // b.lo, b.ul, b.last
  444c60:	sub	x10, x10, #0x1
  444c64:	b	444c6c <feof@plt+0x41f6c>
  444c68:	mov	w11, wzr
  444c6c:	cmp	w8, #0x0
  444c70:	cneg	w8, w11, ne  // ne = any
  444c74:	mov	x20, xzr
  444c78:	tbnz	w8, #31, 445228 <feof@plt+0x42528>
  444c7c:	cmp	w9, #0x5f
  444c80:	b.ne	445228 <feof@plt+0x42528>  // b.any
  444c84:	add	x8, x10, #0x1
  444c88:	mov	x0, x19
  444c8c:	str	x8, [x19, #24]
  444c90:	bl	44523c <feof@plt+0x4253c>
  444c94:	ldr	w8, [x19, #72]
  444c98:	mov	x20, xzr
  444c9c:	add	w8, w8, #0x5
  444ca0:	str	w8, [x19, #72]
  444ca4:	cbz	x21, 445228 <feof@plt+0x42528>
  444ca8:	cbz	x0, 445228 <feof@plt+0x42528>
  444cac:	ldp	w8, w9, [x19, #40]
  444cb0:	sxtw	x8, w8
  444cb4:	cmp	w8, w9
  444cb8:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444cbc:	ldr	x9, [x19, #32]
  444cc0:	mov	w10, #0x18                  	// #24
  444cc4:	add	w11, w8, #0x1
  444cc8:	madd	x20, x8, x10, x9
  444ccc:	str	wzr, [x20, #4]
  444cd0:	str	w11, [x19, #40]
  444cd4:	cbz	x9, 445224 <feof@plt+0x42524>
  444cd8:	mov	w11, #0x18                  	// #24
  444cdc:	mov	w10, #0xb                   	// #11
  444ce0:	madd	x8, x8, x11, x9
  444ce4:	str	w10, [x20]
  444ce8:	stp	x0, x21, [x8, #8]
  444cec:	b	445228 <feof@plt+0x42528>
  444cf0:	cmp	w11, #0x35
  444cf4:	mov	w10, #0x1                   	// #1
  444cf8:	b.hi	444d1c <feof@plt+0x4201c>  // b.pmore
  444cfc:	mov	w11, w11
  444d00:	mov	w12, #0x1                   	// #1
  444d04:	lsl	x11, x12, x11
  444d08:	mov	x12, #0x180                 	// #384
  444d0c:	movk	x12, #0x20, lsl #48
  444d10:	tst	x11, x12
  444d14:	b.eq	444d1c <feof@plt+0x4201c>  // b.none
  444d18:	mov	w10, wzr
  444d1c:	cmp	w9, #0x4a
  444d20:	b.ne	444d30 <feof@plt+0x42030>  // b.any
  444d24:	add	x8, x8, #0x1
  444d28:	str	x8, [x22]
  444d2c:	b	444d34 <feof@plt+0x42034>
  444d30:	cbz	w10, 444d48 <feof@plt+0x42048>
  444d34:	mov	x0, x19
  444d38:	bl	44523c <feof@plt+0x4253c>
  444d3c:	mov	x22, x0
  444d40:	cbnz	x0, 444d4c <feof@plt+0x4204c>
  444d44:	b	445224 <feof@plt+0x42524>
  444d48:	mov	x22, xzr
  444d4c:	mov	x0, x19
  444d50:	bl	448a4c <feof@plt+0x45d4c>
  444d54:	cbz	x0, 445224 <feof@plt+0x42524>
  444d58:	ldp	w9, w8, [x19, #40]
  444d5c:	sxtw	x9, w9
  444d60:	cmp	w9, w8
  444d64:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444d68:	ldr	x10, [x19, #32]
  444d6c:	mov	w8, #0x18                  	// #24
  444d70:	add	w11, w9, #0x1
  444d74:	madd	x8, x9, x8, x10
  444d78:	str	wzr, [x8, #4]
  444d7c:	str	w11, [x19, #40]
  444d80:	cbz	x10, 445224 <feof@plt+0x42524>
  444d84:	mov	w12, #0x18                  	// #24
  444d88:	mov	w11, #0x29                  	// #41
  444d8c:	madd	x9, x9, x12, x10
  444d90:	str	w11, [x8]
  444d94:	str	x22, [x9, #8]!
  444d98:	str	x0, [x9, #8]
  444d9c:	cbnz	w21, 444db0 <feof@plt+0x420b0>
  444da0:	ldr	w10, [x20]
  444da4:	cmp	w10, #0x2
  444da8:	b.ne	444db0 <feof@plt+0x420b0>  // b.any
  444dac:	str	xzr, [x9]
  444db0:	ldp	w9, w10, [x19, #40]
  444db4:	sxtw	x9, w9
  444db8:	cmp	w9, w10
  444dbc:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  444dc0:	ldr	x10, [x19, #32]
  444dc4:	mov	w11, #0x18                  	// #24
  444dc8:	add	w12, w9, #0x1
  444dcc:	madd	x11, x9, x11, x10
  444dd0:	str	wzr, [x11, #4]
  444dd4:	str	w12, [x19, #40]
  444dd8:	cbz	x10, 445224 <feof@plt+0x42524>
  444ddc:	mov	w13, #0x18                  	// #24
  444de0:	mov	w12, #0x3                   	// #3
  444de4:	madd	x9, x9, x13, x10
  444de8:	str	w12, [x11]
  444dec:	stp	x20, x8, [x9, #8]
  444df0:	mov	x20, x11
  444df4:	b	445228 <feof@plt+0x42528>
  444df8:	mov	w11, wzr
  444dfc:	sub	w13, w12, #0x30
  444e00:	cmp	w13, #0x9
  444e04:	b.hi	444e64 <feof@plt+0x42164>  // b.pmore
  444e08:	mov	w14, #0x2f                  	// #47
  444e0c:	mov	w16, #0x6667                	// #26215
  444e10:	mov	w13, wzr
  444e14:	movk	w14, #0x8000, lsl #16
  444e18:	add	x15, x15, #0x1
  444e1c:	movk	w16, #0x6666, lsl #16
  444e20:	mov	w17, #0xa                   	// #10
  444e24:	and	w18, w12, #0xff
  444e28:	sub	w12, w14, w18
  444e2c:	smull	x12, w12, w16
  444e30:	lsr	x1, x12, #63
  444e34:	asr	x12, x12, #34
  444e38:	add	w12, w12, w1
  444e3c:	cmp	w13, w12
  444e40:	b.gt	445040 <feof@plt+0x42340>
  444e44:	str	x15, [x22]
  444e48:	ldrb	w12, [x15], #1
  444e4c:	madd	w13, w13, w17, w18
  444e50:	sub	w13, w13, #0x30
  444e54:	sub	w18, w12, #0x30
  444e58:	cmp	w18, #0xa
  444e5c:	b.cc	444e24 <feof@plt+0x42124>  // b.lo, b.ul, b.last
  444e60:	b	444e68 <feof@plt+0x42168>
  444e64:	mov	w13, wzr
  444e68:	cmp	w11, #0x0
  444e6c:	cneg	w11, w13, ne  // ne = any
  444e70:	sxtw	x11, w11
  444e74:	b	445044 <feof@plt+0x42344>
  444e78:	ldrb	w10, [x8]
  444e7c:	cmp	w10, #0x6e
  444e80:	b.ne	444e90 <feof@plt+0x42190>  // b.any
  444e84:	add	x8, x9, #0x4
  444e88:	str	x8, [x22]
  444e8c:	ldrb	w10, [x9, #4]
  444e90:	sub	w9, w10, #0x30
  444e94:	cmp	w9, #0x9
  444e98:	b.hi	444ef8 <feof@plt+0x421f8>  // b.pmore
  444e9c:	mov	w9, #0x2f                  	// #47
  444ea0:	mov	w12, #0x6667                	// #26215
  444ea4:	mov	w11, wzr
  444ea8:	movk	w9, #0x8000, lsl #16
  444eac:	add	x8, x8, #0x1
  444eb0:	movk	w12, #0x6666, lsl #16
  444eb4:	mov	w13, #0xa                   	// #10
  444eb8:	and	w14, w10, #0xff
  444ebc:	sub	w10, w9, w14
  444ec0:	smull	x10, w10, w12
  444ec4:	lsr	x15, x10, #63
  444ec8:	asr	x10, x10, #34
  444ecc:	add	w10, w10, w15
  444ed0:	cmp	w11, w10
  444ed4:	b.gt	445224 <feof@plt+0x42524>
  444ed8:	str	x8, [x22]
  444edc:	ldrb	w10, [x8], #1
  444ee0:	madd	w11, w11, w13, w14
  444ee4:	sub	w11, w11, #0x30
  444ee8:	sub	w14, w10, #0x30
  444eec:	cmp	w14, #0xa
  444ef0:	b.cc	444eb8 <feof@plt+0x421b8>  // b.lo, b.ul, b.last
  444ef4:	sub	x8, x8, #0x1
  444ef8:	cmp	w10, #0x5f
  444efc:	b.ne	445224 <feof@plt+0x42524>  // b.any
  444f00:	add	x9, x8, #0x1
  444f04:	str	x9, [x22]
  444f08:	ldrb	w10, [x8, #1]
  444f0c:	cmp	w10, #0x6e
  444f10:	b.ne	444f20 <feof@plt+0x42220>  // b.any
  444f14:	add	x9, x8, #0x2
  444f18:	str	x9, [x22]
  444f1c:	ldrb	w10, [x8, #2]
  444f20:	mov	x8, x9
  444f24:	sub	w9, w10, #0x30
  444f28:	cmp	w9, #0x9
  444f2c:	b.hi	444f8c <feof@plt+0x4228c>  // b.pmore
  444f30:	mov	w9, #0x2f                  	// #47
  444f34:	mov	w12, #0x6667                	// #26215
  444f38:	mov	w11, wzr
  444f3c:	movk	w9, #0x8000, lsl #16
  444f40:	add	x8, x8, #0x1
  444f44:	movk	w12, #0x6666, lsl #16
  444f48:	mov	w13, #0xa                   	// #10
  444f4c:	and	w14, w10, #0xff
  444f50:	sub	w10, w9, w14
  444f54:	smull	x10, w10, w12
  444f58:	lsr	x15, x10, #63
  444f5c:	asr	x10, x10, #34
  444f60:	add	w10, w10, w15
  444f64:	cmp	w11, w10
  444f68:	b.gt	445224 <feof@plt+0x42524>
  444f6c:	str	x8, [x22]
  444f70:	ldrb	w10, [x8], #1
  444f74:	madd	w11, w11, w13, w14
  444f78:	sub	w11, w11, #0x30
  444f7c:	sub	w14, w10, #0x30
  444f80:	cmp	w14, #0xa
  444f84:	b.cc	444f4c <feof@plt+0x4224c>  // b.lo, b.ul, b.last
  444f88:	sub	x8, x8, #0x1
  444f8c:	cmp	w10, #0x5f
  444f90:	b.ne	445224 <feof@plt+0x42524>  // b.any
  444f94:	add	x9, x8, #0x1
  444f98:	str	x9, [x22]
  444f9c:	ldrb	w9, [x8, #1]
  444fa0:	cbz	w9, 445224 <feof@plt+0x42524>
  444fa4:	add	x9, x8, #0x2
  444fa8:	str	x9, [x22]
  444fac:	ldrb	w10, [x8, #1]
  444fb0:	cmp	w10, #0x76
  444fb4:	b.eq	4450bc <feof@plt+0x423bc>  // b.none
  444fb8:	cmp	w10, #0x68
  444fbc:	b.ne	445224 <feof@plt+0x42524>  // b.any
  444fc0:	ldrb	w10, [x9]
  444fc4:	cmp	w10, #0x6e
  444fc8:	b.ne	444fd8 <feof@plt+0x422d8>  // b.any
  444fcc:	add	x9, x8, #0x3
  444fd0:	str	x9, [x22]
  444fd4:	ldrb	w10, [x8, #3]
  444fd8:	sub	w8, w10, #0x30
  444fdc:	cmp	w8, #0x9
  444fe0:	b.hi	4451d0 <feof@plt+0x424d0>  // b.pmore
  444fe4:	mov	w11, #0x2f                  	// #47
  444fe8:	add	x8, x9, #0x1
  444fec:	mov	w9, #0x6667                	// #26215
  444ff0:	mov	w12, wzr
  444ff4:	movk	w11, #0x8000, lsl #16
  444ff8:	movk	w9, #0x6666, lsl #16
  444ffc:	mov	w13, #0xa                   	// #10
  445000:	and	w14, w10, #0xff
  445004:	sub	w10, w11, w14
  445008:	smull	x10, w10, w9
  44500c:	lsr	x15, x10, #63
  445010:	asr	x10, x10, #34
  445014:	add	w10, w10, w15
  445018:	cmp	w12, w10
  44501c:	b.gt	445224 <feof@plt+0x42524>
  445020:	str	x8, [x22]
  445024:	ldrb	w10, [x8], #1
  445028:	madd	w12, w12, w13, w14
  44502c:	sub	w12, w12, #0x30
  445030:	sub	w14, w10, #0x30
  445034:	cmp	w14, #0xa
  445038:	b.cc	445000 <feof@plt+0x42300>  // b.lo, b.ul, b.last
  44503c:	b	4451cc <feof@plt+0x424cc>
  445040:	mov	x11, #0xffffffffffffffff    	// #-1
  445044:	mov	w12, #0x18                  	// #24
  445048:	madd	x9, x9, x12, x10
  44504c:	str	x11, [x9, #8]
  445050:	cbz	x0, 445224 <feof@plt+0x42524>
  445054:	ldp	w9, w10, [x19, #40]
  445058:	sxtw	x9, w9
  44505c:	cmp	w9, w10
  445060:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  445064:	ldr	x10, [x19, #32]
  445068:	mov	w11, #0x18                  	// #24
  44506c:	add	w12, w9, #0x1
  445070:	madd	x20, x9, x11, x10
  445074:	str	wzr, [x20, #4]
  445078:	str	w12, [x19, #40]
  44507c:	cbz	x10, 445224 <feof@plt+0x42524>
  445080:	mov	w12, #0x18                  	// #24
  445084:	mov	w11, #0x16                  	// #22
  445088:	madd	x9, x9, x12, x10
  44508c:	str	w11, [x20]
  445090:	stp	x0, x8, [x9, #8]
  445094:	b	445228 <feof@plt+0x42528>
  445098:	ldr	x8, [x22]
  44509c:	mov	x20, xzr
  4450a0:	add	x8, x8, w15, uxtw
  4450a4:	b	4450b4 <feof@plt+0x423b4>
  4450a8:	ldr	x8, [x22]
  4450ac:	mov	x20, xzr
  4450b0:	add	x8, x8, #0x2
  4450b4:	str	x8, [x22]
  4450b8:	b	445228 <feof@plt+0x42528>
  4450bc:	ldrb	w10, [x9]
  4450c0:	cmp	w10, #0x6e
  4450c4:	b.ne	4450d4 <feof@plt+0x423d4>  // b.any
  4450c8:	add	x9, x8, #0x3
  4450cc:	str	x9, [x22]
  4450d0:	ldrb	w10, [x8, #3]
  4450d4:	sub	w8, w10, #0x30
  4450d8:	cmp	w8, #0x9
  4450dc:	b.hi	44513c <feof@plt+0x4243c>  // b.pmore
  4450e0:	mov	w11, #0x2f                  	// #47
  4450e4:	add	x8, x9, #0x1
  4450e8:	mov	w9, #0x6667                	// #26215
  4450ec:	mov	w12, wzr
  4450f0:	movk	w11, #0x8000, lsl #16
  4450f4:	movk	w9, #0x6666, lsl #16
  4450f8:	mov	w13, #0xa                   	// #10
  4450fc:	and	w14, w10, #0xff
  445100:	sub	w10, w11, w14
  445104:	smull	x10, w10, w9
  445108:	lsr	x15, x10, #63
  44510c:	asr	x10, x10, #34
  445110:	add	w10, w10, w15
  445114:	cmp	w12, w10
  445118:	b.gt	445224 <feof@plt+0x42524>
  44511c:	str	x8, [x22]
  445120:	ldrb	w10, [x8], #1
  445124:	madd	w12, w12, w13, w14
  445128:	sub	w12, w12, #0x30
  44512c:	sub	w14, w10, #0x30
  445130:	cmp	w14, #0xa
  445134:	b.cc	4450fc <feof@plt+0x423fc>  // b.lo, b.ul, b.last
  445138:	sub	x9, x8, #0x1
  44513c:	cmp	w10, #0x5f
  445140:	b.ne	445224 <feof@plt+0x42524>  // b.any
  445144:	add	x8, x9, #0x1
  445148:	str	x8, [x22]
  44514c:	ldrb	w10, [x9, #1]
  445150:	cmp	w10, #0x6e
  445154:	b.ne	445164 <feof@plt+0x42464>  // b.any
  445158:	add	x8, x9, #0x2
  44515c:	str	x8, [x22]
  445160:	ldrb	w10, [x9, #2]
  445164:	mov	x9, x8
  445168:	sub	w8, w10, #0x30
  44516c:	cmp	w8, #0x9
  445170:	b.hi	4451d0 <feof@plt+0x424d0>  // b.pmore
  445174:	mov	w11, #0x2f                  	// #47
  445178:	add	x8, x9, #0x1
  44517c:	mov	w9, #0x6667                	// #26215
  445180:	mov	w12, wzr
  445184:	movk	w11, #0x8000, lsl #16
  445188:	movk	w9, #0x6666, lsl #16
  44518c:	mov	w13, #0xa                   	// #10
  445190:	and	w14, w10, #0xff
  445194:	sub	w10, w11, w14
  445198:	smull	x10, w10, w9
  44519c:	lsr	x15, x10, #63
  4451a0:	asr	x10, x10, #34
  4451a4:	add	w10, w10, w15
  4451a8:	cmp	w12, w10
  4451ac:	b.gt	445224 <feof@plt+0x42524>
  4451b0:	str	x8, [x22]
  4451b4:	ldrb	w10, [x8], #1
  4451b8:	madd	w12, w12, w13, w14
  4451bc:	sub	w12, w12, #0x30
  4451c0:	sub	w14, w10, #0x30
  4451c4:	cmp	w14, #0xa
  4451c8:	b.cc	445190 <feof@plt+0x42490>  // b.lo, b.ul, b.last
  4451cc:	sub	x9, x8, #0x1
  4451d0:	cmp	w10, #0x5f
  4451d4:	b.ne	445224 <feof@plt+0x42524>  // b.any
  4451d8:	add	x8, x9, #0x1
  4451dc:	mov	x0, x19
  4451e0:	mov	w1, wzr
  4451e4:	str	x8, [x19, #24]
  4451e8:	bl	4440a0 <feof@plt+0x413a0>
  4451ec:	cbz	x0, 445224 <feof@plt+0x42524>
  4451f0:	ldp	w8, w9, [x19, #40]
  4451f4:	sxtw	x8, w8
  4451f8:	cmp	w8, w9
  4451fc:	b.ge	445224 <feof@plt+0x42524>  // b.tcont
  445200:	ldr	x9, [x19, #32]
  445204:	mov	w10, #0x18                  	// #24
  445208:	add	w11, w8, #0x1
  44520c:	madd	x20, x8, x10, x9
  445210:	str	wzr, [x20, #4]
  445214:	str	w11, [x19, #40]
  445218:	cbz	x9, 445224 <feof@plt+0x42524>
  44521c:	mov	w10, #0x11                  	// #17
  445220:	b	444be4 <feof@plt+0x41ee4>
  445224:	mov	x20, xzr
  445228:	mov	x0, x20
  44522c:	ldp	x20, x19, [sp, #32]
  445230:	ldp	x22, x21, [sp, #16]
  445234:	ldp	x29, x30, [sp], #48
  445238:	ret
  44523c:	sub	sp, sp, #0x50
  445240:	stp	x29, x30, [sp, #16]
  445244:	stp	x24, x23, [sp, #32]
  445248:	stp	x22, x21, [sp, #48]
  44524c:	stp	x20, x19, [sp, #64]
  445250:	mov	x22, x0
  445254:	ldr	x8, [x22, #24]!
  445258:	mov	x21, xzr
  44525c:	add	x29, sp, #0x10
  445260:	ldrb	w9, [x8]
  445264:	sub	w10, w9, #0x30
  445268:	cmp	w10, #0x4a
  44526c:	b.hi	4462b0 <feof@plt+0x435b0>  // b.pmore
  445270:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  445274:	add	x11, x11, #0x964
  445278:	adr	x12, 44528c <feof@plt+0x4258c>
  44527c:	ldrh	w13, [x11, x10, lsl #1]
  445280:	add	x12, x12, x13, lsl #2
  445284:	mov	x19, x0
  445288:	br	x12
  44528c:	ldp	w10, w11, [x19, #40]
  445290:	sxtw	x10, w10
  445294:	cmp	w10, w11
  445298:	b.ge	4452e4 <feof@plt+0x425e4>  // b.tcont
  44529c:	ldr	x11, [x19, #32]
  4452a0:	mov	w12, #0x18                  	// #24
  4452a4:	add	w13, w10, #0x1
  4452a8:	madd	x21, x10, x12, x11
  4452ac:	str	wzr, [x21, #4]
  4452b0:	str	w13, [x19, #40]
  4452b4:	cbz	x11, 4452e4 <feof@plt+0x425e4>
  4452b8:	adrp	x8, 466000 <_obstack_memory_used@@Base+0x10dd8>
  4452bc:	add	x8, x8, #0x470
  4452c0:	mov	w13, #0x18                  	// #24
  4452c4:	add	x8, x8, x9, lsl #5
  4452c8:	mov	w12, #0x27                  	// #39
  4452cc:	sub	x8, x8, #0xc20
  4452d0:	madd	x9, x10, x13, x11
  4452d4:	str	w12, [x21]
  4452d8:	str	x8, [x9, #8]
  4452dc:	ldr	x8, [x22]
  4452e0:	b	4452e8 <feof@plt+0x425e8>
  4452e4:	mov	x21, xzr
  4452e8:	str	x21, [sp, #8]
  4452ec:	ldr	x9, [x21, #8]
  4452f0:	ldr	w10, [x19, #72]
  4452f4:	add	x8, x8, #0x1
  4452f8:	ldr	w9, [x9, #8]
  4452fc:	str	x8, [x19, #24]
  445300:	add	w9, w10, w9
  445304:	str	w9, [x19, #72]
  445308:	b	4462b0 <feof@plt+0x435b0>
  44530c:	mov	x0, x19
  445310:	bl	447480 <feof@plt+0x44780>
  445314:	mov	x20, x0
  445318:	str	x0, [sp, #8]
  44531c:	b	446280 <feof@plt+0x43580>
  445320:	add	x9, x8, #0x1
  445324:	str	x9, [x22]
  445328:	ldrb	w10, [x8, #1]
  44532c:	cmp	w10, #0x5f
  445330:	b.ne	44579c <feof@plt+0x42a9c>  // b.any
  445334:	mov	x21, xzr
  445338:	b	445930 <feof@plt+0x42c30>
  44533c:	add	x8, x8, #0x1
  445340:	mov	x0, x19
  445344:	str	x8, [x19, #24]
  445348:	bl	44523c <feof@plt+0x4253c>
  44534c:	cbz	x0, 446278 <feof@plt+0x43578>
  445350:	ldp	w8, w9, [x19, #40]
  445354:	sxtw	x8, w8
  445358:	cmp	w8, w9
  44535c:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445360:	ldr	x9, [x19, #32]
  445364:	mov	w10, #0x18                  	// #24
  445368:	add	w11, w8, #0x1
  44536c:	madd	x20, x8, x10, x9
  445370:	str	wzr, [x20, #4]
  445374:	str	w11, [x19, #40]
  445378:	cbz	x9, 446278 <feof@plt+0x43578>
  44537c:	mov	w11, #0x18                  	// #24
  445380:	mov	w10, #0x25                  	// #37
  445384:	b	445788 <feof@plt+0x42a88>
  445388:	mov	x9, x8
  44538c:	ldrb	w10, [x9, #1]!
  445390:	sub	w10, w10, #0x4f
  445394:	cmp	w10, #0x29
  445398:	b.hi	445998 <feof@plt+0x42c98>  // b.pmore
  44539c:	mov	w11, #0x1                   	// #1
  4453a0:	lsl	x10, x11, x10
  4453a4:	mov	x11, #0x1                   	// #1
  4453a8:	movk	x11, #0x301, lsl #32
  4453ac:	tst	x10, x11
  4453b0:	b.eq	445998 <feof@plt+0x42c98>  // b.none
  4453b4:	add	x1, sp, #0x8
  4453b8:	mov	x0, x19
  4453bc:	mov	w2, wzr
  4453c0:	bl	4462cc <feof@plt+0x435cc>
  4453c4:	cbz	x0, 4462ac <feof@plt+0x435ac>
  4453c8:	ldr	x8, [x22]
  4453cc:	mov	x20, x0
  4453d0:	mov	x0, x19
  4453d4:	ldrb	w8, [x8]
  4453d8:	cmp	w8, #0x46
  4453dc:	b.ne	4453e8 <feof@plt+0x426e8>  // b.any
  4453e0:	bl	44654c <feof@plt+0x4384c>
  4453e4:	b	4453ec <feof@plt+0x426ec>
  4453e8:	bl	44523c <feof@plt+0x4253c>
  4453ec:	str	x0, [x20]
  4453f0:	cbz	x0, 4462ac <feof@plt+0x435ac>
  4453f4:	ldr	w8, [x0]
  4453f8:	sub	w8, w8, #0x1f
  4453fc:	cmp	w8, #0x1
  445400:	b.hi	44541c <feof@plt+0x4271c>  // b.pmore
  445404:	ldr	x8, [sp, #8]
  445408:	ldr	x9, [x0, #8]
  44540c:	str	x8, [x0, #8]
  445410:	ldr	x8, [x20]
  445414:	str	x8, [sp, #8]
  445418:	str	x9, [x20]
  44541c:	ldr	x8, [sp, #8]
  445420:	cbz	x8, 4462ac <feof@plt+0x435ac>
  445424:	ldp	w9, w10, [x19, #56]
  445428:	sxtw	x9, w9
  44542c:	cmp	w9, w10
  445430:	b.ge	4462ac <feof@plt+0x435ac>  // b.tcont
  445434:	ldr	x10, [x19, #48]
  445438:	add	w11, w9, #0x1
  44543c:	str	x8, [x10, x9, lsl #3]
  445440:	str	w11, [x19, #56]
  445444:	b	4462a4 <feof@plt+0x435a4>
  445448:	mov	x0, x19
  44544c:	bl	44654c <feof@plt+0x4384c>
  445450:	b	445314 <feof@plt+0x42614>
  445454:	add	x8, x8, #0x1
  445458:	mov	x0, x19
  44545c:	str	x8, [x19, #24]
  445460:	bl	44523c <feof@plt+0x4253c>
  445464:	cbz	x0, 446278 <feof@plt+0x43578>
  445468:	ldp	w8, w9, [x19, #40]
  44546c:	sxtw	x8, w8
  445470:	cmp	w8, w9
  445474:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445478:	ldr	x9, [x19, #32]
  44547c:	mov	w10, #0x18                  	// #24
  445480:	add	w11, w8, #0x1
  445484:	madd	x20, x8, x10, x9
  445488:	str	wzr, [x20, #4]
  44548c:	str	w11, [x19, #40]
  445490:	cbz	x9, 446278 <feof@plt+0x43578>
  445494:	mov	w11, #0x18                  	// #24
  445498:	mov	w10, #0x26                  	// #38
  44549c:	b	445788 <feof@plt+0x42a88>
  4454a0:	add	x8, x8, #0x1
  4454a4:	mov	x0, x19
  4454a8:	str	x8, [x19, #24]
  4454ac:	bl	44523c <feof@plt+0x4253c>
  4454b0:	cbz	x0, 446278 <feof@plt+0x43578>
  4454b4:	mov	x21, x0
  4454b8:	mov	x0, x19
  4454bc:	bl	44523c <feof@plt+0x4253c>
  4454c0:	cbz	x0, 446278 <feof@plt+0x43578>
  4454c4:	ldp	w8, w9, [x19, #40]
  4454c8:	sxtw	x8, w8
  4454cc:	cmp	w8, w9
  4454d0:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  4454d4:	ldr	x9, [x19, #32]
  4454d8:	mov	w10, #0x18                  	// #24
  4454dc:	add	w11, w8, #0x1
  4454e0:	madd	x20, x8, x10, x9
  4454e4:	str	wzr, [x20, #4]
  4454e8:	str	w11, [x19, #40]
  4454ec:	cbz	x9, 446278 <feof@plt+0x43578>
  4454f0:	mov	w11, #0x18                  	// #24
  4454f4:	mov	w10, #0x2b                  	// #43
  4454f8:	madd	x8, x8, x11, x9
  4454fc:	str	w10, [x20]
  445500:	stp	x21, x0, [x8, #8]
  445504:	str	x20, [sp, #8]
  445508:	b	446280 <feof@plt+0x43580>
  44550c:	add	x8, x8, #0x1
  445510:	mov	x0, x19
  445514:	str	x8, [x19, #24]
  445518:	bl	44523c <feof@plt+0x4253c>
  44551c:	cbz	x0, 446278 <feof@plt+0x43578>
  445520:	ldp	w8, w9, [x19, #40]
  445524:	sxtw	x8, w8
  445528:	cmp	w8, w9
  44552c:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445530:	ldr	x9, [x19, #32]
  445534:	mov	w10, #0x18                  	// #24
  445538:	add	w11, w8, #0x1
  44553c:	madd	x20, x8, x10, x9
  445540:	str	wzr, [x20, #4]
  445544:	str	w11, [x19, #40]
  445548:	cbz	x9, 446278 <feof@plt+0x43578>
  44554c:	mov	w11, #0x18                  	// #24
  445550:	mov	w10, #0x24                  	// #36
  445554:	b	445788 <feof@plt+0x42a88>
  445558:	add	x8, x8, #0x1
  44555c:	mov	x0, x19
  445560:	str	x8, [x19, #24]
  445564:	bl	44523c <feof@plt+0x4253c>
  445568:	cbz	x0, 446278 <feof@plt+0x43578>
  44556c:	ldp	w8, w9, [x19, #40]
  445570:	sxtw	x8, w8
  445574:	cmp	w8, w9
  445578:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  44557c:	ldr	x9, [x19, #32]
  445580:	mov	w10, #0x18                  	// #24
  445584:	add	w11, w8, #0x1
  445588:	madd	x20, x8, x10, x9
  44558c:	str	wzr, [x20, #4]
  445590:	str	w11, [x19, #40]
  445594:	cbz	x9, 446278 <feof@plt+0x43578>
  445598:	mov	w11, #0x18                  	// #24
  44559c:	mov	w10, #0x22                  	// #34
  4455a0:	b	445788 <feof@plt+0x42a88>
  4455a4:	add	x8, x8, #0x1
  4455a8:	mov	x0, x19
  4455ac:	str	x8, [x19, #24]
  4455b0:	bl	44523c <feof@plt+0x4253c>
  4455b4:	cbz	x0, 446278 <feof@plt+0x43578>
  4455b8:	ldp	w8, w9, [x19, #40]
  4455bc:	sxtw	x8, w8
  4455c0:	cmp	w8, w9
  4455c4:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  4455c8:	ldr	x9, [x19, #32]
  4455cc:	mov	w10, #0x18                  	// #24
  4455d0:	add	w11, w8, #0x1
  4455d4:	madd	x20, x8, x10, x9
  4455d8:	str	wzr, [x20, #4]
  4455dc:	str	w11, [x19, #40]
  4455e0:	cbz	x9, 446278 <feof@plt+0x43578>
  4455e4:	mov	w11, #0x18                  	// #24
  4455e8:	mov	w10, #0x23                  	// #35
  4455ec:	b	445788 <feof@plt+0x42a88>
  4455f0:	ldrb	w8, [x8, #1]
  4455f4:	sub	w9, w8, #0x41
  4455f8:	cmp	w9, #0x1a
  4455fc:	b.cc	445818 <feof@plt+0x42b18>  // b.lo, b.ul, b.last
  445600:	cmp	w8, #0x5f
  445604:	b.eq	445818 <feof@plt+0x42b18>  // b.none
  445608:	sub	w8, w8, #0x30
  44560c:	and	w8, w8, #0xff
  445610:	cmp	w8, #0x9
  445614:	b.ls	445818 <feof@plt+0x42b18>  // b.plast
  445618:	mov	x0, x19
  44561c:	bl	447480 <feof@plt+0x44780>
  445620:	str	x0, [sp, #8]
  445624:	cbz	x0, 4462ac <feof@plt+0x435ac>
  445628:	ldr	w8, [x0]
  44562c:	mov	x20, x0
  445630:	mov	x21, x0
  445634:	cmp	w8, #0x18
  445638:	b.ne	446284 <feof@plt+0x43584>  // b.any
  44563c:	b	4462b0 <feof@plt+0x435b0>
  445640:	add	x9, x8, #0x1
  445644:	str	x9, [x22]
  445648:	ldrb	w10, [x8, #1]
  44564c:	cmp	w10, #0x6e
  445650:	b.eq	445b00 <feof@plt+0x42e00>  // b.none
  445654:	cmp	w10, #0x5f
  445658:	b.ne	445890 <feof@plt+0x42b90>  // b.any
  44565c:	mov	w11, wzr
  445660:	add	x21, x8, #0x2
  445664:	str	x21, [x22]
  445668:	ldp	w8, w9, [x19, #40]
  44566c:	sxtw	x8, w8
  445670:	cmp	w8, w9
  445674:	b.ge	445adc <feof@plt+0x42ddc>  // b.tcont
  445678:	ldr	x9, [x19, #32]
  44567c:	mov	w10, #0x18                  	// #24
  445680:	add	w12, w8, #0x1
  445684:	madd	x20, x8, x10, x9
  445688:	str	wzr, [x20, #4]
  44568c:	str	w12, [x19, #40]
  445690:	cbz	x9, 445adc <feof@plt+0x42ddc>
  445694:	mov	w12, #0x18                  	// #24
  445698:	mov	w10, #0x5                   	// #5
  44569c:	mov	w11, w11
  4456a0:	madd	x8, x8, x12, x9
  4456a4:	str	w10, [x20]
  4456a8:	str	x11, [x8, #8]
  4456ac:	ldr	x21, [x22]
  4456b0:	mov	x9, x21
  4456b4:	b	445b08 <feof@plt+0x42e08>
  4456b8:	add	x8, x8, #0x1
  4456bc:	mov	x0, x19
  4456c0:	str	x8, [x19, #24]
  4456c4:	bl	446764 <feof@plt+0x43a64>
  4456c8:	str	x0, [sp, #8]
  4456cc:	ldr	x8, [x19, #24]
  4456d0:	mov	x21, x0
  4456d4:	ldrb	w9, [x8]
  4456d8:	cmp	w9, #0x49
  4456dc:	b.ne	445a68 <feof@plt+0x42d68>  // b.any
  4456e0:	add	x8, x8, #0x1
  4456e4:	mov	x0, x19
  4456e8:	str	x8, [x19, #24]
  4456ec:	bl	448b68 <feof@plt+0x45e68>
  4456f0:	mov	x8, xzr
  4456f4:	cbz	x21, 445a60 <feof@plt+0x42d60>
  4456f8:	cbz	x0, 445a60 <feof@plt+0x42d60>
  4456fc:	ldp	w9, w8, [x19, #40]
  445700:	sxtw	x9, w9
  445704:	cmp	w9, w8
  445708:	b.ge	445a5c <feof@plt+0x42d5c>  // b.tcont
  44570c:	ldr	x10, [x19, #32]
  445710:	mov	w8, #0x18                  	// #24
  445714:	add	w11, w9, #0x1
  445718:	madd	x8, x9, x8, x10
  44571c:	str	wzr, [x8, #4]
  445720:	str	w11, [x19, #40]
  445724:	cbz	x10, 445a5c <feof@plt+0x42d5c>
  445728:	mov	w12, #0x18                  	// #24
  44572c:	mov	w11, #0x4                   	// #4
  445730:	madd	x9, x9, x12, x10
  445734:	str	w11, [x8]
  445738:	stp	x21, x0, [x9, #8]
  44573c:	b	445a60 <feof@plt+0x42d60>
  445740:	add	x8, x8, #0x1
  445744:	mov	x0, x19
  445748:	str	x8, [x19, #24]
  44574c:	bl	446764 <feof@plt+0x43a64>
  445750:	cbz	x0, 446278 <feof@plt+0x43578>
  445754:	ldp	w8, w9, [x19, #40]
  445758:	sxtw	x8, w8
  44575c:	cmp	w8, w9
  445760:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445764:	ldr	x9, [x19, #32]
  445768:	mov	w10, #0x18                  	// #24
  44576c:	add	w11, w8, #0x1
  445770:	madd	x20, x8, x10, x9
  445774:	str	wzr, [x20, #4]
  445778:	str	w11, [x19, #40]
  44577c:	cbz	x9, 446278 <feof@plt+0x43578>
  445780:	mov	w11, #0x18                  	// #24
  445784:	mov	w10, #0x28                  	// #40
  445788:	madd	x8, x8, x11, x9
  44578c:	str	w10, [x20]
  445790:	stp	x0, xzr, [x8, #8]
  445794:	str	x20, [sp, #8]
  445798:	b	446280 <feof@plt+0x43580>
  44579c:	sub	w10, w10, #0x30
  4457a0:	cmp	w10, #0x9
  4457a4:	b.hi	445910 <feof@plt+0x42c10>  // b.pmore
  4457a8:	add	x10, x8, #0x2
  4457ac:	str	x10, [x22]
  4457b0:	ldrb	w8, [x10], #1
  4457b4:	sub	w8, w8, #0x30
  4457b8:	cmp	w8, #0xa
  4457bc:	b.cc	4457ac <feof@plt+0x42aac>  // b.lo, b.ul, b.last
  4457c0:	ldp	w8, w11, [x19, #40]
  4457c4:	sxtw	x8, w8
  4457c8:	cmp	w8, w11
  4457cc:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  4457d0:	ldr	x11, [x19, #32]
  4457d4:	mvn	w12, w9
  4457d8:	mov	w13, #0x18                  	// #24
  4457dc:	add	w10, w12, w10
  4457e0:	mov	x20, xzr
  4457e4:	add	w14, w8, #0x1
  4457e8:	cmp	w10, #0x1
  4457ec:	madd	x21, x8, x13, x11
  4457f0:	str	wzr, [x21, #4]
  4457f4:	str	w14, [x19, #40]
  4457f8:	b.lt	445abc <feof@plt+0x42dbc>  // b.tstop
  4457fc:	cbz	x11, 445abc <feof@plt+0x42dbc>
  445800:	mov	w12, #0x18                  	// #24
  445804:	madd	x8, x8, x12, x11
  445808:	str	xzr, [x21]
  44580c:	str	x9, [x8, #8]
  445810:	str	w10, [x8, #16]
  445814:	b	445930 <feof@plt+0x42c30>
  445818:	mov	x0, x19
  44581c:	mov	w1, wzr
  445820:	bl	44695c <feof@plt+0x43c5c>
  445824:	str	x0, [sp, #8]
  445828:	ldr	x8, [x19, #24]
  44582c:	mov	x21, x0
  445830:	ldrb	w9, [x8]
  445834:	cmp	w9, #0x49
  445838:	b.ne	4462b0 <feof@plt+0x435b0>  // b.any
  44583c:	add	x8, x8, #0x1
  445840:	mov	x0, x19
  445844:	str	x8, [x19, #24]
  445848:	bl	448b68 <feof@plt+0x45e68>
  44584c:	mov	x20, xzr
  445850:	cbz	x21, 445abc <feof@plt+0x42dbc>
  445854:	cbz	x0, 445abc <feof@plt+0x42dbc>
  445858:	ldp	w8, w9, [x19, #40]
  44585c:	sxtw	x8, w8
  445860:	cmp	w8, w9
  445864:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445868:	ldr	x9, [x19, #32]
  44586c:	mov	w10, #0x18                  	// #24
  445870:	add	w11, w8, #0x1
  445874:	madd	x20, x8, x10, x9
  445878:	str	wzr, [x20, #4]
  44587c:	str	w11, [x19, #40]
  445880:	cbz	x9, 446278 <feof@plt+0x43578>
  445884:	mov	w11, #0x18                  	// #24
  445888:	mov	w10, #0x4                   	// #4
  44588c:	b	445988 <feof@plt+0x42c88>
  445890:	sub	w11, w10, #0x30
  445894:	cmp	w11, #0x9
  445898:	b.hi	445ac4 <feof@plt+0x42dc4>  // b.pmore
  44589c:	mov	w11, #0x2f                  	// #47
  4458a0:	movk	w11, #0x8000, lsl #16
  4458a4:	sub	w12, w11, w10
  4458a8:	cmn	w12, #0x9
  4458ac:	b.lt	445b00 <feof@plt+0x42e00>  // b.tstop
  4458b0:	mov	w13, #0x6667                	// #26215
  4458b4:	mov	w12, wzr
  4458b8:	add	x14, x8, #0x2
  4458bc:	mov	w8, #0xa                   	// #10
  4458c0:	movk	w13, #0x6666, lsl #16
  4458c4:	str	x14, [x22]
  4458c8:	madd	w12, w12, w8, w10
  4458cc:	ldrb	w10, [x14]
  4458d0:	mov	x9, x14
  4458d4:	sub	w12, w12, #0x30
  4458d8:	sub	w14, w10, #0x30
  4458dc:	cmp	w14, #0xa
  4458e0:	b.cs	445ae8 <feof@plt+0x42de8>  // b.hs, b.nlast
  4458e4:	sub	w14, w11, w10
  4458e8:	smull	x14, w14, w13
  4458ec:	lsr	x15, x14, #63
  4458f0:	asr	x14, x14, #34
  4458f4:	add	w14, w14, w15
  4458f8:	cmp	w12, w14
  4458fc:	add	x14, x9, #0x1
  445900:	b.le	4458c4 <feof@plt+0x42bc4>
  445904:	mov	x20, xzr
  445908:	sub	x21, x14, #0x1
  44590c:	b	445b08 <feof@plt+0x42e08>
  445910:	ldr	w20, [x19, #76]
  445914:	mov	w8, #0x1                   	// #1
  445918:	mov	x0, x19
  44591c:	str	w8, [x19, #76]
  445920:	bl	448c84 <feof@plt+0x45f84>
  445924:	mov	x21, x0
  445928:	str	w20, [x19, #76]
  44592c:	cbz	x0, 446278 <feof@plt+0x43578>
  445930:	ldr	x8, [x22]
  445934:	ldrb	w9, [x8]
  445938:	cmp	w9, #0x5f
  44593c:	b.ne	446278 <feof@plt+0x43578>  // b.any
  445940:	add	x8, x8, #0x1
  445944:	mov	x0, x19
  445948:	str	x8, [x19, #24]
  44594c:	bl	44523c <feof@plt+0x4253c>
  445950:	cbz	x0, 446278 <feof@plt+0x43578>
  445954:	ldp	w8, w9, [x19, #40]
  445958:	sxtw	x8, w8
  44595c:	cmp	w8, w9
  445960:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445964:	ldr	x9, [x19, #32]
  445968:	mov	w10, #0x18                  	// #24
  44596c:	add	w11, w8, #0x1
  445970:	madd	x20, x8, x10, x9
  445974:	str	wzr, [x20, #4]
  445978:	str	w11, [x19, #40]
  44597c:	cbz	x9, 446278 <feof@plt+0x43578>
  445980:	mov	w11, #0x18                  	// #24
  445984:	mov	w10, #0x2a                  	// #42
  445988:	madd	x8, x8, x11, x9
  44598c:	str	w10, [x20]
  445990:	stp	x21, x0, [x8, #8]
  445994:	b	445abc <feof@plt+0x42dbc>
  445998:	str	x9, [x22]
  44599c:	ldrb	w9, [x9]
  4459a0:	cbz	w9, 4462ac <feof@plt+0x435ac>
  4459a4:	add	x11, x8, #0x2
  4459a8:	str	x11, [x22]
  4459ac:	ldrb	w9, [x8, #1]
  4459b0:	mov	x21, xzr
  4459b4:	sub	w9, w9, #0x46
  4459b8:	cmp	w9, #0x30
  4459bc:	b.hi	4462b0 <feof@plt+0x435b0>  // b.pmore
  4459c0:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4459c4:	add	x10, x10, #0x9fa
  4459c8:	adr	x12, 4459d8 <feof@plt+0x42cd8>
  4459cc:	ldrh	w13, [x10, x9, lsl #1]
  4459d0:	add	x12, x12, x13, lsl #2
  4459d4:	br	x12
  4459d8:	ldr	w20, [x19, #76]
  4459dc:	mov	w8, #0x1                   	// #1
  4459e0:	mov	x0, x19
  4459e4:	str	w8, [x19, #76]
  4459e8:	bl	448c84 <feof@plt+0x45f84>
  4459ec:	str	w20, [x19, #76]
  4459f0:	cbz	x0, 445cdc <feof@plt+0x42fdc>
  4459f4:	ldp	w8, w9, [x19, #40]
  4459f8:	sxtw	x8, w8
  4459fc:	cmp	w8, w9
  445a00:	b.ge	445cdc <feof@plt+0x42fdc>  // b.tcont
  445a04:	ldr	x9, [x19, #32]
  445a08:	mov	w10, #0x18                  	// #24
  445a0c:	add	w11, w8, #0x1
  445a10:	madd	x20, x8, x10, x9
  445a14:	str	wzr, [x20, #4]
  445a18:	str	w11, [x19, #40]
  445a1c:	cbz	x9, 445cdc <feof@plt+0x42fdc>
  445a20:	mov	w11, #0x18                  	// #24
  445a24:	mov	w10, #0x43                  	// #67
  445a28:	madd	x8, x8, x11, x9
  445a2c:	str	w10, [x20]
  445a30:	stp	x0, xzr, [x8, #8]
  445a34:	str	x20, [sp, #8]
  445a38:	ldr	x8, [x22]
  445a3c:	ldrb	w9, [x8]
  445a40:	cbz	w9, 445cdc <feof@plt+0x42fdc>
  445a44:	add	x9, x8, #0x1
  445a48:	str	x9, [x22]
  445a4c:	ldrb	w8, [x8]
  445a50:	cmp	w8, #0x45
  445a54:	b.eq	446284 <feof@plt+0x43584>  // b.none
  445a58:	b	445cdc <feof@plt+0x42fdc>
  445a5c:	mov	x8, xzr
  445a60:	mov	x21, x8
  445a64:	str	x8, [sp, #8]
  445a68:	mov	x0, x19
  445a6c:	bl	44523c <feof@plt+0x4253c>
  445a70:	mov	x20, xzr
  445a74:	cbz	x0, 445abc <feof@plt+0x42dbc>
  445a78:	cbz	x21, 445abc <feof@plt+0x42dbc>
  445a7c:	ldp	w8, w9, [x19, #40]
  445a80:	sxtw	x8, w8
  445a84:	cmp	w8, w9
  445a88:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445a8c:	ldr	x9, [x19, #32]
  445a90:	mov	w10, #0x18                  	// #24
  445a94:	add	w11, w8, #0x1
  445a98:	madd	x20, x8, x10, x9
  445a9c:	str	wzr, [x20, #4]
  445aa0:	str	w11, [x19, #40]
  445aa4:	cbz	x9, 446278 <feof@plt+0x43578>
  445aa8:	mov	w11, #0x18                  	// #24
  445aac:	mov	w10, #0x21                  	// #33
  445ab0:	madd	x8, x8, x11, x9
  445ab4:	str	w10, [x20]
  445ab8:	stp	x0, x21, [x8, #8]
  445abc:	str	x20, [sp, #8]
  445ac0:	b	446280 <feof@plt+0x43580>
  445ac4:	mov	w11, #0x1                   	// #1
  445ac8:	cmp	w10, #0x5f
  445acc:	b.ne	445b00 <feof@plt+0x42e00>  // b.any
  445ad0:	add	x21, x8, #0x2
  445ad4:	str	x21, [x22]
  445ad8:	tbz	w11, #31, 445668 <feof@plt+0x42968>
  445adc:	mov	x20, xzr
  445ae0:	mov	x9, x21
  445ae4:	b	445b08 <feof@plt+0x42e08>
  445ae8:	cmn	w12, #0x1
  445aec:	b.lt	445b00 <feof@plt+0x42e00>  // b.tstop
  445af0:	add	w11, w12, #0x1
  445af4:	sub	x8, x9, #0x1
  445af8:	cmp	w10, #0x5f
  445afc:	b.eq	445ad0 <feof@plt+0x42dd0>  // b.none
  445b00:	mov	x20, xzr
  445b04:	mov	x21, x9
  445b08:	str	x20, [sp, #8]
  445b0c:	ldrb	w8, [x9]
  445b10:	cmp	w8, #0x49
  445b14:	b.ne	446280 <feof@plt+0x43580>  // b.any
  445b18:	ldr	w8, [x19, #80]
  445b1c:	cbz	w8, 445bc4 <feof@plt+0x42ec4>
  445b20:	ldr	w22, [x19, #40]
  445b24:	ldr	w23, [x19, #56]
  445b28:	ldr	w24, [x19, #72]
  445b2c:	add	x8, x9, #0x1
  445b30:	mov	x0, x19
  445b34:	str	x8, [x19, #24]
  445b38:	bl	448b68 <feof@plt+0x45e68>
  445b3c:	ldr	x8, [x19, #24]
  445b40:	ldrb	w8, [x8]
  445b44:	cmp	w8, #0x49
  445b48:	b.ne	445c08 <feof@plt+0x42f08>  // b.any
  445b4c:	cbz	x20, 4462ac <feof@plt+0x435ac>
  445b50:	ldp	w8, w9, [x19, #56]
  445b54:	sxtw	x8, w8
  445b58:	cmp	w8, w9
  445b5c:	b.ge	4462ac <feof@plt+0x435ac>  // b.tcont
  445b60:	ldr	x9, [x19, #48]
  445b64:	add	w10, w8, #0x1
  445b68:	str	x20, [x9, x8, lsl #3]
  445b6c:	mov	x20, xzr
  445b70:	str	w10, [x19, #56]
  445b74:	cbz	x0, 445abc <feof@plt+0x42dbc>
  445b78:	ldr	x8, [sp, #8]
  445b7c:	cbz	x8, 445abc <feof@plt+0x42dbc>
  445b80:	ldp	w9, w10, [x19, #40]
  445b84:	sxtw	x9, w9
  445b88:	cmp	w9, w10
  445b8c:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445b90:	ldr	x10, [x19, #32]
  445b94:	mov	w11, #0x18                  	// #24
  445b98:	add	w12, w9, #0x1
  445b9c:	madd	x20, x9, x11, x10
  445ba0:	str	wzr, [x20, #4]
  445ba4:	str	w12, [x19, #40]
  445ba8:	cbz	x10, 446278 <feof@plt+0x43578>
  445bac:	mov	w12, #0x18                  	// #24
  445bb0:	mov	w11, #0x4                   	// #4
  445bb4:	madd	x9, x9, x12, x10
  445bb8:	str	w11, [x20]
  445bbc:	stp	x8, x0, [x9, #8]
  445bc0:	b	445abc <feof@plt+0x42dbc>
  445bc4:	cbz	x20, 4462ac <feof@plt+0x435ac>
  445bc8:	ldp	w8, w9, [x19, #56]
  445bcc:	sxtw	x8, w8
  445bd0:	cmp	w8, w9
  445bd4:	b.ge	4462ac <feof@plt+0x435ac>  // b.tcont
  445bd8:	ldr	x9, [x19, #48]
  445bdc:	str	x20, [x9, x8, lsl #3]
  445be0:	ldr	x9, [x19, #24]
  445be4:	add	w8, w8, #0x1
  445be8:	str	w8, [x19, #56]
  445bec:	ldrb	w8, [x9]
  445bf0:	sub	w8, w8, #0x49
  445bf4:	cmp	w8, #0x1
  445bf8:	b.hi	446278 <feof@plt+0x43578>  // b.pmore
  445bfc:	ldr	x21, [sp, #8]
  445c00:	add	x8, x9, #0x1
  445c04:	b	445840 <feof@plt+0x42b40>
  445c08:	str	x21, [x19, #24]
  445c0c:	str	w22, [x19, #40]
  445c10:	str	w23, [x19, #56]
  445c14:	str	w24, [x19, #72]
  445c18:	b	446280 <feof@plt+0x43580>
  445c1c:	ldp	w8, w9, [x19, #40]
  445c20:	sxtw	x8, w8
  445c24:	cmp	w8, w9
  445c28:	b.ge	445fc8 <feof@plt+0x432c8>  // b.tcont
  445c2c:	ldr	x9, [x19, #32]
  445c30:	mov	w10, #0x18                  	// #24
  445c34:	add	w12, w8, #0x1
  445c38:	madd	x21, x8, x10, x9
  445c3c:	str	wzr, [x21, #4]
  445c40:	str	w12, [x19, #40]
  445c44:	b	445fcc <feof@plt+0x432cc>
  445c48:	ldp	w8, w9, [x19, #40]
  445c4c:	sxtw	x8, w8
  445c50:	cmp	w8, w9
  445c54:	b.ge	445cdc <feof@plt+0x42fdc>  // b.tcont
  445c58:	ldr	x9, [x19, #32]
  445c5c:	mov	w10, #0x18                  	// #24
  445c60:	add	w11, w8, #0x1
  445c64:	madd	x21, x8, x10, x9
  445c68:	str	wzr, [x21, #4]
  445c6c:	str	w11, [x19, #40]
  445c70:	cbz	x9, 445cdc <feof@plt+0x42fdc>
  445c74:	mov	w10, #0x18                  	// #24
  445c78:	adrp	x11, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445c7c:	add	x11, x11, #0xc45
  445c80:	mov	w12, #0x4                   	// #4
  445c84:	b	445cc4 <feof@plt+0x42fc4>
  445c88:	ldp	w8, w9, [x19, #40]
  445c8c:	sxtw	x8, w8
  445c90:	cmp	w8, w9
  445c94:	b.ge	445cdc <feof@plt+0x42fdc>  // b.tcont
  445c98:	ldr	x9, [x19, #32]
  445c9c:	mov	w10, #0x18                  	// #24
  445ca0:	add	w11, w8, #0x1
  445ca4:	madd	x21, x8, x10, x9
  445ca8:	str	wzr, [x21, #4]
  445cac:	str	w11, [x19, #40]
  445cb0:	cbz	x9, 445cdc <feof@plt+0x42fdc>
  445cb4:	mov	w10, #0x18                  	// #24
  445cb8:	adrp	x11, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445cbc:	add	x11, x11, #0xc4a
  445cc0:	mov	w12, #0xe                   	// #14
  445cc4:	madd	x8, x8, x10, x9
  445cc8:	str	xzr, [x21]
  445ccc:	str	x11, [x8, #8]
  445cd0:	str	w12, [x8, #16]
  445cd4:	str	x21, [sp, #8]
  445cd8:	b	4462b0 <feof@plt+0x435b0>
  445cdc:	mov	x21, xzr
  445ce0:	str	xzr, [sp, #8]
  445ce4:	b	4462b0 <feof@plt+0x435b0>
  445ce8:	ldp	w8, w9, [x19, #40]
  445cec:	sxtw	x8, w8
  445cf0:	cmp	w8, w9
  445cf4:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445cf8:	ldr	x9, [x19, #32]
  445cfc:	mov	w10, #0x18                  	// #24
  445d00:	add	w11, w8, #0x1
  445d04:	madd	x21, x8, x10, x9
  445d08:	str	wzr, [x21, #4]
  445d0c:	str	w11, [x19, #40]
  445d10:	cbz	x9, 445f70 <feof@plt+0x43270>
  445d14:	mov	w11, #0x18                  	// #24
  445d18:	mov	w10, #0x27                  	// #39
  445d1c:	madd	x8, x8, x11, x9
  445d20:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445d24:	str	w10, [x21]
  445d28:	add	x9, x9, #0x7d0
  445d2c:	b	445f68 <feof@plt+0x43268>
  445d30:	ldp	w8, w9, [x19, #40]
  445d34:	sxtw	x8, w8
  445d38:	cmp	w8, w9
  445d3c:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445d40:	ldr	x9, [x19, #32]
  445d44:	mov	w10, #0x18                  	// #24
  445d48:	add	w11, w8, #0x1
  445d4c:	madd	x21, x8, x10, x9
  445d50:	str	wzr, [x21, #4]
  445d54:	str	w11, [x19, #40]
  445d58:	cbz	x9, 445f70 <feof@plt+0x43270>
  445d5c:	mov	w11, #0x18                  	// #24
  445d60:	mov	w10, #0x27                  	// #39
  445d64:	madd	x8, x8, x11, x9
  445d68:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445d6c:	str	w10, [x21]
  445d70:	add	x9, x9, #0x7f0
  445d74:	b	445f68 <feof@plt+0x43268>
  445d78:	ldp	w8, w9, [x19, #40]
  445d7c:	sxtw	x8, w8
  445d80:	cmp	w8, w9
  445d84:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445d88:	ldr	x9, [x19, #32]
  445d8c:	mov	w10, #0x18                  	// #24
  445d90:	add	w11, w8, #0x1
  445d94:	madd	x21, x8, x10, x9
  445d98:	str	wzr, [x21, #4]
  445d9c:	str	w11, [x19, #40]
  445da0:	cbz	x9, 445f70 <feof@plt+0x43270>
  445da4:	mov	w11, #0x18                  	// #24
  445da8:	madd	x8, x8, x11, x9
  445dac:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445db0:	mov	w10, #0x27                  	// #39
  445db4:	add	x9, x9, #0x7b0
  445db8:	str	w10, [x21]
  445dbc:	b	445f68 <feof@plt+0x43268>
  445dc0:	ldp	w8, w9, [x19, #40]
  445dc4:	sxtw	x8, w8
  445dc8:	cmp	w8, w9
  445dcc:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445dd0:	ldr	x9, [x19, #32]
  445dd4:	mov	w10, #0x18                  	// #24
  445dd8:	add	w11, w8, #0x1
  445ddc:	madd	x21, x8, x10, x9
  445de0:	str	wzr, [x21, #4]
  445de4:	str	w11, [x19, #40]
  445de8:	cbz	x9, 445f70 <feof@plt+0x43270>
  445dec:	mov	w11, #0x18                  	// #24
  445df0:	mov	w10, #0x27                  	// #39
  445df4:	madd	x8, x8, x11, x9
  445df8:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445dfc:	str	w10, [x21]
  445e00:	add	x9, x9, #0x810
  445e04:	b	445f68 <feof@plt+0x43268>
  445e08:	ldp	w8, w9, [x19, #40]
  445e0c:	sxtw	x8, w8
  445e10:	cmp	w8, w9
  445e14:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445e18:	ldr	x9, [x19, #32]
  445e1c:	mov	w10, #0x18                  	// #24
  445e20:	add	w11, w8, #0x1
  445e24:	madd	x21, x8, x10, x9
  445e28:	str	wzr, [x21, #4]
  445e2c:	str	w11, [x19, #40]
  445e30:	cbz	x9, 445f70 <feof@plt+0x43270>
  445e34:	mov	w11, #0x18                  	// #24
  445e38:	mov	w10, #0x27                  	// #39
  445e3c:	madd	x8, x8, x11, x9
  445e40:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445e44:	str	w10, [x21]
  445e48:	add	x9, x9, #0x870
  445e4c:	b	445f68 <feof@plt+0x43268>
  445e50:	ldp	w8, w9, [x19, #40]
  445e54:	sxtw	x8, w8
  445e58:	cmp	w8, w9
  445e5c:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445e60:	ldr	x9, [x19, #32]
  445e64:	mov	w10, #0x18                  	// #24
  445e68:	add	w11, w8, #0x1
  445e6c:	madd	x21, x8, x10, x9
  445e70:	str	wzr, [x21, #4]
  445e74:	str	w11, [x19, #40]
  445e78:	cbz	x9, 445f70 <feof@plt+0x43270>
  445e7c:	mov	w11, #0x18                  	// #24
  445e80:	mov	w10, #0x27                  	// #39
  445e84:	madd	x8, x8, x11, x9
  445e88:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445e8c:	str	w10, [x21]
  445e90:	add	x9, x9, #0x890
  445e94:	b	445f68 <feof@plt+0x43268>
  445e98:	mov	x0, x19
  445e9c:	bl	44523c <feof@plt+0x4253c>
  445ea0:	cbz	x0, 446278 <feof@plt+0x43578>
  445ea4:	ldp	w8, w9, [x19, #40]
  445ea8:	sxtw	x8, w8
  445eac:	cmp	w8, w9
  445eb0:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  445eb4:	ldr	x9, [x19, #32]
  445eb8:	mov	w10, #0x18                  	// #24
  445ebc:	add	w11, w8, #0x1
  445ec0:	madd	x20, x8, x10, x9
  445ec4:	str	wzr, [x20, #4]
  445ec8:	str	w11, [x19, #40]
  445ecc:	cbz	x9, 446278 <feof@plt+0x43578>
  445ed0:	mov	w11, #0x18                  	// #24
  445ed4:	mov	w10, #0x4b                  	// #75
  445ed8:	b	445788 <feof@plt+0x42a88>
  445edc:	ldp	w8, w9, [x19, #40]
  445ee0:	sxtw	x8, w8
  445ee4:	cmp	w8, w9
  445ee8:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445eec:	ldr	x9, [x19, #32]
  445ef0:	mov	w10, #0x18                  	// #24
  445ef4:	add	w11, w8, #0x1
  445ef8:	madd	x21, x8, x10, x9
  445efc:	str	wzr, [x21, #4]
  445f00:	str	w11, [x19, #40]
  445f04:	cbz	x9, 445f70 <feof@plt+0x43270>
  445f08:	mov	w11, #0x18                  	// #24
  445f0c:	mov	w10, #0x27                  	// #39
  445f10:	madd	x8, x8, x11, x9
  445f14:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445f18:	str	w10, [x21]
  445f1c:	add	x9, x9, #0x850
  445f20:	b	445f68 <feof@plt+0x43268>
  445f24:	ldp	w8, w9, [x19, #40]
  445f28:	sxtw	x8, w8
  445f2c:	cmp	w8, w9
  445f30:	b.ge	445f70 <feof@plt+0x43270>  // b.tcont
  445f34:	ldr	x9, [x19, #32]
  445f38:	mov	w10, #0x18                  	// #24
  445f3c:	add	w11, w8, #0x1
  445f40:	madd	x21, x8, x10, x9
  445f44:	str	wzr, [x21, #4]
  445f48:	str	w11, [x19, #40]
  445f4c:	cbz	x9, 445f70 <feof@plt+0x43270>
  445f50:	mov	w11, #0x18                  	// #24
  445f54:	mov	w10, #0x27                  	// #39
  445f58:	madd	x8, x8, x11, x9
  445f5c:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  445f60:	str	w10, [x21]
  445f64:	add	x9, x9, #0x830
  445f68:	str	x9, [x8, #8]
  445f6c:	b	445f74 <feof@plt+0x43274>
  445f70:	mov	x21, xzr
  445f74:	str	x21, [sp, #8]
  445f78:	ldr	x8, [x21, #8]
  445f7c:	ldr	w9, [x19, #72]
  445f80:	ldr	w8, [x8, #8]
  445f84:	add	w8, w9, w8
  445f88:	str	w8, [x19, #72]
  445f8c:	b	4462b0 <feof@plt+0x435b0>
  445f90:	ldrb	w9, [x11]
  445f94:	cmp	w9, #0x5f
  445f98:	b.ne	446118 <feof@plt+0x43418>  // b.any
  445f9c:	ldr	w20, [x19, #76]
  445fa0:	add	x8, x8, #0x3
  445fa4:	str	x8, [x19, #24]
  445fa8:	mov	w8, #0x1                   	// #1
  445fac:	mov	x0, x19
  445fb0:	str	w8, [x19, #76]
  445fb4:	bl	448c84 <feof@plt+0x45f84>
  445fb8:	mov	x21, x0
  445fbc:	str	w20, [x19, #76]
  445fc0:	cbnz	x0, 44621c <feof@plt+0x4351c>
  445fc4:	b	446278 <feof@plt+0x43578>
  445fc8:	mov	x21, xzr
  445fcc:	mov	w8, #0x2c                  	// #44
  445fd0:	str	x21, [sp, #8]
  445fd4:	str	w8, [x21]
  445fd8:	ldrb	w8, [x11]
  445fdc:	sub	w8, w8, #0x30
  445fe0:	cmp	w8, #0xa
  445fe4:	cset	w9, cc  // cc = lo, ul, last
  445fe8:	cmp	w8, #0x9
  445fec:	strh	w9, [x21, #16]
  445ff0:	b.hi	446078 <feof@plt+0x43378>  // b.pmore
  445ff4:	ldr	x10, [x22]
  445ff8:	ldrb	w8, [x10]
  445ffc:	cmp	w8, #0x6e
  446000:	b.ne	446014 <feof@plt+0x43314>  // b.any
  446004:	add	x9, x10, #0x1
  446008:	str	x9, [x22]
  44600c:	ldrb	w8, [x10, #1]
  446010:	mov	x10, x9
  446014:	sub	w9, w8, #0x30
  446018:	cmp	w9, #0x9
  44601c:	b.hi	446078 <feof@plt+0x43378>  // b.pmore
  446020:	mov	w9, #0x2f                  	// #47
  446024:	mov	w12, #0x6667                	// #26215
  446028:	mov	w11, wzr
  44602c:	movk	w9, #0x8000, lsl #16
  446030:	add	x10, x10, #0x1
  446034:	movk	w12, #0x6666, lsl #16
  446038:	mov	w13, #0xa                   	// #10
  44603c:	and	w14, w8, #0xff
  446040:	sub	w8, w9, w14
  446044:	smull	x8, w8, w12
  446048:	lsr	x15, x8, #63
  44604c:	asr	x8, x8, #34
  446050:	add	w8, w8, w15
  446054:	cmp	w11, w8
  446058:	b.gt	446078 <feof@plt+0x43378>
  44605c:	str	x10, [x22]
  446060:	ldrb	w8, [x10], #1
  446064:	madd	w11, w11, w13, w14
  446068:	sub	w11, w11, #0x30
  44606c:	sub	w14, w8, #0x30
  446070:	cmp	w14, #0xa
  446074:	b.cc	44603c <feof@plt+0x4333c>  // b.lo, b.ul, b.last
  446078:	mov	x0, x19
  44607c:	bl	44523c <feof@plt+0x4253c>
  446080:	str	x0, [x21, #8]
  446084:	cbz	x0, 4462ac <feof@plt+0x435ac>
  446088:	ldr	x9, [x22]
  44608c:	ldrb	w8, [x9]
  446090:	cmp	w8, #0x6e
  446094:	b.ne	4460a8 <feof@plt+0x433a8>  // b.any
  446098:	add	x10, x9, #0x1
  44609c:	str	x10, [x22]
  4460a0:	ldrb	w8, [x9, #1]
  4460a4:	mov	x9, x10
  4460a8:	sub	w10, w8, #0x30
  4460ac:	cmp	w10, #0x9
  4460b0:	b.hi	446110 <feof@plt+0x43410>  // b.pmore
  4460b4:	mov	w10, #0x2f                  	// #47
  4460b8:	mov	w12, #0x6667                	// #26215
  4460bc:	mov	w11, wzr
  4460c0:	movk	w10, #0x8000, lsl #16
  4460c4:	add	x9, x9, #0x1
  4460c8:	movk	w12, #0x6666, lsl #16
  4460cc:	mov	w13, #0xa                   	// #10
  4460d0:	and	w14, w8, #0xff
  4460d4:	sub	w8, w10, w14
  4460d8:	smull	x8, w8, w12
  4460dc:	lsr	x15, x8, #63
  4460e0:	asr	x8, x8, #34
  4460e4:	add	w8, w8, w15
  4460e8:	cmp	w11, w8
  4460ec:	b.gt	44616c <feof@plt+0x4346c>
  4460f0:	str	x9, [x22]
  4460f4:	ldrb	w8, [x9], #1
  4460f8:	madd	w11, w11, w13, w14
  4460fc:	sub	w11, w11, #0x30
  446100:	sub	w14, w8, #0x30
  446104:	cmp	w14, #0xa
  446108:	b.cc	4460d0 <feof@plt+0x433d0>  // b.lo, b.ul, b.last
  44610c:	sub	x9, x9, #0x1
  446110:	cbnz	w8, 446170 <feof@plt+0x43470>
  446114:	b	446184 <feof@plt+0x43484>
  446118:	ldp	w9, w10, [x19, #40]
  44611c:	sxtw	x9, w9
  446120:	cmp	w9, w10
  446124:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  446128:	ldr	x10, [x19, #32]
  44612c:	mov	w12, #0x18                  	// #24
  446130:	add	w13, w9, #0x1
  446134:	madd	x21, x9, x12, x10
  446138:	str	wzr, [x21, #4]
  44613c:	str	w13, [x19, #40]
  446140:	cbz	x10, 446278 <feof@plt+0x43578>
  446144:	mov	w12, #0x42                  	// #66
  446148:	str	w12, [x21]
  44614c:	ldrb	w12, [x11]
  446150:	cmp	w12, #0x6e
  446154:	b.ne	44618c <feof@plt+0x4348c>  // b.any
  446158:	add	x11, x8, #0x3
  44615c:	str	x11, [x22]
  446160:	ldrb	w12, [x8, #3]
  446164:	mov	w8, #0x1                   	// #1
  446168:	b	446190 <feof@plt+0x43490>
  44616c:	sub	x9, x9, #0x1
  446170:	add	x8, x9, #0x1
  446174:	str	x8, [x22]
  446178:	ldrb	w8, [x9]
  44617c:	cmp	w8, #0x73
  446180:	cset	w8, eq  // eq = none
  446184:	strh	w8, [x21, #18]
  446188:	b	4462b0 <feof@plt+0x435b0>
  44618c:	mov	w8, wzr
  446190:	sub	w13, w12, #0x30
  446194:	cmp	w13, #0x9
  446198:	b.hi	4461f8 <feof@plt+0x434f8>  // b.pmore
  44619c:	mov	w14, #0x2f                  	// #47
  4461a0:	mov	w15, #0x6667                	// #26215
  4461a4:	mov	w13, wzr
  4461a8:	movk	w14, #0x8000, lsl #16
  4461ac:	add	x11, x11, #0x1
  4461b0:	movk	w15, #0x6666, lsl #16
  4461b4:	mov	w16, #0xa                   	// #10
  4461b8:	and	w17, w12, #0xff
  4461bc:	sub	w12, w14, w17
  4461c0:	smull	x12, w12, w15
  4461c4:	lsr	x18, x12, #63
  4461c8:	asr	x12, x12, #34
  4461cc:	add	w12, w12, w18
  4461d0:	cmp	w13, w12
  4461d4:	b.gt	44620c <feof@plt+0x4350c>
  4461d8:	str	x11, [x22]
  4461dc:	ldrb	w12, [x11], #1
  4461e0:	madd	w13, w13, w16, w17
  4461e4:	sub	w13, w13, #0x30
  4461e8:	sub	w17, w12, #0x30
  4461ec:	cmp	w17, #0xa
  4461f0:	b.cc	4461b8 <feof@plt+0x434b8>  // b.lo, b.ul, b.last
  4461f4:	b	4461fc <feof@plt+0x434fc>
  4461f8:	mov	w13, wzr
  4461fc:	cmp	w8, #0x0
  446200:	cneg	w8, w13, ne  // ne = any
  446204:	sxtw	x8, w8
  446208:	b	446210 <feof@plt+0x43510>
  44620c:	mov	x8, #0xffffffffffffffff    	// #-1
  446210:	mov	w11, #0x18                  	// #24
  446214:	madd	x9, x9, x11, x10
  446218:	str	x8, [x9, #8]
  44621c:	ldr	x8, [x22]
  446220:	ldrb	w9, [x8]
  446224:	cmp	w9, #0x5f
  446228:	b.ne	446278 <feof@plt+0x43578>  // b.any
  44622c:	add	x8, x8, #0x1
  446230:	mov	x0, x19
  446234:	str	x8, [x19, #24]
  446238:	bl	44523c <feof@plt+0x4253c>
  44623c:	cbz	x0, 446278 <feof@plt+0x43578>
  446240:	ldp	w8, w9, [x19, #40]
  446244:	sxtw	x8, w8
  446248:	cmp	w8, w9
  44624c:	b.ge	446278 <feof@plt+0x43578>  // b.tcont
  446250:	ldr	x9, [x19, #32]
  446254:	mov	w10, #0x18                  	// #24
  446258:	add	w11, w8, #0x1
  44625c:	madd	x20, x8, x10, x9
  446260:	str	wzr, [x20, #4]
  446264:	str	w11, [x19, #40]
  446268:	cbz	x9, 446278 <feof@plt+0x43578>
  44626c:	mov	w11, #0x18                  	// #24
  446270:	mov	w10, #0x2d                  	// #45
  446274:	b	4454f8 <feof@plt+0x427f8>
  446278:	mov	x20, xzr
  44627c:	str	xzr, [sp, #8]
  446280:	cbz	x20, 4462ac <feof@plt+0x435ac>
  446284:	ldp	w8, w9, [x19, #56]
  446288:	sxtw	x8, w8
  44628c:	cmp	w8, w9
  446290:	b.ge	4462ac <feof@plt+0x435ac>  // b.tcont
  446294:	ldr	x9, [x19, #48]
  446298:	add	w10, w8, #0x1
  44629c:	str	x20, [x9, x8, lsl #3]
  4462a0:	str	w10, [x19, #56]
  4462a4:	ldr	x21, [sp, #8]
  4462a8:	b	4462b0 <feof@plt+0x435b0>
  4462ac:	mov	x21, xzr
  4462b0:	mov	x0, x21
  4462b4:	ldp	x20, x19, [sp, #64]
  4462b8:	ldp	x22, x21, [sp, #48]
  4462bc:	ldp	x24, x23, [sp, #32]
  4462c0:	ldp	x29, x30, [sp, #16]
  4462c4:	add	sp, sp, #0x50
  4462c8:	ret
  4462cc:	stp	x29, x30, [sp, #-96]!
  4462d0:	stp	x28, x27, [sp, #16]
  4462d4:	cmp	w2, #0x0
  4462d8:	mov	w8, #0x1e                  	// #30
  4462dc:	mov	w9, #0x1b                  	// #27
  4462e0:	mov	w10, #0x1d                  	// #29
  4462e4:	mov	w11, #0x1a                  	// #26
  4462e8:	mov	w12, #0x1c                  	// #28
  4462ec:	mov	w13, #0x19                  	// #25
  4462f0:	mov	x27, #0x1                   	// #1
  4462f4:	stp	x26, x25, [sp, #32]
  4462f8:	stp	x24, x23, [sp, #48]
  4462fc:	stp	x22, x21, [sp, #64]
  446300:	stp	x20, x19, [sp, #80]
  446304:	mov	w20, w2
  446308:	mov	x19, x1
  44630c:	mov	x21, x0
  446310:	csel	w23, w9, w8, eq  // eq = none
  446314:	mov	w24, #0x1                   	// #1
  446318:	csel	w25, w11, w10, eq  // eq = none
  44631c:	csel	w26, w13, w12, eq  // eq = none
  446320:	movk	x27, #0x301, lsl #32
  446324:	mov	x22, x1
  446328:	mov	x29, sp
  44632c:	ldr	x8, [x21, #24]
  446330:	ldrb	w9, [x8]
  446334:	cmp	w9, #0x55
  446338:	b.gt	446350 <feof@plt+0x43650>
  44633c:	cmp	w9, #0x44
  446340:	b.eq	446390 <feof@plt+0x43690>  // b.none
  446344:	cmp	w9, #0x4b
  446348:	b.eq	446360 <feof@plt+0x43660>  // b.none
  44634c:	b	4464ec <feof@plt+0x437ec>
  446350:	cmp	w9, #0x56
  446354:	b.eq	446360 <feof@plt+0x43660>  // b.none
  446358:	cmp	w9, #0x72
  44635c:	b.ne	4464ec <feof@plt+0x437ec>  // b.any
  446360:	add	x10, x8, #0x1
  446364:	cmp	w9, #0x4b
  446368:	str	x10, [x21, #24]
  44636c:	b.eq	44645c <feof@plt+0x4375c>  // b.none
  446370:	cmp	w9, #0x56
  446374:	b.eq	446474 <feof@plt+0x43774>  // b.none
  446378:	cmp	w9, #0x72
  44637c:	b.ne	4463b4 <feof@plt+0x436b4>  // b.any
  446380:	ldr	w8, [x21, #72]
  446384:	mov	x3, xzr
  446388:	mov	w1, w26
  44638c:	b	446480 <feof@plt+0x43780>
  446390:	ldrb	w9, [x8, #1]
  446394:	sub	w9, w9, #0x4f
  446398:	cmp	w9, #0x29
  44639c:	b.hi	4464f8 <feof@plt+0x437f8>  // b.pmore
  4463a0:	lsl	x9, x24, x9
  4463a4:	tst	x9, x27
  4463a8:	b.eq	4464f8 <feof@plt+0x437f8>  // b.none
  4463ac:	add	x10, x8, #0x1
  4463b0:	str	x10, [x21, #24]
  4463b4:	ldrb	w9, [x10]
  4463b8:	cbz	w9, 44652c <feof@plt+0x4382c>
  4463bc:	add	x9, x8, #0x2
  4463c0:	str	x9, [x21, #24]
  4463c4:	ldrb	w8, [x8, #1]
  4463c8:	mov	x0, xzr
  4463cc:	cmp	w8, #0x76
  4463d0:	b.gt	446434 <feof@plt+0x43734>
  4463d4:	cmp	w8, #0x4f
  4463d8:	b.eq	4463e4 <feof@plt+0x436e4>  // b.none
  4463dc:	cmp	w8, #0x6f
  4463e0:	b.ne	446530 <feof@plt+0x43830>  // b.any
  4463e4:	ldr	w9, [x21, #72]
  4463e8:	cmp	w8, #0x4f
  4463ec:	add	w9, w9, #0x9
  4463f0:	str	w9, [x21, #72]
  4463f4:	b.ne	44648c <feof@plt+0x4378c>  // b.any
  4463f8:	ldr	w28, [x21, #76]
  4463fc:	mov	x0, x21
  446400:	str	w24, [x21, #76]
  446404:	bl	448c84 <feof@plt+0x45f84>
  446408:	str	w28, [x21, #76]
  44640c:	cbz	x0, 446530 <feof@plt+0x43830>
  446410:	ldr	x8, [x21, #24]
  446414:	ldrb	w9, [x8]
  446418:	cmp	w9, #0x45
  44641c:	b.ne	44652c <feof@plt+0x4382c>  // b.any
  446420:	add	x8, x8, #0x1
  446424:	mov	x3, x0
  446428:	str	x8, [x21, #24]
  44642c:	mov	w1, #0x4f                  	// #79
  446430:	b	4464d0 <feof@plt+0x437d0>
  446434:	cmp	w8, #0x77
  446438:	b.eq	446498 <feof@plt+0x43798>  // b.none
  44643c:	cmp	w8, #0x78
  446440:	b.ne	446530 <feof@plt+0x43830>  // b.any
  446444:	ldr	w8, [x21, #72]
  446448:	mov	x3, xzr
  44644c:	mov	w1, #0x4d                  	// #77
  446450:	add	w8, w8, #0x11
  446454:	str	w8, [x21, #72]
  446458:	b	4464d0 <feof@plt+0x437d0>
  44645c:	ldr	w8, [x21, #72]
  446460:	mov	x3, xzr
  446464:	mov	w1, w23
  446468:	add	w8, w8, #0x6
  44646c:	str	w8, [x21, #72]
  446470:	b	4464d0 <feof@plt+0x437d0>
  446474:	ldr	w8, [x21, #72]
  446478:	mov	x3, xzr
  44647c:	mov	w1, w25
  446480:	add	w8, w8, #0x9
  446484:	str	w8, [x21, #72]
  446488:	b	4464d0 <feof@plt+0x437d0>
  44648c:	mov	x3, xzr
  446490:	mov	w1, #0x4f                  	// #79
  446494:	b	4464d0 <feof@plt+0x437d0>
  446498:	ldr	w8, [x21, #72]
  44649c:	mov	x0, x21
  4464a0:	add	w8, w8, #0x6
  4464a4:	str	w8, [x21, #72]
  4464a8:	bl	448a4c <feof@plt+0x45d4c>
  4464ac:	cbz	x0, 446530 <feof@plt+0x43830>
  4464b0:	ldr	x8, [x21, #24]
  4464b4:	ldrb	w9, [x8]
  4464b8:	cmp	w9, #0x45
  4464bc:	b.ne	44652c <feof@plt+0x4382c>  // b.any
  4464c0:	mov	x3, x0
  4464c4:	add	x8, x8, #0x1
  4464c8:	mov	w1, #0x50                  	// #80
  4464cc:	str	x8, [x21, #24]
  4464d0:	mov	x0, x21
  4464d4:	mov	x2, xzr
  4464d8:	bl	4466d8 <feof@plt+0x439d8>
  4464dc:	str	x0, [x22]
  4464e0:	cbz	x0, 446530 <feof@plt+0x43830>
  4464e4:	add	x22, x0, #0x8
  4464e8:	b	44632c <feof@plt+0x4362c>
  4464ec:	cmp	w9, #0x46
  4464f0:	b.ne	4464f8 <feof@plt+0x437f8>  // b.any
  4464f4:	cbz	w20, 446504 <feof@plt+0x43804>
  4464f8:	mov	x0, x22
  4464fc:	b	446530 <feof@plt+0x43830>
  446500:	add	x19, x8, #0x8
  446504:	cmp	x22, x19
  446508:	b.eq	4464f8 <feof@plt+0x437f8>  // b.none
  44650c:	ldr	x8, [x19]
  446510:	ldr	w9, [x8]
  446514:	sub	w10, w9, #0x19
  446518:	cmp	w10, #0x2
  44651c:	b.hi	446500 <feof@plt+0x43800>  // b.pmore
  446520:	add	w9, w9, #0x3
  446524:	str	w9, [x8]
  446528:	b	446500 <feof@plt+0x43800>
  44652c:	mov	x0, xzr
  446530:	ldp	x20, x19, [sp, #80]
  446534:	ldp	x22, x21, [sp, #64]
  446538:	ldp	x24, x23, [sp, #48]
  44653c:	ldp	x26, x25, [sp, #32]
  446540:	ldp	x28, x27, [sp, #16]
  446544:	ldp	x29, x30, [sp], #96
  446548:	ret
  44654c:	stp	x29, x30, [sp, #-32]!
  446550:	stp	x20, x19, [sp, #16]
  446554:	ldrb	w8, [x0, #18]
  446558:	mov	x19, x0
  44655c:	mov	x29, sp
  446560:	tbnz	w8, #2, 446580 <feof@plt+0x43880>
  446564:	ldr	w8, [x19, #84]
  446568:	cmp	w8, #0x800
  44656c:	b.ls	446578 <feof@plt+0x43878>  // b.plast
  446570:	mov	x2, xzr
  446574:	b	4466c8 <feof@plt+0x439c8>
  446578:	add	w8, w8, #0x1
  44657c:	str	w8, [x19, #84]
  446580:	ldr	x8, [x19, #24]
  446584:	ldrb	w9, [x8]
  446588:	cmp	w9, #0x46
  44658c:	b.ne	4466b0 <feof@plt+0x439b0>  // b.any
  446590:	add	x9, x8, #0x1
  446594:	str	x9, [x19, #24]
  446598:	ldrb	w9, [x8, #1]
  44659c:	cmp	w9, #0x59
  4465a0:	b.ne	4465c0 <feof@plt+0x438c0>  // b.any
  4465a4:	add	x9, x8, #0x2
  4465a8:	str	x9, [x19, #24]
  4465ac:	ldrb	w9, [x8, #2]
  4465b0:	mov	w10, #0x2                   	// #2
  4465b4:	cmp	w9, #0x4a
  4465b8:	b.eq	4465cc <feof@plt+0x438cc>  // b.none
  4465bc:	b	4465d8 <feof@plt+0x438d8>
  4465c0:	mov	w10, #0x1                   	// #1
  4465c4:	cmp	w9, #0x4a
  4465c8:	b.ne	4465d8 <feof@plt+0x438d8>  // b.any
  4465cc:	add	x8, x8, x10
  4465d0:	add	x8, x8, #0x1
  4465d4:	str	x8, [x19, #24]
  4465d8:	mov	x0, x19
  4465dc:	bl	44523c <feof@plt+0x4253c>
  4465e0:	cbz	x0, 446638 <feof@plt+0x43938>
  4465e4:	mov	x20, x0
  4465e8:	mov	x0, x19
  4465ec:	bl	448a4c <feof@plt+0x45d4c>
  4465f0:	cbz	x0, 446638 <feof@plt+0x43938>
  4465f4:	ldp	w8, w9, [x19, #40]
  4465f8:	sxtw	x8, w8
  4465fc:	cmp	w8, w9
  446600:	b.ge	446638 <feof@plt+0x43938>  // b.tcont
  446604:	ldr	x9, [x19, #32]
  446608:	mov	w10, #0x18                  	// #24
  44660c:	add	w11, w8, #0x1
  446610:	madd	x2, x8, x10, x9
  446614:	str	wzr, [x2, #4]
  446618:	str	w11, [x19, #40]
  44661c:	cbz	x9, 446638 <feof@plt+0x43938>
  446620:	mov	w11, #0x18                  	// #24
  446624:	mov	w10, #0x29                  	// #41
  446628:	madd	x8, x8, x11, x9
  44662c:	str	w10, [x2]
  446630:	stp	x20, x0, [x8, #8]
  446634:	b	44663c <feof@plt+0x4393c>
  446638:	mov	x2, xzr
  44663c:	ldr	x8, [x19, #24]
  446640:	ldrb	w9, [x8]
  446644:	cmp	w9, #0x52
  446648:	b.eq	446654 <feof@plt+0x43954>  // b.none
  44664c:	cmp	w9, #0x4f
  446650:	b.ne	446694 <feof@plt+0x43994>  // b.any
  446654:	ldr	w10, [x19, #72]
  446658:	cmp	w9, #0x52
  44665c:	mov	w9, #0x2                   	// #2
  446660:	mov	w11, #0x1f                  	// #31
  446664:	cinc	w9, w9, ne  // ne = any
  446668:	add	x8, x8, #0x1
  44666c:	cinc	w1, w11, ne  // ne = any
  446670:	add	w9, w10, w9
  446674:	mov	x0, x19
  446678:	mov	x3, xzr
  44667c:	str	w9, [x19, #72]
  446680:	str	x8, [x19, #24]
  446684:	bl	4466d8 <feof@plt+0x439d8>
  446688:	ldr	x8, [x19, #24]
  44668c:	mov	x2, x0
  446690:	ldrb	w9, [x8]
  446694:	cmp	w9, #0x45
  446698:	b.ne	4466b0 <feof@plt+0x439b0>  // b.any
  44669c:	add	x8, x8, #0x1
  4466a0:	str	x8, [x19, #24]
  4466a4:	ldrb	w8, [x19, #18]
  4466a8:	tbz	w8, #2, 4466bc <feof@plt+0x439bc>
  4466ac:	b	4466c8 <feof@plt+0x439c8>
  4466b0:	mov	x2, xzr
  4466b4:	ldrb	w8, [x19, #18]
  4466b8:	tbnz	w8, #2, 4466c8 <feof@plt+0x439c8>
  4466bc:	ldr	w8, [x19, #84]
  4466c0:	sub	w8, w8, #0x1
  4466c4:	str	w8, [x19, #84]
  4466c8:	ldp	x20, x19, [sp, #16]
  4466cc:	mov	x0, x2
  4466d0:	ldp	x29, x30, [sp], #32
  4466d4:	ret
  4466d8:	sub	w9, w1, #0x1
  4466dc:	mov	x8, x0
  4466e0:	cmp	w9, #0x4f
  4466e4:	mov	x0, xzr
  4466e8:	b.hi	446754 <feof@plt+0x43a54>  // b.pmore
  4466ec:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4466f0:	add	x10, x10, #0xa5c
  4466f4:	adr	x11, 446704 <feof@plt+0x43a04>
  4466f8:	ldrb	w12, [x10, x9]
  4466fc:	add	x11, x11, x12, lsl #2
  446700:	br	x11
  446704:	cbnz	x2, 446718 <feof@plt+0x43a18>
  446708:	b	44675c <feof@plt+0x43a5c>
  44670c:	mov	x0, xzr
  446710:	cbz	x2, 446754 <feof@plt+0x43a54>
  446714:	cbz	x3, 446754 <feof@plt+0x43a54>
  446718:	ldp	w9, w10, [x8, #40]
  44671c:	sxtw	x9, w9
  446720:	cmp	w9, w10
  446724:	b.ge	44675c <feof@plt+0x43a5c>  // b.tcont
  446728:	ldr	x10, [x8, #32]
  44672c:	mov	w11, #0x18                  	// #24
  446730:	add	w12, w9, #0x1
  446734:	madd	x0, x9, x11, x10
  446738:	str	wzr, [x0, #4]
  44673c:	str	w12, [x8, #40]
  446740:	cbz	x10, 44675c <feof@plt+0x43a5c>
  446744:	mov	w8, #0x18                  	// #24
  446748:	madd	x8, x9, x8, x10
  44674c:	str	w1, [x0]
  446750:	stp	x2, x3, [x8, #8]
  446754:	ret
  446758:	cbnz	x3, 446718 <feof@plt+0x43a18>
  44675c:	mov	x0, xzr
  446760:	ret
  446764:	ldr	x9, [x0, #24]
  446768:	ldrb	w10, [x9]
  44676c:	cmp	w10, #0x6e
  446770:	b.ne	44678c <feof@plt+0x43a8c>  // b.any
  446774:	add	x11, x9, #0x1
  446778:	str	x11, [x0, #24]
  44677c:	ldrb	w10, [x9, #1]
  446780:	mov	w8, #0x1                   	// #1
  446784:	mov	x9, x11
  446788:	b	446790 <feof@plt+0x43a90>
  44678c:	mov	w8, wzr
  446790:	sub	w11, w10, #0x30
  446794:	cmp	w11, #0x9
  446798:	b.hi	4467fc <feof@plt+0x43afc>  // b.pmore
  44679c:	mov	w12, #0x2f                  	// #47
  4467a0:	mov	w13, #0x6667                	// #26215
  4467a4:	mov	w11, wzr
  4467a8:	add	x9, x9, #0x1
  4467ac:	movk	w12, #0x8000, lsl #16
  4467b0:	movk	w13, #0x6666, lsl #16
  4467b4:	mov	w14, #0xa                   	// #10
  4467b8:	and	w15, w10, #0xff
  4467bc:	sub	w10, w12, w15
  4467c0:	smull	x10, w10, w13
  4467c4:	lsr	x16, x10, #63
  4467c8:	asr	x10, x10, #34
  4467cc:	add	w10, w10, w16
  4467d0:	cmp	w11, w10
  4467d4:	b.gt	4468b0 <feof@plt+0x43bb0>
  4467d8:	str	x9, [x0, #24]
  4467dc:	ldrb	w10, [x9], #1
  4467e0:	madd	w11, w11, w14, w15
  4467e4:	sub	w11, w11, #0x30
  4467e8:	sub	w15, w10, #0x30
  4467ec:	cmp	w15, #0xa
  4467f0:	b.cc	4467b8 <feof@plt+0x43ab8>  // b.lo, b.ul, b.last
  4467f4:	sub	x9, x9, #0x1
  4467f8:	b	446800 <feof@plt+0x43b00>
  4467fc:	mov	w11, wzr
  446800:	cmp	w8, #0x0
  446804:	cneg	w10, w11, ne  // ne = any
  446808:	cmp	w10, #0x1
  44680c:	b.lt	4468b0 <feof@plt+0x43bb0>  // b.tstop
  446810:	ldr	x8, [x0, #8]
  446814:	sub	x11, x8, x9
  446818:	mov	w8, w10
  44681c:	cmp	x11, x8
  446820:	b.lt	44694c <feof@plt+0x43c4c>  // b.tstop
  446824:	ldrb	w11, [x0, #16]
  446828:	add	x8, x9, x8
  44682c:	str	x8, [x0, #24]
  446830:	tbz	w11, #2, 446848 <feof@plt+0x43b48>
  446834:	ldrb	w11, [x8]
  446838:	cmp	w11, #0x24
  44683c:	b.ne	446848 <feof@plt+0x43b48>  // b.any
  446840:	add	x8, x8, #0x1
  446844:	str	x8, [x0, #24]
  446848:	cmp	w10, #0xa
  44684c:	b.lt	44686c <feof@plt+0x43b6c>  // b.tstop
  446850:	ldr	x8, [x9]
  446854:	mov	x11, #0x475f                	// #18271
  446858:	movk	x11, #0x4f4c, lsl #16
  44685c:	movk	x11, #0x4142, lsl #32
  446860:	movk	x11, #0x5f4c, lsl #48
  446864:	cmp	x8, x11
  446868:	b.eq	4468b8 <feof@plt+0x43bb8>  // b.none
  44686c:	ldp	w11, w8, [x0, #40]
  446870:	sxtw	x11, w11
  446874:	cmp	w11, w8
  446878:	b.ge	44694c <feof@plt+0x43c4c>  // b.tcont
  44687c:	ldr	x12, [x0, #32]
  446880:	mov	w8, #0x18                  	// #24
  446884:	add	w13, w11, #0x1
  446888:	madd	x8, x11, x8, x12
  44688c:	str	wzr, [x8, #4]
  446890:	str	w13, [x0, #40]
  446894:	cbz	x12, 44694c <feof@plt+0x43c4c>
  446898:	mov	w13, #0x18                  	// #24
  44689c:	madd	x11, x11, x13, x12
  4468a0:	str	xzr, [x8]
  4468a4:	str	x9, [x11, #8]
  4468a8:	str	w10, [x11, #16]
  4468ac:	b	446950 <feof@plt+0x43c50>
  4468b0:	mov	x0, xzr
  4468b4:	ret
  4468b8:	ldrb	w8, [x9, #8]
  4468bc:	sub	w8, w8, #0x24
  4468c0:	cmp	w8, #0x3b
  4468c4:	b.hi	44686c <feof@plt+0x43b6c>  // b.pmore
  4468c8:	mov	w11, #0x1                   	// #1
  4468cc:	lsl	x8, x11, x8
  4468d0:	mov	x11, #0x401                 	// #1025
  4468d4:	movk	x11, #0x800, lsl #48
  4468d8:	tst	x8, x11
  4468dc:	b.eq	44686c <feof@plt+0x43b6c>  // b.none
  4468e0:	ldrb	w8, [x9, #9]
  4468e4:	cmp	w8, #0x4e
  4468e8:	b.ne	44686c <feof@plt+0x43b6c>  // b.any
  4468ec:	ldr	w8, [x0, #72]
  4468f0:	ldp	w9, w11, [x0, #40]
  4468f4:	sxtw	x9, w9
  4468f8:	sub	w8, w8, w10
  4468fc:	add	w8, w8, #0x16
  446900:	cmp	w9, w11
  446904:	str	w8, [x0, #72]
  446908:	b.ge	44694c <feof@plt+0x43c4c>  // b.tcont
  44690c:	ldr	x10, [x0, #32]
  446910:	mov	w8, #0x18                  	// #24
  446914:	add	w11, w9, #0x1
  446918:	madd	x8, x9, x8, x10
  44691c:	str	wzr, [x8, #4]
  446920:	str	w11, [x0, #40]
  446924:	cbz	x10, 44694c <feof@plt+0x43c4c>
  446928:	mov	w11, #0x18                  	// #24
  44692c:	adrp	x12, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446930:	add	x12, x12, #0xc66
  446934:	mov	w13, #0x15                  	// #21
  446938:	madd	x9, x9, x11, x10
  44693c:	str	xzr, [x8]
  446940:	str	x12, [x9, #8]
  446944:	str	w13, [x9, #16]
  446948:	b	446950 <feof@plt+0x43c50>
  44694c:	mov	x8, xzr
  446950:	str	x8, [x0, #64]
  446954:	mov	x0, x8
  446958:	ret
  44695c:	stp	x29, x30, [sp, #-64]!
  446960:	stp	x22, x21, [sp, #32]
  446964:	stp	x20, x19, [sp, #48]
  446968:	ldr	x8, [x0, #24]
  44696c:	str	x23, [sp, #16]
  446970:	mov	x29, sp
  446974:	ldrb	w9, [x8]
  446978:	cmp	w9, #0x53
  44697c:	b.ne	446c68 <feof@plt+0x43f68>  // b.any
  446980:	add	x9, x8, #0x1
  446984:	str	x9, [x0, #24]
  446988:	ldrb	w10, [x8, #1]
  44698c:	mov	x19, x0
  446990:	cbz	w10, 4469e0 <feof@plt+0x43ce0>
  446994:	add	x9, x8, #0x2
  446998:	str	x9, [x19, #24]
  44699c:	ldrb	w10, [x8, #1]
  4469a0:	cmp	w10, #0x5f
  4469a4:	b.ne	4469c4 <feof@plt+0x43cc4>  // b.any
  4469a8:	mov	w8, wzr
  4469ac:	ldr	w9, [x19, #56]
  4469b0:	cmp	w8, w9
  4469b4:	b.cs	446c68 <feof@plt+0x43f68>  // b.hs, b.nlast
  4469b8:	ldr	x9, [x19, #48]
  4469bc:	ldr	x0, [x9, w8, uxtw #3]
  4469c0:	b	446c6c <feof@plt+0x43f6c>
  4469c4:	sub	w8, w10, #0x30
  4469c8:	cmp	w8, #0xa
  4469cc:	b.cc	446a3c <feof@plt+0x43d3c>  // b.lo, b.ul, b.last
  4469d0:	sub	w8, w10, #0x41
  4469d4:	and	w8, w8, #0xff
  4469d8:	cmp	w8, #0x19
  4469dc:	b.ls	446a3c <feof@plt+0x43d3c>  // b.plast
  4469e0:	ldr	w8, [x19, #16]
  4469e4:	ubfx	w8, w8, #3, #1
  4469e8:	cbz	w1, 446a00 <feof@plt+0x43d00>
  4469ec:	cbnz	w8, 446a00 <feof@plt+0x43d00>
  4469f0:	ldrb	w8, [x9]
  4469f4:	sub	w8, w8, #0x43
  4469f8:	cmp	w8, #0x2
  4469fc:	cset	w8, cc  // cc = lo, ul, last
  446a00:	sub	w9, w10, #0x61
  446a04:	cmp	w9, #0x13
  446a08:	mov	x0, xzr
  446a0c:	b.hi	446c6c <feof@plt+0x43f6c>  // b.pmore
  446a10:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  446a14:	add	x10, x10, #0xaac
  446a18:	adr	x11, 446a30 <feof@plt+0x43d30>
  446a1c:	ldrb	w12, [x10, x9]
  446a20:	add	x11, x11, x12, lsl #2
  446a24:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446a28:	add	x9, x9, #0x8b0
  446a2c:	br	x11
  446a30:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446a34:	add	x9, x9, #0x8e8
  446a38:	b	446ae4 <feof@plt+0x43de4>
  446a3c:	mov	w11, wzr
  446a40:	mov	w8, #0x24                  	// #36
  446a44:	b	446a54 <feof@plt+0x43d54>
  446a48:	cmp	w10, #0x5f
  446a4c:	mov	w11, w12
  446a50:	b.eq	446c80 <feof@plt+0x43f80>  // b.none
  446a54:	sub	w12, w10, #0x30
  446a58:	and	w12, w12, #0xff
  446a5c:	cmp	w12, #0xa
  446a60:	and	w10, w10, #0xff
  446a64:	b.cs	446a70 <feof@plt+0x43d70>  // b.hs, b.nlast
  446a68:	mov	w12, #0xffffffd0            	// #-48
  446a6c:	b	446a80 <feof@plt+0x43d80>
  446a70:	sub	w12, w10, #0x41
  446a74:	cmp	w12, #0x19
  446a78:	b.hi	446c68 <feof@plt+0x43f68>  // b.pmore
  446a7c:	mov	w12, #0xffffffc9            	// #-55
  446a80:	madd	w12, w11, w8, w12
  446a84:	add	w12, w12, w10
  446a88:	cmp	w12, w11
  446a8c:	b.cc	446c68 <feof@plt+0x43f68>  // b.lo, b.ul, b.last
  446a90:	ldrb	w10, [x9]
  446a94:	cbz	w10, 446a48 <feof@plt+0x43d48>
  446a98:	add	x11, x9, #0x1
  446a9c:	str	x11, [x19, #24]
  446aa0:	ldrb	w10, [x9]
  446aa4:	mov	x9, x11
  446aa8:	b	446a48 <feof@plt+0x43d48>
  446aac:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446ab0:	add	x9, x9, #0x920
  446ab4:	b	446ae4 <feof@plt+0x43de4>
  446ab8:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446abc:	add	x9, x9, #0xa00
  446ac0:	b	446ae4 <feof@plt+0x43de4>
  446ac4:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446ac8:	add	x9, x9, #0x990
  446acc:	b	446ae4 <feof@plt+0x43de4>
  446ad0:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446ad4:	add	x9, x9, #0x9c8
  446ad8:	b	446ae4 <feof@plt+0x43de4>
  446adc:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  446ae0:	add	x9, x9, #0x958
  446ae4:	ldr	x10, [x9, #40]
  446ae8:	cbz	x10, 446b38 <feof@plt+0x43e38>
  446aec:	ldp	w11, w12, [x19, #40]
  446af0:	sxtw	x11, w11
  446af4:	cmp	w11, w12
  446af8:	b.ge	446b30 <feof@plt+0x43e30>  // b.tcont
  446afc:	ldr	x14, [x19, #32]
  446b00:	ldr	w13, [x9, #48]
  446b04:	mov	w15, #0x18                  	// #24
  446b08:	add	w16, w11, #0x1
  446b0c:	madd	x12, x11, x15, x14
  446b10:	str	wzr, [x12, #4]
  446b14:	str	w16, [x19, #40]
  446b18:	cbz	x14, 446b30 <feof@plt+0x43e30>
  446b1c:	madd	x11, x11, x15, x14
  446b20:	str	w15, [x12]
  446b24:	str	x10, [x11, #8]
  446b28:	str	w13, [x11, #16]
  446b2c:	b	446b34 <feof@plt+0x43e34>
  446b30:	mov	x12, xzr
  446b34:	str	x12, [x19, #64]
  446b38:	cmp	w8, #0x0
  446b3c:	mov	w8, #0x20                  	// #32
  446b40:	mov	w12, #0x10                  	// #16
  446b44:	add	x10, x9, #0x18
  446b48:	add	x11, x9, #0x8
  446b4c:	csel	x8, x12, x8, eq  // eq = none
  446b50:	ldr	w13, [x19, #72]
  446b54:	ldr	w8, [x9, x8]
  446b58:	ldp	w9, w12, [x19, #40]
  446b5c:	csel	x10, x11, x10, eq  // eq = none
  446b60:	ldr	x10, [x10]
  446b64:	add	w11, w13, w8
  446b68:	sxtw	x9, w9
  446b6c:	cmp	w9, w12
  446b70:	str	w11, [x19, #72]
  446b74:	b.ge	446ba8 <feof@plt+0x43ea8>  // b.tcont
  446b78:	ldr	x11, [x19, #32]
  446b7c:	mov	w12, #0x18                  	// #24
  446b80:	add	w13, w9, #0x1
  446b84:	madd	x0, x9, x12, x11
  446b88:	str	wzr, [x0, #4]
  446b8c:	str	w13, [x19, #40]
  446b90:	cbz	x11, 446ba8 <feof@plt+0x43ea8>
  446b94:	madd	x9, x9, x12, x11
  446b98:	str	w12, [x0]
  446b9c:	str	x10, [x9, #8]
  446ba0:	str	w8, [x9, #16]
  446ba4:	b	446bac <feof@plt+0x43eac>
  446ba8:	mov	x0, xzr
  446bac:	ldr	x8, [x19, #24]
  446bb0:	ldrb	w9, [x8]
  446bb4:	cmp	w9, #0x42
  446bb8:	b.ne	446c6c <feof@plt+0x43f6c>  // b.any
  446bbc:	ldr	x20, [x19, #64]
  446bc0:	mov	w21, #0x18                  	// #24
  446bc4:	mov	w22, #0x4c                  	// #76
  446bc8:	b	446be0 <feof@plt+0x43ee0>
  446bcc:	mov	x0, xzr
  446bd0:	ldr	x8, [x19, #24]
  446bd4:	ldrb	w9, [x8]
  446bd8:	cmp	w9, #0x42
  446bdc:	b.ne	446c3c <feof@plt+0x43f3c>  // b.any
  446be0:	mov	x23, x0
  446be4:	add	x8, x8, #0x1
  446be8:	mov	x0, x19
  446bec:	str	x8, [x19, #24]
  446bf0:	bl	446764 <feof@plt+0x43a64>
  446bf4:	mov	x8, x0
  446bf8:	mov	x0, xzr
  446bfc:	cbz	x23, 446bd0 <feof@plt+0x43ed0>
  446c00:	cbz	x8, 446bd0 <feof@plt+0x43ed0>
  446c04:	ldp	w9, w10, [x19, #40]
  446c08:	sxtw	x9, w9
  446c0c:	cmp	w9, w10
  446c10:	b.ge	446bcc <feof@plt+0x43ecc>  // b.tcont
  446c14:	ldr	x10, [x19, #32]
  446c18:	add	w11, w9, #0x1
  446c1c:	madd	x0, x9, x21, x10
  446c20:	str	wzr, [x0, #4]
  446c24:	str	w11, [x19, #40]
  446c28:	cbz	x10, 446bcc <feof@plt+0x43ecc>
  446c2c:	madd	x9, x9, x21, x10
  446c30:	str	w22, [x0]
  446c34:	stp	x23, x8, [x9, #8]
  446c38:	b	446bd0 <feof@plt+0x43ed0>
  446c3c:	str	x20, [x19, #64]
  446c40:	cbz	x0, 446c6c <feof@plt+0x43f6c>
  446c44:	ldp	w8, w9, [x19, #56]
  446c48:	sxtw	x8, w8
  446c4c:	cmp	w8, w9
  446c50:	b.ge	446c68 <feof@plt+0x43f68>  // b.tcont
  446c54:	ldr	x9, [x19, #48]
  446c58:	add	w10, w8, #0x1
  446c5c:	str	x0, [x9, x8, lsl #3]
  446c60:	str	w10, [x19, #56]
  446c64:	b	446c6c <feof@plt+0x43f6c>
  446c68:	mov	x0, xzr
  446c6c:	ldp	x20, x19, [sp, #48]
  446c70:	ldp	x22, x21, [sp, #32]
  446c74:	ldr	x23, [sp, #16]
  446c78:	ldp	x29, x30, [sp], #64
  446c7c:	ret
  446c80:	add	w8, w12, #0x1
  446c84:	b	4469ac <feof@plt+0x43cac>
  446c88:	stp	x29, x30, [sp, #-64]!
  446c8c:	str	x28, [sp, #16]
  446c90:	stp	x22, x21, [sp, #32]
  446c94:	stp	x20, x19, [sp, #48]
  446c98:	mov	x29, sp
  446c9c:	sub	sp, sp, #0x190
  446ca0:	mov	x19, sp
  446ca4:	add	x8, x19, #0x8
  446ca8:	mov	w21, w0
  446cac:	movi	v0.2d, #0x0
  446cb0:	add	x8, x8, #0x148
  446cb4:	add	x0, x19, #0x8
  446cb8:	mov	x20, x1
  446cbc:	str	xzr, [x19, #264]
  446cc0:	strb	wzr, [x19, #272]
  446cc4:	stp	xzr, xzr, [x19, #296]
  446cc8:	stp	x2, x3, [x19, #280]
  446ccc:	stp	xzr, xzr, [x19, #312]
  446cd0:	str	xzr, [x19, #328]
  446cd4:	stp	q0, q0, [x8]
  446cd8:	str	xzr, [x8, #32]
  446cdc:	bl	449c60 <feof@plt+0x46f60>
  446ce0:	ldr	w8, [x19, #316]
  446ce4:	cmp	w8, #0x7ff
  446ce8:	b.gt	446cf0 <feof@plt+0x43ff0>
  446cec:	str	wzr, [x19, #316]
  446cf0:	ldr	w8, [x19, #356]
  446cf4:	ldr	w9, [x19, #372]
  446cf8:	mov	x22, sp
  446cfc:	str	xzr, [x19, #376]
  446d00:	cmp	w8, #0x1
  446d04:	mul	w9, w9, w8
  446d08:	csinc	w8, w8, wzr, gt
  446d0c:	sub	x8, sp, w8, uxtw #4
  446d10:	str	w9, [x19, #372]
  446d14:	mov	sp, x8
  446d18:	mov	w9, w9
  446d1c:	cmp	w9, #0x1
  446d20:	csinc	w9, w9, wzr, gt
  446d24:	sub	x9, sp, w9, uxtw #4
  446d28:	mov	sp, x9
  446d2c:	str	x8, [x19, #344]
  446d30:	str	x9, [x19, #360]
  446d34:	cbz	x20, 446d50 <feof@plt+0x44050>
  446d38:	ldr	w8, [x20, #4]
  446d3c:	cmp	w8, #0x1
  446d40:	b.gt	446d50 <feof@plt+0x44050>
  446d44:	ldr	w9, [x19, #316]
  446d48:	cmp	w9, #0x401
  446d4c:	b.lt	446d9c <feof@plt+0x4409c>  // b.tstop
  446d50:	mov	w8, #0x1                   	// #1
  446d54:	str	w8, [x19, #312]
  446d58:	mov	sp, x22
  446d5c:	ldr	x8, [x19, #264]
  446d60:	add	x9, x19, #0x8
  446d64:	add	x0, x19, #0x8
  446d68:	strb	wzr, [x9, x8]
  446d6c:	ldp	x8, x2, [x19, #280]
  446d70:	ldr	x1, [x19, #264]
  446d74:	blr	x8
  446d78:	ldr	w8, [x19, #312]
  446d7c:	cmp	w8, #0x0
  446d80:	cset	w0, eq  // eq = none
  446d84:	mov	sp, x29
  446d88:	ldp	x20, x19, [sp, #48]
  446d8c:	ldp	x22, x21, [sp, #32]
  446d90:	ldr	x28, [sp, #16]
  446d94:	ldp	x29, x30, [sp], #64
  446d98:	ret
  446d9c:	add	w8, w8, #0x1
  446da0:	str	w8, [x20, #4]
  446da4:	ldr	x8, [x19, #336]
  446da8:	add	w9, w9, #0x1
  446dac:	sub	x10, x29, #0x10
  446db0:	add	x0, x19, #0x8
  446db4:	mov	w1, w21
  446db8:	mov	x2, x20
  446dbc:	str	w9, [x19, #316]
  446dc0:	stp	x20, x8, [x29, #-16]
  446dc4:	str	x10, [x19, #336]
  446dc8:	bl	449d30 <feof@plt+0x47030>
  446dcc:	ldur	x8, [x29, #-8]
  446dd0:	str	x8, [x19, #336]
  446dd4:	ldr	w8, [x20, #4]
  446dd8:	sub	w8, w8, #0x1
  446ddc:	str	w8, [x20, #4]
  446de0:	ldr	w8, [x19, #316]
  446de4:	sub	w8, w8, #0x1
  446de8:	str	w8, [x19, #316]
  446dec:	b	446d58 <feof@plt+0x44058>
  446df0:	sub	sp, sp, #0x50
  446df4:	stp	x22, x21, [sp, #48]
  446df8:	stp	x20, x19, [sp, #64]
  446dfc:	mov	x19, x3
  446e00:	mov	x20, x1
  446e04:	mov	w21, w0
  446e08:	stp	x29, x30, [sp, #32]
  446e0c:	add	x29, sp, #0x20
  446e10:	stp	xzr, xzr, [sp]
  446e14:	str	wzr, [sp, #24]
  446e18:	str	xzr, [sp, #16]
  446e1c:	cbz	w2, 446e60 <feof@plt+0x44160>
  446e20:	sxtw	x8, w2
  446e24:	mov	w9, #0x2                   	// #2
  446e28:	mov	x22, x9
  446e2c:	cmp	x9, x8
  446e30:	lsl	x9, x9, #1
  446e34:	b.cc	446e28 <feof@plt+0x44128>  // b.lo, b.ul, b.last
  446e38:	mov	x0, x22
  446e3c:	bl	402b60 <malloc@plt>
  446e40:	cbz	x0, 446e50 <feof@plt+0x44150>
  446e44:	str	x0, [sp]
  446e48:	str	x22, [sp, #16]
  446e4c:	b	446e60 <feof@plt+0x44160>
  446e50:	mov	w8, #0x1                   	// #1
  446e54:	stp	xzr, xzr, [sp]
  446e58:	str	xzr, [sp, #16]
  446e5c:	str	w8, [sp, #24]
  446e60:	adrp	x2, 446000 <feof@plt+0x43300>
  446e64:	add	x2, x2, #0xebc
  446e68:	mov	x3, sp
  446e6c:	mov	w0, w21
  446e70:	mov	x1, x20
  446e74:	bl	446c88 <feof@plt+0x43f88>
  446e78:	cbz	w0, 446e98 <feof@plt+0x44198>
  446e7c:	ldr	w8, [sp, #24]
  446e80:	ldr	x9, [sp, #16]
  446e84:	cmp	w8, #0x0
  446e88:	csinc	x8, x9, xzr, eq  // eq = none
  446e8c:	str	x8, [x19]
  446e90:	ldr	x0, [sp]
  446e94:	b	446ea8 <feof@plt+0x441a8>
  446e98:	ldr	x0, [sp]
  446e9c:	bl	402770 <free@plt>
  446ea0:	mov	x0, xzr
  446ea4:	str	xzr, [x19]
  446ea8:	ldp	x20, x19, [sp, #64]
  446eac:	ldp	x22, x21, [sp, #48]
  446eb0:	ldp	x29, x30, [sp, #32]
  446eb4:	add	sp, sp, #0x50
  446eb8:	ret
  446ebc:	stp	x29, x30, [sp, #-48]!
  446ec0:	stp	x22, x21, [sp, #16]
  446ec4:	stp	x20, x19, [sp, #32]
  446ec8:	ldp	x8, x9, [x2, #8]
  446ecc:	mov	x19, x2
  446ed0:	mov	x20, x1
  446ed4:	mov	x21, x0
  446ed8:	add	x8, x1, x8
  446edc:	add	x8, x8, #0x1
  446ee0:	cmp	x8, x9
  446ee4:	mov	x29, sp
  446ee8:	b.ls	446f28 <feof@plt+0x44228>  // b.plast
  446eec:	ldr	w10, [x19, #24]
  446ef0:	cbnz	w10, 446f28 <feof@plt+0x44228>
  446ef4:	cmp	x9, #0x0
  446ef8:	mov	w10, #0x2                   	// #2
  446efc:	csel	x9, x10, x9, eq  // eq = none
  446f00:	mov	x22, x9
  446f04:	cmp	x9, x8
  446f08:	lsl	x9, x9, #1
  446f0c:	b.cc	446f00 <feof@plt+0x44200>  // b.lo, b.ul, b.last
  446f10:	ldr	x0, [x19]
  446f14:	mov	x1, x22
  446f18:	bl	402800 <realloc@plt>
  446f1c:	cbz	x0, 446f6c <feof@plt+0x4426c>
  446f20:	str	x0, [x19]
  446f24:	str	x22, [x19, #16]
  446f28:	ldr	w8, [x19, #24]
  446f2c:	cbnz	w8, 446f5c <feof@plt+0x4425c>
  446f30:	ldp	x8, x9, [x19]
  446f34:	mov	x1, x21
  446f38:	mov	x2, x20
  446f3c:	add	x0, x8, x9
  446f40:	bl	402640 <memcpy@plt>
  446f44:	ldp	x9, x8, [x19]
  446f48:	add	x8, x8, x20
  446f4c:	strb	wzr, [x9, x8]
  446f50:	ldr	x8, [x19, #8]
  446f54:	add	x8, x8, x20
  446f58:	str	x8, [x19, #8]
  446f5c:	ldp	x20, x19, [sp, #32]
  446f60:	ldp	x22, x21, [sp, #16]
  446f64:	ldp	x29, x30, [sp], #48
  446f68:	ret
  446f6c:	ldr	x0, [x19]
  446f70:	bl	402770 <free@plt>
  446f74:	mov	w8, #0x1                   	// #1
  446f78:	stp	xzr, xzr, [x19]
  446f7c:	str	xzr, [x19, #16]
  446f80:	str	w8, [x19, #24]
  446f84:	ldr	w8, [x19, #24]
  446f88:	cbnz	w8, 446f5c <feof@plt+0x4425c>
  446f8c:	b	446f30 <feof@plt+0x44230>
  446f90:	add	x8, x0, x2
  446f94:	lsl	w9, w2, #1
  446f98:	str	w1, [x3, #16]
  446f9c:	str	x0, [x3, #24]
  446fa0:	stp	wzr, w2, [x3, #56]
  446fa4:	stp	xzr, xzr, [x3, #72]
  446fa8:	stp	x0, x8, [x3]
  446fac:	stp	wzr, w9, [x3, #40]
  446fb0:	str	xzr, [x3, #64]
  446fb4:	ret
  446fb8:	sub	sp, sp, #0x30
  446fbc:	adrp	x2, 446000 <feof@plt+0x43300>
  446fc0:	add	x2, x2, #0xebc
  446fc4:	mov	x3, sp
  446fc8:	stp	x29, x30, [sp, #32]
  446fcc:	add	x29, sp, #0x20
  446fd0:	stp	xzr, xzr, [sp]
  446fd4:	str	wzr, [sp, #24]
  446fd8:	str	xzr, [sp, #16]
  446fdc:	bl	447008 <feof@plt+0x44308>
  446fe0:	ldr	x8, [sp]
  446fe4:	cbnz	w0, 446ff4 <feof@plt+0x442f4>
  446fe8:	mov	x0, x8
  446fec:	bl	402770 <free@plt>
  446ff0:	mov	x8, xzr
  446ff4:	ldp	x29, x30, [sp, #32]
  446ff8:	mov	x0, x8
  446ffc:	add	sp, sp, #0x30
  447000:	ret
  447004:	b	447008 <feof@plt+0x44308>
  447008:	stp	x29, x30, [sp, #-96]!
  44700c:	str	x27, [sp, #16]
  447010:	stp	x26, x25, [sp, #32]
  447014:	stp	x24, x23, [sp, #48]
  447018:	stp	x22, x21, [sp, #64]
  44701c:	stp	x20, x19, [sp, #80]
  447020:	mov	x29, sp
  447024:	sub	sp, sp, #0x60
  447028:	ldrb	w8, [x0]
  44702c:	mov	x19, x3
  447030:	mov	x20, x2
  447034:	mov	x22, x0
  447038:	cmp	w8, #0x5f
  44703c:	mov	w21, w1
  447040:	b.ne	447058 <feof@plt+0x44358>  // b.any
  447044:	ldrb	w8, [x22, #1]
  447048:	cmp	w8, #0x5a
  44704c:	b.ne	447058 <feof@plt+0x44358>  // b.any
  447050:	mov	w24, #0x1                   	// #1
  447054:	b	44707c <feof@plt+0x4437c>
  447058:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44705c:	add	x1, x1, #0xc5d
  447060:	mov	w2, #0x8                   	// #8
  447064:	mov	x0, x22
  447068:	bl	402980 <strncmp@plt>
  44706c:	cbz	w0, 447138 <feof@plt+0x44438>
  447070:	mov	w24, wzr
  447074:	mov	w1, wzr
  447078:	tbz	w21, #4, 447278 <feof@plt+0x44578>
  44707c:	mov	x0, x22
  447080:	bl	4026d0 <strlen@plt>
  447084:	add	x8, x22, x0
  447088:	lsl	w27, w0, #1
  44708c:	stur	w21, [x29, #-72]
  447090:	stur	x22, [x29, #-64]
  447094:	stp	wzr, w0, [x29, #-32]
  447098:	stp	xzr, xzr, [x29, #-16]
  44709c:	stp	x22, x8, [x29, #-88]
  4470a0:	stp	wzr, w27, [x29, #-48]
  4470a4:	stur	xzr, [x29, #-24]
  4470a8:	tbnz	w21, #18, 4470b8 <feof@plt+0x443b8>
  4470ac:	cmp	w27, #0x800
  4470b0:	mov	w1, wzr
  4470b4:	b.hi	447278 <feof@plt+0x44578>  // b.pmore
  4470b8:	mov	w8, #0x18                  	// #24
  4470bc:	umull	x8, w27, w8
  4470c0:	add	x8, x8, #0xf
  4470c4:	and	x8, x8, #0x3ffffffff0
  4470c8:	mov	x9, sp
  4470cc:	mov	x26, sp
  4470d0:	sub	x23, x9, x8
  4470d4:	mov	sp, x23
  4470d8:	and	x8, x0, #0xffffffff
  4470dc:	lsl	x8, x8, #3
  4470e0:	add	x8, x8, #0xf
  4470e4:	mov	x9, sp
  4470e8:	and	x8, x8, #0xffffffff0
  4470ec:	sub	x8, x9, x8
  4470f0:	mov	sp, x8
  4470f4:	sub	w9, w24, #0x2
  4470f8:	cmp	w9, #0x2
  4470fc:	stur	x23, [x29, #-56]
  447100:	stur	x8, [x29, #-40]
  447104:	b.cc	447190 <feof@plt+0x44490>  // b.lo, b.ul, b.last
  447108:	sub	x0, x29, #0x58
  44710c:	cmp	w24, #0x1
  447110:	b.eq	447208 <feof@plt+0x44508>  // b.none
  447114:	bl	44523c <feof@plt+0x4253c>
  447118:	mov	x22, x0
  44711c:	tbz	w21, #0, 447250 <feof@plt+0x44550>
  447120:	mov	w1, wzr
  447124:	cbz	x22, 447274 <feof@plt+0x44574>
  447128:	ldur	x8, [x29, #-64]
  44712c:	ldrb	w8, [x8]
  447130:	cbz	w8, 447254 <feof@plt+0x44554>
  447134:	b	447274 <feof@plt+0x44574>
  447138:	ldrb	w8, [x22, #8]
  44713c:	sub	w8, w8, #0x24
  447140:	cmp	w8, #0x3b
  447144:	b.hi	447070 <feof@plt+0x44370>  // b.pmore
  447148:	mov	w9, #0x1                   	// #1
  44714c:	lsl	x8, x9, x8
  447150:	mov	x9, #0x401                 	// #1025
  447154:	movk	x9, #0x800, lsl #48
  447158:	tst	x8, x9
  44715c:	b.eq	447070 <feof@plt+0x44370>  // b.none
  447160:	ldrb	w8, [x22, #9]
  447164:	cmp	w8, #0x49
  447168:	b.eq	447174 <feof@plt+0x44474>  // b.none
  44716c:	cmp	w8, #0x44
  447170:	b.ne	447070 <feof@plt+0x44370>  // b.any
  447174:	ldrb	w9, [x22, #10]
  447178:	cmp	w9, #0x5f
  44717c:	b.ne	447070 <feof@plt+0x44370>  // b.any
  447180:	cmp	w8, #0x49
  447184:	mov	w8, #0x2                   	// #2
  447188:	cinc	w24, w8, ne  // ne = any
  44718c:	b	44707c <feof@plt+0x4437c>
  447190:	add	x25, x22, #0xb
  447194:	stur	x25, [x29, #-64]
  447198:	ldrb	w8, [x22, #11]
  44719c:	cmp	w24, #0x2
  4471a0:	mov	w9, #0x44                  	// #68
  4471a4:	cinc	w24, w9, ne  // ne = any
  4471a8:	cmp	w8, #0x5f
  4471ac:	b.ne	4471d8 <feof@plt+0x444d8>  // b.any
  4471b0:	ldrb	w8, [x22, #12]
  4471b4:	cmp	w8, #0x5a
  4471b8:	b.ne	4471d8 <feof@plt+0x444d8>  // b.any
  4471bc:	add	x8, x22, #0xd
  4471c0:	sub	x0, x29, #0x58
  4471c4:	mov	w1, wzr
  4471c8:	stur	x8, [x29, #-64]
  4471cc:	bl	4440a0 <feof@plt+0x413a0>
  4471d0:	mov	x23, x0
  4471d4:	b	447220 <feof@plt+0x44520>
  4471d8:	mov	x0, x25
  4471dc:	bl	4026d0 <strlen@plt>
  4471e0:	cmp	w27, #0x1
  4471e4:	b.lt	44721c <feof@plt+0x4451c>  // b.tstop
  4471e8:	mov	w8, #0x1                   	// #1
  4471ec:	cmp	w0, #0x1
  4471f0:	str	wzr, [x23, #4]
  4471f4:	stur	w8, [x29, #-48]
  4471f8:	b.lt	44721c <feof@plt+0x4451c>  // b.tstop
  4471fc:	stp	xzr, x25, [x23]
  447200:	str	w0, [x23, #16]
  447204:	b	447220 <feof@plt+0x44520>
  447208:	mov	w1, #0x1                   	// #1
  44720c:	bl	443ee4 <feof@plt+0x411e4>
  447210:	mov	x22, x0
  447214:	tbz	w21, #0, 447250 <feof@plt+0x44550>
  447218:	b	447120 <feof@plt+0x44420>
  44721c:	mov	x23, xzr
  447220:	sub	x0, x29, #0x58
  447224:	mov	w1, w24
  447228:	mov	x2, x23
  44722c:	mov	x3, xzr
  447230:	bl	4466d8 <feof@plt+0x439d8>
  447234:	ldur	x23, [x29, #-64]
  447238:	mov	x22, x0
  44723c:	mov	x0, x23
  447240:	bl	4026d0 <strlen@plt>
  447244:	add	x8, x23, x0
  447248:	stur	x8, [x29, #-64]
  44724c:	tbnz	w21, #0, 447120 <feof@plt+0x44420>
  447250:	cbz	x22, 447270 <feof@plt+0x44570>
  447254:	mov	w0, w21
  447258:	mov	x1, x22
  44725c:	mov	x2, x20
  447260:	mov	x3, x19
  447264:	bl	446c88 <feof@plt+0x43f88>
  447268:	mov	w1, w0
  44726c:	b	447274 <feof@plt+0x44574>
  447270:	mov	w1, wzr
  447274:	mov	sp, x26
  447278:	mov	w0, w1
  44727c:	mov	sp, x29
  447280:	ldp	x20, x19, [sp, #80]
  447284:	ldp	x22, x21, [sp, #64]
  447288:	ldp	x24, x23, [sp, #48]
  44728c:	ldp	x26, x25, [sp, #32]
  447290:	ldr	x27, [sp, #16]
  447294:	ldp	x29, x30, [sp], #96
  447298:	ret
  44729c:	sub	sp, sp, #0x30
  4472a0:	adrp	x2, 446000 <feof@plt+0x43300>
  4472a4:	add	x2, x2, #0xebc
  4472a8:	mov	x3, sp
  4472ac:	mov	w1, #0x25                  	// #37
  4472b0:	stp	x29, x30, [sp, #32]
  4472b4:	add	x29, sp, #0x20
  4472b8:	stp	xzr, xzr, [sp]
  4472bc:	str	wzr, [sp, #24]
  4472c0:	str	xzr, [sp, #16]
  4472c4:	bl	447008 <feof@plt+0x44308>
  4472c8:	ldr	x8, [sp]
  4472cc:	cbnz	w0, 4472dc <feof@plt+0x445dc>
  4472d0:	mov	x0, x8
  4472d4:	bl	402770 <free@plt>
  4472d8:	mov	x8, xzr
  4472dc:	ldp	x29, x30, [sp, #32]
  4472e0:	mov	x0, x8
  4472e4:	add	sp, sp, #0x30
  4472e8:	ret
  4472ec:	mov	x3, x2
  4472f0:	mov	x2, x1
  4472f4:	mov	w1, #0x25                  	// #37
  4472f8:	b	447008 <feof@plt+0x44308>
  4472fc:	sub	sp, sp, #0x20
  447300:	stp	x29, x30, [sp, #16]
  447304:	add	x29, sp, #0x10
  447308:	sub	x1, x29, #0x4
  44730c:	add	x2, sp, #0x8
  447310:	bl	44732c <feof@plt+0x4462c>
  447314:	ldur	w8, [x29, #-4]
  447318:	ldp	x29, x30, [sp, #16]
  44731c:	cmp	w0, #0x0
  447320:	csel	w0, wzr, w8, eq  // eq = none
  447324:	add	sp, sp, #0x20
  447328:	ret
  44732c:	stp	x29, x30, [sp, #-48]!
  447330:	stp	x22, x21, [sp, #16]
  447334:	stp	x20, x19, [sp, #32]
  447338:	mov	x29, sp
  44733c:	sub	sp, sp, #0x60
  447340:	mov	x19, x2
  447344:	mov	x20, x1
  447348:	mov	x21, x0
  44734c:	str	wzr, [x1]
  447350:	str	wzr, [x2]
  447354:	bl	4026d0 <strlen@plt>
  447358:	add	x8, x21, x0
  44735c:	stp	x21, x8, [x29, #-88]
  447360:	mov	w8, #0x4000                	// #16384
  447364:	stur	w8, [x29, #-72]
  447368:	lsl	w8, w0, #1
  44736c:	mov	x9, sp
  447370:	mov	w10, #0x18                  	// #24
  447374:	mov	x22, sp
  447378:	stp	wzr, w8, [x29, #-48]
  44737c:	umsubl	x8, w8, w10, x9
  447380:	stur	x21, [x29, #-64]
  447384:	stp	wzr, w0, [x29, #-32]
  447388:	stp	xzr, xzr, [x29, #-16]
  44738c:	stur	xzr, [x29, #-24]
  447390:	mov	sp, x8
  447394:	and	x9, x0, #0xffffffff
  447398:	lsl	x9, x9, #3
  44739c:	add	x9, x9, #0xf
  4473a0:	mov	x10, sp
  4473a4:	and	x9, x9, #0xffffffff0
  4473a8:	sub	x9, x10, x9
  4473ac:	mov	sp, x9
  4473b0:	sub	x0, x29, #0x58
  4473b4:	mov	w1, #0x1                   	// #1
  4473b8:	stur	x8, [x29, #-56]
  4473bc:	stur	x9, [x29, #-40]
  4473c0:	bl	443ee4 <feof@plt+0x411e4>
  4473c4:	cbz	x0, 447410 <feof@plt+0x44710>
  4473c8:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4473cc:	add	x9, x9, #0xac0
  4473d0:	b	4473e0 <feof@plt+0x446e0>
  4473d4:	add	x8, x0, #0x8
  4473d8:	ldr	x0, [x8]
  4473dc:	cbz	x0, 447410 <feof@plt+0x44710>
  4473e0:	ldr	w8, [x0]
  4473e4:	sub	w10, w8, #0x1
  4473e8:	cmp	w10, #0x7
  4473ec:	mov	w8, wzr
  4473f0:	b.hi	447414 <feof@plt+0x44714>  // b.pmore
  4473f4:	adr	x11, 4473d4 <feof@plt+0x446d4>
  4473f8:	ldrb	w12, [x9, x10]
  4473fc:	add	x11, x11, x12, lsl #2
  447400:	br	x11
  447404:	add	x8, x0, #0x10
  447408:	ldr	x0, [x8]
  44740c:	cbnz	x0, 4473e0 <feof@plt+0x446e0>
  447410:	mov	w8, wzr
  447414:	mov	sp, x22
  447418:	mov	w0, w8
  44741c:	mov	sp, x29
  447420:	ldp	x20, x19, [sp, #32]
  447424:	ldp	x22, x21, [sp, #16]
  447428:	ldp	x29, x30, [sp], #48
  44742c:	ret
  447430:	ldr	w8, [x0, #8]
  447434:	str	w8, [x20]
  447438:	mov	w8, #0x1                   	// #1
  44743c:	b	447414 <feof@plt+0x44714>
  447440:	ldr	w8, [x0, #8]
  447444:	str	w8, [x19]
  447448:	mov	w8, #0x1                   	// #1
  44744c:	b	447414 <feof@plt+0x44714>
  447450:	sub	sp, sp, #0x20
  447454:	stp	x29, x30, [sp, #16]
  447458:	add	x29, sp, #0x10
  44745c:	sub	x1, x29, #0x4
  447460:	add	x2, sp, #0x8
  447464:	bl	44732c <feof@plt+0x4462c>
  447468:	ldr	w8, [sp, #8]
  44746c:	ldp	x29, x30, [sp, #16]
  447470:	cmp	w0, #0x0
  447474:	csel	w0, wzr, w8, eq  // eq = none
  447478:	add	sp, sp, #0x20
  44747c:	ret
  447480:	sub	sp, sp, #0x40
  447484:	stp	x29, x30, [sp, #16]
  447488:	stp	x22, x21, [sp, #32]
  44748c:	stp	x20, x19, [sp, #48]
  447490:	mov	x22, x0
  447494:	ldr	x9, [x22, #24]!
  447498:	mov	x19, x0
  44749c:	add	x29, sp, #0x10
  4474a0:	ldrb	w8, [x9]
  4474a4:	sub	w8, w8, #0x4e
  4474a8:	cmp	w8, #0xc
  4474ac:	b.hi	447540 <feof@plt+0x44840>  // b.pmore
  4474b0:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4474b4:	add	x10, x10, #0xac8
  4474b8:	adr	x11, 4474c8 <feof@plt+0x447c8>
  4474bc:	ldrb	w12, [x10, x8]
  4474c0:	add	x11, x11, x12, lsl #2
  4474c4:	br	x11
  4474c8:	add	x8, x9, #0x1
  4474cc:	add	x1, sp, #0x8
  4474d0:	mov	w2, #0x1                   	// #1
  4474d4:	mov	x0, x19
  4474d8:	str	x8, [x19, #24]
  4474dc:	bl	4462cc <feof@plt+0x435cc>
  4474e0:	cbz	x0, 447c14 <feof@plt+0x44f14>
  4474e4:	ldr	x8, [x22]
  4474e8:	mov	x20, x0
  4474ec:	ldrb	w9, [x8]
  4474f0:	cmp	w9, #0x52
  4474f4:	b.eq	447500 <feof@plt+0x44800>  // b.none
  4474f8:	cmp	w9, #0x4f
  4474fc:	b.ne	447764 <feof@plt+0x44a64>  // b.any
  447500:	ldr	w10, [x19, #72]
  447504:	cmp	w9, #0x52
  447508:	mov	w9, #0x2                   	// #2
  44750c:	mov	w11, #0x1f                  	// #31
  447510:	cinc	w9, w9, ne  // ne = any
  447514:	add	x8, x8, #0x1
  447518:	cinc	w1, w11, ne  // ne = any
  44751c:	add	w9, w10, w9
  447520:	mov	x0, x19
  447524:	mov	x2, xzr
  447528:	mov	x3, xzr
  44752c:	str	w9, [x19, #72]
  447530:	str	x8, [x19, #24]
  447534:	bl	4466d8 <feof@plt+0x439d8>
  447538:	mov	x21, x0
  44753c:	b	447768 <feof@plt+0x44a68>
  447540:	mov	x0, x19
  447544:	bl	447e7c <feof@plt+0x4517c>
  447548:	ldr	x8, [x19, #24]
  44754c:	mov	x21, x0
  447550:	ldrb	w8, [x8]
  447554:	cmp	w8, #0x49
  447558:	b.ne	447c18 <feof@plt+0x44f18>  // b.any
  44755c:	cbz	x21, 447c18 <feof@plt+0x44f18>
  447560:	ldp	w8, w9, [x19, #56]
  447564:	sxtw	x8, w8
  447568:	cmp	w8, w9
  44756c:	b.ge	447c14 <feof@plt+0x44f14>  // b.tcont
  447570:	ldr	x9, [x19, #48]
  447574:	str	x21, [x9, x8, lsl #3]
  447578:	ldr	x9, [x19, #24]
  44757c:	add	w8, w8, #0x1
  447580:	str	w8, [x19, #56]
  447584:	ldrb	w8, [x9]
  447588:	sub	w8, w8, #0x49
  44758c:	cmp	w8, #0x1
  447590:	b.hi	447c14 <feof@plt+0x44f14>  // b.pmore
  447594:	add	x8, x9, #0x1
  447598:	mov	x0, x19
  44759c:	str	x8, [x19, #24]
  4475a0:	bl	448b68 <feof@plt+0x45e68>
  4475a4:	cbz	x0, 447c14 <feof@plt+0x44f14>
  4475a8:	ldp	w8, w9, [x19, #40]
  4475ac:	sxtw	x8, w8
  4475b0:	cmp	w8, w9
  4475b4:	b.ge	447c14 <feof@plt+0x44f14>  // b.tcont
  4475b8:	ldr	x9, [x19, #32]
  4475bc:	mov	w10, #0x18                  	// #24
  4475c0:	add	w11, w8, #0x1
  4475c4:	madd	x10, x8, x10, x9
  4475c8:	str	wzr, [x10, #4]
  4475cc:	str	w11, [x19, #40]
  4475d0:	cbz	x9, 447c14 <feof@plt+0x44f14>
  4475d4:	mov	w12, #0x18                  	// #24
  4475d8:	mov	w11, #0x4                   	// #4
  4475dc:	madd	x8, x8, x12, x9
  4475e0:	str	w11, [x10]
  4475e4:	stp	x21, x0, [x8, #8]
  4475e8:	mov	x21, x10
  4475ec:	b	447c18 <feof@plt+0x44f18>
  4475f0:	ldrb	w8, [x9, #1]
  4475f4:	cmp	w8, #0x74
  4475f8:	b.ne	4476f0 <feof@plt+0x449f0>  // b.any
  4475fc:	ldp	w8, w10, [x19, #40]
  447600:	add	x9, x9, #0x2
  447604:	sxtw	x8, w8
  447608:	str	x9, [x19, #24]
  44760c:	cmp	w8, w10
  447610:	b.ge	447708 <feof@plt+0x44a08>  // b.tcont
  447614:	ldr	x9, [x19, #32]
  447618:	mov	w10, #0x18                  	// #24
  44761c:	add	w11, w8, #0x1
  447620:	madd	x21, x8, x10, x9
  447624:	str	wzr, [x21, #4]
  447628:	str	w11, [x19, #40]
  44762c:	cbz	x9, 447708 <feof@plt+0x44a08>
  447630:	mov	w10, #0x18                  	// #24
  447634:	adrp	x11, 466000 <_obstack_memory_used@@Base+0x10dd8>
  447638:	add	x11, x11, #0xc59
  44763c:	mov	w12, #0x3                   	// #3
  447640:	madd	x8, x8, x10, x9
  447644:	str	xzr, [x21]
  447648:	str	x11, [x8, #8]
  44764c:	str	w12, [x8, #16]
  447650:	b	44770c <feof@plt+0x44a0c>
  447654:	mov	x0, x19
  447658:	ldp	x20, x19, [sp, #48]
  44765c:	ldp	x22, x21, [sp, #32]
  447660:	ldp	x29, x30, [sp, #16]
  447664:	add	sp, sp, #0x40
  447668:	b	447e7c <feof@plt+0x4517c>
  44766c:	add	x8, x9, #0x1
  447670:	mov	x0, x19
  447674:	mov	w1, wzr
  447678:	str	x8, [x19, #24]
  44767c:	bl	4440a0 <feof@plt+0x413a0>
  447680:	cbz	x0, 447c14 <feof@plt+0x44f14>
  447684:	ldr	x11, [x22]
  447688:	ldrb	w8, [x11]
  44768c:	cmp	w8, #0x45
  447690:	b.ne	447c14 <feof@plt+0x44f14>  // b.any
  447694:	add	x8, x11, #0x1
  447698:	str	x8, [x22]
  44769c:	ldrb	w8, [x11, #1]
  4476a0:	mov	x20, x0
  4476a4:	cmp	w8, #0x64
  4476a8:	b.eq	447864 <feof@plt+0x44b64>  // b.none
  4476ac:	cmp	w8, #0x73
  4476b0:	b.ne	447890 <feof@plt+0x44b90>  // b.any
  4476b4:	add	x8, x11, #0x2
  4476b8:	str	x8, [x22]
  4476bc:	ldrb	w8, [x11, #2]
  4476c0:	cmp	w8, #0x5f
  4476c4:	b.ne	447a28 <feof@plt+0x44d28>  // b.any
  4476c8:	add	x10, x11, #0x3
  4476cc:	str	x10, [x22]
  4476d0:	ldrb	w9, [x11, #3]
  4476d4:	cmp	w9, #0x5f
  4476d8:	b.ne	447964 <feof@plt+0x44c64>  // b.any
  4476dc:	add	x10, x11, #0x4
  4476e0:	str	x10, [x22]
  4476e4:	ldrb	w9, [x11, #4]
  4476e8:	mov	w8, #0x2                   	// #2
  4476ec:	b	447968 <feof@plt+0x44c68>
  4476f0:	mov	x0, x19
  4476f4:	mov	w1, wzr
  4476f8:	bl	44695c <feof@plt+0x43c5c>
  4476fc:	mov	x20, x0
  447700:	mov	w8, #0x1                   	// #1
  447704:	b	4477bc <feof@plt+0x44abc>
  447708:	mov	x21, xzr
  44770c:	mov	x0, x19
  447710:	bl	447e7c <feof@plt+0x4517c>
  447714:	mov	x20, xzr
  447718:	cbz	x21, 4477ac <feof@plt+0x44aac>
  44771c:	cbz	x0, 4477ac <feof@plt+0x44aac>
  447720:	ldp	w8, w9, [x19, #40]
  447724:	sxtw	x8, w8
  447728:	cmp	w8, w9
  44772c:	b.ge	4477a8 <feof@plt+0x44aa8>  // b.tcont
  447730:	ldr	x9, [x19, #32]
  447734:	mov	w10, #0x18                  	// #24
  447738:	add	w11, w8, #0x1
  44773c:	madd	x20, x8, x10, x9
  447740:	str	wzr, [x20, #4]
  447744:	str	w11, [x19, #40]
  447748:	cbz	x9, 4477a8 <feof@plt+0x44aa8>
  44774c:	mov	w11, #0x18                  	// #24
  447750:	mov	w10, #0x1                   	// #1
  447754:	madd	x8, x8, x11, x9
  447758:	str	w10, [x20]
  44775c:	stp	x21, x0, [x8, #8]
  447760:	b	4477ac <feof@plt+0x44aac>
  447764:	mov	x21, xzr
  447768:	mov	x0, x19
  44776c:	bl	448588 <feof@plt+0x45888>
  447770:	str	x0, [x20]
  447774:	cbz	x0, 447c14 <feof@plt+0x44f14>
  447778:	cbz	x21, 447788 <feof@plt+0x44a88>
  44777c:	ldr	x8, [sp, #8]
  447780:	str	x8, [x21, #8]
  447784:	str	x21, [sp, #8]
  447788:	ldr	x8, [x22]
  44778c:	ldrb	w9, [x8]
  447790:	cmp	w9, #0x45
  447794:	b.ne	447c14 <feof@plt+0x44f14>  // b.any
  447798:	add	x8, x8, #0x1
  44779c:	str	x8, [x22]
  4477a0:	ldr	x21, [sp, #8]
  4477a4:	b	447c18 <feof@plt+0x44f18>
  4477a8:	mov	x20, xzr
  4477ac:	ldr	w9, [x19, #72]
  4477b0:	mov	w8, wzr
  4477b4:	add	w9, w9, #0x3
  4477b8:	str	w9, [x19, #72]
  4477bc:	ldr	x9, [x22]
  4477c0:	ldrb	w10, [x9]
  4477c4:	cmp	w10, #0x49
  4477c8:	b.ne	447820 <feof@plt+0x44b20>  // b.any
  4477cc:	cbz	w8, 447828 <feof@plt+0x44b28>
  4477d0:	add	x8, x9, #0x1
  4477d4:	mov	x0, x19
  4477d8:	str	x8, [x19, #24]
  4477dc:	bl	448b68 <feof@plt+0x45e68>
  4477e0:	mov	x21, xzr
  4477e4:	cbz	x20, 447c18 <feof@plt+0x44f18>
  4477e8:	cbz	x0, 447c18 <feof@plt+0x44f18>
  4477ec:	ldp	w8, w9, [x19, #40]
  4477f0:	sxtw	x8, w8
  4477f4:	cmp	w8, w9
  4477f8:	b.ge	447c14 <feof@plt+0x44f14>  // b.tcont
  4477fc:	ldr	x9, [x19, #32]
  447800:	mov	w10, #0x18                  	// #24
  447804:	add	w11, w8, #0x1
  447808:	madd	x21, x8, x10, x9
  44780c:	str	wzr, [x21, #4]
  447810:	str	w11, [x19, #40]
  447814:	cbz	x9, 447c14 <feof@plt+0x44f14>
  447818:	mov	w10, #0x4                   	// #4
  44781c:	b	447c00 <feof@plt+0x44f00>
  447820:	mov	x21, x20
  447824:	b	447c18 <feof@plt+0x44f18>
  447828:	cbz	x20, 447c14 <feof@plt+0x44f14>
  44782c:	ldp	w8, w9, [x19, #56]
  447830:	sxtw	x8, w8
  447834:	cmp	w8, w9
  447838:	b.ge	447c14 <feof@plt+0x44f14>  // b.tcont
  44783c:	ldr	x9, [x19, #48]
  447840:	str	x20, [x9, x8, lsl #3]
  447844:	ldr	x9, [x19, #24]
  447848:	add	w8, w8, #0x1
  44784c:	str	w8, [x19, #56]
  447850:	ldrb	w8, [x9]
  447854:	sub	w8, w8, #0x49
  447858:	cmp	w8, #0x1
  44785c:	b.ls	4477d0 <feof@plt+0x44ad0>  // b.plast
  447860:	b	447c14 <feof@plt+0x44f14>
  447864:	add	x9, x11, #0x2
  447868:	str	x9, [x22]
  44786c:	ldrb	w8, [x11, #2]
  447870:	cmp	w8, #0x6e
  447874:	b.eq	447c14 <feof@plt+0x44f14>  // b.none
  447878:	cmp	w8, #0x5f
  44787c:	b.ne	4478ec <feof@plt+0x44bec>  // b.any
  447880:	mov	w21, wzr
  447884:	add	x8, x11, #0x3
  447888:	str	x8, [x22]
  44788c:	b	447894 <feof@plt+0x44b94>
  447890:	mov	w21, #0xffffffff            	// #-1
  447894:	mov	x0, x19
  447898:	bl	447480 <feof@plt+0x44780>
  44789c:	cbz	x0, 447b58 <feof@plt+0x44e58>
  4478a0:	ldr	w8, [x0]
  4478a4:	cmp	w8, #0x46
  4478a8:	b.eq	447b58 <feof@plt+0x44e58>  // b.none
  4478ac:	cmp	w8, #0x48
  4478b0:	b.eq	447b58 <feof@plt+0x44e58>  // b.none
  4478b4:	ldr	x8, [x22]
  4478b8:	ldrb	w9, [x8]
  4478bc:	cmp	w9, #0x5f
  4478c0:	b.ne	447b58 <feof@plt+0x44e58>  // b.any
  4478c4:	add	x10, x8, #0x1
  4478c8:	str	x10, [x22]
  4478cc:	ldrb	w9, [x8, #1]
  4478d0:	cmp	w9, #0x5f
  4478d4:	b.ne	447a94 <feof@plt+0x44d94>  // b.any
  4478d8:	add	x10, x8, #0x2
  4478dc:	str	x10, [x22]
  4478e0:	ldrb	w9, [x8, #2]
  4478e4:	mov	w8, #0x2                   	// #2
  4478e8:	b	447a98 <feof@plt+0x44d98>
  4478ec:	sub	w10, w8, #0x30
  4478f0:	cmp	w10, #0x9
  4478f4:	b.hi	447a78 <feof@plt+0x44d78>  // b.pmore
  4478f8:	mov	w12, #0x2f                  	// #47
  4478fc:	add	x9, x11, #0x3
  447900:	mov	w11, #0x6667                	// #26215
  447904:	mov	w10, wzr
  447908:	movk	w12, #0x8000, lsl #16
  44790c:	movk	w11, #0x6666, lsl #16
  447910:	mov	w13, #0xa                   	// #10
  447914:	and	w14, w8, #0xff
  447918:	sub	w8, w12, w14
  44791c:	smull	x8, w8, w11
  447920:	lsr	x15, x8, #63
  447924:	asr	x8, x8, #34
  447928:	add	w8, w8, w15
  44792c:	cmp	w10, w8
  447930:	b.gt	447c14 <feof@plt+0x44f14>
  447934:	str	x9, [x22]
  447938:	ldrb	w8, [x9], #1
  44793c:	madd	w10, w10, w13, w14
  447940:	sub	w10, w10, #0x30
  447944:	sub	w14, w8, #0x30
  447948:	cmp	w14, #0xa
  44794c:	b.cc	447914 <feof@plt+0x44c14>  // b.lo, b.ul, b.last
  447950:	cmn	w10, #0x1
  447954:	b.lt	447c14 <feof@plt+0x44f14>  // b.tstop
  447958:	add	w21, w10, #0x1
  44795c:	sub	x9, x9, #0x1
  447960:	b	447a7c <feof@plt+0x44d7c>
  447964:	mov	w8, #0x1                   	// #1
  447968:	cmp	w9, #0x6e
  44796c:	b.ne	447988 <feof@plt+0x44c88>  // b.any
  447970:	add	x12, x10, #0x1
  447974:	str	x12, [x22]
  447978:	ldrb	w9, [x10, #1]
  44797c:	mov	w11, #0x1                   	// #1
  447980:	mov	x10, x12
  447984:	b	44798c <feof@plt+0x44c8c>
  447988:	mov	w11, wzr
  44798c:	sub	w12, w9, #0x30
  447990:	cmp	w12, #0x9
  447994:	b.hi	4479f8 <feof@plt+0x44cf8>  // b.pmore
  447998:	mov	w13, #0x2f                  	// #47
  44799c:	mov	w14, #0x6667                	// #26215
  4479a0:	mov	w12, wzr
  4479a4:	movk	w13, #0x8000, lsl #16
  4479a8:	add	x10, x10, #0x1
  4479ac:	movk	w14, #0x6666, lsl #16
  4479b0:	mov	w15, #0xa                   	// #10
  4479b4:	and	w16, w9, #0xff
  4479b8:	sub	w9, w13, w16
  4479bc:	smull	x9, w9, w14
  4479c0:	lsr	x17, x9, #63
  4479c4:	asr	x9, x9, #34
  4479c8:	add	w9, w9, w17
  4479cc:	cmp	w12, w9
  4479d0:	b.gt	447c14 <feof@plt+0x44f14>
  4479d4:	str	x10, [x22]
  4479d8:	ldrb	w9, [x10], #1
  4479dc:	madd	w12, w12, w15, w16
  4479e0:	sub	w12, w12, #0x30
  4479e4:	sub	w16, w9, #0x30
  4479e8:	cmp	w16, #0xa
  4479ec:	b.cc	4479b4 <feof@plt+0x44cb4>  // b.lo, b.ul, b.last
  4479f0:	sub	x10, x10, #0x1
  4479f4:	b	4479fc <feof@plt+0x44cfc>
  4479f8:	mov	w12, wzr
  4479fc:	cmp	w11, #0x0
  447a00:	cneg	w11, w12, ne  // ne = any
  447a04:	tbnz	w11, #31, 447c14 <feof@plt+0x44f14>
  447a08:	cmp	w8, #0x2
  447a0c:	b.cc	447a28 <feof@plt+0x44d28>  // b.lo, b.ul, b.last
  447a10:	cmp	w11, #0xa
  447a14:	b.lt	447a28 <feof@plt+0x44d28>  // b.tstop
  447a18:	cmp	w9, #0x5f
  447a1c:	b.ne	447c14 <feof@plt+0x44f14>  // b.any
  447a20:	add	x8, x10, #0x1
  447a24:	str	x8, [x22]
  447a28:	ldp	w8, w9, [x19, #40]
  447a2c:	sxtw	x8, w8
  447a30:	cmp	w8, w9
  447a34:	b.ge	447ba8 <feof@plt+0x44ea8>  // b.tcont
  447a38:	ldr	x9, [x19, #32]
  447a3c:	mov	w10, #0x18                  	// #24
  447a40:	add	w11, w8, #0x1
  447a44:	madd	x0, x8, x10, x9
  447a48:	str	wzr, [x0, #4]
  447a4c:	str	w11, [x19, #40]
  447a50:	cbz	x9, 447ba8 <feof@plt+0x44ea8>
  447a54:	mov	w10, #0x18                  	// #24
  447a58:	adrp	x11, 460000 <_obstack_memory_used@@Base+0xadd8>
  447a5c:	add	x11, x11, #0xe6b
  447a60:	mov	w12, #0xe                   	// #14
  447a64:	madd	x8, x8, x10, x9
  447a68:	str	xzr, [x0]
  447a6c:	str	x11, [x8, #8]
  447a70:	str	w12, [x8, #16]
  447a74:	b	447bac <feof@plt+0x44eac>
  447a78:	mov	w21, #0x1                   	// #1
  447a7c:	cmp	w8, #0x5f
  447a80:	b.ne	447c14 <feof@plt+0x44f14>  // b.any
  447a84:	add	x8, x9, #0x1
  447a88:	str	x8, [x22]
  447a8c:	tbz	w21, #31, 447894 <feof@plt+0x44b94>
  447a90:	b	447c14 <feof@plt+0x44f14>
  447a94:	mov	w8, #0x1                   	// #1
  447a98:	cmp	w9, #0x6e
  447a9c:	b.ne	447ab8 <feof@plt+0x44db8>  // b.any
  447aa0:	add	x12, x10, #0x1
  447aa4:	str	x12, [x22]
  447aa8:	ldrb	w9, [x10, #1]
  447aac:	mov	w11, #0x1                   	// #1
  447ab0:	mov	x10, x12
  447ab4:	b	447abc <feof@plt+0x44dbc>
  447ab8:	mov	w11, wzr
  447abc:	sub	w12, w9, #0x30
  447ac0:	cmp	w12, #0x9
  447ac4:	b.hi	447b28 <feof@plt+0x44e28>  // b.pmore
  447ac8:	mov	w13, #0x2f                  	// #47
  447acc:	mov	w14, #0x6667                	// #26215
  447ad0:	mov	w12, wzr
  447ad4:	movk	w13, #0x8000, lsl #16
  447ad8:	add	x10, x10, #0x1
  447adc:	movk	w14, #0x6666, lsl #16
  447ae0:	mov	w15, #0xa                   	// #10
  447ae4:	and	w16, w9, #0xff
  447ae8:	sub	w9, w13, w16
  447aec:	smull	x9, w9, w14
  447af0:	lsr	x17, x9, #63
  447af4:	asr	x9, x9, #34
  447af8:	add	w9, w9, w17
  447afc:	cmp	w12, w9
  447b00:	b.gt	447c14 <feof@plt+0x44f14>
  447b04:	str	x10, [x22]
  447b08:	ldrb	w9, [x10], #1
  447b0c:	madd	w12, w12, w15, w16
  447b10:	sub	w12, w12, #0x30
  447b14:	sub	w16, w9, #0x30
  447b18:	cmp	w16, #0xa
  447b1c:	b.cc	447ae4 <feof@plt+0x44de4>  // b.lo, b.ul, b.last
  447b20:	sub	x10, x10, #0x1
  447b24:	b	447b2c <feof@plt+0x44e2c>
  447b28:	mov	w12, wzr
  447b2c:	cmp	w11, #0x0
  447b30:	cneg	w11, w12, ne  // ne = any
  447b34:	tbnz	w11, #31, 447c14 <feof@plt+0x44f14>
  447b38:	cmp	w8, #0x2
  447b3c:	b.cc	447b58 <feof@plt+0x44e58>  // b.lo, b.ul, b.last
  447b40:	cmp	w11, #0xa
  447b44:	b.lt	447b58 <feof@plt+0x44e58>  // b.tstop
  447b48:	cmp	w9, #0x5f
  447b4c:	b.ne	447c14 <feof@plt+0x44f14>  // b.any
  447b50:	add	x8, x10, #0x1
  447b54:	str	x8, [x22]
  447b58:	tbnz	w21, #31, 447bac <feof@plt+0x44eac>
  447b5c:	ldp	w8, w9, [x19, #40]
  447b60:	sxtw	x8, w8
  447b64:	cmp	w8, w9
  447b68:	b.ge	447ba8 <feof@plt+0x44ea8>  // b.tcont
  447b6c:	ldr	x9, [x19, #32]
  447b70:	mov	w10, #0x18                  	// #24
  447b74:	add	w11, w8, #0x1
  447b78:	madd	x10, x8, x10, x9
  447b7c:	str	wzr, [x10, #4]
  447b80:	str	w11, [x19, #40]
  447b84:	cbz	x9, 447ba8 <feof@plt+0x44ea8>
  447b88:	mov	w12, #0x18                  	// #24
  447b8c:	mov	w11, #0x47                  	// #71
  447b90:	madd	x8, x8, x12, x9
  447b94:	str	w11, [x10]
  447b98:	str	x0, [x8, #8]
  447b9c:	mov	x0, x10
  447ba0:	str	w21, [x8, #16]
  447ba4:	b	447bac <feof@plt+0x44eac>
  447ba8:	mov	x0, xzr
  447bac:	ldr	w8, [x20]
  447bb0:	cmp	w8, #0x3
  447bb4:	b.ne	447bcc <feof@plt+0x44ecc>  // b.any
  447bb8:	ldr	x8, [x20, #16]
  447bbc:	ldr	w9, [x8]
  447bc0:	cmp	w9, #0x29
  447bc4:	b.ne	447bcc <feof@plt+0x44ecc>  // b.any
  447bc8:	str	xzr, [x8, #8]
  447bcc:	cbz	x0, 447c14 <feof@plt+0x44f14>
  447bd0:	ldp	w8, w9, [x19, #40]
  447bd4:	sxtw	x8, w8
  447bd8:	cmp	w8, w9
  447bdc:	b.ge	447c14 <feof@plt+0x44f14>  // b.tcont
  447be0:	ldr	x9, [x19, #32]
  447be4:	mov	w10, #0x18                  	// #24
  447be8:	add	w11, w8, #0x1
  447bec:	madd	x21, x8, x10, x9
  447bf0:	str	wzr, [x21, #4]
  447bf4:	str	w11, [x19, #40]
  447bf8:	cbz	x9, 447c14 <feof@plt+0x44f14>
  447bfc:	mov	w10, #0x2                   	// #2
  447c00:	mov	w11, #0x18                  	// #24
  447c04:	madd	x8, x8, x11, x9
  447c08:	str	w10, [x21]
  447c0c:	stp	x20, x0, [x8, #8]
  447c10:	b	447c18 <feof@plt+0x44f18>
  447c14:	mov	x21, xzr
  447c18:	mov	x0, x21
  447c1c:	ldp	x20, x19, [sp, #48]
  447c20:	ldp	x22, x21, [sp, #32]
  447c24:	ldp	x29, x30, [sp, #16]
  447c28:	add	sp, sp, #0x40
  447c2c:	ret
  447c30:	stp	x29, x30, [sp, #-32]!
  447c34:	stp	x20, x19, [sp, #16]
  447c38:	ldr	x8, [x0, #24]
  447c3c:	mov	x19, x0
  447c40:	mov	x29, sp
  447c44:	ldrb	w9, [x8]
  447c48:	sub	w10, w9, #0x49
  447c4c:	cmp	w10, #0x2
  447c50:	b.cc	447ca0 <feof@plt+0x44fa0>  // b.lo, b.ul, b.last
  447c54:	cmp	w9, #0x4c
  447c58:	b.eq	447cb8 <feof@plt+0x44fb8>  // b.none
  447c5c:	cmp	w9, #0x58
  447c60:	b.ne	447cc8 <feof@plt+0x44fc8>  // b.any
  447c64:	ldr	w20, [x19, #76]
  447c68:	add	x8, x8, #0x1
  447c6c:	str	x8, [x19, #24]
  447c70:	mov	w8, #0x1                   	// #1
  447c74:	mov	x0, x19
  447c78:	str	w8, [x19, #76]
  447c7c:	bl	448c84 <feof@plt+0x45f84>
  447c80:	ldr	x8, [x19, #24]
  447c84:	str	w20, [x19, #76]
  447c88:	ldrb	w9, [x8]
  447c8c:	cmp	w9, #0x45
  447c90:	b.ne	447cd8 <feof@plt+0x44fd8>  // b.any
  447c94:	add	x8, x8, #0x1
  447c98:	str	x8, [x19, #24]
  447c9c:	b	447cdc <feof@plt+0x44fdc>
  447ca0:	add	x8, x8, #0x1
  447ca4:	str	x8, [x19, #24]
  447ca8:	mov	x0, x19
  447cac:	ldp	x20, x19, [sp, #16]
  447cb0:	ldp	x29, x30, [sp], #32
  447cb4:	b	448b68 <feof@plt+0x45e68>
  447cb8:	mov	x0, x19
  447cbc:	ldp	x20, x19, [sp, #16]
  447cc0:	ldp	x29, x30, [sp], #32
  447cc4:	b	447ce8 <feof@plt+0x44fe8>
  447cc8:	mov	x0, x19
  447ccc:	ldp	x20, x19, [sp, #16]
  447cd0:	ldp	x29, x30, [sp], #32
  447cd4:	b	44523c <feof@plt+0x4253c>
  447cd8:	mov	x0, xzr
  447cdc:	ldp	x20, x19, [sp, #16]
  447ce0:	ldp	x29, x30, [sp], #32
  447ce4:	ret
  447ce8:	stp	x29, x30, [sp, #-32]!
  447cec:	ldr	x8, [x0, #24]
  447cf0:	str	x19, [sp, #16]
  447cf4:	mov	x29, sp
  447cf8:	ldrb	w9, [x8]
  447cfc:	cmp	w9, #0x4c
  447d00:	b.ne	447e6c <feof@plt+0x4516c>  // b.any
  447d04:	add	x9, x8, #0x1
  447d08:	str	x9, [x0, #24]
  447d0c:	ldrb	w9, [x8, #1]
  447d10:	mov	x19, x0
  447d14:	cmp	w9, #0x5a
  447d18:	b.eq	447d40 <feof@plt+0x45040>  // b.none
  447d1c:	cmp	w9, #0x5f
  447d20:	b.ne	447d60 <feof@plt+0x45060>  // b.any
  447d24:	add	x9, x8, #0x2
  447d28:	str	x9, [x19, #24]
  447d2c:	ldrb	w9, [x8, #2]
  447d30:	cmp	w9, #0x5a
  447d34:	b.ne	447db8 <feof@plt+0x450b8>  // b.any
  447d38:	mov	w9, #0x2                   	// #2
  447d3c:	b	447d44 <feof@plt+0x45044>
  447d40:	mov	w9, #0x1                   	// #1
  447d44:	add	x8, x8, x9
  447d48:	add	x8, x8, #0x1
  447d4c:	mov	x0, x19
  447d50:	mov	w1, wzr
  447d54:	str	x8, [x19, #24]
  447d58:	bl	4440a0 <feof@plt+0x413a0>
  447d5c:	b	447e50 <feof@plt+0x45150>
  447d60:	mov	x0, x19
  447d64:	bl	44523c <feof@plt+0x4253c>
  447d68:	cbz	x0, 447e70 <feof@plt+0x45170>
  447d6c:	ldr	w8, [x0]
  447d70:	mov	x2, x0
  447d74:	cmp	w8, #0x27
  447d78:	b.ne	447d98 <feof@plt+0x45098>  // b.any
  447d7c:	ldr	x8, [x2, #8]
  447d80:	ldr	w9, [x8, #28]
  447d84:	cbz	w9, 447d98 <feof@plt+0x45098>
  447d88:	ldr	w8, [x8, #8]
  447d8c:	ldr	w9, [x19, #72]
  447d90:	sub	w8, w9, w8
  447d94:	str	w8, [x19, #72]
  447d98:	ldr	x8, [x19, #24]
  447d9c:	ldrb	w9, [x8]
  447da0:	cmp	w9, #0x6e
  447da4:	b.ne	447dc0 <feof@plt+0x450c0>  // b.any
  447da8:	add	x8, x8, #0x1
  447dac:	mov	w1, #0x3e                  	// #62
  447db0:	str	x8, [x19, #24]
  447db4:	b	447dc4 <feof@plt+0x450c4>
  447db8:	mov	x0, xzr
  447dbc:	b	447e50 <feof@plt+0x45150>
  447dc0:	mov	w1, #0x3d                  	// #61
  447dc4:	mov	x10, x8
  447dc8:	ldrb	w9, [x10]
  447dcc:	cbz	w9, 447e6c <feof@plt+0x4516c>
  447dd0:	cmp	w9, #0x45
  447dd4:	b.eq	447dec <feof@plt+0x450ec>  // b.none
  447dd8:	add	x10, x10, #0x1
  447ddc:	str	x10, [x19, #24]
  447de0:	ldrb	w9, [x10]
  447de4:	cbnz	w9, 447dd0 <feof@plt+0x450d0>
  447de8:	b	447e6c <feof@plt+0x4516c>
  447dec:	ldp	w9, w11, [x19, #40]
  447df0:	sxtw	x9, w9
  447df4:	cmp	w9, w11
  447df8:	b.ge	447e44 <feof@plt+0x45144>  // b.tcont
  447dfc:	ldr	x11, [x19, #32]
  447e00:	sub	w10, w10, w8
  447e04:	mov	w12, #0x18                  	// #24
  447e08:	mov	x3, xzr
  447e0c:	add	w13, w9, #0x1
  447e10:	cmp	w10, #0x1
  447e14:	madd	x12, x9, x12, x11
  447e18:	str	wzr, [x12, #4]
  447e1c:	str	w13, [x19, #40]
  447e20:	b.lt	447e48 <feof@plt+0x45148>  // b.tstop
  447e24:	cbz	x11, 447e48 <feof@plt+0x45148>
  447e28:	mov	w13, #0x18                  	// #24
  447e2c:	madd	x9, x9, x13, x11
  447e30:	mov	x3, x12
  447e34:	str	xzr, [x12]
  447e38:	str	x8, [x9, #8]
  447e3c:	str	w10, [x9, #16]
  447e40:	b	447e48 <feof@plt+0x45148>
  447e44:	mov	x3, xzr
  447e48:	mov	x0, x19
  447e4c:	bl	4466d8 <feof@plt+0x439d8>
  447e50:	ldr	x8, [x19, #24]
  447e54:	ldrb	w9, [x8]
  447e58:	cmp	w9, #0x45
  447e5c:	b.ne	447e6c <feof@plt+0x4516c>  // b.any
  447e60:	add	x8, x8, #0x1
  447e64:	str	x8, [x19, #24]
  447e68:	b	447e70 <feof@plt+0x45170>
  447e6c:	mov	x0, xzr
  447e70:	ldr	x19, [sp, #16]
  447e74:	ldp	x29, x30, [sp], #32
  447e78:	ret
  447e7c:	stp	x29, x30, [sp, #-80]!
  447e80:	str	x25, [sp, #16]
  447e84:	stp	x24, x23, [sp, #32]
  447e88:	stp	x22, x21, [sp, #48]
  447e8c:	stp	x20, x19, [sp, #64]
  447e90:	mov	x21, x0
  447e94:	ldr	x9, [x21, #24]!
  447e98:	mov	x19, x0
  447e9c:	mov	x29, sp
  447ea0:	ldrb	w8, [x9]
  447ea4:	sub	w10, w8, #0x30
  447ea8:	cmp	w10, #0x9
  447eac:	b.hi	447ec0 <feof@plt+0x451c0>  // b.pmore
  447eb0:	mov	x0, x19
  447eb4:	bl	446764 <feof@plt+0x43a64>
  447eb8:	mov	x20, x0
  447ebc:	b	4484dc <feof@plt+0x457dc>
  447ec0:	sub	w10, w8, #0x61
  447ec4:	cmp	w10, #0x19
  447ec8:	b.hi	447f88 <feof@plt+0x45288>  // b.pmore
  447ecc:	cmp	w8, #0x6f
  447ed0:	b.ne	447ee8 <feof@plt+0x451e8>  // b.any
  447ed4:	ldrb	w8, [x9, #1]
  447ed8:	cmp	w8, #0x6e
  447edc:	b.ne	447ee8 <feof@plt+0x451e8>  // b.any
  447ee0:	add	x8, x9, #0x2
  447ee4:	str	x8, [x21]
  447ee8:	mov	x0, x19
  447eec:	bl	448800 <feof@plt+0x45b00>
  447ef0:	mov	x20, x0
  447ef4:	cbz	x0, 4484dc <feof@plt+0x457dc>
  447ef8:	ldr	w8, [x20]
  447efc:	cmp	w8, #0x32
  447f00:	b.ne	4484dc <feof@plt+0x457dc>  // b.any
  447f04:	ldr	x8, [x20, #8]
  447f08:	ldr	w9, [x19, #72]
  447f0c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  447f10:	add	x1, x1, #0xac5
  447f14:	ldr	w8, [x8, #16]
  447f18:	add	w8, w8, w9
  447f1c:	add	w8, w8, #0x7
  447f20:	str	w8, [x19, #72]
  447f24:	ldr	x8, [x20, #8]
  447f28:	ldr	x0, [x8]
  447f2c:	bl	402b40 <strcmp@plt>
  447f30:	cbnz	w0, 4484dc <feof@plt+0x457dc>
  447f34:	mov	x0, x19
  447f38:	bl	446764 <feof@plt+0x43a64>
  447f3c:	cbz	x0, 4484d8 <feof@plt+0x457d8>
  447f40:	ldp	w8, w9, [x19, #40]
  447f44:	sxtw	x8, w8
  447f48:	cmp	w8, w9
  447f4c:	b.ge	4484d8 <feof@plt+0x457d8>  // b.tcont
  447f50:	ldr	x9, [x19, #32]
  447f54:	mov	w10, #0x18                  	// #24
  447f58:	add	w11, w8, #0x1
  447f5c:	madd	x10, x8, x10, x9
  447f60:	str	wzr, [x10, #4]
  447f64:	str	w11, [x19, #40]
  447f68:	cbz	x9, 4484d8 <feof@plt+0x457d8>
  447f6c:	mov	w12, #0x18                  	// #24
  447f70:	mov	w11, #0x37                  	// #55
  447f74:	madd	x8, x8, x12, x9
  447f78:	str	w11, [x10]
  447f7c:	stp	x20, x0, [x8, #8]
  447f80:	mov	x20, x10
  447f84:	b	4484dc <feof@plt+0x457dc>
  447f88:	sub	w10, w8, #0x43
  447f8c:	cmp	w10, #0x2
  447f90:	b.cc	448060 <feof@plt+0x45360>  // b.lo, b.ul, b.last
  447f94:	cmp	w8, #0x4c
  447f98:	b.eq	4480c0 <feof@plt+0x453c0>  // b.none
  447f9c:	cmp	w8, #0x55
  447fa0:	b.ne	4483a4 <feof@plt+0x456a4>  // b.any
  447fa4:	mov	x8, x9
  447fa8:	ldrb	w10, [x8, #1]!
  447fac:	cmp	w10, #0x74
  447fb0:	b.eq	4481a8 <feof@plt+0x454a8>  // b.none
  447fb4:	cmp	w10, #0x6c
  447fb8:	b.ne	4483a4 <feof@plt+0x456a4>  // b.any
  447fbc:	str	x8, [x21]
  447fc0:	ldrb	w8, [x8]
  447fc4:	cmp	w8, #0x6c
  447fc8:	b.ne	4484d8 <feof@plt+0x457d8>  // b.any
  447fcc:	add	x8, x9, #0x2
  447fd0:	mov	x0, x19
  447fd4:	str	x8, [x19, #24]
  447fd8:	bl	448a4c <feof@plt+0x45d4c>
  447fdc:	cbz	x0, 4484d8 <feof@plt+0x457d8>
  447fe0:	ldr	x10, [x21]
  447fe4:	ldrb	w8, [x10]
  447fe8:	cmp	w8, #0x45
  447fec:	b.ne	4484d8 <feof@plt+0x457d8>  // b.any
  447ff0:	add	x8, x10, #0x1
  447ff4:	str	x8, [x21]
  447ff8:	ldrb	w8, [x10, #1]
  447ffc:	cmp	w8, #0x6e
  448000:	b.eq	4484d8 <feof@plt+0x457d8>  // b.none
  448004:	cmp	w8, #0x5f
  448008:	b.ne	448448 <feof@plt+0x45748>  // b.any
  44800c:	mov	w9, wzr
  448010:	add	x8, x10, #0x2
  448014:	str	x8, [x21]
  448018:	ldp	w8, w10, [x19, #40]
  44801c:	sxtw	x8, w8
  448020:	cmp	w8, w10
  448024:	b.ge	4484d8 <feof@plt+0x457d8>  // b.tcont
  448028:	ldr	x10, [x19, #32]
  44802c:	mov	w11, #0x18                  	// #24
  448030:	add	w12, w8, #0x1
  448034:	madd	x20, x8, x11, x10
  448038:	str	wzr, [x20, #4]
  44803c:	str	w12, [x19, #40]
  448040:	cbz	x10, 4484d8 <feof@plt+0x457d8>
  448044:	mov	w12, #0x18                  	// #24
  448048:	mov	w11, #0x46                  	// #70
  44804c:	madd	x8, x8, x12, x10
  448050:	str	w11, [x20]
  448054:	str	x0, [x8, #8]
  448058:	str	w9, [x8, #16]
  44805c:	b	448224 <feof@plt+0x45524>
  448060:	ldr	x8, [x19, #64]
  448064:	cbz	x8, 448088 <feof@plt+0x45388>
  448068:	ldr	w10, [x8]
  44806c:	cmp	w10, #0x18
  448070:	b.eq	448078 <feof@plt+0x45378>  // b.none
  448074:	cbnz	w10, 448088 <feof@plt+0x45388>
  448078:	ldr	w10, [x8, #16]
  44807c:	ldr	w11, [x19, #72]
  448080:	add	w10, w11, w10
  448084:	str	w10, [x19, #72]
  448088:	ldrb	w10, [x9]
  44808c:	cmp	w10, #0x44
  448090:	b.eq	448110 <feof@plt+0x45410>  // b.none
  448094:	cmp	w10, #0x43
  448098:	b.ne	4484d8 <feof@plt+0x457d8>  // b.any
  44809c:	mov	x12, x9
  4480a0:	ldrb	w10, [x12, #1]!
  4480a4:	cmp	w10, #0x49
  4480a8:	b.ne	448248 <feof@plt+0x45548>  // b.any
  4480ac:	str	x12, [x21]
  4480b0:	ldrb	w10, [x9, #2]
  4480b4:	mov	w11, #0x1                   	// #1
  4480b8:	mov	x9, x12
  4480bc:	b	44824c <feof@plt+0x4554c>
  4480c0:	add	x8, x9, #0x1
  4480c4:	mov	x0, x19
  4480c8:	str	x8, [x19, #24]
  4480cc:	bl	446764 <feof@plt+0x43a64>
  4480d0:	mov	x20, x0
  4480d4:	cbz	x0, 44856c <feof@plt+0x4586c>
  4480d8:	ldr	x8, [x21]
  4480dc:	ldrb	w9, [x8]
  4480e0:	cmp	w9, #0x5f
  4480e4:	b.ne	4484dc <feof@plt+0x457dc>  // b.any
  4480e8:	add	x10, x8, #0x1
  4480ec:	str	x10, [x21]
  4480f0:	ldrb	w9, [x8, #1]
  4480f4:	cmp	w9, #0x5f
  4480f8:	b.ne	4482dc <feof@plt+0x455dc>  // b.any
  4480fc:	add	x10, x8, #0x2
  448100:	str	x10, [x21]
  448104:	ldrb	w9, [x8, #2]
  448108:	mov	w8, #0x2                   	// #2
  44810c:	b	4482e0 <feof@plt+0x455e0>
  448110:	ldrb	w10, [x9, #1]
  448114:	sub	w11, w10, #0x30
  448118:	cmp	w11, #0x5
  44811c:	b.hi	4484d8 <feof@plt+0x457d8>  // b.pmore
  448120:	mov	w10, #0x37                  	// #55
  448124:	lsr	w10, w10, w11
  448128:	tbz	w10, #0, 4484d8 <feof@plt+0x457d8>
  44812c:	ldp	w10, w12, [x19, #40]
  448130:	add	x9, x9, #0x2
  448134:	sxtw	x10, w10
  448138:	mov	x20, xzr
  44813c:	cmp	w10, w12
  448140:	str	x9, [x19, #24]
  448144:	b.ge	4484dc <feof@plt+0x457dc>  // b.tcont
  448148:	adrp	x12, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44814c:	sxtb	x11, w11
  448150:	add	x12, x12, #0xa38
  448154:	ldr	x9, [x19, #32]
  448158:	ldr	w11, [x12, x11, lsl #2]
  44815c:	mov	w13, #0x18                  	// #24
  448160:	add	w14, w10, #0x1
  448164:	madd	x12, x10, x13, x9
  448168:	sub	w13, w11, #0x1
  44816c:	cmp	w13, #0x4
  448170:	str	wzr, [x12, #4]
  448174:	str	w14, [x19, #40]
  448178:	b.hi	4484dc <feof@plt+0x457dc>  // b.pmore
  44817c:	cbz	x8, 4484dc <feof@plt+0x457dc>
  448180:	cbz	x9, 4484dc <feof@plt+0x457dc>
  448184:	adrp	x13, 456000 <_obstack_memory_used@@Base+0xdd8>
  448188:	ldr	d0, [x13, #3592]
  44818c:	mov	w13, #0x18                  	// #24
  448190:	madd	x9, x10, x13, x9
  448194:	mov	x20, x12
  448198:	str	d0, [x12]
  44819c:	str	w11, [x9, #8]
  4481a0:	str	x8, [x9, #16]
  4481a4:	b	4484dc <feof@plt+0x457dc>
  4481a8:	str	x8, [x21]
  4481ac:	ldrb	w8, [x8]
  4481b0:	cmp	w8, #0x74
  4481b4:	b.ne	4484d8 <feof@plt+0x457d8>  // b.any
  4481b8:	add	x11, x9, #0x2
  4481bc:	str	x11, [x21]
  4481c0:	ldrb	w8, [x9, #2]
  4481c4:	cmp	w8, #0x6e
  4481c8:	b.eq	4484d8 <feof@plt+0x457d8>  // b.none
  4481cc:	cmp	w8, #0x5f
  4481d0:	b.ne	4483ac <feof@plt+0x456ac>  // b.any
  4481d4:	mov	w10, wzr
  4481d8:	add	x8, x9, #0x3
  4481dc:	str	x8, [x21]
  4481e0:	ldp	w8, w9, [x19, #40]
  4481e4:	sxtw	x8, w8
  4481e8:	cmp	w8, w9
  4481ec:	b.ge	4484d8 <feof@plt+0x457d8>  // b.tcont
  4481f0:	ldr	x9, [x19, #32]
  4481f4:	mov	w11, #0x18                  	// #24
  4481f8:	add	w12, w8, #0x1
  4481fc:	madd	x20, x8, x11, x9
  448200:	str	wzr, [x20, #4]
  448204:	str	w12, [x19, #40]
  448208:	cbz	x9, 4484d8 <feof@plt+0x457d8>
  44820c:	mov	w12, #0x18                  	// #24
  448210:	mov	w11, #0x48                  	// #72
  448214:	mov	w10, w10
  448218:	madd	x8, x8, x12, x9
  44821c:	str	w11, [x20]
  448220:	str	x10, [x8, #8]
  448224:	ldp	w8, w9, [x19, #56]
  448228:	sxtw	x8, w8
  44822c:	cmp	w8, w9
  448230:	b.ge	4484d8 <feof@plt+0x457d8>  // b.tcont
  448234:	ldr	x9, [x19, #48]
  448238:	add	w10, w8, #0x1
  44823c:	str	x20, [x9, x8, lsl #3]
  448240:	str	w10, [x19, #56]
  448244:	b	4484dc <feof@plt+0x457dc>
  448248:	mov	w11, wzr
  44824c:	sub	w22, w10, #0x31
  448250:	cmp	w22, #0x4
  448254:	b.hi	4484d8 <feof@plt+0x457d8>  // b.pmore
  448258:	add	x9, x9, #0x2
  44825c:	str	x9, [x21]
  448260:	cbz	w11, 448270 <feof@plt+0x45570>
  448264:	mov	x0, x19
  448268:	bl	44523c <feof@plt+0x4253c>
  44826c:	ldr	x8, [x19, #64]
  448270:	ldp	w9, w10, [x19, #40]
  448274:	sxtw	x9, w9
  448278:	cmp	w9, w10
  44827c:	b.ge	4484d8 <feof@plt+0x457d8>  // b.tcont
  448280:	ldr	x10, [x19, #32]
  448284:	mov	w11, #0x18                  	// #24
  448288:	and	w13, w22, #0xff
  44828c:	mov	x20, xzr
  448290:	add	w12, w9, #0x1
  448294:	cmp	w13, #0x4
  448298:	madd	x11, x9, x11, x10
  44829c:	str	wzr, [x11, #4]
  4482a0:	str	w12, [x19, #40]
  4482a4:	b.hi	4484dc <feof@plt+0x457dc>  // b.pmore
  4482a8:	cbz	x8, 4484dc <feof@plt+0x457dc>
  4482ac:	cbz	x10, 4484dc <feof@plt+0x457dc>
  4482b0:	adrp	x13, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4482b4:	ldr	d0, [x13, #1872]
  4482b8:	and	w12, w22, #0xff
  4482bc:	mov	w13, #0x18                  	// #24
  4482c0:	add	w12, w12, #0x1
  4482c4:	madd	x9, x9, x13, x10
  4482c8:	str	d0, [x11]
  4482cc:	str	w12, [x9, #8]
  4482d0:	str	x8, [x9, #16]
  4482d4:	mov	x20, x11
  4482d8:	b	4484dc <feof@plt+0x457dc>
  4482dc:	mov	w8, #0x1                   	// #1
  4482e0:	cmp	w9, #0x6e
  4482e4:	b.ne	448300 <feof@plt+0x45600>  // b.any
  4482e8:	add	x12, x10, #0x1
  4482ec:	str	x12, [x21]
  4482f0:	ldrb	w9, [x10, #1]
  4482f4:	mov	w11, #0x1                   	// #1
  4482f8:	mov	x10, x12
  4482fc:	b	448304 <feof@plt+0x45604>
  448300:	mov	w11, wzr
  448304:	sub	w12, w9, #0x30
  448308:	cmp	w12, #0x9
  44830c:	b.hi	448370 <feof@plt+0x45670>  // b.pmore
  448310:	mov	w13, #0x2f                  	// #47
  448314:	mov	w14, #0x6667                	// #26215
  448318:	mov	w12, wzr
  44831c:	movk	w13, #0x8000, lsl #16
  448320:	add	x10, x10, #0x1
  448324:	movk	w14, #0x6666, lsl #16
  448328:	mov	w15, #0xa                   	// #10
  44832c:	and	w16, w9, #0xff
  448330:	sub	w9, w13, w16
  448334:	smull	x9, w9, w14
  448338:	lsr	x17, x9, #63
  44833c:	asr	x9, x9, #34
  448340:	add	w9, w9, w17
  448344:	cmp	w12, w9
  448348:	b.gt	4483a4 <feof@plt+0x456a4>
  44834c:	str	x10, [x21]
  448350:	ldrb	w9, [x10], #1
  448354:	madd	w12, w12, w15, w16
  448358:	sub	w12, w12, #0x30
  44835c:	sub	w16, w9, #0x30
  448360:	cmp	w16, #0xa
  448364:	b.cc	44832c <feof@plt+0x4562c>  // b.lo, b.ul, b.last
  448368:	sub	x10, x10, #0x1
  44836c:	b	448374 <feof@plt+0x45674>
  448370:	mov	w12, wzr
  448374:	cmp	w11, #0x0
  448378:	cneg	w11, w12, ne  // ne = any
  44837c:	tbnz	w11, #31, 4483a4 <feof@plt+0x456a4>
  448380:	cmp	w8, #0x2
  448384:	b.cc	4484dc <feof@plt+0x457dc>  // b.lo, b.ul, b.last
  448388:	cmp	w11, #0xa
  44838c:	b.lt	4484dc <feof@plt+0x457dc>  // b.tstop
  448390:	cmp	w9, #0x5f
  448394:	b.ne	4483a4 <feof@plt+0x456a4>  // b.any
  448398:	add	x8, x10, #0x1
  44839c:	str	x8, [x21]
  4483a0:	b	4484dc <feof@plt+0x457dc>
  4483a4:	mov	x20, xzr
  4483a8:	b	44856c <feof@plt+0x4586c>
  4483ac:	sub	w10, w8, #0x30
  4483b0:	cmp	w10, #0x9
  4483b4:	b.hi	44842c <feof@plt+0x4572c>  // b.pmore
  4483b8:	mov	w11, #0x2f                  	// #47
  4483bc:	mov	w12, #0x6667                	// #26215
  4483c0:	mov	w10, wzr
  4483c4:	movk	w11, #0x8000, lsl #16
  4483c8:	add	x9, x9, #0x3
  4483cc:	movk	w12, #0x6666, lsl #16
  4483d0:	mov	w13, #0xa                   	// #10
  4483d4:	and	w14, w8, #0xff
  4483d8:	sub	w8, w11, w14
  4483dc:	smull	x8, w8, w12
  4483e0:	lsr	x15, x8, #63
  4483e4:	asr	x8, x8, #34
  4483e8:	add	w8, w8, w15
  4483ec:	cmp	w10, w8
  4483f0:	b.gt	4484d8 <feof@plt+0x457d8>
  4483f4:	str	x9, [x21]
  4483f8:	ldrb	w8, [x9], #1
  4483fc:	madd	w10, w10, w13, w14
  448400:	sub	w10, w10, #0x30
  448404:	sub	w14, w8, #0x30
  448408:	cmp	w14, #0xa
  44840c:	b.cc	4483d4 <feof@plt+0x456d4>  // b.lo, b.ul, b.last
  448410:	cmn	w10, #0x1
  448414:	b.lt	4484d8 <feof@plt+0x457d8>  // b.tstop
  448418:	add	w10, w10, #0x1
  44841c:	sub	x11, x9, #0x1
  448420:	cmp	w8, #0x5f
  448424:	b.eq	448438 <feof@plt+0x45738>  // b.none
  448428:	b	4484d8 <feof@plt+0x457d8>
  44842c:	mov	w10, #0x1                   	// #1
  448430:	cmp	w8, #0x5f
  448434:	b.ne	4484d8 <feof@plt+0x457d8>  // b.any
  448438:	add	x8, x11, #0x1
  44843c:	str	x8, [x21]
  448440:	tbz	w10, #31, 4481e0 <feof@plt+0x454e0>
  448444:	b	4484d8 <feof@plt+0x457d8>
  448448:	sub	w9, w8, #0x30
  44844c:	cmp	w9, #0x9
  448450:	b.hi	4484c0 <feof@plt+0x457c0>  // b.pmore
  448454:	mov	w11, #0x2f                  	// #47
  448458:	mov	w12, #0x6667                	// #26215
  44845c:	mov	w9, wzr
  448460:	movk	w11, #0x8000, lsl #16
  448464:	add	x10, x10, #0x2
  448468:	movk	w12, #0x6666, lsl #16
  44846c:	mov	w13, #0xa                   	// #10
  448470:	and	w14, w8, #0xff
  448474:	sub	w8, w11, w14
  448478:	smull	x8, w8, w12
  44847c:	lsr	x15, x8, #63
  448480:	asr	x8, x8, #34
  448484:	add	w8, w8, w15
  448488:	cmp	w9, w8
  44848c:	b.gt	4484d8 <feof@plt+0x457d8>
  448490:	str	x10, [x21]
  448494:	ldrb	w8, [x10], #1
  448498:	madd	w9, w9, w13, w14
  44849c:	sub	w9, w9, #0x30
  4484a0:	sub	w14, w8, #0x30
  4484a4:	cmp	w14, #0xa
  4484a8:	b.cc	448470 <feof@plt+0x45770>  // b.lo, b.ul, b.last
  4484ac:	cmn	w9, #0x1
  4484b0:	b.lt	4484d8 <feof@plt+0x457d8>  // b.tstop
  4484b4:	add	w9, w9, #0x1
  4484b8:	sub	x10, x10, #0x2
  4484bc:	b	4484c4 <feof@plt+0x457c4>
  4484c0:	mov	w9, #0x1                   	// #1
  4484c4:	cmp	w8, #0x5f
  4484c8:	b.ne	4484d8 <feof@plt+0x457d8>  // b.any
  4484cc:	add	x8, x10, #0x2
  4484d0:	str	x8, [x21]
  4484d4:	tbz	w9, #31, 448018 <feof@plt+0x45318>
  4484d8:	mov	x20, xzr
  4484dc:	ldr	x8, [x21]
  4484e0:	ldrb	w9, [x8]
  4484e4:	cmp	w9, #0x42
  4484e8:	b.ne	44856c <feof@plt+0x4586c>  // b.any
  4484ec:	ldr	x22, [x19, #64]
  4484f0:	mov	w23, #0x18                  	// #24
  4484f4:	mov	w24, #0x4c                  	// #76
  4484f8:	b	448510 <feof@plt+0x45810>
  4484fc:	mov	x20, xzr
  448500:	ldr	x8, [x21]
  448504:	ldrb	w9, [x8]
  448508:	cmp	w9, #0x42
  44850c:	b.ne	448568 <feof@plt+0x45868>  // b.any
  448510:	add	x8, x8, #0x1
  448514:	mov	x0, x19
  448518:	mov	x25, x20
  44851c:	str	x8, [x19, #24]
  448520:	bl	446764 <feof@plt+0x43a64>
  448524:	mov	x20, xzr
  448528:	cbz	x25, 448500 <feof@plt+0x45800>
  44852c:	cbz	x0, 448500 <feof@plt+0x45800>
  448530:	ldp	w8, w9, [x19, #40]
  448534:	sxtw	x8, w8
  448538:	cmp	w8, w9
  44853c:	b.ge	4484fc <feof@plt+0x457fc>  // b.tcont
  448540:	ldr	x9, [x19, #32]
  448544:	add	w10, w8, #0x1
  448548:	madd	x20, x8, x23, x9
  44854c:	str	wzr, [x20, #4]
  448550:	str	w10, [x19, #40]
  448554:	cbz	x9, 4484fc <feof@plt+0x457fc>
  448558:	madd	x8, x8, x23, x9
  44855c:	str	w24, [x20]
  448560:	stp	x25, x0, [x8, #8]
  448564:	b	448500 <feof@plt+0x45800>
  448568:	str	x22, [x19, #64]
  44856c:	mov	x0, x20
  448570:	ldp	x20, x19, [sp, #64]
  448574:	ldp	x22, x21, [sp, #48]
  448578:	ldp	x24, x23, [sp, #32]
  44857c:	ldr	x25, [sp, #16]
  448580:	ldp	x29, x30, [sp], #80
  448584:	ret
  448588:	stp	x29, x30, [sp, #-96]!
  44858c:	stp	x26, x25, [sp, #32]
  448590:	stp	x24, x23, [sp, #48]
  448594:	stp	x22, x21, [sp, #64]
  448598:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44859c:	mov	w24, #0x2f                  	// #47
  4485a0:	mov	w25, #0x6667                	// #26215
  4485a4:	stp	x20, x19, [sp, #80]
  4485a8:	mov	x20, x0
  4485ac:	mov	x19, xzr
  4485b0:	add	x21, x21, #0xad5
  4485b4:	mov	w22, #0x18                  	// #24
  4485b8:	mov	w23, #0x5                   	// #5
  4485bc:	movk	w24, #0x8000, lsl #16
  4485c0:	movk	w25, #0x6666, lsl #16
  4485c4:	mov	w26, #0xa                   	// #10
  4485c8:	str	x27, [sp, #16]
  4485cc:	mov	x29, sp
  4485d0:	ldr	x8, [x20, #24]
  4485d4:	ldrb	w27, [x8]
  4485d8:	cbz	w27, 4487dc <feof@plt+0x45adc>
  4485dc:	cmp	w27, #0x44
  4485e0:	b.eq	448654 <feof@plt+0x45954>  // b.none
  4485e4:	sub	w9, w27, #0x30
  4485e8:	cmp	w9, #0xa
  4485ec:	b.cc	448670 <feof@plt+0x45970>  // b.lo, b.ul, b.last
  4485f0:	sub	w9, w27, #0x61
  4485f4:	and	w9, w9, #0xff
  4485f8:	cmp	w9, #0x1a
  4485fc:	b.cc	448670 <feof@plt+0x45970>  // b.lo, b.ul, b.last
  448600:	cmp	w27, #0x4d
  448604:	b.ne	448618 <feof@plt+0x45918>  // b.any
  448608:	cbz	x19, 4487e0 <feof@plt+0x45ae0>
  44860c:	add	x8, x8, #0x1
  448610:	str	x8, [x20, #24]
  448614:	b	4485d0 <feof@plt+0x458d0>
  448618:	sub	w9, w27, #0x43
  44861c:	cmp	w9, #0x12
  448620:	b.hi	4487dc <feof@plt+0x45adc>  // b.pmore
  448624:	adr	x10, 448634 <feof@plt+0x45934>
  448628:	ldrb	w11, [x21, x9]
  44862c:	add	x10, x10, x11, lsl #2
  448630:	br	x10
  448634:	cbz	x19, 4487e0 <feof@plt+0x45ae0>
  448638:	add	x8, x8, #0x1
  44863c:	mov	x0, x20
  448640:	str	x8, [x20, #24]
  448644:	bl	448b68 <feof@plt+0x45e68>
  448648:	mov	x3, x0
  44864c:	mov	w1, #0x4                   	// #4
  448650:	b	448684 <feof@plt+0x45984>
  448654:	ldrb	w8, [x8, #1]
  448658:	orr	w8, w8, #0x20
  44865c:	cmp	w8, #0x74
  448660:	b.ne	448670 <feof@plt+0x45970>  // b.any
  448664:	mov	x0, x20
  448668:	bl	44523c <feof@plt+0x4253c>
  44866c:	b	448678 <feof@plt+0x45978>
  448670:	mov	x0, x20
  448674:	bl	447e7c <feof@plt+0x4517c>
  448678:	mov	x3, x0
  44867c:	cbz	x19, 4486a0 <feof@plt+0x459a0>
  448680:	mov	w1, #0x1                   	// #1
  448684:	mov	x0, x20
  448688:	mov	x2, x19
  44868c:	bl	4466d8 <feof@plt+0x439d8>
  448690:	mov	x19, x0
  448694:	cmp	w27, #0x53
  448698:	b.eq	4485d0 <feof@plt+0x458d0>  // b.none
  44869c:	b	4486ac <feof@plt+0x459ac>
  4486a0:	mov	x19, x3
  4486a4:	cmp	w27, #0x53
  4486a8:	b.eq	4485d0 <feof@plt+0x458d0>  // b.none
  4486ac:	ldr	x8, [x20, #24]
  4486b0:	ldrb	w8, [x8]
  4486b4:	cmp	w8, #0x45
  4486b8:	b.eq	4485d0 <feof@plt+0x458d0>  // b.none
  4486bc:	cbz	x19, 4487e0 <feof@plt+0x45ae0>
  4486c0:	ldp	w8, w9, [x20, #56]
  4486c4:	sxtw	x8, w8
  4486c8:	cmp	w8, w9
  4486cc:	b.ge	4487dc <feof@plt+0x45adc>  // b.tcont
  4486d0:	ldr	x9, [x20, #48]
  4486d4:	add	w10, w8, #0x1
  4486d8:	str	x19, [x9, x8, lsl #3]
  4486dc:	str	w10, [x20, #56]
  4486e0:	b	4485d0 <feof@plt+0x458d0>
  4486e4:	mov	w1, #0x1                   	// #1
  4486e8:	mov	x0, x20
  4486ec:	bl	44695c <feof@plt+0x43c5c>
  4486f0:	b	448678 <feof@plt+0x45978>
  4486f4:	add	x9, x8, #0x1
  4486f8:	str	x9, [x20, #24]
  4486fc:	ldrb	w9, [x8, #1]
  448700:	cmp	w9, #0x6e
  448704:	b.eq	4487d4 <feof@plt+0x45ad4>  // b.none
  448708:	cmp	w9, #0x5f
  44870c:	b.ne	448758 <feof@plt+0x45a58>  // b.any
  448710:	mov	w10, wzr
  448714:	add	x8, x8, #0x2
  448718:	str	x8, [x20, #24]
  44871c:	ldp	w8, w9, [x20, #40]
  448720:	sxtw	x8, w8
  448724:	cmp	w8, w9
  448728:	b.ge	4487d4 <feof@plt+0x45ad4>  // b.tcont
  44872c:	ldr	x9, [x20, #32]
  448730:	add	w11, w8, #0x1
  448734:	madd	x3, x8, x22, x9
  448738:	str	wzr, [x3, #4]
  44873c:	str	w11, [x20, #40]
  448740:	cbz	x9, 4487d4 <feof@plt+0x45ad4>
  448744:	mov	w10, w10
  448748:	madd	x8, x8, x22, x9
  44874c:	str	w23, [x3]
  448750:	str	x10, [x8, #8]
  448754:	b	44867c <feof@plt+0x4597c>
  448758:	sub	w10, w9, #0x30
  44875c:	cmp	w10, #0x9
  448760:	b.hi	4487bc <feof@plt+0x45abc>  // b.pmore
  448764:	mov	w10, wzr
  448768:	add	x8, x8, #0x2
  44876c:	and	w11, w9, #0xff
  448770:	sub	w9, w24, w11
  448774:	smull	x9, w9, w25
  448778:	lsr	x12, x9, #63
  44877c:	asr	x9, x9, #34
  448780:	add	w9, w9, w12
  448784:	cmp	w10, w9
  448788:	b.gt	4487d4 <feof@plt+0x45ad4>
  44878c:	str	x8, [x20, #24]
  448790:	ldrb	w9, [x8], #1
  448794:	madd	w10, w10, w26, w11
  448798:	sub	w10, w10, #0x30
  44879c:	sub	w11, w9, #0x30
  4487a0:	cmp	w11, #0xa
  4487a4:	b.cc	44876c <feof@plt+0x45a6c>  // b.lo, b.ul, b.last
  4487a8:	cmn	w10, #0x1
  4487ac:	b.lt	4487d4 <feof@plt+0x45ad4>  // b.tstop
  4487b0:	add	w10, w10, #0x1
  4487b4:	sub	x8, x8, #0x2
  4487b8:	b	4487c0 <feof@plt+0x45ac0>
  4487bc:	mov	w10, #0x1                   	// #1
  4487c0:	cmp	w9, #0x5f
  4487c4:	b.ne	4487d4 <feof@plt+0x45ad4>  // b.any
  4487c8:	add	x8, x8, #0x2
  4487cc:	str	x8, [x20, #24]
  4487d0:	tbz	w10, #31, 44871c <feof@plt+0x45a1c>
  4487d4:	mov	x3, xzr
  4487d8:	b	44867c <feof@plt+0x4597c>
  4487dc:	mov	x19, xzr
  4487e0:	mov	x0, x19
  4487e4:	ldp	x20, x19, [sp, #80]
  4487e8:	ldp	x22, x21, [sp, #64]
  4487ec:	ldp	x24, x23, [sp, #48]
  4487f0:	ldp	x26, x25, [sp, #32]
  4487f4:	ldr	x27, [sp, #16]
  4487f8:	ldp	x29, x30, [sp], #96
  4487fc:	ret
  448800:	stp	x29, x30, [sp, #-32]!
  448804:	stp	x20, x19, [sp, #16]
  448808:	ldr	x9, [x0, #24]
  44880c:	mov	x19, x0
  448810:	mov	x29, sp
  448814:	ldrb	w8, [x9]
  448818:	cbz	w8, 4488b8 <feof@plt+0x45bb8>
  44881c:	add	x8, x9, #0x1
  448820:	str	x8, [x19, #24]
  448824:	ldrb	w10, [x9, #1]
  448828:	ldrb	w8, [x9]
  44882c:	cbz	w10, 4488b8 <feof@plt+0x45bb8>
  448830:	add	x10, x9, #0x2
  448834:	str	x10, [x19, #24]
  448838:	ldrb	w9, [x9, #1]
  44883c:	cmp	w8, #0x76
  448840:	b.ne	448988 <feof@plt+0x45c88>  // b.any
  448844:	sub	w20, w9, #0x30
  448848:	and	w10, w20, #0xff
  44884c:	cmp	w10, #0x9
  448850:	b.hi	448988 <feof@plt+0x45c88>  // b.pmore
  448854:	mov	x0, x19
  448858:	bl	446764 <feof@plt+0x43a64>
  44885c:	ldp	w9, w8, [x19, #40]
  448860:	sxtw	x9, w9
  448864:	cmp	w9, w8
  448868:	b.ge	448978 <feof@plt+0x45c78>  // b.tcont
  44886c:	ldr	x10, [x19, #32]
  448870:	mov	w11, #0x18                  	// #24
  448874:	mov	x8, x0
  448878:	mov	x0, xzr
  44887c:	add	w12, w9, #0x1
  448880:	madd	x11, x9, x11, x10
  448884:	str	wzr, [x11, #4]
  448888:	str	w12, [x19, #40]
  44888c:	cbz	x8, 44897c <feof@plt+0x45c7c>
  448890:	cbz	x10, 44897c <feof@plt+0x45c7c>
  448894:	adrp	x12, 465000 <_obstack_memory_used@@Base+0xfdd8>
  448898:	ldr	d0, [x12, #1864]
  44889c:	mov	w12, #0x18                  	// #24
  4488a0:	madd	x9, x9, x12, x10
  4488a4:	mov	x0, x11
  4488a8:	str	d0, [x11]
  4488ac:	str	w20, [x9, #8]
  4488b0:	str	x8, [x9, #16]
  4488b4:	b	44897c <feof@plt+0x45c7c>
  4488b8:	mov	w9, wzr
  4488bc:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  4488c0:	mov	w10, wzr
  4488c4:	mov	w13, #0x43                  	// #67
  4488c8:	add	x11, x11, #0xe10
  4488cc:	mov	w12, #0x18                  	// #24
  4488d0:	b	4488e8 <feof@plt+0x45be8>
  4488d4:	add	w10, w15, #0x1
  4488d8:	mov	w15, w13
  4488dc:	cmp	w10, w15
  4488e0:	mov	w13, w15
  4488e4:	b.eq	448978 <feof@plt+0x45c78>  // b.none
  4488e8:	sub	w14, w13, w10
  4488ec:	cmp	w14, #0x0
  4488f0:	cinc	w14, w14, lt  // lt = tstop
  4488f4:	add	w15, w10, w14, asr #1
  4488f8:	smaddl	x14, w15, w12, x11
  4488fc:	ldr	x16, [x14]
  448900:	ldrb	w17, [x16]
  448904:	cmp	w8, w17
  448908:	b.ne	448918 <feof@plt+0x45c18>  // b.any
  44890c:	ldrb	w18, [x16, #1]
  448910:	cmp	w9, w18
  448914:	b.eq	448934 <feof@plt+0x45c34>  // b.none
  448918:	cmp	w8, w17
  44891c:	b.cc	4488dc <feof@plt+0x45bdc>  // b.lo, b.ul, b.last
  448920:	b.ne	4488d4 <feof@plt+0x45bd4>  // b.any
  448924:	ldrb	w14, [x16, #1]
  448928:	cmp	w9, w14
  44892c:	b.cs	4488d4 <feof@plt+0x45bd4>  // b.hs, b.nlast
  448930:	b	4488dc <feof@plt+0x45bdc>
  448934:	ldp	w8, w9, [x19, #40]
  448938:	sxtw	x8, w8
  44893c:	cmp	w8, w9
  448940:	b.ge	448978 <feof@plt+0x45c78>  // b.tcont
  448944:	ldr	x9, [x19, #32]
  448948:	mov	w10, #0x18                  	// #24
  44894c:	add	w11, w8, #0x1
  448950:	madd	x0, x8, x10, x9
  448954:	str	wzr, [x0, #4]
  448958:	str	w11, [x19, #40]
  44895c:	cbz	x9, 448978 <feof@plt+0x45c78>
  448960:	mov	w11, #0x18                  	// #24
  448964:	mov	w10, #0x32                  	// #50
  448968:	madd	x8, x8, x11, x9
  44896c:	str	w10, [x0]
  448970:	str	x14, [x8, #8]
  448974:	b	44897c <feof@plt+0x45c7c>
  448978:	mov	x0, xzr
  44897c:	ldp	x20, x19, [sp, #16]
  448980:	ldp	x29, x30, [sp], #32
  448984:	ret
  448988:	cmp	w8, #0x63
  44898c:	b.ne	4488bc <feof@plt+0x45bbc>  // b.any
  448990:	cmp	w9, #0x76
  448994:	b.ne	4488bc <feof@plt+0x45bbc>  // b.any
  448998:	ldp	w8, w20, [x19, #76]
  44899c:	mov	x0, x19
  4489a0:	cmp	w8, #0x0
  4489a4:	cset	w8, eq  // eq = none
  4489a8:	str	w8, [x19, #80]
  4489ac:	bl	44523c <feof@plt+0x4253c>
  4489b0:	ldr	w9, [x19, #80]
  4489b4:	mov	x8, x0
  4489b8:	cbz	w9, 4489f4 <feof@plt+0x45cf4>
  4489bc:	cbz	x8, 448a40 <feof@plt+0x45d40>
  4489c0:	ldp	w9, w10, [x19, #40]
  4489c4:	sxtw	x9, w9
  4489c8:	cmp	w9, w10
  4489cc:	b.ge	448a40 <feof@plt+0x45d40>  // b.tcont
  4489d0:	ldr	x10, [x19, #32]
  4489d4:	mov	w11, #0x18                  	// #24
  4489d8:	add	w12, w9, #0x1
  4489dc:	madd	x0, x9, x11, x10
  4489e0:	str	wzr, [x0, #4]
  4489e4:	str	w12, [x19, #40]
  4489e8:	cbz	x10, 448a40 <feof@plt+0x45d40>
  4489ec:	mov	w11, #0x35                  	// #53
  4489f0:	b	448a28 <feof@plt+0x45d28>
  4489f4:	cbz	x8, 448a40 <feof@plt+0x45d40>
  4489f8:	ldp	w9, w10, [x19, #40]
  4489fc:	sxtw	x9, w9
  448a00:	cmp	w9, w10
  448a04:	b.ge	448a40 <feof@plt+0x45d40>  // b.tcont
  448a08:	ldr	x10, [x19, #32]
  448a0c:	mov	w11, #0x18                  	// #24
  448a10:	add	w12, w9, #0x1
  448a14:	madd	x0, x9, x11, x10
  448a18:	str	wzr, [x0, #4]
  448a1c:	str	w12, [x19, #40]
  448a20:	cbz	x10, 448a40 <feof@plt+0x45d40>
  448a24:	mov	w11, #0x34                  	// #52
  448a28:	mov	w12, #0x18                  	// #24
  448a2c:	madd	x9, x9, x12, x10
  448a30:	str	w11, [x0]
  448a34:	stp	x8, xzr, [x9, #8]
  448a38:	str	w20, [x19, #80]
  448a3c:	b	44897c <feof@plt+0x45c7c>
  448a40:	mov	x0, xzr
  448a44:	str	w20, [x19, #80]
  448a48:	b	44897c <feof@plt+0x45c7c>
  448a4c:	stp	x29, x30, [sp, #-64]!
  448a50:	str	x23, [sp, #16]
  448a54:	mov	x29, sp
  448a58:	adrp	x23, 465000 <_obstack_memory_used@@Base+0xfdd8>
  448a5c:	stp	x22, x21, [sp, #32]
  448a60:	stp	x20, x19, [sp, #48]
  448a64:	mov	x19, x0
  448a68:	add	x20, x29, #0x18
  448a6c:	mov	w21, #0x18                  	// #24
  448a70:	mov	w22, #0x2e                  	// #46
  448a74:	add	x23, x23, #0xae8
  448a78:	str	xzr, [x29, #24]
  448a7c:	ldr	x8, [x19, #24]
  448a80:	ldrb	w9, [x8]
  448a84:	sub	w10, w9, #0x2e
  448a88:	cmp	w10, #0x24
  448a8c:	b.hi	448ab0 <feof@plt+0x45db0>  // b.pmore
  448a90:	adr	x9, 448aa0 <feof@plt+0x45da0>
  448a94:	ldrb	w11, [x23, x10]
  448a98:	add	x9, x9, x11, lsl #2
  448a9c:	br	x9
  448aa0:	ldrb	w8, [x8, #1]
  448aa4:	cmp	w8, #0x45
  448aa8:	b.ne	448ab4 <feof@plt+0x45db4>  // b.any
  448aac:	b	448b10 <feof@plt+0x45e10>
  448ab0:	cbz	w9, 448b10 <feof@plt+0x45e10>
  448ab4:	mov	x0, x19
  448ab8:	bl	44523c <feof@plt+0x4253c>
  448abc:	cbz	x0, 448b54 <feof@plt+0x45e54>
  448ac0:	ldp	w8, w9, [x19, #40]
  448ac4:	sxtw	x8, w8
  448ac8:	cmp	w8, w9
  448acc:	b.ge	448b04 <feof@plt+0x45e04>  // b.tcont
  448ad0:	ldr	x10, [x19, #32]
  448ad4:	add	w11, w8, #0x1
  448ad8:	madd	x9, x8, x21, x10
  448adc:	str	wzr, [x9, #4]
  448ae0:	str	w11, [x19, #40]
  448ae4:	cbz	x10, 448b04 <feof@plt+0x45e04>
  448ae8:	madd	x8, x8, x21, x10
  448aec:	str	w22, [x9]
  448af0:	str	xzr, [x8, #16]!
  448af4:	stur	x0, [x8, #-8]
  448af8:	str	x9, [x20]
  448afc:	mov	x20, x8
  448b00:	b	448a7c <feof@plt+0x45d7c>
  448b04:	mov	x0, xzr
  448b08:	str	xzr, [x20]
  448b0c:	b	448b54 <feof@plt+0x45e54>
  448b10:	ldr	x0, [x29, #24]
  448b14:	cbz	x0, 448b54 <feof@plt+0x45e54>
  448b18:	ldr	x8, [x0, #16]
  448b1c:	cbnz	x8, 448b54 <feof@plt+0x45e54>
  448b20:	ldr	x8, [x0, #8]
  448b24:	ldr	w9, [x8]
  448b28:	cmp	w9, #0x27
  448b2c:	b.ne	448b54 <feof@plt+0x45e54>  // b.any
  448b30:	ldr	x8, [x8, #8]
  448b34:	ldr	w9, [x8, #28]
  448b38:	cmp	w9, #0x9
  448b3c:	b.ne	448b54 <feof@plt+0x45e54>  // b.any
  448b40:	ldr	w8, [x8, #8]
  448b44:	ldr	w9, [x19, #72]
  448b48:	sub	w8, w9, w8
  448b4c:	str	w8, [x19, #72]
  448b50:	str	xzr, [x0, #8]
  448b54:	ldp	x20, x19, [sp, #48]
  448b58:	ldp	x22, x21, [sp, #32]
  448b5c:	ldr	x23, [sp, #16]
  448b60:	ldp	x29, x30, [sp], #64
  448b64:	ret
  448b68:	stp	x29, x30, [sp, #-64]!
  448b6c:	stp	x22, x21, [sp, #32]
  448b70:	stp	x20, x19, [sp, #48]
  448b74:	ldr	x9, [x0, #24]
  448b78:	mov	x19, x0
  448b7c:	str	x23, [sp, #16]
  448b80:	mov	x29, sp
  448b84:	ldrb	w8, [x9]
  448b88:	cmp	w8, #0x45
  448b8c:	b.ne	448bdc <feof@plt+0x45edc>  // b.any
  448b90:	ldp	w8, w10, [x19, #40]
  448b94:	add	x9, x9, #0x1
  448b98:	sxtw	x8, w8
  448b9c:	str	x9, [x19, #24]
  448ba0:	cmp	w8, w10
  448ba4:	b.ge	448c60 <feof@plt+0x45f60>  // b.tcont
  448ba8:	ldr	x9, [x19, #32]
  448bac:	mov	w10, #0x18                  	// #24
  448bb0:	add	w11, w8, #0x1
  448bb4:	madd	x0, x8, x10, x9
  448bb8:	str	wzr, [x0, #4]
  448bbc:	str	w11, [x19, #40]
  448bc0:	cbz	x9, 448c60 <feof@plt+0x45f60>
  448bc4:	mov	w11, #0x18                  	// #24
  448bc8:	mov	w10, #0x2f                  	// #47
  448bcc:	madd	x8, x8, x11, x9
  448bd0:	str	w10, [x0]
  448bd4:	stp	xzr, xzr, [x8, #8]
  448bd8:	b	448c70 <feof@plt+0x45f70>
  448bdc:	ldr	x20, [x19, #64]
  448be0:	add	x21, x29, #0x18
  448be4:	mov	w22, #0x18                  	// #24
  448be8:	mov	w23, #0x2f                  	// #47
  448bec:	str	xzr, [x29, #24]
  448bf0:	mov	x0, x19
  448bf4:	bl	447c30 <feof@plt+0x44f30>
  448bf8:	cbz	x0, 448c70 <feof@plt+0x45f70>
  448bfc:	ldp	w8, w9, [x19, #40]
  448c00:	sxtw	x8, w8
  448c04:	cmp	w8, w9
  448c08:	b.ge	448c68 <feof@plt+0x45f68>  // b.tcont
  448c0c:	ldr	x10, [x19, #32]
  448c10:	add	w11, w8, #0x1
  448c14:	madd	x9, x8, x22, x10
  448c18:	str	wzr, [x9, #4]
  448c1c:	str	w11, [x19, #40]
  448c20:	cbz	x10, 448c68 <feof@plt+0x45f68>
  448c24:	madd	x10, x8, x22, x10
  448c28:	str	w23, [x9]
  448c2c:	str	xzr, [x10, #16]!
  448c30:	stur	x0, [x10, #-8]
  448c34:	str	x9, [x21]
  448c38:	ldr	x8, [x19, #24]
  448c3c:	mov	x21, x10
  448c40:	ldrb	w9, [x8]
  448c44:	cmp	w9, #0x45
  448c48:	b.ne	448bf0 <feof@plt+0x45ef0>  // b.any
  448c4c:	add	x8, x8, #0x1
  448c50:	str	x8, [x19, #24]
  448c54:	str	x20, [x19, #64]
  448c58:	ldr	x0, [x29, #24]
  448c5c:	b	448c70 <feof@plt+0x45f70>
  448c60:	mov	x0, xzr
  448c64:	b	448c70 <feof@plt+0x45f70>
  448c68:	mov	x0, xzr
  448c6c:	str	xzr, [x21]
  448c70:	ldp	x20, x19, [sp, #48]
  448c74:	ldp	x22, x21, [sp, #32]
  448c78:	ldr	x23, [sp, #16]
  448c7c:	ldp	x29, x30, [sp], #64
  448c80:	ret
  448c84:	sub	sp, sp, #0x70
  448c88:	stp	x29, x30, [sp, #16]
  448c8c:	stp	x28, x27, [sp, #32]
  448c90:	stp	x26, x25, [sp, #48]
  448c94:	stp	x24, x23, [sp, #64]
  448c98:	stp	x22, x21, [sp, #80]
  448c9c:	stp	x20, x19, [sp, #96]
  448ca0:	mov	x23, x0
  448ca4:	ldr	x8, [x23, #24]!
  448ca8:	mov	x19, x0
  448cac:	add	x29, sp, #0x10
  448cb0:	ldrb	w9, [x8]
  448cb4:	sub	w10, w9, #0x4c
  448cb8:	cmp	w10, #0x27
  448cbc:	b.hi	448cfc <feof@plt+0x45ffc>  // b.pmore
  448cc0:	adrp	x11, 465000 <_obstack_memory_used@@Base+0xfdd8>
  448cc4:	add	x11, x11, #0xb0d
  448cc8:	adr	x12, 448cd8 <feof@plt+0x45fd8>
  448ccc:	ldrb	w13, [x11, x10]
  448cd0:	add	x12, x12, x13, lsl #2
  448cd4:	br	x12
  448cd8:	mov	x0, x19
  448cdc:	ldp	x20, x19, [sp, #96]
  448ce0:	ldp	x22, x21, [sp, #80]
  448ce4:	ldp	x24, x23, [sp, #64]
  448ce8:	ldp	x26, x25, [sp, #48]
  448cec:	ldp	x28, x27, [sp, #32]
  448cf0:	ldp	x29, x30, [sp, #16]
  448cf4:	add	sp, sp, #0x70
  448cf8:	b	447ce8 <feof@plt+0x44fe8>
  448cfc:	sub	w10, w9, #0x30
  448d00:	cmp	w10, #0xa
  448d04:	b.cs	448f0c <feof@plt+0x4620c>  // b.hs, b.nlast
  448d08:	mov	x0, x19
  448d0c:	bl	447e7c <feof@plt+0x4517c>
  448d10:	mov	x21, x0
  448d14:	cbz	x0, 449ba0 <feof@plt+0x46ea0>
  448d18:	ldr	x8, [x23]
  448d1c:	ldrb	w9, [x8]
  448d20:	cmp	w9, #0x49
  448d24:	b.ne	449ba0 <feof@plt+0x46ea0>  // b.any
  448d28:	add	x8, x8, #0x1
  448d2c:	mov	x0, x19
  448d30:	str	x8, [x19, #24]
  448d34:	bl	448b68 <feof@plt+0x45e68>
  448d38:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  448d3c:	ldp	w8, w9, [x19, #40]
  448d40:	sxtw	x8, w8
  448d44:	cmp	w8, w9
  448d48:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  448d4c:	ldr	x9, [x19, #32]
  448d50:	mov	w10, #0x18                  	// #24
  448d54:	add	w11, w8, #0x1
  448d58:	madd	x10, x8, x10, x9
  448d5c:	str	wzr, [x10, #4]
  448d60:	str	w11, [x19, #40]
  448d64:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  448d68:	mov	w12, #0x18                  	// #24
  448d6c:	mov	w11, #0x4                   	// #4
  448d70:	madd	x8, x8, x12, x9
  448d74:	str	w11, [x10]
  448d78:	stp	x21, x0, [x8, #8]
  448d7c:	mov	x21, x10
  448d80:	b	449ba0 <feof@plt+0x46ea0>
  448d84:	add	x9, x8, #0x1
  448d88:	str	x9, [x23]
  448d8c:	ldrb	w9, [x8, #1]
  448d90:	cmp	w9, #0x6e
  448d94:	b.eq	449b9c <feof@plt+0x46e9c>  // b.none
  448d98:	cmp	w9, #0x5f
  448d9c:	b.ne	448f3c <feof@plt+0x4623c>  // b.any
  448da0:	mov	w10, wzr
  448da4:	add	x8, x8, #0x2
  448da8:	str	x8, [x23]
  448dac:	ldp	w8, w9, [x19, #40]
  448db0:	sxtw	x8, w8
  448db4:	cmp	w8, w9
  448db8:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  448dbc:	ldr	x9, [x19, #32]
  448dc0:	mov	w11, #0x18                  	// #24
  448dc4:	add	w12, w8, #0x1
  448dc8:	madd	x21, x8, x11, x9
  448dcc:	str	wzr, [x21, #4]
  448dd0:	str	w12, [x19, #40]
  448dd4:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  448dd8:	mov	w12, #0x18                  	// #24
  448ddc:	mov	w11, #0x5                   	// #5
  448de0:	mov	w10, w10
  448de4:	madd	x8, x8, x12, x9
  448de8:	str	w11, [x21]
  448dec:	str	x10, [x8, #8]
  448df0:	b	449ba0 <feof@plt+0x46ea0>
  448df4:	ldrb	w9, [x8, #1]
  448df8:	cmp	w9, #0x70
  448dfc:	b.ne	449044 <feof@plt+0x46344>  // b.any
  448e00:	add	x10, x8, #0x2
  448e04:	str	x10, [x23]
  448e08:	ldrb	w9, [x8, #2]
  448e0c:	cmp	w9, #0x6e
  448e10:	b.eq	449b9c <feof@plt+0x46e9c>  // b.none
  448e14:	cmp	w9, #0x5f
  448e18:	b.eq	4491fc <feof@plt+0x464fc>  // b.none
  448e1c:	cmp	w9, #0x54
  448e20:	b.ne	449254 <feof@plt+0x46554>  // b.any
  448e24:	add	x8, x8, #0x3
  448e28:	mov	x9, xzr
  448e2c:	str	x8, [x23]
  448e30:	b	449210 <feof@plt+0x46510>
  448e34:	ldrb	w9, [x8, #1]
  448e38:	cmp	w9, #0x70
  448e3c:	b.eq	448fbc <feof@plt+0x462bc>  // b.none
  448e40:	cmp	w9, #0x72
  448e44:	b.ne	449044 <feof@plt+0x46344>  // b.any
  448e48:	add	x8, x8, #0x2
  448e4c:	mov	x0, x19
  448e50:	str	x8, [x19, #24]
  448e54:	bl	44523c <feof@plt+0x4253c>
  448e58:	mov	x20, x0
  448e5c:	mov	x0, x19
  448e60:	bl	447e7c <feof@plt+0x4517c>
  448e64:	ldr	x8, [x19, #24]
  448e68:	mov	x22, x0
  448e6c:	ldrb	w9, [x8]
  448e70:	cmp	w9, #0x49
  448e74:	b.ne	449190 <feof@plt+0x46490>  // b.any
  448e78:	add	x8, x8, #0x1
  448e7c:	mov	x0, x19
  448e80:	str	x8, [x19, #24]
  448e84:	bl	448b68 <feof@plt+0x45e68>
  448e88:	mov	x21, xzr
  448e8c:	cbz	x22, 449ba0 <feof@plt+0x46ea0>
  448e90:	cbz	x0, 449ba0 <feof@plt+0x46ea0>
  448e94:	ldp	w9, w8, [x19, #40]
  448e98:	sxtw	x9, w9
  448e9c:	cmp	w9, w8
  448ea0:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  448ea4:	ldr	x10, [x19, #32]
  448ea8:	mov	w8, #0x18                  	// #24
  448eac:	add	w11, w9, #0x1
  448eb0:	madd	x8, x9, x8, x10
  448eb4:	str	wzr, [x8, #4]
  448eb8:	str	w11, [x19, #40]
  448ebc:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  448ec0:	mov	w12, #0x18                  	// #24
  448ec4:	mov	w11, #0x4                   	// #4
  448ec8:	madd	x9, x9, x12, x10
  448ecc:	str	w11, [x8]
  448ed0:	stp	x22, x0, [x9, #8]
  448ed4:	cbz	x20, 449b9c <feof@plt+0x46e9c>
  448ed8:	ldp	w9, w10, [x19, #40]
  448edc:	sxtw	x9, w9
  448ee0:	cmp	w9, w10
  448ee4:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  448ee8:	ldr	x10, [x19, #32]
  448eec:	mov	w11, #0x18                  	// #24
  448ef0:	add	w12, w9, #0x1
  448ef4:	madd	x21, x9, x11, x10
  448ef8:	str	wzr, [x21, #4]
  448efc:	str	w12, [x19, #40]
  448f00:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  448f04:	mov	w11, #0x1                   	// #1
  448f08:	b	449a2c <feof@plt+0x46d2c>
  448f0c:	cmp	w9, #0x69
  448f10:	b.eq	449014 <feof@plt+0x46314>  // b.none
  448f14:	cmp	w9, #0x74
  448f18:	b.eq	449014 <feof@plt+0x46314>  // b.none
  448f1c:	cmp	w9, #0x6f
  448f20:	b.ne	449044 <feof@plt+0x46344>  // b.any
  448f24:	ldrb	w9, [x8, #1]
  448f28:	cmp	w9, #0x6e
  448f2c:	b.ne	449044 <feof@plt+0x46344>  // b.any
  448f30:	add	x8, x8, #0x2
  448f34:	str	x8, [x23]
  448f38:	b	448d08 <feof@plt+0x46008>
  448f3c:	sub	w10, w9, #0x30
  448f40:	cmp	w10, #0x9
  448f44:	b.hi	4491e0 <feof@plt+0x464e0>  // b.pmore
  448f48:	mov	w11, #0x2f                  	// #47
  448f4c:	mov	w12, #0x6667                	// #26215
  448f50:	mov	w10, wzr
  448f54:	movk	w11, #0x8000, lsl #16
  448f58:	add	x8, x8, #0x2
  448f5c:	movk	w12, #0x6666, lsl #16
  448f60:	mov	w13, #0xa                   	// #10
  448f64:	and	w14, w9, #0xff
  448f68:	sub	w9, w11, w14
  448f6c:	smull	x9, w9, w12
  448f70:	lsr	x15, x9, #63
  448f74:	asr	x9, x9, #34
  448f78:	add	w9, w9, w15
  448f7c:	cmp	w10, w9
  448f80:	b.gt	449b9c <feof@plt+0x46e9c>
  448f84:	str	x8, [x23]
  448f88:	ldrb	w9, [x8], #1
  448f8c:	madd	w10, w10, w13, w14
  448f90:	sub	w10, w10, #0x30
  448f94:	sub	w14, w9, #0x30
  448f98:	cmp	w14, #0xa
  448f9c:	b.cc	448f64 <feof@plt+0x46264>  // b.lo, b.ul, b.last
  448fa0:	cmn	w10, #0x1
  448fa4:	b.lt	449b9c <feof@plt+0x46e9c>  // b.tstop
  448fa8:	add	w10, w10, #0x1
  448fac:	sub	x8, x8, #0x2
  448fb0:	cmp	w9, #0x5f
  448fb4:	b.eq	4491ec <feof@plt+0x464ec>  // b.none
  448fb8:	b	449b9c <feof@plt+0x46e9c>
  448fbc:	add	x8, x8, #0x2
  448fc0:	mov	x0, x19
  448fc4:	str	x8, [x19, #24]
  448fc8:	bl	448c84 <feof@plt+0x45f84>
  448fcc:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  448fd0:	ldp	w8, w9, [x19, #40]
  448fd4:	sxtw	x8, w8
  448fd8:	cmp	w8, w9
  448fdc:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  448fe0:	ldr	x9, [x19, #32]
  448fe4:	mov	w10, #0x18                  	// #24
  448fe8:	add	w11, w8, #0x1
  448fec:	madd	x21, x8, x10, x9
  448ff0:	str	wzr, [x21, #4]
  448ff4:	str	w11, [x19, #40]
  448ff8:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  448ffc:	mov	w11, #0x18                  	// #24
  449000:	mov	w10, #0x4b                  	// #75
  449004:	madd	x8, x8, x11, x9
  449008:	str	w10, [x21]
  44900c:	stp	x0, xzr, [x8, #8]
  449010:	b	449ba0 <feof@plt+0x46ea0>
  449014:	ldrb	w10, [x8, #1]
  449018:	cmp	w10, #0x6c
  44901c:	b.ne	449044 <feof@plt+0x46344>  // b.any
  449020:	add	x8, x8, #0x2
  449024:	cmp	w9, #0x74
  449028:	str	x8, [x23]
  44902c:	b.ne	4492e4 <feof@plt+0x465e4>  // b.any
  449030:	mov	x0, x19
  449034:	bl	44523c <feof@plt+0x4253c>
  449038:	ldr	x8, [x19, #24]
  44903c:	mov	x20, x0
  449040:	b	4492e8 <feof@plt+0x465e8>
  449044:	mov	x0, x19
  449048:	bl	448800 <feof@plt+0x45b00>
  44904c:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  449050:	ldr	w8, [x0]
  449054:	mov	x20, x0
  449058:	cmp	w8, #0x34
  44905c:	b.eq	4490ac <feof@plt+0x463ac>  // b.none
  449060:	cmp	w8, #0x33
  449064:	b.eq	449120 <feof@plt+0x46420>  // b.none
  449068:	cmp	w8, #0x32
  44906c:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449070:	ldr	x8, [x20, #8]
  449074:	ldr	w10, [x19, #72]
  449078:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44907c:	add	x1, x1, #0xa96
  449080:	ldr	w9, [x8, #16]
  449084:	ldr	x21, [x8]
  449088:	add	w8, w9, w10
  44908c:	sub	w8, w8, #0x2
  449090:	mov	x0, x21
  449094:	str	w8, [x19, #72]
  449098:	bl	402b40 <strcmp@plt>
  44909c:	cbz	w0, 4492d4 <feof@plt+0x465d4>
  4490a0:	ldr	x8, [x20, #8]
  4490a4:	add	x8, x8, #0x14
  4490a8:	b	449128 <feof@plt+0x46428>
  4490ac:	ldr	x9, [x23]
  4490b0:	ldrb	w8, [x9]
  4490b4:	cmp	w8, #0x5f
  4490b8:	b.ne	4493b4 <feof@plt+0x466b4>  // b.any
  4490bc:	add	x8, x9, #0x1
  4490c0:	str	x8, [x23]
  4490c4:	str	xzr, [sp, #8]
  4490c8:	ldrb	w8, [x9, #1]
  4490cc:	cmp	w8, #0x45
  4490d0:	b.ne	449494 <feof@plt+0x46794>  // b.any
  4490d4:	ldp	w8, w10, [x19, #40]
  4490d8:	add	x9, x9, #0x2
  4490dc:	sxtw	x8, w8
  4490e0:	str	x9, [x19, #24]
  4490e4:	cmp	w8, w10
  4490e8:	b.ge	4495d8 <feof@plt+0x468d8>  // b.tcont
  4490ec:	ldr	x9, [x19, #32]
  4490f0:	mov	w10, #0x18                  	// #24
  4490f4:	add	w11, w8, #0x1
  4490f8:	madd	x0, x8, x10, x9
  4490fc:	str	wzr, [x0, #4]
  449100:	str	w11, [x19, #40]
  449104:	cbz	x9, 4495d8 <feof@plt+0x468d8>
  449108:	mov	w11, #0x18                  	// #24
  44910c:	mov	w10, #0x2e                  	// #46
  449110:	madd	x8, x8, x11, x9
  449114:	str	w10, [x0]
  449118:	stp	xzr, xzr, [x8, #8]
  44911c:	b	4495f0 <feof@plt+0x468f0>
  449120:	mov	x21, xzr
  449124:	add	x8, x20, #0x8
  449128:	ldr	w8, [x8]
  44912c:	cmp	w8, #0x3
  449130:	b.hi	449b9c <feof@plt+0x46e9c>  // b.pmore
  449134:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  449138:	add	x9, x9, #0xb35
  44913c:	adr	x10, 44914c <feof@plt+0x4644c>
  449140:	ldrb	w11, [x9, x8]
  449144:	add	x10, x10, x11, lsl #2
  449148:	br	x10
  44914c:	ldp	w8, w9, [x19, #40]
  449150:	sxtw	x8, w8
  449154:	cmp	w8, w9
  449158:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  44915c:	ldr	x9, [x19, #32]
  449160:	mov	w10, #0x18                  	// #24
  449164:	add	w11, w8, #0x1
  449168:	madd	x21, x8, x10, x9
  44916c:	str	wzr, [x21, #4]
  449170:	str	w11, [x19, #40]
  449174:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  449178:	mov	w11, #0x18                  	// #24
  44917c:	mov	w10, #0x36                  	// #54
  449180:	madd	x8, x8, x11, x9
  449184:	str	w10, [x21]
  449188:	stp	x20, xzr, [x8, #8]
  44918c:	b	449ba0 <feof@plt+0x46ea0>
  449190:	mov	x21, xzr
  449194:	cbz	x20, 449ba0 <feof@plt+0x46ea0>
  449198:	cbz	x22, 449ba0 <feof@plt+0x46ea0>
  44919c:	ldp	w8, w9, [x19, #40]
  4491a0:	sxtw	x8, w8
  4491a4:	cmp	w8, w9
  4491a8:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  4491ac:	ldr	x9, [x19, #32]
  4491b0:	mov	w10, #0x18                  	// #24
  4491b4:	add	w11, w8, #0x1
  4491b8:	madd	x21, x8, x10, x9
  4491bc:	str	wzr, [x21, #4]
  4491c0:	str	w11, [x19, #40]
  4491c4:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  4491c8:	mov	w11, #0x18                  	// #24
  4491cc:	mov	w10, #0x1                   	// #1
  4491d0:	madd	x8, x8, x11, x9
  4491d4:	str	w10, [x21]
  4491d8:	stp	x20, x22, [x8, #8]
  4491dc:	b	449ba0 <feof@plt+0x46ea0>
  4491e0:	mov	w10, #0x1                   	// #1
  4491e4:	cmp	w9, #0x5f
  4491e8:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  4491ec:	add	x8, x8, #0x2
  4491f0:	str	x8, [x23]
  4491f4:	tbz	w10, #31, 448dac <feof@plt+0x460ac>
  4491f8:	b	449b9c <feof@plt+0x46e9c>
  4491fc:	mov	w11, wzr
  449200:	add	x8, x8, #0x3
  449204:	str	x8, [x23]
  449208:	add	w8, w11, #0x1
  44920c:	sxtw	x9, w8
  449210:	ldp	w8, w10, [x19, #40]
  449214:	sxtw	x8, w8
  449218:	cmp	w8, w10
  44921c:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  449220:	ldr	x10, [x19, #32]
  449224:	mov	w11, #0x18                  	// #24
  449228:	add	w12, w8, #0x1
  44922c:	madd	x21, x8, x11, x10
  449230:	str	wzr, [x21, #4]
  449234:	str	w12, [x19, #40]
  449238:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  44923c:	mov	w12, #0x18                  	// #24
  449240:	mov	w11, #0x6                   	// #6
  449244:	madd	x8, x8, x12, x10
  449248:	str	w11, [x21]
  44924c:	str	x9, [x8, #8]
  449250:	b	449ba0 <feof@plt+0x46ea0>
  449254:	sub	w11, w9, #0x30
  449258:	cmp	w11, #0x9
  44925c:	b.hi	44934c <feof@plt+0x4664c>  // b.pmore
  449260:	mov	w11, #0x2f                  	// #47
  449264:	mov	w12, #0x6667                	// #26215
  449268:	mov	w10, wzr
  44926c:	movk	w11, #0x8000, lsl #16
  449270:	add	x8, x8, #0x3
  449274:	movk	w12, #0x6666, lsl #16
  449278:	mov	w13, #0xa                   	// #10
  44927c:	and	w14, w9, #0xff
  449280:	sub	w9, w11, w14
  449284:	smull	x9, w9, w12
  449288:	lsr	x15, x9, #63
  44928c:	asr	x9, x9, #34
  449290:	add	w9, w9, w15
  449294:	cmp	w10, w9
  449298:	b.gt	449b9c <feof@plt+0x46e9c>
  44929c:	str	x8, [x23]
  4492a0:	ldrb	w9, [x8], #1
  4492a4:	madd	w10, w10, w13, w14
  4492a8:	sub	w10, w10, #0x30
  4492ac:	sub	w14, w9, #0x30
  4492b0:	cmp	w14, #0xa
  4492b4:	b.cc	44927c <feof@plt+0x4657c>  // b.lo, b.ul, b.last
  4492b8:	cmn	w10, #0x1
  4492bc:	b.lt	449b9c <feof@plt+0x46e9c>  // b.tstop
  4492c0:	add	w11, w10, #0x1
  4492c4:	sub	x10, x8, #0x1
  4492c8:	cmp	w9, #0x5f
  4492cc:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  4492d0:	b	449358 <feof@plt+0x46658>
  4492d4:	mov	x0, x19
  4492d8:	bl	44523c <feof@plt+0x4253c>
  4492dc:	cbnz	x0, 4495f4 <feof@plt+0x468f4>
  4492e0:	b	449b9c <feof@plt+0x46e9c>
  4492e4:	mov	x20, xzr
  4492e8:	mov	x10, x8
  4492ec:	ldrb	w9, [x10, #1]!
  4492f0:	cbz	w9, 449b9c <feof@plt+0x46e9c>
  4492f4:	str	xzr, [sp, #8]
  4492f8:	ldrb	w8, [x8]
  4492fc:	cmp	w8, #0x45
  449300:	b.ne	44951c <feof@plt+0x4681c>  // b.any
  449304:	ldp	w9, w8, [x19, #40]
  449308:	str	x10, [x19, #24]
  44930c:	sxtw	x9, w9
  449310:	cmp	w9, w8
  449314:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  449318:	ldr	x10, [x19, #32]
  44931c:	mov	w8, #0x18                  	// #24
  449320:	add	w11, w9, #0x1
  449324:	madd	x8, x9, x8, x10
  449328:	str	wzr, [x8, #4]
  44932c:	str	w11, [x19, #40]
  449330:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  449334:	mov	w12, #0x18                  	// #24
  449338:	mov	w11, #0x2e                  	// #46
  44933c:	madd	x9, x9, x12, x10
  449340:	str	w11, [x8]
  449344:	stp	xzr, xzr, [x9, #8]
  449348:	b	4495a4 <feof@plt+0x468a4>
  44934c:	mov	w11, #0x1                   	// #1
  449350:	cmp	w9, #0x5f
  449354:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449358:	mvn	w9, w11
  44935c:	add	x8, x10, #0x1
  449360:	tst	w9, #0x7fffffff
  449364:	str	x8, [x23]
  449368:	b.eq	449b9c <feof@plt+0x46e9c>  // b.none
  44936c:	b	449208 <feof@plt+0x46508>
  449370:	cbz	x21, 4493b4 <feof@plt+0x466b4>
  449374:	ldrb	w8, [x21]
  449378:	cmp	w8, #0x70
  44937c:	b.eq	449388 <feof@plt+0x46688>  // b.none
  449380:	cmp	w8, #0x6d
  449384:	b.ne	4495e0 <feof@plt+0x468e0>  // b.any
  449388:	ldrb	w9, [x21, #1]
  44938c:	cmp	w9, w8
  449390:	b.ne	4495e0 <feof@plt+0x468e0>  // b.any
  449394:	ldr	x8, [x23]
  449398:	ldrb	w9, [x8]
  44939c:	cmp	w9, #0x5f
  4493a0:	b.ne	449980 <feof@plt+0x46c80>  // b.any
  4493a4:	mov	w22, wzr
  4493a8:	add	x8, x8, #0x1
  4493ac:	str	x8, [x23]
  4493b0:	b	449984 <feof@plt+0x46c84>
  4493b4:	mov	w22, wzr
  4493b8:	mov	x0, x19
  4493bc:	bl	448c84 <feof@plt+0x45f84>
  4493c0:	cbz	w22, 4495f0 <feof@plt+0x468f0>
  4493c4:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  4493c8:	ldp	w8, w9, [x19, #40]
  4493cc:	sxtw	x8, w8
  4493d0:	cmp	w8, w9
  4493d4:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  4493d8:	ldr	x9, [x19, #32]
  4493dc:	mov	w10, #0x18                  	// #24
  4493e0:	add	w11, w8, #0x1
  4493e4:	madd	x10, x8, x10, x9
  4493e8:	str	wzr, [x10, #4]
  4493ec:	str	w11, [x19, #40]
  4493f0:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  4493f4:	mov	w12, #0x18                  	// #24
  4493f8:	mov	w11, #0x39                  	// #57
  4493fc:	madd	x8, x8, x12, x9
  449400:	str	w11, [x10]
  449404:	stp	x0, x0, [x8, #8]
  449408:	mov	x0, x10
  44940c:	b	4495f4 <feof@plt+0x468f4>
  449410:	cbz	x21, 449ba0 <feof@plt+0x46ea0>
  449414:	ldr	x8, [x20, #8]
  449418:	ldr	x8, [x8]
  44941c:	ldrb	w9, [x8, #1]
  449420:	cmp	w9, #0x63
  449424:	b.ne	449638 <feof@plt+0x46938>  // b.any
  449428:	ldrb	w8, [x8]
  44942c:	sub	w8, w8, #0x63
  449430:	cmp	w8, #0x10
  449434:	b.hi	449638 <feof@plt+0x46938>  // b.pmore
  449438:	mov	w9, #0x1                   	// #1
  44943c:	lsl	w8, w9, w8
  449440:	mov	w9, #0x8003                	// #32771
  449444:	movk	w9, #0x1, lsl #16
  449448:	tst	w8, w9
  44944c:	b.eq	449638 <feof@plt+0x46938>  // b.none
  449450:	mov	x0, x19
  449454:	bl	44523c <feof@plt+0x4253c>
  449458:	b	44974c <feof@plt+0x46a4c>
  44945c:	cbz	x21, 449ba0 <feof@plt+0x46ea0>
  449460:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  449464:	add	x1, x1, #0xb05
  449468:	mov	x0, x21
  44946c:	bl	402b40 <strcmp@plt>
  449470:	cbz	w0, 449658 <feof@plt+0x46958>
  449474:	ldrb	w8, [x21]
  449478:	cmp	w8, #0x6e
  44947c:	b.eq	44987c <feof@plt+0x46b7c>  // b.none
  449480:	cmp	w8, #0x66
  449484:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449488:	mov	x0, x19
  44948c:	bl	448800 <feof@plt+0x45b00>
  449490:	b	449660 <feof@plt+0x46960>
  449494:	add	x21, sp, #0x8
  449498:	mov	w22, #0x1                   	// #1
  44949c:	mov	w24, #0x18                  	// #24
  4494a0:	mov	w25, #0x2e                  	// #46
  4494a4:	ldr	w26, [x19, #76]
  4494a8:	mov	x0, x19
  4494ac:	str	w22, [x19, #76]
  4494b0:	bl	448c84 <feof@plt+0x45f84>
  4494b4:	str	w26, [x19, #76]
  4494b8:	cbz	x0, 4495f0 <feof@plt+0x468f0>
  4494bc:	ldp	w8, w9, [x19, #40]
  4494c0:	sxtw	x8, w8
  4494c4:	cmp	w8, w9
  4494c8:	b.ge	4495e8 <feof@plt+0x468e8>  // b.tcont
  4494cc:	ldr	x10, [x19, #32]
  4494d0:	add	w11, w8, #0x1
  4494d4:	madd	x9, x8, x24, x10
  4494d8:	str	wzr, [x9, #4]
  4494dc:	str	w11, [x19, #40]
  4494e0:	cbz	x10, 4495e8 <feof@plt+0x468e8>
  4494e4:	madd	x10, x8, x24, x10
  4494e8:	str	w25, [x9]
  4494ec:	str	xzr, [x10, #16]!
  4494f0:	stur	x0, [x10, #-8]
  4494f4:	str	x9, [x21]
  4494f8:	ldr	x8, [x23]
  4494fc:	mov	x21, x10
  449500:	ldrb	w9, [x8]
  449504:	cmp	w9, #0x45
  449508:	b.ne	4494a4 <feof@plt+0x467a4>  // b.any
  44950c:	add	x8, x8, #0x1
  449510:	str	x8, [x23]
  449514:	ldr	x0, [sp, #8]
  449518:	b	4495f0 <feof@plt+0x468f0>
  44951c:	add	x21, sp, #0x8
  449520:	mov	w22, #0x1                   	// #1
  449524:	mov	w24, #0x18                  	// #24
  449528:	mov	w25, #0x2e                  	// #46
  44952c:	ldr	w26, [x19, #76]
  449530:	mov	x0, x19
  449534:	str	w22, [x19, #76]
  449538:	bl	448c84 <feof@plt+0x45f84>
  44953c:	str	w26, [x19, #76]
  449540:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  449544:	ldp	w8, w9, [x19, #40]
  449548:	sxtw	x8, w8
  44954c:	cmp	w8, w9
  449550:	b.ge	449650 <feof@plt+0x46950>  // b.tcont
  449554:	ldr	x10, [x19, #32]
  449558:	add	w11, w8, #0x1
  44955c:	madd	x9, x8, x24, x10
  449560:	str	wzr, [x9, #4]
  449564:	str	w11, [x19, #40]
  449568:	cbz	x10, 449650 <feof@plt+0x46950>
  44956c:	madd	x10, x8, x24, x10
  449570:	str	w25, [x9]
  449574:	str	xzr, [x10, #16]!
  449578:	stur	x0, [x10, #-8]
  44957c:	str	x9, [x21]
  449580:	ldr	x8, [x23]
  449584:	mov	x21, x10
  449588:	ldrb	w9, [x8]
  44958c:	cmp	w9, #0x45
  449590:	b.ne	44952c <feof@plt+0x4682c>  // b.any
  449594:	add	x8, x8, #0x1
  449598:	str	x8, [x23]
  44959c:	ldr	x8, [sp, #8]
  4495a0:	cbz	x8, 449b9c <feof@plt+0x46e9c>
  4495a4:	ldp	w9, w10, [x19, #40]
  4495a8:	sxtw	x9, w9
  4495ac:	cmp	w9, w10
  4495b0:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  4495b4:	ldr	x10, [x19, #32]
  4495b8:	mov	w11, #0x18                  	// #24
  4495bc:	add	w12, w9, #0x1
  4495c0:	madd	x21, x9, x11, x10
  4495c4:	str	wzr, [x21, #4]
  4495c8:	str	w12, [x19, #40]
  4495cc:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  4495d0:	mov	w11, #0x31                  	// #49
  4495d4:	b	449a2c <feof@plt+0x46d2c>
  4495d8:	mov	x0, xzr
  4495dc:	b	4495f0 <feof@plt+0x468f0>
  4495e0:	mov	w22, wzr
  4495e4:	b	449984 <feof@plt+0x46c84>
  4495e8:	mov	x0, xzr
  4495ec:	str	xzr, [x21]
  4495f0:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  4495f4:	ldp	w8, w9, [x19, #40]
  4495f8:	sxtw	x8, w8
  4495fc:	cmp	w8, w9
  449600:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  449604:	ldr	x9, [x19, #32]
  449608:	mov	w10, #0x18                  	// #24
  44960c:	add	w11, w8, #0x1
  449610:	madd	x21, x8, x10, x9
  449614:	str	wzr, [x21, #4]
  449618:	str	w11, [x19, #40]
  44961c:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  449620:	mov	w11, #0x18                  	// #24
  449624:	mov	w10, #0x37                  	// #55
  449628:	madd	x8, x8, x11, x9
  44962c:	str	w10, [x21]
  449630:	stp	x20, x0, [x8, #8]
  449634:	b	449ba0 <feof@plt+0x46ea0>
  449638:	ldrb	w8, [x21]
  44963c:	mov	x0, x19
  449640:	cmp	w8, #0x66
  449644:	b.ne	449748 <feof@plt+0x46a48>  // b.any
  449648:	bl	448800 <feof@plt+0x45b00>
  44964c:	b	44974c <feof@plt+0x46a4c>
  449650:	str	xzr, [x21]
  449654:	b	449b9c <feof@plt+0x46e9c>
  449658:	mov	x0, x19
  44965c:	bl	448c84 <feof@plt+0x45f84>
  449660:	mov	x21, x0
  449664:	mov	x0, x19
  449668:	bl	448c84 <feof@plt+0x45f84>
  44966c:	mov	x22, x0
  449670:	mov	x0, x19
  449674:	bl	448c84 <feof@plt+0x45f84>
  449678:	cbz	x0, 449b9c <feof@plt+0x46e9c>
  44967c:	cbz	x22, 449b9c <feof@plt+0x46e9c>
  449680:	ldp	w9, w8, [x19, #40]
  449684:	sxtw	x9, w9
  449688:	cmp	w9, w8
  44968c:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  449690:	ldr	x10, [x19, #32]
  449694:	mov	w8, #0x18                  	// #24
  449698:	add	w11, w9, #0x1
  44969c:	madd	x8, x9, x8, x10
  4496a0:	str	wzr, [x8, #4]
  4496a4:	str	w11, [x19, #40]
  4496a8:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  4496ac:	mov	w12, #0x18                  	// #24
  4496b0:	mov	w11, #0x3c                  	// #60
  4496b4:	madd	x9, x9, x12, x10
  4496b8:	str	w11, [x8]
  4496bc:	stp	x22, x0, [x9, #8]
  4496c0:	cbz	x21, 449ba0 <feof@plt+0x46ea0>
  4496c4:	ldp	w10, w9, [x19, #40]
  4496c8:	sxtw	x10, w10
  4496cc:	cmp	w10, w9
  4496d0:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  4496d4:	ldr	x11, [x19, #32]
  4496d8:	mov	w9, #0x18                  	// #24
  4496dc:	add	w12, w10, #0x1
  4496e0:	madd	x9, x10, x9, x11
  4496e4:	str	wzr, [x9, #4]
  4496e8:	str	w12, [x19, #40]
  4496ec:	cbz	x11, 449b9c <feof@plt+0x46e9c>
  4496f0:	mov	w13, #0x18                  	// #24
  4496f4:	mov	w12, #0x3b                  	// #59
  4496f8:	madd	x10, x10, x13, x11
  4496fc:	str	w12, [x9]
  449700:	stp	x21, x8, [x10, #8]
  449704:	ldp	w8, w10, [x19, #40]
  449708:	sxtw	x8, w8
  44970c:	cmp	w8, w10
  449710:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  449714:	ldr	x10, [x19, #32]
  449718:	mov	w11, #0x18                  	// #24
  44971c:	add	w12, w8, #0x1
  449720:	madd	x21, x8, x11, x10
  449724:	str	wzr, [x21, #4]
  449728:	str	w12, [x19, #40]
  44972c:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  449730:	mov	w12, #0x18                  	// #24
  449734:	mov	w11, #0x3a                  	// #58
  449738:	madd	x8, x8, x12, x10
  44973c:	str	w11, [x21]
  449740:	stp	x20, x9, [x8, #8]
  449744:	b	449ba0 <feof@plt+0x46ea0>
  449748:	bl	448c84 <feof@plt+0x45f84>
  44974c:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  449750:	mov	x22, x0
  449754:	add	x1, x1, #0xa70
  449758:	mov	x0, x21
  44975c:	bl	402b40 <strcmp@plt>
  449760:	cbz	w0, 44981c <feof@plt+0x46b1c>
  449764:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  449768:	add	x1, x1, #0xaa4
  44976c:	mov	x0, x21
  449770:	bl	402b40 <strcmp@plt>
  449774:	cbz	w0, 44979c <feof@plt+0x46a9c>
  449778:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44977c:	add	x1, x1, #0xfd8
  449780:	mov	x0, x21
  449784:	bl	402b40 <strcmp@plt>
  449788:	cbz	w0, 44979c <feof@plt+0x46a9c>
  44978c:	mov	x0, x19
  449790:	bl	448c84 <feof@plt+0x45f84>
  449794:	mov	x23, x0
  449798:	b	4499b0 <feof@plt+0x46cb0>
  44979c:	mov	x0, x19
  4497a0:	bl	447e7c <feof@plt+0x4517c>
  4497a4:	ldr	x8, [x19, #24]
  4497a8:	mov	x23, x0
  4497ac:	ldrb	w9, [x8]
  4497b0:	cmp	w9, #0x49
  4497b4:	b.ne	4499b0 <feof@plt+0x46cb0>  // b.any
  4497b8:	add	x8, x8, #0x1
  4497bc:	mov	x0, x19
  4497c0:	str	x8, [x19, #24]
  4497c4:	bl	448b68 <feof@plt+0x45e68>
  4497c8:	mov	x21, xzr
  4497cc:	cbz	x23, 449ba0 <feof@plt+0x46ea0>
  4497d0:	cbz	x0, 449ba0 <feof@plt+0x46ea0>
  4497d4:	ldp	w8, w9, [x19, #40]
  4497d8:	sxtw	x8, w8
  4497dc:	cmp	w8, w9
  4497e0:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  4497e4:	ldr	x9, [x19, #32]
  4497e8:	mov	w10, #0x18                  	// #24
  4497ec:	add	w11, w8, #0x1
  4497f0:	madd	x10, x8, x10, x9
  4497f4:	str	wzr, [x10, #4]
  4497f8:	str	w11, [x19, #40]
  4497fc:	cbz	x9, 449b9c <feof@plt+0x46e9c>
  449800:	mov	w12, #0x18                  	// #24
  449804:	mov	w11, #0x4                   	// #4
  449808:	madd	x8, x8, x12, x9
  44980c:	str	w11, [x10]
  449810:	stp	x23, x0, [x8, #8]
  449814:	mov	x23, x10
  449818:	b	4499b0 <feof@plt+0x46cb0>
  44981c:	str	xzr, [sp, #8]
  449820:	ldr	x9, [x23]
  449824:	ldrb	w8, [x9]
  449828:	cmp	w8, #0x45
  44982c:	b.ne	4498f0 <feof@plt+0x46bf0>  // b.any
  449830:	ldp	w8, w10, [x19, #40]
  449834:	add	x9, x9, #0x1
  449838:	sxtw	x8, w8
  44983c:	str	x9, [x19, #24]
  449840:	cmp	w8, w10
  449844:	b.ge	449978 <feof@plt+0x46c78>  // b.tcont
  449848:	ldr	x9, [x19, #32]
  44984c:	mov	w10, #0x18                  	// #24
  449850:	add	w11, w8, #0x1
  449854:	madd	x23, x8, x10, x9
  449858:	str	wzr, [x23, #4]
  44985c:	str	w11, [x19, #40]
  449860:	cbz	x9, 449978 <feof@plt+0x46c78>
  449864:	mov	w11, #0x18                  	// #24
  449868:	mov	w10, #0x2e                  	// #46
  44986c:	madd	x8, x8, x11, x9
  449870:	str	w10, [x23]
  449874:	stp	xzr, xzr, [x8, #8]
  449878:	b	4499b0 <feof@plt+0x46cb0>
  44987c:	ldrb	w8, [x21, #1]
  449880:	cmp	w8, #0x77
  449884:	b.eq	449890 <feof@plt+0x46b90>  // b.none
  449888:	cmp	w8, #0x61
  44988c:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449890:	str	xzr, [sp, #8]
  449894:	ldr	x9, [x23]
  449898:	ldrb	w8, [x9]
  44989c:	cmp	w8, #0x5f
  4498a0:	b.ne	449a40 <feof@plt+0x46d40>  // b.any
  4498a4:	ldp	w8, w10, [x19, #40]
  4498a8:	add	x9, x9, #0x1
  4498ac:	sxtw	x8, w8
  4498b0:	str	x9, [x19, #24]
  4498b4:	cmp	w8, w10
  4498b8:	b.ge	449ac8 <feof@plt+0x46dc8>  // b.tcont
  4498bc:	ldr	x9, [x19, #32]
  4498c0:	mov	w10, #0x18                  	// #24
  4498c4:	add	w11, w8, #0x1
  4498c8:	madd	x21, x8, x10, x9
  4498cc:	str	wzr, [x21, #4]
  4498d0:	str	w11, [x19, #40]
  4498d4:	cbz	x9, 449ac8 <feof@plt+0x46dc8>
  4498d8:	mov	w11, #0x18                  	// #24
  4498dc:	mov	w10, #0x2e                  	// #46
  4498e0:	madd	x8, x8, x11, x9
  4498e4:	str	w10, [x21]
  4498e8:	stp	xzr, xzr, [x8, #8]
  4498ec:	b	449ad8 <feof@plt+0x46dd8>
  4498f0:	add	x21, sp, #0x8
  4498f4:	mov	w24, #0x1                   	// #1
  4498f8:	mov	w25, #0x18                  	// #24
  4498fc:	mov	w26, #0x2e                  	// #46
  449900:	ldr	w27, [x19, #76]
  449904:	mov	x0, x19
  449908:	str	w24, [x19, #76]
  44990c:	bl	448c84 <feof@plt+0x45f84>
  449910:	str	w27, [x19, #76]
  449914:	cbz	x0, 449978 <feof@plt+0x46c78>
  449918:	ldp	w8, w9, [x19, #40]
  44991c:	sxtw	x8, w8
  449920:	cmp	w8, w9
  449924:	b.ge	4499a8 <feof@plt+0x46ca8>  // b.tcont
  449928:	ldr	x10, [x19, #32]
  44992c:	add	w11, w8, #0x1
  449930:	madd	x9, x8, x25, x10
  449934:	str	wzr, [x9, #4]
  449938:	str	w11, [x19, #40]
  44993c:	cbz	x10, 4499a8 <feof@plt+0x46ca8>
  449940:	madd	x10, x8, x25, x10
  449944:	str	w26, [x9]
  449948:	str	xzr, [x10, #16]!
  44994c:	stur	x0, [x10, #-8]
  449950:	str	x9, [x21]
  449954:	ldr	x8, [x23]
  449958:	mov	x21, x10
  44995c:	ldrb	w9, [x8]
  449960:	cmp	w9, #0x45
  449964:	b.ne	449900 <feof@plt+0x46c00>  // b.any
  449968:	add	x8, x8, #0x1
  44996c:	str	x8, [x23]
  449970:	ldr	x23, [sp, #8]
  449974:	b	4499b0 <feof@plt+0x46cb0>
  449978:	mov	x23, xzr
  44997c:	b	4499b0 <feof@plt+0x46cb0>
  449980:	mov	w22, #0x1                   	// #1
  449984:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  449988:	add	x1, x1, #0xb22
  44998c:	mov	x0, x21
  449990:	bl	402b40 <strcmp@plt>
  449994:	cbnz	w0, 4493b8 <feof@plt+0x466b8>
  449998:	mov	x0, x19
  44999c:	bl	448b68 <feof@plt+0x45e68>
  4499a0:	cbnz	w22, 4493c4 <feof@plt+0x466c4>
  4499a4:	b	4495f0 <feof@plt+0x468f0>
  4499a8:	mov	x23, xzr
  4499ac:	str	xzr, [x21]
  4499b0:	mov	x21, xzr
  4499b4:	cbz	x22, 449ba0 <feof@plt+0x46ea0>
  4499b8:	cbz	x23, 449ba0 <feof@plt+0x46ea0>
  4499bc:	ldp	w9, w8, [x19, #40]
  4499c0:	sxtw	x9, w9
  4499c4:	cmp	w9, w8
  4499c8:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  4499cc:	ldr	x10, [x19, #32]
  4499d0:	mov	w8, #0x18                  	// #24
  4499d4:	add	w11, w9, #0x1
  4499d8:	madd	x8, x9, x8, x10
  4499dc:	str	wzr, [x8, #4]
  4499e0:	str	w11, [x19, #40]
  4499e4:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  4499e8:	mov	w12, #0x18                  	// #24
  4499ec:	mov	w11, #0x39                  	// #57
  4499f0:	madd	x9, x9, x12, x10
  4499f4:	str	w11, [x8]
  4499f8:	stp	x22, x23, [x9, #8]
  4499fc:	ldp	w9, w10, [x19, #40]
  449a00:	sxtw	x9, w9
  449a04:	cmp	w9, w10
  449a08:	b.ge	449b9c <feof@plt+0x46e9c>  // b.tcont
  449a0c:	ldr	x10, [x19, #32]
  449a10:	mov	w11, #0x18                  	// #24
  449a14:	add	w12, w9, #0x1
  449a18:	madd	x21, x9, x11, x10
  449a1c:	str	wzr, [x21, #4]
  449a20:	str	w12, [x19, #40]
  449a24:	cbz	x10, 449b9c <feof@plt+0x46e9c>
  449a28:	mov	w11, #0x38                  	// #56
  449a2c:	mov	w12, #0x18                  	// #24
  449a30:	madd	x9, x9, x12, x10
  449a34:	str	w11, [x21]
  449a38:	stp	x20, x8, [x9, #8]
  449a3c:	b	449ba0 <feof@plt+0x46ea0>
  449a40:	add	x22, sp, #0x8
  449a44:	mov	w21, #0x1                   	// #1
  449a48:	mov	w24, #0x18                  	// #24
  449a4c:	mov	w25, #0x2e                  	// #46
  449a50:	ldr	w26, [x19, #76]
  449a54:	mov	x0, x19
  449a58:	str	w21, [x19, #76]
  449a5c:	bl	448c84 <feof@plt+0x45f84>
  449a60:	str	w26, [x19, #76]
  449a64:	cbz	x0, 449ac8 <feof@plt+0x46dc8>
  449a68:	ldp	w8, w9, [x19, #40]
  449a6c:	sxtw	x8, w8
  449a70:	cmp	w8, w9
  449a74:	b.ge	449ad0 <feof@plt+0x46dd0>  // b.tcont
  449a78:	ldr	x10, [x19, #32]
  449a7c:	add	w11, w8, #0x1
  449a80:	madd	x9, x8, x24, x10
  449a84:	str	wzr, [x9, #4]
  449a88:	str	w11, [x19, #40]
  449a8c:	cbz	x10, 449ad0 <feof@plt+0x46dd0>
  449a90:	madd	x10, x8, x24, x10
  449a94:	str	w25, [x9]
  449a98:	str	xzr, [x10, #16]!
  449a9c:	stur	x0, [x10, #-8]
  449aa0:	str	x9, [x22]
  449aa4:	ldr	x8, [x23]
  449aa8:	mov	x22, x10
  449aac:	ldrb	w9, [x8]
  449ab0:	cmp	w9, #0x5f
  449ab4:	b.ne	449a50 <feof@plt+0x46d50>  // b.any
  449ab8:	add	x8, x8, #0x1
  449abc:	str	x8, [x23]
  449ac0:	ldr	x21, [sp, #8]
  449ac4:	b	449ad8 <feof@plt+0x46dd8>
  449ac8:	mov	x21, xzr
  449acc:	b	449ad8 <feof@plt+0x46dd8>
  449ad0:	mov	x21, xzr
  449ad4:	str	xzr, [x22]
  449ad8:	mov	x0, x19
  449adc:	bl	44523c <feof@plt+0x4253c>
  449ae0:	ldr	x8, [x19, #24]
  449ae4:	mov	x22, x0
  449ae8:	ldrb	w9, [x8]
  449aec:	cmp	w9, #0x70
  449af0:	b.eq	449b14 <feof@plt+0x46e14>  // b.none
  449af4:	cmp	w9, #0x69
  449af8:	b.eq	449b84 <feof@plt+0x46e84>  // b.none
  449afc:	cmp	w9, #0x45
  449b00:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449b04:	add	x8, x8, #0x1
  449b08:	mov	x0, xzr
  449b0c:	str	x8, [x23]
  449b10:	b	44967c <feof@plt+0x4697c>
  449b14:	ldrb	w9, [x8, #1]
  449b18:	cmp	w9, #0x69
  449b1c:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449b20:	add	x9, x8, #0x2
  449b24:	str	x9, [x23]
  449b28:	str	xzr, [sp, #8]
  449b2c:	ldrb	w9, [x8, #2]
  449b30:	cmp	w9, #0x45
  449b34:	b.ne	449bc4 <feof@plt+0x46ec4>  // b.any
  449b38:	ldp	w9, w10, [x19, #40]
  449b3c:	add	x8, x8, #0x3
  449b40:	sxtw	x9, w9
  449b44:	str	x8, [x19, #24]
  449b48:	cmp	w9, w10
  449b4c:	b.ge	449c4c <feof@plt+0x46f4c>  // b.tcont
  449b50:	ldr	x8, [x19, #32]
  449b54:	mov	w10, #0x18                  	// #24
  449b58:	add	w11, w9, #0x1
  449b5c:	madd	x0, x9, x10, x8
  449b60:	str	wzr, [x0, #4]
  449b64:	str	w11, [x19, #40]
  449b68:	cbz	x8, 449c4c <feof@plt+0x46f4c>
  449b6c:	mov	w11, #0x18                  	// #24
  449b70:	mov	w10, #0x2e                  	// #46
  449b74:	madd	x8, x9, x11, x8
  449b78:	str	w10, [x0]
  449b7c:	stp	xzr, xzr, [x8, #8]
  449b80:	b	44967c <feof@plt+0x4697c>
  449b84:	ldrb	w8, [x8, #1]
  449b88:	cmp	w8, #0x6c
  449b8c:	b.ne	449b9c <feof@plt+0x46e9c>  // b.any
  449b90:	mov	x0, x19
  449b94:	bl	448c84 <feof@plt+0x45f84>
  449b98:	b	44967c <feof@plt+0x4697c>
  449b9c:	mov	x21, xzr
  449ba0:	mov	x0, x21
  449ba4:	ldp	x20, x19, [sp, #96]
  449ba8:	ldp	x22, x21, [sp, #80]
  449bac:	ldp	x24, x23, [sp, #64]
  449bb0:	ldp	x26, x25, [sp, #48]
  449bb4:	ldp	x28, x27, [sp, #32]
  449bb8:	ldp	x29, x30, [sp, #16]
  449bbc:	add	sp, sp, #0x70
  449bc0:	ret
  449bc4:	add	x24, sp, #0x8
  449bc8:	mov	w25, #0x1                   	// #1
  449bcc:	mov	w26, #0x18                  	// #24
  449bd0:	mov	w27, #0x2e                  	// #46
  449bd4:	ldr	w28, [x19, #76]
  449bd8:	mov	x0, x19
  449bdc:	str	w25, [x19, #76]
  449be0:	bl	448c84 <feof@plt+0x45f84>
  449be4:	str	w28, [x19, #76]
  449be8:	cbz	x0, 44967c <feof@plt+0x4697c>
  449bec:	ldp	w8, w9, [x19, #40]
  449bf0:	sxtw	x8, w8
  449bf4:	cmp	w8, w9
  449bf8:	b.ge	449c54 <feof@plt+0x46f54>  // b.tcont
  449bfc:	ldr	x10, [x19, #32]
  449c00:	add	w11, w8, #0x1
  449c04:	madd	x9, x8, x26, x10
  449c08:	str	wzr, [x9, #4]
  449c0c:	str	w11, [x19, #40]
  449c10:	cbz	x10, 449c54 <feof@plt+0x46f54>
  449c14:	madd	x10, x8, x26, x10
  449c18:	str	w27, [x9]
  449c1c:	str	xzr, [x10, #16]!
  449c20:	stur	x0, [x10, #-8]
  449c24:	str	x9, [x24]
  449c28:	ldr	x8, [x23]
  449c2c:	mov	x24, x10
  449c30:	ldrb	w9, [x8]
  449c34:	cmp	w9, #0x45
  449c38:	b.ne	449bd4 <feof@plt+0x46ed4>  // b.any
  449c3c:	add	x8, x8, #0x1
  449c40:	str	x8, [x23]
  449c44:	ldr	x0, [sp, #8]
  449c48:	b	44967c <feof@plt+0x4697c>
  449c4c:	mov	x0, xzr
  449c50:	b	44967c <feof@plt+0x4697c>
  449c54:	mov	x0, xzr
  449c58:	str	xzr, [x24]
  449c5c:	b	44967c <feof@plt+0x4697c>
  449c60:	stp	x29, x30, [sp, #-32]!
  449c64:	stp	x20, x19, [sp, #16]
  449c68:	mov	x29, sp
  449c6c:	cbz	x1, 449d24 <feof@plt+0x47024>
  449c70:	adrp	x8, 465000 <_obstack_memory_used@@Base+0xfdd8>
  449c74:	mov	x20, x1
  449c78:	mov	x19, x0
  449c7c:	add	x8, x8, #0xb39
  449c80:	b	449c90 <feof@plt+0x46f90>
  449c84:	add	x9, x20, #0x10
  449c88:	ldr	x20, [x9]
  449c8c:	cbz	x20, 449d24 <feof@plt+0x47024>
  449c90:	ldr	w9, [x20]
  449c94:	sub	w9, w9, #0x1
  449c98:	cmp	w9, #0x4f
  449c9c:	b.hi	449d24 <feof@plt+0x47024>  // b.pmore
  449ca0:	adr	x10, 449c84 <feof@plt+0x46f84>
  449ca4:	ldrb	w11, [x8, x9]
  449ca8:	add	x10, x10, x11, lsl #2
  449cac:	br	x10
  449cb0:	add	x9, x20, #0x8
  449cb4:	ldr	x20, [x9]
  449cb8:	cbnz	x20, 449c90 <feof@plt+0x46f90>
  449cbc:	b	449d24 <feof@plt+0x47024>
  449cc0:	ldr	x8, [x20, #8]
  449cc4:	ldr	w8, [x8]
  449cc8:	cmp	w8, #0x5
  449ccc:	b.ne	449cec <feof@plt+0x46fec>  // b.any
  449cd0:	ldr	w8, [x19, #348]
  449cd4:	add	w8, w8, #0x1
  449cd8:	str	w8, [x19, #348]
  449cdc:	b	449cec <feof@plt+0x46fec>
  449ce0:	ldr	w8, [x19, #364]
  449ce4:	add	w8, w8, #0x1
  449ce8:	str	w8, [x19, #364]
  449cec:	ldr	w8, [x19, #308]
  449cf0:	cmp	w8, #0x800
  449cf4:	b.gt	449d24 <feof@plt+0x47024>
  449cf8:	add	w8, w8, #0x1
  449cfc:	str	w8, [x19, #308]
  449d00:	ldr	x1, [x20, #8]
  449d04:	mov	x0, x19
  449d08:	bl	449c60 <feof@plt+0x46f60>
  449d0c:	ldr	x1, [x20, #16]
  449d10:	mov	x0, x19
  449d14:	bl	449c60 <feof@plt+0x46f60>
  449d18:	ldr	w8, [x19, #308]
  449d1c:	sub	w8, w8, #0x1
  449d20:	str	w8, [x19, #308]
  449d24:	ldp	x20, x19, [sp, #16]
  449d28:	ldp	x29, x30, [sp], #32
  449d2c:	ret
  449d30:	sub	sp, sp, #0x100
  449d34:	stp	x26, x25, [sp, #192]
  449d38:	add	x25, x0, #0x130
  449d3c:	stp	x29, x30, [sp, #160]
  449d40:	stp	x28, x27, [sp, #176]
  449d44:	stp	x24, x23, [sp, #208]
  449d48:	stp	x22, x21, [sp, #224]
  449d4c:	stp	x20, x19, [sp, #240]
  449d50:	add	x29, sp, #0xa0
  449d54:	cbz	x2, 44c434 <feof@plt+0x49734>
  449d58:	ldr	w8, [x25]
  449d5c:	cbnz	w8, 44c43c <feof@plt+0x4973c>
  449d60:	ldr	w8, [x2]
  449d64:	mov	x21, x2
  449d68:	cmp	w8, #0x50
  449d6c:	b.hi	44c434 <feof@plt+0x49734>  // b.pmore
  449d70:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  449d74:	add	x9, x9, #0xb8a
  449d78:	adr	x10, 449d98 <feof@plt+0x47098>
  449d7c:	ldrh	w11, [x9, x8, lsl #1]
  449d80:	add	x10, x10, x11, lsl #2
  449d84:	mov	w20, w1
  449d88:	mov	x19, x0
  449d8c:	mov	w23, wzr
  449d90:	mov	x22, xzr
  449d94:	br	x10
  449d98:	ldr	x8, [x19, #296]
  449d9c:	add	x9, sp, #0x10
  449da0:	stp	x8, x21, [sp, #16]
  449da4:	str	x9, [x19, #296]
  449da8:	str	wzr, [sp, #32]
  449dac:	ldr	x8, [x19, #288]
  449db0:	str	x8, [sp, #40]
  449db4:	cbnz	x22, 449dc0 <feof@plt+0x470c0>
  449db8:	ldr	x22, [x21, #8]
  449dbc:	cbz	x22, 449dd8 <feof@plt+0x470d8>
  449dc0:	ldr	w8, [x22, #4]
  449dc4:	cmp	w8, #0x1
  449dc8:	b.gt	449dd8 <feof@plt+0x470d8>
  449dcc:	ldr	w9, [x19, #308]
  449dd0:	cmp	w9, #0x401
  449dd4:	b.lt	449e04 <feof@plt+0x47104>  // b.tstop
  449dd8:	mov	w8, #0x1                   	// #1
  449ddc:	str	w8, [x25]
  449de0:	mov	x0, x19
  449de4:	mov	w1, w20
  449de8:	mov	x2, x21
  449dec:	bl	44ffc8 <feof@plt+0x4d2c8>
  449df0:	ldr	x8, [sp, #16]
  449df4:	str	x8, [x19, #296]
  449df8:	cbz	w23, 44c43c <feof@plt+0x4973c>
  449dfc:	str	x24, [x19, #288]
  449e00:	b	44c43c <feof@plt+0x4973c>
  449e04:	add	w8, w8, #0x1
  449e08:	str	w8, [x22, #4]
  449e0c:	ldr	x8, [x19, #328]
  449e10:	add	w9, w9, #0x1
  449e14:	str	w9, [x19, #308]
  449e18:	sub	x9, x29, #0x10
  449e1c:	mov	x0, x19
  449e20:	mov	w1, w20
  449e24:	mov	x2, x22
  449e28:	stp	x22, x8, [x29, #-16]
  449e2c:	str	x9, [x19, #328]
  449e30:	bl	449d30 <feof@plt+0x47030>
  449e34:	ldur	x8, [x29, #-8]
  449e38:	str	x8, [x19, #328]
  449e3c:	ldr	w8, [x22, #4]
  449e40:	sub	w8, w8, #0x1
  449e44:	str	w8, [x22, #4]
  449e48:	ldr	w8, [x19, #308]
  449e4c:	sub	w8, w8, #0x1
  449e50:	str	w8, [x19, #308]
  449e54:	ldr	w8, [sp, #32]
  449e58:	cbnz	w8, 449df0 <feof@plt+0x470f0>
  449e5c:	b	449de0 <feof@plt+0x470e0>
  449e60:	ldr	x9, [x19, #296]
  449e64:	cbnz	x9, 449e7c <feof@plt+0x4717c>
  449e68:	mov	w23, wzr
  449e6c:	mov	x22, xzr
  449e70:	b	449d98 <feof@plt+0x47098>
  449e74:	ldr	x9, [x9]
  449e78:	cbz	x9, 449e68 <feof@plt+0x47168>
  449e7c:	ldr	w10, [x9, #16]
  449e80:	cbnz	w10, 449e74 <feof@plt+0x47174>
  449e84:	ldr	x10, [x9, #8]
  449e88:	ldr	w10, [x10]
  449e8c:	sub	w11, w10, #0x19
  449e90:	cmp	w11, #0x2
  449e94:	b.hi	449e68 <feof@plt+0x47168>  // b.pmore
  449e98:	cmp	w10, w8
  449e9c:	b.ne	449e74 <feof@plt+0x47174>  // b.any
  449ea0:	b	44c414 <feof@plt+0x49714>
  449ea4:	ldr	x22, [x21, #8]
  449ea8:	cbz	x22, 449ec4 <feof@plt+0x471c4>
  449eac:	ldr	w8, [x22, #4]
  449eb0:	cmp	w8, #0x1
  449eb4:	b.gt	449ec4 <feof@plt+0x471c4>
  449eb8:	ldr	w9, [x19, #308]
  449ebc:	cmp	w9, #0x401
  449ec0:	b.lt	44d2c8 <feof@plt+0x4a5c8>  // b.tstop
  449ec4:	mov	w8, #0x1                   	// #1
  449ec8:	str	w8, [x25]
  449ecc:	tbnz	w20, #2, 44d31c <feof@plt+0x4a61c>
  449ed0:	ldr	x8, [x19, #256]
  449ed4:	cmp	x8, #0xff
  449ed8:	b.ne	449f04 <feof@plt+0x47204>  // b.any
  449edc:	ldp	x8, x2, [x19, #272]
  449ee0:	mov	w1, #0xff                  	// #255
  449ee4:	mov	x0, x19
  449ee8:	strb	wzr, [x19, #255]
  449eec:	blr	x8
  449ef0:	ldr	x9, [x19, #320]
  449ef4:	mov	x8, xzr
  449ef8:	str	xzr, [x19, #256]
  449efc:	add	x9, x9, #0x1
  449f00:	str	x9, [x19, #320]
  449f04:	add	x9, x8, #0x1
  449f08:	mov	w22, #0x3a                  	// #58
  449f0c:	str	x9, [x19, #256]
  449f10:	strb	w22, [x19, x8]
  449f14:	ldr	x8, [x19, #256]
  449f18:	strb	w22, [x19, #264]
  449f1c:	cmp	x8, #0xff
  449f20:	b.ne	449f4c <feof@plt+0x4724c>  // b.any
  449f24:	ldp	x8, x2, [x19, #272]
  449f28:	mov	w1, #0xff                  	// #255
  449f2c:	mov	x0, x19
  449f30:	strb	wzr, [x19, #255]
  449f34:	blr	x8
  449f38:	ldr	x9, [x19, #320]
  449f3c:	mov	x8, xzr
  449f40:	str	xzr, [x19, #256]
  449f44:	add	x9, x9, #0x1
  449f48:	str	x9, [x19, #320]
  449f4c:	add	x9, x8, #0x1
  449f50:	str	x9, [x19, #256]
  449f54:	strb	w22, [x19, x8]
  449f58:	strb	w22, [x19, #264]
  449f5c:	b	44d364 <feof@plt+0x4a664>
  449f60:	ldr	w10, [x19, #312]
  449f64:	ldr	x9, [x21, #8]
  449f68:	cbnz	w10, 44a1c8 <feof@plt+0x474c8>
  449f6c:	ldr	w10, [x9]
  449f70:	cmp	w10, #0x5
  449f74:	b.ne	44a1c8 <feof@plt+0x474c8>  // b.any
  449f78:	ldr	w11, [x19, #344]
  449f7c:	cmp	w11, #0x1
  449f80:	b.lt	449fa8 <feof@plt+0x472a8>  // b.tstop
  449f84:	ldr	x10, [x19, #336]
  449f88:	mov	x12, x11
  449f8c:	add	x10, x10, #0x8
  449f90:	ldur	x13, [x10, #-8]
  449f94:	cmp	x13, x9
  449f98:	b.eq	44dee0 <feof@plt+0x4b1e0>  // b.none
  449f9c:	subs	x12, x12, #0x1
  449fa0:	add	x10, x10, #0x10
  449fa4:	b.ne	449f90 <feof@plt+0x47290>  // b.any
  449fa8:	ldr	w10, [x19, #348]
  449fac:	cmp	w11, w10
  449fb0:	b.ge	44c434 <feof@plt+0x49734>  // b.tcont
  449fb4:	ldr	x10, [x19, #336]
  449fb8:	sxtw	x11, w11
  449fbc:	add	w12, w11, #0x1
  449fc0:	str	w12, [x19, #344]
  449fc4:	add	x10, x10, x11, lsl #4
  449fc8:	str	x9, [x10], #8
  449fcc:	ldr	x11, [x19, #288]
  449fd0:	cbz	x11, 44a024 <feof@plt+0x47324>
  449fd4:	ldrsw	x12, [x19, #360]
  449fd8:	ldrsw	x13, [x19, #364]
  449fdc:	lsl	x14, x12, #4
  449fe0:	add	w15, w12, #0x1
  449fe4:	cmp	x12, x13
  449fe8:	b.ge	44c434 <feof@plt+0x49734>  // b.tcont
  449fec:	ldr	x16, [x19, #352]
  449ff0:	str	w15, [x19, #360]
  449ff4:	ldr	x17, [x11, #8]
  449ff8:	add	x12, x12, #0x1
  449ffc:	add	x18, x16, x14
  44a000:	add	x14, x14, #0x10
  44a004:	str	x17, [x18, #8]
  44a008:	str	x18, [x10]
  44a00c:	ldr	x11, [x11]
  44a010:	add	w15, w15, #0x1
  44a014:	mov	x10, x18
  44a018:	cbnz	x11, 449fe4 <feof@plt+0x472e4>
  44a01c:	add	x10, x16, x14
  44a020:	sub	x10, x10, #0x10
  44a024:	mov	w23, wzr
  44a028:	str	xzr, [x10]
  44a02c:	b	44e340 <feof@plt+0x4b640>
  44a030:	ldr	x8, [x19, #296]
  44a034:	add	x9, sp, #0x10
  44a038:	stp	x8, x21, [sp, #16]
  44a03c:	str	x9, [x19, #296]
  44a040:	str	wzr, [sp, #32]
  44a044:	ldr	x8, [x19, #288]
  44a048:	str	x8, [sp, #40]
  44a04c:	ldr	x22, [x21, #16]
  44a050:	cbz	x22, 44a06c <feof@plt+0x4736c>
  44a054:	ldr	w8, [x22, #4]
  44a058:	cmp	w8, #0x1
  44a05c:	b.gt	44a06c <feof@plt+0x4736c>
  44a060:	ldr	w9, [x19, #308]
  44a064:	cmp	w9, #0x401
  44a068:	b.lt	44d544 <feof@plt+0x4a844>  // b.tstop
  44a06c:	mov	w8, #0x1                   	// #1
  44a070:	str	w8, [x25]
  44a074:	mov	x0, x19
  44a078:	mov	w1, w20
  44a07c:	mov	x2, x21
  44a080:	bl	44ffc8 <feof@plt+0x4d2c8>
  44a084:	ldr	x8, [sp, #16]
  44a088:	str	x8, [x19, #296]
  44a08c:	b	44c43c <feof@plt+0x4973c>
  44a090:	ldr	x22, [x21, #8]
  44a094:	cbz	x22, 44d5f0 <feof@plt+0x4a8f0>
  44a098:	ldr	w8, [x22, #4]
  44a09c:	cmp	w8, #0x1
  44a0a0:	b.gt	44a0b0 <feof@plt+0x473b0>
  44a0a4:	ldr	w9, [x19, #308]
  44a0a8:	cmp	w9, #0x401
  44a0ac:	b.lt	44d5a0 <feof@plt+0x4a8a0>  // b.tstop
  44a0b0:	mov	w8, #0x1                   	// #1
  44a0b4:	str	w8, [x25]
  44a0b8:	b	44d5f0 <feof@plt+0x4a8f0>
  44a0bc:	ldr	x9, [x21, #8]
  44a0c0:	ldr	w10, [x9]
  44a0c4:	cmp	w10, #0x27
  44a0c8:	b.ne	44bf68 <feof@plt+0x49268>  // b.any
  44a0cc:	ldr	x9, [x9, #8]
  44a0d0:	ldr	w23, [x9, #28]
  44a0d4:	sub	w9, w23, #0x1
  44a0d8:	cmp	w9, #0x6
  44a0dc:	b.cs	44d808 <feof@plt+0x4ab08>  // b.hs, b.nlast
  44a0e0:	ldr	x22, [x21, #16]
  44a0e4:	ldr	w9, [x22]
  44a0e8:	cbnz	w9, 44bf6c <feof@plt+0x4926c>
  44a0ec:	cmp	w8, #0x3e
  44a0f0:	b.ne	44a140 <feof@plt+0x47440>  // b.any
  44a0f4:	ldr	x8, [x19, #256]
  44a0f8:	cmp	x8, #0xff
  44a0fc:	b.ne	44a128 <feof@plt+0x47428>  // b.any
  44a100:	ldp	x8, x2, [x19, #272]
  44a104:	mov	w1, #0xff                  	// #255
  44a108:	mov	x0, x19
  44a10c:	strb	wzr, [x19, #255]
  44a110:	blr	x8
  44a114:	ldr	x9, [x19, #320]
  44a118:	mov	x8, xzr
  44a11c:	str	xzr, [x19, #256]
  44a120:	add	x9, x9, #0x1
  44a124:	str	x9, [x19, #320]
  44a128:	add	x9, x8, #0x1
  44a12c:	mov	w10, #0x2d                  	// #45
  44a130:	str	x9, [x19, #256]
  44a134:	strb	w10, [x19, x8]
  44a138:	strb	w10, [x19, #264]
  44a13c:	ldr	x22, [x21, #16]
  44a140:	cbz	x22, 44a15c <feof@plt+0x4745c>
  44a144:	ldr	w8, [x22, #4]
  44a148:	cmp	w8, #0x1
  44a14c:	b.gt	44a15c <feof@plt+0x4745c>
  44a150:	ldr	w9, [x19, #308]
  44a154:	cmp	w9, #0x401
  44a158:	b.lt	44e82c <feof@plt+0x4bb2c>  // b.tstop
  44a15c:	mov	w8, #0x1                   	// #1
  44a160:	str	w8, [x25]
  44a164:	sub	w8, w23, #0x2
  44a168:	cmp	w8, #0x4
  44a16c:	b.hi	44c43c <feof@plt+0x4973c>  // b.pmore
  44a170:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44a174:	add	x9, x9, #0xc2c
  44a178:	adr	x10, 44a188 <feof@plt+0x47488>
  44a17c:	ldrh	w11, [x9, x8, lsl #1]
  44a180:	add	x10, x10, x11, lsl #2
  44a184:	br	x10
  44a188:	ldr	x8, [x19, #256]
  44a18c:	cmp	x8, #0xff
  44a190:	b.ne	44a1bc <feof@plt+0x474bc>  // b.any
  44a194:	ldp	x8, x2, [x19, #272]
  44a198:	mov	w1, #0xff                  	// #255
  44a19c:	mov	x0, x19
  44a1a0:	strb	wzr, [x19, #255]
  44a1a4:	blr	x8
  44a1a8:	ldr	x9, [x19, #320]
  44a1ac:	mov	x8, xzr
  44a1b0:	str	xzr, [x19, #256]
  44a1b4:	add	x9, x9, #0x1
  44a1b8:	str	x9, [x19, #320]
  44a1bc:	add	x9, x8, #0x1
  44a1c0:	mov	w10, #0x75                  	// #117
  44a1c4:	b	44ed30 <feof@plt+0x4c030>
  44a1c8:	mov	w23, wzr
  44a1cc:	ldr	w10, [x9]
  44a1d0:	mov	x22, xzr
  44a1d4:	cmp	w10, #0x23
  44a1d8:	b.eq	44c940 <feof@plt+0x49c40>  // b.none
  44a1dc:	cmp	w10, w8
  44a1e0:	b.eq	44c940 <feof@plt+0x49c40>  // b.none
  44a1e4:	cmp	w10, #0x24
  44a1e8:	b.ne	44cda4 <feof@plt+0x4a0a4>  // b.any
  44a1ec:	ldr	x22, [x9, #8]
  44a1f0:	b	449d98 <feof@plt+0x47098>
  44a1f4:	ldr	x22, [x21, #8]
  44a1f8:	ldrsw	x21, [x21, #16]
  44a1fc:	tbnz	w20, #2, 44c948 <feof@plt+0x49c48>
  44a200:	cbnz	w21, 44a224 <feof@plt+0x47524>
  44a204:	b	44c43c <feof@plt+0x4973c>
  44a208:	add	x9, x8, #0x1
  44a20c:	subs	x21, x21, #0x1
  44a210:	add	x22, x22, #0x1
  44a214:	str	x9, [x19, #256]
  44a218:	strb	w20, [x19, x8]
  44a21c:	strb	w20, [x19, #264]
  44a220:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44a224:	ldr	x8, [x19, #256]
  44a228:	ldrb	w20, [x22]
  44a22c:	cmp	x8, #0xff
  44a230:	b.ne	44a208 <feof@plt+0x47508>  // b.any
  44a234:	ldp	x8, x2, [x19, #272]
  44a238:	mov	w1, #0xff                  	// #255
  44a23c:	mov	x0, x19
  44a240:	strb	wzr, [x19, #255]
  44a244:	blr	x8
  44a248:	ldr	x9, [x19, #320]
  44a24c:	mov	x8, xzr
  44a250:	str	xzr, [x19, #256]
  44a254:	add	x9, x9, #0x1
  44a258:	str	x9, [x19, #320]
  44a25c:	b	44a208 <feof@plt+0x47508>
  44a260:	ldr	x22, [x19, #296]
  44a264:	str	xzr, [x19, #296]
  44a268:	ldr	x24, [x21, #8]
  44a26c:	cbz	x24, 44c434 <feof@plt+0x49734>
  44a270:	ldr	x8, [x19, #288]
  44a274:	adrp	x10, 465000 <_obstack_memory_used@@Base+0xfdd8>
  44a278:	mov	x11, xzr
  44a27c:	add	x9, sp, #0x10
  44a280:	mov	w23, #0x1                   	// #1
  44a284:	add	x10, x10, #0xc36
  44a288:	cmp	x23, #0x5
  44a28c:	b.eq	44c434 <feof@plt+0x49734>  // b.none
  44a290:	str	x11, [x9]
  44a294:	str	x9, [x19, #296]
  44a298:	str	x24, [x9, #8]
  44a29c:	str	wzr, [x9, #16]
  44a2a0:	str	x8, [x9, #24]
  44a2a4:	ldr	w12, [x24]
  44a2a8:	sub	w11, w12, #0x2
  44a2ac:	cmp	w11, #0x4e
  44a2b0:	b.hi	44df94 <feof@plt+0x4b294>  // b.pmore
  44a2b4:	adr	x13, 44a2c4 <feof@plt+0x475c4>
  44a2b8:	ldrh	w14, [x10, x11, lsl #1]
  44a2bc:	add	x13, x13, x14, lsl #2
  44a2c0:	br	x13
  44a2c4:	ldr	x24, [x24, #8]
  44a2c8:	mov	x11, x9
  44a2cc:	add	x23, x23, #0x1
  44a2d0:	add	x9, x9, #0x20
  44a2d4:	cbnz	x24, 44a288 <feof@plt+0x47588>
  44a2d8:	b	44c434 <feof@plt+0x49734>
  44a2dc:	ldr	x23, [x19, #368]
  44a2e0:	str	x21, [x19, #368]
  44a2e4:	ldr	x24, [x19, #296]
  44a2e8:	str	xzr, [x19, #296]
  44a2ec:	ldr	x22, [x21, #8]
  44a2f0:	tbnz	w20, #2, 44caa0 <feof@plt+0x49da0>
  44a2f4:	cbnz	x22, 44cacc <feof@plt+0x49dcc>
  44a2f8:	b	44cae4 <feof@plt+0x49de4>
  44a2fc:	ldr	w8, [x19, #312]
  44a300:	cbz	w8, 44cdac <feof@plt+0x4a0ac>
  44a304:	ldr	x8, [x19, #256]
  44a308:	cmp	x8, #0xff
  44a30c:	b.ne	44a338 <feof@plt+0x47638>  // b.any
  44a310:	ldp	x8, x2, [x19, #272]
  44a314:	mov	w1, #0xff                  	// #255
  44a318:	mov	x0, x19
  44a31c:	strb	wzr, [x19, #255]
  44a320:	blr	x8
  44a324:	ldr	x9, [x19, #320]
  44a328:	mov	x8, xzr
  44a32c:	str	xzr, [x19, #256]
  44a330:	add	x9, x9, #0x1
  44a334:	str	x9, [x19, #320]
  44a338:	add	x9, x8, #0x1
  44a33c:	mov	w10, #0x61                  	// #97
  44a340:	str	x9, [x19, #256]
  44a344:	strb	w10, [x19, x8]
  44a348:	ldr	x8, [x19, #256]
  44a34c:	strb	w10, [x19, #264]
  44a350:	cmp	x8, #0xff
  44a354:	b.ne	44a380 <feof@plt+0x47680>  // b.any
  44a358:	ldp	x8, x2, [x19, #272]
  44a35c:	mov	w1, #0xff                  	// #255
  44a360:	mov	x0, x19
  44a364:	strb	wzr, [x19, #255]
  44a368:	blr	x8
  44a36c:	ldr	x9, [x19, #320]
  44a370:	mov	x8, xzr
  44a374:	str	xzr, [x19, #256]
  44a378:	add	x9, x9, #0x1
  44a37c:	str	x9, [x19, #320]
  44a380:	add	x9, x8, #0x1
  44a384:	mov	w10, #0x75                  	// #117
  44a388:	str	x9, [x19, #256]
  44a38c:	strb	w10, [x19, x8]
  44a390:	ldr	x8, [x19, #256]
  44a394:	strb	w10, [x19, #264]
  44a398:	cmp	x8, #0xff
  44a39c:	b.ne	44a3c8 <feof@plt+0x476c8>  // b.any
  44a3a0:	ldp	x8, x2, [x19, #272]
  44a3a4:	mov	w1, #0xff                  	// #255
  44a3a8:	mov	x0, x19
  44a3ac:	strb	wzr, [x19, #255]
  44a3b0:	blr	x8
  44a3b4:	ldr	x9, [x19, #320]
  44a3b8:	mov	x8, xzr
  44a3bc:	str	xzr, [x19, #256]
  44a3c0:	add	x9, x9, #0x1
  44a3c4:	str	x9, [x19, #320]
  44a3c8:	add	x9, x8, #0x1
  44a3cc:	mov	w10, #0x74                  	// #116
  44a3d0:	str	x9, [x19, #256]
  44a3d4:	strb	w10, [x19, x8]
  44a3d8:	ldr	x8, [x19, #256]
  44a3dc:	strb	w10, [x19, #264]
  44a3e0:	cmp	x8, #0xff
  44a3e4:	b.ne	44a410 <feof@plt+0x47710>  // b.any
  44a3e8:	ldp	x8, x2, [x19, #272]
  44a3ec:	mov	w1, #0xff                  	// #255
  44a3f0:	mov	x0, x19
  44a3f4:	strb	wzr, [x19, #255]
  44a3f8:	blr	x8
  44a3fc:	ldr	x9, [x19, #320]
  44a400:	mov	x8, xzr
  44a404:	str	xzr, [x19, #256]
  44a408:	add	x9, x9, #0x1
  44a40c:	str	x9, [x19, #320]
  44a410:	add	x9, x8, #0x1
  44a414:	mov	w10, #0x6f                  	// #111
  44a418:	str	x9, [x19, #256]
  44a41c:	strb	w10, [x19, x8]
  44a420:	ldr	x8, [x19, #256]
  44a424:	strb	w10, [x19, #264]
  44a428:	cmp	x8, #0xff
  44a42c:	b.ne	44a458 <feof@plt+0x47758>  // b.any
  44a430:	ldp	x8, x2, [x19, #272]
  44a434:	mov	w1, #0xff                  	// #255
  44a438:	mov	x0, x19
  44a43c:	strb	wzr, [x19, #255]
  44a440:	blr	x8
  44a444:	ldr	x9, [x19, #320]
  44a448:	mov	x8, xzr
  44a44c:	str	xzr, [x19, #256]
  44a450:	add	x9, x9, #0x1
  44a454:	str	x9, [x19, #320]
  44a458:	add	x9, x8, #0x1
  44a45c:	mov	w10, #0x3a                  	// #58
  44a460:	str	x9, [x19, #256]
  44a464:	strb	w10, [x19, x8]
  44a468:	strb	w10, [x19, #264]
  44a46c:	ldr	w8, [x21, #8]
  44a470:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44a474:	add	x1, x1, #0xdb1
  44a478:	add	x0, sp, #0x10
  44a47c:	add	w2, w8, #0x1
  44a480:	bl	402880 <sprintf@plt>
  44a484:	add	x0, sp, #0x10
  44a488:	bl	4026d0 <strlen@plt>
  44a48c:	cbz	x0, 44c43c <feof@plt+0x4973c>
  44a490:	mov	x20, x0
  44a494:	add	x21, sp, #0x10
  44a498:	b	44a4b8 <feof@plt+0x477b8>
  44a49c:	add	x9, x8, #0x1
  44a4a0:	subs	x20, x20, #0x1
  44a4a4:	add	x21, x21, #0x1
  44a4a8:	str	x9, [x19, #256]
  44a4ac:	strb	w22, [x19, x8]
  44a4b0:	strb	w22, [x19, #264]
  44a4b4:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44a4b8:	ldr	x8, [x19, #256]
  44a4bc:	ldrb	w22, [x21]
  44a4c0:	cmp	x8, #0xff
  44a4c4:	b.ne	44a49c <feof@plt+0x4779c>  // b.any
  44a4c8:	ldp	x8, x2, [x19, #272]
  44a4cc:	mov	w1, #0xff                  	// #255
  44a4d0:	mov	x0, x19
  44a4d4:	strb	wzr, [x19, #255]
  44a4d8:	blr	x8
  44a4dc:	ldr	x9, [x19, #320]
  44a4e0:	mov	x8, xzr
  44a4e4:	str	xzr, [x19, #256]
  44a4e8:	add	x9, x9, #0x1
  44a4ec:	str	x9, [x19, #320]
  44a4f0:	b	44a49c <feof@plt+0x4779c>
  44a4f4:	ldr	x8, [x19, #256]
  44a4f8:	ldr	x20, [x21, #8]
  44a4fc:	cmp	x8, #0xff
  44a500:	cbz	x20, 44cdec <feof@plt+0x4a0ec>
  44a504:	b.ne	44a530 <feof@plt+0x47830>  // b.any
  44a508:	ldp	x8, x2, [x19, #272]
  44a50c:	mov	w1, #0xff                  	// #255
  44a510:	mov	x0, x19
  44a514:	strb	wzr, [x19, #255]
  44a518:	blr	x8
  44a51c:	ldr	x9, [x19, #320]
  44a520:	mov	x8, xzr
  44a524:	str	xzr, [x19, #256]
  44a528:	add	x9, x9, #0x1
  44a52c:	str	x9, [x19, #320]
  44a530:	add	x9, x8, #0x1
  44a534:	mov	w10, #0x7b                  	// #123
  44a538:	str	x9, [x19, #256]
  44a53c:	strb	w10, [x19, x8]
  44a540:	ldr	x8, [x19, #256]
  44a544:	strb	w10, [x19, #264]
  44a548:	cmp	x8, #0xff
  44a54c:	b.ne	44a578 <feof@plt+0x47878>  // b.any
  44a550:	ldp	x8, x2, [x19, #272]
  44a554:	mov	w1, #0xff                  	// #255
  44a558:	mov	x0, x19
  44a55c:	strb	wzr, [x19, #255]
  44a560:	blr	x8
  44a564:	ldr	x9, [x19, #320]
  44a568:	mov	x8, xzr
  44a56c:	str	xzr, [x19, #256]
  44a570:	add	x9, x9, #0x1
  44a574:	str	x9, [x19, #320]
  44a578:	add	x9, x8, #0x1
  44a57c:	mov	w10, #0x70                  	// #112
  44a580:	str	x9, [x19, #256]
  44a584:	strb	w10, [x19, x8]
  44a588:	ldr	x8, [x19, #256]
  44a58c:	strb	w10, [x19, #264]
  44a590:	cmp	x8, #0xff
  44a594:	b.ne	44a5c0 <feof@plt+0x478c0>  // b.any
  44a598:	ldp	x8, x2, [x19, #272]
  44a59c:	mov	w1, #0xff                  	// #255
  44a5a0:	mov	x0, x19
  44a5a4:	strb	wzr, [x19, #255]
  44a5a8:	blr	x8
  44a5ac:	ldr	x9, [x19, #320]
  44a5b0:	mov	x8, xzr
  44a5b4:	str	xzr, [x19, #256]
  44a5b8:	add	x9, x9, #0x1
  44a5bc:	str	x9, [x19, #320]
  44a5c0:	add	x9, x8, #0x1
  44a5c4:	mov	w10, #0x61                  	// #97
  44a5c8:	str	x9, [x19, #256]
  44a5cc:	strb	w10, [x19, x8]
  44a5d0:	ldr	x8, [x19, #256]
  44a5d4:	strb	w10, [x19, #264]
  44a5d8:	cmp	x8, #0xff
  44a5dc:	b.ne	44a608 <feof@plt+0x47908>  // b.any
  44a5e0:	ldp	x8, x2, [x19, #272]
  44a5e4:	mov	w1, #0xff                  	// #255
  44a5e8:	mov	x0, x19
  44a5ec:	strb	wzr, [x19, #255]
  44a5f0:	blr	x8
  44a5f4:	ldr	x9, [x19, #320]
  44a5f8:	mov	x8, xzr
  44a5fc:	str	xzr, [x19, #256]
  44a600:	add	x9, x9, #0x1
  44a604:	str	x9, [x19, #320]
  44a608:	add	x9, x8, #0x1
  44a60c:	mov	w10, #0x72                  	// #114
  44a610:	str	x9, [x19, #256]
  44a614:	strb	w10, [x19, x8]
  44a618:	ldr	x8, [x19, #256]
  44a61c:	strb	w10, [x19, #264]
  44a620:	cmp	x8, #0xff
  44a624:	b.ne	44a650 <feof@plt+0x47950>  // b.any
  44a628:	ldp	x8, x2, [x19, #272]
  44a62c:	mov	w1, #0xff                  	// #255
  44a630:	mov	x0, x19
  44a634:	strb	wzr, [x19, #255]
  44a638:	blr	x8
  44a63c:	ldr	x9, [x19, #320]
  44a640:	mov	x8, xzr
  44a644:	str	xzr, [x19, #256]
  44a648:	add	x9, x9, #0x1
  44a64c:	str	x9, [x19, #320]
  44a650:	add	x9, x8, #0x1
  44a654:	mov	w10, #0x6d                  	// #109
  44a658:	str	x9, [x19, #256]
  44a65c:	strb	w10, [x19, x8]
  44a660:	ldr	x8, [x19, #256]
  44a664:	strb	w10, [x19, #264]
  44a668:	cmp	x8, #0xff
  44a66c:	b.ne	44a698 <feof@plt+0x47998>  // b.any
  44a670:	ldp	x8, x2, [x19, #272]
  44a674:	mov	w1, #0xff                  	// #255
  44a678:	mov	x0, x19
  44a67c:	strb	wzr, [x19, #255]
  44a680:	blr	x8
  44a684:	ldr	x9, [x19, #320]
  44a688:	mov	x8, xzr
  44a68c:	str	xzr, [x19, #256]
  44a690:	add	x9, x9, #0x1
  44a694:	str	x9, [x19, #320]
  44a698:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44a69c:	add	x9, x8, #0x1
  44a6a0:	mov	w10, #0x23                  	// #35
  44a6a4:	add	x1, x1, #0xdb1
  44a6a8:	add	x0, sp, #0x10
  44a6ac:	mov	w2, w20
  44a6b0:	str	x9, [x19, #256]
  44a6b4:	strb	w10, [x19, x8]
  44a6b8:	strb	w10, [x19, #264]
  44a6bc:	bl	402880 <sprintf@plt>
  44a6c0:	add	x0, sp, #0x10
  44a6c4:	bl	4026d0 <strlen@plt>
  44a6c8:	cbz	x0, 44db40 <feof@plt+0x4ae40>
  44a6cc:	mov	x20, x0
  44a6d0:	add	x21, sp, #0x10
  44a6d4:	b	44a6f4 <feof@plt+0x479f4>
  44a6d8:	add	x9, x8, #0x1
  44a6dc:	subs	x20, x20, #0x1
  44a6e0:	add	x21, x21, #0x1
  44a6e4:	str	x9, [x19, #256]
  44a6e8:	strb	w22, [x19, x8]
  44a6ec:	strb	w22, [x19, #264]
  44a6f0:	b.eq	44db40 <feof@plt+0x4ae40>  // b.none
  44a6f4:	ldr	x8, [x19, #256]
  44a6f8:	ldrb	w22, [x21]
  44a6fc:	cmp	x8, #0xff
  44a700:	b.ne	44a6d8 <feof@plt+0x479d8>  // b.any
  44a704:	ldp	x8, x2, [x19, #272]
  44a708:	mov	w1, #0xff                  	// #255
  44a70c:	mov	x0, x19
  44a710:	strb	wzr, [x19, #255]
  44a714:	blr	x8
  44a718:	ldr	x9, [x19, #320]
  44a71c:	mov	x8, xzr
  44a720:	str	xzr, [x19, #256]
  44a724:	add	x9, x9, #0x1
  44a728:	str	x9, [x19, #320]
  44a72c:	b	44a6d8 <feof@plt+0x479d8>
  44a730:	ldr	x8, [x19, #256]
  44a734:	cmp	x8, #0xff
  44a738:	b.ne	44a764 <feof@plt+0x47a64>  // b.any
  44a73c:	ldp	x8, x2, [x19, #272]
  44a740:	mov	w1, #0xff                  	// #255
  44a744:	mov	x0, x19
  44a748:	strb	wzr, [x19, #255]
  44a74c:	blr	x8
  44a750:	ldr	x9, [x19, #320]
  44a754:	mov	x8, xzr
  44a758:	str	xzr, [x19, #256]
  44a75c:	add	x9, x9, #0x1
  44a760:	str	x9, [x19, #320]
  44a764:	add	x9, x8, #0x1
  44a768:	mov	w10, #0x7e                  	// #126
  44a76c:	b	44c26c <feof@plt+0x4956c>
  44a770:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a774:	mov	x22, xzr
  44a778:	add	x23, x23, #0xe24
  44a77c:	b	44a79c <feof@plt+0x47a9c>
  44a780:	add	x22, x22, #0x1
  44a784:	add	x9, x8, #0x1
  44a788:	cmp	x22, #0xb
  44a78c:	str	x9, [x19, #256]
  44a790:	strb	w24, [x19, x8]
  44a794:	strb	w24, [x19, #264]
  44a798:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44a79c:	ldr	x8, [x19, #256]
  44a7a0:	ldrb	w24, [x23, x22]
  44a7a4:	cmp	x8, #0xff
  44a7a8:	b.ne	44a780 <feof@plt+0x47a80>  // b.any
  44a7ac:	ldp	x8, x2, [x19, #272]
  44a7b0:	mov	w1, #0xff                  	// #255
  44a7b4:	mov	x0, x19
  44a7b8:	strb	wzr, [x19, #255]
  44a7bc:	blr	x8
  44a7c0:	ldr	x9, [x19, #320]
  44a7c4:	mov	x8, xzr
  44a7c8:	str	xzr, [x19, #256]
  44a7cc:	add	x9, x9, #0x1
  44a7d0:	str	x9, [x19, #320]
  44a7d4:	b	44a780 <feof@plt+0x47a80>
  44a7d8:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a7dc:	mov	x22, xzr
  44a7e0:	add	x23, x23, #0xe0e
  44a7e4:	b	44a804 <feof@plt+0x47b04>
  44a7e8:	add	x22, x22, #0x1
  44a7ec:	add	x9, x8, #0x1
  44a7f0:	cmp	x22, #0x8
  44a7f4:	str	x9, [x19, #256]
  44a7f8:	strb	w24, [x19, x8]
  44a7fc:	strb	w24, [x19, #264]
  44a800:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44a804:	ldr	x8, [x19, #256]
  44a808:	ldrb	w24, [x23, x22]
  44a80c:	cmp	x8, #0xff
  44a810:	b.ne	44a7e8 <feof@plt+0x47ae8>  // b.any
  44a814:	ldp	x8, x2, [x19, #272]
  44a818:	mov	w1, #0xff                  	// #255
  44a81c:	mov	x0, x19
  44a820:	strb	wzr, [x19, #255]
  44a824:	blr	x8
  44a828:	ldr	x9, [x19, #320]
  44a82c:	mov	x8, xzr
  44a830:	str	xzr, [x19, #256]
  44a834:	add	x9, x9, #0x1
  44a838:	str	x9, [x19, #320]
  44a83c:	b	44a7e8 <feof@plt+0x47ae8>
  44a840:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a844:	mov	x22, xzr
  44a848:	add	x23, x23, #0xe17
  44a84c:	b	44a86c <feof@plt+0x47b6c>
  44a850:	add	x22, x22, #0x1
  44a854:	add	x9, x8, #0x1
  44a858:	cmp	x22, #0x18
  44a85c:	str	x9, [x19, #256]
  44a860:	strb	w24, [x19, x8]
  44a864:	strb	w24, [x19, #264]
  44a868:	b.eq	44c130 <feof@plt+0x49430>  // b.none
  44a86c:	ldr	x8, [x19, #256]
  44a870:	ldrb	w24, [x23, x22]
  44a874:	cmp	x8, #0xff
  44a878:	b.ne	44a850 <feof@plt+0x47b50>  // b.any
  44a87c:	ldp	x8, x2, [x19, #272]
  44a880:	mov	w1, #0xff                  	// #255
  44a884:	mov	x0, x19
  44a888:	strb	wzr, [x19, #255]
  44a88c:	blr	x8
  44a890:	ldr	x9, [x19, #320]
  44a894:	mov	x8, xzr
  44a898:	str	xzr, [x19, #256]
  44a89c:	add	x9, x9, #0x1
  44a8a0:	str	x9, [x19, #320]
  44a8a4:	b	44a850 <feof@plt+0x47b50>
  44a8a8:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a8ac:	mov	x22, xzr
  44a8b0:	add	x23, x23, #0xe30
  44a8b4:	b	44a8d4 <feof@plt+0x47bd4>
  44a8b8:	add	x22, x22, #0x1
  44a8bc:	add	x9, x8, #0x1
  44a8c0:	cmp	x22, #0xd
  44a8c4:	str	x9, [x19, #256]
  44a8c8:	strb	w24, [x19, x8]
  44a8cc:	strb	w24, [x19, #264]
  44a8d0:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44a8d4:	ldr	x8, [x19, #256]
  44a8d8:	ldrb	w24, [x23, x22]
  44a8dc:	cmp	x8, #0xff
  44a8e0:	b.ne	44a8b8 <feof@plt+0x47bb8>  // b.any
  44a8e4:	ldp	x8, x2, [x19, #272]
  44a8e8:	mov	w1, #0xff                  	// #255
  44a8ec:	mov	x0, x19
  44a8f0:	strb	wzr, [x19, #255]
  44a8f4:	blr	x8
  44a8f8:	ldr	x9, [x19, #320]
  44a8fc:	mov	x8, xzr
  44a900:	str	xzr, [x19, #256]
  44a904:	add	x9, x9, #0x1
  44a908:	str	x9, [x19, #320]
  44a90c:	b	44a8b8 <feof@plt+0x47bb8>
  44a910:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a914:	mov	x22, xzr
  44a918:	add	x23, x23, #0xe3e
  44a91c:	b	44a93c <feof@plt+0x47c3c>
  44a920:	add	x22, x22, #0x1
  44a924:	add	x9, x8, #0x1
  44a928:	cmp	x22, #0x12
  44a92c:	str	x9, [x19, #256]
  44a930:	strb	w24, [x19, x8]
  44a934:	strb	w24, [x19, #264]
  44a938:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44a93c:	ldr	x8, [x19, #256]
  44a940:	ldrb	w24, [x23, x22]
  44a944:	cmp	x8, #0xff
  44a948:	b.ne	44a920 <feof@plt+0x47c20>  // b.any
  44a94c:	ldp	x8, x2, [x19, #272]
  44a950:	mov	w1, #0xff                  	// #255
  44a954:	mov	x0, x19
  44a958:	strb	wzr, [x19, #255]
  44a95c:	blr	x8
  44a960:	ldr	x9, [x19, #320]
  44a964:	mov	x8, xzr
  44a968:	str	xzr, [x19, #256]
  44a96c:	add	x9, x9, #0x1
  44a970:	str	x9, [x19, #320]
  44a974:	b	44a920 <feof@plt+0x47c20>
  44a978:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a97c:	mov	x22, xzr
  44a980:	add	x23, x23, #0xe51
  44a984:	b	44a9a4 <feof@plt+0x47ca4>
  44a988:	add	x22, x22, #0x1
  44a98c:	add	x9, x8, #0x1
  44a990:	cmp	x22, #0x10
  44a994:	str	x9, [x19, #256]
  44a998:	strb	w24, [x19, x8]
  44a99c:	strb	w24, [x19, #264]
  44a9a0:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44a9a4:	ldr	x8, [x19, #256]
  44a9a8:	ldrb	w24, [x23, x22]
  44a9ac:	cmp	x8, #0xff
  44a9b0:	b.ne	44a988 <feof@plt+0x47c88>  // b.any
  44a9b4:	ldp	x8, x2, [x19, #272]
  44a9b8:	mov	w1, #0xff                  	// #255
  44a9bc:	mov	x0, x19
  44a9c0:	strb	wzr, [x19, #255]
  44a9c4:	blr	x8
  44a9c8:	ldr	x9, [x19, #320]
  44a9cc:	mov	x8, xzr
  44a9d0:	str	xzr, [x19, #256]
  44a9d4:	add	x9, x9, #0x1
  44a9d8:	str	x9, [x19, #320]
  44a9dc:	b	44a988 <feof@plt+0x47c88>
  44a9e0:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44a9e4:	mov	x22, xzr
  44a9e8:	add	x23, x23, #0xe62
  44a9ec:	b	44aa0c <feof@plt+0x47d0c>
  44a9f0:	add	x22, x22, #0x1
  44a9f4:	add	x9, x8, #0x1
  44a9f8:	cmp	x22, #0x15
  44a9fc:	str	x9, [x19, #256]
  44aa00:	strb	w24, [x19, x8]
  44aa04:	strb	w24, [x19, #264]
  44aa08:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44aa0c:	ldr	x8, [x19, #256]
  44aa10:	ldrb	w24, [x23, x22]
  44aa14:	cmp	x8, #0xff
  44aa18:	b.ne	44a9f0 <feof@plt+0x47cf0>  // b.any
  44aa1c:	ldp	x8, x2, [x19, #272]
  44aa20:	mov	w1, #0xff                  	// #255
  44aa24:	mov	x0, x19
  44aa28:	strb	wzr, [x19, #255]
  44aa2c:	blr	x8
  44aa30:	ldr	x9, [x19, #320]
  44aa34:	mov	x8, xzr
  44aa38:	str	xzr, [x19, #256]
  44aa3c:	add	x9, x9, #0x1
  44aa40:	str	x9, [x19, #320]
  44aa44:	b	44a9f0 <feof@plt+0x47cf0>
  44aa48:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44aa4c:	mov	x22, xzr
  44aa50:	add	x23, x23, #0xe66
  44aa54:	b	44aa74 <feof@plt+0x47d74>
  44aa58:	add	x22, x22, #0x1
  44aa5c:	add	x9, x8, #0x1
  44aa60:	cmp	x22, #0x11
  44aa64:	str	x9, [x19, #256]
  44aa68:	strb	w24, [x19, x8]
  44aa6c:	strb	w24, [x19, #264]
  44aa70:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44aa74:	ldr	x8, [x19, #256]
  44aa78:	ldrb	w24, [x23, x22]
  44aa7c:	cmp	x8, #0xff
  44aa80:	b.ne	44aa58 <feof@plt+0x47d58>  // b.any
  44aa84:	ldp	x8, x2, [x19, #272]
  44aa88:	mov	w1, #0xff                  	// #255
  44aa8c:	mov	x0, x19
  44aa90:	strb	wzr, [x19, #255]
  44aa94:	blr	x8
  44aa98:	ldr	x9, [x19, #320]
  44aa9c:	mov	x8, xzr
  44aaa0:	str	xzr, [x19, #256]
  44aaa4:	add	x9, x9, #0x1
  44aaa8:	str	x9, [x19, #320]
  44aaac:	b	44aa58 <feof@plt+0x47d58>
  44aab0:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44aab4:	mov	x22, xzr
  44aab8:	add	x23, x23, #0xe78
  44aabc:	b	44aadc <feof@plt+0x47ddc>
  44aac0:	add	x22, x22, #0x1
  44aac4:	add	x9, x8, #0x1
  44aac8:	cmp	x22, #0x1a
  44aacc:	str	x9, [x19, #256]
  44aad0:	strb	w24, [x19, x8]
  44aad4:	strb	w24, [x19, #264]
  44aad8:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44aadc:	ldr	x8, [x19, #256]
  44aae0:	ldrb	w24, [x23, x22]
  44aae4:	cmp	x8, #0xff
  44aae8:	b.ne	44aac0 <feof@plt+0x47dc0>  // b.any
  44aaec:	ldp	x8, x2, [x19, #272]
  44aaf0:	mov	w1, #0xff                  	// #255
  44aaf4:	mov	x0, x19
  44aaf8:	strb	wzr, [x19, #255]
  44aafc:	blr	x8
  44ab00:	ldr	x9, [x19, #320]
  44ab04:	mov	x8, xzr
  44ab08:	str	xzr, [x19, #256]
  44ab0c:	add	x9, x9, #0x1
  44ab10:	str	x9, [x19, #320]
  44ab14:	b	44aac0 <feof@plt+0x47dc0>
  44ab18:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44ab1c:	mov	x22, xzr
  44ab20:	add	x23, x23, #0xe93
  44ab24:	b	44ab44 <feof@plt+0x47e44>
  44ab28:	add	x22, x22, #0x1
  44ab2c:	add	x9, x8, #0x1
  44ab30:	cmp	x22, #0xf
  44ab34:	str	x9, [x19, #256]
  44ab38:	strb	w24, [x19, x8]
  44ab3c:	strb	w24, [x19, #264]
  44ab40:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44ab44:	ldr	x8, [x19, #256]
  44ab48:	ldrb	w24, [x23, x22]
  44ab4c:	cmp	x8, #0xff
  44ab50:	b.ne	44ab28 <feof@plt+0x47e28>  // b.any
  44ab54:	ldp	x8, x2, [x19, #272]
  44ab58:	mov	w1, #0xff                  	// #255
  44ab5c:	mov	x0, x19
  44ab60:	strb	wzr, [x19, #255]
  44ab64:	blr	x8
  44ab68:	ldr	x9, [x19, #320]
  44ab6c:	mov	x8, xzr
  44ab70:	str	xzr, [x19, #256]
  44ab74:	add	x9, x9, #0x1
  44ab78:	str	x9, [x19, #320]
  44ab7c:	b	44ab28 <feof@plt+0x47e28>
  44ab80:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44ab84:	mov	x22, xzr
  44ab88:	add	x23, x23, #0xea3
  44ab8c:	b	44abac <feof@plt+0x47eac>
  44ab90:	add	x22, x22, #0x1
  44ab94:	add	x9, x8, #0x1
  44ab98:	cmp	x22, #0x13
  44ab9c:	str	x9, [x19, #256]
  44aba0:	strb	w24, [x19, x8]
  44aba4:	strb	w24, [x19, #264]
  44aba8:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44abac:	ldr	x8, [x19, #256]
  44abb0:	ldrb	w24, [x23, x22]
  44abb4:	cmp	x8, #0xff
  44abb8:	b.ne	44ab90 <feof@plt+0x47e90>  // b.any
  44abbc:	ldp	x8, x2, [x19, #272]
  44abc0:	mov	w1, #0xff                  	// #255
  44abc4:	mov	x0, x19
  44abc8:	strb	wzr, [x19, #255]
  44abcc:	blr	x8
  44abd0:	ldr	x9, [x19, #320]
  44abd4:	mov	x8, xzr
  44abd8:	str	xzr, [x19, #256]
  44abdc:	add	x9, x9, #0x1
  44abe0:	str	x9, [x19, #320]
  44abe4:	b	44ab90 <feof@plt+0x47e90>
  44abe8:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44abec:	mov	x22, xzr
  44abf0:	add	x23, x23, #0xeb7
  44abf4:	b	44ac14 <feof@plt+0x47f14>
  44abf8:	add	x22, x22, #0x1
  44abfc:	add	x9, x8, #0x1
  44ac00:	cmp	x22, #0x16
  44ac04:	str	x9, [x19, #256]
  44ac08:	strb	w24, [x19, x8]
  44ac0c:	strb	w24, [x19, #264]
  44ac10:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44ac14:	ldr	x8, [x19, #256]
  44ac18:	ldrb	w24, [x23, x22]
  44ac1c:	cmp	x8, #0xff
  44ac20:	b.ne	44abf8 <feof@plt+0x47ef8>  // b.any
  44ac24:	ldp	x8, x2, [x19, #272]
  44ac28:	mov	w1, #0xff                  	// #255
  44ac2c:	mov	x0, x19
  44ac30:	strb	wzr, [x19, #255]
  44ac34:	blr	x8
  44ac38:	ldr	x9, [x19, #320]
  44ac3c:	mov	x8, xzr
  44ac40:	str	xzr, [x19, #256]
  44ac44:	add	x9, x9, #0x1
  44ac48:	str	x9, [x19, #320]
  44ac4c:	b	44abf8 <feof@plt+0x47ef8>
  44ac50:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44ac54:	mov	x22, xzr
  44ac58:	add	x23, x23, #0xece
  44ac5c:	b	44ac7c <feof@plt+0x47f7c>
  44ac60:	add	x22, x22, #0x1
  44ac64:	add	x9, x8, #0x1
  44ac68:	cmp	x22, #0x19
  44ac6c:	str	x9, [x19, #256]
  44ac70:	strb	w24, [x19, x8]
  44ac74:	strb	w24, [x19, #264]
  44ac78:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44ac7c:	ldr	x8, [x19, #256]
  44ac80:	ldrb	w24, [x23, x22]
  44ac84:	cmp	x8, #0xff
  44ac88:	b.ne	44ac60 <feof@plt+0x47f60>  // b.any
  44ac8c:	ldp	x8, x2, [x19, #272]
  44ac90:	mov	w1, #0xff                  	// #255
  44ac94:	mov	x0, x19
  44ac98:	strb	wzr, [x19, #255]
  44ac9c:	blr	x8
  44aca0:	ldr	x9, [x19, #320]
  44aca4:	mov	x8, xzr
  44aca8:	str	xzr, [x19, #256]
  44acac:	add	x9, x9, #0x1
  44acb0:	str	x9, [x19, #320]
  44acb4:	b	44ac60 <feof@plt+0x47f60>
  44acb8:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44acbc:	mov	x22, xzr
  44acc0:	add	x23, x23, #0xee8
  44acc4:	b	44ace4 <feof@plt+0x47fe4>
  44acc8:	add	x22, x22, #0x1
  44accc:	add	x9, x8, #0x1
  44acd0:	cmp	x22, #0x15
  44acd4:	str	x9, [x19, #256]
  44acd8:	strb	w24, [x19, x8]
  44acdc:	strb	w24, [x19, #264]
  44ace0:	b.eq	44c284 <feof@plt+0x49584>  // b.none
  44ace4:	ldr	x8, [x19, #256]
  44ace8:	ldrb	w24, [x23, x22]
  44acec:	cmp	x8, #0xff
  44acf0:	b.ne	44acc8 <feof@plt+0x47fc8>  // b.any
  44acf4:	ldp	x8, x2, [x19, #272]
  44acf8:	mov	w1, #0xff                  	// #255
  44acfc:	mov	x0, x19
  44ad00:	strb	wzr, [x19, #255]
  44ad04:	blr	x8
  44ad08:	ldr	x9, [x19, #320]
  44ad0c:	mov	x8, xzr
  44ad10:	str	xzr, [x19, #256]
  44ad14:	add	x9, x9, #0x1
  44ad18:	str	x9, [x19, #320]
  44ad1c:	b	44acc8 <feof@plt+0x47fc8>
  44ad20:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44ad24:	mov	x22, xzr
  44ad28:	add	x23, x23, #0xefe
  44ad2c:	b	44ad4c <feof@plt+0x4804c>
  44ad30:	add	x22, x22, #0x1
  44ad34:	add	x9, x8, #0x1
  44ad38:	cmp	x22, #0x11
  44ad3c:	str	x9, [x19, #256]
  44ad40:	strb	w24, [x19, x8]
  44ad44:	strb	w24, [x19, #264]
  44ad48:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44ad4c:	ldr	x8, [x19, #256]
  44ad50:	ldrb	w24, [x23, x22]
  44ad54:	cmp	x8, #0xff
  44ad58:	b.ne	44ad30 <feof@plt+0x48030>  // b.any
  44ad5c:	ldp	x8, x2, [x19, #272]
  44ad60:	mov	w1, #0xff                  	// #255
  44ad64:	mov	x0, x19
  44ad68:	strb	wzr, [x19, #255]
  44ad6c:	blr	x8
  44ad70:	ldr	x9, [x19, #320]
  44ad74:	mov	x8, xzr
  44ad78:	str	xzr, [x19, #256]
  44ad7c:	add	x9, x9, #0x1
  44ad80:	str	x9, [x19, #320]
  44ad84:	b	44ad30 <feof@plt+0x48030>
  44ad88:	ldrsw	x20, [x21, #16]
  44ad8c:	cbz	w20, 44c43c <feof@plt+0x4973c>
  44ad90:	ldr	x21, [x21, #8]
  44ad94:	b	44adb4 <feof@plt+0x480b4>
  44ad98:	add	x9, x8, #0x1
  44ad9c:	subs	x20, x20, #0x1
  44ada0:	add	x21, x21, #0x1
  44ada4:	str	x9, [x19, #256]
  44ada8:	strb	w22, [x19, x8]
  44adac:	strb	w22, [x19, #264]
  44adb0:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44adb4:	ldr	x8, [x19, #256]
  44adb8:	ldrb	w22, [x21]
  44adbc:	cmp	x8, #0xff
  44adc0:	b.ne	44ad98 <feof@plt+0x48098>  // b.any
  44adc4:	ldp	x8, x2, [x19, #272]
  44adc8:	mov	w1, #0xff                  	// #255
  44adcc:	mov	x0, x19
  44add0:	strb	wzr, [x19, #255]
  44add4:	blr	x8
  44add8:	ldr	x9, [x19, #320]
  44addc:	mov	x8, xzr
  44ade0:	str	xzr, [x19, #256]
  44ade4:	add	x9, x9, #0x1
  44ade8:	str	x9, [x19, #320]
  44adec:	b	44ad98 <feof@plt+0x48098>
  44adf0:	ldr	x8, [x21, #8]
  44adf4:	tbnz	w20, #2, 44caf0 <feof@plt+0x49df0>
  44adf8:	ldrsw	x20, [x8, #8]
  44adfc:	cbz	w20, 44c43c <feof@plt+0x4973c>
  44ae00:	ldr	x21, [x8]
  44ae04:	b	44ae24 <feof@plt+0x48124>
  44ae08:	add	x9, x8, #0x1
  44ae0c:	subs	x20, x20, #0x1
  44ae10:	add	x21, x21, #0x1
  44ae14:	str	x9, [x19, #256]
  44ae18:	strb	w22, [x19, x8]
  44ae1c:	strb	w22, [x19, #264]
  44ae20:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44ae24:	ldr	x8, [x19, #256]
  44ae28:	ldrb	w22, [x21]
  44ae2c:	cmp	x8, #0xff
  44ae30:	b.ne	44ae08 <feof@plt+0x48108>  // b.any
  44ae34:	ldp	x8, x2, [x19, #272]
  44ae38:	mov	w1, #0xff                  	// #255
  44ae3c:	mov	x0, x19
  44ae40:	strb	wzr, [x19, #255]
  44ae44:	blr	x8
  44ae48:	ldr	x9, [x19, #320]
  44ae4c:	mov	x8, xzr
  44ae50:	str	xzr, [x19, #256]
  44ae54:	add	x9, x9, #0x1
  44ae58:	str	x9, [x19, #320]
  44ae5c:	b	44ae08 <feof@plt+0x48108>
  44ae60:	tbnz	w20, #5, 44cb58 <feof@plt+0x49e58>
  44ae64:	tbnz	w20, #6, 44af00 <feof@plt+0x48200>
  44ae68:	ldr	x8, [x21, #8]
  44ae6c:	cbz	x8, 44af00 <feof@plt+0x48200>
  44ae70:	ldr	x8, [x19, #296]
  44ae74:	add	x9, sp, #0x10
  44ae78:	stp	x8, x21, [sp, #16]
  44ae7c:	str	x9, [x19, #296]
  44ae80:	str	wzr, [sp, #32]
  44ae84:	ldr	x9, [x19, #288]
  44ae88:	str	x9, [sp, #40]
  44ae8c:	ldr	x22, [x21, #8]
  44ae90:	cbz	x22, 44aeac <feof@plt+0x481ac>
  44ae94:	ldr	w9, [x22, #4]
  44ae98:	cmp	w9, #0x1
  44ae9c:	b.gt	44aeac <feof@plt+0x481ac>
  44aea0:	ldr	w10, [x19, #308]
  44aea4:	cmp	w10, #0x401
  44aea8:	b.lt	44e880 <feof@plt+0x4bb80>  // b.tstop
  44aeac:	mov	w9, #0x1                   	// #1
  44aeb0:	str	w9, [x19, #304]
  44aeb4:	str	x8, [x19, #296]
  44aeb8:	ldr	x8, [x19, #256]
  44aebc:	cmp	x8, #0xff
  44aec0:	b.ne	44aeec <feof@plt+0x481ec>  // b.any
  44aec4:	ldp	x8, x2, [x19, #272]
  44aec8:	mov	w1, #0xff                  	// #255
  44aecc:	mov	x0, x19
  44aed0:	strb	wzr, [x19, #255]
  44aed4:	blr	x8
  44aed8:	ldr	x9, [x19, #320]
  44aedc:	mov	x8, xzr
  44aee0:	str	xzr, [x19, #256]
  44aee4:	add	x9, x9, #0x1
  44aee8:	str	x9, [x19, #320]
  44aeec:	add	x9, x8, #0x1
  44aef0:	mov	w10, #0x20                  	// #32
  44aef4:	str	x9, [x19, #256]
  44aef8:	strb	w10, [x19, x8]
  44aefc:	strb	w10, [x19, #264]
  44af00:	ldr	x3, [x19, #296]
  44af04:	and	w1, w20, #0xffffff9f
  44af08:	mov	x0, x19
  44af0c:	mov	x2, x21
  44af10:	bl	450b68 <feof@plt+0x4de68>
  44af14:	b	44c43c <feof@plt+0x4973c>
  44af18:	ldp	x9, x22, [x19, #288]
  44af1c:	add	x8, sp, #0x10
  44af20:	stp	x22, x21, [sp, #16]
  44af24:	str	x8, [x19, #296]
  44af28:	str	x9, [sp, #40]
  44af2c:	mov	w9, #0x1                   	// #1
  44af30:	str	wzr, [sp, #32]
  44af34:	cbz	x22, 44cefc <feof@plt+0x4a1fc>
  44af38:	add	x11, sp, #0x10
  44af3c:	mov	w24, #0x1                   	// #1
  44af40:	mov	x10, x22
  44af44:	b	44af74 <feof@plt+0x48274>
  44af48:	ldp	q0, q1, [x10]
  44af4c:	mov	w12, w24
  44af50:	add	x12, x8, x12, lsl #5
  44af54:	add	w24, w24, #0x1
  44af58:	stp	q0, q1, [x12]
  44af5c:	str	x11, [x12]
  44af60:	mov	x11, x12
  44af64:	str	x12, [x19, #296]
  44af68:	str	w9, [x10, #16]
  44af6c:	ldr	x10, [x10]
  44af70:	cbz	x10, 44cf00 <feof@plt+0x4a200>
  44af74:	ldr	x12, [x10, #8]
  44af78:	ldr	w12, [x12]
  44af7c:	sub	w12, w12, #0x19
  44af80:	cmp	w12, #0x2
  44af84:	b.hi	44cf00 <feof@plt+0x4a200>  // b.pmore
  44af88:	ldr	w12, [x10, #16]
  44af8c:	cbnz	w12, 44af6c <feof@plt+0x4826c>
  44af90:	cmp	w24, #0x4
  44af94:	b.cc	44af48 <feof@plt+0x48248>  // b.lo, b.ul, b.last
  44af98:	b	44c434 <feof@plt+0x49734>
  44af9c:	ldrh	w8, [x21, #18]
  44afa0:	cbz	w8, 44b10c <feof@plt+0x4840c>
  44afa4:	ldr	x8, [x19, #256]
  44afa8:	cmp	x8, #0xff
  44afac:	b.ne	44afd8 <feof@plt+0x482d8>  // b.any
  44afb0:	ldp	x8, x2, [x19, #272]
  44afb4:	mov	w1, #0xff                  	// #255
  44afb8:	mov	x0, x19
  44afbc:	strb	wzr, [x19, #255]
  44afc0:	blr	x8
  44afc4:	ldr	x9, [x19, #320]
  44afc8:	mov	x8, xzr
  44afcc:	str	xzr, [x19, #256]
  44afd0:	add	x9, x9, #0x1
  44afd4:	str	x9, [x19, #320]
  44afd8:	add	x9, x8, #0x1
  44afdc:	mov	w10, #0x5f                  	// #95
  44afe0:	str	x9, [x19, #256]
  44afe4:	strb	w10, [x19, x8]
  44afe8:	ldr	x8, [x19, #256]
  44afec:	strb	w10, [x19, #264]
  44aff0:	cmp	x8, #0xff
  44aff4:	b.ne	44b020 <feof@plt+0x48320>  // b.any
  44aff8:	ldp	x8, x2, [x19, #272]
  44affc:	mov	w1, #0xff                  	// #255
  44b000:	mov	x0, x19
  44b004:	strb	wzr, [x19, #255]
  44b008:	blr	x8
  44b00c:	ldr	x9, [x19, #320]
  44b010:	mov	x8, xzr
  44b014:	str	xzr, [x19, #256]
  44b018:	add	x9, x9, #0x1
  44b01c:	str	x9, [x19, #320]
  44b020:	add	x9, x8, #0x1
  44b024:	mov	w10, #0x53                  	// #83
  44b028:	str	x9, [x19, #256]
  44b02c:	strb	w10, [x19, x8]
  44b030:	ldr	x8, [x19, #256]
  44b034:	strb	w10, [x19, #264]
  44b038:	cmp	x8, #0xff
  44b03c:	b.ne	44b068 <feof@plt+0x48368>  // b.any
  44b040:	ldp	x8, x2, [x19, #272]
  44b044:	mov	w1, #0xff                  	// #255
  44b048:	mov	x0, x19
  44b04c:	strb	wzr, [x19, #255]
  44b050:	blr	x8
  44b054:	ldr	x9, [x19, #320]
  44b058:	mov	x8, xzr
  44b05c:	str	xzr, [x19, #256]
  44b060:	add	x9, x9, #0x1
  44b064:	str	x9, [x19, #320]
  44b068:	add	x9, x8, #0x1
  44b06c:	mov	w10, #0x61                  	// #97
  44b070:	str	x9, [x19, #256]
  44b074:	strb	w10, [x19, x8]
  44b078:	ldr	x8, [x19, #256]
  44b07c:	strb	w10, [x19, #264]
  44b080:	cmp	x8, #0xff
  44b084:	b.ne	44b0b0 <feof@plt+0x483b0>  // b.any
  44b088:	ldp	x8, x2, [x19, #272]
  44b08c:	mov	w1, #0xff                  	// #255
  44b090:	mov	x0, x19
  44b094:	strb	wzr, [x19, #255]
  44b098:	blr	x8
  44b09c:	ldr	x9, [x19, #320]
  44b0a0:	mov	x8, xzr
  44b0a4:	str	xzr, [x19, #256]
  44b0a8:	add	x9, x9, #0x1
  44b0ac:	str	x9, [x19, #320]
  44b0b0:	add	x9, x8, #0x1
  44b0b4:	mov	w10, #0x74                  	// #116
  44b0b8:	str	x9, [x19, #256]
  44b0bc:	strb	w10, [x19, x8]
  44b0c0:	ldr	x8, [x19, #256]
  44b0c4:	strb	w10, [x19, #264]
  44b0c8:	cmp	x8, #0xff
  44b0cc:	b.ne	44b0f8 <feof@plt+0x483f8>  // b.any
  44b0d0:	ldp	x8, x2, [x19, #272]
  44b0d4:	mov	w1, #0xff                  	// #255
  44b0d8:	mov	x0, x19
  44b0dc:	strb	wzr, [x19, #255]
  44b0e0:	blr	x8
  44b0e4:	ldr	x9, [x19, #320]
  44b0e8:	mov	x8, xzr
  44b0ec:	str	xzr, [x19, #256]
  44b0f0:	add	x9, x9, #0x1
  44b0f4:	str	x9, [x19, #320]
  44b0f8:	add	x9, x8, #0x1
  44b0fc:	mov	w10, #0x20                  	// #32
  44b100:	str	x9, [x19, #256]
  44b104:	strb	w10, [x19, x8]
  44b108:	strb	w10, [x19, #264]
  44b10c:	ldr	x22, [x21, #8]
  44b110:	adrp	x9, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44b114:	add	x9, x9, #0x570
  44b118:	ldr	x8, [x22, #8]
  44b11c:	cmp	x8, x9
  44b120:	b.eq	44b190 <feof@plt+0x48490>  // b.none
  44b124:	cbz	x22, 44b140 <feof@plt+0x48440>
  44b128:	ldr	w8, [x22, #4]
  44b12c:	cmp	w8, #0x1
  44b130:	b.gt	44b140 <feof@plt+0x48440>
  44b134:	ldr	w9, [x19, #308]
  44b138:	cmp	w9, #0x401
  44b13c:	b.lt	44e0c4 <feof@plt+0x4b3c4>  // b.tstop
  44b140:	mov	w8, #0x1                   	// #1
  44b144:	str	w8, [x25]
  44b148:	ldr	x8, [x19, #256]
  44b14c:	cmp	x8, #0xff
  44b150:	b.ne	44b17c <feof@plt+0x4847c>  // b.any
  44b154:	ldp	x8, x2, [x19, #272]
  44b158:	mov	w1, #0xff                  	// #255
  44b15c:	mov	x0, x19
  44b160:	strb	wzr, [x19, #255]
  44b164:	blr	x8
  44b168:	ldr	x9, [x19, #320]
  44b16c:	mov	x8, xzr
  44b170:	str	xzr, [x19, #256]
  44b174:	add	x9, x9, #0x1
  44b178:	str	x9, [x19, #320]
  44b17c:	add	x9, x8, #0x1
  44b180:	mov	w10, #0x20                  	// #32
  44b184:	str	x9, [x19, #256]
  44b188:	strb	w10, [x19, x8]
  44b18c:	strb	w10, [x19, #264]
  44b190:	ldr	x8, [x19, #256]
  44b194:	ldrh	w9, [x21, #16]
  44b198:	cmp	x8, #0xff
  44b19c:	cbz	w9, 44cf84 <feof@plt+0x4a284>
  44b1a0:	b.ne	44b1cc <feof@plt+0x484cc>  // b.any
  44b1a4:	ldp	x8, x2, [x19, #272]
  44b1a8:	mov	w1, #0xff                  	// #255
  44b1ac:	mov	x0, x19
  44b1b0:	strb	wzr, [x19, #255]
  44b1b4:	blr	x8
  44b1b8:	ldr	x9, [x19, #320]
  44b1bc:	mov	x8, xzr
  44b1c0:	str	xzr, [x19, #256]
  44b1c4:	add	x9, x9, #0x1
  44b1c8:	str	x9, [x19, #320]
  44b1cc:	add	x9, x8, #0x1
  44b1d0:	mov	w10, #0x5f                  	// #95
  44b1d4:	str	x9, [x19, #256]
  44b1d8:	strb	w10, [x19, x8]
  44b1dc:	ldr	x8, [x19, #256]
  44b1e0:	strb	w10, [x19, #264]
  44b1e4:	cmp	x8, #0xff
  44b1e8:	b.ne	44b214 <feof@plt+0x48514>  // b.any
  44b1ec:	ldp	x8, x2, [x19, #272]
  44b1f0:	mov	w1, #0xff                  	// #255
  44b1f4:	mov	x0, x19
  44b1f8:	strb	wzr, [x19, #255]
  44b1fc:	blr	x8
  44b200:	ldr	x9, [x19, #320]
  44b204:	mov	x8, xzr
  44b208:	str	xzr, [x19, #256]
  44b20c:	add	x9, x9, #0x1
  44b210:	str	x9, [x19, #320]
  44b214:	add	x9, x8, #0x1
  44b218:	mov	w10, #0x41                  	// #65
  44b21c:	str	x9, [x19, #256]
  44b220:	strb	w10, [x19, x8]
  44b224:	ldr	x8, [x19, #256]
  44b228:	strb	w10, [x19, #264]
  44b22c:	cmp	x8, #0xff
  44b230:	b.ne	44b25c <feof@plt+0x4855c>  // b.any
  44b234:	ldp	x8, x2, [x19, #272]
  44b238:	mov	w1, #0xff                  	// #255
  44b23c:	mov	x0, x19
  44b240:	strb	wzr, [x19, #255]
  44b244:	blr	x8
  44b248:	ldr	x9, [x19, #320]
  44b24c:	mov	x8, xzr
  44b250:	str	xzr, [x19, #256]
  44b254:	add	x9, x9, #0x1
  44b258:	str	x9, [x19, #320]
  44b25c:	add	x9, x8, #0x1
  44b260:	mov	w20, #0x63                  	// #99
  44b264:	str	x9, [x19, #256]
  44b268:	strb	w20, [x19, x8]
  44b26c:	ldr	x8, [x19, #256]
  44b270:	strb	w20, [x19, #264]
  44b274:	cmp	x8, #0xff
  44b278:	b.ne	44b2a4 <feof@plt+0x485a4>  // b.any
  44b27c:	ldp	x8, x2, [x19, #272]
  44b280:	mov	w1, #0xff                  	// #255
  44b284:	mov	x0, x19
  44b288:	strb	wzr, [x19, #255]
  44b28c:	blr	x8
  44b290:	ldr	x9, [x19, #320]
  44b294:	mov	x8, xzr
  44b298:	str	xzr, [x19, #256]
  44b29c:	add	x9, x9, #0x1
  44b2a0:	str	x9, [x19, #320]
  44b2a4:	add	x9, x8, #0x1
  44b2a8:	str	x9, [x19, #256]
  44b2ac:	strb	w20, [x19, x8]
  44b2b0:	ldr	x8, [x19, #256]
  44b2b4:	strb	w20, [x19, #264]
  44b2b8:	cmp	x8, #0xff
  44b2bc:	b.ne	44b2e8 <feof@plt+0x485e8>  // b.any
  44b2c0:	ldp	x8, x2, [x19, #272]
  44b2c4:	mov	w1, #0xff                  	// #255
  44b2c8:	mov	x0, x19
  44b2cc:	strb	wzr, [x19, #255]
  44b2d0:	blr	x8
  44b2d4:	ldr	x9, [x19, #320]
  44b2d8:	mov	x8, xzr
  44b2dc:	str	xzr, [x19, #256]
  44b2e0:	add	x9, x9, #0x1
  44b2e4:	str	x9, [x19, #320]
  44b2e8:	add	x9, x8, #0x1
  44b2ec:	mov	w10, #0x75                  	// #117
  44b2f0:	str	x9, [x19, #256]
  44b2f4:	strb	w10, [x19, x8]
  44b2f8:	ldr	x8, [x19, #256]
  44b2fc:	strb	w10, [x19, #264]
  44b300:	cmp	x8, #0xff
  44b304:	b.ne	44b330 <feof@plt+0x48630>  // b.any
  44b308:	ldp	x8, x2, [x19, #272]
  44b30c:	mov	w1, #0xff                  	// #255
  44b310:	mov	x0, x19
  44b314:	strb	wzr, [x19, #255]
  44b318:	blr	x8
  44b31c:	ldr	x9, [x19, #320]
  44b320:	mov	x8, xzr
  44b324:	str	xzr, [x19, #256]
  44b328:	add	x9, x9, #0x1
  44b32c:	str	x9, [x19, #320]
  44b330:	add	x9, x8, #0x1
  44b334:	mov	w10, #0x6d                  	// #109
  44b338:	b	44ed30 <feof@plt+0x4c030>
  44b33c:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44b340:	mov	x22, xzr
  44b344:	add	x23, x23, #0xdef
  44b348:	b	44b368 <feof@plt+0x48668>
  44b34c:	add	x22, x22, #0x1
  44b350:	add	x9, x8, #0x1
  44b354:	cmp	x22, #0x1e
  44b358:	str	x9, [x19, #256]
  44b35c:	strb	w24, [x19, x8]
  44b360:	strb	w24, [x19, #264]
  44b364:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44b368:	ldr	x8, [x19, #256]
  44b36c:	ldrb	w24, [x23, x22]
  44b370:	cmp	x8, #0xff
  44b374:	b.ne	44b34c <feof@plt+0x4864c>  // b.any
  44b378:	ldp	x8, x2, [x19, #272]
  44b37c:	mov	w1, #0xff                  	// #255
  44b380:	mov	x0, x19
  44b384:	strb	wzr, [x19, #255]
  44b388:	blr	x8
  44b38c:	ldr	x9, [x19, #320]
  44b390:	mov	x8, xzr
  44b394:	str	xzr, [x19, #256]
  44b398:	add	x9, x9, #0x1
  44b39c:	str	x9, [x19, #320]
  44b3a0:	b	44b34c <feof@plt+0x4864c>
  44b3a4:	ldp	x22, x21, [x21, #8]
  44b3a8:	cbz	x22, 44dad4 <feof@plt+0x4add4>
  44b3ac:	ldr	w8, [x22, #4]
  44b3b0:	cmp	w8, #0x1
  44b3b4:	b.gt	44b3c4 <feof@plt+0x486c4>
  44b3b8:	ldr	w9, [x19, #308]
  44b3bc:	cmp	w9, #0x401
  44b3c0:	b.lt	44da84 <feof@plt+0x4ad84>  // b.tstop
  44b3c4:	mov	w8, #0x1                   	// #1
  44b3c8:	str	w8, [x25]
  44b3cc:	b	44dad4 <feof@plt+0x4add4>
  44b3d0:	ldr	x21, [x21, #8]
  44b3d4:	adrp	x23, 462000 <_obstack_memory_used@@Base+0xcdd8>
  44b3d8:	mov	x22, xzr
  44b3dc:	add	x23, x23, #0x347
  44b3e0:	ldrsw	x20, [x21, #16]
  44b3e4:	b	44b404 <feof@plt+0x48704>
  44b3e8:	add	x22, x22, #0x1
  44b3ec:	add	x9, x8, #0x1
  44b3f0:	cmp	x22, #0x8
  44b3f4:	str	x9, [x19, #256]
  44b3f8:	strb	w24, [x19, x8]
  44b3fc:	strb	w24, [x19, #264]
  44b400:	b.eq	44c4b4 <feof@plt+0x497b4>  // b.none
  44b404:	ldr	x8, [x19, #256]
  44b408:	ldrb	w24, [x23, x22]
  44b40c:	cmp	x8, #0xff
  44b410:	b.ne	44b3e8 <feof@plt+0x486e8>  // b.any
  44b414:	ldp	x8, x2, [x19, #272]
  44b418:	mov	w1, #0xff                  	// #255
  44b41c:	mov	x0, x19
  44b420:	strb	wzr, [x19, #255]
  44b424:	blr	x8
  44b428:	ldr	x9, [x19, #320]
  44b42c:	mov	x8, xzr
  44b430:	str	xzr, [x19, #256]
  44b434:	add	x9, x9, #0x1
  44b438:	str	x9, [x19, #320]
  44b43c:	b	44b3e8 <feof@plt+0x486e8>
  44b440:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44b444:	mov	x22, xzr
  44b448:	add	x23, x23, #0xf2b
  44b44c:	b	44b46c <feof@plt+0x4876c>
  44b450:	add	x22, x22, #0x1
  44b454:	add	x9, x8, #0x1
  44b458:	cmp	x22, #0x9
  44b45c:	str	x9, [x19, #256]
  44b460:	strb	w24, [x19, x8]
  44b464:	strb	w24, [x19, #264]
  44b468:	b.eq	44c278 <feof@plt+0x49578>  // b.none
  44b46c:	ldr	x8, [x19, #256]
  44b470:	ldrb	w24, [x23, x22]
  44b474:	cmp	x8, #0xff
  44b478:	b.ne	44b450 <feof@plt+0x48750>  // b.any
  44b47c:	ldp	x8, x2, [x19, #272]
  44b480:	mov	w1, #0xff                  	// #255
  44b484:	mov	x0, x19
  44b488:	strb	wzr, [x19, #255]
  44b48c:	blr	x8
  44b490:	ldr	x9, [x19, #320]
  44b494:	mov	x8, xzr
  44b498:	str	xzr, [x19, #256]
  44b49c:	add	x9, x9, #0x1
  44b4a0:	str	x9, [x19, #320]
  44b4a4:	b	44b450 <feof@plt+0x48750>
  44b4a8:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44b4ac:	mov	x22, xzr
  44b4b0:	add	x23, x23, #0xf2b
  44b4b4:	b	44b4d4 <feof@plt+0x487d4>
  44b4b8:	add	x22, x22, #0x1
  44b4bc:	add	x9, x8, #0x1
  44b4c0:	cmp	x22, #0x9
  44b4c4:	str	x9, [x19, #256]
  44b4c8:	strb	w24, [x19, x8]
  44b4cc:	strb	w24, [x19, #264]
  44b4d0:	b.eq	44c588 <feof@plt+0x49888>  // b.none
  44b4d4:	ldr	x8, [x19, #256]
  44b4d8:	ldrb	w24, [x23, x22]
  44b4dc:	cmp	x8, #0xff
  44b4e0:	b.ne	44b4b8 <feof@plt+0x487b8>  // b.any
  44b4e4:	ldp	x8, x2, [x19, #272]
  44b4e8:	mov	w1, #0xff                  	// #255
  44b4ec:	mov	x0, x19
  44b4f0:	strb	wzr, [x19, #255]
  44b4f4:	blr	x8
  44b4f8:	ldr	x9, [x19, #320]
  44b4fc:	mov	x8, xzr
  44b500:	str	xzr, [x19, #256]
  44b504:	add	x9, x9, #0x1
  44b508:	str	x9, [x19, #320]
  44b50c:	b	44b4b8 <feof@plt+0x487b8>
  44b510:	ldr	x21, [x21, #8]
  44b514:	ldr	w8, [x21]
  44b518:	cmp	w8, #0x32
  44b51c:	b.ne	44d53c <feof@plt+0x4a83c>  // b.any
  44b520:	ldr	x8, [x21, #8]
  44b524:	ldrsw	x20, [x8, #16]
  44b528:	cbz	w20, 44c43c <feof@plt+0x4973c>
  44b52c:	ldr	x21, [x8, #8]
  44b530:	b	44b550 <feof@plt+0x48850>
  44b534:	add	x9, x8, #0x1
  44b538:	subs	x20, x20, #0x1
  44b53c:	add	x21, x21, #0x1
  44b540:	str	x9, [x19, #256]
  44b544:	strb	w22, [x19, x8]
  44b548:	strb	w22, [x19, #264]
  44b54c:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44b550:	ldr	x8, [x19, #256]
  44b554:	ldrb	w22, [x21]
  44b558:	cmp	x8, #0xff
  44b55c:	b.ne	44b534 <feof@plt+0x48834>  // b.any
  44b560:	ldp	x8, x2, [x19, #272]
  44b564:	mov	w1, #0xff                  	// #255
  44b568:	mov	x0, x19
  44b56c:	strb	wzr, [x19, #255]
  44b570:	blr	x8
  44b574:	ldr	x9, [x19, #320]
  44b578:	mov	x8, xzr
  44b57c:	str	xzr, [x19, #256]
  44b580:	add	x9, x9, #0x1
  44b584:	str	x9, [x19, #320]
  44b588:	b	44b534 <feof@plt+0x48834>
  44b58c:	ldp	x22, x21, [x21, #8]
  44b590:	ldr	w8, [x22]
  44b594:	cmp	w8, #0x34
  44b598:	b.eq	44d174 <feof@plt+0x4a474>  // b.none
  44b59c:	cmp	w8, #0x32
  44b5a0:	b.ne	44d230 <feof@plt+0x4a530>  // b.any
  44b5a4:	ldr	x24, [x22, #8]
  44b5a8:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44b5ac:	add	x1, x1, #0x7e5
  44b5b0:	ldr	x23, [x24]
  44b5b4:	mov	x0, x23
  44b5b8:	bl	402b40 <strcmp@plt>
  44b5bc:	cbnz	w0, 44b5ec <feof@plt+0x488ec>
  44b5c0:	ldr	w8, [x21]
  44b5c4:	cmp	w8, #0x3
  44b5c8:	b.ne	44b5ec <feof@plt+0x488ec>  // b.any
  44b5cc:	ldr	x8, [x21, #8]
  44b5d0:	ldr	w9, [x8]
  44b5d4:	cmp	w9, #0x1
  44b5d8:	b.ne	44b5ec <feof@plt+0x488ec>  // b.any
  44b5dc:	ldr	x9, [x21, #16]
  44b5e0:	ldr	w9, [x9]
  44b5e4:	cmp	w9, #0x29
  44b5e8:	csel	x21, x8, x21, eq  // eq = none
  44b5ec:	ldr	w26, [x21]
  44b5f0:	cmp	w26, #0x39
  44b5f4:	b.ne	44d9f0 <feof@plt+0x4acf0>  // b.any
  44b5f8:	ldr	x21, [x21, #8]
  44b5fc:	ldr	w8, [x21]
  44b600:	cmp	w8, #0x31
  44b604:	b.hi	44ea90 <feof@plt+0x4bd90>  // b.pmore
  44b608:	mov	w9, #0x1                   	// #1
  44b60c:	lsl	x8, x9, x8
  44b610:	mov	x9, #0x43                  	// #67
  44b614:	movk	x9, #0x2, lsl #48
  44b618:	tst	x8, x9
  44b61c:	b.eq	44ea90 <feof@plt+0x4bd90>  // b.none
  44b620:	cbz	x21, 44b63c <feof@plt+0x4893c>
  44b624:	ldr	w8, [x21, #4]
  44b628:	cmp	w8, #0x1
  44b62c:	b.gt	44b63c <feof@plt+0x4893c>
  44b630:	ldr	w9, [x19, #308]
  44b634:	cmp	w9, #0x401
  44b638:	b.lt	44efa0 <feof@plt+0x4c2a0>  // b.tstop
  44b63c:	mov	w8, #0x1                   	// #1
  44b640:	str	w8, [x25]
  44b644:	b	44eff0 <feof@plt+0x4c2f0>
  44b648:	ldr	x8, [x21, #16]
  44b64c:	ldr	w8, [x8]
  44b650:	cmp	w8, #0x39
  44b654:	b.ne	44c434 <feof@plt+0x49734>  // b.any
  44b658:	ldr	x22, [x21, #8]
  44b65c:	ldr	x8, [x22, #8]
  44b660:	ldr	x9, [x8]
  44b664:	ldrb	w10, [x9, #1]
  44b668:	cmp	w10, #0x63
  44b66c:	b.ne	44d6cc <feof@plt+0x4a9cc>  // b.any
  44b670:	ldrb	w9, [x9]
  44b674:	sub	w9, w9, #0x63
  44b678:	cmp	w9, #0x10
  44b67c:	b.hi	44d6cc <feof@plt+0x4a9cc>  // b.pmore
  44b680:	mov	w10, #0x1                   	// #1
  44b684:	lsl	w9, w10, w9
  44b688:	mov	w10, #0x8003                	// #32771
  44b68c:	movk	w10, #0x1, lsl #16
  44b690:	tst	w9, w10
  44b694:	b.eq	44d6cc <feof@plt+0x4a9cc>  // b.none
  44b698:	ldr	w9, [x22]
  44b69c:	cmp	w9, #0x32
  44b6a0:	b.ne	44e0a0 <feof@plt+0x4b3a0>  // b.any
  44b6a4:	ldrsw	x22, [x8, #16]
  44b6a8:	cbz	w22, 44ebdc <feof@plt+0x4bedc>
  44b6ac:	ldr	x23, [x8, #8]
  44b6b0:	b	44b6d0 <feof@plt+0x489d0>
  44b6b4:	add	x9, x8, #0x1
  44b6b8:	subs	x22, x22, #0x1
  44b6bc:	add	x23, x23, #0x1
  44b6c0:	str	x9, [x19, #256]
  44b6c4:	strb	w24, [x19, x8]
  44b6c8:	strb	w24, [x19, #264]
  44b6cc:	b.eq	44ebdc <feof@plt+0x4bedc>  // b.none
  44b6d0:	ldr	x8, [x19, #256]
  44b6d4:	ldrb	w24, [x23]
  44b6d8:	cmp	x8, #0xff
  44b6dc:	b.ne	44b6b4 <feof@plt+0x489b4>  // b.any
  44b6e0:	ldp	x8, x2, [x19, #272]
  44b6e4:	mov	w1, #0xff                  	// #255
  44b6e8:	mov	x0, x19
  44b6ec:	strb	wzr, [x19, #255]
  44b6f0:	blr	x8
  44b6f4:	ldr	x9, [x19, #320]
  44b6f8:	mov	x8, xzr
  44b6fc:	str	xzr, [x19, #256]
  44b700:	add	x9, x9, #0x1
  44b704:	str	x9, [x19, #320]
  44b708:	b	44b6b4 <feof@plt+0x489b4>
  44b70c:	ldr	x8, [x21, #16]
  44b710:	ldr	w9, [x8]
  44b714:	cmp	w9, #0x3b
  44b718:	b.ne	44c434 <feof@plt+0x49734>  // b.any
  44b71c:	ldr	x8, [x8, #16]
  44b720:	ldr	w8, [x8]
  44b724:	cmp	w8, #0x3c
  44b728:	b.ne	44c434 <feof@plt+0x49734>  // b.any
  44b72c:	mov	x0, x19
  44b730:	mov	w1, w20
  44b734:	mov	x2, x21
  44b738:	bl	4511ec <feof@plt+0x4e4ec>
  44b73c:	cbnz	w0, 44c43c <feof@plt+0x4973c>
  44b740:	ldp	x24, x8, [x21, #8]
  44b744:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44b748:	add	x1, x1, #0xb05
  44b74c:	ldr	x10, [x24, #8]
  44b750:	ldp	x23, x9, [x8, #8]
  44b754:	ldr	x0, [x10]
  44b758:	ldp	x22, x21, [x9, #8]
  44b75c:	bl	402b40 <strcmp@plt>
  44b760:	cbz	w0, 44e998 <feof@plt+0x4bc98>
  44b764:	ldr	x8, [x19, #256]
  44b768:	cmp	x8, #0xff
  44b76c:	b.ne	44b798 <feof@plt+0x48a98>  // b.any
  44b770:	ldp	x8, x2, [x19, #272]
  44b774:	mov	w1, #0xff                  	// #255
  44b778:	mov	x0, x19
  44b77c:	strb	wzr, [x19, #255]
  44b780:	blr	x8
  44b784:	ldr	x9, [x19, #320]
  44b788:	mov	x8, xzr
  44b78c:	str	xzr, [x19, #256]
  44b790:	add	x9, x9, #0x1
  44b794:	str	x9, [x19, #320]
  44b798:	add	x9, x8, #0x1
  44b79c:	mov	w10, #0x6e                  	// #110
  44b7a0:	str	x9, [x19, #256]
  44b7a4:	strb	w10, [x19, x8]
  44b7a8:	ldr	x8, [x19, #256]
  44b7ac:	strb	w10, [x19, #264]
  44b7b0:	cmp	x8, #0xff
  44b7b4:	b.ne	44b7e0 <feof@plt+0x48ae0>  // b.any
  44b7b8:	ldp	x8, x2, [x19, #272]
  44b7bc:	mov	w1, #0xff                  	// #255
  44b7c0:	mov	x0, x19
  44b7c4:	strb	wzr, [x19, #255]
  44b7c8:	blr	x8
  44b7cc:	ldr	x9, [x19, #320]
  44b7d0:	mov	x8, xzr
  44b7d4:	str	xzr, [x19, #256]
  44b7d8:	add	x9, x9, #0x1
  44b7dc:	str	x9, [x19, #320]
  44b7e0:	add	x9, x8, #0x1
  44b7e4:	mov	w10, #0x65                  	// #101
  44b7e8:	str	x9, [x19, #256]
  44b7ec:	strb	w10, [x19, x8]
  44b7f0:	ldr	x8, [x19, #256]
  44b7f4:	strb	w10, [x19, #264]
  44b7f8:	cmp	x8, #0xff
  44b7fc:	b.ne	44b828 <feof@plt+0x48b28>  // b.any
  44b800:	ldp	x8, x2, [x19, #272]
  44b804:	mov	w1, #0xff                  	// #255
  44b808:	mov	x0, x19
  44b80c:	strb	wzr, [x19, #255]
  44b810:	blr	x8
  44b814:	ldr	x9, [x19, #320]
  44b818:	mov	x8, xzr
  44b81c:	str	xzr, [x19, #256]
  44b820:	add	x9, x9, #0x1
  44b824:	str	x9, [x19, #320]
  44b828:	add	x9, x8, #0x1
  44b82c:	mov	w10, #0x77                  	// #119
  44b830:	str	x9, [x19, #256]
  44b834:	strb	w10, [x19, x8]
  44b838:	ldr	x8, [x19, #256]
  44b83c:	strb	w10, [x19, #264]
  44b840:	cmp	x8, #0xff
  44b844:	b.ne	44b870 <feof@plt+0x48b70>  // b.any
  44b848:	ldp	x8, x2, [x19, #272]
  44b84c:	mov	w1, #0xff                  	// #255
  44b850:	mov	x0, x19
  44b854:	strb	wzr, [x19, #255]
  44b858:	blr	x8
  44b85c:	ldr	x9, [x19, #320]
  44b860:	mov	x8, xzr
  44b864:	str	xzr, [x19, #256]
  44b868:	add	x9, x9, #0x1
  44b86c:	str	x9, [x19, #320]
  44b870:	add	x9, x8, #0x1
  44b874:	mov	w10, #0x20                  	// #32
  44b878:	str	x9, [x19, #256]
  44b87c:	strb	w10, [x19, x8]
  44b880:	strb	w10, [x19, #264]
  44b884:	ldr	x8, [x23, #8]
  44b888:	cbz	x8, 44fad8 <feof@plt+0x4cdd8>
  44b88c:	ldr	w8, [x23]
  44b890:	cmp	w8, #0x31
  44b894:	b.hi	44f44c <feof@plt+0x4c74c>  // b.pmore
  44b898:	mov	w9, #0x1                   	// #1
  44b89c:	lsl	x8, x9, x8
  44b8a0:	mov	x9, #0x43                  	// #67
  44b8a4:	movk	x9, #0x2, lsl #48
  44b8a8:	tst	x8, x9
  44b8ac:	b.eq	44f44c <feof@plt+0x4c74c>  // b.none
  44b8b0:	ldr	w8, [x23, #4]
  44b8b4:	cmp	w8, #0x1
  44b8b8:	b.gt	44b8c8 <feof@plt+0x48bc8>
  44b8bc:	ldr	w9, [x19, #308]
  44b8c0:	cmp	w9, #0x401
  44b8c4:	b.lt	44f4b8 <feof@plt+0x4c7b8>  // b.tstop
  44b8c8:	mov	w8, #0x1                   	// #1
  44b8cc:	str	w8, [x25]
  44b8d0:	b	44fa90 <feof@plt+0x4cd90>
  44b8d4:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44b8d8:	mov	x22, xzr
  44b8dc:	add	x23, x23, #0xf35
  44b8e0:	b	44b900 <feof@plt+0x48c00>
  44b8e4:	add	x22, x22, #0x1
  44b8e8:	add	x9, x8, #0x1
  44b8ec:	cmp	x22, #0xe
  44b8f0:	str	x9, [x19, #256]
  44b8f4:	strb	w24, [x19, x8]
  44b8f8:	strb	w24, [x19, #264]
  44b8fc:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44b900:	ldr	x8, [x19, #256]
  44b904:	ldrb	w24, [x23, x22]
  44b908:	cmp	x8, #0xff
  44b90c:	b.ne	44b8e4 <feof@plt+0x48be4>  // b.any
  44b910:	ldp	x8, x2, [x19, #272]
  44b914:	mov	w1, #0xff                  	// #255
  44b918:	mov	x0, x19
  44b91c:	strb	wzr, [x19, #255]
  44b920:	blr	x8
  44b924:	ldr	x9, [x19, #320]
  44b928:	mov	x8, xzr
  44b92c:	str	xzr, [x19, #256]
  44b930:	add	x9, x9, #0x1
  44b934:	str	x9, [x19, #320]
  44b938:	b	44b8e4 <feof@plt+0x48be4>
  44b93c:	ldr	x22, [x21, #8]
  44b940:	cbz	x22, 44b95c <feof@plt+0x48c5c>
  44b944:	ldr	w8, [x22, #4]
  44b948:	cmp	w8, #0x1
  44b94c:	b.gt	44b95c <feof@plt+0x48c5c>
  44b950:	ldr	w9, [x19, #308]
  44b954:	cmp	w9, #0x401
  44b958:	b.lt	44db80 <feof@plt+0x4ae80>  // b.tstop
  44b95c:	mov	w8, #0x1                   	// #1
  44b960:	str	w8, [x25]
  44b964:	ldr	x21, [x21, #16]
  44b968:	cbnz	x21, 44c41c <feof@plt+0x4971c>
  44b96c:	b	44c434 <feof@plt+0x49734>
  44b970:	ldr	x8, [x19, #256]
  44b974:	ldr	w20, [x21, #8]
  44b978:	cmp	x8, #0xff
  44b97c:	b.ne	44b9a8 <feof@plt+0x48ca8>  // b.any
  44b980:	ldp	x8, x2, [x19, #272]
  44b984:	mov	w1, #0xff                  	// #255
  44b988:	mov	x0, x19
  44b98c:	strb	wzr, [x19, #255]
  44b990:	blr	x8
  44b994:	ldr	x9, [x19, #320]
  44b998:	mov	x8, xzr
  44b99c:	str	xzr, [x19, #256]
  44b9a0:	add	x9, x9, #0x1
  44b9a4:	str	x9, [x19, #320]
  44b9a8:	add	x9, x8, #0x1
  44b9ac:	str	x9, [x19, #256]
  44b9b0:	strb	w20, [x19, x8]
  44b9b4:	strb	w20, [x19, #264]
  44b9b8:	b	44c43c <feof@plt+0x4973c>
  44b9bc:	ldr	w2, [x21, #8]
  44b9c0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44b9c4:	add	x1, x1, #0xdb1
  44b9c8:	add	x0, sp, #0x10
  44b9cc:	bl	402880 <sprintf@plt>
  44b9d0:	add	x0, sp, #0x10
  44b9d4:	bl	4026d0 <strlen@plt>
  44b9d8:	cbz	x0, 44c43c <feof@plt+0x4973c>
  44b9dc:	mov	x20, x0
  44b9e0:	add	x21, sp, #0x10
  44b9e4:	b	44ba04 <feof@plt+0x48d04>
  44b9e8:	add	x9, x8, #0x1
  44b9ec:	subs	x20, x20, #0x1
  44b9f0:	add	x21, x21, #0x1
  44b9f4:	str	x9, [x19, #256]
  44b9f8:	strb	w22, [x19, x8]
  44b9fc:	strb	w22, [x19, #264]
  44ba00:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44ba04:	ldr	x8, [x19, #256]
  44ba08:	ldrb	w22, [x21]
  44ba0c:	cmp	x8, #0xff
  44ba10:	b.ne	44b9e8 <feof@plt+0x48ce8>  // b.any
  44ba14:	ldp	x8, x2, [x19, #272]
  44ba18:	mov	w1, #0xff                  	// #255
  44ba1c:	mov	x0, x19
  44ba20:	strb	wzr, [x19, #255]
  44ba24:	blr	x8
  44ba28:	ldr	x9, [x19, #320]
  44ba2c:	mov	x8, xzr
  44ba30:	str	xzr, [x19, #256]
  44ba34:	add	x9, x9, #0x1
  44ba38:	str	x9, [x19, #320]
  44ba3c:	b	44b9e8 <feof@plt+0x48ce8>
  44ba40:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44ba44:	mov	x22, xzr
  44ba48:	add	x23, x23, #0xf44
  44ba4c:	b	44ba6c <feof@plt+0x48d6c>
  44ba50:	add	x22, x22, #0x1
  44ba54:	add	x9, x8, #0x1
  44ba58:	cmp	x22, #0xa
  44ba5c:	str	x9, [x19, #256]
  44ba60:	strb	w24, [x19, x8]
  44ba64:	strb	w24, [x19, #264]
  44ba68:	b.eq	44c6ec <feof@plt+0x499ec>  // b.none
  44ba6c:	ldr	x8, [x19, #256]
  44ba70:	ldrb	w24, [x23, x22]
  44ba74:	cmp	x8, #0xff
  44ba78:	b.ne	44ba50 <feof@plt+0x48d50>  // b.any
  44ba7c:	ldp	x8, x2, [x19, #272]
  44ba80:	mov	w1, #0xff                  	// #255
  44ba84:	mov	x0, x19
  44ba88:	strb	wzr, [x19, #255]
  44ba8c:	blr	x8
  44ba90:	ldr	x9, [x19, #320]
  44ba94:	mov	x8, xzr
  44ba98:	str	xzr, [x19, #256]
  44ba9c:	add	x9, x9, #0x1
  44baa0:	str	x9, [x19, #320]
  44baa4:	b	44ba50 <feof@plt+0x48d50>
  44baa8:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44baac:	mov	x22, xzr
  44bab0:	add	x23, x23, #0xf4f
  44bab4:	b	44bad4 <feof@plt+0x48dd4>
  44bab8:	add	x22, x22, #0x1
  44babc:	add	x9, x8, #0x1
  44bac0:	cmp	x22, #0x1d
  44bac4:	str	x9, [x19, #256]
  44bac8:	strb	w24, [x19, x8]
  44bacc:	strb	w24, [x19, #264]
  44bad0:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44bad4:	ldr	x8, [x19, #256]
  44bad8:	ldrb	w24, [x23, x22]
  44badc:	cmp	x8, #0xff
  44bae0:	b.ne	44bab8 <feof@plt+0x48db8>  // b.any
  44bae4:	ldp	x8, x2, [x19, #272]
  44bae8:	mov	w1, #0xff                  	// #255
  44baec:	mov	x0, x19
  44baf0:	strb	wzr, [x19, #255]
  44baf4:	blr	x8
  44baf8:	ldr	x9, [x19, #320]
  44bafc:	mov	x8, xzr
  44bb00:	str	xzr, [x19, #256]
  44bb04:	add	x9, x9, #0x1
  44bb08:	str	x9, [x19, #320]
  44bb0c:	b	44bab8 <feof@plt+0x48db8>
  44bb10:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44bb14:	mov	x22, xzr
  44bb18:	add	x23, x23, #0xf6d
  44bb1c:	b	44bb3c <feof@plt+0x48e3c>
  44bb20:	add	x22, x22, #0x1
  44bb24:	add	x9, x8, #0x1
  44bb28:	cmp	x22, #0x1c
  44bb2c:	str	x9, [x19, #256]
  44bb30:	strb	w24, [x19, x8]
  44bb34:	strb	w24, [x19, #264]
  44bb38:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44bb3c:	ldr	x8, [x19, #256]
  44bb40:	ldrb	w24, [x23, x22]
  44bb44:	cmp	x8, #0xff
  44bb48:	b.ne	44bb20 <feof@plt+0x48e20>  // b.any
  44bb4c:	ldp	x8, x2, [x19, #272]
  44bb50:	mov	w1, #0xff                  	// #255
  44bb54:	mov	x0, x19
  44bb58:	strb	wzr, [x19, #255]
  44bb5c:	blr	x8
  44bb60:	ldr	x9, [x19, #320]
  44bb64:	mov	x8, xzr
  44bb68:	str	xzr, [x19, #256]
  44bb6c:	add	x9, x9, #0x1
  44bb70:	str	x9, [x19, #320]
  44bb74:	b	44bb20 <feof@plt+0x48e20>
  44bb78:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44bb7c:	mov	x22, xzr
  44bb80:	add	x23, x23, #0xf8a
  44bb84:	b	44bba4 <feof@plt+0x48ea4>
  44bb88:	add	x22, x22, #0x1
  44bb8c:	add	x9, x8, #0x1
  44bb90:	cmp	x22, #0x8
  44bb94:	str	x9, [x19, #256]
  44bb98:	strb	w24, [x19, x8]
  44bb9c:	strb	w24, [x19, #264]
  44bba0:	b.eq	44c764 <feof@plt+0x49a64>  // b.none
  44bba4:	ldr	x8, [x19, #256]
  44bba8:	ldrb	w24, [x23, x22]
  44bbac:	cmp	x8, #0xff
  44bbb0:	b.ne	44bb88 <feof@plt+0x48e88>  // b.any
  44bbb4:	ldp	x8, x2, [x19, #272]
  44bbb8:	mov	w1, #0xff                  	// #255
  44bbbc:	mov	x0, x19
  44bbc0:	strb	wzr, [x19, #255]
  44bbc4:	blr	x8
  44bbc8:	ldr	x9, [x19, #320]
  44bbcc:	mov	x8, xzr
  44bbd0:	str	xzr, [x19, #256]
  44bbd4:	add	x9, x9, #0x1
  44bbd8:	str	x9, [x19, #320]
  44bbdc:	b	44bb88 <feof@plt+0x48e88>
  44bbe0:	adrp	x22, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44bbe4:	mov	x20, xzr
  44bbe8:	add	x22, x22, #0xf93
  44bbec:	b	44bc0c <feof@plt+0x48f0c>
  44bbf0:	add	x20, x20, #0x1
  44bbf4:	add	x9, x8, #0x1
  44bbf8:	cmp	x20, #0xe
  44bbfc:	str	x9, [x19, #256]
  44bc00:	strb	w23, [x19, x8]
  44bc04:	strb	w23, [x19, #264]
  44bc08:	b.eq	44c8b8 <feof@plt+0x49bb8>  // b.none
  44bc0c:	ldr	x8, [x19, #256]
  44bc10:	ldrb	w23, [x22, x20]
  44bc14:	cmp	x8, #0xff
  44bc18:	b.ne	44bbf0 <feof@plt+0x48ef0>  // b.any
  44bc1c:	ldp	x8, x2, [x19, #272]
  44bc20:	mov	w1, #0xff                  	// #255
  44bc24:	mov	x0, x19
  44bc28:	strb	wzr, [x19, #255]
  44bc2c:	blr	x8
  44bc30:	ldr	x9, [x19, #320]
  44bc34:	mov	x8, xzr
  44bc38:	str	xzr, [x19, #256]
  44bc3c:	add	x9, x9, #0x1
  44bc40:	str	x9, [x19, #320]
  44bc44:	b	44bbf0 <feof@plt+0x48ef0>
  44bc48:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44bc4c:	mov	x22, xzr
  44bc50:	add	x23, x23, #0xf14
  44bc54:	b	44bc74 <feof@plt+0x48f74>
  44bc58:	add	x22, x22, #0x1
  44bc5c:	add	x9, x8, #0x1
  44bc60:	cmp	x22, #0x16
  44bc64:	str	x9, [x19, #256]
  44bc68:	strb	w24, [x19, x8]
  44bc6c:	strb	w24, [x19, #264]
  44bc70:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44bc74:	ldr	x8, [x19, #256]
  44bc78:	ldrb	w24, [x23, x22]
  44bc7c:	cmp	x8, #0xff
  44bc80:	b.ne	44bc58 <feof@plt+0x48f58>  // b.any
  44bc84:	ldp	x8, x2, [x19, #272]
  44bc88:	mov	w1, #0xff                  	// #255
  44bc8c:	mov	x0, x19
  44bc90:	strb	wzr, [x19, #255]
  44bc94:	blr	x8
  44bc98:	ldr	x9, [x19, #320]
  44bc9c:	mov	x8, xzr
  44bca0:	str	xzr, [x19, #256]
  44bca4:	add	x9, x9, #0x1
  44bca8:	str	x9, [x19, #320]
  44bcac:	b	44bc58 <feof@plt+0x48f58>
  44bcb0:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44bcb4:	mov	x22, xzr
  44bcb8:	add	x23, x23, #0xf10
  44bcbc:	b	44bcdc <feof@plt+0x48fdc>
  44bcc0:	add	x22, x22, #0x1
  44bcc4:	add	x9, x8, #0x1
  44bcc8:	cmp	x22, #0x1a
  44bccc:	str	x9, [x19, #256]
  44bcd0:	strb	w24, [x19, x8]
  44bcd4:	strb	w24, [x19, #264]
  44bcd8:	b.eq	44c414 <feof@plt+0x49714>  // b.none
  44bcdc:	ldr	x8, [x19, #256]
  44bce0:	ldrb	w24, [x23, x22]
  44bce4:	cmp	x8, #0xff
  44bce8:	b.ne	44bcc0 <feof@plt+0x48fc0>  // b.any
  44bcec:	ldp	x8, x2, [x19, #272]
  44bcf0:	mov	w1, #0xff                  	// #255
  44bcf4:	mov	x0, x19
  44bcf8:	strb	wzr, [x19, #255]
  44bcfc:	blr	x8
  44bd00:	ldr	x9, [x19, #320]
  44bd04:	mov	x8, xzr
  44bd08:	str	xzr, [x19, #256]
  44bd0c:	add	x9, x9, #0x1
  44bd10:	str	x9, [x19, #320]
  44bd14:	b	44bcc0 <feof@plt+0x48fc0>
  44bd18:	ldr	x1, [x21, #8]
  44bd1c:	mov	x0, x19
  44bd20:	bl	451114 <feof@plt+0x4e414>
  44bd24:	cbz	x0, 44d124 <feof@plt+0x4a424>
  44bd28:	mov	w22, wzr
  44bd2c:	ldr	w8, [x0]
  44bd30:	cmp	w8, #0x2f
  44bd34:	b.ne	44cc64 <feof@plt+0x49f64>  // b.any
  44bd38:	ldr	x8, [x0, #8]
  44bd3c:	cbz	x8, 44cc64 <feof@plt+0x49f64>
  44bd40:	ldr	x0, [x0, #16]
  44bd44:	add	w22, w22, #0x1
  44bd48:	cbnz	x0, 44bd2c <feof@plt+0x4902c>
  44bd4c:	b	44cc68 <feof@plt+0x49f68>
  44bd50:	ldr	x22, [x21, #8]
  44bd54:	cbz	x22, 44bd70 <feof@plt+0x49070>
  44bd58:	ldr	w8, [x22, #4]
  44bd5c:	cmp	w8, #0x1
  44bd60:	b.gt	44bd70 <feof@plt+0x49070>
  44bd64:	ldr	w9, [x19, #308]
  44bd68:	cmp	w9, #0x401
  44bd6c:	b.lt	44dbdc <feof@plt+0x4aedc>  // b.tstop
  44bd70:	mov	w8, #0x1                   	// #1
  44bd74:	str	w8, [x25]
  44bd78:	ldr	x8, [x19, #256]
  44bd7c:	cmp	x8, #0xff
  44bd80:	b.ne	44bdac <feof@plt+0x490ac>  // b.any
  44bd84:	ldp	x8, x2, [x19, #272]
  44bd88:	mov	w1, #0xff                  	// #255
  44bd8c:	mov	x0, x19
  44bd90:	strb	wzr, [x19, #255]
  44bd94:	blr	x8
  44bd98:	ldr	x9, [x19, #320]
  44bd9c:	mov	x8, xzr
  44bda0:	str	xzr, [x19, #256]
  44bda4:	add	x9, x9, #0x1
  44bda8:	str	x9, [x19, #320]
  44bdac:	add	x9, x8, #0x1
  44bdb0:	mov	w10, #0x5b                  	// #91
  44bdb4:	str	x9, [x19, #256]
  44bdb8:	strb	w10, [x19, x8]
  44bdbc:	ldr	x8, [x19, #256]
  44bdc0:	strb	w10, [x19, #264]
  44bdc4:	cmp	x8, #0xff
  44bdc8:	b.ne	44bdf4 <feof@plt+0x490f4>  // b.any
  44bdcc:	ldp	x8, x2, [x19, #272]
  44bdd0:	mov	w1, #0xff                  	// #255
  44bdd4:	mov	x0, x19
  44bdd8:	strb	wzr, [x19, #255]
  44bddc:	blr	x8
  44bde0:	ldr	x9, [x19, #320]
  44bde4:	mov	x8, xzr
  44bde8:	str	xzr, [x19, #256]
  44bdec:	add	x9, x9, #0x1
  44bdf0:	str	x9, [x19, #320]
  44bdf4:	add	x9, x8, #0x1
  44bdf8:	mov	w10, #0x61                  	// #97
  44bdfc:	str	x9, [x19, #256]
  44be00:	strb	w10, [x19, x8]
  44be04:	ldr	x8, [x19, #256]
  44be08:	strb	w10, [x19, #264]
  44be0c:	cmp	x8, #0xff
  44be10:	b.ne	44be3c <feof@plt+0x4913c>  // b.any
  44be14:	ldp	x8, x2, [x19, #272]
  44be18:	mov	w1, #0xff                  	// #255
  44be1c:	mov	x0, x19
  44be20:	strb	wzr, [x19, #255]
  44be24:	blr	x8
  44be28:	ldr	x9, [x19, #320]
  44be2c:	mov	x8, xzr
  44be30:	str	xzr, [x19, #256]
  44be34:	add	x9, x9, #0x1
  44be38:	str	x9, [x19, #320]
  44be3c:	add	x9, x8, #0x1
  44be40:	mov	w10, #0x62                  	// #98
  44be44:	str	x9, [x19, #256]
  44be48:	strb	w10, [x19, x8]
  44be4c:	ldr	x8, [x19, #256]
  44be50:	strb	w10, [x19, #264]
  44be54:	cmp	x8, #0xff
  44be58:	b.ne	44be84 <feof@plt+0x49184>  // b.any
  44be5c:	ldp	x8, x2, [x19, #272]
  44be60:	mov	w1, #0xff                  	// #255
  44be64:	mov	x0, x19
  44be68:	strb	wzr, [x19, #255]
  44be6c:	blr	x8
  44be70:	ldr	x9, [x19, #320]
  44be74:	mov	x8, xzr
  44be78:	str	xzr, [x19, #256]
  44be7c:	add	x9, x9, #0x1
  44be80:	str	x9, [x19, #320]
  44be84:	add	x9, x8, #0x1
  44be88:	mov	w10, #0x69                  	// #105
  44be8c:	str	x9, [x19, #256]
  44be90:	strb	w10, [x19, x8]
  44be94:	ldr	x8, [x19, #256]
  44be98:	strb	w10, [x19, #264]
  44be9c:	cmp	x8, #0xff
  44bea0:	b.ne	44becc <feof@plt+0x491cc>  // b.any
  44bea4:	ldp	x8, x2, [x19, #272]
  44bea8:	mov	w1, #0xff                  	// #255
  44beac:	mov	x0, x19
  44beb0:	strb	wzr, [x19, #255]
  44beb4:	blr	x8
  44beb8:	ldr	x9, [x19, #320]
  44bebc:	mov	x8, xzr
  44bec0:	str	xzr, [x19, #256]
  44bec4:	add	x9, x9, #0x1
  44bec8:	str	x9, [x19, #320]
  44becc:	add	x9, x8, #0x1
  44bed0:	mov	w10, #0x3a                  	// #58
  44bed4:	b	44c0bc <feof@plt+0x493bc>
  44bed8:	ldr	x22, [x21, #8]
  44bedc:	cbz	x22, 44bef8 <feof@plt+0x491f8>
  44bee0:	ldr	w8, [x22, #4]
  44bee4:	cmp	w8, #0x1
  44bee8:	b.gt	44bef8 <feof@plt+0x491f8>
  44beec:	ldr	w9, [x19, #308]
  44bef0:	cmp	w9, #0x401
  44bef4:	b.lt	44dc30 <feof@plt+0x4af30>  // b.tstop
  44bef8:	mov	w8, #0x1                   	// #1
  44befc:	str	w8, [x25]
  44bf00:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44bf04:	mov	x22, xzr
  44bf08:	add	x23, x23, #0xfa2
  44bf0c:	b	44bf2c <feof@plt+0x4922c>
  44bf10:	add	x22, x22, #0x1
  44bf14:	add	x9, x8, #0x1
  44bf18:	cmp	x22, #0x8
  44bf1c:	str	x9, [x19, #256]
  44bf20:	strb	w24, [x19, x8]
  44bf24:	strb	w24, [x19, #264]
  44bf28:	b.eq	44c0c8 <feof@plt+0x493c8>  // b.none
  44bf2c:	ldr	x8, [x19, #256]
  44bf30:	ldrb	w24, [x23, x22]
  44bf34:	cmp	x8, #0xff
  44bf38:	b.ne	44bf10 <feof@plt+0x49210>  // b.any
  44bf3c:	ldp	x8, x2, [x19, #272]
  44bf40:	mov	w1, #0xff                  	// #255
  44bf44:	mov	x0, x19
  44bf48:	strb	wzr, [x19, #255]
  44bf4c:	blr	x8
  44bf50:	ldr	x9, [x19, #320]
  44bf54:	mov	x8, xzr
  44bf58:	str	xzr, [x19, #256]
  44bf5c:	add	x9, x9, #0x1
  44bf60:	str	x9, [x19, #320]
  44bf64:	b	44bf10 <feof@plt+0x49210>
  44bf68:	mov	w23, wzr
  44bf6c:	ldr	x8, [x19, #256]
  44bf70:	cmp	x8, #0xff
  44bf74:	b.ne	44bfa0 <feof@plt+0x492a0>  // b.any
  44bf78:	ldp	x8, x2, [x19, #272]
  44bf7c:	mov	w1, #0xff                  	// #255
  44bf80:	mov	x0, x19
  44bf84:	strb	wzr, [x19, #255]
  44bf88:	blr	x8
  44bf8c:	ldr	x9, [x19, #320]
  44bf90:	mov	x8, xzr
  44bf94:	str	xzr, [x19, #256]
  44bf98:	add	x9, x9, #0x1
  44bf9c:	str	x9, [x19, #320]
  44bfa0:	add	x9, x8, #0x1
  44bfa4:	mov	w10, #0x28                  	// #40
  44bfa8:	str	x9, [x19, #256]
  44bfac:	strb	w10, [x19, x8]
  44bfb0:	strb	w10, [x19, #264]
  44bfb4:	ldr	x22, [x21, #8]
  44bfb8:	cbz	x22, 44bfd4 <feof@plt+0x492d4>
  44bfbc:	ldr	w8, [x22, #4]
  44bfc0:	cmp	w8, #0x1
  44bfc4:	b.gt	44bfd4 <feof@plt+0x492d4>
  44bfc8:	ldr	w9, [x19, #308]
  44bfcc:	cmp	w9, #0x401
  44bfd0:	b.lt	44d7b4 <feof@plt+0x4aab4>  // b.tstop
  44bfd4:	mov	w8, #0x1                   	// #1
  44bfd8:	str	w8, [x25]
  44bfdc:	ldr	x8, [x19, #256]
  44bfe0:	cmp	x8, #0xff
  44bfe4:	b.ne	44c010 <feof@plt+0x49310>  // b.any
  44bfe8:	ldp	x8, x2, [x19, #272]
  44bfec:	mov	w1, #0xff                  	// #255
  44bff0:	mov	x0, x19
  44bff4:	strb	wzr, [x19, #255]
  44bff8:	blr	x8
  44bffc:	ldr	x9, [x19, #320]
  44c000:	mov	x8, xzr
  44c004:	str	xzr, [x19, #256]
  44c008:	add	x9, x9, #0x1
  44c00c:	str	x9, [x19, #320]
  44c010:	add	x9, x8, #0x1
  44c014:	mov	w10, #0x29                  	// #41
  44c018:	str	x9, [x19, #256]
  44c01c:	strb	w10, [x19, x8]
  44c020:	strb	w10, [x19, #264]
  44c024:	ldr	w8, [x21]
  44c028:	cmp	w8, #0x3e
  44c02c:	b.ne	44c078 <feof@plt+0x49378>  // b.any
  44c030:	ldr	x8, [x19, #256]
  44c034:	cmp	x8, #0xff
  44c038:	b.ne	44c064 <feof@plt+0x49364>  // b.any
  44c03c:	ldp	x8, x2, [x19, #272]
  44c040:	mov	w1, #0xff                  	// #255
  44c044:	mov	x0, x19
  44c048:	strb	wzr, [x19, #255]
  44c04c:	blr	x8
  44c050:	ldr	x9, [x19, #320]
  44c054:	mov	x8, xzr
  44c058:	str	xzr, [x19, #256]
  44c05c:	add	x9, x9, #0x1
  44c060:	str	x9, [x19, #320]
  44c064:	add	x9, x8, #0x1
  44c068:	mov	w10, #0x2d                  	// #45
  44c06c:	str	x9, [x19, #256]
  44c070:	strb	w10, [x19, x8]
  44c074:	strb	w10, [x19, #264]
  44c078:	cmp	w23, #0x8
  44c07c:	b.ne	44c278 <feof@plt+0x49578>  // b.any
  44c080:	ldr	x8, [x19, #256]
  44c084:	cmp	x8, #0xff
  44c088:	b.ne	44c0b4 <feof@plt+0x493b4>  // b.any
  44c08c:	ldp	x8, x2, [x19, #272]
  44c090:	mov	w1, #0xff                  	// #255
  44c094:	mov	x0, x19
  44c098:	strb	wzr, [x19, #255]
  44c09c:	blr	x8
  44c0a0:	ldr	x9, [x19, #320]
  44c0a4:	mov	x8, xzr
  44c0a8:	str	xzr, [x19, #256]
  44c0ac:	add	x9, x9, #0x1
  44c0b0:	str	x9, [x19, #320]
  44c0b4:	add	x9, x8, #0x1
  44c0b8:	mov	w10, #0x5b                  	// #91
  44c0bc:	str	x9, [x19, #256]
  44c0c0:	strb	w10, [x19, x8]
  44c0c4:	strb	w10, [x19, #264]
  44c0c8:	ldr	x21, [x21, #16]
  44c0cc:	cbz	x21, 44c0e8 <feof@plt+0x493e8>
  44c0d0:	ldr	w8, [x21, #4]
  44c0d4:	cmp	w8, #0x1
  44c0d8:	b.gt	44c0e8 <feof@plt+0x493e8>
  44c0dc:	ldr	w9, [x19, #308]
  44c0e0:	cmp	w9, #0x401
  44c0e4:	b.lt	44cc0c <feof@plt+0x49f0c>  // b.tstop
  44c0e8:	mov	w8, #0x1                   	// #1
  44c0ec:	str	w8, [x25]
  44c0f0:	ldr	x8, [x19, #256]
  44c0f4:	cmp	x8, #0xff
  44c0f8:	b.ne	44c124 <feof@plt+0x49424>  // b.any
  44c0fc:	ldp	x8, x2, [x19, #272]
  44c100:	mov	w1, #0xff                  	// #255
  44c104:	mov	x0, x19
  44c108:	strb	wzr, [x19, #255]
  44c10c:	blr	x8
  44c110:	ldr	x9, [x19, #320]
  44c114:	mov	x8, xzr
  44c118:	str	xzr, [x19, #256]
  44c11c:	add	x9, x9, #0x1
  44c120:	str	x9, [x19, #320]
  44c124:	add	x9, x8, #0x1
  44c128:	mov	w10, #0x5d                  	// #93
  44c12c:	b	44ed30 <feof@plt+0x4c030>
  44c130:	ldr	x22, [x21, #8]
  44c134:	cbz	x22, 44c150 <feof@plt+0x49450>
  44c138:	ldr	w8, [x22, #4]
  44c13c:	cmp	w8, #0x1
  44c140:	b.gt	44c150 <feof@plt+0x49450>
  44c144:	ldr	w9, [x19, #308]
  44c148:	cmp	w9, #0x401
  44c14c:	b.lt	44dc84 <feof@plt+0x4af84>  // b.tstop
  44c150:	mov	w8, #0x1                   	// #1
  44c154:	str	w8, [x25]
  44c158:	ldr	x8, [x19, #256]
  44c15c:	cmp	x8, #0xff
  44c160:	b.ne	44c18c <feof@plt+0x4948c>  // b.any
  44c164:	ldp	x8, x2, [x19, #272]
  44c168:	mov	w1, #0xff                  	// #255
  44c16c:	mov	x0, x19
  44c170:	strb	wzr, [x19, #255]
  44c174:	blr	x8
  44c178:	ldr	x9, [x19, #320]
  44c17c:	mov	x8, xzr
  44c180:	str	xzr, [x19, #256]
  44c184:	add	x9, x9, #0x1
  44c188:	str	x9, [x19, #320]
  44c18c:	add	x9, x8, #0x1
  44c190:	mov	w10, #0x2d                  	// #45
  44c194:	str	x9, [x19, #256]
  44c198:	strb	w10, [x19, x8]
  44c19c:	ldr	x8, [x19, #256]
  44c1a0:	strb	w10, [x19, #264]
  44c1a4:	cmp	x8, #0xff
  44c1a8:	b.ne	44c1d4 <feof@plt+0x494d4>  // b.any
  44c1ac:	ldp	x8, x2, [x19, #272]
  44c1b0:	mov	w1, #0xff                  	// #255
  44c1b4:	mov	x0, x19
  44c1b8:	strb	wzr, [x19, #255]
  44c1bc:	blr	x8
  44c1c0:	ldr	x9, [x19, #320]
  44c1c4:	mov	x8, xzr
  44c1c8:	str	xzr, [x19, #256]
  44c1cc:	add	x9, x9, #0x1
  44c1d0:	str	x9, [x19, #320]
  44c1d4:	add	x9, x8, #0x1
  44c1d8:	mov	w10, #0x69                  	// #105
  44c1dc:	str	x9, [x19, #256]
  44c1e0:	strb	w10, [x19, x8]
  44c1e4:	ldr	x8, [x19, #256]
  44c1e8:	strb	w10, [x19, #264]
  44c1ec:	cmp	x8, #0xff
  44c1f0:	b.ne	44c21c <feof@plt+0x4951c>  // b.any
  44c1f4:	ldp	x8, x2, [x19, #272]
  44c1f8:	mov	w1, #0xff                  	// #255
  44c1fc:	mov	x0, x19
  44c200:	strb	wzr, [x19, #255]
  44c204:	blr	x8
  44c208:	ldr	x9, [x19, #320]
  44c20c:	mov	x8, xzr
  44c210:	str	xzr, [x19, #256]
  44c214:	add	x9, x9, #0x1
  44c218:	str	x9, [x19, #320]
  44c21c:	add	x9, x8, #0x1
  44c220:	mov	w10, #0x6e                  	// #110
  44c224:	str	x9, [x19, #256]
  44c228:	strb	w10, [x19, x8]
  44c22c:	ldr	x8, [x19, #256]
  44c230:	strb	w10, [x19, #264]
  44c234:	cmp	x8, #0xff
  44c238:	b.ne	44c264 <feof@plt+0x49564>  // b.any
  44c23c:	ldp	x8, x2, [x19, #272]
  44c240:	mov	w1, #0xff                  	// #255
  44c244:	mov	x0, x19
  44c248:	strb	wzr, [x19, #255]
  44c24c:	blr	x8
  44c250:	ldr	x9, [x19, #320]
  44c254:	mov	x8, xzr
  44c258:	str	xzr, [x19, #256]
  44c25c:	add	x9, x9, #0x1
  44c260:	str	x9, [x19, #320]
  44c264:	add	x9, x8, #0x1
  44c268:	mov	w10, #0x2d                  	// #45
  44c26c:	str	x9, [x19, #256]
  44c270:	strb	w10, [x19, x8]
  44c274:	strb	w10, [x19, #264]
  44c278:	ldr	x21, [x21, #16]
  44c27c:	cbnz	x21, 44c41c <feof@plt+0x4971c>
  44c280:	b	44c434 <feof@plt+0x49734>
  44c284:	ldr	x22, [x21, #16]
  44c288:	cbz	x22, 44c2a4 <feof@plt+0x495a4>
  44c28c:	ldr	w8, [x22, #4]
  44c290:	cmp	w8, #0x1
  44c294:	b.gt	44c2a4 <feof@plt+0x495a4>
  44c298:	ldr	w9, [x19, #308]
  44c29c:	cmp	w9, #0x401
  44c2a0:	b.lt	44dcd8 <feof@plt+0x4afd8>  // b.tstop
  44c2a4:	mov	w8, #0x1                   	// #1
  44c2a8:	str	w8, [x25]
  44c2ac:	ldr	x8, [x19, #256]
  44c2b0:	cmp	x8, #0xff
  44c2b4:	b.ne	44c2e0 <feof@plt+0x495e0>  // b.any
  44c2b8:	ldp	x8, x2, [x19, #272]
  44c2bc:	mov	w1, #0xff                  	// #255
  44c2c0:	mov	x0, x19
  44c2c4:	strb	wzr, [x19, #255]
  44c2c8:	blr	x8
  44c2cc:	ldr	x9, [x19, #320]
  44c2d0:	mov	x8, xzr
  44c2d4:	str	xzr, [x19, #256]
  44c2d8:	add	x9, x9, #0x1
  44c2dc:	str	x9, [x19, #320]
  44c2e0:	add	x9, x8, #0x1
  44c2e4:	mov	w10, #0x20                  	// #32
  44c2e8:	str	x9, [x19, #256]
  44c2ec:	strb	w10, [x19, x8]
  44c2f0:	ldr	x8, [x19, #256]
  44c2f4:	strb	w10, [x19, #264]
  44c2f8:	cmp	x8, #0xff
  44c2fc:	b.ne	44c328 <feof@plt+0x49628>  // b.any
  44c300:	ldp	x8, x2, [x19, #272]
  44c304:	mov	w1, #0xff                  	// #255
  44c308:	mov	x0, x19
  44c30c:	strb	wzr, [x19, #255]
  44c310:	blr	x8
  44c314:	ldr	x9, [x19, #320]
  44c318:	mov	x8, xzr
  44c31c:	str	xzr, [x19, #256]
  44c320:	add	x9, x9, #0x1
  44c324:	str	x9, [x19, #320]
  44c328:	add	x9, x8, #0x1
  44c32c:	mov	w10, #0x66                  	// #102
  44c330:	str	x9, [x19, #256]
  44c334:	strb	w10, [x19, x8]
  44c338:	ldr	x8, [x19, #256]
  44c33c:	strb	w10, [x19, #264]
  44c340:	cmp	x8, #0xff
  44c344:	b.ne	44c370 <feof@plt+0x49670>  // b.any
  44c348:	ldp	x8, x2, [x19, #272]
  44c34c:	mov	w1, #0xff                  	// #255
  44c350:	mov	x0, x19
  44c354:	strb	wzr, [x19, #255]
  44c358:	blr	x8
  44c35c:	ldr	x9, [x19, #320]
  44c360:	mov	x8, xzr
  44c364:	str	xzr, [x19, #256]
  44c368:	add	x9, x9, #0x1
  44c36c:	str	x9, [x19, #320]
  44c370:	add	x9, x8, #0x1
  44c374:	mov	w10, #0x6f                  	// #111
  44c378:	str	x9, [x19, #256]
  44c37c:	strb	w10, [x19, x8]
  44c380:	ldr	x8, [x19, #256]
  44c384:	strb	w10, [x19, #264]
  44c388:	cmp	x8, #0xff
  44c38c:	b.ne	44c3b8 <feof@plt+0x496b8>  // b.any
  44c390:	ldp	x8, x2, [x19, #272]
  44c394:	mov	w1, #0xff                  	// #255
  44c398:	mov	x0, x19
  44c39c:	strb	wzr, [x19, #255]
  44c3a0:	blr	x8
  44c3a4:	ldr	x9, [x19, #320]
  44c3a8:	mov	x8, xzr
  44c3ac:	str	xzr, [x19, #256]
  44c3b0:	add	x9, x9, #0x1
  44c3b4:	str	x9, [x19, #320]
  44c3b8:	add	x9, x8, #0x1
  44c3bc:	mov	w10, #0x72                  	// #114
  44c3c0:	str	x9, [x19, #256]
  44c3c4:	strb	w10, [x19, x8]
  44c3c8:	ldr	x8, [x19, #256]
  44c3cc:	strb	w10, [x19, #264]
  44c3d0:	cmp	x8, #0xff
  44c3d4:	b.ne	44c400 <feof@plt+0x49700>  // b.any
  44c3d8:	ldp	x8, x2, [x19, #272]
  44c3dc:	mov	w1, #0xff                  	// #255
  44c3e0:	mov	x0, x19
  44c3e4:	strb	wzr, [x19, #255]
  44c3e8:	blr	x8
  44c3ec:	ldr	x9, [x19, #320]
  44c3f0:	mov	x8, xzr
  44c3f4:	str	xzr, [x19, #256]
  44c3f8:	add	x9, x9, #0x1
  44c3fc:	str	x9, [x19, #320]
  44c400:	add	x9, x8, #0x1
  44c404:	mov	w10, #0x20                  	// #32
  44c408:	str	x9, [x19, #256]
  44c40c:	strb	w10, [x19, x8]
  44c410:	strb	w10, [x19, #264]
  44c414:	ldr	x21, [x21, #8]
  44c418:	cbz	x21, 44c434 <feof@plt+0x49734>
  44c41c:	ldr	w8, [x21, #4]
  44c420:	cmp	w8, #0x1
  44c424:	b.gt	44c434 <feof@plt+0x49734>
  44c428:	ldr	w9, [x19, #308]
  44c42c:	cmp	w9, #0x401
  44c430:	b.lt	44c45c <feof@plt+0x4975c>  // b.tstop
  44c434:	mov	w8, #0x1                   	// #1
  44c438:	str	w8, [x25]
  44c43c:	ldp	x20, x19, [sp, #240]
  44c440:	ldp	x22, x21, [sp, #224]
  44c444:	ldp	x24, x23, [sp, #208]
  44c448:	ldp	x26, x25, [sp, #192]
  44c44c:	ldp	x28, x27, [sp, #176]
  44c450:	ldp	x29, x30, [sp, #160]
  44c454:	add	sp, sp, #0x100
  44c458:	ret
  44c45c:	add	w8, w8, #0x1
  44c460:	add	w9, w9, #0x1
  44c464:	str	w8, [x21, #4]
  44c468:	str	w9, [x19, #308]
  44c46c:	str	x21, [sp, #16]
  44c470:	ldr	x8, [x19, #328]
  44c474:	add	x9, sp, #0x10
  44c478:	mov	x0, x19
  44c47c:	mov	w1, w20
  44c480:	mov	x2, x21
  44c484:	str	x8, [sp, #24]
  44c488:	str	x9, [x19, #328]
  44c48c:	bl	449d30 <feof@plt+0x47030>
  44c490:	ldr	x8, [sp, #24]
  44c494:	str	x8, [x19, #328]
  44c498:	ldr	w8, [x21, #4]
  44c49c:	sub	w8, w8, #0x1
  44c4a0:	str	w8, [x21, #4]
  44c4a4:	ldr	w8, [x19, #308]
  44c4a8:	sub	w8, w8, #0x1
  44c4ac:	str	w8, [x19, #308]
  44c4b0:	b	44c43c <feof@plt+0x4973c>
  44c4b4:	ldr	x22, [x21, #8]
  44c4b8:	ldrb	w8, [x22]
  44c4bc:	sub	w8, w8, #0x61
  44c4c0:	cmp	w8, #0x19
  44c4c4:	b.hi	44c514 <feof@plt+0x49814>  // b.pmore
  44c4c8:	ldr	x8, [x19, #256]
  44c4cc:	cmp	x8, #0xff
  44c4d0:	b.ne	44c4fc <feof@plt+0x497fc>  // b.any
  44c4d4:	ldp	x8, x2, [x19, #272]
  44c4d8:	mov	w1, #0xff                  	// #255
  44c4dc:	mov	x0, x19
  44c4e0:	strb	wzr, [x19, #255]
  44c4e4:	blr	x8
  44c4e8:	ldr	x9, [x19, #320]
  44c4ec:	mov	x8, xzr
  44c4f0:	str	xzr, [x19, #256]
  44c4f4:	add	x9, x9, #0x1
  44c4f8:	str	x9, [x19, #320]
  44c4fc:	add	x9, x8, #0x1
  44c500:	mov	w10, #0x20                  	// #32
  44c504:	str	x9, [x19, #256]
  44c508:	strb	w10, [x19, x8]
  44c50c:	strb	w10, [x19, #264]
  44c510:	ldr	x22, [x21, #8]
  44c514:	sub	x8, x20, #0x1
  44c518:	ldrb	w9, [x22, x8]
  44c51c:	cmp	w9, #0x20
  44c520:	csel	w8, w8, w20, eq  // eq = none
  44c524:	cbz	w8, 44c43c <feof@plt+0x4973c>
  44c528:	sxtw	x20, w8
  44c52c:	b	44c54c <feof@plt+0x4984c>
  44c530:	add	x9, x8, #0x1
  44c534:	subs	x20, x20, #0x1
  44c538:	add	x22, x22, #0x1
  44c53c:	str	x9, [x19, #256]
  44c540:	strb	w21, [x19, x8]
  44c544:	strb	w21, [x19, #264]
  44c548:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44c54c:	ldr	x8, [x19, #256]
  44c550:	ldrb	w21, [x22]
  44c554:	cmp	x8, #0xff
  44c558:	b.ne	44c530 <feof@plt+0x49830>  // b.any
  44c55c:	ldp	x8, x2, [x19, #272]
  44c560:	mov	w1, #0xff                  	// #255
  44c564:	mov	x0, x19
  44c568:	strb	wzr, [x19, #255]
  44c56c:	blr	x8
  44c570:	ldr	x9, [x19, #320]
  44c574:	mov	x8, xzr
  44c578:	str	xzr, [x19, #256]
  44c57c:	add	x9, x9, #0x1
  44c580:	str	x9, [x19, #320]
  44c584:	b	44c530 <feof@plt+0x49830>
  44c588:	ldr	x8, [x19, #368]
  44c58c:	cbz	x8, 44c5a0 <feof@plt+0x498a0>
  44c590:	ldr	x9, [x19, #288]
  44c594:	sub	x10, x29, #0x10
  44c598:	stp	x9, x8, [x29, #-16]
  44c59c:	str	x10, [x19, #288]
  44c5a0:	ldr	x22, [x21, #8]
  44c5a4:	ldr	w9, [x22]
  44c5a8:	cmp	w9, #0x4
  44c5ac:	b.ne	44cbd8 <feof@plt+0x49ed8>  // b.any
  44c5b0:	ldr	x22, [x22, #8]
  44c5b4:	cbz	x22, 44c5d0 <feof@plt+0x498d0>
  44c5b8:	ldr	w9, [x22, #4]
  44c5bc:	cmp	w9, #0x1
  44c5c0:	b.gt	44c5d0 <feof@plt+0x498d0>
  44c5c4:	ldr	w10, [x19, #308]
  44c5c8:	cmp	w10, #0x401
  44c5cc:	b.lt	44e118 <feof@plt+0x4b418>  // b.tstop
  44c5d0:	mov	w9, #0x1                   	// #1
  44c5d4:	str	w9, [x25]
  44c5d8:	cbz	x8, 44c5e4 <feof@plt+0x498e4>
  44c5dc:	ldur	x8, [x29, #-16]
  44c5e0:	str	x8, [x19, #288]
  44c5e4:	ldrb	w8, [x19, #264]
  44c5e8:	cmp	w8, #0x3c
  44c5ec:	b.ne	44c638 <feof@plt+0x49938>  // b.any
  44c5f0:	ldr	x8, [x19, #256]
  44c5f4:	cmp	x8, #0xff
  44c5f8:	b.ne	44c624 <feof@plt+0x49924>  // b.any
  44c5fc:	ldp	x8, x2, [x19, #272]
  44c600:	mov	w1, #0xff                  	// #255
  44c604:	mov	x0, x19
  44c608:	strb	wzr, [x19, #255]
  44c60c:	blr	x8
  44c610:	ldr	x9, [x19, #320]
  44c614:	mov	x8, xzr
  44c618:	str	xzr, [x19, #256]
  44c61c:	add	x9, x9, #0x1
  44c620:	str	x9, [x19, #320]
  44c624:	add	x9, x8, #0x1
  44c628:	mov	w10, #0x20                  	// #32
  44c62c:	str	x9, [x19, #256]
  44c630:	strb	w10, [x19, x8]
  44c634:	strb	w10, [x19, #264]
  44c638:	ldr	x8, [x19, #256]
  44c63c:	cmp	x8, #0xff
  44c640:	b.ne	44c66c <feof@plt+0x4996c>  // b.any
  44c644:	ldp	x8, x2, [x19, #272]
  44c648:	mov	w1, #0xff                  	// #255
  44c64c:	mov	x0, x19
  44c650:	strb	wzr, [x19, #255]
  44c654:	blr	x8
  44c658:	ldr	x9, [x19, #320]
  44c65c:	mov	x8, xzr
  44c660:	str	xzr, [x19, #256]
  44c664:	add	x9, x9, #0x1
  44c668:	str	x9, [x19, #320]
  44c66c:	add	x9, x8, #0x1
  44c670:	mov	w10, #0x3c                  	// #60
  44c674:	str	x9, [x19, #256]
  44c678:	strb	w10, [x19, x8]
  44c67c:	strb	w10, [x19, #264]
  44c680:	ldr	x8, [x21, #8]
  44c684:	ldr	x21, [x8, #16]
  44c688:	cbz	x21, 44c6a4 <feof@plt+0x499a4>
  44c68c:	ldr	w8, [x21, #4]
  44c690:	cmp	w8, #0x1
  44c694:	b.gt	44c6a4 <feof@plt+0x499a4>
  44c698:	ldr	w9, [x19, #308]
  44c69c:	cmp	w9, #0x401
  44c6a0:	b.lt	44e174 <feof@plt+0x4b474>  // b.tstop
  44c6a4:	mov	w8, #0x1                   	// #1
  44c6a8:	str	w8, [x25]
  44c6ac:	ldr	x8, [x19, #256]
  44c6b0:	cmp	x8, #0xff
  44c6b4:	b.ne	44c6e0 <feof@plt+0x499e0>  // b.any
  44c6b8:	ldp	x8, x2, [x19, #272]
  44c6bc:	mov	w1, #0xff                  	// #255
  44c6c0:	mov	x0, x19
  44c6c4:	strb	wzr, [x19, #255]
  44c6c8:	blr	x8
  44c6cc:	ldr	x9, [x19, #320]
  44c6d0:	mov	x8, xzr
  44c6d4:	str	xzr, [x19, #256]
  44c6d8:	add	x9, x9, #0x1
  44c6dc:	str	x9, [x19, #320]
  44c6e0:	add	x9, x8, #0x1
  44c6e4:	mov	w10, #0x3e                  	// #62
  44c6e8:	b	44ed30 <feof@plt+0x4c030>
  44c6ec:	ldr	x21, [x21, #8]
  44c6f0:	cbz	x21, 44ecec <feof@plt+0x4bfec>
  44c6f4:	ldr	w8, [x21, #4]
  44c6f8:	cmp	w8, #0x1
  44c6fc:	b.gt	44ecec <feof@plt+0x4bfec>
  44c700:	ldr	w9, [x19, #308]
  44c704:	cmp	w9, #0x401
  44c708:	b.ge	44ecec <feof@plt+0x4bfec>  // b.tcont
  44c70c:	add	w8, w8, #0x1
  44c710:	add	w9, w9, #0x1
  44c714:	str	w8, [x21, #4]
  44c718:	str	w9, [x19, #308]
  44c71c:	str	x21, [sp, #16]
  44c720:	ldr	x8, [x19, #328]
  44c724:	add	x9, sp, #0x10
  44c728:	mov	x0, x19
  44c72c:	mov	w1, w20
  44c730:	mov	x2, x21
  44c734:	str	x8, [sp, #24]
  44c738:	str	x9, [x19, #328]
  44c73c:	bl	449d30 <feof@plt+0x47030>
  44c740:	ldr	x8, [sp, #24]
  44c744:	str	x8, [x19, #328]
  44c748:	ldr	w8, [x21, #4]
  44c74c:	sub	w8, w8, #0x1
  44c750:	str	w8, [x21, #4]
  44c754:	ldr	w8, [x19, #308]
  44c758:	sub	w8, w8, #0x1
  44c75c:	str	w8, [x19, #308]
  44c760:	b	44ecf4 <feof@plt+0x4bff4>
  44c764:	ldr	w8, [x19, #312]
  44c768:	add	w8, w8, #0x1
  44c76c:	str	w8, [x19, #312]
  44c770:	ldr	x22, [x21, #8]
  44c774:	cbz	x22, 44c790 <feof@plt+0x49a90>
  44c778:	ldr	w9, [x22, #4]
  44c77c:	cmp	w9, #0x1
  44c780:	b.gt	44c790 <feof@plt+0x49a90>
  44c784:	ldr	w10, [x19, #308]
  44c788:	cmp	w10, #0x401
  44c78c:	b.lt	44dd2c <feof@plt+0x4b02c>  // b.tstop
  44c790:	mov	w9, #0x1                   	// #1
  44c794:	str	w9, [x25]
  44c798:	ldr	x9, [x19, #256]
  44c79c:	sub	w8, w8, #0x1
  44c7a0:	str	w8, [x19, #312]
  44c7a4:	cmp	x9, #0xff
  44c7a8:	b.ne	44c7d4 <feof@plt+0x49ad4>  // b.any
  44c7ac:	ldp	x8, x2, [x19, #272]
  44c7b0:	mov	w1, #0xff                  	// #255
  44c7b4:	mov	x0, x19
  44c7b8:	strb	wzr, [x19, #255]
  44c7bc:	blr	x8
  44c7c0:	ldr	x8, [x19, #320]
  44c7c4:	mov	x9, xzr
  44c7c8:	str	xzr, [x19, #256]
  44c7cc:	add	x8, x8, #0x1
  44c7d0:	str	x8, [x19, #320]
  44c7d4:	add	x8, x9, #0x1
  44c7d8:	mov	w10, #0x29                  	// #41
  44c7dc:	str	x8, [x19, #256]
  44c7e0:	strb	w10, [x19, x9]
  44c7e4:	ldr	x8, [x19, #256]
  44c7e8:	strb	w10, [x19, #264]
  44c7ec:	cmp	x8, #0xff
  44c7f0:	b.ne	44c81c <feof@plt+0x49b1c>  // b.any
  44c7f4:	ldp	x8, x2, [x19, #272]
  44c7f8:	mov	w1, #0xff                  	// #255
  44c7fc:	mov	x0, x19
  44c800:	strb	wzr, [x19, #255]
  44c804:	blr	x8
  44c808:	ldr	x9, [x19, #320]
  44c80c:	mov	x8, xzr
  44c810:	str	xzr, [x19, #256]
  44c814:	add	x9, x9, #0x1
  44c818:	str	x9, [x19, #320]
  44c81c:	add	x9, x8, #0x1
  44c820:	mov	w10, #0x23                  	// #35
  44c824:	str	x9, [x19, #256]
  44c828:	strb	w10, [x19, x8]
  44c82c:	strb	w10, [x19, #264]
  44c830:	ldr	w8, [x21, #16]
  44c834:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44c838:	add	x1, x1, #0xdb1
  44c83c:	add	x0, sp, #0x10
  44c840:	add	w2, w8, #0x1
  44c844:	bl	402880 <sprintf@plt>
  44c848:	add	x0, sp, #0x10
  44c84c:	bl	4026d0 <strlen@plt>
  44c850:	cbz	x0, 44db40 <feof@plt+0x4ae40>
  44c854:	mov	x20, x0
  44c858:	add	x21, sp, #0x10
  44c85c:	b	44c87c <feof@plt+0x49b7c>
  44c860:	add	x9, x8, #0x1
  44c864:	subs	x20, x20, #0x1
  44c868:	add	x21, x21, #0x1
  44c86c:	str	x9, [x19, #256]
  44c870:	strb	w22, [x19, x8]
  44c874:	strb	w22, [x19, #264]
  44c878:	b.eq	44db40 <feof@plt+0x4ae40>  // b.none
  44c87c:	ldr	x8, [x19, #256]
  44c880:	ldrb	w22, [x21]
  44c884:	cmp	x8, #0xff
  44c888:	b.ne	44c860 <feof@plt+0x49b60>  // b.any
  44c88c:	ldp	x8, x2, [x19, #272]
  44c890:	mov	w1, #0xff                  	// #255
  44c894:	mov	x0, x19
  44c898:	strb	wzr, [x19, #255]
  44c89c:	blr	x8
  44c8a0:	ldr	x9, [x19, #320]
  44c8a4:	mov	x8, xzr
  44c8a8:	str	xzr, [x19, #256]
  44c8ac:	add	x9, x9, #0x1
  44c8b0:	str	x9, [x19, #320]
  44c8b4:	b	44c860 <feof@plt+0x49b60>
  44c8b8:	ldr	w8, [x21, #8]
  44c8bc:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44c8c0:	add	x1, x1, #0xdb1
  44c8c4:	add	x0, sp, #0x10
  44c8c8:	add	w2, w8, #0x1
  44c8cc:	bl	402880 <sprintf@plt>
  44c8d0:	add	x0, sp, #0x10
  44c8d4:	bl	4026d0 <strlen@plt>
  44c8d8:	cbz	x0, 44db40 <feof@plt+0x4ae40>
  44c8dc:	mov	x20, x0
  44c8e0:	add	x21, sp, #0x10
  44c8e4:	b	44c904 <feof@plt+0x49c04>
  44c8e8:	add	x9, x8, #0x1
  44c8ec:	subs	x20, x20, #0x1
  44c8f0:	add	x21, x21, #0x1
  44c8f4:	str	x9, [x19, #256]
  44c8f8:	strb	w22, [x19, x8]
  44c8fc:	strb	w22, [x19, #264]
  44c900:	b.eq	44db40 <feof@plt+0x4ae40>  // b.none
  44c904:	ldr	x8, [x19, #256]
  44c908:	ldrb	w22, [x21]
  44c90c:	cmp	x8, #0xff
  44c910:	b.ne	44c8e8 <feof@plt+0x49be8>  // b.any
  44c914:	ldp	x8, x2, [x19, #272]
  44c918:	mov	w1, #0xff                  	// #255
  44c91c:	mov	x0, x19
  44c920:	strb	wzr, [x19, #255]
  44c924:	blr	x8
  44c928:	ldr	x9, [x19, #320]
  44c92c:	mov	x8, xzr
  44c930:	str	xzr, [x19, #256]
  44c934:	add	x9, x9, #0x1
  44c938:	str	x9, [x19, #320]
  44c93c:	b	44c8e8 <feof@plt+0x49be8>
  44c940:	mov	x21, x9
  44c944:	b	449d98 <feof@plt+0x47098>
  44c948:	cmp	w21, #0x1
  44c94c:	b.lt	44c43c <feof@plt+0x4973c>  // b.tstop
  44c950:	add	x20, x22, x21
  44c954:	ldrb	w24, [x22]
  44c958:	cmp	w24, #0x5f
  44c95c:	b.ne	44c9f8 <feof@plt+0x49cf8>  // b.any
  44c960:	sub	x8, x20, x22
  44c964:	cmp	x8, #0x4
  44c968:	b.lt	44c9f8 <feof@plt+0x49cf8>  // b.tstop
  44c96c:	ldrb	w8, [x22, #1]
  44c970:	cmp	w8, #0x5f
  44c974:	b.ne	44c9f4 <feof@plt+0x49cf4>  // b.any
  44c978:	ldrb	w8, [x22, #2]
  44c97c:	cmp	w8, #0x55
  44c980:	b.ne	44c9f4 <feof@plt+0x49cf4>  // b.any
  44c984:	add	x21, x22, #0x3
  44c988:	cmp	x21, x20
  44c98c:	b.cs	44c9f4 <feof@plt+0x49cf4>  // b.hs, b.nlast
  44c990:	mov	x23, xzr
  44c994:	b	44c9b0 <feof@plt+0x49cb0>
  44c998:	mov	x9, #0xffffffffffffffd0    	// #-48
  44c99c:	add	x8, x9, x8
  44c9a0:	add	x21, x21, #0x1
  44c9a4:	cmp	x20, x21
  44c9a8:	add	x23, x8, x23, lsl #4
  44c9ac:	b.eq	44c9f4 <feof@plt+0x49cf4>  // b.none
  44c9b0:	ldrb	w8, [x21]
  44c9b4:	sub	w9, w8, #0x30
  44c9b8:	and	w9, w9, #0xff
  44c9bc:	cmp	w9, #0xa
  44c9c0:	b.cc	44c998 <feof@plt+0x49c98>  // b.lo, b.ul, b.last
  44c9c4:	sub	w9, w8, #0x41
  44c9c8:	and	w9, w9, #0xff
  44c9cc:	cmp	w9, #0x6
  44c9d0:	b.cs	44c9dc <feof@plt+0x49cdc>  // b.hs, b.nlast
  44c9d4:	mov	x9, #0xffffffffffffffc9    	// #-55
  44c9d8:	b	44c99c <feof@plt+0x49c9c>
  44c9dc:	sub	w9, w8, #0x61
  44c9e0:	and	w9, w9, #0xff
  44c9e4:	cmp	w9, #0x5
  44c9e8:	b.hi	44ca54 <feof@plt+0x49d54>  // b.pmore
  44c9ec:	mov	x9, #0xffffffffffffffa9    	// #-87
  44c9f0:	b	44c99c <feof@plt+0x49c9c>
  44c9f4:	mov	w24, #0x5f                  	// #95
  44c9f8:	ldr	x8, [x19, #256]
  44c9fc:	cmp	x8, #0xff
  44ca00:	b.ne	44ca2c <feof@plt+0x49d2c>  // b.any
  44ca04:	ldp	x8, x2, [x19, #272]
  44ca08:	mov	w1, #0xff                  	// #255
  44ca0c:	mov	x0, x19
  44ca10:	strb	wzr, [x19, #255]
  44ca14:	blr	x8
  44ca18:	ldr	x9, [x19, #320]
  44ca1c:	mov	x8, xzr
  44ca20:	str	xzr, [x19, #256]
  44ca24:	add	x9, x9, #0x1
  44ca28:	str	x9, [x19, #320]
  44ca2c:	mov	w23, w24
  44ca30:	mov	x21, x22
  44ca34:	add	x22, x21, #0x1
  44ca38:	add	x9, x8, #0x1
  44ca3c:	cmp	x22, x20
  44ca40:	str	x9, [x19, #256]
  44ca44:	strb	w23, [x19, x8]
  44ca48:	strb	w23, [x19, #264]
  44ca4c:	b.cc	44c954 <feof@plt+0x49c54>  // b.lo, b.ul, b.last
  44ca50:	b	44c43c <feof@plt+0x4973c>
  44ca54:	cmp	x23, #0xff
  44ca58:	mov	w24, #0x5f                  	// #95
  44ca5c:	b.hi	44c9f8 <feof@plt+0x49cf8>  // b.pmore
  44ca60:	cmp	w8, #0x5f
  44ca64:	b.ne	44c9f8 <feof@plt+0x49cf8>  // b.any
  44ca68:	ldr	x8, [x19, #256]
  44ca6c:	cmp	x8, #0xff
  44ca70:	b.ne	44ca34 <feof@plt+0x49d34>  // b.any
  44ca74:	ldp	x8, x2, [x19, #272]
  44ca78:	mov	w1, #0xff                  	// #255
  44ca7c:	mov	x0, x19
  44ca80:	strb	wzr, [x19, #255]
  44ca84:	blr	x8
  44ca88:	ldr	x9, [x19, #320]
  44ca8c:	mov	x8, xzr
  44ca90:	str	xzr, [x19, #256]
  44ca94:	add	x9, x9, #0x1
  44ca98:	str	x9, [x19, #320]
  44ca9c:	b	44ca34 <feof@plt+0x49d34>
  44caa0:	ldr	w8, [x22]
  44caa4:	cbnz	w8, 44cacc <feof@plt+0x49dcc>
  44caa8:	ldr	w8, [x22, #16]
  44caac:	cmp	w8, #0x6
  44cab0:	b.ne	44cacc <feof@plt+0x49dcc>  // b.any
  44cab4:	ldr	x0, [x22, #8]
  44cab8:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44cabc:	add	x1, x1, #0xde8
  44cac0:	mov	w2, #0x6                   	// #6
  44cac4:	bl	402980 <strncmp@plt>
  44cac8:	cbz	w0, 44e9e0 <feof@plt+0x4bce0>
  44cacc:	ldr	w8, [x22, #4]
  44cad0:	cmp	w8, #0x1
  44cad4:	b.gt	44cae4 <feof@plt+0x49de4>
  44cad8:	ldr	w9, [x19, #308]
  44cadc:	cmp	w9, #0x401
  44cae0:	b.lt	44d888 <feof@plt+0x4ab88>  // b.tstop
  44cae4:	mov	w8, #0x1                   	// #1
  44cae8:	str	w8, [x25]
  44caec:	b	44d8d8 <feof@plt+0x4abd8>
  44caf0:	ldrsw	x20, [x8, #24]
  44caf4:	cbz	w20, 44c43c <feof@plt+0x4973c>
  44caf8:	ldr	x21, [x8, #16]
  44cafc:	b	44cb1c <feof@plt+0x49e1c>
  44cb00:	add	x9, x8, #0x1
  44cb04:	subs	x20, x20, #0x1
  44cb08:	add	x21, x21, #0x1
  44cb0c:	str	x9, [x19, #256]
  44cb10:	strb	w22, [x19, x8]
  44cb14:	strb	w22, [x19, #264]
  44cb18:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44cb1c:	ldr	x8, [x19, #256]
  44cb20:	ldrb	w22, [x21]
  44cb24:	cmp	x8, #0xff
  44cb28:	b.ne	44cb00 <feof@plt+0x49e00>  // b.any
  44cb2c:	ldp	x8, x2, [x19, #272]
  44cb30:	mov	w1, #0xff                  	// #255
  44cb34:	mov	x0, x19
  44cb38:	strb	wzr, [x19, #255]
  44cb3c:	blr	x8
  44cb40:	ldr	x9, [x19, #320]
  44cb44:	mov	x8, xzr
  44cb48:	str	xzr, [x19, #256]
  44cb4c:	add	x9, x9, #0x1
  44cb50:	str	x9, [x19, #320]
  44cb54:	b	44cb00 <feof@plt+0x49e00>
  44cb58:	ldr	x3, [x19, #296]
  44cb5c:	and	w22, w20, #0xffffff9f
  44cb60:	mov	x0, x19
  44cb64:	mov	w1, w22
  44cb68:	mov	x2, x21
  44cb6c:	bl	450b68 <feof@plt+0x4de68>
  44cb70:	ldr	x20, [x21, #8]
  44cb74:	cbz	x20, 44c43c <feof@plt+0x4973c>
  44cb78:	ldr	w8, [x20, #4]
  44cb7c:	cmp	w8, #0x1
  44cb80:	b.gt	44c434 <feof@plt+0x49734>
  44cb84:	ldr	w9, [x19, #308]
  44cb88:	cmp	w9, #0x401
  44cb8c:	b.ge	44c434 <feof@plt+0x49734>  // b.tcont
  44cb90:	add	w8, w8, #0x1
  44cb94:	str	w8, [x20, #4]
  44cb98:	ldr	x8, [x19, #328]
  44cb9c:	add	w9, w9, #0x1
  44cba0:	str	w9, [x19, #308]
  44cba4:	add	x9, sp, #0x10
  44cba8:	mov	x0, x19
  44cbac:	mov	w1, w22
  44cbb0:	mov	x2, x20
  44cbb4:	stp	x20, x8, [sp, #16]
  44cbb8:	str	x9, [x19, #328]
  44cbbc:	bl	449d30 <feof@plt+0x47030>
  44cbc0:	ldr	x8, [sp, #24]
  44cbc4:	str	x8, [x19, #328]
  44cbc8:	ldr	w8, [x20, #4]
  44cbcc:	sub	w8, w8, #0x1
  44cbd0:	str	w8, [x20, #4]
  44cbd4:	b	44c4a4 <feof@plt+0x497a4>
  44cbd8:	cbz	x22, 44cbf4 <feof@plt+0x49ef4>
  44cbdc:	ldr	w9, [x22, #4]
  44cbe0:	cmp	w9, #0x1
  44cbe4:	b.gt	44cbf4 <feof@plt+0x49ef4>
  44cbe8:	ldr	w10, [x19, #308]
  44cbec:	cmp	w10, #0x401
  44cbf0:	b.lt	44e21c <feof@plt+0x4b51c>  // b.tstop
  44cbf4:	mov	w9, #0x1                   	// #1
  44cbf8:	str	w9, [x25]
  44cbfc:	cbz	x8, 44c43c <feof@plt+0x4973c>
  44cc00:	ldur	x8, [x29, #-16]
  44cc04:	str	x8, [x19, #288]
  44cc08:	b	44c43c <feof@plt+0x4973c>
  44cc0c:	add	w8, w8, #0x1
  44cc10:	add	w9, w9, #0x1
  44cc14:	str	w8, [x21, #4]
  44cc18:	str	w9, [x19, #308]
  44cc1c:	str	x21, [sp, #16]
  44cc20:	ldr	x8, [x19, #328]
  44cc24:	add	x9, sp, #0x10
  44cc28:	mov	x0, x19
  44cc2c:	mov	w1, w20
  44cc30:	mov	x2, x21
  44cc34:	str	x8, [sp, #24]
  44cc38:	str	x9, [x19, #328]
  44cc3c:	bl	449d30 <feof@plt+0x47030>
  44cc40:	ldr	x8, [sp, #24]
  44cc44:	str	x8, [x19, #328]
  44cc48:	ldr	w8, [x21, #4]
  44cc4c:	sub	w8, w8, #0x1
  44cc50:	str	w8, [x21, #4]
  44cc54:	ldr	w8, [x19, #308]
  44cc58:	sub	w8, w8, #0x1
  44cc5c:	str	w8, [x19, #308]
  44cc60:	b	44c0f0 <feof@plt+0x493f0>
  44cc64:	cbz	w22, 44c43c <feof@plt+0x4973c>
  44cc68:	ldr	x21, [x21, #8]
  44cc6c:	mov	w23, wzr
  44cc70:	sub	w24, w22, #0x1
  44cc74:	mov	w26, #0x1                   	// #1
  44cc78:	mov	w27, #0x2c                  	// #44
  44cc7c:	mov	w28, #0x20                  	// #32
  44cc80:	b	44cca0 <feof@plt+0x49fa0>
  44cc84:	add	x9, x8, #0x1
  44cc88:	str	x9, [x19, #256]
  44cc8c:	strb	w28, [x19, x8]
  44cc90:	strb	w28, [x19, #264]
  44cc94:	add	w23, w23, #0x1
  44cc98:	cmp	w22, w23
  44cc9c:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44cca0:	str	w23, [x19, #316]
  44cca4:	cbz	x21, 44ccc0 <feof@plt+0x49fc0>
  44cca8:	ldr	w8, [x21, #4]
  44ccac:	cmp	w8, #0x1
  44ccb0:	b.gt	44ccc0 <feof@plt+0x49fc0>
  44ccb4:	ldr	w9, [x19, #308]
  44ccb8:	cmp	w9, #0x401
  44ccbc:	b.lt	44cd48 <feof@plt+0x4a048>  // b.tstop
  44ccc0:	str	w26, [x25]
  44ccc4:	cmp	w23, w24
  44ccc8:	b.ge	44cc94 <feof@plt+0x49f94>  // b.tcont
  44cccc:	ldr	x8, [x19, #256]
  44ccd0:	cmp	x8, #0xff
  44ccd4:	b.ne	44cd00 <feof@plt+0x4a000>  // b.any
  44ccd8:	ldp	x8, x2, [x19, #272]
  44ccdc:	mov	w1, #0xff                  	// #255
  44cce0:	mov	x0, x19
  44cce4:	strb	wzr, [x19, #255]
  44cce8:	blr	x8
  44ccec:	ldr	x9, [x19, #320]
  44ccf0:	mov	x8, xzr
  44ccf4:	str	xzr, [x19, #256]
  44ccf8:	add	x9, x9, #0x1
  44ccfc:	str	x9, [x19, #320]
  44cd00:	add	x9, x8, #0x1
  44cd04:	str	x9, [x19, #256]
  44cd08:	strb	w27, [x19, x8]
  44cd0c:	ldr	x8, [x19, #256]
  44cd10:	strb	w27, [x19, #264]
  44cd14:	cmp	x8, #0xff
  44cd18:	b.ne	44cc84 <feof@plt+0x49f84>  // b.any
  44cd1c:	ldp	x8, x2, [x19, #272]
  44cd20:	mov	w1, #0xff                  	// #255
  44cd24:	mov	x0, x19
  44cd28:	strb	wzr, [x19, #255]
  44cd2c:	blr	x8
  44cd30:	ldr	x9, [x19, #320]
  44cd34:	mov	x8, xzr
  44cd38:	str	xzr, [x19, #256]
  44cd3c:	add	x9, x9, #0x1
  44cd40:	str	x9, [x19, #320]
  44cd44:	b	44cc84 <feof@plt+0x49f84>
  44cd48:	add	w8, w8, #0x1
  44cd4c:	str	w8, [x21, #4]
  44cd50:	ldr	x8, [x19, #328]
  44cd54:	add	w9, w9, #0x1
  44cd58:	str	w9, [x19, #308]
  44cd5c:	mov	x0, x19
  44cd60:	stp	x21, x8, [sp, #16]
  44cd64:	add	x8, sp, #0x10
  44cd68:	mov	w1, w20
  44cd6c:	mov	x2, x21
  44cd70:	str	x8, [x19, #328]
  44cd74:	bl	449d30 <feof@plt+0x47030>
  44cd78:	ldr	x8, [sp, #24]
  44cd7c:	str	x8, [x19, #328]
  44cd80:	ldr	w8, [x21, #4]
  44cd84:	sub	w8, w8, #0x1
  44cd88:	str	w8, [x21, #4]
  44cd8c:	ldr	w8, [x19, #308]
  44cd90:	sub	w8, w8, #0x1
  44cd94:	str	w8, [x19, #308]
  44cd98:	cmp	w23, w24
  44cd9c:	b.ge	44cc94 <feof@plt+0x49f94>  // b.tcont
  44cda0:	b	44cccc <feof@plt+0x49fcc>
  44cda4:	mov	x22, xzr
  44cda8:	b	449d98 <feof@plt+0x47098>
  44cdac:	ldr	x22, [x19, #288]
  44cdb0:	cbz	x22, 44ded4 <feof@plt+0x4b1d4>
  44cdb4:	ldr	x9, [x22, #8]
  44cdb8:	ldr	w8, [x21, #8]
  44cdbc:	ldr	x21, [x9, #16]
  44cdc0:	tbnz	w8, #31, 44eb50 <feof@plt+0x4be50>
  44cdc4:	cbz	x21, 44c434 <feof@plt+0x49734>
  44cdc8:	ldr	w9, [x21]
  44cdcc:	cmp	w9, #0x2f
  44cdd0:	b.ne	44c434 <feof@plt+0x49734>  // b.any
  44cdd4:	subs	w9, w8, #0x1
  44cdd8:	b.lt	44eb48 <feof@plt+0x4be48>  // b.tstop
  44cddc:	ldr	x21, [x21, #16]
  44cde0:	mov	w8, w9
  44cde4:	cbnz	x21, 44cdc8 <feof@plt+0x4a0c8>
  44cde8:	b	44c434 <feof@plt+0x49734>
  44cdec:	b.ne	44ce18 <feof@plt+0x4a118>  // b.any
  44cdf0:	ldp	x8, x2, [x19, #272]
  44cdf4:	mov	w1, #0xff                  	// #255
  44cdf8:	mov	x0, x19
  44cdfc:	strb	wzr, [x19, #255]
  44ce00:	blr	x8
  44ce04:	ldr	x9, [x19, #320]
  44ce08:	mov	x8, xzr
  44ce0c:	str	xzr, [x19, #256]
  44ce10:	add	x9, x9, #0x1
  44ce14:	str	x9, [x19, #320]
  44ce18:	add	x9, x8, #0x1
  44ce1c:	mov	w10, #0x74                  	// #116
  44ce20:	str	x9, [x19, #256]
  44ce24:	strb	w10, [x19, x8]
  44ce28:	ldr	x8, [x19, #256]
  44ce2c:	strb	w10, [x19, #264]
  44ce30:	cmp	x8, #0xff
  44ce34:	b.ne	44ce60 <feof@plt+0x4a160>  // b.any
  44ce38:	ldp	x8, x2, [x19, #272]
  44ce3c:	mov	w1, #0xff                  	// #255
  44ce40:	mov	x0, x19
  44ce44:	strb	wzr, [x19, #255]
  44ce48:	blr	x8
  44ce4c:	ldr	x9, [x19, #320]
  44ce50:	mov	x8, xzr
  44ce54:	str	xzr, [x19, #256]
  44ce58:	add	x9, x9, #0x1
  44ce5c:	str	x9, [x19, #320]
  44ce60:	add	x9, x8, #0x1
  44ce64:	mov	w10, #0x68                  	// #104
  44ce68:	str	x9, [x19, #256]
  44ce6c:	strb	w10, [x19, x8]
  44ce70:	ldr	x8, [x19, #256]
  44ce74:	strb	w10, [x19, #264]
  44ce78:	cmp	x8, #0xff
  44ce7c:	b.ne	44cea8 <feof@plt+0x4a1a8>  // b.any
  44ce80:	ldp	x8, x2, [x19, #272]
  44ce84:	mov	w1, #0xff                  	// #255
  44ce88:	mov	x0, x19
  44ce8c:	strb	wzr, [x19, #255]
  44ce90:	blr	x8
  44ce94:	ldr	x9, [x19, #320]
  44ce98:	mov	x8, xzr
  44ce9c:	str	xzr, [x19, #256]
  44cea0:	add	x9, x9, #0x1
  44cea4:	str	x9, [x19, #320]
  44cea8:	add	x9, x8, #0x1
  44ceac:	mov	w10, #0x69                  	// #105
  44ceb0:	str	x9, [x19, #256]
  44ceb4:	strb	w10, [x19, x8]
  44ceb8:	ldr	x8, [x19, #256]
  44cebc:	strb	w10, [x19, #264]
  44cec0:	cmp	x8, #0xff
  44cec4:	b.ne	44cef0 <feof@plt+0x4a1f0>  // b.any
  44cec8:	ldp	x8, x2, [x19, #272]
  44cecc:	mov	w1, #0xff                  	// #255
  44ced0:	mov	x0, x19
  44ced4:	strb	wzr, [x19, #255]
  44ced8:	blr	x8
  44cedc:	ldr	x9, [x19, #320]
  44cee0:	mov	x8, xzr
  44cee4:	str	xzr, [x19, #256]
  44cee8:	add	x9, x9, #0x1
  44ceec:	str	x9, [x19, #320]
  44cef0:	add	x9, x8, #0x1
  44cef4:	mov	w10, #0x73                  	// #115
  44cef8:	b	44ed30 <feof@plt+0x4c030>
  44cefc:	mov	w24, #0x1                   	// #1
  44cf00:	ldr	x23, [x21, #16]
  44cf04:	cbz	x23, 44cf20 <feof@plt+0x4a220>
  44cf08:	ldr	w8, [x23, #4]
  44cf0c:	cmp	w8, #0x1
  44cf10:	b.gt	44cf20 <feof@plt+0x4a220>
  44cf14:	ldr	w9, [x19, #308]
  44cf18:	cmp	w9, #0x401
  44cf1c:	b.lt	44de80 <feof@plt+0x4b180>  // b.tstop
  44cf20:	mov	w8, #0x1                   	// #1
  44cf24:	str	w8, [x25]
  44cf28:	str	x22, [x19, #296]
  44cf2c:	ldr	w8, [sp, #32]
  44cf30:	cbnz	w8, 44c43c <feof@plt+0x4973c>
  44cf34:	cmp	w24, #0x2
  44cf38:	b.cc	44cf6c <feof@plt+0x4a26c>  // b.lo, b.ul, b.last
  44cf3c:	sub	w8, w24, #0x1
  44cf40:	add	x9, sp, #0x10
  44cf44:	add	x8, x9, x8, lsl #5
  44cf48:	add	x22, x8, #0x8
  44cf4c:	ldr	x2, [x22], #-32
  44cf50:	mov	x0, x19
  44cf54:	mov	w1, w20
  44cf58:	bl	44ffc8 <feof@plt+0x4d2c8>
  44cf5c:	sub	w24, w24, #0x1
  44cf60:	cmp	w24, #0x1
  44cf64:	b.hi	44cf4c <feof@plt+0x4a24c>  // b.pmore
  44cf68:	ldr	x22, [x19, #296]
  44cf6c:	mov	x0, x19
  44cf70:	mov	w1, w20
  44cf74:	mov	x2, x21
  44cf78:	mov	x3, x22
  44cf7c:	bl	450e40 <feof@plt+0x4e140>
  44cf80:	b	44c43c <feof@plt+0x4973c>
  44cf84:	b.ne	44cfb0 <feof@plt+0x4a2b0>  // b.any
  44cf88:	ldp	x8, x2, [x19, #272]
  44cf8c:	mov	w1, #0xff                  	// #255
  44cf90:	mov	x0, x19
  44cf94:	strb	wzr, [x19, #255]
  44cf98:	blr	x8
  44cf9c:	ldr	x9, [x19, #320]
  44cfa0:	mov	x8, xzr
  44cfa4:	str	xzr, [x19, #256]
  44cfa8:	add	x9, x9, #0x1
  44cfac:	str	x9, [x19, #320]
  44cfb0:	add	x9, x8, #0x1
  44cfb4:	mov	w10, #0x5f                  	// #95
  44cfb8:	str	x9, [x19, #256]
  44cfbc:	strb	w10, [x19, x8]
  44cfc0:	ldr	x8, [x19, #256]
  44cfc4:	strb	w10, [x19, #264]
  44cfc8:	cmp	x8, #0xff
  44cfcc:	b.ne	44cff8 <feof@plt+0x4a2f8>  // b.any
  44cfd0:	ldp	x8, x2, [x19, #272]
  44cfd4:	mov	w1, #0xff                  	// #255
  44cfd8:	mov	x0, x19
  44cfdc:	strb	wzr, [x19, #255]
  44cfe0:	blr	x8
  44cfe4:	ldr	x9, [x19, #320]
  44cfe8:	mov	x8, xzr
  44cfec:	str	xzr, [x19, #256]
  44cff0:	add	x9, x9, #0x1
  44cff4:	str	x9, [x19, #320]
  44cff8:	add	x9, x8, #0x1
  44cffc:	mov	w10, #0x46                  	// #70
  44d000:	str	x9, [x19, #256]
  44d004:	strb	w10, [x19, x8]
  44d008:	ldr	x8, [x19, #256]
  44d00c:	strb	w10, [x19, #264]
  44d010:	cmp	x8, #0xff
  44d014:	b.ne	44d040 <feof@plt+0x4a340>  // b.any
  44d018:	ldp	x8, x2, [x19, #272]
  44d01c:	mov	w1, #0xff                  	// #255
  44d020:	mov	x0, x19
  44d024:	strb	wzr, [x19, #255]
  44d028:	blr	x8
  44d02c:	ldr	x9, [x19, #320]
  44d030:	mov	x8, xzr
  44d034:	str	xzr, [x19, #256]
  44d038:	add	x9, x9, #0x1
  44d03c:	str	x9, [x19, #320]
  44d040:	add	x9, x8, #0x1
  44d044:	mov	w10, #0x72                  	// #114
  44d048:	str	x9, [x19, #256]
  44d04c:	strb	w10, [x19, x8]
  44d050:	ldr	x8, [x19, #256]
  44d054:	strb	w10, [x19, #264]
  44d058:	cmp	x8, #0xff
  44d05c:	b.ne	44d088 <feof@plt+0x4a388>  // b.any
  44d060:	ldp	x8, x2, [x19, #272]
  44d064:	mov	w1, #0xff                  	// #255
  44d068:	mov	x0, x19
  44d06c:	strb	wzr, [x19, #255]
  44d070:	blr	x8
  44d074:	ldr	x9, [x19, #320]
  44d078:	mov	x8, xzr
  44d07c:	str	xzr, [x19, #256]
  44d080:	add	x9, x9, #0x1
  44d084:	str	x9, [x19, #320]
  44d088:	add	x9, x8, #0x1
  44d08c:	mov	w10, #0x61                  	// #97
  44d090:	str	x9, [x19, #256]
  44d094:	strb	w10, [x19, x8]
  44d098:	ldr	x8, [x19, #256]
  44d09c:	strb	w10, [x19, #264]
  44d0a0:	cmp	x8, #0xff
  44d0a4:	b.ne	44d0d0 <feof@plt+0x4a3d0>  // b.any
  44d0a8:	ldp	x8, x2, [x19, #272]
  44d0ac:	mov	w1, #0xff                  	// #255
  44d0b0:	mov	x0, x19
  44d0b4:	strb	wzr, [x19, #255]
  44d0b8:	blr	x8
  44d0bc:	ldr	x9, [x19, #320]
  44d0c0:	mov	x8, xzr
  44d0c4:	str	xzr, [x19, #256]
  44d0c8:	add	x9, x9, #0x1
  44d0cc:	str	x9, [x19, #320]
  44d0d0:	add	x9, x8, #0x1
  44d0d4:	mov	w10, #0x63                  	// #99
  44d0d8:	str	x9, [x19, #256]
  44d0dc:	strb	w10, [x19, x8]
  44d0e0:	ldr	x8, [x19, #256]
  44d0e4:	strb	w10, [x19, #264]
  44d0e8:	cmp	x8, #0xff
  44d0ec:	b.ne	44d118 <feof@plt+0x4a418>  // b.any
  44d0f0:	ldp	x8, x2, [x19, #272]
  44d0f4:	mov	w1, #0xff                  	// #255
  44d0f8:	mov	x0, x19
  44d0fc:	strb	wzr, [x19, #255]
  44d100:	blr	x8
  44d104:	ldr	x9, [x19, #320]
  44d108:	mov	x8, xzr
  44d10c:	str	xzr, [x19, #256]
  44d110:	add	x9, x9, #0x1
  44d114:	str	x9, [x19, #320]
  44d118:	add	x9, x8, #0x1
  44d11c:	mov	w10, #0x74                  	// #116
  44d120:	b	44ed30 <feof@plt+0x4c030>
  44d124:	ldr	x21, [x21, #8]
  44d128:	ldr	w8, [x21]
  44d12c:	cmp	w8, #0x31
  44d130:	b.hi	44e278 <feof@plt+0x4b578>  // b.pmore
  44d134:	mov	w9, #0x1                   	// #1
  44d138:	lsl	x8, x9, x8
  44d13c:	mov	x9, #0x43                  	// #67
  44d140:	movk	x9, #0x2, lsl #48
  44d144:	tst	x8, x9
  44d148:	b.eq	44e278 <feof@plt+0x4b578>  // b.none
  44d14c:	cbz	x21, 44d168 <feof@plt+0x4a468>
  44d150:	ldr	w8, [x21, #4]
  44d154:	cmp	w8, #0x1
  44d158:	b.gt	44d168 <feof@plt+0x4a468>
  44d15c:	ldr	w9, [x19, #308]
  44d160:	cmp	w9, #0x401
  44d164:	b.lt	44e5c8 <feof@plt+0x4b8c8>  // b.tstop
  44d168:	mov	w8, #0x1                   	// #1
  44d16c:	str	w8, [x25]
  44d170:	b	44e618 <feof@plt+0x4b918>
  44d174:	ldr	x8, [x19, #256]
  44d178:	cmp	x8, #0xff
  44d17c:	b.ne	44d1a8 <feof@plt+0x4a4a8>  // b.any
  44d180:	ldp	x8, x2, [x19, #272]
  44d184:	mov	w1, #0xff                  	// #255
  44d188:	mov	x0, x19
  44d18c:	strb	wzr, [x19, #255]
  44d190:	blr	x8
  44d194:	ldr	x9, [x19, #320]
  44d198:	mov	x8, xzr
  44d19c:	str	xzr, [x19, #256]
  44d1a0:	add	x9, x9, #0x1
  44d1a4:	str	x9, [x19, #320]
  44d1a8:	add	x9, x8, #0x1
  44d1ac:	mov	w10, #0x28                  	// #40
  44d1b0:	str	x9, [x19, #256]
  44d1b4:	strb	w10, [x19, x8]
  44d1b8:	strb	w10, [x19, #264]
  44d1bc:	ldr	x22, [x22, #8]
  44d1c0:	cbz	x22, 44d1dc <feof@plt+0x4a4dc>
  44d1c4:	ldr	w8, [x22, #4]
  44d1c8:	cmp	w8, #0x1
  44d1cc:	b.gt	44d1dc <feof@plt+0x4a4dc>
  44d1d0:	ldr	w9, [x19, #308]
  44d1d4:	cmp	w9, #0x401
  44d1d8:	b.lt	44e3d8 <feof@plt+0x4b6d8>  // b.tstop
  44d1dc:	mov	w8, #0x1                   	// #1
  44d1e0:	str	w8, [x25]
  44d1e4:	ldr	x8, [x19, #256]
  44d1e8:	cmp	x8, #0xff
  44d1ec:	b.ne	44d218 <feof@plt+0x4a518>  // b.any
  44d1f0:	ldp	x8, x2, [x19, #272]
  44d1f4:	mov	w1, #0xff                  	// #255
  44d1f8:	mov	x0, x19
  44d1fc:	strb	wzr, [x19, #255]
  44d200:	blr	x8
  44d204:	ldr	x9, [x19, #320]
  44d208:	mov	x8, xzr
  44d20c:	str	xzr, [x19, #256]
  44d210:	add	x9, x9, #0x1
  44d214:	str	x9, [x19, #320]
  44d218:	add	x9, x8, #0x1
  44d21c:	mov	w10, #0x29                  	// #41
  44d220:	str	x9, [x19, #256]
  44d224:	strb	w10, [x19, x8]
  44d228:	strb	w10, [x19, #264]
  44d22c:	b	44d254 <feof@plt+0x4a554>
  44d230:	cbz	x22, 44d24c <feof@plt+0x4a54c>
  44d234:	ldr	w8, [x22, #4]
  44d238:	cmp	w8, #0x1
  44d23c:	b.gt	44d24c <feof@plt+0x4a54c>
  44d240:	ldr	w9, [x19, #308]
  44d244:	cmp	w9, #0x401
  44d248:	b.lt	44e42c <feof@plt+0x4b72c>  // b.tstop
  44d24c:	mov	w8, #0x1                   	// #1
  44d250:	str	w8, [x25]
  44d254:	ldr	w8, [x21]
  44d258:	cmp	w8, #0x31
  44d25c:	b.hi	44d278 <feof@plt+0x4a578>  // b.pmore
  44d260:	mov	w9, #0x1                   	// #1
  44d264:	lsl	x8, x9, x8
  44d268:	mov	x9, #0x43                  	// #67
  44d26c:	movk	x9, #0x2, lsl #48
  44d270:	tst	x8, x9
  44d274:	b.ne	44d53c <feof@plt+0x4a83c>  // b.any
  44d278:	ldr	x8, [x19, #256]
  44d27c:	cmp	x8, #0xff
  44d280:	b.ne	44d2ac <feof@plt+0x4a5ac>  // b.any
  44d284:	ldp	x8, x2, [x19, #272]
  44d288:	mov	w1, #0xff                  	// #255
  44d28c:	mov	x0, x19
  44d290:	strb	wzr, [x19, #255]
  44d294:	blr	x8
  44d298:	ldr	x9, [x19, #320]
  44d29c:	mov	x8, xzr
  44d2a0:	str	xzr, [x19, #256]
  44d2a4:	add	x9, x9, #0x1
  44d2a8:	str	x9, [x19, #320]
  44d2ac:	add	x9, x8, #0x1
  44d2b0:	mov	w10, #0x28                  	// #40
  44d2b4:	str	x9, [x19, #256]
  44d2b8:	strb	w10, [x19, x8]
  44d2bc:	strb	w10, [x19, #264]
  44d2c0:	cbnz	x21, 44c6f4 <feof@plt+0x499f4>
  44d2c4:	b	44ecec <feof@plt+0x4bfec>
  44d2c8:	add	w8, w8, #0x1
  44d2cc:	str	w8, [x22, #4]
  44d2d0:	ldr	x8, [x19, #328]
  44d2d4:	add	w9, w9, #0x1
  44d2d8:	str	w9, [x19, #308]
  44d2dc:	add	x9, sp, #0x10
  44d2e0:	mov	x0, x19
  44d2e4:	mov	w1, w20
  44d2e8:	mov	x2, x22
  44d2ec:	stp	x22, x8, [sp, #16]
  44d2f0:	str	x9, [x19, #328]
  44d2f4:	bl	449d30 <feof@plt+0x47030>
  44d2f8:	ldr	x8, [sp, #24]
  44d2fc:	str	x8, [x19, #328]
  44d300:	ldr	w8, [x22, #4]
  44d304:	sub	w8, w8, #0x1
  44d308:	str	w8, [x22, #4]
  44d30c:	ldr	w8, [x19, #308]
  44d310:	sub	w8, w8, #0x1
  44d314:	str	w8, [x19, #308]
  44d318:	tbz	w20, #2, 449ed0 <feof@plt+0x471d0>
  44d31c:	ldr	x8, [x19, #256]
  44d320:	cmp	x8, #0xff
  44d324:	b.ne	44d350 <feof@plt+0x4a650>  // b.any
  44d328:	ldp	x8, x2, [x19, #272]
  44d32c:	mov	w1, #0xff                  	// #255
  44d330:	mov	x0, x19
  44d334:	strb	wzr, [x19, #255]
  44d338:	blr	x8
  44d33c:	ldr	x9, [x19, #320]
  44d340:	mov	x8, xzr
  44d344:	str	xzr, [x19, #256]
  44d348:	add	x9, x9, #0x1
  44d34c:	str	x9, [x19, #320]
  44d350:	add	x9, x8, #0x1
  44d354:	mov	w10, #0x2e                  	// #46
  44d358:	str	x9, [x19, #256]
  44d35c:	strb	w10, [x19, x8]
  44d360:	strb	w10, [x19, #264]
  44d364:	ldr	x21, [x21, #16]
  44d368:	ldr	w8, [x21]
  44d36c:	cmp	w8, #0x47
  44d370:	b.ne	44d53c <feof@plt+0x4a83c>  // b.any
  44d374:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44d378:	mov	x22, xzr
  44d37c:	add	x23, x23, #0xdda
  44d380:	b	44d3a0 <feof@plt+0x4a6a0>
  44d384:	add	x22, x22, #0x1
  44d388:	add	x9, x8, #0x1
  44d38c:	cmp	x22, #0xd
  44d390:	str	x9, [x19, #256]
  44d394:	strb	w24, [x19, x8]
  44d398:	strb	w24, [x19, #264]
  44d39c:	b.eq	44d3dc <feof@plt+0x4a6dc>  // b.none
  44d3a0:	ldr	x8, [x19, #256]
  44d3a4:	ldrb	w24, [x23, x22]
  44d3a8:	cmp	x8, #0xff
  44d3ac:	b.ne	44d384 <feof@plt+0x4a684>  // b.any
  44d3b0:	ldp	x8, x2, [x19, #272]
  44d3b4:	mov	w1, #0xff                  	// #255
  44d3b8:	mov	x0, x19
  44d3bc:	strb	wzr, [x19, #255]
  44d3c0:	blr	x8
  44d3c4:	ldr	x9, [x19, #320]
  44d3c8:	mov	x8, xzr
  44d3cc:	str	xzr, [x19, #256]
  44d3d0:	add	x9, x9, #0x1
  44d3d4:	str	x9, [x19, #320]
  44d3d8:	b	44d384 <feof@plt+0x4a684>
  44d3dc:	ldr	w8, [x21, #16]
  44d3e0:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44d3e4:	add	x1, x1, #0xdb1
  44d3e8:	add	x0, sp, #0x10
  44d3ec:	add	w2, w8, #0x1
  44d3f0:	bl	402880 <sprintf@plt>
  44d3f4:	add	x0, sp, #0x10
  44d3f8:	bl	4026d0 <strlen@plt>
  44d3fc:	cbz	x0, 44d464 <feof@plt+0x4a764>
  44d400:	mov	x22, x0
  44d404:	add	x23, sp, #0x10
  44d408:	b	44d428 <feof@plt+0x4a728>
  44d40c:	add	x9, x8, #0x1
  44d410:	subs	x22, x22, #0x1
  44d414:	add	x23, x23, #0x1
  44d418:	str	x9, [x19, #256]
  44d41c:	strb	w24, [x19, x8]
  44d420:	strb	w24, [x19, #264]
  44d424:	b.eq	44d464 <feof@plt+0x4a764>  // b.none
  44d428:	ldr	x8, [x19, #256]
  44d42c:	ldrb	w24, [x23]
  44d430:	cmp	x8, #0xff
  44d434:	b.ne	44d40c <feof@plt+0x4a70c>  // b.any
  44d438:	ldp	x8, x2, [x19, #272]
  44d43c:	mov	w1, #0xff                  	// #255
  44d440:	mov	x0, x19
  44d444:	strb	wzr, [x19, #255]
  44d448:	blr	x8
  44d44c:	ldr	x9, [x19, #320]
  44d450:	mov	x8, xzr
  44d454:	str	xzr, [x19, #256]
  44d458:	add	x9, x9, #0x1
  44d45c:	str	x9, [x19, #320]
  44d460:	b	44d40c <feof@plt+0x4a70c>
  44d464:	ldr	x8, [x19, #256]
  44d468:	cmp	x8, #0xff
  44d46c:	b.ne	44d498 <feof@plt+0x4a798>  // b.any
  44d470:	ldp	x8, x2, [x19, #272]
  44d474:	mov	w1, #0xff                  	// #255
  44d478:	mov	x0, x19
  44d47c:	strb	wzr, [x19, #255]
  44d480:	blr	x8
  44d484:	ldr	x9, [x19, #320]
  44d488:	mov	x8, xzr
  44d48c:	str	xzr, [x19, #256]
  44d490:	add	x9, x9, #0x1
  44d494:	str	x9, [x19, #320]
  44d498:	add	x9, x8, #0x1
  44d49c:	mov	w10, #0x7d                  	// #125
  44d4a0:	str	x9, [x19, #256]
  44d4a4:	strb	w10, [x19, x8]
  44d4a8:	ldr	x8, [x19, #256]
  44d4ac:	strb	w10, [x19, #264]
  44d4b0:	cmp	x8, #0xff
  44d4b4:	b.ne	44d4e0 <feof@plt+0x4a7e0>  // b.any
  44d4b8:	ldp	x8, x2, [x19, #272]
  44d4bc:	mov	w1, #0xff                  	// #255
  44d4c0:	mov	x0, x19
  44d4c4:	strb	wzr, [x19, #255]
  44d4c8:	blr	x8
  44d4cc:	ldr	x9, [x19, #320]
  44d4d0:	mov	x8, xzr
  44d4d4:	str	xzr, [x19, #256]
  44d4d8:	add	x9, x9, #0x1
  44d4dc:	str	x9, [x19, #320]
  44d4e0:	add	x9, x8, #0x1
  44d4e4:	mov	w22, #0x3a                  	// #58
  44d4e8:	str	x9, [x19, #256]
  44d4ec:	strb	w22, [x19, x8]
  44d4f0:	ldr	x8, [x19, #256]
  44d4f4:	strb	w22, [x19, #264]
  44d4f8:	cmp	x8, #0xff
  44d4fc:	b.ne	44d528 <feof@plt+0x4a828>  // b.any
  44d500:	ldp	x8, x2, [x19, #272]
  44d504:	mov	w1, #0xff                  	// #255
  44d508:	mov	x0, x19
  44d50c:	strb	wzr, [x19, #255]
  44d510:	blr	x8
  44d514:	ldr	x9, [x19, #320]
  44d518:	mov	x8, xzr
  44d51c:	str	xzr, [x19, #256]
  44d520:	add	x9, x9, #0x1
  44d524:	str	x9, [x19, #320]
  44d528:	add	x9, x8, #0x1
  44d52c:	str	x9, [x19, #256]
  44d530:	strb	w22, [x19, x8]
  44d534:	strb	w22, [x19, #264]
  44d538:	ldr	x21, [x21, #8]
  44d53c:	cbnz	x21, 44c41c <feof@plt+0x4971c>
  44d540:	b	44c434 <feof@plt+0x49734>
  44d544:	add	w8, w8, #0x1
  44d548:	str	w8, [x22, #4]
  44d54c:	ldr	x8, [x19, #328]
  44d550:	add	w9, w9, #0x1
  44d554:	str	w9, [x19, #308]
  44d558:	sub	x9, x29, #0x10
  44d55c:	mov	x0, x19
  44d560:	mov	w1, w20
  44d564:	mov	x2, x22
  44d568:	stp	x22, x8, [x29, #-16]
  44d56c:	str	x9, [x19, #328]
  44d570:	bl	449d30 <feof@plt+0x47030>
  44d574:	ldur	x8, [x29, #-8]
  44d578:	str	x8, [x19, #328]
  44d57c:	ldr	w8, [x22, #4]
  44d580:	sub	w8, w8, #0x1
  44d584:	str	w8, [x22, #4]
  44d588:	ldr	w8, [x19, #308]
  44d58c:	sub	w8, w8, #0x1
  44d590:	str	w8, [x19, #308]
  44d594:	ldr	w8, [sp, #32]
  44d598:	cbnz	w8, 44a084 <feof@plt+0x47384>
  44d59c:	b	44a074 <feof@plt+0x47374>
  44d5a0:	add	w8, w8, #0x1
  44d5a4:	str	w8, [x22, #4]
  44d5a8:	ldr	x8, [x19, #328]
  44d5ac:	add	w9, w9, #0x1
  44d5b0:	str	w9, [x19, #308]
  44d5b4:	add	x9, sp, #0x10
  44d5b8:	mov	x0, x19
  44d5bc:	mov	w1, w20
  44d5c0:	mov	x2, x22
  44d5c4:	stp	x22, x8, [sp, #16]
  44d5c8:	str	x9, [x19, #328]
  44d5cc:	bl	449d30 <feof@plt+0x47030>
  44d5d0:	ldr	x8, [sp, #24]
  44d5d4:	str	x8, [x19, #328]
  44d5d8:	ldr	w8, [x22, #4]
  44d5dc:	sub	w8, w8, #0x1
  44d5e0:	str	w8, [x22, #4]
  44d5e4:	ldr	w8, [x19, #308]
  44d5e8:	sub	w8, w8, #0x1
  44d5ec:	str	w8, [x19, #308]
  44d5f0:	ldr	x8, [x21, #16]
  44d5f4:	cbz	x8, 44c43c <feof@plt+0x4973c>
  44d5f8:	ldr	x8, [x19, #256]
  44d5fc:	cmp	x8, #0xfe
  44d600:	b.cc	44d62c <feof@plt+0x4a92c>  // b.lo, b.ul, b.last
  44d604:	strb	wzr, [x19, x8]
  44d608:	ldr	x1, [x19, #256]
  44d60c:	ldp	x8, x2, [x19, #272]
  44d610:	mov	x0, x19
  44d614:	blr	x8
  44d618:	ldr	x9, [x19, #320]
  44d61c:	mov	x8, xzr
  44d620:	str	xzr, [x19, #256]
  44d624:	add	x9, x9, #0x1
  44d628:	str	x9, [x19, #320]
  44d62c:	add	x9, x8, #0x1
  44d630:	mov	w10, #0x2c                  	// #44
  44d634:	str	x9, [x19, #256]
  44d638:	strb	w10, [x19, x8]
  44d63c:	ldr	x8, [x19, #256]
  44d640:	strb	w10, [x19, #264]
  44d644:	cmp	x8, #0xff
  44d648:	b.ne	44d674 <feof@plt+0x4a974>  // b.any
  44d64c:	ldp	x8, x2, [x19, #272]
  44d650:	mov	w1, #0xff                  	// #255
  44d654:	mov	x0, x19
  44d658:	strb	wzr, [x19, #255]
  44d65c:	blr	x8
  44d660:	ldr	x9, [x19, #320]
  44d664:	mov	x8, xzr
  44d668:	str	xzr, [x19, #256]
  44d66c:	add	x9, x9, #0x1
  44d670:	str	x9, [x19, #320]
  44d674:	add	x9, x8, #0x1
  44d678:	mov	w10, #0x20                  	// #32
  44d67c:	str	x9, [x19, #256]
  44d680:	strb	w10, [x19, x8]
  44d684:	strb	w10, [x19, #264]
  44d688:	ldr	x21, [x21, #16]
  44d68c:	ldr	x22, [x19, #256]
  44d690:	cbz	x21, 44d6ac <feof@plt+0x4a9ac>
  44d694:	ldr	w8, [x21, #4]
  44d698:	cmp	w8, #0x1
  44d69c:	b.gt	44d6ac <feof@plt+0x4a9ac>
  44d6a0:	ldr	w9, [x19, #308]
  44d6a4:	cmp	w9, #0x401
  44d6a8:	b.lt	44d824 <feof@plt+0x4ab24>  // b.tstop
  44d6ac:	mov	w8, #0x1                   	// #1
  44d6b0:	str	w8, [x25]
  44d6b4:	ldr	x8, [x19, #256]
  44d6b8:	cmp	x8, x22
  44d6bc:	b.ne	44c43c <feof@plt+0x4973c>  // b.any
  44d6c0:	sub	x8, x22, #0x2
  44d6c4:	str	x8, [x19, #256]
  44d6c8:	b	44c43c <feof@plt+0x4973c>
  44d6cc:	mov	x0, x19
  44d6d0:	mov	w1, w20
  44d6d4:	mov	x2, x21
  44d6d8:	bl	4511ec <feof@plt+0x4e4ec>
  44d6dc:	cbnz	w0, 44c43c <feof@plt+0x4973c>
  44d6e0:	ldr	x8, [x21, #8]
  44d6e4:	ldr	w9, [x8]
  44d6e8:	cmp	w9, #0x32
  44d6ec:	b.ne	44d75c <feof@plt+0x4aa5c>  // b.any
  44d6f0:	ldr	x9, [x8, #8]
  44d6f4:	ldr	w10, [x9, #16]
  44d6f8:	cmp	w10, #0x1
  44d6fc:	b.ne	44d75c <feof@plt+0x4aa5c>  // b.any
  44d700:	ldr	x9, [x9, #8]
  44d704:	ldrb	w9, [x9]
  44d708:	cmp	w9, #0x3e
  44d70c:	b.ne	44d75c <feof@plt+0x4aa5c>  // b.any
  44d710:	ldr	x8, [x19, #256]
  44d714:	cmp	x8, #0xff
  44d718:	b.ne	44d744 <feof@plt+0x4aa44>  // b.any
  44d71c:	ldp	x8, x2, [x19, #272]
  44d720:	mov	w1, #0xff                  	// #255
  44d724:	mov	x0, x19
  44d728:	strb	wzr, [x19, #255]
  44d72c:	blr	x8
  44d730:	ldr	x9, [x19, #320]
  44d734:	mov	x8, xzr
  44d738:	str	xzr, [x19, #256]
  44d73c:	add	x9, x9, #0x1
  44d740:	str	x9, [x19, #320]
  44d744:	add	x9, x8, #0x1
  44d748:	mov	w10, #0x28                  	// #40
  44d74c:	str	x9, [x19, #256]
  44d750:	strb	w10, [x19, x8]
  44d754:	strb	w10, [x19, #264]
  44d758:	ldr	x8, [x21, #8]
  44d75c:	ldr	x8, [x8, #8]
  44d760:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44d764:	add	x1, x1, #0xa70
  44d768:	ldr	x0, [x8]
  44d76c:	bl	402b40 <strcmp@plt>
  44d770:	ldr	x8, [x21, #16]
  44d774:	ldr	x22, [x8, #8]
  44d778:	ldr	w8, [x22]
  44d77c:	cbnz	w0, 44e38c <feof@plt+0x4b68c>
  44d780:	cmp	w8, #0x3
  44d784:	b.ne	44e38c <feof@plt+0x4b68c>  // b.any
  44d788:	ldr	x8, [x22, #16]
  44d78c:	ldr	w8, [x8]
  44d790:	cmp	w8, #0x29
  44d794:	b.eq	44d7a0 <feof@plt+0x4aaa0>  // b.none
  44d798:	mov	w8, #0x1                   	// #1
  44d79c:	str	w8, [x25]
  44d7a0:	ldr	x22, [x22, #8]
  44d7a4:	ldr	w8, [x22]
  44d7a8:	cmp	w8, #0x31
  44d7ac:	b.ls	44e398 <feof@plt+0x4b698>  // b.plast
  44d7b0:	b	44ee94 <feof@plt+0x4c194>
  44d7b4:	add	w8, w8, #0x1
  44d7b8:	str	w8, [x22, #4]
  44d7bc:	ldr	x8, [x19, #328]
  44d7c0:	add	w9, w9, #0x1
  44d7c4:	str	w9, [x19, #308]
  44d7c8:	add	x9, sp, #0x10
  44d7cc:	mov	x0, x19
  44d7d0:	mov	w1, w20
  44d7d4:	mov	x2, x22
  44d7d8:	stp	x22, x8, [sp, #16]
  44d7dc:	str	x9, [x19, #328]
  44d7e0:	bl	449d30 <feof@plt+0x47030>
  44d7e4:	ldr	x8, [sp, #24]
  44d7e8:	str	x8, [x19, #328]
  44d7ec:	ldr	w8, [x22, #4]
  44d7f0:	sub	w8, w8, #0x1
  44d7f4:	str	w8, [x22, #4]
  44d7f8:	ldr	w8, [x19, #308]
  44d7fc:	sub	w8, w8, #0x1
  44d800:	str	w8, [x19, #308]
  44d804:	b	44bfdc <feof@plt+0x492dc>
  44d808:	cmp	w23, #0x7
  44d80c:	b.ne	44bf6c <feof@plt+0x4926c>  // b.any
  44d810:	ldr	x9, [x21, #16]
  44d814:	ldr	w10, [x9]
  44d818:	cbz	w10, 44e6e4 <feof@plt+0x4b9e4>
  44d81c:	mov	w23, #0x7                   	// #7
  44d820:	b	44bf6c <feof@plt+0x4926c>
  44d824:	add	w8, w8, #0x1
  44d828:	ldr	x23, [x19, #320]
  44d82c:	str	w8, [x21, #4]
  44d830:	ldr	x8, [x19, #328]
  44d834:	add	w9, w9, #0x1
  44d838:	str	w9, [x19, #308]
  44d83c:	add	x9, sp, #0x10
  44d840:	mov	x0, x19
  44d844:	mov	w1, w20
  44d848:	mov	x2, x21
  44d84c:	stp	x21, x8, [sp, #16]
  44d850:	str	x9, [x19, #328]
  44d854:	bl	449d30 <feof@plt+0x47030>
  44d858:	ldr	x8, [sp, #24]
  44d85c:	str	x8, [x19, #328]
  44d860:	ldr	w8, [x21, #4]
  44d864:	sub	w8, w8, #0x1
  44d868:	str	w8, [x21, #4]
  44d86c:	ldr	w8, [x19, #308]
  44d870:	ldr	x9, [x19, #320]
  44d874:	sub	w8, w8, #0x1
  44d878:	cmp	x9, x23
  44d87c:	str	w8, [x19, #308]
  44d880:	b.ne	44c43c <feof@plt+0x4973c>  // b.any
  44d884:	b	44d6b4 <feof@plt+0x4a9b4>
  44d888:	add	w8, w8, #0x1
  44d88c:	str	w8, [x22, #4]
  44d890:	ldr	x8, [x19, #328]
  44d894:	add	w9, w9, #0x1
  44d898:	str	w9, [x19, #308]
  44d89c:	add	x9, sp, #0x10
  44d8a0:	mov	x0, x19
  44d8a4:	mov	w1, w20
  44d8a8:	mov	x2, x22
  44d8ac:	stp	x22, x8, [sp, #16]
  44d8b0:	str	x9, [x19, #328]
  44d8b4:	bl	449d30 <feof@plt+0x47030>
  44d8b8:	ldr	x8, [sp, #24]
  44d8bc:	str	x8, [x19, #328]
  44d8c0:	ldr	w8, [x22, #4]
  44d8c4:	sub	w8, w8, #0x1
  44d8c8:	str	w8, [x22, #4]
  44d8cc:	ldr	w8, [x19, #308]
  44d8d0:	sub	w8, w8, #0x1
  44d8d4:	str	w8, [x19, #308]
  44d8d8:	ldrb	w8, [x19, #264]
  44d8dc:	cmp	w8, #0x3c
  44d8e0:	b.ne	44d92c <feof@plt+0x4ac2c>  // b.any
  44d8e4:	ldr	x8, [x19, #256]
  44d8e8:	cmp	x8, #0xff
  44d8ec:	b.ne	44d918 <feof@plt+0x4ac18>  // b.any
  44d8f0:	ldp	x8, x2, [x19, #272]
  44d8f4:	mov	w1, #0xff                  	// #255
  44d8f8:	mov	x0, x19
  44d8fc:	strb	wzr, [x19, #255]
  44d900:	blr	x8
  44d904:	ldr	x9, [x19, #320]
  44d908:	mov	x8, xzr
  44d90c:	str	xzr, [x19, #256]
  44d910:	add	x9, x9, #0x1
  44d914:	str	x9, [x19, #320]
  44d918:	add	x9, x8, #0x1
  44d91c:	mov	w10, #0x20                  	// #32
  44d920:	str	x9, [x19, #256]
  44d924:	strb	w10, [x19, x8]
  44d928:	strb	w10, [x19, #264]
  44d92c:	ldr	x8, [x19, #256]
  44d930:	cmp	x8, #0xff
  44d934:	b.ne	44d960 <feof@plt+0x4ac60>  // b.any
  44d938:	ldp	x8, x2, [x19, #272]
  44d93c:	mov	w1, #0xff                  	// #255
  44d940:	mov	x0, x19
  44d944:	strb	wzr, [x19, #255]
  44d948:	blr	x8
  44d94c:	ldr	x9, [x19, #320]
  44d950:	mov	x8, xzr
  44d954:	str	xzr, [x19, #256]
  44d958:	add	x9, x9, #0x1
  44d95c:	str	x9, [x19, #320]
  44d960:	add	x9, x8, #0x1
  44d964:	mov	w10, #0x3c                  	// #60
  44d968:	str	x9, [x19, #256]
  44d96c:	strb	w10, [x19, x8]
  44d970:	strb	w10, [x19, #264]
  44d974:	ldr	x21, [x21, #16]
  44d978:	cbz	x21, 44d994 <feof@plt+0x4ac94>
  44d97c:	ldr	w8, [x21, #4]
  44d980:	cmp	w8, #0x1
  44d984:	b.gt	44d994 <feof@plt+0x4ac94>
  44d988:	ldr	w9, [x19, #308]
  44d98c:	cmp	w9, #0x401
  44d990:	b.lt	44ddd8 <feof@plt+0x4b0d8>  // b.tstop
  44d994:	mov	w8, #0x1                   	// #1
  44d998:	str	w8, [x25]
  44d99c:	ldr	x8, [x19, #256]
  44d9a0:	cmp	x8, #0xff
  44d9a4:	b.ne	44d9d0 <feof@plt+0x4acd0>  // b.any
  44d9a8:	ldp	x8, x2, [x19, #272]
  44d9ac:	mov	w1, #0xff                  	// #255
  44d9b0:	mov	x0, x19
  44d9b4:	strb	wzr, [x19, #255]
  44d9b8:	blr	x8
  44d9bc:	ldr	x9, [x19, #320]
  44d9c0:	mov	x8, xzr
  44d9c4:	str	xzr, [x19, #256]
  44d9c8:	add	x9, x9, #0x1
  44d9cc:	str	x9, [x19, #320]
  44d9d0:	add	x9, x8, #0x1
  44d9d4:	mov	w10, #0x3e                  	// #62
  44d9d8:	str	x9, [x19, #256]
  44d9dc:	strb	w10, [x19, x8]
  44d9e0:	strb	w10, [x19, #264]
  44d9e4:	str	x24, [x19, #296]
  44d9e8:	str	x23, [x19, #368]
  44d9ec:	b	44c43c <feof@plt+0x4973c>
  44d9f0:	cbz	x23, 44da1c <feof@plt+0x4ad1c>
  44d9f4:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44d9f8:	add	x1, x1, #0xb2f
  44d9fc:	mov	x0, x23
  44da00:	bl	402b40 <strcmp@plt>
  44da04:	cbz	w0, 44e8e4 <feof@plt+0x4bbe4>
  44da08:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44da0c:	add	x1, x1, #0xb22
  44da10:	mov	x0, x23
  44da14:	bl	402b40 <strcmp@plt>
  44da18:	cbz	w0, 44ed94 <feof@plt+0x4c094>
  44da1c:	ldrsw	x22, [x24, #16]
  44da20:	cbz	w22, 44e070 <feof@plt+0x4b370>
  44da24:	ldr	x24, [x24, #8]
  44da28:	b	44da48 <feof@plt+0x4ad48>
  44da2c:	add	x9, x8, #0x1
  44da30:	subs	x22, x22, #0x1
  44da34:	add	x24, x24, #0x1
  44da38:	str	x9, [x19, #256]
  44da3c:	strb	w26, [x19, x8]
  44da40:	strb	w26, [x19, #264]
  44da44:	b.eq	44e070 <feof@plt+0x4b370>  // b.none
  44da48:	ldr	x8, [x19, #256]
  44da4c:	ldrb	w26, [x24]
  44da50:	cmp	x8, #0xff
  44da54:	b.ne	44da2c <feof@plt+0x4ad2c>  // b.any
  44da58:	ldp	x8, x2, [x19, #272]
  44da5c:	mov	w1, #0xff                  	// #255
  44da60:	mov	x0, x19
  44da64:	strb	wzr, [x19, #255]
  44da68:	blr	x8
  44da6c:	ldr	x9, [x19, #320]
  44da70:	mov	x8, xzr
  44da74:	str	xzr, [x19, #256]
  44da78:	add	x9, x9, #0x1
  44da7c:	str	x9, [x19, #320]
  44da80:	b	44da2c <feof@plt+0x4ad2c>
  44da84:	add	w8, w8, #0x1
  44da88:	str	w8, [x22, #4]
  44da8c:	ldr	x8, [x19, #328]
  44da90:	add	w9, w9, #0x1
  44da94:	str	w9, [x19, #308]
  44da98:	add	x9, sp, #0x10
  44da9c:	mov	x0, x19
  44daa0:	mov	w1, w20
  44daa4:	mov	x2, x22
  44daa8:	stp	x22, x8, [sp, #16]
  44daac:	str	x9, [x19, #328]
  44dab0:	bl	449d30 <feof@plt+0x47030>
  44dab4:	ldr	x8, [sp, #24]
  44dab8:	str	x8, [x19, #328]
  44dabc:	ldr	w8, [x22, #4]
  44dac0:	sub	w8, w8, #0x1
  44dac4:	str	w8, [x22, #4]
  44dac8:	ldr	w8, [x19, #308]
  44dacc:	sub	w8, w8, #0x1
  44dad0:	str	w8, [x19, #308]
  44dad4:	ldr	x8, [x19, #256]
  44dad8:	cmp	x8, #0xff
  44dadc:	b.ne	44db08 <feof@plt+0x4ae08>  // b.any
  44dae0:	ldp	x8, x2, [x19, #272]
  44dae4:	mov	w1, #0xff                  	// #255
  44dae8:	mov	x0, x19
  44daec:	strb	wzr, [x19, #255]
  44daf0:	blr	x8
  44daf4:	ldr	x9, [x19, #320]
  44daf8:	mov	x8, xzr
  44dafc:	str	xzr, [x19, #256]
  44db00:	add	x9, x9, #0x1
  44db04:	str	x9, [x19, #320]
  44db08:	add	x9, x8, #0x1
  44db0c:	mov	w10, #0x7b                  	// #123
  44db10:	str	x9, [x19, #256]
  44db14:	strb	w10, [x19, x8]
  44db18:	strb	w10, [x19, #264]
  44db1c:	cbz	x21, 44db38 <feof@plt+0x4ae38>
  44db20:	ldr	w8, [x21, #4]
  44db24:	cmp	w8, #0x1
  44db28:	b.gt	44db38 <feof@plt+0x4ae38>
  44db2c:	ldr	w9, [x19, #308]
  44db30:	cmp	w9, #0x401
  44db34:	b.lt	44dd84 <feof@plt+0x4b084>  // b.tstop
  44db38:	mov	w8, #0x1                   	// #1
  44db3c:	str	w8, [x25]
  44db40:	ldr	x8, [x19, #256]
  44db44:	cmp	x8, #0xff
  44db48:	b.ne	44db74 <feof@plt+0x4ae74>  // b.any
  44db4c:	ldp	x8, x2, [x19, #272]
  44db50:	mov	w1, #0xff                  	// #255
  44db54:	mov	x0, x19
  44db58:	strb	wzr, [x19, #255]
  44db5c:	blr	x8
  44db60:	ldr	x9, [x19, #320]
  44db64:	mov	x8, xzr
  44db68:	str	xzr, [x19, #256]
  44db6c:	add	x9, x9, #0x1
  44db70:	str	x9, [x19, #320]
  44db74:	add	x9, x8, #0x1
  44db78:	mov	w10, #0x7d                  	// #125
  44db7c:	b	44ed30 <feof@plt+0x4c030>
  44db80:	add	w8, w8, #0x1
  44db84:	str	w8, [x22, #4]
  44db88:	ldr	x8, [x19, #328]
  44db8c:	add	w9, w9, #0x1
  44db90:	str	w9, [x19, #308]
  44db94:	add	x9, sp, #0x10
  44db98:	mov	x0, x19
  44db9c:	mov	w1, w20
  44dba0:	mov	x2, x22
  44dba4:	stp	x22, x8, [sp, #16]
  44dba8:	str	x9, [x19, #328]
  44dbac:	bl	449d30 <feof@plt+0x47030>
  44dbb0:	ldr	x8, [sp, #24]
  44dbb4:	str	x8, [x19, #328]
  44dbb8:	ldr	w8, [x22, #4]
  44dbbc:	sub	w8, w8, #0x1
  44dbc0:	str	w8, [x22, #4]
  44dbc4:	ldr	w8, [x19, #308]
  44dbc8:	sub	w8, w8, #0x1
  44dbcc:	str	w8, [x19, #308]
  44dbd0:	ldr	x21, [x21, #16]
  44dbd4:	cbnz	x21, 44c41c <feof@plt+0x4971c>
  44dbd8:	b	44c434 <feof@plt+0x49734>
  44dbdc:	add	w8, w8, #0x1
  44dbe0:	str	w8, [x22, #4]
  44dbe4:	ldr	x8, [x19, #328]
  44dbe8:	add	w9, w9, #0x1
  44dbec:	str	w9, [x19, #308]
  44dbf0:	add	x9, sp, #0x10
  44dbf4:	mov	x0, x19
  44dbf8:	mov	w1, w20
  44dbfc:	mov	x2, x22
  44dc00:	stp	x22, x8, [sp, #16]
  44dc04:	str	x9, [x19, #328]
  44dc08:	bl	449d30 <feof@plt+0x47030>
  44dc0c:	ldr	x8, [sp, #24]
  44dc10:	str	x8, [x19, #328]
  44dc14:	ldr	w8, [x22, #4]
  44dc18:	sub	w8, w8, #0x1
  44dc1c:	str	w8, [x22, #4]
  44dc20:	ldr	w8, [x19, #308]
  44dc24:	sub	w8, w8, #0x1
  44dc28:	str	w8, [x19, #308]
  44dc2c:	b	44bd78 <feof@plt+0x49078>
  44dc30:	add	w8, w8, #0x1
  44dc34:	str	w8, [x22, #4]
  44dc38:	ldr	x8, [x19, #328]
  44dc3c:	add	w9, w9, #0x1
  44dc40:	str	w9, [x19, #308]
  44dc44:	add	x9, sp, #0x10
  44dc48:	mov	x0, x19
  44dc4c:	mov	w1, w20
  44dc50:	mov	x2, x22
  44dc54:	stp	x22, x8, [sp, #16]
  44dc58:	str	x9, [x19, #328]
  44dc5c:	bl	449d30 <feof@plt+0x47030>
  44dc60:	ldr	x8, [sp, #24]
  44dc64:	str	x8, [x19, #328]
  44dc68:	ldr	w8, [x22, #4]
  44dc6c:	sub	w8, w8, #0x1
  44dc70:	str	w8, [x22, #4]
  44dc74:	ldr	w8, [x19, #308]
  44dc78:	sub	w8, w8, #0x1
  44dc7c:	str	w8, [x19, #308]
  44dc80:	b	44bf00 <feof@plt+0x49200>
  44dc84:	add	w8, w8, #0x1
  44dc88:	str	w8, [x22, #4]
  44dc8c:	ldr	x8, [x19, #328]
  44dc90:	add	w9, w9, #0x1
  44dc94:	str	w9, [x19, #308]
  44dc98:	add	x9, sp, #0x10
  44dc9c:	mov	x0, x19
  44dca0:	mov	w1, w20
  44dca4:	mov	x2, x22
  44dca8:	stp	x22, x8, [sp, #16]
  44dcac:	str	x9, [x19, #328]
  44dcb0:	bl	449d30 <feof@plt+0x47030>
  44dcb4:	ldr	x8, [sp, #24]
  44dcb8:	str	x8, [x19, #328]
  44dcbc:	ldr	w8, [x22, #4]
  44dcc0:	sub	w8, w8, #0x1
  44dcc4:	str	w8, [x22, #4]
  44dcc8:	ldr	w8, [x19, #308]
  44dccc:	sub	w8, w8, #0x1
  44dcd0:	str	w8, [x19, #308]
  44dcd4:	b	44c158 <feof@plt+0x49458>
  44dcd8:	add	w8, w8, #0x1
  44dcdc:	str	w8, [x22, #4]
  44dce0:	ldr	x8, [x19, #328]
  44dce4:	add	w9, w9, #0x1
  44dce8:	str	w9, [x19, #308]
  44dcec:	add	x9, sp, #0x10
  44dcf0:	mov	x0, x19
  44dcf4:	mov	w1, w20
  44dcf8:	mov	x2, x22
  44dcfc:	stp	x22, x8, [sp, #16]
  44dd00:	str	x9, [x19, #328]
  44dd04:	bl	449d30 <feof@plt+0x47030>
  44dd08:	ldr	x8, [sp, #24]
  44dd0c:	str	x8, [x19, #328]
  44dd10:	ldr	w8, [x22, #4]
  44dd14:	sub	w8, w8, #0x1
  44dd18:	str	w8, [x22, #4]
  44dd1c:	ldr	w8, [x19, #308]
  44dd20:	sub	w8, w8, #0x1
  44dd24:	str	w8, [x19, #308]
  44dd28:	b	44c2ac <feof@plt+0x495ac>
  44dd2c:	add	w8, w9, #0x1
  44dd30:	str	w8, [x22, #4]
  44dd34:	ldr	x8, [x19, #328]
  44dd38:	add	w9, w10, #0x1
  44dd3c:	str	w9, [x19, #308]
  44dd40:	add	x9, sp, #0x10
  44dd44:	mov	x0, x19
  44dd48:	mov	w1, w20
  44dd4c:	mov	x2, x22
  44dd50:	stp	x22, x8, [sp, #16]
  44dd54:	str	x9, [x19, #328]
  44dd58:	bl	449d30 <feof@plt+0x47030>
  44dd5c:	ldr	x8, [sp, #24]
  44dd60:	str	x8, [x19, #328]
  44dd64:	ldr	w8, [x22, #4]
  44dd68:	sub	w8, w8, #0x1
  44dd6c:	str	w8, [x22, #4]
  44dd70:	ldr	w9, [x19, #308]
  44dd74:	ldr	w8, [x19, #312]
  44dd78:	sub	w9, w9, #0x1
  44dd7c:	str	w9, [x19, #308]
  44dd80:	b	44c798 <feof@plt+0x49a98>
  44dd84:	add	w8, w8, #0x1
  44dd88:	str	w8, [x21, #4]
  44dd8c:	ldr	x8, [x19, #328]
  44dd90:	add	w9, w9, #0x1
  44dd94:	str	w9, [x19, #308]
  44dd98:	add	x9, sp, #0x10
  44dd9c:	mov	x0, x19
  44dda0:	mov	w1, w20
  44dda4:	mov	x2, x21
  44dda8:	stp	x21, x8, [sp, #16]
  44ddac:	str	x9, [x19, #328]
  44ddb0:	bl	449d30 <feof@plt+0x47030>
  44ddb4:	ldr	x8, [sp, #24]
  44ddb8:	str	x8, [x19, #328]
  44ddbc:	ldr	w8, [x21, #4]
  44ddc0:	sub	w8, w8, #0x1
  44ddc4:	str	w8, [x21, #4]
  44ddc8:	ldr	w8, [x19, #308]
  44ddcc:	sub	w8, w8, #0x1
  44ddd0:	str	w8, [x19, #308]
  44ddd4:	b	44db40 <feof@plt+0x4ae40>
  44ddd8:	add	w8, w8, #0x1
  44dddc:	str	w8, [x21, #4]
  44dde0:	ldr	x8, [x19, #328]
  44dde4:	add	w9, w9, #0x1
  44dde8:	str	w9, [x19, #308]
  44ddec:	add	x9, sp, #0x10
  44ddf0:	mov	x0, x19
  44ddf4:	mov	w1, w20
  44ddf8:	mov	x2, x21
  44ddfc:	stp	x21, x8, [sp, #16]
  44de00:	str	x9, [x19, #328]
  44de04:	bl	449d30 <feof@plt+0x47030>
  44de08:	ldr	x8, [sp, #24]
  44de0c:	str	x8, [x19, #328]
  44de10:	ldr	w8, [x21, #4]
  44de14:	sub	w8, w8, #0x1
  44de18:	str	w8, [x21, #4]
  44de1c:	ldr	w8, [x19, #308]
  44de20:	ldrb	w9, [x19, #264]
  44de24:	sub	w8, w8, #0x1
  44de28:	cmp	w9, #0x3e
  44de2c:	str	w8, [x19, #308]
  44de30:	b.ne	44d99c <feof@plt+0x4ac9c>  // b.any
  44de34:	ldr	x8, [x19, #256]
  44de38:	cmp	x8, #0xff
  44de3c:	b.ne	44de68 <feof@plt+0x4b168>  // b.any
  44de40:	ldp	x8, x2, [x19, #272]
  44de44:	mov	w1, #0xff                  	// #255
  44de48:	mov	x0, x19
  44de4c:	strb	wzr, [x19, #255]
  44de50:	blr	x8
  44de54:	ldr	x9, [x19, #320]
  44de58:	mov	x8, xzr
  44de5c:	str	xzr, [x19, #256]
  44de60:	add	x9, x9, #0x1
  44de64:	str	x9, [x19, #320]
  44de68:	add	x9, x8, #0x1
  44de6c:	mov	w10, #0x20                  	// #32
  44de70:	str	x9, [x19, #256]
  44de74:	strb	w10, [x19, x8]
  44de78:	strb	w10, [x19, #264]
  44de7c:	b	44d99c <feof@plt+0x4ac9c>
  44de80:	add	w8, w8, #0x1
  44de84:	str	w8, [x23, #4]
  44de88:	ldr	x8, [x19, #328]
  44de8c:	add	w9, w9, #0x1
  44de90:	str	w9, [x19, #308]
  44de94:	sub	x9, x29, #0x10
  44de98:	mov	x0, x19
  44de9c:	mov	w1, w20
  44dea0:	mov	x2, x23
  44dea4:	stp	x23, x8, [x29, #-16]
  44dea8:	str	x9, [x19, #328]
  44deac:	bl	449d30 <feof@plt+0x47030>
  44deb0:	ldur	x8, [x29, #-8]
  44deb4:	str	x8, [x19, #328]
  44deb8:	ldr	w8, [x23, #4]
  44debc:	sub	w8, w8, #0x1
  44dec0:	str	w8, [x23, #4]
  44dec4:	ldr	w8, [x19, #308]
  44dec8:	sub	w8, w8, #0x1
  44decc:	str	w8, [x19, #308]
  44ded0:	b	44cf28 <feof@plt+0x4a228>
  44ded4:	mov	w8, #0x1                   	// #1
  44ded8:	str	w8, [x25]
  44dedc:	b	44c434 <feof@plt+0x49734>
  44dee0:	ldr	x11, [x19, #328]
  44dee4:	cbz	x11, 44e330 <feof@plt+0x4b630>
  44dee8:	mov	x12, x11
  44deec:	b	44def8 <feof@plt+0x4b1f8>
  44def0:	ldr	x12, [x12, #8]
  44def4:	cbz	x12, 44e330 <feof@plt+0x4b630>
  44def8:	ldr	x13, [x12]
  44defc:	cmp	x13, x9
  44df00:	b.eq	44df14 <feof@plt+0x4b214>  // b.none
  44df04:	cmp	x13, x21
  44df08:	b.ne	44def0 <feof@plt+0x4b1f0>  // b.any
  44df0c:	cmp	x12, x11
  44df10:	b.eq	44def0 <feof@plt+0x4b1f0>  // b.none
  44df14:	mov	w23, wzr
  44df18:	b	44e340 <feof@plt+0x4b640>
  44df1c:	ldr	x24, [x24, #16]
  44df20:	ldr	w10, [x24]
  44df24:	cmp	w10, #0x47
  44df28:	b.ne	44df30 <feof@plt+0x4b230>  // b.any
  44df2c:	ldr	x24, [x24, #8]
  44df30:	cbz	x24, 44c434 <feof@plt+0x49734>
  44df34:	mov	x11, #0x1f                  	// #31
  44df38:	mov	w10, #0x1                   	// #1
  44df3c:	movk	x11, #0x1a, lsl #48
  44df40:	ldr	w12, [x24]
  44df44:	sub	w13, w12, #0x1c
  44df48:	cmp	w13, #0x34
  44df4c:	b.hi	44df94 <feof@plt+0x4b294>  // b.pmore
  44df50:	lsl	x13, x10, x13
  44df54:	tst	x13, x11
  44df58:	b.eq	44df94 <feof@plt+0x4b294>  // b.none
  44df5c:	cmp	x23, #0x4
  44df60:	b.cs	44c434 <feof@plt+0x49734>  // b.hs, b.nlast
  44df64:	ldp	q0, q1, [x9]
  44df68:	add	x12, x9, #0x20
  44df6c:	add	x23, x23, #0x1
  44df70:	stp	q0, q1, [x9, #32]
  44df74:	str	x9, [x9, #32]
  44df78:	str	x12, [x19, #296]
  44df7c:	str	x24, [x9, #8]
  44df80:	str	wzr, [x9, #16]
  44df84:	str	x8, [x9, #24]
  44df88:	ldr	x24, [x24, #8]
  44df8c:	mov	x9, x12
  44df90:	b	44df40 <feof@plt+0x4b240>
  44df94:	cmp	w12, #0x4
  44df98:	b.ne	44dfa8 <feof@plt+0x4b2a8>  // b.any
  44df9c:	stp	x8, x24, [sp]
  44dfa0:	mov	x8, sp
  44dfa4:	str	x8, [x19, #288]
  44dfa8:	ldr	x21, [x21, #16]
  44dfac:	cbz	x21, 44dfc8 <feof@plt+0x4b2c8>
  44dfb0:	ldr	w8, [x21, #4]
  44dfb4:	cmp	w8, #0x1
  44dfb8:	b.gt	44dfc8 <feof@plt+0x4b2c8>
  44dfbc:	ldr	w9, [x19, #308]
  44dfc0:	cmp	w9, #0x401
  44dfc4:	b.lt	44ef4c <feof@plt+0x4c24c>  // b.tstop
  44dfc8:	mov	w8, #0x1                   	// #1
  44dfcc:	str	w8, [x25]
  44dfd0:	ldr	w8, [x24]
  44dfd4:	cmp	w8, #0x4
  44dfd8:	b.ne	44dfe4 <feof@plt+0x4b2e4>  // b.any
  44dfdc:	ldr	x8, [sp]
  44dfe0:	str	x8, [x19, #288]
  44dfe4:	sub	w8, w23, #0x1
  44dfe8:	add	x9, sp, #0x10
  44dfec:	add	x8, x9, x8, lsl #5
  44dff0:	add	x21, x8, #0x10
  44dff4:	mov	w24, #0x20                  	// #32
  44dff8:	b	44e028 <feof@plt+0x4b328>
  44dffc:	add	x9, x8, #0x1
  44e000:	str	x9, [x19, #256]
  44e004:	strb	w24, [x19, x8]
  44e008:	strb	w24, [x19, #264]
  44e00c:	ldur	x2, [x21, #-8]
  44e010:	mov	x0, x19
  44e014:	mov	w1, w20
  44e018:	bl	44ffc8 <feof@plt+0x4d2c8>
  44e01c:	sub	w23, w23, #0x1
  44e020:	sub	x21, x21, #0x20
  44e024:	cbz	w23, 44e068 <feof@plt+0x4b368>
  44e028:	ldr	w8, [x21]
  44e02c:	cbnz	w8, 44e01c <feof@plt+0x4b31c>
  44e030:	ldr	x8, [x19, #256]
  44e034:	cmp	x8, #0xff
  44e038:	b.ne	44dffc <feof@plt+0x4b2fc>  // b.any
  44e03c:	ldp	x8, x2, [x19, #272]
  44e040:	mov	w1, #0xff                  	// #255
  44e044:	mov	x0, x19
  44e048:	strb	wzr, [x19, #255]
  44e04c:	blr	x8
  44e050:	ldr	x9, [x19, #320]
  44e054:	mov	x8, xzr
  44e058:	str	xzr, [x19, #256]
  44e05c:	add	x9, x9, #0x1
  44e060:	str	x9, [x19, #320]
  44e064:	b	44dffc <feof@plt+0x4b2fc>
  44e068:	str	x22, [x19, #296]
  44e06c:	b	44c43c <feof@plt+0x4973c>
  44e070:	cbz	x23, 44d254 <feof@plt+0x4a554>
  44e074:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44e078:	add	x1, x1, #0xabc
  44e07c:	mov	x0, x23
  44e080:	bl	402b40 <strcmp@plt>
  44e084:	cbz	w0, 44d53c <feof@plt+0x4a83c>
  44e088:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44e08c:	add	x1, x1, #0xa96
  44e090:	mov	x0, x23
  44e094:	bl	402b40 <strcmp@plt>
  44e098:	cbnz	w0, 44d254 <feof@plt+0x4a554>
  44e09c:	b	44d278 <feof@plt+0x4a578>
  44e0a0:	ldr	w8, [x22, #4]
  44e0a4:	cmp	w8, #0x1
  44e0a8:	b.gt	44e0b8 <feof@plt+0x4b3b8>
  44e0ac:	ldr	w9, [x19, #308]
  44e0b0:	cmp	w9, #0x401
  44e0b4:	b.lt	44eb8c <feof@plt+0x4be8c>  // b.tstop
  44e0b8:	mov	w8, #0x1                   	// #1
  44e0bc:	str	w8, [x25]
  44e0c0:	b	44ebdc <feof@plt+0x4bedc>
  44e0c4:	add	w8, w8, #0x1
  44e0c8:	str	w8, [x22, #4]
  44e0cc:	ldr	x8, [x19, #328]
  44e0d0:	add	w9, w9, #0x1
  44e0d4:	str	w9, [x19, #308]
  44e0d8:	add	x9, sp, #0x10
  44e0dc:	mov	x0, x19
  44e0e0:	mov	w1, w20
  44e0e4:	mov	x2, x22
  44e0e8:	stp	x22, x8, [sp, #16]
  44e0ec:	str	x9, [x19, #328]
  44e0f0:	bl	449d30 <feof@plt+0x47030>
  44e0f4:	ldr	x8, [sp, #24]
  44e0f8:	str	x8, [x19, #328]
  44e0fc:	ldr	w8, [x22, #4]
  44e100:	sub	w8, w8, #0x1
  44e104:	str	w8, [x22, #4]
  44e108:	ldr	w8, [x19, #308]
  44e10c:	sub	w8, w8, #0x1
  44e110:	str	w8, [x19, #308]
  44e114:	b	44b148 <feof@plt+0x48448>
  44e118:	add	w8, w9, #0x1
  44e11c:	str	w8, [x22, #4]
  44e120:	ldr	x8, [x19, #328]
  44e124:	add	w9, w10, #0x1
  44e128:	str	w9, [x19, #308]
  44e12c:	add	x9, sp, #0x10
  44e130:	mov	x0, x19
  44e134:	mov	w1, w20
  44e138:	mov	x2, x22
  44e13c:	stp	x22, x8, [sp, #16]
  44e140:	str	x9, [x19, #328]
  44e144:	bl	449d30 <feof@plt+0x47030>
  44e148:	ldr	x8, [sp, #24]
  44e14c:	str	x8, [x19, #328]
  44e150:	ldr	w8, [x22, #4]
  44e154:	sub	w8, w8, #0x1
  44e158:	str	w8, [x22, #4]
  44e15c:	ldr	w9, [x19, #308]
  44e160:	ldr	x8, [x19, #368]
  44e164:	sub	w9, w9, #0x1
  44e168:	str	w9, [x19, #308]
  44e16c:	cbnz	x8, 44c5dc <feof@plt+0x498dc>
  44e170:	b	44c5e4 <feof@plt+0x498e4>
  44e174:	add	w8, w8, #0x1
  44e178:	str	w8, [x21, #4]
  44e17c:	ldr	x8, [x19, #328]
  44e180:	add	w9, w9, #0x1
  44e184:	str	w9, [x19, #308]
  44e188:	add	x9, sp, #0x10
  44e18c:	mov	x0, x19
  44e190:	mov	w1, w20
  44e194:	mov	x2, x21
  44e198:	stp	x21, x8, [sp, #16]
  44e19c:	str	x9, [x19, #328]
  44e1a0:	bl	449d30 <feof@plt+0x47030>
  44e1a4:	ldr	x8, [sp, #24]
  44e1a8:	str	x8, [x19, #328]
  44e1ac:	ldr	w8, [x21, #4]
  44e1b0:	sub	w8, w8, #0x1
  44e1b4:	str	w8, [x21, #4]
  44e1b8:	ldr	w8, [x19, #308]
  44e1bc:	ldrb	w9, [x19, #264]
  44e1c0:	sub	w8, w8, #0x1
  44e1c4:	cmp	w9, #0x3e
  44e1c8:	str	w8, [x19, #308]
  44e1cc:	b.ne	44c6ac <feof@plt+0x499ac>  // b.any
  44e1d0:	ldr	x8, [x19, #256]
  44e1d4:	cmp	x8, #0xff
  44e1d8:	b.ne	44e204 <feof@plt+0x4b504>  // b.any
  44e1dc:	ldp	x8, x2, [x19, #272]
  44e1e0:	mov	w1, #0xff                  	// #255
  44e1e4:	mov	x0, x19
  44e1e8:	strb	wzr, [x19, #255]
  44e1ec:	blr	x8
  44e1f0:	ldr	x9, [x19, #320]
  44e1f4:	mov	x8, xzr
  44e1f8:	str	xzr, [x19, #256]
  44e1fc:	add	x9, x9, #0x1
  44e200:	str	x9, [x19, #320]
  44e204:	add	x9, x8, #0x1
  44e208:	mov	w10, #0x20                  	// #32
  44e20c:	str	x9, [x19, #256]
  44e210:	strb	w10, [x19, x8]
  44e214:	strb	w10, [x19, #264]
  44e218:	b	44c6ac <feof@plt+0x499ac>
  44e21c:	add	w8, w9, #0x1
  44e220:	str	w8, [x22, #4]
  44e224:	ldr	x8, [x19, #328]
  44e228:	add	w9, w10, #0x1
  44e22c:	str	w9, [x19, #308]
  44e230:	add	x9, sp, #0x10
  44e234:	mov	x0, x19
  44e238:	mov	w1, w20
  44e23c:	mov	x2, x22
  44e240:	stp	x22, x8, [sp, #16]
  44e244:	str	x9, [x19, #328]
  44e248:	bl	449d30 <feof@plt+0x47030>
  44e24c:	ldr	x8, [sp, #24]
  44e250:	str	x8, [x19, #328]
  44e254:	ldr	w8, [x22, #4]
  44e258:	sub	w8, w8, #0x1
  44e25c:	str	w8, [x22, #4]
  44e260:	ldr	w9, [x19, #308]
  44e264:	ldr	x8, [x19, #368]
  44e268:	sub	w9, w9, #0x1
  44e26c:	str	w9, [x19, #308]
  44e270:	cbnz	x8, 44cc00 <feof@plt+0x49f00>
  44e274:	b	44c43c <feof@plt+0x4973c>
  44e278:	ldr	x8, [x19, #256]
  44e27c:	cmp	x8, #0xff
  44e280:	b.ne	44e2ac <feof@plt+0x4b5ac>  // b.any
  44e284:	ldp	x8, x2, [x19, #272]
  44e288:	mov	w1, #0xff                  	// #255
  44e28c:	mov	x0, x19
  44e290:	strb	wzr, [x19, #255]
  44e294:	blr	x8
  44e298:	ldr	x9, [x19, #320]
  44e29c:	mov	x8, xzr
  44e2a0:	str	xzr, [x19, #256]
  44e2a4:	add	x9, x9, #0x1
  44e2a8:	str	x9, [x19, #320]
  44e2ac:	add	x9, x8, #0x1
  44e2b0:	mov	w10, #0x28                  	// #40
  44e2b4:	str	x9, [x19, #256]
  44e2b8:	strb	w10, [x19, x8]
  44e2bc:	strb	w10, [x19, #264]
  44e2c0:	cbz	x21, 44e2dc <feof@plt+0x4b5dc>
  44e2c4:	ldr	w8, [x21, #4]
  44e2c8:	cmp	w8, #0x1
  44e2cc:	b.gt	44e2dc <feof@plt+0x4b5dc>
  44e2d0:	ldr	w9, [x19, #308]
  44e2d4:	cmp	w9, #0x401
  44e2d8:	b.lt	44f2e0 <feof@plt+0x4c5e0>  // b.tstop
  44e2dc:	mov	w8, #0x1                   	// #1
  44e2e0:	str	w8, [x25]
  44e2e4:	ldr	x8, [x19, #256]
  44e2e8:	cmp	x8, #0xff
  44e2ec:	b.ne	44e318 <feof@plt+0x4b618>  // b.any
  44e2f0:	ldp	x8, x2, [x19, #272]
  44e2f4:	mov	w1, #0xff                  	// #255
  44e2f8:	mov	x0, x19
  44e2fc:	strb	wzr, [x19, #255]
  44e300:	blr	x8
  44e304:	ldr	x9, [x19, #320]
  44e308:	mov	x8, xzr
  44e30c:	str	xzr, [x19, #256]
  44e310:	add	x9, x9, #0x1
  44e314:	str	x9, [x19, #320]
  44e318:	add	x9, x8, #0x1
  44e31c:	mov	w10, #0x29                  	// #41
  44e320:	str	x9, [x19, #256]
  44e324:	strb	w10, [x19, x8]
  44e328:	strb	w10, [x19, #264]
  44e32c:	b	44e618 <feof@plt+0x4b918>
  44e330:	ldr	x10, [x10]
  44e334:	ldr	x24, [x19, #288]
  44e338:	mov	w23, #0x1                   	// #1
  44e33c:	str	x10, [x19, #288]
  44e340:	ldr	x10, [x19, #288]
  44e344:	cbz	x10, 44e380 <feof@plt+0x4b680>
  44e348:	ldr	x11, [x10, #8]
  44e34c:	ldr	w10, [x9, #8]
  44e350:	ldr	x9, [x11, #16]
  44e354:	tbnz	w10, #31, 44f0d0 <feof@plt+0x4c3d0>
  44e358:	cbz	x9, 44f940 <feof@plt+0x4cc40>
  44e35c:	ldr	w11, [x9]
  44e360:	cmp	w11, #0x2f
  44e364:	b.ne	44f940 <feof@plt+0x4cc40>  // b.any
  44e368:	subs	w11, w10, #0x1
  44e36c:	b.lt	44f0c8 <feof@plt+0x4c3c8>  // b.tstop
  44e370:	ldr	x9, [x9, #16]
  44e374:	mov	w10, w11
  44e378:	cbnz	x9, 44e35c <feof@plt+0x4b65c>
  44e37c:	b	44f940 <feof@plt+0x4cc40>
  44e380:	mov	w8, #0x1                   	// #1
  44e384:	str	w8, [x25]
  44e388:	b	44f940 <feof@plt+0x4cc40>
  44e38c:	cmp	w8, #0x31
  44e390:	b.hi	44ee94 <feof@plt+0x4c194>  // b.pmore
  44e394:	mov	w8, w8
  44e398:	mov	w9, #0x1                   	// #1
  44e39c:	lsl	x8, x9, x8
  44e3a0:	mov	x9, #0x43                  	// #67
  44e3a4:	movk	x9, #0x2, lsl #48
  44e3a8:	tst	x8, x9
  44e3ac:	b.eq	44ee94 <feof@plt+0x4c194>  // b.none
  44e3b0:	cbz	x22, 44e3cc <feof@plt+0x4b6cc>
  44e3b4:	ldr	w8, [x22, #4]
  44e3b8:	cmp	w8, #0x1
  44e3bc:	b.gt	44e3cc <feof@plt+0x4b6cc>
  44e3c0:	ldr	w9, [x19, #308]
  44e3c4:	cmp	w9, #0x401
  44e3c8:	b.lt	44f10c <feof@plt+0x4c40c>  // b.tstop
  44e3cc:	mov	w8, #0x1                   	// #1
  44e3d0:	str	w8, [x25]
  44e3d4:	b	44f160 <feof@plt+0x4c460>
  44e3d8:	add	w8, w8, #0x1
  44e3dc:	str	w8, [x22, #4]
  44e3e0:	ldr	x8, [x19, #328]
  44e3e4:	add	w9, w9, #0x1
  44e3e8:	str	w9, [x19, #308]
  44e3ec:	add	x9, sp, #0x10
  44e3f0:	mov	x0, x19
  44e3f4:	mov	w1, w20
  44e3f8:	mov	x2, x22
  44e3fc:	stp	x22, x8, [sp, #16]
  44e400:	str	x9, [x19, #328]
  44e404:	bl	449d30 <feof@plt+0x47030>
  44e408:	ldr	x8, [sp, #24]
  44e40c:	str	x8, [x19, #328]
  44e410:	ldr	w8, [x22, #4]
  44e414:	sub	w8, w8, #0x1
  44e418:	str	w8, [x22, #4]
  44e41c:	ldr	w8, [x19, #308]
  44e420:	sub	w8, w8, #0x1
  44e424:	str	w8, [x19, #308]
  44e428:	b	44d1e4 <feof@plt+0x4a4e4>
  44e42c:	add	w8, w8, #0x1
  44e430:	str	w8, [x22, #4]
  44e434:	ldr	x8, [x19, #328]
  44e438:	add	w9, w9, #0x1
  44e43c:	str	w9, [x19, #308]
  44e440:	add	x9, sp, #0x10
  44e444:	mov	x0, x19
  44e448:	mov	w1, w20
  44e44c:	mov	x2, x22
  44e450:	stp	x22, x8, [sp, #16]
  44e454:	str	x9, [x19, #328]
  44e458:	bl	449d30 <feof@plt+0x47030>
  44e45c:	ldr	x8, [sp, #24]
  44e460:	str	x8, [x19, #328]
  44e464:	ldr	w8, [x22, #4]
  44e468:	sub	w8, w8, #0x1
  44e46c:	str	w8, [x22, #4]
  44e470:	ldr	w8, [x19, #308]
  44e474:	sub	w8, w8, #0x1
  44e478:	str	w8, [x19, #308]
  44e47c:	b	44d254 <feof@plt+0x4a554>
  44e480:	ldr	x8, [x19, #256]
  44e484:	cmp	x8, #0xff
  44e488:	b.ne	44e4b4 <feof@plt+0x4b7b4>  // b.any
  44e48c:	ldp	x8, x2, [x19, #272]
  44e490:	mov	w1, #0xff                  	// #255
  44e494:	mov	x0, x19
  44e498:	strb	wzr, [x19, #255]
  44e49c:	blr	x8
  44e4a0:	ldr	x9, [x19, #320]
  44e4a4:	mov	x8, xzr
  44e4a8:	str	xzr, [x19, #256]
  44e4ac:	add	x9, x9, #0x1
  44e4b0:	str	x9, [x19, #320]
  44e4b4:	add	x9, x8, #0x1
  44e4b8:	mov	w10, #0x6c                  	// #108
  44e4bc:	b	44ed30 <feof@plt+0x4c030>
  44e4c0:	ldr	x8, [x19, #256]
  44e4c4:	cmp	x8, #0xff
  44e4c8:	b.ne	44e4f4 <feof@plt+0x4b7f4>  // b.any
  44e4cc:	ldp	x8, x2, [x19, #272]
  44e4d0:	mov	w1, #0xff                  	// #255
  44e4d4:	mov	x0, x19
  44e4d8:	strb	wzr, [x19, #255]
  44e4dc:	blr	x8
  44e4e0:	ldr	x9, [x19, #320]
  44e4e4:	mov	x8, xzr
  44e4e8:	str	xzr, [x19, #256]
  44e4ec:	add	x9, x9, #0x1
  44e4f0:	str	x9, [x19, #320]
  44e4f4:	add	x9, x8, #0x1
  44e4f8:	mov	w10, #0x75                  	// #117
  44e4fc:	str	x9, [x19, #256]
  44e500:	strb	w10, [x19, x8]
  44e504:	ldr	x8, [x19, #256]
  44e508:	strb	w10, [x19, #264]
  44e50c:	cmp	x8, #0xff
  44e510:	b.eq	44e48c <feof@plt+0x4b78c>  // b.none
  44e514:	b	44e4b4 <feof@plt+0x4b7b4>
  44e518:	ldr	x8, [x19, #256]
  44e51c:	cmp	x8, #0xff
  44e520:	b.ne	44e54c <feof@plt+0x4b84c>  // b.any
  44e524:	ldp	x8, x2, [x19, #272]
  44e528:	mov	w1, #0xff                  	// #255
  44e52c:	mov	x0, x19
  44e530:	strb	wzr, [x19, #255]
  44e534:	blr	x8
  44e538:	ldr	x9, [x19, #320]
  44e53c:	mov	x8, xzr
  44e540:	str	xzr, [x19, #256]
  44e544:	add	x9, x9, #0x1
  44e548:	str	x9, [x19, #320]
  44e54c:	add	x9, x8, #0x1
  44e550:	mov	w20, #0x6c                  	// #108
  44e554:	str	x9, [x19, #256]
  44e558:	strb	w20, [x19, x8]
  44e55c:	ldr	x8, [x19, #256]
  44e560:	strb	w20, [x19, #264]
  44e564:	cmp	x8, #0xff
  44e568:	b.eq	44b980 <feof@plt+0x48c80>  // b.none
  44e56c:	b	44b9a8 <feof@plt+0x48ca8>
  44e570:	ldr	x8, [x19, #256]
  44e574:	cmp	x8, #0xff
  44e578:	b.ne	44e5a4 <feof@plt+0x4b8a4>  // b.any
  44e57c:	ldp	x8, x2, [x19, #272]
  44e580:	mov	w1, #0xff                  	// #255
  44e584:	mov	x0, x19
  44e588:	strb	wzr, [x19, #255]
  44e58c:	blr	x8
  44e590:	ldr	x9, [x19, #320]
  44e594:	mov	x8, xzr
  44e598:	str	xzr, [x19, #256]
  44e59c:	add	x9, x9, #0x1
  44e5a0:	str	x9, [x19, #320]
  44e5a4:	add	x9, x8, #0x1
  44e5a8:	mov	w10, #0x75                  	// #117
  44e5ac:	str	x9, [x19, #256]
  44e5b0:	strb	w10, [x19, x8]
  44e5b4:	ldr	x8, [x19, #256]
  44e5b8:	strb	w10, [x19, #264]
  44e5bc:	cmp	x8, #0xff
  44e5c0:	b.eq	44e524 <feof@plt+0x4b824>  // b.none
  44e5c4:	b	44e54c <feof@plt+0x4b84c>
  44e5c8:	add	w8, w8, #0x1
  44e5cc:	str	w8, [x21, #4]
  44e5d0:	ldr	x8, [x19, #328]
  44e5d4:	add	w9, w9, #0x1
  44e5d8:	str	w9, [x19, #308]
  44e5dc:	add	x9, sp, #0x10
  44e5e0:	mov	x0, x19
  44e5e4:	mov	w1, w20
  44e5e8:	mov	x2, x21
  44e5ec:	stp	x21, x8, [sp, #16]
  44e5f0:	str	x9, [x19, #328]
  44e5f4:	bl	449d30 <feof@plt+0x47030>
  44e5f8:	ldr	x8, [sp, #24]
  44e5fc:	str	x8, [x19, #328]
  44e600:	ldr	w8, [x21, #4]
  44e604:	sub	w8, w8, #0x1
  44e608:	str	w8, [x21, #4]
  44e60c:	ldr	w8, [x19, #308]
  44e610:	sub	w8, w8, #0x1
  44e614:	str	w8, [x19, #308]
  44e618:	ldr	x8, [x19, #256]
  44e61c:	cmp	x8, #0xff
  44e620:	b.ne	44e64c <feof@plt+0x4b94c>  // b.any
  44e624:	ldp	x8, x2, [x19, #272]
  44e628:	mov	w1, #0xff                  	// #255
  44e62c:	mov	x0, x19
  44e630:	strb	wzr, [x19, #255]
  44e634:	blr	x8
  44e638:	ldr	x9, [x19, #320]
  44e63c:	mov	x8, xzr
  44e640:	str	xzr, [x19, #256]
  44e644:	add	x9, x9, #0x1
  44e648:	str	x9, [x19, #320]
  44e64c:	add	x9, x8, #0x1
  44e650:	mov	w20, #0x2e                  	// #46
  44e654:	str	x9, [x19, #256]
  44e658:	strb	w20, [x19, x8]
  44e65c:	ldr	x8, [x19, #256]
  44e660:	strb	w20, [x19, #264]
  44e664:	cmp	x8, #0xff
  44e668:	b.ne	44e694 <feof@plt+0x4b994>  // b.any
  44e66c:	ldp	x8, x2, [x19, #272]
  44e670:	mov	w1, #0xff                  	// #255
  44e674:	mov	x0, x19
  44e678:	strb	wzr, [x19, #255]
  44e67c:	blr	x8
  44e680:	ldr	x9, [x19, #320]
  44e684:	mov	x8, xzr
  44e688:	str	xzr, [x19, #256]
  44e68c:	add	x9, x9, #0x1
  44e690:	str	x9, [x19, #320]
  44e694:	add	x9, x8, #0x1
  44e698:	str	x9, [x19, #256]
  44e69c:	strb	w20, [x19, x8]
  44e6a0:	ldr	x8, [x19, #256]
  44e6a4:	strb	w20, [x19, #264]
  44e6a8:	cmp	x8, #0xff
  44e6ac:	b.ne	44e6d8 <feof@plt+0x4b9d8>  // b.any
  44e6b0:	ldp	x8, x2, [x19, #272]
  44e6b4:	mov	w1, #0xff                  	// #255
  44e6b8:	mov	x0, x19
  44e6bc:	strb	wzr, [x19, #255]
  44e6c0:	blr	x8
  44e6c4:	ldr	x9, [x19, #320]
  44e6c8:	mov	x8, xzr
  44e6cc:	str	xzr, [x19, #256]
  44e6d0:	add	x9, x9, #0x1
  44e6d4:	str	x9, [x19, #320]
  44e6d8:	add	x9, x8, #0x1
  44e6dc:	mov	w10, #0x2e                  	// #46
  44e6e0:	b	44ed30 <feof@plt+0x4c030>
  44e6e4:	cmp	w8, #0x3d
  44e6e8:	mov	w23, #0x7                   	// #7
  44e6ec:	b.ne	44bf6c <feof@plt+0x4926c>  // b.any
  44e6f0:	ldr	w8, [x9, #16]
  44e6f4:	cmp	w8, #0x1
  44e6f8:	b.ne	44bf6c <feof@plt+0x4926c>  // b.any
  44e6fc:	ldr	x8, [x9, #8]
  44e700:	ldrb	w8, [x8]
  44e704:	cmp	w8, #0x31
  44e708:	b.eq	44f334 <feof@plt+0x4c634>  // b.none
  44e70c:	cmp	w8, #0x30
  44e710:	b.ne	44d81c <feof@plt+0x4ab1c>  // b.any
  44e714:	ldr	x8, [x19, #256]
  44e718:	cmp	x8, #0xff
  44e71c:	b.ne	44e748 <feof@plt+0x4ba48>  // b.any
  44e720:	ldp	x8, x2, [x19, #272]
  44e724:	mov	w1, #0xff                  	// #255
  44e728:	mov	x0, x19
  44e72c:	strb	wzr, [x19, #255]
  44e730:	blr	x8
  44e734:	ldr	x9, [x19, #320]
  44e738:	mov	x8, xzr
  44e73c:	str	xzr, [x19, #256]
  44e740:	add	x9, x9, #0x1
  44e744:	str	x9, [x19, #320]
  44e748:	add	x9, x8, #0x1
  44e74c:	mov	w10, #0x66                  	// #102
  44e750:	str	x9, [x19, #256]
  44e754:	strb	w10, [x19, x8]
  44e758:	ldr	x8, [x19, #256]
  44e75c:	strb	w10, [x19, #264]
  44e760:	cmp	x8, #0xff
  44e764:	b.ne	44e790 <feof@plt+0x4ba90>  // b.any
  44e768:	ldp	x8, x2, [x19, #272]
  44e76c:	mov	w1, #0xff                  	// #255
  44e770:	mov	x0, x19
  44e774:	strb	wzr, [x19, #255]
  44e778:	blr	x8
  44e77c:	ldr	x9, [x19, #320]
  44e780:	mov	x8, xzr
  44e784:	str	xzr, [x19, #256]
  44e788:	add	x9, x9, #0x1
  44e78c:	str	x9, [x19, #320]
  44e790:	add	x9, x8, #0x1
  44e794:	mov	w10, #0x61                  	// #97
  44e798:	str	x9, [x19, #256]
  44e79c:	strb	w10, [x19, x8]
  44e7a0:	ldr	x8, [x19, #256]
  44e7a4:	strb	w10, [x19, #264]
  44e7a8:	cmp	x8, #0xff
  44e7ac:	b.ne	44e7d8 <feof@plt+0x4bad8>  // b.any
  44e7b0:	ldp	x8, x2, [x19, #272]
  44e7b4:	mov	w1, #0xff                  	// #255
  44e7b8:	mov	x0, x19
  44e7bc:	strb	wzr, [x19, #255]
  44e7c0:	blr	x8
  44e7c4:	ldr	x9, [x19, #320]
  44e7c8:	mov	x8, xzr
  44e7cc:	str	xzr, [x19, #256]
  44e7d0:	add	x9, x9, #0x1
  44e7d4:	str	x9, [x19, #320]
  44e7d8:	add	x9, x8, #0x1
  44e7dc:	mov	w10, #0x6c                  	// #108
  44e7e0:	str	x9, [x19, #256]
  44e7e4:	strb	w10, [x19, x8]
  44e7e8:	ldr	x8, [x19, #256]
  44e7ec:	strb	w10, [x19, #264]
  44e7f0:	cmp	x8, #0xff
  44e7f4:	b.ne	44e820 <feof@plt+0x4bb20>  // b.any
  44e7f8:	ldp	x8, x2, [x19, #272]
  44e7fc:	mov	w1, #0xff                  	// #255
  44e800:	mov	x0, x19
  44e804:	strb	wzr, [x19, #255]
  44e808:	blr	x8
  44e80c:	ldr	x9, [x19, #320]
  44e810:	mov	x8, xzr
  44e814:	str	xzr, [x19, #256]
  44e818:	add	x9, x9, #0x1
  44e81c:	str	x9, [x19, #320]
  44e820:	add	x9, x8, #0x1
  44e824:	mov	w10, #0x73                  	// #115
  44e828:	b	44f400 <feof@plt+0x4c700>
  44e82c:	add	w8, w8, #0x1
  44e830:	str	w8, [x22, #4]
  44e834:	ldr	x8, [x19, #328]
  44e838:	add	w9, w9, #0x1
  44e83c:	str	w9, [x19, #308]
  44e840:	add	x9, sp, #0x10
  44e844:	mov	x0, x19
  44e848:	mov	w1, w20
  44e84c:	mov	x2, x22
  44e850:	stp	x22, x8, [sp, #16]
  44e854:	str	x9, [x19, #328]
  44e858:	bl	449d30 <feof@plt+0x47030>
  44e85c:	ldr	x8, [sp, #24]
  44e860:	str	x8, [x19, #328]
  44e864:	ldr	w8, [x22, #4]
  44e868:	sub	w8, w8, #0x1
  44e86c:	str	w8, [x22, #4]
  44e870:	ldr	w8, [x19, #308]
  44e874:	sub	w8, w8, #0x1
  44e878:	str	w8, [x19, #308]
  44e87c:	b	44a164 <feof@plt+0x47464>
  44e880:	add	w8, w9, #0x1
  44e884:	str	w8, [x22, #4]
  44e888:	ldr	x8, [x19, #328]
  44e88c:	add	w9, w10, #0x1
  44e890:	str	w9, [x19, #308]
  44e894:	and	w1, w20, #0xffffff9f
  44e898:	sub	x9, x29, #0x10
  44e89c:	mov	x0, x19
  44e8a0:	mov	x2, x22
  44e8a4:	stp	x22, x8, [x29, #-16]
  44e8a8:	str	x9, [x19, #328]
  44e8ac:	bl	449d30 <feof@plt+0x47030>
  44e8b0:	ldur	x8, [x29, #-8]
  44e8b4:	str	x8, [x19, #328]
  44e8b8:	ldr	w8, [x22, #4]
  44e8bc:	sub	w8, w8, #0x1
  44e8c0:	str	w8, [x22, #4]
  44e8c4:	ldr	w8, [x19, #308]
  44e8c8:	sub	w8, w8, #0x1
  44e8cc:	str	w8, [x19, #308]
  44e8d0:	ldr	x8, [sp, #16]
  44e8d4:	ldr	w9, [sp, #32]
  44e8d8:	str	x8, [x19, #296]
  44e8dc:	cbnz	w9, 44c43c <feof@plt+0x4973c>
  44e8e0:	b	44aeb8 <feof@plt+0x481b8>
  44e8e4:	mov	x0, x19
  44e8e8:	mov	x1, x21
  44e8ec:	bl	451114 <feof@plt+0x4e414>
  44e8f0:	mov	w2, wzr
  44e8f4:	cbz	x0, 44e918 <feof@plt+0x4bc18>
  44e8f8:	ldr	w8, [x0]
  44e8fc:	cmp	w8, #0x2f
  44e900:	b.ne	44e918 <feof@plt+0x4bc18>  // b.any
  44e904:	ldr	x8, [x0, #8]
  44e908:	cbz	x8, 44e918 <feof@plt+0x4bc18>
  44e90c:	ldr	x0, [x0, #16]
  44e910:	add	w2, w2, #0x1
  44e914:	cbnz	x0, 44e8f8 <feof@plt+0x4bbf8>
  44e918:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44e91c:	add	x1, x1, #0xdb1
  44e920:	add	x0, sp, #0x10
  44e924:	bl	402880 <sprintf@plt>
  44e928:	add	x0, sp, #0x10
  44e92c:	bl	4026d0 <strlen@plt>
  44e930:	cbz	x0, 44c43c <feof@plt+0x4973c>
  44e934:	mov	x20, x0
  44e938:	add	x21, sp, #0x10
  44e93c:	b	44e95c <feof@plt+0x4bc5c>
  44e940:	add	x9, x8, #0x1
  44e944:	subs	x20, x20, #0x1
  44e948:	add	x21, x21, #0x1
  44e94c:	str	x9, [x19, #256]
  44e950:	strb	w22, [x19, x8]
  44e954:	strb	w22, [x19, #264]
  44e958:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44e95c:	ldr	x8, [x19, #256]
  44e960:	ldrb	w22, [x21]
  44e964:	cmp	x8, #0xff
  44e968:	b.ne	44e940 <feof@plt+0x4bc40>  // b.any
  44e96c:	ldp	x8, x2, [x19, #272]
  44e970:	mov	w1, #0xff                  	// #255
  44e974:	mov	x0, x19
  44e978:	strb	wzr, [x19, #255]
  44e97c:	blr	x8
  44e980:	ldr	x9, [x19, #320]
  44e984:	mov	x8, xzr
  44e988:	str	xzr, [x19, #256]
  44e98c:	add	x9, x9, #0x1
  44e990:	str	x9, [x19, #320]
  44e994:	b	44e940 <feof@plt+0x4bc40>
  44e998:	ldr	w8, [x23]
  44e99c:	cmp	w8, #0x31
  44e9a0:	b.hi	44f50c <feof@plt+0x4c80c>  // b.pmore
  44e9a4:	mov	w9, #0x1                   	// #1
  44e9a8:	lsl	x8, x9, x8
  44e9ac:	mov	x9, #0x43                  	// #67
  44e9b0:	movk	x9, #0x2, lsl #48
  44e9b4:	tst	x8, x9
  44e9b8:	b.eq	44f50c <feof@plt+0x4c80c>  // b.none
  44e9bc:	ldr	w8, [x23, #4]
  44e9c0:	cmp	w8, #0x1
  44e9c4:	b.gt	44e9d4 <feof@plt+0x4bcd4>
  44e9c8:	ldr	w9, [x19, #308]
  44e9cc:	cmp	w9, #0x401
  44e9d0:	b.lt	44f578 <feof@plt+0x4c878>  // b.tstop
  44e9d4:	mov	w8, #0x1                   	// #1
  44e9d8:	str	w8, [x25]
  44e9dc:	b	44fbf4 <feof@plt+0x4cef4>
  44e9e0:	ldr	x21, [x21, #16]
  44e9e4:	cbz	x21, 44ea00 <feof@plt+0x4bd00>
  44e9e8:	ldr	w8, [x21, #4]
  44e9ec:	cmp	w8, #0x1
  44e9f0:	b.gt	44ea00 <feof@plt+0x4bd00>
  44e9f4:	ldr	w9, [x19, #308]
  44e9f8:	cmp	w9, #0x401
  44e9fc:	b.lt	44f6ac <feof@plt+0x4c9ac>  // b.tstop
  44ea00:	mov	w8, #0x1                   	// #1
  44ea04:	str	w8, [x25]
  44ea08:	ldr	x8, [x19, #256]
  44ea0c:	cmp	x8, #0xff
  44ea10:	b.ne	44ea3c <feof@plt+0x4bd3c>  // b.any
  44ea14:	ldp	x8, x2, [x19, #272]
  44ea18:	mov	w1, #0xff                  	// #255
  44ea1c:	mov	x0, x19
  44ea20:	strb	wzr, [x19, #255]
  44ea24:	blr	x8
  44ea28:	ldr	x9, [x19, #320]
  44ea2c:	mov	x8, xzr
  44ea30:	str	xzr, [x19, #256]
  44ea34:	add	x9, x9, #0x1
  44ea38:	str	x9, [x19, #320]
  44ea3c:	add	x9, x8, #0x1
  44ea40:	mov	w10, #0x5b                  	// #91
  44ea44:	str	x9, [x19, #256]
  44ea48:	strb	w10, [x19, x8]
  44ea4c:	ldr	x8, [x19, #256]
  44ea50:	strb	w10, [x19, #264]
  44ea54:	cmp	x8, #0xff
  44ea58:	b.ne	44ea84 <feof@plt+0x4bd84>  // b.any
  44ea5c:	ldp	x8, x2, [x19, #272]
  44ea60:	mov	w1, #0xff                  	// #255
  44ea64:	mov	x0, x19
  44ea68:	strb	wzr, [x19, #255]
  44ea6c:	blr	x8
  44ea70:	ldr	x9, [x19, #320]
  44ea74:	mov	x8, xzr
  44ea78:	str	xzr, [x19, #256]
  44ea7c:	add	x9, x9, #0x1
  44ea80:	str	x9, [x19, #320]
  44ea84:	add	x9, x8, #0x1
  44ea88:	mov	w10, #0x5d                  	// #93
  44ea8c:	b	44d9d8 <feof@plt+0x4acd8>
  44ea90:	ldr	x8, [x19, #256]
  44ea94:	cmp	x8, #0xff
  44ea98:	b.ne	44eac4 <feof@plt+0x4bdc4>  // b.any
  44ea9c:	ldp	x8, x2, [x19, #272]
  44eaa0:	mov	w1, #0xff                  	// #255
  44eaa4:	mov	x0, x19
  44eaa8:	strb	wzr, [x19, #255]
  44eaac:	blr	x8
  44eab0:	ldr	x9, [x19, #320]
  44eab4:	mov	x8, xzr
  44eab8:	str	xzr, [x19, #256]
  44eabc:	add	x9, x9, #0x1
  44eac0:	str	x9, [x19, #320]
  44eac4:	add	x9, x8, #0x1
  44eac8:	mov	w10, #0x28                  	// #40
  44eacc:	str	x9, [x19, #256]
  44ead0:	strb	w10, [x19, x8]
  44ead4:	strb	w10, [x19, #264]
  44ead8:	cbz	x21, 44eaf4 <feof@plt+0x4bdf4>
  44eadc:	ldr	w8, [x21, #4]
  44eae0:	cmp	w8, #0x1
  44eae4:	b.gt	44eaf4 <feof@plt+0x4bdf4>
  44eae8:	ldr	w9, [x19, #308]
  44eaec:	cmp	w9, #0x401
  44eaf0:	b.lt	44f8e0 <feof@plt+0x4cbe0>  // b.tstop
  44eaf4:	mov	w8, #0x1                   	// #1
  44eaf8:	str	w8, [x25]
  44eafc:	ldr	x8, [x19, #256]
  44eb00:	cmp	x8, #0xff
  44eb04:	b.ne	44eb30 <feof@plt+0x4be30>  // b.any
  44eb08:	ldp	x8, x2, [x19, #272]
  44eb0c:	mov	w1, #0xff                  	// #255
  44eb10:	mov	x0, x19
  44eb14:	strb	wzr, [x19, #255]
  44eb18:	blr	x8
  44eb1c:	ldr	x9, [x19, #320]
  44eb20:	mov	x8, xzr
  44eb24:	str	xzr, [x19, #256]
  44eb28:	add	x9, x9, #0x1
  44eb2c:	str	x9, [x19, #320]
  44eb30:	add	x9, x8, #0x1
  44eb34:	mov	w10, #0x29                  	// #41
  44eb38:	str	x9, [x19, #256]
  44eb3c:	strb	w10, [x19, x8]
  44eb40:	strb	w10, [x19, #264]
  44eb44:	b	44eff0 <feof@plt+0x4c2f0>
  44eb48:	cbnz	w8, 44c434 <feof@plt+0x49734>
  44eb4c:	ldr	x21, [x21, #8]
  44eb50:	cbz	x21, 44c434 <feof@plt+0x49734>
  44eb54:	ldr	w8, [x21]
  44eb58:	cmp	w8, #0x2f
  44eb5c:	b.ne	44f5d8 <feof@plt+0x4c8d8>  // b.any
  44eb60:	ldr	w8, [x19, #316]
  44eb64:	tbnz	w8, #31, 44f5d8 <feof@plt+0x4c8d8>
  44eb68:	subs	w9, w8, #0x1
  44eb6c:	b.lt	44f5cc <feof@plt+0x4c8cc>  // b.tstop
  44eb70:	ldr	x21, [x21, #16]
  44eb74:	cbz	x21, 44c434 <feof@plt+0x49734>
  44eb78:	ldr	w8, [x21]
  44eb7c:	cmp	w8, #0x2f
  44eb80:	mov	w8, w9
  44eb84:	b.eq	44eb68 <feof@plt+0x4be68>  // b.none
  44eb88:	b	44c434 <feof@plt+0x49734>
  44eb8c:	add	w8, w8, #0x1
  44eb90:	str	w8, [x22, #4]
  44eb94:	ldr	x8, [x19, #328]
  44eb98:	add	w9, w9, #0x1
  44eb9c:	str	w9, [x19, #308]
  44eba0:	add	x9, sp, #0x10
  44eba4:	mov	x0, x19
  44eba8:	mov	w1, w20
  44ebac:	mov	x2, x22
  44ebb0:	stp	x22, x8, [sp, #16]
  44ebb4:	str	x9, [x19, #328]
  44ebb8:	bl	449d30 <feof@plt+0x47030>
  44ebbc:	ldr	x8, [sp, #24]
  44ebc0:	str	x8, [x19, #328]
  44ebc4:	ldr	w8, [x22, #4]
  44ebc8:	sub	w8, w8, #0x1
  44ebcc:	str	w8, [x22, #4]
  44ebd0:	ldr	w8, [x19, #308]
  44ebd4:	sub	w8, w8, #0x1
  44ebd8:	str	w8, [x19, #308]
  44ebdc:	ldr	x8, [x19, #256]
  44ebe0:	cmp	x8, #0xff
  44ebe4:	b.ne	44ec10 <feof@plt+0x4bf10>  // b.any
  44ebe8:	ldp	x8, x2, [x19, #272]
  44ebec:	mov	w1, #0xff                  	// #255
  44ebf0:	mov	x0, x19
  44ebf4:	strb	wzr, [x19, #255]
  44ebf8:	blr	x8
  44ebfc:	ldr	x9, [x19, #320]
  44ec00:	mov	x8, xzr
  44ec04:	str	xzr, [x19, #256]
  44ec08:	add	x9, x9, #0x1
  44ec0c:	str	x9, [x19, #320]
  44ec10:	add	x9, x8, #0x1
  44ec14:	mov	w10, #0x3c                  	// #60
  44ec18:	str	x9, [x19, #256]
  44ec1c:	strb	w10, [x19, x8]
  44ec20:	strb	w10, [x19, #264]
  44ec24:	ldr	x8, [x21, #16]
  44ec28:	ldr	x22, [x8, #8]
  44ec2c:	cbz	x22, 44ec48 <feof@plt+0x4bf48>
  44ec30:	ldr	w8, [x22, #4]
  44ec34:	cmp	w8, #0x1
  44ec38:	b.gt	44ec48 <feof@plt+0x4bf48>
  44ec3c:	ldr	w9, [x19, #308]
  44ec40:	cmp	w9, #0x401
  44ec44:	b.lt	44ed40 <feof@plt+0x4c040>  // b.tstop
  44ec48:	mov	w8, #0x1                   	// #1
  44ec4c:	str	w8, [x25]
  44ec50:	ldr	x8, [x19, #256]
  44ec54:	cmp	x8, #0xff
  44ec58:	b.ne	44ec84 <feof@plt+0x4bf84>  // b.any
  44ec5c:	ldp	x8, x2, [x19, #272]
  44ec60:	mov	w1, #0xff                  	// #255
  44ec64:	mov	x0, x19
  44ec68:	strb	wzr, [x19, #255]
  44ec6c:	blr	x8
  44ec70:	ldr	x9, [x19, #320]
  44ec74:	mov	x8, xzr
  44ec78:	str	xzr, [x19, #256]
  44ec7c:	add	x9, x9, #0x1
  44ec80:	str	x9, [x19, #320]
  44ec84:	add	x9, x8, #0x1
  44ec88:	mov	w10, #0x3e                  	// #62
  44ec8c:	str	x9, [x19, #256]
  44ec90:	strb	w10, [x19, x8]
  44ec94:	ldr	x8, [x19, #256]
  44ec98:	strb	w10, [x19, #264]
  44ec9c:	cmp	x8, #0xff
  44eca0:	b.ne	44eccc <feof@plt+0x4bfcc>  // b.any
  44eca4:	ldp	x8, x2, [x19, #272]
  44eca8:	mov	w1, #0xff                  	// #255
  44ecac:	mov	x0, x19
  44ecb0:	strb	wzr, [x19, #255]
  44ecb4:	blr	x8
  44ecb8:	ldr	x9, [x19, #320]
  44ecbc:	mov	x8, xzr
  44ecc0:	str	xzr, [x19, #256]
  44ecc4:	add	x9, x9, #0x1
  44ecc8:	str	x9, [x19, #320]
  44eccc:	add	x9, x8, #0x1
  44ecd0:	mov	w10, #0x28                  	// #40
  44ecd4:	str	x9, [x19, #256]
  44ecd8:	strb	w10, [x19, x8]
  44ecdc:	strb	w10, [x19, #264]
  44ece0:	ldr	x8, [x21, #16]
  44ece4:	ldr	x21, [x8, #16]
  44ece8:	cbnz	x21, 44c6f4 <feof@plt+0x499f4>
  44ecec:	mov	w8, #0x1                   	// #1
  44ecf0:	str	w8, [x25]
  44ecf4:	ldr	x8, [x19, #256]
  44ecf8:	cmp	x8, #0xff
  44ecfc:	b.ne	44ed28 <feof@plt+0x4c028>  // b.any
  44ed00:	ldp	x8, x2, [x19, #272]
  44ed04:	mov	w1, #0xff                  	// #255
  44ed08:	mov	x0, x19
  44ed0c:	strb	wzr, [x19, #255]
  44ed10:	blr	x8
  44ed14:	ldr	x9, [x19, #320]
  44ed18:	mov	x8, xzr
  44ed1c:	str	xzr, [x19, #256]
  44ed20:	add	x9, x9, #0x1
  44ed24:	str	x9, [x19, #320]
  44ed28:	add	x9, x8, #0x1
  44ed2c:	mov	w10, #0x29                  	// #41
  44ed30:	str	x9, [x19, #256]
  44ed34:	strb	w10, [x19, x8]
  44ed38:	strb	w10, [x19, #264]
  44ed3c:	b	44c43c <feof@plt+0x4973c>
  44ed40:	add	w8, w8, #0x1
  44ed44:	str	w8, [x22, #4]
  44ed48:	ldr	x8, [x19, #328]
  44ed4c:	add	w9, w9, #0x1
  44ed50:	str	w9, [x19, #308]
  44ed54:	add	x9, sp, #0x10
  44ed58:	mov	x0, x19
  44ed5c:	mov	w1, w20
  44ed60:	mov	x2, x22
  44ed64:	stp	x22, x8, [sp, #16]
  44ed68:	str	x9, [x19, #328]
  44ed6c:	bl	449d30 <feof@plt+0x47030>
  44ed70:	ldr	x8, [sp, #24]
  44ed74:	str	x8, [x19, #328]
  44ed78:	ldr	w8, [x22, #4]
  44ed7c:	sub	w8, w8, #0x1
  44ed80:	str	w8, [x22, #4]
  44ed84:	ldr	w8, [x19, #308]
  44ed88:	sub	w8, w8, #0x1
  44ed8c:	str	w8, [x19, #308]
  44ed90:	b	44ec50 <feof@plt+0x4bf50>
  44ed94:	mov	w20, wzr
  44ed98:	cbz	x21, 44ee10 <feof@plt+0x4c110>
  44ed9c:	cmp	w26, #0x2f
  44eda0:	b.ne	44ee10 <feof@plt+0x4c110>  // b.any
  44eda4:	mov	w20, wzr
  44eda8:	ldr	x8, [x21, #8]
  44edac:	cbz	x8, 44ee10 <feof@plt+0x4c110>
  44edb0:	ldr	w9, [x8]
  44edb4:	cmp	w9, #0x4b
  44edb8:	b.ne	44edf4 <feof@plt+0x4c0f4>  // b.any
  44edbc:	ldr	x1, [x8, #8]
  44edc0:	mov	x0, x19
  44edc4:	bl	451114 <feof@plt+0x4e414>
  44edc8:	mov	w8, wzr
  44edcc:	cbz	x0, 44edf8 <feof@plt+0x4c0f8>
  44edd0:	ldr	w9, [x0]
  44edd4:	cmp	w9, #0x2f
  44edd8:	b.ne	44edf8 <feof@plt+0x4c0f8>  // b.any
  44eddc:	ldr	x9, [x0, #8]
  44ede0:	cbz	x9, 44edf8 <feof@plt+0x4c0f8>
  44ede4:	ldr	x0, [x0, #16]
  44ede8:	add	w8, w8, #0x1
  44edec:	cbnz	x0, 44edd0 <feof@plt+0x4c0d0>
  44edf0:	b	44edf8 <feof@plt+0x4c0f8>
  44edf4:	mov	w8, #0x1                   	// #1
  44edf8:	ldr	x21, [x21, #16]
  44edfc:	add	w20, w8, w20
  44ee00:	cbz	x21, 44ee10 <feof@plt+0x4c110>
  44ee04:	ldr	w8, [x21]
  44ee08:	cmp	w8, #0x2f
  44ee0c:	b.eq	44eda8 <feof@plt+0x4c0a8>  // b.none
  44ee10:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  44ee14:	add	x1, x1, #0xdb1
  44ee18:	add	x0, sp, #0x10
  44ee1c:	mov	w2, w20
  44ee20:	bl	402880 <sprintf@plt>
  44ee24:	add	x0, sp, #0x10
  44ee28:	bl	4026d0 <strlen@plt>
  44ee2c:	cbz	x0, 44c43c <feof@plt+0x4973c>
  44ee30:	mov	x20, x0
  44ee34:	add	x21, sp, #0x10
  44ee38:	b	44ee58 <feof@plt+0x4c158>
  44ee3c:	add	x9, x8, #0x1
  44ee40:	subs	x20, x20, #0x1
  44ee44:	add	x21, x21, #0x1
  44ee48:	str	x9, [x19, #256]
  44ee4c:	strb	w22, [x19, x8]
  44ee50:	strb	w22, [x19, #264]
  44ee54:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44ee58:	ldr	x8, [x19, #256]
  44ee5c:	ldrb	w22, [x21]
  44ee60:	cmp	x8, #0xff
  44ee64:	b.ne	44ee3c <feof@plt+0x4c13c>  // b.any
  44ee68:	ldp	x8, x2, [x19, #272]
  44ee6c:	mov	w1, #0xff                  	// #255
  44ee70:	mov	x0, x19
  44ee74:	strb	wzr, [x19, #255]
  44ee78:	blr	x8
  44ee7c:	ldr	x9, [x19, #320]
  44ee80:	mov	x8, xzr
  44ee84:	str	xzr, [x19, #256]
  44ee88:	add	x9, x9, #0x1
  44ee8c:	str	x9, [x19, #320]
  44ee90:	b	44ee3c <feof@plt+0x4c13c>
  44ee94:	ldr	x8, [x19, #256]
  44ee98:	cmp	x8, #0xff
  44ee9c:	b.ne	44eec8 <feof@plt+0x4c1c8>  // b.any
  44eea0:	ldp	x8, x2, [x19, #272]
  44eea4:	mov	w1, #0xff                  	// #255
  44eea8:	mov	x0, x19
  44eeac:	strb	wzr, [x19, #255]
  44eeb0:	blr	x8
  44eeb4:	ldr	x9, [x19, #320]
  44eeb8:	mov	x8, xzr
  44eebc:	str	xzr, [x19, #256]
  44eec0:	add	x9, x9, #0x1
  44eec4:	str	x9, [x19, #320]
  44eec8:	add	x9, x8, #0x1
  44eecc:	mov	w10, #0x28                  	// #40
  44eed0:	str	x9, [x19, #256]
  44eed4:	strb	w10, [x19, x8]
  44eed8:	strb	w10, [x19, #264]
  44eedc:	cbz	x22, 44eef8 <feof@plt+0x4c1f8>
  44eee0:	ldr	w8, [x22, #4]
  44eee4:	cmp	w8, #0x1
  44eee8:	b.gt	44eef8 <feof@plt+0x4c1f8>
  44eeec:	ldr	w9, [x19, #308]
  44eef0:	cmp	w9, #0x401
  44eef4:	b.lt	44f94c <feof@plt+0x4cc4c>  // b.tstop
  44eef8:	mov	w8, #0x1                   	// #1
  44eefc:	str	w8, [x25]
  44ef00:	ldr	x8, [x19, #256]
  44ef04:	cmp	x8, #0xff
  44ef08:	b.ne	44ef34 <feof@plt+0x4c234>  // b.any
  44ef0c:	ldp	x8, x2, [x19, #272]
  44ef10:	mov	w1, #0xff                  	// #255
  44ef14:	mov	x0, x19
  44ef18:	strb	wzr, [x19, #255]
  44ef1c:	blr	x8
  44ef20:	ldr	x9, [x19, #320]
  44ef24:	mov	x8, xzr
  44ef28:	str	xzr, [x19, #256]
  44ef2c:	add	x9, x9, #0x1
  44ef30:	str	x9, [x19, #320]
  44ef34:	add	x9, x8, #0x1
  44ef38:	mov	w10, #0x29                  	// #41
  44ef3c:	str	x9, [x19, #256]
  44ef40:	strb	w10, [x19, x8]
  44ef44:	strb	w10, [x19, #264]
  44ef48:	b	44f160 <feof@plt+0x4c460>
  44ef4c:	add	w8, w8, #0x1
  44ef50:	str	w8, [x21, #4]
  44ef54:	ldr	x8, [x19, #328]
  44ef58:	add	w9, w9, #0x1
  44ef5c:	str	w9, [x19, #308]
  44ef60:	sub	x9, x29, #0x10
  44ef64:	mov	x0, x19
  44ef68:	mov	w1, w20
  44ef6c:	mov	x2, x21
  44ef70:	stp	x21, x8, [x29, #-16]
  44ef74:	str	x9, [x19, #328]
  44ef78:	bl	449d30 <feof@plt+0x47030>
  44ef7c:	ldur	x8, [x29, #-8]
  44ef80:	str	x8, [x19, #328]
  44ef84:	ldr	w8, [x21, #4]
  44ef88:	sub	w8, w8, #0x1
  44ef8c:	str	w8, [x21, #4]
  44ef90:	ldr	w8, [x19, #308]
  44ef94:	sub	w8, w8, #0x1
  44ef98:	str	w8, [x19, #308]
  44ef9c:	b	44dfd0 <feof@plt+0x4b2d0>
  44efa0:	add	w8, w8, #0x1
  44efa4:	str	w8, [x21, #4]
  44efa8:	ldr	x8, [x19, #328]
  44efac:	add	w9, w9, #0x1
  44efb0:	str	w9, [x19, #308]
  44efb4:	add	x9, sp, #0x10
  44efb8:	mov	x0, x19
  44efbc:	mov	w1, w20
  44efc0:	mov	x2, x21
  44efc4:	stp	x21, x8, [sp, #16]
  44efc8:	str	x9, [x19, #328]
  44efcc:	bl	449d30 <feof@plt+0x47030>
  44efd0:	ldr	x8, [sp, #24]
  44efd4:	str	x8, [x19, #328]
  44efd8:	ldr	w8, [x21, #4]
  44efdc:	sub	w8, w8, #0x1
  44efe0:	str	w8, [x21, #4]
  44efe4:	ldr	w8, [x19, #308]
  44efe8:	sub	w8, w8, #0x1
  44efec:	str	w8, [x19, #308]
  44eff0:	ldr	w8, [x22]
  44eff4:	cmp	w8, #0x32
  44eff8:	b.ne	44f068 <feof@plt+0x4c368>  // b.any
  44effc:	ldr	x8, [x22, #8]
  44f000:	ldrsw	x20, [x8, #16]
  44f004:	cbz	w20, 44c43c <feof@plt+0x4973c>
  44f008:	ldr	x21, [x8, #8]
  44f00c:	b	44f02c <feof@plt+0x4c32c>
  44f010:	add	x9, x8, #0x1
  44f014:	subs	x20, x20, #0x1
  44f018:	add	x21, x21, #0x1
  44f01c:	str	x9, [x19, #256]
  44f020:	strb	w22, [x19, x8]
  44f024:	strb	w22, [x19, #264]
  44f028:	b.eq	44c43c <feof@plt+0x4973c>  // b.none
  44f02c:	ldr	x8, [x19, #256]
  44f030:	ldrb	w22, [x21]
  44f034:	cmp	x8, #0xff
  44f038:	b.ne	44f010 <feof@plt+0x4c310>  // b.any
  44f03c:	ldp	x8, x2, [x19, #272]
  44f040:	mov	w1, #0xff                  	// #255
  44f044:	mov	x0, x19
  44f048:	strb	wzr, [x19, #255]
  44f04c:	blr	x8
  44f050:	ldr	x9, [x19, #320]
  44f054:	mov	x8, xzr
  44f058:	str	xzr, [x19, #256]
  44f05c:	add	x9, x9, #0x1
  44f060:	str	x9, [x19, #320]
  44f064:	b	44f010 <feof@plt+0x4c310>
  44f068:	ldr	w8, [x22, #4]
  44f06c:	cmp	w8, #0x1
  44f070:	b.gt	44c434 <feof@plt+0x49734>
  44f074:	ldr	w9, [x19, #308]
  44f078:	cmp	w9, #0x401
  44f07c:	b.ge	44c434 <feof@plt+0x49734>  // b.tcont
  44f080:	add	w8, w8, #0x1
  44f084:	str	w8, [x22, #4]
  44f088:	ldr	x8, [x19, #328]
  44f08c:	add	w9, w9, #0x1
  44f090:	str	w9, [x19, #308]
  44f094:	add	x9, sp, #0x10
  44f098:	mov	x0, x19
  44f09c:	mov	w1, w20
  44f0a0:	mov	x2, x22
  44f0a4:	stp	x22, x8, [sp, #16]
  44f0a8:	str	x9, [x19, #328]
  44f0ac:	bl	449d30 <feof@plt+0x47030>
  44f0b0:	ldr	x8, [sp, #24]
  44f0b4:	str	x8, [x19, #328]
  44f0b8:	ldr	w8, [x22, #4]
  44f0bc:	sub	w8, w8, #0x1
  44f0c0:	str	w8, [x22, #4]
  44f0c4:	b	44c4a4 <feof@plt+0x497a4>
  44f0c8:	cbnz	w10, 44f940 <feof@plt+0x4cc40>
  44f0cc:	ldr	x9, [x9, #8]
  44f0d0:	cbz	x9, 44f940 <feof@plt+0x4cc40>
  44f0d4:	ldr	w10, [x9]
  44f0d8:	cmp	w10, #0x2f
  44f0dc:	b.ne	44a1cc <feof@plt+0x474cc>  // b.any
  44f0e0:	ldr	w10, [x19, #316]
  44f0e4:	tbnz	w10, #31, 44a1cc <feof@plt+0x474cc>
  44f0e8:	subs	w11, w10, #0x1
  44f0ec:	b.lt	44f934 <feof@plt+0x4cc34>  // b.tstop
  44f0f0:	ldr	x9, [x9, #16]
  44f0f4:	cbz	x9, 44f940 <feof@plt+0x4cc40>
  44f0f8:	ldr	w10, [x9]
  44f0fc:	cmp	w10, #0x2f
  44f100:	mov	w10, w11
  44f104:	b.eq	44f0e8 <feof@plt+0x4c3e8>  // b.none
  44f108:	b	44f940 <feof@plt+0x4cc40>
  44f10c:	add	w8, w8, #0x1
  44f110:	add	w9, w9, #0x1
  44f114:	str	w8, [x22, #4]
  44f118:	str	w9, [x19, #308]
  44f11c:	str	x22, [sp, #16]
  44f120:	ldr	x8, [x19, #328]
  44f124:	add	x9, sp, #0x10
  44f128:	mov	x0, x19
  44f12c:	mov	w1, w20
  44f130:	mov	x2, x22
  44f134:	str	x8, [sp, #24]
  44f138:	str	x9, [x19, #328]
  44f13c:	bl	449d30 <feof@plt+0x47030>
  44f140:	ldr	x8, [sp, #24]
  44f144:	str	x8, [x19, #328]
  44f148:	ldr	w8, [x22, #4]
  44f14c:	sub	w8, w8, #0x1
  44f150:	str	w8, [x22, #4]
  44f154:	ldr	w8, [x19, #308]
  44f158:	sub	w8, w8, #0x1
  44f15c:	str	w8, [x19, #308]
  44f160:	ldr	x22, [x21, #8]
  44f164:	adrp	x1, 456000 <_obstack_memory_used@@Base+0xdd8>
  44f168:	add	x1, x1, #0xf0b
  44f16c:	ldr	x24, [x22, #8]
  44f170:	ldr	x23, [x24]
  44f174:	mov	x0, x23
  44f178:	bl	402b40 <strcmp@plt>
  44f17c:	cbz	w0, 44f208 <feof@plt+0x4c508>
  44f180:	adrp	x1, 466000 <_obstack_memory_used@@Base+0x10dd8>
  44f184:	add	x1, x1, #0xa70
  44f188:	mov	x0, x23
  44f18c:	bl	402b40 <strcmp@plt>
  44f190:	cbz	w0, 44f750 <feof@plt+0x4ca50>
  44f194:	ldr	w8, [x22]
  44f198:	cmp	w8, #0x32
  44f19c:	b.ne	44f2bc <feof@plt+0x4c5bc>  // b.any
  44f1a0:	ldrsw	x22, [x24, #16]
  44f1a4:	cbz	w22, 44f750 <feof@plt+0x4ca50>
  44f1a8:	ldr	x23, [x24, #8]
  44f1ac:	b	44f1cc <feof@plt+0x4c4cc>
  44f1b0:	add	x9, x8, #0x1
  44f1b4:	subs	x22, x22, #0x1
  44f1b8:	add	x23, x23, #0x1
  44f1bc:	str	x9, [x19, #256]
  44f1c0:	strb	w24, [x19, x8]
  44f1c4:	strb	w24, [x19, #264]
  44f1c8:	b.eq	44f750 <feof@plt+0x4ca50>  // b.none
  44f1cc:	ldr	x8, [x19, #256]
  44f1d0:	ldrb	w24, [x23]
  44f1d4:	cmp	x8, #0xff
  44f1d8:	b.ne	44f1b0 <feof@plt+0x4c4b0>  // b.any
  44f1dc:	ldp	x8, x2, [x19, #272]
  44f1e0:	mov	w1, #0xff                  	// #255
  44f1e4:	mov	x0, x19
  44f1e8:	strb	wzr, [x19, #255]
  44f1ec:	blr	x8
  44f1f0:	ldr	x9, [x19, #320]
  44f1f4:	mov	x8, xzr
  44f1f8:	str	xzr, [x19, #256]
  44f1fc:	add	x9, x9, #0x1
  44f200:	str	x9, [x19, #320]
  44f204:	b	44f1b0 <feof@plt+0x4c4b0>
  44f208:	ldr	x8, [x19, #256]
  44f20c:	cmp	x8, #0xff
  44f210:	b.ne	44f23c <feof@plt+0x4c53c>  // b.any
  44f214:	ldp	x8, x2, [x19, #272]
  44f218:	mov	w1, #0xff                  	// #255
  44f21c:	mov	x0, x19
  44f220:	strb	wzr, [x19, #255]
  44f224:	blr	x8
  44f228:	ldr	x9, [x19, #320]
  44f22c:	mov	x8, xzr
  44f230:	str	xzr, [x19, #256]
  44f234:	add	x9, x9, #0x1
  44f238:	str	x9, [x19, #320]
  44f23c:	add	x9, x8, #0x1
  44f240:	mov	w10, #0x5b                  	// #91
  44f244:	str	x9, [x19, #256]
  44f248:	strb	w10, [x19, x8]
  44f24c:	strb	w10, [x19, #264]
  44f250:	ldr	x8, [x21, #16]
  44f254:	ldr	x22, [x8, #16]
  44f258:	cbz	x22, 44f274 <feof@plt+0x4c574>
  44f25c:	ldr	w8, [x22, #4]
  44f260:	cmp	w8, #0x1
  44f264:	b.gt	44f274 <feof@plt+0x4c574>
  44f268:	ldr	w9, [x19, #308]
  44f26c:	cmp	w9, #0x401
  44f270:	b.lt	44f658 <feof@plt+0x4c958>  // b.tstop
  44f274:	mov	w8, #0x1                   	// #1
  44f278:	str	w8, [x25]
  44f27c:	ldr	x8, [x19, #256]
  44f280:	cmp	x8, #0xff
  44f284:	b.ne	44f2b0 <feof@plt+0x4c5b0>  // b.any
  44f288:	ldp	x8, x2, [x19, #272]
  44f28c:	mov	w1, #0xff                  	// #255
  44f290:	mov	x0, x19
  44f294:	strb	wzr, [x19, #255]
  44f298:	blr	x8
  44f29c:	ldr	x9, [x19, #320]
  44f2a0:	mov	x8, xzr
  44f2a4:	str	xzr, [x19, #256]
  44f2a8:	add	x9, x9, #0x1
  44f2ac:	str	x9, [x19, #320]
  44f2b0:	add	x9, x8, #0x1
  44f2b4:	mov	w10, #0x5d                  	// #93
  44f2b8:	b	44f84c <feof@plt+0x4cb4c>
  44f2bc:	ldr	w8, [x22, #4]
  44f2c0:	cmp	w8, #0x1
  44f2c4:	b.gt	44f2d4 <feof@plt+0x4c5d4>
  44f2c8:	ldr	w9, [x19, #308]
  44f2cc:	cmp	w9, #0x401
  44f2d0:	b.lt	44f700 <feof@plt+0x4ca00>  // b.tstop
  44f2d4:	mov	w8, #0x1                   	// #1
  44f2d8:	str	w8, [x25]
  44f2dc:	b	44f750 <feof@plt+0x4ca50>
  44f2e0:	add	w8, w8, #0x1
  44f2e4:	str	w8, [x21, #4]
  44f2e8:	ldr	x8, [x19, #328]
  44f2ec:	add	w9, w9, #0x1
  44f2f0:	str	w9, [x19, #308]
  44f2f4:	add	x9, sp, #0x10
  44f2f8:	mov	x0, x19
  44f2fc:	mov	w1, w20
  44f300:	mov	x2, x21
  44f304:	stp	x21, x8, [sp, #16]
  44f308:	str	x9, [x19, #328]
  44f30c:	bl	449d30 <feof@plt+0x47030>
  44f310:	ldr	x8, [sp, #24]
  44f314:	str	x8, [x19, #328]
  44f318:	ldr	w8, [x21, #4]
  44f31c:	sub	w8, w8, #0x1
  44f320:	str	w8, [x21, #4]
  44f324:	ldr	w8, [x19, #308]
  44f328:	sub	w8, w8, #0x1
  44f32c:	str	w8, [x19, #308]
  44f330:	b	44e2e4 <feof@plt+0x4b5e4>
  44f334:	ldr	x8, [x19, #256]
  44f338:	cmp	x8, #0xff
  44f33c:	b.ne	44f368 <feof@plt+0x4c668>  // b.any
  44f340:	ldp	x8, x2, [x19, #272]
  44f344:	mov	w1, #0xff                  	// #255
  44f348:	mov	x0, x19
  44f34c:	strb	wzr, [x19, #255]
  44f350:	blr	x8
  44f354:	ldr	x9, [x19, #320]
  44f358:	mov	x8, xzr
  44f35c:	str	xzr, [x19, #256]
  44f360:	add	x9, x9, #0x1
  44f364:	str	x9, [x19, #320]
  44f368:	add	x9, x8, #0x1
  44f36c:	mov	w10, #0x74                  	// #116
  44f370:	str	x9, [x19, #256]
  44f374:	strb	w10, [x19, x8]
  44f378:	ldr	x8, [x19, #256]
  44f37c:	strb	w10, [x19, #264]
  44f380:	cmp	x8, #0xff
  44f384:	b.ne	44f3b0 <feof@plt+0x4c6b0>  // b.any
  44f388:	ldp	x8, x2, [x19, #272]
  44f38c:	mov	w1, #0xff                  	// #255
  44f390:	mov	x0, x19
  44f394:	strb	wzr, [x19, #255]
  44f398:	blr	x8
  44f39c:	ldr	x9, [x19, #320]
  44f3a0:	mov	x8, xzr
  44f3a4:	str	xzr, [x19, #256]
  44f3a8:	add	x9, x9, #0x1
  44f3ac:	str	x9, [x19, #320]
  44f3b0:	add	x9, x8, #0x1
  44f3b4:	mov	w10, #0x72                  	// #114
  44f3b8:	str	x9, [x19, #256]
  44f3bc:	strb	w10, [x19, x8]
  44f3c0:	ldr	x8, [x19, #256]
  44f3c4:	strb	w10, [x19, #264]
  44f3c8:	cmp	x8, #0xff
  44f3cc:	b.ne	44f3f8 <feof@plt+0x4c6f8>  // b.any
  44f3d0:	ldp	x8, x2, [x19, #272]
  44f3d4:	mov	w1, #0xff                  	// #255
  44f3d8:	mov	x0, x19
  44f3dc:	strb	wzr, [x19, #255]
  44f3e0:	blr	x8
  44f3e4:	ldr	x9, [x19, #320]
  44f3e8:	mov	x8, xzr
  44f3ec:	str	xzr, [x19, #256]
  44f3f0:	add	x9, x9, #0x1
  44f3f4:	str	x9, [x19, #320]
  44f3f8:	add	x9, x8, #0x1
  44f3fc:	mov	w10, #0x75                  	// #117
  44f400:	str	x9, [x19, #256]
  44f404:	strb	w10, [x19, x8]
  44f408:	ldr	x8, [x19, #256]
  44f40c:	strb	w10, [x19, #264]
  44f410:	cmp	x8, #0xff
  44f414:	b.ne	44f440 <feof@plt+0x4c740>  // b.any
  44f418:	ldp	x8, x2, [x19, #272]
  44f41c:	mov	w1, #0xff                  	// #255
  44f420:	mov	x0, x19
  44f424:	strb	wzr, [x19, #255]
  44f428:	blr	x8
  44f42c:	ldr	x9, [x19, #320]
  44f430:	mov	x8, xzr
  44f434:	str	xzr, [x19, #256]
  44f438:	add	x9, x9, #0x1
  44f43c:	str	x9, [x19, #320]
  44f440:	add	x9, x8, #0x1
  44f444:	mov	w10, #0x65                  	// #101
  44f448:	b	44ed30 <feof@plt+0x4c030>
  44f44c:	ldr	x8, [x19, #256]
  44f450:	cmp	x8, #0xff
  44f454:	b.ne	44f480 <feof@plt+0x4c780>  // b.any
  44f458:	ldp	x8, x2, [x19, #272]
  44f45c:	mov	w1, #0xff                  	// #255
  44f460:	mov	x0, x19
  44f464:	strb	wzr, [x19, #255]
  44f468:	blr	x8
  44f46c:	ldr	x9, [x19, #320]
  44f470:	mov	x8, xzr
  44f474:	str	xzr, [x19, #256]
  44f478:	add	x9, x9, #0x1
  44f47c:	str	x9, [x19, #320]
  44f480:	add	x9, x8, #0x1
  44f484:	mov	w10, #0x28                  	// #40
  44f488:	str	x9, [x19, #256]
  44f48c:	strb	w10, [x19, x8]
  44f490:	strb	w10, [x19, #264]
  44f494:	ldr	w8, [x23, #4]
  44f498:	cmp	w8, #0x1
  44f49c:	b.gt	44f4ac <feof@plt+0x4c7ac>
  44f4a0:	ldr	w9, [x19, #308]
  44f4a4:	cmp	w9, #0x401
  44f4a8:	b.lt	44f9f8 <feof@plt+0x4ccf8>  // b.tstop
  44f4ac:	mov	w8, #0x1                   	// #1
  44f4b0:	str	w8, [x25]
  44f4b4:	b	44fa48 <feof@plt+0x4cd48>
  44f4b8:	add	w8, w8, #0x1
  44f4bc:	str	w8, [x23, #4]
  44f4c0:	ldr	x8, [x19, #328]
  44f4c4:	add	w9, w9, #0x1
  44f4c8:	str	w9, [x19, #308]
  44f4cc:	add	x9, sp, #0x10
  44f4d0:	mov	x0, x19
  44f4d4:	mov	w1, w20
  44f4d8:	mov	x2, x23
  44f4dc:	stp	x23, x8, [sp, #16]
  44f4e0:	str	x9, [x19, #328]
  44f4e4:	bl	449d30 <feof@plt+0x47030>
  44f4e8:	ldr	x8, [sp, #24]
  44f4ec:	str	x8, [x19, #328]
  44f4f0:	ldr	w8, [x23, #4]
  44f4f4:	sub	w8, w8, #0x1
  44f4f8:	str	w8, [x23, #4]
  44f4fc:	ldr	w8, [x19, #308]
  44f500:	sub	w8, w8, #0x1
  44f504:	str	w8, [x19, #308]
  44f508:	b	44fa90 <feof@plt+0x4cd90>
  44f50c:	ldr	x8, [x19, #256]
  44f510:	cmp	x8, #0xff
  44f514:	b.ne	44f540 <feof@plt+0x4c840>  // b.any
  44f518:	ldp	x8, x2, [x19, #272]
  44f51c:	mov	w1, #0xff                  	// #255
  44f520:	mov	x0, x19
  44f524:	strb	wzr, [x19, #255]
  44f528:	blr	x8
  44f52c:	ldr	x9, [x19, #320]
  44f530:	mov	x8, xzr
  44f534:	str	xzr, [x19, #256]
  44f538:	add	x9, x9, #0x1
  44f53c:	str	x9, [x19, #320]
  44f540:	add	x9, x8, #0x1
  44f544:	mov	w10, #0x28                  	// #40
  44f548:	str	x9, [x19, #256]
  44f54c:	strb	w10, [x19, x8]
  44f550:	strb	w10, [x19, #264]
  44f554:	ldr	w8, [x23, #4]
  44f558:	cmp	w8, #0x1
  44f55c:	b.gt	44f56c <feof@plt+0x4c86c>
  44f560:	ldr	w9, [x19, #308]
  44f564:	cmp	w9, #0x401
  44f568:	b.lt	44fb5c <feof@plt+0x4ce5c>  // b.tstop
  44f56c:	mov	w8, #0x1                   	// #1
  44f570:	str	w8, [x25]
  44f574:	b	44fbac <feof@plt+0x4ceac>
  44f578:	add	w8, w8, #0x1
  44f57c:	str	w8, [x23, #4]
  44f580:	ldr	x8, [x19, #328]
  44f584:	add	w9, w9, #0x1
  44f588:	str	w9, [x19, #308]
  44f58c:	add	x9, sp, #0x10
  44f590:	mov	x0, x19
  44f594:	mov	w1, w20
  44f598:	mov	x2, x23
  44f59c:	stp	x23, x8, [sp, #16]
  44f5a0:	str	x9, [x19, #328]
  44f5a4:	bl	449d30 <feof@plt+0x47030>
  44f5a8:	ldr	x8, [sp, #24]
  44f5ac:	str	x8, [x19, #328]
  44f5b0:	ldr	w8, [x23, #4]
  44f5b4:	sub	w8, w8, #0x1
  44f5b8:	str	w8, [x23, #4]
  44f5bc:	ldr	w8, [x19, #308]
  44f5c0:	sub	w8, w8, #0x1
  44f5c4:	str	w8, [x19, #308]
  44f5c8:	b	44fbf4 <feof@plt+0x4cef4>
  44f5cc:	cbnz	w8, 44c434 <feof@plt+0x49734>
  44f5d0:	ldr	x21, [x21, #8]
  44f5d4:	cbz	x21, 44c434 <feof@plt+0x49734>
  44f5d8:	ldr	x8, [x22]
  44f5dc:	str	x8, [x19, #288]
  44f5e0:	ldr	w8, [x21, #4]
  44f5e4:	cmp	w8, #0x1
  44f5e8:	b.gt	44f5f8 <feof@plt+0x4c8f8>
  44f5ec:	ldr	w9, [x19, #308]
  44f5f0:	cmp	w9, #0x401
  44f5f4:	b.lt	44f608 <feof@plt+0x4c908>  // b.tstop
  44f5f8:	mov	w8, #0x1                   	// #1
  44f5fc:	str	w8, [x25]
  44f600:	str	x22, [x19, #288]
  44f604:	b	44c43c <feof@plt+0x4973c>
  44f608:	add	w8, w8, #0x1
  44f60c:	str	w8, [x21, #4]
  44f610:	ldr	x8, [x19, #328]
  44f614:	add	w9, w9, #0x1
  44f618:	str	w9, [x19, #308]
  44f61c:	add	x9, sp, #0x10
  44f620:	mov	x0, x19
  44f624:	mov	w1, w20
  44f628:	mov	x2, x21
  44f62c:	stp	x21, x8, [sp, #16]
  44f630:	str	x9, [x19, #328]
  44f634:	bl	449d30 <feof@plt+0x47030>
  44f638:	ldr	x8, [sp, #24]
  44f63c:	str	x8, [x19, #328]
  44f640:	ldr	w8, [x21, #4]
  44f644:	sub	w8, w8, #0x1
  44f648:	str	w8, [x21, #4]
  44f64c:	ldr	w8, [x19, #308]
  44f650:	str	x22, [x19, #288]
  44f654:	b	44c4a8 <feof@plt+0x497a8>
  44f658:	add	w8, w8, #0x1
  44f65c:	str	w8, [x22, #4]
  44f660:	ldr	x8, [x19, #328]
  44f664:	add	w9, w9, #0x1
  44f668:	str	w9, [x19, #308]
  44f66c:	add	x9, sp, #0x10
  44f670:	mov	x0, x19
  44f674:	mov	w1, w20
  44f678:	mov	x2, x22
  44f67c:	stp	x22, x8, [sp, #16]
  44f680:	str	x9, [x19, #328]
  44f684:	bl	449d30 <feof@plt+0x47030>
  44f688:	ldr	x8, [sp, #24]
  44f68c:	str	x8, [x19, #328]
  44f690:	ldr	w8, [x22, #4]
  44f694:	sub	w8, w8, #0x1
  44f698:	str	w8, [x22, #4]
  44f69c:	ldr	w8, [x19, #308]
  44f6a0:	sub	w8, w8, #0x1
  44f6a4:	str	w8, [x19, #308]
  44f6a8:	b	44f27c <feof@plt+0x4c57c>
  44f6ac:	add	w8, w8, #0x1
  44f6b0:	str	w8, [x21, #4]
  44f6b4:	ldr	x8, [x19, #328]
  44f6b8:	add	w9, w9, #0x1
  44f6bc:	str	w9, [x19, #308]
  44f6c0:	add	x9, sp, #0x10
  44f6c4:	mov	x0, x19
  44f6c8:	mov	w1, w20
  44f6cc:	mov	x2, x21
  44f6d0:	stp	x21, x8, [sp, #16]
  44f6d4:	str	x9, [x19, #328]
  44f6d8:	bl	449d30 <feof@plt+0x47030>
  44f6dc:	ldr	x8, [sp, #24]
  44f6e0:	str	x8, [x19, #328]
  44f6e4:	ldr	w8, [x21, #4]
  44f6e8:	sub	w8, w8, #0x1
  44f6ec:	str	w8, [x21, #4]
  44f6f0:	ldr	w8, [x19, #308]
  44f6f4:	sub	w8, w8, #0x1
  44f6f8:	str	w8, [x19, #308]
  44f6fc:	b	44ea08 <feof@plt+0x4bd08>
  44f700:	add	w8, w8, #0x1
  44f704:	str	w8, [x22, #4]
  44f708:	ldr	x8, [x19, #328]
  44f70c:	add	w9, w9, #0x1
  44f710:	str	w9, [x19, #308]
  44f714:	add	x9, sp, #0x10
  44f718:	mov	x0, x19
  44f71c:	mov	w1, w20
  44f720:	mov	x2, x22
  44f724:	stp	x22, x8, [sp, #16]
  44f728:	str	x9, [x19, #328]
  44f72c:	bl	449d30 <feof@plt+0x47030>
  44f730:	ldr	x8, [sp, #24]
  44f734:	str	x8, [x19, #328]
  44f738:	ldr	w8, [x22, #4]
  44f73c:	sub	w8, w8, #0x1
  44f740:	str	w8, [x22, #4]
  44f744:	ldr	w8, [x19, #308]
  44f748:	sub	w8, w8, #0x1
  44f74c:	str	w8, [x19, #308]
  44f750:	ldr	x8, [x21, #16]
  44f754:	ldr	x22, [x8, #16]
  44f758:	ldr	w8, [x22]
  44f75c:	cmp	w8, #0x31
  44f760:	b.hi	44f7a4 <feof@plt+0x4caa4>  // b.pmore
  44f764:	mov	w9, #0x1                   	// #1
  44f768:	lsl	x8, x9, x8
  44f76c:	mov	x9, #0x43                  	// #67
  44f770:	movk	x9, #0x2, lsl #48
  44f774:	tst	x8, x9
  44f778:	b.eq	44f7a4 <feof@plt+0x4caa4>  // b.none
  44f77c:	cbz	x22, 44f798 <feof@plt+0x4ca98>
  44f780:	ldr	w8, [x22, #4]
  44f784:	cmp	w8, #0x1
  44f788:	b.gt	44f798 <feof@plt+0x4ca98>
  44f78c:	ldr	w9, [x19, #308]
  44f790:	cmp	w9, #0x401
  44f794:	b.lt	44f88c <feof@plt+0x4cb8c>  // b.tstop
  44f798:	mov	w8, #0x1                   	// #1
  44f79c:	str	w8, [x25]
  44f7a0:	b	44f858 <feof@plt+0x4cb58>
  44f7a4:	ldr	x8, [x19, #256]
  44f7a8:	cmp	x8, #0xff
  44f7ac:	b.ne	44f7d8 <feof@plt+0x4cad8>  // b.any
  44f7b0:	ldp	x8, x2, [x19, #272]
  44f7b4:	mov	w1, #0xff                  	// #255
  44f7b8:	mov	x0, x19
  44f7bc:	strb	wzr, [x19, #255]
  44f7c0:	blr	x8
  44f7c4:	ldr	x9, [x19, #320]
  44f7c8:	mov	x8, xzr
  44f7cc:	str	xzr, [x19, #256]
  44f7d0:	add	x9, x9, #0x1
  44f7d4:	str	x9, [x19, #320]
  44f7d8:	add	x9, x8, #0x1
  44f7dc:	mov	w10, #0x28                  	// #40
  44f7e0:	str	x9, [x19, #256]
  44f7e4:	strb	w10, [x19, x8]
  44f7e8:	strb	w10, [x19, #264]
  44f7ec:	cbz	x22, 44f808 <feof@plt+0x4cb08>
  44f7f0:	ldr	w8, [x22, #4]
  44f7f4:	cmp	w8, #0x1
  44f7f8:	b.gt	44f808 <feof@plt+0x4cb08>
  44f7fc:	ldr	w9, [x19, #308]
  44f800:	cmp	w9, #0x401
  44f804:	b.lt	44f9a4 <feof@plt+0x4cca4>  // b.tstop
  44f808:	mov	w8, #0x1                   	// #1
  44f80c:	str	w8, [x25]
  44f810:	ldr	x8, [x19, #256]
  44f814:	cmp	x8, #0xff
  44f818:	b.ne	44f844 <feof@plt+0x4cb44>  // b.any
  44f81c:	ldp	x8, x2, [x19, #272]
  44f820:	mov	w1, #0xff                  	// #255
  44f824:	mov	x0, x19
  44f828:	strb	wzr, [x19, #255]
  44f82c:	blr	x8
  44f830:	ldr	x9, [x19, #320]
  44f834:	mov	x8, xzr
  44f838:	str	xzr, [x19, #256]
  44f83c:	add	x9, x9, #0x1
  44f840:	str	x9, [x19, #320]
  44f844:	add	x9, x8, #0x1
  44f848:	mov	w10, #0x29                  	// #41
  44f84c:	str	x9, [x19, #256]
  44f850:	strb	w10, [x19, x8]
  44f854:	strb	w10, [x19, #264]
  44f858:	ldr	x8, [x21, #8]
  44f85c:	ldr	w9, [x8]
  44f860:	cmp	w9, #0x32
  44f864:	b.ne	44c43c <feof@plt+0x4973c>  // b.any
  44f868:	ldr	x8, [x8, #8]
  44f86c:	ldr	w9, [x8, #16]
  44f870:	cmp	w9, #0x1
  44f874:	b.ne	44c43c <feof@plt+0x4973c>  // b.any
  44f878:	ldr	x8, [x8, #8]
  44f87c:	ldrb	w8, [x8]
  44f880:	cmp	w8, #0x3e
  44f884:	b.ne	44c43c <feof@plt+0x4973c>  // b.any
  44f888:	b	44ecf4 <feof@plt+0x4bff4>
  44f88c:	add	w8, w8, #0x1
  44f890:	str	w8, [x22, #4]
  44f894:	ldr	x8, [x19, #328]
  44f898:	add	w9, w9, #0x1
  44f89c:	str	w9, [x19, #308]
  44f8a0:	add	x9, sp, #0x10
  44f8a4:	mov	x0, x19
  44f8a8:	mov	w1, w20
  44f8ac:	mov	x2, x22
  44f8b0:	stp	x22, x8, [sp, #16]
  44f8b4:	str	x9, [x19, #328]
  44f8b8:	bl	449d30 <feof@plt+0x47030>
  44f8bc:	ldr	x8, [sp, #24]
  44f8c0:	str	x8, [x19, #328]
  44f8c4:	ldr	w8, [x22, #4]
  44f8c8:	sub	w8, w8, #0x1
  44f8cc:	str	w8, [x22, #4]
  44f8d0:	ldr	w8, [x19, #308]
  44f8d4:	sub	w8, w8, #0x1
  44f8d8:	str	w8, [x19, #308]
  44f8dc:	b	44f858 <feof@plt+0x4cb58>
  44f8e0:	add	w8, w8, #0x1
  44f8e4:	str	w8, [x21, #4]
  44f8e8:	ldr	x8, [x19, #328]
  44f8ec:	add	w9, w9, #0x1
  44f8f0:	str	w9, [x19, #308]
  44f8f4:	add	x9, sp, #0x10
  44f8f8:	mov	x0, x19
  44f8fc:	mov	w1, w20
  44f900:	mov	x2, x21
  44f904:	stp	x21, x8, [sp, #16]
  44f908:	str	x9, [x19, #328]
  44f90c:	bl	449d30 <feof@plt+0x47030>
  44f910:	ldr	x8, [sp, #24]
  44f914:	str	x8, [x19, #328]
  44f918:	ldr	w8, [x21, #4]
  44f91c:	sub	w8, w8, #0x1
  44f920:	str	w8, [x21, #4]
  44f924:	ldr	w8, [x19, #308]
  44f928:	sub	w8, w8, #0x1
  44f92c:	str	w8, [x19, #308]
  44f930:	b	44eafc <feof@plt+0x4bdfc>
  44f934:	cbnz	w10, 44f940 <feof@plt+0x4cc40>
  44f938:	ldr	x9, [x9, #8]
  44f93c:	cbnz	x9, 44a1cc <feof@plt+0x474cc>
  44f940:	cbz	w23, 44c434 <feof@plt+0x49734>
  44f944:	str	x24, [x19, #288]
  44f948:	b	44c434 <feof@plt+0x49734>
  44f94c:	add	w8, w8, #0x1
  44f950:	add	w9, w9, #0x1
  44f954:	str	w8, [x22, #4]
  44f958:	str	w9, [x19, #308]
  44f95c:	str	x22, [sp, #16]
  44f960:	ldr	x8, [x19, #328]
  44f964:	add	x9, sp, #0x10
  44f968:	mov	x0, x19
  44f96c:	mov	w1, w20
  44f970:	mov	x2, x22
  44f974:	str	x8, [sp, #24]
  44f978:	str	x9, [x19, #328]
  44f97c:	bl	449d30 <feof@plt+0x47030>
  44f980:	ldr	x8, [sp, #24]
  44f984:	str	x8, [x19, #328]
  44f988:	ldr	w8, [x22, #4]
  44f98c:	sub	w8, w8, #0x1
  44f990:	str	w8, [x22, #4]
  44f994:	ldr	w8, [x19, #308]
  44f998:	sub	w8, w8, #0x1
  44f99c:	str	w8, [x19, #308]
  44f9a0:	b	44ef00 <feof@plt+0x4c200>
  44f9a4:	add	w8, w8, #0x1
  44f9a8:	str	w8, [x22, #4]
  44f9ac:	ldr	x8, [x19, #328]
  44f9b0:	add	w9, w9, #0x1
  44f9b4:	str	w9, [x19, #308]
  44f9b8:	add	x9, sp, #0x10
  44f9bc:	mov	x0, x19
  44f9c0:	mov	w1, w20
  44f9c4:	mov	x2, x22
  44f9c8:	stp	x22, x8, [sp, #16]
  44f9cc:	str	x9, [x19, #328]
  44f9d0:	bl	449d30 <feof@plt+0x47030>
  44f9d4:	ldr	x8, [sp, #24]
  44f9d8:	str	x8, [x19, #328]
  44f9dc:	ldr	w8, [x22, #4]
  44f9e0:	sub	w8, w8, #0x1
  44f9e4:	str	w8, [x22, #4]
  44f9e8:	ldr	w8, [x19, #308]
  44f9ec:	sub	w8, w8, #0x1
  44f9f0:	str	w8, [x19, #308]
  44f9f4:	b	44f810 <feof@plt+0x4cb10>
  44f9f8:	add	w8, w8, #0x1
  44f9fc:	str	w8, [x23, #4]
  44fa00:	ldr	x8, [x19, #328]
  44fa04:	add	w9, w9, #0x1
  44fa08:	str	w9, [x19, #308]
  44fa0c:	add	x9, sp, #0x10
  44fa10:	mov	x0, x19
  44fa14:	mov	w1, w20
  44fa18:	mov	x2, x23
  44fa1c:	stp	x23, x8, [sp, #16]
  44fa20:	str	x9, [x19, #328]
  44fa24:	bl	449d30 <feof@plt+0x47030>
  44fa28:	ldr	x8, [sp, #24]
  44fa2c:	str	x8, [x19, #328]
  44fa30:	ldr	w8, [x23, #4]
  44fa34:	sub	w8, w8, #0x1
  44fa38:	str	w8, [x23, #4]
  44fa3c:	ldr	w8, [x19, #308]
  44fa40:	sub	w8, w8, #0x1
  44fa44:	str	w8, [x19, #308]
  44fa48:	ldr	x8, [x19, #256]
  44fa4c:	cmp	x8, #0xff
  44fa50:	b.ne	44fa7c <feof@plt+0x4cd7c>  // b.any
  44fa54:	ldp	x8, x2, [x19, #272]
  44fa58:	mov	w1, #0xff                  	// #255
  44fa5c:	mov	x0, x19
  44fa60:	strb	wzr, [x19, #255]
  44fa64:	blr	x8
  44fa68:	ldr	x9, [x19, #320]
  44fa6c:	mov	x8, xzr
  44fa70:	str	xzr, [x19, #256]
  44fa74:	add	x9, x9, #0x1
  44fa78:	str	x9, [x19, #320]
  44fa7c:	add	x9, x8, #0x1
  44fa80:	mov	w10, #0x29                  	// #41
  44fa84:	str	x9, [x19, #256]
  44fa88:	strb	w10, [x19, x8]
  44fa8c:	strb	w10, [x19, #264]
  44fa90:	ldr	x8, [x19, #256]
  44fa94:	cmp	x8, #0xff
  44fa98:	b.ne	44fac4 <feof@plt+0x4cdc4>  // b.any
  44fa9c:	ldp	x8, x2, [x19, #272]
  44faa0:	mov	w1, #0xff                  	// #255
  44faa4:	mov	x0, x19
  44faa8:	strb	wzr, [x19, #255]
  44faac:	blr	x8
  44fab0:	ldr	x9, [x19, #320]
  44fab4:	mov	x8, xzr
  44fab8:	str	xzr, [x19, #256]
  44fabc:	add	x9, x9, #0x1
  44fac0:	str	x9, [x19, #320]
  44fac4:	add	x9, x8, #0x1
  44fac8:	mov	w10, #0x20                  	// #32
  44facc:	str	x9, [x19, #256]
  44fad0:	strb	w10, [x19, x8]
  44fad4:	strb	w10, [x19, #264]
  44fad8:	cbz	x22, 44faf4 <feof@plt+0x4cdf4>
  44fadc:	ldr	w8, [x22, #4]
  44fae0:	cmp	w8, #0x1
  44fae4:	b.gt	44faf4 <feof@plt+0x4cdf4>
  44fae8:	ldr	w9, [x19, #308]
  44faec:	cmp	w9, #0x401
  44faf0:	b.lt	44fb04 <feof@plt+0x4ce04>  // b.tstop
  44faf4:	mov	w8, #0x1                   	// #1
  44faf8:	str	w8, [x25]
  44fafc:	cbnz	x21, 44ff58 <feof@plt+0x4d258>
  44fb00:	b	44c43c <feof@plt+0x4973c>
  44fb04:	add	w8, w8, #0x1
  44fb08:	str	w8, [x22, #4]
  44fb0c:	ldr	x8, [x19, #328]
  44fb10:	add	w9, w9, #0x1
  44fb14:	str	w9, [x19, #308]
  44fb18:	add	x9, sp, #0x10
  44fb1c:	mov	x0, x19
  44fb20:	mov	w1, w20
  44fb24:	mov	x2, x22
  44fb28:	stp	x22, x8, [sp, #16]
  44fb2c:	str	x9, [x19, #328]
  44fb30:	bl	449d30 <feof@plt+0x47030>
  44fb34:	ldr	x8, [sp, #24]
  44fb38:	str	x8, [x19, #328]
  44fb3c:	ldr	w8, [x22, #4]
  44fb40:	sub	w8, w8, #0x1
  44fb44:	str	w8, [x22, #4]
  44fb48:	ldr	w8, [x19, #308]
  44fb4c:	sub	w8, w8, #0x1
  44fb50:	str	w8, [x19, #308]
  44fb54:	cbnz	x21, 44ff58 <feof@plt+0x4d258>
  44fb58:	b	44c43c <feof@plt+0x4973c>
  44fb5c:	add	w8, w8, #0x1
  44fb60:	str	w8, [x23, #4]
  44fb64:	ldr	x8, [x19, #328]
  44fb68:	add	w9, w9, #0x1
  44fb6c:	str	w9, [x19, #308]
  44fb70:	add	x9, sp, #0x10
  44fb74:	mov	x0, x19
  44fb78:	mov	w1, w20
  44fb7c:	mov	x2, x23
  44fb80:	stp	x23, x8, [sp, #16]
  44fb84:	str	x9, [x19, #328]
  44fb88:	bl	449d30 <feof@plt+0x47030>
  44fb8c:	ldr	x8, [sp, #24]
  44fb90:	str	x8, [x19, #328]
  44fb94:	ldr	w8, [x23, #4]
  44fb98:	sub	w8, w8, #0x1
  44fb9c:	str	w8, [x23, #4]
  44fba0:	ldr	w8, [x19, #308]
  44fba4:	sub	w8, w8, #0x1
  44fba8:	str	w8, [x19, #308]
  44fbac:	ldr	x8, [x19, #256]
  44fbb0:	cmp	x8, #0xff
  44fbb4:	b.ne	44fbe0 <feof@plt+0x4cee0>  // b.any
  44fbb8:	ldp	x8, x2, [x19, #272]
  44fbbc:	mov	w1, #0xff                  	// #255
  44fbc0:	mov	x0, x19
  44fbc4:	strb	wzr, [x19, #255]
  44fbc8:	blr	x8
  44fbcc:	ldr	x9, [x19, #320]
  44fbd0:	mov	x8, xzr
  44fbd4:	str	xzr, [x19, #256]
  44fbd8:	add	x9, x9, #0x1
  44fbdc:	str	x9, [x19, #320]
  44fbe0:	add	x9, x8, #0x1
  44fbe4:	mov	w10, #0x29                  	// #41
  44fbe8:	str	x9, [x19, #256]
  44fbec:	strb	w10, [x19, x8]
  44fbf0:	strb	w10, [x19, #264]
  44fbf4:	ldr	w8, [x24]
  44fbf8:	cmp	w8, #0x32
  44fbfc:	b.ne	44fc6c <feof@plt+0x4cf6c>  // b.any
  44fc00:	ldr	x8, [x24, #8]
  44fc04:	ldrsw	x23, [x8, #16]
  44fc08:	cbz	w23, 44fce0 <feof@plt+0x4cfe0>
  44fc0c:	ldr	x24, [x8, #8]
  44fc10:	b	44fc30 <feof@plt+0x4cf30>
  44fc14:	add	x9, x8, #0x1
  44fc18:	subs	x23, x23, #0x1
  44fc1c:	add	x24, x24, #0x1
  44fc20:	str	x9, [x19, #256]
  44fc24:	strb	w26, [x19, x8]
  44fc28:	strb	w26, [x19, #264]
  44fc2c:	b.eq	44fce0 <feof@plt+0x4cfe0>  // b.none
  44fc30:	ldr	x8, [x19, #256]
  44fc34:	ldrb	w26, [x24]
  44fc38:	cmp	x8, #0xff
  44fc3c:	b.ne	44fc14 <feof@plt+0x4cf14>  // b.any
  44fc40:	ldp	x8, x2, [x19, #272]
  44fc44:	mov	w1, #0xff                  	// #255
  44fc48:	mov	x0, x19
  44fc4c:	strb	wzr, [x19, #255]
  44fc50:	blr	x8
  44fc54:	ldr	x9, [x19, #320]
  44fc58:	mov	x8, xzr
  44fc5c:	str	xzr, [x19, #256]
  44fc60:	add	x9, x9, #0x1
  44fc64:	str	x9, [x19, #320]
  44fc68:	b	44fc14 <feof@plt+0x4cf14>
  44fc6c:	ldr	w8, [x24, #4]
  44fc70:	cmp	w8, #0x1
  44fc74:	b.gt	44fc84 <feof@plt+0x4cf84>
  44fc78:	ldr	w9, [x19, #308]
  44fc7c:	cmp	w9, #0x401
  44fc80:	b.lt	44fc90 <feof@plt+0x4cf90>  // b.tstop
  44fc84:	mov	w8, #0x1                   	// #1
  44fc88:	str	w8, [x25]
  44fc8c:	b	44fce0 <feof@plt+0x4cfe0>
  44fc90:	add	w8, w8, #0x1
  44fc94:	str	w8, [x24, #4]
  44fc98:	ldr	x8, [x19, #328]
  44fc9c:	add	w9, w9, #0x1
  44fca0:	str	w9, [x19, #308]
  44fca4:	add	x9, sp, #0x10
  44fca8:	mov	x0, x19
  44fcac:	mov	w1, w20
  44fcb0:	mov	x2, x24
  44fcb4:	stp	x24, x8, [sp, #16]
  44fcb8:	str	x9, [x19, #328]
  44fcbc:	bl	449d30 <feof@plt+0x47030>
  44fcc0:	ldr	x8, [sp, #24]
  44fcc4:	str	x8, [x19, #328]
  44fcc8:	ldr	w8, [x24, #4]
  44fccc:	sub	w8, w8, #0x1
  44fcd0:	str	w8, [x24, #4]
  44fcd4:	ldr	w8, [x19, #308]
  44fcd8:	sub	w8, w8, #0x1
  44fcdc:	str	w8, [x19, #308]
  44fce0:	ldr	w8, [x22]
  44fce4:	cmp	w8, #0x31
  44fce8:	b.hi	44fd28 <feof@plt+0x4d028>  // b.pmore
  44fcec:	mov	w9, #0x1                   	// #1
  44fcf0:	lsl	x8, x9, x8
  44fcf4:	mov	x9, #0x43                  	// #67
  44fcf8:	movk	x9, #0x2, lsl #48
  44fcfc:	tst	x8, x9
  44fd00:	b.eq	44fd28 <feof@plt+0x4d028>  // b.none
  44fd04:	ldr	w8, [x22, #4]
  44fd08:	cmp	w8, #0x1
  44fd0c:	b.gt	44fd1c <feof@plt+0x4d01c>
  44fd10:	ldr	w9, [x19, #308]
  44fd14:	cmp	w9, #0x401
  44fd18:	b.lt	44fd94 <feof@plt+0x4d094>  // b.tstop
  44fd1c:	mov	w8, #0x1                   	// #1
  44fd20:	str	w8, [x25]
  44fd24:	b	44fe80 <feof@plt+0x4d180>
  44fd28:	ldr	x8, [x19, #256]
  44fd2c:	cmp	x8, #0xff
  44fd30:	b.ne	44fd5c <feof@plt+0x4d05c>  // b.any
  44fd34:	ldp	x8, x2, [x19, #272]
  44fd38:	mov	w1, #0xff                  	// #255
  44fd3c:	mov	x0, x19
  44fd40:	strb	wzr, [x19, #255]
  44fd44:	blr	x8
  44fd48:	ldr	x9, [x19, #320]
  44fd4c:	mov	x8, xzr
  44fd50:	str	xzr, [x19, #256]
  44fd54:	add	x9, x9, #0x1
  44fd58:	str	x9, [x19, #320]
  44fd5c:	add	x9, x8, #0x1
  44fd60:	mov	w10, #0x28                  	// #40
  44fd64:	str	x9, [x19, #256]
  44fd68:	strb	w10, [x19, x8]
  44fd6c:	strb	w10, [x19, #264]
  44fd70:	ldr	w8, [x22, #4]
  44fd74:	cmp	w8, #0x1
  44fd78:	b.gt	44fd88 <feof@plt+0x4d088>
  44fd7c:	ldr	w9, [x19, #308]
  44fd80:	cmp	w9, #0x401
  44fd84:	b.lt	44fde8 <feof@plt+0x4d0e8>  // b.tstop
  44fd88:	mov	w8, #0x1                   	// #1
  44fd8c:	str	w8, [x25]
  44fd90:	b	44fe38 <feof@plt+0x4d138>
  44fd94:	add	w8, w8, #0x1
  44fd98:	str	w8, [x22, #4]
  44fd9c:	ldr	x8, [x19, #328]
  44fda0:	add	w9, w9, #0x1
  44fda4:	str	w9, [x19, #308]
  44fda8:	add	x9, sp, #0x10
  44fdac:	mov	x0, x19
  44fdb0:	mov	w1, w20
  44fdb4:	mov	x2, x22
  44fdb8:	stp	x22, x8, [sp, #16]
  44fdbc:	str	x9, [x19, #328]
  44fdc0:	bl	449d30 <feof@plt+0x47030>
  44fdc4:	ldr	x8, [sp, #24]
  44fdc8:	str	x8, [x19, #328]
  44fdcc:	ldr	w8, [x22, #4]
  44fdd0:	sub	w8, w8, #0x1
  44fdd4:	str	w8, [x22, #4]
  44fdd8:	ldr	w8, [x19, #308]
  44fddc:	sub	w8, w8, #0x1
  44fde0:	str	w8, [x19, #308]
  44fde4:	b	44fe80 <feof@plt+0x4d180>
  44fde8:	add	w8, w8, #0x1
  44fdec:	str	w8, [x22, #4]
  44fdf0:	ldr	x8, [x19, #328]
  44fdf4:	add	w9, w9, #0x1
  44fdf8:	str	w9, [x19, #308]
  44fdfc:	add	x9, sp, #0x10
  44fe00:	mov	x0, x19
  44fe04:	mov	w1, w20
  44fe08:	mov	x2, x22
  44fe0c:	stp	x22, x8, [sp, #16]
  44fe10:	str	x9, [x19, #328]
  44fe14:	bl	449d30 <feof@plt+0x47030>
  44fe18:	ldr	x8, [sp, #24]
  44fe1c:	str	x8, [x19, #328]
  44fe20:	ldr	w8, [x22, #4]
  44fe24:	sub	w8, w8, #0x1
  44fe28:	str	w8, [x22, #4]
  44fe2c:	ldr	w8, [x19, #308]
  44fe30:	sub	w8, w8, #0x1
  44fe34:	str	w8, [x19, #308]
  44fe38:	ldr	x8, [x19, #256]
  44fe3c:	cmp	x8, #0xff
  44fe40:	b.ne	44fe6c <feof@plt+0x4d16c>  // b.any
  44fe44:	ldp	x8, x2, [x19, #272]
  44fe48:	mov	w1, #0xff                  	// #255
  44fe4c:	mov	x0, x19
  44fe50:	strb	wzr, [x19, #255]
  44fe54:	blr	x8
  44fe58:	ldr	x9, [x19, #320]
  44fe5c:	mov	x8, xzr
  44fe60:	str	xzr, [x19, #256]
  44fe64:	add	x9, x9, #0x1
  44fe68:	str	x9, [x19, #320]
  44fe6c:	add	x9, x8, #0x1
  44fe70:	mov	w10, #0x29                  	// #41
  44fe74:	str	x9, [x19, #256]
  44fe78:	strb	w10, [x19, x8]
  44fe7c:	strb	w10, [x19, #264]
  44fe80:	ldr	x8, [x19, #256]
  44fe84:	cmp	x8, #0xff
  44fe88:	b.ne	44feb4 <feof@plt+0x4d1b4>  // b.any
  44fe8c:	ldp	x8, x2, [x19, #272]
  44fe90:	mov	w1, #0xff                  	// #255
  44fe94:	mov	x0, x19
  44fe98:	strb	wzr, [x19, #255]
  44fe9c:	blr	x8
  44fea0:	ldr	x9, [x19, #320]
  44fea4:	mov	x8, xzr
  44fea8:	str	xzr, [x19, #256]
  44feac:	add	x9, x9, #0x1
  44feb0:	str	x9, [x19, #320]
  44feb4:	add	x9, x8, #0x1
  44feb8:	mov	w10, #0x20                  	// #32
  44febc:	str	x9, [x19, #256]
  44fec0:	strb	w10, [x19, x8]
  44fec4:	ldr	x8, [x19, #256]
  44fec8:	strb	w10, [x19, #264]
  44fecc:	cmp	x8, #0xff
  44fed0:	b.ne	44fefc <feof@plt+0x4d1fc>  // b.any
  44fed4:	ldp	x8, x2, [x19, #272]
  44fed8:	mov	w1, #0xff                  	// #255
  44fedc:	mov	x0, x19
  44fee0:	strb	wzr, [x19, #255]
  44fee4:	blr	x8
  44fee8:	ldr	x9, [x19, #320]
  44feec:	mov	x8, xzr
  44fef0:	str	xzr, [x19, #256]
  44fef4:	add	x9, x9, #0x1
  44fef8:	str	x9, [x19, #320]
  44fefc:	add	x9, x8, #0x1
  44ff00:	mov	w10, #0x3a                  	// #58
  44ff04:	str	x9, [x19, #256]
  44ff08:	strb	w10, [x19, x8]
  44ff0c:	ldr	x8, [x19, #256]
  44ff10:	strb	w10, [x19, #264]
  44ff14:	cmp	x8, #0xff
  44ff18:	b.ne	44ff44 <feof@plt+0x4d244>  // b.any
  44ff1c:	ldp	x8, x2, [x19, #272]
  44ff20:	mov	w1, #0xff                  	// #255
  44ff24:	mov	x0, x19
  44ff28:	strb	wzr, [x19, #255]
  44ff2c:	blr	x8
  44ff30:	ldr	x9, [x19, #320]
  44ff34:	mov	x8, xzr
  44ff38:	str	xzr, [x19, #256]
  44ff3c:	add	x9, x9, #0x1
  44ff40:	str	x9, [x19, #320]
  44ff44:	add	x9, x8, #0x1
  44ff48:	mov	w10, #0x20                  	// #32
  44ff4c:	str	x9, [x19, #256]
  44ff50:	strb	w10, [x19, x8]
  44ff54:	strb	w10, [x19, #264]
  44ff58:	ldr	w8, [x21]
  44ff5c:	cmp	w8, #0x31
  44ff60:	b.hi	44ff7c <feof@plt+0x4d27c>  // b.pmore
  44ff64:	mov	w9, #0x1                   	// #1
  44ff68:	lsl	x8, x9, x8
  44ff6c:	mov	x9, #0x43                  	// #67
  44ff70:	movk	x9, #0x2, lsl #48
  44ff74:	tst	x8, x9
  44ff78:	b.ne	44c41c <feof@plt+0x4971c>  // b.any
  44ff7c:	ldr	x8, [x19, #256]
  44ff80:	cmp	x8, #0xff
  44ff84:	b.ne	44ffb0 <feof@plt+0x4d2b0>  // b.any
  44ff88:	ldp	x8, x2, [x19, #272]
  44ff8c:	mov	w1, #0xff                  	// #255
  44ff90:	mov	x0, x19
  44ff94:	strb	wzr, [x19, #255]
  44ff98:	blr	x8
  44ff9c:	ldr	x9, [x19, #320]
  44ffa0:	mov	x8, xzr
  44ffa4:	str	xzr, [x19, #256]
  44ffa8:	add	x9, x9, #0x1
  44ffac:	str	x9, [x19, #320]
  44ffb0:	add	x9, x8, #0x1
  44ffb4:	mov	w10, #0x28                  	// #40
  44ffb8:	str	x9, [x19, #256]
  44ffbc:	strb	w10, [x19, x8]
  44ffc0:	strb	w10, [x19, #264]
  44ffc4:	b	44c6f4 <feof@plt+0x499f4>
  44ffc8:	sub	sp, sp, #0x50
  44ffcc:	stp	x29, x30, [sp, #16]
  44ffd0:	stp	x24, x23, [sp, #32]
  44ffd4:	stp	x22, x21, [sp, #48]
  44ffd8:	stp	x20, x19, [sp, #64]
  44ffdc:	ldr	w8, [x2]
  44ffe0:	mov	x21, x2
  44ffe4:	mov	w20, w1
  44ffe8:	mov	x19, x0
  44ffec:	sub	w8, w8, #0x3
  44fff0:	cmp	w8, #0x4d
  44fff4:	add	x29, sp, #0x10
  44fff8:	b.hi	450448 <feof@plt+0x4d748>  // b.pmore
  44fffc:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  450000:	add	x9, x9, #0xcd4
  450004:	adr	x10, 450014 <feof@plt+0x4d314>
  450008:	ldrh	w11, [x9, x8, lsl #1]
  45000c:	add	x10, x10, x11, lsl #2
  450010:	br	x10
  450014:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x10dd8>
  450018:	mov	x20, xzr
  45001c:	add	x21, x21, #0xfab
  450020:	b	450040 <feof@plt+0x4d340>
  450024:	add	x20, x20, #0x1
  450028:	add	x9, x8, #0x1
  45002c:	cmp	x20, #0x9
  450030:	str	x9, [x19, #256]
  450034:	strb	w22, [x19, x8]
  450038:	strb	w22, [x19, #264]
  45003c:	b.eq	450a4c <feof@plt+0x4dd4c>  // b.none
  450040:	ldr	x8, [x19, #256]
  450044:	ldrb	w22, [x21, x20]
  450048:	cmp	x8, #0xff
  45004c:	b.ne	450024 <feof@plt+0x4d324>  // b.any
  450050:	ldp	x8, x2, [x19, #272]
  450054:	mov	w1, #0xff                  	// #255
  450058:	mov	x0, x19
  45005c:	strb	wzr, [x19, #255]
  450060:	blr	x8
  450064:	ldr	x9, [x19, #320]
  450068:	mov	x8, xzr
  45006c:	str	xzr, [x19, #256]
  450070:	add	x9, x9, #0x1
  450074:	str	x9, [x19, #320]
  450078:	b	450024 <feof@plt+0x4d324>
  45007c:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x10dd8>
  450080:	mov	x20, xzr
  450084:	add	x21, x21, #0xfb5
  450088:	b	4500a8 <feof@plt+0x4d3a8>
  45008c:	add	x20, x20, #0x1
  450090:	add	x9, x8, #0x1
  450094:	cmp	x20, #0x9
  450098:	str	x9, [x19, #256]
  45009c:	strb	w22, [x19, x8]
  4500a0:	strb	w22, [x19, #264]
  4500a4:	b.eq	450a4c <feof@plt+0x4dd4c>  // b.none
  4500a8:	ldr	x8, [x19, #256]
  4500ac:	ldrb	w22, [x21, x20]
  4500b0:	cmp	x8, #0xff
  4500b4:	b.ne	45008c <feof@plt+0x4d38c>  // b.any
  4500b8:	ldp	x8, x2, [x19, #272]
  4500bc:	mov	w1, #0xff                  	// #255
  4500c0:	mov	x0, x19
  4500c4:	strb	wzr, [x19, #255]
  4500c8:	blr	x8
  4500cc:	ldr	x9, [x19, #320]
  4500d0:	mov	x8, xzr
  4500d4:	str	xzr, [x19, #256]
  4500d8:	add	x9, x9, #0x1
  4500dc:	str	x9, [x19, #320]
  4500e0:	b	45008c <feof@plt+0x4d38c>
  4500e4:	ldr	x8, [x19, #256]
  4500e8:	cmp	x8, #0xff
  4500ec:	b.ne	450118 <feof@plt+0x4d418>  // b.any
  4500f0:	ldp	x8, x2, [x19, #272]
  4500f4:	mov	w1, #0xff                  	// #255
  4500f8:	mov	x0, x19
  4500fc:	strb	wzr, [x19, #255]
  450100:	blr	x8
  450104:	ldr	x9, [x19, #320]
  450108:	mov	x8, xzr
  45010c:	str	xzr, [x19, #256]
  450110:	add	x9, x9, #0x1
  450114:	str	x9, [x19, #320]
  450118:	add	x9, x8, #0x1
  45011c:	mov	w10, #0x20                  	// #32
  450120:	str	x9, [x19, #256]
  450124:	strb	w10, [x19, x8]
  450128:	ldr	x8, [x19, #256]
  45012c:	strb	w10, [x19, #264]
  450130:	cmp	x8, #0xff
  450134:	b.ne	450160 <feof@plt+0x4d460>  // b.any
  450138:	ldp	x8, x2, [x19, #272]
  45013c:	mov	w1, #0xff                  	// #255
  450140:	mov	x0, x19
  450144:	strb	wzr, [x19, #255]
  450148:	blr	x8
  45014c:	ldr	x9, [x19, #320]
  450150:	mov	x8, xzr
  450154:	str	xzr, [x19, #256]
  450158:	add	x9, x9, #0x1
  45015c:	str	x9, [x19, #320]
  450160:	add	x9, x8, #0x1
  450164:	mov	w10, #0x63                  	// #99
  450168:	str	x9, [x19, #256]
  45016c:	strb	w10, [x19, x8]
  450170:	ldr	x8, [x19, #256]
  450174:	strb	w10, [x19, #264]
  450178:	cmp	x8, #0xff
  45017c:	b.ne	4501a8 <feof@plt+0x4d4a8>  // b.any
  450180:	ldp	x8, x2, [x19, #272]
  450184:	mov	w1, #0xff                  	// #255
  450188:	mov	x0, x19
  45018c:	strb	wzr, [x19, #255]
  450190:	blr	x8
  450194:	ldr	x9, [x19, #320]
  450198:	mov	x8, xzr
  45019c:	str	xzr, [x19, #256]
  4501a0:	add	x9, x9, #0x1
  4501a4:	str	x9, [x19, #320]
  4501a8:	add	x9, x8, #0x1
  4501ac:	mov	w10, #0x6f                  	// #111
  4501b0:	str	x9, [x19, #256]
  4501b4:	strb	w10, [x19, x8]
  4501b8:	ldr	x8, [x19, #256]
  4501bc:	strb	w10, [x19, #264]
  4501c0:	cmp	x8, #0xff
  4501c4:	b.ne	4501f0 <feof@plt+0x4d4f0>  // b.any
  4501c8:	ldp	x8, x2, [x19, #272]
  4501cc:	mov	w1, #0xff                  	// #255
  4501d0:	mov	x0, x19
  4501d4:	strb	wzr, [x19, #255]
  4501d8:	blr	x8
  4501dc:	ldr	x9, [x19, #320]
  4501e0:	mov	x8, xzr
  4501e4:	str	xzr, [x19, #256]
  4501e8:	add	x9, x9, #0x1
  4501ec:	str	x9, [x19, #320]
  4501f0:	add	x9, x8, #0x1
  4501f4:	mov	w10, #0x6e                  	// #110
  4501f8:	str	x9, [x19, #256]
  4501fc:	strb	w10, [x19, x8]
  450200:	ldr	x8, [x19, #256]
  450204:	strb	w10, [x19, #264]
  450208:	cmp	x8, #0xff
  45020c:	b.ne	450238 <feof@plt+0x4d538>  // b.any
  450210:	ldp	x8, x2, [x19, #272]
  450214:	mov	w1, #0xff                  	// #255
  450218:	mov	x0, x19
  45021c:	strb	wzr, [x19, #255]
  450220:	blr	x8
  450224:	ldr	x9, [x19, #320]
  450228:	mov	x8, xzr
  45022c:	str	xzr, [x19, #256]
  450230:	add	x9, x9, #0x1
  450234:	str	x9, [x19, #320]
  450238:	add	x9, x8, #0x1
  45023c:	mov	w10, #0x73                  	// #115
  450240:	str	x9, [x19, #256]
  450244:	strb	w10, [x19, x8]
  450248:	ldr	x8, [x19, #256]
  45024c:	strb	w10, [x19, #264]
  450250:	cmp	x8, #0xff
  450254:	b.ne	450280 <feof@plt+0x4d580>  // b.any
  450258:	ldp	x8, x2, [x19, #272]
  45025c:	mov	w1, #0xff                  	// #255
  450260:	mov	x0, x19
  450264:	strb	wzr, [x19, #255]
  450268:	blr	x8
  45026c:	ldr	x9, [x19, #320]
  450270:	mov	x8, xzr
  450274:	str	xzr, [x19, #256]
  450278:	add	x9, x9, #0x1
  45027c:	str	x9, [x19, #320]
  450280:	add	x9, x8, #0x1
  450284:	mov	w10, #0x74                  	// #116
  450288:	b	450a40 <feof@plt+0x4dd40>
  45028c:	ldr	x21, [x21, #8]
  450290:	cbnz	x21, 450448 <feof@plt+0x4d748>
  450294:	b	450460 <feof@plt+0x4d760>
  450298:	ldr	x8, [x19, #256]
  45029c:	cmp	x8, #0xff
  4502a0:	b.ne	4502cc <feof@plt+0x4d5cc>  // b.any
  4502a4:	ldp	x8, x2, [x19, #272]
  4502a8:	mov	w1, #0xff                  	// #255
  4502ac:	mov	x0, x19
  4502b0:	strb	wzr, [x19, #255]
  4502b4:	blr	x8
  4502b8:	ldr	x9, [x19, #320]
  4502bc:	mov	x8, xzr
  4502c0:	str	xzr, [x19, #256]
  4502c4:	add	x9, x9, #0x1
  4502c8:	str	x9, [x19, #320]
  4502cc:	add	x9, x8, #0x1
  4502d0:	mov	w10, #0x20                  	// #32
  4502d4:	str	x9, [x19, #256]
  4502d8:	strb	w10, [x19, x8]
  4502dc:	strb	w10, [x19, #264]
  4502e0:	ldr	x8, [x19, #256]
  4502e4:	cmp	x8, #0xff
  4502e8:	b.ne	450314 <feof@plt+0x4d614>  // b.any
  4502ec:	ldp	x8, x2, [x19, #272]
  4502f0:	mov	w1, #0xff                  	// #255
  4502f4:	mov	x0, x19
  4502f8:	strb	wzr, [x19, #255]
  4502fc:	blr	x8
  450300:	ldr	x9, [x19, #320]
  450304:	mov	x8, xzr
  450308:	str	xzr, [x19, #256]
  45030c:	add	x9, x9, #0x1
  450310:	str	x9, [x19, #320]
  450314:	add	x9, x8, #0x1
  450318:	mov	w10, #0x26                  	// #38
  45031c:	b	450a40 <feof@plt+0x4dd40>
  450320:	ldr	x8, [x19, #256]
  450324:	cmp	x8, #0xff
  450328:	b.ne	450354 <feof@plt+0x4d654>  // b.any
  45032c:	ldp	x8, x2, [x19, #272]
  450330:	mov	w1, #0xff                  	// #255
  450334:	mov	x0, x19
  450338:	strb	wzr, [x19, #255]
  45033c:	blr	x8
  450340:	ldr	x9, [x19, #320]
  450344:	mov	x8, xzr
  450348:	str	xzr, [x19, #256]
  45034c:	add	x9, x9, #0x1
  450350:	str	x9, [x19, #320]
  450354:	add	x9, x8, #0x1
  450358:	mov	w10, #0x20                  	// #32
  45035c:	str	x9, [x19, #256]
  450360:	strb	w10, [x19, x8]
  450364:	strb	w10, [x19, #264]
  450368:	ldr	x8, [x19, #256]
  45036c:	cmp	x8, #0xff
  450370:	b.ne	45039c <feof@plt+0x4d69c>  // b.any
  450374:	ldp	x8, x2, [x19, #272]
  450378:	mov	w1, #0xff                  	// #255
  45037c:	mov	x0, x19
  450380:	strb	wzr, [x19, #255]
  450384:	blr	x8
  450388:	ldr	x9, [x19, #320]
  45038c:	mov	x8, xzr
  450390:	str	xzr, [x19, #256]
  450394:	add	x9, x9, #0x1
  450398:	str	x9, [x19, #320]
  45039c:	add	x9, x8, #0x1
  4503a0:	mov	w20, #0x26                  	// #38
  4503a4:	str	x9, [x19, #256]
  4503a8:	strb	w20, [x19, x8]
  4503ac:	ldr	x8, [x19, #256]
  4503b0:	strb	w20, [x19, #264]
  4503b4:	cmp	x8, #0xff
  4503b8:	b.ne	4503e4 <feof@plt+0x4d6e4>  // b.any
  4503bc:	ldp	x8, x2, [x19, #272]
  4503c0:	mov	w1, #0xff                  	// #255
  4503c4:	mov	x0, x19
  4503c8:	strb	wzr, [x19, #255]
  4503cc:	blr	x8
  4503d0:	ldr	x9, [x19, #320]
  4503d4:	mov	x8, xzr
  4503d8:	str	xzr, [x19, #256]
  4503dc:	add	x9, x9, #0x1
  4503e0:	str	x9, [x19, #320]
  4503e4:	add	x9, x8, #0x1
  4503e8:	str	x9, [x19, #256]
  4503ec:	strb	w20, [x19, x8]
  4503f0:	strb	w20, [x19, #264]
  4503f4:	b	450a4c <feof@plt+0x4dd4c>
  4503f8:	ldr	x8, [x19, #256]
  4503fc:	cmp	x8, #0xff
  450400:	b.ne	45042c <feof@plt+0x4d72c>  // b.any
  450404:	ldp	x8, x2, [x19, #272]
  450408:	mov	w1, #0xff                  	// #255
  45040c:	mov	x0, x19
  450410:	strb	wzr, [x19, #255]
  450414:	blr	x8
  450418:	ldr	x9, [x19, #320]
  45041c:	mov	x8, xzr
  450420:	str	xzr, [x19, #256]
  450424:	add	x9, x9, #0x1
  450428:	str	x9, [x19, #320]
  45042c:	add	x9, x8, #0x1
  450430:	mov	w10, #0x20                  	// #32
  450434:	str	x9, [x19, #256]
  450438:	strb	w10, [x19, x8]
  45043c:	strb	w10, [x19, #264]
  450440:	ldr	x21, [x21, #16]
  450444:	cbz	x21, 450460 <feof@plt+0x4d760>
  450448:	ldr	w8, [x21, #4]
  45044c:	cmp	w8, #0x1
  450450:	b.gt	450460 <feof@plt+0x4d760>
  450454:	ldr	w9, [x19, #308]
  450458:	cmp	w9, #0x401
  45045c:	b.lt	450a64 <feof@plt+0x4dd64>  // b.tstop
  450460:	mov	w8, #0x1                   	// #1
  450464:	str	w8, [x19, #304]
  450468:	b	450a4c <feof@plt+0x4dd4c>
  45046c:	tbnz	w20, #2, 450a4c <feof@plt+0x4dd4c>
  450470:	ldr	x8, [x19, #256]
  450474:	cmp	x8, #0xff
  450478:	b.eq	450664 <feof@plt+0x4d964>  // b.none
  45047c:	b	45068c <feof@plt+0x4d98c>
  450480:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x10dd8>
  450484:	mov	x20, xzr
  450488:	add	x21, x21, #0xfdb
  45048c:	b	4504ac <feof@plt+0x4d7ac>
  450490:	add	x20, x20, #0x1
  450494:	add	x9, x8, #0x1
  450498:	cmp	x20, #0x8
  45049c:	str	x9, [x19, #256]
  4504a0:	strb	w22, [x19, x8]
  4504a4:	strb	w22, [x19, #264]
  4504a8:	b.eq	450a4c <feof@plt+0x4dd4c>  // b.none
  4504ac:	ldr	x8, [x19, #256]
  4504b0:	ldrb	w22, [x21, x20]
  4504b4:	cmp	x8, #0xff
  4504b8:	b.ne	450490 <feof@plt+0x4d790>  // b.any
  4504bc:	ldp	x8, x2, [x19, #272]
  4504c0:	mov	w1, #0xff                  	// #255
  4504c4:	mov	x0, x19
  4504c8:	strb	wzr, [x19, #255]
  4504cc:	blr	x8
  4504d0:	ldr	x9, [x19, #320]
  4504d4:	mov	x8, xzr
  4504d8:	str	xzr, [x19, #256]
  4504dc:	add	x9, x9, #0x1
  4504e0:	str	x9, [x19, #320]
  4504e4:	b	450490 <feof@plt+0x4d790>
  4504e8:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x10dd8>
  4504ec:	mov	x20, xzr
  4504f0:	add	x21, x21, #0xfe4
  4504f4:	b	450514 <feof@plt+0x4d814>
  4504f8:	add	x20, x20, #0x1
  4504fc:	add	x9, x8, #0x1
  450500:	cmp	x20, #0xa
  450504:	str	x9, [x19, #256]
  450508:	strb	w22, [x19, x8]
  45050c:	strb	w22, [x19, #264]
  450510:	b.eq	450a4c <feof@plt+0x4dd4c>  // b.none
  450514:	ldr	x8, [x19, #256]
  450518:	ldrb	w22, [x21, x20]
  45051c:	cmp	x8, #0xff
  450520:	b.ne	4504f8 <feof@plt+0x4d7f8>  // b.any
  450524:	ldp	x8, x2, [x19, #272]
  450528:	mov	w1, #0xff                  	// #255
  45052c:	mov	x0, x19
  450530:	strb	wzr, [x19, #255]
  450534:	blr	x8
  450538:	ldr	x9, [x19, #320]
  45053c:	mov	x8, xzr
  450540:	str	xzr, [x19, #256]
  450544:	add	x9, x9, #0x1
  450548:	str	x9, [x19, #320]
  45054c:	b	4504f8 <feof@plt+0x4d7f8>
  450550:	ldrb	w8, [x19, #264]
  450554:	cmp	w8, #0x28
  450558:	b.eq	4505a4 <feof@plt+0x4d8a4>  // b.none
  45055c:	ldr	x8, [x19, #256]
  450560:	cmp	x8, #0xff
  450564:	b.ne	450590 <feof@plt+0x4d890>  // b.any
  450568:	ldp	x8, x2, [x19, #272]
  45056c:	mov	w1, #0xff                  	// #255
  450570:	mov	x0, x19
  450574:	strb	wzr, [x19, #255]
  450578:	blr	x8
  45057c:	ldr	x9, [x19, #320]
  450580:	mov	x8, xzr
  450584:	str	xzr, [x19, #256]
  450588:	add	x9, x9, #0x1
  45058c:	str	x9, [x19, #320]
  450590:	add	x9, x8, #0x1
  450594:	mov	w10, #0x20                  	// #32
  450598:	str	x9, [x19, #256]
  45059c:	strb	w10, [x19, x8]
  4505a0:	strb	w10, [x19, #264]
  4505a4:	ldr	x21, [x21, #8]
  4505a8:	cbz	x21, 4505c4 <feof@plt+0x4d8c4>
  4505ac:	ldr	w8, [x21, #4]
  4505b0:	cmp	w8, #0x1
  4505b4:	b.gt	4505c4 <feof@plt+0x4d8c4>
  4505b8:	ldr	w9, [x19, #308]
  4505bc:	cmp	w9, #0x401
  4505c0:	b.lt	450b14 <feof@plt+0x4de14>  // b.tstop
  4505c4:	mov	w8, #0x1                   	// #1
  4505c8:	str	w8, [x19, #304]
  4505cc:	ldr	x8, [x19, #256]
  4505d0:	cmp	x8, #0xff
  4505d4:	b.ne	450600 <feof@plt+0x4d900>  // b.any
  4505d8:	ldp	x8, x2, [x19, #272]
  4505dc:	mov	w1, #0xff                  	// #255
  4505e0:	mov	x0, x19
  4505e4:	strb	wzr, [x19, #255]
  4505e8:	blr	x8
  4505ec:	ldr	x9, [x19, #320]
  4505f0:	mov	x8, xzr
  4505f4:	str	xzr, [x19, #256]
  4505f8:	add	x9, x9, #0x1
  4505fc:	str	x9, [x19, #320]
  450600:	add	x9, x8, #0x1
  450604:	mov	w20, #0x3a                  	// #58
  450608:	str	x9, [x19, #256]
  45060c:	strb	w20, [x19, x8]
  450610:	ldr	x8, [x19, #256]
  450614:	strb	w20, [x19, #264]
  450618:	cmp	x8, #0xff
  45061c:	b.ne	450648 <feof@plt+0x4d948>  // b.any
  450620:	ldp	x8, x2, [x19, #272]
  450624:	mov	w1, #0xff                  	// #255
  450628:	mov	x0, x19
  45062c:	strb	wzr, [x19, #255]
  450630:	blr	x8
  450634:	ldr	x9, [x19, #320]
  450638:	mov	x8, xzr
  45063c:	str	xzr, [x19, #256]
  450640:	add	x9, x9, #0x1
  450644:	str	x9, [x19, #320]
  450648:	add	x9, x8, #0x1
  45064c:	str	x9, [x19, #256]
  450650:	strb	w20, [x19, x8]
  450654:	ldr	x8, [x19, #256]
  450658:	strb	w20, [x19, #264]
  45065c:	cmp	x8, #0xff
  450660:	b.ne	45068c <feof@plt+0x4d98c>  // b.any
  450664:	ldp	x8, x2, [x19, #272]
  450668:	mov	w1, #0xff                  	// #255
  45066c:	mov	x0, x19
  450670:	strb	wzr, [x19, #255]
  450674:	blr	x8
  450678:	ldr	x9, [x19, #320]
  45067c:	mov	x8, xzr
  450680:	str	xzr, [x19, #256]
  450684:	add	x9, x9, #0x1
  450688:	str	x9, [x19, #320]
  45068c:	add	x9, x8, #0x1
  450690:	mov	w10, #0x2a                  	// #42
  450694:	b	450a40 <feof@plt+0x4dd40>
  450698:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  45069c:	mov	x22, xzr
  4506a0:	add	x23, x23, #0xfef
  4506a4:	b	4506c4 <feof@plt+0x4d9c4>
  4506a8:	add	x22, x22, #0x1
  4506ac:	add	x9, x8, #0x1
  4506b0:	cmp	x22, #0xa
  4506b4:	str	x9, [x19, #256]
  4506b8:	strb	w24, [x19, x8]
  4506bc:	strb	w24, [x19, #264]
  4506c0:	b.eq	4509dc <feof@plt+0x4dcdc>  // b.none
  4506c4:	ldr	x8, [x19, #256]
  4506c8:	ldrb	w24, [x23, x22]
  4506cc:	cmp	x8, #0xff
  4506d0:	b.ne	4506a8 <feof@plt+0x4d9a8>  // b.any
  4506d4:	ldp	x8, x2, [x19, #272]
  4506d8:	mov	w1, #0xff                  	// #255
  4506dc:	mov	x0, x19
  4506e0:	strb	wzr, [x19, #255]
  4506e4:	blr	x8
  4506e8:	ldr	x9, [x19, #320]
  4506ec:	mov	x8, xzr
  4506f0:	str	xzr, [x19, #256]
  4506f4:	add	x9, x9, #0x1
  4506f8:	str	x9, [x19, #320]
  4506fc:	b	4506a8 <feof@plt+0x4d9a8>
  450700:	adrp	x21, 466000 <_obstack_memory_used@@Base+0x10dd8>
  450704:	mov	x20, xzr
  450708:	add	x21, x21, #0xfbf
  45070c:	b	45072c <feof@plt+0x4da2c>
  450710:	add	x20, x20, #0x1
  450714:	add	x9, x8, #0x1
  450718:	cmp	x20, #0x11
  45071c:	str	x9, [x19, #256]
  450720:	strb	w22, [x19, x8]
  450724:	strb	w22, [x19, #264]
  450728:	b.eq	450a4c <feof@plt+0x4dd4c>  // b.none
  45072c:	ldr	x8, [x19, #256]
  450730:	ldrb	w22, [x21, x20]
  450734:	cmp	x8, #0xff
  450738:	b.ne	450710 <feof@plt+0x4da10>  // b.any
  45073c:	ldp	x8, x2, [x19, #272]
  450740:	mov	w1, #0xff                  	// #255
  450744:	mov	x0, x19
  450748:	strb	wzr, [x19, #255]
  45074c:	blr	x8
  450750:	ldr	x9, [x19, #320]
  450754:	mov	x8, xzr
  450758:	str	xzr, [x19, #256]
  45075c:	add	x9, x9, #0x1
  450760:	str	x9, [x19, #320]
  450764:	b	450710 <feof@plt+0x4da10>
  450768:	adrp	x23, 466000 <_obstack_memory_used@@Base+0x10dd8>
  45076c:	mov	x22, xzr
  450770:	add	x23, x23, #0xfd1
  450774:	b	450794 <feof@plt+0x4da94>
  450778:	add	x22, x22, #0x1
  45077c:	add	x9, x8, #0x1
  450780:	cmp	x22, #0x9
  450784:	str	x9, [x19, #256]
  450788:	strb	w24, [x19, x8]
  45078c:	strb	w24, [x19, #264]
  450790:	b.eq	450980 <feof@plt+0x4dc80>  // b.none
  450794:	ldr	x8, [x19, #256]
  450798:	ldrb	w24, [x23, x22]
  45079c:	cmp	x8, #0xff
  4507a0:	b.ne	450778 <feof@plt+0x4da78>  // b.any
  4507a4:	ldp	x8, x2, [x19, #272]
  4507a8:	mov	w1, #0xff                  	// #255
  4507ac:	mov	x0, x19
  4507b0:	strb	wzr, [x19, #255]
  4507b4:	blr	x8
  4507b8:	ldr	x9, [x19, #320]
  4507bc:	mov	x8, xzr
  4507c0:	str	xzr, [x19, #256]
  4507c4:	add	x9, x9, #0x1
  4507c8:	str	x9, [x19, #320]
  4507cc:	b	450778 <feof@plt+0x4da78>
  4507d0:	ldr	x8, [x19, #256]
  4507d4:	cmp	x8, #0xff
  4507d8:	b.ne	450804 <feof@plt+0x4db04>  // b.any
  4507dc:	ldp	x8, x2, [x19, #272]
  4507e0:	mov	w1, #0xff                  	// #255
  4507e4:	mov	x0, x19
  4507e8:	strb	wzr, [x19, #255]
  4507ec:	blr	x8
  4507f0:	ldr	x9, [x19, #320]
  4507f4:	mov	x8, xzr
  4507f8:	str	xzr, [x19, #256]
  4507fc:	add	x9, x9, #0x1
  450800:	str	x9, [x19, #320]
  450804:	add	x9, x8, #0x1
  450808:	mov	w10, #0x20                  	// #32
  45080c:	str	x9, [x19, #256]
  450810:	strb	w10, [x19, x8]
  450814:	ldr	x8, [x19, #256]
  450818:	strb	w10, [x19, #264]
  45081c:	cmp	x8, #0xff
  450820:	b.ne	45084c <feof@plt+0x4db4c>  // b.any
  450824:	ldp	x8, x2, [x19, #272]
  450828:	mov	w1, #0xff                  	// #255
  45082c:	mov	x0, x19
  450830:	strb	wzr, [x19, #255]
  450834:	blr	x8
  450838:	ldr	x9, [x19, #320]
  45083c:	mov	x8, xzr
  450840:	str	xzr, [x19, #256]
  450844:	add	x9, x9, #0x1
  450848:	str	x9, [x19, #320]
  45084c:	add	x9, x8, #0x1
  450850:	mov	w10, #0x74                  	// #116
  450854:	str	x9, [x19, #256]
  450858:	strb	w10, [x19, x8]
  45085c:	ldr	x8, [x19, #256]
  450860:	strb	w10, [x19, #264]
  450864:	cmp	x8, #0xff
  450868:	b.ne	450894 <feof@plt+0x4db94>  // b.any
  45086c:	ldp	x8, x2, [x19, #272]
  450870:	mov	w1, #0xff                  	// #255
  450874:	mov	x0, x19
  450878:	strb	wzr, [x19, #255]
  45087c:	blr	x8
  450880:	ldr	x9, [x19, #320]
  450884:	mov	x8, xzr
  450888:	str	xzr, [x19, #256]
  45088c:	add	x9, x9, #0x1
  450890:	str	x9, [x19, #320]
  450894:	add	x9, x8, #0x1
  450898:	mov	w10, #0x68                  	// #104
  45089c:	str	x9, [x19, #256]
  4508a0:	strb	w10, [x19, x8]
  4508a4:	ldr	x8, [x19, #256]
  4508a8:	strb	w10, [x19, #264]
  4508ac:	cmp	x8, #0xff
  4508b0:	b.ne	4508dc <feof@plt+0x4dbdc>  // b.any
  4508b4:	ldp	x8, x2, [x19, #272]
  4508b8:	mov	w1, #0xff                  	// #255
  4508bc:	mov	x0, x19
  4508c0:	strb	wzr, [x19, #255]
  4508c4:	blr	x8
  4508c8:	ldr	x9, [x19, #320]
  4508cc:	mov	x8, xzr
  4508d0:	str	xzr, [x19, #256]
  4508d4:	add	x9, x9, #0x1
  4508d8:	str	x9, [x19, #320]
  4508dc:	add	x9, x8, #0x1
  4508e0:	mov	w10, #0x72                  	// #114
  4508e4:	str	x9, [x19, #256]
  4508e8:	strb	w10, [x19, x8]
  4508ec:	ldr	x8, [x19, #256]
  4508f0:	strb	w10, [x19, #264]
  4508f4:	cmp	x8, #0xff
  4508f8:	b.ne	450924 <feof@plt+0x4dc24>  // b.any
  4508fc:	ldp	x8, x2, [x19, #272]
  450900:	mov	w1, #0xff                  	// #255
  450904:	mov	x0, x19
  450908:	strb	wzr, [x19, #255]
  45090c:	blr	x8
  450910:	ldr	x9, [x19, #320]
  450914:	mov	x8, xzr
  450918:	str	xzr, [x19, #256]
  45091c:	add	x9, x9, #0x1
  450920:	str	x9, [x19, #320]
  450924:	add	x9, x8, #0x1
  450928:	mov	w10, #0x6f                  	// #111
  45092c:	str	x9, [x19, #256]
  450930:	strb	w10, [x19, x8]
  450934:	ldr	x8, [x19, #256]
  450938:	strb	w10, [x19, #264]
  45093c:	cmp	x8, #0xff
  450940:	b.ne	45096c <feof@plt+0x4dc6c>  // b.any
  450944:	ldp	x8, x2, [x19, #272]
  450948:	mov	w1, #0xff                  	// #255
  45094c:	mov	x0, x19
  450950:	strb	wzr, [x19, #255]
  450954:	blr	x8
  450958:	ldr	x9, [x19, #320]
  45095c:	mov	x8, xzr
  450960:	str	xzr, [x19, #256]
  450964:	add	x9, x9, #0x1
  450968:	str	x9, [x19, #320]
  45096c:	add	x9, x8, #0x1
  450970:	mov	w10, #0x77                  	// #119
  450974:	str	x9, [x19, #256]
  450978:	strb	w10, [x19, x8]
  45097c:	strb	w10, [x19, #264]
  450980:	ldr	x8, [x21, #16]
  450984:	cbz	x8, 450a4c <feof@plt+0x4dd4c>
  450988:	ldr	x8, [x19, #256]
  45098c:	cmp	x8, #0xff
  450990:	b.ne	4509bc <feof@plt+0x4dcbc>  // b.any
  450994:	ldp	x8, x2, [x19, #272]
  450998:	mov	w1, #0xff                  	// #255
  45099c:	mov	x0, x19
  4509a0:	strb	wzr, [x19, #255]
  4509a4:	blr	x8
  4509a8:	ldr	x9, [x19, #320]
  4509ac:	mov	x8, xzr
  4509b0:	str	xzr, [x19, #256]
  4509b4:	add	x9, x9, #0x1
  4509b8:	str	x9, [x19, #320]
  4509bc:	add	x9, x8, #0x1
  4509c0:	mov	w10, #0x28                  	// #40
  4509c4:	str	x9, [x19, #256]
  4509c8:	strb	w10, [x19, x8]
  4509cc:	strb	w10, [x19, #264]
  4509d0:	ldr	x21, [x21, #16]
  4509d4:	cbnz	x21, 4509e4 <feof@plt+0x4dce4>
  4509d8:	b	4509fc <feof@plt+0x4dcfc>
  4509dc:	ldr	x21, [x21, #8]
  4509e0:	cbz	x21, 4509fc <feof@plt+0x4dcfc>
  4509e4:	ldr	w8, [x21, #4]
  4509e8:	cmp	w8, #0x1
  4509ec:	b.gt	4509fc <feof@plt+0x4dcfc>
  4509f0:	ldr	w9, [x19, #308]
  4509f4:	cmp	w9, #0x401
  4509f8:	b.lt	450abc <feof@plt+0x4ddbc>  // b.tstop
  4509fc:	mov	w8, #0x1                   	// #1
  450a00:	str	w8, [x19, #304]
  450a04:	ldr	x8, [x19, #256]
  450a08:	cmp	x8, #0xff
  450a0c:	b.ne	450a38 <feof@plt+0x4dd38>  // b.any
  450a10:	ldp	x8, x2, [x19, #272]
  450a14:	mov	w1, #0xff                  	// #255
  450a18:	mov	x0, x19
  450a1c:	strb	wzr, [x19, #255]
  450a20:	blr	x8
  450a24:	ldr	x9, [x19, #320]
  450a28:	mov	x8, xzr
  450a2c:	str	xzr, [x19, #256]
  450a30:	add	x9, x9, #0x1
  450a34:	str	x9, [x19, #320]
  450a38:	add	x9, x8, #0x1
  450a3c:	mov	w10, #0x29                  	// #41
  450a40:	str	x9, [x19, #256]
  450a44:	strb	w10, [x19, x8]
  450a48:	strb	w10, [x19, #264]
  450a4c:	ldp	x20, x19, [sp, #64]
  450a50:	ldp	x22, x21, [sp, #48]
  450a54:	ldp	x24, x23, [sp, #32]
  450a58:	ldp	x29, x30, [sp, #16]
  450a5c:	add	sp, sp, #0x50
  450a60:	ret
  450a64:	add	w8, w8, #0x1
  450a68:	add	w9, w9, #0x1
  450a6c:	str	w8, [x21, #4]
  450a70:	str	w9, [x19, #308]
  450a74:	str	x21, [sp]
  450a78:	ldr	x8, [x19, #328]
  450a7c:	mov	x9, sp
  450a80:	mov	x0, x19
  450a84:	mov	w1, w20
  450a88:	mov	x2, x21
  450a8c:	str	x8, [sp, #8]
  450a90:	str	x9, [x19, #328]
  450a94:	bl	449d30 <feof@plt+0x47030>
  450a98:	ldr	x8, [sp, #8]
  450a9c:	str	x8, [x19, #328]
  450aa0:	ldr	w8, [x21, #4]
  450aa4:	sub	w8, w8, #0x1
  450aa8:	str	w8, [x21, #4]
  450aac:	ldr	w8, [x19, #308]
  450ab0:	sub	w8, w8, #0x1
  450ab4:	str	w8, [x19, #308]
  450ab8:	b	450a4c <feof@plt+0x4dd4c>
  450abc:	add	w8, w8, #0x1
  450ac0:	add	w9, w9, #0x1
  450ac4:	str	w8, [x21, #4]
  450ac8:	str	w9, [x19, #308]
  450acc:	str	x21, [sp]
  450ad0:	ldr	x8, [x19, #328]
  450ad4:	mov	x9, sp
  450ad8:	mov	x0, x19
  450adc:	mov	w1, w20
  450ae0:	mov	x2, x21
  450ae4:	str	x8, [sp, #8]
  450ae8:	str	x9, [x19, #328]
  450aec:	bl	449d30 <feof@plt+0x47030>
  450af0:	ldr	x8, [sp, #8]
  450af4:	str	x8, [x19, #328]
  450af8:	ldr	w8, [x21, #4]
  450afc:	sub	w8, w8, #0x1
  450b00:	str	w8, [x21, #4]
  450b04:	ldr	w8, [x19, #308]
  450b08:	sub	w8, w8, #0x1
  450b0c:	str	w8, [x19, #308]
  450b10:	b	450a04 <feof@plt+0x4dd04>
  450b14:	add	w8, w8, #0x1
  450b18:	str	w8, [x21, #4]
  450b1c:	ldr	x8, [x19, #328]
  450b20:	add	w9, w9, #0x1
  450b24:	str	w9, [x19, #308]
  450b28:	mov	x9, sp
  450b2c:	mov	x0, x19
  450b30:	mov	w1, w20
  450b34:	mov	x2, x21
  450b38:	stp	x21, x8, [sp]
  450b3c:	str	x9, [x19, #328]
  450b40:	bl	449d30 <feof@plt+0x47030>
  450b44:	ldr	x8, [sp, #8]
  450b48:	str	x8, [x19, #328]
  450b4c:	ldr	w8, [x21, #4]
  450b50:	sub	w8, w8, #0x1
  450b54:	str	w8, [x21, #4]
  450b58:	ldr	w8, [x19, #308]
  450b5c:	sub	w8, w8, #0x1
  450b60:	str	w8, [x19, #308]
  450b64:	b	4505cc <feof@plt+0x4d8cc>
  450b68:	sub	sp, sp, #0x50
  450b6c:	stp	x22, x21, [sp, #48]
  450b70:	stp	x20, x19, [sp, #64]
  450b74:	mov	x19, x3
  450b78:	mov	x22, x2
  450b7c:	mov	w21, w1
  450b80:	mov	x20, x0
  450b84:	stp	x29, x30, [sp, #16]
  450b88:	stp	x24, x23, [sp, #32]
  450b8c:	add	x29, sp, #0x10
  450b90:	cbz	x3, 450bf4 <feof@plt+0x4def4>
  450b94:	mov	x9, #0xe000000             	// #234881024
  450b98:	mov	w8, #0x1                   	// #1
  450b9c:	movk	x9, #0x862, lsl #32
  450ba0:	mov	x10, x19
  450ba4:	b	450bb0 <feof@plt+0x4deb0>
  450ba8:	ldr	x10, [x10]
  450bac:	cbz	x10, 450bf4 <feof@plt+0x4def4>
  450bb0:	ldr	w11, [x10, #16]
  450bb4:	cbnz	w11, 450bf4 <feof@plt+0x4def4>
  450bb8:	ldr	x11, [x10, #8]
  450bbc:	ldr	w11, [x11]
  450bc0:	cmp	w11, #0x2b
  450bc4:	b.hi	450ba8 <feof@plt+0x4dea8>  // b.pmore
  450bc8:	lsl	x12, x8, x11
  450bcc:	tst	x12, x9
  450bd0:	b.ne	450bfc <feof@plt+0x4defc>  // b.any
  450bd4:	lsl	x11, x8, x11
  450bd8:	tst	x11, #0x1c00000000
  450bdc:	b.eq	450ba8 <feof@plt+0x4dea8>  // b.none
  450be0:	ldrb	w8, [x20, #264]
  450be4:	orr	w9, w8, #0x2
  450be8:	cmp	w9, #0x2a
  450bec:	b.eq	450c50 <feof@plt+0x4df50>  // b.none
  450bf0:	b	450c00 <feof@plt+0x4df00>
  450bf4:	mov	w24, wzr
  450bf8:	b	450c9c <feof@plt+0x4df9c>
  450bfc:	ldrb	w8, [x20, #264]
  450c00:	cmp	w8, #0x20
  450c04:	b.eq	450c50 <feof@plt+0x4df50>  // b.none
  450c08:	ldr	x8, [x20, #256]
  450c0c:	cmp	x8, #0xff
  450c10:	b.ne	450c3c <feof@plt+0x4df3c>  // b.any
  450c14:	ldp	x8, x2, [x20, #272]
  450c18:	mov	w1, #0xff                  	// #255
  450c1c:	mov	x0, x20
  450c20:	strb	wzr, [x20, #255]
  450c24:	blr	x8
  450c28:	ldr	x9, [x20, #320]
  450c2c:	mov	x8, xzr
  450c30:	str	xzr, [x20, #256]
  450c34:	add	x9, x9, #0x1
  450c38:	str	x9, [x20, #320]
  450c3c:	add	x9, x8, #0x1
  450c40:	mov	w10, #0x20                  	// #32
  450c44:	str	x9, [x20, #256]
  450c48:	strb	w10, [x20, x8]
  450c4c:	strb	w10, [x20, #264]
  450c50:	ldr	x8, [x20, #256]
  450c54:	cmp	x8, #0xff
  450c58:	b.ne	450c84 <feof@plt+0x4df84>  // b.any
  450c5c:	ldp	x8, x2, [x20, #272]
  450c60:	mov	w1, #0xff                  	// #255
  450c64:	mov	x0, x20
  450c68:	strb	wzr, [x20, #255]
  450c6c:	blr	x8
  450c70:	ldr	x9, [x20, #320]
  450c74:	mov	x8, xzr
  450c78:	str	xzr, [x20, #256]
  450c7c:	add	x9, x9, #0x1
  450c80:	str	x9, [x20, #320]
  450c84:	add	x9, x8, #0x1
  450c88:	mov	w10, #0x28                  	// #40
  450c8c:	mov	w24, #0x1                   	// #1
  450c90:	str	x9, [x20, #256]
  450c94:	strb	w10, [x20, x8]
  450c98:	strb	w10, [x20, #264]
  450c9c:	ldr	x23, [x20, #296]
  450ca0:	mov	x0, x20
  450ca4:	mov	w1, w21
  450ca8:	mov	x2, x19
  450cac:	mov	w3, wzr
  450cb0:	str	xzr, [x20, #296]
  450cb4:	bl	452010 <feof@plt+0x4f310>
  450cb8:	cbz	w24, 450d04 <feof@plt+0x4e004>
  450cbc:	ldr	x8, [x20, #256]
  450cc0:	cmp	x8, #0xff
  450cc4:	b.ne	450cf0 <feof@plt+0x4dff0>  // b.any
  450cc8:	ldp	x8, x2, [x20, #272]
  450ccc:	mov	w1, #0xff                  	// #255
  450cd0:	mov	x0, x20
  450cd4:	strb	wzr, [x20, #255]
  450cd8:	blr	x8
  450cdc:	ldr	x9, [x20, #320]
  450ce0:	mov	x8, xzr
  450ce4:	str	xzr, [x20, #256]
  450ce8:	add	x9, x9, #0x1
  450cec:	str	x9, [x20, #320]
  450cf0:	add	x9, x8, #0x1
  450cf4:	mov	w10, #0x29                  	// #41
  450cf8:	str	x9, [x20, #256]
  450cfc:	strb	w10, [x20, x8]
  450d00:	strb	w10, [x20, #264]
  450d04:	ldr	x8, [x20, #256]
  450d08:	cmp	x8, #0xff
  450d0c:	b.ne	450d38 <feof@plt+0x4e038>  // b.any
  450d10:	ldp	x8, x2, [x20, #272]
  450d14:	mov	w1, #0xff                  	// #255
  450d18:	mov	x0, x20
  450d1c:	strb	wzr, [x20, #255]
  450d20:	blr	x8
  450d24:	ldr	x9, [x20, #320]
  450d28:	mov	x8, xzr
  450d2c:	str	xzr, [x20, #256]
  450d30:	add	x9, x9, #0x1
  450d34:	str	x9, [x20, #320]
  450d38:	add	x9, x8, #0x1
  450d3c:	mov	w10, #0x28                  	// #40
  450d40:	str	x9, [x20, #256]
  450d44:	strb	w10, [x20, x8]
  450d48:	strb	w10, [x20, #264]
  450d4c:	ldr	x22, [x22, #16]
  450d50:	cbz	x22, 450dc8 <feof@plt+0x4e0c8>
  450d54:	ldr	w8, [x22, #4]
  450d58:	cmp	w8, #0x1
  450d5c:	b.gt	450d6c <feof@plt+0x4e06c>
  450d60:	ldr	w9, [x20, #308]
  450d64:	cmp	w9, #0x401
  450d68:	b.lt	450d78 <feof@plt+0x4e078>  // b.tstop
  450d6c:	mov	w8, #0x1                   	// #1
  450d70:	str	w8, [x20, #304]
  450d74:	b	450dc8 <feof@plt+0x4e0c8>
  450d78:	add	w8, w8, #0x1
  450d7c:	str	w8, [x22, #4]
  450d80:	ldr	x8, [x20, #328]
  450d84:	add	w9, w9, #0x1
  450d88:	str	w9, [x20, #308]
  450d8c:	mov	x9, sp
  450d90:	mov	x0, x20
  450d94:	mov	w1, w21
  450d98:	mov	x2, x22
  450d9c:	stp	x22, x8, [sp]
  450da0:	str	x9, [x20, #328]
  450da4:	bl	449d30 <feof@plt+0x47030>
  450da8:	ldr	x8, [sp, #8]
  450dac:	str	x8, [x20, #328]
  450db0:	ldr	w8, [x22, #4]
  450db4:	sub	w8, w8, #0x1
  450db8:	str	w8, [x22, #4]
  450dbc:	ldr	w8, [x20, #308]
  450dc0:	sub	w8, w8, #0x1
  450dc4:	str	w8, [x20, #308]
  450dc8:	ldr	x8, [x20, #256]
  450dcc:	cmp	x8, #0xff
  450dd0:	b.ne	450dfc <feof@plt+0x4e0fc>  // b.any
  450dd4:	ldp	x8, x2, [x20, #272]
  450dd8:	mov	w1, #0xff                  	// #255
  450ddc:	mov	x0, x20
  450de0:	strb	wzr, [x20, #255]
  450de4:	blr	x8
  450de8:	ldr	x9, [x20, #320]
  450dec:	mov	x8, xzr
  450df0:	str	xzr, [x20, #256]
  450df4:	add	x9, x9, #0x1
  450df8:	str	x9, [x20, #320]
  450dfc:	add	x9, x8, #0x1
  450e00:	mov	w10, #0x29                  	// #41
  450e04:	mov	w3, #0x1                   	// #1
  450e08:	mov	x0, x20
  450e0c:	mov	w1, w21
  450e10:	mov	x2, x19
  450e14:	str	x9, [x20, #256]
  450e18:	strb	w10, [x20, x8]
  450e1c:	strb	w10, [x20, #264]
  450e20:	bl	452010 <feof@plt+0x4f310>
  450e24:	str	x23, [x20, #296]
  450e28:	ldp	x20, x19, [sp, #64]
  450e2c:	ldp	x22, x21, [sp, #48]
  450e30:	ldp	x24, x23, [sp, #32]
  450e34:	ldp	x29, x30, [sp, #16]
  450e38:	add	sp, sp, #0x50
  450e3c:	ret
  450e40:	sub	sp, sp, #0x50
  450e44:	stp	x22, x21, [sp, #48]
  450e48:	stp	x20, x19, [sp, #64]
  450e4c:	mov	x21, x2
  450e50:	mov	w20, w1
  450e54:	mov	x19, x0
  450e58:	stp	x29, x30, [sp, #16]
  450e5c:	str	x23, [sp, #32]
  450e60:	add	x29, sp, #0x10
  450e64:	cbz	x3, 450fa8 <feof@plt+0x4e2a8>
  450e68:	mov	x22, x3
  450e6c:	mov	x8, x3
  450e70:	ldr	w9, [x8, #16]
  450e74:	cbz	w9, 450e88 <feof@plt+0x4e188>
  450e78:	ldr	x8, [x8]
  450e7c:	cbnz	x8, 450e70 <feof@plt+0x4e170>
  450e80:	mov	w23, #0x1                   	// #1
  450e84:	b	450e9c <feof@plt+0x4e19c>
  450e88:	ldr	x8, [x8, #8]
  450e8c:	ldr	w8, [x8]
  450e90:	cmp	w8, #0x2a
  450e94:	cset	w23, ne  // ne = any
  450e98:	b.ne	450eb8 <feof@plt+0x4e1b8>  // b.any
  450e9c:	mov	x0, x19
  450ea0:	mov	w1, w20
  450ea4:	mov	x2, x22
  450ea8:	mov	w3, wzr
  450eac:	bl	452010 <feof@plt+0x4f310>
  450eb0:	cbnz	w23, 450fa8 <feof@plt+0x4e2a8>
  450eb4:	b	450ff0 <feof@plt+0x4e2f0>
  450eb8:	ldr	x8, [x19, #256]
  450ebc:	cmp	x8, #0xff
  450ec0:	b.ne	450eec <feof@plt+0x4e1ec>  // b.any
  450ec4:	ldp	x8, x2, [x19, #272]
  450ec8:	mov	w1, #0xff                  	// #255
  450ecc:	mov	x0, x19
  450ed0:	strb	wzr, [x19, #255]
  450ed4:	blr	x8
  450ed8:	ldr	x9, [x19, #320]
  450edc:	mov	x8, xzr
  450ee0:	str	xzr, [x19, #256]
  450ee4:	add	x9, x9, #0x1
  450ee8:	str	x9, [x19, #320]
  450eec:	add	x9, x8, #0x1
  450ef0:	mov	w10, #0x20                  	// #32
  450ef4:	str	x9, [x19, #256]
  450ef8:	strb	w10, [x19, x8]
  450efc:	ldr	x8, [x19, #256]
  450f00:	strb	w10, [x19, #264]
  450f04:	cmp	x8, #0xff
  450f08:	b.ne	450f34 <feof@plt+0x4e234>  // b.any
  450f0c:	ldp	x8, x2, [x19, #272]
  450f10:	mov	w1, #0xff                  	// #255
  450f14:	mov	x0, x19
  450f18:	strb	wzr, [x19, #255]
  450f1c:	blr	x8
  450f20:	ldr	x9, [x19, #320]
  450f24:	mov	x8, xzr
  450f28:	str	xzr, [x19, #256]
  450f2c:	add	x9, x9, #0x1
  450f30:	str	x9, [x19, #320]
  450f34:	add	x9, x8, #0x1
  450f38:	mov	w10, #0x28                  	// #40
  450f3c:	mov	x0, x19
  450f40:	mov	w1, w20
  450f44:	mov	x2, x22
  450f48:	mov	w3, wzr
  450f4c:	str	x9, [x19, #256]
  450f50:	strb	w10, [x19, x8]
  450f54:	strb	w10, [x19, #264]
  450f58:	bl	452010 <feof@plt+0x4f310>
  450f5c:	ldr	x8, [x19, #256]
  450f60:	cmp	x8, #0xff
  450f64:	b.ne	450f90 <feof@plt+0x4e290>  // b.any
  450f68:	ldp	x8, x2, [x19, #272]
  450f6c:	mov	w1, #0xff                  	// #255
  450f70:	mov	x0, x19
  450f74:	strb	wzr, [x19, #255]
  450f78:	blr	x8
  450f7c:	ldr	x9, [x19, #320]
  450f80:	mov	x8, xzr
  450f84:	str	xzr, [x19, #256]
  450f88:	add	x9, x9, #0x1
  450f8c:	str	x9, [x19, #320]
  450f90:	add	x9, x8, #0x1
  450f94:	mov	w10, #0x29                  	// #41
  450f98:	str	x9, [x19, #256]
  450f9c:	strb	w10, [x19, x8]
  450fa0:	strb	w10, [x19, #264]
  450fa4:	cbz	w23, 450ff0 <feof@plt+0x4e2f0>
  450fa8:	ldr	x8, [x19, #256]
  450fac:	cmp	x8, #0xff
  450fb0:	b.ne	450fdc <feof@plt+0x4e2dc>  // b.any
  450fb4:	ldp	x8, x2, [x19, #272]
  450fb8:	mov	w1, #0xff                  	// #255
  450fbc:	mov	x0, x19
  450fc0:	strb	wzr, [x19, #255]
  450fc4:	blr	x8
  450fc8:	ldr	x9, [x19, #320]
  450fcc:	mov	x8, xzr
  450fd0:	str	xzr, [x19, #256]
  450fd4:	add	x9, x9, #0x1
  450fd8:	str	x9, [x19, #320]
  450fdc:	add	x9, x8, #0x1
  450fe0:	mov	w10, #0x20                  	// #32
  450fe4:	str	x9, [x19, #256]
  450fe8:	strb	w10, [x19, x8]
  450fec:	strb	w10, [x19, #264]
  450ff0:	ldr	x8, [x19, #256]
  450ff4:	cmp	x8, #0xff
  450ff8:	b.ne	451024 <feof@plt+0x4e324>  // b.any
  450ffc:	ldp	x8, x2, [x19, #272]
  451000:	mov	w1, #0xff                  	// #255
  451004:	mov	x0, x19
  451008:	strb	wzr, [x19, #255]
  45100c:	blr	x8
  451010:	ldr	x9, [x19, #320]
  451014:	mov	x8, xzr
  451018:	str	xzr, [x19, #256]
  45101c:	add	x9, x9, #0x1
  451020:	str	x9, [x19, #320]
  451024:	add	x9, x8, #0x1
  451028:	mov	w10, #0x5b                  	// #91
  45102c:	str	x9, [x19, #256]
  451030:	strb	w10, [x19, x8]
  451034:	strb	w10, [x19, #264]
  451038:	ldr	x21, [x21, #8]
  45103c:	cbz	x21, 4510b4 <feof@plt+0x4e3b4>
  451040:	ldr	w8, [x21, #4]
  451044:	cmp	w8, #0x1
  451048:	b.gt	451058 <feof@plt+0x4e358>
  45104c:	ldr	w9, [x19, #308]
  451050:	cmp	w9, #0x401
  451054:	b.lt	451064 <feof@plt+0x4e364>  // b.tstop
  451058:	mov	w8, #0x1                   	// #1
  45105c:	str	w8, [x19, #304]
  451060:	b	4510b4 <feof@plt+0x4e3b4>
  451064:	add	w8, w8, #0x1
  451068:	str	w8, [x21, #4]
  45106c:	ldr	x8, [x19, #328]
  451070:	add	w9, w9, #0x1
  451074:	str	w9, [x19, #308]
  451078:	mov	x9, sp
  45107c:	mov	x0, x19
  451080:	mov	w1, w20
  451084:	mov	x2, x21
  451088:	stp	x21, x8, [sp]
  45108c:	str	x9, [x19, #328]
  451090:	bl	449d30 <feof@plt+0x47030>
  451094:	ldr	x8, [sp, #8]
  451098:	str	x8, [x19, #328]
  45109c:	ldr	w8, [x21, #4]
  4510a0:	sub	w8, w8, #0x1
  4510a4:	str	w8, [x21, #4]
  4510a8:	ldr	w8, [x19, #308]
  4510ac:	sub	w8, w8, #0x1
  4510b0:	str	w8, [x19, #308]
  4510b4:	ldr	x8, [x19, #256]
  4510b8:	cmp	x8, #0xff
  4510bc:	b.ne	4510e8 <feof@plt+0x4e3e8>  // b.any
  4510c0:	ldp	x8, x2, [x19, #272]
  4510c4:	mov	w1, #0xff                  	// #255
  4510c8:	mov	x0, x19
  4510cc:	strb	wzr, [x19, #255]
  4510d0:	blr	x8
  4510d4:	ldr	x9, [x19, #320]
  4510d8:	mov	x8, xzr
  4510dc:	str	xzr, [x19, #256]
  4510e0:	add	x9, x9, #0x1
  4510e4:	str	x9, [x19, #320]
  4510e8:	add	x9, x8, #0x1
  4510ec:	mov	w10, #0x5d                  	// #93
  4510f0:	str	x9, [x19, #256]
  4510f4:	strb	w10, [x19, x8]
  4510f8:	strb	w10, [x19, #264]
  4510fc:	ldp	x20, x19, [sp, #64]
  451100:	ldp	x22, x21, [sp, #48]
  451104:	ldr	x23, [sp, #32]
  451108:	ldp	x29, x30, [sp, #16]
  45110c:	add	sp, sp, #0x50
  451110:	ret
  451114:	stp	x29, x30, [sp, #-48]!
  451118:	str	x21, [sp, #16]
  45111c:	stp	x20, x19, [sp, #32]
  451120:	mov	x29, sp
  451124:	cbz	x1, 4511d8 <feof@plt+0x4e4d8>
  451128:	adrp	x21, 465000 <_obstack_memory_used@@Base+0xfdd8>
  45112c:	mov	x19, x1
  451130:	mov	x20, x0
  451134:	add	x21, x21, #0xd70
  451138:	b	451154 <feof@plt+0x4e454>
  45113c:	ldr	x1, [x19, #8]
  451140:	mov	x0, x20
  451144:	bl	451114 <feof@plt+0x4e414>
  451148:	cbnz	x0, 4511dc <feof@plt+0x4e4dc>
  45114c:	ldr	x19, [x19, #16]
  451150:	cbz	x19, 4511d8 <feof@plt+0x4e4d8>
  451154:	ldr	w8, [x19]
  451158:	cmp	w8, #0x4c
  45115c:	b.hi	45113c <feof@plt+0x4e43c>  // b.pmore
  451160:	adr	x9, 45113c <feof@plt+0x4e43c>
  451164:	ldrb	w10, [x21, x8]
  451168:	add	x9, x9, x10, lsl #2
  45116c:	mov	x0, xzr
  451170:	br	x9
  451174:	ldr	x8, [x20, #288]
  451178:	cbz	x8, 4511b4 <feof@plt+0x4e4b4>
  45117c:	ldr	x9, [x8, #8]
  451180:	ldr	w8, [x19, #8]
  451184:	ldr	x0, [x9, #16]
  451188:	tbnz	w8, #31, 4511c8 <feof@plt+0x4e4c8>
  45118c:	cbz	x0, 4511d8 <feof@plt+0x4e4d8>
  451190:	ldr	w9, [x0]
  451194:	cmp	w9, #0x2f
  451198:	b.ne	4511d8 <feof@plt+0x4e4d8>  // b.any
  45119c:	subs	w9, w8, #0x1
  4511a0:	b.lt	4511c0 <feof@plt+0x4e4c0>  // b.tstop
  4511a4:	ldr	x0, [x0, #16]
  4511a8:	mov	w8, w9
  4511ac:	cbnz	x0, 451190 <feof@plt+0x4e490>
  4511b0:	b	4511d8 <feof@plt+0x4e4d8>
  4511b4:	mov	w8, #0x1                   	// #1
  4511b8:	str	w8, [x20, #304]
  4511bc:	b	4511d8 <feof@plt+0x4e4d8>
  4511c0:	cbnz	w8, 4511d8 <feof@plt+0x4e4d8>
  4511c4:	ldr	x0, [x0, #8]
  4511c8:	cbz	x0, 4511d8 <feof@plt+0x4e4d8>
  4511cc:	ldr	w8, [x0]
  4511d0:	cmp	w8, #0x2f
  4511d4:	b.eq	4511dc <feof@plt+0x4e4dc>  // b.none
  4511d8:	mov	x0, xzr
  4511dc:	ldp	x20, x19, [sp, #32]
  4511e0:	ldr	x21, [sp, #16]
  4511e4:	ldp	x29, x30, [sp], #48
  4511e8:	ret
  4511ec:	sub	sp, sp, #0x60
  4511f0:	stp	x29, x30, [sp, #16]
  4511f4:	stp	x26, x25, [sp, #32]
  4511f8:	stp	x24, x23, [sp, #48]
  4511fc:	stp	x22, x21, [sp, #64]
  451200:	stp	x20, x19, [sp, #80]
  451204:	ldr	x8, [x2, #8]
  451208:	add	x29, sp, #0x10
  45120c:	ldr	x8, [x8, #8]
  451210:	ldr	x8, [x8]
  451214:	ldrb	w9, [x8]
  451218:	cmp	w9, #0x66
  45121c:	b.ne	451244 <feof@plt+0x4e544>  // b.any
  451220:	ldr	x9, [x2, #16]
  451224:	mov	w20, w1
  451228:	mov	x19, x0
  45122c:	ldp	x21, x22, [x9, #8]
  451230:	ldr	w10, [x22]
  451234:	cmp	w10, #0x3c
  451238:	b.ne	45124c <feof@plt+0x4e54c>  // b.any
  45123c:	ldp	x22, x23, [x22, #8]
  451240:	b	451250 <feof@plt+0x4e550>
  451244:	mov	w0, wzr
  451248:	b	451d8c <feof@plt+0x4f08c>
  45124c:	mov	x23, xzr
  451250:	mov	w9, #0xffffffff            	// #-1
  451254:	ldr	w24, [x19, #316]
  451258:	str	w9, [x19, #316]
  45125c:	ldrb	w8, [x8, #1]
  451260:	sub	w8, w8, #0x4c
  451264:	cmp	w8, #0x26
  451268:	b.hi	451d84 <feof@plt+0x4f084>  // b.pmore
  45126c:	adrp	x9, 465000 <_obstack_memory_used@@Base+0xfdd8>
  451270:	add	x9, x9, #0xdbe
  451274:	adr	x10, 451284 <feof@plt+0x4e584>
  451278:	ldrh	w11, [x9, x8, lsl #1]
  45127c:	add	x10, x10, x11, lsl #2
  451280:	br	x10
  451284:	ldr	x8, [x19, #256]
  451288:	cmp	x8, #0xff
  45128c:	b.ne	4512b8 <feof@plt+0x4e5b8>  // b.any
  451290:	ldp	x8, x2, [x19, #272]
  451294:	mov	w1, #0xff                  	// #255
  451298:	mov	x0, x19
  45129c:	strb	wzr, [x19, #255]
  4512a0:	blr	x8
  4512a4:	ldr	x9, [x19, #320]
  4512a8:	mov	x8, xzr
  4512ac:	str	xzr, [x19, #256]
  4512b0:	add	x9, x9, #0x1
  4512b4:	str	x9, [x19, #320]
  4512b8:	add	x9, x8, #0x1
  4512bc:	mov	w10, #0x28                  	// #40
  4512c0:	str	x9, [x19, #256]
  4512c4:	strb	w10, [x19, x8]
  4512c8:	strb	w10, [x19, #264]
  4512cc:	ldr	w8, [x22]
  4512d0:	cmp	w8, #0x31
  4512d4:	b.hi	4515b0 <feof@plt+0x4e8b0>  // b.pmore
  4512d8:	mov	w9, #0x1                   	// #1
  4512dc:	lsl	x8, x9, x8
  4512e0:	mov	x9, #0x43                  	// #67
  4512e4:	movk	x9, #0x2, lsl #48
  4512e8:	tst	x8, x9
  4512ec:	b.eq	4515b0 <feof@plt+0x4e8b0>  // b.none
  4512f0:	ldr	w8, [x22, #4]
  4512f4:	cmp	w8, #0x1
  4512f8:	b.gt	451308 <feof@plt+0x4e608>
  4512fc:	ldr	w9, [x19, #308]
  451300:	cmp	w9, #0x401
  451304:	b.lt	45155c <feof@plt+0x4e85c>  // b.tstop
  451308:	mov	w8, #0x1                   	// #1
  45130c:	str	w8, [x19, #304]
  451310:	b	4518f0 <feof@plt+0x4ebf0>
  451314:	ldr	x8, [x19, #256]
  451318:	cmp	x8, #0xff
  45131c:	b.ne	451348 <feof@plt+0x4e648>  // b.any
  451320:	ldp	x8, x2, [x19, #272]
  451324:	mov	w1, #0xff                  	// #255
  451328:	mov	x0, x19
  45132c:	strb	wzr, [x19, #255]
  451330:	blr	x8
  451334:	ldr	x9, [x19, #320]
  451338:	mov	x8, xzr
  45133c:	str	xzr, [x19, #256]
  451340:	add	x9, x9, #0x1
  451344:	str	x9, [x19, #320]
  451348:	add	x9, x8, #0x1
  45134c:	mov	w10, #0x28                  	// #40
  451350:	str	x9, [x19, #256]
  451354:	strb	w10, [x19, x8]
  451358:	ldr	x8, [x19, #256]
  45135c:	strb	w10, [x19, #264]
  451360:	cmp	x8, #0xff
  451364:	b.ne	451390 <feof@plt+0x4e690>  // b.any
  451368:	ldp	x8, x2, [x19, #272]
  45136c:	mov	w1, #0xff                  	// #255
  451370:	mov	x0, x19
  451374:	strb	wzr, [x19, #255]
  451378:	blr	x8
  45137c:	ldr	x9, [x19, #320]
  451380:	mov	x8, xzr
  451384:	str	xzr, [x19, #256]
  451388:	add	x9, x9, #0x1
  45138c:	str	x9, [x19, #320]
  451390:	add	x9, x8, #0x1
  451394:	mov	w23, #0x2e                  	// #46
  451398:	str	x9, [x19, #256]
  45139c:	strb	w23, [x19, x8]
  4513a0:	ldr	x8, [x19, #256]
  4513a4:	strb	w23, [x19, #264]
  4513a8:	cmp	x8, #0xff
  4513ac:	b.ne	4513d8 <feof@plt+0x4e6d8>  // b.any
  4513b0:	ldp	x8, x2, [x19, #272]
  4513b4:	mov	w1, #0xff                  	// #255
  4513b8:	mov	x0, x19
  4513bc:	strb	wzr, [x19, #255]
  4513c0:	blr	x8
  4513c4:	ldr	x9, [x19, #320]
  4513c8:	mov	x8, xzr
  4513cc:	str	xzr, [x19, #256]
  4513d0:	add	x9, x9, #0x1
  4513d4:	str	x9, [x19, #320]
  4513d8:	add	x9, x8, #0x1
  4513dc:	str	x9, [x19, #256]
  4513e0:	strb	w23, [x19, x8]
  4513e4:	ldr	x8, [x19, #256]
  4513e8:	strb	w23, [x19, #264]
  4513ec:	cmp	x8, #0xff
  4513f0:	b.ne	45141c <feof@plt+0x4e71c>  // b.any
  4513f4:	ldp	x8, x2, [x19, #272]
  4513f8:	mov	w1, #0xff                  	// #255
  4513fc:	mov	x0, x19
  451400:	strb	wzr, [x19, #255]
  451404:	blr	x8
  451408:	ldr	x9, [x19, #320]
  45140c:	mov	x8, xzr
  451410:	str	xzr, [x19, #256]
  451414:	add	x9, x9, #0x1
  451418:	str	x9, [x19, #320]
  45141c:	add	x9, x8, #0x1
  451420:	mov	w10, #0x2e                  	// #46
  451424:	str	x9, [x19, #256]
  451428:	strb	w10, [x19, x8]
  45142c:	strb	w10, [x19, #264]
  451430:	ldr	w8, [x21]
  451434:	cmp	w8, #0x32
  451438:	b.ne	451538 <feof@plt+0x4e838>  // b.any
  45143c:	ldr	x8, [x21, #8]
  451440:	ldrsw	x21, [x8, #16]
  451444:	cbz	w21, 45172c <feof@plt+0x4ea2c>
  451448:	ldr	x23, [x8, #8]
  45144c:	b	45146c <feof@plt+0x4e76c>
  451450:	add	x9, x8, #0x1
  451454:	subs	x21, x21, #0x1
  451458:	add	x23, x23, #0x1
  45145c:	str	x9, [x19, #256]
  451460:	strb	w25, [x19, x8]
  451464:	strb	w25, [x19, #264]
  451468:	b.eq	45172c <feof@plt+0x4ea2c>  // b.none
  45146c:	ldr	x8, [x19, #256]
  451470:	ldrb	w25, [x23]
  451474:	cmp	x8, #0xff
  451478:	b.ne	451450 <feof@plt+0x4e750>  // b.any
  45147c:	ldp	x8, x2, [x19, #272]
  451480:	mov	w1, #0xff                  	// #255
  451484:	mov	x0, x19
  451488:	strb	wzr, [x19, #255]
  45148c:	blr	x8
  451490:	ldr	x9, [x19, #320]
  451494:	mov	x8, xzr
  451498:	str	xzr, [x19, #256]
  45149c:	add	x9, x9, #0x1
  4514a0:	str	x9, [x19, #320]
  4514a4:	b	451450 <feof@plt+0x4e750>
  4514a8:	ldr	x8, [x19, #256]
  4514ac:	cmp	x8, #0xff
  4514b0:	b.ne	4514dc <feof@plt+0x4e7dc>  // b.any
  4514b4:	ldp	x8, x2, [x19, #272]
  4514b8:	mov	w1, #0xff                  	// #255
  4514bc:	mov	x0, x19
  4514c0:	strb	wzr, [x19, #255]
  4514c4:	blr	x8
  4514c8:	ldr	x9, [x19, #320]
  4514cc:	mov	x8, xzr
  4514d0:	str	xzr, [x19, #256]
  4514d4:	add	x9, x9, #0x1
  4514d8:	str	x9, [x19, #320]
  4514dc:	add	x9, x8, #0x1
  4514e0:	mov	w10, #0x28                  	// #40
  4514e4:	str	x9, [x19, #256]
  4514e8:	strb	w10, [x19, x8]
  4514ec:	strb	w10, [x19, #264]
  4514f0:	ldr	w8, [x22]
  4514f4:	cmp	w8, #0x31
  4514f8:	b.hi	45161c <feof@plt+0x4e91c>  // b.pmore
  4514fc:	mov	w9, #0x1                   	// #1
  451500:	lsl	x8, x9, x8
  451504:	mov	x9, #0x43                  	// #67
  451508:	movk	x9, #0x2, lsl #48
  45150c:	tst	x8, x9
  451510:	b.eq	45161c <feof@plt+0x4e91c>  // b.none
  451514:	ldr	w8, [x22, #4]
  451518:	cmp	w8, #0x1
  45151c:	b.gt	45152c <feof@plt+0x4e82c>
  451520:	ldr	w9, [x19, #308]
  451524:	cmp	w9, #0x401
  451528:	b.lt	451688 <feof@plt+0x4e988>  // b.tstop
  45152c:	mov	w8, #0x1                   	// #1
  451530:	str	w8, [x19, #304]
  451534:	b	451e40 <feof@plt+0x4f140>
  451538:	ldr	w8, [x21, #4]
  45153c:	cmp	w8, #0x1
  451540:	b.gt	451550 <feof@plt+0x4e850>
  451544:	ldr	w9, [x19, #308]
  451548:	cmp	w9, #0x401
  45154c:	b.lt	4516dc <feof@plt+0x4e9dc>  // b.tstop
  451550:	mov	w8, #0x1                   	// #1
  451554:	str	w8, [x19, #304]
  451558:	b	45172c <feof@plt+0x4ea2c>
  45155c:	add	w8, w8, #0x1
  451560:	str	w8, [x22, #4]
  451564:	ldr	x8, [x19, #328]
  451568:	add	w9, w9, #0x1
  45156c:	str	w9, [x19, #308]
  451570:	mov	x9, sp
  451574:	mov	x0, x19
  451578:	mov	w1, w20
  45157c:	mov	x2, x22
  451580:	stp	x22, x8, [sp]
  451584:	str	x9, [x19, #328]
  451588:	bl	449d30 <feof@plt+0x47030>
  45158c:	ldr	x8, [sp, #8]
  451590:	str	x8, [x19, #328]
  451594:	ldr	w8, [x22, #4]
  451598:	sub	w8, w8, #0x1
  45159c:	str	w8, [x22, #4]
  4515a0:	ldr	w8, [x19, #308]
  4515a4:	sub	w8, w8, #0x1
  4515a8:	str	w8, [x19, #308]
  4515ac:	b	4518f0 <feof@plt+0x4ebf0>
  4515b0:	ldr	x8, [x19, #256]
  4515b4:	cmp	x8, #0xff
  4515b8:	b.ne	4515e4 <feof@plt+0x4e8e4>  // b.any
  4515bc:	ldp	x8, x2, [x19, #272]
  4515c0:	mov	w1, #0xff                  	// #255
  4515c4:	mov	x0, x19
  4515c8:	strb	wzr, [x19, #255]
  4515cc:	blr	x8
  4515d0:	ldr	x9, [x19, #320]
  4515d4:	mov	x8, xzr
  4515d8:	str	xzr, [x19, #256]
  4515dc:	add	x9, x9, #0x1
  4515e0:	str	x9, [x19, #320]
  4515e4:	add	x9, x8, #0x1
  4515e8:	mov	w10, #0x28                  	// #40
  4515ec:	str	x9, [x19, #256]
  4515f0:	strb	w10, [x19, x8]
  4515f4:	strb	w10, [x19, #264]
  4515f8:	ldr	w8, [x22, #4]
  4515fc:	cmp	w8, #0x1
  451600:	b.gt	451610 <feof@plt+0x4e910>
  451604:	ldr	w9, [x19, #308]
  451608:	cmp	w9, #0x401
  45160c:	b.lt	451858 <feof@plt+0x4eb58>  // b.tstop
  451610:	mov	w8, #0x1                   	// #1
  451614:	str	w8, [x19, #304]
  451618:	b	4518a8 <feof@plt+0x4eba8>
  45161c:	ldr	x8, [x19, #256]
  451620:	cmp	x8, #0xff
  451624:	b.ne	451650 <feof@plt+0x4e950>  // b.any
  451628:	ldp	x8, x2, [x19, #272]
  45162c:	mov	w1, #0xff                  	// #255
  451630:	mov	x0, x19
  451634:	strb	wzr, [x19, #255]
  451638:	blr	x8
  45163c:	ldr	x9, [x19, #320]
  451640:	mov	x8, xzr
  451644:	str	xzr, [x19, #256]
  451648:	add	x9, x9, #0x1
  45164c:	str	x9, [x19, #320]
  451650:	add	x9, x8, #0x1
  451654:	mov	w10, #0x28                  	// #40
  451658:	str	x9, [x19, #256]
  45165c:	strb	w10, [x19, x8]
  451660:	strb	w10, [x19, #264]
  451664:	ldr	w8, [x22, #4]
  451668:	cmp	w8, #0x1
  45166c:	b.gt	45167c <feof@plt+0x4e97c>
  451670:	ldr	w9, [x19, #308]
  451674:	cmp	w9, #0x401
  451678:	b.lt	451da8 <feof@plt+0x4f0a8>  // b.tstop
  45167c:	mov	w8, #0x1                   	// #1
  451680:	str	w8, [x19, #304]
  451684:	b	451df8 <feof@plt+0x4f0f8>
  451688:	add	w8, w8, #0x1
  45168c:	str	w8, [x22, #4]
  451690:	ldr	x8, [x19, #328]
  451694:	add	w9, w9, #0x1
  451698:	str	w9, [x19, #308]
  45169c:	mov	x9, sp
  4516a0:	mov	x0, x19
  4516a4:	mov	w1, w20
  4516a8:	mov	x2, x22
  4516ac:	stp	x22, x8, [sp]
  4516b0:	str	x9, [x19, #328]
  4516b4:	bl	449d30 <feof@plt+0x47030>
  4516b8:	ldr	x8, [sp, #8]
  4516bc:	str	x8, [x19, #328]
  4516c0:	ldr	w8, [x22, #4]
  4516c4:	sub	w8, w8, #0x1
  4516c8:	str	w8, [x22, #4]
  4516cc:	ldr	w8, [x19, #308]
  4516d0:	sub	w8, w8, #0x1
  4516d4:	str	w8, [x19, #308]
  4516d8:	b	451e40 <feof@plt+0x4f140>
  4516dc:	add	w8, w8, #0x1
  4516e0:	str	w8, [x21, #4]
  4516e4:	ldr	x8, [x19, #328]
  4516e8:	add	w9, w9, #0x1
  4516ec:	str	w9, [x19, #308]
  4516f0:	mov	x9, sp
  4516f4:	mov	x0, x19
  4516f8:	mov	w1, w20
  4516fc:	mov	x2, x21
  451700:	stp	x21, x8, [sp]
  451704:	str	x9, [x19, #328]
  451708:	bl	449d30 <feof@plt+0x47030>
  45170c:	ldr	x8, [sp, #8]
  451710:	str	x8, [x19, #328]
  451714:	ldr	w8, [x21, #4]
  451718:	sub	w8, w8, #0x1
  45171c:	str	w8, [x21, #4]
  451720:	ldr	w8, [x19, #308]
  451724:	sub	w8, w8, #0x1
  451728:	str	w8, [x19, #308]
  45172c:	ldr	w8, [x22]
  451730:	cmp	w8, #0x31
  451734:	b.hi	4517b0 <feof@plt+0x4eab0>  // b.pmore
  451738:	mov	w9, #0x1                   	// #1
  45173c:	lsl	x8, x9, x8
  451740:	mov	x9, #0x43                  	// #67
  451744:	movk	x9, #0x2, lsl #48
  451748:	tst	x8, x9
  45174c:	b.eq	4517b0 <feof@plt+0x4eab0>  // b.none
  451750:	ldr	w8, [x22, #4]
  451754:	cmp	w8, #0x1
  451758:	b.gt	451bd8 <feof@plt+0x4eed8>
  45175c:	ldr	w9, [x19, #308]
  451760:	cmp	w9, #0x401
  451764:	b.ge	451bd8 <feof@plt+0x4eed8>  // b.tcont
  451768:	add	w8, w8, #0x1
  45176c:	str	w8, [x22, #4]
  451770:	ldr	x8, [x19, #328]
  451774:	add	w9, w9, #0x1
  451778:	str	w9, [x19, #308]
  45177c:	mov	x9, sp
  451780:	mov	x0, x19
  451784:	mov	w1, w20
  451788:	mov	x2, x22
  45178c:	stp	x22, x8, [sp]
  451790:	str	x9, [x19, #328]
  451794:	bl	449d30 <feof@plt+0x47030>
  451798:	ldr	x8, [sp, #8]
  45179c:	str	x8, [x19, #328]
  4517a0:	ldr	w8, [x22, #4]
  4517a4:	sub	w8, w8, #0x1
  4517a8:	str	w8, [x22, #4]
  4517ac:	b	451c28 <feof@plt+0x4ef28>
  4517b0:	ldr	x8, [x19, #256]
  4517b4:	cmp	x8, #0xff
  4517b8:	b.ne	4517e4 <feof@plt+0x4eae4>  // b.any
  4517bc:	ldp	x8, x2, [x19, #272]
  4517c0:	mov	w1, #0xff                  	// #255
  4517c4:	mov	x0, x19
  4517c8:	strb	wzr, [x19, #255]
  4517cc:	blr	x8
  4517d0:	ldr	x9, [x19, #320]
  4517d4:	mov	x8, xzr
  4517d8:	str	xzr, [x19, #256]
  4517dc:	add	x9, x9, #0x1
  4517e0:	str	x9, [x19, #320]
  4517e4:	add	x9, x8, #0x1
  4517e8:	mov	w10, #0x28                  	// #40
  4517ec:	str	x9, [x19, #256]
  4517f0:	strb	w10, [x19, x8]
  4517f4:	strb	w10, [x19, #264]
  4517f8:	ldr	w8, [x22, #4]
  4517fc:	cmp	w8, #0x1
  451800:	b.gt	451c98 <feof@plt+0x4ef98>
  451804:	ldr	w9, [x19, #308]
  451808:	cmp	w9, #0x401
  45180c:	b.ge	451c98 <feof@plt+0x4ef98>  // b.tcont
  451810:	add	w8, w8, #0x1
  451814:	str	w8, [x22, #4]
  451818:	ldr	x8, [x19, #328]
  45181c:	add	w9, w9, #0x1
  451820:	str	w9, [x19, #308]
  451824:	mov	x9, sp
  451828:	mov	x0, x19
  45182c:	mov	w1, w20
  451830:	mov	x2, x22
  451834:	stp	x22, x8, [sp]
  451838:	str	x9, [x19, #328]
  45183c:	bl	449d30 <feof@plt+0x47030>
  451840:	ldr	x8, [sp, #8]
  451844:	str	x8, [x19, #328]
  451848:	ldr	w8, [x22, #4]
  45184c:	sub	w8, w8, #0x1
  451850:	str	w8, [x22, #4]
  451854:	b	451ce8 <feof@plt+0x4efe8>
  451858:	add	w8, w8, #0x1
  45185c:	str	w8, [x22, #4]
  451860:	ldr	x8, [x19, #328]
  451864:	add	w9, w9, #0x1
  451868:	str	w9, [x19, #308]
  45186c:	mov	x9, sp
  451870:	mov	x0, x19
  451874:	mov	w1, w20
  451878:	mov	x2, x22
  45187c:	stp	x22, x8, [sp]
  451880:	str	x9, [x19, #328]
  451884:	bl	449d30 <feof@plt+0x47030>
  451888:	ldr	x8, [sp, #8]
  45188c:	str	x8, [x19, #328]
  451890:	ldr	w8, [x22, #4]
  451894:	sub	w8, w8, #0x1
  451898:	str	w8, [x22, #4]
  45189c:	ldr	w8, [x19, #308]
  4518a0:	sub	w8, w8, #0x1
  4518a4:	str	w8, [x19, #308]
  4518a8:	ldr	x8, [x19, #256]
  4518ac:	cmp	x8, #0xff
  4518b0:	b.ne	4518dc <feof@plt+0x4ebdc>  // b.any
  4518b4:	ldp	x8, x2, [x19, #272]
  4518b8:	mov	w1, #0xff                  	// #255
  4518bc:	mov	x0, x19
  4518c0:	strb	wzr, [x19, #255]
  4518c4:	blr	x8
  4518c8:	ldr	x9, [x19, #320]
  4518cc:	mov	x8, xzr
  4518d0:	str	xzr, [x19, #256]
  4518d4:	add	x9, x9, #0x1
  4518d8:	str	x9, [x19, #320]
  4518dc:	add	x9, x8, #0x1
  4518e0:	mov	w10, #0x29                  	// #41
  4518e4:	str	x9, [x19, #256]
  4518e8:	strb	w10, [x19, x8]
  4518ec:	strb	w10, [x19, #264]
  4518f0:	ldr	w8, [x21]
  4518f4:	cmp	w8, #0x32
  4518f8:	b.ne	451968 <feof@plt+0x4ec68>  // b.any
  4518fc:	ldr	x8, [x21, #8]
  451900:	ldrsw	x22, [x8, #16]
  451904:	cbz	w22, 4519dc <feof@plt+0x4ecdc>
  451908:	ldr	x25, [x8, #8]
  45190c:	b	45192c <feof@plt+0x4ec2c>
  451910:	add	x9, x8, #0x1
  451914:	subs	x22, x22, #0x1
  451918:	add	x25, x25, #0x1
  45191c:	str	x9, [x19, #256]
  451920:	strb	w26, [x19, x8]
  451924:	strb	w26, [x19, #264]
  451928:	b.eq	4519dc <feof@plt+0x4ecdc>  // b.none
  45192c:	ldr	x8, [x19, #256]
  451930:	ldrb	w26, [x25]
  451934:	cmp	x8, #0xff
  451938:	b.ne	451910 <feof@plt+0x4ec10>  // b.any
  45193c:	ldp	x8, x2, [x19, #272]
  451940:	mov	w1, #0xff                  	// #255
  451944:	mov	x0, x19
  451948:	strb	wzr, [x19, #255]
  45194c:	blr	x8
  451950:	ldr	x9, [x19, #320]
  451954:	mov	x8, xzr
  451958:	str	xzr, [x19, #256]
  45195c:	add	x9, x9, #0x1
  451960:	str	x9, [x19, #320]
  451964:	b	451910 <feof@plt+0x4ec10>
  451968:	ldr	w8, [x21, #4]
  45196c:	cmp	w8, #0x1
  451970:	b.gt	451980 <feof@plt+0x4ec80>
  451974:	ldr	w9, [x19, #308]
  451978:	cmp	w9, #0x401
  45197c:	b.lt	45198c <feof@plt+0x4ec8c>  // b.tstop
  451980:	mov	w8, #0x1                   	// #1
  451984:	str	w8, [x19, #304]
  451988:	b	4519dc <feof@plt+0x4ecdc>
  45198c:	add	w8, w8, #0x1
  451990:	str	w8, [x21, #4]
  451994:	ldr	x8, [x19, #328]
  451998:	add	w9, w9, #0x1
  45199c:	str	w9, [x19, #308]
  4519a0:	mov	x9, sp
  4519a4:	mov	x0, x19
  4519a8:	mov	w1, w20
  4519ac:	mov	x2, x21
  4519b0:	stp	x21, x8, [sp]
  4519b4:	str	x9, [x19, #328]
  4519b8:	bl	449d30 <feof@plt+0x47030>
  4519bc:	ldr	x8, [sp, #8]
  4519c0:	str	x8, [x19, #328]
  4519c4:	ldr	w8, [x21, #4]
  4519c8:	sub	w8, w8, #0x1
  4519cc:	str	w8, [x21, #4]
  4519d0:	ldr	w8, [x19, #308]
  4519d4:	sub	w8, w8, #0x1
  4519d8:	str	w8, [x19, #308]
  4519dc:	ldr	x8, [x19, #256]
  4519e0:	cmp	x8, #0xff
  4519e4:	b.ne	451a10 <feof@plt+0x4ed10>  // b.any
  4519e8:	ldp	x8, x2, [x19, #272]
  4519ec:	mov	w1, #0xff                  	// #255
  4519f0:	mov	x0, x19
  4519f4:	strb	wzr, [x19, #255]
  4519f8:	blr	x8
  4519fc:	ldr	x9, [x19, #320]
  451a00:	mov	x8, xzr
  451a04:	str	xzr, [x19, #256]
  451a08:	add	x9, x9, #0x1
  451a0c:	str	x9, [x19, #320]
  451a10:	add	x9, x8, #0x1
  451a14:	mov	w22, #0x2e                  	// #46
  451a18:	str	x9, [x19, #256]
  451a1c:	strb	w22, [x19, x8]
  451a20:	ldr	x8, [x19, #256]
  451a24:	strb	w22, [x19, #264]
  451a28:	cmp	x8, #0xff
  451a2c:	b.ne	451a58 <feof@plt+0x4ed58>  // b.any
  451a30:	ldp	x8, x2, [x19, #272]
  451a34:	mov	w1, #0xff                  	// #255
  451a38:	mov	x0, x19
  451a3c:	strb	wzr, [x19, #255]
  451a40:	blr	x8
  451a44:	ldr	x9, [x19, #320]
  451a48:	mov	x8, xzr
  451a4c:	str	xzr, [x19, #256]
  451a50:	add	x9, x9, #0x1
  451a54:	str	x9, [x19, #320]
  451a58:	add	x9, x8, #0x1
  451a5c:	str	x9, [x19, #256]
  451a60:	strb	w22, [x19, x8]
  451a64:	ldr	x8, [x19, #256]
  451a68:	strb	w22, [x19, #264]
  451a6c:	cmp	x8, #0xff
  451a70:	b.ne	451a9c <feof@plt+0x4ed9c>  // b.any
  451a74:	ldp	x8, x2, [x19, #272]
  451a78:	mov	w1, #0xff                  	// #255
  451a7c:	mov	x0, x19
  451a80:	strb	wzr, [x19, #255]
  451a84:	blr	x8
  451a88:	ldr	x9, [x19, #320]
  451a8c:	mov	x8, xzr
  451a90:	str	xzr, [x19, #256]
  451a94:	add	x9, x9, #0x1
  451a98:	str	x9, [x19, #320]
  451a9c:	add	x9, x8, #0x1
  451aa0:	mov	w10, #0x2e                  	// #46
  451aa4:	str	x9, [x19, #256]
  451aa8:	strb	w10, [x19, x8]
  451aac:	strb	w10, [x19, #264]
  451ab0:	ldr	w8, [x21]
  451ab4:	cmp	w8, #0x32
  451ab8:	b.ne	451b28 <feof@plt+0x4ee28>  // b.any
  451abc:	ldr	x8, [x21, #8]
  451ac0:	ldrsw	x21, [x8, #16]
  451ac4:	cbz	w21, 451b9c <feof@plt+0x4ee9c>
  451ac8:	ldr	x22, [x8, #8]
  451acc:	b	451aec <feof@plt+0x4edec>
  451ad0:	add	x9, x8, #0x1
  451ad4:	subs	x21, x21, #0x1
  451ad8:	add	x22, x22, #0x1
  451adc:	str	x9, [x19, #256]
  451ae0:	strb	w25, [x19, x8]
  451ae4:	strb	w25, [x19, #264]
  451ae8:	b.eq	451b9c <feof@plt+0x4ee9c>  // b.none
  451aec:	ldr	x8, [x19, #256]
  451af0:	ldrb	w25, [x22]
  451af4:	cmp	x8, #0xff
  451af8:	b.ne	451ad0 <feof@plt+0x4edd0>  // b.any
  451afc:	ldp	x8, x2, [x19, #272]
  451b00:	mov	w1, #0xff                  	// #255
  451b04:	mov	x0, x19
  451b08:	strb	wzr, [x19, #255]
  451b0c:	blr	x8
  451b10:	ldr	x9, [x19, #320]
  451b14:	mov	x8, xzr
  451b18:	str	xzr, [x19, #256]
  451b1c:	add	x9, x9, #0x1
  451b20:	str	x9, [x19, #320]
  451b24:	b	451ad0 <feof@plt+0x4edd0>
  451b28:	ldr	w8, [x21, #4]
  451b2c:	cmp	w8, #0x1
  451b30:	b.gt	451b40 <feof@plt+0x4ee40>
  451b34:	ldr	w9, [x19, #308]
  451b38:	cmp	w9, #0x401
  451b3c:	b.lt	451b4c <feof@plt+0x4ee4c>  // b.tstop
  451b40:	mov	w8, #0x1                   	// #1
  451b44:	str	w8, [x19, #304]
  451b48:	b	451b9c <feof@plt+0x4ee9c>
  451b4c:	add	w8, w8, #0x1
  451b50:	str	w8, [x21, #4]
  451b54:	ldr	x8, [x19, #328]
  451b58:	add	w9, w9, #0x1
  451b5c:	str	w9, [x19, #308]
  451b60:	mov	x9, sp
  451b64:	mov	x0, x19
  451b68:	mov	w1, w20
  451b6c:	mov	x2, x21
  451b70:	stp	x21, x8, [sp]
  451b74:	str	x9, [x19, #328]
  451b78:	bl	449d30 <feof@plt+0x47030>
  451b7c:	ldr	x8, [sp, #8]
  451b80:	str	x8, [x19, #328]
  451b84:	ldr	w8, [x21, #4]
  451b88:	sub	w8, w8, #0x1
  451b8c:	str	w8, [x21, #4]
  451b90:	ldr	w8, [x19, #308]
  451b94:	sub	w8, w8, #0x1
  451b98:	str	w8, [x19, #308]
  451b9c:	ldr	w8, [x23]
  451ba0:	cmp	w8, #0x31
  451ba4:	b.hi	451c38 <feof@plt+0x4ef38>  // b.pmore
  451ba8:	mov	w9, #0x1                   	// #1
  451bac:	lsl	x8, x9, x8
  451bb0:	mov	x9, #0x43                  	// #67
  451bb4:	movk	x9, #0x2, lsl #48
  451bb8:	tst	x8, x9
  451bbc:	b.eq	451c38 <feof@plt+0x4ef38>  // b.none
  451bc0:	ldr	w8, [x23, #4]
  451bc4:	cmp	w8, #0x1
  451bc8:	b.gt	451bd8 <feof@plt+0x4eed8>
  451bcc:	ldr	w9, [x19, #308]
  451bd0:	cmp	w9, #0x401
  451bd4:	b.lt	451be4 <feof@plt+0x4eee4>  // b.tstop
  451bd8:	mov	w8, #0x1                   	// #1
  451bdc:	str	w8, [x19, #304]
  451be0:	b	451d3c <feof@plt+0x4f03c>
  451be4:	add	w8, w8, #0x1
  451be8:	str	w8, [x23, #4]
  451bec:	ldr	x8, [x19, #328]
  451bf0:	add	w9, w9, #0x1
  451bf4:	str	w9, [x19, #308]
  451bf8:	mov	x9, sp
  451bfc:	mov	x0, x19
  451c00:	mov	w1, w20
  451c04:	mov	x2, x23
  451c08:	stp	x23, x8, [sp]
  451c0c:	str	x9, [x19, #328]
  451c10:	bl	449d30 <feof@plt+0x47030>
  451c14:	ldr	x8, [sp, #8]
  451c18:	str	x8, [x19, #328]
  451c1c:	ldr	w8, [x23, #4]
  451c20:	sub	w8, w8, #0x1
  451c24:	str	w8, [x23, #4]
  451c28:	ldr	w8, [x19, #308]
  451c2c:	sub	w8, w8, #0x1
  451c30:	str	w8, [x19, #308]
  451c34:	b	451d3c <feof@plt+0x4f03c>
  451c38:	ldr	x8, [x19, #256]
  451c3c:	cmp	x8, #0xff
  451c40:	b.ne	451c6c <feof@plt+0x4ef6c>  // b.any
  451c44:	ldp	x8, x2, [x19, #272]
  451c48:	mov	w1, #0xff                  	// #255
  451c4c:	mov	x0, x19
  451c50:	strb	wzr, [x19, #255]
  451c54:	blr	x8
  451c58:	ldr	x9, [x19, #320]
  451c5c:	mov	x8, xzr
  451c60:	str	xzr, [x19, #256]
  451c64:	add	x9, x9, #0x1
  451c68:	str	x9, [x19, #320]
  451c6c:	add	x9, x8, #0x1
  451c70:	mov	w10, #0x28                  	// #40
  451c74:	str	x9, [x19, #256]
  451c78:	strb	w10, [x19, x8]
  451c7c:	strb	w10, [x19, #264]
  451c80:	ldr	w8, [x23, #4]
  451c84:	cmp	w8, #0x1
  451c88:	b.gt	451c98 <feof@plt+0x4ef98>
  451c8c:	ldr	w9, [x19, #308]
  451c90:	cmp	w9, #0x401
  451c94:	b.lt	451ca4 <feof@plt+0x4efa4>  // b.tstop
  451c98:	mov	w8, #0x1                   	// #1
  451c9c:	str	w8, [x19, #304]
  451ca0:	b	451cf4 <feof@plt+0x4eff4>
  451ca4:	add	w8, w8, #0x1
  451ca8:	str	w8, [x23, #4]
  451cac:	ldr	x8, [x19, #328]
  451cb0:	add	w9, w9, #0x1
  451cb4:	str	w9, [x19, #308]
  451cb8:	mov	x9, sp
  451cbc:	mov	x0, x19
  451cc0:	mov	w1, w20
  451cc4:	mov	x2, x23
  451cc8:	stp	x23, x8, [sp]
  451ccc:	str	x9, [x19, #328]
  451cd0:	bl	449d30 <feof@plt+0x47030>
  451cd4:	ldr	x8, [sp, #8]
  451cd8:	str	x8, [x19, #328]
  451cdc:	ldr	w8, [x23, #4]
  451ce0:	sub	w8, w8, #0x1
  451ce4:	str	w8, [x23, #4]
  451ce8:	ldr	w8, [x19, #308]
  451cec:	sub	w8, w8, #0x1
  451cf0:	str	w8, [x19, #308]
  451cf4:	ldr	x8, [x19, #256]
  451cf8:	cmp	x8, #0xff
  451cfc:	b.ne	451d28 <feof@plt+0x4f028>  // b.any
  451d00:	ldp	x8, x2, [x19, #272]
  451d04:	mov	w1, #0xff                  	// #255
  451d08:	mov	x0, x19
  451d0c:	strb	wzr, [x19, #255]
  451d10:	blr	x8
  451d14:	ldr	x9, [x19, #320]
  451d18:	mov	x8, xzr
  451d1c:	str	xzr, [x19, #256]
  451d20:	add	x9, x9, #0x1
  451d24:	str	x9, [x19, #320]
  451d28:	add	x9, x8, #0x1
  451d2c:	mov	w10, #0x29                  	// #41
  451d30:	str	x9, [x19, #256]
  451d34:	strb	w10, [x19, x8]
  451d38:	strb	w10, [x19, #264]
  451d3c:	ldr	x8, [x19, #256]
  451d40:	cmp	x8, #0xff
  451d44:	b.ne	451d70 <feof@plt+0x4f070>  // b.any
  451d48:	ldp	x8, x2, [x19, #272]
  451d4c:	mov	w1, #0xff                  	// #255
  451d50:	mov	x0, x19
  451d54:	strb	wzr, [x19, #255]
  451d58:	blr	x8
  451d5c:	ldr	x9, [x19, #320]
  451d60:	mov	x8, xzr
  451d64:	str	xzr, [x19, #256]
  451d68:	add	x9, x9, #0x1
  451d6c:	str	x9, [x19, #320]
  451d70:	add	x9, x8, #0x1
  451d74:	mov	w10, #0x29                  	// #41
  451d78:	str	x9, [x19, #256]
  451d7c:	strb	w10, [x19, x8]
  451d80:	strb	w10, [x19, #264]
  451d84:	mov	w0, #0x1                   	// #1
  451d88:	str	w24, [x19, #316]
  451d8c:	ldp	x20, x19, [sp, #80]
  451d90:	ldp	x22, x21, [sp, #64]
  451d94:	ldp	x24, x23, [sp, #48]
  451d98:	ldp	x26, x25, [sp, #32]
  451d9c:	ldp	x29, x30, [sp, #16]
  451da0:	add	sp, sp, #0x60
  451da4:	ret
  451da8:	add	w8, w8, #0x1
  451dac:	str	w8, [x22, #4]
  451db0:	ldr	x8, [x19, #328]
  451db4:	add	w9, w9, #0x1
  451db8:	str	w9, [x19, #308]
  451dbc:	mov	x9, sp
  451dc0:	mov	x0, x19
  451dc4:	mov	w1, w20
  451dc8:	mov	x2, x22
  451dcc:	stp	x22, x8, [sp]
  451dd0:	str	x9, [x19, #328]
  451dd4:	bl	449d30 <feof@plt+0x47030>
  451dd8:	ldr	x8, [sp, #8]
  451ddc:	str	x8, [x19, #328]
  451de0:	ldr	w8, [x22, #4]
  451de4:	sub	w8, w8, #0x1
  451de8:	str	w8, [x22, #4]
  451dec:	ldr	w8, [x19, #308]
  451df0:	sub	w8, w8, #0x1
  451df4:	str	w8, [x19, #308]
  451df8:	ldr	x8, [x19, #256]
  451dfc:	cmp	x8, #0xff
  451e00:	b.ne	451e2c <feof@plt+0x4f12c>  // b.any
  451e04:	ldp	x8, x2, [x19, #272]
  451e08:	mov	w1, #0xff                  	// #255
  451e0c:	mov	x0, x19
  451e10:	strb	wzr, [x19, #255]
  451e14:	blr	x8
  451e18:	ldr	x9, [x19, #320]
  451e1c:	mov	x8, xzr
  451e20:	str	xzr, [x19, #256]
  451e24:	add	x9, x9, #0x1
  451e28:	str	x9, [x19, #320]
  451e2c:	add	x9, x8, #0x1
  451e30:	mov	w10, #0x29                  	// #41
  451e34:	str	x9, [x19, #256]
  451e38:	strb	w10, [x19, x8]
  451e3c:	strb	w10, [x19, #264]
  451e40:	ldr	w8, [x21]
  451e44:	cmp	w8, #0x32
  451e48:	b.ne	451eb8 <feof@plt+0x4f1b8>  // b.any
  451e4c:	ldr	x8, [x21, #8]
  451e50:	ldrsw	x20, [x8, #16]
  451e54:	cbz	w20, 451f2c <feof@plt+0x4f22c>
  451e58:	ldr	x21, [x8, #8]
  451e5c:	b	451e7c <feof@plt+0x4f17c>
  451e60:	add	x9, x8, #0x1
  451e64:	subs	x20, x20, #0x1
  451e68:	add	x21, x21, #0x1
  451e6c:	str	x9, [x19, #256]
  451e70:	strb	w22, [x19, x8]
  451e74:	strb	w22, [x19, #264]
  451e78:	b.eq	451f2c <feof@plt+0x4f22c>  // b.none
  451e7c:	ldr	x8, [x19, #256]
  451e80:	ldrb	w22, [x21]
  451e84:	cmp	x8, #0xff
  451e88:	b.ne	451e60 <feof@plt+0x4f160>  // b.any
  451e8c:	ldp	x8, x2, [x19, #272]
  451e90:	mov	w1, #0xff                  	// #255
  451e94:	mov	x0, x19
  451e98:	strb	wzr, [x19, #255]
  451e9c:	blr	x8
  451ea0:	ldr	x9, [x19, #320]
  451ea4:	mov	x8, xzr
  451ea8:	str	xzr, [x19, #256]
  451eac:	add	x9, x9, #0x1
  451eb0:	str	x9, [x19, #320]
  451eb4:	b	451e60 <feof@plt+0x4f160>
  451eb8:	ldr	w8, [x21, #4]
  451ebc:	cmp	w8, #0x1
  451ec0:	b.gt	451ed0 <feof@plt+0x4f1d0>
  451ec4:	ldr	w9, [x19, #308]
  451ec8:	cmp	w9, #0x401
  451ecc:	b.lt	451edc <feof@plt+0x4f1dc>  // b.tstop
  451ed0:	mov	w8, #0x1                   	// #1
  451ed4:	str	w8, [x19, #304]
  451ed8:	b	451f2c <feof@plt+0x4f22c>
  451edc:	add	w8, w8, #0x1
  451ee0:	str	w8, [x21, #4]
  451ee4:	ldr	x8, [x19, #328]
  451ee8:	add	w9, w9, #0x1
  451eec:	str	w9, [x19, #308]
  451ef0:	mov	x9, sp
  451ef4:	mov	x0, x19
  451ef8:	mov	w1, w20
  451efc:	mov	x2, x21
  451f00:	stp	x21, x8, [sp]
  451f04:	str	x9, [x19, #328]
  451f08:	bl	449d30 <feof@plt+0x47030>
  451f0c:	ldr	x8, [sp, #8]
  451f10:	str	x8, [x19, #328]
  451f14:	ldr	w8, [x21, #4]
  451f18:	sub	w8, w8, #0x1
  451f1c:	str	w8, [x21, #4]
  451f20:	ldr	w8, [x19, #308]
  451f24:	sub	w8, w8, #0x1
  451f28:	str	w8, [x19, #308]
  451f2c:	ldr	x8, [x19, #256]
  451f30:	cmp	x8, #0xff
  451f34:	b.ne	451f60 <feof@plt+0x4f260>  // b.any
  451f38:	ldp	x8, x2, [x19, #272]
  451f3c:	mov	w1, #0xff                  	// #255
  451f40:	mov	x0, x19
  451f44:	strb	wzr, [x19, #255]
  451f48:	blr	x8
  451f4c:	ldr	x9, [x19, #320]
  451f50:	mov	x8, xzr
  451f54:	str	xzr, [x19, #256]
  451f58:	add	x9, x9, #0x1
  451f5c:	str	x9, [x19, #320]
  451f60:	add	x9, x8, #0x1
  451f64:	mov	w20, #0x2e                  	// #46
  451f68:	str	x9, [x19, #256]
  451f6c:	strb	w20, [x19, x8]
  451f70:	ldr	x8, [x19, #256]
  451f74:	strb	w20, [x19, #264]
  451f78:	cmp	x8, #0xff
  451f7c:	b.ne	451fa8 <feof@plt+0x4f2a8>  // b.any
  451f80:	ldp	x8, x2, [x19, #272]
  451f84:	mov	w1, #0xff                  	// #255
  451f88:	mov	x0, x19
  451f8c:	strb	wzr, [x19, #255]
  451f90:	blr	x8
  451f94:	ldr	x9, [x19, #320]
  451f98:	mov	x8, xzr
  451f9c:	str	xzr, [x19, #256]
  451fa0:	add	x9, x9, #0x1
  451fa4:	str	x9, [x19, #320]
  451fa8:	add	x9, x8, #0x1
  451fac:	str	x9, [x19, #256]
  451fb0:	strb	w20, [x19, x8]
  451fb4:	ldr	x8, [x19, #256]
  451fb8:	strb	w20, [x19, #264]
  451fbc:	cmp	x8, #0xff
  451fc0:	b.ne	451fec <feof@plt+0x4f2ec>  // b.any
  451fc4:	ldp	x8, x2, [x19, #272]
  451fc8:	mov	w1, #0xff                  	// #255
  451fcc:	mov	x0, x19
  451fd0:	strb	wzr, [x19, #255]
  451fd4:	blr	x8
  451fd8:	ldr	x9, [x19, #320]
  451fdc:	mov	x8, xzr
  451fe0:	str	xzr, [x19, #256]
  451fe4:	add	x9, x9, #0x1
  451fe8:	str	x9, [x19, #320]
  451fec:	add	x9, x8, #0x1
  451ff0:	mov	w10, #0x2e                  	// #46
  451ff4:	str	x9, [x19, #256]
  451ff8:	strb	w10, [x19, x8]
  451ffc:	ldr	x8, [x19, #256]
  452000:	strb	w10, [x19, #264]
  452004:	cmp	x8, #0xff
  452008:	b.eq	451d48 <feof@plt+0x4f048>  // b.none
  45200c:	b	451d70 <feof@plt+0x4f070>
  452010:	sub	sp, sp, #0x70
  452014:	stp	x29, x30, [sp, #32]
  452018:	str	x25, [sp, #48]
  45201c:	stp	x24, x23, [sp, #64]
  452020:	stp	x22, x21, [sp, #80]
  452024:	stp	x20, x19, [sp, #96]
  452028:	add	x29, sp, #0x20
  45202c:	cbz	x2, 45203c <feof@plt+0x4f33c>
  452030:	ldr	w8, [x0, #304]
  452034:	mov	x19, x0
  452038:	cbz	w8, 452058 <feof@plt+0x4f358>
  45203c:	ldp	x20, x19, [sp, #96]
  452040:	ldp	x22, x21, [sp, #80]
  452044:	ldp	x24, x23, [sp, #64]
  452048:	ldr	x25, [sp, #48]
  45204c:	ldp	x29, x30, [sp, #32]
  452050:	add	sp, sp, #0x70
  452054:	ret
  452058:	ldr	w8, [x2, #16]
  45205c:	mov	w22, w3
  452060:	mov	x21, x2
  452064:	mov	w20, w1
  452068:	cbz	w8, 452098 <feof@plt+0x4f398>
  45206c:	ldr	x2, [x21]
  452070:	mov	x0, x19
  452074:	mov	w1, w20
  452078:	mov	w3, w22
  45207c:	ldp	x20, x19, [sp, #96]
  452080:	ldp	x22, x21, [sp, #80]
  452084:	ldp	x24, x23, [sp, #64]
  452088:	ldr	x25, [sp, #48]
  45208c:	ldp	x29, x30, [sp, #32]
  452090:	add	sp, sp, #0x70
  452094:	b	452010 <feof@plt+0x4f310>
  452098:	ldr	x2, [x21, #8]
  45209c:	ldr	w8, [x2]
  4520a0:	cbz	w22, 4520e4 <feof@plt+0x4f3e4>
  4520a4:	mov	w9, #0x1                   	// #1
  4520a8:	str	w9, [x21, #16]
  4520ac:	ldr	x9, [x21, #24]
  4520b0:	ldr	x23, [x19, #288]
  4520b4:	cmp	w8, #0x2
  4520b8:	str	x9, [x19, #288]
  4520bc:	b.eq	45210c <feof@plt+0x4f40c>  // b.none
  4520c0:	cmp	w8, #0x2a
  4520c4:	b.eq	4521d4 <feof@plt+0x4f4d4>  // b.none
  4520c8:	cmp	w8, #0x29
  4520cc:	b.ne	4521e8 <feof@plt+0x4f4e8>  // b.any
  4520d0:	ldr	x3, [x21]
  4520d4:	mov	x0, x19
  4520d8:	mov	w1, w20
  4520dc:	bl	450b68 <feof@plt+0x4de68>
  4520e0:	b	4524c4 <feof@plt+0x4f7c4>
  4520e4:	sub	w9, w8, #0x1c
  4520e8:	cmp	w9, #0x34
  4520ec:	b.hi	4520a4 <feof@plt+0x4f3a4>  // b.pmore
  4520f0:	mov	w10, #0x1                   	// #1
  4520f4:	lsl	x9, x10, x9
  4520f8:	mov	x10, #0x1f                  	// #31
  4520fc:	movk	x10, #0x1a, lsl #48
  452100:	tst	x9, x10
  452104:	b.ne	45206c <feof@plt+0x4f36c>  // b.any
  452108:	b	4520a4 <feof@plt+0x4f3a4>
  45210c:	ldr	x24, [x19, #296]
  452110:	str	xzr, [x19, #296]
  452114:	ldr	x22, [x2, #8]
  452118:	cbz	x22, 452134 <feof@plt+0x4f434>
  45211c:	ldr	w8, [x22, #4]
  452120:	cmp	w8, #0x1
  452124:	b.gt	452134 <feof@plt+0x4f434>
  452128:	ldr	w9, [x19, #308]
  45212c:	cmp	w9, #0x401
  452130:	b.lt	4521fc <feof@plt+0x4f4fc>  // b.tstop
  452134:	mov	w8, #0x1                   	// #1
  452138:	str	w8, [x19, #304]
  45213c:	str	x24, [x19, #296]
  452140:	tbnz	w20, #2, 452254 <feof@plt+0x4f554>
  452144:	ldr	x8, [x19, #256]
  452148:	cmp	x8, #0xff
  45214c:	b.ne	452178 <feof@plt+0x4f478>  // b.any
  452150:	ldp	x8, x2, [x19, #272]
  452154:	mov	w1, #0xff                  	// #255
  452158:	mov	x0, x19
  45215c:	strb	wzr, [x19, #255]
  452160:	blr	x8
  452164:	ldr	x9, [x19, #320]
  452168:	mov	x8, xzr
  45216c:	str	xzr, [x19, #256]
  452170:	add	x9, x9, #0x1
  452174:	str	x9, [x19, #320]
  452178:	add	x9, x8, #0x1
  45217c:	mov	w22, #0x3a                  	// #58
  452180:	str	x9, [x19, #256]
  452184:	strb	w22, [x19, x8]
  452188:	ldr	x8, [x19, #256]
  45218c:	strb	w22, [x19, #264]
  452190:	cmp	x8, #0xff
  452194:	b.ne	4521c0 <feof@plt+0x4f4c0>  // b.any
  452198:	ldp	x8, x2, [x19, #272]
  45219c:	mov	w1, #0xff                  	// #255
  4521a0:	mov	x0, x19
  4521a4:	strb	wzr, [x19, #255]
  4521a8:	blr	x8
  4521ac:	ldr	x9, [x19, #320]
  4521b0:	mov	x8, xzr
  4521b4:	str	xzr, [x19, #256]
  4521b8:	add	x9, x9, #0x1
  4521bc:	str	x9, [x19, #320]
  4521c0:	add	x9, x8, #0x1
  4521c4:	str	x9, [x19, #256]
  4521c8:	strb	w22, [x19, x8]
  4521cc:	strb	w22, [x19, #264]
  4521d0:	b	45229c <feof@plt+0x4f59c>
  4521d4:	ldr	x3, [x21]
  4521d8:	mov	x0, x19
  4521dc:	mov	w1, w20
  4521e0:	bl	450e40 <feof@plt+0x4e140>
  4521e4:	b	4524c4 <feof@plt+0x4f7c4>
  4521e8:	mov	x0, x19
  4521ec:	mov	w1, w20
  4521f0:	bl	44ffc8 <feof@plt+0x4d2c8>
  4521f4:	str	x23, [x19, #288]
  4521f8:	b	45206c <feof@plt+0x4f36c>
  4521fc:	add	w8, w8, #0x1
  452200:	str	w8, [x22, #4]
  452204:	ldr	x8, [x19, #328]
  452208:	add	w9, w9, #0x1
  45220c:	str	w9, [x19, #308]
  452210:	mov	x9, sp
  452214:	mov	x0, x19
  452218:	mov	w1, w20
  45221c:	mov	x2, x22
  452220:	stp	x22, x8, [sp]
  452224:	str	x9, [x19, #328]
  452228:	bl	449d30 <feof@plt+0x47030>
  45222c:	ldr	x8, [sp, #8]
  452230:	str	x8, [x19, #328]
  452234:	ldr	w8, [x22, #4]
  452238:	sub	w8, w8, #0x1
  45223c:	str	w8, [x22, #4]
  452240:	ldr	w8, [x19, #308]
  452244:	sub	w8, w8, #0x1
  452248:	str	w8, [x19, #308]
  45224c:	str	x24, [x19, #296]
  452250:	tbz	w20, #2, 452144 <feof@plt+0x4f444>
  452254:	ldr	x8, [x19, #256]
  452258:	cmp	x8, #0xff
  45225c:	b.ne	452288 <feof@plt+0x4f588>  // b.any
  452260:	ldp	x8, x2, [x19, #272]
  452264:	mov	w1, #0xff                  	// #255
  452268:	mov	x0, x19
  45226c:	strb	wzr, [x19, #255]
  452270:	blr	x8
  452274:	ldr	x9, [x19, #320]
  452278:	mov	x8, xzr
  45227c:	str	xzr, [x19, #256]
  452280:	add	x9, x9, #0x1
  452284:	str	x9, [x19, #320]
  452288:	add	x9, x8, #0x1
  45228c:	mov	w10, #0x2e                  	// #46
  452290:	str	x9, [x19, #256]
  452294:	strb	w10, [x19, x8]
  452298:	strb	w10, [x19, #264]
  45229c:	ldr	x8, [x21, #8]
  4522a0:	ldr	x21, [x8, #16]
  4522a4:	ldr	w8, [x21]
  4522a8:	cmp	w8, #0x47
  4522ac:	b.ne	452478 <feof@plt+0x4f778>  // b.any
  4522b0:	adrp	x24, 466000 <_obstack_memory_used@@Base+0x10dd8>
  4522b4:	mov	x22, xzr
  4522b8:	add	x24, x24, #0xdda
  4522bc:	b	4522dc <feof@plt+0x4f5dc>
  4522c0:	add	x22, x22, #0x1
  4522c4:	add	x9, x8, #0x1
  4522c8:	cmp	x22, #0xd
  4522cc:	str	x9, [x19, #256]
  4522d0:	strb	w25, [x19, x8]
  4522d4:	strb	w25, [x19, #264]
  4522d8:	b.eq	452318 <feof@plt+0x4f618>  // b.none
  4522dc:	ldr	x8, [x19, #256]
  4522e0:	ldrb	w25, [x24, x22]
  4522e4:	cmp	x8, #0xff
  4522e8:	b.ne	4522c0 <feof@plt+0x4f5c0>  // b.any
  4522ec:	ldp	x8, x2, [x19, #272]
  4522f0:	mov	w1, #0xff                  	// #255
  4522f4:	mov	x0, x19
  4522f8:	strb	wzr, [x19, #255]
  4522fc:	blr	x8
  452300:	ldr	x9, [x19, #320]
  452304:	mov	x8, xzr
  452308:	str	xzr, [x19, #256]
  45230c:	add	x9, x9, #0x1
  452310:	str	x9, [x19, #320]
  452314:	b	4522c0 <feof@plt+0x4f5c0>
  452318:	ldr	w8, [x21, #16]
  45231c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  452320:	add	x1, x1, #0xdb1
  452324:	mov	x0, sp
  452328:	add	w2, w8, #0x1
  45232c:	bl	402880 <sprintf@plt>
  452330:	mov	x0, sp
  452334:	bl	4026d0 <strlen@plt>
  452338:	cbz	x0, 4523a0 <feof@plt+0x4f6a0>
  45233c:	mov	x22, x0
  452340:	mov	x24, sp
  452344:	b	452364 <feof@plt+0x4f664>
  452348:	add	x9, x8, #0x1
  45234c:	subs	x22, x22, #0x1
  452350:	add	x24, x24, #0x1
  452354:	str	x9, [x19, #256]
  452358:	strb	w25, [x19, x8]
  45235c:	strb	w25, [x19, #264]
  452360:	b.eq	4523a0 <feof@plt+0x4f6a0>  // b.none
  452364:	ldr	x8, [x19, #256]
  452368:	ldrb	w25, [x24]
  45236c:	cmp	x8, #0xff
  452370:	b.ne	452348 <feof@plt+0x4f648>  // b.any
  452374:	ldp	x8, x2, [x19, #272]
  452378:	mov	w1, #0xff                  	// #255
  45237c:	mov	x0, x19
  452380:	strb	wzr, [x19, #255]
  452384:	blr	x8
  452388:	ldr	x9, [x19, #320]
  45238c:	mov	x8, xzr
  452390:	str	xzr, [x19, #256]
  452394:	add	x9, x9, #0x1
  452398:	str	x9, [x19, #320]
  45239c:	b	452348 <feof@plt+0x4f648>
  4523a0:	ldr	x8, [x19, #256]
  4523a4:	cmp	x8, #0xff
  4523a8:	b.ne	4523d4 <feof@plt+0x4f6d4>  // b.any
  4523ac:	ldp	x8, x2, [x19, #272]
  4523b0:	mov	w1, #0xff                  	// #255
  4523b4:	mov	x0, x19
  4523b8:	strb	wzr, [x19, #255]
  4523bc:	blr	x8
  4523c0:	ldr	x9, [x19, #320]
  4523c4:	mov	x8, xzr
  4523c8:	str	xzr, [x19, #256]
  4523cc:	add	x9, x9, #0x1
  4523d0:	str	x9, [x19, #320]
  4523d4:	add	x9, x8, #0x1
  4523d8:	mov	w10, #0x7d                  	// #125
  4523dc:	str	x9, [x19, #256]
  4523e0:	strb	w10, [x19, x8]
  4523e4:	ldr	x8, [x19, #256]
  4523e8:	strb	w10, [x19, #264]
  4523ec:	cmp	x8, #0xff
  4523f0:	b.ne	45241c <feof@plt+0x4f71c>  // b.any
  4523f4:	ldp	x8, x2, [x19, #272]
  4523f8:	mov	w1, #0xff                  	// #255
  4523fc:	mov	x0, x19
  452400:	strb	wzr, [x19, #255]
  452404:	blr	x8
  452408:	ldr	x9, [x19, #320]
  45240c:	mov	x8, xzr
  452410:	str	xzr, [x19, #256]
  452414:	add	x9, x9, #0x1
  452418:	str	x9, [x19, #320]
  45241c:	add	x9, x8, #0x1
  452420:	mov	w22, #0x3a                  	// #58
  452424:	str	x9, [x19, #256]
  452428:	strb	w22, [x19, x8]
  45242c:	ldr	x8, [x19, #256]
  452430:	strb	w22, [x19, #264]
  452434:	cmp	x8, #0xff
  452438:	b.ne	452464 <feof@plt+0x4f764>  // b.any
  45243c:	ldp	x8, x2, [x19, #272]
  452440:	mov	w1, #0xff                  	// #255
  452444:	mov	x0, x19
  452448:	strb	wzr, [x19, #255]
  45244c:	blr	x8
  452450:	ldr	x9, [x19, #320]
  452454:	mov	x8, xzr
  452458:	str	xzr, [x19, #256]
  45245c:	add	x9, x9, #0x1
  452460:	str	x9, [x19, #320]
  452464:	add	x9, x8, #0x1
  452468:	str	x9, [x19, #256]
  45246c:	strb	w22, [x19, x8]
  452470:	strb	w22, [x19, #264]
  452474:	ldr	x21, [x21, #8]
  452478:	ldr	w8, [x21]
  45247c:	sub	w8, w8, #0x1c
  452480:	cmp	w8, #0x34
  452484:	b.hi	4524a0 <feof@plt+0x4f7a0>  // b.pmore
  452488:	mov	w9, #0x1                   	// #1
  45248c:	lsl	x8, x9, x8
  452490:	mov	x9, #0x1f                  	// #31
  452494:	movk	x9, #0x1a, lsl #48
  452498:	tst	x8, x9
  45249c:	b.ne	452474 <feof@plt+0x4f774>  // b.any
  4524a0:	cbz	x21, 4524bc <feof@plt+0x4f7bc>
  4524a4:	ldr	w8, [x21, #4]
  4524a8:	cmp	w8, #0x1
  4524ac:	b.gt	4524bc <feof@plt+0x4f7bc>
  4524b0:	ldr	w9, [x19, #308]
  4524b4:	cmp	w9, #0x401
  4524b8:	b.lt	4524cc <feof@plt+0x4f7cc>  // b.tstop
  4524bc:	mov	w8, #0x1                   	// #1
  4524c0:	str	w8, [x19, #304]
  4524c4:	str	x23, [x19, #288]
  4524c8:	b	45203c <feof@plt+0x4f33c>
  4524cc:	add	w8, w8, #0x1
  4524d0:	str	w8, [x21, #4]
  4524d4:	ldr	x8, [x19, #328]
  4524d8:	add	w9, w9, #0x1
  4524dc:	str	w9, [x19, #308]
  4524e0:	mov	x9, sp
  4524e4:	mov	x0, x19
  4524e8:	mov	w1, w20
  4524ec:	mov	x2, x21
  4524f0:	stp	x21, x8, [sp]
  4524f4:	str	x9, [x19, #328]
  4524f8:	bl	449d30 <feof@plt+0x47030>
  4524fc:	ldr	x8, [sp, #8]
  452500:	str	x8, [x19, #328]
  452504:	ldr	w8, [x21, #4]
  452508:	sub	w8, w8, #0x1
  45250c:	str	w8, [x21, #4]
  452510:	ldr	w8, [x19, #308]
  452514:	sub	w8, w8, #0x1
  452518:	str	w8, [x19, #308]
  45251c:	b	4524c4 <feof@plt+0x4f7c4>
  452520:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  452524:	ldr	q0, [x8]
  452528:	str	xzr, [x0, #16]
  45252c:	str	wzr, [x0, #24]
  452530:	str	q0, [x0]
  452534:	ret
  452538:	ldr	q0, [x0]
  45253c:	mov	x0, x1
  452540:	str	q0, [x1]
  452544:	ret
  452548:	stp	x29, x30, [sp, #-80]!
  45254c:	str	x25, [sp, #16]
  452550:	stp	x24, x23, [sp, #32]
  452554:	stp	x22, x21, [sp, #48]
  452558:	stp	x20, x19, [sp, #64]
  45255c:	ldp	w24, w23, [x0, #20]
  452560:	ldr	w8, [x0, #16]
  452564:	mov	x19, x1
  452568:	mov	x20, x0
  45256c:	mov	x29, sp
  452570:	adds	w25, w8, w23
  452574:	str	w25, [x0, #16]
  452578:	b.cc	452584 <feof@plt+0x4f884>  // b.lo, b.ul, b.last
  45257c:	add	w24, w24, #0x1
  452580:	str	w24, [x20, #20]
  452584:	cmp	w23, #0x38
  452588:	mov	w8, #0x78                  	// #120
  45258c:	mov	w9, #0x38                  	// #56
  452590:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  452594:	add	x21, x20, #0x1c
  452598:	sub	w22, w8, w23
  45259c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4525a0:	add	x0, x21, x23
  4525a4:	add	x1, x1, #0x10
  4525a8:	mov	x2, x22
  4525ac:	bl	402640 <memcpy@plt>
  4525b0:	add	x9, x22, x23
  4525b4:	lsl	w8, w25, #3
  4525b8:	extr	w10, w24, w25, #29
  4525bc:	add	x11, x21, x9
  4525c0:	add	x1, x9, #0x8
  4525c4:	mov	x0, x21
  4525c8:	mov	x2, x20
  4525cc:	stp	w8, w10, [x11]
  4525d0:	bl	4525f8 <feof@plt+0x4f8f8>
  4525d4:	ldr	q0, [x20]
  4525d8:	mov	x0, x19
  4525dc:	ldr	x25, [sp, #16]
  4525e0:	str	q0, [x19]
  4525e4:	ldp	x20, x19, [sp, #64]
  4525e8:	ldp	x22, x21, [sp, #48]
  4525ec:	ldp	x24, x23, [sp, #32]
  4525f0:	ldp	x29, x30, [sp], #80
  4525f4:	ret
  4525f8:	stp	x29, x30, [sp, #-96]!
  4525fc:	stp	x28, x27, [sp, #16]
  452600:	stp	x26, x25, [sp, #32]
  452604:	stp	x24, x23, [sp, #48]
  452608:	stp	x22, x21, [sp, #64]
  45260c:	stp	x20, x19, [sp, #80]
  452610:	ldp	w10, w13, [x2, #12]
  452614:	ldr	w14, [x2, #20]
  452618:	ldp	w8, w9, [x2]
  45261c:	ldr	w11, [x2, #8]
  452620:	add	w13, w13, w1
  452624:	and	x12, x1, #0xfffffffffffffffc
  452628:	cmp	x13, x1
  45262c:	lsr	x15, x1, #32
  452630:	add	x12, x0, x12
  452634:	str	w13, [x2, #16]
  452638:	cinc	w13, w15, cc  // cc = lo, ul, last
  45263c:	add	w13, w14, w13
  452640:	cmp	x12, x0
  452644:	str	w13, [x2, #20]
  452648:	b.ls	453000 <feof@plt+0x50300>  // b.plast
  45264c:	mov	w22, #0xd391                	// #54161
  452650:	movk	w22, #0xeb86, lsl #16
  452654:	ldp	w29, w25, [x0]
  452658:	bic	w4, w10, w9
  45265c:	and	w5, w11, w9
  452660:	orr	w4, w5, w4
  452664:	add	w4, w8, w4
  452668:	mov	w19, #0xa478                	// #42104
  45266c:	add	w4, w4, w29
  452670:	movk	w19, #0xd76a, lsl #16
  452674:	add	w4, w4, w19
  452678:	ror	w4, w4, #25
  45267c:	add	w4, w4, w9
  452680:	bic	w19, w11, w4
  452684:	and	w20, w9, w4
  452688:	add	w5, w10, w25
  45268c:	orr	w19, w20, w19
  452690:	add	w5, w5, w19
  452694:	mov	w19, #0xb756                	// #46934
  452698:	movk	w19, #0xe8c7, lsl #16
  45269c:	ldp	w23, w28, [x0, #8]
  4526a0:	add	w5, w5, w19
  4526a4:	ror	w5, w5, #20
  4526a8:	add	w5, w5, w4
  4526ac:	bic	w19, w9, w5
  4526b0:	and	w20, w4, w5
  4526b4:	add	w6, w11, w23
  4526b8:	orr	w19, w20, w19
  4526bc:	add	w6, w6, w19
  4526c0:	mov	w19, #0x70db                	// #28891
  4526c4:	ldp	w24, w14, [x0, #16]
  4526c8:	movk	w19, #0x2420, lsl #16
  4526cc:	add	w6, w6, w19
  4526d0:	ror	w6, w6, #15
  4526d4:	add	w6, w6, w5
  4526d8:	add	w20, w24, w4
  4526dc:	bic	w4, w4, w6
  4526e0:	and	w19, w5, w6
  4526e4:	add	w7, w9, w28
  4526e8:	orr	w4, w19, w4
  4526ec:	add	w4, w7, w4
  4526f0:	mov	w7, #0xceee                	// #52974
  4526f4:	movk	w7, #0xc1bd, lsl #16
  4526f8:	add	w4, w4, w7
  4526fc:	ror	w4, w4, #10
  452700:	add	w4, w4, w6
  452704:	add	w19, w14, w5
  452708:	bic	w5, w5, w4
  45270c:	and	w7, w6, w4
  452710:	orr	w5, w7, w5
  452714:	add	w5, w20, w5
  452718:	mov	w20, #0xfaf                 	// #4015
  45271c:	ldp	w27, w17, [x0, #24]
  452720:	movk	w20, #0xf57c, lsl #16
  452724:	add	w5, w5, w20
  452728:	ror	w5, w5, #25
  45272c:	add	w5, w5, w4
  452730:	add	w7, w27, w6
  452734:	bic	w6, w6, w5
  452738:	and	w20, w4, w5
  45273c:	orr	w6, w20, w6
  452740:	add	w6, w19, w6
  452744:	mov	w19, #0xc62a                	// #50730
  452748:	movk	w19, #0x4787, lsl #16
  45274c:	add	w6, w6, w19
  452750:	ror	w6, w6, #20
  452754:	add	w6, w6, w5
  452758:	add	w20, w17, w4
  45275c:	bic	w4, w4, w6
  452760:	and	w19, w5, w6
  452764:	orr	w4, w19, w4
  452768:	add	w4, w7, w4
  45276c:	mov	w7, #0x4613                	// #17939
  452770:	ldp	w13, w26, [x0, #32]
  452774:	movk	w7, #0xa830, lsl #16
  452778:	add	w4, w4, w7
  45277c:	ror	w4, w4, #15
  452780:	add	w4, w4, w6
  452784:	add	w19, w13, w5
  452788:	bic	w5, w5, w4
  45278c:	and	w7, w6, w4
  452790:	orr	w5, w7, w5
  452794:	add	w5, w20, w5
  452798:	mov	w20, #0x9501                	// #38145
  45279c:	movk	w20, #0xfd46, lsl #16
  4527a0:	add	w5, w5, w20
  4527a4:	ror	w5, w5, #10
  4527a8:	add	w5, w5, w4
  4527ac:	add	w7, w26, w6
  4527b0:	bic	w6, w6, w5
  4527b4:	and	w20, w4, w5
  4527b8:	orr	w6, w20, w6
  4527bc:	add	w6, w19, w6
  4527c0:	mov	w19, #0x98d8                	// #39128
  4527c4:	ldp	w16, w30, [x0, #40]
  4527c8:	movk	w19, #0x6980, lsl #16
  4527cc:	add	w6, w6, w19
  4527d0:	ror	w6, w6, #25
  4527d4:	add	w6, w6, w5
  4527d8:	add	w20, w16, w4
  4527dc:	bic	w4, w4, w6
  4527e0:	and	w19, w5, w6
  4527e4:	orr	w4, w19, w4
  4527e8:	add	w4, w7, w4
  4527ec:	mov	w7, #0xf7af                	// #63407
  4527f0:	movk	w7, #0x8b44, lsl #16
  4527f4:	add	w4, w4, w7
  4527f8:	ror	w4, w4, #20
  4527fc:	add	w4, w4, w6
  452800:	add	w19, w30, w5
  452804:	bic	w5, w5, w4
  452808:	and	w7, w6, w4
  45280c:	orr	w5, w7, w5
  452810:	ldp	w1, w15, [x0, #48]
  452814:	add	w5, w20, w5
  452818:	mov	w20, #0xffff5bb1            	// #-42063
  45281c:	add	w5, w5, w20
  452820:	ror	w5, w5, #15
  452824:	add	w5, w5, w4
  452828:	add	w7, w1, w6
  45282c:	bic	w6, w6, w5
  452830:	and	w20, w4, w5
  452834:	orr	w6, w20, w6
  452838:	add	w6, w19, w6
  45283c:	mov	w19, #0xd7be                	// #55230
  452840:	movk	w19, #0x895c, lsl #16
  452844:	add	w6, w6, w19
  452848:	ror	w6, w6, #10
  45284c:	add	w6, w6, w5
  452850:	add	w20, w15, w4
  452854:	bic	w4, w4, w6
  452858:	and	w19, w5, w6
  45285c:	orr	w4, w19, w4
  452860:	add	w4, w7, w4
  452864:	mov	w7, #0x1122                	// #4386
  452868:	ldp	w3, w18, [x0, #56]
  45286c:	movk	w7, #0x6b90, lsl #16
  452870:	add	w4, w4, w7
  452874:	ror	w4, w4, #25
  452878:	add	w4, w4, w6
  45287c:	add	w19, w3, w5
  452880:	bic	w5, w5, w4
  452884:	and	w7, w6, w4
  452888:	orr	w5, w7, w5
  45288c:	add	w5, w20, w5
  452890:	mov	w20, #0x7193                	// #29075
  452894:	movk	w20, #0xfd98, lsl #16
  452898:	add	w5, w5, w20
  45289c:	ror	w5, w5, #20
  4528a0:	add	w5, w5, w4
  4528a4:	add	w7, w18, w6
  4528a8:	bic	w6, w6, w5
  4528ac:	and	w20, w4, w5
  4528b0:	orr	w6, w20, w6
  4528b4:	add	w6, w19, w6
  4528b8:	mov	w19, #0x438e                	// #17294
  4528bc:	movk	w19, #0xa679, lsl #16
  4528c0:	add	w6, w6, w19
  4528c4:	ror	w6, w6, #15
  4528c8:	add	w6, w6, w5
  4528cc:	add	w20, w25, w4
  4528d0:	bic	w4, w4, w6
  4528d4:	and	w19, w5, w6
  4528d8:	orr	w4, w19, w4
  4528dc:	mov	w21, #0x821                 	// #2081
  4528e0:	add	w4, w7, w4
  4528e4:	movk	w21, #0x49b4, lsl #16
  4528e8:	add	w4, w4, w21
  4528ec:	ror	w4, w4, #10
  4528f0:	add	w4, w4, w6
  4528f4:	add	w19, w27, w5
  4528f8:	bic	w7, w6, w5
  4528fc:	and	w5, w4, w5
  452900:	orr	w5, w5, w7
  452904:	mov	w21, #0x2562                	// #9570
  452908:	add	w5, w20, w5
  45290c:	movk	w21, #0xf61e, lsl #16
  452910:	add	w5, w5, w21
  452914:	ror	w5, w5, #27
  452918:	add	w5, w5, w4
  45291c:	add	w7, w30, w6
  452920:	bic	w20, w4, w6
  452924:	and	w6, w5, w6
  452928:	orr	w6, w6, w20
  45292c:	mov	w21, #0xb340                	// #45888
  452930:	add	w6, w19, w6
  452934:	movk	w21, #0xc040, lsl #16
  452938:	add	w6, w6, w21
  45293c:	ror	w6, w6, #23
  452940:	add	w6, w6, w5
  452944:	add	w20, w29, w4
  452948:	bic	w19, w5, w4
  45294c:	and	w4, w6, w4
  452950:	orr	w4, w4, w19
  452954:	mov	w21, #0x5a51                	// #23121
  452958:	add	w4, w7, w4
  45295c:	movk	w21, #0x265e, lsl #16
  452960:	add	w4, w4, w21
  452964:	ror	w4, w4, #18
  452968:	add	w4, w4, w6
  45296c:	add	w19, w14, w5
  452970:	bic	w7, w6, w5
  452974:	and	w5, w4, w5
  452978:	orr	w5, w5, w7
  45297c:	mov	w21, #0xc7aa                	// #51114
  452980:	add	w5, w20, w5
  452984:	movk	w21, #0xe9b6, lsl #16
  452988:	add	w5, w5, w21
  45298c:	ror	w5, w5, #12
  452990:	add	w5, w5, w4
  452994:	add	w7, w16, w6
  452998:	bic	w20, w4, w6
  45299c:	and	w6, w5, w6
  4529a0:	orr	w6, w6, w20
  4529a4:	mov	w21, #0x105d                	// #4189
  4529a8:	add	w6, w19, w6
  4529ac:	movk	w21, #0xd62f, lsl #16
  4529b0:	add	w6, w6, w21
  4529b4:	ror	w6, w6, #27
  4529b8:	add	w6, w6, w5
  4529bc:	add	w20, w18, w4
  4529c0:	bic	w19, w5, w4
  4529c4:	and	w4, w6, w4
  4529c8:	orr	w4, w4, w19
  4529cc:	mov	w21, #0x1453                	// #5203
  4529d0:	add	w4, w7, w4
  4529d4:	movk	w21, #0x244, lsl #16
  4529d8:	add	w4, w4, w21
  4529dc:	ror	w4, w4, #23
  4529e0:	add	w4, w4, w6
  4529e4:	add	w19, w24, w5
  4529e8:	bic	w7, w6, w5
  4529ec:	and	w5, w4, w5
  4529f0:	orr	w5, w5, w7
  4529f4:	mov	w21, #0xe681                	// #59009
  4529f8:	add	w5, w20, w5
  4529fc:	movk	w21, #0xd8a1, lsl #16
  452a00:	add	w5, w5, w21
  452a04:	ror	w5, w5, #18
  452a08:	add	w5, w5, w4
  452a0c:	add	w7, w26, w6
  452a10:	bic	w20, w4, w6
  452a14:	and	w6, w5, w6
  452a18:	orr	w6, w6, w20
  452a1c:	mov	w21, #0xfbc8                	// #64456
  452a20:	add	w6, w19, w6
  452a24:	movk	w21, #0xe7d3, lsl #16
  452a28:	add	w6, w6, w21
  452a2c:	ror	w6, w6, #12
  452a30:	add	w6, w6, w5
  452a34:	add	w20, w3, w4
  452a38:	bic	w19, w5, w4
  452a3c:	and	w4, w6, w4
  452a40:	orr	w4, w4, w19
  452a44:	mov	w21, #0xcde6                	// #52710
  452a48:	add	w4, w7, w4
  452a4c:	movk	w21, #0x21e1, lsl #16
  452a50:	add	w4, w4, w21
  452a54:	ror	w4, w4, #27
  452a58:	add	w4, w4, w6
  452a5c:	add	w19, w28, w5
  452a60:	bic	w7, w6, w5
  452a64:	and	w5, w4, w5
  452a68:	orr	w5, w5, w7
  452a6c:	mov	w21, #0x7d6                 	// #2006
  452a70:	add	w5, w20, w5
  452a74:	movk	w21, #0xc337, lsl #16
  452a78:	add	w5, w5, w21
  452a7c:	ror	w5, w5, #23
  452a80:	add	w5, w5, w4
  452a84:	add	w7, w13, w6
  452a88:	bic	w20, w4, w6
  452a8c:	and	w6, w5, w6
  452a90:	orr	w6, w6, w20
  452a94:	mov	w21, #0xd87                 	// #3463
  452a98:	add	w6, w19, w6
  452a9c:	movk	w21, #0xf4d5, lsl #16
  452aa0:	add	w6, w6, w21
  452aa4:	ror	w6, w6, #18
  452aa8:	add	w6, w6, w5
  452aac:	add	w20, w15, w4
  452ab0:	bic	w19, w5, w4
  452ab4:	and	w4, w6, w4
  452ab8:	orr	w4, w4, w19
  452abc:	mov	w21, #0x14ed                	// #5357
  452ac0:	add	w4, w7, w4
  452ac4:	movk	w21, #0x455a, lsl #16
  452ac8:	add	w4, w4, w21
  452acc:	ror	w4, w4, #12
  452ad0:	add	w4, w4, w6
  452ad4:	add	w19, w23, w5
  452ad8:	bic	w7, w6, w5
  452adc:	and	w5, w4, w5
  452ae0:	orr	w5, w5, w7
  452ae4:	mov	w21, #0xe905                	// #59653
  452ae8:	add	w5, w20, w5
  452aec:	movk	w21, #0xa9e3, lsl #16
  452af0:	add	w5, w5, w21
  452af4:	ror	w5, w5, #27
  452af8:	add	w5, w5, w4
  452afc:	add	w7, w17, w6
  452b00:	bic	w20, w4, w6
  452b04:	and	w6, w5, w6
  452b08:	orr	w6, w6, w20
  452b0c:	mov	w21, #0xa3f8                	// #41976
  452b10:	add	w6, w19, w6
  452b14:	movk	w21, #0xfcef, lsl #16
  452b18:	add	w6, w6, w21
  452b1c:	ror	w6, w6, #23
  452b20:	add	w6, w6, w5
  452b24:	add	w20, w1, w4
  452b28:	bic	w19, w5, w4
  452b2c:	and	w4, w6, w4
  452b30:	orr	w4, w4, w19
  452b34:	add	w4, w7, w4
  452b38:	mov	w7, #0x2d9                 	// #729
  452b3c:	movk	w7, #0x676f, lsl #16
  452b40:	add	w4, w4, w7
  452b44:	ror	w4, w4, #18
  452b48:	add	w4, w4, w6
  452b4c:	eor	w7, w4, w6
  452b50:	and	w19, w7, w5
  452b54:	eor	w19, w19, w6
  452b58:	add	w19, w20, w19
  452b5c:	mov	w20, #0x4c8a                	// #19594
  452b60:	movk	w20, #0x8d2a, lsl #16
  452b64:	add	w19, w19, w20
  452b68:	ror	w19, w19, #12
  452b6c:	add	w19, w19, w4
  452b70:	add	w5, w14, w5
  452b74:	eor	w7, w7, w19
  452b78:	mov	w20, #0x3942                	// #14658
  452b7c:	add	w5, w5, w7
  452b80:	movk	w20, #0xfffa, lsl #16
  452b84:	add	w5, w5, w20
  452b88:	ror	w5, w5, #28
  452b8c:	add	w7, w30, w4
  452b90:	eor	w4, w19, w4
  452b94:	add	w5, w5, w19
  452b98:	add	w6, w13, w6
  452b9c:	eor	w4, w4, w5
  452ba0:	mov	w20, #0xf681                	// #63105
  452ba4:	add	w4, w6, w4
  452ba8:	movk	w20, #0x8771, lsl #16
  452bac:	add	w4, w4, w20
  452bb0:	ror	w4, w4, #21
  452bb4:	add	w6, w3, w19
  452bb8:	eor	w19, w5, w19
  452bbc:	add	w4, w4, w5
  452bc0:	eor	w19, w19, w4
  452bc4:	mov	w20, #0x6122                	// #24866
  452bc8:	add	w7, w7, w19
  452bcc:	movk	w20, #0x6d9d, lsl #16
  452bd0:	add	w7, w7, w20
  452bd4:	ror	w7, w7, #16
  452bd8:	add	w19, w25, w5
  452bdc:	eor	w5, w4, w5
  452be0:	add	w7, w7, w4
  452be4:	eor	w5, w5, w7
  452be8:	mov	w20, #0x380c                	// #14348
  452bec:	add	w5, w6, w5
  452bf0:	movk	w20, #0xfde5, lsl #16
  452bf4:	add	w5, w5, w20
  452bf8:	ror	w5, w5, #9
  452bfc:	add	w6, w24, w4
  452c00:	eor	w4, w7, w4
  452c04:	add	w5, w5, w7
  452c08:	eor	w4, w4, w5
  452c0c:	mov	w20, #0xea44                	// #59972
  452c10:	add	w4, w19, w4
  452c14:	movk	w20, #0xa4be, lsl #16
  452c18:	add	w4, w4, w20
  452c1c:	ror	w4, w4, #28
  452c20:	add	w19, w17, w7
  452c24:	eor	w7, w5, w7
  452c28:	add	w4, w4, w5
  452c2c:	eor	w7, w7, w4
  452c30:	mov	w20, #0xcfa9                	// #53161
  452c34:	add	w6, w6, w7
  452c38:	movk	w20, #0x4bde, lsl #16
  452c3c:	add	w6, w6, w20
  452c40:	ror	w6, w6, #21
  452c44:	add	w7, w16, w5
  452c48:	eor	w5, w4, w5
  452c4c:	add	w6, w6, w4
  452c50:	eor	w5, w5, w6
  452c54:	mov	w20, #0x4b60                	// #19296
  452c58:	add	w5, w19, w5
  452c5c:	movk	w20, #0xf6bb, lsl #16
  452c60:	add	w5, w5, w20
  452c64:	ror	w5, w5, #16
  452c68:	add	w19, w15, w4
  452c6c:	eor	w4, w6, w4
  452c70:	add	w5, w5, w6
  452c74:	eor	w4, w4, w5
  452c78:	mov	w20, #0xbc70                	// #48240
  452c7c:	add	w4, w7, w4
  452c80:	movk	w20, #0xbebf, lsl #16
  452c84:	add	w4, w4, w20
  452c88:	ror	w4, w4, #9
  452c8c:	add	w7, w29, w6
  452c90:	eor	w6, w5, w6
  452c94:	add	w4, w4, w5
  452c98:	eor	w6, w6, w4
  452c9c:	mov	w20, #0x7ec6                	// #32454
  452ca0:	add	w6, w19, w6
  452ca4:	movk	w20, #0x289b, lsl #16
  452ca8:	add	w6, w6, w20
  452cac:	ror	w6, w6, #28
  452cb0:	add	w19, w28, w5
  452cb4:	eor	w5, w4, w5
  452cb8:	add	w6, w6, w4
  452cbc:	eor	w5, w5, w6
  452cc0:	mov	w20, #0x27fa                	// #10234
  452cc4:	add	w5, w7, w5
  452cc8:	movk	w20, #0xeaa1, lsl #16
  452ccc:	add	w5, w5, w20
  452cd0:	ror	w5, w5, #21
  452cd4:	add	w7, w27, w4
  452cd8:	eor	w4, w6, w4
  452cdc:	add	w5, w5, w6
  452ce0:	eor	w4, w4, w5
  452ce4:	mov	w20, #0x3085                	// #12421
  452ce8:	add	w4, w19, w4
  452cec:	movk	w20, #0xd4ef, lsl #16
  452cf0:	add	w4, w4, w20
  452cf4:	ror	w4, w4, #16
  452cf8:	add	w19, w26, w6
  452cfc:	eor	w6, w5, w6
  452d00:	add	w4, w4, w5
  452d04:	eor	w6, w6, w4
  452d08:	mov	w20, #0x1d05                	// #7429
  452d0c:	add	w6, w7, w6
  452d10:	movk	w20, #0x488, lsl #16
  452d14:	add	w6, w6, w20
  452d18:	ror	w6, w6, #9
  452d1c:	add	w7, w1, w5
  452d20:	eor	w5, w4, w5
  452d24:	add	w6, w6, w4
  452d28:	eor	w5, w5, w6
  452d2c:	mov	w20, #0xd039                	// #53305
  452d30:	add	w5, w19, w5
  452d34:	movk	w20, #0xd9d4, lsl #16
  452d38:	add	w5, w5, w20
  452d3c:	ror	w5, w5, #28
  452d40:	add	w19, w18, w4
  452d44:	eor	w4, w6, w4
  452d48:	add	w5, w5, w6
  452d4c:	eor	w4, w4, w5
  452d50:	mov	w20, #0x99e5                	// #39397
  452d54:	add	w4, w7, w4
  452d58:	movk	w20, #0xe6db, lsl #16
  452d5c:	add	w4, w4, w20
  452d60:	ror	w4, w4, #21
  452d64:	eor	w7, w5, w6
  452d68:	add	w4, w4, w5
  452d6c:	eor	w7, w7, w4
  452d70:	mov	w20, #0x7cf8                	// #31992
  452d74:	add	w7, w19, w7
  452d78:	movk	w20, #0x1fa2, lsl #16
  452d7c:	add	w7, w7, w20
  452d80:	ror	w7, w7, #16
  452d84:	add	w19, w29, w5
  452d88:	eor	w5, w4, w5
  452d8c:	add	w7, w7, w4
  452d90:	add	w6, w23, w6
  452d94:	eor	w5, w5, w7
  452d98:	add	w5, w6, w5
  452d9c:	mov	w6, #0x5665                	// #22117
  452da0:	movk	w6, #0xc4ac, lsl #16
  452da4:	add	w5, w5, w6
  452da8:	ror	w5, w5, #9
  452dac:	add	w5, w5, w7
  452db0:	add	w17, w17, w4
  452db4:	orn	w4, w5, w4
  452db8:	eor	w4, w4, w7
  452dbc:	mov	w6, #0x2244                	// #8772
  452dc0:	add	w4, w19, w4
  452dc4:	movk	w6, #0xf429, lsl #16
  452dc8:	add	w4, w4, w6
  452dcc:	ror	w4, w4, #26
  452dd0:	add	w4, w4, w5
  452dd4:	orn	w6, w4, w7
  452dd8:	eor	w6, w6, w5
  452ddc:	add	w17, w17, w6
  452de0:	mov	w6, #0xff97                	// #65431
  452de4:	movk	w6, #0x432a, lsl #16
  452de8:	add	w17, w17, w6
  452dec:	ror	w17, w17, #22
  452df0:	add	w17, w17, w4
  452df4:	add	w14, w14, w5
  452df8:	orn	w5, w17, w5
  452dfc:	add	w3, w3, w7
  452e00:	eor	w5, w5, w4
  452e04:	add	w3, w3, w5
  452e08:	mov	w5, #0x23a7                	// #9127
  452e0c:	movk	w5, #0xab94, lsl #16
  452e10:	add	w3, w3, w5
  452e14:	ror	w3, w3, #17
  452e18:	add	w3, w3, w17
  452e1c:	add	w1, w1, w4
  452e20:	orn	w4, w3, w4
  452e24:	eor	w4, w4, w17
  452e28:	mov	w5, #0xa039                	// #41017
  452e2c:	add	w14, w14, w4
  452e30:	movk	w5, #0xfc93, lsl #16
  452e34:	add	w14, w14, w5
  452e38:	ror	w14, w14, #11
  452e3c:	add	w14, w14, w3
  452e40:	add	w4, w28, w17
  452e44:	orn	w17, w14, w17
  452e48:	eor	w17, w17, w3
  452e4c:	add	w17, w1, w17
  452e50:	mov	w1, #0x59c3                	// #22979
  452e54:	movk	w1, #0x655b, lsl #16
  452e58:	add	w17, w17, w1
  452e5c:	ror	w17, w17, #26
  452e60:	add	w17, w17, w14
  452e64:	orn	w1, w17, w3
  452e68:	eor	w1, w1, w14
  452e6c:	add	w1, w4, w1
  452e70:	mov	w4, #0xcc92                	// #52370
  452e74:	movk	w4, #0x8f0c, lsl #16
  452e78:	add	w1, w1, w4
  452e7c:	ror	w1, w1, #22
  452e80:	add	w1, w1, w17
  452e84:	add	w16, w16, w3
  452e88:	add	w3, w25, w14
  452e8c:	orn	w14, w1, w14
  452e90:	eor	w14, w14, w17
  452e94:	add	w14, w16, w14
  452e98:	mov	w16, #0xf47d                	// #62589
  452e9c:	movk	w16, #0xffef, lsl #16
  452ea0:	add	w14, w14, w16
  452ea4:	ror	w14, w14, #17
  452ea8:	add	w14, w14, w1
  452eac:	orn	w16, w14, w17
  452eb0:	add	w13, w13, w17
  452eb4:	eor	w16, w16, w1
  452eb8:	add	w17, w18, w1
  452ebc:	mov	w18, #0x5dd1                	// #24017
  452ec0:	add	w16, w3, w16
  452ec4:	movk	w18, #0x8584, lsl #16
  452ec8:	add	w16, w16, w18
  452ecc:	ror	w16, w16, #11
  452ed0:	add	w16, w16, w14
  452ed4:	orn	w18, w16, w1
  452ed8:	eor	w18, w18, w14
  452edc:	mov	w1, #0x7e4f                	// #32335
  452ee0:	add	w13, w13, w18
  452ee4:	movk	w1, #0x6fa8, lsl #16
  452ee8:	add	w13, w13, w1
  452eec:	ror	w13, w13, #26
  452ef0:	add	w13, w13, w16
  452ef4:	add	w18, w27, w14
  452ef8:	orn	w14, w13, w14
  452efc:	eor	w14, w14, w16
  452f00:	add	w14, w17, w14
  452f04:	mov	w17, #0xe6e0                	// #59104
  452f08:	movk	w17, #0xfe2c, lsl #16
  452f0c:	add	w14, w14, w17
  452f10:	ror	w14, w14, #22
  452f14:	add	w14, w14, w13
  452f18:	add	w15, w15, w16
  452f1c:	orn	w16, w14, w16
  452f20:	eor	w16, w16, w13
  452f24:	add	w16, w18, w16
  452f28:	mov	w18, #0x4314                	// #17172
  452f2c:	movk	w18, #0xa301, lsl #16
  452f30:	add	w16, w16, w18
  452f34:	ror	w16, w16, #17
  452f38:	add	w16, w16, w14
  452f3c:	add	w17, w24, w13
  452f40:	orn	w13, w16, w13
  452f44:	eor	w13, w13, w14
  452f48:	mov	w18, #0x11a1                	// #4513
  452f4c:	add	w13, w15, w13
  452f50:	movk	w18, #0x4e08, lsl #16
  452f54:	add	w13, w13, w18
  452f58:	ror	w13, w13, #11
  452f5c:	add	w13, w13, w16
  452f60:	add	w15, w30, w14
  452f64:	orn	w14, w13, w14
  452f68:	eor	w14, w14, w16
  452f6c:	mov	w18, #0x7e82                	// #32386
  452f70:	add	w14, w17, w14
  452f74:	movk	w18, #0xf753, lsl #16
  452f78:	add	w14, w14, w18
  452f7c:	ror	w14, w14, #26
  452f80:	add	w14, w14, w13
  452f84:	add	w17, w23, w16
  452f88:	orn	w16, w14, w16
  452f8c:	eor	w16, w16, w13
  452f90:	mov	w18, #0xf235                	// #62005
  452f94:	add	w15, w15, w16
  452f98:	movk	w18, #0xbd3a, lsl #16
  452f9c:	add	w15, w15, w18
  452fa0:	ror	w15, w15, #22
  452fa4:	add	w15, w15, w14
  452fa8:	add	w16, w26, w13
  452fac:	orn	w13, w15, w13
  452fb0:	eor	w13, w13, w14
  452fb4:	add	w13, w17, w13
  452fb8:	mov	w17, #0xd2bb                	// #53947
  452fbc:	movk	w17, #0x2ad7, lsl #16
  452fc0:	add	w13, w13, w17
  452fc4:	ror	w13, w13, #17
  452fc8:	add	w13, w13, w15
  452fcc:	add	w8, w14, w8
  452fd0:	orn	w14, w13, w14
  452fd4:	add	w9, w13, w9
  452fd8:	add	w11, w13, w11
  452fdc:	eor	w13, w14, w15
  452fe0:	add	w13, w16, w13
  452fe4:	add	w13, w13, w22
  452fe8:	ror	w13, w13, #11
  452fec:	add	x0, x0, #0x40
  452ff0:	add	w9, w9, w13
  452ff4:	cmp	x0, x12
  452ff8:	add	w10, w15, w10
  452ffc:	b.cc	452654 <feof@plt+0x4f954>  // b.lo, b.ul, b.last
  453000:	stp	w8, w9, [x2]
  453004:	stp	w11, w10, [x2, #8]
  453008:	ldp	x20, x19, [sp, #80]
  45300c:	ldp	x22, x21, [sp, #64]
  453010:	ldp	x24, x23, [sp, #48]
  453014:	ldp	x26, x25, [sp, #32]
  453018:	ldp	x28, x27, [sp, #16]
  45301c:	ldp	x29, x30, [sp], #96
  453020:	ret
  453024:	stp	x29, x30, [sp, #-80]!
  453028:	stp	x28, x25, [sp, #16]
  45302c:	stp	x24, x23, [sp, #32]
  453030:	stp	x22, x21, [sp, #48]
  453034:	stp	x20, x19, [sp, #64]
  453038:	mov	x29, sp
  45303c:	sub	sp, sp, #0x1, lsl #12
  453040:	sub	sp, sp, #0xf0
  453044:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453048:	ldr	q0, [x8]
  45304c:	mov	x19, x1
  453050:	mov	x21, x0
  453054:	mov	x20, xzr
  453058:	sub	x22, x29, #0xa0
  45305c:	add	x23, sp, #0x8
  453060:	mov	w24, #0x1000                	// #4096
  453064:	str	q0, [x22]
  453068:	stur	xzr, [x29, #-144]
  45306c:	stur	wzr, [x29, #-136]
  453070:	add	x0, x23, x20
  453074:	sub	x2, x24, x20
  453078:	mov	w1, #0x1                   	// #1
  45307c:	mov	x3, x21
  453080:	bl	402650 <fread@plt>
  453084:	add	x20, x0, x20
  453088:	cbz	x0, 453094 <feof@plt+0x50394>
  45308c:	cmp	x20, #0x1, lsl #12
  453090:	b.cc	453070 <feof@plt+0x50370>  // b.lo, b.ul, b.last
  453094:	cbz	x0, 4530b0 <feof@plt+0x503b0>
  453098:	add	x0, sp, #0x8
  45309c:	sub	x2, x29, #0xa0
  4530a0:	mov	w1, #0x1000                	// #4096
  4530a4:	bl	4525f8 <feof@plt+0x4f8f8>
  4530a8:	mov	x20, xzr
  4530ac:	b	453070 <feof@plt+0x50370>
  4530b0:	mov	x0, x21
  4530b4:	bl	402c40 <ferror@plt>
  4530b8:	cbz	w0, 4530c4 <feof@plt+0x503c4>
  4530bc:	mov	w0, #0x1                   	// #1
  4530c0:	b	453154 <feof@plt+0x50454>
  4530c4:	cbz	x20, 4530d8 <feof@plt+0x503d8>
  4530c8:	add	x0, sp, #0x8
  4530cc:	sub	x2, x29, #0xa0
  4530d0:	mov	x1, x20
  4530d4:	bl	453174 <feof@plt+0x50474>
  4530d8:	ldp	w24, w23, [x29, #-140]
  4530dc:	ldur	w8, [x29, #-144]
  4530e0:	adds	w25, w8, w23
  4530e4:	stur	w25, [x29, #-144]
  4530e8:	b.cc	4530f4 <feof@plt+0x503f4>  // b.lo, b.ul, b.last
  4530ec:	add	w24, w24, #0x1
  4530f0:	stur	w24, [x29, #-140]
  4530f4:	cmp	w23, #0x38
  4530f8:	mov	w8, #0x78                  	// #120
  4530fc:	mov	w9, #0x38                  	// #56
  453100:	sub	x10, x29, #0xa0
  453104:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  453108:	add	x20, x10, #0x1c
  45310c:	sub	w21, w8, w23
  453110:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453114:	add	x0, x20, x23
  453118:	add	x1, x1, #0x10
  45311c:	mov	x2, x21
  453120:	bl	402640 <memcpy@plt>
  453124:	add	x9, x21, x23
  453128:	lsl	w8, w25, #3
  45312c:	extr	w10, w24, w25, #29
  453130:	add	x11, x20, x9
  453134:	add	x1, x9, #0x8
  453138:	sub	x2, x29, #0xa0
  45313c:	mov	x0, x20
  453140:	stp	w8, w10, [x11]
  453144:	bl	4525f8 <feof@plt+0x4f8f8>
  453148:	ldr	q0, [x22]
  45314c:	mov	w0, wzr
  453150:	str	q0, [x19]
  453154:	add	sp, sp, #0x1, lsl #12
  453158:	add	sp, sp, #0xf0
  45315c:	ldp	x20, x19, [sp, #64]
  453160:	ldp	x22, x21, [sp, #48]
  453164:	ldp	x24, x23, [sp, #32]
  453168:	ldp	x28, x25, [sp, #16]
  45316c:	ldp	x29, x30, [sp], #80
  453170:	ret
  453174:	stp	x29, x30, [sp, #-80]!
  453178:	stp	x24, x23, [sp, #32]
  45317c:	stp	x22, x21, [sp, #48]
  453180:	stp	x20, x19, [sp, #64]
  453184:	ldr	w23, [x2, #24]
  453188:	mov	x19, x2
  45318c:	mov	x20, x1
  453190:	mov	x21, x0
  453194:	str	x25, [sp, #16]
  453198:	mov	x29, sp
  45319c:	cbz	w23, 453210 <feof@plt+0x50510>
  4531a0:	mov	w8, #0x80                  	// #128
  4531a4:	sub	x8, x8, x23
  4531a8:	cmp	x8, x20
  4531ac:	add	x9, x19, x23
  4531b0:	csel	x22, x20, x8, hi  // hi = pmore
  4531b4:	add	x0, x9, #0x1c
  4531b8:	mov	x1, x21
  4531bc:	mov	x2, x22
  4531c0:	bl	402640 <memcpy@plt>
  4531c4:	add	x25, x22, x23
  4531c8:	add	w8, w23, w22
  4531cc:	cmp	x25, #0x41
  4531d0:	str	w8, [x19, #24]
  4531d4:	b.cc	453208 <feof@plt+0x50508>  // b.lo, b.ul, b.last
  4531d8:	add	x23, x19, #0x1c
  4531dc:	and	x24, x25, #0xffffffffffffffc0
  4531e0:	mov	x0, x23
  4531e4:	mov	x1, x24
  4531e8:	mov	x2, x19
  4531ec:	bl	4525f8 <feof@plt+0x4f8f8>
  4531f0:	add	x1, x23, x24
  4531f4:	and	x24, x25, #0x3f
  4531f8:	mov	x0, x23
  4531fc:	mov	x2, x24
  453200:	bl	402640 <memcpy@plt>
  453204:	str	w24, [x19, #24]
  453208:	add	x21, x21, x22
  45320c:	sub	x20, x20, x22
  453210:	subs	x8, x20, #0x41
  453214:	b.cc	453260 <feof@plt+0x50560>  // b.lo, b.ul, b.last
  453218:	tst	x21, #0x3
  45321c:	b.eq	453290 <feof@plt+0x50590>  // b.none
  453220:	add	x22, x19, #0x1c
  453224:	and	x23, x8, #0xffffffffffffffc0
  453228:	mov	x24, x20
  45322c:	ldp	q1, q0, [x21, #32]
  453230:	ldp	q3, q2, [x21], #64
  453234:	mov	w1, #0x40                  	// #64
  453238:	mov	x0, x22
  45323c:	mov	x2, x19
  453240:	stp	q1, q0, [x22, #32]
  453244:	stp	q3, q2, [x22]
  453248:	bl	4525f8 <feof@plt+0x4f8f8>
  45324c:	sub	x24, x24, #0x40
  453250:	cmp	x24, #0x40
  453254:	b.hi	45322c <feof@plt+0x5052c>  // b.pmore
  453258:	sub	x8, x20, x23
  45325c:	sub	x20, x8, #0x40
  453260:	cbz	x20, 453278 <feof@plt+0x50578>
  453264:	add	x0, x19, #0x1c
  453268:	mov	x1, x21
  45326c:	mov	x2, x20
  453270:	bl	402640 <memcpy@plt>
  453274:	str	w20, [x19, #24]
  453278:	ldp	x20, x19, [sp, #64]
  45327c:	ldp	x22, x21, [sp, #48]
  453280:	ldp	x24, x23, [sp, #32]
  453284:	ldr	x25, [sp, #16]
  453288:	ldp	x29, x30, [sp], #80
  45328c:	ret
  453290:	and	x22, x20, #0xffffffffffffffc0
  453294:	mov	x0, x21
  453298:	mov	x1, x22
  45329c:	mov	x2, x19
  4532a0:	bl	4525f8 <feof@plt+0x4f8f8>
  4532a4:	add	x21, x21, x22
  4532a8:	and	x20, x20, #0x3f
  4532ac:	cbnz	x20, 453264 <feof@plt+0x50564>
  4532b0:	b	453278 <feof@plt+0x50578>
  4532b4:	sub	sp, sp, #0xe0
  4532b8:	adrp	x8, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4532bc:	ldr	q0, [x8]
  4532c0:	stp	x20, x19, [sp, #208]
  4532c4:	mov	x19, x2
  4532c8:	mov	x2, sp
  4532cc:	stp	x29, x30, [sp, #160]
  4532d0:	stp	x24, x23, [sp, #176]
  4532d4:	stp	x22, x21, [sp, #192]
  4532d8:	add	x29, sp, #0xa0
  4532dc:	str	xzr, [sp, #16]
  4532e0:	str	q0, [sp]
  4532e4:	str	wzr, [sp, #24]
  4532e8:	mov	x20, sp
  4532ec:	bl	453174 <feof@plt+0x50474>
  4532f0:	ldp	w23, w22, [sp, #20]
  4532f4:	ldr	w8, [sp, #16]
  4532f8:	adds	w24, w8, w22
  4532fc:	str	w24, [sp, #16]
  453300:	b.cc	45330c <feof@plt+0x5060c>  // b.lo, b.ul, b.last
  453304:	add	w23, w23, #0x1
  453308:	str	w23, [sp, #20]
  45330c:	cmp	w22, #0x38
  453310:	mov	w8, #0x78                  	// #120
  453314:	mov	w9, #0x38                  	// #56
  453318:	csel	w8, w9, w8, cc  // cc = lo, ul, last
  45331c:	add	x20, x20, #0x1c
  453320:	sub	w21, w8, w22
  453324:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453328:	add	x0, x20, x22
  45332c:	add	x1, x1, #0x10
  453330:	mov	x2, x21
  453334:	bl	402640 <memcpy@plt>
  453338:	add	x9, x21, x22
  45333c:	lsl	w8, w24, #3
  453340:	extr	w10, w23, w24, #29
  453344:	add	x11, x20, x9
  453348:	add	x1, x9, #0x8
  45334c:	mov	x2, sp
  453350:	mov	x0, x20
  453354:	stp	w8, w10, [x11]
  453358:	bl	4525f8 <feof@plt+0x4f8f8>
  45335c:	ldr	q0, [sp]
  453360:	mov	x0, x19
  453364:	str	q0, [x19]
  453368:	ldp	x20, x19, [sp, #208]
  45336c:	ldp	x22, x21, [sp, #192]
  453370:	ldp	x24, x23, [sp, #176]
  453374:	ldp	x29, x30, [sp, #160]
  453378:	add	sp, sp, #0xe0
  45337c:	ret
  453380:	stp	x29, x30, [sp, #-48]!
  453384:	str	x21, [sp, #16]
  453388:	stp	x20, x19, [sp, #32]
  45338c:	mov	x29, sp
  453390:	cbz	x0, 4533ec <feof@plt+0x506ec>
  453394:	mov	x20, x0
  453398:	mov	x8, xzr
  45339c:	ldr	x9, [x20, x8]
  4533a0:	add	x8, x8, #0x8
  4533a4:	cbnz	x9, 45339c <feof@plt+0x5069c>
  4533a8:	and	x0, x8, #0x7fffffff8
  4533ac:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4533b0:	ldr	x8, [x20]
  4533b4:	mov	x19, x0
  4533b8:	cbz	x8, 4533e4 <feof@plt+0x506e4>
  4533bc:	mov	x21, xzr
  4533c0:	add	x20, x20, #0x8
  4533c4:	mov	x0, x8
  4533c8:	bl	45547c <_obstack_memory_used@@Base+0x254>
  4533cc:	lsl	x8, x21, #3
  4533d0:	str	x0, [x19, x8]
  4533d4:	ldr	x8, [x20, x8]
  4533d8:	add	x21, x21, #0x1
  4533dc:	cbnz	x8, 4533c4 <feof@plt+0x506c4>
  4533e0:	and	x8, x21, #0xffffffff
  4533e4:	str	xzr, [x19, x8, lsl #3]
  4533e8:	b	4533f0 <feof@plt+0x506f0>
  4533ec:	mov	x19, xzr
  4533f0:	mov	x0, x19
  4533f4:	ldp	x20, x19, [sp, #32]
  4533f8:	ldr	x21, [sp, #16]
  4533fc:	ldp	x29, x30, [sp], #48
  453400:	ret
  453404:	cbz	x0, 453440 <feof@plt+0x50740>
  453408:	stp	x29, x30, [sp, #-32]!
  45340c:	stp	x20, x19, [sp, #16]
  453410:	mov	x19, x0
  453414:	ldr	x0, [x0]
  453418:	mov	x29, sp
  45341c:	cbz	x0, 453430 <feof@plt+0x50730>
  453420:	add	x20, x19, #0x8
  453424:	bl	402770 <free@plt>
  453428:	ldr	x0, [x20], #8
  45342c:	cbnz	x0, 453424 <feof@plt+0x50724>
  453430:	mov	x0, x19
  453434:	ldp	x20, x19, [sp, #16]
  453438:	ldp	x29, x30, [sp], #32
  45343c:	b	402770 <free@plt>
  453440:	ret
  453444:	stp	x29, x30, [sp, #-96]!
  453448:	str	x27, [sp, #16]
  45344c:	stp	x26, x25, [sp, #32]
  453450:	stp	x24, x23, [sp, #48]
  453454:	stp	x22, x21, [sp, #64]
  453458:	stp	x20, x19, [sp, #80]
  45345c:	mov	x29, sp
  453460:	cbz	x0, 453608 <feof@plt+0x50908>
  453464:	mov	x19, x0
  453468:	bl	4026d0 <strlen@plt>
  45346c:	add	x0, x0, #0x1
  453470:	bl	45535c <_obstack_memory_used@@Base+0x134>
  453474:	ldrb	w8, [x19]
  453478:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  45347c:	mov	x20, x0
  453480:	mov	x22, xzr
  453484:	mov	w26, wzr
  453488:	mov	w25, wzr
  45348c:	mov	w27, wzr
  453490:	mov	w24, wzr
  453494:	mov	x21, xzr
  453498:	add	x23, x23, #0x3c4
  45349c:	b	4534a4 <feof@plt+0x507a4>
  4534a0:	cbz	w8, 4535fc <feof@plt+0x508fc>
  4534a4:	and	x9, x8, #0xff
  4534a8:	ldrh	w9, [x23, x9, lsl #1]
  4534ac:	tbz	w9, #6, 4534bc <feof@plt+0x507bc>
  4534b0:	ldrb	w8, [x19, #1]!
  4534b4:	ldrh	w9, [x23, x8, lsl #1]
  4534b8:	tbnz	w9, #6, 4534b0 <feof@plt+0x507b0>
  4534bc:	subs	w9, w24, #0x1
  4534c0:	b.cc	4534d0 <feof@plt+0x507d0>  // b.lo, b.ul, b.last
  4534c4:	sxtw	x9, w9
  4534c8:	cmp	x22, x9
  4534cc:	b.lt	453504 <feof@plt+0x50804>  // b.tstop
  4534d0:	cbz	x21, 4534ec <feof@plt+0x507ec>
  4534d4:	lsl	w24, w24, #1
  4534d8:	sbfiz	x1, x24, #3, #32
  4534dc:	mov	x0, x21
  4534e0:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  4534e4:	mov	x21, x0
  4534e8:	b	4534fc <feof@plt+0x507fc>
  4534ec:	mov	w0, #0x40                  	// #64
  4534f0:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4534f4:	mov	x21, x0
  4534f8:	mov	w24, #0x8                   	// #8
  4534fc:	str	xzr, [x21, x22, lsl #3]
  453500:	ldrb	w8, [x19]
  453504:	mov	x9, x20
  453508:	tst	w8, #0xff
  45350c:	b.ne	45355c <feof@plt+0x5085c>  // b.any
  453510:	mov	x0, x20
  453514:	strb	wzr, [x9]
  453518:	bl	45547c <_obstack_memory_used@@Base+0x254>
  45351c:	str	x0, [x21, x22, lsl #3]
  453520:	add	x22, x22, #0x1
  453524:	str	xzr, [x21, x22, lsl #3]
  453528:	ldrb	w8, [x19]
  45352c:	ldrh	w9, [x23, x8, lsl #1]
  453530:	tbz	w9, #6, 4534a0 <feof@plt+0x507a0>
  453534:	ldrb	w8, [x19, #1]!
  453538:	ldrh	w9, [x23, x8, lsl #1]
  45353c:	tbnz	w9, #6, 453534 <feof@plt+0x50834>
  453540:	b	4534a0 <feof@plt+0x507a0>
  453544:	mov	w26, wzr
  453548:	mov	w25, wzr
  45354c:	mov	w27, wzr
  453550:	strb	w8, [x9], #1
  453554:	ldrb	w8, [x19, #1]!
  453558:	cbz	w8, 453510 <feof@plt+0x50810>
  45355c:	orr	w10, w25, w26
  453560:	orr	w10, w10, w27
  453564:	cbnz	w10, 453574 <feof@plt+0x50874>
  453568:	and	x10, x8, #0xff
  45356c:	ldrh	w10, [x23, x10, lsl #1]
  453570:	tbnz	w10, #6, 453510 <feof@plt+0x50810>
  453574:	cbnz	w27, 45354c <feof@plt+0x5084c>
  453578:	and	w10, w8, #0xff
  45357c:	cmp	w10, #0x5c
  453580:	b.ne	45358c <feof@plt+0x5088c>  // b.any
  453584:	mov	w27, #0x1                   	// #1
  453588:	b	453554 <feof@plt+0x50854>
  45358c:	and	w10, w8, #0xff
  453590:	cbnz	w26, 4535b8 <feof@plt+0x508b8>
  453594:	cbnz	w25, 4535cc <feof@plt+0x508cc>
  453598:	cmp	w10, #0x27
  45359c:	b.eq	4535e4 <feof@plt+0x508e4>  // b.none
  4535a0:	cmp	w10, #0x22
  4535a4:	b.ne	453544 <feof@plt+0x50844>  // b.any
  4535a8:	mov	w26, wzr
  4535ac:	mov	w27, wzr
  4535b0:	mov	w25, #0x1                   	// #1
  4535b4:	b	453554 <feof@plt+0x50854>
  4535b8:	cmp	w10, #0x27
  4535bc:	b.ne	45354c <feof@plt+0x5084c>  // b.any
  4535c0:	mov	w26, wzr
  4535c4:	mov	w27, wzr
  4535c8:	b	453554 <feof@plt+0x50854>
  4535cc:	cmp	w10, #0x22
  4535d0:	b.ne	4535f4 <feof@plt+0x508f4>  // b.any
  4535d4:	mov	w26, wzr
  4535d8:	mov	w25, wzr
  4535dc:	mov	w27, wzr
  4535e0:	b	453554 <feof@plt+0x50854>
  4535e4:	mov	w25, wzr
  4535e8:	mov	w27, wzr
  4535ec:	mov	w26, #0x1                   	// #1
  4535f0:	b	453554 <feof@plt+0x50854>
  4535f4:	mov	w26, wzr
  4535f8:	b	45354c <feof@plt+0x5084c>
  4535fc:	mov	x0, x20
  453600:	bl	402770 <free@plt>
  453604:	b	45360c <feof@plt+0x5090c>
  453608:	mov	x21, xzr
  45360c:	mov	x0, x21
  453610:	ldp	x20, x19, [sp, #80]
  453614:	ldp	x22, x21, [sp, #64]
  453618:	ldp	x24, x23, [sp, #48]
  45361c:	ldp	x26, x25, [sp, #32]
  453620:	ldr	x27, [sp, #16]
  453624:	ldp	x29, x30, [sp], #96
  453628:	ret
  45362c:	stp	x29, x30, [sp, #-80]!
  453630:	str	x25, [sp, #16]
  453634:	stp	x24, x23, [sp, #32]
  453638:	stp	x22, x21, [sp, #48]
  45363c:	stp	x20, x19, [sp, #64]
  453640:	mov	x29, sp
  453644:	cbz	x1, 4536e4 <feof@plt+0x509e4>
  453648:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x11dd8>
  45364c:	mov	x24, #0x21                  	// #33
  453650:	mov	x19, x1
  453654:	mov	x20, x0
  453658:	add	x22, x22, #0x3c4
  45365c:	mov	w23, #0x1                   	// #1
  453660:	movk	x24, #0x400, lsl #48
  453664:	ldr	x25, [x20]
  453668:	cbz	x25, 453700 <feof@plt+0x50a00>
  45366c:	ldrb	w21, [x25]
  453670:	cbz	w21, 4536c4 <feof@plt+0x509c4>
  453674:	ldrh	w8, [x22, x21, lsl #1]
  453678:	tbnz	w8, #6, 453694 <feof@plt+0x50994>
  45367c:	sub	w8, w21, #0x22
  453680:	cmp	w8, #0x3a
  453684:	b.hi	4536a8 <feof@plt+0x509a8>  // b.pmore
  453688:	lsl	x8, x23, x8
  45368c:	tst	x8, x24
  453690:	b.eq	4536a8 <feof@plt+0x509a8>  // b.none
  453694:	mov	w0, #0x5c                  	// #92
  453698:	mov	x1, x19
  45369c:	bl	4029a0 <fputc@plt>
  4536a0:	cmn	w0, #0x1
  4536a4:	b.eq	4536e4 <feof@plt+0x509e4>  // b.none
  4536a8:	mov	w0, w21
  4536ac:	mov	x1, x19
  4536b0:	bl	4029a0 <fputc@plt>
  4536b4:	cmn	w0, #0x1
  4536b8:	add	x25, x25, #0x1
  4536bc:	b.ne	45366c <feof@plt+0x5096c>  // b.any
  4536c0:	b	4536e4 <feof@plt+0x509e4>
  4536c4:	mov	w0, #0xa                   	// #10
  4536c8:	mov	x1, x19
  4536cc:	bl	4029a0 <fputc@plt>
  4536d0:	add	x20, x20, #0x8
  4536d4:	cmn	w0, #0x1
  4536d8:	mov	w0, #0x1                   	// #1
  4536dc:	b.ne	453664 <feof@plt+0x50964>  // b.any
  4536e0:	b	4536e8 <feof@plt+0x509e8>
  4536e4:	mov	w0, #0x1                   	// #1
  4536e8:	ldp	x20, x19, [sp, #64]
  4536ec:	ldp	x22, x21, [sp, #48]
  4536f0:	ldp	x24, x23, [sp, #32]
  4536f4:	ldr	x25, [sp, #16]
  4536f8:	ldp	x29, x30, [sp], #80
  4536fc:	ret
  453700:	mov	w0, wzr
  453704:	b	4536e8 <feof@plt+0x509e8>
  453708:	sub	sp, sp, #0x100
  45370c:	stp	x29, x30, [sp, #160]
  453710:	stp	x28, x27, [sp, #176]
  453714:	stp	x26, x25, [sp, #192]
  453718:	stp	x24, x23, [sp, #208]
  45371c:	stp	x22, x21, [sp, #224]
  453720:	stp	x20, x19, [sp, #240]
  453724:	ldr	w8, [x0]
  453728:	add	x29, sp, #0xa0
  45372c:	cmp	w8, #0x2
  453730:	b.lt	4539b8 <feof@plt+0x50cb8>  // b.tstop
  453734:	ldr	x8, [x1]
  453738:	adrp	x26, 463000 <_obstack_memory_used@@Base+0xddd8>
  45373c:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453740:	mov	x20, x0
  453744:	mov	x19, x1
  453748:	mov	w28, wzr
  45374c:	mov	w27, #0x7d0                 	// #2000
  453750:	mov	w21, #0x1                   	// #1
  453754:	add	x26, x26, #0x9ad
  453758:	add	x25, x8, #0x8
  45375c:	add	x23, x23, #0x3c4
  453760:	stp	x25, x8, [sp, #8]
  453764:	ldr	x9, [x8, w21, sxtw #3]
  453768:	ldrb	w10, [x9]
  45376c:	cmp	w10, #0x40
  453770:	b.ne	45383c <feof@plt+0x50b3c>  // b.any
  453774:	subs	w27, w27, #0x1
  453778:	b.eq	4539d8 <feof@plt+0x50cd8>  // b.none
  45377c:	add	x22, x9, #0x1
  453780:	add	x2, sp, #0x20
  453784:	mov	w0, wzr
  453788:	mov	x1, x22
  45378c:	bl	402b50 <__xstat@plt>
  453790:	tbnz	w0, #31, 45383c <feof@plt+0x50b3c>
  453794:	ldr	w8, [sp, #48]
  453798:	and	w8, w8, #0xf000
  45379c:	cmp	w8, #0x4, lsl #12
  4537a0:	b.eq	4539f0 <feof@plt+0x50cf0>  // b.none
  4537a4:	mov	x0, x22
  4537a8:	mov	x1, x26
  4537ac:	bl	402b20 <fopen@plt>
  4537b0:	cbz	x0, 45383c <feof@plt+0x50b3c>
  4537b4:	mov	w2, #0x2                   	// #2
  4537b8:	mov	x1, xzr
  4537bc:	mov	x22, x0
  4537c0:	bl	402cd0 <fseek@plt>
  4537c4:	cmn	w0, #0x1
  4537c8:	b.eq	45382c <feof@plt+0x50b2c>  // b.none
  4537cc:	mov	x0, x22
  4537d0:	bl	402700 <ftell@plt>
  4537d4:	cmn	x0, #0x1
  4537d8:	b.eq	45382c <feof@plt+0x50b2c>  // b.none
  4537dc:	mov	x24, x0
  4537e0:	mov	x0, x22
  4537e4:	mov	x1, xzr
  4537e8:	mov	w2, wzr
  4537ec:	bl	402cd0 <fseek@plt>
  4537f0:	cmn	w0, #0x1
  4537f4:	b.eq	45382c <feof@plt+0x50b2c>  // b.none
  4537f8:	add	x0, x24, #0x1
  4537fc:	bl	45535c <_obstack_memory_used@@Base+0x134>
  453800:	mov	w1, #0x1                   	// #1
  453804:	mov	x2, x24
  453808:	mov	x3, x22
  45380c:	str	x0, [sp, #24]
  453810:	bl	402780 <fread_unlocked@plt>
  453814:	mov	x25, x0
  453818:	cmp	x0, x24
  45381c:	b.eq	453858 <feof@plt+0x50b58>  // b.none
  453820:	mov	x0, x22
  453824:	bl	402c40 <ferror@plt>
  453828:	cbz	w0, 453858 <feof@plt+0x50b58>
  45382c:	mov	w28, w21
  453830:	mov	x0, x22
  453834:	bl	402740 <fclose@plt>
  453838:	b	453840 <feof@plt+0x50b40>
  45383c:	mov	w28, w21
  453840:	ldr	w8, [x20]
  453844:	add	w21, w28, #0x1
  453848:	cmp	w21, w8
  45384c:	b.ge	4539b8 <feof@plt+0x50cb8>  // b.tcont
  453850:	ldr	x8, [x19]
  453854:	b	453764 <feof@plt+0x50a64>
  453858:	ldr	x0, [sp, #24]
  45385c:	strb	wzr, [x0, x25]
  453860:	ldrb	w8, [x0]
  453864:	cbz	w8, 453884 <feof@plt+0x50b84>
  453868:	mov	w9, #0x1                   	// #1
  45386c:	and	x8, x8, #0xff
  453870:	ldrh	w8, [x23, x8, lsl #1]
  453874:	tbz	w8, #6, 453898 <feof@plt+0x50b98>
  453878:	ldrb	w8, [x0, x9]
  45387c:	add	x9, x9, #0x1
  453880:	cbnz	w8, 45386c <feof@plt+0x50b6c>
  453884:	mov	w0, #0x8                   	// #8
  453888:	bl	45535c <_obstack_memory_used@@Base+0x134>
  45388c:	mov	x24, x0
  453890:	str	xzr, [x0]
  453894:	b	4538a0 <feof@plt+0x50ba0>
  453898:	bl	453444 <feof@plt+0x50744>
  45389c:	mov	x24, x0
  4538a0:	ldr	x25, [x19]
  4538a4:	ldr	x23, [sp, #16]
  4538a8:	cmp	x25, x23
  4538ac:	b.ne	453910 <feof@plt+0x50c10>  // b.any
  4538b0:	cbz	x23, 453908 <feof@plt+0x50c08>
  4538b4:	mov	x8, xzr
  4538b8:	ldr	x9, [x23, x8]
  4538bc:	add	x8, x8, #0x8
  4538c0:	cbnz	x9, 4538b8 <feof@plt+0x50bb8>
  4538c4:	and	x0, x8, #0x7fffffff8
  4538c8:	bl	45535c <_obstack_memory_used@@Base+0x134>
  4538cc:	ldr	x8, [x23]
  4538d0:	mov	x25, x0
  4538d4:	cbz	x8, 453900 <feof@plt+0x50c00>
  4538d8:	ldr	x23, [sp, #8]
  4538dc:	mov	x26, xzr
  4538e0:	mov	x0, x8
  4538e4:	bl	45547c <_obstack_memory_used@@Base+0x254>
  4538e8:	lsl	x8, x26, #3
  4538ec:	str	x0, [x25, x8]
  4538f0:	ldr	x8, [x23, x8]
  4538f4:	add	x26, x26, #0x1
  4538f8:	cbnz	x8, 4538e0 <feof@plt+0x50be0>
  4538fc:	and	x8, x26, #0xffffffff
  453900:	str	xzr, [x25, x8, lsl #3]
  453904:	b	45390c <feof@plt+0x50c0c>
  453908:	mov	x25, xzr
  45390c:	str	x25, [x19]
  453910:	mov	x9, xzr
  453914:	sxtw	x8, w21
  453918:	ldr	x10, [x24, x9, lsl #3]
  45391c:	mov	x26, x9
  453920:	add	x9, x9, #0x1
  453924:	cbnz	x10, 453918 <feof@plt+0x50c18>
  453928:	lsl	x23, x8, #3
  45392c:	ldr	x0, [x25, x23]
  453930:	bl	402770 <free@plt>
  453934:	ldrsw	x8, [x20]
  453938:	ldr	x0, [x19]
  45393c:	add	x8, x26, x8
  453940:	lsl	x8, x8, #3
  453944:	add	x1, x8, #0x8
  453948:	bl	4553e0 <_obstack_memory_used@@Base+0x1b8>
  45394c:	str	x0, [x19]
  453950:	ldr	w9, [x20]
  453954:	add	x8, x0, x23
  453958:	lsl	x25, x26, #3
  45395c:	add	x0, x8, x25
  453960:	add	x1, x8, #0x8
  453964:	sub	w8, w9, w21
  453968:	sbfiz	x2, x8, #3, #32
  45396c:	bl	402a70 <memmove@plt>
  453970:	ldr	x8, [x19]
  453974:	mov	x1, x24
  453978:	mov	x2, x25
  45397c:	add	x0, x8, x23
  453980:	bl	402640 <memcpy@plt>
  453984:	ldr	w8, [x20]
  453988:	mov	x0, x24
  45398c:	add	w8, w26, w8
  453990:	sub	w8, w8, #0x1
  453994:	str	w8, [x20]
  453998:	bl	402770 <free@plt>
  45399c:	ldr	x0, [sp, #24]
  4539a0:	bl	402770 <free@plt>
  4539a4:	adrp	x26, 463000 <_obstack_memory_used@@Base+0xddd8>
  4539a8:	adrp	x23, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4539ac:	add	x26, x26, #0x9ad
  4539b0:	add	x23, x23, #0x3c4
  4539b4:	b	453830 <feof@plt+0x50b30>
  4539b8:	ldp	x20, x19, [sp, #240]
  4539bc:	ldp	x22, x21, [sp, #224]
  4539c0:	ldp	x24, x23, [sp, #208]
  4539c4:	ldp	x26, x25, [sp, #192]
  4539c8:	ldp	x28, x27, [sp, #176]
  4539cc:	ldp	x29, x30, [sp, #160]
  4539d0:	add	sp, sp, #0x100
  4539d4:	ret
  4539d8:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4539dc:	ldr	x0, [x9, #1416]
  4539e0:	ldr	x2, [x8]
  4539e4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4539e8:	add	x1, x1, #0x50
  4539ec:	b	453a08 <feof@plt+0x50d08>
  4539f0:	ldr	x8, [x19]
  4539f4:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4539f8:	ldr	x0, [x9, #1416]
  4539fc:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453a00:	ldr	x2, [x8]
  453a04:	add	x1, x1, #0x79
  453a08:	bl	4026f0 <fprintf@plt>
  453a0c:	mov	w0, #0x1                   	// #1
  453a10:	bl	45527c <_obstack_memory_used@@Base+0x54>
  453a14:	cbz	x0, 453a2c <feof@plt+0x50d2c>
  453a18:	mov	x8, x0
  453a1c:	mov	w0, #0xffffffff            	// #-1
  453a20:	ldr	x9, [x8], #8
  453a24:	add	w0, w0, #0x1
  453a28:	cbnz	x9, 453a20 <feof@plt+0x50d20>
  453a2c:	ret
  453a30:	b	402b40 <strcmp@plt>
  453a34:	b	402980 <strncmp@plt>
  453a38:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453a3c:	mov	w8, wzr
  453a40:	add	x9, x9, #0x5c4
  453a44:	mov	w10, #0x43                  	// #67
  453a48:	b	453a5c <feof@plt+0x50d5c>
  453a4c:	mov	w11, #0x2f                  	// #47
  453a50:	ldrb	w11, [x9, w11, uxtw]
  453a54:	madd	w8, w8, w10, w11
  453a58:	sub	w8, w8, #0x71
  453a5c:	ldrb	w11, [x0], #1
  453a60:	cmp	w11, #0x5c
  453a64:	b.eq	453a4c <feof@plt+0x50d4c>  // b.none
  453a68:	cbnz	w11, 453a50 <feof@plt+0x50d50>
  453a6c:	mov	w0, w8
  453a70:	ret
  453a74:	stp	x29, x30, [sp, #-16]!
  453a78:	mov	x29, sp
  453a7c:	bl	402b40 <strcmp@plt>
  453a80:	cmp	w0, #0x0
  453a84:	cset	w0, eq  // eq = none
  453a88:	ldp	x29, x30, [sp], #16
  453a8c:	ret
  453a90:	stp	x29, x30, [sp, #-48]!
  453a94:	str	x21, [sp, #16]
  453a98:	stp	x20, x19, [sp, #32]
  453a9c:	mov	x29, sp
  453aa0:	mov	x19, x1
  453aa4:	bl	454e78 <feof@plt+0x52178>
  453aa8:	mov	x20, x0
  453aac:	mov	x0, x19
  453ab0:	bl	454e78 <feof@plt+0x52178>
  453ab4:	mov	x19, x0
  453ab8:	mov	x0, x20
  453abc:	mov	x1, x19
  453ac0:	bl	402b40 <strcmp@plt>
  453ac4:	cmp	w0, #0x0
  453ac8:	mov	x0, x20
  453acc:	cset	w21, eq  // eq = none
  453ad0:	bl	402770 <free@plt>
  453ad4:	mov	x0, x19
  453ad8:	bl	402770 <free@plt>
  453adc:	mov	w0, w21
  453ae0:	ldp	x20, x19, [sp, #32]
  453ae4:	ldr	x21, [sp, #16]
  453ae8:	ldp	x29, x30, [sp], #48
  453aec:	ret
  453af0:	cbz	x0, 453afc <feof@plt+0x50dfc>
  453af4:	mov	w1, #0x2                   	// #2
  453af8:	b	402b10 <__fsetlocking@plt>
  453afc:	ret
  453b00:	stp	x29, x30, [sp, #-16]!
  453b04:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  453b08:	ldr	x0, [x8, #1384]
  453b0c:	mov	x29, sp
  453b10:	cbz	x0, 453b1c <feof@plt+0x50e1c>
  453b14:	mov	w1, #0x2                   	// #2
  453b18:	bl	402b10 <__fsetlocking@plt>
  453b1c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  453b20:	ldr	x0, [x8, #1408]
  453b24:	cbz	x0, 453b30 <feof@plt+0x50e30>
  453b28:	mov	w1, #0x2                   	// #2
  453b2c:	bl	402b10 <__fsetlocking@plt>
  453b30:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  453b34:	ldr	x0, [x8, #1416]
  453b38:	cbz	x0, 453b48 <feof@plt+0x50e48>
  453b3c:	mov	w1, #0x2                   	// #2
  453b40:	ldp	x29, x30, [sp], #16
  453b44:	b	402b10 <__fsetlocking@plt>
  453b48:	ldp	x29, x30, [sp], #16
  453b4c:	ret
  453b50:	stp	x29, x30, [sp, #-32]!
  453b54:	str	x19, [sp, #16]
  453b58:	mov	x29, sp
  453b5c:	bl	402b20 <fopen@plt>
  453b60:	mov	x19, x0
  453b64:	cbz	x0, 453b74 <feof@plt+0x50e74>
  453b68:	mov	w1, #0x2                   	// #2
  453b6c:	mov	x0, x19
  453b70:	bl	402b10 <__fsetlocking@plt>
  453b74:	mov	x0, x19
  453b78:	ldr	x19, [sp, #16]
  453b7c:	ldp	x29, x30, [sp], #32
  453b80:	ret
  453b84:	stp	x29, x30, [sp, #-32]!
  453b88:	str	x19, [sp, #16]
  453b8c:	mov	x29, sp
  453b90:	bl	402c50 <fdopen@plt>
  453b94:	mov	x19, x0
  453b98:	cbz	x0, 453ba8 <feof@plt+0x50ea8>
  453b9c:	mov	w1, #0x2                   	// #2
  453ba0:	mov	x0, x19
  453ba4:	bl	402b10 <__fsetlocking@plt>
  453ba8:	mov	x0, x19
  453bac:	ldr	x19, [sp, #16]
  453bb0:	ldp	x29, x30, [sp], #32
  453bb4:	ret
  453bb8:	stp	x29, x30, [sp, #-32]!
  453bbc:	str	x19, [sp, #16]
  453bc0:	mov	x29, sp
  453bc4:	bl	402830 <freopen@plt>
  453bc8:	mov	x19, x0
  453bcc:	cbz	x0, 453bdc <feof@plt+0x50edc>
  453bd0:	mov	w1, #0x2                   	// #2
  453bd4:	mov	x0, x19
  453bd8:	bl	402b10 <__fsetlocking@plt>
  453bdc:	mov	x0, x19
  453be0:	ldr	x19, [sp, #16]
  453be4:	ldp	x29, x30, [sp], #32
  453be8:	ret
  453bec:	lsr	x8, x0, #32
  453bf0:	mov	w9, #0xadcc                	// #44492
  453bf4:	movk	w9, #0xbdec, lsl #16
  453bf8:	mov	w10, #0x109a                	// #4250
  453bfc:	sub	w8, w8, w0
  453c00:	movk	w10, #0x2, lsl #16
  453c04:	add	w8, w8, w9
  453c08:	mov	w9, #0x2785                	// #10117
  453c0c:	eor	w8, w8, w10
  453c10:	movk	w9, #0x5c24, lsl #16
  453c14:	sub	w11, w0, w8
  453c18:	add	w9, w11, w9
  453c1c:	mov	w10, #0x5234                	// #21044
  453c20:	eor	w9, w9, w8, lsl #8
  453c24:	movk	w10, #0x4213, lsl #16
  453c28:	add	w11, w8, w9
  453c2c:	sub	w10, w10, w11
  453c30:	sub	w8, w8, w9
  453c34:	eor	w10, w10, w9, lsr #13
  453c38:	sub	w8, w8, w10
  453c3c:	sub	w9, w9, w10
  453c40:	eor	w8, w8, w10, lsr #12
  453c44:	sub	w9, w9, w8
  453c48:	sub	w10, w10, w8
  453c4c:	eor	w9, w9, w8, lsl #16
  453c50:	sub	w10, w10, w9
  453c54:	sub	w8, w8, w9
  453c58:	eor	w10, w10, w9, lsr #5
  453c5c:	sub	w8, w8, w10
  453c60:	sub	w9, w9, w10
  453c64:	eor	w8, w8, w10, lsr #3
  453c68:	sub	w9, w9, w8
  453c6c:	eor	w9, w9, w8, lsl #10
  453c70:	sub	w8, w10, w8
  453c74:	sub	w8, w8, w9
  453c78:	eor	w0, w8, w9, lsr #15
  453c7c:	ret
  453c80:	cmp	x0, x1
  453c84:	cset	w0, eq  // eq = none
  453c88:	ret
  453c8c:	ldr	x0, [x0, #32]
  453c90:	ret
  453c94:	ldp	x8, x9, [x0, #40]
  453c98:	sub	x0, x8, x9
  453c9c:	ret
  453ca0:	stp	x29, x30, [sp, #-80]!
  453ca4:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453ca8:	stp	x26, x25, [sp, #16]
  453cac:	stp	x24, x23, [sp, #32]
  453cb0:	stp	x22, x21, [sp, #48]
  453cb4:	stp	x20, x19, [sp, #64]
  453cb8:	mov	x19, x5
  453cbc:	mov	x20, x4
  453cc0:	mov	x21, x3
  453cc4:	mov	x22, x2
  453cc8:	mov	x23, x1
  453ccc:	mov	x2, x0
  453cd0:	mov	w8, wzr
  453cd4:	mov	w26, #0x1e                  	// #30
  453cd8:	add	x9, x9, #0xb0
  453cdc:	mov	x29, sp
  453ce0:	sub	w10, w26, w8
  453ce4:	add	w10, w8, w10, lsr #1
  453ce8:	lsl	x11, x10, #4
  453cec:	ldr	w11, [x9, x11]
  453cf0:	cmp	x11, x2
  453cf4:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  453cf8:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  453cfc:	cmp	w26, w8
  453d00:	b.ne	453ce0 <feof@plt+0x50fe0>  // b.any
  453d04:	mov	w8, w26
  453d08:	lsl	x8, x8, #4
  453d0c:	ldr	w25, [x9, x8]
  453d10:	cmp	x25, x2
  453d14:	b.cc	453d84 <feof@plt+0x51084>  // b.lo, b.ul, b.last
  453d18:	mov	w0, #0x1                   	// #1
  453d1c:	mov	w1, #0x70                  	// #112
  453d20:	blr	x20
  453d24:	mov	x24, x0
  453d28:	cbz	x0, 453d68 <feof@plt+0x51068>
  453d2c:	mov	w1, #0x8                   	// #8
  453d30:	mov	x0, x25
  453d34:	blr	x20
  453d38:	str	x0, [x24, #24]
  453d3c:	cbz	x0, 453d58 <feof@plt+0x51058>
  453d40:	str	x25, [x24, #32]
  453d44:	str	w26, [x24, #104]
  453d48:	stp	x23, x22, [x24]
  453d4c:	str	x21, [x24, #16]
  453d50:	stp	x20, x19, [x24, #64]
  453d54:	b	453d68 <feof@plt+0x51068>
  453d58:	cbz	x19, 453d64 <feof@plt+0x51064>
  453d5c:	mov	x0, x24
  453d60:	blr	x19
  453d64:	mov	x24, xzr
  453d68:	mov	x0, x24
  453d6c:	ldp	x20, x19, [sp, #64]
  453d70:	ldp	x22, x21, [sp, #48]
  453d74:	ldp	x24, x23, [sp, #32]
  453d78:	ldp	x26, x25, [sp, #16]
  453d7c:	ldp	x29, x30, [sp], #80
  453d80:	ret
  453d84:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  453d88:	ldr	x0, [x8, #1416]
  453d8c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453d90:	add	x1, x1, #0x290
  453d94:	bl	4026f0 <fprintf@plt>
  453d98:	bl	402b80 <abort@plt>
  453d9c:	stp	x29, x30, [sp, #-80]!
  453da0:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453da4:	stp	x26, x25, [sp, #16]
  453da8:	stp	x24, x23, [sp, #32]
  453dac:	stp	x22, x21, [sp, #48]
  453db0:	stp	x20, x19, [sp, #64]
  453db4:	mov	x19, x6
  453db8:	mov	x20, x5
  453dbc:	mov	x21, x3
  453dc0:	mov	x22, x2
  453dc4:	mov	x23, x1
  453dc8:	mov	x2, x0
  453dcc:	mov	w8, wzr
  453dd0:	mov	w26, #0x1e                  	// #30
  453dd4:	add	x9, x9, #0xb0
  453dd8:	mov	x29, sp
  453ddc:	sub	w10, w26, w8
  453de0:	add	w10, w8, w10, lsr #1
  453de4:	lsl	x11, x10, #4
  453de8:	ldr	w11, [x9, x11]
  453dec:	cmp	x11, x2
  453df0:	csel	w26, w26, w10, cc  // cc = lo, ul, last
  453df4:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  453df8:	cmp	w26, w8
  453dfc:	b.ne	453ddc <feof@plt+0x510dc>  // b.any
  453e00:	mov	w8, w26
  453e04:	lsl	x8, x8, #4
  453e08:	ldr	w25, [x9, x8]
  453e0c:	cmp	x25, x2
  453e10:	b.cc	453e80 <feof@plt+0x51180>  // b.lo, b.ul, b.last
  453e14:	mov	w0, #0x1                   	// #1
  453e18:	mov	w1, #0x70                  	// #112
  453e1c:	blr	x4
  453e20:	mov	x24, x0
  453e24:	cbz	x0, 453e64 <feof@plt+0x51164>
  453e28:	mov	w1, #0x8                   	// #8
  453e2c:	mov	x0, x25
  453e30:	blr	x20
  453e34:	str	x0, [x24, #24]
  453e38:	cbz	x0, 453e54 <feof@plt+0x51154>
  453e3c:	str	x25, [x24, #32]
  453e40:	str	w26, [x24, #104]
  453e44:	stp	x23, x22, [x24]
  453e48:	str	x21, [x24, #16]
  453e4c:	stp	x20, x19, [x24, #64]
  453e50:	b	453e64 <feof@plt+0x51164>
  453e54:	cbz	x19, 453e60 <feof@plt+0x51160>
  453e58:	mov	x0, x24
  453e5c:	blr	x19
  453e60:	mov	x24, xzr
  453e64:	mov	x0, x24
  453e68:	ldp	x20, x19, [sp, #64]
  453e6c:	ldp	x22, x21, [sp, #48]
  453e70:	ldp	x24, x23, [sp, #32]
  453e74:	ldp	x26, x25, [sp, #16]
  453e78:	ldp	x29, x30, [sp], #80
  453e7c:	ret
  453e80:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  453e84:	ldr	x0, [x8, #1416]
  453e88:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453e8c:	add	x1, x1, #0x290
  453e90:	bl	4026f0 <fprintf@plt>
  453e94:	bl	402b80 <abort@plt>
  453e98:	stp	x29, x30, [sp, #-96]!
  453e9c:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453ea0:	str	x27, [sp, #16]
  453ea4:	stp	x24, x23, [sp, #48]
  453ea8:	stp	x22, x21, [sp, #64]
  453eac:	stp	x20, x19, [sp, #80]
  453eb0:	mov	x19, x6
  453eb4:	mov	x21, x5
  453eb8:	mov	x20, x4
  453ebc:	mov	x22, x3
  453ec0:	mov	x23, x2
  453ec4:	mov	x24, x1
  453ec8:	mov	x2, x0
  453ecc:	mov	w8, wzr
  453ed0:	mov	w27, #0x1e                  	// #30
  453ed4:	add	x9, x9, #0xb0
  453ed8:	stp	x26, x25, [sp, #32]
  453edc:	mov	x29, sp
  453ee0:	sub	w10, w27, w8
  453ee4:	add	w10, w8, w10, lsr #1
  453ee8:	lsl	x11, x10, #4
  453eec:	ldr	w11, [x9, x11]
  453ef0:	cmp	x11, x2
  453ef4:	csel	w27, w27, w10, cc  // cc = lo, ul, last
  453ef8:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  453efc:	cmp	w27, w8
  453f00:	b.ne	453ee0 <feof@plt+0x511e0>  // b.any
  453f04:	mov	w8, w27
  453f08:	lsl	x8, x8, #4
  453f0c:	ldr	w26, [x9, x8]
  453f10:	cmp	x26, x2
  453f14:	b.cc	453f98 <feof@plt+0x51298>  // b.lo, b.ul, b.last
  453f18:	mov	w1, #0x1                   	// #1
  453f1c:	mov	w2, #0x70                  	// #112
  453f20:	mov	x0, x20
  453f24:	blr	x21
  453f28:	mov	x25, x0
  453f2c:	cbz	x0, 453f78 <feof@plt+0x51278>
  453f30:	mov	w2, #0x8                   	// #8
  453f34:	mov	x0, x20
  453f38:	mov	x1, x26
  453f3c:	blr	x21
  453f40:	str	x0, [x25, #24]
  453f44:	cbz	x0, 453f64 <feof@plt+0x51264>
  453f48:	str	x26, [x25, #32]
  453f4c:	str	w27, [x25, #104]
  453f50:	stp	x24, x23, [x25]
  453f54:	str	x22, [x25, #16]
  453f58:	stp	x20, x21, [x25, #80]
  453f5c:	str	x19, [x25, #96]
  453f60:	b	453f78 <feof@plt+0x51278>
  453f64:	cbz	x19, 453f74 <feof@plt+0x51274>
  453f68:	mov	x0, x20
  453f6c:	mov	x1, x25
  453f70:	blr	x19
  453f74:	mov	x25, xzr
  453f78:	mov	x0, x25
  453f7c:	ldp	x20, x19, [sp, #80]
  453f80:	ldp	x22, x21, [sp, #64]
  453f84:	ldp	x24, x23, [sp, #48]
  453f88:	ldp	x26, x25, [sp, #32]
  453f8c:	ldr	x27, [sp, #16]
  453f90:	ldp	x29, x30, [sp], #96
  453f94:	ret
  453f98:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  453f9c:	ldr	x0, [x8, #1416]
  453fa0:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453fa4:	add	x1, x1, #0x290
  453fa8:	bl	4026f0 <fprintf@plt>
  453fac:	bl	402b80 <abort@plt>
  453fb0:	stp	x1, x2, [x0]
  453fb4:	str	x3, [x0, #16]
  453fb8:	stp	x4, x5, [x0, #80]
  453fbc:	str	x6, [x0, #96]
  453fc0:	ret
  453fc4:	stp	x29, x30, [sp, #-64]!
  453fc8:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  453fcc:	stp	x24, x23, [sp, #16]
  453fd0:	stp	x22, x21, [sp, #32]
  453fd4:	stp	x20, x19, [sp, #48]
  453fd8:	mov	x19, x3
  453fdc:	mov	x20, x2
  453fe0:	mov	x21, x1
  453fe4:	mov	x2, x0
  453fe8:	mov	w8, wzr
  453fec:	mov	w24, #0x1e                  	// #30
  453ff0:	add	x9, x9, #0xb0
  453ff4:	mov	x29, sp
  453ff8:	sub	w10, w24, w8
  453ffc:	add	w10, w8, w10, lsr #1
  454000:	lsl	x11, x10, #4
  454004:	ldr	w11, [x9, x11]
  454008:	cmp	x11, x2
  45400c:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  454010:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  454014:	cmp	w24, w8
  454018:	b.ne	453ff8 <feof@plt+0x512f8>  // b.any
  45401c:	mov	w8, w24
  454020:	lsl	x8, x8, #4
  454024:	ldr	w23, [x9, x8]
  454028:	cmp	x23, x2
  45402c:	b.cc	4540a4 <feof@plt+0x513a4>  // b.lo, b.ul, b.last
  454030:	mov	w0, #0x1                   	// #1
  454034:	mov	w1, #0x70                  	// #112
  454038:	bl	455390 <_obstack_memory_used@@Base+0x168>
  45403c:	mov	x22, x0
  454040:	cbz	x0, 45408c <feof@plt+0x5138c>
  454044:	mov	w1, #0x8                   	// #8
  454048:	mov	x0, x23
  45404c:	bl	455390 <_obstack_memory_used@@Base+0x168>
  454050:	str	x0, [x22, #24]
  454054:	cbz	x0, 454080 <feof@plt+0x51380>
  454058:	adrp	x8, 455000 <_obstack_begin_1@@Base+0xa4>
  45405c:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x5e0>
  454060:	add	x8, x8, #0x390
  454064:	add	x9, x9, #0x770
  454068:	str	x23, [x22, #32]
  45406c:	str	w24, [x22, #104]
  454070:	stp	x21, x20, [x22]
  454074:	str	x19, [x22, #16]
  454078:	stp	x8, x9, [x22, #64]
  45407c:	b	45408c <feof@plt+0x5138c>
  454080:	mov	x0, x22
  454084:	bl	402770 <free@plt>
  454088:	mov	x22, xzr
  45408c:	mov	x0, x22
  454090:	ldp	x20, x19, [sp, #48]
  454094:	ldp	x22, x21, [sp, #32]
  454098:	ldp	x24, x23, [sp, #16]
  45409c:	ldp	x29, x30, [sp], #64
  4540a0:	ret
  4540a4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4540a8:	ldr	x0, [x8, #1416]
  4540ac:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4540b0:	add	x1, x1, #0x290
  4540b4:	bl	4026f0 <fprintf@plt>
  4540b8:	bl	402b80 <abort@plt>
  4540bc:	stp	x29, x30, [sp, #-64]!
  4540c0:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4540c4:	stp	x24, x23, [sp, #16]
  4540c8:	stp	x22, x21, [sp, #32]
  4540cc:	stp	x20, x19, [sp, #48]
  4540d0:	mov	x19, x3
  4540d4:	mov	x20, x2
  4540d8:	mov	x21, x1
  4540dc:	mov	x2, x0
  4540e0:	mov	w8, wzr
  4540e4:	mov	w24, #0x1e                  	// #30
  4540e8:	add	x9, x9, #0xb0
  4540ec:	mov	x29, sp
  4540f0:	sub	w10, w24, w8
  4540f4:	add	w10, w8, w10, lsr #1
  4540f8:	lsl	x11, x10, #4
  4540fc:	ldr	w11, [x9, x11]
  454100:	cmp	x11, x2
  454104:	csel	w24, w24, w10, cc  // cc = lo, ul, last
  454108:	csinc	w8, w8, w10, cs  // cs = hs, nlast
  45410c:	cmp	w24, w8
  454110:	b.ne	4540f0 <feof@plt+0x513f0>  // b.any
  454114:	mov	w8, w24
  454118:	lsl	x8, x8, #4
  45411c:	ldr	w23, [x9, x8]
  454120:	cmp	x23, x2
  454124:	b.cc	45419c <feof@plt+0x5149c>  // b.lo, b.ul, b.last
  454128:	mov	w0, #0x1                   	// #1
  45412c:	mov	w1, #0x70                  	// #112
  454130:	bl	4026b0 <calloc@plt>
  454134:	mov	x22, x0
  454138:	cbz	x0, 454184 <feof@plt+0x51484>
  45413c:	mov	w1, #0x8                   	// #8
  454140:	mov	x0, x23
  454144:	bl	4026b0 <calloc@plt>
  454148:	str	x0, [x22, #24]
  45414c:	cbz	x0, 454178 <feof@plt+0x51478>
  454150:	adrp	x8, 402000 <_Unwind_Backtrace@plt-0x5e0>
  454154:	adrp	x9, 402000 <_Unwind_Backtrace@plt-0x5e0>
  454158:	add	x8, x8, #0x6b0
  45415c:	add	x9, x9, #0x770
  454160:	str	x23, [x22, #32]
  454164:	str	w24, [x22, #104]
  454168:	stp	x21, x20, [x22]
  45416c:	str	x19, [x22, #16]
  454170:	stp	x8, x9, [x22, #64]
  454174:	b	454184 <feof@plt+0x51484>
  454178:	mov	x0, x22
  45417c:	bl	402770 <free@plt>
  454180:	mov	x22, xzr
  454184:	mov	x0, x22
  454188:	ldp	x20, x19, [sp, #48]
  45418c:	ldp	x22, x21, [sp, #32]
  454190:	ldp	x24, x23, [sp, #16]
  454194:	ldp	x29, x30, [sp], #64
  454198:	ret
  45419c:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4541a0:	ldr	x0, [x8, #1416]
  4541a4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4541a8:	add	x1, x1, #0x290
  4541ac:	bl	4026f0 <fprintf@plt>
  4541b0:	bl	402b80 <abort@plt>
  4541b4:	stp	x29, x30, [sp, #-48]!
  4541b8:	str	x21, [sp, #16]
  4541bc:	stp	x20, x19, [sp, #32]
  4541c0:	ldp	x8, x20, [x0, #16]
  4541c4:	mov	x19, x0
  4541c8:	mov	x29, sp
  4541cc:	cbz	x8, 4541dc <feof@plt+0x514dc>
  4541d0:	ldr	w8, [x19, #32]
  4541d4:	subs	w21, w8, #0x1
  4541d8:	b.pl	45420c <feof@plt+0x5150c>  // b.nfrst
  4541dc:	ldr	x8, [x19, #72]
  4541e0:	cbz	x8, 454224 <feof@plt+0x51524>
  4541e4:	mov	x0, x20
  4541e8:	blr	x8
  4541ec:	ldr	x1, [x19, #72]
  4541f0:	mov	x0, x19
  4541f4:	ldp	x20, x19, [sp, #32]
  4541f8:	ldr	x21, [sp, #16]
  4541fc:	ldp	x29, x30, [sp], #48
  454200:	br	x1
  454204:	subs	w21, w21, #0x1
  454208:	b.mi	4541dc <feof@plt+0x514dc>  // b.first
  45420c:	ldr	x0, [x20, w21, uxtw #3]
  454210:	cmp	x0, #0x2
  454214:	b.cc	454204 <feof@plt+0x51504>  // b.lo, b.ul, b.last
  454218:	ldr	x8, [x19, #16]
  45421c:	blr	x8
  454220:	b	454204 <feof@plt+0x51504>
  454224:	ldr	x8, [x19, #96]
  454228:	cbz	x8, 454254 <feof@plt+0x51554>
  45422c:	ldr	x0, [x19, #80]
  454230:	mov	x1, x20
  454234:	blr	x8
  454238:	ldr	x2, [x19, #96]
  45423c:	ldr	x0, [x19, #80]
  454240:	mov	x1, x19
  454244:	ldp	x20, x19, [sp, #32]
  454248:	ldr	x21, [sp, #16]
  45424c:	ldp	x29, x30, [sp], #48
  454250:	br	x2
  454254:	ldp	x20, x19, [sp, #32]
  454258:	ldr	x21, [sp, #16]
  45425c:	ldp	x29, x30, [sp], #48
  454260:	ret
  454264:	stp	x29, x30, [sp, #-48]!
  454268:	stp	x22, x21, [sp, #16]
  45426c:	stp	x20, x19, [sp, #32]
  454270:	ldp	x8, x20, [x0, #16]
  454274:	ldr	x21, [x0, #32]
  454278:	mov	x19, x0
  45427c:	mov	x29, sp
  454280:	cbz	x8, 45428c <feof@plt+0x5158c>
  454284:	subs	w22, w21, #0x1
  454288:	b.pl	4542ec <feof@plt+0x515ec>  // b.nfrst
  45428c:	cmp	x21, #0x20, lsl #12
  454290:	b.ls	454304 <feof@plt+0x51604>  // b.plast
  454294:	mov	w8, wzr
  454298:	mov	w21, #0x1e                  	// #30
  45429c:	sub	w9, w21, w8
  4542a0:	add	w9, w8, w9, lsr #1
  4542a4:	cmp	w9, #0x5
  4542a8:	csel	w21, w21, w9, cc  // cc = lo, ul, last
  4542ac:	csinc	w8, w8, w9, cs  // cs = hs, nlast
  4542b0:	cmp	w21, w8
  4542b4:	b.ne	45429c <feof@plt+0x5159c>  // b.any
  4542b8:	cmp	w21, #0x4
  4542bc:	b.ls	454374 <feof@plt+0x51674>  // b.plast
  4542c0:	adrp	x10, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4542c4:	sbfiz	x9, x21, #4, #32
  4542c8:	add	x10, x10, #0xb0
  4542cc:	ldr	x8, [x19, #72]
  4542d0:	ldrsw	x20, [x10, x9]
  4542d4:	cbz	x8, 454318 <feof@plt+0x51618>
  4542d8:	ldr	x0, [x19, #24]
  4542dc:	blr	x8
  4542e0:	b	45432c <feof@plt+0x5162c>
  4542e4:	subs	w22, w22, #0x1
  4542e8:	b.mi	45428c <feof@plt+0x5158c>  // b.first
  4542ec:	ldr	x0, [x20, w22, uxtw #3]
  4542f0:	cmp	x0, #0x2
  4542f4:	b.cc	4542e4 <feof@plt+0x515e4>  // b.lo, b.ul, b.last
  4542f8:	ldr	x8, [x19, #16]
  4542fc:	blr	x8
  454300:	b	4542e4 <feof@plt+0x515e4>
  454304:	lsl	x2, x21, #3
  454308:	mov	x0, x20
  45430c:	mov	w1, wzr
  454310:	bl	402790 <memset@plt>
  454314:	b	454360 <feof@plt+0x51660>
  454318:	ldr	x8, [x19, #96]
  45431c:	cbz	x8, 45432c <feof@plt+0x5162c>
  454320:	ldr	x0, [x19, #80]
  454324:	ldr	x1, [x19, #24]
  454328:	blr	x8
  45432c:	ldr	x8, [x19, #88]
  454330:	cbz	x8, 454348 <feof@plt+0x51648>
  454334:	ldr	x0, [x19, #80]
  454338:	mov	w2, #0x8                   	// #8
  45433c:	mov	x1, x20
  454340:	blr	x8
  454344:	b	454358 <feof@plt+0x51658>
  454348:	ldr	x8, [x19, #64]
  45434c:	mov	w1, #0x8                   	// #8
  454350:	mov	x0, x20
  454354:	blr	x8
  454358:	stp	x0, x20, [x19, #24]
  45435c:	str	w21, [x19, #104]
  454360:	stp	xzr, xzr, [x19, #40]
  454364:	ldp	x20, x19, [sp, #32]
  454368:	ldp	x22, x21, [sp, #16]
  45436c:	ldp	x29, x30, [sp], #48
  454370:	ret
  454374:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  454378:	ldr	x0, [x8, #1416]
  45437c:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  454380:	add	x1, x1, #0x290
  454384:	mov	w2, #0x80                  	// #128
  454388:	bl	4026f0 <fprintf@plt>
  45438c:	bl	402b80 <abort@plt>
  454390:	stp	x29, x30, [sp, #-80]!
  454394:	stp	x26, x25, [sp, #16]
  454398:	stp	x24, x23, [sp, #32]
  45439c:	stp	x22, x21, [sp, #48]
  4543a0:	stp	x20, x19, [sp, #64]
  4543a4:	ldr	w8, [x0, #104]
  4543a8:	adrp	x25, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4543ac:	add	x25, x25, #0xb0
  4543b0:	ldr	w9, [x0, #56]
  4543b4:	add	x11, x25, x8, lsl #4
  4543b8:	ldp	w10, w12, [x11]
  4543bc:	mov	w26, w2
  4543c0:	add	w9, w9, #0x1
  4543c4:	str	w9, [x0, #56]
  4543c8:	ldr	w9, [x11, #12]
  4543cc:	mul	x11, x12, x26
  4543d0:	lsr	x11, x11, #32
  4543d4:	sub	w12, w2, w11
  4543d8:	ldr	x13, [x0, #24]
  4543dc:	add	w11, w11, w12, lsr #1
  4543e0:	lsr	w11, w11, w9
  4543e4:	msub	w24, w11, w10, w2
  4543e8:	ldr	x22, [x13, w24, uxtw #3]
  4543ec:	mov	x29, sp
  4543f0:	cbz	x22, 45449c <feof@plt+0x5179c>
  4543f4:	ldr	x23, [x0, #32]
  4543f8:	mov	w21, w2
  4543fc:	mov	x19, x0
  454400:	mov	x20, x1
  454404:	cmp	x22, #0x1
  454408:	b.eq	454430 <feof@plt+0x51730>  // b.none
  45440c:	ldr	x8, [x19, #8]
  454410:	mov	x0, x22
  454414:	mov	x1, x20
  454418:	blr	x8
  45441c:	cbnz	w0, 45449c <feof@plt+0x5179c>
  454420:	ldr	w8, [x19, #104]
  454424:	add	x9, x25, x8, lsl #4
  454428:	ldr	w10, [x9]
  45442c:	ldr	w9, [x9, #12]
  454430:	add	x8, x25, x8, lsl #4
  454434:	ldr	w8, [x8, #8]
  454438:	sub	w10, w10, #0x2
  45443c:	mul	x8, x8, x26
  454440:	lsr	x8, x8, #32
  454444:	sub	w11, w21, w8
  454448:	add	w8, w8, w11, lsr #1
  45444c:	lsr	w8, w8, w9
  454450:	msub	w8, w8, w10, w21
  454454:	add	w21, w8, #0x1
  454458:	ldr	w8, [x19, #60]
  45445c:	add	w9, w21, w24
  454460:	ldr	x10, [x19, #24]
  454464:	cmp	x23, x9
  454468:	csel	w11, wzr, w23, hi  // hi = pmore
  45446c:	add	w8, w8, #0x1
  454470:	str	w8, [x19, #60]
  454474:	sub	w24, w9, w11
  454478:	ldr	x22, [x10, w24, uxtw #3]
  45447c:	cmp	x22, #0x1
  454480:	b.eq	454458 <feof@plt+0x51758>  // b.none
  454484:	cbz	x22, 45449c <feof@plt+0x5179c>
  454488:	ldr	x8, [x19, #8]
  45448c:	mov	x0, x22
  454490:	mov	x1, x20
  454494:	blr	x8
  454498:	cbz	w0, 454458 <feof@plt+0x51758>
  45449c:	mov	x0, x22
  4544a0:	ldp	x20, x19, [sp, #64]
  4544a4:	ldp	x22, x21, [sp, #48]
  4544a8:	ldp	x24, x23, [sp, #32]
  4544ac:	ldp	x26, x25, [sp, #16]
  4544b0:	ldp	x29, x30, [sp], #80
  4544b4:	ret
  4544b8:	stp	x29, x30, [sp, #-32]!
  4544bc:	stp	x20, x19, [sp, #16]
  4544c0:	ldr	x8, [x0]
  4544c4:	mov	x19, x0
  4544c8:	mov	x0, x1
  4544cc:	mov	x29, sp
  4544d0:	mov	x20, x1
  4544d4:	blr	x8
  4544d8:	mov	w2, w0
  4544dc:	mov	x0, x19
  4544e0:	mov	x1, x20
  4544e4:	ldp	x20, x19, [sp, #16]
  4544e8:	ldp	x29, x30, [sp], #32
  4544ec:	b	454390 <feof@plt+0x51690>
  4544f0:	stp	x29, x30, [sp, #-96]!
  4544f4:	stp	x26, x25, [sp, #32]
  4544f8:	stp	x24, x23, [sp, #48]
  4544fc:	stp	x22, x21, [sp, #64]
  454500:	stp	x20, x19, [sp, #80]
  454504:	ldr	x24, [x0, #32]
  454508:	mov	w20, w3
  45450c:	mov	w23, w2
  454510:	mov	x19, x0
  454514:	cmp	w3, #0x1
  454518:	mov	x21, x1
  45451c:	str	x27, [sp, #16]
  454520:	mov	x29, sp
  454524:	b.ne	454548 <feof@plt+0x51848>  // b.any
  454528:	ldr	x8, [x19, #40]
  45452c:	add	x9, x24, x24, lsl #1
  454530:	cmp	x9, x8, lsl #2
  454534:	b.hi	454548 <feof@plt+0x51848>  // b.pmore
  454538:	mov	x0, x19
  45453c:	bl	4546b0 <feof@plt+0x519b0>
  454540:	cbz	w0, 4545dc <feof@plt+0x518dc>
  454544:	ldr	x24, [x19, #32]
  454548:	ldr	w8, [x19, #104]
  45454c:	adrp	x26, 467000 <_obstack_memory_used@@Base+0x11dd8>
  454550:	add	x26, x26, #0xb0
  454554:	ldr	w9, [x19, #56]
  454558:	add	x12, x26, x8, lsl #4
  45455c:	ldp	w11, w13, [x12]
  454560:	mov	w27, w23
  454564:	add	w14, w9, #0x1
  454568:	ldr	w9, [x12, #12]
  45456c:	mul	x12, x13, x27
  454570:	lsr	x12, x12, #32
  454574:	ldr	x10, [x19, #24]
  454578:	sub	w13, w23, w12
  45457c:	add	w12, w12, w13, lsr #1
  454580:	lsr	w12, w12, w9
  454584:	msub	w25, w12, w11, w23
  454588:	str	w14, [x19, #56]
  45458c:	add	x22, x10, w25, uxtw #3
  454590:	ldr	x0, [x22]
  454594:	cbz	x0, 4545bc <feof@plt+0x518bc>
  454598:	cmp	x0, #0x1
  45459c:	b.eq	4545f8 <feof@plt+0x518f8>  // b.none
  4545a0:	ldr	x8, [x19, #8]
  4545a4:	mov	x1, x21
  4545a8:	blr	x8
  4545ac:	cbz	w0, 4545e4 <feof@plt+0x518e4>
  4545b0:	ldr	x8, [x19, #24]
  4545b4:	add	x22, x8, x25, lsl #3
  4545b8:	b	454690 <feof@plt+0x51990>
  4545bc:	mov	x22, xzr
  4545c0:	cbz	w20, 4545dc <feof@plt+0x518dc>
  4545c4:	cbz	x22, 454680 <feof@plt+0x51980>
  4545c8:	ldr	x8, [x19, #48]
  4545cc:	sub	x8, x8, #0x1
  4545d0:	str	x8, [x19, #48]
  4545d4:	str	xzr, [x22]
  4545d8:	b	454690 <feof@plt+0x51990>
  4545dc:	mov	x22, xzr
  4545e0:	b	454690 <feof@plt+0x51990>
  4545e4:	ldr	w8, [x19, #104]
  4545e8:	mov	x22, xzr
  4545ec:	add	x9, x26, x8, lsl #4
  4545f0:	ldr	w11, [x9]
  4545f4:	ldr	w9, [x9, #12]
  4545f8:	add	x8, x26, x8, lsl #4
  4545fc:	ldr	w8, [x8, #8]
  454600:	sub	w10, w11, #0x2
  454604:	mul	x8, x8, x27
  454608:	lsr	x8, x8, #32
  45460c:	sub	w11, w23, w8
  454610:	add	w8, w8, w11, lsr #1
  454614:	lsr	w8, w8, w9
  454618:	msub	w8, w8, w10, w23
  45461c:	add	w23, w8, #0x1
  454620:	ldr	w8, [x19, #60]
  454624:	add	w9, w23, w25
  454628:	ldr	x10, [x19, #24]
  45462c:	cmp	x24, x9
  454630:	csel	w11, wzr, w24, hi  // hi = pmore
  454634:	add	w8, w8, #0x1
  454638:	str	w8, [x19, #60]
  45463c:	sub	w25, w9, w11
  454640:	ldr	x0, [x10, w25, uxtw #3]
  454644:	cbz	x0, 4545c0 <feof@plt+0x518c0>
  454648:	cmp	x0, #0x1
  45464c:	b.eq	454664 <feof@plt+0x51964>  // b.none
  454650:	ldr	x8, [x19, #8]
  454654:	mov	x1, x21
  454658:	blr	x8
  45465c:	cbz	w0, 454620 <feof@plt+0x51920>
  454660:	b	454674 <feof@plt+0x51974>
  454664:	add	x8, x10, w25, uxtw #3
  454668:	cmp	x22, #0x0
  45466c:	csel	x22, x8, x22, eq  // eq = none
  454670:	b	454620 <feof@plt+0x51920>
  454674:	ldr	x8, [x19, #24]
  454678:	add	x22, x8, w25, uxtw #3
  45467c:	b	454690 <feof@plt+0x51990>
  454680:	ldr	x8, [x19, #40]
  454684:	add	x22, x10, w25, uxtw #3
  454688:	add	x8, x8, #0x1
  45468c:	str	x8, [x19, #40]
  454690:	mov	x0, x22
  454694:	ldp	x20, x19, [sp, #80]
  454698:	ldp	x22, x21, [sp, #64]
  45469c:	ldp	x24, x23, [sp, #48]
  4546a0:	ldp	x26, x25, [sp, #32]
  4546a4:	ldr	x27, [sp, #16]
  4546a8:	ldp	x29, x30, [sp], #96
  4546ac:	ret
  4546b0:	stp	x29, x30, [sp, #-64]!
  4546b4:	stp	x24, x23, [sp, #16]
  4546b8:	stp	x22, x21, [sp, #32]
  4546bc:	stp	x20, x19, [sp, #48]
  4546c0:	ldp	x8, x9, [x0, #40]
  4546c4:	ldp	x19, x23, [x0, #24]
  4546c8:	adrp	x22, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4546cc:	mov	x20, x0
  4546d0:	sub	x8, x8, x9
  4546d4:	lsl	x2, x8, #1
  4546d8:	cmp	x2, x23
  4546dc:	add	x22, x22, #0xb0
  4546e0:	mov	x29, sp
  4546e4:	b.hi	454704 <feof@plt+0x51a04>  // b.pmore
  4546e8:	ldr	w24, [x20, #104]
  4546ec:	cmp	x23, #0x21
  4546f0:	b.cc	454764 <feof@plt+0x51a64>  // b.lo, b.ul, b.last
  4546f4:	lsl	x8, x8, #3
  4546f8:	cmp	x8, x23
  4546fc:	mov	x21, x23
  454700:	b.cs	454744 <feof@plt+0x51a44>  // b.hs, b.nlast
  454704:	mov	w8, wzr
  454708:	mov	w24, #0x1e                  	// #30
  45470c:	sub	w9, w24, w8
  454710:	add	w9, w8, w9, lsr #1
  454714:	lsl	x10, x9, #4
  454718:	ldr	w10, [x22, x10]
  45471c:	cmp	x2, x10
  454720:	csel	w24, w24, w9, hi  // hi = pmore
  454724:	csinc	w8, w8, w9, ls  // ls = plast
  454728:	cmp	w24, w8
  45472c:	b.ne	45470c <feof@plt+0x51a0c>  // b.any
  454730:	mov	w8, w24
  454734:	lsl	x8, x8, #4
  454738:	ldr	w21, [x22, x8]
  45473c:	cmp	x2, x21
  454740:	b.hi	4548a4 <feof@plt+0x51ba4>  // b.pmore
  454744:	ldr	x8, [x20, #88]
  454748:	cbz	x8, 454770 <feof@plt+0x51a70>
  45474c:	ldr	x0, [x20, #80]
  454750:	mov	w2, #0x8                   	// #8
  454754:	mov	x1, x21
  454758:	blr	x8
  45475c:	cbnz	x0, 454784 <feof@plt+0x51a84>
  454760:	b	454890 <feof@plt+0x51b90>
  454764:	mov	x21, x23
  454768:	ldr	x8, [x20, #88]
  45476c:	cbnz	x8, 45474c <feof@plt+0x51a4c>
  454770:	ldr	x8, [x20, #64]
  454774:	mov	w1, #0x8                   	// #8
  454778:	mov	x0, x21
  45477c:	blr	x8
  454780:	cbz	x0, 454890 <feof@plt+0x51b90>
  454784:	ldp	x9, x8, [x20, #40]
  454788:	add	x23, x19, x23, lsl #3
  45478c:	str	w24, [x20, #104]
  454790:	mov	x24, x19
  454794:	sub	x8, x9, x8
  454798:	stp	x0, x21, [x20, #24]
  45479c:	stp	x8, xzr, [x20, #40]
  4547a0:	b	4547b4 <feof@plt+0x51ab4>
  4547a4:	str	x21, [x14]
  4547a8:	add	x24, x24, #0x8
  4547ac:	cmp	x24, x23
  4547b0:	b.cs	454864 <feof@plt+0x51b64>  // b.hs, b.nlast
  4547b4:	ldr	x21, [x24]
  4547b8:	cmp	x21, #0x2
  4547bc:	b.cc	4547a8 <feof@plt+0x51aa8>  // b.lo, b.ul, b.last
  4547c0:	ldr	x8, [x20]
  4547c4:	mov	x0, x21
  4547c8:	blr	x8
  4547cc:	ldr	w10, [x20, #104]
  4547d0:	mov	w11, w0
  4547d4:	add	x8, x22, x10, lsl #4
  4547d8:	ldp	w13, w9, [x8]
  4547dc:	ldr	w12, [x8, #12]
  4547e0:	mul	x8, x9, x11
  4547e4:	lsr	x9, x8, #32
  4547e8:	sub	w14, w0, w9
  4547ec:	ldr	x8, [x20, #24]
  4547f0:	add	w9, w9, w14, lsr #1
  4547f4:	lsr	w9, w9, w12
  4547f8:	msub	w9, w9, w13, w0
  4547fc:	add	x14, x8, w9, uxtw #3
  454800:	ldr	x15, [x14]
  454804:	cbz	x15, 4547a4 <feof@plt+0x51aa4>
  454808:	cmp	x15, #0x1
  45480c:	b.eq	454860 <feof@plt+0x51b60>  // b.none
  454810:	add	x10, x22, x10, lsl #4
  454814:	ldr	w14, [x10, #8]
  454818:	ldr	x10, [x20, #32]
  45481c:	sub	w13, w13, #0x2
  454820:	mul	x14, x14, x11
  454824:	lsr	x14, x14, #32
  454828:	sub	w15, w11, w14
  45482c:	add	w14, w14, w15, lsr #1
  454830:	lsr	w12, w14, w12
  454834:	msub	w11, w12, w13, w11
  454838:	add	w11, w11, #0x1
  45483c:	add	w9, w11, w9
  454840:	cmp	x10, x9
  454844:	csel	w12, wzr, w10, hi  // hi = pmore
  454848:	sub	w9, w9, w12
  45484c:	add	x14, x8, w9, uxtw #3
  454850:	ldr	x12, [x14]
  454854:	cbz	x12, 4547a4 <feof@plt+0x51aa4>
  454858:	cmp	x12, #0x1
  45485c:	b.ne	45483c <feof@plt+0x51b3c>  // b.any
  454860:	bl	402b80 <abort@plt>
  454864:	ldr	x8, [x20, #72]
  454868:	cbz	x8, 454878 <feof@plt+0x51b78>
  45486c:	mov	x0, x19
  454870:	blr	x8
  454874:	b	45488c <feof@plt+0x51b8c>
  454878:	ldr	x8, [x20, #96]
  45487c:	cbz	x8, 45488c <feof@plt+0x51b8c>
  454880:	ldr	x0, [x20, #80]
  454884:	mov	x1, x19
  454888:	blr	x8
  45488c:	mov	w0, #0x1                   	// #1
  454890:	ldp	x20, x19, [sp, #48]
  454894:	ldp	x22, x21, [sp, #32]
  454898:	ldp	x24, x23, [sp, #16]
  45489c:	ldp	x29, x30, [sp], #64
  4548a0:	ret
  4548a4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4548a8:	ldr	x0, [x8, #1416]
  4548ac:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4548b0:	add	x1, x1, #0x290
  4548b4:	bl	4026f0 <fprintf@plt>
  4548b8:	bl	402b80 <abort@plt>
  4548bc:	stp	x29, x30, [sp, #-48]!
  4548c0:	stp	x20, x19, [sp, #32]
  4548c4:	ldr	x8, [x0]
  4548c8:	mov	x20, x0
  4548cc:	mov	x0, x1
  4548d0:	str	x21, [sp, #16]
  4548d4:	mov	x29, sp
  4548d8:	mov	w19, w2
  4548dc:	mov	x21, x1
  4548e0:	blr	x8
  4548e4:	mov	w2, w0
  4548e8:	mov	x0, x20
  4548ec:	mov	x1, x21
  4548f0:	mov	w3, w19
  4548f4:	ldp	x20, x19, [sp, #32]
  4548f8:	ldr	x21, [sp, #16]
  4548fc:	ldp	x29, x30, [sp], #48
  454900:	b	4544f0 <feof@plt+0x517f0>
  454904:	stp	x29, x30, [sp, #-32]!
  454908:	stp	x20, x19, [sp, #16]
  45490c:	ldr	x8, [x0]
  454910:	mov	x19, x0
  454914:	mov	x0, x1
  454918:	mov	x29, sp
  45491c:	mov	x20, x1
  454920:	blr	x8
  454924:	mov	w2, w0
  454928:	mov	x0, x19
  45492c:	mov	x1, x20
  454930:	mov	w3, wzr
  454934:	bl	4544f0 <feof@plt+0x517f0>
  454938:	cbz	x0, 454964 <feof@plt+0x51c64>
  45493c:	ldr	x8, [x19, #16]
  454940:	mov	x20, x0
  454944:	cbz	x8, 454950 <feof@plt+0x51c50>
  454948:	ldr	x0, [x20]
  45494c:	blr	x8
  454950:	mov	w8, #0x1                   	// #1
  454954:	str	x8, [x20]
  454958:	ldr	x8, [x19, #48]
  45495c:	add	x8, x8, #0x1
  454960:	str	x8, [x19, #48]
  454964:	ldp	x20, x19, [sp, #16]
  454968:	ldp	x29, x30, [sp], #32
  45496c:	ret
  454970:	stp	x29, x30, [sp, #-32]!
  454974:	mov	w3, wzr
  454978:	stp	x20, x19, [sp, #16]
  45497c:	mov	x29, sp
  454980:	mov	x19, x0
  454984:	bl	4544f0 <feof@plt+0x517f0>
  454988:	cbz	x0, 4549b4 <feof@plt+0x51cb4>
  45498c:	ldr	x8, [x19, #16]
  454990:	mov	x20, x0
  454994:	cbz	x8, 4549a0 <feof@plt+0x51ca0>
  454998:	ldr	x0, [x20]
  45499c:	blr	x8
  4549a0:	mov	w8, #0x1                   	// #1
  4549a4:	str	x8, [x20]
  4549a8:	ldr	x8, [x19, #48]
  4549ac:	add	x8, x8, #0x1
  4549b0:	str	x8, [x19, #48]
  4549b4:	ldp	x20, x19, [sp, #16]
  4549b8:	ldp	x29, x30, [sp], #32
  4549bc:	ret
  4549c0:	stp	x29, x30, [sp, #-32]!
  4549c4:	stp	x20, x19, [sp, #16]
  4549c8:	ldr	x8, [x0, #24]
  4549cc:	mov	x29, sp
  4549d0:	cmp	x8, x1
  4549d4:	b.hi	454a28 <feof@plt+0x51d28>  // b.pmore
  4549d8:	ldr	x9, [x0, #32]
  4549dc:	mov	x19, x0
  4549e0:	mov	x20, x1
  4549e4:	add	x8, x8, x9, lsl #3
  4549e8:	cmp	x8, x1
  4549ec:	b.ls	454a28 <feof@plt+0x51d28>  // b.plast
  4549f0:	ldr	x0, [x20]
  4549f4:	cmp	x0, #0x1
  4549f8:	b.ls	454a28 <feof@plt+0x51d28>  // b.plast
  4549fc:	ldr	x8, [x19, #16]
  454a00:	cbz	x8, 454a08 <feof@plt+0x51d08>
  454a04:	blr	x8
  454a08:	mov	w8, #0x1                   	// #1
  454a0c:	str	x8, [x20]
  454a10:	ldr	x8, [x19, #48]
  454a14:	add	x8, x8, #0x1
  454a18:	str	x8, [x19, #48]
  454a1c:	ldp	x20, x19, [sp, #16]
  454a20:	ldp	x29, x30, [sp], #32
  454a24:	ret
  454a28:	bl	402b80 <abort@plt>
  454a2c:	stp	x29, x30, [sp, #-48]!
  454a30:	stp	x22, x21, [sp, #16]
  454a34:	stp	x20, x19, [sp, #32]
  454a38:	ldp	x21, x8, [x0, #24]
  454a3c:	mov	x19, x2
  454a40:	mov	x20, x1
  454a44:	mov	x29, sp
  454a48:	add	x22, x21, x8, lsl #3
  454a4c:	b	454a5c <feof@plt+0x51d5c>
  454a50:	add	x21, x21, #0x8
  454a54:	cmp	x21, x22
  454a58:	b.cs	454a78 <feof@plt+0x51d78>  // b.hs, b.nlast
  454a5c:	ldr	x8, [x21]
  454a60:	cmp	x8, #0x2
  454a64:	b.cc	454a50 <feof@plt+0x51d50>  // b.lo, b.ul, b.last
  454a68:	mov	x0, x21
  454a6c:	mov	x1, x19
  454a70:	blr	x20
  454a74:	cbnz	w0, 454a50 <feof@plt+0x51d50>
  454a78:	ldp	x20, x19, [sp, #32]
  454a7c:	ldp	x22, x21, [sp, #16]
  454a80:	ldp	x29, x30, [sp], #48
  454a84:	ret
  454a88:	stp	x29, x30, [sp, #-48]!
  454a8c:	stp	x22, x21, [sp, #16]
  454a90:	stp	x20, x19, [sp, #32]
  454a94:	ldr	x8, [x0, #32]
  454a98:	mov	x19, x2
  454a9c:	mov	x21, x0
  454aa0:	mov	x20, x1
  454aa4:	cmp	x8, #0x21
  454aa8:	mov	x29, sp
  454aac:	b.cc	454ad0 <feof@plt+0x51dd0>  // b.lo, b.ul, b.last
  454ab0:	ldp	x9, x10, [x21, #40]
  454ab4:	sub	x9, x9, x10
  454ab8:	lsl	x9, x9, #3
  454abc:	cmp	x9, x8
  454ac0:	b.cs	454ad0 <feof@plt+0x51dd0>  // b.hs, b.nlast
  454ac4:	mov	x0, x21
  454ac8:	bl	4546b0 <feof@plt+0x519b0>
  454acc:	ldr	x8, [x21, #32]
  454ad0:	ldr	x21, [x21, #24]
  454ad4:	add	x22, x21, x8, lsl #3
  454ad8:	b	454ae8 <feof@plt+0x51de8>
  454adc:	add	x21, x21, #0x8
  454ae0:	cmp	x21, x22
  454ae4:	b.cs	454b04 <feof@plt+0x51e04>  // b.hs, b.nlast
  454ae8:	ldr	x8, [x21]
  454aec:	cmp	x8, #0x2
  454af0:	b.cc	454adc <feof@plt+0x51ddc>  // b.lo, b.ul, b.last
  454af4:	mov	x0, x21
  454af8:	mov	x1, x19
  454afc:	blr	x20
  454b00:	cbnz	w0, 454adc <feof@plt+0x51ddc>
  454b04:	ldp	x20, x19, [sp, #32]
  454b08:	ldp	x22, x21, [sp, #16]
  454b0c:	ldp	x29, x30, [sp], #48
  454b10:	ret
  454b14:	ldr	w8, [x0, #56]
  454b18:	cbz	w8, 454b30 <feof@plt+0x51e30>
  454b1c:	ldr	s0, [x0, #60]
  454b20:	ucvtf	d1, w8
  454b24:	ucvtf	d0, d0
  454b28:	fdiv	d0, d0, d1
  454b2c:	ret
  454b30:	fmov	d0, xzr
  454b34:	ret
  454b38:	ldrb	w9, [x0]
  454b3c:	cbz	w9, 454b68 <feof@plt+0x51e68>
  454b40:	mov	x8, x0
  454b44:	mov	w0, wzr
  454b48:	add	x8, x8, #0x1
  454b4c:	mov	w10, #0x43                  	// #67
  454b50:	mul	w11, w0, w10
  454b54:	add	w11, w11, w9, uxtb
  454b58:	ldrb	w9, [x8], #1
  454b5c:	sub	w0, w11, #0x71
  454b60:	cbnz	w9, 454b50 <feof@plt+0x51e50>
  454b64:	ret
  454b68:	mov	w0, wzr
  454b6c:	ret
  454b70:	tst	x0, #0x3
  454b74:	b.eq	454c28 <feof@plt+0x51f28>  // b.none
  454b78:	mov	w8, #0x79b9                	// #31161
  454b7c:	cmp	w1, #0xc
  454b80:	movk	w8, #0x9e37, lsl #16
  454b84:	b.cc	454cd8 <feof@plt+0x51fd8>  // b.lo, b.ul, b.last
  454b88:	mov	w9, #0x79b9                	// #31161
  454b8c:	mov	w10, w1
  454b90:	movk	w9, #0x9e37, lsl #16
  454b94:	ldp	w11, w12, [x0]
  454b98:	sub	w10, w10, #0xc
  454b9c:	cmp	w10, #0xb
  454ba0:	add	w9, w11, w9
  454ba4:	ldr	w11, [x0, #8]
  454ba8:	add	w8, w12, w8
  454bac:	sub	w9, w9, w8
  454bb0:	add	x0, x0, #0xc
  454bb4:	add	w11, w11, w2
  454bb8:	sub	w9, w9, w11
  454bbc:	sub	w8, w8, w11
  454bc0:	eor	w9, w9, w11, lsr #13
  454bc4:	sub	w8, w8, w9
  454bc8:	sub	w11, w11, w9
  454bcc:	eor	w8, w8, w9, lsl #8
  454bd0:	sub	w11, w11, w8
  454bd4:	sub	w9, w9, w8
  454bd8:	eor	w11, w11, w8, lsr #13
  454bdc:	sub	w9, w9, w11
  454be0:	sub	w8, w8, w11
  454be4:	eor	w9, w9, w11, lsr #12
  454be8:	sub	w8, w8, w9
  454bec:	sub	w11, w11, w9
  454bf0:	eor	w8, w8, w9, lsl #16
  454bf4:	sub	w11, w11, w8
  454bf8:	sub	w9, w9, w8
  454bfc:	eor	w11, w11, w8, lsr #5
  454c00:	sub	w9, w9, w11
  454c04:	sub	w8, w8, w11
  454c08:	eor	w9, w9, w11, lsr #3
  454c0c:	sub	w8, w8, w9
  454c10:	sub	w11, w11, w9
  454c14:	eor	w8, w8, w9, lsl #10
  454c18:	sub	w11, w11, w8
  454c1c:	eor	w2, w11, w8, lsr #15
  454c20:	b.hi	454b94 <feof@plt+0x51e94>  // b.pmore
  454c24:	b	454ce4 <feof@plt+0x51fe4>
  454c28:	mov	w8, #0x79b9                	// #31161
  454c2c:	cmp	w1, #0xc
  454c30:	movk	w8, #0x9e37, lsl #16
  454c34:	b.cc	454cd8 <feof@plt+0x51fd8>  // b.lo, b.ul, b.last
  454c38:	mov	w9, #0x79b9                	// #31161
  454c3c:	mov	w10, w1
  454c40:	movk	w9, #0x9e37, lsl #16
  454c44:	ldp	w11, w12, [x0]
  454c48:	sub	w10, w10, #0xc
  454c4c:	cmp	w10, #0xb
  454c50:	add	w9, w11, w9
  454c54:	ldr	w11, [x0, #8]
  454c58:	add	w8, w12, w8
  454c5c:	sub	w9, w9, w8
  454c60:	add	x0, x0, #0xc
  454c64:	add	w11, w11, w2
  454c68:	sub	w9, w9, w11
  454c6c:	sub	w8, w8, w11
  454c70:	eor	w9, w9, w11, lsr #13
  454c74:	sub	w8, w8, w9
  454c78:	sub	w11, w11, w9
  454c7c:	eor	w8, w8, w9, lsl #8
  454c80:	sub	w11, w11, w8
  454c84:	sub	w9, w9, w8
  454c88:	eor	w11, w11, w8, lsr #13
  454c8c:	sub	w9, w9, w11
  454c90:	sub	w8, w8, w11
  454c94:	eor	w9, w9, w11, lsr #12
  454c98:	sub	w8, w8, w9
  454c9c:	sub	w11, w11, w9
  454ca0:	eor	w8, w8, w9, lsl #16
  454ca4:	sub	w11, w11, w8
  454ca8:	sub	w9, w9, w8
  454cac:	eor	w11, w11, w8, lsr #5
  454cb0:	sub	w9, w9, w11
  454cb4:	sub	w8, w8, w11
  454cb8:	eor	w9, w9, w11, lsr #3
  454cbc:	sub	w8, w8, w9
  454cc0:	sub	w11, w11, w9
  454cc4:	eor	w8, w8, w9, lsl #10
  454cc8:	sub	w11, w11, w8
  454ccc:	eor	w2, w11, w8, lsr #15
  454cd0:	b.hi	454c44 <feof@plt+0x51f44>  // b.pmore
  454cd4:	b	454ce4 <feof@plt+0x51fe4>
  454cd8:	mov	w9, #0x79b9                	// #31161
  454cdc:	movk	w9, #0x9e37, lsl #16
  454ce0:	mov	w10, w1
  454ce4:	sub	w11, w10, #0x1
  454ce8:	cmp	w11, #0xa
  454cec:	add	w10, w2, w1
  454cf0:	b.hi	454d64 <feof@plt+0x52064>  // b.pmore
  454cf4:	adrp	x12, 467000 <_obstack_memory_used@@Base+0x11dd8>
  454cf8:	add	x12, x12, #0xa4
  454cfc:	adr	x13, 454d0c <feof@plt+0x5200c>
  454d00:	ldrb	w14, [x12, x11]
  454d04:	add	x13, x13, x14, lsl #2
  454d08:	br	x13
  454d0c:	ldrb	w11, [x0, #10]
  454d10:	add	w10, w10, w11, lsl #24
  454d14:	ldrb	w11, [x0, #9]
  454d18:	add	w10, w10, w11, lsl #16
  454d1c:	ldrb	w11, [x0, #8]
  454d20:	add	w10, w10, w11, lsl #8
  454d24:	ldrb	w11, [x0, #7]
  454d28:	add	w8, w8, w11, lsl #24
  454d2c:	ldrb	w11, [x0, #6]
  454d30:	add	w8, w8, w11, lsl #16
  454d34:	ldrb	w11, [x0, #5]
  454d38:	add	w8, w8, w11, lsl #8
  454d3c:	ldrb	w11, [x0, #4]
  454d40:	add	w8, w8, w11
  454d44:	ldrb	w11, [x0, #3]
  454d48:	add	w9, w9, w11, lsl #24
  454d4c:	ldrb	w11, [x0, #2]
  454d50:	add	w9, w9, w11, lsl #16
  454d54:	ldrb	w11, [x0, #1]
  454d58:	add	w9, w9, w11, lsl #8
  454d5c:	ldrb	w11, [x0]
  454d60:	add	w9, w9, w11
  454d64:	sub	w9, w9, w8
  454d68:	sub	w9, w9, w10
  454d6c:	sub	w8, w8, w10
  454d70:	eor	w9, w9, w10, lsr #13
  454d74:	sub	w8, w8, w9
  454d78:	sub	w10, w10, w9
  454d7c:	eor	w8, w8, w9, lsl #8
  454d80:	sub	w10, w10, w8
  454d84:	sub	w9, w9, w8
  454d88:	eor	w10, w10, w8, lsr #13
  454d8c:	sub	w9, w9, w10
  454d90:	sub	w8, w8, w10
  454d94:	eor	w9, w9, w10, lsr #12
  454d98:	sub	w8, w8, w9
  454d9c:	sub	w10, w10, w9
  454da0:	eor	w8, w8, w9, lsl #16
  454da4:	sub	w10, w10, w8
  454da8:	sub	w9, w9, w8
  454dac:	eor	w10, w10, w8, lsr #5
  454db0:	sub	w9, w9, w10
  454db4:	sub	w8, w8, w10
  454db8:	eor	w9, w9, w10, lsr #3
  454dbc:	sub	w8, w8, w9
  454dc0:	eor	w8, w8, w9, lsl #10
  454dc4:	sub	w9, w10, w9
  454dc8:	sub	w9, w9, w8
  454dcc:	eor	w0, w9, w8, lsr #15
  454dd0:	ret
  454dd4:	ret
  454dd8:	add	x8, x0, #0x1
  454ddc:	b	454de8 <feof@plt+0x520e8>
  454de0:	mov	x0, x8
  454de4:	add	x8, x8, #0x1
  454de8:	ldurb	w9, [x8, #-1]
  454dec:	cmp	w9, #0x2f
  454df0:	b.eq	454de0 <feof@plt+0x520e0>  // b.none
  454df4:	cbnz	w9, 454de4 <feof@plt+0x520e4>
  454df8:	ret
  454dfc:	ldrb	w8, [x0]
  454e00:	adrp	x9, 467000 <_obstack_memory_used@@Base+0x11dd8>
  454e04:	add	x9, x9, #0x3c4
  454e08:	ldrh	w8, [x9, x8, lsl #1]
  454e0c:	mov	w9, #0x88                  	// #136
  454e10:	tst	w8, w9
  454e14:	b.eq	454e28 <feof@plt+0x52128>  // b.none
  454e18:	ldrb	w8, [x0, #1]
  454e1c:	add	x9, x0, #0x2
  454e20:	cmp	w8, #0x3a
  454e24:	csel	x0, x9, x0, eq  // eq = none
  454e28:	add	x8, x0, #0x1
  454e2c:	b	454e38 <feof@plt+0x52138>
  454e30:	mov	x0, x8
  454e34:	add	x8, x8, #0x1
  454e38:	ldurb	w9, [x8, #-1]
  454e3c:	cmp	w9, #0x2f
  454e40:	b.eq	454e30 <feof@plt+0x52130>  // b.none
  454e44:	cmp	w9, #0x5c
  454e48:	b.eq	454e30 <feof@plt+0x52130>  // b.none
  454e4c:	cbnz	w9, 454e34 <feof@plt+0x52134>
  454e50:	ret
  454e54:	add	x8, x0, #0x1
  454e58:	b	454e64 <feof@plt+0x52164>
  454e5c:	mov	x0, x8
  454e60:	add	x8, x8, #0x1
  454e64:	ldurb	w9, [x8, #-1]
  454e68:	cmp	w9, #0x2f
  454e6c:	b.eq	454e5c <feof@plt+0x5215c>  // b.none
  454e70:	cbnz	w9, 454e60 <feof@plt+0x52160>
  454e74:	ret
  454e78:	stp	x29, x30, [sp, #-32]!
  454e7c:	stp	x28, x19, [sp, #16]
  454e80:	mov	x29, sp
  454e84:	sub	sp, sp, #0x1, lsl #12
  454e88:	mov	x1, sp
  454e8c:	mov	x19, x0
  454e90:	bl	402c70 <realpath@plt>
  454e94:	cmp	x0, #0x0
  454e98:	csel	x0, x19, x0, eq  // eq = none
  454e9c:	bl	4027c0 <strdup@plt>
  454ea0:	add	sp, sp, #0x1, lsl #12
  454ea4:	ldp	x28, x19, [sp, #16]
  454ea8:	ldp	x29, x30, [sp], #32
  454eac:	ret

0000000000454eb0 <_obstack_begin@@Base>:
  454eb0:	stp	x29, x30, [sp, #-48]!
  454eb4:	stp	x22, x21, [sp, #16]
  454eb8:	stp	x20, x19, [sp, #32]
  454ebc:	ldrb	w8, [x0, #80]
  454ec0:	cmp	x2, #0x0
  454ec4:	mov	w9, #0x10                  	// #16
  454ec8:	csel	x21, x9, x2, eq  // eq = none
  454ecc:	mov	w9, #0xfe0                 	// #4064
  454ed0:	cmp	x1, #0x0
  454ed4:	mov	x19, x0
  454ed8:	str	x4, [x0, #64]
  454edc:	csel	x0, x9, x1, eq  // eq = none
  454ee0:	and	w8, w8, #0xfe
  454ee4:	sub	x22, x21, #0x1
  454ee8:	mov	x29, sp
  454eec:	strb	w8, [x19, #80]
  454ef0:	str	x0, [x19]
  454ef4:	stp	x22, x3, [x19, #48]
  454ef8:	blr	x3
  454efc:	mov	x20, x0
  454f00:	cbnz	x0, 454f10 <_obstack_begin@@Base+0x60>
  454f04:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  454f08:	ldr	x8, [x8, #1360]
  454f0c:	blr	x8
  454f10:	add	x8, x20, x22
  454f14:	neg	x9, x21
  454f18:	add	x8, x8, #0x10
  454f1c:	and	x8, x8, x9
  454f20:	ldr	x9, [x19]
  454f24:	stp	x20, x8, [x19, #8]
  454f28:	str	x8, [x19, #24]
  454f2c:	mov	w0, #0x1                   	// #1
  454f30:	add	x8, x20, x9
  454f34:	str	x8, [x20]
  454f38:	str	x8, [x19, #32]
  454f3c:	str	xzr, [x20, #8]
  454f40:	ldrb	w8, [x19, #80]
  454f44:	and	w8, w8, #0xfffffff9
  454f48:	strb	w8, [x19, #80]
  454f4c:	ldp	x20, x19, [sp, #32]
  454f50:	ldp	x22, x21, [sp, #16]
  454f54:	ldp	x29, x30, [sp], #48
  454f58:	ret

0000000000454f5c <_obstack_begin_1@@Base>:
  454f5c:	stp	x29, x30, [sp, #-48]!
  454f60:	stp	x22, x21, [sp, #16]
  454f64:	stp	x20, x19, [sp, #32]
  454f68:	ldrb	w8, [x0, #80]
  454f6c:	cmp	x2, #0x0
  454f70:	mov	w9, #0x10                  	// #16
  454f74:	csel	x21, x9, x2, eq  // eq = none
  454f78:	mov	w9, #0xfe0                 	// #4064
  454f7c:	cmp	x1, #0x0
  454f80:	csel	x1, x9, x1, eq  // eq = none
  454f84:	orr	w8, w8, #0x1
  454f88:	sub	x22, x21, #0x1
  454f8c:	mov	x19, x0
  454f90:	stp	x4, x5, [x0, #64]
  454f94:	strb	w8, [x0, #80]
  454f98:	str	x1, [x0]
  454f9c:	stp	x22, x3, [x0, #48]
  454fa0:	mov	x0, x5
  454fa4:	mov	x29, sp
  454fa8:	blr	x3
  454fac:	mov	x20, x0
  454fb0:	cbnz	x0, 454fc0 <_obstack_begin_1@@Base+0x64>
  454fb4:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  454fb8:	ldr	x8, [x8, #1360]
  454fbc:	blr	x8
  454fc0:	add	x8, x20, x22
  454fc4:	neg	x9, x21
  454fc8:	add	x8, x8, #0x10
  454fcc:	and	x8, x8, x9
  454fd0:	ldr	x9, [x19]
  454fd4:	stp	x20, x8, [x19, #8]
  454fd8:	str	x8, [x19, #24]
  454fdc:	mov	w0, #0x1                   	// #1
  454fe0:	add	x8, x20, x9
  454fe4:	str	x8, [x20]
  454fe8:	str	x8, [x19, #32]
  454fec:	str	xzr, [x20, #8]
  454ff0:	ldrb	w8, [x19, #80]
  454ff4:	and	w8, w8, #0xfffffff9
  454ff8:	strb	w8, [x19, #80]
  454ffc:	ldp	x20, x19, [sp, #32]
  455000:	ldp	x22, x21, [sp, #16]
  455004:	ldp	x29, x30, [sp], #48
  455008:	ret

000000000045500c <_obstack_newchunk@@Base>:
  45500c:	stp	x29, x30, [sp, #-80]!
  455010:	str	x25, [sp, #16]
  455014:	stp	x24, x23, [sp, #32]
  455018:	stp	x22, x21, [sp, #48]
  45501c:	stp	x20, x19, [sp, #64]
  455020:	ldp	x9, x8, [x0, #16]
  455024:	ldr	x10, [x0, #48]
  455028:	ldp	x11, x21, [x0]
  45502c:	mov	x19, x0
  455030:	sub	x20, x8, x9
  455034:	adds	x8, x20, x1
  455038:	lsr	x9, x20, #3
  45503c:	cset	w12, cs  // cs = hs, nlast
  455040:	adds	x10, x8, x10
  455044:	add	x9, x9, #0x64
  455048:	cset	w8, cs  // cs = hs, nlast
  45504c:	adds	x9, x9, x10
  455050:	csel	x9, x10, x9, cs  // cs = hs, nlast
  455054:	cmp	x9, x11
  455058:	csel	x22, x11, x9, cc  // cc = lo, ul, last
  45505c:	mov	x29, sp
  455060:	tbnz	w12, #0, 4550a0 <_obstack_newchunk@@Base+0x94>
  455064:	tbnz	w8, #0, 4550a0 <_obstack_newchunk@@Base+0x94>
  455068:	ldrb	w8, [x19, #80]
  45506c:	tbnz	w8, #0, 455088 <_obstack_newchunk@@Base+0x7c>
  455070:	ldr	x8, [x19, #56]
  455074:	mov	x0, x22
  455078:	blr	x8
  45507c:	mov	x23, x0
  455080:	cbnz	x0, 4550b0 <_obstack_newchunk@@Base+0xa4>
  455084:	b	4550a0 <_obstack_newchunk@@Base+0x94>
  455088:	ldr	x8, [x19, #56]
  45508c:	ldr	x0, [x19, #72]
  455090:	mov	x1, x22
  455094:	blr	x8
  455098:	mov	x23, x0
  45509c:	cbnz	x0, 4550b0 <_obstack_newchunk@@Base+0xa4>
  4550a0:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4550a4:	ldr	x8, [x8, #1360]
  4550a8:	blr	x8
  4550ac:	mov	x23, xzr
  4550b0:	add	x8, x23, x22
  4550b4:	str	x23, [x19, #8]
  4550b8:	str	x21, [x23, #8]
  4550bc:	str	x8, [x19, #32]
  4550c0:	str	x8, [x23]
  4550c4:	ldr	x25, [x19, #48]
  4550c8:	ldr	x24, [x19, #16]
  4550cc:	mov	x2, x20
  4550d0:	add	x8, x23, x25
  4550d4:	add	x8, x8, #0x10
  4550d8:	bic	x22, x8, x25
  4550dc:	mov	x0, x22
  4550e0:	mov	x1, x24
  4550e4:	bl	402640 <memcpy@plt>
  4550e8:	ldrb	w8, [x19, #80]
  4550ec:	tbnz	w8, #1, 455134 <_obstack_newchunk@@Base+0x128>
  4550f0:	add	x9, x21, x25
  4550f4:	mvn	x8, x25
  4550f8:	add	x9, x9, #0x10
  4550fc:	and	x8, x9, x8
  455100:	cmp	x24, x8
  455104:	b.ne	455134 <_obstack_newchunk@@Base+0x128>  // b.any
  455108:	ldr	x8, [x21, #8]
  45510c:	str	x8, [x23, #8]
  455110:	ldrb	w8, [x19, #80]
  455114:	tbnz	w8, #0, 455128 <_obstack_newchunk@@Base+0x11c>
  455118:	ldr	x8, [x19, #64]
  45511c:	mov	x0, x21
  455120:	blr	x8
  455124:	b	455134 <_obstack_newchunk@@Base+0x128>
  455128:	ldp	x8, x0, [x19, #64]
  45512c:	mov	x1, x21
  455130:	blr	x8
  455134:	ldrb	w8, [x19, #80]
  455138:	add	x9, x22, x20
  45513c:	stp	x22, x9, [x19, #16]
  455140:	ldr	x25, [sp, #16]
  455144:	and	w8, w8, #0xfffffffd
  455148:	strb	w8, [x19, #80]
  45514c:	ldp	x20, x19, [sp, #64]
  455150:	ldp	x22, x21, [sp, #48]
  455154:	ldp	x24, x23, [sp, #32]
  455158:	ldp	x29, x30, [sp], #80
  45515c:	ret

0000000000455160 <_obstack_allocated_p@@Base>:
  455160:	ldr	x8, [x0, #8]
  455164:	cbnz	x8, 455178 <_obstack_allocated_p@@Base+0x18>
  455168:	mov	w0, wzr
  45516c:	ret
  455170:	ldr	x8, [x8, #8]
  455174:	cbz	x8, 455168 <_obstack_allocated_p@@Base+0x8>
  455178:	cmp	x8, x1
  45517c:	b.cs	455170 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  455180:	ldr	x9, [x8]
  455184:	cmp	x9, x1
  455188:	b.cc	455170 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  45518c:	mov	w0, #0x1                   	// #1
  455190:	ret

0000000000455194 <_obstack_free@@Base>:
  455194:	stp	x29, x30, [sp, #-48]!
  455198:	stp	x20, x19, [sp, #32]
  45519c:	ldr	x8, [x0, #8]
  4551a0:	mov	x20, x1
  4551a4:	str	x21, [sp, #16]
  4551a8:	mov	x29, sp
  4551ac:	cbz	x8, 455208 <_obstack_free@@Base+0x74>
  4551b0:	mov	x19, x0
  4551b4:	b	4551d8 <_obstack_free@@Base+0x44>
  4551b8:	ldr	x9, [x19, #64]
  4551bc:	mov	x0, x8
  4551c0:	blr	x9
  4551c4:	ldrb	w8, [x19, #80]
  4551c8:	orr	w8, w8, #0x2
  4551cc:	strb	w8, [x19, #80]
  4551d0:	mov	x8, x21
  4551d4:	cbz	x21, 455208 <_obstack_free@@Base+0x74>
  4551d8:	cmp	x8, x20
  4551dc:	b.cs	4551ec <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  4551e0:	ldr	x9, [x8]
  4551e4:	cmp	x9, x20
  4551e8:	b.cs	455210 <_obstack_free@@Base+0x7c>  // b.hs, b.nlast
  4551ec:	ldrb	w9, [x19, #80]
  4551f0:	ldr	x21, [x8, #8]
  4551f4:	tbz	w9, #0, 4551b8 <_obstack_free@@Base+0x24>
  4551f8:	ldp	x9, x0, [x19, #64]
  4551fc:	mov	x1, x8
  455200:	blr	x9
  455204:	b	4551c4 <_obstack_free@@Base+0x30>
  455208:	cbz	x20, 455218 <_obstack_free@@Base+0x84>
  45520c:	bl	402b80 <abort@plt>
  455210:	stp	x20, x9, [x19, #24]
  455214:	stp	x8, x20, [x19, #8]
  455218:	ldp	x20, x19, [sp, #32]
  45521c:	ldr	x21, [sp, #16]
  455220:	ldp	x29, x30, [sp], #48
  455224:	ret

0000000000455228 <_obstack_memory_used@@Base>:
  455228:	ldr	x8, [x0, #8]
  45522c:	cbz	x8, 455248 <_obstack_memory_used@@Base+0x20>
  455230:	mov	x0, xzr
  455234:	sub	x10, x0, x8
  455238:	ldp	x9, x8, [x8]
  45523c:	add	x0, x10, x9
  455240:	cbnz	x8, 455234 <_obstack_memory_used@@Base+0xc>
  455244:	ret
  455248:	mov	x0, xzr
  45524c:	ret
  455250:	stp	x29, x30, [sp, #-16]!
  455254:	adrp	x8, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  455258:	ldr	x0, [x8, #1416]
  45525c:	adrp	x1, 457000 <_obstack_memory_used@@Base+0x1dd8>
  455260:	adrp	x2, 467000 <_obstack_memory_used@@Base+0x11dd8>
  455264:	add	x1, x1, #0x56e
  455268:	add	x2, x2, #0x3b3
  45526c:	mov	x29, sp
  455270:	bl	4026f0 <fprintf@plt>
  455274:	mov	w0, #0x1                   	// #1
  455278:	bl	402bb0 <exit@plt>
  45527c:	stp	x29, x30, [sp, #-32]!
  455280:	adrp	x8, 47d000 <stderr@@GLIBC_2.17+0xa78>
  455284:	ldr	x8, [x8, #2728]
  455288:	str	x19, [sp, #16]
  45528c:	mov	w19, w0
  455290:	mov	x29, sp
  455294:	cbz	x8, 45529c <_obstack_memory_used@@Base+0x74>
  455298:	blr	x8
  45529c:	mov	w0, w19
  4552a0:	bl	402bb0 <exit@plt>
  4552a4:	stp	x29, x30, [sp, #-32]!
  4552a8:	str	x19, [sp, #16]
  4552ac:	adrp	x19, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4552b0:	ldr	x8, [x19, #2672]
  4552b4:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  4552b8:	mov	x29, sp
  4552bc:	str	x0, [x9, #1368]
  4552c0:	cbnz	x8, 4552d0 <_obstack_memory_used@@Base+0xa8>
  4552c4:	mov	x0, xzr
  4552c8:	bl	402a60 <sbrk@plt>
  4552cc:	str	x0, [x19, #2672]
  4552d0:	ldr	x19, [sp, #16]
  4552d4:	ldp	x29, x30, [sp], #32
  4552d8:	ret
  4552dc:	stp	x29, x30, [sp, #-48]!
  4552e0:	stp	x20, x19, [sp, #32]
  4552e4:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4552e8:	str	x21, [sp, #16]
  4552ec:	ldr	x21, [x20, #2672]
  4552f0:	mov	x19, x0
  4552f4:	mov	x0, xzr
  4552f8:	mov	x29, sp
  4552fc:	bl	402a60 <sbrk@plt>
  455300:	ldr	x8, [x20, #2672]
  455304:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  455308:	ldr	x2, [x10, #1368]
  45530c:	adrp	x9, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  455310:	add	x9, x9, #0x560
  455314:	cmp	x21, #0x0
  455318:	csel	x8, x9, x8, eq  // eq = none
  45531c:	sub	x5, x0, x8
  455320:	ldrb	w8, [x2]
  455324:	adrp	x10, 47c000 <_obstack_memory_used@@Base+0x26dd8>
  455328:	ldr	x0, [x10, #1416]
  45532c:	adrp	x9, 456000 <_obstack_memory_used@@Base+0xdd8>
  455330:	adrp	x10, 455000 <_obstack_begin_1@@Base+0xa4>
  455334:	add	x9, x9, #0xea6
  455338:	add	x10, x10, #0xce0
  45533c:	cmp	w8, #0x0
  455340:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  455344:	csel	x3, x10, x9, eq  // eq = none
  455348:	add	x1, x1, #0x7c4
  45534c:	mov	x4, x19
  455350:	bl	4026f0 <fprintf@plt>
  455354:	mov	w0, #0x1                   	// #1
  455358:	bl	45527c <_obstack_memory_used@@Base+0x54>
  45535c:	stp	x29, x30, [sp, #-32]!
  455360:	cmp	x0, #0x0
  455364:	str	x19, [sp, #16]
  455368:	csinc	x19, x0, xzr, ne  // ne = any
  45536c:	mov	x0, x19
  455370:	mov	x29, sp
  455374:	bl	402b60 <malloc@plt>
  455378:	cbz	x0, 455388 <_obstack_memory_used@@Base+0x160>
  45537c:	ldr	x19, [sp, #16]
  455380:	ldp	x29, x30, [sp], #32
  455384:	ret
  455388:	mov	x0, x19
  45538c:	bl	4552dc <_obstack_memory_used@@Base+0xb4>
  455390:	stp	x29, x30, [sp, #-32]!
  455394:	cmp	x0, #0x0
  455398:	cset	w8, eq  // eq = none
  45539c:	cmp	x1, #0x0
  4553a0:	cset	w9, eq  // eq = none
  4553a4:	orr	w8, w8, w9
  4553a8:	cmp	w8, #0x0
  4553ac:	stp	x20, x19, [sp, #16]
  4553b0:	csinc	x19, x1, xzr, eq  // eq = none
  4553b4:	csinc	x20, x0, xzr, eq  // eq = none
  4553b8:	mov	x0, x20
  4553bc:	mov	x1, x19
  4553c0:	mov	x29, sp
  4553c4:	bl	4026b0 <calloc@plt>
  4553c8:	cbz	x0, 4553d8 <_obstack_memory_used@@Base+0x1b0>
  4553cc:	ldp	x20, x19, [sp, #16]
  4553d0:	ldp	x29, x30, [sp], #32
  4553d4:	ret
  4553d8:	mul	x0, x20, x19
  4553dc:	bl	4552dc <_obstack_memory_used@@Base+0xb4>
  4553e0:	stp	x29, x30, [sp, #-32]!
  4553e4:	cmp	x1, #0x0
  4553e8:	str	x19, [sp, #16]
  4553ec:	csinc	x19, x1, xzr, ne  // ne = any
  4553f0:	mov	x29, sp
  4553f4:	cbz	x0, 455410 <_obstack_memory_used@@Base+0x1e8>
  4553f8:	mov	x1, x19
  4553fc:	bl	402800 <realloc@plt>
  455400:	cbz	x0, 45541c <_obstack_memory_used@@Base+0x1f4>
  455404:	ldr	x19, [sp, #16]
  455408:	ldp	x29, x30, [sp], #32
  45540c:	ret
  455410:	mov	x0, x19
  455414:	bl	402b60 <malloc@plt>
  455418:	cbnz	x0, 455404 <_obstack_memory_used@@Base+0x1dc>
  45541c:	mov	x0, x19
  455420:	bl	4552dc <_obstack_memory_used@@Base+0xb4>
  455424:	stp	x29, x30, [sp, #-48]!
  455428:	stp	x20, x19, [sp, #32]
  45542c:	mov	x20, x0
  455430:	mov	x0, x2
  455434:	str	x21, [sp, #16]
  455438:	mov	x29, sp
  45543c:	mov	x21, x2
  455440:	mov	x19, x1
  455444:	bl	45535c <_obstack_memory_used@@Base+0x134>
  455448:	subs	x2, x21, x19
  45544c:	mov	x21, x0
  455450:	b.ls	455460 <_obstack_memory_used@@Base+0x238>  // b.plast
  455454:	add	x0, x21, x19
  455458:	mov	w1, wzr
  45545c:	bl	402790 <memset@plt>
  455460:	mov	x0, x21
  455464:	mov	x1, x20
  455468:	mov	x2, x19
  45546c:	ldp	x20, x19, [sp, #32]
  455470:	ldr	x21, [sp, #16]
  455474:	ldp	x29, x30, [sp], #48
  455478:	b	402640 <memcpy@plt>
  45547c:	stp	x29, x30, [sp, #-32]!
  455480:	stp	x20, x19, [sp, #16]
  455484:	mov	x29, sp
  455488:	mov	x19, x0
  45548c:	bl	4026d0 <strlen@plt>
  455490:	add	x20, x0, #0x1
  455494:	mov	x0, x20
  455498:	bl	45535c <_obstack_memory_used@@Base+0x134>
  45549c:	mov	x1, x19
  4554a0:	mov	x2, x20
  4554a4:	ldp	x20, x19, [sp, #16]
  4554a8:	ldp	x29, x30, [sp], #32
  4554ac:	b	402640 <memcpy@plt>
  4554b0:	stp	x29, x30, [sp, #-32]!
  4554b4:	stp	x20, x19, [sp, #16]
  4554b8:	mov	x29, sp
  4554bc:	mov	w19, w0
  4554c0:	bl	402850 <strerror@plt>
  4554c4:	mov	x20, x0
  4554c8:	cbnz	x0, 4554e8 <_obstack_memory_used@@Base+0x2c0>
  4554cc:	adrp	x20, 47d000 <stderr@@GLIBC_2.17+0xa78>
  4554d0:	add	x20, x20, #0xa78
  4554d4:	adrp	x1, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4554d8:	add	x1, x1, #0x808
  4554dc:	mov	x0, x20
  4554e0:	mov	w2, w19
  4554e4:	bl	402880 <sprintf@plt>
  4554e8:	mov	x0, x20
  4554ec:	ldp	x20, x19, [sp, #16]
  4554f0:	ldp	x29, x30, [sp], #32
  4554f4:	ret
  4554f8:	stp	x29, x30, [sp, #-32]!
  4554fc:	stp	x20, x19, [sp, #16]
  455500:	mov	x29, sp
  455504:	mov	x19, x0
  455508:	bl	402c60 <strnlen@plt>
  45550c:	mov	x20, x0
  455510:	add	x0, x0, #0x1
  455514:	bl	45535c <_obstack_memory_used@@Base+0x134>
  455518:	strb	wzr, [x0, x20]
  45551c:	mov	x1, x19
  455520:	mov	x2, x20
  455524:	ldp	x20, x19, [sp, #16]
  455528:	ldp	x29, x30, [sp], #32
  45552c:	b	402640 <memcpy@plt>
  455530:	sub	sp, sp, #0x50
  455534:	stp	x29, x30, [sp, #32]
  455538:	str	x21, [sp, #48]
  45553c:	stp	x20, x19, [sp, #64]
  455540:	ldp	q1, q0, [x1]
  455544:	mov	x19, x1
  455548:	mov	x1, sp
  45554c:	add	x29, sp, #0x20
  455550:	mov	x20, x0
  455554:	stp	q1, q0, [sp]
  455558:	bl	455594 <_obstack_memory_used@@Base+0x36c>
  45555c:	sxtw	x0, w0
  455560:	bl	45535c <_obstack_memory_used@@Base+0x134>
  455564:	ldp	q1, q0, [x19]
  455568:	mov	x2, sp
  45556c:	mov	x1, x20
  455570:	mov	x21, x0
  455574:	stp	q1, q0, [sp]
  455578:	bl	402c30 <vsprintf@plt>
  45557c:	mov	x0, x21
  455580:	ldp	x20, x19, [sp, #64]
  455584:	ldr	x21, [sp, #48]
  455588:	ldp	x29, x30, [sp, #32]
  45558c:	add	sp, sp, #0x50
  455590:	ret
  455594:	sub	sp, sp, #0x70
  455598:	stp	x29, x30, [sp, #32]
  45559c:	add	x29, sp, #0x20
  4555a0:	str	x25, [sp, #48]
  4555a4:	stp	x24, x23, [sp, #64]
  4555a8:	stp	x22, x21, [sp, #80]
  4555ac:	stp	x20, x19, [sp, #96]
  4555b0:	mov	x19, x1
  4555b4:	mov	x21, x0
  4555b8:	str	x0, [x29, #24]
  4555bc:	bl	4026d0 <strlen@plt>
  4555c0:	ldp	q1, q0, [x19]
  4555c4:	add	w20, w0, #0x1
  4555c8:	stp	q1, q0, [sp]
  4555cc:	ldrb	w8, [x21]
  4555d0:	cbz	w8, 455820 <_obstack_memory_used@@Base+0x5f8>
  4555d4:	mov	x22, #0x1                   	// #1
  4555d8:	movk	x22, #0x2809, lsl #32
  4555dc:	adrp	x19, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4555e0:	adrp	x24, 467000 <_obstack_memory_used@@Base+0x11dd8>
  4555e4:	movk	x22, #0x1, lsl #48
  4555e8:	mov	w23, #0x1                   	// #1
  4555ec:	add	x19, x19, #0x853
  4555f0:	add	x24, x24, #0x81f
  4555f4:	b	455614 <_obstack_memory_used@@Base+0x3ec>
  4555f8:	ldr	x8, [sp]
  4555fc:	add	x8, x8, #0x8
  455600:	str	x8, [sp]
  455604:	add	x21, x21, #0x1
  455608:	str	x21, [x29, #24]
  45560c:	ldrb	w8, [x21]
  455610:	cbz	w8, 455820 <_obstack_memory_used@@Base+0x5f8>
  455614:	and	w8, w8, #0xff
  455618:	add	x21, x21, #0x1
  45561c:	cmp	w8, #0x25
  455620:	str	x21, [x29, #24]
  455624:	b.ne	45560c <_obstack_memory_used@@Base+0x3e4>  // b.any
  455628:	ldrb	w8, [x21]
  45562c:	cmp	x8, #0x3f
  455630:	b.hi	45565c <_obstack_memory_used@@Base+0x434>  // b.pmore
  455634:	lsl	x9, x23, x8
  455638:	and	x9, x9, x22
  45563c:	cbz	x9, 45565c <_obstack_memory_used@@Base+0x434>
  455640:	ldrb	w8, [x21, #1]!
  455644:	cmp	x8, #0x3f
  455648:	b.hi	455658 <_obstack_memory_used@@Base+0x430>  // b.pmore
  45564c:	lsl	x9, x23, x8
  455650:	and	x9, x9, x22
  455654:	cbnz	x9, 455640 <_obstack_memory_used@@Base+0x418>
  455658:	str	x21, [x29, #24]
  45565c:	cmp	w8, #0x2a
  455660:	b.ne	455690 <_obstack_memory_used@@Base+0x468>  // b.any
  455664:	ldrsw	x8, [sp, #24]
  455668:	add	x21, x21, #0x1
  45566c:	str	x21, [x29, #24]
  455670:	tbz	w8, #31, 4556a8 <_obstack_memory_used@@Base+0x480>
  455674:	add	w9, w8, #0x8
  455678:	cmn	w8, #0x8
  45567c:	str	w9, [sp, #24]
  455680:	b.gt	4556a8 <_obstack_memory_used@@Base+0x480>
  455684:	ldr	x9, [sp, #8]
  455688:	add	x8, x9, x8
  45568c:	b	4556b4 <_obstack_memory_used@@Base+0x48c>
  455690:	add	x1, x29, #0x18
  455694:	mov	w2, #0xa                   	// #10
  455698:	mov	x0, x21
  45569c:	bl	402af0 <strtoul@plt>
  4556a0:	ldr	x21, [x29, #24]
  4556a4:	b	4556c0 <_obstack_memory_used@@Base+0x498>
  4556a8:	ldr	x8, [sp]
  4556ac:	add	x9, x8, #0x8
  4556b0:	str	x9, [sp]
  4556b4:	ldr	w8, [x8]
  4556b8:	cmp	w8, #0x0
  4556bc:	cneg	w0, w8, mi  // mi = first
  4556c0:	ldrb	w8, [x21]
  4556c4:	add	w25, w0, w20
  4556c8:	cmp	w8, #0x2e
  4556cc:	b.ne	455744 <_obstack_memory_used@@Base+0x51c>  // b.any
  4556d0:	add	x0, x21, #0x1
  4556d4:	str	x0, [x29, #24]
  4556d8:	ldrb	w8, [x21, #1]
  4556dc:	cmp	w8, #0x2a
  4556e0:	b.ne	455710 <_obstack_memory_used@@Base+0x4e8>  // b.any
  4556e4:	ldrsw	x8, [sp, #24]
  4556e8:	add	x21, x21, #0x2
  4556ec:	str	x21, [x29, #24]
  4556f0:	tbz	w8, #31, 455728 <_obstack_memory_used@@Base+0x500>
  4556f4:	add	w9, w8, #0x8
  4556f8:	cmn	w8, #0x8
  4556fc:	str	w9, [sp, #24]
  455700:	b.gt	455728 <_obstack_memory_used@@Base+0x500>
  455704:	ldr	x9, [sp, #8]
  455708:	add	x8, x9, x8
  45570c:	b	455734 <_obstack_memory_used@@Base+0x50c>
  455710:	add	x1, x29, #0x18
  455714:	mov	w2, #0xa                   	// #10
  455718:	bl	402af0 <strtoul@plt>
  45571c:	ldr	x21, [x29, #24]
  455720:	add	w25, w25, w0
  455724:	b	455744 <_obstack_memory_used@@Base+0x51c>
  455728:	ldr	x8, [sp]
  45572c:	add	x9, x8, #0x8
  455730:	str	x9, [sp]
  455734:	ldr	w8, [x8]
  455738:	cmp	w8, #0x0
  45573c:	cneg	w8, w8, mi  // mi = first
  455740:	add	w25, w8, w25
  455744:	ldrb	w20, [x21]
  455748:	mov	w2, #0x4                   	// #4
  45574c:	mov	x0, x19
  455750:	mov	w1, w20
  455754:	bl	402920 <memchr@plt>
  455758:	cbz	x0, 455778 <_obstack_memory_used@@Base+0x550>
  45575c:	ldrb	w20, [x21, #1]!
  455760:	mov	w2, #0x4                   	// #4
  455764:	mov	x0, x19
  455768:	mov	w1, w20
  45576c:	bl	402920 <memchr@plt>
  455770:	cbnz	x0, 45575c <_obstack_memory_used@@Base+0x534>
  455774:	str	x21, [x29, #24]
  455778:	sub	w8, w20, #0x45
  45577c:	cmp	w8, #0x33
  455780:	add	w20, w25, #0x1e
  455784:	b.hi	455604 <_obstack_memory_used@@Base+0x3dc>  // b.pmore
  455788:	adr	x9, 455604 <_obstack_memory_used@@Base+0x3dc>
  45578c:	ldrb	w10, [x24, x8]
  455790:	add	x9, x9, x10, lsl #2
  455794:	br	x9
  455798:	ldr	w8, [sp, #24]
  45579c:	tbz	w8, #31, 4555f8 <_obstack_memory_used@@Base+0x3d0>
  4557a0:	add	w9, w8, #0x8
  4557a4:	cmn	w8, #0x7
  4557a8:	str	w9, [sp, #24]
  4557ac:	b.ge	4555f8 <_obstack_memory_used@@Base+0x3d0>  // b.tcont
  4557b0:	b	455604 <_obstack_memory_used@@Base+0x3dc>
  4557b4:	ldr	w8, [sp, #28]
  4557b8:	tbz	w8, #31, 4557cc <_obstack_memory_used@@Base+0x5a4>
  4557bc:	add	w9, w8, #0x10
  4557c0:	cmn	w8, #0xf
  4557c4:	str	w9, [sp, #28]
  4557c8:	b.lt	4557d8 <_obstack_memory_used@@Base+0x5b0>  // b.tstop
  4557cc:	ldr	x8, [sp]
  4557d0:	add	x8, x8, #0x8
  4557d4:	str	x8, [sp]
  4557d8:	add	w20, w25, #0x151
  4557dc:	b	455604 <_obstack_memory_used@@Base+0x3dc>
  4557e0:	ldrsw	x8, [sp, #24]
  4557e4:	tbz	w8, #31, 455804 <_obstack_memory_used@@Base+0x5dc>
  4557e8:	add	w9, w8, #0x8
  4557ec:	cmn	w8, #0x8
  4557f0:	str	w9, [sp, #24]
  4557f4:	b.gt	455804 <_obstack_memory_used@@Base+0x5dc>
  4557f8:	ldr	x9, [sp, #8]
  4557fc:	add	x8, x9, x8
  455800:	b	455810 <_obstack_memory_used@@Base+0x5e8>
  455804:	ldr	x8, [sp]
  455808:	add	x9, x8, #0x8
  45580c:	str	x9, [sp]
  455810:	ldr	x0, [x8]
  455814:	bl	4026d0 <strlen@plt>
  455818:	add	w20, w20, w0
  45581c:	b	455604 <_obstack_memory_used@@Base+0x3dc>
  455820:	mov	w0, w20
  455824:	ldp	x20, x19, [sp, #96]
  455828:	ldp	x22, x21, [sp, #80]
  45582c:	ldp	x24, x23, [sp, #64]
  455830:	ldr	x25, [sp, #48]
  455834:	ldp	x29, x30, [sp, #32]
  455838:	add	sp, sp, #0x70
  45583c:	ret
  455840:	stp	x29, x30, [sp, #-64]!
  455844:	mov	x29, sp
  455848:	stp	x19, x20, [sp, #16]
  45584c:	adrp	x20, 47b000 <_obstack_memory_used@@Base+0x25dd8>
  455850:	add	x20, x20, #0xdc0
  455854:	stp	x21, x22, [sp, #32]
  455858:	adrp	x21, 47b000 <_obstack_memory_used@@Base+0x25dd8>
  45585c:	add	x21, x21, #0xdb0
  455860:	sub	x20, x20, x21
  455864:	mov	w22, w0
  455868:	stp	x23, x24, [sp, #48]
  45586c:	mov	x23, x1
  455870:	mov	x24, x2
  455874:	bl	4025a8 <_Unwind_Backtrace@plt-0x38>
  455878:	cmp	xzr, x20, asr #3
  45587c:	b.eq	4558a8 <_obstack_memory_used@@Base+0x680>  // b.none
  455880:	asr	x20, x20, #3
  455884:	mov	x19, #0x0                   	// #0
  455888:	ldr	x3, [x21, x19, lsl #3]
  45588c:	mov	x2, x24
  455890:	add	x19, x19, #0x1
  455894:	mov	x1, x23
  455898:	mov	w0, w22
  45589c:	blr	x3
  4558a0:	cmp	x20, x19
  4558a4:	b.ne	455888 <_obstack_memory_used@@Base+0x660>  // b.any
  4558a8:	ldp	x19, x20, [sp, #16]
  4558ac:	ldp	x21, x22, [sp, #32]
  4558b0:	ldp	x23, x24, [sp, #48]
  4558b4:	ldp	x29, x30, [sp], #64
  4558b8:	ret
  4558bc:	nop
  4558c0:	ret

Disassembly of section .fini:

00000000004558c4 <.fini>:
  4558c4:	stp	x29, x30, [sp, #-16]!
  4558c8:	mov	x29, sp
  4558cc:	ldp	x29, x30, [sp], #16
  4558d0:	ret
