In archive /home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libclang_rt.profile-aarch64.a_clang_-O0:

GCDAProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <llvm_gcda_start_file>:
       0:	sub	sp, sp, #0xa0
       4:	stp	x29, x30, [sp, #144]
       8:	add	x29, sp, #0x90
       c:	adrp	x8, 0 <llvm_gcda_start_file>
      10:	add	x8, x8, #0x0
      14:	adrp	x9, 0 <llvm_gcda_start_file>
      18:	add	x9, x9, #0x0
      1c:	adrp	x10, 0 <llvm_gcda_start_file>
      20:	add	x10, x10, #0x0
      24:	mov	w11, #0x2                   	// #2
      28:	adrp	x12, 0 <llvm_gcda_start_file>
      2c:	add	x12, x12, #0x0
      30:	mov	w13, #0xffffffff            	// #-1
      34:	adrp	x14, 0 <llvm_gcda_start_file>
      38:	add	x14, x14, #0x0
      3c:	stur	x0, [x29, #-8]
      40:	stur	x1, [x29, #-16]
      44:	stur	w2, [x29, #-20]
      48:	stur	x8, [x29, #-32]
      4c:	ldur	x0, [x29, #-8]
      50:	stur	x9, [x29, #-48]
      54:	stur	x10, [x29, #-56]
      58:	stur	w11, [x29, #-60]
      5c:	str	x12, [sp, #72]
      60:	str	w13, [sp, #68]
      64:	str	x14, [sp, #56]
      68:	bl	290 <mangle_filename>
      6c:	ldur	x8, [x29, #-48]
      70:	str	x0, [x8]
      74:	ldur	x9, [x29, #-56]
      78:	str	wzr, [x9]
      7c:	ldr	x0, [x8]
      80:	ldur	w1, [x29, #-60]
      84:	bl	0 <open>
      88:	ldr	x8, [sp, #72]
      8c:	str	w0, [x8]
      90:	ldr	w11, [x8]
      94:	ldr	w13, [sp, #68]
      98:	cmp	w11, w13
      9c:	b.ne	174 <llvm_gcda_start_file+0x174>  // b.any
      a0:	mov	w8, #0x1                   	// #1
      a4:	ldur	x9, [x29, #-56]
      a8:	str	w8, [x9]
      ac:	adrp	x10, 0 <llvm_gcda_start_file>
      b0:	add	x10, x10, #0x0
      b4:	stur	x10, [x29, #-32]
      b8:	ldur	x10, [x29, #-48]
      bc:	ldr	x0, [x10]
      c0:	mov	w1, #0x42                  	// #66
      c4:	mov	w2, #0x1a4                 	// #420
      c8:	bl	0 <open>
      cc:	ldr	x9, [sp, #72]
      d0:	str	w0, [x9]
      d4:	ldr	w8, [x9]
      d8:	mov	w11, #0xffffffff            	// #-1
      dc:	cmp	w8, w11
      e0:	b.ne	174 <llvm_gcda_start_file+0x174>  // b.any
      e4:	ldur	x8, [x29, #-48]
      e8:	ldr	x0, [x8]
      ec:	bl	0 <__llvm_profile_recursive_mkdir>
      f0:	ldur	x8, [x29, #-48]
      f4:	ldr	x0, [x8]
      f8:	mov	w1, #0x42                  	// #66
      fc:	mov	w2, #0x1a4                 	// #420
     100:	bl	0 <open>
     104:	ldr	x8, [sp, #72]
     108:	str	w0, [x8]
     10c:	ldr	w9, [x8]
     110:	mov	w10, #0xffffffff            	// #-1
     114:	cmp	w9, w10
     118:	b.ne	174 <llvm_gcda_start_file+0x174>  // b.any
     11c:	bl	0 <__errno_location>
     120:	ldr	w8, [x0]
     124:	stur	w8, [x29, #-36]
     128:	adrp	x9, 0 <stderr>
     12c:	ldr	x9, [x9]
     130:	ldr	x0, [x9]
     134:	ldur	x9, [x29, #-48]
     138:	ldr	x2, [x9]
     13c:	ldur	w8, [x29, #-36]
     140:	str	x0, [sp, #48]
     144:	mov	w0, w8
     148:	str	x2, [sp, #40]
     14c:	bl	0 <strerror>
     150:	ldr	x9, [sp, #48]
     154:	str	x0, [sp, #32]
     158:	mov	x0, x9
     15c:	adrp	x1, 0 <llvm_gcda_start_file>
     160:	add	x1, x1, #0x0
     164:	ldr	x2, [sp, #40]
     168:	ldr	x3, [sp, #32]
     16c:	bl	0 <fprintf>
     170:	b	284 <llvm_gcda_start_file+0x284>
     174:	ldr	x8, [sp, #72]
     178:	ldr	w0, [x8]
     17c:	bl	0 <lprofLockFd>
     180:	ldr	x8, [sp, #72]
     184:	ldr	w9, [x8]
     188:	ldur	x1, [x29, #-32]
     18c:	mov	w0, w9
     190:	bl	0 <fdopen>
     194:	adrp	x8, 0 <llvm_gcda_start_file>
     198:	add	x8, x8, #0x0
     19c:	str	x0, [x8]
     1a0:	mov	x8, xzr
     1a4:	ldr	x10, [sp, #56]
     1a8:	str	x8, [x10]
     1ac:	adrp	x8, 0 <llvm_gcda_start_file>
     1b0:	add	x8, x8, #0x0
     1b4:	str	xzr, [x8]
     1b8:	adrp	x8, 0 <llvm_gcda_start_file>
     1bc:	add	x8, x8, #0x0
     1c0:	str	xzr, [x8]
     1c4:	ldur	x8, [x29, #-56]
     1c8:	ldr	w9, [x8]
     1cc:	cbz	w9, 1fc <llvm_gcda_start_file+0x1fc>
     1d0:	mov	x8, #0x20000               	// #131072
     1d4:	mov	x0, x8
     1d8:	str	x8, [sp, #24]
     1dc:	bl	324 <resize_write_buffer>
     1e0:	ldr	x8, [sp, #56]
     1e4:	ldr	x0, [x8]
     1e8:	mov	w9, wzr
     1ec:	mov	w1, w9
     1f0:	ldr	x2, [sp, #24]
     1f4:	bl	0 <memset>
     1f8:	b	258 <llvm_gcda_start_file+0x258>
     1fc:	bl	ec8 <map_file>
     200:	mov	w8, #0xffffffff            	// #-1
     204:	cmp	w0, w8
     208:	b.ne	258 <llvm_gcda_start_file+0x258>  // b.any
     20c:	mov	w8, #0x1                   	// #1
     210:	ldur	x9, [x29, #-56]
     214:	str	w8, [x9]
     218:	mov	x10, xzr
     21c:	ldr	x11, [sp, #56]
     220:	str	x10, [x11]
     224:	adrp	x10, 0 <llvm_gcda_start_file>
     228:	add	x10, x10, #0x0
     22c:	str	xzr, [x10]
     230:	mov	x10, #0x20000               	// #131072
     234:	mov	x0, x10
     238:	str	x10, [sp, #16]
     23c:	bl	324 <resize_write_buffer>
     240:	ldr	x9, [sp, #56]
     244:	ldr	x0, [x9]
     248:	mov	w8, wzr
     24c:	mov	w1, w8
     250:	ldr	x2, [sp, #16]
     254:	bl	0 <memset>
     258:	adrp	x0, 0 <llvm_gcda_start_file>
     25c:	add	x0, x0, #0x0
     260:	mov	x8, #0x4                   	// #4
     264:	mov	x1, x8
     268:	str	x8, [sp, #8]
     26c:	bl	3dc <write_bytes>
     270:	ldur	x0, [x29, #-16]
     274:	ldr	x1, [sp, #8]
     278:	bl	3dc <write_bytes>
     27c:	ldur	w0, [x29, #-20]
     280:	bl	450 <write_32bit_value>
     284:	ldp	x29, x30, [sp, #144]
     288:	add	sp, sp, #0xa0
     28c:	ret

0000000000000290 <mangle_filename>:
     290:	sub	sp, sp, #0x50
     294:	stp	x29, x30, [sp, #64]
     298:	add	x29, sp, #0x40
     29c:	add	x1, sp, #0x20
     2a0:	add	x8, sp, #0x1c
     2a4:	stur	x0, [x29, #-16]
     2a8:	mov	x0, x8
     2ac:	bl	0 <lprofGetPathPrefix>
     2b0:	str	x0, [sp, #16]
     2b4:	ldr	x8, [sp, #16]
     2b8:	cbnz	x8, 2cc <mangle_filename+0x3c>
     2bc:	ldur	x0, [x29, #-16]
     2c0:	bl	0 <strdup>
     2c4:	stur	x0, [x29, #-8]
     2c8:	b	314 <mangle_filename+0x84>
     2cc:	ldr	x8, [sp, #32]
     2d0:	add	x8, x8, #0x1
     2d4:	ldur	x0, [x29, #-16]
     2d8:	str	x8, [sp, #8]
     2dc:	bl	0 <strlen>
     2e0:	ldr	x8, [sp, #8]
     2e4:	add	x9, x8, x0
     2e8:	add	x0, x9, #0x1
     2ec:	bl	0 <malloc>
     2f0:	stur	x0, [x29, #-24]
     2f4:	ldur	x0, [x29, #-24]
     2f8:	ldur	x1, [x29, #-16]
     2fc:	ldr	x2, [sp, #16]
     300:	ldr	x3, [sp, #32]
     304:	ldr	w4, [sp, #28]
     308:	bl	0 <lprofApplyPathPrefix>
     30c:	ldur	x8, [x29, #-24]
     310:	stur	x8, [x29, #-8]
     314:	ldur	x0, [x29, #-8]
     318:	ldp	x29, x30, [sp, #64]
     31c:	add	sp, sp, #0x50
     320:	ret

0000000000000324 <resize_write_buffer>:
     324:	sub	sp, sp, #0x20
     328:	stp	x29, x30, [sp, #16]
     32c:	add	x29, sp, #0x10
     330:	adrp	x8, 0 <llvm_gcda_start_file>
     334:	add	x8, x8, #0x0
     338:	str	x0, [sp, #8]
     33c:	ldr	w9, [x8]
     340:	cbnz	w9, 348 <resize_write_buffer+0x24>
     344:	b	3d0 <resize_write_buffer+0xac>
     348:	adrp	x8, 0 <llvm_gcda_start_file>
     34c:	add	x8, x8, #0x0
     350:	ldr	x8, [x8]
     354:	ldr	x9, [sp, #8]
     358:	add	x8, x9, x8
     35c:	str	x8, [sp, #8]
     360:	ldr	x8, [sp, #8]
     364:	adrp	x9, 0 <llvm_gcda_start_file>
     368:	add	x9, x9, #0x0
     36c:	ldr	x9, [x9]
     370:	cmp	x8, x9
     374:	b.hi	37c <resize_write_buffer+0x58>  // b.pmore
     378:	b	3d0 <resize_write_buffer+0xac>
     37c:	ldr	x8, [sp, #8]
     380:	subs	x8, x8, #0x1
     384:	mov	x9, #0x20000               	// #131072
     388:	udiv	x8, x8, x9
     38c:	add	x8, x8, #0x1
     390:	str	x8, [sp, #8]
     394:	ldr	x8, [sp, #8]
     398:	mul	x8, x8, x9
     39c:	str	x8, [sp, #8]
     3a0:	adrp	x8, 0 <llvm_gcda_start_file>
     3a4:	add	x8, x8, #0x0
     3a8:	ldr	x0, [x8]
     3ac:	ldr	x1, [sp, #8]
     3b0:	str	x8, [sp]
     3b4:	bl	0 <realloc>
     3b8:	ldr	x8, [sp]
     3bc:	str	x0, [x8]
     3c0:	ldr	x9, [sp, #8]
     3c4:	adrp	x10, 0 <llvm_gcda_start_file>
     3c8:	add	x10, x10, #0x0
     3cc:	str	x9, [x10]
     3d0:	ldp	x29, x30, [sp, #16]
     3d4:	add	sp, sp, #0x20
     3d8:	ret

00000000000003dc <write_bytes>:
     3dc:	sub	sp, sp, #0x30
     3e0:	stp	x29, x30, [sp, #32]
     3e4:	add	x29, sp, #0x20
     3e8:	adrp	x8, 0 <llvm_gcda_start_file>
     3ec:	add	x8, x8, #0x0
     3f0:	adrp	x9, 0 <llvm_gcda_start_file>
     3f4:	add	x9, x9, #0x0
     3f8:	stur	x0, [x29, #-8]
     3fc:	str	x1, [sp, #16]
     400:	ldr	x0, [sp, #16]
     404:	str	x8, [sp, #8]
     408:	str	x9, [sp]
     40c:	bl	324 <resize_write_buffer>
     410:	ldr	x8, [sp, #8]
     414:	ldr	x9, [x8]
     418:	ldr	x10, [sp]
     41c:	ldr	x11, [x10]
     420:	add	x0, x9, x11
     424:	ldur	x1, [x29, #-8]
     428:	ldr	x2, [sp, #16]
     42c:	bl	0 <memcpy>
     430:	ldr	x8, [sp, #16]
     434:	ldr	x9, [sp]
     438:	ldr	x10, [x9]
     43c:	add	x8, x10, x8
     440:	str	x8, [x9]
     444:	ldp	x29, x30, [sp, #32]
     448:	add	sp, sp, #0x30
     44c:	ret

0000000000000450 <write_32bit_value>:
     450:	sub	sp, sp, #0x20
     454:	stp	x29, x30, [sp, #16]
     458:	add	x29, sp, #0x10
     45c:	mov	x1, #0x4                   	// #4
     460:	sub	x8, x29, #0x4
     464:	stur	w0, [x29, #-4]
     468:	mov	x0, x8
     46c:	bl	3dc <write_bytes>
     470:	ldp	x29, x30, [sp, #16]
     474:	add	sp, sp, #0x20
     478:	ret

000000000000047c <llvm_gcda_increment_indirect_counter>:
     47c:	sub	sp, sp, #0x20
     480:	mov	w8, #0xffffffff            	// #-1
     484:	str	x0, [sp, #24]
     488:	str	x1, [sp, #16]
     48c:	ldr	x9, [sp, #24]
     490:	ldr	w10, [x9]
     494:	str	w10, [sp, #4]
     498:	ldr	w10, [sp, #4]
     49c:	cmp	w10, w8
     4a0:	b.ne	4a8 <llvm_gcda_increment_indirect_counter+0x2c>  // b.any
     4a4:	b	4e0 <llvm_gcda_increment_indirect_counter+0x64>
     4a8:	ldr	x8, [sp, #16]
     4ac:	ldr	w9, [sp, #4]
     4b0:	mov	w10, w9
     4b4:	mov	x11, #0x8                   	// #8
     4b8:	mul	x10, x11, x10
     4bc:	add	x8, x8, x10
     4c0:	ldr	x8, [x8]
     4c4:	str	x8, [sp, #8]
     4c8:	ldr	x8, [sp, #8]
     4cc:	cbz	x8, 4e0 <llvm_gcda_increment_indirect_counter+0x64>
     4d0:	ldr	x8, [sp, #8]
     4d4:	ldr	x9, [x8]
     4d8:	add	x9, x9, #0x1
     4dc:	str	x9, [x8]
     4e0:	add	sp, sp, #0x20
     4e4:	ret

00000000000004e8 <llvm_gcda_emit_function>:
     4e8:	sub	sp, sp, #0x30
     4ec:	stp	x29, x30, [sp, #32]
     4f0:	add	x29, sp, #0x20
     4f4:	mov	w8, #0x2                   	// #2
     4f8:	stur	w0, [x29, #-4]
     4fc:	str	x1, [sp, #16]
     500:	str	w2, [sp, #12]
     504:	strb	w3, [sp, #11]
     508:	str	w4, [sp, #4]
     50c:	str	w8, [sp]
     510:	ldrb	w8, [sp, #11]
     514:	cbz	w8, 524 <llvm_gcda_emit_function+0x3c>
     518:	ldr	w8, [sp]
     51c:	add	w8, w8, #0x1
     520:	str	w8, [sp]
     524:	adrp	x8, 0 <llvm_gcda_start_file>
     528:	add	x8, x8, #0x0
     52c:	ldr	x8, [x8]
     530:	cbnz	x8, 538 <llvm_gcda_emit_function+0x50>
     534:	b	5a0 <llvm_gcda_emit_function+0xb8>
     538:	adrp	x0, 0 <llvm_gcda_start_file>
     53c:	add	x0, x0, #0x0
     540:	mov	x1, #0x4                   	// #4
     544:	bl	3dc <write_bytes>
     548:	ldr	x8, [sp, #16]
     54c:	cbz	x8, 568 <llvm_gcda_emit_function+0x80>
     550:	ldr	x0, [sp, #16]
     554:	bl	5ac <length_of_string>
     558:	add	w8, w0, #0x1
     55c:	ldr	w9, [sp]
     560:	add	w8, w9, w8
     564:	str	w8, [sp]
     568:	ldr	w0, [sp]
     56c:	bl	450 <write_32bit_value>
     570:	ldur	w0, [x29, #-4]
     574:	bl	450 <write_32bit_value>
     578:	ldr	w0, [sp, #12]
     57c:	bl	450 <write_32bit_value>
     580:	ldrb	w8, [sp, #11]
     584:	cbz	w8, 590 <llvm_gcda_emit_function+0xa8>
     588:	ldr	w0, [sp, #4]
     58c:	bl	450 <write_32bit_value>
     590:	ldr	x8, [sp, #16]
     594:	cbz	x8, 5a0 <llvm_gcda_emit_function+0xb8>
     598:	ldr	x0, [sp, #16]
     59c:	bl	5e8 <write_string>
     5a0:	ldp	x29, x30, [sp, #32]
     5a4:	add	sp, sp, #0x30
     5a8:	ret

00000000000005ac <length_of_string>:
     5ac:	sub	sp, sp, #0x20
     5b0:	stp	x29, x30, [sp, #16]
     5b4:	add	x29, sp, #0x10
     5b8:	mov	x8, #0x4                   	// #4
     5bc:	str	x0, [sp, #8]
     5c0:	ldr	x0, [sp, #8]
     5c4:	str	x8, [sp]
     5c8:	bl	0 <strlen>
     5cc:	ldr	x8, [sp]
     5d0:	udiv	x9, x0, x8
     5d4:	add	x9, x9, #0x1
     5d8:	mov	w0, w9
     5dc:	ldp	x29, x30, [sp, #16]
     5e0:	add	sp, sp, #0x20
     5e4:	ret

00000000000005e8 <write_string>:
     5e8:	sub	sp, sp, #0x40
     5ec:	stp	x29, x30, [sp, #48]
     5f0:	add	x29, sp, #0x30
     5f4:	mov	x8, #0x4                   	// #4
     5f8:	adrp	x9, 0 <llvm_gcda_start_file>
     5fc:	add	x9, x9, #0x0
     600:	stur	x0, [x29, #-8]
     604:	ldur	x0, [x29, #-8]
     608:	str	x8, [sp, #24]
     60c:	str	x9, [sp, #16]
     610:	bl	5ac <length_of_string>
     614:	stur	w0, [x29, #-12]
     618:	ldur	w0, [x29, #-12]
     61c:	bl	450 <write_32bit_value>
     620:	ldur	x0, [x29, #-8]
     624:	ldur	x8, [x29, #-8]
     628:	str	x0, [sp, #8]
     62c:	mov	x0, x8
     630:	bl	0 <strlen>
     634:	ldr	x8, [sp, #8]
     638:	str	x0, [sp]
     63c:	mov	x0, x8
     640:	ldr	x1, [sp]
     644:	bl	3dc <write_bytes>
     648:	ldur	x0, [x29, #-8]
     64c:	bl	0 <strlen>
     650:	ldr	x8, [sp, #24]
     654:	udiv	x9, x0, x8
     658:	mul	x9, x9, x8
     65c:	subs	x9, x0, x9
     660:	subs	x1, x8, x9
     664:	ldr	x0, [sp, #16]
     668:	bl	3dc <write_bytes>
     66c:	ldp	x29, x30, [sp, #48]
     670:	add	sp, sp, #0x40
     674:	ret

0000000000000678 <llvm_gcda_emit_arcs>:
     678:	sub	sp, sp, #0x50
     67c:	stp	x29, x30, [sp, #64]
     680:	add	x29, sp, #0x40
     684:	mov	x8, xzr
     688:	adrp	x9, 0 <llvm_gcda_start_file>
     68c:	add	x9, x9, #0x0
     690:	adrp	x10, 0 <llvm_gcda_start_file>
     694:	add	x10, x10, #0x0
     698:	stur	w0, [x29, #-4]
     69c:	stur	x1, [x29, #-16]
     6a0:	str	x8, [sp, #32]
     6a4:	str	wzr, [sp, #28]
     6a8:	ldr	x8, [x9]
     6ac:	str	x8, [sp, #16]
     6b0:	ldr	x8, [x10]
     6b4:	cbnz	x8, 6bc <llvm_gcda_emit_arcs+0x44>
     6b8:	b	87c <llvm_gcda_emit_arcs+0x204>
     6bc:	bl	fec <read_le_32bit_value>
     6c0:	str	w0, [sp, #28]
     6c4:	ldr	w8, [sp, #28]
     6c8:	mov	w9, #0xffffffff            	// #-1
     6cc:	cmp	w8, w9
     6d0:	b.eq	7bc <llvm_gcda_emit_arcs+0x144>  // b.none
     6d4:	ldr	w8, [sp, #28]
     6d8:	mov	w9, #0x1a10000             	// #27328512
     6dc:	cmp	w8, w9
     6e0:	b.eq	710 <llvm_gcda_emit_arcs+0x98>  // b.none
     6e4:	adrp	x8, 0 <stderr>
     6e8:	ldr	x8, [x8]
     6ec:	ldr	x0, [x8]
     6f0:	adrp	x8, 0 <llvm_gcda_start_file>
     6f4:	add	x8, x8, #0x0
     6f8:	ldr	x2, [x8]
     6fc:	ldr	w3, [sp, #28]
     700:	adrp	x1, 0 <llvm_gcda_start_file>
     704:	add	x1, x1, #0x0
     708:	bl	0 <fprintf>
     70c:	b	87c <llvm_gcda_emit_arcs+0x204>
     710:	bl	1084 <read_32bit_value>
     714:	str	w0, [sp, #28]
     718:	ldr	w8, [sp, #28]
     71c:	mov	w9, #0xffffffff            	// #-1
     720:	cmp	w8, w9
     724:	b.eq	740 <llvm_gcda_emit_arcs+0xc8>  // b.none
     728:	ldr	w8, [sp, #28]
     72c:	mov	w9, #0x2                   	// #2
     730:	udiv	w8, w8, w9
     734:	ldur	w9, [x29, #-4]
     738:	cmp	w8, w9
     73c:	b.eq	76c <llvm_gcda_emit_arcs+0xf4>  // b.none
     740:	adrp	x8, 0 <stderr>
     744:	ldr	x8, [x8]
     748:	ldr	x0, [x8]
     74c:	adrp	x8, 0 <llvm_gcda_start_file>
     750:	add	x8, x8, #0x0
     754:	ldr	x2, [x8]
     758:	ldr	w3, [sp, #28]
     75c:	adrp	x1, 0 <llvm_gcda_start_file>
     760:	add	x1, x1, #0x0
     764:	bl	0 <fprintf>
     768:	b	87c <llvm_gcda_emit_arcs+0x204>
     76c:	ldur	w8, [x29, #-4]
     770:	mov	w9, w8
     774:	mov	x10, #0x8                   	// #8
     778:	mul	x0, x10, x9
     77c:	bl	0 <malloc>
     780:	str	x0, [sp, #32]
     784:	stur	wzr, [x29, #-20]
     788:	ldur	w8, [x29, #-20]
     78c:	ldur	w9, [x29, #-4]
     790:	cmp	w8, w9
     794:	b.cs	7bc <llvm_gcda_emit_arcs+0x144>  // b.hs, b.nlast
     798:	bl	10ec <read_64bit_value>
     79c:	ldr	x8, [sp, #32]
     7a0:	ldur	w9, [x29, #-20]
     7a4:	mov	w10, w9
     7a8:	str	x0, [x8, x10, lsl #3]
     7ac:	ldur	w8, [x29, #-20]
     7b0:	add	w8, w8, #0x1
     7b4:	stur	w8, [x29, #-20]
     7b8:	b	788 <llvm_gcda_emit_arcs+0x110>
     7bc:	ldr	x8, [sp, #16]
     7c0:	adrp	x9, 0 <llvm_gcda_start_file>
     7c4:	add	x9, x9, #0x0
     7c8:	str	x8, [x9]
     7cc:	adrp	x0, 0 <llvm_gcda_start_file>
     7d0:	add	x0, x0, #0x0
     7d4:	mov	x1, #0x4                   	// #4
     7d8:	bl	3dc <write_bytes>
     7dc:	ldur	w10, [x29, #-4]
     7e0:	mov	w11, #0x2                   	// #2
     7e4:	mul	w0, w10, w11
     7e8:	bl	450 <write_32bit_value>
     7ec:	stur	wzr, [x29, #-20]
     7f0:	ldur	w8, [x29, #-20]
     7f4:	ldur	w9, [x29, #-4]
     7f8:	cmp	w8, w9
     7fc:	b.cs	874 <llvm_gcda_emit_arcs+0x1fc>  // b.hs, b.nlast
     800:	ldr	x8, [sp, #32]
     804:	cbz	x8, 820 <llvm_gcda_emit_arcs+0x1a8>
     808:	ldr	x8, [sp, #32]
     80c:	ldur	w9, [x29, #-20]
     810:	mov	w10, w9
     814:	ldr	x8, [x8, x10, lsl #3]
     818:	str	x8, [sp, #8]
     81c:	b	828 <llvm_gcda_emit_arcs+0x1b0>
     820:	mov	x8, xzr
     824:	str	x8, [sp, #8]
     828:	ldr	x8, [sp, #8]
     82c:	ldur	x9, [x29, #-16]
     830:	ldur	w10, [x29, #-20]
     834:	mov	w11, w10
     838:	mov	x12, #0x8                   	// #8
     83c:	mul	x11, x12, x11
     840:	add	x9, x9, x11
     844:	ldr	x11, [x9]
     848:	add	x8, x11, x8
     84c:	str	x8, [x9]
     850:	ldur	x8, [x29, #-16]
     854:	ldur	w10, [x29, #-20]
     858:	mov	w9, w10
     85c:	ldr	x0, [x8, x9, lsl #3]
     860:	bl	888 <write_64bit_value>
     864:	ldur	w8, [x29, #-20]
     868:	add	w8, w8, #0x1
     86c:	stur	w8, [x29, #-20]
     870:	b	7f0 <llvm_gcda_emit_arcs+0x178>
     874:	ldr	x0, [sp, #32]
     878:	bl	0 <free>
     87c:	ldp	x29, x30, [sp, #64]
     880:	add	sp, sp, #0x50
     884:	ret

0000000000000888 <write_64bit_value>:
     888:	sub	sp, sp, #0x20
     88c:	stp	x29, x30, [sp, #16]
     890:	add	x29, sp, #0x10
     894:	str	x0, [sp, #8]
     898:	ldr	x8, [sp, #8]
     89c:	str	w8, [sp, #4]
     8a0:	ldr	x9, [sp, #8]
     8a4:	lsr	x9, x9, #32
     8a8:	str	w9, [sp]
     8ac:	ldr	w0, [sp, #4]
     8b0:	bl	450 <write_32bit_value>
     8b4:	ldr	w0, [sp]
     8b8:	bl	450 <write_32bit_value>
     8bc:	ldp	x29, x30, [sp, #16]
     8c0:	add	sp, sp, #0x20
     8c4:	ret

00000000000008c8 <llvm_gcda_summary_info>:
     8c8:	sub	sp, sp, #0x40
     8cc:	stp	x29, x30, [sp, #48]
     8d0:	add	x29, sp, #0x30
     8d4:	mov	w8, #0x9                   	// #9
     8d8:	mov	w9, #0x1                   	// #1
     8dc:	adrp	x10, 0 <llvm_gcda_start_file>
     8e0:	add	x10, x10, #0x0
     8e4:	adrp	x11, 0 <llvm_gcda_start_file>
     8e8:	add	x11, x11, #0x0
     8ec:	stur	w8, [x29, #-4]
     8f0:	stur	w9, [x29, #-12]
     8f4:	stur	wzr, [x29, #-16]
     8f8:	ldr	x10, [x10]
     8fc:	str	x10, [sp, #24]
     900:	ldr	x10, [x11]
     904:	cbnz	x10, 90c <llvm_gcda_summary_info+0x44>
     908:	b	a84 <llvm_gcda_summary_info+0x1bc>
     90c:	bl	fec <read_le_32bit_value>
     910:	stur	w0, [x29, #-16]
     914:	ldur	w8, [x29, #-16]
     918:	mov	w9, #0xffffffff            	// #-1
     91c:	cmp	w8, w9
     920:	b.eq	9e0 <llvm_gcda_summary_info+0x118>  // b.none
     924:	ldur	w8, [x29, #-16]
     928:	mov	w9, #0xa1000000            	// #-1593835520
     92c:	cmp	w8, w9
     930:	b.eq	960 <llvm_gcda_summary_info+0x98>  // b.none
     934:	adrp	x8, 0 <stderr>
     938:	ldr	x8, [x8]
     93c:	ldr	x0, [x8]
     940:	adrp	x8, 0 <llvm_gcda_start_file>
     944:	add	x8, x8, #0x0
     948:	ldr	x2, [x8]
     94c:	ldur	w3, [x29, #-16]
     950:	adrp	x1, 0 <llvm_gcda_start_file>
     954:	add	x1, x1, #0x0
     958:	bl	0 <fprintf>
     95c:	b	a84 <llvm_gcda_summary_info+0x1bc>
     960:	bl	1084 <read_32bit_value>
     964:	stur	w0, [x29, #-16]
     968:	ldur	w8, [x29, #-16]
     96c:	cmp	w8, #0x9
     970:	b.eq	9a0 <llvm_gcda_summary_info+0xd8>  // b.none
     974:	adrp	x8, 0 <stderr>
     978:	ldr	x8, [x8]
     97c:	ldr	x0, [x8]
     980:	adrp	x8, 0 <llvm_gcda_start_file>
     984:	add	x8, x8, #0x0
     988:	ldr	x2, [x8]
     98c:	ldur	w3, [x29, #-16]
     990:	adrp	x1, 0 <llvm_gcda_start_file>
     994:	add	x1, x1, #0x0
     998:	bl	0 <fprintf>
     99c:	b	a84 <llvm_gcda_summary_info+0x1bc>
     9a0:	bl	1084 <read_32bit_value>
     9a4:	bl	1084 <read_32bit_value>
     9a8:	bl	1084 <read_32bit_value>
     9ac:	str	w0, [sp, #20]
     9b0:	adrp	x8, 0 <llvm_gcda_start_file>
     9b4:	add	x8, x8, #0x0
     9b8:	ldr	w9, [x8]
     9bc:	cbz	w9, 9cc <llvm_gcda_summary_info+0x104>
     9c0:	ldr	w8, [sp, #20]
     9c4:	str	w8, [sp, #16]
     9c8:	b	9d8 <llvm_gcda_summary_info+0x110>
     9cc:	ldr	w8, [sp, #20]
     9d0:	add	w8, w8, #0x1
     9d4:	str	w8, [sp, #16]
     9d8:	ldr	w8, [sp, #16]
     9dc:	stur	w8, [x29, #-12]
     9e0:	ldr	x8, [sp, #24]
     9e4:	adrp	x9, 0 <llvm_gcda_start_file>
     9e8:	add	x9, x9, #0x0
     9ec:	str	x8, [x9]
     9f0:	adrp	x0, 0 <llvm_gcda_start_file>
     9f4:	add	x0, x0, #0x0
     9f8:	mov	x1, #0x4                   	// #4
     9fc:	bl	3dc <write_bytes>
     a00:	mov	w0, #0x9                   	// #9
     a04:	bl	450 <write_32bit_value>
     a08:	mov	w10, wzr
     a0c:	mov	w0, w10
     a10:	str	w10, [sp, #12]
     a14:	bl	450 <write_32bit_value>
     a18:	ldr	w0, [sp, #12]
     a1c:	bl	450 <write_32bit_value>
     a20:	ldur	w0, [x29, #-12]
     a24:	bl	450 <write_32bit_value>
     a28:	mov	w10, #0x3                   	// #3
     a2c:	stur	w10, [x29, #-8]
     a30:	ldur	w8, [x29, #-8]
     a34:	cmp	w8, #0x9
     a38:	b.cs	a58 <llvm_gcda_summary_info+0x190>  // b.hs, b.nlast
     a3c:	mov	w8, wzr
     a40:	mov	w0, w8
     a44:	bl	450 <write_32bit_value>
     a48:	ldur	w8, [x29, #-8]
     a4c:	add	w8, w8, #0x1
     a50:	stur	w8, [x29, #-8]
     a54:	b	a30 <llvm_gcda_summary_info+0x168>
     a58:	adrp	x0, 0 <llvm_gcda_start_file>
     a5c:	add	x0, x0, #0x0
     a60:	mov	x1, #0x4                   	// #4
     a64:	bl	3dc <write_bytes>
     a68:	mov	w8, wzr
     a6c:	mov	w0, w8
     a70:	bl	450 <write_32bit_value>
     a74:	adrp	x9, 0 <llvm_gcda_start_file>
     a78:	add	x9, x9, #0x0
     a7c:	mov	w8, #0x1                   	// #1
     a80:	str	w8, [x9]
     a84:	ldp	x29, x30, [sp, #48]
     a88:	add	sp, sp, #0x40
     a8c:	ret

0000000000000a90 <llvm_gcda_end_file>:
     a90:	sub	sp, sp, #0x20
     a94:	stp	x29, x30, [sp, #16]
     a98:	add	x29, sp, #0x10
     a9c:	adrp	x8, 0 <llvm_gcda_start_file>
     aa0:	add	x8, x8, #0x0
     aa4:	adrp	x9, 0 <llvm_gcda_start_file>
     aa8:	add	x9, x9, #0x0
     aac:	ldr	x10, [x8]
     ab0:	str	x8, [sp, #8]
     ab4:	str	x9, [sp]
     ab8:	cbz	x10, b5c <llvm_gcda_end_file+0xcc>
     abc:	adrp	x0, 0 <llvm_gcda_start_file>
     ac0:	add	x0, x0, #0x0
     ac4:	mov	x1, #0x8                   	// #8
     ac8:	bl	3dc <write_bytes>
     acc:	adrp	x8, 0 <llvm_gcda_start_file>
     ad0:	add	x8, x8, #0x0
     ad4:	ldr	w9, [x8]
     ad8:	cbz	w9, b14 <llvm_gcda_end_file+0x84>
     adc:	ldr	x8, [sp]
     ae0:	ldr	x0, [x8]
     ae4:	adrp	x9, 0 <llvm_gcda_start_file>
     ae8:	add	x9, x9, #0x0
     aec:	ldr	x1, [x9]
     af0:	ldr	x9, [sp, #8]
     af4:	ldr	x3, [x9]
     af8:	mov	x2, #0x1                   	// #1
     afc:	bl	0 <fwrite>
     b00:	ldr	x8, [sp]
     b04:	ldr	x9, [x8]
     b08:	mov	x0, x9
     b0c:	bl	0 <free>
     b10:	b	b18 <llvm_gcda_end_file+0x88>
     b14:	bl	1128 <unmap_file>
     b18:	ldr	x8, [sp, #8]
     b1c:	ldr	x0, [x8]
     b20:	bl	0 <fflush>
     b24:	adrp	x8, 0 <llvm_gcda_start_file>
     b28:	add	x8, x8, #0x0
     b2c:	ldr	w9, [x8]
     b30:	mov	w0, w9
     b34:	bl	0 <lprofUnlockFd>
     b38:	ldr	x8, [sp, #8]
     b3c:	ldr	x10, [x8]
     b40:	mov	x0, x10
     b44:	bl	0 <fclose>
     b48:	mov	x8, xzr
     b4c:	ldr	x10, [sp, #8]
     b50:	str	x8, [x10]
     b54:	ldr	x11, [sp]
     b58:	str	x8, [x11]
     b5c:	adrp	x8, 0 <llvm_gcda_start_file>
     b60:	add	x8, x8, #0x0
     b64:	ldr	x0, [x8]
     b68:	bl	0 <free>
     b6c:	ldp	x29, x30, [sp, #16]
     b70:	add	sp, sp, #0x20
     b74:	ret

0000000000000b78 <llvm_register_writeout_function>:
     b78:	sub	sp, sp, #0x20
     b7c:	stp	x29, x30, [sp, #16]
     b80:	add	x29, sp, #0x10
     b84:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
     b88:	ldr	x8, [x8]
     b8c:	str	x0, [sp, #8]
     b90:	ldr	x1, [sp, #8]
     b94:	mov	x0, x8
     b98:	bl	ba8 <fn_list_insert>
     b9c:	ldp	x29, x30, [sp, #16]
     ba0:	add	sp, sp, #0x20
     ba4:	ret

0000000000000ba8 <fn_list_insert>:
     ba8:	sub	sp, sp, #0x40
     bac:	stp	x29, x30, [sp, #48]
     bb0:	add	x29, sp, #0x30
     bb4:	mov	x8, #0x18                  	// #24
     bb8:	mov	x9, xzr
     bbc:	adrp	x10, 0 <llvm_gcda_start_file>
     bc0:	add	x10, x10, #0x0
     bc4:	stur	x0, [x29, #-8]
     bc8:	stur	x1, [x29, #-16]
     bcc:	mov	x0, x8
     bd0:	str	x9, [sp, #16]
     bd4:	str	x10, [sp, #8]
     bd8:	bl	0 <malloc>
     bdc:	str	x0, [sp, #24]
     be0:	ldur	x8, [x29, #-16]
     be4:	ldr	x9, [sp, #24]
     be8:	str	x8, [x9, #8]
     bec:	ldr	x8, [sp, #24]
     bf0:	ldr	x9, [sp, #16]
     bf4:	str	x9, [x8, #16]
     bf8:	ldr	x8, [sp, #24]
     bfc:	ldr	x10, [sp, #8]
     c00:	str	x10, [x8]
     c04:	ldur	x8, [x29, #-8]
     c08:	ldr	x8, [x8]
     c0c:	cbnz	x8, c28 <fn_list_insert+0x80>
     c10:	ldr	x8, [sp, #24]
     c14:	ldur	x9, [x29, #-8]
     c18:	str	x8, [x9, #8]
     c1c:	ldur	x9, [x29, #-8]
     c20:	str	x8, [x9]
     c24:	b	c44 <fn_list_insert+0x9c>
     c28:	ldr	x8, [sp, #24]
     c2c:	ldur	x9, [x29, #-8]
     c30:	ldr	x9, [x9, #8]
     c34:	str	x8, [x9, #16]
     c38:	ldr	x8, [sp, #24]
     c3c:	ldur	x9, [x29, #-8]
     c40:	str	x8, [x9, #8]
     c44:	ldp	x29, x30, [sp, #48]
     c48:	add	sp, sp, #0x40
     c4c:	ret

0000000000000c50 <llvm_writeout_files>:
     c50:	sub	sp, sp, #0x20
     c54:	stp	x29, x30, [sp, #16]
     c58:	add	x29, sp, #0x10
     c5c:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
     c60:	ldr	x8, [x8]
     c64:	ldr	x8, [x8]
     c68:	str	x8, [sp, #8]
     c6c:	ldr	x8, [sp, #8]
     c70:	cbz	x8, ca8 <llvm_writeout_files+0x58>
     c74:	ldr	x8, [sp, #8]
     c78:	ldr	x8, [x8]
     c7c:	adrp	x9, 0 <llvm_gcda_start_file>
     c80:	add	x9, x9, #0x0
     c84:	cmp	x8, x9
     c88:	b.ne	c98 <llvm_writeout_files+0x48>  // b.any
     c8c:	ldr	x8, [sp, #8]
     c90:	ldr	x8, [x8, #8]
     c94:	blr	x8
     c98:	ldr	x8, [sp, #8]
     c9c:	ldr	x8, [x8, #16]
     ca0:	str	x8, [sp, #8]
     ca4:	b	c6c <llvm_writeout_files+0x1c>
     ca8:	ldp	x29, x30, [sp, #16]
     cac:	add	sp, sp, #0x20
     cb0:	ret

0000000000000cb4 <llvm_delete_writeout_function_list>:
     cb4:	stp	x29, x30, [sp, #-16]!
     cb8:	mov	x29, sp
     cbc:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
     cc0:	ldr	x0, [x0]
     cc4:	bl	cd0 <fn_list_remove>
     cc8:	ldp	x29, x30, [sp], #16
     ccc:	ret

0000000000000cd0 <fn_list_remove>:
     cd0:	sub	sp, sp, #0x30
     cd4:	stp	x29, x30, [sp, #32]
     cd8:	add	x29, sp, #0x20
     cdc:	mov	x8, xzr
     ce0:	stur	x0, [x29, #-8]
     ce4:	ldur	x9, [x29, #-8]
     ce8:	ldr	x9, [x9]
     cec:	str	x9, [sp, #16]
     cf0:	str	x8, [sp, #8]
     cf4:	str	x8, [sp]
     cf8:	ldr	x8, [sp, #16]
     cfc:	cbz	x8, d98 <fn_list_remove+0xc8>
     d00:	ldr	x8, [sp, #16]
     d04:	ldr	x8, [x8, #16]
     d08:	str	x8, [sp]
     d0c:	ldr	x8, [sp, #16]
     d10:	ldr	x8, [x8]
     d14:	adrp	x9, 0 <llvm_gcda_start_file>
     d18:	add	x9, x9, #0x0
     d1c:	cmp	x8, x9
     d20:	b.ne	d84 <fn_list_remove+0xb4>  // b.any
     d24:	ldr	x8, [sp, #16]
     d28:	ldur	x9, [x29, #-8]
     d2c:	ldr	x9, [x9]
     d30:	cmp	x8, x9
     d34:	b.ne	d44 <fn_list_remove+0x74>  // b.any
     d38:	ldr	x8, [sp]
     d3c:	ldur	x9, [x29, #-8]
     d40:	str	x8, [x9]
     d44:	ldr	x8, [sp, #16]
     d48:	ldur	x9, [x29, #-8]
     d4c:	ldr	x9, [x9, #8]
     d50:	cmp	x8, x9
     d54:	b.ne	d64 <fn_list_remove+0x94>  // b.any
     d58:	ldr	x8, [sp, #8]
     d5c:	ldur	x9, [x29, #-8]
     d60:	str	x8, [x9, #8]
     d64:	ldr	x8, [sp, #8]
     d68:	cbz	x8, d78 <fn_list_remove+0xa8>
     d6c:	ldr	x8, [sp]
     d70:	ldr	x9, [sp, #8]
     d74:	str	x8, [x9, #16]
     d78:	ldr	x0, [sp, #16]
     d7c:	bl	0 <free>
     d80:	b	d8c <fn_list_remove+0xbc>
     d84:	ldr	x8, [sp, #16]
     d88:	str	x8, [sp, #8]
     d8c:	ldr	x8, [sp]
     d90:	str	x8, [sp, #16]
     d94:	b	cf8 <fn_list_remove+0x28>
     d98:	ldp	x29, x30, [sp, #32]
     d9c:	add	sp, sp, #0x30
     da0:	ret

0000000000000da4 <llvm_register_flush_function>:
     da4:	sub	sp, sp, #0x20
     da8:	stp	x29, x30, [sp, #16]
     dac:	add	x29, sp, #0x10
     db0:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
     db4:	ldr	x8, [x8]
     db8:	str	x0, [sp, #8]
     dbc:	ldr	x1, [sp, #8]
     dc0:	mov	x0, x8
     dc4:	bl	ba8 <fn_list_insert>
     dc8:	ldp	x29, x30, [sp, #16]
     dcc:	add	sp, sp, #0x20
     dd0:	ret

0000000000000dd4 <__gcov_flush>:
     dd4:	sub	sp, sp, #0x20
     dd8:	stp	x29, x30, [sp, #16]
     ddc:	add	x29, sp, #0x10
     de0:	adrp	x8, 10 <llvm_gcda_start_file+0x10>
     de4:	ldr	x8, [x8]
     de8:	ldr	x8, [x8]
     dec:	str	x8, [sp, #8]
     df0:	ldr	x8, [sp, #8]
     df4:	cbz	x8, e14 <__gcov_flush+0x40>
     df8:	ldr	x8, [sp, #8]
     dfc:	ldr	x8, [x8, #8]
     e00:	blr	x8
     e04:	ldr	x8, [sp, #8]
     e08:	ldr	x8, [x8, #16]
     e0c:	str	x8, [sp, #8]
     e10:	b	df0 <__gcov_flush+0x1c>
     e14:	ldp	x29, x30, [sp, #16]
     e18:	add	sp, sp, #0x20
     e1c:	ret

0000000000000e20 <llvm_delete_flush_function_list>:
     e20:	stp	x29, x30, [sp, #-16]!
     e24:	mov	x29, sp
     e28:	adrp	x0, 10 <llvm_gcda_start_file+0x10>
     e2c:	ldr	x0, [x0]
     e30:	bl	cd0 <fn_list_remove>
     e34:	ldp	x29, x30, [sp], #16
     e38:	ret

0000000000000e3c <llvm_gcov_init>:
     e3c:	sub	sp, sp, #0x20
     e40:	stp	x29, x30, [sp, #16]
     e44:	add	x29, sp, #0x10
     e48:	str	x0, [sp, #8]
     e4c:	str	x1, [sp]
     e50:	ldr	x8, [sp, #8]
     e54:	cbz	x8, e60 <llvm_gcov_init+0x24>
     e58:	ldr	x0, [sp, #8]
     e5c:	bl	b78 <llvm_register_writeout_function>
     e60:	ldr	x8, [sp]
     e64:	cbz	x8, e70 <llvm_gcov_init+0x34>
     e68:	ldr	x0, [sp]
     e6c:	bl	da4 <llvm_register_flush_function>
     e70:	adrp	x8, 0 <llvm_gcda_start_file>
     e74:	add	x8, x8, #0x0
     e78:	ldr	w9, [x8]
     e7c:	cbnz	w9, ebc <llvm_gcov_init+0x80>
     e80:	mov	w8, #0x1                   	// #1
     e84:	adrp	x9, 0 <llvm_gcda_start_file>
     e88:	add	x9, x9, #0x0
     e8c:	str	w8, [x9]
     e90:	adrp	x0, e20 <llvm_delete_flush_function_list>
     e94:	add	x0, x0, #0x0
     e98:	bl	0 <atexit>
     e9c:	adrp	x9, cb4 <llvm_delete_writeout_function_list>
     ea0:	add	x9, x9, #0x0
     ea4:	mov	x0, x9
     ea8:	bl	0 <atexit>
     eac:	adrp	x9, c50 <llvm_writeout_files>
     eb0:	add	x9, x9, #0x0
     eb4:	mov	x0, x9
     eb8:	bl	0 <atexit>
     ebc:	ldp	x29, x30, [sp, #16]
     ec0:	add	sp, sp, #0x20
     ec4:	ret

0000000000000ec8 <map_file>:
     ec8:	sub	sp, sp, #0x40
     ecc:	stp	x29, x30, [sp, #48]
     ed0:	add	x29, sp, #0x30
     ed4:	adrp	x8, 0 <llvm_gcda_start_file>
     ed8:	add	x8, x8, #0x0
     edc:	mov	x9, xzr
     ee0:	mov	w2, #0x2                   	// #2
     ee4:	adrp	x10, 0 <llvm_gcda_start_file>
     ee8:	add	x10, x10, #0x0
     eec:	ldr	x0, [x8]
     ef0:	mov	x1, x9
     ef4:	stur	x8, [x29, #-16]
     ef8:	str	x10, [sp, #24]
     efc:	bl	0 <fseek>
     f00:	ldur	x8, [x29, #-16]
     f04:	ldr	x9, [x8]
     f08:	mov	x0, x9
     f0c:	bl	0 <ftell>
     f10:	ldr	x8, [sp, #24]
     f14:	str	x0, [x8]
     f18:	ldr	x9, [x8]
     f1c:	cbnz	x9, f2c <map_file+0x64>
     f20:	mov	w8, #0xffffffff            	// #-1
     f24:	stur	w8, [x29, #-4]
     f28:	b	fdc <map_file+0x114>
     f2c:	ldr	x8, [sp, #24]
     f30:	ldr	x1, [x8]
     f34:	adrp	x9, 0 <llvm_gcda_start_file>
     f38:	add	x9, x9, #0x0
     f3c:	ldr	w4, [x9]
     f40:	mov	x9, xzr
     f44:	mov	x0, x9
     f48:	mov	w2, #0x3                   	// #3
     f4c:	mov	w3, #0x1                   	// #1
     f50:	mov	x5, x9
     f54:	bl	0 <mmap>
     f58:	adrp	x8, 0 <llvm_gcda_start_file>
     f5c:	add	x8, x8, #0x0
     f60:	str	x0, [x8]
     f64:	ldr	x8, [x8]
     f68:	mov	x9, #0xffffffffffffffff    	// #-1
     f6c:	cmp	x8, x9
     f70:	b.ne	fd8 <map_file+0x110>  // b.any
     f74:	bl	0 <__errno_location>
     f78:	ldr	w8, [x0]
     f7c:	stur	w8, [x29, #-8]
     f80:	adrp	x9, 0 <stderr>
     f84:	ldr	x9, [x9]
     f88:	ldr	x0, [x9]
     f8c:	adrp	x9, 0 <llvm_gcda_start_file>
     f90:	add	x9, x9, #0x0
     f94:	ldr	x2, [x9]
     f98:	ldur	w8, [x29, #-8]
     f9c:	str	x0, [sp, #16]
     fa0:	mov	w0, w8
     fa4:	str	x2, [sp, #8]
     fa8:	bl	0 <strerror>
     fac:	ldr	x9, [sp, #16]
     fb0:	str	x0, [sp]
     fb4:	mov	x0, x9
     fb8:	adrp	x1, 0 <llvm_gcda_start_file>
     fbc:	add	x1, x1, #0x0
     fc0:	ldr	x2, [sp, #8]
     fc4:	ldr	x3, [sp]
     fc8:	bl	0 <fprintf>
     fcc:	mov	w8, #0xffffffff            	// #-1
     fd0:	stur	w8, [x29, #-4]
     fd4:	b	fdc <map_file+0x114>
     fd8:	stur	wzr, [x29, #-4]
     fdc:	ldur	w0, [x29, #-4]
     fe0:	ldp	x29, x30, [sp, #48]
     fe4:	add	sp, sp, #0x40
     fe8:	ret

0000000000000fec <read_le_32bit_value>:
     fec:	sub	sp, sp, #0x10
     ff0:	adrp	x8, 0 <llvm_gcda_start_file>
     ff4:	add	x8, x8, #0x0
     ff8:	str	wzr, [sp, #8]
     ffc:	ldr	w9, [x8]
    1000:	cbz	w9, 1010 <read_le_32bit_value+0x24>
    1004:	mov	w8, #0xffffffff            	// #-1
    1008:	str	w8, [sp, #12]
    100c:	b	1078 <read_le_32bit_value+0x8c>
    1010:	str	wzr, [sp, #4]
    1014:	ldr	w8, [sp, #4]
    1018:	cmp	w8, #0x4
    101c:	b.ge	1070 <read_le_32bit_value+0x84>  // b.tcont
    1020:	adrp	x8, 0 <llvm_gcda_start_file>
    1024:	add	x8, x8, #0x0
    1028:	ldr	x8, [x8]
    102c:	adrp	x9, 0 <llvm_gcda_start_file>
    1030:	add	x9, x9, #0x0
    1034:	ldr	x10, [x9]
    1038:	add	x11, x10, #0x1
    103c:	str	x11, [x9]
    1040:	ldrb	w12, [x8, x10]
    1044:	ldr	w13, [sp, #4]
    1048:	mov	w14, #0x8                   	// #8
    104c:	mul	w13, w14, w13
    1050:	lsl	w12, w12, w13
    1054:	ldr	w13, [sp, #8]
    1058:	orr	w12, w13, w12
    105c:	str	w12, [sp, #8]
    1060:	ldr	w8, [sp, #4]
    1064:	add	w8, w8, #0x1
    1068:	str	w8, [sp, #4]
    106c:	b	1014 <read_le_32bit_value+0x28>
    1070:	ldr	w8, [sp, #8]
    1074:	str	w8, [sp, #12]
    1078:	ldr	w0, [sp, #12]
    107c:	add	sp, sp, #0x10
    1080:	ret

0000000000001084 <read_32bit_value>:
    1084:	sub	sp, sp, #0x10
    1088:	adrp	x8, 0 <llvm_gcda_start_file>
    108c:	add	x8, x8, #0x0
    1090:	adrp	x9, 0 <llvm_gcda_start_file>
    1094:	add	x9, x9, #0x0
    1098:	ldr	w10, [x8]
    109c:	str	x9, [sp]
    10a0:	cbz	w10, 10b0 <read_32bit_value+0x2c>
    10a4:	mov	w8, #0xffffffff            	// #-1
    10a8:	str	w8, [sp, #12]
    10ac:	b	10e0 <read_32bit_value+0x5c>
    10b0:	adrp	x8, 0 <llvm_gcda_start_file>
    10b4:	add	x8, x8, #0x0
    10b8:	ldr	x8, [x8]
    10bc:	ldr	x9, [sp]
    10c0:	ldr	x10, [x9]
    10c4:	ldr	w11, [x8, x10]
    10c8:	str	w11, [sp, #8]
    10cc:	ldr	x8, [x9]
    10d0:	add	x8, x8, #0x4
    10d4:	str	x8, [x9]
    10d8:	ldr	w11, [sp, #8]
    10dc:	str	w11, [sp, #12]
    10e0:	ldr	w0, [sp, #12]
    10e4:	add	sp, sp, #0x10
    10e8:	ret

00000000000010ec <read_64bit_value>:
    10ec:	sub	sp, sp, #0x20
    10f0:	stp	x29, x30, [sp, #16]
    10f4:	add	x29, sp, #0x10
    10f8:	bl	1084 <read_32bit_value>
    10fc:	stur	w0, [x29, #-4]
    1100:	bl	1084 <read_32bit_value>
    1104:	str	w0, [sp, #8]
    1108:	ldr	w8, [sp, #8]
    110c:	mov	w9, w8
    1110:	ldur	w8, [x29, #-4]
    1114:	mov	w10, w8
    1118:	orr	x0, x10, x9, lsl #32
    111c:	ldp	x29, x30, [sp, #16]
    1120:	add	sp, sp, #0x20
    1124:	ret

0000000000001128 <unmap_file>:
    1128:	sub	sp, sp, #0x50
    112c:	stp	x29, x30, [sp, #64]
    1130:	add	x29, sp, #0x40
    1134:	adrp	x8, 0 <llvm_gcda_start_file>
    1138:	add	x8, x8, #0x0
    113c:	adrp	x9, 0 <llvm_gcda_start_file>
    1140:	add	x9, x9, #0x0
    1144:	mov	w2, #0x4                   	// #4
    1148:	mov	w10, #0xffffffff            	// #-1
    114c:	ldr	x0, [x8]
    1150:	ldr	x1, [x9]
    1154:	stur	x8, [x29, #-16]
    1158:	stur	x9, [x29, #-24]
    115c:	stur	w10, [x29, #-28]
    1160:	bl	0 <msync>
    1164:	ldur	w10, [x29, #-28]
    1168:	cmp	w0, w10
    116c:	b.ne	11c8 <unmap_file+0xa0>  // b.any
    1170:	bl	0 <__errno_location>
    1174:	ldr	w8, [x0]
    1178:	stur	w8, [x29, #-4]
    117c:	adrp	x9, 0 <stderr>
    1180:	ldr	x9, [x9]
    1184:	ldr	x0, [x9]
    1188:	adrp	x9, 0 <llvm_gcda_start_file>
    118c:	add	x9, x9, #0x0
    1190:	ldr	x2, [x9]
    1194:	ldur	w8, [x29, #-4]
    1198:	str	x0, [sp, #24]
    119c:	mov	w0, w8
    11a0:	str	x2, [sp, #16]
    11a4:	bl	0 <strerror>
    11a8:	ldr	x9, [sp, #24]
    11ac:	str	x0, [sp, #8]
    11b0:	mov	x0, x9
    11b4:	adrp	x1, 0 <llvm_gcda_start_file>
    11b8:	add	x1, x1, #0x0
    11bc:	ldr	x2, [sp, #16]
    11c0:	ldr	x3, [sp, #8]
    11c4:	bl	0 <fprintf>
    11c8:	ldur	x8, [x29, #-16]
    11cc:	ldr	x0, [x8]
    11d0:	ldur	x9, [x29, #-24]
    11d4:	ldr	x1, [x9]
    11d8:	bl	0 <munmap>
    11dc:	mov	x8, xzr
    11e0:	ldur	x9, [x29, #-16]
    11e4:	str	x8, [x9]
    11e8:	ldur	x8, [x29, #-24]
    11ec:	str	xzr, [x8]
    11f0:	ldp	x29, x30, [sp, #64]
    11f4:	add	sp, sp, #0x50
    11f8:	ret

InstrProfiling.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_get_magic>:
   0:	mov	x0, #0x7281                	// #29313
   4:	movk	x0, #0x6f66, lsl #16
   8:	movk	x0, #0x7072, lsl #32
   c:	movk	x0, #0xff6c, lsl #48
  10:	ret

0000000000000014 <lprofProfileDumped>:
  14:	adrp	x8, 0 <__llvm_profile_get_magic>
  18:	add	x8, x8, #0x0
  1c:	ldr	w0, [x8]
  20:	ret

0000000000000024 <lprofSetProfileDumped>:
  24:	mov	w8, #0x1                   	// #1
  28:	adrp	x9, 0 <__llvm_profile_get_magic>
  2c:	add	x9, x9, #0x0
  30:	str	w8, [x9]
  34:	ret

0000000000000038 <__llvm_profile_set_dumped>:
  38:	stp	x29, x30, [sp, #-16]!
  3c:	mov	x29, sp
  40:	bl	24 <lprofSetProfileDumped>
  44:	ldp	x29, x30, [sp], #16
  48:	ret

000000000000004c <__llvm_profile_get_num_padding_bytes>:
  4c:	sub	sp, sp, #0x10
  50:	mov	x8, #0x8                   	// #8
  54:	mov	x9, #0x7                   	// #7
  58:	str	x0, [sp, #8]
  5c:	ldr	x10, [sp, #8]
  60:	udiv	x11, x10, x8
  64:	mul	x11, x11, x8
  68:	subs	x10, x10, x11
  6c:	subs	x8, x8, x10
  70:	and	x8, x9, x8
  74:	mov	w0, w8
  78:	add	sp, sp, #0x10
  7c:	ret

0000000000000080 <__llvm_profile_get_version>:
  80:	adrp	x8, 0 <__llvm_profile_get_magic>
  84:	ldr	x8, [x8]
  88:	ldr	x0, [x8]
  8c:	ret

0000000000000090 <__llvm_profile_reset_counters>:
  90:	sub	sp, sp, #0x70
  94:	stp	x29, x30, [sp, #96]
  98:	add	x29, sp, #0x60
  9c:	mov	x8, #0x8                   	// #8
  a0:	mov	w9, wzr
  a4:	str	x8, [sp, #16]
  a8:	str	w9, [sp, #12]
  ac:	bl	0 <__llvm_profile_begin_counters>
  b0:	stur	x0, [x29, #-8]
  b4:	bl	0 <__llvm_profile_end_counters>
  b8:	stur	x0, [x29, #-16]
  bc:	ldur	x0, [x29, #-8]
  c0:	ldur	x8, [x29, #-16]
  c4:	ldur	x10, [x29, #-8]
  c8:	subs	x8, x8, x10
  cc:	ldr	x10, [sp, #16]
  d0:	sdiv	x8, x8, x10
  d4:	mul	x2, x10, x8
  d8:	ldr	w9, [sp, #12]
  dc:	mov	w1, w9
  e0:	bl	0 <memset>
  e4:	bl	0 <__llvm_profile_begin_data>
  e8:	stur	x0, [x29, #-24]
  ec:	bl	0 <__llvm_profile_end_data>
  f0:	stur	x0, [x29, #-32]
  f4:	ldur	x8, [x29, #-24]
  f8:	stur	x8, [x29, #-40]
  fc:	ldur	x8, [x29, #-40]
 100:	ldur	x9, [x29, #-32]
 104:	cmp	x8, x9
 108:	b.cs	1e8 <__llvm_profile_reset_counters+0x158>  // b.hs, b.nlast
 10c:	str	xzr, [sp, #48]
 110:	ldur	x8, [x29, #-40]
 114:	ldr	x8, [x8, #32]
 118:	cbnz	x8, 120 <__llvm_profile_reset_counters+0x90>
 11c:	b	1d8 <__llvm_profile_reset_counters+0x148>
 120:	ldur	x8, [x29, #-40]
 124:	ldr	x8, [x8, #32]
 128:	str	x8, [sp, #32]
 12c:	str	wzr, [sp, #44]
 130:	ldr	w8, [sp, #44]
 134:	cmp	w8, #0x1
 138:	b.hi	170 <__llvm_profile_reset_counters+0xe0>  // b.pmore
 13c:	ldur	x8, [x29, #-40]
 140:	add	x8, x8, #0x2c
 144:	ldr	w9, [sp, #44]
 148:	mov	w10, w9
 14c:	ldrh	w9, [x8, x10, lsl #1]
 150:	mov	w8, w9
 154:	ldr	x10, [sp, #48]
 158:	add	x8, x10, x8
 15c:	str	x8, [sp, #48]
 160:	ldr	w8, [sp, #44]
 164:	add	w8, w8, #0x1
 168:	str	w8, [sp, #44]
 16c:	b	130 <__llvm_profile_reset_counters+0xa0>
 170:	str	wzr, [sp, #40]
 174:	ldr	w8, [sp, #40]
 178:	mov	w9, w8
 17c:	ldr	x10, [sp, #48]
 180:	cmp	x9, x10
 184:	b.cs	1d8 <__llvm_profile_reset_counters+0x148>  // b.hs, b.nlast
 188:	ldr	x8, [sp, #32]
 18c:	ldr	w9, [sp, #40]
 190:	mov	w10, w9
 194:	mov	x11, #0x8                   	// #8
 198:	mul	x10, x11, x10
 19c:	add	x8, x8, x10
 1a0:	ldr	x8, [x8]
 1a4:	str	x8, [sp, #24]
 1a8:	ldr	x8, [sp, #24]
 1ac:	cbz	x8, 1c8 <__llvm_profile_reset_counters+0x138>
 1b0:	ldr	x8, [sp, #24]
 1b4:	str	xzr, [x8, #8]
 1b8:	ldr	x8, [sp, #24]
 1bc:	ldr	x8, [x8, #16]
 1c0:	str	x8, [sp, #24]
 1c4:	b	1a8 <__llvm_profile_reset_counters+0x118>
 1c8:	ldr	w8, [sp, #40]
 1cc:	add	w8, w8, #0x1
 1d0:	str	w8, [sp, #40]
 1d4:	b	174 <__llvm_profile_reset_counters+0xe4>
 1d8:	ldur	x8, [x29, #-40]
 1dc:	add	x8, x8, #0x30
 1e0:	stur	x8, [x29, #-40]
 1e4:	b	fc <__llvm_profile_reset_counters+0x6c>
 1e8:	adrp	x8, 0 <__llvm_profile_get_magic>
 1ec:	add	x8, x8, #0x0
 1f0:	str	wzr, [x8]
 1f4:	ldp	x29, x30, [sp, #96]
 1f8:	add	sp, sp, #0x70
 1fc:	ret

InstrProfilingValue.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <getValueProfRecordHeaderSize>:
       0:	sub	sp, sp, #0x10
       4:	mov	x8, #0x1                   	// #1
       8:	str	w0, [sp, #12]
       c:	ldr	w9, [sp, #12]
      10:	mov	w10, w9
      14:	mul	x8, x8, x10
      18:	add	x8, x8, #0x8
      1c:	str	w8, [sp, #8]
      20:	ldr	w8, [sp, #8]
      24:	add	w8, w8, #0x7
      28:	and	w8, w8, #0xfffffff8
      2c:	str	w8, [sp, #8]
      30:	ldr	w0, [sp, #8]
      34:	add	sp, sp, #0x10
      38:	ret

000000000000003c <getValueProfRecordSize>:
      3c:	sub	sp, sp, #0x20
      40:	stp	x29, x30, [sp, #16]
      44:	add	x29, sp, #0x10
      48:	mov	x8, #0x10                  	// #16
      4c:	stur	w0, [x29, #-4]
      50:	str	w1, [sp, #8]
      54:	ldur	w0, [x29, #-4]
      58:	str	x8, [sp]
      5c:	bl	0 <getValueProfRecordHeaderSize>
      60:	ldr	w9, [sp, #8]
      64:	mov	w8, w9
      68:	ldr	x10, [sp]
      6c:	mul	x8, x10, x8
      70:	add	x8, x8, w0, uxtw
      74:	mov	w0, w8
      78:	ldp	x29, x30, [sp, #16]
      7c:	add	sp, sp, #0x20
      80:	ret

0000000000000084 <getValueProfRecordValueData>:
      84:	sub	sp, sp, #0x20
      88:	stp	x29, x30, [sp, #16]
      8c:	add	x29, sp, #0x10
      90:	str	x0, [sp, #8]
      94:	ldr	x8, [sp, #8]
      98:	ldr	x9, [sp, #8]
      9c:	ldr	w0, [x9, #4]
      a0:	str	x8, [sp]
      a4:	bl	0 <getValueProfRecordHeaderSize>
      a8:	mov	w8, w0
      ac:	ubfx	x8, x8, #0, #32
      b0:	ldr	x9, [sp]
      b4:	add	x0, x9, x8
      b8:	ldp	x29, x30, [sp, #16]
      bc:	add	sp, sp, #0x20
      c0:	ret

00000000000000c4 <getValueProfRecordNumValueData>:
      c4:	sub	sp, sp, #0x10
      c8:	str	x0, [sp, #8]
      cc:	str	wzr, [sp, #4]
      d0:	str	wzr, [sp]
      d4:	ldr	w8, [sp]
      d8:	ldr	x9, [sp, #8]
      dc:	ldr	w10, [x9, #4]
      e0:	cmp	w8, w10
      e4:	b.cs	118 <getValueProfRecordNumValueData+0x54>  // b.hs, b.nlast
      e8:	ldr	x8, [sp, #8]
      ec:	add	x8, x8, #0x8
      f0:	ldr	w9, [sp]
      f4:	mov	w10, w9
      f8:	ldrb	w9, [x8, x10]
      fc:	ldr	w11, [sp, #4]
     100:	add	w9, w11, w9
     104:	str	w9, [sp, #4]
     108:	ldr	w8, [sp]
     10c:	add	w8, w8, #0x1
     110:	str	w8, [sp]
     114:	b	d4 <getValueProfRecordNumValueData+0x10>
     118:	ldr	w0, [sp, #4]
     11c:	add	sp, sp, #0x10
     120:	ret

0000000000000124 <getValueProfRecordNext>:
     124:	sub	sp, sp, #0x30
     128:	stp	x29, x30, [sp, #32]
     12c:	add	x29, sp, #0x20
     130:	stur	x0, [x29, #-8]
     134:	ldur	x0, [x29, #-8]
     138:	bl	c4 <getValueProfRecordNumValueData>
     13c:	stur	w0, [x29, #-12]
     140:	ldur	x8, [x29, #-8]
     144:	ldur	x9, [x29, #-8]
     148:	ldr	w0, [x9, #4]
     14c:	ldur	w1, [x29, #-12]
     150:	str	x8, [sp, #8]
     154:	bl	3c <getValueProfRecordSize>
     158:	mov	w8, w0
     15c:	ubfx	x8, x8, #0, #32
     160:	ldr	x9, [sp, #8]
     164:	add	x0, x9, x8
     168:	ldp	x29, x30, [sp, #32]
     16c:	add	sp, sp, #0x30
     170:	ret

0000000000000174 <getFirstValueProfRecord>:
     174:	sub	sp, sp, #0x10
     178:	str	x0, [sp, #8]
     17c:	ldr	x8, [sp, #8]
     180:	add	x0, x8, #0x8
     184:	add	sp, sp, #0x10
     188:	ret

000000000000018c <getValueProfDataSize>:
     18c:	sub	sp, sp, #0x40
     190:	stp	x29, x30, [sp, #48]
     194:	add	x29, sp, #0x30
     198:	mov	w8, #0x8                   	// #8
     19c:	stur	x0, [x29, #-8]
     1a0:	stur	w8, [x29, #-16]
     1a4:	ldur	x9, [x29, #-8]
     1a8:	ldr	x9, [x9]
     1ac:	str	x9, [sp, #24]
     1b0:	stur	wzr, [x29, #-12]
     1b4:	ldur	w8, [x29, #-12]
     1b8:	cmp	w8, #0x1
     1bc:	b.hi	234 <getValueProfDataSize+0xa8>  // b.pmore
     1c0:	ldur	x8, [x29, #-8]
     1c4:	ldr	x8, [x8, #16]
     1c8:	ldr	x0, [sp, #24]
     1cc:	ldur	w1, [x29, #-12]
     1d0:	blr	x8
     1d4:	str	w0, [sp, #20]
     1d8:	ldr	w9, [sp, #20]
     1dc:	cbnz	w9, 1e4 <getValueProfDataSize+0x58>
     1e0:	b	224 <getValueProfDataSize+0x98>
     1e4:	ldr	w0, [sp, #20]
     1e8:	ldur	x8, [x29, #-8]
     1ec:	ldr	x8, [x8, #24]
     1f0:	ldr	x9, [sp, #24]
     1f4:	ldur	w1, [x29, #-12]
     1f8:	str	w0, [sp, #16]
     1fc:	mov	x0, x9
     200:	blr	x8
     204:	ldr	w10, [sp, #16]
     208:	str	w0, [sp, #12]
     20c:	mov	w0, w10
     210:	ldr	w1, [sp, #12]
     214:	bl	3c <getValueProfRecordSize>
     218:	ldur	w10, [x29, #-16]
     21c:	add	w10, w10, w0
     220:	stur	w10, [x29, #-16]
     224:	ldur	w8, [x29, #-12]
     228:	add	w8, w8, #0x1
     22c:	stur	w8, [x29, #-12]
     230:	b	1b4 <getValueProfDataSize+0x28>
     234:	ldur	w0, [x29, #-16]
     238:	ldp	x29, x30, [sp, #48]
     23c:	add	sp, sp, #0x40
     240:	ret

0000000000000244 <serializeValueProfRecordFrom>:
     244:	sub	sp, sp, #0x50
     248:	stp	x29, x30, [sp, #64]
     24c:	add	x29, sp, #0x40
     250:	stur	x0, [x29, #-8]
     254:	stur	x1, [x29, #-16]
     258:	stur	w2, [x29, #-20]
     25c:	stur	w3, [x29, #-24]
     260:	ldur	x8, [x29, #-16]
     264:	ldr	x8, [x8]
     268:	str	x8, [sp, #24]
     26c:	ldur	w9, [x29, #-20]
     270:	ldur	x8, [x29, #-8]
     274:	str	w9, [x8]
     278:	ldur	w9, [x29, #-24]
     27c:	ldur	x8, [x29, #-8]
     280:	str	w9, [x8, #4]
     284:	ldur	x0, [x29, #-8]
     288:	bl	84 <getValueProfRecordValueData>
     28c:	str	x0, [sp, #16]
     290:	stur	wzr, [x29, #-28]
     294:	ldur	w8, [x29, #-28]
     298:	ldur	w9, [x29, #-24]
     29c:	cmp	w8, w9
     2a0:	b.cs	324 <serializeValueProfRecordFrom+0xe0>  // b.hs, b.nlast
     2a4:	ldur	x8, [x29, #-16]
     2a8:	ldr	x8, [x8, #32]
     2ac:	ldr	x0, [sp, #24]
     2b0:	ldur	w1, [x29, #-20]
     2b4:	ldur	w2, [x29, #-28]
     2b8:	blr	x8
     2bc:	str	w0, [sp, #12]
     2c0:	ldr	w9, [sp, #12]
     2c4:	ldur	x8, [x29, #-8]
     2c8:	add	x8, x8, #0x8
     2cc:	ldur	w10, [x29, #-28]
     2d0:	mov	w11, w10
     2d4:	add	x8, x8, x11
     2d8:	strb	w9, [x8]
     2dc:	ldur	x8, [x29, #-16]
     2e0:	ldr	x8, [x8, #48]
     2e4:	ldr	x0, [sp, #24]
     2e8:	ldr	x1, [sp, #16]
     2ec:	ldur	w2, [x29, #-20]
     2f0:	ldur	w3, [x29, #-28]
     2f4:	blr	x8
     2f8:	ldr	w9, [sp, #12]
     2fc:	mov	w8, w9
     300:	ldr	x11, [sp, #16]
     304:	mov	x12, #0x10                  	// #16
     308:	mul	x8, x12, x8
     30c:	add	x8, x11, x8
     310:	str	x8, [sp, #16]
     314:	ldur	w8, [x29, #-28]
     318:	add	w8, w8, #0x1
     31c:	stur	w8, [x29, #-28]
     320:	b	294 <serializeValueProfRecordFrom+0x50>
     324:	ldp	x29, x30, [sp, #64]
     328:	add	sp, sp, #0x50
     32c:	ret

0000000000000330 <serializeValueProfDataFrom>:
     330:	sub	sp, sp, #0x50
     334:	stp	x29, x30, [sp, #64]
     338:	add	x29, sp, #0x40
     33c:	stur	x0, [x29, #-8]
     340:	stur	x1, [x29, #-16]
     344:	ldur	x8, [x29, #-16]
     348:	cbz	x8, 35c <serializeValueProfDataFrom+0x2c>
     34c:	ldur	x8, [x29, #-16]
     350:	ldr	w9, [x8]
     354:	str	w9, [sp, #16]
     358:	b	368 <serializeValueProfDataFrom+0x38>
     35c:	ldur	x0, [x29, #-8]
     360:	bl	18c <getValueProfDataSize>
     364:	str	w0, [sp, #16]
     368:	ldr	w8, [sp, #16]
     36c:	stur	w8, [x29, #-24]
     370:	ldur	x9, [x29, #-16]
     374:	cbz	x9, 384 <serializeValueProfDataFrom+0x54>
     378:	ldur	x8, [x29, #-16]
     37c:	str	x8, [sp, #8]
     380:	b	39c <serializeValueProfDataFrom+0x6c>
     384:	ldur	x8, [x29, #-8]
     388:	ldr	x8, [x8, #56]
     38c:	ldur	w9, [x29, #-24]
     390:	mov	w0, w9
     394:	blr	x8
     398:	str	x0, [sp, #8]
     39c:	ldr	x8, [sp, #8]
     3a0:	str	x8, [sp, #32]
     3a4:	ldur	w9, [x29, #-24]
     3a8:	ldr	x8, [sp, #32]
     3ac:	str	w9, [x8]
     3b0:	ldur	x8, [x29, #-8]
     3b4:	ldr	x8, [x8, #8]
     3b8:	ldur	x10, [x29, #-8]
     3bc:	ldr	x0, [x10]
     3c0:	blr	x8
     3c4:	ldr	x8, [sp, #32]
     3c8:	str	w0, [x8, #4]
     3cc:	ldr	x0, [sp, #32]
     3d0:	bl	174 <getFirstValueProfRecord>
     3d4:	str	x0, [sp, #24]
     3d8:	stur	wzr, [x29, #-20]
     3dc:	ldur	w8, [x29, #-20]
     3e0:	cmp	w8, #0x1
     3e4:	b.hi	440 <serializeValueProfDataFrom+0x110>  // b.pmore
     3e8:	ldur	x8, [x29, #-8]
     3ec:	ldr	x8, [x8, #16]
     3f0:	ldur	x9, [x29, #-8]
     3f4:	ldr	x0, [x9]
     3f8:	ldur	w1, [x29, #-20]
     3fc:	blr	x8
     400:	str	w0, [sp, #20]
     404:	ldr	w10, [sp, #20]
     408:	cbnz	w10, 410 <serializeValueProfDataFrom+0xe0>
     40c:	b	430 <serializeValueProfDataFrom+0x100>
     410:	ldr	x0, [sp, #24]
     414:	ldur	x1, [x29, #-8]
     418:	ldur	w2, [x29, #-20]
     41c:	ldr	w3, [sp, #20]
     420:	bl	244 <serializeValueProfRecordFrom>
     424:	ldr	x0, [sp, #24]
     428:	bl	124 <getValueProfRecordNext>
     42c:	str	x0, [sp, #24]
     430:	ldur	w8, [x29, #-20]
     434:	add	w8, w8, #0x1
     438:	stur	w8, [x29, #-20]
     43c:	b	3dc <serializeValueProfDataFrom+0xac>
     440:	ldr	x0, [sp, #32]
     444:	ldp	x29, x30, [sp, #64]
     448:	add	sp, sp, #0x50
     44c:	ret

0000000000000450 <lprofSetupValueProfiler>:
     450:	sub	sp, sp, #0x20
     454:	stp	x29, x30, [sp, #16]
     458:	add	x29, sp, #0x10
     45c:	mov	x8, xzr
     460:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     464:	add	x0, x0, #0x0
     468:	adrp	x9, 0 <getValueProfRecordHeaderSize>
     46c:	add	x9, x9, #0x0
     470:	str	x8, [sp, #8]
     474:	str	x9, [sp]
     478:	bl	0 <getenv>
     47c:	str	x0, [sp, #8]
     480:	ldr	x8, [sp, #8]
     484:	cbz	x8, 4b4 <lprofSetupValueProfiler+0x64>
     488:	ldr	x8, [sp, #8]
     48c:	ldrb	w9, [x8]
     490:	cbz	w9, 4b4 <lprofSetupValueProfiler+0x64>
     494:	ldr	x0, [sp, #8]
     498:	bl	0 <atoi>
     49c:	ldr	x8, [sp]
     4a0:	str	w0, [x8]
     4a4:	adrp	x9, 0 <getValueProfRecordHeaderSize>
     4a8:	add	x9, x9, #0x0
     4ac:	mov	w10, #0x1                   	// #1
     4b0:	str	w10, [x9]
     4b4:	ldr	x8, [sp]
     4b8:	ldr	w9, [x8]
     4bc:	cmp	w9, #0xff
     4c0:	b.ls	4d0 <lprofSetupValueProfiler+0x80>  // b.plast
     4c4:	mov	w8, #0xff                  	// #255
     4c8:	ldr	x9, [sp]
     4cc:	str	w8, [x9]
     4d0:	ldp	x29, x30, [sp, #16]
     4d4:	add	sp, sp, #0x20
     4d8:	ret

00000000000004dc <lprofSetMaxValsPerSite>:
     4dc:	sub	sp, sp, #0x10
     4e0:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     4e4:	add	x8, x8, #0x0
     4e8:	mov	w9, #0x1                   	// #1
     4ec:	adrp	x10, 0 <getValueProfRecordHeaderSize>
     4f0:	add	x10, x10, #0x0
     4f4:	str	w0, [sp, #12]
     4f8:	ldr	w11, [sp, #12]
     4fc:	str	w11, [x8]
     500:	str	w9, [x10]
     504:	add	sp, sp, #0x10
     508:	ret

000000000000050c <__llvm_profile_set_num_value_sites>:
     50c:	sub	sp, sp, #0x10
     510:	str	x0, [sp, #8]
     514:	str	w1, [sp, #4]
     518:	strh	w2, [sp, #2]
     51c:	ldrh	w8, [sp, #2]
     520:	ldr	x9, [sp, #8]
     524:	add	x9, x9, #0x2c
     528:	ldr	w10, [sp, #4]
     52c:	mov	w11, w10
     530:	mov	x12, #0x2                   	// #2
     534:	mul	x11, x12, x11
     538:	add	x9, x9, x11
     53c:	strh	w8, [x9]
     540:	add	sp, sp, #0x10
     544:	ret

0000000000000548 <__llvm_profile_iterate_data>:
     548:	sub	sp, sp, #0x10
     54c:	str	x0, [sp, #8]
     550:	ldr	x8, [sp, #8]
     554:	add	x0, x8, #0x30
     558:	add	sp, sp, #0x10
     55c:	ret

0000000000000560 <__llvm_get_function_addr>:
     560:	sub	sp, sp, #0x10
     564:	str	x0, [sp, #8]
     568:	ldr	x8, [sp, #8]
     56c:	ldr	x0, [x8, #24]
     570:	add	sp, sp, #0x10
     574:	ret

0000000000000578 <__llvm_profile_instrument_target>:
     578:	sub	sp, sp, #0x80
     57c:	stp	x29, x30, [sp, #112]
     580:	add	x29, sp, #0x70
     584:	str	x0, [sp, #16]
     588:	str	x1, [sp, #8]
     58c:	str	w2, [sp, #4]
     590:	ldr	x8, [sp, #16]
     594:	ldr	x9, [sp, #8]
     598:	ldr	w10, [sp, #4]
     59c:	stur	x8, [x29, #-8]
     5a0:	stur	x9, [x29, #-16]
     5a4:	stur	w10, [x29, #-20]
     5a8:	mov	w10, #0x1                   	// #1
     5ac:	mov	w8, w10
     5b0:	stur	x8, [x29, #-32]
     5b4:	ldur	x8, [x29, #-16]
     5b8:	stur	x8, [x29, #-40]
     5bc:	ldur	x8, [x29, #-40]
     5c0:	cbnz	x8, 5cc <__llvm_profile_instrument_target+0x54>
     5c4:	b	5c8 <__llvm_profile_instrument_target+0x50>
     5c8:	b	85c <__llvm_profile_instrument_target+0x2e4>
     5cc:	ldur	x8, [x29, #-32]
     5d0:	cbnz	x8, 5dc <__llvm_profile_instrument_target+0x64>
     5d4:	b	5d8 <__llvm_profile_instrument_target+0x60>
     5d8:	b	85c <__llvm_profile_instrument_target+0x2e4>
     5dc:	ldur	x8, [x29, #-40]
     5e0:	ldr	x8, [x8, #32]
     5e4:	cbnz	x8, 604 <__llvm_profile_instrument_target+0x8c>
     5e8:	b	5ec <__llvm_profile_instrument_target+0x74>
     5ec:	ldur	x0, [x29, #-40]
     5f0:	bl	bfc <allocateValueProfileCounters>
     5f4:	cbnz	w0, 600 <__llvm_profile_instrument_target+0x88>
     5f8:	b	5fc <__llvm_profile_instrument_target+0x84>
     5fc:	b	85c <__llvm_profile_instrument_target+0x2e4>
     600:	b	604 <__llvm_profile_instrument_target+0x8c>
     604:	ldur	x8, [x29, #-40]
     608:	ldr	x8, [x8, #32]
     60c:	stur	x8, [x29, #-48]
     610:	mov	x8, xzr
     614:	str	x8, [sp, #56]
     618:	str	x8, [sp, #48]
     61c:	ldur	x8, [x29, #-48]
     620:	ldur	w9, [x29, #-20]
     624:	mov	w10, w9
     628:	ldr	x8, [x8, x10, lsl #3]
     62c:	str	x8, [sp, #40]
     630:	mov	x8, #0xffffffffffffffff    	// #-1
     634:	str	x8, [sp, #32]
     638:	mov	w9, wzr
     63c:	strb	w9, [sp, #28]
     640:	b	644 <__llvm_profile_instrument_target+0xcc>
     644:	ldr	x8, [sp, #40]
     648:	cbz	x8, 6d4 <__llvm_profile_instrument_target+0x15c>
     64c:	b	650 <__llvm_profile_instrument_target+0xd8>
     650:	ldur	x8, [x29, #-8]
     654:	ldr	x9, [sp, #40]
     658:	ldr	x9, [x9]
     65c:	subs	x8, x8, x9
     660:	b.ne	680 <__llvm_profile_instrument_target+0x108>  // b.any
     664:	b	668 <__llvm_profile_instrument_target+0xf0>
     668:	ldur	x8, [x29, #-32]
     66c:	ldr	x9, [sp, #40]
     670:	ldr	x10, [x9, #8]
     674:	add	x8, x10, x8
     678:	str	x8, [x9, #8]
     67c:	b	85c <__llvm_profile_instrument_target+0x2e4>
     680:	ldr	x8, [sp, #40]
     684:	ldr	x8, [x8, #8]
     688:	ldr	x9, [sp, #32]
     68c:	subs	x8, x8, x9
     690:	b.cs	6b0 <__llvm_profile_instrument_target+0x138>  // b.hs, b.nlast
     694:	b	698 <__llvm_profile_instrument_target+0x120>
     698:	ldr	x8, [sp, #40]
     69c:	ldr	x8, [x8, #8]
     6a0:	str	x8, [sp, #32]
     6a4:	ldr	x8, [sp, #40]
     6a8:	str	x8, [sp, #48]
     6ac:	b	6b0 <__llvm_profile_instrument_target+0x138>
     6b0:	ldr	x8, [sp, #40]
     6b4:	str	x8, [sp, #56]
     6b8:	ldr	x8, [sp, #40]
     6bc:	ldr	x8, [x8, #16]
     6c0:	str	x8, [sp, #40]
     6c4:	ldrb	w9, [sp, #28]
     6c8:	add	w9, w9, #0x1
     6cc:	strb	w9, [sp, #28]
     6d0:	b	644 <__llvm_profile_instrument_target+0xcc>
     6d4:	ldrb	w8, [sp, #28]
     6d8:	adrp	x9, 0 <getValueProfRecordHeaderSize>
     6dc:	ldr	w10, [x9]
     6e0:	subs	w8, w8, w10
     6e4:	b.cc	744 <__llvm_profile_instrument_target+0x1cc>  // b.lo, b.ul, b.last
     6e8:	b	6ec <__llvm_profile_instrument_target+0x174>
     6ec:	ldr	x8, [sp, #48]
     6f0:	ldr	x8, [x8, #8]
     6f4:	ldur	x9, [x29, #-32]
     6f8:	subs	x8, x8, x9
     6fc:	b.hi	728 <__llvm_profile_instrument_target+0x1b0>  // b.pmore
     700:	b	704 <__llvm_profile_instrument_target+0x18c>
     704:	ldr	x8, [sp, #48]
     708:	str	x8, [sp, #40]
     70c:	ldur	x8, [x29, #-8]
     710:	ldr	x9, [sp, #40]
     714:	str	x8, [x9]
     718:	ldur	x8, [x29, #-32]
     71c:	ldr	x9, [sp, #40]
     720:	str	x8, [x9, #8]
     724:	b	740 <__llvm_profile_instrument_target+0x1c8>
     728:	ldur	x8, [x29, #-32]
     72c:	ldr	x9, [sp, #48]
     730:	ldr	x10, [x9, #8]
     734:	subs	x8, x10, x8
     738:	str	x8, [x9, #8]
     73c:	b	740 <__llvm_profile_instrument_target+0x1c8>
     740:	b	85c <__llvm_profile_instrument_target+0x2e4>
     744:	bl	d28 <allocateOneNode>
     748:	str	x0, [sp, #40]
     74c:	ldr	x8, [sp, #40]
     750:	cbnz	x8, 75c <__llvm_profile_instrument_target+0x1e4>
     754:	b	758 <__llvm_profile_instrument_target+0x1e0>
     758:	b	85c <__llvm_profile_instrument_target+0x2e4>
     75c:	ldur	x8, [x29, #-8]
     760:	ldr	x9, [sp, #40]
     764:	str	x8, [x9]
     768:	ldur	x8, [x29, #-32]
     76c:	ldr	x9, [sp, #40]
     770:	ldr	x10, [x9, #8]
     774:	add	x8, x10, x8
     778:	str	x8, [x9, #8]
     77c:	mov	w11, wzr
     780:	str	w11, [sp, #24]
     784:	ldur	x8, [x29, #-48]
     788:	ldur	w11, [x29, #-20]
     78c:	mov	w9, w11
     790:	ldr	x8, [x8, x9, lsl #3]
     794:	cbnz	x8, 7dc <__llvm_profile_instrument_target+0x264>
     798:	b	79c <__llvm_profile_instrument_target+0x224>
     79c:	ldur	x8, [x29, #-48]
     7a0:	ldur	w9, [x29, #-20]
     7a4:	mov	w10, w9
     7a8:	add	x8, x8, x10, lsl #3
     7ac:	ldr	x10, [sp, #40]
     7b0:	mov	x11, xzr
     7b4:	mov	w9, #0x0                   	// #0
     7b8:	ldaxr	x12, [x8]
     7bc:	cmp	x12, x11
     7c0:	b.ne	7cc <__llvm_profile_instrument_target+0x254>  // b.any
     7c4:	stlxr	w9, x10, [x8]
     7c8:	cbnz	w9, 7b4 <__llvm_profile_instrument_target+0x23c>
     7cc:	subs	x8, x12, #0x0
     7d0:	cset	w13, eq  // eq = none
     7d4:	str	w13, [sp, #24]
     7d8:	b	834 <__llvm_profile_instrument_target+0x2bc>
     7dc:	ldr	x8, [sp, #56]
     7e0:	cbz	x8, 830 <__llvm_profile_instrument_target+0x2b8>
     7e4:	b	7e8 <__llvm_profile_instrument_target+0x270>
     7e8:	ldr	x8, [sp, #56]
     7ec:	ldr	x8, [x8, #16]
     7f0:	cbnz	x8, 830 <__llvm_profile_instrument_target+0x2b8>
     7f4:	b	7f8 <__llvm_profile_instrument_target+0x280>
     7f8:	ldr	x8, [sp, #56]
     7fc:	add	x8, x8, #0x10
     800:	ldr	x9, [sp, #40]
     804:	mov	x10, xzr
     808:	mov	w12, #0x0                   	// #0
     80c:	ldaxr	x11, [x8]
     810:	cmp	x11, x10
     814:	b.ne	820 <__llvm_profile_instrument_target+0x2a8>  // b.any
     818:	stlxr	w12, x9, [x8]
     81c:	cbnz	w12, 808 <__llvm_profile_instrument_target+0x290>
     820:	subs	x8, x11, #0x0
     824:	cset	w13, eq  // eq = none
     828:	str	w13, [sp, #24]
     82c:	b	830 <__llvm_profile_instrument_target+0x2b8>
     830:	b	834 <__llvm_profile_instrument_target+0x2bc>
     834:	ldr	w8, [sp, #24]
     838:	cbnz	w8, 85c <__llvm_profile_instrument_target+0x2e4>
     83c:	b	840 <__llvm_profile_instrument_target+0x2c8>
     840:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     844:	ldr	w9, [x8]
     848:	cbnz	w9, 85c <__llvm_profile_instrument_target+0x2e4>
     84c:	b	850 <__llvm_profile_instrument_target+0x2d8>
     850:	ldr	x0, [sp, #40]
     854:	bl	0 <free>
     858:	b	85c <__llvm_profile_instrument_target+0x2e4>
     85c:	ldp	x29, x30, [sp, #112]
     860:	add	sp, sp, #0x80
     864:	ret

0000000000000868 <__llvm_profile_instrument_target_value>:
     868:	sub	sp, sp, #0x90
     86c:	stp	x29, x30, [sp, #128]
     870:	add	x29, sp, #0x80
     874:	str	x0, [sp, #32]
     878:	str	x1, [sp, #24]
     87c:	str	w2, [sp, #20]
     880:	str	x3, [sp, #8]
     884:	ldr	x8, [sp, #32]
     888:	ldr	x9, [sp, #24]
     88c:	ldr	w10, [sp, #20]
     890:	ldr	x11, [sp, #8]
     894:	stur	x8, [x29, #-8]
     898:	stur	x9, [x29, #-16]
     89c:	stur	w10, [x29, #-20]
     8a0:	stur	x11, [x29, #-32]
     8a4:	ldur	x8, [x29, #-16]
     8a8:	stur	x8, [x29, #-40]
     8ac:	ldur	x8, [x29, #-40]
     8b0:	cbnz	x8, 8bc <__llvm_profile_instrument_target_value+0x54>
     8b4:	b	8b8 <__llvm_profile_instrument_target_value+0x50>
     8b8:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     8bc:	ldur	x8, [x29, #-32]
     8c0:	cbnz	x8, 8cc <__llvm_profile_instrument_target_value+0x64>
     8c4:	b	8c8 <__llvm_profile_instrument_target_value+0x60>
     8c8:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     8cc:	ldur	x8, [x29, #-40]
     8d0:	ldr	x8, [x8, #32]
     8d4:	cbnz	x8, 8f4 <__llvm_profile_instrument_target_value+0x8c>
     8d8:	b	8dc <__llvm_profile_instrument_target_value+0x74>
     8dc:	ldur	x0, [x29, #-40]
     8e0:	bl	bfc <allocateValueProfileCounters>
     8e4:	cbnz	w0, 8f0 <__llvm_profile_instrument_target_value+0x88>
     8e8:	b	8ec <__llvm_profile_instrument_target_value+0x84>
     8ec:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     8f0:	b	8f4 <__llvm_profile_instrument_target_value+0x8c>
     8f4:	ldur	x8, [x29, #-40]
     8f8:	ldr	x8, [x8, #32]
     8fc:	stur	x8, [x29, #-48]
     900:	mov	x8, xzr
     904:	stur	x8, [x29, #-56]
     908:	str	x8, [sp, #64]
     90c:	ldur	x8, [x29, #-48]
     910:	ldur	w9, [x29, #-20]
     914:	mov	w10, w9
     918:	ldr	x8, [x8, x10, lsl #3]
     91c:	str	x8, [sp, #56]
     920:	mov	x8, #0xffffffffffffffff    	// #-1
     924:	str	x8, [sp, #48]
     928:	mov	w9, wzr
     92c:	strb	w9, [sp, #44]
     930:	b	934 <__llvm_profile_instrument_target_value+0xcc>
     934:	ldr	x8, [sp, #56]
     938:	cbz	x8, 9c4 <__llvm_profile_instrument_target_value+0x15c>
     93c:	b	940 <__llvm_profile_instrument_target_value+0xd8>
     940:	ldur	x8, [x29, #-8]
     944:	ldr	x9, [sp, #56]
     948:	ldr	x9, [x9]
     94c:	subs	x8, x8, x9
     950:	b.ne	970 <__llvm_profile_instrument_target_value+0x108>  // b.any
     954:	b	958 <__llvm_profile_instrument_target_value+0xf0>
     958:	ldur	x8, [x29, #-32]
     95c:	ldr	x9, [sp, #56]
     960:	ldr	x10, [x9, #8]
     964:	add	x8, x10, x8
     968:	str	x8, [x9, #8]
     96c:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     970:	ldr	x8, [sp, #56]
     974:	ldr	x8, [x8, #8]
     978:	ldr	x9, [sp, #48]
     97c:	subs	x8, x8, x9
     980:	b.cs	9a0 <__llvm_profile_instrument_target_value+0x138>  // b.hs, b.nlast
     984:	b	988 <__llvm_profile_instrument_target_value+0x120>
     988:	ldr	x8, [sp, #56]
     98c:	ldr	x8, [x8, #8]
     990:	str	x8, [sp, #48]
     994:	ldr	x8, [sp, #56]
     998:	str	x8, [sp, #64]
     99c:	b	9a0 <__llvm_profile_instrument_target_value+0x138>
     9a0:	ldr	x8, [sp, #56]
     9a4:	stur	x8, [x29, #-56]
     9a8:	ldr	x8, [sp, #56]
     9ac:	ldr	x8, [x8, #16]
     9b0:	str	x8, [sp, #56]
     9b4:	ldrb	w9, [sp, #44]
     9b8:	add	w9, w9, #0x1
     9bc:	strb	w9, [sp, #44]
     9c0:	b	934 <__llvm_profile_instrument_target_value+0xcc>
     9c4:	ldrb	w8, [sp, #44]
     9c8:	adrp	x9, 0 <getValueProfRecordHeaderSize>
     9cc:	ldr	w10, [x9]
     9d0:	subs	w8, w8, w10
     9d4:	b.cc	a34 <__llvm_profile_instrument_target_value+0x1cc>  // b.lo, b.ul, b.last
     9d8:	b	9dc <__llvm_profile_instrument_target_value+0x174>
     9dc:	ldr	x8, [sp, #64]
     9e0:	ldr	x8, [x8, #8]
     9e4:	ldur	x9, [x29, #-32]
     9e8:	subs	x8, x8, x9
     9ec:	b.hi	a18 <__llvm_profile_instrument_target_value+0x1b0>  // b.pmore
     9f0:	b	9f4 <__llvm_profile_instrument_target_value+0x18c>
     9f4:	ldr	x8, [sp, #64]
     9f8:	str	x8, [sp, #56]
     9fc:	ldur	x8, [x29, #-8]
     a00:	ldr	x9, [sp, #56]
     a04:	str	x8, [x9]
     a08:	ldur	x8, [x29, #-32]
     a0c:	ldr	x9, [sp, #56]
     a10:	str	x8, [x9, #8]
     a14:	b	a30 <__llvm_profile_instrument_target_value+0x1c8>
     a18:	ldur	x8, [x29, #-32]
     a1c:	ldr	x9, [sp, #64]
     a20:	ldr	x10, [x9, #8]
     a24:	subs	x8, x10, x8
     a28:	str	x8, [x9, #8]
     a2c:	b	a30 <__llvm_profile_instrument_target_value+0x1c8>
     a30:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     a34:	bl	d28 <allocateOneNode>
     a38:	str	x0, [sp, #56]
     a3c:	ldr	x8, [sp, #56]
     a40:	cbnz	x8, a4c <__llvm_profile_instrument_target_value+0x1e4>
     a44:	b	a48 <__llvm_profile_instrument_target_value+0x1e0>
     a48:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     a4c:	ldur	x8, [x29, #-8]
     a50:	ldr	x9, [sp, #56]
     a54:	str	x8, [x9]
     a58:	ldur	x8, [x29, #-32]
     a5c:	ldr	x9, [sp, #56]
     a60:	ldr	x10, [x9, #8]
     a64:	add	x8, x10, x8
     a68:	str	x8, [x9, #8]
     a6c:	mov	w11, wzr
     a70:	str	w11, [sp, #40]
     a74:	ldur	x8, [x29, #-48]
     a78:	ldur	w11, [x29, #-20]
     a7c:	mov	w9, w11
     a80:	ldr	x8, [x8, x9, lsl #3]
     a84:	cbnz	x8, acc <__llvm_profile_instrument_target_value+0x264>
     a88:	b	a8c <__llvm_profile_instrument_target_value+0x224>
     a8c:	ldur	x8, [x29, #-48]
     a90:	ldur	w9, [x29, #-20]
     a94:	mov	w10, w9
     a98:	add	x8, x8, x10, lsl #3
     a9c:	ldr	x10, [sp, #56]
     aa0:	mov	x11, xzr
     aa4:	mov	w9, #0x0                   	// #0
     aa8:	ldaxr	x12, [x8]
     aac:	cmp	x12, x11
     ab0:	b.ne	abc <__llvm_profile_instrument_target_value+0x254>  // b.any
     ab4:	stlxr	w9, x10, [x8]
     ab8:	cbnz	w9, aa4 <__llvm_profile_instrument_target_value+0x23c>
     abc:	subs	x8, x12, #0x0
     ac0:	cset	w13, eq  // eq = none
     ac4:	str	w13, [sp, #40]
     ac8:	b	b24 <__llvm_profile_instrument_target_value+0x2bc>
     acc:	ldur	x8, [x29, #-56]
     ad0:	cbz	x8, b20 <__llvm_profile_instrument_target_value+0x2b8>
     ad4:	b	ad8 <__llvm_profile_instrument_target_value+0x270>
     ad8:	ldur	x8, [x29, #-56]
     adc:	ldr	x8, [x8, #16]
     ae0:	cbnz	x8, b20 <__llvm_profile_instrument_target_value+0x2b8>
     ae4:	b	ae8 <__llvm_profile_instrument_target_value+0x280>
     ae8:	ldur	x8, [x29, #-56]
     aec:	add	x8, x8, #0x10
     af0:	ldr	x9, [sp, #56]
     af4:	mov	x10, xzr
     af8:	mov	w12, #0x0                   	// #0
     afc:	ldaxr	x11, [x8]
     b00:	cmp	x11, x10
     b04:	b.ne	b10 <__llvm_profile_instrument_target_value+0x2a8>  // b.any
     b08:	stlxr	w12, x9, [x8]
     b0c:	cbnz	w12, af8 <__llvm_profile_instrument_target_value+0x290>
     b10:	subs	x8, x11, #0x0
     b14:	cset	w13, eq  // eq = none
     b18:	str	w13, [sp, #40]
     b1c:	b	b20 <__llvm_profile_instrument_target_value+0x2b8>
     b20:	b	b24 <__llvm_profile_instrument_target_value+0x2bc>
     b24:	ldr	w8, [sp, #40]
     b28:	cbnz	w8, b4c <__llvm_profile_instrument_target_value+0x2e4>
     b2c:	b	b30 <__llvm_profile_instrument_target_value+0x2c8>
     b30:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     b34:	ldr	w9, [x8]
     b38:	cbnz	w9, b4c <__llvm_profile_instrument_target_value+0x2e4>
     b3c:	b	b40 <__llvm_profile_instrument_target_value+0x2d8>
     b40:	ldr	x0, [sp, #56]
     b44:	bl	0 <free>
     b48:	b	b4c <__llvm_profile_instrument_target_value+0x2e4>
     b4c:	ldp	x29, x30, [sp, #128]
     b50:	add	sp, sp, #0x90
     b54:	ret

0000000000000b58 <__llvm_profile_instrument_range>:
     b58:	sub	sp, sp, #0x40
     b5c:	stp	x29, x30, [sp, #48]
     b60:	add	x29, sp, #0x30
     b64:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
     b68:	stur	x0, [x29, #-8]
     b6c:	stur	x1, [x29, #-16]
     b70:	stur	w2, [x29, #-20]
     b74:	str	x3, [sp, #16]
     b78:	str	x4, [sp, #8]
     b7c:	str	x5, [sp]
     b80:	ldr	x9, [sp]
     b84:	cmp	x9, x8
     b88:	b.eq	ba8 <__llvm_profile_instrument_range+0x50>  // b.none
     b8c:	ldur	x8, [x29, #-8]
     b90:	ldr	x9, [sp]
     b94:	cmp	x8, x9
     b98:	b.lt	ba8 <__llvm_profile_instrument_range+0x50>  // b.tstop
     b9c:	ldr	x8, [sp]
     ba0:	stur	x8, [x29, #-8]
     ba4:	b	bd4 <__llvm_profile_instrument_range+0x7c>
     ba8:	ldur	x8, [x29, #-8]
     bac:	ldr	x9, [sp, #16]
     bb0:	cmp	x8, x9
     bb4:	b.lt	bc8 <__llvm_profile_instrument_range+0x70>  // b.tstop
     bb8:	ldur	x8, [x29, #-8]
     bbc:	ldr	x9, [sp, #8]
     bc0:	cmp	x8, x9
     bc4:	b.le	bd4 <__llvm_profile_instrument_range+0x7c>
     bc8:	ldr	x8, [sp, #8]
     bcc:	add	x8, x8, #0x1
     bd0:	stur	x8, [x29, #-8]
     bd4:	ldur	x0, [x29, #-8]
     bd8:	ldur	x1, [x29, #-16]
     bdc:	ldur	w2, [x29, #-20]
     be0:	bl	578 <__llvm_profile_instrument_target>
     be4:	ldp	x29, x30, [sp, #48]
     be8:	add	sp, sp, #0x40
     bec:	ret

0000000000000bf0 <lprofGetVPDataReader>:
     bf0:	adrp	x0, 0 <getValueProfRecordHeaderSize>
     bf4:	add	x0, x0, #0x0
     bf8:	ret

0000000000000bfc <allocateValueProfileCounters>:
     bfc:	sub	sp, sp, #0x40
     c00:	stp	x29, x30, [sp, #48]
     c04:	add	x29, sp, #0x30
     c08:	stur	x0, [x29, #-16]
     c0c:	mov	x8, xzr
     c10:	str	x8, [sp, #24]
     c14:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     c18:	mov	w9, wzr
     c1c:	str	w9, [x8]
     c20:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     c24:	ldr	w9, [x8]
     c28:	cbnz	w9, c40 <allocateValueProfileCounters+0x44>
     c2c:	b	c30 <allocateValueProfileCounters+0x34>
     c30:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     c34:	mov	w9, #0xff                  	// #255
     c38:	str	w9, [x8]
     c3c:	b	c40 <allocateValueProfileCounters+0x44>
     c40:	mov	w8, wzr
     c44:	str	w8, [sp, #20]
     c48:	b	c4c <allocateValueProfileCounters+0x50>
     c4c:	ldr	w8, [sp, #20]
     c50:	subs	w8, w8, #0x1
     c54:	b.hi	c94 <allocateValueProfileCounters+0x98>  // b.pmore
     c58:	b	c5c <allocateValueProfileCounters+0x60>
     c5c:	ldur	x8, [x29, #-16]
     c60:	ldr	w9, [sp, #20]
     c64:	mov	w10, w9
     c68:	add	x8, x8, x10, lsl #1
     c6c:	ldrh	w9, [x8, #44]
     c70:	mov	w8, w9
     c74:	ldr	x10, [sp, #24]
     c78:	add	x8, x10, x8
     c7c:	str	x8, [sp, #24]
     c80:	b	c84 <allocateValueProfileCounters+0x88>
     c84:	ldr	w8, [sp, #20]
     c88:	add	w8, w8, #0x1
     c8c:	str	w8, [sp, #20]
     c90:	b	c4c <allocateValueProfileCounters+0x50>
     c94:	ldr	x0, [sp, #24]
     c98:	mov	w8, #0x8                   	// #8
     c9c:	mov	w1, w8
     ca0:	bl	0 <calloc>
     ca4:	str	x0, [sp, #8]
     ca8:	ldr	x9, [sp, #8]
     cac:	cbnz	x9, cc0 <allocateValueProfileCounters+0xc4>
     cb0:	b	cb4 <allocateValueProfileCounters+0xb8>
     cb4:	mov	w8, wzr
     cb8:	stur	w8, [x29, #-4]
     cbc:	b	d18 <allocateValueProfileCounters+0x11c>
     cc0:	ldur	x8, [x29, #-16]
     cc4:	add	x8, x8, #0x20
     cc8:	ldr	x9, [sp, #8]
     ccc:	mov	x10, xzr
     cd0:	mov	w12, #0x0                   	// #0
     cd4:	ldaxr	x11, [x8]
     cd8:	cmp	x11, x10
     cdc:	b.ne	ce8 <allocateValueProfileCounters+0xec>  // b.any
     ce0:	stlxr	w12, x9, [x8]
     ce4:	cbnz	w12, cd0 <allocateValueProfileCounters+0xd4>
     ce8:	subs	x8, x11, #0x0
     cec:	cset	w13, eq  // eq = none
     cf0:	tbnz	w13, #0, d0c <allocateValueProfileCounters+0x110>
     cf4:	b	cf8 <allocateValueProfileCounters+0xfc>
     cf8:	ldr	x0, [sp, #8]
     cfc:	bl	0 <free>
     d00:	mov	w8, wzr
     d04:	stur	w8, [x29, #-4]
     d08:	b	d18 <allocateValueProfileCounters+0x11c>
     d0c:	mov	w8, #0x1                   	// #1
     d10:	stur	w8, [x29, #-4]
     d14:	b	d18 <allocateValueProfileCounters+0x11c>
     d18:	ldur	w0, [x29, #-4]
     d1c:	ldp	x29, x30, [sp, #48]
     d20:	add	sp, sp, #0x40
     d24:	ret

0000000000000d28 <allocateOneNode>:
     d28:	sub	sp, sp, #0x30
     d2c:	stp	x29, x30, [sp, #32]
     d30:	add	x29, sp, #0x20
     d34:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     d38:	add	x8, x8, #0x0
     d3c:	adrp	x9, 0 <CurrentVNode>
     d40:	add	x9, x9, #0x0
     d44:	ldr	w10, [x8]
     d48:	str	x9, [sp, #8]
     d4c:	cbnz	w10, d64 <allocateOneNode+0x3c>
     d50:	mov	x0, #0x1                   	// #1
     d54:	mov	x1, #0x18                  	// #24
     d58:	bl	0 <calloc>
     d5c:	stur	x0, [x29, #-8]
     d60:	b	e1c <allocateOneNode+0xf4>
     d64:	ldr	x8, [sp, #8]
     d68:	ldr	x9, [x8]
     d6c:	add	x9, x9, #0x18
     d70:	adrp	x10, 0 <EndVNode>
     d74:	add	x10, x10, #0x0
     d78:	ldr	x10, [x10]
     d7c:	cmp	x9, x10
     d80:	b.ls	dcc <allocateOneNode+0xa4>  // b.plast
     d84:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     d88:	add	x8, x8, #0x0
     d8c:	ldr	w9, [x8]
     d90:	add	w10, w9, #0x1
     d94:	str	w10, [x8]
     d98:	cmp	w9, #0xa
     d9c:	b.ge	dc0 <allocateOneNode+0x98>  // b.tcont
     da0:	adrp	x8, 0 <stderr>
     da4:	ldr	x8, [x8]
     da8:	ldr	x0, [x8]
     dac:	adrp	x1, 0 <getValueProfRecordHeaderSize>
     db0:	add	x1, x1, #0x0
     db4:	adrp	x2, 0 <getValueProfRecordHeaderSize>
     db8:	add	x2, x2, #0x0
     dbc:	bl	0 <fprintf>
     dc0:	mov	x8, xzr
     dc4:	stur	x8, [x29, #-8]
     dc8:	b	e1c <allocateOneNode+0xf4>
     dcc:	ldr	x8, [sp, #8]
     dd0:	ldaxr	x9, [x8]
     dd4:	add	x10, x9, #0x18
     dd8:	stlxr	w11, x10, [x8]
     ddc:	str	x9, [sp]
     de0:	cbnz	w11, dcc <allocateOneNode+0xa4>
     de4:	ldr	x8, [sp]
     de8:	str	x8, [sp, #16]
     dec:	ldr	x8, [sp, #16]
     df0:	add	x8, x8, #0x18
     df4:	adrp	x9, 0 <EndVNode>
     df8:	add	x9, x9, #0x0
     dfc:	ldr	x9, [x9]
     e00:	cmp	x8, x9
     e04:	b.ls	e14 <allocateOneNode+0xec>  // b.plast
     e08:	mov	x8, xzr
     e0c:	stur	x8, [x29, #-8]
     e10:	b	e1c <allocateOneNode+0xf4>
     e14:	ldr	x8, [sp, #16]
     e18:	stur	x8, [x29, #-8]
     e1c:	ldur	x0, [x29, #-8]
     e20:	ldp	x29, x30, [sp, #32]
     e24:	add	sp, sp, #0x30
     e28:	ret

0000000000000e2c <initializeValueProfRuntimeRecord>:
     e2c:	sub	sp, sp, #0x60
     e30:	adrp	x8, 0 <getValueProfRecordHeaderSize>
     e34:	add	x8, x8, #0x0
     e38:	add	x9, x8, #0x8
     e3c:	str	x0, [sp, #88]
     e40:	str	x1, [sp, #80]
     e44:	str	wzr, [sp, #68]
     e48:	str	wzr, [sp, #64]
     e4c:	ldr	x10, [sp, #88]
     e50:	ldr	x10, [x10, #32]
     e54:	str	x10, [sp, #56]
     e58:	ldr	x10, [sp, #88]
     e5c:	str	x10, [x8]
     e60:	ldr	x10, [sp, #80]
     e64:	str	x10, [x8, #24]
     e68:	str	wzr, [sp, #76]
     e6c:	str	x8, [sp, #32]
     e70:	str	x9, [sp, #24]
     e74:	ldr	w8, [sp, #76]
     e78:	cmp	w8, #0x1
     e7c:	b.hi	1010 <initializeValueProfRuntimeRecord+0x1e4>  // b.pmore
     e80:	ldr	x8, [sp, #88]
     e84:	add	x8, x8, #0x2c
     e88:	ldr	w9, [sp, #76]
     e8c:	mov	w10, w9
     e90:	mov	x11, #0x2                   	// #2
     e94:	mul	x10, x11, x10
     e98:	add	x8, x8, x10
     e9c:	ldrh	w9, [x8]
     ea0:	strh	w9, [sp, #54]
     ea4:	ldrh	w9, [sp, #54]
     ea8:	cbnz	w9, eb0 <initializeValueProfRuntimeRecord+0x84>
     eac:	b	1000 <initializeValueProfRuntimeRecord+0x1d4>
     eb0:	ldr	w8, [sp, #64]
     eb4:	add	w8, w8, #0x1
     eb8:	str	w8, [sp, #64]
     ebc:	ldr	x9, [sp, #56]
     ec0:	cbz	x9, ee4 <initializeValueProfRuntimeRecord+0xb8>
     ec4:	ldr	x8, [sp, #56]
     ec8:	ldr	w9, [sp, #68]
     ecc:	mov	w10, w9
     ed0:	mov	x11, #0x8                   	// #8
     ed4:	mul	x10, x11, x10
     ed8:	add	x8, x8, x10
     edc:	str	x8, [sp, #16]
     ee0:	b	eec <initializeValueProfRuntimeRecord+0xc0>
     ee4:	mov	x8, xzr
     ee8:	str	x8, [sp, #16]
     eec:	ldr	x8, [sp, #16]
     ef0:	ldr	w9, [sp, #76]
     ef4:	mov	w10, w9
     ef8:	mov	x11, #0x8                   	// #8
     efc:	mul	x10, x11, x10
     f00:	ldr	x11, [sp, #24]
     f04:	add	x10, x11, x10
     f08:	str	x8, [x10]
     f0c:	str	wzr, [sp, #72]
     f10:	ldr	w8, [sp, #72]
     f14:	ldrh	w9, [sp, #54]
     f18:	cmp	w8, w9
     f1c:	b.cs	ff0 <initializeValueProfRuntimeRecord+0x1c4>  // b.hs, b.nlast
     f20:	str	wzr, [sp, #48]
     f24:	ldr	x8, [sp, #56]
     f28:	cbz	x8, f64 <initializeValueProfRuntimeRecord+0x138>
     f2c:	ldr	w8, [sp, #76]
     f30:	mov	w9, w8
     f34:	mov	x10, #0x8                   	// #8
     f38:	mul	x9, x10, x9
     f3c:	ldr	x11, [sp, #24]
     f40:	add	x9, x11, x9
     f44:	ldr	x9, [x9]
     f48:	ldr	w8, [sp, #72]
     f4c:	mov	w12, w8
     f50:	mul	x10, x10, x12
     f54:	add	x9, x9, x10
     f58:	ldr	x9, [x9]
     f5c:	str	x9, [sp, #8]
     f60:	b	f6c <initializeValueProfRuntimeRecord+0x140>
     f64:	mov	x8, xzr
     f68:	str	x8, [sp, #8]
     f6c:	ldr	x8, [sp, #8]
     f70:	str	x8, [sp, #40]
     f74:	ldr	x8, [sp, #40]
     f78:	cbz	x8, f98 <initializeValueProfRuntimeRecord+0x16c>
     f7c:	ldr	w8, [sp, #48]
     f80:	add	w8, w8, #0x1
     f84:	str	w8, [sp, #48]
     f88:	ldr	x9, [sp, #40]
     f8c:	ldr	x9, [x9, #16]
     f90:	str	x9, [sp, #40]
     f94:	b	f74 <initializeValueProfRuntimeRecord+0x148>
     f98:	ldr	w8, [sp, #48]
     f9c:	cmp	w8, #0xff
     fa0:	b.ls	fac <initializeValueProfRuntimeRecord+0x180>  // b.plast
     fa4:	mov	w8, #0xff                  	// #255
     fa8:	str	w8, [sp, #48]
     fac:	ldr	w8, [sp, #48]
     fb0:	ldr	x9, [sp, #32]
     fb4:	ldr	x10, [x9, #24]
     fb8:	ldr	w11, [sp, #76]
     fbc:	mov	w12, w11
     fc0:	mov	x13, #0x8                   	// #8
     fc4:	mul	x12, x13, x12
     fc8:	add	x10, x10, x12
     fcc:	ldr	x10, [x10]
     fd0:	ldr	w11, [sp, #72]
     fd4:	mov	w12, w11
     fd8:	add	x10, x10, x12
     fdc:	strb	w8, [x10]
     fe0:	ldr	w8, [sp, #72]
     fe4:	add	w8, w8, #0x1
     fe8:	str	w8, [sp, #72]
     fec:	b	f10 <initializeValueProfRuntimeRecord+0xe4>
     ff0:	ldrh	w8, [sp, #54]
     ff4:	ldr	w9, [sp, #68]
     ff8:	add	w8, w9, w8
     ffc:	str	w8, [sp, #68]
    1000:	ldr	w8, [sp, #76]
    1004:	add	w8, w8, #0x1
    1008:	str	w8, [sp, #76]
    100c:	b	e74 <initializeValueProfRuntimeRecord+0x48>
    1010:	ldr	w0, [sp, #64]
    1014:	add	sp, sp, #0x60
    1018:	ret

000000000000101c <getNumValueDataForSiteWrapper>:
    101c:	sub	sp, sp, #0x20
    1020:	stp	x29, x30, [sp, #16]
    1024:	add	x29, sp, #0x10
    1028:	adrp	x8, 0 <getValueProfRecordHeaderSize>
    102c:	add	x8, x8, #0x0
    1030:	stur	w0, [x29, #-4]
    1034:	str	w1, [sp, #8]
    1038:	ldur	w1, [x29, #-4]
    103c:	ldr	w2, [sp, #8]
    1040:	mov	x0, x8
    1044:	bl	1164 <getNumValueDataForSiteRT>
    1048:	ldp	x29, x30, [sp, #16]
    104c:	add	sp, sp, #0x20
    1050:	ret

0000000000001054 <getValueProfDataSizeWrapper>:
    1054:	stp	x29, x30, [sp, #-16]!
    1058:	mov	x29, sp
    105c:	adrp	x0, 0 <getValueProfRecordHeaderSize>
    1060:	add	x0, x0, #0x0
    1064:	bl	18c <getValueProfDataSize>
    1068:	ldp	x29, x30, [sp], #16
    106c:	ret

0000000000001070 <getNextNValueData>:
    1070:	sub	sp, sp, #0x40
    1074:	adrp	x8, 0 <getValueProfRecordHeaderSize>
    1078:	add	x8, x8, #0x0
    107c:	add	x8, x8, #0x8
    1080:	str	w0, [sp, #60]
    1084:	str	w1, [sp, #56]
    1088:	str	x2, [sp, #48]
    108c:	str	x3, [sp, #40]
    1090:	str	w4, [sp, #36]
    1094:	ldr	x9, [sp, #40]
    1098:	str	x8, [sp, #16]
    109c:	cbz	x9, 10ac <getNextNValueData+0x3c>
    10a0:	ldr	x8, [sp, #40]
    10a4:	str	x8, [sp, #8]
    10a8:	b	10e0 <getNextNValueData+0x70>
    10ac:	ldr	w8, [sp, #60]
    10b0:	mov	w9, w8
    10b4:	mov	x10, #0x8                   	// #8
    10b8:	mul	x9, x10, x9
    10bc:	ldr	x11, [sp, #16]
    10c0:	add	x9, x11, x9
    10c4:	ldr	x9, [x9]
    10c8:	ldr	w8, [sp, #56]
    10cc:	mov	w12, w8
    10d0:	mul	x10, x10, x12
    10d4:	add	x9, x9, x10
    10d8:	ldr	x9, [x9]
    10dc:	str	x9, [sp, #8]
    10e0:	ldr	x8, [sp, #8]
    10e4:	str	x8, [sp, #24]
    10e8:	str	wzr, [sp, #32]
    10ec:	ldr	w8, [sp, #32]
    10f0:	ldr	w9, [sp, #36]
    10f4:	cmp	w8, w9
    10f8:	b.cs	1158 <getNextNValueData+0xe8>  // b.hs, b.nlast
    10fc:	ldr	x8, [sp, #24]
    1100:	ldr	x8, [x8]
    1104:	ldr	x9, [sp, #48]
    1108:	ldr	w10, [sp, #32]
    110c:	mov	w11, w10
    1110:	mov	x12, #0x10                  	// #16
    1114:	mul	x11, x12, x11
    1118:	str	x8, [x9, x11]
    111c:	ldr	x8, [sp, #24]
    1120:	ldr	x8, [x8, #8]
    1124:	ldr	x9, [sp, #48]
    1128:	ldr	w10, [sp, #32]
    112c:	mov	w11, w10
    1130:	mul	x11, x12, x11
    1134:	add	x9, x9, x11
    1138:	str	x8, [x9, #8]
    113c:	ldr	x8, [sp, #24]
    1140:	ldr	x8, [x8, #16]
    1144:	str	x8, [sp, #24]
    1148:	ldr	w8, [sp, #32]
    114c:	add	w8, w8, #0x1
    1150:	str	w8, [sp, #32]
    1154:	b	10ec <getNextNValueData+0x7c>
    1158:	ldr	x0, [sp, #24]
    115c:	add	sp, sp, #0x40
    1160:	ret

0000000000001164 <getNumValueDataForSiteRT>:
    1164:	sub	sp, sp, #0x20
    1168:	str	x0, [sp, #24]
    116c:	str	w1, [sp, #20]
    1170:	str	w2, [sp, #16]
    1174:	ldr	x8, [sp, #24]
    1178:	str	x8, [sp, #8]
    117c:	ldr	x8, [sp, #8]
    1180:	ldr	x8, [x8, #24]
    1184:	ldr	w9, [sp, #20]
    1188:	mov	w10, w9
    118c:	mov	x11, #0x8                   	// #8
    1190:	mul	x10, x11, x10
    1194:	add	x8, x8, x10
    1198:	ldr	x8, [x8]
    119c:	ldr	w9, [sp, #16]
    11a0:	mov	w10, w9
    11a4:	ldrb	w0, [x8, x10]
    11a8:	add	sp, sp, #0x20
    11ac:	ret

00000000000011b0 <getNumValueSitesRT>:
    11b0:	sub	sp, sp, #0x10
    11b4:	str	x0, [sp, #8]
    11b8:	str	w1, [sp, #4]
    11bc:	ldr	x8, [sp, #8]
    11c0:	ldr	x8, [x8]
    11c4:	add	x8, x8, #0x2c
    11c8:	ldr	w9, [sp, #4]
    11cc:	mov	w10, w9
    11d0:	ldrh	w0, [x8, x10, lsl #1]
    11d4:	add	sp, sp, #0x10
    11d8:	ret

00000000000011dc <getNumValueDataRT>:
    11dc:	sub	sp, sp, #0x30
    11e0:	str	x0, [sp, #32]
    11e4:	str	w1, [sp, #28]
    11e8:	str	wzr, [sp, #24]
    11ec:	ldr	x8, [sp, #32]
    11f0:	str	x8, [sp, #8]
    11f4:	ldr	x8, [sp, #8]
    11f8:	ldr	x8, [x8, #24]
    11fc:	ldr	w9, [sp, #28]
    1200:	mov	w10, w9
    1204:	mov	x11, #0x8                   	// #8
    1208:	mul	x10, x11, x10
    120c:	add	x8, x8, x10
    1210:	ldr	x8, [x8]
    1214:	cbnz	x8, 1220 <getNumValueDataRT+0x44>
    1218:	str	wzr, [sp, #44]
    121c:	b	1298 <getNumValueDataRT+0xbc>
    1220:	str	wzr, [sp, #20]
    1224:	ldr	w8, [sp, #20]
    1228:	ldr	x9, [sp, #8]
    122c:	ldr	x9, [x9]
    1230:	add	x9, x9, #0x2c
    1234:	ldr	w10, [sp, #28]
    1238:	mov	w11, w10
    123c:	ldrh	w10, [x9, x11, lsl #1]
    1240:	cmp	w8, w10
    1244:	b.cs	1290 <getNumValueDataRT+0xb4>  // b.hs, b.nlast
    1248:	ldr	x8, [sp, #8]
    124c:	ldr	x8, [x8, #24]
    1250:	ldr	w9, [sp, #28]
    1254:	mov	w10, w9
    1258:	mov	x11, #0x8                   	// #8
    125c:	mul	x10, x11, x10
    1260:	add	x8, x8, x10
    1264:	ldr	x8, [x8]
    1268:	ldr	w9, [sp, #20]
    126c:	mov	w10, w9
    1270:	ldrb	w9, [x8, x10]
    1274:	ldr	w12, [sp, #24]
    1278:	add	w9, w12, w9
    127c:	str	w9, [sp, #24]
    1280:	ldr	w8, [sp, #20]
    1284:	add	w8, w8, #0x1
    1288:	str	w8, [sp, #20]
    128c:	b	1224 <getNumValueDataRT+0x48>
    1290:	ldr	w8, [sp, #24]
    1294:	str	w8, [sp, #44]
    1298:	ldr	w0, [sp, #44]
    129c:	add	sp, sp, #0x30
    12a0:	ret

InstrProfilingBuffer.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_is_continuous_mode_enabled>:
   0:	adrp	x8, 0 <__llvm_profile_is_continuous_mode_enabled>
   4:	add	x8, x8, #0x0
   8:	ldr	w0, [x8]
   c:	ret

0000000000000010 <__llvm_profile_enable_continuous_mode>:
  10:	mov	w8, #0x1                   	// #1
  14:	adrp	x9, 0 <__llvm_profile_is_continuous_mode_enabled>
  18:	add	x9, x9, #0x0
  1c:	str	w8, [x9]
  20:	ret

0000000000000024 <__llvm_profile_get_size_for_buffer>:
  24:	sub	sp, sp, #0x40
  28:	stp	x29, x30, [sp, #48]
  2c:	add	x29, sp, #0x30
  30:	bl	0 <__llvm_profile_begin_data>
  34:	stur	x0, [x29, #-8]
  38:	bl	0 <__llvm_profile_end_data>
  3c:	stur	x0, [x29, #-16]
  40:	bl	0 <__llvm_profile_begin_counters>
  44:	str	x0, [sp, #24]
  48:	bl	0 <__llvm_profile_end_counters>
  4c:	str	x0, [sp, #16]
  50:	bl	0 <__llvm_profile_begin_names>
  54:	str	x0, [sp, #8]
  58:	bl	0 <__llvm_profile_end_names>
  5c:	str	x0, [sp]
  60:	ldur	x0, [x29, #-8]
  64:	ldur	x1, [x29, #-16]
  68:	ldr	x2, [sp, #24]
  6c:	ldr	x3, [sp, #16]
  70:	ldr	x4, [sp, #8]
  74:	ldr	x5, [sp]
  78:	bl	88 <__llvm_profile_get_size_for_buffer_internal>
  7c:	ldp	x29, x30, [sp, #48]
  80:	add	sp, sp, #0x40
  84:	ret

0000000000000088 <__llvm_profile_get_size_for_buffer_internal>:
  88:	sub	sp, sp, #0xa0
  8c:	stp	x29, x30, [sp, #144]
  90:	add	x29, sp, #0x90
  94:	mov	x8, #0x1                   	// #1
  98:	mov	x9, #0x8                   	// #8
  9c:	mov	x10, #0x30                  	// #48
  a0:	add	x11, sp, #0x40
  a4:	add	x12, sp, #0x38
  a8:	add	x13, sp, #0x30
  ac:	stur	x0, [x29, #-8]
  b0:	stur	x1, [x29, #-16]
  b4:	stur	x2, [x29, #-24]
  b8:	stur	x3, [x29, #-32]
  bc:	stur	x4, [x29, #-40]
  c0:	stur	x5, [x29, #-48]
  c4:	ldur	x14, [x29, #-48]
  c8:	ldur	x15, [x29, #-40]
  cc:	subs	x14, x14, x15
  d0:	mul	x8, x14, x8
  d4:	stur	x8, [x29, #-56]
  d8:	ldur	x0, [x29, #-8]
  dc:	ldur	x1, [x29, #-16]
  e0:	str	x9, [sp, #40]
  e4:	str	x10, [sp, #32]
  e8:	str	x11, [sp, #24]
  ec:	str	x12, [sp, #16]
  f0:	str	x13, [sp, #8]
  f4:	bl	17c <__llvm_profile_get_data_size>
  f8:	stur	x0, [x29, #-64]
  fc:	ldur	x8, [x29, #-32]
 100:	ldur	x9, [x29, #-24]
 104:	subs	x8, x8, x9
 108:	ldr	x9, [sp, #40]
 10c:	sdiv	x8, x8, x9
 110:	str	x8, [sp, #72]
 114:	ldur	x0, [x29, #-64]
 118:	ldr	x1, [sp, #72]
 11c:	ldur	x2, [x29, #-56]
 120:	ldr	x3, [sp, #24]
 124:	ldr	x4, [sp, #16]
 128:	ldr	x5, [sp, #8]
 12c:	bl	1bc <__llvm_profile_get_padding_sizes_for_counters>
 130:	ldur	x8, [x29, #-64]
 134:	ldr	x9, [sp, #32]
 138:	mul	x8, x8, x9
 13c:	add	x8, x8, #0x50
 140:	ldr	x10, [sp, #64]
 144:	add	x8, x8, x10
 148:	ldr	x10, [sp, #72]
 14c:	ldr	x11, [sp, #40]
 150:	mul	x10, x10, x11
 154:	add	x8, x8, x10
 158:	ldr	x10, [sp, #56]
 15c:	add	x8, x8, x10
 160:	ldur	x10, [x29, #-56]
 164:	add	x8, x8, x10
 168:	ldr	x10, [sp, #48]
 16c:	add	x0, x8, x10
 170:	ldp	x29, x30, [sp, #144]
 174:	add	sp, sp, #0xa0
 178:	ret

000000000000017c <__llvm_profile_get_data_size>:
 17c:	sub	sp, sp, #0x20
 180:	mov	x8, #0x30                  	// #48
 184:	str	x0, [sp, #24]
 188:	str	x1, [sp, #16]
 18c:	ldr	x9, [sp, #24]
 190:	str	x9, [sp, #8]
 194:	ldr	x9, [sp, #16]
 198:	str	x9, [sp]
 19c:	ldr	x9, [sp]
 1a0:	add	x9, x9, #0x30
 1a4:	subs	x9, x9, #0x1
 1a8:	ldr	x10, [sp, #8]
 1ac:	subs	x9, x9, x10
 1b0:	udiv	x0, x9, x8
 1b4:	add	sp, sp, #0x20
 1b8:	ret

00000000000001bc <__llvm_profile_get_padding_sizes_for_counters>:
 1bc:	sub	sp, sp, #0x60
 1c0:	stp	x29, x30, [sp, #80]
 1c4:	add	x29, sp, #0x50
 1c8:	stur	x0, [x29, #-8]
 1cc:	stur	x1, [x29, #-16]
 1d0:	stur	x2, [x29, #-24]
 1d4:	stur	x3, [x29, #-32]
 1d8:	str	x4, [sp, #40]
 1dc:	str	x5, [sp, #32]
 1e0:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 1e4:	cbnz	w0, 214 <__llvm_profile_get_padding_sizes_for_counters+0x58>
 1e8:	ldur	x8, [x29, #-32]
 1ec:	str	xzr, [x8]
 1f0:	ldr	x8, [sp, #40]
 1f4:	str	xzr, [x8]
 1f8:	ldur	x0, [x29, #-24]
 1fc:	bl	0 <__llvm_profile_get_num_padding_bytes>
 200:	mov	w1, w0
 204:	and	x8, x1, #0xff
 208:	ldr	x9, [sp, #32]
 20c:	str	x8, [x9]
 210:	b	27c <__llvm_profile_get_padding_sizes_for_counters+0xc0>
 214:	bl	0 <getpagesize>
 218:	str	w0, [sp, #28]
 21c:	ldur	x8, [x29, #-8]
 220:	mov	x9, #0x30                  	// #48
 224:	mul	x8, x8, x9
 228:	str	x8, [sp, #16]
 22c:	ldur	x8, [x29, #-16]
 230:	mov	x9, #0x8                   	// #8
 234:	mul	x8, x8, x9
 238:	str	x8, [sp, #8]
 23c:	ldr	x8, [sp, #16]
 240:	add	x0, x8, #0x50
 244:	ldr	w1, [sp, #28]
 248:	bl	288 <calculateBytesNeededToPageAlign>
 24c:	ldur	x8, [x29, #-32]
 250:	str	x0, [x8]
 254:	ldr	x0, [sp, #8]
 258:	ldr	w1, [sp, #28]
 25c:	bl	288 <calculateBytesNeededToPageAlign>
 260:	ldr	x8, [sp, #40]
 264:	str	x0, [x8]
 268:	ldur	x0, [x29, #-24]
 26c:	ldr	w1, [sp, #28]
 270:	bl	288 <calculateBytesNeededToPageAlign>
 274:	ldr	x8, [sp, #32]
 278:	str	x0, [x8]
 27c:	ldp	x29, x30, [sp, #80]
 280:	add	sp, sp, #0x60
 284:	ret

0000000000000288 <calculateBytesNeededToPageAlign>:
 288:	sub	sp, sp, #0x20
 28c:	str	x0, [sp, #16]
 290:	str	w1, [sp, #12]
 294:	ldr	x8, [sp, #16]
 298:	ldr	w9, [sp, #12]
 29c:	mov	w10, w9
 2a0:	udiv	x11, x8, x10
 2a4:	mul	x10, x11, x10
 2a8:	subs	x8, x8, x10
 2ac:	str	x8, [sp]
 2b0:	ldr	x8, [sp]
 2b4:	cmp	x8, #0x0
 2b8:	cset	w9, ls  // ls = plast
 2bc:	tbnz	w9, #0, 2d8 <calculateBytesNeededToPageAlign+0x50>
 2c0:	ldr	w8, [sp, #12]
 2c4:	mov	w9, w8
 2c8:	ldr	x10, [sp]
 2cc:	subs	x9, x9, x10
 2d0:	str	x9, [sp, #24]
 2d4:	b	2dc <calculateBytesNeededToPageAlign+0x54>
 2d8:	str	xzr, [sp, #24]
 2dc:	ldr	x0, [sp, #24]
 2e0:	add	sp, sp, #0x20
 2e4:	ret

00000000000002e8 <initBufferWriter>:
 2e8:	sub	sp, sp, #0x10
 2ec:	adrp	x8, 0 <lprofBufferWriter>
 2f0:	ldr	x8, [x8]
 2f4:	str	x0, [sp, #8]
 2f8:	str	x1, [sp]
 2fc:	ldr	x9, [sp, #8]
 300:	str	x8, [x9]
 304:	ldr	x8, [sp]
 308:	ldr	x9, [sp, #8]
 30c:	str	x8, [x9, #8]
 310:	add	sp, sp, #0x10
 314:	ret

0000000000000318 <__llvm_profile_write_buffer>:
 318:	sub	sp, sp, #0x40
 31c:	stp	x29, x30, [sp, #48]
 320:	add	x29, sp, #0x30
 324:	mov	x8, xzr
 328:	mov	w9, wzr
 32c:	add	x10, sp, #0x18
 330:	stur	x0, [x29, #-8]
 334:	ldur	x1, [x29, #-8]
 338:	mov	x0, x10
 33c:	str	x8, [sp, #16]
 340:	str	w9, [sp, #12]
 344:	str	x10, [sp]
 348:	bl	2e8 <initBufferWriter>
 34c:	ldr	x0, [sp]
 350:	ldr	x1, [sp, #16]
 354:	ldr	w2, [sp, #12]
 358:	bl	0 <lprofWriteData>
 35c:	ldp	x29, x30, [sp, #48]
 360:	add	sp, sp, #0x40
 364:	ret

0000000000000368 <__llvm_profile_write_buffer_internal>:
 368:	sub	sp, sp, #0x70
 36c:	stp	x29, x30, [sp, #96]
 370:	add	x29, sp, #0x60
 374:	mov	x8, xzr
 378:	add	x9, sp, #0x18
 37c:	stur	x0, [x29, #-8]
 380:	stur	x1, [x29, #-16]
 384:	stur	x2, [x29, #-24]
 388:	stur	x3, [x29, #-32]
 38c:	stur	x4, [x29, #-40]
 390:	str	x5, [sp, #48]
 394:	str	x6, [sp, #40]
 398:	ldur	x1, [x29, #-8]
 39c:	mov	x0, x9
 3a0:	str	x8, [sp, #16]
 3a4:	str	x9, [sp, #8]
 3a8:	bl	2e8 <initBufferWriter>
 3ac:	ldur	x1, [x29, #-16]
 3b0:	ldur	x2, [x29, #-24]
 3b4:	ldur	x3, [x29, #-32]
 3b8:	ldur	x4, [x29, #-40]
 3bc:	ldr	x6, [sp, #48]
 3c0:	ldr	x7, [sp, #40]
 3c4:	ldr	x0, [sp, #8]
 3c8:	ldr	x5, [sp, #16]
 3cc:	mov	x8, sp
 3d0:	str	wzr, [x8]
 3d4:	bl	0 <lprofWriteDataImpl>
 3d8:	ldp	x29, x30, [sp, #96]
 3dc:	add	sp, sp, #0x70
 3e0:	ret

InstrProfilingFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_set_file_object>:
       0:	sub	sp, sp, #0x30
       4:	stp	x29, x30, [sp, #32]
       8:	add	x29, sp, #0x20
       c:	stur	x0, [x29, #-8]
      10:	stur	w1, [x29, #-12]
      14:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
      18:	cbz	w0, 58 <__llvm_profile_set_file_object+0x58>
      1c:	adrp	x8, 0 <stderr>
      20:	ldr	x8, [x8]
      24:	ldr	x0, [x8]
      28:	ldur	x8, [x29, #-8]
      2c:	str	x0, [sp, #8]
      30:	mov	x0, x8
      34:	bl	0 <fileno>
      38:	ldr	x8, [sp, #8]
      3c:	str	w0, [sp, #4]
      40:	mov	x0, x8
      44:	adrp	x1, 0 <__llvm_profile_set_file_object>
      48:	add	x1, x1, #0x0
      4c:	ldr	w2, [sp, #4]
      50:	bl	0 <fprintf>
      54:	b	68 <__llvm_profile_set_file_object+0x68>
      58:	ldur	x0, [x29, #-8]
      5c:	bl	74 <setProfileFile>
      60:	ldur	w0, [x29, #-12]
      64:	bl	94 <setProfileMergeRequested>
      68:	ldp	x29, x30, [sp, #32]
      6c:	add	sp, sp, #0x30
      70:	ret

0000000000000074 <setProfileFile>:
      74:	sub	sp, sp, #0x10
      78:	adrp	x8, 0 <__llvm_profile_set_file_object>
      7c:	add	x8, x8, #0x0
      80:	str	x0, [sp, #8]
      84:	ldr	x9, [sp, #8]
      88:	str	x9, [x8]
      8c:	add	sp, sp, #0x10
      90:	ret

0000000000000094 <setProfileMergeRequested>:
      94:	sub	sp, sp, #0x10
      98:	adrp	x8, 0 <__llvm_profile_set_file_object>
      9c:	add	x8, x8, #0x0
      a0:	str	w0, [sp, #12]
      a4:	ldr	w9, [sp, #12]
      a8:	str	w9, [x8]
      ac:	add	sp, sp, #0x10
      b0:	ret

00000000000000b4 <lprofCreateBufferIOInternal>:
      b4:	sub	sp, sp, #0x60
      b8:	stp	x29, x30, [sp, #80]
      bc:	add	x29, sp, #0x50
      c0:	adrp	x8, 0 <free>
      c4:	ldr	x8, [x8]
      c8:	adrp	x9, 0 <FreeHook>
      cc:	add	x9, x9, #0x0
      d0:	mov	x10, #0x1                   	// #1
      d4:	adrp	x11, 0 <DynamicBufferIOBuffer>
      d8:	add	x11, x11, #0x0
      dc:	adrp	x12, 0 <VPBufferSize>
      e0:	add	x12, x12, #0x0
      e4:	mov	x13, #0x10                  	// #16
      e8:	mov	w14, #0x1                   	// #1
      ec:	stur	x0, [x29, #-8]
      f0:	stur	w1, [x29, #-12]
      f4:	str	x8, [x9]
      f8:	ldur	w15, [x29, #-12]
      fc:	mov	w0, w15
     100:	mov	x1, x10
     104:	str	x10, [sp, #40]
     108:	str	x11, [sp, #32]
     10c:	str	x12, [sp, #24]
     110:	str	x13, [sp, #16]
     114:	str	w14, [sp, #12]
     118:	bl	0 <calloc>
     11c:	ldr	x8, [sp, #32]
     120:	str	x0, [x8]
     124:	ldur	w14, [x29, #-12]
     128:	ldr	x9, [sp, #24]
     12c:	str	w14, [x9]
     130:	ldr	x0, [sp, #16]
     134:	ldr	x1, [sp, #40]
     138:	bl	0 <calloc>
     13c:	stur	x0, [x29, #-24]
     140:	ldur	x0, [x29, #-24]
     144:	ldur	x1, [x29, #-8]
     148:	bl	174 <initFileWriter>
     14c:	ldur	x0, [x29, #-24]
     150:	bl	0 <lprofCreateBufferIO>
     154:	stur	x0, [x29, #-32]
     158:	ldur	x8, [x29, #-32]
     15c:	ldr	w14, [sp, #12]
     160:	str	w14, [x8, #8]
     164:	ldur	x0, [x29, #-32]
     168:	ldp	x29, x30, [sp, #80]
     16c:	add	sp, sp, #0x60
     170:	ret

0000000000000174 <initFileWriter>:
     174:	sub	sp, sp, #0x10
     178:	adrp	x8, 0 <__llvm_profile_set_file_object>
     17c:	add	x8, x8, #0x0
     180:	str	x0, [sp, #8]
     184:	str	x1, [sp]
     188:	ldr	x9, [sp, #8]
     18c:	str	x8, [x9]
     190:	ldr	x8, [sp]
     194:	ldr	x9, [sp, #8]
     198:	str	x8, [x9, #8]
     19c:	add	sp, sp, #0x10
     1a0:	ret

00000000000001a4 <__llvm_profile_get_path_prefix>:
     1a4:	stp	x29, x30, [sp, #-16]!
     1a8:	mov	x29, sp
     1ac:	sub	sp, sp, #0x40
     1b0:	adrp	x8, 0 <__llvm_profile_set_file_object>
     1b4:	add	x8, x8, #0x0
     1b8:	adrp	x9, 0 <__llvm_profile_set_file_object>
     1bc:	add	x9, x9, #0x0
     1c0:	ldr	x10, [x8, #16]
     1c4:	stur	x8, [x29, #-56]
     1c8:	stur	x9, [x29, #-64]
     1cc:	cbz	x10, 1e0 <__llvm_profile_get_path_prefix+0x3c>
     1d0:	ldur	x8, [x29, #-56]
     1d4:	ldr	x9, [x8, #16]
     1d8:	stur	x9, [x29, #-8]
     1dc:	b	2f0 <__llvm_profile_get_path_prefix+0x14c>
     1e0:	bl	1200 <getCurFilenameLength>
     1e4:	stur	w0, [x29, #-12]
     1e8:	ldur	w8, [x29, #-12]
     1ec:	add	w8, w8, #0x1
     1f0:	mov	x9, #0xf                   	// #15
     1f4:	mov	w10, #0x1                   	// #1
     1f8:	smaddl	x9, w8, w10, x9
     1fc:	and	x9, x9, #0xfffffffffffffff0
     200:	mov	x11, sp
     204:	subs	x9, x11, x9
     208:	mov	sp, x9
     20c:	stur	x9, [x29, #-24]
     210:	ldur	x0, [x29, #-24]
     214:	mov	w8, wzr
     218:	mov	w1, w8
     21c:	bl	300 <getCurFilename>
     220:	stur	x0, [x29, #-40]
     224:	ldur	x9, [x29, #-40]
     228:	cbnz	x9, 238 <__llvm_profile_get_path_prefix+0x94>
     22c:	ldur	x8, [x29, #-64]
     230:	stur	x8, [x29, #-8]
     234:	b	2f0 <__llvm_profile_get_path_prefix+0x14c>
     238:	ldur	x0, [x29, #-40]
     23c:	bl	0 <lprofFindLastDirSeparator>
     240:	stur	x0, [x29, #-48]
     244:	ldur	x8, [x29, #-48]
     248:	cbnz	x8, 258 <__llvm_profile_get_path_prefix+0xb4>
     24c:	ldur	x8, [x29, #-64]
     250:	stur	x8, [x29, #-8]
     254:	b	2f0 <__llvm_profile_get_path_prefix+0x14c>
     258:	ldur	x8, [x29, #-48]
     25c:	ldur	x9, [x29, #-40]
     260:	subs	x8, x8, x9
     264:	add	x8, x8, #0x1
     268:	stur	w8, [x29, #-12]
     26c:	ldur	w8, [x29, #-12]
     270:	add	w8, w8, #0x1
     274:	mov	w0, w8
     278:	sxtw	x0, w0
     27c:	bl	0 <malloc>
     280:	stur	x0, [x29, #-32]
     284:	ldur	x9, [x29, #-32]
     288:	cbnz	x9, 2b8 <__llvm_profile_get_path_prefix+0x114>
     28c:	adrp	x8, 0 <stderr>
     290:	ldr	x8, [x8]
     294:	ldr	x0, [x8]
     298:	adrp	x1, 0 <__llvm_profile_set_file_object>
     29c:	add	x1, x1, #0x0
     2a0:	adrp	x2, 0 <__llvm_profile_set_file_object>
     2a4:	add	x2, x2, #0x0
     2a8:	bl	0 <fprintf>
     2ac:	ldur	x8, [x29, #-64]
     2b0:	stur	x8, [x29, #-8]
     2b4:	b	2f0 <__llvm_profile_get_path_prefix+0x14c>
     2b8:	ldur	x0, [x29, #-32]
     2bc:	ldur	x1, [x29, #-40]
     2c0:	ldursw	x2, [x29, #-12]
     2c4:	bl	0 <memcpy>
     2c8:	ldur	x8, [x29, #-32]
     2cc:	ldursw	x9, [x29, #-12]
     2d0:	add	x8, x8, x9
     2d4:	mov	w10, #0x0                   	// #0
     2d8:	strb	w10, [x8]
     2dc:	ldur	x8, [x29, #-32]
     2e0:	ldur	x9, [x29, #-56]
     2e4:	str	x8, [x9, #16]
     2e8:	ldur	x8, [x29, #-32]
     2ec:	stur	x8, [x29, #-8]
     2f0:	ldur	x0, [x29, #-8]
     2f4:	mov	sp, x29
     2f8:	ldp	x29, x30, [sp], #16
     2fc:	ret

0000000000000300 <getCurFilename>:
     300:	sub	sp, sp, #0x90
     304:	stp	x29, x30, [sp, #128]
     308:	add	x29, sp, #0x80
     30c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     310:	add	x8, x8, #0x0
     314:	add	x9, x8, #0x18
     318:	add	x10, x8, #0x28
     31c:	adrp	x11, 0 <lprofGetLoadModuleSignature>
     320:	ldr	x11, [x11]
     324:	stur	x0, [x29, #-16]
     328:	stur	w1, [x29, #-20]
     32c:	ldr	x12, [x8]
     330:	stur	x12, [x29, #-48]
     334:	ldr	x12, [x8]
     338:	str	x8, [sp, #32]
     33c:	str	x9, [sp, #24]
     340:	str	x10, [sp, #16]
     344:	str	x11, [sp, #8]
     348:	cbz	x12, 35c <getCurFilename+0x5c>
     34c:	ldr	x8, [sp, #32]
     350:	ldr	x9, [x8]
     354:	ldrb	w10, [x9]
     358:	cbnz	w10, 368 <getCurFilename+0x68>
     35c:	mov	x8, xzr
     360:	stur	x8, [x29, #-8]
     364:	b	5c8 <getCurFilename+0x2c8>
     368:	ldr	x8, [sp, #32]
     36c:	ldr	w9, [x8, #168]
     370:	cbnz	w9, 3f0 <getCurFilename+0xf0>
     374:	ldr	x8, [sp, #32]
     378:	ldr	w9, [x8, #172]
     37c:	cbnz	w9, 3f0 <getCurFilename+0xf0>
     380:	ldr	x8, [sp, #32]
     384:	ldr	w9, [x8, #176]
     388:	cbnz	w9, 3f0 <getCurFilename+0xf0>
     38c:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     390:	cbnz	w0, 3f0 <getCurFilename+0xf0>
     394:	ldur	w8, [x29, #-20]
     398:	cbnz	w8, 3ac <getCurFilename+0xac>
     39c:	ldr	x8, [sp, #32]
     3a0:	ldr	x9, [x8]
     3a4:	stur	x9, [x29, #-8]
     3a8:	b	5c8 <getCurFilename+0x2c8>
     3ac:	ldr	x8, [sp, #32]
     3b0:	ldr	x0, [x8]
     3b4:	bl	0 <strlen>
     3b8:	stur	w0, [x29, #-40]
     3bc:	ldur	x0, [x29, #-16]
     3c0:	ldr	x8, [sp, #32]
     3c4:	ldr	x1, [x8]
     3c8:	ldursw	x2, [x29, #-40]
     3cc:	bl	0 <memcpy>
     3d0:	ldur	x8, [x29, #-16]
     3d4:	ldursw	x9, [x29, #-40]
     3d8:	add	x8, x8, x9
     3dc:	mov	w10, #0x0                   	// #0
     3e0:	strb	w10, [x8]
     3e4:	ldur	x8, [x29, #-16]
     3e8:	stur	x8, [x29, #-8]
     3ec:	b	5c8 <getCurFilename+0x2c8>
     3f0:	ldr	x0, [sp, #24]
     3f4:	bl	0 <strlen>
     3f8:	stur	w0, [x29, #-32]
     3fc:	ldr	x0, [sp, #16]
     400:	bl	0 <strlen>
     404:	stur	w0, [x29, #-36]
     408:	stur	wzr, [x29, #-24]
     40c:	stur	wzr, [x29, #-28]
     410:	ldur	x8, [x29, #-48]
     414:	ldursw	x9, [x29, #-24]
     418:	add	x8, x8, x9
     41c:	ldrb	w10, [x8]
     420:	cbz	w10, 5ac <getCurFilename+0x2ac>
     424:	ldur	x8, [x29, #-48]
     428:	ldursw	x9, [x29, #-24]
     42c:	ldrb	w10, [x8, x9]
     430:	cmp	w10, #0x25
     434:	b.ne	570 <getCurFilename+0x270>  // b.any
     438:	ldur	x8, [x29, #-48]
     43c:	ldur	w9, [x29, #-24]
     440:	add	w9, w9, #0x1
     444:	stur	w9, [x29, #-24]
     448:	ldrb	w9, [x8, w9, sxtw]
     44c:	cmp	w9, #0x70
     450:	b.ne	480 <getCurFilename+0x180>  // b.any
     454:	ldur	x8, [x29, #-16]
     458:	ldursw	x9, [x29, #-28]
     45c:	add	x0, x8, x9
     460:	ldursw	x2, [x29, #-32]
     464:	ldr	x1, [sp, #24]
     468:	bl	0 <memcpy>
     46c:	ldur	w10, [x29, #-32]
     470:	ldur	w11, [x29, #-28]
     474:	add	w10, w11, w10
     478:	stur	w10, [x29, #-28]
     47c:	b	56c <getCurFilename+0x26c>
     480:	ldur	x8, [x29, #-48]
     484:	ldursw	x9, [x29, #-24]
     488:	ldrb	w10, [x8, x9]
     48c:	cmp	w10, #0x68
     490:	b.ne	4c0 <getCurFilename+0x1c0>  // b.any
     494:	ldur	x8, [x29, #-16]
     498:	ldursw	x9, [x29, #-28]
     49c:	add	x0, x8, x9
     4a0:	ldursw	x2, [x29, #-36]
     4a4:	ldr	x1, [sp, #16]
     4a8:	bl	0 <memcpy>
     4ac:	ldur	w10, [x29, #-36]
     4b0:	ldur	w11, [x29, #-28]
     4b4:	add	w10, w11, w10
     4b8:	stur	w10, [x29, #-28]
     4bc:	b	56c <getCurFilename+0x26c>
     4c0:	ldur	x0, [x29, #-48]
     4c4:	sub	x1, x29, #0x18
     4c8:	bl	1324 <getMergePoolSize>
     4cc:	cbnz	w0, 4d4 <getCurFilename+0x1d4>
     4d0:	b	59c <getCurFilename+0x29c>
     4d4:	bl	0 <getpid>
     4d8:	ldr	x8, [sp, #32]
     4dc:	ldr	w9, [x8, #176]
     4e0:	udiv	w10, w0, w9
     4e4:	mul	w9, w10, w9
     4e8:	subs	w9, w0, w9
     4ec:	str	w9, [sp, #44]
     4f0:	ldr	x11, [sp, #8]
     4f4:	blr	x11
     4f8:	ldr	w4, [sp, #44]
     4fc:	add	x8, sp, #0x37
     500:	str	x0, [sp]
     504:	mov	x0, x8
     508:	mov	x1, #0x19                  	// #25
     50c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     510:	add	x2, x2, #0x0
     514:	ldr	x3, [sp]
     518:	bl	0 <snprintf>
     51c:	str	w0, [sp, #48]
     520:	ldr	w9, [sp, #48]
     524:	mov	w10, #0xffffffff            	// #-1
     528:	cmp	w9, w10
     52c:	b.eq	53c <getCurFilename+0x23c>  // b.none
     530:	ldr	w8, [sp, #48]
     534:	cmp	w8, #0x18
     538:	b.le	544 <getCurFilename+0x244>
     53c:	mov	w8, #0x18                  	// #24
     540:	str	w8, [sp, #48]
     544:	ldur	x8, [x29, #-16]
     548:	ldursw	x9, [x29, #-28]
     54c:	add	x0, x8, x9
     550:	ldrsw	x2, [sp, #48]
     554:	add	x1, sp, #0x37
     558:	bl	0 <memcpy>
     55c:	ldr	w10, [sp, #48]
     560:	ldur	w11, [x29, #-28]
     564:	add	w10, w11, w10
     568:	stur	w10, [x29, #-28]
     56c:	b	59c <getCurFilename+0x29c>
     570:	ldur	x8, [x29, #-48]
     574:	ldursw	x9, [x29, #-24]
     578:	add	x8, x8, x9
     57c:	ldrb	w10, [x8]
     580:	ldur	x8, [x29, #-16]
     584:	ldursw	x9, [x29, #-28]
     588:	mov	w11, w9
     58c:	add	w11, w11, #0x1
     590:	stur	w11, [x29, #-28]
     594:	add	x8, x8, x9
     598:	strb	w10, [x8]
     59c:	ldur	w8, [x29, #-24]
     5a0:	add	w8, w8, #0x1
     5a4:	stur	w8, [x29, #-24]
     5a8:	b	410 <getCurFilename+0x110>
     5ac:	ldur	x8, [x29, #-16]
     5b0:	ldursw	x9, [x29, #-28]
     5b4:	add	x8, x8, x9
     5b8:	mov	w10, #0x0                   	// #0
     5bc:	strb	w10, [x8]
     5c0:	ldur	x8, [x29, #-16]
     5c4:	stur	x8, [x29, #-8]
     5c8:	ldur	x0, [x29, #-8]
     5cc:	ldp	x29, x30, [sp, #128]
     5d0:	add	sp, sp, #0x90
     5d4:	ret

00000000000005d8 <__llvm_profile_get_filename>:
     5d8:	sub	sp, sp, #0x30
     5dc:	stp	x29, x30, [sp, #32]
     5e0:	add	x29, sp, #0x20
     5e4:	bl	1200 <getCurFilenameLength>
     5e8:	stur	w0, [x29, #-12]
     5ec:	ldur	w8, [x29, #-12]
     5f0:	add	w8, w8, #0x1
     5f4:	mov	w1, w8
     5f8:	sxtw	x0, w1
     5fc:	bl	0 <malloc>
     600:	str	x0, [sp, #8]
     604:	ldr	x9, [sp, #8]
     608:	cbnz	x9, 63c <__llvm_profile_get_filename+0x64>
     60c:	adrp	x8, 0 <stderr>
     610:	ldr	x8, [x8]
     614:	ldr	x0, [x8]
     618:	adrp	x1, 0 <__llvm_profile_set_file_object>
     61c:	add	x1, x1, #0x0
     620:	adrp	x2, 0 <__llvm_profile_set_file_object>
     624:	add	x2, x2, #0x0
     628:	bl	0 <fprintf>
     62c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     630:	add	x8, x8, #0x0
     634:	stur	x8, [x29, #-8]
     638:	b	66c <__llvm_profile_get_filename+0x94>
     63c:	ldr	x0, [sp, #8]
     640:	mov	w1, #0x1                   	// #1
     644:	bl	300 <getCurFilename>
     648:	str	x0, [sp]
     64c:	ldr	x8, [sp]
     650:	cbnz	x8, 664 <__llvm_profile_get_filename+0x8c>
     654:	adrp	x8, 0 <__llvm_profile_set_file_object>
     658:	add	x8, x8, #0x0
     65c:	stur	x8, [x29, #-8]
     660:	b	66c <__llvm_profile_get_filename+0x94>
     664:	ldr	x8, [sp, #8]
     668:	stur	x8, [x29, #-8]
     66c:	ldur	x0, [x29, #-8]
     670:	ldp	x29, x30, [sp, #32]
     674:	add	sp, sp, #0x30
     678:	ret

000000000000067c <__llvm_profile_initialize_file>:
     67c:	sub	sp, sp, #0x30
     680:	stp	x29, x30, [sp, #32]
     684:	add	x29, sp, #0x20
     688:	mov	x8, xzr
     68c:	adrp	x9, 0 <__llvm_profile_filename>
     690:	ldr	x9, [x9]
     694:	str	x8, [sp, #16]
     698:	str	wzr, [sp, #12]
     69c:	ldrb	w10, [x9]
     6a0:	cmp	w10, #0x0
     6a4:	cset	w10, ne  // ne = any
     6a8:	and	w10, w10, #0x1
     6ac:	str	w10, [sp, #8]
     6b0:	bl	724 <getFilenamePatFromEnv>
     6b4:	stur	x0, [x29, #-8]
     6b8:	ldur	x8, [x29, #-8]
     6bc:	cbz	x8, 6d4 <__llvm_profile_initialize_file+0x58>
     6c0:	ldur	x0, [x29, #-8]
     6c4:	mov	w1, #0x3                   	// #3
     6c8:	mov	w2, #0x1                   	// #1
     6cc:	bl	778 <parseAndSetFilename>
     6d0:	b	718 <__llvm_profile_initialize_file+0x9c>
     6d4:	ldr	w8, [sp, #8]
     6d8:	cbz	w8, 6f4 <__llvm_profile_initialize_file+0x78>
     6dc:	adrp	x8, 0 <__llvm_profile_filename>
     6e0:	ldr	x8, [x8]
     6e4:	str	x8, [sp, #16]
     6e8:	mov	w9, #0x2                   	// #2
     6ec:	str	w9, [sp, #12]
     6f0:	b	704 <__llvm_profile_initialize_file+0x88>
     6f4:	mov	x8, xzr
     6f8:	str	x8, [sp, #16]
     6fc:	mov	w9, #0x1                   	// #1
     700:	str	w9, [sp, #12]
     704:	ldr	x0, [sp, #16]
     708:	ldr	w1, [sp, #12]
     70c:	mov	w8, wzr
     710:	mov	w2, w8
     714:	bl	778 <parseAndSetFilename>
     718:	ldp	x29, x30, [sp, #32]
     71c:	add	sp, sp, #0x30
     720:	ret

0000000000000724 <getFilenamePatFromEnv>:
     724:	sub	sp, sp, #0x20
     728:	stp	x29, x30, [sp, #16]
     72c:	add	x29, sp, #0x10
     730:	adrp	x0, 0 <__llvm_profile_set_file_object>
     734:	add	x0, x0, #0x0
     738:	bl	0 <getenv>
     73c:	str	x0, [sp]
     740:	ldr	x8, [sp]
     744:	cbz	x8, 754 <getFilenamePatFromEnv+0x30>
     748:	ldr	x8, [sp]
     74c:	ldrb	w9, [x8]
     750:	cbnz	w9, 760 <getFilenamePatFromEnv+0x3c>
     754:	mov	x8, xzr
     758:	str	x8, [sp, #8]
     75c:	b	768 <getFilenamePatFromEnv+0x44>
     760:	ldr	x8, [sp]
     764:	str	x8, [sp, #8]
     768:	ldr	x0, [sp, #8]
     76c:	ldp	x29, x30, [sp, #16]
     770:	add	sp, sp, #0x20
     774:	ret

0000000000000778 <parseAndSetFilename>:
     778:	sub	sp, sp, #0x80
     77c:	stp	x29, x30, [sp, #112]
     780:	add	x29, sp, #0x70
     784:	adrp	x8, 0 <__llvm_profile_set_file_object>
     788:	add	x8, x8, #0x0
     78c:	stur	x0, [x29, #-8]
     790:	stur	w1, [x29, #-12]
     794:	stur	w2, [x29, #-16]
     798:	ldr	x9, [x8]
     79c:	stur	x9, [x29, #-24]
     7a0:	ldr	w10, [x8, #180]
     7a4:	stur	w10, [x29, #-28]
     7a8:	ldur	w10, [x29, #-12]
     7ac:	ldur	w11, [x29, #-28]
     7b0:	cmp	w10, w11
     7b4:	stur	x8, [x29, #-40]
     7b8:	b.cs	7c0 <parseAndSetFilename+0x48>  // b.hs, b.nlast
     7bc:	b	90c <parseAndSetFilename+0x194>
     7c0:	ldur	x8, [x29, #-8]
     7c4:	cbnz	x8, 7d8 <parseAndSetFilename+0x60>
     7c8:	adrp	x8, 0 <__llvm_profile_set_file_object>
     7cc:	add	x8, x8, #0x0
     7d0:	ldr	x8, [x8]
     7d4:	stur	x8, [x29, #-8]
     7d8:	ldur	x8, [x29, #-24]
     7dc:	cbz	x8, 800 <parseAndSetFilename+0x88>
     7e0:	ldur	x0, [x29, #-24]
     7e4:	ldur	x1, [x29, #-8]
     7e8:	bl	0 <strcmp>
     7ec:	cbnz	w0, 800 <parseAndSetFilename+0x88>
     7f0:	ldur	w8, [x29, #-12]
     7f4:	ldur	x9, [x29, #-40]
     7f8:	str	w8, [x9, #180]
     7fc:	b	90c <parseAndSetFilename+0x194>
     800:	ldur	x8, [x29, #-8]
     804:	cbz	x8, 818 <parseAndSetFilename+0xa0>
     808:	ldur	x0, [x29, #-8]
     80c:	ldur	w1, [x29, #-16]
     810:	bl	1400 <parseFilenamePattern>
     814:	cbz	w0, 81c <parseAndSetFilename+0xa4>
     818:	bl	16bc <resetFilenameToDefault>
     81c:	ldur	w8, [x29, #-12]
     820:	ldur	x9, [x29, #-40]
     824:	str	w8, [x9, #180]
     828:	ldur	x10, [x29, #-24]
     82c:	cbnz	x10, 88c <parseAndSetFilename+0x114>
     830:	adrp	x0, 0 <__llvm_profile_set_file_object>
     834:	add	x0, x0, #0x0
     838:	bl	0 <getenv>
     83c:	cbz	x0, 888 <parseAndSetFilename+0x110>
     840:	adrp	x8, 0 <stderr>
     844:	ldr	x8, [x8]
     848:	ldr	x0, [x8]
     84c:	ldur	x8, [x29, #-40]
     850:	ldr	x2, [x8]
     854:	ldur	w9, [x29, #-12]
     858:	stur	x0, [x29, #-48]
     85c:	mov	w0, w9
     860:	str	x2, [sp, #56]
     864:	bl	1730 <getPNSStr>
     868:	ldur	x8, [x29, #-48]
     86c:	str	x0, [sp, #48]
     870:	mov	x0, x8
     874:	adrp	x1, 0 <__llvm_profile_set_file_object>
     878:	add	x1, x1, #0x0
     87c:	ldr	x2, [sp, #56]
     880:	ldr	x3, [sp, #48]
     884:	bl	0 <fprintf>
     888:	b	904 <parseAndSetFilename+0x18c>
     88c:	adrp	x0, 0 <__llvm_profile_set_file_object>
     890:	add	x0, x0, #0x0
     894:	bl	0 <getenv>
     898:	cbz	x0, 904 <parseAndSetFilename+0x18c>
     89c:	adrp	x8, 0 <stderr>
     8a0:	ldr	x8, [x8]
     8a4:	ldr	x0, [x8]
     8a8:	ldur	x2, [x29, #-24]
     8ac:	ldur	w9, [x29, #-28]
     8b0:	str	x0, [sp, #40]
     8b4:	mov	w0, w9
     8b8:	str	x2, [sp, #32]
     8bc:	bl	1730 <getPNSStr>
     8c0:	ldur	x8, [x29, #-40]
     8c4:	ldr	x4, [x8]
     8c8:	ldur	w9, [x29, #-12]
     8cc:	str	x0, [sp, #24]
     8d0:	mov	w0, w9
     8d4:	str	x4, [sp, #16]
     8d8:	bl	1730 <getPNSStr>
     8dc:	ldr	x8, [sp, #40]
     8e0:	str	x0, [sp, #8]
     8e4:	mov	x0, x8
     8e8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     8ec:	add	x1, x1, #0x0
     8f0:	ldr	x2, [sp, #32]
     8f4:	ldr	x3, [sp, #24]
     8f8:	ldr	x4, [sp, #16]
     8fc:	ldr	x5, [sp, #8]
     900:	bl	0 <fprintf>
     904:	bl	17c4 <truncateCurrentFile>
     908:	bl	18c0 <initializeProfileForContinuousMode>
     90c:	ldp	x29, x30, [sp, #112]
     910:	add	sp, sp, #0x80
     914:	ret

0000000000000918 <__llvm_profile_set_filename>:
     918:	sub	sp, sp, #0x20
     91c:	stp	x29, x30, [sp, #16]
     920:	add	x29, sp, #0x10
     924:	str	x0, [sp, #8]
     928:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     92c:	cbz	w0, 934 <__llvm_profile_set_filename+0x1c>
     930:	b	944 <__llvm_profile_set_filename+0x2c>
     934:	ldr	x0, [sp, #8]
     938:	mov	w1, #0x4                   	// #4
     93c:	mov	w2, #0x1                   	// #1
     940:	bl	778 <parseAndSetFilename>
     944:	ldp	x29, x30, [sp, #16]
     948:	add	sp, sp, #0x20
     94c:	ret

0000000000000950 <__llvm_profile_write_file>:
     950:	stp	x29, x30, [sp, #-16]!
     954:	mov	x29, sp
     958:	sub	sp, sp, #0x60
     95c:	adrp	x8, 0 <lprofProfileDumped>
     960:	ldr	x8, [x8]
     964:	adrp	x9, 0 <stderr>
     968:	ldr	x9, [x9]
     96c:	adrp	x10, 0 <lprofSuspendSigKill>
     970:	ldr	x10, [x10]
     974:	adrp	x11, 0 <lprofRestoreSigKill>
     978:	ldr	x11, [x11]
     97c:	stur	wzr, [x29, #-36]
     980:	stur	x9, [x29, #-48]
     984:	stur	x10, [x29, #-56]
     988:	stur	x11, [x29, #-64]
     98c:	blr	x8
     990:	cbnz	w0, 99c <__llvm_profile_write_file+0x4c>
     994:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
     998:	cbz	w0, 9c0 <__llvm_profile_write_file+0x70>
     99c:	ldur	x8, [x29, #-48]
     9a0:	ldr	x0, [x8]
     9a4:	adrp	x1, 0 <__llvm_profile_set_file_object>
     9a8:	add	x1, x1, #0x0
     9ac:	adrp	x2, 0 <__llvm_profile_set_file_object>
     9b0:	add	x2, x2, #0x0
     9b4:	bl	0 <fprintf>
     9b8:	stur	wzr, [x29, #-4]
     9bc:	b	af8 <__llvm_profile_write_file+0x1a8>
     9c0:	bl	1200 <getCurFilenameLength>
     9c4:	stur	w0, [x29, #-12]
     9c8:	ldur	w8, [x29, #-12]
     9cc:	add	w8, w8, #0x1
     9d0:	mov	x9, #0xf                   	// #15
     9d4:	mov	w10, #0x1                   	// #1
     9d8:	smaddl	x9, w8, w10, x9
     9dc:	and	x9, x9, #0xfffffffffffffff0
     9e0:	mov	x11, sp
     9e4:	subs	x9, x11, x9
     9e8:	mov	sp, x9
     9ec:	stur	x9, [x29, #-32]
     9f0:	ldur	x0, [x29, #-32]
     9f4:	mov	w8, wzr
     9f8:	mov	w1, w8
     9fc:	bl	300 <getCurFilename>
     a00:	stur	x0, [x29, #-24]
     a04:	ldur	x9, [x29, #-24]
     a08:	cbnz	x9, a34 <__llvm_profile_write_file+0xe4>
     a0c:	ldur	x8, [x29, #-48]
     a10:	ldr	x0, [x8]
     a14:	adrp	x1, 0 <__llvm_profile_set_file_object>
     a18:	add	x1, x1, #0x0
     a1c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     a20:	add	x2, x2, #0x0
     a24:	bl	0 <fprintf>
     a28:	mov	w9, #0xffffffff            	// #-1
     a2c:	stur	w9, [x29, #-4]
     a30:	b	af8 <__llvm_profile_write_file+0x1a8>
     a34:	bl	0 <__llvm_profile_get_version>
     a38:	and	x8, x0, #0xffffffffffffff
     a3c:	cmp	x8, #0x5
     a40:	b.eq	a7c <__llvm_profile_write_file+0x12c>  // b.none
     a44:	ldur	x8, [x29, #-48]
     a48:	ldr	x0, [x8]
     a4c:	stur	x0, [x29, #-72]
     a50:	bl	0 <__llvm_profile_get_version>
     a54:	and	x8, x0, #0xffffffffffffff
     a58:	ldur	x0, [x29, #-72]
     a5c:	adrp	x1, 0 <__llvm_profile_set_file_object>
     a60:	add	x1, x1, #0x0
     a64:	mov	w2, #0x5                   	// #5
     a68:	mov	w3, w8
     a6c:	bl	0 <fprintf>
     a70:	mov	w8, #0xffffffff            	// #-1
     a74:	stur	w8, [x29, #-4]
     a78:	b	af8 <__llvm_profile_write_file+0x1a8>
     a7c:	ldur	x8, [x29, #-56]
     a80:	blr	x8
     a84:	stur	w0, [x29, #-36]
     a88:	ldur	x0, [x29, #-24]
     a8c:	bl	b08 <writeFile>
     a90:	stur	w0, [x29, #-8]
     a94:	ldur	w9, [x29, #-8]
     a98:	cbz	w9, adc <__llvm_profile_write_file+0x18c>
     a9c:	ldur	x8, [x29, #-48]
     aa0:	ldr	x0, [x8]
     aa4:	ldur	x2, [x29, #-24]
     aa8:	stur	x0, [x29, #-80]
     aac:	stur	x2, [x29, #-88]
     ab0:	bl	0 <__errno_location>
     ab4:	ldr	w0, [x0]
     ab8:	bl	0 <strerror>
     abc:	ldur	x8, [x29, #-80]
     ac0:	stur	x0, [x29, #-96]
     ac4:	mov	x0, x8
     ac8:	adrp	x1, 0 <__llvm_profile_set_file_object>
     acc:	add	x1, x1, #0x0
     ad0:	ldur	x2, [x29, #-88]
     ad4:	ldur	x3, [x29, #-96]
     ad8:	bl	0 <fprintf>
     adc:	ldur	w8, [x29, #-36]
     ae0:	cmp	w8, #0x1
     ae4:	b.ne	af0 <__llvm_profile_write_file+0x1a0>  // b.any
     ae8:	ldur	x8, [x29, #-64]
     aec:	blr	x8
     af0:	ldur	w8, [x29, #-8]
     af4:	stur	w8, [x29, #-4]
     af8:	ldur	w0, [x29, #-4]
     afc:	mov	sp, x29
     b00:	ldp	x29, x30, [sp], #16
     b04:	ret

0000000000000b08 <writeFile>:
     b08:	sub	sp, sp, #0x70
     b0c:	stp	x29, x30, [sp, #96]
     b10:	add	x29, sp, #0x60
     b14:	adrp	x8, 0 <lprofMergeValueProfData>
     b18:	ldr	x8, [x8]
     b1c:	adrp	x9, 0 <VPMergeHook>
     b20:	ldr	x9, [x9]
     b24:	adrp	x10, 0 <lprofGetVPDataReader>
     b28:	ldr	x10, [x10]
     b2c:	stur	x0, [x29, #-16]
     b30:	stur	wzr, [x29, #-36]
     b34:	str	x8, [x9]
     b38:	str	x10, [sp, #32]
     b3c:	bl	23d8 <doMerging>
     b40:	cbz	w0, b58 <writeFile+0x50>
     b44:	ldur	x0, [x29, #-16]
     b48:	sub	x1, x29, #0x24
     b4c:	bl	20f4 <openFileForMerging>
     b50:	stur	x0, [x29, #-32]
     b54:	b	b64 <writeFile+0x5c>
     b58:	ldur	x0, [x29, #-16]
     b5c:	bl	2228 <getFileObject>
     b60:	stur	x0, [x29, #-32]
     b64:	ldur	x8, [x29, #-32]
     b68:	cbnz	x8, b78 <writeFile+0x70>
     b6c:	mov	w8, #0xffffffff            	// #-1
     b70:	stur	w8, [x29, #-4]
     b74:	b	c0c <writeFile+0x104>
     b78:	adrp	x8, 0 <FreeHook>
     b7c:	add	x8, x8, #0x0
     b80:	adrp	x9, 0 <free>
     b84:	ldr	x9, [x9]
     b88:	str	x9, [x8]
     b8c:	bl	2354 <setupIOBuffer>
     b90:	ldur	x1, [x29, #-32]
     b94:	add	x8, sp, #0x28
     b98:	mov	x0, x8
     b9c:	str	x8, [sp, #24]
     ba0:	bl	174 <initFileWriter>
     ba4:	ldr	x8, [sp, #32]
     ba8:	blr	x8
     bac:	ldur	w2, [x29, #-36]
     bb0:	ldr	x8, [sp, #24]
     bb4:	str	x0, [sp, #16]
     bb8:	mov	x0, x8
     bbc:	ldr	x1, [sp, #16]
     bc0:	bl	0 <lprofWriteData>
     bc4:	stur	w0, [x29, #-20]
     bc8:	ldur	x8, [x29, #-32]
     bcc:	str	x8, [sp, #8]
     bd0:	bl	23c8 <getProfileFile>
     bd4:	ldr	x8, [sp, #8]
     bd8:	cmp	x8, x0
     bdc:	b.ne	bfc <writeFile+0xf4>  // b.any
     be0:	ldur	x0, [x29, #-32]
     be4:	bl	0 <fflush>
     be8:	bl	23d8 <doMerging>
     bec:	cbz	w0, bf8 <writeFile+0xf0>
     bf0:	ldur	x0, [x29, #-32]
     bf4:	bl	0 <lprofUnlockFileHandle>
     bf8:	b	c04 <writeFile+0xfc>
     bfc:	ldur	x0, [x29, #-32]
     c00:	bl	0 <fclose>
     c04:	ldur	w8, [x29, #-20]
     c08:	stur	w8, [x29, #-4]
     c0c:	ldur	w0, [x29, #-4]
     c10:	ldp	x29, x30, [sp, #96]
     c14:	add	sp, sp, #0x70
     c18:	ret

0000000000000c1c <__llvm_profile_dump>:
     c1c:	sub	sp, sp, #0x20
     c20:	stp	x29, x30, [sp, #16]
     c24:	add	x29, sp, #0x10
     c28:	adrp	x8, 0 <lprofSetProfileDumped>
     c2c:	ldr	x8, [x8]
     c30:	str	x8, [sp]
     c34:	bl	23d8 <doMerging>
     c38:	cbnz	w0, c5c <__llvm_profile_dump+0x40>
     c3c:	adrp	x8, 0 <stderr>
     c40:	ldr	x8, [x8]
     c44:	ldr	x0, [x8]
     c48:	adrp	x1, 0 <__llvm_profile_set_file_object>
     c4c:	add	x1, x1, #0x0
     c50:	adrp	x2, 0 <__llvm_profile_set_file_object>
     c54:	add	x2, x2, #0x0
     c58:	bl	0 <fprintf>
     c5c:	bl	950 <__llvm_profile_write_file>
     c60:	stur	w0, [x29, #-4]
     c64:	ldr	x8, [sp]
     c68:	blr	x8
     c6c:	ldur	w0, [x29, #-4]
     c70:	ldp	x29, x30, [sp, #16]
     c74:	add	sp, sp, #0x20
     c78:	ret

0000000000000c7c <__llvm_orderfile_write_file>:
     c7c:	stp	x29, x30, [sp, #-16]!
     c80:	mov	x29, sp
     c84:	sub	sp, sp, #0x70
     c88:	adrp	x8, 0 <__llvm_profile_set_file_object>
     c8c:	add	x8, x8, #0x0
     c90:	mov	w1, #0x1                   	// #1
     c94:	adrp	x9, 0 <stderr>
     c98:	ldr	x9, [x9]
     c9c:	adrp	x10, 0 <lprofSuspendSigKill>
     ca0:	ldr	x10, [x10]
     ca4:	adrp	x11, 0 <lprofRestoreSigKill>
     ca8:	ldr	x11, [x11]
     cac:	stur	wzr, [x29, #-44]
     cb0:	ldr	x0, [x8]
     cb4:	stur	w1, [x29, #-48]
     cb8:	stur	x9, [x29, #-56]
     cbc:	stur	x10, [x29, #-64]
     cc0:	stur	x11, [x29, #-72]
     cc4:	bl	0 <strlen>
     cc8:	stur	w0, [x29, #-20]
     ccc:	bl	1200 <getCurFilenameLength>
     cd0:	ldur	w12, [x29, #-20]
     cd4:	add	w12, w0, w12
     cd8:	stur	w12, [x29, #-12]
     cdc:	ldur	w12, [x29, #-12]
     ce0:	add	w12, w12, #0x1
     ce4:	mov	x8, #0xf                   	// #15
     ce8:	mov	w13, #0x1                   	// #1
     cec:	smaddl	x8, w12, w13, x8
     cf0:	and	x8, x8, #0xfffffffffffffff0
     cf4:	mov	x9, sp
     cf8:	subs	x8, x9, x8
     cfc:	mov	sp, x8
     d00:	stur	x8, [x29, #-40]
     d04:	ldur	x0, [x29, #-40]
     d08:	ldur	w1, [x29, #-48]
     d0c:	bl	300 <getCurFilename>
     d10:	stur	x0, [x29, #-32]
     d14:	ldur	x8, [x29, #-32]
     d18:	cbnz	x8, d44 <__llvm_orderfile_write_file+0xc8>
     d1c:	ldur	x8, [x29, #-56]
     d20:	ldr	x0, [x8]
     d24:	adrp	x1, 0 <__llvm_profile_set_file_object>
     d28:	add	x1, x1, #0x0
     d2c:	adrp	x2, 0 <__llvm_profile_set_file_object>
     d30:	add	x2, x2, #0x0
     d34:	bl	0 <fprintf>
     d38:	mov	w9, #0xffffffff            	// #-1
     d3c:	stur	w9, [x29, #-4]
     d40:	b	e58 <__llvm_orderfile_write_file+0x1dc>
     d44:	ldur	x0, [x29, #-32]
     d48:	bl	0 <strlen>
     d4c:	stur	w0, [x29, #-16]
     d50:	ldur	x8, [x29, #-40]
     d54:	ldursw	x9, [x29, #-16]
     d58:	add	x0, x8, x9
     d5c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     d60:	add	x8, x8, #0x0
     d64:	ldr	x1, [x8]
     d68:	ldursw	x2, [x29, #-20]
     d6c:	bl	0 <memcpy>
     d70:	ldur	x8, [x29, #-40]
     d74:	ldur	w10, [x29, #-16]
     d78:	ldur	w11, [x29, #-20]
     d7c:	add	w10, w10, w11
     d80:	mov	w0, w10
     d84:	sxtw	x9, w0
     d88:	add	x8, x8, x9
     d8c:	mov	w10, #0x0                   	// #0
     d90:	strb	w10, [x8]
     d94:	bl	0 <__llvm_profile_get_version>
     d98:	and	x8, x0, #0xffffffffffffff
     d9c:	cmp	x8, #0x5
     da0:	b.eq	ddc <__llvm_orderfile_write_file+0x160>  // b.none
     da4:	ldur	x8, [x29, #-56]
     da8:	ldr	x0, [x8]
     dac:	stur	x0, [x29, #-80]
     db0:	bl	0 <__llvm_profile_get_version>
     db4:	and	x8, x0, #0xffffffffffffff
     db8:	ldur	x0, [x29, #-80]
     dbc:	adrp	x1, 0 <__llvm_profile_set_file_object>
     dc0:	add	x1, x1, #0x0
     dc4:	mov	w2, #0x5                   	// #5
     dc8:	mov	w3, w8
     dcc:	bl	0 <fprintf>
     dd0:	mov	w8, #0xffffffff            	// #-1
     dd4:	stur	w8, [x29, #-4]
     dd8:	b	e58 <__llvm_orderfile_write_file+0x1dc>
     ddc:	ldur	x8, [x29, #-64]
     de0:	blr	x8
     de4:	stur	w0, [x29, #-44]
     de8:	ldur	x0, [x29, #-32]
     dec:	bl	e68 <writeOrderFile>
     df0:	stur	w0, [x29, #-8]
     df4:	ldur	w9, [x29, #-8]
     df8:	cbz	w9, e3c <__llvm_orderfile_write_file+0x1c0>
     dfc:	ldur	x8, [x29, #-56]
     e00:	ldr	x0, [x8]
     e04:	ldur	x2, [x29, #-32]
     e08:	stur	x0, [x29, #-88]
     e0c:	stur	x2, [x29, #-96]
     e10:	bl	0 <__errno_location>
     e14:	ldr	w0, [x0]
     e18:	bl	0 <strerror>
     e1c:	ldur	x8, [x29, #-88]
     e20:	stur	x0, [x29, #-104]
     e24:	mov	x0, x8
     e28:	adrp	x1, 0 <__llvm_profile_set_file_object>
     e2c:	add	x1, x1, #0x0
     e30:	ldur	x2, [x29, #-96]
     e34:	ldur	x3, [x29, #-104]
     e38:	bl	0 <fprintf>
     e3c:	ldur	w8, [x29, #-44]
     e40:	cmp	w8, #0x1
     e44:	b.ne	e50 <__llvm_orderfile_write_file+0x1d4>  // b.any
     e48:	ldur	x8, [x29, #-72]
     e4c:	blr	x8
     e50:	ldur	w8, [x29, #-8]
     e54:	stur	w8, [x29, #-4]
     e58:	ldur	w0, [x29, #-4]
     e5c:	mov	sp, x29
     e60:	ldp	x29, x30, [sp], #16
     e64:	ret

0000000000000e68 <writeOrderFile>:
     e68:	sub	sp, sp, #0x40
     e6c:	stp	x29, x30, [sp, #48]
     e70:	add	x29, sp, #0x30
     e74:	adrp	x1, 0 <__llvm_profile_set_file_object>
     e78:	add	x1, x1, #0x0
     e7c:	adrp	x8, 0 <__llvm_profile_begin_orderfile>
     e80:	ldr	x8, [x8]
     e84:	stur	x0, [x29, #-16]
     e88:	ldur	x0, [x29, #-16]
     e8c:	str	x8, [sp]
     e90:	bl	0 <fopen>
     e94:	str	x0, [sp, #16]
     e98:	ldr	x8, [sp, #16]
     e9c:	cbnz	x8, ec8 <writeOrderFile+0x60>
     ea0:	adrp	x8, 0 <stderr>
     ea4:	ldr	x8, [x8]
     ea8:	ldr	x0, [x8]
     eac:	ldur	x2, [x29, #-16]
     eb0:	adrp	x1, 0 <__llvm_profile_set_file_object>
     eb4:	add	x1, x1, #0x0
     eb8:	bl	0 <fprintf>
     ebc:	mov	w9, #0xffffffff            	// #-1
     ec0:	stur	w9, [x29, #-4]
     ec4:	b	f0c <writeOrderFile+0xa4>
     ec8:	adrp	x8, 0 <FreeHook>
     ecc:	add	x8, x8, #0x0
     ed0:	adrp	x9, 0 <free>
     ed4:	ldr	x9, [x9]
     ed8:	str	x9, [x8]
     edc:	bl	2354 <setupIOBuffer>
     ee0:	ldr	x8, [sp]
     ee4:	blr	x8
     ee8:	str	x0, [sp, #8]
     eec:	ldr	x0, [sp, #16]
     ef0:	ldr	x1, [sp, #8]
     ef4:	bl	2430 <orderFileWriter>
     ef8:	stur	w0, [x29, #-20]
     efc:	ldr	x0, [sp, #16]
     f00:	bl	0 <fclose>
     f04:	ldur	w10, [x29, #-20]
     f08:	stur	w10, [x29, #-4]
     f0c:	ldur	w0, [x29, #-4]
     f10:	ldp	x29, x30, [sp, #48]
     f14:	add	sp, sp, #0x40
     f18:	ret

0000000000000f1c <__llvm_orderfile_dump>:
     f1c:	sub	sp, sp, #0x20
     f20:	stp	x29, x30, [sp, #16]
     f24:	add	x29, sp, #0x10
     f28:	bl	c7c <__llvm_orderfile_write_file>
     f2c:	stur	w0, [x29, #-4]
     f30:	ldur	w0, [x29, #-4]
     f34:	ldp	x29, x30, [sp, #16]
     f38:	add	sp, sp, #0x20
     f3c:	ret

0000000000000f40 <__llvm_profile_register_write_file_atexit>:
     f40:	sub	sp, sp, #0x20
     f44:	stp	x29, x30, [sp, #16]
     f48:	add	x29, sp, #0x10
     f4c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     f50:	add	x8, x8, #0x0
     f54:	adrp	x9, 0 <lprofSetupValueProfiler>
     f58:	ldr	x9, [x9]
     f5c:	ldr	w10, [x8]
     f60:	str	x9, [sp]
     f64:	cbz	w10, f70 <__llvm_profile_register_write_file_atexit+0x30>
     f68:	stur	wzr, [x29, #-4]
     f6c:	b	f98 <__llvm_profile_register_write_file_atexit+0x58>
     f70:	ldr	x8, [sp]
     f74:	blr	x8
     f78:	mov	w9, #0x1                   	// #1
     f7c:	adrp	x8, 0 <__llvm_profile_set_file_object>
     f80:	add	x8, x8, #0x0
     f84:	str	w9, [x8]
     f88:	adrp	x0, 0 <__llvm_profile_set_file_object>
     f8c:	add	x0, x0, #0x0
     f90:	bl	0 <atexit>
     f94:	stur	w0, [x29, #-4]
     f98:	ldur	w0, [x29, #-4]
     f9c:	ldp	x29, x30, [sp, #16]
     fa0:	add	sp, sp, #0x20
     fa4:	ret

0000000000000fa8 <writeFileWithoutReturn>:
     fa8:	stp	x29, x30, [sp, #-16]!
     fac:	mov	x29, sp
     fb0:	bl	950 <__llvm_profile_write_file>
     fb4:	ldp	x29, x30, [sp], #16
     fb8:	ret

0000000000000fbc <fileWriter>:
     fbc:	sub	sp, sp, #0x60
     fc0:	stp	x29, x30, [sp, #80]
     fc4:	add	x29, sp, #0x50
     fc8:	stur	x0, [x29, #-16]
     fcc:	stur	x1, [x29, #-24]
     fd0:	stur	w2, [x29, #-28]
     fd4:	ldur	x8, [x29, #-16]
     fd8:	ldr	x8, [x8, #8]
     fdc:	str	x8, [sp, #40]
     fe0:	str	xzr, [sp, #32]
     fe4:	stur	wzr, [x29, #-32]
     fe8:	ldur	w8, [x29, #-32]
     fec:	ldur	w9, [x29, #-28]
     ff0:	cmp	w8, w9
     ff4:	b.cs	11ec <fileWriter+0x230>  // b.hs, b.nlast
     ff8:	ldur	x8, [x29, #-24]
     ffc:	ldur	w9, [x29, #-32]
    1000:	mov	w10, w9
    1004:	mov	x11, #0x20                  	// #32
    1008:	mul	x10, x11, x10
    100c:	add	x8, x8, x10
    1010:	ldr	x8, [x8]
    1014:	cbz	x8, 10a4 <fileWriter+0xe8>
    1018:	ldur	x8, [x29, #-24]
    101c:	ldur	w9, [x29, #-32]
    1020:	mov	w10, w9
    1024:	mov	x11, #0x20                  	// #32
    1028:	mul	x10, x11, x10
    102c:	add	x8, x8, x10
    1030:	ldr	x0, [x8]
    1034:	ldur	x8, [x29, #-24]
    1038:	ldur	w9, [x29, #-32]
    103c:	mov	w10, w9
    1040:	mul	x10, x11, x10
    1044:	add	x8, x8, x10
    1048:	ldr	x1, [x8, #8]
    104c:	ldur	x8, [x29, #-24]
    1050:	ldur	w9, [x29, #-32]
    1054:	mov	w10, w9
    1058:	mul	x10, x11, x10
    105c:	add	x8, x8, x10
    1060:	ldr	x2, [x8, #16]
    1064:	ldr	x3, [sp, #40]
    1068:	str	x11, [sp, #8]
    106c:	bl	0 <fwrite>
    1070:	ldur	x8, [x29, #-24]
    1074:	ldur	w9, [x29, #-32]
    1078:	mov	w10, w9
    107c:	ldr	x11, [sp, #8]
    1080:	mul	x10, x11, x10
    1084:	add	x8, x8, x10
    1088:	ldr	x8, [x8, #16]
    108c:	cmp	x0, x8
    1090:	b.eq	10a0 <fileWriter+0xe4>  // b.none
    1094:	mov	w8, #0x1                   	// #1
    1098:	stur	w8, [x29, #-4]
    109c:	b	11f0 <fileWriter+0x234>
    10a0:	b	11dc <fileWriter+0x220>
    10a4:	ldur	x8, [x29, #-24]
    10a8:	ldur	w9, [x29, #-32]
    10ac:	mov	w10, w9
    10b0:	mov	x11, #0x20                  	// #32
    10b4:	mul	x10, x11, x10
    10b8:	add	x8, x8, x10
    10bc:	ldr	w9, [x8, #24]
    10c0:	cbz	w9, 1180 <fileWriter+0x1c4>
    10c4:	ldur	x8, [x29, #-24]
    10c8:	ldur	w9, [x29, #-32]
    10cc:	mov	w10, w9
    10d0:	mov	x11, #0x20                  	// #32
    10d4:	mul	x10, x11, x10
    10d8:	add	x8, x8, x10
    10dc:	ldr	x8, [x8, #8]
    10e0:	ldur	x10, [x29, #-24]
    10e4:	ldur	w9, [x29, #-32]
    10e8:	mov	w12, w9
    10ec:	mul	x11, x11, x12
    10f0:	add	x10, x10, x11
    10f4:	ldr	x10, [x10, #16]
    10f8:	mul	x8, x8, x10
    10fc:	str	x8, [sp, #24]
    1100:	ldr	x8, [sp, #24]
    1104:	cmp	x8, #0x0
    1108:	cset	w9, ls  // ls = plast
    110c:	tbnz	w9, #0, 117c <fileWriter+0x1c0>
    1110:	ldr	x8, [sp, #24]
    1114:	mov	x9, #0x8                   	// #8
    1118:	cmp	x9, x8
    111c:	b.ls	112c <fileWriter+0x170>  // b.plast
    1120:	ldr	x8, [sp, #24]
    1124:	str	x8, [sp]
    1128:	b	1134 <fileWriter+0x178>
    112c:	mov	x8, #0x8                   	// #8
    1130:	str	x8, [sp]
    1134:	ldr	x8, [sp]
    1138:	str	x8, [sp, #16]
    113c:	ldr	x2, [sp, #16]
    1140:	ldr	x3, [sp, #40]
    1144:	add	x0, sp, #0x20
    1148:	mov	x1, #0x1                   	// #1
    114c:	bl	0 <fwrite>
    1150:	ldr	x8, [sp, #16]
    1154:	cmp	x0, x8
    1158:	b.eq	1168 <fileWriter+0x1ac>  // b.none
    115c:	mov	w8, #0x1                   	// #1
    1160:	stur	w8, [x29, #-4]
    1164:	b	11f0 <fileWriter+0x234>
    1168:	ldr	x8, [sp, #16]
    116c:	ldr	x9, [sp, #24]
    1170:	subs	x8, x9, x8
    1174:	str	x8, [sp, #24]
    1178:	b	1100 <fileWriter+0x144>
    117c:	b	11dc <fileWriter+0x220>
    1180:	ldr	x0, [sp, #40]
    1184:	ldur	x8, [x29, #-24]
    1188:	ldur	w9, [x29, #-32]
    118c:	mov	w10, w9
    1190:	mov	x11, #0x20                  	// #32
    1194:	mul	x10, x11, x10
    1198:	add	x8, x8, x10
    119c:	ldr	x8, [x8, #8]
    11a0:	ldur	x10, [x29, #-24]
    11a4:	ldur	w9, [x29, #-32]
    11a8:	mov	w12, w9
    11ac:	mul	x11, x11, x12
    11b0:	add	x10, x10, x11
    11b4:	ldr	x10, [x10, #16]
    11b8:	mul	x1, x8, x10
    11bc:	mov	w2, #0x1                   	// #1
    11c0:	bl	0 <fseek>
    11c4:	mov	w9, #0xffffffff            	// #-1
    11c8:	cmp	w0, w9
    11cc:	b.ne	11dc <fileWriter+0x220>  // b.any
    11d0:	mov	w8, #0x1                   	// #1
    11d4:	stur	w8, [x29, #-4]
    11d8:	b	11f0 <fileWriter+0x234>
    11dc:	ldur	w8, [x29, #-32]
    11e0:	add	w8, w8, #0x1
    11e4:	stur	w8, [x29, #-32]
    11e8:	b	fe8 <fileWriter+0x2c>
    11ec:	stur	wzr, [x29, #-4]
    11f0:	ldur	w0, [x29, #-4]
    11f4:	ldp	x29, x30, [sp, #80]
    11f8:	add	sp, sp, #0x60
    11fc:	ret

0000000000001200 <getCurFilenameLength>:
    1200:	sub	sp, sp, #0x50
    1204:	stp	x29, x30, [sp, #64]
    1208:	add	x29, sp, #0x40
    120c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1210:	add	x8, x8, #0x0
    1214:	add	x0, x8, #0x18
    1218:	add	x9, x8, #0x28
    121c:	ldr	x10, [x8]
    1220:	stur	x8, [x29, #-16]
    1224:	stur	x0, [x29, #-24]
    1228:	str	x9, [sp, #32]
    122c:	cbz	x10, 1240 <getCurFilenameLength+0x40>
    1230:	ldur	x8, [x29, #-16]
    1234:	ldr	x9, [x8]
    1238:	ldrb	w10, [x9]
    123c:	cbnz	w10, 1248 <getCurFilenameLength+0x48>
    1240:	stur	wzr, [x29, #-4]
    1244:	b	1314 <getCurFilenameLength+0x114>
    1248:	ldur	x8, [x29, #-16]
    124c:	ldr	w9, [x8, #168]
    1250:	cbnz	w9, 1280 <getCurFilenameLength+0x80>
    1254:	ldur	x8, [x29, #-16]
    1258:	ldr	w9, [x8, #172]
    125c:	cbnz	w9, 1280 <getCurFilenameLength+0x80>
    1260:	ldur	x8, [x29, #-16]
    1264:	ldr	w9, [x8, #176]
    1268:	cbnz	w9, 1280 <getCurFilenameLength+0x80>
    126c:	ldur	x8, [x29, #-16]
    1270:	ldr	x0, [x8]
    1274:	bl	0 <strlen>
    1278:	stur	w0, [x29, #-4]
    127c:	b	1314 <getCurFilenameLength+0x114>
    1280:	ldur	x8, [x29, #-16]
    1284:	ldr	x0, [x8]
    1288:	bl	0 <strlen>
    128c:	ldur	x8, [x29, #-16]
    1290:	ldr	w9, [x8, #168]
    1294:	mov	w10, w9
    1298:	ldur	x11, [x29, #-24]
    129c:	str	x0, [sp, #24]
    12a0:	mov	x0, x11
    12a4:	str	x10, [sp, #16]
    12a8:	bl	0 <strlen>
    12ac:	subs	x8, x0, #0x2
    12b0:	ldr	x10, [sp, #16]
    12b4:	mul	x8, x10, x8
    12b8:	ldr	x11, [sp, #24]
    12bc:	add	x8, x11, x8
    12c0:	ldur	x12, [x29, #-16]
    12c4:	ldr	w9, [x12, #172]
    12c8:	mov	w13, w9
    12cc:	ldr	x0, [sp, #32]
    12d0:	str	x8, [sp, #8]
    12d4:	str	x13, [sp]
    12d8:	bl	0 <strlen>
    12dc:	subs	x8, x0, #0x2
    12e0:	ldr	x10, [sp]
    12e4:	mul	x8, x10, x8
    12e8:	ldr	x11, [sp, #8]
    12ec:	add	x8, x11, x8
    12f0:	stur	w8, [x29, #-8]
    12f4:	ldur	x12, [x29, #-16]
    12f8:	ldr	w8, [x12, #176]
    12fc:	cbz	w8, 130c <getCurFilenameLength+0x10c>
    1300:	ldur	w8, [x29, #-8]
    1304:	add	w8, w8, #0x18
    1308:	stur	w8, [x29, #-8]
    130c:	ldur	w8, [x29, #-8]
    1310:	stur	w8, [x29, #-4]
    1314:	ldur	w0, [x29, #-4]
    1318:	ldp	x29, x30, [sp, #64]
    131c:	add	sp, sp, #0x50
    1320:	ret

0000000000001324 <getMergePoolSize>:
    1324:	sub	sp, sp, #0x30
    1328:	str	x0, [sp, #32]
    132c:	str	x1, [sp, #24]
    1330:	str	wzr, [sp, #20]
    1334:	str	wzr, [sp, #16]
    1338:	ldr	x8, [sp, #32]
    133c:	ldr	x9, [sp, #24]
    1340:	ldr	w10, [x9]
    1344:	ldr	w11, [sp, #20]
    1348:	add	w10, w10, w11
    134c:	mov	w9, w10
    1350:	ubfx	x9, x9, #0, #32
    1354:	add	x8, x8, x9
    1358:	ldrb	w10, [x8]
    135c:	strb	w10, [sp, #15]
    1360:	ldrb	w10, [sp, #15]
    1364:	cmp	w10, #0x6d
    1368:	b.ne	13a8 <getMergePoolSize+0x84>  // b.any
    136c:	ldr	w8, [sp, #20]
    1370:	ldr	x9, [sp, #24]
    1374:	ldr	w10, [x9]
    1378:	add	w8, w10, w8
    137c:	str	w8, [x9]
    1380:	ldr	w8, [sp, #16]
    1384:	cbz	w8, 1394 <getMergePoolSize+0x70>
    1388:	ldr	w8, [sp, #16]
    138c:	str	w8, [sp, #8]
    1390:	b	139c <getMergePoolSize+0x78>
    1394:	mov	w8, #0x1                   	// #1
    1398:	str	w8, [sp, #8]
    139c:	ldr	w8, [sp, #8]
    13a0:	str	w8, [sp, #44]
    13a4:	b	13f4 <getMergePoolSize+0xd0>
    13a8:	ldrb	w8, [sp, #15]
    13ac:	cmp	w8, #0x30
    13b0:	b.lt	13c0 <getMergePoolSize+0x9c>  // b.tstop
    13b4:	ldrb	w8, [sp, #15]
    13b8:	cmp	w8, #0x39
    13bc:	b.le	13c4 <getMergePoolSize+0xa0>
    13c0:	b	13f0 <getMergePoolSize+0xcc>
    13c4:	ldr	w8, [sp, #16]
    13c8:	mov	w9, #0xa                   	// #10
    13cc:	mul	w8, w8, w9
    13d0:	ldrb	w9, [sp, #15]
    13d4:	add	w8, w8, w9
    13d8:	subs	w8, w8, #0x30
    13dc:	str	w8, [sp, #16]
    13e0:	ldr	w8, [sp, #20]
    13e4:	add	w8, w8, #0x1
    13e8:	str	w8, [sp, #20]
    13ec:	b	1338 <getMergePoolSize+0x14>
    13f0:	str	wzr, [sp, #44]
    13f4:	ldr	w0, [sp, #44]
    13f8:	add	sp, sp, #0x30
    13fc:	ret

0000000000001400 <parseFilenamePattern>:
    1400:	sub	sp, sp, #0x60
    1404:	stp	x29, x30, [sp, #80]
    1408:	add	x29, sp, #0x50
    140c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1410:	add	x8, x8, #0x0
    1414:	add	x9, x8, #0x18
    1418:	add	x10, x8, #0x28
    141c:	adrp	x11, 0 <stderr>
    1420:	ldr	x11, [x11]
    1424:	stur	x0, [x29, #-16]
    1428:	stur	w1, [x29, #-20]
    142c:	stur	wzr, [x29, #-24]
    1430:	stur	wzr, [x29, #-28]
    1434:	str	x9, [sp, #40]
    1438:	str	x10, [sp, #32]
    143c:	str	wzr, [sp, #28]
    1440:	ldr	x9, [x8, #16]
    1444:	str	x8, [sp, #16]
    1448:	str	x11, [sp, #8]
    144c:	cbz	x9, 145c <parseFilenamePattern+0x5c>
    1450:	ldr	x8, [sp, #16]
    1454:	ldr	x0, [x8, #16]
    1458:	bl	0 <free>
    145c:	ldr	x8, [sp, #16]
    1460:	ldr	x9, [x8]
    1464:	cbz	x9, 1480 <parseFilenamePattern+0x80>
    1468:	ldr	x8, [sp, #16]
    146c:	ldr	w9, [x8, #8]
    1470:	cbz	w9, 1480 <parseFilenamePattern+0x80>
    1474:	ldr	x8, [sp, #16]
    1478:	ldr	x0, [x8]
    147c:	bl	0 <free>
    1480:	ldr	x0, [sp, #16]
    1484:	mov	w8, wzr
    1488:	mov	w1, w8
    148c:	mov	x2, #0xb8                  	// #184
    1490:	bl	0 <memset>
    1494:	ldur	w8, [x29, #-20]
    1498:	cbnz	w8, 14ac <parseFilenamePattern+0xac>
    149c:	ldur	x8, [x29, #-16]
    14a0:	ldr	x9, [sp, #16]
    14a4:	str	x8, [x9]
    14a8:	b	14c4 <parseFilenamePattern+0xc4>
    14ac:	ldur	x0, [x29, #-16]
    14b0:	bl	0 <strdup>
    14b4:	ldr	x8, [sp, #16]
    14b8:	str	x0, [x8]
    14bc:	mov	w9, #0x1                   	// #1
    14c0:	str	w9, [x8, #8]
    14c4:	stur	wzr, [x29, #-32]
    14c8:	ldur	x8, [x29, #-16]
    14cc:	ldursw	x9, [x29, #-32]
    14d0:	add	x8, x8, x9
    14d4:	ldrb	w10, [x8]
    14d8:	cbz	w10, 1694 <parseFilenamePattern+0x294>
    14dc:	ldur	x8, [x29, #-16]
    14e0:	ldursw	x9, [x29, #-32]
    14e4:	ldrb	w10, [x8, x9]
    14e8:	cmp	w10, #0x25
    14ec:	b.ne	1684 <parseFilenamePattern+0x284>  // b.any
    14f0:	ldur	x8, [x29, #-16]
    14f4:	ldur	w9, [x29, #-32]
    14f8:	add	w9, w9, #0x1
    14fc:	stur	w9, [x29, #-32]
    1500:	ldrb	w9, [x8, w9, sxtw]
    1504:	cmp	w9, #0x70
    1508:	b.ne	1578 <parseFilenamePattern+0x178>  // b.any
    150c:	ldur	w8, [x29, #-24]
    1510:	add	w9, w8, #0x1
    1514:	stur	w9, [x29, #-24]
    1518:	cbnz	w8, 1574 <parseFilenamePattern+0x174>
    151c:	ldr	x0, [sp, #40]
    1520:	str	x0, [sp]
    1524:	bl	0 <getpid>
    1528:	mov	w1, w0
    152c:	sxtw	x3, w1
    1530:	ldr	x0, [sp]
    1534:	mov	x1, #0x10                  	// #16
    1538:	adrp	x2, 0 <__llvm_profile_set_file_object>
    153c:	add	x2, x2, #0x0
    1540:	bl	0 <snprintf>
    1544:	cmp	w0, #0x0
    1548:	cset	w8, gt
    154c:	tbnz	w8, #0, 1574 <parseFilenamePattern+0x174>
    1550:	ldr	x8, [sp, #8]
    1554:	ldr	x0, [x8]
    1558:	ldur	x2, [x29, #-16]
    155c:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1560:	add	x1, x1, #0x0
    1564:	bl	0 <fprintf>
    1568:	mov	w9, #0xffffffff            	// #-1
    156c:	stur	w9, [x29, #-4]
    1570:	b	16ac <parseFilenamePattern+0x2ac>
    1574:	b	1684 <parseFilenamePattern+0x284>
    1578:	ldur	x8, [x29, #-16]
    157c:	ldursw	x9, [x29, #-32]
    1580:	ldrb	w10, [x8, x9]
    1584:	cmp	w10, #0x68
    1588:	b.ne	15d4 <parseFilenamePattern+0x1d4>  // b.any
    158c:	ldur	w8, [x29, #-28]
    1590:	add	w9, w8, #0x1
    1594:	stur	w9, [x29, #-28]
    1598:	cbnz	w8, 15d0 <parseFilenamePattern+0x1d0>
    159c:	ldr	x0, [sp, #32]
    15a0:	mov	w1, #0x80                  	// #128
    15a4:	bl	0 <lprofGetHostName>
    15a8:	cbz	w0, 15d0 <parseFilenamePattern+0x1d0>
    15ac:	ldr	x8, [sp, #8]
    15b0:	ldr	x0, [x8]
    15b4:	ldur	x2, [x29, #-16]
    15b8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    15bc:	add	x1, x1, #0x0
    15c0:	bl	0 <fprintf>
    15c4:	mov	w9, #0xffffffff            	// #-1
    15c8:	stur	w9, [x29, #-4]
    15cc:	b	16ac <parseFilenamePattern+0x2ac>
    15d0:	b	1684 <parseFilenamePattern+0x284>
    15d4:	ldur	x8, [x29, #-16]
    15d8:	ldursw	x9, [x29, #-32]
    15dc:	ldrb	w10, [x8, x9]
    15e0:	cmp	w10, #0x63
    15e4:	b.ne	1628 <parseFilenamePattern+0x228>  // b.any
    15e8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    15ec:	cbz	w0, 1614 <parseFilenamePattern+0x214>
    15f0:	ldr	x8, [sp, #8]
    15f4:	ldr	x0, [x8]
    15f8:	ldur	x2, [x29, #-16]
    15fc:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1600:	add	x1, x1, #0x0
    1604:	bl	0 <fprintf>
    1608:	mov	w9, #0xffffffff            	// #-1
    160c:	stur	w9, [x29, #-4]
    1610:	b	16ac <parseFilenamePattern+0x2ac>
    1614:	bl	0 <__llvm_profile_enable_continuous_mode>
    1618:	ldur	w8, [x29, #-32]
    161c:	add	w8, w8, #0x1
    1620:	stur	w8, [x29, #-32]
    1624:	b	1684 <parseFilenamePattern+0x284>
    1628:	ldur	x0, [x29, #-16]
    162c:	sub	x1, x29, #0x20
    1630:	bl	1324 <getMergePoolSize>
    1634:	str	w0, [sp, #24]
    1638:	ldr	w8, [sp, #24]
    163c:	cbnz	w8, 1644 <parseFilenamePattern+0x244>
    1640:	b	1684 <parseFilenamePattern+0x284>
    1644:	ldr	w8, [sp, #28]
    1648:	cbz	w8, 1670 <parseFilenamePattern+0x270>
    164c:	ldr	x8, [sp, #8]
    1650:	ldr	x0, [x8]
    1654:	ldur	x2, [x29, #-16]
    1658:	adrp	x1, 0 <__llvm_profile_set_file_object>
    165c:	add	x1, x1, #0x0
    1660:	bl	0 <fprintf>
    1664:	mov	w9, #0xffffffff            	// #-1
    1668:	stur	w9, [x29, #-4]
    166c:	b	16ac <parseFilenamePattern+0x2ac>
    1670:	mov	w8, #0x1                   	// #1
    1674:	str	w8, [sp, #28]
    1678:	ldr	w8, [sp, #24]
    167c:	ldr	x9, [sp, #16]
    1680:	str	w8, [x9, #176]
    1684:	ldur	w8, [x29, #-32]
    1688:	add	w8, w8, #0x1
    168c:	stur	w8, [x29, #-32]
    1690:	b	14c8 <parseFilenamePattern+0xc8>
    1694:	ldur	w8, [x29, #-24]
    1698:	ldr	x9, [sp, #16]
    169c:	str	w8, [x9, #168]
    16a0:	ldur	w8, [x29, #-28]
    16a4:	str	w8, [x9, #172]
    16a8:	stur	wzr, [x29, #-4]
    16ac:	ldur	w0, [x29, #-4]
    16b0:	ldp	x29, x30, [sp, #80]
    16b4:	add	sp, sp, #0x60
    16b8:	ret

00000000000016bc <resetFilenameToDefault>:
    16bc:	sub	sp, sp, #0x20
    16c0:	stp	x29, x30, [sp, #16]
    16c4:	add	x29, sp, #0x10
    16c8:	adrp	x8, 0 <__llvm_profile_set_file_object>
    16cc:	add	x8, x8, #0x0
    16d0:	ldr	x9, [x8]
    16d4:	str	x8, [sp, #8]
    16d8:	cbz	x9, 16f4 <resetFilenameToDefault+0x38>
    16dc:	ldr	x8, [sp, #8]
    16e0:	ldr	w9, [x8, #8]
    16e4:	cbz	w9, 16f4 <resetFilenameToDefault+0x38>
    16e8:	ldr	x8, [sp, #8]
    16ec:	ldr	x0, [x8]
    16f0:	bl	0 <free>
    16f4:	ldr	x0, [sp, #8]
    16f8:	mov	w8, wzr
    16fc:	mov	w1, w8
    1700:	mov	x2, #0xb8                  	// #184
    1704:	bl	0 <memset>
    1708:	adrp	x9, 0 <__llvm_profile_set_file_object>
    170c:	add	x9, x9, #0x0
    1710:	ldr	x9, [x9]
    1714:	ldr	x10, [sp, #8]
    1718:	str	x9, [x10]
    171c:	mov	w8, #0x1                   	// #1
    1720:	str	w8, [x10, #180]
    1724:	ldp	x29, x30, [sp, #16]
    1728:	add	sp, sp, #0x20
    172c:	ret

0000000000001730 <getPNSStr>:
    1730:	sub	sp, sp, #0x20
    1734:	str	w0, [sp, #20]
    1738:	ldr	w8, [sp, #20]
    173c:	subs	w8, w8, #0x1
    1740:	mov	w9, w8
    1744:	ubfx	x9, x9, #0, #32
    1748:	cmp	x9, #0x3
    174c:	str	x9, [sp, #8]
    1750:	b.hi	17ac <getPNSStr+0x7c>  // b.pmore
    1754:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1758:	add	x8, x8, #0x0
    175c:	ldr	x11, [sp, #8]
    1760:	ldrsw	x10, [x8, x11, lsl #2]
    1764:	add	x9, x8, x10
    1768:	br	x9
    176c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1770:	add	x8, x8, #0x0
    1774:	str	x8, [sp, #24]
    1778:	b	17b8 <getPNSStr+0x88>
    177c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1780:	add	x8, x8, #0x0
    1784:	str	x8, [sp, #24]
    1788:	b	17b8 <getPNSStr+0x88>
    178c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    1790:	add	x8, x8, #0x0
    1794:	str	x8, [sp, #24]
    1798:	b	17b8 <getPNSStr+0x88>
    179c:	adrp	x8, 0 <__llvm_profile_set_file_object>
    17a0:	add	x8, x8, #0x0
    17a4:	str	x8, [sp, #24]
    17a8:	b	17b8 <getPNSStr+0x88>
    17ac:	adrp	x8, 0 <__llvm_profile_set_file_object>
    17b0:	add	x8, x8, #0x0
    17b4:	str	x8, [sp, #24]
    17b8:	ldr	x0, [sp, #24]
    17bc:	add	sp, sp, #0x20
    17c0:	ret

00000000000017c4 <truncateCurrentFile>:
    17c4:	stp	x29, x30, [sp, #-16]!
    17c8:	mov	x29, sp
    17cc:	sub	sp, sp, #0x40
    17d0:	mov	w8, wzr
    17d4:	adrp	x9, 0 <__llvm_profile_set_file_object>
    17d8:	add	x9, x9, #0x0
    17dc:	adrp	x10, 0 <__llvm_profile_set_file_object>
    17e0:	add	x10, x10, #0x0
    17e4:	stur	w8, [x29, #-36]
    17e8:	stur	x9, [x29, #-48]
    17ec:	stur	x10, [x29, #-56]
    17f0:	bl	1200 <getCurFilenameLength>
    17f4:	stur	w0, [x29, #-28]
    17f8:	ldur	w8, [x29, #-28]
    17fc:	add	w8, w8, #0x1
    1800:	mov	x9, #0xf                   	// #15
    1804:	mov	w11, #0x1                   	// #1
    1808:	smaddl	x9, w8, w11, x9
    180c:	and	x9, x9, #0xfffffffffffffff0
    1810:	mov	x10, sp
    1814:	subs	x9, x10, x9
    1818:	mov	sp, x9
    181c:	stur	x9, [x29, #-16]
    1820:	ldur	x0, [x29, #-16]
    1824:	ldur	w1, [x29, #-36]
    1828:	bl	300 <getCurFilename>
    182c:	stur	x0, [x29, #-8]
    1830:	ldur	x9, [x29, #-8]
    1834:	cbnz	x9, 183c <truncateCurrentFile+0x78>
    1838:	b	18b4 <truncateCurrentFile+0xf0>
    183c:	ldur	x0, [x29, #-48]
    1840:	bl	0 <getenv>
    1844:	cmp	x0, #0x0
    1848:	cset	w8, ne  // ne = any
    184c:	and	w8, w8, #0x1
    1850:	stur	w8, [x29, #-32]
    1854:	ldur	w8, [x29, #-32]
    1858:	cbz	w8, 1860 <truncateCurrentFile+0x9c>
    185c:	b	18b4 <truncateCurrentFile+0xf0>
    1860:	ldur	x0, [x29, #-48]
    1864:	ldur	x1, [x29, #-48]
    1868:	mov	w2, #0x1                   	// #1
    186c:	bl	0 <setenv>
    1870:	ldur	x8, [x29, #-8]
    1874:	mov	x0, x8
    1878:	bl	1cb4 <createProfileDir>
    187c:	ldur	x8, [x29, #-56]
    1880:	ldr	w9, [x8, #176]
    1884:	cbz	w9, 188c <truncateCurrentFile+0xc8>
    1888:	b	18b4 <truncateCurrentFile+0xf0>
    188c:	ldur	x0, [x29, #-8]
    1890:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1894:	add	x1, x1, #0x0
    1898:	bl	0 <fopen>
    189c:	stur	x0, [x29, #-24]
    18a0:	ldur	x8, [x29, #-24]
    18a4:	cbnz	x8, 18ac <truncateCurrentFile+0xe8>
    18a8:	b	18b4 <truncateCurrentFile+0xf0>
    18ac:	ldur	x0, [x29, #-24]
    18b0:	bl	0 <fclose>
    18b4:	mov	sp, x29
    18b8:	ldp	x29, x30, [sp], #16
    18bc:	ret

00000000000018c0 <initializeProfileForContinuousMode>:
    18c0:	stp	x29, x30, [sp, #-16]!
    18c4:	mov	x29, sp
    18c8:	sub	sp, sp, #0xe0
    18cc:	adrp	x8, 0 <stderr>
    18d0:	ldr	x8, [x8]
    18d4:	stur	x8, [x29, #-208]
    18d8:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
    18dc:	cbnz	w0, 18e4 <initializeProfileForContinuousMode+0x24>
    18e0:	b	1ca8 <initializeProfileForContinuousMode+0x3e8>
    18e4:	bl	0 <__llvm_profile_begin_data>
    18e8:	stur	x0, [x29, #-8]
    18ec:	bl	0 <__llvm_profile_end_data>
    18f0:	stur	x0, [x29, #-16]
    18f4:	bl	0 <__llvm_profile_begin_counters>
    18f8:	stur	x0, [x29, #-24]
    18fc:	bl	0 <__llvm_profile_end_counters>
    1900:	stur	x0, [x29, #-32]
    1904:	bl	0 <__llvm_profile_begin_names>
    1908:	stur	x0, [x29, #-40]
    190c:	bl	0 <__llvm_profile_end_names>
    1910:	stur	x0, [x29, #-48]
    1914:	ldur	x8, [x29, #-48]
    1918:	ldur	x9, [x29, #-40]
    191c:	subs	x8, x8, x9
    1920:	mov	x9, #0x1                   	// #1
    1924:	mul	x8, x8, x9
    1928:	stur	x8, [x29, #-56]
    192c:	ldur	x0, [x29, #-8]
    1930:	ldur	x1, [x29, #-16]
    1934:	bl	0 <__llvm_profile_get_data_size>
    1938:	stur	x0, [x29, #-64]
    193c:	ldur	x8, [x29, #-32]
    1940:	ldur	x9, [x29, #-24]
    1944:	subs	x8, x8, x9
    1948:	mov	x9, #0x8                   	// #8
    194c:	sdiv	x8, x8, x9
    1950:	stur	x8, [x29, #-72]
    1954:	bl	0 <getpagesize>
    1958:	stur	w0, [x29, #-76]
    195c:	ldur	x8, [x29, #-24]
    1960:	ldur	w10, [x29, #-76]
    1964:	mov	w9, w10
    1968:	sdiv	x11, x8, x9
    196c:	mul	x9, x11, x9
    1970:	subs	x8, x8, x9
    1974:	cbz	x8, 1998 <initializeProfileForContinuousMode+0xd8>
    1978:	ldur	x8, [x29, #-208]
    197c:	ldr	x0, [x8]
    1980:	ldur	x2, [x29, #-24]
    1984:	ldur	w3, [x29, #-76]
    1988:	adrp	x1, 0 <__llvm_profile_set_file_object>
    198c:	add	x1, x1, #0x0
    1990:	bl	0 <fprintf>
    1994:	b	1ca8 <initializeProfileForContinuousMode+0x3e8>
    1998:	ldur	x8, [x29, #-8]
    199c:	ldur	w9, [x29, #-76]
    19a0:	mov	w10, w9
    19a4:	sdiv	x11, x8, x10
    19a8:	mul	x10, x11, x10
    19ac:	subs	x8, x8, x10
    19b0:	cbz	x8, 19d4 <initializeProfileForContinuousMode+0x114>
    19b4:	ldur	x8, [x29, #-208]
    19b8:	ldr	x0, [x8]
    19bc:	ldur	x2, [x29, #-8]
    19c0:	ldur	w3, [x29, #-76]
    19c4:	adrp	x1, 0 <__llvm_profile_set_file_object>
    19c8:	add	x1, x1, #0x0
    19cc:	bl	0 <fprintf>
    19d0:	b	1ca8 <initializeProfileForContinuousMode+0x3e8>
    19d4:	bl	1200 <getCurFilenameLength>
    19d8:	stur	w0, [x29, #-80]
    19dc:	ldur	w8, [x29, #-80]
    19e0:	add	w8, w8, #0x1
    19e4:	mov	x9, #0xf                   	// #15
    19e8:	mov	w10, #0x1                   	// #1
    19ec:	smaddl	x9, w8, w10, x9
    19f0:	and	x9, x9, #0xfffffffffffffff0
    19f4:	mov	x11, sp
    19f8:	subs	x9, x11, x9
    19fc:	mov	sp, x9
    1a00:	stur	x9, [x29, #-88]
    1a04:	ldur	x0, [x29, #-88]
    1a08:	mov	w8, wzr
    1a0c:	mov	w1, w8
    1a10:	bl	300 <getCurFilename>
    1a14:	stur	x0, [x29, #-96]
    1a18:	ldur	x9, [x29, #-96]
    1a1c:	cbnz	x9, 1a24 <initializeProfileForContinuousMode+0x164>
    1a20:	b	1ca8 <initializeProfileForContinuousMode+0x3e8>
    1a24:	mov	x8, xzr
    1a28:	stur	x8, [x29, #-104]
    1a2c:	stur	xzr, [x29, #-112]
    1a30:	stur	xzr, [x29, #-120]
    1a34:	stur	wzr, [x29, #-124]
    1a38:	bl	23d8 <doMerging>
    1a3c:	cbnz	w0, 1ae0 <initializeProfileForContinuousMode+0x220>
    1a40:	ldur	x0, [x29, #-96]
    1a44:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1a48:	add	x1, x1, #0x0
    1a4c:	bl	0 <fopen>
    1a50:	stur	x0, [x29, #-104]
    1a54:	ldur	x8, [x29, #-104]
    1a58:	cbnz	x8, 1a68 <initializeProfileForContinuousMode+0x1a8>
    1a5c:	mov	w8, #0x1                   	// #1
    1a60:	stur	w8, [x29, #-128]
    1a64:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1a68:	ldur	x0, [x29, #-104]
    1a6c:	bl	0 <ftello>
    1a70:	stur	x0, [x29, #-112]
    1a74:	ldur	x8, [x29, #-112]
    1a78:	ldur	w9, [x29, #-76]
    1a7c:	mov	w10, w9
    1a80:	sdiv	x11, x8, x10
    1a84:	mul	x10, x11, x10
    1a88:	subs	x8, x8, x10
    1a8c:	stur	x8, [x29, #-120]
    1a90:	ldur	x8, [x29, #-120]
    1a94:	cbz	x8, 1ac0 <initializeProfileForContinuousMode+0x200>
    1a98:	ldur	x8, [x29, #-208]
    1a9c:	ldr	x0, [x8]
    1aa0:	ldur	x2, [x29, #-112]
    1aa4:	ldur	w3, [x29, #-76]
    1aa8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1aac:	add	x1, x1, #0x0
    1ab0:	bl	0 <fprintf>
    1ab4:	mov	w9, #0x1                   	// #1
    1ab8:	stur	w9, [x29, #-128]
    1abc:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1ac0:	ldur	x0, [x29, #-96]
    1ac4:	ldur	x1, [x29, #-104]
    1ac8:	bl	1d78 <writeProfileWithFileObject>
    1acc:	cbz	w0, 1adc <initializeProfileForContinuousMode+0x21c>
    1ad0:	mov	w8, #0x1                   	// #1
    1ad4:	stur	w8, [x29, #-128]
    1ad8:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1adc:	b	1bb8 <initializeProfileForContinuousMode+0x2f8>
    1ae0:	ldur	x0, [x29, #-96]
    1ae4:	bl	0 <lprofOpenFileEx>
    1ae8:	stur	x0, [x29, #-104]
    1aec:	ldur	x8, [x29, #-104]
    1af0:	cbnz	x8, 1b00 <initializeProfileForContinuousMode+0x240>
    1af4:	mov	w8, #0x1                   	// #1
    1af8:	stur	w8, [x29, #-128]
    1afc:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1b00:	mov	w8, #0x1                   	// #1
    1b04:	stur	w8, [x29, #-124]
    1b08:	ldur	x0, [x29, #-104]
    1b0c:	sub	x1, x29, #0x88
    1b10:	bl	1e08 <getProfileFileSizeForMerging>
    1b14:	mov	w8, #0xffffffff            	// #-1
    1b18:	cmp	w0, w8
    1b1c:	b.ne	1b38 <initializeProfileForContinuousMode+0x278>  // b.any
    1b20:	ldur	x1, [x29, #-104]
    1b24:	sub	x0, x29, #0x7c
    1b28:	bl	1f64 <unlockProfile>
    1b2c:	mov	w8, #0x1                   	// #1
    1b30:	stur	w8, [x29, #-128]
    1b34:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1b38:	ldur	x8, [x29, #-136]
    1b3c:	cbnz	x8, 1b6c <initializeProfileForContinuousMode+0x2ac>
    1b40:	ldur	x0, [x29, #-96]
    1b44:	ldur	x1, [x29, #-104]
    1b48:	bl	1d78 <writeProfileWithFileObject>
    1b4c:	cbz	w0, 1b68 <initializeProfileForContinuousMode+0x2a8>
    1b50:	ldur	x1, [x29, #-104]
    1b54:	sub	x0, x29, #0x7c
    1b58:	bl	1f64 <unlockProfile>
    1b5c:	mov	w8, #0x1                   	// #1
    1b60:	stur	w8, [x29, #-128]
    1b64:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1b68:	b	1bb8 <initializeProfileForContinuousMode+0x2f8>
    1b6c:	ldur	x0, [x29, #-104]
    1b70:	ldur	x1, [x29, #-136]
    1b74:	sub	x2, x29, #0x90
    1b78:	bl	1fc0 <mmapProfileForMerging>
    1b7c:	mov	w8, #0xffffffff            	// #-1
    1b80:	cmp	w0, w8
    1b84:	b.eq	1ba0 <initializeProfileForContinuousMode+0x2e0>  // b.none
    1b88:	ldur	x0, [x29, #-144]
    1b8c:	ldur	x1, [x29, #-136]
    1b90:	bl	0 <munmap>
    1b94:	mov	w8, #0xffffffff            	// #-1
    1b98:	cmp	w0, w8
    1b9c:	b.ne	1bb8 <initializeProfileForContinuousMode+0x2f8>  // b.any
    1ba0:	ldur	x1, [x29, #-104]
    1ba4:	sub	x0, x29, #0x7c
    1ba8:	bl	1f64 <unlockProfile>
    1bac:	mov	w8, #0x1                   	// #1
    1bb0:	stur	w8, [x29, #-128]
    1bb4:	b	1ca0 <initializeProfileForContinuousMode+0x3e0>
    1bb8:	ldur	x0, [x29, #-104]
    1bbc:	bl	0 <fileno>
    1bc0:	stur	w0, [x29, #-148]
    1bc4:	ldur	x0, [x29, #-64]
    1bc8:	ldur	x1, [x29, #-72]
    1bcc:	ldur	x2, [x29, #-56]
    1bd0:	sub	x3, x29, #0xa0
    1bd4:	sub	x4, x29, #0xa8
    1bd8:	sub	x5, x29, #0xb0
    1bdc:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
    1be0:	ldur	x8, [x29, #-72]
    1be4:	mov	x9, #0x8                   	// #8
    1be8:	mul	x8, x8, x9
    1bec:	ldur	x9, [x29, #-168]
    1bf0:	add	x8, x8, x9
    1bf4:	stur	x8, [x29, #-184]
    1bf8:	ldur	x8, [x29, #-112]
    1bfc:	add	x8, x8, #0x50
    1c00:	ldur	x9, [x29, #-64]
    1c04:	mov	x10, #0x30                  	// #48
    1c08:	mul	x9, x9, x10
    1c0c:	add	x8, x8, x9
    1c10:	ldur	x9, [x29, #-160]
    1c14:	add	x8, x8, x9
    1c18:	stur	x8, [x29, #-192]
    1c1c:	ldur	x0, [x29, #-24]
    1c20:	ldur	x1, [x29, #-184]
    1c24:	ldur	w4, [x29, #-148]
    1c28:	ldur	x5, [x29, #-192]
    1c2c:	mov	w2, #0x3                   	// #3
    1c30:	mov	w3, #0x11                  	// #17
    1c34:	bl	0 <mmap>
    1c38:	stur	x0, [x29, #-200]
    1c3c:	ldur	x8, [x29, #-200]
    1c40:	ldur	x9, [x29, #-24]
    1c44:	cmp	x8, x9
    1c48:	b.eq	1c90 <initializeProfileForContinuousMode+0x3d0>  // b.none
    1c4c:	ldur	x8, [x29, #-208]
    1c50:	ldr	x0, [x8]
    1c54:	stur	x0, [x29, #-216]
    1c58:	bl	0 <__errno_location>
    1c5c:	ldr	w0, [x0]
    1c60:	bl	0 <strerror>
    1c64:	ldur	x3, [x29, #-24]
    1c68:	ldur	x4, [x29, #-184]
    1c6c:	ldur	w5, [x29, #-148]
    1c70:	ldur	x6, [x29, #-192]
    1c74:	ldur	x8, [x29, #-216]
    1c78:	stur	x0, [x29, #-224]
    1c7c:	mov	x0, x8
    1c80:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1c84:	add	x1, x1, #0x0
    1c88:	ldur	x2, [x29, #-224]
    1c8c:	bl	0 <fprintf>
    1c90:	ldur	x1, [x29, #-104]
    1c94:	sub	x0, x29, #0x7c
    1c98:	bl	1f64 <unlockProfile>
    1c9c:	stur	wzr, [x29, #-128]
    1ca0:	sub	x0, x29, #0x7c
    1ca4:	bl	1d30 <assertIsZero>
    1ca8:	mov	sp, x29
    1cac:	ldp	x29, x30, [sp], #16
    1cb0:	ret

0000000000001cb4 <createProfileDir>:
    1cb4:	stp	x29, x30, [sp, #-16]!
    1cb8:	mov	x29, sp
    1cbc:	sub	sp, sp, #0x20
    1cc0:	stur	x0, [x29, #-8]
    1cc4:	ldur	x0, [x29, #-8]
    1cc8:	bl	0 <strlen>
    1ccc:	stur	x0, [x29, #-16]
    1cd0:	ldur	x0, [x29, #-8]
    1cd4:	bl	0 <lprofFindFirstDirSeparator>
    1cd8:	cbz	x0, 1d24 <createProfileDir+0x70>
    1cdc:	ldur	x8, [x29, #-16]
    1ce0:	mov	x9, #0x1                   	// #1
    1ce4:	add	x8, x8, #0x1
    1ce8:	mul	x8, x8, x9
    1cec:	add	x8, x8, #0xf
    1cf0:	and	x8, x8, #0xfffffffffffffff0
    1cf4:	mov	x9, sp
    1cf8:	subs	x8, x9, x8
    1cfc:	mov	sp, x8
    1d00:	stur	x8, [x29, #-24]
    1d04:	ldur	x0, [x29, #-24]
    1d08:	ldur	x1, [x29, #-8]
    1d0c:	ldur	x8, [x29, #-16]
    1d10:	add	x2, x8, #0x1
    1d14:	bl	0 <strncpy>
    1d18:	ldur	x8, [x29, #-24]
    1d1c:	mov	x0, x8
    1d20:	bl	0 <__llvm_profile_recursive_mkdir>
    1d24:	mov	sp, x29
    1d28:	ldp	x29, x30, [sp], #16
    1d2c:	ret

0000000000001d30 <assertIsZero>:
    1d30:	sub	sp, sp, #0x20
    1d34:	stp	x29, x30, [sp, #16]
    1d38:	add	x29, sp, #0x10
    1d3c:	str	x0, [sp, #8]
    1d40:	ldr	x8, [sp, #8]
    1d44:	ldr	w9, [x8]
    1d48:	cbz	w9, 1d6c <assertIsZero+0x3c>
    1d4c:	adrp	x8, 0 <stderr>
    1d50:	ldr	x8, [x8]
    1d54:	ldr	x0, [x8]
    1d58:	ldr	x8, [sp, #8]
    1d5c:	ldr	w2, [x8]
    1d60:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1d64:	add	x1, x1, #0x0
    1d68:	bl	0 <fprintf>
    1d6c:	ldp	x29, x30, [sp, #16]
    1d70:	add	sp, sp, #0x20
    1d74:	ret

0000000000001d78 <writeProfileWithFileObject>:
    1d78:	sub	sp, sp, #0x40
    1d7c:	stp	x29, x30, [sp, #48]
    1d80:	add	x29, sp, #0x30
    1d84:	stur	x0, [x29, #-8]
    1d88:	stur	x1, [x29, #-16]
    1d8c:	ldur	x0, [x29, #-16]
    1d90:	bl	74 <setProfileFile>
    1d94:	ldur	x0, [x29, #-8]
    1d98:	bl	b08 <writeFile>
    1d9c:	stur	w0, [x29, #-20]
    1da0:	ldur	w8, [x29, #-20]
    1da4:	cbz	w8, 1dec <writeProfileWithFileObject+0x74>
    1da8:	adrp	x8, 0 <stderr>
    1dac:	ldr	x8, [x8]
    1db0:	ldr	x0, [x8]
    1db4:	ldur	x2, [x29, #-8]
    1db8:	str	x0, [sp, #16]
    1dbc:	str	x2, [sp, #8]
    1dc0:	bl	0 <__errno_location>
    1dc4:	ldr	w0, [x0]
    1dc8:	bl	0 <strerror>
    1dcc:	ldr	x8, [sp, #16]
    1dd0:	str	x0, [sp]
    1dd4:	mov	x0, x8
    1dd8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1ddc:	add	x1, x1, #0x0
    1de0:	ldr	x2, [sp, #8]
    1de4:	ldr	x3, [sp]
    1de8:	bl	0 <fprintf>
    1dec:	mov	x8, xzr
    1df0:	mov	x0, x8
    1df4:	bl	74 <setProfileFile>
    1df8:	ldur	w0, [x29, #-20]
    1dfc:	ldp	x29, x30, [sp, #48]
    1e00:	add	sp, sp, #0x40
    1e04:	ret

0000000000001e08 <getProfileFileSizeForMerging>:
    1e08:	sub	sp, sp, #0x60
    1e0c:	stp	x29, x30, [sp, #80]
    1e10:	add	x29, sp, #0x50
    1e14:	mov	x8, xzr
    1e18:	mov	w2, #0x2                   	// #2
    1e1c:	mov	w9, #0xffffffff            	// #-1
    1e20:	adrp	x10, 0 <stderr>
    1e24:	ldr	x10, [x10]
    1e28:	stur	x0, [x29, #-16]
    1e2c:	stur	x1, [x29, #-24]
    1e30:	ldur	x0, [x29, #-16]
    1e34:	mov	x1, x8
    1e38:	stur	w9, [x29, #-28]
    1e3c:	str	x10, [sp, #40]
    1e40:	bl	0 <fseek>
    1e44:	ldur	w9, [x29, #-28]
    1e48:	cmp	w0, w9
    1e4c:	b.ne	1e90 <getProfileFileSizeForMerging+0x88>  // b.any
    1e50:	ldr	x8, [sp, #40]
    1e54:	ldr	x0, [x8]
    1e58:	str	x0, [sp, #32]
    1e5c:	bl	0 <__errno_location>
    1e60:	ldr	w0, [x0]
    1e64:	bl	0 <strerror>
    1e68:	ldr	x8, [sp, #32]
    1e6c:	str	x0, [sp, #24]
    1e70:	mov	x0, x8
    1e74:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1e78:	add	x1, x1, #0x0
    1e7c:	ldr	x2, [sp, #24]
    1e80:	bl	0 <fprintf>
    1e84:	mov	w9, #0xffffffff            	// #-1
    1e88:	stur	w9, [x29, #-4]
    1e8c:	b	1f54 <getProfileFileSizeForMerging+0x14c>
    1e90:	ldur	x0, [x29, #-16]
    1e94:	bl	0 <ftell>
    1e98:	ldur	x8, [x29, #-24]
    1e9c:	str	x0, [x8]
    1ea0:	ldur	x0, [x29, #-16]
    1ea4:	mov	x8, xzr
    1ea8:	mov	x1, x8
    1eac:	mov	w9, wzr
    1eb0:	mov	w2, w9
    1eb4:	bl	0 <fseek>
    1eb8:	mov	w9, #0xffffffff            	// #-1
    1ebc:	cmp	w0, w9
    1ec0:	b.ne	1f04 <getProfileFileSizeForMerging+0xfc>  // b.any
    1ec4:	ldr	x8, [sp, #40]
    1ec8:	ldr	x0, [x8]
    1ecc:	str	x0, [sp, #16]
    1ed0:	bl	0 <__errno_location>
    1ed4:	ldr	w0, [x0]
    1ed8:	bl	0 <strerror>
    1edc:	ldr	x8, [sp, #16]
    1ee0:	str	x0, [sp, #8]
    1ee4:	mov	x0, x8
    1ee8:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1eec:	add	x1, x1, #0x0
    1ef0:	ldr	x2, [sp, #8]
    1ef4:	bl	0 <fprintf>
    1ef8:	mov	w9, #0xffffffff            	// #-1
    1efc:	stur	w9, [x29, #-4]
    1f00:	b	1f54 <getProfileFileSizeForMerging+0x14c>
    1f04:	ldur	x8, [x29, #-24]
    1f08:	ldr	x8, [x8]
    1f0c:	cmp	x8, #0x0
    1f10:	cset	w9, ls  // ls = plast
    1f14:	tbnz	w9, #0, 1f50 <getProfileFileSizeForMerging+0x148>
    1f18:	ldur	x8, [x29, #-24]
    1f1c:	ldr	x8, [x8]
    1f20:	cmp	x8, #0x50
    1f24:	b.cs	1f50 <getProfileFileSizeForMerging+0x148>  // b.hs, b.nlast
    1f28:	ldr	x8, [sp, #40]
    1f2c:	ldr	x0, [x8]
    1f30:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1f34:	add	x1, x1, #0x0
    1f38:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1f3c:	add	x2, x2, #0x0
    1f40:	bl	0 <fprintf>
    1f44:	mov	w9, #0xffffffff            	// #-1
    1f48:	stur	w9, [x29, #-4]
    1f4c:	b	1f54 <getProfileFileSizeForMerging+0x14c>
    1f50:	stur	wzr, [x29, #-4]
    1f54:	ldur	w0, [x29, #-4]
    1f58:	ldp	x29, x30, [sp, #80]
    1f5c:	add	sp, sp, #0x60
    1f60:	ret

0000000000001f64 <unlockProfile>:
    1f64:	sub	sp, sp, #0x20
    1f68:	stp	x29, x30, [sp, #16]
    1f6c:	add	x29, sp, #0x10
    1f70:	str	x0, [sp, #8]
    1f74:	str	x1, [sp]
    1f78:	ldr	x8, [sp, #8]
    1f7c:	ldr	w9, [x8]
    1f80:	cbnz	w9, 1fa4 <unlockProfile+0x40>
    1f84:	adrp	x8, 0 <stderr>
    1f88:	ldr	x8, [x8]
    1f8c:	ldr	x0, [x8]
    1f90:	adrp	x1, 0 <__llvm_profile_set_file_object>
    1f94:	add	x1, x1, #0x0
    1f98:	adrp	x2, 0 <__llvm_profile_set_file_object>
    1f9c:	add	x2, x2, #0x0
    1fa0:	bl	0 <fprintf>
    1fa4:	ldr	x0, [sp]
    1fa8:	bl	0 <lprofUnlockFileHandle>
    1fac:	ldr	x8, [sp, #8]
    1fb0:	str	wzr, [x8]
    1fb4:	ldp	x29, x30, [sp, #16]
    1fb8:	add	sp, sp, #0x20
    1fbc:	ret

0000000000001fc0 <mmapProfileForMerging>:
    1fc0:	sub	sp, sp, #0x70
    1fc4:	stp	x29, x30, [sp, #96]
    1fc8:	add	x29, sp, #0x60
    1fcc:	mov	x8, xzr
    1fd0:	mov	x3, x8
    1fd4:	mov	w9, #0x1                   	// #1
    1fd8:	mov	x10, #0xffffffffffffffff    	// #-1
    1fdc:	stur	x0, [x29, #-16]
    1fe0:	stur	x1, [x29, #-24]
    1fe4:	stur	x2, [x29, #-32]
    1fe8:	ldur	x1, [x29, #-24]
    1fec:	ldur	x0, [x29, #-16]
    1ff0:	stur	x8, [x29, #-40]
    1ff4:	str	x3, [sp, #48]
    1ff8:	str	w9, [sp, #44]
    1ffc:	str	x10, [sp, #32]
    2000:	str	x1, [sp, #24]
    2004:	bl	0 <fileno>
    2008:	ldr	x1, [sp, #48]
    200c:	str	w0, [sp, #20]
    2010:	mov	x0, x1
    2014:	ldr	x1, [sp, #24]
    2018:	ldr	w2, [sp, #44]
    201c:	ldr	w3, [sp, #44]
    2020:	ldr	w4, [sp, #20]
    2024:	ldur	x5, [x29, #-40]
    2028:	bl	0 <mmap>
    202c:	ldur	x8, [x29, #-32]
    2030:	str	x0, [x8]
    2034:	ldur	x8, [x29, #-32]
    2038:	ldr	x8, [x8]
    203c:	ldr	x10, [sp, #32]
    2040:	cmp	x8, x10
    2044:	b.ne	208c <mmapProfileForMerging+0xcc>  // b.any
    2048:	adrp	x8, 0 <stderr>
    204c:	ldr	x8, [x8]
    2050:	ldr	x0, [x8]
    2054:	str	x0, [sp, #8]
    2058:	bl	0 <__errno_location>
    205c:	ldr	w0, [x0]
    2060:	bl	0 <strerror>
    2064:	ldr	x8, [sp, #8]
    2068:	str	x0, [sp]
    206c:	mov	x0, x8
    2070:	adrp	x1, 0 <__llvm_profile_set_file_object>
    2074:	add	x1, x1, #0x0
    2078:	ldr	x2, [sp]
    207c:	bl	0 <fprintf>
    2080:	mov	w9, #0xffffffff            	// #-1
    2084:	stur	w9, [x29, #-4]
    2088:	b	20e4 <mmapProfileForMerging+0x124>
    208c:	ldur	x8, [x29, #-32]
    2090:	ldr	x0, [x8]
    2094:	ldur	x1, [x29, #-24]
    2098:	bl	0 <__llvm_profile_check_compatibility>
    209c:	cbz	w0, 20e0 <mmapProfileForMerging+0x120>
    20a0:	ldur	x8, [x29, #-32]
    20a4:	ldr	x0, [x8]
    20a8:	ldur	x1, [x29, #-24]
    20ac:	bl	0 <munmap>
    20b0:	adrp	x8, 0 <stderr>
    20b4:	ldr	x8, [x8]
    20b8:	ldr	x8, [x8]
    20bc:	mov	x0, x8
    20c0:	adrp	x1, 0 <__llvm_profile_set_file_object>
    20c4:	add	x1, x1, #0x0
    20c8:	adrp	x2, 0 <__llvm_profile_set_file_object>
    20cc:	add	x2, x2, #0x0
    20d0:	bl	0 <fprintf>
    20d4:	mov	w9, #0xffffffff            	// #-1
    20d8:	stur	w9, [x29, #-4]
    20dc:	b	20e4 <mmapProfileForMerging+0x124>
    20e0:	stur	wzr, [x29, #-4]
    20e4:	ldur	w0, [x29, #-4]
    20e8:	ldp	x29, x30, [sp, #96]
    20ec:	add	sp, sp, #0x70
    20f0:	ret

00000000000020f4 <openFileForMerging>:
    20f4:	sub	sp, sp, #0x50
    20f8:	stp	x29, x30, [sp, #64]
    20fc:	add	x29, sp, #0x40
    2100:	mov	x8, xzr
    2104:	stur	x0, [x29, #-16]
    2108:	stur	x1, [x29, #-24]
    210c:	str	x8, [sp, #32]
    2110:	bl	23c8 <getProfileFile>
    2114:	str	x0, [sp, #32]
    2118:	ldr	x8, [sp, #32]
    211c:	cbz	x8, 212c <openFileForMerging+0x38>
    2120:	ldr	x0, [sp, #32]
    2124:	bl	0 <lprofLockFileHandle>
    2128:	b	2140 <openFileForMerging+0x4c>
    212c:	ldur	x0, [x29, #-16]
    2130:	bl	1cb4 <createProfileDir>
    2134:	ldur	x0, [x29, #-16]
    2138:	bl	0 <lprofOpenFileEx>
    213c:	str	x0, [sp, #32]
    2140:	ldr	x8, [sp, #32]
    2144:	cbnz	x8, 2154 <openFileForMerging+0x60>
    2148:	mov	x8, xzr
    214c:	stur	x8, [x29, #-8]
    2150:	b	2218 <openFileForMerging+0x124>
    2154:	ldr	x0, [sp, #32]
    2158:	ldur	x1, [x29, #-24]
    215c:	bl	2278 <doProfileMerging>
    2160:	str	w0, [sp, #28]
    2164:	ldr	w8, [sp, #28]
    2168:	cbnz	w8, 21b4 <openFileForMerging+0xc0>
    216c:	ldur	x8, [x29, #-24]
    2170:	ldr	w9, [x8]
    2174:	cbnz	w9, 2190 <openFileForMerging+0x9c>
    2178:	ldr	x0, [sp, #32]
    217c:	bl	0 <fileno>
    2180:	mov	x8, xzr
    2184:	mov	x1, x8
    2188:	bl	0 <ftruncate>
    218c:	cbnz	w0, 21b4 <openFileForMerging+0xc0>
    2190:	ldr	x0, [sp, #32]
    2194:	mov	x8, xzr
    2198:	mov	x1, x8
    219c:	mov	w9, wzr
    21a0:	mov	w2, w9
    21a4:	bl	0 <fseek>
    21a8:	mov	w9, #0xffffffff            	// #-1
    21ac:	cmp	w0, w9
    21b0:	b.ne	2210 <openFileForMerging+0x11c>  // b.any
    21b4:	adrp	x8, 0 <stderr>
    21b8:	ldr	x8, [x8]
    21bc:	ldr	x0, [x8]
    21c0:	ldur	x2, [x29, #-16]
    21c4:	str	x0, [sp, #16]
    21c8:	str	x2, [sp, #8]
    21cc:	bl	0 <__errno_location>
    21d0:	ldr	w0, [x0]
    21d4:	bl	0 <strerror>
    21d8:	ldr	x8, [sp, #16]
    21dc:	str	x0, [sp]
    21e0:	mov	x0, x8
    21e4:	adrp	x1, 0 <__llvm_profile_set_file_object>
    21e8:	add	x1, x1, #0x0
    21ec:	ldr	x2, [sp, #8]
    21f0:	ldr	x3, [sp]
    21f4:	bl	0 <fprintf>
    21f8:	ldr	x8, [sp, #32]
    21fc:	mov	x0, x8
    2200:	bl	0 <fclose>
    2204:	mov	x8, xzr
    2208:	stur	x8, [x29, #-8]
    220c:	b	2218 <openFileForMerging+0x124>
    2210:	ldr	x8, [sp, #32]
    2214:	stur	x8, [x29, #-8]
    2218:	ldur	x0, [x29, #-8]
    221c:	ldp	x29, x30, [sp, #64]
    2220:	add	sp, sp, #0x50
    2224:	ret

0000000000002228 <getFileObject>:
    2228:	sub	sp, sp, #0x30
    222c:	stp	x29, x30, [sp, #32]
    2230:	add	x29, sp, #0x20
    2234:	str	x0, [sp, #16]
    2238:	bl	23c8 <getProfileFile>
    223c:	str	x0, [sp, #8]
    2240:	ldr	x8, [sp, #8]
    2244:	cbz	x8, 2254 <getFileObject+0x2c>
    2248:	ldr	x8, [sp, #8]
    224c:	stur	x8, [x29, #-8]
    2250:	b	2268 <getFileObject+0x40>
    2254:	ldr	x0, [sp, #16]
    2258:	adrp	x1, 0 <__llvm_profile_set_file_object>
    225c:	add	x1, x1, #0x0
    2260:	bl	0 <fopen>
    2264:	stur	x0, [x29, #-8]
    2268:	ldur	x0, [x29, #-8]
    226c:	ldp	x29, x30, [sp, #32]
    2270:	add	sp, sp, #0x30
    2274:	ret

0000000000002278 <doProfileMerging>:
    2278:	sub	sp, sp, #0x50
    227c:	stp	x29, x30, [sp, #64]
    2280:	add	x29, sp, #0x40
    2284:	mov	w8, #0xffffffff            	// #-1
    2288:	add	x9, sp, #0x20
    228c:	stur	x0, [x29, #-16]
    2290:	stur	x1, [x29, #-24]
    2294:	ldur	x0, [x29, #-16]
    2298:	mov	x1, x9
    229c:	str	w8, [sp, #20]
    22a0:	bl	1e08 <getProfileFileSizeForMerging>
    22a4:	ldr	w8, [sp, #20]
    22a8:	cmp	w0, w8
    22ac:	b.ne	22bc <doProfileMerging+0x44>  // b.any
    22b0:	mov	w8, #0xffffffff            	// #-1
    22b4:	stur	w8, [x29, #-4]
    22b8:	b	2344 <doProfileMerging+0xcc>
    22bc:	ldr	x8, [sp, #32]
    22c0:	cbnz	x8, 22cc <doProfileMerging+0x54>
    22c4:	stur	wzr, [x29, #-4]
    22c8:	b	2344 <doProfileMerging+0xcc>
    22cc:	ldur	x0, [x29, #-16]
    22d0:	ldr	x1, [sp, #32]
    22d4:	add	x2, sp, #0x18
    22d8:	bl	1fc0 <mmapProfileForMerging>
    22dc:	mov	w8, #0xffffffff            	// #-1
    22e0:	cmp	w0, w8
    22e4:	b.ne	22f4 <doProfileMerging+0x7c>  // b.any
    22e8:	mov	w8, #0xffffffff            	// #-1
    22ec:	stur	w8, [x29, #-4]
    22f0:	b	2344 <doProfileMerging+0xcc>
    22f4:	ldr	x0, [sp, #24]
    22f8:	ldr	x1, [sp, #32]
    22fc:	bl	0 <__llvm_profile_merge_from_buffer>
    2300:	ldur	x0, [x29, #-16]
    2304:	bl	0 <fileno>
    2308:	str	w0, [sp, #16]
    230c:	bl	0 <__llvm_profile_get_size_for_buffer>
    2310:	ldr	w2, [sp, #16]
    2314:	str	x0, [sp, #8]
    2318:	mov	w0, w2
    231c:	ldr	x1, [sp, #8]
    2320:	bl	0 <ftruncate>
    2324:	ldr	x8, [sp, #24]
    2328:	ldr	x1, [sp, #32]
    232c:	mov	x0, x8
    2330:	bl	0 <munmap>
    2334:	ldur	x8, [x29, #-24]
    2338:	mov	w9, #0x1                   	// #1
    233c:	str	w9, [x8]
    2340:	stur	wzr, [x29, #-4]
    2344:	ldur	w0, [x29, #-4]
    2348:	ldp	x29, x30, [sp, #64]
    234c:	add	sp, sp, #0x50
    2350:	ret

0000000000002354 <setupIOBuffer>:
    2354:	sub	sp, sp, #0x20
    2358:	stp	x29, x30, [sp, #16]
    235c:	add	x29, sp, #0x10
    2360:	mov	x8, xzr
    2364:	adrp	x0, 0 <__llvm_profile_set_file_object>
    2368:	add	x0, x0, #0x0
    236c:	str	x8, [sp, #8]
    2370:	bl	0 <getenv>
    2374:	str	x0, [sp, #8]
    2378:	ldr	x8, [sp, #8]
    237c:	cbz	x8, 23bc <setupIOBuffer+0x68>
    2380:	ldr	x8, [sp, #8]
    2384:	ldrb	w9, [x8]
    2388:	cbz	w9, 23bc <setupIOBuffer+0x68>
    238c:	ldr	x0, [sp, #8]
    2390:	bl	0 <atoi>
    2394:	adrp	x8, 0 <VPBufferSize>
    2398:	add	x8, x8, #0x0
    239c:	str	w0, [x8]
    23a0:	ldr	w9, [x8]
    23a4:	mov	w0, w9
    23a8:	mov	x1, #0x1                   	// #1
    23ac:	bl	0 <calloc>
    23b0:	adrp	x8, 0 <DynamicBufferIOBuffer>
    23b4:	add	x8, x8, #0x0
    23b8:	str	x0, [x8]
    23bc:	ldp	x29, x30, [sp, #16]
    23c0:	add	sp, sp, #0x20
    23c4:	ret

00000000000023c8 <getProfileFile>:
    23c8:	adrp	x8, 0 <__llvm_profile_set_file_object>
    23cc:	add	x8, x8, #0x0
    23d0:	ldr	x0, [x8]
    23d4:	ret

00000000000023d8 <doMerging>:
    23d8:	sub	sp, sp, #0x20
    23dc:	stp	x29, x30, [sp, #16]
    23e0:	add	x29, sp, #0x10
    23e4:	adrp	x8, 0 <__llvm_profile_set_file_object>
    23e8:	add	x8, x8, #0x0
    23ec:	ldr	w9, [x8, #176]
    23f0:	mov	w10, #0x1                   	// #1
    23f4:	stur	w10, [x29, #-4]
    23f8:	cbnz	w9, 240c <doMerging+0x34>
    23fc:	bl	2420 <isProfileMergeRequested>
    2400:	cmp	w0, #0x0
    2404:	cset	w8, ne  // ne = any
    2408:	stur	w8, [x29, #-4]
    240c:	ldur	w8, [x29, #-4]
    2410:	and	w0, w8, #0x1
    2414:	ldp	x29, x30, [sp, #16]
    2418:	add	sp, sp, #0x20
    241c:	ret

0000000000002420 <isProfileMergeRequested>:
    2420:	adrp	x8, 0 <__llvm_profile_set_file_object>
    2424:	add	x8, x8, #0x0
    2428:	ldr	w0, [x8]
    242c:	ret

0000000000002430 <orderFileWriter>:
    2430:	sub	sp, sp, #0x30
    2434:	stp	x29, x30, [sp, #32]
    2438:	add	x29, sp, #0x20
    243c:	mov	x8, #0x4                   	// #4
    2440:	mov	x2, #0x20000               	// #131072
    2444:	str	x0, [sp, #16]
    2448:	str	x1, [sp, #8]
    244c:	ldr	x0, [sp, #8]
    2450:	ldr	x3, [sp, #16]
    2454:	mov	x1, x8
    2458:	bl	0 <fwrite>
    245c:	cmp	x0, #0x20, lsl #12
    2460:	b.eq	2470 <orderFileWriter+0x40>  // b.none
    2464:	mov	w8, #0x1                   	// #1
    2468:	stur	w8, [x29, #-4]
    246c:	b	2474 <orderFileWriter+0x44>
    2470:	stur	wzr, [x29, #-4]
    2474:	ldur	w0, [x29, #-4]
    2478:	ldp	x29, x30, [sp, #32]
    247c:	add	sp, sp, #0x30
    2480:	ret

InstrProfilingMerge.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofGetLoadModuleSignature>:
   0:	sub	sp, sp, #0x90
   4:	stp	x29, x30, [sp, #128]
   8:	add	x29, sp, #0x80
   c:	mov	x8, #0x8                   	// #8
  10:	adrp	x9, 0 <__llvm_profile_end_vnodes>
  14:	ldr	x9, [x9]
  18:	adrp	x10, 0 <__llvm_profile_begin_vnodes>
  1c:	ldr	x10, [x10]
  20:	mov	x11, #0x18                  	// #24
  24:	stur	x8, [x29, #-48]
  28:	stur	x9, [x29, #-56]
  2c:	str	x10, [sp, #64]
  30:	str	x11, [sp, #56]
  34:	bl	0 <__llvm_profile_end_counters>
  38:	str	x0, [sp, #48]
  3c:	bl	0 <__llvm_profile_begin_counters>
  40:	ldr	x8, [sp, #48]
  44:	subs	x9, x8, x0
  48:	ldur	x10, [x29, #-48]
  4c:	sdiv	x9, x9, x10
  50:	stur	x9, [x29, #-8]
  54:	bl	0 <__llvm_profile_begin_data>
  58:	str	x0, [sp, #40]
  5c:	bl	0 <__llvm_profile_end_data>
  60:	ldr	x1, [sp, #40]
  64:	str	x0, [sp, #32]
  68:	mov	x0, x1
  6c:	ldr	x1, [sp, #32]
  70:	bl	0 <__llvm_profile_get_data_size>
  74:	stur	x0, [x29, #-16]
  78:	bl	0 <__llvm_profile_end_names>
  7c:	str	x0, [sp, #24]
  80:	bl	0 <__llvm_profile_begin_names>
  84:	ldr	x8, [sp, #24]
  88:	subs	x9, x8, x0
  8c:	stur	x9, [x29, #-24]
  90:	ldur	x9, [x29, #-56]
  94:	blr	x9
  98:	ldr	x8, [sp, #64]
  9c:	str	x0, [sp, #16]
  a0:	blr	x8
  a4:	ldr	x8, [sp, #16]
  a8:	subs	x9, x8, x0
  ac:	ldr	x10, [sp, #56]
  b0:	sdiv	x9, x9, x10
  b4:	stur	x9, [x29, #-32]
  b8:	bl	0 <__llvm_profile_begin_data>
  bc:	stur	x0, [x29, #-40]
  c0:	ldur	x8, [x29, #-24]
  c4:	ldur	x9, [x29, #-8]
  c8:	lsl	x9, x9, #30
  cc:	add	x8, x9, x8, lsl #40
  d0:	ldur	x9, [x29, #-16]
  d4:	add	x8, x8, x9, lsl #20
  d8:	ldur	x9, [x29, #-32]
  dc:	add	x8, x8, x9, lsl #10
  e0:	ldur	x9, [x29, #-16]
  e4:	cmp	x9, #0x0
  e8:	cset	w12, ls  // ls = plast
  ec:	str	x8, [sp, #8]
  f0:	tbnz	w12, #0, 104 <lprofGetLoadModuleSignature+0x104>
  f4:	ldur	x8, [x29, #-40]
  f8:	ldr	x8, [x8]
  fc:	str	x8, [sp]
 100:	b	10c <lprofGetLoadModuleSignature+0x10c>
 104:	mov	x8, xzr
 108:	str	x8, [sp]
 10c:	ldr	x8, [sp]
 110:	ldr	x9, [sp, #8]
 114:	add	x0, x9, x8
 118:	ldp	x29, x30, [sp, #128]
 11c:	add	sp, sp, #0x90
 120:	ret

0000000000000124 <__llvm_profile_check_compatibility>:
 124:	sub	sp, sp, #0xa0
 128:	stp	x29, x30, [sp, #144]
 12c:	add	x29, sp, #0x90
 130:	stur	x0, [x29, #-16]
 134:	stur	x1, [x29, #-24]
 138:	ldur	x8, [x29, #-16]
 13c:	stur	x8, [x29, #-32]
 140:	ldur	x8, [x29, #-16]
 144:	add	x8, x8, #0x50
 148:	stur	x8, [x29, #-40]
 14c:	ldur	x8, [x29, #-40]
 150:	ldur	x9, [x29, #-32]
 154:	ldr	x9, [x9, #16]
 158:	mov	x10, #0x30                  	// #48
 15c:	mul	x9, x10, x9
 160:	add	x8, x8, x9
 164:	stur	x8, [x29, #-48]
 168:	ldur	x8, [x29, #-24]
 16c:	cmp	x8, #0x50
 170:	b.cs	180 <__llvm_profile_check_compatibility+0x5c>  // b.hs, b.nlast
 174:	mov	w8, #0x1                   	// #1
 178:	stur	w8, [x29, #-4]
 17c:	b	344 <__llvm_profile_check_compatibility+0x220>
 180:	ldur	x8, [x29, #-32]
 184:	ldr	x8, [x8]
 188:	str	x8, [sp, #72]
 18c:	bl	0 <__llvm_profile_get_magic>
 190:	ldr	x8, [sp, #72]
 194:	cmp	x8, x0
 198:	b.ne	260 <__llvm_profile_check_compatibility+0x13c>  // b.any
 19c:	ldur	x8, [x29, #-32]
 1a0:	ldr	x8, [x8, #8]
 1a4:	str	x8, [sp, #64]
 1a8:	bl	0 <__llvm_profile_get_version>
 1ac:	ldr	x8, [sp, #64]
 1b0:	cmp	x8, x0
 1b4:	b.ne	260 <__llvm_profile_check_compatibility+0x13c>  // b.any
 1b8:	ldur	x8, [x29, #-32]
 1bc:	ldr	x8, [x8, #16]
 1c0:	str	x8, [sp, #56]
 1c4:	bl	0 <__llvm_profile_begin_data>
 1c8:	str	x0, [sp, #48]
 1cc:	bl	0 <__llvm_profile_end_data>
 1d0:	ldr	x1, [sp, #48]
 1d4:	str	x0, [sp, #40]
 1d8:	mov	x0, x1
 1dc:	ldr	x1, [sp, #40]
 1e0:	bl	0 <__llvm_profile_get_data_size>
 1e4:	ldr	x8, [sp, #56]
 1e8:	cmp	x8, x0
 1ec:	b.ne	260 <__llvm_profile_check_compatibility+0x13c>  // b.any
 1f0:	ldur	x8, [x29, #-32]
 1f4:	ldr	x8, [x8, #32]
 1f8:	str	x8, [sp, #32]
 1fc:	bl	0 <__llvm_profile_end_counters>
 200:	str	x0, [sp, #24]
 204:	bl	0 <__llvm_profile_begin_counters>
 208:	ldr	x8, [sp, #24]
 20c:	subs	x9, x8, x0
 210:	mov	x10, #0x8                   	// #8
 214:	sdiv	x9, x9, x10
 218:	ldr	x10, [sp, #32]
 21c:	cmp	x10, x9
 220:	b.ne	260 <__llvm_profile_check_compatibility+0x13c>  // b.any
 224:	ldur	x8, [x29, #-32]
 228:	ldr	x8, [x8, #48]
 22c:	str	x8, [sp, #16]
 230:	bl	0 <__llvm_profile_end_names>
 234:	str	x0, [sp, #8]
 238:	bl	0 <__llvm_profile_begin_names>
 23c:	ldr	x8, [sp, #8]
 240:	subs	x9, x8, x0
 244:	ldr	x10, [sp, #16]
 248:	cmp	x10, x9
 24c:	b.ne	260 <__llvm_profile_check_compatibility+0x13c>  // b.any
 250:	ldur	x8, [x29, #-32]
 254:	ldr	x8, [x8, #72]
 258:	cmp	x8, #0x1
 25c:	b.eq	26c <__llvm_profile_check_compatibility+0x148>  // b.none
 260:	mov	w8, #0x1                   	// #1
 264:	stur	w8, [x29, #-4]
 268:	b	344 <__llvm_profile_check_compatibility+0x220>
 26c:	ldur	x8, [x29, #-24]
 270:	ldur	x9, [x29, #-32]
 274:	ldr	x9, [x9, #16]
 278:	mov	x10, #0x30                  	// #48
 27c:	mul	x9, x9, x10
 280:	add	x9, x9, #0x50
 284:	ldur	x10, [x29, #-32]
 288:	ldr	x10, [x10, #48]
 28c:	add	x9, x9, x10
 290:	ldur	x10, [x29, #-32]
 294:	ldr	x10, [x10, #32]
 298:	add	x9, x9, x10
 29c:	cmp	x8, x9
 2a0:	b.cs	2b0 <__llvm_profile_check_compatibility+0x18c>  // b.hs, b.nlast
 2a4:	mov	w8, #0x1                   	// #1
 2a8:	stur	w8, [x29, #-4]
 2ac:	b	344 <__llvm_profile_check_compatibility+0x220>
 2b0:	ldur	x8, [x29, #-40]
 2b4:	stur	x8, [x29, #-56]
 2b8:	bl	0 <__llvm_profile_begin_data>
 2bc:	stur	x0, [x29, #-64]
 2c0:	ldur	x8, [x29, #-56]
 2c4:	ldur	x9, [x29, #-48]
 2c8:	cmp	x8, x9
 2cc:	b.cs	340 <__llvm_profile_check_compatibility+0x21c>  // b.hs, b.nlast
 2d0:	ldur	x8, [x29, #-56]
 2d4:	ldr	x8, [x8]
 2d8:	ldur	x9, [x29, #-64]
 2dc:	ldr	x9, [x9]
 2e0:	cmp	x8, x9
 2e4:	b.ne	318 <__llvm_profile_check_compatibility+0x1f4>  // b.any
 2e8:	ldur	x8, [x29, #-56]
 2ec:	ldr	x8, [x8, #8]
 2f0:	ldur	x9, [x29, #-64]
 2f4:	ldr	x9, [x9, #8]
 2f8:	cmp	x8, x9
 2fc:	b.ne	318 <__llvm_profile_check_compatibility+0x1f4>  // b.any
 300:	ldur	x8, [x29, #-56]
 304:	ldr	w9, [x8, #40]
 308:	ldur	x8, [x29, #-64]
 30c:	ldr	w10, [x8, #40]
 310:	cmp	w9, w10
 314:	b.eq	324 <__llvm_profile_check_compatibility+0x200>  // b.none
 318:	mov	w8, #0x1                   	// #1
 31c:	stur	w8, [x29, #-4]
 320:	b	344 <__llvm_profile_check_compatibility+0x220>
 324:	ldur	x8, [x29, #-56]
 328:	add	x8, x8, #0x30
 32c:	stur	x8, [x29, #-56]
 330:	ldur	x8, [x29, #-64]
 334:	add	x8, x8, #0x30
 338:	stur	x8, [x29, #-64]
 33c:	b	2c0 <__llvm_profile_check_compatibility+0x19c>
 340:	stur	wzr, [x29, #-4]
 344:	ldur	w0, [x29, #-4]
 348:	ldp	x29, x30, [sp, #144]
 34c:	add	sp, sp, #0xa0
 350:	ret

0000000000000354 <__llvm_profile_merge_from_buffer>:
 354:	sub	sp, sp, #0x90
 358:	stp	x29, x30, [sp, #128]
 35c:	add	x29, sp, #0x80
 360:	stur	x0, [x29, #-8]
 364:	stur	x1, [x29, #-16]
 368:	ldur	x8, [x29, #-8]
 36c:	stur	x8, [x29, #-56]
 370:	ldur	x8, [x29, #-8]
 374:	add	x8, x8, #0x50
 378:	stur	x8, [x29, #-24]
 37c:	ldur	x8, [x29, #-24]
 380:	ldur	x9, [x29, #-56]
 384:	ldr	x9, [x9, #16]
 388:	mov	x10, #0x30                  	// #48
 38c:	mul	x9, x10, x9
 390:	add	x8, x8, x9
 394:	stur	x8, [x29, #-32]
 398:	ldur	x8, [x29, #-32]
 39c:	str	x8, [sp, #64]
 3a0:	ldr	x8, [sp, #64]
 3a4:	ldur	x9, [x29, #-56]
 3a8:	ldr	x9, [x9, #32]
 3ac:	mov	x10, #0x8                   	// #8
 3b0:	mul	x9, x10, x9
 3b4:	add	x8, x8, x9
 3b8:	str	x8, [sp, #56]
 3bc:	ldr	x8, [sp, #56]
 3c0:	ldur	x9, [x29, #-56]
 3c4:	ldr	x9, [x9, #48]
 3c8:	add	x8, x8, x9
 3cc:	ldur	x9, [x29, #-56]
 3d0:	ldr	x0, [x9, #48]
 3d4:	str	x8, [sp]
 3d8:	bl	0 <__llvm_profile_get_num_padding_bytes>
 3dc:	and	w11, w0, #0xff
 3e0:	mov	w1, w11
 3e4:	sxtw	x8, w1
 3e8:	ldr	x9, [sp]
 3ec:	add	x8, x9, x8
 3f0:	str	x8, [sp, #48]
 3f4:	ldur	x8, [x29, #-24]
 3f8:	stur	x8, [x29, #-40]
 3fc:	bl	0 <__llvm_profile_begin_data>
 400:	stur	x0, [x29, #-48]
 404:	ldr	x8, [sp, #48]
 408:	str	x8, [sp, #40]
 40c:	ldur	x8, [x29, #-40]
 410:	ldur	x9, [x29, #-32]
 414:	cmp	x8, x9
 418:	b.cs	578 <__llvm_profile_merge_from_buffer+0x224>  // b.hs, b.nlast
 41c:	ldur	x8, [x29, #-48]
 420:	ldr	x8, [x8, #16]
 424:	str	x8, [sp, #24]
 428:	str	wzr, [sp, #12]
 42c:	ldur	x8, [x29, #-40]
 430:	ldr	w9, [x8, #40]
 434:	str	w9, [sp, #16]
 438:	ldr	x8, [sp, #64]
 43c:	ldur	x10, [x29, #-40]
 440:	ldr	x10, [x10, #16]
 444:	ldur	x11, [x29, #-56]
 448:	ldr	x11, [x11, #56]
 44c:	subs	x10, x10, x11
 450:	mov	x11, #0x8                   	// #8
 454:	udiv	x10, x10, x11
 458:	mov	x11, #0x8                   	// #8
 45c:	mul	x10, x11, x10
 460:	add	x8, x8, x10
 464:	str	x8, [sp, #32]
 468:	str	wzr, [sp, #20]
 46c:	ldr	w8, [sp, #20]
 470:	ldr	w9, [sp, #16]
 474:	cmp	w8, w9
 478:	b.cs	4c0 <__llvm_profile_merge_from_buffer+0x16c>  // b.hs, b.nlast
 47c:	ldr	x8, [sp, #32]
 480:	ldr	w9, [sp, #20]
 484:	mov	w10, w9
 488:	mov	x11, #0x8                   	// #8
 48c:	ldr	x8, [x8, x10, lsl #3]
 490:	ldr	x10, [sp, #24]
 494:	ldr	w9, [sp, #20]
 498:	mov	w12, w9
 49c:	mul	x11, x11, x12
 4a0:	add	x10, x10, x11
 4a4:	ldr	x11, [x10]
 4a8:	add	x8, x11, x8
 4ac:	str	x8, [x10]
 4b0:	ldr	w8, [sp, #20]
 4b4:	add	w8, w8, #0x1
 4b8:	str	w8, [sp, #20]
 4bc:	b	46c <__llvm_profile_merge_from_buffer+0x118>
 4c0:	adrp	x8, 8 <lprofGetLoadModuleSignature+0x8>
 4c4:	add	x8, x8, #0x0
 4c8:	ldr	x8, [x8]
 4cc:	cbnz	x8, 4d4 <__llvm_profile_merge_from_buffer+0x180>
 4d0:	b	55c <__llvm_profile_merge_from_buffer+0x208>
 4d4:	str	wzr, [sp, #20]
 4d8:	ldr	w8, [sp, #20]
 4dc:	cmp	w8, #0x1
 4e0:	b.hi	520 <__llvm_profile_merge_from_buffer+0x1cc>  // b.pmore
 4e4:	ldur	x8, [x29, #-40]
 4e8:	add	x8, x8, #0x2c
 4ec:	ldr	w9, [sp, #20]
 4f0:	mov	w10, w9
 4f4:	ldrh	w9, [x8, x10, lsl #1]
 4f8:	cmp	w9, #0x0
 4fc:	cset	w9, ne  // ne = any
 500:	and	w9, w9, #0x1
 504:	ldr	w11, [sp, #12]
 508:	add	w9, w11, w9
 50c:	str	w9, [sp, #12]
 510:	ldr	w8, [sp, #20]
 514:	add	w8, w8, #0x1
 518:	str	w8, [sp, #20]
 51c:	b	4d8 <__llvm_profile_merge_from_buffer+0x184>
 520:	ldr	w8, [sp, #12]
 524:	cbnz	w8, 52c <__llvm_profile_merge_from_buffer+0x1d8>
 528:	b	55c <__llvm_profile_merge_from_buffer+0x208>
 52c:	adrp	x8, 8 <lprofGetLoadModuleSignature+0x8>
 530:	add	x8, x8, #0x0
 534:	ldr	x8, [x8]
 538:	ldr	x0, [sp, #40]
 53c:	ldur	x1, [x29, #-48]
 540:	blr	x8
 544:	ldr	x8, [sp, #40]
 548:	ldr	x9, [sp, #40]
 54c:	ldr	w10, [x9]
 550:	mov	w9, w10
 554:	add	x8, x8, x9
 558:	str	x8, [sp, #40]
 55c:	ldur	x8, [x29, #-40]
 560:	add	x8, x8, #0x30
 564:	stur	x8, [x29, #-40]
 568:	ldur	x8, [x29, #-48]
 56c:	add	x8, x8, #0x30
 570:	stur	x8, [x29, #-48]
 574:	b	40c <__llvm_profile_merge_from_buffer+0xb8>
 578:	ldp	x29, x30, [sp, #128]
 57c:	add	sp, sp, #0x90
 580:	ret

InstrProfilingMergeFile.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofMergeValueProfData>:
   0:	sub	sp, sp, #0x50
   4:	stp	x29, x30, [sp, #64]
   8:	add	x29, sp, #0x40
   c:	stur	x0, [x29, #-8]
  10:	stur	x1, [x29, #-16]
  14:	str	wzr, [sp, #32]
  18:	ldur	x0, [x29, #-8]
  1c:	bl	0 <getFirstValueProfRecord>
  20:	str	x0, [sp, #16]
  24:	stur	wzr, [x29, #-20]
  28:	ldur	w8, [x29, #-20]
  2c:	ldur	x9, [x29, #-8]
  30:	ldr	w10, [x9, #4]
  34:	cmp	w8, w10
  38:	b.cs	124 <lprofMergeValueProfData+0x124>  // b.hs, b.nlast
  3c:	ldr	x0, [sp, #16]
  40:	bl	0 <getValueProfRecordValueData>
  44:	str	x0, [sp, #24]
  48:	str	wzr, [sp, #12]
  4c:	stur	wzr, [x29, #-24]
  50:	ldur	w8, [x29, #-24]
  54:	ldr	x9, [sp, #16]
  58:	ldr	w10, [x9, #4]
  5c:	cmp	w8, w10
  60:	b.cs	108 <lprofMergeValueProfData+0x108>  // b.hs, b.nlast
  64:	ldr	x8, [sp, #16]
  68:	add	x8, x8, #0x8
  6c:	ldur	w9, [x29, #-24]
  70:	mov	w10, w9
  74:	add	x8, x8, x10
  78:	ldrb	w9, [x8]
  7c:	strb	w9, [sp, #11]
  80:	stur	wzr, [x29, #-28]
  84:	ldur	w8, [x29, #-28]
  88:	ldrb	w9, [sp, #11]
  8c:	cmp	w8, w9
  90:	b.cs	ec <lprofMergeValueProfData+0xec>  // b.hs, b.nlast
  94:	ldr	x8, [sp, #24]
  98:	ldr	w9, [sp, #12]
  9c:	mov	w10, w9
  a0:	mov	x11, #0x10                  	// #16
  a4:	mul	x10, x11, x10
  a8:	ldr	x0, [x8, x10]
  ac:	ldur	x1, [x29, #-16]
  b0:	ldr	w2, [sp, #32]
  b4:	ldr	x8, [sp, #24]
  b8:	ldr	w9, [sp, #12]
  bc:	mov	w10, w9
  c0:	mul	x10, x11, x10
  c4:	add	x8, x8, x10
  c8:	ldr	x3, [x8, #8]
  cc:	bl	0 <__llvm_profile_instrument_target_value>
  d0:	ldr	w9, [sp, #12]
  d4:	add	w9, w9, #0x1
  d8:	str	w9, [sp, #12]
  dc:	ldur	w8, [x29, #-28]
  e0:	add	w8, w8, #0x1
  e4:	stur	w8, [x29, #-28]
  e8:	b	84 <lprofMergeValueProfData+0x84>
  ec:	ldr	w8, [sp, #32]
  f0:	add	w8, w8, #0x1
  f4:	str	w8, [sp, #32]
  f8:	ldur	w8, [x29, #-24]
  fc:	add	w8, w8, #0x1
 100:	stur	w8, [x29, #-24]
 104:	b	50 <lprofMergeValueProfData+0x50>
 108:	ldr	x0, [sp, #16]
 10c:	bl	0 <getValueProfRecordNext>
 110:	str	x0, [sp, #16]
 114:	ldur	w8, [x29, #-20]
 118:	add	w8, w8, #0x1
 11c:	stur	w8, [x29, #-20]
 120:	b	28 <lprofMergeValueProfData+0x28>
 124:	ldp	x29, x30, [sp, #64]
 128:	add	sp, sp, #0x50
 12c:	ret

InstrProfilingNameVar.c.o:     file format elf64-littleaarch64


InstrProfilingWriter.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <lprofBufferWriter>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	stur	x0, [x29, #-8]
  10:	stur	x1, [x29, #-16]
  14:	stur	w2, [x29, #-20]
  18:	ldur	x8, [x29, #-8]
  1c:	add	x8, x8, #0x8
  20:	str	x8, [sp, #16]
  24:	str	wzr, [sp, #24]
  28:	ldr	w8, [sp, #24]
  2c:	ldur	w9, [x29, #-20]
  30:	cmp	w8, w9
  34:	b.cs	104 <lprofBufferWriter+0x104>  // b.hs, b.nlast
  38:	ldur	x8, [x29, #-16]
  3c:	ldr	w9, [sp, #24]
  40:	mov	w10, w9
  44:	mov	x11, #0x20                  	// #32
  48:	mul	x10, x11, x10
  4c:	add	x8, x8, x10
  50:	ldr	x8, [x8, #8]
  54:	ldur	x10, [x29, #-16]
  58:	ldr	w9, [sp, #24]
  5c:	mov	w12, w9
  60:	mul	x12, x11, x12
  64:	add	x10, x10, x12
  68:	ldr	x10, [x10, #16]
  6c:	mul	x8, x8, x10
  70:	str	x8, [sp, #8]
  74:	ldur	x8, [x29, #-16]
  78:	ldr	w9, [sp, #24]
  7c:	mov	w10, w9
  80:	mul	x10, x11, x10
  84:	add	x8, x8, x10
  88:	ldr	x8, [x8]
  8c:	cbz	x8, c0 <lprofBufferWriter+0xc0>
  90:	ldr	x8, [sp, #16]
  94:	ldr	x0, [x8]
  98:	ldur	x8, [x29, #-16]
  9c:	ldr	w9, [sp, #24]
  a0:	mov	w10, w9
  a4:	mov	x11, #0x20                  	// #32
  a8:	mul	x10, x11, x10
  ac:	add	x8, x8, x10
  b0:	ldr	x1, [x8]
  b4:	ldr	x2, [sp, #8]
  b8:	bl	0 <memcpy>
  bc:	b	e0 <lprofBufferWriter+0xe0>
  c0:	ldur	x8, [x29, #-16]
  c4:	ldr	w9, [sp, #24]
  c8:	mov	w10, w9
  cc:	mov	x11, #0x20                  	// #32
  d0:	mul	x10, x11, x10
  d4:	add	x8, x8, x10
  d8:	ldr	w9, [x8, #24]
  dc:	cbz	w9, e0 <lprofBufferWriter+0xe0>
  e0:	ldr	x8, [sp, #8]
  e4:	ldr	x9, [sp, #16]
  e8:	ldr	x10, [x9]
  ec:	add	x8, x10, x8
  f0:	str	x8, [x9]
  f4:	ldr	w8, [sp, #24]
  f8:	add	w8, w8, #0x1
  fc:	str	w8, [sp, #24]
 100:	b	28 <lprofBufferWriter+0x28>
 104:	mov	w8, wzr
 108:	mov	w0, w8
 10c:	ldp	x29, x30, [sp, #48]
 110:	add	sp, sp, #0x40
 114:	ret

0000000000000118 <lprofCreateBufferIO>:
 118:	sub	sp, sp, #0x30
 11c:	stp	x29, x30, [sp, #32]
 120:	add	x29, sp, #0x20
 124:	adrp	x8, 8 <lprofBufferWriter+0x8>
 128:	add	x8, x8, #0x0
 12c:	adrp	x9, 10 <lprofBufferWriter+0x10>
 130:	add	x9, x9, #0x0
 134:	stur	x0, [x29, #-8]
 138:	ldr	x8, [x8]
 13c:	str	x8, [sp, #16]
 140:	ldr	w10, [x9]
 144:	str	w10, [sp, #12]
 148:	ldr	x8, [sp, #16]
 14c:	cbnz	x8, 164 <lprofCreateBufferIO+0x4c>
 150:	adrp	x8, 0 <lprofBufferWriter>
 154:	add	x8, x8, #0x0
 158:	str	x8, [sp, #16]
 15c:	mov	w9, #0x2000                	// #8192
 160:	str	w9, [sp, #12]
 164:	ldur	x1, [x29, #-8]
 168:	ldr	x2, [sp, #16]
 16c:	ldr	w3, [sp, #12]
 170:	adrp	x8, 0 <lprofBufferWriter>
 174:	add	x8, x8, #0x0
 178:	mov	x0, x8
 17c:	str	x8, [sp]
 180:	bl	194 <llvmInitBufferIO>
 184:	ldr	x0, [sp]
 188:	ldp	x29, x30, [sp, #32]
 18c:	add	sp, sp, #0x30
 190:	ret

0000000000000194 <llvmInitBufferIO>:
 194:	sub	sp, sp, #0x20
 198:	str	x0, [sp, #24]
 19c:	str	x1, [sp, #16]
 1a0:	str	x2, [sp, #8]
 1a4:	str	w3, [sp, #4]
 1a8:	ldr	x8, [sp, #16]
 1ac:	ldr	x9, [sp, #24]
 1b0:	str	x8, [x9]
 1b4:	ldr	x8, [sp, #24]
 1b8:	str	wzr, [x8, #8]
 1bc:	ldr	x8, [sp, #8]
 1c0:	ldr	x9, [sp, #24]
 1c4:	str	x8, [x9, #16]
 1c8:	ldr	w10, [sp, #4]
 1cc:	ldr	x8, [sp, #24]
 1d0:	str	w10, [x8, #24]
 1d4:	ldr	x8, [sp, #24]
 1d8:	str	wzr, [x8, #28]
 1dc:	add	sp, sp, #0x20
 1e0:	ret

00000000000001e4 <lprofDeleteBufferIO>:
 1e4:	sub	sp, sp, #0x20
 1e8:	stp	x29, x30, [sp, #16]
 1ec:	add	x29, sp, #0x10
 1f0:	adrp	x8, 8 <lprofBufferWriter+0x8>
 1f4:	add	x8, x8, #0x0
 1f8:	str	x0, [sp, #8]
 1fc:	ldr	x9, [sp, #8]
 200:	ldr	w10, [x9, #8]
 204:	str	x8, [sp]
 208:	cbz	w10, 224 <lprofDeleteBufferIO+0x40>
 20c:	adrp	x8, 0 <lprofBufferWriter>
 210:	add	x8, x8, #0x0
 214:	ldr	x8, [x8]
 218:	ldr	x9, [sp, #8]
 21c:	ldr	x0, [x9]
 220:	blr	x8
 224:	ldr	x8, [sp]
 228:	ldr	x9, [x8]
 22c:	cbz	x9, 260 <lprofDeleteBufferIO+0x7c>
 230:	adrp	x8, 0 <lprofBufferWriter>
 234:	add	x8, x8, #0x0
 238:	ldr	x8, [x8]
 23c:	ldr	x9, [sp]
 240:	ldr	x0, [x9]
 244:	blr	x8
 248:	mov	x8, xzr
 24c:	ldr	x9, [sp]
 250:	str	x8, [x9]
 254:	adrp	x8, 10 <lprofBufferWriter+0x10>
 258:	add	x8, x8, #0x0
 25c:	str	wzr, [x8]
 260:	ldp	x29, x30, [sp, #16]
 264:	add	sp, sp, #0x20
 268:	ret

000000000000026c <lprofBufferIOWrite>:
 26c:	sub	sp, sp, #0x70
 270:	stp	x29, x30, [sp, #96]
 274:	add	x29, sp, #0x60
 278:	stur	x0, [x29, #-16]
 27c:	stur	x1, [x29, #-24]
 280:	stur	w2, [x29, #-28]
 284:	ldur	w8, [x29, #-28]
 288:	ldur	x9, [x29, #-16]
 28c:	ldr	w10, [x9, #28]
 290:	add	w8, w8, w10
 294:	ldur	x9, [x29, #-16]
 298:	ldr	w10, [x9, #24]
 29c:	cmp	w8, w10
 2a0:	b.ls	2bc <lprofBufferIOWrite+0x50>  // b.plast
 2a4:	ldur	x0, [x29, #-16]
 2a8:	bl	394 <lprofBufferIOFlush>
 2ac:	cbz	w0, 2bc <lprofBufferIOWrite+0x50>
 2b0:	mov	w8, #0xffffffff            	// #-1
 2b4:	stur	w8, [x29, #-4]
 2b8:	b	384 <lprofBufferIOWrite+0x118>
 2bc:	ldur	x8, [x29, #-24]
 2c0:	str	x8, [sp, #32]
 2c4:	mov	x8, #0x1                   	// #1
 2c8:	str	x8, [sp, #40]
 2cc:	ldur	w9, [x29, #-28]
 2d0:	mov	w8, w9
 2d4:	str	x8, [sp, #48]
 2d8:	str	wzr, [sp, #56]
 2dc:	ldur	w9, [x29, #-28]
 2e0:	ldur	x8, [x29, #-16]
 2e4:	ldr	w10, [x8, #24]
 2e8:	cmp	w9, w10
 2ec:	b.ls	324 <lprofBufferIOWrite+0xb8>  // b.plast
 2f0:	ldur	x8, [x29, #-16]
 2f4:	ldr	x8, [x8]
 2f8:	ldr	x8, [x8]
 2fc:	ldur	x9, [x29, #-16]
 300:	ldr	x0, [x9]
 304:	add	x1, sp, #0x20
 308:	mov	w2, #0x1                   	// #1
 30c:	blr	x8
 310:	cbz	w0, 320 <lprofBufferIOWrite+0xb4>
 314:	mov	w8, #0xffffffff            	// #-1
 318:	stur	w8, [x29, #-4]
 31c:	b	384 <lprofBufferIOWrite+0x118>
 320:	b	380 <lprofBufferIOWrite+0x114>
 324:	ldur	x8, [x29, #-16]
 328:	ldr	x8, [x8, #16]
 32c:	ldur	x9, [x29, #-16]
 330:	ldr	w10, [x9, #28]
 334:	mov	w9, w10
 338:	add	x8, x8, x9
 33c:	str	x8, [sp, #24]
 340:	ldr	x1, [sp, #24]
 344:	add	x8, sp, #0x8
 348:	mov	x0, x8
 34c:	str	x8, [sp]
 350:	bl	0 <initBufferWriter>
 354:	ldr	x0, [sp]
 358:	add	x1, sp, #0x20
 35c:	mov	w2, #0x1                   	// #1
 360:	bl	0 <lprofBufferWriter>
 364:	ldr	x8, [sp]
 368:	ldr	x9, [x8, #8]
 36c:	ldur	x11, [x29, #-16]
 370:	ldr	x11, [x11, #16]
 374:	subs	x9, x9, x11
 378:	ldur	x11, [x29, #-16]
 37c:	str	w9, [x11, #28]
 380:	stur	wzr, [x29, #-4]
 384:	ldur	w0, [x29, #-4]
 388:	ldp	x29, x30, [sp, #96]
 38c:	add	sp, sp, #0x70
 390:	ret

0000000000000394 <lprofBufferIOFlush>:
 394:	sub	sp, sp, #0x40
 398:	stp	x29, x30, [sp, #48]
 39c:	add	x29, sp, #0x30
 3a0:	stur	x0, [x29, #-16]
 3a4:	ldur	x8, [x29, #-16]
 3a8:	ldr	w9, [x8, #28]
 3ac:	cbz	w9, 410 <lprofBufferIOFlush+0x7c>
 3b0:	ldur	x8, [x29, #-16]
 3b4:	ldr	x8, [x8, #16]
 3b8:	mov	x1, sp
 3bc:	str	x8, [sp]
 3c0:	mov	x8, #0x1                   	// #1
 3c4:	str	x8, [sp, #8]
 3c8:	ldur	x8, [x29, #-16]
 3cc:	ldr	w9, [x8, #28]
 3d0:	mov	w8, w9
 3d4:	str	x8, [sp, #16]
 3d8:	str	wzr, [sp, #24]
 3dc:	ldur	x8, [x29, #-16]
 3e0:	ldr	x8, [x8]
 3e4:	ldr	x8, [x8]
 3e8:	ldur	x10, [x29, #-16]
 3ec:	ldr	x0, [x10]
 3f0:	mov	w2, #0x1                   	// #1
 3f4:	blr	x8
 3f8:	cbz	w0, 408 <lprofBufferIOFlush+0x74>
 3fc:	mov	w8, #0xffffffff            	// #-1
 400:	stur	w8, [x29, #-4]
 404:	b	414 <lprofBufferIOFlush+0x80>
 408:	ldur	x8, [x29, #-16]
 40c:	str	wzr, [x8, #28]
 410:	stur	wzr, [x29, #-4]
 414:	ldur	w0, [x29, #-4]
 418:	ldp	x29, x30, [sp, #48]
 41c:	add	sp, sp, #0x40
 420:	ret

0000000000000424 <lprofWriteData>:
 424:	sub	sp, sp, #0x60
 428:	stp	x29, x30, [sp, #80]
 42c:	add	x29, sp, #0x50
 430:	stur	x0, [x29, #-8]
 434:	stur	x1, [x29, #-16]
 438:	stur	w2, [x29, #-20]
 43c:	bl	0 <__llvm_profile_begin_data>
 440:	stur	x0, [x29, #-32]
 444:	bl	0 <__llvm_profile_end_data>
 448:	str	x0, [sp, #40]
 44c:	bl	0 <__llvm_profile_begin_counters>
 450:	str	x0, [sp, #32]
 454:	bl	0 <__llvm_profile_end_counters>
 458:	str	x0, [sp, #24]
 45c:	bl	0 <__llvm_profile_begin_names>
 460:	str	x0, [sp, #16]
 464:	bl	0 <__llvm_profile_end_names>
 468:	str	x0, [sp, #8]
 46c:	ldur	x0, [x29, #-8]
 470:	ldur	x1, [x29, #-32]
 474:	ldr	x2, [sp, #40]
 478:	ldr	x3, [sp, #32]
 47c:	ldr	x4, [sp, #24]
 480:	ldur	x5, [x29, #-16]
 484:	ldr	x6, [sp, #16]
 488:	ldr	x7, [sp, #8]
 48c:	ldur	w8, [x29, #-20]
 490:	mov	x9, sp
 494:	str	w8, [x9]
 498:	bl	4a8 <lprofWriteDataImpl>
 49c:	ldp	x29, x30, [sp, #80]
 4a0:	add	sp, sp, #0x60
 4a4:	ret

00000000000004a8 <lprofWriteDataImpl>:
 4a8:	sub	sp, sp, #0x1f0
 4ac:	stp	x29, x30, [sp, #464]
 4b0:	str	x28, [sp, #480]
 4b4:	add	x29, sp, #0x1d0
 4b8:	ldr	w8, [x29, #32]
 4bc:	mov	x9, #0x8                   	// #8
 4c0:	stur	x0, [x29, #-16]
 4c4:	stur	x1, [x29, #-24]
 4c8:	stur	x2, [x29, #-32]
 4cc:	stur	x3, [x29, #-40]
 4d0:	stur	x4, [x29, #-48]
 4d4:	stur	x5, [x29, #-56]
 4d8:	stur	x6, [x29, #-64]
 4dc:	stur	x7, [x29, #-72]
 4e0:	stur	w8, [x29, #-76]
 4e4:	ldur	x0, [x29, #-24]
 4e8:	ldur	x1, [x29, #-32]
 4ec:	str	x9, [sp, #24]
 4f0:	bl	0 <__llvm_profile_get_data_size>
 4f4:	stur	x0, [x29, #-88]
 4f8:	ldur	x9, [x29, #-48]
 4fc:	ldur	x10, [x29, #-40]
 500:	subs	x9, x9, x10
 504:	ldr	x10, [sp, #24]
 508:	sdiv	x9, x9, x10
 50c:	stur	x9, [x29, #-96]
 510:	ldur	x9, [x29, #-72]
 514:	ldur	x11, [x29, #-64]
 518:	subs	x9, x9, x11
 51c:	stur	x9, [x29, #-104]
 520:	ldur	x9, [x29, #-88]
 524:	cbnz	x9, 530 <lprofWriteDataImpl+0x88>
 528:	stur	wzr, [x29, #-4]
 52c:	b	6d8 <lprofWriteDataImpl+0x230>
 530:	ldur	x0, [x29, #-88]
 534:	ldur	x1, [x29, #-96]
 538:	ldur	x2, [x29, #-104]
 53c:	sub	x3, x29, #0xc0
 540:	sub	x4, x29, #0xc8
 544:	sub	x5, x29, #0xd0
 548:	bl	0 <__llvm_profile_get_padding_sizes_for_counters>
 54c:	bl	0 <__llvm_profile_get_magic>
 550:	sub	x8, x29, #0xb8
 554:	stur	x0, [x29, #-184]
 558:	str	x8, [sp, #16]
 55c:	bl	0 <__llvm_profile_get_version>
 560:	stur	x0, [x29, #-176]
 564:	ldur	x8, [x29, #-88]
 568:	stur	x8, [x29, #-168]
 56c:	ldur	x8, [x29, #-192]
 570:	stur	x8, [x29, #-160]
 574:	ldur	x8, [x29, #-96]
 578:	stur	x8, [x29, #-152]
 57c:	ldur	x8, [x29, #-200]
 580:	stur	x8, [x29, #-144]
 584:	ldur	x8, [x29, #-104]
 588:	stur	x8, [x29, #-136]
 58c:	ldur	x8, [x29, #-40]
 590:	stur	x8, [x29, #-128]
 594:	ldur	x8, [x29, #-64]
 598:	stur	x8, [x29, #-120]
 59c:	mov	x8, #0x1                   	// #1
 5a0:	stur	x8, [x29, #-112]
 5a4:	add	x9, sp, #0x20
 5a8:	ldr	x10, [sp, #16]
 5ac:	str	x10, [sp, #32]
 5b0:	mov	x11, #0x50                  	// #80
 5b4:	str	x11, [sp, #40]
 5b8:	str	x8, [sp, #48]
 5bc:	str	wzr, [sp, #56]
 5c0:	ldur	x11, [x29, #-24]
 5c4:	str	x11, [x9, #32]
 5c8:	mov	x11, #0x30                  	// #48
 5cc:	str	x11, [sp, #72]
 5d0:	ldur	x11, [x29, #-88]
 5d4:	str	x11, [sp, #80]
 5d8:	str	wzr, [sp, #88]
 5dc:	mov	x11, xzr
 5e0:	str	x11, [x9, #64]
 5e4:	str	x8, [sp, #104]
 5e8:	ldur	x12, [x29, #-192]
 5ec:	str	x12, [sp, #112]
 5f0:	mov	w13, #0x1                   	// #1
 5f4:	str	w13, [sp, #120]
 5f8:	ldur	x12, [x29, #-40]
 5fc:	str	x12, [x9, #96]
 600:	mov	x12, #0x8                   	// #8
 604:	str	x12, [sp, #136]
 608:	ldur	x12, [x29, #-96]
 60c:	str	x12, [sp, #144]
 610:	str	wzr, [sp, #152]
 614:	str	x11, [x9, #128]
 618:	str	x8, [sp, #168]
 61c:	ldur	x8, [x29, #-200]
 620:	str	x8, [sp, #176]
 624:	str	w13, [sp, #184]
 628:	ldur	w13, [x29, #-76]
 62c:	str	x9, [sp, #8]
 630:	cbz	w13, 640 <lprofWriteDataImpl+0x198>
 634:	mov	x8, xzr
 638:	str	x8, [sp]
 63c:	b	648 <lprofWriteDataImpl+0x1a0>
 640:	ldur	x8, [x29, #-64]
 644:	str	x8, [sp]
 648:	ldr	x8, [sp]
 64c:	ldr	x9, [sp, #8]
 650:	str	x8, [x9, #160]
 654:	add	x8, sp, #0x20
 658:	mov	x10, #0x1                   	// #1
 65c:	str	x10, [sp, #200]
 660:	ldur	x11, [x29, #-104]
 664:	str	x11, [sp, #208]
 668:	str	wzr, [sp, #216]
 66c:	mov	x11, xzr
 670:	str	x11, [x8, #192]
 674:	str	x10, [sp, #232]
 678:	ldur	x10, [x29, #-208]
 67c:	str	x10, [sp, #240]
 680:	mov	w12, #0x1                   	// #1
 684:	str	w12, [sp, #248]
 688:	ldur	x10, [x29, #-16]
 68c:	ldr	x10, [x10]
 690:	ldur	x0, [x29, #-16]
 694:	mov	x1, x8
 698:	mov	w2, #0x7                   	// #7
 69c:	blr	x10
 6a0:	cbz	w0, 6b0 <lprofWriteDataImpl+0x208>
 6a4:	mov	w8, #0xffffffff            	// #-1
 6a8:	stur	w8, [x29, #-4]
 6ac:	b	6d8 <lprofWriteDataImpl+0x230>
 6b0:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
 6b4:	cbz	w0, 6c0 <lprofWriteDataImpl+0x218>
 6b8:	stur	wzr, [x29, #-4]
 6bc:	b	6d8 <lprofWriteDataImpl+0x230>
 6c0:	ldur	x0, [x29, #-16]
 6c4:	ldur	x1, [x29, #-56]
 6c8:	ldur	x2, [x29, #-24]
 6cc:	ldur	x3, [x29, #-32]
 6d0:	bl	6ec <writeValueProfData>
 6d4:	stur	w0, [x29, #-4]
 6d8:	ldur	w0, [x29, #-4]
 6dc:	ldr	x28, [sp, #480]
 6e0:	ldp	x29, x30, [sp, #464]
 6e4:	add	sp, sp, #0x1f0
 6e8:	ret

00000000000006ec <writeValueProfData>:
 6ec:	sub	sp, sp, #0x50
 6f0:	stp	x29, x30, [sp, #64]
 6f4:	add	x29, sp, #0x40
 6f8:	mov	x8, xzr
 6fc:	stur	x0, [x29, #-16]
 700:	stur	x1, [x29, #-24]
 704:	str	x2, [sp, #32]
 708:	str	x3, [sp, #24]
 70c:	str	x8, [sp, #8]
 710:	ldur	x8, [x29, #-24]
 714:	cbnz	x8, 720 <writeValueProfData+0x34>
 718:	stur	wzr, [x29, #-4]
 71c:	b	798 <writeValueProfData+0xac>
 720:	ldur	x0, [x29, #-16]
 724:	bl	118 <lprofCreateBufferIO>
 728:	str	x0, [sp, #16]
 72c:	ldr	x8, [sp, #32]
 730:	str	x8, [sp, #8]
 734:	ldr	x8, [sp, #8]
 738:	ldr	x9, [sp, #24]
 73c:	cmp	x8, x9
 740:	b.cs	774 <writeValueProfData+0x88>  // b.hs, b.nlast
 744:	ldr	x0, [sp, #16]
 748:	ldur	x1, [x29, #-24]
 74c:	ldr	x2, [sp, #8]
 750:	bl	7a8 <writeOneValueProfData>
 754:	cbz	w0, 764 <writeValueProfData+0x78>
 758:	mov	w8, #0xffffffff            	// #-1
 75c:	stur	w8, [x29, #-4]
 760:	b	798 <writeValueProfData+0xac>
 764:	ldr	x8, [sp, #8]
 768:	add	x8, x8, #0x30
 76c:	str	x8, [sp, #8]
 770:	b	734 <writeValueProfData+0x48>
 774:	ldr	x0, [sp, #16]
 778:	bl	394 <lprofBufferIOFlush>
 77c:	cbz	w0, 78c <writeValueProfData+0xa0>
 780:	mov	w8, #0xffffffff            	// #-1
 784:	stur	w8, [x29, #-4]
 788:	b	798 <writeValueProfData+0xac>
 78c:	ldr	x0, [sp, #16]
 790:	bl	1e4 <lprofDeleteBufferIO>
 794:	stur	wzr, [x29, #-4]
 798:	ldur	w0, [x29, #-4]
 79c:	ldp	x29, x30, [sp, #64]
 7a0:	add	sp, sp, #0x50
 7a4:	ret

00000000000007a8 <writeOneValueProfData>:
 7a8:	stp	x29, x30, [sp, #-16]!
 7ac:	mov	x29, sp
 7b0:	sub	sp, sp, #0xa0
 7b4:	stur	x0, [x29, #-16]
 7b8:	stur	x1, [x29, #-24]
 7bc:	stur	x2, [x29, #-32]
 7c0:	stur	wzr, [x29, #-40]
 7c4:	stur	wzr, [x29, #-36]
 7c8:	ldur	w8, [x29, #-36]
 7cc:	cmp	w8, #0x1
 7d0:	b.hi	8cc <writeOneValueProfData+0x124>  // b.pmore
 7d4:	ldur	x8, [x29, #-32]
 7d8:	add	x8, x8, #0x2c
 7dc:	ldur	w9, [x29, #-36]
 7e0:	mov	w10, w9
 7e4:	mov	x11, #0x2                   	// #2
 7e8:	mul	x10, x11, x10
 7ec:	add	x8, x8, x10
 7f0:	ldrh	w9, [x8]
 7f4:	cbnz	w9, 81c <writeOneValueProfData+0x74>
 7f8:	ldur	w8, [x29, #-36]
 7fc:	mov	w9, w8
 800:	mov	x10, #0x8                   	// #8
 804:	mul	x9, x10, x9
 808:	sub	x10, x29, #0x40
 80c:	add	x9, x10, x9
 810:	mov	x10, xzr
 814:	str	x10, [x9]
 818:	b	8bc <writeOneValueProfData+0x114>
 81c:	ldur	x8, [x29, #-24]
 820:	mov	x9, #0x8                   	// #8
 824:	ldr	x8, [x8, #8]
 828:	ldur	x10, [x29, #-32]
 82c:	add	x10, x10, #0x2c
 830:	ldur	w11, [x29, #-36]
 834:	mov	w12, w11
 838:	ldrh	w0, [x10, x12, lsl #1]
 83c:	stur	x9, [x29, #-120]
 840:	blr	x8
 844:	mov	w8, w0
 848:	ubfx	x8, x8, #0, #32
 84c:	subs	x8, x8, #0x8
 850:	stur	w8, [x29, #-68]
 854:	ldur	w8, [x29, #-68]
 858:	mov	w9, w8
 85c:	mov	x10, #0x1                   	// #1
 860:	mul	x9, x9, x10
 864:	add	x9, x9, #0xf
 868:	and	x9, x9, #0xfffffffffffffff0
 86c:	mov	x10, sp
 870:	subs	x9, x10, x9
 874:	mov	sp, x9
 878:	ldur	w8, [x29, #-36]
 87c:	mov	w10, w8
 880:	ldur	x12, [x29, #-120]
 884:	mul	x10, x12, x10
 888:	sub	x13, x29, #0x40
 88c:	add	x10, x13, x10
 890:	str	x9, [x10]
 894:	ldur	w8, [x29, #-36]
 898:	mov	w9, w8
 89c:	mul	x9, x12, x9
 8a0:	add	x9, x13, x9
 8a4:	ldr	x0, [x9]
 8a8:	ldur	w8, [x29, #-68]
 8ac:	mov	w2, w8
 8b0:	mov	w8, wzr
 8b4:	mov	w1, w8
 8b8:	bl	0 <memset>
 8bc:	ldur	w8, [x29, #-36]
 8c0:	add	w8, w8, #0x1
 8c4:	stur	w8, [x29, #-36]
 8c8:	b	7c8 <writeOneValueProfData+0x20>
 8cc:	ldur	x8, [x29, #-24]
 8d0:	ldr	x8, [x8]
 8d4:	ldur	x0, [x29, #-32]
 8d8:	sub	x1, x29, #0x40
 8dc:	blr	x8
 8e0:	stur	w0, [x29, #-40]
 8e4:	cbnz	w0, 8f0 <writeOneValueProfData+0x148>
 8e8:	stur	wzr, [x29, #-4]
 8ec:	b	b70 <writeOneValueProfData+0x3c8>
 8f0:	ldur	x8, [x29, #-24]
 8f4:	ldr	x8, [x8, #32]
 8f8:	blr	x8
 8fc:	sub	x1, x29, #0x30
 900:	stur	w0, [x29, #-48]
 904:	ldur	w9, [x29, #-40]
 908:	stur	w9, [x29, #-44]
 90c:	ldur	x0, [x29, #-16]
 910:	mov	w2, #0x8                   	// #8
 914:	bl	26c <lprofBufferIOWrite>
 918:	cbz	w0, 928 <writeOneValueProfData+0x180>
 91c:	mov	w8, #0xffffffff            	// #-1
 920:	stur	w8, [x29, #-4]
 924:	b	b70 <writeOneValueProfData+0x3c8>
 928:	ldur	x8, [x29, #-24]
 92c:	ldr	x8, [x8, #16]
 930:	sub	x9, x29, #0x30
 934:	mov	x0, x9
 938:	stur	x9, [x29, #-128]
 93c:	blr	x8
 940:	ldur	x8, [x29, #-128]
 944:	add	x9, x8, #0x8
 948:	cmp	x0, x9
 94c:	b.eq	95c <writeOneValueProfData+0x1b4>  // b.none
 950:	mov	w8, #0xffffffff            	// #-1
 954:	stur	w8, [x29, #-4]
 958:	b	b70 <writeOneValueProfData+0x3c8>
 95c:	stur	wzr, [x29, #-36]
 960:	ldur	w8, [x29, #-36]
 964:	cmp	w8, #0x1
 968:	b.hi	b6c <writeOneValueProfData+0x3c4>  // b.pmore
 96c:	mov	w8, #0x8                   	// #8
 970:	stur	w8, [x29, #-88]
 974:	ldur	x9, [x29, #-32]
 978:	add	x9, x9, #0x2c
 97c:	ldur	w8, [x29, #-36]
 980:	mov	w10, w8
 984:	mov	x11, #0x2                   	// #2
 988:	mul	x10, x11, x10
 98c:	add	x9, x9, x10
 990:	ldrh	w8, [x9]
 994:	cbnz	w8, 99c <writeOneValueProfData+0x1f4>
 998:	b	b5c <writeOneValueProfData+0x3b4>
 99c:	ldur	w8, [x29, #-36]
 9a0:	sub	x1, x29, #0x54
 9a4:	stur	w8, [x29, #-84]
 9a8:	ldur	x9, [x29, #-32]
 9ac:	add	x9, x9, #0x2c
 9b0:	ldur	w8, [x29, #-36]
 9b4:	mov	w10, w8
 9b8:	ldrh	w8, [x9, x10, lsl #1]
 9bc:	stur	w8, [x29, #-80]
 9c0:	ldur	x0, [x29, #-16]
 9c4:	ldur	w2, [x29, #-88]
 9c8:	bl	26c <lprofBufferIOWrite>
 9cc:	cbz	w0, 9dc <writeOneValueProfData+0x234>
 9d0:	mov	w8, #0xffffffff            	// #-1
 9d4:	stur	w8, [x29, #-4]
 9d8:	b	b70 <writeOneValueProfData+0x3c8>
 9dc:	ldur	x8, [x29, #-24]
 9e0:	mov	x9, #0x8                   	// #8
 9e4:	ldr	x8, [x8, #8]
 9e8:	ldur	x10, [x29, #-32]
 9ec:	add	x10, x10, #0x2c
 9f0:	ldur	w11, [x29, #-36]
 9f4:	mov	w12, w11
 9f8:	ldrh	w0, [x10, x12, lsl #1]
 9fc:	stur	x9, [x29, #-136]
 a00:	blr	x8
 a04:	ldur	w11, [x29, #-88]
 a08:	subs	w11, w0, w11
 a0c:	stur	w11, [x29, #-92]
 a10:	ldur	x0, [x29, #-16]
 a14:	ldur	w11, [x29, #-36]
 a18:	mov	w8, w11
 a1c:	ldur	x9, [x29, #-136]
 a20:	mul	x8, x9, x8
 a24:	sub	x10, x29, #0x40
 a28:	add	x8, x10, x8
 a2c:	ldr	x1, [x8]
 a30:	ldur	w2, [x29, #-92]
 a34:	bl	26c <lprofBufferIOWrite>
 a38:	cbz	w0, a48 <writeOneValueProfData+0x2a0>
 a3c:	mov	w8, #0xffffffff            	// #-1
 a40:	stur	w8, [x29, #-4]
 a44:	b	b70 <writeOneValueProfData+0x3c8>
 a48:	stur	wzr, [x29, #-72]
 a4c:	ldur	w8, [x29, #-72]
 a50:	ldur	x9, [x29, #-32]
 a54:	add	x9, x9, #0x2c
 a58:	ldur	w10, [x29, #-36]
 a5c:	mov	w11, w10
 a60:	ldrh	w10, [x9, x11, lsl #1]
 a64:	cmp	w8, w10
 a68:	b.cs	b5c <writeOneValueProfData+0x3b4>  // b.hs, b.nlast
 a6c:	mov	x8, xzr
 a70:	stur	x8, [x29, #-112]
 a74:	ldur	x8, [x29, #-24]
 a78:	ldr	x8, [x8, #24]
 a7c:	ldur	w0, [x29, #-36]
 a80:	ldur	w1, [x29, #-72]
 a84:	blr	x8
 a88:	stur	w0, [x29, #-100]
 a8c:	ldur	w9, [x29, #-100]
 a90:	cbnz	w9, a98 <writeOneValueProfData+0x2f0>
 a94:	b	b4c <writeOneValueProfData+0x3a4>
 a98:	ldur	w8, [x29, #-100]
 a9c:	adrp	x9, 0 <lprofBufferWriter>
 aa0:	add	x9, x9, #0x0
 aa4:	ldr	w10, [x9]
 aa8:	cmp	w8, w10
 aac:	b.ls	ac4 <writeOneValueProfData+0x31c>  // b.plast
 ab0:	adrp	x8, 0 <lprofBufferWriter>
 ab4:	add	x8, x8, #0x0
 ab8:	ldr	w9, [x8]
 abc:	stur	w9, [x29, #-140]
 ac0:	b	acc <writeOneValueProfData+0x324>
 ac4:	ldur	w8, [x29, #-100]
 ac8:	stur	w8, [x29, #-140]
 acc:	ldur	w8, [x29, #-140]
 ad0:	stur	w8, [x29, #-96]
 ad4:	ldur	x9, [x29, #-24]
 ad8:	ldr	x9, [x9, #40]
 adc:	ldur	w0, [x29, #-36]
 ae0:	ldur	w1, [x29, #-72]
 ae4:	ldur	x3, [x29, #-112]
 ae8:	ldur	w4, [x29, #-96]
 aec:	adrp	x10, 0 <lprofBufferWriter>
 af0:	add	x10, x10, #0x0
 af4:	mov	x2, x10
 af8:	stur	x10, [x29, #-152]
 afc:	blr	x9
 b00:	stur	x0, [x29, #-112]
 b04:	ldur	x0, [x29, #-16]
 b08:	ldur	w8, [x29, #-96]
 b0c:	mov	w9, w8
 b10:	mov	x10, #0x10                  	// #16
 b14:	mul	x9, x9, x10
 b18:	ldur	x1, [x29, #-152]
 b1c:	mov	w2, w9
 b20:	bl	26c <lprofBufferIOWrite>
 b24:	cbz	w0, b34 <writeOneValueProfData+0x38c>
 b28:	mov	w8, #0xffffffff            	// #-1
 b2c:	stur	w8, [x29, #-4]
 b30:	b	b70 <writeOneValueProfData+0x3c8>
 b34:	ldur	w8, [x29, #-96]
 b38:	ldur	w9, [x29, #-100]
 b3c:	subs	w8, w9, w8
 b40:	stur	w8, [x29, #-100]
 b44:	ldur	w8, [x29, #-100]
 b48:	cbnz	w8, a98 <writeOneValueProfData+0x2f0>
 b4c:	ldur	w8, [x29, #-72]
 b50:	add	w8, w8, #0x1
 b54:	stur	w8, [x29, #-72]
 b58:	b	a4c <writeOneValueProfData+0x2a4>
 b5c:	ldur	w8, [x29, #-36]
 b60:	add	w8, w8, #0x1
 b64:	stur	w8, [x29, #-36]
 b68:	b	960 <writeOneValueProfData+0x1b8>
 b6c:	stur	wzr, [x29, #-4]
 b70:	ldur	w0, [x29, #-4]
 b74:	mov	sp, x29
 b78:	ldp	x29, x30, [sp], #16
 b7c:	ret

InstrProfilingPlatformDarwin.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformFuchsia.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformLinux.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_begin_data>:
   0:	adrp	x0, 0 <__start___llvm_prf_data>
   4:	add	x0, x0, #0x0
   8:	ret

000000000000000c <__llvm_profile_end_data>:
   c:	adrp	x0, 0 <__stop___llvm_prf_data>
  10:	add	x0, x0, #0x0
  14:	ret

0000000000000018 <__llvm_profile_begin_names>:
  18:	adrp	x0, 0 <__start___llvm_prf_names>
  1c:	add	x0, x0, #0x0
  20:	ret

0000000000000024 <__llvm_profile_end_names>:
  24:	adrp	x0, 0 <__stop___llvm_prf_names>
  28:	add	x0, x0, #0x0
  2c:	ret

0000000000000030 <__llvm_profile_begin_counters>:
  30:	adrp	x0, 0 <__start___llvm_prf_cnts>
  34:	add	x0, x0, #0x0
  38:	ret

000000000000003c <__llvm_profile_end_counters>:
  3c:	adrp	x0, 0 <__stop___llvm_prf_cnts>
  40:	add	x0, x0, #0x0
  44:	ret

0000000000000048 <__llvm_profile_begin_orderfile>:
  48:	adrp	x0, 0 <__start___llvm_orderfile>
  4c:	add	x0, x0, #0x0
  50:	ret

0000000000000054 <__llvm_profile_begin_vnodes>:
  54:	adrp	x0, 0 <__start___llvm_prf_vnds>
  58:	add	x0, x0, #0x0
  5c:	ret

0000000000000060 <__llvm_profile_end_vnodes>:
  60:	adrp	x0, 0 <__stop___llvm_prf_vnds>
  64:	add	x0, x0, #0x0
  68:	ret

InstrProfilingPlatformOther.c.o:     file format elf64-littleaarch64


InstrProfilingPlatformWindows.c.o:     file format elf64-littleaarch64


InstrProfilingRuntime.cpp.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <_ZN12_GLOBAL__N_115RegisterRuntimeC2Ev>:
   0:	sub	sp, sp, #0x20
   4:	stp	x29, x30, [sp, #16]
   8:	add	x29, sp, #0x10
   c:	str	x0, [sp, #8]
  10:	bl	0 <__llvm_profile_initialize_file>
  14:	bl	0 <__llvm_profile_is_continuous_mode_enabled>
  18:	cbnz	w0, 20 <_ZN12_GLOBAL__N_115RegisterRuntimeC2Ev+0x20>
  1c:	bl	0 <__llvm_profile_register_write_file_atexit>
  20:	ldp	x29, x30, [sp, #16]
  24:	add	sp, sp, #0x20
  28:	ret

Disassembly of section .text.startup:

0000000000000000 <__cxx_global_var_init>:
   0:	stp	x29, x30, [sp, #-16]!
   4:	mov	x29, sp
   8:	adrp	x0, 0 <__cxx_global_var_init>
   c:	add	x0, x0, #0x0
  10:	bl	0 <__cxx_global_var_init>
  14:	ldp	x29, x30, [sp], #16
  18:	ret

000000000000001c <_GLOBAL__sub_I_InstrProfilingRuntime.cpp>:
  1c:	stp	x29, x30, [sp, #-16]!
  20:	mov	x29, sp
  24:	bl	0 <__cxx_global_var_init>
  28:	ldp	x29, x30, [sp], #16
  2c:	ret

InstrProfilingUtil.c.o:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <__llvm_profile_recursive_mkdir>:
   0:	sub	sp, sp, #0x40
   4:	stp	x29, x30, [sp, #48]
   8:	add	x29, sp, #0x30
   c:	mov	w8, #0x1                   	// #1
  10:	stur	x0, [x29, #-8]
  14:	stur	w8, [x29, #-16]
  18:	ldur	w8, [x29, #-16]
  1c:	stur	w8, [x29, #-12]
  20:	ldur	x8, [x29, #-8]
  24:	ldursw	x9, [x29, #-12]
  28:	ldrb	w10, [x8, x9]
  2c:	cbz	w10, b4 <__llvm_profile_recursive_mkdir+0xb4>
  30:	ldur	x8, [x29, #-8]
  34:	ldursw	x9, [x29, #-12]
  38:	add	x8, x8, x9
  3c:	ldrb	w10, [x8]
  40:	sturb	w10, [x29, #-17]
  44:	ldur	x8, [x29, #-8]
  48:	ldursw	x9, [x29, #-12]
  4c:	ldrb	w10, [x8, x9]
  50:	cmp	w10, #0x2f
  54:	b.eq	5c <__llvm_profile_recursive_mkdir+0x5c>  // b.none
  58:	b	a4 <__llvm_profile_recursive_mkdir+0xa4>
  5c:	ldur	x8, [x29, #-8]
  60:	ldursw	x9, [x29, #-12]
  64:	add	x8, x8, x9
  68:	mov	w10, #0x0                   	// #0
  6c:	strb	w10, [x8]
  70:	ldur	x0, [x29, #-8]
  74:	str	x0, [sp, #16]
  78:	bl	c0 <__llvm_profile_get_dir_mode>
  7c:	ldr	x8, [sp, #16]
  80:	str	w0, [sp, #12]
  84:	mov	x0, x8
  88:	ldr	w1, [sp, #12]
  8c:	bl	0 <mkdir>
  90:	ldurb	w10, [x29, #-17]
  94:	ldur	x8, [x29, #-8]
  98:	ldursw	x9, [x29, #-12]
  9c:	add	x8, x8, x9
  a0:	strb	w10, [x8]
  a4:	ldur	w8, [x29, #-12]
  a8:	add	w8, w8, #0x1
  ac:	stur	w8, [x29, #-12]
  b0:	b	20 <__llvm_profile_recursive_mkdir+0x20>
  b4:	ldp	x29, x30, [sp, #48]
  b8:	add	sp, sp, #0x40
  bc:	ret

00000000000000c0 <__llvm_profile_get_dir_mode>:
  c0:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  c4:	ldr	x8, [x8]
  c8:	ldr	w0, [x8]
  cc:	ret

00000000000000d0 <__llvm_profile_set_dir_mode>:
  d0:	sub	sp, sp, #0x10
  d4:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
  d8:	ldr	x8, [x8]
  dc:	str	w0, [sp, #12]
  e0:	ldr	w9, [sp, #12]
  e4:	str	w9, [x8]
  e8:	add	sp, sp, #0x10
  ec:	ret

00000000000000f0 <lprofGetHostName>:
  f0:	sub	sp, sp, #0x1c0
  f4:	stp	x29, x30, [sp, #416]
  f8:	str	x28, [sp, #432]
  fc:	add	x29, sp, #0x1a0
 100:	add	x8, sp, #0x6
 104:	stur	x0, [x29, #-16]
 108:	stur	w1, [x29, #-20]
 10c:	mov	x0, x8
 110:	bl	0 <uname>
 114:	str	w0, [sp]
 118:	ldr	w9, [sp]
 11c:	cmp	w9, #0x0
 120:	cset	w9, lt  // lt = tstop
 124:	tbnz	w9, #0, 144 <lprofGetHostName+0x54>
 128:	ldur	x0, [x29, #-16]
 12c:	add	x8, sp, #0x6
 130:	add	x1, x8, #0x41
 134:	ldursw	x2, [x29, #-20]
 138:	bl	0 <strncpy>
 13c:	stur	wzr, [x29, #-4]
 140:	b	14c <lprofGetHostName+0x5c>
 144:	ldr	w8, [sp]
 148:	stur	w8, [x29, #-4]
 14c:	ldur	w0, [x29, #-4]
 150:	ldr	x28, [sp, #432]
 154:	ldp	x29, x30, [sp, #416]
 158:	add	sp, sp, #0x1c0
 15c:	ret

0000000000000160 <lprofLockFd>:
 160:	sub	sp, sp, #0x40
 164:	stp	x29, x30, [sp, #48]
 168:	add	x29, sp, #0x30
 16c:	mov	w8, #0x0                   	// #0
 170:	mov	w9, #0x1                   	// #1
 174:	add	x10, sp, #0x8
 178:	stur	w0, [x29, #-8]
 17c:	strh	w8, [x10, #2]
 180:	str	xzr, [sp, #16]
 184:	str	xzr, [sp, #24]
 188:	str	w9, [sp, #4]
 18c:	bl	0 <getpid>
 190:	str	w0, [sp, #32]
 194:	ldr	w8, [sp, #4]
 198:	strh	w8, [sp, #8]
 19c:	ldur	w0, [x29, #-8]
 1a0:	mov	w1, #0x7                   	// #7
 1a4:	add	x2, sp, #0x8
 1a8:	bl	0 <fcntl>
 1ac:	mov	w8, #0xffffffff            	// #-1
 1b0:	cmp	w0, w8
 1b4:	b.ne	1ec <lprofLockFd+0x8c>  // b.any
 1b8:	bl	0 <__errno_location>
 1bc:	ldr	w8, [x0]
 1c0:	cmp	w8, #0x4
 1c4:	b.eq	1e8 <lprofLockFd+0x88>  // b.none
 1c8:	bl	0 <__errno_location>
 1cc:	ldr	w8, [x0]
 1d0:	cmp	w8, #0x25
 1d4:	b.ne	1e4 <lprofLockFd+0x84>  // b.any
 1d8:	mov	w8, #0xffffffff            	// #-1
 1dc:	stur	w8, [x29, #-4]
 1e0:	b	1f0 <lprofLockFd+0x90>
 1e4:	b	1ec <lprofLockFd+0x8c>
 1e8:	b	19c <lprofLockFd+0x3c>
 1ec:	stur	wzr, [x29, #-4]
 1f0:	ldur	w0, [x29, #-4]
 1f4:	ldp	x29, x30, [sp, #48]
 1f8:	add	sp, sp, #0x40
 1fc:	ret

0000000000000200 <lprofUnlockFd>:
 200:	sub	sp, sp, #0x40
 204:	stp	x29, x30, [sp, #48]
 208:	add	x29, sp, #0x30
 20c:	mov	w8, #0x0                   	// #0
 210:	mov	w9, #0x2                   	// #2
 214:	add	x10, sp, #0x8
 218:	stur	w0, [x29, #-8]
 21c:	strh	w8, [x10, #2]
 220:	str	xzr, [sp, #16]
 224:	str	xzr, [sp, #24]
 228:	str	w9, [sp, #4]
 22c:	bl	0 <getpid>
 230:	str	w0, [sp, #32]
 234:	ldr	w8, [sp, #4]
 238:	strh	w8, [sp, #8]
 23c:	ldur	w0, [x29, #-8]
 240:	mov	w1, #0x7                   	// #7
 244:	add	x2, sp, #0x8
 248:	bl	0 <fcntl>
 24c:	mov	w8, #0xffffffff            	// #-1
 250:	cmp	w0, w8
 254:	b.ne	28c <lprofUnlockFd+0x8c>  // b.any
 258:	bl	0 <__errno_location>
 25c:	ldr	w8, [x0]
 260:	cmp	w8, #0x4
 264:	b.eq	288 <lprofUnlockFd+0x88>  // b.none
 268:	bl	0 <__errno_location>
 26c:	ldr	w8, [x0]
 270:	cmp	w8, #0x25
 274:	b.ne	284 <lprofUnlockFd+0x84>  // b.any
 278:	mov	w8, #0xffffffff            	// #-1
 27c:	stur	w8, [x29, #-4]
 280:	b	290 <lprofUnlockFd+0x90>
 284:	b	28c <lprofUnlockFd+0x8c>
 288:	b	23c <lprofUnlockFd+0x3c>
 28c:	stur	wzr, [x29, #-4]
 290:	ldur	w0, [x29, #-4]
 294:	ldp	x29, x30, [sp, #48]
 298:	add	sp, sp, #0x40
 29c:	ret

00000000000002a0 <lprofLockFileHandle>:
 2a0:	sub	sp, sp, #0x20
 2a4:	stp	x29, x30, [sp, #16]
 2a8:	add	x29, sp, #0x10
 2ac:	str	x0, [sp, #8]
 2b0:	ldr	x0, [sp, #8]
 2b4:	bl	0 <fileno>
 2b8:	str	w0, [sp, #4]
 2bc:	ldr	w0, [sp, #4]
 2c0:	bl	160 <lprofLockFd>
 2c4:	ldp	x29, x30, [sp, #16]
 2c8:	add	sp, sp, #0x20
 2cc:	ret

00000000000002d0 <lprofUnlockFileHandle>:
 2d0:	sub	sp, sp, #0x20
 2d4:	stp	x29, x30, [sp, #16]
 2d8:	add	x29, sp, #0x10
 2dc:	str	x0, [sp, #8]
 2e0:	ldr	x0, [sp, #8]
 2e4:	bl	0 <fileno>
 2e8:	str	w0, [sp, #4]
 2ec:	ldr	w0, [sp, #4]
 2f0:	bl	200 <lprofUnlockFd>
 2f4:	ldp	x29, x30, [sp, #16]
 2f8:	add	sp, sp, #0x20
 2fc:	ret

0000000000000300 <lprofOpenFileEx>:
 300:	sub	sp, sp, #0x30
 304:	stp	x29, x30, [sp, #32]
 308:	add	x29, sp, #0x20
 30c:	mov	w1, #0x42                  	// #66
 310:	mov	w2, #0x1b6                 	// #438
 314:	str	x0, [sp, #16]
 318:	ldr	x0, [sp, #16]
 31c:	bl	0 <open>
 320:	str	w0, [sp, #4]
 324:	ldr	w8, [sp, #4]
 328:	cmp	w8, #0x0
 32c:	cset	w8, ge  // ge = tcont
 330:	tbnz	w8, #0, 340 <lprofOpenFileEx+0x40>
 334:	mov	x8, xzr
 338:	stur	x8, [x29, #-8]
 33c:	b	388 <lprofOpenFileEx+0x88>
 340:	ldr	w0, [sp, #4]
 344:	bl	160 <lprofLockFd>
 348:	cbz	w0, 36c <lprofOpenFileEx+0x6c>
 34c:	adrp	x8, 0 <stderr>
 350:	ldr	x8, [x8]
 354:	ldr	x0, [x8]
 358:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 35c:	add	x1, x1, #0x0
 360:	adrp	x2, 0 <__llvm_profile_recursive_mkdir>
 364:	add	x2, x2, #0x0
 368:	bl	0 <fprintf>
 36c:	ldr	w0, [sp, #4]
 370:	adrp	x1, 0 <__llvm_profile_recursive_mkdir>
 374:	add	x1, x1, #0x0
 378:	bl	0 <fdopen>
 37c:	str	x0, [sp, #8]
 380:	ldr	x8, [sp, #8]
 384:	stur	x8, [x29, #-8]
 388:	ldur	x0, [x29, #-8]
 38c:	ldp	x29, x30, [sp, #32]
 390:	add	sp, sp, #0x30
 394:	ret

0000000000000398 <lprofGetPathPrefix>:
 398:	sub	sp, sp, #0x40
 39c:	stp	x29, x30, [sp, #48]
 3a0:	add	x29, sp, #0x30
 3a4:	adrp	x8, 0 <__llvm_profile_recursive_mkdir>
 3a8:	add	x8, x8, #0x0
 3ac:	adrp	x9, 0 <__llvm_profile_recursive_mkdir>
 3b0:	add	x9, x9, #0x0
 3b4:	stur	x0, [x29, #-16]
 3b8:	str	x1, [sp, #24]
 3bc:	mov	x0, x8
 3c0:	str	x9, [sp]
 3c4:	bl	0 <getenv>
 3c8:	str	x0, [sp, #16]
 3cc:	ldr	x0, [sp]
 3d0:	bl	0 <getenv>
 3d4:	str	x0, [sp, #8]
 3d8:	ldr	x8, [sp, #24]
 3dc:	str	xzr, [x8]
 3e0:	ldur	x8, [x29, #-16]
 3e4:	str	wzr, [x8]
 3e8:	ldr	x8, [sp, #16]
 3ec:	cbz	x8, 3fc <lprofGetPathPrefix+0x64>
 3f0:	ldr	x8, [sp, #16]
 3f4:	ldrb	w9, [x8]
 3f8:	cbnz	w9, 408 <lprofGetPathPrefix+0x70>
 3fc:	mov	x8, xzr
 400:	stur	x8, [x29, #-8]
 404:	b	460 <lprofGetPathPrefix+0xc8>
 408:	ldr	x8, [sp, #8]
 40c:	cbz	x8, 440 <lprofGetPathPrefix+0xa8>
 410:	ldr	x0, [sp, #8]
 414:	bl	0 <atoi>
 418:	ldur	x8, [x29, #-16]
 41c:	str	w0, [x8]
 420:	ldur	x8, [x29, #-16]
 424:	ldr	w9, [x8]
 428:	cmp	w9, #0x0
 42c:	cset	w9, ge  // ge = tcont
 430:	tbnz	w9, #0, 43c <lprofGetPathPrefix+0xa4>
 434:	ldur	x8, [x29, #-16]
 438:	str	wzr, [x8]
 43c:	b	448 <lprofGetPathPrefix+0xb0>
 440:	ldur	x8, [x29, #-16]
 444:	str	wzr, [x8]
 448:	ldr	x0, [sp, #16]
 44c:	bl	0 <strlen>
 450:	ldr	x8, [sp, #24]
 454:	str	x0, [x8]
 458:	ldr	x8, [sp, #16]
 45c:	stur	x8, [x29, #-8]
 460:	ldur	x0, [x29, #-8]
 464:	ldp	x29, x30, [sp, #48]
 468:	add	sp, sp, #0x40
 46c:	ret

0000000000000470 <lprofApplyPathPrefix>:
 470:	sub	sp, sp, #0x60
 474:	stp	x29, x30, [sp, #80]
 478:	add	x29, sp, #0x50
 47c:	stur	x0, [x29, #-8]
 480:	stur	x1, [x29, #-16]
 484:	stur	x2, [x29, #-24]
 488:	stur	x3, [x29, #-32]
 48c:	stur	w4, [x29, #-36]
 490:	ldur	x8, [x29, #-16]
 494:	str	x8, [sp, #16]
 498:	str	wzr, [sp, #28]
 49c:	ldur	x8, [x29, #-16]
 4a0:	add	x8, x8, #0x1
 4a4:	str	x8, [sp, #32]
 4a8:	ldr	w8, [sp, #28]
 4ac:	ldur	w9, [x29, #-36]
 4b0:	cmp	w8, w9
 4b4:	b.ge	500 <lprofApplyPathPrefix+0x90>  // b.tcont
 4b8:	ldr	x8, [sp, #32]
 4bc:	ldrb	w9, [x8]
 4c0:	cbnz	w9, 4c8 <lprofApplyPathPrefix+0x58>
 4c4:	b	500 <lprofApplyPathPrefix+0x90>
 4c8:	ldr	x8, [sp, #32]
 4cc:	ldrb	w9, [x8]
 4d0:	cmp	w9, #0x2f
 4d4:	b.eq	4dc <lprofApplyPathPrefix+0x6c>  // b.none
 4d8:	b	4f0 <lprofApplyPathPrefix+0x80>
 4dc:	ldr	x8, [sp, #32]
 4e0:	str	x8, [sp, #16]
 4e4:	ldr	w9, [sp, #28]
 4e8:	add	w9, w9, #0x1
 4ec:	str	w9, [sp, #28]
 4f0:	ldr	x8, [sp, #32]
 4f4:	add	x8, x8, #0x1
 4f8:	str	x8, [sp, #32]
 4fc:	b	4a8 <lprofApplyPathPrefix+0x38>
 500:	ldur	x0, [x29, #-8]
 504:	ldur	x1, [x29, #-24]
 508:	ldur	x2, [x29, #-32]
 50c:	bl	0 <memcpy>
 510:	ldur	x8, [x29, #-24]
 514:	ldur	x9, [x29, #-32]
 518:	subs	x9, x9, #0x1
 51c:	ldrb	w10, [x8, x9]
 520:	cmp	w10, #0x2f
 524:	b.eq	544 <lprofApplyPathPrefix+0xd4>  // b.none
 528:	ldur	x8, [x29, #-8]
 52c:	ldur	x9, [x29, #-32]
 530:	add	x10, x9, #0x1
 534:	stur	x10, [x29, #-32]
 538:	add	x8, x8, x9
 53c:	mov	w11, #0x2f                  	// #47
 540:	strb	w11, [x8]
 544:	ldur	x8, [x29, #-8]
 548:	ldur	x9, [x29, #-32]
 54c:	add	x0, x8, x9
 550:	ldr	x1, [sp, #16]
 554:	ldr	x8, [sp, #16]
 558:	str	x0, [sp, #8]
 55c:	mov	x0, x8
 560:	str	x1, [sp]
 564:	bl	0 <strlen>
 568:	add	x2, x0, #0x1
 56c:	ldr	x0, [sp, #8]
 570:	ldr	x1, [sp]
 574:	bl	0 <memcpy>
 578:	ldp	x29, x30, [sp, #80]
 57c:	add	sp, sp, #0x60
 580:	ret

0000000000000584 <lprofFindFirstDirSeparator>:
 584:	sub	sp, sp, #0x20
 588:	stp	x29, x30, [sp, #16]
 58c:	add	x29, sp, #0x10
 590:	mov	w1, #0x2f                  	// #47
 594:	str	x0, [sp, #8]
 598:	ldr	x0, [sp, #8]
 59c:	bl	0 <strchr>
 5a0:	str	x0, [sp]
 5a4:	ldr	x0, [sp]
 5a8:	ldp	x29, x30, [sp, #16]
 5ac:	add	sp, sp, #0x20
 5b0:	ret

00000000000005b4 <lprofFindLastDirSeparator>:
 5b4:	sub	sp, sp, #0x20
 5b8:	stp	x29, x30, [sp, #16]
 5bc:	add	x29, sp, #0x10
 5c0:	mov	w1, #0x2f                  	// #47
 5c4:	str	x0, [sp, #8]
 5c8:	ldr	x0, [sp, #8]
 5cc:	bl	0 <strrchr>
 5d0:	str	x0, [sp]
 5d4:	ldr	x0, [sp]
 5d8:	ldp	x29, x30, [sp, #16]
 5dc:	add	sp, sp, #0x20
 5e0:	ret

00000000000005e4 <lprofSuspendSigKill>:
 5e4:	sub	sp, sp, #0x20
 5e8:	stp	x29, x30, [sp, #16]
 5ec:	add	x29, sp, #0x10
 5f0:	mov	w0, #0x2                   	// #2
 5f4:	sub	x1, x29, #0x4
 5f8:	stur	wzr, [x29, #-4]
 5fc:	bl	0 <prctl>
 600:	cbnz	w0, 620 <lprofSuspendSigKill+0x3c>
 604:	ldur	w8, [x29, #-4]
 608:	cmp	w8, #0x9
 60c:	b.ne	620 <lprofSuspendSigKill+0x3c>  // b.any
 610:	mov	w0, #0x1                   	// #1
 614:	mov	w8, wzr
 618:	mov	w1, w8
 61c:	bl	0 <prctl>
 620:	ldur	w8, [x29, #-4]
 624:	cmp	w8, #0x9
 628:	cset	w8, eq  // eq = none
 62c:	and	w0, w8, #0x1
 630:	ldp	x29, x30, [sp, #16]
 634:	add	sp, sp, #0x20
 638:	ret

000000000000063c <lprofRestoreSigKill>:
 63c:	stp	x29, x30, [sp, #-16]!
 640:	mov	x29, sp
 644:	mov	w0, #0x1                   	// #1
 648:	mov	w1, #0x9                   	// #9
 64c:	bl	0 <prctl>
 650:	ldp	x29, x30, [sp], #16
 654:	ret
