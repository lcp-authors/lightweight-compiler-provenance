
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fcntl.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000e60 <.init>:
 e60:	stp	x29, x30, [sp, #-16]!
 e64:	mov	x29, sp
 e68:	bl	1050 <ioctl@plt+0x10>
 e6c:	ldp	x29, x30, [sp], #16
 e70:	ret

Disassembly of section .plt:

0000000000000e80 <memcpy@plt-0x20>:
     e80:	stp	x16, x30, [sp, #-16]!
     e84:	adrp	x16, 13000 <PyInit_fcntl@@Base+0x11edc>
     e88:	ldr	x17, [x16, #4088]
     e8c:	add	x16, x16, #0xff8
     e90:	br	x17
     e94:	nop
     e98:	nop
     e9c:	nop

0000000000000ea0 <memcpy@plt>:
     ea0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ea4:	ldr	x17, [x16]
     ea8:	add	x16, x16, #0x0
     eac:	br	x17

0000000000000eb0 <PyModule_AddIntConstant@plt>:
     eb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     eb4:	ldr	x17, [x16, #8]
     eb8:	add	x16, x16, #0x8
     ebc:	br	x17

0000000000000ec0 <PyEval_RestoreThread@plt>:
     ec0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ec4:	ldr	x17, [x16, #16]
     ec8:	add	x16, x16, #0x10
     ecc:	br	x17

0000000000000ed0 <PyErr_SetFromErrno@plt>:
     ed0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ed4:	ldr	x17, [x16, #24]
     ed8:	add	x16, x16, #0x18
     edc:	br	x17

0000000000000ee0 <PyBuffer_Release@plt>:
     ee0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ee4:	ldr	x17, [x16, #32]
     ee8:	add	x16, x16, #0x20
     eec:	br	x17

0000000000000ef0 <__cxa_finalize@plt>:
     ef0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ef4:	ldr	x17, [x16, #40]
     ef8:	add	x16, x16, #0x28
     efc:	br	x17

0000000000000f00 <PyBytes_FromStringAndSize@plt>:
     f00:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f04:	ldr	x17, [x16, #48]
     f08:	add	x16, x16, #0x30
     f0c:	br	x17

0000000000000f10 <PyErr_SetString@plt>:
     f10:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f14:	ldr	x17, [x16, #56]
     f18:	add	x16, x16, #0x38
     f1c:	br	x17

0000000000000f20 <flock@plt>:
     f20:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f24:	ldr	x17, [x16, #64]
     f28:	add	x16, x16, #0x40
     f2c:	br	x17

0000000000000f30 <_PyArg_Parse_SizeT@plt>:
     f30:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f34:	ldr	x17, [x16, #72]
     f38:	add	x16, x16, #0x48
     f3c:	br	x17

0000000000000f40 <PyLong_FromLong@plt>:
     f40:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f44:	ldr	x17, [x16, #80]
     f48:	add	x16, x16, #0x50
     f4c:	br	x17

0000000000000f50 <PyErr_Clear@plt>:
     f50:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f54:	ldr	x17, [x16, #88]
     f58:	add	x16, x16, #0x58
     f5c:	br	x17

0000000000000f60 <PyLong_AsUnsignedLongMask@plt>:
     f60:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f64:	ldr	x17, [x16, #96]
     f68:	add	x16, x16, #0x60
     f6c:	br	x17

0000000000000f70 <__gmon_start__@plt>:
     f70:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f74:	ldr	x17, [x16, #104]
     f78:	add	x16, x16, #0x68
     f7c:	br	x17

0000000000000f80 <_PyArg_CheckPositional@plt>:
     f80:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f84:	ldr	x17, [x16, #112]
     f88:	add	x16, x16, #0x70
     f8c:	br	x17

0000000000000f90 <PyErr_Occurred@plt>:
     f90:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     f94:	ldr	x17, [x16, #120]
     f98:	add	x16, x16, #0x78
     f9c:	br	x17

0000000000000fa0 <PyModule_Create2@plt>:
     fa0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fa4:	ldr	x17, [x16, #128]
     fa8:	add	x16, x16, #0x80
     fac:	br	x17

0000000000000fb0 <PyLong_AsLong@plt>:
     fb0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fb4:	ldr	x17, [x16, #136]
     fb8:	add	x16, x16, #0x88
     fbc:	br	x17

0000000000000fc0 <PyObject_IsTrue@plt>:
     fc0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fc4:	ldr	x17, [x16, #144]
     fc8:	add	x16, x16, #0x90
     fcc:	br	x17

0000000000000fd0 <fcntl64@plt>:
     fd0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fd4:	ldr	x17, [x16, #152]
     fd8:	add	x16, x16, #0x98
     fdc:	br	x17

0000000000000fe0 <PyEval_SaveThread@plt>:
     fe0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     fe4:	ldr	x17, [x16, #160]
     fe8:	add	x16, x16, #0xa0
     fec:	br	x17

0000000000000ff0 <PyObject_AsFileDescriptor@plt>:
     ff0:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
     ff4:	ldr	x17, [x16, #168]
     ff8:	add	x16, x16, #0xa8
     ffc:	br	x17

0000000000001000 <PyErr_CheckSignals@plt>:
    1000:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1004:	ldr	x17, [x16, #176]
    1008:	add	x16, x16, #0xb0
    100c:	br	x17

0000000000001010 <PyType_IsSubtype@plt>:
    1010:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1014:	ldr	x17, [x16, #184]
    1018:	add	x16, x16, #0xb8
    101c:	br	x17

0000000000001020 <__errno_location@plt>:
    1020:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1024:	ldr	x17, [x16, #192]
    1028:	add	x16, x16, #0xc0
    102c:	br	x17

0000000000001030 <_PyLong_AsInt@plt>:
    1030:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1034:	ldr	x17, [x16, #200]
    1038:	add	x16, x16, #0xc8
    103c:	br	x17

0000000000001040 <ioctl@plt>:
    1040:	adrp	x16, 14000 <memcpy@GLIBC_2.17>
    1044:	ldr	x17, [x16, #208]
    1048:	add	x16, x16, #0xd0
    104c:	br	x17

Disassembly of section .text:

0000000000001050 <PyInit_fcntl@@Base-0xd4>:
    1050:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    1054:	ldr	x0, [x0, #4048]
    1058:	cbz	x0, 1060 <ioctl@plt+0x20>
    105c:	b	f70 <__gmon_start__@plt>
    1060:	ret
    1064:	nop
    1068:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    106c:	add	x0, x0, #0x1e8
    1070:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12edc>
    1074:	add	x1, x1, #0x1e8
    1078:	cmp	x1, x0
    107c:	b.eq	1094 <ioctl@plt+0x54>  // b.none
    1080:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1084:	ldr	x1, [x1, #4000]
    1088:	cbz	x1, 1094 <ioctl@plt+0x54>
    108c:	mov	x16, x1
    1090:	br	x16
    1094:	ret
    1098:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    109c:	add	x0, x0, #0x1e8
    10a0:	adrp	x1, 14000 <PyInit_fcntl@@Base+0x12edc>
    10a4:	add	x1, x1, #0x1e8
    10a8:	sub	x1, x1, x0
    10ac:	lsr	x2, x1, #63
    10b0:	add	x1, x2, x1, asr #3
    10b4:	cmp	xzr, x1, asr #1
    10b8:	asr	x1, x1, #1
    10bc:	b.eq	10d4 <ioctl@plt+0x94>  // b.none
    10c0:	adrp	x2, 13000 <PyInit_fcntl@@Base+0x11edc>
    10c4:	ldr	x2, [x2, #4064]
    10c8:	cbz	x2, 10d4 <ioctl@plt+0x94>
    10cc:	mov	x16, x2
    10d0:	br	x16
    10d4:	ret
    10d8:	stp	x29, x30, [sp, #-32]!
    10dc:	mov	x29, sp
    10e0:	str	x19, [sp, #16]
    10e4:	adrp	x19, 14000 <PyInit_fcntl@@Base+0x12edc>
    10e8:	ldrb	w0, [x19, #488]
    10ec:	cbnz	w0, 1114 <ioctl@plt+0xd4>
    10f0:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    10f4:	ldr	x0, [x0, #4016]
    10f8:	cbz	x0, 1108 <ioctl@plt+0xc8>
    10fc:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    1100:	ldr	x0, [x0, #216]
    1104:	bl	ef0 <__cxa_finalize@plt>
    1108:	bl	1068 <ioctl@plt+0x28>
    110c:	mov	w0, #0x1                   	// #1
    1110:	strb	w0, [x19, #488]
    1114:	ldr	x19, [sp, #16]
    1118:	ldp	x29, x30, [sp], #32
    111c:	ret
    1120:	b	1098 <ioctl@plt+0x58>

0000000000001124 <PyInit_fcntl@@Base>:
    1124:	stp	x29, x30, [sp, #-32]!
    1128:	str	x19, [sp, #16]
    112c:	mov	x29, sp
    1130:	adrp	x0, 14000 <PyInit_fcntl@@Base+0x12edc>
    1134:	add	x0, x0, #0xe0
    1138:	mov	w1, #0x3f5                 	// #1013
    113c:	bl	fa0 <PyModule_Create2@plt>
    1140:	cbz	x0, 1154 <PyInit_fcntl@@Base+0x30>
    1144:	mov	x19, x0
    1148:	bl	1160 <PyInit_fcntl@@Base+0x3c>
    114c:	cmp	w0, #0x0
    1150:	csel	x0, xzr, x19, lt  // lt = tstop
    1154:	ldr	x19, [sp, #16]
    1158:	ldp	x29, x30, [sp], #32
    115c:	ret
    1160:	stp	x29, x30, [sp, #-32]!
    1164:	str	x19, [sp, #16]
    1168:	mov	x29, sp
    116c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1170:	add	x1, x1, #0x2e6
    1174:	mov	w2, #0x1                   	// #1
    1178:	mov	x19, x0
    117c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1180:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1184:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1188:	add	x1, x1, #0x2ee
    118c:	mov	w2, #0x2                   	// #2
    1190:	mov	x0, x19
    1194:	bl	eb0 <PyModule_AddIntConstant@plt>
    1198:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    119c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11a0:	add	x1, x1, #0x2f6
    11a4:	mov	w2, #0x4                   	// #4
    11a8:	mov	x0, x19
    11ac:	bl	eb0 <PyModule_AddIntConstant@plt>
    11b0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    11b4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11b8:	add	x1, x1, #0x2fe
    11bc:	mov	w2, #0x8                   	// #8
    11c0:	mov	x0, x19
    11c4:	bl	eb0 <PyModule_AddIntConstant@plt>
    11c8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    11cc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11d0:	add	x1, x1, #0x306
    11d4:	mov	w2, #0x20                  	// #32
    11d8:	mov	x0, x19
    11dc:	bl	eb0 <PyModule_AddIntConstant@plt>
    11e0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    11e4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    11e8:	add	x1, x1, #0x310
    11ec:	mov	w2, #0x40                  	// #64
    11f0:	mov	x0, x19
    11f4:	bl	eb0 <PyModule_AddIntConstant@plt>
    11f8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    11fc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1200:	add	x1, x1, #0x31a
    1204:	mov	w2, #0x80                  	// #128
    1208:	mov	x0, x19
    120c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1210:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1214:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1218:	add	x1, x1, #0x325
    121c:	mov	w2, #0xc0                  	// #192
    1220:	mov	x0, x19
    1224:	bl	eb0 <PyModule_AddIntConstant@plt>
    1228:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    122c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1230:	add	x1, x1, #0x32d
    1234:	mov	x0, x19
    1238:	mov	x2, xzr
    123c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1240:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1244:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1248:	add	x1, x1, #0x335
    124c:	mov	w2, #0x406                 	// #1030
    1250:	mov	x0, x19
    1254:	bl	eb0 <PyModule_AddIntConstant@plt>
    1258:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    125c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1260:	add	x1, x1, #0x345
    1264:	mov	w2, #0x1                   	// #1
    1268:	mov	x0, x19
    126c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1270:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1274:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1278:	add	x1, x1, #0x34d
    127c:	mov	w2, #0x2                   	// #2
    1280:	mov	x0, x19
    1284:	bl	eb0 <PyModule_AddIntConstant@plt>
    1288:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    128c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1290:	add	x1, x1, #0x355
    1294:	mov	w2, #0x3                   	// #3
    1298:	mov	x0, x19
    129c:	bl	eb0 <PyModule_AddIntConstant@plt>
    12a0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    12a4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12a8:	add	x1, x1, #0x35d
    12ac:	mov	w2, #0x4                   	// #4
    12b0:	mov	x0, x19
    12b4:	bl	eb0 <PyModule_AddIntConstant@plt>
    12b8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    12bc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12c0:	add	x1, x1, #0x365
    12c4:	mov	w2, #0x5                   	// #5
    12c8:	mov	x0, x19
    12cc:	bl	eb0 <PyModule_AddIntConstant@plt>
    12d0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    12d4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12d8:	add	x1, x1, #0x36d
    12dc:	mov	w2, #0x6                   	// #6
    12e0:	mov	x0, x19
    12e4:	bl	eb0 <PyModule_AddIntConstant@plt>
    12e8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    12ec:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    12f0:	add	x1, x1, #0x375
    12f4:	mov	w2, #0x7                   	// #7
    12f8:	mov	x0, x19
    12fc:	bl	eb0 <PyModule_AddIntConstant@plt>
    1300:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1304:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1308:	add	x1, x1, #0x37e
    130c:	mov	w2, #0x9                   	// #9
    1310:	mov	x0, x19
    1314:	bl	eb0 <PyModule_AddIntConstant@plt>
    1318:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    131c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1320:	add	x1, x1, #0x387
    1324:	mov	w2, #0x8                   	// #8
    1328:	mov	x0, x19
    132c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1330:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1334:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1338:	add	x1, x1, #0x390
    133c:	mov	w2, #0xb                   	// #11
    1340:	mov	x0, x19
    1344:	bl	eb0 <PyModule_AddIntConstant@plt>
    1348:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    134c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1350:	add	x1, x1, #0x399
    1354:	mov	w2, #0xa                   	// #10
    1358:	mov	x0, x19
    135c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1360:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1364:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1368:	add	x1, x1, #0x3a2
    136c:	mov	x0, x19
    1370:	mov	x2, xzr
    1374:	bl	eb0 <PyModule_AddIntConstant@plt>
    1378:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    137c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1380:	add	x1, x1, #0x3aa
    1384:	mov	w2, #0x1                   	// #1
    1388:	mov	x0, x19
    138c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1390:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1394:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1398:	add	x1, x1, #0x3b2
    139c:	mov	w2, #0x2                   	// #2
    13a0:	mov	x0, x19
    13a4:	bl	eb0 <PyModule_AddIntConstant@plt>
    13a8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    13ac:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13b0:	add	x1, x1, #0x3ba
    13b4:	mov	w2, #0x5                   	// #5
    13b8:	mov	x0, x19
    13bc:	bl	eb0 <PyModule_AddIntConstant@plt>
    13c0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    13c4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13c8:	add	x1, x1, #0x3c4
    13cc:	mov	w2, #0x6                   	// #6
    13d0:	mov	x0, x19
    13d4:	bl	eb0 <PyModule_AddIntConstant@plt>
    13d8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    13dc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13e0:	add	x1, x1, #0x3ce
    13e4:	mov	w2, #0x7                   	// #7
    13e8:	mov	x0, x19
    13ec:	bl	eb0 <PyModule_AddIntConstant@plt>
    13f0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    13f4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    13f8:	add	x1, x1, #0x3d9
    13fc:	mov	w2, #0x2000                	// #8192
    1400:	mov	x0, x19
    1404:	bl	eb0 <PyModule_AddIntConstant@plt>
    1408:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    140c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1410:	add	x1, x1, #0x3e0
    1414:	mov	w2, #0x400                 	// #1024
    1418:	mov	x0, x19
    141c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1420:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1424:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1428:	add	x1, x1, #0x3eb
    142c:	mov	w2, #0x401                 	// #1025
    1430:	mov	x0, x19
    1434:	bl	eb0 <PyModule_AddIntConstant@plt>
    1438:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    143c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1440:	add	x1, x1, #0x3f6
    1444:	mov	w2, #0x402                 	// #1026
    1448:	mov	x0, x19
    144c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1450:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1454:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1458:	add	x1, x1, #0x3ff
    145c:	mov	w2, #0x4                   	// #4
    1460:	mov	x0, x19
    1464:	bl	eb0 <PyModule_AddIntConstant@plt>
    1468:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    146c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1470:	add	x1, x1, #0x407
    1474:	mov	w2, #0x8                   	// #8
    1478:	mov	x0, x19
    147c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1480:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1484:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1488:	add	x1, x1, #0x33a
    148c:	mov	w2, #0x1                   	// #1
    1490:	mov	x0, x19
    1494:	bl	eb0 <PyModule_AddIntConstant@plt>
    1498:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    149c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14a0:	add	x1, x1, #0x40f
    14a4:	mov	w2, #0x1                   	// #1
    14a8:	mov	x0, x19
    14ac:	bl	eb0 <PyModule_AddIntConstant@plt>
    14b0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    14b4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14b8:	add	x1, x1, #0x419
    14bc:	mov	w2, #0x2                   	// #2
    14c0:	mov	x0, x19
    14c4:	bl	eb0 <PyModule_AddIntConstant@plt>
    14c8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    14cc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14d0:	add	x1, x1, #0x423
    14d4:	mov	w2, #0x4                   	// #4
    14d8:	mov	x0, x19
    14dc:	bl	eb0 <PyModule_AddIntConstant@plt>
    14e0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    14e4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    14e8:	add	x1, x1, #0x42d
    14ec:	mov	w2, #0x8                   	// #8
    14f0:	mov	x0, x19
    14f4:	bl	eb0 <PyModule_AddIntConstant@plt>
    14f8:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    14fc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1500:	add	x1, x1, #0x437
    1504:	mov	w2, #0x10                  	// #16
    1508:	mov	x0, x19
    150c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1510:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1514:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1518:	add	x1, x1, #0x441
    151c:	mov	w2, #0x20                  	// #32
    1520:	mov	x0, x19
    1524:	bl	eb0 <PyModule_AddIntConstant@plt>
    1528:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    152c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1530:	add	x1, x1, #0x44b
    1534:	mov	w2, #0x80000000            	// #-2147483648
    1538:	mov	x0, x19
    153c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1540:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1544:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1548:	add	x1, x1, #0x458
    154c:	mov	w2, #0x409                 	// #1033
    1550:	mov	x0, x19
    1554:	bl	eb0 <PyModule_AddIntConstant@plt>
    1558:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    155c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1560:	add	x1, x1, #0x464
    1564:	mov	w2, #0x40a                 	// #1034
    1568:	mov	x0, x19
    156c:	bl	eb0 <PyModule_AddIntConstant@plt>
    1570:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    1574:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1578:	add	x1, x1, #0x470
    157c:	mov	w2, #0x1                   	// #1
    1580:	mov	x0, x19
    1584:	bl	eb0 <PyModule_AddIntConstant@plt>
    1588:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    158c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1590:	add	x1, x1, #0x47c
    1594:	mov	w2, #0x2                   	// #2
    1598:	mov	x0, x19
    159c:	bl	eb0 <PyModule_AddIntConstant@plt>
    15a0:	cbnz	w0, 15bc <PyInit_fcntl@@Base+0x498>
    15a4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    15a8:	add	x1, x1, #0x48a
    15ac:	mov	w2, #0x4                   	// #4
    15b0:	mov	x0, x19
    15b4:	bl	eb0 <PyModule_AddIntConstant@plt>
    15b8:	cbz	w0, 15cc <PyInit_fcntl@@Base+0x4a8>
    15bc:	mov	w0, #0xffffffff            	// #-1
    15c0:	ldr	x19, [sp, #16]
    15c4:	ldp	x29, x30, [sp], #32
    15c8:	ret
    15cc:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    15d0:	add	x1, x1, #0x496
    15d4:	mov	w2, #0x8                   	// #8
    15d8:	mov	x0, x19
    15dc:	bl	eb0 <PyModule_AddIntConstant@plt>
    15e0:	cmp	w0, #0x0
    15e4:	csetm	w0, ne  // ne = any
    15e8:	b	15c0 <PyInit_fcntl@@Base+0x49c>
    15ec:	stp	x29, x30, [sp, #-48]!
    15f0:	str	x21, [sp, #16]
    15f4:	stp	x20, x19, [sp, #32]
    15f8:	mov	x29, sp
    15fc:	and	x8, x2, #0xfffffffffffffffe
    1600:	mov	x19, x2
    1604:	cmp	x8, #0x2
    1608:	mov	x20, x1
    160c:	b.eq	162c <PyInit_fcntl@@Base+0x508>  // b.none
    1610:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    1614:	add	x0, x0, #0x184
    1618:	mov	w2, #0x2                   	// #2
    161c:	mov	w3, #0x3                   	// #3
    1620:	mov	x1, x19
    1624:	bl	f80 <_PyArg_CheckPositional@plt>
    1628:	cbz	w0, 167c <PyInit_fcntl@@Base+0x558>
    162c:	ldr	x0, [x20]
    1630:	add	x1, x29, #0x1c
    1634:	bl	1a18 <PyInit_fcntl@@Base+0x8f4>
    1638:	cbz	w0, 167c <PyInit_fcntl@@Base+0x558>
    163c:	ldr	x8, [x20, #8]
    1640:	ldr	x0, [x8, #8]
    1644:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1648:	ldr	x8, [x8, #4008]
    164c:	cmp	x0, x8
    1650:	b.eq	1664 <PyInit_fcntl@@Base+0x540>  // b.none
    1654:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1658:	ldr	x1, [x1, #4008]
    165c:	bl	1010 <PyType_IsSubtype@plt>
    1660:	cbz	w0, 1690 <PyInit_fcntl@@Base+0x56c>
    1664:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1668:	ldr	x8, [x8, #4032]
    166c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1670:	add	x1, x1, #0x196
    1674:	ldr	x0, [x8]
    1678:	bl	f10 <PyErr_SetString@plt>
    167c:	mov	x0, xzr
    1680:	ldp	x20, x19, [sp, #32]
    1684:	ldr	x21, [sp, #16]
    1688:	ldp	x29, x30, [sp], #48
    168c:	ret
    1690:	ldr	x0, [x20, #8]
    1694:	bl	1030 <_PyLong_AsInt@plt>
    1698:	mov	w21, w0
    169c:	cmn	w0, #0x1
    16a0:	b.eq	16c8 <PyInit_fcntl@@Base+0x5a4>  // b.none
    16a4:	cmp	x19, #0x3
    16a8:	b.ge	16b4 <PyInit_fcntl@@Base+0x590>  // b.tcont
    16ac:	mov	x2, xzr
    16b0:	b	16b8 <PyInit_fcntl@@Base+0x594>
    16b4:	ldr	x2, [x20, #16]
    16b8:	ldr	w0, [x29, #28]
    16bc:	mov	w1, w21
    16c0:	bl	1a4c <PyInit_fcntl@@Base+0x928>
    16c4:	b	1680 <PyInit_fcntl@@Base+0x55c>
    16c8:	bl	f90 <PyErr_Occurred@plt>
    16cc:	cbnz	x0, 167c <PyInit_fcntl@@Base+0x558>
    16d0:	b	16a4 <PyInit_fcntl@@Base+0x580>
    16d4:	sub	sp, sp, #0x40
    16d8:	stp	x29, x30, [sp, #16]
    16dc:	stp	x22, x21, [sp, #32]
    16e0:	stp	x20, x19, [sp, #48]
    16e4:	add	x29, sp, #0x10
    16e8:	sub	x8, x2, #0x2
    16ec:	mov	x19, x2
    16f0:	cmp	x8, #0x3
    16f4:	mov	x20, x1
    16f8:	b.cc	1718 <PyInit_fcntl@@Base+0x5f4>  // b.lo, b.ul, b.last
    16fc:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    1700:	add	x0, x0, #0x260
    1704:	mov	w2, #0x2                   	// #2
    1708:	mov	w3, #0x4                   	// #4
    170c:	mov	x1, x19
    1710:	bl	f80 <_PyArg_CheckPositional@plt>
    1714:	cbz	w0, 1768 <PyInit_fcntl@@Base+0x644>
    1718:	ldr	x0, [x20]
    171c:	sub	x1, x29, #0x4
    1720:	bl	1a18 <PyInit_fcntl@@Base+0x8f4>
    1724:	cbz	w0, 1768 <PyInit_fcntl@@Base+0x644>
    1728:	ldr	x8, [x20, #8]
    172c:	ldr	x0, [x8, #8]
    1730:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1734:	ldr	x8, [x8, #4008]
    1738:	cmp	x0, x8
    173c:	b.eq	1750 <PyInit_fcntl@@Base+0x62c>  // b.none
    1740:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    1744:	ldr	x1, [x1, #4008]
    1748:	bl	1010 <PyType_IsSubtype@plt>
    174c:	cbz	w0, 1780 <PyInit_fcntl@@Base+0x65c>
    1750:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1754:	ldr	x8, [x8, #4032]
    1758:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    175c:	add	x1, x1, #0x196
    1760:	ldr	x0, [x8]
    1764:	bl	f10 <PyErr_SetString@plt>
    1768:	mov	x0, xzr
    176c:	ldp	x20, x19, [sp, #48]
    1770:	ldp	x22, x21, [sp, #32]
    1774:	ldp	x29, x30, [sp, #16]
    1778:	add	sp, sp, #0x40
    177c:	ret
    1780:	ldr	x0, [x20, #8]
    1784:	bl	f60 <PyLong_AsUnsignedLongMask@plt>
    1788:	mov	x21, x0
    178c:	cmn	w21, #0x1
    1790:	b.eq	17c8 <PyInit_fcntl@@Base+0x6a4>  // b.none
    1794:	cmp	x19, #0x3
    1798:	b.ge	17a4 <PyInit_fcntl@@Base+0x680>  // b.tcont
    179c:	mov	x22, xzr
    17a0:	b	17b0 <PyInit_fcntl@@Base+0x68c>
    17a4:	ldr	x22, [x20, #16]
    17a8:	cmp	x19, #0x3
    17ac:	b.ne	17d4 <PyInit_fcntl@@Base+0x6b0>  // b.any
    17b0:	mov	w3, #0x1                   	// #1
    17b4:	ldur	w0, [x29, #-4]
    17b8:	mov	w1, w21
    17bc:	mov	x2, x22
    17c0:	bl	1ca0 <PyInit_fcntl@@Base+0xb7c>
    17c4:	b	176c <PyInit_fcntl@@Base+0x648>
    17c8:	bl	f90 <PyErr_Occurred@plt>
    17cc:	cbnz	x0, 1768 <PyInit_fcntl@@Base+0x644>
    17d0:	b	1794 <PyInit_fcntl@@Base+0x670>
    17d4:	ldr	x0, [x20, #24]
    17d8:	bl	fc0 <PyObject_IsTrue@plt>
    17dc:	mov	w3, w0
    17e0:	tbz	w0, #31, 17b4 <PyInit_fcntl@@Base+0x690>
    17e4:	b	1768 <PyInit_fcntl@@Base+0x644>
    17e8:	stp	x29, x30, [sp, #-32]!
    17ec:	str	x19, [sp, #16]
    17f0:	mov	x29, sp
    17f4:	cmp	x2, #0x2
    17f8:	mov	x19, x1
    17fc:	b.eq	1820 <PyInit_fcntl@@Base+0x6fc>  // b.none
    1800:	mov	x8, x2
    1804:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    1808:	add	x0, x0, #0x18a
    180c:	mov	w2, #0x2                   	// #2
    1810:	mov	w3, #0x2                   	// #2
    1814:	mov	x1, x8
    1818:	bl	f80 <_PyArg_CheckPositional@plt>
    181c:	cbz	w0, 1870 <PyInit_fcntl@@Base+0x74c>
    1820:	ldr	x0, [x19]
    1824:	add	x1, x29, #0x1c
    1828:	bl	1a18 <PyInit_fcntl@@Base+0x8f4>
    182c:	cbz	w0, 1870 <PyInit_fcntl@@Base+0x74c>
    1830:	ldr	x8, [x19, #8]
    1834:	ldr	x0, [x8, #8]
    1838:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    183c:	ldr	x8, [x8, #4008]
    1840:	cmp	x0, x8
    1844:	b.eq	1858 <PyInit_fcntl@@Base+0x734>  // b.none
    1848:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    184c:	ldr	x1, [x1, #4008]
    1850:	bl	1010 <PyType_IsSubtype@plt>
    1854:	cbz	w0, 1880 <PyInit_fcntl@@Base+0x75c>
    1858:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    185c:	ldr	x8, [x8, #4032]
    1860:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1864:	add	x1, x1, #0x196
    1868:	ldr	x0, [x8]
    186c:	bl	f10 <PyErr_SetString@plt>
    1870:	mov	x0, xzr
    1874:	ldr	x19, [sp, #16]
    1878:	ldp	x29, x30, [sp], #32
    187c:	ret
    1880:	ldr	x0, [x19, #8]
    1884:	bl	1030 <_PyLong_AsInt@plt>
    1888:	mov	w19, w0
    188c:	cmn	w0, #0x1
    1890:	b.eq	18a4 <PyInit_fcntl@@Base+0x780>  // b.none
    1894:	ldr	w0, [x29, #28]
    1898:	mov	w1, w19
    189c:	bl	1ed4 <PyInit_fcntl@@Base+0xdb0>
    18a0:	b	1874 <PyInit_fcntl@@Base+0x750>
    18a4:	bl	f90 <PyErr_Occurred@plt>
    18a8:	cbnz	x0, 1870 <PyInit_fcntl@@Base+0x74c>
    18ac:	b	1894 <PyInit_fcntl@@Base+0x770>
    18b0:	sub	sp, sp, #0x50
    18b4:	stp	x29, x30, [sp, #16]
    18b8:	stp	x24, x23, [sp, #32]
    18bc:	stp	x22, x21, [sp, #48]
    18c0:	stp	x20, x19, [sp, #64]
    18c4:	add	x29, sp, #0x10
    18c8:	sub	x8, x2, #0x2
    18cc:	mov	x22, x2
    18d0:	cmp	x8, #0x4
    18d4:	mov	x20, x1
    18d8:	b.cc	18f8 <PyInit_fcntl@@Base+0x7d4>  // b.lo, b.ul, b.last
    18dc:	adrp	x0, 2000 <PyInit_fcntl@@Base+0xedc>
    18e0:	add	x0, x0, #0x190
    18e4:	mov	w2, #0x2                   	// #2
    18e8:	mov	w3, #0x5                   	// #5
    18ec:	mov	x1, x22
    18f0:	bl	f80 <_PyArg_CheckPositional@plt>
    18f4:	cbz	w0, 194c <PyInit_fcntl@@Base+0x828>
    18f8:	ldr	x0, [x20]
    18fc:	sub	x1, x29, #0x4
    1900:	bl	1a18 <PyInit_fcntl@@Base+0x8f4>
    1904:	cbz	w0, 194c <PyInit_fcntl@@Base+0x828>
    1908:	ldr	x8, [x20, #8]
    190c:	ldr	x0, [x8, #8]
    1910:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1914:	ldr	x8, [x8, #4008]
    1918:	cmp	x0, x8
    191c:	b.eq	1934 <PyInit_fcntl@@Base+0x810>  // b.none
    1920:	adrp	x24, 13000 <PyInit_fcntl@@Base+0x11edc>
    1924:	ldr	x24, [x24, #4008]
    1928:	mov	x1, x24
    192c:	bl	1010 <PyType_IsSubtype@plt>
    1930:	cbz	w0, 1968 <PyInit_fcntl@@Base+0x844>
    1934:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1938:	ldr	x8, [x8, #4032]
    193c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1940:	add	x1, x1, #0x196
    1944:	ldr	x0, [x8]
    1948:	bl	f10 <PyErr_SetString@plt>
    194c:	mov	x0, xzr
    1950:	ldp	x20, x19, [sp, #64]
    1954:	ldp	x22, x21, [sp, #48]
    1958:	ldp	x24, x23, [sp, #32]
    195c:	ldp	x29, x30, [sp, #16]
    1960:	add	sp, sp, #0x50
    1964:	ret
    1968:	ldr	x0, [x20, #8]
    196c:	bl	1030 <_PyLong_AsInt@plt>
    1970:	mov	w19, w0
    1974:	cmn	w0, #0x1
    1978:	b.eq	19b8 <PyInit_fcntl@@Base+0x894>  // b.none
    197c:	cmp	x22, #0x3
    1980:	b.ge	198c <PyInit_fcntl@@Base+0x868>  // b.tcont
    1984:	mov	x21, xzr
    1988:	b	1998 <PyInit_fcntl@@Base+0x874>
    198c:	ldr	x21, [x20, #16]
    1990:	cmp	x22, #0x3
    1994:	b.ne	19c4 <PyInit_fcntl@@Base+0x8a0>  // b.any
    1998:	mov	x23, xzr
    199c:	mov	w4, wzr
    19a0:	ldur	w0, [x29, #-4]
    19a4:	mov	w1, w19
    19a8:	mov	x2, x21
    19ac:	mov	x3, x23
    19b0:	bl	1fd0 <PyInit_fcntl@@Base+0xeac>
    19b4:	b	1950 <PyInit_fcntl@@Base+0x82c>
    19b8:	bl	f90 <PyErr_Occurred@plt>
    19bc:	cbnz	x0, 194c <PyInit_fcntl@@Base+0x828>
    19c0:	b	197c <PyInit_fcntl@@Base+0x858>
    19c4:	ldr	x23, [x20, #24]
    19c8:	cmp	x22, #0x5
    19cc:	b.lt	199c <PyInit_fcntl@@Base+0x878>  // b.tstop
    19d0:	ldr	x8, [x20, #32]
    19d4:	ldr	x0, [x8, #8]
    19d8:	cmp	x0, x24
    19dc:	b.eq	1934 <PyInit_fcntl@@Base+0x810>  // b.none
    19e0:	adrp	x1, 13000 <PyInit_fcntl@@Base+0x11edc>
    19e4:	ldr	x1, [x1, #4008]
    19e8:	bl	1010 <PyType_IsSubtype@plt>
    19ec:	cbnz	w0, 1934 <PyInit_fcntl@@Base+0x810>
    19f0:	ldr	x0, [x20, #32]
    19f4:	bl	1030 <_PyLong_AsInt@plt>
    19f8:	cmn	w0, #0x1
    19fc:	b.eq	1a08 <PyInit_fcntl@@Base+0x8e4>  // b.none
    1a00:	mov	w4, w0
    1a04:	b	19a0 <PyInit_fcntl@@Base+0x87c>
    1a08:	bl	f90 <PyErr_Occurred@plt>
    1a0c:	cbnz	x0, 194c <PyInit_fcntl@@Base+0x828>
    1a10:	mov	w4, #0xffffffff            	// #-1
    1a14:	b	19a0 <PyInit_fcntl@@Base+0x87c>
    1a18:	stp	x29, x30, [sp, #-32]!
    1a1c:	str	x19, [sp, #16]
    1a20:	mov	x29, sp
    1a24:	mov	x19, x1
    1a28:	bl	ff0 <PyObject_AsFileDescriptor@plt>
    1a2c:	tbnz	w0, #31, 1a3c <PyInit_fcntl@@Base+0x918>
    1a30:	str	w0, [x19]
    1a34:	mov	w0, #0x1                   	// #1
    1a38:	b	1a40 <PyInit_fcntl@@Base+0x91c>
    1a3c:	mov	w0, wzr
    1a40:	ldr	x19, [sp, #16]
    1a44:	ldp	x29, x30, [sp], #32
    1a48:	ret
    1a4c:	stp	x29, x30, [sp, #-80]!
    1a50:	str	x28, [sp, #16]
    1a54:	stp	x24, x23, [sp, #32]
    1a58:	stp	x22, x21, [sp, #48]
    1a5c:	stp	x20, x19, [sp, #64]
    1a60:	mov	x29, sp
    1a64:	sub	sp, sp, #0x410
    1a68:	mov	x21, x2
    1a6c:	mov	w19, w1
    1a70:	mov	w20, w0
    1a74:	str	wzr, [x29, #28]
    1a78:	cbz	x2, 1bb4 <PyInit_fcntl@@Base+0xa90>
    1a7c:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1a80:	add	x1, x1, #0x1bb
    1a84:	sub	x2, x29, #0x8
    1a88:	sub	x3, x29, #0x10
    1a8c:	mov	x0, x21
    1a90:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1a94:	cbz	w0, 1ad0 <PyInit_fcntl@@Base+0x9ac>
    1a98:	ldur	x2, [x29, #-16]
    1a9c:	cmp	x2, #0x401
    1aa0:	b.cc	1b04 <PyInit_fcntl@@Base+0x9e0>  // b.lo, b.ul, b.last
    1aa4:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1aa8:	ldr	x8, [x8, #4024]
    1aac:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1ab0:	add	x1, x1, #0x1be
    1ab4:	ldr	x0, [x8]
    1ab8:	bl	f10 <PyErr_SetString@plt>
    1abc:	mov	w21, wzr
    1ac0:	mov	w8, wzr
    1ac4:	mov	x0, xzr
    1ac8:	cbnz	w8, 1bb4 <PyInit_fcntl@@Base+0xa90>
    1acc:	b	1c64 <PyInit_fcntl@@Base+0xb40>
    1ad0:	bl	f50 <PyErr_Clear@plt>
    1ad4:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1ad8:	add	x1, x1, #0x1d8
    1adc:	add	x2, x29, #0x1c
    1ae0:	mov	x0, x21
    1ae4:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1ae8:	mov	w8, w0
    1aec:	cmp	w8, #0x0
    1af0:	mov	w21, wzr
    1af4:	mov	x0, xzr
    1af8:	cset	w8, ne  // ne = any
    1afc:	cbnz	w8, 1bb4 <PyInit_fcntl@@Base+0xa90>
    1b00:	b	1c64 <PyInit_fcntl@@Base+0xb40>
    1b04:	ldur	x1, [x29, #-8]
    1b08:	mov	x0, sp
    1b0c:	bl	ea0 <memcpy@plt>
    1b10:	bl	fe0 <PyEval_SaveThread@plt>
    1b14:	mov	x21, x0
    1b18:	mov	x2, sp
    1b1c:	mov	w0, w20
    1b20:	mov	w1, w19
    1b24:	bl	fd0 <fcntl64@plt>
    1b28:	mov	w22, w0
    1b2c:	mov	x0, x21
    1b30:	bl	ec0 <PyEval_RestoreThread@plt>
    1b34:	cmn	w22, #0x1
    1b38:	b.ne	1b98 <PyInit_fcntl@@Base+0xa74>  // b.any
    1b3c:	bl	1020 <__errno_location@plt>
    1b40:	ldr	w8, [x0]
    1b44:	cmp	w8, #0x4
    1b48:	b.ne	1b98 <PyInit_fcntl@@Base+0xa74>  // b.any
    1b4c:	mov	x23, x0
    1b50:	bl	1000 <PyErr_CheckSignals@plt>
    1b54:	mov	w21, w0
    1b58:	cbnz	w0, 1b9c <PyInit_fcntl@@Base+0xa78>
    1b5c:	bl	fe0 <PyEval_SaveThread@plt>
    1b60:	mov	x24, x0
    1b64:	mov	x2, sp
    1b68:	mov	w0, w20
    1b6c:	mov	w1, w19
    1b70:	bl	fd0 <fcntl64@plt>
    1b74:	mov	w22, w0
    1b78:	mov	x0, x24
    1b7c:	bl	ec0 <PyEval_RestoreThread@plt>
    1b80:	cmn	w22, #0x1
    1b84:	b.ne	1b9c <PyInit_fcntl@@Base+0xa78>  // b.any
    1b88:	ldr	w8, [x23]
    1b8c:	cmp	w8, #0x4
    1b90:	b.eq	1b50 <PyInit_fcntl@@Base+0xa2c>  // b.none
    1b94:	b	1b9c <PyInit_fcntl@@Base+0xa78>
    1b98:	mov	w21, wzr
    1b9c:	tbnz	w22, #31, 1c80 <PyInit_fcntl@@Base+0xb5c>
    1ba0:	ldur	x1, [x29, #-16]
    1ba4:	mov	x0, sp
    1ba8:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1bac:	mov	w8, wzr
    1bb0:	cbz	w8, 1c64 <PyInit_fcntl@@Base+0xb40>
    1bb4:	bl	fe0 <PyEval_SaveThread@plt>
    1bb8:	ldr	w2, [x29, #28]
    1bbc:	mov	x23, x0
    1bc0:	mov	w0, w20
    1bc4:	mov	w1, w19
    1bc8:	bl	fd0 <fcntl64@plt>
    1bcc:	mov	w22, w0
    1bd0:	mov	x0, x23
    1bd4:	bl	ec0 <PyEval_RestoreThread@plt>
    1bd8:	cmn	w22, #0x1
    1bdc:	b.ne	1c38 <PyInit_fcntl@@Base+0xb14>  // b.any
    1be0:	bl	1020 <__errno_location@plt>
    1be4:	ldr	w8, [x0]
    1be8:	cmp	w8, #0x4
    1bec:	b.ne	1c38 <PyInit_fcntl@@Base+0xb14>  // b.any
    1bf0:	mov	x23, x0
    1bf4:	bl	1000 <PyErr_CheckSignals@plt>
    1bf8:	mov	w21, w0
    1bfc:	cbnz	w0, 1c38 <PyInit_fcntl@@Base+0xb14>
    1c00:	bl	fe0 <PyEval_SaveThread@plt>
    1c04:	ldr	w2, [x29, #28]
    1c08:	mov	x24, x0
    1c0c:	mov	w0, w20
    1c10:	mov	w1, w19
    1c14:	bl	fd0 <fcntl64@plt>
    1c18:	mov	w22, w0
    1c1c:	mov	x0, x24
    1c20:	bl	ec0 <PyEval_RestoreThread@plt>
    1c24:	cmn	w22, #0x1
    1c28:	b.ne	1c38 <PyInit_fcntl@@Base+0xb14>  // b.any
    1c2c:	ldr	w8, [x23]
    1c30:	cmp	w8, #0x4
    1c34:	b.eq	1bf4 <PyInit_fcntl@@Base+0xad0>  // b.none
    1c38:	tbnz	w22, #31, 1c48 <PyInit_fcntl@@Base+0xb24>
    1c3c:	sxtw	x0, w22
    1c40:	bl	f40 <PyLong_FromLong@plt>
    1c44:	b	1c64 <PyInit_fcntl@@Base+0xb40>
    1c48:	cbz	w21, 1c54 <PyInit_fcntl@@Base+0xb30>
    1c4c:	mov	x0, xzr
    1c50:	b	1c64 <PyInit_fcntl@@Base+0xb40>
    1c54:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1c58:	ldr	x8, [x8, #4040]
    1c5c:	ldr	x0, [x8]
    1c60:	bl	ed0 <PyErr_SetFromErrno@plt>
    1c64:	add	sp, sp, #0x410
    1c68:	ldp	x20, x19, [sp, #64]
    1c6c:	ldp	x22, x21, [sp, #48]
    1c70:	ldp	x24, x23, [sp, #32]
    1c74:	ldr	x28, [sp, #16]
    1c78:	ldp	x29, x30, [sp], #80
    1c7c:	ret
    1c80:	cbnz	w21, 1ac0 <PyInit_fcntl@@Base+0x99c>
    1c84:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1c88:	ldr	x8, [x8, #4040]
    1c8c:	ldr	x0, [x8]
    1c90:	bl	ed0 <PyErr_SetFromErrno@plt>
    1c94:	mov	w8, wzr
    1c98:	cbnz	w8, 1bb4 <PyInit_fcntl@@Base+0xa90>
    1c9c:	b	1c64 <PyInit_fcntl@@Base+0xb40>
    1ca0:	stp	x29, x30, [sp, #-80]!
    1ca4:	stp	x28, x25, [sp, #16]
    1ca8:	stp	x24, x23, [sp, #32]
    1cac:	stp	x22, x21, [sp, #48]
    1cb0:	stp	x20, x19, [sp, #64]
    1cb4:	mov	x29, sp
    1cb8:	sub	sp, sp, #0x460
    1cbc:	mov	w20, w1
    1cc0:	mov	w19, w0
    1cc4:	stur	wzr, [x29, #-4]
    1cc8:	cbz	x2, 1e70 <PyInit_fcntl@@Base+0xd4c>
    1ccc:	mov	x22, x2
    1cd0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1cd4:	add	x1, x1, #0x23a
    1cd8:	sub	x2, x29, #0x58
    1cdc:	mov	x0, x22
    1ce0:	mov	w21, w3
    1ce4:	sub	x24, x29, #0x58
    1ce8:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1cec:	cbz	w0, 1d0c <PyInit_fcntl@@Base+0xbe8>
    1cf0:	ldr	x22, [x24, #16]
    1cf4:	ldr	x23, [x24]
    1cf8:	cmp	x22, #0x401
    1cfc:	cbz	w21, 1d8c <PyInit_fcntl@@Base+0xc68>
    1d00:	mov	x24, x23
    1d04:	b.ge	1dcc <PyInit_fcntl@@Base+0xca8>  // b.tcont
    1d08:	b	1db4 <PyInit_fcntl@@Base+0xc90>
    1d0c:	bl	f50 <PyErr_Clear@plt>
    1d10:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1d14:	add	x1, x1, #0x25d
    1d18:	sub	x2, x29, #0x58
    1d1c:	mov	x0, x22
    1d20:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1d24:	cbz	w0, 1e54 <PyInit_fcntl@@Base+0xd30>
    1d28:	ldr	x21, [x24, #16]
    1d2c:	cmp	x21, #0x401
    1d30:	b.ge	1d90 <PyInit_fcntl@@Base+0xc6c>  // b.tcont
    1d34:	ldr	x1, [x24]
    1d38:	add	x0, sp, #0x4
    1d3c:	mov	x2, x21
    1d40:	add	x22, sp, #0x4
    1d44:	bl	ea0 <memcpy@plt>
    1d48:	strb	wzr, [x22, x21]
    1d4c:	bl	fe0 <PyEval_SaveThread@plt>
    1d50:	mov	x22, x0
    1d54:	mov	w1, w20
    1d58:	add	x2, sp, #0x4
    1d5c:	mov	w0, w19
    1d60:	bl	1040 <ioctl@plt>
    1d64:	mov	w19, w0
    1d68:	mov	x0, x22
    1d6c:	bl	ec0 <PyEval_RestoreThread@plt>
    1d70:	sub	x0, x29, #0x58
    1d74:	bl	ee0 <PyBuffer_Release@plt>
    1d78:	tbnz	w19, #31, 1ea4 <PyInit_fcntl@@Base+0xd80>
    1d7c:	add	x0, sp, #0x4
    1d80:	mov	x1, x21
    1d84:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1d88:	b	1eb8 <PyInit_fcntl@@Base+0xd94>
    1d8c:	b.lt	1db4 <PyInit_fcntl@@Base+0xc90>  // b.tstop
    1d90:	sub	x0, x29, #0x58
    1d94:	bl	ee0 <PyBuffer_Release@plt>
    1d98:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1d9c:	ldr	x8, [x8, #4024]
    1da0:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1da4:	add	x1, x1, #0x243
    1da8:	ldr	x0, [x8]
    1dac:	bl	f10 <PyErr_SetString@plt>
    1db0:	b	1eb4 <PyInit_fcntl@@Base+0xd90>
    1db4:	add	x0, sp, #0x4
    1db8:	mov	x1, x23
    1dbc:	mov	x2, x22
    1dc0:	add	x24, sp, #0x4
    1dc4:	bl	ea0 <memcpy@plt>
    1dc8:	strb	wzr, [x24, x22]
    1dcc:	add	x8, sp, #0x4
    1dd0:	cmp	x8, x24
    1dd4:	b.eq	1df4 <PyInit_fcntl@@Base+0xcd0>  // b.none
    1dd8:	mov	w1, w20
    1ddc:	mov	w0, w19
    1de0:	mov	x2, x24
    1de4:	bl	1040 <ioctl@plt>
    1de8:	mov	w19, w0
    1dec:	cbnz	w21, 1e1c <PyInit_fcntl@@Base+0xcf8>
    1df0:	b	1e34 <PyInit_fcntl@@Base+0xd10>
    1df4:	bl	fe0 <PyEval_SaveThread@plt>
    1df8:	mov	x25, x0
    1dfc:	mov	w1, w20
    1e00:	mov	w0, w19
    1e04:	mov	x2, x24
    1e08:	bl	1040 <ioctl@plt>
    1e0c:	mov	w19, w0
    1e10:	mov	x0, x25
    1e14:	bl	ec0 <PyEval_RestoreThread@plt>
    1e18:	cbz	w21, 1e34 <PyInit_fcntl@@Base+0xd10>
    1e1c:	cmp	x22, #0x400
    1e20:	b.gt	1e34 <PyInit_fcntl@@Base+0xd10>
    1e24:	add	x1, sp, #0x4
    1e28:	mov	x0, x23
    1e2c:	mov	x2, x22
    1e30:	bl	ea0 <memcpy@plt>
    1e34:	sub	x0, x29, #0x58
    1e38:	bl	ee0 <PyBuffer_Release@plt>
    1e3c:	tbnz	w19, #31, 1ea4 <PyInit_fcntl@@Base+0xd80>
    1e40:	cbnz	w21, 1e98 <PyInit_fcntl@@Base+0xd74>
    1e44:	add	x0, sp, #0x4
    1e48:	mov	x1, x22
    1e4c:	bl	f00 <PyBytes_FromStringAndSize@plt>
    1e50:	b	1eb8 <PyInit_fcntl@@Base+0xd94>
    1e54:	bl	f50 <PyErr_Clear@plt>
    1e58:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    1e5c:	add	x1, x1, #0x266
    1e60:	sub	x2, x29, #0x4
    1e64:	mov	x0, x22
    1e68:	bl	f30 <_PyArg_Parse_SizeT@plt>
    1e6c:	cbz	w0, 1eb4 <PyInit_fcntl@@Base+0xd90>
    1e70:	bl	fe0 <PyEval_SaveThread@plt>
    1e74:	ldur	w2, [x29, #-4]
    1e78:	mov	x21, x0
    1e7c:	mov	w1, w20
    1e80:	mov	w0, w19
    1e84:	bl	1040 <ioctl@plt>
    1e88:	mov	w19, w0
    1e8c:	mov	x0, x21
    1e90:	bl	ec0 <PyEval_RestoreThread@plt>
    1e94:	tbnz	w19, #31, 1ea4 <PyInit_fcntl@@Base+0xd80>
    1e98:	sxtw	x0, w19
    1e9c:	bl	f40 <PyLong_FromLong@plt>
    1ea0:	b	1eb8 <PyInit_fcntl@@Base+0xd94>
    1ea4:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1ea8:	ldr	x8, [x8, #4040]
    1eac:	ldr	x0, [x8]
    1eb0:	bl	ed0 <PyErr_SetFromErrno@plt>
    1eb4:	mov	x0, xzr
    1eb8:	add	sp, sp, #0x460
    1ebc:	ldp	x20, x19, [sp, #64]
    1ec0:	ldp	x22, x21, [sp, #48]
    1ec4:	ldp	x24, x23, [sp, #32]
    1ec8:	ldp	x28, x25, [sp, #16]
    1ecc:	ldp	x29, x30, [sp], #80
    1ed0:	ret
    1ed4:	stp	x29, x30, [sp, #-64]!
    1ed8:	stp	x24, x23, [sp, #16]
    1edc:	stp	x22, x21, [sp, #32]
    1ee0:	stp	x20, x19, [sp, #48]
    1ee4:	mov	x29, sp
    1ee8:	mov	w20, w1
    1eec:	mov	w21, w0
    1ef0:	bl	fe0 <PyEval_SaveThread@plt>
    1ef4:	mov	x22, x0
    1ef8:	mov	w0, w21
    1efc:	mov	w1, w20
    1f00:	bl	f20 <flock@plt>
    1f04:	mov	w19, w0
    1f08:	mov	x0, x22
    1f0c:	bl	ec0 <PyEval_RestoreThread@plt>
    1f10:	cmn	w19, #0x1
    1f14:	b.ne	1f80 <PyInit_fcntl@@Base+0xe5c>  // b.any
    1f18:	bl	1020 <__errno_location@plt>
    1f1c:	ldr	w8, [x0]
    1f20:	cmp	w8, #0x4
    1f24:	b.ne	1f80 <PyInit_fcntl@@Base+0xe5c>  // b.any
    1f28:	mov	x23, x0
    1f2c:	bl	1000 <PyErr_CheckSignals@plt>
    1f30:	mov	w22, w0
    1f34:	cbnz	w0, 1f6c <PyInit_fcntl@@Base+0xe48>
    1f38:	bl	fe0 <PyEval_SaveThread@plt>
    1f3c:	mov	x24, x0
    1f40:	mov	w0, w21
    1f44:	mov	w1, w20
    1f48:	bl	f20 <flock@plt>
    1f4c:	mov	w19, w0
    1f50:	mov	x0, x24
    1f54:	bl	ec0 <PyEval_RestoreThread@plt>
    1f58:	cmn	w19, #0x1
    1f5c:	b.ne	1f6c <PyInit_fcntl@@Base+0xe48>  // b.any
    1f60:	ldr	w8, [x23]
    1f64:	cmp	w8, #0x4
    1f68:	b.eq	1f2c <PyInit_fcntl@@Base+0xe08>  // b.none
    1f6c:	tbnz	w19, #31, 1f88 <PyInit_fcntl@@Base+0xe64>
    1f70:	bl	1fb8 <PyInit_fcntl@@Base+0xe94>
    1f74:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    1f78:	ldr	x0, [x0, #4056]
    1f7c:	b	1fa4 <PyInit_fcntl@@Base+0xe80>
    1f80:	mov	w22, wzr
    1f84:	tbz	w19, #31, 1f70 <PyInit_fcntl@@Base+0xe4c>
    1f88:	cbz	w22, 1f94 <PyInit_fcntl@@Base+0xe70>
    1f8c:	mov	x0, xzr
    1f90:	b	1fa4 <PyInit_fcntl@@Base+0xe80>
    1f94:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1f98:	ldr	x8, [x8, #4040]
    1f9c:	ldr	x0, [x8]
    1fa0:	bl	ed0 <PyErr_SetFromErrno@plt>
    1fa4:	ldp	x20, x19, [sp, #48]
    1fa8:	ldp	x22, x21, [sp, #32]
    1fac:	ldp	x24, x23, [sp, #16]
    1fb0:	ldp	x29, x30, [sp], #64
    1fb4:	ret
    1fb8:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    1fbc:	ldr	x8, [x8, #4056]
    1fc0:	ldr	x9, [x8]
    1fc4:	add	x9, x9, #0x1
    1fc8:	str	x9, [x8]
    1fcc:	ret
    1fd0:	sub	sp, sp, #0x60
    1fd4:	stp	x29, x30, [sp, #32]
    1fd8:	stp	x24, x23, [sp, #48]
    1fdc:	stp	x22, x21, [sp, #64]
    1fe0:	stp	x20, x19, [sp, #80]
    1fe4:	add	x29, sp, #0x20
    1fe8:	mov	w21, w4
    1fec:	mov	x22, x2
    1ff0:	mov	w20, w1
    1ff4:	cmp	w1, #0x8
    1ff8:	mov	w19, w0
    1ffc:	b.ne	2014 <PyInit_fcntl@@Base+0xef0>  // b.any
    2000:	mov	w8, #0x2                   	// #2
    2004:	strh	w8, [sp]
    2008:	stp	xzr, xzr, [sp, #8]
    200c:	cbnz	x3, 2044 <PyInit_fcntl@@Base+0xf20>
    2010:	b	2058 <PyInit_fcntl@@Base+0xf34>
    2014:	tbnz	w20, #0, 2038 <PyInit_fcntl@@Base+0xf14>
    2018:	tbnz	w20, #1, 2158 <PyInit_fcntl@@Base+0x1034>
    201c:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2020:	ldr	x8, [x8, #4024]
    2024:	adrp	x1, 2000 <PyInit_fcntl@@Base+0xedc>
    2028:	add	x1, x1, #0x2ca
    202c:	ldr	x0, [x8]
    2030:	bl	f10 <PyErr_SetString@plt>
    2034:	b	2070 <PyInit_fcntl@@Base+0xf4c>
    2038:	strh	wzr, [sp]
    203c:	stp	xzr, xzr, [sp, #8]
    2040:	cbz	x3, 2058 <PyInit_fcntl@@Base+0xf34>
    2044:	mov	x0, x3
    2048:	bl	fb0 <PyLong_AsLong@plt>
    204c:	str	x0, [sp, #8]
    2050:	bl	f90 <PyErr_Occurred@plt>
    2054:	cbnz	x0, 2070 <PyInit_fcntl@@Base+0xf4c>
    2058:	cbz	x22, 207c <PyInit_fcntl@@Base+0xf58>
    205c:	mov	x0, x22
    2060:	bl	fb0 <PyLong_AsLong@plt>
    2064:	str	x0, [sp, #16]
    2068:	bl	f90 <PyErr_Occurred@plt>
    206c:	cbz	x0, 207c <PyInit_fcntl@@Base+0xf58>
    2070:	mov	w21, wzr
    2074:	mov	w8, wzr
    2078:	b	2120 <PyInit_fcntl@@Base+0xffc>
    207c:	strh	w21, [sp, #2]
    2080:	bl	fe0 <PyEval_SaveThread@plt>
    2084:	tst	w20, #0x4
    2088:	mov	w8, #0x6                   	// #6
    208c:	cinc	w22, w8, eq  // eq = none
    2090:	mov	x21, x0
    2094:	mov	x2, sp
    2098:	mov	w0, w19
    209c:	mov	w1, w22
    20a0:	bl	fd0 <fcntl64@plt>
    20a4:	mov	w20, w0
    20a8:	mov	x0, x21
    20ac:	bl	ec0 <PyEval_RestoreThread@plt>
    20b0:	cmn	w20, #0x1
    20b4:	b.ne	2118 <PyInit_fcntl@@Base+0xff4>  // b.any
    20b8:	bl	1020 <__errno_location@plt>
    20bc:	ldr	w8, [x0]
    20c0:	cmp	w8, #0x4
    20c4:	b.ne	2118 <PyInit_fcntl@@Base+0xff4>  // b.any
    20c8:	mov	x23, x0
    20cc:	bl	1000 <PyErr_CheckSignals@plt>
    20d0:	mov	w21, w0
    20d4:	cbnz	w0, 211c <PyInit_fcntl@@Base+0xff8>
    20d8:	bl	fe0 <PyEval_SaveThread@plt>
    20dc:	mov	x24, x0
    20e0:	mov	x2, sp
    20e4:	mov	w0, w19
    20e8:	mov	w1, w22
    20ec:	bl	fd0 <fcntl64@plt>
    20f0:	mov	w20, w0
    20f4:	mov	x0, x24
    20f8:	bl	ec0 <PyEval_RestoreThread@plt>
    20fc:	cmn	w20, #0x1
    2100:	b.ne	211c <PyInit_fcntl@@Base+0xff8>  // b.any
    2104:	ldr	w8, [x23]
    2108:	cmp	w8, #0x4
    210c:	mov	w8, #0x1                   	// #1
    2110:	b.eq	20cc <PyInit_fcntl@@Base+0xfa8>  // b.none
    2114:	b	2120 <PyInit_fcntl@@Base+0xffc>
    2118:	mov	w21, wzr
    211c:	mov	w8, #0x1                   	// #1
    2120:	cbz	w8, 213c <PyInit_fcntl@@Base+0x1018>
    2124:	tbnz	w20, #31, 2138 <PyInit_fcntl@@Base+0x1014>
    2128:	bl	1fb8 <PyInit_fcntl@@Base+0xe94>
    212c:	adrp	x0, 13000 <PyInit_fcntl@@Base+0x11edc>
    2130:	ldr	x0, [x0, #4056]
    2134:	b	2140 <PyInit_fcntl@@Base+0x101c>
    2138:	cbz	w21, 2160 <PyInit_fcntl@@Base+0x103c>
    213c:	mov	x0, xzr
    2140:	ldp	x20, x19, [sp, #80]
    2144:	ldp	x22, x21, [sp, #64]
    2148:	ldp	x24, x23, [sp, #48]
    214c:	ldp	x29, x30, [sp, #32]
    2150:	add	sp, sp, #0x60
    2154:	ret
    2158:	mov	w8, #0x1                   	// #1
    215c:	b	2004 <PyInit_fcntl@@Base+0xee0>
    2160:	adrp	x8, 13000 <PyInit_fcntl@@Base+0x11edc>
    2164:	ldr	x8, [x8, #4040]
    2168:	ldr	x0, [x8]
    216c:	bl	ed0 <PyErr_SetFromErrno@plt>
    2170:	b	2140 <PyInit_fcntl@@Base+0x101c>

Disassembly of section .fini:

0000000000002174 <.fini>:
    2174:	stp	x29, x30, [sp, #-16]!
    2178:	mov	x29, sp
    217c:	ldp	x29, x30, [sp], #16
    2180:	ret
