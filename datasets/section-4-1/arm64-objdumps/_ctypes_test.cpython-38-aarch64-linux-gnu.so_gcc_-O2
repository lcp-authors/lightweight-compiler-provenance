
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002068 <.init>:
    2068:	stp	x29, x30, [sp, #-16]!
    206c:	mov	x29, sp
    2070:	bl	21a0 <printf@plt+0x10>
    2074:	ldp	x29, x30, [sp], #16
    2078:	ret

Disassembly of section .plt:

0000000000002080 <memcpy@plt-0x20>:
    2080:	stp	x16, x30, [sp, #-16]!
    2084:	adrp	x16, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2088:	ldr	x17, [x16, #4088]
    208c:	add	x16, x16, #0xff8
    2090:	br	x17
    2094:	nop
    2098:	nop
    209c:	nop

00000000000020a0 <memcpy@plt>:
    20a0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16]
    20a8:	add	x16, x16, #0x0
    20ac:	br	x17

00000000000020b0 <strtok@plt>:
    20b0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #8]
    20b8:	add	x16, x16, #0x8
    20bc:	br	x17

00000000000020c0 <strlen@plt>:
    20c0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #16]
    20c8:	add	x16, x16, #0x10
    20cc:	br	x17

00000000000020d0 <__cxa_finalize@plt>:
    20d0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #24]
    20d8:	add	x16, x16, #0x18
    20dc:	br	x17

00000000000020e0 <qsort@plt>:
    20e0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #32]
    20e8:	add	x16, x16, #0x20
    20ec:	br	x17

00000000000020f0 <sqrt@plt>:
    20f0:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #40]
    20f8:	add	x16, x16, #0x28
    20fc:	br	x17

0000000000002100 <malloc@plt>:
    2100:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #48]
    2108:	add	x16, x16, #0x30
    210c:	br	x17

0000000000002110 <wcslen@plt>:
    2110:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #56]
    2118:	add	x16, x16, #0x38
    211c:	br	x17

0000000000002120 <__gmon_start__@plt>:
    2120:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #64]
    2128:	add	x16, x16, #0x40
    212c:	br	x17

0000000000002130 <PyModule_Create2@plt>:
    2130:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #72]
    2138:	add	x16, x16, #0x48
    213c:	br	x17

0000000000002140 <puts@plt>:
    2140:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #80]
    2148:	add	x16, x16, #0x50
    214c:	br	x17

0000000000002150 <PyArg_ParseTuple@plt>:
    2150:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #88]
    2158:	add	x16, x16, #0x58
    215c:	br	x17

0000000000002160 <free@plt>:
    2160:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #96]
    2168:	add	x16, x16, #0x60
    216c:	br	x17

0000000000002170 <strchr@plt>:
    2170:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #104]
    2178:	add	x16, x16, #0x68
    217c:	br	x17

0000000000002180 <vfprintf@plt>:
    2180:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #112]
    2188:	add	x16, x16, #0x70
    218c:	br	x17

0000000000002190 <printf@plt>:
    2190:	adrp	x16, 17000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #120]
    2198:	add	x16, x16, #0x78
    219c:	br	x17

Disassembly of section .text:

00000000000021a0 <py_func@@Base-0xd8>:
    21a0:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    21a4:	ldr	x0, [x0, #4000]
    21a8:	cbz	x0, 21b0 <printf@plt+0x20>
    21ac:	b	2120 <__gmon_start__@plt>
    21b0:	ret
    21b4:	nop
    21b8:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    21bc:	add	x0, x0, #0x1b8
    21c0:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    21c4:	add	x1, x1, #0x1b8
    21c8:	cmp	x1, x0
    21cc:	b.eq	21e4 <printf@plt+0x54>  // b.none
    21d0:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    21d4:	ldr	x1, [x1, #3952]
    21d8:	cbz	x1, 21e4 <printf@plt+0x54>
    21dc:	mov	x16, x1
    21e0:	br	x16
    21e4:	ret
    21e8:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    21ec:	add	x0, x0, #0x1b8
    21f0:	adrp	x1, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    21f4:	add	x1, x1, #0x1b8
    21f8:	sub	x1, x1, x0
    21fc:	lsr	x2, x1, #63
    2200:	add	x1, x2, x1, asr #3
    2204:	cmp	xzr, x1, asr #1
    2208:	asr	x1, x1, #1
    220c:	b.eq	2224 <printf@plt+0x94>  // b.none
    2210:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2214:	ldr	x2, [x2, #4048]
    2218:	cbz	x2, 2224 <printf@plt+0x94>
    221c:	mov	x16, x2
    2220:	br	x16
    2224:	ret
    2228:	stp	x29, x30, [sp, #-32]!
    222c:	mov	x29, sp
    2230:	str	x19, [sp, #16]
    2234:	adrp	x19, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    2238:	ldrb	w0, [x19, #440]
    223c:	cbnz	w0, 2264 <printf@plt+0xd4>
    2240:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2244:	ldr	x0, [x0, #3960]
    2248:	cbz	x0, 2258 <printf@plt+0xc8>
    224c:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    2250:	ldr	x0, [x0, #128]
    2254:	bl	20d0 <__cxa_finalize@plt>
    2258:	bl	21b8 <printf@plt+0x28>
    225c:	mov	w0, #0x1                   	// #1
    2260:	strb	w0, [x19, #440]
    2264:	ldr	x19, [sp, #16]
    2268:	ldp	x29, x30, [sp], #32
    226c:	ret
    2270:	b	21e8 <printf@plt+0x58>
    2274:	nop

0000000000002278 <py_func@@Base>:
    2278:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    227c:	ldr	x0, [x0, #4008]
    2280:	ldr	x1, [x0]
    2284:	add	x1, x1, #0x1
    2288:	str	x1, [x0]
    228c:	ret
    2290:	stp	x29, x30, [sp, #-32]!
    2294:	mov	x2, x1
    2298:	mov	x29, sp
    229c:	stp	x19, x20, [sp, #16]
    22a0:	mov	x19, x1
    22a4:	mov	x1, x0
    22a8:	mov	x20, x0
    22ac:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    22b0:	add	x0, x0, #0x5a0
    22b4:	bl	2190 <printf@plt>
    22b8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    22bc:	add	x0, x0, #0x5b8
    22c0:	bl	2140 <puts@plt>
    22c4:	mov	w0, #0x20                  	// #32
    22c8:	blr	x20
    22cc:	mov	x20, x0
    22d0:	blr	x19
    22d4:	mov	x1, x20
    22d8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    22dc:	ldp	x19, x20, [sp, #16]
    22e0:	add	x0, x0, #0x5c0
    22e4:	ldp	x29, x30, [sp], #32
    22e8:	b	2190 <printf@plt>
    22ec:	nop

00000000000022f0 <py_func_si@@Base>:
    22f0:	stp	x29, x30, [sp, #-32]!
    22f4:	mov	x0, x1
    22f8:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    22fc:	mov	x29, sp
    2300:	add	x1, x1, #0x5d8
    2304:	add	x3, sp, #0x14
    2308:	add	x2, sp, #0x18
    230c:	bl	2150 <PyArg_ParseTuple@plt>
    2310:	cbz	w0, 2334 <py_func_si@@Base+0x44>
    2314:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2318:	ldr	x1, [x1, #4008]
    231c:	mov	x0, x1
    2320:	ldr	x2, [x1]
    2324:	add	x2, x2, #0x1
    2328:	str	x2, [x1]
    232c:	ldp	x29, x30, [sp], #32
    2330:	ret
    2334:	mov	x0, #0x0                   	// #0
    2338:	ldp	x29, x30, [sp], #32
    233c:	ret

0000000000002340 <_testfunc_cbk_reg_int@@Base>:
    2340:	mul	w0, w0, w0
    2344:	mov	x16, x5
    2348:	mul	w1, w1, w1
    234c:	mul	w2, w2, w2
    2350:	mul	w3, w3, w3
    2354:	mul	w4, w4, w4
    2358:	br	x16
    235c:	nop

0000000000002360 <_testfunc_cbk_reg_double@@Base>:
    2360:	fmul	d0, d0, d0
    2364:	fmul	d1, d1, d1
    2368:	fmul	d2, d2, d2
    236c:	fmul	d3, d3, d3
    2370:	fmul	d4, d4, d4
    2374:	mov	x16, x0
    2378:	br	x16
    237c:	nop

0000000000002380 <_testfunc_cbk_large_struct@@Base>:
    2380:	mov	x2, x0
    2384:	stp	x29, x30, [sp, #-48]!
    2388:	mov	x29, sp
    238c:	ldp	x4, x5, [x2]
    2390:	stp	x4, x5, [sp, #16]
    2394:	add	x0, sp, #0x10
    2398:	ldr	x2, [x2, #16]
    239c:	str	x2, [sp, #32]
    23a0:	blr	x1
    23a4:	ldp	x29, x30, [sp], #48
    23a8:	ret
    23ac:	nop

00000000000023b0 <_testfunc_large_struct_update_value@@Base>:
    23b0:	mov	x1, #0xf00d                	// #61453
    23b4:	movk	x1, #0xbad, lsl #16
    23b8:	str	x1, [x0]
    23bc:	str	x1, [x0, #8]
    23c0:	str	x1, [x0, #16]
    23c4:	ret

00000000000023c8 <_testfunc_reg_struct_update_value@@Base>:
    23c8:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    23cc:	ldr	x1, [x1, #4040]
    23d0:	str	x0, [x1]
    23d4:	ret

00000000000023d8 <_testfunc_array_in_struct1@@Base>:
    23d8:	sub	sp, sp, #0x10
    23dc:	mov	w3, #0x0                   	// #0
    23e0:	mov	x2, sp
    23e4:	add	x4, sp, #0x10
    23e8:	stp	x0, x1, [sp]
    23ec:	nop
    23f0:	ldrb	w0, [x2], #1
    23f4:	add	w3, w3, w0
    23f8:	cmp	x2, x4
    23fc:	b.ne	23f0 <_testfunc_array_in_struct1@@Base+0x18>  // b.any
    2400:	mov	w0, w3
    2404:	add	sp, sp, #0x10
    2408:	ret
    240c:	nop

0000000000002410 <_testfunc_array_in_struct2@@Base>:
    2410:	movi	d2, #0x0
    2414:	fadd	d0, d0, d2
    2418:	fadd	d0, d0, d1
    241c:	ret

0000000000002420 <_testfunc_array_in_struct2a@@Base>:
    2420:	fmov	w2, s0
    2424:	fmov	w3, s1
    2428:	fmov	w4, s2
    242c:	mov	x0, #0x0                   	// #0
    2430:	mov	x1, #0x0                   	// #0
    2434:	movi	d4, #0x0
    2438:	bfxil	x0, x2, #0, #32
    243c:	fmov	w2, s3
    2440:	bfxil	x1, x4, #0, #32
    2444:	bfi	x0, x3, #32, #32
    2448:	fmov	d0, x0
    244c:	bfi	x1, x2, #32, #32
    2450:	sxtw	x2, w0
    2454:	fmov	d3, x2
    2458:	ushr	d1, d0, #32
    245c:	sxtw	x0, w1
    2460:	fmov	d2, x1
    2464:	fcvt	d3, s3
    2468:	fmov	d0, x0
    246c:	ushr	d2, d2, #32
    2470:	fcvt	d1, s1
    2474:	fcvt	d0, s0
    2478:	fadd	d3, d3, d4
    247c:	fcvt	d2, s2
    2480:	fadd	d1, d1, d3
    2484:	fadd	d0, d0, d1
    2488:	fadd	d0, d2, d0
    248c:	ret

0000000000002490 <_testfunc_union_by_value1@@Base>:
    2490:	asr	x1, x0, #32
    2494:	add	x1, x1, w0, sxtw
    2498:	add	x0, x1, x0
    249c:	ret

00000000000024a0 <_testfunc_union_by_value2@@Base>:
    24a0:	ldr	w1, [x0]
    24a4:	ldr	w0, [x0, #8]
    24a8:	add	w0, w1, w0
    24ac:	sxtw	x0, w0
    24b0:	ret
    24b4:	nop

00000000000024b8 <_testfunc_union_by_reference1@@Base>:
    24b8:	mov	x1, x0
    24bc:	ldr	x0, [x0]
    24c0:	str	xzr, [x1]
    24c4:	ret

00000000000024c8 <_testfunc_union_by_reference2@@Base>:
    24c8:	ldp	w1, w2, [x0]
    24cc:	str	xzr, [x0]
    24d0:	add	w0, w1, w2
    24d4:	sxtw	x0, w0
    24d8:	ret
    24dc:	nop

00000000000024e0 <_testfunc_union_by_reference3@@Base>:
    24e0:	ldr	w1, [x0]
    24e4:	ldr	w3, [x0, #8]
    24e8:	ldr	w2, [x0, #24]
    24ec:	add	w1, w1, w3
    24f0:	stp	xzr, xzr, [x0]
    24f4:	add	w1, w1, w2
    24f8:	stp	xzr, xzr, [x0, #16]
    24fc:	sxtw	x0, w1
    2500:	ret
    2504:	nop

0000000000002508 <_testfunc_bitfield_by_value1@@Base>:
    2508:	sbfx	x1, x0, #0, #1
    250c:	sbfx	x3, x0, #1, #2
    2510:	sbfx	x2, x0, #3, #3
    2514:	sbfx	x0, x0, #6, #2
    2518:	add	w1, w3, w1, sxtb
    251c:	add	w0, w2, w0
    2520:	add	w0, w1, w0
    2524:	sxtw	x0, w0
    2528:	ret
    252c:	nop

0000000000002530 <_testfunc_bitfield_by_reference1@@Base>:
    2530:	ldrb	w1, [x0]
    2534:	str	wzr, [x0]
    2538:	sbfx	x0, x1, #0, #1
    253c:	sbfx	x3, x1, #1, #2
    2540:	sbfx	x2, x1, #3, #3
    2544:	sbfx	x1, x1, #6, #2
    2548:	add	w0, w3, w0, sxtb
    254c:	add	w1, w2, w1
    2550:	add	w0, w0, w1
    2554:	sxtw	x0, w0
    2558:	ret
    255c:	nop

0000000000002560 <_testfunc_bitfield_by_reference2@@Base>:
    2560:	ldrb	w1, [x0]
    2564:	str	wzr, [x0]
    2568:	and	w0, w1, #0x1
    256c:	ubfx	x3, x1, #1, #2
    2570:	ubfx	x2, x1, #3, #3
    2574:	ubfx	x1, x1, #6, #2
    2578:	add	w0, w0, w3
    257c:	add	w1, w2, w1
    2580:	add	w0, w0, w1
    2584:	sxtw	x0, w0
    2588:	ret
    258c:	nop

0000000000002590 <_testfunc_bitfield_by_value2@@Base>:
    2590:	sbfx	x1, x0, #0, #1
    2594:	sbfx	x2, x0, #0, #3
    2598:	sbfx	x0, x0, #0, #2
    259c:	add	w1, w2, w1, sxtb
    25a0:	add	w0, w1, w0, lsl #1
    25a4:	sxtw	x0, w0
    25a8:	ret
    25ac:	nop

00000000000025b0 <testfunc_array@@Base>:
    25b0:	mov	x4, x0
    25b4:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    25b8:	add	x0, x1, #0x5e0
    25bc:	ldp	w1, w2, [x4]
    25c0:	ldp	w3, w4, [x4, #8]
    25c4:	b	2190 <printf@plt>

00000000000025c8 <testfunc_Ddd@@Base>:
    25c8:	stp	x29, x30, [sp, #-48]!
    25cc:	mov	x29, sp
    25d0:	stp	d1, d0, [sp, #32]
    25d4:	fmul	d0, d0, d1
    25d8:	bl	53c8 <PyInit__ctypes_test@@Base+0x1eb0>
    25dc:	str	q0, [sp, #16]
    25e0:	add	x2, sp, #0x20
    25e4:	add	x1, sp, #0x28
    25e8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    25ec:	add	x0, x0, #0x600
    25f0:	bl	2190 <printf@plt>
    25f4:	ldp	d1, d0, [sp, #32]
    25f8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    25fc:	add	x0, x0, #0x618
    2600:	bl	2190 <printf@plt>
    2604:	ldr	q2, [sp, #16]
    2608:	ldp	x29, x30, [sp], #48
    260c:	mov	v0.16b, v2.16b
    2610:	ret
    2614:	nop

0000000000002618 <testfunc_DDD@@Base>:
    2618:	stp	x29, x30, [sp, #-64]!
    261c:	mov	x29, sp
    2620:	str	q1, [sp, #32]
    2624:	str	q0, [sp, #48]
    2628:	bl	4970 <PyInit__ctypes_test@@Base+0x1458>
    262c:	add	x2, sp, #0x20
    2630:	add	x1, sp, #0x30
    2634:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    2638:	add	x0, x0, #0x630
    263c:	str	q0, [sp, #16]
    2640:	bl	2190 <printf@plt>
    2644:	ldr	q1, [sp, #32]
    2648:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    264c:	ldr	q0, [sp, #48]
    2650:	add	x0, x0, #0x648
    2654:	bl	2190 <printf@plt>
    2658:	ldr	q2, [sp, #16]
    265c:	ldp	x29, x30, [sp], #64
    2660:	mov	v0.16b, v2.16b
    2664:	ret

0000000000002668 <testfunc_iii@@Base>:
    2668:	stp	x29, x30, [sp, #-48]!
    266c:	adrp	x3, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    2670:	mov	x29, sp
    2674:	str	x19, [sp, #16]
    2678:	mov	w19, w1
    267c:	add	x2, sp, #0x28
    2680:	stp	w1, w0, [sp, #40]
    2684:	add	x1, sp, #0x2c
    2688:	mul	w19, w0, w19
    268c:	add	x0, x3, #0x660
    2690:	bl	2190 <printf@plt>
    2694:	mov	w0, w19
    2698:	ldr	x19, [sp, #16]
    269c:	ldp	x29, x30, [sp], #48
    26a0:	ret
    26a4:	nop

00000000000026a8 <myprintf@@Base>:
    26a8:	stp	x29, x30, [sp, #-304]!
    26ac:	adrp	x8, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    26b0:	mov	x12, x0
    26b4:	mov	x29, sp
    26b8:	ldr	x8, [x8, #3984]
    26bc:	add	x11, sp, #0xf0
    26c0:	add	x0, sp, #0x130
    26c4:	mov	w10, #0xffffffc8            	// #-56
    26c8:	mov	w9, #0xffffff80            	// #-128
    26cc:	stp	x0, x0, [sp, #48]
    26d0:	str	x11, [sp, #64]
    26d4:	stp	w10, w9, [sp, #72]
    26d8:	ldr	x0, [x8]
    26dc:	str	q0, [sp, #112]
    26e0:	ldp	x10, x11, [sp, #48]
    26e4:	stp	x10, x11, [sp, #16]
    26e8:	ldp	x8, x9, [sp, #64]
    26ec:	stp	x8, x9, [sp, #32]
    26f0:	stp	x10, x11, [sp, #80]
    26f4:	stp	x8, x9, [sp, #96]
    26f8:	str	q1, [sp, #128]
    26fc:	str	q2, [sp, #144]
    2700:	str	q3, [sp, #160]
    2704:	str	q4, [sp, #176]
    2708:	str	q5, [sp, #192]
    270c:	str	q6, [sp, #208]
    2710:	str	q7, [sp, #224]
    2714:	stp	x1, x2, [sp, #248]
    2718:	add	x2, sp, #0x10
    271c:	mov	x1, x12
    2720:	stp	x3, x4, [sp, #264]
    2724:	stp	x5, x6, [sp, #280]
    2728:	str	x7, [sp, #296]
    272c:	bl	2180 <vfprintf@plt>
    2730:	ldp	x29, x30, [sp], #304
    2734:	ret

0000000000002738 <my_strtok@@Base>:
    2738:	b	20b0 <strtok@plt>
    273c:	nop

0000000000002740 <my_strchr@@Base>:
    2740:	b	2170 <strchr@plt>
    2744:	nop

0000000000002748 <my_sqrt@@Base>:
    2748:	fsqrt	d1, d0
    274c:	fcmp	d0, #0.0
    2750:	b.mi	275c <my_sqrt@@Base+0x14>  // b.first
    2754:	fmov	d0, d1
    2758:	ret
    275c:	stp	x29, x30, [sp, #-32]!
    2760:	mov	x29, sp
    2764:	str	d1, [sp, #24]
    2768:	bl	20f0 <sqrt@plt>
    276c:	ldr	d1, [sp, #24]
    2770:	ldp	x29, x30, [sp], #32
    2774:	fmov	d0, d1
    2778:	ret
    277c:	nop

0000000000002780 <my_qsort@@Base>:
    2780:	b	20e0 <qsort@plt>
    2784:	nop

0000000000002788 <_testfunc_ai8@@Base>:
    2788:	ret
    278c:	nop

0000000000002790 <_testfunc_v@@Base>:
    2790:	add	w0, w0, w1
    2794:	str	w0, [x2]
    2798:	ret
    279c:	nop

00000000000027a0 <_testfunc_i_bhilfd@@Base>:
    27a0:	add	w2, w2, w1, sxth
    27a4:	add	w2, w2, w0, sxtb
    27a8:	add	x2, x3, w2, sxtw
    27ac:	scvtf	s2, x2
    27b0:	fadd	s2, s2, s0
    27b4:	fcvt	d2, s2
    27b8:	fadd	d2, d2, d1
    27bc:	fcvtzs	w0, d2
    27c0:	ret
    27c4:	nop

00000000000027c8 <_testfunc_f_bhilfd@@Base>:
    27c8:	add	w2, w2, w1, sxth
    27cc:	add	w2, w2, w0, sxtb
    27d0:	add	x2, x3, w2, sxtw
    27d4:	scvtf	s2, x2
    27d8:	fadd	s0, s2, s0
    27dc:	fcvt	d0, s0
    27e0:	fadd	d0, d0, d1
    27e4:	fcvt	s0, d0
    27e8:	ret
    27ec:	nop

00000000000027f0 <_testfunc_d_bhilfd@@Base>:
    27f0:	add	w2, w2, w1, sxth
    27f4:	add	w2, w2, w0, sxtb
    27f8:	add	x2, x3, w2, sxtw
    27fc:	scvtf	s2, x2
    2800:	fadd	s2, s2, s0
    2804:	fcvt	d2, s2
    2808:	fadd	d0, d2, d1
    280c:	ret

0000000000002810 <_testfunc_D_bhilfD@@Base>:
    2810:	add	w2, w2, w1, sxth
    2814:	stp	x29, x30, [sp, #-32]!
    2818:	add	w2, w2, w0, sxtb
    281c:	mov	x29, sp
    2820:	add	x2, x3, w2, sxtw
    2824:	str	q1, [sp, #16]
    2828:	scvtf	s2, x2
    282c:	fadd	s0, s2, s0
    2830:	bl	5290 <PyInit__ctypes_test@@Base+0x1d78>
    2834:	ldr	q1, [sp, #16]
    2838:	bl	3528 <PyInit__ctypes_test@@Base+0x10>
    283c:	ldp	x29, x30, [sp], #32
    2840:	ret
    2844:	nop

0000000000002848 <_testfunc_p_p@@Base>:
    2848:	ret
    284c:	nop

0000000000002850 <_testfunc_c_p_p@@Base>:
    2850:	ldr	w0, [x0]
    2854:	add	x0, x1, w0, sxtw #3
    2858:	ldur	x0, [x0, #-8]
    285c:	ret

0000000000002860 <get_strchr@@Base>:
    2860:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2864:	ldr	x0, [x0, #4016]
    2868:	ret
    286c:	nop

0000000000002870 <my_strdup@@Base>:
    2870:	stp	x29, x30, [sp, #-48]!
    2874:	mov	x29, sp
    2878:	stp	x19, x20, [sp, #16]
    287c:	str	x21, [sp, #32]
    2880:	mov	x21, x0
    2884:	bl	20c0 <strlen@plt>
    2888:	add	x20, x0, #0x1
    288c:	mov	x0, x20
    2890:	bl	2100 <malloc@plt>
    2894:	mov	x19, x0
    2898:	cbz	x0, 28a8 <my_strdup@@Base+0x38>
    289c:	mov	x2, x20
    28a0:	mov	x1, x21
    28a4:	bl	20a0 <memcpy@plt>
    28a8:	mov	x0, x19
    28ac:	ldp	x19, x20, [sp, #16]
    28b0:	ldr	x21, [sp, #32]
    28b4:	ldp	x29, x30, [sp], #48
    28b8:	ret
    28bc:	nop

00000000000028c0 <my_free@@Base>:
    28c0:	b	2160 <free@plt>
    28c4:	nop

00000000000028c8 <my_wcsdup@@Base>:
    28c8:	stp	x29, x30, [sp, #-48]!
    28cc:	mov	x29, sp
    28d0:	stp	x19, x20, [sp, #16]
    28d4:	str	x21, [sp, #32]
    28d8:	mov	x21, x0
    28dc:	bl	2110 <wcslen@plt>
    28e0:	add	x19, x0, #0x1
    28e4:	lsl	x19, x19, #2
    28e8:	mov	x0, x19
    28ec:	bl	2100 <malloc@plt>
    28f0:	mov	x20, x0
    28f4:	cbz	x0, 2904 <my_wcsdup@@Base+0x3c>
    28f8:	mov	x2, x19
    28fc:	mov	x1, x21
    2900:	bl	20a0 <memcpy@plt>
    2904:	mov	x0, x20
    2908:	ldp	x19, x20, [sp, #16]
    290c:	ldr	x21, [sp, #32]
    2910:	ldp	x29, x30, [sp], #48
    2914:	ret

0000000000002918 <my_wcslen@@Base>:
    2918:	b	2110 <wcslen@plt>
    291c:	nop

0000000000002920 <_testfunc_callfuncp@@Base>:
    2920:	stp	x29, x30, [sp, #-32]!
    2924:	mov	w1, #0x2                   	// #2
    2928:	mov	x29, sp
    292c:	str	x19, [sp, #16]
    2930:	mov	x19, x0
    2934:	mov	w0, #0x1                   	// #1
    2938:	ldr	x2, [x19]
    293c:	blr	x2
    2940:	ldr	x2, [x19, #8]
    2944:	mov	w1, #0x4                   	// #4
    2948:	mov	w0, #0x3                   	// #3
    294c:	blr	x2
    2950:	mov	w0, #0x0                   	// #0
    2954:	ldr	x19, [sp, #16]
    2958:	ldp	x29, x30, [sp], #32
    295c:	ret

0000000000002960 <_testfunc_deref_pointer@@Base>:
    2960:	ldr	w0, [x0]
    2964:	ret

0000000000002968 <_testfunc_callback_with_pointer@@Base>:
    2968:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    296c:	add	x1, x1, #0x6e0
    2970:	stp	x29, x30, [sp, #-64]!
    2974:	mov	x2, x0
    2978:	mov	x29, sp
    297c:	ldp	x4, x5, [x1]
    2980:	stp	x4, x5, [sp, #24]
    2984:	add	x0, sp, #0x18
    2988:	ldp	x4, x5, [x1, #16]
    298c:	stp	x4, x5, [sp, #40]
    2990:	ldr	x1, [x1, #32]
    2994:	str	x1, [sp, #56]
    2998:	blr	x2
    299c:	ldp	x29, x30, [sp], #64
    29a0:	ret
    29a4:	nop

00000000000029a8 <_testfunc_q_bhilfdq@@Base>:
    29a8:	add	w2, w2, w1, sxth
    29ac:	scvtf	d3, x4
    29b0:	add	w2, w2, w0, sxtb
    29b4:	add	x2, x3, w2, sxtw
    29b8:	scvtf	s2, x2
    29bc:	fadd	s2, s2, s0
    29c0:	fcvt	d2, s2
    29c4:	fadd	d2, d2, d1
    29c8:	fadd	d2, d2, d3
    29cc:	fcvtzs	x0, d2
    29d0:	ret
    29d4:	nop

00000000000029d8 <_testfunc_q_bhilfd@@Base>:
    29d8:	add	w2, w2, w1, sxth
    29dc:	add	w2, w2, w0, sxtb
    29e0:	add	x2, x3, w2, sxtw
    29e4:	scvtf	s2, x2
    29e8:	fadd	s2, s2, s0
    29ec:	fcvt	d2, s2
    29f0:	fadd	d2, d2, d1
    29f4:	fcvtzs	x0, d2
    29f8:	ret
    29fc:	nop

0000000000002a00 <_testfunc_callback_i_if@@Base>:
    2a00:	stp	x29, x30, [sp, #-48]!
    2a04:	mov	x29, sp
    2a08:	stp	x19, x20, [sp, #16]
    2a0c:	cbz	w0, 2a50 <_testfunc_callback_i_if@@Base+0x50>
    2a10:	mov	w19, w0
    2a14:	str	x21, [sp, #32]
    2a18:	mov	x21, x1
    2a1c:	mov	w20, #0x0                   	// #0
    2a20:	mov	w0, w19
    2a24:	add	w19, w19, w19, lsr #31
    2a28:	blr	x21
    2a2c:	add	w20, w20, w0
    2a30:	cmp	wzr, w19, asr #1
    2a34:	asr	w19, w19, #1
    2a38:	b.ne	2a20 <_testfunc_callback_i_if@@Base+0x20>  // b.any
    2a3c:	mov	w0, w20
    2a40:	ldp	x19, x20, [sp, #16]
    2a44:	ldr	x21, [sp, #32]
    2a48:	ldp	x29, x30, [sp], #48
    2a4c:	ret
    2a50:	mov	w20, #0x0                   	// #0
    2a54:	mov	w0, w20
    2a58:	ldp	x19, x20, [sp, #16]
    2a5c:	ldp	x29, x30, [sp], #48
    2a60:	ret
    2a64:	nop

0000000000002a68 <_testfunc_callback_q_qf@@Base>:
    2a68:	stp	x29, x30, [sp, #-48]!
    2a6c:	mov	x29, sp
    2a70:	stp	x19, x20, [sp, #16]
    2a74:	cbz	x0, 2ab8 <_testfunc_callback_q_qf@@Base+0x50>
    2a78:	mov	x19, x0
    2a7c:	str	x21, [sp, #32]
    2a80:	mov	x21, x1
    2a84:	mov	x20, #0x0                   	// #0
    2a88:	mov	x0, x19
    2a8c:	add	x19, x19, x19, lsr #63
    2a90:	blr	x21
    2a94:	add	x20, x20, x0
    2a98:	cmp	xzr, x19, asr #1
    2a9c:	asr	x19, x19, #1
    2aa0:	b.ne	2a88 <_testfunc_callback_q_qf@@Base+0x20>  // b.any
    2aa4:	mov	x0, x20
    2aa8:	ldp	x19, x20, [sp, #16]
    2aac:	ldr	x21, [sp, #32]
    2ab0:	ldp	x29, x30, [sp], #48
    2ab4:	ret
    2ab8:	mov	x20, #0x0                   	// #0
    2abc:	mov	x0, x20
    2ac0:	ldp	x19, x20, [sp, #16]
    2ac4:	ldp	x29, x30, [sp], #48
    2ac8:	ret
    2acc:	nop

0000000000002ad0 <getSPAMANDEGGS@@Base>:
    2ad0:	mov	x2, x0
    2ad4:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2ad8:	mov	w0, #0x1                   	// #1
    2adc:	ldr	x1, [x1, #3992]
    2ae0:	str	x1, [x2]
    2ae4:	ret

0000000000002ae8 <_testfunc_byval@@Base>:
    2ae8:	asr	x2, x0, #32
    2aec:	cbz	x1, 2af4 <_testfunc_byval@@Base+0xc>
    2af0:	stp	w0, w2, [x1]
    2af4:	add	w0, w2, w0
    2af8:	ret
    2afc:	nop

0000000000002b00 <get_an_integer@@Base>:
    2b00:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2b04:	ldr	x0, [x0, #4056]
    2b08:	ldr	w0, [x0]
    2b0c:	ret

0000000000002b10 <integrate@@Base>:
    2b10:	stp	x29, x30, [sp, #-80]!
    2b14:	mov	x29, sp
    2b18:	stp	d10, d11, [sp, #48]
    2b1c:	fsub	d11, d1, d0
    2b20:	fmov	d10, d1
    2b24:	stp	d12, d13, [sp, #64]
    2b28:	scvtf	d12, x1
    2b2c:	movi	d13, #0x0
    2b30:	stp	d8, d9, [sp, #32]
    2b34:	fmov	d8, #5.000000000000000000e-01
    2b38:	fmov	d9, d0
    2b3c:	fdiv	d11, d11, d12
    2b40:	fmul	d8, d11, d8
    2b44:	fadd	d8, d8, d0
    2b48:	fsub	d0, d1, d8
    2b4c:	fsub	d1, d8, d9
    2b50:	fmul	d0, d0, d1
    2b54:	fcmpe	d0, d13
    2b58:	b.le	2b90 <integrate@@Base+0x80>
    2b5c:	str	x19, [sp, #16]
    2b60:	mov	x19, x0
    2b64:	nop
    2b68:	fmov	d0, d8
    2b6c:	blr	x19
    2b70:	fadd	d8, d8, d11
    2b74:	fadd	d13, d13, d0
    2b78:	fsub	d2, d10, d8
    2b7c:	fsub	d0, d8, d9
    2b80:	fmul	d2, d2, d0
    2b84:	fcmpe	d2, #0.0
    2b88:	b.gt	2b68 <integrate@@Base+0x58>
    2b8c:	ldr	x19, [sp, #16]
    2b90:	fdiv	d0, d13, d12
    2b94:	ldp	d8, d9, [sp, #32]
    2b98:	ldp	d10, d11, [sp, #48]
    2b9c:	ldp	d12, d13, [sp, #64]
    2ba0:	ldp	x29, x30, [sp], #80
    2ba4:	ret

0000000000002ba8 <library_get@@Base>:
    2ba8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2bac:	ldr	x0, [x0, #4064]
    2bb0:	ret
    2bb4:	nop

0000000000002bb8 <_py_func_si@@Base>:
    2bb8:	ret
    2bbc:	nop

0000000000002bc0 <_py_func@@Base>:
    2bc0:	ret
    2bc4:	nop

0000000000002bc8 <set_bitfields@@Base>:
    2bc8:	and	w1, w1, #0xff
    2bcc:	cmp	w1, #0x49
    2bd0:	b.eq	2cd4 <set_bitfields@@Base+0x10c>  // b.none
    2bd4:	b.hi	2c38 <set_bitfields@@Base+0x70>  // b.pmore
    2bd8:	cmp	w1, #0x45
    2bdc:	b.eq	2ce4 <set_bitfields@@Base+0x11c>  // b.none
    2be0:	b.ls	2c14 <set_bitfields@@Base+0x4c>  // b.plast
    2be4:	cmp	w1, #0x47
    2be8:	b.eq	2cf4 <set_bitfields@@Base+0x12c>  // b.none
    2bec:	cmp	w1, #0x48
    2bf0:	b.ne	2bfc <set_bitfields@@Base+0x34>  // b.any
    2bf4:	strb	w2, [x0, #4]
    2bf8:	ret
    2bfc:	cmp	w1, #0x46
    2c00:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c04:	ldr	w1, [x0]
    2c08:	bfi	w1, w2, #15, #6
    2c0c:	str	w1, [x0]
    2c10:	ret
    2c14:	cmp	w1, #0x43
    2c18:	b.eq	2d04 <set_bitfields@@Base+0x13c>  // b.none
    2c1c:	b.ls	2c64 <set_bitfields@@Base+0x9c>  // b.plast
    2c20:	cmp	w1, #0x44
    2c24:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c28:	ldrh	w1, [x0]
    2c2c:	bfi	w1, w2, #6, #4
    2c30:	strh	w1, [x0]
    2c34:	ret
    2c38:	cmp	w1, #0x50
    2c3c:	b.eq	2d14 <set_bitfields@@Base+0x14c>  // b.none
    2c40:	b.ls	2c9c <set_bitfields@@Base+0xd4>  // b.plast
    2c44:	cmp	w1, #0x52
    2c48:	b.eq	2d24 <set_bitfields@@Base+0x15c>  // b.none
    2c4c:	cmp	w1, #0x53
    2c50:	b.ne	2c84 <set_bitfields@@Base+0xbc>  // b.any
    2c54:	ldrh	w1, [x0, #8]
    2c58:	bfi	w1, w2, #6, #7
    2c5c:	strh	w1, [x0, #8]
    2c60:	ret
    2c64:	cmp	w1, #0x41
    2c68:	b.eq	2d34 <set_bitfields@@Base+0x16c>  // b.none
    2c6c:	cmp	w1, #0x42
    2c70:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c74:	ldrb	w1, [x0]
    2c78:	bfi	w1, w2, #1, #2
    2c7c:	strb	w1, [x0]
    2c80:	ret
    2c84:	cmp	w1, #0x51
    2c88:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2c8c:	ldrb	w1, [x0, #7]
    2c90:	bfi	w1, w2, #3, #5
    2c94:	strb	w1, [x0, #7]
    2c98:	ret
    2c9c:	cmp	w1, #0x4e
    2ca0:	b.eq	2d44 <set_bitfields@@Base+0x17c>  // b.none
    2ca4:	cmp	w1, #0x4f
    2ca8:	b.ne	2cbc <set_bitfields@@Base+0xf4>  // b.any
    2cac:	ldrb	w1, [x0, #6]
    2cb0:	bfi	w1, w2, #4, #3
    2cb4:	strb	w1, [x0, #6]
    2cb8:	ret
    2cbc:	cmp	w1, #0x4d
    2cc0:	b.ne	2bf8 <set_bitfields@@Base+0x30>  // b.any
    2cc4:	ldrb	w1, [x0, #6]
    2cc8:	bfi	w1, w2, #1, #1
    2ccc:	strb	w1, [x0, #6]
    2cd0:	ret
    2cd4:	ldr	w1, [x0, #4]
    2cd8:	bfi	w1, w2, #8, #9
    2cdc:	str	w1, [x0, #4]
    2ce0:	ret
    2ce4:	ldrb	w1, [x0, #1]
    2ce8:	bfi	w1, w2, #2, #5
    2cec:	strb	w1, [x0, #1]
    2cf0:	ret
    2cf4:	ldrh	w1, [x0, #2]
    2cf8:	bfi	w1, w2, #5, #7
    2cfc:	strh	w1, [x0, #2]
    2d00:	ret
    2d04:	ldrb	w1, [x0]
    2d08:	bfi	w1, w2, #3, #3
    2d0c:	strb	w1, [x0]
    2d10:	ret
    2d14:	ldrh	w1, [x0, #6]
    2d18:	bfi	w1, w2, #7, #4
    2d1c:	strh	w1, [x0, #6]
    2d20:	ret
    2d24:	ldrb	w1, [x0, #8]
    2d28:	bfxil	w1, w2, #0, #6
    2d2c:	strb	w1, [x0, #8]
    2d30:	ret
    2d34:	ldrb	w1, [x0]
    2d38:	bfxil	w1, w2, #0, #1
    2d3c:	strb	w1, [x0]
    2d40:	ret
    2d44:	ldrb	w1, [x0, #6]
    2d48:	bfi	w1, w2, #2, #2
    2d4c:	strb	w1, [x0, #6]
    2d50:	ret
    2d54:	nop

0000000000002d58 <unpack_bitfields@@Base>:
    2d58:	and	w1, w1, #0xff
    2d5c:	cmp	w1, #0x49
    2d60:	b.eq	2e94 <unpack_bitfields@@Base+0x13c>  // b.none
    2d64:	b.hi	2dc0 <unpack_bitfields@@Base+0x68>  // b.pmore
    2d68:	cmp	w1, #0x45
    2d6c:	b.eq	2ea0 <unpack_bitfields@@Base+0x148>  // b.none
    2d70:	b.ls	2da0 <unpack_bitfields@@Base+0x48>  // b.plast
    2d74:	cmp	w1, #0x47
    2d78:	b.eq	2eac <unpack_bitfields@@Base+0x154>  // b.none
    2d7c:	cmp	w1, #0x48
    2d80:	b.ne	2d8c <unpack_bitfields@@Base+0x34>  // b.any
    2d84:	ldrsb	w0, [x0, #4]
    2d88:	ret
    2d8c:	cmp	w1, #0x46
    2d90:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2d94:	ldr	w0, [x0]
    2d98:	sbfx	x0, x0, #15, #6
    2d9c:	ret
    2da0:	cmp	w1, #0x43
    2da4:	b.eq	2e54 <unpack_bitfields@@Base+0xfc>  // b.none
    2da8:	b.ls	2de8 <unpack_bitfields@@Base+0x90>  // b.plast
    2dac:	cmp	w1, #0x44
    2db0:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2db4:	ldrh	w0, [x0]
    2db8:	sbfx	x0, x0, #6, #4
    2dbc:	ret
    2dc0:	cmp	w1, #0x50
    2dc4:	b.eq	2e60 <unpack_bitfields@@Base+0x108>  // b.none
    2dc8:	b.ls	2e18 <unpack_bitfields@@Base+0xc0>  // b.plast
    2dcc:	cmp	w1, #0x52
    2dd0:	b.eq	2e6c <unpack_bitfields@@Base+0x114>  // b.none
    2dd4:	cmp	w1, #0x53
    2dd8:	b.ne	2e04 <unpack_bitfields@@Base+0xac>  // b.any
    2ddc:	ldrh	w0, [x0, #8]
    2de0:	sbfx	x0, x0, #6, #7
    2de4:	ret
    2de8:	cmp	w1, #0x41
    2dec:	b.eq	2e78 <unpack_bitfields@@Base+0x120>  // b.none
    2df0:	cmp	w1, #0x42
    2df4:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2df8:	ldrb	w0, [x0]
    2dfc:	sbfx	x0, x0, #1, #2
    2e00:	ret
    2e04:	cmp	w1, #0x51
    2e08:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2e0c:	ldrb	w0, [x0, #7]
    2e10:	sbfx	x0, x0, #3, #5
    2e14:	ret
    2e18:	cmp	w1, #0x4e
    2e1c:	b.eq	2e88 <unpack_bitfields@@Base+0x130>  // b.none
    2e20:	cmp	w1, #0x4f
    2e24:	b.ne	2e34 <unpack_bitfields@@Base+0xdc>  // b.any
    2e28:	ldrb	w0, [x0, #6]
    2e2c:	sbfx	x0, x0, #4, #3
    2e30:	ret
    2e34:	cmp	w1, #0x4d
    2e38:	b.ne	2e4c <unpack_bitfields@@Base+0xf4>  // b.any
    2e3c:	ldrb	w0, [x0, #6]
    2e40:	sbfx	x0, x0, #1, #1
    2e44:	sxtb	w0, w0
    2e48:	ret
    2e4c:	mov	w0, #0x3e7                 	// #999
    2e50:	ret
    2e54:	ldrb	w0, [x0]
    2e58:	sbfx	x0, x0, #3, #3
    2e5c:	ret
    2e60:	ldrh	w0, [x0, #6]
    2e64:	sbfx	x0, x0, #7, #4
    2e68:	ret
    2e6c:	ldrb	w0, [x0, #8]
    2e70:	sbfx	x0, x0, #0, #6
    2e74:	ret
    2e78:	ldrb	w0, [x0]
    2e7c:	sbfx	x0, x0, #0, #1
    2e80:	sxtb	w0, w0
    2e84:	ret
    2e88:	ldrb	w0, [x0, #6]
    2e8c:	sbfx	x0, x0, #2, #2
    2e90:	ret
    2e94:	ldr	w0, [x0, #4]
    2e98:	sbfx	x0, x0, #8, #9
    2e9c:	ret
    2ea0:	ldrb	w0, [x0, #1]
    2ea4:	sbfx	x0, x0, #2, #5
    2ea8:	ret
    2eac:	ldrh	w0, [x0, #2]
    2eb0:	sbfx	x0, x0, #5, #7
    2eb4:	ret

0000000000002eb8 <tf_b@@Base>:
    2eb8:	sxtb	w2, w0
    2ebc:	mov	w1, #0x5556                	// #21846
    2ec0:	movk	w1, #0x5555, lsl #16
    2ec4:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2ec8:	sxtb	x4, w0
    2ecc:	smull	x0, w2, w1
    2ed0:	ldr	x1, [x3, #4024]
    2ed4:	lsr	x0, x0, #32
    2ed8:	sub	w0, w0, w2, asr #31
    2edc:	str	x4, [x1]
    2ee0:	ret
    2ee4:	nop

0000000000002ee8 <tf_B@@Base>:
    2ee8:	and	w2, w0, #0xff
    2eec:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2ef0:	mov	w4, #0xaaab                	// #43691
    2ef4:	and	x3, x0, #0xff
    2ef8:	movk	w4, #0xaaaa, lsl #16
    2efc:	ldr	x1, [x1, #4032]
    2f00:	umull	x0, w2, w4
    2f04:	ubfx	x0, x0, #33, #8
    2f08:	str	x3, [x1]
    2f0c:	ret

0000000000002f10 <tf_h@@Base>:
    2f10:	sxth	w2, w0
    2f14:	mov	w1, #0x5556                	// #21846
    2f18:	movk	w1, #0x5555, lsl #16
    2f1c:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2f20:	sxth	x4, w0
    2f24:	smull	x0, w2, w1
    2f28:	ldr	x1, [x3, #4024]
    2f2c:	lsr	x0, x0, #32
    2f30:	sub	w0, w0, w2, asr #31
    2f34:	str	x4, [x1]
    2f38:	ret
    2f3c:	nop

0000000000002f40 <tf_H@@Base>:
    2f40:	and	w2, w0, #0xffff
    2f44:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2f48:	mov	w4, #0xaaab                	// #43691
    2f4c:	and	x3, x0, #0xffff
    2f50:	movk	w4, #0xaaaa, lsl #16
    2f54:	ldr	x1, [x1, #4032]
    2f58:	umull	x0, w2, w4
    2f5c:	ubfx	x0, x0, #33, #16
    2f60:	str	x3, [x1]
    2f64:	ret

0000000000002f68 <tf_i@@Base>:
    2f68:	mov	w1, #0x5556                	// #21846
    2f6c:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2f70:	movk	w1, #0x5555, lsl #16
    2f74:	sxtw	x3, w0
    2f78:	ldr	x2, [x2, #4024]
    2f7c:	smull	x1, w0, w1
    2f80:	lsr	x1, x1, #32
    2f84:	str	x3, [x2]
    2f88:	sub	w0, w1, w0, asr #31
    2f8c:	ret

0000000000002f90 <tf_I@@Base>:
    2f90:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2f94:	mov	w3, #0xaaab                	// #43691
    2f98:	movk	w3, #0xaaaa, lsl #16
    2f9c:	mov	w2, w0
    2fa0:	ldr	x1, [x1, #4032]
    2fa4:	umull	x0, w0, w3
    2fa8:	lsr	x0, x0, #33
    2fac:	str	x2, [x1]
    2fb0:	ret
    2fb4:	nop

0000000000002fb8 <tf_l@@Base>:
    2fb8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2fbc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    2fc0:	movk	x1, #0x5556
    2fc4:	ldr	x2, [x2, #4024]
    2fc8:	smulh	x1, x0, x1
    2fcc:	str	x0, [x2]
    2fd0:	sub	x0, x1, x0, asr #63
    2fd4:	ret

0000000000002fd8 <tf_L@@Base>:
    2fd8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2fdc:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2fe0:	movk	x1, #0xaaab
    2fe4:	ldr	x2, [x2, #4032]
    2fe8:	umulh	x1, x0, x1
    2fec:	str	x0, [x2]
    2ff0:	lsr	x0, x1, #1
    2ff4:	ret

0000000000002ff8 <tf_q@@Base>:
    2ff8:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    2ffc:	mov	x1, #0x5555555555555555    	// #6148914691236517205
    3000:	movk	x1, #0x5556
    3004:	ldr	x2, [x2, #4024]
    3008:	smulh	x1, x0, x1
    300c:	str	x0, [x2]
    3010:	sub	x0, x1, x0, asr #63
    3014:	ret

0000000000003018 <tf_Q@@Base>:
    3018:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    301c:	mov	x1, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3020:	movk	x1, #0xaaab
    3024:	ldr	x2, [x2, #4032]
    3028:	umulh	x1, x0, x1
    302c:	str	x0, [x2]
    3030:	lsr	x0, x1, #1
    3034:	ret

0000000000003038 <tf_f@@Base>:
    3038:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    303c:	fcvtzs	x1, s0
    3040:	fmov	s1, #3.000000000000000000e+00
    3044:	ldr	x0, [x0, #4024]
    3048:	fdiv	s0, s0, s1
    304c:	str	x1, [x0]
    3050:	ret
    3054:	nop

0000000000003058 <tf_d@@Base>:
    3058:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    305c:	fcvtzs	d1, d0
    3060:	fmov	d2, #3.000000000000000000e+00
    3064:	ldr	x0, [x0, #4024]
    3068:	fdiv	d0, d0, d2
    306c:	str	d1, [x0]
    3070:	ret
    3074:	nop

0000000000003078 <tf_D@@Base>:
    3078:	stp	x29, x30, [sp, #-48]!
    307c:	mov	x29, sp
    3080:	str	x19, [sp, #16]
    3084:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3088:	str	q0, [sp, #32]
    308c:	bl	5158 <PyInit__ctypes_test@@Base+0x1c40>
    3090:	ldr	x19, [x19, #4024]
    3094:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    3098:	add	x1, x1, #0x6d0
    309c:	ldr	q2, [sp, #32]
    30a0:	str	x0, [x19]
    30a4:	ldr	q1, [x1]
    30a8:	mov	v0.16b, v2.16b
    30ac:	bl	4050 <PyInit__ctypes_test@@Base+0xb38>
    30b0:	ldr	x19, [sp, #16]
    30b4:	ldp	x29, x30, [sp], #48
    30b8:	ret
    30bc:	nop

00000000000030c0 <tf_bb@@Base>:
    30c0:	sxtb	w0, w1
    30c4:	mov	w2, #0x5556                	// #21846
    30c8:	movk	w2, #0x5555, lsl #16
    30cc:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    30d0:	sxtb	x1, w1
    30d4:	smull	x2, w0, w2
    30d8:	ldr	x3, [x3, #4024]
    30dc:	lsr	x2, x2, #32
    30e0:	sub	w0, w2, w0, asr #31
    30e4:	str	x1, [x3]
    30e8:	ret
    30ec:	nop

00000000000030f0 <tf_bB@@Base>:
    30f0:	and	w0, w1, #0xff
    30f4:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    30f8:	mov	w3, #0xaaab                	// #43691
    30fc:	and	x1, x1, #0xff
    3100:	movk	w3, #0xaaaa, lsl #16
    3104:	ldr	x2, [x2, #4032]
    3108:	umull	x0, w0, w3
    310c:	ubfx	x0, x0, #33, #8
    3110:	str	x1, [x2]
    3114:	ret

0000000000003118 <tf_bh@@Base>:
    3118:	sxth	w0, w1
    311c:	mov	w2, #0x5556                	// #21846
    3120:	movk	w2, #0x5555, lsl #16
    3124:	adrp	x3, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3128:	sxth	x1, w1
    312c:	smull	x2, w0, w2
    3130:	ldr	x3, [x3, #4024]
    3134:	lsr	x2, x2, #32
    3138:	sub	w0, w2, w0, asr #31
    313c:	str	x1, [x3]
    3140:	ret
    3144:	nop

0000000000003148 <tf_bH@@Base>:
    3148:	and	w0, w1, #0xffff
    314c:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3150:	mov	w3, #0xaaab                	// #43691
    3154:	and	x1, x1, #0xffff
    3158:	movk	w3, #0xaaaa, lsl #16
    315c:	ldr	x2, [x2, #4032]
    3160:	umull	x0, w0, w3
    3164:	ubfx	x0, x0, #33, #16
    3168:	str	x1, [x2]
    316c:	ret

0000000000003170 <tf_bi@@Base>:
    3170:	mov	w0, #0x5556                	// #21846
    3174:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3178:	movk	w0, #0x5555, lsl #16
    317c:	sxtw	x3, w1
    3180:	ldr	x2, [x2, #4024]
    3184:	smull	x0, w1, w0
    3188:	lsr	x0, x0, #32
    318c:	str	x3, [x2]
    3190:	sub	w0, w0, w1, asr #31
    3194:	ret

0000000000003198 <tf_bI@@Base>:
    3198:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    319c:	mov	w0, #0xaaab                	// #43691
    31a0:	movk	w0, #0xaaaa, lsl #16
    31a4:	mov	w3, w1
    31a8:	ldr	x2, [x2, #4032]
    31ac:	umull	x0, w1, w0
    31b0:	lsr	x0, x0, #33
    31b4:	str	x3, [x2]
    31b8:	ret
    31bc:	nop

00000000000031c0 <tf_bl@@Base>:
    31c0:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    31c4:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    31c8:	movk	x0, #0x5556
    31cc:	ldr	x2, [x2, #4024]
    31d0:	smulh	x0, x1, x0
    31d4:	sub	x0, x0, x1, asr #63
    31d8:	str	x1, [x2]
    31dc:	ret

00000000000031e0 <tf_bL@@Base>:
    31e0:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    31e4:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    31e8:	movk	x0, #0xaaab
    31ec:	ldr	x2, [x2, #4032]
    31f0:	umulh	x0, x1, x0
    31f4:	lsr	x0, x0, #1
    31f8:	str	x1, [x2]
    31fc:	ret

0000000000003200 <tf_bq@@Base>:
    3200:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3204:	mov	x0, #0x5555555555555555    	// #6148914691236517205
    3208:	movk	x0, #0x5556
    320c:	ldr	x2, [x2, #4024]
    3210:	smulh	x0, x1, x0
    3214:	sub	x0, x0, x1, asr #63
    3218:	str	x1, [x2]
    321c:	ret

0000000000003220 <tf_bQ@@Base>:
    3220:	adrp	x2, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3224:	mov	x0, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3228:	movk	x0, #0xaaab
    322c:	ldr	x2, [x2, #4032]
    3230:	umulh	x0, x1, x0
    3234:	lsr	x0, x0, #1
    3238:	str	x1, [x2]
    323c:	ret

0000000000003240 <tf_bf@@Base>:
    3240:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3244:	fcvtzs	x1, s0
    3248:	fmov	s1, #3.000000000000000000e+00
    324c:	ldr	x0, [x0, #4024]
    3250:	fdiv	s0, s0, s1
    3254:	str	x1, [x0]
    3258:	ret
    325c:	nop

0000000000003260 <tf_bd@@Base>:
    3260:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3264:	fcvtzs	d1, d0
    3268:	fmov	d2, #3.000000000000000000e+00
    326c:	ldr	x0, [x0, #4024]
    3270:	fdiv	d0, d0, d2
    3274:	str	d1, [x0]
    3278:	ret
    327c:	nop

0000000000003280 <tf_bD@@Base>:
    3280:	stp	x29, x30, [sp, #-48]!
    3284:	mov	x29, sp
    3288:	str	x19, [sp, #16]
    328c:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    3290:	str	q0, [sp, #32]
    3294:	bl	5158 <PyInit__ctypes_test@@Base+0x1c40>
    3298:	ldr	x19, [x19, #4024]
    329c:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1ae8>
    32a0:	add	x1, x1, #0x6d0
    32a4:	ldr	q2, [sp, #32]
    32a8:	str	x0, [x19]
    32ac:	ldr	q1, [x1]
    32b0:	mov	v0.16b, v2.16b
    32b4:	bl	4050 <PyInit__ctypes_test@@Base+0xb38>
    32b8:	ldr	x19, [sp, #16]
    32bc:	ldp	x29, x30, [sp], #48
    32c0:	ret
    32c4:	nop

00000000000032c8 <tv_i@@Base>:
    32c8:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    32cc:	sxtw	x0, w0
    32d0:	ldr	x1, [x1, #4024]
    32d4:	str	x0, [x1]
    32d8:	ret
    32dc:	nop

00000000000032e0 <PointInRect@@Base>:
    32e0:	mov	x3, x0
    32e4:	ldr	x0, [x0]
    32e8:	cmp	x0, x1
    32ec:	b.gt	331c <PointInRect@@Base+0x3c>
    32f0:	ldr	x4, [x3, #16]
    32f4:	mov	w0, #0x0                   	// #0
    32f8:	cmp	x4, x1
    32fc:	b.lt	3318 <PointInRect@@Base+0x38>  // b.tstop
    3300:	ldr	x1, [x3, #8]
    3304:	cmp	x1, x2
    3308:	b.gt	3318 <PointInRect@@Base+0x38>
    330c:	ldr	x0, [x3, #24]
    3310:	cmp	x0, x2
    3314:	cset	w0, ge  // ge = tcont
    3318:	ret
    331c:	mov	w0, #0x0                   	// #0
    3320:	ret
    3324:	nop

0000000000003328 <ReturnRect@@Base>:
    3328:	adrp	x7, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    332c:	ldr	x13, [sp, #16]
    3330:	ldr	x11, [x7, #3968]
    3334:	ldr	x9, [x5]
    3338:	ldr	x12, [x1]
    333c:	ldr	x7, [x6]
    3340:	add	x10, x12, x9
    3344:	ldr	x14, [x13]
    3348:	ldr	x9, [x11]
    334c:	add	x7, x7, x14
    3350:	ldr	x11, [x2]
    3354:	add	x7, x7, x10
    3358:	add	x9, x9, x9, lsl #2
    335c:	add	x7, x7, x11
    3360:	cmp	x7, x9
    3364:	ldp	x11, x10, [sp]
    3368:	b.eq	3388 <ReturnRect@@Base+0x60>  // b.none
    336c:	mov	x0, #0x64                  	// #100
    3370:	str	x0, [x1]
    3374:	ldp	x2, x3, [x1, #16]
    3378:	stp	x2, x3, [x8, #16]
    337c:	ldp	x0, x1, [x1]
    3380:	stp	x0, x1, [x8]
    3384:	ret
    3388:	adrp	x7, 16000 <PyInit__ctypes_test@@Base+0x12ae8>
    338c:	ldr	x14, [x13, #16]
    3390:	ldr	x6, [x6, #16]
    3394:	ldr	x7, [x7, #3976]
    3398:	add	x6, x6, x14
    339c:	ldr	x9, [x5, #16]
    33a0:	ldr	x14, [x1, #16]
    33a4:	ldr	x7, [x7]
    33a8:	add	x9, x9, x14
    33ac:	ldr	x14, [x2, #16]
    33b0:	add	x2, x6, x9
    33b4:	add	x7, x7, x7, lsl #2
    33b8:	add	x2, x2, x14
    33bc:	cmp	x2, x7
    33c0:	b.eq	33e0 <ReturnRect@@Base+0xb8>  // b.none
    33c4:	mov	x0, #0x64                  	// #100
    33c8:	str	x0, [x1, #16]
    33cc:	ldp	x2, x3, [x1]
    33d0:	stp	x2, x3, [x8]
    33d4:	ldp	x0, x1, [x1, #16]
    33d8:	stp	x0, x1, [x8, #16]
    33dc:	ret
    33e0:	cmp	x3, x11
    33e4:	mov	x2, #0xffffffffffffff9c    	// #-100
    33e8:	csel	x12, x12, x2, eq  // eq = none
    33ec:	cmp	x4, x10
    33f0:	mov	x2, #0xffffffffffffff38    	// #-200
    33f4:	csel	x12, x12, x2, eq  // eq = none
    33f8:	cmp	w0, #0x1
    33fc:	b.eq	3434 <ReturnRect@@Base+0x10c>  // b.none
    3400:	cmp	w0, #0x2
    3404:	b.eq	3420 <ReturnRect@@Base+0xf8>  // b.none
    3408:	str	x12, [x1]
    340c:	ldp	x2, x3, [x1, #16]
    3410:	stp	x2, x3, [x8, #16]
    3414:	ldp	x0, x1, [x1]
    3418:	stp	x0, x1, [x8]
    341c:	ret
    3420:	ldp	x0, x1, [x13]
    3424:	stp	x0, x1, [x8]
    3428:	ldp	x0, x1, [x13, #16]
    342c:	stp	x0, x1, [x8, #16]
    3430:	ret
    3434:	ldp	x0, x1, [x5]
    3438:	stp	x0, x1, [x8]
    343c:	ldp	x0, x1, [x5, #16]
    3440:	stp	x0, x1, [x8, #16]
    3444:	ret

0000000000003448 <ret_2h_func@@Base>:
    3448:	mov	w1, w0
    344c:	mov	w3, #0x0                   	// #0
    3450:	sbfx	x0, x1, #16, #16
    3454:	lsl	w1, w1, #1
    3458:	ubfiz	w2, w0, #1, #15
    345c:	bfxil	w3, w1, #0, #16
    3460:	add	w1, w2, w0
    3464:	mov	w0, w3
    3468:	bfi	w0, w1, #16, #16
    346c:	ret

0000000000003470 <ret_8i_func@@Base>:
    3470:	ldp	w1, w9, [x0, #16]
    3474:	ldp	w7, w3, [x0]
    3478:	ldp	w6, w2, [x0, #8]
    347c:	add	w1, w1, w1, lsl #1
    3480:	ldp	w4, w0, [x0, #24]
    3484:	lsl	w5, w9, #3
    3488:	lsl	w7, w7, #1
    348c:	add	w3, w3, w3, lsl #1
    3490:	lsl	w6, w6, #2
    3494:	add	w2, w2, w2, lsl #2
    3498:	lsl	w1, w1, #1
    349c:	sub	w5, w5, w9
    34a0:	lsl	w4, w4, #3
    34a4:	add	w0, w0, w0, lsl #3
    34a8:	stp	w7, w3, [x8]
    34ac:	stp	w6, w2, [x8, #8]
    34b0:	stp	w1, w5, [x8, #16]
    34b4:	stp	w4, w0, [x8, #24]
    34b8:	ret
    34bc:	nop

00000000000034c0 <GetRectangle@@Base>:
    34c0:	cbz	w0, 34f0 <GetRectangle@@Base+0x30>
    34c4:	add	w5, w0, #0x1
    34c8:	add	w4, w0, #0x2
    34cc:	add	w3, w0, #0x3
    34d0:	sxtw	x2, w0
    34d4:	sxtw	x5, w5
    34d8:	sxtw	x4, w4
    34dc:	sxtw	x3, w3
    34e0:	mov	w0, #0x1                   	// #1
    34e4:	stp	x2, x5, [x1]
    34e8:	stp	x4, x3, [x1, #16]
    34ec:	ret
    34f0:	mov	w0, #0x0                   	// #0
    34f4:	ret

00000000000034f8 <TwoOutArgs@@Base>:
    34f8:	ldr	w4, [x1]
    34fc:	add	w4, w4, w0
    3500:	str	w4, [x1]
    3504:	ldr	w0, [x3]
    3508:	add	w0, w0, w2
    350c:	str	w0, [x3]
    3510:	ret
    3514:	nop

0000000000003518 <PyInit__ctypes_test@@Base>:
    3518:	adrp	x0, 17000 <PyInit__ctypes_test@@Base+0x13ae8>
    351c:	mov	w1, #0x3f5                 	// #1013
    3520:	add	x0, x0, #0x128
    3524:	b	2130 <PyModule_Create2@plt>
    3528:	stp	x29, x30, [sp, #-48]!
    352c:	mov	x29, sp
    3530:	str	q0, [sp, #16]
    3534:	str	q1, [sp, #32]
    3538:	ldp	x6, x1, [sp, #16]
    353c:	ldp	x0, x3, [sp, #32]
    3540:	mrs	x15, fpcr
    3544:	lsr	x7, x1, #63
    3548:	mov	x10, x0
    354c:	ubfiz	x4, x3, #3, #48
    3550:	lsr	x5, x3, #63
    3554:	mov	x12, x7
    3558:	ubfiz	x2, x1, #3, #48
    355c:	orr	x4, x4, x0, lsr #61
    3560:	ubfx	x8, x1, #48, #15
    3564:	ubfx	x0, x3, #48, #15
    3568:	and	w7, w7, #0xff
    356c:	mov	x16, x12
    3570:	cmp	x12, x5
    3574:	and	w11, w5, #0xff
    3578:	orr	x2, x2, x6, lsr #61
    357c:	mov	x1, x8
    3580:	lsl	x9, x6, #3
    3584:	mov	x3, x0
    3588:	lsl	x13, x10, #3
    358c:	b.eq	3738 <PyInit__ctypes_test@@Base+0x220>  // b.none
    3590:	sub	w0, w8, w0
    3594:	cmp	w0, #0x0
    3598:	b.le	36e4 <PyInit__ctypes_test@@Base+0x1cc>
    359c:	cbz	x3, 3798 <PyInit__ctypes_test@@Base+0x280>
    35a0:	orr	x4, x4, #0x8000000000000
    35a4:	mov	x3, #0x7fff                	// #32767
    35a8:	cmp	x1, x3
    35ac:	b.eq	399c <PyInit__ctypes_test@@Base+0x484>  // b.none
    35b0:	cmp	w0, #0x74
    35b4:	b.gt	3a20 <PyInit__ctypes_test@@Base+0x508>
    35b8:	cmp	w0, #0x3f
    35bc:	b.gt	3b80 <PyInit__ctypes_test@@Base+0x668>
    35c0:	mov	w3, #0x40                  	// #64
    35c4:	sub	w3, w3, w0
    35c8:	lsr	x6, x13, x0
    35cc:	lsl	x13, x13, x3
    35d0:	cmp	x13, #0x0
    35d4:	cset	x5, ne  // ne = any
    35d8:	lsl	x3, x4, x3
    35dc:	orr	x3, x3, x6
    35e0:	lsr	x0, x4, x0
    35e4:	orr	x3, x3, x5
    35e8:	sub	x2, x2, x0
    35ec:	subs	x9, x9, x3
    35f0:	sbc	x2, x2, xzr
    35f4:	and	x3, x2, #0x7ffffffffffff
    35f8:	tbz	x2, #51, 37d8 <PyInit__ctypes_test@@Base+0x2c0>
    35fc:	cbz	x3, 3a04 <PyInit__ctypes_test@@Base+0x4ec>
    3600:	clz	x0, x3
    3604:	sub	w0, w0, #0xc
    3608:	neg	w2, w0
    360c:	lsl	x4, x3, x0
    3610:	lsl	x3, x9, x0
    3614:	lsr	x9, x9, x2
    3618:	orr	x2, x9, x4
    361c:	cmp	x1, w0, sxtw
    3620:	sxtw	x4, w0
    3624:	b.gt	39e4 <PyInit__ctypes_test@@Base+0x4cc>
    3628:	sub	w1, w0, w1
    362c:	add	w0, w1, #0x1
    3630:	cmp	w0, #0x3f
    3634:	b.gt	3b48 <PyInit__ctypes_test@@Base+0x630>
    3638:	mov	w1, #0x40                  	// #64
    363c:	sub	w1, w1, w0
    3640:	lsr	x4, x3, x0
    3644:	lsl	x3, x3, x1
    3648:	cmp	x3, #0x0
    364c:	lsl	x9, x2, x1
    3650:	cset	x1, ne  // ne = any
    3654:	orr	x9, x9, x4
    3658:	lsr	x2, x2, x0
    365c:	orr	x9, x9, x1
    3660:	orr	x8, x9, x2
    3664:	cbz	x8, 37ec <PyInit__ctypes_test@@Base+0x2d4>
    3668:	and	x0, x9, #0x7
    366c:	mov	x1, #0x0                   	// #0
    3670:	mov	w5, #0x1                   	// #1
    3674:	cbz	x0, 3a30 <PyInit__ctypes_test@@Base+0x518>
    3678:	and	x3, x15, #0xc00000
    367c:	cmp	x3, #0x400, lsl #12
    3680:	b.eq	3974 <PyInit__ctypes_test@@Base+0x45c>  // b.none
    3684:	cmp	x3, #0x800, lsl #12
    3688:	b.eq	3954 <PyInit__ctypes_test@@Base+0x43c>  // b.none
    368c:	cbz	x3, 3980 <PyInit__ctypes_test@@Base+0x468>
    3690:	and	x3, x2, #0x8000000000000
    3694:	mov	w0, #0x10                  	// #16
    3698:	cbz	w5, 36a0 <PyInit__ctypes_test@@Base+0x188>
    369c:	orr	w0, w0, #0x8
    36a0:	cbz	x3, 39b8 <PyInit__ctypes_test@@Base+0x4a0>
    36a4:	add	x1, x1, #0x1
    36a8:	mov	x3, #0x7fff                	// #32767
    36ac:	cmp	x1, x3
    36b0:	b.eq	389c <PyInit__ctypes_test@@Base+0x384>  // b.none
    36b4:	and	w1, w1, #0x7fff
    36b8:	extr	x8, x2, x9, #3
    36bc:	ubfx	x2, x2, #3, #48
    36c0:	mov	x5, #0x0                   	// #0
    36c4:	orr	w1, w1, w7, lsl #15
    36c8:	bfxil	x5, x2, #0, #48
    36cc:	fmov	d0, x8
    36d0:	bfi	x5, x1, #48, #16
    36d4:	fmov	v0.d[1], x5
    36d8:	cbnz	w0, 38f8 <PyInit__ctypes_test@@Base+0x3e0>
    36dc:	ldp	x29, x30, [sp], #48
    36e0:	ret
    36e4:	mov	x14, x5
    36e8:	b.eq	3804 <PyInit__ctypes_test@@Base+0x2ec>  // b.none
    36ec:	cbnz	x8, 3a88 <PyInit__ctypes_test@@Base+0x570>
    36f0:	orr	x1, x2, x9
    36f4:	cbz	x1, 37b4 <PyInit__ctypes_test@@Base+0x29c>
    36f8:	cmn	w0, #0x1
    36fc:	b.eq	3ea4 <PyInit__ctypes_test@@Base+0x98c>  // b.none
    3700:	mov	x1, #0x7fff                	// #32767
    3704:	mvn	w0, w0
    3708:	cmp	x3, x1
    370c:	b.ne	3a9c <PyInit__ctypes_test@@Base+0x584>  // b.any
    3710:	orr	x0, x4, x13
    3714:	cbnz	x0, 3dfc <PyInit__ctypes_test@@Base+0x8e4>
    3718:	mov	x16, x14
    371c:	nop
    3720:	mov	x4, #0x0                   	// #0
    3724:	fmov	d0, x4
    3728:	lsl	x16, x16, #63
    372c:	orr	x5, x16, #0x7fff000000000000
    3730:	fmov	v0.d[1], x5
    3734:	b	36dc <PyInit__ctypes_test@@Base+0x1c4>
    3738:	sub	w5, w8, w0
    373c:	cmp	w5, #0x0
    3740:	b.le	390c <PyInit__ctypes_test@@Base+0x3f4>
    3744:	cbz	x0, 384c <PyInit__ctypes_test@@Base+0x334>
    3748:	orr	x4, x4, #0x8000000000000
    374c:	mov	x0, #0x7fff                	// #32767
    3750:	cmp	x1, x0
    3754:	b.eq	399c <PyInit__ctypes_test@@Base+0x484>  // b.none
    3758:	cmp	w5, #0x74
    375c:	b.gt	3b30 <PyInit__ctypes_test@@Base+0x618>
    3760:	cmp	w5, #0x3f
    3764:	b.gt	3c30 <PyInit__ctypes_test@@Base+0x718>
    3768:	mov	w0, #0x40                  	// #64
    376c:	sub	w0, w0, w5
    3770:	lsr	x6, x13, x5
    3774:	lsl	x13, x13, x0
    3778:	cmp	x13, #0x0
    377c:	lsl	x0, x4, x0
    3780:	cset	x3, ne  // ne = any
    3784:	orr	x0, x0, x6
    3788:	lsr	x4, x4, x5
    378c:	orr	x0, x0, x3
    3790:	add	x2, x2, x4
    3794:	b	3b3c <PyInit__ctypes_test@@Base+0x624>
    3798:	orr	x3, x4, x13
    379c:	cbz	x3, 3b0c <PyInit__ctypes_test@@Base+0x5f4>
    37a0:	subs	w0, w0, #0x1
    37a4:	b.ne	35a4 <PyInit__ctypes_test@@Base+0x8c>  // b.any
    37a8:	subs	x9, x9, x13
    37ac:	sbc	x2, x2, x4
    37b0:	b	35f4 <PyInit__ctypes_test@@Base+0xdc>
    37b4:	mov	x0, #0x7fff                	// #32767
    37b8:	cmp	x3, x0
    37bc:	b.eq	3ef0 <PyInit__ctypes_test@@Base+0x9d8>  // b.none
    37c0:	mov	w7, w11
    37c4:	mov	x2, x4
    37c8:	mov	x9, x13
    37cc:	mov	x1, x3
    37d0:	mov	x12, x5
    37d4:	nop
    37d8:	orr	x8, x9, x2
    37dc:	and	x0, x9, #0x7
    37e0:	mov	w5, #0x0                   	// #0
    37e4:	cbnz	x1, 3674 <PyInit__ctypes_test@@Base+0x15c>
    37e8:	cbnz	x8, 3668 <PyInit__ctypes_test@@Base+0x150>
    37ec:	mov	x2, #0x0                   	// #0
    37f0:	mov	x1, #0x0                   	// #0
    37f4:	mov	w0, #0x0                   	// #0
    37f8:	and	x2, x2, #0xffffffffffff
    37fc:	and	w1, w1, #0x7fff
    3800:	b	36c0 <PyInit__ctypes_test@@Base+0x1a8>
    3804:	add	x5, x8, #0x1
    3808:	tst	x5, #0x7ffe
    380c:	b.ne	3adc <PyInit__ctypes_test@@Base+0x5c4>  // b.any
    3810:	orr	x5, x2, x9
    3814:	orr	x8, x4, x13
    3818:	cbnz	x1, 3c9c <PyInit__ctypes_test@@Base+0x784>
    381c:	cbz	x5, 3d44 <PyInit__ctypes_test@@Base+0x82c>
    3820:	cbz	x8, 3d58 <PyInit__ctypes_test@@Base+0x840>
    3824:	subs	x5, x9, x13
    3828:	cmp	x9, x13
    382c:	sbc	x3, x2, x4
    3830:	tbz	x3, #51, 3f24 <PyInit__ctypes_test@@Base+0xa0c>
    3834:	subs	x9, x13, x9
    3838:	mov	w7, w11
    383c:	sbc	x2, x4, x2
    3840:	mov	x12, x14
    3844:	orr	x8, x9, x2
    3848:	b	3664 <PyInit__ctypes_test@@Base+0x14c>
    384c:	orr	x0, x4, x13
    3850:	cbz	x0, 3d24 <PyInit__ctypes_test@@Base+0x80c>
    3854:	subs	w5, w5, #0x1
    3858:	b.ne	374c <PyInit__ctypes_test@@Base+0x234>  // b.any
    385c:	adds	x9, x9, x13
    3860:	adc	x2, x4, x2
    3864:	nop
    3868:	tbz	x2, #51, 37d8 <PyInit__ctypes_test@@Base+0x2c0>
    386c:	add	x1, x1, #0x1
    3870:	mov	x0, #0x7fff                	// #32767
    3874:	cmp	x1, x0
    3878:	b.eq	3d64 <PyInit__ctypes_test@@Base+0x84c>  // b.none
    387c:	and	x0, x9, #0x1
    3880:	and	x3, x2, #0xfff7ffffffffffff
    3884:	orr	x9, x0, x9, lsr #1
    3888:	mov	w5, #0x0                   	// #0
    388c:	orr	x9, x9, x2, lsl #63
    3890:	lsr	x2, x3, #1
    3894:	and	x0, x9, #0x7
    3898:	b	3674 <PyInit__ctypes_test@@Base+0x15c>
    389c:	and	x3, x15, #0xc00000
    38a0:	cbz	x3, 38d8 <PyInit__ctypes_test@@Base+0x3c0>
    38a4:	cmp	x3, #0x400, lsl #12
    38a8:	b.eq	38d0 <PyInit__ctypes_test@@Base+0x3b8>  // b.none
    38ac:	cmp	x3, #0x800, lsl #12
    38b0:	csel	w12, w12, wzr, eq  // eq = none
    38b4:	cbnz	w12, 38d8 <PyInit__ctypes_test@@Base+0x3c0>
    38b8:	mov	w1, #0x14                  	// #20
    38bc:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
    38c0:	orr	w0, w0, w1
    38c4:	mov	x8, #0xffffffffffffffff    	// #-1
    38c8:	mov	x1, #0x7ffe                	// #32766
    38cc:	b	37f8 <PyInit__ctypes_test@@Base+0x2e0>
    38d0:	cbnz	x12, 38b8 <PyInit__ctypes_test@@Base+0x3a0>
    38d4:	nop
    38d8:	mov	w1, #0x14                  	// #20
    38dc:	and	x16, x7, #0xff
    38e0:	orr	w0, w0, w1
    38e4:	mov	x4, #0x0                   	// #0
    38e8:	fmov	d0, x4
    38ec:	lsl	x16, x16, #63
    38f0:	orr	x5, x16, #0x7fff000000000000
    38f4:	fmov	v0.d[1], x5
    38f8:	str	q0, [sp, #16]
    38fc:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    3900:	ldr	q0, [sp, #16]
    3904:	ldp	x29, x30, [sp], #48
    3908:	ret
    390c:	b.eq	3a4c <PyInit__ctypes_test@@Base+0x534>  // b.none
    3910:	cbnz	x8, 3bd0 <PyInit__ctypes_test@@Base+0x6b8>
    3914:	orr	x0, x2, x9
    3918:	cbz	x0, 3e3c <PyInit__ctypes_test@@Base+0x924>
    391c:	cmn	w5, #0x1
    3920:	b.eq	3f9c <PyInit__ctypes_test@@Base+0xa84>  // b.none
    3924:	mov	x0, #0x7fff                	// #32767
    3928:	mvn	w5, w5
    392c:	cmp	x3, x0
    3930:	b.ne	3be4 <PyInit__ctypes_test@@Base+0x6cc>  // b.any
    3934:	orr	x0, x4, x13
    3938:	cbz	x0, 3720 <PyInit__ctypes_test@@Base+0x208>
    393c:	lsr	x5, x4, #50
    3940:	mov	x9, x13
    3944:	eor	x5, x5, #0x1
    3948:	mov	x2, x4
    394c:	and	w5, w5, #0x1
    3950:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3954:	mov	w0, #0x10                  	// #16
    3958:	cbz	x12, 3964 <PyInit__ctypes_test@@Base+0x44c>
    395c:	adds	x9, x9, #0x8
    3960:	cinc	x2, x2, cs  // cs = hs, nlast
    3964:	and	x3, x2, #0x8000000000000
    3968:	cbz	w5, 36a0 <PyInit__ctypes_test@@Base+0x188>
    396c:	orr	w0, w0, #0x8
    3970:	b	36a0 <PyInit__ctypes_test@@Base+0x188>
    3974:	mov	w0, #0x10                  	// #16
    3978:	cbnz	x12, 3964 <PyInit__ctypes_test@@Base+0x44c>
    397c:	b	395c <PyInit__ctypes_test@@Base+0x444>
    3980:	and	x3, x9, #0xf
    3984:	mov	w0, #0x10                  	// #16
    3988:	cmp	x3, #0x4
    398c:	b.eq	3964 <PyInit__ctypes_test@@Base+0x44c>  // b.none
    3990:	adds	x9, x9, #0x4
    3994:	cinc	x2, x2, cs  // cs = hs, nlast
    3998:	b	3964 <PyInit__ctypes_test@@Base+0x44c>
    399c:	orr	x0, x2, x9
    39a0:	cbz	x0, 3720 <PyInit__ctypes_test@@Base+0x208>
    39a4:	lsr	x5, x2, #50
    39a8:	eor	x5, x5, #0x1
    39ac:	and	w5, w5, #0x1
    39b0:	mov	w0, w5
    39b4:	mov	x1, #0x7fff                	// #32767
    39b8:	mov	x3, #0x7fff                	// #32767
    39bc:	extr	x8, x2, x9, #3
    39c0:	cmp	x1, x3
    39c4:	lsr	x2, x2, #3
    39c8:	b.ne	37f8 <PyInit__ctypes_test@@Base+0x2e0>  // b.any
    39cc:	orr	x1, x8, x2
    39d0:	cbz	x1, 403c <PyInit__ctypes_test@@Base+0xb24>
    39d4:	orr	x2, x2, #0x800000000000
    39d8:	mov	w1, #0x7fff                	// #32767
    39dc:	and	x2, x2, #0xffffffffffff
    39e0:	b	36c0 <PyInit__ctypes_test@@Base+0x1a8>
    39e4:	mov	x9, x3
    39e8:	and	x2, x2, #0xfff7ffffffffffff
    39ec:	sub	x1, x1, x4
    39f0:	orr	x8, x9, x2
    39f4:	and	x0, x9, #0x7
    39f8:	mov	w5, #0x0                   	// #0
    39fc:	cbz	x1, 37e8 <PyInit__ctypes_test@@Base+0x2d0>
    3a00:	b	3674 <PyInit__ctypes_test@@Base+0x15c>
    3a04:	clz	x2, x9
    3a08:	add	w0, w2, #0x34
    3a0c:	cmp	w0, #0x3f
    3a10:	b.le	3608 <PyInit__ctypes_test@@Base+0xf0>
    3a14:	sub	w2, w2, #0xc
    3a18:	lsl	x2, x9, x2
    3a1c:	b	361c <PyInit__ctypes_test@@Base+0x104>
    3a20:	orr	x4, x4, x13
    3a24:	cmp	x4, #0x0
    3a28:	cset	x3, ne  // ne = any
    3a2c:	b	35ec <PyInit__ctypes_test@@Base+0xd4>
    3a30:	and	x3, x2, #0x8000000000000
    3a34:	mov	w0, #0x0                   	// #0
    3a38:	cbz	w5, 36a0 <PyInit__ctypes_test@@Base+0x188>
    3a3c:	mov	w0, #0x0                   	// #0
    3a40:	tbz	w15, #11, 36a0 <PyInit__ctypes_test@@Base+0x188>
    3a44:	orr	w0, w0, #0x8
    3a48:	b	36a0 <PyInit__ctypes_test@@Base+0x188>
    3a4c:	add	x0, x8, #0x1
    3a50:	tst	x0, #0x7ffe
    3a54:	b.ne	3c5c <PyInit__ctypes_test@@Base+0x744>  // b.any
    3a58:	orr	x0, x2, x9
    3a5c:	cbnz	x8, 3e18 <PyInit__ctypes_test@@Base+0x900>
    3a60:	orr	x8, x4, x13
    3a64:	cbz	x0, 3e6c <PyInit__ctypes_test@@Base+0x954>
    3a68:	cbz	x8, 3d58 <PyInit__ctypes_test@@Base+0x840>
    3a6c:	adds	x9, x9, x13
    3a70:	adc	x2, x4, x2
    3a74:	tbz	x2, #51, 3844 <PyInit__ctypes_test@@Base+0x32c>
    3a78:	and	x2, x2, #0xfff7ffffffffffff
    3a7c:	and	x0, x9, #0x7
    3a80:	mov	x1, #0x1                   	// #1
    3a84:	b	3674 <PyInit__ctypes_test@@Base+0x15c>
    3a88:	mov	x1, #0x7fff                	// #32767
    3a8c:	neg	w0, w0
    3a90:	orr	x2, x2, #0x8000000000000
    3a94:	cmp	x3, x1
    3a98:	b.eq	3710 <PyInit__ctypes_test@@Base+0x1f8>  // b.none
    3a9c:	cmp	w0, #0x74
    3aa0:	b.gt	3bac <PyInit__ctypes_test@@Base+0x694>
    3aa4:	cmp	w0, #0x3f
    3aa8:	b.gt	3dc8 <PyInit__ctypes_test@@Base+0x8b0>
    3aac:	mov	w1, #0x40                  	// #64
    3ab0:	sub	w1, w1, w0
    3ab4:	lsr	x5, x9, x0
    3ab8:	lsl	x9, x9, x1
    3abc:	cmp	x9, #0x0
    3ac0:	lsl	x9, x2, x1
    3ac4:	cset	x1, ne  // ne = any
    3ac8:	orr	x9, x9, x5
    3acc:	lsr	x0, x2, x0
    3ad0:	orr	x9, x9, x1
    3ad4:	sub	x4, x4, x0
    3ad8:	b	3bb8 <PyInit__ctypes_test@@Base+0x6a0>
    3adc:	subs	x5, x9, x13
    3ae0:	cmp	x9, x13
    3ae4:	sbc	x3, x2, x4
    3ae8:	tbnz	x3, #51, 3c84 <PyInit__ctypes_test@@Base+0x76c>
    3aec:	orr	x8, x5, x3
    3af0:	cbnz	x8, 3db0 <PyInit__ctypes_test@@Base+0x898>
    3af4:	and	x15, x15, #0xc00000
    3af8:	mov	x2, #0x0                   	// #0
    3afc:	cmp	x15, #0x800, lsl #12
    3b00:	mov	x1, #0x0                   	// #0
    3b04:	cset	w7, eq  // eq = none
    3b08:	b	37f8 <PyInit__ctypes_test@@Base+0x2e0>
    3b0c:	mov	x0, #0x7fff                	// #32767
    3b10:	cmp	x8, x0
    3b14:	b.ne	37d8 <PyInit__ctypes_test@@Base+0x2c0>  // b.any
    3b18:	orr	x0, x2, x9
    3b1c:	cbnz	x0, 39a4 <PyInit__ctypes_test@@Base+0x48c>
    3b20:	mov	x2, #0x0                   	// #0
    3b24:	mov	x8, #0x0                   	// #0
    3b28:	mov	w0, #0x0                   	// #0
    3b2c:	b	39cc <PyInit__ctypes_test@@Base+0x4b4>
    3b30:	orr	x4, x4, x13
    3b34:	cmp	x4, #0x0
    3b38:	cset	x0, ne  // ne = any
    3b3c:	adds	x9, x0, x9
    3b40:	cinc	x2, x2, cs  // cs = hs, nlast
    3b44:	b	3868 <PyInit__ctypes_test@@Base+0x350>
    3b48:	mov	w4, #0x80                  	// #128
    3b4c:	sub	w4, w4, w0
    3b50:	cmp	w0, #0x40
    3b54:	sub	w9, w1, #0x3f
    3b58:	lsl	x0, x2, x4
    3b5c:	orr	x0, x3, x0
    3b60:	csel	x3, x0, x3, ne  // ne = any
    3b64:	lsr	x9, x2, x9
    3b68:	cmp	x3, #0x0
    3b6c:	mov	x2, #0x0                   	// #0
    3b70:	cset	x0, ne  // ne = any
    3b74:	orr	x9, x0, x9
    3b78:	mov	x8, x9
    3b7c:	b	3664 <PyInit__ctypes_test@@Base+0x14c>
    3b80:	mov	w5, #0x80                  	// #128
    3b84:	sub	w5, w5, w0
    3b88:	subs	w0, w0, #0x40
    3b8c:	lsl	x5, x4, x5
    3b90:	orr	x5, x13, x5
    3b94:	csel	x13, x5, x13, ne  // ne = any
    3b98:	lsr	x4, x4, x0
    3b9c:	cmp	x13, #0x0
    3ba0:	cset	x3, ne  // ne = any
    3ba4:	orr	x3, x3, x4
    3ba8:	b	35ec <PyInit__ctypes_test@@Base+0xd4>
    3bac:	orr	x2, x2, x9
    3bb0:	cmp	x2, #0x0
    3bb4:	cset	x9, ne  // ne = any
    3bb8:	subs	x9, x13, x9
    3bbc:	mov	w7, w11
    3bc0:	sbc	x2, x4, xzr
    3bc4:	mov	x1, x3
    3bc8:	mov	x12, x14
    3bcc:	b	35f4 <PyInit__ctypes_test@@Base+0xdc>
    3bd0:	mov	x0, #0x7fff                	// #32767
    3bd4:	neg	w5, w5
    3bd8:	orr	x2, x2, #0x8000000000000
    3bdc:	cmp	x3, x0
    3be0:	b.eq	3934 <PyInit__ctypes_test@@Base+0x41c>  // b.none
    3be4:	cmp	w5, #0x74
    3be8:	b.gt	3db8 <PyInit__ctypes_test@@Base+0x8a0>
    3bec:	cmp	w5, #0x3f
    3bf0:	b.gt	3e78 <PyInit__ctypes_test@@Base+0x960>
    3bf4:	mov	w1, #0x40                  	// #64
    3bf8:	sub	w1, w1, w5
    3bfc:	lsr	x6, x9, x5
    3c00:	lsl	x9, x9, x1
    3c04:	cmp	x9, #0x0
    3c08:	cset	x0, ne  // ne = any
    3c0c:	lsl	x9, x2, x1
    3c10:	orr	x9, x9, x6
    3c14:	lsr	x5, x2, x5
    3c18:	orr	x9, x9, x0
    3c1c:	add	x4, x4, x5
    3c20:	adds	x9, x9, x13
    3c24:	mov	x1, x3
    3c28:	cinc	x2, x4, cs  // cs = hs, nlast
    3c2c:	b	3868 <PyInit__ctypes_test@@Base+0x350>
    3c30:	mov	w0, #0x80                  	// #128
    3c34:	sub	w0, w0, w5
    3c38:	subs	w5, w5, #0x40
    3c3c:	lsl	x0, x4, x0
    3c40:	orr	x0, x13, x0
    3c44:	csel	x13, x0, x13, ne  // ne = any
    3c48:	lsr	x4, x4, x5
    3c4c:	cmp	x13, #0x0
    3c50:	cset	x0, ne  // ne = any
    3c54:	orr	x0, x0, x4
    3c58:	b	3b3c <PyInit__ctypes_test@@Base+0x624>
    3c5c:	mov	x1, #0x7fff                	// #32767
    3c60:	cmp	x0, x1
    3c64:	b.eq	3ec0 <PyInit__ctypes_test@@Base+0x9a8>  // b.none
    3c68:	adds	x9, x9, x13
    3c6c:	mov	x1, x0
    3c70:	adc	x2, x4, x2
    3c74:	ubfx	x0, x9, #1, #3
    3c78:	extr	x9, x2, x9, #1
    3c7c:	lsr	x2, x2, #1
    3c80:	b	3674 <PyInit__ctypes_test@@Base+0x15c>
    3c84:	cmp	x13, x9
    3c88:	mov	w7, w11
    3c8c:	sbc	x3, x4, x2
    3c90:	sub	x9, x13, x9
    3c94:	mov	x12, x14
    3c98:	b	35fc <PyInit__ctypes_test@@Base+0xe4>
    3c9c:	mov	x12, #0x7fff                	// #32767
    3ca0:	cmp	x1, x12
    3ca4:	b.eq	3cd0 <PyInit__ctypes_test@@Base+0x7b8>  // b.none
    3ca8:	cmp	x3, x12
    3cac:	b.eq	3f00 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3cb0:	cbnz	x5, 3ce8 <PyInit__ctypes_test@@Base+0x7d0>
    3cb4:	mov	w5, w0
    3cb8:	cbnz	x8, 3fe0 <PyInit__ctypes_test@@Base+0xac8>
    3cbc:	mov	w7, #0x0                   	// #0
    3cc0:	mov	x2, #0xffffffffffff        	// #281474976710655
    3cc4:	mov	w0, #0x1                   	// #1
    3cc8:	mov	x8, #0xffffffffffffffff    	// #-1
    3ccc:	b	39d4 <PyInit__ctypes_test@@Base+0x4bc>
    3cd0:	cbz	x5, 3ffc <PyInit__ctypes_test@@Base+0xae4>
    3cd4:	lsr	x0, x2, #50
    3cd8:	cmp	x3, x1
    3cdc:	eor	x0, x0, #0x1
    3ce0:	and	w0, w0, #0x1
    3ce4:	b.eq	3f00 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    3ce8:	cbz	x8, 3f1c <PyInit__ctypes_test@@Base+0xa04>
    3cec:	bfi	x6, x2, #61, #3
    3cf0:	lsr	x3, x2, #3
    3cf4:	tbz	x2, #50, 3d10 <PyInit__ctypes_test@@Base+0x7f8>
    3cf8:	lsr	x1, x4, #3
    3cfc:	tbnz	x4, #50, 3d10 <PyInit__ctypes_test@@Base+0x7f8>
    3d00:	mov	x6, x10
    3d04:	mov	w7, w11
    3d08:	bfi	x6, x4, #61, #3
    3d0c:	mov	x3, x1
    3d10:	extr	x2, x3, x6, #61
    3d14:	bfi	x6, x2, #61, #3
    3d18:	lsr	x2, x2, #3
    3d1c:	mov	x8, x6
    3d20:	b	39cc <PyInit__ctypes_test@@Base+0x4b4>
    3d24:	mov	x0, #0x7fff                	// #32767
    3d28:	cmp	x8, x0
    3d2c:	b.ne	37d8 <PyInit__ctypes_test@@Base+0x2c0>  // b.any
    3d30:	orr	x0, x2, x9
    3d34:	cbz	x0, 3b20 <PyInit__ctypes_test@@Base+0x608>
    3d38:	lsr	x5, x2, #50
    3d3c:	eor	w5, w5, #0x1
    3d40:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3d44:	cbz	x8, 3e58 <PyInit__ctypes_test@@Base+0x940>
    3d48:	mov	w7, w11
    3d4c:	mov	x2, x4
    3d50:	mov	x9, x13
    3d54:	mov	x12, x14
    3d58:	mov	x1, #0x0                   	// #0
    3d5c:	mov	x3, #0x0                   	// #0
    3d60:	b	3a3c <PyInit__ctypes_test@@Base+0x524>
    3d64:	ands	x3, x15, #0xc00000
    3d68:	b.eq	3df4 <PyInit__ctypes_test@@Base+0x8dc>  // b.none
    3d6c:	cmp	x3, #0x400, lsl #12
    3d70:	eor	w0, w7, #0x1
    3d74:	cset	w1, eq  // eq = none
    3d78:	tst	w1, w0
    3d7c:	b.ne	4018 <PyInit__ctypes_test@@Base+0xb00>  // b.any
    3d80:	cmp	x3, #0x800, lsl #12
    3d84:	b.eq	3fc4 <PyInit__ctypes_test@@Base+0xaac>  // b.none
    3d88:	cmp	x3, #0x400, lsl #12
    3d8c:	mov	w0, #0x14                  	// #20
    3d90:	b.ne	38a0 <PyInit__ctypes_test@@Base+0x388>  // b.any
    3d94:	mov	x2, #0xffffffffffffffff    	// #-1
    3d98:	mov	x1, #0x7ffe                	// #32766
    3d9c:	mov	x9, x2
    3da0:	mov	w5, #0x0                   	// #0
    3da4:	mov	w0, #0x14                  	// #20
    3da8:	cbnz	x12, 3964 <PyInit__ctypes_test@@Base+0x44c>
    3dac:	b	395c <PyInit__ctypes_test@@Base+0x444>
    3db0:	mov	x9, x5
    3db4:	b	35fc <PyInit__ctypes_test@@Base+0xe4>
    3db8:	orr	x2, x2, x9
    3dbc:	cmp	x2, #0x0
    3dc0:	cset	x9, ne  // ne = any
    3dc4:	b	3c20 <PyInit__ctypes_test@@Base+0x708>
    3dc8:	mov	w1, #0x80                  	// #128
    3dcc:	sub	w1, w1, w0
    3dd0:	subs	w0, w0, #0x40
    3dd4:	lsl	x1, x2, x1
    3dd8:	orr	x1, x9, x1
    3ddc:	csel	x9, x1, x9, ne  // ne = any
    3de0:	lsr	x2, x2, x0
    3de4:	cmp	x9, #0x0
    3de8:	cset	x9, ne  // ne = any
    3dec:	orr	x9, x9, x2
    3df0:	b	3bb8 <PyInit__ctypes_test@@Base+0x6a0>
    3df4:	mov	w0, #0x14                  	// #20
    3df8:	b	38e4 <PyInit__ctypes_test@@Base+0x3cc>
    3dfc:	lsr	x5, x4, #50
    3e00:	mov	w7, w11
    3e04:	eor	x5, x5, #0x1
    3e08:	mov	x9, x13
    3e0c:	and	w5, w5, #0x1
    3e10:	mov	x2, x4
    3e14:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3e18:	mov	x8, #0x7fff                	// #32767
    3e1c:	cmp	x1, x8
    3e20:	b.eq	3f40 <PyInit__ctypes_test@@Base+0xa28>  // b.none
    3e24:	cmp	x3, x8
    3e28:	b.eq	3fb4 <PyInit__ctypes_test@@Base+0xa9c>  // b.none
    3e2c:	cbnz	x0, 3f58 <PyInit__ctypes_test@@Base+0xa40>
    3e30:	mov	x2, x4
    3e34:	mov	x9, x13
    3e38:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3e3c:	mov	x0, #0x7fff                	// #32767
    3e40:	cmp	x3, x0
    3e44:	b.eq	3ff0 <PyInit__ctypes_test@@Base+0xad8>  // b.none
    3e48:	mov	x2, x4
    3e4c:	mov	x9, x13
    3e50:	mov	x1, x3
    3e54:	b	37d8 <PyInit__ctypes_test@@Base+0x2c0>
    3e58:	and	x15, x15, #0xc00000
    3e5c:	mov	x2, #0x0                   	// #0
    3e60:	cmp	x15, #0x800, lsl #12
    3e64:	cset	w7, eq  // eq = none
    3e68:	b	37f8 <PyInit__ctypes_test@@Base+0x2e0>
    3e6c:	mov	x2, x4
    3e70:	mov	x9, x13
    3e74:	b	3664 <PyInit__ctypes_test@@Base+0x14c>
    3e78:	mov	w0, #0x80                  	// #128
    3e7c:	sub	w0, w0, w5
    3e80:	subs	w5, w5, #0x40
    3e84:	lsl	x0, x2, x0
    3e88:	orr	x0, x9, x0
    3e8c:	csel	x9, x0, x9, ne  // ne = any
    3e90:	lsr	x2, x2, x5
    3e94:	cmp	x9, #0x0
    3e98:	cset	x9, ne  // ne = any
    3e9c:	orr	x9, x9, x2
    3ea0:	b	3c20 <PyInit__ctypes_test@@Base+0x708>
    3ea4:	cmp	x13, x9
    3ea8:	mov	w7, w11
    3eac:	sbc	x2, x4, x2
    3eb0:	sub	x9, x13, x9
    3eb4:	mov	x1, x3
    3eb8:	mov	x12, x5
    3ebc:	b	35f4 <PyInit__ctypes_test@@Base+0xdc>
    3ec0:	ands	x3, x15, #0xc00000
    3ec4:	b.eq	3df4 <PyInit__ctypes_test@@Base+0x8dc>  // b.none
    3ec8:	cmp	x3, #0x400, lsl #12
    3ecc:	eor	w0, w7, #0x1
    3ed0:	csel	w0, w0, wzr, eq  // eq = none
    3ed4:	cbnz	w0, 4018 <PyInit__ctypes_test@@Base+0xb00>
    3ed8:	cmp	x3, #0x800, lsl #12
    3edc:	b.ne	3d88 <PyInit__ctypes_test@@Base+0x870>  // b.any
    3ee0:	cbz	x12, 3fc8 <PyInit__ctypes_test@@Base+0xab0>
    3ee4:	mov	w0, #0x14                  	// #20
    3ee8:	mov	x16, #0x1                   	// #1
    3eec:	b	38e4 <PyInit__ctypes_test@@Base+0x3cc>
    3ef0:	orr	x0, x4, x13
    3ef4:	cbnz	x0, 3dfc <PyInit__ctypes_test@@Base+0x8e4>
    3ef8:	mov	w7, w11
    3efc:	b	3b20 <PyInit__ctypes_test@@Base+0x608>
    3f00:	cbz	x8, 400c <PyInit__ctypes_test@@Base+0xaf4>
    3f04:	tst	x4, #0x4000000000000
    3f08:	csinc	w0, w0, wzr, ne  // ne = any
    3f0c:	cbnz	x5, 3cec <PyInit__ctypes_test@@Base+0x7d4>
    3f10:	mov	w7, w11
    3f14:	mov	x2, x4
    3f18:	mov	x9, x13
    3f1c:	mov	w5, w0
    3f20:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3f24:	orr	x8, x5, x3
    3f28:	cbz	x8, 3e58 <PyInit__ctypes_test@@Base+0x940>
    3f2c:	and	x0, x5, #0x7
    3f30:	mov	x9, x5
    3f34:	mov	x2, x3
    3f38:	mov	w5, #0x1                   	// #1
    3f3c:	b	3674 <PyInit__ctypes_test@@Base+0x15c>
    3f40:	cbz	x0, 3fac <PyInit__ctypes_test@@Base+0xa94>
    3f44:	lsr	x5, x2, #50
    3f48:	cmp	x3, x1
    3f4c:	eor	x5, x5, #0x1
    3f50:	and	w5, w5, #0x1
    3f54:	b.eq	4024 <PyInit__ctypes_test@@Base+0xb0c>  // b.none
    3f58:	orr	x13, x4, x13
    3f5c:	cbz	x13, 39b0 <PyInit__ctypes_test@@Base+0x498>
    3f60:	bfi	x6, x2, #61, #3
    3f64:	lsr	x0, x2, #3
    3f68:	tbz	x2, #50, 3f84 <PyInit__ctypes_test@@Base+0xa6c>
    3f6c:	lsr	x1, x4, #3
    3f70:	tbnz	x4, #50, 3f84 <PyInit__ctypes_test@@Base+0xa6c>
    3f74:	and	x6, x10, #0x1fffffffffffffff
    3f78:	mov	w7, w11
    3f7c:	orr	x6, x6, x4, lsl #61
    3f80:	mov	x0, x1
    3f84:	extr	x2, x0, x6, #61
    3f88:	mov	w0, w5
    3f8c:	bfi	x6, x2, #61, #3
    3f90:	lsr	x2, x2, #3
    3f94:	mov	x8, x6
    3f98:	b	39cc <PyInit__ctypes_test@@Base+0x4b4>
    3f9c:	adds	x9, x9, x13
    3fa0:	mov	x1, x3
    3fa4:	adc	x2, x4, x2
    3fa8:	b	3868 <PyInit__ctypes_test@@Base+0x350>
    3fac:	cmp	x3, x1
    3fb0:	b.ne	3e30 <PyInit__ctypes_test@@Base+0x918>  // b.any
    3fb4:	orr	x1, x4, x13
    3fb8:	cbnz	x1, 402c <PyInit__ctypes_test@@Base+0xb14>
    3fbc:	cbz	x0, 3b20 <PyInit__ctypes_test@@Base+0x608>
    3fc0:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3fc4:	cbnz	x16, 3ee4 <PyInit__ctypes_test@@Base+0x9cc>
    3fc8:	mov	x2, #0xffffffffffffffff    	// #-1
    3fcc:	mov	w7, #0x0                   	// #0
    3fd0:	mov	x9, x2
    3fd4:	mov	x1, #0x7ffe                	// #32766
    3fd8:	mov	w0, #0x14                  	// #20
    3fdc:	b	36a4 <PyInit__ctypes_test@@Base+0x18c>
    3fe0:	mov	w7, w11
    3fe4:	mov	x2, x4
    3fe8:	mov	x9, x13
    3fec:	b	39b0 <PyInit__ctypes_test@@Base+0x498>
    3ff0:	orr	x0, x4, x13
    3ff4:	cbz	x0, 3b20 <PyInit__ctypes_test@@Base+0x608>
    3ff8:	b	393c <PyInit__ctypes_test@@Base+0x424>
    3ffc:	cmp	x3, x1
    4000:	b.eq	3f00 <PyInit__ctypes_test@@Base+0x9e8>  // b.none
    4004:	mov	w5, #0x0                   	// #0
    4008:	b	3cb8 <PyInit__ctypes_test@@Base+0x7a0>
    400c:	cbnz	x5, 3f1c <PyInit__ctypes_test@@Base+0xa04>
    4010:	mov	w5, w0
    4014:	b	3cb8 <PyInit__ctypes_test@@Base+0x7a0>
    4018:	mov	w0, #0x14                  	// #20
    401c:	mov	x16, #0x0                   	// #0
    4020:	b	38e4 <PyInit__ctypes_test@@Base+0x3cc>
    4024:	orr	x1, x4, x13
    4028:	cbz	x1, 39b0 <PyInit__ctypes_test@@Base+0x498>
    402c:	tst	x4, #0x4000000000000
    4030:	csinc	w5, w5, wzr, ne  // ne = any
    4034:	cbnz	x0, 3f60 <PyInit__ctypes_test@@Base+0xa48>
    4038:	b	3e30 <PyInit__ctypes_test@@Base+0x918>
    403c:	mov	x8, #0x0                   	// #0
    4040:	mov	w1, #0x7fff                	// #32767
    4044:	mov	x2, #0x0                   	// #0
    4048:	b	36c0 <PyInit__ctypes_test@@Base+0x1a8>
    404c:	nop
    4050:	stp	x29, x30, [sp, #-48]!
    4054:	mov	x29, sp
    4058:	str	q0, [sp, #16]
    405c:	str	q1, [sp, #32]
    4060:	ldp	x2, x0, [sp, #16]
    4064:	ldp	x5, x3, [sp, #32]
    4068:	mrs	x10, fpcr
    406c:	lsr	x1, x0, #63
    4070:	ubfx	x6, x0, #0, #48
    4074:	and	w13, w1, #0xff
    4078:	mov	x14, x1
    407c:	ubfx	x7, x0, #48, #15
    4080:	cbz	w7, 44a0 <PyInit__ctypes_test@@Base+0xf88>
    4084:	mov	w4, #0x7fff                	// #32767
    4088:	cmp	w7, w4
    408c:	b.eq	44e8 <PyInit__ctypes_test@@Base+0xfd0>  // b.none
    4090:	and	x7, x7, #0xffff
    4094:	extr	x6, x6, x2, #61
    4098:	mov	x15, #0xffffffffffffc001    	// #-16383
    409c:	orr	x4, x6, #0x8000000000000
    40a0:	add	x7, x7, x15
    40a4:	lsl	x2, x2, #3
    40a8:	mov	x1, #0x0                   	// #0
    40ac:	mov	x16, #0x0                   	// #0
    40b0:	mov	w0, #0x0                   	// #0
    40b4:	lsr	x8, x3, #63
    40b8:	ubfx	x6, x3, #0, #48
    40bc:	and	w15, w8, #0xff
    40c0:	ubfx	x9, x3, #48, #15
    40c4:	cbz	w9, 445c <PyInit__ctypes_test@@Base+0xf44>
    40c8:	mov	w11, #0x7fff                	// #32767
    40cc:	cmp	w9, w11
    40d0:	b.eq	4194 <PyInit__ctypes_test@@Base+0xc7c>  // b.none
    40d4:	and	x9, x9, #0xffff
    40d8:	extr	x6, x6, x5, #61
    40dc:	mov	x12, #0xffffffffffffc001    	// #-16383
    40e0:	orr	x6, x6, #0x8000000000000
    40e4:	add	x9, x9, x12
    40e8:	lsl	x5, x5, #3
    40ec:	sub	x7, x7, x9
    40f0:	mov	x9, #0x0                   	// #0
    40f4:	eor	w11, w13, w15
    40f8:	cmp	x1, #0x9
    40fc:	and	x3, x11, #0xff
    4100:	mov	x12, x3
    4104:	b.gt	4434 <PyInit__ctypes_test@@Base+0xf1c>
    4108:	cmp	x1, #0x7
    410c:	b.gt	45f4 <PyInit__ctypes_test@@Base+0x10dc>
    4110:	cmp	x1, #0x3
    4114:	b.eq	4130 <PyInit__ctypes_test@@Base+0xc18>  // b.none
    4118:	b.le	4404 <PyInit__ctypes_test@@Base+0xeec>
    411c:	cmp	x1, #0x5
    4120:	b.eq	4444 <PyInit__ctypes_test@@Base+0xf2c>  // b.none
    4124:	b.le	4228 <PyInit__ctypes_test@@Base+0xd10>
    4128:	cmp	x1, #0x6
    412c:	b.eq	41f8 <PyInit__ctypes_test@@Base+0xce0>  // b.none
    4130:	cmp	x9, #0x1
    4134:	b.eq	4578 <PyInit__ctypes_test@@Base+0x1060>  // b.none
    4138:	cbz	x9, 414c <PyInit__ctypes_test@@Base+0xc34>
    413c:	cmp	x9, #0x2
    4140:	b.eq	477c <PyInit__ctypes_test@@Base+0x1264>  // b.none
    4144:	cmp	x9, #0x3
    4148:	b.eq	4764 <PyInit__ctypes_test@@Base+0x124c>  // b.none
    414c:	mov	x1, #0x3fff                	// #16383
    4150:	mov	x12, x8
    4154:	add	x3, x7, x1
    4158:	cmp	x3, #0x0
    415c:	b.le	4638 <PyInit__ctypes_test@@Base+0x1120>
    4160:	tst	x5, #0x7
    4164:	b.ne	45a8 <PyInit__ctypes_test@@Base+0x1090>  // b.any
    4168:	and	w11, w12, #0x1
    416c:	tbz	x6, #52, 4178 <PyInit__ctypes_test@@Base+0xc60>
    4170:	and	x6, x6, #0xffefffffffffffff
    4174:	add	x3, x7, #0x4, lsl #12
    4178:	mov	x1, #0x7ffe                	// #32766
    417c:	cmp	x3, x1
    4180:	b.gt	4720 <PyInit__ctypes_test@@Base+0x1208>
    4184:	and	w1, w3, #0x7fff
    4188:	extr	x2, x6, x5, #3
    418c:	ubfx	x6, x6, #3, #48
    4190:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    4194:	mov	x9, #0xffffffffffff8001    	// #-32767
    4198:	orr	x3, x6, x5
    419c:	add	x7, x7, x9
    41a0:	cbz	x3, 451c <PyInit__ctypes_test@@Base+0x1004>
    41a4:	tst	x6, #0x800000000000
    41a8:	orr	x1, x1, #0x3
    41ac:	csinc	w0, w0, wzr, ne  // ne = any
    41b0:	mov	x9, #0x3                   	// #3
    41b4:	eor	w11, w13, w15
    41b8:	cmp	x1, #0x9
    41bc:	and	x3, x11, #0xff
    41c0:	mov	x12, x3
    41c4:	b.le	4108 <PyInit__ctypes_test@@Base+0xbf0>
    41c8:	cmp	x1, #0xf
    41cc:	b.ne	4434 <PyInit__ctypes_test@@Base+0xf1c>  // b.any
    41d0:	tbz	x4, #47, 45e0 <PyInit__ctypes_test@@Base+0x10c8>
    41d4:	tbnz	x6, #47, 45e0 <PyInit__ctypes_test@@Base+0x10c8>
    41d8:	orr	x6, x6, #0x800000000000
    41dc:	mov	w11, w15
    41e0:	and	x6, x6, #0xffffffffffff
    41e4:	mov	x2, x5
    41e8:	mov	w1, #0x7fff                	// #32767
    41ec:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    41f0:	cmp	x1, #0x2
    41f4:	b.ne	4230 <PyInit__ctypes_test@@Base+0xd18>  // b.any
    41f8:	mov	w1, #0x0                   	// #0
    41fc:	mov	x6, #0x0                   	// #0
    4200:	mov	x2, #0x0                   	// #0
    4204:	mov	x5, #0x0                   	// #0
    4208:	orr	w1, w1, w11, lsl #15
    420c:	bfxil	x5, x6, #0, #48
    4210:	fmov	d0, x2
    4214:	bfi	x5, x1, #48, #16
    4218:	fmov	v0.d[1], x5
    421c:	cbnz	w0, 4424 <PyInit__ctypes_test@@Base+0xf0c>
    4220:	ldp	x29, x30, [sp], #48
    4224:	ret
    4228:	cmp	x1, #0x4
    422c:	b.eq	41f8 <PyInit__ctypes_test@@Base+0xce0>  // b.none
    4230:	cmp	x4, x6
    4234:	b.ls	458c <PyInit__ctypes_test@@Base+0x1074>  // b.plast
    4238:	lsr	x3, x4, #1
    423c:	extr	x8, x4, x2, #1
    4240:	lsl	x2, x2, #63
    4244:	ubfx	x14, x6, #20, #32
    4248:	extr	x9, x6, x5, #52
    424c:	lsl	x13, x5, #12
    4250:	and	x15, x9, #0xffffffff
    4254:	udiv	x5, x3, x14
    4258:	msub	x3, x5, x14, x3
    425c:	mul	x1, x15, x5
    4260:	extr	x3, x3, x8, #32
    4264:	cmp	x1, x3
    4268:	b.ls	427c <PyInit__ctypes_test@@Base+0xd64>  // b.plast
    426c:	adds	x3, x9, x3
    4270:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    4274:	b.hi	485c <PyInit__ctypes_test@@Base+0x1344>  // b.pmore
    4278:	sub	x5, x5, #0x1
    427c:	sub	x3, x3, x1
    4280:	mov	x4, x8
    4284:	udiv	x1, x3, x14
    4288:	msub	x3, x1, x14, x3
    428c:	mul	x6, x15, x1
    4290:	bfi	x4, x3, #32, #32
    4294:	cmp	x6, x4
    4298:	b.ls	42ac <PyInit__ctypes_test@@Base+0xd94>  // b.plast
    429c:	adds	x4, x9, x4
    42a0:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
    42a4:	b.hi	4850 <PyInit__ctypes_test@@Base+0x1338>  // b.pmore
    42a8:	sub	x1, x1, #0x1
    42ac:	orr	x8, x1, x5, lsl #32
    42b0:	and	x17, x13, #0xffffffff
    42b4:	and	x1, x8, #0xffffffff
    42b8:	lsr	x16, x13, #32
    42bc:	lsr	x5, x8, #32
    42c0:	sub	x4, x4, x6
    42c4:	mov	x18, #0x100000000           	// #4294967296
    42c8:	mul	x3, x1, x17
    42cc:	mul	x30, x5, x17
    42d0:	madd	x6, x16, x1, x30
    42d4:	and	x1, x3, #0xffffffff
    42d8:	mul	x5, x5, x16
    42dc:	add	x3, x6, x3, lsr #32
    42e0:	add	x6, x5, x18
    42e4:	cmp	x30, x3
    42e8:	csel	x5, x6, x5, hi  // hi = pmore
    42ec:	add	x1, x1, x3, lsl #32
    42f0:	add	x5, x5, x3, lsr #32
    42f4:	cmp	x4, x5
    42f8:	b.cc	4604 <PyInit__ctypes_test@@Base+0x10ec>  // b.lo, b.ul, b.last
    42fc:	ccmp	x2, x1, #0x2, eq  // eq = none
    4300:	mov	x6, x8
    4304:	b.cc	4604 <PyInit__ctypes_test@@Base+0x10ec>  // b.lo, b.ul, b.last
    4308:	subs	x8, x2, x1
    430c:	mov	x3, #0x3fff                	// #16383
    4310:	cmp	x2, x1
    4314:	add	x3, x7, x3
    4318:	sbc	x4, x4, x5
    431c:	cmp	x9, x4
    4320:	b.eq	4868 <PyInit__ctypes_test@@Base+0x1350>  // b.none
    4324:	udiv	x5, x4, x14
    4328:	msub	x4, x5, x14, x4
    432c:	mul	x2, x15, x5
    4330:	extr	x1, x4, x8, #32
    4334:	cmp	x2, x1
    4338:	b.ls	434c <PyInit__ctypes_test@@Base+0xe34>  // b.plast
    433c:	adds	x1, x9, x1
    4340:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    4344:	b.hi	4920 <PyInit__ctypes_test@@Base+0x1408>  // b.pmore
    4348:	sub	x5, x5, #0x1
    434c:	sub	x1, x1, x2
    4350:	udiv	x2, x1, x14
    4354:	msub	x1, x2, x14, x1
    4358:	mul	x15, x15, x2
    435c:	bfi	x8, x1, #32, #32
    4360:	mov	x1, x8
    4364:	cmp	x15, x8
    4368:	b.ls	437c <PyInit__ctypes_test@@Base+0xe64>  // b.plast
    436c:	adds	x1, x9, x8
    4370:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
    4374:	b.hi	492c <PyInit__ctypes_test@@Base+0x1414>  // b.pmore
    4378:	sub	x2, x2, #0x1
    437c:	orr	x5, x2, x5, lsl #32
    4380:	mov	x11, #0x100000000           	// #4294967296
    4384:	and	x4, x5, #0xffffffff
    4388:	sub	x1, x1, x15
    438c:	lsr	x14, x5, #32
    4390:	mul	x2, x17, x4
    4394:	mul	x17, x14, x17
    4398:	madd	x4, x16, x4, x17
    439c:	and	x8, x2, #0xffffffff
    43a0:	mul	x16, x16, x14
    43a4:	add	x2, x4, x2, lsr #32
    43a8:	add	x4, x16, x11
    43ac:	cmp	x17, x2
    43b0:	csel	x16, x4, x16, hi  // hi = pmore
    43b4:	add	x4, x8, x2, lsl #32
    43b8:	add	x16, x16, x2, lsr #32
    43bc:	cmp	x1, x16
    43c0:	b.cs	47a0 <PyInit__ctypes_test@@Base+0x1288>  // b.hs, b.nlast
    43c4:	adds	x2, x9, x1
    43c8:	sub	x8, x5, #0x1
    43cc:	mov	x1, x2
    43d0:	b.cs	43e4 <PyInit__ctypes_test@@Base+0xecc>  // b.hs, b.nlast
    43d4:	cmp	x2, x16
    43d8:	b.cc	48a0 <PyInit__ctypes_test@@Base+0x1388>  // b.lo, b.ul, b.last
    43dc:	ccmp	x13, x4, #0x2, eq  // eq = none
    43e0:	b.cc	48a0 <PyInit__ctypes_test@@Base+0x1388>  // b.lo, b.ul, b.last
    43e4:	cmp	x13, x4
    43e8:	mov	x5, x8
    43ec:	cset	w2, ne  // ne = any
    43f0:	cmp	w2, #0x0
    43f4:	orr	x2, x5, #0x1
    43f8:	ccmp	x1, x16, #0x0, eq  // eq = none
    43fc:	csel	x5, x2, x5, ne  // ne = any
    4400:	b	4158 <PyInit__ctypes_test@@Base+0xc40>
    4404:	cmp	x1, #0x1
    4408:	b.ne	41f0 <PyInit__ctypes_test@@Base+0xcd8>  // b.any
    440c:	mov	x4, #0x0                   	// #0
    4410:	fmov	d0, x4
    4414:	lsl	x3, x3, #63
    4418:	orr	w0, w0, #0x2
    441c:	orr	x5, x3, #0x7fff000000000000
    4420:	fmov	v0.d[1], x5
    4424:	str	q0, [sp, #16]
    4428:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    442c:	ldr	q0, [sp, #16]
    4430:	b	4220 <PyInit__ctypes_test@@Base+0xd08>
    4434:	cmp	x1, #0xb
    4438:	b.gt	4508 <PyInit__ctypes_test@@Base+0xff0>
    443c:	cmp	x1, #0xa
    4440:	b.ne	4130 <PyInit__ctypes_test@@Base+0xc18>  // b.any
    4444:	mov	w11, #0x0                   	// #0
    4448:	mov	x6, #0xffffffffffff        	// #281474976710655
    444c:	mov	x2, #0xffffffffffffffff    	// #-1
    4450:	mov	w0, #0x1                   	// #1
    4454:	mov	w1, #0x7fff                	// #32767
    4458:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    445c:	orr	x3, x6, x5
    4460:	cbz	x3, 4548 <PyInit__ctypes_test@@Base+0x1030>
    4464:	cbz	x6, 46fc <PyInit__ctypes_test@@Base+0x11e4>
    4468:	clz	x3, x6
    446c:	sub	x9, x3, #0xf
    4470:	add	w12, w9, #0x3
    4474:	mov	w11, #0x3d                  	// #61
    4478:	sub	w9, w11, w9
    447c:	lsl	x6, x6, x12
    4480:	lsr	x9, x5, x9
    4484:	orr	x6, x9, x6
    4488:	lsl	x5, x5, x12
    448c:	add	x7, x3, x7
    4490:	mov	x11, #0x3fef                	// #16367
    4494:	mov	x9, #0x0                   	// #0
    4498:	add	x7, x7, x11
    449c:	b	40f4 <PyInit__ctypes_test@@Base+0xbdc>
    44a0:	orr	x4, x6, x2
    44a4:	cbz	x4, 4530 <PyInit__ctypes_test@@Base+0x1018>
    44a8:	cbz	x6, 46d8 <PyInit__ctypes_test@@Base+0x11c0>
    44ac:	clz	x0, x6
    44b0:	sub	x4, x0, #0xf
    44b4:	add	w7, w4, #0x3
    44b8:	mov	w1, #0x3d                  	// #61
    44bc:	sub	w4, w1, w4
    44c0:	lsl	x6, x6, x7
    44c4:	lsr	x4, x2, x4
    44c8:	orr	x4, x4, x6
    44cc:	lsl	x2, x2, x7
    44d0:	mov	x7, #0xffffffffffffc011    	// #-16367
    44d4:	mov	x1, #0x0                   	// #0
    44d8:	sub	x7, x7, x0
    44dc:	mov	x16, #0x0                   	// #0
    44e0:	mov	w0, #0x0                   	// #0
    44e4:	b	40b4 <PyInit__ctypes_test@@Base+0xb9c>
    44e8:	orr	x4, x6, x2
    44ec:	cbnz	x4, 455c <PyInit__ctypes_test@@Base+0x1044>
    44f0:	mov	x2, #0x0                   	// #0
    44f4:	mov	x1, #0x8                   	// #8
    44f8:	mov	x7, #0x7fff                	// #32767
    44fc:	mov	x16, #0x2                   	// #2
    4500:	mov	w0, #0x0                   	// #0
    4504:	b	40b4 <PyInit__ctypes_test@@Base+0xb9c>
    4508:	mov	x6, x4
    450c:	mov	x5, x2
    4510:	mov	x8, x14
    4514:	mov	x9, x16
    4518:	b	4130 <PyInit__ctypes_test@@Base+0xc18>
    451c:	orr	x1, x1, #0x2
    4520:	mov	x6, #0x0                   	// #0
    4524:	mov	x5, #0x0                   	// #0
    4528:	mov	x9, #0x2                   	// #2
    452c:	b	41b4 <PyInit__ctypes_test@@Base+0xc9c>
    4530:	mov	x2, #0x0                   	// #0
    4534:	mov	x1, #0x4                   	// #4
    4538:	mov	x7, #0x0                   	// #0
    453c:	mov	x16, #0x1                   	// #1
    4540:	mov	w0, #0x0                   	// #0
    4544:	b	40b4 <PyInit__ctypes_test@@Base+0xb9c>
    4548:	orr	x1, x1, #0x1
    454c:	mov	x6, #0x0                   	// #0
    4550:	mov	x5, #0x0                   	// #0
    4554:	mov	x9, #0x1                   	// #1
    4558:	b	40f4 <PyInit__ctypes_test@@Base+0xbdc>
    455c:	lsr	x0, x6, #47
    4560:	mov	x4, x6
    4564:	eor	w0, w0, #0x1
    4568:	mov	x1, #0xc                   	// #12
    456c:	mov	x7, #0x7fff                	// #32767
    4570:	mov	x16, #0x3                   	// #3
    4574:	b	40b4 <PyInit__ctypes_test@@Base+0xb9c>
    4578:	mov	w11, w8
    457c:	mov	w1, #0x0                   	// #0
    4580:	mov	x6, #0x0                   	// #0
    4584:	mov	x2, #0x0                   	// #0
    4588:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    458c:	ccmp	x5, x2, #0x2, eq  // eq = none
    4590:	b.ls	4238 <PyInit__ctypes_test@@Base+0xd20>  // b.plast
    4594:	mov	x8, x2
    4598:	sub	x7, x7, #0x1
    459c:	mov	x3, x4
    45a0:	mov	x2, #0x0                   	// #0
    45a4:	b	4244 <PyInit__ctypes_test@@Base+0xd2c>
    45a8:	and	x1, x10, #0xc00000
    45ac:	orr	w0, w0, #0x10
    45b0:	cmp	x1, #0x400, lsl #12
    45b4:	b.eq	4908 <PyInit__ctypes_test@@Base+0x13f0>  // b.none
    45b8:	cmp	x1, #0x800, lsl #12
    45bc:	b.eq	481c <PyInit__ctypes_test@@Base+0x1304>  // b.none
    45c0:	cbnz	x1, 4168 <PyInit__ctypes_test@@Base+0xc50>
    45c4:	and	x1, x5, #0xf
    45c8:	and	w11, w12, #0x1
    45cc:	cmp	x1, #0x4
    45d0:	b.eq	416c <PyInit__ctypes_test@@Base+0xc54>  // b.none
    45d4:	adds	x5, x5, #0x4
    45d8:	cinc	x6, x6, cs  // cs = hs, nlast
    45dc:	b	416c <PyInit__ctypes_test@@Base+0xc54>
    45e0:	orr	x6, x4, #0x800000000000
    45e4:	mov	w11, w13
    45e8:	and	x6, x6, #0xffffffffffff
    45ec:	mov	w1, #0x7fff                	// #32767
    45f0:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    45f4:	mov	w1, #0x7fff                	// #32767
    45f8:	mov	x6, #0x0                   	// #0
    45fc:	mov	x2, #0x0                   	// #0
    4600:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    4604:	adds	x3, x2, x13
    4608:	sub	x6, x8, #0x1
    460c:	adc	x4, x4, x9
    4610:	cset	x18, cs  // cs = hs, nlast
    4614:	mov	x2, x3
    4618:	cmp	x9, x4
    461c:	b.cs	4790 <PyInit__ctypes_test@@Base+0x1278>  // b.hs, b.nlast
    4620:	cmp	x5, x4
    4624:	b.ls	47b8 <PyInit__ctypes_test@@Base+0x12a0>  // b.plast
    4628:	adds	x2, x13, x3
    462c:	sub	x6, x8, #0x2
    4630:	adc	x4, x4, x9
    4634:	b	4308 <PyInit__ctypes_test@@Base+0xdf0>
    4638:	mov	x1, #0x1                   	// #1
    463c:	sub	x1, x1, x3
    4640:	cmp	x1, #0x74
    4644:	and	w11, w12, #0x1
    4648:	b.le	4664 <PyInit__ctypes_test@@Base+0x114c>
    464c:	orr	x2, x5, x6
    4650:	cbnz	x2, 4884 <PyInit__ctypes_test@@Base+0x136c>
    4654:	orr	w0, w0, #0x8
    4658:	mov	w1, #0x0                   	// #0
    465c:	mov	x6, #0x0                   	// #0
    4660:	b	4748 <PyInit__ctypes_test@@Base+0x1230>
    4664:	cmp	x1, #0x3f
    4668:	b.le	47c4 <PyInit__ctypes_test@@Base+0x12ac>
    466c:	mov	w2, #0x80                  	// #128
    4670:	sub	w2, w2, w1
    4674:	cmp	x1, #0x40
    4678:	sub	w1, w1, #0x40
    467c:	lsl	x2, x6, x2
    4680:	orr	x2, x5, x2
    4684:	csel	x5, x2, x5, ne  // ne = any
    4688:	lsr	x6, x6, x1
    468c:	cmp	x5, #0x0
    4690:	cset	x2, ne  // ne = any
    4694:	orr	x2, x2, x6
    4698:	ands	x6, x2, #0x7
    469c:	b.eq	47f8 <PyInit__ctypes_test@@Base+0x12e0>  // b.none
    46a0:	mov	x6, #0x0                   	// #0
    46a4:	and	x10, x10, #0xc00000
    46a8:	orr	w0, w0, #0x10
    46ac:	cmp	x10, #0x400, lsl #12
    46b0:	b.eq	4944 <PyInit__ctypes_test@@Base+0x142c>  // b.none
    46b4:	cmp	x10, #0x800, lsl #12
    46b8:	b.eq	4958 <PyInit__ctypes_test@@Base+0x1440>  // b.none
    46bc:	cbz	x10, 48c0 <PyInit__ctypes_test@@Base+0x13a8>
    46c0:	tbnz	x6, #51, 48d8 <PyInit__ctypes_test@@Base+0x13c0>
    46c4:	orr	w0, w0, #0x8
    46c8:	extr	x2, x6, x2, #3
    46cc:	mov	w1, #0x0                   	// #0
    46d0:	ubfx	x6, x6, #3, #48
    46d4:	b	4748 <PyInit__ctypes_test@@Base+0x1230>
    46d8:	clz	x7, x2
    46dc:	add	x4, x7, #0x31
    46e0:	add	x0, x7, #0x40
    46e4:	cmp	x4, #0x3c
    46e8:	b.le	44b4 <PyInit__ctypes_test@@Base+0xf9c>
    46ec:	sub	w4, w4, #0x3d
    46f0:	lsl	x4, x2, x4
    46f4:	mov	x2, #0x0                   	// #0
    46f8:	b	44d0 <PyInit__ctypes_test@@Base+0xfb8>
    46fc:	clz	x3, x5
    4700:	add	x9, x3, #0x31
    4704:	add	x3, x3, #0x40
    4708:	cmp	x9, #0x3c
    470c:	b.le	4470 <PyInit__ctypes_test@@Base+0xf58>
    4710:	sub	w6, w9, #0x3d
    4714:	lsl	x6, x5, x6
    4718:	mov	x5, #0x0                   	// #0
    471c:	b	448c <PyInit__ctypes_test@@Base+0xf74>
    4720:	and	x2, x10, #0xc00000
    4724:	cmp	x2, #0x400, lsl #12
    4728:	b.eq	48ec <PyInit__ctypes_test@@Base+0x13d4>  // b.none
    472c:	cmp	x2, #0x800, lsl #12
    4730:	b.eq	4834 <PyInit__ctypes_test@@Base+0x131c>  // b.none
    4734:	cbz	x2, 4810 <PyInit__ctypes_test@@Base+0x12f8>
    4738:	mov	x6, #0xffffffffffff        	// #281474976710655
    473c:	mov	x2, #0xffffffffffffffff    	// #-1
    4740:	mov	w3, #0x14                  	// #20
    4744:	orr	w0, w0, w3
    4748:	mov	x5, #0x0                   	// #0
    474c:	orr	w1, w1, w11, lsl #15
    4750:	bfxil	x5, x6, #0, #48
    4754:	fmov	d0, x2
    4758:	bfi	x5, x1, #48, #16
    475c:	fmov	v0.d[1], x5
    4760:	b	4424 <PyInit__ctypes_test@@Base+0xf0c>
    4764:	orr	x6, x6, #0x800000000000
    4768:	mov	w11, w8
    476c:	and	x6, x6, #0xffffffffffff
    4770:	mov	x2, x5
    4774:	mov	w1, #0x7fff                	// #32767
    4778:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    477c:	mov	w11, w8
    4780:	mov	w1, #0x7fff                	// #32767
    4784:	mov	x6, #0x0                   	// #0
    4788:	mov	x2, #0x0                   	// #0
    478c:	b	4204 <PyInit__ctypes_test@@Base+0xcec>
    4790:	cmp	x18, #0x0
    4794:	ccmp	x9, x4, #0x0, eq  // eq = none
    4798:	b.ne	4308 <PyInit__ctypes_test@@Base+0xdf0>  // b.any
    479c:	b	4620 <PyInit__ctypes_test@@Base+0x1108>
    47a0:	cmp	x4, #0x0
    47a4:	cset	w2, ne  // ne = any
    47a8:	cmp	w2, #0x0
    47ac:	ccmp	x1, x16, #0x0, ne  // ne = any
    47b0:	b.ne	43f0 <PyInit__ctypes_test@@Base+0xed8>  // b.any
    47b4:	b	43c4 <PyInit__ctypes_test@@Base+0xeac>
    47b8:	ccmp	x1, x3, #0x0, eq  // eq = none
    47bc:	b.ls	4308 <PyInit__ctypes_test@@Base+0xdf0>  // b.plast
    47c0:	b	4628 <PyInit__ctypes_test@@Base+0x1110>
    47c4:	mov	w2, #0x40                  	// #64
    47c8:	sub	w2, w2, w1
    47cc:	lsr	x4, x5, x1
    47d0:	lsl	x5, x5, x2
    47d4:	cmp	x5, #0x0
    47d8:	cset	x3, ne  // ne = any
    47dc:	lsl	x2, x6, x2
    47e0:	orr	x2, x2, x4
    47e4:	lsr	x6, x6, x1
    47e8:	orr	x2, x2, x3
    47ec:	tst	x2, #0x7
    47f0:	b.ne	46a4 <PyInit__ctypes_test@@Base+0x118c>  // b.any
    47f4:	tbnz	x6, #51, 4964 <PyInit__ctypes_test@@Base+0x144c>
    47f8:	mov	w1, #0x0                   	// #0
    47fc:	extr	x2, x6, x2, #3
    4800:	ubfx	x6, x6, #3, #48
    4804:	tbz	w10, #11, 4204 <PyInit__ctypes_test@@Base+0xcec>
    4808:	orr	w0, w0, #0x8
    480c:	b	4748 <PyInit__ctypes_test@@Base+0x1230>
    4810:	mov	w1, #0x7fff                	// #32767
    4814:	mov	x6, #0x0                   	// #0
    4818:	b	4740 <PyInit__ctypes_test@@Base+0x1228>
    481c:	mov	w11, #0x0                   	// #0
    4820:	cbz	x12, 416c <PyInit__ctypes_test@@Base+0xc54>
    4824:	adds	x5, x5, #0x8
    4828:	mov	w11, #0x1                   	// #1
    482c:	cinc	x6, x6, cs  // cs = hs, nlast
    4830:	b	416c <PyInit__ctypes_test@@Base+0xc54>
    4834:	cmp	x12, #0x0
    4838:	mov	w2, #0x7fff                	// #32767
    483c:	mov	x6, #0xffffffffffff        	// #281474976710655
    4840:	csel	w1, w1, w2, eq  // eq = none
    4844:	csel	x6, x6, xzr, eq  // eq = none
    4848:	csetm	x2, eq  // eq = none
    484c:	b	4740 <PyInit__ctypes_test@@Base+0x1228>
    4850:	sub	x1, x1, #0x2
    4854:	add	x4, x4, x9
    4858:	b	42ac <PyInit__ctypes_test@@Base+0xd94>
    485c:	sub	x5, x5, #0x2
    4860:	add	x3, x3, x9
    4864:	b	427c <PyInit__ctypes_test@@Base+0xd64>
    4868:	cmp	x3, #0x0
    486c:	mov	x5, #0xffffffffffffffff    	// #-1
    4870:	b.gt	45a8 <PyInit__ctypes_test@@Base+0x1090>
    4874:	mov	x1, #0x1                   	// #1
    4878:	sub	x1, x1, x3
    487c:	cmp	x1, #0x74
    4880:	b.le	4664 <PyInit__ctypes_test@@Base+0x114c>
    4884:	and	x10, x10, #0xc00000
    4888:	orr	w0, w0, #0x10
    488c:	cmp	x10, #0x400, lsl #12
    4890:	b.eq	4938 <PyInit__ctypes_test@@Base+0x1420>  // b.none
    4894:	cmp	x10, #0x800, lsl #12
    4898:	csel	x2, x12, xzr, eq  // eq = none
    489c:	b	4654 <PyInit__ctypes_test@@Base+0x113c>
    48a0:	lsl	x8, x13, #1
    48a4:	sub	x5, x5, #0x2
    48a8:	cmp	x13, x8
    48ac:	cinc	x1, x9, hi  // hi = pmore
    48b0:	cmp	x4, x8
    48b4:	add	x1, x2, x1
    48b8:	cset	w2, ne  // ne = any
    48bc:	b	43f0 <PyInit__ctypes_test@@Base+0xed8>
    48c0:	and	x1, x2, #0xf
    48c4:	cmp	x1, #0x4
    48c8:	b.eq	48d4 <PyInit__ctypes_test@@Base+0x13bc>  // b.none
    48cc:	adds	x2, x2, #0x4
    48d0:	cinc	x6, x6, cs  // cs = hs, nlast
    48d4:	tbz	x6, #51, 46c4 <PyInit__ctypes_test@@Base+0x11ac>
    48d8:	orr	w0, w0, #0x8
    48dc:	mov	w1, #0x1                   	// #1
    48e0:	mov	x6, #0x0                   	// #0
    48e4:	mov	x2, #0x0                   	// #0
    48e8:	b	4748 <PyInit__ctypes_test@@Base+0x1230>
    48ec:	cmp	x12, #0x0
    48f0:	mov	w2, #0x7fff                	// #32767
    48f4:	mov	x6, #0xffffffffffff        	// #281474976710655
    48f8:	csel	w1, w1, w2, ne  // ne = any
    48fc:	csel	x6, x6, xzr, ne  // ne = any
    4900:	csetm	x2, ne  // ne = any
    4904:	b	4740 <PyInit__ctypes_test@@Base+0x1228>
    4908:	mov	w11, #0x1                   	// #1
    490c:	cbnz	x12, 416c <PyInit__ctypes_test@@Base+0xc54>
    4910:	adds	x5, x5, #0x8
    4914:	mov	w11, #0x0                   	// #0
    4918:	cinc	x6, x6, cs  // cs = hs, nlast
    491c:	b	416c <PyInit__ctypes_test@@Base+0xc54>
    4920:	sub	x5, x5, #0x2
    4924:	add	x1, x1, x9
    4928:	b	434c <PyInit__ctypes_test@@Base+0xe34>
    492c:	sub	x2, x2, #0x2
    4930:	add	x1, x1, x9
    4934:	b	437c <PyInit__ctypes_test@@Base+0xe64>
    4938:	mov	x2, #0x1                   	// #1
    493c:	sub	x2, x2, x12
    4940:	b	4654 <PyInit__ctypes_test@@Base+0x113c>
    4944:	cbnz	x12, 48d4 <PyInit__ctypes_test@@Base+0x13bc>
    4948:	adds	x2, x2, #0x8
    494c:	cinc	x6, x6, cs  // cs = hs, nlast
    4950:	tbnz	x6, #51, 48d8 <PyInit__ctypes_test@@Base+0x13c0>
    4954:	b	46c4 <PyInit__ctypes_test@@Base+0x11ac>
    4958:	cbnz	x12, 4948 <PyInit__ctypes_test@@Base+0x1430>
    495c:	tbnz	x6, #51, 48d8 <PyInit__ctypes_test@@Base+0x13c0>
    4960:	b	46c4 <PyInit__ctypes_test@@Base+0x11ac>
    4964:	orr	w0, w0, #0x10
    4968:	b	48d8 <PyInit__ctypes_test@@Base+0x13c0>
    496c:	nop
    4970:	stp	x29, x30, [sp, #-80]!
    4974:	mov	x29, sp
    4978:	str	q0, [sp, #48]
    497c:	str	q1, [sp, #64]
    4980:	ldp	x1, x0, [sp, #48]
    4984:	ldp	x6, x2, [sp, #64]
    4988:	mrs	x11, fpcr
    498c:	lsr	x3, x0, #63
    4990:	ubfx	x7, x0, #0, #48
    4994:	and	w12, w3, #0xff
    4998:	mov	x14, x3
    499c:	ubfx	x3, x0, #48, #15
    49a0:	cbz	w3, 4d48 <PyInit__ctypes_test@@Base+0x1830>
    49a4:	mov	w4, #0x7fff                	// #32767
    49a8:	cmp	w3, w4
    49ac:	b.eq	4dec <PyInit__ctypes_test@@Base+0x18d4>  // b.none
    49b0:	and	x3, x3, #0xffff
    49b4:	extr	x4, x7, x1, #61
    49b8:	mov	x18, #0xffffffffffffc001    	// #-16383
    49bc:	orr	x7, x4, #0x8000000000000
    49c0:	add	x3, x3, x18
    49c4:	lsl	x5, x1, #3
    49c8:	mov	x16, #0x0                   	// #0
    49cc:	mov	x1, #0x0                   	// #0
    49d0:	mov	w0, #0x0                   	// #0
    49d4:	lsr	x8, x2, #63
    49d8:	ubfx	x4, x2, #0, #48
    49dc:	and	w15, w8, #0xff
    49e0:	mov	x13, x8
    49e4:	ubfx	x9, x2, #48, #15
    49e8:	cbz	w9, 4da8 <PyInit__ctypes_test@@Base+0x1890>
    49ec:	mov	w8, #0x7fff                	// #32767
    49f0:	cmp	w9, w8
    49f4:	b.eq	4a78 <PyInit__ctypes_test@@Base+0x1560>  // b.none
    49f8:	and	x9, x9, #0xffff
    49fc:	mov	x17, #0xffffffffffffc001    	// #-16383
    4a00:	add	x9, x9, x17
    4a04:	extr	x2, x4, x6, #61
    4a08:	add	x9, x9, x3
    4a0c:	lsl	x6, x6, #3
    4a10:	orr	x4, x2, #0x8000000000000
    4a14:	mov	x2, #0x0                   	// #0
    4a18:	eor	w8, w12, w15
    4a1c:	cmp	x1, #0xa
    4a20:	and	w10, w8, #0xff
    4a24:	add	x3, x9, #0x1
    4a28:	and	x8, x8, #0xff
    4a2c:	b.le	4ab0 <PyInit__ctypes_test@@Base+0x1598>
    4a30:	cmp	x1, #0xb
    4a34:	b.eq	5148 <PyInit__ctypes_test@@Base+0x1c30>  // b.none
    4a38:	mov	w15, w12
    4a3c:	mov	x13, x14
    4a40:	mov	w10, w15
    4a44:	cmp	x16, #0x2
    4a48:	b.eq	4e0c <PyInit__ctypes_test@@Base+0x18f4>  // b.none
    4a4c:	mov	x4, x7
    4a50:	mov	x6, x5
    4a54:	mov	x2, x16
    4a58:	mov	x8, x13
    4a5c:	cmp	x2, #0x3
    4a60:	b.ne	4acc <PyInit__ctypes_test@@Base+0x15b4>  // b.any
    4a64:	orr	x4, x4, #0x800000000000
    4a68:	mov	x5, x6
    4a6c:	and	x4, x4, #0xffffffffffff
    4a70:	mov	w1, #0x7fff                	// #32767
    4a74:	b	4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    4a78:	mov	x8, #0x7fff                	// #32767
    4a7c:	orr	x2, x4, x6
    4a80:	add	x9, x3, x8
    4a84:	cbnz	x2, 4b04 <PyInit__ctypes_test@@Base+0x15ec>
    4a88:	eor	w8, w12, w15
    4a8c:	orr	x1, x1, #0x2
    4a90:	and	w10, w8, #0xff
    4a94:	cmp	x1, #0xa
    4a98:	add	x3, x3, #0x8, lsl #12
    4a9c:	and	x8, x8, #0xff
    4aa0:	mov	x6, #0x0                   	// #0
    4aa4:	b.gt	50bc <PyInit__ctypes_test@@Base+0x1ba4>
    4aa8:	mov	x4, #0x0                   	// #0
    4aac:	mov	x2, #0x2                   	// #2
    4ab0:	cmp	x1, #0x2
    4ab4:	b.gt	4b2c <PyInit__ctypes_test@@Base+0x1614>
    4ab8:	sub	x1, x1, #0x1
    4abc:	cmp	x1, #0x1
    4ac0:	b.hi	4b68 <PyInit__ctypes_test@@Base+0x1650>  // b.pmore
    4ac4:	cmp	x2, #0x2
    4ac8:	b.eq	4e0c <PyInit__ctypes_test@@Base+0x18f4>  // b.none
    4acc:	cmp	x2, #0x1
    4ad0:	b.ne	4cc8 <PyInit__ctypes_test@@Base+0x17b0>  // b.any
    4ad4:	mov	w1, #0x0                   	// #0
    4ad8:	mov	x4, #0x0                   	// #0
    4adc:	mov	x5, #0x0                   	// #0
    4ae0:	mov	x3, #0x0                   	// #0
    4ae4:	orr	w1, w1, w10, lsl #15
    4ae8:	bfxil	x3, x4, #0, #48
    4aec:	fmov	d0, x5
    4af0:	bfi	x3, x1, #48, #16
    4af4:	fmov	v0.d[1], x3
    4af8:	cbnz	w0, 4f38 <PyInit__ctypes_test@@Base+0x1a20>
    4afc:	ldp	x29, x30, [sp], #80
    4b00:	ret
    4b04:	tst	x4, #0x800000000000
    4b08:	eor	w8, w12, w15
    4b0c:	orr	x1, x1, #0x3
    4b10:	csinc	w0, w0, wzr, ne  // ne = any
    4b14:	and	w10, w8, #0xff
    4b18:	add	x3, x3, #0x8, lsl #12
    4b1c:	cmp	x1, #0xa
    4b20:	and	x8, x8, #0xff
    4b24:	mov	x2, #0x3                   	// #3
    4b28:	b.gt	513c <PyInit__ctypes_test@@Base+0x1c24>
    4b2c:	mov	x12, #0x1                   	// #1
    4b30:	mov	x14, #0x530                 	// #1328
    4b34:	lsl	x1, x12, x1
    4b38:	tst	x1, x14
    4b3c:	b.ne	4d3c <PyInit__ctypes_test@@Base+0x1824>  // b.any
    4b40:	mov	x14, #0x240                 	// #576
    4b44:	tst	x1, x14
    4b48:	b.ne	4d24 <PyInit__ctypes_test@@Base+0x180c>  // b.any
    4b4c:	mov	x12, #0x88                  	// #136
    4b50:	tst	x1, x12
    4b54:	b.eq	4b68 <PyInit__ctypes_test@@Base+0x1650>  // b.none
    4b58:	mov	x7, x4
    4b5c:	mov	x5, x6
    4b60:	mov	x16, x2
    4b64:	b	4a40 <PyInit__ctypes_test@@Base+0x1528>
    4b68:	lsr	x13, x5, #32
    4b6c:	and	x12, x6, #0xffffffff
    4b70:	and	x15, x5, #0xffffffff
    4b74:	lsr	x6, x6, #32
    4b78:	and	x18, x4, #0xffffffff
    4b7c:	lsr	x2, x4, #32
    4b80:	mul	x4, x13, x12
    4b84:	stp	x21, x22, [sp, #32]
    4b88:	lsr	x22, x7, #32
    4b8c:	and	x5, x7, #0xffffffff
    4b90:	mul	x16, x12, x15
    4b94:	madd	x7, x6, x15, x4
    4b98:	stp	x19, x20, [sp, #16]
    4b9c:	mul	x1, x13, x18
    4ba0:	mul	x17, x15, x18
    4ba4:	and	x30, x16, #0xffffffff
    4ba8:	madd	x15, x2, x15, x1
    4bac:	add	x16, x7, x16, lsr #32
    4bb0:	mul	x21, x22, x12
    4bb4:	cmp	x4, x16
    4bb8:	mul	x20, x22, x18
    4bbc:	mov	x14, #0x100000000           	// #4294967296
    4bc0:	mul	x19, x13, x6
    4bc4:	add	x15, x15, x17, lsr #32
    4bc8:	mul	x12, x12, x5
    4bcc:	and	x17, x17, #0xffffffff
    4bd0:	mul	x18, x5, x18
    4bd4:	add	x4, x19, x14
    4bd8:	madd	x7, x6, x5, x21
    4bdc:	csel	x19, x4, x19, hi  // hi = pmore
    4be0:	madd	x5, x2, x5, x20
    4be4:	cmp	x1, x15
    4be8:	mul	x13, x13, x2
    4bec:	add	x17, x17, x15, lsl #32
    4bf0:	mul	x6, x6, x22
    4bf4:	add	x7, x7, x12, lsr #32
    4bf8:	add	x5, x5, x18, lsr #32
    4bfc:	add	x4, x13, x14
    4c00:	mul	x2, x2, x22
    4c04:	csel	x13, x4, x13, hi  // hi = pmore
    4c08:	and	x1, x18, #0xffffffff
    4c0c:	cmp	x21, x7
    4c10:	add	x4, x6, x14
    4c14:	add	x30, x30, x16, lsl #32
    4c18:	csel	x6, x4, x6, hi  // hi = pmore
    4c1c:	add	x13, x13, x15, lsr #32
    4c20:	cmp	x20, x5
    4c24:	add	x1, x1, x5, lsl #32
    4c28:	add	x16, x17, x16, lsr #32
    4c2c:	add	x14, x2, x14
    4c30:	csel	x2, x14, x2, hi  // hi = pmore
    4c34:	add	x16, x19, x16
    4c38:	adds	x1, x1, x13
    4c3c:	and	x12, x12, #0xffffffff
    4c40:	cset	x13, cs  // cs = hs, nlast
    4c44:	cmp	x16, x17
    4c48:	cset	x4, cc  // cc = lo, ul, last
    4c4c:	add	x12, x12, x7, lsl #32
    4c50:	adds	x1, x1, x4
    4c54:	lsr	x5, x5, #32
    4c58:	cset	x4, cs  // cs = hs, nlast
    4c5c:	cmp	x13, #0x0
    4c60:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    4c64:	add	x7, x6, x7, lsr #32
    4c68:	cinc	x5, x5, ne  // ne = any
    4c6c:	adds	x6, x16, x12
    4c70:	cset	x4, cs  // cs = hs, nlast
    4c74:	adds	x1, x1, x7
    4c78:	cset	x7, cs  // cs = hs, nlast
    4c7c:	adds	x4, x1, x4
    4c80:	cset	x1, cs  // cs = hs, nlast
    4c84:	cmp	x7, #0x0
    4c88:	orr	x30, x30, x6, lsl #13
    4c8c:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    4c90:	cinc	x1, x2, ne  // ne = any
    4c94:	cmp	x30, #0x0
    4c98:	add	x1, x1, x5
    4c9c:	cset	x2, ne  // ne = any
    4ca0:	orr	x6, x2, x6, lsr #51
    4ca4:	orr	x6, x6, x4, lsl #13
    4ca8:	extr	x4, x1, x4, #51
    4cac:	tbz	x1, #39, 4fc0 <PyInit__ctypes_test@@Base+0x1aa8>
    4cb0:	ldp	x19, x20, [sp, #16]
    4cb4:	and	x1, x6, #0x1
    4cb8:	ldp	x21, x22, [sp, #32]
    4cbc:	orr	x6, x1, x6, lsr #1
    4cc0:	orr	x6, x6, x4, lsl #63
    4cc4:	lsr	x4, x4, #1
    4cc8:	mov	x1, #0x3fff                	// #16383
    4ccc:	add	x2, x3, x1
    4cd0:	cmp	x2, #0x0
    4cd4:	b.le	4e6c <PyInit__ctypes_test@@Base+0x1954>
    4cd8:	tst	x6, #0x7
    4cdc:	b.eq	4cfc <PyInit__ctypes_test@@Base+0x17e4>  // b.none
    4ce0:	and	x1, x11, #0xc00000
    4ce4:	orr	w0, w0, #0x10
    4ce8:	cmp	x1, #0x400, lsl #12
    4cec:	b.eq	50b4 <PyInit__ctypes_test@@Base+0x1b9c>  // b.none
    4cf0:	cmp	x1, #0x800, lsl #12
    4cf4:	b.eq	505c <PyInit__ctypes_test@@Base+0x1b44>  // b.none
    4cf8:	cbz	x1, 5044 <PyInit__ctypes_test@@Base+0x1b2c>
    4cfc:	tbz	x4, #52, 4d08 <PyInit__ctypes_test@@Base+0x17f0>
    4d00:	and	x4, x4, #0xffefffffffffffff
    4d04:	add	x2, x3, #0x4, lsl #12
    4d08:	mov	x1, #0x7ffe                	// #32766
    4d0c:	cmp	x2, x1
    4d10:	b.gt	4f94 <PyInit__ctypes_test@@Base+0x1a7c>
    4d14:	and	w1, w2, #0x7fff
    4d18:	extr	x5, x4, x6, #3
    4d1c:	ubfx	x4, x4, #3, #48
    4d20:	b	4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    4d24:	mov	w0, w12
    4d28:	mov	w10, #0x0                   	// #0
    4d2c:	mov	x4, #0xffffffffffff        	// #281474976710655
    4d30:	mov	x5, #0xffffffffffffffff    	// #-1
    4d34:	mov	w1, #0x7fff                	// #32767
    4d38:	b	4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    4d3c:	mov	w15, w10
    4d40:	mov	x13, x8
    4d44:	b	4a40 <PyInit__ctypes_test@@Base+0x1528>
    4d48:	orr	x5, x7, x1
    4d4c:	cbz	x5, 4e54 <PyInit__ctypes_test@@Base+0x193c>
    4d50:	cbz	x7, 4f70 <PyInit__ctypes_test@@Base+0x1a58>
    4d54:	clz	x0, x7
    4d58:	sub	x4, x0, #0xf
    4d5c:	add	w5, w4, #0x3
    4d60:	mov	w3, #0x3d                  	// #61
    4d64:	sub	w3, w3, w4
    4d68:	lsl	x4, x7, x5
    4d6c:	lsr	x3, x1, x3
    4d70:	orr	x7, x3, x4
    4d74:	lsl	x5, x1, x5
    4d78:	lsr	x8, x2, #63
    4d7c:	mov	x3, #0xffffffffffffc011    	// #-16367
    4d80:	ubfx	x4, x2, #0, #48
    4d84:	sub	x3, x3, x0
    4d88:	and	w15, w8, #0xff
    4d8c:	mov	x13, x8
    4d90:	ubfx	x9, x2, #48, #15
    4d94:	mov	x1, #0x0                   	// #0
    4d98:	mov	x16, #0x0                   	// #0
    4d9c:	mov	w0, #0x0                   	// #0
    4da0:	cbnz	w9, 49ec <PyInit__ctypes_test@@Base+0x14d4>
    4da4:	nop
    4da8:	orr	x2, x4, x6
    4dac:	cbz	x2, 4e1c <PyInit__ctypes_test@@Base+0x1904>
    4db0:	cbz	x4, 4f4c <PyInit__ctypes_test@@Base+0x1a34>
    4db4:	clz	x9, x4
    4db8:	sub	x2, x9, #0xf
    4dbc:	add	w10, w2, #0x3
    4dc0:	mov	w8, #0x3d                  	// #61
    4dc4:	sub	w8, w8, w2
    4dc8:	lsl	x2, x4, x10
    4dcc:	lsr	x8, x6, x8
    4dd0:	orr	x4, x8, x2
    4dd4:	lsl	x6, x6, x10
    4dd8:	sub	x9, x3, x9
    4ddc:	mov	x10, #0xffffffffffffc011    	// #-16367
    4de0:	mov	x2, #0x0                   	// #0
    4de4:	add	x9, x9, x10
    4de8:	b	4a18 <PyInit__ctypes_test@@Base+0x1500>
    4dec:	orr	x5, x7, x1
    4df0:	cbnz	x5, 4e34 <PyInit__ctypes_test@@Base+0x191c>
    4df4:	mov	x7, #0x0                   	// #0
    4df8:	mov	x1, #0x8                   	// #8
    4dfc:	mov	x3, #0x7fff                	// #32767
    4e00:	mov	x16, #0x2                   	// #2
    4e04:	mov	w0, #0x0                   	// #0
    4e08:	b	49d4 <PyInit__ctypes_test@@Base+0x14bc>
    4e0c:	mov	w1, #0x7fff                	// #32767
    4e10:	mov	x4, #0x0                   	// #0
    4e14:	mov	x5, #0x0                   	// #0
    4e18:	b	4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    4e1c:	orr	x1, x1, #0x1
    4e20:	mov	x9, x3
    4e24:	mov	x4, #0x0                   	// #0
    4e28:	mov	x6, #0x0                   	// #0
    4e2c:	mov	x2, #0x1                   	// #1
    4e30:	b	4a18 <PyInit__ctypes_test@@Base+0x1500>
    4e34:	lsr	x0, x7, #47
    4e38:	mov	x5, x1
    4e3c:	eor	x0, x0, #0x1
    4e40:	mov	x1, #0xc                   	// #12
    4e44:	and	w0, w0, #0x1
    4e48:	mov	x3, #0x7fff                	// #32767
    4e4c:	mov	x16, #0x3                   	// #3
    4e50:	b	49d4 <PyInit__ctypes_test@@Base+0x14bc>
    4e54:	mov	x7, #0x0                   	// #0
    4e58:	mov	x1, #0x4                   	// #4
    4e5c:	mov	x3, #0x0                   	// #0
    4e60:	mov	x16, #0x1                   	// #1
    4e64:	mov	w0, #0x0                   	// #0
    4e68:	b	49d4 <PyInit__ctypes_test@@Base+0x14bc>
    4e6c:	mov	x1, #0x1                   	// #1
    4e70:	sub	x2, x1, x2
    4e74:	cmp	x2, #0x74
    4e78:	b.gt	4ef0 <PyInit__ctypes_test@@Base+0x19d8>
    4e7c:	cmp	x2, #0x3f
    4e80:	b.le	4fd0 <PyInit__ctypes_test@@Base+0x1ab8>
    4e84:	mov	w1, #0x80                  	// #128
    4e88:	sub	w1, w1, w2
    4e8c:	cmp	x2, #0x40
    4e90:	sub	w2, w2, #0x40
    4e94:	lsl	x1, x4, x1
    4e98:	orr	x1, x6, x1
    4e9c:	csel	x6, x1, x6, ne  // ne = any
    4ea0:	lsr	x2, x4, x2
    4ea4:	cmp	x6, #0x0
    4ea8:	cset	x5, ne  // ne = any
    4eac:	orr	x5, x5, x2
    4eb0:	ands	x2, x5, #0x7
    4eb4:	b.eq	5004 <PyInit__ctypes_test@@Base+0x1aec>  // b.none
    4eb8:	mov	x2, #0x0                   	// #0
    4ebc:	and	x11, x11, #0xc00000
    4ec0:	orr	w0, w0, #0x10
    4ec4:	cmp	x11, #0x400, lsl #12
    4ec8:	b.eq	5114 <PyInit__ctypes_test@@Base+0x1bfc>  // b.none
    4ecc:	cmp	x11, #0x800, lsl #12
    4ed0:	b.eq	5128 <PyInit__ctypes_test@@Base+0x1c10>  // b.none
    4ed4:	cbz	x11, 506c <PyInit__ctypes_test@@Base+0x1b54>
    4ed8:	tbnz	x2, #51, 5084 <PyInit__ctypes_test@@Base+0x1b6c>
    4edc:	ubfx	x4, x2, #3, #48
    4ee0:	extr	x5, x2, x5, #3
    4ee4:	orr	w0, w0, #0x8
    4ee8:	mov	w1, #0x0                   	// #0
    4eec:	b	4f20 <PyInit__ctypes_test@@Base+0x1a08>
    4ef0:	orr	x5, x6, x4
    4ef4:	cbz	x5, 4f14 <PyInit__ctypes_test@@Base+0x19fc>
    4ef8:	and	x11, x11, #0xc00000
    4efc:	orr	w0, w0, #0x10
    4f00:	cmp	x11, #0x400, lsl #12
    4f04:	sub	x5, x1, x8
    4f08:	b.eq	4f14 <PyInit__ctypes_test@@Base+0x19fc>  // b.none
    4f0c:	cmp	x11, #0x800, lsl #12
    4f10:	csel	x5, x8, xzr, eq  // eq = none
    4f14:	orr	w0, w0, #0x8
    4f18:	mov	w1, #0x0                   	// #0
    4f1c:	mov	x4, #0x0                   	// #0
    4f20:	mov	x3, #0x0                   	// #0
    4f24:	fmov	d0, x5
    4f28:	bfxil	x3, x4, #0, #48
    4f2c:	bfi	x3, x1, #48, #15
    4f30:	bfi	x3, x10, #63, #1
    4f34:	fmov	v0.d[1], x3
    4f38:	str	q0, [sp, #48]
    4f3c:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    4f40:	ldr	q0, [sp, #48]
    4f44:	ldp	x29, x30, [sp], #80
    4f48:	ret
    4f4c:	clz	x9, x6
    4f50:	add	x2, x9, #0x31
    4f54:	add	x9, x9, #0x40
    4f58:	cmp	x2, #0x3c
    4f5c:	b.le	4dbc <PyInit__ctypes_test@@Base+0x18a4>
    4f60:	sub	w2, w2, #0x3d
    4f64:	lsl	x4, x6, x2
    4f68:	mov	x6, #0x0                   	// #0
    4f6c:	b	4dd8 <PyInit__ctypes_test@@Base+0x18c0>
    4f70:	clz	x3, x1
    4f74:	add	x4, x3, #0x31
    4f78:	add	x0, x3, #0x40
    4f7c:	cmp	x4, #0x3c
    4f80:	b.le	4d5c <PyInit__ctypes_test@@Base+0x1844>
    4f84:	sub	w4, w4, #0x3d
    4f88:	mov	x5, #0x0                   	// #0
    4f8c:	lsl	x7, x1, x4
    4f90:	b	4d78 <PyInit__ctypes_test@@Base+0x1860>
    4f94:	and	x5, x11, #0xc00000
    4f98:	cmp	x5, #0x400, lsl #12
    4f9c:	b.eq	5098 <PyInit__ctypes_test@@Base+0x1b80>  // b.none
    4fa0:	cmp	x5, #0x800, lsl #12
    4fa4:	b.eq	5028 <PyInit__ctypes_test@@Base+0x1b10>  // b.none
    4fa8:	cbz	x5, 501c <PyInit__ctypes_test@@Base+0x1b04>
    4fac:	mov	x4, #0xffffffffffff        	// #281474976710655
    4fb0:	mov	x5, #0xffffffffffffffff    	// #-1
    4fb4:	mov	w2, #0x14                  	// #20
    4fb8:	orr	w0, w0, w2
    4fbc:	b	4f20 <PyInit__ctypes_test@@Base+0x1a08>
    4fc0:	mov	x3, x9
    4fc4:	ldp	x19, x20, [sp, #16]
    4fc8:	ldp	x21, x22, [sp, #32]
    4fcc:	b	4cc8 <PyInit__ctypes_test@@Base+0x17b0>
    4fd0:	mov	w1, #0x40                  	// #64
    4fd4:	sub	w1, w1, w2
    4fd8:	lsr	x3, x6, x2
    4fdc:	lsl	x6, x6, x1
    4fe0:	cmp	x6, #0x0
    4fe4:	lsl	x5, x4, x1
    4fe8:	cset	x1, ne  // ne = any
    4fec:	orr	x5, x5, x3
    4ff0:	lsr	x2, x4, x2
    4ff4:	orr	x5, x5, x1
    4ff8:	tst	x5, #0x7
    4ffc:	b.ne	4ebc <PyInit__ctypes_test@@Base+0x19a4>  // b.any
    5000:	tbnz	x2, #51, 5134 <PyInit__ctypes_test@@Base+0x1c1c>
    5004:	ubfx	x4, x2, #3, #48
    5008:	extr	x5, x2, x5, #3
    500c:	mov	w1, #0x0                   	// #0
    5010:	tbz	w11, #11, 4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    5014:	orr	w0, w0, #0x8
    5018:	b	4f20 <PyInit__ctypes_test@@Base+0x1a08>
    501c:	mov	w1, #0x7fff                	// #32767
    5020:	mov	x4, #0x0                   	// #0
    5024:	b	4fb4 <PyInit__ctypes_test@@Base+0x1a9c>
    5028:	cmp	x8, #0x0
    502c:	mov	w2, #0x7fff                	// #32767
    5030:	mov	x4, #0xffffffffffff        	// #281474976710655
    5034:	csel	w1, w1, w2, eq  // eq = none
    5038:	csel	x4, x4, xzr, eq  // eq = none
    503c:	csetm	x5, eq  // eq = none
    5040:	b	4fb4 <PyInit__ctypes_test@@Base+0x1a9c>
    5044:	and	x1, x6, #0xf
    5048:	cmp	x1, #0x4
    504c:	b.eq	4cfc <PyInit__ctypes_test@@Base+0x17e4>  // b.none
    5050:	adds	x6, x6, #0x4
    5054:	cinc	x4, x4, cs  // cs = hs, nlast
    5058:	b	4cfc <PyInit__ctypes_test@@Base+0x17e4>
    505c:	cbz	x8, 4cfc <PyInit__ctypes_test@@Base+0x17e4>
    5060:	adds	x6, x6, #0x8
    5064:	cinc	x4, x4, cs  // cs = hs, nlast
    5068:	b	4cfc <PyInit__ctypes_test@@Base+0x17e4>
    506c:	and	x1, x5, #0xf
    5070:	cmp	x1, #0x4
    5074:	b.eq	5080 <PyInit__ctypes_test@@Base+0x1b68>  // b.none
    5078:	adds	x5, x5, #0x4
    507c:	cinc	x2, x2, cs  // cs = hs, nlast
    5080:	tbz	x2, #51, 4edc <PyInit__ctypes_test@@Base+0x19c4>
    5084:	orr	w0, w0, #0x8
    5088:	mov	w1, #0x1                   	// #1
    508c:	mov	x4, #0x0                   	// #0
    5090:	mov	x5, #0x0                   	// #0
    5094:	b	4f20 <PyInit__ctypes_test@@Base+0x1a08>
    5098:	cmp	x8, #0x0
    509c:	mov	w2, #0x7fff                	// #32767
    50a0:	mov	x4, #0xffffffffffff        	// #281474976710655
    50a4:	csel	w1, w1, w2, ne  // ne = any
    50a8:	csel	x4, x4, xzr, ne  // ne = any
    50ac:	csetm	x5, ne  // ne = any
    50b0:	b	4fb4 <PyInit__ctypes_test@@Base+0x1a9c>
    50b4:	cbnz	x8, 4cfc <PyInit__ctypes_test@@Base+0x17e4>
    50b8:	b	5060 <PyInit__ctypes_test@@Base+0x1b48>
    50bc:	mov	x4, #0x2                   	// #2
    50c0:	cmp	x1, #0xf
    50c4:	b.ne	50e8 <PyInit__ctypes_test@@Base+0x1bd0>  // b.any
    50c8:	tbz	x7, #47, 5100 <PyInit__ctypes_test@@Base+0x1be8>
    50cc:	tbnz	x2, #47, 5100 <PyInit__ctypes_test@@Base+0x1be8>
    50d0:	orr	x4, x2, #0x800000000000
    50d4:	mov	w10, w15
    50d8:	and	x4, x4, #0xffffffffffff
    50dc:	mov	x5, x6
    50e0:	mov	w1, #0x7fff                	// #32767
    50e4:	b	4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    50e8:	cmp	x1, #0xb
    50ec:	b.ne	4a38 <PyInit__ctypes_test@@Base+0x1520>  // b.any
    50f0:	mov	x7, x2
    50f4:	mov	x5, x6
    50f8:	mov	x16, x4
    50fc:	b	4a40 <PyInit__ctypes_test@@Base+0x1528>
    5100:	orr	x4, x7, #0x800000000000
    5104:	mov	w10, w12
    5108:	and	x4, x4, #0xffffffffffff
    510c:	mov	w1, #0x7fff                	// #32767
    5110:	b	4ae0 <PyInit__ctypes_test@@Base+0x15c8>
    5114:	cbnz	x8, 5080 <PyInit__ctypes_test@@Base+0x1b68>
    5118:	adds	x5, x5, #0x8
    511c:	cinc	x2, x2, cs  // cs = hs, nlast
    5120:	tbnz	x2, #51, 5084 <PyInit__ctypes_test@@Base+0x1b6c>
    5124:	b	4edc <PyInit__ctypes_test@@Base+0x19c4>
    5128:	cbnz	x8, 5118 <PyInit__ctypes_test@@Base+0x1c00>
    512c:	tbnz	x2, #51, 5084 <PyInit__ctypes_test@@Base+0x1b6c>
    5130:	b	4edc <PyInit__ctypes_test@@Base+0x19c4>
    5134:	orr	w0, w0, #0x10
    5138:	b	5084 <PyInit__ctypes_test@@Base+0x1b6c>
    513c:	mov	x2, x4
    5140:	mov	x4, #0x3                   	// #3
    5144:	b	50c0 <PyInit__ctypes_test@@Base+0x1ba8>
    5148:	mov	w10, w15
    514c:	mov	x8, x13
    5150:	b	4a5c <PyInit__ctypes_test@@Base+0x1544>
    5154:	nop
    5158:	stp	x29, x30, [sp, #-48]!
    515c:	mov	x29, sp
    5160:	str	x19, [sp, #16]
    5164:	str	q0, [sp, #32]
    5168:	ldp	x2, x0, [sp, #32]
    516c:	mrs	x1, fpcr
    5170:	ubfx	x19, x0, #48, #15
    5174:	mov	x3, #0x3ffe                	// #16382
    5178:	ubfx	x4, x0, #0, #48
    517c:	cmp	x19, x3
    5180:	b.gt	51a8 <PyInit__ctypes_test@@Base+0x1c90>
    5184:	cbnz	x19, 5248 <PyInit__ctypes_test@@Base+0x1d30>
    5188:	orr	x2, x4, x2
    518c:	cbz	x2, 5198 <PyInit__ctypes_test@@Base+0x1c80>
    5190:	mov	w0, #0x10                  	// #16
    5194:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    5198:	mov	x0, x19
    519c:	ldr	x19, [sp, #16]
    51a0:	ldp	x29, x30, [sp], #48
    51a4:	ret
    51a8:	lsr	x1, x0, #63
    51ac:	and	w3, w1, #0xff
    51b0:	mov	x1, #0x403d                	// #16445
    51b4:	cmp	x19, x1
    51b8:	b.le	51f0 <PyInit__ctypes_test@@Base+0x1cd8>
    51bc:	mov	x0, #0x403e                	// #16446
    51c0:	and	x5, x3, #0xff
    51c4:	cmp	x19, x0
    51c8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    51cc:	csel	w1, w3, wzr, eq  // eq = none
    51d0:	add	x19, x5, x0
    51d4:	cbz	w1, 5258 <PyInit__ctypes_test@@Base+0x1d40>
    51d8:	extr	x4, x4, x2, #49
    51dc:	cbnz	x4, 5258 <PyInit__ctypes_test@@Base+0x1d40>
    51e0:	cmp	xzr, x2, lsl #15
    51e4:	b.eq	5198 <PyInit__ctypes_test@@Base+0x1c80>  // b.none
    51e8:	mov	w0, #0x10                  	// #16
    51ec:	b	5194 <PyInit__ctypes_test@@Base+0x1c7c>
    51f0:	mov	x5, #0x406f                	// #16495
    51f4:	sub	x1, x5, x19
    51f8:	mov	x0, x19
    51fc:	cmp	x1, #0x3f
    5200:	orr	x19, x4, #0x1000000000000
    5204:	b.le	5264 <PyInit__ctypes_test@@Base+0x1d4c>
    5208:	mov	w4, #0xffffc011            	// #-16367
    520c:	add	w4, w0, w4
    5210:	cmp	x1, #0x40
    5214:	mov	w1, #0x402f                	// #16431
    5218:	sub	w0, w1, w0
    521c:	lsl	x1, x19, x4
    5220:	orr	x1, x2, x1
    5224:	csel	x2, x1, x2, ne  // ne = any
    5228:	lsr	x19, x19, x0
    522c:	cmp	x2, #0x0
    5230:	cset	w0, ne  // ne = any
    5234:	cmp	w3, #0x0
    5238:	cneg	x19, x19, ne  // ne = any
    523c:	cbz	w0, 5198 <PyInit__ctypes_test@@Base+0x1c80>
    5240:	mov	w0, #0x10                  	// #16
    5244:	b	5194 <PyInit__ctypes_test@@Base+0x1c7c>
    5248:	mov	x19, #0x0                   	// #0
    524c:	mov	w0, #0x10                  	// #16
    5250:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    5254:	b	5198 <PyInit__ctypes_test@@Base+0x1c80>
    5258:	mov	w0, #0x1                   	// #1
    525c:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    5260:	b	5198 <PyInit__ctypes_test@@Base+0x1c80>
    5264:	mov	w6, #0xffffbfd1            	// #-16431
    5268:	add	w4, w0, w6
    526c:	sub	w0, w5, w0
    5270:	lsl	x1, x2, x4
    5274:	cmp	x1, #0x0
    5278:	lsr	x2, x2, x0
    527c:	cset	w0, ne  // ne = any
    5280:	lsl	x19, x19, x4
    5284:	orr	x19, x2, x19
    5288:	b	5234 <PyInit__ctypes_test@@Base+0x1d1c>
    528c:	nop
    5290:	mrs	x0, fpcr
    5294:	fmov	w0, s0
    5298:	ubfx	x2, x0, #23, #8
    529c:	and	x1, x0, #0x7fffff
    52a0:	add	x3, x2, #0x1
    52a4:	ubfx	x5, x0, #0, #23
    52a8:	tst	x3, #0xfe
    52ac:	lsr	w0, w0, #31
    52b0:	b.eq	52e0 <PyInit__ctypes_test@@Base+0x1dc8>  // b.none
    52b4:	lsl	x1, x1, #25
    52b8:	mov	w3, #0x3f80                	// #16256
    52bc:	add	w4, w2, w3
    52c0:	mov	x3, #0x0                   	// #0
    52c4:	bfxil	x3, x1, #0, #48
    52c8:	mov	x2, #0x0                   	// #0
    52cc:	fmov	d0, x2
    52d0:	bfi	x3, x4, #48, #15
    52d4:	bfi	x3, x0, #63, #1
    52d8:	fmov	v0.d[1], x3
    52dc:	ret
    52e0:	cbnz	w2, 5310 <PyInit__ctypes_test@@Base+0x1df8>
    52e4:	cbnz	x1, 535c <PyInit__ctypes_test@@Base+0x1e44>
    52e8:	mov	x1, #0x0                   	// #0
    52ec:	mov	x3, #0x0                   	// #0
    52f0:	bfxil	x3, x1, #0, #48
    52f4:	mov	w4, #0x0                   	// #0
    52f8:	mov	x2, #0x0                   	// #0
    52fc:	fmov	d0, x2
    5300:	bfi	x3, x4, #48, #15
    5304:	bfi	x3, x0, #63, #1
    5308:	fmov	v0.d[1], x3
    530c:	ret
    5310:	cbz	x1, 5398 <PyInit__ctypes_test@@Base+0x1e80>
    5314:	lsl	x1, x1, #25
    5318:	mov	x3, #0x0                   	// #0
    531c:	orr	x1, x1, #0x800000000000
    5320:	mov	x2, #0x0                   	// #0
    5324:	fmov	d0, x2
    5328:	bfxil	x3, x1, #0, #48
    532c:	orr	x3, x3, #0x7fff000000000000
    5330:	bfi	x3, x0, #63, #1
    5334:	fmov	v0.d[1], x3
    5338:	tbnz	w5, #22, 53c0 <PyInit__ctypes_test@@Base+0x1ea8>
    533c:	stp	x29, x30, [sp, #-32]!
    5340:	mov	w0, #0x1                   	// #1
    5344:	mov	x29, sp
    5348:	str	q0, [sp, #16]
    534c:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    5350:	ldr	q0, [sp, #16]
    5354:	ldp	x29, x30, [sp], #32
    5358:	ret
    535c:	clz	x4, x1
    5360:	mov	w2, #0x3fa9                	// #16297
    5364:	sub	w3, w4, #0xf
    5368:	sub	w2, w2, w4
    536c:	and	w4, w2, #0x7fff
    5370:	mov	x2, #0x0                   	// #0
    5374:	lsl	x1, x1, x3
    5378:	and	x1, x1, #0xffffffffffff
    537c:	mov	x3, #0x0                   	// #0
    5380:	fmov	d0, x2
    5384:	bfxil	x3, x1, #0, #48
    5388:	bfi	x3, x4, #48, #15
    538c:	bfi	x3, x0, #63, #1
    5390:	fmov	v0.d[1], x3
    5394:	ret
    5398:	mov	x1, #0x0                   	// #0
    539c:	mov	x3, #0x0                   	// #0
    53a0:	bfxil	x3, x1, #0, #48
    53a4:	mov	w4, #0x7fff                	// #32767
    53a8:	mov	x2, #0x0                   	// #0
    53ac:	fmov	d0, x2
    53b0:	bfi	x3, x4, #48, #15
    53b4:	bfi	x3, x0, #63, #1
    53b8:	fmov	v0.d[1], x3
    53bc:	ret
    53c0:	ret
    53c4:	nop
    53c8:	mrs	x0, fpcr
    53cc:	fmov	x0, d0
    53d0:	ubfx	x1, x0, #52, #11
    53d4:	lsr	x4, x0, #63
    53d8:	add	x2, x1, #0x1
    53dc:	and	w4, w4, #0xff
    53e0:	tst	x2, #0x7fe
    53e4:	ubfx	x0, x0, #0, #52
    53e8:	b.eq	541c <PyInit__ctypes_test@@Base+0x1f04>  // b.none
    53ec:	lsr	x5, x0, #4
    53f0:	mov	x3, #0x0                   	// #0
    53f4:	and	x5, x5, #0xffffffffffff
    53f8:	mov	w2, #0x3c00                	// #15360
    53fc:	add	w1, w1, w2
    5400:	lsl	x0, x0, #60
    5404:	bfxil	x3, x5, #0, #48
    5408:	fmov	d0, x0
    540c:	bfi	x3, x1, #48, #15
    5410:	bfi	x3, x4, #63, #1
    5414:	fmov	v0.d[1], x3
    5418:	ret
    541c:	cbnz	x1, 5470 <PyInit__ctypes_test@@Base+0x1f58>
    5420:	cbz	x0, 54bc <PyInit__ctypes_test@@Base+0x1fa4>
    5424:	clz	x2, x0
    5428:	cmp	w2, #0xe
    542c:	b.gt	5508 <PyInit__ctypes_test@@Base+0x1ff0>
    5430:	add	w1, w2, #0x31
    5434:	mov	w5, #0xf                   	// #15
    5438:	sub	w5, w5, w2
    543c:	lsr	x5, x0, x5
    5440:	lsl	x0, x0, x1
    5444:	and	x5, x5, #0xffffffffffff
    5448:	mov	w1, #0x3c0c                	// #15372
    544c:	mov	x3, #0x0                   	// #0
    5450:	sub	w1, w1, w2
    5454:	and	w1, w1, #0x7fff
    5458:	bfxil	x3, x5, #0, #48
    545c:	fmov	d0, x0
    5460:	bfi	x3, x1, #48, #15
    5464:	bfi	x3, x4, #63, #1
    5468:	fmov	v0.d[1], x3
    546c:	ret
    5470:	cbz	x0, 54e0 <PyInit__ctypes_test@@Base+0x1fc8>
    5474:	lsr	x1, x0, #4
    5478:	mov	x3, #0x0                   	// #0
    547c:	orr	x1, x1, #0x800000000000
    5480:	lsl	x2, x0, #60
    5484:	fmov	d0, x2
    5488:	bfxil	x3, x1, #0, #48
    548c:	orr	x3, x3, #0x7fff000000000000
    5490:	bfi	x3, x4, #63, #1
    5494:	fmov	v0.d[1], x3
    5498:	tbnz	x0, #51, 5504 <PyInit__ctypes_test@@Base+0x1fec>
    549c:	stp	x29, x30, [sp, #-32]!
    54a0:	mov	w0, #0x1                   	// #1
    54a4:	mov	x29, sp
    54a8:	str	q0, [sp, #16]
    54ac:	bl	5518 <PyInit__ctypes_test@@Base+0x2000>
    54b0:	ldr	q0, [sp, #16]
    54b4:	ldp	x29, x30, [sp], #32
    54b8:	ret
    54bc:	mov	x5, #0x0                   	// #0
    54c0:	mov	x3, #0x0                   	// #0
    54c4:	bfxil	x3, x5, #0, #48
    54c8:	mov	w1, #0x0                   	// #0
    54cc:	fmov	d0, x0
    54d0:	bfi	x3, x1, #48, #15
    54d4:	bfi	x3, x4, #63, #1
    54d8:	fmov	v0.d[1], x3
    54dc:	ret
    54e0:	mov	x5, #0x0                   	// #0
    54e4:	mov	x3, #0x0                   	// #0
    54e8:	bfxil	x3, x5, #0, #48
    54ec:	mov	w1, #0x7fff                	// #32767
    54f0:	fmov	d0, x0
    54f4:	bfi	x3, x1, #48, #15
    54f8:	bfi	x3, x4, #63, #1
    54fc:	fmov	v0.d[1], x3
    5500:	ret
    5504:	ret
    5508:	sub	w5, w2, #0xf
    550c:	lsl	x5, x0, x5
    5510:	mov	x0, #0x0                   	// #0
    5514:	b	5444 <PyInit__ctypes_test@@Base+0x1f2c>
    5518:	tbz	w0, #0, 5528 <PyInit__ctypes_test@@Base+0x2010>
    551c:	movi	v1.2s, #0x0
    5520:	fdiv	s0, s1, s1
    5524:	mrs	x1, fpsr
    5528:	tbz	w0, #1, 553c <PyInit__ctypes_test@@Base+0x2024>
    552c:	fmov	s1, #1.000000000000000000e+00
    5530:	movi	v2.2s, #0x0
    5534:	fdiv	s0, s1, s2
    5538:	mrs	x1, fpsr
    553c:	tbz	w0, #2, 555c <PyInit__ctypes_test@@Base+0x2044>
    5540:	mov	w2, #0xc5ae                	// #50606
    5544:	mov	w1, #0x7f7fffff            	// #2139095039
    5548:	movk	w2, #0x749d, lsl #16
    554c:	fmov	s1, w1
    5550:	fmov	s2, w2
    5554:	fadd	s0, s1, s2
    5558:	mrs	x1, fpsr
    555c:	tbz	w0, #3, 556c <PyInit__ctypes_test@@Base+0x2054>
    5560:	movi	v1.2s, #0x80, lsl #16
    5564:	fmul	s0, s1, s1
    5568:	mrs	x1, fpsr
    556c:	tbz	w0, #4, 5584 <PyInit__ctypes_test@@Base+0x206c>
    5570:	mov	w0, #0x7f7fffff            	// #2139095039
    5574:	fmov	s2, #1.000000000000000000e+00
    5578:	fmov	s1, w0
    557c:	fsub	s0, s1, s2
    5580:	mrs	x0, fpsr
    5584:	ret

Disassembly of section .fini:

0000000000005588 <.fini>:
    5588:	stp	x29, x30, [sp, #-16]!
    558c:	mov	x29, sp
    5590:	ldp	x29, x30, [sp], #16
    5594:	ret
