
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sleep_test.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_datetime2unixtime>:
   0:	sub	sp, sp, #0x60
   4:	str	x0, [sp, #8]
   8:	str	x1, [sp]
   c:	adrp	x0, 0 <grub_datetime2unixtime>
  10:	add	x0, x0, #0x0
  14:	ldr	x0, [x0]
  18:	add	x2, sp, #0x28
  1c:	mov	x3, x0
  20:	ldp	x0, x1, [x3]
  24:	stp	x0, x1, [x2]
  28:	ldr	x0, [x3, #16]
  2c:	str	x0, [x2, #16]
  30:	adrp	x0, 0 <grub_datetime2unixtime>
  34:	add	x0, x0, #0x0
  38:	ldr	x1, [x0]
  3c:	add	x0, sp, #0x18
  40:	ldr	x2, [x1]
  44:	str	x2, [x0]
  48:	ldr	w1, [x1, #8]
  4c:	str	w1, [x0, #8]
  50:	mov	w0, #0x3c                  	// #60
  54:	str	w0, [sp, #88]
  58:	ldr	w1, [sp, #88]
  5c:	mov	w0, w1
  60:	lsl	w0, w0, #4
  64:	sub	w0, w0, w1
  68:	lsl	w0, w0, #2
  6c:	str	w0, [sp, #84]
  70:	ldr	w1, [sp, #84]
  74:	mov	w0, w1
  78:	lsl	w0, w0, #1
  7c:	add	w0, w0, w1
  80:	lsl	w0, w0, #3
  84:	str	w0, [sp, #80]
  88:	ldr	w1, [sp, #80]
  8c:	mov	w0, #0x16d                 	// #365
  90:	mul	w0, w1, w0
  94:	str	w0, [sp, #76]
  98:	ldr	w0, [sp, #76]
  9c:	lsl	w0, w0, #2
  a0:	ldr	w1, [sp, #80]
  a4:	add	w0, w1, w0
  a8:	str	w0, [sp, #72]
  ac:	ldr	x0, [sp, #8]
  b0:	ldrh	w0, [x0]
  b4:	cmp	w0, #0x7f6
  b8:	b.hi	cc <grub_datetime2unixtime+0xcc>  // b.pmore
  bc:	ldr	x0, [sp, #8]
  c0:	ldrh	w0, [x0]
  c4:	cmp	w0, #0x76c
  c8:	b.hi	d4 <grub_datetime2unixtime+0xd4>  // b.pmore
  cc:	mov	w0, #0x0                   	// #0
  d0:	b	364 <grub_datetime2unixtime+0x364>
  d4:	ldr	x0, [sp, #8]
  d8:	ldrb	w0, [x0, #2]
  dc:	cmp	w0, #0xc
  e0:	b.hi	f4 <grub_datetime2unixtime+0xf4>  // b.pmore
  e4:	ldr	x0, [sp, #8]
  e8:	ldrb	w0, [x0, #2]
  ec:	cmp	w0, #0x0
  f0:	b.ne	fc <grub_datetime2unixtime+0xfc>  // b.any
  f4:	mov	w0, #0x0                   	// #0
  f8:	b	364 <grub_datetime2unixtime+0x364>
  fc:	ldr	w1, [sp, #76]
 100:	mov	w0, w1
 104:	lsl	w0, w0, #1
 108:	add	w0, w0, w1
 10c:	ldr	w1, [sp, #80]
 110:	add	w0, w1, w0
 114:	str	w0, [sp, #92]
 118:	ldr	x0, [sp, #8]
 11c:	ldrh	w0, [x0]
 120:	sub	w0, w0, #0x1
 124:	asr	w0, w0, #2
 128:	sub	w0, w0, #0x1ed
 12c:	str	w0, [sp, #68]
 130:	ldr	x0, [sp, #8]
 134:	ldrh	w0, [x0]
 138:	sub	w1, w0, #0x7b5
 13c:	ldr	w0, [sp, #68]
 140:	lsl	w0, w0, #2
 144:	sub	w0, w1, w0
 148:	str	w0, [sp, #64]
 14c:	ldr	w1, [sp, #68]
 150:	ldr	w0, [sp, #72]
 154:	mul	w0, w1, w0
 158:	ldr	w1, [sp, #92]
 15c:	add	w0, w1, w0
 160:	str	w0, [sp, #92]
 164:	ldr	w1, [sp, #64]
 168:	ldr	w0, [sp, #76]
 16c:	mul	w0, w1, w0
 170:	ldr	w1, [sp, #92]
 174:	add	w0, w1, w0
 178:	str	w0, [sp, #92]
 17c:	ldr	x0, [sp, #8]
 180:	ldrb	w0, [x0, #2]
 184:	sub	w0, w0, #0x1
 188:	sxtw	x0, w0
 18c:	lsl	x0, x0, #1
 190:	add	x1, sp, #0x28
 194:	ldrh	w0, [x1, x0]
 198:	mov	w1, w0
 19c:	ldr	w0, [sp, #80]
 1a0:	mul	w0, w1, w0
 1a4:	ldr	w1, [sp, #92]
 1a8:	add	w0, w1, w0
 1ac:	str	w0, [sp, #92]
 1b0:	ldr	w0, [sp, #64]
 1b4:	cmp	w0, #0x3
 1b8:	b.ne	1dc <grub_datetime2unixtime+0x1dc>  // b.any
 1bc:	ldr	x0, [sp, #8]
 1c0:	ldrb	w0, [x0, #2]
 1c4:	cmp	w0, #0x2
 1c8:	b.ls	1dc <grub_datetime2unixtime+0x1dc>  // b.plast
 1cc:	ldr	w1, [sp, #92]
 1d0:	ldr	w0, [sp, #80]
 1d4:	add	w0, w1, w0
 1d8:	str	w0, [sp, #92]
 1dc:	ldr	x0, [sp, #8]
 1e0:	ldrb	w0, [x0, #3]
 1e4:	sub	w1, w0, #0x1
 1e8:	ldr	w0, [sp, #80]
 1ec:	mul	w0, w1, w0
 1f0:	ldr	w1, [sp, #92]
 1f4:	add	w0, w1, w0
 1f8:	str	w0, [sp, #92]
 1fc:	ldr	x0, [sp, #8]
 200:	ldrb	w1, [x0, #3]
 204:	ldr	x0, [sp, #8]
 208:	ldrb	w0, [x0, #2]
 20c:	sub	w0, w0, #0x1
 210:	sxtw	x0, w0
 214:	add	x2, sp, #0x18
 218:	ldrb	w0, [x2, x0]
 21c:	cmp	w1, w0
 220:	b.ls	250 <grub_datetime2unixtime+0x250>  // b.plast
 224:	ldr	w0, [sp, #64]
 228:	cmp	w0, #0x0
 22c:	b.eq	260 <grub_datetime2unixtime+0x260>  // b.none
 230:	ldr	x0, [sp, #8]
 234:	ldrb	w0, [x0, #2]
 238:	cmp	w0, #0x2
 23c:	b.ne	260 <grub_datetime2unixtime+0x260>  // b.any
 240:	ldr	x0, [sp, #8]
 244:	ldrb	w0, [x0, #3]
 248:	cmp	w0, #0x1d
 24c:	b.ne	260 <grub_datetime2unixtime+0x260>  // b.any
 250:	ldr	x0, [sp, #8]
 254:	ldrb	w0, [x0, #3]
 258:	cmp	w0, #0x0
 25c:	b.ne	268 <grub_datetime2unixtime+0x268>  // b.any
 260:	mov	w0, #0x0                   	// #0
 264:	b	364 <grub_datetime2unixtime+0x364>
 268:	ldr	x0, [sp, #8]
 26c:	ldrb	w0, [x0, #4]
 270:	mov	w1, w0
 274:	ldr	w0, [sp, #84]
 278:	mul	w0, w1, w0
 27c:	ldr	w1, [sp, #92]
 280:	add	w0, w1, w0
 284:	str	w0, [sp, #92]
 288:	ldr	x0, [sp, #8]
 28c:	ldrb	w0, [x0, #4]
 290:	cmp	w0, #0x17
 294:	b.ls	2a0 <grub_datetime2unixtime+0x2a0>  // b.plast
 298:	mov	w0, #0x0                   	// #0
 29c:	b	364 <grub_datetime2unixtime+0x364>
 2a0:	ldr	x0, [sp, #8]
 2a4:	ldrb	w0, [x0, #5]
 2a8:	mov	w1, w0
 2ac:	mov	w0, w1
 2b0:	lsl	w0, w0, #4
 2b4:	sub	w0, w0, w1
 2b8:	lsl	w0, w0, #2
 2bc:	mov	w1, w0
 2c0:	ldr	w0, [sp, #92]
 2c4:	add	w0, w0, w1
 2c8:	str	w0, [sp, #92]
 2cc:	ldr	x0, [sp, #8]
 2d0:	ldrb	w0, [x0, #5]
 2d4:	cmp	w0, #0x3b
 2d8:	b.ls	2e4 <grub_datetime2unixtime+0x2e4>  // b.plast
 2dc:	mov	w0, #0x0                   	// #0
 2e0:	b	364 <grub_datetime2unixtime+0x364>
 2e4:	ldr	x0, [sp, #8]
 2e8:	ldrb	w0, [x0, #6]
 2ec:	mov	w1, w0
 2f0:	ldr	w0, [sp, #92]
 2f4:	add	w0, w0, w1
 2f8:	str	w0, [sp, #92]
 2fc:	ldr	x0, [sp, #8]
 300:	ldrb	w0, [x0, #6]
 304:	cmp	w0, #0x3c
 308:	b.ls	314 <grub_datetime2unixtime+0x314>  // b.plast
 30c:	mov	w0, #0x0                   	// #0
 310:	b	364 <grub_datetime2unixtime+0x364>
 314:	ldr	x0, [sp, #8]
 318:	ldrh	w0, [x0]
 31c:	cmp	w0, #0x7bc
 320:	b.ls	330 <grub_datetime2unixtime+0x330>  // b.plast
 324:	ldr	w0, [sp, #92]
 328:	cmp	w0, #0x0
 32c:	b.lt	34c <grub_datetime2unixtime+0x34c>  // b.tstop
 330:	ldr	x0, [sp, #8]
 334:	ldrh	w0, [x0]
 338:	cmp	w0, #0x7a7
 33c:	b.hi	354 <grub_datetime2unixtime+0x354>  // b.pmore
 340:	ldr	w0, [sp, #92]
 344:	cmp	w0, #0x0
 348:	b.le	354 <grub_datetime2unixtime+0x354>
 34c:	mov	w0, #0x0                   	// #0
 350:	b	364 <grub_datetime2unixtime+0x364>
 354:	ldr	x0, [sp]
 358:	ldr	w1, [sp, #92]
 35c:	str	w1, [x0]
 360:	mov	w0, #0x1                   	// #1
 364:	add	sp, sp, #0x60
 368:	ret
 36c:	nop
	...

0000000000000380 <sleep_test>:
 380:	stp	x29, x30, [sp, #-48]!
 384:	mov	x29, sp
 388:	str	wzr, [sp, #20]
 38c:	str	wzr, [sp, #16]
 390:	add	x0, sp, #0x20
 394:	bl	0 <grub_get_datetime>
 398:	cmp	w0, #0x0
 39c:	cset	w0, eq  // eq = none
 3a0:	and	w0, w0, #0xff
 3a4:	mov	w6, w0
 3a8:	adrp	x0, 0 <grub_datetime2unixtime>
 3ac:	add	x0, x0, #0x0
 3b0:	ldr	x5, [x0]
 3b4:	adrp	x0, 0 <grub_datetime2unixtime>
 3b8:	add	x0, x0, #0x0
 3bc:	ldr	x4, [x0]
 3c0:	mov	w3, #0x25                  	// #37
 3c4:	adrp	x0, 0 <grub_datetime2unixtime>
 3c8:	add	x0, x0, #0x0
 3cc:	ldr	x2, [x0]
 3d0:	adrp	x0, 0 <grub_datetime2unixtime>
 3d4:	add	x0, x0, #0x0
 3d8:	ldr	x1, [x0]
 3dc:	mov	w0, w6
 3e0:	bl	0 <grub_test_assert_helper>
 3e4:	mov	w0, #0x2710                	// #10000
 3e8:	bl	0 <grub_millisleep>
 3ec:	add	x0, sp, #0x18
 3f0:	bl	0 <grub_get_datetime>
 3f4:	cmp	w0, #0x0
 3f8:	cset	w0, eq  // eq = none
 3fc:	and	w0, w0, #0xff
 400:	mov	w6, w0
 404:	adrp	x0, 0 <grub_datetime2unixtime>
 408:	add	x0, x0, #0x0
 40c:	ldr	x5, [x0]
 410:	adrp	x0, 0 <grub_datetime2unixtime>
 414:	add	x0, x0, #0x0
 418:	ldr	x4, [x0]
 41c:	mov	w3, #0x27                  	// #39
 420:	adrp	x0, 0 <grub_datetime2unixtime>
 424:	add	x0, x0, #0x0
 428:	ldr	x2, [x0]
 42c:	adrp	x0, 0 <grub_datetime2unixtime>
 430:	add	x0, x0, #0x0
 434:	ldr	x1, [x0]
 438:	mov	w0, w6
 43c:	bl	0 <grub_test_assert_helper>
 440:	add	x1, sp, #0x14
 444:	add	x0, sp, #0x20
 448:	bl	0 <grub_datetime2unixtime>
 44c:	mov	w6, w0
 450:	adrp	x0, 0 <grub_datetime2unixtime>
 454:	add	x0, x0, #0x0
 458:	ldr	x5, [x0]
 45c:	adrp	x0, 0 <grub_datetime2unixtime>
 460:	add	x0, x0, #0x0
 464:	ldr	x4, [x0]
 468:	mov	w3, #0x28                  	// #40
 46c:	adrp	x0, 0 <grub_datetime2unixtime>
 470:	add	x0, x0, #0x0
 474:	ldr	x2, [x0]
 478:	adrp	x0, 0 <grub_datetime2unixtime>
 47c:	add	x0, x0, #0x0
 480:	ldr	x1, [x0]
 484:	mov	w0, w6
 488:	bl	0 <grub_test_assert_helper>
 48c:	add	x1, sp, #0x10
 490:	add	x0, sp, #0x18
 494:	bl	0 <grub_datetime2unixtime>
 498:	mov	w6, w0
 49c:	adrp	x0, 0 <grub_datetime2unixtime>
 4a0:	add	x0, x0, #0x0
 4a4:	ldr	x5, [x0]
 4a8:	adrp	x0, 0 <grub_datetime2unixtime>
 4ac:	add	x0, x0, #0x0
 4b0:	ldr	x4, [x0]
 4b4:	mov	w3, #0x29                  	// #41
 4b8:	adrp	x0, 0 <grub_datetime2unixtime>
 4bc:	add	x0, x0, #0x0
 4c0:	ldr	x2, [x0]
 4c4:	adrp	x0, 0 <grub_datetime2unixtime>
 4c8:	add	x0, x0, #0x0
 4cc:	ldr	x1, [x0]
 4d0:	mov	w0, w6
 4d4:	bl	0 <grub_test_assert_helper>
 4d8:	ldr	w1, [sp, #16]
 4dc:	ldr	w0, [sp, #20]
 4e0:	sub	w0, w1, w0
 4e4:	cmp	w0, #0x8
 4e8:	b.le	508 <sleep_test+0x188>
 4ec:	ldr	w1, [sp, #16]
 4f0:	ldr	w0, [sp, #20]
 4f4:	sub	w0, w1, w0
 4f8:	cmp	w0, #0xb
 4fc:	b.gt	508 <sleep_test+0x188>
 500:	mov	w0, #0x1                   	// #1
 504:	b	50c <sleep_test+0x18c>
 508:	mov	w0, #0x0                   	// #0
 50c:	str	w0, [sp, #44]
 510:	ldr	w1, [sp, #16]
 514:	ldr	w0, [sp, #20]
 518:	sub	w0, w1, w0
 51c:	mov	w6, w0
 520:	adrp	x0, 0 <grub_datetime2unixtime>
 524:	add	x0, x0, #0x0
 528:	ldr	x5, [x0]
 52c:	adrp	x0, 0 <grub_datetime2unixtime>
 530:	add	x0, x0, #0x0
 534:	ldr	x4, [x0]
 538:	mov	w3, #0x30                  	// #48
 53c:	adrp	x0, 0 <grub_datetime2unixtime>
 540:	add	x0, x0, #0x0
 544:	ldr	x2, [x0]
 548:	adrp	x0, 0 <grub_datetime2unixtime>
 54c:	add	x0, x0, #0x0
 550:	ldr	x1, [x0]
 554:	ldr	w0, [sp, #44]
 558:	bl	0 <grub_test_assert_helper>
 55c:	nop
 560:	ldp	x29, x30, [sp], #48
 564:	ret
	...

00000000000005c0 <grub_mod_init>:
 5c0:	stp	x29, x30, [sp, #-32]!
 5c4:	mov	x29, sp
 5c8:	str	x0, [sp, #24]
 5cc:	adrp	x0, 0 <grub_datetime2unixtime>
 5d0:	add	x0, x0, #0x0
 5d4:	ldr	x1, [x0]
 5d8:	adrp	x0, 0 <grub_datetime2unixtime>
 5dc:	add	x0, x0, #0x0
 5e0:	ldr	x0, [x0]
 5e4:	bl	0 <grub_test_register>
 5e8:	nop
 5ec:	ldp	x29, x30, [sp], #32
 5f0:	ret
 5f4:	nop
	...

0000000000000608 <grub_mod_fini>:
 608:	stp	x29, x30, [sp, #-16]!
 60c:	mov	x29, sp
 610:	adrp	x0, 0 <grub_datetime2unixtime>
 614:	add	x0, x0, #0x0
 618:	ldr	x0, [x0]
 61c:	bl	0 <grub_test_unregister>
 620:	nop
 624:	ldp	x29, x30, [sp], #16
 628:	ret
 62c:	nop
	...
