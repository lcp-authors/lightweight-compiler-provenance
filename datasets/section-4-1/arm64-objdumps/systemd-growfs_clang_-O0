
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-growfs_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000400dd0 <_init>:
  400dd0:	stp	x29, x30, [sp, #-16]!
  400dd4:	mov	x29, sp
  400dd8:	bl	401038 <call_weak_fn>
  400ddc:	ldp	x29, x30, [sp], #16
  400de0:	ret

Disassembly of section .plt:

0000000000400de8 <__libc_start_main@plt-0x20>:
  400de8:	stp	x16, x30, [sp, #-16]!
  400dec:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400df0:	ldr	x17, [x16, #3848]
  400df4:	add	x16, x16, #0xf08
  400df8:	br	x17
  400dfc:	nop
  400e00:	nop
  400e04:	nop

0000000000400e08 <__libc_start_main@plt>:
  400e08:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e0c:	ldr	x17, [x16, #3856]
  400e10:	add	x16, x16, #0xf10
  400e14:	br	x17

0000000000400e18 <abort@plt>:
  400e18:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e1c:	ldr	x17, [x16, #3864]
  400e20:	add	x16, x16, #0xf18
  400e24:	br	x17

0000000000400e28 <__gmon_start__@plt>:
  400e28:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e2c:	ldr	x17, [x16, #3872]
  400e30:	add	x16, x16, #0xf20
  400e34:	br	x17

0000000000400e38 <log_setup_service@plt>:
  400e38:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e3c:	ldr	x17, [x16, #3880]
  400e40:	add	x16, x16, #0xf28
  400e44:	br	x17

0000000000400e48 <path_is_mount_point@plt>:
  400e48:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e4c:	ldr	x17, [x16, #3888]
  400e50:	add	x16, x16, #0xf30
  400e54:	br	x17

0000000000400e58 <log_get_max_level_realm@plt>:
  400e58:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e5c:	ldr	x17, [x16, #3896]
  400e60:	add	x16, x16, #0xf38
  400e64:	br	x17

0000000000400e68 <log_internal_realm@plt>:
  400e68:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e6c:	ldr	x17, [x16, #3904]
  400e70:	add	x16, x16, #0xf40
  400e74:	br	x17

0000000000400e78 <abs@plt>:
  400e78:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e7c:	ldr	x17, [x16, #3912]
  400e80:	add	x16, x16, #0xf48
  400e84:	br	x17

0000000000400e88 <get_block_device@plt>:
  400e88:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e8c:	ldr	x17, [x16, #3920]
  400e90:	add	x16, x16, #0xf50
  400e94:	br	x17

0000000000400e98 <open64@plt>:
  400e98:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400e9c:	ldr	x17, [x16, #3928]
  400ea0:	add	x16, x16, #0xf58
  400ea4:	br	x17

0000000000400ea8 <__errno_location@plt>:
  400ea8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400eac:	ldr	x17, [x16, #3936]
  400eb0:	add	x16, x16, #0xf60
  400eb4:	br	x17

0000000000400eb8 <device_path_make_major_minor@plt>:
  400eb8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400ebc:	ldr	x17, [x16, #3944]
  400ec0:	add	x16, x16, #0xf68
  400ec4:	br	x17

0000000000400ec8 <ioctl@plt>:
  400ec8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400ecc:	ldr	x17, [x16, #3952]
  400ed0:	add	x16, x16, #0xf70
  400ed4:	br	x17

0000000000400ed8 <fstatfs64@plt>:
  400ed8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400edc:	ldr	x17, [x16, #3960]
  400ee0:	add	x16, x16, #0xf78
  400ee4:	br	x17

0000000000400ee8 <safe_close@plt>:
  400ee8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400eec:	ldr	x17, [x16, #3968]
  400ef0:	add	x16, x16, #0xf80
  400ef4:	br	x17

0000000000400ef8 <free@plt>:
  400ef8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400efc:	ldr	x17, [x16, #3976]
  400f00:	add	x16, x16, #0xf88
  400f04:	br	x17

0000000000400f08 <log_assert_failed_realm@plt>:
  400f08:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f0c:	ldr	x17, [x16, #3984]
  400f10:	add	x16, x16, #0xf90
  400f14:	br	x17

0000000000400f18 <getopt_long@plt>:
  400f18:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f1c:	ldr	x17, [x16, #3992]
  400f20:	add	x16, x16, #0xf98
  400f24:	br	x17

0000000000400f28 <version@plt>:
  400f28:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f2c:	ldr	x17, [x16, #4000]
  400f30:	add	x16, x16, #0xfa0
  400f34:	br	x17

0000000000400f38 <log_assert_failed_unreachable_realm@plt>:
  400f38:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f3c:	ldr	x17, [x16, #4008]
  400f40:	add	x16, x16, #0xfa8
  400f44:	br	x17

0000000000400f48 <get_block_device_harder@plt>:
  400f48:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f4c:	ldr	x17, [x16, #4016]
  400f50:	add	x16, x16, #0xfb0
  400f54:	br	x17

0000000000400f58 <gnu_dev_major@plt>:
  400f58:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f5c:	ldr	x17, [x16, #4024]
  400f60:	add	x16, x16, #0xfb8
  400f64:	br	x17

0000000000400f68 <gnu_dev_minor@plt>:
  400f68:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f6c:	ldr	x17, [x16, #4032]
  400f70:	add	x16, x16, #0xfc0
  400f74:	br	x17

0000000000400f78 <probe_filesystem@plt>:
  400f78:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f7c:	ldr	x17, [x16, #4040]
  400f80:	add	x16, x16, #0xfc8
  400f84:	br	x17

0000000000400f88 <memset@plt>:
  400f88:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f8c:	ldr	x17, [x16, #4048]
  400f90:	add	x16, x16, #0xfd0
  400f94:	br	x17

0000000000400f98 <snprintf@plt>:
  400f98:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400f9c:	ldr	x17, [x16, #4056]
  400fa0:	add	x16, x16, #0xfd8
  400fa4:	br	x17

0000000000400fa8 <format_bytes_full@plt>:
  400fa8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400fac:	ldr	x17, [x16, #4064]
  400fb0:	add	x16, x16, #0xfe0
  400fb4:	br	x17

0000000000400fb8 <terminal_urlify_man@plt>:
  400fb8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400fbc:	ldr	x17, [x16, #4072]
  400fc0:	add	x16, x16, #0xfe8
  400fc4:	br	x17

0000000000400fc8 <log_oom_internal@plt>:
  400fc8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400fcc:	ldr	x17, [x16, #4080]
  400fd0:	add	x16, x16, #0xff0
  400fd4:	br	x17

0000000000400fd8 <printf@plt>:
  400fd8:	adrp	x16, 41f000 <__FRAME_END__+0x1be70>
  400fdc:	ldr	x17, [x16, #4088]
  400fe0:	add	x16, x16, #0xff8
  400fe4:	br	x17

Disassembly of section .text:

0000000000400fe8 <_start>:
  400fe8:	mov	x29, #0x0                   	// #0
  400fec:	mov	x30, #0x0                   	// #0
  400ff0:	mov	x5, x0
  400ff4:	ldr	x1, [sp]
  400ff8:	add	x2, sp, #0x8
  400ffc:	mov	x6, sp
  401000:	movz	x0, #0x0, lsl #48
  401004:	movk	x0, #0x0, lsl #32
  401008:	movk	x0, #0x40, lsl #16
  40100c:	movk	x0, #0x11b0
  401010:	movz	x3, #0x0, lsl #48
  401014:	movk	x3, #0x0, lsl #32
  401018:	movk	x3, #0x40, lsl #16
  40101c:	movk	x3, #0x2920
  401020:	movz	x4, #0x0, lsl #48
  401024:	movk	x4, #0x0, lsl #32
  401028:	movk	x4, #0x40, lsl #16
  40102c:	movk	x4, #0x29a0
  401030:	bl	400e08 <__libc_start_main@plt>
  401034:	bl	400e18 <abort@plt>

0000000000401038 <call_weak_fn>:
  401038:	adrp	x0, 41f000 <__FRAME_END__+0x1be70>
  40103c:	ldr	x0, [x0, #3824]
  401040:	cbz	x0, 401048 <call_weak_fn+0x10>
  401044:	b	400e28 <__gmon_start__@plt>
  401048:	ret

000000000040104c <deregister_tm_clones>:
  40104c:	stp	x29, x30, [sp, #-32]!
  401050:	mov	x29, sp
  401054:	adrp	x0, 420000 <completed.8445>
  401058:	add	x0, x0, #0x0
  40105c:	str	x0, [sp, #24]
  401060:	ldr	x0, [sp, #24]
  401064:	str	x0, [sp, #24]
  401068:	ldr	x1, [sp, #24]
  40106c:	adrp	x0, 420000 <completed.8445>
  401070:	add	x0, x0, #0x0
  401074:	cmp	x1, x0
  401078:	b.eq	4010b4 <deregister_tm_clones+0x68>  // b.none
  40107c:	adrp	x0, 402000 <maybe_resize_slave_device+0x140>
  401080:	add	x0, x0, #0x9b8
  401084:	ldr	x0, [x0]
  401088:	str	x0, [sp, #16]
  40108c:	ldr	x0, [sp, #16]
  401090:	str	x0, [sp, #16]
  401094:	ldr	x0, [sp, #16]
  401098:	cmp	x0, #0x0
  40109c:	b.eq	4010b8 <deregister_tm_clones+0x6c>  // b.none
  4010a0:	ldr	x1, [sp, #16]
  4010a4:	adrp	x0, 420000 <completed.8445>
  4010a8:	add	x0, x0, #0x0
  4010ac:	blr	x1
  4010b0:	b	4010b8 <deregister_tm_clones+0x6c>
  4010b4:	nop
  4010b8:	ldp	x29, x30, [sp], #32
  4010bc:	ret

00000000004010c0 <register_tm_clones>:
  4010c0:	stp	x29, x30, [sp, #-48]!
  4010c4:	mov	x29, sp
  4010c8:	adrp	x0, 420000 <completed.8445>
  4010cc:	add	x0, x0, #0x0
  4010d0:	str	x0, [sp, #40]
  4010d4:	ldr	x0, [sp, #40]
  4010d8:	str	x0, [sp, #40]
  4010dc:	ldr	x1, [sp, #40]
  4010e0:	adrp	x0, 420000 <completed.8445>
  4010e4:	add	x0, x0, #0x0
  4010e8:	sub	x0, x1, x0
  4010ec:	asr	x0, x0, #3
  4010f0:	lsr	x1, x0, #63
  4010f4:	add	x0, x1, x0
  4010f8:	asr	x0, x0, #1
  4010fc:	str	x0, [sp, #32]
  401100:	ldr	x0, [sp, #32]
  401104:	cmp	x0, #0x0
  401108:	b.eq	401148 <register_tm_clones+0x88>  // b.none
  40110c:	adrp	x0, 402000 <maybe_resize_slave_device+0x140>
  401110:	add	x0, x0, #0x9c0
  401114:	ldr	x0, [x0]
  401118:	str	x0, [sp, #24]
  40111c:	ldr	x0, [sp, #24]
  401120:	str	x0, [sp, #24]
  401124:	ldr	x0, [sp, #24]
  401128:	cmp	x0, #0x0
  40112c:	b.eq	40114c <register_tm_clones+0x8c>  // b.none
  401130:	ldr	x2, [sp, #24]
  401134:	ldr	x1, [sp, #32]
  401138:	adrp	x0, 420000 <completed.8445>
  40113c:	add	x0, x0, #0x0
  401140:	blr	x2
  401144:	b	40114c <register_tm_clones+0x8c>
  401148:	nop
  40114c:	ldp	x29, x30, [sp], #48
  401150:	ret

0000000000401154 <__do_global_dtors_aux>:
  401154:	stp	x29, x30, [sp, #-16]!
  401158:	mov	x29, sp
  40115c:	adrp	x0, 420000 <completed.8445>
  401160:	add	x0, x0, #0x0
  401164:	ldrb	w0, [x0]
  401168:	and	x0, x0, #0xff
  40116c:	cmp	x0, #0x0
  401170:	b.ne	40118c <__do_global_dtors_aux+0x38>  // b.any
  401174:	bl	40104c <deregister_tm_clones>
  401178:	adrp	x0, 420000 <completed.8445>
  40117c:	add	x0, x0, #0x0
  401180:	mov	w1, #0x1                   	// #1
  401184:	strb	w1, [x0]
  401188:	b	401190 <__do_global_dtors_aux+0x3c>
  40118c:	nop
  401190:	ldp	x29, x30, [sp], #16
  401194:	ret

0000000000401198 <frame_dummy>:
  401198:	stp	x29, x30, [sp, #-16]!
  40119c:	mov	x29, sp
  4011a0:	bl	4010c0 <register_tm_clones>
  4011a4:	nop
  4011a8:	ldp	x29, x30, [sp], #16
  4011ac:	ret

00000000004011b0 <main>:
  4011b0:	stp	x29, x30, [sp, #-32]!
  4011b4:	str	x28, [sp, #16]
  4011b8:	mov	x29, sp
  4011bc:	sub	sp, sp, #0x210
  4011c0:	sub	x8, x29, #0xb8
  4011c4:	mov	w9, #0xffffffff            	// #-1
  4011c8:	mov	x10, xzr
  4011cc:	adrp	x11, 420000 <completed.8445>
  4011d0:	add	x11, x11, #0x8
  4011d4:	adrp	x12, 402000 <maybe_resize_slave_device+0x140>
  4011d8:	add	x12, x12, #0x9c8
  4011dc:	add	x12, x12, #0x3
  4011e0:	adrp	x13, 402000 <maybe_resize_slave_device+0x140>
  4011e4:	add	x13, x13, #0x9e2
  4011e8:	stur	wzr, [x29, #-4]
  4011ec:	stur	w0, [x29, #-8]
  4011f0:	str	x1, [x8, #168]
  4011f4:	stur	w9, [x29, #-20]
  4011f8:	stur	w9, [x29, #-24]
  4011fc:	str	x10, [x8, #152]
  401200:	str	x8, [sp, #128]
  401204:	str	x11, [sp, #120]
  401208:	str	x12, [sp, #112]
  40120c:	str	x13, [sp, #104]
  401210:	bl	400e38 <log_setup_service@plt>
  401214:	ldur	w0, [x29, #-8]
  401218:	ldr	x8, [sp, #128]
  40121c:	ldr	x1, [x8, #168]
  401220:	bl	401c2c <parse_argv>
  401224:	stur	w0, [x29, #-192]
  401228:	ldur	w9, [x29, #-192]
  40122c:	cmp	w9, #0x0
  401230:	cset	w9, ge  // ge = tcont
  401234:	tbnz	w9, #0, 401248 <main+0x98>
  401238:	mov	w8, #0x1                   	// #1
  40123c:	stur	w8, [x29, #-4]
  401240:	stur	w8, [x29, #-196]
  401244:	b	401bb0 <main+0xa00>
  401248:	ldur	w8, [x29, #-192]
  40124c:	cbnz	w8, 401260 <main+0xb0>
  401250:	stur	wzr, [x29, #-4]
  401254:	mov	w8, #0x1                   	// #1
  401258:	stur	w8, [x29, #-196]
  40125c:	b	401bb0 <main+0xa00>
  401260:	ldr	x8, [sp, #120]
  401264:	ldr	x0, [x8]
  401268:	mov	x9, xzr
  40126c:	mov	x1, x9
  401270:	mov	w10, wzr
  401274:	mov	w2, w10
  401278:	bl	400e48 <path_is_mount_point@plt>
  40127c:	stur	w0, [x29, #-192]
  401280:	ldur	w10, [x29, #-192]
  401284:	cmp	w10, #0x0
  401288:	cset	w10, ge  // ge = tcont
  40128c:	tbnz	w10, #0, 401320 <main+0x170>
  401290:	mov	w8, #0x3                   	// #3
  401294:	stur	w8, [x29, #-200]
  401298:	ldur	w8, [x29, #-192]
  40129c:	stur	w8, [x29, #-204]
  4012a0:	stur	wzr, [x29, #-208]
  4012a4:	ldur	w0, [x29, #-208]
  4012a8:	bl	400e58 <log_get_max_level_realm@plt>
  4012ac:	ldur	w8, [x29, #-200]
  4012b0:	and	w8, w8, #0x7
  4012b4:	cmp	w0, w8
  4012b8:	b.lt	4012f4 <main+0x144>  // b.tstop
  4012bc:	ldur	w8, [x29, #-208]
  4012c0:	ldur	w9, [x29, #-200]
  4012c4:	orr	w0, w9, w8, lsl #10
  4012c8:	ldur	w1, [x29, #-204]
  4012cc:	ldr	x10, [sp, #120]
  4012d0:	ldr	x6, [x10]
  4012d4:	ldr	x2, [sp, #112]
  4012d8:	mov	w3, #0xfe                  	// #254
  4012dc:	ldr	x4, [sp, #104]
  4012e0:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  4012e4:	add	x5, x5, #0x9e7
  4012e8:	bl	400e68 <log_internal_realm@plt>
  4012ec:	str	w0, [sp, #100]
  4012f0:	b	401308 <main+0x158>
  4012f4:	ldur	w0, [x29, #-204]
  4012f8:	bl	400e78 <abs@plt>
  4012fc:	mov	w8, wzr
  401300:	subs	w8, w8, w0, uxtb
  401304:	str	w8, [sp, #100]
  401308:	ldr	w8, [sp, #100]
  40130c:	stur	w8, [x29, #-212]
  401310:	mov	w8, #0x1                   	// #1
  401314:	stur	w8, [x29, #-4]
  401318:	stur	w8, [x29, #-196]
  40131c:	b	401bb0 <main+0xa00>
  401320:	ldur	w8, [x29, #-192]
  401324:	cbnz	w8, 4013b8 <main+0x208>
  401328:	mov	w8, #0x3                   	// #3
  40132c:	stur	w8, [x29, #-216]
  401330:	ldur	w8, [x29, #-192]
  401334:	stur	w8, [x29, #-220]
  401338:	stur	wzr, [x29, #-224]
  40133c:	ldur	w0, [x29, #-224]
  401340:	bl	400e58 <log_get_max_level_realm@plt>
  401344:	ldur	w8, [x29, #-216]
  401348:	and	w8, w8, #0x7
  40134c:	cmp	w0, w8
  401350:	b.lt	40138c <main+0x1dc>  // b.tstop
  401354:	ldur	w8, [x29, #-224]
  401358:	ldur	w9, [x29, #-216]
  40135c:	orr	w0, w9, w8, lsl #10
  401360:	ldur	w1, [x29, #-220]
  401364:	ldr	x10, [sp, #120]
  401368:	ldr	x6, [x10]
  40136c:	ldr	x2, [sp, #112]
  401370:	mov	w3, #0x102                 	// #258
  401374:	ldr	x4, [sp, #104]
  401378:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  40137c:	add	x5, x5, #0xa14
  401380:	bl	400e68 <log_internal_realm@plt>
  401384:	str	w0, [sp, #96]
  401388:	b	4013a0 <main+0x1f0>
  40138c:	ldur	w0, [x29, #-220]
  401390:	bl	400e78 <abs@plt>
  401394:	mov	w8, wzr
  401398:	subs	w8, w8, w0, uxtb
  40139c:	str	w8, [sp, #96]
  4013a0:	ldr	w8, [sp, #96]
  4013a4:	stur	w8, [x29, #-228]
  4013a8:	mov	w8, #0x1                   	// #1
  4013ac:	stur	w8, [x29, #-4]
  4013b0:	stur	w8, [x29, #-196]
  4013b4:	b	401bb0 <main+0xa00>
  4013b8:	ldr	x8, [sp, #120]
  4013bc:	ldr	x0, [x8]
  4013c0:	sub	x1, x29, #0xb8
  4013c4:	bl	400e88 <get_block_device@plt>
  4013c8:	stur	w0, [x29, #-192]
  4013cc:	ldur	w9, [x29, #-192]
  4013d0:	cmp	w9, #0x0
  4013d4:	cset	w9, ge  // ge = tcont
  4013d8:	tbnz	w9, #0, 40146c <main+0x2bc>
  4013dc:	mov	w8, #0x3                   	// #3
  4013e0:	stur	w8, [x29, #-232]
  4013e4:	ldur	w8, [x29, #-192]
  4013e8:	stur	w8, [x29, #-236]
  4013ec:	stur	wzr, [x29, #-240]
  4013f0:	ldur	w0, [x29, #-240]
  4013f4:	bl	400e58 <log_get_max_level_realm@plt>
  4013f8:	ldur	w8, [x29, #-232]
  4013fc:	and	w8, w8, #0x7
  401400:	cmp	w0, w8
  401404:	b.lt	401440 <main+0x290>  // b.tstop
  401408:	ldur	w8, [x29, #-240]
  40140c:	ldur	w9, [x29, #-232]
  401410:	orr	w0, w9, w8, lsl #10
  401414:	ldur	w1, [x29, #-236]
  401418:	ldr	x10, [sp, #120]
  40141c:	ldr	x6, [x10]
  401420:	ldr	x2, [sp, #112]
  401424:	mov	w3, #0x108                 	// #264
  401428:	ldr	x4, [sp, #104]
  40142c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401430:	add	x5, x5, #0xa32
  401434:	bl	400e68 <log_internal_realm@plt>
  401438:	str	w0, [sp, #92]
  40143c:	b	401454 <main+0x2a4>
  401440:	ldur	w0, [x29, #-236]
  401444:	bl	400e78 <abs@plt>
  401448:	mov	w8, wzr
  40144c:	subs	w8, w8, w0, uxtb
  401450:	str	w8, [sp, #92]
  401454:	ldr	w8, [sp, #92]
  401458:	stur	w8, [x29, #-244]
  40145c:	mov	w8, #0x1                   	// #1
  401460:	stur	w8, [x29, #-4]
  401464:	stur	w8, [x29, #-196]
  401468:	b	401bb0 <main+0xa00>
  40146c:	ldr	x8, [sp, #120]
  401470:	ldr	x0, [x8]
  401474:	ldr	x9, [sp, #128]
  401478:	ldr	x1, [x9]
  40147c:	bl	401ec0 <maybe_resize_slave_device>
  401480:	stur	w0, [x29, #-192]
  401484:	ldur	w10, [x29, #-192]
  401488:	cmp	w10, #0x0
  40148c:	cset	w10, ge  // ge = tcont
  401490:	tbnz	w10, #0, 4014a4 <main+0x2f4>
  401494:	mov	w8, #0x1                   	// #1
  401498:	stur	w8, [x29, #-4]
  40149c:	stur	w8, [x29, #-196]
  4014a0:	b	401bb0 <main+0xa00>
  4014a4:	ldr	x8, [sp, #120]
  4014a8:	ldr	x0, [x8]
  4014ac:	mov	w1, #0x80000               	// #524288
  4014b0:	bl	400e98 <open64@plt>
  4014b4:	stur	w0, [x29, #-20]
  4014b8:	ldur	w9, [x29, #-20]
  4014bc:	cmp	w9, #0x0
  4014c0:	cset	w9, ge  // ge = tcont
  4014c4:	tbnz	w9, #0, 40155c <main+0x3ac>
  4014c8:	mov	w8, #0x3                   	// #3
  4014cc:	stur	w8, [x29, #-248]
  4014d0:	bl	400ea8 <__errno_location@plt>
  4014d4:	ldr	w8, [x0]
  4014d8:	stur	w8, [x29, #-252]
  4014dc:	stur	wzr, [x29, #-256]
  4014e0:	ldur	w0, [x29, #-256]
  4014e4:	bl	400e58 <log_get_max_level_realm@plt>
  4014e8:	ldur	w8, [x29, #-248]
  4014ec:	and	w8, w8, #0x7
  4014f0:	cmp	w0, w8
  4014f4:	b.lt	401530 <main+0x380>  // b.tstop
  4014f8:	ldur	w8, [x29, #-256]
  4014fc:	ldur	w9, [x29, #-248]
  401500:	orr	w0, w9, w8, lsl #10
  401504:	ldur	w1, [x29, #-252]
  401508:	ldr	x10, [sp, #120]
  40150c:	ldr	x6, [x10]
  401510:	ldr	x2, [sp, #112]
  401514:	mov	w3, #0x112                 	// #274
  401518:	ldr	x4, [sp, #104]
  40151c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401520:	add	x5, x5, #0xa5f
  401524:	bl	400e68 <log_internal_realm@plt>
  401528:	str	w0, [sp, #88]
  40152c:	b	401544 <main+0x394>
  401530:	ldur	w0, [x29, #-252]
  401534:	bl	400e78 <abs@plt>
  401538:	mov	w8, wzr
  40153c:	subs	w8, w8, w0, uxtb
  401540:	str	w8, [sp, #88]
  401544:	ldr	w8, [sp, #88]
  401548:	str	w8, [sp, #268]
  40154c:	mov	w8, #0x1                   	// #1
  401550:	stur	w8, [x29, #-4]
  401554:	stur	w8, [x29, #-196]
  401558:	b	401bb0 <main+0xa00>
  40155c:	ldr	x8, [sp, #128]
  401560:	ldr	x1, [x8]
  401564:	mov	w0, #0x6000                	// #24576
  401568:	sub	x2, x29, #0x20
  40156c:	bl	400eb8 <device_path_make_major_minor@plt>
  401570:	stur	w0, [x29, #-192]
  401574:	ldur	w9, [x29, #-192]
  401578:	cmp	w9, #0x0
  40157c:	cset	w9, ge  // ge = tcont
  401580:	tbnz	w9, #0, 40160c <main+0x45c>
  401584:	mov	w8, #0x3                   	// #3
  401588:	str	w8, [sp, #264]
  40158c:	ldur	w8, [x29, #-192]
  401590:	str	w8, [sp, #260]
  401594:	str	wzr, [sp, #256]
  401598:	ldr	w0, [sp, #256]
  40159c:	bl	400e58 <log_get_max_level_realm@plt>
  4015a0:	ldr	w8, [sp, #264]
  4015a4:	and	w8, w8, #0x7
  4015a8:	cmp	w0, w8
  4015ac:	b.lt	4015e0 <main+0x430>  // b.tstop
  4015b0:	ldr	w8, [sp, #256]
  4015b4:	ldr	w9, [sp, #264]
  4015b8:	orr	w0, w9, w8, lsl #10
  4015bc:	ldr	w1, [sp, #260]
  4015c0:	ldr	x2, [sp, #112]
  4015c4:	mov	w3, #0x118                 	// #280
  4015c8:	ldr	x4, [sp, #104]
  4015cc:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  4015d0:	add	x5, x5, #0xa77
  4015d4:	bl	400e68 <log_internal_realm@plt>
  4015d8:	str	w0, [sp, #84]
  4015dc:	b	4015f4 <main+0x444>
  4015e0:	ldr	w0, [sp, #260]
  4015e4:	bl	400e78 <abs@plt>
  4015e8:	mov	w8, wzr
  4015ec:	subs	w8, w8, w0, uxtb
  4015f0:	str	w8, [sp, #84]
  4015f4:	ldr	w8, [sp, #84]
  4015f8:	str	w8, [sp, #252]
  4015fc:	mov	w8, #0x1                   	// #1
  401600:	stur	w8, [x29, #-4]
  401604:	stur	w8, [x29, #-196]
  401608:	b	401bb0 <main+0xa00>
  40160c:	ldr	x8, [sp, #128]
  401610:	ldr	x0, [x8, #152]
  401614:	mov	w1, #0x80000               	// #524288
  401618:	bl	400e98 <open64@plt>
  40161c:	stur	w0, [x29, #-24]
  401620:	ldur	w9, [x29, #-24]
  401624:	cmp	w9, #0x0
  401628:	cset	w9, ge  // ge = tcont
  40162c:	tbnz	w9, #0, 4016c4 <main+0x514>
  401630:	mov	w8, #0x3                   	// #3
  401634:	str	w8, [sp, #248]
  401638:	bl	400ea8 <__errno_location@plt>
  40163c:	ldr	w8, [x0]
  401640:	str	w8, [sp, #244]
  401644:	str	wzr, [sp, #240]
  401648:	ldr	w0, [sp, #240]
  40164c:	bl	400e58 <log_get_max_level_realm@plt>
  401650:	ldr	w8, [sp, #248]
  401654:	and	w8, w8, #0x7
  401658:	cmp	w0, w8
  40165c:	b.lt	401698 <main+0x4e8>  // b.tstop
  401660:	ldr	w8, [sp, #240]
  401664:	ldr	w9, [sp, #248]
  401668:	orr	w0, w9, w8, lsl #10
  40166c:	ldr	w1, [sp, #244]
  401670:	ldr	x10, [sp, #128]
  401674:	ldr	x6, [x10, #152]
  401678:	ldr	x2, [sp, #112]
  40167c:	mov	w3, #0x11e                 	// #286
  401680:	ldr	x4, [sp, #104]
  401684:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401688:	add	x5, x5, #0xa5f
  40168c:	bl	400e68 <log_internal_realm@plt>
  401690:	str	w0, [sp, #80]
  401694:	b	4016ac <main+0x4fc>
  401698:	ldr	w0, [sp, #244]
  40169c:	bl	400e78 <abs@plt>
  4016a0:	mov	w8, wzr
  4016a4:	subs	w8, w8, w0, uxtb
  4016a8:	str	w8, [sp, #80]
  4016ac:	ldr	w8, [sp, #80]
  4016b0:	str	w8, [sp, #236]
  4016b4:	mov	w8, #0x1                   	// #1
  4016b8:	stur	w8, [x29, #-4]
  4016bc:	stur	w8, [x29, #-196]
  4016c0:	b	401bb0 <main+0xa00>
  4016c4:	ldur	w0, [x29, #-24]
  4016c8:	mov	x1, #0x1270                	// #4720
  4016cc:	movk	x1, #0x8008, lsl #16
  4016d0:	sub	x2, x29, #0xbc
  4016d4:	bl	400ec8 <ioctl@plt>
  4016d8:	cbz	w0, 401770 <main+0x5c0>
  4016dc:	mov	w8, #0x3                   	// #3
  4016e0:	str	w8, [sp, #232]
  4016e4:	bl	400ea8 <__errno_location@plt>
  4016e8:	ldr	w8, [x0]
  4016ec:	str	w8, [sp, #228]
  4016f0:	str	wzr, [sp, #224]
  4016f4:	ldr	w0, [sp, #224]
  4016f8:	bl	400e58 <log_get_max_level_realm@plt>
  4016fc:	ldr	w8, [sp, #232]
  401700:	and	w8, w8, #0x7
  401704:	cmp	w0, w8
  401708:	b.lt	401744 <main+0x594>  // b.tstop
  40170c:	ldr	w8, [sp, #224]
  401710:	ldr	w9, [sp, #232]
  401714:	orr	w0, w9, w8, lsl #10
  401718:	ldr	w1, [sp, #228]
  40171c:	ldr	x10, [sp, #128]
  401720:	ldr	x6, [x10, #152]
  401724:	ldr	x2, [sp, #112]
  401728:	mov	w3, #0x123                 	// #291
  40172c:	ldr	x4, [sp, #104]
  401730:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401734:	add	x5, x5, #0xaa4
  401738:	bl	400e68 <log_internal_realm@plt>
  40173c:	str	w0, [sp, #76]
  401740:	b	401758 <main+0x5a8>
  401744:	ldr	w0, [sp, #228]
  401748:	bl	400e78 <abs@plt>
  40174c:	mov	w8, wzr
  401750:	subs	w8, w8, w0, uxtb
  401754:	str	w8, [sp, #76]
  401758:	ldr	w8, [sp, #76]
  40175c:	str	w8, [sp, #220]
  401760:	mov	w8, #0x1                   	// #1
  401764:	stur	w8, [x29, #-4]
  401768:	stur	w8, [x29, #-196]
  40176c:	b	401bb0 <main+0xa00>
  401770:	ldur	w0, [x29, #-24]
  401774:	mov	x1, #0x1272                	// #4722
  401778:	movk	x1, #0x8008, lsl #16
  40177c:	sub	x2, x29, #0x28
  401780:	bl	400ec8 <ioctl@plt>
  401784:	cbz	w0, 40181c <main+0x66c>
  401788:	mov	w8, #0x3                   	// #3
  40178c:	str	w8, [sp, #216]
  401790:	bl	400ea8 <__errno_location@plt>
  401794:	ldr	w8, [x0]
  401798:	str	w8, [sp, #212]
  40179c:	str	wzr, [sp, #208]
  4017a0:	ldr	w0, [sp, #208]
  4017a4:	bl	400e58 <log_get_max_level_realm@plt>
  4017a8:	ldr	w8, [sp, #216]
  4017ac:	and	w8, w8, #0x7
  4017b0:	cmp	w0, w8
  4017b4:	b.lt	4017f0 <main+0x640>  // b.tstop
  4017b8:	ldr	w8, [sp, #208]
  4017bc:	ldr	w9, [sp, #216]
  4017c0:	orr	w0, w9, w8, lsl #10
  4017c4:	ldr	w1, [sp, #212]
  4017c8:	ldr	x10, [sp, #128]
  4017cc:	ldr	x6, [x10, #152]
  4017d0:	ldr	x2, [sp, #112]
  4017d4:	mov	w3, #0x128                 	// #296
  4017d8:	ldr	x4, [sp, #104]
  4017dc:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  4017e0:	add	x5, x5, #0xacb
  4017e4:	bl	400e68 <log_internal_realm@plt>
  4017e8:	str	w0, [sp, #72]
  4017ec:	b	401804 <main+0x654>
  4017f0:	ldr	w0, [sp, #212]
  4017f4:	bl	400e78 <abs@plt>
  4017f8:	mov	w8, wzr
  4017fc:	subs	w8, w8, w0, uxtb
  401800:	str	w8, [sp, #72]
  401804:	ldr	w8, [sp, #72]
  401808:	str	w8, [sp, #204]
  40180c:	mov	w8, #0x1                   	// #1
  401810:	stur	w8, [x29, #-4]
  401814:	stur	w8, [x29, #-196]
  401818:	b	401bb0 <main+0xa00>
  40181c:	ldr	x8, [sp, #128]
  401820:	ldr	x9, [x8, #144]
  401824:	ldursw	x10, [x29, #-188]
  401828:	udiv	x11, x9, x10
  40182c:	mul	x10, x11, x10
  401830:	subs	x9, x9, x10
  401834:	cbz	x9, 4018d4 <main+0x724>
  401838:	mov	w8, #0x5                   	// #5
  40183c:	str	w8, [sp, #200]
  401840:	str	wzr, [sp, #196]
  401844:	str	wzr, [sp, #192]
  401848:	ldr	w0, [sp, #192]
  40184c:	bl	400e58 <log_get_max_level_realm@plt>
  401850:	ldr	w8, [sp, #200]
  401854:	and	w8, w8, #0x7
  401858:	cmp	w0, w8
  40185c:	b.lt	4018b8 <main+0x708>  // b.tstop
  401860:	ldr	w8, [sp, #192]
  401864:	ldr	w9, [sp, #200]
  401868:	orr	w0, w9, w8, lsl #10
  40186c:	ldr	w1, [sp, #196]
  401870:	ldr	x10, [sp, #128]
  401874:	ldr	x6, [x10, #144]
  401878:	ldur	w7, [x29, #-188]
  40187c:	ldr	x11, [x10, #144]
  401880:	ldursw	x12, [x29, #-188]
  401884:	udiv	x13, x11, x12
  401888:	mul	x12, x13, x12
  40188c:	subs	x11, x11, x12
  401890:	ldr	x2, [sp, #112]
  401894:	mov	w3, #0x12e                 	// #302
  401898:	ldr	x4, [sp, #104]
  40189c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  4018a0:	add	x5, x5, #0xaec
  4018a4:	mov	x12, sp
  4018a8:	str	x11, [x12]
  4018ac:	bl	400e68 <log_internal_realm@plt>
  4018b0:	str	w0, [sp, #68]
  4018b4:	b	4018cc <main+0x71c>
  4018b8:	ldr	w0, [sp, #196]
  4018bc:	bl	400e78 <abs@plt>
  4018c0:	mov	w8, wzr
  4018c4:	subs	w8, w8, w0, uxtb
  4018c8:	str	w8, [sp, #68]
  4018cc:	ldr	w8, [sp, #68]
  4018d0:	str	w8, [sp, #188]
  4018d4:	ldr	x8, [sp, #128]
  4018d8:	ldr	x9, [x8, #144]
  4018dc:	ldursw	x10, [x29, #-188]
  4018e0:	udiv	x9, x9, x10
  4018e4:	str	x9, [x8, #136]
  4018e8:	ldur	w0, [x29, #-20]
  4018ec:	sub	x1, x29, #0xb0
  4018f0:	bl	400ed8 <fstatfs64@plt>
  4018f4:	cmp	w0, #0x0
  4018f8:	cset	w11, ge  // ge = tcont
  4018fc:	tbnz	w11, #0, 401994 <main+0x7e4>
  401900:	mov	w8, #0x3                   	// #3
  401904:	str	w8, [sp, #184]
  401908:	bl	400ea8 <__errno_location@plt>
  40190c:	ldr	w8, [x0]
  401910:	str	w8, [sp, #180]
  401914:	str	wzr, [sp, #176]
  401918:	ldr	w0, [sp, #176]
  40191c:	bl	400e58 <log_get_max_level_realm@plt>
  401920:	ldr	w8, [sp, #184]
  401924:	and	w8, w8, #0x7
  401928:	cmp	w0, w8
  40192c:	b.lt	401968 <main+0x7b8>  // b.tstop
  401930:	ldr	w8, [sp, #176]
  401934:	ldr	w9, [sp, #184]
  401938:	orr	w0, w9, w8, lsl #10
  40193c:	ldr	w1, [sp, #180]
  401940:	ldr	x10, [sp, #120]
  401944:	ldr	x6, [x10]
  401948:	ldr	x2, [sp, #112]
  40194c:	mov	w3, #0x133                 	// #307
  401950:	ldr	x4, [sp, #104]
  401954:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401958:	add	x5, x5, #0xb39
  40195c:	bl	400e68 <log_internal_realm@plt>
  401960:	str	w0, [sp, #64]
  401964:	b	40197c <main+0x7cc>
  401968:	ldr	w0, [sp, #180]
  40196c:	bl	400e78 <abs@plt>
  401970:	mov	w8, wzr
  401974:	subs	w8, w8, w0, uxtb
  401978:	str	w8, [sp, #64]
  40197c:	ldr	w8, [sp, #64]
  401980:	str	w8, [sp, #172]
  401984:	mov	w8, #0x1                   	// #1
  401988:	stur	w8, [x29, #-4]
  40198c:	stur	w8, [x29, #-196]
  401990:	b	401bb0 <main+0xa00>
  401994:	ldr	x8, [sp, #128]
  401998:	ldr	x9, [x8, #8]
  40199c:	mov	x10, #0xef53                	// #61267
  4019a0:	cmp	x9, x10
  4019a4:	str	x9, [sp, #56]
  4019a8:	b.eq	4019c8 <main+0x818>  // b.none
  4019ac:	b	4019b0 <main+0x800>
  4019b0:	mov	x8, #0x683e                	// #26686
  4019b4:	movk	x8, #0x9123, lsl #16
  4019b8:	ldr	x9, [sp, #56]
  4019bc:	cmp	x9, x8
  4019c0:	b.eq	4019f0 <main+0x840>  // b.none
  4019c4:	b	401a18 <main+0x868>
  4019c8:	ldr	x8, [sp, #120]
  4019cc:	ldr	x0, [x8]
  4019d0:	ldur	w1, [x29, #-20]
  4019d4:	ldur	w2, [x29, #-24]
  4019d8:	ldr	x9, [sp, #128]
  4019dc:	ldr	x3, [x9, #136]
  4019e0:	ldursw	x4, [x29, #-188]
  4019e4:	bl	4023bc <resize_ext4>
  4019e8:	stur	w0, [x29, #-192]
  4019ec:	b	401aac <main+0x8fc>
  4019f0:	ldr	x8, [sp, #120]
  4019f4:	ldr	x0, [x8]
  4019f8:	ldur	w1, [x29, #-20]
  4019fc:	ldur	w2, [x29, #-24]
  401a00:	ldr	x9, [sp, #128]
  401a04:	ldr	x3, [x9, #136]
  401a08:	ldursw	x4, [x29, #-188]
  401a0c:	bl	402524 <resize_btrfs>
  401a10:	stur	w0, [x29, #-192]
  401a14:	b	401aac <main+0x8fc>
  401a18:	mov	w8, #0x3                   	// #3
  401a1c:	str	w8, [sp, #168]
  401a20:	str	wzr, [sp, #164]
  401a24:	str	wzr, [sp, #160]
  401a28:	ldr	w0, [sp, #160]
  401a2c:	bl	400e58 <log_get_max_level_realm@plt>
  401a30:	ldr	w8, [sp, #168]
  401a34:	and	w8, w8, #0x7
  401a38:	cmp	w0, w8
  401a3c:	b.lt	401a80 <main+0x8d0>  // b.tstop
  401a40:	ldr	w8, [sp, #160]
  401a44:	ldr	w9, [sp, #168]
  401a48:	orr	w0, w9, w8, lsl #10
  401a4c:	ldr	w1, [sp, #164]
  401a50:	ldr	x10, [sp, #128]
  401a54:	ldr	x6, [x10, #8]
  401a58:	ldr	x11, [sp, #120]
  401a5c:	ldr	x7, [x11]
  401a60:	ldr	x2, [sp, #112]
  401a64:	mov	w3, #0x140                 	// #320
  401a68:	ldr	x4, [sp, #104]
  401a6c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401a70:	add	x5, x5, #0xb5d
  401a74:	bl	400e68 <log_internal_realm@plt>
  401a78:	str	w0, [sp, #52]
  401a7c:	b	401a94 <main+0x8e4>
  401a80:	ldr	w0, [sp, #164]
  401a84:	bl	400e78 <abs@plt>
  401a88:	mov	w8, wzr
  401a8c:	subs	w8, w8, w0, uxtb
  401a90:	str	w8, [sp, #52]
  401a94:	ldr	w8, [sp, #52]
  401a98:	str	w8, [sp, #156]
  401a9c:	mov	w8, #0x1                   	// #1
  401aa0:	stur	w8, [x29, #-4]
  401aa4:	stur	w8, [x29, #-196]
  401aa8:	b	401bb0 <main+0xa00>
  401aac:	ldur	w8, [x29, #-192]
  401ab0:	cmp	w8, #0x0
  401ab4:	cset	w8, ge  // ge = tcont
  401ab8:	tbnz	w8, #0, 401acc <main+0x91c>
  401abc:	mov	w8, #0x1                   	// #1
  401ac0:	stur	w8, [x29, #-4]
  401ac4:	stur	w8, [x29, #-196]
  401ac8:	b	401bb0 <main+0xa00>
  401acc:	mov	w8, #0x6                   	// #6
  401ad0:	str	w8, [sp, #152]
  401ad4:	str	wzr, [sp, #148]
  401ad8:	str	wzr, [sp, #144]
  401adc:	ldr	w0, [sp, #144]
  401ae0:	bl	400e58 <log_get_max_level_realm@plt>
  401ae4:	ldr	w8, [sp, #152]
  401ae8:	and	w8, w8, #0x7
  401aec:	cmp	w0, w8
  401af0:	b.lt	401b88 <main+0x9d8>  // b.tstop
  401af4:	ldr	w8, [sp, #144]
  401af8:	ldr	w9, [sp, #152]
  401afc:	orr	w0, w9, w8, lsl #10
  401b00:	ldr	w1, [sp, #148]
  401b04:	ldr	x10, [sp, #120]
  401b08:	ldr	x6, [x10]
  401b0c:	ldr	x11, [sp, #128]
  401b10:	ldr	x2, [x11, #144]
  401b14:	sub	x12, x29, #0x38
  401b18:	str	w0, [sp, #48]
  401b1c:	mov	x0, x12
  401b20:	mov	x12, #0x8                   	// #8
  401b24:	str	w1, [sp, #44]
  401b28:	mov	x1, x12
  401b2c:	str	x6, [sp, #32]
  401b30:	bl	4027ec <format_bytes>
  401b34:	ldr	x10, [sp, #128]
  401b38:	ldr	x11, [x10, #136]
  401b3c:	ldur	w8, [x29, #-188]
  401b40:	ldr	w9, [sp, #48]
  401b44:	str	x0, [sp, #24]
  401b48:	mov	w0, w9
  401b4c:	ldr	w1, [sp, #44]
  401b50:	ldr	x2, [sp, #112]
  401b54:	mov	w3, #0x148                 	// #328
  401b58:	ldr	x4, [sp, #104]
  401b5c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401b60:	add	x5, x5, #0xb86
  401b64:	ldr	x6, [sp, #32]
  401b68:	ldr	x7, [sp, #24]
  401b6c:	mov	x12, sp
  401b70:	str	x11, [x12]
  401b74:	mov	x11, sp
  401b78:	str	w8, [x11, #8]
  401b7c:	bl	400e68 <log_internal_realm@plt>
  401b80:	str	w0, [sp, #20]
  401b84:	b	401b9c <main+0x9ec>
  401b88:	ldr	w0, [sp, #148]
  401b8c:	bl	400e78 <abs@plt>
  401b90:	mov	w8, wzr
  401b94:	subs	w8, w8, w0, uxtb
  401b98:	str	w8, [sp, #20]
  401b9c:	ldr	w8, [sp, #20]
  401ba0:	str	w8, [sp, #140]
  401ba4:	stur	wzr, [x29, #-4]
  401ba8:	mov	w8, #0x1                   	// #1
  401bac:	stur	w8, [x29, #-196]
  401bb0:	sub	x0, x29, #0x20
  401bb4:	bl	401c04 <freep>
  401bb8:	sub	x0, x29, #0x18
  401bbc:	bl	401bdc <closep>
  401bc0:	sub	x0, x29, #0x14
  401bc4:	bl	401bdc <closep>
  401bc8:	ldur	w0, [x29, #-4]
  401bcc:	add	sp, sp, #0x210
  401bd0:	ldr	x28, [sp, #16]
  401bd4:	ldp	x29, x30, [sp], #32
  401bd8:	ret

0000000000401bdc <closep>:
  401bdc:	sub	sp, sp, #0x20
  401be0:	stp	x29, x30, [sp, #16]
  401be4:	add	x29, sp, #0x10
  401be8:	str	x0, [sp, #8]
  401bec:	ldr	x8, [sp, #8]
  401bf0:	ldr	w0, [x8]
  401bf4:	bl	400ee8 <safe_close@plt>
  401bf8:	ldp	x29, x30, [sp, #16]
  401bfc:	add	sp, sp, #0x20
  401c00:	ret

0000000000401c04 <freep>:
  401c04:	sub	sp, sp, #0x20
  401c08:	stp	x29, x30, [sp, #16]
  401c0c:	add	x29, sp, #0x10
  401c10:	str	x0, [sp, #8]
  401c14:	ldr	x8, [sp, #8]
  401c18:	ldr	x0, [x8]
  401c1c:	bl	400ef8 <free@plt>
  401c20:	ldp	x29, x30, [sp, #16]
  401c24:	add	sp, sp, #0x20
  401c28:	ret

0000000000401c2c <parse_argv>:
  401c2c:	sub	sp, sp, #0x50
  401c30:	stp	x29, x30, [sp, #64]
  401c34:	add	x29, sp, #0x40
  401c38:	adrp	x8, 402000 <maybe_resize_slave_device+0x140>
  401c3c:	add	x8, x8, #0x9c8
  401c40:	add	x8, x8, #0x3
  401c44:	adrp	x9, 402000 <maybe_resize_slave_device+0x140>
  401c48:	add	x9, x9, #0xbe5
  401c4c:	stur	w0, [x29, #-8]
  401c50:	stur	x1, [x29, #-16]
  401c54:	str	x8, [sp, #16]
  401c58:	str	x9, [sp, #8]
  401c5c:	ldur	w8, [x29, #-8]
  401c60:	cmp	w8, #0x0
  401c64:	cset	w8, ge  // ge = tcont
  401c68:	mov	w9, #0x1                   	// #1
  401c6c:	eor	w8, w8, #0x1
  401c70:	eor	w8, w8, w9
  401c74:	eor	w8, w8, w9
  401c78:	and	w8, w8, #0x1
  401c7c:	mov	w0, w8
  401c80:	sxtw	x10, w0
  401c84:	cbz	x10, 401ca8 <parse_argv+0x7c>
  401c88:	mov	w8, wzr
  401c8c:	mov	w0, w8
  401c90:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  401c94:	add	x1, x1, #0xbdb
  401c98:	ldr	x2, [sp, #16]
  401c9c:	mov	w3, #0xca                  	// #202
  401ca0:	ldr	x4, [sp, #8]
  401ca4:	bl	400f08 <log_assert_failed_realm@plt>
  401ca8:	ldur	x8, [x29, #-16]
  401cac:	cmp	x8, #0x0
  401cb0:	cset	w9, ne  // ne = any
  401cb4:	mov	w10, #0x1                   	// #1
  401cb8:	eor	w9, w9, #0x1
  401cbc:	eor	w9, w9, w10
  401cc0:	eor	w9, w9, w10
  401cc4:	and	w9, w9, #0x1
  401cc8:	mov	w0, w9
  401ccc:	sxtw	x8, w0
  401cd0:	cbz	x8, 401cf4 <parse_argv+0xc8>
  401cd4:	mov	w8, wzr
  401cd8:	mov	w0, w8
  401cdc:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  401ce0:	add	x1, x1, #0xc02
  401ce4:	ldr	x2, [sp, #16]
  401ce8:	mov	w3, #0xcb                  	// #203
  401cec:	ldr	x4, [sp, #8]
  401cf0:	bl	400f08 <log_assert_failed_realm@plt>
  401cf4:	ldur	w0, [x29, #-8]
  401cf8:	ldur	x1, [x29, #-16]
  401cfc:	adrp	x2, 402000 <maybe_resize_slave_device+0x140>
  401d00:	add	x2, x2, #0xc07
  401d04:	adrp	x3, 403000 <_fini+0x65c>
  401d08:	add	x3, x3, #0x20
  401d0c:	mov	x8, xzr
  401d10:	mov	x4, x8
  401d14:	bl	400f18 <getopt_long@plt>
  401d18:	stur	w0, [x29, #-20]
  401d1c:	cmp	w0, #0x0
  401d20:	cset	w9, lt  // lt = tstop
  401d24:	tbnz	w9, #0, 401dc8 <parse_argv+0x19c>
  401d28:	ldur	w8, [x29, #-20]
  401d2c:	cmp	w8, #0x3f
  401d30:	str	w8, [sp, #4]
  401d34:	b.eq	401d98 <parse_argv+0x16c>  // b.none
  401d38:	b	401d3c <parse_argv+0x110>
  401d3c:	ldr	w8, [sp, #4]
  401d40:	cmp	w8, #0x68
  401d44:	b.eq	401d6c <parse_argv+0x140>  // b.none
  401d48:	b	401d4c <parse_argv+0x120>
  401d4c:	ldr	w8, [sp, #4]
  401d50:	cmp	w8, #0x6e
  401d54:	b.eq	401d84 <parse_argv+0x158>  // b.none
  401d58:	b	401d5c <parse_argv+0x130>
  401d5c:	ldr	w8, [sp, #4]
  401d60:	cmp	w8, #0x100
  401d64:	b.eq	401d78 <parse_argv+0x14c>  // b.none
  401d68:	b	401da4 <parse_argv+0x178>
  401d6c:	bl	402824 <help>
  401d70:	stur	w0, [x29, #-4]
  401d74:	b	401eb0 <parse_argv+0x284>
  401d78:	bl	400f28 <version@plt>
  401d7c:	stur	w0, [x29, #-4]
  401d80:	b	401eb0 <parse_argv+0x284>
  401d84:	adrp	x8, 420000 <completed.8445>
  401d88:	add	x8, x8, #0x10
  401d8c:	mov	w9, #0x1                   	// #1
  401d90:	strb	w9, [x8]
  401d94:	b	401dc4 <parse_argv+0x198>
  401d98:	mov	w8, #0xffffffea            	// #-22
  401d9c:	stur	w8, [x29, #-4]
  401da0:	b	401eb0 <parse_argv+0x284>
  401da4:	mov	w8, wzr
  401da8:	mov	w0, w8
  401dac:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  401db0:	add	x1, x1, #0xc0a
  401db4:	ldr	x2, [sp, #16]
  401db8:	mov	w3, #0xdd                  	// #221
  401dbc:	ldr	x4, [sp, #8]
  401dc0:	bl	400f38 <log_assert_failed_unreachable_realm@plt>
  401dc4:	b	401cf4 <parse_argv+0xc8>
  401dc8:	adrp	x8, 420000 <completed.8445>
  401dcc:	add	x8, x8, #0x18
  401dd0:	ldr	w9, [x8]
  401dd4:	add	w9, w9, #0x1
  401dd8:	ldur	w10, [x29, #-8]
  401ddc:	cmp	w9, w10
  401de0:	b.eq	401e7c <parse_argv+0x250>  // b.none
  401de4:	mov	w8, #0x3                   	// #3
  401de8:	stur	w8, [x29, #-24]
  401dec:	mov	w8, #0x16                  	// #22
  401df0:	movk	w8, #0x4000, lsl #16
  401df4:	stur	w8, [x29, #-28]
  401df8:	str	wzr, [sp, #32]
  401dfc:	ldr	w0, [sp, #32]
  401e00:	bl	400e58 <log_get_max_level_realm@plt>
  401e04:	ldur	w8, [x29, #-24]
  401e08:	and	w8, w8, #0x7
  401e0c:	cmp	w0, w8
  401e10:	b.lt	401e54 <parse_argv+0x228>  // b.tstop
  401e14:	ldr	w8, [sp, #32]
  401e18:	ldur	w9, [x29, #-24]
  401e1c:	orr	w0, w9, w8, lsl #10
  401e20:	ldur	w1, [x29, #-28]
  401e24:	adrp	x10, 420000 <completed.8445>
  401e28:	add	x10, x10, #0x20
  401e2c:	ldr	x6, [x10]
  401e30:	ldr	x2, [sp, #16]
  401e34:	mov	w3, #0xe3                  	// #227
  401e38:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  401e3c:	add	x4, x4, #0xc1b
  401e40:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401e44:	add	x5, x5, #0xc26
  401e48:	bl	400e68 <log_internal_realm@plt>
  401e4c:	str	w0, [sp]
  401e50:	b	401e68 <parse_argv+0x23c>
  401e54:	ldur	w0, [x29, #-28]
  401e58:	bl	400e78 <abs@plt>
  401e5c:	mov	w8, wzr
  401e60:	subs	w8, w8, w0, uxtb
  401e64:	str	w8, [sp]
  401e68:	ldr	w8, [sp]
  401e6c:	str	w8, [sp, #28]
  401e70:	ldr	w8, [sp, #28]
  401e74:	stur	w8, [x29, #-4]
  401e78:	b	401eb0 <parse_argv+0x284>
  401e7c:	ldur	x8, [x29, #-16]
  401e80:	adrp	x9, 420000 <completed.8445>
  401e84:	add	x9, x9, #0x18
  401e88:	ldrsw	x9, [x9]
  401e8c:	mov	x10, #0x8                   	// #8
  401e90:	mul	x9, x10, x9
  401e94:	add	x8, x8, x9
  401e98:	ldr	x8, [x8]
  401e9c:	adrp	x9, 420000 <completed.8445>
  401ea0:	add	x9, x9, #0x8
  401ea4:	str	x8, [x9]
  401ea8:	mov	w11, #0x1                   	// #1
  401eac:	stur	w11, [x29, #-4]
  401eb0:	ldur	w0, [x29, #-4]
  401eb4:	ldp	x29, x30, [sp, #64]
  401eb8:	add	sp, sp, #0x50
  401ebc:	ret

0000000000401ec0 <maybe_resize_slave_device>:
  401ec0:	sub	sp, sp, #0x130
  401ec4:	stp	x29, x30, [sp, #272]
  401ec8:	str	x28, [sp, #288]
  401ecc:	add	x29, sp, #0x110
  401ed0:	mov	x8, xzr
  401ed4:	adrp	x9, 402000 <maybe_resize_slave_device+0x140>
  401ed8:	add	x9, x9, #0x9c8
  401edc:	add	x9, x9, #0x3
  401ee0:	adrp	x10, 402000 <maybe_resize_slave_device+0x140>
  401ee4:	add	x10, x10, #0xd84
  401ee8:	sub	x11, x29, #0x30
  401eec:	stur	x0, [x29, #-16]
  401ef0:	stur	x1, [x29, #-24]
  401ef4:	stur	x8, [x29, #-32]
  401ef8:	stur	x8, [x29, #-40]
  401efc:	ldur	x0, [x29, #-16]
  401f00:	mov	x1, x11
  401f04:	str	x9, [sp, #112]
  401f08:	str	x10, [sp, #104]
  401f0c:	bl	400f48 <get_block_device_harder@plt>
  401f10:	stur	w0, [x29, #-52]
  401f14:	ldur	w12, [x29, #-52]
  401f18:	cmp	w12, #0x0
  401f1c:	cset	w12, ge  // ge = tcont
  401f20:	tbnz	w12, #0, 401fb4 <maybe_resize_slave_device+0xf4>
  401f24:	mov	w8, #0x3                   	// #3
  401f28:	stur	w8, [x29, #-56]
  401f2c:	ldur	w8, [x29, #-52]
  401f30:	stur	w8, [x29, #-60]
  401f34:	stur	wzr, [x29, #-64]
  401f38:	ldur	w0, [x29, #-64]
  401f3c:	bl	400e58 <log_get_max_level_realm@plt>
  401f40:	ldur	w8, [x29, #-56]
  401f44:	and	w8, w8, #0x7
  401f48:	cmp	w0, w8
  401f4c:	b.lt	401f84 <maybe_resize_slave_device+0xc4>  // b.tstop
  401f50:	ldur	w8, [x29, #-64]
  401f54:	ldur	w9, [x29, #-56]
  401f58:	orr	w0, w9, w8, lsl #10
  401f5c:	ldur	w1, [x29, #-60]
  401f60:	ldur	x6, [x29, #-16]
  401f64:	ldr	x2, [sp, #112]
  401f68:	mov	w3, #0x8a                  	// #138
  401f6c:	ldr	x4, [sp, #104]
  401f70:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  401f74:	add	x5, x5, #0xd9e
  401f78:	bl	400e68 <log_internal_realm@plt>
  401f7c:	str	w0, [sp, #100]
  401f80:	b	401f98 <maybe_resize_slave_device+0xd8>
  401f84:	ldur	w0, [x29, #-60]
  401f88:	bl	400e78 <abs@plt>
  401f8c:	mov	w8, wzr
  401f90:	subs	w8, w8, w0, uxtb
  401f94:	str	w8, [sp, #100]
  401f98:	ldr	w8, [sp, #100]
  401f9c:	stur	w8, [x29, #-68]
  401fa0:	ldur	w8, [x29, #-68]
  401fa4:	stur	w8, [x29, #-4]
  401fa8:	mov	w8, #0x1                   	// #1
  401fac:	stur	w8, [x29, #-72]
  401fb0:	b	402398 <maybe_resize_slave_device+0x4d8>
  401fb4:	mov	w8, #0x7                   	// #7
  401fb8:	stur	w8, [x29, #-76]
  401fbc:	stur	wzr, [x29, #-80]
  401fc0:	stur	wzr, [x29, #-84]
  401fc4:	ldur	w0, [x29, #-84]
  401fc8:	bl	400e58 <log_get_max_level_realm@plt>
  401fcc:	ldur	w8, [x29, #-76]
  401fd0:	and	w8, w8, #0x7
  401fd4:	cmp	w0, w8
  401fd8:	b.lt	4020a8 <maybe_resize_slave_device+0x1e8>  // b.tstop
  401fdc:	ldur	w8, [x29, #-84]
  401fe0:	ldur	w9, [x29, #-76]
  401fe4:	orr	w0, w9, w8, lsl #10
  401fe8:	ldur	w1, [x29, #-80]
  401fec:	ldur	x10, [x29, #-48]
  401ff0:	str	w0, [sp, #96]
  401ff4:	mov	x0, x10
  401ff8:	str	w1, [sp, #92]
  401ffc:	bl	400f58 <gnu_dev_major@plt>
  402000:	ldur	x10, [x29, #-48]
  402004:	str	w0, [sp, #88]
  402008:	mov	x0, x10
  40200c:	bl	400f68 <gnu_dev_minor@plt>
  402010:	ldur	x10, [x29, #-24]
  402014:	str	w0, [sp, #84]
  402018:	mov	x0, x10
  40201c:	bl	400f58 <gnu_dev_major@plt>
  402020:	ldur	x10, [x29, #-24]
  402024:	str	w0, [sp, #80]
  402028:	mov	x0, x10
  40202c:	bl	400f68 <gnu_dev_minor@plt>
  402030:	ldur	x10, [x29, #-48]
  402034:	ldur	x11, [x29, #-24]
  402038:	adrp	x12, 402000 <maybe_resize_slave_device+0x140>
  40203c:	add	x12, x12, #0xe07
  402040:	adrp	x13, 402000 <maybe_resize_slave_device+0x140>
  402044:	add	x13, x13, #0xe02
  402048:	cmp	x10, x11
  40204c:	csel	x10, x13, x12, eq  // eq = none
  402050:	ldr	w8, [sp, #96]
  402054:	str	w0, [sp, #76]
  402058:	mov	w0, w8
  40205c:	ldr	w1, [sp, #92]
  402060:	ldr	x2, [sp, #112]
  402064:	mov	w3, #0x8f                  	// #143
  402068:	ldr	x4, [sp, #104]
  40206c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  402070:	add	x5, x5, #0xdd6
  402074:	ldr	w6, [sp, #88]
  402078:	ldr	w7, [sp, #84]
  40207c:	mov	x11, sp
  402080:	ldr	w9, [sp, #80]
  402084:	str	w9, [x11]
  402088:	mov	x11, sp
  40208c:	ldr	w14, [sp, #76]
  402090:	str	w14, [x11, #8]
  402094:	mov	x11, sp
  402098:	str	x10, [x11, #16]
  40209c:	bl	400e68 <log_internal_realm@plt>
  4020a0:	str	w0, [sp, #72]
  4020a4:	b	4020bc <maybe_resize_slave_device+0x1fc>
  4020a8:	ldur	w0, [x29, #-80]
  4020ac:	bl	400e78 <abs@plt>
  4020b0:	mov	w8, wzr
  4020b4:	subs	w8, w8, w0, uxtb
  4020b8:	str	w8, [sp, #72]
  4020bc:	ldr	w8, [sp, #72]
  4020c0:	stur	w8, [x29, #-88]
  4020c4:	ldur	x9, [x29, #-48]
  4020c8:	ldur	x10, [x29, #-24]
  4020cc:	cmp	x9, x10
  4020d0:	b.ne	4020e4 <maybe_resize_slave_device+0x224>  // b.any
  4020d4:	stur	wzr, [x29, #-4]
  4020d8:	mov	w8, #0x1                   	// #1
  4020dc:	stur	w8, [x29, #-72]
  4020e0:	b	402398 <maybe_resize_slave_device+0x4d8>
  4020e4:	ldur	x1, [x29, #-48]
  4020e8:	mov	w0, #0x6000                	// #24576
  4020ec:	sub	x2, x29, #0x28
  4020f0:	bl	400eb8 <device_path_make_major_minor@plt>
  4020f4:	stur	w0, [x29, #-52]
  4020f8:	ldur	w8, [x29, #-52]
  4020fc:	cmp	w8, #0x0
  402100:	cset	w8, ge  // ge = tcont
  402104:	tbnz	w8, #0, 402194 <maybe_resize_slave_device+0x2d4>
  402108:	mov	w8, #0x3                   	// #3
  40210c:	stur	w8, [x29, #-92]
  402110:	ldur	w8, [x29, #-52]
  402114:	stur	w8, [x29, #-96]
  402118:	stur	wzr, [x29, #-100]
  40211c:	ldur	w0, [x29, #-100]
  402120:	bl	400e58 <log_get_max_level_realm@plt>
  402124:	ldur	w8, [x29, #-92]
  402128:	and	w8, w8, #0x7
  40212c:	cmp	w0, w8
  402130:	b.lt	402164 <maybe_resize_slave_device+0x2a4>  // b.tstop
  402134:	ldur	w8, [x29, #-100]
  402138:	ldur	w9, [x29, #-92]
  40213c:	orr	w0, w9, w8, lsl #10
  402140:	ldur	w1, [x29, #-96]
  402144:	ldr	x2, [sp, #112]
  402148:	mov	w3, #0x95                  	// #149
  40214c:	ldr	x4, [sp, #104]
  402150:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  402154:	add	x5, x5, #0xa77
  402158:	bl	400e68 <log_internal_realm@plt>
  40215c:	str	w0, [sp, #68]
  402160:	b	402178 <maybe_resize_slave_device+0x2b8>
  402164:	ldur	w0, [x29, #-96]
  402168:	bl	400e78 <abs@plt>
  40216c:	mov	w8, wzr
  402170:	subs	w8, w8, w0, uxtb
  402174:	str	w8, [sp, #68]
  402178:	ldr	w8, [sp, #68]
  40217c:	stur	w8, [x29, #-104]
  402180:	ldur	w8, [x29, #-104]
  402184:	stur	w8, [x29, #-4]
  402188:	mov	w8, #0x1                   	// #1
  40218c:	stur	w8, [x29, #-72]
  402190:	b	402398 <maybe_resize_slave_device+0x4d8>
  402194:	ldur	x0, [x29, #-40]
  402198:	sub	x1, x29, #0x20
  40219c:	bl	400f78 <probe_filesystem@plt>
  4021a0:	stur	w0, [x29, #-52]
  4021a4:	ldur	w8, [x29, #-52]
  4021a8:	mov	w9, #0xffffff8b            	// #-117
  4021ac:	cmp	w8, w9
  4021b0:	b.ne	402244 <maybe_resize_slave_device+0x384>  // b.any
  4021b4:	mov	w8, #0x4                   	// #4
  4021b8:	stur	w8, [x29, #-108]
  4021bc:	ldur	w8, [x29, #-52]
  4021c0:	stur	w8, [x29, #-112]
  4021c4:	stur	wzr, [x29, #-116]
  4021c8:	ldur	w0, [x29, #-116]
  4021cc:	bl	400e58 <log_get_max_level_realm@plt>
  4021d0:	ldur	w8, [x29, #-108]
  4021d4:	and	w8, w8, #0x7
  4021d8:	cmp	w0, w8
  4021dc:	b.lt	402214 <maybe_resize_slave_device+0x354>  // b.tstop
  4021e0:	ldur	w8, [x29, #-116]
  4021e4:	ldur	w9, [x29, #-108]
  4021e8:	orr	w0, w9, w8, lsl #10
  4021ec:	ldur	w1, [x29, #-112]
  4021f0:	ldur	x6, [x29, #-40]
  4021f4:	ldr	x2, [sp, #112]
  4021f8:	mov	w3, #0x99                  	// #153
  4021fc:	ldr	x4, [sp, #104]
  402200:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  402204:	add	x5, x5, #0xe11
  402208:	bl	400e68 <log_internal_realm@plt>
  40220c:	str	w0, [sp, #64]
  402210:	b	402228 <maybe_resize_slave_device+0x368>
  402214:	ldur	w0, [x29, #-112]
  402218:	bl	400e78 <abs@plt>
  40221c:	mov	w8, wzr
  402220:	subs	w8, w8, w0, uxtb
  402224:	str	w8, [sp, #64]
  402228:	ldr	w8, [sp, #64]
  40222c:	stur	w8, [x29, #-120]
  402230:	ldur	w8, [x29, #-120]
  402234:	stur	w8, [x29, #-4]
  402238:	mov	w8, #0x1                   	// #1
  40223c:	stur	w8, [x29, #-72]
  402240:	b	402398 <maybe_resize_slave_device+0x4d8>
  402244:	ldur	w8, [x29, #-52]
  402248:	cmp	w8, #0x0
  40224c:	cset	w8, ge  // ge = tcont
  402250:	tbnz	w8, #0, 4022e4 <maybe_resize_slave_device+0x424>
  402254:	mov	w8, #0x4                   	// #4
  402258:	stur	w8, [x29, #-124]
  40225c:	ldur	w8, [x29, #-52]
  402260:	stur	w8, [x29, #-128]
  402264:	stur	wzr, [x29, #-132]
  402268:	ldur	w0, [x29, #-132]
  40226c:	bl	400e58 <log_get_max_level_realm@plt>
  402270:	ldur	w8, [x29, #-124]
  402274:	and	w8, w8, #0x7
  402278:	cmp	w0, w8
  40227c:	b.lt	4022b4 <maybe_resize_slave_device+0x3f4>  // b.tstop
  402280:	ldur	w8, [x29, #-132]
  402284:	ldur	w9, [x29, #-124]
  402288:	orr	w0, w9, w8, lsl #10
  40228c:	ldur	w1, [x29, #-128]
  402290:	ldur	x6, [x29, #-40]
  402294:	ldr	x2, [sp, #112]
  402298:	mov	w3, #0x9b                  	// #155
  40229c:	ldr	x4, [sp, #104]
  4022a0:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  4022a4:	add	x5, x5, #0xe4c
  4022a8:	bl	400e68 <log_internal_realm@plt>
  4022ac:	str	w0, [sp, #60]
  4022b0:	b	4022c8 <maybe_resize_slave_device+0x408>
  4022b4:	ldur	w0, [x29, #-128]
  4022b8:	bl	400e78 <abs@plt>
  4022bc:	mov	w8, wzr
  4022c0:	subs	w8, w8, w0, uxtb
  4022c4:	str	w8, [sp, #60]
  4022c8:	ldr	w8, [sp, #60]
  4022cc:	str	w8, [sp, #136]
  4022d0:	ldr	w8, [sp, #136]
  4022d4:	stur	w8, [x29, #-4]
  4022d8:	mov	w8, #0x1                   	// #1
  4022dc:	stur	w8, [x29, #-72]
  4022e0:	b	402398 <maybe_resize_slave_device+0x4d8>
  4022e4:	mov	w8, #0x7                   	// #7
  4022e8:	str	w8, [sp, #132]
  4022ec:	str	wzr, [sp, #128]
  4022f0:	str	wzr, [sp, #124]
  4022f4:	ldr	w0, [sp, #124]
  4022f8:	bl	400e58 <log_get_max_level_realm@plt>
  4022fc:	ldr	w8, [sp, #132]
  402300:	and	w8, w8, #0x7
  402304:	cmp	w0, w8
  402308:	b.lt	402370 <maybe_resize_slave_device+0x4b0>  // b.tstop
  40230c:	ldr	w8, [sp, #124]
  402310:	ldr	w9, [sp, #132]
  402314:	orr	w0, w9, w8, lsl #10
  402318:	ldr	w1, [sp, #128]
  40231c:	ldur	x6, [x29, #-40]
  402320:	ldur	x10, [x29, #-32]
  402324:	str	w0, [sp, #56]
  402328:	mov	x0, x10
  40232c:	str	w1, [sp, #52]
  402330:	str	x6, [sp, #40]
  402334:	bl	4028e0 <strnull>
  402338:	ldr	w8, [sp, #56]
  40233c:	str	x0, [sp, #32]
  402340:	mov	w0, w8
  402344:	ldr	w1, [sp, #52]
  402348:	ldr	x2, [sp, #112]
  40234c:	mov	w3, #0xa2                  	// #162
  402350:	ldr	x4, [sp, #104]
  402354:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  402358:	add	x5, x5, #0xe65
  40235c:	ldr	x6, [sp, #40]
  402360:	ldr	x7, [sp, #32]
  402364:	bl	400e68 <log_internal_realm@plt>
  402368:	str	w0, [sp, #28]
  40236c:	b	402384 <maybe_resize_slave_device+0x4c4>
  402370:	ldr	w0, [sp, #128]
  402374:	bl	400e78 <abs@plt>
  402378:	mov	w8, wzr
  40237c:	subs	w8, w8, w0, uxtb
  402380:	str	w8, [sp, #28]
  402384:	ldr	w8, [sp, #28]
  402388:	str	w8, [sp, #120]
  40238c:	stur	wzr, [x29, #-4]
  402390:	mov	w8, #0x1                   	// #1
  402394:	stur	w8, [x29, #-72]
  402398:	sub	x0, x29, #0x28
  40239c:	bl	401c04 <freep>
  4023a0:	sub	x0, x29, #0x20
  4023a4:	bl	401c04 <freep>
  4023a8:	ldur	w0, [x29, #-4]
  4023ac:	ldr	x28, [sp, #288]
  4023b0:	ldp	x29, x30, [sp, #272]
  4023b4:	add	sp, sp, #0x130
  4023b8:	ret

00000000004023bc <resize_ext4>:
  4023bc:	sub	sp, sp, #0x60
  4023c0:	stp	x29, x30, [sp, #80]
  4023c4:	add	x29, sp, #0x50
  4023c8:	adrp	x8, 402000 <maybe_resize_slave_device+0x140>
  4023cc:	add	x8, x8, #0x9c8
  4023d0:	add	x8, x8, #0x3
  4023d4:	stur	x0, [x29, #-16]
  4023d8:	stur	w1, [x29, #-20]
  4023dc:	stur	w2, [x29, #-24]
  4023e0:	stur	x3, [x29, #-32]
  4023e4:	str	x4, [sp, #40]
  4023e8:	str	x8, [sp, #16]
  4023ec:	ldr	x8, [sp, #40]
  4023f0:	lsl	x8, x8, #32
  4023f4:	asr	x8, x8, #32
  4023f8:	ldr	x9, [sp, #40]
  4023fc:	cmp	x8, x9
  402400:	cset	w10, eq  // eq = none
  402404:	mov	w11, #0x1                   	// #1
  402408:	eor	w10, w10, #0x1
  40240c:	eor	w10, w10, w11
  402410:	eor	w10, w10, w11
  402414:	and	w10, w10, #0x1
  402418:	mov	w0, w10
  40241c:	sxtw	x8, w0
  402420:	cbz	x8, 402448 <resize_ext4+0x8c>
  402424:	mov	w8, wzr
  402428:	mov	w0, w8
  40242c:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  402430:	add	x1, x1, #0xe9d
  402434:	ldr	x2, [sp, #16]
  402438:	mov	w3, #0x22                  	// #34
  40243c:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  402440:	add	x4, x4, #0xec5
  402444:	bl	400f08 <log_assert_failed_realm@plt>
  402448:	adrp	x8, 420000 <completed.8445>
  40244c:	add	x8, x8, #0x10
  402450:	ldrb	w9, [x8]
  402454:	tbnz	w9, #0, 40245c <resize_ext4+0xa0>
  402458:	b	402464 <resize_ext4+0xa8>
  40245c:	stur	wzr, [x29, #-4]
  402460:	b	402514 <resize_ext4+0x158>
  402464:	ldur	w0, [x29, #-20]
  402468:	mov	x1, #0x6610                	// #26128
  40246c:	movk	x1, #0x4008, lsl #16
  402470:	sub	x2, x29, #0x20
  402474:	bl	400ec8 <ioctl@plt>
  402478:	cbz	w0, 402510 <resize_ext4+0x154>
  40247c:	mov	w8, #0x3                   	// #3
  402480:	str	w8, [sp, #36]
  402484:	bl	400ea8 <__errno_location@plt>
  402488:	ldr	w8, [x0]
  40248c:	str	w8, [sp, #32]
  402490:	str	wzr, [sp, #28]
  402494:	ldr	w0, [sp, #28]
  402498:	bl	400e58 <log_get_max_level_realm@plt>
  40249c:	ldr	w8, [sp, #36]
  4024a0:	and	w8, w8, #0x7
  4024a4:	cmp	w0, w8
  4024a8:	b.lt	4024e8 <resize_ext4+0x12c>  // b.tstop
  4024ac:	ldr	w8, [sp, #28]
  4024b0:	ldr	w9, [sp, #36]
  4024b4:	orr	w0, w9, w8, lsl #10
  4024b8:	ldr	w1, [sp, #32]
  4024bc:	ldur	x6, [x29, #-16]
  4024c0:	ldur	x7, [x29, #-32]
  4024c4:	ldr	x2, [sp, #16]
  4024c8:	mov	w3, #0x29                  	// #41
  4024cc:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  4024d0:	add	x4, x4, #0xf01
  4024d4:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  4024d8:	add	x5, x5, #0xf0d
  4024dc:	bl	400e68 <log_internal_realm@plt>
  4024e0:	str	w0, [sp, #12]
  4024e4:	b	4024fc <resize_ext4+0x140>
  4024e8:	ldr	w0, [sp, #32]
  4024ec:	bl	400e78 <abs@plt>
  4024f0:	mov	w8, wzr
  4024f4:	subs	w8, w8, w0, uxtb
  4024f8:	str	w8, [sp, #12]
  4024fc:	ldr	w8, [sp, #12]
  402500:	str	w8, [sp, #24]
  402504:	ldr	w8, [sp, #24]
  402508:	stur	w8, [x29, #-4]
  40250c:	b	402514 <resize_ext4+0x158>
  402510:	stur	wzr, [x29, #-4]
  402514:	ldur	w0, [x29, #-4]
  402518:	ldp	x29, x30, [sp, #80]
  40251c:	add	sp, sp, #0x60
  402520:	ret

0000000000402524 <resize_btrfs>:
  402524:	stp	x29, x30, [sp, #-32]!
  402528:	str	x28, [sp, #16]
  40252c:	mov	x29, sp
  402530:	sub	sp, sp, #0x1, lsl #12
  402534:	sub	sp, sp, #0x70
  402538:	sub	x8, x29, #0x28
  40253c:	mov	x9, #0x1000                	// #4096
  402540:	mov	w10, wzr
  402544:	adrp	x11, 402000 <maybe_resize_slave_device+0x140>
  402548:	add	x11, x11, #0x9c8
  40254c:	add	x11, x11, #0x3
  402550:	add	x12, sp, #0x48
  402554:	str	x0, [x8, #24]
  402558:	stur	w1, [x29, #-20]
  40255c:	stur	w2, [x29, #-24]
  402560:	str	x3, [x8, #8]
  402564:	str	x4, [x8]
  402568:	mov	x0, x12
  40256c:	mov	w1, w10
  402570:	mov	x2, x9
  402574:	str	x8, [sp, #24]
  402578:	str	x11, [sp, #16]
  40257c:	bl	400f88 <memset@plt>
  402580:	ldr	x8, [sp, #24]
  402584:	ldr	x9, [x8]
  402588:	lsl	x9, x9, #32
  40258c:	asr	x9, x9, #32
  402590:	ldr	x10, [x8]
  402594:	cmp	x9, x10
  402598:	cset	w11, eq  // eq = none
  40259c:	mov	w12, #0x1                   	// #1
  4025a0:	eor	w11, w11, #0x1
  4025a4:	eor	w11, w11, w12
  4025a8:	eor	w11, w11, w12
  4025ac:	and	w11, w11, #0x1
  4025b0:	mov	w0, w11
  4025b4:	sxtw	x9, w0
  4025b8:	cbz	x9, 4025e0 <resize_btrfs+0xbc>
  4025bc:	mov	w8, wzr
  4025c0:	mov	w0, w8
  4025c4:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  4025c8:	add	x1, x1, #0xe9d
  4025cc:	ldr	x2, [sp, #16]
  4025d0:	mov	w3, #0x32                  	// #50
  4025d4:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  4025d8:	add	x4, x4, #0xf3c
  4025dc:	bl	400f08 <log_assert_failed_realm@plt>
  4025e0:	ldr	x8, [sp, #24]
  4025e4:	ldr	x9, [x8, #8]
  4025e8:	ldr	x10, [x8]
  4025ec:	mul	x9, x9, x10
  4025f0:	mov	x10, #0x10000000            	// #268435456
  4025f4:	cmp	x9, x10
  4025f8:	b.cs	402688 <resize_btrfs+0x164>  // b.hs, b.nlast
  4025fc:	mov	w8, #0x4                   	// #4
  402600:	str	w8, [sp, #64]
  402604:	str	wzr, [sp, #60]
  402608:	str	wzr, [sp, #56]
  40260c:	ldr	w0, [sp, #56]
  402610:	bl	400e58 <log_get_max_level_realm@plt>
  402614:	ldr	w8, [sp, #64]
  402618:	and	w8, w8, #0x7
  40261c:	cmp	w0, w8
  402620:	b.lt	402660 <resize_btrfs+0x13c>  // b.tstop
  402624:	ldr	w8, [sp, #56]
  402628:	ldr	w9, [sp, #64]
  40262c:	orr	w0, w9, w8, lsl #10
  402630:	ldr	w1, [sp, #60]
  402634:	ldr	x10, [sp, #24]
  402638:	ldr	x6, [x10, #24]
  40263c:	ldr	x2, [sp, #16]
  402640:	mov	w3, #0x36                  	// #54
  402644:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  402648:	add	x4, x4, #0xf79
  40264c:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  402650:	add	x5, x5, #0xf86
  402654:	bl	400e68 <log_internal_realm@plt>
  402658:	str	w0, [sp, #12]
  40265c:	b	402674 <resize_btrfs+0x150>
  402660:	ldr	w0, [sp, #60]
  402664:	bl	400e78 <abs@plt>
  402668:	mov	w8, wzr
  40266c:	subs	w8, w8, w0, uxtb
  402670:	str	w8, [sp, #12]
  402674:	ldr	w8, [sp, #12]
  402678:	str	w8, [sp, #52]
  40267c:	mov	w8, #0xffffffa1            	// #-95
  402680:	stur	w8, [x29, #-4]
  402684:	b	4027d4 <resize_btrfs+0x2b0>
  402688:	add	x8, sp, #0x48
  40268c:	add	x0, x8, #0x8
  402690:	ldr	x8, [sp, #24]
  402694:	ldr	x9, [x8, #8]
  402698:	ldr	x10, [x8]
  40269c:	mul	x3, x9, x10
  4026a0:	mov	x1, #0xff8                 	// #4088
  4026a4:	adrp	x2, 402000 <maybe_resize_slave_device+0x140>
  4026a8:	add	x2, x2, #0xfc7
  4026ac:	bl	400f98 <snprintf@plt>
  4026b0:	str	w0, [sp, #68]
  4026b4:	ldrsw	x8, [sp, #68]
  4026b8:	cmp	x8, #0xff8
  4026bc:	cset	w9, cc  // cc = lo, ul, last
  4026c0:	mov	w10, #0x1                   	// #1
  4026c4:	eor	w9, w9, #0x1
  4026c8:	eor	w9, w9, w10
  4026cc:	eor	w9, w9, w10
  4026d0:	and	w9, w9, #0x1
  4026d4:	mov	w0, w9
  4026d8:	sxtw	x8, w0
  4026dc:	cbz	x8, 402704 <resize_btrfs+0x1e0>
  4026e0:	mov	w8, wzr
  4026e4:	mov	w0, w8
  4026e8:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  4026ec:	add	x1, x1, #0xfcb
  4026f0:	ldr	x2, [sp, #16]
  4026f4:	mov	w3, #0x3c                  	// #60
  4026f8:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  4026fc:	add	x4, x4, #0xf3c
  402700:	bl	400f08 <log_assert_failed_realm@plt>
  402704:	adrp	x8, 420000 <completed.8445>
  402708:	add	x8, x8, #0x10
  40270c:	ldrb	w9, [x8]
  402710:	tbnz	w9, #0, 402718 <resize_btrfs+0x1f4>
  402714:	b	402720 <resize_btrfs+0x1fc>
  402718:	stur	wzr, [x29, #-4]
  40271c:	b	4027d4 <resize_btrfs+0x2b0>
  402720:	ldur	w0, [x29, #-20]
  402724:	mov	x1, #0x9403                	// #37891
  402728:	movk	x1, #0x5000, lsl #16
  40272c:	add	x2, sp, #0x48
  402730:	bl	400ec8 <ioctl@plt>
  402734:	cbz	w0, 4027d0 <resize_btrfs+0x2ac>
  402738:	mov	w8, #0x3                   	// #3
  40273c:	str	w8, [sp, #48]
  402740:	bl	400ea8 <__errno_location@plt>
  402744:	ldr	w8, [x0]
  402748:	str	w8, [sp, #44]
  40274c:	str	wzr, [sp, #40]
  402750:	ldr	w0, [sp, #40]
  402754:	bl	400e58 <log_get_max_level_realm@plt>
  402758:	ldr	w8, [sp, #48]
  40275c:	and	w8, w8, #0x7
  402760:	cmp	w0, w8
  402764:	b.lt	4027a8 <resize_btrfs+0x284>  // b.tstop
  402768:	ldr	w8, [sp, #40]
  40276c:	ldr	w9, [sp, #48]
  402770:	orr	w0, w9, w8, lsl #10
  402774:	ldr	w1, [sp, #44]
  402778:	ldr	x10, [sp, #24]
  40277c:	ldr	x6, [x10, #24]
  402780:	ldr	x7, [x10, #8]
  402784:	ldr	x2, [sp, #16]
  402788:	mov	w3, #0x43                  	// #67
  40278c:	adrp	x4, 402000 <maybe_resize_slave_device+0x140>
  402790:	add	x4, x4, #0xf79
  402794:	adrp	x5, 402000 <maybe_resize_slave_device+0x140>
  402798:	add	x5, x5, #0xfea
  40279c:	bl	400e68 <log_internal_realm@plt>
  4027a0:	str	w0, [sp, #8]
  4027a4:	b	4027bc <resize_btrfs+0x298>
  4027a8:	ldr	w0, [sp, #44]
  4027ac:	bl	400e78 <abs@plt>
  4027b0:	mov	w8, wzr
  4027b4:	subs	w8, w8, w0, uxtb
  4027b8:	str	w8, [sp, #8]
  4027bc:	ldr	w8, [sp, #8]
  4027c0:	str	w8, [sp, #36]
  4027c4:	ldr	w8, [sp, #36]
  4027c8:	stur	w8, [x29, #-4]
  4027cc:	b	4027d4 <resize_btrfs+0x2b0>
  4027d0:	stur	wzr, [x29, #-4]
  4027d4:	ldur	w0, [x29, #-4]
  4027d8:	add	sp, sp, #0x1, lsl #12
  4027dc:	add	sp, sp, #0x70
  4027e0:	ldr	x28, [sp, #16]
  4027e4:	ldp	x29, x30, [sp], #32
  4027e8:	ret

00000000004027ec <format_bytes>:
  4027ec:	sub	sp, sp, #0x30
  4027f0:	stp	x29, x30, [sp, #32]
  4027f4:	add	x29, sp, #0x20
  4027f8:	mov	w3, #0x7                   	// #7
  4027fc:	stur	x0, [x29, #-8]
  402800:	str	x1, [sp, #16]
  402804:	str	x2, [sp, #8]
  402808:	ldur	x0, [x29, #-8]
  40280c:	ldr	x1, [sp, #16]
  402810:	ldr	x2, [sp, #8]
  402814:	bl	400fa8 <format_bytes_full@plt>
  402818:	ldp	x29, x30, [sp, #32]
  40281c:	add	sp, sp, #0x30
  402820:	ret

0000000000402824 <help>:
  402824:	sub	sp, sp, #0x30
  402828:	stp	x29, x30, [sp, #32]
  40282c:	add	x29, sp, #0x20
  402830:	mov	x8, xzr
  402834:	adrp	x0, 402000 <maybe_resize_slave_device+0x140>
  402838:	add	x0, x0, #0xc59
  40283c:	adrp	x1, 402000 <maybe_resize_slave_device+0x140>
  402840:	add	x1, x1, #0xc71
  402844:	adrp	x9, 402000 <maybe_resize_slave_device+0x140>
  402848:	add	x9, x9, #0x9c8
  40284c:	add	x9, x9, #0x3
  402850:	add	x2, sp, #0x10
  402854:	str	x8, [sp, #16]
  402858:	str	x9, [sp]
  40285c:	bl	400fb8 <terminal_urlify_man@plt>
  402860:	str	w0, [sp, #12]
  402864:	ldr	w10, [sp, #12]
  402868:	cmp	w10, #0x0
  40286c:	cset	w10, ge  // ge = tcont
  402870:	tbnz	w10, #0, 4028a0 <help+0x7c>
  402874:	mov	w8, wzr
  402878:	mov	w0, w8
  40287c:	ldr	x1, [sp]
  402880:	mov	w2, #0xac                  	// #172
  402884:	adrp	x3, 402000 <maybe_resize_slave_device+0x140>
  402888:	add	x3, x3, #0xbc6
  40288c:	bl	400fc8 <log_oom_internal@plt>
  402890:	stur	w0, [x29, #-4]
  402894:	mov	w8, #0x1                   	// #1
  402898:	str	w8, [sp, #8]
  40289c:	b	4028c8 <help+0xa4>
  4028a0:	adrp	x8, 420000 <completed.8445>
  4028a4:	add	x8, x8, #0x20
  4028a8:	ldr	x1, [x8]
  4028ac:	ldr	x2, [sp, #16]
  4028b0:	adrp	x0, 402000 <maybe_resize_slave_device+0x140>
  4028b4:	add	x0, x0, #0xc73
  4028b8:	bl	400fd8 <printf@plt>
  4028bc:	stur	wzr, [x29, #-4]
  4028c0:	mov	w9, #0x1                   	// #1
  4028c4:	str	w9, [sp, #8]
  4028c8:	add	x0, sp, #0x10
  4028cc:	bl	401c04 <freep>
  4028d0:	ldur	w0, [x29, #-4]
  4028d4:	ldp	x29, x30, [sp, #32]
  4028d8:	add	sp, sp, #0x30
  4028dc:	ret

00000000004028e0 <strnull>:
  4028e0:	sub	sp, sp, #0x20
  4028e4:	str	x0, [sp, #24]
  4028e8:	ldr	x8, [sp, #24]
  4028ec:	str	x8, [sp, #16]
  4028f0:	cbz	x8, 402900 <strnull+0x20>
  4028f4:	ldr	x8, [sp, #16]
  4028f8:	str	x8, [sp, #8]
  4028fc:	b	40290c <strnull+0x2c>
  402900:	adrp	x8, 402000 <maybe_resize_slave_device+0x140>
  402904:	add	x8, x8, #0xe96
  402908:	str	x8, [sp, #8]
  40290c:	ldr	x8, [sp, #8]
  402910:	mov	x0, x8
  402914:	add	sp, sp, #0x20
  402918:	ret
  40291c:	udf	#0

0000000000402920 <__libc_csu_init>:
  402920:	stp	x29, x30, [sp, #-64]!
  402924:	mov	x29, sp
  402928:	stp	x19, x20, [sp, #16]
  40292c:	adrp	x20, 41f000 <__FRAME_END__+0x1be70>
  402930:	add	x20, x20, #0xcc8
  402934:	stp	x21, x22, [sp, #32]
  402938:	adrp	x21, 41f000 <__FRAME_END__+0x1be70>
  40293c:	add	x21, x21, #0xcc0
  402940:	sub	x20, x20, x21
  402944:	mov	w22, w0
  402948:	stp	x23, x24, [sp, #48]
  40294c:	mov	x23, x1
  402950:	mov	x24, x2
  402954:	bl	400dd0 <_init>
  402958:	cmp	xzr, x20, asr #3
  40295c:	b.eq	402988 <__libc_csu_init+0x68>  // b.none
  402960:	asr	x20, x20, #3
  402964:	mov	x19, #0x0                   	// #0
  402968:	ldr	x3, [x21, x19, lsl #3]
  40296c:	mov	x2, x24
  402970:	add	x19, x19, #0x1
  402974:	mov	x1, x23
  402978:	mov	w0, w22
  40297c:	blr	x3
  402980:	cmp	x20, x19
  402984:	b.ne	402968 <__libc_csu_init+0x48>  // b.any
  402988:	ldp	x19, x20, [sp, #16]
  40298c:	ldp	x21, x22, [sp, #32]
  402990:	ldp	x23, x24, [sp, #48]
  402994:	ldp	x29, x30, [sp], #64
  402998:	ret
  40299c:	nop

00000000004029a0 <__libc_csu_fini>:
  4029a0:	ret

Disassembly of section .fini:

00000000004029a4 <_fini>:
  4029a4:	stp	x29, x30, [sp, #-16]!
  4029a8:	mov	x29, sp
  4029ac:	ldp	x29, x30, [sp], #16
  4029b0:	ret
