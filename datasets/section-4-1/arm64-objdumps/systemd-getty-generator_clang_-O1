
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-getty-generator_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000211388 <_start>:
  211388:	mov	x29, #0x0                   	// #0
  21138c:	mov	x30, #0x0                   	// #0
  211390:	mov	x5, x0
  211394:	ldr	x1, [sp]
  211398:	add	x2, sp, #0x8
  21139c:	mov	x6, sp
  2113a0:	movz	x0, #0x0, lsl #48
  2113a4:	movk	x0, #0x0, lsl #32
  2113a8:	movk	x0, #0x21, lsl #16
  2113ac:	movk	x0, #0x14d8
  2113b0:	movz	x3, #0x0, lsl #48
  2113b4:	movk	x3, #0x0, lsl #32
  2113b8:	movk	x3, #0x21, lsl #16
  2113bc:	movk	x3, #0x2040
  2113c0:	movz	x4, #0x0, lsl #48
  2113c4:	movk	x4, #0x0, lsl #32
  2113c8:	movk	x4, #0x21, lsl #16
  2113cc:	movk	x4, #0x20c0
  2113d0:	bl	212110 <__libc_start_main@plt>
  2113d4:	bl	212120 <abort@plt>

00000000002113d8 <call_weak_fn>:
  2113d8:	adrp	x0, 222000 <safe_close@plt+0xfd00>
  2113dc:	ldr	x0, [x0, #1264]
  2113e0:	cbz	x0, 2113e8 <call_weak_fn+0x10>
  2113e4:	b	212130 <__gmon_start__@plt>
  2113e8:	ret

00000000002113ec <deregister_tm_clones>:
  2113ec:	adrp	x0, 232000 <_DYNAMIC+0xfce0>
  2113f0:	add	x0, x0, #0x620
  2113f4:	adrp	x1, 232000 <_DYNAMIC+0xfce0>
  2113f8:	add	x1, x1, #0x620
  2113fc:	cmp	x0, x1
  211400:	b.eq	211434 <deregister_tm_clones+0x48>  // b.none
  211404:	stp	x29, x30, [sp, #-32]!
  211408:	mov	x29, sp
  21140c:	adrp	x0, 200000 <__FRAME_END__-0x1290>
  211410:	ldr	x0, [x0, #3744]
  211414:	str	x0, [sp, #24]
  211418:	mov	x1, x0
  21141c:	cbz	x1, 21142c <deregister_tm_clones+0x40>
  211420:	adrp	x0, 232000 <_DYNAMIC+0xfce0>
  211424:	add	x0, x0, #0x620
  211428:	blr	x1
  21142c:	ldp	x29, x30, [sp], #32
  211430:	ret
  211434:	ret

0000000000211438 <register_tm_clones>:
  211438:	adrp	x0, 232000 <_DYNAMIC+0xfce0>
  21143c:	add	x0, x0, #0x620
  211440:	adrp	x1, 232000 <_DYNAMIC+0xfce0>
  211444:	add	x1, x1, #0x620
  211448:	sub	x0, x0, x1
  21144c:	lsr	x1, x0, #63
  211450:	add	x0, x1, x0, asr #3
  211454:	cmp	xzr, x0, asr #1
  211458:	b.eq	211490 <register_tm_clones+0x58>  // b.none
  21145c:	stp	x29, x30, [sp, #-32]!
  211460:	mov	x29, sp
  211464:	asr	x1, x0, #1
  211468:	adrp	x0, 200000 <__FRAME_END__-0x1290>
  21146c:	ldr	x0, [x0, #3752]
  211470:	str	x0, [sp, #24]
  211474:	mov	x2, x0
  211478:	cbz	x2, 211488 <register_tm_clones+0x50>
  21147c:	adrp	x0, 232000 <_DYNAMIC+0xfce0>
  211480:	add	x0, x0, #0x620
  211484:	blr	x2
  211488:	ldp	x29, x30, [sp], #32
  21148c:	ret
  211490:	ret

0000000000211494 <__do_global_dtors_aux>:
  211494:	adrp	x0, 232000 <_DYNAMIC+0xfce0>
  211498:	ldrb	w0, [x0, #1568]
  21149c:	cbnz	w0, 2114c0 <__do_global_dtors_aux+0x2c>
  2114a0:	stp	x29, x30, [sp, #-16]!
  2114a4:	mov	x29, sp
  2114a8:	bl	2113ec <deregister_tm_clones>
  2114ac:	adrp	x0, 232000 <_DYNAMIC+0xfce0>
  2114b0:	mov	w1, #0x1                   	// #1
  2114b4:	strb	w1, [x0, #1568]
  2114b8:	ldp	x29, x30, [sp], #16
  2114bc:	ret
  2114c0:	ret

00000000002114c4 <frame_dummy>:
  2114c4:	stp	x29, x30, [sp, #-16]!
  2114c8:	mov	x29, sp
  2114cc:	bl	211438 <register_tm_clones>
  2114d0:	ldp	x29, x30, [sp], #16
  2114d4:	ret

00000000002114d8 <main>:
  2114d8:	stp	x29, x30, [sp, #-32]!
  2114dc:	stp	x20, x19, [sp, #16]
  2114e0:	mov	x29, sp
  2114e4:	mov	x19, x1
  2114e8:	mov	w20, w0
  2114ec:	bl	211590 <save_argc_argv>
  2114f0:	bl	212140 <log_setup_generator@plt>
  2114f4:	cmp	w20, #0x2
  2114f8:	b.lt	211544 <main+0x6c>  // b.tstop
  2114fc:	cmp	w20, #0x4
  211500:	b.eq	211544 <main+0x6c>  // b.none
  211504:	mov	w0, wzr
  211508:	bl	212150 <log_get_max_level_realm@plt>
  21150c:	cmp	w0, #0x3
  211510:	b.lt	211580 <main+0xa8>  // b.tstop
  211514:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211518:	adrp	x4, 201000 <__FRAME_END__-0x290>
  21151c:	adrp	x5, 201000 <__FRAME_END__-0x290>
  211520:	mov	w1, #0x16                  	// #22
  211524:	add	x2, x2, #0xeb3
  211528:	add	x4, x4, #0x159
  21152c:	add	x5, x5, #0xf7
  211530:	mov	w0, #0x3                   	// #3
  211534:	movk	w1, #0x4000, lsl #16
  211538:	mov	w3, #0xd0                  	// #208
  21153c:	bl	212160 <log_internal_realm@plt>
  211540:	b	211584 <main+0xac>
  211544:	cmp	w20, #0x2
  211548:	b.lt	211554 <main+0x7c>  // b.tstop
  21154c:	ldr	x0, [x19, #8]
  211550:	b	21155c <main+0x84>
  211554:	adrp	x0, 201000 <__FRAME_END__-0x290>
  211558:	add	x0, x0, #0x1d3
  21155c:	bl	2115a4 <run>
  211560:	mov	w19, w0
  211564:	bl	212170 <ask_password_agent_close@plt>
  211568:	bl	212180 <polkit_agent_close@plt>
  21156c:	bl	212190 <pager_close@plt>
  211570:	bl	2121a0 <mac_selinux_finish@plt>
  211574:	bl	21197c <static_destruct>
  211578:	lsr	w0, w19, #31
  21157c:	b	211584 <main+0xac>
  211580:	mov	w0, #0xffffffea            	// #-22
  211584:	ldp	x20, x19, [sp, #16]
  211588:	ldp	x29, x30, [sp], #32
  21158c:	ret

0000000000211590 <save_argc_argv>:
  211590:	adrp	x8, 232000 <_DYNAMIC+0xfce0>
  211594:	adrp	x9, 232000 <_DYNAMIC+0xfce0>
  211598:	str	w0, [x8, #1584]
  21159c:	str	x1, [x9, #1592]
  2115a0:	ret

00000000002115a4 <run>:
  2115a4:	stp	x29, x30, [sp, #-80]!
  2115a8:	str	x25, [sp, #16]
  2115ac:	stp	x24, x23, [sp, #32]
  2115b0:	stp	x22, x21, [sp, #48]
  2115b4:	stp	x20, x19, [sp, #64]
  2115b8:	mov	x29, sp
  2115bc:	sub	sp, sp, #0x50
  2115c0:	adrp	x8, 232000 <_DYNAMIC+0xfce0>
  2115c4:	str	xzr, [x29, #24]
  2115c8:	str	x0, [x8, #1576]
  2115cc:	cbz	x0, 21195c <run+0x3b8>
  2115d0:	bl	2121b0 <detect_container@plt>
  2115d4:	cmp	w0, #0x1
  2115d8:	b.lt	211728 <run+0x184>  // b.tstop
  2115dc:	mov	w0, wzr
  2115e0:	stur	xzr, [x29, #-8]
  2115e4:	bl	212150 <log_get_max_level_realm@plt>
  2115e8:	cmp	w0, #0x7
  2115ec:	b.lt	211618 <run+0x74>  // b.tstop
  2115f0:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  2115f4:	adrp	x4, 201000 <__FRAME_END__-0x290>
  2115f8:	adrp	x5, 200000 <__FRAME_END__-0x1290>
  2115fc:	add	x2, x2, #0xeb3
  211600:	add	x4, x4, #0x1b0
  211604:	add	x5, x5, #0xfb3
  211608:	mov	w0, #0x7                   	// #7
  21160c:	mov	w3, #0x70                  	// #112
  211610:	mov	w1, wzr
  211614:	bl	212160 <log_internal_realm@plt>
  211618:	adrp	x0, 200000 <__FRAME_END__-0x1290>
  21161c:	add	x0, x0, #0xf52
  211620:	mov	x1, x0
  211624:	bl	2119f4 <add_symlink>
  211628:	tbnz	w0, #31, 211820 <run+0x27c>
  21162c:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211630:	add	x1, x1, #0xf71
  211634:	sub	x2, x29, #0x8
  211638:	mov	w0, #0x1                   	// #1
  21163c:	bl	2121c0 <getenv_for_pid@plt>
  211640:	cmp	w0, #0x1
  211644:	b.lt	211904 <run+0x360>  // b.tstop
  211648:	ldur	x8, [x29, #-8]
  21164c:	adrp	x2, 201000 <__FRAME_END__-0x290>
  211650:	add	x2, x2, #0x24f
  211654:	sub	x0, x29, #0x10
  211658:	sub	x1, x29, #0x18
  21165c:	mov	w3, wzr
  211660:	stur	x8, [x29, #-16]
  211664:	bl	2121d0 <split@plt>
  211668:	cbz	x0, 2118fc <run+0x358>
  21166c:	adrp	x20, 200000 <__FRAME_END__-0x1290>
  211670:	adrp	x21, 201000 <__FRAME_END__-0x290>
  211674:	adrp	x22, 201000 <__FRAME_END__-0x290>
  211678:	mov	x1, x0
  21167c:	add	x20, x20, #0xfa4
  211680:	add	x21, x21, #0x185
  211684:	add	x22, x22, #0x24f
  211688:	b	2116a8 <run+0x104>
  21168c:	sub	x0, x29, #0x10
  211690:	sub	x1, x29, #0x18
  211694:	mov	x2, x22
  211698:	mov	w3, wzr
  21169c:	bl	2121d0 <split@plt>
  2116a0:	mov	x1, x0
  2116a4:	cbz	x0, 211944 <run+0x3a0>
  2116a8:	ldur	x8, [x29, #-24]
  2116ac:	mov	x9, sp
  2116b0:	mov	x25, sp
  2116b4:	add	x8, x8, #0x10
  2116b8:	and	x8, x8, #0xfffffffffffffff0
  2116bc:	sub	x23, x9, x8
  2116c0:	mov	sp, x23
  2116c4:	ldur	x24, [x29, #-24]
  2116c8:	mov	x0, x23
  2116cc:	mov	x2, x24
  2116d0:	bl	2121e0 <memcpy@plt>
  2116d4:	mov	x0, x23
  2116d8:	mov	x1, x20
  2116dc:	strb	wzr, [x23, x24]
  2116e0:	bl	2121f0 <path_startswith@plt>
  2116e4:	cmp	x0, #0x0
  2116e8:	csel	x0, x23, x0, eq  // eq = none
  2116ec:	mov	x1, x21
  2116f0:	bl	2121f0 <path_startswith@plt>
  2116f4:	cbz	x0, 21170c <run+0x168>
  2116f8:	bl	211c74 <add_container_getty>
  2116fc:	cmp	w0, #0x0
  211700:	lsr	w8, w0, #31
  211704:	csel	w19, w0, w19, lt  // lt = tstop
  211708:	b	211710 <run+0x16c>
  21170c:	mov	w8, #0x6                   	// #6
  211710:	mov	sp, x25
  211714:	cmp	w8, #0x6
  211718:	b.eq	21168c <run+0xe8>  // b.none
  21171c:	cbz	w8, 21168c <run+0xe8>
  211720:	cbnz	w8, 211908 <run+0x364>
  211724:	b	211904 <run+0x360>
  211728:	adrp	x0, 201000 <__FRAME_END__-0x290>
  21172c:	add	x0, x0, #0xad
  211730:	add	x1, x29, #0x18
  211734:	bl	212200 <read_one_line_file@plt>
  211738:	tbnz	w0, #31, 211828 <run+0x284>
  21173c:	ldr	x8, [x29, #24]
  211740:	adrp	x2, 201000 <__FRAME_END__-0x290>
  211744:	add	x2, x2, #0x24f
  211748:	sub	x0, x29, #0x8
  21174c:	sub	x1, x29, #0x10
  211750:	mov	w3, wzr
  211754:	stur	x8, [x29, #-8]
  211758:	bl	2121d0 <split@plt>
  21175c:	cbz	x0, 211938 <run+0x394>
  211760:	adrp	x20, 200000 <__FRAME_END__-0x1290>
  211764:	adrp	x21, 201000 <__FRAME_END__-0x290>
  211768:	adrp	x22, 201000 <__FRAME_END__-0x290>
  21176c:	add	x20, x20, #0xeb3
  211770:	add	x21, x21, #0x1b0
  211774:	add	x22, x22, #0x24f
  211778:	b	211794 <run+0x1f0>
  21177c:	sub	x0, x29, #0x8
  211780:	sub	x1, x29, #0x10
  211784:	mov	x2, x22
  211788:	mov	w3, wzr
  21178c:	bl	2121d0 <split@plt>
  211790:	cbz	x0, 211950 <run+0x3ac>
  211794:	ldur	x1, [x29, #-16]
  211798:	stur	xzr, [x29, #-24]
  21179c:	bl	212210 <strndup@plt>
  2117a0:	stur	x0, [x29, #-24]
  2117a4:	cbz	x0, 2117ec <run+0x248>
  2117a8:	mov	x23, x0
  2117ac:	bl	211d84 <isempty>
  2117b0:	tbnz	w0, #0, 2117e4 <run+0x240>
  2117b4:	mov	x0, x23
  2117b8:	bl	212220 <tty_is_vc@plt>
  2117bc:	tbnz	w0, #0, 2117e4 <run+0x240>
  2117c0:	mov	x0, x23
  2117c4:	bl	211da0 <verify_tty>
  2117c8:	tbnz	w0, #31, 2117e4 <run+0x240>
  2117cc:	mov	x0, x23
  2117d0:	bl	211ee0 <add_serial_getty>
  2117d4:	cmp	w0, #0x0
  2117d8:	lsr	w23, w0, #31
  2117dc:	csel	w19, w0, w19, lt  // lt = tstop
  2117e0:	b	211804 <run+0x260>
  2117e4:	mov	w23, #0x9                   	// #9
  2117e8:	b	211804 <run+0x260>
  2117ec:	mov	w2, #0xa5                  	// #165
  2117f0:	mov	x1, x20
  2117f4:	mov	x3, x21
  2117f8:	bl	212230 <log_oom_internal@plt>
  2117fc:	mov	w19, w0
  211800:	mov	w23, #0x1                   	// #1
  211804:	sub	x0, x29, #0x18
  211808:	bl	2119dc <freep>
  21180c:	cmp	w23, #0x9
  211810:	b.eq	21177c <run+0x1d8>  // b.none
  211814:	cbz	w23, 21177c <run+0x1d8>
  211818:	cbnz	w23, 211910 <run+0x36c>
  21181c:	b	211828 <run+0x284>
  211820:	mov	w19, w0
  211824:	b	211908 <run+0x364>
  211828:	adrp	x21, 200000 <__FRAME_END__-0x1290>
  21182c:	adrp	x9, 201000 <__FRAME_END__-0x290>
  211830:	adrp	x10, 201000 <__FRAME_END__-0x290>
  211834:	adrp	x11, 200000 <__FRAME_END__-0x1290>
  211838:	add	x21, x21, #0xfd7
  21183c:	add	x9, x9, #0xa2
  211840:	add	x10, x10, #0xa7
  211844:	add	x11, x11, #0xf99
  211848:	sub	x8, x29, #0x50
  21184c:	stp	x21, x9, [x29, #-80]
  211850:	adrp	x9, 200000 <__FRAME_END__-0x1290>
  211854:	stp	x10, x11, [x29, #-64]
  211858:	adrp	x10, 201000 <__FRAME_END__-0x290>
  21185c:	adrp	x20, 201000 <__FRAME_END__-0x290>
  211860:	add	x9, x9, #0xf68
  211864:	add	x10, x10, #0x21e
  211868:	add	x22, x8, #0x8
  21186c:	add	x20, x20, #0x1b4
  211870:	stp	x10, xzr, [x29, #-40]
  211874:	stur	x9, [x29, #-48]
  211878:	b	211884 <run+0x2e0>
  21187c:	ldr	x21, [x22], #8
  211880:	cbz	x21, 2118ec <run+0x348>
  211884:	mov	x2, #0xffffffffffffffff    	// #-1
  211888:	mov	x0, x20
  21188c:	mov	x1, x21
  211890:	stur	xzr, [x29, #-8]
  211894:	bl	212240 <path_join_internal@plt>
  211898:	stur	x0, [x29, #-8]
  21189c:	cbz	x0, 2118c4 <run+0x320>
  2118a0:	mov	w1, wzr
  2118a4:	bl	212250 <access@plt>
  2118a8:	tbnz	w0, #31, 2118d0 <run+0x32c>
  2118ac:	mov	x0, x21
  2118b0:	bl	211ee0 <add_serial_getty>
  2118b4:	cmp	w0, #0x0
  2118b8:	lsr	w21, w0, #31
  2118bc:	csel	w19, w0, w19, lt  // lt = tstop
  2118c0:	b	2118d4 <run+0x330>
  2118c4:	mov	w19, #0xfffffff4            	// #-12
  2118c8:	mov	w21, #0x1                   	// #1
  2118cc:	b	2118d4 <run+0x330>
  2118d0:	mov	w21, #0xc                   	// #12
  2118d4:	sub	x0, x29, #0x8
  2118d8:	bl	2119dc <freep>
  2118dc:	cmp	w21, #0xc
  2118e0:	b.eq	21187c <run+0x2d8>  // b.none
  2118e4:	cbz	w21, 21187c <run+0x2d8>
  2118e8:	b	2118f0 <run+0x34c>
  2118ec:	mov	w21, #0xa                   	// #10
  2118f0:	cmp	w21, #0xa
  2118f4:	csel	w19, wzr, w19, eq  // eq = none
  2118f8:	b	211910 <run+0x36c>
  2118fc:	mov	w8, wzr
  211900:	cbnz	w8, 211908 <run+0x364>
  211904:	mov	w19, wzr
  211908:	sub	x0, x29, #0x8
  21190c:	bl	2119dc <freep>
  211910:	add	x0, x29, #0x18
  211914:	bl	2119dc <freep>
  211918:	mov	w0, w19
  21191c:	mov	sp, x29
  211920:	ldp	x20, x19, [sp, #64]
  211924:	ldp	x22, x21, [sp, #48]
  211928:	ldp	x24, x23, [sp, #32]
  21192c:	ldr	x25, [sp, #16]
  211930:	ldp	x29, x30, [sp], #80
  211934:	ret
  211938:	mov	w23, wzr
  21193c:	cbnz	w23, 211910 <run+0x36c>
  211940:	b	211828 <run+0x284>
  211944:	mov	w8, wzr
  211948:	cbnz	w8, 211908 <run+0x364>
  21194c:	b	211904 <run+0x360>
  211950:	mov	w23, wzr
  211954:	cbnz	w23, 211910 <run+0x36c>
  211958:	b	211828 <run+0x284>
  21195c:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211960:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211964:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211968:	add	x1, x1, #0xf89
  21196c:	add	x2, x2, #0xeb3
  211970:	add	x4, x4, #0x7
  211974:	mov	w3, #0x6b                  	// #107
  211978:	bl	212260 <log_assert_failed_realm@plt>

000000000021197c <static_destruct>:
  21197c:	stp	x29, x30, [sp, #-32]!
  211980:	stp	x20, x19, [sp, #16]
  211984:	adrp	x8, 222000 <safe_close@plt+0xfd00>
  211988:	ldr	x8, [x8, #1272]
  21198c:	mov	x29, sp
  211990:	cbz	x8, 2119d0 <static_destruct+0x54>
  211994:	adrp	x0, 222000 <safe_close@plt+0xfd00>
  211998:	ldr	x0, [x0, #1272]
  21199c:	bl	212034 <ALIGN_TO>
  2119a0:	adrp	x20, 222000 <safe_close@plt+0xfd00>
  2119a4:	ldr	x20, [x20, #1280]
  2119a8:	cmp	x0, x20
  2119ac:	b.cs	2119d0 <static_destruct+0x54>  // b.hs, b.nlast
  2119b0:	mov	x19, x0
  2119b4:	ldp	x0, x8, [x19]
  2119b8:	blr	x8
  2119bc:	add	x0, x19, #0x10
  2119c0:	bl	212034 <ALIGN_TO>
  2119c4:	mov	x19, x0
  2119c8:	cmp	x0, x20
  2119cc:	b.cc	2119b4 <static_destruct+0x38>  // b.lo, b.ul, b.last
  2119d0:	ldp	x20, x19, [sp, #16]
  2119d4:	ldp	x29, x30, [sp], #32
  2119d8:	ret

00000000002119dc <freep>:
  2119dc:	stp	x29, x30, [sp, #-16]!
  2119e0:	ldr	x0, [x0]
  2119e4:	mov	x29, sp
  2119e8:	bl	212270 <free@plt>
  2119ec:	ldp	x29, x30, [sp], #16
  2119f0:	ret

00000000002119f4 <add_symlink>:
  2119f4:	stp	x29, x30, [sp, #-48]!
  2119f8:	stp	x22, x21, [sp, #16]
  2119fc:	stp	x20, x19, [sp, #32]
  211a00:	mov	x29, sp
  211a04:	sub	sp, sp, #0x20
  211a08:	cbz	x0, 211bd0 <add_symlink+0x1dc>
  211a0c:	mov	x20, x1
  211a10:	cbz	x1, 211bf0 <add_symlink+0x1fc>
  211a14:	adrp	x8, 201000 <__FRAME_END__-0x290>
  211a18:	mov	x21, xzr
  211a1c:	mov	x19, xzr
  211a20:	add	x8, x8, #0x39
  211a24:	sub	x22, x29, #0x18
  211a28:	stp	x8, x0, [x29, #-24]
  211a2c:	ldr	x0, [x22, x21]
  211a30:	cbz	x0, 211a48 <add_symlink+0x54>
  211a34:	bl	212280 <strlen@plt>
  211a38:	add	x21, x21, #0x8
  211a3c:	cmp	x21, #0x10
  211a40:	add	x19, x0, x19
  211a44:	b.ne	211a2c <add_symlink+0x38>  // b.any
  211a48:	add	x19, x19, #0x1
  211a4c:	mov	x0, x19
  211a50:	bl	211ff0 <size_multiply_overflow>
  211a54:	tbnz	w0, #0, 211c14 <add_symlink+0x220>
  211a58:	cmp	x19, #0x400, lsl #12
  211a5c:	b.hi	211c20 <add_symlink+0x22c>  // b.pmore
  211a60:	add	x9, x19, #0xf
  211a64:	mov	x8, sp
  211a68:	and	x9, x9, #0xfffffffffffffff0
  211a6c:	sub	x19, x8, x9
  211a70:	mov	sp, x19
  211a74:	mov	x21, xzr
  211a78:	sub	x22, x29, #0x18
  211a7c:	mov	x0, x19
  211a80:	ldr	x1, [x22, x21]
  211a84:	cbz	x1, 211a98 <add_symlink+0xa4>
  211a88:	bl	212290 <stpcpy@plt>
  211a8c:	add	x21, x21, #0x8
  211a90:	cmp	x21, #0x10
  211a94:	b.ne	211a80 <add_symlink+0x8c>  // b.any
  211a98:	strb	wzr, [x0]
  211a9c:	adrp	x8, 232000 <_DYNAMIC+0xfce0>
  211aa0:	ldr	x8, [x8, #1576]
  211aa4:	adrp	x9, 201000 <__FRAME_END__-0x290>
  211aa8:	add	x9, x9, #0x209
  211aac:	mov	x22, xzr
  211ab0:	mov	x21, xzr
  211ab4:	stp	x9, x20, [x29, #-16]
  211ab8:	sub	x20, x29, #0x18
  211abc:	stur	x8, [x29, #-24]
  211ac0:	ldr	x0, [x20, x22]
  211ac4:	cbz	x0, 211adc <add_symlink+0xe8>
  211ac8:	bl	212280 <strlen@plt>
  211acc:	add	x22, x22, #0x8
  211ad0:	cmp	x22, #0x18
  211ad4:	add	x21, x0, x21
  211ad8:	b.ne	211ac0 <add_symlink+0xcc>  // b.any
  211adc:	add	x20, x21, #0x1
  211ae0:	mov	x0, x20
  211ae4:	bl	211ff0 <size_multiply_overflow>
  211ae8:	tbnz	w0, #0, 211c44 <add_symlink+0x250>
  211aec:	cmp	x20, #0x400, lsl #12
  211af0:	b.hi	211c50 <add_symlink+0x25c>  // b.pmore
  211af4:	add	x9, x20, #0xf
  211af8:	mov	x8, sp
  211afc:	and	x9, x9, #0xfffffffffffffff0
  211b00:	sub	x20, x8, x9
  211b04:	mov	sp, x20
  211b08:	mov	x21, xzr
  211b0c:	sub	x22, x29, #0x18
  211b10:	mov	x0, x20
  211b14:	ldr	x1, [x22, x21]
  211b18:	cbz	x1, 211b2c <add_symlink+0x138>
  211b1c:	bl	212290 <stpcpy@plt>
  211b20:	add	x21, x21, #0x8
  211b24:	cmp	x21, #0x18
  211b28:	b.ne	211b14 <add_symlink+0x120>  // b.any
  211b2c:	strb	wzr, [x0]
  211b30:	mov	w1, #0x1ed                 	// #493
  211b34:	mov	x0, x20
  211b38:	bl	2122a0 <mkdir_parents_label@plt>
  211b3c:	mov	x0, x19
  211b40:	mov	x1, x20
  211b44:	bl	2122b0 <symlink@plt>
  211b48:	mov	w8, w0
  211b4c:	mov	w0, wzr
  211b50:	tbz	w8, #31, 211bbc <add_symlink+0x1c8>
  211b54:	bl	2122c0 <__errno_location@plt>
  211b58:	ldr	w19, [x0]
  211b5c:	cmp	w19, #0x11
  211b60:	b.ne	211b6c <add_symlink+0x178>  // b.any
  211b64:	mov	w0, wzr
  211b68:	b	211bbc <add_symlink+0x1c8>
  211b6c:	mov	w0, wzr
  211b70:	bl	212150 <log_get_max_level_realm@plt>
  211b74:	cmp	w0, #0x3
  211b78:	b.lt	211bac <add_symlink+0x1b8>  // b.tstop
  211b7c:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211b80:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211b84:	adrp	x5, 201000 <__FRAME_END__-0x290>
  211b88:	add	x2, x2, #0xeb3
  211b8c:	add	x4, x4, #0x4e
  211b90:	add	x5, x5, #0x12c
  211b94:	mov	w0, #0x3                   	// #3
  211b98:	mov	w3, #0x2a                  	// #42
  211b9c:	mov	w1, w19
  211ba0:	mov	x6, x20
  211ba4:	bl	212160 <log_internal_realm@plt>
  211ba8:	b	211bbc <add_symlink+0x1c8>
  211bac:	cmp	w19, #0x0
  211bb0:	mov	w8, wzr
  211bb4:	cneg	w9, w19, mi  // mi = first
  211bb8:	sub	w0, w8, w9, uxtb
  211bbc:	mov	sp, x29
  211bc0:	ldp	x20, x19, [sp, #32]
  211bc4:	ldp	x22, x21, [sp, #16]
  211bc8:	ldp	x29, x30, [sp], #48
  211bcc:	ret
  211bd0:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211bd4:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211bd8:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211bdc:	add	x1, x1, #0xf80
  211be0:	add	x2, x2, #0xeb3
  211be4:	add	x4, x4, #0xcb
  211be8:	mov	w3, #0x1c                  	// #28
  211bec:	bl	212260 <log_assert_failed_realm@plt>
  211bf0:	adrp	x1, 201000 <__FRAME_END__-0x290>
  211bf4:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211bf8:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211bfc:	add	x1, x1, #0x123
  211c00:	add	x2, x2, #0xeb3
  211c04:	add	x4, x4, #0xcb
  211c08:	mov	w3, #0x1d                  	// #29
  211c0c:	mov	w0, wzr
  211c10:	bl	212260 <log_assert_failed_realm@plt>
  211c14:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211c18:	add	x1, x1, #0xfdc
  211c1c:	b	211c28 <add_symlink+0x234>
  211c20:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211c24:	add	x1, x1, #0xed9
  211c28:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211c2c:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211c30:	add	x2, x2, #0xeb3
  211c34:	add	x4, x4, #0xcb
  211c38:	mov	w3, #0x1f                  	// #31
  211c3c:	mov	w0, wzr
  211c40:	bl	212260 <log_assert_failed_realm@plt>
  211c44:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211c48:	add	x1, x1, #0xfdc
  211c4c:	b	211c58 <add_symlink+0x264>
  211c50:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211c54:	add	x1, x1, #0xed9
  211c58:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211c5c:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211c60:	add	x2, x2, #0xeb3
  211c64:	add	x4, x4, #0xcb
  211c68:	mov	w3, #0x20                  	// #32
  211c6c:	mov	w0, wzr
  211c70:	bl	212260 <log_assert_failed_realm@plt>

0000000000211c74 <add_container_getty>:
  211c74:	stp	x29, x30, [sp, #-32]!
  211c78:	mov	x29, sp
  211c7c:	str	x19, [sp, #16]
  211c80:	str	xzr, [x29, #24]
  211c84:	cbz	x0, 211d64 <add_container_getty+0xf0>
  211c88:	mov	x19, x0
  211c8c:	mov	w0, wzr
  211c90:	bl	212150 <log_get_max_level_realm@plt>
  211c94:	cmp	w0, #0x7
  211c98:	b.lt	211cc8 <add_container_getty+0x54>  // b.tstop
  211c9c:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211ca0:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211ca4:	adrp	x5, 200000 <__FRAME_END__-0x1290>
  211ca8:	add	x2, x2, #0xeb3
  211cac:	add	x4, x4, #0x1d8
  211cb0:	add	x5, x5, #0xef8
  211cb4:	mov	w0, #0x7                   	// #7
  211cb8:	mov	w3, #0x45                  	// #69
  211cbc:	mov	w1, wzr
  211cc0:	mov	x6, x19
  211cc4:	bl	212160 <log_internal_realm@plt>
  211cc8:	adrp	x0, 201000 <__FRAME_END__-0x290>
  211ccc:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211cd0:	add	x0, x0, #0x1c3
  211cd4:	add	x2, x2, #0xfaa
  211cd8:	add	x3, x29, #0x18
  211cdc:	mov	x1, x19
  211ce0:	bl	2122d0 <unit_name_from_path_instance@plt>
  211ce4:	tbnz	w0, #31, 211cfc <add_container_getty+0x88>
  211ce8:	ldr	x1, [x29, #24]
  211cec:	adrp	x0, 201000 <__FRAME_END__-0x290>
  211cf0:	add	x0, x0, #0x5a
  211cf4:	bl	2119f4 <add_symlink>
  211cf8:	b	211d38 <add_container_getty+0xc4>
  211cfc:	mov	w19, w0
  211d00:	mov	w0, wzr
  211d04:	bl	212150 <log_get_max_level_realm@plt>
  211d08:	cmp	w0, #0x3
  211d0c:	b.lt	211d54 <add_container_getty+0xe0>  // b.tstop
  211d10:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211d14:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211d18:	adrp	x5, 200000 <__FRAME_END__-0x1290>
  211d1c:	add	x2, x2, #0xeb3
  211d20:	add	x4, x4, #0x1d8
  211d24:	add	x5, x5, #0xf2e
  211d28:	mov	w0, #0x3                   	// #3
  211d2c:	mov	w3, #0x49                  	// #73
  211d30:	mov	w1, w19
  211d34:	bl	212160 <log_internal_realm@plt>
  211d38:	mov	w19, w0
  211d3c:	add	x0, x29, #0x18
  211d40:	bl	2119dc <freep>
  211d44:	mov	w0, w19
  211d48:	ldr	x19, [sp, #16]
  211d4c:	ldp	x29, x30, [sp], #32
  211d50:	ret
  211d54:	mov	w8, wzr
  211d58:	neg	w9, w19
  211d5c:	sub	w19, w8, w9, uxtb
  211d60:	b	211d3c <add_container_getty+0xc8>
  211d64:	adrp	x1, 201000 <__FRAME_END__-0x290>
  211d68:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211d6c:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211d70:	add	x1, x1, #0x228
  211d74:	add	x2, x2, #0xeb3
  211d78:	add	x4, x4, #0x18a
  211d7c:	mov	w3, #0x43                  	// #67
  211d80:	bl	212260 <log_assert_failed_realm@plt>

0000000000211d84 <isempty>:
  211d84:	cbz	x0, 211d98 <isempty+0x14>
  211d88:	ldrb	w8, [x0]
  211d8c:	cmp	w8, #0x0
  211d90:	cset	w0, eq  // eq = none
  211d94:	ret
  211d98:	mov	w0, #0x1                   	// #1
  211d9c:	ret

0000000000211da0 <verify_tty>:
  211da0:	stp	x29, x30, [sp, #-48]!
  211da4:	str	x21, [sp, #16]
  211da8:	stp	x20, x19, [sp, #32]
  211dac:	mov	x29, sp
  211db0:	sub	sp, sp, #0x10
  211db4:	adrp	x9, 200000 <__FRAME_END__-0x1290>
  211db8:	mov	x20, xzr
  211dbc:	mov	x19, xzr
  211dc0:	mov	w8, #0xffffffff            	// #-1
  211dc4:	add	x9, x9, #0xfa4
  211dc8:	sub	x21, x29, #0x10
  211dcc:	str	w8, [x29, #28]
  211dd0:	stp	x9, x0, [x29, #-16]
  211dd4:	ldr	x0, [x21, x20]
  211dd8:	cbz	x0, 211df0 <verify_tty+0x50>
  211ddc:	bl	212280 <strlen@plt>
  211de0:	add	x20, x20, #0x8
  211de4:	cmp	x20, #0x10
  211de8:	add	x19, x0, x19
  211dec:	b.ne	211dd4 <verify_tty+0x34>  // b.any
  211df0:	add	x19, x19, #0x1
  211df4:	mov	x0, x19
  211df8:	bl	211ff0 <size_multiply_overflow>
  211dfc:	tbnz	w0, #0, 211eb0 <verify_tty+0x110>
  211e00:	cmp	x19, #0x400, lsl #12
  211e04:	b.hi	211ebc <verify_tty+0x11c>  // b.pmore
  211e08:	add	x9, x19, #0xf
  211e0c:	mov	x8, sp
  211e10:	and	x9, x9, #0xfffffffffffffff0
  211e14:	sub	x19, x8, x9
  211e18:	mov	sp, x19
  211e1c:	mov	x20, xzr
  211e20:	sub	x21, x29, #0x10
  211e24:	mov	x0, x19
  211e28:	ldr	x1, [x21, x20]
  211e2c:	cbz	x1, 211e40 <verify_tty+0xa0>
  211e30:	bl	212290 <stpcpy@plt>
  211e34:	add	x20, x20, #0x8
  211e38:	cmp	x20, #0x10
  211e3c:	b.ne	211e28 <verify_tty+0x88>  // b.any
  211e40:	mov	w1, #0x8902                	// #35074
  211e44:	strb	wzr, [x0]
  211e48:	movk	w1, #0x8, lsl #16
  211e4c:	mov	x0, x19
  211e50:	bl	2122e0 <open64@plt>
  211e54:	mov	w19, w0
  211e58:	str	w0, [x29, #28]
  211e5c:	bl	2122c0 <__errno_location@plt>
  211e60:	tbnz	w19, #31, 211e88 <verify_tty+0xe8>
  211e64:	str	wzr, [x0]
  211e68:	mov	w0, w19
  211e6c:	bl	2122f0 <isatty@plt>
  211e70:	cmp	w0, #0x0
  211e74:	mov	w19, wzr
  211e78:	b.gt	211e90 <verify_tty+0xf0>
  211e7c:	bl	212010 <errno_or_else>
  211e80:	mov	w19, w0
  211e84:	b	211e90 <verify_tty+0xf0>
  211e88:	ldr	w8, [x0]
  211e8c:	neg	w19, w8
  211e90:	add	x0, x29, #0x1c
  211e94:	bl	211ff8 <closep>
  211e98:	mov	w0, w19
  211e9c:	mov	sp, x29
  211ea0:	ldp	x20, x19, [sp, #32]
  211ea4:	ldr	x21, [sp, #16]
  211ea8:	ldp	x29, x30, [sp], #48
  211eac:	ret
  211eb0:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211eb4:	add	x1, x1, #0xfdc
  211eb8:	b	211ec4 <verify_tty+0x124>
  211ebc:	adrp	x1, 200000 <__FRAME_END__-0x1290>
  211ec0:	add	x1, x1, #0xed9
  211ec4:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211ec8:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211ecc:	add	x2, x2, #0xeb3
  211ed0:	add	x4, x4, #0x1ec
  211ed4:	mov	w3, #0x57                  	// #87
  211ed8:	mov	w0, wzr
  211edc:	bl	212260 <log_assert_failed_realm@plt>

0000000000211ee0 <add_serial_getty>:
  211ee0:	stp	x29, x30, [sp, #-32]!
  211ee4:	mov	x29, sp
  211ee8:	str	x19, [sp, #16]
  211eec:	str	xzr, [x29, #24]
  211ef0:	cbz	x0, 211fd0 <add_serial_getty+0xf0>
  211ef4:	mov	x19, x0
  211ef8:	mov	w0, wzr
  211efc:	bl	212150 <log_get_max_level_realm@plt>
  211f00:	cmp	w0, #0x7
  211f04:	b.lt	211f34 <add_serial_getty+0x54>  // b.tstop
  211f08:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211f0c:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211f10:	adrp	x5, 201000 <__FRAME_END__-0x290>
  211f14:	add	x2, x2, #0xeb3
  211f18:	add	x4, x4, #0x174
  211f1c:	add	x5, x5, #0x73
  211f20:	mov	w0, #0x7                   	// #7
  211f24:	mov	w3, #0x36                  	// #54
  211f28:	mov	w1, wzr
  211f2c:	mov	x6, x19
  211f30:	bl	212160 <log_internal_realm@plt>
  211f34:	adrp	x0, 201000 <__FRAME_END__-0x290>
  211f38:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211f3c:	add	x0, x0, #0x14c
  211f40:	add	x2, x2, #0xfaa
  211f44:	add	x3, x29, #0x18
  211f48:	mov	x1, x19
  211f4c:	bl	2122d0 <unit_name_from_path_instance@plt>
  211f50:	tbnz	w0, #31, 211f68 <add_serial_getty+0x88>
  211f54:	ldr	x1, [x29, #24]
  211f58:	adrp	x0, 201000 <__FRAME_END__-0x290>
  211f5c:	add	x0, x0, #0x15e
  211f60:	bl	2119f4 <add_symlink>
  211f64:	b	211fa4 <add_serial_getty+0xc4>
  211f68:	mov	w19, w0
  211f6c:	mov	w0, wzr
  211f70:	bl	212150 <log_get_max_level_realm@plt>
  211f74:	cmp	w0, #0x3
  211f78:	b.lt	211fc0 <add_serial_getty+0xe0>  // b.tstop
  211f7c:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211f80:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211f84:	adrp	x5, 200000 <__FRAME_END__-0x1290>
  211f88:	add	x2, x2, #0xeb3
  211f8c:	add	x4, x4, #0x174
  211f90:	add	x5, x5, #0xf2e
  211f94:	mov	w0, #0x3                   	// #3
  211f98:	mov	w3, #0x3a                  	// #58
  211f9c:	mov	w1, w19
  211fa0:	bl	212160 <log_internal_realm@plt>
  211fa4:	mov	w19, w0
  211fa8:	add	x0, x29, #0x18
  211fac:	bl	2119dc <freep>
  211fb0:	mov	w0, w19
  211fb4:	ldr	x19, [sp, #16]
  211fb8:	ldp	x29, x30, [sp], #32
  211fbc:	ret
  211fc0:	mov	w8, wzr
  211fc4:	neg	w9, w19
  211fc8:	sub	w19, w8, w9, uxtb
  211fcc:	b	211fa8 <add_serial_getty+0xc8>
  211fd0:	adrp	x1, 201000 <__FRAME_END__-0x290>
  211fd4:	adrp	x2, 200000 <__FRAME_END__-0x1290>
  211fd8:	adrp	x4, 201000 <__FRAME_END__-0x290>
  211fdc:	add	x1, x1, #0x228
  211fe0:	add	x2, x2, #0xeb3
  211fe4:	add	x4, x4, #0x22c
  211fe8:	mov	w3, #0x34                  	// #52
  211fec:	bl	212260 <log_assert_failed_realm@plt>

0000000000211ff0 <size_multiply_overflow>:
  211ff0:	mov	w0, wzr
  211ff4:	ret

0000000000211ff8 <closep>:
  211ff8:	stp	x29, x30, [sp, #-16]!
  211ffc:	ldr	w0, [x0]
  212000:	mov	x29, sp
  212004:	bl	212300 <safe_close@plt>
  212008:	ldp	x29, x30, [sp], #16
  21200c:	ret

0000000000212010 <errno_or_else>:
  212010:	stp	x29, x30, [sp, #-16]!
  212014:	mov	x29, sp
  212018:	bl	2122c0 <__errno_location@plt>
  21201c:	ldr	w8, [x0]
  212020:	mov	w9, #0xfffffffb            	// #-5
  212024:	cmp	w8, #0x0
  212028:	csneg	w0, w9, w8, le
  21202c:	ldp	x29, x30, [sp], #16
  212030:	ret

0000000000212034 <ALIGN_TO>:
  212034:	add	x8, x0, #0x7
  212038:	and	x0, x8, #0xfffffffffffffff8
  21203c:	ret

0000000000212040 <__libc_csu_init>:
  212040:	stp	x29, x30, [sp, #-64]!
  212044:	mov	x29, sp
  212048:	stp	x19, x20, [sp, #16]
  21204c:	adrp	x20, 222000 <safe_close@plt+0xfd00>
  212050:	add	x20, x20, #0x320
  212054:	stp	x21, x22, [sp, #32]
  212058:	adrp	x21, 222000 <safe_close@plt+0xfd00>
  21205c:	add	x21, x21, #0x318
  212060:	sub	x20, x20, x21
  212064:	mov	w22, w0
  212068:	stp	x23, x24, [sp, #48]
  21206c:	mov	x23, x1
  212070:	mov	x24, x2
  212074:	bl	2120c4 <_init>
  212078:	cmp	xzr, x20, asr #3
  21207c:	b.eq	2120a8 <__libc_csu_init+0x68>  // b.none
  212080:	asr	x20, x20, #3
  212084:	mov	x19, #0x0                   	// #0
  212088:	ldr	x3, [x21, x19, lsl #3]
  21208c:	mov	x2, x24
  212090:	add	x19, x19, #0x1
  212094:	mov	x1, x23
  212098:	mov	w0, w22
  21209c:	blr	x3
  2120a0:	cmp	x20, x19
  2120a4:	b.ne	212088 <__libc_csu_init+0x48>  // b.any
  2120a8:	ldp	x19, x20, [sp, #16]
  2120ac:	ldp	x21, x22, [sp, #32]
  2120b0:	ldp	x23, x24, [sp, #48]
  2120b4:	ldp	x29, x30, [sp], #64
  2120b8:	ret
  2120bc:	nop

00000000002120c0 <__libc_csu_fini>:
  2120c0:	ret

Disassembly of section .init:

00000000002120c4 <_init>:
  2120c4:	stp	x29, x30, [sp, #-16]!
  2120c8:	mov	x29, sp
  2120cc:	bl	2113d8 <call_weak_fn>
  2120d0:	ldp	x29, x30, [sp], #16
  2120d4:	ret

Disassembly of section .fini:

00000000002120d8 <_fini>:
  2120d8:	stp	x29, x30, [sp, #-16]!
  2120dc:	mov	x29, sp
  2120e0:	ldp	x29, x30, [sp], #16
  2120e4:	ret

Disassembly of section .plt:

00000000002120f0 <__libc_start_main@plt-0x20>:
  2120f0:	stp	x16, x30, [sp, #-16]!
  2120f4:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2120f8:	ldr	x17, [x16, #1304]
  2120fc:	add	x16, x16, #0x518
  212100:	br	x17
  212104:	nop
  212108:	nop
  21210c:	nop

0000000000212110 <__libc_start_main@plt>:
  212110:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212114:	ldr	x17, [x16, #1312]
  212118:	add	x16, x16, #0x520
  21211c:	br	x17

0000000000212120 <abort@plt>:
  212120:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212124:	ldr	x17, [x16, #1320]
  212128:	add	x16, x16, #0x528
  21212c:	br	x17

0000000000212130 <__gmon_start__@plt>:
  212130:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212134:	ldr	x17, [x16, #1328]
  212138:	add	x16, x16, #0x530
  21213c:	br	x17

0000000000212140 <log_setup_generator@plt>:
  212140:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212144:	ldr	x17, [x16, #1336]
  212148:	add	x16, x16, #0x538
  21214c:	br	x17

0000000000212150 <log_get_max_level_realm@plt>:
  212150:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212154:	ldr	x17, [x16, #1344]
  212158:	add	x16, x16, #0x540
  21215c:	br	x17

0000000000212160 <log_internal_realm@plt>:
  212160:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212164:	ldr	x17, [x16, #1352]
  212168:	add	x16, x16, #0x548
  21216c:	br	x17

0000000000212170 <ask_password_agent_close@plt>:
  212170:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212174:	ldr	x17, [x16, #1360]
  212178:	add	x16, x16, #0x550
  21217c:	br	x17

0000000000212180 <polkit_agent_close@plt>:
  212180:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212184:	ldr	x17, [x16, #1368]
  212188:	add	x16, x16, #0x558
  21218c:	br	x17

0000000000212190 <pager_close@plt>:
  212190:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212194:	ldr	x17, [x16, #1376]
  212198:	add	x16, x16, #0x560
  21219c:	br	x17

00000000002121a0 <mac_selinux_finish@plt>:
  2121a0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2121a4:	ldr	x17, [x16, #1384]
  2121a8:	add	x16, x16, #0x568
  2121ac:	br	x17

00000000002121b0 <detect_container@plt>:
  2121b0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2121b4:	ldr	x17, [x16, #1392]
  2121b8:	add	x16, x16, #0x570
  2121bc:	br	x17

00000000002121c0 <getenv_for_pid@plt>:
  2121c0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2121c4:	ldr	x17, [x16, #1400]
  2121c8:	add	x16, x16, #0x578
  2121cc:	br	x17

00000000002121d0 <split@plt>:
  2121d0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2121d4:	ldr	x17, [x16, #1408]
  2121d8:	add	x16, x16, #0x580
  2121dc:	br	x17

00000000002121e0 <memcpy@plt>:
  2121e0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2121e4:	ldr	x17, [x16, #1416]
  2121e8:	add	x16, x16, #0x588
  2121ec:	br	x17

00000000002121f0 <path_startswith@plt>:
  2121f0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2121f4:	ldr	x17, [x16, #1424]
  2121f8:	add	x16, x16, #0x590
  2121fc:	br	x17

0000000000212200 <read_one_line_file@plt>:
  212200:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212204:	ldr	x17, [x16, #1432]
  212208:	add	x16, x16, #0x598
  21220c:	br	x17

0000000000212210 <strndup@plt>:
  212210:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212214:	ldr	x17, [x16, #1440]
  212218:	add	x16, x16, #0x5a0
  21221c:	br	x17

0000000000212220 <tty_is_vc@plt>:
  212220:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212224:	ldr	x17, [x16, #1448]
  212228:	add	x16, x16, #0x5a8
  21222c:	br	x17

0000000000212230 <log_oom_internal@plt>:
  212230:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212234:	ldr	x17, [x16, #1456]
  212238:	add	x16, x16, #0x5b0
  21223c:	br	x17

0000000000212240 <path_join_internal@plt>:
  212240:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212244:	ldr	x17, [x16, #1464]
  212248:	add	x16, x16, #0x5b8
  21224c:	br	x17

0000000000212250 <access@plt>:
  212250:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212254:	ldr	x17, [x16, #1472]
  212258:	add	x16, x16, #0x5c0
  21225c:	br	x17

0000000000212260 <log_assert_failed_realm@plt>:
  212260:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212264:	ldr	x17, [x16, #1480]
  212268:	add	x16, x16, #0x5c8
  21226c:	br	x17

0000000000212270 <free@plt>:
  212270:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212274:	ldr	x17, [x16, #1488]
  212278:	add	x16, x16, #0x5d0
  21227c:	br	x17

0000000000212280 <strlen@plt>:
  212280:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212284:	ldr	x17, [x16, #1496]
  212288:	add	x16, x16, #0x5d8
  21228c:	br	x17

0000000000212290 <stpcpy@plt>:
  212290:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212294:	ldr	x17, [x16, #1504]
  212298:	add	x16, x16, #0x5e0
  21229c:	br	x17

00000000002122a0 <mkdir_parents_label@plt>:
  2122a0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2122a4:	ldr	x17, [x16, #1512]
  2122a8:	add	x16, x16, #0x5e8
  2122ac:	br	x17

00000000002122b0 <symlink@plt>:
  2122b0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2122b4:	ldr	x17, [x16, #1520]
  2122b8:	add	x16, x16, #0x5f0
  2122bc:	br	x17

00000000002122c0 <__errno_location@plt>:
  2122c0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2122c4:	ldr	x17, [x16, #1528]
  2122c8:	add	x16, x16, #0x5f8
  2122cc:	br	x17

00000000002122d0 <unit_name_from_path_instance@plt>:
  2122d0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2122d4:	ldr	x17, [x16, #1536]
  2122d8:	add	x16, x16, #0x600
  2122dc:	br	x17

00000000002122e0 <open64@plt>:
  2122e0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2122e4:	ldr	x17, [x16, #1544]
  2122e8:	add	x16, x16, #0x608
  2122ec:	br	x17

00000000002122f0 <isatty@plt>:
  2122f0:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  2122f4:	ldr	x17, [x16, #1552]
  2122f8:	add	x16, x16, #0x610
  2122fc:	br	x17

0000000000212300 <safe_close@plt>:
  212300:	adrp	x16, 222000 <safe_close@plt+0xfd00>
  212304:	ldr	x17, [x16, #1560]
  212308:	add	x16, x16, #0x618
  21230c:	br	x17
