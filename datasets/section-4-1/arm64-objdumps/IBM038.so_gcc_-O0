
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//IBM038.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000006b0 <.init>:
 6b0:	stp	x29, x30, [sp, #-16]!
 6b4:	mov	x29, sp
 6b8:	bl	760 <__assert_fail@plt+0x10>
 6bc:	ldp	x29, x30, [sp], #16
 6c0:	ret

Disassembly of section .plt:

00000000000006d0 <__cxa_finalize@plt-0x20>:
 6d0:	stp	x16, x30, [sp, #-16]!
 6d4:	adrp	x16, 11000 <gconv@@Base+0x10720>
 6d8:	ldr	x17, [x16, #4088]
 6dc:	add	x16, x16, #0xff8
 6e0:	br	x17
 6e4:	nop
 6e8:	nop
 6ec:	nop

00000000000006f0 <__cxa_finalize@plt>:
 6f0:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 6f4:	ldr	x17, [x16]
 6f8:	add	x16, x16, #0x0
 6fc:	br	x17

0000000000000700 <__gconv_transliterate@plt>:
 700:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 704:	ldr	x17, [x16, #8]
 708:	add	x16, x16, #0x8
 70c:	br	x17

0000000000000710 <__stack_chk_fail@plt>:
 710:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 714:	ldr	x17, [x16, #16]
 718:	add	x16, x16, #0x10
 71c:	br	x17

0000000000000720 <__gmon_start__@plt>:
 720:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 724:	ldr	x17, [x16, #24]
 728:	add	x16, x16, #0x18
 72c:	br	x17

0000000000000730 <strcmp@plt>:
 730:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 734:	ldr	x17, [x16, #32]
 738:	add	x16, x16, #0x20
 73c:	br	x17

0000000000000740 <_dl_mcount_wrapper_check@plt>:
 740:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 744:	ldr	x17, [x16, #40]
 748:	add	x16, x16, #0x28
 74c:	br	x17

0000000000000750 <__assert_fail@plt>:
 750:	adrp	x16, 12000 <__cxa_finalize@GLIBC_2.17>
 754:	ldr	x17, [x16, #48]
 758:	add	x16, x16, #0x30
 75c:	br	x17

Disassembly of section .text:

0000000000000760 <gconv_init@@Base-0xf8>:
     760:	adrp	x0, 11000 <gconv@@Base+0x10720>
     764:	ldr	x0, [x0, #4048]
     768:	cbz	x0, 770 <__assert_fail@plt+0x20>
     76c:	b	720 <__gmon_start__@plt>
     770:	ret
     774:	nop
     778:	adrp	x0, 12000 <gconv@@Base+0x11720>
     77c:	add	x0, x0, #0x40
     780:	adrp	x1, 12000 <gconv@@Base+0x11720>
     784:	add	x1, x1, #0x40
     788:	cmp	x1, x0
     78c:	b.eq	7a4 <__assert_fail@plt+0x54>  // b.none
     790:	adrp	x1, 11000 <gconv@@Base+0x10720>
     794:	ldr	x1, [x1, #4024]
     798:	cbz	x1, 7a4 <__assert_fail@plt+0x54>
     79c:	mov	x16, x1
     7a0:	br	x16
     7a4:	ret
     7a8:	adrp	x0, 12000 <gconv@@Base+0x11720>
     7ac:	add	x0, x0, #0x40
     7b0:	adrp	x1, 12000 <gconv@@Base+0x11720>
     7b4:	add	x1, x1, #0x40
     7b8:	sub	x1, x1, x0
     7bc:	lsr	x2, x1, #63
     7c0:	add	x1, x2, x1, asr #3
     7c4:	cmp	xzr, x1, asr #1
     7c8:	asr	x1, x1, #1
     7cc:	b.eq	7e4 <__assert_fail@plt+0x94>  // b.none
     7d0:	adrp	x2, 11000 <gconv@@Base+0x10720>
     7d4:	ldr	x2, [x2, #4064]
     7d8:	cbz	x2, 7e4 <__assert_fail@plt+0x94>
     7dc:	mov	x16, x2
     7e0:	br	x16
     7e4:	ret
     7e8:	stp	x29, x30, [sp, #-32]!
     7ec:	mov	x29, sp
     7f0:	str	x19, [sp, #16]
     7f4:	adrp	x19, 12000 <gconv@@Base+0x11720>
     7f8:	ldrb	w0, [x19, #64]
     7fc:	cbnz	w0, 824 <__assert_fail@plt+0xd4>
     800:	adrp	x0, 11000 <gconv@@Base+0x10720>
     804:	ldr	x0, [x0, #4032]
     808:	cbz	x0, 818 <__assert_fail@plt+0xc8>
     80c:	adrp	x0, 12000 <gconv@@Base+0x11720>
     810:	ldr	x0, [x0, #56]
     814:	bl	6f0 <__cxa_finalize@plt>
     818:	bl	778 <__assert_fail@plt+0x28>
     81c:	mov	w0, #0x1                   	// #1
     820:	strb	w0, [x19, #64]
     824:	ldr	x19, [sp, #16]
     828:	ldp	x29, x30, [sp], #32
     82c:	ret
     830:	b	7a8 <__assert_fail@plt+0x58>
     834:	nop
     838:	and	x2, x1, #0xff
     83c:	adrp	x0, 1000 <gconv@@Base+0x720>
     840:	add	x0, x0, #0x6c8
     844:	tst	w1, #0xff
     848:	ldr	w0, [x0, x2, lsl #2]
     84c:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     850:	csinv	w0, w0, wzr, ne  // ne = any
     854:	ret

0000000000000858 <gconv_init@@Base>:
     858:	stp	x29, x30, [sp, #-32]!
     85c:	mov	x29, sp
     860:	stp	x19, x20, [sp, #16]
     864:	mov	x19, x0
     868:	adrp	x20, 1000 <gconv@@Base+0x720>
     86c:	ldr	x0, [x0, #24]
     870:	add	x20, x20, #0x530
     874:	mov	x1, x20
     878:	bl	730 <strcmp@plt>
     87c:	cbnz	w0, 8b0 <gconv_init@@Base+0x58>
     880:	adrp	x0, 0 <__cxa_finalize@plt-0x6f0>
     884:	mov	x2, #0x100000001           	// #4294967297
     888:	add	x0, x0, #0x838
     88c:	mov	x1, #0x400000004           	// #17179869188
     890:	str	x0, [x19, #48]
     894:	stp	x2, x1, [x19, #72]
     898:	str	xzr, [x19, #96]
     89c:	mov	w0, #0x0                   	// #0
     8a0:	str	wzr, [x19, #88]
     8a4:	ldp	x19, x20, [sp, #16]
     8a8:	ldp	x29, x30, [sp], #32
     8ac:	ret
     8b0:	ldr	x0, [x19, #32]
     8b4:	mov	x1, x20
     8b8:	bl	730 <strcmp@plt>
     8bc:	cbnz	w0, 8d8 <gconv_init@@Base+0x80>
     8c0:	mov	x0, #0xffffffffffffffff    	// #-1
     8c4:	mov	x2, #0x400000004           	// #17179869188
     8c8:	mov	x1, #0x100000001           	// #4294967297
     8cc:	stp	x2, x1, [x19, #72]
     8d0:	str	x0, [x19, #96]
     8d4:	b	89c <gconv_init@@Base+0x44>
     8d8:	mov	w0, #0x1                   	// #1
     8dc:	b	8a4 <gconv_init@@Base+0x4c>

00000000000008e0 <gconv@@Base>:
     8e0:	stp	x29, x30, [sp, #-240]!
     8e4:	mov	x10, x2
     8e8:	mov	x14, x4
     8ec:	mov	x29, sp
     8f0:	stp	x19, x20, [sp, #16]
     8f4:	mov	x20, x1
     8f8:	adrp	x1, 11000 <gconv@@Base+0x10720>
     8fc:	stp	x27, x28, [sp, #80]
     900:	mov	x28, x0
     904:	ldr	w18, [x20, #16]
     908:	ldr	x1, [x1, #4056]
     90c:	stp	x23, x24, [sp, #48]
     910:	mov	x19, x3
     914:	ldr	x0, [x1]
     918:	str	x0, [sp, #232]
     91c:	mov	x0, #0x0                   	// #0
     920:	add	x1, x28, #0x68
     924:	add	x0, x20, #0x30
     928:	stp	x25, x26, [sp, #64]
     92c:	mov	x27, x5
     930:	stp	x1, x0, [sp, #144]
     934:	mov	x24, #0x0                   	// #0
     938:	str	w7, [sp, #168]
     93c:	tbnz	w18, #0, 95c <gconv@@Base+0x7c>
     940:	ldr	x0, [x28, #104]
     944:	ldr	x24, [x28, #144]
     948:	cbz	x0, 95c <gconv@@Base+0x7c>
     94c:	adrp	x0, 11000 <gconv@@Base+0x10720>
     950:	ldr	x0, [x0, #4040]
     954:	ldr	x0, [x0]
     958:	eor	x24, x24, x0
     95c:	cbnz	w6, f38 <gconv@@Base+0x658>
     960:	cmp	x14, #0x0
     964:	add	x25, sp, #0xc0
     968:	csel	x1, x20, x14, eq  // eq = none
     96c:	cmp	x27, #0x0
     970:	csel	x2, x25, xzr, ne  // ne = any
     974:	stp	x21, x22, [sp, #32]
     978:	mov	x12, #0x0                   	// #0
     97c:	ldr	x23, [x1]
     980:	str	x2, [sp, #160]
     984:	ldr	w2, [sp, #168]
     988:	ldr	x0, [x28, #96]
     98c:	cmp	w2, #0x0
     990:	cset	w1, ne  // ne = any
     994:	str	w1, [sp, #172]
     998:	str	xzr, [sp, #192]
     99c:	cmp	x0, #0x0
     9a0:	ccmp	w1, #0x0, #0x4, ne  // ne = any
     9a4:	ldr	x21, [x10]
     9a8:	ldr	x22, [x20, #8]
     9ac:	b.ne	cec <gconv@@Base+0x40c>  // b.any
     9b0:	adrp	x11, 1000 <gconv@@Base+0x720>
     9b4:	add	x11, x11, #0x6c8
     9b8:	mov	w7, w18
     9bc:	mov	x25, x27
     9c0:	add	x15, x11, #0x400
     9c4:	mov	x27, x23
     9c8:	mov	x18, x11
     9cc:	mov	x23, x21
     9d0:	mov	x21, x22
     9d4:	mov	x22, x12
     9d8:	stp	x14, x28, [sp, #128]
     9dc:	mov	x28, x10
     9e0:	add	x1, sp, #0xd8
     9e4:	str	x1, [sp, #176]
     9e8:	cbz	x25, 9f4 <gconv@@Base+0x114>
     9ec:	ldr	x1, [x25]
     9f0:	add	x22, x22, x1
     9f4:	cbz	x0, b04 <gconv@@Base+0x224>
     9f8:	stp	x23, x27, [sp, #208]
     9fc:	mov	x26, x27
     a00:	cmp	x19, x23
     a04:	b.eq	f90 <gconv@@Base+0x6b0>  // b.none
     a08:	mov	x0, x23
     a0c:	add	x3, sp, #0xd0
     a10:	mov	w14, #0x4                   	// #4
     a14:	add	x5, x0, #0x4
     a18:	cmp	x19, x5
     a1c:	b.cc	bb4 <gconv@@Base+0x2d4>  // b.lo, b.ul, b.last
     a20:	cmp	x21, x26
     a24:	b.ls	c04 <gconv@@Base+0x324>  // b.plast
     a28:	ldr	w2, [x0]
     a2c:	cmp	w2, #0xa6
     a30:	b.hi	bc0 <gconv@@Base+0x2e0>  // b.pmore
     a34:	ldrb	w5, [x15, w2, uxtw]
     a38:	cmp	w2, #0x0
     a3c:	ccmp	w5, #0x0, #0x0, ne  // ne = any
     a40:	b.eq	bcc <gconv@@Base+0x2ec>  // b.none
     a44:	add	x2, x26, #0x1
     a48:	str	x2, [sp, #216]
     a4c:	strb	w5, [x26]
     a50:	ldp	x0, x26, [sp, #208]
     a54:	add	x0, x0, #0x4
     a58:	str	x0, [sp, #208]
     a5c:	cmp	x19, x0
     a60:	b.ne	a14 <gconv@@Base+0x134>  // b.any
     a64:	nop
     a68:	str	x0, [x28]
     a6c:	ldr	x0, [sp, #128]
     a70:	cbnz	x0, b74 <gconv@@Base+0x294>
     a74:	ldp	w1, w0, [x20, #16]
     a78:	add	w0, w0, #0x1
     a7c:	str	w0, [x20, #20]
     a80:	tbnz	w1, #0, c1c <gconv@@Base+0x33c>
     a84:	cmp	x27, x26
     a88:	b.cs	c84 <gconv@@Base+0x3a4>  // b.hs, b.nlast
     a8c:	ldr	x1, [x20]
     a90:	mov	x0, x24
     a94:	stp	x18, x15, [sp, #104]
     a98:	str	w14, [sp, #120]
     a9c:	str	x1, [sp, #200]
     aa0:	bl	740 <_dl_mcount_wrapper_check@plt>
     aa4:	ldp	x0, x1, [sp, #144]
     aa8:	mov	x5, x25
     aac:	ldr	w7, [sp, #168]
     ab0:	mov	x3, x26
     ab4:	add	x2, sp, #0xc8
     ab8:	mov	w6, #0x0                   	// #0
     abc:	mov	x4, #0x0                   	// #0
     ac0:	blr	x24
     ac4:	mov	w7, w0
     ac8:	ldr	w14, [sp, #120]
     acc:	cmp	w0, #0x4
     ad0:	ldp	x18, x15, [sp, #104]
     ad4:	b.eq	bec <gconv@@Base+0x30c>  // b.none
     ad8:	ldr	x14, [sp, #200]
     adc:	cmp	x14, x26
     ae0:	b.ne	e30 <gconv@@Base+0x550>  // b.any
     ae4:	ldr	x0, [sp, #136]
     ae8:	ldr	x0, [x0, #96]
     aec:	cbnz	w7, f84 <gconv@@Base+0x6a4>
     af0:	ldr	w7, [x20, #16]
     af4:	ldr	x27, [x20]
     af8:	ldr	x23, [x28]
     afc:	ldr	x22, [sp, #192]
     b00:	b	9e8 <gconv@@Base+0x108>
     b04:	cmp	x19, x23
     b08:	b.eq	112c <gconv@@Base+0x84c>  // b.none
     b0c:	add	x1, x27, #0x4
     b10:	cmp	x1, x21
     b14:	b.hi	f1c <gconv@@Base+0x63c>  // b.pmore
     b18:	and	w7, w7, #0x2
     b1c:	mov	x0, x23
     b20:	mov	x26, x27
     b24:	mov	w14, #0x4                   	// #4
     b28:	ldrb	w3, [x0]
     b2c:	mov	x2, x0
     b30:	cmp	w3, #0x0
     b34:	ldr	w3, [x18, w3, sxtw #2]
     b38:	ccmp	w3, #0x0, #0x0, ne  // ne = any
     b3c:	b.eq	c60 <gconv@@Base+0x380>  // b.none
     b40:	add	x0, x0, #0x1
     b44:	str	w3, [x26]
     b48:	mov	x2, x0
     b4c:	mov	x26, x1
     b50:	cmp	x19, x0
     b54:	b.eq	b68 <gconv@@Base+0x288>  // b.none
     b58:	add	x1, x26, #0x4
     b5c:	cmp	x21, x1
     b60:	b.cs	b28 <gconv@@Base+0x248>  // b.hs, b.nlast
     b64:	mov	w14, #0x5                   	// #5
     b68:	str	x2, [x28]
     b6c:	ldr	x0, [sp, #128]
     b70:	cbz	x0, a74 <gconv@@Base+0x194>
     b74:	mov	w25, w14
     b78:	ldp	x21, x22, [sp, #32]
     b7c:	str	x26, [x0]
     b80:	adrp	x0, 11000 <gconv@@Base+0x10720>
     b84:	ldr	x0, [x0, #4056]
     b88:	ldr	x1, [sp, #232]
     b8c:	ldr	x0, [x0]
     b90:	eor	x0, x1, x0
     b94:	cbnz	x0, 1474 <gconv@@Base+0xb94>
     b98:	mov	w0, w25
     b9c:	ldp	x19, x20, [sp, #16]
     ba0:	ldp	x23, x24, [sp, #48]
     ba4:	ldp	x25, x26, [sp, #64]
     ba8:	ldp	x27, x28, [sp, #80]
     bac:	ldp	x29, x30, [sp], #240
     bb0:	ret
     bb4:	mov	w14, #0x7                   	// #7
     bb8:	ldr	x0, [sp, #208]
     bbc:	b	a68 <gconv@@Base+0x188>
     bc0:	mov	w0, #0x1c00                	// #7168
     bc4:	cmp	w0, w2, lsr #7
     bc8:	b.eq	c10 <gconv@@Base+0x330>  // b.none
     bcc:	ldr	x0, [sp, #160]
     bd0:	cbz	x0, 1170 <gconv@@Base+0x890>
     bd4:	ldr	w0, [x20, #16]
     bd8:	tbnz	w0, #3, c94 <gconv@@Base+0x3b4>
     bdc:	ldr	x0, [sp, #208]
     be0:	tbnz	w7, #1, e10 <gconv@@Base+0x530>
     be4:	mov	w14, #0x6                   	// #6
     be8:	b	a68 <gconv@@Base+0x188>
     bec:	cmp	w14, #0x5
     bf0:	b.eq	c78 <gconv@@Base+0x398>  // b.none
     bf4:	ldr	x0, [sp, #136]
     bf8:	mov	w7, w14
     bfc:	ldr	x0, [x0, #96]
     c00:	b	aec <gconv@@Base+0x20c>
     c04:	mov	w14, #0x5                   	// #5
     c08:	ldr	x0, [sp, #208]
     c0c:	b	a68 <gconv@@Base+0x188>
     c10:	mov	x0, x5
     c14:	str	x5, [sp, #208]
     c18:	b	a5c <gconv@@Base+0x17c>
     c1c:	mov	x27, x25
     c20:	mov	x10, x28
     c24:	ldr	x28, [sp, #136]
     c28:	mov	w25, w14
     c2c:	ldr	x1, [x27]
     c30:	ldr	x2, [sp, #192]
     c34:	ldr	x0, [x28, #96]
     c38:	str	x26, [x20]
     c3c:	add	x1, x1, x2
     c40:	str	x1, [x27]
     c44:	cmp	x0, #0x0
     c48:	ldr	w0, [sp, #172]
     c4c:	ccmp	w0, #0x0, #0x4, ne  // ne = any
     c50:	ccmp	w25, #0x7, #0x0, ne  // ne = any
     c54:	b.eq	fc4 <gconv@@Base+0x6e4>  // b.none
     c58:	ldp	x21, x22, [sp, #32]
     c5c:	b	b80 <gconv@@Base+0x2a0>
     c60:	ldr	x3, [sp, #160]
     c64:	cbz	x3, c6c <gconv@@Base+0x38c>
     c68:	cbnz	w7, f00 <gconv@@Base+0x620>
     c6c:	mov	w14, #0x6                   	// #6
     c70:	str	x2, [x28]
     c74:	b	b6c <gconv@@Base+0x28c>
     c78:	ldr	x0, [sp, #136]
     c7c:	ldr	x0, [x0, #96]
     c80:	b	af0 <gconv@@Base+0x210>
     c84:	ldr	x0, [sp, #136]
     c88:	mov	w7, w14
     c8c:	ldr	x0, [x0, #96]
     c90:	b	aec <gconv@@Base+0x20c>
     c94:	ldr	x2, [x28]
     c98:	mov	x4, x19
     c9c:	ldr	x0, [sp, #136]
     ca0:	mov	x1, x20
     ca4:	ldr	x6, [sp, #160]
     ca8:	str	x3, [sp, #104]
     cac:	ldr	x5, [sp, #176]
     cb0:	str	w7, [sp, #112]
     cb4:	str	x18, [sp, #120]
     cb8:	str	x15, [sp, #184]
     cbc:	bl	700 <__gconv_transliterate@plt>
     cc0:	mov	w14, w0
     cc4:	ldr	w7, [sp, #112]
     cc8:	cmp	w0, #0x6
     ccc:	ldr	x3, [sp, #104]
     cd0:	ldr	x18, [sp, #120]
     cd4:	ldr	x15, [sp, #184]
     cd8:	b.eq	f30 <gconv@@Base+0x650>  // b.none
     cdc:	cmp	w0, #0x5
     ce0:	ldp	x0, x26, [sp, #208]
     ce4:	b.ne	a5c <gconv@@Base+0x17c>  // b.any
     ce8:	b	a68 <gconv@@Base+0x188>
     cec:	ldr	x11, [x20, #32]
     cf0:	ldr	w3, [x11]
     cf4:	ands	w4, w3, #0x7
     cf8:	b.eq	9b0 <gconv@@Base+0xd0>  // b.none
     cfc:	cbnz	x14, 149c <gconv@@Base+0xbbc>
     d00:	stp	x21, x23, [sp, #208]
     d04:	cmp	w4, #0x4
     d08:	b.hi	1410 <gconv@@Base+0xb30>  // b.pmore
     d0c:	mov	w7, w4
     d10:	cbz	w4, 1140 <gconv@@Base+0x860>
     d14:	add	x6, x11, #0x3
     d18:	add	x12, sp, #0xe0
     d1c:	mov	x0, #0x1                   	// #1
     d20:	add	x1, x12, x0
     d24:	ldrb	w5, [x6, x0]
     d28:	cmp	x0, x7
     d2c:	add	x0, x0, #0x1
     d30:	sturb	w5, [x1, #-1]
     d34:	b.ne	d20 <gconv@@Base+0x440>  // b.any
     d38:	mov	x0, #0x4                   	// #4
     d3c:	sub	x0, x0, x7
     d40:	add	x0, x21, x0
     d44:	cmp	x19, x0
     d48:	b.cc	117c <gconv@@Base+0x89c>  // b.lo, b.ul, b.last
     d4c:	add	x0, x21, #0x1
     d50:	add	x12, sp, #0xe0
     d54:	cmp	x23, x22
     d58:	b.cs	114c <gconv@@Base+0x86c>  // b.hs, b.nlast
     d5c:	add	x7, x7, #0x1
     d60:	str	x0, [sp, #208]
     d64:	add	x1, x12, x7
     d68:	cmp	x7, #0x3
     d6c:	ldurb	w2, [x0, #-1]
     d70:	ccmp	x19, x0, #0x0, ls  // ls = plast
     d74:	add	x0, x0, #0x1
     d78:	sturb	w2, [x1, #-1]
     d7c:	b.hi	d5c <gconv@@Base+0x47c>  // b.pmore
     d80:	ldr	w1, [sp, #224]
     d84:	str	x12, [sp, #208]
     d88:	cmp	w1, #0xa6
     d8c:	b.hi	12c8 <gconv@@Base+0x9e8>  // b.pmore
     d90:	adrp	x0, 1000 <gconv@@Base+0x720>
     d94:	add	x0, x0, #0x6c8
     d98:	add	x0, x0, #0x400
     d9c:	cmp	w1, #0x0
     da0:	ldrb	w0, [x0, w1, uxtw]
     da4:	ccmp	w0, #0x0, #0x0, ne  // ne = any
     da8:	b.eq	1264 <gconv@@Base+0x984>  // b.none
     dac:	add	x1, x23, #0x1
     db0:	str	x1, [sp, #216]
     db4:	strb	w0, [x23]
     db8:	ldr	x0, [sp, #208]
     dbc:	add	x0, x0, #0x4
     dc0:	str	x0, [sp, #208]
     dc4:	cmp	x0, x12
     dc8:	b.eq	115c <gconv@@Base+0x87c>  // b.none
     dcc:	ldr	w3, [x11]
     dd0:	sub	x12, x0, x12
     dd4:	and	w4, w3, #0x7
     dd8:	mov	w0, w4
     ddc:	cmp	x0, x12
     de0:	b.ge	147c <gconv@@Base+0xb9c>  // b.tcont
     de4:	ldr	x21, [x10]
     de8:	sub	x0, x12, x0
     dec:	ldr	w18, [x20, #16]
     df0:	and	w3, w3, #0xfffffff8
     df4:	add	x21, x21, x0
     df8:	str	x21, [x10]
     dfc:	ldr	x12, [sp, #192]
     e00:	ldr	x0, [x28, #96]
     e04:	ldr	x23, [sp, #216]
     e08:	str	w3, [x11]
     e0c:	b	9b0 <gconv@@Base+0xd0>
     e10:	ldr	x2, [sp, #160]
     e14:	add	x0, x0, #0x4
     e18:	mov	w14, #0x6                   	// #6
     e1c:	str	x0, [sp, #208]
     e20:	ldr	x1, [x2]
     e24:	add	x1, x1, #0x1
     e28:	str	x1, [x2]
     e2c:	b	a5c <gconv@@Base+0x17c>
     e30:	mov	x0, #0x0                   	// #0
     e34:	cbz	x25, e3c <gconv@@Base+0x55c>
     e38:	ldr	x0, [x25]
     e3c:	ldr	x1, [sp, #192]
     e40:	add	x0, x0, x1
     e44:	cmp	x0, x22
     e48:	b.eq	f9c <gconv@@Base+0x6bc>  // b.none
     e4c:	ldr	x0, [sp, #136]
     e50:	ldr	w26, [x20, #16]
     e54:	str	x23, [x28]
     e58:	ldr	x0, [x0, #96]
     e5c:	cbz	x0, 101c <gconv@@Base+0x73c>
     e60:	stp	x23, x27, [sp, #208]
     e64:	cmp	x19, x23
     e68:	b.eq	1304 <gconv@@Base+0xa24>  // b.none
     e6c:	mov	x0, x27
     e70:	add	x22, sp, #0xd0
     e74:	mov	x4, #0x4                   	// #4
     e78:	add	x5, x23, #0x4
     e7c:	cmp	x19, x5
     e80:	b.cc	1088 <gconv@@Base+0x7a8>  // b.lo, b.ul, b.last
     e84:	cmp	x14, x0
     e88:	b.ls	1100 <gconv@@Base+0x820>  // b.plast
     e8c:	ldr	w2, [x23]
     e90:	cmp	w2, #0xa6
     e94:	b.hi	1114 <gconv@@Base+0x834>  // b.pmore
     e98:	ldrb	w5, [x15, w2, uxtw]
     e9c:	cmp	w2, #0x0
     ea0:	ccmp	w5, #0x0, #0x0, ne  // ne = any
     ea4:	b.eq	10b8 <gconv@@Base+0x7d8>  // b.none
     ea8:	add	x2, x0, #0x1
     eac:	str	x2, [sp, #216]
     eb0:	strb	w5, [x0]
     eb4:	ldp	x23, x0, [sp, #208]
     eb8:	add	x23, x23, #0x4
     ebc:	str	x23, [sp, #208]
     ec0:	cmp	x19, x23
     ec4:	b.ne	e78 <gconv@@Base+0x598>  // b.any
     ec8:	ldr	x14, [sp, #200]
     ecc:	str	x19, [x28]
     ed0:	cmp	x0, x14
     ed4:	b.ne	10e0 <gconv@@Base+0x800>  // b.any
     ed8:	cmp	x4, #0x5
     edc:	b.ne	1098 <gconv@@Base+0x7b8>  // b.any
     ee0:	cmp	x27, x0
     ee4:	ldr	x0, [sp, #136]
     ee8:	ldr	x0, [x0, #96]
     eec:	b.ne	aec <gconv@@Base+0x20c>  // b.any
     ef0:	ldr	w1, [x20, #20]
     ef4:	sub	w1, w1, #0x1
     ef8:	str	w1, [x20, #20]
     efc:	b	aec <gconv@@Base+0x20c>
     f00:	ldr	x1, [x3]
     f04:	add	x0, x0, #0x1
     f08:	mov	x2, x0
     f0c:	mov	w14, #0x6                   	// #6
     f10:	add	x1, x1, #0x1
     f14:	str	x1, [x3]
     f18:	b	b50 <gconv@@Base+0x270>
     f1c:	mov	x2, x23
     f20:	mov	x26, x27
     f24:	mov	w14, #0x5                   	// #5
     f28:	str	x2, [x28]
     f2c:	b	b6c <gconv@@Base+0x28c>
     f30:	ldr	x26, [sp, #216]
     f34:	b	bdc <gconv@@Base+0x2fc>
     f38:	cbnz	x14, 1450 <gconv@@Base+0xb70>
     f3c:	ldr	x0, [x20, #32]
     f40:	mov	w25, #0x0                   	// #0
     f44:	str	xzr, [x0]
     f48:	ldr	w0, [x20, #16]
     f4c:	tbnz	w0, #0, b80 <gconv@@Base+0x2a0>
     f50:	mov	x0, x24
     f54:	str	w6, [sp, #104]
     f58:	bl	740 <_dl_mcount_wrapper_check@plt>
     f5c:	ldp	x0, x1, [sp, #144]
     f60:	mov	x5, x27
     f64:	ldr	w6, [sp, #104]
     f68:	mov	x4, #0x0                   	// #0
     f6c:	ldr	w7, [sp, #168]
     f70:	mov	x3, #0x0                   	// #0
     f74:	mov	x2, #0x0                   	// #0
     f78:	blr	x24
     f7c:	mov	w25, w0
     f80:	b	b80 <gconv@@Base+0x2a0>
     f84:	mov	x10, x28
     f88:	mov	w25, w7
     f8c:	b	c44 <gconv@@Base+0x364>
     f90:	mov	x0, x19
     f94:	mov	w14, #0x4                   	// #4
     f98:	b	a68 <gconv@@Base+0x188>
     f9c:	ldr	x0, [sp, #136]
     fa0:	sub	x14, x26, x14
     fa4:	ldr	x1, [x0, #96]
     fa8:	ldr	x0, [x28]
     fac:	cbz	x1, 124c <gconv@@Base+0x96c>
     fb0:	sub	x14, x0, x14, lsl #2
     fb4:	str	x14, [x28]
     fb8:	ldr	x0, [sp, #136]
     fbc:	ldr	x0, [x0, #96]
     fc0:	b	aec <gconv@@Base+0x20c>
     fc4:	ldr	x0, [x10]
     fc8:	sub	x2, x19, x0
     fcc:	cmp	x2, #0x3
     fd0:	b.gt	1430 <gconv@@Base+0xb50>
     fd4:	ldr	x4, [x20, #32]
     fd8:	cmp	x0, x19
     fdc:	add	x0, x0, #0x1
     fe0:	add	x1, x4, #0x4
     fe4:	b.cs	13ec <gconv@@Base+0xb0c>  // b.hs, b.nlast
     fe8:	str	x0, [x10]
     fec:	cmp	x19, x0
     ff0:	add	x0, x0, #0x1
     ff4:	ldurb	w3, [x0, #-2]
     ff8:	strb	w3, [x1], #1
     ffc:	b.ne	fe8 <gconv@@Base+0x708>  // b.any
    1000:	mov	w1, w2
    1004:	ldr	w0, [x4]
    1008:	ldp	x21, x22, [sp, #32]
    100c:	and	w0, w0, #0xfffffff8
    1010:	orr	w0, w0, w1
    1014:	str	w0, [x4]
    1018:	b	b80 <gconv@@Base+0x2a0>
    101c:	cmp	x19, x23
    1020:	b.eq	1304 <gconv@@Base+0xa24>  // b.none
    1024:	add	x1, x27, #0x4
    1028:	cmp	x14, x1
    102c:	b.cc	12f8 <gconv@@Base+0xa18>  // b.lo, b.ul, b.last
    1030:	and	w26, w26, #0x2
    1034:	mov	x0, x27
    1038:	mov	x3, x23
    103c:	mov	x4, #0x4                   	// #4
    1040:	ldrb	w5, [x3]
    1044:	mov	x2, x3
    1048:	cmp	w5, #0x0
    104c:	ldr	w5, [x18, w5, sxtw #2]
    1050:	ccmp	w5, #0x0, #0x0, ne  // ne = any
    1054:	b.eq	11b8 <gconv@@Base+0x8d8>  // b.none
    1058:	add	x3, x3, #0x1
    105c:	str	w5, [x0]
    1060:	mov	x2, x3
    1064:	mov	x0, x1
    1068:	cmp	x19, x3
    106c:	b.eq	1080 <gconv@@Base+0x7a0>  // b.none
    1070:	add	x1, x0, #0x4
    1074:	cmp	x14, x1
    1078:	b.cs	1040 <gconv@@Base+0x760>  // b.hs, b.nlast
    107c:	mov	x4, #0x5                   	// #5
    1080:	str	x2, [x28]
    1084:	b	ed0 <gconv@@Base+0x5f0>
    1088:	ldp	x1, x2, [sp, #200]
    108c:	str	x2, [x28]
    1090:	cmp	x0, x1
    1094:	b.ne	10e0 <gconv@@Base+0x800>  // b.any
    1098:	adrp	x3, 1000 <gconv@@Base+0x720>
    109c:	adrp	x1, 1000 <gconv@@Base+0x720>
    10a0:	adrp	x0, 1000 <gconv@@Base+0x720>
    10a4:	add	x3, x3, #0x6c0
    10a8:	add	x1, x1, #0x540
    10ac:	add	x0, x0, #0x670
    10b0:	mov	w2, #0x2eb                 	// #747
    10b4:	bl	750 <__assert_fail@plt>
    10b8:	ldr	x1, [sp, #160]
    10bc:	cbz	x1, 13fc <gconv@@Base+0xb1c>
    10c0:	ldr	w1, [x20, #16]
    10c4:	tbnz	w1, #3, 11e0 <gconv@@Base+0x900>
    10c8:	ldr	x8, [sp, #208]
    10cc:	tbnz	w26, #1, 12a8 <gconv@@Base+0x9c8>
    10d0:	ldr	x1, [sp, #200]
    10d4:	str	x8, [x28]
    10d8:	cmp	x1, x0
    10dc:	b.eq	1098 <gconv@@Base+0x7b8>  // b.none
    10e0:	adrp	x3, 1000 <gconv@@Base+0x720>
    10e4:	adrp	x1, 1000 <gconv@@Base+0x720>
    10e8:	adrp	x0, 1000 <gconv@@Base+0x720>
    10ec:	add	x3, x3, #0x6c0
    10f0:	add	x1, x1, #0x540
    10f4:	add	x0, x0, #0x658
    10f8:	mov	w2, #0x2ea                 	// #746
    10fc:	bl	750 <__assert_fail@plt>
    1100:	ldp	x1, x2, [sp, #200]
    1104:	str	x2, [x28]
    1108:	cmp	x0, x1
    110c:	b.eq	ee0 <gconv@@Base+0x600>  // b.none
    1110:	b	10e0 <gconv@@Base+0x800>
    1114:	mov	w1, #0x1c00                	// #7168
    1118:	cmp	w1, w2, lsr #7
    111c:	b.ne	10b8 <gconv@@Base+0x7d8>  // b.any
    1120:	mov	x23, x5
    1124:	str	x5, [sp, #208]
    1128:	b	ec0 <gconv@@Base+0x5e0>
    112c:	mov	x2, x19
    1130:	mov	x26, x27
    1134:	mov	w14, #0x4                   	// #4
    1138:	str	x2, [x28]
    113c:	b	b6c <gconv@@Base+0x28c>
    1140:	mov	x0, #0x4                   	// #4
    1144:	mov	x7, #0x0                   	// #0
    1148:	b	d40 <gconv@@Base+0x460>
    114c:	mov	w25, #0x5                   	// #5
    1150:	ldp	x21, x22, [sp, #32]
    1154:	b	b80 <gconv@@Base+0x2a0>
    1158:	cbnz	w25, c58 <gconv@@Base+0x378>
    115c:	ldr	w18, [x20, #16]
    1160:	ldr	x21, [x10]
    1164:	ldr	x0, [x28, #96]
    1168:	ldr	x12, [sp, #192]
    116c:	b	9b0 <gconv@@Base+0xd0>
    1170:	mov	w14, #0x6                   	// #6
    1174:	ldr	x0, [sp, #208]
    1178:	b	a68 <gconv@@Base+0x188>
    117c:	str	x19, [x10]
    1180:	cmp	x21, x19
    1184:	b.cs	11ac <gconv@@Base+0x8cc>  // b.hs, b.nlast
    1188:	add	x21, x21, #0x1
    118c:	add	x7, x11, x7
    1190:	str	x21, [sp, #208]
    1194:	cmp	x19, x21
    1198:	add	x7, x7, #0x1
    119c:	add	x21, x21, #0x1
    11a0:	ldurb	w0, [x21, #-2]
    11a4:	strb	w0, [x7, #3]
    11a8:	b.ne	1190 <gconv@@Base+0x8b0>  // b.any
    11ac:	mov	w25, #0x7                   	// #7
    11b0:	ldp	x21, x22, [sp, #32]
    11b4:	b	b80 <gconv@@Base+0x2a0>
    11b8:	ldr	x5, [sp, #160]
    11bc:	cbz	x5, 12e4 <gconv@@Base+0xa04>
    11c0:	cbz	w26, 12e4 <gconv@@Base+0xa04>
    11c4:	ldr	x1, [x5]
    11c8:	add	x3, x3, #0x1
    11cc:	mov	x2, x3
    11d0:	mov	x4, #0x6                   	// #6
    11d4:	add	x1, x1, #0x1
    11d8:	str	x1, [x5]
    11dc:	b	1068 <gconv@@Base+0x788>
    11e0:	ldr	x2, [x28]
    11e4:	mov	x4, x19
    11e8:	ldr	x0, [sp, #136]
    11ec:	mov	x3, x22
    11f0:	ldr	x6, [sp, #160]
    11f4:	mov	x1, x20
    11f8:	ldr	x5, [sp, #176]
    11fc:	str	x14, [sp, #104]
    1200:	str	w7, [sp, #112]
    1204:	str	x18, [sp, #120]
    1208:	str	x15, [sp, #184]
    120c:	bl	700 <__gconv_transliterate@plt>
    1210:	sxtw	x4, w0
    1214:	ldr	w7, [sp, #112]
    1218:	cmp	w4, #0x6
    121c:	ldr	x14, [sp, #104]
    1220:	ldr	x18, [sp, #120]
    1224:	ldr	x15, [sp, #184]
    1228:	b.eq	12f0 <gconv@@Base+0xa10>  // b.none
    122c:	cmp	w4, #0x5
    1230:	ldp	x23, x0, [sp, #208]
    1234:	b.ne	ec0 <gconv@@Base+0x5e0>  // b.any
    1238:	ldr	x1, [sp, #200]
    123c:	str	x23, [x28]
    1240:	cmp	x0, x1
    1244:	b.eq	ee0 <gconv@@Base+0x600>  // b.none
    1248:	b	10e0 <gconv@@Base+0x800>
    124c:	cmp	x14, #0x0
    1250:	add	x1, x14, #0x3
    1254:	csel	x14, x1, x14, lt  // lt = tstop
    1258:	sub	x0, x0, x14, asr #2
    125c:	str	x0, [x28]
    1260:	b	ae4 <gconv@@Base+0x204>
    1264:	ldr	x0, [sp, #160]
    1268:	cbz	x0, 129c <gconv@@Base+0x9bc>
    126c:	tbnz	w18, #3, 1310 <gconv@@Base+0xa30>
    1270:	mov	x0, x12
    1274:	mov	w25, #0x6                   	// #6
    1278:	tbz	w18, #1, c58 <gconv@@Base+0x378>
    127c:	ldr	x2, [sp, #160]
    1280:	add	x0, x0, #0x4
    1284:	str	x0, [sp, #208]
    1288:	ldr	x1, [x2]
    128c:	add	x1, x1, #0x1
    1290:	str	x1, [x2]
    1294:	cmp	x0, x12
    1298:	b.ne	dcc <gconv@@Base+0x4ec>  // b.any
    129c:	mov	w25, #0x6                   	// #6
    12a0:	ldp	x21, x22, [sp, #32]
    12a4:	b	b80 <gconv@@Base+0x2a0>
    12a8:	ldr	x2, [sp, #160]
    12ac:	add	x23, x8, #0x4
    12b0:	mov	x4, #0x6                   	// #6
    12b4:	str	x23, [sp, #208]
    12b8:	ldr	x1, [x2]
    12bc:	add	x1, x1, #0x1
    12c0:	str	x1, [x2]
    12c4:	b	ec0 <gconv@@Base+0x5e0>
    12c8:	mov	w0, #0x1c00                	// #7168
    12cc:	cmp	w0, w1, lsr #7
    12d0:	b.ne	1264 <gconv@@Base+0x984>  // b.any
    12d4:	add	x0, x12, #0x4
    12d8:	mov	x12, #0x4                   	// #4
    12dc:	str	x0, [sp, #208]
    12e0:	b	dd8 <gconv@@Base+0x4f8>
    12e4:	mov	x4, #0x6                   	// #6
    12e8:	str	x2, [x28]
    12ec:	b	ed0 <gconv@@Base+0x5f0>
    12f0:	ldr	x0, [sp, #216]
    12f4:	b	10c8 <gconv@@Base+0x7e8>
    12f8:	cmp	x14, x27
    12fc:	b.eq	ef0 <gconv@@Base+0x610>  // b.none
    1300:	b	10e0 <gconv@@Base+0x800>
    1304:	cmp	x14, x27
    1308:	b.eq	1098 <gconv@@Base+0x7b8>  // b.none
    130c:	b	10e0 <gconv@@Base+0x800>
    1310:	add	x26, x12, x7
    1314:	mov	x6, x0
    1318:	mov	x2, x21
    131c:	mov	x4, x26
    1320:	add	x5, sp, #0xd8
    1324:	add	x3, sp, #0xd0
    1328:	mov	x1, x20
    132c:	mov	x0, x28
    1330:	stp	x12, x7, [sp, #104]
    1334:	str	x11, [sp, #120]
    1338:	str	w18, [sp, #128]
    133c:	str	x10, [sp, #136]
    1340:	str	x14, [sp, #176]
    1344:	bl	700 <__gconv_transliterate@plt>
    1348:	ldr	w18, [sp, #128]
    134c:	mov	w25, w0
    1350:	cmp	w0, #0x6
    1354:	ldr	x12, [sp, #104]
    1358:	ldr	x11, [sp, #120]
    135c:	ldr	x10, [sp, #136]
    1360:	ldr	x14, [sp, #176]
    1364:	ldr	x0, [sp, #208]
    1368:	b.eq	13f4 <gconv@@Base+0xb14>  // b.none
    136c:	cmp	x0, x12
    1370:	ldr	x7, [sp, #112]
    1374:	b.ne	dcc <gconv@@Base+0x4ec>  // b.any
    1378:	cmp	w25, #0x7
    137c:	b.ne	1158 <gconv@@Base+0x878>  // b.any
    1380:	add	x0, x12, #0x4
    1384:	cmp	x26, x0
    1388:	b.eq	14fc <gconv@@Base+0xc1c>  // b.none
    138c:	ldr	w0, [x11]
    1390:	ldr	x1, [x10]
    1394:	and	x2, x0, #0x7
    1398:	sub	x2, x7, x2
    139c:	and	w0, w0, #0xfffffff8
    13a0:	add	x1, x1, x2
    13a4:	str	x1, [x10]
    13a8:	cmp	x7, w0, sxtw
    13ac:	b.le	14dc <gconv@@Base+0xbfc>
    13b0:	cmp	x7, #0x4
    13b4:	b.hi	14bc <gconv@@Base+0xbdc>  // b.pmore
    13b8:	orr	w0, w0, w7
    13bc:	str	w0, [x11]
    13c0:	cmp	x26, x12
    13c4:	b.ls	11ac <gconv@@Base+0x8cc>  // b.plast
    13c8:	add	x12, x12, #0x1
    13cc:	add	x11, x11, #0x4
    13d0:	str	x12, [sp, #208]
    13d4:	cmp	x26, x12
    13d8:	add	x12, x12, #0x1
    13dc:	ldurb	w0, [x12, #-2]
    13e0:	strb	w0, [x11], #1
    13e4:	b.ne	13d0 <gconv@@Base+0xaf0>  // b.any
    13e8:	b	11ac <gconv@@Base+0x8cc>
    13ec:	mov	w1, #0x0                   	// #0
    13f0:	b	1004 <gconv@@Base+0x724>
    13f4:	tbz	w18, #1, 1294 <gconv@@Base+0x9b4>
    13f8:	b	127c <gconv@@Base+0x99c>
    13fc:	ldp	x1, x2, [sp, #200]
    1400:	str	x2, [x28]
    1404:	cmp	x1, x0
    1408:	b.eq	1098 <gconv@@Base+0x7b8>  // b.none
    140c:	b	10e0 <gconv@@Base+0x800>
    1410:	adrp	x3, 1000 <gconv@@Base+0x720>
    1414:	adrp	x1, 1000 <gconv@@Base+0x720>
    1418:	adrp	x0, 1000 <gconv@@Base+0x720>
    141c:	add	x3, x3, #0x6a8
    1420:	add	x1, x1, #0x570
    1424:	add	x0, x0, #0x580
    1428:	mov	w2, #0x18b                 	// #395
    142c:	bl	750 <__assert_fail@plt>
    1430:	adrp	x3, 1000 <gconv@@Base+0x720>
    1434:	adrp	x1, 1000 <gconv@@Base+0x720>
    1438:	adrp	x0, 1000 <gconv@@Base+0x720>
    143c:	add	x3, x3, #0x6c0
    1440:	add	x1, x1, #0x540
    1444:	add	x0, x0, #0x690
    1448:	mov	w2, #0x31e                 	// #798
    144c:	bl	750 <__assert_fail@plt>
    1450:	adrp	x3, 1000 <gconv@@Base+0x720>
    1454:	adrp	x1, 1000 <gconv@@Base+0x720>
    1458:	adrp	x0, 1000 <gconv@@Base+0x720>
    145c:	add	x3, x3, #0x6c0
    1460:	add	x1, x1, #0x540
    1464:	add	x0, x0, #0x558
    1468:	mov	w2, #0x1a4                 	// #420
    146c:	stp	x21, x22, [sp, #32]
    1470:	bl	750 <__assert_fail@plt>
    1474:	stp	x21, x22, [sp, #32]
    1478:	bl	710 <__stack_chk_fail@plt>
    147c:	adrp	x3, 1000 <gconv@@Base+0x720>
    1480:	adrp	x1, 1000 <gconv@@Base+0x720>
    1484:	adrp	x0, 1000 <gconv@@Base+0x720>
    1488:	add	x3, x3, #0x6a8
    148c:	add	x1, x1, #0x570
    1490:	add	x0, x0, #0x5b0
    1494:	mov	w2, #0x1c9                 	// #457
    1498:	bl	750 <__assert_fail@plt>
    149c:	adrp	x3, 1000 <gconv@@Base+0x720>
    14a0:	adrp	x1, 1000 <gconv@@Base+0x720>
    14a4:	adrp	x0, 1000 <gconv@@Base+0x720>
    14a8:	add	x3, x3, #0x6c0
    14ac:	add	x1, x1, #0x540
    14b0:	add	x0, x0, #0x558
    14b4:	mov	w2, #0x234                 	// #564
    14b8:	bl	750 <__assert_fail@plt>
    14bc:	adrp	x3, 1000 <gconv@@Base+0x720>
    14c0:	adrp	x1, 1000 <gconv@@Base+0x720>
    14c4:	adrp	x0, 1000 <gconv@@Base+0x720>
    14c8:	add	x3, x3, #0x6a8
    14cc:	add	x1, x1, #0x570
    14d0:	add	x0, x0, #0x628
    14d4:	mov	w2, #0x1e6                 	// #486
    14d8:	bl	750 <__assert_fail@plt>
    14dc:	adrp	x3, 1000 <gconv@@Base+0x720>
    14e0:	adrp	x1, 1000 <gconv@@Base+0x720>
    14e4:	adrp	x0, 1000 <gconv@@Base+0x720>
    14e8:	add	x3, x3, #0x6a8
    14ec:	add	x1, x1, #0x570
    14f0:	add	x0, x0, #0x600
    14f4:	mov	w2, #0x1e5                 	// #485
    14f8:	bl	750 <__assert_fail@plt>
    14fc:	adrp	x3, 1000 <gconv@@Base+0x720>
    1500:	adrp	x1, 1000 <gconv@@Base+0x720>
    1504:	adrp	x0, 1000 <gconv@@Base+0x720>
    1508:	add	x3, x3, #0x6a8
    150c:	add	x1, x1, #0x570
    1510:	add	x0, x0, #0x5d8
    1514:	mov	w2, #0x1db                 	// #475
    1518:	bl	750 <__assert_fail@plt>

Disassembly of section .fini:

000000000000151c <.fini>:
    151c:	stp	x29, x30, [sp, #-16]!
    1520:	mov	x29, sp
    1524:	ldp	x29, x30, [sp], #16
    1528:	ret
