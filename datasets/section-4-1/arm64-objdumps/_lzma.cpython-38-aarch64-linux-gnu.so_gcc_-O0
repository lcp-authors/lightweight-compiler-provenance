
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_lzma.cpython-38-aarch64-linux-gnu.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000021f8 <.init>:
    21f8:	stp	x29, x30, [sp, #-16]!
    21fc:	mov	x29, sp
    2200:	bl	2690 <_PyDict_SetItemId@plt+0x10>
    2204:	ldp	x29, x30, [sp], #16
    2208:	ret

Disassembly of section .plt:

0000000000002210 <memcpy@plt-0x20>:
    2210:	stp	x16, x30, [sp, #-16]!
    2214:	adrp	x16, 17000 <PyInit__lzma@@Base+0x119c8>
    2218:	ldr	x17, [x16, #4088]
    221c:	add	x16, x16, #0xff8
    2220:	br	x17
    2224:	nop
    2228:	nop
    222c:	nop

0000000000002230 <memcpy@plt>:
    2230:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2234:	ldr	x17, [x16]
    2238:	add	x16, x16, #0x0
    223c:	br	x17

0000000000002240 <memmove@plt>:
    2240:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2244:	ldr	x17, [x16, #8]
    2248:	add	x16, x16, #0x8
    224c:	br	x17

0000000000002250 <PyModule_AddIntConstant@plt>:
    2250:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2254:	ldr	x17, [x16, #16]
    2258:	add	x16, x16, #0x10
    225c:	br	x17

0000000000002260 <PyMapping_Check@plt>:
    2260:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2264:	ldr	x17, [x16, #24]
    2268:	add	x16, x16, #0x18
    226c:	br	x17

0000000000002270 <_PyBytes_Resize@plt>:
    2270:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2274:	ldr	x17, [x16, #32]
    2278:	add	x16, x16, #0x20
    227c:	br	x17

0000000000002280 <lzma_code@plt>:
    2280:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2284:	ldr	x17, [x16, #40]
    2288:	add	x16, x16, #0x28
    228c:	br	x17

0000000000002290 <PyEval_RestoreThread@plt>:
    2290:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2294:	ldr	x17, [x16, #48]
    2298:	add	x16, x16, #0x30
    229c:	br	x17

00000000000022a0 <PyMem_Free@plt>:
    22a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22a4:	ldr	x17, [x16, #56]
    22a8:	add	x16, x16, #0x38
    22ac:	br	x17

00000000000022b0 <PyLong_FromUnsignedLongLong@plt>:
    22b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22b4:	ldr	x17, [x16, #64]
    22b8:	add	x16, x16, #0x40
    22bc:	br	x17

00000000000022c0 <PyBuffer_Release@plt>:
    22c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22c4:	ldr	x17, [x16, #72]
    22c8:	add	x16, x16, #0x48
    22cc:	br	x17

00000000000022d0 <PyLong_AsUnsignedLongLong@plt>:
    22d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22d4:	ldr	x17, [x16, #80]
    22d8:	add	x16, x16, #0x50
    22dc:	br	x17

00000000000022e0 <__cxa_finalize@plt>:
    22e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22e4:	ldr	x17, [x16, #88]
    22e8:	add	x16, x16, #0x58
    22ec:	br	x17

00000000000022f0 <PyMem_RawMalloc@plt>:
    22f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    22f4:	ldr	x17, [x16, #96]
    22f8:	add	x16, x16, #0x60
    22fc:	br	x17

0000000000002300 <PyBuffer_IsContiguous@plt>:
    2300:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2304:	ldr	x17, [x16, #104]
    2308:	add	x16, x16, #0x68
    230c:	br	x17

0000000000002310 <PyBytes_FromStringAndSize@plt>:
    2310:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2314:	ldr	x17, [x16, #112]
    2318:	add	x16, x16, #0x70
    231c:	br	x17

0000000000002320 <_Py_Dealloc@plt>:
    2320:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2324:	ldr	x17, [x16, #120]
    2328:	add	x16, x16, #0x78
    232c:	br	x17

0000000000002330 <PyErr_NoMemory@plt>:
    2330:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2334:	ldr	x17, [x16, #128]
    2338:	add	x16, x16, #0x80
    233c:	br	x17

0000000000002340 <PyErr_NewExceptionWithDoc@plt>:
    2340:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2344:	ldr	x17, [x16, #136]
    2348:	add	x16, x16, #0x88
    234c:	br	x17

0000000000002350 <PyThread_acquire_lock@plt>:
    2350:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2354:	ldr	x17, [x16, #144]
    2358:	add	x16, x16, #0x90
    235c:	br	x17

0000000000002360 <lzma_easy_encoder@plt>:
    2360:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2364:	ldr	x17, [x16, #152]
    2368:	add	x16, x16, #0x98
    236c:	br	x17

0000000000002370 <_PyArg_UnpackKeywords@plt>:
    2370:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2374:	ldr	x17, [x16, #160]
    2378:	add	x16, x16, #0xa0
    237c:	br	x17

0000000000002380 <PyErr_SetString@plt>:
    2380:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2384:	ldr	x17, [x16, #168]
    2388:	add	x16, x16, #0xa8
    238c:	br	x17

0000000000002390 <PyMapping_GetItemString@plt>:
    2390:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2394:	ldr	x17, [x16, #176]
    2398:	add	x16, x16, #0xb0
    239c:	br	x17

00000000000023a0 <lzma_raw_encoder@plt>:
    23a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23a4:	ldr	x17, [x16, #184]
    23a8:	add	x16, x16, #0xb8
    23ac:	br	x17

00000000000023b0 <PyMem_Realloc@plt>:
    23b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23b4:	ldr	x17, [x16, #192]
    23b8:	add	x16, x16, #0xc0
    23bc:	br	x17

00000000000023c0 <PyErr_SetNone@plt>:
    23c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23c4:	ldr	x17, [x16, #200]
    23c8:	add	x16, x16, #0xc8
    23cc:	br	x17

00000000000023d0 <PyErr_ExceptionMatches@plt>:
    23d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23d4:	ldr	x17, [x16, #208]
    23d8:	add	x16, x16, #0xd0
    23dc:	br	x17

00000000000023e0 <memset@plt>:
    23e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23e4:	ldr	x17, [x16, #216]
    23e8:	add	x16, x16, #0xd8
    23ec:	br	x17

00000000000023f0 <lzma_properties_size@plt>:
    23f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    23f4:	ldr	x17, [x16, #224]
    23f8:	add	x16, x16, #0xe0
    23fc:	br	x17

0000000000002400 <PySequence_GetItem@plt>:
    2400:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2404:	ldr	x17, [x16, #232]
    2408:	add	x16, x16, #0xe8
    240c:	br	x17

0000000000002410 <lzma_auto_decoder@plt>:
    2410:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2414:	ldr	x17, [x16, #240]
    2418:	add	x16, x16, #0xf0
    241c:	br	x17

0000000000002420 <PyType_Ready@plt>:
    2420:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2424:	ldr	x17, [x16, #248]
    2428:	add	x16, x16, #0xf8
    242c:	br	x17

0000000000002430 <PyLong_AsSsize_t@plt>:
    2430:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2434:	ldr	x17, [x16, #256]
    2438:	add	x16, x16, #0x100
    243c:	br	x17

0000000000002440 <_PyArg_BadArgument@plt>:
    2440:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2444:	ldr	x17, [x16, #264]
    2448:	add	x16, x16, #0x108
    244c:	br	x17

0000000000002450 <PySequence_Size@plt>:
    2450:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2454:	ldr	x17, [x16, #272]
    2458:	add	x16, x16, #0x110
    245c:	br	x17

0000000000002460 <PyErr_Clear@plt>:
    2460:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2464:	ldr	x17, [x16, #280]
    2468:	add	x16, x16, #0x118
    246c:	br	x17

0000000000002470 <PyBool_FromLong@plt>:
    2470:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2474:	ldr	x17, [x16, #288]
    2478:	add	x16, x16, #0x120
    247c:	br	x17

0000000000002480 <__gmon_start__@plt>:
    2480:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2484:	ldr	x17, [x16, #296]
    2488:	add	x16, x16, #0x128
    248c:	br	x17

0000000000002490 <PyTuple_New@plt>:
    2490:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2494:	ldr	x17, [x16, #304]
    2498:	add	x16, x16, #0x130
    249c:	br	x17

00000000000024a0 <_PyArg_CheckPositional@plt>:
    24a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24a4:	ldr	x17, [x16, #312]
    24a8:	add	x16, x16, #0x138
    24ac:	br	x17

00000000000024b0 <lzma_properties_decode@plt>:
    24b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24b4:	ldr	x17, [x16, #320]
    24b8:	add	x16, x16, #0x140
    24bc:	br	x17

00000000000024c0 <PyErr_Occurred@plt>:
    24c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24c4:	ldr	x17, [x16, #328]
    24c8:	add	x16, x16, #0x148
    24cc:	br	x17

00000000000024d0 <PyModule_Create2@plt>:
    24d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24d4:	ldr	x17, [x16, #336]
    24d8:	add	x16, x16, #0x150
    24dc:	br	x17

00000000000024e0 <lzma_stream_decoder@plt>:
    24e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24e4:	ldr	x17, [x16, #344]
    24e8:	add	x16, x16, #0x158
    24ec:	br	x17

00000000000024f0 <lzma_alone_decoder@plt>:
    24f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    24f4:	ldr	x17, [x16, #352]
    24f8:	add	x16, x16, #0x160
    24fc:	br	x17

0000000000002500 <lzma_end@plt>:
    2500:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2504:	ldr	x17, [x16, #360]
    2508:	add	x16, x16, #0x168
    250c:	br	x17

0000000000002510 <PyMem_RawFree@plt>:
    2510:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2514:	ldr	x17, [x16, #368]
    2518:	add	x16, x16, #0x170
    251c:	br	x17

0000000000002520 <lzma_get_check@plt>:
    2520:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2524:	ldr	x17, [x16, #376]
    2528:	add	x16, x16, #0x178
    252c:	br	x17

0000000000002530 <free@plt>:
    2530:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2534:	ldr	x17, [x16, #384]
    2538:	add	x16, x16, #0x180
    253c:	br	x17

0000000000002540 <PyThread_allocate_lock@plt>:
    2540:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2544:	ldr	x17, [x16, #392]
    2548:	add	x16, x16, #0x188
    254c:	br	x17

0000000000002550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>:
    2550:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2554:	ldr	x17, [x16, #400]
    2558:	add	x16, x16, #0x190
    255c:	br	x17

0000000000002560 <PyThread_release_lock@plt>:
    2560:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2564:	ldr	x17, [x16, #408]
    2568:	add	x16, x16, #0x198
    256c:	br	x17

0000000000002570 <lzma_raw_decoder@plt>:
    2570:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2574:	ldr	x17, [x16, #416]
    2578:	add	x16, x16, #0x1a0
    257c:	br	x17

0000000000002580 <PyDict_New@plt>:
    2580:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2584:	ldr	x17, [x16, #424]
    2588:	add	x16, x16, #0x1a8
    258c:	br	x17

0000000000002590 <lzma_alone_encoder@plt>:
    2590:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2594:	ldr	x17, [x16, #432]
    2598:	add	x16, x16, #0x1b0
    259c:	br	x17

00000000000025a0 <PyObject_GetBuffer@plt>:
    25a0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25a4:	ldr	x17, [x16, #440]
    25a8:	add	x16, x16, #0x1b8
    25ac:	br	x17

00000000000025b0 <lzma_properties_encode@plt>:
    25b0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25b4:	ldr	x17, [x16, #448]
    25b8:	add	x16, x16, #0x1c0
    25bc:	br	x17

00000000000025c0 <PyEval_SaveThread@plt>:
    25c0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25c4:	ldr	x17, [x16, #456]
    25c8:	add	x16, x16, #0x1c8
    25cc:	br	x17

00000000000025d0 <PyModule_AddObject@plt>:
    25d0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25d4:	ldr	x17, [x16, #464]
    25d8:	add	x16, x16, #0x1d0
    25dc:	br	x17

00000000000025e0 <PyType_IsSubtype@plt>:
    25e0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25e4:	ldr	x17, [x16, #472]
    25e8:	add	x16, x16, #0x1d8
    25ec:	br	x17

00000000000025f0 <PyErr_Format@plt>:
    25f0:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    25f4:	ldr	x17, [x16, #480]
    25f8:	add	x16, x16, #0x1e0
    25fc:	br	x17

0000000000002600 <lzma_check_is_supported@plt>:
    2600:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2604:	ldr	x17, [x16, #488]
    2608:	add	x16, x16, #0x1e8
    260c:	br	x17

0000000000002610 <lzma_stream_encoder@plt>:
    2610:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2614:	ldr	x17, [x16, #496]
    2618:	add	x16, x16, #0x1f0
    261c:	br	x17

0000000000002620 <PyLong_FromLongLong@plt>:
    2620:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2624:	ldr	x17, [x16, #504]
    2628:	add	x16, x16, #0x1f8
    262c:	br	x17

0000000000002630 <PyNumber_Index@plt>:
    2630:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2634:	ldr	x17, [x16, #512]
    2638:	add	x16, x16, #0x200
    263c:	br	x17

0000000000002640 <_PyLong_AsInt@plt>:
    2640:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2644:	ldr	x17, [x16, #520]
    2648:	add	x16, x16, #0x208
    264c:	br	x17

0000000000002650 <lzma_lzma_preset@plt>:
    2650:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2654:	ldr	x17, [x16, #528]
    2658:	add	x16, x16, #0x210
    265c:	br	x17

0000000000002660 <PyMem_Malloc@plt>:
    2660:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2664:	ldr	x17, [x16, #536]
    2668:	add	x16, x16, #0x218
    266c:	br	x17

0000000000002670 <PyThread_free_lock@plt>:
    2670:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2674:	ldr	x17, [x16, #544]
    2678:	add	x16, x16, #0x220
    267c:	br	x17

0000000000002680 <_PyDict_SetItemId@plt>:
    2680:	adrp	x16, 18000 <memcpy@GLIBC_2.17>
    2684:	ldr	x17, [x16, #552]
    2688:	add	x16, x16, #0x228
    268c:	br	x17

Disassembly of section .text:

0000000000002690 <PyInit__lzma@@Base-0x2fa8>:
    2690:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2694:	ldr	x0, [x0, #4032]
    2698:	cbz	x0, 26a0 <_PyDict_SetItemId@plt+0x20>
    269c:	b	2480 <__gmon_start__@plt>
    26a0:	ret
    26a4:	stp	x29, x30, [sp, #-32]!
    26a8:	mov	x29, sp
    26ac:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    26b0:	add	x0, x0, #0x9b8
    26b4:	str	x0, [sp, #24]
    26b8:	ldr	x0, [sp, #24]
    26bc:	str	x0, [sp, #24]
    26c0:	ldr	x1, [sp, #24]
    26c4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    26c8:	add	x0, x0, #0x9b8
    26cc:	cmp	x1, x0
    26d0:	b.eq	2708 <_PyDict_SetItemId@plt+0x88>  // b.none
    26d4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    26d8:	ldr	x0, [x0, #3976]
    26dc:	str	x0, [sp, #16]
    26e0:	ldr	x0, [sp, #16]
    26e4:	str	x0, [sp, #16]
    26e8:	ldr	x0, [sp, #16]
    26ec:	cmp	x0, #0x0
    26f0:	b.eq	270c <_PyDict_SetItemId@plt+0x8c>  // b.none
    26f4:	ldr	x1, [sp, #16]
    26f8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    26fc:	add	x0, x0, #0x9b8
    2700:	blr	x1
    2704:	b	270c <_PyDict_SetItemId@plt+0x8c>
    2708:	nop
    270c:	ldp	x29, x30, [sp], #32
    2710:	ret
    2714:	stp	x29, x30, [sp, #-48]!
    2718:	mov	x29, sp
    271c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2720:	add	x0, x0, #0x9b8
    2724:	str	x0, [sp, #40]
    2728:	ldr	x0, [sp, #40]
    272c:	str	x0, [sp, #40]
    2730:	ldr	x1, [sp, #40]
    2734:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2738:	add	x0, x0, #0x9b8
    273c:	sub	x0, x1, x0
    2740:	asr	x0, x0, #3
    2744:	lsr	x1, x0, #63
    2748:	add	x0, x1, x0
    274c:	asr	x0, x0, #1
    2750:	str	x0, [sp, #32]
    2754:	ldr	x0, [sp, #32]
    2758:	cmp	x0, #0x0
    275c:	b.eq	2798 <_PyDict_SetItemId@plt+0x118>  // b.none
    2760:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2764:	ldr	x0, [x0, #4064]
    2768:	str	x0, [sp, #24]
    276c:	ldr	x0, [sp, #24]
    2770:	str	x0, [sp, #24]
    2774:	ldr	x0, [sp, #24]
    2778:	cmp	x0, #0x0
    277c:	b.eq	279c <_PyDict_SetItemId@plt+0x11c>  // b.none
    2780:	ldr	x2, [sp, #24]
    2784:	ldr	x1, [sp, #32]
    2788:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    278c:	add	x0, x0, #0x9b8
    2790:	blr	x2
    2794:	b	279c <_PyDict_SetItemId@plt+0x11c>
    2798:	nop
    279c:	ldp	x29, x30, [sp], #48
    27a0:	ret
    27a4:	stp	x29, x30, [sp, #-16]!
    27a8:	mov	x29, sp
    27ac:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    27b0:	add	x0, x0, #0x9b8
    27b4:	ldrb	w0, [x0]
    27b8:	and	x0, x0, #0xff
    27bc:	cmp	x0, #0x0
    27c0:	b.ne	27fc <_PyDict_SetItemId@plt+0x17c>  // b.any
    27c4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    27c8:	ldr	x0, [x0, #3992]
    27cc:	cmp	x0, #0x0
    27d0:	b.eq	27e4 <_PyDict_SetItemId@plt+0x164>  // b.none
    27d4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    27d8:	add	x0, x0, #0x230
    27dc:	ldr	x0, [x0]
    27e0:	bl	22e0 <__cxa_finalize@plt>
    27e4:	bl	26a4 <_PyDict_SetItemId@plt+0x24>
    27e8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    27ec:	add	x0, x0, #0x9b8
    27f0:	mov	w1, #0x1                   	// #1
    27f4:	strb	w1, [x0]
    27f8:	b	2800 <_PyDict_SetItemId@plt+0x180>
    27fc:	nop
    2800:	ldp	x29, x30, [sp], #16
    2804:	ret
    2808:	stp	x29, x30, [sp, #-16]!
    280c:	mov	x29, sp
    2810:	bl	2714 <_PyDict_SetItemId@plt+0x94>
    2814:	nop
    2818:	ldp	x29, x30, [sp], #16
    281c:	ret
    2820:	sub	sp, sp, #0x10
    2824:	str	x0, [sp, #8]
    2828:	ldr	x0, [sp, #8]
    282c:	ldr	x0, [x0]
    2830:	add	x1, x0, #0x1
    2834:	ldr	x0, [sp, #8]
    2838:	str	x1, [x0]
    283c:	nop
    2840:	add	sp, sp, #0x10
    2844:	ret
    2848:	stp	x29, x30, [sp, #-48]!
    284c:	mov	x29, sp
    2850:	str	x0, [sp, #40]
    2854:	str	w1, [sp, #36]
    2858:	str	x2, [sp, #24]
    285c:	ldr	x0, [sp, #24]
    2860:	ldr	x0, [x0]
    2864:	sub	x1, x0, #0x1
    2868:	ldr	x0, [sp, #24]
    286c:	str	x1, [x0]
    2870:	ldr	x0, [sp, #24]
    2874:	ldr	x0, [x0]
    2878:	cmp	x0, #0x0
    287c:	b.ne	2888 <_PyDict_SetItemId@plt+0x208>  // b.any
    2880:	ldr	x0, [sp, #24]
    2884:	bl	2320 <_Py_Dealloc@plt>
    2888:	nop
    288c:	ldp	x29, x30, [sp], #48
    2890:	ret
    2894:	stp	x29, x30, [sp, #-32]!
    2898:	mov	x29, sp
    289c:	str	x0, [sp, #24]
    28a0:	ldr	x0, [sp, #24]
    28a4:	cmp	x0, #0x0
    28a8:	b.eq	28c0 <_PyDict_SetItemId@plt+0x240>  // b.none
    28ac:	ldr	x2, [sp, #24]
    28b0:	mov	w1, #0x21d                 	// #541
    28b4:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    28b8:	add	x0, x0, #0xb00
    28bc:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    28c0:	nop
    28c4:	ldp	x29, x30, [sp], #32
    28c8:	ret
    28cc:	stp	x29, x30, [sp, #-32]!
    28d0:	mov	x29, sp
    28d4:	str	w0, [sp, #28]
    28d8:	ldr	w0, [sp, #28]
    28dc:	cmp	w0, #0xb
    28e0:	b.eq	2aa0 <_PyDict_SetItemId@plt+0x420>  // b.none
    28e4:	ldr	w0, [sp, #28]
    28e8:	cmp	w0, #0xb
    28ec:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    28f0:	ldr	w0, [sp, #28]
    28f4:	cmp	w0, #0xa
    28f8:	b.eq	2a7c <_PyDict_SetItemId@plt+0x3fc>  // b.none
    28fc:	ldr	w0, [sp, #28]
    2900:	cmp	w0, #0xa
    2904:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2908:	ldr	w0, [sp, #28]
    290c:	cmp	w0, #0x9
    2910:	b.eq	2a58 <_PyDict_SetItemId@plt+0x3d8>  // b.none
    2914:	ldr	w0, [sp, #28]
    2918:	cmp	w0, #0x9
    291c:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2920:	ldr	w0, [sp, #28]
    2924:	cmp	w0, #0x8
    2928:	b.eq	2a34 <_PyDict_SetItemId@plt+0x3b4>  // b.none
    292c:	ldr	w0, [sp, #28]
    2930:	cmp	w0, #0x8
    2934:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2938:	ldr	w0, [sp, #28]
    293c:	cmp	w0, #0x7
    2940:	b.eq	2a10 <_PyDict_SetItemId@plt+0x390>  // b.none
    2944:	ldr	w0, [sp, #28]
    2948:	cmp	w0, #0x7
    294c:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2950:	ldr	w0, [sp, #28]
    2954:	cmp	w0, #0x6
    2958:	b.eq	29ec <_PyDict_SetItemId@plt+0x36c>  // b.none
    295c:	ldr	w0, [sp, #28]
    2960:	cmp	w0, #0x6
    2964:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2968:	ldr	w0, [sp, #28]
    296c:	cmp	w0, #0x5
    2970:	b.eq	29e0 <_PyDict_SetItemId@plt+0x360>  // b.none
    2974:	ldr	w0, [sp, #28]
    2978:	cmp	w0, #0x5
    297c:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2980:	ldr	w0, [sp, #28]
    2984:	cmp	w0, #0x4
    2988:	b.eq	29b4 <_PyDict_SetItemId@plt+0x334>  // b.none
    298c:	ldr	w0, [sp, #28]
    2990:	cmp	w0, #0x4
    2994:	b.hi	2ac4 <_PyDict_SetItemId@plt+0x444>  // b.pmore
    2998:	ldr	w0, [sp, #28]
    299c:	cmp	w0, #0x2
    29a0:	b.ls	29b4 <_PyDict_SetItemId@plt+0x334>  // b.plast
    29a4:	ldr	w0, [sp, #28]
    29a8:	cmp	w0, #0x3
    29ac:	b.eq	29bc <_PyDict_SetItemId@plt+0x33c>  // b.none
    29b0:	b	2ac4 <_PyDict_SetItemId@plt+0x444>
    29b4:	mov	w0, #0x0                   	// #0
    29b8:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    29bc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    29c0:	add	x0, x0, #0x9c0
    29c4:	ldr	x2, [x0]
    29c8:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    29cc:	add	x1, x0, #0xb18
    29d0:	mov	x0, x2
    29d4:	bl	2380 <PyErr_SetString@plt>
    29d8:	mov	w0, #0x1                   	// #1
    29dc:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    29e0:	bl	2330 <PyErr_NoMemory@plt>
    29e4:	mov	w0, #0x1                   	// #1
    29e8:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    29ec:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    29f0:	add	x0, x0, #0x9c0
    29f4:	ldr	x2, [x0]
    29f8:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    29fc:	add	x1, x0, #0xb38
    2a00:	mov	x0, x2
    2a04:	bl	2380 <PyErr_SetString@plt>
    2a08:	mov	w0, #0x1                   	// #1
    2a0c:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    2a10:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2a14:	add	x0, x0, #0x9c0
    2a18:	ldr	x2, [x0]
    2a1c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2a20:	add	x1, x0, #0xb58
    2a24:	mov	x0, x2
    2a28:	bl	2380 <PyErr_SetString@plt>
    2a2c:	mov	w0, #0x1                   	// #1
    2a30:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    2a34:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2a38:	add	x0, x0, #0x9c0
    2a3c:	ldr	x2, [x0]
    2a40:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2a44:	add	x1, x0, #0xb80
    2a48:	mov	x0, x2
    2a4c:	bl	2380 <PyErr_SetString@plt>
    2a50:	mov	w0, #0x1                   	// #1
    2a54:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    2a58:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2a5c:	add	x0, x0, #0x9c0
    2a60:	ldr	x2, [x0]
    2a64:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2a68:	add	x1, x0, #0xba0
    2a6c:	mov	x0, x2
    2a70:	bl	2380 <PyErr_SetString@plt>
    2a74:	mov	w0, #0x1                   	// #1
    2a78:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    2a7c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2a80:	add	x0, x0, #0x9c0
    2a84:	ldr	x2, [x0]
    2a88:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2a8c:	add	x1, x0, #0xbb8
    2a90:	mov	x0, x2
    2a94:	bl	2380 <PyErr_SetString@plt>
    2a98:	mov	w0, #0x1                   	// #1
    2a9c:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    2aa0:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2aa4:	add	x0, x0, #0x9c0
    2aa8:	ldr	x2, [x0]
    2aac:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2ab0:	add	x1, x0, #0xbd8
    2ab4:	mov	x0, x2
    2ab8:	bl	2380 <PyErr_SetString@plt>
    2abc:	mov	w0, #0x1                   	// #1
    2ac0:	b	2ae8 <_PyDict_SetItemId@plt+0x468>
    2ac4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2ac8:	add	x0, x0, #0x9c0
    2acc:	ldr	x3, [x0]
    2ad0:	ldr	w2, [sp, #28]
    2ad4:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2ad8:	add	x1, x0, #0xbe8
    2adc:	mov	x0, x3
    2ae0:	bl	25f0 <PyErr_Format@plt>
    2ae4:	mov	w0, #0x1                   	// #1
    2ae8:	ldp	x29, x30, [sp], #32
    2aec:	ret
    2af0:	stp	x29, x30, [sp, #-48]!
    2af4:	mov	x29, sp
    2af8:	str	x0, [sp, #40]
    2afc:	str	x1, [sp, #32]
    2b00:	str	x2, [sp, #24]
    2b04:	ldr	x0, [sp, #24]
    2b08:	cmp	x0, #0x0
    2b0c:	b.eq	2b30 <_PyDict_SetItemId@plt+0x4b0>  // b.none
    2b10:	mov	x1, #0x7fffffffffffffff    	// #9223372036854775807
    2b14:	ldr	x0, [sp, #24]
    2b18:	udiv	x0, x1, x0
    2b1c:	ldr	x1, [sp, #32]
    2b20:	cmp	x1, x0
    2b24:	b.ls	2b30 <_PyDict_SetItemId@plt+0x4b0>  // b.plast
    2b28:	mov	x0, #0x0                   	// #0
    2b2c:	b	2b40 <_PyDict_SetItemId@plt+0x4c0>
    2b30:	ldr	x1, [sp, #32]
    2b34:	ldr	x0, [sp, #24]
    2b38:	mul	x0, x1, x0
    2b3c:	bl	22f0 <PyMem_RawMalloc@plt>
    2b40:	ldp	x29, x30, [sp], #48
    2b44:	ret
    2b48:	stp	x29, x30, [sp, #-32]!
    2b4c:	mov	x29, sp
    2b50:	str	x0, [sp, #24]
    2b54:	str	x1, [sp, #16]
    2b58:	ldr	x0, [sp, #16]
    2b5c:	bl	2510 <PyMem_RawFree@plt>
    2b60:	nop
    2b64:	ldp	x29, x30, [sp], #32
    2b68:	ret
    2b6c:	stp	x29, x30, [sp, #-48]!
    2b70:	mov	x29, sp
    2b74:	str	x0, [sp, #24]
    2b78:	str	x1, [sp, #16]
    2b7c:	ldr	x0, [sp, #24]
    2b80:	ldr	x0, [x0]
    2b84:	ldr	x0, [x0, #16]
    2b88:	str	x0, [sp, #32]
    2b8c:	ldr	x0, [sp, #32]
    2b90:	asr	x1, x0, #3
    2b94:	ldr	x0, [sp, #32]
    2b98:	add	x0, x1, x0
    2b9c:	add	x0, x0, #0x6
    2ba0:	str	x0, [sp, #40]
    2ba4:	ldr	x0, [sp, #16]
    2ba8:	cmp	x0, #0x0
    2bac:	b.le	2bc8 <_PyDict_SetItemId@plt+0x548>
    2bb0:	ldr	x1, [sp, #40]
    2bb4:	ldr	x0, [sp, #16]
    2bb8:	cmp	x1, x0
    2bbc:	b.le	2bc8 <_PyDict_SetItemId@plt+0x548>
    2bc0:	ldr	x0, [sp, #16]
    2bc4:	str	x0, [sp, #40]
    2bc8:	ldr	x1, [sp, #40]
    2bcc:	ldr	x0, [sp, #24]
    2bd0:	bl	2270 <_PyBytes_Resize@plt>
    2bd4:	ldp	x29, x30, [sp], #48
    2bd8:	ret
    2bdc:	stp	x29, x30, [sp, #-48]!
    2be0:	mov	x29, sp
    2be4:	str	x0, [sp, #24]
    2be8:	str	x1, [sp, #16]
    2bec:	ldr	x0, [sp, #24]
    2bf0:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    2bf4:	str	x0, [sp, #40]
    2bf8:	bl	24c0 <PyErr_Occurred@plt>
    2bfc:	cmp	x0, #0x0
    2c00:	b.eq	2c0c <_PyDict_SetItemId@plt+0x58c>  // b.none
    2c04:	mov	w0, #0x0                   	// #0
    2c08:	b	2c58 <_PyDict_SetItemId@plt+0x5d8>
    2c0c:	ldr	x0, [sp, #40]
    2c10:	mov	w0, w0
    2c14:	ldr	x1, [sp, #40]
    2c18:	cmp	x1, x0
    2c1c:	b.eq	2c44 <_PyDict_SetItemId@plt+0x5c4>  // b.none
    2c20:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2c24:	ldr	x0, [x0, #4040]
    2c28:	ldr	x2, [x0]
    2c2c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2c30:	add	x1, x0, #0xc10
    2c34:	mov	x0, x2
    2c38:	bl	2380 <PyErr_SetString@plt>
    2c3c:	mov	w0, #0x0                   	// #0
    2c40:	b	2c58 <_PyDict_SetItemId@plt+0x5d8>
    2c44:	ldr	x0, [sp, #40]
    2c48:	mov	w1, w0
    2c4c:	ldr	x0, [sp, #16]
    2c50:	str	w1, [x0]
    2c54:	mov	w0, #0x1                   	// #1
    2c58:	ldp	x29, x30, [sp], #48
    2c5c:	ret
    2c60:	stp	x29, x30, [sp, #-48]!
    2c64:	mov	x29, sp
    2c68:	str	x0, [sp, #24]
    2c6c:	str	x1, [sp, #16]
    2c70:	ldr	x0, [sp, #24]
    2c74:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    2c78:	str	x0, [sp, #40]
    2c7c:	bl	24c0 <PyErr_Occurred@plt>
    2c80:	cmp	x0, #0x0
    2c84:	b.eq	2c90 <_PyDict_SetItemId@plt+0x610>  // b.none
    2c88:	mov	w0, #0x0                   	// #0
    2c8c:	b	2ca0 <_PyDict_SetItemId@plt+0x620>
    2c90:	ldr	x0, [sp, #16]
    2c94:	ldr	x1, [sp, #40]
    2c98:	str	x1, [x0]
    2c9c:	mov	w0, #0x1                   	// #1
    2ca0:	ldp	x29, x30, [sp], #48
    2ca4:	ret
    2ca8:	stp	x29, x30, [sp, #-48]!
    2cac:	mov	x29, sp
    2cb0:	str	x0, [sp, #24]
    2cb4:	str	x1, [sp, #16]
    2cb8:	ldr	x0, [sp, #24]
    2cbc:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    2cc0:	str	x0, [sp, #40]
    2cc4:	bl	24c0 <PyErr_Occurred@plt>
    2cc8:	cmp	x0, #0x0
    2ccc:	b.eq	2cd8 <_PyDict_SetItemId@plt+0x658>  // b.none
    2cd0:	mov	w0, #0x0                   	// #0
    2cd4:	b	2d24 <_PyDict_SetItemId@plt+0x6a4>
    2cd8:	ldr	x0, [sp, #40]
    2cdc:	mov	w0, w0
    2ce0:	ldr	x1, [sp, #40]
    2ce4:	cmp	x1, x0
    2ce8:	b.eq	2d10 <_PyDict_SetItemId@plt+0x690>  // b.none
    2cec:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2cf0:	ldr	x0, [x0, #4040]
    2cf4:	ldr	x2, [x0]
    2cf8:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2cfc:	add	x1, x0, #0xc38
    2d00:	mov	x0, x2
    2d04:	bl	2380 <PyErr_SetString@plt>
    2d08:	mov	w0, #0x0                   	// #0
    2d0c:	b	2d24 <_PyDict_SetItemId@plt+0x6a4>
    2d10:	ldr	x0, [sp, #40]
    2d14:	mov	w1, w0
    2d18:	ldr	x0, [sp, #16]
    2d1c:	str	w1, [x0]
    2d20:	mov	w0, #0x1                   	// #1
    2d24:	ldp	x29, x30, [sp], #48
    2d28:	ret
    2d2c:	stp	x29, x30, [sp, #-48]!
    2d30:	mov	x29, sp
    2d34:	str	x0, [sp, #24]
    2d38:	str	x1, [sp, #16]
    2d3c:	ldr	x0, [sp, #24]
    2d40:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    2d44:	str	x0, [sp, #40]
    2d48:	bl	24c0 <PyErr_Occurred@plt>
    2d4c:	cmp	x0, #0x0
    2d50:	b.eq	2d5c <_PyDict_SetItemId@plt+0x6dc>  // b.none
    2d54:	mov	w0, #0x0                   	// #0
    2d58:	b	2da8 <_PyDict_SetItemId@plt+0x728>
    2d5c:	ldr	x0, [sp, #40]
    2d60:	mov	w0, w0
    2d64:	ldr	x1, [sp, #40]
    2d68:	cmp	x1, x0
    2d6c:	b.eq	2d94 <_PyDict_SetItemId@plt+0x714>  // b.none
    2d70:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2d74:	ldr	x0, [x0, #4040]
    2d78:	ldr	x2, [x0]
    2d7c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2d80:	add	x1, x0, #0xc60
    2d84:	mov	x0, x2
    2d88:	bl	2380 <PyErr_SetString@plt>
    2d8c:	mov	w0, #0x0                   	// #0
    2d90:	b	2da8 <_PyDict_SetItemId@plt+0x728>
    2d94:	ldr	x0, [sp, #40]
    2d98:	mov	w1, w0
    2d9c:	ldr	x0, [sp, #16]
    2da0:	str	w1, [x0]
    2da4:	mov	w0, #0x1                   	// #1
    2da8:	ldp	x29, x30, [sp], #48
    2dac:	ret
    2db0:	sub	sp, sp, #0xc0
    2db4:	stp	x29, x30, [sp, #112]
    2db8:	add	x29, sp, #0x70
    2dbc:	str	x0, [sp, #136]
    2dc0:	mov	w0, #0x6                   	// #6
    2dc4:	str	w0, [sp, #156]
    2dc8:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2dcc:	add	x1, x0, #0xc90
    2dd0:	ldr	x0, [sp, #136]
    2dd4:	bl	2390 <PyMapping_GetItemString@plt>
    2dd8:	str	x0, [sp, #160]
    2ddc:	ldr	x0, [sp, #160]
    2de0:	cmp	x0, #0x0
    2de4:	b.ne	2e10 <_PyDict_SetItemId@plt+0x790>  // b.any
    2de8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2dec:	ldr	x0, [x0, #4024]
    2df0:	ldr	x0, [x0]
    2df4:	bl	23d0 <PyErr_ExceptionMatches@plt>
    2df8:	cmp	w0, #0x0
    2dfc:	b.eq	2e08 <_PyDict_SetItemId@plt+0x788>  // b.none
    2e00:	bl	2460 <PyErr_Clear@plt>
    2e04:	b	2e4c <_PyDict_SetItemId@plt+0x7cc>
    2e08:	mov	x0, #0x0                   	// #0
    2e0c:	b	2fec <_PyDict_SetItemId@plt+0x96c>
    2e10:	ldr	x0, [sp, #160]
    2e14:	add	x1, sp, #0x9c
    2e18:	bl	2bdc <_PyDict_SetItemId@plt+0x55c>
    2e1c:	str	w0, [sp, #180]
    2e20:	ldr	x0, [sp, #160]
    2e24:	mov	x2, x0
    2e28:	mov	w1, #0xd2                  	// #210
    2e2c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2e30:	add	x0, x0, #0xc98
    2e34:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    2e38:	ldr	w0, [sp, #180]
    2e3c:	cmp	w0, #0x0
    2e40:	b.ne	2e4c <_PyDict_SetItemId@plt+0x7cc>  // b.any
    2e44:	mov	x0, #0x0                   	// #0
    2e48:	b	2fec <_PyDict_SetItemId@plt+0x96c>
    2e4c:	mov	x0, #0x70                  	// #112
    2e50:	bl	2660 <PyMem_Malloc@plt>
    2e54:	str	x0, [sp, #184]
    2e58:	ldr	x0, [sp, #184]
    2e5c:	cmp	x0, #0x0
    2e60:	b.ne	2e6c <_PyDict_SetItemId@plt+0x7ec>  // b.any
    2e64:	bl	2330 <PyErr_NoMemory@plt>
    2e68:	b	2fec <_PyDict_SetItemId@plt+0x96c>
    2e6c:	mov	x2, #0x70                  	// #112
    2e70:	mov	w1, #0x0                   	// #0
    2e74:	ldr	x0, [sp, #184]
    2e78:	bl	23e0 <memset@plt>
    2e7c:	ldr	w0, [sp, #156]
    2e80:	mov	w1, w0
    2e84:	ldr	x0, [sp, #184]
    2e88:	bl	2650 <lzma_lzma_preset@plt>
    2e8c:	and	w0, w0, #0xff
    2e90:	cmp	w0, #0x0
    2e94:	b.eq	2ecc <_PyDict_SetItemId@plt+0x84c>  // b.none
    2e98:	ldr	x0, [sp, #184]
    2e9c:	bl	22a0 <PyMem_Free@plt>
    2ea0:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2ea4:	add	x0, x0, #0x9c0
    2ea8:	ldr	x3, [x0]
    2eac:	ldr	w0, [sp, #156]
    2eb0:	mov	w2, w0
    2eb4:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2eb8:	add	x1, x0, #0xcc8
    2ebc:	mov	x0, x3
    2ec0:	bl	25f0 <PyErr_Format@plt>
    2ec4:	mov	x0, #0x0                   	// #0
    2ec8:	b	2fec <_PyDict_SetItemId@plt+0x96c>
    2ecc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2ed0:	add	x0, x0, #0x9c8
    2ed4:	ldr	x8, [x0]
    2ed8:	ldr	x7, [sp, #184]
    2edc:	ldr	x0, [sp, #184]
    2ee0:	add	x0, x0, #0x14
    2ee4:	ldr	x1, [sp, #184]
    2ee8:	add	x1, x1, #0x18
    2eec:	ldr	x2, [sp, #184]
    2ef0:	add	x2, x2, #0x1c
    2ef4:	ldr	x3, [sp, #184]
    2ef8:	add	x3, x3, #0x20
    2efc:	ldr	x4, [sp, #184]
    2f00:	add	x4, x4, #0x24
    2f04:	ldr	x5, [sp, #184]
    2f08:	add	x5, x5, #0x28
    2f0c:	ldr	x6, [sp, #184]
    2f10:	add	x6, x6, #0x2c
    2f14:	add	x10, sp, #0xa0
    2f18:	add	x9, sp, #0xa8
    2f1c:	str	x6, [sp, #104]
    2f20:	adrp	x6, 2000 <memcpy@plt-0x230>
    2f24:	add	x6, x6, #0xbdc
    2f28:	str	x6, [sp, #96]
    2f2c:	str	x5, [sp, #88]
    2f30:	adrp	x5, 2000 <memcpy@plt-0x230>
    2f34:	add	x5, x5, #0xd2c
    2f38:	str	x5, [sp, #80]
    2f3c:	str	x4, [sp, #72]
    2f40:	adrp	x4, 2000 <memcpy@plt-0x230>
    2f44:	add	x4, x4, #0xbdc
    2f48:	str	x4, [sp, #64]
    2f4c:	str	x3, [sp, #56]
    2f50:	adrp	x3, 2000 <memcpy@plt-0x230>
    2f54:	add	x3, x3, #0xca8
    2f58:	str	x3, [sp, #48]
    2f5c:	str	x2, [sp, #40]
    2f60:	adrp	x2, 2000 <memcpy@plt-0x230>
    2f64:	add	x2, x2, #0xbdc
    2f68:	str	x2, [sp, #32]
    2f6c:	str	x1, [sp, #24]
    2f70:	adrp	x1, 2000 <memcpy@plt-0x230>
    2f74:	add	x1, x1, #0xbdc
    2f78:	str	x1, [sp, #16]
    2f7c:	str	x0, [sp, #8]
    2f80:	adrp	x0, 2000 <memcpy@plt-0x230>
    2f84:	add	x0, x0, #0xbdc
    2f88:	str	x0, [sp]
    2f8c:	adrp	x0, 2000 <memcpy@plt-0x230>
    2f90:	add	x6, x0, #0xbdc
    2f94:	mov	x5, x10
    2f98:	mov	x4, x9
    2f9c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    2fa0:	add	x3, x0, #0x488
    2fa4:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2fa8:	add	x2, x0, #0xce8
    2fac:	ldr	x1, [sp, #136]
    2fb0:	mov	x0, x8
    2fb4:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    2fb8:	cmp	w0, #0x0
    2fbc:	b.ne	2fe8 <_PyDict_SetItemId@plt+0x968>  // b.any
    2fc0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    2fc4:	ldr	x0, [x0, #4008]
    2fc8:	ldr	x2, [x0]
    2fcc:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    2fd0:	add	x1, x0, #0xd00
    2fd4:	mov	x0, x2
    2fd8:	bl	2380 <PyErr_SetString@plt>
    2fdc:	ldr	x0, [sp, #184]
    2fe0:	bl	22a0 <PyMem_Free@plt>
    2fe4:	str	xzr, [sp, #184]
    2fe8:	ldr	x0, [sp, #184]
    2fec:	ldp	x29, x30, [sp, #112]
    2ff0:	add	sp, sp, #0xc0
    2ff4:	ret
    2ff8:	stp	x29, x30, [sp, #-64]!
    2ffc:	mov	x29, sp
    3000:	str	x0, [sp, #24]
    3004:	mov	w0, #0x1                   	// #1
    3008:	str	w0, [sp, #44]
    300c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3010:	add	x0, x0, #0x9c8
    3014:	ldr	x7, [x0]
    3018:	add	x0, sp, #0x2c
    301c:	add	x1, sp, #0x30
    3020:	mov	x6, x0
    3024:	adrp	x0, 2000 <memcpy@plt-0x230>
    3028:	add	x5, x0, #0xbdc
    302c:	mov	x4, x1
    3030:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3034:	add	x3, x0, #0x4e0
    3038:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    303c:	add	x2, x0, #0xd30
    3040:	ldr	x1, [sp, #24]
    3044:	mov	x0, x7
    3048:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    304c:	cmp	w0, #0x0
    3050:	b.ne	3078 <_PyDict_SetItemId@plt+0x9f8>  // b.any
    3054:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3058:	ldr	x0, [x0, #4008]
    305c:	ldr	x2, [x0]
    3060:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3064:	add	x1, x0, #0xd38
    3068:	mov	x0, x2
    306c:	bl	2380 <PyErr_SetString@plt>
    3070:	mov	x0, #0x0                   	// #0
    3074:	b	30c0 <_PyDict_SetItemId@plt+0xa40>
    3078:	mov	x0, #0x28                  	// #40
    307c:	bl	2660 <PyMem_Malloc@plt>
    3080:	str	x0, [sp, #56]
    3084:	ldr	x0, [sp, #56]
    3088:	cmp	x0, #0x0
    308c:	b.ne	3098 <_PyDict_SetItemId@plt+0xa18>  // b.any
    3090:	bl	2330 <PyErr_NoMemory@plt>
    3094:	b	30c0 <_PyDict_SetItemId@plt+0xa40>
    3098:	mov	x2, #0x28                  	// #40
    309c:	mov	w1, #0x0                   	// #0
    30a0:	ldr	x0, [sp, #56]
    30a4:	bl	23e0 <memset@plt>
    30a8:	ldr	x0, [sp, #56]
    30ac:	str	wzr, [x0]
    30b0:	ldr	w1, [sp, #44]
    30b4:	ldr	x0, [sp, #56]
    30b8:	str	w1, [x0, #4]
    30bc:	ldr	x0, [sp, #56]
    30c0:	ldp	x29, x30, [sp], #64
    30c4:	ret
    30c8:	stp	x29, x30, [sp, #-64]!
    30cc:	mov	x29, sp
    30d0:	str	x0, [sp, #24]
    30d4:	str	wzr, [sp, #44]
    30d8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    30dc:	add	x0, x0, #0x9c8
    30e0:	ldr	x7, [x0]
    30e4:	add	x0, sp, #0x2c
    30e8:	add	x1, sp, #0x30
    30ec:	mov	x6, x0
    30f0:	adrp	x0, 2000 <memcpy@plt-0x230>
    30f4:	add	x5, x0, #0xbdc
    30f8:	mov	x4, x1
    30fc:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3100:	add	x3, x0, #0x4f8
    3104:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3108:	add	x2, x0, #0xd30
    310c:	ldr	x1, [sp, #24]
    3110:	mov	x0, x7
    3114:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    3118:	cmp	w0, #0x0
    311c:	b.ne	3144 <_PyDict_SetItemId@plt+0xac4>  // b.any
    3120:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3124:	ldr	x0, [x0, #4008]
    3128:	ldr	x2, [x0]
    312c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3130:	add	x1, x0, #0xd68
    3134:	mov	x0, x2
    3138:	bl	2380 <PyErr_SetString@plt>
    313c:	mov	x0, #0x0                   	// #0
    3140:	b	3184 <_PyDict_SetItemId@plt+0xb04>
    3144:	mov	x0, #0x4                   	// #4
    3148:	bl	2660 <PyMem_Malloc@plt>
    314c:	str	x0, [sp, #56]
    3150:	ldr	x0, [sp, #56]
    3154:	cmp	x0, #0x0
    3158:	b.ne	3164 <_PyDict_SetItemId@plt+0xae4>  // b.any
    315c:	bl	2330 <PyErr_NoMemory@plt>
    3160:	b	3184 <_PyDict_SetItemId@plt+0xb04>
    3164:	mov	x2, #0x4                   	// #4
    3168:	mov	w1, #0x0                   	// #0
    316c:	ldr	x0, [sp, #56]
    3170:	bl	23e0 <memset@plt>
    3174:	ldr	w1, [sp, #44]
    3178:	ldr	x0, [sp, #56]
    317c:	str	w1, [x0]
    3180:	ldr	x0, [sp, #56]
    3184:	ldp	x29, x30, [sp], #64
    3188:	ret
    318c:	stp	x29, x30, [sp, #-48]!
    3190:	mov	x29, sp
    3194:	str	x0, [sp, #24]
    3198:	str	x1, [sp, #16]
    319c:	ldr	x0, [sp, #16]
    31a0:	str	x0, [sp, #40]
    31a4:	ldr	x0, [sp, #24]
    31a8:	bl	2260 <PyMapping_Check@plt>
    31ac:	cmp	w0, #0x0
    31b0:	b.ne	31d8 <_PyDict_SetItemId@plt+0xb58>  // b.any
    31b4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    31b8:	ldr	x0, [x0, #4016]
    31bc:	ldr	x2, [x0]
    31c0:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    31c4:	add	x1, x0, #0xd90
    31c8:	mov	x0, x2
    31cc:	bl	2380 <PyErr_SetString@plt>
    31d0:	mov	w0, #0x0                   	// #0
    31d4:	b	3378 <_PyDict_SetItemId@plt+0xcf8>
    31d8:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    31dc:	add	x1, x0, #0xdc8
    31e0:	ldr	x0, [sp, #24]
    31e4:	bl	2390 <PyMapping_GetItemString@plt>
    31e8:	str	x0, [sp, #32]
    31ec:	ldr	x0, [sp, #32]
    31f0:	cmp	x0, #0x0
    31f4:	b.ne	3234 <_PyDict_SetItemId@plt+0xbb4>  // b.any
    31f8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    31fc:	ldr	x0, [x0, #4024]
    3200:	ldr	x0, [x0]
    3204:	bl	23d0 <PyErr_ExceptionMatches@plt>
    3208:	cmp	w0, #0x0
    320c:	b.eq	322c <_PyDict_SetItemId@plt+0xbac>  // b.none
    3210:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3214:	ldr	x0, [x0, #4008]
    3218:	ldr	x2, [x0]
    321c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3220:	add	x1, x0, #0xdd0
    3224:	mov	x0, x2
    3228:	bl	2380 <PyErr_SetString@plt>
    322c:	mov	w0, #0x0                   	// #0
    3230:	b	3378 <_PyDict_SetItemId@plt+0xcf8>
    3234:	ldr	x0, [sp, #32]
    3238:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    323c:	mov	x1, x0
    3240:	ldr	x0, [sp, #40]
    3244:	str	x1, [x0]
    3248:	ldr	x2, [sp, #32]
    324c:	mov	w1, #0x137                 	// #311
    3250:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3254:	add	x0, x0, #0xc98
    3258:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    325c:	bl	24c0 <PyErr_Occurred@plt>
    3260:	cmp	x0, #0x0
    3264:	b.eq	3270 <_PyDict_SetItemId@plt+0xbf0>  // b.none
    3268:	mov	w0, #0x0                   	// #0
    326c:	b	3378 <_PyDict_SetItemId@plt+0xcf8>
    3270:	ldr	x0, [sp, #40]
    3274:	ldr	x0, [x0]
    3278:	mov	x1, #0x1                   	// #1
    327c:	movk	x1, #0x4000, lsl #48
    3280:	cmp	x0, x1
    3284:	b.eq	32c8 <_PyDict_SetItemId@plt+0xc48>  // b.none
    3288:	mov	x1, #0x1                   	// #1
    328c:	movk	x1, #0x4000, lsl #48
    3290:	cmp	x0, x1
    3294:	b.hi	334c <_PyDict_SetItemId@plt+0xccc>  // b.pmore
    3298:	cmp	x0, #0x21
    329c:	b.eq	32c8 <_PyDict_SetItemId@plt+0xc48>  // b.none
    32a0:	cmp	x0, #0x21
    32a4:	b.hi	334c <_PyDict_SetItemId@plt+0xccc>  // b.pmore
    32a8:	cmp	x0, #0x3
    32ac:	b.eq	32f4 <_PyDict_SetItemId@plt+0xc74>  // b.none
    32b0:	cmp	x0, #0x3
    32b4:	b.cc	334c <_PyDict_SetItemId@plt+0xccc>  // b.lo, b.ul, b.last
    32b8:	sub	x0, x0, #0x4
    32bc:	cmp	x0, #0x5
    32c0:	b.hi	334c <_PyDict_SetItemId@plt+0xccc>  // b.pmore
    32c4:	b	3320 <_PyDict_SetItemId@plt+0xca0>
    32c8:	ldr	x0, [sp, #24]
    32cc:	bl	2db0 <_PyDict_SetItemId@plt+0x730>
    32d0:	mov	x1, x0
    32d4:	ldr	x0, [sp, #40]
    32d8:	str	x1, [x0, #8]
    32dc:	ldr	x0, [sp, #40]
    32e0:	ldr	x0, [x0, #8]
    32e4:	cmp	x0, #0x0
    32e8:	cset	w0, ne  // ne = any
    32ec:	and	w0, w0, #0xff
    32f0:	b	3378 <_PyDict_SetItemId@plt+0xcf8>
    32f4:	ldr	x0, [sp, #24]
    32f8:	bl	2ff8 <_PyDict_SetItemId@plt+0x978>
    32fc:	mov	x1, x0
    3300:	ldr	x0, [sp, #40]
    3304:	str	x1, [x0, #8]
    3308:	ldr	x0, [sp, #40]
    330c:	ldr	x0, [x0, #8]
    3310:	cmp	x0, #0x0
    3314:	cset	w0, ne  // ne = any
    3318:	and	w0, w0, #0xff
    331c:	b	3378 <_PyDict_SetItemId@plt+0xcf8>
    3320:	ldr	x0, [sp, #24]
    3324:	bl	30c8 <_PyDict_SetItemId@plt+0xa48>
    3328:	mov	x1, x0
    332c:	ldr	x0, [sp, #40]
    3330:	str	x1, [x0, #8]
    3334:	ldr	x0, [sp, #40]
    3338:	ldr	x0, [x0, #8]
    333c:	cmp	x0, #0x0
    3340:	cset	w0, ne  // ne = any
    3344:	and	w0, w0, #0xff
    3348:	b	3378 <_PyDict_SetItemId@plt+0xcf8>
    334c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3350:	ldr	x0, [x0, #4008]
    3354:	ldr	x3, [x0]
    3358:	ldr	x0, [sp, #40]
    335c:	ldr	x0, [x0]
    3360:	mov	x2, x0
    3364:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3368:	add	x1, x0, #0xe00
    336c:	mov	x0, x3
    3370:	bl	25f0 <PyErr_Format@plt>
    3374:	mov	w0, #0x0                   	// #0
    3378:	ldp	x29, x30, [sp], #48
    337c:	ret
    3380:	stp	x29, x30, [sp, #-48]!
    3384:	mov	x29, sp
    3388:	str	x0, [sp, #24]
    338c:	str	wzr, [sp, #44]
    3390:	b	33b8 <_PyDict_SetItemId@plt+0xd38>
    3394:	ldrsw	x0, [sp, #44]
    3398:	lsl	x0, x0, #4
    339c:	ldr	x1, [sp, #24]
    33a0:	add	x0, x1, x0
    33a4:	ldr	x0, [x0, #8]
    33a8:	bl	22a0 <PyMem_Free@plt>
    33ac:	ldr	w0, [sp, #44]
    33b0:	add	w0, w0, #0x1
    33b4:	str	w0, [sp, #44]
    33b8:	ldrsw	x0, [sp, #44]
    33bc:	lsl	x0, x0, #4
    33c0:	ldr	x1, [sp, #24]
    33c4:	add	x0, x1, x0
    33c8:	ldr	x0, [x0]
    33cc:	cmn	x0, #0x1
    33d0:	b.ne	3394 <_PyDict_SetItemId@plt+0xd14>  // b.any
    33d4:	nop
    33d8:	nop
    33dc:	ldp	x29, x30, [sp], #48
    33e0:	ret
    33e4:	stp	x29, x30, [sp, #-64]!
    33e8:	mov	x29, sp
    33ec:	str	x0, [sp, #24]
    33f0:	str	x1, [sp, #16]
    33f4:	ldr	x0, [sp, #16]
    33f8:	bl	2450 <PySequence_Size@plt>
    33fc:	str	x0, [sp, #40]
    3400:	ldr	x0, [sp, #40]
    3404:	cmn	x0, #0x1
    3408:	b.ne	3414 <_PyDict_SetItemId@plt+0xd94>  // b.any
    340c:	mov	w0, #0xffffffff            	// #-1
    3410:	b	3510 <_PyDict_SetItemId@plt+0xe90>
    3414:	ldr	x0, [sp, #40]
    3418:	cmp	x0, #0x4
    341c:	b.le	3448 <_PyDict_SetItemId@plt+0xdc8>
    3420:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3424:	ldr	x0, [x0, #4008]
    3428:	ldr	x3, [x0]
    342c:	mov	w2, #0x4                   	// #4
    3430:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3434:	add	x1, x0, #0xe18
    3438:	mov	x0, x3
    343c:	bl	25f0 <PyErr_Format@plt>
    3440:	mov	w0, #0xffffffff            	// #-1
    3444:	b	3510 <_PyDict_SetItemId@plt+0xe90>
    3448:	str	xzr, [sp, #56]
    344c:	b	34e4 <_PyDict_SetItemId@plt+0xe64>
    3450:	mov	w0, #0x1                   	// #1
    3454:	str	w0, [sp, #52]
    3458:	ldr	x1, [sp, #56]
    345c:	ldr	x0, [sp, #16]
    3460:	bl	2400 <PySequence_GetItem@plt>
    3464:	str	x0, [sp, #32]
    3468:	ldr	x0, [sp, #32]
    346c:	cmp	x0, #0x0
    3470:	b.eq	3498 <_PyDict_SetItemId@plt+0xe18>  // b.none
    3474:	ldr	x0, [sp, #56]
    3478:	lsl	x0, x0, #4
    347c:	ldr	x1, [sp, #24]
    3480:	add	x0, x1, x0
    3484:	mov	x1, x0
    3488:	ldr	x0, [sp, #32]
    348c:	bl	318c <_PyDict_SetItemId@plt+0xb0c>
    3490:	cmp	w0, #0x0
    3494:	b.ne	349c <_PyDict_SetItemId@plt+0xe1c>  // b.any
    3498:	str	wzr, [sp, #52]
    349c:	ldr	x0, [sp, #32]
    34a0:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    34a4:	ldr	w0, [sp, #52]
    34a8:	cmp	w0, #0x0
    34ac:	b.ne	34d8 <_PyDict_SetItemId@plt+0xe58>  // b.any
    34b0:	ldr	x0, [sp, #56]
    34b4:	lsl	x0, x0, #4
    34b8:	ldr	x1, [sp, #24]
    34bc:	add	x0, x1, x0
    34c0:	mov	x1, #0xffffffffffffffff    	// #-1
    34c4:	str	x1, [x0]
    34c8:	ldr	x0, [sp, #24]
    34cc:	bl	3380 <_PyDict_SetItemId@plt+0xd00>
    34d0:	mov	w0, #0xffffffff            	// #-1
    34d4:	b	3510 <_PyDict_SetItemId@plt+0xe90>
    34d8:	ldr	x0, [sp, #56]
    34dc:	add	x0, x0, #0x1
    34e0:	str	x0, [sp, #56]
    34e4:	ldr	x1, [sp, #56]
    34e8:	ldr	x0, [sp, #40]
    34ec:	cmp	x1, x0
    34f0:	b.lt	3450 <_PyDict_SetItemId@plt+0xdd0>  // b.tstop
    34f4:	ldr	x0, [sp, #40]
    34f8:	lsl	x0, x0, #4
    34fc:	ldr	x1, [sp, #24]
    3500:	add	x0, x1, x0
    3504:	mov	x1, #0xffffffffffffffff    	// #-1
    3508:	str	x1, [x0]
    350c:	mov	w0, #0x0                   	// #0
    3510:	ldp	x29, x30, [sp], #64
    3514:	ret
    3518:	stp	x29, x30, [sp, #-64]!
    351c:	mov	x29, sp
    3520:	str	x0, [sp, #40]
    3524:	str	x1, [sp, #32]
    3528:	str	x2, [sp, #24]
    352c:	ldr	x0, [sp, #24]
    3530:	bl	22b0 <PyLong_FromUnsignedLongLong@plt>
    3534:	str	x0, [sp, #56]
    3538:	ldr	x0, [sp, #56]
    353c:	cmp	x0, #0x0
    3540:	b.ne	354c <_PyDict_SetItemId@plt+0xecc>  // b.any
    3544:	mov	w0, #0xffffffff            	// #-1
    3548:	b	3578 <_PyDict_SetItemId@plt+0xef8>
    354c:	ldr	x2, [sp, #56]
    3550:	ldr	x1, [sp, #32]
    3554:	ldr	x0, [sp, #40]
    3558:	bl	2680 <_PyDict_SetItemId@plt>
    355c:	str	w0, [sp, #52]
    3560:	ldr	x2, [sp, #56]
    3564:	mov	w1, #0x18a                 	// #394
    3568:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    356c:	add	x0, x0, #0xc98
    3570:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    3574:	ldr	w0, [sp, #52]
    3578:	ldp	x29, x30, [sp], #64
    357c:	ret
    3580:	stp	x29, x30, [sp, #-80]!
    3584:	mov	x29, sp
    3588:	str	x0, [sp, #24]
    358c:	bl	2580 <PyDict_New@plt>
    3590:	str	x0, [sp, #72]
    3594:	ldr	x0, [sp, #72]
    3598:	cmp	x0, #0x0
    359c:	b.ne	35a8 <_PyDict_SetItemId@plt+0xf28>  // b.any
    35a0:	mov	x0, #0x0                   	// #0
    35a4:	b	3800 <_PyDict_SetItemId@plt+0x1180>
    35a8:	ldr	x0, [sp, #24]
    35ac:	ldr	x0, [x0]
    35b0:	mov	x2, x0
    35b4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    35b8:	add	x1, x0, #0x510
    35bc:	ldr	x0, [sp, #72]
    35c0:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    35c4:	cmn	w0, #0x1
    35c8:	b.eq	37cc <_PyDict_SetItemId@plt+0x114c>  // b.none
    35cc:	ldr	x0, [sp, #24]
    35d0:	ldr	x0, [x0]
    35d4:	mov	x1, #0x1                   	// #1
    35d8:	movk	x1, #0x4000, lsl #48
    35dc:	cmp	x0, x1
    35e0:	b.eq	3624 <_PyDict_SetItemId@plt+0xfa4>  // b.none
    35e4:	mov	x1, #0x1                   	// #1
    35e8:	movk	x1, #0x4000, lsl #48
    35ec:	cmp	x0, x1
    35f0:	b.hi	377c <_PyDict_SetItemId@plt+0x10fc>  // b.pmore
    35f4:	cmp	x0, #0x21
    35f8:	b.eq	36d4 <_PyDict_SetItemId@plt+0x1054>  // b.none
    35fc:	cmp	x0, #0x21
    3600:	b.hi	377c <_PyDict_SetItemId@plt+0x10fc>  // b.pmore
    3604:	cmp	x0, #0x3
    3608:	b.eq	370c <_PyDict_SetItemId@plt+0x108c>  // b.none
    360c:	cmp	x0, #0x3
    3610:	b.cc	377c <_PyDict_SetItemId@plt+0x10fc>  // b.lo, b.ul, b.last
    3614:	sub	x0, x0, #0x4
    3618:	cmp	x0, #0x5
    361c:	b.hi	377c <_PyDict_SetItemId@plt+0x10fc>  // b.pmore
    3620:	b	3744 <_PyDict_SetItemId@plt+0x10c4>
    3624:	ldr	x0, [sp, #24]
    3628:	ldr	x0, [x0, #8]
    362c:	str	x0, [sp, #64]
    3630:	ldr	x0, [sp, #64]
    3634:	ldr	w0, [x0, #20]
    3638:	mov	w0, w0
    363c:	mov	x2, x0
    3640:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3644:	add	x1, x0, #0x528
    3648:	ldr	x0, [sp, #72]
    364c:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    3650:	cmn	w0, #0x1
    3654:	b.eq	37d4 <_PyDict_SetItemId@plt+0x1154>  // b.none
    3658:	ldr	x0, [sp, #64]
    365c:	ldr	w0, [x0, #24]
    3660:	mov	w0, w0
    3664:	mov	x2, x0
    3668:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    366c:	add	x1, x0, #0x540
    3670:	ldr	x0, [sp, #72]
    3674:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    3678:	cmn	w0, #0x1
    367c:	b.eq	37dc <_PyDict_SetItemId@plt+0x115c>  // b.none
    3680:	ldr	x0, [sp, #64]
    3684:	ldr	w0, [x0, #28]
    3688:	mov	w0, w0
    368c:	mov	x2, x0
    3690:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3694:	add	x1, x0, #0x558
    3698:	ldr	x0, [sp, #72]
    369c:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    36a0:	cmn	w0, #0x1
    36a4:	b.eq	37e4 <_PyDict_SetItemId@plt+0x1164>  // b.none
    36a8:	ldr	x0, [sp, #64]
    36ac:	ldr	w0, [x0]
    36b0:	mov	w0, w0
    36b4:	mov	x2, x0
    36b8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    36bc:	add	x1, x0, #0x570
    36c0:	ldr	x0, [sp, #72]
    36c4:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    36c8:	cmn	w0, #0x1
    36cc:	b.ne	37a8 <_PyDict_SetItemId@plt+0x1128>  // b.any
    36d0:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    36d4:	ldr	x0, [sp, #24]
    36d8:	ldr	x0, [x0, #8]
    36dc:	str	x0, [sp, #56]
    36e0:	ldr	x0, [sp, #56]
    36e4:	ldr	w0, [x0]
    36e8:	mov	w0, w0
    36ec:	mov	x2, x0
    36f0:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    36f4:	add	x1, x0, #0x588
    36f8:	ldr	x0, [sp, #72]
    36fc:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    3700:	cmn	w0, #0x1
    3704:	b.ne	37b0 <_PyDict_SetItemId@plt+0x1130>  // b.any
    3708:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    370c:	ldr	x0, [sp, #24]
    3710:	ldr	x0, [x0, #8]
    3714:	str	x0, [sp, #40]
    3718:	ldr	x0, [sp, #40]
    371c:	ldr	w0, [x0, #4]
    3720:	mov	w0, w0
    3724:	mov	x2, x0
    3728:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    372c:	add	x1, x0, #0x5a0
    3730:	ldr	x0, [sp, #72]
    3734:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    3738:	cmn	w0, #0x1
    373c:	b.ne	37b8 <_PyDict_SetItemId@plt+0x1138>  // b.any
    3740:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    3744:	ldr	x0, [sp, #24]
    3748:	ldr	x0, [x0, #8]
    374c:	str	x0, [sp, #48]
    3750:	ldr	x0, [sp, #48]
    3754:	ldr	w0, [x0]
    3758:	mov	w0, w0
    375c:	mov	x2, x0
    3760:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3764:	add	x1, x0, #0x5b8
    3768:	ldr	x0, [sp, #72]
    376c:	bl	3518 <_PyDict_SetItemId@plt+0xe98>
    3770:	cmn	w0, #0x1
    3774:	b.ne	37c0 <_PyDict_SetItemId@plt+0x1140>  // b.any
    3778:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    377c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3780:	ldr	x0, [x0, #4008]
    3784:	ldr	x3, [x0]
    3788:	ldr	x0, [sp, #24]
    378c:	ldr	x0, [x0]
    3790:	mov	x2, x0
    3794:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3798:	add	x1, x0, #0xe00
    379c:	mov	x0, x3
    37a0:	bl	25f0 <PyErr_Format@plt>
    37a4:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    37a8:	nop
    37ac:	b	37c4 <_PyDict_SetItemId@plt+0x1144>
    37b0:	nop
    37b4:	b	37c4 <_PyDict_SetItemId@plt+0x1144>
    37b8:	nop
    37bc:	b	37c4 <_PyDict_SetItemId@plt+0x1144>
    37c0:	nop
    37c4:	ldr	x0, [sp, #72]
    37c8:	b	3800 <_PyDict_SetItemId@plt+0x1180>
    37cc:	nop
    37d0:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    37d4:	nop
    37d8:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    37dc:	nop
    37e0:	b	37e8 <_PyDict_SetItemId@plt+0x1168>
    37e4:	nop
    37e8:	ldr	x2, [sp, #72]
    37ec:	mov	w1, #0x1ca                 	// #458
    37f0:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    37f4:	add	x0, x0, #0xc98
    37f8:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    37fc:	mov	x0, #0x0                   	// #0
    3800:	ldp	x29, x30, [sp], #80
    3804:	ret
    3808:	stp	x29, x30, [sp, #-128]!
    380c:	mov	x29, sp
    3810:	str	x0, [sp, #24]
    3814:	str	x1, [sp, #16]
    3818:	str	xzr, [sp, #120]
    381c:	stp	xzr, xzr, [sp, #40]
    3820:	stp	xzr, xzr, [sp, #56]
    3824:	stp	xzr, xzr, [sp, #72]
    3828:	stp	xzr, xzr, [sp, #88]
    382c:	stp	xzr, xzr, [sp, #104]
    3830:	add	x0, sp, #0x28
    3834:	mov	w2, #0x0                   	// #0
    3838:	mov	x1, x0
    383c:	ldr	x0, [sp, #16]
    3840:	bl	25a0 <PyObject_GetBuffer@plt>
    3844:	cmp	w0, #0x0
    3848:	b.ne	389c <_PyDict_SetItemId@plt+0x121c>  // b.any
    384c:	add	x0, sp, #0x28
    3850:	mov	w1, #0x43                  	// #67
    3854:	bl	2300 <PyBuffer_IsContiguous@plt>
    3858:	cmp	w0, #0x0
    385c:	b.ne	3884 <_PyDict_SetItemId@plt+0x1204>  // b.any
    3860:	ldr	x3, [sp, #16]
    3864:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3868:	add	x2, x0, #0xf50
    386c:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3870:	add	x1, x0, #0xf68
    3874:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3878:	add	x0, x0, #0xf78
    387c:	bl	2440 <_PyArg_BadArgument@plt>
    3880:	b	38a0 <_PyDict_SetItemId@plt+0x1220>
    3884:	add	x0, sp, #0x28
    3888:	mov	x1, x0
    388c:	ldr	x0, [sp, #24]
    3890:	bl	41d0 <_PyDict_SetItemId@plt+0x1b50>
    3894:	str	x0, [sp, #120]
    3898:	b	38a0 <_PyDict_SetItemId@plt+0x1220>
    389c:	nop
    38a0:	ldr	x0, [sp, #48]
    38a4:	cmp	x0, #0x0
    38a8:	b.eq	38b4 <_PyDict_SetItemId@plt+0x1234>  // b.none
    38ac:	add	x0, sp, #0x28
    38b0:	bl	22c0 <PyBuffer_Release@plt>
    38b4:	ldr	x0, [sp, #120]
    38b8:	ldp	x29, x30, [sp], #128
    38bc:	ret
    38c0:	stp	x29, x30, [sp, #-32]!
    38c4:	mov	x29, sp
    38c8:	str	x0, [sp, #24]
    38cc:	str	x1, [sp, #16]
    38d0:	ldr	x0, [sp, #24]
    38d4:	bl	4288 <_PyDict_SetItemId@plt+0x1c08>
    38d8:	ldp	x29, x30, [sp], #32
    38dc:	ret
    38e0:	sub	sp, sp, #0xd0
    38e4:	stp	x29, x30, [sp, #16]
    38e8:	add	x29, sp, #0x10
    38ec:	str	x0, [sp, #56]
    38f0:	str	x1, [sp, #48]
    38f4:	str	x2, [sp, #40]
    38f8:	str	x3, [sp, #32]
    38fc:	str	xzr, [sp, #200]
    3900:	ldr	x0, [sp, #32]
    3904:	cmp	x0, #0x0
    3908:	b.eq	3918 <_PyDict_SetItemId@plt+0x1298>  // b.none
    390c:	ldr	x0, [sp, #32]
    3910:	ldr	x0, [x0, #16]
    3914:	b	391c <_PyDict_SetItemId@plt+0x129c>
    3918:	mov	x0, #0x0                   	// #0
    391c:	ldr	x1, [sp, #40]
    3920:	add	x0, x0, x1
    3924:	sub	x0, x0, #0x1
    3928:	str	x0, [sp, #176]
    392c:	stp	xzr, xzr, [sp, #72]
    3930:	stp	xzr, xzr, [sp, #88]
    3934:	stp	xzr, xzr, [sp, #104]
    3938:	stp	xzr, xzr, [sp, #120]
    393c:	stp	xzr, xzr, [sp, #136]
    3940:	mov	x0, #0xffffffffffffffff    	// #-1
    3944:	str	x0, [sp, #192]
    3948:	ldr	x0, [sp, #32]
    394c:	cmp	x0, #0x0
    3950:	b.ne	3978 <_PyDict_SetItemId@plt+0x12f8>  // b.any
    3954:	ldr	x0, [sp, #40]
    3958:	cmp	x0, #0x0
    395c:	b.le	3978 <_PyDict_SetItemId@plt+0x12f8>
    3960:	ldr	x0, [sp, #40]
    3964:	cmp	x0, #0x2
    3968:	b.gt	3978 <_PyDict_SetItemId@plt+0x12f8>
    396c:	ldr	x0, [sp, #48]
    3970:	cmp	x0, #0x0
    3974:	b.ne	39ac <_PyDict_SetItemId@plt+0x132c>  // b.any
    3978:	add	x0, sp, #0x98
    397c:	str	x0, [sp]
    3980:	mov	w7, #0x0                   	// #0
    3984:	mov	w6, #0x2                   	// #2
    3988:	mov	w5, #0x1                   	// #1
    398c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3990:	add	x4, x0, #0x5d0
    3994:	ldr	x3, [sp, #32]
    3998:	mov	x2, #0x0                   	// #0
    399c:	ldr	x1, [sp, #40]
    39a0:	ldr	x0, [sp, #48]
    39a4:	bl	2370 <_PyArg_UnpackKeywords@plt>
    39a8:	b	39b0 <_PyDict_SetItemId@plt+0x1330>
    39ac:	ldr	x0, [sp, #48]
    39b0:	str	x0, [sp, #48]
    39b4:	ldr	x0, [sp, #48]
    39b8:	cmp	x0, #0x0
    39bc:	b.eq	3b1c <_PyDict_SetItemId@plt+0x149c>  // b.none
    39c0:	ldr	x0, [sp, #48]
    39c4:	ldr	x0, [x0]
    39c8:	add	x1, sp, #0x48
    39cc:	mov	w2, #0x0                   	// #0
    39d0:	bl	25a0 <PyObject_GetBuffer@plt>
    39d4:	cmp	w0, #0x0
    39d8:	b.ne	3b24 <_PyDict_SetItemId@plt+0x14a4>  // b.any
    39dc:	add	x0, sp, #0x48
    39e0:	mov	w1, #0x43                  	// #67
    39e4:	bl	2300 <PyBuffer_IsContiguous@plt>
    39e8:	cmp	w0, #0x0
    39ec:	b.ne	3a1c <_PyDict_SetItemId@plt+0x139c>  // b.any
    39f0:	ldr	x0, [sp, #48]
    39f4:	ldr	x0, [x0]
    39f8:	mov	x3, x0
    39fc:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3a00:	add	x2, x0, #0xf50
    3a04:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3a08:	add	x1, x0, #0x340
    3a0c:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3a10:	add	x0, x0, #0x350
    3a14:	bl	2440 <_PyArg_BadArgument@plt>
    3a18:	b	3b30 <_PyDict_SetItemId@plt+0x14b0>
    3a1c:	ldr	x0, [sp, #176]
    3a20:	cmp	x0, #0x0
    3a24:	b.eq	3afc <_PyDict_SetItemId@plt+0x147c>  // b.none
    3a28:	ldr	x0, [sp, #48]
    3a2c:	add	x0, x0, #0x8
    3a30:	ldr	x0, [x0]
    3a34:	ldr	x1, [x0, #8]
    3a38:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3a3c:	ldr	x0, [x0, #3984]
    3a40:	cmp	x1, x0
    3a44:	b.eq	3a70 <_PyDict_SetItemId@plt+0x13f0>  // b.none
    3a48:	ldr	x0, [sp, #48]
    3a4c:	add	x0, x0, #0x8
    3a50:	ldr	x0, [x0]
    3a54:	ldr	x2, [x0, #8]
    3a58:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3a5c:	ldr	x1, [x0, #3984]
    3a60:	mov	x0, x2
    3a64:	bl	25e0 <PyType_IsSubtype@plt>
    3a68:	cmp	w0, #0x0
    3a6c:	b.eq	3a90 <_PyDict_SetItemId@plt+0x1410>  // b.none
    3a70:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3a74:	ldr	x0, [x0, #4016]
    3a78:	ldr	x2, [x0]
    3a7c:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3a80:	add	x1, x0, #0x360
    3a84:	mov	x0, x2
    3a88:	bl	2380 <PyErr_SetString@plt>
    3a8c:	b	3b30 <_PyDict_SetItemId@plt+0x14b0>
    3a90:	mov	x0, #0xffffffffffffffff    	// #-1
    3a94:	str	x0, [sp, #184]
    3a98:	ldr	x0, [sp, #48]
    3a9c:	add	x0, x0, #0x8
    3aa0:	ldr	x0, [x0]
    3aa4:	bl	2630 <PyNumber_Index@plt>
    3aa8:	str	x0, [sp, #168]
    3aac:	ldr	x0, [sp, #168]
    3ab0:	cmp	x0, #0x0
    3ab4:	b.eq	3ad8 <_PyDict_SetItemId@plt+0x1458>  // b.none
    3ab8:	ldr	x0, [sp, #168]
    3abc:	bl	2430 <PyLong_AsSsize_t@plt>
    3ac0:	str	x0, [sp, #184]
    3ac4:	ldr	x2, [sp, #168]
    3ac8:	mov	w1, #0x81                  	// #129
    3acc:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3ad0:	add	x0, x0, #0x388
    3ad4:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    3ad8:	ldr	x0, [sp, #184]
    3adc:	cmn	x0, #0x1
    3ae0:	b.ne	3af0 <_PyDict_SetItemId@plt+0x1470>  // b.any
    3ae4:	bl	24c0 <PyErr_Occurred@plt>
    3ae8:	cmp	x0, #0x0
    3aec:	b.ne	3b2c <_PyDict_SetItemId@plt+0x14ac>  // b.any
    3af0:	ldr	x0, [sp, #184]
    3af4:	str	x0, [sp, #192]
    3af8:	b	3b00 <_PyDict_SetItemId@plt+0x1480>
    3afc:	nop
    3b00:	add	x0, sp, #0x48
    3b04:	ldr	x2, [sp, #192]
    3b08:	mov	x1, x0
    3b0c:	ldr	x0, [sp, #56]
    3b10:	bl	4ee0 <_PyDict_SetItemId@plt+0x2860>
    3b14:	str	x0, [sp, #200]
    3b18:	b	3b30 <_PyDict_SetItemId@plt+0x14b0>
    3b1c:	nop
    3b20:	b	3b30 <_PyDict_SetItemId@plt+0x14b0>
    3b24:	nop
    3b28:	b	3b30 <_PyDict_SetItemId@plt+0x14b0>
    3b2c:	nop
    3b30:	ldr	x0, [sp, #80]
    3b34:	cmp	x0, #0x0
    3b38:	b.eq	3b44 <_PyDict_SetItemId@plt+0x14c4>  // b.none
    3b3c:	add	x0, sp, #0x48
    3b40:	bl	22c0 <PyBuffer_Release@plt>
    3b44:	ldr	x0, [sp, #200]
    3b48:	ldp	x29, x30, [sp, #16]
    3b4c:	add	sp, sp, #0xd0
    3b50:	ret
    3b54:	sub	sp, sp, #0x90
    3b58:	stp	x29, x30, [sp, #16]
    3b5c:	add	x29, sp, #0x10
    3b60:	str	x0, [sp, #56]
    3b64:	str	x1, [sp, #48]
    3b68:	str	x2, [sp, #40]
    3b6c:	mov	w0, #0xffffffff            	// #-1
    3b70:	str	w0, [sp, #140]
    3b74:	ldr	x0, [sp, #48]
    3b78:	ldr	x0, [x0, #16]
    3b7c:	str	x0, [sp, #96]
    3b80:	ldr	x0, [sp, #40]
    3b84:	cmp	x0, #0x0
    3b88:	b.eq	3b98 <_PyDict_SetItemId@plt+0x1518>  // b.none
    3b8c:	ldr	x0, [sp, #40]
    3b90:	ldr	x0, [x0, #16]
    3b94:	b	3b9c <_PyDict_SetItemId@plt+0x151c>
    3b98:	mov	x0, #0x0                   	// #0
    3b9c:	ldr	x1, [sp, #96]
    3ba0:	add	x0, x0, x1
    3ba4:	str	x0, [sp, #128]
    3ba8:	str	wzr, [sp, #124]
    3bac:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3bb0:	ldr	x0, [x0, #4056]
    3bb4:	str	x0, [sp, #112]
    3bb8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3bbc:	ldr	x0, [x0, #4056]
    3bc0:	str	x0, [sp, #104]
    3bc4:	ldr	x0, [sp, #40]
    3bc8:	cmp	x0, #0x0
    3bcc:	b.ne	3c04 <_PyDict_SetItemId@plt+0x1584>  // b.any
    3bd0:	ldr	x0, [sp, #96]
    3bd4:	cmp	x0, #0x0
    3bd8:	b.lt	3c04 <_PyDict_SetItemId@plt+0x1584>  // b.tstop
    3bdc:	ldr	x0, [sp, #96]
    3be0:	cmp	x0, #0x3
    3be4:	b.gt	3c04 <_PyDict_SetItemId@plt+0x1584>
    3be8:	ldr	x0, [sp, #48]
    3bec:	add	x0, x0, #0x18
    3bf0:	cmp	x0, #0x0
    3bf4:	b.eq	3c04 <_PyDict_SetItemId@plt+0x1584>  // b.none
    3bf8:	ldr	x0, [sp, #48]
    3bfc:	add	x0, x0, #0x18
    3c00:	b	3c3c <_PyDict_SetItemId@plt+0x15bc>
    3c04:	ldr	x0, [sp, #48]
    3c08:	add	x8, x0, #0x18
    3c0c:	add	x0, sp, #0x40
    3c10:	str	x0, [sp]
    3c14:	mov	w7, #0x0                   	// #0
    3c18:	mov	w6, #0x3                   	// #3
    3c1c:	mov	w5, #0x0                   	// #0
    3c20:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    3c24:	add	x4, x0, #0x610
    3c28:	mov	x3, #0x0                   	// #0
    3c2c:	ldr	x2, [sp, #40]
    3c30:	ldr	x1, [sp, #96]
    3c34:	mov	x0, x8
    3c38:	bl	2370 <_PyArg_UnpackKeywords@plt>
    3c3c:	str	x0, [sp, #88]
    3c40:	ldr	x0, [sp, #88]
    3c44:	cmp	x0, #0x0
    3c48:	b.eq	3d80 <_PyDict_SetItemId@plt+0x1700>  // b.none
    3c4c:	ldr	x0, [sp, #128]
    3c50:	cmp	x0, #0x0
    3c54:	b.eq	3d50 <_PyDict_SetItemId@plt+0x16d0>  // b.none
    3c58:	ldr	x0, [sp, #88]
    3c5c:	ldr	x0, [x0]
    3c60:	cmp	x0, #0x0
    3c64:	b.eq	3d08 <_PyDict_SetItemId@plt+0x1688>  // b.none
    3c68:	ldr	x0, [sp, #88]
    3c6c:	ldr	x0, [x0]
    3c70:	ldr	x1, [x0, #8]
    3c74:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3c78:	ldr	x0, [x0, #3984]
    3c7c:	cmp	x1, x0
    3c80:	b.eq	3ca8 <_PyDict_SetItemId@plt+0x1628>  // b.none
    3c84:	ldr	x0, [sp, #88]
    3c88:	ldr	x0, [x0]
    3c8c:	ldr	x2, [x0, #8]
    3c90:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3c94:	ldr	x1, [x0, #3984]
    3c98:	mov	x0, x2
    3c9c:	bl	25e0 <PyType_IsSubtype@plt>
    3ca0:	cmp	w0, #0x0
    3ca4:	b.eq	3cc8 <_PyDict_SetItemId@plt+0x1648>  // b.none
    3ca8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3cac:	ldr	x0, [x0, #4016]
    3cb0:	ldr	x2, [x0]
    3cb4:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3cb8:	add	x1, x0, #0x360
    3cbc:	mov	x0, x2
    3cc0:	bl	2380 <PyErr_SetString@plt>
    3cc4:	b	3d8c <_PyDict_SetItemId@plt+0x170c>
    3cc8:	ldr	x0, [sp, #88]
    3ccc:	ldr	x0, [x0]
    3cd0:	bl	2640 <_PyLong_AsInt@plt>
    3cd4:	str	w0, [sp, #124]
    3cd8:	ldr	w0, [sp, #124]
    3cdc:	cmn	w0, #0x1
    3ce0:	b.ne	3cf0 <_PyDict_SetItemId@plt+0x1670>  // b.any
    3ce4:	bl	24c0 <PyErr_Occurred@plt>
    3ce8:	cmp	x0, #0x0
    3cec:	b.ne	3d88 <_PyDict_SetItemId@plt+0x1708>  // b.any
    3cf0:	ldr	x0, [sp, #128]
    3cf4:	sub	x0, x0, #0x1
    3cf8:	str	x0, [sp, #128]
    3cfc:	ldr	x0, [sp, #128]
    3d00:	cmp	x0, #0x0
    3d04:	b.eq	3d58 <_PyDict_SetItemId@plt+0x16d8>  // b.none
    3d08:	ldr	x0, [sp, #88]
    3d0c:	add	x0, x0, #0x8
    3d10:	ldr	x0, [x0]
    3d14:	cmp	x0, #0x0
    3d18:	b.eq	3d40 <_PyDict_SetItemId@plt+0x16c0>  // b.none
    3d1c:	ldr	x0, [sp, #88]
    3d20:	ldr	x0, [x0, #8]
    3d24:	str	x0, [sp, #112]
    3d28:	ldr	x0, [sp, #128]
    3d2c:	sub	x0, x0, #0x1
    3d30:	str	x0, [sp, #128]
    3d34:	ldr	x0, [sp, #128]
    3d38:	cmp	x0, #0x0
    3d3c:	b.eq	3d60 <_PyDict_SetItemId@plt+0x16e0>  // b.none
    3d40:	ldr	x0, [sp, #88]
    3d44:	ldr	x0, [x0, #16]
    3d48:	str	x0, [sp, #104]
    3d4c:	b	3d64 <_PyDict_SetItemId@plt+0x16e4>
    3d50:	nop
    3d54:	b	3d64 <_PyDict_SetItemId@plt+0x16e4>
    3d58:	nop
    3d5c:	b	3d64 <_PyDict_SetItemId@plt+0x16e4>
    3d60:	nop
    3d64:	ldr	x3, [sp, #104]
    3d68:	ldr	x2, [sp, #112]
    3d6c:	ldr	w1, [sp, #124]
    3d70:	ldr	x0, [sp, #56]
    3d74:	bl	5008 <_PyDict_SetItemId@plt+0x2988>
    3d78:	str	w0, [sp, #140]
    3d7c:	b	3d8c <_PyDict_SetItemId@plt+0x170c>
    3d80:	nop
    3d84:	b	3d8c <_PyDict_SetItemId@plt+0x170c>
    3d88:	nop
    3d8c:	ldr	w0, [sp, #140]
    3d90:	ldp	x29, x30, [sp, #16]
    3d94:	add	sp, sp, #0x90
    3d98:	ret
    3d9c:	stp	x29, x30, [sp, #-48]!
    3da0:	mov	x29, sp
    3da4:	str	x0, [sp, #24]
    3da8:	str	x1, [sp, #16]
    3dac:	str	xzr, [sp, #40]
    3db0:	ldr	x0, [sp, #16]
    3db4:	ldr	x1, [x0, #8]
    3db8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3dbc:	ldr	x0, [x0, #3984]
    3dc0:	cmp	x1, x0
    3dc4:	b.eq	3de8 <_PyDict_SetItemId@plt+0x1768>  // b.none
    3dc8:	ldr	x0, [sp, #16]
    3dcc:	ldr	x2, [x0, #8]
    3dd0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3dd4:	ldr	x1, [x0, #3984]
    3dd8:	mov	x0, x2
    3ddc:	bl	25e0 <PyType_IsSubtype@plt>
    3de0:	cmp	w0, #0x0
    3de4:	b.eq	3e08 <_PyDict_SetItemId@plt+0x1788>  // b.none
    3de8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    3dec:	ldr	x0, [x0, #4016]
    3df0:	ldr	x2, [x0]
    3df4:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3df8:	add	x1, x0, #0x360
    3dfc:	mov	x0, x2
    3e00:	bl	2380 <PyErr_SetString@plt>
    3e04:	b	3e44 <_PyDict_SetItemId@plt+0x17c4>
    3e08:	ldr	x0, [sp, #16]
    3e0c:	bl	2640 <_PyLong_AsInt@plt>
    3e10:	str	w0, [sp, #36]
    3e14:	ldr	w0, [sp, #36]
    3e18:	cmn	w0, #0x1
    3e1c:	b.ne	3e2c <_PyDict_SetItemId@plt+0x17ac>  // b.any
    3e20:	bl	24c0 <PyErr_Occurred@plt>
    3e24:	cmp	x0, #0x0
    3e28:	b.ne	3e40 <_PyDict_SetItemId@plt+0x17c0>  // b.any
    3e2c:	ldr	w1, [sp, #36]
    3e30:	ldr	x0, [sp, #24]
    3e34:	bl	5468 <_PyDict_SetItemId@plt+0x2de8>
    3e38:	str	x0, [sp, #40]
    3e3c:	b	3e44 <_PyDict_SetItemId@plt+0x17c4>
    3e40:	nop
    3e44:	ldr	x0, [sp, #40]
    3e48:	ldp	x29, x30, [sp], #48
    3e4c:	ret
    3e50:	stp	x29, x30, [sp, #-64]!
    3e54:	mov	x29, sp
    3e58:	str	x0, [sp, #24]
    3e5c:	str	x1, [sp, #16]
    3e60:	str	xzr, [sp, #56]
    3e64:	mov	x0, #0xffffffffffffffff    	// #-1
    3e68:	str	x0, [sp, #40]
    3e6c:	str	xzr, [sp, #48]
    3e70:	add	x0, sp, #0x28
    3e74:	mov	x1, x0
    3e78:	ldr	x0, [sp, #16]
    3e7c:	bl	318c <_PyDict_SetItemId@plt+0xb0c>
    3e80:	cmp	w0, #0x0
    3e84:	b.eq	3e9c <_PyDict_SetItemId@plt+0x181c>  // b.none
    3e88:	ldp	x1, x2, [sp, #40]
    3e8c:	ldr	x0, [sp, #24]
    3e90:	bl	5494 <_PyDict_SetItemId@plt+0x2e14>
    3e94:	str	x0, [sp, #56]
    3e98:	b	3ea0 <_PyDict_SetItemId@plt+0x1820>
    3e9c:	nop
    3ea0:	ldr	x0, [sp, #40]
    3ea4:	cmn	x0, #0x1
    3ea8:	b.eq	3eb4 <_PyDict_SetItemId@plt+0x1834>  // b.none
    3eac:	ldr	x0, [sp, #48]
    3eb0:	bl	22a0 <PyMem_Free@plt>
    3eb4:	ldr	x0, [sp, #56]
    3eb8:	ldp	x29, x30, [sp], #64
    3ebc:	ret
    3ec0:	stp	x29, x30, [sp, #-144]!
    3ec4:	mov	x29, sp
    3ec8:	str	x0, [sp, #40]
    3ecc:	str	x1, [sp, #32]
    3ed0:	str	x2, [sp, #24]
    3ed4:	str	xzr, [sp, #136]
    3ed8:	stp	xzr, xzr, [sp, #48]
    3edc:	stp	xzr, xzr, [sp, #64]
    3ee0:	stp	xzr, xzr, [sp, #80]
    3ee4:	stp	xzr, xzr, [sp, #96]
    3ee8:	stp	xzr, xzr, [sp, #112]
    3eec:	ldr	x0, [sp, #24]
    3ef0:	cmp	x0, #0x1
    3ef4:	b.le	3f04 <_PyDict_SetItemId@plt+0x1884>
    3ef8:	ldr	x0, [sp, #24]
    3efc:	cmp	x0, #0x2
    3f00:	b.le	3f24 <_PyDict_SetItemId@plt+0x18a4>
    3f04:	mov	x3, #0x2                   	// #2
    3f08:	mov	x2, #0x2                   	// #2
    3f0c:	ldr	x1, [sp, #24]
    3f10:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3f14:	add	x0, x0, #0x9a0
    3f18:	bl	24a0 <_PyArg_CheckPositional@plt>
    3f1c:	cmp	w0, #0x0
    3f20:	b.eq	3fc0 <_PyDict_SetItemId@plt+0x1940>  // b.none
    3f24:	ldr	x0, [sp, #32]
    3f28:	ldr	x0, [x0]
    3f2c:	add	x1, sp, #0x80
    3f30:	bl	2c60 <_PyDict_SetItemId@plt+0x5e0>
    3f34:	cmp	w0, #0x0
    3f38:	b.eq	3fc8 <_PyDict_SetItemId@plt+0x1948>  // b.none
    3f3c:	ldr	x0, [sp, #32]
    3f40:	add	x0, x0, #0x8
    3f44:	ldr	x0, [x0]
    3f48:	add	x1, sp, #0x30
    3f4c:	mov	w2, #0x0                   	// #0
    3f50:	bl	25a0 <PyObject_GetBuffer@plt>
    3f54:	cmp	w0, #0x0
    3f58:	b.ne	3fd0 <_PyDict_SetItemId@plt+0x1950>  // b.any
    3f5c:	add	x0, sp, #0x30
    3f60:	mov	w1, #0x43                  	// #67
    3f64:	bl	2300 <PyBuffer_IsContiguous@plt>
    3f68:	cmp	w0, #0x0
    3f6c:	b.ne	3fa0 <_PyDict_SetItemId@plt+0x1920>  // b.any
    3f70:	ldr	x0, [sp, #32]
    3f74:	add	x0, x0, #0x8
    3f78:	ldr	x0, [x0]
    3f7c:	mov	x3, x0
    3f80:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    3f84:	add	x2, x0, #0xf50
    3f88:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3f8c:	add	x1, x0, #0x9c0
    3f90:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    3f94:	add	x0, x0, #0x9a0
    3f98:	bl	2440 <_PyArg_BadArgument@plt>
    3f9c:	b	3fd4 <_PyDict_SetItemId@plt+0x1954>
    3fa0:	ldr	x0, [sp, #128]
    3fa4:	add	x1, sp, #0x30
    3fa8:	mov	x2, x1
    3fac:	mov	x1, x0
    3fb0:	ldr	x0, [sp, #40]
    3fb4:	bl	5540 <_PyDict_SetItemId@plt+0x2ec0>
    3fb8:	str	x0, [sp, #136]
    3fbc:	b	3fd4 <_PyDict_SetItemId@plt+0x1954>
    3fc0:	nop
    3fc4:	b	3fd4 <_PyDict_SetItemId@plt+0x1954>
    3fc8:	nop
    3fcc:	b	3fd4 <_PyDict_SetItemId@plt+0x1954>
    3fd0:	nop
    3fd4:	ldr	x0, [sp, #56]
    3fd8:	cmp	x0, #0x0
    3fdc:	b.eq	3fe8 <_PyDict_SetItemId@plt+0x1968>  // b.none
    3fe0:	add	x0, sp, #0x30
    3fe4:	bl	22c0 <PyBuffer_Release@plt>
    3fe8:	ldr	x0, [sp, #136]
    3fec:	ldp	x29, x30, [sp], #144
    3ff0:	ret
    3ff4:	stp	x29, x30, [sp, #-80]!
    3ff8:	mov	x29, sp
    3ffc:	str	x0, [sp, #40]
    4000:	str	x1, [sp, #32]
    4004:	str	x2, [sp, #24]
    4008:	str	w3, [sp, #20]
    400c:	str	xzr, [sp, #64]
    4010:	mov	x1, #0x2000                	// #8192
    4014:	mov	x0, #0x0                   	// #0
    4018:	bl	2310 <PyBytes_FromStringAndSize@plt>
    401c:	str	x0, [sp, #48]
    4020:	ldr	x0, [sp, #48]
    4024:	cmp	x0, #0x0
    4028:	b.ne	4034 <_PyDict_SetItemId@plt+0x19b4>  // b.any
    402c:	mov	x0, #0x0                   	// #0
    4030:	b	41c8 <_PyDict_SetItemId@plt+0x1b48>
    4034:	ldr	x0, [sp, #40]
    4038:	ldr	x1, [sp, #32]
    403c:	str	x1, [x0, #40]
    4040:	ldr	x0, [sp, #40]
    4044:	ldr	x1, [sp, #24]
    4048:	str	x1, [x0, #48]
    404c:	ldr	x0, [sp, #48]
    4050:	add	x1, x0, #0x20
    4054:	ldr	x0, [sp, #40]
    4058:	str	x1, [x0, #64]
    405c:	ldr	x0, [sp, #48]
    4060:	ldr	x0, [x0, #16]
    4064:	mov	x1, x0
    4068:	ldr	x0, [sp, #40]
    406c:	str	x1, [x0, #72]
    4070:	bl	25c0 <PyEval_SaveThread@plt>
    4074:	str	x0, [sp, #56]
    4078:	ldr	x0, [sp, #40]
    407c:	add	x0, x0, #0x28
    4080:	ldr	w1, [sp, #20]
    4084:	bl	2280 <lzma_code@plt>
    4088:	str	w0, [sp, #76]
    408c:	ldr	x0, [sp, #40]
    4090:	ldr	x1, [x0, #64]
    4094:	ldr	x0, [sp, #48]
    4098:	add	x0, x0, #0x20
    409c:	sub	x0, x1, x0
    40a0:	str	x0, [sp, #64]
    40a4:	ldr	w0, [sp, #76]
    40a8:	cmp	w0, #0xa
    40ac:	b.ne	40d0 <_PyDict_SetItemId@plt+0x1a50>  // b.any
    40b0:	ldr	x0, [sp, #24]
    40b4:	cmp	x0, #0x0
    40b8:	b.ne	40d0 <_PyDict_SetItemId@plt+0x1a50>  // b.any
    40bc:	ldr	x0, [sp, #40]
    40c0:	ldr	x0, [x0, #72]
    40c4:	cmp	x0, #0x0
    40c8:	b.eq	40d0 <_PyDict_SetItemId@plt+0x1a50>  // b.none
    40cc:	str	wzr, [sp, #76]
    40d0:	ldr	x0, [sp, #56]
    40d4:	bl	2290 <PyEval_RestoreThread@plt>
    40d8:	ldr	w0, [sp, #76]
    40dc:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    40e0:	cmp	w0, #0x0
    40e4:	b.ne	41a8 <_PyDict_SetItemId@plt+0x1b28>  // b.any
    40e8:	ldr	w0, [sp, #20]
    40ec:	cmp	w0, #0x0
    40f0:	b.ne	4104 <_PyDict_SetItemId@plt+0x1a84>  // b.any
    40f4:	ldr	x0, [sp, #40]
    40f8:	ldr	x0, [x0, #48]
    40fc:	cmp	x0, #0x0
    4100:	b.eq	4178 <_PyDict_SetItemId@plt+0x1af8>  // b.none
    4104:	ldr	w0, [sp, #20]
    4108:	cmp	w0, #0x3
    410c:	b.ne	411c <_PyDict_SetItemId@plt+0x1a9c>  // b.any
    4110:	ldr	w0, [sp, #76]
    4114:	cmp	w0, #0x1
    4118:	b.eq	4178 <_PyDict_SetItemId@plt+0x1af8>  // b.none
    411c:	ldr	x0, [sp, #40]
    4120:	ldr	x0, [x0, #72]
    4124:	cmp	x0, #0x0
    4128:	b.ne	4070 <_PyDict_SetItemId@plt+0x19f0>  // b.any
    412c:	add	x0, sp, #0x30
    4130:	mov	x1, #0xffffffffffffffff    	// #-1
    4134:	bl	2b6c <_PyDict_SetItemId@plt+0x4ec>
    4138:	cmn	w0, #0x1
    413c:	b.eq	41b0 <_PyDict_SetItemId@plt+0x1b30>  // b.none
    4140:	ldr	x0, [sp, #48]
    4144:	add	x1, x0, #0x20
    4148:	ldr	x0, [sp, #64]
    414c:	add	x1, x1, x0
    4150:	ldr	x0, [sp, #40]
    4154:	str	x1, [x0, #64]
    4158:	ldr	x0, [sp, #48]
    415c:	ldr	x1, [x0, #16]
    4160:	ldr	x0, [sp, #64]
    4164:	sub	x0, x1, x0
    4168:	mov	x1, x0
    416c:	ldr	x0, [sp, #40]
    4170:	str	x1, [x0, #72]
    4174:	b	4070 <_PyDict_SetItemId@plt+0x19f0>
    4178:	ldr	x0, [sp, #48]
    417c:	ldr	x0, [x0, #16]
    4180:	ldr	x1, [sp, #64]
    4184:	cmp	x1, x0
    4188:	b.eq	41a0 <_PyDict_SetItemId@plt+0x1b20>  // b.none
    418c:	add	x0, sp, #0x30
    4190:	ldr	x1, [sp, #64]
    4194:	bl	2270 <_PyBytes_Resize@plt>
    4198:	cmn	w0, #0x1
    419c:	b.eq	41b8 <_PyDict_SetItemId@plt+0x1b38>  // b.none
    41a0:	ldr	x0, [sp, #48]
    41a4:	b	41c8 <_PyDict_SetItemId@plt+0x1b48>
    41a8:	nop
    41ac:	b	41bc <_PyDict_SetItemId@plt+0x1b3c>
    41b0:	nop
    41b4:	b	41bc <_PyDict_SetItemId@plt+0x1b3c>
    41b8:	nop
    41bc:	ldr	x0, [sp, #48]
    41c0:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    41c4:	mov	x0, #0x0                   	// #0
    41c8:	ldp	x29, x30, [sp], #80
    41cc:	ret
    41d0:	stp	x29, x30, [sp, #-48]!
    41d4:	mov	x29, sp
    41d8:	str	x0, [sp, #24]
    41dc:	str	x1, [sp, #16]
    41e0:	str	xzr, [sp, #40]
    41e4:	ldr	x0, [sp, #24]
    41e8:	ldr	x0, [x0, #184]
    41ec:	mov	w1, #0x0                   	// #0
    41f0:	bl	2350 <PyThread_acquire_lock@plt>
    41f4:	cmp	w0, #0x0
    41f8:	b.ne	421c <_PyDict_SetItemId@plt+0x1b9c>  // b.any
    41fc:	bl	25c0 <PyEval_SaveThread@plt>
    4200:	str	x0, [sp, #32]
    4204:	ldr	x0, [sp, #24]
    4208:	ldr	x0, [x0, #184]
    420c:	mov	w1, #0x1                   	// #1
    4210:	bl	2350 <PyThread_acquire_lock@plt>
    4214:	ldr	x0, [sp, #32]
    4218:	bl	2290 <PyEval_RestoreThread@plt>
    421c:	ldr	x0, [sp, #24]
    4220:	ldr	w0, [x0, #176]
    4224:	cmp	w0, #0x0
    4228:	b.eq	424c <_PyDict_SetItemId@plt+0x1bcc>  // b.none
    422c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4230:	ldr	x0, [x0, #4008]
    4234:	ldr	x2, [x0]
    4238:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    423c:	add	x1, x0, #0x9d0
    4240:	mov	x0, x2
    4244:	bl	2380 <PyErr_SetString@plt>
    4248:	b	4270 <_PyDict_SetItemId@plt+0x1bf0>
    424c:	ldr	x0, [sp, #16]
    4250:	ldr	x1, [x0]
    4254:	ldr	x0, [sp, #16]
    4258:	ldr	x0, [x0, #16]
    425c:	mov	w3, #0x0                   	// #0
    4260:	mov	x2, x0
    4264:	ldr	x0, [sp, #24]
    4268:	bl	3ff4 <_PyDict_SetItemId@plt+0x1974>
    426c:	str	x0, [sp, #40]
    4270:	ldr	x0, [sp, #24]
    4274:	ldr	x0, [x0, #184]
    4278:	bl	2560 <PyThread_release_lock@plt>
    427c:	ldr	x0, [sp, #40]
    4280:	ldp	x29, x30, [sp], #48
    4284:	ret
    4288:	stp	x29, x30, [sp, #-48]!
    428c:	mov	x29, sp
    4290:	str	x0, [sp, #24]
    4294:	str	xzr, [sp, #40]
    4298:	ldr	x0, [sp, #24]
    429c:	ldr	x0, [x0, #184]
    42a0:	mov	w1, #0x0                   	// #0
    42a4:	bl	2350 <PyThread_acquire_lock@plt>
    42a8:	cmp	w0, #0x0
    42ac:	b.ne	42d0 <_PyDict_SetItemId@plt+0x1c50>  // b.any
    42b0:	bl	25c0 <PyEval_SaveThread@plt>
    42b4:	str	x0, [sp, #32]
    42b8:	ldr	x0, [sp, #24]
    42bc:	ldr	x0, [x0, #184]
    42c0:	mov	w1, #0x1                   	// #1
    42c4:	bl	2350 <PyThread_acquire_lock@plt>
    42c8:	ldr	x0, [sp, #32]
    42cc:	bl	2290 <PyEval_RestoreThread@plt>
    42d0:	ldr	x0, [sp, #24]
    42d4:	ldr	w0, [x0, #176]
    42d8:	cmp	w0, #0x0
    42dc:	b.eq	4300 <_PyDict_SetItemId@plt+0x1c80>  // b.none
    42e0:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    42e4:	ldr	x0, [x0, #4008]
    42e8:	ldr	x2, [x0]
    42ec:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    42f0:	add	x1, x0, #0x9f0
    42f4:	mov	x0, x2
    42f8:	bl	2380 <PyErr_SetString@plt>
    42fc:	b	4324 <_PyDict_SetItemId@plt+0x1ca4>
    4300:	ldr	x0, [sp, #24]
    4304:	mov	w1, #0x1                   	// #1
    4308:	str	w1, [x0, #176]
    430c:	mov	w3, #0x3                   	// #3
    4310:	mov	x2, #0x0                   	// #0
    4314:	mov	x1, #0x0                   	// #0
    4318:	ldr	x0, [sp, #24]
    431c:	bl	3ff4 <_PyDict_SetItemId@plt+0x1974>
    4320:	str	x0, [sp, #40]
    4324:	ldr	x0, [sp, #24]
    4328:	ldr	x0, [x0, #184]
    432c:	bl	2560 <PyThread_release_lock@plt>
    4330:	ldr	x0, [sp, #40]
    4334:	ldp	x29, x30, [sp], #48
    4338:	ret
    433c:	stp	x29, x30, [sp, #-144]!
    4340:	mov	x29, sp
    4344:	str	x0, [sp, #40]
    4348:	str	w1, [sp, #36]
    434c:	str	w2, [sp, #32]
    4350:	str	x3, [sp, #24]
    4354:	ldr	x1, [sp, #24]
    4358:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    435c:	ldr	x0, [x0, #4056]
    4360:	cmp	x1, x0
    4364:	b.ne	4384 <_PyDict_SetItemId@plt+0x1d04>  // b.any
    4368:	ldr	w0, [sp, #36]
    436c:	mov	w2, w0
    4370:	ldr	w1, [sp, #32]
    4374:	ldr	x0, [sp, #40]
    4378:	bl	2360 <lzma_easy_encoder@plt>
    437c:	str	w0, [sp, #140]
    4380:	b	43c4 <_PyDict_SetItemId@plt+0x1d44>
    4384:	add	x0, sp, #0x38
    4388:	ldr	x1, [sp, #24]
    438c:	bl	33e4 <_PyDict_SetItemId@plt+0xd64>
    4390:	cmn	w0, #0x1
    4394:	b.ne	43a0 <_PyDict_SetItemId@plt+0x1d20>  // b.any
    4398:	mov	w0, #0xffffffff            	// #-1
    439c:	b	43e0 <_PyDict_SetItemId@plt+0x1d60>
    43a0:	ldr	w1, [sp, #36]
    43a4:	add	x0, sp, #0x38
    43a8:	mov	w2, w1
    43ac:	mov	x1, x0
    43b0:	ldr	x0, [sp, #40]
    43b4:	bl	2610 <lzma_stream_encoder@plt>
    43b8:	str	w0, [sp, #140]
    43bc:	add	x0, sp, #0x38
    43c0:	bl	3380 <_PyDict_SetItemId@plt+0xd00>
    43c4:	ldr	w0, [sp, #140]
    43c8:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    43cc:	cmp	w0, #0x0
    43d0:	b.eq	43dc <_PyDict_SetItemId@plt+0x1d5c>  // b.none
    43d4:	mov	w0, #0xffffffff            	// #-1
    43d8:	b	43e0 <_PyDict_SetItemId@plt+0x1d60>
    43dc:	mov	w0, #0x0                   	// #0
    43e0:	ldp	x29, x30, [sp], #144
    43e4:	ret
    43e8:	stp	x29, x30, [sp, #-176]!
    43ec:	mov	x29, sp
    43f0:	str	x0, [sp, #40]
    43f4:	str	w1, [sp, #36]
    43f8:	str	x2, [sp, #24]
    43fc:	ldr	x1, [sp, #24]
    4400:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4404:	ldr	x0, [x0, #4056]
    4408:	cmp	x1, x0
    440c:	b.ne	4468 <_PyDict_SetItemId@plt+0x1de8>  // b.any
    4410:	add	x0, sp, #0x38
    4414:	ldr	w1, [sp, #36]
    4418:	bl	2650 <lzma_lzma_preset@plt>
    441c:	and	w0, w0, #0xff
    4420:	cmp	w0, #0x0
    4424:	b.eq	4450 <_PyDict_SetItemId@plt+0x1dd0>  // b.none
    4428:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    442c:	add	x0, x0, #0x9c0
    4430:	ldr	x3, [x0]
    4434:	ldr	w2, [sp, #36]
    4438:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    443c:	add	x1, x0, #0xcc8
    4440:	mov	x0, x3
    4444:	bl	25f0 <PyErr_Format@plt>
    4448:	mov	w0, #0xffffffff            	// #-1
    444c:	b	4510 <_PyDict_SetItemId@plt+0x1e90>
    4450:	add	x0, sp, #0x38
    4454:	mov	x1, x0
    4458:	ldr	x0, [sp, #40]
    445c:	bl	2590 <lzma_alone_encoder@plt>
    4460:	str	w0, [sp, #172]
    4464:	b	44e8 <_PyDict_SetItemId@plt+0x1e68>
    4468:	add	x0, sp, #0x38
    446c:	ldr	x1, [sp, #24]
    4470:	bl	33e4 <_PyDict_SetItemId@plt+0xd64>
    4474:	cmn	w0, #0x1
    4478:	b.ne	4484 <_PyDict_SetItemId@plt+0x1e04>  // b.any
    447c:	mov	w0, #0xffffffff            	// #-1
    4480:	b	4510 <_PyDict_SetItemId@plt+0x1e90>
    4484:	ldr	x1, [sp, #56]
    4488:	mov	x0, #0x1                   	// #1
    448c:	movk	x0, #0x4000, lsl #48
    4490:	cmp	x1, x0
    4494:	b.ne	44bc <_PyDict_SetItemId@plt+0x1e3c>  // b.any
    4498:	ldr	x0, [sp, #72]
    449c:	cmn	x0, #0x1
    44a0:	b.ne	44bc <_PyDict_SetItemId@plt+0x1e3c>  // b.any
    44a4:	ldr	x0, [sp, #64]
    44a8:	mov	x1, x0
    44ac:	ldr	x0, [sp, #40]
    44b0:	bl	2590 <lzma_alone_encoder@plt>
    44b4:	str	w0, [sp, #172]
    44b8:	b	44e0 <_PyDict_SetItemId@plt+0x1e60>
    44bc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    44c0:	ldr	x0, [x0, #4008]
    44c4:	ldr	x2, [x0]
    44c8:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    44cc:	add	x1, x0, #0xa10
    44d0:	mov	x0, x2
    44d4:	bl	2380 <PyErr_SetString@plt>
    44d8:	mov	w0, #0xb                   	// #11
    44dc:	str	w0, [sp, #172]
    44e0:	add	x0, sp, #0x38
    44e4:	bl	3380 <_PyDict_SetItemId@plt+0xd00>
    44e8:	bl	24c0 <PyErr_Occurred@plt>
    44ec:	cmp	x0, #0x0
    44f0:	b.ne	4504 <_PyDict_SetItemId@plt+0x1e84>  // b.any
    44f4:	ldr	w0, [sp, #172]
    44f8:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    44fc:	cmp	w0, #0x0
    4500:	b.eq	450c <_PyDict_SetItemId@plt+0x1e8c>  // b.none
    4504:	mov	w0, #0xffffffff            	// #-1
    4508:	b	4510 <_PyDict_SetItemId@plt+0x1e90>
    450c:	mov	w0, #0x0                   	// #0
    4510:	ldp	x29, x30, [sp], #176
    4514:	ret
    4518:	stp	x29, x30, [sp, #-128]!
    451c:	mov	x29, sp
    4520:	str	x0, [sp, #24]
    4524:	str	x1, [sp, #16]
    4528:	ldr	x1, [sp, #16]
    452c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4530:	ldr	x0, [x0, #4056]
    4534:	cmp	x1, x0
    4538:	b.ne	4560 <_PyDict_SetItemId@plt+0x1ee0>  // b.any
    453c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4540:	ldr	x0, [x0, #4008]
    4544:	ldr	x2, [x0]
    4548:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    454c:	add	x1, x0, #0xa58
    4550:	mov	x0, x2
    4554:	bl	2380 <PyErr_SetString@plt>
    4558:	mov	w0, #0xffffffff            	// #-1
    455c:	b	45b4 <_PyDict_SetItemId@plt+0x1f34>
    4560:	add	x0, sp, #0x28
    4564:	ldr	x1, [sp, #16]
    4568:	bl	33e4 <_PyDict_SetItemId@plt+0xd64>
    456c:	cmn	w0, #0x1
    4570:	b.ne	457c <_PyDict_SetItemId@plt+0x1efc>  // b.any
    4574:	mov	w0, #0xffffffff            	// #-1
    4578:	b	45b4 <_PyDict_SetItemId@plt+0x1f34>
    457c:	add	x0, sp, #0x28
    4580:	mov	x1, x0
    4584:	ldr	x0, [sp, #24]
    4588:	bl	23a0 <lzma_raw_encoder@plt>
    458c:	str	w0, [sp, #124]
    4590:	add	x0, sp, #0x28
    4594:	bl	3380 <_PyDict_SetItemId@plt+0xd00>
    4598:	ldr	w0, [sp, #124]
    459c:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    45a0:	cmp	w0, #0x0
    45a4:	b.eq	45b0 <_PyDict_SetItemId@plt+0x1f30>  // b.none
    45a8:	mov	w0, #0xffffffff            	// #-1
    45ac:	b	45b4 <_PyDict_SetItemId@plt+0x1f34>
    45b0:	mov	w0, #0x0                   	// #0
    45b4:	ldp	x29, x30, [sp], #128
    45b8:	ret
    45bc:	stp	x29, x30, [sp, #-80]!
    45c0:	mov	x29, sp
    45c4:	str	x0, [sp, #40]
    45c8:	str	x1, [sp, #32]
    45cc:	str	x2, [sp, #24]
    45d0:	mov	w0, #0x1                   	// #1
    45d4:	str	w0, [sp, #76]
    45d8:	mov	w0, #0xffffffff            	// #-1
    45dc:	str	w0, [sp, #72]
    45e0:	mov	w0, #0x6                   	// #6
    45e4:	str	w0, [sp, #68]
    45e8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    45ec:	ldr	x0, [x0, #4056]
    45f0:	str	x0, [sp, #56]
    45f4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    45f8:	ldr	x0, [x0, #4056]
    45fc:	str	x0, [sp, #48]
    4600:	add	x3, sp, #0x30
    4604:	add	x2, sp, #0x38
    4608:	add	x1, sp, #0x48
    460c:	add	x0, sp, #0x4c
    4610:	mov	x7, x3
    4614:	mov	x6, x2
    4618:	mov	x5, x1
    461c:	mov	x4, x0
    4620:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    4624:	add	x3, x0, #0x650
    4628:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    462c:	add	x2, x0, #0xa80
    4630:	ldr	x1, [sp, #24]
    4634:	ldr	x0, [sp, #32]
    4638:	bl	2550 <_PyArg_ParseTupleAndKeywords_SizeT@plt>
    463c:	cmp	w0, #0x0
    4640:	b.ne	464c <_PyDict_SetItemId@plt+0x1fcc>  // b.any
    4644:	mov	w0, #0xffffffff            	// #-1
    4648:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    464c:	ldr	w0, [sp, #76]
    4650:	cmp	w0, #0x1
    4654:	b.eq	4694 <_PyDict_SetItemId@plt+0x2014>  // b.none
    4658:	ldr	w0, [sp, #72]
    465c:	cmn	w0, #0x1
    4660:	b.eq	4694 <_PyDict_SetItemId@plt+0x2014>  // b.none
    4664:	ldr	w0, [sp, #72]
    4668:	cmp	w0, #0x0
    466c:	b.eq	4694 <_PyDict_SetItemId@plt+0x2014>  // b.none
    4670:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4674:	ldr	x0, [x0, #4008]
    4678:	ldr	x2, [x0]
    467c:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    4680:	add	x1, x0, #0xa98
    4684:	mov	x0, x2
    4688:	bl	2380 <PyErr_SetString@plt>
    468c:	mov	w0, #0xffffffff            	// #-1
    4690:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    4694:	ldr	x1, [sp, #56]
    4698:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    469c:	ldr	x0, [x0, #4056]
    46a0:	cmp	x1, x0
    46a4:	b.eq	46e0 <_PyDict_SetItemId@plt+0x2060>  // b.none
    46a8:	ldr	x1, [sp, #48]
    46ac:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    46b0:	ldr	x0, [x0, #4056]
    46b4:	cmp	x1, x0
    46b8:	b.eq	46e0 <_PyDict_SetItemId@plt+0x2060>  // b.none
    46bc:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    46c0:	ldr	x0, [x0, #4008]
    46c4:	ldr	x2, [x0]
    46c8:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    46cc:	add	x1, x0, #0xad0
    46d0:	mov	x0, x2
    46d4:	bl	2380 <PyErr_SetString@plt>
    46d8:	mov	w0, #0xffffffff            	// #-1
    46dc:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    46e0:	ldr	x1, [sp, #56]
    46e4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    46e8:	ldr	x0, [x0, #4056]
    46ec:	cmp	x1, x0
    46f0:	b.eq	4710 <_PyDict_SetItemId@plt+0x2090>  // b.none
    46f4:	ldr	x0, [sp, #56]
    46f8:	add	x1, sp, #0x44
    46fc:	bl	2bdc <_PyDict_SetItemId@plt+0x55c>
    4700:	cmp	w0, #0x0
    4704:	b.ne	4710 <_PyDict_SetItemId@plt+0x2090>  // b.any
    4708:	mov	w0, #0xffffffff            	// #-1
    470c:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    4710:	ldr	x0, [sp, #40]
    4714:	str	xzr, [x0, #32]
    4718:	ldr	x0, [sp, #40]
    471c:	adrp	x1, 2000 <memcpy@plt-0x230>
    4720:	add	x1, x1, #0xaf0
    4724:	str	x1, [x0, #16]
    4728:	ldr	x0, [sp, #40]
    472c:	adrp	x1, 2000 <memcpy@plt-0x230>
    4730:	add	x1, x1, #0xb48
    4734:	str	x1, [x0, #24]
    4738:	ldr	x0, [sp, #40]
    473c:	add	x1, x0, #0x10
    4740:	ldr	x0, [sp, #40]
    4744:	str	x1, [x0, #88]
    4748:	bl	2540 <PyThread_allocate_lock@plt>
    474c:	mov	x1, x0
    4750:	ldr	x0, [sp, #40]
    4754:	str	x1, [x0, #184]
    4758:	ldr	x0, [sp, #40]
    475c:	ldr	x0, [x0, #184]
    4760:	cmp	x0, #0x0
    4764:	b.ne	478c <_PyDict_SetItemId@plt+0x210c>  // b.any
    4768:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    476c:	ldr	x0, [x0, #4000]
    4770:	ldr	x2, [x0]
    4774:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    4778:	add	x1, x0, #0xb00
    477c:	mov	x0, x2
    4780:	bl	2380 <PyErr_SetString@plt>
    4784:	mov	w0, #0xffffffff            	// #-1
    4788:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    478c:	ldr	x0, [sp, #40]
    4790:	str	wzr, [x0, #176]
    4794:	ldr	w0, [sp, #76]
    4798:	cmp	w0, #0x3
    479c:	b.eq	481c <_PyDict_SetItemId@plt+0x219c>  // b.none
    47a0:	cmp	w0, #0x3
    47a4:	b.gt	483c <_PyDict_SetItemId@plt+0x21bc>
    47a8:	cmp	w0, #0x1
    47ac:	b.eq	47bc <_PyDict_SetItemId@plt+0x213c>  // b.none
    47b0:	cmp	w0, #0x2
    47b4:	b.eq	47f8 <_PyDict_SetItemId@plt+0x2178>  // b.none
    47b8:	b	483c <_PyDict_SetItemId@plt+0x21bc>
    47bc:	ldr	w0, [sp, #72]
    47c0:	cmn	w0, #0x1
    47c4:	b.ne	47d0 <_PyDict_SetItemId@plt+0x2150>  // b.any
    47c8:	mov	w0, #0x4                   	// #4
    47cc:	str	w0, [sp, #72]
    47d0:	ldr	x0, [sp, #40]
    47d4:	add	x0, x0, #0x28
    47d8:	ldr	w1, [sp, #72]
    47dc:	ldr	w2, [sp, #68]
    47e0:	ldr	x3, [sp, #48]
    47e4:	bl	433c <_PyDict_SetItemId@plt+0x1cbc>
    47e8:	cmp	w0, #0x0
    47ec:	b.ne	4864 <_PyDict_SetItemId@plt+0x21e4>  // b.any
    47f0:	mov	w0, #0x0                   	// #0
    47f4:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    47f8:	ldr	x0, [sp, #40]
    47fc:	add	x0, x0, #0x28
    4800:	ldr	w1, [sp, #68]
    4804:	ldr	x2, [sp, #48]
    4808:	bl	43e8 <_PyDict_SetItemId@plt+0x1d68>
    480c:	cmp	w0, #0x0
    4810:	b.ne	486c <_PyDict_SetItemId@plt+0x21ec>  // b.any
    4814:	mov	w0, #0x0                   	// #0
    4818:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    481c:	ldr	x0, [sp, #40]
    4820:	add	x0, x0, #0x28
    4824:	ldr	x1, [sp, #48]
    4828:	bl	4518 <_PyDict_SetItemId@plt+0x1e98>
    482c:	cmp	w0, #0x0
    4830:	b.ne	4874 <_PyDict_SetItemId@plt+0x21f4>  // b.any
    4834:	mov	w0, #0x0                   	// #0
    4838:	b	4890 <_PyDict_SetItemId@plt+0x2210>
    483c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4840:	ldr	x0, [x0, #4008]
    4844:	ldr	x3, [x0]
    4848:	ldr	w0, [sp, #76]
    484c:	mov	w2, w0
    4850:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    4854:	add	x1, x0, #0xb18
    4858:	mov	x0, x3
    485c:	bl	25f0 <PyErr_Format@plt>
    4860:	b	4878 <_PyDict_SetItemId@plt+0x21f8>
    4864:	nop
    4868:	b	4878 <_PyDict_SetItemId@plt+0x21f8>
    486c:	nop
    4870:	b	4878 <_PyDict_SetItemId@plt+0x21f8>
    4874:	nop
    4878:	ldr	x0, [sp, #40]
    487c:	ldr	x0, [x0, #184]
    4880:	bl	2670 <PyThread_free_lock@plt>
    4884:	ldr	x0, [sp, #40]
    4888:	str	xzr, [x0, #184]
    488c:	mov	w0, #0xffffffff            	// #-1
    4890:	ldp	x29, x30, [sp], #80
    4894:	ret
    4898:	stp	x29, x30, [sp, #-32]!
    489c:	mov	x29, sp
    48a0:	str	x0, [sp, #24]
    48a4:	ldr	x0, [sp, #24]
    48a8:	add	x0, x0, #0x28
    48ac:	bl	2500 <lzma_end@plt>
    48b0:	ldr	x0, [sp, #24]
    48b4:	ldr	x0, [x0, #184]
    48b8:	cmp	x0, #0x0
    48bc:	b.eq	48cc <_PyDict_SetItemId@plt+0x224c>  // b.none
    48c0:	ldr	x0, [sp, #24]
    48c4:	ldr	x0, [x0, #184]
    48c8:	bl	2670 <PyThread_free_lock@plt>
    48cc:	ldr	x0, [sp, #24]
    48d0:	ldr	x0, [x0, #8]
    48d4:	ldr	x1, [x0, #320]
    48d8:	ldr	x0, [sp, #24]
    48dc:	blr	x1
    48e0:	nop
    48e4:	ldp	x29, x30, [sp], #32
    48e8:	ret
    48ec:	stp	x29, x30, [sp, #-80]!
    48f0:	mov	x29, sp
    48f4:	str	x0, [sp, #24]
    48f8:	str	x1, [sp, #16]
    48fc:	str	xzr, [sp, #64]
    4900:	ldr	x0, [sp, #24]
    4904:	add	x0, x0, #0x28
    4908:	str	x0, [sp, #56]
    490c:	ldr	x0, [sp, #16]
    4910:	cmp	x0, #0x0
    4914:	b.lt	4928 <_PyDict_SetItemId@plt+0x22a8>  // b.tstop
    4918:	ldr	x1, [sp, #16]
    491c:	mov	x0, #0x1fff                	// #8191
    4920:	cmp	x1, x0
    4924:	b.le	493c <_PyDict_SetItemId@plt+0x22bc>
    4928:	mov	x1, #0x2000                	// #8192
    492c:	mov	x0, #0x0                   	// #0
    4930:	bl	2310 <PyBytes_FromStringAndSize@plt>
    4934:	str	x0, [sp, #40]
    4938:	b	494c <_PyDict_SetItemId@plt+0x22cc>
    493c:	ldr	x1, [sp, #16]
    4940:	mov	x0, #0x0                   	// #0
    4944:	bl	2310 <PyBytes_FromStringAndSize@plt>
    4948:	str	x0, [sp, #40]
    494c:	ldr	x0, [sp, #40]
    4950:	cmp	x0, #0x0
    4954:	b.ne	4960 <_PyDict_SetItemId@plt+0x22e0>  // b.any
    4958:	mov	x0, #0x0                   	// #0
    495c:	b	4b24 <_PyDict_SetItemId@plt+0x24a4>
    4960:	ldr	x0, [sp, #40]
    4964:	add	x1, x0, #0x20
    4968:	ldr	x0, [sp, #56]
    496c:	str	x1, [x0, #24]
    4970:	ldr	x0, [sp, #40]
    4974:	ldr	x0, [x0, #16]
    4978:	mov	x1, x0
    497c:	ldr	x0, [sp, #56]
    4980:	str	x1, [x0, #32]
    4984:	bl	25c0 <PyEval_SaveThread@plt>
    4988:	str	x0, [sp, #48]
    498c:	mov	w1, #0x0                   	// #0
    4990:	ldr	x0, [sp, #56]
    4994:	bl	2280 <lzma_code@plt>
    4998:	str	w0, [sp, #76]
    499c:	ldr	x0, [sp, #56]
    49a0:	ldr	x1, [x0, #24]
    49a4:	ldr	x0, [sp, #40]
    49a8:	add	x0, x0, #0x20
    49ac:	sub	x0, x1, x0
    49b0:	str	x0, [sp, #64]
    49b4:	ldr	w0, [sp, #76]
    49b8:	cmp	w0, #0xa
    49bc:	b.ne	49e4 <_PyDict_SetItemId@plt+0x2364>  // b.any
    49c0:	ldr	x0, [sp, #56]
    49c4:	ldr	x0, [x0, #8]
    49c8:	cmp	x0, #0x0
    49cc:	b.ne	49e4 <_PyDict_SetItemId@plt+0x2364>  // b.any
    49d0:	ldr	x0, [sp, #56]
    49d4:	ldr	x0, [x0, #32]
    49d8:	cmp	x0, #0x0
    49dc:	b.eq	49e4 <_PyDict_SetItemId@plt+0x2364>  // b.none
    49e0:	str	wzr, [sp, #76]
    49e4:	ldr	x0, [sp, #48]
    49e8:	bl	2290 <PyEval_RestoreThread@plt>
    49ec:	ldr	w0, [sp, #76]
    49f0:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    49f4:	cmp	w0, #0x0
    49f8:	b.ne	4b04 <_PyDict_SetItemId@plt+0x2484>  // b.any
    49fc:	ldr	w0, [sp, #76]
    4a00:	cmp	w0, #0x4
    4a04:	b.eq	4a14 <_PyDict_SetItemId@plt+0x2394>  // b.none
    4a08:	ldr	w0, [sp, #76]
    4a0c:	cmp	w0, #0x2
    4a10:	b.ne	4a2c <_PyDict_SetItemId@plt+0x23ac>  // b.any
    4a14:	ldr	x0, [sp, #24]
    4a18:	add	x0, x0, #0x28
    4a1c:	bl	2520 <lzma_get_check@plt>
    4a20:	mov	w1, w0
    4a24:	ldr	x0, [sp, #24]
    4a28:	str	w1, [x0, #176]
    4a2c:	ldr	w0, [sp, #76]
    4a30:	cmp	w0, #0x1
    4a34:	b.ne	4a48 <_PyDict_SetItemId@plt+0x23c8>  // b.any
    4a38:	ldr	x0, [sp, #24]
    4a3c:	mov	w1, #0x1                   	// #1
    4a40:	strb	w1, [x0, #180]
    4a44:	b	4ad4 <_PyDict_SetItemId@plt+0x2454>
    4a48:	ldr	x0, [sp, #56]
    4a4c:	ldr	x0, [x0, #32]
    4a50:	cmp	x0, #0x0
    4a54:	b.ne	4ab4 <_PyDict_SetItemId@plt+0x2434>  // b.any
    4a58:	ldr	x1, [sp, #64]
    4a5c:	ldr	x0, [sp, #16]
    4a60:	cmp	x1, x0
    4a64:	b.eq	4ac8 <_PyDict_SetItemId@plt+0x2448>  // b.none
    4a68:	add	x0, sp, #0x28
    4a6c:	ldr	x1, [sp, #16]
    4a70:	bl	2b6c <_PyDict_SetItemId@plt+0x4ec>
    4a74:	cmn	w0, #0x1
    4a78:	b.eq	4b0c <_PyDict_SetItemId@plt+0x248c>  // b.none
    4a7c:	ldr	x0, [sp, #40]
    4a80:	add	x1, x0, #0x20
    4a84:	ldr	x0, [sp, #64]
    4a88:	add	x1, x1, x0
    4a8c:	ldr	x0, [sp, #56]
    4a90:	str	x1, [x0, #24]
    4a94:	ldr	x0, [sp, #40]
    4a98:	ldr	x1, [x0, #16]
    4a9c:	ldr	x0, [sp, #64]
    4aa0:	sub	x0, x1, x0
    4aa4:	mov	x1, x0
    4aa8:	ldr	x0, [sp, #56]
    4aac:	str	x1, [x0, #32]
    4ab0:	b	4984 <_PyDict_SetItemId@plt+0x2304>
    4ab4:	ldr	x0, [sp, #56]
    4ab8:	ldr	x0, [x0, #8]
    4abc:	cmp	x0, #0x0
    4ac0:	b.eq	4ad0 <_PyDict_SetItemId@plt+0x2450>  // b.none
    4ac4:	b	4984 <_PyDict_SetItemId@plt+0x2304>
    4ac8:	nop
    4acc:	b	4ad4 <_PyDict_SetItemId@plt+0x2454>
    4ad0:	nop
    4ad4:	ldr	x0, [sp, #40]
    4ad8:	ldr	x0, [x0, #16]
    4adc:	ldr	x1, [sp, #64]
    4ae0:	cmp	x1, x0
    4ae4:	b.eq	4afc <_PyDict_SetItemId@plt+0x247c>  // b.none
    4ae8:	add	x0, sp, #0x28
    4aec:	ldr	x1, [sp, #64]
    4af0:	bl	2270 <_PyBytes_Resize@plt>
    4af4:	cmn	w0, #0x1
    4af8:	b.eq	4b14 <_PyDict_SetItemId@plt+0x2494>  // b.none
    4afc:	ldr	x0, [sp, #40]
    4b00:	b	4b24 <_PyDict_SetItemId@plt+0x24a4>
    4b04:	nop
    4b08:	b	4b18 <_PyDict_SetItemId@plt+0x2498>
    4b0c:	nop
    4b10:	b	4b18 <_PyDict_SetItemId@plt+0x2498>
    4b14:	nop
    4b18:	ldr	x0, [sp, #40]
    4b1c:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    4b20:	mov	x0, #0x0                   	// #0
    4b24:	ldp	x29, x30, [sp], #80
    4b28:	ret
    4b2c:	stp	x29, x30, [sp, #-128]!
    4b30:	mov	x29, sp
    4b34:	str	x0, [sp, #40]
    4b38:	str	x1, [sp, #32]
    4b3c:	str	x2, [sp, #24]
    4b40:	str	x3, [sp, #16]
    4b44:	ldr	x0, [sp, #40]
    4b48:	add	x0, x0, #0x28
    4b4c:	str	x0, [sp, #112]
    4b50:	ldr	x0, [sp, #112]
    4b54:	ldr	x0, [x0]
    4b58:	cmp	x0, #0x0
    4b5c:	b.eq	4ce0 <_PyDict_SetItemId@plt+0x2660>  // b.none
    4b60:	ldr	x0, [sp, #40]
    4b64:	ldr	x1, [x0, #200]
    4b68:	ldr	x0, [sp, #40]
    4b6c:	ldr	x0, [x0, #208]
    4b70:	add	x1, x1, x0
    4b74:	ldr	x0, [sp, #112]
    4b78:	ldr	x2, [x0]
    4b7c:	ldr	x0, [sp, #112]
    4b80:	ldr	x0, [x0, #8]
    4b84:	add	x0, x2, x0
    4b88:	sub	x0, x1, x0
    4b8c:	str	x0, [sp, #104]
    4b90:	ldr	x0, [sp, #40]
    4b94:	ldr	x1, [x0, #208]
    4b98:	ldr	x0, [sp, #112]
    4b9c:	ldr	x0, [x0, #8]
    4ba0:	sub	x0, x1, x0
    4ba4:	str	x0, [sp, #96]
    4ba8:	ldr	x1, [sp, #96]
    4bac:	ldr	x0, [sp, #24]
    4bb0:	cmp	x1, x0
    4bb4:	b.cs	4c58 <_PyDict_SetItemId@plt+0x25d8>  // b.hs, b.nlast
    4bb8:	ldr	x0, [sp, #112]
    4bbc:	ldr	x1, [x0]
    4bc0:	ldr	x0, [sp, #40]
    4bc4:	ldr	x0, [x0, #200]
    4bc8:	sub	x0, x1, x0
    4bcc:	str	x0, [sp, #88]
    4bd0:	ldr	x0, [sp, #40]
    4bd4:	ldr	x1, [x0, #208]
    4bd8:	ldr	x0, [sp, #24]
    4bdc:	add	x1, x1, x0
    4be0:	ldr	x0, [sp, #104]
    4be4:	sub	x0, x1, x0
    4be8:	str	x0, [sp, #80]
    4bec:	ldr	x0, [sp, #40]
    4bf0:	ldr	x0, [x0, #200]
    4bf4:	ldr	x1, [sp, #80]
    4bf8:	bl	23b0 <PyMem_Realloc@plt>
    4bfc:	str	x0, [sp, #72]
    4c00:	ldr	x0, [sp, #72]
    4c04:	cmp	x0, #0x0
    4c08:	b.ne	4c24 <_PyDict_SetItemId@plt+0x25a4>  // b.any
    4c0c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4c10:	ldr	x0, [x0, #4000]
    4c14:	ldr	x0, [x0]
    4c18:	bl	23c0 <PyErr_SetNone@plt>
    4c1c:	mov	x0, #0x0                   	// #0
    4c20:	b	4ed8 <_PyDict_SetItemId@plt+0x2858>
    4c24:	ldr	x0, [sp, #40]
    4c28:	ldr	x1, [sp, #72]
    4c2c:	str	x1, [x0, #200]
    4c30:	ldr	x0, [sp, #40]
    4c34:	ldr	x1, [sp, #80]
    4c38:	str	x1, [x0, #208]
    4c3c:	ldr	x0, [sp, #40]
    4c40:	ldr	x1, [x0, #200]
    4c44:	ldr	x0, [sp, #88]
    4c48:	add	x1, x1, x0
    4c4c:	ldr	x0, [sp, #112]
    4c50:	str	x1, [x0]
    4c54:	b	4c9c <_PyDict_SetItemId@plt+0x261c>
    4c58:	ldr	x1, [sp, #104]
    4c5c:	ldr	x0, [sp, #24]
    4c60:	cmp	x1, x0
    4c64:	b.cs	4c9c <_PyDict_SetItemId@plt+0x261c>  // b.hs, b.nlast
    4c68:	ldr	x0, [sp, #40]
    4c6c:	ldr	x3, [x0, #200]
    4c70:	ldr	x0, [sp, #112]
    4c74:	ldr	x1, [x0]
    4c78:	ldr	x0, [sp, #112]
    4c7c:	ldr	x0, [x0, #8]
    4c80:	mov	x2, x0
    4c84:	mov	x0, x3
    4c88:	bl	2240 <memmove@plt>
    4c8c:	ldr	x0, [sp, #40]
    4c90:	ldr	x1, [x0, #200]
    4c94:	ldr	x0, [sp, #112]
    4c98:	str	x1, [x0]
    4c9c:	ldr	x0, [sp, #112]
    4ca0:	ldr	x1, [x0]
    4ca4:	ldr	x0, [sp, #112]
    4ca8:	ldr	x0, [x0, #8]
    4cac:	add	x0, x1, x0
    4cb0:	ldr	x2, [sp, #24]
    4cb4:	ldr	x1, [sp, #32]
    4cb8:	bl	2230 <memcpy@plt>
    4cbc:	ldr	x0, [sp, #112]
    4cc0:	ldr	x1, [x0, #8]
    4cc4:	ldr	x0, [sp, #24]
    4cc8:	add	x1, x1, x0
    4ccc:	ldr	x0, [sp, #112]
    4cd0:	str	x1, [x0, #8]
    4cd4:	mov	w0, #0x1                   	// #1
    4cd8:	strb	w0, [sp, #127]
    4cdc:	b	4cfc <_PyDict_SetItemId@plt+0x267c>
    4ce0:	ldr	x0, [sp, #112]
    4ce4:	ldr	x1, [sp, #32]
    4ce8:	str	x1, [x0]
    4cec:	ldr	x0, [sp, #112]
    4cf0:	ldr	x1, [sp, #24]
    4cf4:	str	x1, [x0, #8]
    4cf8:	strb	wzr, [sp, #127]
    4cfc:	ldr	x1, [sp, #16]
    4d00:	ldr	x0, [sp, #40]
    4d04:	bl	48ec <_PyDict_SetItemId@plt+0x226c>
    4d08:	str	x0, [sp, #64]
    4d0c:	ldr	x0, [sp, #64]
    4d10:	cmp	x0, #0x0
    4d14:	b.ne	4d28 <_PyDict_SetItemId@plt+0x26a8>  // b.any
    4d18:	ldr	x0, [sp, #112]
    4d1c:	str	xzr, [x0]
    4d20:	mov	x0, #0x0                   	// #0
    4d24:	b	4ed8 <_PyDict_SetItemId@plt+0x2858>
    4d28:	ldr	x0, [sp, #40]
    4d2c:	ldrb	w0, [x0, #180]
    4d30:	cmp	w0, #0x0
    4d34:	b.eq	4da0 <_PyDict_SetItemId@plt+0x2720>  // b.none
    4d38:	ldr	x0, [sp, #40]
    4d3c:	strb	wzr, [x0, #192]
    4d40:	ldr	x0, [sp, #112]
    4d44:	ldr	x0, [x0, #8]
    4d48:	cmp	x0, #0x0
    4d4c:	b.eq	4ec4 <_PyDict_SetItemId@plt+0x2844>  // b.none
    4d50:	ldr	x0, [sp, #40]
    4d54:	ldr	x0, [x0, #184]
    4d58:	str	x0, [sp, #56]
    4d5c:	ldr	x0, [sp, #112]
    4d60:	ldr	x2, [x0]
    4d64:	ldr	x0, [sp, #112]
    4d68:	ldr	x0, [x0, #8]
    4d6c:	mov	x1, x0
    4d70:	mov	x0, x2
    4d74:	bl	2310 <PyBytes_FromStringAndSize@plt>
    4d78:	mov	x1, x0
    4d7c:	ldr	x0, [sp, #40]
    4d80:	str	x1, [x0, #184]
    4d84:	ldr	x0, [sp, #56]
    4d88:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    4d8c:	ldr	x0, [sp, #40]
    4d90:	ldr	x0, [x0, #184]
    4d94:	cmp	x0, #0x0
    4d98:	b.ne	4ec4 <_PyDict_SetItemId@plt+0x2844>  // b.any
    4d9c:	b	4ecc <_PyDict_SetItemId@plt+0x284c>
    4da0:	ldr	x0, [sp, #112]
    4da4:	ldr	x0, [x0, #8]
    4da8:	cmp	x0, #0x0
    4dac:	b.ne	4de4 <_PyDict_SetItemId@plt+0x2764>  // b.any
    4db0:	ldr	x0, [sp, #112]
    4db4:	str	xzr, [x0]
    4db8:	ldr	x0, [sp, #112]
    4dbc:	ldr	x0, [x0, #32]
    4dc0:	cmp	x0, #0x0
    4dc4:	b.ne	4dd4 <_PyDict_SetItemId@plt+0x2754>  // b.any
    4dc8:	ldr	x0, [sp, #40]
    4dcc:	strb	wzr, [x0, #192]
    4dd0:	b	4ec4 <_PyDict_SetItemId@plt+0x2844>
    4dd4:	ldr	x0, [sp, #40]
    4dd8:	mov	w1, #0x1                   	// #1
    4ddc:	strb	w1, [x0, #192]
    4de0:	b	4ec4 <_PyDict_SetItemId@plt+0x2844>
    4de4:	ldr	x0, [sp, #40]
    4de8:	strb	wzr, [x0, #192]
    4dec:	ldrb	w0, [sp, #127]
    4df0:	cmp	w0, #0x0
    4df4:	b.ne	4ec4 <_PyDict_SetItemId@plt+0x2844>  // b.any
    4df8:	ldr	x0, [sp, #40]
    4dfc:	ldr	x0, [x0, #200]
    4e00:	cmp	x0, #0x0
    4e04:	b.eq	4e34 <_PyDict_SetItemId@plt+0x27b4>  // b.none
    4e08:	ldr	x0, [sp, #40]
    4e0c:	ldr	x1, [x0, #208]
    4e10:	ldr	x0, [sp, #112]
    4e14:	ldr	x0, [x0, #8]
    4e18:	cmp	x1, x0
    4e1c:	b.cs	4e34 <_PyDict_SetItemId@plt+0x27b4>  // b.hs, b.nlast
    4e20:	ldr	x0, [sp, #40]
    4e24:	ldr	x0, [x0, #200]
    4e28:	bl	22a0 <PyMem_Free@plt>
    4e2c:	ldr	x0, [sp, #40]
    4e30:	str	xzr, [x0, #200]
    4e34:	ldr	x0, [sp, #40]
    4e38:	ldr	x0, [x0, #200]
    4e3c:	cmp	x0, #0x0
    4e40:	b.ne	4e90 <_PyDict_SetItemId@plt+0x2810>  // b.any
    4e44:	ldr	x0, [sp, #112]
    4e48:	ldr	x0, [x0, #8]
    4e4c:	bl	2660 <PyMem_Malloc@plt>
    4e50:	mov	x1, x0
    4e54:	ldr	x0, [sp, #40]
    4e58:	str	x1, [x0, #200]
    4e5c:	ldr	x0, [sp, #40]
    4e60:	ldr	x0, [x0, #200]
    4e64:	cmp	x0, #0x0
    4e68:	b.ne	4e80 <_PyDict_SetItemId@plt+0x2800>  // b.any
    4e6c:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4e70:	ldr	x0, [x0, #4000]
    4e74:	ldr	x0, [x0]
    4e78:	bl	23c0 <PyErr_SetNone@plt>
    4e7c:	b	4ecc <_PyDict_SetItemId@plt+0x284c>
    4e80:	ldr	x0, [sp, #112]
    4e84:	ldr	x1, [x0, #8]
    4e88:	ldr	x0, [sp, #40]
    4e8c:	str	x1, [x0, #208]
    4e90:	ldr	x0, [sp, #40]
    4e94:	ldr	x3, [x0, #200]
    4e98:	ldr	x0, [sp, #112]
    4e9c:	ldr	x1, [x0]
    4ea0:	ldr	x0, [sp, #112]
    4ea4:	ldr	x0, [x0, #8]
    4ea8:	mov	x2, x0
    4eac:	mov	x0, x3
    4eb0:	bl	2230 <memcpy@plt>
    4eb4:	ldr	x0, [sp, #40]
    4eb8:	ldr	x1, [x0, #200]
    4ebc:	ldr	x0, [sp, #112]
    4ec0:	str	x1, [x0]
    4ec4:	ldr	x0, [sp, #64]
    4ec8:	b	4ed8 <_PyDict_SetItemId@plt+0x2858>
    4ecc:	ldr	x0, [sp, #64]
    4ed0:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    4ed4:	mov	x0, #0x0                   	// #0
    4ed8:	ldp	x29, x30, [sp], #128
    4edc:	ret
    4ee0:	stp	x29, x30, [sp, #-64]!
    4ee4:	mov	x29, sp
    4ee8:	str	x0, [sp, #40]
    4eec:	str	x1, [sp, #32]
    4ef0:	str	x2, [sp, #24]
    4ef4:	str	xzr, [sp, #56]
    4ef8:	ldr	x0, [sp, #40]
    4efc:	ldr	x0, [x0, #216]
    4f00:	mov	w1, #0x0                   	// #0
    4f04:	bl	2350 <PyThread_acquire_lock@plt>
    4f08:	cmp	w0, #0x0
    4f0c:	b.ne	4f30 <_PyDict_SetItemId@plt+0x28b0>  // b.any
    4f10:	bl	25c0 <PyEval_SaveThread@plt>
    4f14:	str	x0, [sp, #48]
    4f18:	ldr	x0, [sp, #40]
    4f1c:	ldr	x0, [x0, #216]
    4f20:	mov	w1, #0x1                   	// #1
    4f24:	bl	2350 <PyThread_acquire_lock@plt>
    4f28:	ldr	x0, [sp, #48]
    4f2c:	bl	2290 <PyEval_RestoreThread@plt>
    4f30:	ldr	x0, [sp, #40]
    4f34:	ldrb	w0, [x0, #180]
    4f38:	cmp	w0, #0x0
    4f3c:	b.eq	4f60 <_PyDict_SetItemId@plt+0x28e0>  // b.none
    4f40:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    4f44:	ldr	x0, [x0, #4048]
    4f48:	ldr	x2, [x0]
    4f4c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    4f50:	add	x1, x0, #0x28
    4f54:	mov	x0, x2
    4f58:	bl	2380 <PyErr_SetString@plt>
    4f5c:	b	4f84 <_PyDict_SetItemId@plt+0x2904>
    4f60:	ldr	x0, [sp, #32]
    4f64:	ldr	x1, [x0]
    4f68:	ldr	x0, [sp, #32]
    4f6c:	ldr	x0, [x0, #16]
    4f70:	ldr	x3, [sp, #24]
    4f74:	mov	x2, x0
    4f78:	ldr	x0, [sp, #40]
    4f7c:	bl	4b2c <_PyDict_SetItemId@plt+0x24ac>
    4f80:	str	x0, [sp, #56]
    4f84:	ldr	x0, [sp, #40]
    4f88:	ldr	x0, [x0, #216]
    4f8c:	bl	2560 <PyThread_release_lock@plt>
    4f90:	ldr	x0, [sp, #56]
    4f94:	ldp	x29, x30, [sp], #64
    4f98:	ret
    4f9c:	stp	x29, x30, [sp, #-128]!
    4fa0:	mov	x29, sp
    4fa4:	str	x0, [sp, #24]
    4fa8:	str	x1, [sp, #16]
    4fac:	add	x0, sp, #0x28
    4fb0:	ldr	x1, [sp, #16]
    4fb4:	bl	33e4 <_PyDict_SetItemId@plt+0xd64>
    4fb8:	cmn	w0, #0x1
    4fbc:	b.ne	4fc8 <_PyDict_SetItemId@plt+0x2948>  // b.any
    4fc0:	mov	w0, #0xffffffff            	// #-1
    4fc4:	b	5000 <_PyDict_SetItemId@plt+0x2980>
    4fc8:	add	x0, sp, #0x28
    4fcc:	mov	x1, x0
    4fd0:	ldr	x0, [sp, #24]
    4fd4:	bl	2570 <lzma_raw_decoder@plt>
    4fd8:	str	w0, [sp, #124]
    4fdc:	add	x0, sp, #0x28
    4fe0:	bl	3380 <_PyDict_SetItemId@plt+0xd00>
    4fe4:	ldr	w0, [sp, #124]
    4fe8:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    4fec:	cmp	w0, #0x0
    4ff0:	b.eq	4ffc <_PyDict_SetItemId@plt+0x297c>  // b.none
    4ff4:	mov	w0, #0xffffffff            	// #-1
    4ff8:	b	5000 <_PyDict_SetItemId@plt+0x2980>
    4ffc:	mov	w0, #0x0                   	// #0
    5000:	ldp	x29, x30, [sp], #128
    5004:	ret
    5008:	stp	x29, x30, [sp, #-96]!
    500c:	mov	x29, sp
    5010:	str	x0, [sp, #40]
    5014:	str	w1, [sp, #36]
    5018:	str	x2, [sp, #24]
    501c:	str	x3, [sp, #16]
    5020:	mov	w0, #0x5                   	// #5
    5024:	str	w0, [sp, #84]
    5028:	mov	x0, #0xffffffffffffffff    	// #-1
    502c:	str	x0, [sp, #88]
    5030:	ldr	x1, [sp, #24]
    5034:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    5038:	ldr	x0, [x0, #4056]
    503c:	cmp	x1, x0
    5040:	b.eq	5094 <_PyDict_SetItemId@plt+0x2a14>  // b.none
    5044:	ldr	w0, [sp, #36]
    5048:	cmp	w0, #0x3
    504c:	b.ne	5074 <_PyDict_SetItemId@plt+0x29f4>  // b.any
    5050:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    5054:	ldr	x0, [x0, #4008]
    5058:	ldr	x2, [x0]
    505c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5060:	add	x1, x0, #0x48
    5064:	mov	x0, x2
    5068:	bl	2380 <PyErr_SetString@plt>
    506c:	mov	w0, #0xffffffff            	// #-1
    5070:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    5074:	ldr	x0, [sp, #24]
    5078:	bl	22d0 <PyLong_AsUnsignedLongLong@plt>
    507c:	str	x0, [sp, #88]
    5080:	bl	24c0 <PyErr_Occurred@plt>
    5084:	cmp	x0, #0x0
    5088:	b.eq	5094 <_PyDict_SetItemId@plt+0x2a14>  // b.none
    508c:	mov	w0, #0xffffffff            	// #-1
    5090:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    5094:	ldr	w0, [sp, #36]
    5098:	cmp	w0, #0x3
    509c:	b.ne	50d8 <_PyDict_SetItemId@plt+0x2a58>  // b.any
    50a0:	ldr	x1, [sp, #16]
    50a4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    50a8:	ldr	x0, [x0, #4056]
    50ac:	cmp	x1, x0
    50b0:	b.ne	50d8 <_PyDict_SetItemId@plt+0x2a58>  // b.any
    50b4:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    50b8:	ldr	x0, [x0, #4008]
    50bc:	ldr	x2, [x0]
    50c0:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    50c4:	add	x1, x0, #0xa58
    50c8:	mov	x0, x2
    50cc:	bl	2380 <PyErr_SetString@plt>
    50d0:	mov	w0, #0xffffffff            	// #-1
    50d4:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    50d8:	ldr	w0, [sp, #36]
    50dc:	cmp	w0, #0x3
    50e0:	b.eq	511c <_PyDict_SetItemId@plt+0x2a9c>  // b.none
    50e4:	ldr	x1, [sp, #16]
    50e8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    50ec:	ldr	x0, [x0, #4056]
    50f0:	cmp	x1, x0
    50f4:	b.eq	511c <_PyDict_SetItemId@plt+0x2a9c>  // b.none
    50f8:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    50fc:	ldr	x0, [x0, #4008]
    5100:	ldr	x2, [x0]
    5104:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5108:	add	x1, x0, #0x78
    510c:	mov	x0, x2
    5110:	bl	2380 <PyErr_SetString@plt>
    5114:	mov	w0, #0xffffffff            	// #-1
    5118:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    511c:	ldr	x0, [sp, #40]
    5120:	str	xzr, [x0, #32]
    5124:	ldr	x0, [sp, #40]
    5128:	adrp	x1, 2000 <memcpy@plt-0x230>
    512c:	add	x1, x1, #0xaf0
    5130:	str	x1, [x0, #16]
    5134:	ldr	x0, [sp, #40]
    5138:	adrp	x1, 2000 <memcpy@plt-0x230>
    513c:	add	x1, x1, #0xb48
    5140:	str	x1, [x0, #24]
    5144:	ldr	x0, [sp, #40]
    5148:	add	x1, x0, #0x10
    514c:	ldr	x0, [sp, #40]
    5150:	str	x1, [x0, #88]
    5154:	ldr	x0, [sp, #40]
    5158:	str	xzr, [x0, #40]
    515c:	bl	2540 <PyThread_allocate_lock@plt>
    5160:	str	x0, [sp, #72]
    5164:	ldr	x0, [sp, #72]
    5168:	cmp	x0, #0x0
    516c:	b.ne	5194 <_PyDict_SetItemId@plt+0x2b14>  // b.any
    5170:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    5174:	ldr	x0, [x0, #4000]
    5178:	ldr	x2, [x0]
    517c:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    5180:	add	x1, x0, #0xb00
    5184:	mov	x0, x2
    5188:	bl	2380 <PyErr_SetString@plt>
    518c:	mov	w0, #0xffffffff            	// #-1
    5190:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    5194:	ldr	x0, [sp, #40]
    5198:	ldr	x0, [x0, #216]
    519c:	cmp	x0, #0x0
    51a0:	b.eq	51b0 <_PyDict_SetItemId@plt+0x2b30>  // b.none
    51a4:	ldr	x0, [sp, #40]
    51a8:	ldr	x0, [x0, #216]
    51ac:	bl	2670 <PyThread_free_lock@plt>
    51b0:	ldr	x0, [sp, #40]
    51b4:	ldr	x1, [sp, #72]
    51b8:	str	x1, [x0, #216]
    51bc:	ldr	x0, [sp, #40]
    51c0:	mov	w1, #0x10                  	// #16
    51c4:	str	w1, [x0, #176]
    51c8:	ldr	x0, [sp, #40]
    51cc:	mov	w1, #0x1                   	// #1
    51d0:	strb	w1, [x0, #192]
    51d4:	ldr	x0, [sp, #40]
    51d8:	str	xzr, [x0, #200]
    51dc:	ldr	x0, [sp, #40]
    51e0:	str	xzr, [x0, #208]
    51e4:	ldr	x0, [sp, #40]
    51e8:	ldr	x0, [x0, #184]
    51ec:	str	x0, [sp, #64]
    51f0:	mov	x1, #0x0                   	// #0
    51f4:	mov	x0, #0x0                   	// #0
    51f8:	bl	2310 <PyBytes_FromStringAndSize@plt>
    51fc:	mov	x1, x0
    5200:	ldr	x0, [sp, #40]
    5204:	str	x1, [x0, #184]
    5208:	ldr	x0, [sp, #64]
    520c:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    5210:	ldr	x0, [sp, #40]
    5214:	ldr	x0, [x0, #184]
    5218:	cmp	x0, #0x0
    521c:	b.eq	534c <_PyDict_SetItemId@plt+0x2ccc>  // b.none
    5220:	ldr	w0, [sp, #36]
    5224:	cmp	w0, #0x3
    5228:	b.eq	5300 <_PyDict_SetItemId@plt+0x2c80>  // b.none
    522c:	ldr	w0, [sp, #36]
    5230:	cmp	w0, #0x3
    5234:	b.gt	5328 <_PyDict_SetItemId@plt+0x2ca8>
    5238:	ldr	w0, [sp, #36]
    523c:	cmp	w0, #0x2
    5240:	b.eq	52cc <_PyDict_SetItemId@plt+0x2c4c>  // b.none
    5244:	ldr	w0, [sp, #36]
    5248:	cmp	w0, #0x2
    524c:	b.gt	5328 <_PyDict_SetItemId@plt+0x2ca8>
    5250:	ldr	w0, [sp, #36]
    5254:	cmp	w0, #0x0
    5258:	b.eq	526c <_PyDict_SetItemId@plt+0x2bec>  // b.none
    525c:	ldr	w0, [sp, #36]
    5260:	cmp	w0, #0x1
    5264:	b.eq	529c <_PyDict_SetItemId@plt+0x2c1c>  // b.none
    5268:	b	5328 <_PyDict_SetItemId@plt+0x2ca8>
    526c:	ldr	x0, [sp, #40]
    5270:	add	x0, x0, #0x28
    5274:	ldr	w2, [sp, #84]
    5278:	ldr	x1, [sp, #88]
    527c:	bl	2410 <lzma_auto_decoder@plt>
    5280:	str	w0, [sp, #60]
    5284:	ldr	w0, [sp, #60]
    5288:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    528c:	cmp	w0, #0x0
    5290:	b.ne	5354 <_PyDict_SetItemId@plt+0x2cd4>  // b.any
    5294:	mov	w0, #0x0                   	// #0
    5298:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    529c:	ldr	x0, [sp, #40]
    52a0:	add	x0, x0, #0x28
    52a4:	ldr	w2, [sp, #84]
    52a8:	ldr	x1, [sp, #88]
    52ac:	bl	24e0 <lzma_stream_decoder@plt>
    52b0:	str	w0, [sp, #60]
    52b4:	ldr	w0, [sp, #60]
    52b8:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    52bc:	cmp	w0, #0x0
    52c0:	b.ne	535c <_PyDict_SetItemId@plt+0x2cdc>  // b.any
    52c4:	mov	w0, #0x0                   	// #0
    52c8:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    52cc:	ldr	x0, [sp, #40]
    52d0:	str	wzr, [x0, #176]
    52d4:	ldr	x0, [sp, #40]
    52d8:	add	x0, x0, #0x28
    52dc:	ldr	x1, [sp, #88]
    52e0:	bl	24f0 <lzma_alone_decoder@plt>
    52e4:	str	w0, [sp, #60]
    52e8:	ldr	w0, [sp, #60]
    52ec:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    52f0:	cmp	w0, #0x0
    52f4:	b.ne	5364 <_PyDict_SetItemId@plt+0x2ce4>  // b.any
    52f8:	mov	w0, #0x0                   	// #0
    52fc:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    5300:	ldr	x0, [sp, #40]
    5304:	str	wzr, [x0, #176]
    5308:	ldr	x0, [sp, #40]
    530c:	add	x0, x0, #0x28
    5310:	ldr	x1, [sp, #16]
    5314:	bl	4f9c <_PyDict_SetItemId@plt+0x291c>
    5318:	cmn	w0, #0x1
    531c:	b.eq	536c <_PyDict_SetItemId@plt+0x2cec>  // b.none
    5320:	mov	w0, #0x0                   	// #0
    5324:	b	53bc <_PyDict_SetItemId@plt+0x2d3c>
    5328:	adrp	x0, 17000 <PyInit__lzma@@Base+0x119c8>
    532c:	ldr	x0, [x0, #4008]
    5330:	ldr	x3, [x0]
    5334:	ldr	w2, [sp, #36]
    5338:	adrp	x0, 6000 <PyInit__lzma@@Base+0x9c8>
    533c:	add	x1, x0, #0xb18
    5340:	mov	x0, x3
    5344:	bl	25f0 <PyErr_Format@plt>
    5348:	b	5370 <_PyDict_SetItemId@plt+0x2cf0>
    534c:	nop
    5350:	b	5370 <_PyDict_SetItemId@plt+0x2cf0>
    5354:	nop
    5358:	b	5370 <_PyDict_SetItemId@plt+0x2cf0>
    535c:	nop
    5360:	b	5370 <_PyDict_SetItemId@plt+0x2cf0>
    5364:	nop
    5368:	b	5370 <_PyDict_SetItemId@plt+0x2cf0>
    536c:	nop
    5370:	ldr	x0, [sp, #40]
    5374:	ldr	x0, [x0, #184]
    5378:	str	x0, [sp, #48]
    537c:	ldr	x0, [sp, #48]
    5380:	cmp	x0, #0x0
    5384:	b.eq	53a4 <_PyDict_SetItemId@plt+0x2d24>  // b.none
    5388:	ldr	x0, [sp, #40]
    538c:	str	xzr, [x0, #184]
    5390:	ldr	x2, [sp, #48]
    5394:	mov	w1, #0x4c0                 	// #1216
    5398:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    539c:	add	x0, x0, #0xc98
    53a0:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    53a4:	ldr	x0, [sp, #40]
    53a8:	ldr	x0, [x0, #216]
    53ac:	bl	2670 <PyThread_free_lock@plt>
    53b0:	ldr	x0, [sp, #40]
    53b4:	str	xzr, [x0, #216]
    53b8:	mov	w0, #0xffffffff            	// #-1
    53bc:	ldp	x29, x30, [sp], #96
    53c0:	ret
    53c4:	stp	x29, x30, [sp, #-48]!
    53c8:	mov	x29, sp
    53cc:	str	x0, [sp, #24]
    53d0:	ldr	x0, [sp, #24]
    53d4:	ldr	x0, [x0, #200]
    53d8:	cmp	x0, #0x0
    53dc:	b.eq	53ec <_PyDict_SetItemId@plt+0x2d6c>  // b.none
    53e0:	ldr	x0, [sp, #24]
    53e4:	ldr	x0, [x0, #200]
    53e8:	bl	22a0 <PyMem_Free@plt>
    53ec:	ldr	x0, [sp, #24]
    53f0:	add	x0, x0, #0x28
    53f4:	bl	2500 <lzma_end@plt>
    53f8:	ldr	x0, [sp, #24]
    53fc:	ldr	x0, [x0, #184]
    5400:	str	x0, [sp, #40]
    5404:	ldr	x0, [sp, #40]
    5408:	cmp	x0, #0x0
    540c:	b.eq	542c <_PyDict_SetItemId@plt+0x2dac>  // b.none
    5410:	ldr	x0, [sp, #24]
    5414:	str	xzr, [x0, #184]
    5418:	ldr	x2, [sp, #40]
    541c:	mov	w1, #0x4cd                 	// #1229
    5420:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    5424:	add	x0, x0, #0xc98
    5428:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    542c:	ldr	x0, [sp, #24]
    5430:	ldr	x0, [x0, #216]
    5434:	cmp	x0, #0x0
    5438:	b.eq	5448 <_PyDict_SetItemId@plt+0x2dc8>  // b.none
    543c:	ldr	x0, [sp, #24]
    5440:	ldr	x0, [x0, #216]
    5444:	bl	2670 <PyThread_free_lock@plt>
    5448:	ldr	x0, [sp, #24]
    544c:	ldr	x0, [x0, #8]
    5450:	ldr	x1, [x0, #320]
    5454:	ldr	x0, [sp, #24]
    5458:	blr	x1
    545c:	nop
    5460:	ldp	x29, x30, [sp], #48
    5464:	ret
    5468:	stp	x29, x30, [sp, #-32]!
    546c:	mov	x29, sp
    5470:	str	x0, [sp, #24]
    5474:	str	w1, [sp, #20]
    5478:	ldr	w0, [sp, #20]
    547c:	bl	2600 <lzma_check_is_supported@plt>
    5480:	and	w0, w0, #0xff
    5484:	and	x0, x0, #0xff
    5488:	bl	2470 <PyBool_FromLong@plt>
    548c:	ldp	x29, x30, [sp], #32
    5490:	ret
    5494:	stp	x29, x30, [sp, #-64]!
    5498:	mov	x29, sp
    549c:	str	x0, [sp, #40]
    54a0:	stp	x1, x2, [sp, #24]
    54a4:	str	xzr, [sp, #56]
    54a8:	add	x1, sp, #0x18
    54ac:	add	x0, sp, #0x30
    54b0:	bl	23f0 <lzma_properties_size@plt>
    54b4:	str	w0, [sp, #52]
    54b8:	ldr	w0, [sp, #52]
    54bc:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    54c0:	cmp	w0, #0x0
    54c4:	b.ne	5518 <_PyDict_SetItemId@plt+0x2e98>  // b.any
    54c8:	ldr	w0, [sp, #48]
    54cc:	mov	w0, w0
    54d0:	mov	x1, x0
    54d4:	mov	x0, #0x0                   	// #0
    54d8:	bl	2310 <PyBytes_FromStringAndSize@plt>
    54dc:	str	x0, [sp, #56]
    54e0:	ldr	x0, [sp, #56]
    54e4:	cmp	x0, #0x0
    54e8:	b.eq	5520 <_PyDict_SetItemId@plt+0x2ea0>  // b.none
    54ec:	ldr	x0, [sp, #56]
    54f0:	add	x1, x0, #0x20
    54f4:	add	x0, sp, #0x18
    54f8:	bl	25b0 <lzma_properties_encode@plt>
    54fc:	str	w0, [sp, #52]
    5500:	ldr	w0, [sp, #52]
    5504:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    5508:	cmp	w0, #0x0
    550c:	b.ne	5528 <_PyDict_SetItemId@plt+0x2ea8>  // b.any
    5510:	ldr	x0, [sp, #56]
    5514:	b	5538 <_PyDict_SetItemId@plt+0x2eb8>
    5518:	nop
    551c:	b	552c <_PyDict_SetItemId@plt+0x2eac>
    5520:	nop
    5524:	b	552c <_PyDict_SetItemId@plt+0x2eac>
    5528:	nop
    552c:	ldr	x0, [sp, #56]
    5530:	bl	2894 <_PyDict_SetItemId@plt+0x214>
    5534:	mov	x0, #0x0                   	// #0
    5538:	ldp	x29, x30, [sp], #64
    553c:	ret
    5540:	stp	x29, x30, [sp, #-80]!
    5544:	mov	x29, sp
    5548:	str	x0, [sp, #40]
    554c:	str	x1, [sp, #32]
    5550:	str	x2, [sp, #24]
    5554:	str	xzr, [sp, #72]
    5558:	ldr	x0, [sp, #32]
    555c:	str	x0, [sp, #48]
    5560:	ldr	x0, [sp, #24]
    5564:	ldr	x1, [x0]
    5568:	ldr	x0, [sp, #24]
    556c:	ldr	x0, [x0, #16]
    5570:	mov	x2, x0
    5574:	add	x0, sp, #0x30
    5578:	mov	x3, x2
    557c:	mov	x2, x1
    5580:	mov	x1, #0x0                   	// #0
    5584:	bl	24b0 <lzma_properties_decode@plt>
    5588:	str	w0, [sp, #68]
    558c:	ldr	w0, [sp, #68]
    5590:	bl	28cc <_PyDict_SetItemId@plt+0x24c>
    5594:	cmp	w0, #0x0
    5598:	b.eq	55a4 <_PyDict_SetItemId@plt+0x2f24>  // b.none
    559c:	mov	x0, #0x0                   	// #0
    55a0:	b	55bc <_PyDict_SetItemId@plt+0x2f3c>
    55a4:	add	x0, sp, #0x30
    55a8:	bl	3580 <_PyDict_SetItemId@plt+0xf00>
    55ac:	str	x0, [sp, #72]
    55b0:	ldr	x0, [sp, #56]
    55b4:	bl	2530 <free@plt>
    55b8:	ldr	x0, [sp, #72]
    55bc:	ldp	x29, x30, [sp], #80
    55c0:	ret
    55c4:	stp	x29, x30, [sp, #-64]!
    55c8:	mov	x29, sp
    55cc:	str	x0, [sp, #40]
    55d0:	str	x1, [sp, #32]
    55d4:	str	x2, [sp, #24]
    55d8:	ldr	x0, [sp, #24]
    55dc:	bl	2620 <PyLong_FromLongLong@plt>
    55e0:	str	x0, [sp, #56]
    55e4:	ldr	x0, [sp, #56]
    55e8:	cmp	x0, #0x0
    55ec:	b.ne	55f8 <_PyDict_SetItemId@plt+0x2f78>  // b.any
    55f0:	mov	w0, #0xffffffff            	// #-1
    55f4:	b	5630 <_PyDict_SetItemId@plt+0x2fb0>
    55f8:	ldr	x2, [sp, #56]
    55fc:	ldr	x1, [sp, #32]
    5600:	ldr	x0, [sp, #40]
    5604:	bl	25d0 <PyModule_AddObject@plt>
    5608:	cmp	w0, #0x0
    560c:	b.ne	5618 <_PyDict_SetItemId@plt+0x2f98>  // b.any
    5610:	mov	w0, #0x0                   	// #0
    5614:	b	5630 <_PyDict_SetItemId@plt+0x2fb0>
    5618:	ldr	x2, [sp, #56]
    561c:	mov	w1, #0x597                 	// #1431
    5620:	adrp	x0, 5000 <_PyDict_SetItemId@plt+0x2980>
    5624:	add	x0, x0, #0xc98
    5628:	bl	2848 <_PyDict_SetItemId@plt+0x1c8>
    562c:	mov	w0, #0xffffffff            	// #-1
    5630:	ldp	x29, x30, [sp], #64
    5634:	ret

0000000000005638 <PyInit__lzma@@Base>:
    5638:	stp	x29, x30, [sp, #-32]!
    563c:	mov	x29, sp
    5640:	mov	x0, #0x0                   	// #0
    5644:	bl	2490 <PyTuple_New@plt>
    5648:	mov	x1, x0
    564c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5650:	add	x0, x0, #0x9c8
    5654:	str	x1, [x0]
    5658:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    565c:	add	x0, x0, #0x9c8
    5660:	ldr	x0, [x0]
    5664:	cmp	x0, #0x0
    5668:	b.ne	5674 <PyInit__lzma@@Base+0x3c>  // b.any
    566c:	mov	x0, #0x0                   	// #0
    5670:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5674:	mov	w1, #0x3f5                 	// #1013
    5678:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    567c:	add	x0, x0, #0x420
    5680:	bl	24d0 <PyModule_Create2@plt>
    5684:	str	x0, [sp, #24]
    5688:	ldr	x0, [sp, #24]
    568c:	cmp	x0, #0x0
    5690:	b.ne	569c <PyInit__lzma@@Base+0x64>  // b.any
    5694:	mov	x0, #0x0                   	// #0
    5698:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    569c:	mov	x2, #0x0                   	// #0
    56a0:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    56a4:	add	x1, x0, #0x228
    56a8:	ldr	x0, [sp, #24]
    56ac:	bl	2250 <PyModule_AddIntConstant@plt>
    56b0:	cmn	w0, #0x1
    56b4:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    56b8:	mov	x2, #0x1                   	// #1
    56bc:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    56c0:	add	x1, x0, #0x238
    56c4:	ldr	x0, [sp, #24]
    56c8:	bl	2250 <PyModule_AddIntConstant@plt>
    56cc:	cmn	w0, #0x1
    56d0:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    56d4:	mov	x2, #0x2                   	// #2
    56d8:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    56dc:	add	x1, x0, #0x248
    56e0:	ldr	x0, [sp, #24]
    56e4:	bl	2250 <PyModule_AddIntConstant@plt>
    56e8:	cmn	w0, #0x1
    56ec:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    56f0:	mov	x2, #0x3                   	// #3
    56f4:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    56f8:	add	x1, x0, #0x258
    56fc:	ldr	x0, [sp, #24]
    5700:	bl	2250 <PyModule_AddIntConstant@plt>
    5704:	cmn	w0, #0x1
    5708:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    570c:	mov	x2, #0x0                   	// #0
    5710:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5714:	add	x1, x0, #0x268
    5718:	ldr	x0, [sp, #24]
    571c:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5720:	cmn	w0, #0x1
    5724:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5728:	mov	x2, #0x1                   	// #1
    572c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5730:	add	x1, x0, #0x278
    5734:	ldr	x0, [sp, #24]
    5738:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    573c:	cmn	w0, #0x1
    5740:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5744:	mov	x2, #0x4                   	// #4
    5748:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    574c:	add	x1, x0, #0x288
    5750:	ldr	x0, [sp, #24]
    5754:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5758:	cmn	w0, #0x1
    575c:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5760:	mov	x2, #0xa                   	// #10
    5764:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5768:	add	x1, x0, #0x298
    576c:	ldr	x0, [sp, #24]
    5770:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5774:	cmn	w0, #0x1
    5778:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    577c:	mov	x2, #0xf                   	// #15
    5780:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5784:	add	x1, x0, #0x2a8
    5788:	ldr	x0, [sp, #24]
    578c:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5790:	cmn	w0, #0x1
    5794:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5798:	mov	x2, #0x10                  	// #16
    579c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    57a0:	add	x1, x0, #0x2b8
    57a4:	ldr	x0, [sp, #24]
    57a8:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    57ac:	cmn	w0, #0x1
    57b0:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    57b4:	mov	x2, #0x1                   	// #1
    57b8:	movk	x2, #0x4000, lsl #48
    57bc:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    57c0:	add	x1, x0, #0x2c8
    57c4:	ldr	x0, [sp, #24]
    57c8:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    57cc:	cmn	w0, #0x1
    57d0:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    57d4:	mov	x2, #0x21                  	// #33
    57d8:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    57dc:	add	x1, x0, #0x2d8
    57e0:	ldr	x0, [sp, #24]
    57e4:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    57e8:	cmn	w0, #0x1
    57ec:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    57f0:	mov	x2, #0x3                   	// #3
    57f4:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    57f8:	add	x1, x0, #0x2e8
    57fc:	ldr	x0, [sp, #24]
    5800:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5804:	cmn	w0, #0x1
    5808:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    580c:	mov	x2, #0x4                   	// #4
    5810:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5814:	add	x1, x0, #0x2f8
    5818:	ldr	x0, [sp, #24]
    581c:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5820:	cmn	w0, #0x1
    5824:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5828:	mov	x2, #0x6                   	// #6
    582c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5830:	add	x1, x0, #0x308
    5834:	ldr	x0, [sp, #24]
    5838:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    583c:	cmn	w0, #0x1
    5840:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5844:	mov	x2, #0x7                   	// #7
    5848:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    584c:	add	x1, x0, #0x318
    5850:	ldr	x0, [sp, #24]
    5854:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5858:	cmn	w0, #0x1
    585c:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5860:	mov	x2, #0x8                   	// #8
    5864:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5868:	add	x1, x0, #0x328
    586c:	ldr	x0, [sp, #24]
    5870:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5874:	cmn	w0, #0x1
    5878:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    587c:	mov	x2, #0x9                   	// #9
    5880:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5884:	add	x1, x0, #0x338
    5888:	ldr	x0, [sp, #24]
    588c:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5890:	cmn	w0, #0x1
    5894:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5898:	mov	x2, #0x5                   	// #5
    589c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    58a0:	add	x1, x0, #0x348
    58a4:	ldr	x0, [sp, #24]
    58a8:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    58ac:	cmn	w0, #0x1
    58b0:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    58b4:	mov	x2, #0x3                   	// #3
    58b8:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    58bc:	add	x1, x0, #0x358
    58c0:	ldr	x0, [sp, #24]
    58c4:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    58c8:	cmn	w0, #0x1
    58cc:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    58d0:	mov	x2, #0x4                   	// #4
    58d4:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    58d8:	add	x1, x0, #0x360
    58dc:	ldr	x0, [sp, #24]
    58e0:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    58e4:	cmn	w0, #0x1
    58e8:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    58ec:	mov	x2, #0x12                  	// #18
    58f0:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    58f4:	add	x1, x0, #0x368
    58f8:	ldr	x0, [sp, #24]
    58fc:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5900:	cmn	w0, #0x1
    5904:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5908:	mov	x2, #0x13                  	// #19
    590c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5910:	add	x1, x0, #0x370
    5914:	ldr	x0, [sp, #24]
    5918:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    591c:	cmn	w0, #0x1
    5920:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5924:	mov	x2, #0x14                  	// #20
    5928:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    592c:	add	x1, x0, #0x378
    5930:	ldr	x0, [sp, #24]
    5934:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5938:	cmn	w0, #0x1
    593c:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5940:	mov	x2, #0x1                   	// #1
    5944:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5948:	add	x1, x0, #0x380
    594c:	ldr	x0, [sp, #24]
    5950:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5954:	cmn	w0, #0x1
    5958:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    595c:	mov	x2, #0x2                   	// #2
    5960:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5964:	add	x1, x0, #0x390
    5968:	ldr	x0, [sp, #24]
    596c:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    5970:	cmn	w0, #0x1
    5974:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5978:	mov	x2, #0x6                   	// #6
    597c:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5980:	add	x1, x0, #0x3a0
    5984:	ldr	x0, [sp, #24]
    5988:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    598c:	cmn	w0, #0x1
    5990:	b.eq	59b0 <PyInit__lzma@@Base+0x378>  // b.none
    5994:	mov	x2, #0x80000000            	// #2147483648
    5998:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    599c:	add	x1, x0, #0x3b0
    59a0:	ldr	x0, [sp, #24]
    59a4:	bl	55c4 <_PyDict_SetItemId@plt+0x2f44>
    59a8:	cmn	w0, #0x1
    59ac:	b.ne	59b8 <PyInit__lzma@@Base+0x380>  // b.any
    59b0:	mov	x0, #0x0                   	// #0
    59b4:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    59b8:	mov	x3, #0x0                   	// #0
    59bc:	mov	x2, #0x0                   	// #0
    59c0:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    59c4:	add	x1, x0, #0x3c0
    59c8:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    59cc:	add	x0, x0, #0x3d8
    59d0:	bl	2340 <PyErr_NewExceptionWithDoc@plt>
    59d4:	mov	x1, x0
    59d8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    59dc:	add	x0, x0, #0x9c0
    59e0:	str	x1, [x0]
    59e4:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    59e8:	add	x0, x0, #0x9c0
    59ec:	ldr	x0, [x0]
    59f0:	cmp	x0, #0x0
    59f4:	b.ne	5a00 <PyInit__lzma@@Base+0x3c8>  // b.any
    59f8:	mov	x0, #0x0                   	// #0
    59fc:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5a00:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5a04:	add	x0, x0, #0x9c0
    5a08:	ldr	x0, [x0]
    5a0c:	bl	2820 <_PyDict_SetItemId@plt+0x1a0>
    5a10:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5a14:	add	x0, x0, #0x9c0
    5a18:	ldr	x0, [x0]
    5a1c:	mov	x2, x0
    5a20:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5a24:	add	x1, x0, #0x3e8
    5a28:	ldr	x0, [sp, #24]
    5a2c:	bl	25d0 <PyModule_AddObject@plt>
    5a30:	cmn	w0, #0x1
    5a34:	b.ne	5a40 <PyInit__lzma@@Base+0x408>  // b.any
    5a38:	mov	x0, #0x0                   	// #0
    5a3c:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5a40:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5a44:	add	x0, x0, #0x678
    5a48:	bl	2420 <PyType_Ready@plt>
    5a4c:	cmn	w0, #0x1
    5a50:	b.ne	5a5c <PyInit__lzma@@Base+0x424>  // b.any
    5a54:	mov	x0, #0x0                   	// #0
    5a58:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5a5c:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5a60:	add	x0, x0, #0x678
    5a64:	bl	2820 <_PyDict_SetItemId@plt+0x1a0>
    5a68:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5a6c:	add	x2, x0, #0x678
    5a70:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5a74:	add	x1, x0, #0x3f8
    5a78:	ldr	x0, [sp, #24]
    5a7c:	bl	25d0 <PyModule_AddObject@plt>
    5a80:	cmn	w0, #0x1
    5a84:	b.ne	5a90 <PyInit__lzma@@Base+0x458>  // b.any
    5a88:	mov	x0, #0x0                   	// #0
    5a8c:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5a90:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5a94:	add	x0, x0, #0x818
    5a98:	bl	2420 <PyType_Ready@plt>
    5a9c:	cmn	w0, #0x1
    5aa0:	b.ne	5aac <PyInit__lzma@@Base+0x474>  // b.any
    5aa4:	mov	x0, #0x0                   	// #0
    5aa8:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5aac:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5ab0:	add	x0, x0, #0x818
    5ab4:	bl	2820 <_PyDict_SetItemId@plt+0x1a0>
    5ab8:	adrp	x0, 18000 <PyInit__lzma@@Base+0x129c8>
    5abc:	add	x2, x0, #0x818
    5ac0:	adrp	x0, 7000 <PyInit__lzma@@Base+0x19c8>
    5ac4:	add	x1, x0, #0x408
    5ac8:	ldr	x0, [sp, #24]
    5acc:	bl	25d0 <PyModule_AddObject@plt>
    5ad0:	cmn	w0, #0x1
    5ad4:	b.ne	5ae0 <PyInit__lzma@@Base+0x4a8>  // b.any
    5ad8:	mov	x0, #0x0                   	// #0
    5adc:	b	5ae4 <PyInit__lzma@@Base+0x4ac>
    5ae0:	ldr	x0, [sp, #24]
    5ae4:	ldp	x29, x30, [sp], #32
    5ae8:	ret

Disassembly of section .fini:

0000000000005aec <.fini>:
    5aec:	stp	x29, x30, [sp, #-16]!
    5af0:	mov	x29, sp
    5af4:	ldp	x29, x30, [sp], #16
    5af8:	ret
