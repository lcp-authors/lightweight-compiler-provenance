
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//sfs.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xdf8>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	mov	x29, sp
   8:	stp	x21, x22, [sp, #32]
   c:	mov	x22, x0
  10:	ldr	x21, [x0]
  14:	stp	x19, x20, [sp, #16]
  18:	mov	w19, #0x200                 	// #512
  1c:	ldr	w0, [x21, #176]
  20:	lsl	w0, w19, w0
  24:	sxtw	x0, w0
  28:	bl	0 <grub_malloc>
  2c:	cbz	x0, 110 <grub_mod_init-0xce8>
  30:	ldr	w1, [x21, #176]
  34:	mov	x4, x0
  38:	ldr	w5, [x22, #8]
  3c:	mov	x20, x0
  40:	ldr	x0, [x21, #168]
  44:	lsl	w3, w19, w1
  48:	sxtw	x3, w3
  4c:	mov	x2, #0x0                   	// #0
  50:	lsl	x1, x5, x1
  54:	bl	0 <grub_disk_read>
  58:	adrp	x0, 0 <grub_mod_init-0xdf8>
  5c:	ldr	x0, [x0]
  60:	ldr	w0, [x0]
  64:	cbnz	w0, 128 <grub_mod_init-0xcd0>
  68:	ldr	w0, [x21, #176]
  6c:	lsl	w0, w19, w0
  70:	lsl	w0, w0, #1
  74:	sub	w0, w0, #0x2f
  78:	sxtw	x0, w0
  7c:	bl	0 <grub_malloc>
  80:	mov	x22, x0
  84:	cbz	x0, f4 <grub_mod_init-0xd04>
  88:	ldr	w8, [x21, #176]
  8c:	add	x1, x20, #0x18
  90:	mov	x7, x0
  94:	lsl	w8, w19, w8
  98:	add	x8, x20, w8, sxtw
  9c:	b	b4 <grub_mod_init-0xd44>
  a0:	strb	w2, [x6], #1
  a4:	add	x1, x1, #0x1
  a8:	cmp	x8, x1
  ac:	mov	x7, x6
  b0:	b.eq	f0 <grub_mod_init-0xd08>  // b.none
  b4:	ldrb	w2, [x1]
  b8:	mov	x5, x7
  bc:	mov	x6, x7
  c0:	lsr	w3, w2, #6
  c4:	orr	w3, w3, #0xffffffc0
  c8:	tbz	w2, #7, a0 <grub_mod_init-0xd58>
  cc:	strb	w3, [x5], #2
  d0:	add	x1, x1, #0x1
  d4:	ldurb	w2, [x1, #-1]
  d8:	cmp	x8, x1
  dc:	and	w2, w2, #0x3f
  e0:	orr	w2, w2, #0xffffff80
  e4:	strb	w2, [x7, #1]
  e8:	mov	x7, x5
  ec:	b.ne	b4 <grub_mod_init-0xd44>  // b.any
  f0:	strb	wzr, [x7]
  f4:	mov	x0, x20
  f8:	bl	0 <grub_free>
  fc:	mov	x0, x22
 100:	ldp	x19, x20, [sp, #16]
 104:	ldp	x21, x22, [sp, #32]
 108:	ldp	x29, x30, [sp], #48
 10c:	ret
 110:	mov	x22, #0x0                   	// #0
 114:	mov	x0, x22
 118:	ldp	x19, x20, [sp, #16]
 11c:	ldp	x21, x22, [sp, #32]
 120:	ldp	x29, x30, [sp], #48
 124:	ret
 128:	mov	x0, x20
 12c:	mov	x22, #0x0                   	// #0
 130:	bl	0 <grub_free>
 134:	mov	x0, x22
 138:	ldp	x19, x20, [sp, #16]
 13c:	ldp	x21, x22, [sp, #32]
 140:	ldp	x29, x30, [sp], #48
 144:	ret
	...
 150:	stp	x29, x30, [sp, #-48]!
 154:	mov	x29, sp
 158:	stp	x19, x20, [sp, #16]
 15c:	mov	x20, x0
 160:	mov	x0, #0xc0                  	// #192
 164:	bl	0 <grub_malloc>
 168:	mov	x19, x0
 16c:	cbz	x0, 28c <grub_mod_init-0xb6c>
 170:	mov	x4, x0
 174:	mov	x3, #0x70                  	// #112
 178:	mov	x0, x20
 17c:	mov	x2, #0x0                   	// #0
 180:	mov	x1, #0x0                   	// #0
 184:	stp	x21, x22, [sp, #32]
 188:	bl	0 <grub_disk_read>
 18c:	adrp	x0, 0 <grub_mod_init-0xdf8>
 190:	ldr	x22, [x0]
 194:	ldr	w0, [x22]
 198:	cbnz	w0, 2e4 <grub_mod_init-0xb14>
 19c:	adrp	x1, 0 <grub_mod_init-0xdf8>
 1a0:	mov	x0, x19
 1a4:	mov	x2, #0x4                   	// #4
 1a8:	ldr	x1, [x1]
 1ac:	bl	0 <grub_strncmp>
 1b0:	cbnz	w0, 29c <grub_mod_init-0xb5c>
 1b4:	ldr	w2, [x19, #52]
 1b8:	cbz	w2, 29c <grub_mod_init-0xb5c>
 1bc:	sub	w0, w2, #0x1
 1c0:	mov	w1, #0xf0                  	// #240
 1c4:	movk	w1, #0xff01, lsl #16
 1c8:	orr	w0, w0, w1
 1cc:	tst	w0, w2
 1d0:	b.ne	29c <grub_mod_init-0xb5c>  // b.any
 1d4:	rev	w2, w2
 1d8:	cmp	w2, #0x200
 1dc:	b.ls	30c <grub_mod_init-0xaec>  // b.plast
 1e0:	mov	w1, #0x9                   	// #9
 1e4:	mov	w4, #0x1                   	// #1
 1e8:	mov	w0, w1
 1ec:	add	w1, w1, #0x1
 1f0:	lsl	w3, w4, w1
 1f4:	cmp	w3, w2
 1f8:	b.cc	1e8 <grub_mod_init-0xc10>  // b.lo, b.ul, b.last
 1fc:	sub	w1, w0, #0x8
 200:	mov	w0, #0x200                 	// #512
 204:	lsl	w0, w0, w1
 208:	sxtw	x0, w0
 20c:	ldrsb	w3, [x19, #20]
 210:	mov	w2, #0x100                 	// #256
 214:	cmp	w3, #0x0
 218:	csel	w2, wzr, w2, lt  // lt = tstop
 21c:	stp	w1, w2, [x19, #176]
 220:	bl	0 <grub_malloc>
 224:	mov	x21, x0
 228:	cbz	x0, 304 <grub_mod_init-0xaf4>
 22c:	ldr	w5, [x19, #176]
 230:	mov	w3, #0x200                 	// #512
 234:	ldr	w1, [x19, #104]
 238:	mov	x4, x0
 23c:	mov	x2, #0x0                   	// #0
 240:	mov	x0, x20
 244:	rev	w1, w1
 248:	lsl	w3, w3, w5
 24c:	sxtw	x3, w3
 250:	lsl	x1, x1, x5
 254:	bl	0 <grub_disk_read>
 258:	ldr	w0, [x22]
 25c:	cbnz	w0, 2b4 <grub_mod_init-0xb44>
 260:	ldr	w1, [x21, #40]
 264:	add	x0, x21, #0x31
 268:	str	x19, [x19, #112]
 26c:	rev	w1, w1
 270:	stp	w1, wzr, [x19, #120]
 274:	stp	xzr, x20, [x19, #160]
 278:	bl	0 <grub_strdup>
 27c:	str	x0, [x19, #184]
 280:	mov	x0, x21
 284:	bl	0 <grub_free>
 288:	ldp	x21, x22, [sp, #32]
 28c:	mov	x0, x19
 290:	ldp	x19, x20, [sp, #16]
 294:	ldp	x29, x30, [sp], #48
 298:	ret
 29c:	adrp	x1, 0 <grub_mod_init-0xdf8>
 2a0:	mov	w0, #0x9                   	// #9
 2a4:	mov	x21, #0x0                   	// #0
 2a8:	ldr	x1, [x1]
 2ac:	bl	0 <grub_error>
 2b0:	ldr	w0, [x22]
 2b4:	cmp	w0, #0xb
 2b8:	b.eq	2f0 <grub_mod_init-0xb08>  // b.none
 2bc:	mov	x0, x19
 2c0:	bl	0 <grub_free>
 2c4:	mov	x0, x21
 2c8:	mov	x19, #0x0                   	// #0
 2cc:	bl	0 <grub_free>
 2d0:	mov	x0, x19
 2d4:	ldp	x19, x20, [sp, #16]
 2d8:	ldp	x21, x22, [sp, #32]
 2dc:	ldp	x29, x30, [sp], #48
 2e0:	ret
 2e4:	cmp	w0, #0xb
 2e8:	mov	x21, #0x0                   	// #0
 2ec:	b.ne	2bc <grub_mod_init-0xb3c>  // b.any
 2f0:	adrp	x1, 0 <grub_mod_init-0xdf8>
 2f4:	mov	w0, #0x9                   	// #9
 2f8:	ldr	x1, [x1]
 2fc:	bl	0 <grub_error>
 300:	b	2bc <grub_mod_init-0xb3c>
 304:	ldr	w0, [x22]
 308:	b	2b4 <grub_mod_init-0xb44>
 30c:	mov	w1, #0x0                   	// #0
 310:	mov	x0, #0x200                 	// #512
 314:	b	20c <grub_mod_init-0xbec>
	...
 338:	stp	x29, x30, [sp, #-48]!
 33c:	mov	x29, sp
 340:	ldr	x0, [x0]
 344:	stp	x19, x20, [sp, #16]
 348:	str	x21, [sp, #32]
 34c:	mov	x21, x1
 350:	bl	150 <grub_mod_init-0xca8>
 354:	mov	x19, x0
 358:	cbz	x0, 3ec <grub_mod_init-0xa0c>
 35c:	ldr	x0, [x0, #184]
 360:	bl	0 <grub_strlen>
 364:	mov	x20, x0
 368:	lsl	x0, x0, #1
 36c:	add	x0, x0, #0x1
 370:	bl	0 <grub_malloc>
 374:	str	x0, [x21]
 378:	mov	x3, x0
 37c:	cbz	x0, 3e4 <grub_mod_init-0xa14>
 380:	ldr	x1, [x19, #184]
 384:	cbz	x20, 3e0 <grub_mod_init-0xa18>
 388:	add	x0, x1, x20
 38c:	b	3a4 <grub_mod_init-0xa54>
 390:	strb	w2, [x6], #1
 394:	add	x1, x1, #0x1
 398:	cmp	x1, x0
 39c:	mov	x3, x6
 3a0:	b.eq	3e0 <grub_mod_init-0xa18>  // b.none
 3a4:	ldrb	w2, [x1]
 3a8:	mov	x5, x3
 3ac:	mov	x6, x3
 3b0:	lsr	w4, w2, #6
 3b4:	orr	w4, w4, #0xffffffc0
 3b8:	tbz	w2, #7, 390 <grub_mod_init-0xa68>
 3bc:	strb	w4, [x5], #2
 3c0:	add	x1, x1, #0x1
 3c4:	ldurb	w2, [x1, #-1]
 3c8:	cmp	x1, x0
 3cc:	and	w2, w2, #0x3f
 3d0:	orr	w2, w2, #0xffffff80
 3d4:	strb	w2, [x3, #1]
 3d8:	mov	x3, x5
 3dc:	b.ne	3a4 <grub_mod_init-0xa54>  // b.any
 3e0:	strb	wzr, [x3]
 3e4:	ldr	x0, [x19, #184]
 3e8:	bl	0 <grub_free>
 3ec:	mov	x0, x19
 3f0:	bl	0 <grub_free>
 3f4:	adrp	x0, 0 <grub_mod_init-0xdf8>
 3f8:	ldp	x19, x20, [sp, #16]
 3fc:	ldr	x0, [x0]
 400:	ldr	x21, [sp, #32]
 404:	ldr	w0, [x0]
 408:	ldp	x29, x30, [sp], #48
 40c:	ret
	...
 418:	stp	x29, x30, [sp, #-144]!
 41c:	mov	x29, sp
 420:	stp	x21, x22, [sp, #32]
 424:	ldr	x21, [x0]
 428:	stp	x19, x20, [sp, #16]
 42c:	ldr	w19, [x0, #8]
 430:	mov	w20, #0x200                 	// #512
 434:	stp	x23, x24, [sp, #48]
 438:	ldr	w0, [x21, #176]
 43c:	stp	x1, x2, [sp, #112]
 440:	lsl	w0, w20, w0
 444:	sxtw	x0, w0
 448:	bl	0 <grub_malloc>
 44c:	mov	x24, x0
 450:	cbz	x0, 638 <grub_mod_init-0x7c0>
 454:	cbz	w19, 638 <grub_mod_init-0x7c0>
 458:	adrp	x0, 0 <grub_mod_init-0xdf8>
 45c:	ldr	w2, [x21, #176]
 460:	stp	x25, x26, [sp, #64]
 464:	ldr	x0, [x0]
 468:	stp	x27, x28, [sp, #80]
 46c:	str	w20, [sp, #132]
 470:	str	x0, [sp, #136]
 474:	ldr	w3, [sp, #132]
 478:	mov	w1, w19
 47c:	ldr	x0, [x21, #168]
 480:	lsl	x1, x1, x2
 484:	lsl	w3, w3, w2
 488:	mov	x4, x24
 48c:	sxtw	x3, w3
 490:	mov	x2, #0x0                   	// #0
 494:	bl	0 <grub_disk_read>
 498:	ldr	x0, [sp, #136]
 49c:	ldr	w0, [x0]
 4a0:	cbnz	w0, 630 <grub_mod_init-0x7c8>
 4a4:	ldr	w2, [x21, #176]
 4a8:	mov	x0, #0x33                  	// #51
 4ac:	mov	w19, #0x18                  	// #24
 4b0:	mov	x1, #0x18                  	// #24
 4b4:	add	w3, w2, #0x9
 4b8:	lsr	x0, x0, x3
 4bc:	cbnz	x0, 624 <grub_mod_init-0x7d4>
 4c0:	add	x26, x24, x1
 4c4:	add	w19, w19, #0x1c
 4c8:	add	x23, x26, #0x19
 4cc:	mov	x0, x23
 4d0:	bl	0 <grub_strlen>
 4d4:	mov	x20, x0
 4d8:	add	x0, x0, #0x1
 4dc:	add	x0, x23, x0
 4e0:	bl	0 <grub_strlen>
 4e4:	ldrb	w2, [x26, #25]
 4e8:	add	x20, x20, x0
 4ec:	add	w20, w19, w20
 4f0:	and	w19, w20, #0xfffffffe
 4f4:	cbz	w2, 60c <grub_mod_init-0x7ec>
 4f8:	ldrb	w0, [x26, #24]
 4fc:	tbnz	w0, #5, 60c <grub_mod_init-0x7ec>
 500:	ldr	w1, [x26, #16]
 504:	rev	w1, w1
 508:	str	w1, [sp, #108]
 50c:	tbnz	w0, #6, 688 <grub_mod_init-0x770>
 510:	tbnz	w0, #7, 694 <grub_mod_init-0x764>
 514:	mov	w0, #0x1                   	// #1
 518:	str	w0, [sp, #128]
 51c:	ldr	w22, [x26, #12]
 520:	rev	w22, w22
 524:	ldr	w25, [x26, #20]
 528:	mov	x0, x23
 52c:	bl	0 <grub_strlen>
 530:	mov	x20, x0
 534:	mov	x0, #0x38                  	// #56
 538:	bl	0 <grub_malloc>
 53c:	mov	x27, x0
 540:	cbz	x0, 660 <grub_mod_init-0x798>
 544:	lsl	x0, x20, #1
 548:	add	x0, x0, #0x1
 54c:	bl	0 <grub_malloc>
 550:	mov	x28, x0
 554:	cbz	x0, 658 <grub_mod_init-0x7a0>
 558:	ldr	w0, [sp, #108]
 55c:	rev	w25, w25
 560:	str	x21, [x27]
 564:	stp	w22, w0, [x27, #8]
 568:	stp	w25, wzr, [x27, #16]
 56c:	str	w22, [x27, #24]
 570:	stp	xzr, xzr, [x27, #32]
 574:	str	xzr, [x27, #48]
 578:	cbz	x20, 6a4 <grub_mod_init-0x754>
 57c:	add	x20, x20, #0x19
 580:	mov	x6, x28
 584:	add	x1, x26, x20
 588:	b	5a0 <grub_mod_init-0x858>
 58c:	strb	w7, [x4], #1
 590:	add	x23, x23, #0x1
 594:	cmp	x1, x23
 598:	mov	x6, x4
 59c:	b.eq	5dc <grub_mod_init-0x81c>  // b.none
 5a0:	ldrb	w7, [x23]
 5a4:	mov	x5, x6
 5a8:	mov	x4, x6
 5ac:	lsr	w8, w7, #6
 5b0:	orr	w8, w8, #0xffffffc0
 5b4:	tbz	w7, #7, 58c <grub_mod_init-0x86c>
 5b8:	strb	w8, [x5], #2
 5bc:	add	x23, x23, #0x1
 5c0:	ldurb	w4, [x23, #-1]
 5c4:	cmp	x1, x23
 5c8:	and	w4, w4, #0x3f
 5cc:	orr	w4, w4, #0xffffff80
 5d0:	strb	w4, [x6, #1]
 5d4:	mov	x6, x5
 5d8:	b.ne	5a0 <grub_mod_init-0x858>  // b.any
 5dc:	strb	wzr, [x6]
 5e0:	mov	x2, x27
 5e4:	ldr	w4, [sp, #128]
 5e8:	mov	x0, x28
 5ec:	ldr	w1, [x21, #180]
 5f0:	orr	w1, w4, w1
 5f4:	ldp	x4, x3, [sp, #112]
 5f8:	blr	x4
 5fc:	mov	w20, w0
 600:	mov	x0, x28
 604:	bl	0 <grub_free>
 608:	cbnz	w20, 660 <grub_mod_init-0x798>
 60c:	ldr	w2, [x21, #176]
 610:	mov	w1, w19
 614:	add	x0, x1, #0x1b
 618:	add	w3, w2, #0x9
 61c:	lsr	x0, x0, x3
 620:	cbz	x0, 4c0 <grub_mod_init-0x938>
 624:	ldr	w0, [x24, #16]
 628:	rev	w19, w0
 62c:	cbnz	w0, 474 <grub_mod_init-0x984>
 630:	ldp	x25, x26, [sp, #64]
 634:	ldp	x27, x28, [sp, #80]
 638:	mov	x0, x24
 63c:	bl	0 <grub_free>
 640:	mov	w0, #0x0                   	// #0
 644:	ldp	x19, x20, [sp, #16]
 648:	ldp	x21, x22, [sp, #32]
 64c:	ldp	x23, x24, [sp, #48]
 650:	ldp	x29, x30, [sp], #144
 654:	ret
 658:	mov	x0, x27
 65c:	bl	0 <grub_free>
 660:	mov	x0, x24
 664:	bl	0 <grub_free>
 668:	mov	w0, #0x1                   	// #1
 66c:	ldp	x19, x20, [sp, #16]
 670:	ldp	x21, x22, [sp, #32]
 674:	ldp	x23, x24, [sp, #48]
 678:	ldp	x25, x26, [sp, #64]
 67c:	ldp	x27, x28, [sp, #80]
 680:	ldp	x29, x30, [sp], #144
 684:	ret
 688:	mov	w0, #0x3                   	// #3
 68c:	str	w0, [sp, #128]
 690:	b	51c <grub_mod_init-0x8dc>
 694:	mov	w0, #0x2                   	// #2
 698:	ldr	w22, [sp, #108]
 69c:	str	w0, [sp, #128]
 6a0:	b	524 <grub_mod_init-0x8d4>
 6a4:	mov	x6, x28
 6a8:	b	5dc <grub_mod_init-0x81c>
 6ac:	nop
	...
 6b8:	stp	x29, x30, [sp, #-32]!
 6bc:	mov	x29, sp
 6c0:	str	x19, [sp, #16]
 6c4:	ldr	x19, [x0, #80]
 6c8:	ldr	x0, [x19, #160]
 6cc:	bl	0 <grub_free>
 6d0:	ldr	x0, [x19, #184]
 6d4:	bl	0 <grub_free>
 6d8:	mov	x0, x19
 6dc:	bl	0 <grub_free>
 6e0:	adrp	x0, 0 <grub_mod_init-0xdf8>
 6e4:	ldr	x0, [x0]
 6e8:	ldr	x0, [x0]
 6ec:	bl	0 <grub_dl_unref>
 6f0:	mov	w0, #0x0                   	// #0
 6f4:	ldr	x19, [sp, #16]
 6f8:	ldp	x29, x30, [sp], #32
 6fc:	ret
	...
 708:	sub	sp, sp, #0x30
 70c:	mov	x5, x2
 710:	adrp	x4, 0 <grub_mod_init-0xdf8>
 714:	mov	x3, x0
 718:	mov	x6, x1
 71c:	stp	x29, x30, [sp, #32]
 720:	add	x29, sp, #0x20
 724:	ldp	x8, x2, [x0, #80]
 728:	ldr	x7, [x4]
 72c:	ldr	x4, [x0, #24]
 730:	ldr	x9, [x8, #112]
 734:	add	x1, x8, #0x70
 738:	ldr	x0, [x9, #168]
 73c:	str	xzr, [sp, #16]
 740:	ldr	w9, [x9, #176]
 744:	ldr	x3, [x3, #96]
 748:	str	w9, [sp, #8]
 74c:	ldr	w8, [x8, #124]
 750:	str	x8, [sp]
 754:	bl	0 <grub_fshelp_read_file>
 758:	ldp	x29, x30, [sp, #32]
 75c:	add	sp, sp, #0x30
 760:	ret
 764:	nop
	...
 770:	stp	x29, x30, [sp, #-112]!
 774:	mov	x29, sp
 778:	stp	x27, x28, [sp, #80]
 77c:	mov	x28, x0
 780:	str	x1, [sp, #104]
 784:	cbz	x1, a1c <grub_mod_init-0x3dc>
 788:	ldr	x0, [x0, #48]
 78c:	stp	x19, x20, [sp, #16]
 790:	stp	x21, x22, [sp, #32]
 794:	stp	x23, x24, [sp, #48]
 798:	cbz	x0, aa0 <grub_mod_init-0x358>
 79c:	ldr	x0, [sp, #104]
 7a0:	ldr	w21, [x28, #20]
 7a4:	cmp	x21, x0
 7a8:	b.hi	900 <grub_mod_init-0x4f8>  // b.pmore
 7ac:	ldr	w20, [x28, #24]
 7b0:	cbz	w20, a74 <grub_mod_init-0x384>
 7b4:	adrp	x0, 0 <grub_mod_init-0xdf8>
 7b8:	mov	w22, #0x0                   	// #0
 7bc:	mov	w19, #0x0                   	// #0
 7c0:	stp	x25, x26, [sp, #64]
 7c4:	ldr	x24, [x0]
 7c8:	mov	w0, #0x200                 	// #512
 7cc:	ldr	x25, [x28]
 7d0:	ldr	w3, [x25, #176]
 7d4:	lsl	w3, w0, w3
 7d8:	sxtw	x23, w3
 7dc:	mov	x0, x23
 7e0:	bl	0 <grub_malloc>
 7e4:	mov	x27, x0
 7e8:	cbz	x0, 9d4 <grub_mod_init-0x424>
 7ec:	ldr	w5, [x25, #108]
 7f0:	rev	w26, w5
 7f4:	ldr	x0, [x25, #168]
 7f8:	mov	x4, x27
 7fc:	ldr	w1, [x25, #176]
 800:	mov	x3, x23
 804:	mov	x2, #0x0                   	// #0
 808:	lsl	x1, x26, x1
 80c:	bl	0 <grub_disk_read>
 810:	ldr	w0, [x24]
 814:	cbnz	w0, 9cc <grub_mod_init-0x42c>
 818:	ldrh	w2, [x27, #12]
 81c:	ldrb	w1, [x27, #15]
 820:	lsr	w0, w2, #8
 824:	orr	w2, w0, w2, lsl #8
 828:	and	w2, w2, #0xffff
 82c:	mul	w0, w2, w1
 830:	cmp	x23, x0
 834:	b.cc	888 <grub_mod_init-0x570>  // b.lo, b.ul, b.last
 838:	ldrb	w7, [x27, #14]
 83c:	sub	w0, w2, #0x1
 840:	cbz	w2, 994 <grub_mod_init-0x464>
 844:	mul	w2, w0, w1
 848:	neg	w1, w1
 84c:	sxtw	x1, w1
 850:	sxtw	x2, w2
 854:	add	x2, x2, #0x10
 858:	add	x2, x27, x2
 85c:	nop
 860:	ldr	w4, [x2]
 864:	sub	w0, w0, #0x1
 868:	rev	w4, w4
 86c:	cmp	w20, w4
 870:	b.cc	988 <grub_mod_init-0x470>  // b.lo, b.ul, b.last
 874:	cbz	w7, 99c <grub_mod_init-0x45c>
 878:	b.eq	9a8 <grub_mod_init-0x450>  // b.none
 87c:	add	x2, x2, x1
 880:	cmn	w0, #0x1
 884:	b.ne	860 <grub_mod_init-0x598>  // b.any
 888:	mov	x0, x27
 88c:	bl	0 <grub_free>
 890:	adrp	x0, 0 <grub_mod_init-0xdf8>
 894:	ldr	x1, [x0]
 898:	mov	w0, #0x6                   	// #6
 89c:	bl	0 <grub_error>
 8a0:	cbnz	w0, 9dc <grub_mod_init-0x41c>
 8a4:	nop
 8a8:	ldr	x0, [x28, #48]
 8ac:	cbz	x0, 8dc <grub_mod_init-0x51c>
 8b0:	ldp	x1, x2, [x28, #32]
 8b4:	cmp	x2, x1
 8b8:	b.cs	9fc <grub_mod_init-0x3fc>  // b.hs, b.nlast
 8bc:	lsl	x1, x2, #3
 8c0:	add	w4, w19, w21
 8c4:	add	x3, x0, x1
 8c8:	stp	w4, w22, [x28, #20]
 8cc:	add	x2, x2, #0x1
 8d0:	str	w21, [x0, x1]
 8d4:	str	w20, [x3, #4]
 8d8:	str	x2, [x28, #40]
 8dc:	ldr	x0, [sp, #104]
 8e0:	mov	w1, w19
 8e4:	sub	x0, x0, x21
 8e8:	cmp	x0, w19, uxth
 8ec:	b.cc	a50 <grub_mod_init-0x3a8>  // b.lo, b.ul, b.last
 8f0:	add	x21, x21, x1
 8f4:	cbz	w22, a70 <grub_mod_init-0x388>
 8f8:	mov	w20, w22
 8fc:	b	7c8 <grub_mod_init-0x630>
 900:	ldp	x4, x6, [x28, #40]
 904:	cbz	x4, 960 <grub_mod_init-0x498>
 908:	mov	w1, #0x0                   	// #0
 90c:	nop
 910:	mov	w0, w1
 914:	add	w1, w1, #0x1
 918:	lsr	x2, x4, x1
 91c:	cbnz	x2, 910 <grub_mod_init-0x4e8>
 920:	mov	w3, #0x0                   	// #0
 924:	mov	w5, #0x1                   	// #1
 928:	lsl	w1, w5, w0
 92c:	orr	w2, w1, w3
 930:	cmp	x2, x4
 934:	sub	w0, w0, #0x1
 938:	lsl	x2, x2, #3
 93c:	orr	w1, w1, w3
 940:	b.cs	954 <grub_mod_init-0x4a4>  // b.hs, b.nlast
 944:	ldr	x7, [sp, #104]
 948:	ldr	w2, [x6, x2]
 94c:	cmp	x2, x7
 950:	csel	w3, w3, w1, hi  // hi = pmore
 954:	cmn	w0, #0x1
 958:	b.ne	928 <grub_mod_init-0x4d0>  // b.any
 95c:	add	x6, x6, w3, uxtw #3
 960:	ldp	w20, w0, [x6]
 964:	ldr	x1, [sp, #104]
 968:	ldp	x21, x22, [sp, #32]
 96c:	add	x23, x0, x1
 970:	sub	x0, x23, x20
 974:	ldp	x19, x20, [sp, #16]
 978:	ldp	x23, x24, [sp, #48]
 97c:	ldp	x27, x28, [sp, #80]
 980:	ldp	x29, x30, [sp], #112
 984:	ret
 988:	add	x2, x2, x1
 98c:	cmn	w0, #0x1
 990:	b.ne	860 <grub_mod_init-0x598>  // b.any
 994:	cbz	w7, 7f4 <grub_mod_init-0x604>
 998:	b	888 <grub_mod_init-0x570>
 99c:	ldr	w5, [x2, #4]
 9a0:	rev	w26, w5
 9a4:	b	7f4 <grub_mod_init-0x604>
 9a8:	ldrh	w19, [x2, #12]
 9ac:	mov	x0, x27
 9b0:	ldr	w22, [x2, #4]
 9b4:	lsr	w1, w19, #8
 9b8:	rev	w22, w22
 9bc:	orr	w19, w1, w19, lsl #8
 9c0:	and	w19, w19, #0xffff
 9c4:	bl	0 <grub_free>
 9c8:	b	8a8 <grub_mod_init-0x550>
 9cc:	mov	x0, x27
 9d0:	bl	0 <grub_free>
 9d4:	ldr	w0, [x24]
 9d8:	cbz	w0, 8a8 <grub_mod_init-0x550>
 9dc:	mov	x0, #0x0                   	// #0
 9e0:	ldp	x19, x20, [sp, #16]
 9e4:	ldp	x21, x22, [sp, #32]
 9e8:	ldp	x23, x24, [sp, #48]
 9ec:	ldp	x25, x26, [sp, #64]
 9f0:	ldp	x27, x28, [sp, #80]
 9f4:	ldp	x29, x30, [sp], #112
 9f8:	ret
 9fc:	lsl	x1, x1, #4
 a00:	bl	0 <grub_realloc>
 a04:	cbz	x0, a2c <grub_mod_init-0x3cc>
 a08:	ldp	x1, x2, [x28, #32]
 a0c:	str	x0, [x28, #48]
 a10:	lsl	x1, x1, #1
 a14:	str	x1, [x28, #32]
 a18:	b	8bc <grub_mod_init-0x53c>
 a1c:	ldr	w0, [x0, #8]
 a20:	ldp	x27, x28, [sp, #80]
 a24:	ldp	x29, x30, [sp], #112
 a28:	ret
 a2c:	ldr	x0, [x28, #48]
 a30:	str	wzr, [x24]
 a34:	bl	0 <grub_free>
 a38:	str	xzr, [x28, #48]
 a3c:	ldr	x0, [sp, #104]
 a40:	mov	w1, w19
 a44:	sub	x0, x0, x21
 a48:	cmp	x0, w19, uxth
 a4c:	b.cs	8f0 <grub_mod_init-0x508>  // b.hs, b.nlast
 a50:	add	x0, x0, w20, uxtw
 a54:	ldp	x19, x20, [sp, #16]
 a58:	ldp	x21, x22, [sp, #32]
 a5c:	ldp	x23, x24, [sp, #48]
 a60:	ldp	x25, x26, [sp, #64]
 a64:	ldp	x27, x28, [sp, #80]
 a68:	ldp	x29, x30, [sp], #112
 a6c:	ret
 a70:	ldp	x25, x26, [sp, #64]
 a74:	adrp	x1, 0 <grub_mod_init-0xdf8>
 a78:	mov	w0, #0x6                   	// #6
 a7c:	ldr	x1, [x1]
 a80:	bl	0 <grub_error>
 a84:	mov	x0, #0x0                   	// #0
 a88:	ldp	x19, x20, [sp, #16]
 a8c:	ldp	x21, x22, [sp, #32]
 a90:	ldp	x23, x24, [sp, #48]
 a94:	ldp	x27, x28, [sp, #80]
 a98:	ldp	x29, x30, [sp], #112
 a9c:	ret
 aa0:	ldr	x1, [x28]
 aa4:	mov	x19, #0x8                   	// #8
 aa8:	ldp	w2, w0, [x28, #8]
 aac:	ldr	w1, [x1, #176]
 ab0:	stp	wzr, w2, [x28, #20]
 ab4:	add	w1, w1, #0x18
 ab8:	str	xzr, [x28, #40]
 abc:	lsr	w0, w0, w1
 ac0:	add	w0, w0, #0x3
 ac4:	cmp	x0, x19
 ac8:	csel	x19, x0, x19, cs  // cs = hs, nlast
 acc:	lsl	x0, x19, #3
 ad0:	bl	0 <grub_malloc>
 ad4:	str	x0, [x28, #48]
 ad8:	cbz	x0, aec <grub_mod_init-0x30c>
 adc:	ldr	w1, [x28, #8]
 ae0:	str	x19, [x28, #32]
 ae4:	stp	wzr, w1, [x0]
 ae8:	b	79c <grub_mod_init-0x65c>
 aec:	adrp	x0, 0 <grub_mod_init-0xdf8>
 af0:	str	xzr, [x28, #32]
 af4:	ldr	x24, [x0]
 af8:	str	wzr, [x24]
 afc:	b	79c <grub_mod_init-0x65c>
	...
 b18:	stp	x29, x30, [sp, #-80]!
 b1c:	adrp	x2, 0 <grub_mod_init-0xdf8>
 b20:	mov	x29, sp
 b24:	stp	x23, x24, [sp, #48]
 b28:	ldr	x23, [x2]
 b2c:	stp	x19, x20, [sp, #16]
 b30:	mov	x20, x0
 b34:	stp	x21, x22, [sp, #32]
 b38:	mov	x21, x1
 b3c:	ldr	x0, [x23]
 b40:	str	xzr, [sp, #72]
 b44:	bl	0 <grub_dl_ref>
 b48:	ldr	x0, [x20, #8]
 b4c:	ldr	x0, [x0]
 b50:	bl	150 <grub_mod_init-0xca8>
 b54:	mov	x19, x0
 b58:	cbz	x0, c24 <grub_mod_init-0x1d4>
 b5c:	adrp	x1, 0 <grub_mod_init-0xdf8>
 b60:	adrp	x2, 0 <grub_mod_init-0xdf8>
 b64:	add	x22, x0, #0x70
 b68:	mov	w5, #0x1                   	// #1
 b6c:	ldr	x4, [x1]
 b70:	mov	x0, x21
 b74:	ldr	x3, [x2]
 b78:	mov	x1, x22
 b7c:	add	x2, sp, #0x48
 b80:	bl	0 <grub_fshelp_find_file>
 b84:	adrp	x0, 0 <grub_mod_init-0xdf8>
 b88:	ldr	x24, [x0]
 b8c:	ldr	x0, [sp, #72]
 b90:	ldr	w21, [x24]
 b94:	cbz	w21, bd8 <grub_mod_init-0x220>
 b98:	cmp	x22, x0
 b9c:	b.eq	ba4 <grub_mod_init-0x254>  // b.none
 ba0:	bl	0 <grub_free>
 ba4:	ldr	x0, [x19, #184]
 ba8:	bl	0 <grub_free>
 bac:	mov	x0, x19
 bb0:	bl	0 <grub_free>
 bb4:	ldr	x0, [x23]
 bb8:	bl	0 <grub_dl_unref>
 bbc:	ldr	w21, [x24]
 bc0:	ldp	x19, x20, [sp, #16]
 bc4:	mov	w0, w21
 bc8:	ldp	x21, x22, [sp, #32]
 bcc:	ldp	x23, x24, [sp, #48]
 bd0:	ldp	x29, x30, [sp], #80
 bd4:	ret
 bd8:	ldr	w1, [x0, #12]
 bdc:	ldp	x2, x3, [x0]
 be0:	str	x1, [x20, #64]
 be4:	stp	x2, x3, [x19, #112]
 be8:	ldp	x2, x3, [x0, #16]
 bec:	stp	x2, x3, [x22, #16]
 bf0:	ldp	x2, x3, [x0, #32]
 bf4:	stp	x2, x3, [x22, #32]
 bf8:	ldr	x1, [x0, #48]
 bfc:	str	x1, [x22, #48]
 c00:	bl	0 <grub_free>
 c04:	str	xzr, [x20, #24]
 c08:	str	x19, [x20, #80]
 c0c:	mov	w0, w21
 c10:	ldp	x19, x20, [sp, #16]
 c14:	ldp	x21, x22, [sp, #32]
 c18:	ldp	x23, x24, [sp, #48]
 c1c:	ldp	x29, x30, [sp], #80
 c20:	ret
 c24:	adrp	x0, 0 <grub_mod_init-0xdf8>
 c28:	ldr	x24, [x0]
 c2c:	b	bac <grub_mod_init-0x24c>
	...
 c50:	stp	x29, x30, [sp, #-80]!
 c54:	adrp	x4, 0 <grub_mod_init-0xdf8>
 c58:	mov	x29, sp
 c5c:	stp	x21, x22, [sp, #32]
 c60:	ldr	x21, [x4]
 c64:	stp	x19, x20, [sp, #16]
 c68:	mov	x19, x0
 c6c:	mov	x20, x1
 c70:	stp	xzr, x2, [sp, #56]
 c74:	ldr	x0, [x21]
 c78:	str	x3, [sp, #72]
 c7c:	bl	0 <grub_dl_ref>
 c80:	ldr	x0, [x19]
 c84:	bl	150 <grub_mod_init-0xca8>
 c88:	mov	x19, x0
 c8c:	cbz	x0, d28 <grub_mod_init-0xd0>
 c90:	adrp	x1, 0 <grub_mod_init-0xdf8>
 c94:	adrp	x2, 0 <grub_mod_init-0xdf8>
 c98:	add	x22, x0, #0x70
 c9c:	mov	w5, #0x2                   	// #2
 ca0:	ldr	x4, [x1]
 ca4:	mov	x0, x20
 ca8:	ldr	x3, [x2]
 cac:	mov	x1, x22
 cb0:	add	x2, sp, #0x38
 cb4:	bl	0 <grub_fshelp_find_file>
 cb8:	adrp	x0, 0 <grub_mod_init-0xdf8>
 cbc:	ldr	x20, [x0]
 cc0:	ldr	w0, [x20]
 cc4:	cbz	w0, d04 <grub_mod_init-0xf4>
 cc8:	ldr	x0, [sp, #56]
 ccc:	cmp	x22, x0
 cd0:	b.eq	cd8 <grub_mod_init-0x120>  // b.none
 cd4:	bl	0 <grub_free>
 cd8:	ldr	x0, [x19, #184]
 cdc:	bl	0 <grub_free>
 ce0:	mov	x0, x19
 ce4:	bl	0 <grub_free>
 ce8:	ldr	x0, [x21]
 cec:	bl	0 <grub_dl_unref>
 cf0:	ldr	w0, [x20]
 cf4:	ldp	x19, x20, [sp, #16]
 cf8:	ldp	x21, x22, [sp, #32]
 cfc:	ldp	x29, x30, [sp], #80
 d00:	ret
 d04:	adrp	x1, 0 <grub_mod_init-0xdf8>
 d08:	add	x2, sp, #0x40
 d0c:	ldr	x0, [sp, #56]
 d10:	ldr	x1, [x1]
 d14:	bl	418 <grub_mod_init-0x9e0>
 d18:	ldr	x0, [sp, #56]
 d1c:	cmp	x22, x0
 d20:	b.ne	cd4 <grub_mod_init-0x124>  // b.any
 d24:	b	cd8 <grub_mod_init-0x120>
 d28:	adrp	x0, 0 <grub_mod_init-0xdf8>
 d2c:	ldr	x20, [x0]
 d30:	b	ce0 <grub_mod_init-0x118>
 d34:	nop
	...
 d60:	stp	x29, x30, [sp, #-64]!
 d64:	mov	x29, sp
 d68:	stp	x19, x20, [sp, #16]
 d6c:	mov	x19, x2
 d70:	mov	w20, w1
 d74:	and	w20, w20, #0xff
 d78:	mov	x2, #0x10                  	// #16
 d7c:	mov	w1, #0x0                   	// #0
 d80:	stp	x21, x22, [sp, #32]
 d84:	mov	x21, x3
 d88:	mov	x22, x0
 d8c:	add	x0, sp, #0x30
 d90:	bl	0 <grub_memset>
 d94:	cmp	w20, #0x2
 d98:	ldrb	w3, [sp, #48]
 d9c:	cset	w1, eq  // eq = none
 da0:	ldr	w2, [x19, #16]
 da4:	and	w3, w3, #0xfffffffc
 da8:	orr	w1, w1, #0x2
 dac:	mov	w4, #0x3f00                	// #16128
 db0:	orr	w1, w1, w3
 db4:	ldr	x0, [x19, #48]
 db8:	movk	w4, #0xf0c, lsl #16
 dbc:	add	w2, w2, w4
 dc0:	strb	w1, [sp, #48]
 dc4:	str	w2, [sp, #52]
 dc8:	bl	0 <grub_free>
 dcc:	mov	x0, x19
 dd0:	bl	0 <grub_free>
 dd4:	ldp	x3, x2, [x21]
 dd8:	add	x1, sp, #0x30
 ddc:	mov	x0, x22
 de0:	blr	x3
 de4:	ldp	x19, x20, [sp, #16]
 de8:	ldp	x21, x22, [sp, #32]
 dec:	ldp	x29, x30, [sp], #64
 df0:	ret
 df4:	nop

0000000000000df8 <grub_mod_init>:
 df8:	stp	x29, x30, [sp, #-32]!
 dfc:	adrp	x2, 0 <grub_mod_init-0xdf8>
 e00:	adrp	x1, 0 <grub_mod_init-0xdf8>
 e04:	mov	x29, sp
 e08:	ldr	x1, [x1]
 e0c:	str	x19, [sp, #16]
 e10:	mov	x19, x0
 e14:	ldr	x0, [x2]
 e18:	bl	0 <grub_list_push>
 e1c:	adrp	x0, 0 <grub_mod_init-0xdf8>
 e20:	ldr	x0, [x0]
 e24:	str	x19, [x0]
 e28:	ldr	x19, [sp, #16]
 e2c:	ldp	x29, x30, [sp], #32
 e30:	ret
 e34:	nop
	...

0000000000000e50 <grub_mod_fini>:
 e50:	adrp	x0, 0 <grub_mod_init-0xdf8>
 e54:	ldr	x0, [x0]
 e58:	b	0 <grub_list_remove>
 e5c:	nop
	...
