
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//_ctypes_test.cpython-38-aarch64-linux-gnu.so_clang_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000002068 <.init>:
    2068:	stp	x29, x30, [sp, #-16]!
    206c:	mov	x29, sp
    2070:	bl	21b0 <printf@plt+0x10>
    2074:	ldp	x29, x30, [sp], #16
    2078:	ret

Disassembly of section .plt:

0000000000002080 <memcpy@plt-0x20>:
    2080:	stp	x16, x30, [sp, #-16]!
    2084:	adrp	x16, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2088:	ldr	x17, [x16, #4088]
    208c:	add	x16, x16, #0xff8
    2090:	br	x17
    2094:	nop
    2098:	nop
    209c:	nop

00000000000020a0 <memcpy@plt>:
    20a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20a4:	ldr	x17, [x16]
    20a8:	add	x16, x16, #0x0
    20ac:	br	x17

00000000000020b0 <strtok@plt>:
    20b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20b4:	ldr	x17, [x16, #8]
    20b8:	add	x16, x16, #0x8
    20bc:	br	x17

00000000000020c0 <strlen@plt>:
    20c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20c4:	ldr	x17, [x16, #16]
    20c8:	add	x16, x16, #0x10
    20cc:	br	x17

00000000000020d0 <__cxa_finalize@plt>:
    20d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20d4:	ldr	x17, [x16, #24]
    20d8:	add	x16, x16, #0x18
    20dc:	br	x17

00000000000020e0 <qsort@plt>:
    20e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20e4:	ldr	x17, [x16, #32]
    20e8:	add	x16, x16, #0x20
    20ec:	br	x17

00000000000020f0 <sqrt@plt>:
    20f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    20f4:	ldr	x17, [x16, #40]
    20f8:	add	x16, x16, #0x28
    20fc:	br	x17

0000000000002100 <malloc@plt>:
    2100:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2104:	ldr	x17, [x16, #48]
    2108:	add	x16, x16, #0x30
    210c:	br	x17

0000000000002110 <wcslen@plt>:
    2110:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2114:	ldr	x17, [x16, #56]
    2118:	add	x16, x16, #0x38
    211c:	br	x17

0000000000002120 <__gmon_start__@plt>:
    2120:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2124:	ldr	x17, [x16, #64]
    2128:	add	x16, x16, #0x40
    212c:	br	x17

0000000000002130 <PyModule_Create2@plt>:
    2130:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2134:	ldr	x17, [x16, #72]
    2138:	add	x16, x16, #0x48
    213c:	br	x17

0000000000002140 <puts@plt>:
    2140:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2144:	ldr	x17, [x16, #80]
    2148:	add	x16, x16, #0x50
    214c:	br	x17

0000000000002150 <PyArg_ParseTuple@plt>:
    2150:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2154:	ldr	x17, [x16, #88]
    2158:	add	x16, x16, #0x58
    215c:	br	x17

0000000000002160 <free@plt>:
    2160:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2164:	ldr	x17, [x16, #96]
    2168:	add	x16, x16, #0x60
    216c:	br	x17

0000000000002170 <strchr@plt>:
    2170:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2174:	ldr	x17, [x16, #104]
    2178:	add	x16, x16, #0x68
    217c:	br	x17

0000000000002180 <strcpy@plt>:
    2180:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2184:	ldr	x17, [x16, #112]
    2188:	add	x16, x16, #0x70
    218c:	br	x17

0000000000002190 <vprintf@plt>:
    2190:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    2194:	ldr	x17, [x16, #120]
    2198:	add	x16, x16, #0x78
    219c:	br	x17

00000000000021a0 <printf@plt>:
    21a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    21a4:	ldr	x17, [x16, #128]
    21a8:	add	x16, x16, #0x80
    21ac:	br	x17

Disassembly of section .text:

00000000000021b0 <_testfunc_cbk_reg_int@@Base-0xd4>:
    21b0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    21b4:	ldr	x0, [x0, #4000]
    21b8:	cbz	x0, 21c0 <printf@plt+0x20>
    21bc:	b	2120 <__gmon_start__@plt>
    21c0:	ret
    21c4:	nop
    21c8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    21cc:	add	x0, x0, #0x1c0
    21d0:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    21d4:	add	x1, x1, #0x1c0
    21d8:	cmp	x1, x0
    21dc:	b.eq	21f4 <printf@plt+0x54>  // b.none
    21e0:	adrp	x1, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    21e4:	ldr	x1, [x1, #3960]
    21e8:	cbz	x1, 21f4 <printf@plt+0x54>
    21ec:	mov	x16, x1
    21f0:	br	x16
    21f4:	ret
    21f8:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    21fc:	add	x0, x0, #0x1c0
    2200:	adrp	x1, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    2204:	add	x1, x1, #0x1c0
    2208:	sub	x1, x1, x0
    220c:	lsr	x2, x1, #63
    2210:	add	x1, x2, x1, asr #3
    2214:	cmp	xzr, x1, asr #1
    2218:	asr	x1, x1, #1
    221c:	b.eq	2234 <printf@plt+0x94>  // b.none
    2220:	adrp	x2, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2224:	ldr	x2, [x2, #4048]
    2228:	cbz	x2, 2234 <printf@plt+0x94>
    222c:	mov	x16, x2
    2230:	br	x16
    2234:	ret
    2238:	stp	x29, x30, [sp, #-32]!
    223c:	mov	x29, sp
    2240:	str	x19, [sp, #16]
    2244:	adrp	x19, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    2248:	ldrb	w0, [x19, #448]
    224c:	cbnz	w0, 2274 <printf@plt+0xd4>
    2250:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2254:	ldr	x0, [x0, #3968]
    2258:	cbz	x0, 2268 <printf@plt+0xc8>
    225c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    2260:	ldr	x0, [x0, #136]
    2264:	bl	20d0 <__cxa_finalize@plt>
    2268:	bl	21c8 <printf@plt+0x28>
    226c:	mov	w0, #0x1                   	// #1
    2270:	strb	w0, [x19, #448]
    2274:	ldr	x19, [sp, #16]
    2278:	ldp	x29, x30, [sp], #32
    227c:	ret
    2280:	b	21f8 <printf@plt+0x58>

0000000000002284 <_testfunc_cbk_reg_int@@Base>:
    2284:	stp	x29, x30, [sp, #-16]!
    2288:	mov	x29, sp
    228c:	mul	w0, w0, w0
    2290:	mul	w1, w1, w1
    2294:	mul	w2, w2, w2
    2298:	mul	w3, w3, w3
    229c:	mul	w4, w4, w4
    22a0:	blr	x5
    22a4:	ldp	x29, x30, [sp], #16
    22a8:	ret

00000000000022ac <_testfunc_cbk_reg_double@@Base>:
    22ac:	stp	x29, x30, [sp, #-16]!
    22b0:	mov	x29, sp
    22b4:	fmul	d0, d0, d0
    22b8:	fmul	d1, d1, d1
    22bc:	fmul	d2, d2, d2
    22c0:	fmul	d3, d3, d3
    22c4:	fmul	d4, d4, d4
    22c8:	blr	x0
    22cc:	ldp	x29, x30, [sp], #16
    22d0:	ret

00000000000022d4 <_testfunc_cbk_large_struct@@Base>:
    22d4:	sub	sp, sp, #0x30
    22d8:	stp	x29, x30, [sp, #32]
    22dc:	add	x29, sp, #0x20
    22e0:	ldr	x8, [x0, #16]
    22e4:	ldr	q0, [x0]
    22e8:	mov	x0, sp
    22ec:	str	x8, [sp, #16]
    22f0:	str	q0, [sp]
    22f4:	blr	x1
    22f8:	ldp	x29, x30, [sp, #32]
    22fc:	add	sp, sp, #0x30
    2300:	ret

0000000000002304 <_testfunc_large_struct_update_value@@Base>:
    2304:	mov	w8, #0xf00d                	// #61453
    2308:	movk	w8, #0xbad, lsl #16
    230c:	str	x8, [x0]
    2310:	str	x8, [x0, #8]
    2314:	str	x8, [x0, #16]
    2318:	ret

000000000000231c <_testfunc_reg_struct_update_value@@Base>:
    231c:	sub	sp, sp, #0x10
    2320:	str	w0, [sp, #12]
    2324:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2328:	ldr	x9, [x9, #4040]
    232c:	mov	w10, #0xf00d                	// #61453
    2330:	lsr	x8, x0, #32
    2334:	movk	w10, #0xbad, lsl #16
    2338:	str	w8, [sp, #8]
    233c:	stp	w0, w8, [x9]
    2340:	str	w10, [sp, #12]
    2344:	str	w10, [sp, #8]
    2348:	add	sp, sp, #0x10
    234c:	ret

0000000000002350 <_testfunc_array_in_struct1@@Base>:
    2350:	mov	x8, x0
    2354:	mov	x9, xzr
    2358:	mov	w0, wzr
    235c:	stp	x8, x1, [sp, #-16]!
    2360:	mov	x8, sp
    2364:	ldrb	w10, [x8, x9]
    2368:	add	x9, x9, #0x1
    236c:	cmp	x9, #0x10
    2370:	add	w0, w0, w10
    2374:	b.ne	2364 <_testfunc_array_in_struct1@@Base+0x14>  // b.any
    2378:	stp	xzr, xzr, [sp], #16
    237c:	ret

0000000000002380 <_testfunc_array_in_struct2@@Base>:
    2380:	mov	x8, xzr
    2384:	stp	d0, d1, [sp, #-16]!
    2388:	fmov	d0, xzr
    238c:	mov	x9, sp
    2390:	ldr	d1, [x9, x8]
    2394:	add	x8, x8, #0x8
    2398:	cmp	x8, #0x10
    239c:	fadd	d0, d0, d1
    23a0:	b.ne	2390 <_testfunc_array_in_struct2@@Base+0x10>  // b.any
    23a4:	stp	xzr, xzr, [sp], #16
    23a8:	ret

00000000000023ac <_testfunc_array_in_struct2a@@Base>:
    23ac:	mov	x8, xzr
    23b0:	stp	s0, s1, [sp, #-16]!
    23b4:	fmov	d0, xzr
    23b8:	mov	x9, sp
    23bc:	stp	s2, s3, [sp, #8]
    23c0:	ldr	s1, [x9, x8]
    23c4:	add	x8, x8, #0x4
    23c8:	cmp	x8, #0x8
    23cc:	fcvt	d1, s1
    23d0:	fadd	d0, d0, d1
    23d4:	b.ne	23c0 <_testfunc_array_in_struct2a@@Base+0x14>  // b.any
    23d8:	mov	x9, sp
    23dc:	mov	x8, xzr
    23e0:	add	x9, x9, #0x8
    23e4:	ldr	s1, [x9, x8]
    23e8:	add	x8, x8, #0x4
    23ec:	cmp	x8, #0x8
    23f0:	fcvt	d1, s1
    23f4:	fadd	d0, d0, d1
    23f8:	b.ne	23e4 <_testfunc_array_in_struct2a@@Base+0x38>  // b.any
    23fc:	str	xzr, [sp], #16
    2400:	ret

0000000000002404 <_testfunc_union_by_value1@@Base>:
    2404:	add	x8, x0, x0, asr #32
    2408:	add	x0, x8, w0, sxtw
    240c:	ret

0000000000002410 <_testfunc_union_by_value2@@Base>:
    2410:	ldr	w8, [x0]
    2414:	ldr	w9, [x0, #8]
    2418:	movi	v0.2d, #0x0
    241c:	stp	q0, q0, [x0]
    2420:	add	w8, w9, w8
    2424:	sxtw	x8, w8
    2428:	mov	x0, x8
    242c:	ret

0000000000002430 <_testfunc_union_by_reference1@@Base>:
    2430:	ldr	x8, [x0]
    2434:	str	xzr, [x0]
    2438:	mov	x0, x8
    243c:	ret

0000000000002440 <_testfunc_union_by_reference2@@Base>:
    2440:	ldp	w8, w9, [x0]
    2444:	str	xzr, [x0]
    2448:	add	w8, w9, w8
    244c:	sxtw	x8, w8
    2450:	mov	x0, x8
    2454:	ret

0000000000002458 <_testfunc_union_by_reference3@@Base>:
    2458:	ldr	w8, [x0]
    245c:	ldr	w9, [x0, #8]
    2460:	ldr	w10, [x0, #24]
    2464:	movi	v0.2d, #0x0
    2468:	stp	q0, q0, [x0]
    246c:	add	w8, w9, w8
    2470:	add	w8, w8, w10
    2474:	sxtw	x8, w8
    2478:	mov	x0, x8
    247c:	ret

0000000000002480 <_testfunc_bitfield_by_value1@@Base>:
    2480:	lsl	w9, w0, #5
    2484:	sxtb	w8, w0
    2488:	sbfx	w9, w9, #6, #2
    248c:	lsl	w10, w0, #2
    2490:	add	w8, w9, w8, asr #6
    2494:	and	w9, w0, #0x1
    2498:	sxtb	w10, w10
    249c:	sub	w8, w8, w9
    24a0:	add	w8, w8, w10, asr #5
    24a4:	sxtw	x0, w8
    24a8:	ret

00000000000024ac <_testfunc_bitfield_by_reference1@@Base>:
    24ac:	ldrb	w8, [x0]
    24b0:	str	wzr, [x0]
    24b4:	lsl	w10, w8, #5
    24b8:	sxtb	w9, w8
    24bc:	sbfx	w10, w10, #6, #2
    24c0:	lsl	w11, w8, #2
    24c4:	add	w9, w10, w9, asr #6
    24c8:	and	w8, w8, #0x1
    24cc:	sxtb	w11, w11
    24d0:	sub	w8, w9, w8
    24d4:	add	w8, w8, w11, asr #5
    24d8:	sxtw	x0, w8
    24dc:	ret

00000000000024e0 <_testfunc_bitfield_by_reference2@@Base>:
    24e0:	ldrb	w8, [x0]
    24e4:	str	wzr, [x0]
    24e8:	and	w9, w8, #0x1
    24ec:	ubfx	w10, w8, #1, #2
    24f0:	ubfx	w11, w8, #3, #3
    24f4:	add	w8, w9, w8, lsr #6
    24f8:	add	w8, w8, w10
    24fc:	add	w0, w8, w11
    2500:	ret

0000000000002504 <_testfunc_bitfield_by_value2@@Base>:
    2504:	lsl	w8, w0, #6
    2508:	sbfx	w9, w0, #0, #3
    250c:	and	w10, w0, #0x1
    2510:	sxtb	w8, w8
    2514:	sub	w9, w9, w10
    2518:	add	w8, w9, w8, asr #5
    251c:	sxtw	x0, w8
    2520:	ret

0000000000002524 <testfunc_array@@Base>:
    2524:	stp	x29, x30, [sp, #-16]!
    2528:	mov	x29, sp
    252c:	ldp	w1, w2, [x0]
    2530:	ldp	w3, w4, [x0, #8]
    2534:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2538:	add	x0, x0, #0x520
    253c:	bl	21a0 <printf@plt>
    2540:	ldp	x29, x30, [sp], #16
    2544:	ret

0000000000002548 <testfunc_Ddd@@Base>:
    2548:	sub	sp, sp, #0x30
    254c:	stp	x29, x30, [sp, #32]
    2550:	add	x29, sp, #0x20
    2554:	stur	d0, [x29, #-8]
    2558:	fmul	d0, d0, d1
    255c:	str	d1, [sp, #16]
    2560:	bl	52e8 <PyInit__ctypes_test@@Base+0x1ec4>
    2564:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2568:	add	x0, x0, #0x53c
    256c:	sub	x1, x29, #0x8
    2570:	add	x2, sp, #0x10
    2574:	str	q0, [sp]
    2578:	bl	21a0 <printf@plt>
    257c:	ldur	d0, [x29, #-8]
    2580:	ldr	d1, [sp, #16]
    2584:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2588:	add	x0, x0, #0x552
    258c:	bl	21a0 <printf@plt>
    2590:	ldr	q0, [sp]
    2594:	ldp	x29, x30, [sp, #32]
    2598:	add	sp, sp, #0x30
    259c:	ret

00000000000025a0 <testfunc_DDD@@Base>:
    25a0:	sub	sp, sp, #0x40
    25a4:	stp	x29, x30, [sp, #48]
    25a8:	add	x29, sp, #0x30
    25ac:	stur	q0, [x29, #-16]
    25b0:	str	q1, [sp, #16]
    25b4:	bl	4890 <PyInit__ctypes_test@@Base+0x146c>
    25b8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    25bc:	add	x0, x0, #0x568
    25c0:	sub	x1, x29, #0x10
    25c4:	add	x2, sp, #0x10
    25c8:	str	q0, [sp]
    25cc:	bl	21a0 <printf@plt>
    25d0:	ldur	q0, [x29, #-16]
    25d4:	ldr	q1, [sp, #16]
    25d8:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    25dc:	add	x0, x0, #0x57e
    25e0:	bl	21a0 <printf@plt>
    25e4:	ldr	q0, [sp]
    25e8:	ldp	x29, x30, [sp, #48]
    25ec:	add	sp, sp, #0x40
    25f0:	ret

00000000000025f4 <testfunc_iii@@Base>:
    25f4:	stp	x29, x30, [sp, #-32]!
    25f8:	str	x19, [sp, #16]
    25fc:	mov	x29, sp
    2600:	stp	w1, w0, [x29, #24]
    2604:	mul	w19, w1, w0
    2608:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    260c:	add	x0, x0, #0x596
    2610:	add	x1, x29, #0x1c
    2614:	add	x2, x29, #0x18
    2618:	bl	21a0 <printf@plt>
    261c:	mov	w0, w19
    2620:	ldr	x19, [sp, #16]
    2624:	ldp	x29, x30, [sp], #32
    2628:	ret

000000000000262c <myprintf@@Base>:
    262c:	sub	sp, sp, #0x120
    2630:	stp	x29, x30, [sp, #256]
    2634:	str	x28, [sp, #272]
    2638:	add	x29, sp, #0x100
    263c:	mov	x8, #0xffffffffffffffc8    	// #-56
    2640:	mov	x9, sp
    2644:	sub	x10, x29, #0x78
    2648:	movk	x8, #0xff80, lsl #32
    264c:	add	x11, x29, #0x20
    2650:	add	x9, x9, #0x80
    2654:	add	x10, x10, #0x38
    2658:	stp	x9, x8, [x29, #-16]
    265c:	stp	x11, x10, [x29, #-32]
    2660:	stp	x1, x2, [x29, #-120]
    2664:	stp	x3, x4, [x29, #-104]
    2668:	stp	x5, x6, [x29, #-88]
    266c:	stur	x7, [x29, #-72]
    2670:	stp	q0, q1, [sp]
    2674:	ldp	q0, q1, [x29, #-32]
    2678:	sub	x1, x29, #0x40
    267c:	stp	q2, q3, [sp, #32]
    2680:	stp	q4, q5, [sp, #64]
    2684:	stp	q6, q7, [sp, #96]
    2688:	stp	q0, q1, [x29, #-64]
    268c:	bl	2190 <vprintf@plt>
    2690:	ldr	x28, [sp, #272]
    2694:	ldp	x29, x30, [sp, #256]
    2698:	add	sp, sp, #0x120
    269c:	ret

00000000000026a0 <my_strtok@@Base>:
    26a0:	stp	x29, x30, [sp, #-16]!
    26a4:	mov	x29, sp
    26a8:	bl	20b0 <strtok@plt>
    26ac:	ldp	x29, x30, [sp], #16
    26b0:	ret

00000000000026b4 <my_strchr@@Base>:
    26b4:	stp	x29, x30, [sp, #-16]!
    26b8:	mov	x29, sp
    26bc:	bl	2170 <strchr@plt>
    26c0:	ldp	x29, x30, [sp], #16
    26c4:	ret

00000000000026c8 <my_sqrt@@Base>:
    26c8:	mov	v1.16b, v0.16b
    26cc:	fsqrt	d0, d0
    26d0:	fcmp	d0, d0
    26d4:	b.vs	26dc <my_sqrt@@Base+0x14>
    26d8:	ret
    26dc:	stp	x29, x30, [sp, #-16]!
    26e0:	mov	x29, sp
    26e4:	mov	v0.16b, v1.16b
    26e8:	bl	20f0 <sqrt@plt>
    26ec:	ldp	x29, x30, [sp], #16
    26f0:	ret

00000000000026f4 <my_qsort@@Base>:
    26f4:	stp	x29, x30, [sp, #-16]!
    26f8:	mov	x29, sp
    26fc:	bl	20e0 <qsort@plt>
    2700:	ldp	x29, x30, [sp], #16
    2704:	ret

0000000000002708 <_testfunc_ai8@@Base>:
    2708:	ret

000000000000270c <_testfunc_v@@Base>:
    270c:	add	w8, w1, w0
    2710:	str	w8, [x2]
    2714:	ret

0000000000002718 <_testfunc_i_bhilfd@@Base>:
    2718:	sxth	w8, w1
    271c:	add	w8, w8, w0, sxtb
    2720:	add	w8, w8, w2
    2724:	add	x8, x3, w8, sxtw
    2728:	scvtf	s2, x8
    272c:	fadd	s0, s2, s0
    2730:	fcvt	d0, s0
    2734:	fadd	d0, d0, d1
    2738:	fcvtzs	w0, d0
    273c:	ret

0000000000002740 <_testfunc_f_bhilfd@@Base>:
    2740:	sxth	w8, w1
    2744:	add	w8, w8, w0, sxtb
    2748:	add	w8, w8, w2
    274c:	add	x8, x3, w8, sxtw
    2750:	scvtf	s2, x8
    2754:	fadd	s0, s2, s0
    2758:	fcvt	d0, s0
    275c:	fadd	d0, d0, d1
    2760:	fcvt	s0, d0
    2764:	ret

0000000000002768 <_testfunc_d_bhilfd@@Base>:
    2768:	sxth	w8, w1
    276c:	add	w8, w8, w0, sxtb
    2770:	add	w8, w8, w2
    2774:	add	x8, x3, w8, sxtw
    2778:	scvtf	s2, x8
    277c:	fadd	s0, s2, s0
    2780:	fcvt	d0, s0
    2784:	fadd	d0, d0, d1
    2788:	ret

000000000000278c <_testfunc_D_bhilfD@@Base>:
    278c:	sub	sp, sp, #0x20
    2790:	stp	x29, x30, [sp, #16]
    2794:	add	x29, sp, #0x10
    2798:	sxth	w8, w1
    279c:	add	w8, w8, w0, sxtb
    27a0:	add	w8, w8, w2
    27a4:	add	x8, x3, w8, sxtw
    27a8:	str	q1, [sp]
    27ac:	scvtf	s1, x8
    27b0:	fadd	s0, s1, s0
    27b4:	bl	51b0 <PyInit__ctypes_test@@Base+0x1d8c>
    27b8:	ldr	q1, [sp]
    27bc:	bl	3448 <PyInit__ctypes_test@@Base+0x24>
    27c0:	ldp	x29, x30, [sp, #16]
    27c4:	add	sp, sp, #0x20
    27c8:	ret

00000000000027cc <_testfunc_p_p@@Base>:
    27cc:	ret

00000000000027d0 <_testfunc_c_p_p@@Base>:
    27d0:	ldr	w8, [x0]
    27d4:	sub	w8, w8, #0x1
    27d8:	ldr	x0, [x1, w8, sxtw #3]
    27dc:	ret

00000000000027e0 <get_strchr@@Base>:
    27e0:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    27e4:	ldr	x0, [x0, #4016]
    27e8:	ret

00000000000027ec <my_strdup@@Base>:
    27ec:	stp	x29, x30, [sp, #-32]!
    27f0:	str	x19, [sp, #16]
    27f4:	mov	x29, sp
    27f8:	mov	x19, x0
    27fc:	bl	20c0 <strlen@plt>
    2800:	add	x0, x0, #0x1
    2804:	bl	2100 <malloc@plt>
    2808:	cbz	x0, 2814 <my_strdup@@Base+0x28>
    280c:	mov	x1, x19
    2810:	bl	2180 <strcpy@plt>
    2814:	ldr	x19, [sp, #16]
    2818:	ldp	x29, x30, [sp], #32
    281c:	ret

0000000000002820 <my_free@@Base>:
    2820:	stp	x29, x30, [sp, #-16]!
    2824:	mov	x29, sp
    2828:	bl	2160 <free@plt>
    282c:	ldp	x29, x30, [sp], #16
    2830:	ret

0000000000002834 <my_wcsdup@@Base>:
    2834:	stp	x29, x30, [sp, #-48]!
    2838:	str	x21, [sp, #16]
    283c:	stp	x20, x19, [sp, #32]
    2840:	mov	x29, sp
    2844:	mov	x19, x0
    2848:	bl	2110 <wcslen@plt>
    284c:	lsl	x8, x0, #2
    2850:	add	x21, x8, #0x4
    2854:	mov	x0, x21
    2858:	bl	2100 <malloc@plt>
    285c:	mov	x20, x0
    2860:	cbz	x0, 2874 <my_wcsdup@@Base+0x40>
    2864:	mov	x0, x20
    2868:	mov	x1, x19
    286c:	mov	x2, x21
    2870:	bl	20a0 <memcpy@plt>
    2874:	mov	x0, x20
    2878:	ldp	x20, x19, [sp, #32]
    287c:	ldr	x21, [sp, #16]
    2880:	ldp	x29, x30, [sp], #48
    2884:	ret

0000000000002888 <my_wcslen@@Base>:
    2888:	stp	x29, x30, [sp, #-16]!
    288c:	mov	x29, sp
    2890:	bl	2110 <wcslen@plt>
    2894:	ldp	x29, x30, [sp], #16
    2898:	ret

000000000000289c <_testfunc_callfuncp@@Base>:
    289c:	stp	x29, x30, [sp, #-32]!
    28a0:	str	x19, [sp, #16]
    28a4:	mov	x29, sp
    28a8:	ldr	x8, [x0]
    28ac:	mov	x19, x0
    28b0:	mov	w0, #0x1                   	// #1
    28b4:	mov	w1, #0x2                   	// #2
    28b8:	blr	x8
    28bc:	ldr	x8, [x19, #8]
    28c0:	mov	w0, #0x3                   	// #3
    28c4:	mov	w1, #0x4                   	// #4
    28c8:	blr	x8
    28cc:	ldr	x19, [sp, #16]
    28d0:	mov	w0, wzr
    28d4:	ldp	x29, x30, [sp], #32
    28d8:	ret

00000000000028dc <_testfunc_deref_pointer@@Base>:
    28dc:	ldr	w0, [x0]
    28e0:	ret

00000000000028e4 <_testfunc_callback_with_pointer@@Base>:
    28e4:	sub	sp, sp, #0x40
    28e8:	stp	x29, x30, [sp, #48]
    28ec:	add	x29, sp, #0x30
    28f0:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    28f4:	add	x9, x9, #0x4e8
    28f8:	ldp	q0, q1, [x9]
    28fc:	ldr	x9, [x9, #32]
    2900:	mov	x8, x0
    2904:	mov	x0, sp
    2908:	stp	q0, q1, [sp]
    290c:	str	x9, [sp, #32]
    2910:	blr	x8
    2914:	ldp	x29, x30, [sp, #48]
    2918:	add	sp, sp, #0x40
    291c:	ret

0000000000002920 <_testfunc_q_bhilfdq@@Base>:
    2920:	sxth	w8, w1
    2924:	add	w8, w8, w0, sxtb
    2928:	add	w8, w8, w2
    292c:	add	x8, x3, w8, sxtw
    2930:	scvtf	s2, x8
    2934:	fadd	s0, s2, s0
    2938:	fcvt	d0, s0
    293c:	fadd	d0, d0, d1
    2940:	scvtf	d1, x4
    2944:	fadd	d0, d0, d1
    2948:	fcvtzs	x0, d0
    294c:	ret

0000000000002950 <_testfunc_q_bhilfd@@Base>:
    2950:	sxth	w8, w1
    2954:	add	w8, w8, w0, sxtb
    2958:	add	w8, w8, w2
    295c:	add	x8, x3, w8, sxtw
    2960:	scvtf	s2, x8
    2964:	fadd	s0, s2, s0
    2968:	fcvt	d0, s0
    296c:	fadd	d0, d0, d1
    2970:	fcvtzs	x0, d0
    2974:	ret

0000000000002978 <_testfunc_callback_i_if@@Base>:
    2978:	stp	x29, x30, [sp, #-48]!
    297c:	str	x21, [sp, #16]
    2980:	stp	x20, x19, [sp, #32]
    2984:	mov	x29, sp
    2988:	cbz	w0, 29c0 <_testfunc_callback_i_if@@Base+0x48>
    298c:	mov	x19, x1
    2990:	mov	w21, w0
    2994:	mov	w20, wzr
    2998:	mov	w0, w21
    299c:	blr	x19
    29a0:	cmp	w21, #0x0
    29a4:	add	w8, w21, #0x1
    29a8:	cinc	w9, w21, lt  // lt = tstop
    29ac:	asr	w21, w9, #1
    29b0:	cmp	w8, #0x2
    29b4:	add	w20, w0, w20
    29b8:	b.hi	2998 <_testfunc_callback_i_if@@Base+0x20>  // b.pmore
    29bc:	b	29c4 <_testfunc_callback_i_if@@Base+0x4c>
    29c0:	mov	w20, wzr
    29c4:	mov	w0, w20
    29c8:	ldp	x20, x19, [sp, #32]
    29cc:	ldr	x21, [sp, #16]
    29d0:	ldp	x29, x30, [sp], #48
    29d4:	ret

00000000000029d8 <_testfunc_callback_q_qf@@Base>:
    29d8:	stp	x29, x30, [sp, #-48]!
    29dc:	str	x21, [sp, #16]
    29e0:	stp	x20, x19, [sp, #32]
    29e4:	mov	x29, sp
    29e8:	cbz	x0, 2a20 <_testfunc_callback_q_qf@@Base+0x48>
    29ec:	mov	x19, x1
    29f0:	mov	x21, x0
    29f4:	mov	x20, xzr
    29f8:	mov	x0, x21
    29fc:	blr	x19
    2a00:	cmp	x21, #0x0
    2a04:	add	x8, x21, #0x1
    2a08:	cinc	x9, x21, lt  // lt = tstop
    2a0c:	asr	x21, x9, #1
    2a10:	cmp	x8, #0x2
    2a14:	add	x20, x0, x20
    2a18:	b.hi	29f8 <_testfunc_callback_q_qf@@Base+0x20>  // b.pmore
    2a1c:	b	2a24 <_testfunc_callback_q_qf@@Base+0x4c>
    2a20:	mov	x20, xzr
    2a24:	mov	x0, x20
    2a28:	ldp	x20, x19, [sp, #32]
    2a2c:	ldr	x21, [sp, #16]
    2a30:	ldp	x29, x30, [sp], #48
    2a34:	ret

0000000000002a38 <getSPAMANDEGGS@@Base>:
    2a38:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2a3c:	ldr	x9, [x9, #3992]
    2a40:	mov	x8, x0
    2a44:	mov	w0, #0x1                   	// #1
    2a48:	str	x9, [x8]
    2a4c:	ret

0000000000002a50 <_testfunc_byval@@Base>:
    2a50:	lsr	x8, x0, #32
    2a54:	cbz	x1, 2a5c <_testfunc_byval@@Base+0xc>
    2a58:	stp	w0, w8, [x1]
    2a5c:	add	w0, w8, w0
    2a60:	ret

0000000000002a64 <get_an_integer@@Base>:
    2a64:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2a68:	ldr	x8, [x8, #4056]
    2a6c:	ldr	w0, [x8]
    2a70:	ret

0000000000002a74 <integrate@@Base>:
    2a74:	stp	d13, d12, [sp, #-80]!
    2a78:	stp	d11, d10, [sp, #16]
    2a7c:	stp	d9, d8, [sp, #32]
    2a80:	stp	x29, x30, [sp, #48]
    2a84:	str	x19, [sp, #64]
    2a88:	mov	x29, sp
    2a8c:	mov	v9.16b, v0.16b
    2a90:	fsub	d0, d1, d0
    2a94:	scvtf	d11, x1
    2a98:	mov	v8.16b, v1.16b
    2a9c:	fmov	d1, #5.000000000000000000e-01
    2aa0:	fdiv	d12, d0, d11
    2aa4:	fmul	d0, d12, d1
    2aa8:	fadd	d10, d0, d9
    2aac:	fsub	d0, d8, d10
    2ab0:	fsub	d1, d10, d9
    2ab4:	fmul	d0, d0, d1
    2ab8:	fcmp	d0, #0.0
    2abc:	fmov	d13, xzr
    2ac0:	b.le	2af0 <integrate@@Base+0x7c>
    2ac4:	mov	x19, x0
    2ac8:	fmov	d13, xzr
    2acc:	mov	v0.16b, v10.16b
    2ad0:	blr	x19
    2ad4:	fadd	d10, d12, d10
    2ad8:	fsub	d1, d8, d10
    2adc:	fsub	d2, d10, d9
    2ae0:	fmul	d1, d1, d2
    2ae4:	fcmp	d1, #0.0
    2ae8:	fadd	d13, d13, d0
    2aec:	b.gt	2acc <integrate@@Base+0x58>
    2af0:	fdiv	d0, d13, d11
    2af4:	ldr	x19, [sp, #64]
    2af8:	ldp	x29, x30, [sp, #48]
    2afc:	ldp	d9, d8, [sp, #32]
    2b00:	ldp	d11, d10, [sp, #16]
    2b04:	ldp	d13, d12, [sp], #80
    2b08:	ret
    2b0c:	stp	x29, x30, [sp, #-32]!
    2b10:	stp	x20, x19, [sp, #16]
    2b14:	mov	x29, sp
    2b18:	mov	x19, x1
    2b1c:	mov	x20, x0
    2b20:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2b24:	add	x0, x0, #0x5d0
    2b28:	mov	x1, x20
    2b2c:	mov	x2, x19
    2b30:	bl	21a0 <printf@plt>
    2b34:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2b38:	add	x0, x0, #0x617
    2b3c:	bl	2140 <puts@plt>
    2b40:	mov	w0, #0x20                  	// #32
    2b44:	blr	x20
    2b48:	mov	x20, x0
    2b4c:	blr	x19
    2b50:	adrp	x0, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2b54:	add	x0, x0, #0x5e5
    2b58:	mov	x1, x20
    2b5c:	bl	21a0 <printf@plt>
    2b60:	ldp	x20, x19, [sp, #16]
    2b64:	ldp	x29, x30, [sp], #32
    2b68:	ret

0000000000002b6c <library_get@@Base>:
    2b6c:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2b70:	ldr	x0, [x0, #4064]
    2b74:	ret

0000000000002b78 <py_func_si@@Base>:
    2b78:	sub	sp, sp, #0x20
    2b7c:	stp	x29, x30, [sp, #16]
    2b80:	add	x29, sp, #0x10
    2b84:	mov	x0, x1
    2b88:	adrp	x1, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2b8c:	add	x1, x1, #0x60f
    2b90:	add	x2, sp, #0x8
    2b94:	add	x3, sp, #0x4
    2b98:	bl	2150 <PyArg_ParseTuple@plt>
    2b9c:	cbz	w0, 2bb0 <py_func_si@@Base+0x38>
    2ba0:	bl	2bc0 <py_func_si@@Base+0x48>
    2ba4:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2ba8:	ldr	x0, [x0, #4008]
    2bac:	b	2bb4 <py_func_si@@Base+0x3c>
    2bb0:	mov	x0, xzr
    2bb4:	ldp	x29, x30, [sp, #16]
    2bb8:	add	sp, sp, #0x20
    2bbc:	ret
    2bc0:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2bc4:	ldr	x8, [x8, #4008]
    2bc8:	ldr	x9, [x8]
    2bcc:	add	x9, x9, #0x1
    2bd0:	str	x9, [x8]
    2bd4:	ret

0000000000002bd8 <_py_func_si@@Base>:
    2bd8:	ret

0000000000002bdc <py_func@@Base>:
    2bdc:	stp	x29, x30, [sp, #-16]!
    2be0:	mov	x29, sp
    2be4:	bl	2bc0 <py_func_si@@Base+0x48>
    2be8:	adrp	x0, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2bec:	ldr	x0, [x0, #4008]
    2bf0:	ldp	x29, x30, [sp], #16
    2bf4:	ret

0000000000002bf8 <_py_func@@Base>:
    2bf8:	ret

0000000000002bfc <set_bitfields@@Base>:
    2bfc:	and	w8, w1, #0xff
    2c00:	sub	w8, w8, #0x41
    2c04:	cmp	w8, #0x12
    2c08:	b.hi	2d34 <set_bitfields@@Base+0x138>  // b.pmore
    2c0c:	adrp	x9, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2c10:	add	x9, x9, #0x4c0
    2c14:	adr	x10, 2c24 <set_bitfields@@Base+0x28>
    2c18:	ldrb	w11, [x9, x8]
    2c1c:	add	x10, x10, x11, lsl #2
    2c20:	br	x10
    2c24:	ldr	w8, [x0]
    2c28:	bfxil	w8, w2, #0, #1
    2c2c:	str	w8, [x0]
    2c30:	ret
    2c34:	ldr	w8, [x0]
    2c38:	bfi	w8, w2, #1, #2
    2c3c:	str	w8, [x0]
    2c40:	ret
    2c44:	ldr	w8, [x0]
    2c48:	bfi	w8, w2, #3, #3
    2c4c:	str	w8, [x0]
    2c50:	ret
    2c54:	ldr	w8, [x0]
    2c58:	bfi	w8, w2, #6, #4
    2c5c:	str	w8, [x0]
    2c60:	ret
    2c64:	ldr	w8, [x0]
    2c68:	bfi	w8, w2, #10, #5
    2c6c:	str	w8, [x0]
    2c70:	ret
    2c74:	ldr	w8, [x0]
    2c78:	bfi	w8, w2, #15, #6
    2c7c:	str	w8, [x0]
    2c80:	ret
    2c84:	ldr	w8, [x0]
    2c88:	bfi	w8, w2, #21, #7
    2c8c:	str	w8, [x0]
    2c90:	ret
    2c94:	strb	w2, [x0, #4]
    2c98:	ret
    2c9c:	ldur	x8, [x0, #4]
    2ca0:	ubfiz	w9, w2, #8, #9
    2ca4:	and	x8, x8, #0xfffffffffffe00ff
    2ca8:	orr	x8, x8, x9
    2cac:	b	2d30 <set_bitfields@@Base+0x134>
    2cb0:	ldur	x8, [x0, #4]
    2cb4:	ubfiz	w9, w2, #17, #1
    2cb8:	and	x8, x8, #0xfffffffffffdffff
    2cbc:	orr	x8, x8, x9
    2cc0:	b	2d30 <set_bitfields@@Base+0x134>
    2cc4:	ldur	x8, [x0, #4]
    2cc8:	ubfiz	w9, w2, #18, #2
    2ccc:	and	x8, x8, #0xfffffffffff3ffff
    2cd0:	orr	x8, x8, x9
    2cd4:	b	2d30 <set_bitfields@@Base+0x134>
    2cd8:	ldur	x8, [x0, #4]
    2cdc:	ubfiz	w9, w2, #20, #3
    2ce0:	and	x8, x8, #0xffffffffff8fffff
    2ce4:	orr	x8, x8, x9
    2ce8:	b	2d30 <set_bitfields@@Base+0x134>
    2cec:	ldur	x8, [x0, #4]
    2cf0:	ubfiz	w9, w2, #23, #4
    2cf4:	and	x8, x8, #0xfffffffff87fffff
    2cf8:	orr	x8, x8, x9
    2cfc:	b	2d30 <set_bitfields@@Base+0x134>
    2d00:	ldur	x8, [x0, #4]
    2d04:	lsl	w9, w2, #27
    2d08:	and	x8, x8, #0xffffffff07ffffff
    2d0c:	orr	x8, x8, x9
    2d10:	b	2d30 <set_bitfields@@Base+0x134>
    2d14:	ldur	x8, [x0, #4]
    2d18:	and	w9, w2, #0x3f
    2d1c:	bfi	x8, x9, #32, #6
    2d20:	b	2d30 <set_bitfields@@Base+0x134>
    2d24:	ldur	x8, [x0, #4]
    2d28:	and	w9, w2, #0x7f
    2d2c:	bfi	x8, x9, #38, #7
    2d30:	stur	x8, [x0, #4]
    2d34:	ret

0000000000002d38 <unpack_bitfields@@Base>:
    2d38:	and	w9, w1, #0xff
    2d3c:	sub	w9, w9, #0x41
    2d40:	mov	x8, x0
    2d44:	cmp	w9, #0x12
    2d48:	mov	w0, #0x3e7                 	// #999
    2d4c:	b.hi	2e20 <unpack_bitfields@@Base+0xe8>  // b.pmore
    2d50:	adrp	x10, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    2d54:	add	x10, x10, #0x4d3
    2d58:	adr	x11, 2d68 <unpack_bitfields@@Base+0x30>
    2d5c:	ldrb	w12, [x10, x9]
    2d60:	add	x11, x11, x12, lsl #2
    2d64:	br	x11
    2d68:	ldr	w8, [x8]
    2d6c:	sbfx	w0, w8, #0, #1
    2d70:	ret
    2d74:	ldr	w8, [x8]
    2d78:	sbfx	w0, w8, #1, #2
    2d7c:	ret
    2d80:	ldr	w8, [x8]
    2d84:	sbfx	w0, w8, #3, #3
    2d88:	ret
    2d8c:	ldr	w8, [x8]
    2d90:	sbfx	w0, w8, #6, #4
    2d94:	ret
    2d98:	ldr	w8, [x8]
    2d9c:	sbfx	w0, w8, #10, #5
    2da0:	ret
    2da4:	ldr	w8, [x8]
    2da8:	sbfx	w0, w8, #15, #6
    2dac:	ret
    2db0:	ldr	w8, [x8]
    2db4:	sbfx	w0, w8, #21, #7
    2db8:	ret
    2dbc:	ldrsb	w0, [x8, #4]
    2dc0:	ret
    2dc4:	ldur	x8, [x8, #4]
    2dc8:	sbfx	x0, x8, #8, #9
    2dcc:	ret
    2dd0:	ldur	x8, [x8, #4]
    2dd4:	sbfx	x0, x8, #17, #1
    2dd8:	ret
    2ddc:	ldur	x8, [x8, #4]
    2de0:	sbfx	x0, x8, #18, #2
    2de4:	ret
    2de8:	ldur	x8, [x8, #4]
    2dec:	sbfx	x0, x8, #20, #3
    2df0:	ret
    2df4:	ldur	x8, [x8, #4]
    2df8:	sbfx	x0, x8, #23, #4
    2dfc:	ret
    2e00:	ldur	x8, [x8, #4]
    2e04:	sbfx	x0, x8, #27, #5
    2e08:	ret
    2e0c:	ldur	x8, [x8, #4]
    2e10:	sbfx	x0, x8, #32, #6
    2e14:	ret
    2e18:	ldur	x8, [x8, #4]
    2e1c:	sbfx	x0, x8, #38, #7
    2e20:	ret

0000000000002e24 <tf_b@@Base>:
    2e24:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2e28:	mov	w11, #0x5556                	// #21846
    2e2c:	sxtb	w8, w0
    2e30:	ldr	x10, [x10, #4024]
    2e34:	movk	w11, #0x5555, lsl #16
    2e38:	smull	x8, w8, w11
    2e3c:	lsr	x11, x8, #63
    2e40:	lsr	x8, x8, #32
    2e44:	sxtb	x9, w0
    2e48:	add	w0, w8, w11
    2e4c:	str	x9, [x10]
    2e50:	ret

0000000000002e54 <tf_B@@Base>:
    2e54:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2e58:	ldr	x10, [x10, #4032]
    2e5c:	mov	w11, #0xaaab                	// #43691
    2e60:	and	w8, w0, #0xff
    2e64:	movk	w11, #0xaaaa, lsl #16
    2e68:	umull	x8, w8, w11
    2e6c:	and	x9, x0, #0xff
    2e70:	lsr	x0, x8, #33
    2e74:	str	x9, [x10]
    2e78:	ret

0000000000002e7c <tf_h@@Base>:
    2e7c:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2e80:	mov	w11, #0x5556                	// #21846
    2e84:	sxth	w8, w0
    2e88:	ldr	x10, [x10, #4024]
    2e8c:	movk	w11, #0x5555, lsl #16
    2e90:	smull	x8, w8, w11
    2e94:	lsr	x11, x8, #63
    2e98:	lsr	x8, x8, #32
    2e9c:	sxth	x9, w0
    2ea0:	add	w0, w8, w11
    2ea4:	str	x9, [x10]
    2ea8:	ret

0000000000002eac <tf_H@@Base>:
    2eac:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2eb0:	ldr	x10, [x10, #4032]
    2eb4:	mov	w11, #0xaaab                	// #43691
    2eb8:	and	w8, w0, #0xffff
    2ebc:	movk	w11, #0xaaaa, lsl #16
    2ec0:	umull	x8, w8, w11
    2ec4:	and	x9, x0, #0xffff
    2ec8:	lsr	x0, x8, #33
    2ecc:	str	x9, [x10]
    2ed0:	ret

0000000000002ed4 <tf_i@@Base>:
    2ed4:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2ed8:	mov	w10, #0x5556                	// #21846
    2edc:	ldr	x9, [x9, #4024]
    2ee0:	movk	w10, #0x5555, lsl #16
    2ee4:	smull	x10, w0, w10
    2ee8:	lsr	x11, x10, #63
    2eec:	lsr	x10, x10, #32
    2ef0:	sxtw	x8, w0
    2ef4:	add	w0, w10, w11
    2ef8:	str	x8, [x9]
    2efc:	ret

0000000000002f00 <tf_I@@Base>:
    2f00:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2f04:	ldr	x9, [x9, #4032]
    2f08:	mov	w10, #0xaaab                	// #43691
    2f0c:	movk	w10, #0xaaaa, lsl #16
    2f10:	umull	x10, w0, w10
    2f14:	mov	w8, w0
    2f18:	lsr	x0, x10, #33
    2f1c:	str	x8, [x9]
    2f20:	ret

0000000000002f24 <tf_l@@Base>:
    2f24:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2f28:	ldr	x9, [x9, #4024]
    2f2c:	mov	x8, #0x5555555555555555    	// #6148914691236517205
    2f30:	movk	x8, #0x5556
    2f34:	smulh	x8, x0, x8
    2f38:	add	x8, x8, x8, lsr #63
    2f3c:	str	x0, [x9]
    2f40:	mov	x0, x8
    2f44:	ret

0000000000002f48 <tf_L@@Base>:
    2f48:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2f4c:	ldr	x9, [x9, #4032]
    2f50:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2f54:	movk	x8, #0xaaab
    2f58:	umulh	x8, x0, x8
    2f5c:	lsr	x8, x8, #1
    2f60:	str	x0, [x9]
    2f64:	mov	x0, x8
    2f68:	ret

0000000000002f6c <tf_q@@Base>:
    2f6c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2f70:	ldr	x9, [x9, #4024]
    2f74:	mov	x8, #0x5555555555555555    	// #6148914691236517205
    2f78:	movk	x8, #0x5556
    2f7c:	smulh	x8, x0, x8
    2f80:	add	x8, x8, x8, lsr #63
    2f84:	str	x0, [x9]
    2f88:	mov	x0, x8
    2f8c:	ret

0000000000002f90 <tf_Q@@Base>:
    2f90:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2f94:	ldr	x9, [x9, #4032]
    2f98:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    2f9c:	movk	x8, #0xaaab
    2fa0:	umulh	x8, x0, x8
    2fa4:	lsr	x8, x8, #1
    2fa8:	str	x0, [x9]
    2fac:	mov	x0, x8
    2fb0:	ret

0000000000002fb4 <tf_f@@Base>:
    2fb4:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2fb8:	ldr	x9, [x9, #4024]
    2fbc:	fmov	s1, #3.000000000000000000e+00
    2fc0:	fcvtzs	x8, s0
    2fc4:	fdiv	s0, s0, s1
    2fc8:	str	x8, [x9]
    2fcc:	ret

0000000000002fd0 <tf_d@@Base>:
    2fd0:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    2fd4:	ldr	x9, [x9, #4024]
    2fd8:	fmov	d1, #3.000000000000000000e+00
    2fdc:	fcvtzs	x8, d0
    2fe0:	fdiv	d0, d0, d1
    2fe4:	str	x8, [x9]
    2fe8:	ret

0000000000002fec <tf_D@@Base>:
    2fec:	sub	sp, sp, #0x20
    2ff0:	stp	x29, x30, [sp, #16]
    2ff4:	add	x29, sp, #0x10
    2ff8:	str	q0, [sp]
    2ffc:	bl	5078 <PyInit__ctypes_test@@Base+0x1c54>
    3000:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    3004:	ldr	x8, [x8, #4024]
    3008:	ldr	q0, [sp]
    300c:	str	x0, [x8]
    3010:	adrp	x8, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    3014:	ldr	q1, [x8, #1296]
    3018:	bl	3f70 <PyInit__ctypes_test@@Base+0xb4c>
    301c:	ldp	x29, x30, [sp, #16]
    3020:	add	sp, sp, #0x20
    3024:	ret

0000000000003028 <tf_bb@@Base>:
    3028:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    302c:	mov	w11, #0x5556                	// #21846
    3030:	sxtb	w8, w1
    3034:	ldr	x10, [x10, #4024]
    3038:	movk	w11, #0x5555, lsl #16
    303c:	smull	x8, w8, w11
    3040:	lsr	x11, x8, #63
    3044:	lsr	x8, x8, #32
    3048:	sxtb	x9, w1
    304c:	add	w0, w8, w11
    3050:	str	x9, [x10]
    3054:	ret

0000000000003058 <tf_bB@@Base>:
    3058:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    305c:	ldr	x10, [x10, #4032]
    3060:	mov	w11, #0xaaab                	// #43691
    3064:	and	w8, w1, #0xff
    3068:	movk	w11, #0xaaaa, lsl #16
    306c:	umull	x8, w8, w11
    3070:	and	x9, x1, #0xff
    3074:	lsr	x0, x8, #33
    3078:	str	x9, [x10]
    307c:	ret

0000000000003080 <tf_bh@@Base>:
    3080:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    3084:	mov	w11, #0x5556                	// #21846
    3088:	sxth	w8, w1
    308c:	ldr	x10, [x10, #4024]
    3090:	movk	w11, #0x5555, lsl #16
    3094:	smull	x8, w8, w11
    3098:	lsr	x11, x8, #63
    309c:	lsr	x8, x8, #32
    30a0:	sxth	x9, w1
    30a4:	add	w0, w8, w11
    30a8:	str	x9, [x10]
    30ac:	ret

00000000000030b0 <tf_bH@@Base>:
    30b0:	adrp	x10, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    30b4:	ldr	x10, [x10, #4032]
    30b8:	mov	w11, #0xaaab                	// #43691
    30bc:	and	w8, w1, #0xffff
    30c0:	movk	w11, #0xaaaa, lsl #16
    30c4:	umull	x8, w8, w11
    30c8:	and	x9, x1, #0xffff
    30cc:	lsr	x0, x8, #33
    30d0:	str	x9, [x10]
    30d4:	ret

00000000000030d8 <tf_bi@@Base>:
    30d8:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    30dc:	mov	w10, #0x5556                	// #21846
    30e0:	ldr	x9, [x9, #4024]
    30e4:	movk	w10, #0x5555, lsl #16
    30e8:	smull	x10, w1, w10
    30ec:	lsr	x11, x10, #63
    30f0:	lsr	x10, x10, #32
    30f4:	sxtw	x8, w1
    30f8:	add	w0, w10, w11
    30fc:	str	x8, [x9]
    3100:	ret

0000000000003104 <tf_bI@@Base>:
    3104:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    3108:	ldr	x9, [x9, #4032]
    310c:	mov	w10, #0xaaab                	// #43691
    3110:	movk	w10, #0xaaaa, lsl #16
    3114:	umull	x10, w1, w10
    3118:	mov	w8, w1
    311c:	lsr	x0, x10, #33
    3120:	str	x8, [x9]
    3124:	ret

0000000000003128 <tf_bl@@Base>:
    3128:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    312c:	ldr	x8, [x8, #4024]
    3130:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    3134:	movk	x9, #0x5556
    3138:	smulh	x9, x1, x9
    313c:	add	x0, x9, x9, lsr #63
    3140:	str	x1, [x8]
    3144:	ret

0000000000003148 <tf_bL@@Base>:
    3148:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    314c:	ldr	x8, [x8, #4032]
    3150:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3154:	movk	x9, #0xaaab
    3158:	umulh	x9, x1, x9
    315c:	lsr	x0, x9, #1
    3160:	str	x1, [x8]
    3164:	ret

0000000000003168 <tf_bq@@Base>:
    3168:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    316c:	ldr	x8, [x8, #4024]
    3170:	mov	x9, #0x5555555555555555    	// #6148914691236517205
    3174:	movk	x9, #0x5556
    3178:	smulh	x9, x1, x9
    317c:	add	x0, x9, x9, lsr #63
    3180:	str	x1, [x8]
    3184:	ret

0000000000003188 <tf_bQ@@Base>:
    3188:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    318c:	ldr	x8, [x8, #4032]
    3190:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
    3194:	movk	x9, #0xaaab
    3198:	umulh	x9, x1, x9
    319c:	lsr	x0, x9, #1
    31a0:	str	x1, [x8]
    31a4:	ret

00000000000031a8 <tf_bf@@Base>:
    31a8:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    31ac:	ldr	x9, [x9, #4024]
    31b0:	fmov	s1, #3.000000000000000000e+00
    31b4:	fcvtzs	x8, s0
    31b8:	fdiv	s0, s0, s1
    31bc:	str	x8, [x9]
    31c0:	ret

00000000000031c4 <tf_bd@@Base>:
    31c4:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    31c8:	ldr	x9, [x9, #4024]
    31cc:	fmov	d1, #3.000000000000000000e+00
    31d0:	fcvtzs	x8, d0
    31d4:	fdiv	d0, d0, d1
    31d8:	str	x8, [x9]
    31dc:	ret

00000000000031e0 <tf_bD@@Base>:
    31e0:	sub	sp, sp, #0x20
    31e4:	stp	x29, x30, [sp, #16]
    31e8:	add	x29, sp, #0x10
    31ec:	str	q0, [sp]
    31f0:	bl	5078 <PyInit__ctypes_test@@Base+0x1c54>
    31f4:	adrp	x8, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    31f8:	ldr	x8, [x8, #4024]
    31fc:	ldr	q0, [sp]
    3200:	str	x0, [x8]
    3204:	adrp	x8, 5000 <PyInit__ctypes_test@@Base+0x1bdc>
    3208:	ldr	q1, [x8, #1296]
    320c:	bl	3f70 <PyInit__ctypes_test@@Base+0xb4c>
    3210:	ldp	x29, x30, [sp, #16]
    3214:	add	sp, sp, #0x20
    3218:	ret

000000000000321c <tv_i@@Base>:
    321c:	adrp	x9, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    3220:	ldr	x9, [x9, #4024]
    3224:	sxtw	x8, w0
    3228:	str	x8, [x9]
    322c:	ret

0000000000003230 <PointInRect@@Base>:
    3230:	ldr	x8, [x0]
    3234:	cmp	x1, x8
    3238:	b.ge	3244 <PointInRect@@Base+0x14>  // b.tcont
    323c:	mov	w0, wzr
    3240:	ret
    3244:	ldr	x8, [x0, #16]
    3248:	cmp	x1, x8
    324c:	b.le	3258 <PointInRect@@Base+0x28>
    3250:	mov	w0, wzr
    3254:	ret
    3258:	ldr	x8, [x0, #8]
    325c:	cmp	x2, x8
    3260:	b.ge	326c <PointInRect@@Base+0x3c>  // b.tcont
    3264:	mov	w0, wzr
    3268:	ret
    326c:	ldr	x8, [x0, #24]
    3270:	cmp	x2, x8
    3274:	cset	w0, le
    3278:	ret

000000000000327c <ReturnRect@@Base>:
    327c:	adrp	x14, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    3280:	ldr	x9, [sp, #16]
    3284:	ldr	x10, [x1]
    3288:	ldr	x11, [x2]
    328c:	ldr	x12, [x5]
    3290:	ldr	x13, [x6]
    3294:	ldr	x14, [x14, #3976]
    3298:	add	x10, x11, x10
    329c:	ldr	x11, [x9]
    32a0:	add	x10, x10, x12
    32a4:	ldr	x14, [x14]
    32a8:	add	x10, x10, x13
    32ac:	add	x10, x10, x11
    32b0:	add	x11, x14, x14, lsl #2
    32b4:	cmp	x10, x11
    32b8:	b.ne	3324 <ReturnRect@@Base+0xa8>  // b.any
    32bc:	adrp	x15, 15000 <PyInit__ctypes_test@@Base+0x11bdc>
    32c0:	ldr	x10, [x1, #16]
    32c4:	ldr	x11, [x2, #16]
    32c8:	ldr	x12, [x5, #16]
    32cc:	ldr	x13, [x6, #16]
    32d0:	ldr	x14, [x9, #16]
    32d4:	ldr	x15, [x15, #3984]
    32d8:	add	x10, x11, x10
    32dc:	add	x10, x10, x12
    32e0:	add	x10, x10, x13
    32e4:	ldr	x15, [x15]
    32e8:	add	x10, x10, x14
    32ec:	add	x11, x15, x15, lsl #2
    32f0:	cmp	x10, x11
    32f4:	b.ne	3330 <ReturnRect@@Base+0xb4>  // b.any
    32f8:	ldp	x11, x10, [sp]
    32fc:	cmp	x3, x11
    3300:	b.ne	333c <ReturnRect@@Base+0xc0>  // b.any
    3304:	cmp	x4, x10
    3308:	b.ne	333c <ReturnRect@@Base+0xc0>  // b.any
    330c:	cmp	w0, #0x2
    3310:	b.eq	3358 <ReturnRect@@Base+0xdc>  // b.none
    3314:	cmp	w0, #0x1
    3318:	b.ne	335c <ReturnRect@@Base+0xe0>  // b.any
    331c:	mov	x1, x5
    3320:	b	335c <ReturnRect@@Base+0xe0>
    3324:	mov	w9, #0x64                  	// #100
    3328:	str	x9, [x1]
    332c:	b	335c <ReturnRect@@Base+0xe0>
    3330:	mov	w9, #0x64                  	// #100
    3334:	str	x9, [x1, #16]
    3338:	b	335c <ReturnRect@@Base+0xe0>
    333c:	cmp	x4, x10
    3340:	mov	x10, #0xffffffffffffff38    	// #-200
    3344:	mov	x11, #0xffffffffffffff9c    	// #-100
    3348:	csel	x10, x11, x10, eq  // eq = none
    334c:	str	x10, [x1]
    3350:	cmp	w0, #0x2
    3354:	b.ne	3314 <ReturnRect@@Base+0x98>  // b.any
    3358:	mov	x1, x9
    335c:	ldp	q1, q0, [x1]
    3360:	stp	q1, q0, [x8]
    3364:	ret

0000000000003368 <ret_2h_func@@Base>:
    3368:	ubfx	x8, x0, #16, #16
    336c:	add	w8, w8, w8, lsl #1
    3370:	ubfiz	w0, w0, #1, #15
    3374:	bfi	w0, w8, #16, #16
    3378:	ret

000000000000337c <ret_8i_func@@Base>:
    337c:	ldp	w9, w10, [x0]
    3380:	ldp	w11, w12, [x0, #8]
    3384:	lsl	w9, w9, #1
    3388:	str	w9, [x0]
    338c:	ldp	w9, w13, [x0, #16]
    3390:	add	w10, w10, w10, lsl #1
    3394:	lsl	w11, w11, #2
    3398:	stp	w10, w11, [x0, #4]
    339c:	ldp	w10, w11, [x0, #24]
    33a0:	add	w12, w12, w12, lsl #2
    33a4:	str	w12, [x0, #12]
    33a8:	lsl	w12, w13, #3
    33ac:	sub	w12, w12, w13
    33b0:	lsl	w10, w10, #3
    33b4:	add	w9, w9, w9, lsl #1
    33b8:	stp	w12, w10, [x0, #20]
    33bc:	add	w10, w11, w11, lsl #3
    33c0:	lsl	w9, w9, #1
    33c4:	str	w10, [x0, #28]
    33c8:	str	w9, [x0, #16]
    33cc:	ldp	q1, q0, [x0]
    33d0:	stp	q1, q0, [x8]
    33d4:	ret

00000000000033d8 <GetRectangle@@Base>:
    33d8:	cbz	w0, 3404 <GetRectangle@@Base+0x2c>
    33dc:	add	w9, w0, #0x1
    33e0:	add	w10, w0, #0x2
    33e4:	add	w11, w0, #0x3
    33e8:	sxtw	x8, w0
    33ec:	sxtw	x9, w9
    33f0:	sxtw	x10, w10
    33f4:	sxtw	x11, w11
    33f8:	mov	w0, #0x1                   	// #1
    33fc:	stp	x8, x9, [x1]
    3400:	stp	x10, x11, [x1, #16]
    3404:	ret

0000000000003408 <TwoOutArgs@@Base>:
    3408:	ldr	w8, [x1]
    340c:	add	w8, w8, w0
    3410:	str	w8, [x1]
    3414:	ldr	w8, [x3]
    3418:	add	w8, w8, w2
    341c:	str	w8, [x3]
    3420:	ret

0000000000003424 <PyInit__ctypes_test@@Base>:
    3424:	stp	x29, x30, [sp, #-16]!
    3428:	mov	x29, sp
    342c:	adrp	x0, 16000 <PyInit__ctypes_test@@Base+0x12bdc>
    3430:	add	x0, x0, #0xf8
    3434:	mov	w1, #0x3f5                 	// #1013
    3438:	bl	2130 <PyModule_Create2@plt>
    343c:	ldp	x29, x30, [sp], #16
    3440:	ret
    3444:	nop
    3448:	stp	x29, x30, [sp, #-48]!
    344c:	mov	x29, sp
    3450:	str	q0, [sp, #16]
    3454:	str	q1, [sp, #32]
    3458:	ldp	x6, x1, [sp, #16]
    345c:	ldp	x0, x3, [sp, #32]
    3460:	mrs	x15, fpcr
    3464:	lsr	x7, x1, #63
    3468:	mov	x10, x0
    346c:	ubfiz	x4, x3, #3, #48
    3470:	lsr	x5, x3, #63
    3474:	mov	x12, x7
    3478:	ubfiz	x2, x1, #3, #48
    347c:	orr	x4, x4, x0, lsr #61
    3480:	ubfx	x8, x1, #48, #15
    3484:	ubfx	x0, x3, #48, #15
    3488:	and	w7, w7, #0xff
    348c:	mov	x16, x12
    3490:	cmp	x12, x5
    3494:	and	w11, w5, #0xff
    3498:	orr	x2, x2, x6, lsr #61
    349c:	mov	x1, x8
    34a0:	lsl	x9, x6, #3
    34a4:	mov	x3, x0
    34a8:	lsl	x13, x10, #3
    34ac:	b.eq	3658 <PyInit__ctypes_test@@Base+0x234>  // b.none
    34b0:	sub	w0, w8, w0
    34b4:	cmp	w0, #0x0
    34b8:	b.le	3604 <PyInit__ctypes_test@@Base+0x1e0>
    34bc:	cbz	x3, 36b8 <PyInit__ctypes_test@@Base+0x294>
    34c0:	orr	x4, x4, #0x8000000000000
    34c4:	mov	x3, #0x7fff                	// #32767
    34c8:	cmp	x1, x3
    34cc:	b.eq	38bc <PyInit__ctypes_test@@Base+0x498>  // b.none
    34d0:	cmp	w0, #0x74
    34d4:	b.gt	3940 <PyInit__ctypes_test@@Base+0x51c>
    34d8:	cmp	w0, #0x3f
    34dc:	b.gt	3aa0 <PyInit__ctypes_test@@Base+0x67c>
    34e0:	mov	w3, #0x40                  	// #64
    34e4:	sub	w3, w3, w0
    34e8:	lsr	x6, x13, x0
    34ec:	lsl	x13, x13, x3
    34f0:	cmp	x13, #0x0
    34f4:	cset	x5, ne  // ne = any
    34f8:	lsl	x3, x4, x3
    34fc:	orr	x3, x3, x6
    3500:	lsr	x0, x4, x0
    3504:	orr	x3, x3, x5
    3508:	sub	x2, x2, x0
    350c:	subs	x9, x9, x3
    3510:	sbc	x2, x2, xzr
    3514:	and	x3, x2, #0x7ffffffffffff
    3518:	tbz	x2, #51, 36f8 <PyInit__ctypes_test@@Base+0x2d4>
    351c:	cbz	x3, 3924 <PyInit__ctypes_test@@Base+0x500>
    3520:	clz	x0, x3
    3524:	sub	w0, w0, #0xc
    3528:	neg	w2, w0
    352c:	lsl	x4, x3, x0
    3530:	lsl	x3, x9, x0
    3534:	lsr	x9, x9, x2
    3538:	orr	x2, x9, x4
    353c:	cmp	x1, w0, sxtw
    3540:	sxtw	x4, w0
    3544:	b.gt	3904 <PyInit__ctypes_test@@Base+0x4e0>
    3548:	sub	w1, w0, w1
    354c:	add	w0, w1, #0x1
    3550:	cmp	w0, #0x3f
    3554:	b.gt	3a68 <PyInit__ctypes_test@@Base+0x644>
    3558:	mov	w1, #0x40                  	// #64
    355c:	sub	w1, w1, w0
    3560:	lsr	x4, x3, x0
    3564:	lsl	x3, x3, x1
    3568:	cmp	x3, #0x0
    356c:	lsl	x9, x2, x1
    3570:	cset	x1, ne  // ne = any
    3574:	orr	x9, x9, x4
    3578:	lsr	x2, x2, x0
    357c:	orr	x9, x9, x1
    3580:	orr	x8, x9, x2
    3584:	cbz	x8, 370c <PyInit__ctypes_test@@Base+0x2e8>
    3588:	and	x0, x9, #0x7
    358c:	mov	x1, #0x0                   	// #0
    3590:	mov	w5, #0x1                   	// #1
    3594:	cbz	x0, 3950 <PyInit__ctypes_test@@Base+0x52c>
    3598:	and	x3, x15, #0xc00000
    359c:	cmp	x3, #0x400, lsl #12
    35a0:	b.eq	3894 <PyInit__ctypes_test@@Base+0x470>  // b.none
    35a4:	cmp	x3, #0x800, lsl #12
    35a8:	b.eq	3874 <PyInit__ctypes_test@@Base+0x450>  // b.none
    35ac:	cbz	x3, 38a0 <PyInit__ctypes_test@@Base+0x47c>
    35b0:	and	x3, x2, #0x8000000000000
    35b4:	mov	w0, #0x10                  	// #16
    35b8:	cbz	w5, 35c0 <PyInit__ctypes_test@@Base+0x19c>
    35bc:	orr	w0, w0, #0x8
    35c0:	cbz	x3, 38d8 <PyInit__ctypes_test@@Base+0x4b4>
    35c4:	add	x1, x1, #0x1
    35c8:	mov	x3, #0x7fff                	// #32767
    35cc:	cmp	x1, x3
    35d0:	b.eq	37bc <PyInit__ctypes_test@@Base+0x398>  // b.none
    35d4:	and	w1, w1, #0x7fff
    35d8:	extr	x8, x2, x9, #3
    35dc:	ubfx	x2, x2, #3, #48
    35e0:	mov	x5, #0x0                   	// #0
    35e4:	orr	w1, w1, w7, lsl #15
    35e8:	bfxil	x5, x2, #0, #48
    35ec:	fmov	d0, x8
    35f0:	bfi	x5, x1, #48, #16
    35f4:	fmov	v0.d[1], x5
    35f8:	cbnz	w0, 3818 <PyInit__ctypes_test@@Base+0x3f4>
    35fc:	ldp	x29, x30, [sp], #48
    3600:	ret
    3604:	mov	x14, x5
    3608:	b.eq	3724 <PyInit__ctypes_test@@Base+0x300>  // b.none
    360c:	cbnz	x8, 39a8 <PyInit__ctypes_test@@Base+0x584>
    3610:	orr	x1, x2, x9
    3614:	cbz	x1, 36d4 <PyInit__ctypes_test@@Base+0x2b0>
    3618:	cmn	w0, #0x1
    361c:	b.eq	3dc4 <PyInit__ctypes_test@@Base+0x9a0>  // b.none
    3620:	mov	x1, #0x7fff                	// #32767
    3624:	mvn	w0, w0
    3628:	cmp	x3, x1
    362c:	b.ne	39bc <PyInit__ctypes_test@@Base+0x598>  // b.any
    3630:	orr	x0, x4, x13
    3634:	cbnz	x0, 3d1c <PyInit__ctypes_test@@Base+0x8f8>
    3638:	mov	x16, x14
    363c:	nop
    3640:	mov	x4, #0x0                   	// #0
    3644:	fmov	d0, x4
    3648:	lsl	x16, x16, #63
    364c:	orr	x5, x16, #0x7fff000000000000
    3650:	fmov	v0.d[1], x5
    3654:	b	35fc <PyInit__ctypes_test@@Base+0x1d8>
    3658:	sub	w5, w8, w0
    365c:	cmp	w5, #0x0
    3660:	b.le	382c <PyInit__ctypes_test@@Base+0x408>
    3664:	cbz	x0, 376c <PyInit__ctypes_test@@Base+0x348>
    3668:	orr	x4, x4, #0x8000000000000
    366c:	mov	x0, #0x7fff                	// #32767
    3670:	cmp	x1, x0
    3674:	b.eq	38bc <PyInit__ctypes_test@@Base+0x498>  // b.none
    3678:	cmp	w5, #0x74
    367c:	b.gt	3a50 <PyInit__ctypes_test@@Base+0x62c>
    3680:	cmp	w5, #0x3f
    3684:	b.gt	3b50 <PyInit__ctypes_test@@Base+0x72c>
    3688:	mov	w0, #0x40                  	// #64
    368c:	sub	w0, w0, w5
    3690:	lsr	x6, x13, x5
    3694:	lsl	x13, x13, x0
    3698:	cmp	x13, #0x0
    369c:	lsl	x0, x4, x0
    36a0:	cset	x3, ne  // ne = any
    36a4:	orr	x0, x0, x6
    36a8:	lsr	x4, x4, x5
    36ac:	orr	x0, x0, x3
    36b0:	add	x2, x2, x4
    36b4:	b	3a5c <PyInit__ctypes_test@@Base+0x638>
    36b8:	orr	x3, x4, x13
    36bc:	cbz	x3, 3a2c <PyInit__ctypes_test@@Base+0x608>
    36c0:	subs	w0, w0, #0x1
    36c4:	b.ne	34c4 <PyInit__ctypes_test@@Base+0xa0>  // b.any
    36c8:	subs	x9, x9, x13
    36cc:	sbc	x2, x2, x4
    36d0:	b	3514 <PyInit__ctypes_test@@Base+0xf0>
    36d4:	mov	x0, #0x7fff                	// #32767
    36d8:	cmp	x3, x0
    36dc:	b.eq	3e10 <PyInit__ctypes_test@@Base+0x9ec>  // b.none
    36e0:	mov	w7, w11
    36e4:	mov	x2, x4
    36e8:	mov	x9, x13
    36ec:	mov	x1, x3
    36f0:	mov	x12, x5
    36f4:	nop
    36f8:	orr	x8, x9, x2
    36fc:	and	x0, x9, #0x7
    3700:	mov	w5, #0x0                   	// #0
    3704:	cbnz	x1, 3594 <PyInit__ctypes_test@@Base+0x170>
    3708:	cbnz	x8, 3588 <PyInit__ctypes_test@@Base+0x164>
    370c:	mov	x2, #0x0                   	// #0
    3710:	mov	x1, #0x0                   	// #0
    3714:	mov	w0, #0x0                   	// #0
    3718:	and	x2, x2, #0xffffffffffff
    371c:	and	w1, w1, #0x7fff
    3720:	b	35e0 <PyInit__ctypes_test@@Base+0x1bc>
    3724:	add	x5, x8, #0x1
    3728:	tst	x5, #0x7ffe
    372c:	b.ne	39fc <PyInit__ctypes_test@@Base+0x5d8>  // b.any
    3730:	orr	x5, x2, x9
    3734:	orr	x8, x4, x13
    3738:	cbnz	x1, 3bbc <PyInit__ctypes_test@@Base+0x798>
    373c:	cbz	x5, 3c64 <PyInit__ctypes_test@@Base+0x840>
    3740:	cbz	x8, 3c78 <PyInit__ctypes_test@@Base+0x854>
    3744:	subs	x5, x9, x13
    3748:	cmp	x9, x13
    374c:	sbc	x3, x2, x4
    3750:	tbz	x3, #51, 3e44 <PyInit__ctypes_test@@Base+0xa20>
    3754:	subs	x9, x13, x9
    3758:	mov	w7, w11
    375c:	sbc	x2, x4, x2
    3760:	mov	x12, x14
    3764:	orr	x8, x9, x2
    3768:	b	3584 <PyInit__ctypes_test@@Base+0x160>
    376c:	orr	x0, x4, x13
    3770:	cbz	x0, 3c44 <PyInit__ctypes_test@@Base+0x820>
    3774:	subs	w5, w5, #0x1
    3778:	b.ne	366c <PyInit__ctypes_test@@Base+0x248>  // b.any
    377c:	adds	x9, x9, x13
    3780:	adc	x2, x4, x2
    3784:	nop
    3788:	tbz	x2, #51, 36f8 <PyInit__ctypes_test@@Base+0x2d4>
    378c:	add	x1, x1, #0x1
    3790:	mov	x0, #0x7fff                	// #32767
    3794:	cmp	x1, x0
    3798:	b.eq	3c84 <PyInit__ctypes_test@@Base+0x860>  // b.none
    379c:	and	x0, x9, #0x1
    37a0:	and	x3, x2, #0xfff7ffffffffffff
    37a4:	orr	x9, x0, x9, lsr #1
    37a8:	mov	w5, #0x0                   	// #0
    37ac:	orr	x9, x9, x2, lsl #63
    37b0:	lsr	x2, x3, #1
    37b4:	and	x0, x9, #0x7
    37b8:	b	3594 <PyInit__ctypes_test@@Base+0x170>
    37bc:	and	x3, x15, #0xc00000
    37c0:	cbz	x3, 37f8 <PyInit__ctypes_test@@Base+0x3d4>
    37c4:	cmp	x3, #0x400, lsl #12
    37c8:	b.eq	37f0 <PyInit__ctypes_test@@Base+0x3cc>  // b.none
    37cc:	cmp	x3, #0x800, lsl #12
    37d0:	csel	w12, w12, wzr, eq  // eq = none
    37d4:	cbnz	w12, 37f8 <PyInit__ctypes_test@@Base+0x3d4>
    37d8:	mov	w1, #0x14                  	// #20
    37dc:	mov	x2, #0x1fffffffffffffff    	// #2305843009213693951
    37e0:	orr	w0, w0, w1
    37e4:	mov	x8, #0xffffffffffffffff    	// #-1
    37e8:	mov	x1, #0x7ffe                	// #32766
    37ec:	b	3718 <PyInit__ctypes_test@@Base+0x2f4>
    37f0:	cbnz	x12, 37d8 <PyInit__ctypes_test@@Base+0x3b4>
    37f4:	nop
    37f8:	mov	w1, #0x14                  	// #20
    37fc:	and	x16, x7, #0xff
    3800:	orr	w0, w0, w1
    3804:	mov	x4, #0x0                   	// #0
    3808:	fmov	d0, x4
    380c:	lsl	x16, x16, #63
    3810:	orr	x5, x16, #0x7fff000000000000
    3814:	fmov	v0.d[1], x5
    3818:	str	q0, [sp, #16]
    381c:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    3820:	ldr	q0, [sp, #16]
    3824:	ldp	x29, x30, [sp], #48
    3828:	ret
    382c:	b.eq	396c <PyInit__ctypes_test@@Base+0x548>  // b.none
    3830:	cbnz	x8, 3af0 <PyInit__ctypes_test@@Base+0x6cc>
    3834:	orr	x0, x2, x9
    3838:	cbz	x0, 3d5c <PyInit__ctypes_test@@Base+0x938>
    383c:	cmn	w5, #0x1
    3840:	b.eq	3ebc <PyInit__ctypes_test@@Base+0xa98>  // b.none
    3844:	mov	x0, #0x7fff                	// #32767
    3848:	mvn	w5, w5
    384c:	cmp	x3, x0
    3850:	b.ne	3b04 <PyInit__ctypes_test@@Base+0x6e0>  // b.any
    3854:	orr	x0, x4, x13
    3858:	cbz	x0, 3640 <PyInit__ctypes_test@@Base+0x21c>
    385c:	lsr	x5, x4, #50
    3860:	mov	x9, x13
    3864:	eor	x5, x5, #0x1
    3868:	mov	x2, x4
    386c:	and	w5, w5, #0x1
    3870:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3874:	mov	w0, #0x10                  	// #16
    3878:	cbz	x12, 3884 <PyInit__ctypes_test@@Base+0x460>
    387c:	adds	x9, x9, #0x8
    3880:	cinc	x2, x2, cs  // cs = hs, nlast
    3884:	and	x3, x2, #0x8000000000000
    3888:	cbz	w5, 35c0 <PyInit__ctypes_test@@Base+0x19c>
    388c:	orr	w0, w0, #0x8
    3890:	b	35c0 <PyInit__ctypes_test@@Base+0x19c>
    3894:	mov	w0, #0x10                  	// #16
    3898:	cbnz	x12, 3884 <PyInit__ctypes_test@@Base+0x460>
    389c:	b	387c <PyInit__ctypes_test@@Base+0x458>
    38a0:	and	x3, x9, #0xf
    38a4:	mov	w0, #0x10                  	// #16
    38a8:	cmp	x3, #0x4
    38ac:	b.eq	3884 <PyInit__ctypes_test@@Base+0x460>  // b.none
    38b0:	adds	x9, x9, #0x4
    38b4:	cinc	x2, x2, cs  // cs = hs, nlast
    38b8:	b	3884 <PyInit__ctypes_test@@Base+0x460>
    38bc:	orr	x0, x2, x9
    38c0:	cbz	x0, 3640 <PyInit__ctypes_test@@Base+0x21c>
    38c4:	lsr	x5, x2, #50
    38c8:	eor	x5, x5, #0x1
    38cc:	and	w5, w5, #0x1
    38d0:	mov	w0, w5
    38d4:	mov	x1, #0x7fff                	// #32767
    38d8:	mov	x3, #0x7fff                	// #32767
    38dc:	extr	x8, x2, x9, #3
    38e0:	cmp	x1, x3
    38e4:	lsr	x2, x2, #3
    38e8:	b.ne	3718 <PyInit__ctypes_test@@Base+0x2f4>  // b.any
    38ec:	orr	x1, x8, x2
    38f0:	cbz	x1, 3f5c <PyInit__ctypes_test@@Base+0xb38>
    38f4:	orr	x2, x2, #0x800000000000
    38f8:	mov	w1, #0x7fff                	// #32767
    38fc:	and	x2, x2, #0xffffffffffff
    3900:	b	35e0 <PyInit__ctypes_test@@Base+0x1bc>
    3904:	mov	x9, x3
    3908:	and	x2, x2, #0xfff7ffffffffffff
    390c:	sub	x1, x1, x4
    3910:	orr	x8, x9, x2
    3914:	and	x0, x9, #0x7
    3918:	mov	w5, #0x0                   	// #0
    391c:	cbz	x1, 3708 <PyInit__ctypes_test@@Base+0x2e4>
    3920:	b	3594 <PyInit__ctypes_test@@Base+0x170>
    3924:	clz	x2, x9
    3928:	add	w0, w2, #0x34
    392c:	cmp	w0, #0x3f
    3930:	b.le	3528 <PyInit__ctypes_test@@Base+0x104>
    3934:	sub	w2, w2, #0xc
    3938:	lsl	x2, x9, x2
    393c:	b	353c <PyInit__ctypes_test@@Base+0x118>
    3940:	orr	x4, x4, x13
    3944:	cmp	x4, #0x0
    3948:	cset	x3, ne  // ne = any
    394c:	b	350c <PyInit__ctypes_test@@Base+0xe8>
    3950:	and	x3, x2, #0x8000000000000
    3954:	mov	w0, #0x0                   	// #0
    3958:	cbz	w5, 35c0 <PyInit__ctypes_test@@Base+0x19c>
    395c:	mov	w0, #0x0                   	// #0
    3960:	tbz	w15, #11, 35c0 <PyInit__ctypes_test@@Base+0x19c>
    3964:	orr	w0, w0, #0x8
    3968:	b	35c0 <PyInit__ctypes_test@@Base+0x19c>
    396c:	add	x0, x8, #0x1
    3970:	tst	x0, #0x7ffe
    3974:	b.ne	3b7c <PyInit__ctypes_test@@Base+0x758>  // b.any
    3978:	orr	x0, x2, x9
    397c:	cbnz	x8, 3d38 <PyInit__ctypes_test@@Base+0x914>
    3980:	orr	x8, x4, x13
    3984:	cbz	x0, 3d8c <PyInit__ctypes_test@@Base+0x968>
    3988:	cbz	x8, 3c78 <PyInit__ctypes_test@@Base+0x854>
    398c:	adds	x9, x9, x13
    3990:	adc	x2, x4, x2
    3994:	tbz	x2, #51, 3764 <PyInit__ctypes_test@@Base+0x340>
    3998:	and	x2, x2, #0xfff7ffffffffffff
    399c:	and	x0, x9, #0x7
    39a0:	mov	x1, #0x1                   	// #1
    39a4:	b	3594 <PyInit__ctypes_test@@Base+0x170>
    39a8:	mov	x1, #0x7fff                	// #32767
    39ac:	neg	w0, w0
    39b0:	orr	x2, x2, #0x8000000000000
    39b4:	cmp	x3, x1
    39b8:	b.eq	3630 <PyInit__ctypes_test@@Base+0x20c>  // b.none
    39bc:	cmp	w0, #0x74
    39c0:	b.gt	3acc <PyInit__ctypes_test@@Base+0x6a8>
    39c4:	cmp	w0, #0x3f
    39c8:	b.gt	3ce8 <PyInit__ctypes_test@@Base+0x8c4>
    39cc:	mov	w1, #0x40                  	// #64
    39d0:	sub	w1, w1, w0
    39d4:	lsr	x5, x9, x0
    39d8:	lsl	x9, x9, x1
    39dc:	cmp	x9, #0x0
    39e0:	lsl	x9, x2, x1
    39e4:	cset	x1, ne  // ne = any
    39e8:	orr	x9, x9, x5
    39ec:	lsr	x0, x2, x0
    39f0:	orr	x9, x9, x1
    39f4:	sub	x4, x4, x0
    39f8:	b	3ad8 <PyInit__ctypes_test@@Base+0x6b4>
    39fc:	subs	x5, x9, x13
    3a00:	cmp	x9, x13
    3a04:	sbc	x3, x2, x4
    3a08:	tbnz	x3, #51, 3ba4 <PyInit__ctypes_test@@Base+0x780>
    3a0c:	orr	x8, x5, x3
    3a10:	cbnz	x8, 3cd0 <PyInit__ctypes_test@@Base+0x8ac>
    3a14:	and	x15, x15, #0xc00000
    3a18:	mov	x2, #0x0                   	// #0
    3a1c:	cmp	x15, #0x800, lsl #12
    3a20:	mov	x1, #0x0                   	// #0
    3a24:	cset	w7, eq  // eq = none
    3a28:	b	3718 <PyInit__ctypes_test@@Base+0x2f4>
    3a2c:	mov	x0, #0x7fff                	// #32767
    3a30:	cmp	x8, x0
    3a34:	b.ne	36f8 <PyInit__ctypes_test@@Base+0x2d4>  // b.any
    3a38:	orr	x0, x2, x9
    3a3c:	cbnz	x0, 38c4 <PyInit__ctypes_test@@Base+0x4a0>
    3a40:	mov	x2, #0x0                   	// #0
    3a44:	mov	x8, #0x0                   	// #0
    3a48:	mov	w0, #0x0                   	// #0
    3a4c:	b	38ec <PyInit__ctypes_test@@Base+0x4c8>
    3a50:	orr	x4, x4, x13
    3a54:	cmp	x4, #0x0
    3a58:	cset	x0, ne  // ne = any
    3a5c:	adds	x9, x0, x9
    3a60:	cinc	x2, x2, cs  // cs = hs, nlast
    3a64:	b	3788 <PyInit__ctypes_test@@Base+0x364>
    3a68:	mov	w4, #0x80                  	// #128
    3a6c:	sub	w4, w4, w0
    3a70:	cmp	w0, #0x40
    3a74:	sub	w9, w1, #0x3f
    3a78:	lsl	x0, x2, x4
    3a7c:	orr	x0, x3, x0
    3a80:	csel	x3, x0, x3, ne  // ne = any
    3a84:	lsr	x9, x2, x9
    3a88:	cmp	x3, #0x0
    3a8c:	mov	x2, #0x0                   	// #0
    3a90:	cset	x0, ne  // ne = any
    3a94:	orr	x9, x0, x9
    3a98:	mov	x8, x9
    3a9c:	b	3584 <PyInit__ctypes_test@@Base+0x160>
    3aa0:	mov	w5, #0x80                  	// #128
    3aa4:	sub	w5, w5, w0
    3aa8:	subs	w0, w0, #0x40
    3aac:	lsl	x5, x4, x5
    3ab0:	orr	x5, x13, x5
    3ab4:	csel	x13, x5, x13, ne  // ne = any
    3ab8:	lsr	x4, x4, x0
    3abc:	cmp	x13, #0x0
    3ac0:	cset	x3, ne  // ne = any
    3ac4:	orr	x3, x3, x4
    3ac8:	b	350c <PyInit__ctypes_test@@Base+0xe8>
    3acc:	orr	x2, x2, x9
    3ad0:	cmp	x2, #0x0
    3ad4:	cset	x9, ne  // ne = any
    3ad8:	subs	x9, x13, x9
    3adc:	mov	w7, w11
    3ae0:	sbc	x2, x4, xzr
    3ae4:	mov	x1, x3
    3ae8:	mov	x12, x14
    3aec:	b	3514 <PyInit__ctypes_test@@Base+0xf0>
    3af0:	mov	x0, #0x7fff                	// #32767
    3af4:	neg	w5, w5
    3af8:	orr	x2, x2, #0x8000000000000
    3afc:	cmp	x3, x0
    3b00:	b.eq	3854 <PyInit__ctypes_test@@Base+0x430>  // b.none
    3b04:	cmp	w5, #0x74
    3b08:	b.gt	3cd8 <PyInit__ctypes_test@@Base+0x8b4>
    3b0c:	cmp	w5, #0x3f
    3b10:	b.gt	3d98 <PyInit__ctypes_test@@Base+0x974>
    3b14:	mov	w1, #0x40                  	// #64
    3b18:	sub	w1, w1, w5
    3b1c:	lsr	x6, x9, x5
    3b20:	lsl	x9, x9, x1
    3b24:	cmp	x9, #0x0
    3b28:	cset	x0, ne  // ne = any
    3b2c:	lsl	x9, x2, x1
    3b30:	orr	x9, x9, x6
    3b34:	lsr	x5, x2, x5
    3b38:	orr	x9, x9, x0
    3b3c:	add	x4, x4, x5
    3b40:	adds	x9, x9, x13
    3b44:	mov	x1, x3
    3b48:	cinc	x2, x4, cs  // cs = hs, nlast
    3b4c:	b	3788 <PyInit__ctypes_test@@Base+0x364>
    3b50:	mov	w0, #0x80                  	// #128
    3b54:	sub	w0, w0, w5
    3b58:	subs	w5, w5, #0x40
    3b5c:	lsl	x0, x4, x0
    3b60:	orr	x0, x13, x0
    3b64:	csel	x13, x0, x13, ne  // ne = any
    3b68:	lsr	x4, x4, x5
    3b6c:	cmp	x13, #0x0
    3b70:	cset	x0, ne  // ne = any
    3b74:	orr	x0, x0, x4
    3b78:	b	3a5c <PyInit__ctypes_test@@Base+0x638>
    3b7c:	mov	x1, #0x7fff                	// #32767
    3b80:	cmp	x0, x1
    3b84:	b.eq	3de0 <PyInit__ctypes_test@@Base+0x9bc>  // b.none
    3b88:	adds	x9, x9, x13
    3b8c:	mov	x1, x0
    3b90:	adc	x2, x4, x2
    3b94:	ubfx	x0, x9, #1, #3
    3b98:	extr	x9, x2, x9, #1
    3b9c:	lsr	x2, x2, #1
    3ba0:	b	3594 <PyInit__ctypes_test@@Base+0x170>
    3ba4:	cmp	x13, x9
    3ba8:	mov	w7, w11
    3bac:	sbc	x3, x4, x2
    3bb0:	sub	x9, x13, x9
    3bb4:	mov	x12, x14
    3bb8:	b	351c <PyInit__ctypes_test@@Base+0xf8>
    3bbc:	mov	x12, #0x7fff                	// #32767
    3bc0:	cmp	x1, x12
    3bc4:	b.eq	3bf0 <PyInit__ctypes_test@@Base+0x7cc>  // b.none
    3bc8:	cmp	x3, x12
    3bcc:	b.eq	3e20 <PyInit__ctypes_test@@Base+0x9fc>  // b.none
    3bd0:	cbnz	x5, 3c08 <PyInit__ctypes_test@@Base+0x7e4>
    3bd4:	mov	w5, w0
    3bd8:	cbnz	x8, 3f00 <PyInit__ctypes_test@@Base+0xadc>
    3bdc:	mov	w7, #0x0                   	// #0
    3be0:	mov	x2, #0xffffffffffff        	// #281474976710655
    3be4:	mov	w0, #0x1                   	// #1
    3be8:	mov	x8, #0xffffffffffffffff    	// #-1
    3bec:	b	38f4 <PyInit__ctypes_test@@Base+0x4d0>
    3bf0:	cbz	x5, 3f1c <PyInit__ctypes_test@@Base+0xaf8>
    3bf4:	lsr	x0, x2, #50
    3bf8:	cmp	x3, x1
    3bfc:	eor	x0, x0, #0x1
    3c00:	and	w0, w0, #0x1
    3c04:	b.eq	3e20 <PyInit__ctypes_test@@Base+0x9fc>  // b.none
    3c08:	cbz	x8, 3e3c <PyInit__ctypes_test@@Base+0xa18>
    3c0c:	bfi	x6, x2, #61, #3
    3c10:	lsr	x3, x2, #3
    3c14:	tbz	x2, #50, 3c30 <PyInit__ctypes_test@@Base+0x80c>
    3c18:	lsr	x1, x4, #3
    3c1c:	tbnz	x4, #50, 3c30 <PyInit__ctypes_test@@Base+0x80c>
    3c20:	mov	x6, x10
    3c24:	mov	w7, w11
    3c28:	bfi	x6, x4, #61, #3
    3c2c:	mov	x3, x1
    3c30:	extr	x2, x3, x6, #61
    3c34:	bfi	x6, x2, #61, #3
    3c38:	lsr	x2, x2, #3
    3c3c:	mov	x8, x6
    3c40:	b	38ec <PyInit__ctypes_test@@Base+0x4c8>
    3c44:	mov	x0, #0x7fff                	// #32767
    3c48:	cmp	x8, x0
    3c4c:	b.ne	36f8 <PyInit__ctypes_test@@Base+0x2d4>  // b.any
    3c50:	orr	x0, x2, x9
    3c54:	cbz	x0, 3a40 <PyInit__ctypes_test@@Base+0x61c>
    3c58:	lsr	x5, x2, #50
    3c5c:	eor	w5, w5, #0x1
    3c60:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3c64:	cbz	x8, 3d78 <PyInit__ctypes_test@@Base+0x954>
    3c68:	mov	w7, w11
    3c6c:	mov	x2, x4
    3c70:	mov	x9, x13
    3c74:	mov	x12, x14
    3c78:	mov	x1, #0x0                   	// #0
    3c7c:	mov	x3, #0x0                   	// #0
    3c80:	b	395c <PyInit__ctypes_test@@Base+0x538>
    3c84:	ands	x3, x15, #0xc00000
    3c88:	b.eq	3d14 <PyInit__ctypes_test@@Base+0x8f0>  // b.none
    3c8c:	cmp	x3, #0x400, lsl #12
    3c90:	eor	w0, w7, #0x1
    3c94:	cset	w1, eq  // eq = none
    3c98:	tst	w1, w0
    3c9c:	b.ne	3f38 <PyInit__ctypes_test@@Base+0xb14>  // b.any
    3ca0:	cmp	x3, #0x800, lsl #12
    3ca4:	b.eq	3ee4 <PyInit__ctypes_test@@Base+0xac0>  // b.none
    3ca8:	cmp	x3, #0x400, lsl #12
    3cac:	mov	w0, #0x14                  	// #20
    3cb0:	b.ne	37c0 <PyInit__ctypes_test@@Base+0x39c>  // b.any
    3cb4:	mov	x2, #0xffffffffffffffff    	// #-1
    3cb8:	mov	x1, #0x7ffe                	// #32766
    3cbc:	mov	x9, x2
    3cc0:	mov	w5, #0x0                   	// #0
    3cc4:	mov	w0, #0x14                  	// #20
    3cc8:	cbnz	x12, 3884 <PyInit__ctypes_test@@Base+0x460>
    3ccc:	b	387c <PyInit__ctypes_test@@Base+0x458>
    3cd0:	mov	x9, x5
    3cd4:	b	351c <PyInit__ctypes_test@@Base+0xf8>
    3cd8:	orr	x2, x2, x9
    3cdc:	cmp	x2, #0x0
    3ce0:	cset	x9, ne  // ne = any
    3ce4:	b	3b40 <PyInit__ctypes_test@@Base+0x71c>
    3ce8:	mov	w1, #0x80                  	// #128
    3cec:	sub	w1, w1, w0
    3cf0:	subs	w0, w0, #0x40
    3cf4:	lsl	x1, x2, x1
    3cf8:	orr	x1, x9, x1
    3cfc:	csel	x9, x1, x9, ne  // ne = any
    3d00:	lsr	x2, x2, x0
    3d04:	cmp	x9, #0x0
    3d08:	cset	x9, ne  // ne = any
    3d0c:	orr	x9, x9, x2
    3d10:	b	3ad8 <PyInit__ctypes_test@@Base+0x6b4>
    3d14:	mov	w0, #0x14                  	// #20
    3d18:	b	3804 <PyInit__ctypes_test@@Base+0x3e0>
    3d1c:	lsr	x5, x4, #50
    3d20:	mov	w7, w11
    3d24:	eor	x5, x5, #0x1
    3d28:	mov	x9, x13
    3d2c:	and	w5, w5, #0x1
    3d30:	mov	x2, x4
    3d34:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3d38:	mov	x8, #0x7fff                	// #32767
    3d3c:	cmp	x1, x8
    3d40:	b.eq	3e60 <PyInit__ctypes_test@@Base+0xa3c>  // b.none
    3d44:	cmp	x3, x8
    3d48:	b.eq	3ed4 <PyInit__ctypes_test@@Base+0xab0>  // b.none
    3d4c:	cbnz	x0, 3e78 <PyInit__ctypes_test@@Base+0xa54>
    3d50:	mov	x2, x4
    3d54:	mov	x9, x13
    3d58:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3d5c:	mov	x0, #0x7fff                	// #32767
    3d60:	cmp	x3, x0
    3d64:	b.eq	3f10 <PyInit__ctypes_test@@Base+0xaec>  // b.none
    3d68:	mov	x2, x4
    3d6c:	mov	x9, x13
    3d70:	mov	x1, x3
    3d74:	b	36f8 <PyInit__ctypes_test@@Base+0x2d4>
    3d78:	and	x15, x15, #0xc00000
    3d7c:	mov	x2, #0x0                   	// #0
    3d80:	cmp	x15, #0x800, lsl #12
    3d84:	cset	w7, eq  // eq = none
    3d88:	b	3718 <PyInit__ctypes_test@@Base+0x2f4>
    3d8c:	mov	x2, x4
    3d90:	mov	x9, x13
    3d94:	b	3584 <PyInit__ctypes_test@@Base+0x160>
    3d98:	mov	w0, #0x80                  	// #128
    3d9c:	sub	w0, w0, w5
    3da0:	subs	w5, w5, #0x40
    3da4:	lsl	x0, x2, x0
    3da8:	orr	x0, x9, x0
    3dac:	csel	x9, x0, x9, ne  // ne = any
    3db0:	lsr	x2, x2, x5
    3db4:	cmp	x9, #0x0
    3db8:	cset	x9, ne  // ne = any
    3dbc:	orr	x9, x9, x2
    3dc0:	b	3b40 <PyInit__ctypes_test@@Base+0x71c>
    3dc4:	cmp	x13, x9
    3dc8:	mov	w7, w11
    3dcc:	sbc	x2, x4, x2
    3dd0:	sub	x9, x13, x9
    3dd4:	mov	x1, x3
    3dd8:	mov	x12, x5
    3ddc:	b	3514 <PyInit__ctypes_test@@Base+0xf0>
    3de0:	ands	x3, x15, #0xc00000
    3de4:	b.eq	3d14 <PyInit__ctypes_test@@Base+0x8f0>  // b.none
    3de8:	cmp	x3, #0x400, lsl #12
    3dec:	eor	w0, w7, #0x1
    3df0:	csel	w0, w0, wzr, eq  // eq = none
    3df4:	cbnz	w0, 3f38 <PyInit__ctypes_test@@Base+0xb14>
    3df8:	cmp	x3, #0x800, lsl #12
    3dfc:	b.ne	3ca8 <PyInit__ctypes_test@@Base+0x884>  // b.any
    3e00:	cbz	x12, 3ee8 <PyInit__ctypes_test@@Base+0xac4>
    3e04:	mov	w0, #0x14                  	// #20
    3e08:	mov	x16, #0x1                   	// #1
    3e0c:	b	3804 <PyInit__ctypes_test@@Base+0x3e0>
    3e10:	orr	x0, x4, x13
    3e14:	cbnz	x0, 3d1c <PyInit__ctypes_test@@Base+0x8f8>
    3e18:	mov	w7, w11
    3e1c:	b	3a40 <PyInit__ctypes_test@@Base+0x61c>
    3e20:	cbz	x8, 3f2c <PyInit__ctypes_test@@Base+0xb08>
    3e24:	tst	x4, #0x4000000000000
    3e28:	csinc	w0, w0, wzr, ne  // ne = any
    3e2c:	cbnz	x5, 3c0c <PyInit__ctypes_test@@Base+0x7e8>
    3e30:	mov	w7, w11
    3e34:	mov	x2, x4
    3e38:	mov	x9, x13
    3e3c:	mov	w5, w0
    3e40:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3e44:	orr	x8, x5, x3
    3e48:	cbz	x8, 3d78 <PyInit__ctypes_test@@Base+0x954>
    3e4c:	and	x0, x5, #0x7
    3e50:	mov	x9, x5
    3e54:	mov	x2, x3
    3e58:	mov	w5, #0x1                   	// #1
    3e5c:	b	3594 <PyInit__ctypes_test@@Base+0x170>
    3e60:	cbz	x0, 3ecc <PyInit__ctypes_test@@Base+0xaa8>
    3e64:	lsr	x5, x2, #50
    3e68:	cmp	x3, x1
    3e6c:	eor	x5, x5, #0x1
    3e70:	and	w5, w5, #0x1
    3e74:	b.eq	3f44 <PyInit__ctypes_test@@Base+0xb20>  // b.none
    3e78:	orr	x13, x4, x13
    3e7c:	cbz	x13, 38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3e80:	bfi	x6, x2, #61, #3
    3e84:	lsr	x0, x2, #3
    3e88:	tbz	x2, #50, 3ea4 <PyInit__ctypes_test@@Base+0xa80>
    3e8c:	lsr	x1, x4, #3
    3e90:	tbnz	x4, #50, 3ea4 <PyInit__ctypes_test@@Base+0xa80>
    3e94:	and	x6, x10, #0x1fffffffffffffff
    3e98:	mov	w7, w11
    3e9c:	orr	x6, x6, x4, lsl #61
    3ea0:	mov	x0, x1
    3ea4:	extr	x2, x0, x6, #61
    3ea8:	mov	w0, w5
    3eac:	bfi	x6, x2, #61, #3
    3eb0:	lsr	x2, x2, #3
    3eb4:	mov	x8, x6
    3eb8:	b	38ec <PyInit__ctypes_test@@Base+0x4c8>
    3ebc:	adds	x9, x9, x13
    3ec0:	mov	x1, x3
    3ec4:	adc	x2, x4, x2
    3ec8:	b	3788 <PyInit__ctypes_test@@Base+0x364>
    3ecc:	cmp	x3, x1
    3ed0:	b.ne	3d50 <PyInit__ctypes_test@@Base+0x92c>  // b.any
    3ed4:	orr	x1, x4, x13
    3ed8:	cbnz	x1, 3f4c <PyInit__ctypes_test@@Base+0xb28>
    3edc:	cbz	x0, 3a40 <PyInit__ctypes_test@@Base+0x61c>
    3ee0:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3ee4:	cbnz	x16, 3e04 <PyInit__ctypes_test@@Base+0x9e0>
    3ee8:	mov	x2, #0xffffffffffffffff    	// #-1
    3eec:	mov	w7, #0x0                   	// #0
    3ef0:	mov	x9, x2
    3ef4:	mov	x1, #0x7ffe                	// #32766
    3ef8:	mov	w0, #0x14                  	// #20
    3efc:	b	35c4 <PyInit__ctypes_test@@Base+0x1a0>
    3f00:	mov	w7, w11
    3f04:	mov	x2, x4
    3f08:	mov	x9, x13
    3f0c:	b	38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3f10:	orr	x0, x4, x13
    3f14:	cbz	x0, 3a40 <PyInit__ctypes_test@@Base+0x61c>
    3f18:	b	385c <PyInit__ctypes_test@@Base+0x438>
    3f1c:	cmp	x3, x1
    3f20:	b.eq	3e20 <PyInit__ctypes_test@@Base+0x9fc>  // b.none
    3f24:	mov	w5, #0x0                   	// #0
    3f28:	b	3bd8 <PyInit__ctypes_test@@Base+0x7b4>
    3f2c:	cbnz	x5, 3e3c <PyInit__ctypes_test@@Base+0xa18>
    3f30:	mov	w5, w0
    3f34:	b	3bd8 <PyInit__ctypes_test@@Base+0x7b4>
    3f38:	mov	w0, #0x14                  	// #20
    3f3c:	mov	x16, #0x0                   	// #0
    3f40:	b	3804 <PyInit__ctypes_test@@Base+0x3e0>
    3f44:	orr	x1, x4, x13
    3f48:	cbz	x1, 38d0 <PyInit__ctypes_test@@Base+0x4ac>
    3f4c:	tst	x4, #0x4000000000000
    3f50:	csinc	w5, w5, wzr, ne  // ne = any
    3f54:	cbnz	x0, 3e80 <PyInit__ctypes_test@@Base+0xa5c>
    3f58:	b	3d50 <PyInit__ctypes_test@@Base+0x92c>
    3f5c:	mov	x8, #0x0                   	// #0
    3f60:	mov	w1, #0x7fff                	// #32767
    3f64:	mov	x2, #0x0                   	// #0
    3f68:	b	35e0 <PyInit__ctypes_test@@Base+0x1bc>
    3f6c:	nop
    3f70:	stp	x29, x30, [sp, #-48]!
    3f74:	mov	x29, sp
    3f78:	str	q0, [sp, #16]
    3f7c:	str	q1, [sp, #32]
    3f80:	ldp	x2, x0, [sp, #16]
    3f84:	ldp	x5, x3, [sp, #32]
    3f88:	mrs	x10, fpcr
    3f8c:	lsr	x1, x0, #63
    3f90:	ubfx	x6, x0, #0, #48
    3f94:	and	w13, w1, #0xff
    3f98:	mov	x14, x1
    3f9c:	ubfx	x7, x0, #48, #15
    3fa0:	cbz	w7, 43c0 <PyInit__ctypes_test@@Base+0xf9c>
    3fa4:	mov	w4, #0x7fff                	// #32767
    3fa8:	cmp	w7, w4
    3fac:	b.eq	4408 <PyInit__ctypes_test@@Base+0xfe4>  // b.none
    3fb0:	and	x7, x7, #0xffff
    3fb4:	extr	x6, x6, x2, #61
    3fb8:	mov	x15, #0xffffffffffffc001    	// #-16383
    3fbc:	orr	x4, x6, #0x8000000000000
    3fc0:	add	x7, x7, x15
    3fc4:	lsl	x2, x2, #3
    3fc8:	mov	x1, #0x0                   	// #0
    3fcc:	mov	x16, #0x0                   	// #0
    3fd0:	mov	w0, #0x0                   	// #0
    3fd4:	lsr	x8, x3, #63
    3fd8:	ubfx	x6, x3, #0, #48
    3fdc:	and	w15, w8, #0xff
    3fe0:	ubfx	x9, x3, #48, #15
    3fe4:	cbz	w9, 437c <PyInit__ctypes_test@@Base+0xf58>
    3fe8:	mov	w11, #0x7fff                	// #32767
    3fec:	cmp	w9, w11
    3ff0:	b.eq	40b4 <PyInit__ctypes_test@@Base+0xc90>  // b.none
    3ff4:	and	x9, x9, #0xffff
    3ff8:	extr	x6, x6, x5, #61
    3ffc:	mov	x12, #0xffffffffffffc001    	// #-16383
    4000:	orr	x6, x6, #0x8000000000000
    4004:	add	x9, x9, x12
    4008:	lsl	x5, x5, #3
    400c:	sub	x7, x7, x9
    4010:	mov	x9, #0x0                   	// #0
    4014:	eor	w11, w13, w15
    4018:	cmp	x1, #0x9
    401c:	and	x3, x11, #0xff
    4020:	mov	x12, x3
    4024:	b.gt	4354 <PyInit__ctypes_test@@Base+0xf30>
    4028:	cmp	x1, #0x7
    402c:	b.gt	4514 <PyInit__ctypes_test@@Base+0x10f0>
    4030:	cmp	x1, #0x3
    4034:	b.eq	4050 <PyInit__ctypes_test@@Base+0xc2c>  // b.none
    4038:	b.le	4324 <PyInit__ctypes_test@@Base+0xf00>
    403c:	cmp	x1, #0x5
    4040:	b.eq	4364 <PyInit__ctypes_test@@Base+0xf40>  // b.none
    4044:	b.le	4148 <PyInit__ctypes_test@@Base+0xd24>
    4048:	cmp	x1, #0x6
    404c:	b.eq	4118 <PyInit__ctypes_test@@Base+0xcf4>  // b.none
    4050:	cmp	x9, #0x1
    4054:	b.eq	4498 <PyInit__ctypes_test@@Base+0x1074>  // b.none
    4058:	cbz	x9, 406c <PyInit__ctypes_test@@Base+0xc48>
    405c:	cmp	x9, #0x2
    4060:	b.eq	469c <PyInit__ctypes_test@@Base+0x1278>  // b.none
    4064:	cmp	x9, #0x3
    4068:	b.eq	4684 <PyInit__ctypes_test@@Base+0x1260>  // b.none
    406c:	mov	x1, #0x3fff                	// #16383
    4070:	mov	x12, x8
    4074:	add	x3, x7, x1
    4078:	cmp	x3, #0x0
    407c:	b.le	4558 <PyInit__ctypes_test@@Base+0x1134>
    4080:	tst	x5, #0x7
    4084:	b.ne	44c8 <PyInit__ctypes_test@@Base+0x10a4>  // b.any
    4088:	and	w11, w12, #0x1
    408c:	tbz	x6, #52, 4098 <PyInit__ctypes_test@@Base+0xc74>
    4090:	and	x6, x6, #0xffefffffffffffff
    4094:	add	x3, x7, #0x4, lsl #12
    4098:	mov	x1, #0x7ffe                	// #32766
    409c:	cmp	x3, x1
    40a0:	b.gt	4640 <PyInit__ctypes_test@@Base+0x121c>
    40a4:	and	w1, w3, #0x7fff
    40a8:	extr	x2, x6, x5, #3
    40ac:	ubfx	x6, x6, #3, #48
    40b0:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    40b4:	mov	x9, #0xffffffffffff8001    	// #-32767
    40b8:	orr	x3, x6, x5
    40bc:	add	x7, x7, x9
    40c0:	cbz	x3, 443c <PyInit__ctypes_test@@Base+0x1018>
    40c4:	tst	x6, #0x800000000000
    40c8:	orr	x1, x1, #0x3
    40cc:	csinc	w0, w0, wzr, ne  // ne = any
    40d0:	mov	x9, #0x3                   	// #3
    40d4:	eor	w11, w13, w15
    40d8:	cmp	x1, #0x9
    40dc:	and	x3, x11, #0xff
    40e0:	mov	x12, x3
    40e4:	b.le	4028 <PyInit__ctypes_test@@Base+0xc04>
    40e8:	cmp	x1, #0xf
    40ec:	b.ne	4354 <PyInit__ctypes_test@@Base+0xf30>  // b.any
    40f0:	tbz	x4, #47, 4500 <PyInit__ctypes_test@@Base+0x10dc>
    40f4:	tbnz	x6, #47, 4500 <PyInit__ctypes_test@@Base+0x10dc>
    40f8:	orr	x6, x6, #0x800000000000
    40fc:	mov	w11, w15
    4100:	and	x6, x6, #0xffffffffffff
    4104:	mov	x2, x5
    4108:	mov	w1, #0x7fff                	// #32767
    410c:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    4110:	cmp	x1, #0x2
    4114:	b.ne	4150 <PyInit__ctypes_test@@Base+0xd2c>  // b.any
    4118:	mov	w1, #0x0                   	// #0
    411c:	mov	x6, #0x0                   	// #0
    4120:	mov	x2, #0x0                   	// #0
    4124:	mov	x5, #0x0                   	// #0
    4128:	orr	w1, w1, w11, lsl #15
    412c:	bfxil	x5, x6, #0, #48
    4130:	fmov	d0, x2
    4134:	bfi	x5, x1, #48, #16
    4138:	fmov	v0.d[1], x5
    413c:	cbnz	w0, 4344 <PyInit__ctypes_test@@Base+0xf20>
    4140:	ldp	x29, x30, [sp], #48
    4144:	ret
    4148:	cmp	x1, #0x4
    414c:	b.eq	4118 <PyInit__ctypes_test@@Base+0xcf4>  // b.none
    4150:	cmp	x4, x6
    4154:	b.ls	44ac <PyInit__ctypes_test@@Base+0x1088>  // b.plast
    4158:	lsr	x3, x4, #1
    415c:	extr	x8, x4, x2, #1
    4160:	lsl	x2, x2, #63
    4164:	ubfx	x14, x6, #20, #32
    4168:	extr	x9, x6, x5, #52
    416c:	lsl	x13, x5, #12
    4170:	and	x15, x9, #0xffffffff
    4174:	udiv	x5, x3, x14
    4178:	msub	x3, x5, x14, x3
    417c:	mul	x1, x15, x5
    4180:	extr	x3, x3, x8, #32
    4184:	cmp	x1, x3
    4188:	b.ls	419c <PyInit__ctypes_test@@Base+0xd78>  // b.plast
    418c:	adds	x3, x9, x3
    4190:	ccmp	x1, x3, #0x0, cc  // cc = lo, ul, last
    4194:	b.hi	477c <PyInit__ctypes_test@@Base+0x1358>  // b.pmore
    4198:	sub	x5, x5, #0x1
    419c:	sub	x3, x3, x1
    41a0:	mov	x4, x8
    41a4:	udiv	x1, x3, x14
    41a8:	msub	x3, x1, x14, x3
    41ac:	mul	x6, x15, x1
    41b0:	bfi	x4, x3, #32, #32
    41b4:	cmp	x6, x4
    41b8:	b.ls	41cc <PyInit__ctypes_test@@Base+0xda8>  // b.plast
    41bc:	adds	x4, x9, x4
    41c0:	ccmp	x6, x4, #0x0, cc  // cc = lo, ul, last
    41c4:	b.hi	4770 <PyInit__ctypes_test@@Base+0x134c>  // b.pmore
    41c8:	sub	x1, x1, #0x1
    41cc:	orr	x8, x1, x5, lsl #32
    41d0:	and	x17, x13, #0xffffffff
    41d4:	and	x1, x8, #0xffffffff
    41d8:	lsr	x16, x13, #32
    41dc:	lsr	x5, x8, #32
    41e0:	sub	x4, x4, x6
    41e4:	mov	x18, #0x100000000           	// #4294967296
    41e8:	mul	x3, x1, x17
    41ec:	mul	x30, x5, x17
    41f0:	madd	x6, x16, x1, x30
    41f4:	and	x1, x3, #0xffffffff
    41f8:	mul	x5, x5, x16
    41fc:	add	x3, x6, x3, lsr #32
    4200:	add	x6, x5, x18
    4204:	cmp	x30, x3
    4208:	csel	x5, x6, x5, hi  // hi = pmore
    420c:	add	x1, x1, x3, lsl #32
    4210:	add	x5, x5, x3, lsr #32
    4214:	cmp	x4, x5
    4218:	b.cc	4524 <PyInit__ctypes_test@@Base+0x1100>  // b.lo, b.ul, b.last
    421c:	ccmp	x2, x1, #0x2, eq  // eq = none
    4220:	mov	x6, x8
    4224:	b.cc	4524 <PyInit__ctypes_test@@Base+0x1100>  // b.lo, b.ul, b.last
    4228:	subs	x8, x2, x1
    422c:	mov	x3, #0x3fff                	// #16383
    4230:	cmp	x2, x1
    4234:	add	x3, x7, x3
    4238:	sbc	x4, x4, x5
    423c:	cmp	x9, x4
    4240:	b.eq	4788 <PyInit__ctypes_test@@Base+0x1364>  // b.none
    4244:	udiv	x5, x4, x14
    4248:	msub	x4, x5, x14, x4
    424c:	mul	x2, x15, x5
    4250:	extr	x1, x4, x8, #32
    4254:	cmp	x2, x1
    4258:	b.ls	426c <PyInit__ctypes_test@@Base+0xe48>  // b.plast
    425c:	adds	x1, x9, x1
    4260:	ccmp	x2, x1, #0x0, cc  // cc = lo, ul, last
    4264:	b.hi	4840 <PyInit__ctypes_test@@Base+0x141c>  // b.pmore
    4268:	sub	x5, x5, #0x1
    426c:	sub	x1, x1, x2
    4270:	udiv	x2, x1, x14
    4274:	msub	x1, x2, x14, x1
    4278:	mul	x15, x15, x2
    427c:	bfi	x8, x1, #32, #32
    4280:	mov	x1, x8
    4284:	cmp	x15, x8
    4288:	b.ls	429c <PyInit__ctypes_test@@Base+0xe78>  // b.plast
    428c:	adds	x1, x9, x8
    4290:	ccmp	x15, x1, #0x0, cc  // cc = lo, ul, last
    4294:	b.hi	484c <PyInit__ctypes_test@@Base+0x1428>  // b.pmore
    4298:	sub	x2, x2, #0x1
    429c:	orr	x5, x2, x5, lsl #32
    42a0:	mov	x11, #0x100000000           	// #4294967296
    42a4:	and	x4, x5, #0xffffffff
    42a8:	sub	x1, x1, x15
    42ac:	lsr	x14, x5, #32
    42b0:	mul	x2, x17, x4
    42b4:	mul	x17, x14, x17
    42b8:	madd	x4, x16, x4, x17
    42bc:	and	x8, x2, #0xffffffff
    42c0:	mul	x16, x16, x14
    42c4:	add	x2, x4, x2, lsr #32
    42c8:	add	x4, x16, x11
    42cc:	cmp	x17, x2
    42d0:	csel	x16, x4, x16, hi  // hi = pmore
    42d4:	add	x4, x8, x2, lsl #32
    42d8:	add	x16, x16, x2, lsr #32
    42dc:	cmp	x1, x16
    42e0:	b.cs	46c0 <PyInit__ctypes_test@@Base+0x129c>  // b.hs, b.nlast
    42e4:	adds	x2, x9, x1
    42e8:	sub	x8, x5, #0x1
    42ec:	mov	x1, x2
    42f0:	b.cs	4304 <PyInit__ctypes_test@@Base+0xee0>  // b.hs, b.nlast
    42f4:	cmp	x2, x16
    42f8:	b.cc	47c0 <PyInit__ctypes_test@@Base+0x139c>  // b.lo, b.ul, b.last
    42fc:	ccmp	x13, x4, #0x2, eq  // eq = none
    4300:	b.cc	47c0 <PyInit__ctypes_test@@Base+0x139c>  // b.lo, b.ul, b.last
    4304:	cmp	x13, x4
    4308:	mov	x5, x8
    430c:	cset	w2, ne  // ne = any
    4310:	cmp	w2, #0x0
    4314:	orr	x2, x5, #0x1
    4318:	ccmp	x1, x16, #0x0, eq  // eq = none
    431c:	csel	x5, x2, x5, ne  // ne = any
    4320:	b	4078 <PyInit__ctypes_test@@Base+0xc54>
    4324:	cmp	x1, #0x1
    4328:	b.ne	4110 <PyInit__ctypes_test@@Base+0xcec>  // b.any
    432c:	mov	x4, #0x0                   	// #0
    4330:	fmov	d0, x4
    4334:	lsl	x3, x3, #63
    4338:	orr	w0, w0, #0x2
    433c:	orr	x5, x3, #0x7fff000000000000
    4340:	fmov	v0.d[1], x5
    4344:	str	q0, [sp, #16]
    4348:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    434c:	ldr	q0, [sp, #16]
    4350:	b	4140 <PyInit__ctypes_test@@Base+0xd1c>
    4354:	cmp	x1, #0xb
    4358:	b.gt	4428 <PyInit__ctypes_test@@Base+0x1004>
    435c:	cmp	x1, #0xa
    4360:	b.ne	4050 <PyInit__ctypes_test@@Base+0xc2c>  // b.any
    4364:	mov	w11, #0x0                   	// #0
    4368:	mov	x6, #0xffffffffffff        	// #281474976710655
    436c:	mov	x2, #0xffffffffffffffff    	// #-1
    4370:	mov	w0, #0x1                   	// #1
    4374:	mov	w1, #0x7fff                	// #32767
    4378:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    437c:	orr	x3, x6, x5
    4380:	cbz	x3, 4468 <PyInit__ctypes_test@@Base+0x1044>
    4384:	cbz	x6, 461c <PyInit__ctypes_test@@Base+0x11f8>
    4388:	clz	x3, x6
    438c:	sub	x9, x3, #0xf
    4390:	add	w12, w9, #0x3
    4394:	mov	w11, #0x3d                  	// #61
    4398:	sub	w9, w11, w9
    439c:	lsl	x6, x6, x12
    43a0:	lsr	x9, x5, x9
    43a4:	orr	x6, x9, x6
    43a8:	lsl	x5, x5, x12
    43ac:	add	x7, x3, x7
    43b0:	mov	x11, #0x3fef                	// #16367
    43b4:	mov	x9, #0x0                   	// #0
    43b8:	add	x7, x7, x11
    43bc:	b	4014 <PyInit__ctypes_test@@Base+0xbf0>
    43c0:	orr	x4, x6, x2
    43c4:	cbz	x4, 4450 <PyInit__ctypes_test@@Base+0x102c>
    43c8:	cbz	x6, 45f8 <PyInit__ctypes_test@@Base+0x11d4>
    43cc:	clz	x0, x6
    43d0:	sub	x4, x0, #0xf
    43d4:	add	w7, w4, #0x3
    43d8:	mov	w1, #0x3d                  	// #61
    43dc:	sub	w4, w1, w4
    43e0:	lsl	x6, x6, x7
    43e4:	lsr	x4, x2, x4
    43e8:	orr	x4, x4, x6
    43ec:	lsl	x2, x2, x7
    43f0:	mov	x7, #0xffffffffffffc011    	// #-16367
    43f4:	mov	x1, #0x0                   	// #0
    43f8:	sub	x7, x7, x0
    43fc:	mov	x16, #0x0                   	// #0
    4400:	mov	w0, #0x0                   	// #0
    4404:	b	3fd4 <PyInit__ctypes_test@@Base+0xbb0>
    4408:	orr	x4, x6, x2
    440c:	cbnz	x4, 447c <PyInit__ctypes_test@@Base+0x1058>
    4410:	mov	x2, #0x0                   	// #0
    4414:	mov	x1, #0x8                   	// #8
    4418:	mov	x7, #0x7fff                	// #32767
    441c:	mov	x16, #0x2                   	// #2
    4420:	mov	w0, #0x0                   	// #0
    4424:	b	3fd4 <PyInit__ctypes_test@@Base+0xbb0>
    4428:	mov	x6, x4
    442c:	mov	x5, x2
    4430:	mov	x8, x14
    4434:	mov	x9, x16
    4438:	b	4050 <PyInit__ctypes_test@@Base+0xc2c>
    443c:	orr	x1, x1, #0x2
    4440:	mov	x6, #0x0                   	// #0
    4444:	mov	x5, #0x0                   	// #0
    4448:	mov	x9, #0x2                   	// #2
    444c:	b	40d4 <PyInit__ctypes_test@@Base+0xcb0>
    4450:	mov	x2, #0x0                   	// #0
    4454:	mov	x1, #0x4                   	// #4
    4458:	mov	x7, #0x0                   	// #0
    445c:	mov	x16, #0x1                   	// #1
    4460:	mov	w0, #0x0                   	// #0
    4464:	b	3fd4 <PyInit__ctypes_test@@Base+0xbb0>
    4468:	orr	x1, x1, #0x1
    446c:	mov	x6, #0x0                   	// #0
    4470:	mov	x5, #0x0                   	// #0
    4474:	mov	x9, #0x1                   	// #1
    4478:	b	4014 <PyInit__ctypes_test@@Base+0xbf0>
    447c:	lsr	x0, x6, #47
    4480:	mov	x4, x6
    4484:	eor	w0, w0, #0x1
    4488:	mov	x1, #0xc                   	// #12
    448c:	mov	x7, #0x7fff                	// #32767
    4490:	mov	x16, #0x3                   	// #3
    4494:	b	3fd4 <PyInit__ctypes_test@@Base+0xbb0>
    4498:	mov	w11, w8
    449c:	mov	w1, #0x0                   	// #0
    44a0:	mov	x6, #0x0                   	// #0
    44a4:	mov	x2, #0x0                   	// #0
    44a8:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    44ac:	ccmp	x5, x2, #0x2, eq  // eq = none
    44b0:	b.ls	4158 <PyInit__ctypes_test@@Base+0xd34>  // b.plast
    44b4:	mov	x8, x2
    44b8:	sub	x7, x7, #0x1
    44bc:	mov	x3, x4
    44c0:	mov	x2, #0x0                   	// #0
    44c4:	b	4164 <PyInit__ctypes_test@@Base+0xd40>
    44c8:	and	x1, x10, #0xc00000
    44cc:	orr	w0, w0, #0x10
    44d0:	cmp	x1, #0x400, lsl #12
    44d4:	b.eq	4828 <PyInit__ctypes_test@@Base+0x1404>  // b.none
    44d8:	cmp	x1, #0x800, lsl #12
    44dc:	b.eq	473c <PyInit__ctypes_test@@Base+0x1318>  // b.none
    44e0:	cbnz	x1, 4088 <PyInit__ctypes_test@@Base+0xc64>
    44e4:	and	x1, x5, #0xf
    44e8:	and	w11, w12, #0x1
    44ec:	cmp	x1, #0x4
    44f0:	b.eq	408c <PyInit__ctypes_test@@Base+0xc68>  // b.none
    44f4:	adds	x5, x5, #0x4
    44f8:	cinc	x6, x6, cs  // cs = hs, nlast
    44fc:	b	408c <PyInit__ctypes_test@@Base+0xc68>
    4500:	orr	x6, x4, #0x800000000000
    4504:	mov	w11, w13
    4508:	and	x6, x6, #0xffffffffffff
    450c:	mov	w1, #0x7fff                	// #32767
    4510:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    4514:	mov	w1, #0x7fff                	// #32767
    4518:	mov	x6, #0x0                   	// #0
    451c:	mov	x2, #0x0                   	// #0
    4520:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    4524:	adds	x3, x2, x13
    4528:	sub	x6, x8, #0x1
    452c:	adc	x4, x4, x9
    4530:	cset	x18, cs  // cs = hs, nlast
    4534:	mov	x2, x3
    4538:	cmp	x9, x4
    453c:	b.cs	46b0 <PyInit__ctypes_test@@Base+0x128c>  // b.hs, b.nlast
    4540:	cmp	x5, x4
    4544:	b.ls	46d8 <PyInit__ctypes_test@@Base+0x12b4>  // b.plast
    4548:	adds	x2, x13, x3
    454c:	sub	x6, x8, #0x2
    4550:	adc	x4, x4, x9
    4554:	b	4228 <PyInit__ctypes_test@@Base+0xe04>
    4558:	mov	x1, #0x1                   	// #1
    455c:	sub	x1, x1, x3
    4560:	cmp	x1, #0x74
    4564:	and	w11, w12, #0x1
    4568:	b.le	4584 <PyInit__ctypes_test@@Base+0x1160>
    456c:	orr	x2, x5, x6
    4570:	cbnz	x2, 47a4 <PyInit__ctypes_test@@Base+0x1380>
    4574:	orr	w0, w0, #0x8
    4578:	mov	w1, #0x0                   	// #0
    457c:	mov	x6, #0x0                   	// #0
    4580:	b	4668 <PyInit__ctypes_test@@Base+0x1244>
    4584:	cmp	x1, #0x3f
    4588:	b.le	46e4 <PyInit__ctypes_test@@Base+0x12c0>
    458c:	mov	w2, #0x80                  	// #128
    4590:	sub	w2, w2, w1
    4594:	cmp	x1, #0x40
    4598:	sub	w1, w1, #0x40
    459c:	lsl	x2, x6, x2
    45a0:	orr	x2, x5, x2
    45a4:	csel	x5, x2, x5, ne  // ne = any
    45a8:	lsr	x6, x6, x1
    45ac:	cmp	x5, #0x0
    45b0:	cset	x2, ne  // ne = any
    45b4:	orr	x2, x2, x6
    45b8:	ands	x6, x2, #0x7
    45bc:	b.eq	4718 <PyInit__ctypes_test@@Base+0x12f4>  // b.none
    45c0:	mov	x6, #0x0                   	// #0
    45c4:	and	x10, x10, #0xc00000
    45c8:	orr	w0, w0, #0x10
    45cc:	cmp	x10, #0x400, lsl #12
    45d0:	b.eq	4864 <PyInit__ctypes_test@@Base+0x1440>  // b.none
    45d4:	cmp	x10, #0x800, lsl #12
    45d8:	b.eq	4878 <PyInit__ctypes_test@@Base+0x1454>  // b.none
    45dc:	cbz	x10, 47e0 <PyInit__ctypes_test@@Base+0x13bc>
    45e0:	tbnz	x6, #51, 47f8 <PyInit__ctypes_test@@Base+0x13d4>
    45e4:	orr	w0, w0, #0x8
    45e8:	extr	x2, x6, x2, #3
    45ec:	mov	w1, #0x0                   	// #0
    45f0:	ubfx	x6, x6, #3, #48
    45f4:	b	4668 <PyInit__ctypes_test@@Base+0x1244>
    45f8:	clz	x7, x2
    45fc:	add	x4, x7, #0x31
    4600:	add	x0, x7, #0x40
    4604:	cmp	x4, #0x3c
    4608:	b.le	43d4 <PyInit__ctypes_test@@Base+0xfb0>
    460c:	sub	w4, w4, #0x3d
    4610:	lsl	x4, x2, x4
    4614:	mov	x2, #0x0                   	// #0
    4618:	b	43f0 <PyInit__ctypes_test@@Base+0xfcc>
    461c:	clz	x3, x5
    4620:	add	x9, x3, #0x31
    4624:	add	x3, x3, #0x40
    4628:	cmp	x9, #0x3c
    462c:	b.le	4390 <PyInit__ctypes_test@@Base+0xf6c>
    4630:	sub	w6, w9, #0x3d
    4634:	lsl	x6, x5, x6
    4638:	mov	x5, #0x0                   	// #0
    463c:	b	43ac <PyInit__ctypes_test@@Base+0xf88>
    4640:	and	x2, x10, #0xc00000
    4644:	cmp	x2, #0x400, lsl #12
    4648:	b.eq	480c <PyInit__ctypes_test@@Base+0x13e8>  // b.none
    464c:	cmp	x2, #0x800, lsl #12
    4650:	b.eq	4754 <PyInit__ctypes_test@@Base+0x1330>  // b.none
    4654:	cbz	x2, 4730 <PyInit__ctypes_test@@Base+0x130c>
    4658:	mov	x6, #0xffffffffffff        	// #281474976710655
    465c:	mov	x2, #0xffffffffffffffff    	// #-1
    4660:	mov	w3, #0x14                  	// #20
    4664:	orr	w0, w0, w3
    4668:	mov	x5, #0x0                   	// #0
    466c:	orr	w1, w1, w11, lsl #15
    4670:	bfxil	x5, x6, #0, #48
    4674:	fmov	d0, x2
    4678:	bfi	x5, x1, #48, #16
    467c:	fmov	v0.d[1], x5
    4680:	b	4344 <PyInit__ctypes_test@@Base+0xf20>
    4684:	orr	x6, x6, #0x800000000000
    4688:	mov	w11, w8
    468c:	and	x6, x6, #0xffffffffffff
    4690:	mov	x2, x5
    4694:	mov	w1, #0x7fff                	// #32767
    4698:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    469c:	mov	w11, w8
    46a0:	mov	w1, #0x7fff                	// #32767
    46a4:	mov	x6, #0x0                   	// #0
    46a8:	mov	x2, #0x0                   	// #0
    46ac:	b	4124 <PyInit__ctypes_test@@Base+0xd00>
    46b0:	cmp	x18, #0x0
    46b4:	ccmp	x9, x4, #0x0, eq  // eq = none
    46b8:	b.ne	4228 <PyInit__ctypes_test@@Base+0xe04>  // b.any
    46bc:	b	4540 <PyInit__ctypes_test@@Base+0x111c>
    46c0:	cmp	x4, #0x0
    46c4:	cset	w2, ne  // ne = any
    46c8:	cmp	w2, #0x0
    46cc:	ccmp	x1, x16, #0x0, ne  // ne = any
    46d0:	b.ne	4310 <PyInit__ctypes_test@@Base+0xeec>  // b.any
    46d4:	b	42e4 <PyInit__ctypes_test@@Base+0xec0>
    46d8:	ccmp	x1, x3, #0x0, eq  // eq = none
    46dc:	b.ls	4228 <PyInit__ctypes_test@@Base+0xe04>  // b.plast
    46e0:	b	4548 <PyInit__ctypes_test@@Base+0x1124>
    46e4:	mov	w2, #0x40                  	// #64
    46e8:	sub	w2, w2, w1
    46ec:	lsr	x4, x5, x1
    46f0:	lsl	x5, x5, x2
    46f4:	cmp	x5, #0x0
    46f8:	cset	x3, ne  // ne = any
    46fc:	lsl	x2, x6, x2
    4700:	orr	x2, x2, x4
    4704:	lsr	x6, x6, x1
    4708:	orr	x2, x2, x3
    470c:	tst	x2, #0x7
    4710:	b.ne	45c4 <PyInit__ctypes_test@@Base+0x11a0>  // b.any
    4714:	tbnz	x6, #51, 4884 <PyInit__ctypes_test@@Base+0x1460>
    4718:	mov	w1, #0x0                   	// #0
    471c:	extr	x2, x6, x2, #3
    4720:	ubfx	x6, x6, #3, #48
    4724:	tbz	w10, #11, 4124 <PyInit__ctypes_test@@Base+0xd00>
    4728:	orr	w0, w0, #0x8
    472c:	b	4668 <PyInit__ctypes_test@@Base+0x1244>
    4730:	mov	w1, #0x7fff                	// #32767
    4734:	mov	x6, #0x0                   	// #0
    4738:	b	4660 <PyInit__ctypes_test@@Base+0x123c>
    473c:	mov	w11, #0x0                   	// #0
    4740:	cbz	x12, 408c <PyInit__ctypes_test@@Base+0xc68>
    4744:	adds	x5, x5, #0x8
    4748:	mov	w11, #0x1                   	// #1
    474c:	cinc	x6, x6, cs  // cs = hs, nlast
    4750:	b	408c <PyInit__ctypes_test@@Base+0xc68>
    4754:	cmp	x12, #0x0
    4758:	mov	w2, #0x7fff                	// #32767
    475c:	mov	x6, #0xffffffffffff        	// #281474976710655
    4760:	csel	w1, w1, w2, eq  // eq = none
    4764:	csel	x6, x6, xzr, eq  // eq = none
    4768:	csetm	x2, eq  // eq = none
    476c:	b	4660 <PyInit__ctypes_test@@Base+0x123c>
    4770:	sub	x1, x1, #0x2
    4774:	add	x4, x4, x9
    4778:	b	41cc <PyInit__ctypes_test@@Base+0xda8>
    477c:	sub	x5, x5, #0x2
    4780:	add	x3, x3, x9
    4784:	b	419c <PyInit__ctypes_test@@Base+0xd78>
    4788:	cmp	x3, #0x0
    478c:	mov	x5, #0xffffffffffffffff    	// #-1
    4790:	b.gt	44c8 <PyInit__ctypes_test@@Base+0x10a4>
    4794:	mov	x1, #0x1                   	// #1
    4798:	sub	x1, x1, x3
    479c:	cmp	x1, #0x74
    47a0:	b.le	4584 <PyInit__ctypes_test@@Base+0x1160>
    47a4:	and	x10, x10, #0xc00000
    47a8:	orr	w0, w0, #0x10
    47ac:	cmp	x10, #0x400, lsl #12
    47b0:	b.eq	4858 <PyInit__ctypes_test@@Base+0x1434>  // b.none
    47b4:	cmp	x10, #0x800, lsl #12
    47b8:	csel	x2, x12, xzr, eq  // eq = none
    47bc:	b	4574 <PyInit__ctypes_test@@Base+0x1150>
    47c0:	lsl	x8, x13, #1
    47c4:	sub	x5, x5, #0x2
    47c8:	cmp	x13, x8
    47cc:	cinc	x1, x9, hi  // hi = pmore
    47d0:	cmp	x4, x8
    47d4:	add	x1, x2, x1
    47d8:	cset	w2, ne  // ne = any
    47dc:	b	4310 <PyInit__ctypes_test@@Base+0xeec>
    47e0:	and	x1, x2, #0xf
    47e4:	cmp	x1, #0x4
    47e8:	b.eq	47f4 <PyInit__ctypes_test@@Base+0x13d0>  // b.none
    47ec:	adds	x2, x2, #0x4
    47f0:	cinc	x6, x6, cs  // cs = hs, nlast
    47f4:	tbz	x6, #51, 45e4 <PyInit__ctypes_test@@Base+0x11c0>
    47f8:	orr	w0, w0, #0x8
    47fc:	mov	w1, #0x1                   	// #1
    4800:	mov	x6, #0x0                   	// #0
    4804:	mov	x2, #0x0                   	// #0
    4808:	b	4668 <PyInit__ctypes_test@@Base+0x1244>
    480c:	cmp	x12, #0x0
    4810:	mov	w2, #0x7fff                	// #32767
    4814:	mov	x6, #0xffffffffffff        	// #281474976710655
    4818:	csel	w1, w1, w2, ne  // ne = any
    481c:	csel	x6, x6, xzr, ne  // ne = any
    4820:	csetm	x2, ne  // ne = any
    4824:	b	4660 <PyInit__ctypes_test@@Base+0x123c>
    4828:	mov	w11, #0x1                   	// #1
    482c:	cbnz	x12, 408c <PyInit__ctypes_test@@Base+0xc68>
    4830:	adds	x5, x5, #0x8
    4834:	mov	w11, #0x0                   	// #0
    4838:	cinc	x6, x6, cs  // cs = hs, nlast
    483c:	b	408c <PyInit__ctypes_test@@Base+0xc68>
    4840:	sub	x5, x5, #0x2
    4844:	add	x1, x1, x9
    4848:	b	426c <PyInit__ctypes_test@@Base+0xe48>
    484c:	sub	x2, x2, #0x2
    4850:	add	x1, x1, x9
    4854:	b	429c <PyInit__ctypes_test@@Base+0xe78>
    4858:	mov	x2, #0x1                   	// #1
    485c:	sub	x2, x2, x12
    4860:	b	4574 <PyInit__ctypes_test@@Base+0x1150>
    4864:	cbnz	x12, 47f4 <PyInit__ctypes_test@@Base+0x13d0>
    4868:	adds	x2, x2, #0x8
    486c:	cinc	x6, x6, cs  // cs = hs, nlast
    4870:	tbnz	x6, #51, 47f8 <PyInit__ctypes_test@@Base+0x13d4>
    4874:	b	45e4 <PyInit__ctypes_test@@Base+0x11c0>
    4878:	cbnz	x12, 4868 <PyInit__ctypes_test@@Base+0x1444>
    487c:	tbnz	x6, #51, 47f8 <PyInit__ctypes_test@@Base+0x13d4>
    4880:	b	45e4 <PyInit__ctypes_test@@Base+0x11c0>
    4884:	orr	w0, w0, #0x10
    4888:	b	47f8 <PyInit__ctypes_test@@Base+0x13d4>
    488c:	nop
    4890:	stp	x29, x30, [sp, #-80]!
    4894:	mov	x29, sp
    4898:	str	q0, [sp, #48]
    489c:	str	q1, [sp, #64]
    48a0:	ldp	x1, x0, [sp, #48]
    48a4:	ldp	x6, x2, [sp, #64]
    48a8:	mrs	x11, fpcr
    48ac:	lsr	x3, x0, #63
    48b0:	ubfx	x7, x0, #0, #48
    48b4:	and	w12, w3, #0xff
    48b8:	mov	x14, x3
    48bc:	ubfx	x3, x0, #48, #15
    48c0:	cbz	w3, 4c68 <PyInit__ctypes_test@@Base+0x1844>
    48c4:	mov	w4, #0x7fff                	// #32767
    48c8:	cmp	w3, w4
    48cc:	b.eq	4d0c <PyInit__ctypes_test@@Base+0x18e8>  // b.none
    48d0:	and	x3, x3, #0xffff
    48d4:	extr	x4, x7, x1, #61
    48d8:	mov	x18, #0xffffffffffffc001    	// #-16383
    48dc:	orr	x7, x4, #0x8000000000000
    48e0:	add	x3, x3, x18
    48e4:	lsl	x5, x1, #3
    48e8:	mov	x16, #0x0                   	// #0
    48ec:	mov	x1, #0x0                   	// #0
    48f0:	mov	w0, #0x0                   	// #0
    48f4:	lsr	x8, x2, #63
    48f8:	ubfx	x4, x2, #0, #48
    48fc:	and	w15, w8, #0xff
    4900:	mov	x13, x8
    4904:	ubfx	x9, x2, #48, #15
    4908:	cbz	w9, 4cc8 <PyInit__ctypes_test@@Base+0x18a4>
    490c:	mov	w8, #0x7fff                	// #32767
    4910:	cmp	w9, w8
    4914:	b.eq	4998 <PyInit__ctypes_test@@Base+0x1574>  // b.none
    4918:	and	x9, x9, #0xffff
    491c:	mov	x17, #0xffffffffffffc001    	// #-16383
    4920:	add	x9, x9, x17
    4924:	extr	x2, x4, x6, #61
    4928:	add	x9, x9, x3
    492c:	lsl	x6, x6, #3
    4930:	orr	x4, x2, #0x8000000000000
    4934:	mov	x2, #0x0                   	// #0
    4938:	eor	w8, w12, w15
    493c:	cmp	x1, #0xa
    4940:	and	w10, w8, #0xff
    4944:	add	x3, x9, #0x1
    4948:	and	x8, x8, #0xff
    494c:	b.le	49d0 <PyInit__ctypes_test@@Base+0x15ac>
    4950:	cmp	x1, #0xb
    4954:	b.eq	5068 <PyInit__ctypes_test@@Base+0x1c44>  // b.none
    4958:	mov	w15, w12
    495c:	mov	x13, x14
    4960:	mov	w10, w15
    4964:	cmp	x16, #0x2
    4968:	b.eq	4d2c <PyInit__ctypes_test@@Base+0x1908>  // b.none
    496c:	mov	x4, x7
    4970:	mov	x6, x5
    4974:	mov	x2, x16
    4978:	mov	x8, x13
    497c:	cmp	x2, #0x3
    4980:	b.ne	49ec <PyInit__ctypes_test@@Base+0x15c8>  // b.any
    4984:	orr	x4, x4, #0x800000000000
    4988:	mov	x5, x6
    498c:	and	x4, x4, #0xffffffffffff
    4990:	mov	w1, #0x7fff                	// #32767
    4994:	b	4a00 <PyInit__ctypes_test@@Base+0x15dc>
    4998:	mov	x8, #0x7fff                	// #32767
    499c:	orr	x2, x4, x6
    49a0:	add	x9, x3, x8
    49a4:	cbnz	x2, 4a24 <PyInit__ctypes_test@@Base+0x1600>
    49a8:	eor	w8, w12, w15
    49ac:	orr	x1, x1, #0x2
    49b0:	and	w10, w8, #0xff
    49b4:	cmp	x1, #0xa
    49b8:	add	x3, x3, #0x8, lsl #12
    49bc:	and	x8, x8, #0xff
    49c0:	mov	x6, #0x0                   	// #0
    49c4:	b.gt	4fdc <PyInit__ctypes_test@@Base+0x1bb8>
    49c8:	mov	x4, #0x0                   	// #0
    49cc:	mov	x2, #0x2                   	// #2
    49d0:	cmp	x1, #0x2
    49d4:	b.gt	4a4c <PyInit__ctypes_test@@Base+0x1628>
    49d8:	sub	x1, x1, #0x1
    49dc:	cmp	x1, #0x1
    49e0:	b.hi	4a88 <PyInit__ctypes_test@@Base+0x1664>  // b.pmore
    49e4:	cmp	x2, #0x2
    49e8:	b.eq	4d2c <PyInit__ctypes_test@@Base+0x1908>  // b.none
    49ec:	cmp	x2, #0x1
    49f0:	b.ne	4be8 <PyInit__ctypes_test@@Base+0x17c4>  // b.any
    49f4:	mov	w1, #0x0                   	// #0
    49f8:	mov	x4, #0x0                   	// #0
    49fc:	mov	x5, #0x0                   	// #0
    4a00:	mov	x3, #0x0                   	// #0
    4a04:	orr	w1, w1, w10, lsl #15
    4a08:	bfxil	x3, x4, #0, #48
    4a0c:	fmov	d0, x5
    4a10:	bfi	x3, x1, #48, #16
    4a14:	fmov	v0.d[1], x3
    4a18:	cbnz	w0, 4e58 <PyInit__ctypes_test@@Base+0x1a34>
    4a1c:	ldp	x29, x30, [sp], #80
    4a20:	ret
    4a24:	tst	x4, #0x800000000000
    4a28:	eor	w8, w12, w15
    4a2c:	orr	x1, x1, #0x3
    4a30:	csinc	w0, w0, wzr, ne  // ne = any
    4a34:	and	w10, w8, #0xff
    4a38:	add	x3, x3, #0x8, lsl #12
    4a3c:	cmp	x1, #0xa
    4a40:	and	x8, x8, #0xff
    4a44:	mov	x2, #0x3                   	// #3
    4a48:	b.gt	505c <PyInit__ctypes_test@@Base+0x1c38>
    4a4c:	mov	x12, #0x1                   	// #1
    4a50:	mov	x14, #0x530                 	// #1328
    4a54:	lsl	x1, x12, x1
    4a58:	tst	x1, x14
    4a5c:	b.ne	4c5c <PyInit__ctypes_test@@Base+0x1838>  // b.any
    4a60:	mov	x14, #0x240                 	// #576
    4a64:	tst	x1, x14
    4a68:	b.ne	4c44 <PyInit__ctypes_test@@Base+0x1820>  // b.any
    4a6c:	mov	x12, #0x88                  	// #136
    4a70:	tst	x1, x12
    4a74:	b.eq	4a88 <PyInit__ctypes_test@@Base+0x1664>  // b.none
    4a78:	mov	x7, x4
    4a7c:	mov	x5, x6
    4a80:	mov	x16, x2
    4a84:	b	4960 <PyInit__ctypes_test@@Base+0x153c>
    4a88:	lsr	x13, x5, #32
    4a8c:	and	x12, x6, #0xffffffff
    4a90:	and	x15, x5, #0xffffffff
    4a94:	lsr	x6, x6, #32
    4a98:	and	x18, x4, #0xffffffff
    4a9c:	lsr	x2, x4, #32
    4aa0:	mul	x4, x13, x12
    4aa4:	stp	x21, x22, [sp, #32]
    4aa8:	lsr	x22, x7, #32
    4aac:	and	x5, x7, #0xffffffff
    4ab0:	mul	x16, x12, x15
    4ab4:	madd	x7, x6, x15, x4
    4ab8:	stp	x19, x20, [sp, #16]
    4abc:	mul	x1, x13, x18
    4ac0:	mul	x17, x15, x18
    4ac4:	and	x30, x16, #0xffffffff
    4ac8:	madd	x15, x2, x15, x1
    4acc:	add	x16, x7, x16, lsr #32
    4ad0:	mul	x21, x22, x12
    4ad4:	cmp	x4, x16
    4ad8:	mul	x20, x22, x18
    4adc:	mov	x14, #0x100000000           	// #4294967296
    4ae0:	mul	x19, x13, x6
    4ae4:	add	x15, x15, x17, lsr #32
    4ae8:	mul	x12, x12, x5
    4aec:	and	x17, x17, #0xffffffff
    4af0:	mul	x18, x5, x18
    4af4:	add	x4, x19, x14
    4af8:	madd	x7, x6, x5, x21
    4afc:	csel	x19, x4, x19, hi  // hi = pmore
    4b00:	madd	x5, x2, x5, x20
    4b04:	cmp	x1, x15
    4b08:	mul	x13, x13, x2
    4b0c:	add	x17, x17, x15, lsl #32
    4b10:	mul	x6, x6, x22
    4b14:	add	x7, x7, x12, lsr #32
    4b18:	add	x5, x5, x18, lsr #32
    4b1c:	add	x4, x13, x14
    4b20:	mul	x2, x2, x22
    4b24:	csel	x13, x4, x13, hi  // hi = pmore
    4b28:	and	x1, x18, #0xffffffff
    4b2c:	cmp	x21, x7
    4b30:	add	x4, x6, x14
    4b34:	add	x30, x30, x16, lsl #32
    4b38:	csel	x6, x4, x6, hi  // hi = pmore
    4b3c:	add	x13, x13, x15, lsr #32
    4b40:	cmp	x20, x5
    4b44:	add	x1, x1, x5, lsl #32
    4b48:	add	x16, x17, x16, lsr #32
    4b4c:	add	x14, x2, x14
    4b50:	csel	x2, x14, x2, hi  // hi = pmore
    4b54:	add	x16, x19, x16
    4b58:	adds	x1, x1, x13
    4b5c:	and	x12, x12, #0xffffffff
    4b60:	cset	x13, cs  // cs = hs, nlast
    4b64:	cmp	x16, x17
    4b68:	cset	x4, cc  // cc = lo, ul, last
    4b6c:	add	x12, x12, x7, lsl #32
    4b70:	adds	x1, x1, x4
    4b74:	lsr	x5, x5, #32
    4b78:	cset	x4, cs  // cs = hs, nlast
    4b7c:	cmp	x13, #0x0
    4b80:	ccmp	x4, #0x0, #0x0, eq  // eq = none
    4b84:	add	x7, x6, x7, lsr #32
    4b88:	cinc	x5, x5, ne  // ne = any
    4b8c:	adds	x6, x16, x12
    4b90:	cset	x4, cs  // cs = hs, nlast
    4b94:	adds	x1, x1, x7
    4b98:	cset	x7, cs  // cs = hs, nlast
    4b9c:	adds	x4, x1, x4
    4ba0:	cset	x1, cs  // cs = hs, nlast
    4ba4:	cmp	x7, #0x0
    4ba8:	orr	x30, x30, x6, lsl #13
    4bac:	ccmp	x1, #0x0, #0x0, eq  // eq = none
    4bb0:	cinc	x1, x2, ne  // ne = any
    4bb4:	cmp	x30, #0x0
    4bb8:	add	x1, x1, x5
    4bbc:	cset	x2, ne  // ne = any
    4bc0:	orr	x6, x2, x6, lsr #51
    4bc4:	orr	x6, x6, x4, lsl #13
    4bc8:	extr	x4, x1, x4, #51
    4bcc:	tbz	x1, #39, 4ee0 <PyInit__ctypes_test@@Base+0x1abc>
    4bd0:	ldp	x19, x20, [sp, #16]
    4bd4:	and	x1, x6, #0x1
    4bd8:	ldp	x21, x22, [sp, #32]
    4bdc:	orr	x6, x1, x6, lsr #1
    4be0:	orr	x6, x6, x4, lsl #63
    4be4:	lsr	x4, x4, #1
    4be8:	mov	x1, #0x3fff                	// #16383
    4bec:	add	x2, x3, x1
    4bf0:	cmp	x2, #0x0
    4bf4:	b.le	4d8c <PyInit__ctypes_test@@Base+0x1968>
    4bf8:	tst	x6, #0x7
    4bfc:	b.eq	4c1c <PyInit__ctypes_test@@Base+0x17f8>  // b.none
    4c00:	and	x1, x11, #0xc00000
    4c04:	orr	w0, w0, #0x10
    4c08:	cmp	x1, #0x400, lsl #12
    4c0c:	b.eq	4fd4 <PyInit__ctypes_test@@Base+0x1bb0>  // b.none
    4c10:	cmp	x1, #0x800, lsl #12
    4c14:	b.eq	4f7c <PyInit__ctypes_test@@Base+0x1b58>  // b.none
    4c18:	cbz	x1, 4f64 <PyInit__ctypes_test@@Base+0x1b40>
    4c1c:	tbz	x4, #52, 4c28 <PyInit__ctypes_test@@Base+0x1804>
    4c20:	and	x4, x4, #0xffefffffffffffff
    4c24:	add	x2, x3, #0x4, lsl #12
    4c28:	mov	x1, #0x7ffe                	// #32766
    4c2c:	cmp	x2, x1
    4c30:	b.gt	4eb4 <PyInit__ctypes_test@@Base+0x1a90>
    4c34:	and	w1, w2, #0x7fff
    4c38:	extr	x5, x4, x6, #3
    4c3c:	ubfx	x4, x4, #3, #48
    4c40:	b	4a00 <PyInit__ctypes_test@@Base+0x15dc>
    4c44:	mov	w0, w12
    4c48:	mov	w10, #0x0                   	// #0
    4c4c:	mov	x4, #0xffffffffffff        	// #281474976710655
    4c50:	mov	x5, #0xffffffffffffffff    	// #-1
    4c54:	mov	w1, #0x7fff                	// #32767
    4c58:	b	4a00 <PyInit__ctypes_test@@Base+0x15dc>
    4c5c:	mov	w15, w10
    4c60:	mov	x13, x8
    4c64:	b	4960 <PyInit__ctypes_test@@Base+0x153c>
    4c68:	orr	x5, x7, x1
    4c6c:	cbz	x5, 4d74 <PyInit__ctypes_test@@Base+0x1950>
    4c70:	cbz	x7, 4e90 <PyInit__ctypes_test@@Base+0x1a6c>
    4c74:	clz	x0, x7
    4c78:	sub	x4, x0, #0xf
    4c7c:	add	w5, w4, #0x3
    4c80:	mov	w3, #0x3d                  	// #61
    4c84:	sub	w3, w3, w4
    4c88:	lsl	x4, x7, x5
    4c8c:	lsr	x3, x1, x3
    4c90:	orr	x7, x3, x4
    4c94:	lsl	x5, x1, x5
    4c98:	lsr	x8, x2, #63
    4c9c:	mov	x3, #0xffffffffffffc011    	// #-16367
    4ca0:	ubfx	x4, x2, #0, #48
    4ca4:	sub	x3, x3, x0
    4ca8:	and	w15, w8, #0xff
    4cac:	mov	x13, x8
    4cb0:	ubfx	x9, x2, #48, #15
    4cb4:	mov	x1, #0x0                   	// #0
    4cb8:	mov	x16, #0x0                   	// #0
    4cbc:	mov	w0, #0x0                   	// #0
    4cc0:	cbnz	w9, 490c <PyInit__ctypes_test@@Base+0x14e8>
    4cc4:	nop
    4cc8:	orr	x2, x4, x6
    4ccc:	cbz	x2, 4d3c <PyInit__ctypes_test@@Base+0x1918>
    4cd0:	cbz	x4, 4e6c <PyInit__ctypes_test@@Base+0x1a48>
    4cd4:	clz	x9, x4
    4cd8:	sub	x2, x9, #0xf
    4cdc:	add	w10, w2, #0x3
    4ce0:	mov	w8, #0x3d                  	// #61
    4ce4:	sub	w8, w8, w2
    4ce8:	lsl	x2, x4, x10
    4cec:	lsr	x8, x6, x8
    4cf0:	orr	x4, x8, x2
    4cf4:	lsl	x6, x6, x10
    4cf8:	sub	x9, x3, x9
    4cfc:	mov	x10, #0xffffffffffffc011    	// #-16367
    4d00:	mov	x2, #0x0                   	// #0
    4d04:	add	x9, x9, x10
    4d08:	b	4938 <PyInit__ctypes_test@@Base+0x1514>
    4d0c:	orr	x5, x7, x1
    4d10:	cbnz	x5, 4d54 <PyInit__ctypes_test@@Base+0x1930>
    4d14:	mov	x7, #0x0                   	// #0
    4d18:	mov	x1, #0x8                   	// #8
    4d1c:	mov	x3, #0x7fff                	// #32767
    4d20:	mov	x16, #0x2                   	// #2
    4d24:	mov	w0, #0x0                   	// #0
    4d28:	b	48f4 <PyInit__ctypes_test@@Base+0x14d0>
    4d2c:	mov	w1, #0x7fff                	// #32767
    4d30:	mov	x4, #0x0                   	// #0
    4d34:	mov	x5, #0x0                   	// #0
    4d38:	b	4a00 <PyInit__ctypes_test@@Base+0x15dc>
    4d3c:	orr	x1, x1, #0x1
    4d40:	mov	x9, x3
    4d44:	mov	x4, #0x0                   	// #0
    4d48:	mov	x6, #0x0                   	// #0
    4d4c:	mov	x2, #0x1                   	// #1
    4d50:	b	4938 <PyInit__ctypes_test@@Base+0x1514>
    4d54:	lsr	x0, x7, #47
    4d58:	mov	x5, x1
    4d5c:	eor	x0, x0, #0x1
    4d60:	mov	x1, #0xc                   	// #12
    4d64:	and	w0, w0, #0x1
    4d68:	mov	x3, #0x7fff                	// #32767
    4d6c:	mov	x16, #0x3                   	// #3
    4d70:	b	48f4 <PyInit__ctypes_test@@Base+0x14d0>
    4d74:	mov	x7, #0x0                   	// #0
    4d78:	mov	x1, #0x4                   	// #4
    4d7c:	mov	x3, #0x0                   	// #0
    4d80:	mov	x16, #0x1                   	// #1
    4d84:	mov	w0, #0x0                   	// #0
    4d88:	b	48f4 <PyInit__ctypes_test@@Base+0x14d0>
    4d8c:	mov	x1, #0x1                   	// #1
    4d90:	sub	x2, x1, x2
    4d94:	cmp	x2, #0x74
    4d98:	b.gt	4e10 <PyInit__ctypes_test@@Base+0x19ec>
    4d9c:	cmp	x2, #0x3f
    4da0:	b.le	4ef0 <PyInit__ctypes_test@@Base+0x1acc>
    4da4:	mov	w1, #0x80                  	// #128
    4da8:	sub	w1, w1, w2
    4dac:	cmp	x2, #0x40
    4db0:	sub	w2, w2, #0x40
    4db4:	lsl	x1, x4, x1
    4db8:	orr	x1, x6, x1
    4dbc:	csel	x6, x1, x6, ne  // ne = any
    4dc0:	lsr	x2, x4, x2
    4dc4:	cmp	x6, #0x0
    4dc8:	cset	x5, ne  // ne = any
    4dcc:	orr	x5, x5, x2
    4dd0:	ands	x2, x5, #0x7
    4dd4:	b.eq	4f24 <PyInit__ctypes_test@@Base+0x1b00>  // b.none
    4dd8:	mov	x2, #0x0                   	// #0
    4ddc:	and	x11, x11, #0xc00000
    4de0:	orr	w0, w0, #0x10
    4de4:	cmp	x11, #0x400, lsl #12
    4de8:	b.eq	5034 <PyInit__ctypes_test@@Base+0x1c10>  // b.none
    4dec:	cmp	x11, #0x800, lsl #12
    4df0:	b.eq	5048 <PyInit__ctypes_test@@Base+0x1c24>  // b.none
    4df4:	cbz	x11, 4f8c <PyInit__ctypes_test@@Base+0x1b68>
    4df8:	tbnz	x2, #51, 4fa4 <PyInit__ctypes_test@@Base+0x1b80>
    4dfc:	ubfx	x4, x2, #3, #48
    4e00:	extr	x5, x2, x5, #3
    4e04:	orr	w0, w0, #0x8
    4e08:	mov	w1, #0x0                   	// #0
    4e0c:	b	4e40 <PyInit__ctypes_test@@Base+0x1a1c>
    4e10:	orr	x5, x6, x4
    4e14:	cbz	x5, 4e34 <PyInit__ctypes_test@@Base+0x1a10>
    4e18:	and	x11, x11, #0xc00000
    4e1c:	orr	w0, w0, #0x10
    4e20:	cmp	x11, #0x400, lsl #12
    4e24:	sub	x5, x1, x8
    4e28:	b.eq	4e34 <PyInit__ctypes_test@@Base+0x1a10>  // b.none
    4e2c:	cmp	x11, #0x800, lsl #12
    4e30:	csel	x5, x8, xzr, eq  // eq = none
    4e34:	orr	w0, w0, #0x8
    4e38:	mov	w1, #0x0                   	// #0
    4e3c:	mov	x4, #0x0                   	// #0
    4e40:	mov	x3, #0x0                   	// #0
    4e44:	fmov	d0, x5
    4e48:	bfxil	x3, x4, #0, #48
    4e4c:	bfi	x3, x1, #48, #15
    4e50:	bfi	x3, x10, #63, #1
    4e54:	fmov	v0.d[1], x3
    4e58:	str	q0, [sp, #48]
    4e5c:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    4e60:	ldr	q0, [sp, #48]
    4e64:	ldp	x29, x30, [sp], #80
    4e68:	ret
    4e6c:	clz	x9, x6
    4e70:	add	x2, x9, #0x31
    4e74:	add	x9, x9, #0x40
    4e78:	cmp	x2, #0x3c
    4e7c:	b.le	4cdc <PyInit__ctypes_test@@Base+0x18b8>
    4e80:	sub	w2, w2, #0x3d
    4e84:	lsl	x4, x6, x2
    4e88:	mov	x6, #0x0                   	// #0
    4e8c:	b	4cf8 <PyInit__ctypes_test@@Base+0x18d4>
    4e90:	clz	x3, x1
    4e94:	add	x4, x3, #0x31
    4e98:	add	x0, x3, #0x40
    4e9c:	cmp	x4, #0x3c
    4ea0:	b.le	4c7c <PyInit__ctypes_test@@Base+0x1858>
    4ea4:	sub	w4, w4, #0x3d
    4ea8:	mov	x5, #0x0                   	// #0
    4eac:	lsl	x7, x1, x4
    4eb0:	b	4c98 <PyInit__ctypes_test@@Base+0x1874>
    4eb4:	and	x5, x11, #0xc00000
    4eb8:	cmp	x5, #0x400, lsl #12
    4ebc:	b.eq	4fb8 <PyInit__ctypes_test@@Base+0x1b94>  // b.none
    4ec0:	cmp	x5, #0x800, lsl #12
    4ec4:	b.eq	4f48 <PyInit__ctypes_test@@Base+0x1b24>  // b.none
    4ec8:	cbz	x5, 4f3c <PyInit__ctypes_test@@Base+0x1b18>
    4ecc:	mov	x4, #0xffffffffffff        	// #281474976710655
    4ed0:	mov	x5, #0xffffffffffffffff    	// #-1
    4ed4:	mov	w2, #0x14                  	// #20
    4ed8:	orr	w0, w0, w2
    4edc:	b	4e40 <PyInit__ctypes_test@@Base+0x1a1c>
    4ee0:	mov	x3, x9
    4ee4:	ldp	x19, x20, [sp, #16]
    4ee8:	ldp	x21, x22, [sp, #32]
    4eec:	b	4be8 <PyInit__ctypes_test@@Base+0x17c4>
    4ef0:	mov	w1, #0x40                  	// #64
    4ef4:	sub	w1, w1, w2
    4ef8:	lsr	x3, x6, x2
    4efc:	lsl	x6, x6, x1
    4f00:	cmp	x6, #0x0
    4f04:	lsl	x5, x4, x1
    4f08:	cset	x1, ne  // ne = any
    4f0c:	orr	x5, x5, x3
    4f10:	lsr	x2, x4, x2
    4f14:	orr	x5, x5, x1
    4f18:	tst	x5, #0x7
    4f1c:	b.ne	4ddc <PyInit__ctypes_test@@Base+0x19b8>  // b.any
    4f20:	tbnz	x2, #51, 5054 <PyInit__ctypes_test@@Base+0x1c30>
    4f24:	ubfx	x4, x2, #3, #48
    4f28:	extr	x5, x2, x5, #3
    4f2c:	mov	w1, #0x0                   	// #0
    4f30:	tbz	w11, #11, 4a00 <PyInit__ctypes_test@@Base+0x15dc>
    4f34:	orr	w0, w0, #0x8
    4f38:	b	4e40 <PyInit__ctypes_test@@Base+0x1a1c>
    4f3c:	mov	w1, #0x7fff                	// #32767
    4f40:	mov	x4, #0x0                   	// #0
    4f44:	b	4ed4 <PyInit__ctypes_test@@Base+0x1ab0>
    4f48:	cmp	x8, #0x0
    4f4c:	mov	w2, #0x7fff                	// #32767
    4f50:	mov	x4, #0xffffffffffff        	// #281474976710655
    4f54:	csel	w1, w1, w2, eq  // eq = none
    4f58:	csel	x4, x4, xzr, eq  // eq = none
    4f5c:	csetm	x5, eq  // eq = none
    4f60:	b	4ed4 <PyInit__ctypes_test@@Base+0x1ab0>
    4f64:	and	x1, x6, #0xf
    4f68:	cmp	x1, #0x4
    4f6c:	b.eq	4c1c <PyInit__ctypes_test@@Base+0x17f8>  // b.none
    4f70:	adds	x6, x6, #0x4
    4f74:	cinc	x4, x4, cs  // cs = hs, nlast
    4f78:	b	4c1c <PyInit__ctypes_test@@Base+0x17f8>
    4f7c:	cbz	x8, 4c1c <PyInit__ctypes_test@@Base+0x17f8>
    4f80:	adds	x6, x6, #0x8
    4f84:	cinc	x4, x4, cs  // cs = hs, nlast
    4f88:	b	4c1c <PyInit__ctypes_test@@Base+0x17f8>
    4f8c:	and	x1, x5, #0xf
    4f90:	cmp	x1, #0x4
    4f94:	b.eq	4fa0 <PyInit__ctypes_test@@Base+0x1b7c>  // b.none
    4f98:	adds	x5, x5, #0x4
    4f9c:	cinc	x2, x2, cs  // cs = hs, nlast
    4fa0:	tbz	x2, #51, 4dfc <PyInit__ctypes_test@@Base+0x19d8>
    4fa4:	orr	w0, w0, #0x8
    4fa8:	mov	w1, #0x1                   	// #1
    4fac:	mov	x4, #0x0                   	// #0
    4fb0:	mov	x5, #0x0                   	// #0
    4fb4:	b	4e40 <PyInit__ctypes_test@@Base+0x1a1c>
    4fb8:	cmp	x8, #0x0
    4fbc:	mov	w2, #0x7fff                	// #32767
    4fc0:	mov	x4, #0xffffffffffff        	// #281474976710655
    4fc4:	csel	w1, w1, w2, ne  // ne = any
    4fc8:	csel	x4, x4, xzr, ne  // ne = any
    4fcc:	csetm	x5, ne  // ne = any
    4fd0:	b	4ed4 <PyInit__ctypes_test@@Base+0x1ab0>
    4fd4:	cbnz	x8, 4c1c <PyInit__ctypes_test@@Base+0x17f8>
    4fd8:	b	4f80 <PyInit__ctypes_test@@Base+0x1b5c>
    4fdc:	mov	x4, #0x2                   	// #2
    4fe0:	cmp	x1, #0xf
    4fe4:	b.ne	5008 <PyInit__ctypes_test@@Base+0x1be4>  // b.any
    4fe8:	tbz	x7, #47, 5020 <PyInit__ctypes_test@@Base+0x1bfc>
    4fec:	tbnz	x2, #47, 5020 <PyInit__ctypes_test@@Base+0x1bfc>
    4ff0:	orr	x4, x2, #0x800000000000
    4ff4:	mov	w10, w15
    4ff8:	and	x4, x4, #0xffffffffffff
    4ffc:	mov	x5, x6
    5000:	mov	w1, #0x7fff                	// #32767
    5004:	b	4a00 <PyInit__ctypes_test@@Base+0x15dc>
    5008:	cmp	x1, #0xb
    500c:	b.ne	4958 <PyInit__ctypes_test@@Base+0x1534>  // b.any
    5010:	mov	x7, x2
    5014:	mov	x5, x6
    5018:	mov	x16, x4
    501c:	b	4960 <PyInit__ctypes_test@@Base+0x153c>
    5020:	orr	x4, x7, #0x800000000000
    5024:	mov	w10, w12
    5028:	and	x4, x4, #0xffffffffffff
    502c:	mov	w1, #0x7fff                	// #32767
    5030:	b	4a00 <PyInit__ctypes_test@@Base+0x15dc>
    5034:	cbnz	x8, 4fa0 <PyInit__ctypes_test@@Base+0x1b7c>
    5038:	adds	x5, x5, #0x8
    503c:	cinc	x2, x2, cs  // cs = hs, nlast
    5040:	tbnz	x2, #51, 4fa4 <PyInit__ctypes_test@@Base+0x1b80>
    5044:	b	4dfc <PyInit__ctypes_test@@Base+0x19d8>
    5048:	cbnz	x8, 5038 <PyInit__ctypes_test@@Base+0x1c14>
    504c:	tbnz	x2, #51, 4fa4 <PyInit__ctypes_test@@Base+0x1b80>
    5050:	b	4dfc <PyInit__ctypes_test@@Base+0x19d8>
    5054:	orr	w0, w0, #0x10
    5058:	b	4fa4 <PyInit__ctypes_test@@Base+0x1b80>
    505c:	mov	x2, x4
    5060:	mov	x4, #0x3                   	// #3
    5064:	b	4fe0 <PyInit__ctypes_test@@Base+0x1bbc>
    5068:	mov	w10, w15
    506c:	mov	x8, x13
    5070:	b	497c <PyInit__ctypes_test@@Base+0x1558>
    5074:	nop
    5078:	stp	x29, x30, [sp, #-48]!
    507c:	mov	x29, sp
    5080:	str	x19, [sp, #16]
    5084:	str	q0, [sp, #32]
    5088:	ldp	x2, x0, [sp, #32]
    508c:	mrs	x1, fpcr
    5090:	ubfx	x19, x0, #48, #15
    5094:	mov	x3, #0x3ffe                	// #16382
    5098:	ubfx	x4, x0, #0, #48
    509c:	cmp	x19, x3
    50a0:	b.gt	50c8 <PyInit__ctypes_test@@Base+0x1ca4>
    50a4:	cbnz	x19, 5168 <PyInit__ctypes_test@@Base+0x1d44>
    50a8:	orr	x2, x4, x2
    50ac:	cbz	x2, 50b8 <PyInit__ctypes_test@@Base+0x1c94>
    50b0:	mov	w0, #0x10                  	// #16
    50b4:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    50b8:	mov	x0, x19
    50bc:	ldr	x19, [sp, #16]
    50c0:	ldp	x29, x30, [sp], #48
    50c4:	ret
    50c8:	lsr	x1, x0, #63
    50cc:	and	w3, w1, #0xff
    50d0:	mov	x1, #0x403d                	// #16445
    50d4:	cmp	x19, x1
    50d8:	b.le	5110 <PyInit__ctypes_test@@Base+0x1cec>
    50dc:	mov	x0, #0x403e                	// #16446
    50e0:	and	x5, x3, #0xff
    50e4:	cmp	x19, x0
    50e8:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
    50ec:	csel	w1, w3, wzr, eq  // eq = none
    50f0:	add	x19, x5, x0
    50f4:	cbz	w1, 5178 <PyInit__ctypes_test@@Base+0x1d54>
    50f8:	extr	x4, x4, x2, #49
    50fc:	cbnz	x4, 5178 <PyInit__ctypes_test@@Base+0x1d54>
    5100:	cmp	xzr, x2, lsl #15
    5104:	b.eq	50b8 <PyInit__ctypes_test@@Base+0x1c94>  // b.none
    5108:	mov	w0, #0x10                  	// #16
    510c:	b	50b4 <PyInit__ctypes_test@@Base+0x1c90>
    5110:	mov	x5, #0x406f                	// #16495
    5114:	sub	x1, x5, x19
    5118:	mov	x0, x19
    511c:	cmp	x1, #0x3f
    5120:	orr	x19, x4, #0x1000000000000
    5124:	b.le	5184 <PyInit__ctypes_test@@Base+0x1d60>
    5128:	mov	w4, #0xffffc011            	// #-16367
    512c:	add	w4, w0, w4
    5130:	cmp	x1, #0x40
    5134:	mov	w1, #0x402f                	// #16431
    5138:	sub	w0, w1, w0
    513c:	lsl	x1, x19, x4
    5140:	orr	x1, x2, x1
    5144:	csel	x2, x1, x2, ne  // ne = any
    5148:	lsr	x19, x19, x0
    514c:	cmp	x2, #0x0
    5150:	cset	w0, ne  // ne = any
    5154:	cmp	w3, #0x0
    5158:	cneg	x19, x19, ne  // ne = any
    515c:	cbz	w0, 50b8 <PyInit__ctypes_test@@Base+0x1c94>
    5160:	mov	w0, #0x10                  	// #16
    5164:	b	50b4 <PyInit__ctypes_test@@Base+0x1c90>
    5168:	mov	x19, #0x0                   	// #0
    516c:	mov	w0, #0x10                  	// #16
    5170:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    5174:	b	50b8 <PyInit__ctypes_test@@Base+0x1c94>
    5178:	mov	w0, #0x1                   	// #1
    517c:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    5180:	b	50b8 <PyInit__ctypes_test@@Base+0x1c94>
    5184:	mov	w6, #0xffffbfd1            	// #-16431
    5188:	add	w4, w0, w6
    518c:	sub	w0, w5, w0
    5190:	lsl	x1, x2, x4
    5194:	cmp	x1, #0x0
    5198:	lsr	x2, x2, x0
    519c:	cset	w0, ne  // ne = any
    51a0:	lsl	x19, x19, x4
    51a4:	orr	x19, x2, x19
    51a8:	b	5154 <PyInit__ctypes_test@@Base+0x1d30>
    51ac:	nop
    51b0:	mrs	x0, fpcr
    51b4:	fmov	w0, s0
    51b8:	ubfx	x2, x0, #23, #8
    51bc:	and	x1, x0, #0x7fffff
    51c0:	add	x3, x2, #0x1
    51c4:	ubfx	x5, x0, #0, #23
    51c8:	tst	x3, #0xfe
    51cc:	lsr	w0, w0, #31
    51d0:	b.eq	5200 <PyInit__ctypes_test@@Base+0x1ddc>  // b.none
    51d4:	lsl	x1, x1, #25
    51d8:	mov	w3, #0x3f80                	// #16256
    51dc:	add	w4, w2, w3
    51e0:	mov	x3, #0x0                   	// #0
    51e4:	bfxil	x3, x1, #0, #48
    51e8:	mov	x2, #0x0                   	// #0
    51ec:	fmov	d0, x2
    51f0:	bfi	x3, x4, #48, #15
    51f4:	bfi	x3, x0, #63, #1
    51f8:	fmov	v0.d[1], x3
    51fc:	ret
    5200:	cbnz	w2, 5230 <PyInit__ctypes_test@@Base+0x1e0c>
    5204:	cbnz	x1, 527c <PyInit__ctypes_test@@Base+0x1e58>
    5208:	mov	x1, #0x0                   	// #0
    520c:	mov	x3, #0x0                   	// #0
    5210:	bfxil	x3, x1, #0, #48
    5214:	mov	w4, #0x0                   	// #0
    5218:	mov	x2, #0x0                   	// #0
    521c:	fmov	d0, x2
    5220:	bfi	x3, x4, #48, #15
    5224:	bfi	x3, x0, #63, #1
    5228:	fmov	v0.d[1], x3
    522c:	ret
    5230:	cbz	x1, 52b8 <PyInit__ctypes_test@@Base+0x1e94>
    5234:	lsl	x1, x1, #25
    5238:	mov	x3, #0x0                   	// #0
    523c:	orr	x1, x1, #0x800000000000
    5240:	mov	x2, #0x0                   	// #0
    5244:	fmov	d0, x2
    5248:	bfxil	x3, x1, #0, #48
    524c:	orr	x3, x3, #0x7fff000000000000
    5250:	bfi	x3, x0, #63, #1
    5254:	fmov	v0.d[1], x3
    5258:	tbnz	w5, #22, 52e0 <PyInit__ctypes_test@@Base+0x1ebc>
    525c:	stp	x29, x30, [sp, #-32]!
    5260:	mov	w0, #0x1                   	// #1
    5264:	mov	x29, sp
    5268:	str	q0, [sp, #16]
    526c:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    5270:	ldr	q0, [sp, #16]
    5274:	ldp	x29, x30, [sp], #32
    5278:	ret
    527c:	clz	x4, x1
    5280:	mov	w2, #0x3fa9                	// #16297
    5284:	sub	w3, w4, #0xf
    5288:	sub	w2, w2, w4
    528c:	and	w4, w2, #0x7fff
    5290:	mov	x2, #0x0                   	// #0
    5294:	lsl	x1, x1, x3
    5298:	and	x1, x1, #0xffffffffffff
    529c:	mov	x3, #0x0                   	// #0
    52a0:	fmov	d0, x2
    52a4:	bfxil	x3, x1, #0, #48
    52a8:	bfi	x3, x4, #48, #15
    52ac:	bfi	x3, x0, #63, #1
    52b0:	fmov	v0.d[1], x3
    52b4:	ret
    52b8:	mov	x1, #0x0                   	// #0
    52bc:	mov	x3, #0x0                   	// #0
    52c0:	bfxil	x3, x1, #0, #48
    52c4:	mov	w4, #0x7fff                	// #32767
    52c8:	mov	x2, #0x0                   	// #0
    52cc:	fmov	d0, x2
    52d0:	bfi	x3, x4, #48, #15
    52d4:	bfi	x3, x0, #63, #1
    52d8:	fmov	v0.d[1], x3
    52dc:	ret
    52e0:	ret
    52e4:	nop
    52e8:	mrs	x0, fpcr
    52ec:	fmov	x0, d0
    52f0:	ubfx	x1, x0, #52, #11
    52f4:	lsr	x4, x0, #63
    52f8:	add	x2, x1, #0x1
    52fc:	and	w4, w4, #0xff
    5300:	tst	x2, #0x7fe
    5304:	ubfx	x0, x0, #0, #52
    5308:	b.eq	533c <PyInit__ctypes_test@@Base+0x1f18>  // b.none
    530c:	lsr	x5, x0, #4
    5310:	mov	x3, #0x0                   	// #0
    5314:	and	x5, x5, #0xffffffffffff
    5318:	mov	w2, #0x3c00                	// #15360
    531c:	add	w1, w1, w2
    5320:	lsl	x0, x0, #60
    5324:	bfxil	x3, x5, #0, #48
    5328:	fmov	d0, x0
    532c:	bfi	x3, x1, #48, #15
    5330:	bfi	x3, x4, #63, #1
    5334:	fmov	v0.d[1], x3
    5338:	ret
    533c:	cbnz	x1, 5390 <PyInit__ctypes_test@@Base+0x1f6c>
    5340:	cbz	x0, 53dc <PyInit__ctypes_test@@Base+0x1fb8>
    5344:	clz	x2, x0
    5348:	cmp	w2, #0xe
    534c:	b.gt	5428 <PyInit__ctypes_test@@Base+0x2004>
    5350:	add	w1, w2, #0x31
    5354:	mov	w5, #0xf                   	// #15
    5358:	sub	w5, w5, w2
    535c:	lsr	x5, x0, x5
    5360:	lsl	x0, x0, x1
    5364:	and	x5, x5, #0xffffffffffff
    5368:	mov	w1, #0x3c0c                	// #15372
    536c:	mov	x3, #0x0                   	// #0
    5370:	sub	w1, w1, w2
    5374:	and	w1, w1, #0x7fff
    5378:	bfxil	x3, x5, #0, #48
    537c:	fmov	d0, x0
    5380:	bfi	x3, x1, #48, #15
    5384:	bfi	x3, x4, #63, #1
    5388:	fmov	v0.d[1], x3
    538c:	ret
    5390:	cbz	x0, 5400 <PyInit__ctypes_test@@Base+0x1fdc>
    5394:	lsr	x1, x0, #4
    5398:	mov	x3, #0x0                   	// #0
    539c:	orr	x1, x1, #0x800000000000
    53a0:	lsl	x2, x0, #60
    53a4:	fmov	d0, x2
    53a8:	bfxil	x3, x1, #0, #48
    53ac:	orr	x3, x3, #0x7fff000000000000
    53b0:	bfi	x3, x4, #63, #1
    53b4:	fmov	v0.d[1], x3
    53b8:	tbnz	x0, #51, 5424 <PyInit__ctypes_test@@Base+0x2000>
    53bc:	stp	x29, x30, [sp, #-32]!
    53c0:	mov	w0, #0x1                   	// #1
    53c4:	mov	x29, sp
    53c8:	str	q0, [sp, #16]
    53cc:	bl	5438 <PyInit__ctypes_test@@Base+0x2014>
    53d0:	ldr	q0, [sp, #16]
    53d4:	ldp	x29, x30, [sp], #32
    53d8:	ret
    53dc:	mov	x5, #0x0                   	// #0
    53e0:	mov	x3, #0x0                   	// #0
    53e4:	bfxil	x3, x5, #0, #48
    53e8:	mov	w1, #0x0                   	// #0
    53ec:	fmov	d0, x0
    53f0:	bfi	x3, x1, #48, #15
    53f4:	bfi	x3, x4, #63, #1
    53f8:	fmov	v0.d[1], x3
    53fc:	ret
    5400:	mov	x5, #0x0                   	// #0
    5404:	mov	x3, #0x0                   	// #0
    5408:	bfxil	x3, x5, #0, #48
    540c:	mov	w1, #0x7fff                	// #32767
    5410:	fmov	d0, x0
    5414:	bfi	x3, x1, #48, #15
    5418:	bfi	x3, x4, #63, #1
    541c:	fmov	v0.d[1], x3
    5420:	ret
    5424:	ret
    5428:	sub	w5, w2, #0xf
    542c:	lsl	x5, x0, x5
    5430:	mov	x0, #0x0                   	// #0
    5434:	b	5364 <PyInit__ctypes_test@@Base+0x1f40>
    5438:	tbz	w0, #0, 5448 <PyInit__ctypes_test@@Base+0x2024>
    543c:	movi	v1.2s, #0x0
    5440:	fdiv	s0, s1, s1
    5444:	mrs	x1, fpsr
    5448:	tbz	w0, #1, 545c <PyInit__ctypes_test@@Base+0x2038>
    544c:	fmov	s1, #1.000000000000000000e+00
    5450:	movi	v2.2s, #0x0
    5454:	fdiv	s0, s1, s2
    5458:	mrs	x1, fpsr
    545c:	tbz	w0, #2, 547c <PyInit__ctypes_test@@Base+0x2058>
    5460:	mov	w2, #0xc5ae                	// #50606
    5464:	mov	w1, #0x7f7fffff            	// #2139095039
    5468:	movk	w2, #0x749d, lsl #16
    546c:	fmov	s1, w1
    5470:	fmov	s2, w2
    5474:	fadd	s0, s1, s2
    5478:	mrs	x1, fpsr
    547c:	tbz	w0, #3, 548c <PyInit__ctypes_test@@Base+0x2068>
    5480:	movi	v1.2s, #0x80, lsl #16
    5484:	fmul	s0, s1, s1
    5488:	mrs	x1, fpsr
    548c:	tbz	w0, #4, 54a4 <PyInit__ctypes_test@@Base+0x2080>
    5490:	mov	w0, #0x7f7fffff            	// #2139095039
    5494:	fmov	s2, #1.000000000000000000e+00
    5498:	fmov	s1, w0
    549c:	fsub	s0, s1, s2
    54a0:	mrs	x0, fpsr
    54a4:	ret

Disassembly of section .fini:

00000000000054a8 <.fini>:
    54a8:	stp	x29, x30, [sp, #-16]!
    54ac:	mov	x29, sp
    54b0:	ldp	x29, x30, [sp], #16
    54b4:	ret
