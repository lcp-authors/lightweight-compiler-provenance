
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//strftime_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000008b0 <_init>:
 8b0:	stp	x29, x30, [sp, #-16]!
 8b4:	mov	x29, sp
 8b8:	bl	9d0 <call_weak_fn>
 8bc:	ldp	x29, x30, [sp], #16
 8c0:	ret

Disassembly of section .plt:

00000000000008d0 <.plt>:
 8d0:	stp	x16, x30, [sp, #-16]!
 8d4:	adrp	x16, 11000 <__FRAME_END__+0x10168>
 8d8:	ldr	x17, [x16, #4088]
 8dc:	add	x16, x16, #0xff8
 8e0:	br	x17
 8e4:	nop
 8e8:	nop
 8ec:	nop

00000000000008f0 <strlen@plt>:
 8f0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 8f4:	ldr	x17, [x16]
 8f8:	add	x16, x16, #0x0
 8fc:	br	x17

0000000000000900 <__cxa_finalize@plt>:
 900:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 904:	ldr	x17, [x16, #8]
 908:	add	x16, x16, #0x8
 90c:	br	x17

0000000000000910 <strftime@plt>:
 910:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 914:	ldr	x17, [x16, #16]
 918:	add	x16, x16, #0x10
 91c:	br	x17

0000000000000920 <localtime@plt>:
 920:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 924:	ldr	x17, [x16, #24]
 928:	add	x16, x16, #0x18
 92c:	br	x17

0000000000000930 <time@plt>:
 930:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 934:	ldr	x17, [x16, #32]
 938:	add	x16, x16, #0x20
 93c:	br	x17

0000000000000940 <xrealloc@plt>:
 940:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 944:	ldr	x17, [x16, #40]
 948:	add	x16, x16, #0x28
 94c:	br	x17

0000000000000950 <builtin_usage@plt>:
 950:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 954:	ldr	x17, [x16, #48]
 958:	add	x16, x16, #0x30
 95c:	br	x17

0000000000000960 <__gmon_start__@plt>:
 960:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 964:	ldr	x17, [x16, #56]
 968:	add	x16, x16, #0x38
 96c:	br	x17

0000000000000970 <puts@plt>:
 970:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 974:	ldr	x17, [x16, #64]
 978:	add	x16, x16, #0x40
 97c:	br	x17

0000000000000980 <free@plt>:
 980:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 984:	ldr	x17, [x16, #72]
 988:	add	x16, x16, #0x48
 98c:	br	x17

0000000000000990 <no_options@plt>:
 990:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 994:	ldr	x17, [x16, #80]
 998:	add	x16, x16, #0x50
 99c:	br	x17

00000000000009a0 <legal_number@plt>:
 9a0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9a4:	ldr	x17, [x16, #88]
 9a8:	add	x16, x16, #0x58
 9ac:	br	x17

00000000000009b0 <putchar@plt>:
 9b0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9b4:	ldr	x17, [x16, #96]
 9b8:	add	x16, x16, #0x60
 9bc:	br	x17

00000000000009c0 <sh_invalidnum@plt>:
 9c0:	adrp	x16, 12000 <strlen@GLIBC_2.17>
 9c4:	ldr	x17, [x16, #104]
 9c8:	add	x16, x16, #0x68
 9cc:	br	x17

Disassembly of section .text:

00000000000009d0 <call_weak_fn>:
 9d0:	adrp	x0, 11000 <__FRAME_END__+0x10168>
 9d4:	ldr	x0, [x0, #4056]
 9d8:	cbz	x0, 9e0 <call_weak_fn+0x10>
 9dc:	b	960 <__gmon_start__@plt>
 9e0:	ret

00000000000009e4 <deregister_tm_clones>:
 9e4:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 9e8:	add	x0, x0, #0xe0
 9ec:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 9f0:	add	x1, x1, #0xe0
 9f4:	cmp	x0, x1
 9f8:	b.eq	a24 <deregister_tm_clones+0x40>  // b.none
 9fc:	adrp	x1, 11000 <__FRAME_END__+0x10168>
 a00:	ldr	x1, [x1, #4040]
 a04:	cbz	x1, a24 <deregister_tm_clones+0x40>
 a08:	stp	x29, x30, [sp, #-16]!
 a0c:	mov	x29, sp
 a10:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a14:	add	x0, x0, #0xe0
 a18:	blr	x1
 a1c:	ldp	x29, x30, [sp], #16
 a20:	ret
 a24:	ret

0000000000000a28 <register_tm_clones>:
 a28:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a2c:	add	x0, x0, #0xe0
 a30:	adrp	x1, 12000 <strlen@GLIBC_2.17>
 a34:	add	x1, x1, #0xe0
 a38:	sub	x0, x0, x1
 a3c:	lsr	x1, x0, #63
 a40:	add	x0, x1, x0, asr #3
 a44:	cmp	xzr, x0, asr #1
 a48:	b.eq	a78 <register_tm_clones+0x50>  // b.none
 a4c:	asr	x1, x0, #1
 a50:	adrp	x2, 11000 <__FRAME_END__+0x10168>
 a54:	ldr	x2, [x2, #4064]
 a58:	cbz	x2, a78 <register_tm_clones+0x50>
 a5c:	stp	x29, x30, [sp, #-16]!
 a60:	mov	x29, sp
 a64:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a68:	add	x0, x0, #0xe0
 a6c:	blr	x2
 a70:	ldp	x29, x30, [sp], #16
 a74:	ret
 a78:	ret

0000000000000a7c <__do_global_dtors_aux>:
 a7c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 a80:	ldrb	w0, [x0, #224]
 a84:	cbnz	w0, ac0 <__do_global_dtors_aux+0x44>
 a88:	stp	x29, x30, [sp, #-16]!
 a8c:	mov	x29, sp
 a90:	adrp	x0, 11000 <__FRAME_END__+0x10168>
 a94:	ldr	x0, [x0, #4048]
 a98:	cbz	x0, aa8 <__do_global_dtors_aux+0x2c>
 a9c:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 aa0:	ldr	x0, [x0, #112]
 aa4:	bl	900 <__cxa_finalize@plt>
 aa8:	bl	9e4 <deregister_tm_clones>
 aac:	adrp	x0, 12000 <strlen@GLIBC_2.17>
 ab0:	mov	w1, #0x1                   	// #1
 ab4:	strb	w1, [x0, #224]
 ab8:	ldp	x29, x30, [sp], #16
 abc:	ret
 ac0:	ret

0000000000000ac4 <frame_dummy>:
 ac4:	stp	x29, x30, [sp, #-16]!
 ac8:	mov	x29, sp
 acc:	bl	a28 <register_tm_clones>
 ad0:	ldp	x29, x30, [sp], #16
 ad4:	ret

0000000000000ad8 <strftime_builtin>:
 ad8:	stp	x29, x30, [sp, #-96]!
 adc:	mov	x29, sp
 ae0:	stp	x19, x20, [sp, #16]
 ae4:	cbz	x0, b48 <strftime_builtin+0x70>
 ae8:	mov	x19, x0
 aec:	bl	990 <no_options@plt>
 af0:	mov	w20, w0
 af4:	cbnz	w0, c10 <strftime_builtin+0x138>
 af8:	stp	x21, x22, [sp, #32]
 afc:	ldr	x0, [x19, #8]
 b00:	ldr	x22, [x0]
 b04:	cbz	x22, b54 <strftime_builtin+0x7c>
 b08:	ldrb	w0, [x22]
 b0c:	cbz	w0, b54 <strftime_builtin+0x7c>
 b10:	ldr	x19, [x19]
 b14:	cbz	x19, b7c <strftime_builtin+0xa4>
 b18:	ldr	x0, [x19, #8]
 b1c:	ldr	x0, [x0]
 b20:	cbz	x0, b7c <strftime_builtin+0xa4>
 b24:	add	x1, sp, #0x50
 b28:	bl	9a0 <legal_number@plt>
 b2c:	cbz	w0, b64 <strftime_builtin+0x8c>
 b30:	ldr	x0, [sp, #80]
 b34:	tbnz	x0, #63, b64 <strftime_builtin+0x8c>
 b38:	stp	x23, x24, [sp, #48]
 b3c:	str	x25, [sp, #64]
 b40:	str	x0, [sp, #88]
 b44:	b	b90 <strftime_builtin+0xb8>
 b48:	bl	950 <builtin_usage@plt>
 b4c:	mov	w20, #0x102                 	// #258
 b50:	b	c00 <strftime_builtin+0x128>
 b54:	mov	w0, #0xa                   	// #10
 b58:	bl	9b0 <putchar@plt>
 b5c:	ldp	x21, x22, [sp, #32]
 b60:	b	c00 <strftime_builtin+0x128>
 b64:	ldr	x0, [x19, #8]
 b68:	ldr	x0, [x0]
 b6c:	bl	9c0 <sh_invalidnum@plt>
 b70:	mov	w20, #0x1                   	// #1
 b74:	ldp	x21, x22, [sp, #32]
 b78:	b	c00 <strftime_builtin+0x128>
 b7c:	stp	x23, x24, [sp, #48]
 b80:	str	x25, [sp, #64]
 b84:	mov	x0, #0x0                   	// #0
 b88:	bl	930 <time@plt>
 b8c:	str	x0, [sp, #88]
 b90:	add	x0, sp, #0x58
 b94:	bl	920 <localtime@plt>
 b98:	mov	x25, x0
 b9c:	mov	x0, x22
 ba0:	bl	8f0 <strlen@plt>
 ba4:	lsl	x24, x0, #2
 ba8:	mov	x21, x24
 bac:	mov	w23, #0x3                   	// #3
 bb0:	mov	x19, #0x0                   	// #0
 bb4:	mov	x1, x21
 bb8:	mov	x0, x19
 bbc:	bl	940 <xrealloc@plt>
 bc0:	mov	x19, x0
 bc4:	mov	x3, x25
 bc8:	mov	x2, x22
 bcc:	mov	x1, x21
 bd0:	bl	910 <strftime@plt>
 bd4:	cbnz	x0, be4 <strftime_builtin+0x10c>
 bd8:	add	x21, x21, x24
 bdc:	subs	w23, w23, #0x1
 be0:	b.ne	bb4 <strftime_builtin+0xdc>  // b.any
 be4:	mov	x0, x19
 be8:	bl	970 <puts@plt>
 bec:	mov	x0, x19
 bf0:	bl	980 <free@plt>
 bf4:	ldp	x21, x22, [sp, #32]
 bf8:	ldp	x23, x24, [sp, #48]
 bfc:	ldr	x25, [sp, #64]
 c00:	mov	w0, w20
 c04:	ldp	x19, x20, [sp, #16]
 c08:	ldp	x29, x30, [sp], #96
 c0c:	ret
 c10:	mov	w20, #0x102                 	// #258
 c14:	b	c00 <strftime_builtin+0x128>

Disassembly of section .fini:

0000000000000c18 <_fini>:
 c18:	stp	x29, x30, [sp, #-16]!
 c1c:	mov	x29, sp
 c20:	ldp	x29, x30, [sp], #16
 c24:	ret
