
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//Opcode.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000001150 <_init>:
    1150:	stp	x29, x30, [sp, #-16]!
    1154:	mov	x29, sp
    1158:	bl	1460 <call_weak_fn>
    115c:	ldp	x29, x30, [sp], #16
    1160:	ret

Disassembly of section .plt:

0000000000001170 <.plt>:
    1170:	stp	x16, x30, [sp, #-16]!
    1174:	adrp	x16, 15000 <__FRAME_END__+0xfd70>
    1178:	ldr	x17, [x16, #4088]
    117c:	add	x16, x16, #0xff8
    1180:	br	x17
    1184:	nop
    1188:	nop
    118c:	nop

0000000000001190 <memcpy@plt>:
    1190:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1194:	ldr	x17, [x16]
    1198:	add	x16, x16, #0x0
    119c:	br	x17

00000000000011a0 <Perl_sv_free@plt>:
    11a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    11a4:	ldr	x17, [x16, #8]
    11a8:	add	x16, x16, #0x8
    11ac:	br	x17

00000000000011b0 <Perl_sv_2iv_flags@plt>:
    11b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    11b4:	ldr	x17, [x16, #16]
    11b8:	add	x16, x16, #0x10
    11bc:	br	x17

00000000000011c0 <strlen@plt>:
    11c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    11c4:	ldr	x17, [x16, #24]
    11c8:	add	x16, x16, #0x18
    11cc:	br	x17

00000000000011d0 <Perl_stack_grow@plt>:
    11d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    11d4:	ldr	x17, [x16, #32]
    11d8:	add	x16, x16, #0x20
    11dc:	br	x17

00000000000011e0 <__cxa_finalize@plt>:
    11e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    11e4:	ldr	x17, [x16, #40]
    11e8:	add	x16, x16, #0x28
    11ec:	br	x17

00000000000011f0 <Perl_pop_scope@plt>:
    11f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    11f4:	ldr	x17, [x16, #48]
    11f8:	add	x16, x16, #0x30
    11fc:	br	x17

0000000000001200 <Perl_my_cxt_init@plt>:
    1200:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1204:	ldr	x17, [x16, #56]
    1208:	add	x16, x16, #0x38
    120c:	br	x17

0000000000001210 <Perl_newSV@plt>:
    1210:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1214:	ldr	x17, [x16, #64]
    1218:	add	x16, x16, #0x40
    121c:	br	x17

0000000000001220 <Perl_sv_setiv_mg@plt>:
    1220:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1224:	ldr	x17, [x16, #72]
    1228:	add	x16, x16, #0x48
    122c:	br	x17

0000000000001230 <memset@plt>:
    1230:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1234:	ldr	x17, [x16, #80]
    1238:	add	x16, x16, #0x50
    123c:	br	x17

0000000000001240 <Perl_sv_2pv_flags@plt>:
    1240:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1244:	ldr	x17, [x16, #88]
    1248:	add	x16, x16, #0x58
    124c:	br	x17

0000000000001250 <Perl_xs_boot_epilog@plt>:
    1250:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1254:	ldr	x17, [x16, #96]
    1258:	add	x16, x16, #0x60
    125c:	br	x17

0000000000001260 <Perl_hv_name_set@plt>:
    1260:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1264:	ldr	x17, [x16, #104]
    1268:	add	x16, x16, #0x68
    126c:	br	x17

0000000000001270 <Perl_save_hash@plt>:
    1270:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1274:	ldr	x17, [x16, #112]
    1278:	add	x16, x16, #0x70
    127c:	br	x17

0000000000001280 <__stack_chk_fail@plt>:
    1280:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1284:	ldr	x17, [x16, #120]
    1288:	add	x16, x16, #0x78
    128c:	br	x17

0000000000001290 <__gmon_start__@plt>:
    1290:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1294:	ldr	x17, [x16, #128]
    1298:	add	x16, x16, #0x80
    129c:	br	x17

00000000000012a0 <Perl_croak_xs_usage@plt>:
    12a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    12a4:	ldr	x17, [x16, #136]
    12a8:	add	x16, x16, #0x88
    12ac:	br	x17

00000000000012b0 <Perl_newSVpvn_flags@plt>:
    12b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    12b4:	ldr	x17, [x16, #144]
    12b8:	add	x16, x16, #0x90
    12bc:	br	x17

00000000000012c0 <Perl_gv_fetchpvn_flags@plt>:
    12c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    12c4:	ldr	x17, [x16, #152]
    12c8:	add	x16, x16, #0x98
    12cc:	br	x17

00000000000012d0 <strcmp@plt>:
    12d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    12d4:	ldr	x17, [x16, #160]
    12d8:	add	x16, x16, #0xa0
    12dc:	br	x17

00000000000012e0 <Perl_safesyscalloc@plt>:
    12e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    12e4:	ldr	x17, [x16, #168]
    12e8:	add	x16, x16, #0xa8
    12ec:	br	x17

00000000000012f0 <Perl_save_hptr@plt>:
    12f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    12f4:	ldr	x17, [x16, #176]
    12f8:	add	x16, x16, #0xb0
    12fc:	br	x17

0000000000001300 <Perl_save_generic_svref@plt>:
    1300:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1304:	ldr	x17, [x16, #184]
    1308:	add	x16, x16, #0xb8
    130c:	br	x17

0000000000001310 <Perl_croak_nocontext@plt>:
    1310:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1314:	ldr	x17, [x16, #192]
    1318:	add	x16, x16, #0xc0
    131c:	br	x17

0000000000001320 <Perl_gv_stashsv@plt>:
    1320:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1324:	ldr	x17, [x16, #200]
    1328:	add	x16, x16, #0xc8
    132c:	br	x17

0000000000001330 <Perl_get_op_names@plt>:
    1330:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1334:	ldr	x17, [x16, #208]
    1338:	add	x16, x16, #0xd0
    133c:	br	x17

0000000000001340 <Perl_get_op_descs@plt>:
    1340:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1344:	ldr	x17, [x16, #216]
    1348:	add	x16, x16, #0xd8
    134c:	br	x17

0000000000001350 <Perl_sv_setsv_flags@plt>:
    1350:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1354:	ldr	x17, [x16, #224]
    1358:	add	x16, x16, #0xe0
    135c:	br	x17

0000000000001360 <Perl_newXS_flags@plt>:
    1360:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1364:	ldr	x17, [x16, #232]
    1368:	add	x16, x16, #0xe8
    136c:	br	x17

0000000000001370 <Perl_sv_2mortal@plt>:
    1370:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1374:	ldr	x17, [x16, #240]
    1378:	add	x16, x16, #0xf0
    137c:	br	x17

0000000000001380 <Perl_save_aptr@plt>:
    1380:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1384:	ldr	x17, [x16, #248]
    1388:	add	x16, x16, #0xf8
    138c:	br	x17

0000000000001390 <Perl_xs_handshake@plt>:
    1390:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1394:	ldr	x17, [x16, #256]
    1398:	add	x16, x16, #0x100
    139c:	br	x17

00000000000013a0 <Perl_markstack_grow@plt>:
    13a0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    13a4:	ldr	x17, [x16, #264]
    13a8:	add	x16, x16, #0x108
    13ac:	br	x17

00000000000013b0 <Perl_hv_common_key_len@plt>:
    13b0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    13b4:	ldr	x17, [x16, #272]
    13b8:	add	x16, x16, #0x110
    13bc:	br	x17

00000000000013c0 <Perl_newSV_type@plt>:
    13c0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    13c4:	ldr	x17, [x16, #280]
    13c8:	add	x16, x16, #0x118
    13cc:	br	x17

00000000000013d0 <Perl_block_gimme@plt>:
    13d0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    13d4:	ldr	x17, [x16, #288]
    13d8:	add	x16, x16, #0x120
    13dc:	br	x17

00000000000013e0 <Perl_save_vptr@plt>:
    13e0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    13e4:	ldr	x17, [x16, #296]
    13e8:	add	x16, x16, #0x128
    13ec:	br	x17

00000000000013f0 <Perl_call_sv@plt>:
    13f0:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    13f4:	ldr	x17, [x16, #304]
    13f8:	add	x16, x16, #0x130
    13fc:	br	x17

0000000000001400 <Perl_hv_clear@plt>:
    1400:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1404:	ldr	x17, [x16, #312]
    1408:	add	x16, x16, #0x138
    140c:	br	x17

0000000000001410 <Perl_push_scope@plt>:
    1410:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1414:	ldr	x17, [x16, #320]
    1418:	add	x16, x16, #0x140
    141c:	br	x17

0000000000001420 <Perl_newSViv@plt>:
    1420:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1424:	ldr	x17, [x16, #328]
    1428:	add	x16, x16, #0x148
    142c:	br	x17

0000000000001430 <Perl_gv_add_by_type@plt>:
    1430:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1434:	ldr	x17, [x16, #336]
    1438:	add	x16, x16, #0x150
    143c:	br	x17

0000000000001440 <Perl_newSVsv_flags@plt>:
    1440:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1444:	ldr	x17, [x16, #344]
    1448:	add	x16, x16, #0x158
    144c:	br	x17

0000000000001450 <Perl_sv_newmortal@plt>:
    1450:	adrp	x16, 16000 <memcpy@GLIBC_2.17>
    1454:	ldr	x17, [x16, #352]
    1458:	add	x16, x16, #0x160
    145c:	br	x17

Disassembly of section .text:

0000000000001460 <call_weak_fn>:
    1460:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1464:	ldr	x0, [x0, #4040]
    1468:	cbz	x0, 1470 <call_weak_fn+0x10>
    146c:	b	1290 <__gmon_start__@plt>
    1470:	ret

0000000000001474 <deregister_tm_clones>:
    1474:	stp	x29, x30, [sp, #-32]!
    1478:	mov	x29, sp
    147c:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1480:	add	x0, x0, #0x178
    1484:	str	x0, [sp, #24]
    1488:	ldr	x0, [sp, #24]
    148c:	str	x0, [sp, #24]
    1490:	ldr	x1, [sp, #24]
    1494:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1498:	add	x0, x0, #0x178
    149c:	cmp	x1, x0
    14a0:	b.eq	14d8 <deregister_tm_clones+0x64>  // b.none
    14a4:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    14a8:	ldr	x0, [x0, #4024]
    14ac:	str	x0, [sp, #16]
    14b0:	ldr	x0, [sp, #16]
    14b4:	str	x0, [sp, #16]
    14b8:	ldr	x0, [sp, #16]
    14bc:	cmp	x0, #0x0
    14c0:	b.eq	14dc <deregister_tm_clones+0x68>  // b.none
    14c4:	ldr	x1, [sp, #16]
    14c8:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    14cc:	add	x0, x0, #0x178
    14d0:	blr	x1
    14d4:	b	14dc <deregister_tm_clones+0x68>
    14d8:	nop
    14dc:	ldp	x29, x30, [sp], #32
    14e0:	ret

00000000000014e4 <register_tm_clones>:
    14e4:	stp	x29, x30, [sp, #-48]!
    14e8:	mov	x29, sp
    14ec:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    14f0:	add	x0, x0, #0x178
    14f4:	str	x0, [sp, #40]
    14f8:	ldr	x0, [sp, #40]
    14fc:	str	x0, [sp, #40]
    1500:	ldr	x1, [sp, #40]
    1504:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1508:	add	x0, x0, #0x178
    150c:	sub	x0, x1, x0
    1510:	asr	x0, x0, #3
    1514:	lsr	x1, x0, #63
    1518:	add	x0, x1, x0
    151c:	asr	x0, x0, #1
    1520:	str	x0, [sp, #32]
    1524:	ldr	x0, [sp, #32]
    1528:	cmp	x0, #0x0
    152c:	b.eq	1568 <register_tm_clones+0x84>  // b.none
    1530:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1534:	ldr	x0, [x0, #4064]
    1538:	str	x0, [sp, #24]
    153c:	ldr	x0, [sp, #24]
    1540:	str	x0, [sp, #24]
    1544:	ldr	x0, [sp, #24]
    1548:	cmp	x0, #0x0
    154c:	b.eq	156c <register_tm_clones+0x88>  // b.none
    1550:	ldr	x2, [sp, #24]
    1554:	ldr	x1, [sp, #32]
    1558:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    155c:	add	x0, x0, #0x178
    1560:	blr	x2
    1564:	b	156c <register_tm_clones+0x88>
    1568:	nop
    156c:	ldp	x29, x30, [sp], #48
    1570:	ret

0000000000001574 <__do_global_dtors_aux>:
    1574:	stp	x29, x30, [sp, #-16]!
    1578:	mov	x29, sp
    157c:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1580:	add	x0, x0, #0x174
    1584:	ldrb	w0, [x0]
    1588:	and	x0, x0, #0xff
    158c:	cmp	x0, #0x0
    1590:	b.ne	15cc <__do_global_dtors_aux+0x58>  // b.any
    1594:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1598:	ldr	x0, [x0, #4032]
    159c:	cmp	x0, #0x0
    15a0:	b.eq	15b4 <__do_global_dtors_aux+0x40>  // b.none
    15a4:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    15a8:	add	x0, x0, #0x168
    15ac:	ldr	x0, [x0]
    15b0:	bl	11e0 <__cxa_finalize@plt>
    15b4:	bl	1474 <deregister_tm_clones>
    15b8:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    15bc:	add	x0, x0, #0x174
    15c0:	mov	w1, #0x1                   	// #1
    15c4:	strb	w1, [x0]
    15c8:	b	15d0 <__do_global_dtors_aux+0x5c>
    15cc:	nop
    15d0:	ldp	x29, x30, [sp], #16
    15d4:	ret

00000000000015d8 <frame_dummy>:
    15d8:	stp	x29, x30, [sp, #-16]!
    15dc:	mov	x29, sp
    15e0:	bl	14e4 <register_tm_clones>
    15e4:	nop
    15e8:	ldp	x29, x30, [sp], #16
    15ec:	ret

00000000000015f0 <S_POPMARK>:
    15f0:	sub	sp, sp, #0x10
    15f4:	str	x0, [sp, #8]
    15f8:	ldr	x0, [sp, #8]
    15fc:	ldr	x0, [x0, #120]
    1600:	sub	x2, x0, #0x4
    1604:	ldr	x1, [sp, #8]
    1608:	str	x2, [x1, #120]
    160c:	ldr	w0, [x0]
    1610:	add	sp, sp, #0x10
    1614:	ret

0000000000001618 <S_SvREFCNT_inc>:
    1618:	sub	sp, sp, #0x10
    161c:	str	x0, [sp, #8]
    1620:	ldr	x0, [sp, #8]
    1624:	cmp	x0, #0x0
    1628:	cset	w0, ne  // ne = any
    162c:	and	w0, w0, #0xff
    1630:	and	x0, x0, #0xff
    1634:	cmp	x0, #0x0
    1638:	b.eq	1650 <S_SvREFCNT_inc+0x38>  // b.none
    163c:	ldr	x0, [sp, #8]
    1640:	ldr	w0, [x0, #8]
    1644:	add	w1, w0, #0x1
    1648:	ldr	x0, [sp, #8]
    164c:	str	w1, [x0, #8]
    1650:	ldr	x0, [sp, #8]
    1654:	add	sp, sp, #0x10
    1658:	ret

000000000000165c <S_croak_memory_wrap>:
    165c:	stp	x29, x30, [sp, #-16]!
    1660:	mov	x29, sp
    1664:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1668:	ldr	x1, [x0, #4056]
    166c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1670:	add	x0, x0, #0x958
    1674:	bl	1310 <Perl_croak_nocontext@plt>

0000000000001678 <op_names_init>:
    1678:	stp	x29, x30, [sp, #-112]!
    167c:	mov	x29, sp
    1680:	stp	x19, x20, [sp, #16]
    1684:	str	x0, [sp, #40]
    1688:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    168c:	ldr	x0, [x0, #4048]
    1690:	ldr	x1, [x0]
    1694:	str	x1, [sp, #104]
    1698:	mov	x1, #0x0                   	// #0
    169c:	ldr	x0, [sp, #40]
    16a0:	ldr	x1, [x0, #3032]
    16a4:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    16a8:	add	x0, x0, #0x170
    16ac:	ldr	w0, [x0]
    16b0:	sxtw	x0, w0
    16b4:	lsl	x0, x0, #3
    16b8:	add	x0, x1, x0
    16bc:	ldr	x0, [x0]
    16c0:	str	x0, [sp, #64]
    16c4:	mov	w1, #0xc                   	// #12
    16c8:	ldr	x0, [sp, #40]
    16cc:	bl	13c0 <Perl_newSV_type@plt>
    16d0:	str	x0, [sp, #72]
    16d4:	ldr	x1, [sp, #72]
    16d8:	ldr	x0, [sp, #64]
    16dc:	str	x1, [x0]
    16e0:	ldr	x0, [sp, #40]
    16e4:	bl	1330 <Perl_get_op_names@plt>
    16e8:	str	x0, [sp, #80]
    16ec:	str	wzr, [sp, #52]
    16f0:	b	177c <op_names_init+0x104>
    16f4:	ldrsw	x0, [sp, #52]
    16f8:	mov	x1, x0
    16fc:	ldr	x0, [sp, #40]
    1700:	bl	1420 <Perl_newSViv@plt>
    1704:	str	x0, [sp, #96]
    1708:	ldr	x0, [sp, #96]
    170c:	ldr	w0, [x0, #12]
    1710:	orr	w1, w0, #0x8000000
    1714:	ldr	x0, [sp, #96]
    1718:	str	w1, [x0, #12]
    171c:	ldr	x0, [sp, #64]
    1720:	ldr	x19, [x0]
    1724:	ldrsw	x0, [sp, #52]
    1728:	lsl	x0, x0, #3
    172c:	ldr	x1, [sp, #80]
    1730:	add	x0, x1, x0
    1734:	ldr	x20, [x0]
    1738:	ldrsw	x0, [sp, #52]
    173c:	lsl	x0, x0, #3
    1740:	ldr	x1, [sp, #80]
    1744:	add	x0, x1, x0
    1748:	ldr	x0, [x0]
    174c:	bl	11c0 <strlen@plt>
    1750:	mov	w6, #0x0                   	// #0
    1754:	ldr	x5, [sp, #96]
    1758:	mov	w4, #0x24                  	// #36
    175c:	mov	w3, w0
    1760:	mov	x2, x20
    1764:	mov	x1, x19
    1768:	ldr	x0, [sp, #40]
    176c:	bl	13b0 <Perl_hv_common_key_len@plt>
    1770:	ldr	w0, [sp, #52]
    1774:	add	w0, w0, #0x1
    1778:	str	w0, [sp, #52]
    177c:	ldr	w0, [sp, #52]
    1780:	cmp	w0, #0x18c
    1784:	b.le	16f4 <op_names_init+0x7c>
    1788:	mov	x1, #0x0                   	// #0
    178c:	ldr	x0, [sp, #40]
    1790:	bl	1ad4 <new_opset>
    1794:	mov	x1, x0
    1798:	ldr	x0, [sp, #40]
    179c:	bl	1370 <Perl_sv_2mortal@plt>
    17a0:	mov	x3, x0
    17a4:	mov	x2, #0x5                   	// #5
    17a8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    17ac:	add	x1, x0, #0x960
    17b0:	ldr	x0, [sp, #40]
    17b4:	bl	18b8 <put_op_bitspec>
    17b8:	mov	x1, #0x0                   	// #0
    17bc:	ldr	x0, [sp, #40]
    17c0:	bl	1ad4 <new_opset>
    17c4:	mov	x1, x0
    17c8:	ldr	x0, [sp, #64]
    17cc:	str	x1, [x0, #8]
    17d0:	ldr	x0, [sp, #64]
    17d4:	ldr	x0, [x0, #8]
    17d8:	ldr	w1, [x0, #12]
    17dc:	mov	w0, #0x400                 	// #1024
    17e0:	movk	w0, #0x20, lsl #16
    17e4:	and	w0, w1, w0
    17e8:	cmp	w0, #0x400
    17ec:	b.ne	1814 <op_names_init+0x19c>  // b.any
    17f0:	ldr	x0, [sp, #64]
    17f4:	ldr	x0, [x0, #8]
    17f8:	ldr	x0, [x0]
    17fc:	ldr	x0, [x0, #16]
    1800:	str	x0, [sp, #56]
    1804:	ldr	x0, [sp, #64]
    1808:	ldr	x0, [x0, #8]
    180c:	ldr	x0, [x0, #16]
    1810:	b	1834 <op_names_init+0x1bc>
    1814:	ldr	x0, [sp, #64]
    1818:	ldr	x0, [x0, #8]
    181c:	add	x1, sp, #0x38
    1820:	mov	w3, #0x2                   	// #2
    1824:	mov	x2, x1
    1828:	mov	x1, x0
    182c:	ldr	x0, [sp, #40]
    1830:	bl	1240 <Perl_sv_2pv_flags@plt>
    1834:	str	x0, [sp, #88]
    1838:	ldr	x0, [sp, #56]
    183c:	sub	x0, x0, #0x1
    1840:	mov	x2, x0
    1844:	mov	w1, #0xff                  	// #255
    1848:	ldr	x0, [sp, #88]
    184c:	bl	1230 <memset@plt>
    1850:	ldr	x0, [sp, #56]
    1854:	sub	x0, x0, #0x1
    1858:	ldr	x1, [sp, #88]
    185c:	add	x0, x1, x0
    1860:	mov	w1, #0x1f                  	// #31
    1864:	strb	w1, [x0]
    1868:	ldr	x0, [sp, #64]
    186c:	ldr	x0, [x0, #8]
    1870:	mov	x3, x0
    1874:	mov	x2, #0x4                   	// #4
    1878:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    187c:	add	x1, x0, #0x968
    1880:	ldr	x0, [sp, #40]
    1884:	bl	18b8 <put_op_bitspec>
    1888:	nop
    188c:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1890:	ldr	x0, [x0, #4048]
    1894:	ldr	x1, [sp, #104]
    1898:	ldr	x0, [x0]
    189c:	eor	x0, x1, x0
    18a0:	cmp	x0, #0x0
    18a4:	b.eq	18ac <op_names_init+0x234>  // b.none
    18a8:	bl	1280 <__stack_chk_fail@plt>
    18ac:	ldp	x19, x20, [sp, #16]
    18b0:	ldp	x29, x30, [sp], #112
    18b4:	ret

00000000000018b8 <put_op_bitspec>:
    18b8:	stp	x29, x30, [sp, #-64]!
    18bc:	mov	x29, sp
    18c0:	str	x0, [sp, #40]
    18c4:	str	x1, [sp, #32]
    18c8:	str	x2, [sp, #24]
    18cc:	str	x3, [sp, #16]
    18d0:	ldr	x0, [sp, #40]
    18d4:	ldr	x1, [x0, #3032]
    18d8:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    18dc:	add	x0, x0, #0x170
    18e0:	ldr	w0, [x0]
    18e4:	sxtw	x0, w0
    18e8:	lsl	x0, x0, #3
    18ec:	add	x0, x1, x0
    18f0:	ldr	x0, [x0]
    18f4:	str	x0, [sp, #48]
    18f8:	mov	w2, #0x1                   	// #1
    18fc:	ldr	x1, [sp, #16]
    1900:	ldr	x0, [sp, #40]
    1904:	bl	1bd0 <verify_opset>
    1908:	ldr	x0, [sp, #48]
    190c:	ldr	x0, [x0]
    1910:	ldr	x1, [sp, #24]
    1914:	mov	w6, #0x0                   	// #0
    1918:	mov	x5, #0x0                   	// #0
    191c:	mov	w4, #0x30                  	// #48
    1920:	mov	w3, w1
    1924:	ldr	x2, [sp, #32]
    1928:	mov	x1, x0
    192c:	ldr	x0, [sp, #40]
    1930:	bl	13b0 <Perl_hv_common_key_len@plt>
    1934:	str	x0, [sp, #56]
    1938:	ldr	x0, [sp, #56]
    193c:	ldr	x0, [x0]
    1940:	ldr	w0, [x0, #12]
    1944:	and	w0, w0, #0xff00
    1948:	cmp	w0, #0x0
    194c:	b.eq	1960 <put_op_bitspec+0xa8>  // b.none
    1950:	ldr	x1, [sp, #32]
    1954:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1958:	add	x0, x0, #0x970
    195c:	bl	1310 <Perl_croak_nocontext@plt>
    1960:	ldr	x0, [sp, #56]
    1964:	ldr	x0, [x0]
    1968:	mov	w3, #0x2                   	// #2
    196c:	ldr	x2, [sp, #16]
    1970:	mov	x1, x0
    1974:	ldr	x0, [sp, #40]
    1978:	bl	1350 <Perl_sv_setsv_flags@plt>
    197c:	ldr	x0, [sp, #56]
    1980:	ldr	x0, [x0]
    1984:	ldr	w1, [x0, #12]
    1988:	ldr	x0, [sp, #56]
    198c:	ldr	x0, [x0]
    1990:	orr	w1, w1, #0x8000000
    1994:	str	w1, [x0, #12]
    1998:	nop
    199c:	ldp	x29, x30, [sp], #64
    19a0:	ret

00000000000019a4 <get_op_bitspec>:
    19a4:	stp	x29, x30, [sp, #-64]!
    19a8:	mov	x29, sp
    19ac:	str	x0, [sp, #40]
    19b0:	str	x1, [sp, #32]
    19b4:	str	x2, [sp, #24]
    19b8:	str	w3, [sp, #20]
    19bc:	ldr	x0, [sp, #40]
    19c0:	ldr	x1, [x0, #3032]
    19c4:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    19c8:	add	x0, x0, #0x170
    19cc:	ldr	w0, [x0]
    19d0:	sxtw	x0, w0
    19d4:	lsl	x0, x0, #3
    19d8:	add	x0, x1, x0
    19dc:	ldr	x0, [x0]
    19e0:	str	x0, [sp, #48]
    19e4:	ldr	x0, [sp, #48]
    19e8:	ldr	x0, [x0]
    19ec:	ldr	x1, [sp, #24]
    19f0:	mov	w6, #0x0                   	// #0
    19f4:	mov	x5, #0x0                   	// #0
    19f8:	mov	w4, #0x20                  	// #32
    19fc:	mov	w3, w1
    1a00:	ldr	x2, [sp, #32]
    1a04:	mov	x1, x0
    1a08:	ldr	x0, [sp, #40]
    1a0c:	bl	13b0 <Perl_hv_common_key_len@plt>
    1a10:	str	x0, [sp, #56]
    1a14:	ldr	x0, [sp, #56]
    1a18:	cmp	x0, #0x0
    1a1c:	b.eq	1a38 <get_op_bitspec+0x94>  // b.none
    1a20:	ldr	x0, [sp, #56]
    1a24:	ldr	x0, [x0]
    1a28:	ldr	w0, [x0, #12]
    1a2c:	and	w0, w0, #0xff00
    1a30:	cmp	w0, #0x0
    1a34:	b.ne	1ac4 <get_op_bitspec+0x120>  // b.any
    1a38:	ldr	w0, [sp, #20]
    1a3c:	cmp	w0, #0x0
    1a40:	b.ne	1a4c <get_op_bitspec+0xa8>  // b.any
    1a44:	mov	x0, #0x0                   	// #0
    1a48:	b	1acc <get_op_bitspec+0x128>
    1a4c:	ldr	x0, [sp, #32]
    1a50:	ldrb	w0, [x0]
    1a54:	cmp	w0, #0x3a
    1a58:	b.ne	1a6c <get_op_bitspec+0xc8>  // b.any
    1a5c:	ldr	x1, [sp, #32]
    1a60:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1a64:	add	x0, x0, #0x990
    1a68:	bl	1310 <Perl_croak_nocontext@plt>
    1a6c:	ldr	x0, [sp, #32]
    1a70:	ldrb	w0, [x0]
    1a74:	cmp	w0, #0x21
    1a78:	b.ne	1a8c <get_op_bitspec+0xe8>  // b.any
    1a7c:	ldr	x1, [sp, #32]
    1a80:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1a84:	add	x0, x0, #0x9b0
    1a88:	bl	1310 <Perl_croak_nocontext@plt>
    1a8c:	ldr	x0, [sp, #32]
    1a90:	ldrb	w0, [x0]
    1a94:	and	w0, w0, #0xffffffdf
    1a98:	sub	w0, w0, #0x41
    1a9c:	cmp	w0, #0x19
    1aa0:	b.hi	1ab4 <get_op_bitspec+0x110>  // b.pmore
    1aa4:	ldr	x1, [sp, #32]
    1aa8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1aac:	add	x0, x0, #0x9d8
    1ab0:	bl	1310 <Perl_croak_nocontext@plt>
    1ab4:	ldr	x1, [sp, #32]
    1ab8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1abc:	add	x0, x0, #0x9f8
    1ac0:	bl	1310 <Perl_croak_nocontext@plt>
    1ac4:	ldr	x0, [sp, #56]
    1ac8:	ldr	x0, [x0]
    1acc:	ldp	x29, x30, [sp], #64
    1ad0:	ret

0000000000001ad4 <new_opset>:
    1ad4:	stp	x29, x30, [sp, #-48]!
    1ad8:	mov	x29, sp
    1adc:	str	x0, [sp, #24]
    1ae0:	str	x1, [sp, #16]
    1ae4:	ldr	x0, [sp, #24]
    1ae8:	ldr	x1, [x0, #3032]
    1aec:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1af0:	add	x0, x0, #0x170
    1af4:	ldr	w0, [x0]
    1af8:	sxtw	x0, w0
    1afc:	lsl	x0, x0, #3
    1b00:	add	x0, x1, x0
    1b04:	ldr	x0, [x0]
    1b08:	str	x0, [sp, #40]
    1b0c:	ldr	x0, [sp, #16]
    1b10:	cmp	x0, #0x0
    1b14:	b.eq	1b40 <new_opset+0x6c>  // b.none
    1b18:	mov	w2, #0x1                   	// #1
    1b1c:	ldr	x1, [sp, #16]
    1b20:	ldr	x0, [sp, #24]
    1b24:	bl	1bd0 <verify_opset>
    1b28:	mov	w2, #0x12                  	// #18
    1b2c:	ldr	x1, [sp, #16]
    1b30:	ldr	x0, [sp, #24]
    1b34:	bl	1440 <Perl_newSVsv_flags@plt>
    1b38:	str	x0, [sp, #32]
    1b3c:	b	1bc4 <new_opset+0xf0>
    1b40:	ldr	x0, [sp, #40]
    1b44:	ldr	x0, [x0, #16]
    1b48:	mov	x1, x0
    1b4c:	ldr	x0, [sp, #24]
    1b50:	bl	1210 <Perl_newSV@plt>
    1b54:	str	x0, [sp, #32]
    1b58:	ldr	x0, [sp, #32]
    1b5c:	ldr	x3, [x0, #16]
    1b60:	ldr	x0, [sp, #40]
    1b64:	ldr	x0, [x0, #16]
    1b68:	add	x0, x0, #0x1
    1b6c:	mov	x2, x0
    1b70:	mov	w1, #0x0                   	// #0
    1b74:	mov	x0, x3
    1b78:	bl	1230 <memset@plt>
    1b7c:	ldr	x0, [sp, #40]
    1b80:	ldr	x1, [x0, #16]
    1b84:	ldr	x0, [sp, #32]
    1b88:	ldr	x0, [x0]
    1b8c:	str	x1, [x0, #16]
    1b90:	ldr	x0, [sp, #32]
    1b94:	ldr	w1, [x0, #12]
    1b98:	mov	w0, #0xff                  	// #255
    1b9c:	movk	w0, #0x5fff, lsl #16
    1ba0:	and	w1, w1, w0
    1ba4:	ldr	x0, [sp, #32]
    1ba8:	str	w1, [x0, #12]
    1bac:	ldr	x0, [sp, #32]
    1bb0:	ldr	w1, [x0, #12]
    1bb4:	mov	w0, #0x4400                	// #17408
    1bb8:	orr	w1, w1, w0
    1bbc:	ldr	x0, [sp, #32]
    1bc0:	str	w1, [x0, #12]
    1bc4:	ldr	x0, [sp, #32]
    1bc8:	ldp	x29, x30, [sp], #48
    1bcc:	ret

0000000000001bd0 <verify_opset>:
    1bd0:	stp	x29, x30, [sp, #-64]!
    1bd4:	mov	x29, sp
    1bd8:	str	x0, [sp, #40]
    1bdc:	str	x1, [sp, #32]
    1be0:	str	w2, [sp, #28]
    1be4:	str	xzr, [sp, #48]
    1be8:	ldr	x0, [sp, #40]
    1bec:	ldr	x1, [x0, #3032]
    1bf0:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1bf4:	add	x0, x0, #0x170
    1bf8:	ldr	w0, [x0]
    1bfc:	sxtw	x0, w0
    1c00:	lsl	x0, x0, #3
    1c04:	add	x0, x1, x0
    1c08:	ldr	x0, [x0]
    1c0c:	str	x0, [sp, #56]
    1c10:	ldr	x0, [sp, #32]
    1c14:	ldr	w0, [x0, #12]
    1c18:	and	w0, w0, #0xff00
    1c1c:	cmp	w0, #0x0
    1c20:	b.ne	1c34 <verify_opset+0x64>  // b.any
    1c24:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1c28:	add	x0, x0, #0xa18
    1c2c:	str	x0, [sp, #48]
    1c30:	b	1c80 <verify_opset+0xb0>
    1c34:	ldr	x0, [sp, #32]
    1c38:	ldr	w0, [x0, #12]
    1c3c:	and	w0, w0, #0x400
    1c40:	cmp	w0, #0x0
    1c44:	b.ne	1c58 <verify_opset+0x88>  // b.any
    1c48:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1c4c:	add	x0, x0, #0xa28
    1c50:	str	x0, [sp, #48]
    1c54:	b	1c80 <verify_opset+0xb0>
    1c58:	ldr	x0, [sp, #32]
    1c5c:	ldr	x0, [x0]
    1c60:	ldr	x0, [x0, #16]
    1c64:	ldr	x1, [sp, #56]
    1c68:	ldr	x1, [x1, #16]
    1c6c:	cmp	x0, x1
    1c70:	b.eq	1c80 <verify_opset+0xb0>  // b.none
    1c74:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1c78:	add	x0, x0, #0xa38
    1c7c:	str	x0, [sp, #48]
    1c80:	ldr	x0, [sp, #48]
    1c84:	cmp	x0, #0x0
    1c88:	b.eq	1ca8 <verify_opset+0xd8>  // b.none
    1c8c:	ldr	w0, [sp, #28]
    1c90:	cmp	w0, #0x0
    1c94:	b.eq	1ca8 <verify_opset+0xd8>  // b.none
    1c98:	ldr	x1, [sp, #48]
    1c9c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1ca0:	add	x0, x0, #0xa48
    1ca4:	bl	1310 <Perl_croak_nocontext@plt>
    1ca8:	ldr	x0, [sp, #48]
    1cac:	cmp	x0, #0x0
    1cb0:	cset	w0, eq  // eq = none
    1cb4:	and	w0, w0, #0xff
    1cb8:	ldp	x29, x30, [sp], #64
    1cbc:	ret

0000000000001cc0 <set_opset_bits>:
    1cc0:	stp	x29, x30, [sp, #-112]!
    1cc4:	mov	x29, sp
    1cc8:	str	x0, [sp, #56]
    1ccc:	str	x1, [sp, #48]
    1cd0:	str	x2, [sp, #40]
    1cd4:	str	w3, [sp, #36]
    1cd8:	str	x4, [sp, #24]
    1cdc:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1ce0:	ldr	x0, [x0, #4048]
    1ce4:	ldr	x1, [x0]
    1ce8:	str	x1, [sp, #104]
    1cec:	mov	x1, #0x0                   	// #0
    1cf0:	ldr	x0, [sp, #56]
    1cf4:	ldr	x1, [x0, #3032]
    1cf8:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    1cfc:	add	x0, x0, #0x170
    1d00:	ldr	w0, [x0]
    1d04:	sxtw	x0, w0
    1d08:	lsl	x0, x0, #3
    1d0c:	add	x0, x1, x0
    1d10:	ldr	x0, [x0]
    1d14:	str	x0, [sp, #88]
    1d18:	ldr	x0, [sp, #40]
    1d1c:	ldr	w0, [x0, #12]
    1d20:	and	w0, w0, #0x100
    1d24:	cmp	w0, #0x0
    1d28:	b.eq	1e4c <set_opset_bits+0x18c>  // b.none
    1d2c:	ldr	x0, [sp, #40]
    1d30:	ldr	w1, [x0, #12]
    1d34:	mov	w0, #0x100                 	// #256
    1d38:	movk	w0, #0x20, lsl #16
    1d3c:	and	w0, w1, w0
    1d40:	cmp	w0, #0x100
    1d44:	b.ne	1d58 <set_opset_bits+0x98>  // b.any
    1d48:	ldr	x0, [sp, #40]
    1d4c:	ldr	x0, [x0]
    1d50:	ldr	x0, [x0, #32]
    1d54:	b	1d68 <set_opset_bits+0xa8>
    1d58:	mov	w2, #0x2                   	// #2
    1d5c:	ldr	x1, [sp, #40]
    1d60:	ldr	x0, [sp, #56]
    1d64:	bl	11b0 <Perl_sv_2iv_flags@plt>
    1d68:	str	w0, [sp, #68]
    1d6c:	ldr	w0, [sp, #68]
    1d70:	asr	w0, w0, #3
    1d74:	str	w0, [sp, #72]
    1d78:	ldr	w0, [sp, #68]
    1d7c:	and	w0, w0, #0x7
    1d80:	str	w0, [sp, #76]
    1d84:	ldr	w0, [sp, #68]
    1d88:	cmp	w0, #0x18c
    1d8c:	b.gt	1d9c <set_opset_bits+0xdc>
    1d90:	ldr	w0, [sp, #68]
    1d94:	cmp	w0, #0x0
    1d98:	b.ge	1db0 <set_opset_bits+0xf0>  // b.tcont
    1d9c:	ldr	w2, [sp, #68]
    1da0:	ldr	x1, [sp, #24]
    1da4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1da8:	add	x0, x0, #0xa60
    1dac:	bl	1310 <Perl_croak_nocontext@plt>
    1db0:	ldr	w0, [sp, #36]
    1db4:	cmp	w0, #0x0
    1db8:	b.eq	1e00 <set_opset_bits+0x140>  // b.none
    1dbc:	ldrsw	x0, [sp, #72]
    1dc0:	ldr	x1, [sp, #48]
    1dc4:	add	x0, x1, x0
    1dc8:	ldrb	w0, [x0]
    1dcc:	sxtb	w1, w0
    1dd0:	ldr	w0, [sp, #76]
    1dd4:	mov	w2, #0x1                   	// #1
    1dd8:	lsl	w0, w2, w0
    1ddc:	sxtb	w0, w0
    1de0:	orr	w0, w1, w0
    1de4:	sxtb	w2, w0
    1de8:	ldrsw	x0, [sp, #72]
    1dec:	ldr	x1, [sp, #48]
    1df0:	add	x0, x1, x0
    1df4:	and	w1, w2, #0xff
    1df8:	strb	w1, [x0]
    1dfc:	b	1fb4 <set_opset_bits+0x2f4>
    1e00:	ldrsw	x0, [sp, #72]
    1e04:	ldr	x1, [sp, #48]
    1e08:	add	x0, x1, x0
    1e0c:	ldrb	w0, [x0]
    1e10:	sxtb	w1, w0
    1e14:	ldr	w0, [sp, #76]
    1e18:	mov	w2, #0x1                   	// #1
    1e1c:	lsl	w0, w2, w0
    1e20:	sxtb	w0, w0
    1e24:	mvn	w0, w0
    1e28:	sxtb	w0, w0
    1e2c:	and	w0, w1, w0
    1e30:	sxtb	w2, w0
    1e34:	ldrsw	x0, [sp, #72]
    1e38:	ldr	x1, [sp, #48]
    1e3c:	add	x0, x1, x0
    1e40:	and	w1, w2, #0xff
    1e44:	strb	w1, [x0]
    1e48:	b	1fb4 <set_opset_bits+0x2f4>
    1e4c:	ldr	x0, [sp, #40]
    1e50:	ldr	w0, [x0, #12]
    1e54:	and	w0, w0, #0x400
    1e58:	cmp	w0, #0x0
    1e5c:	b.eq	1f94 <set_opset_bits+0x2d4>  // b.none
    1e60:	ldr	x0, [sp, #40]
    1e64:	ldr	x0, [x0]
    1e68:	ldr	x0, [x0, #16]
    1e6c:	ldr	x1, [sp, #88]
    1e70:	ldr	x1, [x1, #16]
    1e74:	cmp	x0, x1
    1e78:	b.ne	1f94 <set_opset_bits+0x2d4>  // b.any
    1e7c:	ldr	x0, [sp, #40]
    1e80:	ldr	w1, [x0, #12]
    1e84:	mov	w0, #0x400                 	// #1024
    1e88:	movk	w0, #0x20, lsl #16
    1e8c:	and	w0, w1, w0
    1e90:	cmp	w0, #0x400
    1e94:	b.ne	1eb4 <set_opset_bits+0x1f4>  // b.any
    1e98:	ldr	x0, [sp, #40]
    1e9c:	ldr	x0, [x0]
    1ea0:	ldr	x0, [x0, #16]
    1ea4:	str	x0, [sp, #80]
    1ea8:	ldr	x0, [sp, #40]
    1eac:	ldr	x0, [x0, #16]
    1eb0:	b	1ecc <set_opset_bits+0x20c>
    1eb4:	add	x0, sp, #0x50
    1eb8:	mov	w3, #0x2                   	// #2
    1ebc:	mov	x2, x0
    1ec0:	ldr	x1, [sp, #40]
    1ec4:	ldr	x0, [sp, #56]
    1ec8:	bl	1240 <Perl_sv_2pv_flags@plt>
    1ecc:	str	x0, [sp, #96]
    1ed0:	ldr	w0, [sp, #36]
    1ed4:	cmp	w0, #0x0
    1ed8:	b.eq	1f7c <set_opset_bits+0x2bc>  // b.none
    1edc:	b	1f18 <set_opset_bits+0x258>
    1ee0:	ldr	x0, [sp, #80]
    1ee4:	ldr	x1, [sp, #48]
    1ee8:	add	x0, x1, x0
    1eec:	ldrb	w2, [x0]
    1ef0:	ldr	x0, [sp, #80]
    1ef4:	ldr	x1, [sp, #96]
    1ef8:	add	x0, x1, x0
    1efc:	ldrb	w1, [x0]
    1f00:	ldr	x0, [sp, #80]
    1f04:	ldr	x3, [sp, #48]
    1f08:	add	x0, x3, x0
    1f0c:	orr	w1, w2, w1
    1f10:	and	w1, w1, #0xff
    1f14:	strb	w1, [x0]
    1f18:	ldr	x0, [sp, #80]
    1f1c:	sub	x1, x0, #0x1
    1f20:	str	x1, [sp, #80]
    1f24:	cmp	x0, #0x0
    1f28:	b.ne	1ee0 <set_opset_bits+0x220>  // b.any
    1f2c:	b	1fb4 <set_opset_bits+0x2f4>
    1f30:	ldr	x0, [sp, #80]
    1f34:	ldr	x1, [sp, #48]
    1f38:	add	x0, x1, x0
    1f3c:	ldrb	w0, [x0]
    1f40:	sxtb	w1, w0
    1f44:	ldr	x0, [sp, #80]
    1f48:	ldr	x2, [sp, #96]
    1f4c:	add	x0, x2, x0
    1f50:	ldrb	w0, [x0]
    1f54:	sxtb	w0, w0
    1f58:	mvn	w0, w0
    1f5c:	sxtb	w0, w0
    1f60:	and	w0, w1, w0
    1f64:	sxtb	w2, w0
    1f68:	ldr	x0, [sp, #80]
    1f6c:	ldr	x1, [sp, #48]
    1f70:	add	x0, x1, x0
    1f74:	and	w1, w2, #0xff
    1f78:	strb	w1, [x0]
    1f7c:	ldr	x0, [sp, #80]
    1f80:	sub	x1, x0, #0x1
    1f84:	str	x1, [sp, #80]
    1f88:	cmp	x0, #0x0
    1f8c:	b.ne	1f30 <set_opset_bits+0x270>  // b.any
    1f90:	b	1fb4 <set_opset_bits+0x2f4>
    1f94:	ldr	x0, [sp, #40]
    1f98:	ldr	w0, [x0, #12]
    1f9c:	and	w0, w0, #0xff
    1fa0:	mov	w2, w0
    1fa4:	ldr	x1, [sp, #24]
    1fa8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    1fac:	add	x0, x0, #0xa88
    1fb0:	bl	1310 <Perl_croak_nocontext@plt>
    1fb4:	nop
    1fb8:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1fbc:	ldr	x0, [x0, #4048]
    1fc0:	ldr	x1, [sp, #104]
    1fc4:	ldr	x0, [x0]
    1fc8:	eor	x0, x1, x0
    1fcc:	cmp	x0, #0x0
    1fd0:	b.eq	1fd8 <set_opset_bits+0x318>  // b.none
    1fd4:	bl	1280 <__stack_chk_fail@plt>
    1fd8:	ldp	x29, x30, [sp], #112
    1fdc:	ret

0000000000001fe0 <opmask_add>:
    1fe0:	stp	x29, x30, [sp, #-80]!
    1fe4:	mov	x29, sp
    1fe8:	str	x0, [sp, #24]
    1fec:	str	x1, [sp, #16]
    1ff0:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    1ff4:	ldr	x0, [x0, #4048]
    1ff8:	ldr	x1, [x0]
    1ffc:	str	x1, [sp, #72]
    2000:	mov	x1, #0x0                   	// #0
    2004:	str	wzr, [sp, #44]
    2008:	ldr	x0, [sp, #24]
    200c:	ldr	x1, [x0, #3032]
    2010:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    2014:	add	x0, x0, #0x170
    2018:	ldr	w0, [x0]
    201c:	sxtw	x0, w0
    2020:	lsl	x0, x0, #3
    2024:	add	x0, x1, x0
    2028:	ldr	x0, [x0]
    202c:	str	x0, [sp, #56]
    2030:	mov	w2, #0x1                   	// #1
    2034:	ldr	x1, [sp, #16]
    2038:	ldr	x0, [sp, #24]
    203c:	bl	1bd0 <verify_opset>
    2040:	ldr	x0, [sp, #24]
    2044:	ldr	x0, [x0, #1904]
    2048:	cmp	x0, #0x0
    204c:	b.ne	205c <opmask_add+0x7c>  // b.any
    2050:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    2054:	add	x0, x0, #0xab8
    2058:	bl	1310 <Perl_croak_nocontext@plt>
    205c:	ldr	x0, [sp, #16]
    2060:	ldr	w1, [x0, #12]
    2064:	mov	w0, #0x400                 	// #1024
    2068:	movk	w0, #0x20, lsl #16
    206c:	and	w0, w1, w0
    2070:	cmp	w0, #0x400
    2074:	b.ne	2094 <opmask_add+0xb4>  // b.any
    2078:	ldr	x0, [sp, #16]
    207c:	ldr	x0, [x0]
    2080:	ldr	x0, [x0, #16]
    2084:	str	x0, [sp, #48]
    2088:	ldr	x0, [sp, #16]
    208c:	ldr	x0, [x0, #16]
    2090:	b	20ac <opmask_add+0xcc>
    2094:	add	x0, sp, #0x30
    2098:	mov	w3, #0x2                   	// #2
    209c:	mov	x2, x0
    20a0:	ldr	x1, [sp, #16]
    20a4:	ldr	x0, [sp, #24]
    20a8:	bl	1240 <Perl_sv_2pv_flags@plt>
    20ac:	str	x0, [sp, #64]
    20b0:	str	wzr, [sp, #36]
    20b4:	b	2178 <opmask_add+0x198>
    20b8:	ldrsw	x0, [sp, #36]
    20bc:	ldr	x1, [sp, #64]
    20c0:	add	x0, x1, x0
    20c4:	ldrb	w0, [x0]
    20c8:	strh	w0, [sp, #34]
    20cc:	ldrh	w0, [sp, #34]
    20d0:	cmp	w0, #0x0
    20d4:	b.ne	20e8 <opmask_add+0x108>  // b.any
    20d8:	ldr	w0, [sp, #44]
    20dc:	add	w0, w0, #0x8
    20e0:	str	w0, [sp, #44]
    20e4:	b	216c <opmask_add+0x18c>
    20e8:	str	wzr, [sp, #40]
    20ec:	b	2154 <opmask_add+0x174>
    20f0:	ldrh	w1, [sp, #34]
    20f4:	ldr	w0, [sp, #40]
    20f8:	add	w2, w0, #0x1
    20fc:	str	w2, [sp, #40]
    2100:	mov	w2, #0x1                   	// #1
    2104:	lsl	w0, w2, w0
    2108:	and	w3, w1, w0
    210c:	ldr	x0, [sp, #24]
    2110:	ldr	x2, [x0, #1904]
    2114:	ldr	w0, [sp, #44]
    2118:	add	w1, w0, #0x1
    211c:	str	w1, [sp, #44]
    2120:	sxtw	x1, w0
    2124:	add	x1, x2, x1
    2128:	ldrb	w1, [x1]
    212c:	sxtb	w2, w1
    2130:	sxtb	w1, w3
    2134:	orr	w1, w2, w1
    2138:	sxtb	w2, w1
    213c:	ldr	x1, [sp, #24]
    2140:	ldr	x1, [x1, #1904]
    2144:	sxtw	x0, w0
    2148:	add	x0, x1, x0
    214c:	and	w1, w2, #0xff
    2150:	strb	w1, [x0]
    2154:	ldr	w0, [sp, #40]
    2158:	cmp	w0, #0x7
    215c:	b.gt	216c <opmask_add+0x18c>
    2160:	ldr	w0, [sp, #44]
    2164:	cmp	w0, #0x18c
    2168:	b.le	20f0 <opmask_add+0x110>
    216c:	ldr	w0, [sp, #36]
    2170:	add	w0, w0, #0x1
    2174:	str	w0, [sp, #36]
    2178:	ldrsw	x1, [sp, #36]
    217c:	ldr	x0, [sp, #56]
    2180:	ldr	x0, [x0, #16]
    2184:	cmp	x1, x0
    2188:	b.lt	20b8 <opmask_add+0xd8>  // b.tstop
    218c:	nop
    2190:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    2194:	ldr	x0, [x0, #4048]
    2198:	ldr	x1, [sp, #72]
    219c:	ldr	x0, [x0]
    21a0:	eor	x0, x1, x0
    21a4:	cmp	x0, #0x0
    21a8:	b.eq	21b0 <opmask_add+0x1d0>  // b.none
    21ac:	bl	1280 <__stack_chk_fail@plt>
    21b0:	ldp	x29, x30, [sp], #80
    21b4:	ret

00000000000021b8 <opmask_addlocal>:
    21b8:	stp	x29, x30, [sp, #-64]!
    21bc:	mov	x29, sp
    21c0:	str	x0, [sp, #40]
    21c4:	str	x1, [sp, #32]
    21c8:	str	x2, [sp, #24]
    21cc:	ldr	x0, [sp, #40]
    21d0:	ldr	x0, [x0, #1904]
    21d4:	str	x0, [sp, #56]
    21d8:	ldr	x0, [sp, #40]
    21dc:	add	x0, x0, #0x770
    21e0:	mov	x1, x0
    21e4:	ldr	x0, [sp, #40]
    21e8:	bl	13e0 <Perl_save_vptr@plt>
    21ec:	ldr	x0, [sp, #40]
    21f0:	ldr	x1, [sp, #24]
    21f4:	str	x1, [x0, #1904]
    21f8:	ldr	x0, [sp, #56]
    21fc:	cmp	x0, #0x0
    2200:	b.eq	221c <opmask_addlocal+0x64>  // b.none
    2204:	ldr	x0, [sp, #40]
    2208:	ldr	x0, [x0, #1904]
    220c:	mov	x2, #0x18d                 	// #397
    2210:	ldr	x1, [sp, #56]
    2214:	bl	1190 <memcpy@plt>
    2218:	b	2230 <opmask_addlocal+0x78>
    221c:	ldr	x0, [sp, #40]
    2220:	ldr	x0, [x0, #1904]
    2224:	mov	x2, #0x18d                 	// #397
    2228:	mov	w1, #0x0                   	// #0
    222c:	bl	1230 <memset@plt>
    2230:	ldr	x1, [sp, #32]
    2234:	ldr	x0, [sp, #40]
    2238:	bl	1fe0 <opmask_add>
    223c:	nop
    2240:	ldp	x29, x30, [sp], #64
    2244:	ret

0000000000002248 <XS_Opcode__safe_pkg_prep>:
    2248:	stp	x29, x30, [sp, #-96]!
    224c:	mov	x29, sp
    2250:	str	x0, [sp, #24]
    2254:	str	x1, [sp, #16]
    2258:	ldr	x0, [sp, #24]
    225c:	ldr	x0, [x0]
    2260:	str	x0, [sp, #48]
    2264:	ldr	x0, [sp, #24]
    2268:	bl	15f0 <S_POPMARK>
    226c:	str	w0, [sp, #40]
    2270:	ldr	x0, [sp, #24]
    2274:	ldr	x1, [x0, #24]
    2278:	ldr	w0, [sp, #40]
    227c:	add	w2, w0, #0x1
    2280:	str	w2, [sp, #40]
    2284:	sxtw	x0, w0
    2288:	lsl	x0, x0, #3
    228c:	add	x0, x1, x0
    2290:	str	x0, [sp, #56]
    2294:	ldr	x1, [sp, #48]
    2298:	ldr	x0, [sp, #56]
    229c:	sub	x0, x1, x0
    22a0:	asr	x0, x0, #3
    22a4:	str	w0, [sp, #44]
    22a8:	ldr	w0, [sp, #44]
    22ac:	cmp	w0, #0x1
    22b0:	b.eq	22c4 <XS_Opcode__safe_pkg_prep+0x7c>  // b.none
    22b4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    22b8:	add	x1, x0, #0xae0
    22bc:	ldr	x0, [sp, #16]
    22c0:	bl	12a0 <Perl_croak_xs_usage@plt>
    22c4:	ldrsw	x0, [sp, #44]
    22c8:	lsl	x0, x0, #3
    22cc:	neg	x0, x0
    22d0:	ldr	x1, [sp, #48]
    22d4:	add	x0, x1, x0
    22d8:	str	x0, [sp, #48]
    22dc:	ldr	x0, [sp, #24]
    22e0:	ldr	x1, [x0, #24]
    22e4:	ldrsw	x0, [sp, #40]
    22e8:	lsl	x0, x0, #3
    22ec:	add	x0, x1, x0
    22f0:	ldr	x0, [x0]
    22f4:	str	x0, [sp, #64]
    22f8:	ldr	x0, [sp, #24]
    22fc:	bl	1410 <Perl_push_scope@plt>
    2300:	mov	w2, #0x4                   	// #4
    2304:	ldr	x1, [sp, #64]
    2308:	ldr	x0, [sp, #24]
    230c:	bl	1320 <Perl_gv_stashsv@plt>
    2310:	str	x0, [sp, #72]
    2314:	ldr	x0, [sp, #72]
    2318:	ldr	w0, [x0, #12]
    231c:	and	w0, w0, #0x2000000
    2320:	cmp	w0, #0x0
    2324:	b.eq	2464 <XS_Opcode__safe_pkg_prep+0x21c>  // b.none
    2328:	ldr	x0, [sp, #72]
    232c:	ldr	x1, [x0, #16]
    2330:	ldr	x0, [sp, #72]
    2334:	ldr	x0, [x0]
    2338:	ldr	x0, [x0, #24]
    233c:	add	x0, x0, #0x1
    2340:	lsl	x0, x0, #3
    2344:	add	x0, x1, x0
    2348:	ldr	x0, [x0]
    234c:	cmp	x0, #0x0
    2350:	b.eq	2464 <XS_Opcode__safe_pkg_prep+0x21c>  // b.none
    2354:	ldr	x0, [sp, #72]
    2358:	ldr	x1, [x0, #16]
    235c:	ldr	x0, [sp, #72]
    2360:	ldr	x0, [x0]
    2364:	ldr	x0, [x0, #24]
    2368:	add	x0, x0, #0x1
    236c:	lsl	x0, x0, #3
    2370:	add	x0, x1, x0
    2374:	ldr	w0, [x0, #28]
    2378:	cmp	w0, #0x0
    237c:	b.eq	23b4 <XS_Opcode__safe_pkg_prep+0x16c>  // b.none
    2380:	ldr	x0, [sp, #72]
    2384:	ldr	x1, [x0, #16]
    2388:	ldr	x0, [sp, #72]
    238c:	ldr	x0, [x0]
    2390:	ldr	x0, [x0, #24]
    2394:	add	x0, x0, #0x1
    2398:	lsl	x0, x0, #3
    239c:	add	x0, x1, x0
    23a0:	ldr	x0, [x0]
    23a4:	ldr	x0, [x0]
    23a8:	cmp	x0, #0x0
    23ac:	b.ne	23e0 <XS_Opcode__safe_pkg_prep+0x198>  // b.any
    23b0:	b	2464 <XS_Opcode__safe_pkg_prep+0x21c>
    23b4:	ldr	x0, [sp, #72]
    23b8:	ldr	x1, [x0, #16]
    23bc:	ldr	x0, [sp, #72]
    23c0:	ldr	x0, [x0]
    23c4:	ldr	x0, [x0, #24]
    23c8:	add	x0, x0, #0x1
    23cc:	lsl	x0, x0, #3
    23d0:	add	x0, x1, x0
    23d4:	ldr	x0, [x0]
    23d8:	cmp	x0, #0x0
    23dc:	b.eq	2464 <XS_Opcode__safe_pkg_prep+0x21c>  // b.none
    23e0:	ldr	x0, [sp, #72]
    23e4:	ldr	x1, [x0, #16]
    23e8:	ldr	x0, [sp, #72]
    23ec:	ldr	x0, [x0]
    23f0:	ldr	x0, [x0, #24]
    23f4:	add	x0, x0, #0x1
    23f8:	lsl	x0, x0, #3
    23fc:	add	x0, x1, x0
    2400:	ldr	w0, [x0, #28]
    2404:	cmp	w0, #0x0
    2408:	b.eq	2438 <XS_Opcode__safe_pkg_prep+0x1f0>  // b.none
    240c:	ldr	x0, [sp, #72]
    2410:	ldr	x1, [x0, #16]
    2414:	ldr	x0, [sp, #72]
    2418:	ldr	x0, [x0]
    241c:	ldr	x0, [x0, #24]
    2420:	add	x0, x0, #0x1
    2424:	lsl	x0, x0, #3
    2428:	add	x0, x1, x0
    242c:	ldr	x0, [x0]
    2430:	ldr	x0, [x0]
    2434:	b	245c <XS_Opcode__safe_pkg_prep+0x214>
    2438:	ldr	x0, [sp, #72]
    243c:	ldr	x1, [x0, #16]
    2440:	ldr	x0, [sp, #72]
    2444:	ldr	x0, [x0]
    2448:	ldr	x0, [x0, #24]
    244c:	add	x0, x0, #0x1
    2450:	lsl	x0, x0, #3
    2454:	add	x0, x1, x0
    2458:	ldr	x0, [x0]
    245c:	add	x0, x0, #0x8
    2460:	b	2468 <XS_Opcode__safe_pkg_prep+0x220>
    2464:	mov	x0, #0x0                   	// #0
    2468:	str	x0, [sp, #80]
    246c:	ldr	x0, [sp, #80]
    2470:	cmp	x0, #0x0
    2474:	b.eq	2490 <XS_Opcode__safe_pkg_prep+0x248>  // b.none
    2478:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    247c:	add	x1, x0, #0xae8
    2480:	ldr	x0, [sp, #80]
    2484:	bl	12d0 <strcmp@plt>
    2488:	cmp	w0, #0x0
    248c:	b.eq	24ec <XS_Opcode__safe_pkg_prep+0x2a4>  // b.none
    2490:	mov	w4, #0x0                   	// #0
    2494:	mov	w3, #0x4                   	// #4
    2498:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    249c:	add	x2, x0, #0xae8
    24a0:	ldr	x1, [sp, #72]
    24a4:	ldr	x0, [sp, #24]
    24a8:	bl	1260 <Perl_hv_name_set@plt>
    24ac:	ldr	x0, [sp, #24]
    24b0:	ldr	x0, [x0, #192]
    24b4:	mov	w6, #0x0                   	// #0
    24b8:	mov	x5, x0
    24bc:	mov	w4, #0x24                  	// #36
    24c0:	mov	w3, #0x1                   	// #1
    24c4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    24c8:	add	x2, x0, #0xaf0
    24cc:	ldr	x1, [sp, #72]
    24d0:	ldr	x0, [sp, #24]
    24d4:	bl	13b0 <Perl_hv_common_key_len@plt>
    24d8:	ldr	x0, [sp, #24]
    24dc:	ldr	x0, [x0, #192]
    24e0:	str	x0, [sp, #88]
    24e4:	ldr	x0, [sp, #88]
    24e8:	bl	1618 <S_SvREFCNT_inc>
    24ec:	ldr	x0, [sp, #24]
    24f0:	bl	11f0 <Perl_pop_scope@plt>
    24f4:	ldr	x0, [sp, #24]
    24f8:	ldr	x1, [sp, #48]
    24fc:	str	x1, [x0]
    2500:	nop
    2504:	ldp	x29, x30, [sp], #96
    2508:	ret

000000000000250c <XS_Opcode__safe_call_sv>:
    250c:	sub	sp, sp, #0x2a0
    2510:	stp	x29, x30, [sp]
    2514:	mov	x29, sp
    2518:	str	x19, [sp, #16]
    251c:	str	x0, [sp, #40]
    2520:	str	x1, [sp, #32]
    2524:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    2528:	ldr	x0, [x0, #4048]
    252c:	ldr	x1, [x0]
    2530:	str	x1, [sp, #664]
    2534:	mov	x1, #0x0                   	// #0
    2538:	ldr	x0, [sp, #40]
    253c:	ldr	x0, [x0]
    2540:	str	x0, [sp, #72]
    2544:	ldr	x0, [sp, #40]
    2548:	bl	15f0 <S_POPMARK>
    254c:	str	w0, [sp, #56]
    2550:	ldr	x0, [sp, #40]
    2554:	ldr	x1, [x0, #24]
    2558:	ldr	w0, [sp, #56]
    255c:	add	w2, w0, #0x1
    2560:	str	w2, [sp, #56]
    2564:	sxtw	x0, w0
    2568:	lsl	x0, x0, #3
    256c:	add	x0, x1, x0
    2570:	str	x0, [sp, #80]
    2574:	ldr	x1, [sp, #72]
    2578:	ldr	x0, [sp, #80]
    257c:	sub	x0, x1, x0
    2580:	asr	x0, x0, #3
    2584:	str	w0, [sp, #60]
    2588:	ldr	w0, [sp, #60]
    258c:	cmp	w0, #0x3
    2590:	b.eq	25a4 <XS_Opcode__safe_call_sv+0x98>  // b.none
    2594:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    2598:	add	x1, x0, #0xaf8
    259c:	ldr	x0, [sp, #32]
    25a0:	bl	12a0 <Perl_croak_xs_usage@plt>
    25a4:	ldrsw	x0, [sp, #60]
    25a8:	lsl	x0, x0, #3
    25ac:	neg	x0, x0
    25b0:	ldr	x1, [sp, #72]
    25b4:	add	x0, x1, x0
    25b8:	str	x0, [sp, #72]
    25bc:	ldr	x0, [sp, #40]
    25c0:	ldr	x1, [x0, #24]
    25c4:	ldrsw	x0, [sp, #56]
    25c8:	lsl	x0, x0, #3
    25cc:	add	x0, x1, x0
    25d0:	ldr	x0, [x0]
    25d4:	str	x0, [sp, #88]
    25d8:	ldr	x0, [sp, #40]
    25dc:	ldr	x1, [x0, #24]
    25e0:	ldrsw	x0, [sp, #56]
    25e4:	add	x0, x0, #0x1
    25e8:	lsl	x0, x0, #3
    25ec:	add	x0, x1, x0
    25f0:	ldr	x0, [x0]
    25f4:	str	x0, [sp, #96]
    25f8:	ldr	x0, [sp, #40]
    25fc:	ldr	x1, [x0, #24]
    2600:	ldrsw	x0, [sp, #56]
    2604:	add	x0, x0, #0x2
    2608:	lsl	x0, x0, #3
    260c:	add	x0, x1, x0
    2610:	ldr	x0, [x0]
    2614:	str	x0, [sp, #104]
    2618:	ldr	x0, [sp, #40]
    261c:	bl	1410 <Perl_push_scope@plt>
    2620:	add	x0, sp, #0xa0
    2624:	mov	x2, x0
    2628:	ldr	x1, [sp, #96]
    262c:	ldr	x0, [sp, #40]
    2630:	bl	21b8 <opmask_addlocal>
    2634:	ldr	x0, [sp, #40]
    2638:	add	x0, x0, #0x748
    263c:	mov	x1, x0
    2640:	ldr	x0, [sp, #40]
    2644:	bl	1380 <Perl_save_aptr@plt>
    2648:	mov	w1, #0xb                   	// #11
    264c:	ldr	x0, [sp, #40]
    2650:	bl	13c0 <Perl_newSV_type@plt>
    2654:	str	x0, [sp, #112]
    2658:	ldr	x0, [sp, #112]
    265c:	mov	x1, x0
    2660:	ldr	x0, [sp, #40]
    2664:	bl	1370 <Perl_sv_2mortal@plt>
    2668:	mov	x1, x0
    266c:	ldr	x0, [sp, #40]
    2670:	str	x1, [x0, #1864]
    2674:	ldr	x0, [sp, #40]
    2678:	add	x0, x0, #0xd0
    267c:	mov	x1, x0
    2680:	ldr	x0, [sp, #40]
    2684:	bl	12f0 <Perl_save_hptr@plt>
    2688:	mov	w2, #0x4                   	// #4
    268c:	ldr	x1, [sp, #88]
    2690:	ldr	x0, [sp, #40]
    2694:	bl	1320 <Perl_gv_stashsv@plt>
    2698:	mov	x1, x0
    269c:	ldr	x0, [sp, #40]
    26a0:	str	x1, [x0, #208]
    26a4:	ldr	x0, [sp, #40]
    26a8:	add	x0, x0, #0xd8
    26ac:	mov	x1, x0
    26b0:	ldr	x0, [sp, #40]
    26b4:	bl	1300 <Perl_save_generic_svref@plt>
    26b8:	ldr	x0, [sp, #40]
    26bc:	ldr	x0, [x0, #208]
    26c0:	str	x0, [sp, #120]
    26c4:	ldr	x0, [sp, #120]
    26c8:	bl	1618 <S_SvREFCNT_inc>
    26cc:	mov	x1, x0
    26d0:	ldr	x0, [sp, #40]
    26d4:	str	x1, [x0, #216]
    26d8:	mov	w4, #0xc                   	// #12
    26dc:	mov	w3, #0x4                   	// #4
    26e0:	mov	x2, #0x6                   	// #6
    26e4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    26e8:	add	x1, x0, #0xb10
    26ec:	ldr	x0, [sp, #40]
    26f0:	bl	12c0 <Perl_gv_fetchpvn_flags@plt>
    26f4:	str	x0, [sp, #128]
    26f8:	ldr	x0, [sp, #128]
    26fc:	ldr	x0, [x0, #16]
    2700:	ldr	x0, [x0, #32]
    2704:	mov	x1, x0
    2708:	ldr	x0, [sp, #40]
    270c:	bl	11a0 <Perl_sv_free@plt>
    2710:	ldr	x0, [sp, #40]
    2714:	ldr	x0, [x0, #208]
    2718:	str	x0, [sp, #136]
    271c:	ldr	x1, [sp, #136]
    2720:	ldr	x0, [sp, #128]
    2724:	ldr	x19, [x0, #16]
    2728:	mov	x0, x1
    272c:	bl	1618 <S_SvREFCNT_inc>
    2730:	str	x0, [x19, #32]
    2734:	ldr	x0, [sp, #40]
    2738:	ldr	x0, [x0, #1568]
    273c:	mov	x1, x0
    2740:	ldr	x0, [sp, #40]
    2744:	bl	1270 <Perl_save_hash@plt>
    2748:	str	x0, [sp, #144]
    274c:	mov	w4, #0xc                   	// #12
    2750:	mov	w3, #0x1                   	// #1
    2754:	mov	x2, #0x3                   	// #3
    2758:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    275c:	add	x1, x0, #0xb18
    2760:	ldr	x0, [sp, #40]
    2764:	bl	12c0 <Perl_gv_fetchpvn_flags@plt>
    2768:	mov	w2, #0xc                   	// #12
    276c:	mov	x1, x0
    2770:	ldr	x0, [sp, #40]
    2774:	bl	1430 <Perl_gv_add_by_type@plt>
    2778:	ldr	x0, [x0, #16]
    277c:	ldr	x0, [x0, #32]
    2780:	str	x0, [sp, #152]
    2784:	ldr	x1, [sp, #152]
    2788:	ldr	x0, [sp, #40]
    278c:	ldr	x0, [x0, #1568]
    2790:	ldr	x19, [x0, #16]
    2794:	mov	x0, x1
    2798:	bl	1618 <S_SvREFCNT_inc>
    279c:	str	x0, [x19, #32]
    27a0:	ldr	x0, [sp, #40]
    27a4:	ldr	w0, [x0, #104]
    27a8:	add	w1, w0, #0x1
    27ac:	ldr	x0, [sp, #40]
    27b0:	str	w1, [x0, #104]
    27b4:	ldr	x0, [sp, #40]
    27b8:	ldr	x0, [x0, #520]
    27bc:	mov	x1, x0
    27c0:	ldr	x0, [sp, #40]
    27c4:	bl	1400 <Perl_hv_clear@plt>
    27c8:	ldr	x0, [sp, #40]
    27cc:	ldr	x0, [x0, #120]
    27d0:	add	x1, x0, #0x4
    27d4:	ldr	x0, [sp, #40]
    27d8:	str	x1, [x0, #120]
    27dc:	ldr	x0, [sp, #40]
    27e0:	ldr	x0, [x0, #120]
    27e4:	str	x0, [sp, #64]
    27e8:	ldr	x0, [sp, #40]
    27ec:	ldr	x0, [x0, #128]
    27f0:	ldr	x1, [sp, #64]
    27f4:	cmp	x1, x0
    27f8:	cset	w0, eq  // eq = none
    27fc:	and	w0, w0, #0xff
    2800:	and	x0, x0, #0xff
    2804:	cmp	x0, #0x0
    2808:	b.eq	2818 <XS_Opcode__safe_call_sv+0x30c>  // b.none
    280c:	ldr	x0, [sp, #40]
    2810:	bl	13a0 <Perl_markstack_grow@plt>
    2814:	str	x0, [sp, #64]
    2818:	ldr	x0, [sp, #40]
    281c:	ldr	x0, [x0, #24]
    2820:	ldr	x1, [sp, #72]
    2824:	sub	x0, x1, x0
    2828:	asr	x0, x0, #3
    282c:	mov	w1, w0
    2830:	ldr	x0, [sp, #64]
    2834:	str	w1, [x0]
    2838:	ldr	x0, [sp, #40]
    283c:	ldr	x0, [x0, #8]
    2840:	ldrb	w0, [x0, #34]
    2844:	and	w0, w0, #0x3
    2848:	cmp	w0, #0x0
    284c:	b.eq	286c <XS_Opcode__safe_call_sv+0x360>  // b.none
    2850:	ldr	x0, [sp, #40]
    2854:	ldr	x0, [x0, #8]
    2858:	ldrb	w0, [x0, #34]
    285c:	and	w1, w0, #0x3
    2860:	mov	w0, #0x28                  	// #40
    2864:	orr	w0, w1, w0
    2868:	b	2884 <XS_Opcode__safe_call_sv+0x378>
    286c:	ldr	x0, [sp, #40]
    2870:	bl	13d0 <Perl_block_gimme@plt>
    2874:	and	w1, w0, #0xff
    2878:	mov	w0, #0x28                  	// #40
    287c:	orr	w0, w1, w0
    2880:	and	w0, w0, #0xff
    2884:	mov	w2, w0
    2888:	ldr	x1, [sp, #104]
    288c:	ldr	x0, [sp, #40]
    2890:	bl	13f0 <Perl_call_sv@plt>
    2894:	ldr	x1, [sp, #144]
    2898:	ldr	x0, [sp, #40]
    289c:	bl	11a0 <Perl_sv_free@plt>
    28a0:	ldr	x0, [sp, #40]
    28a4:	ldr	x0, [x0]
    28a8:	str	x0, [sp, #72]
    28ac:	ldr	x0, [sp, #40]
    28b0:	bl	11f0 <Perl_pop_scope@plt>
    28b4:	ldr	x0, [sp, #40]
    28b8:	ldr	w0, [x0, #104]
    28bc:	add	w1, w0, #0x1
    28c0:	ldr	x0, [sp, #40]
    28c4:	str	w1, [x0, #104]
    28c8:	ldr	x0, [sp, #40]
    28cc:	ldr	x0, [x0, #520]
    28d0:	mov	x1, x0
    28d4:	ldr	x0, [sp, #40]
    28d8:	bl	1400 <Perl_hv_clear@plt>
    28dc:	ldr	x0, [sp, #40]
    28e0:	ldr	x1, [sp, #72]
    28e4:	str	x1, [x0]
    28e8:	nop
    28ec:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    28f0:	ldr	x0, [x0, #4048]
    28f4:	ldr	x1, [sp, #664]
    28f8:	ldr	x0, [x0]
    28fc:	eor	x0, x1, x0
    2900:	cmp	x0, #0x0
    2904:	b.eq	290c <XS_Opcode__safe_call_sv+0x400>  // b.none
    2908:	bl	1280 <__stack_chk_fail@plt>
    290c:	ldr	x19, [sp, #16]
    2910:	ldp	x29, x30, [sp]
    2914:	add	sp, sp, #0x2a0
    2918:	ret

000000000000291c <XS_Opcode_verify_opset>:
    291c:	stp	x29, x30, [sp, #-96]!
    2920:	mov	x29, sp
    2924:	str	x0, [sp, #24]
    2928:	str	x1, [sp, #16]
    292c:	ldr	x0, [sp, #24]
    2930:	ldr	x0, [x0]
    2934:	str	x0, [sp, #48]
    2938:	ldr	x0, [sp, #24]
    293c:	bl	15f0 <S_POPMARK>
    2940:	str	w0, [sp, #36]
    2944:	ldr	x0, [sp, #24]
    2948:	ldr	x1, [x0, #24]
    294c:	ldr	w0, [sp, #36]
    2950:	add	w2, w0, #0x1
    2954:	str	w2, [sp, #36]
    2958:	sxtw	x0, w0
    295c:	lsl	x0, x0, #3
    2960:	add	x0, x1, x0
    2964:	str	x0, [sp, #56]
    2968:	ldr	x1, [sp, #48]
    296c:	ldr	x0, [sp, #56]
    2970:	sub	x0, x1, x0
    2974:	asr	x0, x0, #3
    2978:	str	w0, [sp, #40]
    297c:	ldr	w0, [sp, #40]
    2980:	cmp	w0, #0x0
    2984:	b.le	2994 <XS_Opcode_verify_opset+0x78>
    2988:	ldr	w0, [sp, #40]
    298c:	cmp	w0, #0x2
    2990:	b.le	29a4 <XS_Opcode_verify_opset+0x88>
    2994:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    2998:	add	x1, x0, #0xb20
    299c:	ldr	x0, [sp, #16]
    29a0:	bl	12a0 <Perl_croak_xs_usage@plt>
    29a4:	ldr	x0, [sp, #24]
    29a8:	ldr	x1, [x0, #24]
    29ac:	ldrsw	x0, [sp, #36]
    29b0:	lsl	x0, x0, #3
    29b4:	add	x0, x1, x0
    29b8:	ldr	x0, [x0]
    29bc:	str	x0, [sp, #64]
    29c0:	ldr	x0, [sp, #24]
    29c4:	ldr	x0, [x0, #8]
    29c8:	ldrb	w0, [x0, #35]
    29cc:	and	w0, w0, #0x4
    29d0:	cmp	w0, #0x0
    29d4:	b.eq	29fc <XS_Opcode_verify_opset+0xe0>  // b.none
    29d8:	ldr	x0, [sp, #24]
    29dc:	ldr	x1, [x0, #16]
    29e0:	ldr	x0, [sp, #24]
    29e4:	ldr	x0, [x0, #8]
    29e8:	ldr	x0, [x0, #24]
    29ec:	lsl	x0, x0, #3
    29f0:	add	x0, x1, x0
    29f4:	ldr	x0, [x0]
    29f8:	b	2a04 <XS_Opcode_verify_opset+0xe8>
    29fc:	ldr	x0, [sp, #24]
    2a00:	bl	1450 <Perl_sv_newmortal@plt>
    2a04:	str	x0, [sp, #72]
    2a08:	ldr	w0, [sp, #40]
    2a0c:	cmp	w0, #0x1
    2a10:	b.gt	2a1c <XS_Opcode_verify_opset+0x100>
    2a14:	str	wzr, [sp, #32]
    2a18:	b	2aa8 <XS_Opcode_verify_opset+0x18c>
    2a1c:	ldr	x0, [sp, #24]
    2a20:	ldr	x1, [x0, #24]
    2a24:	ldrsw	x0, [sp, #36]
    2a28:	add	x0, x0, #0x1
    2a2c:	lsl	x0, x0, #3
    2a30:	add	x0, x1, x0
    2a34:	ldr	x0, [x0]
    2a38:	ldr	w1, [x0, #12]
    2a3c:	mov	w0, #0x100                 	// #256
    2a40:	movk	w0, #0x20, lsl #16
    2a44:	and	w0, w1, w0
    2a48:	cmp	w0, #0x100
    2a4c:	b.ne	2a78 <XS_Opcode_verify_opset+0x15c>  // b.any
    2a50:	ldr	x0, [sp, #24]
    2a54:	ldr	x1, [x0, #24]
    2a58:	ldrsw	x0, [sp, #36]
    2a5c:	add	x0, x0, #0x1
    2a60:	lsl	x0, x0, #3
    2a64:	add	x0, x1, x0
    2a68:	ldr	x0, [x0]
    2a6c:	ldr	x0, [x0]
    2a70:	ldr	x0, [x0, #32]
    2a74:	b	2aa4 <XS_Opcode_verify_opset+0x188>
    2a78:	ldr	x0, [sp, #24]
    2a7c:	ldr	x1, [x0, #24]
    2a80:	ldrsw	x0, [sp, #36]
    2a84:	add	x0, x0, #0x1
    2a88:	lsl	x0, x0, #3
    2a8c:	add	x0, x1, x0
    2a90:	ldr	x0, [x0]
    2a94:	mov	w2, #0x2                   	// #2
    2a98:	mov	x1, x0
    2a9c:	ldr	x0, [sp, #24]
    2aa0:	bl	11b0 <Perl_sv_2iv_flags@plt>
    2aa4:	str	w0, [sp, #32]
    2aa8:	ldr	w2, [sp, #32]
    2aac:	ldr	x1, [sp, #64]
    2ab0:	ldr	x0, [sp, #24]
    2ab4:	bl	1bd0 <verify_opset>
    2ab8:	str	w0, [sp, #44]
    2abc:	ldr	x0, [sp, #24]
    2ac0:	ldr	x1, [x0, #24]
    2ac4:	ldrsw	x0, [sp, #36]
    2ac8:	lsl	x0, x0, #3
    2acc:	sub	x0, x0, #0x8
    2ad0:	add	x0, x1, x0
    2ad4:	str	x0, [sp, #48]
    2ad8:	ldrsw	x0, [sp, #44]
    2adc:	str	x0, [sp, #80]
    2ae0:	ldr	x0, [sp, #72]
    2ae4:	ldr	w1, [x0, #12]
    2ae8:	mov	w0, #0x8ff                 	// #2303
    2aec:	movk	w0, #0x9981, lsl #16
    2af0:	and	w0, w1, w0
    2af4:	cmp	w0, #0x1
    2af8:	cset	w0, eq  // eq = none
    2afc:	and	w0, w0, #0xff
    2b00:	mov	w1, w0
    2b04:	ldr	x0, [sp, #24]
    2b08:	ldrb	w0, [x0, #185]
    2b0c:	eor	w0, w0, #0x1
    2b10:	and	w0, w0, #0xff
    2b14:	and	w0, w1, w0
    2b18:	cmp	w0, #0x0
    2b1c:	cset	w0, ne  // ne = any
    2b20:	and	w0, w0, #0xff
    2b24:	and	x0, x0, #0xff
    2b28:	cmp	x0, #0x0
    2b2c:	b.eq	2b58 <XS_Opcode_verify_opset+0x23c>  // b.none
    2b30:	ldr	x0, [sp, #72]
    2b34:	ldr	w1, [x0, #12]
    2b38:	mov	w0, #0x1100                	// #4352
    2b3c:	orr	w1, w1, w0
    2b40:	ldr	x0, [sp, #72]
    2b44:	str	w1, [x0, #12]
    2b48:	ldr	x0, [sp, #72]
    2b4c:	ldr	x1, [sp, #80]
    2b50:	str	x1, [x0, #16]
    2b54:	b	2b68 <XS_Opcode_verify_opset+0x24c>
    2b58:	ldr	x2, [sp, #80]
    2b5c:	ldr	x1, [sp, #72]
    2b60:	ldr	x0, [sp, #24]
    2b64:	bl	1220 <Perl_sv_setiv_mg@plt>
    2b68:	ldr	x0, [sp, #48]
    2b6c:	add	x0, x0, #0x8
    2b70:	str	x0, [sp, #48]
    2b74:	ldr	x0, [sp, #48]
    2b78:	ldr	x1, [sp, #72]
    2b7c:	str	x1, [x0]
    2b80:	mov	x0, #0x1                   	// #1
    2b84:	str	x0, [sp, #88]
    2b88:	ldr	x0, [sp, #24]
    2b8c:	ldr	x1, [x0, #24]
    2b90:	ldrsw	x2, [sp, #36]
    2b94:	ldr	x0, [sp, #88]
    2b98:	add	x0, x2, x0
    2b9c:	lsl	x0, x0, #3
    2ba0:	sub	x0, x0, #0x8
    2ba4:	add	x1, x1, x0
    2ba8:	ldr	x0, [sp, #24]
    2bac:	str	x1, [x0]
    2bb0:	nop
    2bb4:	ldp	x29, x30, [sp], #96
    2bb8:	ret

0000000000002bbc <XS_Opcode_invert_opset>:
    2bbc:	stp	x29, x30, [sp, #-96]!
    2bc0:	mov	x29, sp
    2bc4:	str	x0, [sp, #24]
    2bc8:	str	x1, [sp, #16]
    2bcc:	ldr	x0, [sp, #24]
    2bd0:	ldr	x0, [x0]
    2bd4:	str	x0, [sp, #48]
    2bd8:	ldr	x0, [sp, #24]
    2bdc:	bl	15f0 <S_POPMARK>
    2be0:	str	w0, [sp, #32]
    2be4:	ldr	x0, [sp, #24]
    2be8:	ldr	x1, [x0, #24]
    2bec:	ldr	w0, [sp, #32]
    2bf0:	add	w2, w0, #0x1
    2bf4:	str	w2, [sp, #32]
    2bf8:	sxtw	x0, w0
    2bfc:	lsl	x0, x0, #3
    2c00:	add	x0, x1, x0
    2c04:	str	x0, [sp, #56]
    2c08:	ldr	x1, [sp, #48]
    2c0c:	ldr	x0, [sp, #56]
    2c10:	sub	x0, x1, x0
    2c14:	asr	x0, x0, #3
    2c18:	str	w0, [sp, #36]
    2c1c:	ldr	w0, [sp, #36]
    2c20:	cmp	w0, #0x1
    2c24:	b.eq	2c38 <XS_Opcode_invert_opset+0x7c>  // b.none
    2c28:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    2c2c:	add	x1, x0, #0xb38
    2c30:	ldr	x0, [sp, #16]
    2c34:	bl	12a0 <Perl_croak_xs_usage@plt>
    2c38:	ldr	x0, [sp, #24]
    2c3c:	ldr	x1, [x0, #24]
    2c40:	ldrsw	x0, [sp, #32]
    2c44:	lsl	x0, x0, #3
    2c48:	add	x0, x1, x0
    2c4c:	ldr	x0, [x0]
    2c50:	str	x0, [sp, #64]
    2c54:	ldr	x0, [sp, #24]
    2c58:	ldr	x1, [x0, #3032]
    2c5c:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    2c60:	add	x0, x0, #0x170
    2c64:	ldr	w0, [x0]
    2c68:	sxtw	x0, w0
    2c6c:	lsl	x0, x0, #3
    2c70:	add	x0, x1, x0
    2c74:	ldr	x0, [x0]
    2c78:	str	x0, [sp, #72]
    2c7c:	ldr	x0, [sp, #72]
    2c80:	ldr	x0, [x0, #16]
    2c84:	str	x0, [sp, #40]
    2c88:	ldr	x1, [sp, #64]
    2c8c:	ldr	x0, [sp, #24]
    2c90:	bl	1ad4 <new_opset>
    2c94:	mov	x1, x0
    2c98:	ldr	x0, [sp, #24]
    2c9c:	bl	1370 <Perl_sv_2mortal@plt>
    2ca0:	str	x0, [sp, #64]
    2ca4:	ldr	x0, [sp, #64]
    2ca8:	ldr	x0, [x0, #16]
    2cac:	str	x0, [sp, #80]
    2cb0:	b	2cdc <XS_Opcode_invert_opset+0x120>
    2cb4:	ldr	x1, [sp, #80]
    2cb8:	ldr	x0, [sp, #40]
    2cbc:	add	x0, x1, x0
    2cc0:	ldrb	w1, [x0]
    2cc4:	ldr	x2, [sp, #80]
    2cc8:	ldr	x0, [sp, #40]
    2ccc:	add	x0, x2, x0
    2cd0:	mvn	w1, w1
    2cd4:	and	w1, w1, #0xff
    2cd8:	strb	w1, [x0]
    2cdc:	ldr	x0, [sp, #40]
    2ce0:	sub	x1, x0, #0x1
    2ce4:	str	x1, [sp, #40]
    2ce8:	cmp	x0, #0x0
    2cec:	b.ne	2cb4 <XS_Opcode_invert_opset+0xf8>  // b.any
    2cf0:	ldr	x0, [sp, #72]
    2cf4:	ldr	x0, [x0, #16]
    2cf8:	sub	x0, x0, #0x1
    2cfc:	ldr	x1, [sp, #80]
    2d00:	add	x0, x1, x0
    2d04:	ldrb	w1, [x0]
    2d08:	ldr	x0, [sp, #72]
    2d0c:	ldr	x0, [x0, #16]
    2d10:	sub	x0, x0, #0x1
    2d14:	ldr	x2, [sp, #80]
    2d18:	add	x0, x2, x0
    2d1c:	and	w1, w1, #0x1f
    2d20:	and	w1, w1, #0xff
    2d24:	strb	w1, [x0]
    2d28:	ldr	x0, [sp, #24]
    2d2c:	ldr	x1, [x0, #24]
    2d30:	ldrsw	x0, [sp, #32]
    2d34:	lsl	x0, x0, #3
    2d38:	add	x0, x1, x0
    2d3c:	ldr	x1, [sp, #64]
    2d40:	str	x1, [x0]
    2d44:	mov	x0, #0x1                   	// #1
    2d48:	str	x0, [sp, #88]
    2d4c:	ldr	x0, [sp, #24]
    2d50:	ldr	x1, [x0, #24]
    2d54:	ldrsw	x2, [sp, #32]
    2d58:	ldr	x0, [sp, #88]
    2d5c:	add	x0, x2, x0
    2d60:	lsl	x0, x0, #3
    2d64:	sub	x0, x0, #0x8
    2d68:	add	x1, x1, x0
    2d6c:	ldr	x0, [sp, #24]
    2d70:	str	x1, [x0]
    2d74:	nop
    2d78:	ldp	x29, x30, [sp], #96
    2d7c:	ret

0000000000002d80 <XS_Opcode_opset_to_ops>:
    2d80:	stp	x29, x30, [sp, #-144]!
    2d84:	mov	x29, sp
    2d88:	str	x19, [sp, #16]
    2d8c:	str	x0, [sp, #40]
    2d90:	str	x1, [sp, #32]
    2d94:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    2d98:	ldr	x0, [x0, #4048]
    2d9c:	ldr	x1, [x0]
    2da0:	str	x1, [sp, #136]
    2da4:	mov	x1, #0x0                   	// #0
    2da8:	ldr	x0, [sp, #40]
    2dac:	ldr	x0, [x0]
    2db0:	str	x0, [sp, #88]
    2db4:	ldr	x0, [sp, #40]
    2db8:	bl	15f0 <S_POPMARK>
    2dbc:	str	w0, [sp, #72]
    2dc0:	ldr	x0, [sp, #40]
    2dc4:	ldr	x1, [x0, #24]
    2dc8:	ldr	w0, [sp, #72]
    2dcc:	add	w2, w0, #0x1
    2dd0:	str	w2, [sp, #72]
    2dd4:	sxtw	x0, w0
    2dd8:	lsl	x0, x0, #3
    2ddc:	add	x0, x1, x0
    2de0:	str	x0, [sp, #96]
    2de4:	ldr	x1, [sp, #88]
    2de8:	ldr	x0, [sp, #96]
    2dec:	sub	x0, x1, x0
    2df0:	asr	x0, x0, #3
    2df4:	str	w0, [sp, #76]
    2df8:	ldr	w0, [sp, #76]
    2dfc:	cmp	w0, #0x0
    2e00:	b.le	2e10 <XS_Opcode_opset_to_ops+0x90>
    2e04:	ldr	w0, [sp, #76]
    2e08:	cmp	w0, #0x2
    2e0c:	b.le	2e20 <XS_Opcode_opset_to_ops+0xa0>
    2e10:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    2e14:	add	x1, x0, #0xb40
    2e18:	ldr	x0, [sp, #32]
    2e1c:	bl	12a0 <Perl_croak_xs_usage@plt>
    2e20:	ldrsw	x0, [sp, #76]
    2e24:	lsl	x0, x0, #3
    2e28:	neg	x0, x0
    2e2c:	ldr	x1, [sp, #88]
    2e30:	add	x0, x1, x0
    2e34:	str	x0, [sp, #88]
    2e38:	ldr	x0, [sp, #40]
    2e3c:	ldr	x1, [x0, #24]
    2e40:	ldrsw	x0, [sp, #72]
    2e44:	lsl	x0, x0, #3
    2e48:	add	x0, x1, x0
    2e4c:	ldr	x0, [x0]
    2e50:	str	x0, [sp, #104]
    2e54:	ldr	w0, [sp, #76]
    2e58:	cmp	w0, #0x1
    2e5c:	b.gt	2e68 <XS_Opcode_opset_to_ops+0xe8>
    2e60:	str	wzr, [sp, #56]
    2e64:	b	2ef4 <XS_Opcode_opset_to_ops+0x174>
    2e68:	ldr	x0, [sp, #40]
    2e6c:	ldr	x1, [x0, #24]
    2e70:	ldrsw	x0, [sp, #72]
    2e74:	add	x0, x0, #0x1
    2e78:	lsl	x0, x0, #3
    2e7c:	add	x0, x1, x0
    2e80:	ldr	x0, [x0]
    2e84:	ldr	w1, [x0, #12]
    2e88:	mov	w0, #0x100                 	// #256
    2e8c:	movk	w0, #0x20, lsl #16
    2e90:	and	w0, w1, w0
    2e94:	cmp	w0, #0x100
    2e98:	b.ne	2ec4 <XS_Opcode_opset_to_ops+0x144>  // b.any
    2e9c:	ldr	x0, [sp, #40]
    2ea0:	ldr	x1, [x0, #24]
    2ea4:	ldrsw	x0, [sp, #72]
    2ea8:	add	x0, x0, #0x1
    2eac:	lsl	x0, x0, #3
    2eb0:	add	x0, x1, x0
    2eb4:	ldr	x0, [x0]
    2eb8:	ldr	x0, [x0]
    2ebc:	ldr	x0, [x0, #32]
    2ec0:	b	2ef0 <XS_Opcode_opset_to_ops+0x170>
    2ec4:	ldr	x0, [sp, #40]
    2ec8:	ldr	x1, [x0, #24]
    2ecc:	ldrsw	x0, [sp, #72]
    2ed0:	add	x0, x0, #0x1
    2ed4:	lsl	x0, x0, #3
    2ed8:	add	x0, x1, x0
    2edc:	ldr	x0, [x0]
    2ee0:	mov	w2, #0x2                   	// #2
    2ee4:	mov	x1, x0
    2ee8:	ldr	x0, [sp, #40]
    2eec:	bl	11b0 <Perl_sv_2iv_flags@plt>
    2ef0:	str	w0, [sp, #56]
    2ef4:	ldr	x0, [sp, #104]
    2ef8:	ldr	w1, [x0, #12]
    2efc:	mov	w0, #0x400                 	// #1024
    2f00:	movk	w0, #0x20, lsl #16
    2f04:	and	w0, w1, w0
    2f08:	cmp	w0, #0x400
    2f0c:	b.ne	2f2c <XS_Opcode_opset_to_ops+0x1ac>  // b.any
    2f10:	ldr	x0, [sp, #104]
    2f14:	ldr	x0, [x0]
    2f18:	ldr	x0, [x0, #16]
    2f1c:	str	x0, [sp, #80]
    2f20:	ldr	x0, [sp, #104]
    2f24:	ldr	x0, [x0, #16]
    2f28:	b	2f44 <XS_Opcode_opset_to_ops+0x1c4>
    2f2c:	add	x0, sp, #0x50
    2f30:	mov	w3, #0x2                   	// #2
    2f34:	mov	x2, x0
    2f38:	ldr	x1, [sp, #104]
    2f3c:	ldr	x0, [sp, #40]
    2f40:	bl	1240 <Perl_sv_2pv_flags@plt>
    2f44:	str	x0, [sp, #112]
    2f48:	ldr	w0, [sp, #56]
    2f4c:	cmp	w0, #0x0
    2f50:	b.eq	2f60 <XS_Opcode_opset_to_ops+0x1e0>  // b.none
    2f54:	ldr	x0, [sp, #40]
    2f58:	bl	1340 <Perl_get_op_descs@plt>
    2f5c:	b	2f68 <XS_Opcode_opset_to_ops+0x1e8>
    2f60:	ldr	x0, [sp, #40]
    2f64:	bl	1330 <Perl_get_op_names@plt>
    2f68:	str	x0, [sp, #120]
    2f6c:	ldr	x0, [sp, #40]
    2f70:	ldr	x1, [x0, #3032]
    2f74:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    2f78:	add	x0, x0, #0x170
    2f7c:	ldr	w0, [x0]
    2f80:	sxtw	x0, w0
    2f84:	lsl	x0, x0, #3
    2f88:	add	x0, x1, x0
    2f8c:	ldr	x0, [x0]
    2f90:	str	x0, [sp, #128]
    2f94:	mov	w2, #0x1                   	// #1
    2f98:	ldr	x1, [sp, #104]
    2f9c:	ldr	x0, [sp, #40]
    2fa0:	bl	1bd0 <verify_opset>
    2fa4:	str	wzr, [sp, #68]
    2fa8:	str	wzr, [sp, #60]
    2fac:	b	30bc <XS_Opcode_opset_to_ops+0x33c>
    2fb0:	ldrsw	x0, [sp, #60]
    2fb4:	ldr	x1, [sp, #112]
    2fb8:	add	x0, x1, x0
    2fbc:	ldrb	w0, [x0]
    2fc0:	strh	w0, [sp, #54]
    2fc4:	str	wzr, [sp, #64]
    2fc8:	b	3098 <XS_Opcode_opset_to_ops+0x318>
    2fcc:	ldrh	w1, [sp, #54]
    2fd0:	ldr	w0, [sp, #64]
    2fd4:	asr	w0, w1, w0
    2fd8:	and	w0, w0, #0x1
    2fdc:	cmp	w0, #0x0
    2fe0:	b.eq	3080 <XS_Opcode_opset_to_ops+0x300>  // b.none
    2fe4:	ldr	x0, [sp, #40]
    2fe8:	ldr	x1, [x0, #32]
    2fec:	ldr	x0, [sp, #88]
    2ff0:	sub	x0, x1, x0
    2ff4:	cmp	x0, #0x0
    2ff8:	cset	w0, le
    2ffc:	and	w0, w0, #0xff
    3000:	and	x0, x0, #0xff
    3004:	cmp	x0, #0x0
    3008:	b.eq	3024 <XS_Opcode_opset_to_ops+0x2a4>  // b.none
    300c:	mov	x3, #0x1                   	// #1
    3010:	ldr	x2, [sp, #88]
    3014:	ldr	x1, [sp, #88]
    3018:	ldr	x0, [sp, #40]
    301c:	bl	11d0 <Perl_stack_grow@plt>
    3020:	str	x0, [sp, #88]
    3024:	ldrsw	x0, [sp, #68]
    3028:	lsl	x0, x0, #3
    302c:	ldr	x1, [sp, #120]
    3030:	add	x0, x1, x0
    3034:	ldr	x19, [x0]
    3038:	ldrsw	x0, [sp, #68]
    303c:	lsl	x0, x0, #3
    3040:	ldr	x1, [sp, #120]
    3044:	add	x0, x1, x0
    3048:	ldr	x0, [x0]
    304c:	bl	11c0 <strlen@plt>
    3050:	mov	x1, x0
    3054:	ldr	x0, [sp, #88]
    3058:	add	x0, x0, #0x8
    305c:	str	x0, [sp, #88]
    3060:	mov	w3, #0x80000               	// #524288
    3064:	mov	x2, x1
    3068:	mov	x1, x19
    306c:	ldr	x0, [sp, #40]
    3070:	bl	12b0 <Perl_newSVpvn_flags@plt>
    3074:	mov	x1, x0
    3078:	ldr	x0, [sp, #88]
    307c:	str	x1, [x0]
    3080:	ldr	w0, [sp, #64]
    3084:	add	w0, w0, #0x1
    3088:	str	w0, [sp, #64]
    308c:	ldr	w0, [sp, #68]
    3090:	add	w0, w0, #0x1
    3094:	str	w0, [sp, #68]
    3098:	ldr	w0, [sp, #64]
    309c:	cmp	w0, #0x7
    30a0:	b.gt	30b0 <XS_Opcode_opset_to_ops+0x330>
    30a4:	ldr	w0, [sp, #68]
    30a8:	cmp	w0, #0x18c
    30ac:	b.le	2fcc <XS_Opcode_opset_to_ops+0x24c>
    30b0:	ldr	w0, [sp, #60]
    30b4:	add	w0, w0, #0x1
    30b8:	str	w0, [sp, #60]
    30bc:	ldrsw	x1, [sp, #60]
    30c0:	ldr	x0, [sp, #128]
    30c4:	ldr	x0, [x0, #16]
    30c8:	cmp	x1, x0
    30cc:	b.lt	2fb0 <XS_Opcode_opset_to_ops+0x230>  // b.tstop
    30d0:	ldr	x0, [sp, #40]
    30d4:	ldr	x1, [sp, #88]
    30d8:	str	x1, [x0]
    30dc:	nop
    30e0:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    30e4:	ldr	x0, [x0, #4048]
    30e8:	ldr	x1, [sp, #136]
    30ec:	ldr	x0, [x0]
    30f0:	eor	x0, x1, x0
    30f4:	cmp	x0, #0x0
    30f8:	b.eq	3100 <XS_Opcode_opset_to_ops+0x380>  // b.none
    30fc:	bl	1280 <__stack_chk_fail@plt>
    3100:	ldr	x19, [sp, #16]
    3104:	ldp	x29, x30, [sp], #144
    3108:	ret

000000000000310c <XS_Opcode_opset>:
    310c:	stp	x29, x30, [sp, #-128]!
    3110:	mov	x29, sp
    3114:	str	x0, [sp, #24]
    3118:	str	x1, [sp, #16]
    311c:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3120:	ldr	x0, [x0, #4048]
    3124:	ldr	x1, [x0]
    3128:	str	x1, [sp, #120]
    312c:	mov	x1, #0x0                   	// #0
    3130:	ldr	x0, [sp, #24]
    3134:	ldr	x0, [x0]
    3138:	str	x0, [sp, #80]
    313c:	ldr	x0, [sp, #24]
    3140:	bl	15f0 <S_POPMARK>
    3144:	str	w0, [sp, #40]
    3148:	ldr	x0, [sp, #24]
    314c:	ldr	x1, [x0, #24]
    3150:	ldr	w0, [sp, #40]
    3154:	add	w2, w0, #0x1
    3158:	str	w2, [sp, #40]
    315c:	sxtw	x0, w0
    3160:	lsl	x0, x0, #3
    3164:	add	x0, x1, x0
    3168:	str	x0, [sp, #88]
    316c:	ldr	x1, [sp, #80]
    3170:	ldr	x0, [sp, #88]
    3174:	sub	x0, x1, x0
    3178:	asr	x0, x0, #3
    317c:	str	w0, [sp, #44]
    3180:	mov	x1, #0x0                   	// #0
    3184:	ldr	x0, [sp, #24]
    3188:	bl	1ad4 <new_opset>
    318c:	mov	x1, x0
    3190:	ldr	x0, [sp, #24]
    3194:	bl	1370 <Perl_sv_2mortal@plt>
    3198:	str	x0, [sp, #96]
    319c:	ldr	x0, [sp, #96]
    31a0:	ldr	x0, [x0, #16]
    31a4:	str	x0, [sp, #104]
    31a8:	str	wzr, [sp, #36]
    31ac:	b	3374 <XS_Opcode_opset+0x268>
    31b0:	mov	x0, #0x1                   	// #1
    31b4:	str	x0, [sp, #64]
    31b8:	ldr	x0, [sp, #24]
    31bc:	ldr	x1, [x0, #24]
    31c0:	ldr	w2, [sp, #40]
    31c4:	ldr	w0, [sp, #36]
    31c8:	add	w0, w2, w0
    31cc:	sxtw	x0, w0
    31d0:	lsl	x0, x0, #3
    31d4:	add	x0, x1, x0
    31d8:	ldr	x0, [x0]
    31dc:	mov	w2, #0x0                   	// #0
    31e0:	mov	x1, x0
    31e4:	ldr	x0, [sp, #24]
    31e8:	bl	1bd0 <verify_opset>
    31ec:	cmp	w0, #0x0
    31f0:	b.eq	322c <XS_Opcode_opset+0x120>  // b.none
    31f4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    31f8:	add	x0, x0, #0xb50
    31fc:	str	x0, [sp, #72]
    3200:	ldr	x0, [sp, #24]
    3204:	ldr	x1, [x0, #24]
    3208:	ldr	w2, [sp, #40]
    320c:	ldr	w0, [sp, #36]
    3210:	add	w0, w2, w0
    3214:	sxtw	x0, w0
    3218:	lsl	x0, x0, #3
    321c:	add	x0, x1, x0
    3220:	ldr	x0, [x0]
    3224:	str	x0, [sp, #56]
    3228:	b	334c <XS_Opcode_opset+0x240>
    322c:	ldr	x0, [sp, #24]
    3230:	ldr	x1, [x0, #24]
    3234:	ldr	w2, [sp, #40]
    3238:	ldr	w0, [sp, #36]
    323c:	add	w0, w2, w0
    3240:	sxtw	x0, w0
    3244:	lsl	x0, x0, #3
    3248:	add	x0, x1, x0
    324c:	ldr	x0, [x0]
    3250:	ldr	w1, [x0, #12]
    3254:	mov	w0, #0x400                 	// #1024
    3258:	movk	w0, #0x20, lsl #16
    325c:	and	w0, w1, w0
    3260:	cmp	w0, #0x400
    3264:	b.ne	32c4 <XS_Opcode_opset+0x1b8>  // b.any
    3268:	ldr	x0, [sp, #24]
    326c:	ldr	x1, [x0, #24]
    3270:	ldr	w2, [sp, #40]
    3274:	ldr	w0, [sp, #36]
    3278:	add	w0, w2, w0
    327c:	sxtw	x0, w0
    3280:	lsl	x0, x0, #3
    3284:	add	x0, x1, x0
    3288:	ldr	x0, [x0]
    328c:	ldr	x0, [x0]
    3290:	ldr	x0, [x0, #16]
    3294:	str	x0, [sp, #48]
    3298:	ldr	x0, [sp, #24]
    329c:	ldr	x1, [x0, #24]
    32a0:	ldr	w2, [sp, #40]
    32a4:	ldr	w0, [sp, #36]
    32a8:	add	w0, w2, w0
    32ac:	sxtw	x0, w0
    32b0:	lsl	x0, x0, #3
    32b4:	add	x0, x1, x0
    32b8:	ldr	x0, [x0]
    32bc:	ldr	x0, [x0, #16]
    32c0:	b	3300 <XS_Opcode_opset+0x1f4>
    32c4:	ldr	x0, [sp, #24]
    32c8:	ldr	x1, [x0, #24]
    32cc:	ldr	w2, [sp, #40]
    32d0:	ldr	w0, [sp, #36]
    32d4:	add	w0, w2, w0
    32d8:	sxtw	x0, w0
    32dc:	lsl	x0, x0, #3
    32e0:	add	x0, x1, x0
    32e4:	ldr	x0, [x0]
    32e8:	add	x1, sp, #0x30
    32ec:	mov	w3, #0x2                   	// #2
    32f0:	mov	x2, x1
    32f4:	mov	x1, x0
    32f8:	ldr	x0, [sp, #24]
    32fc:	bl	1240 <Perl_sv_2pv_flags@plt>
    3300:	str	x0, [sp, #72]
    3304:	ldr	x0, [sp, #72]
    3308:	ldrb	w0, [x0]
    330c:	cmp	w0, #0x21
    3310:	b.ne	3330 <XS_Opcode_opset+0x224>  // b.any
    3314:	str	xzr, [sp, #64]
    3318:	ldr	x0, [sp, #72]
    331c:	add	x0, x0, #0x1
    3320:	str	x0, [sp, #72]
    3324:	ldr	x0, [sp, #48]
    3328:	sub	x0, x0, #0x1
    332c:	str	x0, [sp, #48]
    3330:	ldr	x0, [sp, #48]
    3334:	mov	w3, #0x1                   	// #1
    3338:	mov	x2, x0
    333c:	ldr	x1, [sp, #72]
    3340:	ldr	x0, [sp, #24]
    3344:	bl	19a4 <get_op_bitspec>
    3348:	str	x0, [sp, #56]
    334c:	ldr	x0, [sp, #64]
    3350:	ldr	x4, [sp, #72]
    3354:	mov	w3, w0
    3358:	ldr	x2, [sp, #56]
    335c:	ldr	x1, [sp, #104]
    3360:	ldr	x0, [sp, #24]
    3364:	bl	1cc0 <set_opset_bits>
    3368:	ldr	w0, [sp, #36]
    336c:	add	w0, w0, #0x1
    3370:	str	w0, [sp, #36]
    3374:	ldr	w1, [sp, #36]
    3378:	ldr	w0, [sp, #44]
    337c:	cmp	w1, w0
    3380:	b.lt	31b0 <XS_Opcode_opset+0xa4>  // b.tstop
    3384:	ldr	x0, [sp, #24]
    3388:	ldr	x1, [x0, #24]
    338c:	ldrsw	x0, [sp, #40]
    3390:	lsl	x0, x0, #3
    3394:	add	x0, x1, x0
    3398:	ldr	x1, [sp, #96]
    339c:	str	x1, [x0]
    33a0:	mov	x0, #0x1                   	// #1
    33a4:	str	x0, [sp, #112]
    33a8:	ldr	x0, [sp, #24]
    33ac:	ldr	x1, [x0, #24]
    33b0:	ldrsw	x2, [sp, #40]
    33b4:	ldr	x0, [sp, #112]
    33b8:	add	x0, x2, x0
    33bc:	lsl	x0, x0, #3
    33c0:	sub	x0, x0, #0x8
    33c4:	add	x1, x1, x0
    33c8:	ldr	x0, [sp, #24]
    33cc:	str	x1, [x0]
    33d0:	nop
    33d4:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    33d8:	ldr	x0, [x0, #4048]
    33dc:	ldr	x1, [sp, #120]
    33e0:	ldr	x0, [x0]
    33e4:	eor	x0, x1, x0
    33e8:	cmp	x0, #0x0
    33ec:	b.eq	33f4 <XS_Opcode_opset+0x2e8>  // b.none
    33f0:	bl	1280 <__stack_chk_fail@plt>
    33f4:	ldp	x29, x30, [sp], #128
    33f8:	ret

00000000000033fc <XS_Opcode_permit_only>:
    33fc:	stp	x29, x30, [sp, #-160]!
    3400:	mov	x29, sp
    3404:	str	x0, [sp, #24]
    3408:	str	x1, [sp, #16]
    340c:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3410:	ldr	x0, [x0, #4048]
    3414:	ldr	x1, [x0]
    3418:	str	x1, [sp, #152]
    341c:	mov	x1, #0x0                   	// #0
    3420:	ldr	x0, [sp, #24]
    3424:	ldr	x0, [x0]
    3428:	str	x0, [sp, #88]
    342c:	ldr	x0, [sp, #24]
    3430:	bl	15f0 <S_POPMARK>
    3434:	str	w0, [sp, #52]
    3438:	ldr	x0, [sp, #24]
    343c:	ldr	x1, [x0, #24]
    3440:	ldr	w0, [sp, #52]
    3444:	add	w2, w0, #0x1
    3448:	str	w2, [sp, #52]
    344c:	sxtw	x0, w0
    3450:	lsl	x0, x0, #3
    3454:	add	x0, x1, x0
    3458:	str	x0, [sp, #96]
    345c:	ldr	x1, [sp, #88]
    3460:	ldr	x0, [sp, #96]
    3464:	sub	x0, x1, x0
    3468:	asr	x0, x0, #3
    346c:	str	w0, [sp, #56]
    3470:	ldr	x0, [sp, #16]
    3474:	ldr	x0, [x0]
    3478:	str	x0, [sp, #104]
    347c:	ldr	x0, [sp, #104]
    3480:	ldr	w0, [x0, #40]
    3484:	str	w0, [sp, #60]
    3488:	ldr	w0, [sp, #56]
    348c:	cmp	w0, #0x0
    3490:	b.gt	34a4 <XS_Opcode_permit_only+0xa8>
    3494:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3498:	add	x1, x0, #0xb58
    349c:	ldr	x0, [sp, #16]
    34a0:	bl	12a0 <Perl_croak_xs_usage@plt>
    34a4:	ldr	x0, [sp, #24]
    34a8:	ldr	x1, [x0, #24]
    34ac:	ldrsw	x0, [sp, #52]
    34b0:	lsl	x0, x0, #3
    34b4:	add	x0, x1, x0
    34b8:	ldr	x0, [x0]
    34bc:	str	x0, [sp, #112]
    34c0:	ldr	x0, [sp, #24]
    34c4:	ldr	x1, [x0, #3032]
    34c8:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    34cc:	add	x0, x0, #0x170
    34d0:	ldr	w0, [x0]
    34d4:	sxtw	x0, w0
    34d8:	lsl	x0, x0, #3
    34dc:	add	x0, x1, x0
    34e0:	ldr	x0, [x0]
    34e4:	str	x0, [sp, #120]
    34e8:	ldr	x0, [sp, #112]
    34ec:	ldr	w0, [x0, #12]
    34f0:	and	w0, w0, #0x800
    34f4:	cmp	w0, #0x0
    34f8:	b.eq	352c <XS_Opcode_permit_only+0x130>  // b.none
    34fc:	ldr	x0, [sp, #112]
    3500:	ldr	x0, [x0, #16]
    3504:	ldr	w0, [x0, #12]
    3508:	and	w0, w0, #0x100000
    350c:	cmp	w0, #0x0
    3510:	b.eq	352c <XS_Opcode_permit_only+0x130>  // b.none
    3514:	ldr	x0, [sp, #112]
    3518:	ldr	x0, [x0, #16]
    351c:	ldr	w0, [x0, #12]
    3520:	and	w0, w0, #0xff
    3524:	cmp	w0, #0xc
    3528:	b.eq	3538 <XS_Opcode_permit_only+0x13c>  // b.none
    352c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3530:	add	x0, x0, #0xb68
    3534:	bl	1310 <Perl_croak_nocontext@plt>
    3538:	ldr	x0, [sp, #112]
    353c:	ldr	x1, [x0, #16]
    3540:	mov	w6, #0x0                   	// #0
    3544:	mov	x5, #0x0                   	// #0
    3548:	mov	w4, #0x30                  	// #48
    354c:	mov	w3, #0x4                   	// #4
    3550:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3554:	add	x2, x0, #0xb80
    3558:	ldr	x0, [sp, #24]
    355c:	bl	13b0 <Perl_hv_common_key_len@plt>
    3560:	ldr	x0, [x0]
    3564:	str	x0, [sp, #128]
    3568:	ldr	w0, [sp, #60]
    356c:	cmp	w0, #0x0
    3570:	b.eq	3580 <XS_Opcode_permit_only+0x184>  // b.none
    3574:	ldr	w0, [sp, #60]
    3578:	cmp	w0, #0x2
    357c:	b.ne	35d8 <XS_Opcode_permit_only+0x1dc>  // b.any
    3580:	ldr	w0, [sp, #60]
    3584:	cmp	w0, #0x0
    3588:	b.eq	3598 <XS_Opcode_permit_only+0x19c>  // b.none
    358c:	ldr	w0, [sp, #60]
    3590:	cmp	w0, #0x1
    3594:	b.ne	35a4 <XS_Opcode_permit_only+0x1a8>  // b.any
    3598:	ldr	x0, [sp, #120]
    359c:	ldr	x0, [x0, #8]
    35a0:	b	35a8 <XS_Opcode_permit_only+0x1ac>
    35a4:	mov	x0, #0x0                   	// #0
    35a8:	mov	x1, x0
    35ac:	ldr	x0, [sp, #24]
    35b0:	bl	1ad4 <new_opset>
    35b4:	mov	x1, x0
    35b8:	ldr	x0, [sp, #24]
    35bc:	bl	1370 <Perl_sv_2mortal@plt>
    35c0:	mov	w3, #0x2                   	// #2
    35c4:	mov	x2, x0
    35c8:	ldr	x1, [sp, #128]
    35cc:	ldr	x0, [sp, #24]
    35d0:	bl	1350 <Perl_sv_setsv_flags@plt>
    35d4:	b	35e8 <XS_Opcode_permit_only+0x1ec>
    35d8:	mov	w2, #0x1                   	// #1
    35dc:	ldr	x1, [sp, #128]
    35e0:	ldr	x0, [sp, #24]
    35e4:	bl	1bd0 <verify_opset>
    35e8:	ldr	x0, [sp, #128]
    35ec:	ldr	x0, [x0, #16]
    35f0:	str	x0, [sp, #136]
    35f4:	mov	w0, #0x1                   	// #1
    35f8:	str	w0, [sp, #44]
    35fc:	b	37f0 <XS_Opcode_permit_only+0x3f4>
    3600:	ldr	w0, [sp, #60]
    3604:	cmp	w0, #0x0
    3608:	b.eq	3620 <XS_Opcode_permit_only+0x224>  // b.none
    360c:	ldr	w0, [sp, #60]
    3610:	cmp	w0, #0x1
    3614:	b.eq	3620 <XS_Opcode_permit_only+0x224>  // b.none
    3618:	mov	w0, #0x1                   	// #1
    361c:	b	3624 <XS_Opcode_permit_only+0x228>
    3620:	mov	w0, #0x0                   	// #0
    3624:	str	w0, [sp, #48]
    3628:	ldr	x0, [sp, #24]
    362c:	ldr	x1, [x0, #24]
    3630:	ldr	w2, [sp, #52]
    3634:	ldr	w0, [sp, #44]
    3638:	add	w0, w2, w0
    363c:	sxtw	x0, w0
    3640:	lsl	x0, x0, #3
    3644:	add	x0, x1, x0
    3648:	ldr	x0, [x0]
    364c:	mov	w2, #0x0                   	// #0
    3650:	mov	x1, x0
    3654:	ldr	x0, [sp, #24]
    3658:	bl	1bd0 <verify_opset>
    365c:	cmp	w0, #0x0
    3660:	b.eq	369c <XS_Opcode_permit_only+0x2a0>  // b.none
    3664:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3668:	add	x0, x0, #0xb50
    366c:	str	x0, [sp, #80]
    3670:	ldr	x0, [sp, #24]
    3674:	ldr	x1, [x0, #24]
    3678:	ldr	w2, [sp, #52]
    367c:	ldr	w0, [sp, #44]
    3680:	add	w0, w2, w0
    3684:	sxtw	x0, w0
    3688:	lsl	x0, x0, #3
    368c:	add	x0, x1, x0
    3690:	ldr	x0, [x0]
    3694:	str	x0, [sp, #72]
    3698:	b	37cc <XS_Opcode_permit_only+0x3d0>
    369c:	ldr	x0, [sp, #24]
    36a0:	ldr	x1, [x0, #24]
    36a4:	ldr	w2, [sp, #52]
    36a8:	ldr	w0, [sp, #44]
    36ac:	add	w0, w2, w0
    36b0:	sxtw	x0, w0
    36b4:	lsl	x0, x0, #3
    36b8:	add	x0, x1, x0
    36bc:	ldr	x0, [x0]
    36c0:	ldr	w1, [x0, #12]
    36c4:	mov	w0, #0x400                 	// #1024
    36c8:	movk	w0, #0x20, lsl #16
    36cc:	and	w0, w1, w0
    36d0:	cmp	w0, #0x400
    36d4:	b.ne	3734 <XS_Opcode_permit_only+0x338>  // b.any
    36d8:	ldr	x0, [sp, #24]
    36dc:	ldr	x1, [x0, #24]
    36e0:	ldr	w2, [sp, #52]
    36e4:	ldr	w0, [sp, #44]
    36e8:	add	w0, w2, w0
    36ec:	sxtw	x0, w0
    36f0:	lsl	x0, x0, #3
    36f4:	add	x0, x1, x0
    36f8:	ldr	x0, [x0]
    36fc:	ldr	x0, [x0]
    3700:	ldr	x0, [x0, #16]
    3704:	str	x0, [sp, #64]
    3708:	ldr	x0, [sp, #24]
    370c:	ldr	x1, [x0, #24]
    3710:	ldr	w2, [sp, #52]
    3714:	ldr	w0, [sp, #44]
    3718:	add	w0, w2, w0
    371c:	sxtw	x0, w0
    3720:	lsl	x0, x0, #3
    3724:	add	x0, x1, x0
    3728:	ldr	x0, [x0]
    372c:	ldr	x0, [x0, #16]
    3730:	b	3770 <XS_Opcode_permit_only+0x374>
    3734:	ldr	x0, [sp, #24]
    3738:	ldr	x1, [x0, #24]
    373c:	ldr	w2, [sp, #52]
    3740:	ldr	w0, [sp, #44]
    3744:	add	w0, w2, w0
    3748:	sxtw	x0, w0
    374c:	lsl	x0, x0, #3
    3750:	add	x0, x1, x0
    3754:	ldr	x0, [x0]
    3758:	add	x1, sp, #0x40
    375c:	mov	w3, #0x2                   	// #2
    3760:	mov	x2, x1
    3764:	mov	x1, x0
    3768:	ldr	x0, [sp, #24]
    376c:	bl	1240 <Perl_sv_2pv_flags@plt>
    3770:	str	x0, [sp, #80]
    3774:	ldr	x0, [sp, #80]
    3778:	ldrb	w0, [x0]
    377c:	cmp	w0, #0x21
    3780:	b.ne	37b0 <XS_Opcode_permit_only+0x3b4>  // b.any
    3784:	ldr	w0, [sp, #48]
    3788:	cmp	w0, #0x0
    378c:	cset	w0, eq  // eq = none
    3790:	and	w0, w0, #0xff
    3794:	str	w0, [sp, #48]
    3798:	ldr	x0, [sp, #80]
    379c:	add	x0, x0, #0x1
    37a0:	str	x0, [sp, #80]
    37a4:	ldr	x0, [sp, #64]
    37a8:	sub	x0, x0, #0x1
    37ac:	str	x0, [sp, #64]
    37b0:	ldr	x0, [sp, #64]
    37b4:	mov	w3, #0x1                   	// #1
    37b8:	mov	x2, x0
    37bc:	ldr	x1, [sp, #80]
    37c0:	ldr	x0, [sp, #24]
    37c4:	bl	19a4 <get_op_bitspec>
    37c8:	str	x0, [sp, #72]
    37cc:	ldr	x4, [sp, #80]
    37d0:	ldr	w3, [sp, #48]
    37d4:	ldr	x2, [sp, #72]
    37d8:	ldr	x1, [sp, #136]
    37dc:	ldr	x0, [sp, #24]
    37e0:	bl	1cc0 <set_opset_bits>
    37e4:	ldr	w0, [sp, #44]
    37e8:	add	w0, w0, #0x1
    37ec:	str	w0, [sp, #44]
    37f0:	ldr	w1, [sp, #44]
    37f4:	ldr	w0, [sp, #56]
    37f8:	cmp	w1, w0
    37fc:	b.lt	3600 <XS_Opcode_permit_only+0x204>  // b.tstop
    3800:	ldr	x0, [sp, #24]
    3804:	ldr	x1, [x0, #24]
    3808:	ldrsw	x0, [sp, #52]
    380c:	lsl	x0, x0, #3
    3810:	add	x0, x1, x0
    3814:	ldr	x1, [sp, #24]
    3818:	add	x1, x1, #0x138
    381c:	str	x1, [x0]
    3820:	mov	x0, #0x1                   	// #1
    3824:	str	x0, [sp, #144]
    3828:	ldr	x0, [sp, #24]
    382c:	ldr	x1, [x0, #24]
    3830:	ldrsw	x2, [sp, #52]
    3834:	ldr	x0, [sp, #144]
    3838:	add	x0, x2, x0
    383c:	lsl	x0, x0, #3
    3840:	sub	x0, x0, #0x8
    3844:	add	x1, x1, x0
    3848:	ldr	x0, [sp, #24]
    384c:	str	x1, [x0]
    3850:	nop
    3854:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3858:	ldr	x0, [x0, #4048]
    385c:	ldr	x1, [sp, #152]
    3860:	ldr	x0, [x0]
    3864:	eor	x0, x1, x0
    3868:	cmp	x0, #0x0
    386c:	b.eq	3874 <XS_Opcode_permit_only+0x478>  // b.none
    3870:	bl	1280 <__stack_chk_fail@plt>
    3874:	ldp	x29, x30, [sp], #160
    3878:	ret

000000000000387c <XS_Opcode_opdesc>:
    387c:	stp	x29, x30, [sp, #-160]!
    3880:	mov	x29, sp
    3884:	str	x19, [sp, #16]
    3888:	str	x0, [sp, #40]
    388c:	str	x1, [sp, #32]
    3890:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3894:	ldr	x0, [x0, #4048]
    3898:	ldr	x1, [x0]
    389c:	str	x1, [sp, #152]
    38a0:	mov	x1, #0x0                   	// #0
    38a4:	ldr	x0, [sp, #40]
    38a8:	ldr	x0, [x0]
    38ac:	str	x0, [sp, #88]
    38b0:	ldr	x0, [sp, #40]
    38b4:	bl	15f0 <S_POPMARK>
    38b8:	str	w0, [sp, #68]
    38bc:	ldr	x0, [sp, #40]
    38c0:	ldr	x1, [x0, #24]
    38c4:	ldr	w0, [sp, #68]
    38c8:	add	w2, w0, #0x1
    38cc:	str	w2, [sp, #68]
    38d0:	sxtw	x0, w0
    38d4:	lsl	x0, x0, #3
    38d8:	add	x0, x1, x0
    38dc:	str	x0, [sp, #96]
    38e0:	ldr	x1, [sp, #88]
    38e4:	ldr	x0, [sp, #96]
    38e8:	sub	x0, x1, x0
    38ec:	asr	x0, x0, #3
    38f0:	str	w0, [sp, #72]
    38f4:	ldrsw	x0, [sp, #72]
    38f8:	lsl	x0, x0, #3
    38fc:	neg	x0, x0
    3900:	ldr	x1, [sp, #88]
    3904:	add	x0, x1, x0
    3908:	str	x0, [sp, #88]
    390c:	ldr	x0, [sp, #40]
    3910:	bl	1340 <Perl_get_op_descs@plt>
    3914:	str	x0, [sp, #104]
    3918:	ldr	x0, [sp, #40]
    391c:	ldr	x1, [x0, #3032]
    3920:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    3924:	add	x0, x0, #0x170
    3928:	ldr	w0, [x0]
    392c:	sxtw	x0, w0
    3930:	lsl	x0, x0, #3
    3934:	add	x0, x1, x0
    3938:	ldr	x0, [x0]
    393c:	str	x0, [sp, #112]
    3940:	ldr	x0, [sp, #40]
    3944:	ldr	x1, [x0, #24]
    3948:	ldrsw	x0, [sp, #68]
    394c:	lsl	x0, x0, #3
    3950:	add	x1, x1, x0
    3954:	ldrsw	x0, [sp, #72]
    3958:	lsl	x0, x0, #3
    395c:	mov	w3, #0x80000               	// #524288
    3960:	mov	x2, x0
    3964:	ldr	x0, [sp, #40]
    3968:	bl	12b0 <Perl_newSVpvn_flags@plt>
    396c:	ldr	x0, [x0, #16]
    3970:	str	x0, [sp, #120]
    3974:	str	wzr, [sp, #52]
    3978:	b	3d1c <XS_Opcode_opdesc+0x4a0>
    397c:	ldrsw	x0, [sp, #52]
    3980:	lsl	x0, x0, #3
    3984:	ldr	x1, [sp, #120]
    3988:	add	x0, x1, x0
    398c:	ldr	x0, [x0]
    3990:	ldr	w1, [x0, #12]
    3994:	mov	w0, #0x400                 	// #1024
    3998:	movk	w0, #0x20, lsl #16
    399c:	and	w0, w1, w0
    39a0:	cmp	w0, #0x400
    39a4:	b.ne	39e4 <XS_Opcode_opdesc+0x168>  // b.any
    39a8:	ldrsw	x0, [sp, #52]
    39ac:	lsl	x0, x0, #3
    39b0:	ldr	x1, [sp, #120]
    39b4:	add	x0, x1, x0
    39b8:	ldr	x0, [x0]
    39bc:	ldr	x0, [x0]
    39c0:	ldr	x0, [x0, #16]
    39c4:	str	x0, [sp, #80]
    39c8:	ldrsw	x0, [sp, #52]
    39cc:	lsl	x0, x0, #3
    39d0:	ldr	x1, [sp, #120]
    39d4:	add	x0, x1, x0
    39d8:	ldr	x0, [x0]
    39dc:	ldr	x0, [x0, #16]
    39e0:	b	3a10 <XS_Opcode_opdesc+0x194>
    39e4:	ldrsw	x0, [sp, #52]
    39e8:	lsl	x0, x0, #3
    39ec:	ldr	x1, [sp, #120]
    39f0:	add	x0, x1, x0
    39f4:	ldr	x0, [x0]
    39f8:	add	x1, sp, #0x50
    39fc:	mov	w3, #0x2                   	// #2
    3a00:	mov	x2, x1
    3a04:	mov	x1, x0
    3a08:	ldr	x0, [sp, #40]
    3a0c:	bl	1240 <Perl_sv_2pv_flags@plt>
    3a10:	str	x0, [sp, #128]
    3a14:	ldr	x0, [sp, #80]
    3a18:	mov	w3, #0x1                   	// #1
    3a1c:	mov	x2, x0
    3a20:	ldr	x1, [sp, #128]
    3a24:	ldr	x0, [sp, #40]
    3a28:	bl	19a4 <get_op_bitspec>
    3a2c:	str	x0, [sp, #136]
    3a30:	ldr	x0, [sp, #136]
    3a34:	ldr	w0, [x0, #12]
    3a38:	and	w0, w0, #0x100
    3a3c:	cmp	w0, #0x0
    3a40:	b.eq	3b50 <XS_Opcode_opdesc+0x2d4>  // b.none
    3a44:	ldr	x0, [sp, #136]
    3a48:	ldr	w1, [x0, #12]
    3a4c:	mov	w0, #0x100                 	// #256
    3a50:	movk	w0, #0x20, lsl #16
    3a54:	and	w0, w1, w0
    3a58:	cmp	w0, #0x100
    3a5c:	b.ne	3a70 <XS_Opcode_opdesc+0x1f4>  // b.any
    3a60:	ldr	x0, [sp, #136]
    3a64:	ldr	x0, [x0]
    3a68:	ldr	x0, [x0, #32]
    3a6c:	b	3a80 <XS_Opcode_opdesc+0x204>
    3a70:	mov	w2, #0x2                   	// #2
    3a74:	ldr	x1, [sp, #136]
    3a78:	ldr	x0, [sp, #40]
    3a7c:	bl	11b0 <Perl_sv_2iv_flags@plt>
    3a80:	str	w0, [sp, #76]
    3a84:	ldr	w0, [sp, #76]
    3a88:	cmp	w0, #0x0
    3a8c:	b.lt	3a9c <XS_Opcode_opdesc+0x220>  // b.tstop
    3a90:	ldr	w0, [sp, #76]
    3a94:	cmp	w0, #0x18c
    3a98:	b.le	3ab0 <XS_Opcode_opdesc+0x234>
    3a9c:	ldr	x2, [sp, #128]
    3aa0:	ldr	w1, [sp, #76]
    3aa4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3aa8:	add	x0, x0, #0xb88
    3aac:	bl	1310 <Perl_croak_nocontext@plt>
    3ab0:	ldr	x0, [sp, #40]
    3ab4:	ldr	x1, [x0, #32]
    3ab8:	ldr	x0, [sp, #88]
    3abc:	sub	x0, x1, x0
    3ac0:	cmp	x0, #0x0
    3ac4:	cset	w0, le
    3ac8:	and	w0, w0, #0xff
    3acc:	and	x0, x0, #0xff
    3ad0:	cmp	x0, #0x0
    3ad4:	b.eq	3af0 <XS_Opcode_opdesc+0x274>  // b.none
    3ad8:	mov	x3, #0x1                   	// #1
    3adc:	ldr	x2, [sp, #88]
    3ae0:	ldr	x1, [sp, #88]
    3ae4:	ldr	x0, [sp, #40]
    3ae8:	bl	11d0 <Perl_stack_grow@plt>
    3aec:	str	x0, [sp, #88]
    3af0:	ldrsw	x0, [sp, #76]
    3af4:	lsl	x0, x0, #3
    3af8:	ldr	x1, [sp, #104]
    3afc:	add	x0, x1, x0
    3b00:	ldr	x19, [x0]
    3b04:	ldrsw	x0, [sp, #76]
    3b08:	lsl	x0, x0, #3
    3b0c:	ldr	x1, [sp, #104]
    3b10:	add	x0, x1, x0
    3b14:	ldr	x0, [x0]
    3b18:	bl	11c0 <strlen@plt>
    3b1c:	mov	x1, x0
    3b20:	ldr	x0, [sp, #88]
    3b24:	add	x0, x0, #0x8
    3b28:	str	x0, [sp, #88]
    3b2c:	mov	w3, #0x80000               	// #524288
    3b30:	mov	x2, x1
    3b34:	mov	x1, x19
    3b38:	ldr	x0, [sp, #40]
    3b3c:	bl	12b0 <Perl_newSVpvn_flags@plt>
    3b40:	mov	x1, x0
    3b44:	ldr	x0, [sp, #88]
    3b48:	str	x1, [x0]
    3b4c:	b	3d10 <XS_Opcode_opdesc+0x494>
    3b50:	ldr	x0, [sp, #136]
    3b54:	ldr	w0, [x0, #12]
    3b58:	and	w0, w0, #0x400
    3b5c:	cmp	w0, #0x0
    3b60:	b.eq	3cf0 <XS_Opcode_opdesc+0x474>  // b.none
    3b64:	ldr	x0, [sp, #136]
    3b68:	ldr	x0, [x0]
    3b6c:	ldr	x0, [x0, #16]
    3b70:	ldr	x1, [sp, #112]
    3b74:	ldr	x1, [x1, #16]
    3b78:	cmp	x0, x1
    3b7c:	b.ne	3cf0 <XS_Opcode_opdesc+0x474>  // b.any
    3b80:	ldr	x0, [sp, #136]
    3b84:	ldr	w1, [x0, #12]
    3b88:	mov	w0, #0x400                 	// #1024
    3b8c:	movk	w0, #0x20, lsl #16
    3b90:	and	w0, w1, w0
    3b94:	cmp	w0, #0x400
    3b98:	b.ne	3ba8 <XS_Opcode_opdesc+0x32c>  // b.any
    3b9c:	ldr	x0, [sp, #136]
    3ba0:	ldr	x0, [x0, #16]
    3ba4:	b	3bbc <XS_Opcode_opdesc+0x340>
    3ba8:	mov	w3, #0x22                  	// #34
    3bac:	mov	x2, #0x0                   	// #0
    3bb0:	ldr	x1, [sp, #136]
    3bb4:	ldr	x0, [sp, #40]
    3bb8:	bl	1240 <Perl_sv_2pv_flags@plt>
    3bbc:	str	x0, [sp, #144]
    3bc0:	str	wzr, [sp, #64]
    3bc4:	str	wzr, [sp, #56]
    3bc8:	b	3cd8 <XS_Opcode_opdesc+0x45c>
    3bcc:	ldrsw	x0, [sp, #56]
    3bd0:	ldr	x1, [sp, #144]
    3bd4:	add	x0, x1, x0
    3bd8:	ldrb	w0, [x0]
    3bdc:	strh	w0, [sp, #50]
    3be0:	str	wzr, [sp, #60]
    3be4:	b	3cb4 <XS_Opcode_opdesc+0x438>
    3be8:	ldrh	w1, [sp, #50]
    3bec:	ldr	w0, [sp, #60]
    3bf0:	asr	w0, w1, w0
    3bf4:	and	w0, w0, #0x1
    3bf8:	cmp	w0, #0x0
    3bfc:	b.eq	3c9c <XS_Opcode_opdesc+0x420>  // b.none
    3c00:	ldr	x0, [sp, #40]
    3c04:	ldr	x1, [x0, #32]
    3c08:	ldr	x0, [sp, #88]
    3c0c:	sub	x0, x1, x0
    3c10:	cmp	x0, #0x0
    3c14:	cset	w0, le
    3c18:	and	w0, w0, #0xff
    3c1c:	and	x0, x0, #0xff
    3c20:	cmp	x0, #0x0
    3c24:	b.eq	3c40 <XS_Opcode_opdesc+0x3c4>  // b.none
    3c28:	mov	x3, #0x1                   	// #1
    3c2c:	ldr	x2, [sp, #88]
    3c30:	ldr	x1, [sp, #88]
    3c34:	ldr	x0, [sp, #40]
    3c38:	bl	11d0 <Perl_stack_grow@plt>
    3c3c:	str	x0, [sp, #88]
    3c40:	ldrsw	x0, [sp, #64]
    3c44:	lsl	x0, x0, #3
    3c48:	ldr	x1, [sp, #104]
    3c4c:	add	x0, x1, x0
    3c50:	ldr	x19, [x0]
    3c54:	ldrsw	x0, [sp, #64]
    3c58:	lsl	x0, x0, #3
    3c5c:	ldr	x1, [sp, #104]
    3c60:	add	x0, x1, x0
    3c64:	ldr	x0, [x0]
    3c68:	bl	11c0 <strlen@plt>
    3c6c:	mov	x1, x0
    3c70:	ldr	x0, [sp, #88]
    3c74:	add	x0, x0, #0x8
    3c78:	str	x0, [sp, #88]
    3c7c:	mov	w3, #0x80000               	// #524288
    3c80:	mov	x2, x1
    3c84:	mov	x1, x19
    3c88:	ldr	x0, [sp, #40]
    3c8c:	bl	12b0 <Perl_newSVpvn_flags@plt>
    3c90:	mov	x1, x0
    3c94:	ldr	x0, [sp, #88]
    3c98:	str	x1, [x0]
    3c9c:	ldr	w0, [sp, #60]
    3ca0:	add	w0, w0, #0x1
    3ca4:	str	w0, [sp, #60]
    3ca8:	ldr	w0, [sp, #64]
    3cac:	add	w0, w0, #0x1
    3cb0:	str	w0, [sp, #64]
    3cb4:	ldr	w0, [sp, #60]
    3cb8:	cmp	w0, #0x7
    3cbc:	b.gt	3ccc <XS_Opcode_opdesc+0x450>
    3cc0:	ldr	w0, [sp, #64]
    3cc4:	cmp	w0, #0x18c
    3cc8:	b.le	3be8 <XS_Opcode_opdesc+0x36c>
    3ccc:	ldr	w0, [sp, #56]
    3cd0:	add	w0, w0, #0x1
    3cd4:	str	w0, [sp, #56]
    3cd8:	ldrsw	x1, [sp, #56]
    3cdc:	ldr	x0, [sp, #112]
    3ce0:	ldr	x0, [x0, #16]
    3ce4:	cmp	x1, x0
    3ce8:	b.lt	3bcc <XS_Opcode_opdesc+0x350>  // b.tstop
    3cec:	b	3d10 <XS_Opcode_opdesc+0x494>
    3cf0:	ldr	x0, [sp, #136]
    3cf4:	ldr	w0, [x0, #12]
    3cf8:	and	w0, w0, #0xff
    3cfc:	mov	w2, w0
    3d00:	ldr	x1, [sp, #128]
    3d04:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3d08:	add	x0, x0, #0xa88
    3d0c:	bl	1310 <Perl_croak_nocontext@plt>
    3d10:	ldr	w0, [sp, #52]
    3d14:	add	w0, w0, #0x1
    3d18:	str	w0, [sp, #52]
    3d1c:	ldr	w1, [sp, #52]
    3d20:	ldr	w0, [sp, #72]
    3d24:	cmp	w1, w0
    3d28:	b.lt	397c <XS_Opcode_opdesc+0x100>  // b.tstop
    3d2c:	ldr	x0, [sp, #40]
    3d30:	ldr	x1, [sp, #88]
    3d34:	str	x1, [x0]
    3d38:	nop
    3d3c:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3d40:	ldr	x0, [x0, #4048]
    3d44:	ldr	x1, [sp, #152]
    3d48:	ldr	x0, [x0]
    3d4c:	eor	x0, x1, x0
    3d50:	cmp	x0, #0x0
    3d54:	b.eq	3d5c <XS_Opcode_opdesc+0x4e0>  // b.none
    3d58:	bl	1280 <__stack_chk_fail@plt>
    3d5c:	ldr	x19, [sp, #16]
    3d60:	ldp	x29, x30, [sp], #160
    3d64:	ret

0000000000003d68 <XS_Opcode_define_optag>:
    3d68:	stp	x29, x30, [sp, #-112]!
    3d6c:	mov	x29, sp
    3d70:	str	x0, [sp, #24]
    3d74:	str	x1, [sp, #16]
    3d78:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3d7c:	ldr	x0, [x0, #4048]
    3d80:	ldr	x1, [x0]
    3d84:	str	x1, [sp, #104]
    3d88:	mov	x1, #0x0                   	// #0
    3d8c:	ldr	x0, [sp, #24]
    3d90:	ldr	x0, [x0]
    3d94:	str	x0, [sp, #56]
    3d98:	ldr	x0, [sp, #24]
    3d9c:	bl	15f0 <S_POPMARK>
    3da0:	str	w0, [sp, #40]
    3da4:	ldr	x0, [sp, #24]
    3da8:	ldr	x1, [x0, #24]
    3dac:	ldr	w0, [sp, #40]
    3db0:	add	w2, w0, #0x1
    3db4:	str	w2, [sp, #40]
    3db8:	sxtw	x0, w0
    3dbc:	lsl	x0, x0, #3
    3dc0:	add	x0, x1, x0
    3dc4:	str	x0, [sp, #64]
    3dc8:	ldr	x1, [sp, #56]
    3dcc:	ldr	x0, [sp, #64]
    3dd0:	sub	x0, x1, x0
    3dd4:	asr	x0, x0, #3
    3dd8:	str	w0, [sp, #44]
    3ddc:	ldr	w0, [sp, #44]
    3de0:	cmp	w0, #0x2
    3de4:	b.eq	3df8 <XS_Opcode_define_optag+0x90>  // b.none
    3de8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3dec:	add	x1, x0, #0xbb0
    3df0:	ldr	x0, [sp, #16]
    3df4:	bl	12a0 <Perl_croak_xs_usage@plt>
    3df8:	ldr	x0, [sp, #24]
    3dfc:	ldr	x1, [x0, #24]
    3e00:	ldrsw	x0, [sp, #40]
    3e04:	lsl	x0, x0, #3
    3e08:	add	x0, x1, x0
    3e0c:	ldr	x0, [x0]
    3e10:	str	x0, [sp, #72]
    3e14:	ldr	x0, [sp, #24]
    3e18:	ldr	x1, [x0, #24]
    3e1c:	ldrsw	x0, [sp, #40]
    3e20:	add	x0, x0, #0x1
    3e24:	lsl	x0, x0, #3
    3e28:	add	x0, x1, x0
    3e2c:	ldr	x0, [x0]
    3e30:	str	x0, [sp, #80]
    3e34:	ldr	x0, [sp, #72]
    3e38:	ldr	w1, [x0, #12]
    3e3c:	mov	w0, #0x400                 	// #1024
    3e40:	movk	w0, #0x20, lsl #16
    3e44:	and	w0, w1, w0
    3e48:	cmp	w0, #0x400
    3e4c:	b.ne	3e6c <XS_Opcode_define_optag+0x104>  // b.any
    3e50:	ldr	x0, [sp, #72]
    3e54:	ldr	x0, [x0]
    3e58:	ldr	x0, [x0, #16]
    3e5c:	str	x0, [sp, #48]
    3e60:	ldr	x0, [sp, #72]
    3e64:	ldr	x0, [x0, #16]
    3e68:	b	3e84 <XS_Opcode_define_optag+0x11c>
    3e6c:	add	x0, sp, #0x30
    3e70:	mov	w3, #0x2                   	// #2
    3e74:	mov	x2, x0
    3e78:	ldr	x1, [sp, #72]
    3e7c:	ldr	x0, [sp, #24]
    3e80:	bl	1240 <Perl_sv_2pv_flags@plt>
    3e84:	str	x0, [sp, #88]
    3e88:	ldr	x0, [sp, #48]
    3e8c:	ldr	x3, [sp, #80]
    3e90:	mov	x2, x0
    3e94:	ldr	x1, [sp, #88]
    3e98:	ldr	x0, [sp, #24]
    3e9c:	bl	18b8 <put_op_bitspec>
    3ea0:	ldr	x0, [sp, #24]
    3ea4:	ldr	x1, [x0, #24]
    3ea8:	ldrsw	x0, [sp, #40]
    3eac:	lsl	x0, x0, #3
    3eb0:	add	x0, x1, x0
    3eb4:	ldr	x1, [sp, #24]
    3eb8:	add	x1, x1, #0x138
    3ebc:	str	x1, [x0]
    3ec0:	mov	x0, #0x1                   	// #1
    3ec4:	str	x0, [sp, #96]
    3ec8:	ldr	x0, [sp, #24]
    3ecc:	ldr	x1, [x0, #24]
    3ed0:	ldrsw	x2, [sp, #40]
    3ed4:	ldr	x0, [sp, #96]
    3ed8:	add	x0, x2, x0
    3edc:	lsl	x0, x0, #3
    3ee0:	sub	x0, x0, #0x8
    3ee4:	add	x1, x1, x0
    3ee8:	ldr	x0, [sp, #24]
    3eec:	str	x1, [x0]
    3ef0:	nop
    3ef4:	adrp	x0, 15000 <__FRAME_END__+0xfd70>
    3ef8:	ldr	x0, [x0, #4048]
    3efc:	ldr	x1, [sp, #104]
    3f00:	ldr	x0, [x0]
    3f04:	eor	x0, x1, x0
    3f08:	cmp	x0, #0x0
    3f0c:	b.eq	3f14 <XS_Opcode_define_optag+0x1ac>  // b.none
    3f10:	bl	1280 <__stack_chk_fail@plt>
    3f14:	ldp	x29, x30, [sp], #112
    3f18:	ret

0000000000003f1c <XS_Opcode_empty_opset>:
    3f1c:	stp	x29, x30, [sp, #-80]!
    3f20:	mov	x29, sp
    3f24:	str	x19, [sp, #16]
    3f28:	str	x0, [sp, #40]
    3f2c:	str	x1, [sp, #32]
    3f30:	ldr	x0, [sp, #40]
    3f34:	ldr	x0, [x0]
    3f38:	str	x0, [sp, #56]
    3f3c:	ldr	x0, [sp, #40]
    3f40:	bl	15f0 <S_POPMARK>
    3f44:	str	w0, [sp, #48]
    3f48:	ldr	x0, [sp, #40]
    3f4c:	ldr	x1, [x0, #24]
    3f50:	ldr	w0, [sp, #48]
    3f54:	add	w2, w0, #0x1
    3f58:	str	w2, [sp, #48]
    3f5c:	sxtw	x0, w0
    3f60:	lsl	x0, x0, #3
    3f64:	add	x0, x1, x0
    3f68:	str	x0, [sp, #64]
    3f6c:	ldr	x1, [sp, #56]
    3f70:	ldr	x0, [sp, #64]
    3f74:	sub	x0, x1, x0
    3f78:	asr	x0, x0, #3
    3f7c:	str	w0, [sp, #52]
    3f80:	ldr	w0, [sp, #52]
    3f84:	cmp	w0, #0x0
    3f88:	b.eq	3f9c <XS_Opcode_empty_opset+0x80>  // b.none
    3f8c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    3f90:	add	x1, x0, #0xbc0
    3f94:	ldr	x0, [sp, #32]
    3f98:	bl	12a0 <Perl_croak_xs_usage@plt>
    3f9c:	mov	x1, #0x0                   	// #0
    3fa0:	ldr	x0, [sp, #40]
    3fa4:	bl	1ad4 <new_opset>
    3fa8:	mov	x2, x0
    3fac:	ldr	x0, [sp, #40]
    3fb0:	ldr	x1, [x0, #24]
    3fb4:	ldrsw	x0, [sp, #48]
    3fb8:	lsl	x0, x0, #3
    3fbc:	add	x19, x1, x0
    3fc0:	mov	x1, x2
    3fc4:	ldr	x0, [sp, #40]
    3fc8:	bl	1370 <Perl_sv_2mortal@plt>
    3fcc:	str	x0, [x19]
    3fd0:	mov	x0, #0x1                   	// #1
    3fd4:	str	x0, [sp, #72]
    3fd8:	ldr	x0, [sp, #40]
    3fdc:	ldr	x1, [x0, #24]
    3fe0:	ldrsw	x2, [sp, #48]
    3fe4:	ldr	x0, [sp, #72]
    3fe8:	add	x0, x2, x0
    3fec:	lsl	x0, x0, #3
    3ff0:	sub	x0, x0, #0x8
    3ff4:	add	x1, x1, x0
    3ff8:	ldr	x0, [sp, #40]
    3ffc:	str	x1, [x0]
    4000:	nop
    4004:	ldr	x19, [sp, #16]
    4008:	ldp	x29, x30, [sp], #80
    400c:	ret

0000000000004010 <XS_Opcode_full_opset>:
    4010:	stp	x29, x30, [sp, #-96]!
    4014:	mov	x29, sp
    4018:	str	x19, [sp, #16]
    401c:	str	x0, [sp, #40]
    4020:	str	x1, [sp, #32]
    4024:	ldr	x0, [sp, #40]
    4028:	ldr	x0, [x0]
    402c:	str	x0, [sp, #64]
    4030:	ldr	x0, [sp, #40]
    4034:	bl	15f0 <S_POPMARK>
    4038:	str	w0, [sp, #56]
    403c:	ldr	x0, [sp, #40]
    4040:	ldr	x1, [x0, #24]
    4044:	ldr	w0, [sp, #56]
    4048:	add	w2, w0, #0x1
    404c:	str	w2, [sp, #56]
    4050:	sxtw	x0, w0
    4054:	lsl	x0, x0, #3
    4058:	add	x0, x1, x0
    405c:	str	x0, [sp, #72]
    4060:	ldr	x1, [sp, #64]
    4064:	ldr	x0, [sp, #72]
    4068:	sub	x0, x1, x0
    406c:	asr	x0, x0, #3
    4070:	str	w0, [sp, #60]
    4074:	ldr	w0, [sp, #60]
    4078:	cmp	w0, #0x0
    407c:	b.eq	4090 <XS_Opcode_full_opset+0x80>  // b.none
    4080:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4084:	add	x1, x0, #0xbc0
    4088:	ldr	x0, [sp, #32]
    408c:	bl	12a0 <Perl_croak_xs_usage@plt>
    4090:	ldr	x0, [sp, #40]
    4094:	ldr	x1, [x0, #3032]
    4098:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    409c:	add	x0, x0, #0x170
    40a0:	ldr	w0, [x0]
    40a4:	sxtw	x0, w0
    40a8:	lsl	x0, x0, #3
    40ac:	add	x0, x1, x0
    40b0:	ldr	x0, [x0]
    40b4:	str	x0, [sp, #80]
    40b8:	ldr	x0, [sp, #80]
    40bc:	ldr	x0, [x0, #8]
    40c0:	mov	x1, x0
    40c4:	ldr	x0, [sp, #40]
    40c8:	bl	1ad4 <new_opset>
    40cc:	mov	x2, x0
    40d0:	ldr	x0, [sp, #40]
    40d4:	ldr	x1, [x0, #24]
    40d8:	ldrsw	x0, [sp, #56]
    40dc:	lsl	x0, x0, #3
    40e0:	add	x19, x1, x0
    40e4:	mov	x1, x2
    40e8:	ldr	x0, [sp, #40]
    40ec:	bl	1370 <Perl_sv_2mortal@plt>
    40f0:	str	x0, [x19]
    40f4:	mov	x0, #0x1                   	// #1
    40f8:	str	x0, [sp, #88]
    40fc:	ldr	x0, [sp, #40]
    4100:	ldr	x1, [x0, #24]
    4104:	ldrsw	x2, [sp, #56]
    4108:	ldr	x0, [sp, #88]
    410c:	add	x0, x2, x0
    4110:	lsl	x0, x0, #3
    4114:	sub	x0, x0, #0x8
    4118:	add	x1, x1, x0
    411c:	ldr	x0, [sp, #40]
    4120:	str	x1, [x0]
    4124:	nop
    4128:	ldr	x19, [sp, #16]
    412c:	ldp	x29, x30, [sp], #96
    4130:	ret

0000000000004134 <XS_Opcode_opmask_add>:
    4134:	stp	x29, x30, [sp, #-80]!
    4138:	mov	x29, sp
    413c:	str	x0, [sp, #24]
    4140:	str	x1, [sp, #16]
    4144:	ldr	x0, [sp, #24]
    4148:	ldr	x0, [x0]
    414c:	str	x0, [sp, #48]
    4150:	ldr	x0, [sp, #24]
    4154:	bl	15f0 <S_POPMARK>
    4158:	str	w0, [sp, #40]
    415c:	ldr	x0, [sp, #24]
    4160:	ldr	x1, [x0, #24]
    4164:	ldr	w0, [sp, #40]
    4168:	add	w2, w0, #0x1
    416c:	str	w2, [sp, #40]
    4170:	sxtw	x0, w0
    4174:	lsl	x0, x0, #3
    4178:	add	x0, x1, x0
    417c:	str	x0, [sp, #56]
    4180:	ldr	x1, [sp, #48]
    4184:	ldr	x0, [sp, #56]
    4188:	sub	x0, x1, x0
    418c:	asr	x0, x0, #3
    4190:	str	w0, [sp, #44]
    4194:	ldr	w0, [sp, #44]
    4198:	cmp	w0, #0x1
    419c:	b.eq	41b0 <XS_Opcode_opmask_add+0x7c>  // b.none
    41a0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    41a4:	add	x1, x0, #0xb38
    41a8:	ldr	x0, [sp, #16]
    41ac:	bl	12a0 <Perl_croak_xs_usage@plt>
    41b0:	ldr	x0, [sp, #24]
    41b4:	ldr	x1, [x0, #24]
    41b8:	ldrsw	x0, [sp, #40]
    41bc:	lsl	x0, x0, #3
    41c0:	add	x0, x1, x0
    41c4:	ldr	x0, [x0]
    41c8:	str	x0, [sp, #64]
    41cc:	ldr	x0, [sp, #24]
    41d0:	ldr	x0, [x0, #1904]
    41d4:	cmp	x0, #0x0
    41d8:	b.ne	41f4 <XS_Opcode_opmask_add+0xc0>  // b.any
    41dc:	mov	x1, #0x1                   	// #1
    41e0:	mov	x0, #0x18d                 	// #397
    41e4:	bl	12e0 <Perl_safesyscalloc@plt>
    41e8:	mov	x1, x0
    41ec:	ldr	x0, [sp, #24]
    41f0:	str	x1, [x0, #1904]
    41f4:	ldr	x1, [sp, #64]
    41f8:	ldr	x0, [sp, #24]
    41fc:	bl	1fe0 <opmask_add>
    4200:	str	xzr, [sp, #72]
    4204:	ldr	x0, [sp, #24]
    4208:	ldr	x1, [x0, #24]
    420c:	ldrsw	x2, [sp, #40]
    4210:	ldr	x0, [sp, #72]
    4214:	add	x0, x2, x0
    4218:	lsl	x0, x0, #3
    421c:	sub	x0, x0, #0x8
    4220:	add	x1, x1, x0
    4224:	ldr	x0, [sp, #24]
    4228:	str	x1, [x0]
    422c:	nop
    4230:	ldp	x29, x30, [sp], #80
    4234:	ret

0000000000004238 <XS_Opcode_opcodes>:
    4238:	stp	x29, x30, [sp, #-64]!
    423c:	mov	x29, sp
    4240:	str	x0, [sp, #24]
    4244:	str	x1, [sp, #16]
    4248:	ldr	x0, [sp, #24]
    424c:	ldr	x0, [x0]
    4250:	str	x0, [sp, #48]
    4254:	ldr	x0, [sp, #24]
    4258:	bl	15f0 <S_POPMARK>
    425c:	str	w0, [sp, #40]
    4260:	ldr	x0, [sp, #24]
    4264:	ldr	x1, [x0, #24]
    4268:	ldr	w0, [sp, #40]
    426c:	add	w2, w0, #0x1
    4270:	str	w2, [sp, #40]
    4274:	sxtw	x0, w0
    4278:	lsl	x0, x0, #3
    427c:	add	x0, x1, x0
    4280:	str	x0, [sp, #56]
    4284:	ldr	x1, [sp, #48]
    4288:	ldr	x0, [sp, #56]
    428c:	sub	x0, x1, x0
    4290:	asr	x0, x0, #3
    4294:	str	w0, [sp, #44]
    4298:	ldr	w0, [sp, #44]
    429c:	cmp	w0, #0x0
    42a0:	b.eq	42b4 <XS_Opcode_opcodes+0x7c>  // b.none
    42a4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    42a8:	add	x1, x0, #0xbc0
    42ac:	ldr	x0, [sp, #16]
    42b0:	bl	12a0 <Perl_croak_xs_usage@plt>
    42b4:	ldrsw	x0, [sp, #44]
    42b8:	lsl	x0, x0, #3
    42bc:	neg	x0, x0
    42c0:	ldr	x1, [sp, #48]
    42c4:	add	x0, x1, x0
    42c8:	str	x0, [sp, #48]
    42cc:	ldr	x0, [sp, #24]
    42d0:	ldr	x0, [x0, #8]
    42d4:	ldrb	w0, [x0, #34]
    42d8:	and	w0, w0, #0x3
    42dc:	cmp	w0, #0x0
    42e0:	b.eq	4304 <XS_Opcode_opcodes+0xcc>  // b.none
    42e4:	ldr	x0, [sp, #24]
    42e8:	ldr	x0, [x0, #8]
    42ec:	ldrb	w0, [x0, #34]
    42f0:	and	w0, w0, #0x3
    42f4:	cmp	w0, #0x3
    42f8:	cset	w0, eq  // eq = none
    42fc:	and	w0, w0, #0xff
    4300:	b	431c <XS_Opcode_opcodes+0xe4>
    4304:	ldr	x0, [sp, #24]
    4308:	bl	13d0 <Perl_block_gimme@plt>
    430c:	and	w0, w0, #0xff
    4310:	cmp	w0, #0x3
    4314:	cset	w0, eq  // eq = none
    4318:	and	w0, w0, #0xff
    431c:	cmp	w0, #0x0
    4320:	b.eq	4330 <XS_Opcode_opcodes+0xf8>  // b.none
    4324:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4328:	add	x0, x0, #0xbc8
    432c:	bl	1310 <Perl_croak_nocontext@plt>
    4330:	ldr	x0, [sp, #24]
    4334:	ldr	x1, [x0, #32]
    4338:	ldr	x0, [sp, #48]
    433c:	sub	x0, x1, x0
    4340:	cmp	x0, #0x0
    4344:	cset	w0, le
    4348:	and	w0, w0, #0xff
    434c:	and	x0, x0, #0xff
    4350:	cmp	x0, #0x0
    4354:	b.eq	4370 <XS_Opcode_opcodes+0x138>  // b.none
    4358:	mov	x3, #0x1                   	// #1
    435c:	ldr	x2, [sp, #48]
    4360:	ldr	x1, [sp, #48]
    4364:	ldr	x0, [sp, #24]
    4368:	bl	11d0 <Perl_stack_grow@plt>
    436c:	str	x0, [sp, #48]
    4370:	mov	x1, #0x18d                 	// #397
    4374:	ldr	x0, [sp, #24]
    4378:	bl	1420 <Perl_newSViv@plt>
    437c:	mov	x1, x0
    4380:	ldr	x0, [sp, #48]
    4384:	add	x0, x0, #0x8
    4388:	str	x0, [sp, #48]
    438c:	ldr	x0, [sp, #24]
    4390:	bl	1370 <Perl_sv_2mortal@plt>
    4394:	mov	x1, x0
    4398:	ldr	x0, [sp, #48]
    439c:	str	x1, [x0]
    43a0:	ldr	x0, [sp, #24]
    43a4:	ldr	x1, [sp, #48]
    43a8:	str	x1, [x0]
    43ac:	nop
    43b0:	ldp	x29, x30, [sp], #64
    43b4:	ret

00000000000043b8 <XS_Opcode_opmask>:
    43b8:	stp	x29, x30, [sp, #-96]!
    43bc:	mov	x29, sp
    43c0:	str	x19, [sp, #16]
    43c4:	str	x0, [sp, #40]
    43c8:	str	x1, [sp, #32]
    43cc:	ldr	x0, [sp, #40]
    43d0:	ldr	x0, [x0]
    43d4:	str	x0, [sp, #64]
    43d8:	ldr	x0, [sp, #40]
    43dc:	bl	15f0 <S_POPMARK>
    43e0:	str	w0, [sp, #56]
    43e4:	ldr	x0, [sp, #40]
    43e8:	ldr	x1, [x0, #24]
    43ec:	ldr	w0, [sp, #56]
    43f0:	add	w2, w0, #0x1
    43f4:	str	w2, [sp, #56]
    43f8:	sxtw	x0, w0
    43fc:	lsl	x0, x0, #3
    4400:	add	x0, x1, x0
    4404:	str	x0, [sp, #72]
    4408:	ldr	x1, [sp, #64]
    440c:	ldr	x0, [sp, #72]
    4410:	sub	x0, x1, x0
    4414:	asr	x0, x0, #3
    4418:	str	w0, [sp, #60]
    441c:	ldr	w0, [sp, #60]
    4420:	cmp	w0, #0x0
    4424:	b.eq	4438 <XS_Opcode_opmask+0x80>  // b.none
    4428:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    442c:	add	x1, x0, #0xbc0
    4430:	ldr	x0, [sp, #32]
    4434:	bl	12a0 <Perl_croak_xs_usage@plt>
    4438:	mov	x1, #0x0                   	// #0
    443c:	ldr	x0, [sp, #40]
    4440:	bl	1ad4 <new_opset>
    4444:	mov	x2, x0
    4448:	ldr	x0, [sp, #40]
    444c:	ldr	x1, [x0, #24]
    4450:	ldrsw	x0, [sp, #56]
    4454:	lsl	x0, x0, #3
    4458:	add	x19, x1, x0
    445c:	mov	x1, x2
    4460:	ldr	x0, [sp, #40]
    4464:	bl	1370 <Perl_sv_2mortal@plt>
    4468:	str	x0, [x19]
    446c:	ldr	x0, [sp, #40]
    4470:	ldr	x0, [x0, #1904]
    4474:	cmp	x0, #0x0
    4478:	b.eq	452c <XS_Opcode_opmask+0x174>  // b.none
    447c:	ldr	x0, [sp, #40]
    4480:	ldr	x1, [x0, #24]
    4484:	ldrsw	x0, [sp, #56]
    4488:	lsl	x0, x0, #3
    448c:	add	x0, x1, x0
    4490:	ldr	x0, [x0]
    4494:	ldr	x0, [x0, #16]
    4498:	str	x0, [sp, #80]
    449c:	str	wzr, [sp, #52]
    44a0:	b	4520 <XS_Opcode_opmask+0x168>
    44a4:	ldr	x0, [sp, #40]
    44a8:	ldr	x1, [x0, #1904]
    44ac:	ldrsw	x0, [sp, #52]
    44b0:	add	x0, x1, x0
    44b4:	ldrb	w0, [x0]
    44b8:	cmp	w0, #0x0
    44bc:	b.eq	4514 <XS_Opcode_opmask+0x15c>  // b.none
    44c0:	ldr	w0, [sp, #52]
    44c4:	asr	w0, w0, #3
    44c8:	sxtw	x0, w0
    44cc:	ldr	x1, [sp, #80]
    44d0:	add	x0, x1, x0
    44d4:	ldrb	w0, [x0]
    44d8:	sxtb	w1, w0
    44dc:	ldr	w0, [sp, #52]
    44e0:	and	w0, w0, #0x7
    44e4:	mov	w2, #0x1                   	// #1
    44e8:	lsl	w0, w2, w0
    44ec:	sxtb	w0, w0
    44f0:	orr	w0, w1, w0
    44f4:	sxtb	w2, w0
    44f8:	ldr	w0, [sp, #52]
    44fc:	asr	w0, w0, #3
    4500:	sxtw	x0, w0
    4504:	ldr	x1, [sp, #80]
    4508:	add	x0, x1, x0
    450c:	and	w1, w2, #0xff
    4510:	strb	w1, [x0]
    4514:	ldr	w0, [sp, #52]
    4518:	add	w0, w0, #0x1
    451c:	str	w0, [sp, #52]
    4520:	ldr	w0, [sp, #52]
    4524:	cmp	w0, #0x18c
    4528:	b.le	44a4 <XS_Opcode_opmask+0xec>
    452c:	mov	x0, #0x1                   	// #1
    4530:	str	x0, [sp, #88]
    4534:	ldr	x0, [sp, #40]
    4538:	ldr	x1, [x0, #24]
    453c:	ldrsw	x2, [sp, #56]
    4540:	ldr	x0, [sp, #88]
    4544:	add	x0, x2, x0
    4548:	lsl	x0, x0, #3
    454c:	sub	x0, x0, #0x8
    4550:	add	x1, x1, x0
    4554:	ldr	x0, [sp, #40]
    4558:	str	x1, [x0]
    455c:	nop
    4560:	ldr	x19, [sp, #16]
    4564:	ldp	x29, x30, [sp], #96
    4568:	ret

000000000000456c <boot_Opcode>:
    456c:	stp	x29, x30, [sp, #-112]!
    4570:	mov	x29, sp
    4574:	str	x0, [sp, #24]
    4578:	str	x1, [sp, #16]
    457c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4580:	add	x4, x0, #0xbf8
    4584:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4588:	add	x3, x0, #0xc00
    458c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4590:	add	x2, x0, #0xc08
    4594:	ldr	x1, [sp, #24]
    4598:	mov	w0, #0x4e7                 	// #1255
    459c:	movk	w0, #0xd30, lsl #16
    45a0:	bl	1390 <Perl_xs_handshake@plt>
    45a4:	str	w0, [sp, #40]
    45a8:	ldr	x0, [sp, #24]
    45ac:	ldr	x1, [x0, #24]
    45b0:	ldrsw	x0, [sp, #40]
    45b4:	lsl	x0, x0, #3
    45b8:	add	x0, x1, x0
    45bc:	str	x0, [sp, #48]
    45c0:	ldr	x0, [sp, #24]
    45c4:	ldr	x0, [x0]
    45c8:	str	x0, [sp, #56]
    45cc:	ldr	x1, [sp, #56]
    45d0:	ldr	x0, [sp, #48]
    45d4:	sub	x0, x1, x0
    45d8:	asr	x0, x0, #3
    45dc:	str	w0, [sp, #44]
    45e0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    45e4:	add	x0, x0, #0xc08
    45e8:	str	x0, [sp, #64]
    45ec:	mov	w5, #0x0                   	// #0
    45f0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    45f4:	add	x4, x0, #0xc18
    45f8:	ldr	x3, [sp, #64]
    45fc:	adrp	x0, 2000 <opmask_add+0x20>
    4600:	add	x2, x0, #0x248
    4604:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4608:	add	x1, x0, #0xc20
    460c:	ldr	x0, [sp, #24]
    4610:	bl	1360 <Perl_newXS_flags@plt>
    4614:	mov	w5, #0x0                   	// #0
    4618:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    461c:	add	x4, x0, #0xc38
    4620:	ldr	x3, [sp, #64]
    4624:	adrp	x0, 2000 <opmask_add+0x20>
    4628:	add	x2, x0, #0x50c
    462c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4630:	add	x1, x0, #0xc40
    4634:	ldr	x0, [sp, #24]
    4638:	bl	1360 <Perl_newXS_flags@plt>
    463c:	mov	w5, #0x0                   	// #0
    4640:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4644:	add	x4, x0, #0xc58
    4648:	ldr	x3, [sp, #64]
    464c:	adrp	x0, 2000 <opmask_add+0x20>
    4650:	add	x2, x0, #0x91c
    4654:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4658:	add	x1, x0, #0xc60
    465c:	ldr	x0, [sp, #24]
    4660:	bl	1360 <Perl_newXS_flags@plt>
    4664:	mov	w5, #0x0                   	// #0
    4668:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    466c:	add	x4, x0, #0xc18
    4670:	ldr	x3, [sp, #64]
    4674:	adrp	x0, 2000 <opmask_add+0x20>
    4678:	add	x2, x0, #0xbbc
    467c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4680:	add	x1, x0, #0xc78
    4684:	ldr	x0, [sp, #24]
    4688:	bl	1360 <Perl_newXS_flags@plt>
    468c:	mov	w5, #0x0                   	// #0
    4690:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4694:	add	x4, x0, #0xc58
    4698:	ldr	x3, [sp, #64]
    469c:	adrp	x0, 2000 <opmask_add+0x20>
    46a0:	add	x2, x0, #0xd80
    46a4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    46a8:	add	x1, x0, #0xc90
    46ac:	ldr	x0, [sp, #24]
    46b0:	bl	1360 <Perl_newXS_flags@plt>
    46b4:	mov	w5, #0x0                   	// #0
    46b8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    46bc:	add	x4, x0, #0xca8
    46c0:	ldr	x3, [sp, #64]
    46c4:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    46c8:	add	x2, x0, #0x10c
    46cc:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    46d0:	add	x1, x0, #0xcb0
    46d4:	ldr	x0, [sp, #24]
    46d8:	bl	1360 <Perl_newXS_flags@plt>
    46dc:	mov	w5, #0x0                   	// #0
    46e0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    46e4:	add	x4, x0, #0xcc0
    46e8:	ldr	x3, [sp, #64]
    46ec:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    46f0:	add	x2, x0, #0x3fc
    46f4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    46f8:	add	x1, x0, #0xcc8
    46fc:	ldr	x0, [sp, #24]
    4700:	bl	1360 <Perl_newXS_flags@plt>
    4704:	str	x0, [sp, #16]
    4708:	ldr	x0, [sp, #16]
    470c:	ldr	x0, [x0]
    4710:	str	x0, [sp, #72]
    4714:	ldr	x0, [sp, #72]
    4718:	mov	w1, #0x3                   	// #3
    471c:	str	w1, [x0, #40]
    4720:	mov	w5, #0x0                   	// #0
    4724:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4728:	add	x4, x0, #0xcc0
    472c:	ldr	x3, [sp, #64]
    4730:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    4734:	add	x2, x0, #0x3fc
    4738:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    473c:	add	x1, x0, #0xcd8
    4740:	ldr	x0, [sp, #24]
    4744:	bl	1360 <Perl_newXS_flags@plt>
    4748:	str	x0, [sp, #16]
    474c:	ldr	x0, [sp, #16]
    4750:	ldr	x0, [x0]
    4754:	str	x0, [sp, #80]
    4758:	ldr	x0, [sp, #80]
    475c:	mov	w1, #0x2                   	// #2
    4760:	str	w1, [x0, #40]
    4764:	mov	w5, #0x0                   	// #0
    4768:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    476c:	add	x4, x0, #0xcc0
    4770:	ldr	x3, [sp, #64]
    4774:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    4778:	add	x2, x0, #0x3fc
    477c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4780:	add	x1, x0, #0xcf0
    4784:	ldr	x0, [sp, #24]
    4788:	bl	1360 <Perl_newXS_flags@plt>
    478c:	str	x0, [sp, #16]
    4790:	ldr	x0, [sp, #16]
    4794:	ldr	x0, [x0]
    4798:	str	x0, [sp, #88]
    479c:	ldr	x0, [sp, #88]
    47a0:	mov	w1, #0x1                   	// #1
    47a4:	str	w1, [x0, #40]
    47a8:	mov	w5, #0x0                   	// #0
    47ac:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    47b0:	add	x4, x0, #0xcc0
    47b4:	ldr	x3, [sp, #64]
    47b8:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    47bc:	add	x2, x0, #0x3fc
    47c0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    47c4:	add	x1, x0, #0xd00
    47c8:	ldr	x0, [sp, #24]
    47cc:	bl	1360 <Perl_newXS_flags@plt>
    47d0:	str	x0, [sp, #16]
    47d4:	ldr	x0, [sp, #16]
    47d8:	ldr	x0, [x0]
    47dc:	str	x0, [sp, #96]
    47e0:	ldr	x0, [sp, #96]
    47e4:	str	wzr, [x0, #40]
    47e8:	mov	w5, #0x0                   	// #0
    47ec:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    47f0:	add	x4, x0, #0xca8
    47f4:	ldr	x3, [sp, #64]
    47f8:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    47fc:	add	x2, x0, #0x87c
    4800:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4804:	add	x1, x0, #0xd18
    4808:	ldr	x0, [sp, #24]
    480c:	bl	1360 <Perl_newXS_flags@plt>
    4810:	mov	w5, #0x0                   	// #0
    4814:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4818:	add	x4, x0, #0xd28
    481c:	ldr	x3, [sp, #64]
    4820:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    4824:	add	x2, x0, #0xd68
    4828:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    482c:	add	x1, x0, #0xd30
    4830:	ldr	x0, [sp, #24]
    4834:	bl	1360 <Perl_newXS_flags@plt>
    4838:	mov	w5, #0x0                   	// #0
    483c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4840:	add	x4, x0, #0xbc0
    4844:	ldr	x3, [sp, #64]
    4848:	adrp	x0, 3000 <XS_Opcode_opset_to_ops+0x280>
    484c:	add	x2, x0, #0xf1c
    4850:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4854:	add	x1, x0, #0xd48
    4858:	ldr	x0, [sp, #24]
    485c:	bl	1360 <Perl_newXS_flags@plt>
    4860:	mov	w5, #0x0                   	// #0
    4864:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4868:	add	x4, x0, #0xbc0
    486c:	ldr	x3, [sp, #64]
    4870:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4874:	add	x2, x0, #0x10
    4878:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    487c:	add	x1, x0, #0xd60
    4880:	ldr	x0, [sp, #24]
    4884:	bl	1360 <Perl_newXS_flags@plt>
    4888:	mov	w5, #0x0                   	// #0
    488c:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    4890:	add	x4, x0, #0xc18
    4894:	ldr	x3, [sp, #64]
    4898:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    489c:	add	x2, x0, #0x134
    48a0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48a4:	add	x1, x0, #0xd78
    48a8:	ldr	x0, [sp, #24]
    48ac:	bl	1360 <Perl_newXS_flags@plt>
    48b0:	mov	w5, #0x0                   	// #0
    48b4:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48b8:	add	x4, x0, #0xbc0
    48bc:	ldr	x3, [sp, #64]
    48c0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48c4:	add	x2, x0, #0x238
    48c8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48cc:	add	x1, x0, #0xd90
    48d0:	ldr	x0, [sp, #24]
    48d4:	bl	1360 <Perl_newXS_flags@plt>
    48d8:	mov	w5, #0x0                   	// #0
    48dc:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48e0:	add	x4, x0, #0xbc0
    48e4:	ldr	x3, [sp, #64]
    48e8:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48ec:	add	x2, x0, #0x3b8
    48f0:	adrp	x0, 4000 <XS_Opcode_empty_opset+0xe4>
    48f4:	add	x1, x0, #0xda0
    48f8:	ldr	x0, [sp, #24]
    48fc:	bl	1360 <Perl_newXS_flags@plt>
    4900:	mov	x2, #0x18                  	// #24
    4904:	adrp	x0, 16000 <memcpy@GLIBC_2.17>
    4908:	add	x1, x0, #0x170
    490c:	ldr	x0, [sp, #24]
    4910:	bl	1200 <Perl_my_cxt_init@plt>
    4914:	str	x0, [sp, #104]
    4918:	ldr	x0, [sp, #104]
    491c:	mov	x1, #0x32                  	// #50
    4920:	str	x1, [x0, #16]
    4924:	ldr	x0, [sp, #24]
    4928:	bl	1678 <op_names_init>
    492c:	ldr	w1, [sp, #40]
    4930:	ldr	x0, [sp, #24]
    4934:	bl	1250 <Perl_xs_boot_epilog@plt>
    4938:	nop
    493c:	ldp	x29, x30, [sp], #112
    4940:	ret

Disassembly of section .fini:

0000000000004944 <_fini>:
    4944:	stp	x29, x30, [sp, #-16]!
    4948:	mov	x29, sp
    494c:	ldp	x29, x30, [sp], #16
    4950:	ret
