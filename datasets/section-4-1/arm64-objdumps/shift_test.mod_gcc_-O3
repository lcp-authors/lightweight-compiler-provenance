
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//shift_test.mod_gcc_-O3:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x408>:
   0:	sub	sp, sp, #0xa0
   4:	adrp	x1, 0 <grub_mod_init-0x408>
   8:	adrp	x4, 0 <grub_mod_init-0x408>
   c:	adrp	x2, 0 <grub_mod_init-0x408>
  10:	adrp	x6, 0 <grub_mod_init-0x408>
  14:	adrp	x7, 0 <grub_mod_init-0x408>
  18:	stp	x29, x30, [sp, #16]
  1c:	add	x29, sp, #0x10
  20:	adrp	x5, 0 <grub_mod_init-0x408>
  24:	adrp	x3, 0 <grub_mod_init-0x408>
  28:	stp	x21, x22, [sp, #48]
  2c:	mov	x21, x0
  30:	asr	x0, x0, #56
  34:	stp	x23, x24, [sp, #64]
  38:	ldr	x23, [x1]
  3c:	adrp	x1, 0 <grub_mod_init-0x408>
  40:	str	x0, [sp, #112]
  44:	ldr	x0, [x4]
  48:	stp	x19, x20, [sp, #32]
  4c:	add	x22, x23, #0x8
  50:	ldr	x20, [x7]
  54:	stp	x25, x26, [sp, #80]
  58:	add	x25, sp, #0x98
  5c:	ldr	x26, [x6]
  60:	stp	x27, x28, [sp, #96]
  64:	mov	w19, #0x0                   	// #0
  68:	ldr	x27, [x2]
  6c:	str	x0, [sp, #120]
  70:	ldr	x24, [x5]
  74:	mov	w28, #0x1                   	// #1
  78:	ldr	x0, [x3]
  7c:	str	x0, [sp, #128]
  80:	ldr	x0, [x1]
  84:	str	x0, [sp, #136]
  88:	cmp	w19, #0x40
  8c:	mov	x0, #0x0                   	// #0
  90:	mov	x3, #0x0                   	// #0
  94:	lsl	x4, x21, x19
  98:	b.eq	110 <grub_mod_init-0x2f8>  // b.none
  9c:	mov	w1, #0x40                  	// #64
  a0:	mov	w5, #0x1                   	// #1
  a4:	sub	w13, w1, w19
  a8:	mov	w0, #0x0                   	// #0
  ac:	mov	x3, #0x0                   	// #0
  b0:	str	x21, [sp, #152]
  b4:	b	bc <grub_mod_init-0x34c>
  b8:	ldrb	w5, [x23, w7, sxtw]
  bc:	asr	w12, w0, #3
  c0:	add	w1, w0, w19
  c4:	add	w0, w0, #0x1
  c8:	and	w11, w1, #0x7
  cc:	and	w7, w0, #0x7
  d0:	asr	w1, w1, #3
  d4:	ldrb	w12, [x25, w12, sxtw]
  d8:	tst	w5, w12
  dc:	b.eq	f8 <grub_mod_init-0x310>  // b.none
  e0:	str	x3, [sp, #152]
  e4:	ldrb	w3, [x23, w11, sxtw]
  e8:	ldrb	w5, [x25, w1, sxtw]
  ec:	orr	w3, w3, w5
  f0:	strb	w3, [x25, w1, sxtw]
  f4:	ldr	x3, [sp, #152]
  f8:	cmp	w0, w13
  fc:	b.eq	10c <grub_mod_init-0x2fc>  // b.none
 100:	str	x21, [sp, #152]
 104:	cmp	w0, #0x40
 108:	b.ne	b8 <grub_mod_init-0x350>  // b.any
 10c:	mov	x0, x3
 110:	cmp	x4, x3
 114:	stp	x4, x0, [sp]
 118:	mov	w7, w19
 11c:	mov	x1, x20
 120:	cset	w0, eq  // eq = none
 124:	mov	x4, x26
 128:	mov	w3, #0x70                  	// #112
 12c:	mov	x6, x21
 130:	mov	x5, x27
 134:	mov	x2, x22
 138:	bl	0 <grub_test_assert_helper>
 13c:	mov	w3, w28
 140:	mov	w0, w19
 144:	lsr	x7, x21, x19
 148:	mov	w1, #0x0                   	// #0
 14c:	mov	x4, #0x0                   	// #0
 150:	b	158 <grub_mod_init-0x2b0>
 154:	ldrb	w3, [x23, w11, sxtw]
 158:	asr	w13, w0, #3
 15c:	str	x21, [sp, #152]
 160:	add	w0, w0, #0x1
 164:	asr	w5, w1, #3
 168:	and	w12, w1, #0x7
 16c:	and	w11, w0, #0x7
 170:	ldrb	w13, [x25, w13, sxtw]
 174:	add	w1, w1, #0x1
 178:	and	w3, w3, w13
 17c:	tst	w3, #0xff
 180:	b.eq	19c <grub_mod_init-0x26c>  // b.none
 184:	str	x4, [sp, #152]
 188:	ldrb	w3, [x23, w12, sxtw]
 18c:	ldrb	w4, [x25, w5, sxtw]
 190:	orr	w3, w3, w4
 194:	strb	w3, [x25, w5, sxtw]
 198:	ldr	x4, [sp, #152]
 19c:	cmp	w0, #0x40
 1a0:	b.ne	154 <grub_mod_init-0x2b4>  // b.any
 1a4:	cmp	x7, x4
 1a8:	stp	x7, x4, [sp]
 1ac:	cset	w0, eq  // eq = none
 1b0:	ldr	x4, [sp, #120]
 1b4:	mov	x5, x24
 1b8:	mov	x1, x20
 1bc:	mov	w3, #0x74                  	// #116
 1c0:	mov	x6, x21
 1c4:	mov	x2, x22
 1c8:	mov	w7, w19
 1cc:	bl	0 <grub_test_assert_helper>
 1d0:	mov	w1, w19
 1d4:	asr	x5, x21, x19
 1d8:	mov	w3, #0x0                   	// #0
 1dc:	mov	x0, #0x0                   	// #0
 1e0:	b	1e8 <grub_mod_init-0x220>
 1e4:	ldrb	w28, [x23, w7, sxtw]
 1e8:	asr	w12, w1, #3
 1ec:	str	x21, [sp, #152]
 1f0:	add	w1, w1, #0x1
 1f4:	asr	w4, w3, #3
 1f8:	and	w11, w3, #0x7
 1fc:	and	w7, w1, #0x7
 200:	ldrb	w12, [x25, w12, sxtw]
 204:	add	w3, w3, #0x1
 208:	tst	w28, w12
 20c:	b.eq	228 <grub_mod_init-0x1e0>  // b.none
 210:	str	x0, [sp, #152]
 214:	ldrb	w0, [x23, w11, sxtw]
 218:	ldrb	w10, [x25, w4, sxtw]
 21c:	orr	w0, w0, w10
 220:	strb	w0, [x25, w4, sxtw]
 224:	ldr	x0, [sp, #152]
 228:	cmp	w1, #0x40
 22c:	b.ne	1e4 <grub_mod_init-0x224>  // b.any
 230:	ldr	w1, [sp, #112]
 234:	add	w28, w19, #0x1
 238:	tbnz	w1, #31, 280 <grub_mod_init-0x188>
 23c:	cmp	x5, x0
 240:	stp	x5, x0, [sp]
 244:	mov	w7, w19
 248:	ldr	x5, [sp, #128]
 24c:	cset	w0, eq  // eq = none
 250:	ldr	x4, [sp, #136]
 254:	mov	x6, x21
 258:	mov	x2, x22
 25c:	mov	x1, x20
 260:	mov	w3, #0x78                  	// #120
 264:	bl	0 <grub_test_assert_helper>
 268:	cmp	w28, #0x40
 26c:	b.eq	2ec <grub_mod_init-0x11c>  // b.none
 270:	and	w0, w28, #0x7
 274:	mov	w19, w28
 278:	ldrb	w28, [x23, w0, sxtw]
 27c:	b	88 <grub_mod_init-0x380>
 280:	mov	w1, #0x41                  	// #65
 284:	sub	w1, w1, w28
 288:	cmp	w1, #0x40
 28c:	b.eq	2c0 <grub_mod_init-0x148>  // b.none
 290:	asr	w3, w1, #3
 294:	and	w7, w1, #0x7
 298:	str	x0, [sp, #152]
 29c:	add	w1, w1, #0x1
 2a0:	cmp	w1, #0x40
 2a4:	ldrb	w4, [x25, w3, sxtw]
 2a8:	ldrb	w0, [x23, w7, sxtw]
 2ac:	orr	w0, w0, w4
 2b0:	strb	w0, [x25, w3, sxtw]
 2b4:	ldr	x0, [sp, #152]
 2b8:	b.ne	290 <grub_mod_init-0x178>  // b.any
 2bc:	b	23c <grub_mod_init-0x1cc>
 2c0:	ldp	x5, x4, [sp, #128]
 2c4:	cmp	x0, x21
 2c8:	stp	x21, x0, [sp]
 2cc:	mov	x6, x21
 2d0:	mov	x2, x22
 2d4:	mov	x1, x20
 2d8:	cset	w0, eq  // eq = none
 2dc:	mov	w7, #0x0                   	// #0
 2e0:	mov	w3, #0x78                  	// #120
 2e4:	bl	0 <grub_test_assert_helper>
 2e8:	b	270 <grub_mod_init-0x198>
 2ec:	ldp	x29, x30, [sp, #16]
 2f0:	ldp	x19, x20, [sp, #32]
 2f4:	ldp	x21, x22, [sp, #48]
 2f8:	ldp	x23, x24, [sp, #64]
 2fc:	ldp	x25, x26, [sp, #80]
 300:	ldp	x27, x28, [sp, #96]
 304:	add	sp, sp, #0xa0
 308:	ret
 30c:	nop
	...
 350:	stp	x29, x30, [sp, #-48]!
 354:	mov	x0, #0xffffffffffffffff    	// #-1
 358:	mov	x29, sp
 35c:	stp	x19, x20, [sp, #16]
 360:	mov	x20, #0xfa0                 	// #4000
 364:	mov	x19, #0x7                   	// #7
 368:	stp	x21, x22, [sp, #32]
 36c:	bl	0 <grub_mod_init-0x408>
 370:	mov	x0, #0x1                   	// #1
 374:	bl	0 <grub_mod_init-0x408>
 378:	mov	x22, #0x194                 	// #404
 37c:	mov	x0, #0x2                   	// #2
 380:	bl	0 <grub_mod_init-0x408>
 384:	mov	x0, #0x0                   	// #0
 388:	bl	0 <grub_mod_init-0x408>
 38c:	mov	x0, #0x708                 	// #1800
 390:	mov	x21, #0x1                   	// #1
 394:	movk	x0, #0x506, lsl #16
 398:	movk	x0, #0x304, lsl #32
 39c:	movk	x0, #0x102, lsl #48
 3a0:	bl	0 <grub_mod_init-0x408>
 3a4:	nop
 3a8:	add	x0, x19, x19, lsl #1
 3ac:	add	x22, x22, x22, lsl #4
 3b0:	lsl	x1, x19, #3
 3b4:	add	x0, x19, x0, lsl #2
 3b8:	sub	x1, x1, x19
 3bc:	add	x0, x0, x22
 3c0:	add	x19, x19, x1, lsl #2
 3c4:	add	x1, x0, x0, lsl #1
 3c8:	lsl	x1, x1, #3
 3cc:	sub	x1, x1, x0
 3d0:	adds	x19, x1, x19
 3d4:	csel	x19, x19, x21, ne  // ne = any
 3d8:	cmp	x0, #0x0
 3dc:	csel	x22, x0, x21, ne  // ne = any
 3e0:	mov	x0, x22
 3e4:	bl	0 <grub_mod_init-0x408>
 3e8:	mov	x0, x19
 3ec:	bl	0 <grub_mod_init-0x408>
 3f0:	subs	x20, x20, #0x1
 3f4:	b.ne	3a8 <grub_mod_init-0x60>  // b.any
 3f8:	ldp	x19, x20, [sp, #16]
 3fc:	ldp	x21, x22, [sp, #32]
 400:	ldp	x29, x30, [sp], #48
 404:	ret

0000000000000408 <grub_mod_init>:
 408:	adrp	x1, 0 <grub_mod_init-0x408>
 40c:	adrp	x0, 0 <grub_mod_init-0x408>
 410:	ldr	x1, [x1]
 414:	ldr	x0, [x0]
 418:	b	0 <grub_test_register>
 41c:	nop
	...

0000000000000430 <grub_mod_fini>:
 430:	adrp	x0, 0 <grub_mod_init-0x408>
 434:	ldr	x0, [x0]
 438:	b	0 <grub_test_unregister>
 43c:	nop
	...
