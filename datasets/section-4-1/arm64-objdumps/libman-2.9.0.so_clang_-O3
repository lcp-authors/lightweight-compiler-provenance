
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libman-2.9.0.so_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

000000000000a1b8 <.init>:
    a1b8:	stp	x29, x30, [sp, #-16]!
    a1bc:	mov	x29, sp
    a1c0:	bl	aed0 <xgetcwd@plt+0x10>
    a1c4:	ldp	x29, x30, [sp], #16
    a1c8:	ret

Disassembly of section .plt:

000000000000a1d0 <base_len@plt-0x20>:
    a1d0:	stp	x16, x30, [sp, #-16]!
    a1d4:	adrp	x16, 45000 <vasnprintf@@Base+0x14474>
    a1d8:	ldr	x17, [x16, #4088]
    a1dc:	add	x16, x16, #0xff8
    a1e0:	br	x17
    a1e4:	nop
    a1e8:	nop
    a1ec:	nop

000000000000a1f0 <base_len@plt>:
    a1f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a1f4:	ldr	x17, [x16]
    a1f8:	add	x16, x16, #0x0
    a1fc:	br	x17

000000000000a200 <mbrtowc@plt>:
    a200:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a204:	ldr	x17, [x16, #8]
    a208:	add	x16, x16, #0x8
    a20c:	br	x17

000000000000a210 <memcpy@plt>:
    a210:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a214:	ldr	x17, [x16, #16]
    a218:	add	x16, x16, #0x10
    a21c:	br	x17

000000000000a220 <memmove@plt>:
    a220:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a224:	ldr	x17, [x16, #24]
    a228:	add	x16, x16, #0x18
    a22c:	br	x17

000000000000a230 <pthread_rwlockattr_init@plt>:
    a230:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a234:	ldr	x17, [x16, #32]
    a238:	add	x16, x16, #0x20
    a23c:	br	x17

000000000000a240 <_exit@plt>:
    a240:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a244:	ldr	x17, [x16, #40]
    a248:	add	x16, x16, #0x28
    a24c:	br	x17

000000000000a250 <getcwd@plt>:
    a250:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a254:	ldr	x17, [x16, #48]
    a258:	add	x16, x16, #0x30
    a25c:	br	x17

000000000000a260 <same_nameat@plt>:
    a260:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a264:	ldr	x17, [x16, #56]
    a268:	add	x16, x16, #0x38
    a26c:	br	x17

000000000000a270 <fwrite_unlocked@plt>:
    a270:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a274:	ldr	x17, [x16, #64]
    a278:	add	x16, x16, #0x40
    a27c:	br	x17

000000000000a280 <get_canonical_charset_name@plt>:
    a280:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a284:	ldr	x17, [x16, #72]
    a288:	add	x16, x16, #0x48
    a28c:	br	x17

000000000000a290 <strlen@plt>:
    a290:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a294:	ldr	x17, [x16, #80]
    a298:	add	x16, x16, #0x50
    a29c:	br	x17

000000000000a2a0 <exit@plt>:
    a2a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a2a4:	ldr	x17, [x16, #88]
    a2a8:	add	x16, x16, #0x58
    a2ac:	br	x17

000000000000a2b0 <error@plt>:
    a2b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a2b4:	ldr	x17, [x16, #96]
    a2b8:	add	x16, x16, #0x60
    a2bc:	br	x17

000000000000a2c0 <pthread_mutexattr_settype@plt>:
    a2c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a2c4:	ldr	x17, [x16, #104]
    a2c8:	add	x16, x16, #0x68
    a2cc:	br	x17

000000000000a2d0 <fchdir@plt>:
    a2d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a2d4:	ldr	x17, [x16, #112]
    a2d8:	add	x16, x16, #0x70
    a2dc:	br	x17

000000000000a2e0 <perror@plt>:
    a2e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a2e4:	ldr	x17, [x16, #120]
    a2e8:	add	x16, x16, #0x78
    a2ec:	br	x17

000000000000a2f0 <flockfile@plt>:
    a2f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a2f4:	ldr	x17, [x16, #128]
    a2f8:	add	x16, x16, #0x80
    a2fc:	br	x17

000000000000a300 <getegid@plt>:
    a300:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a304:	ldr	x17, [x16, #136]
    a308:	add	x16, x16, #0x88
    a30c:	br	x17

000000000000a310 <wctype@plt>:
    a310:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a314:	ldr	x17, [x16, #144]
    a318:	add	x16, x16, #0x90
    a31c:	br	x17

000000000000a320 <remove_directory@plt>:
    a320:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a324:	ldr	x17, [x16, #152]
    a328:	add	x16, x16, #0x98
    a32c:	br	x17

000000000000a330 <sigprocmask@plt>:
    a330:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a334:	ldr	x17, [x16, #160]
    a338:	add	x16, x16, #0xa0
    a33c:	br	x17

000000000000a340 <rpl_mbrtowc@plt>:
    a340:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a344:	ldr	x17, [x16, #168]
    a348:	add	x16, x16, #0xa8
    a34c:	br	x17

000000000000a350 <geteuid@plt>:
    a350:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a354:	ldr	x17, [x16, #176]
    a358:	add	x16, x16, #0xb0
    a35c:	br	x17

000000000000a360 <get_roff_encoding@plt>:
    a360:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a364:	ldr	x17, [x16, #184]
    a368:	add	x16, x16, #0xb8
    a36c:	br	x17

000000000000a370 <pthread_rwlock_init@plt>:
    a370:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a374:	ldr	x17, [x16, #192]
    a378:	add	x16, x16, #0xc0
    a37c:	br	x17

000000000000a380 <getresuid@plt>:
    a380:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a384:	ldr	x17, [x16, #200]
    a388:	add	x16, x16, #0xc8
    a38c:	br	x17

000000000000a390 <pthread_rwlockattr_setkind_np@plt>:
    a390:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a394:	ldr	x17, [x16, #208]
    a398:	add	x16, x16, #0xd0
    a39c:	br	x17

000000000000a3a0 <chdir_long@plt>:
    a3a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a3a4:	ldr	x17, [x16, #216]
    a3a8:	add	x16, x16, #0xd8
    a3ac:	br	x17

000000000000a3b0 <hash_insert@plt>:
    a3b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a3b4:	ldr	x17, [x16, #224]
    a3b8:	add	x16, x16, #0xe0
    a3bc:	br	x17

000000000000a3c0 <setenv@plt>:
    a3c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a3c4:	ldr	x17, [x16, #232]
    a3c8:	add	x16, x16, #0xe8
    a3cc:	br	x17

000000000000a3d0 <readlink@plt>:
    a3d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a3d4:	ldr	x17, [x16, #240]
    a3d8:	add	x16, x16, #0xf0
    a3dc:	br	x17

000000000000a3e0 <__cxa_finalize@plt>:
    a3e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a3e4:	ldr	x17, [x16, #248]
    a3e8:	add	x16, x16, #0xf8
    a3ec:	br	x17

000000000000a3f0 <sprintf@plt>:
    a3f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a3f4:	ldr	x17, [x16, #256]
    a3f8:	add	x16, x16, #0x100
    a3fc:	br	x17

000000000000a400 <getuid@plt>:
    a400:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a404:	ldr	x17, [x16, #264]
    a408:	add	x16, x16, #0x108
    a40c:	br	x17

000000000000a410 <pipe@plt>:
    a410:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a414:	ldr	x17, [x16, #272]
    a418:	add	x16, x16, #0x110
    a41c:	br	x17

000000000000a420 <opendir@plt>:
    a420:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a424:	ldr	x17, [x16, #280]
    a428:	add	x16, x16, #0x118
    a42c:	br	x17

000000000000a430 <__cxa_atexit@plt>:
    a430:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a434:	ldr	x17, [x16, #288]
    a438:	add	x16, x16, #0x120
    a43c:	br	x17

000000000000a440 <fputc@plt>:
    a440:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a444:	ldr	x17, [x16, #296]
    a448:	add	x16, x16, #0x128
    a44c:	br	x17

000000000000a450 <clock_gettime@plt>:
    a450:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a454:	ldr	x17, [x16, #304]
    a458:	add	x16, x16, #0x130
    a45c:	br	x17

000000000000a460 <qsort@plt>:
    a460:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a464:	ldr	x17, [x16, #312]
    a468:	add	x16, x16, #0x138
    a46c:	br	x17

000000000000a470 <kill@plt>:
    a470:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a474:	ldr	x17, [x16, #320]
    a478:	add	x16, x16, #0x140
    a47c:	br	x17

000000000000a480 <_argp_fmtstream_update@plt>:
    a480:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a484:	ldr	x17, [x16, #328]
    a488:	add	x16, x16, #0x148
    a48c:	br	x17

000000000000a490 <__ctype_tolower_loc@plt>:
    a490:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a494:	ldr	x17, [x16, #336]
    a498:	add	x16, x16, #0x150
    a49c:	br	x17

000000000000a4a0 <snprintf@plt>:
    a4a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a4a4:	ldr	x17, [x16, #344]
    a4a8:	add	x16, x16, #0x158
    a4ac:	br	x17

000000000000a4b0 <mdir_name@plt>:
    a4b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a4b4:	ldr	x17, [x16, #352]
    a4b8:	add	x16, x16, #0x160
    a4bc:	br	x17

000000000000a4c0 <triple_free@plt>:
    a4c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a4c4:	ldr	x17, [x16, #360]
    a4c8:	add	x16, x16, #0x168
    a4cc:	br	x17

000000000000a4d0 <debug@plt>:
    a4d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a4d4:	ldr	x17, [x16, #368]
    a4d8:	add	x16, x16, #0x170
    a4dc:	br	x17

000000000000a4e0 <hash_free@plt>:
    a4e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a4e4:	ldr	x17, [x16, #376]
    a4e8:	add	x16, x16, #0x178
    a4ec:	br	x17

000000000000a4f0 <fclose@plt>:
    a4f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a4f4:	ldr	x17, [x16, #384]
    a4f8:	add	x16, x16, #0x180
    a4fc:	br	x17

000000000000a500 <rpl_regcomp@plt>:
    a500:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a504:	ldr	x17, [x16, #392]
    a508:	add	x16, x16, #0x188
    a50c:	br	x17

000000000000a510 <getpid@plt>:
    a510:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a514:	ldr	x17, [x16, #400]
    a518:	add	x16, x16, #0x190
    a51c:	br	x17

000000000000a520 <nl_langinfo@plt>:
    a520:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a524:	ldr	x17, [x16, #408]
    a528:	add	x16, x16, #0x198
    a52c:	br	x17

000000000000a530 <fopen@plt>:
    a530:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a534:	ldr	x17, [x16, #416]
    a538:	add	x16, x16, #0x1a0
    a53c:	br	x17

000000000000a540 <iswctype@plt>:
    a540:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a544:	ldr	x17, [x16, #424]
    a548:	add	x16, x16, #0x1a8
    a54c:	br	x17

000000000000a550 <malloc@plt>:
    a550:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a554:	ldr	x17, [x16, #432]
    a558:	add	x16, x16, #0x1b0
    a55c:	br	x17

000000000000a560 <record_file@plt>:
    a560:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a564:	ldr	x17, [x16, #440]
    a568:	add	x16, x16, #0x1b8
    a56c:	br	x17

000000000000a570 <futimesat@plt>:
    a570:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a574:	ldr	x17, [x16, #448]
    a578:	add	x16, x16, #0x1c0
    a57c:	br	x17

000000000000a580 <funlockfile@plt>:
    a580:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a584:	ldr	x17, [x16, #456]
    a588:	add	x16, x16, #0x1c8
    a58c:	br	x17

000000000000a590 <stdopen@plt>:
    a590:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a594:	ldr	x17, [x16, #464]
    a598:	add	x16, x16, #0x1d0
    a59c:	br	x17

000000000000a5a0 <open@plt>:
    a5a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a5a4:	ldr	x17, [x16, #472]
    a5a8:	add	x16, x16, #0x1d8
    a5ac:	br	x17

000000000000a5b0 <argp_failure@plt>:
    a5b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a5b4:	ldr	x17, [x16, #480]
    a5b8:	add	x16, x16, #0x1e0
    a5bc:	br	x17

000000000000a5c0 <xrealloc@plt>:
    a5c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a5c4:	ldr	x17, [x16, #488]
    a5c8:	add	x16, x16, #0x1e8
    a5cc:	br	x17

000000000000a5d0 <dir_name@plt>:
    a5d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a5d4:	ldr	x17, [x16, #496]
    a5d8:	add	x16, x16, #0x1f0
    a5dc:	br	x17

000000000000a5e0 <idpriv_temp_drop@plt>:
    a5e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a5e4:	ldr	x17, [x16, #504]
    a5e8:	add	x16, x16, #0x1f8
    a5ec:	br	x17

000000000000a5f0 <sigemptyset@plt>:
    a5f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a5f4:	ldr	x17, [x16, #512]
    a5f8:	add	x16, x16, #0x200
    a5fc:	br	x17

000000000000a600 <futimens@plt>:
    a600:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a604:	ldr	x17, [x16, #520]
    a608:	add	x16, x16, #0x208
    a60c:	br	x17

000000000000a610 <strncmp@plt>:
    a610:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a614:	ldr	x17, [x16, #528]
    a618:	add	x16, x16, #0x210
    a61c:	br	x17

000000000000a620 <bindtextdomain@plt>:
    a620:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a624:	ldr	x17, [x16, #536]
    a628:	add	x16, x16, #0x218
    a62c:	br	x17

000000000000a630 <fstatfs@plt>:
    a630:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a634:	ldr	x17, [x16, #544]
    a638:	add	x16, x16, #0x220
    a63c:	br	x17

000000000000a640 <memset@plt>:
    a640:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a644:	ldr	x17, [x16, #552]
    a648:	add	x16, x16, #0x228
    a64c:	br	x17

000000000000a650 <gettimeofday@plt>:
    a650:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a654:	ldr	x17, [x16, #560]
    a658:	add	x16, x16, #0x230
    a65c:	br	x17

000000000000a660 <xmalloc@plt>:
    a660:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a664:	ldr	x17, [x16, #568]
    a668:	add	x16, x16, #0x238
    a66c:	br	x17

000000000000a670 <getpwnam@plt>:
    a670:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a674:	ldr	x17, [x16, #576]
    a678:	add	x16, x16, #0x240
    a67c:	br	x17

000000000000a680 <xstrdup@plt>:
    a680:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a684:	ldr	x17, [x16, #584]
    a688:	add	x16, x16, #0x248
    a68c:	br	x17

000000000000a690 <sleep@plt>:
    a690:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a694:	ldr	x17, [x16, #592]
    a698:	add	x16, x16, #0x250
    a69c:	br	x17

000000000000a6a0 <same_name@plt>:
    a6a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a6a4:	ldr	x17, [x16, #600]
    a6a8:	add	x16, x16, #0x258
    a6ac:	br	x17

000000000000a6b0 <strerror_r@plt>:
    a6b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a6b4:	ldr	x17, [x16, #608]
    a6b8:	add	x16, x16, #0x260
    a6bc:	br	x17

000000000000a6c0 <calloc@plt>:
    a6c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a6c4:	ldr	x17, [x16, #616]
    a6c8:	add	x16, x16, #0x268
    a6cc:	br	x17

000000000000a6d0 <last_component@plt>:
    a6d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a6d4:	ldr	x17, [x16, #624]
    a6d8:	add	x16, x16, #0x270
    a6dc:	br	x17

000000000000a6e0 <hard_locale@plt>:
    a6e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a6e4:	ldr	x17, [x16, #632]
    a6e8:	add	x16, x16, #0x278
    a6ec:	br	x17

000000000000a6f0 <bcmp@plt>:
    a6f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a6f4:	ldr	x17, [x16, #640]
    a6f8:	add	x16, x16, #0x280
    a6fc:	br	x17

000000000000a700 <hash_insert_if_absent@plt>:
    a700:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a704:	ldr	x17, [x16, #648]
    a708:	add	x16, x16, #0x288
    a70c:	br	x17

000000000000a710 <strcasecmp@plt>:
    a710:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a714:	ldr	x17, [x16, #656]
    a718:	add	x16, x16, #0x290
    a71c:	br	x17

000000000000a720 <readdir@plt>:
    a720:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a724:	ldr	x17, [x16, #664]
    a728:	add	x16, x16, #0x298
    a72c:	br	x17

000000000000a730 <realloc@plt>:
    a730:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a734:	ldr	x17, [x16, #672]
    a738:	add	x16, x16, #0x2a0
    a73c:	br	x17

000000000000a740 <__ctype_toupper_loc@plt>:
    a740:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a744:	ldr	x17, [x16, #680]
    a748:	add	x16, x16, #0x2a8
    a74c:	br	x17

000000000000a750 <hash_initialize@plt>:
    a750:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a754:	ldr	x17, [x16, #688]
    a758:	add	x16, x16, #0x2b0
    a75c:	br	x17

000000000000a760 <try_tempname@plt>:
    a760:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a764:	ldr	x17, [x16, #696]
    a768:	add	x16, x16, #0x2b8
    a76c:	br	x17

000000000000a770 <closedir@plt>:
    a770:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a774:	ldr	x17, [x16, #704]
    a778:	add	x16, x16, #0x2c0
    a77c:	br	x17

000000000000a780 <strerror@plt>:
    a780:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a784:	ldr	x17, [x16, #712]
    a788:	add	x16, x16, #0x2c8
    a78c:	br	x17

000000000000a790 <pthread_mutex_init@plt>:
    a790:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a794:	ldr	x17, [x16, #720]
    a798:	add	x16, x16, #0x2d0
    a79c:	br	x17

000000000000a7a0 <close@plt>:
    a7a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a7a4:	ldr	x17, [x16, #728]
    a7a8:	add	x16, x16, #0x2d8
    a7ac:	br	x17

000000000000a7b0 <sigaction@plt>:
    a7b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a7b4:	ldr	x17, [x16, #736]
    a7b8:	add	x16, x16, #0x2e0
    a7bc:	br	x17

000000000000a7c0 <hash_lookup@plt>:
    a7c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a7c4:	ldr	x17, [x16, #744]
    a7c8:	add	x16, x16, #0x2e8
    a7cc:	br	x17

000000000000a7d0 <strrchr@plt>:
    a7d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a7d4:	ldr	x17, [x16, #752]
    a7d8:	add	x16, x16, #0x2f0
    a7dc:	br	x17

000000000000a7e0 <xalloc_die@plt>:
    a7e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a7e4:	ldr	x17, [x16, #760]
    a7e8:	add	x16, x16, #0x2f8
    a7ec:	br	x17

000000000000a7f0 <memmem@plt>:
    a7f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a7f4:	ldr	x17, [x16, #768]
    a7f8:	add	x16, x16, #0x300
    a7fc:	br	x17

000000000000a800 <__gmon_start__@plt>:
    a800:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a804:	ldr	x17, [x16, #776]
    a808:	add	x16, x16, #0x308
    a80c:	br	x17

000000000000a810 <drop_effective_privs@plt>:
    a810:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a814:	ldr	x17, [x16, #784]
    a818:	add	x16, x16, #0x310
    a81c:	br	x17

000000000000a820 <btowc@plt>:
    a820:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a824:	ldr	x17, [x16, #792]
    a828:	add	x16, x16, #0x318
    a82c:	br	x17

000000000000a830 <mkdtemp@plt>:
    a830:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a834:	ldr	x17, [x16, #800]
    a838:	add	x16, x16, #0x320
    a83c:	br	x17

000000000000a840 <argp_fmtstream_printf@plt>:
    a840:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a844:	ldr	x17, [x16, #808]
    a848:	add	x16, x16, #0x328
    a84c:	br	x17

000000000000a850 <abort@plt>:
    a850:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a854:	ldr	x17, [x16, #816]
    a858:	add	x16, x16, #0x330
    a85c:	br	x17

000000000000a860 <_getopt_long_only_r@plt>:
    a860:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a864:	ldr	x17, [x16, #824]
    a868:	add	x16, x16, #0x338
    a86c:	br	x17

000000000000a870 <hash_rehash@plt>:
    a870:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a874:	ldr	x17, [x16, #832]
    a878:	add	x16, x16, #0x340
    a87c:	br	x17

000000000000a880 <mbsinit@plt>:
    a880:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a884:	ldr	x17, [x16, #840]
    a888:	add	x16, x16, #0x348
    a88c:	br	x17

000000000000a890 <__overflow@plt>:
    a890:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a894:	ldr	x17, [x16, #848]
    a898:	add	x16, x16, #0x350
    a89c:	br	x17

000000000000a8a0 <access@plt>:
    a8a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a8a4:	ldr	x17, [x16, #856]
    a8a8:	add	x16, x16, #0x358
    a8ac:	br	x17

000000000000a8b0 <fdutimens@plt>:
    a8b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a8b4:	ldr	x17, [x16, #864]
    a8b8:	add	x16, x16, #0x360
    a8bc:	br	x17

000000000000a8c0 <hash_pjw_bare@plt>:
    a8c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a8c4:	ldr	x17, [x16, #872]
    a8c8:	add	x16, x16, #0x368
    a8cc:	br	x17

000000000000a8d0 <textdomain@plt>:
    a8d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a8d4:	ldr	x17, [x16, #880]
    a8d8:	add	x16, x16, #0x370
    a8dc:	br	x17

000000000000a8e0 <strsep@plt>:
    a8e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a8e4:	ldr	x17, [x16, #888]
    a8e8:	add	x16, x16, #0x378
    a8ec:	br	x17

000000000000a8f0 <strcmp@plt>:
    a8f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a8f4:	ldr	x17, [x16, #896]
    a8f8:	add	x16, x16, #0x380
    a8fc:	br	x17

000000000000a900 <_getopt_long_r@plt>:
    a900:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a904:	ldr	x17, [x16, #904]
    a908:	add	x16, x16, #0x388
    a90c:	br	x17

000000000000a910 <__ctype_b_loc@plt>:
    a910:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a914:	ldr	x17, [x16, #912]
    a918:	add	x16, x16, #0x390
    a91c:	br	x17

000000000000a920 <rmdir@plt>:
    a920:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a924:	ldr	x17, [x16, #920]
    a928:	add	x16, x16, #0x398
    a92c:	br	x17

000000000000a930 <seen_file@plt>:
    a930:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a934:	ldr	x17, [x16, #928]
    a938:	add	x16, x16, #0x3a0
    a93c:	br	x17

000000000000a940 <strtol@plt>:
    a940:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a944:	ldr	x17, [x16, #936]
    a948:	add	x16, x16, #0x3a8
    a94c:	br	x17

000000000000a950 <chdir@plt>:
    a950:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a954:	ldr	x17, [x16, #944]
    a958:	add	x16, x16, #0x3b0
    a95c:	br	x17

000000000000a960 <dup_safer@plt>:
    a960:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a964:	ldr	x17, [x16, #952]
    a968:	add	x16, x16, #0x3b8
    a96c:	br	x17

000000000000a970 <free@plt>:
    a970:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a974:	ldr	x17, [x16, #960]
    a978:	add	x16, x16, #0x3c0
    a97c:	br	x17

000000000000a980 <renameat2@plt>:
    a980:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a984:	ldr	x17, [x16, #968]
    a988:	add	x16, x16, #0x3c8
    a98c:	br	x17

000000000000a990 <argp_make_fmtstream@plt>:
    a990:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a994:	ldr	x17, [x16, #976]
    a998:	add	x16, x16, #0x3d0
    a99c:	br	x17

000000000000a9a0 <__ctype_get_mb_cur_max@plt>:
    a9a0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a9a4:	ldr	x17, [x16, #984]
    a9a8:	add	x16, x16, #0x3d8
    a9ac:	br	x17

000000000000a9b0 <getgid@plt>:
    a9b0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a9b4:	ldr	x17, [x16, #992]
    a9b8:	add	x16, x16, #0x3e0
    a9bc:	br	x17

000000000000a9c0 <renameat@plt>:
    a9c0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a9c4:	ldr	x17, [x16, #1000]
    a9c8:	add	x16, x16, #0x3e8
    a9cc:	br	x17

000000000000a9d0 <xasprintf@plt>:
    a9d0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a9d4:	ldr	x17, [x16, #1008]
    a9d8:	add	x16, x16, #0x3f0
    a9dc:	br	x17

000000000000a9e0 <vasnprintf@plt>:
    a9e0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a9e4:	ldr	x17, [x16, #1016]
    a9e8:	add	x16, x16, #0x3f8
    a9ec:	br	x17

000000000000a9f0 <printf_fetchargs@plt>:
    a9f0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    a9f4:	ldr	x17, [x16, #1024]
    a9f8:	add	x16, x16, #0x400
    a9fc:	br	x17

000000000000aa00 <nanosleep@plt>:
    aa00:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa04:	ldr	x17, [x16, #1032]
    aa08:	add	x16, x16, #0x408
    aa0c:	br	x17

000000000000aa10 <vasprintf@plt>:
    aa10:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa14:	ldr	x17, [x16, #1040]
    aa18:	add	x16, x16, #0x410
    aa1c:	br	x17

000000000000aa20 <rpl_getopt_internal@plt>:
    aa20:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa24:	ldr	x17, [x16, #1048]
    aa28:	add	x16, x16, #0x418
    aa2c:	br	x17

000000000000aa30 <strndup@plt>:
    aa30:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa34:	ldr	x17, [x16, #1056]
    aa38:	add	x16, x16, #0x420
    aa3c:	br	x17

000000000000aa40 <strspn@plt>:
    aa40:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa44:	ldr	x17, [x16, #1064]
    aa48:	add	x16, x16, #0x428
    aa4c:	br	x17

000000000000aa50 <rpl_ioctl@plt>:
    aa50:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa54:	ldr	x17, [x16, #1072]
    aa58:	add	x16, x16, #0x430
    aa5c:	br	x17

000000000000aa60 <strchr@plt>:
    aa60:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa64:	ldr	x17, [x16, #1080]
    aa68:	add	x16, x16, #0x438
    aa6c:	br	x17

000000000000aa70 <areadlink_with_size@plt>:
    aa70:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa74:	ldr	x17, [x16, #1088]
    aa78:	add	x16, x16, #0x440
    aa7c:	br	x17

000000000000aa80 <argp_error@plt>:
    aa80:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa84:	ldr	x17, [x16, #1096]
    aa88:	add	x16, x16, #0x448
    aa8c:	br	x17

000000000000aa90 <memrchr@plt>:
    aa90:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aa94:	ldr	x17, [x16, #1104]
    aa98:	add	x16, x16, #0x450
    aa9c:	br	x17

000000000000aaa0 <utimensat@plt>:
    aaa0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aaa4:	ldr	x17, [x16, #1112]
    aaa8:	add	x16, x16, #0x458
    aaac:	br	x17

000000000000aab0 <pipeline_peekline@plt>:
    aab0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aab4:	ldr	x17, [x16, #1120]
    aab8:	add	x16, x16, #0x460
    aabc:	br	x17

000000000000aac0 <fwrite@plt>:
    aac0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aac4:	ldr	x17, [x16, #1128]
    aac8:	add	x16, x16, #0x468
    aacc:	br	x17

000000000000aad0 <rpl_fcntl@plt>:
    aad0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aad4:	ldr	x17, [x16, #1136]
    aad8:	add	x16, x16, #0x470
    aadc:	br	x17

000000000000aae0 <fnmatch@plt>:
    aae0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aae4:	ldr	x17, [x16, #1144]
    aae8:	add	x16, x16, #0x478
    aaec:	br	x17

000000000000aaf0 <fcntl@plt>:
    aaf0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aaf4:	ldr	x17, [x16, #1152]
    aaf8:	add	x16, x16, #0x480
    aafc:	br	x17

000000000000ab00 <idpriv_drop@plt>:
    ab00:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab04:	ldr	x17, [x16, #1160]
    ab08:	add	x16, x16, #0x488
    ab0c:	br	x17

000000000000ab10 <rpl_regerror@plt>:
    ab10:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab14:	ldr	x17, [x16, #1168]
    ab18:	add	x16, x16, #0x490
    ab1c:	br	x17

000000000000ab20 <pthread_mutex_destroy@plt>:
    ab20:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab24:	ldr	x17, [x16, #1176]
    ab28:	add	x16, x16, #0x498
    ab2c:	br	x17

000000000000ab30 <strcpy@plt>:
    ab30:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab34:	ldr	x17, [x16, #1184]
    ab38:	add	x16, x16, #0x4a0
    ab3c:	br	x17

000000000000ab40 <hash_pjw@plt>:
    ab40:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab44:	ldr	x17, [x16, #1192]
    ab48:	add	x16, x16, #0x4a8
    ab4c:	br	x17

000000000000ab50 <_argp_input@plt>:
    ab50:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab54:	ldr	x17, [x16, #1200]
    ab58:	add	x16, x16, #0x4b0
    ab5c:	br	x17

000000000000ab60 <__lxstat@plt>:
    ab60:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab64:	ldr	x17, [x16, #1208]
    ab68:	add	x16, x16, #0x4b8
    ab6c:	br	x17

000000000000ab70 <dup_safer_flag@plt>:
    ab70:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab74:	ldr	x17, [x16, #1216]
    ab78:	add	x16, x16, #0x4c0
    ab7c:	br	x17

000000000000ab80 <memchr@plt>:
    ab80:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab84:	ldr	x17, [x16, #1224]
    ab88:	add	x16, x16, #0x4c8
    ab8c:	br	x17

000000000000ab90 <idpriv_temp_restore@plt>:
    ab90:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ab94:	ldr	x17, [x16, #1232]
    ab98:	add	x16, x16, #0x4d0
    ab9c:	br	x17

000000000000aba0 <new_string_list@plt>:
    aba0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aba4:	ldr	x17, [x16, #1240]
    aba8:	add	x16, x16, #0x4d8
    abac:	br	x17

000000000000abb0 <getresgid@plt>:
    abb0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    abb4:	ldr	x17, [x16, #1248]
    abb8:	add	x16, x16, #0x4e0
    abbc:	br	x17

000000000000abc0 <isatty@plt>:
    abc0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    abc4:	ldr	x17, [x16, #1256]
    abc8:	add	x16, x16, #0x4e8
    abcc:	br	x17

000000000000abd0 <xzalloc@plt>:
    abd0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    abd4:	ldr	x17, [x16, #1264]
    abd8:	add	x16, x16, #0x4f0
    abdc:	br	x17

000000000000abe0 <xstrndup@plt>:
    abe0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    abe4:	ldr	x17, [x16, #1272]
    abe8:	add	x16, x16, #0x4f8
    abec:	br	x17

000000000000abf0 <pthread_mutexattr_init@plt>:
    abf0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    abf4:	ldr	x17, [x16, #1280]
    abf8:	add	x16, x16, #0x500
    abfc:	br	x17

000000000000ac00 <setresuid@plt>:
    ac00:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac04:	ldr	x17, [x16, #1288]
    ac08:	add	x16, x16, #0x508
    ac0c:	br	x17

000000000000ac10 <utimes@plt>:
    ac10:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac14:	ldr	x17, [x16, #1296]
    ac18:	add	x16, x16, #0x510
    ac1c:	br	x17

000000000000ac20 <iswalnum@plt>:
    ac20:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac24:	ldr	x17, [x16, #1304]
    ac28:	add	x16, x16, #0x518
    ac2c:	br	x17

000000000000ac30 <__fxstat@plt>:
    ac30:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac34:	ldr	x17, [x16, #1312]
    ac38:	add	x16, x16, #0x520
    ac3c:	br	x17

000000000000ac40 <pthread_mutexattr_destroy@plt>:
    ac40:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac44:	ldr	x17, [x16, #1320]
    ac48:	add	x16, x16, #0x528
    ac4c:	br	x17

000000000000ac50 <strchrnul@plt>:
    ac50:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac54:	ldr	x17, [x16, #1328]
    ac58:	add	x16, x16, #0x530
    ac5c:	br	x17

000000000000ac60 <strstr@plt>:
    ac60:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac64:	ldr	x17, [x16, #1336]
    ac68:	add	x16, x16, #0x538
    ac6c:	br	x17

000000000000ac70 <_argp_fmtstream_ensure@plt>:
    ac70:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac74:	ldr	x17, [x16, #1344]
    ac78:	add	x16, x16, #0x540
    ac7c:	br	x17

000000000000ac80 <argp_state_help@plt>:
    ac80:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac84:	ldr	x17, [x16, #1352]
    ac88:	add	x16, x16, #0x548
    ac8c:	br	x17

000000000000ac90 <dcgettext@plt>:
    ac90:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ac94:	ldr	x17, [x16, #1360]
    ac98:	add	x16, x16, #0x550
    ac9c:	br	x17

000000000000aca0 <pthread_rwlockattr_destroy@plt>:
    aca0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aca4:	ldr	x17, [x16, #1368]
    aca8:	add	x16, x16, #0x558
    acac:	br	x17

000000000000acb0 <vsnprintf@plt>:
    acb0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    acb4:	ldr	x17, [x16, #1376]
    acb8:	add	x16, x16, #0x560
    acbc:	br	x17

000000000000acc0 <argp_fmtstream_free@plt>:
    acc0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    acc4:	ldr	x17, [x16, #1384]
    acc8:	add	x16, x16, #0x568
    accc:	br	x17

000000000000acd0 <get_locale_charset@plt>:
    acd0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    acd4:	ldr	x17, [x16, #1392]
    acd8:	add	x16, x16, #0x570
    acdc:	br	x17

000000000000ace0 <xvasprintf@plt>:
    ace0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ace4:	ldr	x17, [x16, #1400]
    ace8:	add	x16, x16, #0x578
    acec:	br	x17

000000000000acf0 <fputs_unlocked@plt>:
    acf0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    acf4:	ldr	x17, [x16, #1408]
    acf8:	add	x16, x16, #0x580
    acfc:	br	x17

000000000000ad00 <sigaddset@plt>:
    ad00:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad04:	ldr	x17, [x16, #1416]
    ad08:	add	x16, x16, #0x588
    ad0c:	br	x17

000000000000ad10 <pathsearch_executable@plt>:
    ad10:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad14:	ldr	x17, [x16, #1424]
    ad18:	add	x16, x16, #0x590
    ad1c:	br	x17

000000000000ad20 <towupper@plt>:
    ad20:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad24:	ldr	x17, [x16, #1432]
    ad28:	add	x16, x16, #0x598
    ad2c:	br	x17

000000000000ad30 <fd_safer_flag@plt>:
    ad30:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad34:	ldr	x17, [x16, #1440]
    ad38:	add	x16, x16, #0x5a0
    ad3c:	br	x17

000000000000ad40 <strcspn@plt>:
    ad40:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad44:	ldr	x17, [x16, #1448]
    ad48:	add	x16, x16, #0x5a8
    ad4c:	br	x17

000000000000ad50 <_getopt_internal_r@plt>:
    ad50:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad54:	ldr	x17, [x16, #1456]
    ad58:	add	x16, x16, #0x5b0
    ad5c:	br	x17

000000000000ad60 <vfprintf@plt>:
    ad60:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad64:	ldr	x17, [x16, #1464]
    ad68:	add	x16, x16, #0x5b8
    ad6c:	br	x17

000000000000ad70 <openat@plt>:
    ad70:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad74:	ldr	x17, [x16, #1472]
    ad78:	add	x16, x16, #0x5c0
    ad7c:	br	x17

000000000000ad80 <__assert_fail@plt>:
    ad80:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad84:	ldr	x17, [x16, #1480]
    ad88:	add	x16, x16, #0x5c8
    ad8c:	br	x17

000000000000ad90 <__errno_location@plt>:
    ad90:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ad94:	ldr	x17, [x16, #1488]
    ad98:	add	x16, x16, #0x5d0
    ad9c:	br	x17

000000000000ada0 <setresgid@plt>:
    ada0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ada4:	ldr	x17, [x16, #1496]
    ada8:	add	x16, x16, #0x5d8
    adac:	br	x17

000000000000adb0 <getenv@plt>:
    adb0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    adb4:	ldr	x17, [x16, #1504]
    adb8:	add	x16, x16, #0x5e0
    adbc:	br	x17

000000000000adc0 <locale_charset@plt>:
    adc0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    adc4:	ldr	x17, [x16, #1512]
    adc8:	add	x16, x16, #0x5e8
    adcc:	br	x17

000000000000add0 <__xstat@plt>:
    add0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    add4:	ldr	x17, [x16, #1520]
    add8:	add	x16, x16, #0x5f0
    addc:	br	x17

000000000000ade0 <pthread_mutex_lock@plt>:
    ade0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ade4:	ldr	x17, [x16, #1528]
    ade8:	add	x16, x16, #0x5f8
    adec:	br	x17

000000000000adf0 <__getdelim@plt>:
    adf0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    adf4:	ldr	x17, [x16, #1536]
    adf8:	add	x16, x16, #0x600
    adfc:	br	x17

000000000000ae00 <printf_parse@plt>:
    ae00:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae04:	ldr	x17, [x16, #1544]
    ae08:	add	x16, x16, #0x608
    ae0c:	br	x17

000000000000ae10 <fd_safer@plt>:
    ae10:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae14:	ldr	x17, [x16, #1552]
    ae18:	add	x16, x16, #0x610
    ae1c:	br	x17

000000000000ae20 <pthread_mutex_unlock@plt>:
    ae20:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae24:	ldr	x17, [x16, #1560]
    ae28:	add	x16, x16, #0x618
    ae2c:	br	x17

000000000000ae30 <unlink@plt>:
    ae30:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae34:	ldr	x17, [x16, #1568]
    ae38:	add	x16, x16, #0x620
    ae3c:	br	x17

000000000000ae40 <mkdir@plt>:
    ae40:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae44:	ldr	x17, [x16, #1576]
    ae48:	add	x16, x16, #0x628
    ae4c:	br	x17

000000000000ae50 <towlower@plt>:
    ae50:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae54:	ldr	x17, [x16, #1584]
    ae58:	add	x16, x16, #0x630
    ae5c:	br	x17

000000000000ae60 <gettime@plt>:
    ae60:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae64:	ldr	x17, [x16, #1592]
    ae68:	add	x16, x16, #0x638
    ae6c:	br	x17

000000000000ae70 <fprintf@plt>:
    ae70:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae74:	ldr	x17, [x16, #1600]
    ae78:	add	x16, x16, #0x640
    ae7c:	br	x17

000000000000ae80 <ioctl@plt>:
    ae80:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae84:	ldr	x17, [x16, #1608]
    ae88:	add	x16, x16, #0x648
    ae8c:	br	x17

000000000000ae90 <setlocale@plt>:
    ae90:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    ae94:	ldr	x17, [x16, #1616]
    ae98:	add	x16, x16, #0x650
    ae9c:	br	x17

000000000000aea0 <__fxstatat@plt>:
    aea0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aea4:	ldr	x17, [x16, #1624]
    aea8:	add	x16, x16, #0x658
    aeac:	br	x17

000000000000aeb0 <wcrtomb@plt>:
    aeb0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aeb4:	ldr	x17, [x16, #1632]
    aeb8:	add	x16, x16, #0x660
    aebc:	br	x17

000000000000aec0 <xgetcwd@plt>:
    aec0:	adrp	x16, 46000 <base_len@@Base+0x30a14>
    aec4:	ldr	x17, [x16, #1640]
    aec8:	add	x16, x16, #0x668
    aecc:	br	x17

Disassembly of section .text:

000000000000aed0 <appendstr@@Base-0xd4>:
    aed0:	adrp	x0, 45000 <vasnprintf@@Base+0x14474>
    aed4:	ldr	x0, [x0, #3904]
    aed8:	cbz	x0, aee0 <xgetcwd@plt+0x20>
    aedc:	b	a800 <__gmon_start__@plt>
    aee0:	ret
    aee4:	nop
    aee8:	adrp	x0, 46000 <base_len@@Base+0x30a14>
    aeec:	add	x0, x0, #0x6c0
    aef0:	adrp	x1, 46000 <base_len@@Base+0x30a14>
    aef4:	add	x1, x1, #0x6c0
    aef8:	cmp	x1, x0
    aefc:	b.eq	af14 <xgetcwd@plt+0x54>  // b.none
    af00:	adrp	x1, 45000 <vasnprintf@@Base+0x14474>
    af04:	ldr	x1, [x1, #3776]
    af08:	cbz	x1, af14 <xgetcwd@plt+0x54>
    af0c:	mov	x16, x1
    af10:	br	x16
    af14:	ret
    af18:	adrp	x0, 46000 <base_len@@Base+0x30a14>
    af1c:	add	x0, x0, #0x6c0
    af20:	adrp	x1, 46000 <base_len@@Base+0x30a14>
    af24:	add	x1, x1, #0x6c0
    af28:	sub	x1, x1, x0
    af2c:	lsr	x2, x1, #63
    af30:	add	x1, x2, x1, asr #3
    af34:	cmp	xzr, x1, asr #1
    af38:	asr	x1, x1, #1
    af3c:	b.eq	af54 <xgetcwd@plt+0x94>  // b.none
    af40:	adrp	x2, 45000 <vasnprintf@@Base+0x14474>
    af44:	ldr	x2, [x2, #4024]
    af48:	cbz	x2, af54 <xgetcwd@plt+0x94>
    af4c:	mov	x16, x2
    af50:	br	x16
    af54:	ret
    af58:	stp	x29, x30, [sp, #-32]!
    af5c:	mov	x29, sp
    af60:	str	x19, [sp, #16]
    af64:	adrp	x19, 46000 <base_len@@Base+0x30a14>
    af68:	ldrb	w0, [x19, #1728]
    af6c:	cbnz	w0, af94 <xgetcwd@plt+0xd4>
    af70:	adrp	x0, 45000 <vasnprintf@@Base+0x14474>
    af74:	ldr	x0, [x0, #3800]
    af78:	cbz	x0, af88 <xgetcwd@plt+0xc8>
    af7c:	adrp	x0, 46000 <base_len@@Base+0x30a14>
    af80:	ldr	x0, [x0, #1648]
    af84:	bl	a3e0 <__cxa_finalize@plt>
    af88:	bl	aee8 <xgetcwd@plt+0x28>
    af8c:	mov	w0, #0x1                   	// #1
    af90:	strb	w0, [x19, #1728]
    af94:	ldr	x19, [sp, #16]
    af98:	ldp	x29, x30, [sp], #32
    af9c:	ret
    afa0:	b	af18 <xgetcwd@plt+0x58>

000000000000afa4 <appendstr@@Base>:
    afa4:	sub	sp, sp, #0x120
    afa8:	stp	x29, x30, [sp, #224]
    afac:	stp	x20, x19, [sp, #272]
    afb0:	add	x29, sp, #0xe0
    afb4:	mov	x19, x0
    afb8:	stp	x28, x23, [sp, #240]
    afbc:	stp	x22, x21, [sp, #256]
    afc0:	stp	x1, x2, [x29, #-88]
    afc4:	stp	x3, x4, [x29, #-72]
    afc8:	stp	x5, x6, [x29, #-56]
    afcc:	stur	x7, [x29, #-40]
    afd0:	stp	q0, q1, [sp]
    afd4:	stp	q2, q3, [sp, #32]
    afd8:	stp	q4, q5, [sp, #64]
    afdc:	stp	q6, q7, [sp, #96]
    afe0:	cbz	x0, aff4 <appendstr@@Base+0x50>
    afe4:	mov	x0, x19
    afe8:	bl	a290 <strlen@plt>
    afec:	mov	x20, x0
    aff0:	b	aff8 <appendstr@@Base+0x54>
    aff4:	mov	x20, xzr
    aff8:	mov	x8, #0xffffffffffffffc8    	// #-56
    affc:	mov	x10, sp
    b000:	movk	x8, #0xff80, lsl #32
    b004:	sub	x11, x29, #0x58
    b008:	add	x10, x10, #0x80
    b00c:	add	x9, x29, #0x40
    b010:	add	x21, x20, #0x1
    b014:	add	x22, x11, #0x38
    b018:	stp	x10, x8, [x29, #-16]
    b01c:	mov	w8, #0xffffffc8            	// #-56
    b020:	stp	x9, x22, [x29, #-32]
    b024:	tbnz	w8, #31, b030 <appendstr@@Base+0x8c>
    b028:	mov	w23, w8
    b02c:	b	b050 <appendstr@@Base+0xac>
    b030:	add	w23, w8, #0x8
    b034:	cmn	w8, #0x8
    b038:	stur	w23, [x29, #-8]
    b03c:	b.gt	b050 <appendstr@@Base+0xac>
    b040:	add	x8, x22, w8, sxtw
    b044:	ldr	x0, [x8]
    b048:	cbnz	x0, b064 <appendstr@@Base+0xc0>
    b04c:	b	b078 <appendstr@@Base+0xd4>
    b050:	ldur	x8, [x29, #-32]
    b054:	add	x9, x8, #0x8
    b058:	stur	x9, [x29, #-32]
    b05c:	ldr	x0, [x8]
    b060:	cbz	x0, b078 <appendstr@@Base+0xd4>
    b064:	bl	a290 <strlen@plt>
    b068:	add	x21, x0, x21
    b06c:	mov	w8, w23
    b070:	tbz	w8, #31, b028 <appendstr@@Base+0x84>
    b074:	b	b030 <appendstr@@Base+0x8c>
    b078:	mov	x0, x19
    b07c:	mov	x1, x21
    b080:	bl	a5c0 <xrealloc@plt>
    b084:	sub	x9, x29, #0x58
    b088:	mov	x10, sp
    b08c:	mov	x11, #0xffffffffffffffc8    	// #-56
    b090:	mov	x19, x0
    b094:	add	x20, x0, x20
    b098:	add	x8, x29, #0x40
    b09c:	movk	x11, #0xff80, lsl #32
    b0a0:	add	x9, x9, #0x38
    b0a4:	add	x10, x10, #0x80
    b0a8:	stp	x8, x9, [x29, #-32]
    b0ac:	stp	x10, x11, [x29, #-16]
    b0b0:	ldursw	x8, [x29, #-8]
    b0b4:	tbz	w8, #31, b0dc <appendstr@@Base+0x138>
    b0b8:	add	w9, w8, #0x8
    b0bc:	cmn	w8, #0x8
    b0c0:	stur	w9, [x29, #-8]
    b0c4:	b.gt	b0dc <appendstr@@Base+0x138>
    b0c8:	ldur	x9, [x29, #-24]
    b0cc:	add	x8, x9, x8
    b0d0:	ldr	x21, [x8]
    b0d4:	cbnz	x21, b0f0 <appendstr@@Base+0x14c>
    b0d8:	b	b114 <appendstr@@Base+0x170>
    b0dc:	ldur	x8, [x29, #-32]
    b0e0:	add	x9, x8, #0x8
    b0e4:	stur	x9, [x29, #-32]
    b0e8:	ldr	x21, [x8]
    b0ec:	cbz	x21, b114 <appendstr@@Base+0x170>
    b0f0:	mov	x0, x20
    b0f4:	mov	x1, x21
    b0f8:	bl	ab30 <strcpy@plt>
    b0fc:	mov	x0, x21
    b100:	bl	a290 <strlen@plt>
    b104:	add	x20, x20, x0
    b108:	ldursw	x8, [x29, #-8]
    b10c:	tbz	w8, #31, b0dc <appendstr@@Base+0x138>
    b110:	b	b0b8 <appendstr@@Base+0x114>
    b114:	mov	x0, x19
    b118:	ldp	x20, x19, [sp, #272]
    b11c:	ldp	x22, x21, [sp, #256]
    b120:	ldp	x28, x23, [sp, #240]
    b124:	ldp	x29, x30, [sp, #224]
    b128:	add	sp, sp, #0x120
    b12c:	ret

000000000000b130 <do_cleanups_sigsafe@@Base>:
    b130:	stp	x29, x30, [sp, #-48]!
    b134:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b138:	add	x8, x8, #0x6cc
    b13c:	stp	x20, x19, [sp, #32]
    b140:	ldp	w19, w8, [x8]
    b144:	str	x21, [sp, #16]
    b148:	mov	x29, sp
    b14c:	cmp	w19, w8
    b150:	b.hi	b1c0 <do_cleanups_sigsafe@@Base+0x90>  // b.pmore
    b154:	cbz	w19, b188 <do_cleanups_sigsafe@@Base+0x58>
    b158:	sub	w8, w19, #0x1
    b15c:	mov	w9, #0x18                  	// #24
    b160:	umull	x20, w8, w9
    b164:	adrp	x21, 46000 <base_len@@Base+0x30a14>
    b168:	cbnz	w0, b1a4 <do_cleanups_sigsafe@@Base+0x74>
    b16c:	ldr	x8, [x21, #1752]
    b170:	add	x8, x8, x20
    b174:	ldp	x9, x0, [x8]
    b178:	blr	x9
    b17c:	sub	w19, w19, #0x1
    b180:	sub	x20, x20, #0x18
    b184:	cbnz	w19, b16c <do_cleanups_sigsafe@@Base+0x3c>
    b188:	ldp	x20, x19, [sp, #32]
    b18c:	ldr	x21, [sp, #16]
    b190:	ldp	x29, x30, [sp], #48
    b194:	ret
    b198:	sub	w19, w19, #0x1
    b19c:	sub	x20, x20, #0x18
    b1a0:	cbz	w19, b188 <do_cleanups_sigsafe@@Base+0x58>
    b1a4:	ldr	x8, [x21, #1752]
    b1a8:	add	x8, x8, x20
    b1ac:	ldr	w9, [x8, #16]
    b1b0:	cbz	w9, b198 <do_cleanups_sigsafe@@Base+0x68>
    b1b4:	ldp	x9, x0, [x8]
    b1b8:	blr	x9
    b1bc:	b	b198 <do_cleanups_sigsafe@@Base+0x68>
    b1c0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b1c4:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    b1c8:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    b1cc:	add	x0, x0, #0x840
    b1d0:	add	x1, x1, #0x84e
    b1d4:	add	x3, x3, #0x858
    b1d8:	mov	w2, #0xa9                  	// #169
    b1dc:	bl	ad80 <__assert_fail@plt>

000000000000b1e0 <do_cleanups@@Base>:
    b1e0:	stp	x29, x30, [sp, #-48]!
    b1e4:	stp	x20, x19, [sp, #32]
    b1e8:	adrp	x19, 46000 <base_len@@Base+0x30a14>
    b1ec:	add	x19, x19, #0x6cc
    b1f0:	ldp	w20, w8, [x19]
    b1f4:	stp	x22, x21, [sp, #16]
    b1f8:	mov	x29, sp
    b1fc:	cmp	w20, w8
    b200:	b.hi	b254 <do_cleanups@@Base+0x74>  // b.pmore
    b204:	cbz	w20, b234 <do_cleanups@@Base+0x54>
    b208:	sub	w8, w20, #0x1
    b20c:	mov	w9, #0x18                  	// #24
    b210:	umull	x21, w8, w9
    b214:	adrp	x22, 46000 <base_len@@Base+0x30a14>
    b218:	ldr	x8, [x22, #1752]
    b21c:	add	x8, x8, x21
    b220:	ldp	x9, x0, [x8]
    b224:	blr	x9
    b228:	sub	w20, w20, #0x1
    b22c:	sub	x21, x21, #0x18
    b230:	cbnz	w20, b218 <do_cleanups@@Base+0x38>
    b234:	ldur	x0, [x19, #12]
    b238:	str	xzr, [x19]
    b23c:	bl	a970 <free@plt>
    b240:	stur	xzr, [x19, #12]
    b244:	ldp	x20, x19, [sp, #32]
    b248:	ldp	x22, x21, [sp, #16]
    b24c:	ldp	x29, x30, [sp], #48
    b250:	ret
    b254:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b258:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    b25c:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    b260:	add	x0, x0, #0x840
    b264:	add	x1, x1, #0x84e
    b268:	add	x3, x3, #0x858
    b26c:	mov	w2, #0xa9                  	// #169
    b270:	bl	ad80 <__assert_fail@plt>

000000000000b274 <push_cleanup@@Base>:
    b274:	sub	sp, sp, #0xd0
    b278:	stp	x22, x21, [sp, #176]
    b27c:	adrp	x22, 46000 <base_len@@Base+0x30a14>
    b280:	add	x22, x22, #0x6cc
    b284:	ldp	w8, w9, [x22]
    b288:	stp	x29, x30, [sp, #160]
    b28c:	stp	x20, x19, [sp, #192]
    b290:	add	x29, sp, #0xa0
    b294:	cmp	w8, w9
    b298:	b.hi	b4d8 <push_cleanup@@Base+0x264>  // b.pmore
    b29c:	adrp	x10, 46000 <base_len@@Base+0x30a14>
    b2a0:	ldrb	w10, [x10, #1736]
    b2a4:	mov	w19, w2
    b2a8:	mov	x20, x1
    b2ac:	mov	x21, x0
    b2b0:	tbnz	w10, #0, b2d8 <push_cleanup@@Base+0x64>
    b2b4:	adrp	x0, 45000 <vasnprintf@@Base+0x14474>
    b2b8:	ldr	x0, [x0, #3840]
    b2bc:	bl	31820 <vasnprintf@@Base+0xc94>
    b2c0:	cbnz	w0, b38c <push_cleanup@@Base+0x118>
    b2c4:	adrp	x10, 46000 <base_len@@Base+0x30a14>
    b2c8:	add	x10, x10, #0x6c8
    b2cc:	ldp	w8, w9, [x10, #4]
    b2d0:	mov	w11, #0x1                   	// #1
    b2d4:	strb	w11, [x10]
    b2d8:	cmp	w8, w9
    b2dc:	b.ne	b310 <push_cleanup@@Base+0x9c>  // b.any
    b2e0:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b2e4:	ldr	x0, [x8, #1752]
    b2e8:	cbz	x0, b378 <push_cleanup@@Base+0x104>
    b2ec:	add	w8, w9, #0x1
    b2f0:	mov	w9, #0x18                  	// #24
    b2f4:	umull	x1, w8, w9
    b2f8:	bl	a5c0 <xrealloc@plt>
    b2fc:	cbz	x0, b38c <push_cleanup@@Base+0x118>
    b300:	ldp	w8, w9, [x22]
    b304:	stur	x0, [x22, #12]
    b308:	add	w9, w9, #0x1
    b30c:	str	w9, [x22, #4]
    b310:	cmp	w8, w9
    b314:	b.cs	b4f8 <push_cleanup@@Base+0x284>  // b.hs, b.nlast
    b318:	ldur	x9, [x22, #12]
    b31c:	mov	w10, #0x18                  	// #24
    b320:	add	w11, w8, #0x1
    b324:	add	x2, x22, #0x14
    b328:	umaddl	x8, w8, w10, x9
    b32c:	mov	w0, #0x1                   	// #1
    b330:	mov	x1, xzr
    b334:	stp	x21, x20, [x8]
    b338:	str	w19, [x8, #16]
    b33c:	str	w11, [x22]
    b340:	bl	a7b0 <sigaction@plt>
    b344:	cbnz	w0, b370 <push_cleanup@@Base+0xfc>
    b348:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b34c:	ldr	x8, [x8, #1760]
    b350:	add	x20, sp, #0x8
    b354:	cbz	x8, b3a4 <push_cleanup@@Base+0x130>
    b358:	adrp	x2, 46000 <base_len@@Base+0x30a14>
    b35c:	add	x2, x2, #0x778
    b360:	mov	w0, #0x2                   	// #2
    b364:	mov	x1, xzr
    b368:	bl	a7b0 <sigaction@plt>
    b36c:	cbz	w0, b3fc <push_cleanup@@Base+0x188>
    b370:	mov	w0, wzr
    b374:	b	b390 <push_cleanup@@Base+0x11c>
    b378:	add	w8, w9, #0x1
    b37c:	mov	w9, #0x18                  	// #24
    b380:	umull	x0, w8, w9
    b384:	bl	a660 <xmalloc@plt>
    b388:	cbnz	x0, b300 <push_cleanup@@Base+0x8c>
    b38c:	mov	w0, #0xffffffff            	// #-1
    b390:	ldp	x20, x19, [sp, #192]
    b394:	ldp	x22, x21, [sp, #176]
    b398:	ldp	x29, x30, [sp, #160]
    b39c:	add	sp, sp, #0xd0
    b3a0:	ret
    b3a4:	add	x8, sp, #0x8
    b3a8:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b3ac:	movi	v0.2d, #0x0
    b3b0:	add	x9, x9, #0x6d4
    b3b4:	add	x0, x8, #0x8
    b3b8:	stur	q0, [x20, #136]
    b3bc:	stp	q0, q0, [sp, #112]
    b3c0:	stp	q0, q0, [sp, #80]
    b3c4:	stp	q0, q0, [sp, #48]
    b3c8:	stp	q0, q0, [sp, #16]
    b3cc:	str	x9, [sp, #8]
    b3d0:	bl	a5f0 <sigemptyset@plt>
    b3d4:	adrp	x2, 46000 <base_len@@Base+0x30a14>
    b3d8:	add	x2, x2, #0x6e0
    b3dc:	add	x1, sp, #0x8
    b3e0:	mov	w0, #0x1                   	// #1
    b3e4:	str	wzr, [sp, #144]
    b3e8:	bl	a7b0 <sigaction@plt>
    b3ec:	mov	w8, w0
    b3f0:	mov	w0, wzr
    b3f4:	cbnz	w8, b390 <push_cleanup@@Base+0x11c>
    b3f8:	b	b358 <push_cleanup@@Base+0xe4>
    b3fc:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b400:	ldr	x8, [x8, #1912]
    b404:	cbz	x8, b480 <push_cleanup@@Base+0x20c>
    b408:	adrp	x19, 46000 <base_len@@Base+0x30a14>
    b40c:	add	x19, x19, #0x810
    b410:	mov	w0, #0xf                   	// #15
    b414:	mov	x1, xzr
    b418:	mov	x2, x19
    b41c:	bl	a7b0 <sigaction@plt>
    b420:	mov	w8, w0
    b424:	mov	w0, wzr
    b428:	cbnz	w8, b390 <push_cleanup@@Base+0x11c>
    b42c:	ldr	x8, [x19]
    b430:	cbnz	x8, b390 <push_cleanup@@Base+0x11c>
    b434:	add	x8, sp, #0x8
    b438:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b43c:	movi	v0.2d, #0x0
    b440:	add	x9, x9, #0x6d4
    b444:	add	x0, x8, #0x8
    b448:	stur	q0, [x20, #136]
    b44c:	stp	q0, q0, [sp, #112]
    b450:	stp	q0, q0, [sp, #80]
    b454:	stp	q0, q0, [sp, #48]
    b458:	stp	q0, q0, [sp, #16]
    b45c:	str	x9, [sp, #8]
    b460:	bl	a5f0 <sigemptyset@plt>
    b464:	adrp	x2, 46000 <base_len@@Base+0x30a14>
    b468:	add	x2, x2, #0x810
    b46c:	add	x1, sp, #0x8
    b470:	mov	w0, #0xf                   	// #15
    b474:	str	wzr, [sp, #144]
    b478:	bl	a7b0 <sigaction@plt>
    b47c:	b	b370 <push_cleanup@@Base+0xfc>
    b480:	add	x8, sp, #0x8
    b484:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b488:	movi	v0.2d, #0x0
    b48c:	add	x9, x9, #0x6d4
    b490:	add	x0, x8, #0x8
    b494:	stur	q0, [x20, #136]
    b498:	stp	q0, q0, [sp, #112]
    b49c:	stp	q0, q0, [sp, #80]
    b4a0:	stp	q0, q0, [sp, #48]
    b4a4:	stp	q0, q0, [sp, #16]
    b4a8:	str	x9, [sp, #8]
    b4ac:	bl	a5f0 <sigemptyset@plt>
    b4b0:	adrp	x2, 46000 <base_len@@Base+0x30a14>
    b4b4:	add	x2, x2, #0x778
    b4b8:	add	x1, sp, #0x8
    b4bc:	mov	w0, #0x2                   	// #2
    b4c0:	str	wzr, [sp, #144]
    b4c4:	bl	a7b0 <sigaction@plt>
    b4c8:	mov	w8, w0
    b4cc:	mov	w0, wzr
    b4d0:	cbnz	w8, b390 <push_cleanup@@Base+0x11c>
    b4d4:	b	b408 <push_cleanup@@Base+0x194>
    b4d8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b4dc:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    b4e0:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    b4e4:	add	x0, x0, #0x840
    b4e8:	add	x1, x1, #0x84e
    b4ec:	add	x3, x3, #0x876
    b4f0:	mov	w2, #0xc8                  	// #200
    b4f4:	bl	ad80 <__assert_fail@plt>
    b4f8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b4fc:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    b500:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    b504:	add	x0, x0, #0x8a1
    b508:	add	x1, x1, #0x84e
    b50c:	add	x3, x3, #0x876
    b510:	mov	w2, #0xe0                  	// #224
    b514:	bl	ad80 <__assert_fail@plt>

000000000000b518 <pop_cleanup@@Base>:
    b518:	stp	x29, x30, [sp, #-16]!
    b51c:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b520:	ldr	w9, [x8, #1740]
    b524:	mov	x29, sp
    b528:	cbz	w9, b5d0 <pop_cleanup@@Base+0xb8>
    b52c:	adrp	x11, 46000 <base_len@@Base+0x30a14>
    b530:	ldr	x11, [x11, #1752]
    b534:	mov	w13, #0x18                  	// #24
    b538:	mov	x10, xzr
    b53c:	sub	x14, x9, #0x1
    b540:	madd	x12, x9, x13, x11
    b544:	b	b558 <pop_cleanup@@Base+0x40>
    b548:	sub	x10, x10, #0x1
    b54c:	cmn	w9, w10
    b550:	sub	x12, x12, #0x18
    b554:	b.eq	b5c0 <pop_cleanup@@Base+0xa8>  // b.none
    b558:	add	w15, w14, w10
    b55c:	umull	x16, w15, w13
    b560:	ldr	x16, [x11, x16]
    b564:	cmp	x16, x0
    b568:	b.ne	b548 <pop_cleanup@@Base+0x30>  // b.any
    b56c:	madd	x15, x15, x13, x11
    b570:	ldr	x15, [x15, #8]
    b574:	cmp	x15, x1
    b578:	b.ne	b548 <pop_cleanup@@Base+0x30>  // b.any
    b57c:	add	w13, w9, w10
    b580:	cmp	w9, w13
    b584:	b.ls	b5b4 <pop_cleanup@@Base+0x9c>  // b.plast
    b588:	mov	w13, #0xffffffff            	// #-1
    b58c:	add	x13, x9, x13
    b590:	mov	w14, #0x18                  	// #24
    b594:	ldr	x16, [x12, #16]
    b598:	ldr	q0, [x12], #24
    b59c:	add	w15, w13, w10
    b5a0:	adds	x10, x10, #0x1
    b5a4:	umaddl	x15, w15, w14, x11
    b5a8:	str	x16, [x15, #16]
    b5ac:	str	q0, [x15]
    b5b0:	b.cc	b594 <pop_cleanup@@Base+0x7c>  // b.lo, b.ul, b.last
    b5b4:	subs	w9, w9, #0x1
    b5b8:	str	w9, [x8, #1740]
    b5bc:	b.eq	b5c8 <pop_cleanup@@Base+0xb0>  // b.none
    b5c0:	ldp	x29, x30, [sp], #16
    b5c4:	ret
    b5c8:	ldp	x29, x30, [sp], #16
    b5cc:	b	b5f0 <pop_cleanup@@Base+0xd8>
    b5d0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b5d4:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    b5d8:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    b5dc:	add	x0, x0, #0x8ae
    b5e0:	add	x1, x1, #0x84e
    b5e4:	add	x3, x3, #0x8b6
    b5e8:	mov	w2, #0xf5                  	// #245
    b5ec:	bl	ad80 <__assert_fail@plt>
    b5f0:	sub	sp, sp, #0xb0
    b5f4:	add	x2, sp, #0x8
    b5f8:	mov	w0, #0x1                   	// #1
    b5fc:	mov	x1, xzr
    b600:	stp	x29, x30, [sp, #160]
    b604:	add	x29, sp, #0xa0
    b608:	bl	a7b0 <sigaction@plt>
    b60c:	cbnz	w0, b638 <pop_cleanup@@Base+0x120>
    b610:	ldr	x8, [sp, #8]
    b614:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b618:	add	x9, x9, #0x6d4
    b61c:	cmp	x8, x9
    b620:	b.ne	b638 <pop_cleanup@@Base+0x120>  // b.any
    b624:	adrp	x1, 46000 <base_len@@Base+0x30a14>
    b628:	add	x1, x1, #0x6e0
    b62c:	mov	w0, #0x1                   	// #1
    b630:	mov	x2, xzr
    b634:	bl	a7b0 <sigaction@plt>
    b638:	add	x2, sp, #0x8
    b63c:	mov	w0, #0x2                   	// #2
    b640:	mov	x1, xzr
    b644:	bl	a7b0 <sigaction@plt>
    b648:	cbnz	w0, b674 <pop_cleanup@@Base+0x15c>
    b64c:	ldr	x8, [sp, #8]
    b650:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b654:	add	x9, x9, #0x6d4
    b658:	cmp	x8, x9
    b65c:	b.ne	b674 <pop_cleanup@@Base+0x15c>  // b.any
    b660:	adrp	x1, 46000 <base_len@@Base+0x30a14>
    b664:	add	x1, x1, #0x778
    b668:	mov	w0, #0x2                   	// #2
    b66c:	mov	x2, xzr
    b670:	bl	a7b0 <sigaction@plt>
    b674:	add	x2, sp, #0x8
    b678:	mov	w0, #0xf                   	// #15
    b67c:	mov	x1, xzr
    b680:	bl	a7b0 <sigaction@plt>
    b684:	cbz	w0, b694 <pop_cleanup@@Base+0x17c>
    b688:	ldp	x29, x30, [sp, #160]
    b68c:	add	sp, sp, #0xb0
    b690:	ret
    b694:	ldr	x8, [sp, #8]
    b698:	adrp	x9, b000 <appendstr@@Base+0x5c>
    b69c:	add	x9, x9, #0x6d4
    b6a0:	cmp	x8, x9
    b6a4:	b.ne	b688 <pop_cleanup@@Base+0x170>  // b.any
    b6a8:	adrp	x1, 46000 <base_len@@Base+0x30a14>
    b6ac:	add	x1, x1, #0x810
    b6b0:	mov	w0, #0xf                   	// #15
    b6b4:	mov	x2, xzr
    b6b8:	bl	a7b0 <sigaction@plt>
    b6bc:	ldp	x29, x30, [sp, #160]
    b6c0:	add	sp, sp, #0xb0
    b6c4:	ret

000000000000b6c8 <pop_all_cleanups@@Base>:
    b6c8:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b6cc:	str	wzr, [x8, #1740]
    b6d0:	b	b5f0 <pop_cleanup@@Base+0xd8>
    b6d4:	sub	sp, sp, #0x160
    b6d8:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    b6dc:	add	x8, x8, #0x6cc
    b6e0:	stp	x20, x19, [sp, #336]
    b6e4:	ldp	w20, w8, [x8]
    b6e8:	stp	x29, x30, [sp, #288]
    b6ec:	str	x28, [sp, #304]
    b6f0:	stp	x22, x21, [sp, #320]
    b6f4:	cmp	w20, w8
    b6f8:	add	x29, sp, #0x120
    b6fc:	b.ls	b720 <pop_all_cleanups@@Base+0x58>  // b.plast
    b700:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b704:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    b708:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    b70c:	add	x0, x0, #0x840
    b710:	add	x1, x1, #0x84e
    b714:	add	x3, x3, #0x858
    b718:	mov	w2, #0xa9                  	// #169
    b71c:	bl	ad80 <__assert_fail@plt>
    b720:	mov	w19, w0
    b724:	cbz	w20, b75c <pop_all_cleanups@@Base+0x94>
    b728:	sub	w8, w20, #0x1
    b72c:	mov	w9, #0x18                  	// #24
    b730:	umull	x21, w8, w9
    b734:	adrp	x22, 46000 <base_len@@Base+0x30a14>
    b738:	ldr	x8, [x22, #1752]
    b73c:	add	x8, x8, x21
    b740:	ldr	w9, [x8, #16]
    b744:	cbz	w9, b750 <pop_all_cleanups@@Base+0x88>
    b748:	ldp	x9, x0, [x8]
    b74c:	blr	x9
    b750:	sub	w20, w20, #0x1
    b754:	sub	x21, x21, #0x18
    b758:	cbnz	w20, b738 <pop_all_cleanups@@Base+0x70>
    b75c:	add	x8, sp, #0x80
    b760:	movi	v0.2d, #0x0
    b764:	orr	x0, x8, #0x8
    b768:	str	xzr, [sp, #272]
    b76c:	stp	q0, q0, [sp, #240]
    b770:	stp	q0, q0, [sp, #208]
    b774:	stp	q0, q0, [sp, #176]
    b778:	stp	q0, q0, [sp, #144]
    b77c:	str	q0, [sp, #128]
    b780:	bl	a5f0 <sigemptyset@plt>
    b784:	add	x1, sp, #0x80
    b788:	mov	w0, w19
    b78c:	mov	x2, xzr
    b790:	str	wzr, [sp, #264]
    b794:	bl	a7b0 <sigaction@plt>
    b798:	cbnz	w0, b7dc <pop_all_cleanups@@Base+0x114>
    b79c:	mov	x0, sp
    b7a0:	bl	a5f0 <sigemptyset@plt>
    b7a4:	cbnz	w0, b7dc <pop_all_cleanups@@Base+0x114>
    b7a8:	mov	x0, sp
    b7ac:	mov	w1, w19
    b7b0:	bl	ad00 <sigaddset@plt>
    b7b4:	cbnz	w0, b7dc <pop_all_cleanups@@Base+0x114>
    b7b8:	mov	x1, sp
    b7bc:	mov	w0, #0x1                   	// #1
    b7c0:	mov	x2, xzr
    b7c4:	bl	a330 <sigprocmask@plt>
    b7c8:	cbnz	w0, b7dc <pop_all_cleanups@@Base+0x114>
    b7cc:	bl	a510 <getpid@plt>
    b7d0:	mov	w1, w19
    b7d4:	bl	a470 <kill@plt>
    b7d8:	bl	a850 <abort@plt>
    b7dc:	mov	w0, #0x2                   	// #2
    b7e0:	bl	a240 <_exit@plt>

000000000000b7e4 <init_debug@@Base>:
    b7e4:	stp	x29, x30, [sp, #-16]!
    b7e8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b7ec:	add	x0, x0, #0x8dc
    b7f0:	mov	x29, sp
    b7f4:	bl	adb0 <getenv@plt>
    b7f8:	cbz	x0, b80c <init_debug@@Base+0x28>
    b7fc:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
    b800:	add	x1, x1, #0x5fb
    b804:	bl	a8f0 <strcmp@plt>
    b808:	cbz	w0, b814 <init_debug@@Base+0x30>
    b80c:	ldp	x29, x30, [sp], #16
    b810:	ret
    b814:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    b818:	ldr	x8, [x8, #3808]
    b81c:	mov	w9, #0x1                   	// #1
    b820:	strb	w9, [x8]
    b824:	ldp	x29, x30, [sp], #16
    b828:	ret

000000000000b82c <debug@@Base>:
    b82c:	sub	sp, sp, #0x140
    b830:	stp	x29, x30, [sp, #288]
    b834:	str	x28, [sp, #304]
    b838:	stp	x1, x2, [sp, #136]
    b83c:	stp	x3, x4, [sp, #152]
    b840:	stp	x5, x6, [sp, #168]
    b844:	str	x7, [sp, #184]
    b848:	stp	q0, q1, [sp]
    b84c:	stp	q2, q3, [sp, #32]
    b850:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    b854:	ldr	x9, [x9, #3808]
    b858:	add	x29, sp, #0x120
    b85c:	stp	q4, q5, [sp, #64]
    b860:	stp	q6, q7, [sp, #96]
    b864:	ldrb	w10, [x9]
    b868:	cbz	w10, b8a0 <debug@@Base+0x74>
    b86c:	mov	x10, #0xffffffffffffffc8    	// #-56
    b870:	mov	x12, sp
    b874:	add	x13, sp, #0x88
    b878:	movk	x10, #0xff80, lsl #32
    b87c:	add	x11, x29, #0x20
    b880:	add	x12, x12, #0x80
    b884:	add	x13, x13, #0x38
    b888:	stp	x12, x10, [x29, #-48]
    b88c:	stp	x11, x13, [x29, #-64]
    b890:	ldrb	w9, [x9]
    b894:	ldp	q0, q1, [x29, #-64]
    b898:	stp	q0, q1, [x29, #-96]
    b89c:	cbnz	w9, b8b0 <debug@@Base+0x84>
    b8a0:	ldr	x28, [sp, #304]
    b8a4:	ldp	x29, x30, [sp, #288]
    b8a8:	add	sp, sp, #0x140
    b8ac:	ret
    b8b0:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    b8b4:	ldr	x9, [x9, #3816]
    b8b8:	mov	x8, x0
    b8bc:	ldp	q0, q1, [x29, #-96]
    b8c0:	sub	x2, x29, #0x20
    b8c4:	ldr	x0, [x9]
    b8c8:	mov	x1, x8
    b8cc:	stp	q0, q1, [x29, #-32]
    b8d0:	bl	ad60 <vfprintf@plt>
    b8d4:	ldr	x28, [sp, #304]
    b8d8:	ldp	x29, x30, [sp, #288]
    b8dc:	add	sp, sp, #0x140
    b8e0:	ret

000000000000b8e4 <debug_error@@Base>:
    b8e4:	sub	sp, sp, #0x140
    b8e8:	stp	x29, x30, [sp, #288]
    b8ec:	str	x28, [sp, #304]
    b8f0:	stp	x1, x2, [sp, #136]
    b8f4:	stp	x3, x4, [sp, #152]
    b8f8:	stp	x5, x6, [sp, #168]
    b8fc:	str	x7, [sp, #184]
    b900:	stp	q0, q1, [sp]
    b904:	stp	q2, q3, [sp, #32]
    b908:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    b90c:	ldr	x9, [x9, #3808]
    b910:	add	x29, sp, #0x120
    b914:	stp	q4, q5, [sp, #64]
    b918:	stp	q6, q7, [sp, #96]
    b91c:	ldrb	w10, [x9]
    b920:	cbz	w10, b974 <debug_error@@Base+0x90>
    b924:	mov	x10, #0xffffffffffffffc8    	// #-56
    b928:	mov	x12, sp
    b92c:	add	x13, sp, #0x88
    b930:	movk	x10, #0xff80, lsl #32
    b934:	add	x11, x29, #0x20
    b938:	add	x12, x12, #0x80
    b93c:	add	x13, x13, #0x38
    b940:	stp	x12, x10, [x29, #-48]
    b944:	stp	x11, x13, [x29, #-64]
    b948:	ldrb	w9, [x9]
    b94c:	ldp	q0, q1, [x29, #-64]
    b950:	stp	q0, q1, [x29, #-96]
    b954:	cbnz	w9, b984 <debug_error@@Base+0xa0>
    b958:	bl	ad90 <__errno_location@plt>
    b95c:	ldr	w0, [x0]
    b960:	bl	a780 <strerror@plt>
    b964:	mov	x1, x0
    b968:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    b96c:	add	x0, x0, #0x9cf
    b970:	bl	a4d0 <debug@plt>
    b974:	ldr	x28, [sp, #304]
    b978:	ldp	x29, x30, [sp, #288]
    b97c:	add	sp, sp, #0x140
    b980:	ret
    b984:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    b988:	ldr	x9, [x9, #3816]
    b98c:	mov	x8, x0
    b990:	ldp	q0, q1, [x29, #-96]
    b994:	sub	x2, x29, #0x20
    b998:	ldr	x0, [x9]
    b99c:	mov	x1, x8
    b9a0:	stp	q0, q1, [x29, #-32]
    b9a4:	bl	ad60 <vfprintf@plt>
    b9a8:	b	b958 <debug_error@@Base+0x74>

000000000000b9ac <get_groff_preconv@@Base>:
    b9ac:	stp	x29, x30, [sp, #-32]!
    b9b0:	stp	x20, x19, [sp, #16]
    b9b4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    b9b8:	ldr	x20, [x20, #3832]
    b9bc:	mov	x29, sp
    b9c0:	ldr	x19, [x20]
    b9c4:	cbnz	x19, ba00 <get_groff_preconv@@Base+0x54>
    b9c8:	adrp	x19, 31000 <vasnprintf@@Base+0x474>
    b9cc:	add	x19, x19, #0x8e6
    b9d0:	mov	x0, x19
    b9d4:	bl	ad10 <pathsearch_executable@plt>
    b9d8:	tbnz	w0, #0, b9fc <get_groff_preconv@@Base+0x50>
    b9dc:	adrp	x19, 31000 <vasnprintf@@Base+0x474>
    b9e0:	add	x19, x19, #0x8e7
    b9e4:	mov	x0, x19
    b9e8:	bl	ad10 <pathsearch_executable@plt>
    b9ec:	adrp	x8, 33000 <vasnprintf@@Base+0x2474>
    b9f0:	add	x8, x8, #0xeac
    b9f4:	tst	w0, #0x1
    b9f8:	csel	x19, x19, x8, ne  // ne = any
    b9fc:	str	x19, [x20]
    ba00:	ldrb	w8, [x19]
    ba04:	cmp	w8, #0x0
    ba08:	csel	x0, xzr, x19, eq  // eq = none
    ba0c:	ldp	x20, x19, [sp, #16]
    ba10:	ldp	x29, x30, [sp], #32
    ba14:	ret

000000000000ba18 <get_page_encoding@@Base>:
    ba18:	stp	x29, x30, [sp, #-48]!
    ba1c:	str	x21, [sp, #16]
    ba20:	stp	x20, x19, [sp, #32]
    ba24:	mov	x29, sp
    ba28:	cbz	x0, ba38 <get_page_encoding@@Base+0x20>
    ba2c:	ldrb	w8, [x0]
    ba30:	mov	x19, x0
    ba34:	cbnz	w8, ba4c <get_page_encoding@@Base+0x34>
    ba38:	mov	w0, #0x5                   	// #5
    ba3c:	mov	x1, xzr
    ba40:	bl	ae90 <setlocale@plt>
    ba44:	mov	x19, x0
    ba48:	cbz	x0, badc <get_page_encoding@@Base+0xc4>
    ba4c:	mov	w1, #0x2e                  	// #46
    ba50:	mov	x0, x19
    ba54:	bl	aa60 <strchr@plt>
    ba58:	cbz	x0, baa8 <get_page_encoding@@Base+0x90>
    ba5c:	add	x19, x0, #0x1
    ba60:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    ba64:	add	x1, x1, #0x8ef
    ba68:	mov	x0, x19
    ba6c:	bl	ad40 <strcspn@plt>
    ba70:	mov	x1, x0
    ba74:	mov	x0, x19
    ba78:	bl	abe0 <xstrndup@plt>
    ba7c:	mov	x19, x0
    ba80:	bl	a280 <get_canonical_charset_name@plt>
    ba84:	bl	a680 <xstrdup@plt>
    ba88:	mov	x20, x0
    ba8c:	mov	x0, x19
    ba90:	bl	a970 <free@plt>
    ba94:	mov	x0, x20
    ba98:	ldp	x20, x19, [sp, #32]
    ba9c:	ldr	x21, [sp, #16]
    baa0:	ldp	x29, x30, [sp], #48
    baa4:	ret
    baa8:	adrp	x20, 31000 <vasnprintf@@Base+0x474>
    baac:	adrp	x21, 44000 <vasnprintf@@Base+0x13474>
    bab0:	add	x20, x20, #0xa40
    bab4:	add	x21, x21, #0xc88
    bab8:	mov	x0, x20
    babc:	bl	a290 <strlen@plt>
    bac0:	mov	x2, x0
    bac4:	mov	x0, x20
    bac8:	mov	x1, x19
    bacc:	bl	a610 <strncmp@plt>
    bad0:	cbz	w0, baf4 <get_page_encoding@@Base+0xdc>
    bad4:	ldr	x20, [x21], #16
    bad8:	cbnz	x20, bab8 <get_page_encoding@@Base+0xa0>
    badc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bae0:	add	x0, x0, #0xf53
    bae4:	ldp	x20, x19, [sp, #32]
    bae8:	ldr	x21, [sp, #16]
    baec:	ldp	x29, x30, [sp], #48
    baf0:	b	a680 <xstrdup@plt>
    baf4:	ldur	x0, [x21, #-8]
    baf8:	ldp	x20, x19, [sp, #32]
    bafc:	ldr	x21, [sp, #16]
    bb00:	ldp	x29, x30, [sp], #48
    bb04:	b	a680 <xstrdup@plt>

000000000000bb08 <get_canonical_charset_name@@Base>:
    bb08:	stp	x29, x30, [sp, #-48]!
    bb0c:	str	x21, [sp, #16]
    bb10:	stp	x20, x19, [sp, #32]
    bb14:	mov	x29, sp
    bb18:	mov	x20, x0
    bb1c:	bl	a680 <xstrdup@plt>
    bb20:	ldrb	w21, [x0]
    bb24:	mov	x19, x0
    bb28:	cbz	w21, bb50 <get_canonical_charset_name@@Base+0x48>
    bb2c:	bl	a740 <__ctype_toupper_loc@plt>
    bb30:	add	x8, x19, #0x1
    bb34:	ldr	x9, [x0]
    bb38:	and	x10, x21, #0xff
    bb3c:	ldrb	w21, [x8]
    bb40:	ldr	w9, [x9, x10, lsl #2]
    bb44:	sturb	w9, [x8, #-1]
    bb48:	add	x8, x8, #0x1
    bb4c:	cbnz	w21, bb34 <get_canonical_charset_name@@Base+0x2c>
    bb50:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bb54:	add	x0, x0, #0xb27
    bb58:	mov	x1, x19
    bb5c:	bl	a8f0 <strcmp@plt>
    bb60:	cbz	w0, beb8 <get_canonical_charset_name@@Base+0x3b0>
    bb64:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bb68:	add	x0, x0, #0xb2d
    bb6c:	mov	x1, x19
    bb70:	bl	a8f0 <strcmp@plt>
    bb74:	cbz	w0, bec4 <get_canonical_charset_name@@Base+0x3bc>
    bb78:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bb7c:	add	x0, x0, #0xb33
    bb80:	mov	x1, x19
    bb84:	bl	a8f0 <strcmp@plt>
    bb88:	cbz	w0, bed0 <get_canonical_charset_name@@Base+0x3c8>
    bb8c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bb90:	add	x0, x0, #0xb44
    bb94:	mov	x1, x19
    bb98:	bl	a8f0 <strcmp@plt>
    bb9c:	cbz	w0, bedc <get_canonical_charset_name@@Base+0x3d4>
    bba0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bba4:	add	x0, x0, #0xb55
    bba8:	mov	x1, x19
    bbac:	bl	a8f0 <strcmp@plt>
    bbb0:	cbz	w0, bee8 <get_canonical_charset_name@@Base+0x3e0>
    bbb4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bbb8:	add	x0, x0, #0xb5b
    bbbc:	mov	x1, x19
    bbc0:	bl	a8f0 <strcmp@plt>
    bbc4:	cbz	w0, bef4 <get_canonical_charset_name@@Base+0x3ec>
    bbc8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bbcc:	add	x0, x0, #0xb6c
    bbd0:	mov	x1, x19
    bbd4:	bl	a8f0 <strcmp@plt>
    bbd8:	cbz	w0, bf00 <get_canonical_charset_name@@Base+0x3f8>
    bbdc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bbe0:	add	x0, x0, #0xb72
    bbe4:	mov	x1, x19
    bbe8:	bl	a8f0 <strcmp@plt>
    bbec:	cbz	w0, bf0c <get_canonical_charset_name@@Base+0x404>
    bbf0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bbf4:	add	x0, x0, #0xb83
    bbf8:	mov	x1, x19
    bbfc:	bl	a8f0 <strcmp@plt>
    bc00:	cbz	w0, bf18 <get_canonical_charset_name@@Base+0x410>
    bc04:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc08:	add	x0, x0, #0xb89
    bc0c:	mov	x1, x19
    bc10:	bl	a8f0 <strcmp@plt>
    bc14:	cbz	w0, bf24 <get_canonical_charset_name@@Base+0x41c>
    bc18:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc1c:	add	x0, x0, #0xb9c
    bc20:	mov	x1, x19
    bc24:	bl	a8f0 <strcmp@plt>
    bc28:	cbz	w0, bf30 <get_canonical_charset_name@@Base+0x428>
    bc2c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc30:	add	x0, x0, #0xbaf
    bc34:	mov	x1, x19
    bc38:	bl	a8f0 <strcmp@plt>
    bc3c:	cbz	w0, bf3c <get_canonical_charset_name@@Base+0x434>
    bc40:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc44:	add	x0, x0, #0xbb6
    bc48:	mov	x1, x19
    bc4c:	bl	a8f0 <strcmp@plt>
    bc50:	cbz	w0, bf48 <get_canonical_charset_name@@Base+0x440>
    bc54:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc58:	add	x0, x0, #0xbc9
    bc5c:	mov	x1, x19
    bc60:	bl	a8f0 <strcmp@plt>
    bc64:	cbz	w0, bf54 <get_canonical_charset_name@@Base+0x44c>
    bc68:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc6c:	add	x0, x0, #0xbdc
    bc70:	mov	x1, x19
    bc74:	bl	a8f0 <strcmp@plt>
    bc78:	cbz	w0, bf60 <get_canonical_charset_name@@Base+0x458>
    bc7c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc80:	add	x0, x0, #0xcdd
    bc84:	mov	x1, x19
    bc88:	bl	a8f0 <strcmp@plt>
    bc8c:	cbz	w0, bf6c <get_canonical_charset_name@@Base+0x464>
    bc90:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bc94:	add	x0, x0, #0xbef
    bc98:	mov	x1, x19
    bc9c:	bl	a8f0 <strcmp@plt>
    bca0:	cbz	w0, bf78 <get_canonical_charset_name@@Base+0x470>
    bca4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bca8:	add	x0, x0, #0xbf5
    bcac:	mov	x1, x19
    bcb0:	bl	a8f0 <strcmp@plt>
    bcb4:	cbz	w0, bf84 <get_canonical_charset_name@@Base+0x47c>
    bcb8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bcbc:	add	x0, x0, #0xc00
    bcc0:	mov	x1, x19
    bcc4:	bl	a8f0 <strcmp@plt>
    bcc8:	cbz	w0, bf90 <get_canonical_charset_name@@Base+0x488>
    bccc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bcd0:	add	x0, x0, #0xc0d
    bcd4:	mov	x1, x19
    bcd8:	bl	a8f0 <strcmp@plt>
    bcdc:	cbz	w0, bf9c <get_canonical_charset_name@@Base+0x494>
    bce0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bce4:	add	x0, x0, #0xc13
    bce8:	mov	x1, x19
    bcec:	bl	a8f0 <strcmp@plt>
    bcf0:	cbz	w0, bfa8 <get_canonical_charset_name@@Base+0x4a0>
    bcf4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bcf8:	add	x0, x0, #0xc19
    bcfc:	mov	x1, x19
    bd00:	bl	a8f0 <strcmp@plt>
    bd04:	cbz	w0, bfb4 <get_canonical_charset_name@@Base+0x4ac>
    bd08:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd0c:	add	x0, x0, #0xc26
    bd10:	mov	x1, x19
    bd14:	bl	a8f0 <strcmp@plt>
    bd18:	cbz	w0, bfc0 <get_canonical_charset_name@@Base+0x4b8>
    bd1c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd20:	add	x0, x0, #0xc2d
    bd24:	mov	x1, x19
    bd28:	bl	a8f0 <strcmp@plt>
    bd2c:	cbz	w0, bfcc <get_canonical_charset_name@@Base+0x4c4>
    bd30:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd34:	add	x0, x0, #0xc37
    bd38:	mov	x1, x19
    bd3c:	bl	a8f0 <strcmp@plt>
    bd40:	cbz	w0, bfd8 <get_canonical_charset_name@@Base+0x4d0>
    bd44:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd48:	add	x0, x0, #0xc41
    bd4c:	mov	x1, x19
    bd50:	bl	a8f0 <strcmp@plt>
    bd54:	cbz	w0, bfe4 <get_canonical_charset_name@@Base+0x4dc>
    bd58:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd5c:	add	x0, x0, #0xc4b
    bd60:	mov	x1, x19
    bd64:	bl	a8f0 <strcmp@plt>
    bd68:	cbz	w0, bff0 <get_canonical_charset_name@@Base+0x4e8>
    bd6c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd70:	add	x0, x0, #0xc55
    bd74:	mov	x1, x19
    bd78:	bl	a8f0 <strcmp@plt>
    bd7c:	cbz	w0, bffc <get_canonical_charset_name@@Base+0x4f4>
    bd80:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd84:	add	x0, x0, #0xc5f
    bd88:	mov	x1, x19
    bd8c:	bl	a8f0 <strcmp@plt>
    bd90:	cbz	w0, c008 <get_canonical_charset_name@@Base+0x500>
    bd94:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bd98:	add	x0, x0, #0xc69
    bd9c:	mov	x1, x19
    bda0:	bl	a8f0 <strcmp@plt>
    bda4:	cbz	w0, c014 <get_canonical_charset_name@@Base+0x50c>
    bda8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bdac:	add	x0, x0, #0xc73
    bdb0:	mov	x1, x19
    bdb4:	bl	a8f0 <strcmp@plt>
    bdb8:	cbz	w0, c020 <get_canonical_charset_name@@Base+0x518>
    bdbc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bdc0:	add	x0, x0, #0xc7d
    bdc4:	mov	x1, x19
    bdc8:	bl	a8f0 <strcmp@plt>
    bdcc:	cbz	w0, c02c <get_canonical_charset_name@@Base+0x524>
    bdd0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bdd4:	add	x0, x0, #0xc87
    bdd8:	mov	x1, x19
    bddc:	bl	a8f0 <strcmp@plt>
    bde0:	cbz	w0, c038 <get_canonical_charset_name@@Base+0x530>
    bde4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bde8:	add	x0, x0, #0xc92
    bdec:	mov	x1, x19
    bdf0:	bl	a8f0 <strcmp@plt>
    bdf4:	cbz	w0, c044 <get_canonical_charset_name@@Base+0x53c>
    bdf8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    bdfc:	add	x0, x0, #0xc9d
    be00:	mov	x1, x19
    be04:	bl	a8f0 <strcmp@plt>
    be08:	cbz	w0, c050 <get_canonical_charset_name@@Base+0x548>
    be0c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be10:	add	x0, x0, #0xca8
    be14:	mov	x1, x19
    be18:	bl	a8f0 <strcmp@plt>
    be1c:	cbz	w0, c05c <get_canonical_charset_name@@Base+0x554>
    be20:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be24:	add	x0, x0, #0xcb3
    be28:	mov	x1, x19
    be2c:	bl	a8f0 <strcmp@plt>
    be30:	cbz	w0, c068 <get_canonical_charset_name@@Base+0x560>
    be34:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be38:	add	x0, x0, #0xcbe
    be3c:	mov	x1, x19
    be40:	bl	a8f0 <strcmp@plt>
    be44:	cbz	w0, c074 <get_canonical_charset_name@@Base+0x56c>
    be48:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be4c:	add	x0, x0, #0xcc9
    be50:	mov	x1, x19
    be54:	bl	a8f0 <strcmp@plt>
    be58:	cbz	w0, c080 <get_canonical_charset_name@@Base+0x578>
    be5c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be60:	add	x0, x0, #0xccf
    be64:	mov	x1, x19
    be68:	bl	a8f0 <strcmp@plt>
    be6c:	cbz	w0, c08c <get_canonical_charset_name@@Base+0x584>
    be70:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be74:	add	x0, x0, #0xcd5
    be78:	mov	x1, x19
    be7c:	bl	a8f0 <strcmp@plt>
    be80:	cbz	w0, c098 <get_canonical_charset_name@@Base+0x590>
    be84:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be88:	add	x0, x0, #0xcda
    be8c:	mov	x1, x19
    be90:	bl	a8f0 <strcmp@plt>
    be94:	cbz	w0, c0a4 <get_canonical_charset_name@@Base+0x59c>
    be98:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    be9c:	add	x0, x0, #0xce3
    bea0:	mov	x1, x19
    bea4:	bl	a8f0 <strcmp@plt>
    bea8:	cbz	w0, c0b0 <get_canonical_charset_name@@Base+0x5a8>
    beac:	mov	x0, x19
    beb0:	bl	a970 <free@plt>
    beb4:	b	c0c4 <get_canonical_charset_name@@Base+0x5bc>
    beb8:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bebc:	add	x20, x20, #0xf58
    bec0:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bec4:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bec8:	add	x20, x20, #0xf68
    becc:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bed0:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bed4:	add	x20, x20, #0xf78
    bed8:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bedc:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bee0:	add	x20, x20, #0xf88
    bee4:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bee8:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    beec:	add	x20, x20, #0xf98
    bef0:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bef4:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bef8:	add	x20, x20, #0xfa8
    befc:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf00:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bf04:	add	x20, x20, #0xfb8
    bf08:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf0c:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bf10:	add	x20, x20, #0xfc8
    bf14:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf18:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bf1c:	add	x20, x20, #0xfd8
    bf20:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf24:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bf28:	add	x20, x20, #0xfe8
    bf2c:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf30:	adrp	x20, 44000 <vasnprintf@@Base+0x13474>
    bf34:	add	x20, x20, #0xff8
    bf38:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf3c:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf40:	add	x20, x20, #0x8
    bf44:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf48:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf4c:	add	x20, x20, #0x18
    bf50:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf54:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf58:	add	x20, x20, #0x28
    bf5c:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf60:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf64:	add	x20, x20, #0x38
    bf68:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf6c:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf70:	add	x20, x20, #0x48
    bf74:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf78:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf7c:	add	x20, x20, #0x58
    bf80:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf84:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf88:	add	x20, x20, #0x68
    bf8c:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf90:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bf94:	add	x20, x20, #0x78
    bf98:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bf9c:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfa0:	add	x20, x20, #0x88
    bfa4:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bfa8:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfac:	add	x20, x20, #0x98
    bfb0:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bfb4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfb8:	add	x20, x20, #0xa8
    bfbc:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bfc0:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfc4:	add	x20, x20, #0xb8
    bfc8:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bfcc:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfd0:	add	x20, x20, #0xc8
    bfd4:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bfd8:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfdc:	add	x20, x20, #0xd8
    bfe0:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bfe4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bfe8:	add	x20, x20, #0xe8
    bfec:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bff0:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    bff4:	add	x20, x20, #0xf8
    bff8:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    bffc:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c000:	add	x20, x20, #0x108
    c004:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c008:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c00c:	add	x20, x20, #0x118
    c010:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c014:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c018:	add	x20, x20, #0x128
    c01c:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c020:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c024:	add	x20, x20, #0x138
    c028:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c02c:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c030:	add	x20, x20, #0x148
    c034:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c038:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c03c:	add	x20, x20, #0x158
    c040:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c044:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c048:	add	x20, x20, #0x168
    c04c:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c050:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c054:	add	x20, x20, #0x178
    c058:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c05c:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c060:	add	x20, x20, #0x188
    c064:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c068:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c06c:	add	x20, x20, #0x198
    c070:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c074:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c078:	add	x20, x20, #0x1a8
    c07c:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c080:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c084:	add	x20, x20, #0x1b8
    c088:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c08c:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c090:	add	x20, x20, #0x1c8
    c094:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c098:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c09c:	add	x20, x20, #0x1d8
    c0a0:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c0a4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c0a8:	add	x20, x20, #0x1e8
    c0ac:	b	c0b8 <get_canonical_charset_name@@Base+0x5b0>
    c0b0:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    c0b4:	add	x20, x20, #0x1f8
    c0b8:	mov	x0, x19
    c0bc:	bl	a970 <free@plt>
    c0c0:	ldr	x20, [x20, #8]
    c0c4:	mov	x0, x20
    c0c8:	ldp	x20, x19, [sp, #32]
    c0cc:	ldr	x21, [sp, #16]
    c0d0:	ldp	x29, x30, [sp], #48
    c0d4:	ret

000000000000c0d8 <get_source_encoding@@Base>:
    c0d8:	stp	x29, x30, [sp, #-48]!
    c0dc:	stp	x22, x21, [sp, #16]
    c0e0:	stp	x20, x19, [sp, #32]
    c0e4:	mov	x29, sp
    c0e8:	cbz	x0, c0f8 <get_source_encoding@@Base+0x20>
    c0ec:	ldrb	w8, [x0]
    c0f0:	mov	x19, x0
    c0f4:	cbnz	w8, c10c <get_source_encoding@@Base+0x34>
    c0f8:	mov	w0, #0x5                   	// #5
    c0fc:	mov	x1, xzr
    c100:	bl	ae90 <setlocale@plt>
    c104:	mov	x19, x0
    c108:	cbz	x0, c154 <get_source_encoding@@Base+0x7c>
    c10c:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c110:	adrp	x22, 44000 <vasnprintf@@Base+0x13474>
    c114:	adrp	x20, 31000 <vasnprintf@@Base+0x474>
    c118:	add	x21, x21, #0xa40
    c11c:	add	x22, x22, #0xc88
    c120:	add	x20, x20, #0xf53
    c124:	mov	x0, x21
    c128:	bl	a290 <strlen@plt>
    c12c:	mov	x2, x0
    c130:	mov	x0, x21
    c134:	mov	x1, x19
    c138:	bl	a610 <strncmp@plt>
    c13c:	cbz	w0, c14c <get_source_encoding@@Base+0x74>
    c140:	ldr	x21, [x22], #16
    c144:	cbnz	x21, c124 <get_source_encoding@@Base+0x4c>
    c148:	b	c15c <get_source_encoding@@Base+0x84>
    c14c:	ldur	x20, [x22, #-8]
    c150:	b	c15c <get_source_encoding@@Base+0x84>
    c154:	adrp	x20, 31000 <vasnprintf@@Base+0x474>
    c158:	add	x20, x20, #0xf53
    c15c:	mov	x0, x20
    c160:	ldp	x20, x19, [sp, #32]
    c164:	ldp	x22, x21, [sp, #16]
    c168:	ldp	x29, x30, [sp], #48
    c16c:	ret

000000000000c170 <get_locale_charset@@Base>:
    c170:	stp	x29, x30, [sp, #-32]!
    c174:	mov	w0, wzr
    c178:	mov	x1, xzr
    c17c:	stp	x20, x19, [sp, #16]
    c180:	mov	x29, sp
    c184:	bl	ae90 <setlocale@plt>
    c188:	cbz	x0, c198 <get_locale_charset@@Base+0x28>
    c18c:	bl	a680 <xstrdup@plt>
    c190:	mov	x19, x0
    c194:	b	c19c <get_locale_charset@@Base+0x2c>
    c198:	mov	x19, xzr
    c19c:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
    c1a0:	add	x1, x1, #0xeac
    c1a4:	mov	w0, wzr
    c1a8:	bl	ae90 <setlocale@plt>
    c1ac:	bl	adc0 <locale_charset@plt>
    c1b0:	mov	x20, x0
    c1b4:	mov	w0, wzr
    c1b8:	mov	x1, x19
    c1bc:	bl	ae90 <setlocale@plt>
    c1c0:	mov	x0, x19
    c1c4:	bl	a970 <free@plt>
    c1c8:	cbz	x20, c1e4 <get_locale_charset@@Base+0x74>
    c1cc:	ldrb	w8, [x20]
    c1d0:	cbz	w8, c1e4 <get_locale_charset@@Base+0x74>
    c1d4:	mov	x0, x20
    c1d8:	ldp	x20, x19, [sp, #16]
    c1dc:	ldp	x29, x30, [sp], #32
    c1e0:	b	a280 <get_canonical_charset_name@plt>
    c1e4:	ldp	x20, x19, [sp, #16]
    c1e8:	mov	x0, xzr
    c1ec:	ldp	x29, x30, [sp], #32
    c1f0:	ret

000000000000c1f4 <find_charset_locale@@Base>:
    c1f4:	sub	sp, sp, #0x70
    c1f8:	stp	x29, x30, [sp, #48]
    c1fc:	str	x23, [sp, #64]
    c200:	stp	x22, x21, [sp, #80]
    c204:	stp	x20, x19, [sp, #96]
    c208:	add	x29, sp, #0x30
    c20c:	mov	x19, x0
    c210:	bl	a280 <get_canonical_charset_name@plt>
    c214:	adrp	x8, 31000 <vasnprintf@@Base+0x474>
    c218:	add	x8, x8, #0x8f2
    c21c:	ldr	q0, [x8]
    c220:	ldur	q1, [x8, #10]
    c224:	mov	x21, x0
    c228:	str	xzr, [x29, #24]
    c22c:	str	q0, [sp, #16]
    c230:	stur	q1, [sp, #26]
    c234:	str	xzr, [sp, #8]
    c238:	bl	acd0 <get_locale_charset@plt>
    c23c:	mov	x1, x0
    c240:	mov	x0, x19
    c244:	bl	a8f0 <strcmp@plt>
    c248:	cbz	w0, c268 <find_charset_locale@@Base+0x74>
    c24c:	mov	w0, wzr
    c250:	mov	x1, xzr
    c254:	bl	ae90 <setlocale@plt>
    c258:	cbz	x0, c270 <find_charset_locale@@Base+0x7c>
    c25c:	bl	a680 <xstrdup@plt>
    c260:	mov	x19, x0
    c264:	b	c274 <find_charset_locale@@Base+0x80>
    c268:	mov	x22, xzr
    c26c:	b	c2e0 <find_charset_locale@@Base+0xec>
    c270:	mov	x19, xzr
    c274:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c278:	add	x1, x1, #0xd44
    c27c:	add	x0, sp, #0x10
    c280:	bl	a530 <fopen@plt>
    c284:	mov	x20, x0
    c288:	cbnz	x0, c314 <find_charset_locale@@Base+0x120>
    c28c:	mov	x0, x21
    c290:	bl	a290 <strlen@plt>
    c294:	cmp	x0, #0x5
    c298:	b.cc	c2b4 <find_charset_locale@@Base+0xc0>  // b.lo, b.ul, b.last
    c29c:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c2a0:	add	x1, x1, #0x90e
    c2a4:	mov	w2, #0x5                   	// #5
    c2a8:	mov	x0, x21
    c2ac:	bl	a610 <strncmp@plt>
    c2b0:	cbz	w0, c3a4 <find_charset_locale@@Base+0x1b0>
    c2b4:	mov	x22, xzr
    c2b8:	ldr	x0, [x29, #24]
    c2bc:	bl	a970 <free@plt>
    c2c0:	mov	w0, wzr
    c2c4:	mov	x1, x19
    c2c8:	bl	ae90 <setlocale@plt>
    c2cc:	mov	x0, x19
    c2d0:	bl	a970 <free@plt>
    c2d4:	cbz	x20, c2e0 <find_charset_locale@@Base+0xec>
    c2d8:	mov	x0, x20
    c2dc:	bl	a4f0 <fclose@plt>
    c2e0:	mov	x0, x22
    c2e4:	ldp	x20, x19, [sp, #96]
    c2e8:	ldp	x22, x21, [sp, #80]
    c2ec:	ldr	x23, [sp, #64]
    c2f0:	ldp	x29, x30, [sp, #48]
    c2f4:	add	sp, sp, #0x70
    c2f8:	ret
    c2fc:	mov	x0, x23
    c300:	bl	a970 <free@plt>
    c304:	ldr	x23, [x29, #24]
    c308:	mov	x0, x23
    c30c:	bl	a970 <free@plt>
    c310:	str	xzr, [x29, #24]
    c314:	add	x0, x29, #0x18
    c318:	add	x1, sp, #0x8
    c31c:	mov	w2, #0xa                   	// #10
    c320:	mov	x3, x20
    c324:	bl	adf0 <__getdelim@plt>
    c328:	tbnz	x0, #63, c28c <find_charset_locale@@Base+0x98>
    c32c:	ldr	x23, [x29, #24]
    c330:	mov	w1, #0x20                  	// #32
    c334:	mov	x0, x23
    c338:	bl	aa60 <strchr@plt>
    c33c:	cbz	x0, c308 <find_charset_locale@@Base+0x114>
    c340:	mov	x22, x0
    c344:	add	x0, x0, #0x1
    c348:	bl	a680 <xstrdup@plt>
    c34c:	mov	w1, #0xa                   	// #10
    c350:	mov	x23, x0
    c354:	bl	aa60 <strchr@plt>
    c358:	cbz	x0, c360 <find_charset_locale@@Base+0x16c>
    c35c:	strb	wzr, [x0]
    c360:	mov	x0, x23
    c364:	bl	a280 <get_canonical_charset_name@plt>
    c368:	mov	x1, x0
    c36c:	mov	x0, x21
    c370:	bl	a8f0 <strcmp@plt>
    c374:	cbnz	w0, c2fc <find_charset_locale@@Base+0x108>
    c378:	ldr	x0, [x29, #24]
    c37c:	sub	x1, x22, x0
    c380:	bl	abe0 <xstrndup@plt>
    c384:	mov	x22, x0
    c388:	mov	w0, wzr
    c38c:	mov	x1, x22
    c390:	bl	ae90 <setlocale@plt>
    c394:	cbnz	x0, c3f8 <find_charset_locale@@Base+0x204>
    c398:	mov	x0, x22
    c39c:	bl	a970 <free@plt>
    c3a0:	b	c2fc <find_charset_locale@@Base+0x108>
    c3a4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c3a8:	add	x0, x0, #0x90c
    c3ac:	bl	a680 <xstrdup@plt>
    c3b0:	mov	x22, x0
    c3b4:	mov	w0, wzr
    c3b8:	mov	x1, x22
    c3bc:	bl	ae90 <setlocale@plt>
    c3c0:	cbnz	x0, c2b8 <find_charset_locale@@Base+0xc4>
    c3c4:	mov	x0, x22
    c3c8:	bl	a970 <free@plt>
    c3cc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c3d0:	add	x0, x0, #0x914
    c3d4:	bl	a680 <xstrdup@plt>
    c3d8:	mov	x22, x0
    c3dc:	mov	w0, wzr
    c3e0:	mov	x1, x22
    c3e4:	bl	ae90 <setlocale@plt>
    c3e8:	cbnz	x0, c2b8 <find_charset_locale@@Base+0xc4>
    c3ec:	mov	x0, x22
    c3f0:	bl	a970 <free@plt>
    c3f4:	b	c2b4 <find_charset_locale@@Base+0xc0>
    c3f8:	mov	x0, x23
    c3fc:	bl	a970 <free@plt>
    c400:	b	c2b8 <find_charset_locale@@Base+0xc4>

000000000000c404 <get_default_device@@Base>:
    c404:	stp	x29, x30, [sp, #-96]!
    c408:	stp	x28, x27, [sp, #16]
    c40c:	stp	x26, x25, [sp, #32]
    c410:	stp	x24, x23, [sp, #48]
    c414:	stp	x22, x21, [sp, #64]
    c418:	stp	x20, x19, [sp, #80]
    c41c:	adrp	x22, 45000 <vasnprintf@@Base+0x14474>
    c420:	ldr	x22, [x22, #3832]
    c424:	mov	x20, x1
    c428:	mov	x19, x0
    c42c:	mov	x29, sp
    c430:	ldr	x8, [x22]
    c434:	cbz	x8, c464 <get_default_device@@Base+0x60>
    c438:	ldrb	w8, [x8]
    c43c:	cbz	w8, c4a4 <get_default_device@@Base+0xa0>
    c440:	cbz	x19, c458 <get_default_device@@Base+0x54>
    c444:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c448:	add	x1, x1, #0x920
    c44c:	mov	x0, x19
    c450:	bl	a8f0 <strcmp@plt>
    c454:	cbz	w0, c5ec <get_default_device@@Base+0x1e8>
    c458:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c45c:	add	x21, x21, #0x935
    c460:	b	c600 <get_default_device@@Base+0x1fc>
    c464:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c468:	add	x21, x21, #0x8e6
    c46c:	mov	x0, x21
    c470:	bl	ad10 <pathsearch_executable@plt>
    c474:	tbnz	w0, #0, c498 <get_default_device@@Base+0x94>
    c478:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c47c:	add	x21, x21, #0x8e7
    c480:	mov	x0, x21
    c484:	bl	ad10 <pathsearch_executable@plt>
    c488:	adrp	x8, 33000 <vasnprintf@@Base+0x2474>
    c48c:	add	x8, x8, #0xeac
    c490:	tst	w0, #0x1
    c494:	csel	x21, x21, x8, ne  // ne = any
    c498:	ldrb	w8, [x21]
    c49c:	str	x21, [x22]
    c4a0:	cbnz	w8, c440 <get_default_device@@Base+0x3c>
    c4a4:	cbz	x19, c5f8 <get_default_device@@Base+0x1f4>
    c4a8:	adrp	x22, 31000 <vasnprintf@@Base+0x474>
    c4ac:	add	x22, x22, #0x920
    c4b0:	adrp	x27, 45000 <vasnprintf@@Base+0x14474>
    c4b4:	adrp	x23, 31000 <vasnprintf@@Base+0x474>
    c4b8:	adrp	x24, 31000 <vasnprintf@@Base+0x474>
    c4bc:	adrp	x25, 31000 <vasnprintf@@Base+0x474>
    c4c0:	adrp	x26, 31000 <vasnprintf@@Base+0x474>
    c4c4:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c4c8:	add	x27, x27, #0x220
    c4cc:	add	x23, x23, #0x90e
    c4d0:	add	x24, x24, #0xb22
    c4d4:	add	x25, x25, #0xb18
    c4d8:	add	x26, x26, #0xa9e
    c4dc:	add	x21, x21, #0xce8
    c4e0:	mov	x0, x22
    c4e4:	b	c504 <get_default_device@@Base+0x100>
    c4e8:	mov	x0, x28
    c4ec:	mov	x1, x23
    c4f0:	bl	a8f0 <strcmp@plt>
    c4f4:	cbz	w0, c5e4 <get_default_device@@Base+0x1e0>
    c4f8:	ldr	x0, [x27, #8]
    c4fc:	add	x27, x27, #0x10
    c500:	cbz	x0, c600 <get_default_device@@Base+0x1fc>
    c504:	mov	x1, x19
    c508:	bl	a8f0 <strcmp@plt>
    c50c:	cbnz	w0, c4f8 <get_default_device@@Base+0xf4>
    c510:	ldr	x0, [x27]
    c514:	mov	x1, x20
    c518:	bl	a360 <get_roff_encoding@plt>
    c51c:	mov	x28, x0
    c520:	mov	x0, x20
    c524:	mov	x1, x28
    c528:	bl	a8f0 <strcmp@plt>
    c52c:	cbz	w0, c5e4 <get_default_device@@Base+0x1e0>
    c530:	mov	x0, x20
    c534:	mov	x1, x22
    c538:	bl	a8f0 <strcmp@plt>
    c53c:	cbz	w0, c5e4 <get_default_device@@Base+0x1e0>
    c540:	mov	x0, x20
    c544:	mov	x1, x23
    c548:	bl	a8f0 <strcmp@plt>
    c54c:	cbz	w0, c5e4 <get_default_device@@Base+0x1e0>
    c550:	mov	x0, x28
    c554:	mov	x1, x22
    c558:	bl	a8f0 <strcmp@plt>
    c55c:	cbz	w0, c5e4 <get_default_device@@Base+0x1e0>
    c560:	mov	x0, x20
    c564:	mov	x1, x24
    c568:	bl	a8f0 <strcmp@plt>
    c56c:	cbz	w0, c4e8 <get_default_device@@Base+0xe4>
    c570:	mov	x0, x20
    c574:	mov	x1, x25
    c578:	bl	a8f0 <strcmp@plt>
    c57c:	cbz	w0, c4e8 <get_default_device@@Base+0xe4>
    c580:	mov	x0, x20
    c584:	mov	x1, x26
    c588:	bl	a8f0 <strcmp@plt>
    c58c:	cbz	w0, c4e8 <get_default_device@@Base+0xe4>
    c590:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c594:	mov	x0, x20
    c598:	add	x1, x1, #0xc06
    c59c:	bl	a8f0 <strcmp@plt>
    c5a0:	cbz	w0, c4e8 <get_default_device@@Base+0xe4>
    c5a4:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c5a8:	mov	x0, x20
    c5ac:	add	x1, x1, #0xb14
    c5b0:	bl	a8f0 <strcmp@plt>
    c5b4:	cbz	w0, c4e8 <get_default_device@@Base+0xe4>
    c5b8:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c5bc:	mov	x0, x20
    c5c0:	add	x1, x1, #0xaa8
    c5c4:	bl	a8f0 <strcmp@plt>
    c5c8:	cbz	w0, c4e8 <get_default_device@@Base+0xe4>
    c5cc:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c5d0:	mov	x0, x20
    c5d4:	add	x1, x1, #0xc1f
    c5d8:	bl	a8f0 <strcmp@plt>
    c5dc:	cbnz	w0, c4f8 <get_default_device@@Base+0xf4>
    c5e0:	b	c4e8 <get_default_device@@Base+0xe4>
    c5e4:	ldr	x21, [x27]
    c5e8:	b	c600 <get_default_device@@Base+0x1fc>
    c5ec:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c5f0:	add	x21, x21, #0x92f
    c5f4:	b	c600 <get_default_device@@Base+0x1fc>
    c5f8:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c5fc:	add	x21, x21, #0xce8
    c600:	mov	x0, x21
    c604:	ldp	x20, x19, [sp, #80]
    c608:	ldp	x22, x21, [sp, #64]
    c60c:	ldp	x24, x23, [sp, #48]
    c610:	ldp	x26, x25, [sp, #32]
    c614:	ldp	x28, x27, [sp, #16]
    c618:	ldp	x29, x30, [sp], #96
    c61c:	ret

000000000000c620 <get_roff_encoding@@Base>:
    c620:	stp	x29, x30, [sp, #-48]!
    c624:	stp	x20, x19, [sp, #32]
    c628:	mov	x19, x1
    c62c:	stp	x22, x21, [sp, #16]
    c630:	mov	x29, sp
    c634:	cbz	x0, c760 <get_roff_encoding@@Base+0x140>
    c638:	mov	x20, x0
    c63c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c640:	add	x0, x0, #0x92f
    c644:	mov	x1, x20
    c648:	bl	a8f0 <strcmp@plt>
    c64c:	cbz	w0, c76c <get_roff_encoding@@Base+0x14c>
    c650:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c654:	add	x0, x0, #0xcef
    c658:	mov	x1, x20
    c65c:	bl	a8f0 <strcmp@plt>
    c660:	cbz	w0, c778 <get_roff_encoding@@Base+0x158>
    c664:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c668:	add	x0, x0, #0x935
    c66c:	mov	x1, x20
    c670:	bl	a8f0 <strcmp@plt>
    c674:	cbz	w0, c784 <get_roff_encoding@@Base+0x164>
    c678:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c67c:	add	x0, x0, #0xce8
    c680:	mov	x1, x20
    c684:	bl	a8f0 <strcmp@plt>
    c688:	cbz	w0, c790 <get_roff_encoding@@Base+0x170>
    c68c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c690:	add	x0, x0, #0xcf6
    c694:	mov	x1, x20
    c698:	bl	a8f0 <strcmp@plt>
    c69c:	cbz	w0, c79c <get_roff_encoding@@Base+0x17c>
    c6a0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c6a4:	add	x0, x0, #0xcfd
    c6a8:	mov	x1, x20
    c6ac:	bl	a8f0 <strcmp@plt>
    c6b0:	cbz	w0, c7a8 <get_roff_encoding@@Base+0x188>
    c6b4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c6b8:	add	x0, x0, #0xd01
    c6bc:	mov	x1, x20
    c6c0:	bl	a8f0 <strcmp@plt>
    c6c4:	cbz	w0, c7b4 <get_roff_encoding@@Base+0x194>
    c6c8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c6cc:	add	x0, x0, #0xd08
    c6d0:	mov	x1, x20
    c6d4:	bl	a8f0 <strcmp@plt>
    c6d8:	cbz	w0, c7c0 <get_roff_encoding@@Base+0x1a0>
    c6dc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c6e0:	add	x0, x0, #0xd0d
    c6e4:	mov	x1, x20
    c6e8:	bl	a8f0 <strcmp@plt>
    c6ec:	cbz	w0, c7cc <get_roff_encoding@@Base+0x1ac>
    c6f0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c6f4:	add	x0, x0, #0xd15
    c6f8:	mov	x1, x20
    c6fc:	bl	a8f0 <strcmp@plt>
    c700:	cbz	w0, c7d8 <get_roff_encoding@@Base+0x1b8>
    c704:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c708:	add	x0, x0, #0xd19
    c70c:	mov	x1, x20
    c710:	bl	a8f0 <strcmp@plt>
    c714:	cbz	w0, c7e4 <get_roff_encoding@@Base+0x1c4>
    c718:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c71c:	add	x0, x0, #0xd1e
    c720:	mov	x1, x20
    c724:	bl	a8f0 <strcmp@plt>
    c728:	cbz	w0, c7f0 <get_roff_encoding@@Base+0x1d0>
    c72c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c730:	add	x0, x0, #0xd22
    c734:	mov	x1, x20
    c738:	bl	a8f0 <strcmp@plt>
    c73c:	cbz	w0, c7fc <get_roff_encoding@@Base+0x1dc>
    c740:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c744:	add	x0, x0, #0xd26
    c748:	mov	x1, x20
    c74c:	bl	a8f0 <strcmp@plt>
    c750:	cbz	w0, c808 <get_roff_encoding@@Base+0x1e8>
    c754:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c758:	add	x21, x21, #0xf48
    c75c:	b	c814 <get_roff_encoding@@Base+0x1f4>
    c760:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c764:	add	x21, x21, #0xf48
    c768:	b	c828 <get_roff_encoding@@Base+0x208>
    c76c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c770:	add	x8, x8, #0x2b8
    c774:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c778:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c77c:	add	x8, x8, #0x2d0
    c780:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c784:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c788:	add	x8, x8, #0x2e8
    c78c:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c790:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c794:	add	x8, x8, #0x300
    c798:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c79c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7a0:	add	x8, x8, #0x318
    c7a4:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7a8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7ac:	add	x8, x8, #0x330
    c7b0:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7b4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7b8:	add	x8, x8, #0x348
    c7bc:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7c0:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7c4:	add	x8, x8, #0x360
    c7c8:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7cc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7d0:	add	x8, x8, #0x378
    c7d4:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7d8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7dc:	add	x8, x8, #0x390
    c7e0:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7e4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7e8:	add	x8, x8, #0x3a8
    c7ec:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7f0:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c7f4:	add	x8, x8, #0x3c0
    c7f8:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c7fc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c800:	add	x8, x8, #0x3d8
    c804:	b	c810 <get_roff_encoding@@Base+0x1f0>
    c808:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    c80c:	add	x8, x8, #0x3f0
    c810:	ldr	x21, [x8, #8]
    c814:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c818:	add	x1, x1, #0x935
    c81c:	mov	x0, x20
    c820:	bl	a8f0 <strcmp@plt>
    c824:	cbz	w0, c840 <get_roff_encoding@@Base+0x220>
    c828:	cmp	x21, #0x0
    c82c:	csel	x0, x19, x21, eq  // eq = none
    c830:	ldp	x20, x19, [sp, #32]
    c834:	ldp	x22, x21, [sp, #16]
    c838:	ldp	x29, x30, [sp], #48
    c83c:	ret
    c840:	adrp	x22, 45000 <vasnprintf@@Base+0x14474>
    c844:	ldr	x22, [x22, #3832]
    c848:	ldr	x8, [x22]
    c84c:	cbz	x8, c85c <get_roff_encoding@@Base+0x23c>
    c850:	ldrb	w8, [x8]
    c854:	cbnz	w8, c828 <get_roff_encoding@@Base+0x208>
    c858:	b	c89c <get_roff_encoding@@Base+0x27c>
    c85c:	adrp	x20, 31000 <vasnprintf@@Base+0x474>
    c860:	add	x20, x20, #0x8e6
    c864:	mov	x0, x20
    c868:	bl	ad10 <pathsearch_executable@plt>
    c86c:	tbnz	w0, #0, c890 <get_roff_encoding@@Base+0x270>
    c870:	adrp	x20, 31000 <vasnprintf@@Base+0x474>
    c874:	add	x20, x20, #0x8e7
    c878:	mov	x0, x20
    c87c:	bl	ad10 <pathsearch_executable@plt>
    c880:	adrp	x8, 33000 <vasnprintf@@Base+0x2474>
    c884:	add	x8, x8, #0xeac
    c888:	tst	w0, #0x1
    c88c:	csel	x20, x20, x8, ne  // ne = any
    c890:	ldrb	w8, [x20]
    c894:	str	x20, [x22]
    c898:	cbnz	w8, c828 <get_roff_encoding@@Base+0x208>
    c89c:	bl	acd0 <get_locale_charset@plt>
    c8a0:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c8a4:	add	x1, x1, #0x90e
    c8a8:	bl	a8f0 <strcmp@plt>
    c8ac:	cbnz	w0, c828 <get_roff_encoding@@Base+0x208>
    c8b0:	mov	x1, xzr
    c8b4:	bl	ae90 <setlocale@plt>
    c8b8:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c8bc:	add	x1, x1, #0x93a
    c8c0:	mov	w2, #0x5                   	// #5
    c8c4:	mov	x20, x0
    c8c8:	bl	a610 <strncmp@plt>
    c8cc:	cbz	w0, c948 <get_roff_encoding@@Base+0x328>
    c8d0:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c8d4:	add	x1, x1, #0x940
    c8d8:	mov	w2, #0x5                   	// #5
    c8dc:	mov	x0, x20
    c8e0:	bl	a610 <strncmp@plt>
    c8e4:	cbz	w0, c948 <get_roff_encoding@@Base+0x328>
    c8e8:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c8ec:	add	x1, x1, #0x946
    c8f0:	mov	w2, #0x5                   	// #5
    c8f4:	mov	x0, x20
    c8f8:	bl	a610 <strncmp@plt>
    c8fc:	cbz	w0, c948 <get_roff_encoding@@Base+0x328>
    c900:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c904:	add	x1, x1, #0x94c
    c908:	mov	w2, #0x5                   	// #5
    c90c:	mov	x0, x20
    c910:	bl	a610 <strncmp@plt>
    c914:	cbz	w0, c948 <get_roff_encoding@@Base+0x328>
    c918:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c91c:	add	x1, x1, #0x952
    c920:	mov	w2, #0x5                   	// #5
    c924:	mov	x0, x20
    c928:	bl	a610 <strncmp@plt>
    c92c:	cbz	w0, c948 <get_roff_encoding@@Base+0x328>
    c930:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    c934:	add	x1, x1, #0x958
    c938:	mov	w2, #0x5                   	// #5
    c93c:	mov	x0, x20
    c940:	bl	a610 <strncmp@plt>
    c944:	cbnz	w0, c828 <get_roff_encoding@@Base+0x208>
    c948:	adrp	x21, 31000 <vasnprintf@@Base+0x474>
    c94c:	add	x21, x21, #0x90e
    c950:	b	c828 <get_roff_encoding@@Base+0x208>

000000000000c954 <is_roff_device@@Base>:
    c954:	stp	x29, x30, [sp, #-32]!
    c958:	str	x19, [sp, #16]
    c95c:	mov	x19, x0
    c960:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c964:	add	x0, x0, #0x92f
    c968:	mov	x1, x19
    c96c:	mov	x29, sp
    c970:	bl	a8f0 <strcmp@plt>
    c974:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c978:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c97c:	add	x0, x0, #0xcef
    c980:	mov	x1, x19
    c984:	bl	a8f0 <strcmp@plt>
    c988:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c98c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c990:	add	x0, x0, #0x935
    c994:	mov	x1, x19
    c998:	bl	a8f0 <strcmp@plt>
    c99c:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c9a0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c9a4:	add	x0, x0, #0xce8
    c9a8:	mov	x1, x19
    c9ac:	bl	a8f0 <strcmp@plt>
    c9b0:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c9b4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c9b8:	add	x0, x0, #0xcf6
    c9bc:	mov	x1, x19
    c9c0:	bl	a8f0 <strcmp@plt>
    c9c4:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c9c8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c9cc:	add	x0, x0, #0xcfd
    c9d0:	mov	x1, x19
    c9d4:	bl	a8f0 <strcmp@plt>
    c9d8:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c9dc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c9e0:	add	x0, x0, #0xd01
    c9e4:	mov	x1, x19
    c9e8:	bl	a8f0 <strcmp@plt>
    c9ec:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    c9f0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    c9f4:	add	x0, x0, #0xd08
    c9f8:	mov	x1, x19
    c9fc:	bl	a8f0 <strcmp@plt>
    ca00:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    ca04:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ca08:	add	x0, x0, #0xd0d
    ca0c:	mov	x1, x19
    ca10:	bl	a8f0 <strcmp@plt>
    ca14:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    ca18:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ca1c:	add	x0, x0, #0xd15
    ca20:	mov	x1, x19
    ca24:	bl	a8f0 <strcmp@plt>
    ca28:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    ca2c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ca30:	add	x0, x0, #0xd19
    ca34:	mov	x1, x19
    ca38:	bl	a8f0 <strcmp@plt>
    ca3c:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    ca40:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ca44:	add	x0, x0, #0xd1e
    ca48:	mov	x1, x19
    ca4c:	bl	a8f0 <strcmp@plt>
    ca50:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    ca54:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ca58:	add	x0, x0, #0xd22
    ca5c:	mov	x1, x19
    ca60:	bl	a8f0 <strcmp@plt>
    ca64:	cbz	w0, ca84 <is_roff_device@@Base+0x130>
    ca68:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ca6c:	add	x0, x0, #0xd26
    ca70:	mov	x1, x19
    ca74:	bl	a8f0 <strcmp@plt>
    ca78:	cmp	w0, #0x0
    ca7c:	cset	w0, eq  // eq = none
    ca80:	b	ca88 <is_roff_device@@Base+0x134>
    ca84:	mov	w0, #0x1                   	// #1
    ca88:	ldr	x19, [sp, #16]
    ca8c:	ldp	x29, x30, [sp], #32
    ca90:	ret

000000000000ca94 <get_output_encoding@@Base>:
    ca94:	stp	x29, x30, [sp, #-32]!
    ca98:	str	x19, [sp, #16]
    ca9c:	mov	x19, x0
    caa0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    caa4:	add	x0, x0, #0x92f
    caa8:	mov	x1, x19
    caac:	mov	x29, sp
    cab0:	bl	a8f0 <strcmp@plt>
    cab4:	cbz	w0, cbc4 <get_output_encoding@@Base+0x130>
    cab8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cabc:	add	x0, x0, #0xcef
    cac0:	mov	x1, x19
    cac4:	bl	a8f0 <strcmp@plt>
    cac8:	cbz	w0, cbd0 <get_output_encoding@@Base+0x13c>
    cacc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cad0:	add	x0, x0, #0x935
    cad4:	mov	x1, x19
    cad8:	bl	a8f0 <strcmp@plt>
    cadc:	cbz	w0, cbdc <get_output_encoding@@Base+0x148>
    cae0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cae4:	add	x0, x0, #0xce8
    cae8:	mov	x1, x19
    caec:	bl	a8f0 <strcmp@plt>
    caf0:	cbz	w0, cbe8 <get_output_encoding@@Base+0x154>
    caf4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    caf8:	add	x0, x0, #0xcf6
    cafc:	mov	x1, x19
    cb00:	bl	a8f0 <strcmp@plt>
    cb04:	cbz	w0, cbf4 <get_output_encoding@@Base+0x160>
    cb08:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb0c:	add	x0, x0, #0xcfd
    cb10:	mov	x1, x19
    cb14:	bl	a8f0 <strcmp@plt>
    cb18:	cbz	w0, cc00 <get_output_encoding@@Base+0x16c>
    cb1c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb20:	add	x0, x0, #0xd01
    cb24:	mov	x1, x19
    cb28:	bl	a8f0 <strcmp@plt>
    cb2c:	cbz	w0, cc0c <get_output_encoding@@Base+0x178>
    cb30:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb34:	add	x0, x0, #0xd08
    cb38:	mov	x1, x19
    cb3c:	bl	a8f0 <strcmp@plt>
    cb40:	cbz	w0, cc18 <get_output_encoding@@Base+0x184>
    cb44:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb48:	add	x0, x0, #0xd0d
    cb4c:	mov	x1, x19
    cb50:	bl	a8f0 <strcmp@plt>
    cb54:	cbz	w0, cc24 <get_output_encoding@@Base+0x190>
    cb58:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb5c:	add	x0, x0, #0xd15
    cb60:	mov	x1, x19
    cb64:	bl	a8f0 <strcmp@plt>
    cb68:	cbz	w0, cc30 <get_output_encoding@@Base+0x19c>
    cb6c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb70:	add	x0, x0, #0xd19
    cb74:	mov	x1, x19
    cb78:	bl	a8f0 <strcmp@plt>
    cb7c:	cbz	w0, cc3c <get_output_encoding@@Base+0x1a8>
    cb80:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb84:	add	x0, x0, #0xd1e
    cb88:	mov	x1, x19
    cb8c:	bl	a8f0 <strcmp@plt>
    cb90:	cbz	w0, cc48 <get_output_encoding@@Base+0x1b4>
    cb94:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cb98:	add	x0, x0, #0xd22
    cb9c:	mov	x1, x19
    cba0:	bl	a8f0 <strcmp@plt>
    cba4:	cbz	w0, cc54 <get_output_encoding@@Base+0x1c0>
    cba8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cbac:	add	x0, x0, #0xd26
    cbb0:	mov	x1, x19
    cbb4:	bl	a8f0 <strcmp@plt>
    cbb8:	cbz	w0, cc60 <get_output_encoding@@Base+0x1cc>
    cbbc:	mov	x0, xzr
    cbc0:	b	cc6c <get_output_encoding@@Base+0x1d8>
    cbc4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cbc8:	add	x8, x8, #0x2b8
    cbcc:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cbd0:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cbd4:	add	x8, x8, #0x2d0
    cbd8:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cbdc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cbe0:	add	x8, x8, #0x2e8
    cbe4:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cbe8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cbec:	add	x8, x8, #0x300
    cbf0:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cbf4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cbf8:	add	x8, x8, #0x318
    cbfc:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc00:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc04:	add	x8, x8, #0x330
    cc08:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc0c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc10:	add	x8, x8, #0x348
    cc14:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc18:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc1c:	add	x8, x8, #0x360
    cc20:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc24:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc28:	add	x8, x8, #0x378
    cc2c:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc30:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc34:	add	x8, x8, #0x390
    cc38:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc3c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc40:	add	x8, x8, #0x3a8
    cc44:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc48:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc4c:	add	x8, x8, #0x3c0
    cc50:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc54:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc58:	add	x8, x8, #0x3d8
    cc5c:	b	cc68 <get_output_encoding@@Base+0x1d4>
    cc60:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cc64:	add	x8, x8, #0x3f0
    cc68:	ldr	x0, [x8, #16]
    cc6c:	ldr	x19, [sp, #16]
    cc70:	ldp	x29, x30, [sp], #32
    cc74:	ret

000000000000cc78 <get_less_charset@@Base>:
    cc78:	stp	x29, x30, [sp, #-32]!
    cc7c:	str	x19, [sp, #16]
    cc80:	mov	x29, sp
    cc84:	cbz	x0, cd18 <get_less_charset@@Base+0xa0>
    cc88:	mov	x19, x0
    cc8c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cc90:	add	x0, x0, #0x920
    cc94:	mov	x1, x19
    cc98:	bl	a8f0 <strcmp@plt>
    cc9c:	cbz	w0, cd2c <get_less_charset@@Base+0xb4>
    cca0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cca4:	add	x0, x0, #0xf53
    cca8:	mov	x1, x19
    ccac:	bl	a8f0 <strcmp@plt>
    ccb0:	cbz	w0, cd44 <get_less_charset@@Base+0xcc>
    ccb4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ccb8:	add	x0, x0, #0x90e
    ccbc:	mov	x1, x19
    ccc0:	bl	a8f0 <strcmp@plt>
    ccc4:	cbz	w0, cd5c <get_less_charset@@Base+0xe4>
    ccc8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cccc:	add	x0, x0, #0xa6f
    ccd0:	mov	x1, x19
    ccd4:	bl	a8f0 <strcmp@plt>
    ccd8:	cbz	w0, cd74 <get_less_charset@@Base+0xfc>
    ccdc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cce0:	add	x0, x0, #0xa9e
    cce4:	mov	x1, x19
    cce8:	bl	a8f0 <strcmp@plt>
    ccec:	cbz	w0, cd8c <get_less_charset@@Base+0x114>
    ccf0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ccf4:	add	x0, x0, #0xad8
    ccf8:	mov	x1, x19
    ccfc:	bl	a8f0 <strcmp@plt>
    cd00:	cbz	w0, cda4 <get_less_charset@@Base+0x12c>
    cd04:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cd08:	add	x0, x0, #0xb02
    cd0c:	mov	x1, x19
    cd10:	bl	a8f0 <strcmp@plt>
    cd14:	cbz	w0, cdbc <get_less_charset@@Base+0x144>
    cd18:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cd1c:	add	x0, x0, #0xf5e
    cd20:	ldr	x19, [sp, #16]
    cd24:	ldp	x29, x30, [sp], #32
    cd28:	ret
    cd2c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cd30:	add	x8, x8, #0x420
    cd34:	ldr	x0, [x8, #8]
    cd38:	ldr	x19, [sp, #16]
    cd3c:	ldp	x29, x30, [sp], #32
    cd40:	ret
    cd44:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cd48:	add	x8, x8, #0x438
    cd4c:	ldr	x0, [x8, #8]
    cd50:	ldr	x19, [sp, #16]
    cd54:	ldp	x29, x30, [sp], #32
    cd58:	ret
    cd5c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cd60:	add	x8, x8, #0x450
    cd64:	ldr	x0, [x8, #8]
    cd68:	ldr	x19, [sp, #16]
    cd6c:	ldp	x29, x30, [sp], #32
    cd70:	ret
    cd74:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cd78:	add	x8, x8, #0x468
    cd7c:	ldr	x0, [x8, #8]
    cd80:	ldr	x19, [sp, #16]
    cd84:	ldp	x29, x30, [sp], #32
    cd88:	ret
    cd8c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cd90:	add	x8, x8, #0x480
    cd94:	ldr	x0, [x8, #8]
    cd98:	ldr	x19, [sp, #16]
    cd9c:	ldp	x29, x30, [sp], #32
    cda0:	ret
    cda4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cda8:	add	x8, x8, #0x498
    cdac:	ldr	x0, [x8, #8]
    cdb0:	ldr	x19, [sp, #16]
    cdb4:	ldp	x29, x30, [sp], #32
    cdb8:	ret
    cdbc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cdc0:	add	x8, x8, #0x4b0
    cdc4:	ldr	x0, [x8, #8]
    cdc8:	ldr	x19, [sp, #16]
    cdcc:	ldp	x29, x30, [sp], #32
    cdd0:	ret

000000000000cdd4 <get_jless_charset@@Base>:
    cdd4:	stp	x29, x30, [sp, #-32]!
    cdd8:	str	x19, [sp, #16]
    cddc:	mov	x29, sp
    cde0:	cbz	x0, ce78 <get_jless_charset@@Base+0xa4>
    cde4:	mov	x19, x0
    cde8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    cdec:	add	x0, x0, #0x920
    cdf0:	mov	x1, x19
    cdf4:	bl	a8f0 <strcmp@plt>
    cdf8:	cbz	w0, ce84 <get_jless_charset@@Base+0xb0>
    cdfc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ce00:	add	x0, x0, #0xf53
    ce04:	mov	x1, x19
    ce08:	bl	a8f0 <strcmp@plt>
    ce0c:	cbz	w0, ce9c <get_jless_charset@@Base+0xc8>
    ce10:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ce14:	add	x0, x0, #0x90e
    ce18:	mov	x1, x19
    ce1c:	bl	a8f0 <strcmp@plt>
    ce20:	cbz	w0, ceb4 <get_jless_charset@@Base+0xe0>
    ce24:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ce28:	add	x0, x0, #0xa6f
    ce2c:	mov	x1, x19
    ce30:	bl	a8f0 <strcmp@plt>
    ce34:	cbz	w0, cecc <get_jless_charset@@Base+0xf8>
    ce38:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ce3c:	add	x0, x0, #0xa9e
    ce40:	mov	x1, x19
    ce44:	bl	a8f0 <strcmp@plt>
    ce48:	cbz	w0, cee4 <get_jless_charset@@Base+0x110>
    ce4c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ce50:	add	x0, x0, #0xad8
    ce54:	mov	x1, x19
    ce58:	bl	a8f0 <strcmp@plt>
    ce5c:	cbz	w0, cefc <get_jless_charset@@Base+0x128>
    ce60:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    ce64:	add	x0, x0, #0xb02
    ce68:	mov	x1, x19
    ce6c:	bl	a8f0 <strcmp@plt>
    ce70:	cbz	w0, cf14 <get_jless_charset@@Base+0x140>
    ce74:	mov	x0, xzr
    ce78:	ldr	x19, [sp, #16]
    ce7c:	ldp	x29, x30, [sp], #32
    ce80:	ret
    ce84:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    ce88:	add	x8, x8, #0x420
    ce8c:	ldr	x0, [x8, #16]
    ce90:	ldr	x19, [sp, #16]
    ce94:	ldp	x29, x30, [sp], #32
    ce98:	ret
    ce9c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cea0:	add	x8, x8, #0x438
    cea4:	ldr	x0, [x8, #16]
    cea8:	ldr	x19, [sp, #16]
    ceac:	ldp	x29, x30, [sp], #32
    ceb0:	ret
    ceb4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    ceb8:	add	x8, x8, #0x450
    cebc:	ldr	x0, [x8, #16]
    cec0:	ldr	x19, [sp, #16]
    cec4:	ldp	x29, x30, [sp], #32
    cec8:	ret
    cecc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    ced0:	add	x8, x8, #0x468
    ced4:	ldr	x0, [x8, #16]
    ced8:	ldr	x19, [sp, #16]
    cedc:	ldp	x29, x30, [sp], #32
    cee0:	ret
    cee4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cee8:	add	x8, x8, #0x480
    ceec:	ldr	x0, [x8, #16]
    cef0:	ldr	x19, [sp, #16]
    cef4:	ldp	x29, x30, [sp], #32
    cef8:	ret
    cefc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cf00:	add	x8, x8, #0x498
    cf04:	ldr	x0, [x8, #16]
    cf08:	ldr	x19, [sp, #16]
    cf0c:	ldp	x29, x30, [sp], #32
    cf10:	ret
    cf14:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    cf18:	add	x8, x8, #0x4b0
    cf1c:	ldr	x0, [x8, #16]
    cf20:	ldr	x19, [sp, #16]
    cf24:	ldp	x29, x30, [sp], #32
    cf28:	ret

000000000000cf2c <check_preprocessor_encoding@@Base>:
    cf2c:	stp	x29, x30, [sp, #-96]!
    cf30:	stp	x28, x27, [sp, #16]
    cf34:	stp	x26, x25, [sp, #32]
    cf38:	stp	x24, x23, [sp, #48]
    cf3c:	stp	x22, x21, [sp, #64]
    cf40:	stp	x20, x19, [sp, #80]
    cf44:	mov	x29, sp
    cf48:	mov	x19, x2
    cf4c:	mov	x20, x1
    cf50:	bl	aab0 <pipeline_peekline@plt>
    cf54:	cbz	x0, d03c <check_preprocessor_encoding@@Base+0x110>
    cf58:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    cf5c:	add	x1, x1, #0x95e
    cf60:	mov	w2, #0x4                   	// #4
    cf64:	mov	x21, x0
    cf68:	bl	a610 <strncmp@plt>
    cf6c:	cbz	w0, cf88 <check_preprocessor_encoding@@Base+0x5c>
    cf70:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    cf74:	add	x1, x1, #0x963
    cf78:	mov	w2, #0x4                   	// #4
    cf7c:	mov	x0, x21
    cf80:	bl	a610 <strncmp@plt>
    cf84:	cbnz	w0, d03c <check_preprocessor_encoding@@Base+0x110>
    cf88:	mov	w1, #0xa                   	// #10
    cf8c:	mov	x0, x21
    cf90:	bl	aa60 <strchr@plt>
    cf94:	mov	x22, x0
    cf98:	add	x23, x21, #0x4
    cf9c:	cbnz	x0, cfac <check_preprocessor_encoding@@Base+0x80>
    cfa0:	mov	x0, x23
    cfa4:	bl	a290 <strlen@plt>
    cfa8:	add	x22, x23, x0
    cfac:	adrp	x2, 31000 <vasnprintf@@Base+0x474>
    cfb0:	sub	x1, x22, x23
    cfb4:	add	x2, x2, #0x968
    cfb8:	mov	w3, #0x3                   	// #3
    cfbc:	mov	x0, x23
    cfc0:	bl	a7f0 <memmem@plt>
    cfc4:	cbz	x0, d03c <check_preprocessor_encoding@@Base+0x110>
    cfc8:	add	x25, x0, #0x3
    cfcc:	cmp	x25, x22
    cfd0:	b.cs	d03c <check_preprocessor_encoding@@Base+0x110>  // b.hs, b.nlast
    cfd4:	adrp	x24, 31000 <vasnprintf@@Base+0x474>
    cfd8:	add	x24, x24, #0x96c
    cfdc:	ldrb	w8, [x25]
    cfe0:	cmp	w8, #0x20
    cfe4:	b.eq	cff0 <check_preprocessor_encoding@@Base+0xc4>  // b.none
    cfe8:	cbnz	w8, cffc <check_preprocessor_encoding@@Base+0xd0>
    cfec:	b	d03c <check_preprocessor_encoding@@Base+0x110>
    cff0:	ldrb	w8, [x25, #1]!
    cff4:	cmp	w8, #0x20
    cff8:	b.eq	cff0 <check_preprocessor_encoding@@Base+0xc4>  // b.none
    cffc:	mov	w2, #0x7                   	// #7
    d000:	mov	x0, x25
    d004:	mov	x1, x24
    d008:	bl	a610 <strncmp@plt>
    d00c:	cbz	w0, d060 <check_preprocessor_encoding@@Base+0x134>
    d010:	sub	x2, x22, x25
    d014:	mov	w1, #0x3b                  	// #59
    d018:	mov	x0, x25
    d01c:	bl	ab80 <memchr@plt>
    d020:	cmp	x0, #0x0
    d024:	csinc	x25, xzr, x0, eq  // eq = none
    d028:	mov	x23, xzr
    d02c:	cbz	x25, d040 <check_preprocessor_encoding@@Base+0x114>
    d030:	cmp	x25, x22
    d034:	b.cc	cfdc <check_preprocessor_encoding@@Base+0xb0>  // b.lo, b.ul, b.last
    d038:	b	d040 <check_preprocessor_encoding@@Base+0x114>
    d03c:	mov	x23, xzr
    d040:	mov	x0, x23
    d044:	ldp	x20, x19, [sp, #80]
    d048:	ldp	x22, x21, [sp, #64]
    d04c:	ldp	x24, x23, [sp, #48]
    d050:	ldp	x26, x25, [sp, #32]
    d054:	ldp	x28, x27, [sp, #16]
    d058:	ldp	x29, x30, [sp], #96
    d05c:	ret
    d060:	add	x24, x25, #0x6
    d064:	ldrb	w8, [x24, #1]!
    d068:	cmp	w8, #0x20
    d06c:	b.eq	d064 <check_preprocessor_encoding@@Base+0x138>  // b.none
    d070:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    d074:	add	x1, x1, #0x974
    d078:	mov	x0, x24
    d07c:	bl	aa40 <strspn@plt>
    d080:	mov	x25, x0
    d084:	mov	x0, x24
    d088:	mov	x1, x25
    d08c:	bl	abe0 <xstrndup@plt>
    d090:	mov	x23, x0
    d094:	bl	a290 <strlen@plt>
    d098:	cmp	x0, #0x5
    d09c:	b.cc	d108 <check_preprocessor_encoding@@Base+0x1dc>  // b.lo, b.ul, b.last
    d0a0:	add	x28, x23, x0
    d0a4:	sub	x27, x28, #0x4
    d0a8:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    d0ac:	mov	x26, x0
    d0b0:	add	x1, x1, #0xd46
    d0b4:	mov	x0, x27
    d0b8:	bl	a710 <strcasecmp@plt>
    d0bc:	cbnz	w0, d0c8 <check_preprocessor_encoding@@Base+0x19c>
    d0c0:	add	x8, x26, x23
    d0c4:	sturb	wzr, [x8, #-4]
    d0c8:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    d0cc:	add	x1, x1, #0xd4b
    d0d0:	mov	x0, x27
    d0d4:	bl	a710 <strcasecmp@plt>
    d0d8:	cbnz	w0, d0e4 <check_preprocessor_encoding@@Base+0x1b8>
    d0dc:	add	x8, x26, x23
    d0e0:	sturb	wzr, [x8, #-4]
    d0e4:	cmp	x26, #0x6
    d0e8:	b.cc	d108 <check_preprocessor_encoding@@Base+0x1dc>  // b.lo, b.ul, b.last
    d0ec:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    d0f0:	sub	x0, x28, #0x5
    d0f4:	add	x1, x1, #0xd50
    d0f8:	bl	a710 <strcasecmp@plt>
    d0fc:	cbnz	w0, d108 <check_preprocessor_encoding@@Base+0x1dc>
    d100:	add	x8, x26, x23
    d104:	sturb	wzr, [x8, #-5]
    d108:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d10c:	add	x0, x0, #0xd56
    d110:	mov	x1, x23
    d114:	bl	a710 <strcasecmp@plt>
    d118:	cbz	w0, d448 <check_preprocessor_encoding@@Base+0x51c>
    d11c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d120:	add	x0, x0, #0xd68
    d124:	mov	x1, x23
    d128:	bl	a710 <strcasecmp@plt>
    d12c:	cbz	w0, d454 <check_preprocessor_encoding@@Base+0x528>
    d130:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d134:	add	x0, x0, #0xd74
    d138:	mov	x1, x23
    d13c:	bl	a710 <strcasecmp@plt>
    d140:	cbz	w0, d460 <check_preprocessor_encoding@@Base+0x534>
    d144:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d148:	add	x0, x0, #0xd85
    d14c:	mov	x1, x23
    d150:	bl	a710 <strcasecmp@plt>
    d154:	cbz	w0, d46c <check_preprocessor_encoding@@Base+0x540>
    d158:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d15c:	add	x0, x0, #0xd90
    d160:	mov	x1, x23
    d164:	bl	a710 <strcasecmp@plt>
    d168:	cbz	w0, d478 <check_preprocessor_encoding@@Base+0x54c>
    d16c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d170:	add	x0, x0, #0xd96
    d174:	mov	x1, x23
    d178:	bl	a710 <strcasecmp@plt>
    d17c:	cbz	w0, d484 <check_preprocessor_encoding@@Base+0x558>
    d180:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d184:	add	x0, x0, #0xda8
    d188:	mov	x1, x23
    d18c:	bl	a710 <strcasecmp@plt>
    d190:	cbz	w0, d490 <check_preprocessor_encoding@@Base+0x564>
    d194:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d198:	add	x0, x0, #0xdb6
    d19c:	mov	x1, x23
    d1a0:	bl	a710 <strcasecmp@plt>
    d1a4:	cbz	w0, d49c <check_preprocessor_encoding@@Base+0x570>
    d1a8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d1ac:	add	x0, x0, #0xdc0
    d1b0:	mov	x1, x23
    d1b4:	bl	a710 <strcasecmp@plt>
    d1b8:	cbz	w0, d4a8 <check_preprocessor_encoding@@Base+0x57c>
    d1bc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d1c0:	add	x0, x0, #0xdca
    d1c4:	mov	x1, x23
    d1c8:	bl	a710 <strcasecmp@plt>
    d1cc:	cbz	w0, d4b4 <check_preprocessor_encoding@@Base+0x588>
    d1d0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d1d4:	add	x0, x0, #0xdd9
    d1d8:	mov	x1, x23
    d1dc:	bl	a710 <strcasecmp@plt>
    d1e0:	cbz	w0, d4c0 <check_preprocessor_encoding@@Base+0x594>
    d1e4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d1e8:	add	x0, x0, #0xde0
    d1ec:	mov	x1, x23
    d1f0:	bl	a710 <strcasecmp@plt>
    d1f4:	cbz	w0, d4cc <check_preprocessor_encoding@@Base+0x5a0>
    d1f8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d1fc:	add	x0, x0, #0xdef
    d200:	mov	x1, x23
    d204:	bl	a710 <strcasecmp@plt>
    d208:	cbz	w0, d4d8 <check_preprocessor_encoding@@Base+0x5ac>
    d20c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d210:	add	x0, x0, #0xdfb
    d214:	mov	x1, x23
    d218:	bl	a710 <strcasecmp@plt>
    d21c:	cbz	w0, d4e4 <check_preprocessor_encoding@@Base+0x5b8>
    d220:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d224:	add	x0, x0, #0xe07
    d228:	mov	x1, x23
    d22c:	bl	a710 <strcasecmp@plt>
    d230:	cbz	w0, d4f0 <check_preprocessor_encoding@@Base+0x5c4>
    d234:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d238:	add	x0, x0, #0xe13
    d23c:	mov	x1, x23
    d240:	bl	a710 <strcasecmp@plt>
    d244:	cbz	w0, d4fc <check_preprocessor_encoding@@Base+0x5d0>
    d248:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d24c:	add	x0, x0, #0xe1f
    d250:	mov	x1, x23
    d254:	bl	a710 <strcasecmp@plt>
    d258:	cbz	w0, d508 <check_preprocessor_encoding@@Base+0x5dc>
    d25c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d260:	add	x0, x0, #0xe2b
    d264:	mov	x1, x23
    d268:	bl	a710 <strcasecmp@plt>
    d26c:	cbz	w0, d514 <check_preprocessor_encoding@@Base+0x5e8>
    d270:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d274:	add	x0, x0, #0xe3d
    d278:	mov	x1, x23
    d27c:	bl	a710 <strcasecmp@plt>
    d280:	cbz	w0, d520 <check_preprocessor_encoding@@Base+0x5f4>
    d284:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d288:	add	x0, x0, #0xe4a
    d28c:	mov	x1, x23
    d290:	bl	a710 <strcasecmp@plt>
    d294:	cbz	w0, d52c <check_preprocessor_encoding@@Base+0x600>
    d298:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d29c:	add	x0, x0, #0xe4f
    d2a0:	mov	x1, x23
    d2a4:	bl	a710 <strcasecmp@plt>
    d2a8:	cbz	w0, d538 <check_preprocessor_encoding@@Base+0x60c>
    d2ac:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d2b0:	add	x0, x0, #0xe5a
    d2b4:	mov	x1, x23
    d2b8:	bl	a710 <strcasecmp@plt>
    d2bc:	cbz	w0, d544 <check_preprocessor_encoding@@Base+0x618>
    d2c0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d2c4:	add	x0, x0, #0xe6a
    d2c8:	mov	x1, x23
    d2cc:	bl	a710 <strcasecmp@plt>
    d2d0:	cbz	w0, d550 <check_preprocessor_encoding@@Base+0x624>
    d2d4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d2d8:	add	x0, x0, #0xdf3
    d2dc:	mov	x1, x23
    d2e0:	bl	a710 <strcasecmp@plt>
    d2e4:	cbz	w0, d55c <check_preprocessor_encoding@@Base+0x630>
    d2e8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d2ec:	add	x0, x0, #0xdff
    d2f0:	mov	x1, x23
    d2f4:	bl	a710 <strcasecmp@plt>
    d2f8:	cbz	w0, d568 <check_preprocessor_encoding@@Base+0x63c>
    d2fc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d300:	add	x0, x0, #0xe0b
    d304:	mov	x1, x23
    d308:	bl	a710 <strcasecmp@plt>
    d30c:	cbz	w0, d574 <check_preprocessor_encoding@@Base+0x648>
    d310:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d314:	add	x0, x0, #0xe17
    d318:	mov	x1, x23
    d31c:	bl	a710 <strcasecmp@plt>
    d320:	cbz	w0, d580 <check_preprocessor_encoding@@Base+0x654>
    d324:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d328:	add	x0, x0, #0xe72
    d32c:	mov	x1, x23
    d330:	bl	a710 <strcasecmp@plt>
    d334:	cbz	w0, d58c <check_preprocessor_encoding@@Base+0x660>
    d338:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d33c:	add	x0, x0, #0xe85
    d340:	mov	x1, x23
    d344:	bl	a710 <strcasecmp@plt>
    d348:	cbz	w0, d598 <check_preprocessor_encoding@@Base+0x66c>
    d34c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d350:	add	x0, x0, #0xe9c
    d354:	mov	x1, x23
    d358:	bl	a710 <strcasecmp@plt>
    d35c:	cbz	w0, d5a4 <check_preprocessor_encoding@@Base+0x678>
    d360:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d364:	add	x0, x0, #0xeab
    d368:	mov	x1, x23
    d36c:	bl	a710 <strcasecmp@plt>
    d370:	cbz	w0, d5b0 <check_preprocessor_encoding@@Base+0x684>
    d374:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d378:	add	x0, x0, #0xec8
    d37c:	mov	x1, x23
    d380:	bl	a710 <strcasecmp@plt>
    d384:	cbz	w0, d5bc <check_preprocessor_encoding@@Base+0x690>
    d388:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d38c:	add	x0, x0, #0xedf
    d390:	mov	x1, x23
    d394:	bl	a710 <strcasecmp@plt>
    d398:	cbz	w0, d5c8 <check_preprocessor_encoding@@Base+0x69c>
    d39c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d3a0:	add	x0, x0, #0xeee
    d3a4:	mov	x1, x23
    d3a8:	bl	a710 <strcasecmp@plt>
    d3ac:	cbz	w0, d5d4 <check_preprocessor_encoding@@Base+0x6a8>
    d3b0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d3b4:	add	x0, x0, #0xf0b
    d3b8:	mov	x1, x23
    d3bc:	bl	a710 <strcasecmp@plt>
    d3c0:	cbz	w0, d5e0 <check_preprocessor_encoding@@Base+0x6b4>
    d3c4:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d3c8:	add	x0, x0, #0xea1
    d3cc:	mov	x1, x23
    d3d0:	bl	a710 <strcasecmp@plt>
    d3d4:	cbz	w0, d5ec <check_preprocessor_encoding@@Base+0x6c0>
    d3d8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d3dc:	add	x0, x0, #0xeb0
    d3e0:	mov	x1, x23
    d3e4:	bl	a710 <strcasecmp@plt>
    d3e8:	cbz	w0, d5f8 <check_preprocessor_encoding@@Base+0x6cc>
    d3ec:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d3f0:	add	x0, x0, #0xf16
    d3f4:	mov	x1, x23
    d3f8:	bl	a710 <strcasecmp@plt>
    d3fc:	cbz	w0, d604 <check_preprocessor_encoding@@Base+0x6d8>
    d400:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d404:	add	x0, x0, #0xee4
    d408:	mov	x1, x23
    d40c:	bl	a710 <strcasecmp@plt>
    d410:	cbz	w0, d610 <check_preprocessor_encoding@@Base+0x6e4>
    d414:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d418:	add	x0, x0, #0xef3
    d41c:	mov	x1, x23
    d420:	bl	a710 <strcasecmp@plt>
    d424:	cbz	w0, d61c <check_preprocessor_encoding@@Base+0x6f0>
    d428:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d42c:	add	x0, x0, #0xf2f
    d430:	mov	x1, x23
    d434:	bl	a710 <strcasecmp@plt>
    d438:	cbnz	w0, d638 <check_preprocessor_encoding@@Base+0x70c>
    d43c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d440:	add	x26, x26, #0x760
    d444:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d448:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d44c:	add	x26, x26, #0x4e0
    d450:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d454:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d458:	add	x26, x26, #0x4f0
    d45c:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d460:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d464:	add	x26, x26, #0x500
    d468:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d46c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d470:	add	x26, x26, #0x510
    d474:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d478:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d47c:	add	x26, x26, #0x520
    d480:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d484:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d488:	add	x26, x26, #0x530
    d48c:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d490:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d494:	add	x26, x26, #0x540
    d498:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d49c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4a0:	add	x26, x26, #0x550
    d4a4:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4a8:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4ac:	add	x26, x26, #0x560
    d4b0:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4b4:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4b8:	add	x26, x26, #0x570
    d4bc:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4c0:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4c4:	add	x26, x26, #0x580
    d4c8:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4cc:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4d0:	add	x26, x26, #0x590
    d4d4:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4d8:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4dc:	add	x26, x26, #0x5a0
    d4e0:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4e4:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4e8:	add	x26, x26, #0x5b0
    d4ec:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4f0:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d4f4:	add	x26, x26, #0x5c0
    d4f8:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d4fc:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d500:	add	x26, x26, #0x5d0
    d504:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d508:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d50c:	add	x26, x26, #0x5e0
    d510:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d514:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d518:	add	x26, x26, #0x5f0
    d51c:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d520:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d524:	add	x26, x26, #0x600
    d528:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d52c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d530:	add	x26, x26, #0x610
    d534:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d538:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d53c:	add	x26, x26, #0x620
    d540:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d544:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d548:	add	x26, x26, #0x630
    d54c:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d550:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d554:	add	x26, x26, #0x640
    d558:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d55c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d560:	add	x26, x26, #0x650
    d564:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d568:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d56c:	add	x26, x26, #0x660
    d570:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d574:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d578:	add	x26, x26, #0x670
    d57c:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d580:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d584:	add	x26, x26, #0x680
    d588:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d58c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d590:	add	x26, x26, #0x690
    d594:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d598:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d59c:	add	x26, x26, #0x6a0
    d5a0:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5a4:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5a8:	add	x26, x26, #0x6b0
    d5ac:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5b0:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5b4:	add	x26, x26, #0x6c0
    d5b8:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5bc:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5c0:	add	x26, x26, #0x6d0
    d5c4:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5c8:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5cc:	add	x26, x26, #0x6e0
    d5d0:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5d4:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5d8:	add	x26, x26, #0x6f0
    d5dc:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5e0:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5e4:	add	x26, x26, #0x700
    d5e8:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5ec:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5f0:	add	x26, x26, #0x710
    d5f4:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d5f8:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d5fc:	add	x26, x26, #0x720
    d600:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d604:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d608:	add	x26, x26, #0x730
    d60c:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d610:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d614:	add	x26, x26, #0x740
    d618:	b	d624 <check_preprocessor_encoding@@Base+0x6f8>
    d61c:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d620:	add	x26, x26, #0x750
    d624:	mov	x0, x23
    d628:	bl	a970 <free@plt>
    d62c:	ldr	x0, [x26, #8]
    d630:	bl	a680 <xstrdup@plt>
    d634:	mov	x23, x0
    d638:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d63c:	add	x0, x0, #0x9ba
    d640:	mov	x1, x23
    d644:	bl	a4d0 <debug@plt>
    d648:	cbz	x20, d040 <check_preprocessor_encoding@@Base+0x114>
    d64c:	cbz	x19, d040 <check_preprocessor_encoding@@Base+0x114>
    d650:	cbz	x23, d040 <check_preprocessor_encoding@@Base+0x114>
    d654:	mov	x0, x23
    d658:	mov	x1, x20
    d65c:	bl	a710 <strcasecmp@plt>
    d660:	cbz	w0, d040 <check_preprocessor_encoding@@Base+0x114>
    d664:	cbz	x22, d690 <check_preprocessor_encoding@@Base+0x764>
    d668:	add	x5, x24, x25
    d66c:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d670:	sub	w1, w24, w21
    d674:	sub	w4, w22, w5
    d678:	add	x0, x0, #0xa34
    d67c:	mov	x2, x21
    d680:	mov	x3, x20
    d684:	bl	a9d0 <xasprintf@plt>
    d688:	str	x0, [x19]
    d68c:	b	d040 <check_preprocessor_encoding@@Base+0x114>
    d690:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d694:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    d698:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    d69c:	add	x0, x0, #0x9d5
    d6a0:	add	x1, x1, #0x9e3
    d6a4:	add	x3, x3, #0x9ef
    d6a8:	mov	w2, #0x39a                 	// #922
    d6ac:	bl	ad80 <__assert_fail@plt>

000000000000d6b0 <string_equals@@Base>:
    d6b0:	stp	x29, x30, [sp, #-16]!
    d6b4:	mov	x29, sp
    d6b8:	bl	a8f0 <strcmp@plt>
    d6bc:	cmp	w0, #0x0
    d6c0:	cset	w0, eq  // eq = none
    d6c4:	ldp	x29, x30, [sp], #16
    d6c8:	ret

000000000000d6cc <string_hash@@Base>:
    d6cc:	stp	x29, x30, [sp, #-32]!
    d6d0:	str	x19, [sp, #16]
    d6d4:	mov	x29, sp
    d6d8:	mov	x19, x0
    d6dc:	bl	a290 <strlen@plt>
    d6e0:	mov	x1, x0
    d6e4:	mov	x0, x19
    d6e8:	ldr	x19, [sp, #16]
    d6ec:	ldp	x29, x30, [sp], #32
    d6f0:	b	a8c0 <hash_pjw_bare@plt>

000000000000d6f4 <plain_free@@Base>:
    d6f4:	b	a970 <free@plt>

000000000000d6f8 <new_string_list@@Base>:
    d6f8:	stp	x29, x30, [sp, #-16]!
    d6fc:	and	w4, w1, #0x1
    d700:	adrp	x1, 45000 <vasnprintf@@Base+0x14474>
    d704:	adrp	x2, 45000 <vasnprintf@@Base+0x14474>
    d708:	adrp	x3, 45000 <vasnprintf@@Base+0x14474>
    d70c:	ldr	x8, [x0]
    d710:	ldr	x1, [x1, #3824]
    d714:	ldr	x2, [x2, #3864]
    d718:	ldr	x3, [x3, #4000]
    d71c:	mov	x29, sp
    d720:	blr	x8
    d724:	cbz	x0, d730 <new_string_list@@Base+0x38>
    d728:	ldp	x29, x30, [sp], #16
    d72c:	ret
    d730:	bl	a7e0 <xalloc_die@plt>

000000000000d734 <new_string_map@@Base>:
    d734:	stp	x29, x30, [sp, #-16]!
    d738:	mov	x4, x1
    d73c:	adrp	x1, 45000 <vasnprintf@@Base+0x14474>
    d740:	adrp	x2, 45000 <vasnprintf@@Base+0x14474>
    d744:	adrp	x3, 45000 <vasnprintf@@Base+0x14474>
    d748:	ldr	x8, [x0]
    d74c:	ldr	x1, [x1, #3824]
    d750:	ldr	x2, [x2, #3864]
    d754:	ldr	x3, [x3, #4000]
    d758:	mov	x29, sp
    d75c:	blr	x8
    d760:	cbz	x0, d76c <new_string_map@@Base+0x38>
    d764:	ldp	x29, x30, [sp], #16
    d768:	ret
    d76c:	bl	a7e0 <xalloc_die@plt>

000000000000d770 <new_string_set@@Base>:
    d770:	stp	x29, x30, [sp, #-16]!
    d774:	adrp	x1, 45000 <vasnprintf@@Base+0x14474>
    d778:	adrp	x2, 45000 <vasnprintf@@Base+0x14474>
    d77c:	adrp	x3, 45000 <vasnprintf@@Base+0x14474>
    d780:	ldr	x8, [x0]
    d784:	ldr	x1, [x1, #3824]
    d788:	ldr	x2, [x2, #3864]
    d78c:	ldr	x3, [x3, #4000]
    d790:	mov	x29, sp
    d794:	blr	x8
    d798:	cbz	x0, d7a4 <new_string_set@@Base+0x34>
    d79c:	ldp	x29, x30, [sp], #16
    d7a0:	ret
    d7a4:	bl	a7e0 <xalloc_die@plt>

000000000000d7a8 <get_line_length@@Base>:
    d7a8:	stp	x29, x30, [sp, #-48]!
    d7ac:	str	x21, [sp, #16]
    d7b0:	adrp	x21, 46000 <base_len@@Base+0x30a14>
    d7b4:	ldr	w0, [x21, #1656]
    d7b8:	stp	x20, x19, [sp, #32]
    d7bc:	mov	x29, sp
    d7c0:	cmn	w0, #0x1
    d7c4:	b.eq	d7d8 <get_line_length@@Base+0x30>  // b.none
    d7c8:	ldp	x20, x19, [sp, #32]
    d7cc:	ldr	x21, [sp, #16]
    d7d0:	ldp	x29, x30, [sp], #48
    d7d4:	ret
    d7d8:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d7dc:	mov	w8, #0x50                  	// #80
    d7e0:	add	x0, x0, #0xf66
    d7e4:	str	w8, [x21, #1656]
    d7e8:	bl	adb0 <getenv@plt>
    d7ec:	cbz	x0, d804 <get_line_length@@Base+0x5c>
    d7f0:	mov	w2, #0xa                   	// #10
    d7f4:	mov	x1, xzr
    d7f8:	bl	a940 <strtol@plt>
    d7fc:	cmp	w0, #0x1
    d800:	b.ge	d868 <get_line_length@@Base+0xc0>  // b.tcont
    d804:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d808:	add	x0, x0, #0xf6f
    d80c:	bl	adb0 <getenv@plt>
    d810:	cbz	x0, d828 <get_line_length@@Base+0x80>
    d814:	mov	w2, #0xa                   	// #10
    d818:	mov	x1, xzr
    d81c:	bl	a940 <strtol@plt>
    d820:	cmp	w0, #0x1
    d824:	b.ge	d868 <get_line_length@@Base+0xc0>  // b.tcont
    d828:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d82c:	add	x0, x0, #0xf77
    d830:	mov	w1, wzr
    d834:	bl	a5a0 <open@plt>
    d838:	tbnz	w0, #31, d87c <get_line_length@@Base+0xd4>
    d83c:	add	x2, x29, #0x18
    d840:	mov	w1, #0x5413                	// #21523
    d844:	mov	w19, w0
    d848:	bl	aa50 <rpl_ioctl@plt>
    d84c:	mov	w20, w0
    d850:	mov	w0, w19
    d854:	bl	a7a0 <close@plt>
    d858:	cbnz	w20, d8b0 <get_line_length@@Base+0x108>
    d85c:	ldrh	w0, [x29, #26]
    d860:	cbnz	w0, d868 <get_line_length@@Base+0xc0>
    d864:	mov	w0, #0x50                  	// #80
    d868:	str	w0, [x21, #1656]
    d86c:	ldp	x20, x19, [sp, #32]
    d870:	ldr	x21, [sp, #16]
    d874:	ldp	x29, x30, [sp], #48
    d878:	ret
    d87c:	mov	w0, #0x1                   	// #1
    d880:	mov	w19, #0x1                   	// #1
    d884:	bl	abc0 <isatty@plt>
    d888:	cbnz	w0, d898 <get_line_length@@Base+0xf0>
    d88c:	bl	abc0 <isatty@plt>
    d890:	mov	w19, wzr
    d894:	cbz	w0, d864 <get_line_length@@Base+0xbc>
    d898:	add	x2, x29, #0x18
    d89c:	mov	w1, #0x5413                	// #21523
    d8a0:	mov	w0, w19
    d8a4:	bl	aa50 <rpl_ioctl@plt>
    d8a8:	mov	w20, w0
    d8ac:	cbz	w20, d85c <get_line_length@@Base+0xb4>
    d8b0:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    d8b4:	add	x0, x0, #0xf80
    d8b8:	bl	a2e0 <perror@plt>
    d8bc:	b	d864 <get_line_length@@Base+0xbc>

000000000000d8c0 <order_files@@Base>:
    d8c0:	sub	sp, sp, #0x180
    d8c4:	stp	x29, x30, [sp, #288]
    d8c8:	stp	x28, x27, [sp, #304]
    d8cc:	stp	x26, x25, [sp, #320]
    d8d0:	stp	x24, x23, [sp, #336]
    d8d4:	stp	x22, x21, [sp, #352]
    d8d8:	stp	x20, x19, [sp, #368]
    d8dc:	ldr	x20, [x1]
    d8e0:	mov	x19, x1
    d8e4:	mov	w1, #0x4000                	// #16384
    d8e8:	movk	w1, #0x20, lsl #16
    d8ec:	add	x29, sp, #0x120
    d8f0:	bl	a5a0 <open@plt>
    d8f4:	tbnz	w0, #31, dac8 <order_files@@Base+0x208>
    d8f8:	sub	x1, x29, #0x80
    d8fc:	mov	w21, w0
    d900:	bl	a630 <fstatfs@plt>
    d904:	tbnz	w0, #31, dac0 <order_files@@Base+0x200>
    d908:	adrp	x0, 45000 <vasnprintf@@Base+0x14474>
    d90c:	ldr	x0, [x0, #3912]
    d910:	adrp	x1, 45000 <vasnprintf@@Base+0x14474>
    d914:	adrp	x2, 45000 <vasnprintf@@Base+0x14474>
    d918:	adrp	x4, 45000 <vasnprintf@@Base+0x14474>
    d91c:	ldr	x8, [x0]
    d920:	ldr	x1, [x1, #3824]
    d924:	ldr	x2, [x2, #3864]
    d928:	ldr	x4, [x4, #4000]
    d92c:	mov	x3, xzr
    d930:	blr	x8
    d934:	cbz	x0, dae8 <order_files@@Base+0x228>
    d938:	adrp	x26, 45000 <vasnprintf@@Base+0x14474>
    d93c:	ldr	x26, [x26, #3984]
    d940:	mov	w1, wzr
    d944:	str	x0, [x26]
    d948:	adrp	x0, 45000 <vasnprintf@@Base+0x14474>
    d94c:	ldr	x0, [x0, #3896]
    d950:	bl	aba0 <new_string_list@plt>
    d954:	ldr	x8, [x20]
    d958:	mov	x22, x0
    d95c:	mov	x0, x20
    d960:	ldr	x9, [x8, #160]
    d964:	add	x8, sp, #0x60
    d968:	blr	x9
    d96c:	ldr	x8, [sp, #96]
    d970:	add	x0, sp, #0x60
    d974:	sub	x1, x29, #0x88
    d978:	add	x2, sp, #0x58
    d97c:	ldr	x8, [x8, #176]
    d980:	blr	x8
    d984:	tbz	w0, #0, da7c <order_files@@Base+0x1bc>
    d988:	adrp	x23, d000 <check_preprocessor_encoding@@Base+0xd4>
    d98c:	mov	w27, #0x1                   	// #1
    d990:	add	x23, x23, #0xaec
    d994:	b	d9e4 <order_files@@Base+0x124>
    d998:	tbnz	w0, #31, dae8 <order_files@@Base+0x228>
    d99c:	mov	w0, w24
    d9a0:	bl	a7a0 <close@plt>
    d9a4:	ldur	x0, [x29, #-136]
    d9a8:	bl	a680 <xstrdup@plt>
    d9ac:	ldr	x8, [x22]
    d9b0:	mov	x2, x0
    d9b4:	mov	x0, x22
    d9b8:	mov	x1, x23
    d9bc:	ldr	x8, [x8, #224]
    d9c0:	blr	x8
    d9c4:	cbz	x0, dae8 <order_files@@Base+0x228>
    d9c8:	ldr	x8, [sp, #96]
    d9cc:	add	x0, sp, #0x60
    d9d0:	sub	x1, x29, #0x88
    d9d4:	add	x2, sp, #0x58
    d9d8:	ldr	x8, [x8, #176]
    d9dc:	blr	x8
    d9e0:	tbz	w0, #0, da7c <order_files@@Base+0x1bc>
    d9e4:	ldur	x1, [x29, #-136]
    d9e8:	mov	w0, w21
    d9ec:	mov	w2, wzr
    d9f0:	bl	ad70 <openat@plt>
    d9f4:	tbnz	w0, #31, d9c8 <order_files@@Base+0x108>
    d9f8:	ldur	x8, [x29, #-120]
    d9fc:	mov	w1, #0x660b                	// #26123
    da00:	movi	v0.2d, #0x0
    da04:	mov	x2, sp
    da08:	movk	w1, #0xc020, lsl #16
    da0c:	mov	w24, w0
    da10:	stp	q0, q0, [sp]
    da14:	str	xzr, [sp, #80]
    da18:	stp	q0, q0, [sp, #48]
    da1c:	str	q0, [sp, #32]
    da20:	str	x8, [sp, #8]
    da24:	str	wzr, [sp, #16]
    da28:	str	w27, [sp, #24]
    da2c:	bl	aa50 <rpl_ioctl@plt>
    da30:	cbnz	w0, d99c <order_files@@Base+0xdc>
    da34:	mov	w0, #0x8                   	// #8
    da38:	bl	a660 <xmalloc@plt>
    da3c:	ldr	x8, [sp, #40]
    da40:	ldr	x25, [x26]
    da44:	ldur	x1, [x29, #-136]
    da48:	mov	x2, x0
    da4c:	str	x8, [x0]
    da50:	ldr	x8, [x25]
    da54:	sub	x3, x29, #0x8
    da58:	mov	x0, x25
    da5c:	ldr	x8, [x8, #24]
    da60:	blr	x8
    da64:	cbnz	w0, d998 <order_files@@Base+0xd8>
    da68:	ldr	x8, [x25, #24]
    da6c:	cbz	x8, d99c <order_files@@Base+0xdc>
    da70:	ldur	x0, [x29, #-8]
    da74:	blr	x8
    da78:	b	d99c <order_files@@Base+0xdc>
    da7c:	ldr	x8, [sp, #96]
    da80:	add	x0, sp, #0x60
    da84:	ldr	x8, [x8, #184]
    da88:	blr	x8
    da8c:	ldr	x0, [x26]
    da90:	ldr	x8, [x0]
    da94:	ldr	x8, [x8, #40]
    da98:	blr	x8
    da9c:	mov	w0, w21
    daa0:	str	xzr, [x26]
    daa4:	bl	a7a0 <close@plt>
    daa8:	ldr	x8, [x20]
    daac:	mov	x0, x20
    dab0:	ldr	x8, [x8, #152]
    dab4:	blr	x8
    dab8:	str	x22, [x19]
    dabc:	b	dac8 <order_files@@Base+0x208>
    dac0:	mov	w0, w21
    dac4:	bl	a7a0 <close@plt>
    dac8:	ldp	x20, x19, [sp, #368]
    dacc:	ldp	x22, x21, [sp, #352]
    dad0:	ldp	x24, x23, [sp, #336]
    dad4:	ldp	x26, x25, [sp, #320]
    dad8:	ldp	x28, x27, [sp, #304]
    dadc:	ldp	x29, x30, [sp, #288]
    dae0:	add	sp, sp, #0x180
    dae4:	ret
    dae8:	bl	a7e0 <xalloc_die@plt>
    daec:	sub	sp, sp, #0x30
    daf0:	stp	x29, x30, [sp, #16]
    daf4:	stp	x20, x19, [sp, #32]
    daf8:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    dafc:	ldr	x20, [x20, #3984]
    db00:	str	xzr, [sp, #8]
    db04:	mov	x19, x1
    db08:	mov	x1, x0
    db0c:	ldr	x8, [x20]
    db10:	add	x2, sp, #0x8
    db14:	add	x29, sp, #0x10
    db18:	ldr	x9, [x8]
    db1c:	mov	x0, x8
    db20:	ldr	x9, [x9, #16]
    db24:	blr	x9
    db28:	ldr	x0, [x20]
    db2c:	ldr	x20, [sp, #8]
    db30:	str	xzr, [sp, #8]
    db34:	add	x2, sp, #0x8
    db38:	ldr	x8, [x0]
    db3c:	mov	x1, x19
    db40:	ldr	x8, [x8, #16]
    db44:	blr	x8
    db48:	ldr	x9, [sp, #8]
    db4c:	cbz	x20, db60 <order_files@@Base+0x2a0>
    db50:	ldr	x8, [x20]
    db54:	cbz	x9, db68 <order_files@@Base+0x2a8>
    db58:	ldr	x9, [x9]
    db5c:	b	db6c <order_files@@Base+0x2ac>
    db60:	mov	x8, #0xffffffffffffffff    	// #-1
    db64:	cbnz	x9, db58 <order_files@@Base+0x298>
    db68:	mov	x9, #0xffffffffffffffff    	// #-1
    db6c:	ldp	x20, x19, [sp, #32]
    db70:	ldp	x29, x30, [sp, #16]
    db74:	cmp	x8, x9
    db78:	cset	w8, hi  // hi = pmore
    db7c:	csinv	w0, w8, wzr, cs  // cs = hs, nlast
    db80:	add	sp, sp, #0x30
    db84:	ret

000000000000db88 <pathsearch_executable@@Base>:
    db88:	sub	sp, sp, #0xe0
    db8c:	stp	x20, x19, [sp, #208]
    db90:	mov	x19, x0
    db94:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    db98:	add	x0, x0, #0xf92
    db9c:	stp	x29, x30, [sp, #128]
    dba0:	str	x27, [sp, #144]
    dba4:	stp	x26, x25, [sp, #160]
    dba8:	stp	x24, x23, [sp, #176]
    dbac:	stp	x22, x21, [sp, #192]
    dbb0:	add	x29, sp, #0x80
    dbb4:	bl	adb0 <getenv@plt>
    dbb8:	cbz	x0, dc0c <pathsearch_executable@@Base+0x84>
    dbbc:	mov	x20, x0
    dbc0:	mov	w1, #0x2f                  	// #47
    dbc4:	mov	x0, x19
    dbc8:	bl	aa60 <strchr@plt>
    dbcc:	cbz	x0, dc14 <pathsearch_executable@@Base+0x8c>
    dbd0:	mov	x2, sp
    dbd4:	mov	w0, wzr
    dbd8:	mov	x1, x19
    dbdc:	bl	add0 <__xstat@plt>
    dbe0:	cmn	w0, #0x1
    dbe4:	b.eq	dc0c <pathsearch_executable@@Base+0x84>  // b.none
    dbe8:	ldr	w8, [sp, #16]
    dbec:	mov	w9, #0x49                  	// #73
    dbf0:	and	w10, w8, #0xf000
    dbf4:	cmp	w10, #0x8, lsl #12
    dbf8:	cset	w10, eq  // eq = none
    dbfc:	tst	w8, w9
    dc00:	cset	w8, ne  // ne = any
    dc04:	and	w26, w8, w10
    dc08:	b	dd08 <pathsearch_executable@@Base+0x180>
    dc0c:	mov	w26, wzr
    dc10:	b	dd08 <pathsearch_executable@@Base+0x180>
    dc14:	mov	x0, x20
    dc18:	bl	a680 <xstrdup@plt>
    dc1c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    dc20:	mov	x20, x0
    dc24:	str	x0, [x29, #24]
    dc28:	add	x1, x1, #0x1e0
    dc2c:	add	x0, x29, #0x18
    dc30:	bl	a8e0 <strsep@plt>
    dc34:	cbz	x0, dcf0 <pathsearch_executable@@Base+0x168>
    dc38:	adrp	x22, 31000 <vasnprintf@@Base+0x474>
    dc3c:	adrp	x23, 32000 <vasnprintf@@Base+0x1474>
    dc40:	mov	x1, x0
    dc44:	mov	w26, wzr
    dc48:	mov	x21, xzr
    dc4c:	add	x22, x22, #0xf97
    dc50:	add	x23, x23, #0x1e0
    dc54:	mov	w27, #0x49                  	// #73
    dc58:	b	dc70 <pathsearch_executable@@Base+0xe8>
    dc5c:	add	x0, x29, #0x18
    dc60:	mov	x1, x23
    dc64:	bl	a8e0 <strsep@plt>
    dc68:	mov	x1, x0
    dc6c:	cbz	x0, dcf8 <pathsearch_executable@@Base+0x170>
    dc70:	ldrb	w8, [x1]
    dc74:	cbnz	w8, dc8c <pathsearch_executable@@Base+0x104>
    dc78:	mov	x1, x21
    dc7c:	cbnz	x21, dc8c <pathsearch_executable@@Base+0x104>
    dc80:	bl	aec0 <xgetcwd@plt>
    dc84:	mov	x21, x0
    dc88:	mov	x1, x0
    dc8c:	mov	x0, x22
    dc90:	mov	x2, x19
    dc94:	bl	a9d0 <xasprintf@plt>
    dc98:	mov	x24, x0
    dc9c:	mov	x2, sp
    dca0:	mov	w0, wzr
    dca4:	mov	x1, x24
    dca8:	bl	add0 <__xstat@plt>
    dcac:	mov	w25, w0
    dcb0:	mov	x0, x24
    dcb4:	bl	a970 <free@plt>
    dcb8:	cmn	w25, #0x1
    dcbc:	b.eq	dc5c <pathsearch_executable@@Base+0xd4>  // b.none
    dcc0:	ldr	w8, [sp, #16]
    dcc4:	and	w9, w8, #0xf000
    dcc8:	tst	w8, w27
    dccc:	cset	w10, ne  // ne = any
    dcd0:	cmp	w9, #0x8, lsl #12
    dcd4:	cset	w9, eq  // eq = none
    dcd8:	and	w9, w9, w10
    dcdc:	orr	w26, w26, w9
    dce0:	b.ne	dc5c <pathsearch_executable@@Base+0xd4>  // b.any
    dce4:	and	w8, w8, w27
    dce8:	cbz	w8, dc5c <pathsearch_executable@@Base+0xd4>
    dcec:	b	dcf8 <pathsearch_executable@@Base+0x170>
    dcf0:	mov	x21, xzr
    dcf4:	mov	w26, wzr
    dcf8:	mov	x0, x20
    dcfc:	bl	a970 <free@plt>
    dd00:	mov	x0, x21
    dd04:	bl	a970 <free@plt>
    dd08:	and	w0, w26, #0x1
    dd0c:	ldp	x20, x19, [sp, #208]
    dd10:	ldp	x22, x21, [sp, #192]
    dd14:	ldp	x24, x23, [sp, #176]
    dd18:	ldp	x26, x25, [sp, #160]
    dd1c:	ldr	x27, [sp, #144]
    dd20:	ldp	x29, x30, [sp, #128]
    dd24:	add	sp, sp, #0xe0
    dd28:	ret

000000000000dd2c <directory_on_path@@Base>:
    dd2c:	sub	sp, sp, #0x40
    dd30:	stp	x20, x19, [sp, #48]
    dd34:	mov	x20, x0
    dd38:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    dd3c:	add	x0, x0, #0xf92
    dd40:	stp	x29, x30, [sp, #16]
    dd44:	stp	x22, x21, [sp, #32]
    dd48:	add	x29, sp, #0x10
    dd4c:	bl	adb0 <getenv@plt>
    dd50:	cbz	x0, ddbc <directory_on_path@@Base+0x90>
    dd54:	bl	a680 <xstrdup@plt>
    dd58:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    dd5c:	mov	x19, x0
    dd60:	str	x0, [sp, #8]
    dd64:	add	x1, x1, #0x1e0
    dd68:	add	x0, sp, #0x8
    dd6c:	bl	a8e0 <strsep@plt>
    dd70:	mov	x21, xzr
    dd74:	cbz	x0, ddb4 <directory_on_path@@Base+0x88>
    dd78:	adrp	x22, 32000 <vasnprintf@@Base+0x1474>
    dd7c:	add	x22, x22, #0x1e0
    dd80:	ldrb	w8, [x0]
    dd84:	cbnz	w8, dd98 <directory_on_path@@Base+0x6c>
    dd88:	mov	x0, x21
    dd8c:	cbnz	x21, dd98 <directory_on_path@@Base+0x6c>
    dd90:	bl	aec0 <xgetcwd@plt>
    dd94:	mov	x21, x0
    dd98:	mov	x1, x20
    dd9c:	bl	a8f0 <strcmp@plt>
    dda0:	cbz	w0, ddc4 <directory_on_path@@Base+0x98>
    dda4:	add	x0, sp, #0x8
    dda8:	mov	x1, x22
    ddac:	bl	a8e0 <strsep@plt>
    ddb0:	cbnz	x0, dd80 <directory_on_path@@Base+0x54>
    ddb4:	mov	w20, wzr
    ddb8:	b	ddc8 <directory_on_path@@Base+0x9c>
    ddbc:	mov	w20, wzr
    ddc0:	b	ddd8 <directory_on_path@@Base+0xac>
    ddc4:	mov	w20, #0x1                   	// #1
    ddc8:	mov	x0, x19
    ddcc:	bl	a970 <free@plt>
    ddd0:	mov	x0, x21
    ddd4:	bl	a970 <free@plt>
    ddd8:	mov	w0, w20
    dddc:	ldp	x20, x19, [sp, #48]
    dde0:	ldp	x22, x21, [sp, #32]
    dde4:	ldp	x29, x30, [sp, #16]
    dde8:	add	sp, sp, #0x40
    ddec:	ret

000000000000ddf0 <sandbox_init@@Base>:
    ddf0:	stp	x29, x30, [sp, #-16]!
    ddf4:	mov	w0, #0x1                   	// #1
    ddf8:	mov	x29, sp
    ddfc:	bl	abd0 <xzalloc@plt>
    de00:	strb	wzr, [x0]
    de04:	ldp	x29, x30, [sp], #16
    de08:	ret

000000000000de0c <sandbox_load@@Base>:
    de0c:	ret

000000000000de10 <sandbox_load_permissive@@Base>:
    de10:	ret

000000000000de14 <sandbox_free@@Base>:
    de14:	b	a970 <free@plt>

000000000000de18 <init_security@@Base>:
    de18:	stp	x29, x30, [sp, #-32]!
    de1c:	str	x19, [sp, #16]
    de20:	mov	x29, sp
    de24:	bl	a400 <getuid@plt>
    de28:	adrp	x19, 45000 <vasnprintf@@Base+0x14474>
    de2c:	ldr	x19, [x19, #4064]
    de30:	str	w0, [x19]
    de34:	bl	a350 <geteuid@plt>
    de38:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    de3c:	ldr	x8, [x8, #3784]
    de40:	ldr	w1, [x19]
    de44:	mov	w2, w0
    de48:	str	w0, [x8]
    de4c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    de50:	ldr	x8, [x8, #3952]
    de54:	str	w0, [x8]
    de58:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    de5c:	add	x0, x0, #0xf9d
    de60:	bl	a4d0 <debug@plt>
    de64:	bl	a9b0 <getgid@plt>
    de68:	adrp	x19, 45000 <vasnprintf@@Base+0x14474>
    de6c:	ldr	x19, [x19, #3960]
    de70:	str	w0, [x19]
    de74:	bl	a300 <getegid@plt>
    de78:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    de7c:	ldr	x8, [x8, #3760]
    de80:	ldr	w1, [x19]
    de84:	mov	w2, w0
    de88:	str	w0, [x8]
    de8c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    de90:	ldr	x8, [x8, #3792]
    de94:	str	w0, [x8]
    de98:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    de9c:	add	x0, x0, #0xfaf
    dea0:	bl	a4d0 <debug@plt>
    dea4:	ldr	x19, [sp, #16]
    dea8:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    deac:	str	wzr, [x8, #2264]
    deb0:	ldp	x29, x30, [sp], #32
    deb4:	b	a810 <drop_effective_privs@plt>

000000000000deb8 <drop_effective_privs@@Base>:
    deb8:	stp	x29, x30, [sp, #-48]!
    debc:	str	x21, [sp, #16]
    dec0:	stp	x20, x19, [sp, #32]
    dec4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    dec8:	adrp	x21, 45000 <vasnprintf@@Base+0x14474>
    decc:	ldr	x20, [x20, #3952]
    ded0:	ldr	x21, [x21, #4064]
    ded4:	mov	x29, sp
    ded8:	ldr	w8, [x20]
    dedc:	ldr	w9, [x21]
    dee0:	cmp	w8, w9
    dee4:	b.eq	df48 <drop_effective_privs@@Base+0x90>  // b.none
    dee8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    deec:	add	x0, x0, #0x25
    def0:	bl	a4d0 <debug@plt>
    def4:	bl	a5e0 <idpriv_temp_drop@plt>
    def8:	cbz	w0, df28 <drop_effective_privs@@Base+0x70>
    defc:	bl	ad90 <__errno_location@plt>
    df00:	ldr	w19, [x0]
    df04:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    df08:	add	x1, x1, #0x87
    df0c:	mov	w2, #0x5                   	// #5
    df10:	mov	x0, xzr
    df14:	bl	ac90 <dcgettext@plt>
    df18:	mov	x2, x0
    df1c:	mov	w0, #0x2                   	// #2
    df20:	mov	w1, w19
    df24:	bl	a2b0 <error@plt>
    df28:	ldr	w8, [x21]
    df2c:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    df30:	ldr	x9, [x9, #3960]
    df34:	str	w8, [x20]
    df38:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    df3c:	ldr	w9, [x9]
    df40:	ldr	x8, [x8, #3792]
    df44:	str	w9, [x8]
    df48:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    df4c:	ldr	w9, [x8, #2264]
    df50:	ldr	x21, [sp, #16]
    df54:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    df58:	add	x0, x0, #0x3d
    df5c:	add	w1, w9, #0x1
    df60:	str	w1, [x8, #2264]
    df64:	ldp	x20, x19, [sp, #32]
    df68:	ldp	x29, x30, [sp], #48
    df6c:	b	a4d0 <debug@plt>

000000000000df70 <running_setuid@@Base>:
    df70:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    df74:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    df78:	ldr	x8, [x8, #4064]
    df7c:	ldr	x9, [x9, #3784]
    df80:	ldr	w8, [x8]
    df84:	ldr	w9, [x9]
    df88:	cmp	w8, w9
    df8c:	cset	w0, ne  // ne = any
    df90:	ret

000000000000df94 <get_man_owner@@Base>:
    df94:	stp	x29, x30, [sp, #-32]!
    df98:	str	x19, [sp, #16]
    df9c:	adrp	x19, 46000 <base_len@@Base+0x30a14>
    dfa0:	ldr	x0, [x19, #2272]
    dfa4:	mov	x29, sp
    dfa8:	cbnz	x0, dff0 <get_man_owner@@Base+0x5c>
    dfac:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    dfb0:	add	x0, x0, #0xfc1
    dfb4:	bl	a670 <getpwnam@plt>
    dfb8:	str	x0, [x19, #2272]
    dfbc:	cbnz	x0, dff0 <get_man_owner@@Base+0x5c>
    dfc0:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    dfc4:	add	x1, x1, #0xfc5
    dfc8:	mov	w2, #0x5                   	// #5
    dfcc:	bl	ac90 <dcgettext@plt>
    dfd0:	adrp	x3, 31000 <vasnprintf@@Base+0x474>
    dfd4:	mov	x2, x0
    dfd8:	add	x3, x3, #0xfc1
    dfdc:	mov	w0, #0x1                   	// #1
    dfe0:	mov	w1, wzr
    dfe4:	bl	a2b0 <error@plt>
    dfe8:	ldr	x0, [x19, #2272]
    dfec:	cbz	x0, dffc <get_man_owner@@Base+0x68>
    dff0:	ldr	x19, [sp, #16]
    dff4:	ldp	x29, x30, [sp], #32
    dff8:	ret
    dffc:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    e000:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
    e004:	adrp	x3, 32000 <vasnprintf@@Base+0x1474>
    e008:	add	x0, x0, #0xfed
    e00c:	add	x1, x1, #0xff7
    e010:	add	x3, x3, #0x2
    e014:	mov	w2, #0x78                  	// #120
    e018:	bl	ad80 <__assert_fail@plt>

000000000000e01c <regain_effective_privs@@Base>:
    e01c:	stp	x29, x30, [sp, #-48]!
    e020:	stp	x20, x19, [sp, #32]
    e024:	adrp	x19, 46000 <base_len@@Base+0x30a14>
    e028:	ldr	w8, [x19, #2264]
    e02c:	str	x21, [sp, #16]
    e030:	mov	x29, sp
    e034:	cbz	w8, e064 <regain_effective_privs@@Base+0x48>
    e038:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e03c:	sub	w1, w8, #0x1
    e040:	add	x0, x0, #0x55
    e044:	str	w1, [x19, #2264]
    e048:	bl	a4d0 <debug@plt>
    e04c:	ldr	w8, [x19, #2264]
    e050:	cbz	w8, e064 <regain_effective_privs@@Base+0x48>
    e054:	ldp	x20, x19, [sp, #32]
    e058:	ldr	x21, [sp, #16]
    e05c:	ldp	x29, x30, [sp], #48
    e060:	ret
    e064:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
    e068:	adrp	x21, 45000 <vasnprintf@@Base+0x14474>
    e06c:	ldr	x20, [x20, #3952]
    e070:	ldr	x21, [x21, #3784]
    e074:	ldr	w8, [x20]
    e078:	ldr	w9, [x21]
    e07c:	cmp	w8, w9
    e080:	b.eq	e054 <regain_effective_privs@@Base+0x38>  // b.none
    e084:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e088:	add	x0, x0, #0x6d
    e08c:	bl	a4d0 <debug@plt>
    e090:	bl	ab90 <idpriv_temp_restore@plt>
    e094:	cbz	w0, e0c4 <regain_effective_privs@@Base+0xa8>
    e098:	bl	ad90 <__errno_location@plt>
    e09c:	ldr	w19, [x0]
    e0a0:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    e0a4:	add	x1, x1, #0x87
    e0a8:	mov	w2, #0x5                   	// #5
    e0ac:	mov	x0, xzr
    e0b0:	bl	ac90 <dcgettext@plt>
    e0b4:	mov	x2, x0
    e0b8:	mov	w0, #0x2                   	// #2
    e0bc:	mov	w1, w19
    e0c0:	bl	a2b0 <error@plt>
    e0c4:	ldr	w8, [x21]
    e0c8:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
    e0cc:	ldr	x9, [x9, #3760]
    e0d0:	str	w8, [x20]
    e0d4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
    e0d8:	ldr	w9, [x9]
    e0dc:	ldr	x8, [x8, #3792]
    e0e0:	str	w9, [x8]
    e0e4:	ldp	x20, x19, [sp, #32]
    e0e8:	ldr	x21, [sp, #16]
    e0ec:	ldp	x29, x30, [sp], #48
    e0f0:	ret

000000000000e0f4 <drop_privs@@Base>:
    e0f4:	stp	x29, x30, [sp, #-32]!
    e0f8:	str	x19, [sp, #16]
    e0fc:	mov	x29, sp
    e100:	bl	ab00 <idpriv_drop@plt>
    e104:	cbz	w0, e13c <drop_privs@@Base+0x48>
    e108:	bl	ad90 <__errno_location@plt>
    e10c:	ldr	w19, [x0]
    e110:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    e114:	add	x1, x1, #0x87
    e118:	mov	w2, #0x5                   	// #5
    e11c:	mov	x0, xzr
    e120:	bl	ac90 <dcgettext@plt>
    e124:	mov	w1, w19
    e128:	ldr	x19, [sp, #16]
    e12c:	mov	x2, x0
    e130:	mov	w0, #0x2                   	// #2
    e134:	ldp	x29, x30, [sp], #32
    e138:	b	a2b0 <error@plt>
    e13c:	ldr	x19, [sp, #16]
    e140:	ldp	x29, x30, [sp], #32
    e144:	ret

000000000000e148 <create_tempdir@@Base>:
    e148:	stp	x29, x30, [sp, #-32]!
    e14c:	stp	x20, x19, [sp, #16]
    e150:	mov	x29, sp
    e154:	mov	x19, x0
    e158:	bl	a400 <getuid@plt>
    e15c:	mov	w20, w0
    e160:	bl	a350 <geteuid@plt>
    e164:	cmp	w20, w0
    e168:	b.ne	e1c0 <create_tempdir@@Base+0x78>  // b.any
    e16c:	bl	a9b0 <getgid@plt>
    e170:	mov	w20, w0
    e174:	bl	a300 <getegid@plt>
    e178:	cmp	w20, w0
    e17c:	b.ne	e1c0 <create_tempdir@@Base+0x78>  // b.any
    e180:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e184:	add	x0, x0, #0xab
    e188:	bl	adb0 <getenv@plt>
    e18c:	cbz	x0, e1a0 <create_tempdir@@Base+0x58>
    e190:	mov	w1, #0x2                   	// #2
    e194:	mov	x20, x0
    e198:	bl	a8a0 <access@plt>
    e19c:	cbz	w0, e200 <create_tempdir@@Base+0xb8>
    e1a0:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e1a4:	add	x0, x0, #0xb2
    e1a8:	bl	adb0 <getenv@plt>
    e1ac:	cbz	x0, e1c0 <create_tempdir@@Base+0x78>
    e1b0:	mov	w1, #0x2                   	// #2
    e1b4:	mov	x20, x0
    e1b8:	bl	a8a0 <access@plt>
    e1bc:	cbz	w0, e200 <create_tempdir@@Base+0xb8>
    e1c0:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    e1c4:	add	x20, x20, #0xb6
    e1c8:	mov	w1, #0x2                   	// #2
    e1cc:	mov	x0, x20
    e1d0:	bl	a8a0 <access@plt>
    e1d4:	cbz	w0, e200 <create_tempdir@@Base+0xb8>
    e1d8:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    e1dc:	add	x20, x20, #0xb6
    e1e0:	mov	w1, #0x2                   	// #2
    e1e4:	mov	x0, x20
    e1e8:	bl	a8a0 <access@plt>
    e1ec:	cbz	w0, e200 <create_tempdir@@Base+0xb8>
    e1f0:	mov	x0, xzr
    e1f4:	ldp	x20, x19, [sp, #16]
    e1f8:	ldp	x29, x30, [sp], #32
    e1fc:	ret
    e200:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e204:	add	x0, x0, #0x9f
    e208:	mov	x1, x20
    e20c:	mov	x2, x19
    e210:	bl	a9d0 <xasprintf@plt>
    e214:	mov	x19, x0
    e218:	bl	a830 <mkdtemp@plt>
    e21c:	cmp	x0, #0x0
    e220:	csel	x0, xzr, x19, eq  // eq = none
    e224:	ldp	x20, x19, [sp, #16]
    e228:	ldp	x29, x30, [sp], #32
    e22c:	ret

000000000000e230 <is_changed@@Base>:
    e230:	sub	sp, sp, #0x130
    e234:	stp	x20, x19, [sp, #288]
    e238:	mov	x19, x1
    e23c:	mov	x20, x0
    e240:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e244:	add	x0, x0, #0xbb
    e248:	mov	x1, x20
    e24c:	mov	x2, x19
    e250:	stp	x29, x30, [sp, #256]
    e254:	str	x28, [sp, #272]
    e258:	add	x29, sp, #0x100
    e25c:	bl	a4d0 <debug@plt>
    e260:	add	x2, sp, #0x80
    e264:	mov	w0, wzr
    e268:	mov	x1, x20
    e26c:	bl	add0 <__xstat@plt>
    e270:	cmp	w0, #0x0
    e274:	mov	x2, sp
    e278:	mov	w0, wzr
    e27c:	mov	x1, x19
    e280:	cset	w20, ne  // ne = any
    e284:	bl	add0 <__xstat@plt>
    e288:	orr	w8, w20, #0x2
    e28c:	cmp	w0, #0x0
    e290:	csel	w8, w20, w8, eq  // eq = none
    e294:	cbz	w8, e2a0 <is_changed@@Base+0x70>
    e298:	neg	w19, w8
    e29c:	b	e2f0 <is_changed@@Base+0xc0>
    e2a0:	ldr	x9, [sp, #176]
    e2a4:	ldr	x11, [sp, #48]
    e2a8:	ldr	x10, [sp, #216]
    e2ac:	ldr	x12, [sp, #88]
    e2b0:	cmp	x9, #0x0
    e2b4:	mov	w8, #0x4                   	// #4
    e2b8:	cset	w9, eq  // eq = none
    e2bc:	cmp	x11, #0x0
    e2c0:	lsl	w11, w9, #1
    e2c4:	bfi	w8, w9, #1, #1
    e2c8:	csel	w8, w8, w11, eq  // eq = none
    e2cc:	cmp	x10, x12
    e2d0:	b.ne	e2e8 <is_changed@@Base+0xb8>  // b.any
    e2d4:	ldr	x9, [sp, #224]
    e2d8:	ldr	x10, [sp, #96]
    e2dc:	cmp	w9, w10
    e2e0:	cset	w9, ne  // ne = any
    e2e4:	b	e2ec <is_changed@@Base+0xbc>
    e2e8:	mov	w9, #0x1                   	// #1
    e2ec:	orr	w19, w9, w8
    e2f0:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e2f4:	add	x0, x0, #0xd2
    e2f8:	mov	w1, w19
    e2fc:	bl	a4d0 <debug@plt>
    e300:	mov	w0, w19
    e304:	ldp	x20, x19, [sp, #288]
    e308:	ldr	x28, [sp, #272]
    e30c:	ldp	x29, x30, [sp, #256]
    e310:	add	sp, sp, #0x130
    e314:	ret

000000000000e318 <is_directory@@Base>:
    e318:	sub	sp, sp, #0x90
    e31c:	mov	x1, x0
    e320:	mov	x2, sp
    e324:	mov	w0, wzr
    e328:	stp	x29, x30, [sp, #128]
    e32c:	add	x29, sp, #0x80
    e330:	bl	add0 <__xstat@plt>
    e334:	ldr	w8, [sp, #16]
    e338:	ldp	x29, x30, [sp, #128]
    e33c:	cmp	w0, #0x0
    e340:	ubfx	w8, w8, #14, #1
    e344:	csel	w0, w8, w0, eq  // eq = none
    e348:	add	sp, sp, #0x90
    e34c:	ret

000000000000e350 <escape_shell@@Base>:
    e350:	stp	x29, x30, [sp, #-64]!
    e354:	stp	x24, x23, [sp, #16]
    e358:	stp	x22, x21, [sp, #32]
    e35c:	stp	x20, x19, [sp, #48]
    e360:	mov	x29, sp
    e364:	cbz	x0, e418 <escape_shell@@Base+0xc8>
    e368:	mov	x20, x0
    e36c:	bl	a290 <strlen@plt>
    e370:	mov	w8, #0x1                   	// #1
    e374:	bfi	x8, x0, #1, #63
    e378:	mov	x0, x8
    e37c:	bl	a660 <xmalloc@plt>
    e380:	ldrb	w21, [x20]
    e384:	mov	x19, x0
    e388:	mov	x23, x0
    e38c:	cbz	w21, e410 <escape_shell@@Base+0xc0>
    e390:	add	x22, x20, #0x1
    e394:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    e398:	add	x20, x20, #0xd9
    e39c:	mov	w24, #0x5c                  	// #92
    e3a0:	mov	x23, x19
    e3a4:	b	e3c0 <escape_shell@@Base+0x70>
    e3a8:	mov	w8, #0x1                   	// #1
    e3ac:	mov	x9, x23
    e3b0:	strb	w21, [x9]
    e3b4:	ldrb	w21, [x22], #1
    e3b8:	add	x23, x23, x8
    e3bc:	cbz	w21, e410 <escape_shell@@Base+0xc0>
    e3c0:	and	w8, w21, #0xffffffdf
    e3c4:	sub	w8, w8, #0x41
    e3c8:	and	w8, w8, #0xff
    e3cc:	cmp	w8, #0x1a
    e3d0:	b.cc	e3a8 <escape_shell@@Base+0x58>  // b.lo, b.ul, b.last
    e3d4:	sub	w8, w21, #0x30
    e3d8:	and	w8, w8, #0xff
    e3dc:	cmp	w8, #0xa
    e3e0:	mov	w8, #0x1                   	// #1
    e3e4:	mov	x9, x23
    e3e8:	b.cc	e3b0 <escape_shell@@Base+0x60>  // b.lo, b.ul, b.last
    e3ec:	and	w1, w21, #0xff
    e3f0:	mov	w2, #0x8                   	// #8
    e3f4:	mov	x0, x20
    e3f8:	bl	ab80 <memchr@plt>
    e3fc:	cbnz	x0, e3a8 <escape_shell@@Base+0x58>
    e400:	mov	x9, x23
    e404:	strb	w24, [x9], #1
    e408:	mov	w8, #0x2                   	// #2
    e40c:	b	e3b0 <escape_shell@@Base+0x60>
    e410:	strb	wzr, [x23]
    e414:	b	e41c <escape_shell@@Base+0xcc>
    e418:	mov	x19, xzr
    e41c:	mov	x0, x19
    e420:	ldp	x20, x19, [sp, #48]
    e424:	ldp	x22, x21, [sp, #32]
    e428:	ldp	x24, x23, [sp, #16]
    e42c:	ldp	x29, x30, [sp], #64
    e430:	ret

000000000000e434 <remove_directory@@Base>:
    e434:	sub	sp, sp, #0xd0
    e438:	stp	x29, x30, [sp, #128]
    e43c:	str	x25, [sp, #144]
    e440:	stp	x24, x23, [sp, #160]
    e444:	stp	x22, x21, [sp, #176]
    e448:	stp	x20, x19, [sp, #192]
    e44c:	add	x29, sp, #0x80
    e450:	mov	w21, w1
    e454:	mov	x20, x0
    e458:	bl	a420 <opendir@plt>
    e45c:	cbz	x0, e5e0 <remove_directory@@Base+0x1ac>
    e460:	mov	x19, x0
    e464:	bl	a720 <readdir@plt>
    e468:	cbz	x0, e5e8 <remove_directory@@Base+0x1b4>
    e46c:	cbz	w21, e530 <remove_directory@@Base+0xfc>
    e470:	adrp	x22, 32000 <vasnprintf@@Base+0x1474>
    e474:	adrp	x23, 32000 <vasnprintf@@Base+0x1474>
    e478:	adrp	x25, 31000 <vasnprintf@@Base+0x474>
    e47c:	add	x22, x22, #0xe2
    e480:	add	x23, x23, #0xe1
    e484:	add	x25, x25, #0xf97
    e488:	b	e4b0 <remove_directory@@Base+0x7c>
    e48c:	mov	x0, x24
    e490:	bl	ae30 <unlink@plt>
    e494:	cmn	w0, #0x1
    e498:	b.eq	e5d0 <remove_directory@@Base+0x19c>  // b.none
    e49c:	mov	x0, x24
    e4a0:	bl	a970 <free@plt>
    e4a4:	mov	x0, x19
    e4a8:	bl	a720 <readdir@plt>
    e4ac:	cbz	x0, e5e8 <remove_directory@@Base+0x1b4>
    e4b0:	add	x24, x0, #0x13
    e4b4:	mov	x0, x24
    e4b8:	mov	x1, x22
    e4bc:	bl	a8f0 <strcmp@plt>
    e4c0:	cbz	w0, e4a4 <remove_directory@@Base+0x70>
    e4c4:	mov	x0, x24
    e4c8:	mov	x1, x23
    e4cc:	bl	a8f0 <strcmp@plt>
    e4d0:	cbz	w0, e4a4 <remove_directory@@Base+0x70>
    e4d4:	mov	x0, x25
    e4d8:	mov	x1, x20
    e4dc:	mov	x2, x24
    e4e0:	bl	a9d0 <xasprintf@plt>
    e4e4:	mov	x24, x0
    e4e8:	mov	x2, sp
    e4ec:	mov	w0, wzr
    e4f0:	mov	x1, x24
    e4f4:	bl	add0 <__xstat@plt>
    e4f8:	cmn	w0, #0x1
    e4fc:	b.eq	e5d0 <remove_directory@@Base+0x19c>  // b.none
    e500:	ldr	w8, [sp, #16]
    e504:	and	w8, w8, #0xf000
    e508:	cmp	w8, #0x8, lsl #12
    e50c:	b.eq	e48c <remove_directory@@Base+0x58>  // b.none
    e510:	cmp	w8, #0x4, lsl #12
    e514:	b.ne	e49c <remove_directory@@Base+0x68>  // b.any
    e518:	mov	x0, x24
    e51c:	mov	w1, w21
    e520:	bl	a320 <remove_directory@plt>
    e524:	cmn	w0, #0x1
    e528:	b.ne	e49c <remove_directory@@Base+0x68>  // b.any
    e52c:	b	e5d0 <remove_directory@@Base+0x19c>
    e530:	adrp	x21, 32000 <vasnprintf@@Base+0x1474>
    e534:	adrp	x22, 32000 <vasnprintf@@Base+0x1474>
    e538:	adrp	x23, 31000 <vasnprintf@@Base+0x474>
    e53c:	add	x21, x21, #0xe2
    e540:	add	x22, x22, #0xe1
    e544:	add	x23, x23, #0xf97
    e548:	b	e560 <remove_directory@@Base+0x12c>
    e54c:	mov	x0, x24
    e550:	bl	a970 <free@plt>
    e554:	mov	x0, x19
    e558:	bl	a720 <readdir@plt>
    e55c:	cbz	x0, e5e8 <remove_directory@@Base+0x1b4>
    e560:	add	x24, x0, #0x13
    e564:	mov	x0, x24
    e568:	mov	x1, x21
    e56c:	bl	a8f0 <strcmp@plt>
    e570:	cbz	w0, e554 <remove_directory@@Base+0x120>
    e574:	mov	x0, x24
    e578:	mov	x1, x22
    e57c:	bl	a8f0 <strcmp@plt>
    e580:	cbz	w0, e554 <remove_directory@@Base+0x120>
    e584:	mov	x0, x23
    e588:	mov	x1, x20
    e58c:	mov	x2, x24
    e590:	bl	a9d0 <xasprintf@plt>
    e594:	mov	x24, x0
    e598:	mov	x2, sp
    e59c:	mov	w0, wzr
    e5a0:	mov	x1, x24
    e5a4:	bl	add0 <__xstat@plt>
    e5a8:	cmn	w0, #0x1
    e5ac:	b.eq	e5d0 <remove_directory@@Base+0x19c>  // b.none
    e5b0:	ldr	w8, [sp, #16]
    e5b4:	and	w8, w8, #0xf000
    e5b8:	cmp	w8, #0x8, lsl #12
    e5bc:	b.ne	e54c <remove_directory@@Base+0x118>  // b.any
    e5c0:	mov	x0, x24
    e5c4:	bl	ae30 <unlink@plt>
    e5c8:	cmn	w0, #0x1
    e5cc:	b.ne	e54c <remove_directory@@Base+0x118>  // b.any
    e5d0:	mov	x0, x24
    e5d4:	bl	a970 <free@plt>
    e5d8:	mov	x0, x19
    e5dc:	bl	a770 <closedir@plt>
    e5e0:	mov	w0, #0xffffffff            	// #-1
    e5e4:	b	e600 <remove_directory@@Base+0x1cc>
    e5e8:	mov	x0, x19
    e5ec:	bl	a770 <closedir@plt>
    e5f0:	mov	x0, x20
    e5f4:	bl	a920 <rmdir@plt>
    e5f8:	cmn	w0, #0x1
    e5fc:	csetm	w0, eq  // eq = none
    e600:	ldp	x20, x19, [sp, #192]
    e604:	ldp	x22, x21, [sp, #176]
    e608:	ldp	x24, x23, [sp, #160]
    e60c:	ldr	x25, [sp, #144]
    e610:	ldp	x29, x30, [sp, #128]
    e614:	add	sp, sp, #0xd0
    e618:	ret

000000000000e61c <trim_spaces@@Base>:
    e61c:	stp	x29, x30, [sp, #-32]!
    e620:	stp	x20, x19, [sp, #16]
    e624:	sub	x20, x0, #0x2
    e628:	mov	x29, sp
    e62c:	ldrb	w8, [x20, #2]
    e630:	add	x20, x20, #0x1
    e634:	cmp	w8, #0x20
    e638:	b.eq	e62c <trim_spaces@@Base+0x10>  // b.none
    e63c:	add	x19, x20, #0x1
    e640:	mov	x0, x19
    e644:	bl	a290 <strlen@plt>
    e648:	lsl	x11, x0, #32
    e64c:	sxtw	x9, w0
    e650:	mov	x8, #0xffffffff00000000    	// #-4294967296
    e654:	mov	x10, x11
    e658:	cbz	x9, e670 <trim_spaces@@Base+0x54>
    e65c:	ldrb	w11, [x20, x9]
    e660:	sub	x9, x9, #0x1
    e664:	cmp	w11, #0x20
    e668:	add	x11, x10, x8
    e66c:	b.eq	e654 <trim_spaces@@Base+0x38>  // b.none
    e670:	mov	x0, x19
    e674:	ldp	x20, x19, [sp, #16]
    e678:	asr	x1, x10, #32
    e67c:	ldp	x29, x30, [sp], #32
    e680:	b	abe0 <xstrndup@plt>

000000000000e684 <lang_dir@@Base>:
    e684:	stp	x29, x30, [sp, #-48]!
    e688:	stp	x20, x19, [sp, #32]
    e68c:	mov	x20, x0
    e690:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
    e694:	add	x0, x0, #0xeac
    e698:	str	x21, [sp, #16]
    e69c:	mov	x29, sp
    e6a0:	bl	a680 <xstrdup@plt>
    e6a4:	mov	x19, x0
    e6a8:	cbz	x20, e764 <lang_dir@@Base+0xe0>
    e6ac:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    e6b0:	add	x1, x1, #0xe5
    e6b4:	mov	w2, #0x4                   	// #4
    e6b8:	mov	x0, x20
    e6bc:	bl	a610 <strncmp@plt>
    e6c0:	cbz	w0, e6dc <lang_dir@@Base+0x58>
    e6c4:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    e6c8:	add	x1, x1, #0xe4
    e6cc:	mov	x0, x20
    e6d0:	bl	ac60 <strstr@plt>
    e6d4:	cbz	x0, e764 <lang_dir@@Base+0xe0>
    e6d8:	add	x20, x0, #0x1
    e6dc:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    e6e0:	add	x0, x20, #0x2
    e6e4:	add	x1, x1, #0xea
    e6e8:	bl	ac60 <strstr@plt>
    e6ec:	cbz	x0, e764 <lang_dir@@Base+0xe0>
    e6f0:	ldrb	w8, [x0, #5]
    e6f4:	mov	x21, x0
    e6f8:	cmp	w8, #0x2f
    e6fc:	b.ne	e764 <lang_dir@@Base+0xe0>  // b.any
    e700:	ldrb	w1, [x21, #4]
    e704:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e708:	add	x0, x0, #0xef
    e70c:	mov	w2, #0xd                   	// #13
    e710:	bl	ab80 <memchr@plt>
    e714:	cbz	x0, e764 <lang_dir@@Base+0xe0>
    e718:	add	x8, x20, #0x3
    e71c:	cmp	x21, x8
    e720:	b.eq	e778 <lang_dir@@Base+0xf4>  // b.none
    e724:	add	x20, x20, #0x4
    e728:	mov	w1, #0x2f                  	// #47
    e72c:	mov	x0, x20
    e730:	bl	aa60 <strchr@plt>
    e734:	cbz	x0, e764 <lang_dir@@Base+0xe0>
    e738:	mov	x21, x0
    e73c:	mov	x0, x19
    e740:	bl	a970 <free@plt>
    e744:	sub	x1, x21, x20
    e748:	mov	x0, x20
    e74c:	bl	abe0 <xstrndup@plt>
    e750:	mov	x19, x0
    e754:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e758:	add	x0, x0, #0xfc
    e75c:	mov	x1, x19
    e760:	bl	a4d0 <debug@plt>
    e764:	mov	x0, x19
    e768:	ldp	x20, x19, [sp, #32]
    e76c:	ldr	x21, [sp, #16]
    e770:	ldp	x29, x30, [sp], #48
    e774:	ret
    e778:	mov	x0, x19
    e77c:	bl	a970 <free@plt>
    e780:	ldp	x20, x19, [sp, #32]
    e784:	ldr	x21, [sp, #16]
    e788:	adrp	x0, 31000 <vasnprintf@@Base+0x474>
    e78c:	add	x0, x0, #0xa40
    e790:	ldp	x29, x30, [sp], #48
    e794:	b	a680 <xstrdup@plt>

000000000000e798 <init_locale@@Base>:
    e798:	stp	x29, x30, [sp, #-32]!
    e79c:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
    e7a0:	add	x1, x1, #0xeac
    e7a4:	mov	w0, #0x6                   	// #6
    e7a8:	stp	x20, x19, [sp, #16]
    e7ac:	mov	x29, sp
    e7b0:	bl	ae90 <setlocale@plt>
    e7b4:	cbnz	x0, e7e8 <init_locale@@Base+0x50>
    e7b8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e7bc:	add	x0, x0, #0x117
    e7c0:	bl	adb0 <getenv@plt>
    e7c4:	cbnz	x0, e7e8 <init_locale@@Base+0x50>
    e7c8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e7cc:	add	x0, x0, #0x12d
    e7d0:	bl	adb0 <getenv@plt>
    e7d4:	cbnz	x0, e7e8 <init_locale@@Base+0x50>
    e7d8:	adrp	x2, 32000 <vasnprintf@@Base+0x1474>
    e7dc:	add	x2, x2, #0x142
    e7e0:	mov	w1, wzr
    e7e4:	bl	a2b0 <error@plt>
    e7e8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e7ec:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
    e7f0:	add	x0, x0, #0x117
    e7f4:	add	x1, x1, #0x5fb
    e7f8:	mov	w2, #0x1                   	// #1
    e7fc:	bl	a3c0 <setenv@plt>
    e800:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
    e804:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    e808:	add	x19, x19, #0x17e
    e80c:	add	x20, x20, #0x185
    e810:	mov	x0, x19
    e814:	mov	x1, x20
    e818:	bl	a620 <bindtextdomain@plt>
    e81c:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    e820:	add	x0, x0, #0x197
    e824:	mov	x1, x20
    e828:	bl	a620 <bindtextdomain@plt>
    e82c:	mov	x0, x19
    e830:	ldp	x20, x19, [sp, #16]
    e834:	ldp	x29, x30, [sp], #32
    e838:	b	a8d0 <textdomain@plt>

000000000000e83c <word_fnmatch@@Base>:
    e83c:	stp	x29, x30, [sp, #-64]!
    e840:	stp	x20, x19, [sp, #48]
    e844:	mov	x20, x0
    e848:	mov	x0, x1
    e84c:	str	x23, [sp, #16]
    e850:	stp	x22, x21, [sp, #32]
    e854:	mov	x29, sp
    e858:	bl	a680 <xstrdup@plt>
    e85c:	ldrb	w23, [x0]
    e860:	mov	x19, x0
    e864:	cbz	w23, e8d8 <word_fnmatch@@Base+0x9c>
    e868:	bl	a910 <__ctype_b_loc@plt>
    e86c:	mov	x21, x0
    e870:	add	x22, x19, #0x1
    e874:	mov	x1, x19
    e878:	b	e88c <word_fnmatch@@Base+0x50>
    e87c:	mov	x8, x1
    e880:	ldrb	w23, [x22], #1
    e884:	mov	x1, x8
    e888:	cbz	w23, e8d8 <word_fnmatch@@Base+0x9c>
    e88c:	and	w8, w23, #0xff
    e890:	cmp	w8, #0x5f
    e894:	b.eq	e87c <word_fnmatch@@Base+0x40>  // b.none
    e898:	ldr	x8, [x21]
    e89c:	and	x9, x23, #0xff
    e8a0:	ldrh	w8, [x8, x9, lsl #1]
    e8a4:	tbnz	w8, #10, e87c <word_fnmatch@@Base+0x40>
    e8a8:	sub	x9, x22, #0x1
    e8ac:	add	x8, x1, #0x1
    e8b0:	cmp	x9, x8
    e8b4:	b.ls	e880 <word_fnmatch@@Base+0x44>  // b.plast
    e8b8:	mov	w2, #0x10                  	// #16
    e8bc:	mov	x0, x20
    e8c0:	strb	wzr, [x9]
    e8c4:	bl	aae0 <fnmatch@plt>
    e8c8:	mov	x8, x22
    e8cc:	cbnz	w0, e880 <word_fnmatch@@Base+0x44>
    e8d0:	mov	w20, #0x1                   	// #1
    e8d4:	b	e8dc <word_fnmatch@@Base+0xa0>
    e8d8:	mov	w20, wzr
    e8dc:	mov	x0, x19
    e8e0:	bl	a970 <free@plt>
    e8e4:	mov	w0, w20
    e8e8:	ldp	x20, x19, [sp, #48]
    e8ec:	ldp	x22, x21, [sp, #32]
    e8f0:	ldr	x23, [sp, #16]
    e8f4:	ldp	x29, x30, [sp], #64
    e8f8:	ret

000000000000e8fc <xregcomp@@Base>:
    e8fc:	stp	x29, x30, [sp, #-64]!
    e900:	str	x23, [sp, #16]
    e904:	stp	x22, x21, [sp, #32]
    e908:	stp	x20, x19, [sp, #48]
    e90c:	mov	x29, sp
    e910:	mov	x19, x1
    e914:	mov	x20, x0
    e918:	bl	a500 <rpl_regcomp@plt>
    e91c:	cbz	w0, e990 <xregcomp@@Base+0x94>
    e920:	mov	x1, x20
    e924:	mov	x2, xzr
    e928:	mov	x3, xzr
    e92c:	mov	w21, w0
    e930:	bl	ab10 <rpl_regerror@plt>
    e934:	mov	x22, x0
    e938:	bl	a660 <xmalloc@plt>
    e93c:	mov	x23, x0
    e940:	mov	w0, w21
    e944:	mov	x1, x20
    e948:	mov	x2, x23
    e94c:	mov	x3, x22
    e950:	bl	ab10 <rpl_regerror@plt>
    e954:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    e958:	add	x1, x1, #0x1a5
    e95c:	mov	w2, #0x5                   	// #5
    e960:	mov	x0, xzr
    e964:	bl	ac90 <dcgettext@plt>
    e968:	mov	x3, x19
    e96c:	mov	x4, x23
    e970:	ldp	x20, x19, [sp, #48]
    e974:	ldp	x22, x21, [sp, #32]
    e978:	ldr	x23, [sp, #16]
    e97c:	mov	x2, x0
    e980:	mov	w0, #0x2                   	// #2
    e984:	mov	w1, wzr
    e988:	ldp	x29, x30, [sp], #64
    e98c:	b	a2b0 <error@plt>
    e990:	ldp	x20, x19, [sp, #48]
    e994:	ldp	x22, x21, [sp, #32]
    e998:	ldr	x23, [sp, #16]
    e99c:	ldp	x29, x30, [sp], #64
    e9a0:	ret

000000000000e9a4 <areadlink_with_size@@Base>:
    e9a4:	sub	sp, sp, #0xd0
    e9a8:	cmp	x1, #0x401
    e9ac:	mov	w8, #0x401                 	// #1025
    e9b0:	stp	x22, x21, [sp, #176]
    e9b4:	stp	x20, x19, [sp, #192]
    e9b8:	mov	x21, x0
    e9bc:	csinc	x20, x8, x1, cs  // cs = hs, nlast
    e9c0:	stp	x29, x30, [sp, #128]
    e9c4:	str	x25, [sp, #144]
    e9c8:	stp	x24, x23, [sp, #160]
    e9cc:	add	x29, sp, #0x80
    e9d0:	cbnz	x1, ea60 <areadlink_with_size@@Base+0xbc>
    e9d4:	mov	w20, #0x80                  	// #128
    e9d8:	b	e9e4 <areadlink_with_size@@Base+0x40>
    e9dc:	lsl	x8, x20, #1
    e9e0:	mov	x20, x8
    e9e4:	cmp	x20, #0x80
    e9e8:	b.ne	e9f8 <areadlink_with_size@@Base+0x54>  // b.any
    e9ec:	mov	x19, xzr
    e9f0:	mov	x22, sp
    e9f4:	b	ea0c <areadlink_with_size@@Base+0x68>
    e9f8:	mov	x0, x20
    e9fc:	bl	a550 <malloc@plt>
    ea00:	mov	x22, x0
    ea04:	mov	x19, x0
    ea08:	cbz	x0, eb40 <areadlink_with_size@@Base+0x19c>
    ea0c:	mov	x0, x21
    ea10:	mov	x1, x22
    ea14:	mov	x2, x20
    ea18:	bl	a3d0 <readlink@plt>
    ea1c:	mov	x24, x0
    ea20:	tbz	x0, #63, ea34 <areadlink_with_size@@Base+0x90>
    ea24:	bl	ad90 <__errno_location@plt>
    ea28:	ldr	w25, [x0]
    ea2c:	cmp	w25, #0x22
    ea30:	b.ne	eb2c <areadlink_with_size@@Base+0x188>  // b.any
    ea34:	cmp	x24, x20
    ea38:	b.cc	ead4 <areadlink_with_size@@Base+0x130>  // b.lo, b.ul, b.last
    ea3c:	mov	x0, x19
    ea40:	bl	a970 <free@plt>
    ea44:	lsr	x8, x20, #62
    ea48:	cbz	x8, e9dc <areadlink_with_size@@Base+0x38>
    ea4c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    ea50:	cmp	x20, x8
    ea54:	b.cc	e9e0 <areadlink_with_size@@Base+0x3c>  // b.lo, b.ul, b.last
    ea58:	b	eac0 <areadlink_with_size@@Base+0x11c>
    ea5c:	lsl	x20, x20, #1
    ea60:	mov	x0, x20
    ea64:	bl	a550 <malloc@plt>
    ea68:	mov	x19, x0
    ea6c:	cbz	x0, eb40 <areadlink_with_size@@Base+0x19c>
    ea70:	mov	x0, x21
    ea74:	mov	x1, x19
    ea78:	mov	x2, x20
    ea7c:	bl	a3d0 <readlink@plt>
    ea80:	mov	x22, x0
    ea84:	tbz	x0, #63, ea98 <areadlink_with_size@@Base+0xf4>
    ea88:	bl	ad90 <__errno_location@plt>
    ea8c:	ldr	w25, [x0]
    ea90:	cmp	w25, #0x22
    ea94:	b.ne	eb2c <areadlink_with_size@@Base+0x188>  // b.any
    ea98:	cmp	x22, x20
    ea9c:	b.cc	eb04 <areadlink_with_size@@Base+0x160>  // b.lo, b.ul, b.last
    eaa0:	mov	x0, x19
    eaa4:	bl	a970 <free@plt>
    eaa8:	lsr	x8, x20, #62
    eaac:	cbz	x8, ea5c <areadlink_with_size@@Base+0xb8>
    eab0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
    eab4:	cmp	x20, x8
    eab8:	mov	x20, #0x7fffffffffffffff    	// #9223372036854775807
    eabc:	b.cc	ea60 <areadlink_with_size@@Base+0xbc>  // b.lo, b.ul, b.last
    eac0:	bl	ad90 <__errno_location@plt>
    eac4:	mov	x19, xzr
    eac8:	mov	w8, #0xc                   	// #12
    eacc:	str	w8, [x0]
    ead0:	b	eb40 <areadlink_with_size@@Base+0x19c>
    ead4:	add	x21, x24, #0x1
    ead8:	strb	wzr, [x22, x24]
    eadc:	cbnz	x19, eb0c <areadlink_with_size@@Base+0x168>
    eae0:	mov	x0, x21
    eae4:	bl	a550 <malloc@plt>
    eae8:	mov	x19, x0
    eaec:	cbz	x0, eb40 <areadlink_with_size@@Base+0x19c>
    eaf0:	mov	x0, x19
    eaf4:	mov	x1, x22
    eaf8:	mov	x2, x21
    eafc:	bl	a210 <memcpy@plt>
    eb00:	b	eb40 <areadlink_with_size@@Base+0x19c>
    eb04:	add	x21, x22, #0x1
    eb08:	strb	wzr, [x19, x22]
    eb0c:	cmp	x21, x20
    eb10:	b.cs	eb40 <areadlink_with_size@@Base+0x19c>  // b.hs, b.nlast
    eb14:	mov	x0, x19
    eb18:	mov	x1, x21
    eb1c:	bl	a730 <realloc@plt>
    eb20:	cmp	x0, #0x0
    eb24:	csel	x19, x19, x0, eq  // eq = none
    eb28:	b	eb40 <areadlink_with_size@@Base+0x19c>
    eb2c:	mov	x23, x0
    eb30:	mov	x0, x19
    eb34:	bl	a970 <free@plt>
    eb38:	mov	x19, xzr
    eb3c:	str	w25, [x23]
    eb40:	mov	x0, x19
    eb44:	ldp	x20, x19, [sp, #192]
    eb48:	ldp	x22, x21, [sp, #176]
    eb4c:	ldp	x24, x23, [sp, #160]
    eb50:	ldr	x25, [sp, #144]
    eb54:	ldp	x29, x30, [sp, #128]
    eb58:	add	sp, sp, #0xd0
    eb5c:	ret

000000000000eb60 <argp_make_fmtstream@@Base>:
    eb60:	stp	x29, x30, [sp, #-64]!
    eb64:	str	x23, [sp, #16]
    eb68:	mov	x23, x0
    eb6c:	mov	w0, #0x48                  	// #72
    eb70:	stp	x22, x21, [sp, #32]
    eb74:	stp	x20, x19, [sp, #48]
    eb78:	mov	x29, sp
    eb7c:	mov	x20, x3
    eb80:	mov	x21, x2
    eb84:	mov	x22, x1
    eb88:	bl	a550 <malloc@plt>
    eb8c:	mov	x19, x0
    eb90:	cbz	x0, ebc8 <argp_make_fmtstream@@Base+0x68>
    eb94:	mov	w0, #0xc8                  	// #200
    eb98:	stp	x23, x22, [x19]
    eb9c:	stp	x21, x20, [x19, #16]
    eba0:	stp	xzr, xzr, [x19, #32]
    eba4:	bl	a550 <malloc@plt>
    eba8:	str	x0, [x19, #48]
    ebac:	cbz	x0, ebbc <argp_make_fmtstream@@Base+0x5c>
    ebb0:	add	x8, x0, #0xc8
    ebb4:	stp	x0, x8, [x19, #56]
    ebb8:	b	ebc8 <argp_make_fmtstream@@Base+0x68>
    ebbc:	mov	x0, x19
    ebc0:	bl	a970 <free@plt>
    ebc4:	mov	x19, xzr
    ebc8:	mov	x0, x19
    ebcc:	ldp	x20, x19, [sp, #48]
    ebd0:	ldp	x22, x21, [sp, #32]
    ebd4:	ldr	x23, [sp, #16]
    ebd8:	ldp	x29, x30, [sp], #64
    ebdc:	ret

000000000000ebe0 <argp_fmtstream_free@@Base>:
    ebe0:	stp	x29, x30, [sp, #-32]!
    ebe4:	str	x19, [sp, #16]
    ebe8:	mov	x29, sp
    ebec:	mov	x19, x0
    ebf0:	bl	a480 <_argp_fmtstream_update@plt>
    ebf4:	ldp	x0, x8, [x19, #48]
    ebf8:	subs	x2, x8, x0
    ebfc:	b.ls	ec0c <argp_fmtstream_free@@Base+0x2c>  // b.plast
    ec00:	ldr	x3, [x19]
    ec04:	mov	w1, #0x1                   	// #1
    ec08:	bl	a270 <fwrite_unlocked@plt>
    ec0c:	ldr	x0, [x19, #48]
    ec10:	bl	a970 <free@plt>
    ec14:	mov	x0, x19
    ec18:	ldr	x19, [sp, #16]
    ec1c:	ldp	x29, x30, [sp], #32
    ec20:	b	a970 <free@plt>

000000000000ec24 <_argp_fmtstream_update@@Base>:
    ec24:	sub	sp, sp, #0x70
    ec28:	stp	x29, x30, [sp, #16]
    ec2c:	stp	x28, x27, [sp, #32]
    ec30:	stp	x26, x25, [sp, #48]
    ec34:	stp	x24, x23, [sp, #64]
    ec38:	stp	x22, x21, [sp, #80]
    ec3c:	stp	x20, x19, [sp, #96]
    ec40:	ldr	x8, [x0, #32]
    ec44:	ldp	x9, x27, [x0, #48]
    ec48:	mov	x19, x0
    ec4c:	add	x29, sp, #0x10
    ec50:	add	x21, x9, x8
    ec54:	cmp	x21, x27
    ec58:	b.cs	f0f0 <_argp_fmtstream_update@@Base+0x4cc>  // b.hs, b.nlast
    ec5c:	ldr	x23, [x19, #40]
    ec60:	mov	w25, #0x20                  	// #32
    ec64:	b	ec80 <_argp_fmtstream_update@@Base+0x5c>
    ec68:	mov	x23, xzr
    ec6c:	add	x20, x24, #0x1
    ec70:	str	xzr, [x19, #40]
    ec74:	cmp	x20, x27
    ec78:	mov	x21, x20
    ec7c:	b.cs	f0f0 <_argp_fmtstream_update@@Base+0x4cc>  // b.hs, b.nlast
    ec80:	cbnz	x23, ecdc <_argp_fmtstream_update@@Base+0xb8>
    ec84:	ldr	x23, [x19, #8]
    ec88:	cbz	x23, ecdc <_argp_fmtstream_update@@Base+0xb8>
    ec8c:	ldr	x8, [x19, #64]
    ec90:	add	x9, x27, x23
    ec94:	mov	x20, x23
    ec98:	cmp	x9, x8
    ec9c:	b.cs	ed14 <_argp_fmtstream_update@@Base+0xf0>  // b.hs, b.nlast
    eca0:	add	x20, x21, x23
    eca4:	sub	x2, x27, x21
    eca8:	mov	x0, x20
    ecac:	mov	x1, x21
    ecb0:	bl	a220 <memmove@plt>
    ecb4:	ldr	x8, [x19, #56]
    ecb8:	mov	w1, #0x20                  	// #32
    ecbc:	mov	x0, x21
    ecc0:	mov	x2, x23
    ecc4:	add	x8, x8, x23
    ecc8:	str	x8, [x19, #56]
    eccc:	bl	a640 <memset@plt>
    ecd0:	mov	x21, x20
    ecd4:	ldr	x27, [x19, #56]
    ecd8:	str	x23, [x19, #40]
    ecdc:	sub	x26, x27, x21
    ece0:	mov	w1, #0xa                   	// #10
    ece4:	mov	x0, x21
    ece8:	mov	x2, x26
    ecec:	bl	ab80 <memchr@plt>
    ecf0:	mov	x24, x0
    ecf4:	tbnz	x23, #63, ed50 <_argp_fmtstream_update@@Base+0x12c>
    ecf8:	cbz	x24, ed5c <_argp_fmtstream_update@@Base+0x138>
    ecfc:	ldr	x20, [x19, #16]
    ed00:	sub	x8, x24, x21
    ed04:	add	x8, x8, x23
    ed08:	cmp	x8, x20
    ed0c:	b.lt	ec68 <_argp_fmtstream_update@@Base+0x44>  // b.tstop
    ed10:	b	ed70 <_argp_fmtstream_update@@Base+0x14c>
    ed14:	ldr	x0, [x19]
    ed18:	ldp	x8, x9, [x0, #40]
    ed1c:	cmp	x8, x9
    ed20:	b.cs	ed3c <_argp_fmtstream_update@@Base+0x118>  // b.hs, b.nlast
    ed24:	add	x9, x8, #0x1
    ed28:	str	x9, [x0, #40]
    ed2c:	strb	w25, [x8]
    ed30:	subs	x20, x20, #0x1
    ed34:	b.ne	ed14 <_argp_fmtstream_update@@Base+0xf0>  // b.any
    ed38:	b	ecd4 <_argp_fmtstream_update@@Base+0xb0>
    ed3c:	mov	w1, #0x20                  	// #32
    ed40:	bl	a890 <__overflow@plt>
    ed44:	subs	x20, x20, #0x1
    ed48:	b.ne	ed14 <_argp_fmtstream_update@@Base+0xf0>  // b.any
    ed4c:	b	ecd4 <_argp_fmtstream_update@@Base+0xb0>
    ed50:	mov	x23, xzr
    ed54:	str	xzr, [x19, #40]
    ed58:	cbnz	x24, ecfc <_argp_fmtstream_update@@Base+0xd8>
    ed5c:	ldr	x20, [x19, #16]
    ed60:	add	x8, x23, x26
    ed64:	mov	x24, x27
    ed68:	cmp	x8, x20
    ed6c:	b.cc	f0d4 <_argp_fmtstream_update@@Base+0x4b0>  // b.lo, b.ul, b.last
    ed70:	ldr	x28, [x19, #24]
    ed74:	tbnz	x28, #63, edc0 <_argp_fmtstream_update@@Base+0x19c>
    ed78:	str	x26, [sp, #8]
    ed7c:	subs	x26, x20, x23
    ed80:	add	x20, x21, x26
    ed84:	b.mi	ee0c <_argp_fmtstream_update@@Base+0x1e8>  // b.first
    ed88:	bl	a910 <__ctype_b_loc@plt>
    ed8c:	ldr	x8, [x0]
    ed90:	mov	x22, x20
    ed94:	ldrb	w9, [x22]
    ed98:	ldrh	w9, [x8, x9, lsl #1]
    ed9c:	tbnz	w9, #0, ee64 <_argp_fmtstream_update@@Base+0x240>
    eda0:	sub	x22, x22, #0x1
    eda4:	cmp	x22, x21
    eda8:	b.cs	ed94 <_argp_fmtstream_update@@Base+0x170>  // b.hs, b.nlast
    edac:	mov	w8, wzr
    edb0:	add	x23, x22, #0x1
    edb4:	cmp	x23, x21
    edb8:	b.hi	ee20 <_argp_fmtstream_update@@Base+0x1fc>  // b.pmore
    edbc:	b	ee74 <_argp_fmtstream_update@@Base+0x250>
    edc0:	cmp	x24, x27
    edc4:	sub	x22, x20, #0x1
    edc8:	b.cs	f0dc <_argp_fmtstream_update@@Base+0x4b8>  // b.hs, b.nlast
    edcc:	sub	x8, x22, x23
    edd0:	add	x0, x21, x8
    edd4:	sub	x2, x27, x24
    edd8:	mov	x1, x24
    eddc:	bl	a220 <memmove@plt>
    ede0:	ldr	x8, [x19, #40]
    ede4:	ldr	x9, [x19, #56]
    ede8:	mov	x23, xzr
    edec:	str	xzr, [x19, #40]
    edf0:	sub	x8, x22, x8
    edf4:	add	x8, x21, x8
    edf8:	sub	x8, x24, x8
    edfc:	add	x27, x9, x8
    ee00:	str	x27, [x19, #56]
    ee04:	add	x20, x21, x20
    ee08:	b	ec74 <_argp_fmtstream_update@@Base+0x50>
    ee0c:	mov	w8, wzr
    ee10:	mov	x22, x20
    ee14:	add	x23, x22, #0x1
    ee18:	cmp	x23, x21
    ee1c:	b.ls	ee74 <_argp_fmtstream_update@@Base+0x250>  // b.plast
    ee20:	cbz	w8, eef8 <_argp_fmtstream_update@@Base+0x2d4>
    ee24:	ldr	x24, [sp, #8]
    ee28:	sub	x8, x22, #0x1
    ee2c:	mov	x22, x8
    ee30:	cmp	x8, x21
    ee34:	b.cc	ee50 <_argp_fmtstream_update@@Base+0x22c>  // b.lo, b.ul, b.last
    ee38:	bl	a910 <__ctype_b_loc@plt>
    ee3c:	mov	x8, x22
    ee40:	ldr	x9, [x0]
    ee44:	ldrb	w10, [x8], #-1
    ee48:	ldrh	w9, [x9, x10, lsl #1]
    ee4c:	tbnz	w9, #0, ee2c <_argp_fmtstream_update@@Base+0x208>
    ee50:	add	x20, x22, #0x1
    ee54:	add	x8, x27, #0x1
    ee58:	cmp	x23, x8
    ee5c:	b.ne	eed8 <_argp_fmtstream_update@@Base+0x2b4>  // b.any
    ee60:	b	ef0c <_argp_fmtstream_update@@Base+0x2e8>
    ee64:	mov	w8, #0x1                   	// #1
    ee68:	add	x23, x22, #0x1
    ee6c:	cmp	x23, x21
    ee70:	b.hi	ee20 <_argp_fmtstream_update@@Base+0x1fc>  // b.pmore
    ee74:	cmp	x20, x24
    ee78:	b.cs	eea8 <_argp_fmtstream_update@@Base+0x284>  // b.hs, b.nlast
    ee7c:	add	x8, x21, x26
    ee80:	add	x8, x8, #0x1
    ee84:	mov	x20, x8
    ee88:	cmp	x8, x24
    ee8c:	b.cs	eea8 <_argp_fmtstream_update@@Base+0x284>  // b.hs, b.nlast
    ee90:	bl	a910 <__ctype_b_loc@plt>
    ee94:	mov	x8, x20
    ee98:	ldr	x9, [x0]
    ee9c:	ldrb	w10, [x8], #1
    eea0:	ldrh	w9, [x9, x10, lsl #1]
    eea4:	tbz	w9, #0, ee84 <_argp_fmtstream_update@@Base+0x260>
    eea8:	cmp	x20, x24
    eeac:	b.eq	ec68 <_argp_fmtstream_update@@Base+0x44>  // b.none
    eeb0:	bl	a910 <__ctype_b_loc@plt>
    eeb4:	ldr	x8, [x0]
    eeb8:	mov	x23, x20
    eebc:	ldrb	w9, [x23, #1]!
    eec0:	ldrh	w9, [x8, x9, lsl #1]
    eec4:	tbnz	w9, #0, eebc <_argp_fmtstream_update@@Base+0x298>
    eec8:	ldr	x24, [sp, #8]
    eecc:	add	x8, x27, #0x1
    eed0:	cmp	x23, x8
    eed4:	b.eq	ef0c <_argp_fmtstream_update@@Base+0x2e8>  // b.none
    eed8:	cmp	x27, x23
    eedc:	b.ls	ef7c <_argp_fmtstream_update@@Base+0x358>  // b.plast
    eee0:	mvn	x8, x20
    eee4:	add	x8, x8, x23
    eee8:	cmp	x8, x28
    eeec:	b.ge	ef7c <_argp_fmtstream_update@@Base+0x358>  // b.tcont
    eef0:	ldr	x8, [x19, #64]
    eef4:	b	ef24 <_argp_fmtstream_update@@Base+0x300>
    eef8:	ldr	x24, [sp, #8]
    eefc:	add	x20, x22, #0x1
    ef00:	add	x8, x27, #0x1
    ef04:	cmp	x23, x8
    ef08:	b.ne	eed8 <_argp_fmtstream_update@@Base+0x2b4>  // b.any
    ef0c:	cmp	x27, x23
    ef10:	b.ls	ef7c <_argp_fmtstream_update@@Base+0x358>  // b.plast
    ef14:	ldr	x8, [x19, #64]
    ef18:	sub	x9, x8, x20
    ef1c:	cmp	x9, x28
    ef20:	b.gt	ef7c <_argp_fmtstream_update@@Base+0x358>
    ef24:	sub	x8, x8, x27
    ef28:	add	x9, x28, #0x1
    ef2c:	cmp	x8, x9
    ef30:	b.le	ef98 <_argp_fmtstream_update@@Base+0x374>
    ef34:	sub	x22, x27, x23
    ef38:	add	x24, x20, #0x1
    ef3c:	add	x0, x24, x28
    ef40:	mov	x1, x23
    ef44:	mov	x2, x22
    ef48:	bl	a220 <memmove@plt>
    ef4c:	ldr	x8, [x19, #24]
    ef50:	mov	w9, #0xa                   	// #10
    ef54:	strb	w9, [x20]
    ef58:	mov	x20, x24
    ef5c:	add	x23, x24, x8
    ef60:	add	x8, x23, x22
    ef64:	sub	x24, x8, x21
    ef68:	ldr	x8, [x19, #24]
    ef6c:	sub	x9, x23, x20
    ef70:	cmp	x9, x8
    ef74:	b.lt	efec <_argp_fmtstream_update@@Base+0x3c8>  // b.tstop
    ef78:	b	f064 <_argp_fmtstream_update@@Base+0x440>
    ef7c:	mov	w8, #0xa                   	// #10
    ef80:	strb	w8, [x20], #1
    ef84:	ldr	x8, [x19, #24]
    ef88:	sub	x9, x23, x20
    ef8c:	cmp	x9, x8
    ef90:	b.lt	efec <_argp_fmtstream_update@@Base+0x3c8>  // b.tstop
    ef94:	b	f064 <_argp_fmtstream_update@@Base+0x440>
    ef98:	ldr	x0, [x19, #48]
    ef9c:	subs	x2, x20, x0
    efa0:	b.ls	efb0 <_argp_fmtstream_update@@Base+0x38c>  // b.plast
    efa4:	ldr	x3, [x19]
    efa8:	mov	w1, #0x1                   	// #1
    efac:	bl	a270 <fwrite_unlocked@plt>
    efb0:	ldr	x0, [x19]
    efb4:	ldp	x8, x9, [x0, #40]
    efb8:	cmp	x8, x9
    efbc:	b.cs	f0c8 <_argp_fmtstream_update@@Base+0x4a4>  // b.hs, b.nlast
    efc0:	add	x9, x8, #0x1
    efc4:	str	x9, [x0, #40]
    efc8:	mov	w9, #0xa                   	// #10
    efcc:	strb	w9, [x8]
    efd0:	ldr	x20, [x19, #48]
    efd4:	sub	x24, x27, x20
    efd8:	mov	x21, x20
    efdc:	ldr	x8, [x19, #24]
    efe0:	sub	x9, x23, x20
    efe4:	cmp	x9, x8
    efe8:	b.ge	f064 <_argp_fmtstream_update@@Base+0x440>  // b.tcont
    efec:	add	x9, x21, x24
    eff0:	add	x9, x9, #0x1
    eff4:	cmp	x23, x9
    eff8:	b.ne	f00c <_argp_fmtstream_update@@Base+0x3e8>  // b.any
    effc:	ldr	x9, [x19, #64]
    f000:	sub	x9, x9, x23
    f004:	cmp	x9, x8
    f008:	b.ge	f064 <_argp_fmtstream_update@@Base+0x440>  // b.tcont
    f00c:	cmp	x8, #0x1
    f010:	b.lt	f088 <_argp_fmtstream_update@@Base+0x464>  // b.tstop
    f014:	mov	x22, xzr
    f018:	ldr	x0, [x19]
    f01c:	ldp	x8, x9, [x0, #40]
    f020:	cmp	x8, x9
    f024:	b.cs	f048 <_argp_fmtstream_update@@Base+0x424>  // b.hs, b.nlast
    f028:	add	x9, x8, #0x1
    f02c:	str	x9, [x0, #40]
    f030:	strb	w25, [x8]
    f034:	ldr	x8, [x19, #24]
    f038:	add	x22, x22, #0x1
    f03c:	cmp	x8, x22
    f040:	b.gt	f018 <_argp_fmtstream_update@@Base+0x3f4>
    f044:	b	f088 <_argp_fmtstream_update@@Base+0x464>
    f048:	mov	w1, #0x20                  	// #32
    f04c:	bl	a890 <__overflow@plt>
    f050:	ldr	x8, [x19, #24]
    f054:	add	x22, x22, #0x1
    f058:	cmp	x8, x22
    f05c:	b.gt	f018 <_argp_fmtstream_update@@Base+0x3f4>
    f060:	b	f088 <_argp_fmtstream_update@@Base+0x464>
    f064:	cmp	x8, #0x1
    f068:	b.lt	f088 <_argp_fmtstream_update@@Base+0x464>  // b.tstop
    f06c:	mov	x9, xzr
    f070:	strb	w25, [x20, x9]
    f074:	ldr	x8, [x19, #24]
    f078:	add	x9, x9, #0x1
    f07c:	cmp	x8, x9
    f080:	b.gt	f070 <_argp_fmtstream_update@@Base+0x44c>
    f084:	add	x20, x20, x9
    f088:	cmp	x20, x23
    f08c:	b.cs	f0a8 <_argp_fmtstream_update@@Base+0x484>  // b.hs, b.nlast
    f090:	add	x8, x21, x24
    f094:	sub	x2, x8, x23
    f098:	mov	x0, x20
    f09c:	mov	x1, x23
    f0a0:	bl	a220 <memmove@plt>
    f0a4:	ldr	x8, [x19, #24]
    f0a8:	sub	x9, x24, x23
    f0ac:	cmp	x8, #0x0
    f0b0:	add	x9, x9, x21
    f0b4:	csinv	x23, x8, xzr, ne  // ne = any
    f0b8:	add	x27, x20, x9
    f0bc:	str	x27, [x19, #56]
    f0c0:	str	x23, [x19, #40]
    f0c4:	b	ec74 <_argp_fmtstream_update@@Base+0x50>
    f0c8:	mov	w1, #0xa                   	// #10
    f0cc:	bl	a890 <__overflow@plt>
    f0d0:	b	efd0 <_argp_fmtstream_update@@Base+0x3ac>
    f0d4:	str	x8, [x19, #40]
    f0d8:	b	f0f0 <_argp_fmtstream_update@@Base+0x4cc>
    f0dc:	add	x8, x23, x26
    f0e0:	str	x8, [x19, #40]
    f0e4:	sub	x8, x22, x8
    f0e8:	add	x27, x27, x8
    f0ec:	str	x27, [x19, #56]
    f0f0:	ldr	x8, [x19, #48]
    f0f4:	sub	x8, x27, x8
    f0f8:	str	x8, [x19, #32]
    f0fc:	ldp	x20, x19, [sp, #96]
    f100:	ldp	x22, x21, [sp, #80]
    f104:	ldp	x24, x23, [sp, #64]
    f108:	ldp	x26, x25, [sp, #48]
    f10c:	ldp	x28, x27, [sp, #32]
    f110:	ldp	x29, x30, [sp, #16]
    f114:	add	sp, sp, #0x70
    f118:	ret

000000000000f11c <_argp_fmtstream_ensure@@Base>:
    f11c:	stp	x29, x30, [sp, #-32]!
    f120:	stp	x20, x19, [sp, #16]
    f124:	ldp	x9, x8, [x0, #56]
    f128:	mov	x29, sp
    f12c:	sub	x8, x8, x9
    f130:	cmp	x8, x1
    f134:	b.cs	f1a4 <_argp_fmtstream_ensure@@Base+0x88>  // b.hs, b.nlast
    f138:	mov	x20, x1
    f13c:	mov	x19, x0
    f140:	bl	a480 <_argp_fmtstream_update@plt>
    f144:	ldp	x0, x8, [x19, #48]
    f148:	ldr	x3, [x19]
    f14c:	mov	w1, #0x1                   	// #1
    f150:	sub	x2, x8, x0
    f154:	bl	a270 <fwrite_unlocked@plt>
    f158:	mov	x8, x0
    f15c:	ldp	x0, x9, [x19, #48]
    f160:	sub	x10, x9, x0
    f164:	cmp	x8, x10
    f168:	b.ne	f1b4 <_argp_fmtstream_ensure@@Base+0x98>  // b.any
    f16c:	ldr	x8, [x19, #64]
    f170:	str	x0, [x19, #56]
    f174:	str	xzr, [x19, #32]
    f178:	sub	x8, x8, x0
    f17c:	cmp	x8, x20
    f180:	b.cs	f1a4 <_argp_fmtstream_ensure@@Base+0x88>  // b.hs, b.nlast
    f184:	adds	x20, x8, x20
    f188:	b.cs	f1e4 <_argp_fmtstream_ensure@@Base+0xc8>  // b.hs, b.nlast
    f18c:	mov	x1, x20
    f190:	bl	a730 <realloc@plt>
    f194:	cbz	x0, f1e4 <_argp_fmtstream_ensure@@Base+0xc8>
    f198:	add	x8, x0, x20
    f19c:	stp	x0, x0, [x19, #48]
    f1a0:	str	x8, [x19, #64]
    f1a4:	mov	w0, #0x1                   	// #1
    f1a8:	ldp	x20, x19, [sp, #16]
    f1ac:	ldp	x29, x30, [sp], #32
    f1b0:	ret
    f1b4:	ldr	x10, [x19, #32]
    f1b8:	sub	x9, x9, x8
    f1bc:	add	x1, x0, x8
    f1c0:	sub	x2, x9, x0
    f1c4:	sub	x8, x10, x8
    f1c8:	str	x9, [x19, #56]
    f1cc:	str	x8, [x19, #32]
    f1d0:	bl	a220 <memmove@plt>
    f1d4:	mov	w0, wzr
    f1d8:	ldp	x20, x19, [sp, #16]
    f1dc:	ldp	x29, x30, [sp], #32
    f1e0:	ret
    f1e4:	bl	ad90 <__errno_location@plt>
    f1e8:	mov	x8, x0
    f1ec:	mov	w0, wzr
    f1f0:	mov	w9, #0xc                   	// #12
    f1f4:	str	w9, [x8]
    f1f8:	ldp	x20, x19, [sp, #16]
    f1fc:	ldp	x29, x30, [sp], #32
    f200:	ret

000000000000f204 <argp_fmtstream_printf@@Base>:
    f204:	sub	sp, sp, #0x140
    f208:	stp	x29, x30, [sp, #240]
    f20c:	add	x29, sp, #0xf0
    f210:	stp	x22, x21, [sp, #288]
    f214:	mov	x22, #0xffffffffffffffd0    	// #-48
    f218:	mov	x8, sp
    f21c:	sub	x9, x29, #0x70
    f220:	stp	x28, x25, [sp, #256]
    f224:	stp	x24, x23, [sp, #272]
    f228:	stp	x20, x19, [sp, #304]
    f22c:	mov	x20, x1
    f230:	mov	x19, x0
    f234:	mov	w1, #0x96                  	// #150
    f238:	movk	x22, #0xff80, lsl #32
    f23c:	add	x23, x29, #0x50
    f240:	add	x24, x8, #0x80
    f244:	add	x25, x9, #0x30
    f248:	stp	x2, x3, [x29, #-112]
    f24c:	stp	x4, x5, [x29, #-96]
    f250:	stp	x6, x7, [x29, #-80]
    f254:	stp	q1, q2, [sp, #16]
    f258:	stp	q3, q4, [sp, #48]
    f25c:	str	q0, [sp]
    f260:	stp	q5, q6, [sp, #80]
    f264:	str	q7, [sp, #112]
    f268:	mov	x0, x19
    f26c:	bl	ac70 <_argp_fmtstream_ensure@plt>
    f270:	cbz	w0, f2c4 <argp_fmtstream_printf@@Base+0xc0>
    f274:	stp	x24, x22, [x29, #-16]
    f278:	stp	x23, x25, [x29, #-32]
    f27c:	ldp	x0, x8, [x19, #56]
    f280:	ldp	q0, q1, [x29, #-32]
    f284:	sub	x3, x29, #0x40
    f288:	mov	x2, x20
    f28c:	sub	x21, x8, x0
    f290:	mov	x1, x21
    f294:	stp	q0, q1, [x29, #-64]
    f298:	bl	acb0 <vsnprintf@plt>
    f29c:	mov	w8, w0
    f2a0:	sxtw	x0, w8
    f2a4:	add	w8, w8, #0x1
    f2a8:	cmp	x21, x0
    f2ac:	sxtw	x1, w8
    f2b0:	b.ls	f268 <argp_fmtstream_printf@@Base+0x64>  // b.plast
    f2b4:	ldr	x8, [x19, #56]
    f2b8:	add	x8, x8, x0
    f2bc:	str	x8, [x19, #56]
    f2c0:	b	f2c8 <argp_fmtstream_printf@@Base+0xc4>
    f2c4:	mov	x0, #0xffffffffffffffff    	// #-1
    f2c8:	ldp	x20, x19, [sp, #304]
    f2cc:	ldp	x22, x21, [sp, #288]
    f2d0:	ldp	x24, x23, [sp, #272]
    f2d4:	ldp	x28, x25, [sp, #256]
    f2d8:	ldp	x29, x30, [sp, #240]
    f2dc:	add	sp, sp, #0x140
    f2e0:	ret

000000000000f2e4 <argp_fmtstream_write@@Base>:
    f2e4:	stp	x29, x30, [sp, #-48]!
    f2e8:	stp	x20, x19, [sp, #32]
    f2ec:	mov	x20, x0
    f2f0:	ldr	x0, [x0, #56]
    f2f4:	ldr	x8, [x20, #64]
    f2f8:	str	x21, [sp, #16]
    f2fc:	mov	x19, x2
    f300:	add	x9, x0, x2
    f304:	cmp	x9, x8
    f308:	mov	x21, x1
    f30c:	mov	x29, sp
    f310:	b.ls	f328 <argp_fmtstream_write@@Base+0x44>  // b.plast
    f314:	mov	x0, x20
    f318:	mov	x1, x19
    f31c:	bl	ac70 <_argp_fmtstream_ensure@plt>
    f320:	cbz	w0, f344 <argp_fmtstream_write@@Base+0x60>
    f324:	ldr	x0, [x20, #56]
    f328:	mov	x1, x21
    f32c:	mov	x2, x19
    f330:	bl	a210 <memcpy@plt>
    f334:	ldr	x8, [x20, #56]
    f338:	add	x8, x8, x19
    f33c:	str	x8, [x20, #56]
    f340:	b	f348 <argp_fmtstream_write@@Base+0x64>
    f344:	mov	x19, xzr
    f348:	mov	x0, x19
    f34c:	ldp	x20, x19, [sp, #32]
    f350:	ldr	x21, [sp, #16]
    f354:	ldp	x29, x30, [sp], #48
    f358:	ret

000000000000f35c <argp_fmtstream_puts@@Base>:
    f35c:	stp	x29, x30, [sp, #-48]!
    f360:	stp	x20, x19, [sp, #32]
    f364:	mov	x20, x0
    f368:	mov	x0, x1
    f36c:	str	x21, [sp, #16]
    f370:	mov	x29, sp
    f374:	mov	x21, x1
    f378:	bl	a290 <strlen@plt>
    f37c:	cbz	x0, f3d4 <argp_fmtstream_puts@@Base+0x78>
    f380:	mov	x19, x0
    f384:	ldp	x0, x8, [x20, #56]
    f388:	add	x9, x0, x19
    f38c:	cmp	x9, x8
    f390:	b.ls	f3a8 <argp_fmtstream_puts@@Base+0x4c>  // b.plast
    f394:	mov	x0, x20
    f398:	mov	x1, x19
    f39c:	bl	ac70 <_argp_fmtstream_ensure@plt>
    f3a0:	cbz	w0, f3c8 <argp_fmtstream_puts@@Base+0x6c>
    f3a4:	ldr	x0, [x20, #56]
    f3a8:	mov	x1, x21
    f3ac:	mov	x2, x19
    f3b0:	bl	a210 <memcpy@plt>
    f3b4:	ldr	x8, [x20, #56]
    f3b8:	add	x8, x8, x19
    f3bc:	str	x8, [x20, #56]
    f3c0:	mov	x8, x19
    f3c4:	b	f3cc <argp_fmtstream_puts@@Base+0x70>
    f3c8:	mov	x8, xzr
    f3cc:	cmp	x8, x19
    f3d0:	csetm	w0, ne  // ne = any
    f3d4:	ldp	x20, x19, [sp, #32]
    f3d8:	ldr	x21, [sp, #16]
    f3dc:	ldp	x29, x30, [sp], #48
    f3e0:	ret

000000000000f3e4 <argp_fmtstream_putc@@Base>:
    f3e4:	stp	x29, x30, [sp, #-32]!
    f3e8:	stp	x20, x19, [sp, #16]
    f3ec:	ldp	x8, x9, [x0, #56]
    f3f0:	mov	x19, x0
    f3f4:	mov	w20, w1
    f3f8:	mov	x29, sp
    f3fc:	cmp	x8, x9
    f400:	b.cc	f418 <argp_fmtstream_putc@@Base+0x34>  // b.lo, b.ul, b.last
    f404:	mov	w1, #0x1                   	// #1
    f408:	mov	x0, x19
    f40c:	bl	ac70 <_argp_fmtstream_ensure@plt>
    f410:	cbz	w0, f434 <argp_fmtstream_putc@@Base+0x50>
    f414:	ldr	x8, [x19, #56]
    f418:	add	x9, x8, #0x1
    f41c:	and	w0, w20, #0xff
    f420:	str	x9, [x19, #56]
    f424:	strb	w20, [x8]
    f428:	ldp	x20, x19, [sp, #16]
    f42c:	ldp	x29, x30, [sp], #32
    f430:	ret
    f434:	mov	w0, #0xffffffff            	// #-1
    f438:	ldp	x20, x19, [sp, #16]
    f43c:	ldp	x29, x30, [sp], #32
    f440:	ret

000000000000f444 <argp_fmtstream_set_lmargin@@Base>:
    f444:	stp	x29, x30, [sp, #-32]!
    f448:	stp	x20, x19, [sp, #16]
    f44c:	ldp	x9, x8, [x0, #48]
    f450:	ldr	x10, [x0, #32]
    f454:	mov	x19, x0
    f458:	mov	x20, x1
    f45c:	sub	x8, x8, x9
    f460:	cmp	x8, x10
    f464:	mov	x29, sp
    f468:	b.ls	f474 <argp_fmtstream_set_lmargin@@Base+0x30>  // b.plast
    f46c:	mov	x0, x19
    f470:	bl	a480 <_argp_fmtstream_update@plt>
    f474:	ldr	x0, [x19, #8]
    f478:	str	x20, [x19, #8]
    f47c:	ldp	x20, x19, [sp, #16]
    f480:	ldp	x29, x30, [sp], #32
    f484:	ret

000000000000f488 <argp_fmtstream_set_rmargin@@Base>:
    f488:	stp	x29, x30, [sp, #-32]!
    f48c:	stp	x20, x19, [sp, #16]
    f490:	ldp	x9, x8, [x0, #48]
    f494:	ldr	x10, [x0, #32]
    f498:	mov	x19, x0
    f49c:	mov	x20, x1
    f4a0:	sub	x8, x8, x9
    f4a4:	cmp	x8, x10
    f4a8:	mov	x29, sp
    f4ac:	b.ls	f4b8 <argp_fmtstream_set_rmargin@@Base+0x30>  // b.plast
    f4b0:	mov	x0, x19
    f4b4:	bl	a480 <_argp_fmtstream_update@plt>
    f4b8:	ldr	x0, [x19, #16]
    f4bc:	str	x20, [x19, #16]
    f4c0:	ldp	x20, x19, [sp, #16]
    f4c4:	ldp	x29, x30, [sp], #32
    f4c8:	ret

000000000000f4cc <argp_fmtstream_set_wmargin@@Base>:
    f4cc:	stp	x29, x30, [sp, #-32]!
    f4d0:	stp	x20, x19, [sp, #16]
    f4d4:	ldp	x9, x8, [x0, #48]
    f4d8:	ldr	x10, [x0, #32]
    f4dc:	mov	x19, x0
    f4e0:	mov	x20, x1
    f4e4:	sub	x8, x8, x9
    f4e8:	cmp	x8, x10
    f4ec:	mov	x29, sp
    f4f0:	b.ls	f4fc <argp_fmtstream_set_wmargin@@Base+0x30>  // b.plast
    f4f4:	mov	x0, x19
    f4f8:	bl	a480 <_argp_fmtstream_update@plt>
    f4fc:	ldr	x0, [x19, #24]
    f500:	str	x20, [x19, #24]
    f504:	ldp	x20, x19, [sp, #16]
    f508:	ldp	x29, x30, [sp], #32
    f50c:	ret

000000000000f510 <argp_fmtstream_point@@Base>:
    f510:	stp	x29, x30, [sp, #-32]!
    f514:	str	x19, [sp, #16]
    f518:	ldp	x9, x8, [x0, #48]
    f51c:	ldr	x10, [x0, #32]
    f520:	mov	x19, x0
    f524:	mov	x29, sp
    f528:	sub	x8, x8, x9
    f52c:	cmp	x8, x10
    f530:	b.ls	f53c <argp_fmtstream_point@@Base+0x2c>  // b.plast
    f534:	mov	x0, x19
    f538:	bl	a480 <_argp_fmtstream_update@plt>
    f53c:	ldr	x8, [x19, #40]
    f540:	ldr	x19, [sp, #16]
    f544:	bic	x0, x8, x8, asr #63
    f548:	ldp	x29, x30, [sp], #32
    f54c:	ret

000000000000f550 <argp_help@@Base>:
    f550:	mov	x4, x3
    f554:	mov	w3, w2
    f558:	mov	x2, x1
    f55c:	mov	x1, xzr
    f560:	b	f564 <argp_help@@Base+0x14>
    f564:	stp	x29, x30, [sp, #-96]!
    f568:	stp	x28, x27, [sp, #16]
    f56c:	stp	x26, x25, [sp, #32]
    f570:	stp	x24, x23, [sp, #48]
    f574:	stp	x22, x21, [sp, #64]
    f578:	stp	x20, x19, [sp, #80]
    f57c:	mov	x29, sp
    f580:	sub	sp, sp, #0x80
    f584:	stp	x4, x0, [x29, #-88]
    f588:	cbz	x2, 10d2c <argp_help@@Base+0x17dc>
    f58c:	mov	x0, x2
    f590:	mov	w20, w3
    f594:	mov	x21, x2
    f598:	mov	x22, x1
    f59c:	bl	a2f0 <flockfile@plt>
    f5a0:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    f5a4:	ldr	w8, [x8, #1700]
    f5a8:	stur	x22, [x29, #-72]
    f5ac:	cbnz	w8, fa8c <argp_help@@Base+0x53c>
    f5b0:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    f5b4:	add	x0, x0, #0x241
    f5b8:	bl	adb0 <getenv@plt>
    f5bc:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    f5c0:	add	x8, x8, #0x680
    f5c4:	ldp	q0, q1, [x8]
    f5c8:	ldr	x8, [x8, #32]
    f5cc:	stp	q0, q1, [x29, #-48]
    f5d0:	stur	x8, [x29, #-16]
    f5d4:	cbz	x0, fa8c <argp_help@@Base+0x53c>
    f5d8:	stur	w20, [x29, #-116]
    f5dc:	ldrb	w20, [x0]
    f5e0:	mov	x23, x0
    f5e4:	stur	x21, [x29, #-112]
    f5e8:	cbz	w20, f998 <argp_help@@Base+0x448>
    f5ec:	bl	a910 <__ctype_b_loc@plt>
    f5f0:	ldur	x9, [x29, #-72]
    f5f4:	adrp	x8, 32000 <vasnprintf@@Base+0x1474>
    f5f8:	add	x8, x8, #0x197
    f5fc:	adrp	x26, 32000 <vasnprintf@@Base+0x1474>
    f600:	cmp	x9, #0x0
    f604:	adrp	x25, 32000 <vasnprintf@@Base+0x1474>
    f608:	adrp	x21, 32000 <vasnprintf@@Base+0x1474>
    f60c:	mov	x24, x0
    f610:	add	x26, x26, #0x488
    f614:	add	x25, x25, #0x498
    f618:	add	x21, x21, #0x4a8
    f61c:	csel	x8, xzr, x8, eq  // eq = none
    f620:	stur	x8, [x29, #-96]
    f624:	b	f64c <argp_help@@Base+0xfc>
    f628:	ldrb	w8, [x20, #15]
    f62c:	sub	x9, x29, #0x30
    f630:	str	w27, [x9, x8]
    f634:	mov	x8, x19
    f638:	ldrb	w9, [x8], #1
    f63c:	cmp	w9, #0x2c
    f640:	csel	x23, x8, x19, eq  // eq = none
    f644:	ldrb	w20, [x23]
    f648:	cbz	w20, f998 <argp_help@@Base+0x448>
    f64c:	ldr	x8, [x24]
    f650:	and	x9, x20, #0xff
    f654:	ldrh	w9, [x8, x9, lsl #1]
    f658:	tbz	w9, #13, f668 <argp_help@@Base+0x118>
    f65c:	ldrb	w20, [x23, #1]!
    f660:	ldrh	w9, [x8, x20, lsl #1]
    f664:	tbnz	w9, #13, f65c <argp_help@@Base+0x10c>
    f668:	tbz	w9, #10, f964 <argp_help@@Base+0x414>
    f66c:	mov	w11, w20
    f670:	mov	x10, x23
    f674:	b	f67c <argp_help@@Base+0x12c>
    f678:	ldrb	w11, [x10, #1]!
    f67c:	and	x9, x11, #0xff
    f680:	ldrh	w9, [x8, x9, lsl #1]
    f684:	tbnz	w9, #3, f678 <argp_help@@Base+0x128>
    f688:	and	w12, w11, #0xff
    f68c:	cmp	w12, #0x5f
    f690:	b.eq	f678 <argp_help@@Base+0x128>  // b.none
    f694:	cmp	w12, #0x2d
    f698:	b.eq	f678 <argp_help@@Base+0x128>  // b.none
    f69c:	mov	x19, x10
    f6a0:	tbz	w9, #13, f6b4 <argp_help@@Base+0x164>
    f6a4:	mov	x19, x10
    f6a8:	ldrb	w11, [x19, #1]!
    f6ac:	ldrh	w9, [x8, x11, lsl #1]
    f6b0:	tbnz	w9, #13, f6a8 <argp_help@@Base+0x158>
    f6b4:	ands	w11, w11, #0xff
    f6b8:	sub	x28, x10, x23
    f6bc:	b.eq	f700 <argp_help@@Base+0x1b0>  // b.none
    f6c0:	cmp	w11, #0x2c
    f6c4:	b.eq	f700 <argp_help@@Base+0x1b0>  // b.none
    f6c8:	cmp	w11, #0x3d
    f6cc:	b.ne	f6dc <argp_help@@Base+0x18c>  // b.any
    f6d0:	ldrb	w9, [x19, #1]!
    f6d4:	ldrh	w9, [x8, x9, lsl #1]
    f6d8:	tbnz	w9, #13, f6d0 <argp_help@@Base+0x180>
    f6dc:	mov	x20, x25
    f6e0:	tbnz	w9, #11, f758 <argp_help@@Base+0x208>
    f6e4:	mov	w22, wzr
    f6e8:	mov	w27, wzr
    f6ec:	mov	x0, x26
    f6f0:	bl	a290 <strlen@plt>
    f6f4:	cmp	x0, x28
    f6f8:	b.eq	f7a4 <argp_help@@Base+0x254>  // b.none
    f6fc:	b	f7b8 <argp_help@@Base+0x268>
    f700:	and	w8, w20, #0xff
    f704:	cmp	w8, #0x6e
    f708:	b.ne	f738 <argp_help@@Base+0x1e8>  // b.any
    f70c:	ldrb	w8, [x23, #1]
    f710:	cmp	w8, #0x6f
    f714:	b.ne	f738 <argp_help@@Base+0x1e8>  // b.any
    f718:	ldrb	w8, [x23, #2]
    f71c:	cmp	w8, #0x2d
    f720:	b.ne	f738 <argp_help@@Base+0x1e8>  // b.any
    f724:	mov	w27, wzr
    f728:	add	x23, x23, #0x3
    f72c:	sub	x28, x28, #0x3
    f730:	mov	w22, #0x1                   	// #1
    f734:	b	f740 <argp_help@@Base+0x1f0>
    f738:	mov	w22, #0x1                   	// #1
    f73c:	mov	w27, #0x1                   	// #1
    f740:	mov	x20, x25
    f744:	mov	x0, x26
    f748:	bl	a290 <strlen@plt>
    f74c:	cmp	x0, x28
    f750:	b.eq	f7a4 <argp_help@@Base+0x254>  // b.none
    f754:	b	f7b8 <argp_help@@Base+0x268>
    f758:	mov	w2, #0xa                   	// #10
    f75c:	mov	x0, x19
    f760:	mov	x1, xzr
    f764:	bl	a940 <strtol@plt>
    f768:	ldr	x8, [x24]
    f76c:	mov	x27, x0
    f770:	sub	x19, x19, #0x1
    f774:	ldrb	w9, [x19, #1]!
    f778:	ldrh	w9, [x8, x9, lsl #1]
    f77c:	tbnz	w9, #11, f774 <argp_help@@Base+0x224>
    f780:	tbz	w9, #13, f790 <argp_help@@Base+0x240>
    f784:	ldrb	w9, [x19, #1]!
    f788:	ldrh	w9, [x8, x9, lsl #1]
    f78c:	tbnz	w9, #13, f784 <argp_help@@Base+0x234>
    f790:	mov	w22, wzr
    f794:	mov	x0, x26
    f798:	bl	a290 <strlen@plt>
    f79c:	cmp	x0, x28
    f7a0:	b.ne	f7b8 <argp_help@@Base+0x268>  // b.any
    f7a4:	mov	x0, x23
    f7a8:	mov	x1, x26
    f7ac:	mov	x2, x28
    f7b0:	bl	a610 <strncmp@plt>
    f7b4:	cbz	w0, f920 <argp_help@@Base+0x3d0>
    f7b8:	mov	x0, x20
    f7bc:	bl	a290 <strlen@plt>
    f7c0:	cmp	x0, x28
    f7c4:	b.ne	f7dc <argp_help@@Base+0x28c>  // b.any
    f7c8:	mov	x0, x23
    f7cc:	mov	x1, x20
    f7d0:	mov	x2, x28
    f7d4:	bl	a610 <strncmp@plt>
    f7d8:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f7dc:	mov	x0, x21
    f7e0:	mov	x20, x21
    f7e4:	bl	a290 <strlen@plt>
    f7e8:	cmp	x0, x28
    f7ec:	b.ne	f804 <argp_help@@Base+0x2b4>  // b.any
    f7f0:	mov	x0, x23
    f7f4:	mov	x1, x20
    f7f8:	mov	x2, x28
    f7fc:	bl	a610 <strncmp@plt>
    f800:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f804:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    f808:	add	x20, x20, #0x4b8
    f80c:	mov	x0, x20
    f810:	bl	a290 <strlen@plt>
    f814:	cmp	x0, x28
    f818:	b.ne	f830 <argp_help@@Base+0x2e0>  // b.any
    f81c:	mov	x0, x23
    f820:	mov	x1, x20
    f824:	mov	x2, x28
    f828:	bl	a610 <strncmp@plt>
    f82c:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f830:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    f834:	add	x20, x20, #0x4c8
    f838:	mov	x0, x20
    f83c:	bl	a290 <strlen@plt>
    f840:	cmp	x0, x28
    f844:	b.ne	f85c <argp_help@@Base+0x30c>  // b.any
    f848:	mov	x0, x23
    f84c:	mov	x1, x20
    f850:	mov	x2, x28
    f854:	bl	a610 <strncmp@plt>
    f858:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f85c:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    f860:	add	x20, x20, #0x4d8
    f864:	mov	x0, x20
    f868:	bl	a290 <strlen@plt>
    f86c:	cmp	x0, x28
    f870:	b.ne	f888 <argp_help@@Base+0x338>  // b.any
    f874:	mov	x0, x23
    f878:	mov	x1, x20
    f87c:	mov	x2, x28
    f880:	bl	a610 <strncmp@plt>
    f884:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f888:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    f88c:	add	x20, x20, #0x4e8
    f890:	mov	x0, x20
    f894:	bl	a290 <strlen@plt>
    f898:	cmp	x0, x28
    f89c:	b.ne	f8b4 <argp_help@@Base+0x364>  // b.any
    f8a0:	mov	x0, x23
    f8a4:	mov	x1, x20
    f8a8:	mov	x2, x28
    f8ac:	bl	a610 <strncmp@plt>
    f8b0:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f8b4:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    f8b8:	add	x20, x20, #0x4f8
    f8bc:	mov	x0, x20
    f8c0:	bl	a290 <strlen@plt>
    f8c4:	cmp	x0, x28
    f8c8:	b.ne	f8e0 <argp_help@@Base+0x390>  // b.any
    f8cc:	mov	x0, x23
    f8d0:	mov	x1, x20
    f8d4:	mov	x2, x28
    f8d8:	bl	a610 <strncmp@plt>
    f8dc:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f8e0:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
    f8e4:	add	x20, x20, #0x508
    f8e8:	mov	x0, x20
    f8ec:	bl	a290 <strlen@plt>
    f8f0:	cmp	x0, x28
    f8f4:	b.ne	f90c <argp_help@@Base+0x3bc>  // b.any
    f8f8:	mov	x0, x23
    f8fc:	mov	x1, x20
    f900:	mov	x2, x28
    f904:	bl	a610 <strncmp@plt>
    f908:	cbz	w0, f924 <argp_help@@Base+0x3d4>
    f90c:	ldur	x0, [x29, #-96]
    f910:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    f914:	mov	w2, #0x5                   	// #5
    f918:	add	x1, x1, #0x27e
    f91c:	b	f940 <argp_help@@Base+0x3f0>
    f920:	mov	x20, x26
    f924:	cbz	w22, f628 <argp_help@@Base+0xd8>
    f928:	ldrb	w9, [x20, #14]
    f92c:	cbnz	w9, f628 <argp_help@@Base+0xd8>
    f930:	ldur	x0, [x29, #-96]
    f934:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    f938:	mov	w2, #0x5                   	// #5
    f93c:	add	x1, x1, #0x24f
    f940:	bl	ac90 <dcgettext@plt>
    f944:	mov	x3, x0
    f948:	ldur	x0, [x29, #-72]
    f94c:	mov	w1, wzr
    f950:	mov	w2, wzr
    f954:	mov	w4, w28
    f958:	mov	x5, x23
    f95c:	bl	a5b0 <argp_failure@plt>
    f960:	b	f634 <argp_help@@Base+0xe4>
    f964:	tst	w20, #0xff
    f968:	b.eq	f998 <argp_help@@Base+0x448>  // b.none
    f96c:	ldur	x0, [x29, #-96]
    f970:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    f974:	add	x1, x1, #0x2a4
    f978:	mov	w2, #0x5                   	// #5
    f97c:	bl	ac90 <dcgettext@plt>
    f980:	mov	x3, x0
    f984:	ldur	x0, [x29, #-72]
    f988:	mov	w1, wzr
    f98c:	mov	w2, wzr
    f990:	mov	x4, x23
    f994:	bl	a5b0 <argp_failure@plt>
    f998:	ldur	w9, [x29, #-40]
    f99c:	ldur	w8, [x29, #-16]
    f9a0:	cmp	w9, w8
    f9a4:	b.ge	fa10 <argp_help@@Base+0x4c0>  // b.tcont
    f9a8:	ldur	w9, [x29, #-36]
    f9ac:	cmp	w9, w8
    f9b0:	b.ge	fa1c <argp_help@@Base+0x4cc>  // b.tcont
    f9b4:	ldur	w9, [x29, #-32]
    f9b8:	cmp	w9, w8
    f9bc:	b.ge	fa28 <argp_help@@Base+0x4d8>  // b.tcont
    f9c0:	ldur	w9, [x29, #-28]
    f9c4:	cmp	w9, w8
    f9c8:	b.ge	fa34 <argp_help@@Base+0x4e4>  // b.tcont
    f9cc:	ldur	w9, [x29, #-24]
    f9d0:	cmp	w9, w8
    f9d4:	b.ge	fa40 <argp_help@@Base+0x4f0>  // b.tcont
    f9d8:	ldur	w9, [x29, #-20]
    f9dc:	ldur	x21, [x29, #-112]
    f9e0:	ldur	w20, [x29, #-116]
    f9e4:	ldur	x22, [x29, #-72]
    f9e8:	cmp	w9, w8
    f9ec:	b.ge	10d4c <argp_help@@Base+0x17fc>  // b.tcont
    f9f0:	ldp	q0, q1, [x29, #-48]
    f9f4:	ldur	w8, [x29, #-16]
    f9f8:	adrp	x10, 46000 <base_len@@Base+0x30a14>
    f9fc:	mov	w9, #0x1                   	// #1
    fa00:	add	x10, x10, #0x680
    fa04:	stp	q0, q1, [x10]
    fa08:	stp	w8, w9, [x10, #32]
    fa0c:	b	fa8c <argp_help@@Base+0x53c>
    fa10:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
    fa14:	add	x19, x19, #0x4a8
    fa18:	b	fa48 <argp_help@@Base+0x4f8>
    fa1c:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
    fa20:	add	x19, x19, #0x4b8
    fa24:	b	fa48 <argp_help@@Base+0x4f8>
    fa28:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
    fa2c:	add	x19, x19, #0x4c8
    fa30:	b	fa48 <argp_help@@Base+0x4f8>
    fa34:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
    fa38:	add	x19, x19, #0x4d8
    fa3c:	b	fa48 <argp_help@@Base+0x4f8>
    fa40:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
    fa44:	add	x19, x19, #0x4e8
    fa48:	ldur	x21, [x29, #-112]
    fa4c:	ldur	w20, [x29, #-116]
    fa50:	ldur	x22, [x29, #-72]
    fa54:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    fa58:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    fa5c:	add	x0, x0, #0x197
    fa60:	add	x1, x1, #0x2c1
    fa64:	mov	w2, #0x5                   	// #5
    fa68:	bl	ac90 <dcgettext@plt>
    fa6c:	adrp	x4, 32000 <vasnprintf@@Base+0x1474>
    fa70:	mov	x3, x0
    fa74:	add	x4, x4, #0x2f5
    fa78:	mov	x0, x22
    fa7c:	mov	w1, wzr
    fa80:	mov	w2, wzr
    fa84:	mov	x5, x19
    fa88:	bl	a5b0 <argp_failure@plt>
    fa8c:	adrp	x8, 46000 <base_len@@Base+0x30a14>
    fa90:	ldrsw	x2, [x8, #1696]
    fa94:	mov	x0, x21
    fa98:	mov	x1, xzr
    fa9c:	mov	x3, xzr
    faa0:	bl	a990 <argp_make_fmtstream@plt>
    faa4:	cbz	x0, fbf8 <argp_help@@Base+0x6a8>
    faa8:	mov	w8, #0xb                   	// #11
    faac:	mov	x23, x0
    fab0:	tst	w20, w8
    fab4:	b.eq	fc1c <argp_help@@Base+0x6cc>  // b.none
    fab8:	ldur	x0, [x29, #-80]
    fabc:	mov	x1, xzr
    fac0:	bl	111d0 <argp_failure@@Base+0x254>
    fac4:	ldr	w19, [x0, #8]
    fac8:	mov	x24, x0
    facc:	cbz	w19, fc20 <argp_help@@Base+0x6d0>
    fad0:	ldr	x26, [x24]
    fad4:	adrp	x22, 32000 <vasnprintf@@Base+0x1474>
    fad8:	stur	w20, [x29, #-116]
    fadc:	mov	x28, x21
    fae0:	stur	x24, [x29, #-96]
    fae4:	mov	w20, w19
    fae8:	add	x22, x22, #0x1d0
    faec:	mov	w24, w19
    faf0:	mov	x21, x26
    faf4:	b	fb04 <argp_help@@Base+0x5b4>
    faf8:	sub	w24, w24, #0x1
    fafc:	add	x21, x21, #0x38
    fb00:	cbz	w24, fb48 <argp_help@@Base+0x5f8>
    fb04:	ldr	w25, [x21, #8]
    fb08:	cbz	w25, faf8 <argp_help@@Base+0x5a8>
    fb0c:	ldr	x27, [x21]
    fb10:	b	fb20 <argp_help@@Base+0x5d0>
    fb14:	sub	w25, w25, #0x1
    fb18:	add	x27, x27, #0x30
    fb1c:	cbz	w25, faf8 <argp_help@@Base+0x5a8>
    fb20:	ldr	x0, [x27]
    fb24:	cbz	x0, fb14 <argp_help@@Base+0x5c4>
    fb28:	ldrb	w8, [x27, #24]
    fb2c:	tbnz	w8, #1, fb14 <argp_help@@Base+0x5c4>
    fb30:	mov	x1, x22
    fb34:	bl	a8f0 <strcmp@plt>
    fb38:	cbnz	w0, fb14 <argp_help@@Base+0x5c4>
    fb3c:	cbz	x21, fb48 <argp_help@@Base+0x5f8>
    fb40:	mov	w8, #0xffffffff            	// #-1
    fb44:	str	w8, [x21, #24]
    fb48:	adrp	x22, 32000 <vasnprintf@@Base+0x1474>
    fb4c:	add	x22, x22, #0x5b6
    fb50:	mov	x21, x26
    fb54:	b	fb64 <argp_help@@Base+0x614>
    fb58:	sub	w20, w20, #0x1
    fb5c:	add	x21, x21, #0x38
    fb60:	cbz	w20, fba8 <argp_help@@Base+0x658>
    fb64:	ldr	w24, [x21, #8]
    fb68:	cbz	w24, fb58 <argp_help@@Base+0x608>
    fb6c:	ldr	x25, [x21]
    fb70:	b	fb80 <argp_help@@Base+0x630>
    fb74:	sub	w24, w24, #0x1
    fb78:	add	x25, x25, #0x30
    fb7c:	cbz	w24, fb58 <argp_help@@Base+0x608>
    fb80:	ldr	x0, [x25]
    fb84:	cbz	x0, fb74 <argp_help@@Base+0x624>
    fb88:	ldrb	w8, [x25, #24]
    fb8c:	tbnz	w8, #1, fb74 <argp_help@@Base+0x624>
    fb90:	mov	x1, x22
    fb94:	bl	a8f0 <strcmp@plt>
    fb98:	cbnz	w0, fb74 <argp_help@@Base+0x624>
    fb9c:	cbz	x21, fba8 <argp_help@@Base+0x658>
    fba0:	mov	w8, #0xffffffff            	// #-1
    fba4:	str	w8, [x21, #24]
    fba8:	subs	w8, w19, #0x1
    fbac:	b.eq	10b10 <argp_help@@Base+0x15c0>  // b.none
    fbb0:	add	x11, x8, #0x1
    fbb4:	mov	w9, #0x38                  	// #56
    fbb8:	and	x8, x11, #0x1fffffffe
    fbbc:	mov	x10, xzr
    fbc0:	madd	x9, x8, x9, x26
    fbc4:	add	x12, x26, #0x68
    fbc8:	add	w13, w10, #0x1
    fbcc:	stur	w10, [x12, #-56]
    fbd0:	add	x10, x10, #0x2
    fbd4:	str	w13, [x12], #112
    fbd8:	cmp	x8, x10
    fbdc:	b.ne	fbc8 <argp_help@@Base+0x678>  // b.any
    fbe0:	ldur	w20, [x29, #-116]
    fbe4:	ldur	x24, [x29, #-96]
    fbe8:	cmp	x11, x8
    fbec:	mov	x21, x28
    fbf0:	b.ne	10b20 <argp_help@@Base+0x15d0>  // b.any
    fbf4:	b	10b34 <argp_help@@Base+0x15e4>
    fbf8:	mov	x0, x21
    fbfc:	mov	sp, x29
    fc00:	ldp	x20, x19, [sp, #80]
    fc04:	ldp	x22, x21, [sp, #64]
    fc08:	ldp	x24, x23, [sp, #48]
    fc0c:	ldp	x26, x25, [sp, #32]
    fc10:	ldp	x28, x27, [sp, #16]
    fc14:	ldp	x29, x30, [sp], #96
    fc18:	b	a580 <funlockfile@plt>
    fc1c:	mov	x24, xzr
    fc20:	tst	w20, #0x3
    fc24:	stur	x24, [x29, #-96]
    fc28:	stur	x21, [x29, #-112]
    fc2c:	b.eq	10b60 <argp_help@@Base+0x1610>  // b.none
    fc30:	ldur	x8, [x29, #-80]
    fc34:	ldr	x0, [x8, #16]
    fc38:	ldr	x1, [x8, #32]
    fc3c:	bl	11784 <argp_failure@@Base+0x808>
    fc40:	add	x8, x0, #0xf
    fc44:	and	x8, x8, #0xfffffffffffffff0
    fc48:	mov	x9, sp
    fc4c:	sub	x19, x9, x8
    fc50:	mov	x2, x0
    fc54:	mov	sp, x19
    fc58:	mov	x0, x19
    fc5c:	mov	w1, wzr
    fc60:	bl	a640 <memset@plt>
    fc64:	adrp	x24, 32000 <vasnprintf@@Base+0x1474>
    fc68:	adrp	x26, 32000 <vasnprintf@@Base+0x1474>
    fc6c:	adrp	x27, 32000 <vasnprintf@@Base+0x1474>
    fc70:	add	x24, x24, #0x1db
    fc74:	adrp	x21, 46000 <base_len@@Base+0x30a14>
    fc78:	add	x26, x26, #0x197
    fc7c:	add	x27, x27, #0x1e2
    fc80:	b	fc9c <argp_help@@Base+0x74c>
    fc84:	add	x9, x8, #0x1
    fc88:	str	x9, [x23, #56]
    fc8c:	mov	w9, #0xa                   	// #10
    fc90:	strb	w9, [x8]
    fc94:	mov	x24, x27
    fc98:	cbz	w22, fe44 <argp_help@@Base+0x8f4>
    fc9c:	ldp	x9, x8, [x23, #48]
    fca0:	ldr	x10, [x23, #32]
    fca4:	ldrsw	x22, [x21, #1692]
    fca8:	sub	x8, x8, x9
    fcac:	cmp	x8, x10
    fcb0:	b.ls	fcbc <argp_help@@Base+0x76c>  // b.plast
    fcb4:	mov	x0, x23
    fcb8:	bl	a480 <_argp_fmtstream_update@plt>
    fcbc:	ldr	x25, [x23, #24]
    fcc0:	mov	w2, #0x5                   	// #5
    fcc4:	mov	x0, x26
    fcc8:	mov	x1, x24
    fccc:	str	x22, [x23, #24]
    fcd0:	stur	x19, [x29, #-48]
    fcd4:	bl	ac90 <dcgettext@plt>
    fcd8:	ldur	x3, [x29, #-88]
    fcdc:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    fce0:	mov	x2, x0
    fce4:	mov	x0, x23
    fce8:	add	x1, x1, #0x1d5
    fcec:	bl	a840 <argp_fmtstream_printf@plt>
    fcf0:	ldp	x9, x8, [x23, #48]
    fcf4:	ldr	x10, [x23, #32]
    fcf8:	ldrsw	x22, [x21, #1692]
    fcfc:	sub	x8, x8, x9
    fd00:	cmp	x8, x10
    fd04:	b.ls	fd10 <argp_help@@Base+0x7c0>  // b.plast
    fd08:	mov	x0, x23
    fd0c:	bl	a480 <_argp_fmtstream_update@plt>
    fd10:	ldr	x28, [x23, #8]
    fd14:	ldur	x0, [x29, #-96]
    fd18:	str	x22, [x23, #8]
    fd1c:	tbnz	w20, #1, fd34 <argp_help@@Base+0x7e4>
    fd20:	mov	x1, x23
    fd24:	mov	w22, w20
    fd28:	bl	117ec <argp_failure@@Base+0x870>
    fd2c:	orr	w20, w20, #0x2
    fd30:	b	fd9c <argp_help@@Base+0x84c>
    fd34:	ldr	w8, [x0, #8]
    fd38:	cbz	w8, fd9c <argp_help@@Base+0x84c>
    fd3c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    fd40:	mov	w2, #0x5                   	// #5
    fd44:	mov	x0, x26
    fd48:	add	x1, x1, #0x1e9
    fd4c:	bl	ac90 <dcgettext@plt>
    fd50:	mov	x22, x0
    fd54:	bl	a290 <strlen@plt>
    fd58:	cbz	x0, fd9c <argp_help@@Base+0x84c>
    fd5c:	mov	x24, x0
    fd60:	ldp	x0, x8, [x23, #56]
    fd64:	add	x9, x0, x24
    fd68:	cmp	x9, x8
    fd6c:	b.ls	fd84 <argp_help@@Base+0x834>  // b.plast
    fd70:	mov	x0, x23
    fd74:	mov	x1, x24
    fd78:	bl	ac70 <_argp_fmtstream_ensure@plt>
    fd7c:	cbz	w0, fd9c <argp_help@@Base+0x84c>
    fd80:	ldr	x0, [x23, #56]
    fd84:	mov	x1, x22
    fd88:	mov	x2, x24
    fd8c:	bl	a210 <memcpy@plt>
    fd90:	ldr	x8, [x23, #56]
    fd94:	add	x8, x8, x24
    fd98:	str	x8, [x23, #56]
    fd9c:	ldp	x0, x1, [x29, #-80]
    fda0:	sub	x2, x29, #0x30
    fda4:	mov	w3, #0x1                   	// #1
    fda8:	mov	x4, x23
    fdac:	bl	11b80 <argp_failure@@Base+0xc04>
    fdb0:	ldp	x10, x8, [x23, #48]
    fdb4:	ldr	x9, [x23, #32]
    fdb8:	mov	w22, w0
    fdbc:	sxtw	x24, w25
    fdc0:	sub	x10, x8, x10
    fdc4:	cmp	x10, x9
    fdc8:	b.ls	fe04 <argp_help@@Base+0x8b4>  // b.plast
    fdcc:	mov	x0, x23
    fdd0:	bl	a480 <_argp_fmtstream_update@plt>
    fdd4:	ldp	x10, x8, [x23, #48]
    fdd8:	ldr	x9, [x23, #32]
    fddc:	sub	x10, x8, x10
    fde0:	str	x24, [x23, #24]
    fde4:	cmp	x10, x9
    fde8:	sxtw	x24, w28
    fdec:	b.hi	fe14 <argp_help@@Base+0x8c4>  // b.pmore
    fdf0:	ldr	x9, [x23, #64]
    fdf4:	str	x24, [x23, #8]
    fdf8:	cmp	x8, x9
    fdfc:	b.cc	fc84 <argp_help@@Base+0x734>  // b.lo, b.ul, b.last
    fe00:	b	fe2c <argp_help@@Base+0x8dc>
    fe04:	str	x24, [x23, #24]
    fe08:	cmp	x10, x9
    fe0c:	sxtw	x24, w28
    fe10:	b.ls	fdf0 <argp_help@@Base+0x8a0>  // b.plast
    fe14:	mov	x0, x23
    fe18:	bl	a480 <_argp_fmtstream_update@plt>
    fe1c:	ldp	x8, x9, [x23, #56]
    fe20:	str	x24, [x23, #8]
    fe24:	cmp	x8, x9
    fe28:	b.cc	fc84 <argp_help@@Base+0x734>  // b.lo, b.ul, b.last
    fe2c:	mov	w1, #0x1                   	// #1
    fe30:	mov	x0, x23
    fe34:	bl	ac70 <_argp_fmtstream_ensure@plt>
    fe38:	cbz	w0, fc94 <argp_help@@Base+0x744>
    fe3c:	ldr	x8, [x23, #56]
    fe40:	b	fc84 <argp_help@@Base+0x734>
    fe44:	ldur	x21, [x29, #-112]
    fe48:	ldur	x22, [x29, #-72]
    fe4c:	ldur	x24, [x29, #-96]
    fe50:	mov	w19, #0x1                   	// #1
    fe54:	tbz	w20, #4, fe78 <argp_help@@Base+0x928>
    fe58:	ldur	x0, [x29, #-80]
    fe5c:	mov	w4, #0x1                   	// #1
    fe60:	mov	x1, x22
    fe64:	mov	w2, wzr
    fe68:	mov	w3, wzr
    fe6c:	mov	x5, x23
    fe70:	bl	11e28 <argp_failure@@Base+0xeac>
    fe74:	orr	w19, w0, w19
    fe78:	tbnz	w20, #2, fe8c <argp_help@@Base+0x93c>
    fe7c:	tbnz	w20, #3, fec0 <argp_help@@Base+0x970>
    fe80:	tbnz	w20, #5, 10c50 <argp_help@@Base+0x1700>
    fe84:	tbnz	w20, #6, 10c74 <argp_help@@Base+0x1724>
    fe88:	b	10ce0 <argp_help@@Base+0x1790>
    fe8c:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
    fe90:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
    fe94:	add	x0, x0, #0x197
    fe98:	add	x1, x1, #0x1f6
    fe9c:	mov	w2, #0x5                   	// #5
    fea0:	bl	ac90 <dcgettext@plt>
    fea4:	ldur	x2, [x29, #-88]
    fea8:	mov	x1, x0
    feac:	mov	x0, x23
    feb0:	mov	x3, x2
    feb4:	bl	a840 <argp_fmtstream_printf@plt>
    feb8:	mov	w19, #0x1                   	// #1
    febc:	tbz	w20, #3, fe80 <argp_help@@Base+0x930>
    fec0:	ldr	w26, [x24, #8]
    fec4:	cbz	w26, 10b04 <argp_help@@Base+0x15b4>
    fec8:	stur	w20, [x29, #-116]
    fecc:	cbz	w19, ff04 <argp_help@@Base+0x9b4>
    fed0:	ldp	x8, x9, [x23, #56]
    fed4:	cmp	x8, x9
    fed8:	b.cc	fef0 <argp_help@@Base+0x9a0>  // b.lo, b.ul, b.last
    fedc:	mov	w1, #0x1                   	// #1
    fee0:	mov	x0, x23
    fee4:	bl	ac70 <_argp_fmtstream_ensure@plt>
    fee8:	cbz	w0, ff00 <argp_help@@Base+0x9b0>
    feec:	ldr	x8, [x23, #56]
    fef0:	add	x9, x8, #0x1
    fef4:	mov	w10, #0xa                   	// #10
    fef8:	str	x9, [x23, #56]
    fefc:	strb	w10, [x8]
    ff00:	ldr	w26, [x24, #8]
    ff04:	ldr	x27, [x24]
    ff08:	stp	xzr, xzr, [x29, #-64]
    ff0c:	cbz	w26, 10c38 <argp_help@@Base+0x16e8>
    ff10:	add	x24, x23, #0x38
    ff14:	b	ff28 <argp_help@@Base+0x9d8>
    ff18:	subs	w26, w26, #0x1
    ff1c:	add	x27, x27, #0x38
    ff20:	str	x19, [x23, #24]
    ff24:	b.eq	10a88 <argp_help@@Base+0x1538>  // b.none
    ff28:	ldp	x9, x8, [x23, #48]
    ff2c:	ldr	x10, [x23, #32]
    ff30:	ldr	x25, [x27]
    ff34:	ldr	x19, [x27, #16]
    ff38:	sub	x8, x8, x9
    ff3c:	cmp	x8, x10
    ff40:	b.ls	ff4c <argp_help@@Base+0x9fc>  // b.plast
    ff44:	mov	x0, x23
    ff48:	bl	a480 <_argp_fmtstream_update@plt>
    ff4c:	sub	x8, x29, #0x40
    ff50:	ldr	x10, [x23, #8]
    ff54:	str	xzr, [x23, #8]
    ff58:	ldr	x9, [x23, #24]
    ff5c:	stur	x8, [x29, #-32]
    ff60:	mov	w8, #0x1                   	// #1
    ff64:	stur	w8, [x29, #-24]
    ff68:	ldur	x8, [x29, #-72]
    ff6c:	stp	x27, x23, [x29, #-48]
    ff70:	stur	x9, [x29, #-104]
    ff74:	stur	x10, [x29, #-88]
    ff78:	stur	x8, [x29, #-16]
    ff7c:	ldrb	w8, [x25, #24]
    ff80:	tbnz	w8, #3, ffb8 <argp_help@@Base+0xa68>
    ff84:	ldr	w8, [x27, #8]
    ff88:	cbz	w8, ffb8 <argp_help@@Base+0xa68>
    ff8c:	mov	x9, x25
    ff90:	b	ffa0 <argp_help@@Base+0xa50>
    ff94:	subs	w8, w8, #0x1
    ff98:	add	x9, x9, #0x30
    ff9c:	b.eq	ffb8 <argp_help@@Base+0xa68>  // b.none
    ffa0:	ldr	x10, [x9]
    ffa4:	cbz	x10, ff94 <argp_help@@Base+0xa44>
    ffa8:	ldrb	w10, [x9, #24]
    ffac:	tbnz	w10, #1, ff94 <argp_help@@Base+0xa44>
    ffb0:	mov	w20, #0x1                   	// #1
    ffb4:	b	ffbc <argp_help@@Base+0xa6c>
    ffb8:	mov	w20, wzr
    ffbc:	ldp	x9, x8, [x23, #48]
    ffc0:	ldr	x10, [x23, #32]
    ffc4:	adrp	x11, 46000 <base_len@@Base+0x30a14>
    ffc8:	ldrsw	x21, [x11, #1672]
    ffcc:	sub	x8, x8, x9
    ffd0:	cmp	x8, x10
    ffd4:	b.ls	ffe0 <argp_help@@Base+0xa90>  // b.plast
    ffd8:	mov	x0, x23
    ffdc:	bl	a480 <_argp_fmtstream_update@plt>
    ffe0:	str	x21, [x23, #24]
    ffe4:	ldr	w22, [x27, #8]
    ffe8:	cbz	w22, 10430 <argp_help@@Base+0xee0>
    ffec:	cbz	w20, 10000 <argp_help@@Base+0xab0>
    fff0:	ldur	x8, [x29, #-72]
    fff4:	cbz	x8, 10010 <argp_help@@Base+0xac0>
    fff8:	add	x20, x25, #0x18
    fffc:	b	1003c <argp_help@@Base+0xaec>
   10000:	ldur	x8, [x29, #-72]
   10004:	cbz	x8, 10018 <argp_help@@Base+0xac8>
   10008:	add	x20, x25, #0x18
   1000c:	b	10150 <argp_help@@Base+0xc00>
   10010:	add	x20, x25, #0x18
   10014:	b	10248 <argp_help@@Base+0xcf8>
   10018:	add	x20, x25, #0x18
   1001c:	b	10358 <argp_help@@Base+0xe08>
   10020:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10024:	add	x1, x1, #0x474
   10028:	bl	a840 <argp_fmtstream_printf@plt>
   1002c:	add	x19, x19, #0x1
   10030:	subs	w22, w22, #0x1
   10034:	add	x20, x20, #0x30
   10038:	b.eq	10430 <argp_help@@Base+0xee0>  // b.none
   1003c:	ldr	w21, [x20]
   10040:	tbnz	w21, #3, 10030 <argp_help@@Base+0xae0>
   10044:	ldur	w28, [x20, #-16]
   10048:	sub	w8, w28, #0x1
   1004c:	cmp	w8, #0xfe
   10050:	b.hi	10030 <argp_help@@Base+0xae0>  // b.pmore
   10054:	bl	a910 <__ctype_b_loc@plt>
   10058:	ldr	x8, [x0]
   1005c:	ldrh	w8, [x8, x28, lsl #1]
   10060:	tbz	w8, #14, 10030 <argp_help@@Base+0xae0>
   10064:	ldrb	w8, [x19]
   10068:	cmp	w28, w8
   1006c:	b.ne	10030 <argp_help@@Base+0xae0>  // b.any
   10070:	tbnz	w21, #1, 1002c <argp_help@@Base+0xadc>
   10074:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10078:	ldr	w0, [x8, #1672]
   1007c:	sub	x1, x29, #0x30
   10080:	bl	1266c <argp_failure@@Base+0x16f0>
   10084:	ldp	x8, x9, [x23, #56]
   10088:	cmp	x8, x9
   1008c:	b.cc	100a4 <argp_help@@Base+0xb54>  // b.lo, b.ul, b.last
   10090:	mov	w1, #0x1                   	// #1
   10094:	mov	x0, x23
   10098:	bl	ac70 <_argp_fmtstream_ensure@plt>
   1009c:	cbz	w0, 100b4 <argp_help@@Base+0xb64>
   100a0:	ldr	x8, [x24]
   100a4:	add	x9, x8, #0x1
   100a8:	str	x9, [x24]
   100ac:	mov	w9, #0x2d                  	// #45
   100b0:	strb	w9, [x8]
   100b4:	ldp	x8, x9, [x23, #56]
   100b8:	ldrb	w21, [x19]
   100bc:	cmp	x8, x9
   100c0:	b.cc	100d8 <argp_help@@Base+0xb88>  // b.lo, b.ul, b.last
   100c4:	mov	w1, #0x1                   	// #1
   100c8:	mov	x0, x23
   100cc:	bl	ac70 <_argp_fmtstream_ensure@plt>
   100d0:	cbz	w0, 100e4 <argp_help@@Base+0xb94>
   100d4:	ldr	x8, [x24]
   100d8:	add	x9, x8, #0x1
   100dc:	str	x9, [x24]
   100e0:	strb	w21, [x8]
   100e4:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   100e8:	ldr	w8, [x8, #1664]
   100ec:	ldr	x1, [x25, #16]
   100f0:	cbz	w8, 10124 <argp_help@@Base+0xbd4>
   100f4:	cbz	x1, 1002c <argp_help@@Base+0xadc>
   100f8:	ldr	x8, [x27, #40]
   100fc:	ldr	w21, [x25, #24]
   10100:	mov	w2, #0x5                   	// #5
   10104:	ldr	x0, [x8, #48]
   10108:	bl	ac90 <dcgettext@plt>
   1010c:	mov	x2, x0
   10110:	mov	x0, x23
   10114:	tbnz	w21, #0, 10020 <argp_help@@Base+0xad0>
   10118:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1011c:	add	x1, x1, #0x1b7
   10120:	b	10028 <argp_help@@Base+0xad8>
   10124:	cbz	x1, 1002c <argp_help@@Base+0xadc>
   10128:	mov	w8, #0x1                   	// #1
   1012c:	stur	w8, [x29, #-52]
   10130:	b	1002c <argp_help@@Base+0xadc>
   10134:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10138:	add	x1, x1, #0x1b7
   1013c:	bl	a840 <argp_fmtstream_printf@plt>
   10140:	add	x19, x19, #0x1
   10144:	subs	w22, w22, #0x1
   10148:	add	x20, x20, #0x30
   1014c:	b.eq	10430 <argp_help@@Base+0xee0>  // b.none
   10150:	ldr	w21, [x20]
   10154:	tbnz	w21, #3, 10144 <argp_help@@Base+0xbf4>
   10158:	ldur	w28, [x20, #-16]
   1015c:	sub	w8, w28, #0x1
   10160:	cmp	w8, #0xfe
   10164:	b.hi	10144 <argp_help@@Base+0xbf4>  // b.pmore
   10168:	bl	a910 <__ctype_b_loc@plt>
   1016c:	ldr	x8, [x0]
   10170:	ldrh	w8, [x8, x28, lsl #1]
   10174:	tbz	w8, #14, 10144 <argp_help@@Base+0xbf4>
   10178:	ldrb	w8, [x19]
   1017c:	cmp	w28, w8
   10180:	b.ne	10144 <argp_help@@Base+0xbf4>  // b.any
   10184:	tbnz	w21, #1, 10140 <argp_help@@Base+0xbf0>
   10188:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   1018c:	ldr	w0, [x8, #1672]
   10190:	sub	x1, x29, #0x30
   10194:	bl	1266c <argp_failure@@Base+0x16f0>
   10198:	ldp	x8, x9, [x23, #56]
   1019c:	cmp	x8, x9
   101a0:	b.cc	101b8 <argp_help@@Base+0xc68>  // b.lo, b.ul, b.last
   101a4:	mov	w1, #0x1                   	// #1
   101a8:	mov	x0, x23
   101ac:	bl	ac70 <_argp_fmtstream_ensure@plt>
   101b0:	cbz	w0, 101c8 <argp_help@@Base+0xc78>
   101b4:	ldr	x8, [x24]
   101b8:	add	x9, x8, #0x1
   101bc:	str	x9, [x24]
   101c0:	mov	w9, #0x2d                  	// #45
   101c4:	strb	w9, [x8]
   101c8:	ldp	x8, x9, [x23, #56]
   101cc:	ldrb	w21, [x19]
   101d0:	cmp	x8, x9
   101d4:	b.cc	101ec <argp_help@@Base+0xc9c>  // b.lo, b.ul, b.last
   101d8:	mov	w1, #0x1                   	// #1
   101dc:	mov	x0, x23
   101e0:	bl	ac70 <_argp_fmtstream_ensure@plt>
   101e4:	cbz	w0, 101f8 <argp_help@@Base+0xca8>
   101e8:	ldr	x8, [x24]
   101ec:	add	x9, x8, #0x1
   101f0:	str	x9, [x24]
   101f4:	strb	w21, [x8]
   101f8:	ldr	x1, [x25, #16]
   101fc:	cbz	x1, 10140 <argp_help@@Base+0xbf0>
   10200:	ldr	x8, [x27, #40]
   10204:	ldr	w21, [x25, #24]
   10208:	mov	w2, #0x5                   	// #5
   1020c:	ldr	x0, [x8, #48]
   10210:	bl	ac90 <dcgettext@plt>
   10214:	mov	x2, x0
   10218:	mov	x0, x23
   1021c:	tbz	w21, #0, 10134 <argp_help@@Base+0xbe4>
   10220:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10224:	add	x1, x1, #0x474
   10228:	b	1013c <argp_help@@Base+0xbec>
   1022c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10230:	add	x1, x1, #0x474
   10234:	bl	a840 <argp_fmtstream_printf@plt>
   10238:	add	x19, x19, #0x1
   1023c:	subs	w22, w22, #0x1
   10240:	add	x20, x20, #0x30
   10244:	b.eq	10430 <argp_help@@Base+0xee0>  // b.none
   10248:	ldr	w21, [x20]
   1024c:	tbnz	w21, #3, 1023c <argp_help@@Base+0xcec>
   10250:	ldur	w28, [x20, #-16]
   10254:	sub	w8, w28, #0x1
   10258:	cmp	w8, #0xfe
   1025c:	b.hi	1023c <argp_help@@Base+0xcec>  // b.pmore
   10260:	bl	a910 <__ctype_b_loc@plt>
   10264:	ldr	x8, [x0]
   10268:	ldrh	w8, [x8, x28, lsl #1]
   1026c:	tbz	w8, #14, 1023c <argp_help@@Base+0xcec>
   10270:	ldrb	w8, [x19]
   10274:	cmp	w28, w8
   10278:	b.ne	1023c <argp_help@@Base+0xcec>  // b.any
   1027c:	tbnz	w21, #1, 10238 <argp_help@@Base+0xce8>
   10280:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10284:	ldr	w0, [x8, #1672]
   10288:	sub	x1, x29, #0x30
   1028c:	bl	1266c <argp_failure@@Base+0x16f0>
   10290:	ldp	x8, x9, [x23, #56]
   10294:	cmp	x8, x9
   10298:	b.cc	102b0 <argp_help@@Base+0xd60>  // b.lo, b.ul, b.last
   1029c:	mov	w1, #0x1                   	// #1
   102a0:	mov	x0, x23
   102a4:	bl	ac70 <_argp_fmtstream_ensure@plt>
   102a8:	cbz	w0, 102c0 <argp_help@@Base+0xd70>
   102ac:	ldr	x8, [x24]
   102b0:	add	x9, x8, #0x1
   102b4:	str	x9, [x24]
   102b8:	mov	w9, #0x2d                  	// #45
   102bc:	strb	w9, [x8]
   102c0:	ldp	x8, x9, [x23, #56]
   102c4:	ldrb	w21, [x19]
   102c8:	cmp	x8, x9
   102cc:	b.cc	102e4 <argp_help@@Base+0xd94>  // b.lo, b.ul, b.last
   102d0:	mov	w1, #0x1                   	// #1
   102d4:	mov	x0, x23
   102d8:	bl	ac70 <_argp_fmtstream_ensure@plt>
   102dc:	cbz	w0, 102f0 <argp_help@@Base+0xda0>
   102e0:	ldr	x8, [x24]
   102e4:	add	x9, x8, #0x1
   102e8:	str	x9, [x24]
   102ec:	strb	w21, [x8]
   102f0:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   102f4:	ldr	w8, [x8, #1664]
   102f8:	ldr	x1, [x25, #16]
   102fc:	cbz	w8, 1032c <argp_help@@Base+0xddc>
   10300:	cbz	x1, 10238 <argp_help@@Base+0xce8>
   10304:	ldr	w21, [x25, #24]
   10308:	mov	w2, #0x5                   	// #5
   1030c:	mov	x0, xzr
   10310:	bl	ac90 <dcgettext@plt>
   10314:	mov	x2, x0
   10318:	mov	x0, x23
   1031c:	tbnz	w21, #0, 1022c <argp_help@@Base+0xcdc>
   10320:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10324:	add	x1, x1, #0x1b7
   10328:	b	10234 <argp_help@@Base+0xce4>
   1032c:	cbz	x1, 10238 <argp_help@@Base+0xce8>
   10330:	mov	w8, #0x1                   	// #1
   10334:	stur	w8, [x29, #-52]
   10338:	b	10238 <argp_help@@Base+0xce8>
   1033c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10340:	add	x1, x1, #0x1b7
   10344:	bl	a840 <argp_fmtstream_printf@plt>
   10348:	add	x19, x19, #0x1
   1034c:	subs	w22, w22, #0x1
   10350:	add	x20, x20, #0x30
   10354:	b.eq	10430 <argp_help@@Base+0xee0>  // b.none
   10358:	ldr	w21, [x20]
   1035c:	tbnz	w21, #3, 1034c <argp_help@@Base+0xdfc>
   10360:	ldur	w28, [x20, #-16]
   10364:	sub	w8, w28, #0x1
   10368:	cmp	w8, #0xfe
   1036c:	b.hi	1034c <argp_help@@Base+0xdfc>  // b.pmore
   10370:	bl	a910 <__ctype_b_loc@plt>
   10374:	ldr	x8, [x0]
   10378:	ldrh	w8, [x8, x28, lsl #1]
   1037c:	tbz	w8, #14, 1034c <argp_help@@Base+0xdfc>
   10380:	ldrb	w8, [x19]
   10384:	cmp	w28, w8
   10388:	b.ne	1034c <argp_help@@Base+0xdfc>  // b.any
   1038c:	tbnz	w21, #1, 10348 <argp_help@@Base+0xdf8>
   10390:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10394:	ldr	w0, [x8, #1672]
   10398:	sub	x1, x29, #0x30
   1039c:	bl	1266c <argp_failure@@Base+0x16f0>
   103a0:	ldp	x8, x9, [x23, #56]
   103a4:	cmp	x8, x9
   103a8:	b.cc	103c0 <argp_help@@Base+0xe70>  // b.lo, b.ul, b.last
   103ac:	mov	w1, #0x1                   	// #1
   103b0:	mov	x0, x23
   103b4:	bl	ac70 <_argp_fmtstream_ensure@plt>
   103b8:	cbz	w0, 103d0 <argp_help@@Base+0xe80>
   103bc:	ldr	x8, [x24]
   103c0:	add	x9, x8, #0x1
   103c4:	str	x9, [x24]
   103c8:	mov	w9, #0x2d                  	// #45
   103cc:	strb	w9, [x8]
   103d0:	ldp	x8, x9, [x23, #56]
   103d4:	ldrb	w21, [x19]
   103d8:	cmp	x8, x9
   103dc:	b.cc	103f4 <argp_help@@Base+0xea4>  // b.lo, b.ul, b.last
   103e0:	mov	w1, #0x1                   	// #1
   103e4:	mov	x0, x23
   103e8:	bl	ac70 <_argp_fmtstream_ensure@plt>
   103ec:	cbz	w0, 10400 <argp_help@@Base+0xeb0>
   103f0:	ldr	x8, [x24]
   103f4:	add	x9, x8, #0x1
   103f8:	str	x9, [x24]
   103fc:	strb	w21, [x8]
   10400:	ldr	x1, [x25, #16]
   10404:	cbz	x1, 10348 <argp_help@@Base+0xdf8>
   10408:	ldr	w21, [x25, #24]
   1040c:	mov	w2, #0x5                   	// #5
   10410:	mov	x0, xzr
   10414:	bl	ac90 <dcgettext@plt>
   10418:	mov	x2, x0
   1041c:	mov	x0, x23
   10420:	tbz	w21, #0, 1033c <argp_help@@Base+0xdec>
   10424:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10428:	add	x1, x1, #0x474
   1042c:	b	10344 <argp_help@@Base+0xdf4>
   10430:	ldrb	w8, [x25, #24]
   10434:	tbnz	w8, #3, 104f8 <argp_help@@Base+0xfa8>
   10438:	ldp	x9, x8, [x23, #48]
   1043c:	ldr	x10, [x23, #32]
   10440:	adrp	x11, 46000 <base_len@@Base+0x30a14>
   10444:	ldrsw	x19, [x11, #1676]
   10448:	sub	x8, x8, x9
   1044c:	cmp	x8, x10
   10450:	b.ls	1045c <argp_help@@Base+0xf0c>  // b.plast
   10454:	mov	x0, x23
   10458:	bl	a480 <_argp_fmtstream_update@plt>
   1045c:	str	x19, [x23, #24]
   10460:	ldr	w19, [x27, #8]
   10464:	cbz	w19, 106e0 <argp_help@@Base+0x1190>
   10468:	ldur	x8, [x29, #-72]
   1046c:	cbz	x8, 105c8 <argp_help@@Base+0x1078>
   10470:	mov	x20, x25
   10474:	b	10490 <argp_help@@Base+0xf40>
   10478:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1047c:	add	x1, x1, #0xce
   10480:	bl	a840 <argp_fmtstream_printf@plt>
   10484:	subs	w19, w19, #0x1
   10488:	add	x20, x20, #0x30
   1048c:	b.eq	106e0 <argp_help@@Base+0x1190>  // b.none
   10490:	ldr	x8, [x20]
   10494:	cbz	x8, 10484 <argp_help@@Base+0xf34>
   10498:	ldrb	w8, [x20, #24]
   1049c:	tbnz	w8, #1, 10484 <argp_help@@Base+0xf34>
   104a0:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   104a4:	ldr	w0, [x8, #1676]
   104a8:	sub	x1, x29, #0x30
   104ac:	bl	1266c <argp_failure@@Base+0x16f0>
   104b0:	ldr	x2, [x20]
   104b4:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   104b8:	mov	x0, x23
   104bc:	add	x1, x1, #0x479
   104c0:	bl	a840 <argp_fmtstream_printf@plt>
   104c4:	ldr	x1, [x25, #16]
   104c8:	cbz	x1, 10484 <argp_help@@Base+0xf34>
   104cc:	ldr	x8, [x27, #40]
   104d0:	ldr	w21, [x25, #24]
   104d4:	mov	w2, #0x5                   	// #5
   104d8:	ldr	x0, [x8, #48]
   104dc:	bl	ac90 <dcgettext@plt>
   104e0:	mov	x2, x0
   104e4:	mov	x0, x23
   104e8:	tbz	w21, #0, 10478 <argp_help@@Base+0xf28>
   104ec:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   104f0:	add	x1, x1, #0x47e
   104f4:	b	10480 <argp_help@@Base+0xf30>
   104f8:	ldp	x9, x8, [x23, #48]
   104fc:	ldr	x10, [x23, #32]
   10500:	adrp	x11, 46000 <base_len@@Base+0x30a14>
   10504:	ldrsw	x19, [x11, #1680]
   10508:	sub	x8, x8, x9
   1050c:	cmp	x8, x10
   10510:	b.ls	1051c <argp_help@@Base+0xfcc>  // b.plast
   10514:	mov	x0, x23
   10518:	bl	a480 <_argp_fmtstream_update@plt>
   1051c:	str	x19, [x23, #24]
   10520:	ldr	w20, [x27, #8]
   10524:	cbz	w20, 106e0 <argp_help@@Base+0x1190>
   10528:	ldur	x8, [x29, #-72]
   1052c:	cbz	x8, 1064c <argp_help@@Base+0x10fc>
   10530:	mov	x21, x25
   10534:	b	1055c <argp_help@@Base+0x100c>
   10538:	mov	x1, x19
   1053c:	mov	x2, x22
   10540:	bl	a210 <memcpy@plt>
   10544:	ldr	x8, [x24]
   10548:	add	x8, x8, x22
   1054c:	str	x8, [x24]
   10550:	subs	w20, w20, #0x1
   10554:	add	x21, x21, #0x30
   10558:	b.eq	106e0 <argp_help@@Base+0x1190>  // b.none
   1055c:	ldr	x8, [x21]
   10560:	cbz	x8, 10550 <argp_help@@Base+0x1000>
   10564:	ldrb	w8, [x21, #24]
   10568:	tbnz	w8, #1, 10550 <argp_help@@Base+0x1000>
   1056c:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10570:	ldr	w0, [x8, #1680]
   10574:	sub	x1, x29, #0x30
   10578:	bl	1266c <argp_failure@@Base+0x16f0>
   1057c:	ldr	x8, [x27, #40]
   10580:	ldr	x1, [x21]
   10584:	mov	w2, #0x5                   	// #5
   10588:	ldr	x0, [x8, #48]
   1058c:	bl	ac90 <dcgettext@plt>
   10590:	mov	x19, x0
   10594:	bl	a290 <strlen@plt>
   10598:	cbz	x0, 10550 <argp_help@@Base+0x1000>
   1059c:	mov	x22, x0
   105a0:	ldp	x0, x8, [x23, #56]
   105a4:	add	x9, x0, x22
   105a8:	cmp	x9, x8
   105ac:	b.ls	10538 <argp_help@@Base+0xfe8>  // b.plast
   105b0:	mov	x0, x23
   105b4:	mov	x1, x22
   105b8:	bl	ac70 <_argp_fmtstream_ensure@plt>
   105bc:	cbz	w0, 10550 <argp_help@@Base+0x1000>
   105c0:	ldr	x0, [x24]
   105c4:	b	10538 <argp_help@@Base+0xfe8>
   105c8:	mov	x20, x25
   105cc:	b	105e8 <argp_help@@Base+0x1098>
   105d0:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   105d4:	add	x1, x1, #0xce
   105d8:	bl	a840 <argp_fmtstream_printf@plt>
   105dc:	subs	w19, w19, #0x1
   105e0:	add	x20, x20, #0x30
   105e4:	b.eq	106e0 <argp_help@@Base+0x1190>  // b.none
   105e8:	ldr	x8, [x20]
   105ec:	cbz	x8, 105dc <argp_help@@Base+0x108c>
   105f0:	ldrb	w8, [x20, #24]
   105f4:	tbnz	w8, #1, 105dc <argp_help@@Base+0x108c>
   105f8:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   105fc:	ldr	w0, [x8, #1676]
   10600:	sub	x1, x29, #0x30
   10604:	bl	1266c <argp_failure@@Base+0x16f0>
   10608:	ldr	x2, [x20]
   1060c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10610:	mov	x0, x23
   10614:	add	x1, x1, #0x479
   10618:	bl	a840 <argp_fmtstream_printf@plt>
   1061c:	ldr	x1, [x25, #16]
   10620:	cbz	x1, 105dc <argp_help@@Base+0x108c>
   10624:	ldr	w21, [x25, #24]
   10628:	mov	w2, #0x5                   	// #5
   1062c:	mov	x0, xzr
   10630:	bl	ac90 <dcgettext@plt>
   10634:	mov	x2, x0
   10638:	mov	x0, x23
   1063c:	tbz	w21, #0, 105d0 <argp_help@@Base+0x1080>
   10640:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10644:	add	x1, x1, #0x47e
   10648:	b	105d8 <argp_help@@Base+0x1088>
   1064c:	mov	x21, x25
   10650:	b	1067c <argp_help@@Base+0x112c>
   10654:	ldr	x0, [x24]
   10658:	mov	x1, x19
   1065c:	mov	x2, x22
   10660:	bl	a210 <memcpy@plt>
   10664:	ldr	x8, [x24]
   10668:	add	x8, x8, x22
   1066c:	str	x8, [x24]
   10670:	subs	w20, w20, #0x1
   10674:	add	x21, x21, #0x30
   10678:	b.eq	106e0 <argp_help@@Base+0x1190>  // b.none
   1067c:	ldr	x8, [x21]
   10680:	cbz	x8, 10670 <argp_help@@Base+0x1120>
   10684:	ldrb	w8, [x21, #24]
   10688:	tbnz	w8, #1, 10670 <argp_help@@Base+0x1120>
   1068c:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10690:	ldr	w0, [x8, #1680]
   10694:	sub	x1, x29, #0x30
   10698:	bl	1266c <argp_failure@@Base+0x16f0>
   1069c:	ldr	x1, [x21]
   106a0:	mov	w2, #0x5                   	// #5
   106a4:	mov	x0, xzr
   106a8:	bl	ac90 <dcgettext@plt>
   106ac:	mov	x19, x0
   106b0:	bl	a290 <strlen@plt>
   106b4:	cbz	x0, 10670 <argp_help@@Base+0x1120>
   106b8:	mov	x22, x0
   106bc:	ldp	x0, x8, [x23, #56]
   106c0:	add	x9, x0, x22
   106c4:	cmp	x9, x8
   106c8:	b.ls	10658 <argp_help@@Base+0x1108>  // b.plast
   106cc:	mov	x0, x23
   106d0:	mov	x1, x22
   106d4:	bl	ac70 <_argp_fmtstream_ensure@plt>
   106d8:	cbnz	w0, 10654 <argp_help@@Base+0x1104>
   106dc:	b	10670 <argp_help@@Base+0x1120>
   106e0:	ldp	x9, x8, [x23, #48]
   106e4:	ldr	x10, [x23, #32]
   106e8:	sub	x8, x8, x9
   106ec:	cmp	x8, x10
   106f0:	b.ls	106fc <argp_help@@Base+0x11ac>  // b.plast
   106f4:	mov	x0, x23
   106f8:	bl	a480 <_argp_fmtstream_update@plt>
   106fc:	str	xzr, [x23, #8]
   10700:	ldur	w8, [x29, #-24]
   10704:	cbz	w8, 1074c <argp_help@@Base+0x11fc>
   10708:	ldrb	w8, [x25, #24]
   1070c:	tbnz	w8, #3, 10730 <argp_help@@Base+0x11e0>
   10710:	ldr	w19, [x25, #8]
   10714:	sub	w8, w19, #0x1
   10718:	cmp	w8, #0xfe
   1071c:	b.hi	10730 <argp_help@@Base+0x11e0>  // b.pmore
   10720:	bl	a910 <__ctype_b_loc@plt>
   10724:	ldr	x8, [x0]
   10728:	ldrh	w8, [x8, x19, lsl #1]
   1072c:	tbnz	w8, #14, 10a38 <argp_help@@Base+0x14e8>
   10730:	ldr	x8, [x25]
   10734:	cbnz	x8, 10a38 <argp_help@@Base+0x14e8>
   10738:	ldr	x0, [x25, #32]
   1073c:	ldr	x1, [x27, #40]
   10740:	sub	x2, x29, #0x30
   10744:	bl	12840 <argp_failure@@Base+0x18c4>
   10748:	b	10a34 <argp_help@@Base+0x14e4>
   1074c:	ldr	x1, [x25, #32]
   10750:	cbz	x1, 10768 <argp_help@@Base+0x1218>
   10754:	ldur	x8, [x29, #-72]
   10758:	cbz	x8, 1077c <argp_help@@Base+0x122c>
   1075c:	ldr	x8, [x27, #40]
   10760:	ldr	x0, [x8, #48]
   10764:	b	10780 <argp_help@@Base+0x1230>
   10768:	mov	x28, xzr
   1076c:	ldr	x22, [x27, #40]
   10770:	mov	x19, x28
   10774:	cbnz	x22, 10798 <argp_help@@Base+0x1248>
   10778:	b	107cc <argp_help@@Base+0x127c>
   1077c:	mov	x0, xzr
   10780:	mov	w2, #0x5                   	// #5
   10784:	bl	ac90 <dcgettext@plt>
   10788:	mov	x28, x0
   1078c:	ldr	x22, [x27, #40]
   10790:	mov	x19, x28
   10794:	cbz	x22, 107cc <argp_help@@Base+0x127c>
   10798:	ldr	x8, [x22, #40]
   1079c:	mov	x19, x28
   107a0:	cbz	x8, 107cc <argp_help@@Base+0x127c>
   107a4:	ldur	x1, [x29, #-72]
   107a8:	ldr	w19, [x25, #8]
   107ac:	mov	x0, x22
   107b0:	bl	ab50 <_argp_input@plt>
   107b4:	ldr	x8, [x22, #40]
   107b8:	mov	x2, x0
   107bc:	mov	w0, w19
   107c0:	mov	x1, x28
   107c4:	blr	x8
   107c8:	mov	x19, x0
   107cc:	cbz	x19, 109e0 <argp_help@@Base+0x1490>
   107d0:	ldrb	w8, [x19]
   107d4:	cbz	w8, 109d0 <argp_help@@Base+0x1480>
   107d8:	ldp	x10, x9, [x23, #48]
   107dc:	ldr	x8, [x23, #32]
   107e0:	sub	x9, x9, x10
   107e4:	cmp	x9, x8
   107e8:	b.ls	10800 <argp_help@@Base+0x12b0>  // b.plast
   107ec:	mov	x0, x23
   107f0:	bl	a480 <_argp_fmtstream_update@plt>
   107f4:	ldp	x10, x9, [x23, #48]
   107f8:	ldr	x8, [x23, #32]
   107fc:	sub	x9, x9, x10
   10800:	adrp	x11, 46000 <base_len@@Base+0x30a14>
   10804:	ldr	x10, [x23, #40]
   10808:	ldr	w20, [x11, #1684]
   1080c:	cmp	x10, #0x0
   10810:	sxtw	x25, w20
   10814:	csel	w21, w10, wzr, gt
   10818:	cmp	x9, x8
   1081c:	mov	x22, x25
   10820:	b.ls	10894 <argp_help@@Base+0x1344>  // b.plast
   10824:	mov	x0, x23
   10828:	bl	a480 <_argp_fmtstream_update@plt>
   1082c:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10830:	ldr	w20, [x8, #1684]
   10834:	ldp	x10, x9, [x23, #48]
   10838:	ldr	x8, [x23, #32]
   1083c:	sxtw	x22, w20
   10840:	sub	x9, x9, x10
   10844:	cmp	x9, x8
   10848:	str	x25, [x23, #8]
   1084c:	b.hi	108a0 <argp_help@@Base+0x1350>  // b.pmore
   10850:	add	w8, w20, #0x3
   10854:	cmp	w8, w21
   10858:	str	x22, [x23, #24]
   1085c:	b.cs	108c0 <argp_help@@Base+0x1370>  // b.hs, b.nlast
   10860:	ldp	x8, x9, [x23, #56]
   10864:	cmp	x8, x9
   10868:	b.cc	10880 <argp_help@@Base+0x1330>  // b.lo, b.ul, b.last
   1086c:	mov	w1, #0x1                   	// #1
   10870:	mov	x0, x23
   10874:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10878:	cbz	w0, 10984 <argp_help@@Base+0x1434>
   1087c:	ldr	x8, [x24]
   10880:	add	x9, x8, #0x1
   10884:	str	x9, [x24]
   10888:	mov	w9, #0xa                   	// #10
   1088c:	strb	w9, [x8]
   10890:	b	10984 <argp_help@@Base+0x1434>
   10894:	cmp	x9, x8
   10898:	str	x25, [x23, #8]
   1089c:	b.ls	10850 <argp_help@@Base+0x1300>  // b.plast
   108a0:	mov	x0, x23
   108a4:	bl	a480 <_argp_fmtstream_update@plt>
   108a8:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   108ac:	ldr	w20, [x8, #1684]
   108b0:	add	w8, w20, #0x3
   108b4:	cmp	w8, w21
   108b8:	str	x22, [x23, #24]
   108bc:	b.cc	10860 <argp_help@@Base+0x1310>  // b.lo, b.ul, b.last
   108c0:	cmp	w20, w21
   108c4:	b.ls	10944 <argp_help@@Base+0x13f4>  // b.plast
   108c8:	ldp	x9, x8, [x23, #48]
   108cc:	ldr	x10, [x23, #32]
   108d0:	sub	x8, x8, x9
   108d4:	cmp	x8, x10
   108d8:	b.ls	108e4 <argp_help@@Base+0x1394>  // b.plast
   108dc:	mov	x0, x23
   108e0:	bl	a480 <_argp_fmtstream_update@plt>
   108e4:	ldr	x8, [x23, #40]
   108e8:	cmp	x8, #0x0
   108ec:	csel	w8, w8, wzr, gt
   108f0:	sub	w8, w20, w8
   108f4:	cmp	w8, #0x1
   108f8:	b.lt	10984 <argp_help@@Base+0x1434>  // b.tstop
   108fc:	add	w20, w8, #0x1
   10900:	b	10924 <argp_help@@Base+0x13d4>
   10904:	ldr	x8, [x24]
   10908:	add	x9, x8, #0x1
   1090c:	str	x9, [x24]
   10910:	mov	w9, #0x20                  	// #32
   10914:	strb	w9, [x8]
   10918:	sub	w20, w20, #0x1
   1091c:	cmp	w20, #0x1
   10920:	b.le	10984 <argp_help@@Base+0x1434>
   10924:	ldp	x8, x9, [x23, #56]
   10928:	cmp	x8, x9
   1092c:	b.cc	10908 <argp_help@@Base+0x13b8>  // b.lo, b.ul, b.last
   10930:	mov	w1, #0x1                   	// #1
   10934:	mov	x0, x23
   10938:	bl	ac70 <_argp_fmtstream_ensure@plt>
   1093c:	cbnz	w0, 10904 <argp_help@@Base+0x13b4>
   10940:	b	10918 <argp_help@@Base+0x13c8>
   10944:	ldp	x8, x9, [x23, #56]
   10948:	add	x10, x8, #0x3
   1094c:	cmp	x10, x9
   10950:	b.ls	10968 <argp_help@@Base+0x1418>  // b.plast
   10954:	mov	w1, #0x3                   	// #3
   10958:	mov	x0, x23
   1095c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10960:	cbz	w0, 10984 <argp_help@@Base+0x1434>
   10964:	ldr	x8, [x24]
   10968:	mov	w9, #0x20                  	// #32
   1096c:	strb	w9, [x8, #2]
   10970:	mov	w9, #0x2020                	// #8224
   10974:	strh	w9, [x8]
   10978:	ldr	x8, [x24]
   1097c:	add	x8, x8, #0x3
   10980:	str	x8, [x24]
   10984:	mov	x0, x19
   10988:	bl	a290 <strlen@plt>
   1098c:	cbz	x0, 109d0 <argp_help@@Base+0x1480>
   10990:	mov	x22, x0
   10994:	ldp	x0, x8, [x23, #56]
   10998:	add	x9, x0, x22
   1099c:	cmp	x9, x8
   109a0:	b.ls	109b8 <argp_help@@Base+0x1468>  // b.plast
   109a4:	mov	x0, x23
   109a8:	mov	x1, x22
   109ac:	bl	ac70 <_argp_fmtstream_ensure@plt>
   109b0:	cbz	w0, 109d0 <argp_help@@Base+0x1480>
   109b4:	ldr	x0, [x24]
   109b8:	mov	x1, x19
   109bc:	mov	x2, x22
   109c0:	bl	a210 <memcpy@plt>
   109c4:	ldr	x8, [x24]
   109c8:	add	x8, x8, x22
   109cc:	str	x8, [x24]
   109d0:	cmp	x19, x28
   109d4:	b.eq	109e0 <argp_help@@Base+0x1490>  // b.none
   109d8:	mov	x0, x19
   109dc:	bl	a970 <free@plt>
   109e0:	ldp	x9, x8, [x23, #48]
   109e4:	ldr	x10, [x23, #32]
   109e8:	sub	x9, x8, x9
   109ec:	cmp	x9, x10
   109f0:	b.ls	10a00 <argp_help@@Base+0x14b0>  // b.plast
   109f4:	mov	x0, x23
   109f8:	bl	a480 <_argp_fmtstream_update@plt>
   109fc:	ldr	x8, [x23, #56]
   10a00:	ldr	x9, [x23, #64]
   10a04:	str	xzr, [x23, #8]
   10a08:	cmp	x8, x9
   10a0c:	b.cc	10a24 <argp_help@@Base+0x14d4>  // b.lo, b.ul, b.last
   10a10:	mov	w1, #0x1                   	// #1
   10a14:	mov	x0, x23
   10a18:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10a1c:	cbz	w0, 10a34 <argp_help@@Base+0x14e4>
   10a20:	ldr	x8, [x24]
   10a24:	add	x9, x8, #0x1
   10a28:	str	x9, [x24]
   10a2c:	mov	w9, #0xa                   	// #10
   10a30:	strb	w9, [x8]
   10a34:	stur	x27, [x29, #-64]
   10a38:	ldp	x10, x9, [x23, #48]
   10a3c:	ldr	x8, [x23, #32]
   10a40:	sub	x9, x9, x10
   10a44:	ldur	x10, [x29, #-88]
   10a48:	cmp	x9, x8
   10a4c:	sxtw	x19, w10
   10a50:	b.ls	10a68 <argp_help@@Base+0x1518>  // b.plast
   10a54:	mov	x0, x23
   10a58:	bl	a480 <_argp_fmtstream_update@plt>
   10a5c:	ldp	x10, x9, [x23, #48]
   10a60:	ldr	x8, [x23, #32]
   10a64:	sub	x9, x9, x10
   10a68:	ldur	x10, [x29, #-104]
   10a6c:	str	x19, [x23, #8]
   10a70:	cmp	x9, x8
   10a74:	sxtw	x19, w10
   10a78:	b.ls	ff18 <argp_help@@Base+0x9c8>  // b.plast
   10a7c:	mov	x0, x23
   10a80:	bl	a480 <_argp_fmtstream_update@plt>
   10a84:	b	ff18 <argp_help@@Base+0x9c8>
   10a88:	ldur	w8, [x29, #-52]
   10a8c:	cbz	w8, 10c38 <argp_help@@Base+0x16e8>
   10a90:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   10a94:	ldr	w8, [x8, #1668]
   10a98:	cbz	w8, 10c38 <argp_help@@Base+0x16e8>
   10a9c:	ldur	x20, [x29, #-72]
   10aa0:	adrp	x8, 32000 <vasnprintf@@Base+0x1474>
   10aa4:	add	x8, x8, #0x197
   10aa8:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10aac:	cmp	x20, #0x0
   10ab0:	csel	x0, xzr, x8, eq  // eq = none
   10ab4:	add	x1, x1, #0x400
   10ab8:	mov	w2, #0x5                   	// #5
   10abc:	bl	ac90 <dcgettext@plt>
   10ac0:	mov	x19, x0
   10ac4:	cbz	x20, 10b6c <argp_help@@Base+0x161c>
   10ac8:	ldr	x22, [x20]
   10acc:	cbz	x22, 10b6c <argp_help@@Base+0x161c>
   10ad0:	ldr	x8, [x22, #40]
   10ad4:	cbz	x8, 10b6c <argp_help@@Base+0x161c>
   10ad8:	mov	x0, x22
   10adc:	mov	x1, x20
   10ae0:	bl	ab50 <_argp_input@plt>
   10ae4:	ldr	x8, [x22, #40]
   10ae8:	mov	x2, x0
   10aec:	mov	w0, #0x5                   	// #5
   10af0:	movk	w0, #0x200, lsl #16
   10af4:	mov	x1, x19
   10af8:	blr	x8
   10afc:	mov	x25, x0
   10b00:	b	10b70 <argp_help@@Base+0x1620>
   10b04:	ldur	x22, [x29, #-72]
   10b08:	tbz	w20, #5, fe84 <argp_help@@Base+0x934>
   10b0c:	b	10c50 <argp_help@@Base+0x1700>
   10b10:	ldur	w20, [x29, #-116]
   10b14:	ldur	x24, [x29, #-96]
   10b18:	mov	x9, x26
   10b1c:	mov	x21, x28
   10b20:	add	x9, x9, #0x30
   10b24:	str	w8, [x9], #56
   10b28:	add	w8, w8, #0x1
   10b2c:	cmp	w19, w8
   10b30:	b.ne	10b24 <argp_help@@Base+0x15d4>  // b.any
   10b34:	adrp	x3, 12000 <argp_failure@@Base+0x1084>
   10b38:	add	x3, x3, #0x26c
   10b3c:	mov	w2, #0x38                  	// #56
   10b40:	mov	x0, x26
   10b44:	mov	x1, x19
   10b48:	bl	a460 <qsort@plt>
   10b4c:	ldur	x22, [x29, #-72]
   10b50:	tst	w20, #0x3
   10b54:	stur	x24, [x29, #-96]
   10b58:	stur	x21, [x29, #-112]
   10b5c:	b.ne	fc30 <argp_help@@Base+0x6e0>  // b.any
   10b60:	mov	w19, wzr
   10b64:	tbnz	w20, #4, fe58 <argp_help@@Base+0x908>
   10b68:	b	fe78 <argp_help@@Base+0x928>
   10b6c:	mov	x25, x19
   10b70:	cbz	x25, 10c38 <argp_help@@Base+0x16e8>
   10b74:	ldrb	w8, [x25]
   10b78:	cbz	w8, 10c28 <argp_help@@Base+0x16d8>
   10b7c:	ldp	x8, x9, [x23, #56]
   10b80:	cmp	x8, x9
   10b84:	b.cc	10b9c <argp_help@@Base+0x164c>  // b.lo, b.ul, b.last
   10b88:	mov	w1, #0x1                   	// #1
   10b8c:	mov	x0, x23
   10b90:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10b94:	cbz	w0, 10bac <argp_help@@Base+0x165c>
   10b98:	ldr	x8, [x24]
   10b9c:	add	x9, x8, #0x1
   10ba0:	mov	w10, #0xa                   	// #10
   10ba4:	str	x9, [x24]
   10ba8:	strb	w10, [x8]
   10bac:	mov	x0, x25
   10bb0:	bl	a290 <strlen@plt>
   10bb4:	cbz	x0, 10bf8 <argp_help@@Base+0x16a8>
   10bb8:	mov	x22, x0
   10bbc:	ldp	x0, x8, [x23, #56]
   10bc0:	add	x9, x0, x22
   10bc4:	cmp	x9, x8
   10bc8:	b.ls	10be0 <argp_help@@Base+0x1690>  // b.plast
   10bcc:	mov	x0, x23
   10bd0:	mov	x1, x22
   10bd4:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10bd8:	cbz	w0, 10bf8 <argp_help@@Base+0x16a8>
   10bdc:	ldr	x0, [x24]
   10be0:	mov	x1, x25
   10be4:	mov	x2, x22
   10be8:	bl	a210 <memcpy@plt>
   10bec:	ldr	x8, [x24]
   10bf0:	add	x8, x8, x22
   10bf4:	str	x8, [x24]
   10bf8:	ldp	x8, x9, [x23, #56]
   10bfc:	cmp	x8, x9
   10c00:	b.cc	10c18 <argp_help@@Base+0x16c8>  // b.lo, b.ul, b.last
   10c04:	mov	w1, #0x1                   	// #1
   10c08:	mov	x0, x23
   10c0c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10c10:	cbz	w0, 10c28 <argp_help@@Base+0x16d8>
   10c14:	ldr	x8, [x24]
   10c18:	add	x9, x8, #0x1
   10c1c:	mov	w10, #0xa                   	// #10
   10c20:	str	x9, [x24]
   10c24:	strb	w10, [x8]
   10c28:	cmp	x25, x19
   10c2c:	b.eq	10c38 <argp_help@@Base+0x16e8>  // b.none
   10c30:	mov	x0, x25
   10c34:	bl	a970 <free@plt>
   10c38:	ldur	x21, [x29, #-112]
   10c3c:	ldur	w20, [x29, #-116]
   10c40:	ldur	x22, [x29, #-72]
   10c44:	ldur	x24, [x29, #-96]
   10c48:	mov	w19, #0x1                   	// #1
   10c4c:	tbz	w20, #5, fe84 <argp_help@@Base+0x934>
   10c50:	ldur	x0, [x29, #-80]
   10c54:	mov	w2, #0x1                   	// #1
   10c58:	mov	x1, x22
   10c5c:	mov	w3, w19
   10c60:	mov	w4, wzr
   10c64:	mov	x5, x23
   10c68:	bl	11e28 <argp_failure@@Base+0xeac>
   10c6c:	orr	w19, w0, w19
   10c70:	tbz	w20, #6, 10ce0 <argp_help@@Base+0x1790>
   10c74:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
   10c78:	ldr	x20, [x20, #3968]
   10c7c:	ldr	x8, [x20]
   10c80:	cbz	x8, 10ce0 <argp_help@@Base+0x1790>
   10c84:	cbz	w19, 10cb8 <argp_help@@Base+0x1768>
   10c88:	ldp	x8, x9, [x23, #56]
   10c8c:	cmp	x8, x9
   10c90:	b.cc	10ca8 <argp_help@@Base+0x1758>  // b.lo, b.ul, b.last
   10c94:	mov	w1, #0x1                   	// #1
   10c98:	mov	x0, x23
   10c9c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   10ca0:	cbz	w0, 10cb8 <argp_help@@Base+0x1768>
   10ca4:	ldr	x8, [x23, #56]
   10ca8:	add	x9, x8, #0x1
   10cac:	mov	w10, #0xa                   	// #10
   10cb0:	str	x9, [x23, #56]
   10cb4:	strb	w10, [x8]
   10cb8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   10cbc:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   10cc0:	add	x0, x0, #0x197
   10cc4:	add	x1, x1, #0x22d
   10cc8:	mov	w2, #0x5                   	// #5
   10ccc:	bl	ac90 <dcgettext@plt>
   10cd0:	ldr	x2, [x20]
   10cd4:	mov	x1, x0
   10cd8:	mov	x0, x23
   10cdc:	bl	a840 <argp_fmtstream_printf@plt>
   10ce0:	mov	x0, x21
   10ce4:	bl	a580 <funlockfile@plt>
   10ce8:	cbz	x24, 10d24 <argp_help@@Base+0x17d4>
   10cec:	ldr	x0, [x24, #24]
   10cf0:	cbz	x0, 10d04 <argp_help@@Base+0x17b4>
   10cf4:	ldr	x19, [x0, #40]
   10cf8:	bl	a970 <free@plt>
   10cfc:	mov	x0, x19
   10d00:	cbnz	x19, 10cf4 <argp_help@@Base+0x17a4>
   10d04:	ldr	w8, [x24, #8]
   10d08:	cbz	w8, 10d1c <argp_help@@Base+0x17cc>
   10d0c:	ldr	x0, [x24]
   10d10:	bl	a970 <free@plt>
   10d14:	ldr	x0, [x24, #16]
   10d18:	bl	a970 <free@plt>
   10d1c:	mov	x0, x24
   10d20:	bl	a970 <free@plt>
   10d24:	mov	x0, x23
   10d28:	bl	acc0 <argp_fmtstream_free@plt>
   10d2c:	mov	sp, x29
   10d30:	ldp	x20, x19, [sp, #80]
   10d34:	ldp	x22, x21, [sp, #64]
   10d38:	ldp	x24, x23, [sp, #48]
   10d3c:	ldp	x26, x25, [sp, #32]
   10d40:	ldp	x28, x27, [sp, #16]
   10d44:	ldp	x29, x30, [sp], #96
   10d48:	ret
   10d4c:	adrp	x19, 32000 <vasnprintf@@Base+0x1474>
   10d50:	add	x19, x19, #0x4f8
   10d54:	b	fa54 <argp_help@@Base+0x504>

0000000000010d58 <argp_state_help@@Base>:
   10d58:	stp	x29, x30, [sp, #-32]!
   10d5c:	stp	x20, x19, [sp, #16]
   10d60:	mov	w19, w2
   10d64:	mov	x2, x1
   10d68:	mov	x29, sp
   10d6c:	cbz	x0, 10dac <argp_state_help@@Base+0x54>
   10d70:	cbz	x2, 10dd4 <argp_state_help@@Base+0x7c>
   10d74:	ldr	w8, [x0, #28]
   10d78:	mov	x20, x0
   10d7c:	tbnz	w8, #1, 10dd4 <argp_state_help@@Base+0x7c>
   10d80:	ldr	x0, [x20]
   10d84:	ldr	x4, [x20, #64]
   10d88:	lsl	w8, w8, #1
   10d8c:	and	w8, w8, #0x80
   10d90:	orr	w19, w8, w19
   10d94:	mov	x1, x20
   10d98:	mov	w3, w19
   10d9c:	bl	f564 <argp_help@@Base+0x14>
   10da0:	ldrb	w8, [x20, #28]
   10da4:	tbz	w8, #5, 10dcc <argp_state_help@@Base+0x74>
   10da8:	b	10dd4 <argp_state_help@@Base+0x7c>
   10dac:	cbz	x2, 10dd4 <argp_state_help@@Base+0x7c>
   10db0:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   10db4:	ldr	x8, [x8, #4008]
   10db8:	mov	x0, xzr
   10dbc:	mov	x1, xzr
   10dc0:	mov	w3, w19
   10dc4:	ldr	x4, [x8]
   10dc8:	bl	f564 <argp_help@@Base+0x14>
   10dcc:	tbnz	w19, #8, 10de0 <argp_state_help@@Base+0x88>
   10dd0:	tbnz	w19, #9, 10df0 <argp_state_help@@Base+0x98>
   10dd4:	ldp	x20, x19, [sp, #16]
   10dd8:	ldp	x29, x30, [sp], #32
   10ddc:	ret
   10de0:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   10de4:	ldr	x8, [x8, #4048]
   10de8:	ldr	w0, [x8]
   10dec:	bl	a2a0 <exit@plt>
   10df0:	mov	w0, wzr
   10df4:	bl	a2a0 <exit@plt>

0000000000010df8 <argp_error@@Base>:
   10df8:	sub	sp, sp, #0x120
   10dfc:	stp	x29, x30, [sp, #240]
   10e00:	stp	x20, x19, [sp, #272]
   10e04:	add	x29, sp, #0xf0
   10e08:	mov	x20, x1
   10e0c:	mov	x19, x0
   10e10:	stp	x28, x21, [sp, #256]
   10e14:	stp	x2, x3, [x29, #-112]
   10e18:	stp	x4, x5, [x29, #-96]
   10e1c:	stp	x6, x7, [x29, #-80]
   10e20:	stp	q1, q2, [sp, #16]
   10e24:	stp	q3, q4, [sp, #48]
   10e28:	str	q0, [sp]
   10e2c:	stp	q5, q6, [sp, #80]
   10e30:	str	q7, [sp, #112]
   10e34:	cbz	x0, 10e50 <argp_error@@Base+0x58>
   10e38:	ldrb	w8, [x19, #28]
   10e3c:	tbnz	w8, #1, 10f30 <argp_error@@Base+0x138>
   10e40:	add	x8, x19, #0x48
   10e44:	ldr	x21, [x8]
   10e48:	cbnz	x21, 10e60 <argp_error@@Base+0x68>
   10e4c:	b	10f30 <argp_error@@Base+0x138>
   10e50:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   10e54:	ldr	x8, [x8, #3816]
   10e58:	ldr	x21, [x8]
   10e5c:	cbz	x21, 10f30 <argp_error@@Base+0x138>
   10e60:	mov	x0, x21
   10e64:	bl	a2f0 <flockfile@plt>
   10e68:	adrp	x13, 45000 <vasnprintf@@Base+0x14474>
   10e6c:	ldr	x13, [x13, #4008]
   10e70:	mov	x8, #0xffffffffffffffd0    	// #-48
   10e74:	mov	x9, sp
   10e78:	sub	x10, x29, #0x70
   10e7c:	movk	x8, #0xff80, lsl #32
   10e80:	add	x11, x29, #0x30
   10e84:	add	x12, x19, #0x40
   10e88:	cmp	x19, #0x0
   10e8c:	add	x9, x9, #0x80
   10e90:	add	x10, x10, #0x30
   10e94:	stp	x9, x8, [x29, #-16]
   10e98:	stp	x11, x10, [x29, #-32]
   10e9c:	csel	x8, x12, x13, ne  // ne = any
   10ea0:	ldr	x0, [x8]
   10ea4:	mov	x1, x21
   10ea8:	bl	acf0 <fputs_unlocked@plt>
   10eac:	ldp	x8, x9, [x21, #40]
   10eb0:	cmp	x8, x9
   10eb4:	b.cs	10f44 <argp_error@@Base+0x14c>  // b.hs, b.nlast
   10eb8:	add	x9, x8, #0x1
   10ebc:	mov	w10, #0x3a                  	// #58
   10ec0:	str	x9, [x21, #40]
   10ec4:	strb	w10, [x8]
   10ec8:	ldp	x8, x9, [x21, #40]
   10ecc:	cmp	x8, x9
   10ed0:	b.cs	10f5c <argp_error@@Base+0x164>  // b.hs, b.nlast
   10ed4:	add	x9, x8, #0x1
   10ed8:	mov	w10, #0x20                  	// #32
   10edc:	str	x9, [x21, #40]
   10ee0:	strb	w10, [x8]
   10ee4:	ldp	q0, q1, [x29, #-32]
   10ee8:	sub	x2, x29, #0x40
   10eec:	mov	x0, x21
   10ef0:	mov	x1, x20
   10ef4:	stp	q0, q1, [x29, #-64]
   10ef8:	bl	ad60 <vfprintf@plt>
   10efc:	ldp	x8, x9, [x21, #40]
   10f00:	cmp	x8, x9
   10f04:	b.cs	10f6c <argp_error@@Base+0x174>  // b.hs, b.nlast
   10f08:	add	x9, x8, #0x1
   10f0c:	mov	w10, #0xa                   	// #10
   10f10:	str	x9, [x21, #40]
   10f14:	strb	w10, [x8]
   10f18:	mov	w2, #0x104                 	// #260
   10f1c:	mov	x0, x19
   10f20:	mov	x1, x21
   10f24:	bl	ac80 <argp_state_help@plt>
   10f28:	mov	x0, x21
   10f2c:	bl	a580 <funlockfile@plt>
   10f30:	ldp	x20, x19, [sp, #272]
   10f34:	ldp	x28, x21, [sp, #256]
   10f38:	ldp	x29, x30, [sp, #240]
   10f3c:	add	sp, sp, #0x120
   10f40:	ret
   10f44:	mov	w1, #0x3a                  	// #58
   10f48:	mov	x0, x21
   10f4c:	bl	a890 <__overflow@plt>
   10f50:	ldp	x8, x9, [x21, #40]
   10f54:	cmp	x8, x9
   10f58:	b.cc	10ed4 <argp_error@@Base+0xdc>  // b.lo, b.ul, b.last
   10f5c:	mov	w1, #0x20                  	// #32
   10f60:	mov	x0, x21
   10f64:	bl	a890 <__overflow@plt>
   10f68:	b	10ee4 <argp_error@@Base+0xec>
   10f6c:	mov	w1, #0xa                   	// #10
   10f70:	mov	x0, x21
   10f74:	bl	a890 <__overflow@plt>
   10f78:	b	10f18 <argp_error@@Base+0x120>

0000000000010f7c <argp_failure@@Base>:
   10f7c:	sub	sp, sp, #0x1d0
   10f80:	stp	x28, x23, [sp, #416]
   10f84:	stp	x22, x21, [sp, #432]
   10f88:	stp	x20, x19, [sp, #448]
   10f8c:	mov	x23, x3
   10f90:	mov	w22, w2
   10f94:	mov	w19, w1
   10f98:	mov	x20, x0
   10f9c:	stp	x29, x30, [sp, #400]
   10fa0:	add	x29, sp, #0x190
   10fa4:	stp	x4, x5, [sp, #136]
   10fa8:	stp	x6, x7, [sp, #152]
   10fac:	stp	q0, q1, [sp]
   10fb0:	stp	q2, q3, [sp, #32]
   10fb4:	stp	q4, q5, [sp, #64]
   10fb8:	stp	q6, q7, [sp, #96]
   10fbc:	cbz	x0, 10fd8 <argp_failure@@Base+0x5c>
   10fc0:	ldrb	w8, [x20, #28]
   10fc4:	tbnz	w8, #1, 1113c <argp_failure@@Base+0x1c0>
   10fc8:	add	x8, x20, #0x48
   10fcc:	ldr	x21, [x8]
   10fd0:	cbnz	x21, 10fe8 <argp_failure@@Base+0x6c>
   10fd4:	b	1113c <argp_failure@@Base+0x1c0>
   10fd8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   10fdc:	ldr	x8, [x8, #3816]
   10fe0:	ldr	x21, [x8]
   10fe4:	cbz	x21, 1113c <argp_failure@@Base+0x1c0>
   10fe8:	mov	x0, x21
   10fec:	bl	a2f0 <flockfile@plt>
   10ff0:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   10ff4:	ldr	x9, [x9, #4008]
   10ff8:	add	x8, x20, #0x40
   10ffc:	cmp	x20, #0x0
   11000:	mov	x1, x21
   11004:	csel	x8, x8, x9, ne  // ne = any
   11008:	ldr	x0, [x8]
   1100c:	bl	acf0 <fputs_unlocked@plt>
   11010:	cbz	x23, 1108c <argp_failure@@Base+0x110>
   11014:	mov	x8, #0xffffffffffffffe0    	// #-32
   11018:	mov	x10, sp
   1101c:	add	x11, sp, #0x88
   11020:	movk	x8, #0xff80, lsl #32
   11024:	add	x9, x29, #0x40
   11028:	add	x10, x10, #0x80
   1102c:	add	x11, x11, #0x20
   11030:	stp	x10, x8, [sp, #184]
   11034:	stp	x9, x11, [sp, #168]
   11038:	ldp	x8, x9, [x21, #40]
   1103c:	cmp	x8, x9
   11040:	b.cs	11170 <argp_failure@@Base+0x1f4>  // b.hs, b.nlast
   11044:	add	x9, x8, #0x1
   11048:	mov	w10, #0x3a                  	// #58
   1104c:	str	x9, [x21, #40]
   11050:	strb	w10, [x8]
   11054:	ldp	x9, x8, [x21, #40]
   11058:	cmp	x9, x8
   1105c:	add	x8, sp, #0xa8
   11060:	b.cs	1118c <argp_failure@@Base+0x210>  // b.hs, b.nlast
   11064:	add	x10, x9, #0x1
   11068:	mov	w11, #0x20                  	// #32
   1106c:	str	x10, [x21, #40]
   11070:	strb	w11, [x9]
   11074:	ldp	q0, q1, [x8]
   11078:	sub	x2, x29, #0x20
   1107c:	mov	x0, x21
   11080:	mov	x1, x23
   11084:	stp	q0, q1, [x29, #-32]
   11088:	bl	ad60 <vfprintf@plt>
   1108c:	cbz	w22, 11108 <argp_failure@@Base+0x18c>
   11090:	ldp	x8, x9, [x21, #40]
   11094:	cmp	x8, x9
   11098:	b.cs	111a0 <argp_failure@@Base+0x224>  // b.hs, b.nlast
   1109c:	add	x9, x8, #0x1
   110a0:	mov	w10, #0x3a                  	// #58
   110a4:	str	x9, [x21, #40]
   110a8:	strb	w10, [x8]
   110ac:	ldp	x8, x9, [x21, #40]
   110b0:	cmp	x8, x9
   110b4:	b.cs	111b8 <argp_failure@@Base+0x23c>  // b.hs, b.nlast
   110b8:	add	x9, x8, #0x1
   110bc:	mov	w10, #0x20                  	// #32
   110c0:	str	x9, [x21, #40]
   110c4:	strb	w10, [x8]
   110c8:	add	x1, sp, #0xa8
   110cc:	mov	w2, #0xc8                  	// #200
   110d0:	mov	w0, w22
   110d4:	bl	a6b0 <strerror_r@plt>
   110d8:	cbnz	x0, 11100 <argp_failure@@Base+0x184>
   110dc:	mov	w0, w22
   110e0:	bl	a780 <strerror@plt>
   110e4:	cbnz	x0, 11100 <argp_failure@@Base+0x184>
   110e8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   110ec:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   110f0:	add	x0, x0, #0x197
   110f4:	add	x1, x1, #0x1bb
   110f8:	mov	w2, #0x5                   	// #5
   110fc:	bl	ac90 <dcgettext@plt>
   11100:	mov	x1, x21
   11104:	bl	acf0 <fputs_unlocked@plt>
   11108:	ldp	x8, x9, [x21, #40]
   1110c:	cmp	x8, x9
   11110:	b.cs	11154 <argp_failure@@Base+0x1d8>  // b.hs, b.nlast
   11114:	add	x9, x8, #0x1
   11118:	mov	w10, #0xa                   	// #10
   1111c:	str	x9, [x21, #40]
   11120:	strb	w10, [x8]
   11124:	mov	x0, x21
   11128:	bl	a580 <funlockfile@plt>
   1112c:	cbz	w19, 1113c <argp_failure@@Base+0x1c0>
   11130:	cbz	x20, 111c8 <argp_failure@@Base+0x24c>
   11134:	ldrb	w8, [x20, #28]
   11138:	tbz	w8, #5, 111c8 <argp_failure@@Base+0x24c>
   1113c:	ldp	x20, x19, [sp, #448]
   11140:	ldp	x22, x21, [sp, #432]
   11144:	ldp	x28, x23, [sp, #416]
   11148:	ldp	x29, x30, [sp, #400]
   1114c:	add	sp, sp, #0x1d0
   11150:	ret
   11154:	mov	w1, #0xa                   	// #10
   11158:	mov	x0, x21
   1115c:	bl	a890 <__overflow@plt>
   11160:	mov	x0, x21
   11164:	bl	a580 <funlockfile@plt>
   11168:	cbnz	w19, 11130 <argp_failure@@Base+0x1b4>
   1116c:	b	1113c <argp_failure@@Base+0x1c0>
   11170:	mov	w1, #0x3a                  	// #58
   11174:	mov	x0, x21
   11178:	bl	a890 <__overflow@plt>
   1117c:	ldp	x9, x8, [x21, #40]
   11180:	cmp	x9, x8
   11184:	add	x8, sp, #0xa8
   11188:	b.cc	11064 <argp_failure@@Base+0xe8>  // b.lo, b.ul, b.last
   1118c:	mov	w1, #0x20                  	// #32
   11190:	mov	x0, x21
   11194:	bl	a890 <__overflow@plt>
   11198:	add	x8, sp, #0xa8
   1119c:	b	11074 <argp_failure@@Base+0xf8>
   111a0:	mov	w1, #0x3a                  	// #58
   111a4:	mov	x0, x21
   111a8:	bl	a890 <__overflow@plt>
   111ac:	ldp	x8, x9, [x21, #40]
   111b0:	cmp	x8, x9
   111b4:	b.cc	110b8 <argp_failure@@Base+0x13c>  // b.lo, b.ul, b.last
   111b8:	mov	w1, #0x20                  	// #32
   111bc:	mov	x0, x21
   111c0:	bl	a890 <__overflow@plt>
   111c4:	b	110c8 <argp_failure@@Base+0x14c>
   111c8:	mov	w0, w19
   111cc:	bl	a2a0 <exit@plt>
   111d0:	sub	sp, sp, #0xa0
   111d4:	stp	x29, x30, [sp, #64]
   111d8:	stp	x28, x27, [sp, #80]
   111dc:	stp	x26, x25, [sp, #96]
   111e0:	stp	x24, x23, [sp, #112]
   111e4:	stp	x22, x21, [sp, #128]
   111e8:	stp	x20, x19, [sp, #144]
   111ec:	ldr	x27, [x0, #32]
   111f0:	ldr	x24, [x0]
   111f4:	mov	x26, x0
   111f8:	mov	w0, #0x20                  	// #32
   111fc:	add	x29, sp, #0x40
   11200:	mov	x28, x1
   11204:	bl	a550 <malloc@plt>
   11208:	cbz	x0, 11744 <argp_failure@@Base+0x7c8>
   1120c:	mov	x25, x0
   11210:	mov	x21, x0
   11214:	str	xzr, [x25, #24]!
   11218:	stur	wzr, [x25, #-16]
   1121c:	str	x25, [sp, #16]
   11220:	cbz	x24, 113d4 <argp_failure@@Base+0x458>
   11224:	ldrb	w8, [x24, #24]
   11228:	tbnz	w8, #2, 11764 <argp_failure@@Base+0x7e8>
   1122c:	mov	w22, wzr
   11230:	mov	w19, wzr
   11234:	add	x23, x24, #0x28
   11238:	b	11240 <argp_failure@@Base+0x2c4>
   1123c:	add	x23, x23, #0x30
   11240:	ldur	w25, [x23, #-32]
   11244:	cbnz	w25, 11260 <argp_failure@@Base+0x2e4>
   11248:	ldur	x8, [x23, #-40]
   1124c:	cbnz	x8, 11260 <argp_failure@@Base+0x2e4>
   11250:	ldur	x8, [x23, #-8]
   11254:	cbnz	x8, 11260 <argp_failure@@Base+0x2e4>
   11258:	ldr	w8, [x23]
   1125c:	cbz	w8, 11298 <argp_failure@@Base+0x31c>
   11260:	ldur	w8, [x23, #-16]
   11264:	tbnz	w8, #2, 11270 <argp_failure@@Base+0x2f4>
   11268:	add	w22, w22, #0x1
   1126c:	str	w22, [x21, #8]
   11270:	sub	w9, w25, #0x1
   11274:	cmp	w9, #0xfe
   11278:	b.hi	1123c <argp_failure@@Base+0x2c0>  // b.pmore
   1127c:	tbnz	w8, #3, 1123c <argp_failure@@Base+0x2c0>
   11280:	bl	a910 <__ctype_b_loc@plt>
   11284:	ldr	x8, [x0]
   11288:	ldrh	w8, [x8, x25, lsl #1]
   1128c:	tbz	w8, #14, 1123c <argp_failure@@Base+0x2c0>
   11290:	add	w19, w19, #0x1
   11294:	b	1123c <argp_failure@@Base+0x2c0>
   11298:	mov	w8, #0x38                  	// #56
   1129c:	umull	x0, w22, w8
   112a0:	bl	a550 <malloc@plt>
   112a4:	mov	x22, x0
   112a8:	str	x0, [x21]
   112ac:	add	w0, w19, #0x1
   112b0:	bl	a550 <malloc@plt>
   112b4:	str	x0, [x21, #16]
   112b8:	cbz	x22, 11724 <argp_failure@@Base+0x7a8>
   112bc:	mov	x23, x0
   112c0:	cbz	x0, 11724 <argp_failure@@Base+0x7a8>
   112c4:	mov	w8, wzr
   112c8:	b	112d8 <argp_failure@@Base+0x35c>
   112cc:	add	x22, x22, #0x38
   112d0:	mov	x24, x8
   112d4:	mov	w8, w25
   112d8:	ldr	w9, [x24, #8]
   112dc:	cbnz	w9, 112f8 <argp_failure@@Base+0x37c>
   112e0:	ldr	x10, [x24]
   112e4:	cbnz	x10, 112f8 <argp_failure@@Base+0x37c>
   112e8:	ldr	x10, [x24, #32]
   112ec:	cbnz	x10, 112f8 <argp_failure@@Base+0x37c>
   112f0:	ldr	w10, [x24, #40]
   112f4:	cbz	w10, 113cc <argp_failure@@Base+0x450>
   112f8:	str	x24, [x22]
   112fc:	str	wzr, [x22, #8]
   11300:	str	x23, [x22, #16]
   11304:	ldr	w25, [x24, #40]
   11308:	cbnz	w25, 11324 <argp_failure@@Base+0x3a8>
   1130c:	ldr	x10, [x24]
   11310:	cbz	x10, 1131c <argp_failure@@Base+0x3a0>
   11314:	mov	w25, w8
   11318:	b	11324 <argp_failure@@Base+0x3a8>
   1131c:	cmp	w9, #0x0
   11320:	cinc	w25, w8, eq  // eq = none
   11324:	mov	w9, wzr
   11328:	str	w25, [x22, #24]
   1132c:	stp	x28, x26, [x22, #32]
   11330:	add	w8, w9, #0x1
   11334:	str	w8, [x22, #8]
   11338:	ldrb	w8, [x24, #24]
   1133c:	tbnz	w8, #3, 11384 <argp_failure@@Base+0x408>
   11340:	ldr	w19, [x24, #8]
   11344:	sub	w8, w19, #0x1
   11348:	cmp	w8, #0xfe
   1134c:	b.hi	11384 <argp_failure@@Base+0x408>  // b.pmore
   11350:	bl	a910 <__ctype_b_loc@plt>
   11354:	ldr	x8, [x0]
   11358:	ldrh	w8, [x8, x19, lsl #1]
   1135c:	tbz	w8, #14, 11384 <argp_failure@@Base+0x408>
   11360:	ldr	x8, [x21, #16]
   11364:	cmp	x8, x23
   11368:	b.cs	11380 <argp_failure@@Base+0x404>  // b.hs, b.nlast
   1136c:	ldrb	w9, [x8], #1
   11370:	cmp	w9, w19, uxtb
   11374:	b.eq	11384 <argp_failure@@Base+0x408>  // b.none
   11378:	cmp	x23, x8
   1137c:	b.ne	1136c <argp_failure@@Base+0x3f0>  // b.any
   11380:	strb	w19, [x23], #1
   11384:	ldr	w9, [x24, #56]
   11388:	add	x8, x24, #0x30
   1138c:	cbnz	w9, 113a8 <argp_failure@@Base+0x42c>
   11390:	ldr	x9, [x8]
   11394:	cbnz	x9, 113a8 <argp_failure@@Base+0x42c>
   11398:	ldr	x9, [x24, #80]
   1139c:	cbnz	x9, 113a8 <argp_failure@@Base+0x42c>
   113a0:	ldr	w9, [x24, #88]
   113a4:	cbz	w9, 112cc <argp_failure@@Base+0x350>
   113a8:	ldrb	w9, [x24, #72]
   113ac:	tbz	w9, #2, 112cc <argp_failure@@Base+0x350>
   113b0:	ldr	w9, [x22, #8]
   113b4:	mov	x24, x8
   113b8:	add	w8, w9, #0x1
   113bc:	str	w8, [x22, #8]
   113c0:	ldrb	w8, [x24, #24]
   113c4:	tbz	w8, #3, 11340 <argp_failure@@Base+0x3c4>
   113c8:	b	11384 <argp_failure@@Base+0x408>
   113cc:	ldr	x25, [sp, #16]
   113d0:	strb	wzr, [x23]
   113d4:	cbz	x27, 116e0 <argp_failure@@Base+0x764>
   113d8:	ldr	x8, [x27]
   113dc:	cbz	x8, 116e0 <argp_failure@@Base+0x764>
   113e0:	stp	x28, x26, [sp]
   113e4:	b	1140c <argp_failure@@Base+0x490>
   113e8:	ldr	x8, [x22]
   113ec:	ldr	x9, [x22, #16]
   113f0:	str	w23, [x21, #8]
   113f4:	str	x8, [x21]
   113f8:	str	x9, [x21, #16]
   113fc:	mov	x0, x22
   11400:	bl	a970 <free@plt>
   11404:	ldr	x8, [x27, #32]!
   11408:	cbz	x8, 116e0 <argp_failure@@Base+0x764>
   1140c:	ldr	w19, [x27, #24]
   11410:	cbz	w19, 1141c <argp_failure@@Base+0x4a0>
   11414:	ldr	x20, [x27, #16]
   11418:	b	11428 <argp_failure@@Base+0x4ac>
   1141c:	ldr	x20, [x27, #16]
   11420:	mov	x1, x28
   11424:	cbz	x20, 11474 <argp_failure@@Base+0x4f8>
   11428:	ldr	x22, [x26, #32]
   1142c:	mov	w0, #0x30                  	// #48
   11430:	bl	a550 <malloc@plt>
   11434:	mov	x1, x0
   11438:	cbz	x0, 11474 <argp_failure@@Base+0x4f8>
   1143c:	sub	x8, x27, x22
   11440:	lsr	x8, x8, #5
   11444:	str	x20, [x1]
   11448:	stp	w8, w19, [x1, #8]
   1144c:	stp	x28, x26, [x1, #16]
   11450:	cbz	x28, 11460 <argp_failure@@Base+0x4e4>
   11454:	ldr	w8, [x28, #32]
   11458:	add	w8, w8, #0x1
   1145c:	b	11464 <argp_failure@@Base+0x4e8>
   11460:	mov	w8, wzr
   11464:	ldr	x9, [x25]
   11468:	str	w8, [x1, #32]
   1146c:	str	x1, [x25]
   11470:	str	x9, [x1, #40]
   11474:	ldr	x0, [x27]
   11478:	bl	111d0 <argp_failure@@Base+0x254>
   1147c:	mov	x22, x0
   11480:	mov	x9, x25
   11484:	ldr	x10, [x9]
   11488:	mov	x8, x9
   1148c:	add	x9, x10, #0x28
   11490:	cbnz	x10, 11484 <argp_failure@@Base+0x508>
   11494:	ldr	x9, [x22, #24]
   11498:	str	x9, [x8]
   1149c:	ldr	w23, [x22, #8]
   114a0:	str	xzr, [x22, #24]
   114a4:	cbz	w23, 113fc <argp_failure@@Base+0x480>
   114a8:	ldr	w19, [x21, #8]
   114ac:	cbz	w19, 113e8 <argp_failure@@Base+0x46c>
   114b0:	add	w9, w19, w23
   114b4:	mov	w8, #0x38                  	// #56
   114b8:	umull	x0, w9, w8
   114bc:	stur	x27, [x29, #-24]
   114c0:	str	w9, [sp, #28]
   114c4:	bl	a550 <malloc@plt>
   114c8:	ldr	x27, [x21, #16]
   114cc:	mov	x20, x0
   114d0:	mov	x0, x27
   114d4:	bl	a290 <strlen@plt>
   114d8:	ldr	x25, [x22, #16]
   114dc:	and	x26, x0, #0xffffffff
   114e0:	mov	x0, x25
   114e4:	bl	a290 <strlen@plt>
   114e8:	add	x8, x26, x0
   114ec:	add	x0, x8, #0x1
   114f0:	bl	a550 <malloc@plt>
   114f4:	stur	x20, [x29, #-16]
   114f8:	cbz	x20, 11704 <argp_failure@@Base+0x788>
   114fc:	mov	x8, x0
   11500:	cbz	x0, 11704 <argp_failure@@Base+0x788>
   11504:	ldur	x24, [x29, #-16]
   11508:	ldr	x1, [x21]
   1150c:	mov	w20, #0x38                  	// #56
   11510:	mul	x28, x19, x20
   11514:	mov	x0, x24
   11518:	mov	x2, x28
   1151c:	stur	x8, [x29, #-8]
   11520:	bl	a210 <memcpy@plt>
   11524:	ldr	x1, [x22]
   11528:	add	x0, x24, x28
   1152c:	mul	x2, x23, x20
   11530:	bl	a210 <memcpy@plt>
   11534:	ldur	x0, [x29, #-8]
   11538:	mov	x1, x27
   1153c:	mov	x2, x26
   11540:	bl	a210 <memcpy@plt>
   11544:	ldur	x9, [x29, #-8]
   11548:	mov	x28, x24
   1154c:	ldr	x8, [x28, #16]
   11550:	subs	w19, w19, #0x1
   11554:	sub	x8, x8, x27
   11558:	add	x8, x9, x8
   1155c:	str	x8, [x28, #16]
   11560:	add	x28, x28, #0x38
   11564:	b.ne	1154c <argp_failure@@Base+0x5d0>  // b.any
   11568:	add	x27, x9, x26
   1156c:	str	x22, [sp, #32]
   11570:	cbnz	x26, 11584 <argp_failure@@Base+0x608>
   11574:	b	1160c <argp_failure@@Base+0x690>
   11578:	subs	w23, w23, #0x1
   1157c:	add	x28, x28, #0x38
   11580:	b.eq	11670 <argp_failure@@Base+0x6f4>  // b.none
   11584:	ldr	w22, [x28, #8]
   11588:	str	x27, [x28, #16]
   1158c:	cbz	w22, 11578 <argp_failure@@Base+0x5fc>
   11590:	ldr	x19, [x28]
   11594:	b	115ac <argp_failure@@Base+0x630>
   11598:	strb	w20, [x27], #1
   1159c:	add	x25, x25, #0x1
   115a0:	subs	w22, w22, #0x1
   115a4:	add	x19, x19, #0x30
   115a8:	b.eq	11578 <argp_failure@@Base+0x5fc>  // b.none
   115ac:	ldrb	w8, [x19, #24]
   115b0:	tbnz	w8, #3, 115a0 <argp_failure@@Base+0x624>
   115b4:	ldr	w24, [x19, #8]
   115b8:	sub	w8, w24, #0x1
   115bc:	cmp	w8, #0xfe
   115c0:	b.hi	115a0 <argp_failure@@Base+0x624>  // b.pmore
   115c4:	ldrb	w20, [x25]
   115c8:	bl	a910 <__ctype_b_loc@plt>
   115cc:	cmp	w24, w20
   115d0:	b.ne	115a0 <argp_failure@@Base+0x624>  // b.any
   115d4:	ldr	x8, [x0]
   115d8:	ldur	x9, [x29, #-8]
   115dc:	ldrh	w10, [x8, x24, lsl #1]
   115e0:	mov	x8, x26
   115e4:	tbz	w10, #14, 115a0 <argp_failure@@Base+0x624>
   115e8:	ldrb	w10, [x9], #1
   115ec:	cmp	w10, w20
   115f0:	b.eq	1159c <argp_failure@@Base+0x620>  // b.none
   115f4:	subs	x8, x8, #0x1
   115f8:	b.ne	115e8 <argp_failure@@Base+0x66c>  // b.any
   115fc:	b	11598 <argp_failure@@Base+0x61c>
   11600:	subs	w23, w23, #0x1
   11604:	add	x28, x28, #0x38
   11608:	b.eq	11670 <argp_failure@@Base+0x6f4>  // b.none
   1160c:	ldr	w19, [x28, #8]
   11610:	str	x27, [x28, #16]
   11614:	cbz	w19, 11600 <argp_failure@@Base+0x684>
   11618:	ldr	x8, [x28]
   1161c:	add	x22, x8, #0x18
   11620:	b	11630 <argp_failure@@Base+0x6b4>
   11624:	subs	w19, w19, #0x1
   11628:	add	x22, x22, #0x30
   1162c:	b.eq	11600 <argp_failure@@Base+0x684>  // b.none
   11630:	ldrb	w8, [x22]
   11634:	tbnz	w8, #3, 11624 <argp_failure@@Base+0x6a8>
   11638:	ldur	w20, [x22, #-16]
   1163c:	sub	w8, w20, #0x1
   11640:	cmp	w8, #0xfe
   11644:	b.hi	11624 <argp_failure@@Base+0x6a8>  // b.pmore
   11648:	ldrb	w24, [x25]
   1164c:	bl	a910 <__ctype_b_loc@plt>
   11650:	cmp	w20, w24
   11654:	b.ne	11624 <argp_failure@@Base+0x6a8>  // b.any
   11658:	ldr	x8, [x0]
   1165c:	ldrh	w8, [x8, x20, lsl #1]
   11660:	tbz	w8, #14, 11624 <argp_failure@@Base+0x6a8>
   11664:	strb	w24, [x27], #1
   11668:	add	x25, x25, #0x1
   1166c:	b	11624 <argp_failure@@Base+0x6a8>
   11670:	ldr	x0, [x21]
   11674:	strb	wzr, [x27]
   11678:	bl	a970 <free@plt>
   1167c:	ldr	x0, [x21, #16]
   11680:	bl	a970 <free@plt>
   11684:	ldur	x8, [x29, #-16]
   11688:	ldr	x22, [sp, #32]
   1168c:	str	x8, [x21]
   11690:	ldr	w8, [sp, #28]
   11694:	ldr	x0, [x22, #24]
   11698:	str	w8, [x21, #8]
   1169c:	ldur	x8, [x29, #-8]
   116a0:	str	x8, [x21, #16]
   116a4:	cbz	x0, 116b8 <argp_failure@@Base+0x73c>
   116a8:	ldr	x19, [x0, #40]
   116ac:	bl	a970 <free@plt>
   116b0:	mov	x0, x19
   116b4:	cbnz	x19, 116a8 <argp_failure@@Base+0x72c>
   116b8:	ldr	w8, [x22, #8]
   116bc:	ldp	x28, x26, [sp]
   116c0:	ldur	x27, [x29, #-24]
   116c4:	ldr	x25, [sp, #16]
   116c8:	cbz	w8, 113fc <argp_failure@@Base+0x480>
   116cc:	ldr	x0, [x22]
   116d0:	bl	a970 <free@plt>
   116d4:	ldr	x0, [x22, #16]
   116d8:	bl	a970 <free@plt>
   116dc:	b	113fc <argp_failure@@Base+0x480>
   116e0:	mov	x0, x21
   116e4:	ldp	x20, x19, [sp, #144]
   116e8:	ldp	x22, x21, [sp, #128]
   116ec:	ldp	x24, x23, [sp, #112]
   116f0:	ldp	x26, x25, [sp, #96]
   116f4:	ldp	x28, x27, [sp, #80]
   116f8:	ldp	x29, x30, [sp, #64]
   116fc:	add	sp, sp, #0xa0
   11700:	ret
   11704:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   11708:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1170c:	adrp	x3, 32000 <vasnprintf@@Base+0x1474>
   11710:	add	x0, x0, #0x380
   11714:	add	x1, x1, #0x301
   11718:	add	x3, x3, #0x399
   1171c:	mov	w2, #0x370                 	// #880
   11720:	bl	ad80 <__assert_fail@plt>
   11724:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   11728:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1172c:	adrp	x3, 32000 <vasnprintf@@Base+0x1474>
   11730:	add	x0, x0, #0x35d
   11734:	add	x1, x1, #0x301
   11738:	add	x3, x3, #0x30d
   1173c:	mov	w2, #0x1db                 	// #475
   11740:	bl	ad80 <__assert_fail@plt>
   11744:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   11748:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1174c:	adrp	x3, 32000 <vasnprintf@@Base+0x1474>
   11750:	add	x0, x0, #0x2fd
   11754:	add	x1, x1, #0x301
   11758:	add	x3, x3, #0x30d
   1175c:	mov	w2, #0x1c3                 	// #451
   11760:	bl	ad80 <__assert_fail@plt>
   11764:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   11768:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1176c:	adrp	x3, 32000 <vasnprintf@@Base+0x1474>
   11770:	add	x0, x0, #0x34d
   11774:	add	x1, x1, #0x301
   11778:	add	x3, x3, #0x30d
   1177c:	mov	w2, #0x1cd                 	// #461
   11780:	bl	ad80 <__assert_fail@plt>
   11784:	stp	x29, x30, [sp, #-32]!
   11788:	stp	x20, x19, [sp, #16]
   1178c:	mov	x20, x1
   11790:	mov	x29, sp
   11794:	cbz	x0, 117b0 <argp_failure@@Base+0x834>
   11798:	mov	w1, #0xa                   	// #10
   1179c:	bl	aa60 <strchr@plt>
   117a0:	cmp	x0, #0x0
   117a4:	cset	w19, ne  // ne = any
   117a8:	cbnz	x20, 117b8 <argp_failure@@Base+0x83c>
   117ac:	b	117dc <argp_failure@@Base+0x860>
   117b0:	mov	x19, xzr
   117b4:	cbz	x20, 117dc <argp_failure@@Base+0x860>
   117b8:	ldr	x8, [x20]
   117bc:	cbz	x8, 117dc <argp_failure@@Base+0x860>
   117c0:	add	x20, x20, #0x20
   117c4:	ldr	x0, [x8, #16]
   117c8:	ldr	x1, [x8, #32]
   117cc:	bl	11784 <argp_failure@@Base+0x808>
   117d0:	ldr	x8, [x20], #32
   117d4:	add	x19, x0, x19
   117d8:	cbnz	x8, 117c4 <argp_failure@@Base+0x848>
   117dc:	mov	x0, x19
   117e0:	ldp	x20, x19, [sp, #16]
   117e4:	ldp	x29, x30, [sp], #32
   117e8:	ret
   117ec:	stp	x29, x30, [sp, #-96]!
   117f0:	stp	x28, x27, [sp, #16]
   117f4:	stp	x26, x25, [sp, #32]
   117f8:	stp	x24, x23, [sp, #48]
   117fc:	stp	x22, x21, [sp, #64]
   11800:	stp	x20, x19, [sp, #80]
   11804:	mov	x29, sp
   11808:	sub	sp, sp, #0x10
   1180c:	ldr	w22, [x0, #8]
   11810:	cbz	w22, 11b60 <argp_failure@@Base+0xbe4>
   11814:	mov	x20, x0
   11818:	ldr	x0, [x0, #16]
   1181c:	mov	x19, x1
   11820:	bl	a290 <strlen@plt>
   11824:	add	x9, x0, #0x10
   11828:	mov	x8, sp
   1182c:	and	x9, x9, #0xfffffffffffffff0
   11830:	sub	x23, x8, x9
   11834:	mov	sp, x23
   11838:	stp	x23, x20, [x29, #-16]
   1183c:	ldr	x24, [x20]
   11840:	b	11850 <argp_failure@@Base+0x8d4>
   11844:	subs	w22, w22, #0x1
   11848:	add	x24, x24, #0x38
   1184c:	b.eq	118dc <argp_failure@@Base+0x960>  // b.none
   11850:	ldr	w25, [x24, #8]
   11854:	cbz	w25, 11844 <argp_failure@@Base+0x8c8>
   11858:	ldr	x26, [x24]
   1185c:	ldr	x27, [x24, #16]
   11860:	mov	x28, x26
   11864:	b	11878 <argp_failure@@Base+0x8fc>
   11868:	add	x27, x27, #0x1
   1186c:	subs	w25, w25, #0x1
   11870:	add	x28, x28, #0x30
   11874:	b.eq	11844 <argp_failure@@Base+0x8c8>  // b.none
   11878:	ldr	w21, [x28, #24]
   1187c:	tbnz	w21, #3, 1186c <argp_failure@@Base+0x8f0>
   11880:	ldr	w20, [x28, #8]
   11884:	sub	w8, w20, #0x1
   11888:	cmp	w8, #0xfe
   1188c:	b.hi	1186c <argp_failure@@Base+0x8f0>  // b.pmore
   11890:	bl	a910 <__ctype_b_loc@plt>
   11894:	ldr	x8, [x0]
   11898:	ldrh	w8, [x8, x20, lsl #1]
   1189c:	tbz	w8, #14, 1186c <argp_failure@@Base+0x8f0>
   118a0:	ldrb	w8, [x27]
   118a4:	cmp	w20, w8
   118a8:	b.ne	1186c <argp_failure@@Base+0x8f0>  // b.any
   118ac:	tst	w21, #0x4
   118b0:	csel	x26, x28, x26, eq  // eq = none
   118b4:	tbnz	w21, #1, 11868 <argp_failure@@Base+0x8ec>
   118b8:	ldr	x8, [x28, #16]
   118bc:	cbnz	x8, 11868 <argp_failure@@Base+0x8ec>
   118c0:	ldr	x8, [x26, #16]
   118c4:	cbnz	x8, 11868 <argp_failure@@Base+0x8ec>
   118c8:	ldr	w8, [x26, #24]
   118cc:	orr	w8, w8, w21
   118d0:	tbnz	w8, #4, 11868 <argp_failure@@Base+0x8ec>
   118d4:	strb	w20, [x23], #1
   118d8:	b	11868 <argp_failure@@Base+0x8ec>
   118dc:	ldur	x2, [x29, #-16]
   118e0:	cmp	x23, x2
   118e4:	b.ls	118fc <argp_failure@@Base+0x980>  // b.plast
   118e8:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   118ec:	add	x1, x1, #0x3c5
   118f0:	mov	x0, x19
   118f4:	strb	wzr, [x23]
   118f8:	bl	a840 <argp_fmtstream_printf@plt>
   118fc:	ldur	x8, [x29, #-8]
   11900:	ldr	w25, [x8, #8]
   11904:	cbz	w25, 11b60 <argp_failure@@Base+0xbe4>
   11908:	ldr	x26, [x8]
   1190c:	b	1191c <argp_failure@@Base+0x9a0>
   11910:	subs	w25, w25, #0x1
   11914:	add	x26, x26, #0x38
   11918:	b.eq	11a88 <argp_failure@@Base+0xb0c>  // b.none
   1191c:	ldr	w27, [x26, #8]
   11920:	cbz	w27, 11910 <argp_failure@@Base+0x994>
   11924:	ldr	x8, [x26, #40]
   11928:	ldr	x22, [x26]
   1192c:	ldr	x21, [x26, #16]
   11930:	ldr	x23, [x8, #48]
   11934:	mov	x28, x22
   11938:	b	11964 <argp_failure@@Base+0x9e8>
   1193c:	ldr	w2, [x28, #8]
   11940:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   11944:	mov	x0, x19
   11948:	add	x1, x1, #0x3cc
   1194c:	mov	x3, x24
   11950:	bl	a840 <argp_fmtstream_printf@plt>
   11954:	add	x21, x21, #0x1
   11958:	subs	w27, w27, #0x1
   1195c:	add	x28, x28, #0x30
   11960:	b.eq	11910 <argp_failure@@Base+0x994>  // b.none
   11964:	ldr	w20, [x28, #24]
   11968:	tbnz	w20, #3, 11958 <argp_failure@@Base+0x9dc>
   1196c:	ldr	w24, [x28, #8]
   11970:	sub	w8, w24, #0x1
   11974:	cmp	w8, #0xfe
   11978:	b.hi	11958 <argp_failure@@Base+0x9dc>  // b.pmore
   1197c:	bl	a910 <__ctype_b_loc@plt>
   11980:	ldr	x8, [x0]
   11984:	ldrh	w8, [x8, x24, lsl #1]
   11988:	tbz	w8, #14, 11958 <argp_failure@@Base+0x9dc>
   1198c:	ldrb	w8, [x21]
   11990:	cmp	w24, w8
   11994:	b.ne	11958 <argp_failure@@Base+0x9dc>  // b.any
   11998:	tst	w20, #0x4
   1199c:	csel	x22, x28, x22, eq  // eq = none
   119a0:	tbnz	w20, #1, 11954 <argp_failure@@Base+0x9d8>
   119a4:	ldr	w8, [x22, #24]
   119a8:	ldr	x1, [x28, #16]
   119ac:	orr	w20, w8, w20
   119b0:	cbnz	x1, 119b8 <argp_failure@@Base+0xa3c>
   119b4:	ldr	x1, [x22, #16]
   119b8:	tbnz	w20, #4, 11954 <argp_failure@@Base+0x9d8>
   119bc:	cbz	x1, 11954 <argp_failure@@Base+0x9d8>
   119c0:	mov	w2, #0x5                   	// #5
   119c4:	mov	x0, x23
   119c8:	bl	ac90 <dcgettext@plt>
   119cc:	mov	x24, x0
   119d0:	tbnz	w20, #0, 1193c <argp_failure@@Base+0x9c0>
   119d4:	mov	x0, x24
   119d8:	bl	a290 <strlen@plt>
   119dc:	ldp	x9, x8, [x19, #48]
   119e0:	ldr	x10, [x19, #32]
   119e4:	add	x20, x0, #0x6
   119e8:	sub	x9, x8, x9
   119ec:	cmp	x9, x10
   119f0:	b.ls	11a00 <argp_failure@@Base+0xa84>  // b.plast
   119f4:	mov	x0, x19
   119f8:	bl	a480 <_argp_fmtstream_update@plt>
   119fc:	ldr	x8, [x19, #56]
   11a00:	ldr	x9, [x19, #40]
   11a04:	ldr	x10, [x19, #16]
   11a08:	bic	x11, x9, x9, asr #63
   11a0c:	ldr	x9, [x19, #64]
   11a10:	add	x11, x20, x11
   11a14:	cmp	x11, x10
   11a18:	b.cs	11a48 <argp_failure@@Base+0xacc>  // b.hs, b.nlast
   11a1c:	cmp	x8, x9
   11a20:	b.cc	11a38 <argp_failure@@Base+0xabc>  // b.lo, b.ul, b.last
   11a24:	mov	w1, #0x1                   	// #1
   11a28:	mov	x0, x19
   11a2c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11a30:	cbz	w0, 11a74 <argp_failure@@Base+0xaf8>
   11a34:	ldr	x8, [x19, #56]
   11a38:	add	x9, x8, #0x1
   11a3c:	str	x9, [x19, #56]
   11a40:	mov	w9, #0x20                  	// #32
   11a44:	b	11a70 <argp_failure@@Base+0xaf4>
   11a48:	cmp	x8, x9
   11a4c:	b.cc	11a64 <argp_failure@@Base+0xae8>  // b.lo, b.ul, b.last
   11a50:	mov	w1, #0x1                   	// #1
   11a54:	mov	x0, x19
   11a58:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11a5c:	cbz	w0, 11a74 <argp_failure@@Base+0xaf8>
   11a60:	ldr	x8, [x19, #56]
   11a64:	add	x9, x8, #0x1
   11a68:	str	x9, [x19, #56]
   11a6c:	mov	w9, #0xa                   	// #10
   11a70:	strb	w9, [x8]
   11a74:	ldr	w2, [x28, #8]
   11a78:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   11a7c:	mov	x0, x19
   11a80:	add	x1, x1, #0x3d7
   11a84:	b	1194c <argp_failure@@Base+0x9d0>
   11a88:	ldur	x8, [x29, #-8]
   11a8c:	ldr	w24, [x8, #8]
   11a90:	cbz	w24, 11b60 <argp_failure@@Base+0xbe4>
   11a94:	ldr	x25, [x8]
   11a98:	adrp	x20, 32000 <vasnprintf@@Base+0x1474>
   11a9c:	adrp	x22, 32000 <vasnprintf@@Base+0x1474>
   11aa0:	add	x20, x20, #0x3f8
   11aa4:	add	x22, x22, #0x3e0
   11aa8:	b	11ab8 <argp_failure@@Base+0xb3c>
   11aac:	subs	w24, w24, #0x1
   11ab0:	add	x25, x25, #0x38
   11ab4:	b.eq	11b60 <argp_failure@@Base+0xbe4>  // b.none
   11ab8:	ldr	w26, [x25, #8]
   11abc:	cbz	w26, 11aac <argp_failure@@Base+0xb30>
   11ac0:	ldr	x8, [x25, #40]
   11ac4:	ldr	x27, [x25]
   11ac8:	ldr	x23, [x8, #48]
   11acc:	mov	x28, x27
   11ad0:	b	11aec <argp_failure@@Base+0xb70>
   11ad4:	mov	x0, x19
   11ad8:	mov	x1, x20
   11adc:	bl	a840 <argp_fmtstream_printf@plt>
   11ae0:	subs	w26, w26, #0x1
   11ae4:	add	x28, x28, #0x30
   11ae8:	b.eq	11aac <argp_failure@@Base+0xb30>  // b.none
   11aec:	ldr	x2, [x28]
   11af0:	cbz	x2, 11ae0 <argp_failure@@Base+0xb64>
   11af4:	ldr	w8, [x28, #24]
   11af8:	tst	w8, #0x4
   11afc:	csel	x27, x28, x27, eq  // eq = none
   11b00:	tbnz	w8, #1, 11ae0 <argp_failure@@Base+0xb64>
   11b04:	ldr	w9, [x27, #24]
   11b08:	ldr	x1, [x28, #16]
   11b0c:	orr	w21, w9, w8
   11b10:	cbz	x1, 11b1c <argp_failure@@Base+0xba0>
   11b14:	tbnz	w21, #4, 11ae0 <argp_failure@@Base+0xb64>
   11b18:	b	11b24 <argp_failure@@Base+0xba8>
   11b1c:	ldr	x1, [x27, #16]
   11b20:	tbnz	w21, #4, 11ae0 <argp_failure@@Base+0xb64>
   11b24:	cbz	x1, 11ad4 <argp_failure@@Base+0xb58>
   11b28:	mov	w2, #0x5                   	// #5
   11b2c:	mov	x0, x23
   11b30:	bl	ac90 <dcgettext@plt>
   11b34:	ldr	x2, [x28]
   11b38:	mov	x3, x0
   11b3c:	mov	x0, x19
   11b40:	tbnz	w21, #0, 11b54 <argp_failure@@Base+0xbd8>
   11b44:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   11b48:	add	x1, x1, #0x3ed
   11b4c:	bl	a840 <argp_fmtstream_printf@plt>
   11b50:	b	11ae0 <argp_failure@@Base+0xb64>
   11b54:	mov	x1, x22
   11b58:	bl	a840 <argp_fmtstream_printf@plt>
   11b5c:	b	11ae0 <argp_failure@@Base+0xb64>
   11b60:	mov	sp, x29
   11b64:	ldp	x20, x19, [sp, #80]
   11b68:	ldp	x22, x21, [sp, #64]
   11b6c:	ldp	x24, x23, [sp, #48]
   11b70:	ldp	x26, x25, [sp, #32]
   11b74:	ldp	x28, x27, [sp, #16]
   11b78:	ldp	x29, x30, [sp], #96
   11b7c:	ret
   11b80:	sub	sp, sp, #0x80
   11b84:	stp	x29, x30, [sp, #32]
   11b88:	stp	x28, x27, [sp, #48]
   11b8c:	stp	x26, x25, [sp, #64]
   11b90:	stp	x24, x23, [sp, #80]
   11b94:	stp	x22, x21, [sp, #96]
   11b98:	stp	x20, x19, [sp, #112]
   11b9c:	ldr	x26, [x2]
   11ba0:	ldr	x8, [x0, #16]
   11ba4:	ldr	x28, [x0, #32]
   11ba8:	mov	x20, x4
   11bac:	mov	w19, w3
   11bb0:	mov	x21, x2
   11bb4:	mov	x23, x0
   11bb8:	mov	x22, x1
   11bbc:	add	x29, sp, #0x20
   11bc0:	cbz	x8, 11c60 <argp_failure@@Base+0xce4>
   11bc4:	ldr	x0, [x23, #48]
   11bc8:	mov	w2, #0x5                   	// #5
   11bcc:	mov	x1, x8
   11bd0:	bl	ac90 <dcgettext@plt>
   11bd4:	mov	x24, x0
   11bd8:	ldr	x8, [x23, #40]
   11bdc:	mov	x25, x24
   11be0:	cbz	x8, 11c0c <argp_failure@@Base+0xc90>
   11be4:	mov	x0, x23
   11be8:	mov	x1, x22
   11bec:	bl	ab50 <_argp_input@plt>
   11bf0:	ldr	x8, [x23, #40]
   11bf4:	mov	x2, x0
   11bf8:	mov	w0, #0x6                   	// #6
   11bfc:	movk	w0, #0x200, lsl #16
   11c00:	mov	x1, x24
   11c04:	blr	x8
   11c08:	mov	x25, x0
   11c0c:	cbz	x25, 11c74 <argp_failure@@Base+0xcf8>
   11c10:	mov	w1, #0xa                   	// #10
   11c14:	mov	x0, x25
   11c18:	bl	ac50 <strchrnul@plt>
   11c1c:	ldrb	w8, [x0]
   11c20:	mov	x23, x0
   11c24:	stur	x26, [x29, #-8]
   11c28:	str	x28, [sp, #16]
   11c2c:	cbz	w8, 11c80 <argp_failure@@Base+0xd04>
   11c30:	ldrb	w27, [x26]
   11c34:	cbz	w27, 11c8c <argp_failure@@Base+0xd10>
   11c38:	mov	w28, wzr
   11c3c:	add	x26, x23, #0x1
   11c40:	mov	w1, #0xa                   	// #10
   11c44:	mov	x0, x26
   11c48:	bl	ac50 <strchrnul@plt>
   11c4c:	add	w28, w28, #0x1
   11c50:	cmp	w28, w27
   11c54:	mov	x23, x0
   11c58:	b.cc	11c3c <argp_failure@@Base+0xcc0>  // b.lo, b.ul, b.last
   11c5c:	b	11c90 <argp_failure@@Base+0xd14>
   11c60:	mov	x24, xzr
   11c64:	ldr	x8, [x23, #40]
   11c68:	mov	x25, x24
   11c6c:	cbnz	x8, 11be4 <argp_failure@@Base+0xc68>
   11c70:	b	11c0c <argp_failure@@Base+0xc90>
   11c74:	mov	x23, xzr
   11c78:	cbnz	x28, 11d9c <argp_failure@@Base+0xe20>
   11c7c:	b	11dd0 <argp_failure@@Base+0xe54>
   11c80:	str	wzr, [sp, #12]
   11c84:	mov	x26, x25
   11c88:	b	11ca4 <argp_failure@@Base+0xd28>
   11c8c:	mov	x26, x25
   11c90:	ldr	x8, [x21]
   11c94:	add	x8, x8, #0x1
   11c98:	str	x8, [x21]
   11c9c:	mov	w8, #0x1                   	// #1
   11ca0:	str	w8, [sp, #12]
   11ca4:	ldp	x9, x8, [x20, #48]
   11ca8:	ldr	x10, [x20, #32]
   11cac:	sub	x27, x23, x26
   11cb0:	add	x28, x27, #0x1
   11cb4:	sub	x9, x8, x9
   11cb8:	cmp	x9, x10
   11cbc:	b.ls	11ccc <argp_failure@@Base+0xd50>  // b.plast
   11cc0:	mov	x0, x20
   11cc4:	bl	a480 <_argp_fmtstream_update@plt>
   11cc8:	ldr	x8, [x20, #56]
   11ccc:	ldr	x9, [x20, #40]
   11cd0:	ldr	x10, [x20, #16]
   11cd4:	bic	x11, x9, x9, asr #63
   11cd8:	ldr	x9, [x20, #64]
   11cdc:	add	x11, x28, x11
   11ce0:	cmp	x11, x10
   11ce4:	b.cs	11d14 <argp_failure@@Base+0xd98>  // b.hs, b.nlast
   11ce8:	ldr	x28, [sp, #16]
   11cec:	cmp	x8, x9
   11cf0:	b.cc	11d08 <argp_failure@@Base+0xd8c>  // b.lo, b.ul, b.last
   11cf4:	mov	w1, #0x1                   	// #1
   11cf8:	mov	x0, x20
   11cfc:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11d00:	cbz	w0, 11d44 <argp_failure@@Base+0xdc8>
   11d04:	ldr	x8, [x20, #56]
   11d08:	add	x9, x8, #0x1
   11d0c:	mov	w10, #0x20                  	// #32
   11d10:	b	11d3c <argp_failure@@Base+0xdc0>
   11d14:	ldr	x28, [sp, #16]
   11d18:	cmp	x8, x9
   11d1c:	b.cc	11d34 <argp_failure@@Base+0xdb8>  // b.lo, b.ul, b.last
   11d20:	mov	w1, #0x1                   	// #1
   11d24:	mov	x0, x20
   11d28:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11d2c:	cbz	w0, 11d44 <argp_failure@@Base+0xdc8>
   11d30:	ldr	x8, [x20, #56]
   11d34:	add	x9, x8, #0x1
   11d38:	mov	w10, #0xa                   	// #10
   11d3c:	str	x9, [x20, #56]
   11d40:	strb	w10, [x8]
   11d44:	ldp	x0, x8, [x20, #56]
   11d48:	add	x9, x0, x27
   11d4c:	cmp	x9, x8
   11d50:	b.ls	11d68 <argp_failure@@Base+0xdec>  // b.plast
   11d54:	mov	x0, x20
   11d58:	mov	x1, x27
   11d5c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11d60:	cbz	w0, 11d80 <argp_failure@@Base+0xe04>
   11d64:	ldr	x0, [x20, #56]
   11d68:	mov	x1, x26
   11d6c:	mov	x2, x27
   11d70:	bl	a210 <memcpy@plt>
   11d74:	ldr	x8, [x20, #56]
   11d78:	add	x8, x8, x27
   11d7c:	str	x8, [x20, #56]
   11d80:	cmp	x25, x24
   11d84:	b.eq	11d90 <argp_failure@@Base+0xe14>  // b.none
   11d88:	mov	x0, x25
   11d8c:	bl	a970 <free@plt>
   11d90:	ldur	x26, [x29, #-8]
   11d94:	ldr	w25, [sp, #12]
   11d98:	cbz	x28, 11dd0 <argp_failure@@Base+0xe54>
   11d9c:	ldr	x8, [x28]
   11da0:	cbz	x8, 11dd0 <argp_failure@@Base+0xe54>
   11da4:	add	x24, x28, #0x20
   11da8:	mov	x0, x8
   11dac:	mov	x1, x22
   11db0:	mov	x2, x21
   11db4:	mov	w3, w19
   11db8:	mov	x4, x20
   11dbc:	bl	11b80 <argp_failure@@Base+0xc04>
   11dc0:	ldr	x8, [x24], #32
   11dc4:	cmp	w0, #0x0
   11dc8:	cset	w19, eq  // eq = none
   11dcc:	cbnz	x8, 11da8 <argp_failure@@Base+0xe2c>
   11dd0:	cbz	w25, 11e00 <argp_failure@@Base+0xe84>
   11dd4:	cbz	w19, 11e00 <argp_failure@@Base+0xe84>
   11dd8:	ldrb	w9, [x23]
   11ddc:	ldrb	w8, [x26]
   11de0:	cbz	w9, 11df4 <argp_failure@@Base+0xe78>
   11de4:	add	w8, w8, #0x1
   11de8:	mov	w19, wzr
   11dec:	strb	w8, [x26]
   11df0:	b	11e00 <argp_failure@@Base+0xe84>
   11df4:	cbz	w8, 11dfc <argp_failure@@Base+0xe80>
   11df8:	strb	wzr, [x26]
   11dfc:	mov	w19, #0x1                   	// #1
   11e00:	cmp	w19, #0x0
   11e04:	ldp	x20, x19, [sp, #112]
   11e08:	ldp	x22, x21, [sp, #96]
   11e0c:	ldp	x24, x23, [sp, #80]
   11e10:	ldp	x26, x25, [sp, #64]
   11e14:	ldp	x28, x27, [sp, #48]
   11e18:	ldp	x29, x30, [sp, #32]
   11e1c:	cset	w0, eq  // eq = none
   11e20:	add	sp, sp, #0x80
   11e24:	ret
   11e28:	sub	sp, sp, #0x70
   11e2c:	stp	x29, x30, [sp, #16]
   11e30:	stp	x28, x27, [sp, #32]
   11e34:	stp	x26, x25, [sp, #48]
   11e38:	stp	x24, x23, [sp, #64]
   11e3c:	stp	x22, x21, [sp, #80]
   11e40:	stp	x20, x19, [sp, #96]
   11e44:	ldr	x8, [x0, #24]
   11e48:	mov	x19, x5
   11e4c:	mov	w22, w4
   11e50:	mov	w23, w3
   11e54:	mov	w20, w2
   11e58:	mov	x24, x0
   11e5c:	mov	x21, x1
   11e60:	add	x29, sp, #0x10
   11e64:	cbz	x8, 11ec4 <argp_failure@@Base+0xf48>
   11e68:	ldr	x0, [x24, #48]
   11e6c:	mov	w2, #0x5                   	// #5
   11e70:	mov	x1, x8
   11e74:	bl	ac90 <dcgettext@plt>
   11e78:	ldr	x27, [x24, #32]
   11e7c:	mov	x26, x0
   11e80:	cbz	x0, 11f24 <argp_failure@@Base+0xfa8>
   11e84:	mov	w1, #0xb                   	// #11
   11e88:	mov	x0, x26
   11e8c:	bl	aa60 <strchr@plt>
   11e90:	cmp	x0, #0x0
   11e94:	csinc	x9, xzr, x0, eq  // eq = none
   11e98:	cmp	x0, #0x0
   11e9c:	sub	x8, x0, x26
   11ea0:	ccmp	w20, #0x0, #0x0, ne  // ne = any
   11ea4:	csel	x25, x8, xzr, eq  // eq = none
   11ea8:	cmp	w20, #0x0
   11eac:	csel	x26, x26, x9, eq  // eq = none
   11eb0:	ldr	x8, [x24, #40]
   11eb4:	mov	w28, #0x1                   	// #1
   11eb8:	movk	w28, #0x200, lsl #16
   11ebc:	cbnz	x8, 11edc <argp_failure@@Base+0xf60>
   11ec0:	b	11f38 <argp_failure@@Base+0xfbc>
   11ec4:	ldp	x27, x8, [x24, #32]
   11ec8:	mov	x25, xzr
   11ecc:	mov	x26, xzr
   11ed0:	mov	w28, #0x1                   	// #1
   11ed4:	movk	w28, #0x200, lsl #16
   11ed8:	cbz	x8, 11f38 <argp_failure@@Base+0xfbc>
   11edc:	cbz	x25, 11ef0 <argp_failure@@Base+0xf74>
   11ee0:	mov	x0, x26
   11ee4:	mov	x1, x25
   11ee8:	bl	aa30 <strndup@plt>
   11eec:	mov	x26, x0
   11ef0:	mov	x0, x24
   11ef4:	mov	x1, x21
   11ef8:	bl	ab50 <_argp_input@plt>
   11efc:	ldr	x8, [x24, #40]
   11f00:	cmp	w20, #0x0
   11f04:	mov	x2, x0
   11f08:	cinc	w0, w28, ne  // ne = any
   11f0c:	mov	x1, x26
   11f10:	str	x2, [sp, #8]
   11f14:	blr	x8
   11f18:	mov	x28, x0
   11f1c:	cbnz	x28, 11f44 <argp_failure@@Base+0xfc8>
   11f20:	b	12090 <argp_failure@@Base+0x1114>
   11f24:	mov	x25, xzr
   11f28:	ldr	x8, [x24, #40]
   11f2c:	mov	w28, #0x1                   	// #1
   11f30:	movk	w28, #0x200, lsl #16
   11f34:	cbnz	x8, 11edc <argp_failure@@Base+0xf60>
   11f38:	str	xzr, [sp, #8]
   11f3c:	mov	x28, x26
   11f40:	cbz	x28, 12090 <argp_failure@@Base+0x1114>
   11f44:	cbz	w23, 11f78 <argp_failure@@Base+0xffc>
   11f48:	ldp	x8, x9, [x19, #56]
   11f4c:	cmp	x8, x9
   11f50:	b.cc	11f68 <argp_failure@@Base+0xfec>  // b.lo, b.ul, b.last
   11f54:	mov	w1, #0x1                   	// #1
   11f58:	mov	x0, x19
   11f5c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11f60:	cbz	w0, 11f78 <argp_failure@@Base+0xffc>
   11f64:	ldr	x8, [x19, #56]
   11f68:	add	x9, x8, #0x1
   11f6c:	mov	w10, #0xa                   	// #10
   11f70:	str	x9, [x19, #56]
   11f74:	strb	w10, [x8]
   11f78:	str	w22, [sp, #4]
   11f7c:	mov	x22, x27
   11f80:	cbz	x25, 11fc8 <argp_failure@@Base+0x104c>
   11f84:	cmp	x28, x26
   11f88:	b.ne	11fc8 <argp_failure@@Base+0x104c>  // b.any
   11f8c:	ldp	x0, x8, [x19, #56]
   11f90:	add	x9, x0, x25
   11f94:	cmp	x9, x8
   11f98:	b.ls	11fb0 <argp_failure@@Base+0x1034>  // b.plast
   11f9c:	mov	x0, x19
   11fa0:	mov	x1, x25
   11fa4:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11fa8:	cbz	w0, 12014 <argp_failure@@Base+0x1098>
   11fac:	ldr	x0, [x19, #56]
   11fb0:	mov	x1, x26
   11fb4:	mov	x2, x25
   11fb8:	bl	a210 <memcpy@plt>
   11fbc:	ldr	x8, [x19, #56]
   11fc0:	add	x8, x8, x25
   11fc4:	b	12010 <argp_failure@@Base+0x1094>
   11fc8:	mov	x0, x28
   11fcc:	bl	a290 <strlen@plt>
   11fd0:	cbz	x0, 12014 <argp_failure@@Base+0x1098>
   11fd4:	mov	x27, x0
   11fd8:	ldp	x0, x8, [x19, #56]
   11fdc:	add	x9, x0, x27
   11fe0:	cmp	x9, x8
   11fe4:	b.ls	11ffc <argp_failure@@Base+0x1080>  // b.plast
   11fe8:	mov	x0, x19
   11fec:	mov	x1, x27
   11ff0:	bl	ac70 <_argp_fmtstream_ensure@plt>
   11ff4:	cbz	w0, 12014 <argp_failure@@Base+0x1098>
   11ff8:	ldr	x0, [x19, #56]
   11ffc:	mov	x1, x28
   12000:	mov	x2, x27
   12004:	bl	a210 <memcpy@plt>
   12008:	ldr	x8, [x19, #56]
   1200c:	add	x8, x8, x27
   12010:	str	x8, [x19, #56]
   12014:	ldp	x9, x8, [x19, #48]
   12018:	ldr	x10, [x19, #32]
   1201c:	sub	x8, x8, x9
   12020:	cmp	x8, x10
   12024:	b.ls	12030 <argp_failure@@Base+0x10b4>  // b.plast
   12028:	mov	x0, x19
   1202c:	bl	a480 <_argp_fmtstream_update@plt>
   12030:	ldr	x8, [x19, #40]
   12034:	ldr	x9, [x19, #8]
   12038:	mov	x27, x22
   1203c:	ldr	w22, [sp, #4]
   12040:	bic	x8, x8, x8, asr #63
   12044:	cmp	x8, x9
   12048:	b.ls	1207c <argp_failure@@Base+0x1100>  // b.plast
   1204c:	ldp	x8, x9, [x19, #56]
   12050:	cmp	x8, x9
   12054:	b.cc	1206c <argp_failure@@Base+0x10f0>  // b.lo, b.ul, b.last
   12058:	mov	w1, #0x1                   	// #1
   1205c:	mov	x0, x19
   12060:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12064:	cbz	w0, 1207c <argp_failure@@Base+0x1100>
   12068:	ldr	x8, [x19, #56]
   1206c:	add	x9, x8, #0x1
   12070:	mov	w10, #0xa                   	// #10
   12074:	str	x9, [x19, #56]
   12078:	strb	w10, [x8]
   1207c:	cmp	x28, x26
   12080:	b.eq	1208c <argp_failure@@Base+0x1110>  // b.none
   12084:	mov	x0, x28
   12088:	bl	a970 <free@plt>
   1208c:	mov	w28, #0x1                   	// #1
   12090:	cbz	x25, 120a8 <argp_failure@@Base+0x112c>
   12094:	cbz	x26, 120a8 <argp_failure@@Base+0x112c>
   12098:	ldr	x8, [x24, #40]
   1209c:	cbz	x8, 120a8 <argp_failure@@Base+0x112c>
   120a0:	mov	x0, x26
   120a4:	bl	a970 <free@plt>
   120a8:	cbz	w20, 121c8 <argp_failure@@Base+0x124c>
   120ac:	ldr	x8, [x24, #40]
   120b0:	cbz	x8, 121c8 <argp_failure@@Base+0x124c>
   120b4:	ldr	x2, [sp, #8]
   120b8:	mov	w9, #0x1                   	// #1
   120bc:	movk	w9, #0x200, lsl #16
   120c0:	add	w0, w9, #0x3
   120c4:	mov	x1, xzr
   120c8:	blr	x8
   120cc:	cbz	x0, 121c8 <argp_failure@@Base+0x124c>
   120d0:	mov	x24, x0
   120d4:	orr	w8, w28, w23
   120d8:	cbz	w8, 1210c <argp_failure@@Base+0x1190>
   120dc:	ldp	x8, x9, [x19, #56]
   120e0:	cmp	x8, x9
   120e4:	b.cc	120fc <argp_failure@@Base+0x1180>  // b.lo, b.ul, b.last
   120e8:	mov	w1, #0x1                   	// #1
   120ec:	mov	x0, x19
   120f0:	bl	ac70 <_argp_fmtstream_ensure@plt>
   120f4:	cbz	w0, 1210c <argp_failure@@Base+0x1190>
   120f8:	ldr	x8, [x19, #56]
   120fc:	add	x9, x8, #0x1
   12100:	mov	w10, #0xa                   	// #10
   12104:	str	x9, [x19, #56]
   12108:	strb	w10, [x8]
   1210c:	mov	x0, x24
   12110:	bl	a290 <strlen@plt>
   12114:	cbz	x0, 12158 <argp_failure@@Base+0x11dc>
   12118:	mov	x25, x0
   1211c:	ldp	x0, x8, [x19, #56]
   12120:	add	x9, x0, x25
   12124:	cmp	x9, x8
   12128:	b.ls	12140 <argp_failure@@Base+0x11c4>  // b.plast
   1212c:	mov	x0, x19
   12130:	mov	x1, x25
   12134:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12138:	cbz	w0, 12158 <argp_failure@@Base+0x11dc>
   1213c:	ldr	x0, [x19, #56]
   12140:	mov	x1, x24
   12144:	mov	x2, x25
   12148:	bl	a210 <memcpy@plt>
   1214c:	ldr	x8, [x19, #56]
   12150:	add	x8, x8, x25
   12154:	str	x8, [x19, #56]
   12158:	mov	x0, x24
   1215c:	bl	a970 <free@plt>
   12160:	ldp	x9, x8, [x19, #48]
   12164:	ldr	x10, [x19, #32]
   12168:	sub	x8, x8, x9
   1216c:	cmp	x8, x10
   12170:	b.ls	1217c <argp_failure@@Base+0x1200>  // b.plast
   12174:	mov	x0, x19
   12178:	bl	a480 <_argp_fmtstream_update@plt>
   1217c:	ldr	x8, [x19, #40]
   12180:	ldr	x9, [x19, #8]
   12184:	bic	x8, x8, x8, asr #63
   12188:	cmp	x8, x9
   1218c:	b.ls	121c4 <argp_failure@@Base+0x1248>  // b.plast
   12190:	ldp	x8, x9, [x19, #56]
   12194:	cmp	x8, x9
   12198:	b.cc	121b4 <argp_failure@@Base+0x1238>  // b.lo, b.ul, b.last
   1219c:	mov	w1, #0x1                   	// #1
   121a0:	mov	x0, x19
   121a4:	mov	w28, #0x1                   	// #1
   121a8:	bl	ac70 <_argp_fmtstream_ensure@plt>
   121ac:	cbz	w0, 121c8 <argp_failure@@Base+0x124c>
   121b0:	ldr	x8, [x19, #56]
   121b4:	add	x9, x8, #0x1
   121b8:	mov	w10, #0xa                   	// #10
   121bc:	str	x9, [x19, #56]
   121c0:	strb	w10, [x8]
   121c4:	mov	w28, #0x1                   	// #1
   121c8:	cbz	x27, 12248 <argp_failure@@Base+0x12cc>
   121cc:	ldr	x8, [x27]
   121d0:	cbz	x8, 12248 <argp_failure@@Base+0x12cc>
   121d4:	cbz	w22, 12214 <argp_failure@@Base+0x1298>
   121d8:	cmp	w23, #0x0
   121dc:	cset	w23, ne  // ne = any
   121e0:	add	x24, x27, #0x20
   121e4:	cbnz	w28, 12248 <argp_failure@@Base+0x12cc>
   121e8:	mov	x0, x8
   121ec:	mov	x1, x21
   121f0:	mov	w2, w20
   121f4:	mov	w3, w23
   121f8:	mov	w4, w22
   121fc:	mov	x5, x19
   12200:	bl	11e28 <argp_failure@@Base+0xeac>
   12204:	ldr	x8, [x24], #32
   12208:	mov	w28, w0
   1220c:	cbnz	x8, 121e4 <argp_failure@@Base+0x1268>
   12210:	b	12248 <argp_failure@@Base+0x12cc>
   12214:	add	x22, x27, #0x20
   12218:	orr	w9, w28, w23
   1221c:	cmp	w9, #0x0
   12220:	cset	w3, ne  // ne = any
   12224:	mov	x0, x8
   12228:	mov	x1, x21
   1222c:	mov	w2, w20
   12230:	mov	w4, wzr
   12234:	mov	x5, x19
   12238:	bl	11e28 <argp_failure@@Base+0xeac>
   1223c:	ldr	x8, [x22], #32
   12240:	orr	w28, w0, w28
   12244:	cbnz	x8, 12218 <argp_failure@@Base+0x129c>
   12248:	mov	w0, w28
   1224c:	ldp	x20, x19, [sp, #96]
   12250:	ldp	x22, x21, [sp, #80]
   12254:	ldp	x24, x23, [sp, #64]
   12258:	ldp	x26, x25, [sp, #48]
   1225c:	ldp	x28, x27, [sp, #32]
   12260:	ldp	x29, x30, [sp, #16]
   12264:	add	sp, sp, #0x70
   12268:	ret
   1226c:	stp	x29, x30, [sp, #-96]!
   12270:	stp	x28, x27, [sp, #16]
   12274:	stp	x26, x25, [sp, #32]
   12278:	stp	x24, x23, [sp, #48]
   1227c:	stp	x22, x21, [sp, #64]
   12280:	stp	x20, x19, [sp, #80]
   12284:	ldr	x8, [x0, #32]
   12288:	ldr	x9, [x1, #32]
   1228c:	ldr	w11, [x0, #24]
   12290:	ldr	w10, [x1, #24]
   12294:	mov	x29, sp
   12298:	cmp	x8, x9
   1229c:	b.eq	12354 <argp_failure@@Base+0x13d8>  // b.none
   122a0:	cbz	x8, 122cc <argp_failure@@Base+0x1350>
   122a4:	cbz	x9, 122ec <argp_failure@@Base+0x1370>
   122a8:	ldr	w10, [x8, #32]
   122ac:	ldr	w11, [x9, #32]
   122b0:	cmp	w10, w11
   122b4:	b.le	12314 <argp_failure@@Base+0x1398>
   122b8:	ldr	x8, [x8, #16]
   122bc:	ldr	w10, [x8, #32]
   122c0:	cmp	w10, w11
   122c4:	b.gt	122b8 <argp_failure@@Base+0x133c>
   122c8:	b	12314 <argp_failure@@Base+0x1398>
   122cc:	mov	x8, x9
   122d0:	ldr	x9, [x9, #16]
   122d4:	cbnz	x9, 122cc <argp_failure@@Base+0x1350>
   122d8:	ldr	w8, [x8, #12]
   122dc:	subs	w0, w11, w8
   122e0:	b.ne	12488 <argp_failure@@Base+0x150c>  // b.any
   122e4:	mov	w0, #0xffffffff            	// #-1
   122e8:	b	12650 <argp_failure@@Base+0x16d4>
   122ec:	mov	x9, x8
   122f0:	ldr	x8, [x8, #16]
   122f4:	cbnz	x8, 122ec <argp_failure@@Base+0x1370>
   122f8:	ldr	w8, [x9, #12]
   122fc:	subs	w0, w8, w10
   12300:	b.ne	124a0 <argp_failure@@Base+0x1524>  // b.any
   12304:	mov	w0, #0x1                   	// #1
   12308:	b	12650 <argp_failure@@Base+0x16d4>
   1230c:	ldr	x9, [x9, #16]
   12310:	ldr	w11, [x9, #32]
   12314:	cmp	w11, w10
   12318:	b.gt	1230c <argp_failure@@Base+0x1390>
   1231c:	mov	x11, x9
   12320:	mov	x10, x8
   12324:	ldr	x8, [x8, #16]
   12328:	ldr	x9, [x9, #16]
   1232c:	cmp	x8, x9
   12330:	b.ne	1231c <argp_failure@@Base+0x13a0>  // b.any
   12334:	ldr	w8, [x10, #12]
   12338:	ldr	w9, [x11, #12]
   1233c:	subs	w0, w8, w9
   12340:	b.ne	12470 <argp_failure@@Base+0x14f4>  // b.any
   12344:	ldr	w8, [x11, #8]
   12348:	ldr	w9, [x10, #8]
   1234c:	sub	w0, w8, w9
   12350:	b	12650 <argp_failure@@Base+0x16d4>
   12354:	mov	x19, x0
   12358:	subs	w0, w11, w10
   1235c:	b.ne	12458 <argp_failure@@Base+0x14dc>  // b.any
   12360:	ldr	w23, [x19, #8]
   12364:	mov	x20, x1
   12368:	cbz	w23, 124b8 <argp_failure@@Base+0x153c>
   1236c:	ldr	x8, [x19]
   12370:	ldr	x22, [x19, #16]
   12374:	sub	w25, w23, #0x1
   12378:	add	x24, x8, #0x18
   1237c:	ldr	w21, [x24]
   12380:	tbnz	w21, #3, 123c0 <argp_failure@@Base+0x1444>
   12384:	ldur	w26, [x24, #-16]
   12388:	sub	w8, w26, #0x1
   1238c:	cmp	w8, #0xfe
   12390:	b.hi	123c0 <argp_failure@@Base+0x1444>  // b.pmore
   12394:	bl	a910 <__ctype_b_loc@plt>
   12398:	ldr	x8, [x0]
   1239c:	ldrh	w8, [x8, x26, lsl #1]
   123a0:	tbz	w8, #14, 123c0 <argp_failure@@Base+0x1444>
   123a4:	ldrb	w8, [x22]
   123a8:	cmp	w26, w8
   123ac:	b.ne	123c0 <argp_failure@@Base+0x1444>  // b.any
   123b0:	tst	w21, #0x2
   123b4:	csel	w21, w26, wzr, eq  // eq = none
   123b8:	add	x22, x22, #0x1
   123bc:	b	123c4 <argp_failure@@Base+0x1448>
   123c0:	mov	w21, wzr
   123c4:	subs	w25, w25, #0x1
   123c8:	b.cc	123d4 <argp_failure@@Base+0x1458>  // b.lo, b.ul, b.last
   123cc:	add	x24, x24, #0x30
   123d0:	cbz	w21, 1237c <argp_failure@@Base+0x1400>
   123d4:	ldr	w24, [x20, #8]
   123d8:	cbz	w24, 124c4 <argp_failure@@Base+0x1548>
   123dc:	ldr	x25, [x20]
   123e0:	ldr	x20, [x20, #16]
   123e4:	sub	w27, w24, #0x1
   123e8:	add	x26, x25, #0x18
   123ec:	ldr	w22, [x26]
   123f0:	tbnz	w22, #3, 12430 <argp_failure@@Base+0x14b4>
   123f4:	ldur	w28, [x26, #-16]
   123f8:	sub	w8, w28, #0x1
   123fc:	cmp	w8, #0xfe
   12400:	b.hi	12430 <argp_failure@@Base+0x14b4>  // b.pmore
   12404:	bl	a910 <__ctype_b_loc@plt>
   12408:	ldr	x8, [x0]
   1240c:	ldrh	w8, [x8, x28, lsl #1]
   12410:	tbz	w8, #14, 12430 <argp_failure@@Base+0x14b4>
   12414:	ldrb	w8, [x20]
   12418:	cmp	w28, w8
   1241c:	b.ne	12430 <argp_failure@@Base+0x14b4>  // b.any
   12420:	tst	w22, #0x2
   12424:	csel	w22, w28, wzr, eq  // eq = none
   12428:	add	x20, x20, #0x1
   1242c:	b	12434 <argp_failure@@Base+0x14b8>
   12430:	mov	w22, wzr
   12434:	subs	w27, w27, #0x1
   12438:	b.cc	12444 <argp_failure@@Base+0x14c8>  // b.lo, b.ul, b.last
   1243c:	add	x26, x26, #0x30
   12440:	cbz	w22, 123ec <argp_failure@@Base+0x1470>
   12444:	ldr	x9, [x19]
   12448:	ldr	w26, [x25, #24]
   1244c:	ldr	w8, [x9, #24]
   12450:	cbnz	w23, 124f0 <argp_failure@@Base+0x1574>
   12454:	b	124dc <argp_failure@@Base+0x1560>
   12458:	tst	w10, w11
   1245c:	b.lt	12650 <argp_failure@@Base+0x16d4>  // b.tstop
   12460:	orr	w8, w10, w11
   12464:	tbz	w8, #31, 12650 <argp_failure@@Base+0x16d4>
   12468:	sub	w0, w10, w11
   1246c:	b	12650 <argp_failure@@Base+0x16d4>
   12470:	tst	w9, w8
   12474:	b.lt	12650 <argp_failure@@Base+0x16d4>  // b.tstop
   12478:	orr	w10, w9, w8
   1247c:	tbz	w10, #31, 12650 <argp_failure@@Base+0x16d4>
   12480:	sub	w0, w9, w8
   12484:	b	12650 <argp_failure@@Base+0x16d4>
   12488:	tst	w8, w11
   1248c:	b.lt	12650 <argp_failure@@Base+0x16d4>  // b.tstop
   12490:	orr	w9, w8, w11
   12494:	tbz	w9, #31, 12650 <argp_failure@@Base+0x16d4>
   12498:	sub	w0, w8, w11
   1249c:	b	12650 <argp_failure@@Base+0x16d4>
   124a0:	tst	w8, w10
   124a4:	b.lt	12650 <argp_failure@@Base+0x16d4>  // b.tstop
   124a8:	orr	w9, w8, w10
   124ac:	tbz	w9, #31, 12650 <argp_failure@@Base+0x16d4>
   124b0:	sub	w0, w10, w8
   124b4:	b	12650 <argp_failure@@Base+0x16d4>
   124b8:	mov	w21, wzr
   124bc:	ldr	w24, [x20, #8]
   124c0:	cbnz	w24, 123dc <argp_failure@@Base+0x1460>
   124c4:	ldr	x25, [x20]
   124c8:	mov	w22, wzr
   124cc:	ldr	x9, [x19]
   124d0:	ldr	w26, [x25, #24]
   124d4:	ldr	w8, [x9, #24]
   124d8:	cbnz	w23, 124f0 <argp_failure@@Base+0x1574>
   124dc:	mov	x19, xzr
   124e0:	b	12500 <argp_failure@@Base+0x1584>
   124e4:	subs	w23, w23, #0x1
   124e8:	add	x9, x9, #0x30
   124ec:	b.eq	124dc <argp_failure@@Base+0x1560>  // b.none
   124f0:	ldr	x19, [x9]
   124f4:	cbz	x19, 124e4 <argp_failure@@Base+0x1568>
   124f8:	ldrb	w10, [x9, #24]
   124fc:	tbnz	w10, #1, 124e4 <argp_failure@@Base+0x1568>
   12500:	cbnz	w24, 12518 <argp_failure@@Base+0x159c>
   12504:	mov	x20, xzr
   12508:	b	12528 <argp_failure@@Base+0x15ac>
   1250c:	subs	w24, w24, #0x1
   12510:	add	x25, x25, #0x30
   12514:	b.eq	12504 <argp_failure@@Base+0x1588>  // b.none
   12518:	ldr	x20, [x25]
   1251c:	cbz	x20, 1250c <argp_failure@@Base+0x1590>
   12520:	ldrb	w9, [x25, #24]
   12524:	tbnz	w9, #1, 1250c <argp_failure@@Base+0x1590>
   12528:	mov	w23, wzr
   1252c:	tbz	w8, #3, 12574 <argp_failure@@Base+0x15f8>
   12530:	cbz	x19, 12574 <argp_failure@@Base+0x15f8>
   12534:	bl	a910 <__ctype_b_loc@plt>
   12538:	ldr	x8, [x0]
   1253c:	ldrb	w9, [x19]
   12540:	ldrh	w10, [x8, x9, lsl #1]
   12544:	tbz	w10, #13, 12554 <argp_failure@@Base+0x15d8>
   12548:	ldrb	w9, [x19, #1]!
   1254c:	ldrh	w10, [x8, x9, lsl #1]
   12550:	tbnz	w10, #13, 12548 <argp_failure@@Base+0x15cc>
   12554:	cmp	w9, #0x2d
   12558:	cset	w23, ne  // ne = any
   1255c:	cbz	w9, 12574 <argp_failure@@Base+0x15f8>
   12560:	and	x9, x9, #0xff
   12564:	ldrh	w9, [x8, x9, lsl #1]
   12568:	tbnz	w9, #3, 12574 <argp_failure@@Base+0x15f8>
   1256c:	ldrb	w9, [x19, #1]!
   12570:	cbnz	w9, 12560 <argp_failure@@Base+0x15e4>
   12574:	mov	w9, wzr
   12578:	tbz	w26, #3, 125c0 <argp_failure@@Base+0x1644>
   1257c:	cbz	x20, 125c0 <argp_failure@@Base+0x1644>
   12580:	bl	a910 <__ctype_b_loc@plt>
   12584:	ldr	x8, [x0]
   12588:	ldrb	w10, [x20]
   1258c:	ldrh	w9, [x8, x10, lsl #1]
   12590:	tbz	w9, #13, 125a0 <argp_failure@@Base+0x1624>
   12594:	ldrb	w10, [x20, #1]!
   12598:	ldrh	w9, [x8, x10, lsl #1]
   1259c:	tbnz	w9, #13, 12594 <argp_failure@@Base+0x1618>
   125a0:	cmp	w10, #0x2d
   125a4:	cset	w9, ne  // ne = any
   125a8:	cbz	w10, 125c0 <argp_failure@@Base+0x1644>
   125ac:	and	x10, x10, #0xff
   125b0:	ldrh	w10, [x8, x10, lsl #1]
   125b4:	tbnz	w10, #3, 125c0 <argp_failure@@Base+0x1644>
   125b8:	ldrb	w10, [x20, #1]!
   125bc:	cbnz	w10, 125ac <argp_failure@@Base+0x1630>
   125c0:	subs	w0, w23, w9
   125c4:	b.ne	12650 <argp_failure@@Base+0x16d4>  // b.any
   125c8:	orr	w8, w22, w21
   125cc:	tst	w8, #0xff
   125d0:	b.ne	12600 <argp_failure@@Base+0x1684>  // b.any
   125d4:	cbz	x19, 12600 <argp_failure@@Base+0x1684>
   125d8:	cbz	x20, 12600 <argp_failure@@Base+0x1684>
   125dc:	mov	x0, x19
   125e0:	mov	x1, x20
   125e4:	ldp	x20, x19, [sp, #80]
   125e8:	ldp	x22, x21, [sp, #64]
   125ec:	ldp	x24, x23, [sp, #48]
   125f0:	ldp	x26, x25, [sp, #32]
   125f4:	ldp	x28, x27, [sp, #16]
   125f8:	ldp	x29, x30, [sp], #96
   125fc:	b	a710 <strcasecmp@plt>
   12600:	tst	w21, #0xff
   12604:	b.ne	12610 <argp_failure@@Base+0x1694>  // b.any
   12608:	cbz	x19, 12610 <argp_failure@@Base+0x1694>
   1260c:	ldrb	w21, [x19]
   12610:	tst	w22, #0xff
   12614:	b.ne	12628 <argp_failure@@Base+0x16ac>  // b.any
   12618:	cbz	x20, 12624 <argp_failure@@Base+0x16a8>
   1261c:	ldrb	w22, [x20]
   12620:	b	12628 <argp_failure@@Base+0x16ac>
   12624:	mov	w22, wzr
   12628:	bl	a490 <__ctype_tolower_loc@plt>
   1262c:	ldr	x8, [x0]
   12630:	and	x9, x21, #0xff
   12634:	and	x10, x22, #0xff
   12638:	ldr	w9, [x8, x9, lsl #2]
   1263c:	ldr	w8, [x8, x10, lsl #2]
   12640:	and	w10, w22, #0xff
   12644:	subs	w8, w9, w8
   12648:	sub	w9, w10, w21, uxtb
   1264c:	csel	w0, w9, w8, eq  // eq = none
   12650:	ldp	x20, x19, [sp, #80]
   12654:	ldp	x22, x21, [sp, #64]
   12658:	ldp	x24, x23, [sp, #48]
   1265c:	ldp	x26, x25, [sp, #32]
   12660:	ldp	x28, x27, [sp, #16]
   12664:	ldp	x29, x30, [sp], #96
   12668:	ret
   1266c:	stp	x29, x30, [sp, #-64]!
   12670:	stp	x22, x21, [sp, #32]
   12674:	stp	x20, x19, [sp, #48]
   12678:	ldr	w8, [x1, #24]
   1267c:	mov	x20, x1
   12680:	mov	w19, w0
   12684:	str	x23, [sp, #16]
   12688:	mov	x29, sp
   1268c:	cbz	w8, 12770 <argp_failure@@Base+0x17f4>
   12690:	ldr	x9, [x20, #16]
   12694:	ldr	x8, [x20]
   12698:	ldr	x23, [x9]
   1269c:	ldr	x22, [x8, #32]
   126a0:	cbz	x23, 126f0 <argp_failure@@Base+0x1774>
   126a4:	ldr	w9, [x9, #8]
   126a8:	cbz	w9, 126f0 <argp_failure@@Base+0x1774>
   126ac:	ldr	w8, [x8, #24]
   126b0:	ldr	w9, [x23, #24]
   126b4:	cmp	w8, w9
   126b8:	b.eq	126f0 <argp_failure@@Base+0x1774>  // b.none
   126bc:	ldr	x21, [x20, #8]
   126c0:	ldp	x8, x9, [x21, #56]
   126c4:	cmp	x8, x9
   126c8:	b.cc	126e0 <argp_failure@@Base+0x1764>  // b.lo, b.ul, b.last
   126cc:	mov	w1, #0x1                   	// #1
   126d0:	mov	x0, x21
   126d4:	bl	ac70 <_argp_fmtstream_ensure@plt>
   126d8:	cbz	w0, 126f0 <argp_failure@@Base+0x1774>
   126dc:	ldr	x8, [x21, #56]
   126e0:	add	x9, x8, #0x1
   126e4:	mov	w10, #0xa                   	// #10
   126e8:	str	x9, [x21, #56]
   126ec:	strb	w10, [x8]
   126f0:	cbz	x22, 12768 <argp_failure@@Base+0x17ec>
   126f4:	ldr	x0, [x22]
   126f8:	cbz	x0, 12768 <argp_failure@@Base+0x17ec>
   126fc:	ldrb	w8, [x0]
   12700:	cbz	w8, 12768 <argp_failure@@Base+0x17ec>
   12704:	cbz	x23, 12730 <argp_failure@@Base+0x17b4>
   12708:	ldr	x8, [x23, #32]
   1270c:	cmp	x8, x22
   12710:	b.eq	12768 <argp_failure@@Base+0x17ec>  // b.none
   12714:	cbz	x8, 12728 <argp_failure@@Base+0x17ac>
   12718:	ldr	x8, [x8, #16]
   1271c:	cmp	x8, x22
   12720:	b.eq	12728 <argp_failure@@Base+0x17ac>  // b.none
   12724:	cbnz	x8, 12718 <argp_failure@@Base+0x179c>
   12728:	cmp	x8, x22
   1272c:	b.eq	12768 <argp_failure@@Base+0x17ec>  // b.none
   12730:	ldr	x8, [x20, #8]
   12734:	ldr	x1, [x22, #24]
   12738:	mov	x2, x20
   1273c:	ldrsw	x23, [x8, #24]
   12740:	bl	12840 <argp_failure@@Base+0x18c4>
   12744:	ldr	x21, [x20, #8]
   12748:	ldp	x9, x8, [x21, #48]
   1274c:	ldr	x10, [x21, #32]
   12750:	sub	x8, x8, x9
   12754:	cmp	x8, x10
   12758:	b.ls	12764 <argp_failure@@Base+0x17e8>  // b.plast
   1275c:	mov	x0, x21
   12760:	bl	a480 <_argp_fmtstream_update@plt>
   12764:	str	x23, [x21, #24]
   12768:	str	wzr, [x20, #24]
   1276c:	b	127ac <argp_failure@@Base+0x1830>
   12770:	ldr	x21, [x20, #8]
   12774:	ldp	x8, x9, [x21, #56]
   12778:	add	x10, x8, #0x2
   1277c:	cmp	x10, x9
   12780:	b.ls	12798 <argp_failure@@Base+0x181c>  // b.plast
   12784:	mov	w1, #0x2                   	// #2
   12788:	mov	x0, x21
   1278c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12790:	cbz	w0, 127ac <argp_failure@@Base+0x1830>
   12794:	ldr	x8, [x21, #56]
   12798:	mov	w9, #0x202c                	// #8236
   1279c:	strh	w9, [x8]
   127a0:	ldr	x8, [x21, #56]
   127a4:	add	x8, x8, #0x2
   127a8:	str	x8, [x21, #56]
   127ac:	ldr	x20, [x20, #8]
   127b0:	ldp	x9, x8, [x20, #48]
   127b4:	ldr	x10, [x20, #32]
   127b8:	sub	x8, x8, x9
   127bc:	cmp	x8, x10
   127c0:	b.ls	127cc <argp_failure@@Base+0x1850>  // b.plast
   127c4:	mov	x0, x20
   127c8:	bl	a480 <_argp_fmtstream_update@plt>
   127cc:	ldr	x8, [x20, #40]
   127d0:	cmp	x8, #0x0
   127d4:	csel	w8, w8, wzr, gt
   127d8:	sub	w8, w19, w8
   127dc:	cmp	w8, #0x1
   127e0:	b.lt	1282c <argp_failure@@Base+0x18b0>  // b.tstop
   127e4:	add	w19, w8, #0x1
   127e8:	mov	w21, #0x20                  	// #32
   127ec:	b	12808 <argp_failure@@Base+0x188c>
   127f0:	add	x9, x8, #0x1
   127f4:	str	x9, [x20, #56]
   127f8:	strb	w21, [x8]
   127fc:	sub	w19, w19, #0x1
   12800:	cmp	w19, #0x1
   12804:	b.le	1282c <argp_failure@@Base+0x18b0>
   12808:	ldp	x8, x9, [x20, #56]
   1280c:	cmp	x8, x9
   12810:	b.cc	127f0 <argp_failure@@Base+0x1874>  // b.lo, b.ul, b.last
   12814:	mov	w1, #0x1                   	// #1
   12818:	mov	x0, x20
   1281c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12820:	cbz	w0, 127fc <argp_failure@@Base+0x1880>
   12824:	ldr	x8, [x20, #56]
   12828:	b	127f0 <argp_failure@@Base+0x1874>
   1282c:	ldp	x20, x19, [sp, #48]
   12830:	ldp	x22, x21, [sp, #32]
   12834:	ldr	x23, [sp, #16]
   12838:	ldp	x29, x30, [sp], #64
   1283c:	ret
   12840:	stp	x29, x30, [sp, #-80]!
   12844:	stp	x22, x21, [sp, #48]
   12848:	stp	x20, x19, [sp, #64]
   1284c:	mov	x19, x2
   12850:	mov	x22, x1
   12854:	str	x25, [sp, #16]
   12858:	stp	x24, x23, [sp, #32]
   1285c:	mov	x29, sp
   12860:	cbz	x0, 12980 <argp_failure@@Base+0x1a04>
   12864:	mov	x1, x0
   12868:	ldr	x0, [x22, #48]
   1286c:	mov	w2, #0x5                   	// #5
   12870:	bl	ac90 <dcgettext@plt>
   12874:	mov	x20, x0
   12878:	ldr	x8, [x22, #40]
   1287c:	mov	x21, x20
   12880:	cbz	x8, 128ac <argp_failure@@Base+0x1930>
   12884:	ldr	x1, [x19, #32]
   12888:	mov	x0, x22
   1288c:	bl	ab50 <_argp_input@plt>
   12890:	ldr	x8, [x22, #40]
   12894:	mov	x2, x0
   12898:	mov	w0, #0x3                   	// #3
   1289c:	movk	w0, #0x200, lsl #16
   128a0:	mov	x1, x20
   128a4:	blr	x8
   128a8:	mov	x21, x0
   128ac:	cbz	x21, 12ac4 <argp_failure@@Base+0x1b48>
   128b0:	ldrb	w8, [x21]
   128b4:	cbz	w8, 12ab8 <argp_failure@@Base+0x1b3c>
   128b8:	ldr	x8, [x19, #16]
   128bc:	ldr	x8, [x8]
   128c0:	cbz	x8, 128f8 <argp_failure@@Base+0x197c>
   128c4:	ldr	x22, [x19, #8]
   128c8:	ldp	x8, x9, [x22, #56]
   128cc:	cmp	x8, x9
   128d0:	b.cc	128e8 <argp_failure@@Base+0x196c>  // b.lo, b.ul, b.last
   128d4:	mov	w1, #0x1                   	// #1
   128d8:	mov	x0, x22
   128dc:	bl	ac70 <_argp_fmtstream_ensure@plt>
   128e0:	cbz	w0, 128f8 <argp_failure@@Base+0x197c>
   128e4:	ldr	x8, [x22, #56]
   128e8:	add	x9, x8, #0x1
   128ec:	mov	w10, #0xa                   	// #10
   128f0:	str	x9, [x22, #56]
   128f4:	strb	w10, [x8]
   128f8:	ldr	x22, [x19, #8]
   128fc:	adrp	x24, 46000 <base_len@@Base+0x30a14>
   12900:	ldr	w23, [x24, #1688]
   12904:	ldp	x9, x8, [x22, #48]
   12908:	ldr	x10, [x22, #32]
   1290c:	sub	x8, x8, x9
   12910:	cmp	x8, x10
   12914:	b.ls	12920 <argp_failure@@Base+0x19a4>  // b.plast
   12918:	mov	x0, x22
   1291c:	bl	a480 <_argp_fmtstream_update@plt>
   12920:	ldr	x8, [x22, #40]
   12924:	cmp	x8, #0x0
   12928:	csel	w8, w8, wzr, gt
   1292c:	sub	w8, w23, w8
   12930:	cmp	w8, #0x1
   12934:	b.lt	12998 <argp_failure@@Base+0x1a1c>  // b.tstop
   12938:	add	w23, w8, #0x1
   1293c:	mov	w25, #0x20                  	// #32
   12940:	b	1295c <argp_failure@@Base+0x19e0>
   12944:	add	x9, x8, #0x1
   12948:	str	x9, [x22, #56]
   1294c:	strb	w25, [x8]
   12950:	sub	w23, w23, #0x1
   12954:	cmp	w23, #0x1
   12958:	b.le	12998 <argp_failure@@Base+0x1a1c>
   1295c:	ldp	x8, x9, [x22, #56]
   12960:	cmp	x8, x9
   12964:	b.cc	12944 <argp_failure@@Base+0x19c8>  // b.lo, b.ul, b.last
   12968:	mov	w1, #0x1                   	// #1
   1296c:	mov	x0, x22
   12970:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12974:	cbz	w0, 12950 <argp_failure@@Base+0x19d4>
   12978:	ldr	x8, [x22, #56]
   1297c:	b	12944 <argp_failure@@Base+0x19c8>
   12980:	cbz	x22, 12ae8 <argp_failure@@Base+0x1b6c>
   12984:	mov	x20, xzr
   12988:	ldr	x8, [x22, #40]
   1298c:	mov	x21, x20
   12990:	cbnz	x8, 12884 <argp_failure@@Base+0x1908>
   12994:	b	128ac <argp_failure@@Base+0x1930>
   12998:	ldr	x22, [x19, #8]
   1299c:	ldrsw	x25, [x24, #1688]
   129a0:	ldp	x10, x9, [x22, #48]
   129a4:	ldr	x8, [x22, #32]
   129a8:	sub	x9, x9, x10
   129ac:	cmp	x9, x8
   129b0:	b.ls	129e4 <argp_failure@@Base+0x1a68>  // b.plast
   129b4:	mov	x0, x22
   129b8:	bl	a480 <_argp_fmtstream_update@plt>
   129bc:	ldr	x23, [x19, #8]
   129c0:	ldrsw	x24, [x24, #1688]
   129c4:	ldp	x10, x9, [x23, #48]
   129c8:	ldr	x8, [x23, #32]
   129cc:	sub	x9, x9, x10
   129d0:	cmp	x9, x8
   129d4:	str	x25, [x22, #8]
   129d8:	mov	x22, x23
   129dc:	b.hi	129fc <argp_failure@@Base+0x1a80>  // b.pmore
   129e0:	b	12a08 <argp_failure@@Base+0x1a8c>
   129e4:	mov	x24, x25
   129e8:	mov	x23, x22
   129ec:	cmp	x9, x8
   129f0:	str	x25, [x22, #8]
   129f4:	mov	x22, x23
   129f8:	b.ls	12a08 <argp_failure@@Base+0x1a8c>  // b.plast
   129fc:	mov	x0, x23
   12a00:	bl	a480 <_argp_fmtstream_update@plt>
   12a04:	ldr	x22, [x19, #8]
   12a08:	mov	x0, x21
   12a0c:	str	x24, [x23, #24]
   12a10:	bl	a290 <strlen@plt>
   12a14:	cbz	x0, 12a58 <argp_failure@@Base+0x1adc>
   12a18:	mov	x23, x0
   12a1c:	ldp	x0, x8, [x22, #56]
   12a20:	add	x9, x0, x23
   12a24:	cmp	x9, x8
   12a28:	b.ls	12a40 <argp_failure@@Base+0x1ac4>  // b.plast
   12a2c:	mov	x0, x22
   12a30:	mov	x1, x23
   12a34:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12a38:	cbz	w0, 12a58 <argp_failure@@Base+0x1adc>
   12a3c:	ldr	x0, [x22, #56]
   12a40:	mov	x1, x21
   12a44:	mov	x2, x23
   12a48:	bl	a210 <memcpy@plt>
   12a4c:	ldr	x8, [x22, #56]
   12a50:	add	x8, x8, x23
   12a54:	str	x8, [x22, #56]
   12a58:	ldr	x23, [x19, #8]
   12a5c:	ldp	x9, x8, [x23, #48]
   12a60:	ldr	x10, [x23, #32]
   12a64:	mov	x22, x23
   12a68:	sub	x9, x8, x9
   12a6c:	cmp	x9, x10
   12a70:	b.ls	12a84 <argp_failure@@Base+0x1b08>  // b.plast
   12a74:	mov	x0, x23
   12a78:	bl	a480 <_argp_fmtstream_update@plt>
   12a7c:	ldr	x22, [x19, #8]
   12a80:	ldr	x8, [x22, #56]
   12a84:	str	xzr, [x23, #8]
   12a88:	ldr	x9, [x22, #64]
   12a8c:	cmp	x8, x9
   12a90:	b.cc	12aa8 <argp_failure@@Base+0x1b2c>  // b.lo, b.ul, b.last
   12a94:	mov	w1, #0x1                   	// #1
   12a98:	mov	x0, x22
   12a9c:	bl	ac70 <_argp_fmtstream_ensure@plt>
   12aa0:	cbz	w0, 12ab8 <argp_failure@@Base+0x1b3c>
   12aa4:	ldr	x8, [x22, #56]
   12aa8:	add	x9, x8, #0x1
   12aac:	mov	w10, #0xa                   	// #10
   12ab0:	str	x9, [x22, #56]
   12ab4:	strb	w10, [x8]
   12ab8:	ldr	x8, [x19, #16]
   12abc:	mov	w9, #0x1                   	// #1
   12ac0:	str	w9, [x8, #8]
   12ac4:	cmp	x21, x20
   12ac8:	b.eq	12ae8 <argp_failure@@Base+0x1b6c>  // b.none
   12acc:	mov	x0, x21
   12ad0:	ldp	x20, x19, [sp, #64]
   12ad4:	ldp	x22, x21, [sp, #48]
   12ad8:	ldp	x24, x23, [sp, #32]
   12adc:	ldr	x25, [sp, #16]
   12ae0:	ldp	x29, x30, [sp], #80
   12ae4:	b	a970 <free@plt>
   12ae8:	ldp	x20, x19, [sp, #64]
   12aec:	ldp	x22, x21, [sp, #48]
   12af0:	ldp	x24, x23, [sp, #32]
   12af4:	ldr	x25, [sp, #16]
   12af8:	ldp	x29, x30, [sp], #80
   12afc:	ret

0000000000012b00 <argp_parse@@Base>:
   12b00:	stp	x29, x30, [sp, #-96]!
   12b04:	stp	x28, x27, [sp, #16]
   12b08:	stp	x26, x25, [sp, #32]
   12b0c:	stp	x24, x23, [sp, #48]
   12b10:	stp	x22, x21, [sp, #64]
   12b14:	stp	x20, x19, [sp, #80]
   12b18:	mov	x29, sp
   12b1c:	sub	sp, sp, #0x180
   12b20:	mov	x19, sp
   12b24:	mov	x28, x4
   12b28:	mov	w24, w3
   12b2c:	mov	x21, x2
   12b30:	mov	x25, x0
   12b34:	str	x5, [x19, #16]
   12b38:	str	w1, [x19, #28]
   12b3c:	tbnz	w3, #0, 12b60 <argp_parse@@Base+0x60>
   12b40:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   12b44:	ldr	x8, [x8, #3768]
   12b48:	ldr	x9, [x8]
   12b4c:	cbz	x9, 12ecc <argp_parse@@Base+0x3cc>
   12b50:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
   12b54:	ldr	x20, [x20, #4008]
   12b58:	ldr	x8, [x20]
   12b5c:	cbz	x8, 12ee4 <argp_parse@@Base+0x3e4>
   12b60:	add	x22, x19, #0x28
   12b64:	tbnz	w24, #4, 12bfc <argp_parse@@Base+0xfc>
   12b68:	mov	x10, sp
   12b6c:	sub	x8, x10, #0x80
   12b70:	mov	sp, x8
   12b74:	mov	x11, sp
   12b78:	sub	x9, x11, #0x40
   12b7c:	mov	sp, x9
   12b80:	movi	v0.2d, #0x0
   12b84:	stur	xzr, [x11, #-16]
   12b88:	stp	q0, q0, [x11, #-48]
   12b8c:	stur	q0, [x11, #-64]
   12b90:	stur	x8, [x11, #-32]
   12b94:	stp	q0, q0, [x10, #-32]
   12b98:	stp	q0, q0, [x10, #-64]
   12b9c:	stp	q0, q0, [x10, #-96]
   12ba0:	stp	q0, q0, [x10, #-128]
   12ba4:	cbz	x25, 12bac <argp_parse@@Base+0xac>
   12ba8:	str	x25, [x8], #32
   12bac:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   12bb0:	ldr	x10, [x10, #3936]
   12bb4:	adrp	x11, 45000 <vasnprintf@@Base+0x14474>
   12bb8:	add	x11, x11, #0x780
   12bbc:	str	x11, [x8]
   12bc0:	ldr	x10, [x10]
   12bc4:	cbnz	x10, 12be0 <argp_parse@@Base+0xe0>
   12bc8:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   12bcc:	ldr	x10, [x10, #4056]
   12bd0:	ldr	x10, [x10]
   12bd4:	cbnz	x10, 12be0 <argp_parse@@Base+0xe0>
   12bd8:	mov	w10, #0x1                   	// #1
   12bdc:	b	12bf0 <argp_parse@@Base+0xf0>
   12be0:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   12be4:	add	x10, x10, #0x7b8
   12be8:	str	x10, [x8, #32]
   12bec:	mov	w10, #0x2                   	// #2
   12bf0:	lsl	x10, x10, #5
   12bf4:	mov	x25, x9
   12bf8:	str	xzr, [x8, x10]
   12bfc:	mov	w8, #0x1                   	// #1
   12c00:	movi	v0.2d, #0x0
   12c04:	bic	w8, w8, w24, lsr #2
   12c08:	stur	q0, [x22, #248]
   12c0c:	stur	q0, [x22, #232]
   12c10:	stur	q0, [x22, #216]
   12c14:	stp	x8, xzr, [x29, #-80]
   12c18:	stp	xzr, xzr, [x29, #-64]
   12c1c:	str	x21, [x19, #32]
   12c20:	cbz	x25, 12c54 <argp_parse@@Base+0x154>
   12c24:	sub	x1, x29, #0x50
   12c28:	mov	x0, x25
   12c2c:	bl	13898 <_argp_input@@Base+0x214>
   12c30:	ldp	x9, x10, [x29, #-64]
   12c34:	ldp	x8, x11, [x29, #-80]
   12c38:	mov	w12, #0x48                  	// #72
   12c3c:	mul	x9, x9, x12
   12c40:	lsl	x27, x10, #3
   12c44:	lsl	x10, x11, #5
   12c48:	add	x21, x9, #0x48
   12c4c:	add	x9, x10, #0x20
   12c50:	b	12c60 <argp_parse@@Base+0x160>
   12c54:	mov	x27, xzr
   12c58:	mov	w21, #0x48                  	// #72
   12c5c:	mov	w9, #0x20                  	// #32
   12c60:	add	x23, x21, x27
   12c64:	add	x20, x23, x9
   12c68:	add	x8, x8, x20
   12c6c:	add	x0, x8, #0x1
   12c70:	bl	a550 <malloc@plt>
   12c74:	str	x0, [x19, #248]
   12c78:	cbz	x0, 12ce8 <argp_parse@@Base+0x1e8>
   12c7c:	ldur	q1, [x22, #216]
   12c80:	ldur	q2, [x22, #232]
   12c84:	ldur	q3, [x22, #248]
   12c88:	str	x28, [x19, #8]
   12c8c:	add	x28, x0, x21
   12c90:	mov	x26, x0
   12c94:	add	x23, x0, x23
   12c98:	add	x21, x0, x20
   12c9c:	movi	v0.2s, #0x1
   12ca0:	str	x0, [x19, #120]
   12ca4:	mov	x0, x28
   12ca8:	mov	w1, wzr
   12cac:	mov	x2, x27
   12cb0:	str	x28, [x19, #136]
   12cb4:	stp	x21, x23, [x19, #48]
   12cb8:	str	d0, [x19, #64]
   12cbc:	stur	q1, [x19, #72]
   12cc0:	stur	q2, [x19, #88]
   12cc4:	stur	q3, [x19, #104]
   12cc8:	bl	a640 <memset@plt>
   12ccc:	add	x8, x19, #0x28
   12cd0:	stp	x8, x21, [x29, #-48]
   12cd4:	stp	x23, x28, [x29, #-32]
   12cd8:	tbnz	w24, #3, 12cf0 <argp_parse@@Base+0x1f0>
   12cdc:	tbz	w24, #2, 12cfc <argp_parse@@Base+0x1fc>
   12ce0:	mov	w8, #0x2b                  	// #43
   12ce4:	b	12cf4 <argp_parse@@Base+0x1f4>
   12ce8:	mov	w24, #0xc                   	// #12
   12cec:	b	135dc <argp_parse@@Base+0xadc>
   12cf0:	mov	w8, #0x2d                  	// #45
   12cf4:	strb	w8, [x21], #1
   12cf8:	stur	x21, [x29, #-40]
   12cfc:	strb	wzr, [x21]
   12d00:	str	xzr, [x23]
   12d04:	str	x25, [x19, #40]
   12d08:	cbz	x25, 12d38 <argp_parse@@Base+0x238>
   12d0c:	sub	x4, x29, #0x30
   12d10:	mov	x0, x25
   12d14:	mov	x1, xzr
   12d18:	mov	w2, wzr
   12d1c:	mov	x3, x26
   12d20:	bl	13964 <_argp_input@@Base+0x2e0>
   12d24:	ldr	x8, [x19, #40]
   12d28:	ldr	x25, [x19, #120]
   12d2c:	mov	x26, x0
   12d30:	str	x0, [x19, #128]
   12d34:	b	12d44 <argp_parse@@Base+0x244>
   12d38:	mov	x8, xzr
   12d3c:	mov	x25, x26
   12d40:	str	x26, [x19, #128]
   12d44:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   12d48:	adrp	x11, 45000 <vasnprintf@@Base+0x14474>
   12d4c:	ldr	w12, [x19, #28]
   12d50:	ldr	x10, [x10, #3816]
   12d54:	ldr	x11, [x11, #3872]
   12d58:	ldr	x20, [x19, #32]
   12d5c:	mov	w27, #0x6                   	// #6
   12d60:	ldr	x10, [x10]
   12d64:	ldr	x11, [x11]
   12d68:	add	x9, x19, #0x28
   12d6c:	movi	v0.2d, #0x0
   12d70:	movk	w27, #0x100, lsl #16
   12d74:	cmp	x25, x26
   12d78:	stur	q0, [x19, #152]
   12d7c:	str	x8, [x19, #152]
   12d80:	mov	w8, #0x1                   	// #1
   12d84:	add	x21, x9, #0x70
   12d88:	stur	q0, [x19, #168]
   12d8c:	str	w12, [x19, #160]
   12d90:	stur	q0, [x19, #184]
   12d94:	stur	q0, [x19, #200]
   12d98:	str	x20, [x19, #168]
   12d9c:	stp	wzr, w24, [x19, #176]
   12da0:	stp	xzr, x10, [x19, #216]
   12da4:	stp	x11, x9, [x19, #232]
   12da8:	str	w8, [x19, #144]
   12dac:	b.cs	12e78 <argp_parse@@Base+0x378>  // b.hs, b.nlast
   12db0:	ldr	x8, [x19, #16]
   12db4:	mov	w24, wzr
   12db8:	sub	w23, w27, #0x3
   12dbc:	str	x8, [x25, #48]
   12dc0:	b	12e08 <argp_parse@@Base+0x308>
   12dc4:	ldr	x9, [x25, #64]
   12dc8:	mov	w0, w23
   12dcc:	mov	x1, xzr
   12dd0:	mov	x2, x21
   12dd4:	str	x9, [x19, #208]
   12dd8:	ldr	q0, [x25, #48]
   12ddc:	stur	q0, [x22, #152]
   12de0:	ldr	w9, [x25, #24]
   12de4:	str	w9, [x19, #184]
   12de8:	blr	x8
   12dec:	ldr	x8, [x19, #208]
   12df0:	mov	w24, w0
   12df4:	str	x8, [x25, #64]
   12df8:	ldr	x8, [x19, #128]
   12dfc:	add	x25, x25, #0x48
   12e00:	cmp	x25, x8
   12e04:	b.cs	12e6c <argp_parse@@Base+0x36c>  // b.hs, b.nlast
   12e08:	cmp	w24, #0x7
   12e0c:	b.eq	12e14 <argp_parse@@Base+0x314>  // b.none
   12e10:	cbnz	w24, 135dc <argp_parse@@Base+0xadc>
   12e14:	ldr	x8, [x25, #32]
   12e18:	cbz	x8, 12e2c <argp_parse@@Base+0x32c>
   12e1c:	ldr	x8, [x8, #56]
   12e20:	ldr	w9, [x25, #40]
   12e24:	ldr	x8, [x8, x9, lsl #3]
   12e28:	str	x8, [x25, #48]
   12e2c:	ldr	x8, [x25]
   12e30:	cbnz	x8, 12dc4 <argp_parse@@Base+0x2c4>
   12e34:	ldr	x8, [x25, #8]
   12e38:	ldr	x8, [x8, #32]
   12e3c:	cbz	x8, 12e58 <argp_parse@@Base+0x358>
   12e40:	ldr	x8, [x8]
   12e44:	cbz	x8, 12e58 <argp_parse@@Base+0x358>
   12e48:	ldp	x8, x9, [x25, #48]
   12e4c:	str	x8, [x9]
   12e50:	ldr	x8, [x25]
   12e54:	cbnz	x8, 12dc4 <argp_parse@@Base+0x2c4>
   12e58:	mov	w24, #0x7                   	// #7
   12e5c:	ldr	x8, [x19, #128]
   12e60:	add	x25, x25, #0x48
   12e64:	cmp	x25, x8
   12e68:	b.cc	12e08 <argp_parse@@Base+0x308>  // b.lo, b.ul, b.last
   12e6c:	cmp	w24, #0x7
   12e70:	b.eq	12e78 <argp_parse@@Base+0x378>  // b.none
   12e74:	cbnz	w24, 135dc <argp_parse@@Base+0xadc>
   12e78:	ldr	w8, [x19, #180]
   12e7c:	tbnz	w8, #1, 12e8c <argp_parse@@Base+0x38c>
   12e80:	mov	w8, #0x1                   	// #1
   12e84:	str	w8, [x19, #68]
   12e88:	b	12eac <argp_parse@@Base+0x3ac>
   12e8c:	str	wzr, [x19, #68]
   12e90:	tbz	w8, #0, 12eac <argp_parse@@Base+0x3ac>
   12e94:	ldr	x8, [x19, #168]
   12e98:	ldr	w9, [x19, #160]
   12e9c:	sub	x8, x8, #0x8
   12ea0:	add	w9, w9, #0x1
   12ea4:	str	x8, [x19, #168]
   12ea8:	str	w9, [x19, #160]
   12eac:	ldr	x8, [x19, #168]
   12eb0:	cmp	x8, x20
   12eb4:	b.eq	12efc <argp_parse@@Base+0x3fc>  // b.none
   12eb8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   12ebc:	ldr	x8, [x8, #4008]
   12ec0:	ldr	x8, [x8]
   12ec4:	str	x8, [x19, #216]
   12ec8:	b	12f0c <argp_parse@@Base+0x40c>
   12ecc:	ldr	x9, [x21]
   12ed0:	str	x9, [x8]
   12ed4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
   12ed8:	ldr	x20, [x20, #4008]
   12edc:	ldr	x8, [x20]
   12ee0:	cbnz	x8, 12b60 <argp_parse@@Base+0x60>
   12ee4:	ldr	x0, [x21]
   12ee8:	bl	a6d0 <last_component@plt>
   12eec:	str	x0, [x20]
   12ef0:	add	x22, x19, #0x28
   12ef4:	tbz	w24, #4, 12b68 <argp_parse@@Base+0x68>
   12ef8:	b	12bfc <argp_parse@@Base+0xfc>
   12efc:	ldr	x0, [x20]
   12f00:	cbz	x0, 12eb8 <argp_parse@@Base+0x3b8>
   12f04:	bl	a6d0 <last_component@plt>
   12f08:	str	x0, [x19, #216]
   12f0c:	add	x8, x19, #0x28
   12f10:	mov	w26, #0xffffffff            	// #-1
   12f14:	add	x23, x8, #0x18
   12f18:	b	12f34 <argp_parse@@Base+0x434>
   12f1c:	mov	w8, #0x6                   	// #6
   12f20:	movk	w8, #0x100, lsl #16
   12f24:	cbz	w24, 13100 <argp_parse@@Base+0x600>
   12f28:	cmp	w24, #0x7
   12f2c:	b.eq	132a4 <argp_parse@@Base+0x7a4>  // b.none
   12f30:	cbnz	w24, 1340c <argp_parse@@Base+0x90c>
   12f34:	ldr	w8, [x19, #188]
   12f38:	cbz	w8, 12f4c <argp_parse@@Base+0x44c>
   12f3c:	ldr	w28, [x19, #176]
   12f40:	cmp	w28, w8
   12f44:	b.ge	12fe0 <argp_parse@@Base+0x4e0>  // b.tcont
   12f48:	str	wzr, [x19, #188]
   12f4c:	ldr	w8, [x19, #144]
   12f50:	ldr	w28, [x19, #176]
   12f54:	cbz	w8, 12fe0 <argp_parse@@Base+0x4e0>
   12f58:	ldr	w0, [x19, #160]
   12f5c:	ldr	x1, [x19, #168]
   12f60:	ldrb	w8, [x19, #180]
   12f64:	ldp	x2, x3, [x19, #48]
   12f68:	mov	x4, xzr
   12f6c:	mov	x5, x23
   12f70:	str	w28, [x19, #64]
   12f74:	str	w26, [x19, #72]
   12f78:	tbnz	w8, #6, 12f84 <argp_parse@@Base+0x484>
   12f7c:	bl	a900 <_getopt_long_r@plt>
   12f80:	b	12f88 <argp_parse@@Base+0x488>
   12f84:	bl	a860 <_getopt_long_only_r@plt>
   12f88:	ldr	w28, [x19, #64]
   12f8c:	mov	w25, w0
   12f90:	cmn	w0, #0x1
   12f94:	str	w28, [x19, #176]
   12f98:	b.eq	12fb4 <argp_parse@@Base+0x4b4>  // b.none
   12f9c:	cmp	w25, #0x3f
   12fa0:	b.eq	13150 <argp_parse@@Base+0x650>  // b.none
   12fa4:	cmp	w25, #0x1
   12fa8:	b.ne	13160 <argp_parse@@Base+0x660>  // b.any
   12fac:	ldr	x25, [x19, #80]
   12fb0:	b	1300c <argp_parse@@Base+0x50c>
   12fb4:	cmp	w28, #0x2
   12fb8:	str	wzr, [x19, #144]
   12fbc:	b.lt	12fe0 <argp_parse@@Base+0x4e0>  // b.tstop
   12fc0:	ldr	x8, [x19, #168]
   12fc4:	sub	w9, w28, #0x1
   12fc8:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   12fcc:	add	x1, x1, #0x5e1
   12fd0:	ldr	x0, [x8, w9, sxtw #3]
   12fd4:	bl	a8f0 <strcmp@plt>
   12fd8:	cbnz	w0, 12fe0 <argp_parse@@Base+0x4e0>
   12fdc:	str	w28, [x19, #188]
   12fe0:	ldr	w8, [x19, #160]
   12fe4:	cmp	w28, w8
   12fe8:	b.ge	132b8 <argp_parse@@Base+0x7b8>  // b.tcont
   12fec:	ldrb	w8, [x19, #180]
   12ff0:	tbnz	w8, #2, 132b8 <argp_parse@@Base+0x7b8>
   12ff4:	ldr	x8, [x19, #168]
   12ff8:	add	w9, w28, #0x1
   12ffc:	str	w9, [x19, #176]
   13000:	ldr	x25, [x8, w28, sxtw #3]
   13004:	mov	w28, w9
   13008:	str	x25, [x19, #80]
   1300c:	ldp	x9, x10, [x19, #120]
   13010:	sub	w8, w28, #0x1
   13014:	str	w8, [x19, #176]
   13018:	cmp	x9, x10
   1301c:	b.cs	132a4 <argp_parse@@Base+0x7a4>  // b.hs, b.nlast
   13020:	add	x20, x9, #0x48
   13024:	add	w9, w8, #0x1
   13028:	str	w9, [x19, #176]
   1302c:	ldur	x9, [x20, #-72]
   13030:	cbz	x9, 130bc <argp_parse@@Base+0x5bc>
   13034:	ldur	x8, [x20, #-8]
   13038:	mov	w0, wzr
   1303c:	mov	x1, x25
   13040:	mov	x2, x21
   13044:	str	x8, [x19, #208]
   13048:	ldur	q0, [x20, #-24]
   1304c:	stur	q0, [x22, #152]
   13050:	ldur	w8, [x20, #-48]
   13054:	str	w8, [x19, #184]
   13058:	blr	x9
   1305c:	ldr	x8, [x19, #208]
   13060:	cmp	w0, #0x7
   13064:	stur	x8, [x20, #-8]
   13068:	b.ne	130f4 <argp_parse@@Base+0x5f4>  // b.any
   1306c:	ldr	w9, [x19, #176]
   13070:	ldur	x8, [x20, #-72]
   13074:	sub	w9, w9, #0x1
   13078:	str	w9, [x19, #176]
   1307c:	cbz	x8, 130c0 <argp_parse@@Base+0x5c0>
   13080:	ldur	q0, [x20, #-24]
   13084:	mov	w0, #0x6                   	// #6
   13088:	movk	w0, #0x100, lsl #16
   1308c:	mov	x1, xzr
   13090:	stur	q0, [x22, #152]
   13094:	ldur	w9, [x20, #-48]
   13098:	mov	x2, x21
   1309c:	str	w9, [x19, #184]
   130a0:	blr	x8
   130a4:	ldr	x8, [x19, #208]
   130a8:	mov	w24, w0
   130ac:	stur	x8, [x20, #-8]
   130b0:	cmp	w24, #0x7
   130b4:	b.eq	130cc <argp_parse@@Base+0x5cc>  // b.none
   130b8:	b	12f1c <argp_parse@@Base+0x41c>
   130bc:	str	w8, [x19, #176]
   130c0:	mov	w24, #0x7                   	// #7
   130c4:	cmp	w24, #0x7
   130c8:	b.ne	12f1c <argp_parse@@Base+0x41c>  // b.any
   130cc:	ldr	x8, [x19, #128]
   130d0:	cmp	x20, x8
   130d4:	b.cs	12f1c <argp_parse@@Base+0x41c>  // b.hs, b.nlast
   130d8:	ldr	w8, [x19, #176]
   130dc:	add	x20, x20, #0x48
   130e0:	add	w9, w8, #0x1
   130e4:	str	w9, [x19, #176]
   130e8:	ldur	x9, [x20, #-72]
   130ec:	cbnz	x9, 13034 <argp_parse@@Base+0x534>
   130f0:	b	130bc <argp_parse@@Base+0x5bc>
   130f4:	mov	w24, w0
   130f8:	mov	w8, wzr
   130fc:	cbnz	w24, 12f28 <argp_parse@@Base+0x428>
   13100:	cmp	w8, w27
   13104:	b.ne	13134 <argp_parse@@Base+0x634>  // b.any
   13108:	ldr	w8, [x19, #160]
   1310c:	str	w8, [x19, #176]
   13110:	mov	w24, wzr
   13114:	subs	w8, w8, w28
   13118:	b.lt	13144 <argp_parse@@Base+0x644>  // b.tstop
   1311c:	ldur	w9, [x20, #-48]
   13120:	add	w8, w8, w9
   13124:	add	w8, w8, #0x1
   13128:	stur	w8, [x20, #-48]
   1312c:	cbz	w24, 12f34 <argp_parse@@Base+0x434>
   13130:	b	1340c <argp_parse@@Base+0x90c>
   13134:	ldr	w8, [x19, #176]
   13138:	mov	w24, wzr
   1313c:	subs	w8, w8, w28
   13140:	b.ge	1311c <argp_parse@@Base+0x61c>  // b.tcont
   13144:	mov	w8, #0x1                   	// #1
   13148:	str	w8, [x19, #144]
   1314c:	b	12f30 <argp_parse@@Base+0x430>
   13150:	ldr	w8, [x19, #72]
   13154:	cmn	w8, #0x1
   13158:	b.eq	131d4 <argp_parse@@Base+0x6d4>  // b.none
   1315c:	b	134f8 <argp_parse@@Base+0x9f8>
   13160:	asr	w8, w25, #24
   13164:	cbz	w8, 131d4 <argp_parse@@Base+0x6d4>
   13168:	ldr	x9, [x19, #120]
   1316c:	sxtw	x8, w8
   13170:	sub	x10, x8, #0x1
   13174:	mov	w8, #0x48                  	// #72
   13178:	mul	x8, x10, x8
   1317c:	ldr	x8, [x9, x8]
   13180:	cbz	x8, 13600 <argp_parse@@Base+0xb00>
   13184:	mov	w11, #0x48                  	// #72
   13188:	madd	x20, x10, x11, x9
   1318c:	ldr	x1, [x19, #80]
   13190:	ldr	x9, [x20, #64]!
   13194:	sbfx	w0, w25, #23, #1
   13198:	bfxil	w0, w25, #0, #24
   1319c:	mov	x2, x21
   131a0:	str	x9, [x19, #208]
   131a4:	ldur	q0, [x20, #-16]
   131a8:	stur	q0, [x22, #152]
   131ac:	ldur	w9, [x20, #-40]
   131b0:	str	w9, [x19, #184]
   131b4:	blr	x8
   131b8:	mov	w24, w0
   131bc:	mov	w8, wzr
   131c0:	ldr	x9, [x19, #208]
   131c4:	cmp	w24, #0x7
   131c8:	str	x9, [x20]
   131cc:	b.ne	12f30 <argp_parse@@Base+0x430>  // b.any
   131d0:	b	13260 <argp_parse@@Base+0x760>
   131d4:	ldr	x0, [x19, #48]
   131d8:	mov	w1, w25
   131dc:	bl	aa60 <strchr@plt>
   131e0:	cbz	x0, 13264 <argp_parse@@Base+0x764>
   131e4:	ldp	x8, x9, [x19, #120]
   131e8:	cmp	x8, x9
   131ec:	b.cs	13264 <argp_parse@@Base+0x764>  // b.hs, b.nlast
   131f0:	add	x8, x8, #0x30
   131f4:	ldur	x10, [x8, #-32]
   131f8:	cmp	x10, x0
   131fc:	b.hi	13214 <argp_parse@@Base+0x714>  // b.pmore
   13200:	add	x10, x8, #0x18
   13204:	add	x8, x8, #0x48
   13208:	cmp	x10, x9
   1320c:	b.cc	131f4 <argp_parse@@Base+0x6f4>  // b.lo, b.ul, b.last
   13210:	b	13264 <argp_parse@@Base+0x764>
   13214:	ldur	x9, [x8, #-48]
   13218:	cbz	x9, 13264 <argp_parse@@Base+0x764>
   1321c:	mov	x20, x8
   13220:	ldr	x1, [x19, #80]
   13224:	ldr	x10, [x20, #16]!
   13228:	mov	w0, w25
   1322c:	mov	x2, x21
   13230:	str	x10, [x19, #208]
   13234:	ldr	q0, [x8]
   13238:	stur	q0, [x22, #152]
   1323c:	ldur	w8, [x8, #-24]
   13240:	str	w8, [x19, #184]
   13244:	blr	x9
   13248:	mov	w24, w0
   1324c:	mov	w8, #0x1                   	// #1
   13250:	ldr	x9, [x19, #208]
   13254:	cmp	w24, #0x7
   13258:	str	x9, [x20]
   1325c:	b.ne	12f30 <argp_parse@@Base+0x430>  // b.any
   13260:	cbz	w8, 13600 <argp_parse@@Base+0xb00>
   13264:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   13268:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   1326c:	add	x0, x0, #0x197
   13270:	add	x1, x1, #0x611
   13274:	mov	w2, #0x5                   	// #5
   13278:	bl	ac90 <dcgettext@plt>
   1327c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   13280:	mov	x3, x0
   13284:	add	x1, x1, #0x5e4
   13288:	mov	x0, x21
   1328c:	mov	w2, w25
   13290:	bl	aa80 <argp_error@plt>
   13294:	mov	w8, wzr
   13298:	cmn	w25, #0x1
   1329c:	b.ne	132b4 <argp_parse@@Base+0x7b4>  // b.any
   132a0:	b	132b8 <argp_parse@@Base+0x7b8>
   132a4:	mov	w25, #0x1                   	// #1
   132a8:	mov	w8, #0x1                   	// #1
   132ac:	cmn	w25, #0x1
   132b0:	b.eq	132b8 <argp_parse@@Base+0x7b8>  // b.none
   132b4:	tbz	w8, #0, 134f8 <argp_parse@@Base+0x9f8>
   132b8:	ldr	w8, [x19, #176]
   132bc:	ldr	w9, [x19, #160]
   132c0:	cmp	w8, w9
   132c4:	b.ne	1334c <argp_parse@@Base+0x84c>  // b.any
   132c8:	ldp	x23, x8, [x19, #120]
   132cc:	cmp	x23, x8
   132d0:	b.cs	1335c <argp_parse@@Base+0x85c>  // b.hs, b.nlast
   132d4:	mov	w24, wzr
   132d8:	sub	w20, w27, #0x4
   132dc:	b	132f4 <argp_parse@@Base+0x7f4>
   132e0:	ldr	w9, [x23, #24]
   132e4:	cbz	w9, 13304 <argp_parse@@Base+0x804>
   132e8:	add	x23, x23, #0x48
   132ec:	cmp	x23, x8
   132f0:	b.cs	13374 <argp_parse@@Base+0x874>  // b.hs, b.nlast
   132f4:	cmp	w24, #0x7
   132f8:	b.eq	132e0 <argp_parse@@Base+0x7e0>  // b.none
   132fc:	cbz	w24, 132e0 <argp_parse@@Base+0x7e0>
   13300:	b	13374 <argp_parse@@Base+0x874>
   13304:	ldr	x9, [x23]
   13308:	cbz	x9, 13344 <argp_parse@@Base+0x844>
   1330c:	ldr	x8, [x23, #64]
   13310:	mov	w0, w20
   13314:	mov	x1, xzr
   13318:	mov	x2, x21
   1331c:	str	x8, [x19, #208]
   13320:	ldr	q0, [x23, #48]
   13324:	stur	q0, [x22, #152]
   13328:	str	wzr, [x19, #184]
   1332c:	blr	x9
   13330:	ldr	x8, [x19, #208]
   13334:	mov	w24, w0
   13338:	str	x8, [x23, #64]
   1333c:	ldr	x8, [x19, #128]
   13340:	b	132e8 <argp_parse@@Base+0x7e8>
   13344:	mov	w24, #0x7                   	// #7
   13348:	b	132e8 <argp_parse@@Base+0x7e8>
   1334c:	ldr	x9, [x19, #8]
   13350:	cbz	x9, 134c0 <argp_parse@@Base+0x9c0>
   13354:	str	w8, [x9]
   13358:	b	13428 <argp_parse@@Base+0x928>
   1335c:	mov	w24, wzr
   13360:	ldr	x26, [x19, #8]
   13364:	sub	x25, x8, #0x48
   13368:	cmp	x25, x23
   1336c:	b.cc	133f8 <argp_parse@@Base+0x8f8>  // b.lo, b.ul, b.last
   13370:	b	13388 <argp_parse@@Base+0x888>
   13374:	ldr	x23, [x19, #120]
   13378:	ldr	x26, [x19, #8]
   1337c:	sub	x25, x8, #0x48
   13380:	cmp	x25, x23
   13384:	b.cc	133f8 <argp_parse@@Base+0x8f8>  // b.lo, b.ul, b.last
   13388:	sub	w20, w27, #0x5
   1338c:	b	133a0 <argp_parse@@Base+0x8a0>
   13390:	mov	w24, #0x7                   	// #7
   13394:	sub	x25, x25, #0x48
   13398:	cmp	x25, x23
   1339c:	b.cc	133f8 <argp_parse@@Base+0x8f8>  // b.lo, b.ul, b.last
   133a0:	cmp	w24, #0x7
   133a4:	b.eq	133ac <argp_parse@@Base+0x8ac>  // b.none
   133a8:	cbnz	w24, 13400 <argp_parse@@Base+0x900>
   133ac:	ldr	x8, [x25]
   133b0:	cbz	x8, 13390 <argp_parse@@Base+0x890>
   133b4:	ldr	x9, [x25, #64]
   133b8:	mov	w0, w20
   133bc:	mov	x1, xzr
   133c0:	mov	x2, x21
   133c4:	str	x9, [x19, #208]
   133c8:	ldr	q0, [x25, #48]
   133cc:	stur	q0, [x22, #152]
   133d0:	ldr	w9, [x25, #24]
   133d4:	str	w9, [x19, #184]
   133d8:	blr	x8
   133dc:	ldr	x8, [x19, #208]
   133e0:	mov	w24, w0
   133e4:	str	x8, [x25, #64]
   133e8:	ldr	x23, [x19, #120]
   133ec:	sub	x25, x25, #0x48
   133f0:	cmp	x25, x23
   133f4:	b.cs	133a0 <argp_parse@@Base+0x8a0>  // b.hs, b.nlast
   133f8:	cmp	w24, #0x7
   133fc:	csel	w24, wzr, w24, eq  // eq = none
   13400:	cbz	x26, 1340c <argp_parse@@Base+0x90c>
   13404:	ldr	w8, [x19, #176]
   13408:	str	w8, [x26]
   1340c:	cbz	w24, 13428 <argp_parse@@Base+0x928>
   13410:	cmp	w24, #0x7
   13414:	b.eq	134f8 <argp_parse@@Base+0x9f8>  // b.none
   13418:	ldp	x23, x8, [x19, #120]
   1341c:	cmp	x23, x8
   13420:	b.cc	13518 <argp_parse@@Base+0xa18>  // b.lo, b.ul, b.last
   13424:	b	13570 <argp_parse@@Base+0xa70>
   13428:	ldp	x23, x8, [x19, #120]
   1342c:	sub	x25, x8, #0x48
   13430:	cmp	x25, x23
   13434:	b.cs	13440 <argp_parse@@Base+0x940>  // b.hs, b.nlast
   13438:	mov	w24, wzr
   1343c:	b	13570 <argp_parse@@Base+0xa70>
   13440:	mov	w24, wzr
   13444:	sub	w20, w27, #0x2
   13448:	b	1345c <argp_parse@@Base+0x95c>
   1344c:	mov	w24, #0x7                   	// #7
   13450:	sub	x25, x25, #0x48
   13454:	cmp	x25, x23
   13458:	b.cc	134b4 <argp_parse@@Base+0x9b4>  // b.lo, b.ul, b.last
   1345c:	cmp	w24, #0x7
   13460:	b.eq	13468 <argp_parse@@Base+0x968>  // b.none
   13464:	cbnz	w24, 13570 <argp_parse@@Base+0xa70>
   13468:	ldr	x8, [x25]
   1346c:	cbz	x8, 1344c <argp_parse@@Base+0x94c>
   13470:	ldr	x9, [x25, #64]
   13474:	mov	w0, w20
   13478:	mov	x1, xzr
   1347c:	mov	x2, x21
   13480:	str	x9, [x19, #208]
   13484:	ldr	q0, [x25, #48]
   13488:	stur	q0, [x22, #152]
   1348c:	ldr	w9, [x25, #24]
   13490:	str	w9, [x19, #184]
   13494:	blr	x8
   13498:	ldr	x8, [x19, #208]
   1349c:	mov	w24, w0
   134a0:	str	x8, [x25, #64]
   134a4:	ldr	x23, [x19, #120]
   134a8:	sub	x25, x25, #0x48
   134ac:	cmp	x25, x23
   134b0:	b.cs	1345c <argp_parse@@Base+0x95c>  // b.hs, b.nlast
   134b4:	cmp	w24, #0x7
   134b8:	csel	w24, wzr, w24, eq  // eq = none
   134bc:	b	13570 <argp_parse@@Base+0xa70>
   134c0:	ldrb	w8, [x19, #180]
   134c4:	tbnz	w8, #1, 134f8 <argp_parse@@Base+0x9f8>
   134c8:	ldr	x20, [x19, #224]
   134cc:	cbz	x20, 134f8 <argp_parse@@Base+0x9f8>
   134d0:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   134d4:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   134d8:	add	x0, x0, #0x197
   134dc:	add	x1, x1, #0x5f9
   134e0:	mov	w2, #0x5                   	// #5
   134e4:	bl	ac90 <dcgettext@plt>
   134e8:	ldr	x2, [x19, #216]
   134ec:	mov	x1, x0
   134f0:	mov	x0, x20
   134f4:	bl	ae70 <fprintf@plt>
   134f8:	ldr	x1, [x19, #224]
   134fc:	mov	w2, #0x104                 	// #260
   13500:	mov	x0, x21
   13504:	bl	ac80 <argp_state_help@plt>
   13508:	mov	w24, #0x7                   	// #7
   1350c:	ldp	x23, x8, [x19, #120]
   13510:	cmp	x23, x8
   13514:	b.cs	13570 <argp_parse@@Base+0xa70>  // b.hs, b.nlast
   13518:	sub	w20, w27, #0x1
   1351c:	b	1352c <argp_parse@@Base+0xa2c>
   13520:	add	x23, x23, #0x48
   13524:	cmp	x23, x8
   13528:	b.cs	1356c <argp_parse@@Base+0xa6c>  // b.hs, b.nlast
   1352c:	ldr	x9, [x23]
   13530:	cbz	x9, 13520 <argp_parse@@Base+0xa20>
   13534:	ldr	x8, [x23, #64]
   13538:	mov	w0, w20
   1353c:	mov	x1, xzr
   13540:	mov	x2, x21
   13544:	str	x8, [x19, #208]
   13548:	ldr	q0, [x23, #48]
   1354c:	stur	q0, [x22, #152]
   13550:	ldr	w8, [x23, #24]
   13554:	str	w8, [x19, #184]
   13558:	blr	x9
   1355c:	ldr	x8, [x19, #208]
   13560:	str	x8, [x23, #64]
   13564:	ldr	x8, [x19, #128]
   13568:	b	13520 <argp_parse@@Base+0xa20>
   1356c:	ldr	x23, [x19, #120]
   13570:	ldr	x8, [x19, #128]
   13574:	sub	x20, x8, #0x48
   13578:	b	13580 <argp_parse@@Base+0xa80>
   1357c:	sub	x20, x20, #0x48
   13580:	cmp	x20, x23
   13584:	b.cc	135c8 <argp_parse@@Base+0xac8>  // b.lo, b.ul, b.last
   13588:	ldr	x8, [x20]
   1358c:	cbz	x8, 1357c <argp_parse@@Base+0xa7c>
   13590:	ldr	x9, [x20, #64]
   13594:	add	w0, w27, #0x1
   13598:	mov	x1, xzr
   1359c:	mov	x2, x21
   135a0:	str	x9, [x19, #208]
   135a4:	ldr	q0, [x20, #48]
   135a8:	stur	q0, [x22, #152]
   135ac:	ldr	w9, [x20, #24]
   135b0:	str	w9, [x19, #184]
   135b4:	blr	x8
   135b8:	ldr	x8, [x19, #208]
   135bc:	str	x8, [x20, #64]
   135c0:	ldr	x23, [x19, #120]
   135c4:	b	1357c <argp_parse@@Base+0xa7c>
   135c8:	ldr	x0, [x19, #248]
   135cc:	cmp	w24, #0x7
   135d0:	mov	w8, #0x16                  	// #22
   135d4:	csel	w24, w8, w24, eq  // eq = none
   135d8:	bl	a970 <free@plt>
   135dc:	mov	w0, w24
   135e0:	mov	sp, x29
   135e4:	ldp	x20, x19, [sp, #80]
   135e8:	ldp	x22, x21, [sp, #64]
   135ec:	ldp	x24, x23, [sp, #48]
   135f0:	ldp	x26, x25, [sp, #32]
   135f4:	ldp	x28, x27, [sp, #16]
   135f8:	ldp	x29, x30, [sp], #96
   135fc:	ret
   13600:	ldr	x8, [x19, #56]
   13604:	ldr	w9, [x8, #24]
   13608:	cmp	w9, w25
   1360c:	b.eq	13630 <argp_parse@@Base+0xb30>  // b.none
   13610:	ldr	x9, [x8]
   13614:	cbz	x9, 13630 <argp_parse@@Base+0xb30>
   13618:	ldr	w10, [x8, #56]
   1361c:	add	x9, x8, #0x20
   13620:	mov	x8, x9
   13624:	cmp	w10, w25
   13628:	b.ne	13610 <argp_parse@@Base+0xb10>  // b.any
   1362c:	mov	x8, x9
   13630:	ldr	x8, [x8]
   13634:	adrp	x9, 32000 <vasnprintf@@Base+0x1474>
   13638:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1363c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   13640:	add	x9, x9, #0x5f5
   13644:	cmp	x8, #0x0
   13648:	add	x0, x0, #0x197
   1364c:	add	x1, x1, #0x611
   13650:	mov	w2, #0x5                   	// #5
   13654:	csel	x20, x9, x8, eq  // eq = none
   13658:	bl	ac90 <dcgettext@plt>
   1365c:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   13660:	mov	x3, x0
   13664:	add	x1, x1, #0x5ec
   13668:	mov	x0, x21
   1366c:	mov	x2, x20
   13670:	bl	aa80 <argp_error@plt>
   13674:	mov	w8, wzr
   13678:	cmn	w25, #0x1
   1367c:	b.ne	132b4 <argp_parse@@Base+0x7b4>  // b.any
   13680:	b	132b8 <argp_parse@@Base+0x7b8>

0000000000013684 <_argp_input@@Base>:
   13684:	cbz	x1, 136b0 <_argp_input@@Base+0x2c>
   13688:	ldr	x9, [x1, #88]
   1368c:	ldp	x8, x9, [x9, #80]
   13690:	cmp	x8, x9
   13694:	b.cs	136b0 <_argp_input@@Base+0x2c>  // b.hs, b.nlast
   13698:	ldr	x10, [x8, #8]
   1369c:	cmp	x10, x0
   136a0:	b.eq	136b8 <_argp_input@@Base+0x34>  // b.none
   136a4:	add	x8, x8, #0x48
   136a8:	cmp	x8, x9
   136ac:	b.cc	13698 <_argp_input@@Base+0x14>  // b.lo, b.ul, b.last
   136b0:	mov	x0, xzr
   136b4:	ret
   136b8:	ldr	x0, [x8, #48]
   136bc:	ret
   136c0:	stp	x29, x30, [sp, #-32]!
   136c4:	stp	x20, x19, [sp, #16]
   136c8:	mov	x19, x2
   136cc:	mov	x20, x1
   136d0:	mov	w8, w0
   136d4:	cmn	w0, #0x3
   136d8:	mov	w0, #0x7                   	// #7
   136dc:	mov	x29, sp
   136e0:	b.gt	13700 <_argp_input@@Base+0x7c>
   136e4:	cmn	w8, #0x4
   136e8:	b.eq	13724 <_argp_input@@Base+0xa0>  // b.none
   136ec:	cmn	w8, #0x3
   136f0:	b.ne	137b8 <_argp_input@@Base+0x134>  // b.any
   136f4:	ldr	x1, [x19, #80]
   136f8:	mov	w2, #0x201                 	// #513
   136fc:	b	13718 <_argp_input@@Base+0x94>
   13700:	cmn	w8, #0x2
   13704:	b.eq	13778 <_argp_input@@Base+0xf4>  // b.none
   13708:	cmp	w8, #0x3f
   1370c:	b.ne	137b8 <_argp_input@@Base+0x134>  // b.any
   13710:	ldr	x1, [x19, #80]
   13714:	mov	w2, #0x27a                 	// #634
   13718:	mov	x0, x19
   1371c:	bl	ac80 <argp_state_help@plt>
   13720:	b	137c4 <_argp_input@@Base+0x140>
   13724:	adrp	x8, 32000 <vasnprintf@@Base+0x1474>
   13728:	add	x8, x8, #0x5a3
   1372c:	cmp	x20, #0x0
   13730:	csel	x0, x8, x20, eq  // eq = none
   13734:	mov	w2, #0xa                   	// #10
   13738:	mov	x1, xzr
   1373c:	bl	a940 <strtol@plt>
   13740:	adrp	x19, 46000 <base_len@@Base+0x30a14>
   13744:	str	w0, [x19, #2280]
   13748:	ldr	w8, [x19, #2280]
   1374c:	subs	w8, w8, #0x1
   13750:	str	w8, [x19, #2280]
   13754:	b.lt	137c4 <_argp_input@@Base+0x140>  // b.tstop
   13758:	mov	w0, #0x1                   	// #1
   1375c:	bl	a690 <sleep@plt>
   13760:	ldr	w8, [x19, #2280]
   13764:	sub	w9, w8, #0x1
   13768:	cmp	w8, #0x0
   1376c:	str	w9, [x19, #2280]
   13770:	b.gt	13758 <_argp_input@@Base+0xd4>
   13774:	b	137c4 <_argp_input@@Base+0x140>
   13778:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1377c:	ldr	x8, [x8, #3768]
   13780:	mov	x0, x20
   13784:	str	x20, [x8]
   13788:	bl	a6d0 <last_component@plt>
   1378c:	str	x0, [x19, #64]
   13790:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   13794:	ldr	x8, [x8, #4008]
   13798:	str	x0, [x8]
   1379c:	ldr	w8, [x19, #28]
   137a0:	and	w8, w8, #0x3
   137a4:	cmp	w8, #0x1
   137a8:	b.ne	137c4 <_argp_input@@Base+0x140>  // b.any
   137ac:	ldr	x8, [x19, #16]
   137b0:	mov	w0, wzr
   137b4:	str	x20, [x8]
   137b8:	ldp	x20, x19, [sp, #16]
   137bc:	ldp	x29, x30, [sp], #32
   137c0:	ret
   137c4:	mov	w0, wzr
   137c8:	ldp	x20, x19, [sp, #16]
   137cc:	ldp	x29, x30, [sp], #32
   137d0:	ret
   137d4:	stp	x29, x30, [sp, #-32]!
   137d8:	cmp	w0, #0x56
   137dc:	str	x19, [sp, #16]
   137e0:	mov	x29, sp
   137e4:	b.ne	13814 <_argp_input@@Base+0x190>  // b.any
   137e8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   137ec:	ldr	x8, [x8, #4056]
   137f0:	mov	x19, x2
   137f4:	ldr	x8, [x8]
   137f8:	cbz	x8, 13824 <_argp_input@@Base+0x1a0>
   137fc:	ldr	x0, [x19, #80]
   13800:	mov	x1, x19
   13804:	blr	x8
   13808:	ldrb	w8, [x19, #28]
   1380c:	tbnz	w8, #5, 1384c <_argp_input@@Base+0x1c8>
   13810:	b	13890 <_argp_input@@Base+0x20c>
   13814:	mov	w0, #0x7                   	// #7
   13818:	ldr	x19, [sp, #16]
   1381c:	ldp	x29, x30, [sp], #32
   13820:	ret
   13824:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   13828:	ldr	x8, [x8, #3936]
   1382c:	ldr	x2, [x8]
   13830:	cbz	x2, 1385c <_argp_input@@Base+0x1d8>
   13834:	ldr	x0, [x19, #80]
   13838:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
   1383c:	add	x1, x1, #0x9d1
   13840:	bl	ae70 <fprintf@plt>
   13844:	ldrb	w8, [x19, #28]
   13848:	tbz	w8, #5, 13890 <_argp_input@@Base+0x20c>
   1384c:	mov	w0, wzr
   13850:	ldr	x19, [sp, #16]
   13854:	ldp	x29, x30, [sp], #32
   13858:	ret
   1385c:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   13860:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   13864:	add	x0, x0, #0x197
   13868:	add	x1, x1, #0x5be
   1386c:	mov	w2, #0x5                   	// #5
   13870:	bl	ac90 <dcgettext@plt>
   13874:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   13878:	mov	x2, x0
   1387c:	add	x1, x1, #0x1b8
   13880:	mov	x0, x19
   13884:	bl	aa80 <argp_error@plt>
   13888:	ldrb	w8, [x19, #28]
   1388c:	tbnz	w8, #5, 1384c <_argp_input@@Base+0x1c8>
   13890:	mov	w0, wzr
   13894:	bl	a2a0 <exit@plt>
   13898:	stp	x29, x30, [sp, #-32]!
   1389c:	stp	x20, x19, [sp, #16]
   138a0:	ldr	x11, [x0]
   138a4:	ldr	x8, [x0, #32]
   138a8:	mov	x19, x1
   138ac:	mov	x29, sp
   138b0:	cbz	x11, 13910 <_argp_input@@Base+0x28c>
   138b4:	ldr	x12, [x19, #16]
   138b8:	mov	w10, wzr
   138bc:	mov	x9, xzr
   138c0:	add	x11, x11, #0x28
   138c4:	add	x12, x12, #0x1
   138c8:	str	x12, [x19, #16]
   138cc:	b	138dc <_argp_input@@Base+0x258>
   138d0:	add	x11, x11, #0x30
   138d4:	add	x9, x9, #0x1
   138d8:	add	w10, w10, #0x3
   138dc:	ldur	w12, [x11, #-32]
   138e0:	cbnz	w12, 138d0 <_argp_input@@Base+0x24c>
   138e4:	ldur	x12, [x11, #-40]
   138e8:	cbnz	x12, 138d0 <_argp_input@@Base+0x24c>
   138ec:	ldur	x12, [x11, #-8]
   138f0:	cbnz	x12, 138d0 <_argp_input@@Base+0x24c>
   138f4:	ldr	w12, [x11]
   138f8:	cbnz	w12, 138d0 <_argp_input@@Base+0x24c>
   138fc:	ldr	x11, [x19]
   13900:	add	x11, x11, w10, uxtw
   13904:	mov	x10, x19
   13908:	str	x11, [x10], #8
   1390c:	b	13920 <_argp_input@@Base+0x29c>
   13910:	ldr	x9, [x0, #8]
   13914:	cbz	x9, 1392c <_argp_input@@Base+0x2a8>
   13918:	add	x10, x19, #0x10
   1391c:	mov	w9, #0x1                   	// #1
   13920:	ldr	x11, [x10]
   13924:	add	x9, x11, x9
   13928:	str	x9, [x10]
   1392c:	cbz	x8, 13958 <_argp_input@@Base+0x2d4>
   13930:	ldr	x0, [x8]
   13934:	cbz	x0, 13958 <_argp_input@@Base+0x2d4>
   13938:	add	x20, x8, #0x20
   1393c:	mov	x1, x19
   13940:	bl	13898 <_argp_input@@Base+0x214>
   13944:	ldr	x8, [x19, #24]
   13948:	add	x8, x8, #0x1
   1394c:	str	x8, [x19, #24]
   13950:	ldr	x0, [x20], #32
   13954:	cbnz	x0, 1393c <_argp_input@@Base+0x2b8>
   13958:	ldp	x20, x19, [sp, #16]
   1395c:	ldp	x29, x30, [sp], #32
   13960:	ret
   13964:	sub	sp, sp, #0x80
   13968:	stp	x29, x30, [sp, #32]
   1396c:	stp	x28, x27, [sp, #48]
   13970:	stp	x26, x25, [sp, #64]
   13974:	stp	x24, x23, [sp, #80]
   13978:	stp	x22, x21, [sp, #96]
   1397c:	stp	x20, x19, [sp, #112]
   13980:	ldr	x23, [x0]
   13984:	ldr	x10, [x0, #32]
   13988:	mov	x19, x4
   1398c:	mov	x20, x3
   13990:	add	x29, sp, #0x20
   13994:	cbz	x23, 13b0c <_argp_input@@Base+0x488>
   13998:	mov	w28, #0x39000000            	// #956301312
   1399c:	mov	w21, #0x1000000             	// #16777216
   139a0:	mov	x26, x23
   139a4:	stp	x0, x1, [sp]
   139a8:	stur	w2, [x29, #-12]
   139ac:	stur	x10, [x29, #-8]
   139b0:	b	139e0 <_argp_input@@Base+0x35c>
   139b4:	ldr	w10, [x25, #80]
   139b8:	add	x11, x8, #0x20
   139bc:	sub	w10, w20, w10
   139c0:	lsr	w10, w10, #3
   139c4:	mul	w10, w10, w28
   139c8:	bfxil	w10, w9, #0, #24
   139cc:	add	w9, w10, w21
   139d0:	str	w9, [x8, #24]
   139d4:	str	x11, [x19, #16]
   139d8:	str	xzr, [x8, #32]
   139dc:	add	x26, x26, #0x30
   139e0:	ldr	w24, [x26, #8]
   139e4:	cbnz	w24, 13a00 <_argp_input@@Base+0x37c>
   139e8:	ldr	x8, [x26]
   139ec:	cbnz	x8, 13a00 <_argp_input@@Base+0x37c>
   139f0:	ldr	x8, [x26, #32]
   139f4:	cbnz	x8, 13a00 <_argp_input@@Base+0x37c>
   139f8:	ldr	w8, [x26, #40]
   139fc:	cbz	w8, 13af8 <_argp_input@@Base+0x474>
   13a00:	ldr	w8, [x26, #24]
   13a04:	tst	w8, #0x4
   13a08:	csel	x23, x26, x23, eq  // eq = none
   13a0c:	ldrb	w9, [x23, #24]
   13a10:	tbnz	w9, #3, 139dc <_argp_input@@Base+0x358>
   13a14:	sub	w9, w24, #0x1
   13a18:	cmp	w9, #0xfe
   13a1c:	b.hi	13a84 <_argp_input@@Base+0x400>  // b.pmore
   13a20:	tbnz	w8, #3, 13a84 <_argp_input@@Base+0x400>
   13a24:	bl	a910 <__ctype_b_loc@plt>
   13a28:	ldr	x8, [x0]
   13a2c:	ldrh	w8, [x8, x24, lsl #1]
   13a30:	tbz	w8, #14, 13a84 <_argp_input@@Base+0x400>
   13a34:	ldr	x8, [x19, #8]
   13a38:	add	x9, x8, #0x1
   13a3c:	str	x9, [x19, #8]
   13a40:	strb	w24, [x8]
   13a44:	ldr	x8, [x23, #16]
   13a48:	cbz	x8, 13a7c <_argp_input@@Base+0x3f8>
   13a4c:	ldr	x8, [x19, #8]
   13a50:	add	x9, x8, #0x1
   13a54:	str	x9, [x19, #8]
   13a58:	mov	w9, #0x3a                  	// #58
   13a5c:	strb	w9, [x8]
   13a60:	ldrb	w8, [x23, #24]
   13a64:	tbz	w8, #0, 13a7c <_argp_input@@Base+0x3f8>
   13a68:	ldr	x8, [x19, #8]
   13a6c:	add	x9, x8, #0x1
   13a70:	str	x9, [x19, #8]
   13a74:	mov	w9, #0x3a                  	// #58
   13a78:	strb	w9, [x8]
   13a7c:	ldr	x8, [x19, #8]
   13a80:	strb	wzr, [x8]
   13a84:	ldr	x24, [x26]
   13a88:	cbz	x24, 139dc <_argp_input@@Base+0x358>
   13a8c:	ldr	x25, [x19]
   13a90:	ldr	x22, [x25, #16]
   13a94:	ldr	x0, [x22]
   13a98:	cbz	x0, 13ac0 <_argp_input@@Base+0x43c>
   13a9c:	mov	x27, x22
   13aa0:	mov	x1, x24
   13aa4:	bl	a8f0 <strcmp@plt>
   13aa8:	cbz	w0, 13ab8 <_argp_input@@Base+0x434>
   13aac:	ldr	x0, [x27, #32]!
   13ab0:	cbnz	x0, 13aa0 <_argp_input@@Base+0x41c>
   13ab4:	b	13ac0 <_argp_input@@Base+0x43c>
   13ab8:	sub	x8, x27, x22
   13abc:	tbz	x8, #36, 139dc <_argp_input@@Base+0x358>
   13ac0:	ldr	x8, [x19, #16]
   13ac4:	str	x24, [x8]
   13ac8:	ldr	x9, [x23, #16]
   13acc:	cbz	x9, 13ae0 <_argp_input@@Base+0x45c>
   13ad0:	ldrb	w9, [x23, #24]
   13ad4:	tst	w9, #0x1
   13ad8:	mov	w9, #0x1                   	// #1
   13adc:	cinc	w9, w9, ne  // ne = any
   13ae0:	str	w9, [x8, #8]
   13ae4:	str	xzr, [x8, #16]
   13ae8:	ldr	w9, [x26, #8]
   13aec:	cbnz	w9, 139b4 <_argp_input@@Base+0x330>
   13af0:	ldr	w9, [x23, #8]
   13af4:	b	139b4 <_argp_input@@Base+0x330>
   13af8:	ldp	x0, x1, [sp]
   13afc:	ldur	x10, [x29, #-8]
   13b00:	ldur	w2, [x29, #-12]
   13b04:	ldr	x8, [x0, #8]
   13b08:	b	13b14 <_argp_input@@Base+0x490>
   13b0c:	ldr	x8, [x0, #8]
   13b10:	cbz	x8, 13bb8 <_argp_input@@Base+0x534>
   13b14:	stp	x8, x0, [x20]
   13b18:	ldr	x8, [x19, #8]
   13b1c:	str	wzr, [x20, #24]
   13b20:	str	x1, [x20, #32]
   13b24:	str	w2, [x20, #40]
   13b28:	stp	xzr, xzr, [x20, #56]
   13b2c:	str	x8, [x20, #16]
   13b30:	str	xzr, [x20, #48]
   13b34:	cbz	x10, 13b5c <_argp_input@@Base+0x4d8>
   13b38:	mov	w8, #0xffffffff            	// #-1
   13b3c:	add	w8, w8, #0x1
   13b40:	lsl	x9, x8, #5
   13b44:	ldr	x9, [x10, x9]
   13b48:	cbnz	x9, 13b3c <_argp_input@@Base+0x4b8>
   13b4c:	ldr	x9, [x19, #24]
   13b50:	add	x8, x9, w8, uxtw #3
   13b54:	str	x9, [x20, #56]
   13b58:	str	x8, [x19, #24]
   13b5c:	add	x3, x20, #0x48
   13b60:	cbz	x10, 13b94 <_argp_input@@Base+0x510>
   13b64:	ldr	x0, [x10]
   13b68:	cbz	x0, 13b94 <_argp_input@@Base+0x510>
   13b6c:	mov	w2, wzr
   13b70:	add	x21, x10, #0x20
   13b74:	mov	x1, x20
   13b78:	mov	x4, x19
   13b7c:	add	w22, w2, #0x1
   13b80:	bl	13964 <_argp_input@@Base+0x2e0>
   13b84:	mov	x3, x0
   13b88:	ldr	x0, [x21], #32
   13b8c:	mov	w2, w22
   13b90:	cbnz	x0, 13b74 <_argp_input@@Base+0x4f0>
   13b94:	ldp	x20, x19, [sp, #112]
   13b98:	ldp	x22, x21, [sp, #96]
   13b9c:	ldp	x24, x23, [sp, #80]
   13ba0:	ldp	x26, x25, [sp, #64]
   13ba4:	ldp	x28, x27, [sp, #48]
   13ba8:	ldp	x29, x30, [sp, #32]
   13bac:	mov	x0, x3
   13bb0:	add	sp, sp, #0x80
   13bb4:	ret
   13bb8:	mov	x3, x20
   13bbc:	mov	x20, xzr
   13bc0:	cbnz	x10, 13b64 <_argp_input@@Base+0x4e0>
   13bc4:	b	13b94 <_argp_input@@Base+0x510>

0000000000013bc8 <argp_usage@@Base>:
   13bc8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   13bcc:	ldr	x8, [x8, #3816]
   13bd0:	mov	w2, #0x106                 	// #262
   13bd4:	ldr	x1, [x8]
   13bd8:	b	ac80 <argp_state_help@plt>

0000000000013bdc <_option_is_short@@Base>:
   13bdc:	stp	x29, x30, [sp, #-32]!
   13be0:	ldrb	w8, [x0, #24]
   13be4:	str	x19, [sp, #16]
   13be8:	mov	x29, sp
   13bec:	tbnz	w8, #3, 13c1c <_option_is_short@@Base+0x40>
   13bf0:	ldr	w19, [x0, #8]
   13bf4:	sub	w8, w19, #0x1
   13bf8:	cmp	w8, #0xfe
   13bfc:	b.hi	13c1c <_option_is_short@@Base+0x40>  // b.pmore
   13c00:	bl	a910 <__ctype_b_loc@plt>
   13c04:	ldr	x8, [x0]
   13c08:	ldrh	w8, [x8, x19, lsl #1]
   13c0c:	ubfx	w0, w8, #14, #1
   13c10:	ldr	x19, [sp, #16]
   13c14:	ldp	x29, x30, [sp], #32
   13c18:	ret
   13c1c:	mov	w0, wzr
   13c20:	ldr	x19, [sp, #16]
   13c24:	ldp	x29, x30, [sp], #32
   13c28:	ret

0000000000013c2c <_option_is_end@@Base>:
   13c2c:	ldr	w8, [x0, #8]
   13c30:	cbz	w8, 13c3c <_option_is_end@@Base+0x10>
   13c34:	mov	w0, wzr
   13c38:	ret
   13c3c:	ldr	x8, [x0]
   13c40:	cbz	x8, 13c4c <_option_is_end@@Base+0x20>
   13c44:	mov	w0, wzr
   13c48:	ret
   13c4c:	ldr	x8, [x0, #32]
   13c50:	cbz	x8, 13c5c <_option_is_end@@Base+0x30>
   13c54:	mov	w0, wzr
   13c58:	ret
   13c5c:	ldr	w8, [x0, #40]
   13c60:	cmp	w8, #0x0
   13c64:	cset	w0, eq  // eq = none
   13c68:	ret
   13c6c:	stp	x29, x30, [sp, #-64]!
   13c70:	str	x23, [sp, #16]
   13c74:	mov	x23, x0
   13c78:	mov	w0, #0x40                  	// #64
   13c7c:	stp	x22, x21, [sp, #32]
   13c80:	stp	x20, x19, [sp, #48]
   13c84:	mov	x29, sp
   13c88:	mov	w21, w4
   13c8c:	mov	x19, x3
   13c90:	mov	x20, x2
   13c94:	mov	x22, x1
   13c98:	bl	a550 <malloc@plt>
   13c9c:	cbz	x0, 13cb8 <_option_is_end@@Base+0x8c>
   13ca0:	and	w8, w21, #0x1
   13ca4:	stp	x23, x22, [x0]
   13ca8:	stp	x20, x19, [x0, #16]
   13cac:	stp	xzr, xzr, [x0, #48]
   13cb0:	strb	w8, [x0, #32]
   13cb4:	str	xzr, [x0, #40]
   13cb8:	ldp	x20, x19, [sp, #48]
   13cbc:	ldp	x22, x21, [sp, #32]
   13cc0:	ldr	x23, [sp, #16]
   13cc4:	ldp	x29, x30, [sp], #64
   13cc8:	ret
   13ccc:	stp	x29, x30, [sp, #-80]!
   13cd0:	stp	x26, x25, [sp, #16]
   13cd4:	mov	x26, x0
   13cd8:	mov	w0, #0x40                  	// #64
   13cdc:	stp	x24, x23, [sp, #32]
   13ce0:	stp	x22, x21, [sp, #48]
   13ce4:	stp	x20, x19, [sp, #64]
   13ce8:	mov	x29, sp
   13cec:	mov	x21, x6
   13cf0:	mov	x19, x5
   13cf4:	mov	w24, w4
   13cf8:	mov	x22, x3
   13cfc:	mov	x23, x2
   13d00:	mov	x25, x1
   13d04:	bl	a550 <malloc@plt>
   13d08:	mov	x20, x0
   13d0c:	cbz	x0, 13d68 <_option_is_end@@Base+0x13c>
   13d10:	and	w8, w24, #0x1
   13d14:	stp	x26, x25, [x20]
   13d18:	stp	x23, x22, [x20, #16]
   13d1c:	strb	w8, [x20, #32]
   13d20:	cbz	x19, 13d60 <_option_is_end@@Base+0x134>
   13d24:	lsr	x8, x19, #61
   13d28:	cbnz	x8, 13d50 <_option_is_end@@Base+0x124>
   13d2c:	lsl	x22, x19, #3
   13d30:	mov	x0, x22
   13d34:	bl	a550 <malloc@plt>
   13d38:	str	x0, [x20, #40]
   13d3c:	cbz	x0, 13d50 <_option_is_end@@Base+0x124>
   13d40:	mov	x1, x21
   13d44:	mov	x2, x22
   13d48:	bl	a210 <memcpy@plt>
   13d4c:	b	13d64 <_option_is_end@@Base+0x138>
   13d50:	mov	x0, x20
   13d54:	bl	a970 <free@plt>
   13d58:	mov	x20, xzr
   13d5c:	b	13d68 <_option_is_end@@Base+0x13c>
   13d60:	str	xzr, [x20, #40]
   13d64:	stp	x19, x19, [x20, #48]
   13d68:	mov	x0, x20
   13d6c:	ldp	x20, x19, [sp, #64]
   13d70:	ldp	x22, x21, [sp, #48]
   13d74:	ldp	x24, x23, [sp, #32]
   13d78:	ldp	x26, x25, [sp, #16]
   13d7c:	ldp	x29, x30, [sp], #80
   13d80:	ret
   13d84:	ldr	x0, [x0, #48]
   13d88:	ret
   13d8c:	stp	x29, x30, [sp, #-16]!
   13d90:	ldr	x9, [x0, #48]
   13d94:	sub	x8, x1, #0x1
   13d98:	mov	x29, sp
   13d9c:	cmp	x8, x9
   13da0:	b.cs	13db4 <_option_is_end@@Base+0x188>  // b.hs, b.nlast
   13da4:	ldr	x9, [x0, #40]
   13da8:	ldr	x0, [x9, x8, lsl #3]
   13dac:	ldp	x29, x30, [sp], #16
   13db0:	ret
   13db4:	bl	a850 <abort@plt>
   13db8:	stp	x29, x30, [sp, #-16]!
   13dbc:	ldr	x9, [x0, #48]
   13dc0:	sub	x8, x1, #0x1
   13dc4:	mov	x29, sp
   13dc8:	cmp	x8, x9
   13dcc:	b.cs	13de4 <_option_is_end@@Base+0x1b8>  // b.hs, b.nlast
   13dd0:	ldr	x9, [x0, #40]
   13dd4:	mov	w0, wzr
   13dd8:	str	x2, [x9, x8, lsl #3]
   13ddc:	ldp	x29, x30, [sp], #16
   13de0:	ret
   13de4:	bl	a850 <abort@plt>
   13de8:	stp	x29, x30, [sp, #-16]!
   13dec:	ldr	x8, [x0, #48]
   13df0:	sub	x9, x1, #0x1
   13df4:	mov	x29, sp
   13df8:	cmp	x9, x8
   13dfc:	b.cs	13e10 <_option_is_end@@Base+0x1e4>  // b.hs, b.nlast
   13e00:	cmp	x8, x1
   13e04:	csinc	x0, xzr, x1, ls  // ls = plast
   13e08:	ldp	x29, x30, [sp], #16
   13e0c:	ret
   13e10:	bl	a850 <abort@plt>
   13e14:	stp	x29, x30, [sp, #-16]!
   13e18:	ldr	x8, [x0, #48]
   13e1c:	sub	x0, x1, #0x1
   13e20:	mov	x29, sp
   13e24:	cmp	x0, x8
   13e28:	b.cs	13e34 <_option_is_end@@Base+0x208>  // b.hs, b.nlast
   13e2c:	ldp	x29, x30, [sp], #16
   13e30:	ret
   13e34:	bl	a850 <abort@plt>
   13e38:	stp	x29, x30, [sp, #-16]!
   13e3c:	ldr	x8, [x0, #48]
   13e40:	mov	x29, sp
   13e44:	cmp	x8, x1
   13e48:	b.ls	13e5c <_option_is_end@@Base+0x230>  // b.plast
   13e4c:	ldr	x8, [x0, #40]
   13e50:	ldr	x0, [x8, x1, lsl #3]
   13e54:	ldp	x29, x30, [sp], #16
   13e58:	ret
   13e5c:	bl	a850 <abort@plt>
   13e60:	stp	x29, x30, [sp, #-16]!
   13e64:	ldr	x8, [x0, #48]
   13e68:	mov	x29, sp
   13e6c:	cmp	x8, x1
   13e70:	b.ls	13e88 <_option_is_end@@Base+0x25c>  // b.plast
   13e74:	ldr	x8, [x0, #40]
   13e78:	add	x0, x1, #0x1
   13e7c:	str	x2, [x8, x1, lsl #3]
   13e80:	ldp	x29, x30, [sp], #16
   13e84:	ret
   13e88:	bl	a850 <abort@plt>
   13e8c:	stp	x29, x30, [sp, #-64]!
   13e90:	cmp	x1, x2
   13e94:	str	x23, [sp, #16]
   13e98:	stp	x22, x21, [sp, #32]
   13e9c:	stp	x20, x19, [sp, #48]
   13ea0:	mov	x29, sp
   13ea4:	b.hi	13f30 <_option_is_end@@Base+0x304>  // b.pmore
   13ea8:	ldr	x8, [x0, #48]
   13eac:	mov	x21, x2
   13eb0:	mov	x22, x0
   13eb4:	cmp	x8, x2
   13eb8:	b.cc	13f30 <_option_is_end@@Base+0x304>  // b.lo, b.ul, b.last
   13ebc:	mov	x19, x1
   13ec0:	cmp	x1, x21
   13ec4:	b.cs	13f14 <_option_is_end@@Base+0x2e8>  // b.hs, b.nlast
   13ec8:	ldr	x23, [x22, #8]
   13ecc:	mov	x20, x3
   13ed0:	cbz	x23, 13ef8 <_option_is_end@@Base+0x2cc>
   13ed4:	ldr	x8, [x22, #40]
   13ed8:	mov	x0, x20
   13edc:	ldr	x1, [x8, x19, lsl #3]
   13ee0:	blr	x23
   13ee4:	tbnz	w0, #0, 13f18 <_option_is_end@@Base+0x2ec>
   13ee8:	add	x19, x19, #0x1
   13eec:	cmp	x21, x19
   13ef0:	b.ne	13ed4 <_option_is_end@@Base+0x2a8>  // b.any
   13ef4:	b	13f14 <_option_is_end@@Base+0x2e8>
   13ef8:	ldr	x8, [x22, #40]
   13efc:	ldr	x9, [x8, x19, lsl #3]
   13f00:	cmp	x9, x20
   13f04:	b.eq	13f18 <_option_is_end@@Base+0x2ec>  // b.none
   13f08:	add	x19, x19, #0x1
   13f0c:	cmp	x21, x19
   13f10:	b.ne	13efc <_option_is_end@@Base+0x2d0>  // b.any
   13f14:	mov	x19, #0xffffffffffffffff    	// #-1
   13f18:	add	x0, x19, #0x1
   13f1c:	ldp	x20, x19, [sp, #48]
   13f20:	ldp	x22, x21, [sp, #32]
   13f24:	ldr	x23, [sp, #16]
   13f28:	ldp	x29, x30, [sp], #64
   13f2c:	ret
   13f30:	bl	a850 <abort@plt>
   13f34:	stp	x29, x30, [sp, #-64]!
   13f38:	cmp	x1, x2
   13f3c:	str	x23, [sp, #16]
   13f40:	stp	x22, x21, [sp, #32]
   13f44:	stp	x20, x19, [sp, #48]
   13f48:	mov	x29, sp
   13f4c:	b.hi	13fd8 <_option_is_end@@Base+0x3ac>  // b.pmore
   13f50:	ldr	x8, [x0, #48]
   13f54:	mov	x21, x2
   13f58:	mov	x22, x0
   13f5c:	cmp	x8, x2
   13f60:	b.cc	13fd8 <_option_is_end@@Base+0x3ac>  // b.lo, b.ul, b.last
   13f64:	mov	x19, x1
   13f68:	cmp	x1, x21
   13f6c:	b.cs	13fbc <_option_is_end@@Base+0x390>  // b.hs, b.nlast
   13f70:	ldr	x23, [x22, #8]
   13f74:	mov	x20, x3
   13f78:	cbz	x23, 13fa0 <_option_is_end@@Base+0x374>
   13f7c:	ldr	x8, [x22, #40]
   13f80:	mov	x0, x20
   13f84:	ldr	x1, [x8, x19, lsl #3]
   13f88:	blr	x23
   13f8c:	tbnz	w0, #0, 13fc0 <_option_is_end@@Base+0x394>
   13f90:	add	x19, x19, #0x1
   13f94:	cmp	x21, x19
   13f98:	b.ne	13f7c <_option_is_end@@Base+0x350>  // b.any
   13f9c:	b	13fbc <_option_is_end@@Base+0x390>
   13fa0:	ldr	x8, [x22, #40]
   13fa4:	ldr	x9, [x8, x19, lsl #3]
   13fa8:	cmp	x9, x20
   13fac:	b.eq	13fc0 <_option_is_end@@Base+0x394>  // b.none
   13fb0:	add	x19, x19, #0x1
   13fb4:	cmp	x21, x19
   13fb8:	b.ne	13fa4 <_option_is_end@@Base+0x378>  // b.any
   13fbc:	mov	x19, #0xffffffffffffffff    	// #-1
   13fc0:	mov	x0, x19
   13fc4:	ldp	x20, x19, [sp, #48]
   13fc8:	ldp	x22, x21, [sp, #32]
   13fcc:	ldr	x23, [sp, #16]
   13fd0:	ldp	x29, x30, [sp], #64
   13fd4:	ret
   13fd8:	bl	a850 <abort@plt>
   13fdc:	stp	x29, x30, [sp, #-48]!
   13fe0:	stp	x22, x21, [sp, #16]
   13fe4:	stp	x20, x19, [sp, #32]
   13fe8:	ldp	x21, x8, [x0, #48]
   13fec:	mov	x19, x0
   13ff0:	mov	x20, x1
   13ff4:	mov	x29, sp
   13ff8:	cmp	x21, x8
   13ffc:	b.ne	14030 <_option_is_end@@Base+0x404>  // b.any
   14000:	lsl	x8, x21, #1
   14004:	cmp	x21, #0x0
   14008:	csinv	x8, x8, xzr, ge  // ge = tcont
   1400c:	adds	x8, x8, #0x1
   14010:	csinv	x22, x8, xzr, cc  // cc = lo, ul, last
   14014:	lsr	x8, x22, #61
   14018:	cbz	x8, 1403c <_option_is_end@@Base+0x410>
   1401c:	mov	x0, xzr
   14020:	ldp	x20, x19, [sp, #32]
   14024:	ldp	x22, x21, [sp, #16]
   14028:	ldp	x29, x30, [sp], #48
   1402c:	ret
   14030:	ldr	x0, [x19, #40]
   14034:	cbnz	x21, 14058 <_option_is_end@@Base+0x42c>
   14038:	b	14070 <_option_is_end@@Base+0x444>
   1403c:	ldr	x0, [x19, #40]
   14040:	lsl	x1, x22, #3
   14044:	bl	a730 <realloc@plt>
   14048:	cbz	x0, 14020 <_option_is_end@@Base+0x3f4>
   1404c:	str	x0, [x19, #40]
   14050:	str	x22, [x19, #56]
   14054:	cbz	x21, 14070 <_option_is_end@@Base+0x444>
   14058:	mov	x8, x21
   1405c:	add	x9, x0, x8, lsl #3
   14060:	ldur	x10, [x9, #-8]
   14064:	subs	x8, x8, #0x1
   14068:	str	x10, [x9]
   1406c:	b.ne	1405c <_option_is_end@@Base+0x430>  // b.any
   14070:	str	x20, [x0]
   14074:	add	x8, x21, #0x1
   14078:	mov	w0, #0x1                   	// #1
   1407c:	str	x8, [x19, #48]
   14080:	ldp	x20, x19, [sp, #32]
   14084:	ldp	x22, x21, [sp, #16]
   14088:	ldp	x29, x30, [sp], #48
   1408c:	ret
   14090:	stp	x29, x30, [sp, #-48]!
   14094:	stp	x22, x21, [sp, #16]
   14098:	stp	x20, x19, [sp, #32]
   1409c:	ldp	x21, x8, [x0, #48]
   140a0:	mov	x19, x0
   140a4:	mov	x20, x1
   140a8:	mov	x29, sp
   140ac:	cmp	x21, x8
   140b0:	b.ne	140e4 <_option_is_end@@Base+0x4b8>  // b.any
   140b4:	lsl	x8, x21, #1
   140b8:	cmp	x21, #0x0
   140bc:	csinv	x8, x8, xzr, ge  // ge = tcont
   140c0:	adds	x8, x8, #0x1
   140c4:	csinv	x22, x8, xzr, cc  // cc = lo, ul, last
   140c8:	lsr	x8, x22, #61
   140cc:	cbz	x8, 140ec <_option_is_end@@Base+0x4c0>
   140d0:	mov	x0, xzr
   140d4:	ldp	x20, x19, [sp, #32]
   140d8:	ldp	x22, x21, [sp, #16]
   140dc:	ldp	x29, x30, [sp], #48
   140e0:	ret
   140e4:	ldr	x0, [x19, #40]
   140e8:	b	14104 <_option_is_end@@Base+0x4d8>
   140ec:	ldr	x0, [x19, #40]
   140f0:	lsl	x1, x22, #3
   140f4:	bl	a730 <realloc@plt>
   140f8:	cbz	x0, 140d4 <_option_is_end@@Base+0x4a8>
   140fc:	str	x0, [x19, #40]
   14100:	str	x22, [x19, #56]
   14104:	str	x20, [x0, x21, lsl #3]
   14108:	add	x0, x21, #0x1
   1410c:	str	x0, [x19, #48]
   14110:	ldp	x20, x19, [sp, #32]
   14114:	ldp	x22, x21, [sp, #16]
   14118:	ldp	x29, x30, [sp], #48
   1411c:	ret
   14120:	stp	x29, x30, [sp, #-64]!
   14124:	stp	x24, x23, [sp, #16]
   14128:	stp	x22, x21, [sp, #32]
   1412c:	stp	x20, x19, [sp, #48]
   14130:	ldr	x22, [x0, #48]
   14134:	sub	x23, x1, #0x1
   14138:	mov	x29, sp
   1413c:	cmp	x23, x22
   14140:	b.cs	141e0 <_option_is_end@@Base+0x5b4>  // b.hs, b.nlast
   14144:	ldr	x8, [x0, #56]
   14148:	mov	x20, x0
   1414c:	mov	x19, x1
   14150:	mov	x21, x2
   14154:	cmp	x22, x8
   14158:	b.ne	14194 <_option_is_end@@Base+0x568>  // b.any
   1415c:	lsl	x8, x22, #1
   14160:	cmp	x22, #0x0
   14164:	csinv	x8, x8, xzr, ge  // ge = tcont
   14168:	adds	x8, x8, #0x1
   1416c:	csinv	x24, x8, xzr, cc  // cc = lo, ul, last
   14170:	lsr	x8, x24, #61
   14174:	cbnz	x8, 141c4 <_option_is_end@@Base+0x598>
   14178:	ldr	x0, [x20, #40]
   1417c:	lsl	x1, x24, #3
   14180:	bl	a730 <realloc@plt>
   14184:	cbz	x0, 141c4 <_option_is_end@@Base+0x598>
   14188:	str	x0, [x20, #40]
   1418c:	str	x24, [x20, #56]
   14190:	b	14198 <_option_is_end@@Base+0x56c>
   14194:	ldr	x0, [x20, #40]
   14198:	mov	x8, x22
   1419c:	add	x9, x0, x8, lsl #3
   141a0:	ldur	x10, [x9, #-8]
   141a4:	sub	x8, x8, #0x1
   141a8:	cmp	x8, x23
   141ac:	str	x10, [x9]
   141b0:	b.hi	1419c <_option_is_end@@Base+0x570>  // b.pmore
   141b4:	add	x8, x22, #0x1
   141b8:	str	x21, [x0, x23, lsl #3]
   141bc:	str	x8, [x20, #48]
   141c0:	b	141c8 <_option_is_end@@Base+0x59c>
   141c4:	mov	x19, xzr
   141c8:	mov	x0, x19
   141cc:	ldp	x20, x19, [sp, #48]
   141d0:	ldp	x22, x21, [sp, #32]
   141d4:	ldp	x24, x23, [sp, #16]
   141d8:	ldp	x29, x30, [sp], #64
   141dc:	ret
   141e0:	bl	a850 <abort@plt>
   141e4:	stp	x29, x30, [sp, #-64]!
   141e8:	stp	x22, x21, [sp, #32]
   141ec:	stp	x20, x19, [sp, #48]
   141f0:	ldr	x22, [x0, #48]
   141f4:	sub	x8, x1, #0x1
   141f8:	str	x23, [sp, #16]
   141fc:	mov	x29, sp
   14200:	cmp	x8, x22
   14204:	b.cs	142b4 <_option_is_end@@Base+0x688>  // b.hs, b.nlast
   14208:	ldr	x8, [x0, #56]
   1420c:	mov	x19, x0
   14210:	mov	x20, x1
   14214:	mov	x21, x2
   14218:	cmp	x22, x8
   1421c:	b.ne	14244 <_option_is_end@@Base+0x618>  // b.any
   14220:	lsl	x8, x22, #1
   14224:	cmp	x22, #0x0
   14228:	csinv	x8, x8, xzr, ge  // ge = tcont
   1422c:	adds	x8, x8, #0x1
   14230:	csinv	x23, x8, xzr, cc  // cc = lo, ul, last
   14234:	lsr	x8, x23, #61
   14238:	cbz	x8, 14254 <_option_is_end@@Base+0x628>
   1423c:	mov	x0, xzr
   14240:	b	142a0 <_option_is_end@@Base+0x674>
   14244:	ldr	x0, [x19, #40]
   14248:	cmp	x22, x20
   1424c:	b.hi	14274 <_option_is_end@@Base+0x648>  // b.pmore
   14250:	b	14290 <_option_is_end@@Base+0x664>
   14254:	ldr	x0, [x19, #40]
   14258:	lsl	x1, x23, #3
   1425c:	bl	a730 <realloc@plt>
   14260:	cbz	x0, 142a0 <_option_is_end@@Base+0x674>
   14264:	str	x0, [x19, #40]
   14268:	str	x23, [x19, #56]
   1426c:	cmp	x22, x20
   14270:	b.ls	14290 <_option_is_end@@Base+0x664>  // b.plast
   14274:	mov	x8, x22
   14278:	add	x9, x0, x8, lsl #3
   1427c:	ldur	x10, [x9, #-8]
   14280:	sub	x8, x8, #0x1
   14284:	cmp	x8, x20
   14288:	str	x10, [x9]
   1428c:	b.hi	14278 <_option_is_end@@Base+0x64c>  // b.pmore
   14290:	str	x21, [x0, x20, lsl #3]
   14294:	add	x8, x22, #0x1
   14298:	add	x0, x20, #0x1
   1429c:	str	x8, [x19, #48]
   142a0:	ldp	x20, x19, [sp, #48]
   142a4:	ldp	x22, x21, [sp, #32]
   142a8:	ldr	x23, [sp, #16]
   142ac:	ldp	x29, x30, [sp], #64
   142b0:	ret
   142b4:	bl	a850 <abort@plt>
   142b8:	stp	x29, x30, [sp, #-64]!
   142bc:	stp	x22, x21, [sp, #32]
   142c0:	stp	x20, x19, [sp, #48]
   142c4:	ldr	x22, [x0, #48]
   142c8:	str	x23, [sp, #16]
   142cc:	mov	x29, sp
   142d0:	cmp	x22, x1
   142d4:	b.cc	14384 <_option_is_end@@Base+0x758>  // b.lo, b.ul, b.last
   142d8:	ldr	x8, [x0, #56]
   142dc:	mov	x19, x0
   142e0:	mov	x20, x1
   142e4:	mov	x21, x2
   142e8:	cmp	x22, x8
   142ec:	b.ne	14314 <_option_is_end@@Base+0x6e8>  // b.any
   142f0:	lsl	x8, x22, #1
   142f4:	cmp	x22, #0x0
   142f8:	csinv	x8, x8, xzr, ge  // ge = tcont
   142fc:	adds	x8, x8, #0x1
   14300:	csinv	x23, x8, xzr, cc  // cc = lo, ul, last
   14304:	lsr	x8, x23, #61
   14308:	cbz	x8, 14324 <_option_is_end@@Base+0x6f8>
   1430c:	mov	x0, xzr
   14310:	b	14370 <_option_is_end@@Base+0x744>
   14314:	ldr	x0, [x19, #40]
   14318:	cmp	x22, x20
   1431c:	b.hi	14344 <_option_is_end@@Base+0x718>  // b.pmore
   14320:	b	14360 <_option_is_end@@Base+0x734>
   14324:	ldr	x0, [x19, #40]
   14328:	lsl	x1, x23, #3
   1432c:	bl	a730 <realloc@plt>
   14330:	cbz	x0, 14370 <_option_is_end@@Base+0x744>
   14334:	str	x0, [x19, #40]
   14338:	str	x23, [x19, #56]
   1433c:	cmp	x22, x20
   14340:	b.ls	14360 <_option_is_end@@Base+0x734>  // b.plast
   14344:	mov	x8, x22
   14348:	add	x9, x0, x8, lsl #3
   1434c:	ldur	x10, [x9, #-8]
   14350:	sub	x8, x8, #0x1
   14354:	cmp	x8, x20
   14358:	str	x10, [x9]
   1435c:	b.hi	14348 <_option_is_end@@Base+0x71c>  // b.pmore
   14360:	str	x21, [x0, x20, lsl #3]
   14364:	add	x8, x22, #0x1
   14368:	add	x0, x20, #0x1
   1436c:	str	x8, [x19, #48]
   14370:	ldp	x20, x19, [sp, #48]
   14374:	ldp	x22, x21, [sp, #32]
   14378:	ldr	x23, [sp, #16]
   1437c:	ldp	x29, x30, [sp], #64
   14380:	ret
   14384:	bl	a850 <abort@plt>
   14388:	stp	x29, x30, [sp, #-48]!
   1438c:	stp	x22, x21, [sp, #16]
   14390:	stp	x20, x19, [sp, #32]
   14394:	ldr	x21, [x0, #48]
   14398:	sub	x8, x1, #0x1
   1439c:	mov	x29, sp
   143a0:	cmp	x8, x21
   143a4:	b.cs	14444 <_option_is_end@@Base+0x818>  // b.hs, b.nlast
   143a8:	ldr	x9, [x0, #24]
   143ac:	ldr	x22, [x0, #40]
   143b0:	mov	x19, x0
   143b4:	mov	x20, x1
   143b8:	cbz	x9, 143c4 <_option_is_end@@Base+0x798>
   143bc:	ldr	x0, [x22, x8, lsl #3]
   143c0:	blr	x9
   143c4:	subs	x8, x21, x20
   143c8:	b.ls	14428 <_option_is_end@@Base+0x7fc>  // b.plast
   143cc:	cmp	x8, #0x4
   143d0:	mov	x9, x20
   143d4:	b.cc	1440c <_option_is_end@@Base+0x7e0>  // b.lo, b.ul, b.last
   143d8:	and	x10, x8, #0xfffffffffffffffc
   143dc:	add	x11, x22, x20, lsl #3
   143e0:	add	x9, x10, x20
   143e4:	add	x11, x11, #0x8
   143e8:	mov	x12, x10
   143ec:	ldur	q0, [x11, #-8]
   143f0:	ldur	q1, [x11, #8]
   143f4:	subs	x12, x12, #0x4
   143f8:	stp	q0, q1, [x11, #-16]
   143fc:	add	x11, x11, #0x20
   14400:	b.ne	143ec <_option_is_end@@Base+0x7c0>  // b.any
   14404:	cmp	x8, x10
   14408:	b.eq	14428 <_option_is_end@@Base+0x7fc>  // b.none
   1440c:	sub	x8, x21, x9
   14410:	add	x9, x22, x9, lsl #3
   14414:	ldr	x10, [x9]
   14418:	subs	x8, x8, #0x1
   1441c:	stur	x10, [x9, #-8]
   14420:	add	x9, x9, #0x8
   14424:	b.ne	14414 <_option_is_end@@Base+0x7e8>  // b.any
   14428:	sub	x8, x21, #0x1
   1442c:	str	x8, [x19, #48]
   14430:	ldp	x20, x19, [sp, #32]
   14434:	ldp	x22, x21, [sp, #16]
   14438:	mov	w0, #0x1                   	// #1
   1443c:	ldp	x29, x30, [sp], #48
   14440:	ret
   14444:	bl	a850 <abort@plt>
   14448:	stp	x29, x30, [sp, #-48]!
   1444c:	stp	x22, x21, [sp, #16]
   14450:	stp	x20, x19, [sp, #32]
   14454:	ldr	x21, [x0, #48]
   14458:	mov	x29, sp
   1445c:	cmp	x21, x1
   14460:	b.ls	1450c <_option_is_end@@Base+0x8e0>  // b.plast
   14464:	ldr	x8, [x0, #24]
   14468:	ldr	x22, [x0, #40]
   1446c:	mov	x19, x0
   14470:	mov	x20, x1
   14474:	cbz	x8, 14480 <_option_is_end@@Base+0x854>
   14478:	ldr	x0, [x22, x20, lsl #3]
   1447c:	blr	x8
   14480:	add	x8, x20, #0x1
   14484:	cmp	x8, x21
   14488:	b.cs	144f0 <_option_is_end@@Base+0x8c4>  // b.hs, b.nlast
   1448c:	mvn	x9, x20
   14490:	add	x9, x21, x9
   14494:	cmp	x9, #0x4
   14498:	b.cc	144d4 <_option_is_end@@Base+0x8a8>  // b.lo, b.ul, b.last
   1449c:	and	x10, x9, #0xfffffffffffffffc
   144a0:	add	x11, x22, x20, lsl #3
   144a4:	add	x8, x8, x10
   144a8:	add	x20, x10, x20
   144ac:	add	x11, x11, #0x10
   144b0:	mov	x12, x10
   144b4:	ldur	q0, [x11, #-8]
   144b8:	ldur	q1, [x11, #8]
   144bc:	subs	x12, x12, #0x4
   144c0:	stp	q0, q1, [x11, #-16]
   144c4:	add	x11, x11, #0x20
   144c8:	b.ne	144b4 <_option_is_end@@Base+0x888>  // b.any
   144cc:	cmp	x9, x10
   144d0:	b.eq	144f0 <_option_is_end@@Base+0x8c4>  // b.none
   144d4:	ldr	x10, [x22, x8, lsl #3]
   144d8:	mov	x9, x8
   144dc:	add	x8, x8, #0x1
   144e0:	cmp	x21, x8
   144e4:	str	x10, [x22, x20, lsl #3]
   144e8:	mov	x20, x9
   144ec:	b.ne	144d4 <_option_is_end@@Base+0x8a8>  // b.any
   144f0:	sub	x8, x21, #0x1
   144f4:	str	x8, [x19, #48]
   144f8:	ldp	x20, x19, [sp, #32]
   144fc:	ldp	x22, x21, [sp, #16]
   14500:	mov	w0, #0x1                   	// #1
   14504:	ldp	x29, x30, [sp], #48
   14508:	ret
   1450c:	bl	a850 <abort@plt>
   14510:	stp	x29, x30, [sp, #-64]!
   14514:	stp	x22, x21, [sp, #32]
   14518:	stp	x20, x19, [sp, #48]
   1451c:	ldr	x22, [x0, #48]
   14520:	str	x23, [sp, #16]
   14524:	mov	x29, sp
   14528:	cbz	x22, 14630 <_option_is_end@@Base+0xa04>
   1452c:	ldr	x23, [x0, #8]
   14530:	mov	x19, x0
   14534:	mov	x20, x1
   14538:	cbz	x23, 14564 <_option_is_end@@Base+0x938>
   1453c:	mov	x21, xzr
   14540:	ldr	x8, [x19, #40]
   14544:	mov	x0, x20
   14548:	ldr	x1, [x8, x21, lsl #3]
   1454c:	blr	x23
   14550:	tbnz	w0, #0, 14588 <_option_is_end@@Base+0x95c>
   14554:	add	x21, x21, #0x1
   14558:	cmp	x22, x21
   1455c:	b.ne	14540 <_option_is_end@@Base+0x914>  // b.any
   14560:	b	14630 <_option_is_end@@Base+0xa04>
   14564:	ldr	x8, [x19, #40]
   14568:	mov	x21, xzr
   1456c:	ldr	x9, [x8, x21, lsl #3]
   14570:	cmp	x9, x20
   14574:	b.eq	14588 <_option_is_end@@Base+0x95c>  // b.none
   14578:	add	x21, x21, #0x1
   1457c:	cmp	x22, x21
   14580:	b.ne	1456c <_option_is_end@@Base+0x940>  // b.any
   14584:	b	14630 <_option_is_end@@Base+0xa04>
   14588:	cmn	x21, #0x1
   1458c:	b.eq	14630 <_option_is_end@@Base+0xa04>  // b.none
   14590:	ldr	x20, [x19, #48]
   14594:	cmp	x20, x21
   14598:	b.ls	14648 <_option_is_end@@Base+0xa1c>  // b.plast
   1459c:	ldr	x8, [x19, #24]
   145a0:	ldr	x22, [x19, #40]
   145a4:	cbz	x8, 145b0 <_option_is_end@@Base+0x984>
   145a8:	ldr	x0, [x22, x21, lsl #3]
   145ac:	blr	x8
   145b0:	add	x8, x21, #0x1
   145b4:	cmp	x8, x20
   145b8:	b.cs	14620 <_option_is_end@@Base+0x9f4>  // b.hs, b.nlast
   145bc:	mvn	x9, x21
   145c0:	add	x9, x20, x9
   145c4:	cmp	x9, #0x4
   145c8:	b.cc	14604 <_option_is_end@@Base+0x9d8>  // b.lo, b.ul, b.last
   145cc:	and	x10, x9, #0xfffffffffffffffc
   145d0:	add	x11, x22, x21, lsl #3
   145d4:	add	x8, x8, x10
   145d8:	add	x21, x21, x10
   145dc:	add	x11, x11, #0x10
   145e0:	mov	x12, x10
   145e4:	ldur	q0, [x11, #-8]
   145e8:	ldur	q1, [x11, #8]
   145ec:	subs	x12, x12, #0x4
   145f0:	stp	q0, q1, [x11, #-16]
   145f4:	add	x11, x11, #0x20
   145f8:	b.ne	145e4 <_option_is_end@@Base+0x9b8>  // b.any
   145fc:	cmp	x9, x10
   14600:	b.eq	14620 <_option_is_end@@Base+0x9f4>  // b.none
   14604:	ldr	x10, [x22, x8, lsl #3]
   14608:	mov	x9, x8
   1460c:	add	x8, x8, #0x1
   14610:	cmp	x20, x8
   14614:	str	x10, [x22, x21, lsl #3]
   14618:	mov	x21, x9
   1461c:	b.ne	14604 <_option_is_end@@Base+0x9d8>  // b.any
   14620:	sub	x8, x20, #0x1
   14624:	mov	w0, #0x1                   	// #1
   14628:	str	x8, [x19, #48]
   1462c:	b	14634 <_option_is_end@@Base+0xa08>
   14630:	mov	w0, wzr
   14634:	ldp	x20, x19, [sp, #48]
   14638:	ldp	x22, x21, [sp, #32]
   1463c:	ldr	x23, [sp, #16]
   14640:	ldp	x29, x30, [sp], #64
   14644:	ret
   14648:	bl	a850 <abort@plt>
   1464c:	stp	x29, x30, [sp, #-48]!
   14650:	stp	x22, x21, [sp, #16]
   14654:	stp	x20, x19, [sp, #32]
   14658:	ldr	x20, [x0, #40]
   1465c:	mov	x19, x0
   14660:	mov	x29, sp
   14664:	cbz	x20, 14694 <_option_is_end@@Base+0xa68>
   14668:	ldr	x21, [x19, #24]
   1466c:	cbz	x21, 1468c <_option_is_end@@Base+0xa60>
   14670:	ldr	x22, [x19, #48]
   14674:	cbz	x22, 1468c <_option_is_end@@Base+0xa60>
   14678:	ldr	x0, [x20], #8
   1467c:	blr	x21
   14680:	subs	x22, x22, #0x1
   14684:	b.ne	14678 <_option_is_end@@Base+0xa4c>  // b.any
   14688:	ldr	x20, [x19, #40]
   1468c:	mov	x0, x20
   14690:	bl	a970 <free@plt>
   14694:	mov	x0, x19
   14698:	ldp	x20, x19, [sp, #32]
   1469c:	ldp	x22, x21, [sp, #16]
   146a0:	ldp	x29, x30, [sp], #48
   146a4:	b	a970 <free@plt>
   146a8:	ldr	x9, [x0]
   146ac:	stp	x9, x0, [x8]
   146b0:	ldp	x10, x9, [x0, #40]
   146b4:	stp	x9, x10, [x8, #16]
   146b8:	add	x9, x10, x9, lsl #3
   146bc:	str	x9, [x8, #32]
   146c0:	ret
   146c4:	stp	x29, x30, [sp, #-16]!
   146c8:	cmp	x1, x2
   146cc:	mov	x29, sp
   146d0:	b.hi	14704 <_option_is_end@@Base+0xad8>  // b.pmore
   146d4:	ldr	x9, [x0, #48]
   146d8:	cmp	x9, x2
   146dc:	b.cc	14704 <_option_is_end@@Base+0xad8>  // b.lo, b.ul, b.last
   146e0:	ldr	x10, [x0]
   146e4:	stp	x0, x9, [x8, #8]
   146e8:	str	x10, [x8]
   146ec:	ldr	x9, [x0, #40]
   146f0:	add	x10, x9, x1, lsl #3
   146f4:	add	x9, x9, x2, lsl #3
   146f8:	stp	x10, x9, [x8, #24]
   146fc:	ldp	x29, x30, [sp], #16
   14700:	ret
   14704:	bl	a850 <abort@plt>
   14708:	stp	x29, x30, [sp, #-16]!
   1470c:	ldp	x8, x9, [x0, #8]
   14710:	mov	x29, sp
   14714:	ldr	x10, [x8, #48]
   14718:	cmp	x9, x10
   1471c:	b.ne	14760 <_option_is_end@@Base+0xb34>  // b.any
   14720:	ldp	x9, x10, [x0, #24]
   14724:	cmp	x9, x10
   14728:	b.cs	1478c <_option_is_end@@Base+0xb60>  // b.hs, b.nlast
   1472c:	ldr	x10, [x9]
   14730:	str	x10, [x1]
   14734:	cbz	x2, 1474c <_option_is_end@@Base+0xb20>
   14738:	ldr	x8, [x8, #40]
   1473c:	sub	x8, x9, x8
   14740:	asr	x8, x8, #3
   14744:	add	x8, x8, #0x1
   14748:	str	x8, [x2]
   1474c:	add	x8, x9, #0x8
   14750:	str	x8, [x0, #24]
   14754:	mov	w0, #0x1                   	// #1
   14758:	ldp	x29, x30, [sp], #16
   1475c:	ret
   14760:	add	x10, x10, #0x1
   14764:	cmp	x9, x10
   14768:	b.ne	14798 <_option_is_end@@Base+0xb6c>  // b.any
   1476c:	ldp	x10, x11, [x0, #24]
   14770:	sub	x9, x9, #0x1
   14774:	str	x9, [x0, #16]
   14778:	sub	x9, x10, #0x8
   1477c:	sub	x10, x11, #0x8
   14780:	stp	x9, x10, [x0, #24]
   14784:	cmp	x9, x10
   14788:	b.cc	1472c <_option_is_end@@Base+0xb00>  // b.lo, b.ul, b.last
   1478c:	mov	w0, wzr
   14790:	ldp	x29, x30, [sp], #16
   14794:	ret
   14798:	bl	a850 <abort@plt>
   1479c:	ret
   147a0:	stp	x29, x30, [sp, #-80]!
   147a4:	stp	x24, x23, [sp, #32]
   147a8:	stp	x22, x21, [sp, #48]
   147ac:	stp	x20, x19, [sp, #64]
   147b0:	ldr	x24, [x0, #48]
   147b4:	str	x25, [sp, #16]
   147b8:	mov	x29, sp
   147bc:	cbz	x24, 1480c <_option_is_end@@Base+0xbe0>
   147c0:	mov	x19, x2
   147c4:	mov	x20, x0
   147c8:	mov	x21, x1
   147cc:	mov	x22, xzr
   147d0:	b	147e0 <_option_is_end@@Base+0xbb4>
   147d4:	add	x22, x23, #0x1
   147d8:	cmp	x22, x24
   147dc:	b.cs	1480c <_option_is_end@@Base+0xbe0>  // b.hs, b.nlast
   147e0:	ldr	x8, [x20, #40]
   147e4:	sub	x9, x24, x22
   147e8:	add	x23, x22, x9, lsr #1
   147ec:	mov	x1, x19
   147f0:	ldr	x0, [x8, x23, lsl #3]
   147f4:	blr	x21
   147f8:	tbnz	w0, #31, 147d4 <_option_is_end@@Base+0xba8>
   147fc:	cbz	w0, 14830 <_option_is_end@@Base+0xc04>
   14800:	mov	x24, x23
   14804:	cmp	x22, x24
   14808:	b.cc	147e0 <_option_is_end@@Base+0xbb4>  // b.lo, b.ul, b.last
   1480c:	mov	x22, #0xffffffffffffffff    	// #-1
   14810:	add	x0, x22, #0x1
   14814:	ldp	x20, x19, [sp, #64]
   14818:	ldp	x22, x21, [sp, #48]
   1481c:	ldp	x24, x23, [sp, #32]
   14820:	ldr	x25, [sp, #16]
   14824:	ldp	x29, x30, [sp], #80
   14828:	ret
   1482c:	add	x22, x25, #0x1
   14830:	cmp	x23, x22
   14834:	b.ls	14810 <_option_is_end@@Base+0xbe4>  // b.plast
   14838:	ldr	x8, [x20, #40]
   1483c:	sub	x9, x23, x22
   14840:	lsr	x24, x9, #1
   14844:	add	x25, x24, x22
   14848:	ldr	x0, [x8, x25, lsl #3]
   1484c:	mov	x1, x19
   14850:	blr	x21
   14854:	tbnz	w0, #31, 1482c <_option_is_end@@Base+0xc00>
   14858:	cbnz	w0, 14868 <_option_is_end@@Base+0xc3c>
   1485c:	sub	x23, x25, #0x1
   14860:	cbnz	x24, 14830 <_option_is_end@@Base+0xc04>
   14864:	b	14810 <_option_is_end@@Base+0xbe4>
   14868:	bl	a850 <abort@plt>
   1486c:	stp	x29, x30, [sp, #-80]!
   14870:	cmp	x2, x3
   14874:	str	x25, [sp, #16]
   14878:	stp	x24, x23, [sp, #32]
   1487c:	stp	x22, x21, [sp, #48]
   14880:	stp	x20, x19, [sp, #64]
   14884:	mov	x29, sp
   14888:	b.hi	1494c <_option_is_end@@Base+0xd20>  // b.pmore
   1488c:	ldr	x8, [x0, #48]
   14890:	mov	x23, x3
   14894:	mov	x22, x0
   14898:	cmp	x8, x3
   1489c:	b.cc	1494c <_option_is_end@@Base+0xd20>  // b.lo, b.ul, b.last
   148a0:	mov	x19, x2
   148a4:	cmp	x2, x23
   148a8:	b.cs	148f0 <_option_is_end@@Base+0xcc4>  // b.hs, b.nlast
   148ac:	mov	x20, x4
   148b0:	mov	x21, x1
   148b4:	b	148c4 <_option_is_end@@Base+0xc98>
   148b8:	add	x19, x24, #0x1
   148bc:	cmp	x19, x23
   148c0:	b.cs	148f0 <_option_is_end@@Base+0xcc4>  // b.hs, b.nlast
   148c4:	ldr	x8, [x22, #40]
   148c8:	sub	x9, x23, x19
   148cc:	add	x24, x19, x9, lsr #1
   148d0:	mov	x1, x20
   148d4:	ldr	x0, [x8, x24, lsl #3]
   148d8:	blr	x21
   148dc:	tbnz	w0, #31, 148b8 <_option_is_end@@Base+0xc8c>
   148e0:	cbz	w0, 14914 <_option_is_end@@Base+0xce8>
   148e4:	mov	x23, x24
   148e8:	cmp	x19, x23
   148ec:	b.cc	148c4 <_option_is_end@@Base+0xc98>  // b.lo, b.ul, b.last
   148f0:	mov	x19, #0xffffffffffffffff    	// #-1
   148f4:	add	x0, x19, #0x1
   148f8:	ldp	x20, x19, [sp, #64]
   148fc:	ldp	x22, x21, [sp, #48]
   14900:	ldp	x24, x23, [sp, #32]
   14904:	ldr	x25, [sp, #16]
   14908:	ldp	x29, x30, [sp], #80
   1490c:	ret
   14910:	add	x19, x25, #0x1
   14914:	cmp	x24, x19
   14918:	b.ls	148f4 <_option_is_end@@Base+0xcc8>  // b.plast
   1491c:	ldr	x8, [x22, #40]
   14920:	sub	x9, x24, x19
   14924:	lsr	x23, x9, #1
   14928:	add	x25, x23, x19
   1492c:	ldr	x0, [x8, x25, lsl #3]
   14930:	mov	x1, x20
   14934:	blr	x21
   14938:	tbnz	w0, #31, 14910 <_option_is_end@@Base+0xce4>
   1493c:	cbnz	w0, 1494c <_option_is_end@@Base+0xd20>
   14940:	sub	x24, x25, #0x1
   14944:	cbnz	x23, 14914 <_option_is_end@@Base+0xce8>
   14948:	b	148f4 <_option_is_end@@Base+0xcc8>
   1494c:	bl	a850 <abort@plt>
   14950:	stp	x29, x30, [sp, #-80]!
   14954:	stp	x24, x23, [sp, #32]
   14958:	stp	x22, x21, [sp, #48]
   1495c:	stp	x20, x19, [sp, #64]
   14960:	ldr	x24, [x0, #48]
   14964:	str	x25, [sp, #16]
   14968:	mov	x29, sp
   1496c:	cbz	x24, 149bc <_option_is_end@@Base+0xd90>
   14970:	mov	x19, x2
   14974:	mov	x21, x0
   14978:	mov	x22, x1
   1497c:	mov	x20, xzr
   14980:	b	14990 <_option_is_end@@Base+0xd64>
   14984:	add	x20, x23, #0x1
   14988:	cmp	x20, x24
   1498c:	b.cs	149bc <_option_is_end@@Base+0xd90>  // b.hs, b.nlast
   14990:	ldr	x8, [x21, #40]
   14994:	sub	x9, x24, x20
   14998:	add	x23, x20, x9, lsr #1
   1499c:	mov	x1, x19
   149a0:	ldr	x0, [x8, x23, lsl #3]
   149a4:	blr	x22
   149a8:	tbnz	w0, #31, 14984 <_option_is_end@@Base+0xd58>
   149ac:	cbz	w0, 149e0 <_option_is_end@@Base+0xdb4>
   149b0:	mov	x24, x23
   149b4:	cmp	x20, x24
   149b8:	b.cc	14990 <_option_is_end@@Base+0xd64>  // b.lo, b.ul, b.last
   149bc:	mov	x20, #0xffffffffffffffff    	// #-1
   149c0:	mov	x0, x20
   149c4:	ldp	x20, x19, [sp, #64]
   149c8:	ldp	x22, x21, [sp, #48]
   149cc:	ldp	x24, x23, [sp, #32]
   149d0:	ldr	x25, [sp, #16]
   149d4:	ldp	x29, x30, [sp], #80
   149d8:	ret
   149dc:	add	x20, x25, #0x1
   149e0:	cmp	x23, x20
   149e4:	b.ls	149c0 <_option_is_end@@Base+0xd94>  // b.plast
   149e8:	ldr	x8, [x21, #40]
   149ec:	sub	x9, x23, x20
   149f0:	lsr	x24, x9, #1
   149f4:	add	x25, x24, x20
   149f8:	ldr	x0, [x8, x25, lsl #3]
   149fc:	mov	x1, x19
   14a00:	blr	x22
   14a04:	tbnz	w0, #31, 149dc <_option_is_end@@Base+0xdb0>
   14a08:	cbnz	w0, 14a18 <_option_is_end@@Base+0xdec>
   14a0c:	sub	x23, x25, #0x1
   14a10:	cbnz	x24, 149e0 <_option_is_end@@Base+0xdb4>
   14a14:	b	149c0 <_option_is_end@@Base+0xd94>
   14a18:	bl	a850 <abort@plt>
   14a1c:	stp	x29, x30, [sp, #-80]!
   14a20:	cmp	x2, x3
   14a24:	str	x25, [sp, #16]
   14a28:	stp	x24, x23, [sp, #32]
   14a2c:	stp	x22, x21, [sp, #48]
   14a30:	stp	x20, x19, [sp, #64]
   14a34:	mov	x29, sp
   14a38:	b.hi	14afc <_option_is_end@@Base+0xed0>  // b.pmore
   14a3c:	ldr	x8, [x0, #48]
   14a40:	mov	x23, x3
   14a44:	mov	x22, x0
   14a48:	cmp	x8, x3
   14a4c:	b.cc	14afc <_option_is_end@@Base+0xed0>  // b.lo, b.ul, b.last
   14a50:	mov	x19, x2
   14a54:	cmp	x2, x23
   14a58:	b.cs	14aa0 <_option_is_end@@Base+0xe74>  // b.hs, b.nlast
   14a5c:	mov	x20, x4
   14a60:	mov	x21, x1
   14a64:	b	14a74 <_option_is_end@@Base+0xe48>
   14a68:	add	x19, x24, #0x1
   14a6c:	cmp	x19, x23
   14a70:	b.cs	14aa0 <_option_is_end@@Base+0xe74>  // b.hs, b.nlast
   14a74:	ldr	x8, [x22, #40]
   14a78:	sub	x9, x23, x19
   14a7c:	add	x24, x19, x9, lsr #1
   14a80:	mov	x1, x20
   14a84:	ldr	x0, [x8, x24, lsl #3]
   14a88:	blr	x21
   14a8c:	tbnz	w0, #31, 14a68 <_option_is_end@@Base+0xe3c>
   14a90:	cbz	w0, 14ac4 <_option_is_end@@Base+0xe98>
   14a94:	mov	x23, x24
   14a98:	cmp	x19, x23
   14a9c:	b.cc	14a74 <_option_is_end@@Base+0xe48>  // b.lo, b.ul, b.last
   14aa0:	mov	x19, #0xffffffffffffffff    	// #-1
   14aa4:	mov	x0, x19
   14aa8:	ldp	x20, x19, [sp, #64]
   14aac:	ldp	x22, x21, [sp, #48]
   14ab0:	ldp	x24, x23, [sp, #32]
   14ab4:	ldr	x25, [sp, #16]
   14ab8:	ldp	x29, x30, [sp], #80
   14abc:	ret
   14ac0:	add	x19, x25, #0x1
   14ac4:	cmp	x24, x19
   14ac8:	b.ls	14aa4 <_option_is_end@@Base+0xe78>  // b.plast
   14acc:	ldr	x8, [x22, #40]
   14ad0:	sub	x9, x24, x19
   14ad4:	lsr	x23, x9, #1
   14ad8:	add	x25, x23, x19
   14adc:	ldr	x0, [x8, x25, lsl #3]
   14ae0:	mov	x1, x20
   14ae4:	blr	x21
   14ae8:	tbnz	w0, #31, 14ac0 <_option_is_end@@Base+0xe94>
   14aec:	cbnz	w0, 14afc <_option_is_end@@Base+0xed0>
   14af0:	sub	x24, x25, #0x1
   14af4:	cbnz	x23, 14ac4 <_option_is_end@@Base+0xe98>
   14af8:	b	14aa4 <_option_is_end@@Base+0xe78>
   14afc:	bl	a850 <abort@plt>
   14b00:	stp	x29, x30, [sp, #-64]!
   14b04:	stp	x24, x23, [sp, #16]
   14b08:	stp	x22, x21, [sp, #32]
   14b0c:	stp	x20, x19, [sp, #48]
   14b10:	ldr	x23, [x0, #48]
   14b14:	mov	x20, x2
   14b18:	mov	x19, x0
   14b1c:	mov	x29, sp
   14b20:	cbz	x23, 14ba0 <_option_is_end@@Base+0xf74>
   14b24:	mov	x21, x1
   14b28:	mov	x24, xzr
   14b2c:	b	14b40 <_option_is_end@@Base+0xf14>
   14b30:	add	x24, x22, #0x1
   14b34:	cmp	x23, x24
   14b38:	mov	x22, x24
   14b3c:	b.ls	14b64 <_option_is_end@@Base+0xf38>  // b.plast
   14b40:	ldr	x8, [x19, #40]
   14b44:	sub	x9, x23, x24
   14b48:	add	x22, x24, x9, lsr #1
   14b4c:	mov	x1, x20
   14b50:	ldr	x0, [x8, x22, lsl #3]
   14b54:	blr	x21
   14b58:	tbnz	w0, #31, 14b30 <_option_is_end@@Base+0xf04>
   14b5c:	mov	x23, x22
   14b60:	cbnz	w0, 14b34 <_option_is_end@@Base+0xf08>
   14b64:	ldr	x21, [x19, #48]
   14b68:	cmp	x21, x22
   14b6c:	b.cc	14c24 <_option_is_end@@Base+0xff8>  // b.lo, b.ul, b.last
   14b70:	ldr	x8, [x19, #56]
   14b74:	cmp	x21, x8
   14b78:	b.ne	14bb4 <_option_is_end@@Base+0xf88>  // b.any
   14b7c:	lsl	x8, x21, #1
   14b80:	cmp	x21, #0x0
   14b84:	csinv	x8, x8, xzr, ge  // ge = tcont
   14b88:	adds	x8, x8, #0x1
   14b8c:	csinv	x23, x8, xzr, cc  // cc = lo, ul, last
   14b90:	lsr	x8, x23, #61
   14b94:	cbz	x8, 14bc4 <_option_is_end@@Base+0xf98>
   14b98:	mov	x0, xzr
   14b9c:	b	14c10 <_option_is_end@@Base+0xfe4>
   14ba0:	mov	x22, xzr
   14ba4:	mov	x21, xzr
   14ba8:	ldr	x8, [x19, #56]
   14bac:	cmp	x21, x8
   14bb0:	b.eq	14b7c <_option_is_end@@Base+0xf50>  // b.none
   14bb4:	ldr	x0, [x19, #40]
   14bb8:	cmp	x21, x22
   14bbc:	b.hi	14be4 <_option_is_end@@Base+0xfb8>  // b.pmore
   14bc0:	b	14c00 <_option_is_end@@Base+0xfd4>
   14bc4:	ldr	x0, [x19, #40]
   14bc8:	lsl	x1, x23, #3
   14bcc:	bl	a730 <realloc@plt>
   14bd0:	cbz	x0, 14c10 <_option_is_end@@Base+0xfe4>
   14bd4:	str	x0, [x19, #40]
   14bd8:	str	x23, [x19, #56]
   14bdc:	cmp	x21, x22
   14be0:	b.ls	14c00 <_option_is_end@@Base+0xfd4>  // b.plast
   14be4:	mov	x8, x21
   14be8:	add	x9, x0, x8, lsl #3
   14bec:	ldur	x10, [x9, #-8]
   14bf0:	sub	x8, x8, #0x1
   14bf4:	cmp	x8, x22
   14bf8:	str	x10, [x9]
   14bfc:	b.hi	14be8 <_option_is_end@@Base+0xfbc>  // b.pmore
   14c00:	str	x20, [x0, x22, lsl #3]
   14c04:	add	x8, x21, #0x1
   14c08:	add	x0, x22, #0x1
   14c0c:	str	x8, [x19, #48]
   14c10:	ldp	x20, x19, [sp, #48]
   14c14:	ldp	x22, x21, [sp, #32]
   14c18:	ldp	x24, x23, [sp, #16]
   14c1c:	ldp	x29, x30, [sp], #64
   14c20:	ret
   14c24:	bl	a850 <abort@plt>
   14c28:	stp	x29, x30, [sp, #-80]!
   14c2c:	stp	x24, x23, [sp, #32]
   14c30:	stp	x22, x21, [sp, #48]
   14c34:	stp	x20, x19, [sp, #64]
   14c38:	ldr	x24, [x0, #48]
   14c3c:	str	x25, [sp, #16]
   14c40:	mov	x29, sp
   14c44:	cbz	x24, 14d78 <_option_is_end@@Base+0x114c>
   14c48:	mov	x20, x2
   14c4c:	mov	x19, x0
   14c50:	mov	x21, x1
   14c54:	mov	x22, xzr
   14c58:	b	14c68 <_option_is_end@@Base+0x103c>
   14c5c:	add	x22, x23, #0x1
   14c60:	cmp	x22, x24
   14c64:	b.cs	14d78 <_option_is_end@@Base+0x114c>  // b.hs, b.nlast
   14c68:	ldr	x8, [x19, #40]
   14c6c:	sub	x9, x24, x22
   14c70:	add	x23, x22, x9, lsr #1
   14c74:	mov	x1, x20
   14c78:	ldr	x0, [x8, x23, lsl #3]
   14c7c:	blr	x21
   14c80:	tbnz	w0, #31, 14c5c <_option_is_end@@Base+0x1030>
   14c84:	cbz	w0, 14c9c <_option_is_end@@Base+0x1070>
   14c88:	mov	x24, x23
   14c8c:	cmp	x22, x24
   14c90:	b.cc	14c68 <_option_is_end@@Base+0x103c>  // b.lo, b.ul, b.last
   14c94:	b	14d78 <_option_is_end@@Base+0x114c>
   14c98:	add	x22, x25, #0x1
   14c9c:	cmp	x23, x22
   14ca0:	b.ls	14cd0 <_option_is_end@@Base+0x10a4>  // b.plast
   14ca4:	ldr	x8, [x19, #40]
   14ca8:	sub	x9, x23, x22
   14cac:	lsr	x24, x9, #1
   14cb0:	add	x25, x24, x22
   14cb4:	ldr	x0, [x8, x25, lsl #3]
   14cb8:	mov	x1, x20
   14cbc:	blr	x21
   14cc0:	tbnz	w0, #31, 14c98 <_option_is_end@@Base+0x106c>
   14cc4:	cbnz	w0, 14d94 <_option_is_end@@Base+0x1168>
   14cc8:	sub	x23, x25, #0x1
   14ccc:	cbnz	x24, 14c9c <_option_is_end@@Base+0x1070>
   14cd0:	cmn	x22, #0x1
   14cd4:	b.eq	14d78 <_option_is_end@@Base+0x114c>  // b.none
   14cd8:	ldr	x20, [x19, #48]
   14cdc:	cmp	x20, x22
   14ce0:	b.ls	14d94 <_option_is_end@@Base+0x1168>  // b.plast
   14ce4:	ldr	x8, [x19, #24]
   14ce8:	ldr	x21, [x19, #40]
   14cec:	cbz	x8, 14cf8 <_option_is_end@@Base+0x10cc>
   14cf0:	ldr	x0, [x21, x22, lsl #3]
   14cf4:	blr	x8
   14cf8:	add	x8, x22, #0x1
   14cfc:	cmp	x8, x20
   14d00:	b.cs	14d68 <_option_is_end@@Base+0x113c>  // b.hs, b.nlast
   14d04:	mvn	x9, x22
   14d08:	add	x9, x20, x9
   14d0c:	cmp	x9, #0x4
   14d10:	b.cc	14d4c <_option_is_end@@Base+0x1120>  // b.lo, b.ul, b.last
   14d14:	and	x10, x9, #0xfffffffffffffffc
   14d18:	add	x11, x21, x22, lsl #3
   14d1c:	add	x8, x8, x10
   14d20:	add	x22, x22, x10
   14d24:	add	x11, x11, #0x10
   14d28:	mov	x12, x10
   14d2c:	ldur	q0, [x11, #-8]
   14d30:	ldur	q1, [x11, #8]
   14d34:	subs	x12, x12, #0x4
   14d38:	stp	q0, q1, [x11, #-16]
   14d3c:	add	x11, x11, #0x20
   14d40:	b.ne	14d2c <_option_is_end@@Base+0x1100>  // b.any
   14d44:	cmp	x9, x10
   14d48:	b.eq	14d68 <_option_is_end@@Base+0x113c>  // b.none
   14d4c:	ldr	x10, [x21, x8, lsl #3]
   14d50:	mov	x9, x8
   14d54:	add	x8, x8, #0x1
   14d58:	cmp	x20, x8
   14d5c:	str	x10, [x21, x22, lsl #3]
   14d60:	mov	x22, x9
   14d64:	b.ne	14d4c <_option_is_end@@Base+0x1120>  // b.any
   14d68:	sub	x8, x20, #0x1
   14d6c:	mov	w0, #0x1                   	// #1
   14d70:	str	x8, [x19, #48]
   14d74:	b	14d7c <_option_is_end@@Base+0x1150>
   14d78:	mov	w0, wzr
   14d7c:	ldp	x20, x19, [sp, #64]
   14d80:	ldp	x22, x21, [sp, #48]
   14d84:	ldp	x24, x23, [sp, #32]
   14d88:	ldr	x25, [sp, #16]
   14d8c:	ldp	x29, x30, [sp], #80
   14d90:	ret
   14d94:	bl	a850 <abort@plt>

0000000000014d98 <rotl64@@Base>:
   14d98:	neg	w8, w1
   14d9c:	ror	x0, x0, x8
   14da0:	ret

0000000000014da4 <rotr64@@Base>:
   14da4:	ror	x0, x0, x1
   14da8:	ret

0000000000014dac <rotl32@@Base>:
   14dac:	neg	w8, w1
   14db0:	ror	w0, w0, w8
   14db4:	ret

0000000000014db8 <rotr32@@Base>:
   14db8:	ror	w0, w0, w1
   14dbc:	ret

0000000000014dc0 <rotl_sz@@Base>:
   14dc0:	sxtw	x9, w1
   14dc4:	neg	x9, x9
   14dc8:	lsl	x8, x0, x1
   14dcc:	lsr	x9, x0, x9
   14dd0:	orr	x0, x9, x8
   14dd4:	ret

0000000000014dd8 <rotr_sz@@Base>:
   14dd8:	sxtw	x9, w1
   14ddc:	neg	x9, x9
   14de0:	lsr	x8, x0, x1
   14de4:	lsl	x9, x0, x9
   14de8:	orr	x0, x9, x8
   14dec:	ret

0000000000014df0 <rotl16@@Base>:
   14df0:	neg	w10, w1
   14df4:	and	w8, w0, #0xffff
   14df8:	and	w9, w1, #0xf
   14dfc:	and	w10, w10, #0xf
   14e00:	lsl	w9, w0, w9
   14e04:	lsr	w8, w8, w10
   14e08:	orr	w0, w9, w8
   14e0c:	ret

0000000000014e10 <rotr16@@Base>:
   14e10:	and	w8, w0, #0xffff
   14e14:	and	w9, w1, #0xf
   14e18:	neg	w10, w1
   14e1c:	lsr	w8, w8, w9
   14e20:	and	w9, w10, #0xf
   14e24:	lsl	w9, w0, w9
   14e28:	orr	w0, w9, w8
   14e2c:	ret

0000000000014e30 <rotl8@@Base>:
   14e30:	neg	w10, w1
   14e34:	and	w8, w0, #0xff
   14e38:	and	w9, w1, #0x7
   14e3c:	and	w10, w10, #0x7
   14e40:	lsl	w9, w0, w9
   14e44:	lsr	w8, w8, w10
   14e48:	orr	w0, w9, w8
   14e4c:	ret

0000000000014e50 <rotr8@@Base>:
   14e50:	and	w8, w0, #0xff
   14e54:	and	w9, w1, #0x7
   14e58:	neg	w10, w1
   14e5c:	lsr	w8, w8, w9
   14e60:	and	w9, w10, #0x7
   14e64:	lsl	w9, w0, w9
   14e68:	orr	w0, w9, w8
   14e6c:	ret

0000000000014e70 <canonicalize_filename_mode@@Base>:
   14e70:	sub	sp, sp, #0x110
   14e74:	stp	x26, x25, [sp, #208]
   14e78:	and	w26, w1, #0x3
   14e7c:	sub	w8, w26, #0x1
   14e80:	tst	w26, w8
   14e84:	stp	x29, x30, [sp, #176]
   14e88:	stp	x28, x27, [sp, #192]
   14e8c:	stp	x24, x23, [sp, #224]
   14e90:	stp	x22, x21, [sp, #240]
   14e94:	stp	x20, x19, [sp, #256]
   14e98:	add	x29, sp, #0xb0
   14e9c:	b.ne	14ec8 <canonicalize_filename_mode@@Base+0x58>  // b.any
   14ea0:	mov	x27, x0
   14ea4:	cbz	x0, 14ec8 <canonicalize_filename_mode@@Base+0x58>
   14ea8:	ldrb	w8, [x27]
   14eac:	mov	w22, w1
   14eb0:	cmp	w8, #0x2f
   14eb4:	b.eq	14efc <canonicalize_filename_mode@@Base+0x8c>  // b.none
   14eb8:	cbnz	w8, 1529c <canonicalize_filename_mode@@Base+0x42c>
   14ebc:	bl	ad90 <__errno_location@plt>
   14ec0:	mov	w8, #0x2                   	// #2
   14ec4:	b	14ed0 <canonicalize_filename_mode@@Base+0x60>
   14ec8:	bl	ad90 <__errno_location@plt>
   14ecc:	mov	w8, #0x16                  	// #22
   14ed0:	mov	x21, xzr
   14ed4:	str	w8, [x0]
   14ed8:	mov	x0, x21
   14edc:	ldp	x20, x19, [sp, #256]
   14ee0:	ldp	x22, x21, [sp, #240]
   14ee4:	ldp	x24, x23, [sp, #224]
   14ee8:	ldp	x26, x25, [sp, #208]
   14eec:	ldp	x28, x27, [sp, #192]
   14ef0:	ldp	x29, x30, [sp, #176]
   14ef4:	add	sp, sp, #0x110
   14ef8:	ret
   14efc:	mov	w0, #0x1000                	// #4096
   14f00:	bl	a660 <xmalloc@plt>
   14f04:	mov	w8, #0x2f                  	// #47
   14f08:	mov	x19, x0
   14f0c:	mov	x21, x0
   14f10:	add	x20, x0, #0x1, lsl #12
   14f14:	strb	w8, [x19], #1
   14f18:	ldrb	w8, [x27]
   14f1c:	cbz	w8, 152f8 <canonicalize_filename_mode@@Base+0x488>
   14f20:	and	w9, w22, #0x7
   14f24:	mov	x24, x19
   14f28:	mov	x23, x27
   14f2c:	stp	xzr, xzr, [sp, #8]
   14f30:	str	xzr, [sp, #24]
   14f34:	stp	w22, w9, [sp, #32]
   14f38:	b	14f4c <canonicalize_filename_mode@@Base+0xdc>
   14f3c:	mov	x19, x24
   14f40:	ldrb	w8, [x23]
   14f44:	mov	x24, x19
   14f48:	cbz	w8, 152fc <canonicalize_filename_mode@@Base+0x48c>
   14f4c:	and	w9, w8, #0xff
   14f50:	cmp	w9, #0x2f
   14f54:	mov	x28, x23
   14f58:	b.ne	14f6c <canonicalize_filename_mode@@Base+0xfc>  // b.any
   14f5c:	ldrb	w8, [x28, #1]!
   14f60:	cmp	w8, #0x2f
   14f64:	b.eq	14f5c <canonicalize_filename_mode@@Base+0xec>  // b.none
   14f68:	mov	x23, x28
   14f6c:	mov	w9, w8
   14f70:	ands	w9, w9, #0xff
   14f74:	b.eq	14f8c <canonicalize_filename_mode@@Base+0x11c>  // b.none
   14f78:	cmp	w9, #0x2f
   14f7c:	b.eq	14f8c <canonicalize_filename_mode@@Base+0x11c>  // b.none
   14f80:	ldrb	w9, [x23, #1]!
   14f84:	ands	w9, w9, #0xff
   14f88:	b.ne	14f78 <canonicalize_filename_mode@@Base+0x108>  // b.any
   14f8c:	sub	x25, x23, x28
   14f90:	cmp	x25, #0x1
   14f94:	b.eq	14ff0 <canonicalize_filename_mode@@Base+0x180>  // b.none
   14f98:	cmp	x25, #0x2
   14f9c:	b.eq	14fa8 <canonicalize_filename_mode@@Base+0x138>  // b.none
   14fa0:	cbnz	x25, 14ffc <canonicalize_filename_mode@@Base+0x18c>
   14fa4:	b	152e0 <canonicalize_filename_mode@@Base+0x470>
   14fa8:	and	w8, w8, #0xff
   14fac:	cmp	w8, #0x2e
   14fb0:	b.ne	14ffc <canonicalize_filename_mode@@Base+0x18c>  // b.any
   14fb4:	ldrb	w8, [x28, #1]
   14fb8:	cmp	w8, #0x2e
   14fbc:	b.ne	14ffc <canonicalize_filename_mode@@Base+0x18c>  // b.any
   14fc0:	add	x8, x21, #0x1
   14fc4:	cmp	x24, x8
   14fc8:	b.ls	14f3c <canonicalize_filename_mode@@Base+0xcc>  // b.plast
   14fcc:	sub	x8, x24, #0x1
   14fd0:	mov	x19, x8
   14fd4:	cmp	x8, x21
   14fd8:	b.ls	14f40 <canonicalize_filename_mode@@Base+0xd0>  // b.plast
   14fdc:	mov	x8, x19
   14fe0:	ldrb	w9, [x8, #-1]!
   14fe4:	cmp	w9, #0x2f
   14fe8:	b.ne	14fd0 <canonicalize_filename_mode@@Base+0x160>  // b.any
   14fec:	b	14f40 <canonicalize_filename_mode@@Base+0xd0>
   14ff0:	and	w8, w8, #0xff
   14ff4:	cmp	w8, #0x2e
   14ff8:	b.eq	14f3c <canonicalize_filename_mode@@Base+0xcc>  // b.none
   14ffc:	ldurb	w8, [x24, #-1]
   15000:	cmp	w8, #0x2f
   15004:	b.eq	15010 <canonicalize_filename_mode@@Base+0x1a0>  // b.none
   15008:	mov	w8, #0x2f                  	// #47
   1500c:	strb	w8, [x24], #1
   15010:	add	x8, x24, x25
   15014:	cmp	x8, x20
   15018:	b.cc	1504c <canonicalize_filename_mode@@Base+0x1dc>  // b.lo, b.ul, b.last
   1501c:	cmp	x25, #0x1, lsl #12
   15020:	mov	w9, #0x1000                	// #4096
   15024:	sub	x8, x20, x21
   15028:	csinc	x9, x9, x25, lt  // lt = tstop
   1502c:	add	x22, x9, x8
   15030:	mov	x0, x21
   15034:	mov	x1, x22
   15038:	sub	x19, x24, x21
   1503c:	bl	a5c0 <xrealloc@plt>
   15040:	mov	x21, x0
   15044:	add	x20, x0, x22
   15048:	add	x24, x0, x19
   1504c:	mov	x0, x24
   15050:	mov	x1, x28
   15054:	mov	x2, x25
   15058:	bl	a210 <memcpy@plt>
   1505c:	ldr	w8, [sp, #36]
   15060:	add	x19, x24, x25
   15064:	strb	wzr, [x19]
   15068:	cmp	w8, #0x6
   1506c:	b.eq	150a0 <canonicalize_filename_mode@@Base+0x230>  // b.none
   15070:	ldr	w8, [sp, #32]
   15074:	tbnz	w8, #2, 150b8 <canonicalize_filename_mode@@Base+0x248>
   15078:	add	x2, sp, #0x28
   1507c:	mov	w0, wzr
   15080:	mov	x1, x21
   15084:	bl	ab60 <__lxstat@plt>
   15088:	cbz	w0, 150cc <canonicalize_filename_mode@@Base+0x25c>
   1508c:	bl	ad90 <__errno_location@plt>
   15090:	ldr	w22, [x0]
   15094:	cmp	w26, #0x1
   15098:	b.eq	150e8 <canonicalize_filename_mode@@Base+0x278>  // b.none
   1509c:	cbz	w26, 1535c <canonicalize_filename_mode@@Base+0x4ec>
   150a0:	str	wzr, [sp, #56]
   150a4:	cmp	w26, #0x2
   150a8:	b.eq	15108 <canonicalize_filename_mode@@Base+0x298>  // b.none
   150ac:	ldrb	w8, [x23]
   150b0:	cbz	w8, 15108 <canonicalize_filename_mode@@Base+0x298>
   150b4:	b	15358 <canonicalize_filename_mode@@Base+0x4e8>
   150b8:	add	x2, sp, #0x28
   150bc:	mov	w0, wzr
   150c0:	mov	x1, x21
   150c4:	bl	add0 <__xstat@plt>
   150c8:	cbnz	w0, 1508c <canonicalize_filename_mode@@Base+0x21c>
   150cc:	ldr	w8, [sp, #56]
   150d0:	and	w8, w8, #0xf000
   150d4:	cmp	w8, #0xa, lsl #12
   150d8:	b.eq	15114 <canonicalize_filename_mode@@Base+0x2a4>  // b.none
   150dc:	cmp	w8, #0x4, lsl #12
   150e0:	b.eq	15108 <canonicalize_filename_mode@@Base+0x298>  // b.none
   150e4:	b	150a4 <canonicalize_filename_mode@@Base+0x234>
   150e8:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   150ec:	mov	x0, x23
   150f0:	add	x1, x1, #0xfeb
   150f4:	bl	aa40 <strspn@plt>
   150f8:	cmp	w22, #0x2
   150fc:	b.ne	1535c <canonicalize_filename_mode@@Base+0x4ec>  // b.any
   15100:	ldrb	w8, [x23, x0]
   15104:	cbnz	w8, 1535c <canonicalize_filename_mode@@Base+0x4ec>
   15108:	mov	x22, x23
   1510c:	mov	x23, x22
   15110:	b	14f40 <canonicalize_filename_mode@@Base+0xd0>
   15114:	ldr	x0, [sp, #24]
   15118:	cbnz	x0, 15144 <canonicalize_filename_mode@@Base+0x2d4>
   1511c:	adrp	x2, 45000 <vasnprintf@@Base+0x14474>
   15120:	adrp	x3, 45000 <vasnprintf@@Base+0x14474>
   15124:	adrp	x4, 45000 <vasnprintf@@Base+0x14474>
   15128:	ldr	x2, [x2, #3888]
   1512c:	ldr	x3, [x3, #3928]
   15130:	ldr	x4, [x4, #3848]
   15134:	mov	w0, #0x7                   	// #7
   15138:	mov	x1, xzr
   1513c:	bl	a750 <hash_initialize@plt>
   15140:	cbz	x0, 15398 <canonicalize_filename_mode@@Base+0x528>
   15144:	add	x2, sp, #0x28
   15148:	mov	x1, x27
   1514c:	mov	x22, x0
   15150:	bl	a930 <seen_file@plt>
   15154:	str	x22, [sp, #24]
   15158:	tbz	w0, #0, 15168 <canonicalize_filename_mode@@Base+0x2f8>
   1515c:	cmp	w26, #0x2
   15160:	b.eq	14f40 <canonicalize_filename_mode@@Base+0xd0>  // b.none
   15164:	b	15388 <canonicalize_filename_mode@@Base+0x518>
   15168:	add	x2, sp, #0x28
   1516c:	mov	x0, x22
   15170:	mov	x1, x27
   15174:	bl	a560 <record_file@plt>
   15178:	ldr	x1, [sp, #88]
   1517c:	mov	x0, x21
   15180:	bl	aa70 <areadlink_with_size@plt>
   15184:	cbz	x0, 151d8 <canonicalize_filename_mode@@Base+0x368>
   15188:	mov	x28, x0
   1518c:	bl	a290 <strlen@plt>
   15190:	mov	x22, x0
   15194:	mov	x0, x23
   15198:	bl	a290 <strlen@plt>
   1519c:	ldr	x8, [sp, #8]
   151a0:	add	x2, x0, #0x1
   151a4:	add	x27, x2, x22
   151a8:	str	x22, [sp]
   151ac:	cbz	x8, 151f4 <canonicalize_filename_mode@@Base+0x384>
   151b0:	cmp	x27, x8
   151b4:	b.ls	15218 <canonicalize_filename_mode@@Base+0x3a8>  // b.plast
   151b8:	ldr	x0, [sp, #16]
   151bc:	mov	x1, x27
   151c0:	mov	x22, x2
   151c4:	bl	a5c0 <xrealloc@plt>
   151c8:	mov	x2, x22
   151cc:	mov	x22, x0
   151d0:	str	x27, [sp, #8]
   151d4:	b	1521c <canonicalize_filename_mode@@Base+0x3ac>
   151d8:	bl	ad90 <__errno_location@plt>
   151dc:	cmp	w26, #0x2
   151e0:	b.ne	15390 <canonicalize_filename_mode@@Base+0x520>  // b.any
   151e4:	ldr	w8, [x0]
   151e8:	cmp	w8, #0xc
   151ec:	b.ne	14f40 <canonicalize_filename_mode@@Base+0xd0>  // b.any
   151f0:	b	15390 <canonicalize_filename_mode@@Base+0x520>
   151f4:	cmp	x27, #0x1, lsl #12
   151f8:	mov	w8, #0x1000                	// #4096
   151fc:	csel	x0, x27, x8, hi  // hi = pmore
   15200:	str	x0, [sp, #8]
   15204:	mov	x22, x2
   15208:	bl	a660 <xmalloc@plt>
   1520c:	mov	x2, x22
   15210:	mov	x22, x0
   15214:	b	1521c <canonicalize_filename_mode@@Base+0x3ac>
   15218:	ldr	x22, [sp, #16]
   1521c:	ldr	x27, [sp]
   15220:	mov	x1, x23
   15224:	add	x0, x22, x27
   15228:	bl	a220 <memmove@plt>
   1522c:	mov	x0, x22
   15230:	mov	x1, x28
   15234:	mov	x2, x27
   15238:	bl	a210 <memcpy@plt>
   1523c:	ldrb	w8, [x28]
   15240:	cmp	w8, #0x2f
   15244:	add	x8, x21, #0x1
   15248:	b.ne	1525c <canonicalize_filename_mode@@Base+0x3ec>  // b.any
   1524c:	mov	w9, #0x2f                  	// #47
   15250:	strb	w9, [x21]
   15254:	mov	x19, x8
   15258:	b	15288 <canonicalize_filename_mode@@Base+0x418>
   1525c:	cmp	x19, x8
   15260:	b.ls	15288 <canonicalize_filename_mode@@Base+0x418>  // b.plast
   15264:	add	x8, x24, x25
   15268:	sub	x8, x8, #0x1
   1526c:	mov	x19, x8
   15270:	cmp	x8, x21
   15274:	b.ls	15288 <canonicalize_filename_mode@@Base+0x418>  // b.plast
   15278:	mov	x8, x19
   1527c:	ldrb	w9, [x8, #-1]!
   15280:	cmp	w9, #0x2f
   15284:	b.ne	1526c <canonicalize_filename_mode@@Base+0x3fc>  // b.any
   15288:	mov	x0, x28
   1528c:	bl	a970 <free@plt>
   15290:	mov	x27, x22
   15294:	str	x22, [sp, #16]
   15298:	b	1510c <canonicalize_filename_mode@@Base+0x29c>
   1529c:	bl	aec0 <xgetcwd@plt>
   152a0:	mov	x21, x0
   152a4:	cbz	x0, 14ed8 <canonicalize_filename_mode@@Base+0x68>
   152a8:	mov	x0, x21
   152ac:	bl	a290 <strlen@plt>
   152b0:	mov	x20, x0
   152b4:	cmp	x0, #0xfff
   152b8:	b.gt	152e8 <canonicalize_filename_mode@@Base+0x478>
   152bc:	mov	w1, #0x1000                	// #4096
   152c0:	mov	x0, x21
   152c4:	bl	a5c0 <xrealloc@plt>
   152c8:	mov	x21, x0
   152cc:	add	x19, x0, x20
   152d0:	add	x20, x0, #0x1, lsl #12
   152d4:	ldrb	w8, [x27]
   152d8:	cbnz	w8, 14f20 <canonicalize_filename_mode@@Base+0xb0>
   152dc:	b	152f8 <canonicalize_filename_mode@@Base+0x488>
   152e0:	mov	x19, x24
   152e4:	b	152fc <canonicalize_filename_mode@@Base+0x48c>
   152e8:	add	x20, x21, x20
   152ec:	mov	x19, x20
   152f0:	ldrb	w8, [x27]
   152f4:	cbnz	w8, 14f20 <canonicalize_filename_mode@@Base+0xb0>
   152f8:	stp	xzr, xzr, [sp, #16]
   152fc:	add	x8, x21, #0x1
   15300:	cmp	x19, x8
   15304:	b.ls	15318 <canonicalize_filename_mode@@Base+0x4a8>  // b.plast
   15308:	mov	x8, x19
   1530c:	ldrb	w9, [x8, #-1]!
   15310:	cmp	w9, #0x2f
   15314:	csel	x19, x8, x19, eq  // eq = none
   15318:	ldr	x22, [sp, #16]
   1531c:	mov	x8, x19
   15320:	strb	wzr, [x8], #1
   15324:	cmp	x20, x8
   15328:	b.eq	15340 <canonicalize_filename_mode@@Base+0x4d0>  // b.none
   1532c:	sub	x8, x19, x21
   15330:	add	x1, x8, #0x1
   15334:	mov	x0, x21
   15338:	bl	a5c0 <xrealloc@plt>
   1533c:	mov	x21, x0
   15340:	mov	x0, x22
   15344:	bl	a970 <free@plt>
   15348:	ldr	x0, [sp, #24]
   1534c:	cbz	x0, 14ed8 <canonicalize_filename_mode@@Base+0x68>
   15350:	bl	a4e0 <hash_free@plt>
   15354:	b	14ed8 <canonicalize_filename_mode@@Base+0x68>
   15358:	mov	w22, #0x14                  	// #20
   1535c:	ldr	x0, [sp, #16]
   15360:	bl	a970 <free@plt>
   15364:	mov	x0, x21
   15368:	bl	a970 <free@plt>
   1536c:	ldr	x0, [sp, #24]
   15370:	cbz	x0, 15378 <canonicalize_filename_mode@@Base+0x508>
   15374:	bl	a4e0 <hash_free@plt>
   15378:	bl	ad90 <__errno_location@plt>
   1537c:	mov	x21, xzr
   15380:	str	w22, [x0]
   15384:	b	14ed8 <canonicalize_filename_mode@@Base+0x68>
   15388:	mov	w22, #0x28                  	// #40
   1538c:	b	1535c <canonicalize_filename_mode@@Base+0x4ec>
   15390:	ldr	w22, [x0]
   15394:	b	1535c <canonicalize_filename_mode@@Base+0x4ec>
   15398:	bl	a7e0 <xalloc_die@plt>

000000000001539c <set_cloexec_flag@@Base>:
   1539c:	stp	x29, x30, [sp, #-32]!
   153a0:	stp	x20, x19, [sp, #16]
   153a4:	mov	w20, w1
   153a8:	mov	w1, #0x1                   	// #1
   153ac:	mov	w2, wzr
   153b0:	mov	x29, sp
   153b4:	mov	w19, w0
   153b8:	bl	aad0 <rpl_fcntl@plt>
   153bc:	tbnz	w0, #31, 153e8 <set_cloexec_flag@@Base+0x4c>
   153c0:	orr	w8, w0, #0x1
   153c4:	and	w9, w0, #0xfffffffe
   153c8:	tst	w20, #0x1
   153cc:	csel	w2, w8, w9, ne  // ne = any
   153d0:	cmp	w0, w2
   153d4:	b.ne	153f8 <set_cloexec_flag@@Base+0x5c>  // b.any
   153d8:	mov	w0, wzr
   153dc:	ldp	x20, x19, [sp, #16]
   153e0:	ldp	x29, x30, [sp], #32
   153e4:	ret
   153e8:	mov	w0, #0xffffffff            	// #-1
   153ec:	ldp	x20, x19, [sp, #16]
   153f0:	ldp	x29, x30, [sp], #32
   153f4:	ret
   153f8:	mov	w1, #0x2                   	// #2
   153fc:	mov	w0, w19
   15400:	bl	aad0 <rpl_fcntl@plt>
   15404:	cmn	w0, #0x1
   15408:	csetm	w0, eq  // eq = none
   1540c:	ldp	x20, x19, [sp, #16]
   15410:	ldp	x29, x30, [sp], #32
   15414:	ret

0000000000015418 <dup_cloexec@@Base>:
   15418:	mov	w1, #0x406                 	// #1030
   1541c:	mov	w2, wzr
   15420:	b	aad0 <rpl_fcntl@plt>

0000000000015424 <dir_name@@Base>:
   15424:	stp	x29, x30, [sp, #-16]!
   15428:	mov	x29, sp
   1542c:	bl	a4b0 <mdir_name@plt>
   15430:	cbz	x0, 1543c <dir_name@@Base+0x18>
   15434:	ldp	x29, x30, [sp], #16
   15438:	ret
   1543c:	bl	a7e0 <xalloc_die@plt>

0000000000015440 <base_name@@Base>:
   15440:	stp	x29, x30, [sp, #-32]!
   15444:	stp	x20, x19, [sp, #16]
   15448:	mov	x29, sp
   1544c:	mov	x19, x0
   15450:	bl	a6d0 <last_component@plt>
   15454:	ldrb	w8, [x0]
   15458:	cbz	w8, 15480 <base_name@@Base+0x40>
   1545c:	mov	x20, x0
   15460:	bl	a1f0 <base_len@plt>
   15464:	ldrb	w8, [x20, x0]
   15468:	cmp	w8, #0x2f
   1546c:	cinc	x1, x0, eq  // eq = none
   15470:	mov	x0, x20
   15474:	ldp	x20, x19, [sp, #16]
   15478:	ldp	x29, x30, [sp], #32
   1547c:	b	abe0 <xstrndup@plt>
   15480:	mov	x0, x19
   15484:	bl	a1f0 <base_len@plt>
   15488:	mov	x1, x0
   1548c:	mov	x0, x19
   15490:	ldp	x20, x19, [sp, #16]
   15494:	ldp	x29, x30, [sp], #32
   15498:	b	abe0 <xstrndup@plt>

000000000001549c <dir_len@@Base>:
   1549c:	stp	x29, x30, [sp, #-48]!
   154a0:	str	x21, [sp, #16]
   154a4:	stp	x20, x19, [sp, #32]
   154a8:	mov	x20, x0
   154ac:	ldrb	w8, [x20], #-1
   154b0:	mov	x29, sp
   154b4:	mov	x19, x0
   154b8:	cmp	w8, #0x2f
   154bc:	cset	w21, eq  // eq = none
   154c0:	bl	a6d0 <last_component@plt>
   154c4:	sub	x8, x0, x19
   154c8:	mov	x0, x8
   154cc:	cmp	x8, x21
   154d0:	b.ls	154e4 <dir_len@@Base+0x48>  // b.plast
   154d4:	ldrb	w8, [x20, x0]
   154d8:	cmp	w8, #0x2f
   154dc:	sub	x8, x0, #0x1
   154e0:	b.eq	154c8 <dir_len@@Base+0x2c>  // b.none
   154e4:	ldp	x20, x19, [sp, #32]
   154e8:	ldr	x21, [sp, #16]
   154ec:	ldp	x29, x30, [sp], #48
   154f0:	ret

00000000000154f4 <mdir_name@@Base>:
   154f4:	stp	x29, x30, [sp, #-48]!
   154f8:	stp	x22, x21, [sp, #16]
   154fc:	stp	x20, x19, [sp, #32]
   15500:	mov	x21, x0
   15504:	ldrb	w8, [x21], #-1
   15508:	mov	x29, sp
   1550c:	mov	x19, x0
   15510:	cmp	w8, #0x2f
   15514:	cset	w22, eq  // eq = none
   15518:	bl	a6d0 <last_component@plt>
   1551c:	sub	x8, x0, x19
   15520:	mov	x20, x8
   15524:	cmp	x8, x22
   15528:	b.ls	1553c <mdir_name@@Base+0x48>  // b.plast
   1552c:	ldrb	w8, [x21, x20]
   15530:	cmp	w8, #0x2f
   15534:	sub	x8, x20, #0x1
   15538:	b.eq	15520 <mdir_name@@Base+0x2c>  // b.none
   1553c:	cmp	x20, #0x0
   15540:	cinc	x8, x20, eq  // eq = none
   15544:	add	x0, x8, #0x1
   15548:	bl	a550 <malloc@plt>
   1554c:	mov	x21, x0
   15550:	cbz	x0, 15578 <mdir_name@@Base+0x84>
   15554:	mov	x0, x21
   15558:	mov	x1, x19
   1555c:	mov	x2, x20
   15560:	bl	a210 <memcpy@plt>
   15564:	cbnz	x20, 15574 <mdir_name@@Base+0x80>
   15568:	mov	w8, #0x2e                  	// #46
   1556c:	mov	w20, #0x1                   	// #1
   15570:	strb	w8, [x21]
   15574:	strb	wzr, [x21, x20]
   15578:	mov	x0, x21
   1557c:	ldp	x20, x19, [sp, #32]
   15580:	ldp	x22, x21, [sp, #16]
   15584:	ldp	x29, x30, [sp], #48
   15588:	ret

000000000001558c <last_component@@Base>:
   1558c:	sub	x0, x0, #0x1
   15590:	ldrb	w10, [x0, #1]!
   15594:	cmp	w10, #0x2f
   15598:	b.eq	15590 <last_component@@Base+0x4>  // b.none
   1559c:	mov	w8, wzr
   155a0:	mov	x9, x0
   155a4:	and	w10, w10, #0xff
   155a8:	cmp	w10, #0x2f
   155ac:	b.ne	155c4 <last_component@@Base+0x38>  // b.any
   155b0:	ldrb	w10, [x9, #1]!
   155b4:	mov	w8, #0x1                   	// #1
   155b8:	and	w10, w10, #0xff
   155bc:	cmp	w10, #0x2f
   155c0:	b.eq	155b0 <last_component@@Base+0x24>  // b.none
   155c4:	cbz	w10, 155e8 <last_component@@Base+0x5c>
   155c8:	tst	w8, #0x1
   155cc:	csel	x0, x9, x0, ne  // ne = any
   155d0:	ldrb	w10, [x9, #1]!
   155d4:	mov	w8, wzr
   155d8:	and	w10, w10, #0xff
   155dc:	cmp	w10, #0x2f
   155e0:	b.ne	155c4 <last_component@@Base+0x38>  // b.any
   155e4:	b	155b0 <last_component@@Base+0x24>
   155e8:	ret

00000000000155ec <base_len@@Base>:
   155ec:	stp	x29, x30, [sp, #-32]!
   155f0:	str	x19, [sp, #16]
   155f4:	mov	x29, sp
   155f8:	mov	x19, x0
   155fc:	bl	a290 <strlen@plt>
   15600:	mov	x8, x0
   15604:	sub	x9, x19, #0x1
   15608:	mov	x0, x8
   1560c:	cmp	x8, #0x2
   15610:	b.cc	15624 <base_len@@Base+0x38>  // b.lo, b.ul, b.last
   15614:	ldrb	w8, [x9, x0]
   15618:	cmp	w8, #0x2f
   1561c:	sub	x8, x0, #0x1
   15620:	b.eq	15608 <base_len@@Base+0x1c>  // b.none
   15624:	ldr	x19, [sp, #16]
   15628:	ldp	x29, x30, [sp], #32
   1562c:	ret

0000000000015630 <strip_trailing_slashes@@Base>:
   15630:	stp	x29, x30, [sp, #-32]!
   15634:	str	x19, [sp, #16]
   15638:	mov	x29, sp
   1563c:	mov	x19, x0
   15640:	bl	a6d0 <last_component@plt>
   15644:	ldrb	w8, [x0]
   15648:	cmp	w8, #0x0
   1564c:	csel	x19, x19, x0, eq  // eq = none
   15650:	mov	x0, x19
   15654:	bl	a1f0 <base_len@plt>
   15658:	ldrb	w8, [x19, x0]
   1565c:	strb	wzr, [x19, x0]
   15660:	ldr	x19, [sp, #16]
   15664:	cmp	w8, #0x0
   15668:	cset	w0, ne  // ne = any
   1566c:	ldp	x29, x30, [sp], #32
   15670:	ret

0000000000015674 <fd_safer_flag@@Base>:
   15674:	stp	x29, x30, [sp, #-48]!
   15678:	stp	x20, x19, [sp, #32]
   1567c:	mov	w19, w0
   15680:	cmp	w0, #0x2
   15684:	stp	x22, x21, [sp, #16]
   15688:	mov	x29, sp
   1568c:	b.hi	156c8 <fd_safer_flag@@Base+0x54>  // b.pmore
   15690:	mov	w0, w19
   15694:	bl	ab70 <dup_safer_flag@plt>
   15698:	mov	w20, w0
   1569c:	bl	ad90 <__errno_location@plt>
   156a0:	ldr	w22, [x0]
   156a4:	mov	x21, x0
   156a8:	mov	w0, w19
   156ac:	bl	a7a0 <close@plt>
   156b0:	str	w22, [x21]
   156b4:	mov	w0, w20
   156b8:	ldp	x20, x19, [sp, #32]
   156bc:	ldp	x22, x21, [sp, #16]
   156c0:	ldp	x29, x30, [sp], #48
   156c4:	ret
   156c8:	mov	w0, w19
   156cc:	ldp	x20, x19, [sp, #32]
   156d0:	ldp	x22, x21, [sp, #16]
   156d4:	ldp	x29, x30, [sp], #48
   156d8:	ret

00000000000156dc <dup_safer_flag@@Base>:
   156dc:	lsl	w8, w1, #12
   156e0:	mov	w9, #0x406                 	// #1030
   156e4:	and	w1, w9, w8, asr #31
   156e8:	mov	w2, #0x3                   	// #3
   156ec:	b	aad0 <rpl_fcntl@plt>

00000000000156f0 <record_file@@Base>:
   156f0:	stp	x29, x30, [sp, #-48]!
   156f4:	stp	x22, x21, [sp, #16]
   156f8:	stp	x20, x19, [sp, #32]
   156fc:	mov	x29, sp
   15700:	cbz	x0, 15760 <record_file@@Base+0x70>
   15704:	mov	x20, x0
   15708:	mov	w0, #0x18                  	// #24
   1570c:	mov	x21, x2
   15710:	mov	x22, x1
   15714:	bl	a660 <xmalloc@plt>
   15718:	mov	x19, x0
   1571c:	mov	x0, x22
   15720:	bl	a680 <xstrdup@plt>
   15724:	str	x0, [x19]
   15728:	ldr	q0, [x21]
   1572c:	mov	x0, x20
   15730:	mov	x1, x19
   15734:	ext	v0.16b, v0.16b, v0.16b, #8
   15738:	stur	q0, [x19, #8]
   1573c:	bl	a3b0 <hash_insert@plt>
   15740:	cbz	x0, 15770 <record_file@@Base+0x80>
   15744:	cmp	x0, x19
   15748:	b.eq	15760 <record_file@@Base+0x70>  // b.none
   1574c:	mov	x0, x19
   15750:	ldp	x20, x19, [sp, #32]
   15754:	ldp	x22, x21, [sp, #16]
   15758:	ldp	x29, x30, [sp], #48
   1575c:	b	a4c0 <triple_free@plt>
   15760:	ldp	x20, x19, [sp, #32]
   15764:	ldp	x22, x21, [sp, #16]
   15768:	ldp	x29, x30, [sp], #48
   1576c:	ret
   15770:	bl	a7e0 <xalloc_die@plt>

0000000000015774 <seen_file@@Base>:
   15774:	cbz	x0, 157ac <seen_file@@Base+0x38>
   15778:	sub	sp, sp, #0x30
   1577c:	stp	x29, x30, [sp, #32]
   15780:	str	x1, [sp, #8]
   15784:	ldr	q0, [x2]
   15788:	add	x1, sp, #0x8
   1578c:	add	x29, sp, #0x20
   15790:	ext	v0.16b, v0.16b, v0.16b, #8
   15794:	stur	q0, [sp, #16]
   15798:	bl	a7c0 <hash_lookup@plt>
   1579c:	ldp	x29, x30, [sp, #32]
   157a0:	cmp	x0, #0x0
   157a4:	cset	w0, ne  // ne = any
   157a8:	add	sp, sp, #0x30
   157ac:	ret

00000000000157b0 <mfile_name_concat@@Base>:
   157b0:	stp	x29, x30, [sp, #-80]!
   157b4:	stp	x26, x25, [sp, #16]
   157b8:	stp	x24, x23, [sp, #32]
   157bc:	stp	x22, x21, [sp, #48]
   157c0:	stp	x20, x19, [sp, #64]
   157c4:	mov	x29, sp
   157c8:	mov	x20, x2
   157cc:	mov	x19, x1
   157d0:	mov	x22, x0
   157d4:	bl	a6d0 <last_component@plt>
   157d8:	mov	x21, x0
   157dc:	bl	a1f0 <base_len@plt>
   157e0:	sub	x8, x21, x22
   157e4:	mov	x24, x0
   157e8:	add	x23, x8, x0
   157ec:	mov	x0, x19
   157f0:	bl	a290 <strlen@plt>
   157f4:	mov	x21, x0
   157f8:	cbz	x24, 15814 <mfile_name_concat@@Base+0x64>
   157fc:	add	x8, x23, x22
   15800:	ldurb	w8, [x8, #-1]
   15804:	cmp	w8, #0x2f
   15808:	b.ne	15828 <mfile_name_concat@@Base+0x78>  // b.any
   1580c:	mov	w25, wzr
   15810:	b	15838 <mfile_name_concat@@Base+0x88>
   15814:	ldrb	w8, [x19]
   15818:	cmp	w8, #0x2f
   1581c:	mov	w8, #0x2e                  	// #46
   15820:	csel	w25, w8, wzr, eq  // eq = none
   15824:	b	15838 <mfile_name_concat@@Base+0x88>
   15828:	ldrb	w8, [x19]
   1582c:	cmp	w8, #0x2f
   15830:	mov	w8, #0x2f                  	// #47
   15834:	csel	w25, wzr, w8, eq  // eq = none
   15838:	cmp	w25, #0x0
   1583c:	add	x8, x21, x23
   15840:	cinc	x8, x8, ne  // ne = any
   15844:	add	x0, x8, #0x1
   15848:	cset	w26, ne  // ne = any
   1584c:	bl	a550 <malloc@plt>
   15850:	mov	x24, x0
   15854:	cbz	x0, 15890 <mfile_name_concat@@Base+0xe0>
   15858:	mov	x0, x24
   1585c:	mov	x1, x22
   15860:	mov	x2, x23
   15864:	bl	a210 <memcpy@plt>
   15868:	add	x8, x24, x23
   1586c:	add	x22, x8, x26
   15870:	strb	w25, [x8]
   15874:	cbz	x20, 1587c <mfile_name_concat@@Base+0xcc>
   15878:	str	x22, [x20]
   1587c:	mov	x0, x22
   15880:	mov	x1, x19
   15884:	mov	x2, x21
   15888:	bl	a210 <memcpy@plt>
   1588c:	strb	wzr, [x22, x21]
   15890:	mov	x0, x24
   15894:	ldp	x20, x19, [sp, #64]
   15898:	ldp	x22, x21, [sp, #48]
   1589c:	ldp	x24, x23, [sp, #32]
   158a0:	ldp	x26, x25, [sp, #16]
   158a4:	ldp	x29, x30, [sp], #80
   158a8:	ret

00000000000158ac <getprogname@@Base>:
   158ac:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   158b0:	ldr	x8, [x8, #4008]
   158b4:	ldr	x0, [x8]
   158b8:	ret

00000000000158bc <gettime@@Base>:
   158bc:	mov	x1, x0
   158c0:	mov	w0, wzr
   158c4:	b	a450 <clock_gettime@plt>

00000000000158c8 <current_timespec@@Base>:
   158c8:	sub	sp, sp, #0x20
   158cc:	mov	x1, sp
   158d0:	mov	w0, wzr
   158d4:	stp	x29, x30, [sp, #16]
   158d8:	add	x29, sp, #0x10
   158dc:	bl	a450 <clock_gettime@plt>
   158e0:	ldp	x0, x1, [sp]
   158e4:	ldp	x29, x30, [sp, #16]
   158e8:	add	sp, sp, #0x20
   158ec:	ret

00000000000158f0 <hard_locale@@Base>:
   158f0:	stp	x29, x30, [sp, #-32]!
   158f4:	mov	x1, xzr
   158f8:	str	x19, [sp, #16]
   158fc:	mov	x29, sp
   15900:	bl	ae90 <setlocale@plt>
   15904:	cbz	x0, 15930 <hard_locale@@Base+0x40>
   15908:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
   1590c:	add	x1, x1, #0xa40
   15910:	mov	x19, x0
   15914:	bl	a8f0 <strcmp@plt>
   15918:	cbz	w0, 15940 <hard_locale@@Base+0x50>
   1591c:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
   15920:	add	x1, x1, #0xa42
   15924:	mov	x0, x19
   15928:	bl	a8f0 <strcmp@plt>
   1592c:	cbz	w0, 15940 <hard_locale@@Base+0x50>
   15930:	mov	w0, #0x1                   	// #1
   15934:	ldr	x19, [sp, #16]
   15938:	ldp	x29, x30, [sp], #32
   1593c:	ret
   15940:	mov	w0, wzr
   15944:	ldr	x19, [sp, #16]
   15948:	ldp	x29, x30, [sp], #32
   1594c:	ret

0000000000015950 <hash_get_n_buckets@@Base>:
   15950:	ldr	x0, [x0, #16]
   15954:	ret

0000000000015958 <hash_get_n_buckets_used@@Base>:
   15958:	ldr	x0, [x0, #24]
   1595c:	ret

0000000000015960 <hash_get_n_entries@@Base>:
   15960:	ldr	x0, [x0, #32]
   15964:	ret

0000000000015968 <hash_get_max_bucket_length@@Base>:
   15968:	ldp	x8, x9, [x0]
   1596c:	cmp	x8, x9
   15970:	b.cs	159b0 <hash_get_max_bucket_length@@Base+0x48>  // b.hs, b.nlast
   15974:	mov	x0, xzr
   15978:	b	15988 <hash_get_max_bucket_length@@Base+0x20>
   1597c:	add	x8, x8, #0x10
   15980:	cmp	x8, x9
   15984:	b.cs	159b4 <hash_get_max_bucket_length@@Base+0x4c>  // b.hs, b.nlast
   15988:	ldr	x10, [x8]
   1598c:	cbz	x10, 1597c <hash_get_max_bucket_length@@Base+0x14>
   15990:	mov	x10, xzr
   15994:	mov	x11, x8
   15998:	ldr	x11, [x11, #8]
   1599c:	add	x10, x10, #0x1
   159a0:	cbnz	x11, 15998 <hash_get_max_bucket_length@@Base+0x30>
   159a4:	cmp	x10, x0
   159a8:	csel	x0, x10, x0, hi  // hi = pmore
   159ac:	b	1597c <hash_get_max_bucket_length@@Base+0x14>
   159b0:	mov	x0, xzr
   159b4:	ret

00000000000159b8 <hash_table_ok@@Base>:
   159b8:	ldp	x9, x10, [x0]
   159bc:	cmp	x9, x10
   159c0:	b.cs	159fc <hash_table_ok@@Base+0x44>  // b.hs, b.nlast
   159c4:	mov	x8, xzr
   159c8:	mov	x11, xzr
   159cc:	b	159dc <hash_table_ok@@Base+0x24>
   159d0:	add	x9, x9, #0x10
   159d4:	cmp	x9, x10
   159d8:	b.cs	15a04 <hash_table_ok@@Base+0x4c>  // b.hs, b.nlast
   159dc:	ldr	x12, [x9]
   159e0:	cbz	x12, 159d0 <hash_table_ok@@Base+0x18>
   159e4:	mov	x12, x9
   159e8:	ldr	x12, [x12, #8]
   159ec:	add	x8, x8, #0x1
   159f0:	cbnz	x12, 159e8 <hash_table_ok@@Base+0x30>
   159f4:	add	x11, x11, #0x1
   159f8:	b	159d0 <hash_table_ok@@Base+0x18>
   159fc:	mov	x11, xzr
   15a00:	mov	x8, xzr
   15a04:	ldr	x9, [x0, #24]
   15a08:	cmp	x11, x9
   15a0c:	b.ne	15a24 <hash_table_ok@@Base+0x6c>  // b.any
   15a10:	ldr	x9, [x0, #32]
   15a14:	cmp	x8, x9
   15a18:	b.ne	15a24 <hash_table_ok@@Base+0x6c>  // b.any
   15a1c:	mov	w0, #0x1                   	// #1
   15a20:	ret
   15a24:	mov	w0, wzr
   15a28:	ret

0000000000015a2c <hash_print_statistics@@Base>:
   15a2c:	stp	x29, x30, [sp, #-48]!
   15a30:	stp	x22, x21, [sp, #16]
   15a34:	stp	x20, x19, [sp, #32]
   15a38:	ldp	x8, x9, [x0]
   15a3c:	ldp	x20, x2, [x0, #24]
   15a40:	ldr	x22, [x0, #16]
   15a44:	mov	x19, x1
   15a48:	cmp	x8, x9
   15a4c:	mov	x21, xzr
   15a50:	mov	x29, sp
   15a54:	b.cc	15ad4 <hash_print_statistics@@Base+0xa8>  // b.lo, b.ul, b.last
   15a58:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   15a5c:	add	x1, x1, #0x646
   15a60:	mov	x0, x19
   15a64:	bl	ae70 <fprintf@plt>
   15a68:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   15a6c:	add	x1, x1, #0x65e
   15a70:	mov	x0, x19
   15a74:	mov	x2, x22
   15a78:	bl	ae70 <fprintf@plt>
   15a7c:	mov	x8, #0x4059000000000000    	// #4636737291354636288
   15a80:	ucvtf	d0, x20
   15a84:	fmov	d1, x8
   15a88:	fmul	d0, d0, d1
   15a8c:	ucvtf	d1, x22
   15a90:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   15a94:	fdiv	d0, d0, d1
   15a98:	add	x1, x1, #0x676
   15a9c:	mov	x0, x19
   15aa0:	mov	x2, x20
   15aa4:	bl	ae70 <fprintf@plt>
   15aa8:	mov	x0, x19
   15aac:	mov	x2, x21
   15ab0:	ldp	x20, x19, [sp, #32]
   15ab4:	ldp	x22, x21, [sp, #16]
   15ab8:	adrp	x1, 32000 <vasnprintf@@Base+0x1474>
   15abc:	add	x1, x1, #0x697
   15ac0:	ldp	x29, x30, [sp], #48
   15ac4:	b	ae70 <fprintf@plt>
   15ac8:	add	x8, x8, #0x10
   15acc:	cmp	x8, x9
   15ad0:	b.cs	15a58 <hash_print_statistics@@Base+0x2c>  // b.hs, b.nlast
   15ad4:	ldr	x10, [x8]
   15ad8:	cbz	x10, 15ac8 <hash_print_statistics@@Base+0x9c>
   15adc:	mov	x10, xzr
   15ae0:	mov	x11, x8
   15ae4:	ldr	x11, [x11, #8]
   15ae8:	add	x10, x10, #0x1
   15aec:	cbnz	x11, 15ae4 <hash_print_statistics@@Base+0xb8>
   15af0:	cmp	x10, x21
   15af4:	csel	x21, x10, x21, hi  // hi = pmore
   15af8:	b	15ac8 <hash_print_statistics@@Base+0x9c>

0000000000015afc <hash_lookup@@Base>:
   15afc:	stp	x29, x30, [sp, #-48]!
   15b00:	stp	x20, x19, [sp, #32]
   15b04:	ldr	x8, [x0, #16]
   15b08:	ldr	x9, [x0, #48]
   15b0c:	mov	x19, x0
   15b10:	mov	x20, x1
   15b14:	mov	x0, x1
   15b18:	mov	x1, x8
   15b1c:	str	x21, [sp, #16]
   15b20:	mov	x29, sp
   15b24:	blr	x9
   15b28:	ldr	x8, [x19, #16]
   15b2c:	cmp	x0, x8
   15b30:	b.cs	15bb4 <hash_lookup@@Base+0xb8>  // b.hs, b.nlast
   15b34:	ldr	x8, [x19]
   15b38:	add	x21, x8, x0, lsl #4
   15b3c:	ldr	x1, [x21]
   15b40:	mov	x0, xzr
   15b44:	cbz	x1, 15b7c <hash_lookup@@Base+0x80>
   15b48:	cbz	x8, 15b7c <hash_lookup@@Base+0x80>
   15b4c:	cmp	x1, x20
   15b50:	b.eq	15b78 <hash_lookup@@Base+0x7c>  // b.none
   15b54:	ldr	x8, [x19, #56]
   15b58:	mov	x0, x20
   15b5c:	blr	x8
   15b60:	tbnz	w0, #0, 15b8c <hash_lookup@@Base+0x90>
   15b64:	ldr	x21, [x21, #8]
   15b68:	cbz	x21, 15ba0 <hash_lookup@@Base+0xa4>
   15b6c:	ldr	x1, [x21]
   15b70:	cmp	x1, x20
   15b74:	b.ne	15b54 <hash_lookup@@Base+0x58>  // b.any
   15b78:	mov	x0, x20
   15b7c:	ldp	x20, x19, [sp, #32]
   15b80:	ldr	x21, [sp, #16]
   15b84:	ldp	x29, x30, [sp], #48
   15b88:	ret
   15b8c:	ldr	x0, [x21]
   15b90:	ldp	x20, x19, [sp, #32]
   15b94:	ldr	x21, [sp, #16]
   15b98:	ldp	x29, x30, [sp], #48
   15b9c:	ret
   15ba0:	mov	x0, xzr
   15ba4:	ldp	x20, x19, [sp, #32]
   15ba8:	ldr	x21, [sp, #16]
   15bac:	ldp	x29, x30, [sp], #48
   15bb0:	ret
   15bb4:	bl	a850 <abort@plt>

0000000000015bb8 <hash_get_first@@Base>:
   15bb8:	stp	x29, x30, [sp, #-16]!
   15bbc:	ldr	x8, [x0, #32]
   15bc0:	mov	x29, sp
   15bc4:	cbz	x8, 15be4 <hash_get_first@@Base+0x2c>
   15bc8:	ldp	x8, x9, [x0]
   15bcc:	cmp	x8, x9
   15bd0:	b.cs	15bf0 <hash_get_first@@Base+0x38>  // b.hs, b.nlast
   15bd4:	ldr	x0, [x8], #16
   15bd8:	cbz	x0, 15bcc <hash_get_first@@Base+0x14>
   15bdc:	ldp	x29, x30, [sp], #16
   15be0:	ret
   15be4:	mov	x0, xzr
   15be8:	ldp	x29, x30, [sp], #16
   15bec:	ret
   15bf0:	bl	a850 <abort@plt>

0000000000015bf4 <hash_get_next@@Base>:
   15bf4:	stp	x29, x30, [sp, #-32]!
   15bf8:	stp	x20, x19, [sp, #16]
   15bfc:	ldr	x8, [x0, #16]
   15c00:	ldr	x9, [x0, #48]
   15c04:	mov	x19, x0
   15c08:	mov	x20, x1
   15c0c:	mov	x0, x1
   15c10:	mov	x1, x8
   15c14:	mov	x29, sp
   15c18:	blr	x9
   15c1c:	ldr	x8, [x19, #16]
   15c20:	cmp	x0, x8
   15c24:	b.cs	15c88 <hash_get_next@@Base+0x94>  // b.hs, b.nlast
   15c28:	ldr	x8, [x19]
   15c2c:	add	x9, x8, x0, lsl #4
   15c30:	ldp	x10, x9, [x9]
   15c34:	cmp	x10, x20
   15c38:	b.eq	15c44 <hash_get_next@@Base+0x50>  // b.none
   15c3c:	cbnz	x9, 15c30 <hash_get_next@@Base+0x3c>
   15c40:	b	15c58 <hash_get_next@@Base+0x64>
   15c44:	cbz	x9, 15c58 <hash_get_next@@Base+0x64>
   15c48:	ldr	x0, [x9]
   15c4c:	ldp	x20, x19, [sp, #16]
   15c50:	ldp	x29, x30, [sp], #32
   15c54:	ret
   15c58:	ldr	x9, [x19, #8]
   15c5c:	add	x8, x8, x0, lsl #4
   15c60:	add	x8, x8, #0x10
   15c64:	cmp	x8, x9
   15c68:	b.cs	15c78 <hash_get_next@@Base+0x84>  // b.hs, b.nlast
   15c6c:	ldr	x0, [x8], #16
   15c70:	cbz	x0, 15c64 <hash_get_next@@Base+0x70>
   15c74:	b	15c4c <hash_get_next@@Base+0x58>
   15c78:	mov	x0, xzr
   15c7c:	ldp	x20, x19, [sp, #16]
   15c80:	ldp	x29, x30, [sp], #32
   15c84:	ret
   15c88:	bl	a850 <abort@plt>

0000000000015c8c <hash_get_entries@@Base>:
   15c8c:	ldp	x9, x10, [x0]
   15c90:	cmp	x9, x10
   15c94:	b.cs	15d00 <hash_get_entries@@Base+0x74>  // b.hs, b.nlast
   15c98:	mov	x11, xzr
   15c9c:	ldr	x8, [x9]
   15ca0:	cbz	x8, 15ce4 <hash_get_entries@@Base+0x58>
   15ca4:	cbz	x9, 15ce4 <hash_get_entries@@Base+0x58>
   15ca8:	mov	x10, x9
   15cac:	cmp	x11, x2
   15cb0:	b.cs	15d08 <hash_get_entries@@Base+0x7c>  // b.hs, b.nlast
   15cb4:	ldr	x8, [x10]
   15cb8:	str	x8, [x1, x11, lsl #3]
   15cbc:	ldr	x10, [x10, #8]
   15cc0:	add	x8, x11, #0x1
   15cc4:	mov	x11, x8
   15cc8:	cbnz	x10, 15cac <hash_get_entries@@Base+0x20>
   15ccc:	ldr	x10, [x0, #8]
   15cd0:	add	x9, x9, #0x10
   15cd4:	cmp	x9, x10
   15cd8:	mov	x11, x8
   15cdc:	b.cc	15c9c <hash_get_entries@@Base+0x10>  // b.lo, b.ul, b.last
   15ce0:	b	15cf8 <hash_get_entries@@Base+0x6c>
   15ce4:	mov	x8, x11
   15ce8:	add	x9, x9, #0x10
   15cec:	cmp	x9, x10
   15cf0:	mov	x11, x8
   15cf4:	b.cc	15c9c <hash_get_entries@@Base+0x10>  // b.lo, b.ul, b.last
   15cf8:	mov	x0, x8
   15cfc:	ret
   15d00:	mov	x0, xzr
   15d04:	ret
   15d08:	mov	x0, x11
   15d0c:	ret

0000000000015d10 <hash_do_for_each@@Base>:
   15d10:	stp	x29, x30, [sp, #-64]!
   15d14:	stp	x24, x23, [sp, #16]
   15d18:	stp	x22, x21, [sp, #32]
   15d1c:	stp	x20, x19, [sp, #48]
   15d20:	ldp	x23, x8, [x0]
   15d24:	mov	x29, sp
   15d28:	cmp	x23, x8
   15d2c:	b.cs	15d44 <hash_do_for_each@@Base+0x34>  // b.hs, b.nlast
   15d30:	mov	x19, x2
   15d34:	mov	x20, x0
   15d38:	mov	x21, x1
   15d3c:	mov	x22, xzr
   15d40:	b	15d5c <hash_do_for_each@@Base+0x4c>
   15d44:	mov	x22, xzr
   15d48:	b	15d94 <hash_do_for_each@@Base+0x84>
   15d4c:	ldr	x8, [x20, #8]
   15d50:	add	x23, x23, #0x10
   15d54:	cmp	x23, x8
   15d58:	b.cs	15d94 <hash_do_for_each@@Base+0x84>  // b.hs, b.nlast
   15d5c:	ldr	x0, [x23]
   15d60:	cbz	x0, 15d50 <hash_do_for_each@@Base+0x40>
   15d64:	cbz	x23, 15d50 <hash_do_for_each@@Base+0x40>
   15d68:	mov	x1, x19
   15d6c:	blr	x21
   15d70:	tbz	w0, #0, 15d94 <hash_do_for_each@@Base+0x84>
   15d74:	mov	x24, x23
   15d78:	ldr	x24, [x24, #8]
   15d7c:	add	x22, x22, #0x1
   15d80:	cbz	x24, 15d4c <hash_do_for_each@@Base+0x3c>
   15d84:	ldr	x0, [x24]
   15d88:	mov	x1, x19
   15d8c:	blr	x21
   15d90:	tbnz	w0, #0, 15d78 <hash_do_for_each@@Base+0x68>
   15d94:	mov	x0, x22
   15d98:	ldp	x20, x19, [sp, #48]
   15d9c:	ldp	x22, x21, [sp, #32]
   15da0:	ldp	x24, x23, [sp, #16]
   15da4:	ldp	x29, x30, [sp], #64
   15da8:	ret

0000000000015dac <hash_string@@Base>:
   15dac:	ldrb	w9, [x0]
   15db0:	cbz	w9, 15de0 <hash_string@@Base+0x34>
   15db4:	mov	x8, x0
   15db8:	mov	x0, xzr
   15dbc:	add	x8, x8, #0x1
   15dc0:	lsl	x10, x0, #5
   15dc4:	sub	x10, x10, x0
   15dc8:	add	x10, x10, w9, uxtb
   15dcc:	ldrb	w9, [x8], #1
   15dd0:	udiv	x11, x10, x1
   15dd4:	msub	x0, x11, x1, x10
   15dd8:	cbnz	w9, 15dc0 <hash_string@@Base+0x14>
   15ddc:	ret
   15de0:	mov	x0, xzr
   15de4:	ret

0000000000015de8 <hash_reset_tuning@@Base>:
   15de8:	adrp	x8, 32000 <vasnprintf@@Base+0x1474>
   15dec:	add	x8, x8, #0x6b0
   15df0:	ldr	w9, [x8, #16]
   15df4:	ldr	q0, [x8]
   15df8:	str	w9, [x0, #16]
   15dfc:	str	q0, [x0]
   15e00:	ret

0000000000015e04 <hash_initialize@@Base>:
   15e04:	stp	x29, x30, [sp, #-64]!
   15e08:	adrp	x8, 15000 <canonicalize_filename_mode@@Base+0x190>
   15e0c:	add	x8, x8, #0xfec
   15e10:	cmp	x2, #0x0
   15e14:	adrp	x9, 15000 <canonicalize_filename_mode@@Base+0x190>
   15e18:	stp	x24, x23, [sp, #16]
   15e1c:	stp	x22, x21, [sp, #32]
   15e20:	mov	x21, x0
   15e24:	add	x9, x9, #0xffc
   15e28:	csel	x23, x8, x2, eq  // eq = none
   15e2c:	cmp	x3, #0x0
   15e30:	mov	w0, #0x50                  	// #80
   15e34:	stp	x20, x19, [sp, #48]
   15e38:	mov	x29, sp
   15e3c:	mov	x19, x4
   15e40:	mov	x22, x1
   15e44:	csel	x24, x9, x3, eq  // eq = none
   15e48:	bl	a550 <malloc@plt>
   15e4c:	mov	x20, x0
   15e50:	cbz	x0, 15fd4 <hash_initialize@@Base+0x1d0>
   15e54:	adrp	x9, 32000 <vasnprintf@@Base+0x1474>
   15e58:	add	x9, x9, #0x6b0
   15e5c:	cmp	x22, #0x0
   15e60:	csel	x8, x9, x22, eq  // eq = none
   15e64:	cmp	x8, x9
   15e68:	str	x8, [x20, #40]
   15e6c:	b.eq	15ef0 <hash_initialize@@Base+0xec>  // b.none
   15e70:	ldr	s0, [x8, #8]
   15e74:	mov	w9, #0xcccd                	// #52429
   15e78:	movk	w9, #0x3dcc, lsl #16
   15e7c:	fmov	s1, w9
   15e80:	fcmp	s0, s1
   15e84:	b.le	15fc8 <hash_initialize@@Base+0x1c4>
   15e88:	mov	w9, #0x6666                	// #26214
   15e8c:	movk	w9, #0x3f66, lsl #16
   15e90:	fmov	s1, w9
   15e94:	fcmp	s0, s1
   15e98:	b.pl	15fc8 <hash_initialize@@Base+0x1c4>  // b.nfrst
   15e9c:	ldr	s1, [x8, #12]
   15ea0:	mov	w9, #0xcccd                	// #52429
   15ea4:	movk	w9, #0x3f8c, lsl #16
   15ea8:	fmov	s2, w9
   15eac:	fcmp	s1, s2
   15eb0:	b.le	15fc8 <hash_initialize@@Base+0x1c4>
   15eb4:	ldr	s1, [x8]
   15eb8:	fcmp	s1, #0.0
   15ebc:	b.lt	15fc8 <hash_initialize@@Base+0x1c4>  // b.tstop
   15ec0:	mov	w9, #0xcccd                	// #52429
   15ec4:	movk	w9, #0x3dcc, lsl #16
   15ec8:	fmov	s2, w9
   15ecc:	fadd	s1, s1, s2
   15ed0:	fcmp	s1, s0
   15ed4:	b.pl	15fc8 <hash_initialize@@Base+0x1c4>  // b.nfrst
   15ed8:	ldr	s0, [x8, #4]
   15edc:	fmov	s2, #1.000000000000000000e+00
   15ee0:	fcmp	s0, s2
   15ee4:	b.hi	15fc8 <hash_initialize@@Base+0x1c4>  // b.pmore
   15ee8:	fcmp	s1, s0
   15eec:	b.pl	15fc8 <hash_initialize@@Base+0x1c4>  // b.nfrst
   15ef0:	ldrb	w9, [x8, #16]
   15ef4:	cbnz	w9, 15f18 <hash_initialize@@Base+0x114>
   15ef8:	ldr	s0, [x8, #8]
   15efc:	ucvtf	s1, x21
   15f00:	mov	w8, #0x5f800000            	// #1602224128
   15f04:	fdiv	s0, s1, s0
   15f08:	fmov	s1, w8
   15f0c:	fcmp	s0, s1
   15f10:	b.ge	15fc8 <hash_initialize@@Base+0x1c4>  // b.tcont
   15f14:	fcvtzu	x21, s0
   15f18:	cmp	x21, #0xa
   15f1c:	mov	w8, #0xa                   	// #10
   15f20:	csel	x8, x21, x8, hi  // hi = pmore
   15f24:	orr	x21, x8, #0x1
   15f28:	cmn	x21, #0x1
   15f2c:	b.eq	15fc8 <hash_initialize@@Base+0x1c4>  // b.none
   15f30:	cmp	x21, #0xa
   15f34:	b.cc	15f6c <hash_initialize@@Base+0x168>  // b.lo, b.ul, b.last
   15f38:	mov	w9, #0xc                   	// #12
   15f3c:	mov	w10, #0x9                   	// #9
   15f40:	mov	w8, #0x3                   	// #3
   15f44:	udiv	x11, x21, x8
   15f48:	msub	x11, x11, x8, x21
   15f4c:	cbz	x11, 15f70 <hash_initialize@@Base+0x16c>
   15f50:	add	x10, x10, x9
   15f54:	add	x10, x10, #0x4
   15f58:	add	x8, x8, #0x2
   15f5c:	cmp	x10, x21
   15f60:	add	x9, x9, #0x8
   15f64:	b.cc	15f44 <hash_initialize@@Base+0x140>  // b.lo, b.ul, b.last
   15f68:	b	15f70 <hash_initialize@@Base+0x16c>
   15f6c:	mov	w8, #0x3                   	// #3
   15f70:	udiv	x9, x21, x8
   15f74:	msub	x8, x9, x8, x21
   15f78:	cbnz	x8, 15f8c <hash_initialize@@Base+0x188>
   15f7c:	add	x21, x21, #0x2
   15f80:	cmn	x21, #0x1
   15f84:	b.ne	15f30 <hash_initialize@@Base+0x12c>  // b.any
   15f88:	b	15fc8 <hash_initialize@@Base+0x1c4>
   15f8c:	lsr	x8, x21, #60
   15f90:	cbnz	x8, 15fc8 <hash_initialize@@Base+0x1c4>
   15f94:	str	x21, [x20, #16]
   15f98:	cbz	x21, 15fc8 <hash_initialize@@Base+0x1c4>
   15f9c:	mov	w1, #0x10                  	// #16
   15fa0:	mov	x0, x21
   15fa4:	bl	a6c0 <calloc@plt>
   15fa8:	str	x0, [x20]
   15fac:	cbz	x0, 15fc8 <hash_initialize@@Base+0x1c4>
   15fb0:	add	x8, x0, x21, lsl #4
   15fb4:	stp	xzr, xzr, [x20, #24]
   15fb8:	stp	x23, x24, [x20, #48]
   15fbc:	str	x8, [x20, #8]
   15fc0:	stp	x19, xzr, [x20, #64]
   15fc4:	b	15fd4 <hash_initialize@@Base+0x1d0>
   15fc8:	mov	x0, x20
   15fcc:	bl	a970 <free@plt>
   15fd0:	mov	x20, xzr
   15fd4:	mov	x0, x20
   15fd8:	ldp	x20, x19, [sp, #48]
   15fdc:	ldp	x22, x21, [sp, #32]
   15fe0:	ldp	x24, x23, [sp, #16]
   15fe4:	ldp	x29, x30, [sp], #64
   15fe8:	ret
   15fec:	ror	x8, x0, #3
   15ff0:	udiv	x9, x8, x1
   15ff4:	msub	x0, x9, x1, x8
   15ff8:	ret
   15ffc:	cmp	x0, x1
   16000:	cset	w0, eq  // eq = none
   16004:	ret

0000000000016008 <hash_clear@@Base>:
   16008:	stp	x29, x30, [sp, #-48]!
   1600c:	str	x21, [sp, #16]
   16010:	stp	x20, x19, [sp, #32]
   16014:	ldp	x20, x8, [x0]
   16018:	mov	x19, x0
   1601c:	mov	x29, sp
   16020:	b	16030 <hash_clear@@Base+0x28>
   16024:	stp	xzr, xzr, [x20]
   16028:	ldr	x8, [x19, #8]
   1602c:	add	x20, x20, #0x10
   16030:	cmp	x20, x8
   16034:	b.cs	1609c <hash_clear@@Base+0x94>  // b.hs, b.nlast
   16038:	ldr	x9, [x20]
   1603c:	cbz	x9, 1602c <hash_clear@@Base+0x24>
   16040:	ldr	x8, [x19, #64]
   16044:	ldr	x21, [x20, #8]
   16048:	cmp	x8, #0x0
   1604c:	cset	w9, ne  // ne = any
   16050:	cbnz	x21, 16088 <hash_clear@@Base+0x80>
   16054:	cbz	w9, 16024 <hash_clear@@Base+0x1c>
   16058:	ldr	x0, [x20]
   1605c:	blr	x8
   16060:	b	16024 <hash_clear@@Base+0x1c>
   16064:	str	xzr, [x21]
   16068:	ldr	x9, [x19, #72]
   1606c:	ldr	x10, [x21, #8]
   16070:	cmp	x8, #0x0
   16074:	str	x9, [x21, #8]
   16078:	str	x21, [x19, #72]
   1607c:	cset	w9, ne  // ne = any
   16080:	mov	x21, x10
   16084:	cbz	x10, 16054 <hash_clear@@Base+0x4c>
   16088:	tbz	w9, #0, 16064 <hash_clear@@Base+0x5c>
   1608c:	ldr	x0, [x21]
   16090:	blr	x8
   16094:	ldr	x8, [x19, #64]
   16098:	b	16064 <hash_clear@@Base+0x5c>
   1609c:	stp	xzr, xzr, [x19, #24]
   160a0:	ldp	x20, x19, [sp, #32]
   160a4:	ldr	x21, [sp, #16]
   160a8:	ldp	x29, x30, [sp], #48
   160ac:	ret

00000000000160b0 <hash_free@@Base>:
   160b0:	stp	x29, x30, [sp, #-48]!
   160b4:	stp	x20, x19, [sp, #32]
   160b8:	ldr	x8, [x0, #64]
   160bc:	mov	x19, x0
   160c0:	str	x21, [sp, #16]
   160c4:	mov	x29, sp
   160c8:	cbz	x8, 16120 <hash_free@@Base+0x70>
   160cc:	ldr	x8, [x19, #32]
   160d0:	cbz	x8, 16120 <hash_free@@Base+0x70>
   160d4:	ldp	x20, x8, [x19]
   160d8:	b	160e4 <hash_free@@Base+0x34>
   160dc:	ldr	x8, [x19, #8]
   160e0:	add	x20, x20, #0x10
   160e4:	cmp	x20, x8
   160e8:	b.cs	16120 <hash_free@@Base+0x70>  // b.hs, b.nlast
   160ec:	ldr	x0, [x20]
   160f0:	cbz	x0, 160e0 <hash_free@@Base+0x30>
   160f4:	cbz	x20, 160e0 <hash_free@@Base+0x30>
   160f8:	ldr	x8, [x19, #64]
   160fc:	blr	x8
   16100:	ldr	x21, [x20, #8]
   16104:	cbz	x21, 160dc <hash_free@@Base+0x2c>
   16108:	ldr	x0, [x21]
   1610c:	ldr	x8, [x19, #64]
   16110:	blr	x8
   16114:	ldr	x21, [x21, #8]
   16118:	cbnz	x21, 16108 <hash_free@@Base+0x58>
   1611c:	b	160dc <hash_free@@Base+0x2c>
   16120:	ldp	x20, x8, [x19]
   16124:	b	1612c <hash_free@@Base+0x7c>
   16128:	add	x20, x20, #0x10
   1612c:	cmp	x20, x8
   16130:	b.cs	16154 <hash_free@@Base+0xa4>  // b.hs, b.nlast
   16134:	ldr	x0, [x20, #8]
   16138:	cbz	x0, 16128 <hash_free@@Base+0x78>
   1613c:	ldr	x21, [x0, #8]
   16140:	bl	a970 <free@plt>
   16144:	mov	x0, x21
   16148:	cbnz	x21, 1613c <hash_free@@Base+0x8c>
   1614c:	ldr	x8, [x19, #8]
   16150:	b	16128 <hash_free@@Base+0x78>
   16154:	ldr	x0, [x19, #72]
   16158:	cbz	x0, 1616c <hash_free@@Base+0xbc>
   1615c:	ldr	x20, [x0, #8]
   16160:	bl	a970 <free@plt>
   16164:	mov	x0, x20
   16168:	cbnz	x20, 1615c <hash_free@@Base+0xac>
   1616c:	ldr	x0, [x19]
   16170:	bl	a970 <free@plt>
   16174:	mov	x0, x19
   16178:	ldp	x20, x19, [sp, #32]
   1617c:	ldr	x21, [sp, #16]
   16180:	ldp	x29, x30, [sp], #48
   16184:	b	a970 <free@plt>

0000000000016188 <hash_rehash@@Base>:
   16188:	sub	sp, sp, #0x90
   1618c:	stp	x29, x30, [sp, #80]
   16190:	stp	x24, x23, [sp, #96]
   16194:	stp	x22, x21, [sp, #112]
   16198:	stp	x20, x19, [sp, #128]
   1619c:	ldr	x21, [x0, #40]
   161a0:	mov	x19, x0
   161a4:	add	x29, sp, #0x50
   161a8:	ldrb	w8, [x21, #16]
   161ac:	cbnz	w8, 161d0 <hash_rehash@@Base+0x48>
   161b0:	ldr	s0, [x21, #8]
   161b4:	ucvtf	s1, x1
   161b8:	mov	w8, #0x5f800000            	// #1602224128
   161bc:	fdiv	s0, s1, s0
   161c0:	fmov	s1, w8
   161c4:	fcmp	s0, s1
   161c8:	b.ge	16254 <hash_rehash@@Base+0xcc>  // b.tcont
   161cc:	fcvtzu	x1, s0
   161d0:	cmp	x1, #0xa
   161d4:	mov	w8, #0xa                   	// #10
   161d8:	csel	x8, x1, x8, hi  // hi = pmore
   161dc:	orr	x20, x8, #0x1
   161e0:	cmn	x20, #0x1
   161e4:	b.eq	16254 <hash_rehash@@Base+0xcc>  // b.none
   161e8:	cmp	x20, #0xa
   161ec:	b.cc	16224 <hash_rehash@@Base+0x9c>  // b.lo, b.ul, b.last
   161f0:	mov	w9, #0xc                   	// #12
   161f4:	mov	w10, #0x9                   	// #9
   161f8:	mov	w8, #0x3                   	// #3
   161fc:	udiv	x11, x20, x8
   16200:	msub	x11, x11, x8, x20
   16204:	cbz	x11, 16228 <hash_rehash@@Base+0xa0>
   16208:	add	x10, x10, x9
   1620c:	add	x10, x10, #0x4
   16210:	add	x8, x8, #0x2
   16214:	cmp	x10, x20
   16218:	add	x9, x9, #0x8
   1621c:	b.cc	161fc <hash_rehash@@Base+0x74>  // b.lo, b.ul, b.last
   16220:	b	16228 <hash_rehash@@Base+0xa0>
   16224:	mov	w8, #0x3                   	// #3
   16228:	udiv	x9, x20, x8
   1622c:	msub	x8, x9, x8, x20
   16230:	cbnz	x8, 16244 <hash_rehash@@Base+0xbc>
   16234:	add	x20, x20, #0x2
   16238:	cmn	x20, #0x1
   1623c:	b.ne	161e8 <hash_rehash@@Base+0x60>  // b.any
   16240:	b	16254 <hash_rehash@@Base+0xcc>
   16244:	sub	x8, x20, #0x1
   16248:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
   1624c:	cmp	x8, x9
   16250:	b.ls	16270 <hash_rehash@@Base+0xe8>  // b.plast
   16254:	mov	w0, wzr
   16258:	ldp	x20, x19, [sp, #128]
   1625c:	ldp	x22, x21, [sp, #112]
   16260:	ldp	x24, x23, [sp, #96]
   16264:	ldp	x29, x30, [sp, #80]
   16268:	add	sp, sp, #0x90
   1626c:	ret
   16270:	ldr	x8, [x19, #16]
   16274:	cmp	x20, x8
   16278:	b.ne	16284 <hash_rehash@@Base+0xfc>  // b.any
   1627c:	mov	w0, #0x1                   	// #1
   16280:	b	16258 <hash_rehash@@Base+0xd0>
   16284:	mov	w1, #0x10                  	// #16
   16288:	mov	x0, x20
   1628c:	bl	a6c0 <calloc@plt>
   16290:	str	x0, [sp]
   16294:	cbz	x0, 16258 <hash_rehash@@Base+0xd0>
   16298:	add	x8, x0, x20, lsl #4
   1629c:	stp	xzr, xzr, [sp, #24]
   162a0:	stp	x8, x20, [sp, #8]
   162a4:	str	x21, [sp, #40]
   162a8:	ldr	q0, [x19, #48]
   162ac:	mov	x0, sp
   162b0:	mov	x1, x19
   162b4:	mov	w2, wzr
   162b8:	str	q0, [sp, #48]
   162bc:	ldr	q0, [x19, #64]
   162c0:	str	q0, [sp, #64]
   162c4:	bl	163b8 <hash_rehash@@Base+0x230>
   162c8:	tbz	w0, #0, 162f4 <hash_rehash@@Base+0x16c>
   162cc:	ldr	x0, [x19]
   162d0:	bl	a970 <free@plt>
   162d4:	ldr	q0, [sp]
   162d8:	mov	w0, #0x1                   	// #1
   162dc:	str	q0, [x19]
   162e0:	ldr	q0, [sp, #16]
   162e4:	str	q0, [x19, #16]
   162e8:	ldr	x8, [sp, #72]
   162ec:	str	x8, [x19, #72]
   162f0:	b	16258 <hash_rehash@@Base+0xd0>
   162f4:	ldr	x8, [sp, #72]
   162f8:	add	x21, x19, #0x48
   162fc:	str	x8, [x21]
   16300:	ldp	x22, x23, [sp]
   16304:	b	16310 <hash_rehash@@Base+0x188>
   16308:	str	xzr, [x22, #8]
   1630c:	add	x22, x22, #0x10
   16310:	cmp	x22, x23
   16314:	b.cs	16394 <hash_rehash@@Base+0x20c>  // b.hs, b.nlast
   16318:	ldr	x8, [x22]
   1631c:	cbz	x8, 1630c <hash_rehash@@Base+0x184>
   16320:	ldr	x24, [x22, #8]
   16324:	cbz	x24, 16308 <hash_rehash@@Base+0x180>
   16328:	ldr	x1, [x19, #16]
   1632c:	b	1635c <hash_rehash@@Base+0x1d4>
   16330:	str	x20, [x9]
   16334:	ldr	x9, [x19, #24]
   16338:	add	x9, x9, #0x1
   1633c:	str	x9, [x19, #24]
   16340:	mov	x9, x21
   16344:	str	xzr, [x24]
   16348:	ldr	x10, [x9]
   1634c:	str	x10, [x24, #8]
   16350:	str	x24, [x9]
   16354:	mov	x24, x8
   16358:	cbz	x8, 16308 <hash_rehash@@Base+0x180>
   1635c:	ldr	x20, [x24]
   16360:	ldr	x8, [x19, #48]
   16364:	mov	x0, x20
   16368:	blr	x8
   1636c:	ldr	x1, [x19, #16]
   16370:	cmp	x0, x1
   16374:	b.cs	163b4 <hash_rehash@@Base+0x22c>  // b.hs, b.nlast
   16378:	ldr	x8, [x19]
   1637c:	add	x9, x8, x0, lsl #4
   16380:	ldr	x10, [x9]
   16384:	ldr	x8, [x24, #8]
   16388:	cbz	x10, 16330 <hash_rehash@@Base+0x1a8>
   1638c:	add	x9, x9, #0x8
   16390:	b	16348 <hash_rehash@@Base+0x1c0>
   16394:	mov	x1, sp
   16398:	mov	x0, x19
   1639c:	mov	w2, wzr
   163a0:	bl	163b8 <hash_rehash@@Base+0x230>
   163a4:	tbz	w0, #0, 163b4 <hash_rehash@@Base+0x22c>
   163a8:	ldr	x0, [sp]
   163ac:	bl	a970 <free@plt>
   163b0:	b	16254 <hash_rehash@@Base+0xcc>
   163b4:	bl	a850 <abort@plt>
   163b8:	stp	x29, x30, [sp, #-80]!
   163bc:	str	x25, [sp, #16]
   163c0:	stp	x24, x23, [sp, #32]
   163c4:	stp	x22, x21, [sp, #48]
   163c8:	stp	x20, x19, [sp, #64]
   163cc:	ldp	x23, x8, [x1]
   163d0:	mov	x29, sp
   163d4:	cmp	x23, x8
   163d8:	b.cs	16598 <hash_rehash@@Base+0x410>  // b.hs, b.nlast
   163dc:	mov	x19, x1
   163e0:	mov	x20, x0
   163e4:	add	x24, x0, #0x48
   163e8:	tbz	w2, #0, 164b0 <hash_rehash@@Base+0x328>
   163ec:	b	16404 <hash_rehash@@Base+0x27c>
   163f0:	ldr	x8, [x19, #8]
   163f4:	str	xzr, [x23, #8]
   163f8:	add	x23, x23, #0x10
   163fc:	cmp	x23, x8
   16400:	b.cs	16598 <hash_rehash@@Base+0x410>  // b.hs, b.nlast
   16404:	ldr	x9, [x23]
   16408:	cbz	x9, 163f8 <hash_rehash@@Base+0x270>
   1640c:	ldr	x22, [x23, #8]
   16410:	cbz	x22, 163f4 <hash_rehash@@Base+0x26c>
   16414:	ldr	x1, [x20, #16]
   16418:	b	16448 <hash_rehash@@Base+0x2c0>
   1641c:	str	x21, [x9]
   16420:	ldr	x9, [x20, #24]
   16424:	add	x9, x9, #0x1
   16428:	str	x9, [x20, #24]
   1642c:	mov	x9, x24
   16430:	str	xzr, [x22]
   16434:	ldr	x10, [x9]
   16438:	str	x10, [x22, #8]
   1643c:	str	x22, [x9]
   16440:	mov	x22, x8
   16444:	cbz	x8, 163f0 <hash_rehash@@Base+0x268>
   16448:	ldr	x21, [x22]
   1644c:	ldr	x8, [x20, #48]
   16450:	mov	x0, x21
   16454:	blr	x8
   16458:	ldr	x1, [x20, #16]
   1645c:	cmp	x0, x1
   16460:	b.cs	165b4 <hash_rehash@@Base+0x42c>  // b.hs, b.nlast
   16464:	ldr	x8, [x20]
   16468:	add	x9, x8, x0, lsl #4
   1646c:	ldr	x10, [x9]
   16470:	ldr	x8, [x22, #8]
   16474:	cbz	x10, 1641c <hash_rehash@@Base+0x294>
   16478:	add	x9, x9, #0x8
   1647c:	b	16434 <hash_rehash@@Base+0x2ac>
   16480:	str	x21, [x8]
   16484:	ldr	x8, [x20, #24]
   16488:	add	x8, x8, #0x1
   1648c:	str	x8, [x20, #24]
   16490:	str	xzr, [x23]
   16494:	ldr	x9, [x19, #24]
   16498:	ldr	x8, [x19, #8]
   1649c:	sub	x9, x9, #0x1
   164a0:	str	x9, [x19, #24]
   164a4:	add	x23, x23, #0x10
   164a8:	cmp	x23, x8
   164ac:	b.cs	16598 <hash_rehash@@Base+0x410>  // b.hs, b.nlast
   164b0:	ldr	x21, [x23]
   164b4:	cbz	x21, 164a4 <hash_rehash@@Base+0x31c>
   164b8:	ldr	x22, [x23, #8]
   164bc:	ldr	x1, [x20, #16]
   164c0:	cbnz	x22, 164e0 <hash_rehash@@Base+0x358>
   164c4:	b	16530 <hash_rehash@@Base+0x3a8>
   164c8:	add	x9, x9, #0x8
   164cc:	ldr	x10, [x9]
   164d0:	str	x10, [x22, #8]
   164d4:	str	x22, [x9]
   164d8:	mov	x22, x8
   164dc:	cbz	x8, 1652c <hash_rehash@@Base+0x3a4>
   164e0:	ldr	x21, [x22]
   164e4:	ldr	x8, [x20, #48]
   164e8:	mov	x0, x21
   164ec:	blr	x8
   164f0:	ldr	x1, [x20, #16]
   164f4:	cmp	x0, x1
   164f8:	b.cs	165b4 <hash_rehash@@Base+0x42c>  // b.hs, b.nlast
   164fc:	ldr	x8, [x20]
   16500:	add	x9, x8, x0, lsl #4
   16504:	ldr	x10, [x9]
   16508:	ldr	x8, [x22, #8]
   1650c:	cbnz	x10, 164c8 <hash_rehash@@Base+0x340>
   16510:	str	x21, [x9]
   16514:	ldr	x9, [x20, #24]
   16518:	add	x9, x9, #0x1
   1651c:	str	x9, [x20, #24]
   16520:	mov	x9, x24
   16524:	str	xzr, [x22]
   16528:	b	164cc <hash_rehash@@Base+0x344>
   1652c:	ldr	x21, [x23]
   16530:	str	xzr, [x23, #8]
   16534:	ldr	x8, [x20, #48]
   16538:	mov	x0, x21
   1653c:	blr	x8
   16540:	ldr	x8, [x20, #16]
   16544:	cmp	x0, x8
   16548:	b.cs	165b4 <hash_rehash@@Base+0x42c>  // b.hs, b.nlast
   1654c:	ldr	x25, [x20]
   16550:	mov	x22, x0
   16554:	add	x8, x25, x0, lsl #4
   16558:	ldr	x9, [x8]
   1655c:	cbz	x9, 16480 <hash_rehash@@Base+0x2f8>
   16560:	ldr	x0, [x24]
   16564:	cbz	x0, 16574 <hash_rehash@@Base+0x3ec>
   16568:	ldr	x8, [x0, #8]
   1656c:	str	x8, [x24]
   16570:	b	16580 <hash_rehash@@Base+0x3f8>
   16574:	mov	w0, #0x10                  	// #16
   16578:	bl	a550 <malloc@plt>
   1657c:	cbz	x0, 1659c <hash_rehash@@Base+0x414>
   16580:	str	x21, [x0]
   16584:	add	x8, x25, x22, lsl #4
   16588:	ldr	x9, [x8, #8]
   1658c:	str	x9, [x0, #8]
   16590:	str	x0, [x8, #8]
   16594:	b	16490 <hash_rehash@@Base+0x308>
   16598:	mov	w0, #0x1                   	// #1
   1659c:	ldp	x20, x19, [sp, #64]
   165a0:	ldp	x22, x21, [sp, #48]
   165a4:	ldp	x24, x23, [sp, #32]
   165a8:	ldr	x25, [sp, #16]
   165ac:	ldp	x29, x30, [sp], #80
   165b0:	ret
   165b4:	bl	a850 <abort@plt>

00000000000165b8 <hash_insert_if_absent@@Base>:
   165b8:	stp	x29, x30, [sp, #-80]!
   165bc:	str	x25, [sp, #16]
   165c0:	stp	x24, x23, [sp, #32]
   165c4:	stp	x22, x21, [sp, #48]
   165c8:	stp	x20, x19, [sp, #64]
   165cc:	mov	x29, sp
   165d0:	cbz	x1, 1689c <hash_insert_if_absent@@Base+0x2e4>
   165d4:	mov	x20, x1
   165d8:	ldr	x8, [x0, #48]
   165dc:	ldr	x1, [x0, #16]
   165e0:	mov	x19, x0
   165e4:	mov	x0, x20
   165e8:	mov	x21, x2
   165ec:	blr	x8
   165f0:	ldr	x8, [x19, #16]
   165f4:	cmp	x0, x8
   165f8:	b.cs	1689c <hash_insert_if_absent@@Base+0x2e4>  // b.hs, b.nlast
   165fc:	ldr	x25, [x19]
   16600:	mov	x22, x0
   16604:	add	x23, x25, x0, lsl #4
   16608:	ldr	x1, [x23]
   1660c:	cbz	x1, 16634 <hash_insert_if_absent@@Base+0x7c>
   16610:	cmp	x1, x20
   16614:	b.eq	167a8 <hash_insert_if_absent@@Base+0x1f0>  // b.none
   16618:	ldr	x8, [x19, #56]
   1661c:	mov	x0, x20
   16620:	blr	x8
   16624:	mov	x24, x23
   16628:	tbz	w0, #0, 167bc <hash_insert_if_absent@@Base+0x204>
   1662c:	ldr	x8, [x24]
   16630:	cbnz	x8, 167ac <hash_insert_if_absent@@Base+0x1f4>
   16634:	ldr	x8, [x19, #40]
   16638:	ldp	x10, x9, [x19, #16]
   1663c:	ldr	s1, [x8, #8]
   16640:	ucvtf	s0, x10
   16644:	ucvtf	s2, x9
   16648:	fmul	s3, s1, s0
   1664c:	fcmp	s3, s2
   16650:	b.pl	1678c <hash_insert_if_absent@@Base+0x1d4>  // b.nfrst
   16654:	adrp	x9, 32000 <vasnprintf@@Base+0x1474>
   16658:	add	x9, x9, #0x6b0
   1665c:	cmp	x8, x9
   16660:	b.eq	166f0 <hash_insert_if_absent@@Base+0x138>  // b.none
   16664:	mov	w10, #0xcccd                	// #52429
   16668:	movk	w10, #0x3dcc, lsl #16
   1666c:	fmov	s3, w10
   16670:	fcmp	s1, s3
   16674:	b.le	166e0 <hash_insert_if_absent@@Base+0x128>
   16678:	mov	w10, #0x6666                	// #26214
   1667c:	movk	w10, #0x3f66, lsl #16
   16680:	fmov	s3, w10
   16684:	fcmp	s1, s3
   16688:	b.pl	166e0 <hash_insert_if_absent@@Base+0x128>  // b.nfrst
   1668c:	ldr	s3, [x8, #12]
   16690:	mov	w10, #0xcccd                	// #52429
   16694:	movk	w10, #0x3f8c, lsl #16
   16698:	fmov	s4, w10
   1669c:	fcmp	s3, s4
   166a0:	b.le	166e0 <hash_insert_if_absent@@Base+0x128>
   166a4:	ldr	s3, [x8]
   166a8:	fcmp	s3, #0.0
   166ac:	b.lt	166e0 <hash_insert_if_absent@@Base+0x128>  // b.tstop
   166b0:	mov	w10, #0xcccd                	// #52429
   166b4:	movk	w10, #0x3dcc, lsl #16
   166b8:	fmov	s4, w10
   166bc:	fadd	s3, s3, s4
   166c0:	fcmp	s3, s1
   166c4:	b.pl	166e0 <hash_insert_if_absent@@Base+0x128>  // b.nfrst
   166c8:	ldr	s4, [x8, #4]
   166cc:	fmov	s5, #1.000000000000000000e+00
   166d0:	fcmp	s4, s5
   166d4:	b.hi	166e0 <hash_insert_if_absent@@Base+0x128>  // b.pmore
   166d8:	fcmp	s3, s4
   166dc:	b.mi	166f4 <hash_insert_if_absent@@Base+0x13c>  // b.first
   166e0:	mov	w8, #0xcccd                	// #52429
   166e4:	movk	w8, #0x3f4c, lsl #16
   166e8:	fmov	s1, w8
   166ec:	str	x9, [x19, #40]
   166f0:	mov	x8, x9
   166f4:	fmul	s3, s1, s0
   166f8:	fcmp	s3, s2
   166fc:	b.pl	1678c <hash_insert_if_absent@@Base+0x1d4>  // b.nfrst
   16700:	ldr	s2, [x8, #12]
   16704:	ldrb	w8, [x8, #16]
   16708:	fmul	s0, s2, s0
   1670c:	cmp	w8, #0x0
   16710:	fmul	s1, s1, s0
   16714:	mov	w8, #0x5f800000            	// #1602224128
   16718:	fcsel	s0, s1, s0, eq  // eq = none
   1671c:	fmov	s1, w8
   16720:	fcmp	s0, s1
   16724:	b.ge	16838 <hash_insert_if_absent@@Base+0x280>  // b.tcont
   16728:	fcvtzu	x1, s0
   1672c:	mov	x0, x19
   16730:	bl	a870 <hash_rehash@plt>
   16734:	tbz	w0, #0, 16838 <hash_insert_if_absent@@Base+0x280>
   16738:	ldr	x8, [x19, #48]
   1673c:	ldr	x1, [x19, #16]
   16740:	mov	x0, x20
   16744:	blr	x8
   16748:	ldr	x8, [x19, #16]
   1674c:	cmp	x0, x8
   16750:	b.cs	1689c <hash_insert_if_absent@@Base+0x2e4>  // b.hs, b.nlast
   16754:	ldr	x22, [x19]
   16758:	mov	x21, x0
   1675c:	add	x23, x22, x0, lsl #4
   16760:	ldr	x1, [x23]
   16764:	cbz	x1, 1678c <hash_insert_if_absent@@Base+0x1d4>
   16768:	cmp	x1, x20
   1676c:	mov	x8, x20
   16770:	b.eq	16788 <hash_insert_if_absent@@Base+0x1d0>  // b.none
   16774:	ldr	x8, [x19, #56]
   16778:	mov	x0, x20
   1677c:	blr	x8
   16780:	tbz	w0, #0, 16860 <hash_insert_if_absent@@Base+0x2a8>
   16784:	ldr	x8, [x23]
   16788:	cbnz	x8, 1689c <hash_insert_if_absent@@Base+0x2e4>
   1678c:	ldr	x8, [x23]
   16790:	cbz	x8, 167ec <hash_insert_if_absent@@Base+0x234>
   16794:	ldr	x0, [x19, #72]
   16798:	cbz	x0, 16808 <hash_insert_if_absent@@Base+0x250>
   1679c:	ldr	x8, [x0, #8]
   167a0:	str	x8, [x19, #72]
   167a4:	b	16814 <hash_insert_if_absent@@Base+0x25c>
   167a8:	mov	x8, x20
   167ac:	mov	w0, wzr
   167b0:	cbz	x21, 1683c <hash_insert_if_absent@@Base+0x284>
   167b4:	str	x8, [x21]
   167b8:	b	1683c <hash_insert_if_absent@@Base+0x284>
   167bc:	add	x24, x25, x22, lsl #4
   167c0:	ldr	x8, [x24, #8]!
   167c4:	cbz	x8, 16634 <hash_insert_if_absent@@Base+0x7c>
   167c8:	ldr	x1, [x8]
   167cc:	cmp	x1, x20
   167d0:	b.eq	16854 <hash_insert_if_absent@@Base+0x29c>  // b.none
   167d4:	ldr	x8, [x19, #56]
   167d8:	mov	x0, x20
   167dc:	blr	x8
   167e0:	ldr	x24, [x24]
   167e4:	tbz	w0, #0, 167c0 <hash_insert_if_absent@@Base+0x208>
   167e8:	b	1662c <hash_insert_if_absent@@Base+0x74>
   167ec:	str	x20, [x23]
   167f0:	ldur	q0, [x19, #24]
   167f4:	mov	w0, #0x1                   	// #1
   167f8:	dup	v1.2d, x0
   167fc:	add	v0.2d, v0.2d, v1.2d
   16800:	stur	q0, [x19, #24]
   16804:	b	1683c <hash_insert_if_absent@@Base+0x284>
   16808:	mov	w0, #0x10                  	// #16
   1680c:	bl	a550 <malloc@plt>
   16810:	cbz	x0, 16838 <hash_insert_if_absent@@Base+0x280>
   16814:	str	x20, [x0]
   16818:	ldr	x8, [x23, #8]
   1681c:	str	x8, [x0, #8]
   16820:	str	x0, [x23, #8]
   16824:	ldr	x8, [x19, #32]
   16828:	mov	w0, #0x1                   	// #1
   1682c:	add	x8, x8, #0x1
   16830:	str	x8, [x19, #32]
   16834:	b	1683c <hash_insert_if_absent@@Base+0x284>
   16838:	mov	w0, #0xffffffff            	// #-1
   1683c:	ldp	x20, x19, [sp, #64]
   16840:	ldp	x22, x21, [sp, #48]
   16844:	ldp	x24, x23, [sp, #32]
   16848:	ldr	x25, [sp, #16]
   1684c:	ldp	x29, x30, [sp], #80
   16850:	ret
   16854:	mov	x8, x20
   16858:	cbnz	x8, 167ac <hash_insert_if_absent@@Base+0x1f4>
   1685c:	b	16634 <hash_insert_if_absent@@Base+0x7c>
   16860:	add	x21, x22, x21, lsl #4
   16864:	ldr	x8, [x21, #8]!
   16868:	cbz	x8, 1678c <hash_insert_if_absent@@Base+0x1d4>
   1686c:	ldr	x1, [x8]
   16870:	cmp	x1, x20
   16874:	b.eq	16894 <hash_insert_if_absent@@Base+0x2dc>  // b.none
   16878:	ldr	x8, [x19, #56]
   1687c:	mov	x0, x20
   16880:	blr	x8
   16884:	ldr	x21, [x21]
   16888:	tbz	w0, #0, 16864 <hash_insert_if_absent@@Base+0x2ac>
   1688c:	ldr	x8, [x21]
   16890:	b	16788 <hash_insert_if_absent@@Base+0x1d0>
   16894:	mov	x8, x20
   16898:	b	16788 <hash_insert_if_absent@@Base+0x1d0>
   1689c:	bl	a850 <abort@plt>

00000000000168a0 <hash_insert@@Base>:
   168a0:	stp	x29, x30, [sp, #-32]!
   168a4:	mov	x29, sp
   168a8:	add	x2, x29, #0x18
   168ac:	str	x19, [sp, #16]
   168b0:	mov	x19, x1
   168b4:	bl	a700 <hash_insert_if_absent@plt>
   168b8:	ldr	x8, [x29, #24]
   168bc:	cmp	w0, #0x0
   168c0:	csel	x8, x8, x19, eq  // eq = none
   168c4:	ldr	x19, [sp, #16]
   168c8:	cmn	w0, #0x1
   168cc:	csel	x0, xzr, x8, eq  // eq = none
   168d0:	ldp	x29, x30, [sp], #32
   168d4:	ret

00000000000168d8 <hash_delete@@Base>:
   168d8:	stp	x29, x30, [sp, #-64]!
   168dc:	stp	x22, x21, [sp, #32]
   168e0:	stp	x20, x19, [sp, #48]
   168e4:	ldr	x8, [x0, #16]
   168e8:	ldr	x9, [x0, #48]
   168ec:	mov	x20, x0
   168f0:	mov	x19, x1
   168f4:	mov	x0, x1
   168f8:	mov	x1, x8
   168fc:	str	x23, [sp, #16]
   16900:	mov	x29, sp
   16904:	blr	x9
   16908:	ldr	x8, [x20, #16]
   1690c:	cmp	x0, x8
   16910:	b.cs	16b0c <hash_delete@@Base+0x234>  // b.hs, b.nlast
   16914:	ldr	x23, [x20]
   16918:	mov	x21, x0
   1691c:	add	x22, x23, x0, lsl #4
   16920:	ldr	x1, [x22]
   16924:	cbz	x1, 16994 <hash_delete@@Base+0xbc>
   16928:	cmp	x1, x19
   1692c:	b.eq	16944 <hash_delete@@Base+0x6c>  // b.none
   16930:	ldr	x8, [x20, #56]
   16934:	mov	x0, x19
   16938:	blr	x8
   1693c:	tbz	w0, #0, 1695c <hash_delete@@Base+0x84>
   16940:	ldr	x19, [x22]
   16944:	add	x8, x23, x21, lsl #4
   16948:	ldr	x8, [x8, #8]
   1694c:	cbz	x8, 1699c <hash_delete@@Base+0xc4>
   16950:	ldr	q0, [x8]
   16954:	str	q0, [x22]
   16958:	b	169bc <hash_delete@@Base+0xe4>
   1695c:	add	x21, x23, x21, lsl #4
   16960:	ldr	x9, [x21, #8]!
   16964:	cbz	x9, 16994 <hash_delete@@Base+0xbc>
   16968:	ldr	x1, [x9]
   1696c:	cmp	x1, x19
   16970:	b.eq	169a8 <hash_delete@@Base+0xd0>  // b.none
   16974:	ldr	x8, [x20, #56]
   16978:	mov	x0, x19
   1697c:	blr	x8
   16980:	ldr	x8, [x21]
   16984:	tbnz	w0, #0, 169b0 <hash_delete@@Base+0xd8>
   16988:	ldr	x9, [x8, #8]!
   1698c:	mov	x21, x8
   16990:	cbnz	x9, 16968 <hash_delete@@Base+0x90>
   16994:	mov	x19, xzr
   16998:	b	16af4 <hash_delete@@Base+0x21c>
   1699c:	str	xzr, [x22]
   169a0:	cbnz	x19, 169d0 <hash_delete@@Base+0xf8>
   169a4:	b	16af4 <hash_delete@@Base+0x21c>
   169a8:	mov	x8, x9
   169ac:	b	169b4 <hash_delete@@Base+0xdc>
   169b0:	ldr	x19, [x8]
   169b4:	ldr	x9, [x8, #8]
   169b8:	str	x9, [x21]
   169bc:	str	xzr, [x8]
   169c0:	ldr	x9, [x20, #72]
   169c4:	str	x9, [x8, #8]
   169c8:	str	x8, [x20, #72]
   169cc:	cbz	x19, 16af4 <hash_delete@@Base+0x21c>
   169d0:	ldr	x8, [x20, #32]
   169d4:	sub	x8, x8, #0x1
   169d8:	str	x8, [x20, #32]
   169dc:	ldr	x8, [x22]
   169e0:	cbnz	x8, 16af4 <hash_delete@@Base+0x21c>
   169e4:	ldp	x10, x9, [x20, #16]
   169e8:	ldr	x8, [x20, #40]
   169ec:	sub	x9, x9, #0x1
   169f0:	str	x9, [x20, #24]
   169f4:	ldr	s2, [x8]
   169f8:	ucvtf	s0, x10
   169fc:	ucvtf	s1, x9
   16a00:	fmul	s3, s2, s0
   16a04:	fcmp	s3, s1
   16a08:	b.le	16af4 <hash_delete@@Base+0x21c>
   16a0c:	adrp	x9, 32000 <vasnprintf@@Base+0x1474>
   16a10:	add	x9, x9, #0x6b0
   16a14:	cmp	x8, x9
   16a18:	b.eq	16aa0 <hash_delete@@Base+0x1c8>  // b.none
   16a1c:	ldr	s3, [x8, #8]
   16a20:	mov	w10, #0xcccd                	// #52429
   16a24:	movk	w10, #0x3dcc, lsl #16
   16a28:	fmov	s4, w10
   16a2c:	fcmp	s3, s4
   16a30:	b.le	16a98 <hash_delete@@Base+0x1c0>
   16a34:	mov	w10, #0x6666                	// #26214
   16a38:	movk	w10, #0x3f66, lsl #16
   16a3c:	fmov	s4, w10
   16a40:	fcmp	s3, s4
   16a44:	b.pl	16a98 <hash_delete@@Base+0x1c0>  // b.nfrst
   16a48:	fcmp	s2, #0.0
   16a4c:	b.lt	16a98 <hash_delete@@Base+0x1c0>  // b.tstop
   16a50:	ldr	s4, [x8, #12]
   16a54:	mov	w10, #0xcccd                	// #52429
   16a58:	movk	w10, #0x3f8c, lsl #16
   16a5c:	fmov	s5, w10
   16a60:	fcmp	s4, s5
   16a64:	b.le	16a98 <hash_delete@@Base+0x1c0>
   16a68:	mov	w10, #0xcccd                	// #52429
   16a6c:	movk	w10, #0x3dcc, lsl #16
   16a70:	fmov	s4, w10
   16a74:	fadd	s4, s2, s4
   16a78:	fcmp	s4, s3
   16a7c:	b.pl	16a98 <hash_delete@@Base+0x1c0>  // b.nfrst
   16a80:	ldr	s3, [x8, #4]
   16a84:	fmov	s5, #1.000000000000000000e+00
   16a88:	fcmp	s3, s5
   16a8c:	b.hi	16a98 <hash_delete@@Base+0x1c0>  // b.pmore
   16a90:	fcmp	s4, s3
   16a94:	b.mi	16aa4 <hash_delete@@Base+0x1cc>  // b.first
   16a98:	fmov	s2, wzr
   16a9c:	str	x9, [x20, #40]
   16aa0:	mov	x8, x9
   16aa4:	fmul	s2, s2, s0
   16aa8:	fcmp	s2, s1
   16aac:	b.le	16af4 <hash_delete@@Base+0x21c>
   16ab0:	ldr	s1, [x8, #4]
   16ab4:	ldrb	w9, [x8, #16]
   16ab8:	fmul	s0, s1, s0
   16abc:	cbnz	w9, 16ac8 <hash_delete@@Base+0x1f0>
   16ac0:	ldr	s1, [x8, #8]
   16ac4:	fmul	s0, s0, s1
   16ac8:	fcvtzu	x1, s0
   16acc:	mov	x0, x20
   16ad0:	bl	a870 <hash_rehash@plt>
   16ad4:	tbnz	w0, #0, 16af4 <hash_delete@@Base+0x21c>
   16ad8:	ldr	x0, [x20, #72]
   16adc:	cbz	x0, 16af0 <hash_delete@@Base+0x218>
   16ae0:	ldr	x21, [x0, #8]
   16ae4:	bl	a970 <free@plt>
   16ae8:	mov	x0, x21
   16aec:	cbnz	x21, 16ae0 <hash_delete@@Base+0x208>
   16af0:	str	xzr, [x20, #72]
   16af4:	mov	x0, x19
   16af8:	ldp	x20, x19, [sp, #48]
   16afc:	ldp	x22, x21, [sp, #32]
   16b00:	ldr	x23, [sp, #16]
   16b04:	ldp	x29, x30, [sp], #64
   16b08:	ret
   16b0c:	bl	a850 <abort@plt>
   16b10:	stp	x29, x30, [sp, #-64]!
   16b14:	stp	x24, x23, [sp, #16]
   16b18:	mov	x24, x0
   16b1c:	mov	w0, #0x40                  	// #64
   16b20:	stp	x22, x21, [sp, #32]
   16b24:	stp	x20, x19, [sp, #48]
   16b28:	mov	x29, sp
   16b2c:	mov	x20, x4
   16b30:	mov	x22, x3
   16b34:	mov	x21, x2
   16b38:	mov	x23, x1
   16b3c:	bl	a550 <malloc@plt>
   16b40:	mov	x19, x0
   16b44:	cbz	x0, 16b84 <hash_delete@@Base+0x2ac>
   16b48:	mov	w8, #0xb                   	// #11
   16b4c:	mov	w0, #0xb                   	// #11
   16b50:	mov	w1, #0x8                   	// #8
   16b54:	stp	x24, x23, [x19]
   16b58:	stp	x22, x20, [x19, #16]
   16b5c:	str	x21, [x19, #32]
   16b60:	str	x8, [x19, #48]
   16b64:	bl	a6c0 <calloc@plt>
   16b68:	str	x0, [x19, #40]
   16b6c:	cbz	x0, 16b78 <hash_delete@@Base+0x2a0>
   16b70:	str	xzr, [x19, #56]
   16b74:	b	16b84 <hash_delete@@Base+0x2ac>
   16b78:	mov	x0, x19
   16b7c:	bl	a970 <free@plt>
   16b80:	mov	x19, xzr
   16b84:	mov	x0, x19
   16b88:	ldp	x20, x19, [sp, #48]
   16b8c:	ldp	x22, x21, [sp, #32]
   16b90:	ldp	x24, x23, [sp, #16]
   16b94:	ldp	x29, x30, [sp], #64
   16b98:	ret
   16b9c:	ldr	x0, [x0, #56]
   16ba0:	ret
   16ba4:	stp	x29, x30, [sp, #-64]!
   16ba8:	stp	x22, x21, [sp, #32]
   16bac:	stp	x20, x19, [sp, #48]
   16bb0:	ldr	x8, [x0, #32]
   16bb4:	mov	x19, x2
   16bb8:	mov	x22, x0
   16bbc:	mov	x20, x1
   16bc0:	str	x23, [sp, #16]
   16bc4:	mov	x29, sp
   16bc8:	cbz	x8, 16bdc <hash_delete@@Base+0x304>
   16bcc:	mov	x0, x20
   16bd0:	blr	x8
   16bd4:	mov	x21, x0
   16bd8:	b	16be0 <hash_delete@@Base+0x308>
   16bdc:	mov	x21, x20
   16be0:	ldp	x9, x8, [x22, #40]
   16be4:	udiv	x10, x21, x8
   16be8:	msub	x8, x10, x8, x21
   16bec:	ldr	x23, [x9, x8, lsl #3]
   16bf0:	cbz	x23, 16c58 <hash_delete@@Base+0x380>
   16bf4:	ldr	x22, [x22, #8]
   16bf8:	cbnz	x22, 16c08 <hash_delete@@Base+0x330>
   16bfc:	b	16c30 <hash_delete@@Base+0x358>
   16c00:	ldr	x23, [x23]
   16c04:	cbz	x23, 16c58 <hash_delete@@Base+0x380>
   16c08:	ldr	x8, [x23, #8]
   16c0c:	cmp	x8, x21
   16c10:	b.ne	16c00 <hash_delete@@Base+0x328>  // b.any
   16c14:	ldr	x1, [x23, #16]
   16c18:	mov	x0, x20
   16c1c:	blr	x22
   16c20:	tbz	w0, #0, 16c00 <hash_delete@@Base+0x328>
   16c24:	b	16c48 <hash_delete@@Base+0x370>
   16c28:	ldr	x23, [x23]
   16c2c:	cbz	x23, 16c58 <hash_delete@@Base+0x380>
   16c30:	ldr	x8, [x23, #8]
   16c34:	cmp	x8, x21
   16c38:	b.ne	16c28 <hash_delete@@Base+0x350>  // b.any
   16c3c:	ldr	x8, [x23, #16]
   16c40:	cmp	x8, x20
   16c44:	b.ne	16c28 <hash_delete@@Base+0x350>  // b.any
   16c48:	ldr	x8, [x23, #24]
   16c4c:	mov	w0, #0x1                   	// #1
   16c50:	str	x8, [x19]
   16c54:	b	16c5c <hash_delete@@Base+0x384>
   16c58:	mov	w0, wzr
   16c5c:	ldp	x20, x19, [sp, #48]
   16c60:	ldp	x22, x21, [sp, #32]
   16c64:	ldr	x23, [sp, #16]
   16c68:	ldp	x29, x30, [sp], #64
   16c6c:	ret
   16c70:	stp	x29, x30, [sp, #-80]!
   16c74:	stp	x26, x25, [sp, #16]
   16c78:	stp	x24, x23, [sp, #32]
   16c7c:	stp	x22, x21, [sp, #48]
   16c80:	stp	x20, x19, [sp, #64]
   16c84:	ldr	x8, [x0, #32]
   16c88:	mov	x22, x3
   16c8c:	mov	x20, x2
   16c90:	mov	x19, x0
   16c94:	mov	x21, x1
   16c98:	mov	x29, sp
   16c9c:	cbz	x8, 16cb0 <hash_delete@@Base+0x3d8>
   16ca0:	mov	x0, x21
   16ca4:	blr	x8
   16ca8:	mov	x23, x0
   16cac:	b	16cb4 <hash_delete@@Base+0x3dc>
   16cb0:	mov	x23, x21
   16cb4:	ldp	x9, x8, [x19, #40]
   16cb8:	udiv	x10, x23, x8
   16cbc:	msub	x24, x10, x8, x23
   16cc0:	ldr	x25, [x9, x24, lsl #3]
   16cc4:	cbz	x25, 16d30 <hash_delete@@Base+0x458>
   16cc8:	ldr	x26, [x19, #8]
   16ccc:	cbnz	x26, 16cdc <hash_delete@@Base+0x404>
   16cd0:	b	16d04 <hash_delete@@Base+0x42c>
   16cd4:	ldr	x25, [x25]
   16cd8:	cbz	x25, 16d30 <hash_delete@@Base+0x458>
   16cdc:	ldr	x8, [x25, #8]
   16ce0:	cmp	x8, x23
   16ce4:	b.ne	16cd4 <hash_delete@@Base+0x3fc>  // b.any
   16ce8:	ldr	x1, [x25, #16]
   16cec:	mov	x0, x21
   16cf0:	blr	x26
   16cf4:	tbz	w0, #0, 16cd4 <hash_delete@@Base+0x3fc>
   16cf8:	b	16d1c <hash_delete@@Base+0x444>
   16cfc:	ldr	x25, [x25]
   16d00:	cbz	x25, 16d30 <hash_delete@@Base+0x458>
   16d04:	ldr	x8, [x25, #8]
   16d08:	cmp	x8, x23
   16d0c:	b.ne	16cfc <hash_delete@@Base+0x424>  // b.any
   16d10:	ldr	x8, [x25, #16]
   16d14:	cmp	x8, x21
   16d18:	b.ne	16cfc <hash_delete@@Base+0x424>  // b.any
   16d1c:	ldr	x8, [x25, #24]
   16d20:	mov	w0, wzr
   16d24:	str	x8, [x22]
   16d28:	str	x20, [x25, #24]
   16d2c:	b	16e14 <hash_delete@@Base+0x53c>
   16d30:	mov	w0, #0x20                  	// #32
   16d34:	bl	a550 <malloc@plt>
   16d38:	cbz	x0, 16e10 <hash_delete@@Base+0x538>
   16d3c:	stp	x21, x20, [x0, #16]
   16d40:	str	x23, [x0, #8]
   16d44:	ldr	x8, [x19, #40]
   16d48:	lsl	x9, x24, #3
   16d4c:	ldr	x10, [x8, x9]
   16d50:	str	x10, [x0]
   16d54:	str	x0, [x8, x9]
   16d58:	ldp	x22, x8, [x19, #48]
   16d5c:	add	x9, x8, #0x1
   16d60:	adds	x8, x9, x9, lsr #1
   16d64:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   16d68:	cmp	x8, x22
   16d6c:	str	x9, [x19, #56]
   16d70:	b.ls	16dd0 <hash_delete@@Base+0x4f8>  // b.plast
   16d74:	adrp	x10, 32000 <vasnprintf@@Base+0x1474>
   16d78:	mov	x9, xzr
   16d7c:	add	x10, x10, #0x6c8
   16d80:	ldr	x20, [x10, x9]
   16d84:	cmp	x20, x8
   16d88:	b.cs	16d9c <hash_delete@@Base+0x4c4>  // b.hs, b.nlast
   16d8c:	add	x9, x9, #0x8
   16d90:	cmp	x9, #0x740
   16d94:	b.ne	16d80 <hash_delete@@Base+0x4a8>  // b.any
   16d98:	mov	x20, #0xffffffffffffffff    	// #-1
   16d9c:	cmp	x20, x22
   16da0:	b.ls	16dd0 <hash_delete@@Base+0x4f8>  // b.plast
   16da4:	lsr	x8, x20, #61
   16da8:	cbnz	x8, 16dd0 <hash_delete@@Base+0x4f8>
   16dac:	ldr	x21, [x19, #40]
   16db0:	mov	w1, #0x8                   	// #8
   16db4:	mov	x0, x20
   16db8:	bl	a6c0 <calloc@plt>
   16dbc:	cbz	x0, 16dd0 <hash_delete@@Base+0x4f8>
   16dc0:	cbnz	x22, 16ddc <hash_delete@@Base+0x504>
   16dc4:	stp	x0, x20, [x19, #40]
   16dc8:	mov	x0, x21
   16dcc:	bl	a970 <free@plt>
   16dd0:	mov	w0, #0x1                   	// #1
   16dd4:	b	16e14 <hash_delete@@Base+0x53c>
   16dd8:	cbz	x22, 16dc4 <hash_delete@@Base+0x4ec>
   16ddc:	sub	x22, x22, #0x1
   16de0:	ldr	x8, [x21, x22, lsl #3]
   16de4:	cbz	x8, 16dd8 <hash_delete@@Base+0x500>
   16de8:	ldp	x11, x9, [x8]
   16dec:	udiv	x10, x9, x20
   16df0:	msub	x9, x10, x20, x9
   16df4:	lsl	x9, x9, #3
   16df8:	ldr	x10, [x0, x9]
   16dfc:	str	x10, [x8]
   16e00:	str	x8, [x0, x9]
   16e04:	mov	x8, x11
   16e08:	cbnz	x11, 16de8 <hash_delete@@Base+0x510>
   16e0c:	b	16dd8 <hash_delete@@Base+0x500>
   16e10:	mov	w0, #0xffffffff            	// #-1
   16e14:	ldp	x20, x19, [sp, #64]
   16e18:	ldp	x22, x21, [sp, #48]
   16e1c:	ldp	x24, x23, [sp, #32]
   16e20:	ldp	x26, x25, [sp, #16]
   16e24:	ldp	x29, x30, [sp], #80
   16e28:	ret
   16e2c:	stp	x29, x30, [sp, #-80]!
   16e30:	stp	x24, x23, [sp, #32]
   16e34:	stp	x22, x21, [sp, #48]
   16e38:	stp	x20, x19, [sp, #64]
   16e3c:	ldr	x8, [x0, #32]
   16e40:	mov	x20, x2
   16e44:	mov	x19, x0
   16e48:	mov	x22, x1
   16e4c:	str	x25, [sp, #16]
   16e50:	mov	x29, sp
   16e54:	cbz	x8, 16e68 <hash_delete@@Base+0x590>
   16e58:	mov	x0, x22
   16e5c:	blr	x8
   16e60:	mov	x23, x0
   16e64:	b	16e6c <hash_delete@@Base+0x594>
   16e68:	mov	x23, x22
   16e6c:	ldp	x9, x8, [x19, #40]
   16e70:	udiv	x10, x23, x8
   16e74:	msub	x8, x10, x8, x23
   16e78:	add	x24, x9, x8, lsl #3
   16e7c:	ldr	x21, [x24]
   16e80:	cbz	x21, 16f20 <hash_delete@@Base+0x648>
   16e84:	ldr	x25, [x19, #8]
   16e88:	cbnz	x25, 16e9c <hash_delete@@Base+0x5c4>
   16e8c:	b	16ecc <hash_delete@@Base+0x5f4>
   16e90:	mov	x24, x21
   16e94:	ldr	x21, [x21]
   16e98:	cbz	x21, 16f20 <hash_delete@@Base+0x648>
   16e9c:	ldr	x8, [x21, #8]
   16ea0:	cmp	x8, x23
   16ea4:	b.ne	16e90 <hash_delete@@Base+0x5b8>  // b.any
   16ea8:	ldr	x1, [x21, #16]
   16eac:	mov	x0, x22
   16eb0:	blr	x25
   16eb4:	tbnz	w0, #0, 16ee4 <hash_delete@@Base+0x60c>
   16eb8:	ldr	x21, [x24]
   16ebc:	b	16e90 <hash_delete@@Base+0x5b8>
   16ec0:	mov	x24, x21
   16ec4:	ldr	x21, [x21]
   16ec8:	cbz	x21, 16f20 <hash_delete@@Base+0x648>
   16ecc:	ldr	x8, [x21, #8]
   16ed0:	cmp	x8, x23
   16ed4:	b.ne	16ec0 <hash_delete@@Base+0x5e8>  // b.any
   16ed8:	ldr	x8, [x21, #16]
   16edc:	cmp	x8, x22
   16ee0:	b.ne	16ec0 <hash_delete@@Base+0x5e8>  // b.any
   16ee4:	ldr	x8, [x21, #24]
   16ee8:	str	x8, [x20]
   16eec:	ldr	x8, [x21]
   16ef0:	str	x8, [x24]
   16ef4:	ldr	x9, [x19, #56]
   16ef8:	ldr	x8, [x19, #16]
   16efc:	sub	x9, x9, #0x1
   16f00:	str	x9, [x19, #56]
   16f04:	cbz	x8, 16f10 <hash_delete@@Base+0x638>
   16f08:	ldr	x0, [x21, #16]
   16f0c:	blr	x8
   16f10:	mov	x0, x21
   16f14:	bl	a970 <free@plt>
   16f18:	mov	w0, #0x1                   	// #1
   16f1c:	b	16f24 <hash_delete@@Base+0x64c>
   16f20:	mov	w0, wzr
   16f24:	ldp	x20, x19, [sp, #64]
   16f28:	ldp	x22, x21, [sp, #48]
   16f2c:	ldp	x24, x23, [sp, #32]
   16f30:	ldr	x25, [sp, #16]
   16f34:	ldp	x29, x30, [sp], #80
   16f38:	ret
   16f3c:	stp	x29, x30, [sp, #-80]!
   16f40:	stp	x24, x23, [sp, #32]
   16f44:	stp	x22, x21, [sp, #48]
   16f48:	stp	x20, x19, [sp, #64]
   16f4c:	ldr	x8, [x0, #56]
   16f50:	mov	x19, x0
   16f54:	str	x25, [sp, #16]
   16f58:	mov	x29, sp
   16f5c:	cbz	x8, 17004 <hash_delete@@Base+0x72c>
   16f60:	ldr	x21, [x19, #48]
   16f64:	cbz	x21, 17004 <hash_delete@@Base+0x72c>
   16f68:	ldp	x22, x24, [x19, #16]
   16f6c:	ldr	x23, [x19, #40]
   16f70:	cbnz	x24, 16f7c <hash_delete@@Base+0x6a4>
   16f74:	b	16fbc <hash_delete@@Base+0x6e4>
   16f78:	cbz	x21, 17004 <hash_delete@@Base+0x72c>
   16f7c:	sub	x21, x21, #0x1
   16f80:	ldr	x20, [x23, x21, lsl #3]
   16f84:	cbnz	x20, 16f9c <hash_delete@@Base+0x6c4>
   16f88:	b	16f78 <hash_delete@@Base+0x6a0>
   16f8c:	mov	x0, x20
   16f90:	bl	a970 <free@plt>
   16f94:	mov	x20, x25
   16f98:	cbz	x25, 16f78 <hash_delete@@Base+0x6a0>
   16f9c:	ldr	x0, [x20, #24]
   16fa0:	ldr	x25, [x20]
   16fa4:	blr	x24
   16fa8:	cbz	x22, 16f8c <hash_delete@@Base+0x6b4>
   16fac:	ldr	x0, [x20, #16]
   16fb0:	blr	x22
   16fb4:	b	16f8c <hash_delete@@Base+0x6b4>
   16fb8:	cbz	x21, 17004 <hash_delete@@Base+0x72c>
   16fbc:	sub	x21, x21, #0x1
   16fc0:	ldr	x20, [x23, x21, lsl #3]
   16fc4:	cbz	x20, 16fb8 <hash_delete@@Base+0x6e0>
   16fc8:	cbz	x22, 16fec <hash_delete@@Base+0x714>
   16fcc:	ldr	x0, [x20, #16]
   16fd0:	ldr	x24, [x20]
   16fd4:	blr	x22
   16fd8:	mov	x0, x20
   16fdc:	bl	a970 <free@plt>
   16fe0:	mov	x20, x24
   16fe4:	cbnz	x24, 16fcc <hash_delete@@Base+0x6f4>
   16fe8:	b	16fb8 <hash_delete@@Base+0x6e0>
   16fec:	ldr	x24, [x20]
   16ff0:	mov	x0, x20
   16ff4:	bl	a970 <free@plt>
   16ff8:	mov	x20, x24
   16ffc:	cbnz	x24, 16fec <hash_delete@@Base+0x714>
   17000:	b	16fb8 <hash_delete@@Base+0x6e0>
   17004:	ldr	x0, [x19, #40]
   17008:	bl	a970 <free@plt>
   1700c:	mov	x0, x19
   17010:	ldp	x20, x19, [sp, #64]
   17014:	ldp	x22, x21, [sp, #48]
   17018:	ldp	x24, x23, [sp, #32]
   1701c:	ldr	x25, [sp, #16]
   17020:	ldp	x29, x30, [sp], #80
   17024:	b	a970 <free@plt>
   17028:	ldr	x9, [x0]
   1702c:	str	xzr, [x8, #24]
   17030:	stp	x9, x0, [x8]
   17034:	ldr	x9, [x0, #48]
   17038:	stp	xzr, x9, [x8, #40]
   1703c:	ret
   17040:	ldr	x8, [x0, #24]
   17044:	cbz	x8, 17068 <hash_delete@@Base+0x790>
   17048:	ldr	x9, [x8, #16]
   1704c:	str	x9, [x1]
   17050:	ldr	x9, [x8, #24]
   17054:	str	x9, [x2]
   17058:	ldr	x8, [x8]
   1705c:	str	x8, [x0, #24]
   17060:	mov	w0, #0x1                   	// #1
   17064:	ret
   17068:	ldp	x8, x9, [x0, #40]
   1706c:	cmp	x8, x9
   17070:	b.cs	17090 <hash_delete@@Base+0x7b8>  // b.hs, b.nlast
   17074:	ldr	x10, [x0, #8]
   17078:	ldr	x10, [x10, #40]
   1707c:	ldr	x11, [x10, x8, lsl #3]
   17080:	add	x8, x8, #0x1
   17084:	cbnz	x11, 1709c <hash_delete@@Base+0x7c4>
   17088:	cmp	x9, x8
   1708c:	b.ne	1707c <hash_delete@@Base+0x7a4>  // b.any
   17090:	str	x9, [x0, #40]
   17094:	mov	w0, wzr
   17098:	ret
   1709c:	ldr	x9, [x11, #16]
   170a0:	str	x9, [x1]
   170a4:	ldr	x9, [x11, #24]
   170a8:	str	x9, [x2]
   170ac:	ldr	x9, [x11]
   170b0:	str	x8, [x0, #40]
   170b4:	str	x9, [x0, #24]
   170b8:	mov	w0, #0x1                   	// #1
   170bc:	ret
   170c0:	ret

00000000000170c4 <hash_pjw@@Base>:
   170c4:	ldrb	w9, [x0]
   170c8:	cbz	w9, 170f0 <hash_pjw@@Base+0x2c>
   170cc:	mov	x8, xzr
   170d0:	add	x10, x0, #0x1
   170d4:	ror	x8, x8, #55
   170d8:	add	x8, x8, w9, uxtb
   170dc:	ldrb	w9, [x10], #1
   170e0:	cbnz	w9, 170d4 <hash_pjw@@Base+0x10>
   170e4:	udiv	x9, x8, x1
   170e8:	msub	x0, x9, x1, x8
   170ec:	ret
   170f0:	mov	x8, xzr
   170f4:	udiv	x9, x8, x1
   170f8:	msub	x0, x9, x1, x8
   170fc:	ret

0000000000017100 <hash_pjw_bare@@Base>:
   17100:	cbz	x1, 17134 <hash_pjw_bare@@Base+0x34>
   17104:	mov	x10, xzr
   17108:	mov	x8, xzr
   1710c:	mov	w9, #0x1                   	// #1
   17110:	ldrb	w11, [x0, x10]
   17114:	ror	x8, x8, #55
   17118:	mov	w10, w9
   1711c:	cmp	x10, x1
   17120:	add	x8, x8, x11
   17124:	add	w9, w9, #0x1
   17128:	b.cc	17110 <hash_pjw_bare@@Base+0x10>  // b.lo, b.ul, b.last
   1712c:	mov	x0, x8
   17130:	ret
   17134:	mov	x0, xzr
   17138:	ret
   1713c:	stp	x29, x30, [sp, #-64]!
   17140:	str	x23, [sp, #16]
   17144:	mov	x23, x0
   17148:	mov	w0, #0x38                  	// #56
   1714c:	stp	x22, x21, [sp, #32]
   17150:	stp	x20, x19, [sp, #48]
   17154:	mov	x29, sp
   17158:	mov	x21, x3
   1715c:	mov	x20, x2
   17160:	mov	x22, x1
   17164:	bl	a550 <malloc@plt>
   17168:	mov	x19, x0
   1716c:	cbz	x0, 171a8 <hash_pjw_bare@@Base+0xa8>
   17170:	mov	w8, #0xb                   	// #11
   17174:	mov	w0, #0xb                   	// #11
   17178:	mov	w1, #0x8                   	// #8
   1717c:	stp	x23, x22, [x19]
   17180:	stp	x21, x20, [x19, #16]
   17184:	str	x8, [x19, #40]
   17188:	bl	a6c0 <calloc@plt>
   1718c:	str	x0, [x19, #32]
   17190:	cbz	x0, 1719c <hash_pjw_bare@@Base+0x9c>
   17194:	str	xzr, [x19, #48]
   17198:	b	171a8 <hash_pjw_bare@@Base+0xa8>
   1719c:	mov	x0, x19
   171a0:	bl	a970 <free@plt>
   171a4:	mov	x19, xzr
   171a8:	mov	x0, x19
   171ac:	ldp	x20, x19, [sp, #48]
   171b0:	ldp	x22, x21, [sp, #32]
   171b4:	ldr	x23, [sp, #16]
   171b8:	ldp	x29, x30, [sp], #64
   171bc:	ret
   171c0:	ldr	x0, [x0, #48]
   171c4:	ret
   171c8:	stp	x29, x30, [sp, #-48]!
   171cc:	stp	x22, x21, [sp, #16]
   171d0:	stp	x20, x19, [sp, #32]
   171d4:	ldr	x8, [x0, #24]
   171d8:	mov	x21, x0
   171dc:	mov	x19, x1
   171e0:	mov	x29, sp
   171e4:	cbz	x8, 171f8 <hash_pjw_bare@@Base+0xf8>
   171e8:	mov	x0, x19
   171ec:	blr	x8
   171f0:	mov	x20, x0
   171f4:	b	171fc <hash_pjw_bare@@Base+0xfc>
   171f8:	mov	x20, x19
   171fc:	ldp	x9, x8, [x21, #32]
   17200:	udiv	x10, x20, x8
   17204:	msub	x8, x10, x8, x20
   17208:	ldr	x22, [x9, x8, lsl #3]
   1720c:	cbz	x22, 17278 <hash_pjw_bare@@Base+0x178>
   17210:	ldr	x21, [x21, #8]
   17214:	cbnz	x21, 17224 <hash_pjw_bare@@Base+0x124>
   17218:	b	1724c <hash_pjw_bare@@Base+0x14c>
   1721c:	ldr	x22, [x22]
   17220:	cbz	x22, 17278 <hash_pjw_bare@@Base+0x178>
   17224:	ldr	x8, [x22, #8]
   17228:	cmp	x8, x20
   1722c:	b.ne	1721c <hash_pjw_bare@@Base+0x11c>  // b.any
   17230:	ldr	x1, [x22, #16]
   17234:	mov	x0, x19
   17238:	blr	x21
   1723c:	tbz	w0, #0, 1721c <hash_pjw_bare@@Base+0x11c>
   17240:	b	17264 <hash_pjw_bare@@Base+0x164>
   17244:	ldr	x22, [x22]
   17248:	cbz	x22, 17278 <hash_pjw_bare@@Base+0x178>
   1724c:	ldr	x8, [x22, #8]
   17250:	cmp	x8, x20
   17254:	b.ne	17244 <hash_pjw_bare@@Base+0x144>  // b.any
   17258:	ldr	x8, [x22, #16]
   1725c:	cmp	x8, x19
   17260:	b.ne	17244 <hash_pjw_bare@@Base+0x144>  // b.any
   17264:	mov	w0, #0x1                   	// #1
   17268:	ldp	x20, x19, [sp, #32]
   1726c:	ldp	x22, x21, [sp, #16]
   17270:	ldp	x29, x30, [sp], #48
   17274:	ret
   17278:	mov	w0, wzr
   1727c:	ldp	x20, x19, [sp, #32]
   17280:	ldp	x22, x21, [sp, #16]
   17284:	ldp	x29, x30, [sp], #48
   17288:	ret
   1728c:	stp	x29, x30, [sp, #-64]!
   17290:	stp	x24, x23, [sp, #16]
   17294:	stp	x22, x21, [sp, #32]
   17298:	stp	x20, x19, [sp, #48]
   1729c:	ldr	x8, [x0, #24]
   172a0:	mov	x19, x0
   172a4:	mov	x20, x1
   172a8:	mov	x29, sp
   172ac:	cbz	x8, 172c0 <hash_pjw_bare@@Base+0x1c0>
   172b0:	mov	x0, x20
   172b4:	blr	x8
   172b8:	mov	x21, x0
   172bc:	b	172c4 <hash_pjw_bare@@Base+0x1c4>
   172c0:	mov	x21, x20
   172c4:	ldp	x9, x8, [x19, #32]
   172c8:	udiv	x10, x21, x8
   172cc:	msub	x22, x10, x8, x21
   172d0:	ldr	x23, [x9, x22, lsl #3]
   172d4:	cbz	x23, 17334 <hash_pjw_bare@@Base+0x234>
   172d8:	ldr	x24, [x19, #8]
   172dc:	cbnz	x24, 172ec <hash_pjw_bare@@Base+0x1ec>
   172e0:	b	17314 <hash_pjw_bare@@Base+0x214>
   172e4:	ldr	x23, [x23]
   172e8:	cbz	x23, 17334 <hash_pjw_bare@@Base+0x234>
   172ec:	ldr	x8, [x23, #8]
   172f0:	cmp	x8, x21
   172f4:	b.ne	172e4 <hash_pjw_bare@@Base+0x1e4>  // b.any
   172f8:	ldr	x1, [x23, #16]
   172fc:	mov	x0, x20
   17300:	blr	x24
   17304:	tbz	w0, #0, 172e4 <hash_pjw_bare@@Base+0x1e4>
   17308:	b	1732c <hash_pjw_bare@@Base+0x22c>
   1730c:	ldr	x23, [x23]
   17310:	cbz	x23, 17334 <hash_pjw_bare@@Base+0x234>
   17314:	ldr	x8, [x23, #8]
   17318:	cmp	x8, x21
   1731c:	b.ne	1730c <hash_pjw_bare@@Base+0x20c>  // b.any
   17320:	ldr	x8, [x23, #16]
   17324:	cmp	x8, x20
   17328:	b.ne	1730c <hash_pjw_bare@@Base+0x20c>  // b.any
   1732c:	mov	w0, wzr
   17330:	b	17414 <hash_pjw_bare@@Base+0x314>
   17334:	mov	w0, #0x18                  	// #24
   17338:	bl	a550 <malloc@plt>
   1733c:	cbz	x0, 17410 <hash_pjw_bare@@Base+0x310>
   17340:	stp	x21, x20, [x0, #8]
   17344:	ldr	x8, [x19, #32]
   17348:	lsl	x9, x22, #3
   1734c:	ldr	x10, [x8, x9]
   17350:	str	x10, [x0]
   17354:	str	x0, [x8, x9]
   17358:	ldp	x22, x8, [x19, #40]
   1735c:	add	x9, x8, #0x1
   17360:	adds	x8, x9, x9, lsr #1
   17364:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   17368:	cmp	x8, x22
   1736c:	str	x9, [x19, #48]
   17370:	b.ls	173d0 <hash_pjw_bare@@Base+0x2d0>  // b.plast
   17374:	adrp	x10, 32000 <vasnprintf@@Base+0x1474>
   17378:	mov	x9, xzr
   1737c:	add	x10, x10, #0xe08
   17380:	ldr	x20, [x10, x9]
   17384:	cmp	x20, x8
   17388:	b.cs	1739c <hash_pjw_bare@@Base+0x29c>  // b.hs, b.nlast
   1738c:	add	x9, x9, #0x8
   17390:	cmp	x9, #0x740
   17394:	b.ne	17380 <hash_pjw_bare@@Base+0x280>  // b.any
   17398:	mov	x20, #0xffffffffffffffff    	// #-1
   1739c:	cmp	x20, x22
   173a0:	b.ls	173d0 <hash_pjw_bare@@Base+0x2d0>  // b.plast
   173a4:	lsr	x8, x20, #61
   173a8:	cbnz	x8, 173d0 <hash_pjw_bare@@Base+0x2d0>
   173ac:	ldr	x21, [x19, #32]
   173b0:	mov	w1, #0x8                   	// #8
   173b4:	mov	x0, x20
   173b8:	bl	a6c0 <calloc@plt>
   173bc:	cbz	x0, 173d0 <hash_pjw_bare@@Base+0x2d0>
   173c0:	cbnz	x22, 173dc <hash_pjw_bare@@Base+0x2dc>
   173c4:	stp	x0, x20, [x19, #32]
   173c8:	mov	x0, x21
   173cc:	bl	a970 <free@plt>
   173d0:	mov	w0, #0x1                   	// #1
   173d4:	b	17414 <hash_pjw_bare@@Base+0x314>
   173d8:	cbz	x22, 173c4 <hash_pjw_bare@@Base+0x2c4>
   173dc:	sub	x22, x22, #0x1
   173e0:	ldr	x8, [x21, x22, lsl #3]
   173e4:	cbz	x8, 173d8 <hash_pjw_bare@@Base+0x2d8>
   173e8:	ldp	x11, x9, [x8]
   173ec:	udiv	x10, x9, x20
   173f0:	msub	x9, x10, x20, x9
   173f4:	lsl	x9, x9, #3
   173f8:	ldr	x10, [x0, x9]
   173fc:	str	x10, [x8]
   17400:	str	x8, [x0, x9]
   17404:	mov	x8, x11
   17408:	cbnz	x11, 173e8 <hash_pjw_bare@@Base+0x2e8>
   1740c:	b	173d8 <hash_pjw_bare@@Base+0x2d8>
   17410:	mov	w0, #0xffffffff            	// #-1
   17414:	ldp	x20, x19, [sp, #48]
   17418:	ldp	x22, x21, [sp, #32]
   1741c:	ldp	x24, x23, [sp, #16]
   17420:	ldp	x29, x30, [sp], #64
   17424:	ret
   17428:	stp	x29, x30, [sp, #-64]!
   1742c:	stp	x24, x23, [sp, #16]
   17430:	stp	x22, x21, [sp, #32]
   17434:	stp	x20, x19, [sp, #48]
   17438:	ldr	x8, [x0, #24]
   1743c:	mov	x19, x0
   17440:	mov	x21, x1
   17444:	mov	x29, sp
   17448:	cbz	x8, 1745c <hash_pjw_bare@@Base+0x35c>
   1744c:	mov	x0, x21
   17450:	blr	x8
   17454:	mov	x22, x0
   17458:	b	17460 <hash_pjw_bare@@Base+0x360>
   1745c:	mov	x22, x21
   17460:	ldp	x9, x8, [x19, #32]
   17464:	udiv	x10, x22, x8
   17468:	msub	x8, x10, x8, x22
   1746c:	add	x23, x9, x8, lsl #3
   17470:	ldr	x20, [x23]
   17474:	cbz	x20, 1750c <hash_pjw_bare@@Base+0x40c>
   17478:	ldr	x24, [x19, #8]
   1747c:	cbnz	x24, 17490 <hash_pjw_bare@@Base+0x390>
   17480:	b	174c0 <hash_pjw_bare@@Base+0x3c0>
   17484:	mov	x23, x20
   17488:	ldr	x20, [x20]
   1748c:	cbz	x20, 1750c <hash_pjw_bare@@Base+0x40c>
   17490:	ldr	x8, [x20, #8]
   17494:	cmp	x8, x22
   17498:	b.ne	17484 <hash_pjw_bare@@Base+0x384>  // b.any
   1749c:	ldr	x1, [x20, #16]
   174a0:	mov	x0, x21
   174a4:	blr	x24
   174a8:	tbnz	w0, #0, 174d8 <hash_pjw_bare@@Base+0x3d8>
   174ac:	ldr	x20, [x23]
   174b0:	b	17484 <hash_pjw_bare@@Base+0x384>
   174b4:	mov	x23, x20
   174b8:	ldr	x20, [x20]
   174bc:	cbz	x20, 1750c <hash_pjw_bare@@Base+0x40c>
   174c0:	ldr	x8, [x20, #8]
   174c4:	cmp	x8, x22
   174c8:	b.ne	174b4 <hash_pjw_bare@@Base+0x3b4>  // b.any
   174cc:	ldr	x8, [x20, #16]
   174d0:	cmp	x8, x21
   174d4:	b.ne	174b4 <hash_pjw_bare@@Base+0x3b4>  // b.any
   174d8:	ldr	x8, [x20]
   174dc:	str	x8, [x23]
   174e0:	ldr	x9, [x19, #48]
   174e4:	ldr	x8, [x19, #16]
   174e8:	sub	x9, x9, #0x1
   174ec:	str	x9, [x19, #48]
   174f0:	cbz	x8, 174fc <hash_pjw_bare@@Base+0x3fc>
   174f4:	ldr	x0, [x20, #16]
   174f8:	blr	x8
   174fc:	mov	x0, x20
   17500:	bl	a970 <free@plt>
   17504:	mov	w0, #0x1                   	// #1
   17508:	b	17510 <hash_pjw_bare@@Base+0x410>
   1750c:	mov	w0, wzr
   17510:	ldp	x20, x19, [sp, #48]
   17514:	ldp	x22, x21, [sp, #32]
   17518:	ldp	x24, x23, [sp, #16]
   1751c:	ldp	x29, x30, [sp], #64
   17520:	ret
   17524:	stp	x29, x30, [sp, #-64]!
   17528:	stp	x24, x23, [sp, #16]
   1752c:	stp	x22, x21, [sp, #32]
   17530:	stp	x20, x19, [sp, #48]
   17534:	ldr	x8, [x0, #48]
   17538:	mov	x19, x0
   1753c:	mov	x29, sp
   17540:	cbz	x8, 175b0 <hash_pjw_bare@@Base+0x4b0>
   17544:	ldr	x21, [x19, #40]
   17548:	cbz	x21, 175b0 <hash_pjw_bare@@Base+0x4b0>
   1754c:	ldr	x23, [x19, #16]
   17550:	ldr	x22, [x19, #32]
   17554:	cbnz	x23, 17560 <hash_pjw_bare@@Base+0x460>
   17558:	b	17590 <hash_pjw_bare@@Base+0x490>
   1755c:	cbz	x21, 175b0 <hash_pjw_bare@@Base+0x4b0>
   17560:	sub	x21, x21, #0x1
   17564:	ldr	x20, [x22, x21, lsl #3]
   17568:	cbz	x20, 1755c <hash_pjw_bare@@Base+0x45c>
   1756c:	ldr	x0, [x20, #16]
   17570:	ldr	x24, [x20]
   17574:	blr	x23
   17578:	mov	x0, x20
   1757c:	bl	a970 <free@plt>
   17580:	mov	x20, x24
   17584:	cbnz	x24, 1756c <hash_pjw_bare@@Base+0x46c>
   17588:	b	1755c <hash_pjw_bare@@Base+0x45c>
   1758c:	cbz	x21, 175b0 <hash_pjw_bare@@Base+0x4b0>
   17590:	sub	x21, x21, #0x1
   17594:	ldr	x0, [x22, x21, lsl #3]
   17598:	cbz	x0, 1758c <hash_pjw_bare@@Base+0x48c>
   1759c:	ldr	x20, [x0]
   175a0:	bl	a970 <free@plt>
   175a4:	mov	x0, x20
   175a8:	cbnz	x20, 1759c <hash_pjw_bare@@Base+0x49c>
   175ac:	b	1758c <hash_pjw_bare@@Base+0x48c>
   175b0:	ldr	x0, [x19, #32]
   175b4:	bl	a970 <free@plt>
   175b8:	mov	x0, x19
   175bc:	ldp	x20, x19, [sp, #48]
   175c0:	ldp	x22, x21, [sp, #32]
   175c4:	ldp	x24, x23, [sp, #16]
   175c8:	ldp	x29, x30, [sp], #64
   175cc:	b	a970 <free@plt>
   175d0:	ldr	x9, [x0]
   175d4:	str	xzr, [x8, #24]
   175d8:	stp	x9, x0, [x8]
   175dc:	ldr	x9, [x0, #40]
   175e0:	stp	xzr, x9, [x8, #40]
   175e4:	ret
   175e8:	ldr	x8, [x0, #24]
   175ec:	cbz	x8, 17608 <hash_pjw_bare@@Base+0x508>
   175f0:	ldr	x9, [x8, #16]
   175f4:	str	x9, [x1]
   175f8:	ldr	x8, [x8]
   175fc:	str	x8, [x0, #24]
   17600:	mov	w0, #0x1                   	// #1
   17604:	ret
   17608:	ldp	x8, x9, [x0, #40]
   1760c:	cmp	x8, x9
   17610:	b.cs	17630 <hash_pjw_bare@@Base+0x530>  // b.hs, b.nlast
   17614:	ldr	x10, [x0, #8]
   17618:	ldr	x10, [x10, #32]
   1761c:	ldr	x11, [x10, x8, lsl #3]
   17620:	add	x8, x8, #0x1
   17624:	cbnz	x11, 1763c <hash_pjw_bare@@Base+0x53c>
   17628:	cmp	x9, x8
   1762c:	b.ne	1761c <hash_pjw_bare@@Base+0x51c>  // b.any
   17630:	str	x9, [x0, #40]
   17634:	mov	w0, wzr
   17638:	ret
   1763c:	ldr	x9, [x11, #16]
   17640:	str	x9, [x1]
   17644:	ldr	x9, [x11]
   17648:	str	x8, [x0, #40]
   1764c:	str	x9, [x0, #24]
   17650:	mov	w0, #0x1                   	// #1
   17654:	ret
   17658:	ret

000000000001765c <triple_hash@@Base>:
   1765c:	stp	x29, x30, [sp, #-32]!
   17660:	stp	x20, x19, [sp, #16]
   17664:	mov	x19, x0
   17668:	ldr	x0, [x0]
   1766c:	mov	x29, sp
   17670:	mov	x20, x1
   17674:	bl	ab40 <hash_pjw@plt>
   17678:	ldr	x8, [x19, #8]
   1767c:	eor	x8, x8, x0
   17680:	udiv	x9, x8, x20
   17684:	msub	x0, x9, x20, x8
   17688:	ldp	x20, x19, [sp, #16]
   1768c:	ldp	x29, x30, [sp], #32
   17690:	ret

0000000000017694 <triple_hash_no_name@@Base>:
   17694:	ldr	x8, [x0, #8]
   17698:	udiv	x9, x8, x1
   1769c:	msub	x0, x9, x1, x8
   176a0:	ret

00000000000176a4 <triple_compare@@Base>:
   176a4:	ldr	x8, [x0, #8]
   176a8:	ldr	x9, [x1, #8]
   176ac:	cmp	x8, x9
   176b0:	b.ne	176d0 <triple_compare@@Base+0x2c>  // b.any
   176b4:	ldr	x8, [x0, #16]
   176b8:	ldr	x9, [x1, #16]
   176bc:	cmp	x8, x9
   176c0:	b.ne	176d0 <triple_compare@@Base+0x2c>  // b.any
   176c4:	ldr	x0, [x0]
   176c8:	ldr	x1, [x1]
   176cc:	b	a6a0 <same_name@plt>
   176d0:	mov	w0, wzr
   176d4:	ret

00000000000176d8 <triple_compare_ino_str@@Base>:
   176d8:	stp	x29, x30, [sp, #-16]!
   176dc:	ldr	x8, [x0, #8]
   176e0:	ldr	x9, [x1, #8]
   176e4:	mov	x29, sp
   176e8:	cmp	x8, x9
   176ec:	b.ne	1771c <triple_compare_ino_str@@Base+0x44>  // b.any
   176f0:	ldr	x8, [x0, #16]
   176f4:	ldr	x9, [x1, #16]
   176f8:	cmp	x8, x9
   176fc:	b.ne	1771c <triple_compare_ino_str@@Base+0x44>  // b.any
   17700:	ldr	x0, [x0]
   17704:	ldr	x1, [x1]
   17708:	bl	a8f0 <strcmp@plt>
   1770c:	cmp	w0, #0x0
   17710:	cset	w0, eq  // eq = none
   17714:	ldp	x29, x30, [sp], #16
   17718:	ret
   1771c:	mov	w0, wzr
   17720:	ldp	x29, x30, [sp], #16
   17724:	ret

0000000000017728 <triple_free@@Base>:
   17728:	stp	x29, x30, [sp, #-32]!
   1772c:	str	x19, [sp, #16]
   17730:	mov	x19, x0
   17734:	ldr	x0, [x0]
   17738:	mov	x29, sp
   1773c:	bl	a970 <free@plt>
   17740:	mov	x0, x19
   17744:	ldr	x19, [sp, #16]
   17748:	ldp	x29, x30, [sp], #32
   1774c:	b	a970 <free@plt>

0000000000017750 <idpriv_drop@@Base>:
   17750:	sub	sp, sp, #0x30
   17754:	stp	x29, x30, [sp, #16]
   17758:	stp	x20, x19, [sp, #32]
   1775c:	add	x29, sp, #0x10
   17760:	bl	a400 <getuid@plt>
   17764:	mov	w20, w0
   17768:	bl	a9b0 <getgid@plt>
   1776c:	mov	w1, w0
   17770:	mov	w2, w0
   17774:	mov	w19, w0
   17778:	bl	ada0 <setresgid@plt>
   1777c:	tbnz	w0, #31, 17818 <idpriv_drop@@Base+0xc8>
   17780:	mov	w0, w20
   17784:	mov	w1, w20
   17788:	mov	w2, w20
   1778c:	bl	ac00 <setresuid@plt>
   17790:	tbnz	w0, #31, 17818 <idpriv_drop@@Base+0xc8>
   17794:	sub	x0, x29, #0x4
   17798:	add	x1, sp, #0x8
   1779c:	add	x2, sp, #0x4
   177a0:	bl	a380 <getresuid@plt>
   177a4:	tbnz	w0, #31, 1782c <idpriv_drop@@Base+0xdc>
   177a8:	ldur	w8, [x29, #-4]
   177ac:	cmp	w8, w20
   177b0:	b.ne	1782c <idpriv_drop@@Base+0xdc>  // b.any
   177b4:	ldr	w8, [sp, #8]
   177b8:	cmp	w8, w20
   177bc:	b.ne	1782c <idpriv_drop@@Base+0xdc>  // b.any
   177c0:	ldr	w8, [sp, #4]
   177c4:	cmp	w8, w20
   177c8:	b.ne	1782c <idpriv_drop@@Base+0xdc>  // b.any
   177cc:	sub	x0, x29, #0x4
   177d0:	add	x1, sp, #0x8
   177d4:	add	x2, sp, #0x4
   177d8:	bl	abb0 <getresgid@plt>
   177dc:	tbnz	w0, #31, 1782c <idpriv_drop@@Base+0xdc>
   177e0:	ldur	w8, [x29, #-4]
   177e4:	cmp	w8, w19
   177e8:	b.ne	1782c <idpriv_drop@@Base+0xdc>  // b.any
   177ec:	ldr	w8, [sp, #8]
   177f0:	cmp	w8, w19
   177f4:	b.ne	1782c <idpriv_drop@@Base+0xdc>  // b.any
   177f8:	ldr	w8, [sp, #4]
   177fc:	cmp	w8, w19
   17800:	b.ne	1782c <idpriv_drop@@Base+0xdc>  // b.any
   17804:	mov	w0, wzr
   17808:	ldp	x20, x19, [sp, #32]
   1780c:	ldp	x29, x30, [sp, #16]
   17810:	add	sp, sp, #0x30
   17814:	ret
   17818:	mov	w0, #0xffffffff            	// #-1
   1781c:	ldp	x20, x19, [sp, #32]
   17820:	ldp	x29, x30, [sp, #16]
   17824:	add	sp, sp, #0x30
   17828:	ret
   1782c:	bl	a850 <abort@plt>

0000000000017830 <idpriv_temp_drop@@Base>:
   17830:	sub	sp, sp, #0x50
   17834:	stp	x29, x30, [sp, #16]
   17838:	str	x23, [sp, #32]
   1783c:	stp	x22, x21, [sp, #48]
   17840:	stp	x20, x19, [sp, #64]
   17844:	add	x29, sp, #0x10
   17848:	bl	a400 <getuid@plt>
   1784c:	mov	w20, w0
   17850:	bl	a9b0 <getgid@plt>
   17854:	adrp	x23, 46000 <base_len@@Base+0x30a14>
   17858:	ldr	w8, [x23, #1708]
   1785c:	mov	w19, w0
   17860:	cmn	w8, #0x1
   17864:	b.eq	1793c <idpriv_temp_drop@@Base+0x10c>  // b.none
   17868:	adrp	x22, 46000 <base_len@@Base+0x30a14>
   1786c:	ldr	w2, [x22, #1712]
   17870:	cmn	w2, #0x1
   17874:	b.eq	17954 <idpriv_temp_drop@@Base+0x124>  // b.none
   17878:	mov	w0, #0xffffffff            	// #-1
   1787c:	mov	w1, w19
   17880:	mov	w21, #0xffffffff            	// #-1
   17884:	bl	ada0 <setresgid@plt>
   17888:	tbnz	w0, #31, 17920 <idpriv_temp_drop@@Base+0xf0>
   1788c:	ldr	w2, [x23, #1708]
   17890:	mov	w0, #0xffffffff            	// #-1
   17894:	mov	w1, w20
   17898:	mov	w21, #0xffffffff            	// #-1
   1789c:	bl	ac00 <setresuid@plt>
   178a0:	tbnz	w0, #31, 17920 <idpriv_temp_drop@@Base+0xf0>
   178a4:	add	x0, x29, #0x1c
   178a8:	add	x1, x29, #0x18
   178ac:	sub	x2, x29, #0x4
   178b0:	bl	a380 <getresuid@plt>
   178b4:	tbnz	w0, #31, 17964 <idpriv_temp_drop@@Base+0x134>
   178b8:	ldr	w8, [x29, #28]
   178bc:	cmp	w8, w20
   178c0:	b.ne	17964 <idpriv_temp_drop@@Base+0x134>  // b.any
   178c4:	ldr	w8, [x29, #24]
   178c8:	cmp	w8, w20
   178cc:	b.ne	17964 <idpriv_temp_drop@@Base+0x134>  // b.any
   178d0:	ldur	w8, [x29, #-4]
   178d4:	ldr	w9, [x23, #1708]
   178d8:	cmp	w8, w9
   178dc:	b.ne	17964 <idpriv_temp_drop@@Base+0x134>  // b.any
   178e0:	add	x0, x29, #0x1c
   178e4:	add	x1, x29, #0x18
   178e8:	sub	x2, x29, #0x4
   178ec:	bl	abb0 <getresgid@plt>
   178f0:	tbnz	w0, #31, 17964 <idpriv_temp_drop@@Base+0x134>
   178f4:	ldr	w8, [x29, #28]
   178f8:	cmp	w8, w19
   178fc:	b.ne	17964 <idpriv_temp_drop@@Base+0x134>  // b.any
   17900:	ldr	w8, [x29, #24]
   17904:	cmp	w8, w19
   17908:	b.ne	17964 <idpriv_temp_drop@@Base+0x134>  // b.any
   1790c:	ldur	w8, [x29, #-4]
   17910:	ldr	w9, [x22, #1712]
   17914:	cmp	w8, w9
   17918:	b.ne	17964 <idpriv_temp_drop@@Base+0x134>  // b.any
   1791c:	mov	w21, wzr
   17920:	mov	w0, w21
   17924:	ldp	x20, x19, [sp, #64]
   17928:	ldp	x22, x21, [sp, #48]
   1792c:	ldr	x23, [sp, #32]
   17930:	ldp	x29, x30, [sp, #16]
   17934:	add	sp, sp, #0x50
   17938:	ret
   1793c:	bl	a350 <geteuid@plt>
   17940:	str	w0, [x23, #1708]
   17944:	adrp	x22, 46000 <base_len@@Base+0x30a14>
   17948:	ldr	w2, [x22, #1712]
   1794c:	cmn	w2, #0x1
   17950:	b.ne	17878 <idpriv_temp_drop@@Base+0x48>  // b.any
   17954:	bl	a300 <getegid@plt>
   17958:	mov	w2, w0
   1795c:	str	w0, [x22, #1712]
   17960:	b	17878 <idpriv_temp_drop@@Base+0x48>
   17964:	bl	a850 <abort@plt>

0000000000017968 <idpriv_temp_restore@@Base>:
   17968:	sub	sp, sp, #0x40
   1796c:	stp	x29, x30, [sp, #16]
   17970:	stp	x22, x21, [sp, #32]
   17974:	stp	x20, x19, [sp, #48]
   17978:	add	x29, sp, #0x10
   1797c:	bl	a400 <getuid@plt>
   17980:	mov	w20, w0
   17984:	bl	a9b0 <getgid@plt>
   17988:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   1798c:	add	x8, x8, #0x6ac
   17990:	ldr	w1, [x8]
   17994:	cmn	w1, #0x1
   17998:	b.eq	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.none
   1799c:	ldr	w8, [x8, #4]
   179a0:	cmn	w8, #0x1
   179a4:	b.eq	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.none
   179a8:	mov	w19, w0
   179ac:	mov	w0, #0xffffffff            	// #-1
   179b0:	mov	w2, #0xffffffff            	// #-1
   179b4:	mov	w21, #0xffffffff            	// #-1
   179b8:	bl	ac00 <setresuid@plt>
   179bc:	tbnz	w0, #31, 17a5c <idpriv_temp_restore@@Base+0xf4>
   179c0:	adrp	x22, 46000 <base_len@@Base+0x30a14>
   179c4:	ldr	w1, [x22, #1712]
   179c8:	mov	w0, #0xffffffff            	// #-1
   179cc:	mov	w2, #0xffffffff            	// #-1
   179d0:	mov	w21, #0xffffffff            	// #-1
   179d4:	bl	ada0 <setresgid@plt>
   179d8:	tbnz	w0, #31, 17a5c <idpriv_temp_restore@@Base+0xf4>
   179dc:	sub	x0, x29, #0x4
   179e0:	add	x1, sp, #0x8
   179e4:	add	x2, sp, #0x4
   179e8:	bl	a380 <getresuid@plt>
   179ec:	tbnz	w0, #31, 17a74 <idpriv_temp_restore@@Base+0x10c>
   179f0:	ldur	w8, [x29, #-4]
   179f4:	cmp	w8, w20
   179f8:	b.ne	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.any
   179fc:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   17a00:	ldr	w9, [sp, #8]
   17a04:	ldr	w8, [x8, #1708]
   17a08:	cmp	w9, w8
   17a0c:	b.ne	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.any
   17a10:	ldr	w9, [sp, #4]
   17a14:	cmp	w9, w8
   17a18:	b.ne	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.any
   17a1c:	sub	x0, x29, #0x4
   17a20:	add	x1, sp, #0x8
   17a24:	add	x2, sp, #0x4
   17a28:	bl	abb0 <getresgid@plt>
   17a2c:	tbnz	w0, #31, 17a74 <idpriv_temp_restore@@Base+0x10c>
   17a30:	ldur	w8, [x29, #-4]
   17a34:	cmp	w8, w19
   17a38:	b.ne	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.any
   17a3c:	ldr	w9, [sp, #8]
   17a40:	ldr	w8, [x22, #1712]
   17a44:	cmp	w9, w8
   17a48:	b.ne	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.any
   17a4c:	ldr	w9, [sp, #4]
   17a50:	cmp	w9, w8
   17a54:	b.ne	17a74 <idpriv_temp_restore@@Base+0x10c>  // b.any
   17a58:	mov	w21, wzr
   17a5c:	mov	w0, w21
   17a60:	ldp	x20, x19, [sp, #48]
   17a64:	ldp	x22, x21, [sp, #32]
   17a68:	ldp	x29, x30, [sp, #16]
   17a6c:	add	sp, sp, #0x40
   17a70:	ret
   17a74:	bl	a850 <abort@plt>
   17a78:	stp	x29, x30, [sp, #-64]!
   17a7c:	stp	x24, x23, [sp, #16]
   17a80:	mov	x24, x0
   17a84:	mov	w0, #0x68                  	// #104
   17a88:	stp	x22, x21, [sp, #32]
   17a8c:	stp	x20, x19, [sp, #48]
   17a90:	mov	x29, sp
   17a94:	mov	w22, w4
   17a98:	mov	x20, x3
   17a9c:	mov	x21, x2
   17aa0:	mov	x23, x1
   17aa4:	bl	a550 <malloc@plt>
   17aa8:	mov	x19, x0
   17aac:	cbz	x0, 17af8 <idpriv_temp_restore@@Base+0x190>
   17ab0:	and	w8, w22, #0x1
   17ab4:	mov	w9, #0xb                   	// #11
   17ab8:	mov	w0, #0xb                   	// #11
   17abc:	mov	w1, #0x8                   	// #8
   17ac0:	stp	x24, x23, [x19]
   17ac4:	stp	x21, x20, [x19, #16]
   17ac8:	strb	w8, [x19, #32]
   17acc:	str	x9, [x19, #48]
   17ad0:	bl	a6c0 <calloc@plt>
   17ad4:	str	x0, [x19, #40]
   17ad8:	cbz	x0, 17aec <idpriv_temp_restore@@Base+0x184>
   17adc:	add	x8, x19, #0x38
   17ae0:	stp	x8, x8, [x19, #72]
   17ae4:	str	xzr, [x19, #96]
   17ae8:	b	17af8 <idpriv_temp_restore@@Base+0x190>
   17aec:	mov	x0, x19
   17af0:	bl	a970 <free@plt>
   17af4:	mov	x19, xzr
   17af8:	mov	x0, x19
   17afc:	ldp	x20, x19, [sp, #48]
   17b00:	ldp	x22, x21, [sp, #32]
   17b04:	ldp	x24, x23, [sp, #16]
   17b08:	ldp	x29, x30, [sp], #64
   17b0c:	ret
   17b10:	stp	x29, x30, [sp, #-80]!
   17b14:	stp	x26, x25, [sp, #16]
   17b18:	mov	x26, x0
   17b1c:	mov	w0, #0x68                  	// #104
   17b20:	stp	x24, x23, [sp, #32]
   17b24:	stp	x22, x21, [sp, #48]
   17b28:	stp	x20, x19, [sp, #64]
   17b2c:	mov	x29, sp
   17b30:	mov	x20, x6
   17b34:	mov	x21, x5
   17b38:	mov	w24, w4
   17b3c:	mov	x22, x3
   17b40:	mov	x23, x2
   17b44:	mov	x25, x1
   17b48:	bl	a550 <malloc@plt>
   17b4c:	mov	x19, x0
   17b50:	cbz	x0, 17c7c <idpriv_temp_restore@@Base+0x314>
   17b54:	and	w9, w24, #0x1
   17b58:	adds	x10, x21, x21, lsr #1
   17b5c:	strb	w9, [x19, #32]
   17b60:	csinv	x9, x10, xzr, cc  // cc = lo, ul, last
   17b64:	mov	w11, #0xa                   	// #10
   17b68:	cmp	x9, #0xa
   17b6c:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   17b70:	mov	x8, xzr
   17b74:	stp	x26, x25, [x19]
   17b78:	stp	x23, x22, [x19, #16]
   17b7c:	csel	x9, x9, x11, hi  // hi = pmore
   17b80:	add	x10, x10, #0x548
   17b84:	ldr	x22, [x10, x8, lsl #3]
   17b88:	cmp	x22, x9
   17b8c:	b.cs	17ba0 <idpriv_temp_restore@@Base+0x238>  // b.hs, b.nlast
   17b90:	add	x8, x8, #0x1
   17b94:	cmp	x8, #0xe8
   17b98:	b.ne	17b84 <idpriv_temp_restore@@Base+0x21c>  // b.any
   17b9c:	b	17c70 <idpriv_temp_restore@@Base+0x308>
   17ba0:	cmp	x8, #0xda
   17ba4:	str	x22, [x19, #48]
   17ba8:	b.hi	17c70 <idpriv_temp_restore@@Base+0x308>  // b.pmore
   17bac:	mov	w1, #0x8                   	// #8
   17bb0:	mov	x0, x22
   17bb4:	bl	a6c0 <calloc@plt>
   17bb8:	str	x0, [x19, #40]
   17bbc:	cbz	x0, 17c70 <idpriv_temp_restore@@Base+0x308>
   17bc0:	add	x25, x19, #0x38
   17bc4:	str	x21, [x19, #96]
   17bc8:	cbz	x21, 17c38 <idpriv_temp_restore@@Base+0x2d0>
   17bcc:	mov	x23, x25
   17bd0:	b	17c0c <idpriv_temp_restore@@Base+0x2a4>
   17bd4:	ldr	x8, [x19, #40]
   17bd8:	udiv	x9, x0, x22
   17bdc:	msub	x9, x9, x22, x0
   17be0:	str	x0, [x24, #8]
   17be4:	lsl	x9, x9, #3
   17be8:	ldr	x10, [x8, x9]
   17bec:	subs	x21, x21, #0x1
   17bf0:	add	x20, x20, #0x8
   17bf4:	str	x10, [x24]
   17bf8:	str	x24, [x8, x9]
   17bfc:	str	x23, [x24, #24]
   17c00:	str	x24, [x23, #16]
   17c04:	mov	x23, x24
   17c08:	b.eq	17c3c <idpriv_temp_restore@@Base+0x2d4>  // b.none
   17c0c:	mov	w0, #0x28                  	// #40
   17c10:	bl	a550 <malloc@plt>
   17c14:	cbz	x0, 17c48 <idpriv_temp_restore@@Base+0x2e0>
   17c18:	mov	x24, x0
   17c1c:	ldr	x0, [x20]
   17c20:	ldr	x8, [x19, #16]
   17c24:	str	x0, [x24, #32]
   17c28:	cbz	x8, 17bd4 <idpriv_temp_restore@@Base+0x26c>
   17c2c:	blr	x8
   17c30:	ldr	x22, [x19, #48]
   17c34:	b	17bd4 <idpriv_temp_restore@@Base+0x26c>
   17c38:	mov	x24, x25
   17c3c:	str	x25, [x24, #16]
   17c40:	str	x24, [x19, #80]
   17c44:	b	17c7c <idpriv_temp_restore@@Base+0x314>
   17c48:	cmp	x23, x25
   17c4c:	b.eq	17c68 <idpriv_temp_restore@@Base+0x300>  // b.none
   17c50:	ldr	x20, [x23, #24]
   17c54:	mov	x0, x23
   17c58:	bl	a970 <free@plt>
   17c5c:	cmp	x20, x25
   17c60:	mov	x23, x20
   17c64:	b.ne	17c50 <idpriv_temp_restore@@Base+0x2e8>  // b.any
   17c68:	ldr	x0, [x19, #40]
   17c6c:	bl	a970 <free@plt>
   17c70:	mov	x0, x19
   17c74:	bl	a970 <free@plt>
   17c78:	mov	x19, xzr
   17c7c:	mov	x0, x19
   17c80:	ldp	x20, x19, [sp, #64]
   17c84:	ldp	x22, x21, [sp, #48]
   17c88:	ldp	x24, x23, [sp, #32]
   17c8c:	ldp	x26, x25, [sp, #16]
   17c90:	ldp	x29, x30, [sp], #80
   17c94:	ret
   17c98:	ldr	x0, [x0, #96]
   17c9c:	ret
   17ca0:	ldr	x0, [x1, #32]
   17ca4:	ret
   17ca8:	stp	x29, x30, [sp, #-48]!
   17cac:	stp	x20, x19, [sp, #32]
   17cb0:	ldr	x8, [x1, #32]
   17cb4:	str	x21, [sp, #16]
   17cb8:	mov	x29, sp
   17cbc:	cmp	x8, x2
   17cc0:	b.eq	17d60 <idpriv_temp_restore@@Base+0x3f8>  // b.none
   17cc4:	ldr	x8, [x0, #16]
   17cc8:	mov	x19, x1
   17ccc:	mov	x20, x2
   17cd0:	mov	x21, x0
   17cd4:	cbz	x8, 17cf4 <idpriv_temp_restore@@Base+0x38c>
   17cd8:	mov	x0, x20
   17cdc:	blr	x8
   17ce0:	ldr	x9, [x19, #8]
   17ce4:	cmp	x0, x9
   17ce8:	b.ne	17d04 <idpriv_temp_restore@@Base+0x39c>  // b.any
   17cec:	str	x20, [x19, #32]
   17cf0:	b	17d60 <idpriv_temp_restore@@Base+0x3f8>
   17cf4:	mov	x0, x20
   17cf8:	ldr	x9, [x19, #8]
   17cfc:	cmp	x0, x9
   17d00:	b.eq	17cec <idpriv_temp_restore@@Base+0x384>  // b.none
   17d04:	ldp	x10, x8, [x21, #40]
   17d08:	udiv	x11, x9, x8
   17d0c:	msub	x9, x11, x8, x9
   17d10:	add	x9, x10, x9, lsl #3
   17d14:	ldr	x10, [x9]
   17d18:	cmp	x10, x19
   17d1c:	b.eq	17d34 <idpriv_temp_restore@@Base+0x3cc>  // b.none
   17d20:	cbz	x10, 17d74 <idpriv_temp_restore@@Base+0x40c>
   17d24:	mov	x9, x10
   17d28:	ldr	x10, [x9]
   17d2c:	cmp	x10, x19
   17d30:	b.ne	17d20 <idpriv_temp_restore@@Base+0x3b8>  // b.any
   17d34:	ldr	x10, [x19]
   17d38:	str	x10, [x9]
   17d3c:	str	x20, [x19, #32]
   17d40:	str	x0, [x19, #8]
   17d44:	ldr	x9, [x21, #40]
   17d48:	udiv	x10, x0, x8
   17d4c:	msub	x8, x10, x8, x0
   17d50:	lsl	x8, x8, #3
   17d54:	ldr	x10, [x9, x8]
   17d58:	str	x10, [x19]
   17d5c:	str	x19, [x9, x8]
   17d60:	ldp	x20, x19, [sp, #32]
   17d64:	ldr	x21, [sp, #16]
   17d68:	mov	w0, wzr
   17d6c:	ldp	x29, x30, [sp], #48
   17d70:	ret
   17d74:	bl	a850 <abort@plt>
   17d78:	ldr	x8, [x1, #16]
   17d7c:	add	x9, x0, #0x38
   17d80:	cmp	x8, x9
   17d84:	csel	x0, xzr, x8, eq  // eq = none
   17d88:	ret
   17d8c:	ldr	x8, [x1, #24]
   17d90:	add	x9, x0, #0x38
   17d94:	cmp	x8, x9
   17d98:	csel	x0, xzr, x8, eq  // eq = none
   17d9c:	ret
   17da0:	stp	x29, x30, [sp, #-16]!
   17da4:	ldr	x9, [x0, #96]
   17da8:	mov	x29, sp
   17dac:	cmp	x9, x1
   17db0:	b.ls	17e04 <idpriv_temp_restore@@Base+0x49c>  // b.plast
   17db4:	sub	x10, x9, #0x1
   17db8:	cmp	x1, x10, lsr #1
   17dbc:	b.ls	17de4 <idpriv_temp_restore@@Base+0x47c>  // b.plast
   17dc0:	ldr	x8, [x0, #80]
   17dc4:	cmp	x10, x1
   17dc8:	b.eq	17df8 <idpriv_temp_restore@@Base+0x490>  // b.none
   17dcc:	sub	x9, x1, x9
   17dd0:	add	x9, x9, #0x1
   17dd4:	ldr	x8, [x8, #24]
   17dd8:	adds	x9, x9, #0x1
   17ddc:	b.cc	17dd4 <idpriv_temp_restore@@Base+0x46c>  // b.lo, b.ul, b.last
   17de0:	b	17df8 <idpriv_temp_restore@@Base+0x490>
   17de4:	ldr	x8, [x0, #72]
   17de8:	cbz	x1, 17df8 <idpriv_temp_restore@@Base+0x490>
   17dec:	ldr	x8, [x8, #16]
   17df0:	subs	x1, x1, #0x1
   17df4:	b.ne	17dec <idpriv_temp_restore@@Base+0x484>  // b.any
   17df8:	ldr	x0, [x8, #32]
   17dfc:	ldp	x29, x30, [sp], #16
   17e00:	ret
   17e04:	bl	a850 <abort@plt>
   17e08:	stp	x29, x30, [sp, #-48]!
   17e0c:	stp	x20, x19, [sp, #32]
   17e10:	ldr	x8, [x0, #96]
   17e14:	str	x21, [sp, #16]
   17e18:	mov	x29, sp
   17e1c:	cmp	x8, x1
   17e20:	b.ls	17f20 <idpriv_temp_restore@@Base+0x5b8>  // b.plast
   17e24:	sub	x9, x8, #0x1
   17e28:	mov	x19, x0
   17e2c:	mov	x21, x2
   17e30:	cmp	x1, x9, lsr #1
   17e34:	b.ls	17e5c <idpriv_temp_restore@@Base+0x4f4>  // b.plast
   17e38:	ldr	x20, [x19, #80]
   17e3c:	cmp	x9, x1
   17e40:	b.eq	17e70 <idpriv_temp_restore@@Base+0x508>  // b.none
   17e44:	sub	x8, x1, x8
   17e48:	add	x8, x8, #0x1
   17e4c:	ldr	x20, [x20, #24]
   17e50:	adds	x8, x8, #0x1
   17e54:	b.cc	17e4c <idpriv_temp_restore@@Base+0x4e4>  // b.lo, b.ul, b.last
   17e58:	b	17e70 <idpriv_temp_restore@@Base+0x508>
   17e5c:	ldr	x20, [x19, #72]
   17e60:	cbz	x1, 17e70 <idpriv_temp_restore@@Base+0x508>
   17e64:	ldr	x20, [x20, #16]
   17e68:	subs	x1, x1, #0x1
   17e6c:	b.ne	17e64 <idpriv_temp_restore@@Base+0x4fc>  // b.any
   17e70:	ldr	x8, [x20, #32]
   17e74:	cmp	x8, x21
   17e78:	b.eq	17f0c <idpriv_temp_restore@@Base+0x5a4>  // b.none
   17e7c:	ldr	x8, [x19, #16]
   17e80:	cbz	x8, 17ea0 <idpriv_temp_restore@@Base+0x538>
   17e84:	mov	x0, x21
   17e88:	blr	x8
   17e8c:	ldr	x9, [x20, #8]
   17e90:	cmp	x0, x9
   17e94:	b.ne	17eb0 <idpriv_temp_restore@@Base+0x548>  // b.any
   17e98:	str	x21, [x20, #32]
   17e9c:	b	17f0c <idpriv_temp_restore@@Base+0x5a4>
   17ea0:	mov	x0, x21
   17ea4:	ldr	x9, [x20, #8]
   17ea8:	cmp	x0, x9
   17eac:	b.eq	17e98 <idpriv_temp_restore@@Base+0x530>  // b.none
   17eb0:	ldp	x10, x8, [x19, #40]
   17eb4:	udiv	x11, x9, x8
   17eb8:	msub	x9, x11, x8, x9
   17ebc:	add	x9, x10, x9, lsl #3
   17ec0:	ldr	x10, [x9]
   17ec4:	cmp	x10, x20
   17ec8:	b.eq	17ee0 <idpriv_temp_restore@@Base+0x578>  // b.none
   17ecc:	cbz	x10, 17f20 <idpriv_temp_restore@@Base+0x5b8>
   17ed0:	mov	x9, x10
   17ed4:	ldr	x10, [x9]
   17ed8:	cmp	x10, x20
   17edc:	b.ne	17ecc <idpriv_temp_restore@@Base+0x564>  // b.any
   17ee0:	ldr	x10, [x20]
   17ee4:	str	x10, [x9]
   17ee8:	str	x21, [x20, #32]
   17eec:	str	x0, [x20, #8]
   17ef0:	ldr	x9, [x19, #40]
   17ef4:	udiv	x10, x0, x8
   17ef8:	msub	x8, x10, x8, x0
   17efc:	lsl	x8, x8, #3
   17f00:	ldr	x10, [x9, x8]
   17f04:	str	x10, [x20]
   17f08:	str	x20, [x9, x8]
   17f0c:	mov	x0, x20
   17f10:	ldp	x20, x19, [sp, #32]
   17f14:	ldr	x21, [sp, #16]
   17f18:	ldp	x29, x30, [sp], #48
   17f1c:	ret
   17f20:	bl	a850 <abort@plt>
   17f24:	stp	x29, x30, [sp, #-96]!
   17f28:	stp	x26, x25, [sp, #32]
   17f2c:	subs	x26, x2, x1
   17f30:	str	x27, [sp, #16]
   17f34:	stp	x24, x23, [sp, #48]
   17f38:	stp	x22, x21, [sp, #64]
   17f3c:	stp	x20, x19, [sp, #80]
   17f40:	mov	x29, sp
   17f44:	b.cc	181e8 <idpriv_temp_restore@@Base+0x880>  // b.lo, b.ul, b.last
   17f48:	ldr	x27, [x0, #96]
   17f4c:	mov	x19, x2
   17f50:	mov	x22, x0
   17f54:	cmp	x27, x2
   17f58:	b.cc	181e8 <idpriv_temp_restore@@Base+0x880>  // b.lo, b.ul, b.last
   17f5c:	ldr	x8, [x22, #16]
   17f60:	mov	x21, x3
   17f64:	mov	x20, x1
   17f68:	cbz	x8, 17f7c <idpriv_temp_restore@@Base+0x614>
   17f6c:	mov	x0, x21
   17f70:	blr	x8
   17f74:	mov	x23, x0
   17f78:	b	17f80 <idpriv_temp_restore@@Base+0x618>
   17f7c:	mov	x23, x21
   17f80:	ldp	x9, x8, [x22, #40]
   17f84:	ldr	x25, [x22, #8]
   17f88:	udiv	x10, x23, x8
   17f8c:	msub	x8, x10, x8, x23
   17f90:	ldrb	w10, [x22, #32]
   17f94:	ldr	x24, [x9, x8, lsl #3]
   17f98:	cbz	w10, 17fe4 <idpriv_temp_restore@@Base+0x67c>
   17f9c:	cbz	x24, 18060 <idpriv_temp_restore@@Base+0x6f8>
   17fa0:	cbz	x25, 180f8 <idpriv_temp_restore@@Base+0x790>
   17fa4:	mov	x27, xzr
   17fa8:	b	17fbc <idpriv_temp_restore@@Base+0x654>
   17fac:	mov	x0, x27
   17fb0:	ldr	x24, [x24]
   17fb4:	mov	x27, x0
   17fb8:	cbz	x24, 18064 <idpriv_temp_restore@@Base+0x6fc>
   17fbc:	ldr	x8, [x24, #8]
   17fc0:	cmp	x8, x23
   17fc4:	b.ne	17fac <idpriv_temp_restore@@Base+0x644>  // b.any
   17fc8:	ldr	x1, [x24, #32]
   17fcc:	mov	x0, x21
   17fd0:	blr	x25
   17fd4:	tbz	w0, #0, 17fac <idpriv_temp_restore@@Base+0x644>
   17fd8:	mov	x0, x24
   17fdc:	cbz	x27, 17fb0 <idpriv_temp_restore@@Base+0x648>
   17fe0:	b	18130 <idpriv_temp_restore@@Base+0x7c8>
   17fe4:	cbz	x24, 18038 <idpriv_temp_restore@@Base+0x6d0>
   17fe8:	cbnz	x25, 17ff8 <idpriv_temp_restore@@Base+0x690>
   17fec:	b	18020 <idpriv_temp_restore@@Base+0x6b8>
   17ff0:	ldr	x24, [x24]
   17ff4:	cbz	x24, 18038 <idpriv_temp_restore@@Base+0x6d0>
   17ff8:	ldr	x8, [x24, #8]
   17ffc:	cmp	x8, x23
   18000:	b.ne	17ff0 <idpriv_temp_restore@@Base+0x688>  // b.any
   18004:	ldr	x1, [x24, #32]
   18008:	mov	x0, x21
   1800c:	blr	x25
   18010:	tbz	w0, #0, 17ff0 <idpriv_temp_restore@@Base+0x688>
   18014:	b	18038 <idpriv_temp_restore@@Base+0x6d0>
   18018:	ldr	x24, [x24]
   1801c:	cbz	x24, 18038 <idpriv_temp_restore@@Base+0x6d0>
   18020:	ldr	x8, [x24, #8]
   18024:	cmp	x8, x23
   18028:	b.ne	18018 <idpriv_temp_restore@@Base+0x6b0>  // b.any
   1802c:	ldr	x8, [x24, #32]
   18030:	cmp	x8, x21
   18034:	b.ne	18018 <idpriv_temp_restore@@Base+0x6b0>  // b.any
   18038:	cbz	x20, 180c8 <idpriv_temp_restore@@Base+0x760>
   1803c:	ldr	x8, [x22, #72]
   18040:	cmp	x8, x24
   18044:	b.eq	18188 <idpriv_temp_restore@@Base+0x820>  // b.none
   18048:	subs	x20, x20, #0x1
   1804c:	b.eq	180c8 <idpriv_temp_restore@@Base+0x760>  // b.none
   18050:	ldr	x8, [x8, #16]
   18054:	cmp	x8, x24
   18058:	b.ne	18048 <idpriv_temp_restore@@Base+0x6e0>  // b.any
   1805c:	b	18188 <idpriv_temp_restore@@Base+0x820>
   18060:	mov	x0, xzr
   18064:	cbz	x20, 18094 <idpriv_temp_restore@@Base+0x72c>
   18068:	ldr	x8, [x22, #72]
   1806c:	add	x9, x22, #0x38
   18070:	cmp	x8, x9
   18074:	b.eq	18094 <idpriv_temp_restore@@Base+0x72c>  // b.none
   18078:	cmp	x8, x0
   1807c:	b.eq	18188 <idpriv_temp_restore@@Base+0x820>  // b.none
   18080:	subs	x20, x20, #0x1
   18084:	b.eq	18094 <idpriv_temp_restore@@Base+0x72c>  // b.none
   18088:	ldr	x8, [x8, #16]
   1808c:	cmp	x8, x9
   18090:	b.ne	18078 <idpriv_temp_restore@@Base+0x710>  // b.any
   18094:	ldr	x9, [x22, #96]
   18098:	cmp	x9, x19
   1809c:	b.ls	18194 <idpriv_temp_restore@@Base+0x82c>  // b.plast
   180a0:	ldr	x8, [x22, #80]
   180a4:	cmp	x8, x0
   180a8:	b.eq	18188 <idpriv_temp_restore@@Base+0x820>  // b.none
   180ac:	sub	x9, x19, x9
   180b0:	adds	x9, x9, #0x1
   180b4:	b.cs	18194 <idpriv_temp_restore@@Base+0x82c>  // b.hs, b.nlast
   180b8:	ldr	x8, [x8, #24]
   180bc:	cmp	x8, x0
   180c0:	b.ne	180b0 <idpriv_temp_restore@@Base+0x748>  // b.any
   180c4:	b	18188 <idpriv_temp_restore@@Base+0x820>
   180c8:	cmp	x27, x19
   180cc:	b.ls	18190 <idpriv_temp_restore@@Base+0x828>  // b.plast
   180d0:	ldr	x8, [x22, #80]
   180d4:	cmp	x8, x24
   180d8:	b.eq	18188 <idpriv_temp_restore@@Base+0x820>  // b.none
   180dc:	sub	x9, x19, x27
   180e0:	adds	x9, x9, #0x1
   180e4:	b.cs	18190 <idpriv_temp_restore@@Base+0x828>  // b.hs, b.nlast
   180e8:	ldr	x8, [x8, #24]
   180ec:	cmp	x8, x24
   180f0:	b.ne	180e0 <idpriv_temp_restore@@Base+0x778>  // b.any
   180f4:	b	18188 <idpriv_temp_restore@@Base+0x820>
   180f8:	mov	x8, xzr
   180fc:	b	18110 <idpriv_temp_restore@@Base+0x7a8>
   18100:	mov	x0, x8
   18104:	ldr	x24, [x24]
   18108:	mov	x8, x0
   1810c:	cbz	x24, 18064 <idpriv_temp_restore@@Base+0x6fc>
   18110:	ldr	x9, [x24, #8]
   18114:	cmp	x9, x23
   18118:	b.ne	18100 <idpriv_temp_restore@@Base+0x798>  // b.any
   1811c:	ldr	x9, [x24, #32]
   18120:	cmp	x9, x21
   18124:	b.ne	18100 <idpriv_temp_restore@@Base+0x798>  // b.any
   18128:	mov	x0, x24
   1812c:	cbz	x8, 18104 <idpriv_temp_restore@@Base+0x79c>
   18130:	ldr	x22, [x22, #72]
   18134:	cbz	x20, 18148 <idpriv_temp_restore@@Base+0x7e0>
   18138:	mov	x8, x20
   1813c:	ldr	x22, [x22, #16]
   18140:	subs	x8, x8, #0x1
   18144:	b.ne	1813c <idpriv_temp_restore@@Base+0x7d4>  // b.any
   18148:	cbz	x26, 18188 <idpriv_temp_restore@@Base+0x820>
   1814c:	cbz	x25, 181b0 <idpriv_temp_restore@@Base+0x848>
   18150:	sub	x19, x20, x19
   18154:	b	18168 <idpriv_temp_restore@@Base+0x800>
   18158:	ldr	x22, [x22, #16]
   1815c:	adds	x19, x19, #0x1
   18160:	mov	x0, xzr
   18164:	b.cs	18194 <idpriv_temp_restore@@Base+0x82c>  // b.hs, b.nlast
   18168:	ldr	x8, [x22, #8]
   1816c:	cmp	x8, x23
   18170:	b.ne	18158 <idpriv_temp_restore@@Base+0x7f0>  // b.any
   18174:	ldr	x1, [x22, #32]
   18178:	mov	x0, x21
   1817c:	blr	x25
   18180:	tbz	w0, #0, 18158 <idpriv_temp_restore@@Base+0x7f0>
   18184:	b	181e0 <idpriv_temp_restore@@Base+0x878>
   18188:	mov	x0, xzr
   1818c:	b	18194 <idpriv_temp_restore@@Base+0x82c>
   18190:	mov	x0, x24
   18194:	ldp	x20, x19, [sp, #80]
   18198:	ldp	x22, x21, [sp, #64]
   1819c:	ldp	x24, x23, [sp, #48]
   181a0:	ldp	x26, x25, [sp, #32]
   181a4:	ldr	x27, [sp, #16]
   181a8:	ldp	x29, x30, [sp], #96
   181ac:	ret
   181b0:	sub	x8, x20, x19
   181b4:	b	181c8 <idpriv_temp_restore@@Base+0x860>
   181b8:	ldr	x22, [x22, #16]
   181bc:	adds	x8, x8, #0x1
   181c0:	mov	x0, xzr
   181c4:	b.cs	18194 <idpriv_temp_restore@@Base+0x82c>  // b.hs, b.nlast
   181c8:	ldr	x9, [x22, #8]
   181cc:	cmp	x9, x23
   181d0:	b.ne	181b8 <idpriv_temp_restore@@Base+0x850>  // b.any
   181d4:	ldr	x9, [x22, #32]
   181d8:	cmp	x9, x21
   181dc:	b.ne	181b8 <idpriv_temp_restore@@Base+0x850>  // b.any
   181e0:	mov	x0, x22
   181e4:	b	18194 <idpriv_temp_restore@@Base+0x82c>
   181e8:	bl	a850 <abort@plt>
   181ec:	stp	x29, x30, [sp, #-80]!
   181f0:	cmp	x1, x2
   181f4:	stp	x26, x25, [sp, #16]
   181f8:	stp	x24, x23, [sp, #32]
   181fc:	stp	x22, x21, [sp, #48]
   18200:	stp	x20, x19, [sp, #64]
   18204:	mov	x29, sp
   18208:	b.hi	18414 <idpriv_temp_restore@@Base+0xaac>  // b.pmore
   1820c:	ldr	x8, [x0, #96]
   18210:	mov	x20, x2
   18214:	mov	x23, x0
   18218:	cmp	x8, x2
   1821c:	b.cc	18414 <idpriv_temp_restore@@Base+0xaac>  // b.lo, b.ul, b.last
   18220:	ldr	x8, [x23, #16]
   18224:	mov	x21, x3
   18228:	mov	x19, x1
   1822c:	cbz	x8, 18240 <idpriv_temp_restore@@Base+0x8d8>
   18230:	mov	x0, x21
   18234:	blr	x8
   18238:	mov	x22, x0
   1823c:	b	18244 <idpriv_temp_restore@@Base+0x8dc>
   18240:	mov	x22, x21
   18244:	ldp	x9, x8, [x23, #40]
   18248:	ldr	x24, [x23, #8]
   1824c:	udiv	x10, x22, x8
   18250:	msub	x8, x10, x8, x22
   18254:	ldrb	w10, [x23, #32]
   18258:	ldr	x25, [x9, x8, lsl #3]
   1825c:	cbz	w10, 182a8 <idpriv_temp_restore@@Base+0x940>
   18260:	cbz	x25, 183c8 <idpriv_temp_restore@@Base+0xa60>
   18264:	cbz	x24, 18300 <idpriv_temp_restore@@Base+0x998>
   18268:	mov	x26, xzr
   1826c:	b	18280 <idpriv_temp_restore@@Base+0x918>
   18270:	mov	x8, x26
   18274:	ldr	x25, [x25]
   18278:	mov	x26, x8
   1827c:	cbz	x25, 18398 <idpriv_temp_restore@@Base+0xa30>
   18280:	ldr	x8, [x25, #8]
   18284:	cmp	x8, x22
   18288:	b.ne	18270 <idpriv_temp_restore@@Base+0x908>  // b.any
   1828c:	ldr	x1, [x25, #32]
   18290:	mov	x0, x21
   18294:	blr	x24
   18298:	tbz	w0, #0, 18270 <idpriv_temp_restore@@Base+0x908>
   1829c:	mov	x8, x25
   182a0:	cbz	x26, 18274 <idpriv_temp_restore@@Base+0x90c>
   182a4:	b	18338 <idpriv_temp_restore@@Base+0x9d0>
   182a8:	cbz	x25, 183c8 <idpriv_temp_restore@@Base+0xa60>
   182ac:	cbnz	x24, 182bc <idpriv_temp_restore@@Base+0x954>
   182b0:	b	182e4 <idpriv_temp_restore@@Base+0x97c>
   182b4:	ldr	x25, [x25]
   182b8:	cbz	x25, 183c8 <idpriv_temp_restore@@Base+0xa60>
   182bc:	ldr	x8, [x25, #8]
   182c0:	cmp	x8, x22
   182c4:	b.ne	182b4 <idpriv_temp_restore@@Base+0x94c>  // b.any
   182c8:	ldr	x1, [x25, #32]
   182cc:	mov	x0, x21
   182d0:	blr	x24
   182d4:	tbz	w0, #0, 182b4 <idpriv_temp_restore@@Base+0x94c>
   182d8:	b	183a0 <idpriv_temp_restore@@Base+0xa38>
   182dc:	ldr	x25, [x25]
   182e0:	cbz	x25, 183c8 <idpriv_temp_restore@@Base+0xa60>
   182e4:	ldr	x8, [x25, #8]
   182e8:	cmp	x8, x22
   182ec:	b.ne	182dc <idpriv_temp_restore@@Base+0x974>  // b.any
   182f0:	ldr	x8, [x25, #32]
   182f4:	cmp	x8, x21
   182f8:	b.ne	182dc <idpriv_temp_restore@@Base+0x974>  // b.any
   182fc:	b	183a0 <idpriv_temp_restore@@Base+0xa38>
   18300:	mov	x9, xzr
   18304:	b	18318 <idpriv_temp_restore@@Base+0x9b0>
   18308:	mov	x8, x9
   1830c:	ldr	x25, [x25]
   18310:	mov	x9, x8
   18314:	cbz	x25, 18398 <idpriv_temp_restore@@Base+0xa30>
   18318:	ldr	x8, [x25, #8]
   1831c:	cmp	x8, x22
   18320:	b.ne	18308 <idpriv_temp_restore@@Base+0x9a0>  // b.any
   18324:	ldr	x8, [x25, #32]
   18328:	cmp	x8, x21
   1832c:	b.ne	18308 <idpriv_temp_restore@@Base+0x9a0>  // b.any
   18330:	mov	x8, x25
   18334:	cbz	x9, 1830c <idpriv_temp_restore@@Base+0x9a4>
   18338:	ldr	x23, [x23, #72]
   1833c:	cbz	x19, 18350 <idpriv_temp_restore@@Base+0x9e8>
   18340:	mov	x8, x19
   18344:	ldr	x23, [x23, #16]
   18348:	subs	x8, x8, #0x1
   1834c:	b.ne	18344 <idpriv_temp_restore@@Base+0x9dc>  // b.any
   18350:	cmp	x19, x20
   18354:	b.cs	183c8 <idpriv_temp_restore@@Base+0xa60>  // b.hs, b.nlast
   18358:	cbnz	x24, 18378 <idpriv_temp_restore@@Base+0xa10>
   1835c:	mov	x0, #0xffffffffffffffff    	// #-1
   18360:	b	183f4 <idpriv_temp_restore@@Base+0xa8c>
   18364:	ldr	x23, [x23, #16]
   18368:	add	x19, x19, #0x1
   1836c:	cmp	x20, x19
   18370:	mov	x0, #0xffffffffffffffff    	// #-1
   18374:	b.eq	183cc <idpriv_temp_restore@@Base+0xa64>  // b.none
   18378:	ldr	x8, [x23, #8]
   1837c:	cmp	x8, x22
   18380:	b.ne	18364 <idpriv_temp_restore@@Base+0x9fc>  // b.any
   18384:	ldr	x1, [x23, #32]
   18388:	mov	x0, x21
   1838c:	blr	x24
   18390:	tbz	w0, #0, 18364 <idpriv_temp_restore@@Base+0x9fc>
   18394:	b	1840c <idpriv_temp_restore@@Base+0xaa4>
   18398:	mov	x25, x8
   1839c:	cbz	x8, 183c8 <idpriv_temp_restore@@Base+0xa60>
   183a0:	add	x9, x23, #0x38
   183a4:	mov	x8, #0xffffffffffffffff    	// #-1
   183a8:	ldr	x25, [x25, #24]
   183ac:	add	x8, x8, #0x1
   183b0:	cmp	x25, x9
   183b4:	b.ne	183a8 <idpriv_temp_restore@@Base+0xa40>  // b.any
   183b8:	cmp	x8, x20
   183bc:	ccmp	x8, x19, #0x0, cc  // cc = lo, ul, last
   183c0:	csinv	x0, x8, xzr, cs  // cs = hs, nlast
   183c4:	b	183cc <idpriv_temp_restore@@Base+0xa64>
   183c8:	mov	x0, #0xffffffffffffffff    	// #-1
   183cc:	ldp	x20, x19, [sp, #64]
   183d0:	ldp	x22, x21, [sp, #48]
   183d4:	ldp	x24, x23, [sp, #32]
   183d8:	ldp	x26, x25, [sp, #16]
   183dc:	ldp	x29, x30, [sp], #80
   183e0:	ret
   183e4:	ldr	x23, [x23, #16]
   183e8:	add	x19, x19, #0x1
   183ec:	cmp	x20, x19
   183f0:	b.eq	183cc <idpriv_temp_restore@@Base+0xa64>  // b.none
   183f4:	ldr	x8, [x23, #8]
   183f8:	cmp	x8, x22
   183fc:	b.ne	183e4 <idpriv_temp_restore@@Base+0xa7c>  // b.any
   18400:	ldr	x8, [x23, #32]
   18404:	cmp	x8, x21
   18408:	b.ne	183e4 <idpriv_temp_restore@@Base+0xa7c>  // b.any
   1840c:	mov	x0, x19
   18410:	b	183cc <idpriv_temp_restore@@Base+0xa64>
   18414:	bl	a850 <abort@plt>
   18418:	stp	x29, x30, [sp, #-64]!
   1841c:	stp	x20, x19, [sp, #48]
   18420:	mov	x20, x0
   18424:	mov	w0, #0x28                  	// #40
   18428:	str	x23, [sp, #16]
   1842c:	stp	x22, x21, [sp, #32]
   18430:	mov	x29, sp
   18434:	mov	x21, x1
   18438:	bl	a550 <malloc@plt>
   1843c:	mov	x19, x0
   18440:	cbz	x0, 18508 <idpriv_temp_restore@@Base+0xba0>
   18444:	str	x21, [x19, #32]
   18448:	ldr	x8, [x20, #16]
   1844c:	cbz	x8, 1845c <idpriv_temp_restore@@Base+0xaf4>
   18450:	mov	x0, x21
   18454:	blr	x8
   18458:	mov	x21, x0
   1845c:	str	x21, [x19, #8]
   18460:	ldp	x8, x23, [x20, #40]
   18464:	udiv	x9, x21, x23
   18468:	msub	x9, x9, x23, x21
   1846c:	lsl	x9, x9, #3
   18470:	ldr	x10, [x8, x9]
   18474:	str	x10, [x19]
   18478:	str	x19, [x8, x9]
   1847c:	ldr	x8, [x20, #72]
   18480:	add	x10, x20, #0x38
   18484:	stp	x8, x10, [x19, #16]
   18488:	str	x19, [x8, #24]
   1848c:	ldr	x8, [x20, #96]
   18490:	str	x19, [x20, #72]
   18494:	add	x9, x8, #0x1
   18498:	adds	x8, x9, x9, lsr #1
   1849c:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   184a0:	cmp	x8, x23
   184a4:	str	x9, [x20, #96]
   184a8:	b.ls	18508 <idpriv_temp_restore@@Base+0xba0>  // b.plast
   184ac:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   184b0:	mov	x9, xzr
   184b4:	add	x10, x10, #0x548
   184b8:	ldr	x21, [x10, x9]
   184bc:	cmp	x21, x8
   184c0:	b.cs	184d4 <idpriv_temp_restore@@Base+0xb6c>  // b.hs, b.nlast
   184c4:	add	x9, x9, #0x8
   184c8:	cmp	x9, #0x740
   184cc:	b.ne	184b8 <idpriv_temp_restore@@Base+0xb50>  // b.any
   184d0:	mov	x21, #0xffffffffffffffff    	// #-1
   184d4:	cmp	x21, x23
   184d8:	b.ls	18508 <idpriv_temp_restore@@Base+0xba0>  // b.plast
   184dc:	lsr	x8, x21, #61
   184e0:	cbnz	x8, 18508 <idpriv_temp_restore@@Base+0xba0>
   184e4:	ldr	x22, [x20, #40]
   184e8:	mov	w1, #0x8                   	// #8
   184ec:	mov	x0, x21
   184f0:	bl	a6c0 <calloc@plt>
   184f4:	cbz	x0, 18508 <idpriv_temp_restore@@Base+0xba0>
   184f8:	cbnz	x23, 18524 <idpriv_temp_restore@@Base+0xbbc>
   184fc:	stp	x0, x21, [x20, #40]
   18500:	mov	x0, x22
   18504:	bl	a970 <free@plt>
   18508:	mov	x0, x19
   1850c:	ldp	x20, x19, [sp, #48]
   18510:	ldp	x22, x21, [sp, #32]
   18514:	ldr	x23, [sp, #16]
   18518:	ldp	x29, x30, [sp], #64
   1851c:	ret
   18520:	cbz	x23, 184fc <idpriv_temp_restore@@Base+0xb94>
   18524:	sub	x23, x23, #0x1
   18528:	ldr	x8, [x22, x23, lsl #3]
   1852c:	cbz	x8, 18520 <idpriv_temp_restore@@Base+0xbb8>
   18530:	ldp	x11, x9, [x8]
   18534:	udiv	x10, x9, x21
   18538:	msub	x9, x10, x21, x9
   1853c:	lsl	x9, x9, #3
   18540:	ldr	x10, [x0, x9]
   18544:	str	x10, [x8]
   18548:	str	x8, [x0, x9]
   1854c:	mov	x8, x11
   18550:	cbnz	x11, 18530 <idpriv_temp_restore@@Base+0xbc8>
   18554:	b	18520 <idpriv_temp_restore@@Base+0xbb8>
   18558:	stp	x29, x30, [sp, #-48]!
   1855c:	stp	x20, x19, [sp, #32]
   18560:	mov	x20, x0
   18564:	mov	w0, #0x28                  	// #40
   18568:	str	x21, [sp, #16]
   1856c:	mov	x29, sp
   18570:	mov	x21, x1
   18574:	bl	a550 <malloc@plt>
   18578:	mov	x19, x0
   1857c:	cbz	x0, 185e0 <idpriv_temp_restore@@Base+0xc78>
   18580:	str	x21, [x19, #32]
   18584:	ldr	x8, [x20, #16]
   18588:	cbz	x8, 18598 <idpriv_temp_restore@@Base+0xc30>
   1858c:	mov	x0, x21
   18590:	blr	x8
   18594:	mov	x21, x0
   18598:	str	x21, [x19, #8]
   1859c:	ldp	x9, x8, [x20, #40]
   185a0:	add	x11, x20, #0x38
   185a4:	mov	x0, x20
   185a8:	udiv	x10, x21, x8
   185ac:	msub	x8, x10, x8, x21
   185b0:	lsl	x8, x8, #3
   185b4:	ldr	x10, [x9, x8]
   185b8:	str	x10, [x19]
   185bc:	str	x19, [x9, x8]
   185c0:	ldr	x8, [x20, #80]
   185c4:	stp	x11, x8, [x19, #16]
   185c8:	str	x19, [x8, #16]
   185cc:	ldr	x8, [x20, #96]
   185d0:	str	x19, [x20, #80]
   185d4:	add	x8, x8, #0x1
   185d8:	str	x8, [x20, #96]
   185dc:	bl	19358 <idpriv_temp_restore@@Base+0x19f0>
   185e0:	mov	x0, x19
   185e4:	ldp	x20, x19, [sp, #32]
   185e8:	ldr	x21, [sp, #16]
   185ec:	ldp	x29, x30, [sp], #48
   185f0:	ret
   185f4:	stp	x29, x30, [sp, #-48]!
   185f8:	stp	x20, x19, [sp, #32]
   185fc:	mov	x20, x0
   18600:	mov	w0, #0x28                  	// #40
   18604:	stp	x22, x21, [sp, #16]
   18608:	mov	x29, sp
   1860c:	mov	x22, x2
   18610:	mov	x21, x1
   18614:	bl	a550 <malloc@plt>
   18618:	mov	x19, x0
   1861c:	cbz	x0, 1867c <idpriv_temp_restore@@Base+0xd14>
   18620:	str	x22, [x19, #32]
   18624:	ldr	x8, [x20, #16]
   18628:	cbz	x8, 18638 <idpriv_temp_restore@@Base+0xcd0>
   1862c:	mov	x0, x22
   18630:	blr	x8
   18634:	mov	x22, x0
   18638:	str	x22, [x19, #8]
   1863c:	ldp	x9, x8, [x20, #40]
   18640:	mov	x0, x20
   18644:	udiv	x10, x22, x8
   18648:	msub	x8, x10, x8, x22
   1864c:	lsl	x8, x8, #3
   18650:	ldr	x10, [x9, x8]
   18654:	str	x10, [x19]
   18658:	str	x19, [x9, x8]
   1865c:	ldr	x8, [x21, #24]
   18660:	stp	x21, x8, [x19, #16]
   18664:	str	x19, [x8, #16]
   18668:	str	x19, [x21, #24]
   1866c:	ldr	x8, [x20, #96]
   18670:	add	x8, x8, #0x1
   18674:	str	x8, [x20, #96]
   18678:	bl	19358 <idpriv_temp_restore@@Base+0x19f0>
   1867c:	mov	x0, x19
   18680:	ldp	x20, x19, [sp, #32]
   18684:	ldp	x22, x21, [sp, #16]
   18688:	ldp	x29, x30, [sp], #48
   1868c:	ret
   18690:	stp	x29, x30, [sp, #-64]!
   18694:	stp	x20, x19, [sp, #48]
   18698:	mov	x20, x0
   1869c:	mov	w0, #0x28                  	// #40
   186a0:	str	x23, [sp, #16]
   186a4:	stp	x22, x21, [sp, #32]
   186a8:	mov	x29, sp
   186ac:	mov	x22, x2
   186b0:	mov	x21, x1
   186b4:	bl	a550 <malloc@plt>
   186b8:	mov	x19, x0
   186bc:	cbz	x0, 18780 <idpriv_temp_restore@@Base+0xe18>
   186c0:	str	x22, [x19, #32]
   186c4:	ldr	x8, [x20, #16]
   186c8:	cbz	x8, 186d8 <idpriv_temp_restore@@Base+0xd70>
   186cc:	mov	x0, x22
   186d0:	blr	x8
   186d4:	mov	x22, x0
   186d8:	str	x22, [x19, #8]
   186dc:	ldp	x8, x23, [x20, #40]
   186e0:	udiv	x9, x22, x23
   186e4:	msub	x9, x9, x23, x22
   186e8:	lsl	x9, x9, #3
   186ec:	ldr	x10, [x8, x9]
   186f0:	str	x10, [x19]
   186f4:	str	x19, [x8, x9]
   186f8:	ldr	x8, [x21, #16]
   186fc:	stp	x8, x21, [x19, #16]
   18700:	str	x19, [x8, #24]
   18704:	str	x19, [x21, #16]
   18708:	ldr	x8, [x20, #96]
   1870c:	add	x9, x8, #0x1
   18710:	adds	x8, x9, x9, lsr #1
   18714:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   18718:	cmp	x8, x23
   1871c:	str	x9, [x20, #96]
   18720:	b.ls	18780 <idpriv_temp_restore@@Base+0xe18>  // b.plast
   18724:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   18728:	mov	x9, xzr
   1872c:	add	x10, x10, #0x548
   18730:	ldr	x21, [x10, x9]
   18734:	cmp	x21, x8
   18738:	b.cs	1874c <idpriv_temp_restore@@Base+0xde4>  // b.hs, b.nlast
   1873c:	add	x9, x9, #0x8
   18740:	cmp	x9, #0x740
   18744:	b.ne	18730 <idpriv_temp_restore@@Base+0xdc8>  // b.any
   18748:	mov	x21, #0xffffffffffffffff    	// #-1
   1874c:	cmp	x21, x23
   18750:	b.ls	18780 <idpriv_temp_restore@@Base+0xe18>  // b.plast
   18754:	lsr	x8, x21, #61
   18758:	cbnz	x8, 18780 <idpriv_temp_restore@@Base+0xe18>
   1875c:	ldr	x22, [x20, #40]
   18760:	mov	w1, #0x8                   	// #8
   18764:	mov	x0, x21
   18768:	bl	a6c0 <calloc@plt>
   1876c:	cbz	x0, 18780 <idpriv_temp_restore@@Base+0xe18>
   18770:	cbnz	x23, 1879c <idpriv_temp_restore@@Base+0xe34>
   18774:	stp	x0, x21, [x20, #40]
   18778:	mov	x0, x22
   1877c:	bl	a970 <free@plt>
   18780:	mov	x0, x19
   18784:	ldp	x20, x19, [sp, #48]
   18788:	ldp	x22, x21, [sp, #32]
   1878c:	ldr	x23, [sp, #16]
   18790:	ldp	x29, x30, [sp], #64
   18794:	ret
   18798:	cbz	x23, 18774 <idpriv_temp_restore@@Base+0xe0c>
   1879c:	sub	x23, x23, #0x1
   187a0:	ldr	x8, [x22, x23, lsl #3]
   187a4:	cbz	x8, 18798 <idpriv_temp_restore@@Base+0xe30>
   187a8:	ldp	x11, x9, [x8]
   187ac:	udiv	x10, x9, x21
   187b0:	msub	x9, x10, x21, x9
   187b4:	lsl	x9, x9, #3
   187b8:	ldr	x10, [x0, x9]
   187bc:	str	x10, [x8]
   187c0:	str	x8, [x0, x9]
   187c4:	mov	x8, x11
   187c8:	cbnz	x11, 187a8 <idpriv_temp_restore@@Base+0xe40>
   187cc:	b	18798 <idpriv_temp_restore@@Base+0xe30>
   187d0:	stp	x29, x30, [sp, #-64]!
   187d4:	stp	x24, x23, [sp, #16]
   187d8:	stp	x22, x21, [sp, #32]
   187dc:	stp	x20, x19, [sp, #48]
   187e0:	ldr	x24, [x0, #96]
   187e4:	mov	x29, sp
   187e8:	cmp	x24, x1
   187ec:	b.cc	18970 <idpriv_temp_restore@@Base+0x1008>  // b.lo, b.ul, b.last
   187f0:	mov	x20, x0
   187f4:	mov	w0, #0x28                  	// #40
   187f8:	mov	x21, x1
   187fc:	mov	x22, x2
   18800:	bl	a550 <malloc@plt>
   18804:	mov	x19, x0
   18808:	cbz	x0, 18920 <idpriv_temp_restore@@Base+0xfb8>
   1880c:	str	x22, [x19, #32]
   18810:	ldr	x8, [x20, #16]
   18814:	cbz	x8, 18824 <idpriv_temp_restore@@Base+0xebc>
   18818:	mov	x0, x22
   1881c:	blr	x8
   18820:	mov	x22, x0
   18824:	str	x22, [x19, #8]
   18828:	ldp	x8, x23, [x20, #40]
   1882c:	cmp	x21, x24, lsr #1
   18830:	udiv	x9, x22, x23
   18834:	msub	x9, x9, x23, x22
   18838:	lsl	x9, x9, #3
   1883c:	ldr	x10, [x8, x9]
   18840:	str	x10, [x19]
   18844:	str	x19, [x8, x9]
   18848:	b.ls	1887c <idpriv_temp_restore@@Base+0xf14>  // b.plast
   1884c:	cmp	x24, x21
   18850:	add	x8, x20, #0x38
   18854:	b.eq	18868 <idpriv_temp_restore@@Base+0xf00>  // b.none
   18858:	sub	x9, x21, x24
   1885c:	ldr	x8, [x8, #24]
   18860:	adds	x9, x9, #0x1
   18864:	b.cc	1885c <idpriv_temp_restore@@Base+0xef4>  // b.lo, b.ul, b.last
   18868:	str	x8, [x19, #16]
   1886c:	ldr	x9, [x8, #24]!
   18870:	str	x9, [x19, #24]
   18874:	add	x9, x9, #0x10
   18878:	b	188a0 <idpriv_temp_restore@@Base+0xf38>
   1887c:	add	x8, x20, #0x38
   18880:	cbz	x21, 18890 <idpriv_temp_restore@@Base+0xf28>
   18884:	ldr	x8, [x8, #16]
   18888:	subs	x21, x21, #0x1
   1888c:	b.ne	18884 <idpriv_temp_restore@@Base+0xf1c>  // b.any
   18890:	str	x8, [x19, #24]
   18894:	ldr	x9, [x8, #16]!
   18898:	str	x9, [x19, #16]
   1889c:	add	x9, x9, #0x18
   188a0:	str	x19, [x9]
   188a4:	str	x19, [x8]
   188a8:	ldr	x8, [x20, #96]
   188ac:	add	x9, x8, #0x1
   188b0:	adds	x8, x9, x9, lsr #1
   188b4:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   188b8:	cmp	x8, x23
   188bc:	str	x9, [x20, #96]
   188c0:	b.ls	18920 <idpriv_temp_restore@@Base+0xfb8>  // b.plast
   188c4:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   188c8:	mov	x9, xzr
   188cc:	add	x10, x10, #0x548
   188d0:	ldr	x21, [x10, x9]
   188d4:	cmp	x21, x8
   188d8:	b.cs	188ec <idpriv_temp_restore@@Base+0xf84>  // b.hs, b.nlast
   188dc:	add	x9, x9, #0x8
   188e0:	cmp	x9, #0x740
   188e4:	b.ne	188d0 <idpriv_temp_restore@@Base+0xf68>  // b.any
   188e8:	mov	x21, #0xffffffffffffffff    	// #-1
   188ec:	cmp	x21, x23
   188f0:	b.ls	18920 <idpriv_temp_restore@@Base+0xfb8>  // b.plast
   188f4:	lsr	x8, x21, #61
   188f8:	cbnz	x8, 18920 <idpriv_temp_restore@@Base+0xfb8>
   188fc:	ldr	x22, [x20, #40]
   18900:	mov	w1, #0x8                   	// #8
   18904:	mov	x0, x21
   18908:	bl	a6c0 <calloc@plt>
   1890c:	cbz	x0, 18920 <idpriv_temp_restore@@Base+0xfb8>
   18910:	cbnz	x23, 1893c <idpriv_temp_restore@@Base+0xfd4>
   18914:	stp	x0, x21, [x20, #40]
   18918:	mov	x0, x22
   1891c:	bl	a970 <free@plt>
   18920:	mov	x0, x19
   18924:	ldp	x20, x19, [sp, #48]
   18928:	ldp	x22, x21, [sp, #32]
   1892c:	ldp	x24, x23, [sp, #16]
   18930:	ldp	x29, x30, [sp], #64
   18934:	ret
   18938:	cbz	x23, 18914 <idpriv_temp_restore@@Base+0xfac>
   1893c:	sub	x23, x23, #0x1
   18940:	ldr	x8, [x22, x23, lsl #3]
   18944:	cbz	x8, 18938 <idpriv_temp_restore@@Base+0xfd0>
   18948:	ldp	x11, x9, [x8]
   1894c:	udiv	x10, x9, x21
   18950:	msub	x9, x10, x21, x9
   18954:	lsl	x9, x9, #3
   18958:	ldr	x10, [x0, x9]
   1895c:	str	x10, [x8]
   18960:	str	x8, [x0, x9]
   18964:	mov	x8, x11
   18968:	cbnz	x11, 18948 <idpriv_temp_restore@@Base+0xfe0>
   1896c:	b	18938 <idpriv_temp_restore@@Base+0xfd0>
   18970:	bl	a850 <abort@plt>
   18974:	stp	x29, x30, [sp, #-32]!
   18978:	str	x19, [sp, #16]
   1897c:	ldp	x10, x8, [x0, #40]
   18980:	ldr	x9, [x1, #8]
   18984:	mov	x19, x1
   18988:	mov	x29, sp
   1898c:	udiv	x11, x9, x8
   18990:	msub	x8, x11, x8, x9
   18994:	add	x8, x10, x8, lsl #3
   18998:	ldr	x9, [x8]
   1899c:	cmp	x9, x1
   189a0:	b.eq	189b8 <idpriv_temp_restore@@Base+0x1050>  // b.none
   189a4:	cbz	x9, 18a00 <idpriv_temp_restore@@Base+0x1098>
   189a8:	mov	x8, x9
   189ac:	ldr	x9, [x9]
   189b0:	cmp	x9, x19
   189b4:	b.ne	189a4 <idpriv_temp_restore@@Base+0x103c>  // b.any
   189b8:	ldr	x9, [x19]
   189bc:	str	x9, [x8]
   189c0:	ldp	x9, x8, [x19, #16]
   189c4:	str	x9, [x8, #16]
   189c8:	str	x8, [x9, #24]
   189cc:	ldr	x9, [x0, #96]
   189d0:	ldr	x8, [x0, #24]
   189d4:	sub	x9, x9, #0x1
   189d8:	str	x9, [x0, #96]
   189dc:	cbz	x8, 189e8 <idpriv_temp_restore@@Base+0x1080>
   189e0:	ldr	x0, [x19, #32]
   189e4:	blr	x8
   189e8:	mov	x0, x19
   189ec:	bl	a970 <free@plt>
   189f0:	ldr	x19, [sp, #16]
   189f4:	mov	w0, #0x1                   	// #1
   189f8:	ldp	x29, x30, [sp], #32
   189fc:	ret
   18a00:	bl	a850 <abort@plt>
   18a04:	stp	x29, x30, [sp, #-32]!
   18a08:	ldr	x9, [x0, #96]
   18a0c:	str	x19, [sp, #16]
   18a10:	mov	x29, sp
   18a14:	cmp	x9, x1
   18a18:	b.ls	18ad8 <idpriv_temp_restore@@Base+0x1170>  // b.plast
   18a1c:	sub	x8, x9, #0x1
   18a20:	add	x19, x0, #0x38
   18a24:	cmp	x1, x8, lsr #1
   18a28:	b.ls	18a50 <idpriv_temp_restore@@Base+0x10e8>  // b.plast
   18a2c:	sub	x9, x1, x9
   18a30:	mov	x10, x19
   18a34:	ldr	x19, [x19, #24]
   18a38:	adds	x9, x9, #0x1
   18a3c:	b.cc	18a30 <idpriv_temp_restore@@Base+0x10c8>  // b.lo, b.ul, b.last
   18a40:	ldr	x9, [x19, #24]
   18a44:	str	x9, [x10, #24]
   18a48:	str	x10, [x9, #16]
   18a4c:	b	18a70 <idpriv_temp_restore@@Base+0x1108>
   18a50:	add	x9, x1, #0x1
   18a54:	mov	x10, x19
   18a58:	ldr	x19, [x19, #16]
   18a5c:	subs	x9, x9, #0x1
   18a60:	b.ne	18a54 <idpriv_temp_restore@@Base+0x10ec>  // b.any
   18a64:	ldr	x9, [x19, #16]
   18a68:	str	x9, [x10, #16]
   18a6c:	str	x10, [x9, #24]
   18a70:	ldp	x11, x9, [x0, #40]
   18a74:	ldr	x10, [x19, #8]
   18a78:	udiv	x12, x10, x9
   18a7c:	msub	x9, x12, x9, x10
   18a80:	add	x9, x11, x9, lsl #3
   18a84:	ldr	x10, [x9]
   18a88:	cmp	x10, x19
   18a8c:	b.eq	18aa4 <idpriv_temp_restore@@Base+0x113c>  // b.none
   18a90:	cbz	x10, 18ad8 <idpriv_temp_restore@@Base+0x1170>
   18a94:	mov	x9, x10
   18a98:	ldr	x10, [x9]
   18a9c:	cmp	x10, x19
   18aa0:	b.ne	18a90 <idpriv_temp_restore@@Base+0x1128>  // b.any
   18aa4:	ldr	x10, [x19]
   18aa8:	str	x10, [x9]
   18aac:	ldr	x9, [x0, #24]
   18ab0:	str	x8, [x0, #96]
   18ab4:	cbz	x9, 18ac0 <idpriv_temp_restore@@Base+0x1158>
   18ab8:	ldr	x0, [x19, #32]
   18abc:	blr	x9
   18ac0:	mov	x0, x19
   18ac4:	bl	a970 <free@plt>
   18ac8:	ldr	x19, [sp, #16]
   18acc:	mov	w0, #0x1                   	// #1
   18ad0:	ldp	x29, x30, [sp], #32
   18ad4:	ret
   18ad8:	bl	a850 <abort@plt>
   18adc:	stp	x29, x30, [sp, #-48]!
   18ae0:	stp	x20, x19, [sp, #32]
   18ae4:	str	x21, [sp, #16]
   18ae8:	ldr	x21, [x0, #96]
   18aec:	mov	x3, x1
   18af0:	mov	x1, xzr
   18af4:	mov	x29, sp
   18af8:	mov	x2, x21
   18afc:	mov	x20, x0
   18b00:	bl	17f24 <idpriv_temp_restore@@Base+0x5bc>
   18b04:	cbz	x0, 18b78 <idpriv_temp_restore@@Base+0x1210>
   18b08:	ldp	x10, x8, [x20, #40]
   18b0c:	ldr	x9, [x0, #8]
   18b10:	mov	x19, x0
   18b14:	udiv	x11, x9, x8
   18b18:	msub	x8, x11, x8, x9
   18b1c:	add	x8, x10, x8, lsl #3
   18b20:	ldr	x9, [x8]
   18b24:	cmp	x9, x19
   18b28:	b.eq	18b40 <idpriv_temp_restore@@Base+0x11d8>  // b.none
   18b2c:	cbz	x9, 18b88 <idpriv_temp_restore@@Base+0x1220>
   18b30:	mov	x8, x9
   18b34:	ldr	x9, [x8]
   18b38:	cmp	x9, x19
   18b3c:	b.ne	18b2c <idpriv_temp_restore@@Base+0x11c4>  // b.any
   18b40:	ldr	x9, [x19]
   18b44:	str	x9, [x8]
   18b48:	ldp	x9, x8, [x19, #16]
   18b4c:	str	x9, [x8, #16]
   18b50:	str	x8, [x9, #24]
   18b54:	ldr	x8, [x20, #24]
   18b58:	sub	x9, x21, #0x1
   18b5c:	str	x9, [x20, #96]
   18b60:	cbz	x8, 18b6c <idpriv_temp_restore@@Base+0x1204>
   18b64:	ldr	x0, [x19, #32]
   18b68:	blr	x8
   18b6c:	mov	x0, x19
   18b70:	bl	a970 <free@plt>
   18b74:	mov	w0, #0x1                   	// #1
   18b78:	ldp	x20, x19, [sp, #32]
   18b7c:	ldr	x21, [sp, #16]
   18b80:	ldp	x29, x30, [sp], #48
   18b84:	ret
   18b88:	bl	a850 <abort@plt>
   18b8c:	stp	x29, x30, [sp, #-64]!
   18b90:	stp	x22, x21, [sp, #32]
   18b94:	stp	x20, x19, [sp, #48]
   18b98:	ldr	x20, [x0, #72]
   18b9c:	add	x21, x0, #0x38
   18ba0:	mov	x19, x0
   18ba4:	str	x23, [sp, #16]
   18ba8:	cmp	x20, x21
   18bac:	mov	x29, sp
   18bb0:	b.eq	18bf8 <idpriv_temp_restore@@Base+0x1290>  // b.none
   18bb4:	ldr	x22, [x19, #24]
   18bb8:	cbz	x22, 18be0 <idpriv_temp_restore@@Base+0x1278>
   18bbc:	ldr	x0, [x20, #32]
   18bc0:	ldr	x23, [x20, #16]
   18bc4:	blr	x22
   18bc8:	mov	x0, x20
   18bcc:	bl	a970 <free@plt>
   18bd0:	cmp	x23, x21
   18bd4:	mov	x20, x23
   18bd8:	b.ne	18bbc <idpriv_temp_restore@@Base+0x1254>  // b.any
   18bdc:	b	18bf8 <idpriv_temp_restore@@Base+0x1290>
   18be0:	ldr	x22, [x20, #16]
   18be4:	mov	x0, x20
   18be8:	bl	a970 <free@plt>
   18bec:	cmp	x22, x21
   18bf0:	mov	x20, x22
   18bf4:	b.ne	18be0 <idpriv_temp_restore@@Base+0x1278>  // b.any
   18bf8:	ldr	x0, [x19, #40]
   18bfc:	bl	a970 <free@plt>
   18c00:	mov	x0, x19
   18c04:	ldp	x20, x19, [sp, #48]
   18c08:	ldp	x22, x21, [sp, #32]
   18c0c:	ldr	x23, [sp, #16]
   18c10:	ldp	x29, x30, [sp], #64
   18c14:	b	a970 <free@plt>
   18c18:	ldr	x9, [x0]
   18c1c:	add	x10, x0, #0x38
   18c20:	stp	x9, x0, [x8]
   18c24:	ldr	x9, [x0, #72]
   18c28:	stp	x9, x10, [x8, #24]
   18c2c:	ret
   18c30:	stp	x29, x30, [sp, #-16]!
   18c34:	subs	x10, x2, x1
   18c38:	mov	x29, sp
   18c3c:	b.cc	18d18 <idpriv_temp_restore@@Base+0x13b0>  // b.lo, b.ul, b.last
   18c40:	ldr	x11, [x0, #96]
   18c44:	subs	x12, x11, x2
   18c48:	b.cc	18d18 <idpriv_temp_restore@@Base+0x13b0>  // b.lo, b.ul, b.last
   18c4c:	ldr	x9, [x0]
   18c50:	cmp	x10, x1
   18c54:	stp	x9, x0, [x8]
   18c58:	b.cs	18ca0 <idpriv_temp_restore@@Base+0x1338>  // b.hs, b.nlast
   18c5c:	cmp	x12, x1
   18c60:	b.cs	18ca0 <idpriv_temp_restore@@Base+0x1338>  // b.hs, b.nlast
   18c64:	add	x9, x0, #0x38
   18c68:	cbz	x12, 18c7c <idpriv_temp_restore@@Base+0x1314>
   18c6c:	sub	x11, x2, x11
   18c70:	ldr	x9, [x9, #24]
   18c74:	adds	x11, x11, #0x1
   18c78:	b.cc	18c70 <idpriv_temp_restore@@Base+0x1308>  // b.lo, b.ul, b.last
   18c7c:	str	x9, [x8, #32]
   18c80:	cbz	x10, 18c94 <idpriv_temp_restore@@Base+0x132c>
   18c84:	sub	x10, x1, x2
   18c88:	ldr	x9, [x9, #24]
   18c8c:	adds	x10, x10, #0x1
   18c90:	b.cc	18c88 <idpriv_temp_restore@@Base+0x1320>  // b.lo, b.ul, b.last
   18c94:	str	x9, [x8, #24]!
   18c98:	ldp	x29, x30, [sp], #16
   18c9c:	ret
   18ca0:	cmp	x10, x12
   18ca4:	b.ls	18cdc <idpriv_temp_restore@@Base+0x1374>  // b.plast
   18ca8:	ldr	x10, [x0, #72]
   18cac:	add	x9, x0, #0x38
   18cb0:	cbz	x1, 18cc0 <idpriv_temp_restore@@Base+0x1358>
   18cb4:	ldr	x10, [x10, #16]
   18cb8:	subs	x1, x1, #0x1
   18cbc:	b.ne	18cb4 <idpriv_temp_restore@@Base+0x134c>  // b.any
   18cc0:	str	x10, [x8, #24]
   18cc4:	cbz	x12, 18d0c <idpriv_temp_restore@@Base+0x13a4>
   18cc8:	sub	x10, x2, x11
   18ccc:	ldr	x9, [x9, #24]
   18cd0:	adds	x10, x10, #0x1
   18cd4:	b.cc	18ccc <idpriv_temp_restore@@Base+0x1364>  // b.lo, b.ul, b.last
   18cd8:	b	18d0c <idpriv_temp_restore@@Base+0x13a4>
   18cdc:	ldr	x9, [x0, #72]
   18ce0:	cbz	x1, 18cf4 <idpriv_temp_restore@@Base+0x138c>
   18ce4:	mov	x11, x1
   18ce8:	ldr	x9, [x9, #16]
   18cec:	subs	x11, x11, #0x1
   18cf0:	b.ne	18ce8 <idpriv_temp_restore@@Base+0x1380>  // b.any
   18cf4:	str	x9, [x8, #24]
   18cf8:	cbz	x10, 18d0c <idpriv_temp_restore@@Base+0x13a4>
   18cfc:	sub	x10, x1, x2
   18d00:	ldr	x9, [x9, #16]
   18d04:	adds	x10, x10, #0x1
   18d08:	b.cc	18d00 <idpriv_temp_restore@@Base+0x1398>  // b.lo, b.ul, b.last
   18d0c:	str	x9, [x8, #32]!
   18d10:	ldp	x29, x30, [sp], #16
   18d14:	ret
   18d18:	bl	a850 <abort@plt>
   18d1c:	ldp	x8, x9, [x0, #24]
   18d20:	cmp	x8, x9
   18d24:	b.eq	18d48 <idpriv_temp_restore@@Base+0x13e0>  // b.none
   18d28:	ldr	x9, [x8, #32]
   18d2c:	str	x9, [x1]
   18d30:	cbz	x2, 18d38 <idpriv_temp_restore@@Base+0x13d0>
   18d34:	str	x8, [x2]
   18d38:	ldr	x8, [x8, #16]
   18d3c:	str	x8, [x0, #24]
   18d40:	mov	w0, #0x1                   	// #1
   18d44:	ret
   18d48:	mov	w0, wzr
   18d4c:	ret
   18d50:	ret
   18d54:	stp	x29, x30, [sp, #-64]!
   18d58:	stp	x24, x23, [sp, #16]
   18d5c:	stp	x22, x21, [sp, #32]
   18d60:	stp	x20, x19, [sp, #48]
   18d64:	ldr	x22, [x0, #72]
   18d68:	add	x23, x0, #0x38
   18d6c:	mov	x29, sp
   18d70:	cmp	x22, x23
   18d74:	b.eq	18dc0 <idpriv_temp_restore@@Base+0x1458>  // b.none
   18d78:	mov	x20, x2
   18d7c:	mov	x21, x1
   18d80:	mov	w24, #0x2                   	// #2
   18d84:	ldr	x0, [x22, #32]
   18d88:	mov	x1, x20
   18d8c:	blr	x21
   18d90:	cmp	w0, #0x0
   18d94:	cset	w8, eq  // eq = none
   18d98:	csel	x9, x22, x19, eq  // eq = none
   18d9c:	csel	w8, w24, w8, gt
   18da0:	csel	x19, x19, x9, gt
   18da4:	cbnz	w8, 18db8 <idpriv_temp_restore@@Base+0x1450>
   18da8:	ldr	x22, [x22, #16]
   18dac:	cmp	x22, x23
   18db0:	b.ne	18d84 <idpriv_temp_restore@@Base+0x141c>  // b.any
   18db4:	b	18dc0 <idpriv_temp_restore@@Base+0x1458>
   18db8:	cmp	w8, #0x2
   18dbc:	b.ne	18dc4 <idpriv_temp_restore@@Base+0x145c>  // b.any
   18dc0:	mov	x19, xzr
   18dc4:	mov	x0, x19
   18dc8:	ldp	x20, x19, [sp, #48]
   18dcc:	ldp	x22, x21, [sp, #32]
   18dd0:	ldp	x24, x23, [sp, #16]
   18dd4:	ldp	x29, x30, [sp], #64
   18dd8:	ret
   18ddc:	stp	x29, x30, [sp, #-48]!
   18de0:	cmp	x3, x2
   18de4:	stp	x22, x21, [sp, #16]
   18de8:	stp	x20, x19, [sp, #32]
   18dec:	mov	x29, sp
   18df0:	b.cc	18e98 <idpriv_temp_restore@@Base+0x1530>  // b.lo, b.ul, b.last
   18df4:	ldr	x8, [x0, #96]
   18df8:	cmp	x8, x3
   18dfc:	b.cc	18e98 <idpriv_temp_restore@@Base+0x1530>  // b.lo, b.ul, b.last
   18e00:	cmp	x3, x2
   18e04:	b.eq	18e80 <idpriv_temp_restore@@Base+0x1518>  // b.none
   18e08:	sub	x9, x8, #0x1
   18e0c:	mov	x19, x4
   18e10:	mov	x20, x1
   18e14:	cmp	x2, x9, lsr #1
   18e18:	b.ls	18e40 <idpriv_temp_restore@@Base+0x14d8>  // b.plast
   18e1c:	ldr	x21, [x0, #80]
   18e20:	cmp	x9, x2
   18e24:	b.eq	18e58 <idpriv_temp_restore@@Base+0x14f0>  // b.none
   18e28:	sub	x8, x2, x8
   18e2c:	add	x8, x8, #0x1
   18e30:	ldr	x21, [x21, #24]
   18e34:	adds	x8, x8, #0x1
   18e38:	b.cc	18e30 <idpriv_temp_restore@@Base+0x14c8>  // b.lo, b.ul, b.last
   18e3c:	b	18e58 <idpriv_temp_restore@@Base+0x14f0>
   18e40:	ldr	x21, [x0, #72]
   18e44:	cbz	x2, 18e58 <idpriv_temp_restore@@Base+0x14f0>
   18e48:	mov	x8, x2
   18e4c:	ldr	x21, [x21, #16]
   18e50:	subs	x8, x8, #0x1
   18e54:	b.ne	18e4c <idpriv_temp_restore@@Base+0x14e4>  // b.any
   18e58:	sub	x22, x2, x3
   18e5c:	ldr	x0, [x21, #32]
   18e60:	mov	x1, x19
   18e64:	blr	x20
   18e68:	cmp	w0, #0x0
   18e6c:	b.gt	18e80 <idpriv_temp_restore@@Base+0x1518>
   18e70:	cbz	w0, 18e84 <idpriv_temp_restore@@Base+0x151c>
   18e74:	ldr	x21, [x21, #16]
   18e78:	adds	x22, x22, #0x1
   18e7c:	b.cc	18e5c <idpriv_temp_restore@@Base+0x14f4>  // b.lo, b.ul, b.last
   18e80:	mov	x21, xzr
   18e84:	mov	x0, x21
   18e88:	ldp	x20, x19, [sp, #32]
   18e8c:	ldp	x22, x21, [sp, #16]
   18e90:	ldp	x29, x30, [sp], #48
   18e94:	ret
   18e98:	bl	a850 <abort@plt>
   18e9c:	stp	x29, x30, [sp, #-80]!
   18ea0:	stp	x24, x23, [sp, #32]
   18ea4:	stp	x22, x21, [sp, #48]
   18ea8:	stp	x20, x19, [sp, #64]
   18eac:	ldr	x22, [x0, #72]
   18eb0:	add	x23, x0, #0x38
   18eb4:	str	x25, [sp, #16]
   18eb8:	mov	x29, sp
   18ebc:	cmp	x22, x23
   18ec0:	b.eq	18f14 <idpriv_temp_restore@@Base+0x15ac>  // b.none
   18ec4:	mov	x20, x2
   18ec8:	mov	x21, x1
   18ecc:	mov	x24, xzr
   18ed0:	mov	w25, #0x2                   	// #2
   18ed4:	ldr	x0, [x22, #32]
   18ed8:	mov	x1, x20
   18edc:	blr	x21
   18ee0:	cmp	w0, #0x0
   18ee4:	cset	w8, eq  // eq = none
   18ee8:	csel	x9, x24, x19, eq  // eq = none
   18eec:	csel	w8, w25, w8, gt
   18ef0:	csel	x19, x19, x9, gt
   18ef4:	cbnz	w8, 18f0c <idpriv_temp_restore@@Base+0x15a4>
   18ef8:	ldr	x22, [x22, #16]
   18efc:	add	x24, x24, #0x1
   18f00:	cmp	x22, x23
   18f04:	b.ne	18ed4 <idpriv_temp_restore@@Base+0x156c>  // b.any
   18f08:	b	18f14 <idpriv_temp_restore@@Base+0x15ac>
   18f0c:	cmp	w8, #0x2
   18f10:	b.ne	18f18 <idpriv_temp_restore@@Base+0x15b0>  // b.any
   18f14:	mov	x19, #0xffffffffffffffff    	// #-1
   18f18:	mov	x0, x19
   18f1c:	ldp	x20, x19, [sp, #64]
   18f20:	ldp	x22, x21, [sp, #48]
   18f24:	ldp	x24, x23, [sp, #32]
   18f28:	ldr	x25, [sp, #16]
   18f2c:	ldp	x29, x30, [sp], #80
   18f30:	ret
   18f34:	stp	x29, x30, [sp, #-64]!
   18f38:	cmp	x3, x2
   18f3c:	str	x23, [sp, #16]
   18f40:	stp	x22, x21, [sp, #32]
   18f44:	stp	x20, x19, [sp, #48]
   18f48:	mov	x29, sp
   18f4c:	b.cc	19004 <idpriv_temp_restore@@Base+0x169c>  // b.lo, b.ul, b.last
   18f50:	ldr	x8, [x0, #96]
   18f54:	mov	x21, x3
   18f58:	cmp	x8, x3
   18f5c:	b.cc	19004 <idpriv_temp_restore@@Base+0x169c>  // b.lo, b.ul, b.last
   18f60:	mov	x19, x2
   18f64:	cmp	x21, x2
   18f68:	b.eq	18fe8 <idpriv_temp_restore@@Base+0x1680>  // b.none
   18f6c:	sub	x9, x8, #0x1
   18f70:	mov	x20, x4
   18f74:	mov	x22, x1
   18f78:	cmp	x19, x9, lsr #1
   18f7c:	b.ls	18fa4 <idpriv_temp_restore@@Base+0x163c>  // b.plast
   18f80:	ldr	x23, [x0, #80]
   18f84:	cmp	x9, x19
   18f88:	b.eq	18fd4 <idpriv_temp_restore@@Base+0x166c>  // b.none
   18f8c:	sub	x8, x19, x8
   18f90:	add	x8, x8, #0x1
   18f94:	ldr	x23, [x23, #24]
   18f98:	adds	x8, x8, #0x1
   18f9c:	b.cc	18f94 <idpriv_temp_restore@@Base+0x162c>  // b.lo, b.ul, b.last
   18fa0:	b	18fd4 <idpriv_temp_restore@@Base+0x166c>
   18fa4:	ldr	x23, [x0, #72]
   18fa8:	cbz	x19, 18fd4 <idpriv_temp_restore@@Base+0x166c>
   18fac:	mov	x8, x19
   18fb0:	ldr	x23, [x23, #16]
   18fb4:	subs	x8, x8, #0x1
   18fb8:	b.ne	18fb0 <idpriv_temp_restore@@Base+0x1648>  // b.any
   18fbc:	b	18fd4 <idpriv_temp_restore@@Base+0x166c>
   18fc0:	cbz	w0, 18fec <idpriv_temp_restore@@Base+0x1684>
   18fc4:	ldr	x23, [x23, #16]
   18fc8:	add	x19, x19, #0x1
   18fcc:	cmp	x21, x19
   18fd0:	b.eq	18fe8 <idpriv_temp_restore@@Base+0x1680>  // b.none
   18fd4:	ldr	x0, [x23, #32]
   18fd8:	mov	x1, x20
   18fdc:	blr	x22
   18fe0:	cmp	w0, #0x0
   18fe4:	b.le	18fc0 <idpriv_temp_restore@@Base+0x1658>
   18fe8:	mov	x19, #0xffffffffffffffff    	// #-1
   18fec:	mov	x0, x19
   18ff0:	ldp	x20, x19, [sp, #48]
   18ff4:	ldp	x22, x21, [sp, #32]
   18ff8:	ldr	x23, [sp, #16]
   18ffc:	ldp	x29, x30, [sp], #64
   19000:	ret
   19004:	bl	a850 <abort@plt>
   19008:	stp	x29, x30, [sp, #-64]!
   1900c:	stp	x24, x23, [sp, #16]
   19010:	stp	x22, x21, [sp, #32]
   19014:	stp	x20, x19, [sp, #48]
   19018:	ldr	x22, [x0, #72]
   1901c:	add	x24, x0, #0x38
   19020:	mov	x21, x2
   19024:	mov	x19, x0
   19028:	cmp	x22, x24
   1902c:	mov	x29, sp
   19030:	b.eq	19054 <idpriv_temp_restore@@Base+0x16ec>  // b.none
   19034:	mov	x20, x1
   19038:	ldr	x0, [x22, #32]
   1903c:	mov	x1, x21
   19040:	blr	x20
   19044:	tbz	w0, #31, 19160 <idpriv_temp_restore@@Base+0x17f8>
   19048:	ldr	x22, [x22, #16]
   1904c:	cmp	x22, x24
   19050:	b.ne	19038 <idpriv_temp_restore@@Base+0x16d0>  // b.any
   19054:	mov	w0, #0x28                  	// #40
   19058:	bl	a550 <malloc@plt>
   1905c:	mov	x20, x0
   19060:	cbz	x0, 1925c <idpriv_temp_restore@@Base+0x18f4>
   19064:	str	x21, [x20, #32]
   19068:	ldr	x8, [x19, #16]
   1906c:	cbz	x8, 1907c <idpriv_temp_restore@@Base+0x1714>
   19070:	mov	x0, x21
   19074:	blr	x8
   19078:	mov	x21, x0
   1907c:	str	x21, [x20, #8]
   19080:	ldp	x8, x23, [x19, #40]
   19084:	udiv	x9, x21, x23
   19088:	msub	x9, x9, x23, x21
   1908c:	lsl	x9, x9, #3
   19090:	ldr	x10, [x8, x9]
   19094:	str	x10, [x20]
   19098:	str	x20, [x8, x9]
   1909c:	ldr	x8, [x19, #80]
   190a0:	stp	x24, x8, [x20, #16]
   190a4:	str	x20, [x8, #16]
   190a8:	ldr	x8, [x19, #96]
   190ac:	str	x20, [x19, #80]
   190b0:	add	x9, x8, #0x1
   190b4:	adds	x8, x9, x9, lsr #1
   190b8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   190bc:	cmp	x8, x23
   190c0:	str	x9, [x19, #96]
   190c4:	b.ls	1925c <idpriv_temp_restore@@Base+0x18f4>  // b.plast
   190c8:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   190cc:	mov	x9, xzr
   190d0:	add	x10, x10, #0x548
   190d4:	ldr	x21, [x10, x9]
   190d8:	cmp	x21, x8
   190dc:	b.cs	190f0 <idpriv_temp_restore@@Base+0x1788>  // b.hs, b.nlast
   190e0:	add	x9, x9, #0x8
   190e4:	cmp	x9, #0x740
   190e8:	b.ne	190d4 <idpriv_temp_restore@@Base+0x176c>  // b.any
   190ec:	mov	x21, #0xffffffffffffffff    	// #-1
   190f0:	cmp	x21, x23
   190f4:	b.ls	1925c <idpriv_temp_restore@@Base+0x18f4>  // b.plast
   190f8:	lsr	x8, x21, #61
   190fc:	cbnz	x8, 1925c <idpriv_temp_restore@@Base+0x18f4>
   19100:	ldr	x22, [x19, #40]
   19104:	mov	w1, #0x8                   	// #8
   19108:	mov	x0, x21
   1910c:	bl	a6c0 <calloc@plt>
   19110:	cbz	x0, 1925c <idpriv_temp_restore@@Base+0x18f4>
   19114:	cbnz	x23, 1912c <idpriv_temp_restore@@Base+0x17c4>
   19118:	stp	x0, x21, [x19, #40]
   1911c:	mov	x0, x22
   19120:	bl	a970 <free@plt>
   19124:	b	1925c <idpriv_temp_restore@@Base+0x18f4>
   19128:	cbz	x23, 19118 <idpriv_temp_restore@@Base+0x17b0>
   1912c:	sub	x23, x23, #0x1
   19130:	ldr	x8, [x22, x23, lsl #3]
   19134:	cbz	x8, 19128 <idpriv_temp_restore@@Base+0x17c0>
   19138:	ldp	x11, x9, [x8]
   1913c:	udiv	x10, x9, x21
   19140:	msub	x9, x10, x21, x9
   19144:	lsl	x9, x9, #3
   19148:	ldr	x10, [x0, x9]
   1914c:	str	x10, [x8]
   19150:	str	x8, [x0, x9]
   19154:	mov	x8, x11
   19158:	cbnz	x11, 19138 <idpriv_temp_restore@@Base+0x17d0>
   1915c:	b	19128 <idpriv_temp_restore@@Base+0x17c0>
   19160:	mov	w0, #0x28                  	// #40
   19164:	bl	a550 <malloc@plt>
   19168:	mov	x20, x0
   1916c:	cbz	x0, 1925c <idpriv_temp_restore@@Base+0x18f4>
   19170:	str	x21, [x20, #32]
   19174:	ldr	x8, [x19, #16]
   19178:	cbz	x8, 19188 <idpriv_temp_restore@@Base+0x1820>
   1917c:	mov	x0, x21
   19180:	blr	x8
   19184:	mov	x21, x0
   19188:	str	x21, [x20, #8]
   1918c:	ldp	x8, x23, [x19, #40]
   19190:	udiv	x9, x21, x23
   19194:	msub	x9, x9, x23, x21
   19198:	lsl	x9, x9, #3
   1919c:	ldr	x10, [x8, x9]
   191a0:	str	x10, [x20]
   191a4:	str	x20, [x8, x9]
   191a8:	str	x22, [x20, #16]
   191ac:	ldr	x8, [x22, #24]
   191b0:	str	x8, [x20, #24]
   191b4:	str	x20, [x8, #16]
   191b8:	str	x20, [x22, #24]
   191bc:	ldr	x8, [x19, #96]
   191c0:	add	x9, x8, #0x1
   191c4:	adds	x8, x9, x9, lsr #1
   191c8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   191cc:	cmp	x8, x23
   191d0:	str	x9, [x19, #96]
   191d4:	b.ls	1925c <idpriv_temp_restore@@Base+0x18f4>  // b.plast
   191d8:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   191dc:	mov	x9, xzr
   191e0:	add	x10, x10, #0x548
   191e4:	ldr	x21, [x10, x9]
   191e8:	cmp	x21, x8
   191ec:	b.cs	19200 <idpriv_temp_restore@@Base+0x1898>  // b.hs, b.nlast
   191f0:	add	x9, x9, #0x8
   191f4:	cmp	x9, #0x740
   191f8:	b.ne	191e4 <idpriv_temp_restore@@Base+0x187c>  // b.any
   191fc:	mov	x21, #0xffffffffffffffff    	// #-1
   19200:	cmp	x21, x23
   19204:	b.ls	1925c <idpriv_temp_restore@@Base+0x18f4>  // b.plast
   19208:	lsr	x8, x21, #61
   1920c:	cbnz	x8, 1925c <idpriv_temp_restore@@Base+0x18f4>
   19210:	ldr	x22, [x19, #40]
   19214:	mov	w1, #0x8                   	// #8
   19218:	mov	x0, x21
   1921c:	bl	a6c0 <calloc@plt>
   19220:	cbz	x0, 1925c <idpriv_temp_restore@@Base+0x18f4>
   19224:	cbz	x23, 19118 <idpriv_temp_restore@@Base+0x17b0>
   19228:	sub	x23, x23, #0x1
   1922c:	ldr	x8, [x22, x23, lsl #3]
   19230:	cbz	x8, 19224 <idpriv_temp_restore@@Base+0x18bc>
   19234:	ldp	x11, x9, [x8]
   19238:	udiv	x10, x9, x21
   1923c:	msub	x9, x10, x21, x9
   19240:	lsl	x9, x9, #3
   19244:	ldr	x10, [x0, x9]
   19248:	str	x10, [x8]
   1924c:	str	x8, [x0, x9]
   19250:	mov	x8, x11
   19254:	cbnz	x11, 19234 <idpriv_temp_restore@@Base+0x18cc>
   19258:	b	19224 <idpriv_temp_restore@@Base+0x18bc>
   1925c:	mov	x0, x20
   19260:	ldp	x20, x19, [sp, #48]
   19264:	ldp	x22, x21, [sp, #32]
   19268:	ldp	x24, x23, [sp, #16]
   1926c:	ldp	x29, x30, [sp], #64
   19270:	ret
   19274:	stp	x29, x30, [sp, #-64]!
   19278:	stp	x22, x21, [sp, #32]
   1927c:	stp	x20, x19, [sp, #48]
   19280:	ldr	x19, [x0, #72]
   19284:	str	x23, [sp, #16]
   19288:	add	x23, x0, #0x38
   1928c:	mov	x29, sp
   19290:	cmp	x19, x23
   19294:	b.eq	192c8 <idpriv_temp_restore@@Base+0x1960>  // b.none
   19298:	mov	x21, x2
   1929c:	mov	x20, x0
   192a0:	mov	x22, x1
   192a4:	ldr	x0, [x19, #32]
   192a8:	mov	x1, x21
   192ac:	blr	x22
   192b0:	cmp	w0, #0x0
   192b4:	b.gt	192c8 <idpriv_temp_restore@@Base+0x1960>
   192b8:	cbz	w0, 192d0 <idpriv_temp_restore@@Base+0x1968>
   192bc:	ldr	x19, [x19, #16]
   192c0:	cmp	x19, x23
   192c4:	b.ne	192a4 <idpriv_temp_restore@@Base+0x193c>  // b.any
   192c8:	mov	w0, wzr
   192cc:	b	19340 <idpriv_temp_restore@@Base+0x19d8>
   192d0:	ldp	x10, x8, [x20, #40]
   192d4:	ldr	x9, [x19, #8]
   192d8:	udiv	x11, x9, x8
   192dc:	msub	x8, x11, x8, x9
   192e0:	add	x8, x10, x8, lsl #3
   192e4:	ldr	x9, [x8]
   192e8:	cmp	x9, x19
   192ec:	b.eq	19304 <idpriv_temp_restore@@Base+0x199c>  // b.none
   192f0:	cbz	x9, 19354 <idpriv_temp_restore@@Base+0x19ec>
   192f4:	mov	x8, x9
   192f8:	ldr	x9, [x8]
   192fc:	cmp	x9, x19
   19300:	b.ne	192f0 <idpriv_temp_restore@@Base+0x1988>  // b.any
   19304:	ldr	x9, [x19]
   19308:	str	x9, [x8]
   1930c:	ldp	x9, x8, [x19, #16]
   19310:	str	x9, [x8, #16]
   19314:	str	x8, [x9, #24]
   19318:	ldr	x9, [x20, #96]
   1931c:	ldr	x8, [x20, #24]
   19320:	sub	x9, x9, #0x1
   19324:	str	x9, [x20, #96]
   19328:	cbz	x8, 19334 <idpriv_temp_restore@@Base+0x19cc>
   1932c:	ldr	x0, [x19, #32]
   19330:	blr	x8
   19334:	mov	x0, x19
   19338:	bl	a970 <free@plt>
   1933c:	mov	w0, #0x1                   	// #1
   19340:	ldp	x20, x19, [sp, #48]
   19344:	ldp	x22, x21, [sp, #32]
   19348:	ldr	x23, [sp, #16]
   1934c:	ldp	x29, x30, [sp], #64
   19350:	ret
   19354:	bl	a850 <abort@plt>
   19358:	stp	x29, x30, [sp, #-48]!
   1935c:	stp	x22, x21, [sp, #16]
   19360:	stp	x20, x19, [sp, #32]
   19364:	ldr	x8, [x0, #96]
   19368:	ldr	x22, [x0, #48]
   1936c:	mov	x29, sp
   19370:	adds	x8, x8, x8, lsr #1
   19374:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   19378:	cmp	x8, x22
   1937c:	b.ls	19424 <idpriv_temp_restore@@Base+0x1abc>  // b.plast
   19380:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   19384:	mov	x19, x0
   19388:	mov	x9, xzr
   1938c:	add	x10, x10, #0x548
   19390:	ldr	x20, [x10, x9]
   19394:	cmp	x20, x8
   19398:	b.cs	193ac <idpriv_temp_restore@@Base+0x1a44>  // b.hs, b.nlast
   1939c:	add	x9, x9, #0x8
   193a0:	cmp	x9, #0x740
   193a4:	b.ne	19390 <idpriv_temp_restore@@Base+0x1a28>  // b.any
   193a8:	mov	x20, #0xffffffffffffffff    	// #-1
   193ac:	cmp	x20, x22
   193b0:	b.ls	19424 <idpriv_temp_restore@@Base+0x1abc>  // b.plast
   193b4:	lsr	x8, x20, #61
   193b8:	cbnz	x8, 19424 <idpriv_temp_restore@@Base+0x1abc>
   193bc:	ldr	x21, [x19, #40]
   193c0:	mov	w1, #0x8                   	// #8
   193c4:	mov	x0, x20
   193c8:	bl	a6c0 <calloc@plt>
   193cc:	cbz	x0, 19424 <idpriv_temp_restore@@Base+0x1abc>
   193d0:	cbnz	x22, 193f0 <idpriv_temp_restore@@Base+0x1a88>
   193d4:	stp	x0, x20, [x19, #40]
   193d8:	mov	x0, x21
   193dc:	ldp	x20, x19, [sp, #32]
   193e0:	ldp	x22, x21, [sp, #16]
   193e4:	ldp	x29, x30, [sp], #48
   193e8:	b	a970 <free@plt>
   193ec:	cbz	x22, 193d4 <idpriv_temp_restore@@Base+0x1a6c>
   193f0:	sub	x22, x22, #0x1
   193f4:	ldr	x8, [x21, x22, lsl #3]
   193f8:	cbz	x8, 193ec <idpriv_temp_restore@@Base+0x1a84>
   193fc:	ldp	x11, x9, [x8]
   19400:	udiv	x10, x9, x20
   19404:	msub	x9, x10, x20, x9
   19408:	lsl	x9, x9, #3
   1940c:	ldr	x10, [x0, x9]
   19410:	str	x10, [x8]
   19414:	str	x8, [x0, x9]
   19418:	mov	x8, x11
   1941c:	cbnz	x11, 193fc <idpriv_temp_restore@@Base+0x1a94>
   19420:	b	193ec <idpriv_temp_restore@@Base+0x1a84>
   19424:	ldp	x20, x19, [sp, #32]
   19428:	ldp	x22, x21, [sp, #16]
   1942c:	ldp	x29, x30, [sp], #48
   19430:	ret

0000000000019434 <gl_list_nx_create_empty@@Base>:
   19434:	ldr	x5, [x0]
   19438:	and	w4, w4, #0x1
   1943c:	br	x5

0000000000019440 <gl_list_nx_create@@Base>:
   19440:	ldr	x7, [x0, #8]
   19444:	and	w4, w4, #0x1
   19448:	br	x7

000000000001944c <gl_list_size@@Base>:
   1944c:	ldr	x8, [x0]
   19450:	ldr	x1, [x8, #16]
   19454:	br	x1

0000000000019458 <gl_list_node_value@@Base>:
   19458:	ldr	x8, [x0]
   1945c:	ldr	x2, [x8, #24]
   19460:	br	x2

0000000000019464 <gl_list_node_nx_set_value@@Base>:
   19464:	ldr	x8, [x0]
   19468:	ldr	x3, [x8, #32]
   1946c:	br	x3

0000000000019470 <gl_list_next_node@@Base>:
   19470:	ldr	x8, [x0]
   19474:	ldr	x2, [x8, #40]
   19478:	br	x2

000000000001947c <gl_list_previous_node@@Base>:
   1947c:	ldr	x8, [x0]
   19480:	ldr	x2, [x8, #48]
   19484:	br	x2

0000000000019488 <gl_list_get_at@@Base>:
   19488:	ldr	x8, [x0]
   1948c:	ldr	x2, [x8, #56]
   19490:	br	x2

0000000000019494 <gl_list_nx_set_at@@Base>:
   19494:	ldr	x8, [x0]
   19498:	ldr	x3, [x8, #64]
   1949c:	br	x3

00000000000194a0 <gl_list_search@@Base>:
   194a0:	stp	x29, x30, [sp, #-32]!
   194a4:	stp	x20, x19, [sp, #16]
   194a8:	ldr	x8, [x0]
   194ac:	mov	x29, sp
   194b0:	mov	x19, x0
   194b4:	mov	x20, x1
   194b8:	ldr	x8, [x8, #16]
   194bc:	blr	x8
   194c0:	ldr	x8, [x19]
   194c4:	mov	x2, x0
   194c8:	mov	x0, x19
   194cc:	mov	x3, x20
   194d0:	ldr	x4, [x8, #72]
   194d4:	ldp	x20, x19, [sp, #16]
   194d8:	mov	x1, xzr
   194dc:	ldp	x29, x30, [sp], #32
   194e0:	br	x4

00000000000194e4 <gl_list_search_from@@Base>:
   194e4:	stp	x29, x30, [sp, #-48]!
   194e8:	stp	x20, x19, [sp, #32]
   194ec:	ldr	x8, [x0]
   194f0:	str	x21, [sp, #16]
   194f4:	mov	x29, sp
   194f8:	mov	x19, x2
   194fc:	ldr	x8, [x8, #16]
   19500:	mov	x20, x0
   19504:	mov	x21, x1
   19508:	blr	x8
   1950c:	ldr	x8, [x20]
   19510:	mov	x2, x0
   19514:	mov	x0, x20
   19518:	mov	x1, x21
   1951c:	ldr	x4, [x8, #72]
   19520:	mov	x3, x19
   19524:	ldp	x20, x19, [sp, #32]
   19528:	ldr	x21, [sp, #16]
   1952c:	ldp	x29, x30, [sp], #48
   19530:	br	x4

0000000000019534 <gl_list_search_from_to@@Base>:
   19534:	ldr	x8, [x0]
   19538:	ldr	x4, [x8, #72]
   1953c:	br	x4

0000000000019540 <gl_list_indexof@@Base>:
   19540:	stp	x29, x30, [sp, #-32]!
   19544:	stp	x20, x19, [sp, #16]
   19548:	ldr	x8, [x0]
   1954c:	mov	x29, sp
   19550:	mov	x19, x0
   19554:	mov	x20, x1
   19558:	ldr	x8, [x8, #16]
   1955c:	blr	x8
   19560:	ldr	x8, [x19]
   19564:	mov	x2, x0
   19568:	mov	x0, x19
   1956c:	mov	x3, x20
   19570:	ldr	x4, [x8, #80]
   19574:	ldp	x20, x19, [sp, #16]
   19578:	mov	x1, xzr
   1957c:	ldp	x29, x30, [sp], #32
   19580:	br	x4

0000000000019584 <gl_list_indexof_from@@Base>:
   19584:	stp	x29, x30, [sp, #-48]!
   19588:	stp	x20, x19, [sp, #32]
   1958c:	ldr	x8, [x0]
   19590:	str	x21, [sp, #16]
   19594:	mov	x29, sp
   19598:	mov	x19, x2
   1959c:	ldr	x8, [x8, #16]
   195a0:	mov	x20, x0
   195a4:	mov	x21, x1
   195a8:	blr	x8
   195ac:	ldr	x8, [x20]
   195b0:	mov	x2, x0
   195b4:	mov	x0, x20
   195b8:	mov	x1, x21
   195bc:	ldr	x4, [x8, #80]
   195c0:	mov	x3, x19
   195c4:	ldp	x20, x19, [sp, #32]
   195c8:	ldr	x21, [sp, #16]
   195cc:	ldp	x29, x30, [sp], #48
   195d0:	br	x4

00000000000195d4 <gl_list_indexof_from_to@@Base>:
   195d4:	ldr	x8, [x0]
   195d8:	ldr	x4, [x8, #80]
   195dc:	br	x4

00000000000195e0 <gl_list_nx_add_first@@Base>:
   195e0:	ldr	x8, [x0]
   195e4:	ldr	x2, [x8, #88]
   195e8:	br	x2

00000000000195ec <gl_list_nx_add_last@@Base>:
   195ec:	ldr	x8, [x0]
   195f0:	ldr	x2, [x8, #96]
   195f4:	br	x2

00000000000195f8 <gl_list_nx_add_before@@Base>:
   195f8:	ldr	x8, [x0]
   195fc:	ldr	x3, [x8, #104]
   19600:	br	x3

0000000000019604 <gl_list_nx_add_after@@Base>:
   19604:	ldr	x8, [x0]
   19608:	ldr	x3, [x8, #112]
   1960c:	br	x3

0000000000019610 <gl_list_nx_add_at@@Base>:
   19610:	ldr	x8, [x0]
   19614:	ldr	x3, [x8, #120]
   19618:	br	x3

000000000001961c <gl_list_remove_node@@Base>:
   1961c:	ldr	x8, [x0]
   19620:	ldr	x2, [x8, #128]
   19624:	br	x2

0000000000019628 <gl_list_remove_at@@Base>:
   19628:	ldr	x8, [x0]
   1962c:	ldr	x2, [x8, #136]
   19630:	br	x2

0000000000019634 <gl_list_remove@@Base>:
   19634:	ldr	x8, [x0]
   19638:	ldr	x2, [x8, #144]
   1963c:	br	x2

0000000000019640 <gl_list_free@@Base>:
   19640:	ldr	x8, [x0]
   19644:	ldr	x1, [x8, #152]
   19648:	br	x1

000000000001964c <gl_list_iterator@@Base>:
   1964c:	ldr	x9, [x0]
   19650:	ldr	x1, [x9, #160]
   19654:	br	x1

0000000000019658 <gl_list_iterator_from_to@@Base>:
   19658:	ldr	x9, [x0]
   1965c:	ldr	x3, [x9, #168]
   19660:	br	x3

0000000000019664 <gl_list_iterator_next@@Base>:
   19664:	ldr	x8, [x0]
   19668:	ldr	x3, [x8, #176]
   1966c:	br	x3

0000000000019670 <gl_list_iterator_free@@Base>:
   19670:	ldr	x8, [x0]
   19674:	ldr	x1, [x8, #184]
   19678:	br	x1

000000000001967c <gl_sortedlist_search@@Base>:
   1967c:	ldr	x8, [x0]
   19680:	ldr	x3, [x8, #192]
   19684:	br	x3

0000000000019688 <gl_sortedlist_search_from_to@@Base>:
   19688:	ldr	x8, [x0]
   1968c:	ldr	x5, [x8, #200]
   19690:	br	x5

0000000000019694 <gl_sortedlist_indexof@@Base>:
   19694:	ldr	x8, [x0]
   19698:	ldr	x3, [x8, #208]
   1969c:	br	x3

00000000000196a0 <gl_sortedlist_indexof_from_to@@Base>:
   196a0:	ldr	x8, [x0]
   196a4:	ldr	x5, [x8, #216]
   196a8:	br	x5

00000000000196ac <gl_sortedlist_nx_add@@Base>:
   196ac:	ldr	x8, [x0]
   196b0:	ldr	x3, [x8, #224]
   196b4:	br	x3

00000000000196b8 <gl_sortedlist_remove@@Base>:
   196b8:	ldr	x8, [x0]
   196bc:	ldr	x3, [x8, #232]
   196c0:	br	x3

00000000000196c4 <locale_charset@@Base>:
   196c4:	stp	x29, x30, [sp, #-16]!
   196c8:	mov	w0, #0xe                   	// #14
   196cc:	mov	x29, sp
   196d0:	bl	a520 <nl_langinfo@plt>
   196d4:	adrp	x8, 33000 <vasnprintf@@Base+0x2474>
   196d8:	add	x8, x8, #0xeac
   196dc:	cmp	x0, #0x0
   196e0:	csel	x8, x8, x0, eq  // eq = none
   196e4:	ldrb	w9, [x8]
   196e8:	adrp	x10, 31000 <vasnprintf@@Base+0x474>
   196ec:	add	x10, x10, #0xcdd
   196f0:	cmp	w9, #0x0
   196f4:	csel	x0, x10, x8, eq  // eq = none
   196f8:	ldp	x29, x30, [sp], #16
   196fc:	ret

0000000000019700 <glthread_rwlock_init_for_glibc@@Base>:
   19700:	sub	sp, sp, #0x30
   19704:	stp	x20, x19, [sp, #32]
   19708:	mov	x19, x0
   1970c:	add	x0, sp, #0x8
   19710:	stp	x29, x30, [sp, #16]
   19714:	add	x29, sp, #0x10
   19718:	bl	a230 <pthread_rwlockattr_init@plt>
   1971c:	mov	w20, w0
   19720:	cbnz	w0, 19750 <glthread_rwlock_init_for_glibc@@Base+0x50>
   19724:	add	x0, sp, #0x8
   19728:	mov	w1, #0x2                   	// #2
   1972c:	bl	a390 <pthread_rwlockattr_setkind_np@plt>
   19730:	mov	w20, w0
   19734:	cbnz	w0, 19748 <glthread_rwlock_init_for_glibc@@Base+0x48>
   19738:	add	x1, sp, #0x8
   1973c:	mov	x0, x19
   19740:	bl	a370 <pthread_rwlock_init@plt>
   19744:	mov	w20, w0
   19748:	add	x0, sp, #0x8
   1974c:	bl	aca0 <pthread_rwlockattr_destroy@plt>
   19750:	mov	w0, w20
   19754:	ldp	x20, x19, [sp, #32]
   19758:	ldp	x29, x30, [sp, #16]
   1975c:	add	sp, sp, #0x30
   19760:	ret

0000000000019764 <glthread_recursive_lock_init_multithreaded@@Base>:
   19764:	sub	sp, sp, #0x30
   19768:	stp	x20, x19, [sp, #32]
   1976c:	mov	x19, x0
   19770:	add	x0, sp, #0x8
   19774:	stp	x29, x30, [sp, #16]
   19778:	add	x29, sp, #0x10
   1977c:	bl	abf0 <pthread_mutexattr_init@plt>
   19780:	mov	w20, w0
   19784:	cbnz	w0, 197c8 <glthread_recursive_lock_init_multithreaded@@Base+0x64>
   19788:	add	x0, sp, #0x8
   1978c:	mov	w1, #0x1                   	// #1
   19790:	bl	a2c0 <pthread_mutexattr_settype@plt>
   19794:	cbz	w0, 197a8 <glthread_recursive_lock_init_multithreaded@@Base+0x44>
   19798:	mov	w20, w0
   1979c:	add	x0, sp, #0x8
   197a0:	bl	ac40 <pthread_mutexattr_destroy@plt>
   197a4:	b	197c8 <glthread_recursive_lock_init_multithreaded@@Base+0x64>
   197a8:	add	x1, sp, #0x8
   197ac:	mov	x0, x19
   197b0:	bl	a790 <pthread_mutex_init@plt>
   197b4:	mov	w19, w0
   197b8:	add	x0, sp, #0x8
   197bc:	bl	ac40 <pthread_mutexattr_destroy@plt>
   197c0:	cmp	w19, #0x0
   197c4:	csel	w20, w0, w19, eq  // eq = none
   197c8:	mov	w0, w20
   197cc:	ldp	x20, x19, [sp, #32]
   197d0:	ldp	x29, x30, [sp, #16]
   197d4:	add	sp, sp, #0x30
   197d8:	ret

00000000000197dc <glthread_once_singlethreaded@@Base>:
   197dc:	ldrb	w8, [x0]
   197e0:	cbz	w8, 197ec <glthread_once_singlethreaded@@Base+0x10>
   197e4:	mov	w0, wzr
   197e8:	ret
   197ec:	mov	w8, #0xff                  	// #255
   197f0:	strb	w8, [x0]
   197f4:	mov	w0, #0x1                   	// #1
   197f8:	ret

00000000000197fc <mmalloca@@Base>:
   197fc:	stp	x29, x30, [sp, #-16]!
   19800:	cmn	x0, #0x21
   19804:	mov	x29, sp
   19808:	b.hi	19838 <mmalloca@@Base+0x3c>  // b.pmore
   1980c:	add	x0, x0, #0x20
   19810:	bl	a550 <malloc@plt>
   19814:	cbz	x0, 19830 <mmalloca@@Base+0x34>
   19818:	add	x9, x0, #0x10
   1981c:	and	x9, x9, #0xffffffffffffffe0
   19820:	mov	x8, x0
   19824:	orr	x0, x9, #0x10
   19828:	sub	w8, w0, w8
   1982c:	sturb	w8, [x0, #-1]
   19830:	ldp	x29, x30, [sp], #16
   19834:	ret
   19838:	mov	x0, xzr
   1983c:	ldp	x29, x30, [sp], #16
   19840:	ret

0000000000019844 <freea@@Base>:
   19844:	stp	x29, x30, [sp, #-16]!
   19848:	tst	x0, #0xf
   1984c:	mov	x29, sp
   19850:	b.ne	19870 <freea@@Base+0x2c>  // b.any
   19854:	tbnz	w0, #4, 19860 <freea@@Base+0x1c>
   19858:	ldp	x29, x30, [sp], #16
   1985c:	ret
   19860:	ldurb	w8, [x0, #-1]
   19864:	sub	x0, x0, x8
   19868:	ldp	x29, x30, [sp], #16
   1986c:	b	a970 <free@plt>
   19870:	bl	a850 <abort@plt>

0000000000019874 <gl_map_nx_create_empty@@Base>:
   19874:	ldr	x5, [x0]
   19878:	br	x5

000000000001987c <gl_map_size@@Base>:
   1987c:	ldr	x8, [x0]
   19880:	ldr	x1, [x8, #8]
   19884:	br	x1

0000000000019888 <gl_map_search@@Base>:
   19888:	ldr	x8, [x0]
   1988c:	ldr	x3, [x8, #16]
   19890:	br	x3

0000000000019894 <gl_map_nx_getput@@Base>:
   19894:	ldr	x8, [x0]
   19898:	ldr	x4, [x8, #24]
   1989c:	br	x4

00000000000198a0 <gl_map_getremove@@Base>:
   198a0:	ldr	x8, [x0]
   198a4:	ldr	x3, [x8, #32]
   198a8:	br	x3

00000000000198ac <gl_map_free@@Base>:
   198ac:	ldr	x8, [x0]
   198b0:	ldr	x1, [x8, #40]
   198b4:	br	x1

00000000000198b8 <gl_map_iterator@@Base>:
   198b8:	ldr	x9, [x0]
   198bc:	ldr	x1, [x9, #48]
   198c0:	br	x1

00000000000198c4 <gl_map_iterator_next@@Base>:
   198c4:	ldr	x8, [x0]
   198c8:	ldr	x3, [x8, #56]
   198cc:	br	x3

00000000000198d0 <gl_map_iterator_free@@Base>:
   198d0:	ldr	x8, [x0]
   198d4:	ldr	x1, [x8, #64]
   198d8:	br	x1

00000000000198dc <gl_map_get@@Base>:
   198dc:	sub	sp, sp, #0x20
   198e0:	stp	x29, x30, [sp, #16]
   198e4:	str	xzr, [sp, #8]
   198e8:	ldr	x8, [x0]
   198ec:	add	x2, sp, #0x8
   198f0:	add	x29, sp, #0x10
   198f4:	ldr	x8, [x8, #16]
   198f8:	blr	x8
   198fc:	ldr	x0, [sp, #8]
   19900:	ldp	x29, x30, [sp, #16]
   19904:	add	sp, sp, #0x20
   19908:	ret

000000000001990c <gl_map_nx_put@@Base>:
   1990c:	sub	sp, sp, #0x30
   19910:	stp	x29, x30, [sp, #16]
   19914:	stp	x20, x19, [sp, #32]
   19918:	ldr	x8, [x0]
   1991c:	add	x3, sp, #0x8
   19920:	add	x29, sp, #0x10
   19924:	mov	x20, x0
   19928:	ldr	x8, [x8, #24]
   1992c:	blr	x8
   19930:	mov	w19, w0
   19934:	cbnz	w0, 19948 <gl_map_nx_put@@Base+0x3c>
   19938:	ldr	x8, [x20, #24]
   1993c:	cbz	x8, 19948 <gl_map_nx_put@@Base+0x3c>
   19940:	ldr	x0, [sp, #8]
   19944:	blr	x8
   19948:	mov	w0, w19
   1994c:	ldp	x20, x19, [sp, #32]
   19950:	ldp	x29, x30, [sp, #16]
   19954:	add	sp, sp, #0x30
   19958:	ret

000000000001995c <gl_map_remove@@Base>:
   1995c:	sub	sp, sp, #0x30
   19960:	stp	x29, x30, [sp, #16]
   19964:	stp	x20, x19, [sp, #32]
   19968:	ldr	x8, [x0]
   1996c:	add	x2, sp, #0x8
   19970:	add	x29, sp, #0x10
   19974:	mov	x20, x0
   19978:	ldr	x8, [x8, #32]
   1997c:	blr	x8
   19980:	mov	w19, w0
   19984:	tbz	w0, #0, 19998 <gl_map_remove@@Base+0x3c>
   19988:	ldr	x8, [x20, #24]
   1998c:	cbz	x8, 19998 <gl_map_remove@@Base+0x3c>
   19990:	ldr	x0, [sp, #8]
   19994:	blr	x8
   19998:	and	w0, w19, #0x1
   1999c:	ldp	x20, x19, [sp, #32]
   199a0:	ldp	x29, x30, [sp, #16]
   199a4:	add	sp, sp, #0x30
   199a8:	ret

00000000000199ac <get_nonblocking_flag@@Base>:
   199ac:	stp	x29, x30, [sp, #-16]!
   199b0:	mov	w1, #0x3                   	// #3
   199b4:	mov	w2, wzr
   199b8:	mov	x29, sp
   199bc:	bl	aaf0 <fcntl@plt>
   199c0:	ubfx	w8, w0, #11, #1
   199c4:	cmp	w0, #0x0
   199c8:	csinv	w0, w8, wzr, ge  // ge = tcont
   199cc:	ldp	x29, x30, [sp], #16
   199d0:	ret

00000000000199d4 <set_nonblocking_flag@@Base>:
   199d4:	stp	x29, x30, [sp, #-32]!
   199d8:	stp	x20, x19, [sp, #16]
   199dc:	mov	w20, w1
   199e0:	mov	w1, #0x3                   	// #3
   199e4:	mov	w2, wzr
   199e8:	mov	x29, sp
   199ec:	mov	w19, w0
   199f0:	bl	aaf0 <fcntl@plt>
   199f4:	tbnz	w0, #31, 19a24 <set_nonblocking_flag@@Base+0x50>
   199f8:	eor	w8, w20, w0, lsr #11
   199fc:	tbz	w8, #0, 19a34 <set_nonblocking_flag@@Base+0x60>
   19a00:	orr	w8, w0, #0x800
   19a04:	and	w9, w0, #0xfffff7ff
   19a08:	tst	w20, #0x1
   19a0c:	mov	w0, w19
   19a10:	ldp	x20, x19, [sp, #16]
   19a14:	csel	w2, w8, w9, ne  // ne = any
   19a18:	mov	w1, #0x4                   	// #4
   19a1c:	ldp	x29, x30, [sp], #32
   19a20:	b	aaf0 <fcntl@plt>
   19a24:	mov	w0, #0xffffffff            	// #-1
   19a28:	ldp	x20, x19, [sp, #16]
   19a2c:	ldp	x29, x30, [sp], #32
   19a30:	ret
   19a34:	mov	w0, wzr
   19a38:	ldp	x20, x19, [sp, #16]
   19a3c:	ldp	x29, x30, [sp], #32
   19a40:	ret

0000000000019a44 <openat_save_fail@@Base>:
   19a44:	stp	x29, x30, [sp, #-32]!
   19a48:	stp	x20, x19, [sp, #16]
   19a4c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   19a50:	ldr	x8, [x8, #3976]
   19a54:	mov	w20, w0
   19a58:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   19a5c:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   19a60:	ldr	w19, [x8]
   19a64:	add	x0, x0, #0x197
   19a68:	add	x1, x1, #0xc88
   19a6c:	mov	w2, #0x5                   	// #5
   19a70:	mov	x29, sp
   19a74:	bl	ac90 <dcgettext@plt>
   19a78:	mov	x2, x0
   19a7c:	mov	w0, w19
   19a80:	mov	w1, w20
   19a84:	bl	a2b0 <error@plt>
   19a88:	bl	a850 <abort@plt>

0000000000019a8c <openat_restore_fail@@Base>:
   19a8c:	stp	x29, x30, [sp, #-32]!
   19a90:	stp	x20, x19, [sp, #16]
   19a94:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   19a98:	ldr	x8, [x8, #3976]
   19a9c:	mov	w20, w0
   19aa0:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   19aa4:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   19aa8:	ldr	w19, [x8]
   19aac:	add	x0, x0, #0x197
   19ab0:	add	x1, x1, #0xcb3
   19ab4:	mov	w2, #0x5                   	// #5
   19ab8:	mov	x29, sp
   19abc:	bl	ac90 <dcgettext@plt>
   19ac0:	mov	x2, x0
   19ac4:	mov	w0, w19
   19ac8:	mov	w1, w20
   19acc:	bl	a2b0 <error@plt>
   19ad0:	bl	a850 <abort@plt>

0000000000019ad4 <set_program_name@@Base>:
   19ad4:	stp	x29, x30, [sp, #-32]!
   19ad8:	stp	x20, x19, [sp, #16]
   19adc:	mov	x29, sp
   19ae0:	cbz	x0, 19b6c <set_program_name@@Base+0x98>
   19ae4:	mov	w1, #0x2f                  	// #47
   19ae8:	mov	x19, x0
   19aec:	bl	a7d0 <strrchr@plt>
   19af0:	cmp	x0, #0x0
   19af4:	csinc	x20, x19, x0, eq  // eq = none
   19af8:	sub	x8, x20, x19
   19afc:	cmp	x8, #0x7
   19b00:	b.lt	19b48 <set_program_name@@Base+0x74>  // b.tstop
   19b04:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   19b08:	sub	x0, x20, #0x7
   19b0c:	add	x1, x1, #0xd19
   19b10:	mov	w2, #0x7                   	// #7
   19b14:	bl	a610 <strncmp@plt>
   19b18:	cbnz	w0, 19b48 <set_program_name@@Base+0x74>
   19b1c:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   19b20:	add	x1, x1, #0xd21
   19b24:	mov	w2, #0x3                   	// #3
   19b28:	mov	x0, x20
   19b2c:	bl	a610 <strncmp@plt>
   19b30:	mov	x19, x20
   19b34:	cbnz	w0, 19b48 <set_program_name@@Base+0x74>
   19b38:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   19b3c:	ldr	x8, [x8, #4008]
   19b40:	add	x19, x20, #0x3
   19b44:	str	x19, [x8]
   19b48:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   19b4c:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   19b50:	ldr	x8, [x8, #3992]
   19b54:	ldr	x9, [x9, #3768]
   19b58:	str	x19, [x8]
   19b5c:	str	x19, [x9]
   19b60:	ldp	x20, x19, [sp, #16]
   19b64:	ldp	x29, x30, [sp], #32
   19b68:	ret
   19b6c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   19b70:	ldr	x8, [x8, #3816]
   19b74:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   19b78:	add	x0, x0, #0xce1
   19b7c:	mov	w1, #0x37                  	// #55
   19b80:	ldr	x3, [x8]
   19b84:	mov	w2, #0x1                   	// #1
   19b88:	bl	aac0 <fwrite@plt>
   19b8c:	bl	a850 <abort@plt>

0000000000019b90 <gl_rbtree_list_check_invariants@@Base>:
   19b90:	ldr	x0, [x0, #40]
   19b94:	cbz	x0, 19ba0 <gl_rbtree_list_check_invariants@@Base+0x10>
   19b98:	mov	x1, xzr
   19b9c:	b	19ba4 <gl_rbtree_list_check_invariants@@Base+0x14>
   19ba0:	ret
   19ba4:	stp	x29, x30, [sp, #-48]!
   19ba8:	stp	x20, x19, [sp, #32]
   19bac:	str	x21, [sp, #16]
   19bb0:	mov	x21, x0
   19bb4:	ldr	x0, [x0]
   19bb8:	mov	x20, x1
   19bbc:	mov	x29, sp
   19bc0:	cbz	x0, 19c4c <gl_rbtree_list_check_invariants@@Base+0xbc>
   19bc4:	mov	x1, x21
   19bc8:	bl	19ba4 <gl_rbtree_list_check_invariants@@Base+0x14>
   19bcc:	mov	w19, w0
   19bd0:	ldr	x0, [x21, #8]
   19bd4:	cbz	x0, 19be0 <gl_rbtree_list_check_invariants@@Base+0x50>
   19bd8:	mov	x1, x21
   19bdc:	bl	19ba4 <gl_rbtree_list_check_invariants@@Base+0x14>
   19be0:	ldr	x8, [x21, #16]
   19be4:	cmp	x8, x20
   19be8:	b.ne	19c6c <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.any
   19bec:	ldr	x9, [x21]
   19bf0:	ldr	x8, [x21, #32]
   19bf4:	cbz	x9, 19c5c <gl_rbtree_list_check_invariants@@Base+0xcc>
   19bf8:	ldr	x9, [x9, #32]
   19bfc:	add	x9, x9, #0x1
   19c00:	ldr	x10, [x21, #8]
   19c04:	cbz	x10, 19c0c <gl_rbtree_list_check_invariants@@Base+0x7c>
   19c08:	ldr	x10, [x10, #32]
   19c0c:	add	x9, x10, x9
   19c10:	cmp	x8, x9
   19c14:	b.ne	19c6c <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.any
   19c18:	ldr	w8, [x21, #24]
   19c1c:	cmp	w8, #0x2
   19c20:	b.cs	19c6c <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.hs, b.nlast
   19c24:	cbnz	x20, 19c2c <gl_rbtree_list_check_invariants@@Base+0x9c>
   19c28:	cbnz	w8, 19c6c <gl_rbtree_list_check_invariants@@Base+0xdc>
   19c2c:	cmp	w19, w0
   19c30:	b.ne	19c6c <gl_rbtree_list_check_invariants@@Base+0xdc>  // b.any
   19c34:	cmp	w8, #0x0
   19c38:	cinc	w0, w19, eq  // eq = none
   19c3c:	ldp	x20, x19, [sp, #32]
   19c40:	ldr	x21, [sp, #16]
   19c44:	ldp	x29, x30, [sp], #48
   19c48:	ret
   19c4c:	mov	w19, wzr
   19c50:	ldr	x0, [x21, #8]
   19c54:	cbnz	x0, 19bd8 <gl_rbtree_list_check_invariants@@Base+0x48>
   19c58:	b	19be0 <gl_rbtree_list_check_invariants@@Base+0x50>
   19c5c:	mov	w9, #0x1                   	// #1
   19c60:	ldr	x10, [x21, #8]
   19c64:	cbnz	x10, 19c08 <gl_rbtree_list_check_invariants@@Base+0x78>
   19c68:	b	19c0c <gl_rbtree_list_check_invariants@@Base+0x7c>
   19c6c:	bl	a850 <abort@plt>
   19c70:	stp	x29, x30, [sp, #-64]!
   19c74:	str	x23, [sp, #16]
   19c78:	mov	x23, x0
   19c7c:	mov	w0, #0x30                  	// #48
   19c80:	stp	x22, x21, [sp, #32]
   19c84:	stp	x20, x19, [sp, #48]
   19c88:	mov	x29, sp
   19c8c:	mov	w21, w4
   19c90:	mov	x19, x3
   19c94:	mov	x20, x2
   19c98:	mov	x22, x1
   19c9c:	bl	a550 <malloc@plt>
   19ca0:	cbz	x0, 19cb8 <gl_rbtree_list_check_invariants@@Base+0x128>
   19ca4:	and	w8, w21, #0x1
   19ca8:	stp	x23, x22, [x0]
   19cac:	stp	x20, x19, [x0, #16]
   19cb0:	strb	w8, [x0, #32]
   19cb4:	str	xzr, [x0, #40]
   19cb8:	ldp	x20, x19, [sp, #48]
   19cbc:	ldp	x22, x21, [sp, #32]
   19cc0:	ldr	x23, [sp, #16]
   19cc4:	ldp	x29, x30, [sp], #64
   19cc8:	ret
   19ccc:	stp	x29, x30, [sp, #-80]!
   19cd0:	stp	x26, x25, [sp, #16]
   19cd4:	mov	x26, x0
   19cd8:	mov	w0, #0x30                  	// #48
   19cdc:	stp	x24, x23, [sp, #32]
   19ce0:	stp	x22, x21, [sp, #48]
   19ce4:	stp	x20, x19, [sp, #64]
   19ce8:	mov	x29, sp
   19cec:	mov	x20, x6
   19cf0:	mov	x21, x5
   19cf4:	mov	w24, w4
   19cf8:	mov	x22, x3
   19cfc:	mov	x23, x2
   19d00:	mov	x25, x1
   19d04:	bl	a550 <malloc@plt>
   19d08:	mov	x19, x0
   19d0c:	cbz	x0, 19d7c <gl_rbtree_list_check_invariants@@Base+0x1ec>
   19d10:	and	w8, w24, #0x1
   19d14:	stp	x26, x25, [x19]
   19d18:	stp	x23, x22, [x19, #16]
   19d1c:	strb	w8, [x19, #32]
   19d20:	cbz	x21, 19d48 <gl_rbtree_list_check_invariants@@Base+0x1b8>
   19d24:	add	x8, x21, #0x1
   19d28:	cmp	x8, #0x2
   19d2c:	b.cc	19d50 <gl_rbtree_list_check_invariants@@Base+0x1c0>  // b.lo, b.ul, b.last
   19d30:	mov	w0, wzr
   19d34:	cmp	x8, #0x3
   19d38:	lsr	x8, x8, #1
   19d3c:	add	w0, w0, #0x1
   19d40:	b.hi	19d34 <gl_rbtree_list_check_invariants@@Base+0x1a4>  // b.pmore
   19d44:	b	19d54 <gl_rbtree_list_check_invariants@@Base+0x1c4>
   19d48:	str	xzr, [x19, #40]
   19d4c:	b	19d7c <gl_rbtree_list_check_invariants@@Base+0x1ec>
   19d50:	mov	w0, wzr
   19d54:	mov	x1, x21
   19d58:	mov	x2, x20
   19d5c:	bl	1b3e0 <gl_rbtree_list_check_invariants@@Base+0x1850>
   19d60:	str	x0, [x19, #40]
   19d64:	cbz	x0, 19d70 <gl_rbtree_list_check_invariants@@Base+0x1e0>
   19d68:	str	xzr, [x0, #16]
   19d6c:	b	19d7c <gl_rbtree_list_check_invariants@@Base+0x1ec>
   19d70:	mov	x0, x19
   19d74:	bl	a970 <free@plt>
   19d78:	mov	x19, xzr
   19d7c:	mov	x0, x19
   19d80:	ldp	x20, x19, [sp, #64]
   19d84:	ldp	x22, x21, [sp, #48]
   19d88:	ldp	x24, x23, [sp, #32]
   19d8c:	ldp	x26, x25, [sp, #16]
   19d90:	ldp	x29, x30, [sp], #80
   19d94:	ret
   19d98:	ldr	x8, [x0, #40]
   19d9c:	cbz	x8, 19da8 <gl_rbtree_list_check_invariants@@Base+0x218>
   19da0:	ldr	x0, [x8, #32]
   19da4:	ret
   19da8:	mov	x0, xzr
   19dac:	ret
   19db0:	ldr	x0, [x1, #40]
   19db4:	ret
   19db8:	mov	w0, wzr
   19dbc:	str	x2, [x1, #40]
   19dc0:	ret
   19dc4:	ldr	x8, [x1, #8]
   19dc8:	cbz	x8, 19ddc <gl_rbtree_list_check_invariants@@Base+0x24c>
   19dcc:	mov	x0, x8
   19dd0:	ldr	x8, [x8]
   19dd4:	cbnz	x8, 19dcc <gl_rbtree_list_check_invariants@@Base+0x23c>
   19dd8:	b	19df4 <gl_rbtree_list_check_invariants@@Base+0x264>
   19ddc:	ldr	x0, [x1, #16]
   19de0:	cbz	x0, 19df4 <gl_rbtree_list_check_invariants@@Base+0x264>
   19de4:	ldr	x8, [x0, #8]
   19de8:	cmp	x8, x1
   19dec:	mov	x1, x0
   19df0:	b.eq	19ddc <gl_rbtree_list_check_invariants@@Base+0x24c>  // b.none
   19df4:	ret
   19df8:	ldr	x8, [x1]
   19dfc:	cbz	x8, 19e10 <gl_rbtree_list_check_invariants@@Base+0x280>
   19e00:	mov	x0, x8
   19e04:	ldr	x8, [x8, #8]
   19e08:	cbnz	x8, 19e00 <gl_rbtree_list_check_invariants@@Base+0x270>
   19e0c:	b	19e28 <gl_rbtree_list_check_invariants@@Base+0x298>
   19e10:	ldr	x0, [x1, #16]
   19e14:	cbz	x0, 19e28 <gl_rbtree_list_check_invariants@@Base+0x298>
   19e18:	ldr	x8, [x0]
   19e1c:	cmp	x8, x1
   19e20:	mov	x1, x0
   19e24:	b.eq	19e10 <gl_rbtree_list_check_invariants@@Base+0x280>  // b.none
   19e28:	ret
   19e2c:	stp	x29, x30, [sp, #-16]!
   19e30:	ldr	x8, [x0, #40]
   19e34:	mov	x29, sp
   19e38:	cbz	x8, 19e80 <gl_rbtree_list_check_invariants@@Base+0x2f0>
   19e3c:	ldr	x9, [x8, #32]
   19e40:	cmp	x9, x1
   19e44:	b.ls	19e80 <gl_rbtree_list_check_invariants@@Base+0x2f0>  // b.plast
   19e48:	mov	x9, x8
   19e4c:	ldr	x8, [x8]
   19e50:	cbz	x8, 19e64 <gl_rbtree_list_check_invariants@@Base+0x2d4>
   19e54:	ldr	x10, [x8, #32]
   19e58:	subs	x10, x1, x10
   19e5c:	b.cc	19e48 <gl_rbtree_list_check_invariants@@Base+0x2b8>  // b.lo, b.ul, b.last
   19e60:	mov	x1, x10
   19e64:	cbz	x1, 19e74 <gl_rbtree_list_check_invariants@@Base+0x2e4>
   19e68:	ldr	x8, [x9, #8]
   19e6c:	sub	x1, x1, #0x1
   19e70:	b	19e48 <gl_rbtree_list_check_invariants@@Base+0x2b8>
   19e74:	ldr	x0, [x9, #40]
   19e78:	ldp	x29, x30, [sp], #16
   19e7c:	ret
   19e80:	bl	a850 <abort@plt>
   19e84:	stp	x29, x30, [sp, #-16]!
   19e88:	ldr	x8, [x0, #40]
   19e8c:	mov	x29, sp
   19e90:	cbz	x8, 19ed8 <gl_rbtree_list_check_invariants@@Base+0x348>
   19e94:	ldr	x9, [x8, #32]
   19e98:	cmp	x9, x1
   19e9c:	b.ls	19ed8 <gl_rbtree_list_check_invariants@@Base+0x348>  // b.plast
   19ea0:	mov	x0, x8
   19ea4:	ldr	x8, [x8]
   19ea8:	cbz	x8, 19ebc <gl_rbtree_list_check_invariants@@Base+0x32c>
   19eac:	ldr	x9, [x8, #32]
   19eb0:	subs	x9, x1, x9
   19eb4:	b.cc	19ea0 <gl_rbtree_list_check_invariants@@Base+0x310>  // b.lo, b.ul, b.last
   19eb8:	mov	x1, x9
   19ebc:	cbz	x1, 19ecc <gl_rbtree_list_check_invariants@@Base+0x33c>
   19ec0:	ldr	x8, [x0, #8]
   19ec4:	sub	x1, x1, #0x1
   19ec8:	b	19ea0 <gl_rbtree_list_check_invariants@@Base+0x310>
   19ecc:	str	x2, [x0, #40]
   19ed0:	ldp	x29, x30, [sp], #16
   19ed4:	ret
   19ed8:	bl	a850 <abort@plt>
   19edc:	stp	x29, x30, [sp, #-96]!
   19ee0:	stp	x28, x27, [sp, #16]
   19ee4:	stp	x26, x25, [sp, #32]
   19ee8:	stp	x24, x23, [sp, #48]
   19eec:	stp	x22, x21, [sp, #64]
   19ef0:	stp	x20, x19, [sp, #80]
   19ef4:	mov	x29, sp
   19ef8:	sub	sp, sp, #0x750
   19efc:	cmp	x1, x2
   19f00:	b.hi	19fe8 <gl_rbtree_list_check_invariants@@Base+0x458>  // b.pmore
   19f04:	ldr	x8, [x0, #40]
   19f08:	mov	x19, x3
   19f0c:	mov	x20, x2
   19f10:	cbz	x8, 19fdc <gl_rbtree_list_check_invariants@@Base+0x44c>
   19f14:	ldr	x9, [x8, #32]
   19f18:	cmp	x9, x20
   19f1c:	b.cc	19fe8 <gl_rbtree_list_check_invariants@@Base+0x458>  // b.lo, b.ul, b.last
   19f20:	ldr	x22, [x0, #8]
   19f24:	cbz	x1, 19fec <gl_rbtree_list_check_invariants@@Base+0x45c>
   19f28:	cbz	x22, 1a074 <gl_rbtree_list_check_invariants@@Base+0x4e4>
   19f2c:	add	x9, sp, #0x8
   19f30:	mov	x23, xzr
   19f34:	mov	x24, xzr
   19f38:	add	x25, x9, #0x8
   19f3c:	sub	x26, x9, #0x8
   19f40:	cbz	x8, 19f68 <gl_rbtree_list_check_invariants@@Base+0x3d8>
   19f44:	add	x9, x25, x23, lsl #4
   19f48:	ldr	x10, [x8, #32]
   19f4c:	cmp	x10, x1
   19f50:	b.ls	19f68 <gl_rbtree_list_check_invariants@@Base+0x3d8>  // b.plast
   19f54:	stp	x8, xzr, [x9, #-8]
   19f58:	ldr	x8, [x8]
   19f5c:	add	x23, x23, #0x1
   19f60:	add	x9, x9, #0x10
   19f64:	cbnz	x8, 19f48 <gl_rbtree_list_check_invariants@@Base+0x3b8>
   19f68:	cbz	x23, 1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>
   19f6c:	add	x27, x26, x23, lsl #4
   19f70:	ldr	x8, [x27]
   19f74:	cbz	x8, 19f8c <gl_rbtree_list_check_invariants@@Base+0x3fc>
   19f78:	sub	x23, x23, #0x1
   19f7c:	add	x1, x8, x1
   19f80:	sub	x27, x27, #0x10
   19f84:	cbnz	x23, 19f70 <gl_rbtree_list_check_invariants@@Base+0x3e0>
   19f88:	b	1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>
   19f8c:	ldur	x21, [x27, #-8]
   19f90:	ldr	x8, [x21]
   19f94:	cbz	x8, 19f9c <gl_rbtree_list_check_invariants@@Base+0x40c>
   19f98:	ldr	x8, [x8, #32]
   19f9c:	add	x28, x8, #0x1
   19fa0:	cmp	x1, x28
   19fa4:	b.cs	19fbc <gl_rbtree_list_check_invariants@@Base+0x42c>  // b.hs, b.nlast
   19fa8:	ldr	x1, [x21, #40]
   19fac:	mov	x0, x19
   19fb0:	blr	x22
   19fb4:	mov	x1, x28
   19fb8:	tbnz	w0, #0, 1a1a4 <gl_rbtree_list_check_invariants@@Base+0x614>
   19fbc:	add	x24, x24, #0x1
   19fc0:	cmp	x24, x20
   19fc4:	b.cs	1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>  // b.hs, b.nlast
   19fc8:	str	x28, [x27]
   19fcc:	ldr	x8, [x21, #8]
   19fd0:	sub	x1, x1, x28
   19fd4:	cbnz	x8, 19f44 <gl_rbtree_list_check_invariants@@Base+0x3b4>
   19fd8:	b	19f68 <gl_rbtree_list_check_invariants@@Base+0x3d8>
   19fdc:	mov	x9, xzr
   19fe0:	cmp	x9, x20
   19fe4:	b.cs	19f20 <gl_rbtree_list_check_invariants@@Base+0x390>  // b.hs, b.nlast
   19fe8:	bl	a850 <abort@plt>
   19fec:	cbz	x22, 1a120 <gl_rbtree_list_check_invariants@@Base+0x590>
   19ff0:	add	x24, sp, #0x8
   19ff4:	mov	x26, xzr
   19ff8:	mov	x23, xzr
   19ffc:	add	x25, x24, #0x8
   1a000:	mov	w27, #0x1                   	// #1
   1a004:	cbz	x8, 1a020 <gl_rbtree_list_check_invariants@@Base+0x490>
   1a008:	add	x9, x25, x26, lsl #4
   1a00c:	stp	x8, xzr, [x9, #-8]
   1a010:	ldr	x8, [x8]
   1a014:	add	x26, x26, #0x1
   1a018:	add	x9, x9, #0x10
   1a01c:	cbnz	x8, 1a00c <gl_rbtree_list_check_invariants@@Base+0x47c>
   1a020:	add	x9, x26, #0x1
   1a024:	add	x8, x24, x26, lsl #4
   1a028:	mov	x26, x9
   1a02c:	sub	x26, x26, #0x1
   1a030:	cbz	x26, 1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>
   1a034:	ldur	x9, [x8, #-8]
   1a038:	sub	x28, x8, #0x10
   1a03c:	mov	x8, x28
   1a040:	cbnz	x9, 1a02c <gl_rbtree_list_check_invariants@@Base+0x49c>
   1a044:	ldr	x21, [x28]
   1a048:	mov	x0, x19
   1a04c:	ldr	x1, [x21, #40]
   1a050:	blr	x22
   1a054:	tbnz	w0, #0, 1a1a4 <gl_rbtree_list_check_invariants@@Base+0x614>
   1a058:	add	x23, x23, #0x1
   1a05c:	cmp	x23, x20
   1a060:	b.cs	1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>  // b.hs, b.nlast
   1a064:	str	x27, [x28, #8]
   1a068:	ldr	x8, [x21, #8]
   1a06c:	cbnz	x8, 1a008 <gl_rbtree_list_check_invariants@@Base+0x478>
   1a070:	b	1a020 <gl_rbtree_list_check_invariants@@Base+0x490>
   1a074:	add	x12, sp, #0x8
   1a078:	mov	x9, xzr
   1a07c:	mov	x10, xzr
   1a080:	add	x11, x12, #0x8
   1a084:	sub	x12, x12, #0x8
   1a088:	cbz	x8, 1a0b0 <gl_rbtree_list_check_invariants@@Base+0x520>
   1a08c:	add	x13, x11, x9, lsl #4
   1a090:	ldr	x14, [x8, #32]
   1a094:	cmp	x14, x1
   1a098:	b.ls	1a0b0 <gl_rbtree_list_check_invariants@@Base+0x520>  // b.plast
   1a09c:	stp	x8, xzr, [x13, #-8]
   1a0a0:	ldr	x8, [x8]
   1a0a4:	add	x9, x9, #0x1
   1a0a8:	add	x13, x13, #0x10
   1a0ac:	cbnz	x8, 1a090 <gl_rbtree_list_check_invariants@@Base+0x500>
   1a0b0:	cbz	x9, 1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>
   1a0b4:	add	x8, x12, x9, lsl #4
   1a0b8:	ldr	x13, [x8]
   1a0bc:	cbz	x13, 1a0d4 <gl_rbtree_list_check_invariants@@Base+0x544>
   1a0c0:	sub	x9, x9, #0x1
   1a0c4:	add	x1, x13, x1
   1a0c8:	sub	x8, x8, #0x10
   1a0cc:	cbnz	x9, 1a0b8 <gl_rbtree_list_check_invariants@@Base+0x528>
   1a0d0:	b	1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>
   1a0d4:	ldur	x21, [x8, #-8]
   1a0d8:	ldr	x13, [x21]
   1a0dc:	cbz	x13, 1a0e4 <gl_rbtree_list_check_invariants@@Base+0x554>
   1a0e0:	ldr	x13, [x13, #32]
   1a0e4:	add	x13, x13, #0x1
   1a0e8:	cmp	x1, x13
   1a0ec:	b.cs	1a100 <gl_rbtree_list_check_invariants@@Base+0x570>  // b.hs, b.nlast
   1a0f0:	ldr	x14, [x21, #40]
   1a0f4:	mov	x1, x13
   1a0f8:	cmp	x14, x19
   1a0fc:	b.eq	1a1a4 <gl_rbtree_list_check_invariants@@Base+0x614>  // b.none
   1a100:	add	x10, x10, #0x1
   1a104:	cmp	x10, x20
   1a108:	b.cs	1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>  // b.hs, b.nlast
   1a10c:	str	x13, [x8]
   1a110:	ldr	x8, [x21, #8]
   1a114:	sub	x1, x1, x13
   1a118:	cbnz	x8, 1a08c <gl_rbtree_list_check_invariants@@Base+0x4fc>
   1a11c:	b	1a0b0 <gl_rbtree_list_check_invariants@@Base+0x520>
   1a120:	add	x10, sp, #0x8
   1a124:	mov	x12, xzr
   1a128:	mov	x9, xzr
   1a12c:	add	x11, x10, #0x8
   1a130:	mov	w13, #0x1                   	// #1
   1a134:	cbz	x8, 1a150 <gl_rbtree_list_check_invariants@@Base+0x5c0>
   1a138:	add	x14, x11, x12, lsl #4
   1a13c:	stp	x8, xzr, [x14, #-8]
   1a140:	ldr	x8, [x8]
   1a144:	add	x12, x12, #0x1
   1a148:	add	x14, x14, #0x10
   1a14c:	cbnz	x8, 1a13c <gl_rbtree_list_check_invariants@@Base+0x5ac>
   1a150:	add	x14, x12, #0x1
   1a154:	add	x8, x10, x12, lsl #4
   1a158:	mov	x12, x14
   1a15c:	sub	x12, x12, #0x1
   1a160:	cbz	x12, 1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>
   1a164:	ldur	x15, [x8, #-8]
   1a168:	sub	x14, x8, #0x10
   1a16c:	mov	x8, x14
   1a170:	cbnz	x15, 1a15c <gl_rbtree_list_check_invariants@@Base+0x5cc>
   1a174:	ldr	x21, [x14]
   1a178:	ldr	x8, [x21, #40]
   1a17c:	cmp	x8, x19
   1a180:	b.eq	1a1a4 <gl_rbtree_list_check_invariants@@Base+0x614>  // b.none
   1a184:	add	x9, x9, #0x1
   1a188:	cmp	x9, x20
   1a18c:	b.cs	1a1a0 <gl_rbtree_list_check_invariants@@Base+0x610>  // b.hs, b.nlast
   1a190:	str	x13, [x14, #8]
   1a194:	ldr	x8, [x21, #8]
   1a198:	cbnz	x8, 1a138 <gl_rbtree_list_check_invariants@@Base+0x5a8>
   1a19c:	b	1a150 <gl_rbtree_list_check_invariants@@Base+0x5c0>
   1a1a0:	mov	x21, xzr
   1a1a4:	mov	x0, x21
   1a1a8:	add	sp, sp, #0x750
   1a1ac:	ldp	x20, x19, [sp, #80]
   1a1b0:	ldp	x22, x21, [sp, #64]
   1a1b4:	ldp	x24, x23, [sp, #48]
   1a1b8:	ldp	x26, x25, [sp, #32]
   1a1bc:	ldp	x28, x27, [sp, #16]
   1a1c0:	ldp	x29, x30, [sp], #96
   1a1c4:	ret
   1a1c8:	stp	x29, x30, [sp, #-96]!
   1a1cc:	stp	x28, x27, [sp, #16]
   1a1d0:	stp	x26, x25, [sp, #32]
   1a1d4:	stp	x24, x23, [sp, #48]
   1a1d8:	stp	x22, x21, [sp, #64]
   1a1dc:	stp	x20, x19, [sp, #80]
   1a1e0:	mov	x29, sp
   1a1e4:	sub	sp, sp, #0x750
   1a1e8:	cmp	x1, x2
   1a1ec:	b.hi	1a2d4 <gl_rbtree_list_check_invariants@@Base+0x744>  // b.pmore
   1a1f0:	ldr	x8, [x0, #40]
   1a1f4:	mov	x20, x3
   1a1f8:	mov	x21, x2
   1a1fc:	cbz	x8, 1a2c8 <gl_rbtree_list_check_invariants@@Base+0x738>
   1a200:	ldr	x9, [x8, #32]
   1a204:	cmp	x9, x21
   1a208:	b.cc	1a2d4 <gl_rbtree_list_check_invariants@@Base+0x744>  // b.lo, b.ul, b.last
   1a20c:	ldr	x22, [x0, #8]
   1a210:	cbz	x1, 1a2d8 <gl_rbtree_list_check_invariants@@Base+0x748>
   1a214:	cbz	x22, 1a360 <gl_rbtree_list_check_invariants@@Base+0x7d0>
   1a218:	add	x9, sp, #0x8
   1a21c:	mov	x23, xzr
   1a220:	mov	x19, xzr
   1a224:	add	x24, x9, #0x8
   1a228:	sub	x25, x9, #0x8
   1a22c:	cbz	x8, 1a254 <gl_rbtree_list_check_invariants@@Base+0x6c4>
   1a230:	add	x9, x24, x23, lsl #4
   1a234:	ldr	x10, [x8, #32]
   1a238:	cmp	x10, x1
   1a23c:	b.ls	1a254 <gl_rbtree_list_check_invariants@@Base+0x6c4>  // b.plast
   1a240:	stp	x8, xzr, [x9, #-8]
   1a244:	ldr	x8, [x8]
   1a248:	add	x23, x23, #0x1
   1a24c:	add	x9, x9, #0x10
   1a250:	cbnz	x8, 1a234 <gl_rbtree_list_check_invariants@@Base+0x6a4>
   1a254:	cbz	x23, 1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>
   1a258:	add	x26, x25, x23, lsl #4
   1a25c:	ldr	x8, [x26]
   1a260:	cbz	x8, 1a278 <gl_rbtree_list_check_invariants@@Base+0x6e8>
   1a264:	sub	x23, x23, #0x1
   1a268:	add	x1, x8, x1
   1a26c:	sub	x26, x26, #0x10
   1a270:	cbnz	x23, 1a25c <gl_rbtree_list_check_invariants@@Base+0x6cc>
   1a274:	b	1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>
   1a278:	ldur	x27, [x26, #-8]
   1a27c:	ldr	x8, [x27]
   1a280:	cbz	x8, 1a288 <gl_rbtree_list_check_invariants@@Base+0x6f8>
   1a284:	ldr	x8, [x8, #32]
   1a288:	add	x28, x8, #0x1
   1a28c:	cmp	x1, x28
   1a290:	b.cs	1a2a8 <gl_rbtree_list_check_invariants@@Base+0x718>  // b.hs, b.nlast
   1a294:	ldr	x1, [x27, #40]
   1a298:	mov	x0, x20
   1a29c:	blr	x22
   1a2a0:	mov	x1, x28
   1a2a4:	tbnz	w0, #0, 1a490 <gl_rbtree_list_check_invariants@@Base+0x900>
   1a2a8:	add	x19, x19, #0x1
   1a2ac:	cmp	x19, x21
   1a2b0:	b.cs	1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>  // b.hs, b.nlast
   1a2b4:	str	x28, [x26]
   1a2b8:	ldr	x8, [x27, #8]
   1a2bc:	sub	x1, x1, x28
   1a2c0:	cbnz	x8, 1a230 <gl_rbtree_list_check_invariants@@Base+0x6a0>
   1a2c4:	b	1a254 <gl_rbtree_list_check_invariants@@Base+0x6c4>
   1a2c8:	mov	x9, xzr
   1a2cc:	cmp	x9, x21
   1a2d0:	b.cs	1a20c <gl_rbtree_list_check_invariants@@Base+0x67c>  // b.hs, b.nlast
   1a2d4:	bl	a850 <abort@plt>
   1a2d8:	cbz	x22, 1a40c <gl_rbtree_list_check_invariants@@Base+0x87c>
   1a2dc:	add	x23, sp, #0x8
   1a2e0:	mov	x25, xzr
   1a2e4:	mov	x19, xzr
   1a2e8:	add	x24, x23, #0x8
   1a2ec:	mov	w26, #0x1                   	// #1
   1a2f0:	cbz	x8, 1a30c <gl_rbtree_list_check_invariants@@Base+0x77c>
   1a2f4:	add	x9, x24, x25, lsl #4
   1a2f8:	stp	x8, xzr, [x9, #-8]
   1a2fc:	ldr	x8, [x8]
   1a300:	add	x25, x25, #0x1
   1a304:	add	x9, x9, #0x10
   1a308:	cbnz	x8, 1a2f8 <gl_rbtree_list_check_invariants@@Base+0x768>
   1a30c:	add	x9, x25, #0x1
   1a310:	add	x8, x23, x25, lsl #4
   1a314:	mov	x25, x9
   1a318:	sub	x25, x25, #0x1
   1a31c:	cbz	x25, 1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>
   1a320:	ldur	x9, [x8, #-8]
   1a324:	sub	x27, x8, #0x10
   1a328:	mov	x8, x27
   1a32c:	cbnz	x9, 1a318 <gl_rbtree_list_check_invariants@@Base+0x788>
   1a330:	ldr	x28, [x27]
   1a334:	mov	x0, x20
   1a338:	ldr	x1, [x28, #40]
   1a33c:	blr	x22
   1a340:	tbnz	w0, #0, 1a490 <gl_rbtree_list_check_invariants@@Base+0x900>
   1a344:	add	x19, x19, #0x1
   1a348:	cmp	x19, x21
   1a34c:	b.cs	1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>  // b.hs, b.nlast
   1a350:	str	x26, [x27, #8]
   1a354:	ldr	x8, [x28, #8]
   1a358:	cbnz	x8, 1a2f4 <gl_rbtree_list_check_invariants@@Base+0x764>
   1a35c:	b	1a30c <gl_rbtree_list_check_invariants@@Base+0x77c>
   1a360:	add	x11, sp, #0x8
   1a364:	mov	x9, xzr
   1a368:	mov	x19, xzr
   1a36c:	add	x10, x11, #0x8
   1a370:	sub	x11, x11, #0x8
   1a374:	cbz	x8, 1a39c <gl_rbtree_list_check_invariants@@Base+0x80c>
   1a378:	add	x12, x10, x9, lsl #4
   1a37c:	ldr	x13, [x8, #32]
   1a380:	cmp	x13, x1
   1a384:	b.ls	1a39c <gl_rbtree_list_check_invariants@@Base+0x80c>  // b.plast
   1a388:	stp	x8, xzr, [x12, #-8]
   1a38c:	ldr	x8, [x8]
   1a390:	add	x9, x9, #0x1
   1a394:	add	x12, x12, #0x10
   1a398:	cbnz	x8, 1a37c <gl_rbtree_list_check_invariants@@Base+0x7ec>
   1a39c:	cbz	x9, 1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>
   1a3a0:	add	x8, x11, x9, lsl #4
   1a3a4:	ldr	x12, [x8]
   1a3a8:	cbz	x12, 1a3c0 <gl_rbtree_list_check_invariants@@Base+0x830>
   1a3ac:	sub	x9, x9, #0x1
   1a3b0:	add	x1, x12, x1
   1a3b4:	sub	x8, x8, #0x10
   1a3b8:	cbnz	x9, 1a3a4 <gl_rbtree_list_check_invariants@@Base+0x814>
   1a3bc:	b	1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>
   1a3c0:	ldur	x12, [x8, #-8]
   1a3c4:	ldr	x13, [x12]
   1a3c8:	cbz	x13, 1a3d0 <gl_rbtree_list_check_invariants@@Base+0x840>
   1a3cc:	ldr	x13, [x13, #32]
   1a3d0:	add	x13, x13, #0x1
   1a3d4:	cmp	x1, x13
   1a3d8:	b.cs	1a3ec <gl_rbtree_list_check_invariants@@Base+0x85c>  // b.hs, b.nlast
   1a3dc:	ldr	x14, [x12, #40]
   1a3e0:	mov	x1, x13
   1a3e4:	cmp	x14, x20
   1a3e8:	b.eq	1a490 <gl_rbtree_list_check_invariants@@Base+0x900>  // b.none
   1a3ec:	add	x19, x19, #0x1
   1a3f0:	cmp	x19, x21
   1a3f4:	b.cs	1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>  // b.hs, b.nlast
   1a3f8:	str	x13, [x8]
   1a3fc:	ldr	x8, [x12, #8]
   1a400:	sub	x1, x1, x13
   1a404:	cbnz	x8, 1a378 <gl_rbtree_list_check_invariants@@Base+0x7e8>
   1a408:	b	1a39c <gl_rbtree_list_check_invariants@@Base+0x80c>
   1a40c:	add	x9, sp, #0x8
   1a410:	mov	x11, xzr
   1a414:	mov	x19, xzr
   1a418:	add	x10, x9, #0x8
   1a41c:	mov	w12, #0x1                   	// #1
   1a420:	cbz	x8, 1a43c <gl_rbtree_list_check_invariants@@Base+0x8ac>
   1a424:	add	x13, x10, x11, lsl #4
   1a428:	stp	x8, xzr, [x13, #-8]
   1a42c:	ldr	x8, [x8]
   1a430:	add	x11, x11, #0x1
   1a434:	add	x13, x13, #0x10
   1a438:	cbnz	x8, 1a428 <gl_rbtree_list_check_invariants@@Base+0x898>
   1a43c:	add	x13, x11, #0x1
   1a440:	add	x8, x9, x11, lsl #4
   1a444:	mov	x11, x13
   1a448:	sub	x11, x11, #0x1
   1a44c:	cbz	x11, 1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>
   1a450:	ldur	x14, [x8, #-8]
   1a454:	sub	x13, x8, #0x10
   1a458:	mov	x8, x13
   1a45c:	cbnz	x14, 1a448 <gl_rbtree_list_check_invariants@@Base+0x8b8>
   1a460:	ldr	x8, [x13]
   1a464:	ldr	x14, [x8, #40]
   1a468:	cmp	x14, x20
   1a46c:	b.eq	1a490 <gl_rbtree_list_check_invariants@@Base+0x900>  // b.none
   1a470:	add	x19, x19, #0x1
   1a474:	cmp	x19, x21
   1a478:	b.cs	1a48c <gl_rbtree_list_check_invariants@@Base+0x8fc>  // b.hs, b.nlast
   1a47c:	str	x12, [x13, #8]
   1a480:	ldr	x8, [x8, #8]
   1a484:	cbnz	x8, 1a424 <gl_rbtree_list_check_invariants@@Base+0x894>
   1a488:	b	1a43c <gl_rbtree_list_check_invariants@@Base+0x8ac>
   1a48c:	mov	x19, #0xffffffffffffffff    	// #-1
   1a490:	mov	x0, x19
   1a494:	add	sp, sp, #0x750
   1a498:	ldp	x20, x19, [sp, #80]
   1a49c:	ldp	x22, x21, [sp, #64]
   1a4a0:	ldp	x24, x23, [sp, #48]
   1a4a4:	ldp	x26, x25, [sp, #32]
   1a4a8:	ldp	x28, x27, [sp, #16]
   1a4ac:	ldp	x29, x30, [sp], #96
   1a4b0:	ret
   1a4b4:	stp	x29, x30, [sp, #-48]!
   1a4b8:	stp	x20, x19, [sp, #32]
   1a4bc:	mov	x20, x0
   1a4c0:	mov	w0, #0x30                  	// #48
   1a4c4:	str	x21, [sp, #16]
   1a4c8:	mov	x29, sp
   1a4cc:	mov	x21, x1
   1a4d0:	bl	a550 <malloc@plt>
   1a4d4:	mov	x19, x0
   1a4d8:	cbz	x0, 1a538 <gl_rbtree_list_check_invariants@@Base+0x9a8>
   1a4dc:	mov	w8, #0x1                   	// #1
   1a4e0:	stp	xzr, xzr, [x19]
   1a4e4:	stp	x8, x21, [x19, #32]
   1a4e8:	ldr	x8, [x20, #40]
   1a4ec:	cbz	x8, 1a52c <gl_rbtree_list_check_invariants@@Base+0x99c>
   1a4f0:	mov	x2, x8
   1a4f4:	ldr	x8, [x8]
   1a4f8:	cbnz	x8, 1a4f0 <gl_rbtree_list_check_invariants@@Base+0x960>
   1a4fc:	mov	x8, x2
   1a500:	str	x19, [x2]
   1a504:	str	x2, [x19, #16]
   1a508:	ldr	x9, [x8, #32]
   1a50c:	add	x9, x9, #0x1
   1a510:	str	x9, [x8, #32]
   1a514:	ldr	x8, [x8, #16]
   1a518:	cbnz	x8, 1a508 <gl_rbtree_list_check_invariants@@Base+0x978>
   1a51c:	mov	x0, x20
   1a520:	mov	x1, x19
   1a524:	bl	1b4f0 <gl_rbtree_list_check_invariants@@Base+0x1960>
   1a528:	b	1a538 <gl_rbtree_list_check_invariants@@Base+0x9a8>
   1a52c:	str	wzr, [x19, #24]
   1a530:	str	x19, [x20, #40]
   1a534:	str	xzr, [x19, #16]
   1a538:	mov	x0, x19
   1a53c:	ldp	x20, x19, [sp, #32]
   1a540:	ldr	x21, [sp, #16]
   1a544:	ldp	x29, x30, [sp], #48
   1a548:	ret
   1a54c:	stp	x29, x30, [sp, #-48]!
   1a550:	stp	x20, x19, [sp, #32]
   1a554:	mov	x20, x0
   1a558:	mov	w0, #0x30                  	// #48
   1a55c:	str	x21, [sp, #16]
   1a560:	mov	x29, sp
   1a564:	mov	x21, x1
   1a568:	bl	a550 <malloc@plt>
   1a56c:	mov	x19, x0
   1a570:	cbz	x0, 1a5d0 <gl_rbtree_list_check_invariants@@Base+0xa40>
   1a574:	mov	w8, #0x1                   	// #1
   1a578:	stp	xzr, xzr, [x19]
   1a57c:	stp	x8, x21, [x19, #32]
   1a580:	ldr	x8, [x20, #40]
   1a584:	cbz	x8, 1a5c4 <gl_rbtree_list_check_invariants@@Base+0xa34>
   1a588:	mov	x2, x8
   1a58c:	ldr	x8, [x8, #8]
   1a590:	cbnz	x8, 1a588 <gl_rbtree_list_check_invariants@@Base+0x9f8>
   1a594:	mov	x8, x2
   1a598:	str	x19, [x2, #8]
   1a59c:	str	x2, [x19, #16]
   1a5a0:	ldr	x9, [x8, #32]
   1a5a4:	add	x9, x9, #0x1
   1a5a8:	str	x9, [x8, #32]
   1a5ac:	ldr	x8, [x8, #16]
   1a5b0:	cbnz	x8, 1a5a0 <gl_rbtree_list_check_invariants@@Base+0xa10>
   1a5b4:	mov	x0, x20
   1a5b8:	mov	x1, x19
   1a5bc:	bl	1b4f0 <gl_rbtree_list_check_invariants@@Base+0x1960>
   1a5c0:	b	1a5d0 <gl_rbtree_list_check_invariants@@Base+0xa40>
   1a5c4:	str	wzr, [x19, #24]
   1a5c8:	str	x19, [x20, #40]
   1a5cc:	str	xzr, [x19, #16]
   1a5d0:	mov	x0, x19
   1a5d4:	ldp	x20, x19, [sp, #32]
   1a5d8:	ldr	x21, [sp, #16]
   1a5dc:	ldp	x29, x30, [sp], #48
   1a5e0:	ret
   1a5e4:	stp	x29, x30, [sp, #-48]!
   1a5e8:	stp	x20, x19, [sp, #32]
   1a5ec:	mov	x20, x0
   1a5f0:	mov	w0, #0x30                  	// #48
   1a5f4:	stp	x22, x21, [sp, #16]
   1a5f8:	mov	x29, sp
   1a5fc:	mov	x22, x2
   1a600:	mov	x21, x1
   1a604:	bl	a550 <malloc@plt>
   1a608:	mov	x19, x0
   1a60c:	cbz	x0, 1a66c <gl_rbtree_list_check_invariants@@Base+0xadc>
   1a610:	mov	w8, #0x1                   	// #1
   1a614:	stp	xzr, xzr, [x19]
   1a618:	stp	x8, x22, [x19, #32]
   1a61c:	ldr	x8, [x21]
   1a620:	cbz	x8, 1a638 <gl_rbtree_list_check_invariants@@Base+0xaa8>
   1a624:	mov	x21, x8
   1a628:	ldr	x8, [x8, #8]
   1a62c:	cbnz	x8, 1a624 <gl_rbtree_list_check_invariants@@Base+0xa94>
   1a630:	add	x8, x21, #0x8
   1a634:	b	1a63c <gl_rbtree_list_check_invariants@@Base+0xaac>
   1a638:	mov	x8, x21
   1a63c:	str	x19, [x8]
   1a640:	mov	x8, x21
   1a644:	str	x21, [x19, #16]
   1a648:	ldr	x9, [x8, #32]
   1a64c:	add	x9, x9, #0x1
   1a650:	str	x9, [x8, #32]
   1a654:	ldr	x8, [x8, #16]
   1a658:	cbnz	x8, 1a648 <gl_rbtree_list_check_invariants@@Base+0xab8>
   1a65c:	mov	x0, x20
   1a660:	mov	x1, x19
   1a664:	mov	x2, x21
   1a668:	bl	1b4f0 <gl_rbtree_list_check_invariants@@Base+0x1960>
   1a66c:	mov	x0, x19
   1a670:	ldp	x20, x19, [sp, #32]
   1a674:	ldp	x22, x21, [sp, #16]
   1a678:	ldp	x29, x30, [sp], #48
   1a67c:	ret
   1a680:	stp	x29, x30, [sp, #-48]!
   1a684:	stp	x20, x19, [sp, #32]
   1a688:	mov	x20, x0
   1a68c:	mov	w0, #0x30                  	// #48
   1a690:	stp	x22, x21, [sp, #16]
   1a694:	mov	x29, sp
   1a698:	mov	x22, x2
   1a69c:	mov	x21, x1
   1a6a0:	bl	a550 <malloc@plt>
   1a6a4:	mov	x19, x0
   1a6a8:	cbz	x0, 1a704 <gl_rbtree_list_check_invariants@@Base+0xb74>
   1a6ac:	mov	w8, #0x1                   	// #1
   1a6b0:	stp	xzr, xzr, [x19]
   1a6b4:	stp	x8, x22, [x19, #32]
   1a6b8:	mov	x8, x21
   1a6bc:	ldr	x9, [x8, #8]!
   1a6c0:	cbz	x9, 1a6d4 <gl_rbtree_list_check_invariants@@Base+0xb44>
   1a6c4:	mov	x21, x9
   1a6c8:	ldr	x9, [x9]
   1a6cc:	cbnz	x9, 1a6c4 <gl_rbtree_list_check_invariants@@Base+0xb34>
   1a6d0:	mov	x8, x21
   1a6d4:	str	x19, [x8]
   1a6d8:	mov	x8, x21
   1a6dc:	str	x21, [x19, #16]
   1a6e0:	ldr	x9, [x8, #32]
   1a6e4:	add	x9, x9, #0x1
   1a6e8:	str	x9, [x8, #32]
   1a6ec:	ldr	x8, [x8, #16]
   1a6f0:	cbnz	x8, 1a6e0 <gl_rbtree_list_check_invariants@@Base+0xb50>
   1a6f4:	mov	x0, x20
   1a6f8:	mov	x1, x19
   1a6fc:	mov	x2, x21
   1a700:	bl	1b4f0 <gl_rbtree_list_check_invariants@@Base+0x1960>
   1a704:	mov	x0, x19
   1a708:	ldp	x20, x19, [sp, #32]
   1a70c:	ldp	x22, x21, [sp, #16]
   1a710:	ldp	x29, x30, [sp], #48
   1a714:	ret
   1a718:	stp	x29, x30, [sp, #-64]!
   1a71c:	stp	x22, x21, [sp, #32]
   1a720:	stp	x20, x19, [sp, #48]
   1a724:	str	x23, [sp, #16]
   1a728:	ldr	x23, [x0, #40]
   1a72c:	mov	x21, x2
   1a730:	mov	x19, x0
   1a734:	mov	x29, sp
   1a738:	cbz	x23, 1a808 <gl_rbtree_list_check_invariants@@Base+0xc78>
   1a73c:	ldr	x8, [x23, #32]
   1a740:	cmp	x8, x1
   1a744:	b.cc	1a814 <gl_rbtree_list_check_invariants@@Base+0xc84>  // b.lo, b.ul, b.last
   1a748:	b.ne	1a7a4 <gl_rbtree_list_check_invariants@@Base+0xc14>  // b.any
   1a74c:	mov	w0, #0x30                  	// #48
   1a750:	bl	a550 <malloc@plt>
   1a754:	mov	x20, x0
   1a758:	cbz	x0, 1a85c <gl_rbtree_list_check_invariants@@Base+0xccc>
   1a75c:	mov	w8, #0x1                   	// #1
   1a760:	stp	xzr, xzr, [x20]
   1a764:	stp	x8, x21, [x20, #32]
   1a768:	cbz	x23, 1a818 <gl_rbtree_list_check_invariants@@Base+0xc88>
   1a76c:	mov	x2, x23
   1a770:	ldr	x23, [x23, #8]
   1a774:	cbnz	x23, 1a76c <gl_rbtree_list_check_invariants@@Base+0xbdc>
   1a778:	mov	x8, x2
   1a77c:	str	x20, [x2, #8]
   1a780:	str	x2, [x20, #16]
   1a784:	ldr	x9, [x8, #32]
   1a788:	add	x9, x9, #0x1
   1a78c:	str	x9, [x8, #32]
   1a790:	ldr	x8, [x8, #16]
   1a794:	cbnz	x8, 1a784 <gl_rbtree_list_check_invariants@@Base+0xbf4>
   1a798:	mov	x0, x19
   1a79c:	mov	x1, x20
   1a7a0:	b	1a858 <gl_rbtree_list_check_invariants@@Base+0xcc8>
   1a7a4:	mov	x22, x23
   1a7a8:	ldr	x23, [x23]
   1a7ac:	cbz	x23, 1a7c0 <gl_rbtree_list_check_invariants@@Base+0xc30>
   1a7b0:	ldr	x8, [x23, #32]
   1a7b4:	subs	x8, x1, x8
   1a7b8:	b.cc	1a7a4 <gl_rbtree_list_check_invariants@@Base+0xc14>  // b.lo, b.ul, b.last
   1a7bc:	mov	x1, x8
   1a7c0:	cbz	x1, 1a7d0 <gl_rbtree_list_check_invariants@@Base+0xc40>
   1a7c4:	ldr	x23, [x22, #8]
   1a7c8:	sub	x1, x1, #0x1
   1a7cc:	b	1a7a4 <gl_rbtree_list_check_invariants@@Base+0xc14>
   1a7d0:	mov	w0, #0x30                  	// #48
   1a7d4:	bl	a550 <malloc@plt>
   1a7d8:	mov	x20, x0
   1a7dc:	cbz	x0, 1a85c <gl_rbtree_list_check_invariants@@Base+0xccc>
   1a7e0:	mov	w8, #0x1                   	// #1
   1a7e4:	stp	xzr, xzr, [x20]
   1a7e8:	stp	x8, x21, [x20, #32]
   1a7ec:	ldr	x8, [x22]
   1a7f0:	cbz	x8, 1a828 <gl_rbtree_list_check_invariants@@Base+0xc98>
   1a7f4:	mov	x22, x8
   1a7f8:	ldr	x8, [x8, #8]
   1a7fc:	cbnz	x8, 1a7f4 <gl_rbtree_list_check_invariants@@Base+0xc64>
   1a800:	add	x8, x22, #0x8
   1a804:	b	1a82c <gl_rbtree_list_check_invariants@@Base+0xc9c>
   1a808:	mov	x8, xzr
   1a80c:	cmp	x8, x1
   1a810:	b.cs	1a748 <gl_rbtree_list_check_invariants@@Base+0xbb8>  // b.hs, b.nlast
   1a814:	bl	a850 <abort@plt>
   1a818:	str	wzr, [x20, #24]
   1a81c:	str	x20, [x19, #40]
   1a820:	str	xzr, [x20, #16]
   1a824:	b	1a85c <gl_rbtree_list_check_invariants@@Base+0xccc>
   1a828:	mov	x8, x22
   1a82c:	str	x20, [x8]
   1a830:	mov	x8, x22
   1a834:	str	x22, [x20, #16]
   1a838:	ldr	x9, [x8, #32]
   1a83c:	add	x9, x9, #0x1
   1a840:	str	x9, [x8, #32]
   1a844:	ldr	x8, [x8, #16]
   1a848:	cbnz	x8, 1a838 <gl_rbtree_list_check_invariants@@Base+0xca8>
   1a84c:	mov	x0, x19
   1a850:	mov	x1, x20
   1a854:	mov	x2, x22
   1a858:	bl	1b4f0 <gl_rbtree_list_check_invariants@@Base+0x1960>
   1a85c:	mov	x0, x20
   1a860:	ldp	x20, x19, [sp, #48]
   1a864:	ldp	x22, x21, [sp, #32]
   1a868:	ldr	x23, [sp, #16]
   1a86c:	ldp	x29, x30, [sp], #64
   1a870:	ret
   1a874:	stp	x29, x30, [sp, #-32]!
   1a878:	stp	x20, x19, [sp, #16]
   1a87c:	ldp	x8, x2, [x1, #8]
   1a880:	ldr	x10, [x1]
   1a884:	mov	x19, x1
   1a888:	mov	x20, x0
   1a88c:	mov	x29, sp
   1a890:	cbz	x10, 1a8cc <gl_rbtree_list_check_invariants@@Base+0xd3c>
   1a894:	cbz	x8, 1a928 <gl_rbtree_list_check_invariants@@Base+0xd98>
   1a898:	mov	x9, x10
   1a89c:	mov	x8, x9
   1a8a0:	ldr	x9, [x9, #8]
   1a8a4:	cbnz	x9, 1a89c <gl_rbtree_list_check_invariants@@Base+0xd0c>
   1a8a8:	ldr	x9, [x8, #16]
   1a8ac:	ldr	x1, [x8]
   1a8b0:	ldr	w11, [x8, #24]
   1a8b4:	cmp	x9, x19
   1a8b8:	b.eq	1a95c <gl_rbtree_list_check_invariants@@Base+0xdcc>  // b.none
   1a8bc:	cbz	x1, 1a8c4 <gl_rbtree_list_check_invariants@@Base+0xd34>
   1a8c0:	str	x9, [x1, #16]
   1a8c4:	str	x1, [x9, #8]
   1a8c8:	b	1a960 <gl_rbtree_list_check_invariants@@Base+0xdd0>
   1a8cc:	cbz	x8, 1a8d8 <gl_rbtree_list_check_invariants@@Base+0xd48>
   1a8d0:	str	x2, [x8, #16]
   1a8d4:	str	wzr, [x8, #24]
   1a8d8:	cbz	x2, 1a9f4 <gl_rbtree_list_check_invariants@@Base+0xe64>
   1a8dc:	ldr	x9, [x2]
   1a8e0:	cmp	x9, x19
   1a8e4:	cset	w9, ne  // ne = any
   1a8e8:	str	x8, [x2, w9, uxtw #3]
   1a8ec:	mov	x9, x2
   1a8f0:	ldr	x10, [x9, #32]
   1a8f4:	sub	x10, x10, #0x1
   1a8f8:	str	x10, [x9, #32]
   1a8fc:	ldr	x9, [x9, #16]
   1a900:	cbnz	x9, 1a8f0 <gl_rbtree_list_check_invariants@@Base+0xd60>
   1a904:	cbnz	x8, 1aa14 <gl_rbtree_list_check_invariants@@Base+0xe84>
   1a908:	ldr	w8, [x19, #24]
   1a90c:	cbnz	w8, 1aa14 <gl_rbtree_list_check_invariants@@Base+0xe84>
   1a910:	mov	x0, x20
   1a914:	mov	x1, xzr
   1a918:	bl	1b7c0 <gl_rbtree_list_check_invariants@@Base+0x1c30>
   1a91c:	ldr	x8, [x20, #24]
   1a920:	cbnz	x8, 1aa1c <gl_rbtree_list_check_invariants@@Base+0xe8c>
   1a924:	b	1aa24 <gl_rbtree_list_check_invariants@@Base+0xe94>
   1a928:	str	x2, [x10, #16]
   1a92c:	str	wzr, [x10, #24]
   1a930:	cbz	x2, 1aa3c <gl_rbtree_list_check_invariants@@Base+0xeac>
   1a934:	ldr	x8, [x2]
   1a938:	cmp	x8, x19
   1a93c:	cset	w8, ne  // ne = any
   1a940:	str	x10, [x2, w8, uxtw #3]
   1a944:	ldr	x8, [x2, #32]
   1a948:	sub	x8, x8, #0x1
   1a94c:	str	x8, [x2, #32]
   1a950:	ldr	x2, [x2, #16]
   1a954:	cbnz	x2, 1a944 <gl_rbtree_list_check_invariants@@Base+0xdb4>
   1a958:	b	1aa14 <gl_rbtree_list_check_invariants@@Base+0xe84>
   1a95c:	cbz	x19, 1a988 <gl_rbtree_list_check_invariants@@Base+0xdf8>
   1a960:	mov	x12, x9
   1a964:	ldr	x13, [x12, #32]
   1a968:	sub	x13, x13, #0x1
   1a96c:	str	x13, [x12, #32]
   1a970:	ldr	x12, [x12, #16]
   1a974:	cbnz	x12, 1a964 <gl_rbtree_list_check_invariants@@Base+0xdd4>
   1a978:	cmp	x9, x19
   1a97c:	b.eq	1a988 <gl_rbtree_list_check_invariants@@Base+0xdf8>  // b.none
   1a980:	str	x10, [x8]
   1a984:	str	x8, [x10, #16]
   1a988:	ldr	x10, [x19, #8]
   1a98c:	str	x10, [x8, #8]
   1a990:	str	x8, [x10, #16]
   1a994:	ldr	w10, [x19, #24]
   1a998:	str	w10, [x8, #24]
   1a99c:	ldr	x10, [x19, #32]
   1a9a0:	str	x2, [x8, #16]
   1a9a4:	str	x10, [x8, #32]
   1a9a8:	cbz	x2, 1a9c8 <gl_rbtree_list_check_invariants@@Base+0xe38>
   1a9ac:	mov	x10, x2
   1a9b0:	ldr	x12, [x10], #8
   1a9b4:	cmp	x12, x19
   1a9b8:	csel	x10, x2, x10, eq  // eq = none
   1a9bc:	str	x8, [x10]
   1a9c0:	cbnz	w11, 1aa14 <gl_rbtree_list_check_invariants@@Base+0xe84>
   1a9c4:	b	1a9d4 <gl_rbtree_list_check_invariants@@Base+0xe44>
   1a9c8:	add	x10, x20, #0x28
   1a9cc:	str	x8, [x10]
   1a9d0:	cbnz	w11, 1aa14 <gl_rbtree_list_check_invariants@@Base+0xe84>
   1a9d4:	cbz	x1, 1aa04 <gl_rbtree_list_check_invariants@@Base+0xe74>
   1a9d8:	ldr	w10, [x1, #24]
   1a9dc:	cmp	w10, #0x1
   1a9e0:	b.ne	1aa04 <gl_rbtree_list_check_invariants@@Base+0xe74>  // b.any
   1a9e4:	str	wzr, [x1, #24]
   1a9e8:	ldr	x8, [x20, #24]
   1a9ec:	cbnz	x8, 1aa1c <gl_rbtree_list_check_invariants@@Base+0xe8c>
   1a9f0:	b	1aa24 <gl_rbtree_list_check_invariants@@Base+0xe94>
   1a9f4:	str	x8, [x20, #40]
   1a9f8:	ldr	x8, [x20, #24]
   1a9fc:	cbnz	x8, 1aa1c <gl_rbtree_list_check_invariants@@Base+0xe8c>
   1aa00:	b	1aa24 <gl_rbtree_list_check_invariants@@Base+0xe94>
   1aa04:	cmp	x9, x19
   1aa08:	csel	x2, x9, x8, ne  // ne = any
   1aa0c:	mov	x0, x20
   1aa10:	bl	1b7c0 <gl_rbtree_list_check_invariants@@Base+0x1c30>
   1aa14:	ldr	x8, [x20, #24]
   1aa18:	cbz	x8, 1aa24 <gl_rbtree_list_check_invariants@@Base+0xe94>
   1aa1c:	ldr	x0, [x19, #40]
   1aa20:	blr	x8
   1aa24:	mov	x0, x19
   1aa28:	bl	a970 <free@plt>
   1aa2c:	ldp	x20, x19, [sp, #16]
   1aa30:	mov	w0, #0x1                   	// #1
   1aa34:	ldp	x29, x30, [sp], #32
   1aa38:	ret
   1aa3c:	str	x10, [x20, #40]
   1aa40:	ldr	x8, [x20, #24]
   1aa44:	cbnz	x8, 1aa1c <gl_rbtree_list_check_invariants@@Base+0xe8c>
   1aa48:	b	1aa24 <gl_rbtree_list_check_invariants@@Base+0xe94>
   1aa4c:	stp	x29, x30, [sp, #-16]!
   1aa50:	ldr	x9, [x0, #40]
   1aa54:	mov	x29, sp
   1aa58:	cbz	x9, 1aaa8 <gl_rbtree_list_check_invariants@@Base+0xf18>
   1aa5c:	ldr	x8, [x9, #32]
   1aa60:	cmp	x8, x1
   1aa64:	b.ls	1aaa8 <gl_rbtree_list_check_invariants@@Base+0xf18>  // b.plast
   1aa68:	mov	x8, x9
   1aa6c:	ldr	x9, [x9]
   1aa70:	cbz	x9, 1aa84 <gl_rbtree_list_check_invariants@@Base+0xef4>
   1aa74:	ldr	x10, [x9, #32]
   1aa78:	subs	x10, x1, x10
   1aa7c:	b.cc	1aa68 <gl_rbtree_list_check_invariants@@Base+0xed8>  // b.lo, b.ul, b.last
   1aa80:	mov	x1, x10
   1aa84:	cbz	x1, 1aa94 <gl_rbtree_list_check_invariants@@Base+0xf04>
   1aa88:	ldr	x9, [x8, #8]
   1aa8c:	sub	x1, x1, #0x1
   1aa90:	b	1aa68 <gl_rbtree_list_check_invariants@@Base+0xed8>
   1aa94:	mov	x1, x8
   1aa98:	bl	1a874 <gl_rbtree_list_check_invariants@@Base+0xce4>
   1aa9c:	mov	w0, #0x1                   	// #1
   1aaa0:	ldp	x29, x30, [sp], #16
   1aaa4:	ret
   1aaa8:	bl	a850 <abort@plt>
   1aaac:	stp	x29, x30, [sp, #-32]!
   1aab0:	ldr	x8, [x0, #40]
   1aab4:	str	x19, [sp, #16]
   1aab8:	mov	x29, sp
   1aabc:	cbz	x8, 1aaf4 <gl_rbtree_list_check_invariants@@Base+0xf64>
   1aac0:	ldr	x2, [x8, #32]
   1aac4:	mov	x3, x1
   1aac8:	mov	x1, xzr
   1aacc:	mov	x19, x0
   1aad0:	bl	19edc <gl_rbtree_list_check_invariants@@Base+0x34c>
   1aad4:	cbz	x0, 1aae8 <gl_rbtree_list_check_invariants@@Base+0xf58>
   1aad8:	mov	x1, x0
   1aadc:	mov	x0, x19
   1aae0:	bl	1a874 <gl_rbtree_list_check_invariants@@Base+0xce4>
   1aae4:	mov	w0, #0x1                   	// #1
   1aae8:	ldr	x19, [sp, #16]
   1aaec:	ldp	x29, x30, [sp], #32
   1aaf0:	ret
   1aaf4:	mov	w0, wzr
   1aaf8:	ldr	x19, [sp, #16]
   1aafc:	ldp	x29, x30, [sp], #32
   1ab00:	ret
   1ab04:	stp	x29, x30, [sp, #-80]!
   1ab08:	stp	x28, x25, [sp, #16]
   1ab0c:	stp	x24, x23, [sp, #32]
   1ab10:	stp	x22, x21, [sp, #48]
   1ab14:	stp	x20, x19, [sp, #64]
   1ab18:	mov	x29, sp
   1ab1c:	sub	sp, sp, #0x740
   1ab20:	ldr	x8, [x0, #40]
   1ab24:	mov	x9, sp
   1ab28:	mov	x19, x0
   1ab2c:	mov	x21, xzr
   1ab30:	add	x22, x9, #0x8
   1ab34:	sub	x23, x9, #0x8
   1ab38:	mov	w24, #0x1                   	// #1
   1ab3c:	cbz	x8, 1ab58 <gl_rbtree_list_check_invariants@@Base+0xfc8>
   1ab40:	add	x9, x22, x21, lsl #4
   1ab44:	stp	x8, xzr, [x9, #-8]
   1ab48:	ldr	x8, [x8]
   1ab4c:	add	x21, x21, #0x1
   1ab50:	add	x9, x9, #0x10
   1ab54:	cbnz	x8, 1ab44 <gl_rbtree_list_check_invariants@@Base+0xfb4>
   1ab58:	cbz	x21, 1aba4 <gl_rbtree_list_check_invariants@@Base+0x1014>
   1ab5c:	add	x25, x23, x21, lsl #4
   1ab60:	b	1ab74 <gl_rbtree_list_check_invariants@@Base+0xfe4>
   1ab64:	mov	x0, x20
   1ab68:	bl	a970 <free@plt>
   1ab6c:	sub	x25, x25, #0x10
   1ab70:	cbz	x21, 1aba4 <gl_rbtree_list_check_invariants@@Base+0x1014>
   1ab74:	ldp	x20, x8, [x25, #-8]
   1ab78:	cbz	x8, 1ab94 <gl_rbtree_list_check_invariants@@Base+0x1004>
   1ab7c:	ldr	x8, [x19, #24]
   1ab80:	sub	x21, x21, #0x1
   1ab84:	cbz	x8, 1ab64 <gl_rbtree_list_check_invariants@@Base+0xfd4>
   1ab88:	ldr	x0, [x20, #40]
   1ab8c:	blr	x8
   1ab90:	b	1ab64 <gl_rbtree_list_check_invariants@@Base+0xfd4>
   1ab94:	str	x24, [x25]
   1ab98:	ldr	x8, [x20, #8]
   1ab9c:	cbnz	x8, 1ab40 <gl_rbtree_list_check_invariants@@Base+0xfb0>
   1aba0:	b	1ab58 <gl_rbtree_list_check_invariants@@Base+0xfc8>
   1aba4:	mov	x0, x19
   1aba8:	add	sp, sp, #0x740
   1abac:	ldp	x20, x19, [sp, #64]
   1abb0:	ldp	x22, x21, [sp, #48]
   1abb4:	ldp	x24, x23, [sp, #32]
   1abb8:	ldp	x28, x25, [sp, #16]
   1abbc:	ldp	x29, x30, [sp], #80
   1abc0:	b	a970 <free@plt>
   1abc4:	ldr	x9, [x0]
   1abc8:	stp	x9, x0, [x8]
   1abcc:	ldr	x9, [x0, #40]
   1abd0:	cbz	x9, 1abe8 <gl_rbtree_list_check_invariants@@Base+0x1058>
   1abd4:	mov	x10, x9
   1abd8:	ldr	x9, [x9]
   1abdc:	cbnz	x9, 1abd4 <gl_rbtree_list_check_invariants@@Base+0x1044>
   1abe0:	stp	x10, xzr, [x8, #24]
   1abe4:	ret
   1abe8:	mov	x10, xzr
   1abec:	stp	x10, xzr, [x8, #24]
   1abf0:	ret
   1abf4:	stp	x29, x30, [sp, #-16]!
   1abf8:	ldr	x9, [x0, #40]
   1abfc:	mov	x29, sp
   1ac00:	cbz	x9, 1ac14 <gl_rbtree_list_check_invariants@@Base+0x1084>
   1ac04:	ldr	x10, [x9, #32]
   1ac08:	cmp	x1, x2
   1ac0c:	b.ls	1ac20 <gl_rbtree_list_check_invariants@@Base+0x1090>  // b.plast
   1ac10:	b	1acb4 <gl_rbtree_list_check_invariants@@Base+0x1124>
   1ac14:	mov	x10, xzr
   1ac18:	cmp	x1, x2
   1ac1c:	b.hi	1acb4 <gl_rbtree_list_check_invariants@@Base+0x1124>  // b.pmore
   1ac20:	cmp	x10, x2
   1ac24:	b.cc	1acb4 <gl_rbtree_list_check_invariants@@Base+0x1124>  // b.lo, b.ul, b.last
   1ac28:	ldr	x11, [x0]
   1ac2c:	cmp	x10, x1
   1ac30:	stp	x11, x0, [x8]
   1ac34:	b.ls	1ac68 <gl_rbtree_list_check_invariants@@Base+0x10d8>  // b.plast
   1ac38:	mov	x12, x9
   1ac3c:	mov	x11, x12
   1ac40:	ldr	x12, [x12]
   1ac44:	cbz	x12, 1ac58 <gl_rbtree_list_check_invariants@@Base+0x10c8>
   1ac48:	ldr	x13, [x12, #32]
   1ac4c:	subs	x13, x1, x13
   1ac50:	b.cc	1ac3c <gl_rbtree_list_check_invariants@@Base+0x10ac>  // b.lo, b.ul, b.last
   1ac54:	mov	x1, x13
   1ac58:	cbz	x1, 1ac6c <gl_rbtree_list_check_invariants@@Base+0x10dc>
   1ac5c:	ldr	x12, [x11, #8]
   1ac60:	sub	x1, x1, #0x1
   1ac64:	b	1ac3c <gl_rbtree_list_check_invariants@@Base+0x10ac>
   1ac68:	mov	x11, xzr
   1ac6c:	cmp	x10, x2
   1ac70:	str	x11, [x8, #24]
   1ac74:	b.ls	1aca4 <gl_rbtree_list_check_invariants@@Base+0x1114>  // b.plast
   1ac78:	mov	x10, x9
   1ac7c:	ldr	x9, [x9]
   1ac80:	cbz	x9, 1ac94 <gl_rbtree_list_check_invariants@@Base+0x1104>
   1ac84:	ldr	x11, [x9, #32]
   1ac88:	subs	x11, x2, x11
   1ac8c:	b.cc	1ac78 <gl_rbtree_list_check_invariants@@Base+0x10e8>  // b.lo, b.ul, b.last
   1ac90:	mov	x2, x11
   1ac94:	cbz	x2, 1aca8 <gl_rbtree_list_check_invariants@@Base+0x1118>
   1ac98:	ldr	x9, [x10, #8]
   1ac9c:	sub	x2, x2, #0x1
   1aca0:	b	1ac78 <gl_rbtree_list_check_invariants@@Base+0x10e8>
   1aca4:	mov	x10, xzr
   1aca8:	str	x10, [x8, #32]
   1acac:	ldp	x29, x30, [sp], #16
   1acb0:	ret
   1acb4:	bl	a850 <abort@plt>
   1acb8:	ldp	x8, x9, [x0, #24]
   1acbc:	cmp	x8, x9
   1acc0:	b.eq	1ad10 <gl_rbtree_list_check_invariants@@Base+0x1180>  // b.none
   1acc4:	ldr	x9, [x8, #40]
   1acc8:	str	x9, [x1]
   1accc:	cbz	x2, 1acd4 <gl_rbtree_list_check_invariants@@Base+0x1144>
   1acd0:	str	x8, [x2]
   1acd4:	ldr	x10, [x8, #8]
   1acd8:	cbz	x10, 1acec <gl_rbtree_list_check_invariants@@Base+0x115c>
   1acdc:	mov	x9, x10
   1ace0:	ldr	x10, [x10]
   1ace4:	cbnz	x10, 1acdc <gl_rbtree_list_check_invariants@@Base+0x114c>
   1ace8:	b	1ad04 <gl_rbtree_list_check_invariants@@Base+0x1174>
   1acec:	ldr	x9, [x8, #16]
   1acf0:	cbz	x9, 1ad04 <gl_rbtree_list_check_invariants@@Base+0x1174>
   1acf4:	ldr	x10, [x9, #8]
   1acf8:	cmp	x10, x8
   1acfc:	mov	x8, x9
   1ad00:	b.eq	1acec <gl_rbtree_list_check_invariants@@Base+0x115c>  // b.none
   1ad04:	str	x9, [x0, #24]
   1ad08:	mov	w0, #0x1                   	// #1
   1ad0c:	ret
   1ad10:	mov	w0, wzr
   1ad14:	ret
   1ad18:	ret
   1ad1c:	stp	x29, x30, [sp, #-48]!
   1ad20:	stp	x22, x21, [sp, #16]
   1ad24:	stp	x20, x19, [sp, #32]
   1ad28:	ldr	x20, [x0, #40]
   1ad2c:	mov	x29, sp
   1ad30:	cbz	x20, 1ad98 <gl_rbtree_list_check_invariants@@Base+0x1208>
   1ad34:	mov	x19, x2
   1ad38:	mov	x21, x1
   1ad3c:	b	1ad4c <gl_rbtree_list_check_invariants@@Base+0x11bc>
   1ad40:	add	x20, x20, #0x8
   1ad44:	ldr	x20, [x20]
   1ad48:	cbz	x20, 1ad98 <gl_rbtree_list_check_invariants@@Base+0x1208>
   1ad4c:	ldr	x0, [x20, #40]
   1ad50:	mov	x1, x19
   1ad54:	blr	x21
   1ad58:	tbnz	w0, #31, 1ad40 <gl_rbtree_list_check_invariants@@Base+0x11b0>
   1ad5c:	cbnz	w0, 1ad44 <gl_rbtree_list_check_invariants@@Base+0x11b4>
   1ad60:	ldr	x22, [x20]
   1ad64:	cbnz	x22, 1ad78 <gl_rbtree_list_check_invariants@@Base+0x11e8>
   1ad68:	b	1ad98 <gl_rbtree_list_check_invariants@@Base+0x1208>
   1ad6c:	add	x22, x22, #0x8
   1ad70:	ldr	x22, [x22]
   1ad74:	cbz	x22, 1ad98 <gl_rbtree_list_check_invariants@@Base+0x1208>
   1ad78:	ldr	x0, [x22, #40]
   1ad7c:	mov	x1, x19
   1ad80:	blr	x21
   1ad84:	tbnz	w0, #31, 1ad6c <gl_rbtree_list_check_invariants@@Base+0x11dc>
   1ad88:	cbnz	w0, 1adac <gl_rbtree_list_check_invariants@@Base+0x121c>
   1ad8c:	mov	x20, x22
   1ad90:	ldr	x22, [x22]
   1ad94:	cbnz	x22, 1ad78 <gl_rbtree_list_check_invariants@@Base+0x11e8>
   1ad98:	mov	x0, x20
   1ad9c:	ldp	x20, x19, [sp, #32]
   1ada0:	ldp	x22, x21, [sp, #16]
   1ada4:	ldp	x29, x30, [sp], #48
   1ada8:	ret
   1adac:	bl	a850 <abort@plt>
   1adb0:	stp	x29, x30, [sp, #-64]!
   1adb4:	cmp	x2, x3
   1adb8:	stp	x24, x23, [sp, #16]
   1adbc:	stp	x22, x21, [sp, #32]
   1adc0:	stp	x20, x19, [sp, #48]
   1adc4:	mov	x29, sp
   1adc8:	b.hi	1aeec <gl_rbtree_list_check_invariants@@Base+0x135c>  // b.pmore
   1adcc:	ldr	x22, [x0, #40]
   1add0:	mov	x19, x4
   1add4:	mov	x23, x3
   1add8:	mov	x21, x2
   1addc:	mov	x20, x1
   1ade0:	cbz	x22, 1adf4 <gl_rbtree_list_check_invariants@@Base+0x1264>
   1ade4:	ldr	x8, [x22, #32]
   1ade8:	cmp	x8, x23
   1adec:	b.cs	1ae00 <gl_rbtree_list_check_invariants@@Base+0x1270>  // b.hs, b.nlast
   1adf0:	b	1aeec <gl_rbtree_list_check_invariants@@Base+0x135c>
   1adf4:	mov	x8, xzr
   1adf8:	cmp	x8, x23
   1adfc:	b.cc	1aeec <gl_rbtree_list_check_invariants@@Base+0x135c>  // b.lo, b.ul, b.last
   1ae00:	cbnz	x22, 1ae38 <gl_rbtree_list_check_invariants@@Base+0x12a8>
   1ae04:	mov	x0, x22
   1ae08:	ldp	x20, x19, [sp, #48]
   1ae0c:	ldp	x22, x21, [sp, #32]
   1ae10:	ldp	x24, x23, [sp, #16]
   1ae14:	ldp	x29, x30, [sp], #64
   1ae18:	ret
   1ae1c:	add	x8, x24, #0x1
   1ae20:	sub	x21, x21, x8
   1ae24:	sub	x23, x23, x8
   1ae28:	add	x22, x22, #0x8
   1ae2c:	ldr	x8, [x22]
   1ae30:	mov	x22, x8
   1ae34:	cbz	x8, 1ae04 <gl_rbtree_list_check_invariants@@Base+0x1274>
   1ae38:	ldr	x8, [x22]
   1ae3c:	cbz	x8, 1ae50 <gl_rbtree_list_check_invariants@@Base+0x12c0>
   1ae40:	ldr	x24, [x8, #32]
   1ae44:	cmp	x21, x24
   1ae48:	b.hi	1ae1c <gl_rbtree_list_check_invariants@@Base+0x128c>  // b.pmore
   1ae4c:	b	1ae5c <gl_rbtree_list_check_invariants@@Base+0x12cc>
   1ae50:	mov	x24, xzr
   1ae54:	cmp	x21, x24
   1ae58:	b.hi	1ae1c <gl_rbtree_list_check_invariants@@Base+0x128c>  // b.pmore
   1ae5c:	cmp	x23, x24
   1ae60:	b.ls	1ae30 <gl_rbtree_list_check_invariants@@Base+0x12a0>  // b.plast
   1ae64:	ldr	x0, [x22, #40]
   1ae68:	mov	x1, x19
   1ae6c:	blr	x20
   1ae70:	tbnz	w0, #31, 1ae7c <gl_rbtree_list_check_invariants@@Base+0x12ec>
   1ae74:	cbnz	w0, 1ae2c <gl_rbtree_list_check_invariants@@Base+0x129c>
   1ae78:	b	1ae8c <gl_rbtree_list_check_invariants@@Base+0x12fc>
   1ae7c:	mvn	x8, x24
   1ae80:	mov	x21, xzr
   1ae84:	add	x23, x23, x8
   1ae88:	b	1ae28 <gl_rbtree_list_check_invariants@@Base+0x1298>
   1ae8c:	ldr	x23, [x22]
   1ae90:	cbnz	x23, 1aeb4 <gl_rbtree_list_check_invariants@@Base+0x1324>
   1ae94:	b	1ae04 <gl_rbtree_list_check_invariants@@Base+0x1274>
   1ae98:	mvn	x8, x8
   1ae9c:	add	x21, x21, x8
   1aea0:	add	x8, x23, #0x8
   1aea4:	mov	x23, x22
   1aea8:	mov	x22, x23
   1aeac:	ldr	x23, [x8]
   1aeb0:	cbz	x23, 1ae04 <gl_rbtree_list_check_invariants@@Base+0x1274>
   1aeb4:	ldr	x8, [x23]
   1aeb8:	cbz	x8, 1aec0 <gl_rbtree_list_check_invariants@@Base+0x1330>
   1aebc:	ldr	x8, [x8, #32]
   1aec0:	cmp	x21, x8
   1aec4:	b.hi	1ae98 <gl_rbtree_list_check_invariants@@Base+0x1308>  // b.pmore
   1aec8:	ldr	x0, [x23, #40]
   1aecc:	mov	x1, x19
   1aed0:	blr	x20
   1aed4:	tbnz	w0, #31, 1aee4 <gl_rbtree_list_check_invariants@@Base+0x1354>
   1aed8:	mov	x8, x23
   1aedc:	cbz	w0, 1aea8 <gl_rbtree_list_check_invariants@@Base+0x1318>
   1aee0:	b	1aeec <gl_rbtree_list_check_invariants@@Base+0x135c>
   1aee4:	mov	x21, xzr
   1aee8:	b	1aea0 <gl_rbtree_list_check_invariants@@Base+0x1310>
   1aeec:	bl	a850 <abort@plt>
   1aef0:	stp	x29, x30, [sp, #-64]!
   1aef4:	stp	x22, x21, [sp, #32]
   1aef8:	stp	x20, x19, [sp, #48]
   1aefc:	ldr	x21, [x0, #40]
   1af00:	str	x23, [sp, #16]
   1af04:	mov	x29, sp
   1af08:	cbz	x21, 1af58 <gl_rbtree_list_check_invariants@@Base+0x13c8>
   1af0c:	mov	x19, x2
   1af10:	mov	x20, x1
   1af14:	mov	x22, xzr
   1af18:	b	1af28 <gl_rbtree_list_check_invariants@@Base+0x1398>
   1af1c:	cbz	w0, 1af74 <gl_rbtree_list_check_invariants@@Base+0x13e4>
   1af20:	ldr	x21, [x21]
   1af24:	cbz	x21, 1af58 <gl_rbtree_list_check_invariants@@Base+0x13c8>
   1af28:	ldr	x0, [x21, #40]
   1af2c:	mov	x1, x19
   1af30:	blr	x20
   1af34:	tbz	w0, #31, 1af1c <gl_rbtree_list_check_invariants@@Base+0x138c>
   1af38:	ldr	x8, [x21]
   1af3c:	cbz	x8, 1af48 <gl_rbtree_list_check_invariants@@Base+0x13b8>
   1af40:	ldr	x8, [x8, #32]
   1af44:	add	x22, x8, x22
   1af48:	add	x22, x22, #0x1
   1af4c:	add	x21, x21, #0x8
   1af50:	ldr	x21, [x21]
   1af54:	cbnz	x21, 1af28 <gl_rbtree_list_check_invariants@@Base+0x1398>
   1af58:	mov	x21, #0xffffffffffffffff    	// #-1
   1af5c:	mov	x0, x21
   1af60:	ldp	x20, x19, [sp, #48]
   1af64:	ldp	x22, x21, [sp, #32]
   1af68:	ldr	x23, [sp, #16]
   1af6c:	ldp	x29, x30, [sp], #64
   1af70:	ret
   1af74:	ldr	x23, [x21]
   1af78:	cbz	x23, 1afe0 <gl_rbtree_list_check_invariants@@Base+0x1450>
   1af7c:	ldr	x8, [x23, #32]
   1af80:	add	x21, x8, x22
   1af84:	b	1af94 <gl_rbtree_list_check_invariants@@Base+0x1404>
   1af88:	ldr	x8, [x23, #32]
   1af8c:	add	x21, x8, x22
   1af90:	cbz	x23, 1af5c <gl_rbtree_list_check_invariants@@Base+0x13cc>
   1af94:	ldr	x0, [x23, #40]
   1af98:	mov	x1, x19
   1af9c:	blr	x20
   1afa0:	tbnz	w0, #31, 1afc0 <gl_rbtree_list_check_invariants@@Base+0x1430>
   1afa4:	cbnz	w0, 1afe8 <gl_rbtree_list_check_invariants@@Base+0x1458>
   1afa8:	ldr	x23, [x23]
   1afac:	cbnz	x23, 1af88 <gl_rbtree_list_check_invariants@@Base+0x13f8>
   1afb0:	mov	x8, xzr
   1afb4:	add	x21, x8, x22
   1afb8:	cbnz	x23, 1af94 <gl_rbtree_list_check_invariants@@Base+0x1404>
   1afbc:	b	1af5c <gl_rbtree_list_check_invariants@@Base+0x13cc>
   1afc0:	ldr	x8, [x23]
   1afc4:	cbz	x8, 1afd0 <gl_rbtree_list_check_invariants@@Base+0x1440>
   1afc8:	ldr	x8, [x8, #32]
   1afcc:	add	x22, x8, x22
   1afd0:	ldr	x23, [x23, #8]
   1afd4:	add	x22, x22, #0x1
   1afd8:	cbnz	x23, 1af94 <gl_rbtree_list_check_invariants@@Base+0x1404>
   1afdc:	b	1af5c <gl_rbtree_list_check_invariants@@Base+0x13cc>
   1afe0:	mov	x21, x22
   1afe4:	b	1af5c <gl_rbtree_list_check_invariants@@Base+0x13cc>
   1afe8:	bl	a850 <abort@plt>
   1afec:	stp	x29, x30, [sp, #-80]!
   1aff0:	cmp	x2, x3
   1aff4:	str	x25, [sp, #16]
   1aff8:	stp	x24, x23, [sp, #32]
   1affc:	stp	x22, x21, [sp, #48]
   1b000:	stp	x20, x19, [sp, #64]
   1b004:	mov	x29, sp
   1b008:	b.hi	1b16c <gl_rbtree_list_check_invariants@@Base+0x15dc>  // b.pmore
   1b00c:	ldr	x24, [x0, #40]
   1b010:	mov	x19, x4
   1b014:	mov	x22, x3
   1b018:	mov	x20, x2
   1b01c:	mov	x21, x1
   1b020:	cbz	x24, 1b034 <gl_rbtree_list_check_invariants@@Base+0x14a4>
   1b024:	ldr	x8, [x24, #32]
   1b028:	cmp	x8, x22
   1b02c:	b.cs	1b040 <gl_rbtree_list_check_invariants@@Base+0x14b0>  // b.hs, b.nlast
   1b030:	b	1b16c <gl_rbtree_list_check_invariants@@Base+0x15dc>
   1b034:	mov	x8, xzr
   1b038:	cmp	x8, x22
   1b03c:	b.cc	1b16c <gl_rbtree_list_check_invariants@@Base+0x15dc>  // b.lo, b.ul, b.last
   1b040:	cbz	x24, 1b0bc <gl_rbtree_list_check_invariants@@Base+0x152c>
   1b044:	mov	x23, xzr
   1b048:	b	1b06c <gl_rbtree_list_check_invariants@@Base+0x14dc>
   1b04c:	add	x8, x25, #0x1
   1b050:	sub	x20, x20, x8
   1b054:	sub	x22, x22, x8
   1b058:	add	x23, x8, x23
   1b05c:	add	x24, x24, #0x8
   1b060:	ldr	x8, [x24]
   1b064:	mov	x24, x8
   1b068:	cbz	x8, 1b0bc <gl_rbtree_list_check_invariants@@Base+0x152c>
   1b06c:	ldr	x8, [x24]
   1b070:	cbz	x8, 1b084 <gl_rbtree_list_check_invariants@@Base+0x14f4>
   1b074:	ldr	x25, [x8, #32]
   1b078:	cmp	x20, x25
   1b07c:	b.hi	1b04c <gl_rbtree_list_check_invariants@@Base+0x14bc>  // b.pmore
   1b080:	b	1b090 <gl_rbtree_list_check_invariants@@Base+0x1500>
   1b084:	mov	x25, xzr
   1b088:	cmp	x20, x25
   1b08c:	b.hi	1b04c <gl_rbtree_list_check_invariants@@Base+0x14bc>  // b.pmore
   1b090:	cmp	x22, x25
   1b094:	b.ls	1b064 <gl_rbtree_list_check_invariants@@Base+0x14d4>  // b.plast
   1b098:	ldr	x0, [x24, #40]
   1b09c:	mov	x1, x19
   1b0a0:	blr	x21
   1b0a4:	tbnz	w0, #31, 1b0b0 <gl_rbtree_list_check_invariants@@Base+0x1520>
   1b0a8:	cbnz	w0, 1b060 <gl_rbtree_list_check_invariants@@Base+0x14d0>
   1b0ac:	b	1b0dc <gl_rbtree_list_check_invariants@@Base+0x154c>
   1b0b0:	mov	x20, xzr
   1b0b4:	add	x8, x25, #0x1
   1b0b8:	b	1b054 <gl_rbtree_list_check_invariants@@Base+0x14c4>
   1b0bc:	mov	x22, #0xffffffffffffffff    	// #-1
   1b0c0:	mov	x0, x22
   1b0c4:	ldp	x20, x19, [sp, #64]
   1b0c8:	ldp	x22, x21, [sp, #48]
   1b0cc:	ldp	x24, x23, [sp, #32]
   1b0d0:	ldr	x25, [sp, #16]
   1b0d4:	ldp	x29, x30, [sp], #80
   1b0d8:	ret
   1b0dc:	ldr	x24, [x24]
   1b0e0:	cbz	x24, 1b164 <gl_rbtree_list_check_invariants@@Base+0x15d4>
   1b0e4:	ldr	x8, [x24, #32]
   1b0e8:	add	x22, x8, x23
   1b0ec:	b	1b104 <gl_rbtree_list_check_invariants@@Base+0x1574>
   1b0f0:	mvn	x8, x25
   1b0f4:	add	x20, x20, x8
   1b0f8:	add	x24, x24, #0x8
   1b0fc:	ldr	x24, [x24]
   1b100:	cbz	x24, 1b0c0 <gl_rbtree_list_check_invariants@@Base+0x1530>
   1b104:	ldr	x8, [x24]
   1b108:	cbz	x8, 1b11c <gl_rbtree_list_check_invariants@@Base+0x158c>
   1b10c:	ldr	x25, [x8, #32]
   1b110:	cmp	x20, x25
   1b114:	b.hi	1b0f0 <gl_rbtree_list_check_invariants@@Base+0x1560>  // b.pmore
   1b118:	b	1b128 <gl_rbtree_list_check_invariants@@Base+0x1598>
   1b11c:	mov	x25, xzr
   1b120:	cmp	x20, x25
   1b124:	b.hi	1b0f0 <gl_rbtree_list_check_invariants@@Base+0x1560>  // b.pmore
   1b128:	ldr	x0, [x24, #40]
   1b12c:	mov	x1, x19
   1b130:	blr	x21
   1b134:	tbnz	w0, #31, 1b14c <gl_rbtree_list_check_invariants@@Base+0x15bc>
   1b138:	cbnz	w0, 1b16c <gl_rbtree_list_check_invariants@@Base+0x15dc>
   1b13c:	add	x22, x25, x23
   1b140:	ldr	x24, [x24]
   1b144:	cbnz	x24, 1b104 <gl_rbtree_list_check_invariants@@Base+0x1574>
   1b148:	b	1b0c0 <gl_rbtree_list_check_invariants@@Base+0x1530>
   1b14c:	add	x8, x25, x23
   1b150:	add	x23, x8, #0x1
   1b154:	add	x24, x24, #0x8
   1b158:	ldr	x24, [x24]
   1b15c:	cbnz	x24, 1b104 <gl_rbtree_list_check_invariants@@Base+0x1574>
   1b160:	b	1b0c0 <gl_rbtree_list_check_invariants@@Base+0x1530>
   1b164:	mov	x22, x23
   1b168:	b	1b0c0 <gl_rbtree_list_check_invariants@@Base+0x1530>
   1b16c:	bl	a850 <abort@plt>
   1b170:	stp	x29, x30, [sp, #-48]!
   1b174:	stp	x22, x21, [sp, #16]
   1b178:	stp	x20, x19, [sp, #32]
   1b17c:	ldr	x8, [x0, #40]
   1b180:	mov	x22, x2
   1b184:	mov	x19, x0
   1b188:	mov	x29, sp
   1b18c:	cbz	x8, 1b1f8 <gl_rbtree_list_check_invariants@@Base+0x1668>
   1b190:	mov	x20, x1
   1b194:	b	1b1a0 <gl_rbtree_list_check_invariants@@Base+0x1610>
   1b198:	ldr	x8, [x21, #8]
   1b19c:	cbz	x8, 1b25c <gl_rbtree_list_check_invariants@@Base+0x16cc>
   1b1a0:	ldr	x0, [x8, #40]
   1b1a4:	mov	x1, x22
   1b1a8:	mov	x21, x8
   1b1ac:	blr	x20
   1b1b0:	tbnz	w0, #31, 1b198 <gl_rbtree_list_check_invariants@@Base+0x1608>
   1b1b4:	cbz	w0, 1b224 <gl_rbtree_list_check_invariants@@Base+0x1694>
   1b1b8:	ldr	x8, [x21]
   1b1bc:	cbnz	x8, 1b1a0 <gl_rbtree_list_check_invariants@@Base+0x1610>
   1b1c0:	mov	w0, #0x30                  	// #48
   1b1c4:	bl	a550 <malloc@plt>
   1b1c8:	mov	x20, x0
   1b1cc:	cbz	x0, 1b314 <gl_rbtree_list_check_invariants@@Base+0x1784>
   1b1d0:	mov	w8, #0x1                   	// #1
   1b1d4:	stp	xzr, xzr, [x20]
   1b1d8:	stp	x8, x22, [x20, #32]
   1b1dc:	ldr	x8, [x21]
   1b1e0:	cbz	x8, 1b2e0 <gl_rbtree_list_check_invariants@@Base+0x1750>
   1b1e4:	mov	x21, x8
   1b1e8:	ldr	x8, [x8, #8]
   1b1ec:	cbnz	x8, 1b1e4 <gl_rbtree_list_check_invariants@@Base+0x1654>
   1b1f0:	add	x8, x21, #0x8
   1b1f4:	b	1b2e4 <gl_rbtree_list_check_invariants@@Base+0x1754>
   1b1f8:	mov	w0, #0x30                  	// #48
   1b1fc:	bl	a550 <malloc@plt>
   1b200:	mov	x20, x0
   1b204:	cbz	x0, 1b314 <gl_rbtree_list_check_invariants@@Base+0x1784>
   1b208:	mov	w8, #0x1                   	// #1
   1b20c:	stp	xzr, xzr, [x20]
   1b210:	str	wzr, [x20, #24]
   1b214:	stp	x8, x22, [x20, #32]
   1b218:	str	x20, [x19, #40]
   1b21c:	str	xzr, [x20, #16]
   1b220:	b	1b314 <gl_rbtree_list_check_invariants@@Base+0x1784>
   1b224:	mov	w0, #0x30                  	// #48
   1b228:	bl	a550 <malloc@plt>
   1b22c:	mov	x20, x0
   1b230:	cbz	x0, 1b314 <gl_rbtree_list_check_invariants@@Base+0x1784>
   1b234:	mov	w8, #0x1                   	// #1
   1b238:	stp	xzr, xzr, [x20]
   1b23c:	stp	x8, x22, [x20, #32]
   1b240:	ldr	x8, [x21]
   1b244:	cbz	x8, 1b2b8 <gl_rbtree_list_check_invariants@@Base+0x1728>
   1b248:	mov	x21, x8
   1b24c:	ldr	x8, [x8, #8]
   1b250:	cbnz	x8, 1b248 <gl_rbtree_list_check_invariants@@Base+0x16b8>
   1b254:	add	x8, x21, #0x8
   1b258:	b	1b2bc <gl_rbtree_list_check_invariants@@Base+0x172c>
   1b25c:	mov	w0, #0x30                  	// #48
   1b260:	bl	a550 <malloc@plt>
   1b264:	mov	x20, x0
   1b268:	cbz	x0, 1b314 <gl_rbtree_list_check_invariants@@Base+0x1784>
   1b26c:	mov	w9, #0x1                   	// #1
   1b270:	add	x8, x21, #0x8
   1b274:	stp	xzr, xzr, [x20]
   1b278:	stp	x9, x22, [x20, #32]
   1b27c:	ldr	x9, [x8]
   1b280:	cbz	x9, 1b294 <gl_rbtree_list_check_invariants@@Base+0x1704>
   1b284:	mov	x21, x9
   1b288:	ldr	x9, [x9]
   1b28c:	cbnz	x9, 1b284 <gl_rbtree_list_check_invariants@@Base+0x16f4>
   1b290:	mov	x8, x21
   1b294:	str	x20, [x8]
   1b298:	mov	x8, x21
   1b29c:	str	x21, [x20, #16]
   1b2a0:	ldr	x9, [x8, #32]
   1b2a4:	add	x9, x9, #0x1
   1b2a8:	str	x9, [x8, #32]
   1b2ac:	ldr	x8, [x8, #16]
   1b2b0:	cbnz	x8, 1b2a0 <gl_rbtree_list_check_invariants@@Base+0x1710>
   1b2b4:	b	1b304 <gl_rbtree_list_check_invariants@@Base+0x1774>
   1b2b8:	mov	x8, x21
   1b2bc:	str	x20, [x8]
   1b2c0:	mov	x8, x21
   1b2c4:	str	x21, [x20, #16]
   1b2c8:	ldr	x9, [x8, #32]
   1b2cc:	add	x9, x9, #0x1
   1b2d0:	str	x9, [x8, #32]
   1b2d4:	ldr	x8, [x8, #16]
   1b2d8:	cbnz	x8, 1b2c8 <gl_rbtree_list_check_invariants@@Base+0x1738>
   1b2dc:	b	1b304 <gl_rbtree_list_check_invariants@@Base+0x1774>
   1b2e0:	mov	x8, x21
   1b2e4:	str	x20, [x8]
   1b2e8:	mov	x8, x21
   1b2ec:	str	x21, [x20, #16]
   1b2f0:	ldr	x9, [x8, #32]
   1b2f4:	add	x9, x9, #0x1
   1b2f8:	str	x9, [x8, #32]
   1b2fc:	ldr	x8, [x8, #16]
   1b300:	cbnz	x8, 1b2f0 <gl_rbtree_list_check_invariants@@Base+0x1760>
   1b304:	mov	x0, x19
   1b308:	mov	x1, x20
   1b30c:	mov	x2, x21
   1b310:	bl	1b4f0 <gl_rbtree_list_check_invariants@@Base+0x1960>
   1b314:	mov	x0, x20
   1b318:	ldp	x20, x19, [sp, #32]
   1b31c:	ldp	x22, x21, [sp, #16]
   1b320:	ldp	x29, x30, [sp], #48
   1b324:	ret
   1b328:	stp	x29, x30, [sp, #-64]!
   1b32c:	stp	x22, x21, [sp, #32]
   1b330:	stp	x20, x19, [sp, #48]
   1b334:	ldr	x21, [x0, #40]
   1b338:	str	x23, [sp, #16]
   1b33c:	mov	x29, sp
   1b340:	cbz	x21, 1b3c4 <gl_rbtree_list_check_invariants@@Base+0x1834>
   1b344:	mov	x20, x2
   1b348:	mov	x19, x0
   1b34c:	mov	x22, x1
   1b350:	b	1b360 <gl_rbtree_list_check_invariants@@Base+0x17d0>
   1b354:	add	x21, x21, #0x8
   1b358:	ldr	x21, [x21]
   1b35c:	cbz	x21, 1b3c4 <gl_rbtree_list_check_invariants@@Base+0x1834>
   1b360:	ldr	x0, [x21, #40]
   1b364:	mov	x1, x20
   1b368:	blr	x22
   1b36c:	tbnz	w0, #31, 1b354 <gl_rbtree_list_check_invariants@@Base+0x17c4>
   1b370:	cbnz	w0, 1b358 <gl_rbtree_list_check_invariants@@Base+0x17c8>
   1b374:	ldr	x23, [x21]
   1b378:	cbnz	x23, 1b38c <gl_rbtree_list_check_invariants@@Base+0x17fc>
   1b37c:	b	1b3b0 <gl_rbtree_list_check_invariants@@Base+0x1820>
   1b380:	add	x23, x23, #0x8
   1b384:	ldr	x23, [x23]
   1b388:	cbz	x23, 1b3ac <gl_rbtree_list_check_invariants@@Base+0x181c>
   1b38c:	ldr	x0, [x23, #40]
   1b390:	mov	x1, x20
   1b394:	blr	x22
   1b398:	tbnz	w0, #31, 1b380 <gl_rbtree_list_check_invariants@@Base+0x17f0>
   1b39c:	cbnz	w0, 1b3dc <gl_rbtree_list_check_invariants@@Base+0x184c>
   1b3a0:	mov	x21, x23
   1b3a4:	ldr	x23, [x23]
   1b3a8:	cbnz	x23, 1b38c <gl_rbtree_list_check_invariants@@Base+0x17fc>
   1b3ac:	cbz	x21, 1b3c4 <gl_rbtree_list_check_invariants@@Base+0x1834>
   1b3b0:	mov	x0, x19
   1b3b4:	mov	x1, x21
   1b3b8:	bl	1a874 <gl_rbtree_list_check_invariants@@Base+0xce4>
   1b3bc:	mov	w0, #0x1                   	// #1
   1b3c0:	b	1b3c8 <gl_rbtree_list_check_invariants@@Base+0x1838>
   1b3c4:	mov	w0, wzr
   1b3c8:	ldp	x20, x19, [sp, #48]
   1b3cc:	ldp	x22, x21, [sp, #32]
   1b3d0:	ldr	x23, [sp, #16]
   1b3d4:	ldp	x29, x30, [sp], #64
   1b3d8:	ret
   1b3dc:	bl	a850 <abort@plt>
   1b3e0:	stp	x29, x30, [sp, #-64]!
   1b3e4:	stp	x22, x21, [sp, #32]
   1b3e8:	mov	w21, w0
   1b3ec:	mov	w0, #0x30                  	// #48
   1b3f0:	str	x23, [sp, #16]
   1b3f4:	stp	x20, x19, [sp, #48]
   1b3f8:	mov	x29, sp
   1b3fc:	mov	x22, x2
   1b400:	mov	x20, x1
   1b404:	bl	a550 <malloc@plt>
   1b408:	mov	x19, x0
   1b40c:	cbz	x0, 1b4a0 <gl_rbtree_list_check_invariants@@Base+0x1910>
   1b410:	sub	x8, x20, #0x1
   1b414:	lsr	x23, x8, #1
   1b418:	cbz	x23, 1b43c <gl_rbtree_list_check_invariants@@Base+0x18ac>
   1b41c:	sub	w0, w21, #0x1
   1b420:	mov	x1, x23
   1b424:	mov	x2, x22
   1b428:	bl	1b3e0 <gl_rbtree_list_check_invariants@@Base+0x1850>
   1b42c:	str	x0, [x19]
   1b430:	cbz	x0, 1b494 <gl_rbtree_list_check_invariants@@Base+0x1904>
   1b434:	str	x19, [x0, #16]
   1b438:	b	1b440 <gl_rbtree_list_check_invariants@@Base+0x18b0>
   1b43c:	str	xzr, [x19]
   1b440:	add	x8, x22, x23, lsl #3
   1b444:	ldr	x9, [x8]
   1b448:	lsr	x1, x20, #1
   1b44c:	str	x9, [x19, #40]
   1b450:	cbz	x1, 1b470 <gl_rbtree_list_check_invariants@@Base+0x18e0>
   1b454:	sub	w0, w21, #0x1
   1b458:	add	x2, x8, #0x8
   1b45c:	bl	1b3e0 <gl_rbtree_list_check_invariants@@Base+0x1850>
   1b460:	str	x0, [x19, #8]
   1b464:	cbz	x0, 1b488 <gl_rbtree_list_check_invariants@@Base+0x18f8>
   1b468:	str	x19, [x0, #16]
   1b46c:	b	1b474 <gl_rbtree_list_check_invariants@@Base+0x18e4>
   1b470:	str	xzr, [x19, #8]
   1b474:	cmp	w21, #0x0
   1b478:	cset	w8, eq  // eq = none
   1b47c:	str	w8, [x19, #24]
   1b480:	str	x20, [x19, #32]
   1b484:	b	1b4a0 <gl_rbtree_list_check_invariants@@Base+0x1910>
   1b488:	ldr	x0, [x19]
   1b48c:	cbz	x0, 1b494 <gl_rbtree_list_check_invariants@@Base+0x1904>
   1b490:	bl	1b4b8 <gl_rbtree_list_check_invariants@@Base+0x1928>
   1b494:	mov	x0, x19
   1b498:	bl	a970 <free@plt>
   1b49c:	mov	x19, xzr
   1b4a0:	mov	x0, x19
   1b4a4:	ldp	x20, x19, [sp, #48]
   1b4a8:	ldp	x22, x21, [sp, #32]
   1b4ac:	ldr	x23, [sp, #16]
   1b4b0:	ldp	x29, x30, [sp], #64
   1b4b4:	ret
   1b4b8:	stp	x29, x30, [sp, #-32]!
   1b4bc:	str	x19, [sp, #16]
   1b4c0:	mov	x19, x0
   1b4c4:	ldr	x0, [x0]
   1b4c8:	mov	x29, sp
   1b4cc:	cbz	x0, 1b4d4 <gl_rbtree_list_check_invariants@@Base+0x1944>
   1b4d0:	bl	1b4b8 <gl_rbtree_list_check_invariants@@Base+0x1928>
   1b4d4:	ldr	x0, [x19, #8]
   1b4d8:	cbz	x0, 1b4e0 <gl_rbtree_list_check_invariants@@Base+0x1950>
   1b4dc:	bl	1b4b8 <gl_rbtree_list_check_invariants@@Base+0x1928>
   1b4e0:	mov	x0, x19
   1b4e4:	ldr	x19, [sp, #16]
   1b4e8:	ldp	x29, x30, [sp], #32
   1b4ec:	b	a970 <free@plt>
   1b4f0:	stp	x29, x30, [sp, #-16]!
   1b4f4:	mov	w9, #0x1                   	// #1
   1b4f8:	mov	x29, sp
   1b4fc:	ldr	w8, [x2, #24]
   1b500:	cbz	w8, 1b588 <gl_rbtree_list_check_invariants@@Base+0x19f8>
   1b504:	ldr	x8, [x2, #16]
   1b508:	ldp	x11, x10, [x8]
   1b50c:	cmp	x11, x2
   1b510:	mov	x12, x10
   1b514:	b.eq	1b524 <gl_rbtree_list_check_invariants@@Base+0x1994>  // b.none
   1b518:	cmp	x10, x2
   1b51c:	mov	x12, x11
   1b520:	b.ne	1b584 <gl_rbtree_list_check_invariants@@Base+0x19f4>  // b.any
   1b524:	cbz	x12, 1b560 <gl_rbtree_list_check_invariants@@Base+0x19d0>
   1b528:	ldr	w13, [x12, #24]
   1b52c:	cmp	w13, #0x1
   1b530:	b.ne	1b560 <gl_rbtree_list_check_invariants@@Base+0x19d0>  // b.any
   1b534:	str	w9, [x1, #24]
   1b538:	str	wzr, [x12, #24]
   1b53c:	str	wzr, [x2, #24]
   1b540:	ldr	x2, [x8, #16]
   1b544:	mov	x1, x8
   1b548:	cbnz	x2, 1b4fc <gl_rbtree_list_check_invariants@@Base+0x196c>
   1b54c:	mov	w12, wzr
   1b550:	mov	x2, x8
   1b554:	str	w12, [x2, #24]
   1b558:	ldp	x29, x30, [sp], #16
   1b55c:	ret
   1b560:	ldr	x12, [x8, #16]
   1b564:	cbz	x12, 1b59c <gl_rbtree_list_check_invariants@@Base+0x1a0c>
   1b568:	ldr	x9, [x12]
   1b56c:	cmp	x9, x8
   1b570:	b.eq	1b5c0 <gl_rbtree_list_check_invariants@@Base+0x1a30>  // b.none
   1b574:	mov	x9, x12
   1b578:	ldr	x13, [x9, #8]!
   1b57c:	cmp	x13, x8
   1b580:	b.eq	1b5a0 <gl_rbtree_list_check_invariants@@Base+0x1a10>  // b.none
   1b584:	bl	a850 <abort@plt>
   1b588:	mov	w12, #0x1                   	// #1
   1b58c:	mov	x2, x1
   1b590:	str	w12, [x2, #24]
   1b594:	ldp	x29, x30, [sp], #16
   1b598:	ret
   1b59c:	add	x9, x0, #0x28
   1b5a0:	cmp	x11, x2
   1b5a4:	b.eq	1b5cc <gl_rbtree_list_check_invariants@@Base+0x1a3c>  // b.none
   1b5a8:	ldr	x13, [x2]
   1b5ac:	cmp	x13, x1
   1b5b0:	b.eq	1b5e4 <gl_rbtree_list_check_invariants@@Base+0x1a54>  // b.none
   1b5b4:	mov	x10, x2
   1b5b8:	mov	x2, x1
   1b5bc:	b	1b728 <gl_rbtree_list_check_invariants@@Base+0x1b98>
   1b5c0:	mov	x9, x12
   1b5c4:	cmp	x11, x2
   1b5c8:	b.ne	1b5a8 <gl_rbtree_list_check_invariants@@Base+0x1a18>  // b.any
   1b5cc:	ldr	x13, [x2, #8]
   1b5d0:	cmp	x13, x1
   1b5d4:	b.eq	1b628 <gl_rbtree_list_check_invariants@@Base+0x1a98>  // b.none
   1b5d8:	mov	x11, x2
   1b5dc:	mov	x2, x1
   1b5e0:	b	1b688 <gl_rbtree_list_check_invariants@@Base+0x1af8>
   1b5e4:	ldp	x10, x12, [x1]
   1b5e8:	ldr	x11, [x2, #8]
   1b5ec:	str	x12, [x2]
   1b5f0:	stp	x2, x8, [x1, #8]
   1b5f4:	str	x1, [x2, #16]
   1b5f8:	cbz	x12, 1b6fc <gl_rbtree_list_check_invariants@@Base+0x1b6c>
   1b5fc:	ldr	x13, [x12, #32]
   1b600:	str	x2, [x12, #16]
   1b604:	add	x12, x13, #0x1
   1b608:	cbz	x11, 1b610 <gl_rbtree_list_check_invariants@@Base+0x1a80>
   1b60c:	ldr	x11, [x11, #32]
   1b610:	add	x11, x11, x12
   1b614:	str	x11, [x2, #32]
   1b618:	cbz	x10, 1b708 <gl_rbtree_list_check_invariants@@Base+0x1b78>
   1b61c:	ldr	x10, [x10, #32]
   1b620:	add	x10, x10, #0x1
   1b624:	b	1b70c <gl_rbtree_list_check_invariants@@Base+0x1b7c>
   1b628:	ldp	x11, x10, [x1]
   1b62c:	ldr	x12, [x2]
   1b630:	str	x11, [x2, #8]
   1b634:	str	x2, [x1]
   1b638:	str	x8, [x1, #16]
   1b63c:	str	x1, [x2, #16]
   1b640:	cbz	x11, 1b648 <gl_rbtree_list_check_invariants@@Base+0x1ab8>
   1b644:	str	x2, [x11, #16]
   1b648:	cbz	x12, 1b7b4 <gl_rbtree_list_check_invariants@@Base+0x1c24>
   1b64c:	ldr	x12, [x12, #32]
   1b650:	add	x12, x12, #0x1
   1b654:	cbz	x11, 1b65c <gl_rbtree_list_check_invariants@@Base+0x1acc>
   1b658:	ldr	x11, [x11, #32]
   1b65c:	add	x11, x11, x12
   1b660:	str	x11, [x2, #32]
   1b664:	add	x11, x11, #0x1
   1b668:	cbz	x10, 1b670 <gl_rbtree_list_check_invariants@@Base+0x1ae0>
   1b66c:	ldr	x10, [x10, #32]
   1b670:	add	x10, x11, x10
   1b674:	str	x10, [x1, #32]
   1b678:	str	x1, [x8]
   1b67c:	ldr	x13, [x1, #8]
   1b680:	ldp	x10, x12, [x8, #8]
   1b684:	mov	x11, x1
   1b688:	ldr	x14, [x11]
   1b68c:	str	x13, [x8]
   1b690:	stp	x8, x12, [x11, #8]
   1b694:	str	x11, [x8, #16]
   1b698:	cbz	x13, 1b6cc <gl_rbtree_list_check_invariants@@Base+0x1b3c>
   1b69c:	ldr	x12, [x13, #32]
   1b6a0:	str	x8, [x13, #16]
   1b6a4:	add	x12, x12, #0x1
   1b6a8:	cbz	x10, 1b6b0 <gl_rbtree_list_check_invariants@@Base+0x1b20>
   1b6ac:	ldr	x10, [x10, #32]
   1b6b0:	add	x10, x10, x12
   1b6b4:	mov	w12, #0x1                   	// #1
   1b6b8:	str	x10, [x8, #32]
   1b6bc:	cbz	x14, 1b6d8 <gl_rbtree_list_check_invariants@@Base+0x1b48>
   1b6c0:	ldr	x13, [x14, #32]
   1b6c4:	add	x13, x13, #0x1
   1b6c8:	b	1b6dc <gl_rbtree_list_check_invariants@@Base+0x1b4c>
   1b6cc:	mov	w12, #0x1                   	// #1
   1b6d0:	cbnz	x10, 1b6ac <gl_rbtree_list_check_invariants@@Base+0x1b1c>
   1b6d4:	b	1b6b0 <gl_rbtree_list_check_invariants@@Base+0x1b20>
   1b6d8:	mov	w13, #0x1                   	// #1
   1b6dc:	add	x10, x13, x10
   1b6e0:	str	x10, [x11, #32]
   1b6e4:	str	x11, [x9]
   1b6e8:	str	wzr, [x11, #24]
   1b6ec:	str	w12, [x8, #24]
   1b6f0:	str	w12, [x2, #24]
   1b6f4:	ldp	x29, x30, [sp], #16
   1b6f8:	ret
   1b6fc:	mov	w12, #0x1                   	// #1
   1b700:	cbnz	x11, 1b60c <gl_rbtree_list_check_invariants@@Base+0x1a7c>
   1b704:	b	1b610 <gl_rbtree_list_check_invariants@@Base+0x1a80>
   1b708:	mov	w10, #0x1                   	// #1
   1b70c:	add	x10, x10, x11
   1b710:	str	x10, [x1, #32]
   1b714:	str	x1, [x8, #8]
   1b718:	ldr	x11, [x8]
   1b71c:	ldr	x13, [x1]
   1b720:	ldr	x12, [x8, #16]
   1b724:	mov	x10, x1
   1b728:	ldr	x14, [x10, #8]
   1b72c:	str	x13, [x8, #8]
   1b730:	str	x8, [x10]
   1b734:	str	x12, [x10, #16]
   1b738:	str	x10, [x8, #16]
   1b73c:	cbz	x13, 1b744 <gl_rbtree_list_check_invariants@@Base+0x1bb4>
   1b740:	str	x8, [x13, #16]
   1b744:	cbz	x11, 1b770 <gl_rbtree_list_check_invariants@@Base+0x1be0>
   1b748:	ldr	x11, [x11, #32]
   1b74c:	add	x11, x11, #0x1
   1b750:	cbz	x13, 1b778 <gl_rbtree_list_check_invariants@@Base+0x1be8>
   1b754:	ldr	x12, [x13, #32]
   1b758:	add	x11, x12, x11
   1b75c:	str	x11, [x8, #32]
   1b760:	add	x11, x11, #0x1
   1b764:	cbz	x14, 1b78c <gl_rbtree_list_check_invariants@@Base+0x1bfc>
   1b768:	ldr	x12, [x14, #32]
   1b76c:	b	1b790 <gl_rbtree_list_check_invariants@@Base+0x1c00>
   1b770:	mov	w11, #0x1                   	// #1
   1b774:	cbnz	x13, 1b754 <gl_rbtree_list_check_invariants@@Base+0x1bc4>
   1b778:	mov	x12, xzr
   1b77c:	add	x11, x12, x11
   1b780:	str	x11, [x8, #32]
   1b784:	add	x11, x11, #0x1
   1b788:	cbnz	x14, 1b768 <gl_rbtree_list_check_invariants@@Base+0x1bd8>
   1b78c:	mov	x12, xzr
   1b790:	add	x11, x11, x12
   1b794:	mov	w12, #0x1                   	// #1
   1b798:	str	x11, [x10, #32]
   1b79c:	str	x10, [x9]
   1b7a0:	str	wzr, [x10, #24]
   1b7a4:	str	w12, [x8, #24]
   1b7a8:	str	w12, [x2, #24]
   1b7ac:	ldp	x29, x30, [sp], #16
   1b7b0:	ret
   1b7b4:	mov	w12, #0x1                   	// #1
   1b7b8:	cbnz	x11, 1b658 <gl_rbtree_list_check_invariants@@Base+0x1ac8>
   1b7bc:	b	1b65c <gl_rbtree_list_check_invariants@@Base+0x1acc>
   1b7c0:	stp	x29, x30, [sp, #-16]!
   1b7c4:	add	x9, x0, #0x28
   1b7c8:	mov	w10, #0x1                   	// #1
   1b7cc:	mov	x29, sp
   1b7d0:	b	1b7f0 <gl_rbtree_list_check_invariants@@Base+0x1c60>
   1b7d4:	ldr	w8, [x2, #24]
   1b7d8:	cbnz	w8, 1b9ac <gl_rbtree_list_check_invariants@@Base+0x1e1c>
   1b7dc:	str	w10, [x12, #24]
   1b7e0:	ldr	x8, [x2, #16]
   1b7e4:	mov	x1, x2
   1b7e8:	mov	x2, x8
   1b7ec:	cbz	x8, 1bc68 <gl_rbtree_list_check_invariants@@Base+0x20d8>
   1b7f0:	ldr	x13, [x2, #16]
   1b7f4:	mov	x8, x9
   1b7f8:	cbz	x13, 1b818 <gl_rbtree_list_check_invariants@@Base+0x1c88>
   1b7fc:	ldr	x8, [x13]
   1b800:	cmp	x8, x2
   1b804:	b.eq	1b884 <gl_rbtree_list_check_invariants@@Base+0x1cf4>  // b.none
   1b808:	mov	x8, x13
   1b80c:	ldr	x11, [x8, #8]!
   1b810:	cmp	x11, x2
   1b814:	b.ne	1bc7c <gl_rbtree_list_check_invariants@@Base+0x20ec>  // b.any
   1b818:	ldp	x12, x11, [x2]
   1b81c:	cmp	x12, x1
   1b820:	b.eq	1b894 <gl_rbtree_list_check_invariants@@Base+0x1d04>  // b.none
   1b824:	cmp	x11, x1
   1b828:	b.ne	1bc7c <gl_rbtree_list_check_invariants@@Base+0x20ec>  // b.any
   1b82c:	ldr	w11, [x12, #24]
   1b830:	cmp	w11, #0x1
   1b834:	b.ne	1b974 <gl_rbtree_list_check_invariants@@Base+0x1de4>  // b.any
   1b838:	mov	x11, x12
   1b83c:	ldr	x14, [x12]
   1b840:	ldr	x15, [x11, #8]!
   1b844:	str	x15, [x2]
   1b848:	str	x2, [x11]
   1b84c:	str	x13, [x12, #16]
   1b850:	str	x12, [x2, #16]
   1b854:	cbz	x15, 1b93c <gl_rbtree_list_check_invariants@@Base+0x1dac>
   1b858:	ldr	x13, [x15, #32]
   1b85c:	str	x2, [x15, #16]
   1b860:	add	x13, x13, #0x1
   1b864:	cbz	x1, 1b944 <gl_rbtree_list_check_invariants@@Base+0x1db4>
   1b868:	ldr	x15, [x1, #32]
   1b86c:	add	x13, x15, x13
   1b870:	str	x13, [x2, #32]
   1b874:	cbz	x14, 1b954 <gl_rbtree_list_check_invariants@@Base+0x1dc4>
   1b878:	ldr	x14, [x14, #32]
   1b87c:	add	x14, x14, #0x1
   1b880:	b	1b958 <gl_rbtree_list_check_invariants@@Base+0x1dc8>
   1b884:	mov	x8, x13
   1b888:	ldp	x12, x11, [x2]
   1b88c:	cmp	x12, x1
   1b890:	b.ne	1b824 <gl_rbtree_list_check_invariants@@Base+0x1c94>  // b.any
   1b894:	ldr	w12, [x11, #24]
   1b898:	cmp	w12, #0x1
   1b89c:	b.ne	1b904 <gl_rbtree_list_check_invariants@@Base+0x1d74>  // b.any
   1b8a0:	ldp	x14, x12, [x11]
   1b8a4:	str	x14, [x2, #8]
   1b8a8:	str	x2, [x11]
   1b8ac:	str	x13, [x11, #16]
   1b8b0:	str	x11, [x2, #16]
   1b8b4:	cbz	x14, 1b8bc <gl_rbtree_list_check_invariants@@Base+0x1d2c>
   1b8b8:	str	x2, [x14, #16]
   1b8bc:	cbz	x1, 1b9a0 <gl_rbtree_list_check_invariants@@Base+0x1e10>
   1b8c0:	ldr	x13, [x1, #32]
   1b8c4:	add	x13, x13, #0x1
   1b8c8:	cbz	x14, 1b8d0 <gl_rbtree_list_check_invariants@@Base+0x1d40>
   1b8cc:	ldr	x14, [x14, #32]
   1b8d0:	add	x13, x14, x13
   1b8d4:	str	x13, [x2, #32]
   1b8d8:	add	x13, x13, #0x1
   1b8dc:	cbz	x12, 1b8e4 <gl_rbtree_list_check_invariants@@Base+0x1d54>
   1b8e0:	ldr	x12, [x12, #32]
   1b8e4:	add	x12, x13, x12
   1b8e8:	str	x12, [x11, #32]
   1b8ec:	str	x11, [x8]
   1b8f0:	str	w10, [x2, #24]
   1b8f4:	str	wzr, [x11, #24]
   1b8f8:	ldr	x12, [x2, #8]
   1b8fc:	mov	x8, x11
   1b900:	mov	x11, x12
   1b904:	ldr	x13, [x11, #8]
   1b908:	cbz	x13, 1b918 <gl_rbtree_list_check_invariants@@Base+0x1d88>
   1b90c:	ldr	w12, [x13, #24]
   1b910:	cmp	w12, #0x1
   1b914:	b.eq	1bad8 <gl_rbtree_list_check_invariants@@Base+0x1f48>  // b.none
   1b918:	ldr	x12, [x11]
   1b91c:	cbz	x12, 1b92c <gl_rbtree_list_check_invariants@@Base+0x1d9c>
   1b920:	ldr	w14, [x12, #24]
   1b924:	cmp	w14, #0x1
   1b928:	b.eq	1bb40 <gl_rbtree_list_check_invariants@@Base+0x1fb0>  // b.none
   1b92c:	ldr	w8, [x2, #24]
   1b930:	cbnz	w8, 1bacc <gl_rbtree_list_check_invariants@@Base+0x1f3c>
   1b934:	mov	x12, x11
   1b938:	b	1b7dc <gl_rbtree_list_check_invariants@@Base+0x1c4c>
   1b93c:	mov	w13, #0x1                   	// #1
   1b940:	cbnz	x1, 1b868 <gl_rbtree_list_check_invariants@@Base+0x1cd8>
   1b944:	mov	x15, xzr
   1b948:	add	x13, x15, x13
   1b94c:	str	x13, [x2, #32]
   1b950:	cbnz	x14, 1b878 <gl_rbtree_list_check_invariants@@Base+0x1ce8>
   1b954:	mov	w14, #0x1                   	// #1
   1b958:	add	x13, x14, x13
   1b95c:	str	x13, [x12, #32]
   1b960:	str	x12, [x8]
   1b964:	str	w10, [x2, #24]
   1b968:	str	wzr, [x12, #24]
   1b96c:	ldr	x12, [x2]
   1b970:	mov	x8, x11
   1b974:	ldr	x13, [x12]
   1b978:	cbz	x13, 1b988 <gl_rbtree_list_check_invariants@@Base+0x1df8>
   1b97c:	ldr	w11, [x13, #24]
   1b980:	cmp	w11, #0x1
   1b984:	b.eq	1b9bc <gl_rbtree_list_check_invariants@@Base+0x1e2c>  // b.none
   1b988:	ldr	x11, [x12, #8]
   1b98c:	cbz	x11, 1b7d4 <gl_rbtree_list_check_invariants@@Base+0x1c44>
   1b990:	ldr	w14, [x11, #24]
   1b994:	cmp	w14, #0x1
   1b998:	b.ne	1b7d4 <gl_rbtree_list_check_invariants@@Base+0x1c44>  // b.any
   1b99c:	b	1ba20 <gl_rbtree_list_check_invariants@@Base+0x1e90>
   1b9a0:	mov	w13, #0x1                   	// #1
   1b9a4:	cbnz	x14, 1b8cc <gl_rbtree_list_check_invariants@@Base+0x1d3c>
   1b9a8:	b	1b8d0 <gl_rbtree_list_check_invariants@@Base+0x1d40>
   1b9ac:	str	wzr, [x2, #24]
   1b9b0:	mov	w8, #0x1                   	// #1
   1b9b4:	mov	x11, x12
   1b9b8:	b	1bc64 <gl_rbtree_list_check_invariants@@Base+0x20d4>
   1b9bc:	ldr	x10, [x12, #8]
   1b9c0:	ldr	x9, [x2, #8]
   1b9c4:	str	x10, [x2]
   1b9c8:	str	x2, [x12, #8]
   1b9cc:	ldr	x11, [x2, #16]
   1b9d0:	str	x11, [x12, #16]
   1b9d4:	str	x12, [x2, #16]
   1b9d8:	cbz	x10, 1bb8c <gl_rbtree_list_check_invariants@@Base+0x1ffc>
   1b9dc:	ldr	x11, [x10, #32]
   1b9e0:	str	x2, [x10, #16]
   1b9e4:	add	x10, x11, #0x1
   1b9e8:	cbz	x9, 1b9f0 <gl_rbtree_list_check_invariants@@Base+0x1e60>
   1b9ec:	ldr	x9, [x9, #32]
   1b9f0:	add	x9, x9, x10
   1b9f4:	str	x9, [x2, #32]
   1b9f8:	ldr	x10, [x13, #32]
   1b9fc:	add	x9, x9, x10
   1ba00:	add	x9, x9, #0x1
   1ba04:	str	x9, [x12, #32]
   1ba08:	str	x12, [x8]
   1ba0c:	ldr	w8, [x2, #24]
   1ba10:	str	w8, [x12, #24]
   1ba14:	str	wzr, [x2, #24]
   1ba18:	ldr	x11, [x12]
   1ba1c:	b	1bc60 <gl_rbtree_list_check_invariants@@Base+0x20d0>
   1ba20:	ldp	x10, x9, [x11]
   1ba24:	str	x10, [x12, #8]
   1ba28:	str	x12, [x11]
   1ba2c:	ldr	x14, [x12, #16]
   1ba30:	str	x14, [x11, #16]
   1ba34:	str	x11, [x12, #16]
   1ba38:	cbz	x10, 1ba40 <gl_rbtree_list_check_invariants@@Base+0x1eb0>
   1ba3c:	str	x12, [x10, #16]
   1ba40:	cbz	x13, 1bb98 <gl_rbtree_list_check_invariants@@Base+0x2008>
   1ba44:	ldr	x13, [x13, #32]
   1ba48:	add	x13, x13, #0x1
   1ba4c:	cbz	x10, 1ba54 <gl_rbtree_list_check_invariants@@Base+0x1ec4>
   1ba50:	ldr	x10, [x10, #32]
   1ba54:	add	x10, x10, x13
   1ba58:	str	x10, [x12, #32]
   1ba5c:	add	x10, x10, #0x1
   1ba60:	cbz	x9, 1ba68 <gl_rbtree_list_check_invariants@@Base+0x1ed8>
   1ba64:	ldr	x9, [x9, #32]
   1ba68:	add	x9, x10, x9
   1ba6c:	mov	w10, #0x1                   	// #1
   1ba70:	str	x9, [x11, #32]
   1ba74:	str	x11, [x2]
   1ba78:	str	w10, [x12, #24]
   1ba7c:	ldp	x9, x13, [x11]
   1ba80:	str	wzr, [x11, #24]
   1ba84:	ldr	x12, [x2, #8]
   1ba88:	str	x13, [x2]
   1ba8c:	str	x2, [x11, #8]
   1ba90:	ldr	x14, [x2, #16]
   1ba94:	str	x14, [x11, #16]
   1ba98:	str	x11, [x2, #16]
   1ba9c:	cbz	x13, 1baac <gl_rbtree_list_check_invariants@@Base+0x1f1c>
   1baa0:	ldr	x10, [x13, #32]
   1baa4:	str	x2, [x13, #16]
   1baa8:	add	x10, x10, #0x1
   1baac:	cbz	x12, 1bab4 <gl_rbtree_list_check_invariants@@Base+0x1f24>
   1bab0:	ldr	x12, [x12, #32]
   1bab4:	add	x10, x12, x10
   1bab8:	str	x10, [x2, #32]
   1babc:	cbz	x9, 1bba4 <gl_rbtree_list_check_invariants@@Base+0x2014>
   1bac0:	ldr	x9, [x9, #32]
   1bac4:	add	x9, x9, #0x1
   1bac8:	b	1bba8 <gl_rbtree_list_check_invariants@@Base+0x2018>
   1bacc:	mov	w8, #0x1                   	// #1
   1bad0:	str	wzr, [x2, #24]
   1bad4:	b	1bc64 <gl_rbtree_list_check_invariants@@Base+0x20d4>
   1bad8:	ldr	x9, [x11]
   1badc:	ldr	x10, [x2]
   1bae0:	str	x9, [x2, #8]
   1bae4:	str	x2, [x11]
   1bae8:	ldr	x12, [x2, #16]
   1baec:	str	x12, [x11, #16]
   1baf0:	str	x11, [x2, #16]
   1baf4:	cbz	x9, 1bafc <gl_rbtree_list_check_invariants@@Base+0x1f6c>
   1baf8:	str	x2, [x9, #16]
   1bafc:	cbz	x10, 1bbc8 <gl_rbtree_list_check_invariants@@Base+0x2038>
   1bb00:	ldr	x10, [x10, #32]
   1bb04:	add	x10, x10, #0x1
   1bb08:	cbz	x9, 1bb10 <gl_rbtree_list_check_invariants@@Base+0x1f80>
   1bb0c:	ldr	x9, [x9, #32]
   1bb10:	add	x9, x9, x10
   1bb14:	str	x9, [x2, #32]
   1bb18:	ldr	x10, [x13, #32]
   1bb1c:	add	x9, x9, x10
   1bb20:	add	x9, x9, #0x1
   1bb24:	str	x9, [x11, #32]
   1bb28:	str	x11, [x8]
   1bb2c:	ldr	w8, [x2, #24]
   1bb30:	str	w8, [x11, #24]
   1bb34:	str	wzr, [x2, #24]
   1bb38:	ldr	x11, [x11, #8]
   1bb3c:	b	1bc60 <gl_rbtree_list_check_invariants@@Base+0x20d0>
   1bb40:	ldp	x9, x10, [x12]
   1bb44:	str	x10, [x11]
   1bb48:	str	x11, [x12, #8]
   1bb4c:	ldr	x14, [x11, #16]
   1bb50:	str	x14, [x12, #16]
   1bb54:	str	x12, [x11, #16]
   1bb58:	cbz	x10, 1bbd4 <gl_rbtree_list_check_invariants@@Base+0x2044>
   1bb5c:	ldr	x14, [x10, #32]
   1bb60:	str	x11, [x10, #16]
   1bb64:	add	x10, x14, #0x1
   1bb68:	cbz	x13, 1bb70 <gl_rbtree_list_check_invariants@@Base+0x1fe0>
   1bb6c:	ldr	x13, [x13, #32]
   1bb70:	add	x13, x13, x10
   1bb74:	mov	w10, #0x1                   	// #1
   1bb78:	str	x13, [x11, #32]
   1bb7c:	cbz	x9, 1bbe0 <gl_rbtree_list_check_invariants@@Base+0x2050>
   1bb80:	ldr	x9, [x9, #32]
   1bb84:	add	x9, x9, #0x1
   1bb88:	b	1bbe4 <gl_rbtree_list_check_invariants@@Base+0x2054>
   1bb8c:	mov	w10, #0x1                   	// #1
   1bb90:	cbnz	x9, 1b9ec <gl_rbtree_list_check_invariants@@Base+0x1e5c>
   1bb94:	b	1b9f0 <gl_rbtree_list_check_invariants@@Base+0x1e60>
   1bb98:	mov	w13, #0x1                   	// #1
   1bb9c:	cbnz	x10, 1ba50 <gl_rbtree_list_check_invariants@@Base+0x1ec0>
   1bba0:	b	1ba54 <gl_rbtree_list_check_invariants@@Base+0x1ec4>
   1bba4:	mov	w9, #0x1                   	// #1
   1bba8:	add	x9, x9, x10
   1bbac:	str	x9, [x11, #32]
   1bbb0:	str	x11, [x8]
   1bbb4:	ldr	w8, [x2, #24]
   1bbb8:	str	w8, [x11, #24]
   1bbbc:	str	wzr, [x2, #24]
   1bbc0:	ldr	x11, [x11]
   1bbc4:	b	1bc60 <gl_rbtree_list_check_invariants@@Base+0x20d0>
   1bbc8:	mov	w10, #0x1                   	// #1
   1bbcc:	cbnz	x9, 1bb0c <gl_rbtree_list_check_invariants@@Base+0x1f7c>
   1bbd0:	b	1bb10 <gl_rbtree_list_check_invariants@@Base+0x1f80>
   1bbd4:	mov	w10, #0x1                   	// #1
   1bbd8:	cbnz	x13, 1bb6c <gl_rbtree_list_check_invariants@@Base+0x1fdc>
   1bbdc:	b	1bb70 <gl_rbtree_list_check_invariants@@Base+0x1fe0>
   1bbe0:	mov	w9, #0x1                   	// #1
   1bbe4:	add	x9, x9, x13
   1bbe8:	str	x9, [x12, #32]
   1bbec:	str	x12, [x2, #8]
   1bbf0:	str	w10, [x11, #24]
   1bbf4:	ldp	x10, x9, [x12]
   1bbf8:	str	wzr, [x12, #24]
   1bbfc:	ldr	x11, [x2]
   1bc00:	str	x10, [x2, #8]
   1bc04:	str	x2, [x12]
   1bc08:	ldr	x13, [x2, #16]
   1bc0c:	str	x13, [x12, #16]
   1bc10:	str	x12, [x2, #16]
   1bc14:	cbz	x10, 1bc1c <gl_rbtree_list_check_invariants@@Base+0x208c>
   1bc18:	str	x2, [x10, #16]
   1bc1c:	cbz	x11, 1bc70 <gl_rbtree_list_check_invariants@@Base+0x20e0>
   1bc20:	ldr	x11, [x11, #32]
   1bc24:	add	x11, x11, #0x1
   1bc28:	cbz	x10, 1bc30 <gl_rbtree_list_check_invariants@@Base+0x20a0>
   1bc2c:	ldr	x10, [x10, #32]
   1bc30:	add	x10, x10, x11
   1bc34:	str	x10, [x2, #32]
   1bc38:	add	x10, x10, #0x1
   1bc3c:	cbz	x9, 1bc44 <gl_rbtree_list_check_invariants@@Base+0x20b4>
   1bc40:	ldr	x9, [x9, #32]
   1bc44:	add	x9, x10, x9
   1bc48:	str	x9, [x12, #32]
   1bc4c:	str	x12, [x8]
   1bc50:	ldr	w8, [x2, #24]
   1bc54:	str	w8, [x12, #24]
   1bc58:	str	wzr, [x2, #24]
   1bc5c:	ldr	x11, [x12, #8]
   1bc60:	mov	w8, wzr
   1bc64:	str	w8, [x11, #24]
   1bc68:	ldp	x29, x30, [sp], #16
   1bc6c:	ret
   1bc70:	mov	w11, #0x1                   	// #1
   1bc74:	cbnz	x10, 1bc2c <gl_rbtree_list_check_invariants@@Base+0x209c>
   1bc78:	b	1bc30 <gl_rbtree_list_check_invariants@@Base+0x20a0>
   1bc7c:	bl	a850 <abort@plt>

000000000001bc80 <renameatu@@Base>:
   1bc80:	sub	sp, sp, #0x150
   1bc84:	stp	x29, x30, [sp, #256]
   1bc88:	stp	x28, x25, [sp, #272]
   1bc8c:	stp	x24, x23, [sp, #288]
   1bc90:	stp	x22, x21, [sp, #304]
   1bc94:	stp	x20, x19, [sp, #320]
   1bc98:	add	x29, sp, #0x100
   1bc9c:	mov	w25, w4
   1bca0:	mov	x19, x3
   1bca4:	mov	w20, w2
   1bca8:	mov	x21, x1
   1bcac:	mov	w22, w0
   1bcb0:	bl	a980 <renameat2@plt>
   1bcb4:	mov	w24, w0
   1bcb8:	bl	ad90 <__errno_location@plt>
   1bcbc:	tbz	w24, #31, 1be20 <renameatu@@Base+0x1a0>
   1bcc0:	ldr	w8, [x0]
   1bcc4:	mov	x23, x0
   1bcc8:	cmp	w8, #0x16
   1bccc:	b.eq	1bce0 <renameatu@@Base+0x60>  // b.none
   1bcd0:	cmp	w8, #0x5f
   1bcd4:	b.eq	1bce0 <renameatu@@Base+0x60>  // b.none
   1bcd8:	cmp	w8, #0x26
   1bcdc:	b.ne	1be20 <renameatu@@Base+0x1a0>  // b.any
   1bce0:	cbz	w25, 1bd38 <renameatu@@Base+0xb8>
   1bce4:	cmp	w25, #0x1
   1bce8:	b.ne	1bd24 <renameatu@@Base+0xa4>  // b.any
   1bcec:	mov	x3, sp
   1bcf0:	mov	w4, #0x100                 	// #256
   1bcf4:	mov	w0, wzr
   1bcf8:	mov	w1, w20
   1bcfc:	mov	x2, x19
   1bd00:	bl	aea0 <__fxstatat@plt>
   1bd04:	cbz	w0, 1bd1c <renameatu@@Base+0x9c>
   1bd08:	ldr	w8, [x23]
   1bd0c:	cmp	w8, #0x2
   1bd10:	b.eq	1bd34 <renameatu@@Base+0xb4>  // b.none
   1bd14:	cmp	w8, #0x4b
   1bd18:	b.ne	1bd2c <renameatu@@Base+0xac>  // b.any
   1bd1c:	mov	w8, #0x11                  	// #17
   1bd20:	b	1bd28 <renameatu@@Base+0xa8>
   1bd24:	mov	w8, #0x5f                  	// #95
   1bd28:	str	w8, [x23]
   1bd2c:	mov	w24, #0xffffffff            	// #-1
   1bd30:	b	1be20 <renameatu@@Base+0x1a0>
   1bd34:	mov	w25, #0x1                   	// #1
   1bd38:	mov	x0, x21
   1bd3c:	bl	a290 <strlen@plt>
   1bd40:	mov	x24, x0
   1bd44:	mov	x0, x19
   1bd48:	bl	a290 <strlen@plt>
   1bd4c:	cbz	x24, 1be08 <renameatu@@Base+0x188>
   1bd50:	cbz	x0, 1be08 <renameatu@@Base+0x188>
   1bd54:	add	x8, x24, x21
   1bd58:	ldurb	w8, [x8, #-1]
   1bd5c:	cmp	w8, #0x2f
   1bd60:	b.eq	1bd74 <renameatu@@Base+0xf4>  // b.none
   1bd64:	add	x8, x0, x19
   1bd68:	ldurb	w8, [x8, #-1]
   1bd6c:	cmp	w8, #0x2f
   1bd70:	b.ne	1be08 <renameatu@@Base+0x188>  // b.any
   1bd74:	add	x3, sp, #0x80
   1bd78:	mov	w4, #0x100                 	// #256
   1bd7c:	mov	w0, wzr
   1bd80:	mov	w1, w22
   1bd84:	mov	x2, x21
   1bd88:	bl	aea0 <__fxstatat@plt>
   1bd8c:	cbnz	w0, 1bd2c <renameatu@@Base+0xac>
   1bd90:	cbz	w25, 1bdac <renameatu@@Base+0x12c>
   1bd94:	ldr	w8, [sp, #144]
   1bd98:	and	w8, w8, #0xf000
   1bd9c:	cmp	w8, #0x4, lsl #12
   1bda0:	b.eq	1be08 <renameatu@@Base+0x188>  // b.none
   1bda4:	mov	w8, #0x2                   	// #2
   1bda8:	b	1bd28 <renameatu@@Base+0xa8>
   1bdac:	mov	x3, sp
   1bdb0:	mov	w4, #0x100                 	// #256
   1bdb4:	mov	w0, wzr
   1bdb8:	mov	w1, w20
   1bdbc:	mov	x2, x19
   1bdc0:	bl	aea0 <__fxstatat@plt>
   1bdc4:	cbz	w0, 1bde8 <renameatu@@Base+0x168>
   1bdc8:	ldr	w8, [x23]
   1bdcc:	cmp	w8, #0x2
   1bdd0:	b.ne	1bd2c <renameatu@@Base+0xac>  // b.any
   1bdd4:	ldr	w8, [sp, #144]
   1bdd8:	and	w8, w8, #0xf000
   1bddc:	cmp	w8, #0x4, lsl #12
   1bde0:	b.ne	1bd2c <renameatu@@Base+0xac>  // b.any
   1bde4:	b	1be08 <renameatu@@Base+0x188>
   1bde8:	ldr	w8, [sp, #16]
   1bdec:	and	w8, w8, #0xf000
   1bdf0:	cmp	w8, #0x4, lsl #12
   1bdf4:	b.ne	1be40 <renameatu@@Base+0x1c0>  // b.any
   1bdf8:	ldr	w8, [sp, #144]
   1bdfc:	and	w8, w8, #0xf000
   1be00:	cmp	w8, #0x4, lsl #12
   1be04:	b.ne	1be48 <renameatu@@Base+0x1c8>  // b.any
   1be08:	mov	w0, w22
   1be0c:	mov	x1, x21
   1be10:	mov	w2, w20
   1be14:	mov	x3, x19
   1be18:	bl	a9c0 <renameat@plt>
   1be1c:	mov	w24, w0
   1be20:	mov	w0, w24
   1be24:	ldp	x20, x19, [sp, #320]
   1be28:	ldp	x22, x21, [sp, #304]
   1be2c:	ldp	x24, x23, [sp, #288]
   1be30:	ldp	x28, x25, [sp, #272]
   1be34:	ldp	x29, x30, [sp, #256]
   1be38:	add	sp, sp, #0x150
   1be3c:	ret
   1be40:	mov	w8, #0x14                  	// #20
   1be44:	b	1bd28 <renameatu@@Base+0xa8>
   1be48:	mov	w8, #0x15                  	// #21
   1be4c:	b	1bd28 <renameatu@@Base+0xa8>

000000000001be50 <same_name@@Base>:
   1be50:	mov	x8, x0
   1be54:	mov	w0, #0xffffff9c            	// #-100
   1be58:	mov	w2, #0xffffff9c            	// #-100
   1be5c:	mov	x3, x1
   1be60:	mov	x1, x8
   1be64:	b	a260 <same_nameat@plt>

000000000001be68 <same_nameat@@Base>:
   1be68:	sub	sp, sp, #0x150
   1be6c:	stp	x22, x21, [sp, #304]
   1be70:	mov	w21, w0
   1be74:	mov	x0, x1
   1be78:	stp	x29, x30, [sp, #256]
   1be7c:	stp	x28, x25, [sp, #272]
   1be80:	stp	x24, x23, [sp, #288]
   1be84:	stp	x20, x19, [sp, #320]
   1be88:	add	x29, sp, #0x100
   1be8c:	mov	x20, x3
   1be90:	mov	w19, w2
   1be94:	mov	x22, x1
   1be98:	bl	a6d0 <last_component@plt>
   1be9c:	mov	x23, x0
   1bea0:	mov	x0, x20
   1bea4:	bl	a6d0 <last_component@plt>
   1bea8:	mov	x24, x0
   1beac:	mov	x0, x23
   1beb0:	bl	a1f0 <base_len@plt>
   1beb4:	mov	x25, x0
   1beb8:	mov	x0, x24
   1bebc:	bl	a1f0 <base_len@plt>
   1bec0:	cmp	x25, x0
   1bec4:	b.ne	1bedc <same_nameat@@Base+0x74>  // b.any
   1bec8:	mov	x0, x23
   1becc:	mov	x1, x24
   1bed0:	mov	x2, x25
   1bed4:	bl	a6f0 <bcmp@plt>
   1bed8:	cbz	w0, 1bf00 <same_nameat@@Base+0x98>
   1bedc:	mov	w19, wzr
   1bee0:	mov	w0, w19
   1bee4:	ldp	x20, x19, [sp, #320]
   1bee8:	ldp	x22, x21, [sp, #304]
   1beec:	ldp	x24, x23, [sp, #288]
   1bef0:	ldp	x28, x25, [sp, #272]
   1bef4:	ldp	x29, x30, [sp, #256]
   1bef8:	add	sp, sp, #0x150
   1befc:	ret
   1bf00:	mov	x0, x22
   1bf04:	bl	a5d0 <dir_name@plt>
   1bf08:	mov	x22, x0
   1bf0c:	add	x3, sp, #0x80
   1bf10:	mov	w4, #0x100                 	// #256
   1bf14:	mov	w0, wzr
   1bf18:	mov	w1, w21
   1bf1c:	mov	x2, x22
   1bf20:	bl	aea0 <__fxstatat@plt>
   1bf24:	cbz	w0, 1bf44 <same_nameat@@Base+0xdc>
   1bf28:	bl	ad90 <__errno_location@plt>
   1bf2c:	ldr	w1, [x0]
   1bf30:	adrp	x2, 32000 <vasnprintf@@Base+0x1474>
   1bf34:	add	x2, x2, #0x1b8
   1bf38:	mov	w0, #0x1                   	// #1
   1bf3c:	mov	x3, x22
   1bf40:	bl	a2b0 <error@plt>
   1bf44:	mov	x0, x22
   1bf48:	bl	a970 <free@plt>
   1bf4c:	mov	x0, x20
   1bf50:	bl	a5d0 <dir_name@plt>
   1bf54:	mov	x20, x0
   1bf58:	mov	x3, sp
   1bf5c:	mov	w4, #0x100                 	// #256
   1bf60:	mov	w0, wzr
   1bf64:	mov	w1, w19
   1bf68:	mov	x2, x20
   1bf6c:	bl	aea0 <__fxstatat@plt>
   1bf70:	cbz	w0, 1bf90 <same_nameat@@Base+0x128>
   1bf74:	bl	ad90 <__errno_location@plt>
   1bf78:	ldr	w1, [x0]
   1bf7c:	adrp	x2, 32000 <vasnprintf@@Base+0x1474>
   1bf80:	add	x2, x2, #0x1b8
   1bf84:	mov	w0, #0x1                   	// #1
   1bf88:	mov	x3, x20
   1bf8c:	bl	a2b0 <error@plt>
   1bf90:	ldp	x11, x8, [sp]
   1bf94:	ldp	x10, x9, [sp, #128]
   1bf98:	mov	x0, x20
   1bf9c:	cmp	x9, x8
   1bfa0:	cset	w8, eq  // eq = none
   1bfa4:	cmp	x10, x11
   1bfa8:	cset	w9, eq  // eq = none
   1bfac:	and	w19, w8, w9
   1bfb0:	bl	a970 <free@plt>
   1bfb4:	b	1bee0 <same_nameat@@Base+0x78>

000000000001bfb8 <save_cwd@@Base>:
   1bfb8:	stp	x29, x30, [sp, #-32]!
   1bfbc:	str	x19, [sp, #16]
   1bfc0:	mov	x19, x0
   1bfc4:	str	xzr, [x0, #8]
   1bfc8:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1bfcc:	add	x0, x0, #0xe2
   1bfd0:	mov	w1, #0x80000               	// #524288
   1bfd4:	mov	x29, sp
   1bfd8:	bl	a5a0 <open@plt>
   1bfdc:	mov	w1, #0x80000               	// #524288
   1bfe0:	str	w0, [x19]
   1bfe4:	bl	ad30 <fd_safer_flag@plt>
   1bfe8:	str	w0, [x19]
   1bfec:	tbnz	w0, #31, 1c000 <save_cwd@@Base+0x48>
   1bff0:	mov	w0, wzr
   1bff4:	ldr	x19, [sp, #16]
   1bff8:	ldp	x29, x30, [sp], #32
   1bffc:	ret
   1c000:	mov	x0, xzr
   1c004:	mov	x1, xzr
   1c008:	bl	a250 <getcwd@plt>
   1c00c:	cmp	x0, #0x0
   1c010:	str	x0, [x19, #8]
   1c014:	csetm	w0, eq  // eq = none
   1c018:	ldr	x19, [sp, #16]
   1c01c:	ldp	x29, x30, [sp], #32
   1c020:	ret

000000000001c024 <restore_cwd@@Base>:
   1c024:	mov	x8, x0
   1c028:	ldr	w0, [x0]
   1c02c:	tbnz	w0, #31, 1c034 <restore_cwd@@Base+0x10>
   1c030:	b	a2d0 <fchdir@plt>
   1c034:	ldr	x0, [x8, #8]
   1c038:	b	a3a0 <chdir_long@plt>

000000000001c03c <free_cwd@@Base>:
   1c03c:	stp	x29, x30, [sp, #-32]!
   1c040:	str	x19, [sp, #16]
   1c044:	mov	x19, x0
   1c048:	ldr	w0, [x0]
   1c04c:	mov	x29, sp
   1c050:	tbnz	w0, #31, 1c058 <free_cwd@@Base+0x1c>
   1c054:	bl	a7a0 <close@plt>
   1c058:	ldr	x0, [x19, #8]
   1c05c:	ldr	x19, [sp, #16]
   1c060:	ldp	x29, x30, [sp], #32
   1c064:	b	a970 <free@plt>

000000000001c068 <gl_scratch_buffer_grow@@Base>:
   1c068:	stp	x29, x30, [sp, #-48]!
   1c06c:	stp	x20, x19, [sp, #32]
   1c070:	mov	x19, x0
   1c074:	ldr	x0, [x0]
   1c078:	ldr	x8, [x19, #8]
   1c07c:	str	x21, [sp, #16]
   1c080:	add	x21, x19, #0x10
   1c084:	cmp	x0, x21
   1c088:	lsl	x20, x8, #1
   1c08c:	mov	x29, sp
   1c090:	b.eq	1c09c <gl_scratch_buffer_grow@@Base+0x34>  // b.none
   1c094:	bl	a970 <free@plt>
   1c098:	ldr	x8, [x19, #8]
   1c09c:	cmp	x20, x8
   1c0a0:	b.cc	1c0cc <gl_scratch_buffer_grow@@Base+0x64>  // b.lo, b.ul, b.last
   1c0a4:	mov	x0, x20
   1c0a8:	bl	a550 <malloc@plt>
   1c0ac:	cbz	x0, 1c0d8 <gl_scratch_buffer_grow@@Base+0x70>
   1c0b0:	str	x0, [x19]
   1c0b4:	mov	w0, #0x1                   	// #1
   1c0b8:	str	x20, [x19, #8]
   1c0bc:	ldp	x20, x19, [sp, #32]
   1c0c0:	ldr	x21, [sp, #16]
   1c0c4:	ldp	x29, x30, [sp], #48
   1c0c8:	ret
   1c0cc:	bl	ad90 <__errno_location@plt>
   1c0d0:	mov	w8, #0xc                   	// #12
   1c0d4:	str	w8, [x0]
   1c0d8:	mov	w0, wzr
   1c0dc:	str	x21, [x19]
   1c0e0:	mov	w20, #0x400                 	// #1024
   1c0e4:	b	1c0b8 <gl_scratch_buffer_grow@@Base+0x50>

000000000001c0e8 <gl_scratch_buffer_grow_preserve@@Base>:
   1c0e8:	stp	x29, x30, [sp, #-64]!
   1c0ec:	stp	x24, x23, [sp, #16]
   1c0f0:	stp	x22, x21, [sp, #32]
   1c0f4:	stp	x20, x19, [sp, #48]
   1c0f8:	ldp	x21, x23, [x0]
   1c0fc:	add	x24, x0, #0x10
   1c100:	mov	x19, x0
   1c104:	mov	x29, sp
   1c108:	cmp	x21, x24
   1c10c:	lsl	x20, x23, #1
   1c110:	b.eq	1c138 <gl_scratch_buffer_grow_preserve@@Base+0x50>  // b.none
   1c114:	cmp	x20, x23
   1c118:	b.cc	1c174 <gl_scratch_buffer_grow_preserve@@Base+0x8c>  // b.lo, b.ul, b.last
   1c11c:	mov	x0, x21
   1c120:	mov	x1, x20
   1c124:	bl	a730 <realloc@plt>
   1c128:	mov	x22, x0
   1c12c:	cbnz	x0, 1c154 <gl_scratch_buffer_grow_preserve@@Base+0x6c>
   1c130:	ldr	x21, [x19]
   1c134:	b	1c180 <gl_scratch_buffer_grow_preserve@@Base+0x98>
   1c138:	mov	x0, x20
   1c13c:	bl	a550 <malloc@plt>
   1c140:	cbz	x0, 1c160 <gl_scratch_buffer_grow_preserve@@Base+0x78>
   1c144:	mov	x1, x21
   1c148:	mov	x2, x23
   1c14c:	mov	x22, x0
   1c150:	bl	a210 <memcpy@plt>
   1c154:	str	x22, [x19]
   1c158:	mov	w0, #0x1                   	// #1
   1c15c:	str	x20, [x19, #8]
   1c160:	ldp	x20, x19, [sp, #48]
   1c164:	ldp	x22, x21, [sp, #32]
   1c168:	ldp	x24, x23, [sp, #16]
   1c16c:	ldp	x29, x30, [sp], #64
   1c170:	ret
   1c174:	bl	ad90 <__errno_location@plt>
   1c178:	mov	w8, #0xc                   	// #12
   1c17c:	str	w8, [x0]
   1c180:	mov	x0, x21
   1c184:	bl	a970 <free@plt>
   1c188:	mov	w0, wzr
   1c18c:	mov	w20, #0x400                 	// #1024
   1c190:	str	x24, [x19]
   1c194:	b	1c15c <gl_scratch_buffer_grow_preserve@@Base+0x74>

000000000001c198 <gl_scratch_buffer_set_array_size@@Base>:
   1c198:	stp	x29, x30, [sp, #-48]!
   1c19c:	umulh	x8, x1, x2
   1c1a0:	cmp	xzr, x8
   1c1a4:	stp	x20, x19, [sp, #32]
   1c1a8:	mov	x19, x0
   1c1ac:	cset	w8, ne  // ne = any
   1c1b0:	str	x21, [sp, #16]
   1c1b4:	mov	x29, sp
   1c1b8:	cbz	x1, 1c20c <gl_scratch_buffer_set_array_size@@Base+0x74>
   1c1bc:	orr	x9, x2, x1
   1c1c0:	lsr	x9, x9, #32
   1c1c4:	cbz	x9, 1c20c <gl_scratch_buffer_set_array_size@@Base+0x74>
   1c1c8:	cbz	w8, 1c20c <gl_scratch_buffer_set_array_size@@Base+0x74>
   1c1cc:	mov	x20, x19
   1c1d0:	ldr	x0, [x20], #16
   1c1d4:	cmp	x0, x20
   1c1d8:	b.eq	1c1e0 <gl_scratch_buffer_set_array_size@@Base+0x48>  // b.none
   1c1dc:	bl	a970 <free@plt>
   1c1e0:	mov	w8, #0x400                 	// #1024
   1c1e4:	stp	x20, x8, [x19]
   1c1e8:	bl	ad90 <__errno_location@plt>
   1c1ec:	mov	x8, x0
   1c1f0:	mov	w9, #0xc                   	// #12
   1c1f4:	mov	w0, wzr
   1c1f8:	str	w9, [x8]
   1c1fc:	ldp	x20, x19, [sp, #32]
   1c200:	ldr	x21, [sp, #16]
   1c204:	ldp	x29, x30, [sp], #48
   1c208:	ret
   1c20c:	ldr	x8, [x19, #8]
   1c210:	mul	x20, x1, x2
   1c214:	cmp	x20, x8
   1c218:	b.ls	1c240 <gl_scratch_buffer_set_array_size@@Base+0xa8>  // b.plast
   1c21c:	mov	x21, x19
   1c220:	ldr	x0, [x21], #16
   1c224:	cmp	x0, x21
   1c228:	b.eq	1c230 <gl_scratch_buffer_set_array_size@@Base+0x98>  // b.none
   1c22c:	bl	a970 <free@plt>
   1c230:	mov	x0, x20
   1c234:	bl	a550 <malloc@plt>
   1c238:	cbz	x0, 1c254 <gl_scratch_buffer_set_array_size@@Base+0xbc>
   1c23c:	stp	x0, x20, [x19]
   1c240:	mov	w0, #0x1                   	// #1
   1c244:	ldp	x20, x19, [sp, #32]
   1c248:	ldr	x21, [sp, #16]
   1c24c:	ldp	x29, x30, [sp], #48
   1c250:	ret
   1c254:	mov	w8, #0x400                 	// #1024
   1c258:	stp	x21, x8, [x19]
   1c25c:	ldp	x20, x19, [sp, #32]
   1c260:	ldr	x21, [sp, #16]
   1c264:	ldp	x29, x30, [sp], #48
   1c268:	ret

000000000001c26c <gl_set_nx_create_empty@@Base>:
   1c26c:	ldr	x4, [x0]
   1c270:	br	x4

000000000001c274 <gl_set_size@@Base>:
   1c274:	ldr	x8, [x0]
   1c278:	ldr	x1, [x8, #8]
   1c27c:	br	x1

000000000001c280 <gl_set_search@@Base>:
   1c280:	ldr	x8, [x0]
   1c284:	ldr	x2, [x8, #16]
   1c288:	br	x2

000000000001c28c <gl_set_nx_add@@Base>:
   1c28c:	ldr	x8, [x0]
   1c290:	ldr	x2, [x8, #24]
   1c294:	br	x2

000000000001c298 <gl_set_remove@@Base>:
   1c298:	ldr	x8, [x0]
   1c29c:	ldr	x2, [x8, #32]
   1c2a0:	br	x2

000000000001c2a4 <gl_set_free@@Base>:
   1c2a4:	ldr	x8, [x0]
   1c2a8:	ldr	x1, [x8, #40]
   1c2ac:	br	x1

000000000001c2b0 <gl_set_iterator@@Base>:
   1c2b0:	ldr	x9, [x0]
   1c2b4:	ldr	x1, [x9, #48]
   1c2b8:	br	x1

000000000001c2bc <gl_set_iterator_next@@Base>:
   1c2bc:	ldr	x8, [x0]
   1c2c0:	ldr	x2, [x8, #56]
   1c2c4:	br	x2

000000000001c2c8 <gl_set_iterator_free@@Base>:
   1c2c8:	ldr	x8, [x0]
   1c2cc:	ldr	x1, [x8, #64]
   1c2d0:	br	x1

000000000001c2d4 <get_handler@@Base>:
   1c2d4:	ldr	x0, [x0]
   1c2d8:	ret

000000000001c2dc <gl_sockets_startup@@Base>:
   1c2dc:	mov	w0, wzr
   1c2e0:	ret

000000000001c2e4 <gl_sockets_cleanup@@Base>:
   1c2e4:	mov	w0, wzr
   1c2e8:	ret

000000000001c2ec <get_stat_atime_ns@@Base>:
   1c2ec:	ldr	x0, [x0, #80]
   1c2f0:	ret

000000000001c2f4 <get_stat_ctime_ns@@Base>:
   1c2f4:	ldr	x0, [x0, #112]
   1c2f8:	ret

000000000001c2fc <get_stat_mtime_ns@@Base>:
   1c2fc:	ldr	x0, [x0, #96]
   1c300:	ret

000000000001c304 <get_stat_birthtime_ns@@Base>:
   1c304:	mov	x0, xzr
   1c308:	ret

000000000001c30c <get_stat_atime@@Base>:
   1c30c:	ldp	x8, x1, [x0, #72]
   1c310:	mov	x0, x8
   1c314:	ret

000000000001c318 <get_stat_ctime@@Base>:
   1c318:	ldp	x8, x1, [x0, #104]
   1c31c:	mov	x0, x8
   1c320:	ret

000000000001c324 <get_stat_mtime@@Base>:
   1c324:	ldp	x8, x1, [x0, #88]
   1c328:	mov	x0, x8
   1c32c:	ret

000000000001c330 <get_stat_birthtime@@Base>:
   1c330:	mov	x0, #0xffffffffffffffff    	// #-1
   1c334:	mov	x1, #0xffffffffffffffff    	// #-1
   1c338:	ret

000000000001c33c <stat_time_normalize@@Base>:
   1c33c:	ret

000000000001c340 <statat@@Base>:
   1c340:	mov	x3, x2
   1c344:	mov	x2, x1
   1c348:	mov	w1, w0
   1c34c:	mov	w0, wzr
   1c350:	mov	w4, wzr
   1c354:	b	aea0 <__fxstatat@plt>

000000000001c358 <lstatat@@Base>:
   1c358:	mov	x3, x2
   1c35c:	mov	x2, x1
   1c360:	mov	w4, #0x100                 	// #256
   1c364:	mov	w1, w0
   1c368:	mov	w0, wzr
   1c36c:	b	aea0 <__fxstatat@plt>

000000000001c370 <stdopen@@Base>:
   1c370:	stp	x29, x30, [sp, #-16]!
   1c374:	mov	w1, #0x1                   	// #1
   1c378:	mov	w0, wzr
   1c37c:	mov	x29, sp
   1c380:	bl	aad0 <rpl_fcntl@plt>
   1c384:	tbz	w0, #31, 1c3b8 <stdopen@@Base+0x48>
   1c388:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1c38c:	add	x0, x0, #0xd25
   1c390:	mov	w1, #0x1                   	// #1
   1c394:	bl	a5a0 <open@plt>
   1c398:	tbz	w0, #31, 1c3b0 <stdopen@@Base+0x40>
   1c39c:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1c3a0:	add	x0, x0, #0xd2f
   1c3a4:	mov	w1, #0x1                   	// #1
   1c3a8:	bl	a5a0 <open@plt>
   1c3ac:	tbnz	w0, #31, 1c430 <stdopen@@Base+0xc0>
   1c3b0:	cmp	w0, #0x3
   1c3b4:	b.ge	1c420 <stdopen@@Base+0xb0>  // b.tcont
   1c3b8:	mov	w0, #0x1                   	// #1
   1c3bc:	mov	w1, #0x1                   	// #1
   1c3c0:	bl	aad0 <rpl_fcntl@plt>
   1c3c4:	tbnz	w0, #31, 1c3e4 <stdopen@@Base+0x74>
   1c3c8:	mov	w0, #0x2                   	// #2
   1c3cc:	mov	w1, #0x1                   	// #1
   1c3d0:	bl	aad0 <rpl_fcntl@plt>
   1c3d4:	tbnz	w0, #31, 1c404 <stdopen@@Base+0x94>
   1c3d8:	mov	w0, wzr
   1c3dc:	ldp	x29, x30, [sp], #16
   1c3e0:	ret
   1c3e4:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1c3e8:	add	x0, x0, #0xd2f
   1c3ec:	mov	w1, wzr
   1c3f0:	bl	a5a0 <open@plt>
   1c3f4:	tbnz	w0, #31, 1c430 <stdopen@@Base+0xc0>
   1c3f8:	cmp	w0, #0x2
   1c3fc:	b.le	1c3c8 <stdopen@@Base+0x58>
   1c400:	b	1c420 <stdopen@@Base+0xb0>
   1c404:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1c408:	add	x0, x0, #0xd2f
   1c40c:	mov	w1, wzr
   1c410:	bl	a5a0 <open@plt>
   1c414:	tbnz	w0, #31, 1c430 <stdopen@@Base+0xc0>
   1c418:	cmp	w0, #0x2
   1c41c:	b.le	1c3d8 <stdopen@@Base+0x68>
   1c420:	bl	a7a0 <close@plt>
   1c424:	mov	w0, wzr
   1c428:	ldp	x29, x30, [sp], #16
   1c42c:	ret
   1c430:	bl	ad90 <__errno_location@plt>
   1c434:	ldr	w0, [x0]
   1c438:	ldp	x29, x30, [sp], #16
   1c43c:	ret

000000000001c440 <strnlen1@@Base>:
   1c440:	stp	x29, x30, [sp, #-32]!
   1c444:	stp	x20, x19, [sp, #16]
   1c448:	mov	x19, x1
   1c44c:	mov	w1, wzr
   1c450:	mov	x2, x19
   1c454:	mov	x29, sp
   1c458:	mov	x20, x0
   1c45c:	bl	ab80 <memchr@plt>
   1c460:	sub	x8, x0, x20
   1c464:	cmp	x0, #0x0
   1c468:	csinc	x0, x19, x8, eq  // eq = none
   1c46c:	ldp	x20, x19, [sp, #16]
   1c470:	ldp	x29, x30, [sp], #32
   1c474:	ret

000000000001c478 <try_tempname@@Base>:
   1c478:	sub	sp, sp, #0x80
   1c47c:	stp	x29, x30, [sp, #32]
   1c480:	stp	x28, x27, [sp, #48]
   1c484:	stp	x26, x25, [sp, #64]
   1c488:	stp	x24, x23, [sp, #80]
   1c48c:	stp	x22, x21, [sp, #96]
   1c490:	stp	x20, x19, [sp, #112]
   1c494:	add	x29, sp, #0x20
   1c498:	mov	x20, x3
   1c49c:	mov	x21, x2
   1c4a0:	mov	w23, w1
   1c4a4:	mov	x22, x0
   1c4a8:	bl	ad90 <__errno_location@plt>
   1c4ac:	ldr	w24, [x0]
   1c4b0:	mov	x19, x0
   1c4b4:	mov	x0, x22
   1c4b8:	bl	a290 <strlen@plt>
   1c4bc:	add	w8, w23, #0x6
   1c4c0:	cmp	w8, w0
   1c4c4:	b.gt	1c4f8 <try_tempname@@Base+0x80>
   1c4c8:	sub	w8, w0, w23
   1c4cc:	sub	w8, w8, #0x6
   1c4d0:	add	x23, x22, w8, sxtw
   1c4d4:	ldr	w8, [x23]
   1c4d8:	ldrh	w9, [x23, #4]
   1c4dc:	mov	w10, #0x5858                	// #22616
   1c4e0:	movk	w10, #0x5858, lsl #16
   1c4e4:	mov	w11, #0x5858                	// #22616
   1c4e8:	eor	w8, w8, w10
   1c4ec:	eor	w9, w9, w11
   1c4f0:	orr	w8, w8, w9
   1c4f4:	cbz	w8, 1c524 <try_tempname@@Base+0xac>
   1c4f8:	mov	w0, #0xffffffff            	// #-1
   1c4fc:	mov	w8, #0x16                  	// #22
   1c500:	str	w8, [x19]
   1c504:	ldp	x20, x19, [sp, #112]
   1c508:	ldp	x22, x21, [sp, #96]
   1c50c:	ldp	x24, x23, [sp, #80]
   1c510:	ldp	x26, x25, [sp, #64]
   1c514:	ldp	x28, x27, [sp, #48]
   1c518:	ldp	x29, x30, [sp, #32]
   1c51c:	add	sp, sp, #0x80
   1c520:	ret
   1c524:	add	x0, sp, #0x10
   1c528:	mov	x1, xzr
   1c52c:	str	w24, [sp, #4]
   1c530:	bl	a650 <gettimeofday@plt>
   1c534:	ldp	x9, x8, [sp, #16]
   1c538:	eor	x8, x9, x8, lsl #16
   1c53c:	str	x8, [sp, #8]
   1c540:	bl	a510 <getpid@plt>
   1c544:	adrp	x25, 46000 <base_len@@Base+0x30a14>
   1c548:	ldr	x10, [sp, #8]
   1c54c:	ldr	x9, [x25, #2304]
   1c550:	mov	x27, #0x2109                	// #8457
   1c554:	sxtw	x8, w0
   1c558:	movk	x27, #0x1084, lsl #16
   1c55c:	mov	w26, #0xa2f8                	// #41720
   1c560:	movk	x27, #0x842, lsl #32
   1c564:	adrp	x24, 33000 <vasnprintf@@Base+0x2474>
   1c568:	eor	x8, x10, x8
   1c56c:	movk	w26, #0x3, lsl #16
   1c570:	movk	x27, #0x8421, lsl #48
   1c574:	mov	w28, #0x3e                  	// #62
   1c578:	add	x24, x24, #0xd39
   1c57c:	add	x8, x8, x9
   1c580:	str	x8, [x25, #2304]
   1c584:	mov	x10, #0x5b1b                	// #23323
   1c588:	movk	x10, #0xa12a, lsl #16
   1c58c:	movk	x10, #0xa63, lsl #32
   1c590:	movk	x10, #0x2219, lsl #48
   1c594:	mov	x12, #0x9d65                	// #40293
   1c598:	umulh	x10, x8, x10
   1c59c:	movk	x12, #0xeb0a, lsl #16
   1c5a0:	movk	x12, #0x9357, lsl #32
   1c5a4:	lsr	x14, x10, #9
   1c5a8:	lsr	x10, x10, #10
   1c5ac:	movk	x12, #0x48aa, lsl #48
   1c5b0:	mov	x13, #0xac13                	// #44051
   1c5b4:	umulh	x10, x10, x27
   1c5b8:	umulh	x12, x8, x12
   1c5bc:	movk	x13, #0x68cb, lsl #16
   1c5c0:	lsr	x10, x10, #4
   1c5c4:	movk	x13, #0x544e, lsl #32
   1c5c8:	msub	x10, x10, x28, x14
   1c5cc:	lsr	x14, x12, #22
   1c5d0:	lsr	x12, x12, #23
   1c5d4:	movk	x13, #0x2581, lsl #48
   1c5d8:	umulh	x12, x12, x27
   1c5dc:	umulh	x13, x8, x13
   1c5e0:	lsr	x12, x12, #4
   1c5e4:	msub	x12, x12, x28, x14
   1c5e8:	lsr	x14, x13, #27
   1c5ec:	lsr	x13, x13, #28
   1c5f0:	lsr	x9, x8, #1
   1c5f4:	mov	x15, #0x243d                	// #9277
   1c5f8:	umulh	x13, x13, x27
   1c5fc:	umulh	x9, x9, x27
   1c600:	movk	x15, #0x95d9, lsl #16
   1c604:	lsr	x13, x13, #4
   1c608:	movk	x15, #0x9f5e, lsl #32
   1c60c:	msub	x13, x13, x28, x14
   1c610:	lsr	x14, x9, #4
   1c614:	lsr	x9, x9, #5
   1c618:	lsr	x11, x8, #3
   1c61c:	movk	x15, #0x2332, lsl #48
   1c620:	umulh	x9, x9, x27
   1c624:	umulh	x11, x11, x15
   1c628:	msub	x8, x14, x28, x8
   1c62c:	lsr	x9, x9, #4
   1c630:	msub	x9, x9, x28, x14
   1c634:	lsr	x14, x11, #12
   1c638:	lsr	x11, x11, #13
   1c63c:	ldrb	w8, [x24, x8]
   1c640:	ldrb	w10, [x24, x10]
   1c644:	umulh	x11, x11, x27
   1c648:	lsr	x11, x11, #4
   1c64c:	msub	x11, x11, x28, x14
   1c650:	strb	w8, [x23]
   1c654:	strb	w10, [x23, #2]
   1c658:	ldrb	w8, [x24, x12]
   1c65c:	ldrb	w9, [x24, x9]
   1c660:	ldrb	w10, [x24, x11]
   1c664:	ldrb	w11, [x24, x13]
   1c668:	mov	x0, x22
   1c66c:	mov	x1, x21
   1c670:	strb	w8, [x23, #4]
   1c674:	strb	w9, [x23, #1]
   1c678:	strb	w10, [x23, #3]
   1c67c:	strb	w11, [x23, #5]
   1c680:	blr	x20
   1c684:	tbz	w0, #31, 1c6b8 <try_tempname@@Base+0x240>
   1c688:	ldr	w8, [x19]
   1c68c:	cmp	w8, #0x11
   1c690:	b.ne	1c6c0 <try_tempname@@Base+0x248>  // b.any
   1c694:	ldr	x8, [x25, #2304]
   1c698:	mov	w9, #0x1e61                	// #7777
   1c69c:	subs	w26, w26, #0x1
   1c6a0:	add	x8, x8, x9
   1c6a4:	str	x8, [x25, #2304]
   1c6a8:	b.ne	1c584 <try_tempname@@Base+0x10c>  // b.any
   1c6ac:	mov	w0, #0xffffffff            	// #-1
   1c6b0:	mov	w8, #0x11                  	// #17
   1c6b4:	b	1c500 <try_tempname@@Base+0x88>
   1c6b8:	ldr	w8, [sp, #4]
   1c6bc:	b	1c500 <try_tempname@@Base+0x88>
   1c6c0:	mov	w0, #0xffffffff            	// #-1
   1c6c4:	b	1c504 <try_tempname@@Base+0x8c>

000000000001c6c8 <gen_tempname@@Base>:
   1c6c8:	sub	sp, sp, #0x20
   1c6cc:	stp	x29, x30, [sp, #16]
   1c6d0:	add	x29, sp, #0x10
   1c6d4:	cmp	w3, #0x3
   1c6d8:	stur	w2, [x29, #-4]
   1c6dc:	b.cs	1c700 <gen_tempname@@Base+0x38>  // b.hs, b.nlast
   1c6e0:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1c6e4:	add	x8, x8, #0xca0
   1c6e8:	ldr	x3, [x8, w3, sxtw #3]
   1c6ec:	sub	x2, x29, #0x4
   1c6f0:	bl	a760 <try_tempname@plt>
   1c6f4:	ldp	x29, x30, [sp, #16]
   1c6f8:	add	sp, sp, #0x20
   1c6fc:	ret
   1c700:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1c704:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1c708:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1c70c:	add	x0, x0, #0xd78
   1c710:	add	x1, x1, #0xd9b
   1c714:	add	x3, x3, #0xda6
   1c718:	mov	w2, #0x13f                 	// #319
   1c71c:	bl	ad80 <__assert_fail@plt>
   1c720:	ldr	w8, [x1]
   1c724:	mov	w9, #0xc2                  	// #194
   1c728:	mov	w2, #0x180                 	// #384
   1c72c:	and	w8, w8, #0xfffffffc
   1c730:	orr	w1, w8, w9
   1c734:	b	a5a0 <open@plt>
   1c738:	mov	w1, #0x1c0                 	// #448
   1c73c:	b	ae40 <mkdir@plt>
   1c740:	sub	sp, sp, #0xa0
   1c744:	mov	x1, x0
   1c748:	mov	x2, sp
   1c74c:	mov	w0, wzr
   1c750:	stp	x29, x30, [sp, #128]
   1c754:	str	x19, [sp, #144]
   1c758:	add	x29, sp, #0x80
   1c75c:	bl	ab60 <__lxstat@plt>
   1c760:	mov	w19, w0
   1c764:	bl	ad90 <__errno_location@plt>
   1c768:	cbz	w19, 1c778 <gen_tempname@@Base+0xb0>
   1c76c:	ldr	w8, [x0]
   1c770:	cmp	w8, #0x4b
   1c774:	b.ne	1c780 <gen_tempname@@Base+0xb8>  // b.any
   1c778:	mov	w8, #0x11                  	// #17
   1c77c:	str	w8, [x0]
   1c780:	ldr	w8, [x0]
   1c784:	ldr	x19, [sp, #144]
   1c788:	ldp	x29, x30, [sp, #128]
   1c78c:	cmp	w8, #0x2
   1c790:	csetm	w0, ne  // ne = any
   1c794:	add	sp, sp, #0xa0
   1c798:	ret

000000000001c79c <make_timespec@@Base>:
   1c79c:	ret

000000000001c7a0 <timespec_cmp@@Base>:
   1c7a0:	cmp	x0, x2
   1c7a4:	b.ge	1c7b0 <timespec_cmp@@Base+0x10>  // b.tcont
   1c7a8:	mov	w0, #0xffffffff            	// #-1
   1c7ac:	ret
   1c7b0:	b.le	1c7bc <timespec_cmp@@Base+0x1c>
   1c7b4:	mov	w0, #0x1                   	// #1
   1c7b8:	ret
   1c7bc:	sub	w0, w1, w3
   1c7c0:	ret

000000000001c7c4 <timespec_sign@@Base>:
   1c7c4:	orr	x8, x1, x0
   1c7c8:	cmp	x8, #0x0
   1c7cc:	cset	w8, ne  // ne = any
   1c7d0:	cmp	x0, #0x0
   1c7d4:	csinv	w0, w8, wzr, ge  // ge = tcont
   1c7d8:	ret

000000000001c7dc <timespectod@@Base>:
   1c7dc:	mov	x8, #0xcd6500000000        	// #225833675390976
   1c7e0:	movk	x8, #0x41cd, lsl #48
   1c7e4:	scvtf	d1, x1
   1c7e8:	fmov	d2, x8
   1c7ec:	scvtf	d0, x0
   1c7f0:	fdiv	d1, d1, d2
   1c7f4:	fadd	d0, d1, d0
   1c7f8:	ret

000000000001c7fc <dup_safer@@Base>:
   1c7fc:	mov	w2, #0x3                   	// #3
   1c800:	mov	w1, wzr
   1c804:	b	aad0 <rpl_fcntl@plt>

000000000001c808 <fd_safer@@Base>:
   1c808:	stp	x29, x30, [sp, #-48]!
   1c80c:	stp	x20, x19, [sp, #32]
   1c810:	mov	w19, w0
   1c814:	cmp	w0, #0x2
   1c818:	stp	x22, x21, [sp, #16]
   1c81c:	mov	x29, sp
   1c820:	b.hi	1c85c <fd_safer@@Base+0x54>  // b.pmore
   1c824:	mov	w0, w19
   1c828:	bl	a960 <dup_safer@plt>
   1c82c:	mov	w20, w0
   1c830:	bl	ad90 <__errno_location@plt>
   1c834:	ldr	w22, [x0]
   1c838:	mov	x21, x0
   1c83c:	mov	w0, w19
   1c840:	bl	a7a0 <close@plt>
   1c844:	str	w22, [x21]
   1c848:	mov	w0, w20
   1c84c:	ldp	x20, x19, [sp, #32]
   1c850:	ldp	x22, x21, [sp, #16]
   1c854:	ldp	x29, x30, [sp], #48
   1c858:	ret
   1c85c:	mov	w0, w19
   1c860:	ldp	x20, x19, [sp, #32]
   1c864:	ldp	x22, x21, [sp, #16]
   1c868:	ldp	x29, x30, [sp], #48
   1c86c:	ret

000000000001c870 <pipe_safer@@Base>:
   1c870:	stp	x29, x30, [sp, #-48]!
   1c874:	stp	x22, x21, [sp, #16]
   1c878:	stp	x20, x19, [sp, #32]
   1c87c:	mov	x29, sp
   1c880:	mov	x19, x0
   1c884:	bl	a410 <pipe@plt>
   1c888:	cbnz	w0, 1c8e4 <pipe_safer@@Base+0x74>
   1c88c:	ldr	w0, [x19]
   1c890:	bl	ae10 <fd_safer@plt>
   1c894:	str	w0, [x19]
   1c898:	tbnz	w0, #31, 1c8c0 <pipe_safer@@Base+0x50>
   1c89c:	ldr	w0, [x19, #4]
   1c8a0:	bl	ae10 <fd_safer@plt>
   1c8a4:	str	w0, [x19, #4]
   1c8a8:	tbnz	w0, #31, 1c8c8 <pipe_safer@@Base+0x58>
   1c8ac:	mov	w0, wzr
   1c8b0:	ldp	x20, x19, [sp, #32]
   1c8b4:	ldp	x22, x21, [sp, #16]
   1c8b8:	ldp	x29, x30, [sp], #48
   1c8bc:	ret
   1c8c0:	mov	w21, #0x1                   	// #1
   1c8c4:	b	1c8cc <pipe_safer@@Base+0x5c>
   1c8c8:	mov	x21, xzr
   1c8cc:	bl	ad90 <__errno_location@plt>
   1c8d0:	mov	x20, x0
   1c8d4:	ldr	w22, [x0]
   1c8d8:	ldr	w0, [x19, x21, lsl #2]
   1c8dc:	bl	a7a0 <close@plt>
   1c8e0:	str	w22, [x20]
   1c8e4:	mov	w0, #0xffffffff            	// #-1
   1c8e8:	ldp	x20, x19, [sp, #32]
   1c8ec:	ldp	x22, x21, [sp, #16]
   1c8f0:	ldp	x29, x30, [sp], #48
   1c8f4:	ret

000000000001c8f8 <fdutimens@@Base>:
   1c8f8:	sub	sp, sp, #0x140
   1c8fc:	stp	x29, x30, [sp, #224]
   1c900:	add	x29, sp, #0xe0
   1c904:	cmp	x2, #0x0
   1c908:	sub	x8, x29, #0x20
   1c90c:	stp	x22, x21, [sp, #288]
   1c910:	stp	x20, x19, [sp, #304]
   1c914:	mov	x22, x2
   1c918:	mov	x20, x1
   1c91c:	mov	w19, w0
   1c920:	csel	x21, xzr, x8, eq  // eq = none
   1c924:	str	x28, [sp, #240]
   1c928:	stp	x26, x25, [sp, #256]
   1c92c:	stp	x24, x23, [sp, #272]
   1c930:	cbz	x2, 1c990 <fdutimens@@Base+0x98>
   1c934:	ldr	q0, [x22]
   1c938:	mov	w9, #0xca00                	// #51712
   1c93c:	movk	w9, #0x3b9a, lsl #16
   1c940:	stur	q0, [x29, #-32]
   1c944:	ldr	q0, [x22, #16]
   1c948:	stur	q0, [x29, #-16]
   1c94c:	ldr	x10, [x21, #8]
   1c950:	cmp	x10, x9
   1c954:	and	x11, x10, #0xfffffffffffffffe
   1c958:	b.cc	1c968 <fdutimens@@Base+0x70>  // b.lo, b.ul, b.last
   1c95c:	mov	w8, #0x3ffffffe            	// #1073741822
   1c960:	cmp	x11, x8
   1c964:	b.ne	1c984 <fdutimens@@Base+0x8c>  // b.any
   1c968:	ldr	x8, [x21, #24]
   1c96c:	cmp	x8, x9
   1c970:	and	x9, x8, #0xfffffffffffffffe
   1c974:	b.cc	1c99c <fdutimens@@Base+0xa4>  // b.lo, b.ul, b.last
   1c978:	mov	w12, #0x3ffffffe            	// #1073741822
   1c97c:	cmp	x9, x12
   1c980:	b.eq	1c99c <fdutimens@@Base+0xa4>  // b.none
   1c984:	bl	ad90 <__errno_location@plt>
   1c988:	mov	w8, #0x16                  	// #22
   1c98c:	b	1ca0c <fdutimens@@Base+0x114>
   1c990:	mov	w26, wzr
   1c994:	tbnz	w19, #31, 1ca00 <fdutimens@@Base+0x108>
   1c998:	b	1ca38 <fdutimens@@Base+0x140>
   1c99c:	mov	w12, #0x3ffffffe            	// #1073741822
   1c9a0:	cmp	x11, x12
   1c9a4:	b.ne	1c9cc <fdutimens@@Base+0xd4>  // b.any
   1c9a8:	mov	w11, #0x3ffffffe            	// #1073741822
   1c9ac:	cmp	x10, x11
   1c9b0:	cset	w10, eq  // eq = none
   1c9b4:	mov	w11, #0x1                   	// #1
   1c9b8:	str	xzr, [x21]
   1c9bc:	mov	w12, #0x3ffffffe            	// #1073741822
   1c9c0:	cmp	x9, x12
   1c9c4:	b.eq	1c9e0 <fdutimens@@Base+0xe8>  // b.none
   1c9c8:	b	1c9f4 <fdutimens@@Base+0xfc>
   1c9cc:	mov	w11, wzr
   1c9d0:	mov	w10, wzr
   1c9d4:	mov	w12, #0x3ffffffe            	// #1073741822
   1c9d8:	cmp	x9, x12
   1c9dc:	b.ne	1c9f4 <fdutimens@@Base+0xfc>  // b.any
   1c9e0:	mov	w9, #0x3ffffffe            	// #1073741822
   1c9e4:	cmp	x8, x9
   1c9e8:	cinc	w10, w10, eq  // eq = none
   1c9ec:	mov	w11, #0x1                   	// #1
   1c9f0:	str	xzr, [x21, #16]
   1c9f4:	cmp	w10, #0x1
   1c9f8:	cinc	w26, w11, eq  // eq = none
   1c9fc:	tbz	w19, #31, 1ca38 <fdutimens@@Base+0x140>
   1ca00:	cbnz	x20, 1ca38 <fdutimens@@Base+0x140>
   1ca04:	bl	ad90 <__errno_location@plt>
   1ca08:	mov	w8, #0x9                   	// #9
   1ca0c:	str	w8, [x0]
   1ca10:	mov	w23, #0xffffffff            	// #-1
   1ca14:	mov	w0, w23
   1ca18:	ldp	x20, x19, [sp, #304]
   1ca1c:	ldp	x22, x21, [sp, #288]
   1ca20:	ldp	x24, x23, [sp, #272]
   1ca24:	ldp	x26, x25, [sp, #256]
   1ca28:	ldr	x28, [sp, #240]
   1ca2c:	ldp	x29, x30, [sp, #224]
   1ca30:	add	sp, sp, #0x140
   1ca34:	ret
   1ca38:	adrp	x25, 46000 <base_len@@Base+0x30a14>
   1ca3c:	ldr	w8, [x25, #2312]
   1ca40:	add	x24, sp, #0x40
   1ca44:	tbnz	w8, #31, 1cb00 <fdutimens@@Base+0x208>
   1ca48:	cmp	w26, #0x2
   1ca4c:	b.ne	1cab0 <fdutimens@@Base+0x1b8>  // b.any
   1ca50:	add	x2, sp, #0x40
   1ca54:	mov	w0, wzr
   1ca58:	tbnz	w19, #31, 1ca6c <fdutimens@@Base+0x174>
   1ca5c:	mov	w1, w19
   1ca60:	bl	ac30 <__fxstat@plt>
   1ca64:	cbnz	w0, 1ca10 <fdutimens@@Base+0x118>
   1ca68:	b	1ca78 <fdutimens@@Base+0x180>
   1ca6c:	mov	x1, x20
   1ca70:	bl	add0 <__xstat@plt>
   1ca74:	cbnz	w0, 1ca10 <fdutimens@@Base+0x118>
   1ca78:	ldr	x8, [x21, #8]
   1ca7c:	mov	w9, #0x3ffffffe            	// #1073741822
   1ca80:	cmp	x8, x9
   1ca84:	b.ne	1ca94 <fdutimens@@Base+0x19c>  // b.any
   1ca88:	ldur	q0, [x24, #72]
   1ca8c:	str	q0, [x21]
   1ca90:	b	1caac <fdutimens@@Base+0x1b4>
   1ca94:	ldr	x8, [x21, #24]
   1ca98:	mov	w9, #0x3ffffffe            	// #1073741822
   1ca9c:	cmp	x8, x9
   1caa0:	b.ne	1caac <fdutimens@@Base+0x1b4>  // b.any
   1caa4:	ldur	q0, [x24, #88]
   1caa8:	str	q0, [x21, #16]
   1caac:	mov	w26, #0x3                   	// #3
   1cab0:	tbz	w19, #31, 1cadc <fdutimens@@Base+0x1e4>
   1cab4:	mov	w0, #0xffffff9c            	// #-100
   1cab8:	mov	x1, x20
   1cabc:	mov	x2, x21
   1cac0:	mov	w3, wzr
   1cac4:	bl	aaa0 <utimensat@plt>
   1cac8:	cmp	w0, #0x1
   1cacc:	b.lt	1cbd4 <fdutimens@@Base+0x2dc>  // b.tstop
   1cad0:	bl	ad90 <__errno_location@plt>
   1cad4:	mov	w8, #0x26                  	// #38
   1cad8:	str	w8, [x0]
   1cadc:	tbnz	w19, #31, 1cb00 <fdutimens@@Base+0x208>
   1cae0:	mov	w0, w19
   1cae4:	mov	x1, x21
   1cae8:	bl	a600 <futimens@plt>
   1caec:	cmp	w0, #0x1
   1caf0:	b.lt	1cb7c <fdutimens@@Base+0x284>  // b.tstop
   1caf4:	bl	ad90 <__errno_location@plt>
   1caf8:	mov	w8, #0x26                  	// #38
   1cafc:	str	w8, [x0]
   1cb00:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   1cb04:	add	x8, x8, #0x908
   1cb08:	mov	x9, #0xffffffffffffffff    	// #-1
   1cb0c:	str	x9, [x8]
   1cb10:	cbz	w26, 1cb58 <fdutimens@@Base+0x260>
   1cb14:	cmp	w26, #0x3
   1cb18:	b.ne	1cb60 <fdutimens@@Base+0x268>  // b.any
   1cb1c:	cbz	x22, 1cbb8 <fdutimens@@Base+0x2c0>
   1cb20:	ldr	x8, [x21, #8]
   1cb24:	mov	w9, #0x3fffffff            	// #1073741823
   1cb28:	cmp	x8, x9
   1cb2c:	b.eq	1cba8 <fdutimens@@Base+0x2b0>  // b.none
   1cb30:	mov	w9, #0x3ffffffe            	// #1073741822
   1cb34:	cmp	x8, x9
   1cb38:	b.ne	1cc00 <fdutimens@@Base+0x308>  // b.any
   1cb3c:	ldr	x8, [x21, #24]
   1cb40:	mov	w9, #0x3ffffffe            	// #1073741822
   1cb44:	cmp	x8, x9
   1cb48:	b.eq	1cd78 <fdutimens@@Base+0x480>  // b.none
   1cb4c:	ldur	q0, [x24, #72]
   1cb50:	str	q0, [x21]
   1cb54:	b	1cc00 <fdutimens@@Base+0x308>
   1cb58:	cbnz	x22, 1cc34 <fdutimens@@Base+0x33c>
   1cb5c:	b	1cbb8 <fdutimens@@Base+0x2c0>
   1cb60:	add	x2, sp, #0x40
   1cb64:	mov	w0, wzr
   1cb68:	tbnz	w19, #31, 1cb98 <fdutimens@@Base+0x2a0>
   1cb6c:	mov	w1, w19
   1cb70:	bl	ac30 <__fxstat@plt>
   1cb74:	cbnz	w0, 1ca10 <fdutimens@@Base+0x118>
   1cb78:	b	1cb1c <fdutimens@@Base+0x224>
   1cb7c:	mov	w23, w0
   1cb80:	cbz	w0, 1cbec <fdutimens@@Base+0x2f4>
   1cb84:	bl	ad90 <__errno_location@plt>
   1cb88:	ldr	w8, [x0]
   1cb8c:	cmp	w8, #0x26
   1cb90:	b.eq	1cb00 <fdutimens@@Base+0x208>  // b.none
   1cb94:	b	1cbec <fdutimens@@Base+0x2f4>
   1cb98:	mov	x1, x20
   1cb9c:	bl	add0 <__xstat@plt>
   1cba0:	cbnz	w0, 1ca10 <fdutimens@@Base+0x118>
   1cba4:	b	1cb1c <fdutimens@@Base+0x224>
   1cba8:	ldr	x8, [x21, #24]
   1cbac:	mov	w9, #0x3fffffff            	// #1073741823
   1cbb0:	cmp	x8, x9
   1cbb4:	b.ne	1cbf8 <fdutimens@@Base+0x300>  // b.any
   1cbb8:	mov	x21, xzr
   1cbbc:	tbz	w19, #31, 1cc84 <fdutimens@@Base+0x38c>
   1cbc0:	mov	w0, #0xffffff9c            	// #-100
   1cbc4:	mov	x1, x20
   1cbc8:	mov	x2, x21
   1cbcc:	bl	a570 <futimesat@plt>
   1cbd0:	b	1cca8 <fdutimens@@Base+0x3b0>
   1cbd4:	mov	w23, w0
   1cbd8:	cbz	w0, 1cbec <fdutimens@@Base+0x2f4>
   1cbdc:	bl	ad90 <__errno_location@plt>
   1cbe0:	ldr	w8, [x0]
   1cbe4:	cmp	w8, #0x26
   1cbe8:	b.eq	1cadc <fdutimens@@Base+0x1e4>  // b.none
   1cbec:	mov	w8, #0x1                   	// #1
   1cbf0:	str	w8, [x25, #2312]
   1cbf4:	b	1ca14 <fdutimens@@Base+0x11c>
   1cbf8:	mov	x0, x21
   1cbfc:	bl	ae60 <gettime@plt>
   1cc00:	ldr	x8, [x21, #24]
   1cc04:	mov	w9, #0x3fffffff            	// #1073741823
   1cc08:	cmp	x8, x9
   1cc0c:	b.eq	1cc28 <fdutimens@@Base+0x330>  // b.none
   1cc10:	mov	w9, #0x3ffffffe            	// #1073741822
   1cc14:	cmp	x8, x9
   1cc18:	b.ne	1cc30 <fdutimens@@Base+0x338>  // b.any
   1cc1c:	ldur	q0, [x24, #88]
   1cc20:	str	q0, [x21, #16]
   1cc24:	b	1cc30 <fdutimens@@Base+0x338>
   1cc28:	add	x0, x21, #0x10
   1cc2c:	bl	ae60 <gettime@plt>
   1cc30:	sub	x21, x29, #0x20
   1cc34:	ldr	x8, [x21]
   1cc38:	mov	x9, #0xf7cf                	// #63439
   1cc3c:	movk	x9, #0xe353, lsl #16
   1cc40:	movk	x9, #0x9ba5, lsl #32
   1cc44:	str	x8, [sp, #32]
   1cc48:	ldr	x8, [x21, #8]
   1cc4c:	movk	x9, #0x20c4, lsl #48
   1cc50:	smulh	x8, x8, x9
   1cc54:	asr	x10, x8, #7
   1cc58:	add	x8, x10, x8, lsr #63
   1cc5c:	str	x8, [sp, #40]
   1cc60:	ldr	x8, [x21, #16]
   1cc64:	str	x8, [sp, #48]
   1cc68:	ldr	x8, [x21, #24]
   1cc6c:	add	x21, sp, #0x20
   1cc70:	smulh	x8, x8, x9
   1cc74:	asr	x9, x8, #7
   1cc78:	add	x8, x9, x8, lsr #63
   1cc7c:	str	x8, [sp, #56]
   1cc80:	tbnz	w19, #31, 1cbc0 <fdutimens@@Base+0x2c8>
   1cc84:	mov	w0, w19
   1cc88:	mov	x1, xzr
   1cc8c:	mov	x2, x21
   1cc90:	bl	a570 <futimesat@plt>
   1cc94:	cbz	w0, 1ccb0 <fdutimens@@Base+0x3b8>
   1cc98:	cbz	x20, 1ca10 <fdutimens@@Base+0x118>
   1cc9c:	mov	x0, x20
   1cca0:	mov	x1, x21
   1cca4:	bl	ac10 <utimes@plt>
   1cca8:	mov	w23, w0
   1ccac:	b	1ca14 <fdutimens@@Base+0x11c>
   1ccb0:	cbz	x21, 1cd78 <fdutimens@@Base+0x480>
   1ccb4:	ldr	x24, [x21, #8]
   1ccb8:	ldr	x20, [x21, #24]
   1ccbc:	mov	w22, #0xa11f                	// #41247
   1ccc0:	movk	w22, #0x7, lsl #16
   1ccc4:	cmp	x24, x22
   1ccc8:	b.gt	1ccd4 <fdutimens@@Base+0x3dc>
   1cccc:	cmp	x20, x22
   1ccd0:	b.le	1cd78 <fdutimens@@Base+0x480>
   1ccd4:	add	x2, sp, #0x40
   1ccd8:	mov	w0, wzr
   1ccdc:	mov	w1, w19
   1cce0:	bl	ac30 <__fxstat@plt>
   1cce4:	mov	w23, wzr
   1cce8:	cbnz	w0, 1ca14 <fdutimens@@Base+0x11c>
   1ccec:	ldr	q0, [x21]
   1ccf0:	add	x9, x21, #0x10
   1ccf4:	ldr	x10, [x21]
   1ccf8:	ldr	x8, [x21, #16]
   1ccfc:	str	q0, [sp]
   1cd00:	ldr	q0, [x9]
   1cd04:	ldr	x11, [sp, #136]
   1cd08:	ldr	x9, [sp, #152]
   1cd0c:	mov	x2, xzr
   1cd10:	cmp	x24, x22
   1cd14:	str	q0, [sp, #16]
   1cd18:	b.le	1cd40 <fdutimens@@Base+0x448>
   1cd1c:	sub	x10, x11, x10
   1cd20:	cmp	x10, #0x1
   1cd24:	b.ne	1cd40 <fdutimens@@Base+0x448>  // b.any
   1cd28:	ldr	x10, [sp, #144]
   1cd2c:	cbz	x10, 1cd38 <fdutimens@@Base+0x440>
   1cd30:	mov	x2, xzr
   1cd34:	b	1cd40 <fdutimens@@Base+0x448>
   1cd38:	mov	x2, sp
   1cd3c:	str	xzr, [sp, #8]
   1cd40:	cmp	x20, x22
   1cd44:	b.le	1cd5c <fdutimens@@Base+0x464>
   1cd48:	sub	x8, x9, x8
   1cd4c:	cmp	x8, #0x1
   1cd50:	b.ne	1cd5c <fdutimens@@Base+0x464>  // b.any
   1cd54:	ldr	x8, [sp, #160]
   1cd58:	cbz	x8, 1cd64 <fdutimens@@Base+0x46c>
   1cd5c:	cbnz	x2, 1cd6c <fdutimens@@Base+0x474>
   1cd60:	b	1cd78 <fdutimens@@Base+0x480>
   1cd64:	mov	x2, sp
   1cd68:	str	xzr, [sp, #24]
   1cd6c:	mov	w0, w19
   1cd70:	mov	x1, xzr
   1cd74:	bl	a570 <futimesat@plt>
   1cd78:	mov	w23, wzr
   1cd7c:	b	1ca14 <fdutimens@@Base+0x11c>

000000000001cd80 <utimens@@Base>:
   1cd80:	mov	x8, x0
   1cd84:	mov	w0, #0xffffffff            	// #-1
   1cd88:	mov	x2, x1
   1cd8c:	mov	x1, x8
   1cd90:	b	a8b0 <fdutimens@plt>

000000000001cd94 <lutimens@@Base>:
   1cd94:	sub	sp, sp, #0xe0
   1cd98:	stp	x29, x30, [sp, #160]
   1cd9c:	add	x29, sp, #0xa0
   1cda0:	cmp	x1, #0x0
   1cda4:	sub	x8, x29, #0x20
   1cda8:	stp	x22, x21, [sp, #192]
   1cdac:	stp	x20, x19, [sp, #208]
   1cdb0:	mov	x21, x1
   1cdb4:	mov	x19, x0
   1cdb8:	csel	x20, xzr, x8, eq  // eq = none
   1cdbc:	stp	x24, x23, [sp, #176]
   1cdc0:	cbz	x1, 1ce40 <lutimens@@Base+0xac>
   1cdc4:	ldr	q0, [x21]
   1cdc8:	mov	w9, #0xca00                	// #51712
   1cdcc:	movk	w9, #0x3b9a, lsl #16
   1cdd0:	stur	q0, [x29, #-32]
   1cdd4:	ldr	q0, [x21, #16]
   1cdd8:	stur	q0, [x29, #-16]
   1cddc:	ldr	x10, [x20, #8]
   1cde0:	cmp	x10, x9
   1cde4:	and	x11, x10, #0xfffffffffffffffe
   1cde8:	b.cc	1cdf8 <lutimens@@Base+0x64>  // b.lo, b.ul, b.last
   1cdec:	mov	w8, #0x3ffffffe            	// #1073741822
   1cdf0:	cmp	x11, x8
   1cdf4:	b.ne	1ce14 <lutimens@@Base+0x80>  // b.any
   1cdf8:	ldr	x8, [x20, #24]
   1cdfc:	cmp	x8, x9
   1ce00:	and	x9, x8, #0xfffffffffffffffe
   1ce04:	b.cc	1ce54 <lutimens@@Base+0xc0>  // b.lo, b.ul, b.last
   1ce08:	mov	w12, #0x3ffffffe            	// #1073741822
   1ce0c:	cmp	x9, x12
   1ce10:	b.eq	1ce54 <lutimens@@Base+0xc0>  // b.none
   1ce14:	bl	ad90 <__errno_location@plt>
   1ce18:	mov	w8, #0x16                  	// #22
   1ce1c:	str	w8, [x0]
   1ce20:	mov	w22, #0xffffffff            	// #-1
   1ce24:	mov	w0, w22
   1ce28:	ldp	x20, x19, [sp, #208]
   1ce2c:	ldp	x22, x21, [sp, #192]
   1ce30:	ldp	x24, x23, [sp, #176]
   1ce34:	ldp	x29, x30, [sp, #160]
   1ce38:	add	sp, sp, #0xe0
   1ce3c:	ret
   1ce40:	mov	w24, wzr
   1ce44:	adrp	x23, 46000 <base_len@@Base+0x30a14>
   1ce48:	ldr	w8, [x23, #2316]
   1ce4c:	tbz	w8, #31, 1cec0 <lutimens@@Base+0x12c>
   1ce50:	b	1cf3c <lutimens@@Base+0x1a8>
   1ce54:	mov	w12, #0x3ffffffe            	// #1073741822
   1ce58:	cmp	x11, x12
   1ce5c:	b.ne	1ce84 <lutimens@@Base+0xf0>  // b.any
   1ce60:	mov	w11, #0x3ffffffe            	// #1073741822
   1ce64:	cmp	x10, x11
   1ce68:	cset	w10, eq  // eq = none
   1ce6c:	mov	w11, #0x1                   	// #1
   1ce70:	str	xzr, [x20]
   1ce74:	mov	w12, #0x3ffffffe            	// #1073741822
   1ce78:	cmp	x9, x12
   1ce7c:	b.eq	1ce98 <lutimens@@Base+0x104>  // b.none
   1ce80:	b	1ceac <lutimens@@Base+0x118>
   1ce84:	mov	w11, wzr
   1ce88:	mov	w10, wzr
   1ce8c:	mov	w12, #0x3ffffffe            	// #1073741822
   1ce90:	cmp	x9, x12
   1ce94:	b.ne	1ceac <lutimens@@Base+0x118>  // b.any
   1ce98:	mov	w9, #0x3ffffffe            	// #1073741822
   1ce9c:	cmp	x8, x9
   1cea0:	cinc	w10, w10, eq  // eq = none
   1cea4:	mov	w11, #0x1                   	// #1
   1cea8:	str	xzr, [x20, #16]
   1ceac:	cmp	w10, #0x1
   1ceb0:	cinc	w24, w11, eq  // eq = none
   1ceb4:	adrp	x23, 46000 <base_len@@Base+0x30a14>
   1ceb8:	ldr	w8, [x23, #2316]
   1cebc:	tbnz	w8, #31, 1cf3c <lutimens@@Base+0x1a8>
   1cec0:	cmp	w24, #0x2
   1cec4:	b.ne	1cf14 <lutimens@@Base+0x180>  // b.any
   1cec8:	mov	x2, sp
   1cecc:	mov	w0, wzr
   1ced0:	mov	x1, x19
   1ced4:	bl	ab60 <__lxstat@plt>
   1ced8:	cbnz	w0, 1ce20 <lutimens@@Base+0x8c>
   1cedc:	ldr	x8, [x20, #8]
   1cee0:	mov	w9, #0x3ffffffe            	// #1073741822
   1cee4:	cmp	x8, x9
   1cee8:	b.ne	1cef8 <lutimens@@Base+0x164>  // b.any
   1ceec:	ldur	q0, [sp, #72]
   1cef0:	str	q0, [x20]
   1cef4:	b	1cf10 <lutimens@@Base+0x17c>
   1cef8:	ldr	x8, [x20, #24]
   1cefc:	mov	w9, #0x3ffffffe            	// #1073741822
   1cf00:	cmp	x8, x9
   1cf04:	b.ne	1cf10 <lutimens@@Base+0x17c>  // b.any
   1cf08:	ldur	q0, [sp, #88]
   1cf0c:	str	q0, [x20, #16]
   1cf10:	mov	w24, #0x3                   	// #3
   1cf14:	mov	w0, #0xffffff9c            	// #-100
   1cf18:	mov	w3, #0x100                 	// #256
   1cf1c:	mov	x1, x19
   1cf20:	mov	x2, x20
   1cf24:	bl	aaa0 <utimensat@plt>
   1cf28:	cmp	w0, #0x1
   1cf2c:	b.lt	1cfcc <lutimens@@Base+0x238>  // b.tstop
   1cf30:	bl	ad90 <__errno_location@plt>
   1cf34:	mov	w8, #0x26                  	// #38
   1cf38:	str	w8, [x0]
   1cf3c:	mov	w8, #0xffffffff            	// #-1
   1cf40:	str	w8, [x23, #2316]
   1cf44:	cbz	w24, 1cf9c <lutimens@@Base+0x208>
   1cf48:	cmp	w24, #0x3
   1cf4c:	b.eq	1cf64 <lutimens@@Base+0x1d0>  // b.none
   1cf50:	mov	x2, sp
   1cf54:	mov	w0, wzr
   1cf58:	mov	x1, x19
   1cf5c:	bl	ab60 <__lxstat@plt>
   1cf60:	cbnz	w0, 1ce20 <lutimens@@Base+0x8c>
   1cf64:	cbz	x21, 1d008 <lutimens@@Base+0x274>
   1cf68:	ldr	x8, [x20, #8]
   1cf6c:	mov	w9, #0x3fffffff            	// #1073741823
   1cf70:	cmp	x8, x9
   1cf74:	b.eq	1cff8 <lutimens@@Base+0x264>  // b.none
   1cf78:	mov	w9, #0x3ffffffe            	// #1073741822
   1cf7c:	cmp	x8, x9
   1cf80:	b.ne	1d048 <lutimens@@Base+0x2b4>  // b.any
   1cf84:	ldr	x8, [x20, #24]
   1cf88:	mov	w9, #0x3ffffffe            	// #1073741822
   1cf8c:	cmp	x8, x9
   1cf90:	b.ne	1d034 <lutimens@@Base+0x2a0>  // b.any
   1cf94:	mov	w22, wzr
   1cf98:	b	1ce24 <lutimens@@Base+0x90>
   1cf9c:	mov	x2, sp
   1cfa0:	mov	w0, wzr
   1cfa4:	mov	x1, x19
   1cfa8:	bl	ab60 <__lxstat@plt>
   1cfac:	cbnz	w0, 1ce20 <lutimens@@Base+0x8c>
   1cfb0:	ldr	w8, [sp, #16]
   1cfb4:	and	w8, w8, #0xf000
   1cfb8:	cmp	w8, #0xa, lsl #12
   1cfbc:	b.ne	1d01c <lutimens@@Base+0x288>  // b.any
   1cfc0:	bl	ad90 <__errno_location@plt>
   1cfc4:	mov	w8, #0x26                  	// #38
   1cfc8:	b	1ce1c <lutimens@@Base+0x88>
   1cfcc:	mov	w22, w0
   1cfd0:	cbz	w0, 1cfe4 <lutimens@@Base+0x250>
   1cfd4:	bl	ad90 <__errno_location@plt>
   1cfd8:	ldr	w8, [x0]
   1cfdc:	cmp	w8, #0x26
   1cfe0:	b.eq	1cf3c <lutimens@@Base+0x1a8>  // b.none
   1cfe4:	adrp	x8, 46000 <base_len@@Base+0x30a14>
   1cfe8:	add	x8, x8, #0x908
   1cfec:	mov	x9, #0x100000001           	// #4294967297
   1cff0:	str	x9, [x8]
   1cff4:	b	1ce24 <lutimens@@Base+0x90>
   1cff8:	ldr	x8, [x20, #24]
   1cffc:	mov	w9, #0x3fffffff            	// #1073741823
   1d000:	cmp	x8, x9
   1d004:	b.ne	1d040 <lutimens@@Base+0x2ac>  // b.any
   1d008:	mov	x20, xzr
   1d00c:	ldr	w8, [sp, #16]
   1d010:	and	w8, w8, #0xf000
   1d014:	cmp	w8, #0xa, lsl #12
   1d018:	b.eq	1cfc0 <lutimens@@Base+0x22c>  // b.none
   1d01c:	mov	w0, #0xffffffff            	// #-1
   1d020:	mov	x1, x19
   1d024:	mov	x2, x20
   1d028:	bl	a8b0 <fdutimens@plt>
   1d02c:	mov	w22, w0
   1d030:	b	1ce24 <lutimens@@Base+0x90>
   1d034:	ldur	q0, [sp, #72]
   1d038:	str	q0, [x20]
   1d03c:	b	1d048 <lutimens@@Base+0x2b4>
   1d040:	mov	x0, x20
   1d044:	bl	ae60 <gettime@plt>
   1d048:	ldr	x8, [x20, #24]
   1d04c:	mov	w9, #0x3fffffff            	// #1073741823
   1d050:	cmp	x8, x9
   1d054:	b.eq	1d084 <lutimens@@Base+0x2f0>  // b.none
   1d058:	mov	w9, #0x3ffffffe            	// #1073741822
   1d05c:	cmp	x8, x9
   1d060:	b.ne	1d06c <lutimens@@Base+0x2d8>  // b.any
   1d064:	ldur	q0, [sp, #88]
   1d068:	str	q0, [x20, #16]
   1d06c:	sub	x20, x29, #0x20
   1d070:	ldr	w8, [sp, #16]
   1d074:	and	w8, w8, #0xf000
   1d078:	cmp	w8, #0xa, lsl #12
   1d07c:	b.ne	1d01c <lutimens@@Base+0x288>  // b.any
   1d080:	b	1cfc0 <lutimens@@Base+0x22c>
   1d084:	add	x0, x20, #0x10
   1d088:	bl	ae60 <gettime@plt>
   1d08c:	sub	x20, x29, #0x20
   1d090:	ldr	w8, [sp, #16]
   1d094:	and	w8, w8, #0xf000
   1d098:	cmp	w8, #0xa, lsl #12
   1d09c:	b.eq	1cfc0 <lutimens@@Base+0x22c>  // b.none
   1d0a0:	b	1d01c <lutimens@@Base+0x288>

000000000001d0a4 <xnmalloc@@Base>:
   1d0a4:	stp	x29, x30, [sp, #-32]!
   1d0a8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1d0ac:	udiv	x8, x8, x1
   1d0b0:	cmp	x8, x0
   1d0b4:	str	x19, [sp, #16]
   1d0b8:	mov	x29, sp
   1d0bc:	b.cc	1d0e0 <xnmalloc@@Base+0x3c>  // b.lo, b.ul, b.last
   1d0c0:	mul	x19, x1, x0
   1d0c4:	mov	x0, x19
   1d0c8:	bl	a550 <malloc@plt>
   1d0cc:	cbz	x19, 1d0d4 <xnmalloc@@Base+0x30>
   1d0d0:	cbz	x0, 1d0e0 <xnmalloc@@Base+0x3c>
   1d0d4:	ldr	x19, [sp, #16]
   1d0d8:	ldp	x29, x30, [sp], #32
   1d0dc:	ret
   1d0e0:	bl	a7e0 <xalloc_die@plt>

000000000001d0e4 <xmalloc@@Base>:
   1d0e4:	stp	x29, x30, [sp, #-32]!
   1d0e8:	str	x19, [sp, #16]
   1d0ec:	mov	x29, sp
   1d0f0:	mov	x19, x0
   1d0f4:	bl	a550 <malloc@plt>
   1d0f8:	cbz	x19, 1d100 <xmalloc@@Base+0x1c>
   1d0fc:	cbz	x0, 1d10c <xmalloc@@Base+0x28>
   1d100:	ldr	x19, [sp, #16]
   1d104:	ldp	x29, x30, [sp], #32
   1d108:	ret
   1d10c:	bl	a7e0 <xalloc_die@plt>

000000000001d110 <xnrealloc@@Base>:
   1d110:	stp	x29, x30, [sp, #-32]!
   1d114:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1d118:	udiv	x8, x8, x2
   1d11c:	cmp	x8, x1
   1d120:	str	x19, [sp, #16]
   1d124:	mov	x29, sp
   1d128:	b.cc	1d160 <xnrealloc@@Base+0x50>  // b.lo, b.ul, b.last
   1d12c:	mul	x19, x2, x1
   1d130:	cbz	x0, 1d144 <xnrealloc@@Base+0x34>
   1d134:	cbnz	x19, 1d144 <xnrealloc@@Base+0x34>
   1d138:	bl	a970 <free@plt>
   1d13c:	mov	x0, xzr
   1d140:	b	1d154 <xnrealloc@@Base+0x44>
   1d144:	mov	x1, x19
   1d148:	bl	a730 <realloc@plt>
   1d14c:	cbz	x19, 1d154 <xnrealloc@@Base+0x44>
   1d150:	cbz	x0, 1d160 <xnrealloc@@Base+0x50>
   1d154:	ldr	x19, [sp, #16]
   1d158:	ldp	x29, x30, [sp], #32
   1d15c:	ret
   1d160:	bl	a7e0 <xalloc_die@plt>

000000000001d164 <xrealloc@@Base>:
   1d164:	stp	x29, x30, [sp, #-32]!
   1d168:	str	x19, [sp, #16]
   1d16c:	mov	x19, x1
   1d170:	mov	x29, sp
   1d174:	cbz	x0, 1d188 <xrealloc@@Base+0x24>
   1d178:	cbnz	x19, 1d188 <xrealloc@@Base+0x24>
   1d17c:	bl	a970 <free@plt>
   1d180:	mov	x0, xzr
   1d184:	b	1d198 <xrealloc@@Base+0x34>
   1d188:	mov	x1, x19
   1d18c:	bl	a730 <realloc@plt>
   1d190:	cbz	x19, 1d198 <xrealloc@@Base+0x34>
   1d194:	cbz	x0, 1d1a4 <xrealloc@@Base+0x40>
   1d198:	ldr	x19, [sp, #16]
   1d19c:	ldp	x29, x30, [sp], #32
   1d1a0:	ret
   1d1a4:	bl	a7e0 <xalloc_die@plt>

000000000001d1a8 <x2nrealloc@@Base>:
   1d1a8:	stp	x29, x30, [sp, #-32]!
   1d1ac:	ldr	x8, [x1]
   1d1b0:	str	x19, [sp, #16]
   1d1b4:	mov	x29, sp
   1d1b8:	cbz	x0, 1d1fc <x2nrealloc@@Base+0x54>
   1d1bc:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1d1c0:	movk	x9, #0x5554
   1d1c4:	udiv	x9, x9, x2
   1d1c8:	cmp	x9, x8
   1d1cc:	b.ls	1d238 <x2nrealloc@@Base+0x90>  // b.plast
   1d1d0:	add	x8, x8, x8, lsr #1
   1d1d4:	add	x9, x8, #0x1
   1d1d8:	mul	x8, x9, x2
   1d1dc:	str	x9, [x1]
   1d1e0:	cbz	x8, 1d23c <x2nrealloc@@Base+0x94>
   1d1e4:	mov	x1, x8
   1d1e8:	bl	a730 <realloc@plt>
   1d1ec:	cbz	x0, 1d238 <x2nrealloc@@Base+0x90>
   1d1f0:	ldr	x19, [sp, #16]
   1d1f4:	ldp	x29, x30, [sp], #32
   1d1f8:	ret
   1d1fc:	cbnz	x8, 1d210 <x2nrealloc@@Base+0x68>
   1d200:	mov	w8, #0x80                  	// #128
   1d204:	udiv	x8, x8, x2
   1d208:	cmp	x2, #0x80
   1d20c:	cinc	x8, x8, hi  // hi = pmore
   1d210:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   1d214:	udiv	x9, x9, x2
   1d218:	cmp	x9, x8
   1d21c:	b.cc	1d238 <x2nrealloc@@Base+0x90>  // b.lo, b.ul, b.last
   1d220:	mul	x19, x8, x2
   1d224:	mov	x0, x19
   1d228:	str	x8, [x1]
   1d22c:	bl	a550 <malloc@plt>
   1d230:	cbz	x19, 1d1f0 <x2nrealloc@@Base+0x48>
   1d234:	cbnz	x0, 1d1f0 <x2nrealloc@@Base+0x48>
   1d238:	bl	a7e0 <xalloc_die@plt>
   1d23c:	bl	a970 <free@plt>
   1d240:	mov	x0, xzr
   1d244:	ldr	x19, [sp, #16]
   1d248:	ldp	x29, x30, [sp], #32
   1d24c:	ret

000000000001d250 <xcharalloc@@Base>:
   1d250:	stp	x29, x30, [sp, #-32]!
   1d254:	str	x19, [sp, #16]
   1d258:	mov	x29, sp
   1d25c:	mov	x19, x0
   1d260:	bl	a550 <malloc@plt>
   1d264:	cbz	x19, 1d26c <xcharalloc@@Base+0x1c>
   1d268:	cbz	x0, 1d278 <xcharalloc@@Base+0x28>
   1d26c:	ldr	x19, [sp, #16]
   1d270:	ldp	x29, x30, [sp], #32
   1d274:	ret
   1d278:	bl	a7e0 <xalloc_die@plt>

000000000001d27c <x2realloc@@Base>:
   1d27c:	stp	x29, x30, [sp, #-16]!
   1d280:	ldr	x8, [x1]
   1d284:	mov	x29, sp
   1d288:	cbz	x0, 1d2bc <x2realloc@@Base+0x40>
   1d28c:	mov	x9, #0x5555555555555555    	// #6148914691236517205
   1d290:	movk	x9, #0x5554
   1d294:	cmp	x8, x9
   1d298:	b.cs	1d300 <x2realloc@@Base+0x84>  // b.hs, b.nlast
   1d29c:	add	x8, x8, x8, lsr #1
   1d2a0:	adds	x8, x8, #0x1
   1d2a4:	str	x8, [x1]
   1d2a8:	b.eq	1d2dc <x2realloc@@Base+0x60>  // b.none
   1d2ac:	mov	x1, x8
   1d2b0:	bl	a730 <realloc@plt>
   1d2b4:	cbnz	x0, 1d2d4 <x2realloc@@Base+0x58>
   1d2b8:	b	1d300 <x2realloc@@Base+0x84>
   1d2bc:	cbz	x8, 1d2ec <x2realloc@@Base+0x70>
   1d2c0:	tbnz	x8, #63, 1d300 <x2realloc@@Base+0x84>
   1d2c4:	mov	x0, x8
   1d2c8:	str	x8, [x1]
   1d2cc:	bl	a550 <malloc@plt>
   1d2d0:	cbz	x0, 1d300 <x2realloc@@Base+0x84>
   1d2d4:	ldp	x29, x30, [sp], #16
   1d2d8:	ret
   1d2dc:	bl	a970 <free@plt>
   1d2e0:	mov	x0, xzr
   1d2e4:	ldp	x29, x30, [sp], #16
   1d2e8:	ret
   1d2ec:	mov	w8, #0x80                  	// #128
   1d2f0:	mov	x0, x8
   1d2f4:	str	x8, [x1]
   1d2f8:	bl	a550 <malloc@plt>
   1d2fc:	cbnz	x0, 1d2d4 <x2realloc@@Base+0x58>
   1d300:	bl	a7e0 <xalloc_die@plt>

000000000001d304 <xzalloc@@Base>:
   1d304:	stp	x29, x30, [sp, #-32]!
   1d308:	str	x19, [sp, #16]
   1d30c:	mov	x29, sp
   1d310:	mov	x19, x0
   1d314:	bl	a550 <malloc@plt>
   1d318:	cbz	x19, 1d320 <xzalloc@@Base+0x1c>
   1d31c:	cbz	x0, 1d334 <xzalloc@@Base+0x30>
   1d320:	mov	x2, x19
   1d324:	ldr	x19, [sp, #16]
   1d328:	mov	w1, wzr
   1d32c:	ldp	x29, x30, [sp], #32
   1d330:	b	a640 <memset@plt>
   1d334:	bl	a7e0 <xalloc_die@plt>

000000000001d338 <xcalloc@@Base>:
   1d338:	stp	x29, x30, [sp, #-16]!
   1d33c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
   1d340:	udiv	x8, x8, x1
   1d344:	cmp	x8, x0
   1d348:	mov	x29, sp
   1d34c:	b.cc	1d360 <xcalloc@@Base+0x28>  // b.lo, b.ul, b.last
   1d350:	bl	a6c0 <calloc@plt>
   1d354:	cbz	x0, 1d360 <xcalloc@@Base+0x28>
   1d358:	ldp	x29, x30, [sp], #16
   1d35c:	ret
   1d360:	bl	a7e0 <xalloc_die@plt>

000000000001d364 <xmemdup@@Base>:
   1d364:	stp	x29, x30, [sp, #-32]!
   1d368:	stp	x20, x19, [sp, #16]
   1d36c:	mov	x20, x0
   1d370:	mov	x0, x1
   1d374:	mov	x29, sp
   1d378:	mov	x19, x1
   1d37c:	bl	a550 <malloc@plt>
   1d380:	cbz	x19, 1d388 <xmemdup@@Base+0x24>
   1d384:	cbz	x0, 1d39c <xmemdup@@Base+0x38>
   1d388:	mov	x1, x20
   1d38c:	mov	x2, x19
   1d390:	ldp	x20, x19, [sp, #16]
   1d394:	ldp	x29, x30, [sp], #32
   1d398:	b	a210 <memcpy@plt>
   1d39c:	bl	a7e0 <xalloc_die@plt>

000000000001d3a0 <xstrdup@@Base>:
   1d3a0:	stp	x29, x30, [sp, #-32]!
   1d3a4:	stp	x20, x19, [sp, #16]
   1d3a8:	mov	x29, sp
   1d3ac:	mov	x19, x0
   1d3b0:	bl	a290 <strlen@plt>
   1d3b4:	add	x20, x0, #0x1
   1d3b8:	mov	x0, x20
   1d3bc:	bl	a550 <malloc@plt>
   1d3c0:	cbz	x20, 1d3c8 <xstrdup@@Base+0x28>
   1d3c4:	cbz	x0, 1d3dc <xstrdup@@Base+0x3c>
   1d3c8:	mov	x1, x19
   1d3cc:	mov	x2, x20
   1d3d0:	ldp	x20, x19, [sp, #16]
   1d3d4:	ldp	x29, x30, [sp], #32
   1d3d8:	b	a210 <memcpy@plt>
   1d3dc:	bl	a7e0 <xalloc_die@plt>

000000000001d3e0 <xalloc_die@@Base>:
   1d3e0:	stp	x29, x30, [sp, #-32]!
   1d3e4:	str	x19, [sp, #16]
   1d3e8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1d3ec:	ldr	x8, [x8, #3976]
   1d3f0:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1d3f4:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1d3f8:	add	x0, x0, #0x197
   1d3fc:	ldr	w19, [x8]
   1d400:	add	x1, x1, #0xdce
   1d404:	mov	w2, #0x5                   	// #5
   1d408:	mov	x29, sp
   1d40c:	bl	ac90 <dcgettext@plt>
   1d410:	adrp	x2, 32000 <vasnprintf@@Base+0x1474>
   1d414:	mov	x3, x0
   1d418:	add	x2, x2, #0x1b8
   1d41c:	mov	w0, w19
   1d420:	mov	w1, wzr
   1d424:	bl	a2b0 <error@plt>
   1d428:	bl	a850 <abort@plt>

000000000001d42c <xgetcwd@@Base>:
   1d42c:	stp	x29, x30, [sp, #-32]!
   1d430:	mov	x0, xzr
   1d434:	mov	x1, xzr
   1d438:	str	x19, [sp, #16]
   1d43c:	mov	x29, sp
   1d440:	bl	a250 <getcwd@plt>
   1d444:	mov	x19, x0
   1d448:	cbnz	x0, 1d45c <xgetcwd@@Base+0x30>
   1d44c:	bl	ad90 <__errno_location@plt>
   1d450:	ldr	w8, [x0]
   1d454:	cmp	w8, #0xc
   1d458:	b.eq	1d46c <xgetcwd@@Base+0x40>  // b.none
   1d45c:	mov	x0, x19
   1d460:	ldr	x19, [sp, #16]
   1d464:	ldp	x29, x30, [sp], #32
   1d468:	ret
   1d46c:	bl	a7e0 <xalloc_die@plt>

000000000001d470 <gl_list_create_empty@@Base>:
   1d470:	stp	x29, x30, [sp, #-16]!
   1d474:	ldr	x8, [x0]
   1d478:	and	w4, w4, #0x1
   1d47c:	mov	x29, sp
   1d480:	blr	x8
   1d484:	cbz	x0, 1d490 <gl_list_create_empty@@Base+0x20>
   1d488:	ldp	x29, x30, [sp], #16
   1d48c:	ret
   1d490:	bl	a7e0 <xalloc_die@plt>

000000000001d494 <gl_list_create@@Base>:
   1d494:	stp	x29, x30, [sp, #-16]!
   1d498:	ldr	x8, [x0, #8]
   1d49c:	and	w4, w4, #0x1
   1d4a0:	mov	x29, sp
   1d4a4:	blr	x8
   1d4a8:	cbz	x0, 1d4b4 <gl_list_create@@Base+0x20>
   1d4ac:	ldp	x29, x30, [sp], #16
   1d4b0:	ret
   1d4b4:	bl	a7e0 <xalloc_die@plt>

000000000001d4b8 <gl_list_node_set_value@@Base>:
   1d4b8:	stp	x29, x30, [sp, #-16]!
   1d4bc:	ldr	x8, [x0]
   1d4c0:	mov	x29, sp
   1d4c4:	ldr	x8, [x8, #32]
   1d4c8:	blr	x8
   1d4cc:	tbnz	w0, #31, 1d4d8 <gl_list_node_set_value@@Base+0x20>
   1d4d0:	ldp	x29, x30, [sp], #16
   1d4d4:	ret
   1d4d8:	bl	a7e0 <xalloc_die@plt>

000000000001d4dc <gl_list_set_at@@Base>:
   1d4dc:	stp	x29, x30, [sp, #-16]!
   1d4e0:	ldr	x8, [x0]
   1d4e4:	mov	x29, sp
   1d4e8:	ldr	x8, [x8, #64]
   1d4ec:	blr	x8
   1d4f0:	cbz	x0, 1d4fc <gl_list_set_at@@Base+0x20>
   1d4f4:	ldp	x29, x30, [sp], #16
   1d4f8:	ret
   1d4fc:	bl	a7e0 <xalloc_die@plt>

000000000001d500 <gl_list_add_first@@Base>:
   1d500:	stp	x29, x30, [sp, #-16]!
   1d504:	ldr	x8, [x0]
   1d508:	mov	x29, sp
   1d50c:	ldr	x8, [x8, #88]
   1d510:	blr	x8
   1d514:	cbz	x0, 1d520 <gl_list_add_first@@Base+0x20>
   1d518:	ldp	x29, x30, [sp], #16
   1d51c:	ret
   1d520:	bl	a7e0 <xalloc_die@plt>

000000000001d524 <gl_list_add_last@@Base>:
   1d524:	stp	x29, x30, [sp, #-16]!
   1d528:	ldr	x8, [x0]
   1d52c:	mov	x29, sp
   1d530:	ldr	x8, [x8, #96]
   1d534:	blr	x8
   1d538:	cbz	x0, 1d544 <gl_list_add_last@@Base+0x20>
   1d53c:	ldp	x29, x30, [sp], #16
   1d540:	ret
   1d544:	bl	a7e0 <xalloc_die@plt>

000000000001d548 <gl_list_add_before@@Base>:
   1d548:	stp	x29, x30, [sp, #-16]!
   1d54c:	ldr	x8, [x0]
   1d550:	mov	x29, sp
   1d554:	ldr	x8, [x8, #104]
   1d558:	blr	x8
   1d55c:	cbz	x0, 1d568 <gl_list_add_before@@Base+0x20>
   1d560:	ldp	x29, x30, [sp], #16
   1d564:	ret
   1d568:	bl	a7e0 <xalloc_die@plt>

000000000001d56c <gl_list_add_after@@Base>:
   1d56c:	stp	x29, x30, [sp, #-16]!
   1d570:	ldr	x8, [x0]
   1d574:	mov	x29, sp
   1d578:	ldr	x8, [x8, #112]
   1d57c:	blr	x8
   1d580:	cbz	x0, 1d58c <gl_list_add_after@@Base+0x20>
   1d584:	ldp	x29, x30, [sp], #16
   1d588:	ret
   1d58c:	bl	a7e0 <xalloc_die@plt>

000000000001d590 <gl_list_add_at@@Base>:
   1d590:	stp	x29, x30, [sp, #-16]!
   1d594:	ldr	x8, [x0]
   1d598:	mov	x29, sp
   1d59c:	ldr	x8, [x8, #120]
   1d5a0:	blr	x8
   1d5a4:	cbz	x0, 1d5b0 <gl_list_add_at@@Base+0x20>
   1d5a8:	ldp	x29, x30, [sp], #16
   1d5ac:	ret
   1d5b0:	bl	a7e0 <xalloc_die@plt>

000000000001d5b4 <gl_sortedlist_add@@Base>:
   1d5b4:	stp	x29, x30, [sp, #-16]!
   1d5b8:	ldr	x8, [x0]
   1d5bc:	mov	x29, sp
   1d5c0:	ldr	x8, [x8, #224]
   1d5c4:	blr	x8
   1d5c8:	cbz	x0, 1d5d4 <gl_sortedlist_add@@Base+0x20>
   1d5cc:	ldp	x29, x30, [sp], #16
   1d5d0:	ret
   1d5d4:	bl	a7e0 <xalloc_die@plt>

000000000001d5d8 <gl_map_create_empty@@Base>:
   1d5d8:	stp	x29, x30, [sp, #-16]!
   1d5dc:	ldr	x8, [x0]
   1d5e0:	mov	x29, sp
   1d5e4:	blr	x8
   1d5e8:	cbz	x0, 1d5f4 <gl_map_create_empty@@Base+0x1c>
   1d5ec:	ldp	x29, x30, [sp], #16
   1d5f0:	ret
   1d5f4:	bl	a7e0 <xalloc_die@plt>

000000000001d5f8 <gl_map_put@@Base>:
   1d5f8:	sub	sp, sp, #0x30
   1d5fc:	stp	x29, x30, [sp, #16]
   1d600:	stp	x20, x19, [sp, #32]
   1d604:	ldr	x8, [x0]
   1d608:	add	x3, sp, #0x8
   1d60c:	add	x29, sp, #0x10
   1d610:	mov	x20, x0
   1d614:	ldr	x8, [x8, #24]
   1d618:	blr	x8
   1d61c:	mov	w19, w0
   1d620:	cbz	w0, 1d62c <gl_map_put@@Base+0x34>
   1d624:	tbz	w19, #31, 1d63c <gl_map_put@@Base+0x44>
   1d628:	bl	a7e0 <xalloc_die@plt>
   1d62c:	ldr	x8, [x20, #24]
   1d630:	cbz	x8, 1d63c <gl_map_put@@Base+0x44>
   1d634:	ldr	x0, [sp, #8]
   1d638:	blr	x8
   1d63c:	cmp	w19, #0x0
   1d640:	ldp	x20, x19, [sp, #32]
   1d644:	ldp	x29, x30, [sp, #16]
   1d648:	cset	w0, ne  // ne = any
   1d64c:	add	sp, sp, #0x30
   1d650:	ret

000000000001d654 <gl_map_getput@@Base>:
   1d654:	stp	x29, x30, [sp, #-16]!
   1d658:	ldr	x8, [x0]
   1d65c:	mov	x29, sp
   1d660:	ldr	x8, [x8, #24]
   1d664:	blr	x8
   1d668:	tbnz	w0, #31, 1d67c <gl_map_getput@@Base+0x28>
   1d66c:	cmp	w0, #0x0
   1d670:	cset	w0, ne  // ne = any
   1d674:	ldp	x29, x30, [sp], #16
   1d678:	ret
   1d67c:	bl	a7e0 <xalloc_die@plt>

000000000001d680 <gl_set_create_empty@@Base>:
   1d680:	stp	x29, x30, [sp, #-16]!
   1d684:	ldr	x8, [x0]
   1d688:	mov	x29, sp
   1d68c:	blr	x8
   1d690:	cbz	x0, 1d69c <gl_set_create_empty@@Base+0x1c>
   1d694:	ldp	x29, x30, [sp], #16
   1d698:	ret
   1d69c:	bl	a7e0 <xalloc_die@plt>

000000000001d6a0 <gl_set_add@@Base>:
   1d6a0:	stp	x29, x30, [sp, #-16]!
   1d6a4:	ldr	x8, [x0]
   1d6a8:	mov	x29, sp
   1d6ac:	ldr	x8, [x8, #24]
   1d6b0:	blr	x8
   1d6b4:	tbnz	w0, #31, 1d6c8 <gl_set_add@@Base+0x28>
   1d6b8:	cmp	w0, #0x0
   1d6bc:	cset	w0, ne  // ne = any
   1d6c0:	ldp	x29, x30, [sp], #16
   1d6c4:	ret
   1d6c8:	bl	a7e0 <xalloc_die@plt>

000000000001d6cc <xsum@@Base>:
   1d6cc:	adds	x8, x0, x1
   1d6d0:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1d6d4:	ret

000000000001d6d8 <xsum3@@Base>:
   1d6d8:	adds	x8, x0, x1
   1d6dc:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   1d6e0:	adds	x8, x8, x2
   1d6e4:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1d6e8:	ret

000000000001d6ec <xsum4@@Base>:
   1d6ec:	adds	x8, x0, x1
   1d6f0:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   1d6f4:	adds	x8, x8, x2
   1d6f8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   1d6fc:	adds	x8, x8, x3
   1d700:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   1d704:	ret

000000000001d708 <xmax@@Base>:
   1d708:	cmp	x0, x1
   1d70c:	csel	x0, x1, x0, cc  // cc = lo, ul, last
   1d710:	ret

000000000001d714 <xstdopen@@Base>:
   1d714:	stp	x29, x30, [sp, #-32]!
   1d718:	stp	x20, x19, [sp, #16]
   1d71c:	mov	x29, sp
   1d720:	bl	a590 <stdopen@plt>
   1d724:	cbz	w0, 1d768 <xstdopen@@Base+0x54>
   1d728:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1d72c:	ldr	x8, [x8, #3976]
   1d730:	mov	w19, w0
   1d734:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1d738:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1d73c:	ldr	w20, [x8]
   1d740:	add	x0, x0, #0x197
   1d744:	add	x1, x1, #0xddf
   1d748:	mov	w2, #0x5                   	// #5
   1d74c:	bl	ac90 <dcgettext@plt>
   1d750:	mov	x2, x0
   1d754:	mov	w0, w20
   1d758:	mov	w1, w19
   1d75c:	ldp	x20, x19, [sp, #16]
   1d760:	ldp	x29, x30, [sp], #32
   1d764:	b	a2b0 <error@plt>
   1d768:	ldp	x20, x19, [sp, #16]
   1d76c:	ldp	x29, x30, [sp], #32
   1d770:	ret

000000000001d774 <xstrndup@@Base>:
   1d774:	stp	x29, x30, [sp, #-16]!
   1d778:	mov	x29, sp
   1d77c:	bl	aa30 <strndup@plt>
   1d780:	cbz	x0, 1d78c <xstrndup@@Base+0x18>
   1d784:	ldp	x29, x30, [sp], #16
   1d788:	ret
   1d78c:	bl	a7e0 <xalloc_die@plt>

000000000001d790 <xvasprintf@@Base>:
   1d790:	sub	sp, sp, #0x80
   1d794:	str	x23, [sp, #80]
   1d798:	mov	x8, x0
   1d79c:	mov	x23, xzr
   1d7a0:	mov	x9, x0
   1d7a4:	stp	x29, x30, [sp, #64]
   1d7a8:	stp	x22, x21, [sp, #96]
   1d7ac:	stp	x20, x19, [sp, #112]
   1d7b0:	add	x29, sp, #0x40
   1d7b4:	ldrb	w10, [x9]
   1d7b8:	cmp	w10, #0x25
   1d7bc:	b.ne	1d7dc <xvasprintf@@Base+0x4c>  // b.any
   1d7c0:	ldrb	w10, [x9, #1]
   1d7c4:	cmp	w10, #0x73
   1d7c8:	b.ne	1d850 <xvasprintf@@Base+0xc0>  // b.any
   1d7cc:	sub	x23, x23, #0x1
   1d7d0:	ldrb	w10, [x9, #2]!
   1d7d4:	cmp	w10, #0x25
   1d7d8:	b.eq	1d7c0 <xvasprintf@@Base+0x30>  // b.none
   1d7dc:	cbnz	w10, 1d850 <xvasprintf@@Base+0xc0>
   1d7e0:	ldp	q1, q0, [x1]
   1d7e4:	stp	q1, q0, [sp]
   1d7e8:	stp	q1, q0, [sp, #32]
   1d7ec:	cbz	x23, 1d8a8 <xvasprintf@@Base+0x118>
   1d7f0:	ldr	x20, [sp, #40]
   1d7f4:	ldr	w8, [sp, #56]
   1d7f8:	mov	x19, xzr
   1d7fc:	mov	x21, x23
   1d800:	b	1d824 <xvasprintf@@Base+0x94>
   1d804:	add	x8, x20, w8, sxtw
   1d808:	ldr	x0, [x8]
   1d80c:	bl	a290 <strlen@plt>
   1d810:	adds	x8, x19, x0
   1d814:	csinv	x19, x8, xzr, cc  // cc = lo, ul, last
   1d818:	adds	x21, x21, #0x1
   1d81c:	mov	w8, w22
   1d820:	b.cs	1d88c <xvasprintf@@Base+0xfc>  // b.hs, b.nlast
   1d824:	tbnz	w8, #31, 1d830 <xvasprintf@@Base+0xa0>
   1d828:	mov	w22, w8
   1d82c:	b	1d840 <xvasprintf@@Base+0xb0>
   1d830:	add	w22, w8, #0x8
   1d834:	cmn	w8, #0x8
   1d838:	str	w22, [sp, #56]
   1d83c:	b.le	1d804 <xvasprintf@@Base+0x74>
   1d840:	ldr	x8, [sp, #32]
   1d844:	add	x9, x8, #0x8
   1d848:	str	x9, [sp, #32]
   1d84c:	b	1d808 <xvasprintf@@Base+0x78>
   1d850:	ldp	q1, q0, [x1]
   1d854:	mov	x0, sp
   1d858:	add	x2, sp, #0x20
   1d85c:	mov	x1, x8
   1d860:	stp	q1, q0, [sp, #32]
   1d864:	bl	aa10 <vasprintf@plt>
   1d868:	tbnz	w0, #31, 1d874 <xvasprintf@@Base+0xe4>
   1d86c:	ldr	x19, [sp]
   1d870:	b	1d934 <xvasprintf@@Base+0x1a4>
   1d874:	bl	ad90 <__errno_location@plt>
   1d878:	ldr	w8, [x0]
   1d87c:	cmp	w8, #0xc
   1d880:	b.eq	1d950 <xvasprintf@@Base+0x1c0>  // b.none
   1d884:	mov	x19, xzr
   1d888:	b	1d934 <xvasprintf@@Base+0x1a4>
   1d88c:	lsr	x8, x19, #31
   1d890:	cbz	x8, 1d8c0 <xvasprintf@@Base+0x130>
   1d894:	bl	ad90 <__errno_location@plt>
   1d898:	mov	w8, #0x4b                  	// #75
   1d89c:	mov	x19, xzr
   1d8a0:	str	w8, [x0]
   1d8a4:	b	1d934 <xvasprintf@@Base+0x1a4>
   1d8a8:	mov	w0, #0x1                   	// #1
   1d8ac:	bl	a660 <xmalloc@plt>
   1d8b0:	mov	x19, x0
   1d8b4:	mov	x20, x0
   1d8b8:	strb	wzr, [x0]
   1d8bc:	b	1d934 <xvasprintf@@Base+0x1a4>
   1d8c0:	add	x0, x19, #0x1
   1d8c4:	bl	a660 <xmalloc@plt>
   1d8c8:	mov	x19, x0
   1d8cc:	mov	x20, x0
   1d8d0:	b	1d90c <xvasprintf@@Base+0x17c>
   1d8d4:	ldr	x8, [sp]
   1d8d8:	add	x9, x8, #0x8
   1d8dc:	str	x9, [sp]
   1d8e0:	ldr	x21, [x8]
   1d8e4:	mov	x0, x21
   1d8e8:	bl	a290 <strlen@plt>
   1d8ec:	mov	x22, x0
   1d8f0:	mov	x0, x20
   1d8f4:	mov	x1, x21
   1d8f8:	mov	x2, x22
   1d8fc:	bl	a210 <memcpy@plt>
   1d900:	adds	x23, x23, #0x1
   1d904:	add	x20, x20, x22
   1d908:	b.cs	1d930 <xvasprintf@@Base+0x1a0>  // b.hs, b.nlast
   1d90c:	ldrsw	x8, [sp, #24]
   1d910:	tbz	w8, #31, 1d8d4 <xvasprintf@@Base+0x144>
   1d914:	add	w9, w8, #0x8
   1d918:	cmn	w8, #0x8
   1d91c:	str	w9, [sp, #24]
   1d920:	b.gt	1d8d4 <xvasprintf@@Base+0x144>
   1d924:	ldr	x9, [sp, #8]
   1d928:	add	x8, x9, x8
   1d92c:	b	1d8e0 <xvasprintf@@Base+0x150>
   1d930:	strb	wzr, [x20]
   1d934:	mov	x0, x19
   1d938:	ldp	x20, x19, [sp, #112]
   1d93c:	ldp	x22, x21, [sp, #96]
   1d940:	ldr	x23, [sp, #80]
   1d944:	ldp	x29, x30, [sp, #64]
   1d948:	add	sp, sp, #0x80
   1d94c:	ret
   1d950:	bl	a7e0 <xalloc_die@plt>

000000000001d954 <xasprintf@@Base>:
   1d954:	sub	sp, sp, #0x120
   1d958:	stp	x29, x30, [sp, #256]
   1d95c:	add	x29, sp, #0x100
   1d960:	mov	x8, #0xffffffffffffffc8    	// #-56
   1d964:	mov	x9, sp
   1d968:	sub	x10, x29, #0x78
   1d96c:	movk	x8, #0xff80, lsl #32
   1d970:	add	x11, x29, #0x20
   1d974:	add	x9, x9, #0x80
   1d978:	add	x10, x10, #0x38
   1d97c:	stp	x9, x8, [x29, #-16]
   1d980:	stp	x11, x10, [x29, #-32]
   1d984:	stp	x1, x2, [x29, #-120]
   1d988:	stp	x3, x4, [x29, #-104]
   1d98c:	stp	x5, x6, [x29, #-88]
   1d990:	stur	x7, [x29, #-72]
   1d994:	stp	q0, q1, [sp]
   1d998:	ldp	q0, q1, [x29, #-32]
   1d99c:	sub	x1, x29, #0x40
   1d9a0:	str	x28, [sp, #272]
   1d9a4:	stp	q2, q3, [sp, #32]
   1d9a8:	stp	q4, q5, [sp, #64]
   1d9ac:	stp	q6, q7, [sp, #96]
   1d9b0:	stp	q0, q1, [x29, #-64]
   1d9b4:	bl	ace0 <xvasprintf@plt>
   1d9b8:	ldr	x28, [sp, #272]
   1d9bc:	ldp	x29, x30, [sp, #256]
   1d9c0:	add	sp, sp, #0x120
   1d9c4:	ret

000000000001d9c8 <asnprintf@@Base>:
   1d9c8:	sub	sp, sp, #0x100
   1d9cc:	stp	x29, x30, [sp, #240]
   1d9d0:	add	x29, sp, #0xf0
   1d9d4:	mov	x8, #0xffffffffffffffd8    	// #-40
   1d9d8:	mov	x9, sp
   1d9dc:	sub	x10, x29, #0x68
   1d9e0:	movk	x8, #0xff80, lsl #32
   1d9e4:	add	x11, x29, #0x10
   1d9e8:	add	x9, x9, #0x80
   1d9ec:	add	x10, x10, #0x28
   1d9f0:	stp	x9, x8, [x29, #-16]
   1d9f4:	stp	x11, x10, [x29, #-32]
   1d9f8:	stp	x3, x4, [x29, #-104]
   1d9fc:	stp	x5, x6, [x29, #-88]
   1da00:	stur	x7, [x29, #-72]
   1da04:	stp	q1, q2, [sp, #16]
   1da08:	str	q0, [sp]
   1da0c:	ldp	q0, q1, [x29, #-32]
   1da10:	sub	x3, x29, #0x40
   1da14:	stp	q3, q4, [sp, #48]
   1da18:	stp	q5, q6, [sp, #80]
   1da1c:	str	q7, [sp, #112]
   1da20:	stp	q0, q1, [x29, #-64]
   1da24:	bl	a9e0 <vasnprintf@plt>
   1da28:	ldp	x29, x30, [sp, #240]
   1da2c:	add	sp, sp, #0x100
   1da30:	ret

000000000001da34 <chdir_long@@Base>:
   1da34:	stp	x29, x30, [sp, #-80]!
   1da38:	stp	x26, x25, [sp, #16]
   1da3c:	stp	x24, x23, [sp, #32]
   1da40:	stp	x22, x21, [sp, #48]
   1da44:	stp	x20, x19, [sp, #64]
   1da48:	mov	x29, sp
   1da4c:	mov	x21, x0
   1da50:	bl	a950 <chdir@plt>
   1da54:	mov	w20, w0
   1da58:	cbz	w0, 1dcc0 <chdir_long@@Base+0x28c>
   1da5c:	bl	ad90 <__errno_location@plt>
   1da60:	ldr	w8, [x0]
   1da64:	cmp	w8, #0x24
   1da68:	b.ne	1dcc0 <chdir_long@@Base+0x28c>  // b.any
   1da6c:	mov	x19, x0
   1da70:	mov	x0, x21
   1da74:	bl	a290 <strlen@plt>
   1da78:	cbz	x0, 1dd0c <chdir_long@@Base+0x2d8>
   1da7c:	mov	x22, x0
   1da80:	cmp	x0, #0xfff
   1da84:	b.ls	1dd2c <chdir_long@@Base+0x2f8>  // b.plast
   1da88:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1da8c:	add	x1, x1, #0xfeb
   1da90:	mov	x0, x21
   1da94:	bl	aa40 <strspn@plt>
   1da98:	cbz	x0, 1db0c <chdir_long@@Base+0xd8>
   1da9c:	mov	x23, x0
   1daa0:	cmp	x0, #0x2
   1daa4:	b.ne	1dc14 <chdir_long@@Base+0x1e0>  // b.any
   1daa8:	add	x0, x21, #0x3
   1daac:	sub	x2, x22, #0x3
   1dab0:	mov	w1, #0x2f                  	// #47
   1dab4:	mov	w24, #0x2f                  	// #47
   1dab8:	bl	ab80 <memchr@plt>
   1dabc:	cbz	x0, 1dc60 <chdir_long@@Base+0x22c>
   1dac0:	mov	x23, x0
   1dac4:	strb	wzr, [x0]
   1dac8:	mov	w0, #0xffffff9c            	// #-100
   1dacc:	mov	w2, #0x4900                	// #18688
   1dad0:	mov	x1, x21
   1dad4:	bl	ad70 <openat@plt>
   1dad8:	strb	w24, [x23]
   1dadc:	tbnz	w0, #31, 1dc94 <chdir_long@@Base+0x260>
   1dae0:	add	x23, x23, #0x1
   1dae4:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dae8:	mov	w20, w0
   1daec:	add	x1, x1, #0xfeb
   1daf0:	mov	x0, x23
   1daf4:	bl	aa40 <strspn@plt>
   1daf8:	add	x23, x23, x0
   1dafc:	ldrb	w8, [x23]
   1db00:	cmp	w8, #0x2f
   1db04:	b.ne	1db20 <chdir_long@@Base+0xec>  // b.any
   1db08:	b	1dc40 <chdir_long@@Base+0x20c>
   1db0c:	mov	w20, #0xffffff9c            	// #-100
   1db10:	mov	x23, x21
   1db14:	ldrb	w8, [x23]
   1db18:	cmp	w8, #0x2f
   1db1c:	b.eq	1dc40 <chdir_long@@Base+0x20c>  // b.none
   1db20:	add	x25, x21, x22
   1db24:	cmp	x23, x25
   1db28:	b.hi	1dd4c <chdir_long@@Base+0x318>  // b.pmore
   1db2c:	sub	x8, x25, x23
   1db30:	cmp	x8, #0x1, lsl #12
   1db34:	b.lt	1dbdc <chdir_long@@Base+0x1a8>  // b.tstop
   1db38:	adrp	x21, 33000 <vasnprintf@@Base+0x2474>
   1db3c:	mov	w26, #0x2f                  	// #47
   1db40:	add	x21, x21, #0xfeb
   1db44:	b	1db6c <chdir_long@@Base+0x138>
   1db48:	strb	w26, [x24], #1
   1db4c:	mov	x0, x24
   1db50:	mov	x1, x21
   1db54:	bl	aa40 <strspn@plt>
   1db58:	add	x23, x24, x0
   1db5c:	sub	x8, x25, x23
   1db60:	cmp	x8, #0xfff
   1db64:	mov	w20, w22
   1db68:	b.le	1dbe0 <chdir_long@@Base+0x1ac>
   1db6c:	mov	w1, #0x2f                  	// #47
   1db70:	mov	w2, #0x1000                	// #4096
   1db74:	mov	x0, x23
   1db78:	bl	aa90 <memrchr@plt>
   1db7c:	cbz	x0, 1dc60 <chdir_long@@Base+0x22c>
   1db80:	sub	x8, x0, x23
   1db84:	mov	x24, x0
   1db88:	cmp	x8, #0x1, lsl #12
   1db8c:	strb	wzr, [x0]
   1db90:	b.ge	1dcec <chdir_long@@Base+0x2b8>  // b.tcont
   1db94:	mov	w2, #0x4900                	// #18688
   1db98:	mov	w0, w20
   1db9c:	mov	x1, x23
   1dba0:	bl	ad70 <openat@plt>
   1dba4:	tbnz	w0, #31, 1dc9c <chdir_long@@Base+0x268>
   1dba8:	mov	w22, w0
   1dbac:	tbnz	w20, #31, 1db48 <chdir_long@@Base+0x114>
   1dbb0:	mov	w0, w20
   1dbb4:	bl	a7a0 <close@plt>
   1dbb8:	cbz	w0, 1db48 <chdir_long@@Base+0x114>
   1dbbc:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1dbc0:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dbc4:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1dbc8:	add	x0, x0, #0xe5f
   1dbcc:	add	x1, x1, #0xe01
   1dbd0:	add	x3, x3, #0xe6c
   1dbd4:	mov	w2, #0x40                  	// #64
   1dbd8:	bl	ad80 <__assert_fail@plt>
   1dbdc:	mov	w22, w20
   1dbe0:	cmp	x23, x25
   1dbe4:	b.cs	1dc6c <chdir_long@@Base+0x238>  // b.hs, b.nlast
   1dbe8:	mov	w2, #0x4900                	// #18688
   1dbec:	mov	w0, w22
   1dbf0:	mov	x1, x23
   1dbf4:	bl	ad70 <openat@plt>
   1dbf8:	tbnz	w0, #31, 1dcdc <chdir_long@@Base+0x2a8>
   1dbfc:	mov	w20, w0
   1dc00:	tbnz	w22, #31, 1dc70 <chdir_long@@Base+0x23c>
   1dc04:	mov	w0, w22
   1dc08:	bl	a7a0 <close@plt>
   1dc0c:	cbz	w0, 1dc70 <chdir_long@@Base+0x23c>
   1dc10:	b	1dbbc <chdir_long@@Base+0x188>
   1dc14:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dc18:	add	x1, x1, #0xfeb
   1dc1c:	mov	w0, #0xffffff9c            	// #-100
   1dc20:	mov	w2, #0x4900                	// #18688
   1dc24:	bl	ad70 <openat@plt>
   1dc28:	tbnz	w0, #31, 1dc94 <chdir_long@@Base+0x260>
   1dc2c:	mov	w20, w0
   1dc30:	add	x23, x21, x23
   1dc34:	ldrb	w8, [x23]
   1dc38:	cmp	w8, #0x2f
   1dc3c:	b.ne	1db20 <chdir_long@@Base+0xec>  // b.any
   1dc40:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1dc44:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dc48:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1dc4c:	add	x0, x0, #0xe31
   1dc50:	add	x1, x1, #0xe01
   1dc54:	add	x3, x3, #0xe0e
   1dc58:	mov	w2, #0xa2                  	// #162
   1dc5c:	bl	ad80 <__assert_fail@plt>
   1dc60:	mov	w8, #0x24                  	// #36
   1dc64:	str	w8, [x19]
   1dc68:	b	1dcbc <chdir_long@@Base+0x288>
   1dc6c:	mov	w20, w22
   1dc70:	mov	w0, w20
   1dc74:	bl	a2d0 <fchdir@plt>
   1dc78:	cbnz	w0, 1dca4 <chdir_long@@Base+0x270>
   1dc7c:	tbnz	w20, #31, 1dc8c <chdir_long@@Base+0x258>
   1dc80:	mov	w0, w20
   1dc84:	bl	a7a0 <close@plt>
   1dc88:	cbnz	w0, 1dbbc <chdir_long@@Base+0x188>
   1dc8c:	mov	w20, wzr
   1dc90:	b	1dcc0 <chdir_long@@Base+0x28c>
   1dc94:	ldr	w21, [x19]
   1dc98:	b	1dcb8 <chdir_long@@Base+0x284>
   1dc9c:	mov	w8, #0x2f                  	// #47
   1dca0:	strb	w8, [x24]
   1dca4:	ldr	w21, [x19]
   1dca8:	tbnz	w20, #31, 1dcb8 <chdir_long@@Base+0x284>
   1dcac:	mov	w0, w20
   1dcb0:	bl	a7a0 <close@plt>
   1dcb4:	cbnz	w0, 1dbbc <chdir_long@@Base+0x188>
   1dcb8:	str	w21, [x19]
   1dcbc:	mov	w20, #0xffffffff            	// #-1
   1dcc0:	mov	w0, w20
   1dcc4:	ldp	x20, x19, [sp, #64]
   1dcc8:	ldp	x22, x21, [sp, #48]
   1dccc:	ldp	x24, x23, [sp, #32]
   1dcd0:	ldp	x26, x25, [sp, #16]
   1dcd4:	ldp	x29, x30, [sp], #80
   1dcd8:	ret
   1dcdc:	mov	w20, w22
   1dce0:	ldr	w21, [x19]
   1dce4:	tbz	w20, #31, 1dcac <chdir_long@@Base+0x278>
   1dce8:	b	1dcb8 <chdir_long@@Base+0x284>
   1dcec:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1dcf0:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dcf4:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1dcf8:	add	x0, x0, #0xe4c
   1dcfc:	add	x1, x1, #0xe01
   1dd00:	add	x3, x3, #0xe0e
   1dd04:	mov	w2, #0xb3                  	// #179
   1dd08:	bl	ad80 <__assert_fail@plt>
   1dd0c:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1dd10:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dd14:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1dd18:	add	x0, x0, #0xdf9
   1dd1c:	add	x1, x1, #0xe01
   1dd20:	add	x3, x3, #0xe0e
   1dd24:	mov	w2, #0x7e                  	// #126
   1dd28:	bl	ad80 <__assert_fail@plt>
   1dd2c:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1dd30:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dd34:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1dd38:	add	x0, x0, #0xe25
   1dd3c:	add	x1, x1, #0xe01
   1dd40:	add	x3, x3, #0xe0e
   1dd44:	mov	w2, #0x7f                  	// #127
   1dd48:	bl	ad80 <__assert_fail@plt>
   1dd4c:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1dd50:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1dd54:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   1dd58:	add	x0, x0, #0xe3d
   1dd5c:	add	x1, x1, #0xe01
   1dd60:	add	x3, x3, #0xe0e
   1dd64:	mov	w2, #0xa3                  	// #163
   1dd68:	bl	ad80 <__assert_fail@plt>

000000000001dd6c <rpl_fcntl@@Base>:
   1dd6c:	sub	sp, sp, #0x100
   1dd70:	stp	x29, x30, [sp, #208]
   1dd74:	add	x29, sp, #0xd0
   1dd78:	mov	x8, #0xffffffffffffffd0    	// #-48
   1dd7c:	mov	x9, sp
   1dd80:	sub	x10, x29, #0x50
   1dd84:	stp	x20, x19, [sp, #240]
   1dd88:	mov	w19, w0
   1dd8c:	movk	x8, #0xff80, lsl #32
   1dd90:	add	x11, x29, #0x30
   1dd94:	cmp	w1, #0xb
   1dd98:	add	x9, x9, #0x80
   1dd9c:	add	x10, x10, #0x30
   1dda0:	stp	x22, x21, [sp, #224]
   1dda4:	stp	x2, x3, [x29, #-80]
   1dda8:	stp	x4, x5, [x29, #-64]
   1ddac:	stp	x6, x7, [x29, #-48]
   1ddb0:	stp	q1, q2, [sp, #16]
   1ddb4:	stp	q3, q4, [sp, #48]
   1ddb8:	str	q0, [sp]
   1ddbc:	stp	q5, q6, [sp, #80]
   1ddc0:	str	q7, [sp, #112]
   1ddc4:	stp	x9, x8, [x29, #-16]
   1ddc8:	stp	x11, x10, [x29, #-32]
   1ddcc:	b.hi	1de18 <rpl_fcntl@@Base+0xac>  // b.pmore
   1ddd0:	mov	w8, #0x1                   	// #1
   1ddd4:	lsl	w8, w8, w1
   1ddd8:	mov	w9, #0x514                 	// #1300
   1dddc:	tst	w8, w9
   1dde0:	b.ne	1de50 <rpl_fcntl@@Base+0xe4>  // b.any
   1dde4:	mov	w9, #0xa0a                 	// #2570
   1dde8:	tst	w8, w9
   1ddec:	b.ne	1de44 <rpl_fcntl@@Base+0xd8>  // b.any
   1ddf0:	cbnz	w1, 1de18 <rpl_fcntl@@Base+0xac>
   1ddf4:	ldursw	x8, [x29, #-8]
   1ddf8:	tbz	w8, #31, 1def8 <rpl_fcntl@@Base+0x18c>
   1ddfc:	add	w9, w8, #0x8
   1de00:	cmn	w8, #0x8
   1de04:	stur	w9, [x29, #-8]
   1de08:	b.gt	1def8 <rpl_fcntl@@Base+0x18c>
   1de0c:	ldur	x9, [x29, #-24]
   1de10:	add	x8, x9, x8
   1de14:	b	1df04 <rpl_fcntl@@Base+0x198>
   1de18:	sub	w8, w1, #0x400
   1de1c:	cmp	w8, #0xa
   1de20:	b.hi	1ded4 <rpl_fcntl@@Base+0x168>  // b.pmore
   1de24:	mov	w9, #0x1                   	// #1
   1de28:	lsl	w9, w9, w8
   1de2c:	mov	w10, #0x285                 	// #645
   1de30:	tst	w9, w10
   1de34:	b.ne	1de50 <rpl_fcntl@@Base+0xe4>  // b.any
   1de38:	mov	w10, #0x502                 	// #1282
   1de3c:	tst	w9, w10
   1de40:	b.eq	1dea8 <rpl_fcntl@@Base+0x13c>  // b.none
   1de44:	mov	w0, w19
   1de48:	bl	aaf0 <fcntl@plt>
   1de4c:	b	1de8c <rpl_fcntl@@Base+0x120>
   1de50:	ldursw	x8, [x29, #-8]
   1de54:	tbz	w8, #31, 1de74 <rpl_fcntl@@Base+0x108>
   1de58:	add	w9, w8, #0x8
   1de5c:	cmn	w8, #0x8
   1de60:	stur	w9, [x29, #-8]
   1de64:	b.gt	1de74 <rpl_fcntl@@Base+0x108>
   1de68:	ldur	x9, [x29, #-24]
   1de6c:	add	x8, x9, x8
   1de70:	b	1de80 <rpl_fcntl@@Base+0x114>
   1de74:	ldur	x8, [x29, #-32]
   1de78:	add	x9, x8, #0x8
   1de7c:	stur	x9, [x29, #-32]
   1de80:	ldr	w2, [x8]
   1de84:	mov	w0, w19
   1de88:	bl	aaf0 <fcntl@plt>
   1de8c:	mov	w20, w0
   1de90:	mov	w0, w20
   1de94:	ldp	x20, x19, [sp, #240]
   1de98:	ldp	x22, x21, [sp, #224]
   1de9c:	ldp	x29, x30, [sp, #208]
   1dea0:	add	sp, sp, #0x100
   1dea4:	ret
   1dea8:	cmp	w8, #0x6
   1deac:	b.ne	1ded4 <rpl_fcntl@@Base+0x168>  // b.any
   1deb0:	ldursw	x8, [x29, #-8]
   1deb4:	tbz	w8, #31, 1df14 <rpl_fcntl@@Base+0x1a8>
   1deb8:	add	w9, w8, #0x8
   1debc:	cmn	w8, #0x8
   1dec0:	stur	w9, [x29, #-8]
   1dec4:	b.gt	1df14 <rpl_fcntl@@Base+0x1a8>
   1dec8:	ldur	x9, [x29, #-24]
   1decc:	add	x8, x9, x8
   1ded0:	b	1df20 <rpl_fcntl@@Base+0x1b4>
   1ded4:	ldursw	x8, [x29, #-8]
   1ded8:	tbz	w8, #31, 1df80 <rpl_fcntl@@Base+0x214>
   1dedc:	add	w9, w8, #0x8
   1dee0:	cmn	w8, #0x8
   1dee4:	stur	w9, [x29, #-8]
   1dee8:	b.gt	1df80 <rpl_fcntl@@Base+0x214>
   1deec:	ldur	x9, [x29, #-24]
   1def0:	add	x8, x9, x8
   1def4:	b	1df8c <rpl_fcntl@@Base+0x220>
   1def8:	ldur	x8, [x29, #-32]
   1defc:	add	x9, x8, #0x8
   1df00:	stur	x9, [x29, #-32]
   1df04:	ldr	w2, [x8]
   1df08:	mov	w0, w19
   1df0c:	mov	w1, wzr
   1df10:	b	1de88 <rpl_fcntl@@Base+0x11c>
   1df14:	ldur	x8, [x29, #-32]
   1df18:	add	x9, x8, #0x8
   1df1c:	stur	x9, [x29, #-32]
   1df20:	adrp	x22, 46000 <base_len@@Base+0x30a14>
   1df24:	ldr	w9, [x22, #2320]
   1df28:	ldr	w21, [x8]
   1df2c:	tbnz	w9, #31, 1dfa8 <rpl_fcntl@@Base+0x23c>
   1df30:	mov	w1, #0x406                 	// #1030
   1df34:	mov	w0, w19
   1df38:	mov	w2, w21
   1df3c:	bl	aaf0 <fcntl@plt>
   1df40:	mov	w20, w0
   1df44:	tbz	w0, #31, 1df9c <rpl_fcntl@@Base+0x230>
   1df48:	bl	ad90 <__errno_location@plt>
   1df4c:	ldr	w8, [x0]
   1df50:	cmp	w8, #0x16
   1df54:	b.ne	1df9c <rpl_fcntl@@Base+0x230>  // b.any
   1df58:	mov	w0, w19
   1df5c:	mov	w1, wzr
   1df60:	mov	w2, w21
   1df64:	bl	aaf0 <fcntl@plt>
   1df68:	mov	w20, w0
   1df6c:	tbnz	w0, #31, 1de90 <rpl_fcntl@@Base+0x124>
   1df70:	mov	w8, #0xffffffff            	// #-1
   1df74:	str	w8, [x22, #2320]
   1df78:	mov	w8, #0x1                   	// #1
   1df7c:	b	1dfc8 <rpl_fcntl@@Base+0x25c>
   1df80:	ldur	x8, [x29, #-32]
   1df84:	add	x9, x8, #0x8
   1df88:	stur	x9, [x29, #-32]
   1df8c:	ldr	x2, [x8]
   1df90:	mov	w0, w19
   1df94:	bl	aaf0 <fcntl@plt>
   1df98:	b	1de8c <rpl_fcntl@@Base+0x120>
   1df9c:	mov	w8, #0x1                   	// #1
   1dfa0:	str	w8, [x22, #2320]
   1dfa4:	b	1de90 <rpl_fcntl@@Base+0x124>
   1dfa8:	mov	w0, w19
   1dfac:	mov	w1, wzr
   1dfb0:	mov	w2, w21
   1dfb4:	bl	aaf0 <fcntl@plt>
   1dfb8:	ldr	w8, [x22, #2320]
   1dfbc:	mov	w20, w0
   1dfc0:	cmn	w8, #0x1
   1dfc4:	cset	w8, eq  // eq = none
   1dfc8:	cbz	w8, 1de90 <rpl_fcntl@@Base+0x124>
   1dfcc:	tbnz	w20, #31, 1de90 <rpl_fcntl@@Base+0x124>
   1dfd0:	mov	w1, #0x1                   	// #1
   1dfd4:	mov	w0, w20
   1dfd8:	bl	aaf0 <fcntl@plt>
   1dfdc:	tbnz	w0, #31, 1dff8 <rpl_fcntl@@Base+0x28c>
   1dfe0:	orr	w2, w0, #0x1
   1dfe4:	mov	w1, #0x2                   	// #2
   1dfe8:	mov	w0, w20
   1dfec:	bl	aaf0 <fcntl@plt>
   1dff0:	cmn	w0, #0x1
   1dff4:	b.ne	1de90 <rpl_fcntl@@Base+0x124>  // b.any
   1dff8:	bl	ad90 <__errno_location@plt>
   1dffc:	ldr	w21, [x0]
   1e000:	mov	x19, x0
   1e004:	mov	w0, w20
   1e008:	bl	a7a0 <close@plt>
   1e00c:	str	w21, [x19]
   1e010:	mov	w20, #0xffffffff            	// #-1
   1e014:	b	1de90 <rpl_fcntl@@Base+0x124>

000000000001e018 <_getopt_internal_r@@Base>:
   1e018:	sub	sp, sp, #0x80
   1e01c:	cmp	w0, #0x1
   1e020:	stp	x29, x30, [sp, #32]
   1e024:	stp	x28, x27, [sp, #48]
   1e028:	stp	x26, x25, [sp, #64]
   1e02c:	stp	x24, x23, [sp, #80]
   1e030:	stp	x22, x21, [sp, #96]
   1e034:	stp	x20, x19, [sp, #112]
   1e038:	add	x29, sp, #0x20
   1e03c:	b.lt	1e704 <_getopt_internal_r@@Base+0x6ec>  // b.tstop
   1e040:	ldp	w25, w23, [x6]
   1e044:	mov	x19, x6
   1e048:	mov	w26, w5
   1e04c:	mov	x27, x4
   1e050:	mov	x28, x3
   1e054:	mov	x22, x2
   1e058:	mov	w21, w0
   1e05c:	mov	x20, x1
   1e060:	str	xzr, [x6, #16]
   1e064:	cbz	w25, 1e08c <_getopt_internal_r@@Base+0x74>
   1e068:	ldr	w8, [x19, #24]
   1e06c:	cbz	w8, 1e094 <_getopt_internal_r@@Base+0x7c>
   1e070:	ldrb	w8, [x22]
   1e074:	cmp	w8, #0x2d
   1e078:	b.eq	1e084 <_getopt_internal_r@@Base+0x6c>  // b.none
   1e07c:	cmp	w8, #0x2b
   1e080:	b.ne	1e0ec <_getopt_internal_r@@Base+0xd4>  // b.any
   1e084:	add	x22, x22, #0x1
   1e088:	b	1e0ec <_getopt_internal_r@@Base+0xd4>
   1e08c:	mov	w25, #0x1                   	// #1
   1e090:	str	w25, [x19]
   1e094:	stp	w25, w25, [x19, #44]
   1e098:	str	xzr, [x19, #32]
   1e09c:	ldrb	w8, [x22]
   1e0a0:	cmp	w8, #0x2b
   1e0a4:	b.eq	1e0c0 <_getopt_internal_r@@Base+0xa8>  // b.none
   1e0a8:	cmp	w8, #0x2d
   1e0ac:	b.ne	1e0cc <_getopt_internal_r@@Base+0xb4>  // b.any
   1e0b0:	mov	w8, #0x2                   	// #2
   1e0b4:	str	w8, [x19, #40]
   1e0b8:	add	x22, x22, #0x1
   1e0bc:	b	1e0e4 <_getopt_internal_r@@Base+0xcc>
   1e0c0:	str	wzr, [x19, #40]
   1e0c4:	add	x22, x22, #0x1
   1e0c8:	b	1e0e4 <_getopt_internal_r@@Base+0xcc>
   1e0cc:	cbnz	w7, 1e0e0 <_getopt_internal_r@@Base+0xc8>
   1e0d0:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1e0d4:	add	x0, x0, #0xeda
   1e0d8:	bl	adb0 <getenv@plt>
   1e0dc:	cbz	x0, 1e744 <_getopt_internal_r@@Base+0x72c>
   1e0e0:	str	wzr, [x19, #40]
   1e0e4:	mov	w8, #0x1                   	// #1
   1e0e8:	str	w8, [x19, #24]
   1e0ec:	ldrb	w8, [x22]
   1e0f0:	ldr	x24, [x19, #32]
   1e0f4:	cmp	w8, #0x3a
   1e0f8:	csel	w2, wzr, w23, eq  // eq = none
   1e0fc:	cbz	x24, 1e190 <_getopt_internal_r@@Base+0x178>
   1e100:	ldrb	w8, [x24]
   1e104:	cbz	w8, 1e190 <_getopt_internal_r@@Base+0x178>
   1e108:	stur	w2, [x29, #-4]
   1e10c:	add	x23, x24, #0x1
   1e110:	str	x23, [x19, #32]
   1e114:	ldrb	w26, [x24]
   1e118:	mov	x0, x22
   1e11c:	mov	w1, w26
   1e120:	bl	aa60 <strchr@plt>
   1e124:	ldrb	w8, [x24, #1]
   1e128:	cbnz	w8, 1e134 <_getopt_internal_r@@Base+0x11c>
   1e12c:	add	w25, w25, #0x1
   1e130:	str	w25, [x19]
   1e134:	orr	w8, w26, #0x1
   1e138:	cmp	w8, #0x3b
   1e13c:	b.eq	1e3a8 <_getopt_internal_r@@Base+0x390>  // b.none
   1e140:	cbz	x0, 1e3a8 <_getopt_internal_r@@Base+0x390>
   1e144:	ldrb	w9, [x0]
   1e148:	ldrb	w8, [x0, #1]
   1e14c:	cmp	w9, #0x57
   1e150:	b.ne	1e3bc <_getopt_internal_r@@Base+0x3a4>  // b.any
   1e154:	cbz	x28, 1e3bc <_getopt_internal_r@@Base+0x3a4>
   1e158:	cmp	w8, #0x3b
   1e15c:	b.ne	1e3bc <_getopt_internal_r@@Base+0x3a4>  // b.any
   1e160:	ldrb	w8, [x23]
   1e164:	cbnz	w8, 1e7b8 <_getopt_internal_r@@Base+0x7a0>
   1e168:	cmp	w25, w21
   1e16c:	b.ne	1e7b4 <_getopt_internal_r@@Base+0x79c>  // b.any
   1e170:	ldur	w8, [x29, #-4]
   1e174:	cbnz	w8, 1e890 <_getopt_internal_r@@Base+0x878>
   1e178:	str	w26, [x19, #8]
   1e17c:	ldrb	w8, [x22]
   1e180:	mov	w9, #0x3f                  	// #63
   1e184:	cmp	w8, #0x3a
   1e188:	csel	w26, w8, w9, eq  // eq = none
   1e18c:	b	1e708 <_getopt_internal_r@@Base+0x6f0>
   1e190:	ldr	w23, [x19, #48]
   1e194:	str	x28, [sp, #16]
   1e198:	cmp	w23, w25
   1e19c:	b.le	1e37c <_getopt_internal_r@@Base+0x364>
   1e1a0:	mov	w23, w25
   1e1a4:	str	w25, [x19, #48]
   1e1a8:	ldr	w28, [x19, #44]
   1e1ac:	cmp	w28, w25
   1e1b0:	b.gt	1e388 <_getopt_internal_r@@Base+0x370>
   1e1b4:	ldr	w24, [x19, #40]
   1e1b8:	cmp	w24, #0x1
   1e1bc:	b.ne	1e39c <_getopt_internal_r@@Base+0x384>  // b.any
   1e1c0:	cmp	w28, w23
   1e1c4:	b.eq	1e3e0 <_getopt_internal_r@@Base+0x3c8>  // b.none
   1e1c8:	cmp	w23, w25
   1e1cc:	b.eq	1e3e0 <_getopt_internal_r@@Base+0x3c8>  // b.none
   1e1d0:	cmp	w25, w23
   1e1d4:	b.le	1e3fc <_getopt_internal_r@@Base+0x3e4>
   1e1d8:	cmp	w28, w23
   1e1dc:	b.ge	1e3fc <_getopt_internal_r@@Base+0x3e4>  // b.tcont
   1e1e0:	add	x9, x20, w23, sxtw #3
   1e1e4:	sxtw	x8, w23
   1e1e8:	add	x10, x20, #0x10
   1e1ec:	add	x11, x9, #0x10
   1e1f0:	mov	w12, w28
   1e1f4:	mov	w13, w25
   1e1f8:	sub	w14, w13, w23
   1e1fc:	sub	w15, w23, w12
   1e200:	cmp	w14, w15
   1e204:	b.le	1e284 <_getopt_internal_r@@Base+0x26c>
   1e208:	cmp	w15, #0x1
   1e20c:	sub	w13, w13, w15
   1e210:	b.lt	1e2f0 <_getopt_internal_r@@Base+0x2d8>  // b.tstop
   1e214:	sxtw	x14, w12
   1e218:	sxtw	x16, w13
   1e21c:	cmp	w15, #0x4
   1e220:	mov	w15, w15
   1e224:	b.cc	1e250 <_getopt_internal_r@@Base+0x238>  // b.lo, b.ul, b.last
   1e228:	add	x18, x16, x15
   1e22c:	add	x17, x20, x14, lsl #3
   1e230:	add	x18, x20, x18, lsl #3
   1e234:	cmp	x17, x18
   1e238:	b.cs	1e304 <_getopt_internal_r@@Base+0x2ec>  // b.hs, b.nlast
   1e23c:	add	x17, x14, x15
   1e240:	add	x17, x20, x17, lsl #3
   1e244:	add	x18, x20, x16, lsl #3
   1e248:	cmp	x18, x17
   1e24c:	b.cs	1e304 <_getopt_internal_r@@Base+0x2ec>  // b.hs, b.nlast
   1e250:	mov	x17, xzr
   1e254:	add	x16, x17, x16
   1e258:	add	x18, x17, x14
   1e25c:	add	x14, x20, x16, lsl #3
   1e260:	add	x16, x20, x18, lsl #3
   1e264:	sub	x15, x15, x17
   1e268:	ldr	x17, [x14]
   1e26c:	ldr	x18, [x16]
   1e270:	subs	x15, x15, #0x1
   1e274:	str	x17, [x16], #8
   1e278:	str	x18, [x14], #8
   1e27c:	b.ne	1e268 <_getopt_internal_r@@Base+0x250>  // b.any
   1e280:	b	1e2f0 <_getopt_internal_r@@Base+0x2d8>
   1e284:	cmp	w14, #0x1
   1e288:	b.lt	1e2ec <_getopt_internal_r@@Base+0x2d4>  // b.tstop
   1e28c:	sxtw	x15, w12
   1e290:	cmp	w14, #0x3
   1e294:	mov	w16, w14
   1e298:	b.ls	1e2bc <_getopt_internal_r@@Base+0x2a4>  // b.plast
   1e29c:	add	x17, x20, x15, lsl #3
   1e2a0:	add	x18, x9, x16, lsl #3
   1e2a4:	cmp	x17, x18
   1e2a8:	b.cs	1e340 <_getopt_internal_r@@Base+0x328>  // b.hs, b.nlast
   1e2ac:	add	x17, x15, x16
   1e2b0:	add	x17, x20, x17, lsl #3
   1e2b4:	cmp	x9, x17
   1e2b8:	b.cs	1e340 <_getopt_internal_r@@Base+0x328>  // b.hs, b.nlast
   1e2bc:	mov	x17, xzr
   1e2c0:	add	x18, x8, x17
   1e2c4:	add	x0, x17, x15
   1e2c8:	add	x15, x20, x18, lsl #3
   1e2cc:	add	x18, x20, x0, lsl #3
   1e2d0:	sub	x16, x16, x17
   1e2d4:	ldr	x17, [x15]
   1e2d8:	ldr	x0, [x18]
   1e2dc:	subs	x16, x16, #0x1
   1e2e0:	str	x17, [x18], #8
   1e2e4:	str	x0, [x15], #8
   1e2e8:	b.ne	1e2d4 <_getopt_internal_r@@Base+0x2bc>  // b.any
   1e2ec:	add	w12, w14, w12
   1e2f0:	cmp	w13, w23
   1e2f4:	b.le	1e3fc <_getopt_internal_r@@Base+0x3e4>
   1e2f8:	cmp	w23, w12
   1e2fc:	b.gt	1e1f8 <_getopt_internal_r@@Base+0x1e0>
   1e300:	b	1e3fc <_getopt_internal_r@@Base+0x3e4>
   1e304:	and	x17, x15, #0xfffffffc
   1e308:	add	x18, x10, x14, lsl #3
   1e30c:	add	x0, x10, x16, lsl #3
   1e310:	mov	x1, x17
   1e314:	ldp	q0, q3, [x18, #-16]
   1e318:	ldp	q1, q2, [x0, #-16]
   1e31c:	subs	x1, x1, #0x4
   1e320:	stp	q1, q2, [x18, #-16]
   1e324:	stp	q0, q3, [x0, #-16]
   1e328:	add	x18, x18, #0x20
   1e32c:	add	x0, x0, #0x20
   1e330:	b.ne	1e314 <_getopt_internal_r@@Base+0x2fc>  // b.any
   1e334:	cmp	x17, x15
   1e338:	b.eq	1e2f0 <_getopt_internal_r@@Base+0x2d8>  // b.none
   1e33c:	b	1e254 <_getopt_internal_r@@Base+0x23c>
   1e340:	and	x17, x16, #0xfffffffc
   1e344:	add	x18, x10, x15, lsl #3
   1e348:	mov	x0, x17
   1e34c:	mov	x1, x11
   1e350:	ldp	q0, q3, [x18, #-16]
   1e354:	ldp	q1, q2, [x1, #-16]
   1e358:	subs	x0, x0, #0x4
   1e35c:	stp	q1, q2, [x18, #-16]
   1e360:	stp	q0, q3, [x1, #-16]
   1e364:	add	x18, x18, #0x20
   1e368:	add	x1, x1, #0x20
   1e36c:	b.ne	1e350 <_getopt_internal_r@@Base+0x338>  // b.any
   1e370:	cmp	x17, x16
   1e374:	b.ne	1e2c0 <_getopt_internal_r@@Base+0x2a8>  // b.any
   1e378:	b	1e2ec <_getopt_internal_r@@Base+0x2d4>
   1e37c:	ldr	w28, [x19, #44]
   1e380:	cmp	w28, w25
   1e384:	b.le	1e1b4 <_getopt_internal_r@@Base+0x19c>
   1e388:	mov	w28, w25
   1e38c:	str	w25, [x19, #44]
   1e390:	ldr	w24, [x19, #40]
   1e394:	cmp	w24, #0x1
   1e398:	b.eq	1e1c0 <_getopt_internal_r@@Base+0x1a8>  // b.none
   1e39c:	cmp	w25, w21
   1e3a0:	b.ne	1e46c <_getopt_internal_r@@Base+0x454>  // b.any
   1e3a4:	b	1e6f8 <_getopt_internal_r@@Base+0x6e0>
   1e3a8:	ldur	w8, [x29, #-4]
   1e3ac:	cbnz	w8, 1e778 <_getopt_internal_r@@Base+0x760>
   1e3b0:	str	w26, [x19, #8]
   1e3b4:	mov	w26, #0x3f                  	// #63
   1e3b8:	b	1e708 <_getopt_internal_r@@Base+0x6f0>
   1e3bc:	cmp	w8, #0x3a
   1e3c0:	b.ne	1e708 <_getopt_internal_r@@Base+0x6f0>  // b.any
   1e3c4:	ldrb	w9, [x0, #2]
   1e3c8:	ldrb	w8, [x23]
   1e3cc:	cmp	w9, #0x3a
   1e3d0:	b.ne	1e72c <_getopt_internal_r@@Base+0x714>  // b.any
   1e3d4:	cbnz	w8, 1e730 <_getopt_internal_r@@Base+0x718>
   1e3d8:	str	xzr, [x19, #16]
   1e3dc:	b	1e73c <_getopt_internal_r@@Base+0x724>
   1e3e0:	cmp	w23, w25
   1e3e4:	b.eq	1e3f0 <_getopt_internal_r@@Base+0x3d8>  // b.none
   1e3e8:	mov	w28, w25
   1e3ec:	str	w25, [x19, #44]
   1e3f0:	cmp	w25, w21
   1e3f4:	b.ge	1e444 <_getopt_internal_r@@Base+0x42c>  // b.tcont
   1e3f8:	b	1e410 <_getopt_internal_r@@Base+0x3f8>
   1e3fc:	add	w8, w28, w25
   1e400:	sub	w28, w8, w23
   1e404:	stp	w28, w25, [x19, #44]
   1e408:	cmp	w25, w21
   1e40c:	b.ge	1e444 <_getopt_internal_r@@Base+0x42c>  // b.tcont
   1e410:	add	x8, x20, w25, sxtw #3
   1e414:	b	1e42c <_getopt_internal_r@@Base+0x414>
   1e418:	add	w25, w25, #0x1
   1e41c:	cmp	w21, w25
   1e420:	add	x8, x8, #0x8
   1e424:	str	w25, [x19]
   1e428:	b.eq	1e458 <_getopt_internal_r@@Base+0x440>  // b.none
   1e42c:	ldr	x9, [x8]
   1e430:	ldrb	w10, [x9]
   1e434:	cmp	w10, #0x2d
   1e438:	b.ne	1e418 <_getopt_internal_r@@Base+0x400>  // b.any
   1e43c:	ldrb	w9, [x9, #1]
   1e440:	cbz	w9, 1e418 <_getopt_internal_r@@Base+0x400>
   1e444:	mov	w23, w25
   1e448:	str	w25, [x19, #48]
   1e44c:	cmp	w25, w21
   1e450:	b.ne	1e46c <_getopt_internal_r@@Base+0x454>  // b.any
   1e454:	b	1e6f8 <_getopt_internal_r@@Base+0x6e0>
   1e458:	mov	w25, w21
   1e45c:	mov	w23, w25
   1e460:	str	w25, [x19, #48]
   1e464:	cmp	w25, w21
   1e468:	b.eq	1e6f8 <_getopt_internal_r@@Base+0x6e0>  // b.none
   1e46c:	ldr	x0, [x20, w25, sxtw #3]
   1e470:	str	w26, [sp, #12]
   1e474:	mov	x26, x27
   1e478:	adrp	x27, 32000 <vasnprintf@@Base+0x1474>
   1e47c:	add	x27, x27, #0x5e1
   1e480:	mov	x1, x27
   1e484:	stur	w2, [x29, #-4]
   1e488:	bl	a8f0 <strcmp@plt>
   1e48c:	cbz	w0, 1e4f0 <_getopt_internal_r@@Base+0x4d8>
   1e490:	cmp	w25, w21
   1e494:	b.eq	1e6f8 <_getopt_internal_r@@Base+0x6e0>  // b.none
   1e498:	sxtw	x8, w25
   1e49c:	ldr	x23, [x20, x8, lsl #3]
   1e4a0:	ldrb	w8, [x23]
   1e4a4:	cmp	w8, #0x2d
   1e4a8:	b.ne	1e6b4 <_getopt_internal_r@@Base+0x69c>  // b.any
   1e4ac:	mov	x28, x23
   1e4b0:	ldrb	w1, [x28, #1]!
   1e4b4:	cbz	w1, 1e6b4 <_getopt_internal_r@@Base+0x69c>
   1e4b8:	ldr	x8, [sp, #16]
   1e4bc:	cbz	x8, 1e858 <_getopt_internal_r@@Base+0x840>
   1e4c0:	cmp	w1, #0x2d
   1e4c4:	b.ne	1e7f8 <_getopt_internal_r@@Base+0x7e0>  // b.any
   1e4c8:	ldr	x3, [sp, #16]
   1e4cc:	ldr	w5, [sp, #12]
   1e4d0:	add	x8, x23, #0x2
   1e4d4:	mov	w0, w21
   1e4d8:	mov	x1, x20
   1e4dc:	mov	x2, x22
   1e4e0:	mov	x4, x26
   1e4e4:	str	x8, [x19, #32]
   1e4e8:	str	x27, [sp]
   1e4ec:	b	1e7e8 <_getopt_internal_r@@Base+0x7d0>
   1e4f0:	add	w8, w25, #0x1
   1e4f4:	cmp	w28, w23
   1e4f8:	str	w8, [x19]
   1e4fc:	b.eq	1e6cc <_getopt_internal_r@@Base+0x6b4>  // b.none
   1e500:	cmp	w23, w8
   1e504:	b.eq	1e6cc <_getopt_internal_r@@Base+0x6b4>  // b.none
   1e508:	cmp	w25, w23
   1e50c:	b.lt	1e6e0 <_getopt_internal_r@@Base+0x6c8>  // b.tstop
   1e510:	cmp	w28, w23
   1e514:	b.ge	1e6e0 <_getopt_internal_r@@Base+0x6c8>  // b.tcont
   1e518:	add	x10, x20, w23, sxtw #3
   1e51c:	sxtw	x9, w23
   1e520:	add	x11, x20, #0x10
   1e524:	add	x12, x10, #0x10
   1e528:	mov	w13, w28
   1e52c:	mov	w14, w8
   1e530:	sub	w15, w14, w23
   1e534:	sub	w16, w23, w13
   1e538:	cmp	w15, w16
   1e53c:	b.le	1e5bc <_getopt_internal_r@@Base+0x5a4>
   1e540:	cmp	w16, #0x1
   1e544:	sub	w14, w14, w16
   1e548:	b.lt	1e628 <_getopt_internal_r@@Base+0x610>  // b.tstop
   1e54c:	sxtw	x15, w13
   1e550:	sxtw	x17, w14
   1e554:	cmp	w16, #0x4
   1e558:	mov	w16, w16
   1e55c:	b.cc	1e588 <_getopt_internal_r@@Base+0x570>  // b.lo, b.ul, b.last
   1e560:	add	x0, x17, x16
   1e564:	add	x18, x20, x15, lsl #3
   1e568:	add	x0, x20, x0, lsl #3
   1e56c:	cmp	x18, x0
   1e570:	b.cs	1e63c <_getopt_internal_r@@Base+0x624>  // b.hs, b.nlast
   1e574:	add	x18, x15, x16
   1e578:	add	x18, x20, x18, lsl #3
   1e57c:	add	x0, x20, x17, lsl #3
   1e580:	cmp	x0, x18
   1e584:	b.cs	1e63c <_getopt_internal_r@@Base+0x624>  // b.hs, b.nlast
   1e588:	mov	x18, xzr
   1e58c:	add	x17, x18, x17
   1e590:	add	x0, x18, x15
   1e594:	add	x15, x20, x17, lsl #3
   1e598:	add	x17, x20, x0, lsl #3
   1e59c:	sub	x16, x16, x18
   1e5a0:	ldr	x18, [x15]
   1e5a4:	ldr	x0, [x17]
   1e5a8:	subs	x16, x16, #0x1
   1e5ac:	str	x18, [x17], #8
   1e5b0:	str	x0, [x15], #8
   1e5b4:	b.ne	1e5a0 <_getopt_internal_r@@Base+0x588>  // b.any
   1e5b8:	b	1e628 <_getopt_internal_r@@Base+0x610>
   1e5bc:	cmp	w15, #0x1
   1e5c0:	b.lt	1e624 <_getopt_internal_r@@Base+0x60c>  // b.tstop
   1e5c4:	sxtw	x16, w13
   1e5c8:	cmp	w15, #0x3
   1e5cc:	mov	w17, w15
   1e5d0:	b.ls	1e5f4 <_getopt_internal_r@@Base+0x5dc>  // b.plast
   1e5d4:	add	x18, x20, x16, lsl #3
   1e5d8:	add	x0, x10, x17, lsl #3
   1e5dc:	cmp	x18, x0
   1e5e0:	b.cs	1e678 <_getopt_internal_r@@Base+0x660>  // b.hs, b.nlast
   1e5e4:	add	x18, x16, x17
   1e5e8:	add	x18, x20, x18, lsl #3
   1e5ec:	cmp	x10, x18
   1e5f0:	b.cs	1e678 <_getopt_internal_r@@Base+0x660>  // b.hs, b.nlast
   1e5f4:	mov	x18, xzr
   1e5f8:	add	x0, x9, x18
   1e5fc:	add	x1, x18, x16
   1e600:	add	x16, x20, x0, lsl #3
   1e604:	add	x0, x20, x1, lsl #3
   1e608:	sub	x17, x17, x18
   1e60c:	ldr	x18, [x16]
   1e610:	ldr	x1, [x0]
   1e614:	subs	x17, x17, #0x1
   1e618:	str	x18, [x0], #8
   1e61c:	str	x1, [x16], #8
   1e620:	b.ne	1e60c <_getopt_internal_r@@Base+0x5f4>  // b.any
   1e624:	add	w13, w15, w13
   1e628:	cmp	w14, w23
   1e62c:	b.le	1e6e0 <_getopt_internal_r@@Base+0x6c8>
   1e630:	cmp	w23, w13
   1e634:	b.gt	1e530 <_getopt_internal_r@@Base+0x518>
   1e638:	b	1e6e0 <_getopt_internal_r@@Base+0x6c8>
   1e63c:	and	x18, x16, #0xfffffffc
   1e640:	add	x0, x11, x15, lsl #3
   1e644:	add	x1, x11, x17, lsl #3
   1e648:	mov	x2, x18
   1e64c:	ldp	q0, q3, [x0, #-16]
   1e650:	ldp	q1, q2, [x1, #-16]
   1e654:	subs	x2, x2, #0x4
   1e658:	stp	q1, q2, [x0, #-16]
   1e65c:	stp	q0, q3, [x1, #-16]
   1e660:	add	x0, x0, #0x20
   1e664:	add	x1, x1, #0x20
   1e668:	b.ne	1e64c <_getopt_internal_r@@Base+0x634>  // b.any
   1e66c:	cmp	x18, x16
   1e670:	b.eq	1e628 <_getopt_internal_r@@Base+0x610>  // b.none
   1e674:	b	1e58c <_getopt_internal_r@@Base+0x574>
   1e678:	and	x18, x17, #0xfffffffc
   1e67c:	add	x0, x11, x16, lsl #3
   1e680:	mov	x1, x18
   1e684:	mov	x2, x12
   1e688:	ldp	q0, q3, [x0, #-16]
   1e68c:	ldp	q1, q2, [x2, #-16]
   1e690:	subs	x1, x1, #0x4
   1e694:	stp	q1, q2, [x0, #-16]
   1e698:	stp	q0, q3, [x2, #-16]
   1e69c:	add	x0, x0, #0x20
   1e6a0:	add	x2, x2, #0x20
   1e6a4:	b.ne	1e688 <_getopt_internal_r@@Base+0x670>  // b.any
   1e6a8:	cmp	x18, x17
   1e6ac:	b.ne	1e5f8 <_getopt_internal_r@@Base+0x5e0>  // b.any
   1e6b0:	b	1e624 <_getopt_internal_r@@Base+0x60c>
   1e6b4:	cbz	w24, 1e704 <_getopt_internal_r@@Base+0x6ec>
   1e6b8:	add	w8, w25, #0x1
   1e6bc:	str	x23, [x19, #16]
   1e6c0:	str	w8, [x19]
   1e6c4:	mov	w26, #0x1                   	// #1
   1e6c8:	b	1e708 <_getopt_internal_r@@Base+0x6f0>
   1e6cc:	cmp	w28, w23
   1e6d0:	b.ne	1e6ec <_getopt_internal_r@@Base+0x6d4>  // b.any
   1e6d4:	mov	w28, w8
   1e6d8:	str	w8, [x19, #44]
   1e6dc:	b	1e6ec <_getopt_internal_r@@Base+0x6d4>
   1e6e0:	add	w9, w28, w8
   1e6e4:	sub	w28, w9, w23
   1e6e8:	stp	w28, w8, [x19, #44]
   1e6ec:	str	w21, [x19, #48]
   1e6f0:	str	w21, [x19]
   1e6f4:	mov	w23, w21
   1e6f8:	cmp	w28, w23
   1e6fc:	b.eq	1e704 <_getopt_internal_r@@Base+0x6ec>  // b.none
   1e700:	str	w28, [x19]
   1e704:	mov	w26, #0xffffffff            	// #-1
   1e708:	mov	w0, w26
   1e70c:	ldp	x20, x19, [sp, #112]
   1e710:	ldp	x22, x21, [sp, #96]
   1e714:	ldp	x24, x23, [sp, #80]
   1e718:	ldp	x26, x25, [sp, #64]
   1e71c:	ldp	x28, x27, [sp, #48]
   1e720:	ldp	x29, x30, [sp, #32]
   1e724:	add	sp, sp, #0x80
   1e728:	ret
   1e72c:	cbz	w8, 1e750 <_getopt_internal_r@@Base+0x738>
   1e730:	add	w8, w25, #0x1
   1e734:	str	x23, [x19, #16]
   1e738:	str	w8, [x19]
   1e73c:	str	xzr, [x19, #32]
   1e740:	b	1e708 <_getopt_internal_r@@Base+0x6f0>
   1e744:	mov	w8, #0x1                   	// #1
   1e748:	str	w8, [x19, #40]
   1e74c:	b	1e0e4 <_getopt_internal_r@@Base+0xcc>
   1e750:	cmp	w25, w21
   1e754:	b.ne	1e86c <_getopt_internal_r@@Base+0x854>  // b.any
   1e758:	ldur	w8, [x29, #-4]
   1e75c:	cbnz	w8, 1e8cc <_getopt_internal_r@@Base+0x8b4>
   1e760:	str	w26, [x19, #8]
   1e764:	ldrb	w8, [x22]
   1e768:	mov	w9, #0x3f                  	// #63
   1e76c:	cmp	w8, #0x3a
   1e770:	csel	w26, w8, w9, eq  // eq = none
   1e774:	b	1e73c <_getopt_internal_r@@Base+0x724>
   1e778:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1e77c:	ldr	x8, [x8, #3816]
   1e780:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1e784:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1e788:	add	x0, x0, #0x197
   1e78c:	ldr	x21, [x8]
   1e790:	add	x1, x1, #0xe91
   1e794:	mov	w2, #0x5                   	// #5
   1e798:	bl	ac90 <dcgettext@plt>
   1e79c:	ldr	x2, [x20]
   1e7a0:	mov	x1, x0
   1e7a4:	mov	x0, x21
   1e7a8:	mov	w3, w26
   1e7ac:	bl	ae70 <fprintf@plt>
   1e7b0:	b	1e3b0 <_getopt_internal_r@@Base+0x398>
   1e7b4:	ldr	x23, [x20, w25, sxtw #3]
   1e7b8:	adrp	x8, 33000 <vasnprintf@@Base+0x2474>
   1e7bc:	add	x8, x8, #0xed6
   1e7c0:	str	x23, [x19, #16]
   1e7c4:	str	x23, [x19, #32]
   1e7c8:	str	xzr, [x19, #16]
   1e7cc:	str	x8, [sp]
   1e7d0:	mov	w0, w21
   1e7d4:	mov	x1, x20
   1e7d8:	mov	x2, x22
   1e7dc:	mov	x3, x28
   1e7e0:	mov	x4, x27
   1e7e4:	mov	w5, wzr
   1e7e8:	ldur	w7, [x29, #-4]
   1e7ec:	mov	x6, x19
   1e7f0:	bl	1e908 <_getopt_internal_r@@Base+0x8f0>
   1e7f4:	b	1e70c <_getopt_internal_r@@Base+0x6f4>
   1e7f8:	ldr	w8, [sp, #12]
   1e7fc:	cbz	w8, 1e858 <_getopt_internal_r@@Base+0x840>
   1e800:	ldrb	w8, [x23, #2]
   1e804:	mov	x27, x26
   1e808:	cbz	w8, 1e880 <_getopt_internal_r@@Base+0x868>
   1e80c:	ldr	x3, [sp, #16]
   1e810:	ldr	w5, [sp, #12]
   1e814:	ldur	w7, [x29, #-4]
   1e818:	adrp	x8, 31000 <vasnprintf@@Base+0x474>
   1e81c:	add	x8, x8, #0x96a
   1e820:	mov	w0, w21
   1e824:	mov	x1, x20
   1e828:	mov	x2, x22
   1e82c:	mov	x4, x27
   1e830:	mov	x6, x19
   1e834:	str	x28, [x19, #32]
   1e838:	str	x8, [sp]
   1e83c:	bl	1e908 <_getopt_internal_r@@Base+0x8f0>
   1e840:	mov	w26, w0
   1e844:	cmn	w0, #0x1
   1e848:	b.ne	1e708 <_getopt_internal_r@@Base+0x6f0>  // b.any
   1e84c:	ldrsw	x25, [x19]
   1e850:	ldr	x23, [x20, x25, lsl #3]
   1e854:	b	1e85c <_getopt_internal_r@@Base+0x844>
   1e858:	mov	x27, x26
   1e85c:	ldr	x28, [sp, #16]
   1e860:	add	x24, x23, #0x1
   1e864:	str	x24, [x19, #32]
   1e868:	b	1e10c <_getopt_internal_r@@Base+0xf4>
   1e86c:	add	w8, w25, #0x1
   1e870:	str	w8, [x19]
   1e874:	ldr	x8, [x20, w25, sxtw #3]
   1e878:	str	x8, [x19, #16]
   1e87c:	b	1e73c <_getopt_internal_r@@Base+0x724>
   1e880:	mov	x0, x22
   1e884:	bl	aa60 <strchr@plt>
   1e888:	cbnz	x0, 1e85c <_getopt_internal_r@@Base+0x844>
   1e88c:	b	1e80c <_getopt_internal_r@@Base+0x7f4>
   1e890:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1e894:	ldr	x8, [x8, #3816]
   1e898:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1e89c:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1e8a0:	add	x0, x0, #0x197
   1e8a4:	ldr	x21, [x8]
   1e8a8:	add	x1, x1, #0xead
   1e8ac:	mov	w2, #0x5                   	// #5
   1e8b0:	bl	ac90 <dcgettext@plt>
   1e8b4:	ldr	x2, [x20]
   1e8b8:	mov	x1, x0
   1e8bc:	mov	x0, x21
   1e8c0:	mov	w3, w26
   1e8c4:	bl	ae70 <fprintf@plt>
   1e8c8:	b	1e178 <_getopt_internal_r@@Base+0x160>
   1e8cc:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1e8d0:	ldr	x8, [x8, #3816]
   1e8d4:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1e8d8:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1e8dc:	add	x0, x0, #0x197
   1e8e0:	ldr	x21, [x8]
   1e8e4:	add	x1, x1, #0xead
   1e8e8:	mov	w2, #0x5                   	// #5
   1e8ec:	bl	ac90 <dcgettext@plt>
   1e8f0:	ldr	x2, [x20]
   1e8f4:	mov	x1, x0
   1e8f8:	mov	x0, x21
   1e8fc:	mov	w3, w26
   1e900:	bl	ae70 <fprintf@plt>
   1e904:	b	1e760 <_getopt_internal_r@@Base+0x748>
   1e908:	sub	sp, sp, #0xb0
   1e90c:	stp	x29, x30, [sp, #80]
   1e910:	stp	x28, x27, [sp, #96]
   1e914:	stp	x26, x25, [sp, #112]
   1e918:	stp	x24, x23, [sp, #128]
   1e91c:	stp	x22, x21, [sp, #144]
   1e920:	stp	x20, x19, [sp, #160]
   1e924:	add	x29, sp, #0x50
   1e928:	ldr	x20, [x6, #32]
   1e92c:	ldr	x19, [x29, #96]
   1e930:	mov	x24, x6
   1e934:	mov	x25, x3
   1e938:	mov	x28, x20
   1e93c:	stur	w7, [x29, #-4]
   1e940:	stur	w5, [x29, #-12]
   1e944:	str	x2, [sp, #40]
   1e948:	stur	x1, [x29, #-32]
   1e94c:	str	w0, [sp, #36]
   1e950:	ldrb	w8, [x28]
   1e954:	cbz	w8, 1e968 <_getopt_internal_r@@Base+0x950>
   1e958:	cmp	w8, #0x3d
   1e95c:	b.eq	1e968 <_getopt_internal_r@@Base+0x950>  // b.none
   1e960:	ldrb	w8, [x28, #1]!
   1e964:	cbnz	w8, 1e958 <_getopt_internal_r@@Base+0x940>
   1e968:	ldr	x26, [x25]
   1e96c:	cbz	x26, 1ea84 <_getopt_internal_r@@Base+0xa6c>
   1e970:	mov	x27, xzr
   1e974:	sub	x23, x28, x20
   1e978:	mov	x21, x26
   1e97c:	mov	x22, x25
   1e980:	stur	x4, [x29, #-24]
   1e984:	b	1e994 <_getopt_internal_r@@Base+0x97c>
   1e988:	ldr	x21, [x22, #32]!
   1e98c:	add	x27, x27, #0x1
   1e990:	cbz	x21, 1e9c4 <_getopt_internal_r@@Base+0x9ac>
   1e994:	mov	x0, x21
   1e998:	mov	x1, x20
   1e99c:	mov	x2, x23
   1e9a0:	bl	a610 <strncmp@plt>
   1e9a4:	cbnz	w0, 1e988 <_getopt_internal_r@@Base+0x970>
   1e9a8:	mov	x0, x21
   1e9ac:	bl	a290 <strlen@plt>
   1e9b0:	cmp	x23, x0
   1e9b4:	b.ne	1e988 <_getopt_internal_r@@Base+0x970>  // b.any
   1e9b8:	ldur	x4, [x29, #-24]
   1e9bc:	mov	w12, w27
   1e9c0:	b	1ec30 <_getopt_internal_r@@Base+0xc18>
   1e9c4:	str	x25, [sp, #24]
   1e9c8:	cbz	x26, 1ea90 <_getopt_internal_r@@Base+0xa78>
   1e9cc:	ldur	w8, [x29, #-12]
   1e9d0:	str	x19, [sp, #16]
   1e9d4:	cbz	w8, 1eab0 <_getopt_internal_r@@Base+0xa98>
   1e9d8:	ldur	w8, [x29, #-4]
   1e9dc:	cbz	w8, 1ebbc <_getopt_internal_r@@Base+0xba4>
   1e9e0:	str	x24, [sp]
   1e9e4:	mov	x19, xzr
   1e9e8:	mov	x24, x25
   1e9ec:	mov	w25, wzr
   1e9f0:	mov	x21, xzr
   1e9f4:	mov	x22, xzr
   1e9f8:	mov	w8, #0xffffffff            	// #-1
   1e9fc:	str	wzr, [sp, #12]
   1ea00:	stur	w8, [x29, #-8]
   1ea04:	b	1ea20 <_getopt_internal_r@@Base+0xa08>
   1ea08:	mov	x22, x24
   1ea0c:	mov	w8, w19
   1ea10:	stur	w19, [x29, #-8]
   1ea14:	ldr	x26, [x24, #32]!
   1ea18:	add	x19, x19, #0x1
   1ea1c:	cbz	x26, 1eba0 <_getopt_internal_r@@Base+0xb88>
   1ea20:	mov	x0, x26
   1ea24:	mov	x1, x20
   1ea28:	mov	x2, x23
   1ea2c:	bl	a610 <strncmp@plt>
   1ea30:	cbnz	w0, 1ea14 <_getopt_internal_r@@Base+0x9fc>
   1ea34:	cbz	x22, 1ea08 <_getopt_internal_r@@Base+0x9f0>
   1ea38:	cbnz	w25, 1ea14 <_getopt_internal_r@@Base+0x9fc>
   1ea3c:	cbnz	x21, 1ea74 <_getopt_internal_r@@Base+0xa5c>
   1ea40:	mov	x0, x27
   1ea44:	bl	a550 <malloc@plt>
   1ea48:	mov	x21, x0
   1ea4c:	mov	w25, #0x1                   	// #1
   1ea50:	cbz	x0, 1ea14 <_getopt_internal_r@@Base+0x9fc>
   1ea54:	mov	x0, x21
   1ea58:	mov	w1, wzr
   1ea5c:	mov	x2, x27
   1ea60:	bl	a640 <memset@plt>
   1ea64:	ldur	w8, [x29, #-8]
   1ea68:	strb	w25, [x21, w8, sxtw]
   1ea6c:	mov	w8, #0x1                   	// #1
   1ea70:	str	w8, [sp, #12]
   1ea74:	mov	w25, wzr
   1ea78:	mov	w8, #0x1                   	// #1
   1ea7c:	strb	w8, [x21, x19]
   1ea80:	b	1ea14 <_getopt_internal_r@@Base+0x9fc>
   1ea84:	str	x25, [sp, #24]
   1ea88:	mov	w27, wzr
   1ea8c:	b	1ea94 <_getopt_internal_r@@Base+0xa7c>
   1ea90:	ldur	x4, [x29, #-24]
   1ea94:	mov	x22, xzr
   1ea98:	mov	x21, xzr
   1ea9c:	mov	w23, wzr
   1eaa0:	mov	w25, wzr
   1eaa4:	mov	w12, #0xffffffff            	// #-1
   1eaa8:	cbz	x21, 1ec28 <_getopt_internal_r@@Base+0xc10>
   1eaac:	b	1ec5c <_getopt_internal_r@@Base+0xc44>
   1eab0:	str	x24, [sp]
   1eab4:	mov	x24, xzr
   1eab8:	mov	x19, x25
   1eabc:	mov	w25, wzr
   1eac0:	mov	x21, xzr
   1eac4:	mov	x22, xzr
   1eac8:	mov	w8, #0xffffffff            	// #-1
   1eacc:	str	wzr, [sp, #12]
   1ead0:	stur	w8, [x29, #-8]
   1ead4:	b	1eaf0 <_getopt_internal_r@@Base+0xad8>
   1ead8:	mov	x22, x19
   1eadc:	mov	w8, w24
   1eae0:	stur	w24, [x29, #-8]
   1eae4:	ldr	x26, [x19, #32]!
   1eae8:	add	x24, x24, #0x1
   1eaec:	cbz	x26, 1eba0 <_getopt_internal_r@@Base+0xb88>
   1eaf0:	mov	x0, x26
   1eaf4:	mov	x1, x20
   1eaf8:	mov	x2, x23
   1eafc:	bl	a610 <strncmp@plt>
   1eb00:	cbnz	w0, 1eae4 <_getopt_internal_r@@Base+0xacc>
   1eb04:	cbz	x22, 1ead8 <_getopt_internal_r@@Base+0xac0>
   1eb08:	ldr	w8, [x22, #8]
   1eb0c:	ldr	w9, [x19, #8]
   1eb10:	cmp	w8, w9
   1eb14:	b.ne	1eb28 <_getopt_internal_r@@Base+0xb10>  // b.any
   1eb18:	ldr	x8, [x22, #16]
   1eb1c:	ldr	x9, [x19, #16]
   1eb20:	cmp	x8, x9
   1eb24:	b.eq	1eb30 <_getopt_internal_r@@Base+0xb18>  // b.none
   1eb28:	cbnz	w25, 1eae4 <_getopt_internal_r@@Base+0xacc>
   1eb2c:	b	1eb44 <_getopt_internal_r@@Base+0xb2c>
   1eb30:	cbnz	w25, 1eae4 <_getopt_internal_r@@Base+0xacc>
   1eb34:	ldr	w8, [x22, #24]
   1eb38:	ldr	w9, [x19, #24]
   1eb3c:	cmp	w8, w9
   1eb40:	b.eq	1eae4 <_getopt_internal_r@@Base+0xacc>  // b.none
   1eb44:	ldur	w8, [x29, #-4]
   1eb48:	cbz	w8, 1eb8c <_getopt_internal_r@@Base+0xb74>
   1eb4c:	cbnz	x21, 1eb84 <_getopt_internal_r@@Base+0xb6c>
   1eb50:	mov	x0, x27
   1eb54:	bl	a550 <malloc@plt>
   1eb58:	mov	x21, x0
   1eb5c:	mov	w25, #0x1                   	// #1
   1eb60:	cbz	x0, 1eae4 <_getopt_internal_r@@Base+0xacc>
   1eb64:	mov	x0, x21
   1eb68:	mov	w1, wzr
   1eb6c:	mov	x2, x27
   1eb70:	bl	a640 <memset@plt>
   1eb74:	ldur	w8, [x29, #-8]
   1eb78:	strb	w25, [x21, w8, sxtw]
   1eb7c:	mov	w8, #0x1                   	// #1
   1eb80:	str	w8, [sp, #12]
   1eb84:	mov	w25, wzr
   1eb88:	b	1eb94 <_getopt_internal_r@@Base+0xb7c>
   1eb8c:	mov	w25, #0x1                   	// #1
   1eb90:	cbz	x21, 1eae4 <_getopt_internal_r@@Base+0xacc>
   1eb94:	mov	w8, #0x1                   	// #1
   1eb98:	strb	w8, [x21, x24]
   1eb9c:	b	1eae4 <_getopt_internal_r@@Base+0xacc>
   1eba0:	ldr	x24, [sp]
   1eba4:	ldr	x19, [sp, #16]
   1eba8:	ldur	x4, [x29, #-24]
   1ebac:	ldur	w12, [x29, #-8]
   1ebb0:	ldr	w23, [sp, #12]
   1ebb4:	cbz	x21, 1ec28 <_getopt_internal_r@@Base+0xc10>
   1ebb8:	b	1ec5c <_getopt_internal_r@@Base+0xc44>
   1ebbc:	mov	x21, x25
   1ebc0:	mov	w25, wzr
   1ebc4:	mov	w19, wzr
   1ebc8:	mov	x22, xzr
   1ebcc:	mov	w8, #0xffffffff            	// #-1
   1ebd0:	stur	w8, [x29, #-8]
   1ebd4:	b	1ebec <_getopt_internal_r@@Base+0xbd4>
   1ebd8:	cmp	w25, #0x0
   1ebdc:	csinc	w25, w25, wzr, ne  // ne = any
   1ebe0:	ldr	x26, [x21, #32]!
   1ebe4:	add	w19, w19, #0x1
   1ebe8:	cbz	x26, 1ec10 <_getopt_internal_r@@Base+0xbf8>
   1ebec:	mov	x0, x26
   1ebf0:	mov	x1, x20
   1ebf4:	mov	x2, x23
   1ebf8:	bl	a610 <strncmp@plt>
   1ebfc:	cbnz	w0, 1ebe0 <_getopt_internal_r@@Base+0xbc8>
   1ec00:	cbnz	x22, 1ebd8 <_getopt_internal_r@@Base+0xbc0>
   1ec04:	mov	x22, x21
   1ec08:	stur	w19, [x29, #-8]
   1ec0c:	b	1ebe0 <_getopt_internal_r@@Base+0xbc8>
   1ec10:	ldr	x19, [sp, #16]
   1ec14:	ldur	x4, [x29, #-24]
   1ec18:	ldur	w12, [x29, #-8]
   1ec1c:	mov	x21, xzr
   1ec20:	mov	w23, wzr
   1ec24:	cbnz	x21, 1ec5c <_getopt_internal_r@@Base+0xc44>
   1ec28:	cbnz	w25, 1ec5c <_getopt_internal_r@@Base+0xc44>
   1ec2c:	cbz	x22, 1ecd8 <_getopt_internal_r@@Base+0xcc0>
   1ec30:	ldr	w9, [x24]
   1ec34:	str	xzr, [x24, #32]
   1ec38:	add	w8, w9, #0x1
   1ec3c:	str	w8, [x24]
   1ec40:	ldrb	w11, [x28]
   1ec44:	ldr	w10, [x22, #8]
   1ec48:	cbz	w11, 1ec90 <_getopt_internal_r@@Base+0xc78>
   1ec4c:	cbz	w10, 1ed50 <_getopt_internal_r@@Base+0xd38>
   1ec50:	add	x8, x28, #0x1
   1ec54:	str	x8, [x24, #16]
   1ec58:	b	1ecb8 <_getopt_internal_r@@Base+0xca0>
   1ec5c:	ldur	w8, [x29, #-4]
   1ec60:	cbnz	w8, 1ed90 <_getopt_internal_r@@Base+0xd78>
   1ec64:	cbz	w23, 1ec70 <_getopt_internal_r@@Base+0xc58>
   1ec68:	mov	x0, x21
   1ec6c:	bl	a970 <free@plt>
   1ec70:	ldr	x20, [x24, #32]
   1ec74:	mov	x0, x20
   1ec78:	bl	a290 <strlen@plt>
   1ec7c:	ldr	w8, [x24]
   1ec80:	add	x9, x20, x0
   1ec84:	str	wzr, [x24, #8]
   1ec88:	str	x9, [x24, #32]
   1ec8c:	b	1ed24 <_getopt_internal_r@@Base+0xd0c>
   1ec90:	cmp	w10, #0x1
   1ec94:	b.ne	1ecb8 <_getopt_internal_r@@Base+0xca0>  // b.any
   1ec98:	ldr	w10, [sp, #36]
   1ec9c:	cmp	w8, w10
   1eca0:	b.ge	1ed68 <_getopt_internal_r@@Base+0xd50>  // b.tcont
   1eca4:	add	w9, w9, #0x2
   1eca8:	str	w9, [x24]
   1ecac:	ldur	x9, [x29, #-32]
   1ecb0:	ldr	x8, [x9, w8, sxtw #3]
   1ecb4:	b	1ec54 <_getopt_internal_r@@Base+0xc3c>
   1ecb8:	cbz	x4, 1ecc0 <_getopt_internal_r@@Base+0xca8>
   1ecbc:	str	w12, [x4]
   1ecc0:	ldr	x8, [x22, #16]
   1ecc4:	ldr	w0, [x22, #24]
   1ecc8:	cbz	x8, 1ed30 <_getopt_internal_r@@Base+0xd18>
   1eccc:	str	w0, [x8]
   1ecd0:	mov	w0, wzr
   1ecd4:	b	1ed30 <_getopt_internal_r@@Base+0xd18>
   1ecd8:	ldur	w8, [x29, #-12]
   1ecdc:	cbz	w8, 1ed10 <_getopt_internal_r@@Base+0xcf8>
   1ece0:	ldrsw	x8, [x24]
   1ece4:	ldur	x9, [x29, #-32]
   1ece8:	ldr	x8, [x9, x8, lsl #3]
   1ecec:	ldrb	w8, [x8, #1]
   1ecf0:	cmp	w8, #0x2d
   1ecf4:	b.eq	1ed10 <_getopt_internal_r@@Base+0xcf8>  // b.none
   1ecf8:	ldrb	w1, [x20]
   1ecfc:	ldr	x0, [sp, #40]
   1ed00:	bl	aa60 <strchr@plt>
   1ed04:	cbz	x0, 1ed10 <_getopt_internal_r@@Base+0xcf8>
   1ed08:	mov	w0, #0xffffffff            	// #-1
   1ed0c:	b	1ed30 <_getopt_internal_r@@Base+0xd18>
   1ed10:	ldur	w8, [x29, #-4]
   1ed14:	cbnz	w8, 1ee80 <_getopt_internal_r@@Base+0xe68>
   1ed18:	ldr	w8, [x24]
   1ed1c:	str	xzr, [x24, #32]
   1ed20:	str	wzr, [x24, #8]
   1ed24:	add	w8, w8, #0x1
   1ed28:	str	w8, [x24]
   1ed2c:	mov	w0, #0x3f                  	// #63
   1ed30:	ldp	x20, x19, [sp, #160]
   1ed34:	ldp	x22, x21, [sp, #144]
   1ed38:	ldp	x24, x23, [sp, #128]
   1ed3c:	ldp	x26, x25, [sp, #112]
   1ed40:	ldp	x28, x27, [sp, #96]
   1ed44:	ldp	x29, x30, [sp, #80]
   1ed48:	add	sp, sp, #0xb0
   1ed4c:	ret
   1ed50:	ldur	w8, [x29, #-4]
   1ed54:	cbnz	w8, 1eec4 <_getopt_internal_r@@Base+0xeac>
   1ed58:	ldr	w8, [x22, #24]
   1ed5c:	mov	w0, #0x3f                  	// #63
   1ed60:	str	w8, [x24, #8]
   1ed64:	b	1ed30 <_getopt_internal_r@@Base+0xd18>
   1ed68:	ldur	w8, [x29, #-4]
   1ed6c:	cbnz	w8, 1ef08 <_getopt_internal_r@@Base+0xef0>
   1ed70:	ldr	w8, [x22, #24]
   1ed74:	mov	w9, #0x3f                  	// #63
   1ed78:	str	w8, [x24, #8]
   1ed7c:	ldr	x8, [sp, #40]
   1ed80:	ldrb	w8, [x8]
   1ed84:	cmp	w8, #0x3a
   1ed88:	csel	w0, w8, w9, eq  // eq = none
   1ed8c:	b	1ed30 <_getopt_internal_r@@Base+0xd18>
   1ed90:	mov	x26, x19
   1ed94:	adrp	x19, 45000 <vasnprintf@@Base+0x14474>
   1ed98:	ldr	x19, [x19, #3816]
   1ed9c:	ldr	x20, [x19]
   1eda0:	cbz	w25, 1eddc <_getopt_internal_r@@Base+0xdc4>
   1eda4:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1eda8:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1edac:	add	x0, x0, #0x197
   1edb0:	add	x1, x1, #0xeea
   1edb4:	mov	w2, #0x5                   	// #5
   1edb8:	bl	ac90 <dcgettext@plt>
   1edbc:	ldur	x8, [x29, #-32]
   1edc0:	ldr	x4, [x24, #32]
   1edc4:	mov	x1, x0
   1edc8:	mov	x0, x20
   1edcc:	ldr	x2, [x8]
   1edd0:	mov	x3, x26
   1edd4:	bl	ae70 <fprintf@plt>
   1edd8:	b	1ec64 <_getopt_internal_r@@Base+0xc4c>
   1eddc:	mov	x0, x20
   1ede0:	mov	w28, w23
   1ede4:	bl	a2f0 <flockfile@plt>
   1ede8:	ldr	x20, [x19]
   1edec:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1edf0:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1edf4:	add	x0, x0, #0x197
   1edf8:	add	x1, x1, #0xf0a
   1edfc:	mov	w2, #0x5                   	// #5
   1ee00:	bl	ac90 <dcgettext@plt>
   1ee04:	ldur	x8, [x29, #-32]
   1ee08:	ldr	x4, [x24, #32]
   1ee0c:	mov	x1, x0
   1ee10:	mov	x0, x20
   1ee14:	ldr	x2, [x8]
   1ee18:	mov	x3, x26
   1ee1c:	bl	ae70 <fprintf@plt>
   1ee20:	ldr	x25, [sp, #24]
   1ee24:	cbz	w27, 1ee64 <_getopt_internal_r@@Base+0xe4c>
   1ee28:	adrp	x20, 33000 <vasnprintf@@Base+0x2474>
   1ee2c:	mov	w22, w27
   1ee30:	add	x20, x20, #0xf39
   1ee34:	mov	x23, x21
   1ee38:	ldrb	w8, [x23]
   1ee3c:	cbz	w8, 1ee54 <_getopt_internal_r@@Base+0xe3c>
   1ee40:	ldr	x0, [x19]
   1ee44:	ldr	x3, [x25]
   1ee48:	mov	x1, x20
   1ee4c:	mov	x2, x26
   1ee50:	bl	ae70 <fprintf@plt>
   1ee54:	add	x23, x23, #0x1
   1ee58:	subs	x22, x22, #0x1
   1ee5c:	add	x25, x25, #0x20
   1ee60:	b.ne	1ee38 <_getopt_internal_r@@Base+0xe20>  // b.any
   1ee64:	ldr	x1, [x19]
   1ee68:	mov	w0, #0xa                   	// #10
   1ee6c:	bl	a440 <fputc@plt>
   1ee70:	ldr	x0, [x19]
   1ee74:	bl	a580 <funlockfile@plt>
   1ee78:	mov	w23, w28
   1ee7c:	b	1ec64 <_getopt_internal_r@@Base+0xc4c>
   1ee80:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1ee84:	ldr	x8, [x8, #3816]
   1ee88:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1ee8c:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1ee90:	add	x0, x0, #0x197
   1ee94:	ldr	x20, [x8]
   1ee98:	add	x1, x1, #0xf41
   1ee9c:	mov	w2, #0x5                   	// #5
   1eea0:	bl	ac90 <dcgettext@plt>
   1eea4:	ldur	x8, [x29, #-32]
   1eea8:	ldr	x4, [x24, #32]
   1eeac:	mov	x1, x0
   1eeb0:	mov	x0, x20
   1eeb4:	ldr	x2, [x8]
   1eeb8:	mov	x3, x19
   1eebc:	bl	ae70 <fprintf@plt>
   1eec0:	b	1ed18 <_getopt_internal_r@@Base+0xd00>
   1eec4:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1eec8:	ldr	x8, [x8, #3816]
   1eecc:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1eed0:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1eed4:	add	x0, x0, #0x197
   1eed8:	ldr	x20, [x8]
   1eedc:	add	x1, x1, #0xf61
   1eee0:	mov	w2, #0x5                   	// #5
   1eee4:	bl	ac90 <dcgettext@plt>
   1eee8:	ldur	x8, [x29, #-32]
   1eeec:	ldr	x4, [x22]
   1eef0:	mov	x1, x0
   1eef4:	mov	x0, x20
   1eef8:	ldr	x2, [x8]
   1eefc:	mov	x3, x19
   1ef00:	bl	ae70 <fprintf@plt>
   1ef04:	b	1ed58 <_getopt_internal_r@@Base+0xd40>
   1ef08:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1ef0c:	ldr	x8, [x8, #3816]
   1ef10:	adrp	x0, 32000 <vasnprintf@@Base+0x1474>
   1ef14:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1ef18:	add	x0, x0, #0x197
   1ef1c:	ldr	x20, [x8]
   1ef20:	add	x1, x1, #0xf8e
   1ef24:	mov	w2, #0x5                   	// #5
   1ef28:	bl	ac90 <dcgettext@plt>
   1ef2c:	ldur	x8, [x29, #-32]
   1ef30:	ldr	x4, [x22]
   1ef34:	mov	x1, x0
   1ef38:	mov	x0, x20
   1ef3c:	ldr	x2, [x8]
   1ef40:	mov	x3, x19
   1ef44:	bl	ae70 <fprintf@plt>
   1ef48:	b	1ed70 <_getopt_internal_r@@Base+0xd58>

000000000001ef4c <rpl_getopt_internal@@Base>:
   1ef4c:	stp	x29, x30, [sp, #-32]!
   1ef50:	stp	x20, x19, [sp, #16]
   1ef54:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
   1ef58:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1ef5c:	ldr	x20, [x20, #4032]
   1ef60:	ldr	x8, [x8, #3856]
   1ef64:	adrp	x19, 46000 <base_len@@Base+0x30a14>
   1ef68:	add	x19, x19, #0x918
   1ef6c:	ldr	w9, [x20]
   1ef70:	ldr	w8, [x8]
   1ef74:	mov	w7, w6
   1ef78:	mov	x6, x19
   1ef7c:	mov	x29, sp
   1ef80:	stp	w9, w8, [x19]
   1ef84:	bl	ad50 <_getopt_internal_r@plt>
   1ef88:	ldr	w8, [x19]
   1ef8c:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   1ef90:	adrp	x12, 45000 <vasnprintf@@Base+0x14474>
   1ef94:	ldr	x9, [x19, #16]
   1ef98:	ldr	x10, [x10, #4016]
   1ef9c:	ldr	w11, [x19, #8]
   1efa0:	ldr	x12, [x12, #3880]
   1efa4:	str	w8, [x20]
   1efa8:	ldp	x20, x19, [sp, #16]
   1efac:	str	x9, [x10]
   1efb0:	str	w11, [x12]
   1efb4:	ldp	x29, x30, [sp], #32
   1efb8:	ret

000000000001efbc <rpl_getopt@@Base>:
   1efbc:	stp	x29, x30, [sp, #-32]!
   1efc0:	stp	x20, x19, [sp, #16]
   1efc4:	adrp	x20, 45000 <vasnprintf@@Base+0x14474>
   1efc8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   1efcc:	ldr	x20, [x20, #4032]
   1efd0:	ldr	x8, [x8, #3856]
   1efd4:	adrp	x19, 46000 <base_len@@Base+0x30a14>
   1efd8:	add	x19, x19, #0x918
   1efdc:	ldr	w9, [x20]
   1efe0:	ldr	w8, [x8]
   1efe4:	mov	w7, #0x1                   	// #1
   1efe8:	mov	x3, xzr
   1efec:	mov	x4, xzr
   1eff0:	mov	w5, wzr
   1eff4:	mov	x6, x19
   1eff8:	mov	x29, sp
   1effc:	stp	w9, w8, [x19]
   1f000:	bl	ad50 <_getopt_internal_r@plt>
   1f004:	ldr	w8, [x19]
   1f008:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   1f00c:	adrp	x12, 45000 <vasnprintf@@Base+0x14474>
   1f010:	ldr	x9, [x19, #16]
   1f014:	ldr	x10, [x10, #4016]
   1f018:	ldr	w11, [x19, #8]
   1f01c:	ldr	x12, [x12, #3880]
   1f020:	str	w8, [x20]
   1f024:	ldp	x20, x19, [sp, #16]
   1f028:	str	x9, [x10]
   1f02c:	str	w11, [x12]
   1f030:	ldp	x29, x30, [sp], #32
   1f034:	ret

000000000001f038 <rpl_getopt_long@@Base>:
   1f038:	mov	w5, wzr
   1f03c:	mov	w6, wzr
   1f040:	b	aa20 <rpl_getopt_internal@plt>

000000000001f044 <_getopt_long_r@@Base>:
   1f044:	mov	x6, x5
   1f048:	mov	w5, wzr
   1f04c:	mov	w7, wzr
   1f050:	b	ad50 <_getopt_internal_r@plt>

000000000001f054 <rpl_getopt_long_only@@Base>:
   1f054:	mov	w5, #0x1                   	// #1
   1f058:	mov	w6, wzr
   1f05c:	b	aa20 <rpl_getopt_internal@plt>

000000000001f060 <_getopt_long_only_r@@Base>:
   1f060:	mov	x6, x5
   1f064:	mov	w5, #0x1                   	// #1
   1f068:	mov	w7, wzr
   1f06c:	b	ad50 <_getopt_internal_r@plt>

000000000001f070 <rpl_ioctl@@Base>:
   1f070:	sub	sp, sp, #0xe0
   1f074:	stp	x29, x30, [sp, #208]
   1f078:	add	x29, sp, #0xd0
   1f07c:	mov	x9, #0xffffffffffffffd0    	// #-48
   1f080:	mov	x10, sp
   1f084:	sub	x11, x29, #0x50
   1f088:	movk	x9, #0xff80, lsl #32
   1f08c:	add	x12, x29, #0x10
   1f090:	mov	x8, #0xffffffffffffffd0    	// #-48
   1f094:	add	x10, x10, #0x80
   1f098:	add	x11, x11, #0x30
   1f09c:	stp	x2, x3, [x29, #-80]
   1f0a0:	stp	x4, x5, [x29, #-64]
   1f0a4:	stp	x6, x7, [x29, #-48]
   1f0a8:	stp	q1, q2, [sp, #16]
   1f0ac:	stp	q3, q4, [sp, #48]
   1f0b0:	str	q0, [sp]
   1f0b4:	stp	q5, q6, [sp, #80]
   1f0b8:	str	q7, [sp, #112]
   1f0bc:	stp	x10, x9, [x29, #-16]
   1f0c0:	stp	x12, x11, [x29, #-32]
   1f0c4:	tbz	w8, #31, 1f0e4 <rpl_ioctl@@Base+0x74>
   1f0c8:	add	w9, w8, #0x8
   1f0cc:	cmn	w8, #0x8
   1f0d0:	stur	w9, [x29, #-8]
   1f0d4:	b.gt	1f0e4 <rpl_ioctl@@Base+0x74>
   1f0d8:	ldur	x9, [x29, #-24]
   1f0dc:	add	x8, x9, x8
   1f0e0:	b	1f0f0 <rpl_ioctl@@Base+0x80>
   1f0e4:	ldur	x8, [x29, #-32]
   1f0e8:	add	x9, x8, #0x8
   1f0ec:	stur	x9, [x29, #-32]
   1f0f0:	ldr	x2, [x8]
   1f0f4:	mov	w1, w1
   1f0f8:	bl	ae80 <ioctl@plt>
   1f0fc:	ldp	x29, x30, [sp, #208]
   1f100:	add	sp, sp, #0xe0
   1f104:	ret

000000000001f108 <rpl_mbrtowc@@Base>:
   1f108:	sub	sp, sp, #0x40
   1f10c:	stp	x29, x30, [sp, #16]
   1f110:	add	x29, sp, #0x10
   1f114:	cmp	x0, #0x0
   1f118:	sub	x8, x29, #0x4
   1f11c:	stp	x20, x19, [sp, #48]
   1f120:	csel	x20, x8, x0, eq  // eq = none
   1f124:	mov	x0, x20
   1f128:	stp	x22, x21, [sp, #32]
   1f12c:	mov	x22, x2
   1f130:	mov	x19, x1
   1f134:	bl	a200 <mbrtowc@plt>
   1f138:	mov	x21, x0
   1f13c:	cbz	x22, 1f160 <rpl_mbrtowc@@Base+0x58>
   1f140:	cmn	x21, #0x2
   1f144:	b.cc	1f160 <rpl_mbrtowc@@Base+0x58>  // b.lo, b.ul, b.last
   1f148:	mov	w0, wzr
   1f14c:	bl	a6e0 <hard_locale@plt>
   1f150:	tbnz	w0, #0, 1f160 <rpl_mbrtowc@@Base+0x58>
   1f154:	ldrb	w8, [x19]
   1f158:	mov	w21, #0x1                   	// #1
   1f15c:	str	w8, [x20]
   1f160:	mov	x0, x21
   1f164:	ldp	x20, x19, [sp, #48]
   1f168:	ldp	x22, x21, [sp, #32]
   1f16c:	ldp	x29, x30, [sp, #16]
   1f170:	add	sp, sp, #0x40
   1f174:	ret

000000000001f178 <rpl_nanosleep@@Base>:
   1f178:	sub	sp, sp, #0x40
   1f17c:	stp	x29, x30, [sp, #16]
   1f180:	stp	x22, x21, [sp, #32]
   1f184:	stp	x20, x19, [sp, #48]
   1f188:	ldr	x8, [x0, #8]
   1f18c:	mov	w9, #0xca00                	// #51712
   1f190:	movk	w9, #0x3b9a, lsl #16
   1f194:	add	x29, sp, #0x10
   1f198:	cmp	x8, x9
   1f19c:	b.cc	1f1b4 <rpl_nanosleep@@Base+0x3c>  // b.lo, b.ul, b.last
   1f1a0:	bl	ad90 <__errno_location@plt>
   1f1a4:	mov	w8, #0x16                  	// #22
   1f1a8:	str	w8, [x0]
   1f1ac:	mov	w0, #0xffffffff            	// #-1
   1f1b0:	b	1f218 <rpl_nanosleep@@Base+0xa0>
   1f1b4:	ldr	x20, [x0]
   1f1b8:	mov	w21, #0xa400                	// #41984
   1f1bc:	mov	x22, #0xffffffffffff5c00    	// #-41984
   1f1c0:	mov	x19, x1
   1f1c4:	movk	w21, #0x1f, lsl #16
   1f1c8:	movk	x22, #0xffe0, lsl #16
   1f1cc:	cmp	x20, x21
   1f1d0:	str	x8, [sp, #8]
   1f1d4:	b.le	1f208 <rpl_nanosleep@@Base+0x90>
   1f1d8:	mov	x0, sp
   1f1dc:	mov	x1, x19
   1f1e0:	str	x21, [sp]
   1f1e4:	bl	aa00 <nanosleep@plt>
   1f1e8:	mov	x8, xzr
   1f1ec:	add	x20, x20, x22
   1f1f0:	cbz	w0, 1f1cc <rpl_nanosleep@@Base+0x54>
   1f1f4:	cbz	x19, 1f218 <rpl_nanosleep@@Base+0xa0>
   1f1f8:	ldr	x8, [x19]
   1f1fc:	add	x8, x8, x20
   1f200:	str	x8, [x19]
   1f204:	b	1f218 <rpl_nanosleep@@Base+0xa0>
   1f208:	mov	x0, sp
   1f20c:	mov	x1, x19
   1f210:	str	x20, [sp]
   1f214:	bl	aa00 <nanosleep@plt>
   1f218:	ldp	x20, x19, [sp, #48]
   1f21c:	ldp	x22, x21, [sp, #32]
   1f220:	ldp	x29, x30, [sp, #16]
   1f224:	add	sp, sp, #0x40
   1f228:	ret

000000000001f22c <openat_proc_name@@Base>:
   1f22c:	sub	sp, sp, #0x60
   1f230:	stp	x29, x30, [sp, #32]
   1f234:	stp	x22, x21, [sp, #64]
   1f238:	stp	x20, x19, [sp, #80]
   1f23c:	ldrb	w8, [x2]
   1f240:	mov	x19, x0
   1f244:	str	x23, [sp, #48]
   1f248:	add	x29, sp, #0x20
   1f24c:	cbz	w8, 1f2ac <openat_proc_name@@Base+0x80>
   1f250:	adrp	x23, 46000 <base_len@@Base+0x30a14>
   1f254:	ldr	w8, [x23, #2384]
   1f258:	mov	x20, x2
   1f25c:	mov	w21, w1
   1f260:	cbz	w8, 1f2b4 <openat_proc_name@@Base+0x88>
   1f264:	tbnz	w8, #31, 1f30c <openat_proc_name@@Base+0xe0>
   1f268:	mov	x0, x20
   1f26c:	bl	a290 <strlen@plt>
   1f270:	add	x0, x0, #0x1b
   1f274:	cmp	x0, #0xfc1
   1f278:	b.cc	1f288 <openat_proc_name@@Base+0x5c>  // b.lo, b.ul, b.last
   1f27c:	bl	a550 <malloc@plt>
   1f280:	mov	x19, x0
   1f284:	cbz	x0, 1f320 <openat_proc_name@@Base+0xf4>
   1f288:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1f28c:	add	x1, x1, #0xfdb
   1f290:	mov	x0, x19
   1f294:	mov	w2, w21
   1f298:	bl	a3f0 <sprintf@plt>
   1f29c:	add	x0, x19, w0, sxtw
   1f2a0:	mov	x1, x20
   1f2a4:	bl	ab30 <strcpy@plt>
   1f2a8:	b	1f320 <openat_proc_name@@Base+0xf4>
   1f2ac:	strb	wzr, [x19]
   1f2b0:	b	1f320 <openat_proc_name@@Base+0xf4>
   1f2b4:	adrp	x0, 33000 <vasnprintf@@Base+0x2474>
   1f2b8:	add	x0, x0, #0xfb6
   1f2bc:	mov	w1, #0x4900                	// #18688
   1f2c0:	bl	a5a0 <open@plt>
   1f2c4:	tbnz	w0, #31, 1f314 <openat_proc_name@@Base+0xe8>
   1f2c8:	mov	w22, w0
   1f2cc:	adrp	x1, 33000 <vasnprintf@@Base+0x2474>
   1f2d0:	add	x1, x1, #0xfc4
   1f2d4:	mov	x0, sp
   1f2d8:	mov	w2, w22
   1f2dc:	bl	a3f0 <sprintf@plt>
   1f2e0:	mov	x0, sp
   1f2e4:	mov	w1, wzr
   1f2e8:	bl	a8a0 <access@plt>
   1f2ec:	cmp	w0, #0x0
   1f2f0:	mov	w8, #0x1                   	// #1
   1f2f4:	cneg	w8, w8, ne  // ne = any
   1f2f8:	mov	w0, w22
   1f2fc:	str	w8, [x23, #2384]
   1f300:	bl	a7a0 <close@plt>
   1f304:	ldr	w8, [x23, #2384]
   1f308:	tbz	w8, #31, 1f268 <openat_proc_name@@Base+0x3c>
   1f30c:	mov	x19, xzr
   1f310:	b	1f320 <openat_proc_name@@Base+0xf4>
   1f314:	mov	w8, #0xffffffff            	// #-1
   1f318:	mov	x19, xzr
   1f31c:	str	w8, [x23, #2384]
   1f320:	mov	x0, x19
   1f324:	ldp	x20, x19, [sp, #80]
   1f328:	ldp	x22, x21, [sp, #64]
   1f32c:	ldr	x23, [sp, #48]
   1f330:	ldp	x29, x30, [sp, #32]
   1f334:	add	sp, sp, #0x60
   1f338:	ret

000000000001f33c <printf_fetchargs@@Base>:
   1f33c:	ldr	x8, [x1]
   1f340:	cbz	x8, 1f578 <printf_fetchargs@@Base+0x23c>
   1f344:	ldr	x12, [x1, #8]
   1f348:	adrp	x10, 33000 <vasnprintf@@Base+0x2474>
   1f34c:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   1f350:	adrp	x13, 34000 <vasnprintf@@Base+0x3474>
   1f354:	mov	x8, xzr
   1f358:	add	x9, x0, #0x18
   1f35c:	add	x10, x10, #0xff0
   1f360:	add	x11, x11, #0x24
   1f364:	add	x12, x12, #0x10
   1f368:	add	x13, x13, #0x8
   1f36c:	b	1f3a0 <printf_fetchargs@@Base+0x64>
   1f370:	ldrsw	x14, [x0, #28]
   1f374:	tbnz	w14, #31, 1f55c <printf_fetchargs@@Base+0x220>
   1f378:	ldr	x14, [x0]
   1f37c:	add	x15, x14, #0x8
   1f380:	str	x15, [x0]
   1f384:	ldr	x14, [x14]
   1f388:	str	x14, [x12]
   1f38c:	ldr	x14, [x1]
   1f390:	add	x8, x8, #0x1
   1f394:	add	x12, x12, #0x20
   1f398:	cmp	x8, x14
   1f39c:	b.cs	1f578 <printf_fetchargs@@Base+0x23c>  // b.hs, b.nlast
   1f3a0:	ldur	w14, [x12, #-16]
   1f3a4:	sub	w14, w14, #0x1
   1f3a8:	cmp	w14, #0x15
   1f3ac:	b.hi	1f580 <printf_fetchargs@@Base+0x244>  // b.pmore
   1f3b0:	adr	x15, 1f370 <printf_fetchargs@@Base+0x34>
   1f3b4:	ldrb	w16, [x10, x14]
   1f3b8:	add	x15, x15, x16, lsl #2
   1f3bc:	br	x15
   1f3c0:	ldrsw	x14, [x9]
   1f3c4:	tbz	w14, #31, 1f378 <printf_fetchargs@@Base+0x3c>
   1f3c8:	add	w15, w14, #0x8
   1f3cc:	cmn	w14, #0x8
   1f3d0:	str	w15, [x9]
   1f3d4:	b.gt	1f378 <printf_fetchargs@@Base+0x3c>
   1f3d8:	ldr	x15, [x0, #8]
   1f3dc:	add	x14, x15, x14
   1f3e0:	b	1f384 <printf_fetchargs@@Base+0x48>
   1f3e4:	ldrsw	x14, [x9]
   1f3e8:	tbz	w14, #31, 1f408 <printf_fetchargs@@Base+0xcc>
   1f3ec:	add	w15, w14, #0x8
   1f3f0:	cmn	w14, #0x8
   1f3f4:	str	w15, [x9]
   1f3f8:	b.gt	1f408 <printf_fetchargs@@Base+0xcc>
   1f3fc:	ldr	x15, [x0, #8]
   1f400:	add	x14, x15, x14
   1f404:	b	1f414 <printf_fetchargs@@Base+0xd8>
   1f408:	ldr	x14, [x0]
   1f40c:	add	x15, x14, #0x8
   1f410:	str	x15, [x0]
   1f414:	ldr	w14, [x14]
   1f418:	str	w14, [x12]
   1f41c:	b	1f38c <printf_fetchargs@@Base+0x50>
   1f420:	ldrsw	x14, [x9]
   1f424:	tbz	w14, #31, 1f468 <printf_fetchargs@@Base+0x12c>
   1f428:	add	w15, w14, #0x8
   1f42c:	cmn	w14, #0x8
   1f430:	str	w15, [x9]
   1f434:	b.gt	1f468 <printf_fetchargs@@Base+0x12c>
   1f438:	ldr	x15, [x0, #8]
   1f43c:	add	x14, x15, x14
   1f440:	b	1f474 <printf_fetchargs@@Base+0x138>
   1f444:	ldrsw	x14, [x9]
   1f448:	tbz	w14, #31, 1f480 <printf_fetchargs@@Base+0x144>
   1f44c:	add	w15, w14, #0x8
   1f450:	cmn	w14, #0x8
   1f454:	str	w15, [x9]
   1f458:	b.gt	1f480 <printf_fetchargs@@Base+0x144>
   1f45c:	ldr	x15, [x0, #8]
   1f460:	add	x14, x15, x14
   1f464:	b	1f48c <printf_fetchargs@@Base+0x150>
   1f468:	ldr	x14, [x0]
   1f46c:	add	x15, x14, #0x8
   1f470:	str	x15, [x0]
   1f474:	ldr	w14, [x14]
   1f478:	strb	w14, [x12]
   1f47c:	b	1f38c <printf_fetchargs@@Base+0x50>
   1f480:	ldr	x14, [x0]
   1f484:	add	x15, x14, #0x8
   1f488:	str	x15, [x0]
   1f48c:	ldr	w14, [x14]
   1f490:	strh	w14, [x12]
   1f494:	b	1f38c <printf_fetchargs@@Base+0x50>
   1f498:	ldrsw	x14, [x0, #28]
   1f49c:	tbz	w14, #31, 1f504 <printf_fetchargs@@Base+0x1c8>
   1f4a0:	add	w15, w14, #0x10
   1f4a4:	cmn	w14, #0x10
   1f4a8:	str	w15, [x0, #28]
   1f4ac:	b.gt	1f504 <printf_fetchargs@@Base+0x1c8>
   1f4b0:	ldr	x15, [x0, #16]
   1f4b4:	add	x14, x15, x14
   1f4b8:	b	1f518 <printf_fetchargs@@Base+0x1dc>
   1f4bc:	ldrsw	x14, [x9]
   1f4c0:	tbz	w14, #31, 1f524 <printf_fetchargs@@Base+0x1e8>
   1f4c4:	add	w15, w14, #0x8
   1f4c8:	cmn	w14, #0x8
   1f4cc:	str	w15, [x9]
   1f4d0:	b.gt	1f524 <printf_fetchargs@@Base+0x1e8>
   1f4d4:	ldr	x15, [x0, #8]
   1f4d8:	add	x14, x15, x14
   1f4dc:	b	1f530 <printf_fetchargs@@Base+0x1f4>
   1f4e0:	ldrsw	x14, [x9]
   1f4e4:	tbz	w14, #31, 1f540 <printf_fetchargs@@Base+0x204>
   1f4e8:	add	w15, w14, #0x8
   1f4ec:	cmn	w14, #0x8
   1f4f0:	str	w15, [x9]
   1f4f4:	b.gt	1f540 <printf_fetchargs@@Base+0x204>
   1f4f8:	ldr	x15, [x0, #8]
   1f4fc:	add	x14, x15, x14
   1f500:	b	1f54c <printf_fetchargs@@Base+0x210>
   1f504:	ldr	x14, [x0]
   1f508:	add	x14, x14, #0xf
   1f50c:	and	x14, x14, #0xfffffffffffffff0
   1f510:	add	x15, x14, #0x10
   1f514:	str	x15, [x0]
   1f518:	ldr	q0, [x14]
   1f51c:	str	q0, [x12]
   1f520:	b	1f38c <printf_fetchargs@@Base+0x50>
   1f524:	ldr	x14, [x0]
   1f528:	add	x15, x14, #0x8
   1f52c:	str	x15, [x0]
   1f530:	ldr	x14, [x14]
   1f534:	cmp	x14, #0x0
   1f538:	csel	x14, x11, x14, eq  // eq = none
   1f53c:	b	1f388 <printf_fetchargs@@Base+0x4c>
   1f540:	ldr	x14, [x0]
   1f544:	add	x15, x14, #0x8
   1f548:	str	x15, [x0]
   1f54c:	ldr	x14, [x14]
   1f550:	cmp	x14, #0x0
   1f554:	csel	x14, x13, x14, eq  // eq = none
   1f558:	b	1f388 <printf_fetchargs@@Base+0x4c>
   1f55c:	add	w15, w14, #0x10
   1f560:	cmn	w14, #0x10
   1f564:	str	w15, [x0, #28]
   1f568:	b.gt	1f378 <printf_fetchargs@@Base+0x3c>
   1f56c:	ldr	x15, [x0, #16]
   1f570:	add	x14, x15, x14
   1f574:	b	1f384 <printf_fetchargs@@Base+0x48>
   1f578:	mov	w0, wzr
   1f57c:	ret
   1f580:	mov	w0, #0xffffffff            	// #-1
   1f584:	ret

000000000001f588 <printf_parse@@Base>:
   1f588:	sub	sp, sp, #0xb0
   1f58c:	add	x8, x1, #0x20
   1f590:	add	x9, x2, #0x10
   1f594:	stp	x29, x30, [sp, #80]
   1f598:	stp	x28, x27, [sp, #96]
   1f59c:	stp	x26, x25, [sp, #112]
   1f5a0:	stp	x24, x23, [sp, #128]
   1f5a4:	stp	x22, x21, [sp, #144]
   1f5a8:	stp	x20, x19, [sp, #160]
   1f5ac:	stp	xzr, x8, [x1]
   1f5b0:	str	x8, [sp, #32]
   1f5b4:	stp	xzr, x9, [x2]
   1f5b8:	ldrb	w8, [x0]
   1f5bc:	add	x29, sp, #0x50
   1f5c0:	mov	x23, x0
   1f5c4:	stur	x9, [x29, #-16]
   1f5c8:	cbz	w8, 1ffb8 <printf_parse@@Base+0xa30>
   1f5cc:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1f5d0:	movk	x0, #0x999a
   1f5d4:	adrp	x25, 34000 <vasnprintf@@Base+0x3474>
   1f5d8:	adrp	x20, 34000 <vasnprintf@@Base+0x3474>
   1f5dc:	movk	x0, #0x1999, lsl #48
   1f5e0:	mov	w5, #0x7                   	// #7
   1f5e4:	add	x25, x25, #0x56
   1f5e8:	mov	w3, #0x1                   	// #1
   1f5ec:	add	x20, x20, #0x2c
   1f5f0:	mov	w4, #0x7                   	// #7
   1f5f4:	stur	xzr, [x29, #-8]
   1f5f8:	str	xzr, [sp, #40]
   1f5fc:	str	xzr, [sp, #24]
   1f600:	stp	x2, x1, [x29, #-32]
   1f604:	b	1f614 <printf_parse@@Base+0x8c>
   1f608:	mov	x23, x13
   1f60c:	ldrb	w8, [x23]
   1f610:	cbz	w8, 20040 <printf_parse@@Base+0xab8>
   1f614:	and	w8, w8, #0xff
   1f618:	cmp	w8, #0x25
   1f61c:	add	x13, x23, #0x1
   1f620:	b.ne	1f608 <printf_parse@@Base+0x80>  // b.any
   1f624:	ldp	x6, x7, [x1]
   1f628:	mov	w8, #0x58                  	// #88
   1f62c:	mov	x28, #0xffffffffffffffff    	// #-1
   1f630:	mul	x8, x6, x8
   1f634:	add	x24, x7, x8
   1f638:	str	x23, [x7, x8]
   1f63c:	mov	x11, x24
   1f640:	mov	x10, x24
   1f644:	mov	x9, x24
   1f648:	mov	x8, x24
   1f64c:	mov	x27, x24
   1f650:	mov	x19, x24
   1f654:	mov	x26, x24
   1f658:	str	wzr, [x11, #16]!
   1f65c:	str	xzr, [x10, #24]!
   1f660:	str	xzr, [x9, #32]!
   1f664:	str	x28, [x8, #40]!
   1f668:	str	xzr, [x27, #48]!
   1f66c:	str	xzr, [x19, #56]!
   1f670:	str	x28, [x26, #64]!
   1f674:	str	x28, [x24, #80]!
   1f678:	ldrb	w14, [x23, #1]
   1f67c:	sub	w12, w14, #0x30
   1f680:	cmp	w12, #0x9
   1f684:	b.hi	1f6f8 <printf_parse@@Base+0x170>  // b.pmore
   1f688:	add	x12, x23, #0x2
   1f68c:	mov	x15, x12
   1f690:	ldrb	w16, [x15], #1
   1f694:	sub	w17, w16, #0x30
   1f698:	cmp	w17, #0xa
   1f69c:	b.cc	1f690 <printf_parse@@Base+0x108>  // b.lo, b.ul, b.last
   1f6a0:	cmp	w16, #0x24
   1f6a4:	b.ne	1f6f4 <printf_parse@@Base+0x16c>  // b.any
   1f6a8:	mov	x13, xzr
   1f6ac:	add	x15, x13, x13, lsl #2
   1f6b0:	cmp	x13, x0
   1f6b4:	and	x13, x14, #0xff
   1f6b8:	ldrb	w14, [x12], #1
   1f6bc:	lsl	x15, x15, #1
   1f6c0:	sub	x13, x13, #0x30
   1f6c4:	csinv	x15, x15, xzr, cc  // cc = lo, ul, last
   1f6c8:	adds	x13, x15, x13
   1f6cc:	sub	w15, w14, #0x30
   1f6d0:	csinv	x13, x13, xzr, cc  // cc = lo, ul, last
   1f6d4:	cmp	w15, #0xa
   1f6d8:	b.cc	1f6ac <printf_parse@@Base+0x124>  // b.lo, b.ul, b.last
   1f6dc:	add	x14, x13, #0x1
   1f6e0:	cmp	x14, #0x2
   1f6e4:	b.cc	1ffc8 <printf_parse@@Base+0xa40>  // b.lo, b.ul, b.last
   1f6e8:	sub	x28, x13, #0x1
   1f6ec:	mov	x13, x12
   1f6f0:	b	1f6f8 <printf_parse@@Base+0x170>
   1f6f4:	mov	x28, #0xffffffffffffffff    	// #-1
   1f6f8:	mov	w14, wzr
   1f6fc:	add	x12, x13, #0x1
   1f700:	add	x21, x13, #0x2
   1f704:	sub	x13, x13, #0x1
   1f708:	b	1f724 <printf_parse@@Base+0x19c>
   1f70c:	mov	w16, #0x40                  	// #64
   1f710:	orr	w14, w14, w16
   1f714:	add	x12, x12, #0x1
   1f718:	add	x21, x21, #0x1
   1f71c:	str	w14, [x11]
   1f720:	add	x13, x13, #0x1
   1f724:	ldurb	w15, [x12, #-1]
   1f728:	sub	w16, w15, #0x20
   1f72c:	cmp	w16, #0x29
   1f730:	b.hi	1f770 <printf_parse@@Base+0x1e8>  // b.pmore
   1f734:	adr	x17, 1f70c <printf_parse@@Base+0x184>
   1f738:	ldrb	w18, [x20, x16]
   1f73c:	add	x17, x17, x18, lsl #2
   1f740:	mov	w16, #0x1                   	// #1
   1f744:	br	x17
   1f748:	mov	w16, #0x8                   	// #8
   1f74c:	b	1f710 <printf_parse@@Base+0x188>
   1f750:	mov	w16, #0x10                  	// #16
   1f754:	b	1f710 <printf_parse@@Base+0x188>
   1f758:	mov	w16, #0x4                   	// #4
   1f75c:	b	1f710 <printf_parse@@Base+0x188>
   1f760:	mov	w16, #0x2                   	// #2
   1f764:	b	1f710 <printf_parse@@Base+0x188>
   1f768:	mov	w16, #0x20                  	// #32
   1f76c:	b	1f710 <printf_parse@@Base+0x188>
   1f770:	sub	w8, w15, #0x30
   1f774:	cmp	w8, #0x9
   1f778:	sub	x21, x12, #0x1
   1f77c:	b.hi	1f990 <printf_parse@@Base+0x408>  // b.pmore
   1f780:	str	x21, [x10]
   1f784:	ldrb	w8, [x13, #1]!
   1f788:	sub	w8, w8, #0x30
   1f78c:	cmp	w8, #0xa
   1f790:	b.cc	1f784 <printf_parse@@Base+0x1fc>  // b.lo, b.ul, b.last
   1f794:	str	x13, [x9]
   1f798:	ldr	x9, [sp, #40]
   1f79c:	sub	x8, x13, x21
   1f7a0:	mov	x21, x13
   1f7a4:	cmp	x9, x8
   1f7a8:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   1f7ac:	str	x9, [sp, #40]
   1f7b0:	b	1f98c <printf_parse@@Base+0x404>
   1f7b4:	sub	x11, x12, #0x1
   1f7b8:	str	x11, [x10]
   1f7bc:	ldr	x10, [sp, #40]
   1f7c0:	str	x12, [x9]
   1f7c4:	ldrb	w9, [x12]
   1f7c8:	cmp	x10, #0x0
   1f7cc:	csinc	x10, x10, xzr, ne  // ne = any
   1f7d0:	str	x10, [sp, #40]
   1f7d4:	sub	w10, w9, #0x30
   1f7d8:	cmp	w10, #0x9
   1f7dc:	b.hi	1f8a8 <printf_parse@@Base+0x320>  // b.pmore
   1f7e0:	mov	x10, x21
   1f7e4:	ldrb	w11, [x10], #1
   1f7e8:	sub	w13, w11, #0x30
   1f7ec:	cmp	w13, #0xa
   1f7f0:	b.cc	1f7e4 <printf_parse@@Base+0x25c>  // b.lo, b.ul, b.last
   1f7f4:	cmp	w11, #0x24
   1f7f8:	b.ne	1f8a8 <printf_parse@@Base+0x320>  // b.any
   1f7fc:	mov	x10, xzr
   1f800:	add	x11, x10, x10, lsl #2
   1f804:	cmp	x10, x0
   1f808:	and	x10, x9, #0xff
   1f80c:	ldrb	w9, [x21], #1
   1f810:	lsl	x11, x11, #1
   1f814:	sub	x10, x10, #0x30
   1f818:	csinv	x11, x11, xzr, cc  // cc = lo, ul, last
   1f81c:	adds	x10, x11, x10
   1f820:	sub	w11, w9, #0x30
   1f824:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   1f828:	cmp	w11, #0xa
   1f82c:	b.cc	1f800 <printf_parse@@Base+0x278>  // b.lo, b.ul, b.last
   1f830:	add	x9, x10, #0x1
   1f834:	cmp	x9, #0x2
   1f838:	b.cc	1ffc8 <printf_parse@@Base+0xa40>  // b.lo, b.ul, b.last
   1f83c:	sub	x22, x10, #0x1
   1f840:	str	x22, [x8]
   1f844:	cmp	x22, x4
   1f848:	b.cc	1f8cc <printf_parse@@Base+0x344>  // b.lo, b.ul, b.last
   1f84c:	lsl	x8, x4, #1
   1f850:	cmp	x4, #0x0
   1f854:	csinv	x8, x8, xzr, ge  // ge = tcont
   1f858:	cmp	x8, x22
   1f85c:	csinc	x9, x8, x22, hi  // hi = pmore
   1f860:	lsr	x8, x9, #59
   1f864:	stp	x27, x19, [sp]
   1f868:	cbnz	x8, 20000 <printf_parse@@Base+0xa78>
   1f86c:	ldr	x0, [x2, #8]
   1f870:	ldur	x8, [x29, #-16]
   1f874:	mov	x25, x7
   1f878:	mov	x27, x6
   1f87c:	mov	x19, x5
   1f880:	cmp	x0, x8
   1f884:	lsl	x1, x9, #5
   1f888:	str	x9, [sp, #16]
   1f88c:	b.eq	1f8dc <printf_parse@@Base+0x354>  // b.none
   1f890:	bl	a730 <realloc@plt>
   1f894:	ldp	x2, x1, [x29, #-32]
   1f898:	ldr	x4, [sp, #16]
   1f89c:	mov	x23, x0
   1f8a0:	cbnz	x0, 1f8f4 <printf_parse@@Base+0x36c>
   1f8a4:	b	20000 <printf_parse@@Base+0xa78>
   1f8a8:	ldur	x10, [x29, #-8]
   1f8ac:	adds	x9, x10, #0x1
   1f8b0:	str	x10, [x8]
   1f8b4:	b.cs	1ffc8 <printf_parse@@Base+0xa40>  // b.hs, b.nlast
   1f8b8:	ldur	x22, [x29, #-8]
   1f8bc:	mov	x21, x12
   1f8c0:	stur	x9, [x29, #-8]
   1f8c4:	cmp	x22, x4
   1f8c8:	b.cs	1f84c <printf_parse@@Base+0x2c4>  // b.hs, b.nlast
   1f8cc:	ldp	x8, x23, [x2]
   1f8d0:	cmp	x8, x22
   1f8d4:	b.ls	1f948 <printf_parse@@Base+0x3c0>  // b.plast
   1f8d8:	b	1f960 <printf_parse@@Base+0x3d8>
   1f8dc:	mov	x0, x1
   1f8e0:	bl	a550 <malloc@plt>
   1f8e4:	ldp	x2, x1, [x29, #-32]
   1f8e8:	ldr	x4, [sp, #16]
   1f8ec:	mov	x23, x0
   1f8f0:	cbz	x0, 20000 <printf_parse@@Base+0xa78>
   1f8f4:	ldr	x8, [x2, #8]
   1f8f8:	ldur	x9, [x29, #-16]
   1f8fc:	cmp	x8, x9
   1f900:	b.ne	1f920 <printf_parse@@Base+0x398>  // b.any
   1f904:	ldr	x8, [x2]
   1f908:	ldur	x1, [x29, #-16]
   1f90c:	mov	x0, x23
   1f910:	lsl	x2, x8, #5
   1f914:	bl	a210 <memcpy@plt>
   1f918:	ldr	x4, [sp, #16]
   1f91c:	ldp	x2, x1, [x29, #-32]
   1f920:	str	x23, [x2, #8]
   1f924:	mov	x5, x19
   1f928:	mov	x6, x27
   1f92c:	ldp	x27, x19, [sp]
   1f930:	mov	x7, x25
   1f934:	adrp	x25, 34000 <vasnprintf@@Base+0x3474>
   1f938:	add	x25, x25, #0x56
   1f93c:	ldr	x8, [x2]
   1f940:	cmp	x8, x22
   1f944:	b.hi	1f960 <printf_parse@@Base+0x3d8>  // b.pmore
   1f948:	add	x9, x23, x8, lsl #5
   1f94c:	add	x8, x8, #0x1
   1f950:	cmp	x8, x22
   1f954:	str	wzr, [x9], #32
   1f958:	b.ls	1f94c <printf_parse@@Base+0x3c4>  // b.plast
   1f95c:	str	x8, [x2]
   1f960:	add	x8, x23, x22, lsl #5
   1f964:	ldr	w9, [x8]
   1f968:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1f96c:	movk	x0, #0x999a
   1f970:	movk	x0, #0x1999, lsl #48
   1f974:	mov	w3, #0x1                   	// #1
   1f978:	cmp	w9, #0x5
   1f97c:	b.eq	1f98c <printf_parse@@Base+0x404>  // b.none
   1f980:	cbnz	w9, 1ffc8 <printf_parse@@Base+0xa40>
   1f984:	mov	w9, #0x5                   	// #5
   1f988:	str	w9, [x8]
   1f98c:	ldrb	w15, [x21]
   1f990:	cmp	w15, #0x2e
   1f994:	b.ne	1fa78 <printf_parse@@Base+0x4f0>  // b.any
   1f998:	ldrb	w8, [x21, #1]
   1f99c:	str	x21, [x27]
   1f9a0:	mov	x27, x21
   1f9a4:	cmp	w8, #0x2a
   1f9a8:	b.ne	1fa4c <printf_parse@@Base+0x4c4>  // b.any
   1f9ac:	add	x9, x21, #0x2
   1f9b0:	ldr	x10, [sp, #24]
   1f9b4:	str	x9, [x19]
   1f9b8:	ldrb	w8, [x21, #2]
   1f9bc:	mov	w11, #0x2                   	// #2
   1f9c0:	cmp	x10, #0x2
   1f9c4:	csel	x10, x10, x11, hi  // hi = pmore
   1f9c8:	str	x10, [sp, #24]
   1f9cc:	sub	w10, w8, #0x30
   1f9d0:	cmp	w10, #0x9
   1f9d4:	b.hi	1fbc4 <printf_parse@@Base+0x63c>  // b.pmore
   1f9d8:	add	x27, x21, #0x3
   1f9dc:	mov	x10, x27
   1f9e0:	ldrb	w11, [x10], #1
   1f9e4:	sub	w12, w11, #0x30
   1f9e8:	cmp	w12, #0xa
   1f9ec:	b.cc	1f9e0 <printf_parse@@Base+0x458>  // b.lo, b.ul, b.last
   1f9f0:	cmp	w11, #0x24
   1f9f4:	b.ne	1fbc4 <printf_parse@@Base+0x63c>  // b.any
   1f9f8:	mov	x9, xzr
   1f9fc:	add	x10, x9, x9, lsl #2
   1fa00:	cmp	x9, x0
   1fa04:	and	x9, x8, #0xff
   1fa08:	ldrb	w8, [x27], #1
   1fa0c:	lsl	x10, x10, #1
   1fa10:	sub	x9, x9, #0x30
   1fa14:	csinv	x10, x10, xzr, cc  // cc = lo, ul, last
   1fa18:	adds	x9, x10, x9
   1fa1c:	sub	w10, w8, #0x30
   1fa20:	csinv	x9, x9, xzr, cc  // cc = lo, ul, last
   1fa24:	cmp	w10, #0xa
   1fa28:	b.cc	1f9fc <printf_parse@@Base+0x474>  // b.lo, b.ul, b.last
   1fa2c:	add	x8, x9, #0x1
   1fa30:	cmp	x8, #0x2
   1fa34:	b.cc	1ffc8 <printf_parse@@Base+0xa40>  // b.lo, b.ul, b.last
   1fa38:	sub	x19, x9, #0x1
   1fa3c:	str	x19, [x26]
   1fa40:	cmp	x19, x4
   1fa44:	b.cc	1fbdc <printf_parse@@Base+0x654>  // b.lo, b.ul, b.last
   1fa48:	b	1fdec <printf_parse@@Base+0x864>
   1fa4c:	ldrb	w8, [x27, #1]!
   1fa50:	sub	w8, w8, #0x30
   1fa54:	cmp	w8, #0xa
   1fa58:	b.cc	1fa4c <printf_parse@@Base+0x4c4>  // b.lo, b.ul, b.last
   1fa5c:	ldr	x9, [sp, #24]
   1fa60:	sub	x8, x27, x21
   1fa64:	str	x27, [x19]
   1fa68:	cmp	x9, x8
   1fa6c:	csel	x9, x8, x9, cc  // cc = lo, ul, last
   1fa70:	str	x9, [sp, #24]
   1fa74:	b	1fa7c <printf_parse@@Base+0x4f4>
   1fa78:	mov	x27, x21
   1fa7c:	mov	w8, wzr
   1fa80:	add	x23, x27, #0x1
   1fa84:	b	1fa90 <printf_parse@@Base+0x508>
   1fa88:	orr	w8, w8, #0x4
   1fa8c:	add	x23, x23, #0x1
   1fa90:	ldurb	w9, [x23, #-1]
   1fa94:	sub	w10, w9, #0x4c
   1fa98:	cmp	w10, #0x2e
   1fa9c:	b.hi	1fad0 <printf_parse@@Base+0x548>  // b.pmore
   1faa0:	adr	x11, 1fa88 <printf_parse@@Base+0x500>
   1faa4:	ldrb	w12, [x25, x10]
   1faa8:	add	x11, x11, x12, lsl #2
   1faac:	br	x11
   1fab0:	add	w8, w8, #0x8
   1fab4:	add	x23, x23, #0x1
   1fab8:	b	1fa90 <printf_parse@@Base+0x508>
   1fabc:	and	w9, w8, #0x1
   1fac0:	lsl	w9, w3, w9
   1fac4:	orr	w8, w9, w8
   1fac8:	add	x23, x23, #0x1
   1facc:	b	1fa90 <printf_parse@@Base+0x508>
   1fad0:	sub	w10, w9, #0x25
   1fad4:	cmp	w10, #0x53
   1fad8:	b.hi	1ffc8 <printf_parse@@Base+0xa40>  // b.pmore
   1fadc:	adrp	x13, 34000 <vasnprintf@@Base+0x3474>
   1fae0:	add	x13, x13, #0x86
   1fae4:	adr	x11, 1fafc <printf_parse@@Base+0x574>
   1fae8:	ldrh	w12, [x13, x10, lsl #1]
   1faec:	add	x11, x11, x12, lsl #2
   1faf0:	mov	w19, #0xe                   	// #14
   1faf4:	mov	w21, #0x63                  	// #99
   1faf8:	br	x11
   1fafc:	tst	w8, #0x4
   1fb00:	ccmp	w8, #0x10, #0x0, eq  // eq = none
   1fb04:	mov	w8, #0xb                   	// #11
   1fb08:	cinc	w19, w8, ge  // ge = tcont
   1fb0c:	mov	w21, w9
   1fb10:	cmn	x28, #0x1
   1fb14:	str	x28, [x24]
   1fb18:	b.eq	1fb4c <printf_parse@@Base+0x5c4>  // b.none
   1fb1c:	cmp	x28, x4
   1fb20:	b.cs	1fb6c <printf_parse@@Base+0x5e4>  // b.hs, b.nlast
   1fb24:	ldp	x8, x24, [x2]
   1fb28:	cmp	x8, x28
   1fb2c:	b.ls	1fc8c <printf_parse@@Base+0x704>  // b.plast
   1fb30:	add	x8, x24, x28, lsl #5
   1fb34:	ldr	w9, [x8]
   1fb38:	cbz	w9, 1fcb0 <printf_parse@@Base+0x728>
   1fb3c:	cmp	w9, w19
   1fb40:	mov	w9, w21
   1fb44:	b.eq	1fcb8 <printf_parse@@Base+0x730>  // b.none
   1fb48:	b	1ffc8 <printf_parse@@Base+0xa40>
   1fb4c:	ldur	x9, [x29, #-8]
   1fb50:	adds	x8, x9, #0x1
   1fb54:	str	x9, [x24]
   1fb58:	b.cs	1ffc8 <printf_parse@@Base+0xa40>  // b.hs, b.nlast
   1fb5c:	ldur	x28, [x29, #-8]
   1fb60:	stur	x8, [x29, #-8]
   1fb64:	cmp	x28, x4
   1fb68:	b.cc	1fb24 <printf_parse@@Base+0x59c>  // b.lo, b.ul, b.last
   1fb6c:	lsl	x8, x4, #1
   1fb70:	cmp	x4, #0x0
   1fb74:	csinv	x8, x8, xzr, ge  // ge = tcont
   1fb78:	cmp	x8, x28
   1fb7c:	csinc	x9, x8, x28, hi  // hi = pmore
   1fb80:	lsr	x8, x9, #59
   1fb84:	cbnz	x8, 20000 <printf_parse@@Base+0xa78>
   1fb88:	ldr	x0, [x2, #8]
   1fb8c:	ldur	x8, [x29, #-16]
   1fb90:	mov	x25, x7
   1fb94:	mov	x27, x6
   1fb98:	mov	x26, x5
   1fb9c:	cmp	x0, x8
   1fba0:	lsl	x1, x9, #5
   1fba4:	b.eq	1fc0c <printf_parse@@Base+0x684>  // b.none
   1fba8:	mov	x22, x9
   1fbac:	bl	a730 <realloc@plt>
   1fbb0:	ldp	x2, x1, [x29, #-32]
   1fbb4:	mov	x4, x22
   1fbb8:	mov	x24, x0
   1fbbc:	cbnz	x0, 1fc28 <printf_parse@@Base+0x6a0>
   1fbc0:	b	20000 <printf_parse@@Base+0xa78>
   1fbc4:	ldr	x19, [x26]
   1fbc8:	cmn	x19, #0x1
   1fbcc:	b.eq	1fdc8 <printf_parse@@Base+0x840>  // b.none
   1fbd0:	mov	x27, x9
   1fbd4:	cmp	x19, x4
   1fbd8:	b.cs	1fdec <printf_parse@@Base+0x864>  // b.hs, b.nlast
   1fbdc:	ldp	x8, x23, [x2]
   1fbe0:	cmp	x8, x19
   1fbe4:	b.ls	1ff38 <printf_parse@@Base+0x9b0>  // b.plast
   1fbe8:	b	1ff50 <printf_parse@@Base+0x9c8>
   1fbec:	cmp	w8, #0xf
   1fbf0:	mov	w19, #0xa                   	// #10
   1fbf4:	b.gt	1fb0c <printf_parse@@Base+0x584>
   1fbf8:	tbnz	w8, #2, 1fb0c <printf_parse@@Base+0x584>
   1fbfc:	cmp	w8, #0x7
   1fc00:	b.le	1fea8 <printf_parse@@Base+0x920>
   1fc04:	mov	w19, #0x8                   	// #8
   1fc08:	b	1fb0c <printf_parse@@Base+0x584>
   1fc0c:	mov	x0, x1
   1fc10:	mov	x22, x9
   1fc14:	bl	a550 <malloc@plt>
   1fc18:	ldp	x2, x1, [x29, #-32]
   1fc1c:	mov	x4, x22
   1fc20:	mov	x24, x0
   1fc24:	cbz	x0, 20000 <printf_parse@@Base+0xa78>
   1fc28:	ldr	x8, [x2, #8]
   1fc2c:	ldur	x9, [x29, #-16]
   1fc30:	cmp	x8, x9
   1fc34:	b.ne	1fc58 <printf_parse@@Base+0x6d0>  // b.any
   1fc38:	ldr	x8, [x2]
   1fc3c:	ldur	x1, [x29, #-16]
   1fc40:	mov	x0, x24
   1fc44:	mov	x22, x4
   1fc48:	lsl	x2, x8, #5
   1fc4c:	bl	a210 <memcpy@plt>
   1fc50:	ldp	x2, x1, [x29, #-32]
   1fc54:	mov	x4, x22
   1fc58:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1fc5c:	movk	x0, #0x999a
   1fc60:	mov	x7, x25
   1fc64:	adrp	x25, 34000 <vasnprintf@@Base+0x3474>
   1fc68:	movk	x0, #0x1999, lsl #48
   1fc6c:	mov	w3, #0x1                   	// #1
   1fc70:	mov	x5, x26
   1fc74:	mov	x6, x27
   1fc78:	add	x25, x25, #0x56
   1fc7c:	str	x24, [x2, #8]
   1fc80:	ldr	x8, [x2]
   1fc84:	cmp	x8, x28
   1fc88:	b.hi	1fb30 <printf_parse@@Base+0x5a8>  // b.pmore
   1fc8c:	add	x9, x24, x8, lsl #5
   1fc90:	add	x8, x8, #0x1
   1fc94:	cmp	x8, x28
   1fc98:	str	wzr, [x9], #32
   1fc9c:	b.ls	1fc90 <printf_parse@@Base+0x708>  // b.plast
   1fca0:	str	x8, [x2]
   1fca4:	add	x8, x24, x28, lsl #5
   1fca8:	ldr	w9, [x8]
   1fcac:	cbnz	w9, 1fb3c <printf_parse@@Base+0x5b4>
   1fcb0:	str	w19, [x8]
   1fcb4:	mov	w9, w21
   1fcb8:	mov	w8, #0x58                  	// #88
   1fcbc:	madd	x8, x6, x8, x7
   1fcc0:	strb	w9, [x8, #72]
   1fcc4:	str	x23, [x8, #8]
   1fcc8:	ldr	x8, [x1]
   1fccc:	add	x8, x8, #0x1
   1fcd0:	cmp	x8, x5
   1fcd4:	str	x8, [x1]
   1fcd8:	b.cc	1f60c <printf_parse@@Base+0x84>  // b.lo, b.ul, b.last
   1fcdc:	mov	x9, #0xe8ba                	// #59578
   1fce0:	movk	x9, #0x8ba2, lsl #16
   1fce4:	lsl	x19, x5, #1
   1fce8:	cmp	x5, #0x0
   1fcec:	movk	x9, #0xba2e, lsl #32
   1fcf0:	csinv	x8, x19, xzr, ge  // ge = tcont
   1fcf4:	movk	x9, #0x2e8, lsl #48
   1fcf8:	cmp	x8, x9
   1fcfc:	b.hi	20000 <printf_parse@@Base+0xa78>  // b.pmore
   1fd00:	ldr	x0, [x1, #8]
   1fd04:	ldr	x9, [sp, #32]
   1fd08:	cmp	x0, x9
   1fd0c:	mov	w9, #0x58                  	// #88
   1fd10:	mul	x1, x8, x9
   1fd14:	b.eq	1fd34 <printf_parse@@Base+0x7ac>  // b.none
   1fd18:	mov	x21, x4
   1fd1c:	bl	a730 <realloc@plt>
   1fd20:	ldp	x2, x1, [x29, #-32]
   1fd24:	mov	x4, x21
   1fd28:	mov	x24, x0
   1fd2c:	cbnz	x0, 1fd50 <printf_parse@@Base+0x7c8>
   1fd30:	b	20000 <printf_parse@@Base+0xa78>
   1fd34:	mov	x0, x1
   1fd38:	mov	x21, x4
   1fd3c:	bl	a550 <malloc@plt>
   1fd40:	ldp	x2, x1, [x29, #-32]
   1fd44:	mov	x4, x21
   1fd48:	mov	x24, x0
   1fd4c:	cbz	x0, 20000 <printf_parse@@Base+0xa78>
   1fd50:	ldr	x8, [x1, #8]
   1fd54:	ldr	x9, [sp, #32]
   1fd58:	cmp	x8, x9
   1fd5c:	b.ne	1fd84 <printf_parse@@Base+0x7fc>  // b.any
   1fd60:	ldr	x8, [x1]
   1fd64:	ldr	x1, [sp, #32]
   1fd68:	mov	w9, #0x58                  	// #88
   1fd6c:	mov	x0, x24
   1fd70:	mul	x2, x8, x9
   1fd74:	mov	x21, x4
   1fd78:	bl	a210 <memcpy@plt>
   1fd7c:	ldp	x2, x1, [x29, #-32]
   1fd80:	mov	x4, x21
   1fd84:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1fd88:	movk	x0, #0x999a
   1fd8c:	adrp	x25, 34000 <vasnprintf@@Base+0x3474>
   1fd90:	mov	x5, x19
   1fd94:	movk	x0, #0x1999, lsl #48
   1fd98:	mov	w3, #0x1                   	// #1
   1fd9c:	add	x25, x25, #0x56
   1fda0:	str	x24, [x1, #8]
   1fda4:	b	1f60c <printf_parse@@Base+0x84>
   1fda8:	cmp	w8, #0xf
   1fdac:	mov	w19, #0x9                   	// #9
   1fdb0:	b.gt	1fb0c <printf_parse@@Base+0x584>
   1fdb4:	tbnz	w8, #2, 1fb0c <printf_parse@@Base+0x584>
   1fdb8:	cmp	w8, #0x7
   1fdbc:	b.le	1ff78 <printf_parse@@Base+0x9f0>
   1fdc0:	mov	w19, #0x7                   	// #7
   1fdc4:	b	1fb0c <printf_parse@@Base+0x584>
   1fdc8:	ldur	x10, [x29, #-8]
   1fdcc:	adds	x8, x10, #0x1
   1fdd0:	str	x10, [x26]
   1fdd4:	b.cs	1ffc8 <printf_parse@@Base+0xa40>  // b.hs, b.nlast
   1fdd8:	ldur	x19, [x29, #-8]
   1fddc:	mov	x27, x9
   1fde0:	stur	x8, [x29, #-8]
   1fde4:	cmp	x19, x4
   1fde8:	b.cc	1fbdc <printf_parse@@Base+0x654>  // b.lo, b.ul, b.last
   1fdec:	lsl	x8, x4, #1
   1fdf0:	cmp	x4, #0x0
   1fdf4:	csinv	x8, x8, xzr, ge  // ge = tcont
   1fdf8:	cmp	x8, x19
   1fdfc:	csinc	x9, x8, x19, hi  // hi = pmore
   1fe00:	lsr	x8, x9, #59
   1fe04:	cbnz	x8, 20000 <printf_parse@@Base+0xa78>
   1fe08:	ldr	x0, [x2, #8]
   1fe0c:	ldur	x8, [x29, #-16]
   1fe10:	mov	x21, x7
   1fe14:	mov	x26, x6
   1fe18:	mov	x22, x5
   1fe1c:	cmp	x0, x8
   1fe20:	lsl	x1, x9, #5
   1fe24:	str	x9, [sp, #16]
   1fe28:	b.eq	1fec0 <printf_parse@@Base+0x938>  // b.none
   1fe2c:	bl	a730 <realloc@plt>
   1fe30:	ldp	x2, x1, [x29, #-32]
   1fe34:	ldr	x4, [sp, #16]
   1fe38:	mov	x23, x0
   1fe3c:	cbnz	x0, 1fed8 <printf_parse@@Base+0x950>
   1fe40:	b	20000 <printf_parse@@Base+0xa78>
   1fe44:	mov	w19, #0x10                  	// #16
   1fe48:	mov	w21, #0x73                  	// #115
   1fe4c:	b	1fb10 <printf_parse@@Base+0x588>
   1fe50:	cmp	w8, #0x7
   1fe54:	mov	w8, #0xd                   	// #13
   1fe58:	cinc	w19, w8, gt
   1fe5c:	mov	w21, #0x63                  	// #99
   1fe60:	b	1fb10 <printf_parse@@Base+0x588>
   1fe64:	mov	w19, #0x16                  	// #22
   1fe68:	cmp	w8, #0xf
   1fe6c:	mov	w21, #0x6e                  	// #110
   1fe70:	b.gt	1fb10 <printf_parse@@Base+0x588>
   1fe74:	tbnz	w8, #2, 1fb10 <printf_parse@@Base+0x588>
   1fe78:	cmp	w8, #0x7
   1fe7c:	b.le	1ff90 <printf_parse@@Base+0xa08>
   1fe80:	mov	w19, #0x15                  	// #21
   1fe84:	b	1ffb0 <printf_parse@@Base+0xa28>
   1fe88:	mov	w19, #0x11                  	// #17
   1fe8c:	mov	w21, #0x70                  	// #112
   1fe90:	b	1fb10 <printf_parse@@Base+0x588>
   1fe94:	cmp	w8, #0x7
   1fe98:	mov	w8, #0xf                   	// #15
   1fe9c:	cinc	w19, w8, gt
   1fea0:	mov	w21, #0x73                  	// #115
   1fea4:	b	1fb10 <printf_parse@@Base+0x588>
   1fea8:	tbnz	w8, #1, 1ff70 <printf_parse@@Base+0x9e8>
   1feac:	tst	w8, #0x1
   1feb0:	mov	w8, #0x4                   	// #4
   1feb4:	mov	w10, #0x6                   	// #6
   1feb8:	csel	w19, w10, w8, eq  // eq = none
   1febc:	b	1fb0c <printf_parse@@Base+0x584>
   1fec0:	mov	x0, x1
   1fec4:	bl	a550 <malloc@plt>
   1fec8:	ldp	x2, x1, [x29, #-32]
   1fecc:	ldr	x4, [sp, #16]
   1fed0:	mov	x23, x0
   1fed4:	cbz	x0, 20000 <printf_parse@@Base+0xa78>
   1fed8:	ldr	x8, [x2, #8]
   1fedc:	ldur	x9, [x29, #-16]
   1fee0:	cmp	x8, x9
   1fee4:	b.ne	1ff04 <printf_parse@@Base+0x97c>  // b.any
   1fee8:	ldr	x8, [x2]
   1feec:	ldur	x1, [x29, #-16]
   1fef0:	mov	x0, x23
   1fef4:	lsl	x2, x8, #5
   1fef8:	bl	a210 <memcpy@plt>
   1fefc:	ldr	x4, [sp, #16]
   1ff00:	ldp	x2, x1, [x29, #-32]
   1ff04:	mov	x0, #0x9999999999999999    	// #-7378697629483820647
   1ff08:	movk	x0, #0x999a
   1ff0c:	adrp	x25, 34000 <vasnprintf@@Base+0x3474>
   1ff10:	movk	x0, #0x1999, lsl #48
   1ff14:	mov	w3, #0x1                   	// #1
   1ff18:	mov	x5, x22
   1ff1c:	mov	x6, x26
   1ff20:	mov	x7, x21
   1ff24:	add	x25, x25, #0x56
   1ff28:	str	x23, [x2, #8]
   1ff2c:	ldr	x8, [x2]
   1ff30:	cmp	x8, x19
   1ff34:	b.hi	1ff50 <printf_parse@@Base+0x9c8>  // b.pmore
   1ff38:	add	x9, x23, x8, lsl #5
   1ff3c:	add	x8, x8, #0x1
   1ff40:	cmp	x8, x19
   1ff44:	str	wzr, [x9], #32
   1ff48:	b.ls	1ff3c <printf_parse@@Base+0x9b4>  // b.plast
   1ff4c:	str	x8, [x2]
   1ff50:	add	x8, x23, x19, lsl #5
   1ff54:	ldr	w9, [x8]
   1ff58:	cmp	w9, #0x5
   1ff5c:	b.eq	1fa7c <printf_parse@@Base+0x4f4>  // b.none
   1ff60:	cbnz	w9, 1ffc8 <printf_parse@@Base+0xa40>
   1ff64:	mov	w9, #0x5                   	// #5
   1ff68:	str	w9, [x8]
   1ff6c:	b	1fa7c <printf_parse@@Base+0x4f4>
   1ff70:	mov	w19, #0x2                   	// #2
   1ff74:	b	1fb0c <printf_parse@@Base+0x584>
   1ff78:	tbnz	w8, #1, 1ffa4 <printf_parse@@Base+0xa1c>
   1ff7c:	tst	w8, #0x1
   1ff80:	mov	w8, #0x5                   	// #5
   1ff84:	mov	w10, #0x3                   	// #3
   1ff88:	csel	w19, w8, w10, eq  // eq = none
   1ff8c:	b	1fb0c <printf_parse@@Base+0x584>
   1ff90:	tbnz	w8, #1, 1ffac <printf_parse@@Base+0xa24>
   1ff94:	tst	w8, #0x1
   1ff98:	mov	w8, #0x13                  	// #19
   1ff9c:	cinc	w19, w8, eq  // eq = none
   1ffa0:	b	1ffb0 <printf_parse@@Base+0xa28>
   1ffa4:	mov	w19, #0x1                   	// #1
   1ffa8:	b	1fb0c <printf_parse@@Base+0x584>
   1ffac:	mov	w19, #0x12                  	// #18
   1ffb0:	mov	w21, #0x6e                  	// #110
   1ffb4:	b	1fb10 <printf_parse@@Base+0x588>
   1ffb8:	mov	x8, xzr
   1ffbc:	mov	x10, xzr
   1ffc0:	mov	x11, xzr
   1ffc4:	b	20054 <printf_parse@@Base+0xacc>
   1ffc8:	ldr	x0, [x2, #8]
   1ffcc:	ldur	x8, [x29, #-16]
   1ffd0:	cmp	x0, x8
   1ffd4:	b.eq	1ffe0 <printf_parse@@Base+0xa58>  // b.none
   1ffd8:	bl	a970 <free@plt>
   1ffdc:	ldur	x1, [x29, #-24]
   1ffe0:	ldr	x0, [x1, #8]
   1ffe4:	ldr	x8, [sp, #32]
   1ffe8:	cmp	x0, x8
   1ffec:	b.eq	1fff4 <printf_parse@@Base+0xa6c>  // b.none
   1fff0:	bl	a970 <free@plt>
   1fff4:	bl	ad90 <__errno_location@plt>
   1fff8:	mov	w8, #0x16                  	// #22
   1fffc:	b	20034 <printf_parse@@Base+0xaac>
   20000:	ldr	x0, [x2, #8]
   20004:	ldur	x8, [x29, #-16]
   20008:	cmp	x0, x8
   2000c:	b.eq	20018 <printf_parse@@Base+0xa90>  // b.none
   20010:	bl	a970 <free@plt>
   20014:	ldur	x1, [x29, #-24]
   20018:	ldr	x0, [x1, #8]
   2001c:	ldr	x8, [sp, #32]
   20020:	cmp	x0, x8
   20024:	b.eq	2002c <printf_parse@@Base+0xaa4>  // b.none
   20028:	bl	a970 <free@plt>
   2002c:	bl	ad90 <__errno_location@plt>
   20030:	mov	w8, #0xc                   	// #12
   20034:	str	w8, [x0]
   20038:	mov	w0, #0xffffffff            	// #-1
   2003c:	b	2006c <printf_parse@@Base+0xae4>
   20040:	ldr	x8, [x1, #8]
   20044:	ldr	x10, [sp, #24]
   20048:	ldr	x11, [sp, #40]
   2004c:	str	x8, [sp, #32]
   20050:	ldr	x8, [x1]
   20054:	mov	w9, #0x58                  	// #88
   20058:	mul	x8, x8, x9
   2005c:	ldr	x9, [sp, #32]
   20060:	mov	w0, wzr
   20064:	str	x23, [x9, x8]
   20068:	stp	x11, x10, [x1, #16]
   2006c:	ldp	x20, x19, [sp, #160]
   20070:	ldp	x22, x21, [sp, #144]
   20074:	ldp	x24, x23, [sp, #128]
   20078:	ldp	x26, x25, [sp, #112]
   2007c:	ldp	x28, x27, [sp, #96]
   20080:	ldp	x29, x30, [sp, #80]
   20084:	add	sp, sp, #0xb0
   20088:	ret

000000000002008c <rpl_re_compile_pattern@@Base>:
   2008c:	stp	x29, x30, [sp, #-16]!
   20090:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   20094:	ldr	x9, [x9, #3920]
   20098:	mov	x8, x1
   2009c:	mov	x1, x0
   200a0:	mov	x0, x2
   200a4:	ldr	x3, [x9]
   200a8:	ldrb	w9, [x2, #56]
   200ac:	mov	x29, sp
   200b0:	ubfx	x10, x3, #21, #11
   200b4:	and	w10, w10, #0x10
   200b8:	and	w9, w9, #0xffffffef
   200bc:	orr	w9, w9, w10
   200c0:	orr	w9, w9, #0x80
   200c4:	strb	w9, [x2, #56]
   200c8:	mov	x2, x8
   200cc:	bl	20108 <rpl_re_compile_pattern@@Base+0x7c>
   200d0:	cbz	w0, 200fc <rpl_re_compile_pattern@@Base+0x70>
   200d4:	adrp	x8, 34000 <vasnprintf@@Base+0x3474>
   200d8:	add	x8, x8, #0x438
   200dc:	ldr	x8, [x8, w0, sxtw #3]
   200e0:	adrp	x9, 34000 <vasnprintf@@Base+0x3474>
   200e4:	add	x9, x9, #0x2b5
   200e8:	mov	w2, #0x5                   	// #5
   200ec:	add	x1, x9, x8
   200f0:	mov	x0, xzr
   200f4:	ldp	x29, x30, [sp], #16
   200f8:	b	ac90 <dcgettext@plt>
   200fc:	mov	x0, xzr
   20100:	ldp	x29, x30, [sp], #16
   20104:	ret
   20108:	sub	sp, sp, #0x130
   2010c:	stp	x29, x30, [sp, #208]
   20110:	add	x29, sp, #0xd0
   20114:	stp	x28, x27, [sp, #224]
   20118:	stp	x26, x25, [sp, #240]
   2011c:	stp	x24, x23, [sp, #256]
   20120:	stp	x22, x21, [sp, #272]
   20124:	stp	x20, x19, [sp, #288]
   20128:	stur	wzr, [x29, #-44]
   2012c:	ldrb	w8, [x0, #56]
   20130:	ldp	x20, x9, [x0]
   20134:	mov	w10, #0x90                  	// #144
   20138:	mov	x21, x3
   2013c:	mov	x22, x2
   20140:	mov	x23, x1
   20144:	mov	x19, x0
   20148:	and	w8, w8, w10
   2014c:	cmp	x9, #0x117
   20150:	stp	xzr, x3, [x0, #16]
   20154:	str	xzr, [x0, #48]
   20158:	strb	w8, [x0, #56]
   2015c:	b.ls	208a4 <rpl_re_compile_pattern@@Base+0x818>  // b.plast
   20160:	mov	w8, #0x118                 	// #280
   20164:	str	x8, [x19, #16]
   20168:	mov	x8, #0x5555555555555555    	// #6148914691236517205
   2016c:	movk	x8, #0x5554
   20170:	movk	x8, #0x555, lsl #48
   20174:	movi	v0.2d, #0x0
   20178:	cmp	x22, x8
   2017c:	mov	w8, #0xf                   	// #15
   20180:	str	xzr, [x20, #272]
   20184:	stp	q0, q0, [x20, #240]
   20188:	stp	q0, q0, [x20, #208]
   2018c:	stp	q0, q0, [x20, #176]
   20190:	stp	q0, q0, [x20, #144]
   20194:	stp	q0, q0, [x20, #112]
   20198:	stp	q0, q0, [x20, #80]
   2019c:	stp	q0, q0, [x20, #48]
   201a0:	stp	q0, q0, [x20, #16]
   201a4:	str	q0, [x20]
   201a8:	str	w8, [x20, #128]
   201ac:	b.hi	203d0 <rpl_re_compile_pattern@@Base+0x344>  // b.pmore
   201b0:	add	x24, x22, #0x1
   201b4:	lsl	x0, x24, #4
   201b8:	str	x24, [x20, #8]
   201bc:	bl	a550 <malloc@plt>
   201c0:	mov	w8, #0x1                   	// #1
   201c4:	str	x0, [x20]
   201c8:	mov	x25, x8
   201cc:	cmp	x8, x22
   201d0:	lsl	x8, x8, #1
   201d4:	b.ls	201c8 <rpl_re_compile_pattern@@Base+0x13c>  // b.plast
   201d8:	mov	w0, #0x18                  	// #24
   201dc:	mov	x1, x25
   201e0:	bl	a6c0 <calloc@plt>
   201e4:	sub	x8, x25, #0x1
   201e8:	str	x0, [x20, #64]
   201ec:	str	x8, [x20, #136]
   201f0:	bl	a9a0 <__ctype_get_mb_cur_max@plt>
   201f4:	str	w0, [x20, #180]
   201f8:	mov	w0, #0xe                   	// #14
   201fc:	bl	a520 <nl_langinfo@plt>
   20200:	ldrb	w8, [x0]
   20204:	orr	w8, w8, #0x20
   20208:	cmp	w8, #0x75
   2020c:	b.ne	20258 <rpl_re_compile_pattern@@Base+0x1cc>  // b.any
   20210:	ldrb	w8, [x0, #1]
   20214:	orr	w8, w8, #0x20
   20218:	cmp	w8, #0x74
   2021c:	b.ne	20258 <rpl_re_compile_pattern@@Base+0x1cc>  // b.any
   20220:	ldrb	w8, [x0, #2]
   20224:	orr	w8, w8, #0x20
   20228:	cmp	w8, #0x66
   2022c:	b.ne	20258 <rpl_re_compile_pattern@@Base+0x1cc>  // b.any
   20230:	ldrb	w8, [x0, #3]!
   20234:	adrp	x1, 31000 <vasnprintf@@Base+0x474>
   20238:	add	x1, x1, #0xb81
   2023c:	cmp	w8, #0x2d
   20240:	cinc	x0, x0, eq  // eq = none
   20244:	bl	a8f0 <strcmp@plt>
   20248:	cbnz	w0, 20258 <rpl_re_compile_pattern@@Base+0x1cc>
   2024c:	ldrb	w8, [x20, #176]
   20250:	orr	w8, w8, #0x4
   20254:	strb	w8, [x20, #176]
   20258:	ldrb	w8, [x20, #176]
   2025c:	ldr	w9, [x20, #180]
   20260:	and	w10, w8, #0xfffffff7
   20264:	cmp	w9, #0x2
   20268:	strb	w10, [x20, #176]
   2026c:	b.lt	202e8 <rpl_re_compile_pattern@@Base+0x25c>  // b.tstop
   20270:	tbnz	w8, #2, 202dc <rpl_re_compile_pattern@@Base+0x250>
   20274:	mov	w0, #0x20                  	// #32
   20278:	mov	w1, #0x1                   	// #1
   2027c:	bl	a6c0 <calloc@plt>
   20280:	str	x0, [x20, #120]
   20284:	cbz	x0, 203d0 <rpl_re_compile_pattern@@Base+0x344>
   20288:	mov	x25, xzr
   2028c:	mov	w26, #0x1                   	// #1
   20290:	b	202a0 <rpl_re_compile_pattern@@Base+0x214>
   20294:	add	x25, x25, #0x1
   20298:	cmp	x25, #0x40
   2029c:	b.eq	203e8 <rpl_re_compile_pattern@@Base+0x35c>  // b.none
   202a0:	mov	w0, w25
   202a4:	bl	a820 <btowc@plt>
   202a8:	cmn	w0, #0x1
   202ac:	b.eq	202c4 <rpl_re_compile_pattern@@Base+0x238>  // b.none
   202b0:	ldr	x8, [x20, #120]
   202b4:	lsl	x10, x26, x25
   202b8:	ldr	x9, [x8]
   202bc:	orr	x9, x9, x10
   202c0:	str	x9, [x8]
   202c4:	cmp	w25, w0
   202c8:	b.eq	20294 <rpl_re_compile_pattern@@Base+0x208>  // b.none
   202cc:	ldrb	w8, [x20, #176]
   202d0:	orr	w8, w8, #0x8
   202d4:	strb	w8, [x20, #176]
   202d8:	b	20294 <rpl_re_compile_pattern@@Base+0x208>
   202dc:	adrp	x8, 34000 <vasnprintf@@Base+0x3474>
   202e0:	add	x8, x8, #0x4c0
   202e4:	str	x8, [x20, #120]
   202e8:	ldr	x8, [x20]
   202ec:	cbz	x8, 203d0 <rpl_re_compile_pattern@@Base+0x344>
   202f0:	ldr	x8, [x20, #64]
   202f4:	cbz	x8, 203d0 <rpl_re_compile_pattern@@Base+0x344>
   202f8:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   202fc:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   20300:	ldr	x8, [x8, #3944]
   20304:	ldr	x9, [x9, #4040]
   20308:	stur	wzr, [x29, #-44]
   2030c:	orr	x8, x9, x8
   20310:	cbz	x8, 20324 <rpl_re_compile_pattern@@Base+0x298>
   20314:	add	x0, x20, #0xe8
   20318:	mov	x1, xzr
   2031c:	bl	a790 <pthread_mutex_init@plt>
   20320:	cbnz	w0, 203d0 <rpl_re_compile_pattern@@Base+0x344>
   20324:	ldr	x28, [x19, #40]
   20328:	and	x27, x21, #0x400000
   2032c:	movi	v0.2d, #0x0
   20330:	ubfx	x8, x21, #22, #1
   20334:	stp	q0, q0, [sp, #128]
   20338:	strb	w8, [sp, #144]
   2033c:	orr	x8, x27, x28
   20340:	cmp	x8, #0x0
   20344:	cset	w25, ne  // ne = any
   20348:	str	x23, [sp, #8]
   2034c:	stp	q0, q0, [sp, #80]
   20350:	stur	q0, [sp, #112]
   20354:	stp	q0, q0, [sp, #48]
   20358:	stp	q0, q0, [sp, #16]
   2035c:	stp	x22, x22, [sp, #88]
   20360:	str	x28, [sp, #128]
   20364:	strb	w25, [sp, #147]
   20368:	ldr	w8, [x20, #180]
   2036c:	cmp	x22, #0x1
   20370:	str	w8, [sp, #152]
   20374:	ldrb	w9, [x20, #176]
   20378:	stp	x22, x22, [sp, #104]
   2037c:	ubfx	w10, w9, #2, #1
   20380:	ubfx	w9, w9, #3, #1
   20384:	strb	w10, [sp, #145]
   20388:	strb	w9, [sp, #146]
   2038c:	b.lt	20500 <rpl_re_compile_pattern@@Base+0x474>  // b.tstop
   20390:	cmp	w8, #0x2
   20394:	b.lt	203b4 <rpl_re_compile_pattern@@Base+0x328>  // b.tstop
   20398:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
   2039c:	cmp	x22, x8
   203a0:	b.hi	21370 <rpl_re_compile_pattern@@Base+0x12e4>  // b.pmore
   203a4:	lsl	x0, x24, #2
   203a8:	bl	a550 <malloc@plt>
   203ac:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   203b0:	str	x0, [sp, #24]
   203b4:	cbz	w25, 2050c <rpl_re_compile_pattern@@Base+0x480>
   203b8:	mov	x0, x24
   203bc:	bl	a550 <malloc@plt>
   203c0:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   203c4:	mov	w25, #0x1                   	// #1
   203c8:	str	x0, [sp, #16]
   203cc:	b	20510 <rpl_re_compile_pattern@@Base+0x484>
   203d0:	mov	w21, #0xc                   	// #12
   203d4:	mov	x0, x20
   203d8:	stur	w21, [x29, #-44]
   203dc:	bl	21ea0 <rpl_regfree@@Base+0x68>
   203e0:	stp	xzr, xzr, [x19]
   203e4:	b	2134c <rpl_re_compile_pattern@@Base+0x12c0>
   203e8:	mov	x26, xzr
   203ec:	mov	w27, #0x1                   	// #1
   203f0:	b	20400 <rpl_re_compile_pattern@@Base+0x374>
   203f4:	add	x26, x26, #0x1
   203f8:	cmp	x26, #0x40
   203fc:	b.eq	20440 <rpl_re_compile_pattern@@Base+0x3b4>  // b.none
   20400:	add	x25, x26, #0x40
   20404:	mov	w0, w25
   20408:	bl	a820 <btowc@plt>
   2040c:	cmn	w0, #0x1
   20410:	b.eq	20428 <rpl_re_compile_pattern@@Base+0x39c>  // b.none
   20414:	ldr	x8, [x20, #120]
   20418:	lsl	x10, x27, x26
   2041c:	ldr	x9, [x8, #8]
   20420:	orr	x9, x9, x10
   20424:	str	x9, [x8, #8]
   20428:	cmp	w25, w0
   2042c:	b.eq	203f4 <rpl_re_compile_pattern@@Base+0x368>  // b.none
   20430:	ldrb	w8, [x20, #176]
   20434:	orr	w8, w8, #0x8
   20438:	strb	w8, [x20, #176]
   2043c:	b	203f4 <rpl_re_compile_pattern@@Base+0x368>
   20440:	mov	x26, xzr
   20444:	mov	w27, #0x1                   	// #1
   20448:	b	20458 <rpl_re_compile_pattern@@Base+0x3cc>
   2044c:	add	x26, x26, #0x1
   20450:	cmp	x26, #0x40
   20454:	b.eq	204a0 <rpl_re_compile_pattern@@Base+0x414>  // b.none
   20458:	add	x25, x26, #0x80
   2045c:	mov	w0, w25
   20460:	bl	a820 <btowc@plt>
   20464:	cmn	w0, #0x1
   20468:	b.eq	20480 <rpl_re_compile_pattern@@Base+0x3f4>  // b.none
   2046c:	ldr	x8, [x20, #120]
   20470:	lsl	x10, x27, x26
   20474:	ldr	x9, [x8, #16]
   20478:	orr	x9, x9, x10
   2047c:	str	x9, [x8, #16]
   20480:	cmp	w25, #0x7f
   20484:	b.hi	2044c <rpl_re_compile_pattern@@Base+0x3c0>  // b.pmore
   20488:	cmp	w25, w0
   2048c:	b.eq	2044c <rpl_re_compile_pattern@@Base+0x3c0>  // b.none
   20490:	ldrb	w8, [x20, #176]
   20494:	orr	w8, w8, #0x8
   20498:	strb	w8, [x20, #176]
   2049c:	b	2044c <rpl_re_compile_pattern@@Base+0x3c0>
   204a0:	mov	x26, xzr
   204a4:	mov	w27, #0x1                   	// #1
   204a8:	b	204b8 <rpl_re_compile_pattern@@Base+0x42c>
   204ac:	add	x26, x26, #0x1
   204b0:	cmp	x26, #0x40
   204b4:	b.eq	202e8 <rpl_re_compile_pattern@@Base+0x25c>  // b.none
   204b8:	add	x25, x26, #0xc0
   204bc:	mov	w0, w25
   204c0:	bl	a820 <btowc@plt>
   204c4:	cmn	w0, #0x1
   204c8:	b.eq	204e0 <rpl_re_compile_pattern@@Base+0x454>  // b.none
   204cc:	ldr	x8, [x20, #120]
   204d0:	lsl	x10, x27, x26
   204d4:	ldr	x9, [x8, #24]
   204d8:	orr	x9, x9, x10
   204dc:	str	x9, [x8, #24]
   204e0:	cmp	w25, #0x7f
   204e4:	b.hi	204ac <rpl_re_compile_pattern@@Base+0x420>  // b.pmore
   204e8:	cmp	w25, w0
   204ec:	b.eq	204ac <rpl_re_compile_pattern@@Base+0x420>  // b.none
   204f0:	ldrb	w8, [x20, #176]
   204f4:	orr	w8, w8, #0x8
   204f8:	strb	w8, [x20, #176]
   204fc:	b	204ac <rpl_re_compile_pattern@@Base+0x420>
   20500:	mov	x0, xzr
   20504:	mov	x24, xzr
   20508:	b	20518 <rpl_re_compile_pattern@@Base+0x48c>
   2050c:	mov	x0, xzr
   20510:	str	x24, [sp, #72]
   20514:	ldr	w8, [x20, #180]
   20518:	cmp	w25, #0x0
   2051c:	csel	x9, x23, x0, eq  // eq = none
   20520:	cmp	w8, #0x2
   20524:	str	x9, [sp, #16]
   20528:	cbz	x27, 20634 <rpl_re_compile_pattern@@Base+0x5a8>
   2052c:	b.ge	2059c <rpl_re_compile_pattern@@Base+0x510>  // b.tcont
   20530:	cmp	x24, x22
   20534:	csel	x22, x22, x24, gt
   20538:	cmp	x22, #0x1
   2053c:	b.lt	20674 <rpl_re_compile_pattern@@Base+0x5e8>  // b.tstop
   20540:	bl	a740 <__ctype_toupper_loc@plt>
   20544:	mov	x9, xzr
   20548:	mov	x8, xzr
   2054c:	add	x9, x23, x9
   20550:	ldrb	w9, [x9, x8]
   20554:	cbz	x28, 20578 <rpl_re_compile_pattern@@Base+0x4ec>
   20558:	b	20574 <rpl_re_compile_pattern@@Base+0x4e8>
   2055c:	ldr	x23, [sp, #8]
   20560:	ldr	x9, [sp, #48]
   20564:	ldr	x28, [sp, #128]
   20568:	add	x9, x23, x9
   2056c:	ldrb	w9, [x9, x8]
   20570:	cbz	x28, 20578 <rpl_re_compile_pattern@@Base+0x4ec>
   20574:	ldrb	w9, [x28, x9]
   20578:	ldr	x10, [x0]
   2057c:	ldr	x11, [sp, #16]
   20580:	ldr	w9, [x10, w9, uxtw #2]
   20584:	strb	w9, [x11, x8]
   20588:	add	x8, x8, #0x1
   2058c:	cmp	x8, x22
   20590:	b.lt	2055c <rpl_re_compile_pattern@@Base+0x4d0>  // b.tstop
   20594:	b	20678 <rpl_re_compile_pattern@@Base+0x5ec>
   20598:	str	x23, [sp, #72]
   2059c:	add	x0, sp, #0x8
   205a0:	bl	24fa8 <rpl_re_set_registers@@Base+0x94>
   205a4:	cbnz	w0, 21374 <rpl_re_compile_pattern@@Base+0x12e8>
   205a8:	ldr	x8, [sp, #64]
   205ac:	cmp	x8, x22
   205b0:	b.ge	206d8 <rpl_re_compile_pattern@@Base+0x64c>  // b.tcont
   205b4:	ldr	x8, [sp, #56]
   205b8:	ldrsw	x9, [x20, #180]
   205bc:	ldr	x24, [sp, #72]
   205c0:	add	x8, x8, x9
   205c4:	cmp	x24, x8
   205c8:	b.gt	206d8 <rpl_re_compile_pattern@@Base+0x64c>
   205cc:	ldr	w8, [sp, #152]
   205d0:	lsl	x23, x24, #1
   205d4:	cmp	w8, #0x2
   205d8:	b.lt	20614 <rpl_re_compile_pattern@@Base+0x588>  // b.tstop
   205dc:	lsr	x8, x23, #61
   205e0:	cbnz	x8, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   205e4:	ldr	x0, [sp, #24]
   205e8:	lsl	x1, x24, #3
   205ec:	bl	a730 <realloc@plt>
   205f0:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   205f4:	mov	x8, x0
   205f8:	ldr	x0, [sp, #32]
   205fc:	str	x8, [sp, #24]
   20600:	cbz	x0, 20614 <rpl_re_compile_pattern@@Base+0x588>
   20604:	lsl	x1, x24, #4
   20608:	bl	a730 <realloc@plt>
   2060c:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   20610:	str	x0, [sp, #32]
   20614:	ldrb	w8, [sp, #147]
   20618:	cbz	w8, 20598 <rpl_re_compile_pattern@@Base+0x50c>
   2061c:	ldr	x0, [sp, #16]
   20620:	mov	x1, x23
   20624:	bl	a730 <realloc@plt>
   20628:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   2062c:	str	x0, [sp, #16]
   20630:	b	20598 <rpl_re_compile_pattern@@Base+0x50c>
   20634:	b.lt	20644 <rpl_re_compile_pattern@@Base+0x5b8>  // b.tstop
   20638:	add	x0, sp, #0x8
   2063c:	bl	25658 <rpl_re_set_registers@@Base+0x744>
   20640:	b	206d8 <rpl_re_compile_pattern@@Base+0x64c>
   20644:	cbz	x28, 20680 <rpl_re_compile_pattern@@Base+0x5f4>
   20648:	cmp	x24, x22
   2064c:	csel	x8, x22, x24, gt
   20650:	cmp	x8, #0x1
   20654:	b.lt	20688 <rpl_re_compile_pattern@@Base+0x5fc>  // b.tstop
   20658:	ldrb	w10, [x23]
   2065c:	cmp	x8, #0x1
   20660:	ldrb	w10, [x28, x10]
   20664:	strb	w10, [x9]
   20668:	b.ne	20690 <rpl_re_compile_pattern@@Base+0x604>  // b.any
   2066c:	mov	w9, #0x1                   	// #1
   20670:	b	206d4 <rpl_re_compile_pattern@@Base+0x648>
   20674:	mov	x8, xzr
   20678:	stp	x8, x8, [sp, #56]
   2067c:	b	206d8 <rpl_re_compile_pattern@@Base+0x64c>
   20680:	stp	x24, x24, [sp, #56]
   20684:	b	206d8 <rpl_re_compile_pattern@@Base+0x64c>
   20688:	mov	x9, xzr
   2068c:	b	206d4 <rpl_re_compile_pattern@@Base+0x648>
   20690:	ldrb	w10, [x23, #1]
   20694:	cmp	x8, #0x3
   20698:	ldrb	w10, [x28, x10]
   2069c:	strb	w10, [x9, #1]
   206a0:	mov	w9, #0x2                   	// #2
   206a4:	b.lt	206d4 <rpl_re_compile_pattern@@Base+0x648>  // b.tstop
   206a8:	ldr	x10, [sp, #8]
   206ac:	ldr	x11, [sp, #48]
   206b0:	ldr	x12, [sp, #128]
   206b4:	add	x10, x10, x11
   206b8:	ldrb	w10, [x10, x9]
   206bc:	ldr	x11, [sp, #16]
   206c0:	ldrb	w10, [x12, x10]
   206c4:	strb	w10, [x11, x9]
   206c8:	add	x9, x9, #0x1
   206cc:	cmp	x9, x8
   206d0:	b.lt	206a8 <rpl_re_compile_pattern@@Base+0x61c>  // b.tstop
   206d4:	stp	x9, x9, [sp, #56]
   206d8:	stur	wzr, [x29, #-44]
   206dc:	ldr	x22, [x19]
   206e0:	orr	x2, x21, #0x800000
   206e4:	sub	x0, x29, #0x28
   206e8:	add	x1, sp, #0x8
   206ec:	str	xzr, [x19, #48]
   206f0:	str	x21, [x22, #216]
   206f4:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   206f8:	ldr	x8, [sp, #80]
   206fc:	sub	x2, x29, #0x28
   20700:	sub	x5, x29, #0x2c
   20704:	mov	x1, x19
   20708:	add	x8, x8, w0, sxtw
   2070c:	add	x0, sp, #0x8
   20710:	mov	x3, x21
   20714:	mov	x4, xzr
   20718:	str	x8, [sp, #80]
   2071c:	bl	25860 <rpl_re_set_registers@@Base+0x94c>
   20720:	mov	x21, x0
   20724:	cbnz	x0, 20730 <rpl_re_compile_pattern@@Base+0x6a4>
   20728:	ldur	w8, [x29, #-44]
   2072c:	cbnz	w8, 20914 <rpl_re_compile_pattern@@Base+0x888>
   20730:	ldr	w8, [x22, #128]
   20734:	cmp	w8, #0xf
   20738:	b.eq	208c4 <rpl_re_compile_pattern@@Base+0x838>  // b.none
   2073c:	ldr	x0, [x22, #112]
   20740:	add	w9, w8, #0x1
   20744:	sxtw	x8, w8
   20748:	add	x23, x0, x8, lsl #6
   2074c:	mov	w10, #0x2                   	// #2
   20750:	mov	x11, #0xffffffffffffffff    	// #-1
   20754:	str	w9, [x22, #128]
   20758:	str	xzr, [x23, #8]!
   2075c:	stp	xzr, xzr, [x23, #16]
   20760:	str	xzr, [x23, #8]
   20764:	str	w10, [x23, #48]
   20768:	str	xzr, [x23, #32]
   2076c:	str	x11, [x23, #56]
   20770:	mov	x8, x23
   20774:	cbz	x21, 207c0 <rpl_re_compile_pattern@@Base+0x734>
   20778:	ldr	w8, [x22, #128]
   2077c:	cmp	w8, #0xf
   20780:	b.eq	208e8 <rpl_re_compile_pattern@@Base+0x85c>  // b.none
   20784:	ldr	x0, [x22, #112]
   20788:	add	w9, w8, #0x1
   2078c:	sxtw	x8, w8
   20790:	add	x8, x0, x8, lsl #6
   20794:	mov	w10, #0x10                  	// #16
   20798:	mov	x11, #0xffffffffffffffff    	// #-1
   2079c:	str	w9, [x22, #128]
   207a0:	str	xzr, [x8, #8]!
   207a4:	stp	x21, x23, [x8, #8]
   207a8:	str	w10, [x8, #48]
   207ac:	stp	xzr, xzr, [x8, #24]
   207b0:	str	x11, [x8, #56]
   207b4:	str	x8, [x21]
   207b8:	cbz	x23, 2090c <rpl_re_compile_pattern@@Base+0x880>
   207bc:	str	x8, [x23]
   207c0:	cbz	x23, 2090c <rpl_re_compile_pattern@@Base+0x880>
   207c4:	cbz	x8, 2090c <rpl_re_compile_pattern@@Base+0x880>
   207c8:	str	x8, [x20, #104]
   207cc:	ldr	x21, [x19]
   207d0:	ldr	x8, [x21, #8]
   207d4:	lsl	x0, x8, #3
   207d8:	bl	a550 <malloc@plt>
   207dc:	ldr	x8, [x21, #8]
   207e0:	str	x0, [x21, #24]
   207e4:	lsl	x0, x8, #3
   207e8:	bl	a550 <malloc@plt>
   207ec:	ldr	x8, [x21, #8]
   207f0:	str	x0, [x21, #32]
   207f4:	add	x8, x8, x8, lsl #1
   207f8:	lsl	x0, x8, #3
   207fc:	bl	a550 <malloc@plt>
   20800:	ldr	x8, [x21, #8]
   20804:	str	x0, [x21, #40]
   20808:	add	x8, x8, x8, lsl #1
   2080c:	lsl	x0, x8, #3
   20810:	bl	a550 <malloc@plt>
   20814:	ldr	x9, [x21, #24]
   20818:	str	x0, [x21, #48]
   2081c:	cbz	x9, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   20820:	ldr	x9, [x21, #32]
   20824:	cbz	x9, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   20828:	mov	x8, x0
   2082c:	mov	w0, #0xc                   	// #12
   20830:	cbz	x8, 21374 <rpl_re_compile_pattern@@Base+0x12e8>
   20834:	ldr	x8, [x21, #40]
   20838:	cbz	x8, 21374 <rpl_re_compile_pattern@@Base+0x12e8>
   2083c:	ldr	x22, [x19, #48]
   20840:	lsl	x0, x22, #3
   20844:	bl	a550 <malloc@plt>
   20848:	str	x0, [x21, #224]
   2084c:	cbz	x0, 20b80 <rpl_re_compile_pattern@@Base+0xaf4>
   20850:	cbz	x22, 209c8 <rpl_re_compile_pattern@@Base+0x93c>
   20854:	cmp	x22, #0x4
   20858:	b.cs	20864 <rpl_re_compile_pattern@@Base+0x7d8>  // b.hs, b.nlast
   2085c:	mov	x8, xzr
   20860:	b	209b8 <rpl_re_compile_pattern@@Base+0x92c>
   20864:	adrp	x10, 34000 <vasnprintf@@Base+0x3474>
   20868:	ldr	q0, [x10, #304]
   2086c:	mov	w10, #0x2                   	// #2
   20870:	and	x8, x22, #0xfffffffffffffffc
   20874:	dup	v1.2d, x10
   20878:	mov	w10, #0x4                   	// #4
   2087c:	add	x9, x0, #0x10
   20880:	dup	v2.2d, x10
   20884:	mov	x10, x8
   20888:	add	v3.2d, v0.2d, v1.2d
   2088c:	stp	q0, q3, [x9, #-16]
   20890:	add	v0.2d, v0.2d, v2.2d
   20894:	subs	x10, x10, #0x4
   20898:	add	x9, x9, #0x20
   2089c:	b.ne	20888 <rpl_re_compile_pattern@@Base+0x7fc>  // b.any
   208a0:	b	209c0 <rpl_re_compile_pattern@@Base+0x934>
   208a4:	mov	w1, #0x118                 	// #280
   208a8:	mov	x0, x20
   208ac:	bl	a730 <realloc@plt>
   208b0:	cbz	x0, 209a0 <rpl_re_compile_pattern@@Base+0x914>
   208b4:	mov	x20, x0
   208b8:	mov	w8, #0x118                 	// #280
   208bc:	stp	x0, x8, [x19]
   208c0:	b	20160 <rpl_re_compile_pattern@@Base+0xd4>
   208c4:	mov	w0, #0x3c8                 	// #968
   208c8:	bl	a550 <malloc@plt>
   208cc:	cbz	x0, 209a8 <rpl_re_compile_pattern@@Base+0x91c>
   208d0:	ldr	x9, [x22, #112]
   208d4:	mov	w8, wzr
   208d8:	str	x9, [x0]
   208dc:	str	x0, [x22, #112]
   208e0:	str	wzr, [x22, #128]
   208e4:	b	20740 <rpl_re_compile_pattern@@Base+0x6b4>
   208e8:	mov	w0, #0x3c8                 	// #968
   208ec:	bl	a550 <malloc@plt>
   208f0:	cbz	x0, 2090c <rpl_re_compile_pattern@@Base+0x880>
   208f4:	ldr	x9, [x22, #112]
   208f8:	mov	w8, wzr
   208fc:	str	x9, [x0]
   20900:	str	x0, [x22, #112]
   20904:	str	wzr, [x22, #128]
   20908:	b	20788 <rpl_re_compile_pattern@@Base+0x6fc>
   2090c:	mov	w8, #0xc                   	// #12
   20910:	stur	w8, [x29, #-44]
   20914:	str	xzr, [x20, #104]
   20918:	ldr	x21, [x19]
   2091c:	ldr	x0, [x21, #112]
   20920:	cbz	x0, 20934 <rpl_re_compile_pattern@@Base+0x8a8>
   20924:	ldr	x22, [x0]
   20928:	bl	a970 <free@plt>
   2092c:	mov	x0, x22
   20930:	cbnz	x22, 20924 <rpl_re_compile_pattern@@Base+0x898>
   20934:	ldr	x0, [x21, #32]
   20938:	mov	w8, #0xf                   	// #15
   2093c:	str	w8, [x21, #128]
   20940:	stp	xzr, xzr, [x21, #104]
   20944:	bl	a970 <free@plt>
   20948:	str	xzr, [x21, #32]
   2094c:	ldr	x0, [sp, #24]
   20950:	bl	a970 <free@plt>
   20954:	ldr	x0, [sp, #32]
   20958:	bl	a970 <free@plt>
   2095c:	ldrb	w8, [sp, #147]
   20960:	cbz	w8, 2096c <rpl_re_compile_pattern@@Base+0x8e0>
   20964:	ldr	x0, [sp, #16]
   20968:	bl	a970 <free@plt>
   2096c:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   20970:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   20974:	ldr	x8, [x8, #3944]
   20978:	ldr	x9, [x9, #4040]
   2097c:	orr	x8, x9, x8
   20980:	cbz	x8, 2098c <rpl_re_compile_pattern@@Base+0x900>
   20984:	add	x0, x20, #0xe8
   20988:	bl	ab20 <pthread_mutex_destroy@plt>
   2098c:	mov	x0, x20
   20990:	bl	21ea0 <rpl_regfree@@Base+0x68>
   20994:	stp	xzr, xzr, [x19]
   20998:	ldur	w21, [x29, #-44]
   2099c:	b	2134c <rpl_re_compile_pattern@@Base+0x12c0>
   209a0:	mov	w21, #0xc                   	// #12
   209a4:	b	2134c <rpl_re_compile_pattern@@Base+0x12c0>
   209a8:	mov	x23, xzr
   209ac:	mov	x8, x23
   209b0:	cbnz	x21, 20778 <rpl_re_compile_pattern@@Base+0x6ec>
   209b4:	b	207c0 <rpl_re_compile_pattern@@Base+0x734>
   209b8:	str	x8, [x0, x8, lsl #3]
   209bc:	add	x8, x8, #0x1
   209c0:	cmp	x22, x8
   209c4:	b.ne	209b8 <rpl_re_compile_pattern@@Base+0x92c>  // b.any
   209c8:	ldr	x9, [x21, #104]
   209cc:	ldrb	w8, [x9, #48]
   209d0:	cmp	w8, #0x11
   209d4:	b.eq	20a0c <rpl_re_compile_pattern@@Base+0x980>  // b.none
   209d8:	cmp	w8, #0x4
   209dc:	b.ne	20a5c <rpl_re_compile_pattern@@Base+0x9d0>  // b.any
   209e0:	ldr	x8, [x9, #40]
   209e4:	mov	w11, #0x1                   	// #1
   209e8:	sbfiz	x8, x8, #3, #32
   209ec:	ldr	x8, [x0, x8]
   209f0:	str	x8, [x9, #40]
   209f4:	ldr	x10, [x21, #160]
   209f8:	lsl	w8, w11, w8
   209fc:	sxtw	x8, w8
   20a00:	orr	x8, x10, x8
   20a04:	str	x8, [x21, #160]
   20a08:	b	20a5c <rpl_re_compile_pattern@@Base+0x9d0>
   20a0c:	ldr	x8, [x9, #8]
   20a10:	cbz	x8, 20a5c <rpl_re_compile_pattern@@Base+0x9d0>
   20a14:	ldrb	w10, [x8, #48]
   20a18:	cmp	w10, #0x11
   20a1c:	b.ne	20a5c <rpl_re_compile_pattern@@Base+0x9d0>  // b.any
   20a20:	ldr	x10, [x8, #8]
   20a24:	ldr	x8, [x8, #40]
   20a28:	str	x10, [x9, #8]
   20a2c:	cbz	x10, 20a34 <rpl_re_compile_pattern@@Base+0x9a8>
   20a30:	str	x9, [x10]
   20a34:	ldr	x10, [x9, #40]
   20a38:	cmp	x8, #0x3f
   20a3c:	ldr	x10, [x0, x10, lsl #3]
   20a40:	str	x10, [x0, x8, lsl #3]
   20a44:	b.gt	20a5c <rpl_re_compile_pattern@@Base+0x9d0>
   20a48:	ldr	x10, [x21, #160]
   20a4c:	mov	w11, #0x1                   	// #1
   20a50:	lsl	x8, x11, x8
   20a54:	bic	x8, x10, x8
   20a58:	b	20a04 <rpl_re_compile_pattern@@Base+0x978>
   20a5c:	mov	w8, #0x1                   	// #1
   20a60:	ldr	x10, [x9, #8]
   20a64:	cbnz	x10, 20a90 <rpl_re_compile_pattern@@Base+0xa04>
   20a68:	mov	x11, xzr
   20a6c:	b	20a78 <rpl_re_compile_pattern@@Base+0x9ec>
   20a70:	ldr	x9, [x11]
   20a74:	cbz	x9, 20b3c <rpl_re_compile_pattern@@Base+0xab0>
   20a78:	ldr	x10, [x9, #16]
   20a7c:	mov	x12, x11
   20a80:	mov	x11, x9
   20a84:	cmp	x10, x12
   20a88:	b.eq	20a70 <rpl_re_compile_pattern@@Base+0x9e4>  // b.none
   20a8c:	cbz	x10, 20a70 <rpl_re_compile_pattern@@Base+0x9e4>
   20a90:	ldrb	w9, [x10, #48]
   20a94:	cmp	w9, #0x11
   20a98:	b.eq	20ae0 <rpl_re_compile_pattern@@Base+0xa54>  // b.none
   20a9c:	cmp	w9, #0x4
   20aa0:	mov	x9, x10
   20aa4:	b.ne	20a60 <rpl_re_compile_pattern@@Base+0x9d4>  // b.any
   20aa8:	ldr	x11, [x21, #224]
   20aac:	mov	x9, x10
   20ab0:	cbz	x11, 20a60 <rpl_re_compile_pattern@@Base+0x9d4>
   20ab4:	ldr	x9, [x10, #40]
   20ab8:	sbfiz	x9, x9, #3, #32
   20abc:	ldr	x9, [x11, x9]
   20ac0:	str	x9, [x10, #40]
   20ac4:	ldr	x11, [x21, #160]
   20ac8:	lsl	w9, w8, w9
   20acc:	sxtw	x9, w9
   20ad0:	orr	x9, x11, x9
   20ad4:	str	x9, [x21, #160]
   20ad8:	mov	x9, x10
   20adc:	b	20a60 <rpl_re_compile_pattern@@Base+0x9d4>
   20ae0:	ldr	x11, [x10, #8]
   20ae4:	mov	x9, x10
   20ae8:	cbz	x11, 20a60 <rpl_re_compile_pattern@@Base+0x9d4>
   20aec:	ldrb	w9, [x11, #48]
   20af0:	cmp	w9, #0x11
   20af4:	mov	x9, x10
   20af8:	b.ne	20a60 <rpl_re_compile_pattern@@Base+0x9d4>  // b.any
   20afc:	ldr	x9, [x11, #8]
   20b00:	ldr	x11, [x11, #40]
   20b04:	str	x9, [x10, #8]
   20b08:	cbz	x9, 20b10 <rpl_re_compile_pattern@@Base+0xa84>
   20b0c:	str	x10, [x9]
   20b10:	ldr	x9, [x21, #224]
   20b14:	ldr	x12, [x10, #40]
   20b18:	cmp	x11, #0x3f
   20b1c:	ldr	x12, [x9, x12, lsl #3]
   20b20:	str	x12, [x9, x11, lsl #3]
   20b24:	mov	x9, x10
   20b28:	b.gt	20a60 <rpl_re_compile_pattern@@Base+0x9d4>
   20b2c:	ldr	x9, [x21, #160]
   20b30:	lsl	x11, x8, x11
   20b34:	bic	x9, x9, x11
   20b38:	b	20ad4 <rpl_re_compile_pattern@@Base+0xa48>
   20b3c:	ldr	x8, [x19, #48]
   20b40:	cbz	x8, 20b68 <rpl_re_compile_pattern@@Base+0xadc>
   20b44:	ldr	x0, [x21, #224]
   20b48:	mov	x9, xzr
   20b4c:	ldr	x10, [x0, x9, lsl #3]
   20b50:	cmp	x9, x10
   20b54:	b.ne	20b70 <rpl_re_compile_pattern@@Base+0xae4>  // b.any
   20b58:	add	x9, x9, #0x1
   20b5c:	cmp	x8, x9
   20b60:	b.ne	20b4c <rpl_re_compile_pattern@@Base+0xac0>  // b.any
   20b64:	b	20b78 <rpl_re_compile_pattern@@Base+0xaec>
   20b68:	ldr	x0, [x21, #224]
   20b6c:	b	20b78 <rpl_re_compile_pattern@@Base+0xaec>
   20b70:	cmp	x8, x9
   20b74:	b.ne	20b80 <rpl_re_compile_pattern@@Base+0xaf4>  // b.any
   20b78:	bl	a970 <free@plt>
   20b7c:	str	xzr, [x21, #224]
   20b80:	ldr	x8, [x21, #104]
   20b84:	mov	x22, x8
   20b88:	ldr	x8, [x8, #8]
   20b8c:	cbnz	x8, 20b84 <rpl_re_compile_pattern@@Base+0xaf8>
   20b90:	ldr	x8, [x22, #16]
   20b94:	cbnz	x8, 20b84 <rpl_re_compile_pattern@@Base+0xaf8>
   20b98:	mov	x3, xzr
   20b9c:	b	20ba8 <rpl_re_compile_pattern@@Base+0xb1c>
   20ba0:	ldr	x3, [x9, #8]
   20ba4:	mov	x22, x9
   20ba8:	stur	wzr, [x29, #-40]
   20bac:	cbz	x3, 20bd8 <rpl_re_compile_pattern@@Base+0xb4c>
   20bb0:	ldrb	w8, [x3, #48]
   20bb4:	cmp	w8, #0x11
   20bb8:	b.ne	20bd8 <rpl_re_compile_pattern@@Base+0xb4c>  // b.any
   20bbc:	ldr	x1, [x19]
   20bc0:	ldrb	w2, [x19, #56]
   20bc4:	sub	x0, x29, #0x28
   20bc8:	bl	29828 <rpl_re_set_registers@@Base+0x4914>
   20bcc:	str	x0, [x22, #8]
   20bd0:	cbz	x0, 20bd8 <rpl_re_compile_pattern@@Base+0xb4c>
   20bd4:	str	x22, [x0]
   20bd8:	ldr	x3, [x22, #16]
   20bdc:	cbz	x3, 20c08 <rpl_re_compile_pattern@@Base+0xb7c>
   20be0:	ldrb	w8, [x3, #48]
   20be4:	cmp	w8, #0x11
   20be8:	b.ne	20c08 <rpl_re_compile_pattern@@Base+0xb7c>  // b.any
   20bec:	ldr	x1, [x19]
   20bf0:	ldrb	w2, [x19, #56]
   20bf4:	sub	x0, x29, #0x28
   20bf8:	bl	29828 <rpl_re_set_registers@@Base+0x4914>
   20bfc:	str	x0, [x22, #16]
   20c00:	cbz	x0, 20c08 <rpl_re_compile_pattern@@Base+0xb7c>
   20c04:	str	x22, [x0]
   20c08:	ldur	w0, [x29, #-40]
   20c0c:	cbnz	w0, 21374 <rpl_re_compile_pattern@@Base+0x12e8>
   20c10:	ldr	x9, [x22]
   20c14:	cbz	x9, 20c2c <rpl_re_compile_pattern@@Base+0xba0>
   20c18:	ldr	x8, [x9, #16]
   20c1c:	cmp	x8, x22
   20c20:	b.eq	20ba0 <rpl_re_compile_pattern@@Base+0xb14>  // b.none
   20c24:	cbz	x8, 20ba0 <rpl_re_compile_pattern@@Base+0xb14>
   20c28:	b	20b84 <rpl_re_compile_pattern@@Base+0xaf8>
   20c2c:	ldr	x8, [x21, #104]
   20c30:	mov	x22, x8
   20c34:	ldr	x8, [x8, #8]
   20c38:	cbnz	x8, 20c30 <rpl_re_compile_pattern@@Base+0xba4>
   20c3c:	ldr	x8, [x22, #16]
   20c40:	cbnz	x8, 20c30 <rpl_re_compile_pattern@@Base+0xba4>
   20c44:	ldrb	w8, [x22, #48]
   20c48:	cmp	w8, #0x10
   20c4c:	b.ne	20c68 <rpl_re_compile_pattern@@Base+0xbdc>  // b.any
   20c50:	ldr	x8, [x22, #8]
   20c54:	ldr	x9, [x8, #24]
   20c58:	str	x9, [x22, #24]
   20c5c:	ldr	x8, [x8, #56]
   20c60:	str	x8, [x22, #56]
   20c64:	b	20ca8 <rpl_re_compile_pattern@@Base+0xc1c>
   20c68:	ldp	x1, x2, [x22, #40]
   20c6c:	mov	x0, x21
   20c70:	str	x22, [x22, #24]
   20c74:	bl	29aac <rpl_re_set_registers@@Base+0x4b98>
   20c78:	cmn	x0, #0x1
   20c7c:	str	x0, [x22, #56]
   20c80:	b.eq	21370 <rpl_re_compile_pattern@@Base+0x12e4>  // b.none
   20c84:	ldrb	w8, [x22, #48]
   20c88:	cmp	w8, #0xc
   20c8c:	b.ne	20ca8 <rpl_re_compile_pattern@@Base+0xc1c>  // b.any
   20c90:	ldr	x8, [x21]
   20c94:	ldr	w9, [x22, #40]
   20c98:	add	x8, x8, x0, lsl #4
   20c9c:	ldr	w10, [x8, #8]
   20ca0:	bfi	w10, w9, #8, #10
   20ca4:	str	w10, [x8, #8]
   20ca8:	ldr	x9, [x22]
   20cac:	cbz	x9, 20ccc <rpl_re_compile_pattern@@Base+0xc40>
   20cb0:	ldr	x8, [x9, #16]
   20cb4:	cmp	x8, x22
   20cb8:	mov	x22, x9
   20cbc:	b.eq	20c44 <rpl_re_compile_pattern@@Base+0xbb8>  // b.none
   20cc0:	mov	x22, x9
   20cc4:	cbz	x8, 20c44 <rpl_re_compile_pattern@@Base+0xbb8>
   20cc8:	b	20c30 <rpl_re_compile_pattern@@Base+0xba4>
   20ccc:	ldr	x22, [x21, #104]
   20cd0:	ldrb	w8, [x22, #48]
   20cd4:	cmp	w8, #0x10
   20cd8:	b.eq	20cf0 <rpl_re_compile_pattern@@Base+0xc64>  // b.none
   20cdc:	cmp	w8, #0xb
   20ce0:	b.ne	20d00 <rpl_re_compile_pattern@@Base+0xc74>  // b.any
   20ce4:	ldr	x8, [x22, #8]
   20ce8:	str	x22, [x8, #32]
   20cec:	b	20d20 <rpl_re_compile_pattern@@Base+0xc94>
   20cf0:	ldp	x8, x9, [x22, #8]
   20cf4:	ldr	x10, [x9, #24]
   20cf8:	str	x10, [x8, #32]
   20cfc:	b	20d18 <rpl_re_compile_pattern@@Base+0xc8c>
   20d00:	ldr	x8, [x22, #8]
   20d04:	cbz	x8, 20d10 <rpl_re_compile_pattern@@Base+0xc84>
   20d08:	ldr	x9, [x22, #32]
   20d0c:	str	x9, [x8, #32]
   20d10:	ldr	x9, [x22, #16]
   20d14:	cbz	x9, 20d20 <rpl_re_compile_pattern@@Base+0xc94>
   20d18:	ldr	x10, [x22, #32]
   20d1c:	str	x10, [x9, #32]
   20d20:	mov	x10, x22
   20d24:	b	20d40 <rpl_re_compile_pattern@@Base+0xcb4>
   20d28:	ldp	x8, x10, [x9, #8]
   20d2c:	ldr	x11, [x10, #24]
   20d30:	str	x11, [x8, #32]
   20d34:	ldr	x11, [x9, #32]
   20d38:	str	x11, [x10, #32]
   20d3c:	mov	x10, x9
   20d40:	mov	x9, x8
   20d44:	cbnz	x8, 20d6c <rpl_re_compile_pattern@@Base+0xce0>
   20d48:	b	20d54 <rpl_re_compile_pattern@@Base+0xcc8>
   20d4c:	ldr	x10, [x8]
   20d50:	cbz	x10, 20dbc <rpl_re_compile_pattern@@Base+0xd30>
   20d54:	ldr	x9, [x10, #16]
   20d58:	mov	x11, x8
   20d5c:	mov	x8, x10
   20d60:	cmp	x9, x11
   20d64:	b.eq	20d4c <rpl_re_compile_pattern@@Base+0xcc0>  // b.none
   20d68:	cbz	x9, 20d4c <rpl_re_compile_pattern@@Base+0xcc0>
   20d6c:	ldrb	w8, [x9, #48]
   20d70:	cmp	w8, #0x10
   20d74:	b.eq	20d28 <rpl_re_compile_pattern@@Base+0xc9c>  // b.none
   20d78:	cmp	w8, #0xb
   20d7c:	b.ne	20d90 <rpl_re_compile_pattern@@Base+0xd04>  // b.any
   20d80:	ldr	x8, [x9, #8]
   20d84:	mov	x10, x9
   20d88:	str	x9, [x8, #32]
   20d8c:	b	20d40 <rpl_re_compile_pattern@@Base+0xcb4>
   20d90:	ldr	x8, [x9, #8]
   20d94:	cbz	x8, 20da0 <rpl_re_compile_pattern@@Base+0xd14>
   20d98:	ldr	x10, [x9, #32]
   20d9c:	str	x10, [x8, #32]
   20da0:	ldr	x11, [x9, #16]
   20da4:	mov	x10, x9
   20da8:	cbz	x11, 20d40 <rpl_re_compile_pattern@@Base+0xcb4>
   20dac:	ldr	x10, [x9, #32]
   20db0:	str	x10, [x11, #32]
   20db4:	mov	x10, x9
   20db8:	b	20d40 <rpl_re_compile_pattern@@Base+0xcb4>
   20dbc:	mov	x0, x21
   20dc0:	mov	x1, x22
   20dc4:	bl	295e8 <rpl_re_set_registers@@Base+0x46d4>
   20dc8:	cbz	w0, 20de4 <rpl_re_compile_pattern@@Base+0xd58>
   20dcc:	b	21374 <rpl_re_compile_pattern@@Base+0x12e8>
   20dd0:	mov	x0, x21
   20dd4:	mov	x1, x23
   20dd8:	bl	295e8 <rpl_re_set_registers@@Base+0x46d4>
   20ddc:	mov	x22, x23
   20de0:	cbnz	w0, 21374 <rpl_re_compile_pattern@@Base+0x12e8>
   20de4:	ldr	x23, [x22, #8]
   20de8:	cbnz	x23, 20dd0 <rpl_re_compile_pattern@@Base+0xd44>
   20dec:	mov	x8, xzr
   20df0:	b	20dfc <rpl_re_compile_pattern@@Base+0xd70>
   20df4:	ldr	x22, [x8]
   20df8:	cbz	x22, 20e18 <rpl_re_compile_pattern@@Base+0xd8c>
   20dfc:	ldr	x23, [x22, #16]
   20e00:	mov	x9, x8
   20e04:	mov	x8, x22
   20e08:	cmp	x23, x9
   20e0c:	b.eq	20df4 <rpl_re_compile_pattern@@Base+0xd68>  // b.none
   20e10:	cbz	x23, 20df4 <rpl_re_compile_pattern@@Base+0xd68>
   20e14:	b	20dd0 <rpl_re_compile_pattern@@Base+0xd44>
   20e18:	ldr	x8, [x21, #16]
   20e1c:	cbz	x8, 20eac <rpl_re_compile_pattern@@Base+0xe20>
   20e20:	mov	w24, wzr
   20e24:	mov	x22, xzr
   20e28:	mov	w23, #0x18                  	// #24
   20e2c:	ldr	x8, [x21, #48]
   20e30:	madd	x8, x22, x23, x8
   20e34:	ldr	x8, [x8, #8]
   20e38:	cbnz	x8, 20e70 <rpl_re_compile_pattern@@Base+0xde4>
   20e3c:	sub	x0, x29, #0x28
   20e40:	mov	w3, #0x1                   	// #1
   20e44:	mov	x1, x21
   20e48:	mov	x2, x22
   20e4c:	bl	29c78 <rpl_re_set_registers@@Base+0x4d64>
   20e50:	cbnz	w0, 21374 <rpl_re_compile_pattern@@Base+0x12e8>
   20e54:	ldr	x8, [x21, #48]
   20e58:	madd	x8, x22, x23, x8
   20e5c:	ldr	x8, [x8, #8]
   20e60:	cbnz	x8, 20e70 <rpl_re_compile_pattern@@Base+0xde4>
   20e64:	ldur	x0, [x29, #-24]
   20e68:	bl	a970 <free@plt>
   20e6c:	mov	w24, #0x1                   	// #1
   20e70:	ldr	x9, [x21, #16]
   20e74:	add	x8, x22, #0x1
   20e78:	mov	w10, w24
   20e7c:	cmp	x8, x9
   20e80:	cset	w11, ne  // ne = any
   20e84:	csinc	x22, xzr, x22, eq  // eq = none
   20e88:	and	w24, w24, w11
   20e8c:	tbnz	w10, #0, 20e2c <rpl_re_compile_pattern@@Base+0xda0>
   20e90:	cmp	x8, x9
   20e94:	b.ne	20e2c <rpl_re_compile_pattern@@Base+0xda0>  // b.any
   20e98:	add	x8, x8, x8, lsl #1
   20e9c:	lsl	x0, x8, #3
   20ea0:	ldrb	w8, [x19, #56]
   20ea4:	tbz	w8, #4, 20eb8 <rpl_re_compile_pattern@@Base+0xe2c>
   20ea8:	b	20ec8 <rpl_re_compile_pattern@@Base+0xe3c>
   20eac:	mov	x0, xzr
   20eb0:	ldrb	w8, [x19, #56]
   20eb4:	tbnz	w8, #4, 20ec8 <rpl_re_compile_pattern@@Base+0xe3c>
   20eb8:	ldr	x8, [x19, #48]
   20ebc:	cbz	x8, 20ec8 <rpl_re_compile_pattern@@Base+0xe3c>
   20ec0:	ldrb	w8, [x21, #176]
   20ec4:	tbnz	w8, #0, 20ed0 <rpl_re_compile_pattern@@Base+0xe44>
   20ec8:	ldr	x8, [x21, #152]
   20ecc:	cbz	x8, 20fdc <rpl_re_compile_pattern@@Base+0xf50>
   20ed0:	bl	a550 <malloc@plt>
   20ed4:	str	x0, [x21, #56]
   20ed8:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   20edc:	ldr	x8, [x21, #16]
   20ee0:	cbz	x8, 20fdc <rpl_re_compile_pattern@@Base+0xf50>
   20ee4:	stp	xzr, xzr, [x0]
   20ee8:	str	xzr, [x0, #16]
   20eec:	ldr	x9, [x21, #16]
   20ef0:	cmp	x9, #0x2
   20ef4:	b.cc	20f24 <rpl_re_compile_pattern@@Base+0xe98>  // b.lo, b.ul, b.last
   20ef8:	mov	w8, #0x1                   	// #1
   20efc:	mov	w10, #0x18                  	// #24
   20f00:	ldr	x9, [x21, #56]
   20f04:	add	x8, x8, #0x1
   20f08:	add	x9, x9, x10
   20f0c:	stp	xzr, xzr, [x9]
   20f10:	str	xzr, [x9, #16]
   20f14:	ldr	x9, [x21, #16]
   20f18:	add	x10, x10, #0x18
   20f1c:	cmp	x8, x9
   20f20:	b.cc	20f00 <rpl_re_compile_pattern@@Base+0xe74>  // b.lo, b.ul, b.last
   20f24:	cbz	x9, 20fdc <rpl_re_compile_pattern@@Base+0xf50>
   20f28:	ldr	x8, [x21, #48]
   20f2c:	mov	x22, xzr
   20f30:	mov	w23, #0x18                  	// #24
   20f34:	b	20f48 <rpl_re_compile_pattern@@Base+0xebc>
   20f38:	ldr	x9, [x21, #16]
   20f3c:	add	x22, x22, #0x1
   20f40:	cmp	x22, x9
   20f44:	b.cs	20fdc <rpl_re_compile_pattern@@Base+0xf50>  // b.hs, b.nlast
   20f48:	madd	x10, x22, x23, x8
   20f4c:	ldr	x11, [x10, #8]
   20f50:	cmp	x11, #0x1
   20f54:	b.lt	20f3c <rpl_re_compile_pattern@@Base+0xeb0>  // b.tstop
   20f58:	ldr	x24, [x10, #16]
   20f5c:	mov	x28, xzr
   20f60:	b	20f8c <rpl_re_compile_pattern@@Base+0xf00>
   20f64:	madd	x10, x11, x23, x10
   20f68:	ldr	x0, [x10, #16]
   20f6c:	add	x10, x9, #0x1
   20f70:	str	x10, [x25]
   20f74:	str	x22, [x0, x9, lsl #3]
   20f78:	madd	x9, x22, x23, x8
   20f7c:	ldr	x9, [x9, #8]
   20f80:	add	x28, x28, #0x1
   20f84:	cmp	x28, x9
   20f88:	b.ge	20f38 <rpl_re_compile_pattern@@Base+0xeac>  // b.tcont
   20f8c:	ldr	x10, [x21, #56]
   20f90:	ldr	x11, [x24, x28, lsl #3]
   20f94:	madd	x12, x11, x23, x10
   20f98:	mov	x25, x12
   20f9c:	ldr	x13, [x12]
   20fa0:	ldr	x9, [x25, #8]!
   20fa4:	cmp	x13, x9
   20fa8:	b.ne	20f64 <rpl_re_compile_pattern@@Base+0xed8>  // b.any
   20fac:	lsl	x8, x13, #1
   20fb0:	add	x8, x8, #0x2
   20fb4:	str	x8, [x12]
   20fb8:	madd	x26, x11, x23, x10
   20fbc:	ldr	x0, [x26, #16]!
   20fc0:	lsl	x1, x8, #3
   20fc4:	bl	a730 <realloc@plt>
   20fc8:	cbz	x0, 21370 <rpl_re_compile_pattern@@Base+0x12e4>
   20fcc:	str	x0, [x26]
   20fd0:	ldr	x9, [x25]
   20fd4:	ldr	x8, [x21, #48]
   20fd8:	b	20f6c <rpl_re_compile_pattern@@Base+0xee0>
   20fdc:	stur	wzr, [x29, #-44]
   20fe0:	cbnz	x27, 210d4 <rpl_re_compile_pattern@@Base+0x1048>
   20fe4:	ldrb	w9, [x20, #176]
   20fe8:	tbz	w9, #2, 210d4 <rpl_re_compile_pattern@@Base+0x1048>
   20fec:	ldr	x8, [x19, #40]
   20ff0:	cbnz	x8, 210d4 <rpl_re_compile_pattern@@Base+0x1048>
   20ff4:	ldr	x11, [x20, #16]
   20ff8:	cbz	x11, 210a0 <rpl_re_compile_pattern@@Base+0x1014>
   20ffc:	ldr	x10, [x20]
   21000:	adrp	x13, 34000 <vasnprintf@@Base+0x3474>
   21004:	mov	w8, wzr
   21008:	mov	w12, wzr
   2100c:	add	x13, x13, #0x160
   21010:	mov	w14, #0x1                   	// #1
   21014:	mov	w15, #0x8b                  	// #139
   21018:	mov	x16, x10
   2101c:	b	2103c <rpl_re_compile_pattern@@Base+0xfb0>
   21020:	ldrsb	w17, [x16]
   21024:	cmp	w17, #0x0
   21028:	cset	w17, lt  // lt = tstop
   2102c:	orr	w12, w12, w17
   21030:	subs	x11, x11, #0x1
   21034:	add	x16, x16, #0x10
   21038:	b.eq	21388 <rpl_re_compile_pattern@@Base+0x12fc>  // b.none
   2103c:	ldrb	w17, [x16, #8]
   21040:	sub	w17, w17, #0x1
   21044:	cmp	w17, #0xb
   21048:	b.hi	2140c <rpl_re_compile_pattern@@Base+0x1380>  // b.pmore
   2104c:	adr	x18, 21020 <rpl_re_compile_pattern@@Base+0xf94>
   21050:	ldrb	w0, [x13, x17]
   21054:	add	x18, x18, x0, lsl #2
   21058:	br	x18
   2105c:	ldr	x17, [x16]
   21060:	ldr	x18, [x17, #16]
   21064:	cbnz	x18, 210d4 <rpl_re_compile_pattern@@Base+0x1048>
   21068:	ldr	x17, [x17, #24]
   2106c:	cbz	x17, 21030 <rpl_re_compile_pattern@@Base+0xfa4>
   21070:	b	210d4 <rpl_re_compile_pattern@@Base+0x1048>
   21074:	ldr	w17, [x16]
   21078:	sub	w17, w17, #0x10
   2107c:	ror	w17, w17, #4
   21080:	cmp	w17, #0x7
   21084:	b.hi	210d4 <rpl_re_compile_pattern@@Base+0x1048>  // b.pmore
   21088:	lsl	w17, w14, w17
   2108c:	tst	w17, w15
   21090:	b.ne	21030 <rpl_re_compile_pattern@@Base+0xfa4>  // b.any
   21094:	b	210d4 <rpl_re_compile_pattern@@Base+0x1048>
   21098:	mov	w8, #0x1                   	// #1
   2109c:	b	21030 <rpl_re_compile_pattern@@Base+0xfa4>
   210a0:	mov	w8, wzr
   210a4:	ldr	x10, [x20, #152]
   210a8:	mov	w12, #0x2                   	// #2
   210ac:	and	w9, w9, #0xfffffff9
   210b0:	mov	w11, #0x1                   	// #1
   210b4:	cmp	x10, #0x0
   210b8:	cset	w10, gt
   210bc:	orr	w8, w8, w10
   210c0:	tst	w8, #0x1
   210c4:	csel	w8, w12, wzr, ne  // ne = any
   210c8:	orr	w8, w8, w9
   210cc:	str	w11, [x20, #180]
   210d0:	strb	w8, [x20, #176]
   210d4:	ldr	x8, [x20, #104]
   210d8:	ldr	x24, [x20, #48]
   210dc:	ldr	x8, [x8, #24]
   210e0:	ldr	x23, [x8, #56]
   210e4:	mov	w8, #0x18                  	// #24
   210e8:	str	x23, [x20, #144]
   210ec:	madd	x8, x23, x8, x24
   210f0:	ldr	x22, [x8, #8]
   210f4:	stur	x22, [x29, #-32]
   210f8:	ldr	x25, [x8, #8]
   210fc:	cmp	x25, #0x1
   21100:	b.lt	21244 <rpl_re_compile_pattern@@Base+0x11b8>  // b.tstop
   21104:	lsl	x0, x22, #3
   21108:	stur	x22, [x29, #-40]
   2110c:	bl	a550 <malloc@plt>
   21110:	stur	x0, [x29, #-24]
   21114:	cbz	x0, 213fc <rpl_re_compile_pattern@@Base+0x1370>
   21118:	mov	w8, #0x18                  	// #24
   2111c:	madd	x8, x23, x8, x24
   21120:	ldr	x1, [x8, #16]
   21124:	lsl	x2, x25, #3
   21128:	mov	x21, x0
   2112c:	bl	a210 <memcpy@plt>
   21130:	cmp	x22, #0x1
   21134:	stur	wzr, [x29, #-12]
   21138:	b.lt	21250 <rpl_re_compile_pattern@@Base+0x11c4>  // b.tstop
   2113c:	ldr	x8, [x20, #152]
   21140:	cmp	x8, #0x1
   21144:	b.lt	21250 <rpl_re_compile_pattern@@Base+0x11c4>  // b.tstop
   21148:	mov	x8, xzr
   2114c:	mov	w23, #0x18                  	// #24
   21150:	ldr	x9, [x21, x8, lsl #3]
   21154:	ldr	x10, [x20]
   21158:	add	x11, x10, x9, lsl #4
   2115c:	ldrb	w11, [x11, #8]
   21160:	cmp	w11, #0x4
   21164:	b.ne	21230 <rpl_re_compile_pattern@@Base+0x11a4>  // b.any
   21168:	cmp	x22, #0x1
   2116c:	b.lt	211bc <rpl_re_compile_pattern@@Base+0x1130>  // b.tstop
   21170:	mov	x11, xzr
   21174:	add	x12, x10, x9, lsl #4
   21178:	b	21188 <rpl_re_compile_pattern@@Base+0x10fc>
   2117c:	add	x11, x11, #0x1
   21180:	cmp	x22, x11
   21184:	b.eq	21230 <rpl_re_compile_pattern@@Base+0x11a4>  // b.none
   21188:	ldr	x13, [x21, x11, lsl #3]
   2118c:	add	x14, x10, x13, lsl #4
   21190:	ldrb	w14, [x14, #8]
   21194:	cmp	w14, #0x9
   21198:	b.ne	2117c <rpl_re_compile_pattern@@Base+0x10f0>  // b.any
   2119c:	lsl	x13, x13, #4
   211a0:	ldr	x13, [x10, x13]
   211a4:	ldr	x14, [x12]
   211a8:	cmp	x13, x14
   211ac:	b.ne	2117c <rpl_re_compile_pattern@@Base+0x10f0>  // b.any
   211b0:	cmp	x11, x22
   211b4:	b.ne	211c8 <rpl_re_compile_pattern@@Base+0x113c>  // b.any
   211b8:	b	21230 <rpl_re_compile_pattern@@Base+0x11a4>
   211bc:	mov	x11, xzr
   211c0:	cmp	x11, x22
   211c4:	b.eq	21230 <rpl_re_compile_pattern@@Base+0x11a4>  // b.none
   211c8:	ldr	x10, [x20, #40]
   211cc:	madd	x9, x9, x23, x10
   211d0:	ldr	x9, [x9, #16]
   211d4:	subs	x10, x22, #0x1
   211d8:	ldr	x9, [x9]
   211dc:	b.lt	21214 <rpl_re_compile_pattern@@Base+0x1188>  // b.tstop
   211e0:	mov	x11, xzr
   211e4:	b.eq	21208 <rpl_re_compile_pattern@@Base+0x117c>  // b.none
   211e8:	add	x12, x11, x10
   211ec:	lsr	x12, x12, #1
   211f0:	ldr	x13, [x21, x12, lsl #3]
   211f4:	cmp	x13, x9
   211f8:	csinc	x11, x11, x12, ge  // ge = tcont
   211fc:	csel	x10, x10, x12, lt  // lt = tstop
   21200:	cmp	x11, x10
   21204:	b.cc	211e8 <rpl_re_compile_pattern@@Base+0x115c>  // b.lo, b.ul, b.last
   21208:	ldr	x10, [x21, x11, lsl #3]
   2120c:	cmp	x10, x9
   21210:	b.eq	21230 <rpl_re_compile_pattern@@Base+0x11a4>  // b.none
   21214:	ldr	x8, [x20, #48]
   21218:	sub	x0, x29, #0x28
   2121c:	madd	x1, x9, x23, x8
   21220:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   21224:	cbnz	w0, 212e8 <rpl_re_compile_pattern@@Base+0x125c>
   21228:	ldur	x22, [x29, #-32]
   2122c:	mov	x8, xzr
   21230:	add	x8, x8, #0x1
   21234:	cmp	x8, x22
   21238:	b.ge	21250 <rpl_re_compile_pattern@@Base+0x11c4>  // b.tcont
   2123c:	ldur	x21, [x29, #-24]
   21240:	b	21150 <rpl_re_compile_pattern@@Base+0x10c4>
   21244:	stp	xzr, xzr, [x29, #-40]
   21248:	stur	xzr, [x29, #-24]
   2124c:	stur	wzr, [x29, #-12]
   21250:	sub	x0, x29, #0xc
   21254:	sub	x2, x29, #0x28
   21258:	mov	x1, x20
   2125c:	mov	w3, wzr
   21260:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   21264:	str	x0, [x20, #72]
   21268:	cbz	x0, 213f4 <rpl_re_compile_pattern@@Base+0x1368>
   2126c:	ldrsb	w8, [x0, #104]
   21270:	tbnz	w8, #31, 21280 <rpl_re_compile_pattern@@Base+0x11f4>
   21274:	stp	x0, x0, [x20, #88]
   21278:	str	x0, [x20, #80]
   2127c:	b	212dc <rpl_re_compile_pattern@@Base+0x1250>
   21280:	sub	x0, x29, #0xc
   21284:	sub	x2, x29, #0x28
   21288:	mov	w3, #0x1                   	// #1
   2128c:	mov	x1, x20
   21290:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   21294:	str	x0, [x20, #80]
   21298:	sub	x0, x29, #0xc
   2129c:	sub	x2, x29, #0x28
   212a0:	mov	w3, #0x2                   	// #2
   212a4:	mov	x1, x20
   212a8:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   212ac:	str	x0, [x20, #88]
   212b0:	sub	x0, x29, #0xc
   212b4:	sub	x2, x29, #0x28
   212b8:	mov	w3, #0x6                   	// #6
   212bc:	mov	x1, x20
   212c0:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   212c4:	ldr	x8, [x20, #80]
   212c8:	str	x0, [x20, #96]
   212cc:	cbz	x8, 213f4 <rpl_re_compile_pattern@@Base+0x1368>
   212d0:	cbz	x0, 213f4 <rpl_re_compile_pattern@@Base+0x1368>
   212d4:	ldr	x8, [x20, #88]
   212d8:	cbz	x8, 213f4 <rpl_re_compile_pattern@@Base+0x1368>
   212dc:	ldur	x0, [x29, #-24]
   212e0:	bl	a970 <free@plt>
   212e4:	mov	w0, wzr
   212e8:	stur	w0, [x29, #-44]
   212ec:	ldr	x21, [x19]
   212f0:	ldr	x0, [x21, #112]
   212f4:	cbz	x0, 21308 <rpl_re_compile_pattern@@Base+0x127c>
   212f8:	ldr	x22, [x0]
   212fc:	bl	a970 <free@plt>
   21300:	mov	x0, x22
   21304:	cbnz	x22, 212f8 <rpl_re_compile_pattern@@Base+0x126c>
   21308:	ldr	x0, [x21, #32]
   2130c:	mov	w8, #0xf                   	// #15
   21310:	str	w8, [x21, #128]
   21314:	stp	xzr, xzr, [x21, #104]
   21318:	bl	a970 <free@plt>
   2131c:	str	xzr, [x21, #32]
   21320:	ldr	x0, [sp, #24]
   21324:	bl	a970 <free@plt>
   21328:	ldr	x0, [sp, #32]
   2132c:	bl	a970 <free@plt>
   21330:	ldrb	w8, [sp, #147]
   21334:	cbz	w8, 21340 <rpl_re_compile_pattern@@Base+0x12b4>
   21338:	ldr	x0, [sp, #16]
   2133c:	bl	a970 <free@plt>
   21340:	ldur	w8, [x29, #-44]
   21344:	cbnz	w8, 2096c <rpl_re_compile_pattern@@Base+0x8e0>
   21348:	mov	w21, wzr
   2134c:	mov	w0, w21
   21350:	ldp	x20, x19, [sp, #288]
   21354:	ldp	x22, x21, [sp, #272]
   21358:	ldp	x24, x23, [sp, #256]
   2135c:	ldp	x26, x25, [sp, #240]
   21360:	ldp	x28, x27, [sp, #224]
   21364:	ldp	x29, x30, [sp, #208]
   21368:	add	sp, sp, #0x130
   2136c:	ret
   21370:	mov	w0, #0xc                   	// #12
   21374:	stur	w0, [x29, #-44]
   21378:	ldr	x21, [x19]
   2137c:	ldr	x0, [x21, #112]
   21380:	cbnz	x0, 20924 <rpl_re_compile_pattern@@Base+0x898>
   21384:	b	20934 <rpl_re_compile_pattern@@Base+0x8a8>
   21388:	orr	w11, w12, w8
   2138c:	tbz	w11, #0, 210a4 <rpl_re_compile_pattern@@Base+0x1018>
   21390:	mov	x9, xzr
   21394:	mov	w11, #0x1                   	// #1
   21398:	add	x12, x10, x9
   2139c:	ldr	w13, [x12, #8]
   213a0:	and	w14, w13, #0xff
   213a4:	cmp	w14, #0x5
   213a8:	b.eq	213c4 <rpl_re_compile_pattern@@Base+0x1338>  // b.none
   213ac:	cmp	w14, #0x1
   213b0:	b.ne	213d0 <rpl_re_compile_pattern@@Base+0x1344>  // b.any
   213b4:	ldrsb	w10, [x10, x9]
   213b8:	tbz	w10, #31, 213d0 <rpl_re_compile_pattern@@Base+0x1344>
   213bc:	and	w10, w13, #0xffdfffff
   213c0:	b	213cc <rpl_re_compile_pattern@@Base+0x1340>
   213c4:	and	w10, w13, #0xffffff00
   213c8:	orr	w10, w10, #0x7
   213cc:	str	w10, [x12, #8]
   213d0:	ldr	x10, [x20, #16]
   213d4:	cmp	x11, x10
   213d8:	b.cs	213ec <rpl_re_compile_pattern@@Base+0x1360>  // b.hs, b.nlast
   213dc:	ldr	x10, [x20]
   213e0:	add	x9, x9, #0x10
   213e4:	add	x11, x11, #0x1
   213e8:	b	21398 <rpl_re_compile_pattern@@Base+0x130c>
   213ec:	ldrb	w9, [x20, #176]
   213f0:	b	210a4 <rpl_re_compile_pattern@@Base+0x1018>
   213f4:	ldur	w0, [x29, #-12]
   213f8:	b	212e8 <rpl_re_compile_pattern@@Base+0x125c>
   213fc:	mov	w0, #0xc                   	// #12
   21400:	stp	xzr, xzr, [x29, #-40]
   21404:	stur	w0, [x29, #-12]
   21408:	b	212e8 <rpl_re_compile_pattern@@Base+0x125c>
   2140c:	bl	a850 <abort@plt>

0000000000021410 <rpl_re_set_syntax@@Base>:
   21410:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   21414:	ldr	x9, [x9, #3920]
   21418:	ldr	x8, [x9]
   2141c:	str	x0, [x9]
   21420:	mov	x0, x8
   21424:	ret

0000000000021428 <rpl_re_compile_fastmap@@Base>:
   21428:	stp	x29, x30, [sp, #-48]!
   2142c:	stp	x20, x19, [sp, #32]
   21430:	ldr	x20, [x0, #32]
   21434:	str	x21, [sp, #16]
   21438:	ldr	x21, [x0]
   2143c:	movi	v0.2d, #0x0
   21440:	stp	q0, q0, [x20, #224]
   21444:	stp	q0, q0, [x20, #192]
   21448:	stp	q0, q0, [x20, #160]
   2144c:	stp	q0, q0, [x20, #128]
   21450:	stp	q0, q0, [x20, #96]
   21454:	stp	q0, q0, [x20, #64]
   21458:	stp	q0, q0, [x20, #32]
   2145c:	stp	q0, q0, [x20]
   21460:	ldr	x1, [x21, #72]
   21464:	mov	x2, x20
   21468:	mov	x29, sp
   2146c:	mov	x19, x0
   21470:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   21474:	ldp	x8, x1, [x21, #72]
   21478:	cmp	x8, x1
   2147c:	b.eq	21490 <rpl_re_compile_fastmap@@Base+0x68>  // b.none
   21480:	mov	x0, x19
   21484:	mov	x2, x20
   21488:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   2148c:	ldr	x8, [x21, #72]
   21490:	ldr	x1, [x21, #88]
   21494:	cmp	x8, x1
   21498:	b.eq	214ac <rpl_re_compile_fastmap@@Base+0x84>  // b.none
   2149c:	mov	x0, x19
   214a0:	mov	x2, x20
   214a4:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   214a8:	ldr	x8, [x21, #72]
   214ac:	ldr	x1, [x21, #96]
   214b0:	cmp	x8, x1
   214b4:	b.eq	214c4 <rpl_re_compile_fastmap@@Base+0x9c>  // b.none
   214b8:	mov	x0, x19
   214bc:	mov	x2, x20
   214c0:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   214c4:	ldrb	w8, [x19, #56]
   214c8:	ldr	x21, [sp, #16]
   214cc:	mov	w0, wzr
   214d0:	orr	w8, w8, #0x8
   214d4:	strb	w8, [x19, #56]
   214d8:	ldp	x20, x19, [sp, #32]
   214dc:	ldp	x29, x30, [sp], #48
   214e0:	ret
   214e4:	sub	sp, sp, #0x1e0
   214e8:	stp	x29, x30, [sp, #384]
   214ec:	stp	x28, x27, [sp, #400]
   214f0:	stp	x26, x25, [sp, #416]
   214f4:	stp	x24, x23, [sp, #432]
   214f8:	stp	x22, x21, [sp, #448]
   214fc:	stp	x20, x19, [sp, #464]
   21500:	ldr	x28, [x0]
   21504:	mov	x20, x2
   21508:	mov	x23, x0
   2150c:	add	x29, sp, #0x180
   21510:	ldr	w8, [x28, #180]
   21514:	cmp	w8, #0x1
   21518:	b.ne	21538 <rpl_re_compile_fastmap@@Base+0x110>  // b.any
   2151c:	ldrb	w8, [x23, #26]
   21520:	ubfx	w8, w8, #6, #1
   21524:	str	w8, [sp, #68]
   21528:	ldr	x8, [x1, #16]
   2152c:	cmp	x8, #0x1
   21530:	b.ge	21548 <rpl_re_compile_fastmap@@Base+0x120>  // b.tcont
   21534:	b	21bf8 <rpl_re_compile_fastmap@@Base+0x7d0>
   21538:	str	wzr, [sp, #68]
   2153c:	ldr	x8, [x1, #16]
   21540:	cmp	x8, #0x1
   21544:	b.lt	21bf8 <rpl_re_compile_fastmap@@Base+0x7d0>  // b.tstop
   21548:	add	x8, x20, #0x3
   2154c:	str	x8, [sp, #16]
   21550:	adrp	x8, 34000 <vasnprintf@@Base+0x3474>
   21554:	ldr	q0, [x8, #304]
   21558:	add	x9, sp, #0x68
   2155c:	mov	w8, #0x2                   	// #2
   21560:	mov	x25, xzr
   21564:	mov	w26, #0x1                   	// #1
   21568:	orr	x9, x9, #0x1
   2156c:	str	q0, [sp, #48]
   21570:	dup	v0.2d, x8
   21574:	str	x9, [sp, #8]
   21578:	str	q0, [sp, #80]
   2157c:	stp	x23, x28, [sp, #24]
   21580:	str	x1, [sp, #72]
   21584:	b	2159c <rpl_re_compile_fastmap@@Base+0x174>
   21588:	ldr	x1, [sp, #72]
   2158c:	add	x25, x25, #0x1
   21590:	ldr	x8, [x1, #16]
   21594:	cmp	x25, x8
   21598:	b.ge	21bf8 <rpl_re_compile_fastmap@@Base+0x7d0>  // b.tcont
   2159c:	ldr	x8, [x1, #24]
   215a0:	ldr	x10, [x28]
   215a4:	ldr	x19, [x8, x25, lsl #3]
   215a8:	add	x9, x10, x19, lsl #4
   215ac:	ldrb	w8, [x9, #8]
   215b0:	sub	w11, w8, #0x1
   215b4:	cmp	w11, #0x6
   215b8:	b.hi	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.pmore
   215bc:	adrp	x14, 34000 <vasnprintf@@Base+0x3474>
   215c0:	add	x14, x14, #0x16c
   215c4:	adr	x12, 21588 <rpl_re_compile_fastmap@@Base+0x160>
   215c8:	ldrh	w13, [x14, x11, lsl #1]
   215cc:	add	x12, x12, x13, lsl #2
   215d0:	br	x12
   215d4:	ldrb	w21, [x9]
   215d8:	ldr	w8, [sp, #68]
   215dc:	strb	w26, [x20, x21]
   215e0:	cbz	w8, 215f4 <rpl_re_compile_fastmap@@Base+0x1cc>
   215e4:	bl	a490 <__ctype_tolower_loc@plt>
   215e8:	ldr	x8, [x0]
   215ec:	ldrsw	x8, [x8, x21, lsl #2]
   215f0:	strb	w26, [x20, x8]
   215f4:	ldrb	w8, [x23, #26]
   215f8:	tbz	w8, #6, 21588 <rpl_re_compile_fastmap@@Base+0x160>
   215fc:	ldr	w8, [x28, #180]
   21600:	cmp	w8, #0x2
   21604:	b.lt	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.tstop
   21608:	ldr	x9, [x28]
   2160c:	lsl	x8, x19, #4
   21610:	add	x10, x19, #0x1
   21614:	mov	w14, #0x1                   	// #1
   21618:	ldrb	w9, [x9, x8]
   2161c:	movk	w14, #0x20, lsl #16
   21620:	strb	w9, [sp, #104]
   21624:	ldr	x9, [x28, #16]
   21628:	cmp	x10, x9
   2162c:	ldr	x9, [sp, #8]
   21630:	b.cs	21670 <rpl_re_compile_fastmap@@Base+0x248>  // b.hs, b.nlast
   21634:	ldr	x9, [sp, #8]
   21638:	ldr	x11, [x28]
   2163c:	add	w13, w14, #0xfe
   21640:	add	x11, x11, x8
   21644:	ldr	w12, [x11, #24]
   21648:	and	w12, w12, w13
   2164c:	cmp	w12, w14
   21650:	b.ne	21670 <rpl_re_compile_fastmap@@Base+0x248>  // b.any
   21654:	ldrb	w11, [x11, #16]
   21658:	add	x10, x10, #0x1
   2165c:	add	x8, x8, #0x10
   21660:	strb	w11, [x9], #1
   21664:	ldr	x11, [x28, #16]
   21668:	cmp	x10, x11
   2166c:	b.cc	21638 <rpl_re_compile_fastmap@@Base+0x210>  // b.lo, b.ul, b.last
   21670:	add	x8, sp, #0x68
   21674:	sub	x22, x9, x8
   21678:	sub	x0, x29, #0xc
   2167c:	add	x1, sp, #0x68
   21680:	sub	x3, x29, #0x18
   21684:	mov	x2, x22
   21688:	stur	xzr, [x29, #-24]
   2168c:	bl	a340 <rpl_mbrtowc@plt>
   21690:	cmp	x0, x22
   21694:	b.ne	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.any
   21698:	ldur	w0, [x29, #-12]
   2169c:	bl	ae50 <towlower@plt>
   216a0:	mov	w1, w0
   216a4:	add	x0, sp, #0x68
   216a8:	sub	x2, x29, #0x18
   216ac:	bl	aeb0 <wcrtomb@plt>
   216b0:	cmn	x0, #0x1
   216b4:	b.eq	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.none
   216b8:	ldrb	w8, [sp, #104]
   216bc:	strb	w26, [x20, x8]
   216c0:	b	21588 <rpl_re_compile_fastmap@@Base+0x160>
   216c4:	lsl	x22, x19, #4
   216c8:	ldr	x8, [x10, x22]
   216cc:	ldr	x19, [x8]
   216d0:	ldr	w8, [sp, #68]
   216d4:	cbz	w8, 21844 <rpl_re_compile_fastmap@@Base+0x41c>
   216d8:	ldr	x9, [sp, #16]
   216dc:	mov	x27, xzr
   216e0:	mov	w8, #0x83                  	// #131
   216e4:	b	2170c <rpl_re_compile_fastmap@@Base+0x2e4>
   216e8:	bl	a490 <__ctype_tolower_loc@plt>
   216ec:	ldr	x8, [x0]
   216f0:	ldr	w8, [x8, x27, lsl #2]
   216f4:	strb	w26, [x20, w8, sxtw]
   216f8:	add	x27, x27, #0x1
   216fc:	add	w8, w21, #0x1
   21700:	cmp	x27, #0x40
   21704:	add	x9, x24, #0x1
   21708:	b.eq	218ac <rpl_re_compile_fastmap@@Base+0x484>  // b.none
   2170c:	lsr	x10, x19, x27
   21710:	mov	w21, w8
   21714:	mov	x24, x9
   21718:	tbz	w10, #0, 216f8 <rpl_re_compile_fastmap@@Base+0x2d0>
   2171c:	add	w8, w27, #0x80
   21720:	cmp	w8, #0x180
   21724:	strb	w26, [x20, x27]
   21728:	b.cc	216e8 <rpl_re_compile_fastmap@@Base+0x2c0>  // b.lo, b.ul, b.last
   2172c:	mov	w8, w27
   21730:	b	216f4 <rpl_re_compile_fastmap@@Base+0x2cc>
   21734:	ldr	w8, [x28, #180]
   21738:	ldr	x22, [x9]
   2173c:	cmp	w8, #0x2
   21740:	b.lt	2179c <rpl_re_compile_fastmap@@Base+0x374>  // b.tstop
   21744:	ldr	x8, [x22, #72]
   21748:	cbnz	x8, 2175c <rpl_re_compile_fastmap@@Base+0x334>
   2174c:	ldrb	w8, [x22, #32]
   21750:	tbnz	w8, #0, 2175c <rpl_re_compile_fastmap@@Base+0x334>
   21754:	ldr	x8, [x22, #64]
   21758:	cbz	x8, 2179c <rpl_re_compile_fastmap@@Base+0x374>
   2175c:	sturb	wzr, [x29, #-24]
   21760:	b	21770 <rpl_re_compile_fastmap@@Base+0x348>
   21764:	add	w8, w8, #0x1
   21768:	sturb	w8, [x29, #-24]
   2176c:	tbnz	w8, #8, 21588 <rpl_re_compile_fastmap@@Base+0x160>
   21770:	sub	x1, x29, #0x18
   21774:	add	x3, sp, #0x68
   21778:	mov	w2, #0x1                   	// #1
   2177c:	mov	x0, xzr
   21780:	str	xzr, [sp, #104]
   21784:	bl	a340 <rpl_mbrtowc@plt>
   21788:	ldurb	w8, [x29, #-24]
   2178c:	cmn	x0, #0x2
   21790:	b.ne	21764 <rpl_re_compile_fastmap@@Base+0x33c>  // b.any
   21794:	strb	w26, [x20, x8]
   21798:	b	21764 <rpl_re_compile_fastmap@@Base+0x33c>
   2179c:	ldr	x8, [x22, #40]
   217a0:	cmp	x8, #0x1
   217a4:	b.lt	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.tstop
   217a8:	ldr	w8, [sp, #68]
   217ac:	tbz	w8, #0, 21b3c <rpl_re_compile_fastmap@@Base+0x714>
   217b0:	mov	x21, xzr
   217b4:	b	217c8 <rpl_re_compile_fastmap@@Base+0x3a0>
   217b8:	ldr	x8, [x22, #40]
   217bc:	add	x21, x21, #0x1
   217c0:	cmp	x21, x8
   217c4:	b.ge	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.tcont
   217c8:	stur	xzr, [x29, #-24]
   217cc:	ldr	x8, [x22]
   217d0:	add	x0, sp, #0x68
   217d4:	sub	x2, x29, #0x18
   217d8:	ldr	w1, [x8, x21, lsl #2]
   217dc:	bl	aeb0 <wcrtomb@plt>
   217e0:	cmn	x0, #0x1
   217e4:	b.eq	21800 <rpl_re_compile_fastmap@@Base+0x3d8>  // b.none
   217e8:	ldrb	w19, [sp, #104]
   217ec:	strb	w26, [x20, x19]
   217f0:	bl	a490 <__ctype_tolower_loc@plt>
   217f4:	ldr	x8, [x0]
   217f8:	ldrsw	x8, [x8, x19, lsl #2]
   217fc:	strb	w26, [x20, x8]
   21800:	ldrb	w8, [x23, #26]
   21804:	tbz	w8, #6, 217b8 <rpl_re_compile_fastmap@@Base+0x390>
   21808:	ldr	w8, [x28, #180]
   2180c:	cmp	w8, #0x2
   21810:	b.lt	217b8 <rpl_re_compile_fastmap@@Base+0x390>  // b.tstop
   21814:	ldr	x8, [x22]
   21818:	ldr	w0, [x8, x21, lsl #2]
   2181c:	bl	ae50 <towlower@plt>
   21820:	mov	w1, w0
   21824:	add	x0, sp, #0x68
   21828:	sub	x2, x29, #0x18
   2182c:	bl	aeb0 <wcrtomb@plt>
   21830:	cmn	x0, #0x1
   21834:	b.eq	217b8 <rpl_re_compile_fastmap@@Base+0x390>  // b.none
   21838:	ldrb	w8, [sp, #104]
   2183c:	strb	w26, [x20, x8]
   21840:	b	217b8 <rpl_re_compile_fastmap@@Base+0x390>
   21844:	ldr	q1, [sp, #48]
   21848:	mov	x8, xzr
   2184c:	dup	v0.2d, x19
   21850:	mov	w10, #0x2                   	// #2
   21854:	b	2186c <rpl_re_compile_fastmap@@Base+0x444>
   21858:	ldr	q2, [sp, #80]
   2185c:	add	x8, x8, #0x2
   21860:	cmp	x8, #0x40
   21864:	add	v1.2d, v1.2d, v2.2d
   21868:	b.eq	21914 <rpl_re_compile_fastmap@@Base+0x4ec>  // b.none
   2186c:	dup	v2.2d, x26
   21870:	ushl	v2.2d, v2.2d, v1.2d
   21874:	cmtst	v3.2d, v2.2d, v0.2d
   21878:	xtn	v3.2s, v3.2d
   2187c:	and	v2.16b, v2.16b, v0.16b
   21880:	fmov	w9, s3
   21884:	tbz	w9, #0, 2188c <rpl_re_compile_fastmap@@Base+0x464>
   21888:	strb	w26, [x20, x8]
   2188c:	cmeq	v2.2d, v2.2d, #0
   21890:	mvn	v2.16b, v2.16b
   21894:	xtn	v2.2s, v2.2d
   21898:	mov	w9, v2.s[1]
   2189c:	tbz	w9, #0, 21858 <rpl_re_compile_fastmap@@Base+0x430>
   218a0:	add	x9, x20, x8
   218a4:	strb	w26, [x9, #1]
   218a8:	b	21858 <rpl_re_compile_fastmap@@Base+0x430>
   218ac:	ldr	x8, [x28]
   218b0:	mov	x28, xzr
   218b4:	str	x22, [sp, #40]
   218b8:	ldr	x8, [x8, x22]
   218bc:	ldr	x23, [x8, #8]
   218c0:	b	218ec <rpl_re_compile_fastmap@@Base+0x4c4>
   218c4:	bl	a490 <__ctype_tolower_loc@plt>
   218c8:	ldr	x8, [x0]
   218cc:	ldr	w8, [x8, x27, lsl #2]
   218d0:	strb	w26, [x20, w8, sxtw]
   218d4:	add	x28, x28, #0x1
   218d8:	add	x27, x27, #0x1
   218dc:	add	w21, w22, #0x1
   218e0:	cmp	x28, #0x40
   218e4:	add	x24, x19, #0x1
   218e8:	b.eq	21988 <rpl_re_compile_fastmap@@Base+0x560>  // b.none
   218ec:	lsr	x8, x23, x28
   218f0:	mov	w22, w21
   218f4:	mov	x19, x24
   218f8:	tbz	w8, #0, 218d4 <rpl_re_compile_fastmap@@Base+0x4ac>
   218fc:	add	w8, w27, #0x80
   21900:	cmp	w8, #0x180
   21904:	strb	w26, [x20, x27]
   21908:	b.cc	218c4 <rpl_re_compile_fastmap@@Base+0x49c>  // b.lo, b.ul, b.last
   2190c:	mov	w8, w27
   21910:	b	218d0 <rpl_re_compile_fastmap@@Base+0x4a8>
   21914:	ldr	x9, [x28]
   21918:	ldr	q1, [sp, #48]
   2191c:	mov	x8, xzr
   21920:	ldr	x9, [x9, x22]
   21924:	add	x9, x9, #0x8
   21928:	ld1r	{v0.2d}, [x9]
   2192c:	b	21944 <rpl_re_compile_fastmap@@Base+0x51c>
   21930:	add	x8, x8, #0x2
   21934:	dup	v2.2d, x10
   21938:	cmp	x8, #0x40
   2193c:	add	v1.2d, v1.2d, v2.2d
   21940:	b.eq	219f0 <rpl_re_compile_fastmap@@Base+0x5c8>  // b.none
   21944:	dup	v2.2d, x26
   21948:	ushl	v2.2d, v2.2d, v1.2d
   2194c:	cmtst	v3.2d, v2.2d, v0.2d
   21950:	xtn	v3.2s, v3.2d
   21954:	and	v2.16b, v2.16b, v0.16b
   21958:	fmov	w9, s3
   2195c:	tbz	w9, #0, 21968 <rpl_re_compile_fastmap@@Base+0x540>
   21960:	add	x9, x20, x8
   21964:	strb	w26, [x9, #64]
   21968:	cmeq	v2.2d, v2.2d, #0
   2196c:	mvn	v2.16b, v2.16b
   21970:	xtn	v2.2s, v2.2d
   21974:	mov	w9, v2.s[1]
   21978:	tbz	w9, #0, 21930 <rpl_re_compile_fastmap@@Base+0x508>
   2197c:	add	x9, x20, x8
   21980:	strb	w26, [x9, #65]
   21984:	b	21930 <rpl_re_compile_fastmap@@Base+0x508>
   21988:	ldp	x8, x9, [sp, #32]
   2198c:	mov	x28, xzr
   21990:	ldr	x8, [x8]
   21994:	ldr	x8, [x8, x9]
   21998:	ldr	x23, [x8, #16]
   2199c:	b	219c8 <rpl_re_compile_fastmap@@Base+0x5a0>
   219a0:	bl	a490 <__ctype_tolower_loc@plt>
   219a4:	ldr	x8, [x0]
   219a8:	ldr	w8, [x8, x27, lsl #2]
   219ac:	strb	w26, [x20, w8, sxtw]
   219b0:	add	x28, x28, #0x1
   219b4:	add	x27, x27, #0x1
   219b8:	add	w22, w24, #0x1
   219bc:	cmp	x28, #0x40
   219c0:	add	x19, x21, #0x1
   219c4:	b.eq	21a64 <rpl_re_compile_fastmap@@Base+0x63c>  // b.none
   219c8:	lsr	x8, x23, x28
   219cc:	mov	w24, w22
   219d0:	mov	x21, x19
   219d4:	tbz	w8, #0, 219b0 <rpl_re_compile_fastmap@@Base+0x588>
   219d8:	add	w8, w27, #0x80
   219dc:	cmp	w8, #0x180
   219e0:	strb	w26, [x20, x27]
   219e4:	b.cc	219a0 <rpl_re_compile_fastmap@@Base+0x578>  // b.lo, b.ul, b.last
   219e8:	mov	w8, w27
   219ec:	b	219ac <rpl_re_compile_fastmap@@Base+0x584>
   219f0:	ldr	x9, [x28]
   219f4:	ldr	q1, [sp, #48]
   219f8:	mov	x8, xzr
   219fc:	ldr	x9, [x9, x22]
   21a00:	add	x9, x9, #0x10
   21a04:	ld1r	{v0.2d}, [x9]
   21a08:	b	21a20 <rpl_re_compile_fastmap@@Base+0x5f8>
   21a0c:	add	x8, x8, #0x2
   21a10:	dup	v2.2d, x10
   21a14:	cmp	x8, #0x40
   21a18:	add	v1.2d, v1.2d, v2.2d
   21a1c:	b.eq	21ac4 <rpl_re_compile_fastmap@@Base+0x69c>  // b.none
   21a20:	dup	v2.2d, x26
   21a24:	ushl	v2.2d, v2.2d, v1.2d
   21a28:	cmtst	v3.2d, v2.2d, v0.2d
   21a2c:	xtn	v3.2s, v3.2d
   21a30:	and	v2.16b, v2.16b, v0.16b
   21a34:	fmov	w9, s3
   21a38:	tbz	w9, #0, 21a44 <rpl_re_compile_fastmap@@Base+0x61c>
   21a3c:	add	x9, x20, x8
   21a40:	strb	w26, [x9, #128]
   21a44:	cmeq	v2.2d, v2.2d, #0
   21a48:	mvn	v2.16b, v2.16b
   21a4c:	xtn	v2.2s, v2.2d
   21a50:	mov	w9, v2.s[1]
   21a54:	tbz	w9, #0, 21a0c <rpl_re_compile_fastmap@@Base+0x5e4>
   21a58:	add	x9, x20, x8
   21a5c:	strb	w26, [x9, #129]
   21a60:	b	21a0c <rpl_re_compile_fastmap@@Base+0x5e4>
   21a64:	ldp	x28, x9, [sp, #32]
   21a68:	ldr	x23, [sp, #24]
   21a6c:	mov	x22, xzr
   21a70:	ldr	x8, [x28]
   21a74:	ldr	x8, [x8, x9]
   21a78:	ldr	x19, [x8, #24]
   21a7c:	b	21aa8 <rpl_re_compile_fastmap@@Base+0x680>
   21a80:	bl	a490 <__ctype_tolower_loc@plt>
   21a84:	ldr	x8, [x0]
   21a88:	ldr	w8, [x8, x27, lsl #2]
   21a8c:	strb	w26, [x20, w8, sxtw]
   21a90:	add	x22, x22, #0x1
   21a94:	add	x27, x27, #0x1
   21a98:	add	w24, w24, #0x1
   21a9c:	cmp	x22, #0x40
   21aa0:	add	x21, x21, #0x1
   21aa4:	b.eq	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.none
   21aa8:	lsr	x8, x19, x22
   21aac:	tbz	w8, #0, 21a90 <rpl_re_compile_fastmap@@Base+0x668>
   21ab0:	cmp	w24, #0x180
   21ab4:	strb	w26, [x21]
   21ab8:	b.cc	21a80 <rpl_re_compile_fastmap@@Base+0x658>  // b.lo, b.ul, b.last
   21abc:	mov	w8, w27
   21ac0:	b	21a8c <rpl_re_compile_fastmap@@Base+0x664>
   21ac4:	ldr	x9, [x28]
   21ac8:	ldr	q1, [sp, #48]
   21acc:	mov	x8, xzr
   21ad0:	ldr	x9, [x9, x22]
   21ad4:	add	x9, x9, #0x18
   21ad8:	ld1r	{v0.2d}, [x9]
   21adc:	b	21af4 <rpl_re_compile_fastmap@@Base+0x6cc>
   21ae0:	add	x8, x8, #0x2
   21ae4:	dup	v2.2d, x10
   21ae8:	cmp	x8, #0x40
   21aec:	add	v1.2d, v1.2d, v2.2d
   21af0:	b.eq	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.none
   21af4:	dup	v2.2d, x26
   21af8:	ushl	v2.2d, v2.2d, v1.2d
   21afc:	cmtst	v3.2d, v2.2d, v0.2d
   21b00:	xtn	v3.2s, v3.2d
   21b04:	and	v2.16b, v2.16b, v0.16b
   21b08:	fmov	w9, s3
   21b0c:	tbz	w9, #0, 21b18 <rpl_re_compile_fastmap@@Base+0x6f0>
   21b10:	add	x9, x20, x8
   21b14:	strb	w26, [x9, #192]
   21b18:	cmeq	v2.2d, v2.2d, #0
   21b1c:	mvn	v2.16b, v2.16b
   21b20:	xtn	v2.2s, v2.2d
   21b24:	mov	w9, v2.s[1]
   21b28:	mov	w10, #0x2                   	// #2
   21b2c:	tbz	w9, #0, 21ae0 <rpl_re_compile_fastmap@@Base+0x6b8>
   21b30:	add	x9, x20, x8
   21b34:	strb	w26, [x9, #193]
   21b38:	b	21ae0 <rpl_re_compile_fastmap@@Base+0x6b8>
   21b3c:	mov	x19, xzr
   21b40:	b	21b54 <rpl_re_compile_fastmap@@Base+0x72c>
   21b44:	ldr	x8, [x22, #40]
   21b48:	add	x19, x19, #0x1
   21b4c:	cmp	x19, x8
   21b50:	b.ge	21588 <rpl_re_compile_fastmap@@Base+0x160>  // b.tcont
   21b54:	stur	xzr, [x29, #-24]
   21b58:	ldr	x8, [x22]
   21b5c:	add	x0, sp, #0x68
   21b60:	sub	x2, x29, #0x18
   21b64:	ldr	w1, [x8, x19, lsl #2]
   21b68:	bl	aeb0 <wcrtomb@plt>
   21b6c:	cmn	x0, #0x1
   21b70:	b.eq	21b7c <rpl_re_compile_fastmap@@Base+0x754>  // b.none
   21b74:	ldrb	w8, [sp, #104]
   21b78:	strb	w26, [x20, x8]
   21b7c:	ldrb	w8, [x23, #26]
   21b80:	tbz	w8, #6, 21b44 <rpl_re_compile_fastmap@@Base+0x71c>
   21b84:	ldr	w8, [x28, #180]
   21b88:	cmp	w8, #0x2
   21b8c:	b.lt	21b44 <rpl_re_compile_fastmap@@Base+0x71c>  // b.tstop
   21b90:	ldr	x8, [x22]
   21b94:	ldr	w0, [x8, x19, lsl #2]
   21b98:	bl	ae50 <towlower@plt>
   21b9c:	mov	w1, w0
   21ba0:	add	x0, sp, #0x68
   21ba4:	sub	x2, x29, #0x18
   21ba8:	bl	aeb0 <wcrtomb@plt>
   21bac:	cmn	x0, #0x1
   21bb0:	b.eq	21b44 <rpl_re_compile_fastmap@@Base+0x71c>  // b.none
   21bb4:	ldrb	w8, [sp, #104]
   21bb8:	strb	w26, [x20, x8]
   21bbc:	b	21b44 <rpl_re_compile_fastmap@@Base+0x71c>
   21bc0:	movi	v0.16b, #0x1
   21bc4:	cmp	w8, #0x2
   21bc8:	stp	q0, q0, [x20, #224]
   21bcc:	stp	q0, q0, [x20, #192]
   21bd0:	stp	q0, q0, [x20, #160]
   21bd4:	stp	q0, q0, [x20, #128]
   21bd8:	stp	q0, q0, [x20, #96]
   21bdc:	stp	q0, q0, [x20, #64]
   21be0:	stp	q0, q0, [x20, #32]
   21be4:	stp	q0, q0, [x20]
   21be8:	b.ne	21bf8 <rpl_re_compile_fastmap@@Base+0x7d0>  // b.any
   21bec:	ldrb	w8, [x23, #56]
   21bf0:	orr	w8, w8, #0x1
   21bf4:	strb	w8, [x23, #56]
   21bf8:	ldp	x20, x19, [sp, #464]
   21bfc:	ldp	x22, x21, [sp, #448]
   21c00:	ldp	x24, x23, [sp, #432]
   21c04:	ldp	x26, x25, [sp, #416]
   21c08:	ldp	x28, x27, [sp, #400]
   21c0c:	ldp	x29, x30, [sp, #384]
   21c10:	add	sp, sp, #0x1e0
   21c14:	ret

0000000000021c18 <rpl_regcomp@@Base>:
   21c18:	stp	x29, x30, [sp, #-48]!
   21c1c:	stp	x20, x19, [sp, #32]
   21c20:	mov	x19, x0
   21c24:	stp	xzr, xzr, [x0]
   21c28:	str	xzr, [x0, #16]
   21c2c:	mov	w0, #0x100                 	// #256
   21c30:	stp	x22, x21, [sp, #16]
   21c34:	mov	x29, sp
   21c38:	mov	w21, w2
   21c3c:	mov	x20, x1
   21c40:	bl	a550 <malloc@plt>
   21c44:	str	x0, [x19, #32]
   21c48:	cbz	x0, 21d90 <rpl_regcomp@@Base+0x178>
   21c4c:	mov	w8, #0xb2fc                	// #45820
   21c50:	mov	w9, #0x2c6                 	// #710
   21c54:	tst	w21, #0x1
   21c58:	movk	w8, #0x3, lsl #16
   21c5c:	movk	w9, #0x101, lsl #16
   21c60:	lsl	w10, w21, #21
   21c64:	csel	x8, x9, x8, eq  // eq = none
   21c68:	and	w9, w10, #0x400000
   21c6c:	orr	x22, x8, x9
   21c70:	tbnz	w21, #2, 21c80 <rpl_regcomp@@Base+0x68>
   21c74:	ldrb	w8, [x19, #56]
   21c78:	and	w8, w8, #0x7f
   21c7c:	b	21c98 <rpl_regcomp@@Base+0x80>
   21c80:	ldrb	w8, [x19, #56]
   21c84:	mov	w9, #0xb2be                	// #45758
   21c88:	movk	w9, #0x143, lsl #16
   21c8c:	and	x9, x22, x9
   21c90:	orr	x22, x9, #0x100
   21c94:	orr	w8, w8, #0xffffff80
   21c98:	lsl	w9, w21, #1
   21c9c:	strb	w8, [x19, #56]
   21ca0:	and	w8, w8, #0xffffffef
   21ca4:	and	w9, w9, #0x10
   21ca8:	orr	w8, w8, w9
   21cac:	mov	x0, x20
   21cb0:	strb	w8, [x19, #56]
   21cb4:	str	xzr, [x19, #40]
   21cb8:	bl	a290 <strlen@plt>
   21cbc:	mov	x2, x0
   21cc0:	mov	x0, x19
   21cc4:	mov	x1, x20
   21cc8:	mov	x3, x22
   21ccc:	bl	20108 <rpl_re_compile_pattern@@Base+0x7c>
   21cd0:	cmp	w0, #0x10
   21cd4:	mov	w8, #0x8                   	// #8
   21cd8:	csel	w20, w8, w0, eq  // eq = none
   21cdc:	cbnz	w20, 21d98 <rpl_regcomp@@Base+0x180>
   21ce0:	ldr	x20, [x19, #32]
   21ce4:	ldr	x21, [x19]
   21ce8:	movi	v0.2d, #0x0
   21cec:	mov	x0, x19
   21cf0:	stp	q0, q0, [x20, #224]
   21cf4:	stp	q0, q0, [x20, #192]
   21cf8:	stp	q0, q0, [x20, #160]
   21cfc:	stp	q0, q0, [x20, #128]
   21d00:	stp	q0, q0, [x20, #96]
   21d04:	stp	q0, q0, [x20, #64]
   21d08:	stp	q0, q0, [x20, #32]
   21d0c:	stp	q0, q0, [x20]
   21d10:	ldr	x1, [x21, #72]
   21d14:	mov	x2, x20
   21d18:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   21d1c:	ldp	x8, x1, [x21, #72]
   21d20:	cmp	x8, x1
   21d24:	b.eq	21d38 <rpl_regcomp@@Base+0x120>  // b.none
   21d28:	mov	x0, x19
   21d2c:	mov	x2, x20
   21d30:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   21d34:	ldr	x8, [x21, #72]
   21d38:	ldr	x1, [x21, #88]
   21d3c:	cmp	x8, x1
   21d40:	b.eq	21d54 <rpl_regcomp@@Base+0x13c>  // b.none
   21d44:	mov	x0, x19
   21d48:	mov	x2, x20
   21d4c:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   21d50:	ldr	x8, [x21, #72]
   21d54:	ldr	x1, [x21, #96]
   21d58:	cmp	x8, x1
   21d5c:	b.eq	21d6c <rpl_regcomp@@Base+0x154>  // b.none
   21d60:	mov	x0, x19
   21d64:	mov	x2, x20
   21d68:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   21d6c:	ldrb	w8, [x19, #56]
   21d70:	mov	w20, wzr
   21d74:	orr	w8, w8, #0x8
   21d78:	strb	w8, [x19, #56]
   21d7c:	mov	w0, w20
   21d80:	ldp	x20, x19, [sp, #32]
   21d84:	ldp	x22, x21, [sp, #16]
   21d88:	ldp	x29, x30, [sp], #48
   21d8c:	ret
   21d90:	mov	w20, #0xc                   	// #12
   21d94:	b	21d7c <rpl_regcomp@@Base+0x164>
   21d98:	ldr	x0, [x19, #32]
   21d9c:	bl	a970 <free@plt>
   21da0:	str	xzr, [x19, #32]
   21da4:	b	21d7c <rpl_regcomp@@Base+0x164>

0000000000021da8 <rpl_regerror@@Base>:
   21da8:	stp	x29, x30, [sp, #-48]!
   21dac:	cmp	w0, #0x11
   21db0:	stp	x22, x21, [sp, #16]
   21db4:	stp	x20, x19, [sp, #32]
   21db8:	mov	x29, sp
   21dbc:	b.cs	21e34 <rpl_regerror@@Base+0x8c>  // b.hs, b.nlast
   21dc0:	adrp	x8, 34000 <vasnprintf@@Base+0x3474>
   21dc4:	add	x8, x8, #0x438
   21dc8:	ldr	x8, [x8, w0, uxtw #3]
   21dcc:	adrp	x9, 34000 <vasnprintf@@Base+0x3474>
   21dd0:	add	x9, x9, #0x2b5
   21dd4:	mov	x19, x2
   21dd8:	add	x1, x9, x8
   21ddc:	mov	w2, #0x5                   	// #5
   21de0:	mov	x0, xzr
   21de4:	mov	x20, x3
   21de8:	bl	ac90 <dcgettext@plt>
   21dec:	mov	x21, x0
   21df0:	bl	a290 <strlen@plt>
   21df4:	add	x22, x0, #0x1
   21df8:	cbz	x20, 21e14 <rpl_regerror@@Base+0x6c>
   21dfc:	cmp	x22, x20
   21e00:	mov	x2, x22
   21e04:	b.hi	21e28 <rpl_regerror@@Base+0x80>  // b.pmore
   21e08:	mov	x0, x19
   21e0c:	mov	x1, x21
   21e10:	bl	a210 <memcpy@plt>
   21e14:	mov	x0, x22
   21e18:	ldp	x20, x19, [sp, #32]
   21e1c:	ldp	x22, x21, [sp, #16]
   21e20:	ldp	x29, x30, [sp], #48
   21e24:	ret
   21e28:	sub	x2, x20, #0x1
   21e2c:	strb	wzr, [x19, x2]
   21e30:	b	21e08 <rpl_regerror@@Base+0x60>
   21e34:	bl	a850 <abort@plt>

0000000000021e38 <rpl_regfree@@Base>:
   21e38:	stp	x29, x30, [sp, #-32]!
   21e3c:	stp	x20, x19, [sp, #16]
   21e40:	ldr	x20, [x0]
   21e44:	mov	x19, x0
   21e48:	mov	x29, sp
   21e4c:	cbz	x20, 21e78 <rpl_regfree@@Base+0x40>
   21e50:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   21e54:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   21e58:	ldr	x8, [x8, #3944]
   21e5c:	ldr	x9, [x9, #4040]
   21e60:	orr	x8, x9, x8
   21e64:	cbz	x8, 21e70 <rpl_regfree@@Base+0x38>
   21e68:	add	x0, x20, #0xe8
   21e6c:	bl	ab20 <pthread_mutex_destroy@plt>
   21e70:	mov	x0, x20
   21e74:	bl	21ea0 <rpl_regfree@@Base+0x68>
   21e78:	ldr	x0, [x19, #32]
   21e7c:	stp	xzr, xzr, [x19]
   21e80:	bl	a970 <free@plt>
   21e84:	ldr	x0, [x19, #40]
   21e88:	str	xzr, [x19, #32]
   21e8c:	bl	a970 <free@plt>
   21e90:	str	xzr, [x19, #40]
   21e94:	ldp	x20, x19, [sp, #16]
   21e98:	ldp	x29, x30, [sp], #32
   21e9c:	ret
   21ea0:	stp	x29, x30, [sp, #-64]!
   21ea4:	stp	x24, x23, [sp, #16]
   21ea8:	stp	x22, x21, [sp, #32]
   21eac:	stp	x20, x19, [sp, #48]
   21eb0:	ldr	x8, [x0]
   21eb4:	mov	x19, x0
   21eb8:	mov	x29, sp
   21ebc:	cbz	x8, 21f44 <rpl_regfree@@Base+0x10c>
   21ec0:	ldr	x9, [x19, #16]
   21ec4:	cbz	x9, 21f44 <rpl_regfree@@Base+0x10c>
   21ec8:	mov	w23, #0xff                  	// #255
   21ecc:	mov	x21, xzr
   21ed0:	mov	w22, #0x1                   	// #1
   21ed4:	movk	w23, #0x4, lsl #16
   21ed8:	add	x9, x8, x21
   21edc:	ldr	w9, [x9, #8]
   21ee0:	and	w9, w9, w23
   21ee4:	cmp	w9, #0x3
   21ee8:	b.eq	21f1c <rpl_regfree@@Base+0xe4>  // b.none
   21eec:	cmp	w9, #0x6
   21ef0:	b.ne	21f28 <rpl_regfree@@Base+0xf0>  // b.any
   21ef4:	ldr	x20, [x8, x21]
   21ef8:	ldr	x0, [x20]
   21efc:	bl	a970 <free@plt>
   21f00:	ldr	x0, [x20, #8]
   21f04:	bl	a970 <free@plt>
   21f08:	ldr	x0, [x20, #16]
   21f0c:	bl	a970 <free@plt>
   21f10:	ldr	x0, [x20, #24]
   21f14:	bl	a970 <free@plt>
   21f18:	b	21f20 <rpl_regfree@@Base+0xe8>
   21f1c:	ldr	x20, [x8, x21]
   21f20:	mov	x0, x20
   21f24:	bl	a970 <free@plt>
   21f28:	ldr	x8, [x19, #16]
   21f2c:	cmp	x22, x8
   21f30:	b.cs	21f44 <rpl_regfree@@Base+0x10c>  // b.hs, b.nlast
   21f34:	ldr	x8, [x19]
   21f38:	add	x22, x22, #0x1
   21f3c:	add	x21, x21, #0x10
   21f40:	b	21ed8 <rpl_regfree@@Base+0xa0>
   21f44:	ldr	x0, [x19, #24]
   21f48:	bl	a970 <free@plt>
   21f4c:	ldr	x8, [x19, #16]
   21f50:	cbz	x8, 21fa8 <rpl_regfree@@Base+0x170>
   21f54:	mov	x20, xzr
   21f58:	mov	w21, #0x10                  	// #16
   21f5c:	b	21f74 <rpl_regfree@@Base+0x13c>
   21f60:	ldr	x8, [x19, #16]
   21f64:	add	x20, x20, #0x1
   21f68:	add	x21, x21, #0x18
   21f6c:	cmp	x20, x8
   21f70:	b.cs	21fa8 <rpl_regfree@@Base+0x170>  // b.hs, b.nlast
   21f74:	ldr	x8, [x19, #48]
   21f78:	cbz	x8, 21f84 <rpl_regfree@@Base+0x14c>
   21f7c:	ldr	x0, [x8, x21]
   21f80:	bl	a970 <free@plt>
   21f84:	ldr	x8, [x19, #56]
   21f88:	cbz	x8, 21f94 <rpl_regfree@@Base+0x15c>
   21f8c:	ldr	x0, [x8, x21]
   21f90:	bl	a970 <free@plt>
   21f94:	ldr	x8, [x19, #40]
   21f98:	cbz	x8, 21f60 <rpl_regfree@@Base+0x128>
   21f9c:	ldr	x0, [x8, x21]
   21fa0:	bl	a970 <free@plt>
   21fa4:	b	21f60 <rpl_regfree@@Base+0x128>
   21fa8:	ldr	x0, [x19, #40]
   21fac:	bl	a970 <free@plt>
   21fb0:	ldr	x0, [x19, #48]
   21fb4:	bl	a970 <free@plt>
   21fb8:	ldr	x0, [x19, #56]
   21fbc:	bl	a970 <free@plt>
   21fc0:	ldr	x0, [x19]
   21fc4:	bl	a970 <free@plt>
   21fc8:	ldr	x0, [x19, #64]
   21fcc:	cbz	x0, 22030 <rpl_regfree@@Base+0x1f8>
   21fd0:	mov	x20, xzr
   21fd4:	mov	w21, #0x18                  	// #24
   21fd8:	madd	x23, x20, x21, x0
   21fdc:	mov	x22, x23
   21fe0:	ldr	x8, [x22], #16
   21fe4:	cmp	x8, #0x1
   21fe8:	b.lt	2200c <rpl_regfree@@Base+0x1d4>  // b.tstop
   21fec:	mov	x24, xzr
   21ff0:	ldr	x8, [x22]
   21ff4:	ldr	x0, [x8, x24, lsl #3]
   21ff8:	bl	24f40 <rpl_re_set_registers@@Base+0x2c>
   21ffc:	ldr	x8, [x23]
   22000:	add	x24, x24, #0x1
   22004:	cmp	x24, x8
   22008:	b.lt	21ff0 <rpl_regfree@@Base+0x1b8>  // b.tstop
   2200c:	ldr	x0, [x22]
   22010:	bl	a970 <free@plt>
   22014:	ldr	x8, [x19, #136]
   22018:	cmp	x20, x8
   2201c:	b.cs	2202c <rpl_regfree@@Base+0x1f4>  // b.hs, b.nlast
   22020:	ldr	x0, [x19, #64]
   22024:	add	x20, x20, #0x1
   22028:	b	21fd8 <rpl_regfree@@Base+0x1a0>
   2202c:	ldr	x0, [x19, #64]
   22030:	bl	a970 <free@plt>
   22034:	ldr	x0, [x19, #120]
   22038:	adrp	x8, 34000 <vasnprintf@@Base+0x3474>
   2203c:	add	x8, x8, #0x4c0
   22040:	cmp	x0, x8
   22044:	b.eq	2204c <rpl_regfree@@Base+0x214>  // b.none
   22048:	bl	a970 <free@plt>
   2204c:	ldr	x0, [x19, #224]
   22050:	bl	a970 <free@plt>
   22054:	mov	x0, x19
   22058:	ldp	x20, x19, [sp, #48]
   2205c:	ldp	x22, x21, [sp, #32]
   22060:	ldp	x24, x23, [sp, #16]
   22064:	ldp	x29, x30, [sp], #64
   22068:	b	a970 <free@plt>

000000000002206c <rpl_regexec@@Base>:
   2206c:	cmp	w4, #0x7
   22070:	b.ls	2207c <rpl_regexec@@Base+0x10>  // b.plast
   22074:	mov	w0, #0x2                   	// #2
   22078:	ret
   2207c:	sub	sp, sp, #0x70
   22080:	stp	x26, x25, [sp, #48]
   22084:	ldr	x26, [x0]
   22088:	stp	x24, x23, [sp, #64]
   2208c:	stp	x22, x21, [sp, #80]
   22090:	stp	x20, x19, [sp, #96]
   22094:	mov	w22, w4
   22098:	mov	x19, x3
   2209c:	mov	x21, x2
   220a0:	mov	x20, x1
   220a4:	mov	x23, x0
   220a8:	stp	x29, x30, [sp, #16]
   220ac:	stp	x28, x27, [sp, #32]
   220b0:	add	x29, sp, #0x10
   220b4:	tbnz	w4, #2, 220cc <rpl_regexec@@Base+0x60>
   220b8:	mov	x0, x20
   220bc:	bl	a290 <strlen@plt>
   220c0:	mov	x24, x0
   220c4:	mov	x25, xzr
   220c8:	b	220d0 <rpl_regexec@@Base+0x64>
   220cc:	ldp	x25, x24, [x19]
   220d0:	adrp	x27, 45000 <vasnprintf@@Base+0x14474>
   220d4:	adrp	x28, 45000 <vasnprintf@@Base+0x14474>
   220d8:	ldr	x27, [x27, #3944]
   220dc:	ldr	x28, [x28, #4040]
   220e0:	orr	x8, x28, x27
   220e4:	cbz	x8, 220f0 <rpl_regexec@@Base+0x84>
   220e8:	add	x0, x26, #0xe8
   220ec:	bl	ade0 <pthread_mutex_lock@plt>
   220f0:	ldrb	w8, [x23, #56]
   220f4:	tbnz	w8, #4, 22130 <rpl_regexec@@Base+0xc4>
   220f8:	mov	x0, x23
   220fc:	mov	x1, x20
   22100:	mov	x2, x24
   22104:	mov	x3, x25
   22108:	mov	x4, x24
   2210c:	mov	x5, x24
   22110:	mov	x6, x21
   22114:	mov	x7, x19
   22118:	str	w22, [sp]
   2211c:	bl	22194 <rpl_regexec@@Base+0x128>
   22120:	mov	w19, w0
   22124:	orr	x8, x28, x27
   22128:	cbnz	x8, 22164 <rpl_regexec@@Base+0xf8>
   2212c:	b	2216c <rpl_regexec@@Base+0x100>
   22130:	str	w22, [sp]
   22134:	mov	x0, x23
   22138:	mov	x1, x20
   2213c:	mov	x2, x24
   22140:	mov	x3, x25
   22144:	mov	x4, x24
   22148:	mov	x5, x24
   2214c:	mov	x6, xzr
   22150:	mov	x7, xzr
   22154:	bl	22194 <rpl_regexec@@Base+0x128>
   22158:	mov	w19, w0
   2215c:	orr	x8, x28, x27
   22160:	cbz	x8, 2216c <rpl_regexec@@Base+0x100>
   22164:	add	x0, x26, #0xe8
   22168:	bl	ae20 <pthread_mutex_unlock@plt>
   2216c:	cmp	w19, #0x0
   22170:	ldp	x20, x19, [sp, #96]
   22174:	ldp	x22, x21, [sp, #80]
   22178:	ldp	x24, x23, [sp, #64]
   2217c:	ldp	x26, x25, [sp, #48]
   22180:	ldp	x28, x27, [sp, #32]
   22184:	ldp	x29, x30, [sp, #16]
   22188:	cset	w0, ne  // ne = any
   2218c:	add	sp, sp, #0x70
   22190:	ret
   22194:	stp	x29, x30, [sp, #-96]!
   22198:	stp	x28, x27, [sp, #16]
   2219c:	stp	x26, x25, [sp, #32]
   221a0:	stp	x24, x23, [sp, #48]
   221a4:	stp	x22, x21, [sp, #64]
   221a8:	stp	x20, x19, [sp, #80]
   221ac:	mov	x29, sp
   221b0:	sub	sp, sp, #0x2b0
   221b4:	ldr	x25, [x0]
   221b8:	movi	v0.2d, #0x0
   221bc:	stp	q0, q0, [sp, #544]
   221c0:	stp	q0, q0, [sp, #512]
   221c4:	stp	q0, q0, [sp, #480]
   221c8:	stp	q0, q0, [sp, #448]
   221cc:	stp	q0, q0, [sp, #416]
   221d0:	stp	q0, q0, [sp, #384]
   221d4:	stp	q0, q0, [sp, #352]
   221d8:	stp	q0, q0, [sp, #320]
   221dc:	str	x25, [sp, #472]
   221e0:	ldr	x8, [x0, #32]
   221e4:	mov	x27, x7
   221e8:	mov	x19, x5
   221ec:	mov	x26, x3
   221f0:	mov	x23, x2
   221f4:	mov	x24, x1
   221f8:	cbz	x8, 22218 <rpl_regexec@@Base+0x1ac>
   221fc:	ldrb	w9, [x0, #56]
   22200:	mov	w10, #0x9                   	// #9
   22204:	and	w9, w9, w10
   22208:	cmp	w9, #0x8
   2220c:	ccmp	x26, x4, #0x4, eq  // eq = none
   22210:	csel	x21, x8, xzr, ne  // ne = any
   22214:	b	2221c <rpl_regexec@@Base+0x1b0>
   22218:	mov	x21, xzr
   2221c:	ldr	x8, [x0, #48]
   22220:	ldr	x9, [x0, #16]
   22224:	mvn	x10, x8
   22228:	add	x10, x10, x6
   2222c:	cmp	x8, x6
   22230:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
   22234:	cbz	x9, 24514 <rpl_regexec@@Base+0x24a8>
   22238:	ldr	x10, [x25, #72]
   2223c:	cbz	x10, 24514 <rpl_regexec@@Base+0x24a8>
   22240:	ldr	x9, [x25, #80]
   22244:	cbz	x9, 24514 <rpl_regexec@@Base+0x24a8>
   22248:	ldr	x8, [x25, #88]
   2224c:	cbz	x8, 24514 <rpl_regexec@@Base+0x24a8>
   22250:	ldr	x11, [x25, #96]
   22254:	cbz	x11, 24514 <rpl_regexec@@Base+0x24a8>
   22258:	ldr	x10, [x10, #16]
   2225c:	ldr	x11, [x0, #40]
   22260:	str	x11, [sp, #296]
   22264:	cbnz	x10, 22270 <rpl_regexec@@Base+0x204>
   22268:	ldr	x9, [x9, #16]
   2226c:	cbz	x9, 244f4 <rpl_regexec@@Base+0x2488>
   22270:	mov	x28, x4
   22274:	sub	x8, x6, x12
   22278:	stp	x6, x12, [sp, #160]
   2227c:	str	x8, [sp, #256]
   22280:	cbz	x8, 2228c <rpl_regexec@@Base+0x220>
   22284:	mov	w8, #0x1                   	// #1
   22288:	b	22298 <rpl_regexec@@Base+0x22c>
   2228c:	ldr	x8, [x25, #152]
   22290:	cmp	x8, #0x0
   22294:	cset	w8, ne  // ne = any
   22298:	str	w8, [sp, #204]
   2229c:	ldr	x8, [x25, #16]
   222a0:	ldrsw	x10, [x25, #180]
   222a4:	ldr	x9, [x0, #24]
   222a8:	ldr	x13, [sp, #296]
   222ac:	add	x12, x8, #0x1
   222b0:	cmp	x12, x10
   222b4:	add	x11, x23, #0x1
   222b8:	and	x12, x9, #0x400000
   222bc:	ubfx	x9, x9, #22, #1
   222c0:	csinc	x8, x10, x8, lt  // lt = tstop
   222c4:	strb	w9, [sp, #456]
   222c8:	orr	x9, x13, x12
   222cc:	cmp	x11, x8
   222d0:	csinc	x20, x8, x23, ge  // ge = tcont
   222d4:	cmp	x9, #0x0
   222d8:	cset	w22, ne  // ne = any
   222dc:	str	x24, [sp, #320]
   222e0:	stp	x23, x23, [sp, #400]
   222e4:	str	x13, [sp, #440]
   222e8:	str	w10, [sp, #464]
   222ec:	strb	w22, [sp, #459]
   222f0:	ldrb	w8, [x25, #176]
   222f4:	cmp	w10, #0x2
   222f8:	stp	x23, x23, [sp, #416]
   222fc:	str	x25, [sp, #304]
   22300:	ubfx	w9, w8, #2, #1
   22304:	ubfx	w8, w8, #3, #1
   22308:	strb	w9, [sp, #457]
   2230c:	strb	w8, [sp, #458]
   22310:	b.lt	22364 <rpl_regexec@@Base+0x2f8>  // b.tstop
   22314:	lsr	x8, x20, #61
   22318:	cbnz	x8, 24748 <rpl_regexec@@Base+0x26dc>
   2231c:	str	x28, [sp, #312]
   22320:	mov	x28, x19
   22324:	mov	x19, x21
   22328:	mov	x21, x27
   2232c:	mov	x27, x24
   22330:	mov	x24, x23
   22334:	mov	x23, x0
   22338:	lsl	x0, x20, #2
   2233c:	bl	a550 <malloc@plt>
   22340:	cbz	x0, 24748 <rpl_regexec@@Base+0x26dc>
   22344:	str	x0, [sp, #336]
   22348:	mov	x0, x23
   2234c:	mov	x23, x24
   22350:	mov	x24, x27
   22354:	mov	x27, x21
   22358:	mov	x21, x19
   2235c:	mov	x19, x28
   22360:	ldr	x28, [sp, #312]
   22364:	cbz	w22, 22388 <rpl_regexec@@Base+0x31c>
   22368:	mov	x22, x0
   2236c:	mov	x0, x20
   22370:	bl	a550 <malloc@plt>
   22374:	cbz	x0, 24748 <rpl_regexec@@Base+0x26dc>
   22378:	mov	w8, wzr
   2237c:	str	x0, [sp, #328]
   22380:	mov	x0, x22
   22384:	b	2238c <rpl_regexec@@Base+0x320>
   22388:	mov	w8, #0x1                   	// #1
   2238c:	add	x9, x25, #0xb8
   22390:	str	x20, [sp, #384]
   22394:	str	x9, [sp, #448]
   22398:	ldrb	w9, [x25, #176]
   2239c:	ldr	w10, [x29, #96]
   223a0:	str	x27, [sp, #176]
   223a4:	ubfx	w9, w9, #4, #1
   223a8:	str	w10, [sp, #312]
   223ac:	strb	w9, [sp, #462]
   223b0:	cbz	w8, 223c8 <rpl_regexec@@Base+0x35c>
   223b4:	str	x24, [sp, #328]
   223b8:	ldr	w8, [x25, #180]
   223bc:	cmp	w8, #0x1
   223c0:	csel	x8, xzr, x23, gt
   223c4:	b	223cc <rpl_regexec@@Base+0x360>
   223c8:	mov	x8, xzr
   223cc:	stp	x8, x8, [sp, #368]
   223d0:	stp	x19, x19, [sp, #416]
   223d4:	ldrb	w8, [x0, #56]
   223d8:	ldr	w9, [sp, #312]
   223dc:	str	x0, [sp, #192]
   223e0:	lsr	w8, w8, #7
   223e4:	strb	w8, [sp, #461]
   223e8:	ldr	x25, [x25, #152]
   223ec:	mov	x8, #0xffffffffffffffff    	// #-1
   223f0:	str	w9, [sp, #480]
   223f4:	str	x8, [sp, #488]
   223f8:	lsl	x22, x25, #1
   223fc:	cmp	x25, #0x1
   22400:	b.lt	22440 <rpl_regexec@@Base+0x3d4>  // b.tstop
   22404:	mov	x8, #0x6666666666666666    	// #7378697629483820646
   22408:	movk	x8, #0x666, lsl #48
   2240c:	cmp	x22, x8
   22410:	b.hi	24748 <rpl_regexec@@Base+0x26dc>  // b.pmore
   22414:	add	x8, x25, x25, lsl #2
   22418:	lsl	x0, x8, #4
   2241c:	bl	a550 <malloc@plt>
   22420:	mov	x19, x0
   22424:	str	x0, [sp, #536]
   22428:	lsl	x0, x25, #4
   2242c:	bl	a550 <malloc@plt>
   22430:	mov	w25, #0xc                   	// #12
   22434:	str	x0, [sp, #568]
   22438:	cbz	x19, 2467c <rpl_regexec@@Base+0x2610>
   2243c:	cbz	x0, 2467c <rpl_regexec@@Base+0x2610>
   22440:	ldr	x9, [sp, #256]
   22444:	ldr	x19, [sp, #304]
   22448:	mov	w8, #0x1                   	// #1
   2244c:	str	x22, [sp, #528]
   22450:	cmp	x9, #0x1
   22454:	str	w8, [sp, #544]
   22458:	str	x22, [sp, #560]
   2245c:	b.hi	22470 <rpl_regexec@@Base+0x404>  // b.pmore
   22460:	ldrb	w8, [x19, #176]
   22464:	tbnz	w8, #1, 22470 <rpl_regexec@@Base+0x404>
   22468:	str	xzr, [sp, #504]
   2246c:	b	22490 <rpl_regexec@@Base+0x424>
   22470:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
   22474:	cmp	x20, x8
   22478:	b.hi	24748 <rpl_regexec@@Base+0x26dc>  // b.pmore
   2247c:	lsl	x8, x20, #3
   22480:	add	x0, x8, #0x8
   22484:	bl	a550 <malloc@plt>
   22488:	str	x0, [sp, #504]
   2248c:	cbz	x0, 24748 <rpl_regexec@@Base+0x26dc>
   22490:	ldr	w9, [sp, #312]
   22494:	mov	w10, #0x6                   	// #6
   22498:	stur	x26, [x29, #-112]
   2249c:	add	x8, sp, #0x140
   224a0:	tst	w9, #0x1
   224a4:	mov	w9, #0x4                   	// #4
   224a8:	csel	w9, w10, w9, eq  // eq = none
   224ac:	str	w9, [sp, #432]
   224b0:	ldr	w19, [x19, #180]
   224b4:	cmp	x28, x26
   224b8:	csel	x22, x28, x26, lt  // lt = tstop
   224bc:	csel	x27, x26, x28, lt  // lt = tstop
   224c0:	cbz	x21, 224d8 <rpl_regexec@@Base+0x46c>
   224c4:	cmp	w19, #0x1
   224c8:	b.ne	224e0 <rpl_regexec@@Base+0x474>  // b.any
   224cc:	ldr	x11, [sp, #296]
   224d0:	mov	w9, #0x4                   	// #4
   224d4:	b	22500 <rpl_regexec@@Base+0x494>
   224d8:	mov	w9, #0x8                   	// #8
   224dc:	b	22518 <rpl_regexec@@Base+0x4ac>
   224e0:	ldr	x9, [sp, #192]
   224e4:	ldr	x11, [sp, #296]
   224e8:	ldr	x9, [x9, #24]
   224ec:	and	x9, x9, #0x400000
   224f0:	orr	x9, x11, x9
   224f4:	cmp	x9, #0x0
   224f8:	cset	w9, eq  // eq = none
   224fc:	lsl	w9, w9, #2
   22500:	cmp	x28, x26
   22504:	cset	w10, ge  // ge = tcont
   22508:	cmp	x11, #0x0
   2250c:	cset	w11, ne  // ne = any
   22510:	bfi	w11, w10, #1, #1
   22514:	orr	w9, w11, w9
   22518:	add	x8, x8, #0x38
   2251c:	str	x8, [sp, #152]
   22520:	add	x8, sp, #0x140
   22524:	cmp	x28, x26
   22528:	sub	x10, x29, #0x70
   2252c:	add	x8, x8, #0xc0
   22530:	mov	x11, #0xffffffffffffffff    	// #-1
   22534:	str	x8, [sp, #224]
   22538:	csel	x8, xzr, x10, lt  // lt = tstop
   2253c:	sub	x12, x29, #0x60
   22540:	cneg	x28, x11, ge  // ge = tcont
   22544:	cmp	x8, #0x0
   22548:	sub	w20, w9, #0x4
   2254c:	add	x9, x12, #0x20
   22550:	str	x8, [sp, #208]
   22554:	cset	w8, ne  // ne = any
   22558:	str	x9, [sp, #184]
   2255c:	str	w8, [sp, #220]
   22560:	str	x22, [sp, #280]
   22564:	str	w19, [sp, #276]
   22568:	stp	x28, x20, [sp, #240]
   2256c:	cmp	w20, #0x4
   22570:	b.hi	22724 <rpl_regexec@@Base+0x6b8>  // b.pmore
   22574:	adrp	x10, 34000 <vasnprintf@@Base+0x3474>
   22578:	add	x10, x10, #0x17a
   2257c:	adr	x8, 2258c <rpl_regexec@@Base+0x520>
   22580:	ldrb	w9, [x10, x20]
   22584:	add	x8, x8, x9, lsl #2
   22588:	br	x8
   2258c:	cmp	x26, x22
   22590:	b.lt	2447c <rpl_regexec@@Base+0x2410>  // b.tstop
   22594:	ldr	x9, [sp, #296]
   22598:	cbnz	x9, 225c0 <rpl_regexec@@Base+0x554>
   2259c:	b	225f8 <rpl_regexec@@Base+0x58c>
   225a0:	mov	x8, xzr
   225a4:	ldrb	w8, [x9, x8]
   225a8:	ldrb	w8, [x21, x8]
   225ac:	cbnz	w8, 2266c <rpl_regexec@@Base+0x600>
   225b0:	cmp	x26, x22
   225b4:	sub	x26, x26, #0x1
   225b8:	stur	x26, [x29, #-112]
   225bc:	b.le	2447c <rpl_regexec@@Base+0x2410>
   225c0:	cmp	x26, x23
   225c4:	b.ge	225a0 <rpl_regexec@@Base+0x534>  // b.tcont
   225c8:	ldrb	w8, [x24, x26]
   225cc:	ldrb	w8, [x9, x8]
   225d0:	ldrb	w8, [x21, x8]
   225d4:	cbz	w8, 225b0 <rpl_regexec@@Base+0x544>
   225d8:	b	2266c <rpl_regexec@@Base+0x600>
   225dc:	mov	x8, xzr
   225e0:	ldrb	w8, [x21, x8]
   225e4:	cbnz	w8, 2266c <rpl_regexec@@Base+0x600>
   225e8:	cmp	x26, x22
   225ec:	sub	x26, x26, #0x1
   225f0:	stur	x26, [x29, #-112]
   225f4:	b.le	2447c <rpl_regexec@@Base+0x2410>
   225f8:	cmp	x26, x23
   225fc:	b.ge	225dc <rpl_regexec@@Base+0x570>  // b.tcont
   22600:	ldrb	w8, [x24, x26]
   22604:	ldrb	w8, [x21, x8]
   22608:	cbz	w8, 225e8 <rpl_regexec@@Base+0x57c>
   2260c:	b	2266c <rpl_regexec@@Base+0x600>
   22610:	cmp	x26, x27
   22614:	b.ge	22664 <rpl_regexec@@Base+0x5f8>  // b.tcont
   22618:	ldr	x9, [sp, #296]
   2261c:	ldrb	w8, [x24, x26]
   22620:	ldrb	w8, [x9, x8]
   22624:	ldrb	w8, [x21, x8]
   22628:	cbnz	w8, 22664 <rpl_regexec@@Base+0x5f8>
   2262c:	add	x26, x26, #0x1
   22630:	cmp	x26, x27
   22634:	stur	x26, [x29, #-112]
   22638:	b.lt	2261c <rpl_regexec@@Base+0x5b0>  // b.tstop
   2263c:	b	22664 <rpl_regexec@@Base+0x5f8>
   22640:	cmp	x26, x27
   22644:	b.ge	22664 <rpl_regexec@@Base+0x5f8>  // b.tcont
   22648:	ldrb	w8, [x24, x26]
   2264c:	ldrb	w8, [x21, x8]
   22650:	cbnz	w8, 22664 <rpl_regexec@@Base+0x5f8>
   22654:	add	x26, x26, #0x1
   22658:	cmp	x26, x27
   2265c:	stur	x26, [x29, #-112]
   22660:	b.lt	22648 <rpl_regexec@@Base+0x5dc>  // b.tstop
   22664:	cmp	x26, x27
   22668:	b.eq	22840 <rpl_regexec@@Base+0x7d4>  // b.none
   2266c:	ldr	w2, [sp, #312]
   22670:	add	x0, sp, #0x140
   22674:	mov	x1, x26
   22678:	bl	2b044 <rpl_re_set_registers@@Base+0x6130>
   2267c:	cbnz	w0, 24734 <rpl_regexec@@Base+0x26c8>
   22680:	cmp	w19, #0x1
   22684:	b.eq	226a0 <rpl_regexec@@Base+0x634>  // b.none
   22688:	ldr	x8, [sp, #368]
   2268c:	cbz	x8, 226a0 <rpl_regexec@@Base+0x634>
   22690:	ldr	x8, [sp, #336]
   22694:	ldr	w8, [x8]
   22698:	cmn	w8, #0x1
   2269c:	b.eq	2413c <rpl_regexec@@Base+0x20d0>  // b.none
   226a0:	ldr	x8, [sp, #224]
   226a4:	str	wzr, [sp, #544]
   226a8:	stur	wzr, [x29, #-100]
   226ac:	stp	xzr, xzr, [x8]
   226b0:	ldr	x19, [sp, #472]
   226b4:	ldr	x11, [sp, #392]
   226b8:	ldr	x28, [x19, #72]
   226bc:	ldrsb	w8, [x28, #104]
   226c0:	tbnz	w8, #31, 226cc <rpl_regexec@@Base+0x660>
   226c4:	ldr	w26, [sp, #220]
   226c8:	b	22868 <rpl_regexec@@Base+0x7fc>
   226cc:	ldr	w26, [sp, #220]
   226d0:	cmp	x11, #0x0
   226d4:	b.le	22718 <rpl_regexec@@Base+0x6ac>
   226d8:	ldr	x9, [sp, #408]
   226dc:	sub	x8, x11, #0x1
   226e0:	cmp	x9, x8
   226e4:	b.eq	22850 <rpl_regexec@@Base+0x7e4>  // b.none
   226e8:	ldr	w9, [sp, #464]
   226ec:	cmp	w9, #0x2
   226f0:	b.lt	227a8 <rpl_regexec@@Base+0x73c>  // b.tstop
   226f4:	ldr	x8, [sp, #336]
   226f8:	mov	x9, x11
   226fc:	sub	x8, x8, #0x4
   22700:	ldr	w20, [x8, x9, lsl #2]
   22704:	cmn	w20, #0x1
   22708:	b.ne	227d4 <rpl_regexec@@Base+0x768>  // b.any
   2270c:	sub	x9, x9, #0x1
   22710:	cmp	x9, #0x0
   22714:	b.gt	22700 <rpl_regexec@@Base+0x694>
   22718:	ldr	w3, [sp, #432]
   2271c:	tbnz	w3, #0, 22864 <rpl_regexec@@Base+0x7f8>
   22720:	b	227f8 <rpl_regexec@@Base+0x78c>
   22724:	ldr	x8, [sp, #360]
   22728:	ldr	x10, [sp, #376]
   2272c:	sub	x9, x26, x8
   22730:	cmp	x9, x10
   22734:	b.cs	22754 <rpl_regexec@@Base+0x6e8>  // b.hs, b.nlast
   22738:	cmp	x26, x23
   2273c:	b.ge	2277c <rpl_regexec@@Base+0x710>  // b.tcont
   22740:	ldr	x10, [sp, #328]
   22744:	ldrb	w9, [x10, x9]
   22748:	ldrb	w9, [x21, x9]
   2274c:	cbz	w9, 22788 <rpl_regexec@@Base+0x71c>
   22750:	b	2266c <rpl_regexec@@Base+0x600>
   22754:	ldr	w2, [sp, #312]
   22758:	add	x0, sp, #0x140
   2275c:	mov	x1, x26
   22760:	bl	2b044 <rpl_re_set_registers@@Base+0x6130>
   22764:	cbnz	w0, 24734 <rpl_regexec@@Base+0x26c8>
   22768:	ldur	x26, [x29, #-112]
   2276c:	ldr	x8, [sp, #360]
   22770:	sub	x9, x26, x8
   22774:	cmp	x26, x23
   22778:	b.lt	22740 <rpl_regexec@@Base+0x6d4>  // b.tstop
   2277c:	mov	x9, xzr
   22780:	ldrb	w9, [x21, x9]
   22784:	cbnz	w9, 2266c <rpl_regexec@@Base+0x600>
   22788:	add	x26, x26, x28
   2278c:	cmp	x26, x22
   22790:	mov	w25, #0x1                   	// #1
   22794:	stur	x26, [x29, #-112]
   22798:	b.lt	2467c <rpl_regexec@@Base+0x2610>  // b.tstop
   2279c:	cmp	x26, x27
   227a0:	b.le	22728 <rpl_regexec@@Base+0x6bc>
   227a4:	b	2467c <rpl_regexec@@Base+0x2610>
   227a8:	ldr	x9, [sp, #328]
   227ac:	ldr	x10, [sp, #448]
   227b0:	ldrb	w8, [x9, x8]
   227b4:	lsr	x9, x8, #3
   227b8:	and	x9, x9, #0x18
   227bc:	ldr	x9, [x10, x9]
   227c0:	lsr	x9, x9, x8
   227c4:	tbnz	w9, #0, 22864 <rpl_regexec@@Base+0x7f8>
   227c8:	cmp	w8, #0xa
   227cc:	b.eq	227e4 <rpl_regexec@@Base+0x778>  // b.none
   227d0:	b	22868 <rpl_regexec@@Base+0x7fc>
   227d4:	ldrb	w8, [sp, #462]
   227d8:	cbnz	w8, 24448 <rpl_regexec@@Base+0x23dc>
   227dc:	cmp	w20, #0xa
   227e0:	b.ne	22868 <rpl_regexec@@Base+0x7fc>  // b.any
   227e4:	ldrb	w8, [sp, #461]
   227e8:	cmp	w8, #0x0
   227ec:	cset	w8, ne  // ne = any
   227f0:	lsl	w3, w8, #1
   227f4:	tbnz	w3, #0, 22864 <rpl_regexec@@Base+0x7f8>
   227f8:	cbz	w3, 22868 <rpl_regexec@@Base+0x7fc>
   227fc:	tbz	w3, #1, 2280c <rpl_regexec@@Base+0x7a0>
   22800:	tbz	w3, #2, 2280c <rpl_regexec@@Base+0x7a0>
   22804:	ldr	x28, [x19, #96]
   22808:	b	22868 <rpl_regexec@@Base+0x7fc>
   2280c:	tbnz	w3, #1, 22838 <rpl_regexec@@Base+0x7cc>
   22810:	ldr	x28, [x19, #72]
   22814:	tbz	w3, #2, 22868 <rpl_regexec@@Base+0x7fc>
   22818:	ldr	x2, [x28, #80]
   2281c:	sub	x0, x29, #0x64
   22820:	mov	x1, x19
   22824:	mov	x20, x11
   22828:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2282c:	mov	x11, x20
   22830:	mov	x28, x0
   22834:	b	22868 <rpl_regexec@@Base+0x7fc>
   22838:	ldr	x28, [x19, #88]
   2283c:	b	22868 <rpl_regexec@@Base+0x7fc>
   22840:	cmp	x27, x23
   22844:	b.ge	243f4 <rpl_regexec@@Base+0x2388>  // b.tcont
   22848:	ldrb	w8, [x24, x27]
   2284c:	b	243f8 <rpl_regexec@@Base+0x238c>
   22850:	ldr	w8, [sp, #480]
   22854:	mov	w9, #0xa                   	// #10
   22858:	and	w8, w8, #0x2
   2285c:	eor	w3, w8, w9
   22860:	tbz	w3, #0, 227f8 <rpl_regexec@@Base+0x78c>
   22864:	ldr	x28, [x19, #80]
   22868:	cbz	x28, 2473c <rpl_regexec@@Base+0x26d0>
   2286c:	ldr	x8, [sp, #504]
   22870:	mov	w25, w26
   22874:	cbz	x8, 22888 <rpl_regexec@@Base+0x81c>
   22878:	str	x28, [x8, x11, lsl #3]
   2287c:	ldr	x8, [x19, #152]
   22880:	mov	w25, w26
   22884:	cbnz	x8, 2428c <rpl_regexec@@Base+0x2220>
   22888:	ldrsb	w26, [x28, #104]
   2288c:	tbnz	w26, #4, 2426c <rpl_regexec@@Base+0x2200>
   22890:	mov	x8, #0xffffffffffffffff    	// #-1
   22894:	str	xzr, [sp, #232]
   22898:	str	x8, [sp, #288]
   2289c:	ldr	x8, [sp, #424]
   228a0:	ldr	x19, [sp, #392]
   228a4:	cmp	x8, x19
   228a8:	b.le	23ef0 <rpl_regexec@@Base+0x1e84>
   228ac:	ldr	x9, [sp, #208]
   228b0:	str	x9, [sp, #264]
   228b4:	ldr	x9, [sp, #384]
   228b8:	ldr	x8, [sp, #408]
   228bc:	add	x20, x19, #0x1
   228c0:	mov	x22, x28
   228c4:	cmp	x20, x9
   228c8:	b.lt	228d4 <rpl_regexec@@Base+0x868>  // b.tstop
   228cc:	cmp	x9, x8
   228d0:	b.lt	23948 <rpl_regexec@@Base+0x18dc>  // b.tstop
   228d4:	ldr	x9, [sp, #368]
   228d8:	cmp	x20, x9
   228dc:	b.lt	228e8 <rpl_regexec@@Base+0x87c>  // b.tstop
   228e0:	cmp	x9, x8
   228e4:	b.lt	23948 <rpl_regexec@@Base+0x18dc>  // b.tstop
   228e8:	tbnz	w26, #5, 23978 <rpl_regexec@@Base+0x190c>
   228ec:	ldr	x8, [sp, #392]
   228f0:	ldr	x9, [sp, #328]
   228f4:	mov	x19, x22
   228f8:	add	x10, x8, #0x1
   228fc:	str	x10, [sp, #392]
   22900:	ldrb	w28, [x9, x8]
   22904:	ldr	x0, [x19, #88]!
   22908:	cbz	x0, 22a4c <rpl_regexec@@Base+0x9e0>
   2290c:	ldr	x28, [x0, x28, lsl #3]
   22910:	ldr	x8, [sp, #504]
   22914:	cbz	x8, 22934 <rpl_regexec@@Base+0x8c8>
   22918:	sub	x0, x29, #0x64
   2291c:	add	x1, sp, #0x140
   22920:	mov	x2, x28
   22924:	mov	x19, x11
   22928:	bl	2d38c <rpl_re_set_registers@@Base+0x8478>
   2292c:	mov	x11, x19
   22930:	mov	x28, x0
   22934:	cbz	x28, 2295c <rpl_regexec@@Base+0x8f0>
   22938:	ldrsb	w26, [x28, #104]
   2293c:	cmp	x22, x28
   22940:	cset	w22, eq  // eq = none
   22944:	tst	w25, w22
   22948:	csel	x11, x20, x11, ne  // ne = any
   2294c:	tbnz	w26, #4, 229e0 <rpl_regexec@@Base+0x974>
   22950:	ldr	x19, [sp, #392]
   22954:	ldr	x9, [sp, #264]
   22958:	b	22a1c <rpl_regexec@@Base+0x9b0>
   2295c:	ldur	w8, [x29, #-100]
   22960:	cbnz	w8, 24748 <rpl_regexec@@Base+0x26dc>
   22964:	ldr	x8, [sp, #232]
   22968:	ldr	w9, [sp, #204]
   2296c:	cmp	x8, #0x0
   22970:	cset	w8, ne  // ne = any
   22974:	bic	w8, w8, w9
   22978:	tbnz	w8, #0, 24254 <rpl_regexec@@Base+0x21e8>
   2297c:	mov	x26, x22
   22980:	ldr	x10, [sp, #504]
   22984:	ldr	x22, [sp, #280]
   22988:	cbz	x10, 24258 <rpl_regexec@@Base+0x21ec>
   2298c:	mov	x19, x11
   22990:	ldr	x8, [sp, #512]
   22994:	ldr	x9, [sp, #392]
   22998:	add	x10, x10, #0x8
   2299c:	cmp	x9, x8
   229a0:	b.ge	23efc <rpl_regexec@@Base+0x1e90>  // b.tcont
   229a4:	add	x11, x9, #0x1
   229a8:	str	x11, [sp, #392]
   229ac:	ldr	x12, [x10, x9, lsl #3]
   229b0:	mov	x9, x11
   229b4:	cbz	x12, 2299c <rpl_regexec@@Base+0x930>
   229b8:	sub	x0, x29, #0x64
   229bc:	add	x1, sp, #0x140
   229c0:	mov	x2, xzr
   229c4:	bl	2d38c <rpl_re_set_registers@@Base+0x8478>
   229c8:	mov	x28, x0
   229cc:	cbnz	x0, 22a3c <rpl_regexec@@Base+0x9d0>
   229d0:	ldur	w8, [x29, #-100]
   229d4:	cbnz	w8, 22a3c <rpl_regexec@@Base+0x9d0>
   229d8:	ldr	x10, [sp, #504]
   229dc:	b	22990 <rpl_regexec@@Base+0x924>
   229e0:	ldr	x19, [sp, #392]
   229e4:	tbz	w26, #31, 22a04 <rpl_regexec@@Base+0x998>
   229e8:	add	x0, sp, #0x140
   229ec:	mov	x1, x28
   229f0:	mov	x2, x19
   229f4:	mov	x20, x11
   229f8:	bl	2b9b8 <rpl_re_set_registers@@Base+0x6aa4>
   229fc:	mov	x11, x20
   22a00:	cbz	x0, 22a34 <rpl_regexec@@Base+0x9c8>
   22a04:	ldr	w8, [sp, #204]
   22a08:	cbz	w8, 24238 <rpl_regexec@@Base+0x21cc>
   22a0c:	mov	x9, xzr
   22a10:	mov	w8, #0x1                   	// #1
   22a14:	str	x19, [sp, #288]
   22a18:	str	x8, [sp, #232]
   22a1c:	ldr	x8, [sp, #424]
   22a20:	and	w25, w25, w22
   22a24:	ldr	x22, [sp, #280]
   22a28:	cmp	x8, x19
   22a2c:	b.gt	228b0 <rpl_regexec@@Base+0x844>
   22a30:	b	23f04 <rpl_regexec@@Base+0x1e98>
   22a34:	ldr	x9, [sp, #264]
   22a38:	b	22a1c <rpl_regexec@@Base+0x9b0>
   22a3c:	mov	x11, x19
   22a40:	mov	x22, x26
   22a44:	cbnz	x28, 22938 <rpl_regexec@@Base+0x8cc>
   22a48:	b	24254 <rpl_regexec@@Base+0x21e8>
   22a4c:	ldr	x26, [x22, #96]
   22a50:	cbnz	x26, 23d68 <rpl_regexec@@Base+0x1cfc>
   22a54:	ldr	x8, [sp, #472]
   22a58:	mov	w0, #0x3800                	// #14336
   22a5c:	stp	x21, x23, [sp, #8]
   22a60:	str	x22, [sp, #112]
   22a64:	str	x24, [sp, #24]
   22a68:	stp	x11, x8, [sp, #128]
   22a6c:	bl	a550 <malloc@plt>
   22a70:	str	x0, [sp, #80]
   22a74:	cbz	x0, 23ebc <rpl_regexec@@Base+0x1e50>
   22a78:	stp	xzr, xzr, [x19]
   22a7c:	ldr	x8, [sp, #112]
   22a80:	movi	v0.2d, #0x0
   22a84:	stp	q0, q0, [x29, #-96]
   22a88:	ldr	x8, [x8, #16]
   22a8c:	cmp	x8, #0x1
   22a90:	b.lt	23590 <rpl_regexec@@Base+0x1524>  // b.tstop
   22a94:	ldr	x9, [sp, #80]
   22a98:	mov	w8, #0x1800                	// #6144
   22a9c:	str	xzr, [sp, #88]
   22aa0:	str	xzr, [sp, #144]
   22aa4:	add	x8, x9, x8
   22aa8:	str	x8, [sp, #64]
   22aac:	mov	w8, #0x1818                	// #6168
   22ab0:	add	x8, x9, x8
   22ab4:	str	x8, [sp, #32]
   22ab8:	b	22ae0 <rpl_regexec@@Base+0xa74>
   22abc:	movi	v0.2d, #0x0
   22ac0:	stp	q0, q0, [x29, #-96]
   22ac4:	ldr	x8, [sp, #112]
   22ac8:	ldr	x9, [sp, #88]
   22acc:	ldr	x8, [x8, #16]
   22ad0:	add	x9, x9, #0x1
   22ad4:	str	x9, [sp, #88]
   22ad8:	cmp	x9, x8
   22adc:	b.ge	23154 <rpl_regexec@@Base+0x10e8>  // b.tcont
   22ae0:	ldr	x8, [sp, #112]
   22ae4:	ldr	x9, [sp, #136]
   22ae8:	ldr	x10, [sp, #88]
   22aec:	ldr	x8, [x8, #24]
   22af0:	ldr	x9, [x9]
   22af4:	ldr	x8, [x8, x10, lsl #3]
   22af8:	add	x8, x9, x8, lsl #4
   22afc:	ldr	w9, [x8, #8]
   22b00:	str	x8, [sp, #72]
   22b04:	and	w8, w9, #0xff
   22b08:	cmp	w8, #0x1
   22b0c:	b.ne	22bc4 <rpl_regexec@@Base+0xb58>  // b.any
   22b10:	ldr	x10, [sp, #72]
   22b14:	sub	x13, x29, #0x60
   22b18:	mov	w14, #0x1                   	// #1
   22b1c:	ldrb	w10, [x10]
   22b20:	lsr	x11, x10, #3
   22b24:	and	x11, x11, #0x18
   22b28:	ldr	x12, [x13, x11]
   22b2c:	lsl	x10, x14, x10
   22b30:	orr	x10, x10, x12
   22b34:	str	x10, [x13, x11]
   22b38:	and	w10, w9, #0x3ff00
   22b3c:	cbz	w10, 22d8c <rpl_regexec@@Base+0xd20>
   22b40:	tbz	w9, #13, 22b5c <rpl_regexec@@Base+0xaf0>
   22b44:	ldur	x10, [x29, #-96]
   22b48:	movi	v0.2d, #0x0
   22b4c:	stp	q0, q0, [x29, #-96]
   22b50:	tbz	w10, #10, 22ac4 <rpl_regexec@@Base+0xa58>
   22b54:	mov	w10, #0x400                 	// #1024
   22b58:	stur	x10, [x29, #-96]
   22b5c:	tbnz	w9, #15, 22abc <rpl_regexec@@Base+0xa50>
   22b60:	tbz	w9, #10, 22cf0 <rpl_regexec@@Base+0xc84>
   22b64:	mov	w10, #0xff                  	// #255
   22b68:	movk	w10, #0x40, lsl #16
   22b6c:	and	w10, w9, w10
   22b70:	cmp	w10, #0x1
   22b74:	b.eq	22abc <rpl_regexec@@Base+0xa50>  // b.none
   22b78:	ldr	x10, [sp, #136]
   22b7c:	ldr	w10, [x10, #180]
   22b80:	cmp	w10, #0x1
   22b84:	b.le	22cb0 <rpl_regexec@@Base+0xc44>
   22b88:	ldr	x11, [sp, #136]
   22b8c:	ldp	q2, q3, [x29, #-96]
   22b90:	ldr	x10, [x11, #120]
   22b94:	ldur	q0, [x11, #184]
   22b98:	ldr	q1, [x10]
   22b9c:	orn	v0.16b, v0.16b, v1.16b
   22ba0:	and	v0.16b, v2.16b, v0.16b
   22ba4:	stur	q0, [x29, #-96]
   22ba8:	ldur	q1, [x11, #200]
   22bac:	ldr	q2, [x10, #16]
   22bb0:	mov	x10, v0.d[1]
   22bb4:	fmov	x11, d0
   22bb8:	orn	v0.16b, v1.16b, v2.16b
   22bbc:	and	v0.16b, v3.16b, v0.16b
   22bc0:	b	22cd4 <rpl_regexec@@Base+0xc68>
   22bc4:	cmp	w8, #0x7
   22bc8:	b.eq	22c3c <rpl_regexec@@Base+0xbd0>  // b.none
   22bcc:	cmp	w8, #0x5
   22bd0:	b.eq	22c04 <rpl_regexec@@Base+0xb98>  // b.none
   22bd4:	cmp	w8, #0x3
   22bd8:	b.ne	22ac4 <rpl_regexec@@Base+0xa58>  // b.any
   22bdc:	ldr	x10, [sp, #72]
   22be0:	ldp	q1, q2, [x29, #-96]
   22be4:	ldr	x10, [x10]
   22be8:	ldr	q0, [x10]
   22bec:	orr	v0.16b, v1.16b, v0.16b
   22bf0:	stur	q0, [x29, #-96]
   22bf4:	ldr	q0, [x10, #16]
   22bf8:	orr	v0.16b, v2.16b, v0.16b
   22bfc:	stur	q0, [x29, #-80]
   22c00:	b	22b38 <rpl_regexec@@Base+0xacc>
   22c04:	ldr	x10, [sp, #136]
   22c08:	ldr	w10, [x10, #180]
   22c0c:	cmp	w10, #0x2
   22c10:	b.lt	22c74 <rpl_regexec@@Base+0xc08>  // b.tstop
   22c14:	ldr	x10, [sp, #136]
   22c18:	ldp	q1, q2, [x29, #-96]
   22c1c:	ldr	x10, [x10, #120]
   22c20:	ldr	q0, [x10]
   22c24:	orr	v0.16b, v1.16b, v0.16b
   22c28:	ldr	q1, [x10, #16]
   22c2c:	fmov	x11, d0
   22c30:	orr	v1.16b, v2.16b, v1.16b
   22c34:	stp	q0, q1, [x29, #-96]
   22c38:	b	22c80 <rpl_regexec@@Base+0xc14>
   22c3c:	mov	x10, #0xffffffffffffffff    	// #-1
   22c40:	stp	x10, x10, [x29, #-96]
   22c44:	ldr	x10, [sp, #136]
   22c48:	ldr	x10, [x10, #216]
   22c4c:	tbz	w10, #6, 22c54 <rpl_regexec@@Base+0xbe8>
   22c50:	tbz	w10, #7, 22b38 <rpl_regexec@@Base+0xacc>
   22c54:	tst	x10, #0x40
   22c58:	mov	x11, #0xfffffffffffffffe    	// #-2
   22c5c:	mov	x12, #0xfffffffffffffbfe    	// #-1026
   22c60:	csel	x11, x12, x11, eq  // eq = none
   22c64:	tst	x10, #0x80
   22c68:	mov	x10, #0xfffffffffffffbff    	// #-1025
   22c6c:	csel	x10, x10, x11, eq  // eq = none
   22c70:	b	22ca8 <rpl_regexec@@Base+0xc3c>
   22c74:	movi	v0.2d, #0xffffffffffffffff
   22c78:	mov	x11, #0xffffffffffffffff    	// #-1
   22c7c:	stp	q0, q0, [x29, #-96]
   22c80:	ldr	x10, [sp, #136]
   22c84:	and	x12, x11, #0xfffffffffffffbff
   22c88:	ldr	x10, [x10, #216]
   22c8c:	tst	x10, #0x40
   22c90:	csel	x11, x12, x11, eq  // eq = none
   22c94:	tbz	w10, #6, 22c9c <rpl_regexec@@Base+0xc30>
   22c98:	tbz	w10, #7, 22b38 <rpl_regexec@@Base+0xacc>
   22c9c:	and	x12, x11, #0xfffffffffffffffe
   22ca0:	tst	x10, #0x80
   22ca4:	csel	x10, x11, x12, eq  // eq = none
   22ca8:	stur	x10, [x29, #-96]
   22cac:	b	22b38 <rpl_regexec@@Base+0xacc>
   22cb0:	ldr	x10, [sp, #136]
   22cb4:	ldp	q1, q2, [x29, #-96]
   22cb8:	ldur	q0, [x10, #184]
   22cbc:	and	v0.16b, v1.16b, v0.16b
   22cc0:	stur	q0, [x29, #-96]
   22cc4:	ldur	q1, [x10, #200]
   22cc8:	mov	x10, v0.d[1]
   22ccc:	fmov	x11, d0
   22cd0:	and	v0.16b, v2.16b, v1.16b
   22cd4:	orr	x10, x10, x11
   22cd8:	fmov	x11, d0
   22cdc:	orr	x10, x10, x11
   22ce0:	mov	x11, v0.d[1]
   22ce4:	orr	x10, x10, x11
   22ce8:	stur	q0, [x29, #-80]
   22cec:	cbz	x10, 22ac4 <rpl_regexec@@Base+0xa58>
   22cf0:	tbz	w9, #11, 22d8c <rpl_regexec@@Base+0xd20>
   22cf4:	tbz	w9, #22, 22d00 <rpl_regexec@@Base+0xc94>
   22cf8:	cmp	w8, #0x1
   22cfc:	b.eq	22abc <rpl_regexec@@Base+0xa50>  // b.none
   22d00:	ldr	x9, [sp, #136]
   22d04:	ldr	w9, [x9, #180]
   22d08:	cmp	w9, #0x1
   22d0c:	b.le	22d4c <rpl_regexec@@Base+0xce0>
   22d10:	ldr	x10, [sp, #136]
   22d14:	ldp	q2, q3, [x29, #-96]
   22d18:	ldr	x9, [x10, #120]
   22d1c:	ldur	q0, [x10, #184]
   22d20:	ldr	q1, [x9]
   22d24:	and	v0.16b, v1.16b, v0.16b
   22d28:	bic	v0.16b, v2.16b, v0.16b
   22d2c:	stur	q0, [x29, #-96]
   22d30:	ldur	q1, [x10, #200]
   22d34:	ldr	q2, [x9, #16]
   22d38:	mov	x9, v0.d[1]
   22d3c:	fmov	x10, d0
   22d40:	and	v0.16b, v2.16b, v1.16b
   22d44:	bic	v0.16b, v3.16b, v0.16b
   22d48:	b	22d70 <rpl_regexec@@Base+0xd04>
   22d4c:	ldr	x9, [sp, #136]
   22d50:	ldp	q1, q2, [x29, #-96]
   22d54:	ldur	q0, [x9, #184]
   22d58:	bic	v0.16b, v1.16b, v0.16b
   22d5c:	stur	q0, [x29, #-96]
   22d60:	ldur	q1, [x9, #200]
   22d64:	mov	x9, v0.d[1]
   22d68:	fmov	x10, d0
   22d6c:	bic	v0.16b, v2.16b, v1.16b
   22d70:	orr	x9, x9, x10
   22d74:	fmov	x10, d0
   22d78:	orr	x9, x9, x10
   22d7c:	mov	x10, v0.d[1]
   22d80:	orr	x9, x9, x10
   22d84:	stur	q0, [x29, #-80]
   22d88:	cbz	x9, 22ac4 <rpl_regexec@@Base+0xa58>
   22d8c:	ldr	x9, [sp, #144]
   22d90:	cmp	x9, #0x1
   22d94:	b.lt	22f58 <rpl_regexec@@Base+0xeec>  // b.tstop
   22d98:	ldp	x9, x24, [x29, #-96]
   22d9c:	cmp	w8, #0x1
   22da0:	str	x9, [sp, #96]
   22da4:	ldur	x9, [x29, #-80]
   22da8:	str	x9, [sp, #104]
   22dac:	ldur	x9, [x29, #-72]
   22db0:	str	x9, [sp, #120]
   22db4:	b.ne	22f60 <rpl_regexec@@Base+0xef4>  // b.any
   22db8:	ldr	x21, [sp, #64]
   22dbc:	ldr	x22, [sp, #80]
   22dc0:	mov	x23, xzr
   22dc4:	b	22de0 <rpl_regexec@@Base+0xd74>
   22dc8:	ldr	x8, [sp, #144]
   22dcc:	add	x23, x23, #0x1
   22dd0:	add	x22, x22, #0x18
   22dd4:	add	x21, x21, #0x20
   22dd8:	cmp	x23, x8
   22ddc:	b.ge	22f3c <rpl_regexec@@Base+0xed0>  // b.tcont
   22de0:	ldr	x8, [sp, #72]
   22de4:	ldrb	w8, [x8]
   22de8:	lsr	x9, x8, #3
   22dec:	and	x9, x9, #0x18
   22df0:	ldr	x9, [x21, x9]
   22df4:	lsr	x8, x9, x8
   22df8:	tbz	w8, #0, 22dc8 <rpl_regexec@@Base+0xd5c>
   22dfc:	ldp	x13, x14, [x21]
   22e00:	ldr	x8, [sp, #96]
   22e04:	ldp	x16, x15, [x21, #16]
   22e08:	and	x9, x14, x24
   22e0c:	and	x11, x13, x8
   22e10:	ldr	x8, [sp, #104]
   22e14:	orr	x10, x9, x11
   22e18:	and	x8, x16, x8
   22e1c:	orr	x12, x10, x8
   22e20:	ldr	x10, [sp, #120]
   22e24:	and	x10, x15, x10
   22e28:	orr	x12, x12, x10
   22e2c:	cbz	x12, 22dc8 <rpl_regexec@@Base+0xd5c>
   22e30:	ldr	x17, [sp, #96]
   22e34:	ldr	x18, [sp, #120]
   22e38:	bic	x12, x13, x17
   22e3c:	bic	x17, x17, x13
   22e40:	str	x17, [sp, #96]
   22e44:	ldr	x17, [sp, #104]
   22e48:	bic	x13, x14, x24
   22e4c:	bic	x24, x24, x14
   22e50:	bic	x14, x16, x17
   22e54:	bic	x17, x17, x16
   22e58:	orr	x16, x13, x12
   22e5c:	str	x17, [sp, #104]
   22e60:	orr	x17, x16, x14
   22e64:	bic	x16, x15, x18
   22e68:	orr	x17, x17, x16
   22e6c:	bic	x18, x18, x15
   22e70:	str	x18, [sp, #120]
   22e74:	cbz	x17, 22f08 <rpl_regexec@@Base+0xe9c>
   22e78:	ldr	x17, [sp, #144]
   22e7c:	ldr	x15, [sp, #64]
   22e80:	add	x15, x15, x17, lsl #5
   22e84:	stp	x12, x13, [x15]
   22e88:	stp	x14, x16, [x15, #16]
   22e8c:	stp	x11, x9, [x21]
   22e90:	stp	x8, x10, [x21, #16]
   22e94:	ldr	x10, [sp, #80]
   22e98:	ldr	x8, [x22, #8]
   22e9c:	mov	w9, #0x18                  	// #24
   22ea0:	mov	x11, x22
   22ea4:	madd	x26, x17, x9, x10
   22ea8:	str	x8, [x26, #8]
   22eac:	ldr	x9, [x22, #8]
   22eb0:	cmp	x9, #0x0
   22eb4:	str	x9, [sp, #56]
   22eb8:	b.le	22ef4 <rpl_regexec@@Base+0xe88>
   22ebc:	lsl	x0, x8, #3
   22ec0:	str	x8, [x26]
   22ec4:	bl	a550 <malloc@plt>
   22ec8:	ldr	x9, [sp, #80]
   22ecc:	ldr	x10, [sp, #144]
   22ed0:	mov	w8, #0x18                  	// #24
   22ed4:	madd	x8, x10, x8, x9
   22ed8:	str	x0, [x8, #16]
   22edc:	cbz	x0, 23648 <rpl_regexec@@Base+0x15dc>
   22ee0:	ldr	x8, [sp, #56]
   22ee4:	ldr	x1, [x22, #16]
   22ee8:	lsl	x2, x8, #3
   22eec:	bl	a210 <memcpy@plt>
   22ef0:	b	22efc <rpl_regexec@@Base+0xe90>
   22ef4:	stp	xzr, xzr, [x26]
   22ef8:	str	xzr, [x26, #16]
   22efc:	ldr	x8, [sp, #144]
   22f00:	add	x8, x8, #0x1
   22f04:	str	x8, [sp, #144]
   22f08:	ldr	x8, [sp, #112]
   22f0c:	ldr	x9, [sp, #88]
   22f10:	mov	x0, x22
   22f14:	ldr	x8, [x8, #24]
   22f18:	ldr	x1, [x8, x9, lsl #3]
   22f1c:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   22f20:	tbz	w0, #0, 235ec <rpl_regexec@@Base+0x1580>
   22f24:	ldp	x8, x9, [sp, #96]
   22f28:	orr	x8, x24, x8
   22f2c:	orr	x8, x8, x9
   22f30:	ldr	x9, [sp, #120]
   22f34:	orr	x8, x8, x9
   22f38:	cbnz	x8, 22dc8 <rpl_regexec@@Base+0xd5c>
   22f3c:	ldr	x8, [sp, #96]
   22f40:	stp	x8, x24, [x29, #-96]
   22f44:	ldr	x8, [sp, #104]
   22f48:	stur	x8, [x29, #-80]
   22f4c:	ldr	x8, [sp, #120]
   22f50:	stur	x8, [x29, #-72]
   22f54:	b	230f0 <rpl_regexec@@Base+0x1084>
   22f58:	mov	x23, xzr
   22f5c:	b	230f0 <rpl_regexec@@Base+0x1084>
   22f60:	ldur	x8, [x29, #-88]
   22f64:	ldr	x21, [sp, #32]
   22f68:	ldr	x22, [sp, #80]
   22f6c:	mov	x23, xzr
   22f70:	str	x8, [sp, #72]
   22f74:	b	22f90 <rpl_regexec@@Base+0xf24>
   22f78:	ldr	x8, [sp, #144]
   22f7c:	add	x23, x23, #0x1
   22f80:	add	x22, x22, #0x18
   22f84:	add	x21, x21, #0x20
   22f88:	cmp	x23, x8
   22f8c:	b.ge	230d0 <rpl_regexec@@Base+0x1064>  // b.tcont
   22f90:	ldp	x13, x14, [x21, #-24]
   22f94:	ldr	x8, [sp, #96]
   22f98:	ldp	x16, x15, [x21, #-8]
   22f9c:	and	x9, x14, x24
   22fa0:	and	x11, x13, x8
   22fa4:	ldr	x8, [sp, #104]
   22fa8:	orr	x10, x9, x11
   22fac:	and	x8, x16, x8
   22fb0:	orr	x12, x10, x8
   22fb4:	ldr	x10, [sp, #120]
   22fb8:	and	x10, x15, x10
   22fbc:	orr	x12, x12, x10
   22fc0:	cbz	x12, 22f78 <rpl_regexec@@Base+0xf0c>
   22fc4:	ldr	x17, [sp, #96]
   22fc8:	ldr	x18, [sp, #120]
   22fcc:	bic	x12, x13, x17
   22fd0:	bic	x17, x17, x13
   22fd4:	str	x17, [sp, #96]
   22fd8:	ldr	x17, [sp, #104]
   22fdc:	bic	x13, x14, x24
   22fe0:	bic	x14, x24, x14
   22fe4:	str	x14, [sp, #72]
   22fe8:	bic	x14, x16, x17
   22fec:	bic	x17, x17, x16
   22ff0:	orr	x16, x13, x12
   22ff4:	str	x17, [sp, #104]
   22ff8:	orr	x17, x16, x14
   22ffc:	bic	x16, x15, x18
   23000:	orr	x17, x17, x16
   23004:	bic	x18, x18, x15
   23008:	str	x18, [sp, #120]
   2300c:	cbz	x17, 23098 <rpl_regexec@@Base+0x102c>
   23010:	ldr	x17, [sp, #144]
   23014:	ldr	x15, [sp, #64]
   23018:	add	x15, x15, x17, lsl #5
   2301c:	stp	x12, x13, [x15]
   23020:	stp	x14, x16, [x15, #16]
   23024:	stp	x11, x9, [x21, #-24]
   23028:	stp	x8, x10, [x21, #-8]
   2302c:	ldr	x10, [sp, #80]
   23030:	ldr	x8, [x22, #8]
   23034:	mov	w9, #0x18                  	// #24
   23038:	mov	x11, x22
   2303c:	madd	x26, x17, x9, x10
   23040:	str	x8, [x26, #8]
   23044:	ldr	x24, [x22, #8]
   23048:	cmp	x24, #0x1
   2304c:	b.lt	23084 <rpl_regexec@@Base+0x1018>  // b.tstop
   23050:	lsl	x0, x8, #3
   23054:	str	x8, [x26]
   23058:	bl	a550 <malloc@plt>
   2305c:	ldr	x9, [sp, #80]
   23060:	ldr	x10, [sp, #144]
   23064:	mov	w8, #0x18                  	// #24
   23068:	madd	x8, x10, x8, x9
   2306c:	str	x0, [x8, #16]
   23070:	cbz	x0, 23614 <rpl_regexec@@Base+0x15a8>
   23074:	ldr	x1, [x22, #16]
   23078:	lsl	x2, x24, #3
   2307c:	bl	a210 <memcpy@plt>
   23080:	b	2308c <rpl_regexec@@Base+0x1020>
   23084:	stp	xzr, xzr, [x26]
   23088:	str	xzr, [x26, #16]
   2308c:	ldr	x8, [sp, #144]
   23090:	add	x8, x8, #0x1
   23094:	str	x8, [sp, #144]
   23098:	ldr	x8, [sp, #112]
   2309c:	ldr	x9, [sp, #88]
   230a0:	mov	x0, x22
   230a4:	ldr	x8, [x8, #24]
   230a8:	ldr	x1, [x8, x9, lsl #3]
   230ac:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   230b0:	tbz	w0, #0, 235bc <rpl_regexec@@Base+0x1550>
   230b4:	ldp	x8, x9, [sp, #96]
   230b8:	ldr	x24, [sp, #72]
   230bc:	orr	x8, x24, x8
   230c0:	orr	x8, x8, x9
   230c4:	ldr	x9, [sp, #120]
   230c8:	orr	x8, x8, x9
   230cc:	cbnz	x8, 22f78 <rpl_regexec@@Base+0xf0c>
   230d0:	ldr	x8, [sp, #104]
   230d4:	stur	x8, [x29, #-80]
   230d8:	ldr	x8, [sp, #120]
   230dc:	stur	x8, [x29, #-72]
   230e0:	ldr	x8, [sp, #72]
   230e4:	stur	x8, [x29, #-88]
   230e8:	ldr	x8, [sp, #96]
   230ec:	stur	x8, [x29, #-96]
   230f0:	ldr	x8, [sp, #144]
   230f4:	cmp	x23, x8
   230f8:	b.ne	22ac4 <rpl_regexec@@Base+0xa58>  // b.any
   230fc:	ldr	x8, [sp, #64]
   23100:	ldp	q1, q0, [x29, #-96]
   23104:	ldr	x9, [sp, #88]
   23108:	mov	w0, #0x8                   	// #8
   2310c:	add	x8, x8, x23, lsl #5
   23110:	stp	q1, q0, [x8]
   23114:	ldr	x8, [sp, #112]
   23118:	ldr	x8, [x8, #24]
   2311c:	ldr	x26, [x8, x9, lsl #3]
   23120:	ldr	x9, [sp, #80]
   23124:	mov	w8, #0x18                  	// #24
   23128:	madd	x22, x23, x8, x9
   2312c:	mov	w8, #0x1                   	// #1
   23130:	dup	v0.2d, x8
   23134:	str	q0, [x22]
   23138:	bl	a550 <malloc@plt>
   2313c:	str	x0, [x22, #16]
   23140:	cbz	x0, 23674 <rpl_regexec@@Base+0x1608>
   23144:	add	x8, x23, #0x1
   23148:	str	x26, [x0]
   2314c:	str	x8, [sp, #144]
   23150:	b	22abc <rpl_regexec@@Base+0xa50>
   23154:	ldr	x8, [sp, #144]
   23158:	cmp	x8, #0x0
   2315c:	b.le	23594 <rpl_regexec@@Base+0x1528>
   23160:	ldr	x22, [sp, #144]
   23164:	add	x8, x22, #0x1
   23168:	lsl	x0, x8, #3
   2316c:	stp	x8, xzr, [x29, #-40]
   23170:	bl	a550 <malloc@plt>
   23174:	cmp	x0, #0x0
   23178:	mov	w8, #0xc                   	// #12
   2317c:	csel	w9, w8, wzr, eq  // eq = none
   23180:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   23184:	movk	x8, #0xa855
   23188:	movk	x8, #0xaaa, lsl #48
   2318c:	mov	x23, x0
   23190:	cmp	x22, x8
   23194:	stur	x0, [x29, #-24]
   23198:	stur	w9, [x29, #-12]
   2319c:	b.hi	23ee4 <rpl_regexec@@Base+0x1e78>  // b.pmore
   231a0:	cbz	x23, 23ee4 <rpl_regexec@@Base+0x1e78>
   231a4:	ldr	x8, [sp, #144]
   231a8:	mov	w21, w9
   231ac:	add	x8, x8, x8, lsl #1
   231b0:	lsl	x0, x8, #3
   231b4:	bl	a550 <malloc@plt>
   231b8:	str	x0, [sp, #88]
   231bc:	cbz	x0, 23ee4 <rpl_regexec@@Base+0x1e78>
   231c0:	ldr	x8, [sp, #144]
   231c4:	ldr	x9, [sp, #88]
   231c8:	mov	x23, xzr
   231cc:	str	xzr, [sp, #120]
   231d0:	lsl	x8, x8, #3
   231d4:	add	x9, x9, x8
   231d8:	add	x8, x9, x8
   231dc:	stp	xzr, xzr, [sp, #96]
   231e0:	str	xzr, [sp, #72]
   231e4:	str	wzr, [sp, #44]
   231e8:	stp	x8, x9, [sp, #48]
   231ec:	b	23260 <rpl_regexec@@Base+0x11f4>
   231f0:	ldp	x10, x9, [sp, #48]
   231f4:	lsl	x8, x23, #3
   231f8:	str	x0, [x9, x8]
   231fc:	ldr	x9, [sp, #88]
   23200:	ldr	x9, [x9, x8]
   23204:	str	x9, [x10, x8]
   23208:	ldr	x8, [sp, #64]
   2320c:	ldr	x12, [sp, #144]
   23210:	mov	x13, x23
   23214:	add	x13, x23, #0x1
   23218:	add	x8, x8, x23, lsl #5
   2321c:	ldp	x9, x10, [x8]
   23220:	cmp	x13, x12
   23224:	ldr	x12, [sp, #72]
   23228:	ldp	x11, x8, [x8, #16]
   2322c:	mov	x23, x13
   23230:	orr	x12, x9, x12
   23234:	ldr	x9, [sp, #96]
   23238:	str	x12, [sp, #72]
   2323c:	orr	x9, x10, x9
   23240:	str	x9, [sp, #96]
   23244:	ldr	x9, [sp, #104]
   23248:	orr	x9, x11, x9
   2324c:	str	x9, [sp, #104]
   23250:	ldr	x9, [sp, #120]
   23254:	orr	x9, x8, x9
   23258:	str	x9, [sp, #120]
   2325c:	b.eq	23398 <rpl_regexec@@Base+0x132c>  // b.none
   23260:	ldr	x9, [sp, #80]
   23264:	mov	w8, #0x18                  	// #24
   23268:	stur	xzr, [x29, #-32]
   2326c:	madd	x24, x23, x8, x9
   23270:	ldr	x8, [x24, #8]!
   23274:	cmp	x8, #0x1
   23278:	b.lt	232e8 <rpl_regexec@@Base+0x127c>  // b.tstop
   2327c:	ldr	x10, [sp, #80]
   23280:	ldr	x11, [sp, #136]
   23284:	mov	w9, #0x18                  	// #24
   23288:	mov	x26, xzr
   2328c:	madd	x9, x23, x9, x10
   23290:	add	x22, x9, #0x10
   23294:	b	232a4 <rpl_regexec@@Base+0x1238>
   23298:	add	x26, x26, #0x1
   2329c:	cmp	x26, x8
   232a0:	b.ge	232e4 <rpl_regexec@@Base+0x1278>  // b.tcont
   232a4:	ldr	x9, [x22]
   232a8:	ldr	x10, [x11, #24]
   232ac:	ldr	x9, [x9, x26, lsl #3]
   232b0:	ldr	x9, [x10, x9, lsl #3]
   232b4:	cmn	x9, #0x1
   232b8:	b.eq	23298 <rpl_regexec@@Base+0x122c>  // b.none
   232bc:	ldr	x8, [x11, #48]
   232c0:	mov	w10, #0x18                  	// #24
   232c4:	sub	x0, x29, #0x28
   232c8:	madd	x1, x9, x10, x8
   232cc:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   232d0:	cbnz	w0, 23e74 <rpl_regexec@@Base+0x1e08>
   232d4:	ldr	x8, [x24]
   232d8:	ldr	x11, [sp, #136]
   232dc:	mov	w21, wzr
   232e0:	b	23298 <rpl_regexec@@Base+0x122c>
   232e4:	stur	w21, [x29, #-12]
   232e8:	ldr	x1, [sp, #136]
   232ec:	sub	x0, x29, #0xc
   232f0:	sub	x2, x29, #0x28
   232f4:	mov	w3, wzr
   232f8:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   232fc:	ldur	w21, [x29, #-12]
   23300:	ldr	x8, [sp, #88]
   23304:	str	x0, [x8, x23, lsl #3]
   23308:	cbnz	x0, 23310 <rpl_regexec@@Base+0x12a4>
   2330c:	cbnz	w21, 23e78 <rpl_regexec@@Base+0x1e0c>
   23310:	ldrsb	w8, [x0, #104]
   23314:	tbz	w8, #31, 231f0 <rpl_regexec@@Base+0x1184>
   23318:	ldr	x1, [sp, #136]
   2331c:	sub	x0, x29, #0xc
   23320:	sub	x2, x29, #0x28
   23324:	mov	w3, #0x1                   	// #1
   23328:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2332c:	ldr	x8, [sp, #56]
   23330:	str	x0, [x8, x23, lsl #3]
   23334:	cbnz	x0, 23340 <rpl_regexec@@Base+0x12d4>
   23338:	ldur	w8, [x29, #-12]
   2333c:	cbnz	w8, 23e78 <rpl_regexec@@Base+0x1e0c>
   23340:	ldr	x8, [sp, #88]
   23344:	ldr	x8, [x8, x23, lsl #3]
   23348:	cmp	x8, x0
   2334c:	b.eq	2336c <rpl_regexec@@Base+0x1300>  // b.none
   23350:	ldr	x8, [sp, #136]
   23354:	ldr	w9, [sp, #44]
   23358:	ldr	w8, [x8, #180]
   2335c:	cmp	w8, #0x1
   23360:	cset	w8, gt
   23364:	orr	w9, w9, w8
   23368:	str	w9, [sp, #44]
   2336c:	ldr	x1, [sp, #136]
   23370:	sub	x0, x29, #0xc
   23374:	sub	x2, x29, #0x28
   23378:	mov	w3, #0x2                   	// #2
   2337c:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   23380:	ldur	w21, [x29, #-12]
   23384:	ldr	x8, [sp, #48]
   23388:	str	x0, [x8, x23, lsl #3]
   2338c:	cbnz	x0, 23208 <rpl_regexec@@Base+0x119c>
   23390:	cbz	w21, 23208 <rpl_regexec@@Base+0x119c>
   23394:	b	23e78 <rpl_regexec@@Base+0x1e0c>
   23398:	ldr	w8, [sp, #44]
   2339c:	tbnz	w8, #0, 236b4 <rpl_regexec@@Base+0x1648>
   233a0:	mov	w0, #0x8                   	// #8
   233a4:	mov	w1, #0x100                 	// #256
   233a8:	bl	a6c0 <calloc@plt>
   233ac:	str	x0, [x19]
   233b0:	cbz	x0, 23e78 <rpl_regexec@@Base+0x1e0c>
   233b4:	ldr	x8, [sp, #72]
   233b8:	cbz	x8, 23428 <rpl_regexec@@Base+0x13bc>
   233bc:	ldr	x9, [sp, #72]
   233c0:	mov	x8, xzr
   233c4:	mov	w10, #0x1                   	// #1
   233c8:	tbnz	w9, #0, 233e0 <rpl_regexec@@Base+0x1374>
   233cc:	lsl	x10, x10, #1
   233d0:	lsr	x9, x9, #1
   233d4:	add	x8, x8, #0x1
   233d8:	cbnz	x9, 233c8 <rpl_regexec@@Base+0x135c>
   233dc:	b	23428 <rpl_regexec@@Base+0x13bc>
   233e0:	ldr	x12, [sp, #64]
   233e4:	mov	x11, #0xfffffffffffffff8    	// #-8
   233e8:	ldr	x13, [x12], #32
   233ec:	add	x11, x11, #0x8
   233f0:	tst	x13, x10
   233f4:	b.eq	233e8 <rpl_regexec@@Base+0x137c>  // b.none
   233f8:	ldr	x12, [sp, #136]
   233fc:	ldr	x13, [sp, #56]
   23400:	ldr	x12, [x12, #184]
   23404:	tst	x12, x10
   23408:	ldr	x12, [sp, #88]
   2340c:	csel	x12, x12, x13, eq  // eq = none
   23410:	ldr	x11, [x12, x11]
   23414:	str	x11, [x0, x8, lsl #3]
   23418:	lsl	x10, x10, #1
   2341c:	lsr	x9, x9, #1
   23420:	add	x8, x8, #0x1
   23424:	cbnz	x9, 233c8 <rpl_regexec@@Base+0x135c>
   23428:	ldr	x8, [sp, #96]
   2342c:	cbz	x8, 234a4 <rpl_regexec@@Base+0x1438>
   23430:	ldr	x9, [sp, #80]
   23434:	mov	w8, #0x1808                	// #6152
   23438:	mov	w10, #0x1                   	// #1
   2343c:	add	x8, x9, x8
   23440:	mov	w9, #0x40                  	// #64
   23444:	ldr	x11, [sp, #96]
   23448:	tbnz	w11, #0, 23468 <rpl_regexec@@Base+0x13fc>
   2344c:	ldr	x11, [sp, #96]
   23450:	lsl	x10, x10, #1
   23454:	add	x9, x9, #0x1
   23458:	lsr	x11, x11, #1
   2345c:	str	x11, [sp, #96]
   23460:	cbnz	x11, 23444 <rpl_regexec@@Base+0x13d8>
   23464:	b	234a4 <rpl_regexec@@Base+0x1438>
   23468:	mov	x11, #0xfffffffffffffff8    	// #-8
   2346c:	mov	x12, x8
   23470:	ldr	x13, [x12], #32
   23474:	add	x11, x11, #0x8
   23478:	tst	x13, x10
   2347c:	b.eq	23470 <rpl_regexec@@Base+0x1404>  // b.none
   23480:	ldr	x12, [sp, #136]
   23484:	ldr	x13, [sp, #56]
   23488:	ldr	x12, [x12, #192]
   2348c:	tst	x12, x10
   23490:	ldr	x12, [sp, #88]
   23494:	csel	x12, x12, x13, eq  // eq = none
   23498:	ldr	x11, [x12, x11]
   2349c:	str	x11, [x0, x9, lsl #3]
   234a0:	b	2344c <rpl_regexec@@Base+0x13e0>
   234a4:	ldr	x8, [sp, #104]
   234a8:	cbz	x8, 23520 <rpl_regexec@@Base+0x14b4>
   234ac:	ldr	x9, [sp, #80]
   234b0:	mov	w8, #0x1810                	// #6160
   234b4:	mov	w10, #0x1                   	// #1
   234b8:	add	x8, x9, x8
   234bc:	mov	w9, #0x80                  	// #128
   234c0:	ldr	x11, [sp, #104]
   234c4:	tbnz	w11, #0, 234e4 <rpl_regexec@@Base+0x1478>
   234c8:	ldr	x11, [sp, #104]
   234cc:	lsl	x10, x10, #1
   234d0:	add	x9, x9, #0x1
   234d4:	lsr	x11, x11, #1
   234d8:	str	x11, [sp, #104]
   234dc:	cbnz	x11, 234c0 <rpl_regexec@@Base+0x1454>
   234e0:	b	23520 <rpl_regexec@@Base+0x14b4>
   234e4:	mov	x11, #0xfffffffffffffff8    	// #-8
   234e8:	mov	x12, x8
   234ec:	ldr	x13, [x12], #32
   234f0:	add	x11, x11, #0x8
   234f4:	tst	x13, x10
   234f8:	b.eq	234ec <rpl_regexec@@Base+0x1480>  // b.none
   234fc:	ldr	x12, [sp, #136]
   23500:	ldr	x13, [sp, #56]
   23504:	ldr	x12, [x12, #200]
   23508:	tst	x12, x10
   2350c:	ldr	x12, [sp, #88]
   23510:	csel	x12, x12, x13, eq  // eq = none
   23514:	ldr	x11, [x12, x11]
   23518:	str	x11, [x0, x9, lsl #3]
   2351c:	b	234c8 <rpl_regexec@@Base+0x145c>
   23520:	ldr	x8, [sp, #120]
   23524:	cbz	x8, 238a0 <rpl_regexec@@Base+0x1834>
   23528:	mov	w8, #0xc0                  	// #192
   2352c:	mov	w9, #0x1                   	// #1
   23530:	ldr	x10, [sp, #120]
   23534:	tbnz	w10, #0, 23554 <rpl_regexec@@Base+0x14e8>
   23538:	ldr	x10, [sp, #120]
   2353c:	lsl	x9, x9, #1
   23540:	add	x8, x8, #0x1
   23544:	lsr	x10, x10, #1
   23548:	str	x10, [sp, #120]
   2354c:	cbnz	x10, 23530 <rpl_regexec@@Base+0x14c4>
   23550:	b	238a0 <rpl_regexec@@Base+0x1834>
   23554:	ldr	x11, [sp, #32]
   23558:	mov	x10, #0xfffffffffffffff8    	// #-8
   2355c:	ldr	x12, [x11], #32
   23560:	add	x10, x10, #0x8
   23564:	tst	x12, x9
   23568:	b.eq	2355c <rpl_regexec@@Base+0x14f0>  // b.none
   2356c:	ldr	x11, [sp, #136]
   23570:	ldr	x12, [sp, #56]
   23574:	ldr	x11, [x11, #208]
   23578:	tst	x11, x9
   2357c:	ldr	x11, [sp, #88]
   23580:	csel	x11, x11, x12, eq  // eq = none
   23584:	ldr	x10, [x11, x10]
   23588:	str	x10, [x0, x8, lsl #3]
   2358c:	b	23538 <rpl_regexec@@Base+0x14cc>
   23590:	str	xzr, [sp, #144]
   23594:	ldr	x0, [sp, #80]
   23598:	bl	a970 <free@plt>
   2359c:	ldr	x8, [sp, #144]
   235a0:	cbnz	x8, 23ebc <rpl_regexec@@Base+0x1e50>
   235a4:	mov	w0, #0x8                   	// #8
   235a8:	mov	w1, #0x100                 	// #256
   235ac:	bl	a6c0 <calloc@plt>
   235b0:	str	x0, [x19]
   235b4:	cbnz	x0, 23930 <rpl_regexec@@Base+0x18c4>
   235b8:	b	23ebc <rpl_regexec@@Base+0x1e50>
   235bc:	ldr	x8, [sp, #104]
   235c0:	stur	x8, [x29, #-80]
   235c4:	ldr	x8, [sp, #120]
   235c8:	stur	x8, [x29, #-72]
   235cc:	ldr	x8, [sp, #72]
   235d0:	stur	x8, [x29, #-88]
   235d4:	ldr	x8, [sp, #96]
   235d8:	stur	x8, [x29, #-96]
   235dc:	ldr	x23, [sp, #144]
   235e0:	cmp	x23, #0x1
   235e4:	b.ge	23680 <rpl_regexec@@Base+0x1614>  // b.tcont
   235e8:	b	23698 <rpl_regexec@@Base+0x162c>
   235ec:	ldr	x8, [sp, #96]
   235f0:	stp	x8, x24, [x29, #-96]
   235f4:	ldr	x8, [sp, #104]
   235f8:	stur	x8, [x29, #-80]
   235fc:	ldr	x8, [sp, #120]
   23600:	stur	x8, [x29, #-72]
   23604:	ldr	x23, [sp, #144]
   23608:	cmp	x23, #0x1
   2360c:	b.ge	23680 <rpl_regexec@@Base+0x1614>  // b.tcont
   23610:	b	23698 <rpl_regexec@@Base+0x162c>
   23614:	ldr	x8, [sp, #104]
   23618:	stur	x8, [x29, #-80]
   2361c:	ldr	x8, [sp, #120]
   23620:	stur	x8, [x29, #-72]
   23624:	ldr	x8, [sp, #72]
   23628:	stur	x8, [x29, #-88]
   2362c:	ldr	x8, [sp, #96]
   23630:	stur	x8, [x29, #-96]
   23634:	stp	xzr, xzr, [x26]
   23638:	ldr	x23, [sp, #144]
   2363c:	cmp	x23, #0x1
   23640:	b.ge	23680 <rpl_regexec@@Base+0x1614>  // b.tcont
   23644:	b	23698 <rpl_regexec@@Base+0x162c>
   23648:	ldr	x8, [sp, #96]
   2364c:	stp	x8, x24, [x29, #-96]
   23650:	ldr	x8, [sp, #104]
   23654:	stur	x8, [x29, #-80]
   23658:	ldr	x8, [sp, #120]
   2365c:	stur	x8, [x29, #-72]
   23660:	stp	xzr, xzr, [x26]
   23664:	ldr	x23, [sp, #144]
   23668:	cmp	x23, #0x1
   2366c:	b.ge	23680 <rpl_regexec@@Base+0x1614>  // b.tcont
   23670:	b	23698 <rpl_regexec@@Base+0x162c>
   23674:	stp	xzr, xzr, [x22]
   23678:	cmp	x23, #0x1
   2367c:	b.lt	23698 <rpl_regexec@@Base+0x162c>  // b.tstop
   23680:	ldr	x8, [sp, #80]
   23684:	add	x22, x8, #0x10
   23688:	ldr	x0, [x22], #24
   2368c:	bl	a970 <free@plt>
   23690:	subs	x23, x23, #0x1
   23694:	b.ne	23688 <rpl_regexec@@Base+0x161c>  // b.any
   23698:	mov	x8, #0xffffffffffffffff    	// #-1
   2369c:	str	x8, [sp, #144]
   236a0:	ldr	x0, [sp, #80]
   236a4:	bl	a970 <free@plt>
   236a8:	ldr	x8, [sp, #144]
   236ac:	cbz	x8, 235a4 <rpl_regexec@@Base+0x1538>
   236b0:	b	23ebc <rpl_regexec@@Base+0x1e50>
   236b4:	mov	w0, #0x8                   	// #8
   236b8:	mov	w1, #0x200                 	// #512
   236bc:	bl	a6c0 <calloc@plt>
   236c0:	ldr	x8, [sp, #112]
   236c4:	str	x0, [x8, #96]
   236c8:	cbz	x0, 23e78 <rpl_regexec@@Base+0x1e0c>
   236cc:	ldr	x8, [sp, #72]
   236d0:	cbz	x8, 23740 <rpl_regexec@@Base+0x16d4>
   236d4:	ldr	x9, [sp, #88]
   236d8:	ldr	x10, [sp, #72]
   236dc:	mov	x8, xzr
   236e0:	mov	w11, #0x1                   	// #1
   236e4:	sub	x9, x9, #0x8
   236e8:	tbnz	w10, #0, 23700 <rpl_regexec@@Base+0x1694>
   236ec:	lsl	x11, x11, #1
   236f0:	lsr	x10, x10, #1
   236f4:	add	x8, x8, #0x1
   236f8:	cbnz	x10, 236e8 <rpl_regexec@@Base+0x167c>
   236fc:	b	23740 <rpl_regexec@@Base+0x16d4>
   23700:	ldr	x13, [sp, #64]
   23704:	mov	x12, x9
   23708:	ldr	x14, [x13], #32
   2370c:	add	x12, x12, #0x8
   23710:	tst	x14, x11
   23714:	b.eq	23708 <rpl_regexec@@Base+0x169c>  // b.none
   23718:	ldr	x14, [sp, #144]
   2371c:	ldr	x13, [x12]
   23720:	ldr	x12, [x12, x14, lsl #3]
   23724:	add	x14, x0, x8, lsl #3
   23728:	str	x13, [x14]
   2372c:	str	x12, [x14, #2048]
   23730:	lsl	x11, x11, #1
   23734:	lsr	x10, x10, #1
   23738:	add	x8, x8, #0x1
   2373c:	cbnz	x10, 236e8 <rpl_regexec@@Base+0x167c>
   23740:	ldr	x8, [sp, #96]
   23744:	cbz	x8, 237b8 <rpl_regexec@@Base+0x174c>
   23748:	ldp	x10, x8, [sp, #80]
   2374c:	mov	w9, #0x1808                	// #6152
   23750:	mov	w11, #0x1                   	// #1
   23754:	sub	x8, x8, #0x8
   23758:	add	x9, x10, x9
   2375c:	mov	w10, #0x40                  	// #64
   23760:	ldr	x12, [sp, #96]
   23764:	tbnz	w12, #0, 23784 <rpl_regexec@@Base+0x1718>
   23768:	ldr	x12, [sp, #96]
   2376c:	lsl	x11, x11, #1
   23770:	add	x10, x10, #0x1
   23774:	lsr	x12, x12, #1
   23778:	str	x12, [sp, #96]
   2377c:	cbnz	x12, 23760 <rpl_regexec@@Base+0x16f4>
   23780:	b	237b8 <rpl_regexec@@Base+0x174c>
   23784:	mov	x13, x9
   23788:	mov	x12, x8
   2378c:	ldr	x14, [x13], #32
   23790:	add	x12, x12, #0x8
   23794:	tst	x14, x11
   23798:	b.eq	2378c <rpl_regexec@@Base+0x1720>  // b.none
   2379c:	ldr	x14, [sp, #144]
   237a0:	ldr	x13, [x12]
   237a4:	ldr	x12, [x12, x14, lsl #3]
   237a8:	add	x14, x0, x10, lsl #3
   237ac:	str	x13, [x14]
   237b0:	str	x12, [x14, #2048]
   237b4:	b	23768 <rpl_regexec@@Base+0x16fc>
   237b8:	ldr	x8, [sp, #104]
   237bc:	cbz	x8, 23830 <rpl_regexec@@Base+0x17c4>
   237c0:	ldp	x10, x8, [sp, #80]
   237c4:	mov	w9, #0x1810                	// #6160
   237c8:	mov	w11, #0x1                   	// #1
   237cc:	sub	x8, x8, #0x8
   237d0:	add	x9, x10, x9
   237d4:	mov	w10, #0x80                  	// #128
   237d8:	ldr	x12, [sp, #104]
   237dc:	tbnz	w12, #0, 237fc <rpl_regexec@@Base+0x1790>
   237e0:	ldr	x12, [sp, #104]
   237e4:	lsl	x11, x11, #1
   237e8:	add	x10, x10, #0x1
   237ec:	lsr	x12, x12, #1
   237f0:	str	x12, [sp, #104]
   237f4:	cbnz	x12, 237d8 <rpl_regexec@@Base+0x176c>
   237f8:	b	23830 <rpl_regexec@@Base+0x17c4>
   237fc:	mov	x13, x9
   23800:	mov	x12, x8
   23804:	ldr	x14, [x13], #32
   23808:	add	x12, x12, #0x8
   2380c:	tst	x14, x11
   23810:	b.eq	23804 <rpl_regexec@@Base+0x1798>  // b.none
   23814:	ldr	x14, [sp, #144]
   23818:	ldr	x13, [x12]
   2381c:	ldr	x12, [x12, x14, lsl #3]
   23820:	add	x14, x0, x10, lsl #3
   23824:	str	x13, [x14]
   23828:	str	x12, [x14, #2048]
   2382c:	b	237e0 <rpl_regexec@@Base+0x1774>
   23830:	ldr	x8, [sp, #120]
   23834:	cbz	x8, 238a0 <rpl_regexec@@Base+0x1834>
   23838:	ldr	x8, [sp, #88]
   2383c:	mov	w9, #0xc0                  	// #192
   23840:	mov	w10, #0x1                   	// #1
   23844:	sub	x8, x8, #0x8
   23848:	ldr	x11, [sp, #120]
   2384c:	tbnz	w11, #0, 2386c <rpl_regexec@@Base+0x1800>
   23850:	ldr	x11, [sp, #120]
   23854:	lsl	x10, x10, #1
   23858:	add	x9, x9, #0x1
   2385c:	lsr	x11, x11, #1
   23860:	str	x11, [sp, #120]
   23864:	cbnz	x11, 23848 <rpl_regexec@@Base+0x17dc>
   23868:	b	238a0 <rpl_regexec@@Base+0x1834>
   2386c:	ldr	x12, [sp, #32]
   23870:	mov	x11, x8
   23874:	ldr	x13, [x12], #32
   23878:	add	x11, x11, #0x8
   2387c:	tst	x13, x10
   23880:	b.eq	23874 <rpl_regexec@@Base+0x1808>  // b.none
   23884:	ldr	x13, [sp, #144]
   23888:	ldr	x12, [x11]
   2388c:	ldr	x11, [x11, x13, lsl #3]
   23890:	add	x13, x0, x9, lsl #3
   23894:	str	x12, [x13]
   23898:	str	x11, [x13, #2048]
   2389c:	b	23850 <rpl_regexec@@Base+0x17e4>
   238a0:	ldr	x8, [sp, #72]
   238a4:	tbz	w8, #10, 238f0 <rpl_regexec@@Base+0x1884>
   238a8:	ldr	x9, [sp, #144]
   238ac:	ldr	x8, [sp, #88]
   238b0:	add	x8, x8, x9, lsl #4
   238b4:	ldr	x10, [sp, #64]
   238b8:	ldrb	w10, [x10, #1]
   238bc:	tbnz	w10, #2, 238dc <rpl_regexec@@Base+0x1870>
   238c0:	ldr	x10, [sp, #64]
   238c4:	add	x8, x8, #0x8
   238c8:	subs	x9, x9, #0x1
   238cc:	add	x10, x10, #0x20
   238d0:	str	x10, [sp, #64]
   238d4:	b.ne	238b4 <rpl_regexec@@Base+0x1848>  // b.any
   238d8:	b	238f0 <rpl_regexec@@Base+0x1884>
   238dc:	ldr	x8, [x8]
   238e0:	ldr	w9, [sp, #44]
   238e4:	str	x8, [x0, #80]
   238e8:	tbz	w9, #0, 238f0 <rpl_regexec@@Base+0x1884>
   238ec:	str	x8, [x0, #2128]
   238f0:	ldr	x0, [sp, #88]
   238f4:	bl	a970 <free@plt>
   238f8:	ldur	x0, [x29, #-24]
   238fc:	bl	a970 <free@plt>
   23900:	mov	w22, #0x10                  	// #16
   23904:	ldr	x8, [sp, #80]
   23908:	ldr	x0, [x8, x22]
   2390c:	bl	a970 <free@plt>
   23910:	ldr	x8, [sp, #144]
   23914:	add	x22, x22, #0x18
   23918:	subs	x8, x8, #0x1
   2391c:	str	x8, [sp, #144]
   23920:	b.ne	23904 <rpl_regexec@@Base+0x1898>  // b.any
   23924:	ldr	x0, [sp, #80]
   23928:	bl	a970 <free@plt>
   2392c:	ldr	x0, [x19]
   23930:	ldp	x23, x24, [sp, #16]
   23934:	ldr	x11, [sp, #128]
   23938:	ldr	x22, [sp, #112]
   2393c:	ldr	x21, [sp, #8]
   23940:	cbnz	x0, 2290c <rpl_regexec@@Base+0x8a0>
   23944:	b	22a4c <rpl_regexec@@Base+0x9e0>
   23948:	add	w1, w19, #0x2
   2394c:	add	x0, sp, #0x140
   23950:	mov	x26, x22
   23954:	mov	x22, x11
   23958:	bl	2d194 <rpl_re_set_registers@@Base+0x8280>
   2395c:	stur	w0, [x29, #-100]
   23960:	cbnz	w0, 247d0 <rpl_regexec@@Base+0x2764>
   23964:	mov	x8, x26
   23968:	ldrb	w26, [x26, #104]
   2396c:	mov	x11, x22
   23970:	mov	x22, x8
   23974:	tbz	w26, #5, 228ec <rpl_regexec@@Base+0x880>
   23978:	ldr	x8, [x22, #16]
   2397c:	cmp	x8, #0x1
   23980:	b.lt	23db8 <rpl_regexec@@Base+0x1d4c>  // b.tstop
   23984:	ldr	x12, [sp, #472]
   23988:	mov	x28, xzr
   2398c:	str	x11, [sp, #128]
   23990:	str	x22, [sp, #112]
   23994:	str	x12, [sp, #144]
   23998:	b	239ac <rpl_regexec@@Base+0x1940>
   2399c:	ldr	x8, [x22, #16]
   239a0:	add	x28, x28, #0x1
   239a4:	cmp	x28, x8
   239a8:	b.ge	23db8 <rpl_regexec@@Base+0x1d4c>  // b.tcont
   239ac:	ldr	x8, [x22, #24]
   239b0:	ldr	x1, [x8, x28, lsl #3]
   239b4:	ldr	x8, [x12]
   239b8:	add	x8, x8, x1, lsl #4
   239bc:	ldr	w26, [x8, #8]
   239c0:	tbz	w26, #20, 2399c <rpl_regexec@@Base+0x1930>
   239c4:	tst	w26, #0x3ff00
   239c8:	b.eq	23ab8 <rpl_regexec@@Base+0x1a4c>  // b.none
   239cc:	ldr	x8, [sp, #392]
   239d0:	tbnz	x8, #63, 23a08 <rpl_regexec@@Base+0x199c>
   239d4:	ldr	x9, [sp, #408]
   239d8:	cmp	x9, x8
   239dc:	b.eq	23cc0 <rpl_regexec@@Base+0x1c54>  // b.none
   239e0:	ldr	w9, [sp, #464]
   239e4:	cmp	w9, #0x2
   239e8:	b.lt	23a1c <rpl_regexec@@Base+0x19b0>  // b.tstop
   239ec:	ldr	x9, [sp, #336]
   239f0:	ldr	w19, [x9, x8, lsl #2]
   239f4:	cmn	w19, #0x1
   239f8:	b.ne	23a48 <rpl_regexec@@Base+0x19dc>  // b.any
   239fc:	cmp	x8, #0x0
   23a00:	sub	x8, x8, #0x1
   23a04:	b.gt	239f0 <rpl_regexec@@Base+0x1984>
   23a08:	ldr	w8, [sp, #432]
   23a0c:	tst	w8, #0x1
   23a10:	cset	w9, eq  // eq = none
   23a14:	tbnz	w26, #10, 23a90 <rpl_regexec@@Base+0x1a24>
   23a18:	b	23a94 <rpl_regexec@@Base+0x1a28>
   23a1c:	ldr	x9, [sp, #328]
   23a20:	ldr	x10, [sp, #448]
   23a24:	ldrb	w8, [x9, x8]
   23a28:	lsr	x9, x8, #3
   23a2c:	and	x9, x9, #0x18
   23a30:	ldr	x9, [x10, x9]
   23a34:	lsr	x9, x9, x8
   23a38:	tbz	w9, #0, 23a78 <rpl_regexec@@Base+0x1a0c>
   23a3c:	mov	w9, wzr
   23a40:	mov	w8, #0x1                   	// #1
   23a44:	b	23a94 <rpl_regexec@@Base+0x1a28>
   23a48:	ldrb	w8, [sp, #462]
   23a4c:	cbnz	w8, 23d00 <rpl_regexec@@Base+0x1c94>
   23a50:	cmp	w19, #0xa
   23a54:	b.ne	23a80 <rpl_regexec@@Base+0x1a14>  // b.any
   23a58:	ldrb	w8, [sp, #461]
   23a5c:	cmp	w8, #0x0
   23a60:	cset	w8, ne  // ne = any
   23a64:	lsl	w8, w8, #1
   23a68:	tst	w8, #0x1
   23a6c:	cset	w9, eq  // eq = none
   23a70:	tbnz	w26, #10, 23a90 <rpl_regexec@@Base+0x1a24>
   23a74:	b	23a94 <rpl_regexec@@Base+0x1a28>
   23a78:	cmp	w8, #0xa
   23a7c:	b.eq	23a58 <rpl_regexec@@Base+0x19ec>  // b.none
   23a80:	mov	w8, wzr
   23a84:	tst	w8, #0x1
   23a88:	cset	w9, eq  // eq = none
   23a8c:	tbz	w26, #10, 23a94 <rpl_regexec@@Base+0x1a28>
   23a90:	tbz	w8, #0, 2399c <rpl_regexec@@Base+0x1930>
   23a94:	ldr	x10, [x12]
   23a98:	add	x10, x10, x1, lsl #4
   23a9c:	ldr	w10, [x10, #8]
   23aa0:	tbnz	w9, #0, 23aa8 <rpl_regexec@@Base+0x1a3c>
   23aa4:	tbnz	w10, #11, 2399c <rpl_regexec@@Base+0x1930>
   23aa8:	tbnz	w8, #1, 23ab0 <rpl_regexec@@Base+0x1a44>
   23aac:	tbnz	w10, #13, 2399c <rpl_regexec@@Base+0x1930>
   23ab0:	tbnz	w8, #3, 23ab8 <rpl_regexec@@Base+0x1a4c>
   23ab4:	tbnz	w10, #15, 2399c <rpl_regexec@@Base+0x1930>
   23ab8:	ldr	x3, [sp, #392]
   23abc:	add	x2, sp, #0x140
   23ac0:	mov	x0, x12
   23ac4:	mov	x26, x1
   23ac8:	bl	2eb84 <rpl_re_set_registers@@Base+0x9c70>
   23acc:	ldr	x12, [sp, #144]
   23ad0:	ldr	x11, [sp, #128]
   23ad4:	cbz	w0, 2399c <rpl_regexec@@Base+0x1930>
   23ad8:	ldr	w10, [sp, #544]
   23adc:	ldp	x9, x19, [sp, #384]
   23ae0:	ldr	x22, [sp, #512]
   23ae4:	ldr	x8, [sp, #408]
   23ae8:	sxtw	x11, w0
   23aec:	str	x11, [sp, #120]
   23af0:	add	x11, x19, x11
   23af4:	cmp	w10, w0
   23af8:	mov	x13, x26
   23afc:	csel	w10, w0, w10, lt  // lt = tstop
   23b00:	cmp	x9, x11
   23b04:	str	w10, [sp, #544]
   23b08:	str	x11, [sp, #136]
   23b0c:	b.gt	23b18 <rpl_regexec@@Base+0x1aac>
   23b10:	cmp	x9, x8
   23b14:	b.lt	23b2c <rpl_regexec@@Base+0x1ac0>  // b.tstop
   23b18:	ldr	x9, [sp, #368]
   23b1c:	cmp	x9, x11
   23b20:	b.gt	23b44 <rpl_regexec@@Base+0x1ad8>
   23b24:	cmp	x9, x8
   23b28:	b.ge	23b44 <rpl_regexec@@Base+0x1ad8>  // b.tcont
   23b2c:	add	w1, w11, #0x1
   23b30:	add	x0, sp, #0x140
   23b34:	bl	2d194 <rpl_re_set_registers@@Base+0x8280>
   23b38:	ldp	x11, x12, [sp, #136]
   23b3c:	mov	x13, x26
   23b40:	cbnz	w0, 23e28 <rpl_regexec@@Base+0x1dbc>
   23b44:	subs	x8, x11, x22
   23b48:	b.le	23b70 <rpl_regexec@@Base+0x1b04>
   23b4c:	ldr	x9, [sp, #504]
   23b50:	lsl	x2, x8, #3
   23b54:	mov	w1, wzr
   23b58:	add	x9, x9, x22, lsl #3
   23b5c:	add	x0, x9, #0x8
   23b60:	bl	a640 <memset@plt>
   23b64:	ldp	x11, x12, [sp, #136]
   23b68:	mov	x13, x26
   23b6c:	str	x11, [sp, #512]
   23b70:	stur	wzr, [x29, #-40]
   23b74:	ldr	x8, [x12, #24]
   23b78:	ldr	x9, [sp, #504]
   23b7c:	ldr	x10, [x12, #48]
   23b80:	ldr	x8, [x8, x13, lsl #3]
   23b84:	ldr	x26, [x9, x11, lsl #3]
   23b88:	mov	w9, #0x18                  	// #24
   23b8c:	madd	x2, x8, x9, x10
   23b90:	cbz	x26, 23bb4 <rpl_regexec@@Base+0x1b48>
   23b94:	ldr	x1, [x26, #80]
   23b98:	sub	x0, x29, #0x60
   23b9c:	bl	2d594 <rpl_re_set_registers@@Base+0x8680>
   23ba0:	ldr	x11, [sp, #136]
   23ba4:	ldr	x22, [sp, #112]
   23ba8:	stur	w0, [x29, #-40]
   23bac:	cbz	w0, 23bc8 <rpl_regexec@@Base+0x1b5c>
   23bb0:	b	23e40 <rpl_regexec@@Base+0x1dd4>
   23bb4:	ldr	x8, [x2, #16]
   23bb8:	ldr	q0, [x2]
   23bbc:	ldr	x22, [sp, #112]
   23bc0:	stur	x8, [x29, #-80]
   23bc4:	stur	q0, [x29, #-96]
   23bc8:	cmp	x11, #0x0
   23bcc:	b.le	23ce0 <rpl_regexec@@Base+0x1c74>
   23bd0:	ldr	x9, [sp, #408]
   23bd4:	ldr	x1, [sp, #144]
   23bd8:	sub	x8, x11, #0x1
   23bdc:	cmp	x9, x8
   23be0:	b.eq	23cec <rpl_regexec@@Base+0x1c80>  // b.none
   23be4:	ldr	w9, [sp, #464]
   23be8:	cmp	w9, #0x2
   23bec:	b.lt	23c20 <rpl_regexec@@Base+0x1bb4>  // b.tstop
   23bf0:	ldr	x9, [sp, #336]
   23bf4:	ldr	x8, [sp, #120]
   23bf8:	sub	x9, x9, #0x4
   23bfc:	add	x8, x19, x8
   23c00:	ldr	w19, [x9, x8, lsl #2]
   23c04:	cmn	w19, #0x1
   23c08:	b.ne	23c48 <rpl_regexec@@Base+0x1bdc>  // b.any
   23c0c:	sub	x8, x8, #0x1
   23c10:	cmp	x8, #0x0
   23c14:	b.gt	23c00 <rpl_regexec@@Base+0x1b94>
   23c18:	ldr	w3, [sp, #432]
   23c1c:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23c20:	ldr	x9, [sp, #328]
   23c24:	ldr	x10, [sp, #448]
   23c28:	ldrb	w8, [x9, x8]
   23c2c:	lsr	x9, x8, #3
   23c30:	and	x9, x9, #0x18
   23c34:	ldr	x9, [x10, x9]
   23c38:	lsr	x9, x9, x8
   23c3c:	tbz	w9, #0, 23c6c <rpl_regexec@@Base+0x1c00>
   23c40:	mov	w3, #0x1                   	// #1
   23c44:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23c48:	ldrb	w8, [sp, #462]
   23c4c:	cbnz	w8, 23d2c <rpl_regexec@@Base+0x1cc0>
   23c50:	cmp	w19, #0xa
   23c54:	b.ne	23c74 <rpl_regexec@@Base+0x1c08>  // b.any
   23c58:	ldrb	w8, [sp, #461]
   23c5c:	cmp	w8, #0x0
   23c60:	cset	w8, ne  // ne = any
   23c64:	lsl	w3, w8, #1
   23c68:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23c6c:	cmp	w8, #0xa
   23c70:	b.eq	23c58 <rpl_regexec@@Base+0x1bec>  // b.none
   23c74:	mov	w3, wzr
   23c78:	sub	x0, x29, #0x28
   23c7c:	sub	x2, x29, #0x60
   23c80:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   23c84:	ldr	x8, [sp, #504]
   23c88:	ldr	x9, [sp, #136]
   23c8c:	str	x0, [x8, x9, lsl #3]
   23c90:	cbz	x26, 23ca0 <rpl_regexec@@Base+0x1c34>
   23c94:	ldur	x0, [x29, #-80]
   23c98:	bl	a970 <free@plt>
   23c9c:	ldr	x9, [sp, #136]
   23ca0:	ldr	x8, [sp, #504]
   23ca4:	ldr	x11, [sp, #128]
   23ca8:	ldr	x12, [sp, #144]
   23cac:	ldr	x8, [x8, x9, lsl #3]
   23cb0:	cbnz	x8, 2399c <rpl_regexec@@Base+0x1930>
   23cb4:	ldur	w0, [x29, #-40]
   23cb8:	cbz	w0, 2399c <rpl_regexec@@Base+0x1930>
   23cbc:	b	23e34 <rpl_regexec@@Base+0x1dc8>
   23cc0:	ldr	w8, [sp, #480]
   23cc4:	mov	w9, #0xa                   	// #10
   23cc8:	and	w8, w8, #0x2
   23ccc:	eor	w8, w8, w9
   23cd0:	tst	w8, #0x1
   23cd4:	cset	w9, eq  // eq = none
   23cd8:	tbnz	w26, #10, 23a90 <rpl_regexec@@Base+0x1a24>
   23cdc:	b	23a94 <rpl_regexec@@Base+0x1a28>
   23ce0:	ldr	w3, [sp, #432]
   23ce4:	ldr	x1, [sp, #144]
   23ce8:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23cec:	ldr	w8, [sp, #480]
   23cf0:	mov	w9, #0xa                   	// #10
   23cf4:	and	w8, w8, #0x2
   23cf8:	eor	w3, w8, w9
   23cfc:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23d00:	mov	w0, w19
   23d04:	str	x1, [sp, #136]
   23d08:	bl	ac20 <iswalnum@plt>
   23d0c:	mov	w9, wzr
   23d10:	cmp	w19, #0x5f
   23d14:	mov	w8, #0x1                   	// #1
   23d18:	b.eq	23d50 <rpl_regexec@@Base+0x1ce4>  // b.none
   23d1c:	ldp	x11, x1, [sp, #128]
   23d20:	ldr	x12, [sp, #144]
   23d24:	cbz	w0, 23a50 <rpl_regexec@@Base+0x19e4>
   23d28:	b	23a94 <rpl_regexec@@Base+0x1a28>
   23d2c:	mov	w0, w19
   23d30:	bl	ac20 <iswalnum@plt>
   23d34:	cmp	w19, #0x5f
   23d38:	mov	w3, #0x1                   	// #1
   23d3c:	b.eq	23d5c <rpl_regexec@@Base+0x1cf0>  // b.none
   23d40:	ldr	x22, [sp, #112]
   23d44:	ldr	x1, [sp, #144]
   23d48:	cbz	w0, 23c50 <rpl_regexec@@Base+0x1be4>
   23d4c:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23d50:	ldp	x11, x1, [sp, #128]
   23d54:	ldr	x12, [sp, #144]
   23d58:	b	23a94 <rpl_regexec@@Base+0x1a28>
   23d5c:	ldr	x22, [sp, #112]
   23d60:	ldr	x1, [sp, #144]
   23d64:	b	23c78 <rpl_regexec@@Base+0x1c0c>
   23d68:	ldr	x8, [sp, #392]
   23d6c:	cmp	x8, #0x0
   23d70:	b.le	23db0 <rpl_regexec@@Base+0x1d44>
   23d74:	ldr	x10, [sp, #408]
   23d78:	sub	x9, x8, #0x1
   23d7c:	cmp	x10, x9
   23d80:	b.eq	23e48 <rpl_regexec@@Base+0x1ddc>  // b.none
   23d84:	ldr	w10, [sp, #464]
   23d88:	cmp	w10, #0x2
   23d8c:	b.lt	23dc0 <rpl_regexec@@Base+0x1d54>  // b.tstop
   23d90:	ldr	x9, [sp, #336]
   23d94:	sub	x9, x9, #0x4
   23d98:	ldr	w19, [x9, x8, lsl #2]
   23d9c:	cmn	w19, #0x1
   23da0:	b.ne	23de8 <rpl_regexec@@Base+0x1d7c>  // b.any
   23da4:	sub	x8, x8, #0x1
   23da8:	cmp	x8, #0x0
   23dac:	b.gt	23d98 <rpl_regexec@@Base+0x1d2c>
   23db0:	ldr	w8, [sp, #432]
   23db4:	b	23e18 <rpl_regexec@@Base+0x1dac>
   23db8:	stur	wzr, [x29, #-100]
   23dbc:	b	228ec <rpl_regexec@@Base+0x880>
   23dc0:	ldr	x8, [sp, #328]
   23dc4:	ldr	x10, [sp, #448]
   23dc8:	ldrb	w8, [x8, x9]
   23dcc:	lsr	x9, x8, #3
   23dd0:	and	x9, x9, #0x18
   23dd4:	ldr	x9, [x10, x9]
   23dd8:	lsr	x9, x9, x8
   23ddc:	tbz	w9, #0, 23e0c <rpl_regexec@@Base+0x1da0>
   23de0:	mov	w8, #0x1                   	// #1
   23de4:	b	23e18 <rpl_regexec@@Base+0x1dac>
   23de8:	ldrb	w8, [sp, #462]
   23dec:	cbnz	w8, 23e50 <rpl_regexec@@Base+0x1de4>
   23df0:	cmp	w19, #0xa
   23df4:	b.ne	23e14 <rpl_regexec@@Base+0x1da8>  // b.any
   23df8:	ldrb	w8, [sp, #461]
   23dfc:	cmp	w8, #0x0
   23e00:	cset	w8, ne  // ne = any
   23e04:	lsl	w8, w8, #1
   23e08:	b	23e18 <rpl_regexec@@Base+0x1dac>
   23e0c:	cmp	w8, #0xa
   23e10:	b.eq	23df8 <rpl_regexec@@Base+0x1d8c>  // b.none
   23e14:	mov	w8, wzr
   23e18:	ubfiz	w8, w8, #8, #1
   23e1c:	orr	x8, x8, x28
   23e20:	ldr	x28, [x26, x8, lsl #3]
   23e24:	b	22910 <rpl_regexec@@Base+0x8a4>
   23e28:	ldr	x11, [sp, #128]
   23e2c:	ldr	x22, [sp, #112]
   23e30:	stur	w0, [x29, #-40]
   23e34:	mov	x28, xzr
   23e38:	stur	w0, [x29, #-100]
   23e3c:	b	22910 <rpl_regexec@@Base+0x8a4>
   23e40:	ldr	x11, [sp, #128]
   23e44:	b	23e34 <rpl_regexec@@Base+0x1dc8>
   23e48:	mov	w8, #0xa                   	// #10
   23e4c:	b	23e18 <rpl_regexec@@Base+0x1dac>
   23e50:	mov	w0, w19
   23e54:	str	x11, [sp, #128]
   23e58:	bl	ac20 <iswalnum@plt>
   23e5c:	cmp	w19, #0x5f
   23e60:	mov	w8, #0x1                   	// #1
   23e64:	b.eq	23edc <rpl_regexec@@Base+0x1e70>  // b.none
   23e68:	ldr	x11, [sp, #128]
   23e6c:	cbz	w0, 23df0 <rpl_regexec@@Base+0x1d84>
   23e70:	b	23e18 <rpl_regexec@@Base+0x1dac>
   23e74:	stur	w0, [x29, #-12]
   23e78:	ldr	x0, [sp, #88]
   23e7c:	bl	a970 <free@plt>
   23e80:	ldur	x0, [x29, #-24]
   23e84:	bl	a970 <free@plt>
   23e88:	ldr	x8, [sp, #144]
   23e8c:	cmp	x8, #0x1
   23e90:	b.lt	23eb4 <rpl_regexec@@Base+0x1e48>  // b.tstop
   23e94:	ldr	x8, [sp, #80]
   23e98:	add	x19, x8, #0x10
   23e9c:	ldr	x0, [x19], #24
   23ea0:	bl	a970 <free@plt>
   23ea4:	ldr	x8, [sp, #144]
   23ea8:	subs	x8, x8, #0x1
   23eac:	str	x8, [sp, #144]
   23eb0:	b.ne	23e9c <rpl_regexec@@Base+0x1e30>  // b.any
   23eb4:	ldr	x0, [sp, #80]
   23eb8:	bl	a970 <free@plt>
   23ebc:	ldp	x23, x24, [sp, #16]
   23ec0:	ldr	x11, [sp, #128]
   23ec4:	ldr	x22, [sp, #112]
   23ec8:	ldr	x21, [sp, #8]
   23ecc:	mov	w8, #0xc                   	// #12
   23ed0:	mov	x28, xzr
   23ed4:	stur	w8, [x29, #-100]
   23ed8:	b	22910 <rpl_regexec@@Base+0x8a4>
   23edc:	ldr	x11, [sp, #128]
   23ee0:	b	23e18 <rpl_regexec@@Base+0x1dac>
   23ee4:	mov	x0, x23
   23ee8:	bl	a970 <free@plt>
   23eec:	b	23e94 <rpl_regexec@@Base+0x1e28>
   23ef0:	ldr	x9, [sp, #208]
   23ef4:	cbnz	x9, 23f08 <rpl_regexec@@Base+0x1e9c>
   23ef8:	b	23f14 <rpl_regexec@@Base+0x1ea8>
   23efc:	ldr	x9, [sp, #264]
   23f00:	mov	x11, x19
   23f04:	cbz	x9, 23f14 <rpl_regexec@@Base+0x1ea8>
   23f08:	ldr	x8, [x9]
   23f0c:	add	x8, x8, x11
   23f10:	str	x8, [x9]
   23f14:	ldr	w19, [sp, #276]
   23f18:	ldp	x28, x20, [sp, #240]
   23f1c:	ldr	x2, [sp, #288]
   23f20:	cmn	x2, #0x1
   23f24:	b.eq	24134 <rpl_regexec@@Base+0x20c8>  // b.none
   23f28:	cmn	x2, #0x2
   23f2c:	b.eq	24748 <rpl_regexec@@Base+0x26dc>  // b.none
   23f30:	ldr	x22, [sp, #256]
   23f34:	mov	x20, x2
   23f38:	str	x2, [sp, #488]
   23f3c:	cmp	x22, #0x2
   23f40:	b.cc	23f84 <rpl_regexec@@Base+0x1f18>  // b.lo, b.ul, b.last
   23f44:	ldr	x8, [sp, #192]
   23f48:	ldrb	w8, [x8, #56]
   23f4c:	tbnz	w8, #4, 23f84 <rpl_regexec@@Base+0x1f18>
   23f50:	ldr	x8, [sp, #504]
   23f54:	add	x0, sp, #0x140
   23f58:	ldr	x1, [x8, x2, lsl #3]
   23f5c:	bl	2b9b8 <rpl_re_set_registers@@Base+0x6aa4>
   23f60:	ldr	x9, [sp, #304]
   23f64:	str	x0, [sp, #496]
   23f68:	str	x0, [sp, #264]
   23f6c:	ldrb	w8, [x9, #176]
   23f70:	tbnz	w8, #0, 23fbc <rpl_regexec@@Base+0x1f50>
   23f74:	ldr	x8, [x9, #152]
   23f78:	mov	x9, x20
   23f7c:	cbnz	x8, 23fac <rpl_regexec@@Base+0x1f40>
   23f80:	b	24498 <rpl_regexec@@Base+0x242c>
   23f84:	ldr	x8, [sp, #304]
   23f88:	ldr	x8, [x8, #152]
   23f8c:	cbz	x8, 24498 <rpl_regexec@@Base+0x242c>
   23f90:	ldr	x8, [sp, #504]
   23f94:	add	x0, sp, #0x140
   23f98:	ldr	x1, [x8, x2, lsl #3]
   23f9c:	bl	2b9b8 <rpl_re_set_registers@@Base+0x6aa4>
   23fa0:	mov	x9, x20
   23fa4:	str	x0, [sp, #264]
   23fa8:	str	x0, [sp, #496]
   23fac:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
   23fb0:	cmp	x9, x8
   23fb4:	b.cc	23fcc <rpl_regexec@@Base+0x1f60>  // b.lo, b.ul, b.last
   23fb8:	b	24748 <rpl_regexec@@Base+0x26dc>
   23fbc:	mov	x9, x20
   23fc0:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
   23fc4:	cmp	x9, x8
   23fc8:	b.cs	24748 <rpl_regexec@@Base+0x26dc>  // b.hs, b.nlast
   23fcc:	ldr	x19, [sp, #472]
   23fd0:	lsl	x8, x9, #3
   23fd4:	add	x25, x8, #0x8
   23fd8:	mov	x0, x25
   23fdc:	bl	a550 <malloc@plt>
   23fe0:	mov	x26, x0
   23fe4:	cbz	x0, 24750 <rpl_regexec@@Base+0x26e4>
   23fe8:	ldr	x8, [x19, #152]
   23fec:	cbz	x8, 240e4 <rpl_regexec@@Base+0x2078>
   23ff0:	mov	x0, x25
   23ff4:	bl	a550 <malloc@plt>
   23ff8:	cbz	x0, 24750 <rpl_regexec@@Base+0x26e4>
   23ffc:	mov	w1, wzr
   24000:	mov	x2, x25
   24004:	mov	x28, x0
   24008:	bl	a640 <memset@plt>
   2400c:	ldr	x8, [sp, #264]
   24010:	add	x0, sp, #0x140
   24014:	sub	x1, x29, #0x60
   24018:	stp	x26, x28, [x29, #-96]
   2401c:	stp	x8, x20, [x29, #-80]
   24020:	ldr	x8, [sp, #184]
   24024:	stp	xzr, xzr, [x8, #8]
   24028:	str	xzr, [x8]
   2402c:	bl	2f124 <rpl_re_set_registers@@Base+0xa210>
   24030:	cbnz	w0, 243e4 <rpl_regexec@@Base+0x2378>
   24034:	ldr	x8, [x26]
   24038:	cbz	x8, 24160 <rpl_regexec@@Base+0x20f4>
   2403c:	mov	x10, x20
   24040:	mov	x22, xzr
   24044:	ldr	x9, [x28, x22, lsl #3]
   24048:	cbnz	x8, 2406c <rpl_regexec@@Base+0x2000>
   2404c:	str	x9, [x26, x22, lsl #3]
   24050:	cmp	x10, x22
   24054:	b.eq	240c0 <rpl_regexec@@Base+0x2054>  // b.none
   24058:	add	x8, x26, x22, lsl #3
   2405c:	ldr	x8, [x8, #8]
   24060:	add	x22, x22, #0x1
   24064:	ldr	x9, [x28, x22, lsl #3]
   24068:	cbz	x8, 2404c <rpl_regexec@@Base+0x1fe0>
   2406c:	cbz	x9, 240b8 <rpl_regexec@@Base+0x204c>
   24070:	add	x1, x8, #0x8
   24074:	add	x2, x9, #0x8
   24078:	sub	x0, x29, #0x28
   2407c:	mov	x20, x10
   24080:	bl	2d594 <rpl_re_set_registers@@Base+0x8680>
   24084:	stur	w0, [x29, #-12]
   24088:	cbnz	w0, 24264 <rpl_regexec@@Base+0x21f8>
   2408c:	sub	x0, x29, #0xc
   24090:	sub	x2, x29, #0x28
   24094:	mov	x1, x19
   24098:	bl	2e908 <rpl_re_set_registers@@Base+0x99f4>
   2409c:	ldur	x8, [x29, #-24]
   240a0:	str	x0, [x26, x22, lsl #3]
   240a4:	mov	x0, x8
   240a8:	bl	a970 <free@plt>
   240ac:	ldur	w25, [x29, #-12]
   240b0:	mov	x10, x20
   240b4:	cbnz	w25, 240c8 <rpl_regexec@@Base+0x205c>
   240b8:	cmp	x10, x22
   240bc:	b.ne	24058 <rpl_regexec@@Base+0x1fec>  // b.any
   240c0:	mov	x20, x10
   240c4:	mov	w25, wzr
   240c8:	ldr	x22, [sp, #256]
   240cc:	mov	x0, x28
   240d0:	bl	a970 <free@plt>
   240d4:	ldr	w19, [sp, #276]
   240d8:	cbz	w25, 24484 <rpl_regexec@@Base+0x2418>
   240dc:	mov	x28, xzr
   240e0:	b	24420 <rpl_regexec@@Base+0x23b4>
   240e4:	ldr	x8, [sp, #264]
   240e8:	add	x0, sp, #0x140
   240ec:	sub	x1, x29, #0x60
   240f0:	stp	x26, xzr, [x29, #-96]
   240f4:	stp	x8, x20, [x29, #-80]
   240f8:	ldr	x8, [sp, #184]
   240fc:	stp	xzr, xzr, [x8]
   24100:	str	xzr, [x8, #16]
   24104:	bl	2f124 <rpl_re_set_registers@@Base+0xa210>
   24108:	cbnz	w0, 24414 <rpl_regexec@@Base+0x23a8>
   2410c:	ldr	x8, [x26]
   24110:	ldr	w19, [sp, #276]
   24114:	cbnz	x8, 24484 <rpl_regexec@@Base+0x2418>
   24118:	mov	x28, xzr
   2411c:	mov	x0, x26
   24120:	bl	a970 <free@plt>
   24124:	mov	x0, x28
   24128:	bl	a970 <free@plt>
   2412c:	ldr	x22, [sp, #280]
   24130:	ldp	x28, x20, [sp, #240]
   24134:	add	x0, sp, #0x140
   24138:	bl	2bb20 <rpl_re_set_registers@@Base+0x6c0c>
   2413c:	ldur	x8, [x29, #-112]
   24140:	mov	w25, #0x1                   	// #1
   24144:	add	x26, x8, x28
   24148:	cmp	x26, x22
   2414c:	stur	x26, [x29, #-112]
   24150:	b.lt	2467c <rpl_regexec@@Base+0x2610>  // b.tstop
   24154:	cmp	x27, x26
   24158:	b.ge	2256c <rpl_regexec@@Base+0x500>  // b.tcont
   2415c:	b	2467c <rpl_regexec@@Base+0x2610>
   24160:	ldr	x8, [x28]
   24164:	mov	x10, x20
   24168:	cbnz	x8, 2420c <rpl_regexec@@Base+0x21a0>
   2416c:	cmp	x10, #0x1
   24170:	b.lt	24230 <rpl_regexec@@Base+0x21c4>  // b.tstop
   24174:	ldr	x9, [sp, #504]
   24178:	add	x8, x10, #0x1
   2417c:	lsl	x25, x10, #3
   24180:	sub	x9, x9, #0x8
   24184:	b	24198 <rpl_regexec@@Base+0x212c>
   24188:	sub	x8, x8, #0x1
   2418c:	cmp	x8, #0x2
   24190:	sub	x25, x25, #0x8
   24194:	b.lt	24230 <rpl_regexec@@Base+0x21c4>  // b.tstop
   24198:	ldr	x1, [x9, x25]
   2419c:	cbz	x1, 24188 <rpl_regexec@@Base+0x211c>
   241a0:	ldrb	w10, [x1, #104]
   241a4:	tbz	w10, #4, 24188 <rpl_regexec@@Base+0x211c>
   241a8:	sub	x2, x8, #0x2
   241ac:	add	x0, sp, #0x140
   241b0:	str	x2, [sp, #288]
   241b4:	bl	2b9b8 <rpl_re_set_registers@@Base+0x6aa4>
   241b8:	mov	x20, x0
   241bc:	mov	x0, x28
   241c0:	mov	w1, wzr
   241c4:	mov	x2, x25
   241c8:	bl	a640 <memset@plt>
   241cc:	ldr	x8, [sp, #288]
   241d0:	str	x20, [sp, #264]
   241d4:	stp	x20, x8, [x29, #-80]
   241d8:	add	x0, sp, #0x140
   241dc:	mov	x20, x8
   241e0:	ldr	x8, [sp, #184]
   241e4:	sub	x1, x29, #0x60
   241e8:	stp	x26, x28, [x29, #-96]
   241ec:	stp	xzr, xzr, [x8, #8]
   241f0:	str	xzr, [x8]
   241f4:	bl	2f124 <rpl_re_set_registers@@Base+0xa210>
   241f8:	cbnz	w0, 243e4 <rpl_regexec@@Base+0x2378>
   241fc:	ldr	x8, [x26]
   24200:	cbz	x8, 24160 <rpl_regexec@@Base+0x20f4>
   24204:	mov	x10, x20
   24208:	b	24210 <rpl_regexec@@Base+0x21a4>
   2420c:	mov	x8, xzr
   24210:	tbz	x10, #63, 24040 <rpl_regexec@@Base+0x1fd4>
   24214:	mov	x20, x10
   24218:	mov	w25, wzr
   2421c:	mov	x0, x28
   24220:	bl	a970 <free@plt>
   24224:	ldr	w19, [sp, #276]
   24228:	cbz	w25, 24484 <rpl_regexec@@Base+0x2418>
   2422c:	b	240dc <rpl_regexec@@Base+0x2070>
   24230:	ldr	w19, [sp, #276]
   24234:	b	2411c <rpl_regexec@@Base+0x20b0>
   24238:	mov	x2, x19
   2423c:	ldr	w19, [sp, #276]
   24240:	ldr	x22, [sp, #280]
   24244:	ldp	x28, x20, [sp, #240]
   24248:	cmn	x2, #0x1
   2424c:	b.ne	23f28 <rpl_regexec@@Base+0x1ebc>  // b.any
   24250:	b	24134 <rpl_regexec@@Base+0x20c8>
   24254:	ldr	x22, [sp, #280]
   24258:	ldr	x9, [sp, #264]
   2425c:	cbnz	x9, 23f08 <rpl_regexec@@Base+0x1e9c>
   24260:	b	23f14 <rpl_regexec@@Base+0x1ea8>
   24264:	mov	w25, w0
   24268:	b	240c8 <rpl_regexec@@Base+0x205c>
   2426c:	tbnz	w26, #31, 2439c <rpl_regexec@@Base+0x2330>
   24270:	ldr	w8, [sp, #204]
   24274:	ldr	w19, [sp, #276]
   24278:	cbz	w8, 243ec <rpl_regexec@@Base+0x2380>
   2427c:	mov	w8, #0x1                   	// #1
   24280:	str	x11, [sp, #288]
   24284:	str	x8, [sp, #232]
   24288:	b	2289c <rpl_regexec@@Base+0x830>
   2428c:	ldr	x8, [x28, #16]
   24290:	cmp	x8, #0x1
   24294:	b.lt	24368 <rpl_regexec@@Base+0x22fc>  // b.tstop
   24298:	ldr	x20, [sp, #472]
   2429c:	mov	x25, xzr
   242a0:	str	x11, [sp, #128]
   242a4:	b	242d0 <rpl_regexec@@Base+0x2264>
   242a8:	add	x9, x22, #0x1
   242ac:	str	x26, [x8, #8]
   242b0:	str	x9, [sp, #552]
   242b4:	str	xzr, [x8]
   242b8:	ldr	x8, [x28, #16]
   242bc:	ldr	x22, [sp, #280]
   242c0:	ldr	x11, [sp, #128]
   242c4:	add	x25, x25, #0x1
   242c8:	cmp	x25, x8
   242cc:	b.ge	24368 <rpl_regexec@@Base+0x22fc>  // b.tcont
   242d0:	ldr	x9, [x28, #24]
   242d4:	ldr	x26, [x9, x25, lsl #3]
   242d8:	ldr	x9, [x20]
   242dc:	add	x10, x9, x26, lsl #4
   242e0:	ldrb	w10, [x10, #8]
   242e4:	cmp	w10, #0x8
   242e8:	b.ne	242c4 <rpl_regexec@@Base+0x2258>  // b.any
   242ec:	lsl	x10, x26, #4
   242f0:	ldr	x9, [x9, x10]
   242f4:	cmp	x9, #0x3f
   242f8:	b.gt	242c4 <rpl_regexec@@Base+0x2258>
   242fc:	ldr	x10, [x20, #160]
   24300:	lsr	x9, x10, x9
   24304:	tbz	w9, #0, 242c4 <rpl_regexec@@Base+0x2258>
   24308:	ldr	x22, [sp, #552]
   2430c:	ldr	x8, [sp, #560]
   24310:	cmp	x22, x8
   24314:	b.eq	24340 <rpl_regexec@@Base+0x22d4>  // b.none
   24318:	ldr	x19, [sp, #568]
   2431c:	mov	w0, #0x1                   	// #1
   24320:	mov	w1, #0x30                  	// #48
   24324:	bl	a6c0 <calloc@plt>
   24328:	lsl	x8, x22, #3
   2432c:	str	x0, [x19, x8]
   24330:	ldr	x9, [sp, #568]
   24334:	ldr	x8, [x9, x8]
   24338:	cbnz	x8, 242a8 <rpl_regexec@@Base+0x223c>
   2433c:	b	24468 <rpl_regexec@@Base+0x23fc>
   24340:	ldr	x0, [sp, #568]
   24344:	lsl	x1, x22, #4
   24348:	bl	a730 <realloc@plt>
   2434c:	cbz	x0, 24468 <rpl_regexec@@Base+0x23fc>
   24350:	lsl	x8, x22, #1
   24354:	ldr	x22, [sp, #552]
   24358:	mov	x19, x0
   2435c:	str	x0, [sp, #568]
   24360:	str	x8, [sp, #560]
   24364:	b	2431c <rpl_regexec@@Base+0x22b0>
   24368:	stur	wzr, [x29, #-100]
   2436c:	ldrb	w8, [x28, #104]
   24370:	mov	w25, wzr
   24374:	tbz	w8, #6, 22888 <rpl_regexec@@Base+0x81c>
   24378:	add	x1, x28, #0x8
   2437c:	add	x0, sp, #0x140
   24380:	mov	x19, x11
   24384:	bl	2c8bc <rpl_re_set_registers@@Base+0x79a8>
   24388:	stur	w0, [x29, #-100]
   2438c:	cbnz	w0, 24470 <rpl_regexec@@Base+0x2404>
   24390:	mov	w25, wzr
   24394:	mov	x11, x19
   24398:	b	22888 <rpl_regexec@@Base+0x81c>
   2439c:	add	x0, sp, #0x140
   243a0:	mov	x1, x28
   243a4:	mov	x2, x11
   243a8:	mov	x19, x11
   243ac:	bl	2b9b8 <rpl_re_set_registers@@Base+0x6aa4>
   243b0:	ldr	w9, [sp, #204]
   243b4:	cmp	x0, #0x0
   243b8:	cset	w8, ne  // ne = any
   243bc:	str	x8, [sp, #232]
   243c0:	cset	w8, eq  // eq = none
   243c4:	mov	x11, x19
   243c8:	orr	w8, w9, w8
   243cc:	csinv	x9, x19, xzr, ne  // ne = any
   243d0:	str	x9, [sp, #288]
   243d4:	tbnz	w8, #0, 2289c <rpl_regexec@@Base+0x830>
   243d8:	ldr	w19, [sp, #276]
   243dc:	mov	x2, x11
   243e0:	b	24244 <rpl_regexec@@Base+0x21d8>
   243e4:	mov	w25, w0
   243e8:	b	2441c <rpl_regexec@@Base+0x23b0>
   243ec:	mov	x2, x11
   243f0:	b	24244 <rpl_regexec@@Base+0x21d8>
   243f4:	mov	w8, wzr
   243f8:	ldr	x9, [sp, #296]
   243fc:	cbz	x9, 24404 <rpl_regexec@@Base+0x2398>
   24400:	ldrb	w8, [x9, w8, uxtw]
   24404:	ldrb	w8, [x21, w8, uxtw]
   24408:	mov	x26, x27
   2440c:	cbnz	w8, 2266c <rpl_regexec@@Base+0x600>
   24410:	b	2447c <rpl_regexec@@Base+0x2410>
   24414:	mov	w25, w0
   24418:	mov	x28, xzr
   2441c:	ldr	w19, [sp, #276]
   24420:	mov	x0, x26
   24424:	bl	a970 <free@plt>
   24428:	mov	x0, x28
   2442c:	bl	a970 <free@plt>
   24430:	ldp	x28, x20, [sp, #240]
   24434:	cbz	w25, 24498 <rpl_regexec@@Base+0x242c>
   24438:	ldr	x22, [sp, #280]
   2443c:	cmp	w25, #0x1
   24440:	b.eq	24134 <rpl_regexec@@Base+0x20c8>  // b.none
   24444:	b	2467c <rpl_regexec@@Base+0x2610>
   24448:	mov	w0, w20
   2444c:	mov	x25, x11
   24450:	bl	ac20 <iswalnum@plt>
   24454:	mov	x11, x25
   24458:	cmp	w20, #0x5f
   2445c:	b.eq	22864 <rpl_regexec@@Base+0x7f8>  // b.none
   24460:	cbz	w0, 227dc <rpl_regexec@@Base+0x770>
   24464:	b	22864 <rpl_regexec@@Base+0x7f8>
   24468:	mov	w2, #0xc                   	// #12
   2446c:	b	23f30 <rpl_regexec@@Base+0x1ec4>
   24470:	ldr	w19, [sp, #276]
   24474:	sxtw	x2, w0
   24478:	b	24244 <rpl_regexec@@Base+0x21d8>
   2447c:	mov	w25, #0x1                   	// #1
   24480:	b	2467c <rpl_regexec@@Base+0x2610>
   24484:	ldr	x0, [sp, #504]
   24488:	bl	a970 <free@plt>
   2448c:	ldr	x8, [sp, #264]
   24490:	str	x20, [sp, #488]
   24494:	stp	x8, x26, [sp, #496]
   24498:	cbz	x22, 24678 <rpl_regexec@@Base+0x260c>
   2449c:	ldp	x21, x20, [sp, #168]
   244a0:	cmp	x22, #0x1
   244a4:	b.eq	244c4 <rpl_regexec@@Base+0x2458>  // b.none
   244a8:	ldr	x9, [sp, #160]
   244ac:	mvn	x8, x21
   244b0:	add	x0, x20, #0x10
   244b4:	mov	w1, #0xff                  	// #255
   244b8:	add	x8, x8, x9
   244bc:	lsl	x2, x8, #4
   244c0:	bl	a640 <memset@plt>
   244c4:	ldr	x8, [sp, #488]
   244c8:	cmp	x22, #0x2
   244cc:	stp	xzr, x8, [x20]
   244d0:	ldr	x10, [sp, #192]
   244d4:	b.cc	24540 <rpl_regexec@@Base+0x24d4>  // b.lo, b.ul, b.last
   244d8:	ldrb	w8, [x10, #56]
   244dc:	tbnz	w8, #4, 24540 <rpl_regexec@@Base+0x24d4>
   244e0:	ldr	x9, [sp, #304]
   244e4:	ldrb	w8, [x9, #176]
   244e8:	tbnz	w8, #0, 2451c <rpl_regexec@@Base+0x24b0>
   244ec:	mov	w4, wzr
   244f0:	b	24528 <rpl_regexec@@Base+0x24bc>
   244f4:	ldr	x8, [x8, #16]
   244f8:	cbz	x8, 24504 <rpl_regexec@@Base+0x2498>
   244fc:	ldrsb	w8, [x0, #56]
   24500:	tbnz	w8, #31, 22270 <rpl_regexec@@Base+0x204>
   24504:	mov	x28, xzr
   24508:	cbz	x26, 2472c <rpl_regexec@@Base+0x26c0>
   2450c:	mov	x26, x28
   24510:	cbz	x4, 22274 <rpl_regexec@@Base+0x208>
   24514:	mov	w25, #0x1                   	// #1
   24518:	b	246c8 <rpl_regexec@@Base+0x265c>
   2451c:	ldr	x8, [x9, #152]
   24520:	cmp	x8, #0x0
   24524:	cset	w4, gt
   24528:	ldr	x0, [x10]
   2452c:	add	x1, sp, #0x140
   24530:	mov	x2, x22
   24534:	mov	x3, x20
   24538:	bl	2bbe4 <rpl_re_set_registers@@Base+0x6cd0>
   2453c:	cbnz	w0, 24734 <rpl_regexec@@Base+0x26c8>
   24540:	ldrb	w9, [sp, #460]
   24544:	ldur	x8, [x29, #-112]
   24548:	cbnz	w9, 24760 <rpl_regexec@@Base+0x26f4>
   2454c:	cmp	x22, #0x1
   24550:	csinc	x10, x22, xzr, hi  // hi = pmore
   24554:	cmp	x10, #0x3
   24558:	b.cs	24568 <rpl_regexec@@Base+0x24fc>  // b.hs, b.nlast
   2455c:	ldr	x19, [sp, #304]
   24560:	mov	x9, xzr
   24564:	b	246ec <rpl_regexec@@Base+0x2680>
   24568:	ldr	x19, [sp, #304]
   2456c:	and	x9, x10, #0xfffffffffffffffe
   24570:	add	x11, x20, #0x10
   24574:	mov	x12, x9
   24578:	b	24588 <rpl_regexec@@Base+0x251c>
   2457c:	subs	x12, x12, #0x2
   24580:	add	x11, x11, #0x20
   24584:	b.eq	245ec <rpl_regexec@@Base+0x2580>  // b.none
   24588:	ldur	x14, [x11, #-16]
   2458c:	ldr	x13, [x11]
   24590:	cmn	x14, #0x1
   24594:	b.eq	245a0 <rpl_regexec@@Base+0x2534>  // b.none
   24598:	add	x15, x14, x8
   2459c:	stur	x15, [x11, #-16]
   245a0:	cmn	x13, #0x1
   245a4:	b.eq	245b0 <rpl_regexec@@Base+0x2544>  // b.none
   245a8:	add	x15, x13, x8
   245ac:	str	x15, [x11]
   245b0:	cmn	x14, #0x1
   245b4:	b.eq	245bc <rpl_regexec@@Base+0x2550>  // b.none
   245b8:	ldur	x15, [x11, #-8]
   245bc:	cmn	x13, #0x1
   245c0:	b.eq	245c8 <rpl_regexec@@Base+0x255c>  // b.none
   245c4:	ldr	x16, [x11, #8]
   245c8:	cmn	x14, #0x1
   245cc:	b.eq	245d8 <rpl_regexec@@Base+0x256c>  // b.none
   245d0:	add	x14, x15, x8
   245d4:	stur	x14, [x11, #-8]
   245d8:	cmn	x13, #0x1
   245dc:	b.eq	2457c <rpl_regexec@@Base+0x2510>  // b.none
   245e0:	add	x13, x16, x8
   245e4:	str	x13, [x11, #8]
   245e8:	b	2457c <rpl_regexec@@Base+0x2510>
   245ec:	cmp	x10, x9
   245f0:	b.ne	246ec <rpl_regexec@@Base+0x2680>  // b.any
   245f4:	cmp	x21, #0x1
   245f8:	b.lt	2460c <rpl_regexec@@Base+0x25a0>  // b.tstop
   245fc:	add	x0, x20, x22, lsl #4
   24600:	lsl	x2, x21, #4
   24604:	mov	w1, #0xff                  	// #255
   24608:	bl	a640 <memset@plt>
   2460c:	ldr	x8, [x19, #224]
   24610:	mov	w25, wzr
   24614:	cbz	x8, 2467c <rpl_regexec@@Base+0x2610>
   24618:	cmp	x22, #0x2
   2461c:	b.cc	2467c <rpl_regexec@@Base+0x2610>  // b.lo, b.ul, b.last
   24620:	ldr	x11, [sp, #160]
   24624:	ldr	x13, [sp, #176]
   24628:	mvn	x10, x21
   2462c:	mov	x9, xzr
   24630:	add	x10, x10, x11
   24634:	add	x11, x13, #0x18
   24638:	b	2464c <rpl_regexec@@Base+0x25e0>
   2463c:	add	x9, x9, #0x1
   24640:	cmp	x10, x9
   24644:	add	x11, x11, #0x10
   24648:	b.eq	24678 <rpl_regexec@@Base+0x260c>  // b.none
   2464c:	ldr	x12, [x8, x9, lsl #3]
   24650:	cmp	x9, x12
   24654:	b.eq	2463c <rpl_regexec@@Base+0x25d0>  // b.none
   24658:	add	x12, x13, x12, lsl #4
   2465c:	ldr	x12, [x12, #16]
   24660:	stur	x12, [x11, #-8]
   24664:	ldr	x12, [x8, x9, lsl #3]
   24668:	add	x12, x13, x12, lsl #4
   2466c:	ldr	x12, [x12, #24]
   24670:	str	x12, [x11]
   24674:	b	2463c <rpl_regexec@@Base+0x25d0>
   24678:	mov	w25, wzr
   2467c:	ldr	x0, [sp, #504]
   24680:	bl	a970 <free@plt>
   24684:	ldr	x8, [sp, #304]
   24688:	ldr	x8, [x8, #152]
   2468c:	cbz	x8, 246a8 <rpl_regexec@@Base+0x263c>
   24690:	add	x0, sp, #0x140
   24694:	bl	2bb20 <rpl_re_set_registers@@Base+0x6c0c>
   24698:	ldr	x0, [sp, #568]
   2469c:	bl	a970 <free@plt>
   246a0:	ldr	x0, [sp, #536]
   246a4:	bl	a970 <free@plt>
   246a8:	ldr	x0, [sp, #336]
   246ac:	bl	a970 <free@plt>
   246b0:	ldr	x0, [sp, #344]
   246b4:	bl	a970 <free@plt>
   246b8:	ldrb	w8, [sp, #459]
   246bc:	cbz	w8, 246c8 <rpl_regexec@@Base+0x265c>
   246c0:	ldr	x0, [sp, #328]
   246c4:	bl	a970 <free@plt>
   246c8:	mov	w0, w25
   246cc:	add	sp, sp, #0x2b0
   246d0:	ldp	x20, x19, [sp, #80]
   246d4:	ldp	x22, x21, [sp, #64]
   246d8:	ldp	x24, x23, [sp, #48]
   246dc:	ldp	x26, x25, [sp, #32]
   246e0:	ldp	x28, x27, [sp, #16]
   246e4:	ldp	x29, x30, [sp], #96
   246e8:	ret
   246ec:	add	x10, x20, x9, lsl #4
   246f0:	add	x10, x10, #0x8
   246f4:	b	24708 <rpl_regexec@@Base+0x269c>
   246f8:	add	x9, x9, #0x1
   246fc:	cmp	x9, x22
   24700:	add	x10, x10, #0x10
   24704:	b.cs	245f4 <rpl_regexec@@Base+0x2588>  // b.hs, b.nlast
   24708:	ldur	x11, [x10, #-8]
   2470c:	cmn	x11, #0x1
   24710:	b.eq	246f8 <rpl_regexec@@Base+0x268c>  // b.none
   24714:	ldr	x12, [x10]
   24718:	add	x11, x11, x8
   2471c:	stur	x11, [x10, #-8]
   24720:	add	x11, x12, x8
   24724:	str	x11, [x10]
   24728:	b	246f8 <rpl_regexec@@Base+0x268c>
   2472c:	mov	x26, x28
   24730:	b	22274 <rpl_regexec@@Base+0x208>
   24734:	mov	w25, w0
   24738:	b	2467c <rpl_regexec@@Base+0x2610>
   2473c:	ldur	w8, [x29, #-100]
   24740:	cmp	w8, #0xc
   24744:	b.ne	247f8 <rpl_regexec@@Base+0x278c>  // b.any
   24748:	mov	w25, #0xc                   	// #12
   2474c:	b	2467c <rpl_regexec@@Base+0x2610>
   24750:	mov	x0, x26
   24754:	bl	a970 <free@plt>
   24758:	mov	w25, #0xc                   	// #12
   2475c:	b	2467c <rpl_regexec@@Base+0x2610>
   24760:	ldr	x10, [sp, #368]
   24764:	ldr	x11, [sp, #344]
   24768:	ldr	x19, [sp, #304]
   2476c:	ldr	x16, [sp, #152]
   24770:	mov	x9, xzr
   24774:	mov	x12, x20
   24778:	b	2478c <rpl_regexec@@Base+0x2720>
   2477c:	add	x9, x9, #0x1
   24780:	cmp	x9, x22
   24784:	add	x12, x12, #0x10
   24788:	b.cs	245f4 <rpl_regexec@@Base+0x2588>  // b.hs, b.nlast
   2478c:	ldr	x13, [x12]
   24790:	cmn	x13, #0x1
   24794:	b.eq	2477c <rpl_regexec@@Base+0x2710>  // b.none
   24798:	add	x14, x11, x13, lsl #3
   2479c:	cmp	x13, x10
   247a0:	ldr	x15, [x12, #8]
   247a4:	csel	x13, x16, x14, eq  // eq = none
   247a8:	ldr	x13, [x13]
   247ac:	add	x14, x11, x15, lsl #3
   247b0:	cmp	x15, x10
   247b4:	csel	x14, x16, x14, eq  // eq = none
   247b8:	str	x13, [x12]
   247bc:	ldr	x14, [x14]
   247c0:	add	x13, x13, x8
   247c4:	add	x14, x14, x8
   247c8:	stp	x13, x14, [x12]
   247cc:	b	2477c <rpl_regexec@@Base+0x2710>
   247d0:	cmp	w0, #0xc
   247d4:	b.eq	24748 <rpl_regexec@@Base+0x26dc>  // b.none
   247d8:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   247dc:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   247e0:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   247e4:	add	x0, x0, #0x748
   247e8:	add	x1, x1, #0x645
   247ec:	add	x3, x3, #0x75a
   247f0:	mov	w2, #0x46c                 	// #1132
   247f4:	bl	ad80 <__assert_fail@plt>
   247f8:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   247fc:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   24800:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   24804:	add	x0, x0, #0x748
   24808:	add	x1, x1, #0x645
   2480c:	add	x3, x3, #0x75a
   24810:	mov	w2, #0x435                 	// #1077
   24814:	bl	ad80 <__assert_fail@plt>

0000000000024818 <rpl_re_match@@Base>:
   24818:	mov	x6, x4
   2481c:	mov	w7, #0x1                   	// #1
   24820:	mov	x4, xzr
   24824:	mov	x5, x2
   24828:	b	2482c <rpl_re_match@@Base+0x14>
   2482c:	sub	sp, sp, #0x80
   24830:	cmp	x3, x2
   24834:	cset	w8, gt
   24838:	orr	x8, x8, x3, lsr #63
   2483c:	stp	x29, x30, [sp, #32]
   24840:	stp	x28, x27, [sp, #48]
   24844:	stp	x26, x25, [sp, #64]
   24848:	stp	x24, x23, [sp, #80]
   2484c:	stp	x22, x21, [sp, #96]
   24850:	stp	x20, x19, [sp, #112]
   24854:	add	x29, sp, #0x20
   24858:	cbnz	x8, 24c28 <rpl_re_match@@Base+0x410>
   2485c:	add	x8, x4, x3
   24860:	stur	w7, [x29, #-12]
   24864:	adrp	x10, 45000 <vasnprintf@@Base+0x14474>
   24868:	bic	x9, x8, x8, asr #63
   2486c:	cmp	x8, x2
   24870:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   24874:	ldr	x22, [x0]
   24878:	ldr	x10, [x10, #3944]
   2487c:	ldr	x8, [x8, #4040]
   24880:	mov	x20, x6
   24884:	mov	x24, x5
   24888:	mov	x19, x3
   2488c:	mov	x25, x2
   24890:	mov	x26, x1
   24894:	mov	x21, x0
   24898:	orr	x8, x8, x10
   2489c:	csel	x27, x2, x9, gt
   248a0:	cbz	x8, 248ac <rpl_re_match@@Base+0x94>
   248a4:	add	x0, x22, #0xe8
   248a8:	bl	ade0 <pthread_mutex_lock@plt>
   248ac:	ldrb	w28, [x21, #56]
   248b0:	cmp	x27, x19
   248b4:	stur	x22, [x29, #-8]
   248b8:	b.le	24970 <rpl_re_match@@Base+0x158>
   248bc:	tbnz	w28, #3, 24ab8 <rpl_re_match@@Base+0x2a0>
   248c0:	ldr	x23, [x21, #32]
   248c4:	mov	w8, w28
   248c8:	cbz	x23, 24974 <rpl_re_match@@Base+0x15c>
   248cc:	ldr	x22, [x21]
   248d0:	movi	v0.2d, #0x0
   248d4:	stp	q0, q0, [x23, #224]
   248d8:	stp	q0, q0, [x23, #192]
   248dc:	stp	q0, q0, [x23, #160]
   248e0:	stp	q0, q0, [x23, #128]
   248e4:	stp	q0, q0, [x23, #96]
   248e8:	stp	q0, q0, [x23, #64]
   248ec:	stp	q0, q0, [x23, #32]
   248f0:	stp	q0, q0, [x23]
   248f4:	ldr	x1, [x22, #72]
   248f8:	mov	x0, x21
   248fc:	mov	x2, x23
   24900:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   24904:	ldp	x8, x1, [x22, #72]
   24908:	cmp	x8, x1
   2490c:	b.eq	24920 <rpl_re_match@@Base+0x108>  // b.none
   24910:	mov	x0, x21
   24914:	mov	x2, x23
   24918:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   2491c:	ldr	x8, [x22, #72]
   24920:	ldr	x1, [x22, #88]
   24924:	cmp	x8, x1
   24928:	b.eq	2493c <rpl_re_match@@Base+0x124>  // b.none
   2492c:	mov	x0, x21
   24930:	mov	x2, x23
   24934:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   24938:	ldr	x8, [x22, #72]
   2493c:	ldr	x1, [x22, #96]
   24940:	cmp	x8, x1
   24944:	b.eq	24954 <rpl_re_match@@Base+0x13c>  // b.none
   24948:	mov	x0, x21
   2494c:	mov	x2, x23
   24950:	bl	214e4 <rpl_re_compile_fastmap@@Base+0xbc>
   24954:	ldrb	w8, [x21, #56]
   24958:	orr	w8, w8, #0x8
   2495c:	strb	w8, [x21, #56]
   24960:	mov	x22, xzr
   24964:	mov	w23, #0x1                   	// #1
   24968:	cbnz	x20, 24980 <rpl_re_match@@Base+0x168>
   2496c:	b	249bc <rpl_re_match@@Base+0x1a4>
   24970:	mov	w8, w28
   24974:	mov	x22, xzr
   24978:	mov	w23, #0x1                   	// #1
   2497c:	cbz	x20, 249bc <rpl_re_match@@Base+0x1a4>
   24980:	tbnz	w8, #4, 249bc <rpl_re_match@@Base+0x1a4>
   24984:	and	w8, w8, #0x6
   24988:	cmp	w8, #0x4
   2498c:	b.ne	249b0 <rpl_re_match@@Base+0x198>  // b.any
   24990:	ldr	x8, [x20]
   24994:	ldr	x9, [x21, #48]
   24998:	cmp	x8, x9
   2499c:	b.hi	249b4 <rpl_re_match@@Base+0x19c>  // b.pmore
   249a0:	cmp	x8, #0x1
   249a4:	csel	x22, xzr, x20, lt  // lt = tstop
   249a8:	csinc	x23, x8, xzr, ge  // ge = tcont
   249ac:	b	249bc <rpl_re_match@@Base+0x1a4>
   249b0:	ldr	x9, [x21, #48]
   249b4:	add	x23, x9, #0x1
   249b8:	mov	x22, x20
   249bc:	lsl	x0, x23, #4
   249c0:	bl	a550 <malloc@plt>
   249c4:	cbz	x0, 24c30 <rpl_re_match@@Base+0x418>
   249c8:	mov	x20, x0
   249cc:	ubfx	w8, w28, #5, #2
   249d0:	mov	x0, x21
   249d4:	mov	x1, x26
   249d8:	mov	x2, x25
   249dc:	mov	x3, x19
   249e0:	mov	x4, x27
   249e4:	mov	x5, x24
   249e8:	mov	x6, x23
   249ec:	mov	x7, x20
   249f0:	str	w8, [sp]
   249f4:	bl	22194 <rpl_regexec@@Base+0x128>
   249f8:	cbz	w0, 24a58 <rpl_re_match@@Base+0x240>
   249fc:	ldur	x22, [x29, #-8]
   24a00:	cmp	w0, #0x1
   24a04:	mov	x8, #0xfffffffffffffffe    	// #-2
   24a08:	cinc	x21, x8, eq  // eq = none
   24a0c:	mov	x0, x20
   24a10:	bl	a970 <free@plt>
   24a14:	adrp	x8, 45000 <vasnprintf@@Base+0x14474>
   24a18:	adrp	x9, 45000 <vasnprintf@@Base+0x14474>
   24a1c:	ldr	x8, [x8, #3944]
   24a20:	ldr	x9, [x9, #4040]
   24a24:	orr	x8, x9, x8
   24a28:	cbz	x8, 24a34 <rpl_re_match@@Base+0x21c>
   24a2c:	add	x0, x22, #0xe8
   24a30:	bl	ae20 <pthread_mutex_unlock@plt>
   24a34:	mov	x0, x21
   24a38:	ldp	x20, x19, [sp, #112]
   24a3c:	ldp	x22, x21, [sp, #96]
   24a40:	ldp	x24, x23, [sp, #80]
   24a44:	ldp	x26, x25, [sp, #64]
   24a48:	ldp	x28, x27, [sp, #48]
   24a4c:	ldp	x29, x30, [sp, #32]
   24a50:	add	sp, sp, #0x80
   24a54:	ret
   24a58:	cbz	x22, 24bb0 <rpl_re_match@@Base+0x398>
   24a5c:	ldrb	w8, [x21, #56]
   24a60:	ubfx	w8, w8, #1, #2
   24a64:	cmp	w8, #0x2
   24a68:	b.eq	24af8 <rpl_re_match@@Base+0x2e0>  // b.none
   24a6c:	cmp	w8, #0x1
   24a70:	add	x26, x23, #0x1
   24a74:	b.eq	24acc <rpl_re_match@@Base+0x2b4>  // b.none
   24a78:	cbnz	w8, 24c7c <rpl_re_match@@Base+0x464>
   24a7c:	lsl	x25, x26, #3
   24a80:	mov	x0, x25
   24a84:	bl	a550 <malloc@plt>
   24a88:	str	x0, [x22, #8]
   24a8c:	cbz	x0, 24c74 <rpl_re_match@@Base+0x45c>
   24a90:	mov	x24, x0
   24a94:	mov	x0, x25
   24a98:	bl	a550 <malloc@plt>
   24a9c:	str	x0, [x22, #16]
   24aa0:	cbz	x0, 24c6c <rpl_re_match@@Base+0x454>
   24aa4:	str	x26, [x22]
   24aa8:	mov	w8, #0x1                   	// #1
   24aac:	cmp	x23, #0x1
   24ab0:	b.ge	24b10 <rpl_re_match@@Base+0x2f8>  // b.tcont
   24ab4:	b	24ae8 <rpl_re_match@@Base+0x2d0>
   24ab8:	mov	w8, w28
   24abc:	mov	x22, xzr
   24ac0:	mov	w23, #0x1                   	// #1
   24ac4:	cbnz	x20, 24980 <rpl_re_match@@Base+0x168>
   24ac8:	b	249bc <rpl_re_match@@Base+0x1a4>
   24acc:	ldr	x9, [x22]
   24ad0:	cmp	x26, x9
   24ad4:	b.hi	24c3c <rpl_re_match@@Base+0x424>  // b.pmore
   24ad8:	mov	w8, #0x1                   	// #1
   24adc:	mov	x26, x9
   24ae0:	cmp	x23, #0x1
   24ae4:	b.ge	24b10 <rpl_re_match@@Base+0x2f8>  // b.tcont
   24ae8:	mov	x23, xzr
   24aec:	cmp	x23, x26
   24af0:	b.cc	24b78 <rpl_re_match@@Base+0x360>  // b.lo, b.ul, b.last
   24af4:	b	24b9c <rpl_re_match@@Base+0x384>
   24af8:	ldr	x26, [x22]
   24afc:	cmp	x26, x23
   24b00:	b.cc	24cbc <rpl_re_match@@Base+0x4a4>  // b.lo, b.ul, b.last
   24b04:	mov	w8, #0x2                   	// #2
   24b08:	cmp	x23, #0x1
   24b0c:	b.lt	24ae8 <rpl_re_match@@Base+0x2d0>  // b.tstop
   24b10:	ldp	x9, x10, [x22, #8]
   24b14:	cmp	x23, #0x3
   24b18:	b.ls	24b38 <rpl_re_match@@Base+0x320>  // b.plast
   24b1c:	lsl	x11, x23, #3
   24b20:	add	x12, x10, x11
   24b24:	cmp	x9, x12
   24b28:	b.cs	24be0 <rpl_re_match@@Base+0x3c8>  // b.hs, b.nlast
   24b2c:	add	x11, x9, x11
   24b30:	cmp	x10, x11
   24b34:	b.cs	24be0 <rpl_re_match@@Base+0x3c8>  // b.hs, b.nlast
   24b38:	mov	x11, xzr
   24b3c:	sub	x12, x23, x11
   24b40:	lsl	x13, x11, #3
   24b44:	add	x11, x20, x11, lsl #4
   24b48:	add	x10, x10, x13
   24b4c:	add	x11, x11, #0x8
   24b50:	add	x9, x9, x13
   24b54:	ldur	x13, [x11, #-8]
   24b58:	subs	x12, x12, #0x1
   24b5c:	str	x13, [x9], #8
   24b60:	ldr	x13, [x11], #16
   24b64:	str	x13, [x10], #8
   24b68:	b.ne	24b54 <rpl_re_match@@Base+0x33c>  // b.any
   24b6c:	ldr	x26, [x22]
   24b70:	cmp	x23, x26
   24b74:	b.cs	24b9c <rpl_re_match@@Base+0x384>  // b.hs, b.nlast
   24b78:	ldp	x10, x9, [x22, #8]
   24b7c:	mov	x11, #0xffffffffffffffff    	// #-1
   24b80:	lsl	x12, x23, #3
   24b84:	str	x11, [x9, x12]
   24b88:	str	x11, [x10, x12]
   24b8c:	ldr	x12, [x22]
   24b90:	add	x23, x23, #0x1
   24b94:	cmp	x23, x12
   24b98:	b.cc	24b80 <rpl_re_match@@Base+0x368>  // b.lo, b.ul, b.last
   24b9c:	ldrb	w9, [x21, #56]
   24ba0:	and	w9, w9, #0xfffffff9
   24ba4:	orr	w9, w9, w8, lsl #1
   24ba8:	strb	w9, [x21, #56]
   24bac:	cbz	w8, 24bd4 <rpl_re_match@@Base+0x3bc>
   24bb0:	ldr	x21, [x20]
   24bb4:	ldur	x22, [x29, #-8]
   24bb8:	ldur	w8, [x29, #-12]
   24bbc:	tbz	w8, #0, 24a0c <rpl_re_match@@Base+0x1f4>
   24bc0:	cmp	x21, x19
   24bc4:	b.ne	24c9c <rpl_re_match@@Base+0x484>  // b.any
   24bc8:	ldr	x8, [x20, #8]
   24bcc:	sub	x21, x8, x19
   24bd0:	b	24a0c <rpl_re_match@@Base+0x1f4>
   24bd4:	ldur	x22, [x29, #-8]
   24bd8:	mov	x21, #0xfffffffffffffffe    	// #-2
   24bdc:	b	24a0c <rpl_re_match@@Base+0x1f4>
   24be0:	and	x11, x23, #0xfffffffffffffffc
   24be4:	add	x12, x20, #0x20
   24be8:	add	x13, x9, #0x10
   24bec:	add	x14, x10, #0x10
   24bf0:	mov	x15, x11
   24bf4:	sub	x16, x12, #0x20
   24bf8:	ld2	{v0.2d, v1.2d}, [x12]
   24bfc:	ld2	{v2.2d, v3.2d}, [x16]
   24c00:	add	x12, x12, #0x40
   24c04:	subs	x15, x15, #0x4
   24c08:	stp	q2, q0, [x13, #-16]
   24c0c:	stp	q3, q1, [x14, #-16]
   24c10:	add	x13, x13, #0x20
   24c14:	add	x14, x14, #0x20
   24c18:	b.ne	24bf4 <rpl_re_match@@Base+0x3dc>  // b.any
   24c1c:	cmp	x23, x11
   24c20:	b.ne	24b3c <rpl_re_match@@Base+0x324>  // b.any
   24c24:	b	24b6c <rpl_re_match@@Base+0x354>
   24c28:	mov	x21, #0xffffffffffffffff    	// #-1
   24c2c:	b	24a34 <rpl_re_match@@Base+0x21c>
   24c30:	ldur	x22, [x29, #-8]
   24c34:	mov	x21, #0xfffffffffffffffe    	// #-2
   24c38:	b	24a14 <rpl_re_match@@Base+0x1fc>
   24c3c:	ldr	x0, [x22, #8]
   24c40:	lsl	x25, x26, #3
   24c44:	mov	x1, x25
   24c48:	bl	a730 <realloc@plt>
   24c4c:	cbz	x0, 24c74 <rpl_re_match@@Base+0x45c>
   24c50:	mov	x24, x0
   24c54:	ldr	x0, [x22, #16]
   24c58:	mov	x1, x25
   24c5c:	bl	a730 <realloc@plt>
   24c60:	cbz	x0, 24c6c <rpl_re_match@@Base+0x454>
   24c64:	stp	x24, x0, [x22, #8]
   24c68:	b	24aa4 <rpl_re_match@@Base+0x28c>
   24c6c:	mov	x0, x24
   24c70:	bl	a970 <free@plt>
   24c74:	mov	w8, wzr
   24c78:	b	24b9c <rpl_re_match@@Base+0x384>
   24c7c:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   24c80:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   24c84:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   24c88:	add	x0, x0, #0x6ca
   24c8c:	add	x1, x1, #0x645
   24c90:	add	x3, x3, #0x6e7
   24c94:	mov	w2, #0x1f9                 	// #505
   24c98:	bl	ad80 <__assert_fail@plt>
   24c9c:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   24ca0:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   24ca4:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   24ca8:	add	x0, x0, #0x62c
   24cac:	add	x1, x1, #0x645
   24cb0:	add	x3, x3, #0x651
   24cb4:	mov	w2, #0x1be                 	// #446
   24cb8:	bl	ad80 <__assert_fail@plt>
   24cbc:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   24cc0:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   24cc4:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   24cc8:	add	x0, x0, #0x730
   24ccc:	add	x1, x1, #0x645
   24cd0:	add	x3, x3, #0x6e7
   24cd4:	mov	w2, #0x1fb                 	// #507
   24cd8:	bl	ad80 <__assert_fail@plt>

0000000000024cdc <rpl_re_search@@Base>:
   24cdc:	mov	x6, x5
   24ce0:	mov	x5, x2
   24ce4:	mov	w7, wzr
   24ce8:	b	2482c <rpl_re_match@@Base+0x14>

0000000000024cec <rpl_re_match_2@@Base>:
   24cec:	stp	x29, x30, [sp, #-96]!
   24cf0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   24cf4:	sub	x9, x9, x4
   24cf8:	orr	x8, x4, x2
   24cfc:	cmp	x9, x2
   24d00:	orr	x8, x8, x7
   24d04:	cset	w9, lt  // lt = tstop
   24d08:	orr	x8, x9, x8, lsr #63
   24d0c:	stp	x28, x27, [sp, #16]
   24d10:	stp	x26, x25, [sp, #32]
   24d14:	stp	x24, x23, [sp, #48]
   24d18:	stp	x22, x21, [sp, #64]
   24d1c:	stp	x20, x19, [sp, #80]
   24d20:	mov	x29, sp
   24d24:	cbnz	x8, 24df0 <rpl_re_match_2@@Base+0x104>
   24d28:	mov	x19, x7
   24d2c:	mov	x20, x6
   24d30:	mov	x21, x5
   24d34:	mov	x27, x4
   24d38:	mov	x28, x2
   24d3c:	mov	x23, x1
   24d40:	mov	x22, x0
   24d44:	cmp	x4, #0x1
   24d48:	add	x24, x4, x2
   24d4c:	b.lt	24d90 <rpl_re_match_2@@Base+0xa4>  // b.tstop
   24d50:	mov	x26, x3
   24d54:	cmp	x28, #0x1
   24d58:	b.lt	24d98 <rpl_re_match_2@@Base+0xac>  // b.tstop
   24d5c:	mov	x0, x24
   24d60:	bl	a550 <malloc@plt>
   24d64:	cbz	x0, 24df0 <rpl_re_match_2@@Base+0x104>
   24d68:	mov	x1, x23
   24d6c:	mov	x2, x28
   24d70:	mov	x25, x0
   24d74:	bl	a210 <memcpy@plt>
   24d78:	add	x0, x25, x28
   24d7c:	mov	x1, x26
   24d80:	mov	x2, x27
   24d84:	bl	a210 <memcpy@plt>
   24d88:	mov	x23, x25
   24d8c:	b	24da0 <rpl_re_match_2@@Base+0xb4>
   24d90:	mov	x25, xzr
   24d94:	b	24da0 <rpl_re_match_2@@Base+0xb4>
   24d98:	mov	x25, xzr
   24d9c:	mov	x23, x26
   24da0:	mov	w7, #0x1                   	// #1
   24da4:	mov	x0, x22
   24da8:	mov	x1, x23
   24dac:	mov	x2, x24
   24db0:	mov	x3, x21
   24db4:	mov	x4, xzr
   24db8:	mov	x5, x19
   24dbc:	mov	x6, x20
   24dc0:	bl	2482c <rpl_re_match@@Base+0x14>
   24dc4:	mov	x19, x0
   24dc8:	mov	x0, x25
   24dcc:	bl	a970 <free@plt>
   24dd0:	mov	x0, x19
   24dd4:	ldp	x20, x19, [sp, #80]
   24dd8:	ldp	x22, x21, [sp, #64]
   24ddc:	ldp	x24, x23, [sp, #48]
   24de0:	ldp	x26, x25, [sp, #32]
   24de4:	ldp	x28, x27, [sp, #16]
   24de8:	ldp	x29, x30, [sp], #96
   24dec:	ret
   24df0:	mov	x0, #0xfffffffffffffffe    	// #-2
   24df4:	b	24dd4 <rpl_re_match_2@@Base+0xe8>

0000000000024df8 <rpl_re_search_2@@Base>:
   24df8:	sub	sp, sp, #0x70
   24dfc:	stp	x29, x30, [sp, #16]
   24e00:	add	x29, sp, #0x10
   24e04:	stp	x22, x21, [sp, #80]
   24e08:	ldr	x22, [x29, #96]
   24e0c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   24e10:	sub	x9, x9, x4
   24e14:	orr	x8, x4, x2
   24e18:	cmp	x9, x2
   24e1c:	orr	x8, x8, x22
   24e20:	cset	w9, lt  // lt = tstop
   24e24:	orr	x8, x9, x8, lsr #63
   24e28:	stp	x28, x27, [sp, #32]
   24e2c:	stp	x26, x25, [sp, #48]
   24e30:	stp	x24, x23, [sp, #64]
   24e34:	stp	x20, x19, [sp, #96]
   24e38:	cbnz	x8, 24f0c <rpl_re_search_2@@Base+0x114>
   24e3c:	mov	x20, x6
   24e40:	mov	x21, x5
   24e44:	mov	x28, x4
   24e48:	mov	x19, x2
   24e4c:	mov	x24, x1
   24e50:	mov	x23, x0
   24e54:	cmp	x4, #0x1
   24e58:	add	x25, x4, x2
   24e5c:	b.lt	24ea8 <rpl_re_search_2@@Base+0xb0>  // b.tstop
   24e60:	mov	x27, x3
   24e64:	cmp	x19, #0x1
   24e68:	b.lt	24eb0 <rpl_re_search_2@@Base+0xb8>  // b.tstop
   24e6c:	mov	x0, x25
   24e70:	str	x7, [sp, #8]
   24e74:	bl	a550 <malloc@plt>
   24e78:	cbz	x0, 24f0c <rpl_re_search_2@@Base+0x114>
   24e7c:	mov	x1, x24
   24e80:	mov	x2, x19
   24e84:	mov	x26, x0
   24e88:	bl	a210 <memcpy@plt>
   24e8c:	add	x0, x26, x19
   24e90:	mov	x1, x27
   24e94:	mov	x2, x28
   24e98:	bl	a210 <memcpy@plt>
   24e9c:	ldr	x7, [sp, #8]
   24ea0:	mov	x24, x26
   24ea4:	b	24eb8 <rpl_re_search_2@@Base+0xc0>
   24ea8:	mov	x26, xzr
   24eac:	b	24eb8 <rpl_re_search_2@@Base+0xc0>
   24eb0:	mov	x26, xzr
   24eb4:	mov	x24, x27
   24eb8:	mov	x0, x23
   24ebc:	mov	x1, x24
   24ec0:	mov	x2, x25
   24ec4:	mov	x3, x21
   24ec8:	mov	x4, x20
   24ecc:	mov	x5, x22
   24ed0:	mov	x6, x7
   24ed4:	mov	w7, wzr
   24ed8:	bl	2482c <rpl_re_match@@Base+0x14>
   24edc:	mov	x19, x0
   24ee0:	mov	x0, x26
   24ee4:	bl	a970 <free@plt>
   24ee8:	mov	x0, x19
   24eec:	ldp	x20, x19, [sp, #96]
   24ef0:	ldp	x22, x21, [sp, #80]
   24ef4:	ldp	x24, x23, [sp, #64]
   24ef8:	ldp	x26, x25, [sp, #48]
   24efc:	ldp	x28, x27, [sp, #32]
   24f00:	ldp	x29, x30, [sp, #16]
   24f04:	add	sp, sp, #0x70
   24f08:	ret
   24f0c:	mov	x0, #0xfffffffffffffffe    	// #-2
   24f10:	b	24eec <rpl_re_search_2@@Base+0xf4>

0000000000024f14 <rpl_re_set_registers@@Base>:
   24f14:	ldrb	w8, [x0, #56]
   24f18:	cmp	x2, #0x0
   24f1c:	csel	x9, xzr, x4, eq  // eq = none
   24f20:	csel	x10, xzr, x3, eq  // eq = none
   24f24:	and	w8, w8, #0xfffffff9
   24f28:	orr	w11, w8, #0x2
   24f2c:	csel	w8, w8, w11, eq  // eq = none
   24f30:	strb	w8, [x0, #56]
   24f34:	stp	x10, x9, [x1, #8]
   24f38:	str	x2, [x1]
   24f3c:	ret
   24f40:	stp	x29, x30, [sp, #-32]!
   24f44:	str	x19, [sp, #16]
   24f48:	mov	x19, x0
   24f4c:	ldr	x0, [x0, #48]
   24f50:	mov	x29, sp
   24f54:	bl	a970 <free@plt>
   24f58:	ldr	x0, [x19, #72]
   24f5c:	bl	a970 <free@plt>
   24f60:	ldr	x8, [x19, #80]
   24f64:	add	x9, x19, #0x8
   24f68:	cmp	x8, x9
   24f6c:	b.eq	24f80 <rpl_re_set_registers@@Base+0x6c>  // b.none
   24f70:	ldr	x0, [x8, #16]
   24f74:	bl	a970 <free@plt>
   24f78:	ldr	x0, [x19, #80]
   24f7c:	bl	a970 <free@plt>
   24f80:	ldr	x0, [x19, #24]
   24f84:	bl	a970 <free@plt>
   24f88:	ldr	x0, [x19, #96]
   24f8c:	bl	a970 <free@plt>
   24f90:	ldr	x0, [x19, #88]
   24f94:	bl	a970 <free@plt>
   24f98:	mov	x0, x19
   24f9c:	ldr	x19, [sp, #16]
   24fa0:	ldp	x29, x30, [sp], #32
   24fa4:	b	a970 <free@plt>
   24fa8:	sub	sp, sp, #0xb0
   24fac:	stp	x29, x30, [sp, #80]
   24fb0:	stp	x28, x27, [sp, #96]
   24fb4:	stp	x26, x25, [sp, #112]
   24fb8:	stp	x24, x23, [sp, #128]
   24fbc:	stp	x22, x21, [sp, #144]
   24fc0:	stp	x20, x19, [sp, #160]
   24fc4:	ldr	x8, [x0, #64]
   24fc8:	ldr	x9, [x0, #88]
   24fcc:	ldrb	w10, [x0, #138]
   24fd0:	ldr	x25, [x0, #48]
   24fd4:	mov	x19, x0
   24fd8:	cmp	x8, x9
   24fdc:	csel	x26, x9, x8, gt
   24fe0:	add	x29, sp, #0x50
   24fe4:	cbnz	w10, 24ff8 <rpl_re_set_registers@@Base+0xe4>
   24fe8:	ldr	x8, [x19, #120]
   24fec:	cbnz	x8, 24ff8 <rpl_re_set_registers@@Base+0xe4>
   24ff0:	ldrb	w8, [x19, #140]
   24ff4:	cbz	w8, 25000 <rpl_re_set_registers@@Base+0xec>
   24ff8:	ldr	x22, [x19, #56]
   24ffc:	b	251cc <rpl_re_set_registers@@Base+0x2b8>
   25000:	cmp	x26, x25
   25004:	b.le	251ac <rpl_re_set_registers@@Base+0x298>
   25008:	add	x20, x19, #0x20
   2500c:	b	25044 <rpl_re_set_registers@@Base+0x130>
   25010:	and	x21, x23, #0xff
   25014:	bl	a740 <__ctype_toupper_loc@plt>
   25018:	ldr	x8, [x0]
   2501c:	ldr	x9, [x19, #8]
   25020:	add	x27, x25, #0x1
   25024:	ldr	w8, [x8, x21, lsl #2]
   25028:	strb	w8, [x9, x25]
   2502c:	ldp	x8, x9, [x19, #8]
   25030:	ldrb	w8, [x8, x25]
   25034:	str	w8, [x9, x25, lsl #2]
   25038:	cmp	x26, x27
   2503c:	mov	x25, x27
   25040:	b.le	254c8 <rpl_re_set_registers@@Base+0x5b4>
   25044:	ldr	x21, [x19, #40]
   25048:	ldr	x22, [x19]
   2504c:	add	x8, x21, x25
   25050:	ldrsb	w23, [x22, x8]
   25054:	tbnz	w23, #31, 25064 <rpl_re_set_registers@@Base+0x150>
   25058:	mov	x0, x20
   2505c:	bl	a880 <mbsinit@plt>
   25060:	cbnz	w0, 25010 <rpl_re_set_registers@@Base+0xfc>
   25064:	ldr	x8, [x20]
   25068:	add	x9, x22, x21
   2506c:	sub	x2, x26, x25
   25070:	add	x1, x9, x25
   25074:	add	x0, sp, #0x4
   25078:	mov	x3, x20
   2507c:	stur	x8, [x29, #-8]
   25080:	bl	a340 <rpl_mbrtowc@plt>
   25084:	sub	x23, x0, #0x1
   25088:	mov	x21, x0
   2508c:	cmn	x23, #0x4
   25090:	b.hi	2515c <rpl_re_set_registers@@Base+0x248>  // b.pmore
   25094:	ldr	w0, [sp, #4]
   25098:	bl	ad20 <towupper@plt>
   2509c:	ldr	w8, [sp, #4]
   250a0:	mov	w22, w0
   250a4:	cmp	w0, w8
   250a8:	b.ne	250c4 <rpl_re_set_registers@@Base+0x1b0>  // b.any
   250ac:	ldp	x9, x8, [x19]
   250b0:	ldr	x10, [x19, #40]
   250b4:	add	x0, x8, x25
   250b8:	add	x8, x9, x10
   250bc:	add	x1, x8, x25
   250c0:	b	250e8 <rpl_re_set_registers@@Base+0x1d4>
   250c4:	add	x0, sp, #0x8
   250c8:	sub	x2, x29, #0x8
   250cc:	mov	w1, w22
   250d0:	bl	aeb0 <wcrtomb@plt>
   250d4:	cmp	x21, x0
   250d8:	b.ne	251b4 <rpl_re_set_registers@@Base+0x2a0>  // b.any
   250dc:	ldr	x8, [x19, #8]
   250e0:	add	x1, sp, #0x8
   250e4:	add	x0, x8, x25
   250e8:	mov	x2, x21
   250ec:	bl	a210 <memcpy@plt>
   250f0:	ldr	x8, [x19, #16]
   250f4:	add	x24, x21, x25
   250f8:	add	x27, x25, #0x1
   250fc:	cmp	x27, x24
   25100:	str	w22, [x8, x25, lsl #2]
   25104:	b.ge	25038 <rpl_re_set_registers@@Base+0x124>  // b.tcont
   25108:	add	x8, x8, x25, lsl #2
   2510c:	lsl	x9, x21, #2
   25110:	add	x0, x8, #0x4
   25114:	sub	x2, x9, #0x4
   25118:	mov	w1, #0xff                  	// #255
   2511c:	bl	a640 <memset@plt>
   25120:	cmp	x23, #0x2
   25124:	b.cc	25144 <rpl_re_set_registers@@Base+0x230>  // b.lo, b.ul, b.last
   25128:	and	x8, x23, #0xfffffffffffffffe
   2512c:	add	x27, x27, x8
   25130:	mov	x9, x8
   25134:	subs	x9, x9, #0x2
   25138:	b.ne	25134 <rpl_re_set_registers@@Base+0x220>  // b.any
   2513c:	cmp	x23, x8
   25140:	b.eq	25154 <rpl_re_set_registers@@Base+0x240>  // b.none
   25144:	add	x8, x21, x25
   25148:	sub	x8, x8, x27
   2514c:	subs	x8, x8, #0x1
   25150:	b.ne	2514c <rpl_re_set_registers@@Base+0x238>  // b.any
   25154:	mov	x27, x24
   25158:	b	25038 <rpl_re_set_registers@@Base+0x124>
   2515c:	add	x8, x21, #0x1
   25160:	cmp	x8, #0x2
   25164:	b.cc	25178 <rpl_re_set_registers@@Base+0x264>  // b.lo, b.ul, b.last
   25168:	ldr	x8, [x19, #64]
   2516c:	ldr	x9, [x19, #88]
   25170:	cmp	x8, x9
   25174:	b.lt	251bc <rpl_re_set_registers@@Base+0x2a8>  // b.tstop
   25178:	ldr	x8, [x19, #40]
   2517c:	ldp	x9, x10, [x19]
   25180:	add	x27, x25, #0x1
   25184:	cmn	x21, #0x1
   25188:	add	x8, x8, x25
   2518c:	ldrb	w8, [x9, x8]
   25190:	strb	w8, [x10, x25]
   25194:	ldr	x9, [x19, #16]
   25198:	str	w8, [x9, x25, lsl #2]
   2519c:	b.ne	25038 <rpl_re_set_registers@@Base+0x124>  // b.any
   251a0:	ldur	x8, [x29, #-8]
   251a4:	str	x8, [x20]
   251a8:	b	25038 <rpl_re_set_registers@@Base+0x124>
   251ac:	mov	x27, x25
   251b0:	b	254c8 <rpl_re_set_registers@@Base+0x5b4>
   251b4:	mov	x27, x25
   251b8:	b	251dc <rpl_re_set_registers@@Base+0x2c8>
   251bc:	ldur	x8, [x29, #-8]
   251c0:	mov	x27, x25
   251c4:	str	x8, [x20]
   251c8:	b	254c8 <rpl_re_set_registers@@Base+0x5b4>
   251cc:	cmp	x25, x26
   251d0:	mov	x27, x25
   251d4:	mov	x25, x22
   251d8:	b.ge	254c8 <rpl_re_set_registers@@Base+0x5b4>  // b.tcont
   251dc:	mov	x23, x19
   251e0:	ldr	x8, [x23, #32]!
   251e4:	sub	x2, x26, x27
   251e8:	stur	x8, [x29, #-8]
   251ec:	ldr	x8, [x23, #88]
   251f0:	cbnz	x8, 252e8 <rpl_re_set_registers@@Base+0x3d4>
   251f4:	ldr	x8, [x19]
   251f8:	ldr	x9, [x19, #40]
   251fc:	add	x8, x8, x9
   25200:	add	x24, x8, x25
   25204:	mov	x0, sp
   25208:	mov	x1, x24
   2520c:	mov	x3, x23
   25210:	bl	a340 <rpl_mbrtowc@plt>
   25214:	sub	x28, x0, #0x1
   25218:	mov	x20, x0
   2521c:	cmn	x28, #0x4
   25220:	b.hi	2533c <rpl_re_set_registers@@Base+0x428>  // b.pmore
   25224:	ldr	w0, [sp]
   25228:	bl	ad20 <towupper@plt>
   2522c:	ldr	w8, [sp]
   25230:	mov	w21, w0
   25234:	cmp	w0, w8
   25238:	b.ne	25248 <rpl_re_set_registers@@Base+0x334>  // b.any
   2523c:	ldr	x8, [x19, #8]
   25240:	mov	x1, x24
   25244:	b	25268 <rpl_re_set_registers@@Base+0x354>
   25248:	add	x0, sp, #0x8
   2524c:	sub	x2, x29, #0x8
   25250:	mov	w1, w21
   25254:	bl	aeb0 <wcrtomb@plt>
   25258:	subs	x9, x0, x20
   2525c:	b.ne	253a4 <rpl_re_set_registers@@Base+0x490>  // b.any
   25260:	ldr	x8, [x19, #8]
   25264:	add	x1, sp, #0x8
   25268:	add	x0, x8, x27
   2526c:	mov	x2, x20
   25270:	bl	a210 <memcpy@plt>
   25274:	ldrb	w8, [x19, #140]
   25278:	cbnz	w8, 253f8 <rpl_re_set_registers@@Base+0x4e4>
   2527c:	ldr	x8, [x19, #16]
   25280:	add	x22, x20, x25
   25284:	add	x23, x20, x27
   25288:	add	x25, x27, #0x1
   2528c:	cmp	x25, x23
   25290:	str	w21, [x8, x27, lsl #2]
   25294:	b.ge	251cc <rpl_re_set_registers@@Base+0x2b8>  // b.tcont
   25298:	add	x0, x8, x25, lsl #2
   2529c:	lsl	x8, x20, #2
   252a0:	sub	x2, x8, #0x4
   252a4:	mov	w1, #0xff                  	// #255
   252a8:	bl	a640 <memset@plt>
   252ac:	cmp	x28, #0x2
   252b0:	b.cc	252d0 <rpl_re_set_registers@@Base+0x3bc>  // b.lo, b.ul, b.last
   252b4:	and	x8, x28, #0xfffffffffffffffe
   252b8:	add	x25, x25, x8
   252bc:	mov	x9, x8
   252c0:	subs	x9, x9, #0x2
   252c4:	b.ne	252c0 <rpl_re_set_registers@@Base+0x3ac>  // b.any
   252c8:	cmp	x28, x8
   252cc:	b.eq	252e0 <rpl_re_set_registers@@Base+0x3cc>  // b.none
   252d0:	add	x8, x20, x27
   252d4:	sub	x8, x8, x25
   252d8:	subs	x8, x8, #0x1
   252dc:	b.ne	252d8 <rpl_re_set_registers@@Base+0x3c4>  // b.any
   252e0:	mov	x25, x23
   252e4:	b	251cc <rpl_re_set_registers@@Base+0x2b8>
   252e8:	ldr	w9, [x19, #144]
   252ec:	add	x24, sp, #0x8
   252f0:	cmp	w9, #0x1
   252f4:	b.lt	25204 <rpl_re_set_registers@@Base+0x2f0>  // b.tstop
   252f8:	cmp	x2, #0x1
   252fc:	b.lt	25204 <rpl_re_set_registers@@Base+0x2f0>  // b.tstop
   25300:	ldr	x11, [x19, #40]
   25304:	ldr	x12, [x19]
   25308:	mov	x10, xzr
   2530c:	add	x11, x25, x11
   25310:	add	x11, x12, x11
   25314:	ldrb	w12, [x11, x10]
   25318:	add	x24, sp, #0x8
   2531c:	ldrb	w12, [x8, x12]
   25320:	strb	w12, [x24, x10]
   25324:	add	x10, x10, #0x1
   25328:	cmp	x10, x9
   2532c:	b.cs	25204 <rpl_re_set_registers@@Base+0x2f0>  // b.hs, b.nlast
   25330:	cmp	x2, x10
   25334:	b.gt	25314 <rpl_re_set_registers@@Base+0x400>
   25338:	b	25204 <rpl_re_set_registers@@Base+0x2f0>
   2533c:	add	x8, x20, #0x1
   25340:	cmp	x8, #0x2
   25344:	b.cc	25358 <rpl_re_set_registers@@Base+0x444>  // b.lo, b.ul, b.last
   25348:	ldr	x8, [x19, #64]
   2534c:	ldr	x9, [x19, #88]
   25350:	cmp	x8, x9
   25354:	b.lt	254c0 <rpl_re_set_registers@@Base+0x5ac>  // b.tstop
   25358:	ldr	x8, [x19, #40]
   2535c:	ldr	x10, [x19]
   25360:	ldr	x9, [x19, #120]
   25364:	add	x8, x8, x25
   25368:	ldrb	w8, [x10, x8]
   2536c:	cbnz	x9, 254f8 <rpl_re_set_registers@@Base+0x5e4>
   25370:	ldr	x9, [x19, #8]
   25374:	strb	w8, [x9, x27]
   25378:	ldrb	w9, [x19, #140]
   2537c:	cbnz	w9, 2550c <rpl_re_set_registers@@Base+0x5f8>
   25380:	ldr	x9, [x19, #16]
   25384:	add	x22, x25, #0x1
   25388:	add	x25, x27, #0x1
   2538c:	cmn	x20, #0x1
   25390:	str	w8, [x9, x27, lsl #2]
   25394:	b.ne	251cc <rpl_re_set_registers@@Base+0x2b8>  // b.any
   25398:	ldur	x8, [x29, #-8]
   2539c:	str	x8, [x23]
   253a0:	b	251cc <rpl_re_set_registers@@Base+0x2b8>
   253a4:	mov	x22, x0
   253a8:	cmn	x0, #0x1
   253ac:	b.eq	2523c <rpl_re_set_registers@@Base+0x328>  // b.none
   253b0:	ldr	x8, [x19, #64]
   253b4:	add	x24, x22, x27
   253b8:	cmp	x24, x8
   253bc:	b.hi	254c0 <rpl_re_set_registers@@Base+0x5ac>  // b.pmore
   253c0:	ldr	x0, [x19, #24]
   253c4:	mov	x23, x9
   253c8:	cbnz	x0, 253dc <rpl_re_set_registers@@Base+0x4c8>
   253cc:	lsl	x0, x8, #3
   253d0:	bl	a550 <malloc@plt>
   253d4:	str	x0, [x19, #24]
   253d8:	cbz	x0, 254f0 <rpl_re_set_registers@@Base+0x5dc>
   253dc:	ldrb	w8, [x19, #140]
   253e0:	cbnz	w8, 25530 <rpl_re_set_registers@@Base+0x61c>
   253e4:	cbz	x27, 25528 <rpl_re_set_registers@@Base+0x614>
   253e8:	cmp	x27, #0x4
   253ec:	b.cs	25480 <rpl_re_set_registers@@Base+0x56c>  // b.hs, b.nlast
   253f0:	mov	x8, xzr
   253f4:	b	25518 <rpl_re_set_registers@@Base+0x604>
   253f8:	ldr	x8, [x19, #24]
   253fc:	cmp	x20, #0x4
   25400:	b.cs	2540c <rpl_re_set_registers@@Base+0x4f8>  // b.hs, b.nlast
   25404:	mov	x9, xzr
   25408:	b	2545c <rpl_re_set_registers@@Base+0x548>
   2540c:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   25410:	ldr	q1, [x11, #304]
   25414:	mov	w11, #0x2                   	// #2
   25418:	and	x9, x20, #0xfffffffffffffffc
   2541c:	add	x10, x8, x27, lsl #3
   25420:	dup	v2.2d, x11
   25424:	mov	w11, #0x4                   	// #4
   25428:	dup	v0.2d, x25
   2542c:	add	x10, x10, #0x10
   25430:	dup	v3.2d, x11
   25434:	mov	x11, x9
   25438:	add	v4.2d, v1.2d, v0.2d
   2543c:	add	v5.2d, v4.2d, v2.2d
   25440:	add	v1.2d, v1.2d, v3.2d
   25444:	subs	x11, x11, #0x4
   25448:	stp	q4, q5, [x10, #-16]
   2544c:	add	x10, x10, #0x20
   25450:	b.ne	25438 <rpl_re_set_registers@@Base+0x524>  // b.any
   25454:	cmp	x20, x9
   25458:	b.eq	2527c <rpl_re_set_registers@@Base+0x368>  // b.none
   2545c:	sub	x10, x20, x9
   25460:	add	x11, x25, x9
   25464:	add	x9, x27, x9
   25468:	add	x8, x8, x9, lsl #3
   2546c:	str	x11, [x8], #8
   25470:	subs	x10, x10, #0x1
   25474:	add	x11, x11, #0x1
   25478:	b.ne	2546c <rpl_re_set_registers@@Base+0x558>  // b.any
   2547c:	b	2527c <rpl_re_set_registers@@Base+0x368>
   25480:	adrp	x10, 34000 <vasnprintf@@Base+0x3474>
   25484:	ldr	q0, [x10, #304]
   25488:	mov	w10, #0x2                   	// #2
   2548c:	and	x8, x27, #0xfffffffffffffffc
   25490:	dup	v1.2d, x10
   25494:	mov	w10, #0x4                   	// #4
   25498:	add	x9, x0, #0x10
   2549c:	dup	v2.2d, x10
   254a0:	mov	x10, x8
   254a4:	add	v3.2d, v0.2d, v1.2d
   254a8:	stp	q0, q3, [x9, #-16]
   254ac:	add	v0.2d, v0.2d, v2.2d
   254b0:	subs	x10, x10, #0x4
   254b4:	add	x9, x9, #0x20
   254b8:	b.ne	254a4 <rpl_re_set_registers@@Base+0x590>  // b.any
   254bc:	b	25520 <rpl_re_set_registers@@Base+0x60c>
   254c0:	ldur	x8, [x29, #-8]
   254c4:	str	x8, [x23]
   254c8:	mov	w0, wzr
   254cc:	stp	x27, x25, [x19, #48]
   254d0:	ldp	x20, x19, [sp, #160]
   254d4:	ldp	x22, x21, [sp, #144]
   254d8:	ldp	x24, x23, [sp, #128]
   254dc:	ldp	x26, x25, [sp, #112]
   254e0:	ldp	x28, x27, [sp, #96]
   254e4:	ldp	x29, x30, [sp, #80]
   254e8:	add	sp, sp, #0xb0
   254ec:	ret
   254f0:	mov	w0, #0xc                   	// #12
   254f4:	b	254d0 <rpl_re_set_registers@@Base+0x5bc>
   254f8:	ldrb	w8, [x9, x8]
   254fc:	ldr	x9, [x19, #8]
   25500:	strb	w8, [x9, x27]
   25504:	ldrb	w9, [x19, #140]
   25508:	cbz	w9, 25380 <rpl_re_set_registers@@Base+0x46c>
   2550c:	ldr	x9, [x19, #24]
   25510:	str	x25, [x9, x27, lsl #3]
   25514:	b	25380 <rpl_re_set_registers@@Base+0x46c>
   25518:	str	x8, [x0, x8, lsl #3]
   2551c:	add	x8, x8, #0x1
   25520:	cmp	x27, x8
   25524:	b.ne	25518 <rpl_re_set_registers@@Base+0x604>  // b.any
   25528:	mov	w8, #0x1                   	// #1
   2552c:	strb	w8, [x19, #140]
   25530:	ldr	x8, [x19, #8]
   25534:	add	x1, sp, #0x8
   25538:	mov	x2, x22
   2553c:	add	x0, x8, x27
   25540:	bl	a210 <memcpy@plt>
   25544:	ldr	x8, [x19, #16]
   25548:	cmp	x22, #0x2
   2554c:	mov	x16, x23
   25550:	str	w21, [x8, x27, lsl #2]
   25554:	ldr	x9, [x19, #24]
   25558:	str	x25, [x9, x27, lsl #3]
   2555c:	b.cc	25620 <rpl_re_set_registers@@Base+0x70c>  // b.lo, b.ul, b.last
   25560:	sub	x11, x22, #0x1
   25564:	cmp	x11, #0x4
   25568:	b.cs	25574 <rpl_re_set_registers@@Base+0x660>  // b.hs, b.nlast
   2556c:	mov	w10, #0x1                   	// #1
   25570:	b	255f4 <rpl_re_set_registers@@Base+0x6e0>
   25574:	adrp	x13, 34000 <vasnprintf@@Base+0x3474>
   25578:	ldr	q3, [x13, #320]
   2557c:	mov	w15, #0x2                   	// #2
   25580:	and	x12, x11, #0xfffffffffffffffc
   25584:	add	x14, x27, #0x3
   25588:	dup	v4.2d, x15
   2558c:	mov	w15, #0x4                   	// #4
   25590:	dup	v0.2d, x20
   25594:	dup	v1.2d, x28
   25598:	dup	v2.2d, x25
   2559c:	orr	x10, x12, #0x1
   255a0:	add	x13, x8, x14, lsl #2
   255a4:	add	x14, x9, x14, lsl #3
   255a8:	movi	v5.2d, #0xffffffffffffffff
   255ac:	dup	v6.2d, x15
   255b0:	mov	x15, x12
   255b4:	add	v7.2d, v3.2d, v4.2d
   255b8:	cmhi	v16.2d, v0.2d, v3.2d
   255bc:	cmhi	v17.2d, v0.2d, v7.2d
   255c0:	bsl	v16.16b, v3.16b, v1.16b
   255c4:	bsl	v17.16b, v7.16b, v1.16b
   255c8:	add	v7.2d, v16.2d, v2.2d
   255cc:	add	v16.2d, v17.2d, v2.2d
   255d0:	subs	x15, x15, #0x4
   255d4:	add	v3.2d, v3.2d, v6.2d
   255d8:	stp	q7, q16, [x14, #-16]
   255dc:	stp	d5, d5, [x13, #-8]
   255e0:	add	x13, x13, #0x10
   255e4:	add	x14, x14, #0x20
   255e8:	b.ne	255b4 <rpl_re_set_registers@@Base+0x6a0>  // b.any
   255ec:	cmp	x11, x12
   255f0:	b.eq	25620 <rpl_re_set_registers@@Base+0x70c>  // b.none
   255f4:	add	x8, x8, x27, lsl #2
   255f8:	add	x9, x9, x27, lsl #3
   255fc:	mov	w11, #0xffffffff            	// #-1
   25600:	cmp	x10, x20
   25604:	csel	x12, x10, x28, cc  // cc = lo, ul, last
   25608:	add	x12, x12, x25
   2560c:	str	x12, [x9, x10, lsl #3]
   25610:	str	w11, [x8, x10, lsl #2]
   25614:	add	x10, x10, #0x1
   25618:	cmp	x22, x10
   2561c:	b.ne	25600 <rpl_re_set_registers@@Base+0x6ec>  // b.any
   25620:	ldp	x8, x9, [x19, #88]
   25624:	add	x8, x8, x16
   25628:	cmp	x9, x25
   2562c:	str	x8, [x19, #88]
   25630:	b.le	25640 <rpl_re_set_registers@@Base+0x72c>
   25634:	ldr	x9, [x19, #104]
   25638:	add	x9, x9, x16
   2563c:	str	x9, [x19, #104]
   25640:	ldr	x9, [x19, #64]
   25644:	add	x22, x20, x25
   25648:	mov	x25, x24
   2564c:	cmp	x9, x8
   25650:	csel	x26, x8, x9, gt
   25654:	b	251cc <rpl_re_set_registers@@Base+0x2b8>
   25658:	sub	sp, sp, #0x90
   2565c:	stp	x29, x30, [sp, #64]
   25660:	stp	x24, x23, [sp, #96]
   25664:	stp	x22, x21, [sp, #112]
   25668:	stp	x20, x19, [sp, #128]
   2566c:	ldr	x8, [x0, #64]
   25670:	ldr	x9, [x0, #88]
   25674:	ldr	x23, [x0, #48]
   25678:	mov	x19, x0
   2567c:	str	x25, [sp, #80]
   25680:	cmp	x8, x9
   25684:	csel	x22, x9, x8, gt
   25688:	cmp	x22, x23
   2568c:	add	x29, sp, #0x40
   25690:	b.le	2583c <rpl_re_set_registers@@Base+0x928>
   25694:	add	x20, x19, #0x20
   25698:	ldr	x8, [x19, #120]
   2569c:	ldr	x24, [x19, #32]
   256a0:	sub	x2, x22, x23
   256a4:	cbnz	x8, 25794 <rpl_re_set_registers@@Base+0x880>
   256a8:	ldr	x8, [x19]
   256ac:	ldr	x9, [x19, #40]
   256b0:	add	x8, x8, x9
   256b4:	add	x1, x8, x23
   256b8:	add	x0, x29, #0x1c
   256bc:	mov	x3, x20
   256c0:	bl	a340 <rpl_mbrtowc@plt>
   256c4:	add	x8, x0, #0x1
   256c8:	cmp	x8, #0x2
   256cc:	b.cc	256ec <rpl_re_set_registers@@Base+0x7d8>  // b.lo, b.ul, b.last
   256d0:	mov	x21, x0
   256d4:	cmn	x0, #0x2
   256d8:	b.ne	25714 <rpl_re_set_registers@@Base+0x800>  // b.any
   256dc:	ldr	x8, [x19, #64]
   256e0:	ldr	x9, [x19, #88]
   256e4:	cmp	x8, x9
   256e8:	b.lt	25838 <rpl_re_set_registers@@Base+0x924>  // b.tstop
   256ec:	ldr	x8, [x19, #40]
   256f0:	ldr	x9, [x19]
   256f4:	add	x8, x8, x23
   256f8:	ldrb	w8, [x9, x8]
   256fc:	str	w8, [x29, #28]
   25700:	ldr	x9, [x19, #120]
   25704:	cbnz	x9, 2582c <rpl_re_set_registers@@Base+0x918>
   25708:	mov	w21, #0x1                   	// #1
   2570c:	str	x24, [x20]
   25710:	b	25718 <rpl_re_set_registers@@Base+0x804>
   25714:	ldr	w8, [x29, #28]
   25718:	ldr	x9, [x19, #16]
   2571c:	add	x25, x21, x23
   25720:	add	x24, x23, #0x1
   25724:	cmp	x24, x25
   25728:	str	w8, [x9, x23, lsl #2]
   2572c:	b.ge	25784 <rpl_re_set_registers@@Base+0x870>  // b.tcont
   25730:	add	x8, x9, x23, lsl #2
   25734:	lsl	x9, x21, #2
   25738:	add	x0, x8, #0x4
   2573c:	sub	x2, x9, #0x4
   25740:	mov	w1, #0xff                  	// #255
   25744:	bl	a640 <memset@plt>
   25748:	sub	x8, x21, #0x1
   2574c:	cmp	x8, #0x2
   25750:	b.cc	25770 <rpl_re_set_registers@@Base+0x85c>  // b.lo, b.ul, b.last
   25754:	and	x9, x8, #0xfffffffffffffffe
   25758:	add	x24, x24, x9
   2575c:	mov	x10, x9
   25760:	subs	x10, x10, #0x2
   25764:	b.ne	25760 <rpl_re_set_registers@@Base+0x84c>  // b.any
   25768:	cmp	x8, x9
   2576c:	b.eq	25780 <rpl_re_set_registers@@Base+0x86c>  // b.none
   25770:	add	x8, x23, x21
   25774:	sub	x8, x8, x24
   25778:	subs	x8, x8, #0x1
   2577c:	b.ne	25778 <rpl_re_set_registers@@Base+0x864>  // b.any
   25780:	mov	x24, x25
   25784:	cmp	x22, x24
   25788:	mov	x23, x24
   2578c:	b.gt	25698 <rpl_re_set_registers@@Base+0x784>
   25790:	b	25840 <rpl_re_set_registers@@Base+0x92c>
   25794:	ldr	w9, [x19, #144]
   25798:	mov	x1, sp
   2579c:	cmp	w9, #0x1
   257a0:	b.lt	256b8 <rpl_re_set_registers@@Base+0x7a4>  // b.tstop
   257a4:	cmp	x2, #0x1
   257a8:	b.lt	256b8 <rpl_re_set_registers@@Base+0x7a4>  // b.tstop
   257ac:	ldr	x9, [x19, #40]
   257b0:	ldp	x10, x11, [x19]
   257b4:	mov	x1, sp
   257b8:	add	x9, x23, x9
   257bc:	ldrb	w9, [x10, x9]
   257c0:	ldrb	w8, [x8, x9]
   257c4:	strb	w8, [x11, x23]
   257c8:	strb	w8, [sp]
   257cc:	ldr	w8, [x19, #144]
   257d0:	cmp	w8, #0x2
   257d4:	b.lt	256b8 <rpl_re_set_registers@@Base+0x7a4>  // b.tstop
   257d8:	cmp	x2, #0x2
   257dc:	b.lt	256b8 <rpl_re_set_registers@@Base+0x7a4>  // b.tstop
   257e0:	mov	w8, #0x1                   	// #1
   257e4:	ldr	x9, [x19, #40]
   257e8:	ldp	x10, x12, [x19]
   257ec:	ldr	x11, [x19, #120]
   257f0:	mov	x1, sp
   257f4:	add	x9, x10, x9
   257f8:	add	x9, x9, x23
   257fc:	ldrb	w9, [x9, x8]
   25800:	add	x10, x12, x23
   25804:	ldrb	w9, [x11, x9]
   25808:	strb	w9, [x10, x8]
   2580c:	strb	w9, [x1, x8]
   25810:	ldr	w9, [x19, #144]
   25814:	add	x8, x8, #0x1
   25818:	cmp	w9, w8
   2581c:	b.le	256b8 <rpl_re_set_registers@@Base+0x7a4>
   25820:	cmp	x2, x8
   25824:	b.gt	257e4 <rpl_re_set_registers@@Base+0x8d0>
   25828:	b	256b8 <rpl_re_set_registers@@Base+0x7a4>
   2582c:	ldrb	w8, [x9, w8, uxtw]
   25830:	str	w8, [x29, #28]
   25834:	b	25708 <rpl_re_set_registers@@Base+0x7f4>
   25838:	str	x24, [x20]
   2583c:	mov	x24, x23
   25840:	stp	x24, x24, [x19, #48]
   25844:	ldp	x20, x19, [sp, #128]
   25848:	ldp	x22, x21, [sp, #112]
   2584c:	ldp	x24, x23, [sp, #96]
   25850:	ldr	x25, [sp, #80]
   25854:	ldp	x29, x30, [sp, #64]
   25858:	add	sp, sp, #0x90
   2585c:	ret
   25860:	sub	sp, sp, #0x80
   25864:	stp	x29, x30, [sp, #32]
   25868:	stp	x28, x27, [sp, #48]
   2586c:	stp	x26, x25, [sp, #64]
   25870:	stp	x24, x23, [sp, #80]
   25874:	stp	x22, x21, [sp, #96]
   25878:	stp	x20, x19, [sp, #112]
   2587c:	ldr	x28, [x1]
   25880:	add	x29, sp, #0x20
   25884:	mov	x19, x5
   25888:	mov	x22, x2
   2588c:	ldr	x8, [x28, #168]
   25890:	mov	x24, x0
   25894:	stur	x3, [x29, #-8]
   25898:	str	x4, [sp]
   2589c:	stp	x8, x1, [sp, #8]
   258a0:	bl	26130 <rpl_re_set_registers@@Base+0x121c>
   258a4:	mov	x20, x0
   258a8:	cbnz	x0, 258b4 <rpl_re_set_registers@@Base+0x9a0>
   258ac:	ldr	w8, [x19]
   258b0:	cbnz	w8, 25b94 <rpl_re_set_registers@@Base+0xc80>
   258b4:	ldrb	w8, [x22, #8]
   258b8:	cmp	w8, #0xa
   258bc:	b.ne	259dc <rpl_re_set_registers@@Base+0xac8>  // b.any
   258c0:	ldur	x8, [x29, #-8]
   258c4:	orr	x25, x8, #0x800000
   258c8:	ldr	x8, [sp]
   258cc:	cbz	x8, 25a00 <rpl_re_set_registers@@Base+0xaec>
   258d0:	mov	w21, #0xa                   	// #10
   258d4:	mov	x23, #0xffffffffffffffff    	// #-1
   258d8:	b	258ec <rpl_re_set_registers@@Base+0x9d8>
   258dc:	ldrb	w8, [x22, #8]
   258e0:	mov	x20, x0
   258e4:	cmp	w8, #0xa
   258e8:	b.ne	259e0 <rpl_re_set_registers@@Base+0xacc>  // b.any
   258ec:	mov	x0, x22
   258f0:	mov	x1, x24
   258f4:	mov	x2, x25
   258f8:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   258fc:	ldr	x8, [x24, #72]
   25900:	add	x8, x8, w0, sxtw
   25904:	str	x8, [x24, #72]
   25908:	ldrb	w8, [x22, #8]
   2590c:	orr	w9, w8, #0x8
   25910:	cmp	w9, #0xa
   25914:	b.ne	25964 <rpl_re_set_registers@@Base+0xa50>  // b.any
   25918:	mov	x27, xzr
   2591c:	ldr	w8, [x28, #128]
   25920:	cmp	w8, #0xf
   25924:	b.eq	259b8 <rpl_re_set_registers@@Base+0xaa4>  // b.none
   25928:	ldr	x0, [x28, #112]
   2592c:	add	w9, w8, #0x1
   25930:	sxtw	x8, w8
   25934:	add	x0, x0, x8, lsl #6
   25938:	str	w9, [x28, #128]
   2593c:	str	xzr, [x0, #8]!
   25940:	stp	x20, x27, [x0, #8]
   25944:	str	w21, [x0, #48]
   25948:	stp	xzr, xzr, [x0, #24]
   2594c:	str	x23, [x0, #56]
   25950:	cbz	x20, 25958 <rpl_re_set_registers@@Base+0xa44>
   25954:	str	x0, [x20]
   25958:	cbz	x27, 258dc <rpl_re_set_registers@@Base+0x9c8>
   2595c:	str	x0, [x27]
   25960:	b	258dc <rpl_re_set_registers@@Base+0x9c8>
   25964:	cmp	w8, #0x9
   25968:	b.eq	25918 <rpl_re_set_registers@@Base+0xa04>  // b.none
   2596c:	ldp	x8, x1, [sp, #8]
   25970:	ldur	x3, [x29, #-8]
   25974:	ldr	x4, [sp]
   25978:	ldr	x26, [x28, #168]
   2597c:	mov	x0, x24
   25980:	mov	x2, x22
   25984:	mov	x5, x19
   25988:	str	x8, [x28, #168]
   2598c:	bl	26130 <rpl_re_set_registers@@Base+0x121c>
   25990:	mov	x27, x0
   25994:	cbnz	x0, 259a0 <rpl_re_set_registers@@Base+0xa8c>
   25998:	ldr	w8, [x19]
   2599c:	cbnz	w8, 25b04 <rpl_re_set_registers@@Base+0xbf0>
   259a0:	ldr	x8, [x28, #168]
   259a4:	orr	x8, x8, x26
   259a8:	str	x8, [x28, #168]
   259ac:	ldr	w8, [x28, #128]
   259b0:	cmp	w8, #0xf
   259b4:	b.ne	25928 <rpl_re_set_registers@@Base+0xa14>  // b.any
   259b8:	mov	w0, #0x3c8                 	// #968
   259bc:	bl	a550 <malloc@plt>
   259c0:	cbz	x0, 25b9c <rpl_re_set_registers@@Base+0xc88>
   259c4:	ldr	x9, [x28, #112]
   259c8:	mov	w8, wzr
   259cc:	str	x9, [x0]
   259d0:	str	x0, [x28, #112]
   259d4:	str	wzr, [x28, #128]
   259d8:	b	2592c <rpl_re_set_registers@@Base+0xa18>
   259dc:	mov	x0, x20
   259e0:	ldp	x20, x19, [sp, #112]
   259e4:	ldp	x22, x21, [sp, #96]
   259e8:	ldp	x24, x23, [sp, #80]
   259ec:	ldp	x26, x25, [sp, #64]
   259f0:	ldp	x28, x27, [sp, #48]
   259f4:	ldp	x29, x30, [sp, #32]
   259f8:	add	sp, sp, #0x80
   259fc:	ret
   25a00:	mov	w21, #0xa                   	// #10
   25a04:	mov	x23, #0xffffffffffffffff    	// #-1
   25a08:	b	25a1c <rpl_re_set_registers@@Base+0xb08>
   25a0c:	ldrb	w8, [x22, #8]
   25a10:	mov	x20, x0
   25a14:	cmp	w8, #0xa
   25a18:	b.ne	259e0 <rpl_re_set_registers@@Base+0xacc>  // b.any
   25a1c:	mov	x0, x22
   25a20:	mov	x1, x24
   25a24:	mov	x2, x25
   25a28:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   25a2c:	ldr	x8, [x24, #72]
   25a30:	add	x8, x8, w0, sxtw
   25a34:	str	x8, [x24, #72]
   25a38:	ldrb	w8, [x22, #8]
   25a3c:	orr	w8, w8, #0x8
   25a40:	cmp	w8, #0xa
   25a44:	b.ne	25a94 <rpl_re_set_registers@@Base+0xb80>  // b.any
   25a48:	mov	x26, xzr
   25a4c:	ldr	w8, [x28, #128]
   25a50:	cmp	w8, #0xf
   25a54:	b.eq	25ae0 <rpl_re_set_registers@@Base+0xbcc>  // b.none
   25a58:	ldr	x0, [x28, #112]
   25a5c:	add	w9, w8, #0x1
   25a60:	sxtw	x8, w8
   25a64:	add	x0, x0, x8, lsl #6
   25a68:	str	w9, [x28, #128]
   25a6c:	str	xzr, [x0, #8]!
   25a70:	stp	x20, x26, [x0, #8]
   25a74:	str	w21, [x0, #48]
   25a78:	stp	xzr, xzr, [x0, #24]
   25a7c:	str	x23, [x0, #56]
   25a80:	cbz	x20, 25a88 <rpl_re_set_registers@@Base+0xb74>
   25a84:	str	x0, [x20]
   25a88:	cbz	x26, 25a0c <rpl_re_set_registers@@Base+0xaf8>
   25a8c:	str	x0, [x26]
   25a90:	b	25a0c <rpl_re_set_registers@@Base+0xaf8>
   25a94:	ldp	x8, x1, [sp, #8]
   25a98:	ldur	x3, [x29, #-8]
   25a9c:	ldr	x27, [x28, #168]
   25aa0:	mov	x0, x24
   25aa4:	mov	x2, x22
   25aa8:	mov	x4, xzr
   25aac:	mov	x5, x19
   25ab0:	str	x8, [x28, #168]
   25ab4:	bl	26130 <rpl_re_set_registers@@Base+0x121c>
   25ab8:	mov	x26, x0
   25abc:	cbnz	x0, 25ac8 <rpl_re_set_registers@@Base+0xbb4>
   25ac0:	ldr	w8, [x19]
   25ac4:	cbnz	w8, 25b04 <rpl_re_set_registers@@Base+0xbf0>
   25ac8:	ldr	x8, [x28, #168]
   25acc:	orr	x8, x8, x27
   25ad0:	str	x8, [x28, #168]
   25ad4:	ldr	w8, [x28, #128]
   25ad8:	cmp	w8, #0xf
   25adc:	b.ne	25a58 <rpl_re_set_registers@@Base+0xb44>  // b.any
   25ae0:	mov	w0, #0x3c8                 	// #968
   25ae4:	bl	a550 <malloc@plt>
   25ae8:	cbz	x0, 25b9c <rpl_re_set_registers@@Base+0xc88>
   25aec:	ldr	x9, [x28, #112]
   25af0:	mov	w8, wzr
   25af4:	str	x9, [x0]
   25af8:	str	x0, [x28, #112]
   25afc:	str	wzr, [x28, #128]
   25b00:	b	25a5c <rpl_re_set_registers@@Base+0xb48>
   25b04:	cbz	x20, 25b94 <rpl_re_set_registers@@Base+0xc80>
   25b08:	mov	w21, #0xff                  	// #255
   25b0c:	movk	w21, #0x4, lsl #16
   25b10:	mov	x22, x20
   25b14:	ldr	x20, [x20, #8]
   25b18:	cbnz	x20, 25b10 <rpl_re_set_registers@@Base+0xbfc>
   25b1c:	ldr	x20, [x22, #16]
   25b20:	cbnz	x20, 25b10 <rpl_re_set_registers@@Base+0xbfc>
   25b24:	ldr	w8, [x22, #48]
   25b28:	and	w8, w8, w21
   25b2c:	cmp	w8, #0x3
   25b30:	b.eq	25b64 <rpl_re_set_registers@@Base+0xc50>  // b.none
   25b34:	cmp	w8, #0x6
   25b38:	b.ne	25b70 <rpl_re_set_registers@@Base+0xc5c>  // b.any
   25b3c:	ldr	x19, [x22, #40]
   25b40:	ldr	x0, [x19]
   25b44:	bl	a970 <free@plt>
   25b48:	ldr	x0, [x19, #8]
   25b4c:	bl	a970 <free@plt>
   25b50:	ldr	x0, [x19, #16]
   25b54:	bl	a970 <free@plt>
   25b58:	ldr	x0, [x19, #24]
   25b5c:	bl	a970 <free@plt>
   25b60:	b	25b68 <rpl_re_set_registers@@Base+0xc54>
   25b64:	ldr	x19, [x22, #40]
   25b68:	mov	x0, x19
   25b6c:	bl	a970 <free@plt>
   25b70:	ldr	x8, [x22]
   25b74:	cbz	x8, 25b94 <rpl_re_set_registers@@Base+0xc80>
   25b78:	ldr	x20, [x8, #16]
   25b7c:	cmp	x20, x22
   25b80:	mov	x22, x8
   25b84:	b.eq	25b24 <rpl_re_set_registers@@Base+0xc10>  // b.none
   25b88:	mov	x22, x8
   25b8c:	cbz	x20, 25b24 <rpl_re_set_registers@@Base+0xc10>
   25b90:	b	25b10 <rpl_re_set_registers@@Base+0xbfc>
   25b94:	mov	x0, xzr
   25b98:	b	259e0 <rpl_re_set_registers@@Base+0xacc>
   25b9c:	mov	x0, xzr
   25ba0:	mov	w8, #0xc                   	// #12
   25ba4:	str	w8, [x19]
   25ba8:	b	259e0 <rpl_re_set_registers@@Base+0xacc>
   25bac:	sub	sp, sp, #0x50
   25bb0:	stp	x29, x30, [sp, #16]
   25bb4:	stp	x24, x23, [sp, #32]
   25bb8:	stp	x22, x21, [sp, #48]
   25bbc:	stp	x20, x19, [sp, #64]
   25bc0:	ldr	x9, [x1, #104]
   25bc4:	ldr	x8, [x1, #72]
   25bc8:	mov	x19, x0
   25bcc:	add	x29, sp, #0x10
   25bd0:	cmp	x9, x8
   25bd4:	b.le	25cb8 <rpl_re_set_registers@@Base+0xda4>
   25bd8:	ldr	x9, [x1, #8]
   25bdc:	mov	x23, x19
   25be0:	mov	x20, x2
   25be4:	mov	x21, x1
   25be8:	ldrb	w24, [x9, x8]
   25bec:	strb	w24, [x23], #8
   25bf0:	ldr	w8, [x23]
   25bf4:	and	w9, w8, #0xff9fffff
   25bf8:	str	w9, [x23]
   25bfc:	ldr	w11, [x1, #144]
   25c00:	cmp	w11, #0x2
   25c04:	b.lt	25c28 <rpl_re_set_registers@@Base+0xd14>  // b.tstop
   25c08:	ldr	x9, [x21, #72]
   25c0c:	ldr	x10, [x21, #48]
   25c10:	cmp	x9, x10
   25c14:	b.eq	25c28 <rpl_re_set_registers@@Base+0xd14>  // b.none
   25c18:	ldr	x10, [x21, #16]
   25c1c:	ldr	w9, [x10, x9, lsl #2]
   25c20:	cmn	w9, #0x1
   25c24:	b.eq	25df8 <rpl_re_set_registers@@Base+0xee4>  // b.none
   25c28:	mov	w9, #0xff00                	// #65280
   25c2c:	cmp	w24, #0x5c
   25c30:	movk	w9, #0xff9f, lsl #16
   25c34:	b.ne	25cc8 <rpl_re_set_registers@@Base+0xdb4>  // b.any
   25c38:	ldr	x12, [x21, #72]
   25c3c:	ldr	x13, [x21, #88]
   25c40:	add	x10, x12, #0x1
   25c44:	cmp	x10, x13
   25c48:	b.ge	25d18 <rpl_re_set_registers@@Base+0xe04>  // b.tcont
   25c4c:	ldrb	w13, [x21, #139]
   25c50:	cbnz	w13, 260cc <rpl_re_set_registers@@Base+0x11b8>
   25c54:	ldr	x11, [x21, #8]
   25c58:	ldrb	w22, [x11, x10]
   25c5c:	and	w8, w8, w9
   25c60:	orr	w24, w8, #0x1
   25c64:	strb	w22, [x19]
   25c68:	str	w24, [x19, #8]
   25c6c:	ldr	w8, [x21, #144]
   25c70:	cmp	w8, #0x2
   25c74:	b.lt	25d88 <rpl_re_set_registers@@Base+0xe74>  // b.tstop
   25c78:	ldr	x8, [x21, #72]
   25c7c:	ldr	x9, [x21, #16]
   25c80:	add	x8, x9, x8, lsl #2
   25c84:	ldr	w21, [x8, #4]
   25c88:	mov	w0, w21
   25c8c:	bl	ac20 <iswalnum@plt>
   25c90:	ldr	w9, [x23]
   25c94:	cmp	w0, #0x0
   25c98:	mov	w8, #0x5f                  	// #95
   25c9c:	mov	w10, #0x400000              	// #4194304
   25ca0:	ccmp	w21, w8, #0x4, eq  // eq = none
   25ca4:	csel	w8, w10, wzr, eq  // eq = none
   25ca8:	and	w9, w9, #0xffbfffff
   25cac:	orr	w8, w8, w9
   25cb0:	and	x9, x22, #0xff
   25cb4:	b	25db0 <rpl_re_set_registers@@Base+0xe9c>
   25cb8:	mov	w8, #0x2                   	// #2
   25cbc:	mov	w0, wzr
   25cc0:	strb	w8, [x19, #8]
   25cc4:	b	25f28 <rpl_re_set_registers@@Base+0x1014>
   25cc8:	and	w8, w8, w9
   25ccc:	orr	w22, w8, #0x1
   25cd0:	str	w22, [x23]
   25cd4:	ldr	w8, [x21, #144]
   25cd8:	cmp	w8, #0x2
   25cdc:	b.lt	25d28 <rpl_re_set_registers@@Base+0xe14>  // b.tstop
   25ce0:	ldr	x8, [x21, #72]
   25ce4:	ldr	x9, [x21, #16]
   25ce8:	ldr	w22, [x9, x8, lsl #2]
   25cec:	mov	w0, w22
   25cf0:	bl	ac20 <iswalnum@plt>
   25cf4:	ldr	w9, [x23]
   25cf8:	cmp	w0, #0x0
   25cfc:	mov	w8, #0x5f                  	// #95
   25d00:	ccmp	w22, w8, #0x4, eq  // eq = none
   25d04:	mov	w8, #0x400000              	// #4194304
   25d08:	csel	w8, w8, wzr, eq  // eq = none
   25d0c:	and	w9, w9, #0xffbfffff
   25d10:	orr	w8, w8, w9
   25d14:	b	25d54 <rpl_re_set_registers@@Base+0xe40>
   25d18:	and	w8, w8, w9
   25d1c:	mov	w9, #0x24                  	// #36
   25d20:	orr	w8, w8, w9
   25d24:	b	25f20 <rpl_re_set_registers@@Base+0x100c>
   25d28:	bl	a910 <__ctype_b_loc@plt>
   25d2c:	ldr	x8, [x0]
   25d30:	cmp	w24, #0x5f
   25d34:	cset	w9, eq  // eq = none
   25d38:	ldrh	w8, [x8, x24, lsl #1]
   25d3c:	and	w8, w8, #0x8
   25d40:	orr	w8, w9, w8, lsr #3
   25d44:	cmp	w8, #0x0
   25d48:	mov	w8, #0x400000              	// #4194304
   25d4c:	csel	w8, w8, wzr, ne  // ne = any
   25d50:	orr	w8, w8, w22
   25d54:	sub	w9, w24, #0xa
   25d58:	cmp	w9, #0x73
   25d5c:	mov	w0, #0x1                   	// #1
   25d60:	str	w8, [x23]
   25d64:	b.hi	25f28 <rpl_re_set_registers@@Base+0x1014>  // b.pmore
   25d68:	adrp	x10, 34000 <vasnprintf@@Base+0x3474>
   25d6c:	add	x10, x10, #0x17f
   25d70:	adr	x11, 25d80 <rpl_re_set_registers@@Base+0xe6c>
   25d74:	ldrb	w12, [x10, x9]
   25d78:	add	x11, x11, x12, lsl #2
   25d7c:	br	x11
   25d80:	tbnz	w20, #11, 25f18 <rpl_re_set_registers@@Base+0x1004>
   25d84:	b	25f24 <rpl_re_set_registers@@Base+0x1010>
   25d88:	bl	a910 <__ctype_b_loc@plt>
   25d8c:	ldr	x8, [x0]
   25d90:	and	x9, x22, #0xff
   25d94:	and	w10, w22, #0xff
   25d98:	cmp	w10, #0x5f
   25d9c:	ldrh	w8, [x8, x9, lsl #1]
   25da0:	cset	w10, eq  // eq = none
   25da4:	ubfx	w8, w8, #3, #1
   25da8:	orr	w8, w8, w10
   25dac:	orr	w8, w24, w8, lsl #22
   25db0:	and	w10, w22, #0xff
   25db4:	sub	w10, w10, #0x27
   25db8:	cmp	w10, #0x56
   25dbc:	mov	w0, #0x2                   	// #2
   25dc0:	str	w8, [x23]
   25dc4:	b.hi	25f28 <rpl_re_set_registers@@Base+0x1014>  // b.pmore
   25dc8:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   25dcc:	add	x11, x11, #0x1f3
   25dd0:	adr	x12, 25de0 <rpl_re_set_registers@@Base+0xecc>
   25dd4:	ldrb	w13, [x11, x10]
   25dd8:	add	x12, x12, x13, lsl #2
   25ddc:	br	x12
   25de0:	tbnz	w20, #14, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   25de4:	and	w8, w8, #0xffffff00
   25de8:	sub	x9, x9, #0x31
   25dec:	orr	w8, w8, #0x4
   25df0:	str	x9, [x19]
   25df4:	b	26048 <rpl_re_set_registers@@Base+0x1134>
   25df8:	mov	w9, #0xff00                	// #65280
   25dfc:	movk	w9, #0xff9f, lsl #16
   25e00:	mov	w10, #0x1                   	// #1
   25e04:	movk	w10, #0x20, lsl #16
   25e08:	and	w8, w8, w9
   25e0c:	orr	w8, w8, w10
   25e10:	b	25f20 <rpl_re_set_registers@@Base+0x100c>
   25e14:	tbnz	w20, #3, 25e60 <rpl_re_set_registers@@Base+0xf4c>
   25e18:	ldr	x9, [x21, #72]
   25e1c:	ldr	x10, [x21, #88]
   25e20:	add	x9, x9, #0x1
   25e24:	cmp	x9, x10
   25e28:	b.eq	25e60 <rpl_re_set_registers@@Base+0xf4c>  // b.none
   25e2c:	mov	x0, sp
   25e30:	mov	x1, x21
   25e34:	mov	x2, x20
   25e38:	str	x9, [x21, #72]
   25e3c:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   25e40:	ldr	x8, [x21, #72]
   25e44:	sub	x8, x8, #0x1
   25e48:	str	x8, [x21, #72]
   25e4c:	ldrb	w8, [sp, #8]
   25e50:	sub	w8, w8, #0x9
   25e54:	cmp	w8, #0x1
   25e58:	b.hi	25f24 <rpl_re_set_registers@@Base+0x1010>  // b.pmore
   25e5c:	ldr	w8, [x23]
   25e60:	and	w8, w8, #0xffffff00
   25e64:	mov	w9, #0x20                  	// #32
   25e68:	b	25ee0 <rpl_re_set_registers@@Base+0xfcc>
   25e6c:	tbz	w20, #13, 25f24 <rpl_re_set_registers@@Base+0x1010>
   25e70:	and	w8, w8, #0xffffff00
   25e74:	orr	w8, w8, #0x8
   25e78:	b	25f20 <rpl_re_set_registers@@Base+0x100c>
   25e7c:	tbz	w20, #13, 25f24 <rpl_re_set_registers@@Base+0x1010>
   25e80:	mov	w9, #0x9                   	// #9
   25e84:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25e88:	mov	w9, #0xb                   	// #11
   25e8c:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25e90:	mov	w9, #0x402                 	// #1026
   25e94:	tst	x20, x9
   25e98:	b.ne	25f24 <rpl_re_set_registers@@Base+0x1010>  // b.any
   25e9c:	mov	w9, #0x12                  	// #18
   25ea0:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25ea4:	mov	w9, #0x5                   	// #5
   25ea8:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25eac:	mov	w9, #0x402                 	// #1026
   25eb0:	tst	x20, x9
   25eb4:	b.ne	25f24 <rpl_re_set_registers@@Base+0x1010>  // b.any
   25eb8:	mov	w9, #0x13                  	// #19
   25ebc:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25ec0:	mov	w9, #0x14                  	// #20
   25ec4:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25ec8:	mov	w9, #0x8                   	// #8
   25ecc:	movk	w9, #0x80, lsl #16
   25ed0:	tst	x20, x9
   25ed4:	b.eq	25f5c <rpl_re_set_registers@@Base+0x1048>  // b.none
   25ed8:	and	w8, w8, #0xffffff00
   25edc:	mov	w9, #0x10                  	// #16
   25ee0:	orr	w8, w8, #0xc
   25ee4:	str	w9, [x19]
   25ee8:	str	w8, [x19, #8]
   25eec:	b	25f24 <rpl_re_set_registers@@Base+0x1010>
   25ef0:	mvn	w9, w20
   25ef4:	mov	w10, #0x1200                	// #4608
   25ef8:	tst	x9, x10
   25efc:	b.ne	25f24 <rpl_re_set_registers@@Base+0x1010>  // b.any
   25f00:	mov	w9, #0x17                  	// #23
   25f04:	b	25f1c <rpl_re_set_registers@@Base+0x1008>
   25f08:	mov	w9, #0x8400                	// #33792
   25f0c:	and	x9, x20, x9
   25f10:	cmp	x9, #0x8, lsl #12
   25f14:	b.ne	25f24 <rpl_re_set_registers@@Base+0x1010>  // b.any
   25f18:	mov	w9, #0xa                   	// #10
   25f1c:	bfxil	w8, w9, #0, #8
   25f20:	str	w8, [x23]
   25f24:	mov	w0, #0x1                   	// #1
   25f28:	ldp	x20, x19, [sp, #64]
   25f2c:	ldp	x22, x21, [sp, #48]
   25f30:	ldp	x24, x23, [sp, #32]
   25f34:	ldp	x29, x30, [sp, #16]
   25f38:	add	sp, sp, #0x50
   25f3c:	ret
   25f40:	mvn	w9, w20
   25f44:	mov	w10, #0x1200                	// #4608
   25f48:	tst	x9, x10
   25f4c:	b.ne	25f24 <rpl_re_set_registers@@Base+0x1010>  // b.any
   25f50:	and	w8, w8, #0xffffff00
   25f54:	orr	w8, w8, #0x18
   25f58:	b	25f20 <rpl_re_set_registers@@Base+0x100c>
   25f5c:	ldr	x9, [x21, #72]
   25f60:	cbz	x9, 25ed8 <rpl_re_set_registers@@Base+0xfc4>
   25f64:	tbz	w20, #11, 25f24 <rpl_re_set_registers@@Base+0x1010>
   25f68:	ldr	x10, [x21, #8]
   25f6c:	add	x9, x9, x10
   25f70:	ldurb	w9, [x9, #-1]
   25f74:	cmp	w9, #0xa
   25f78:	b.eq	25ed8 <rpl_re_set_registers@@Base+0xfc4>  // b.none
   25f7c:	b	25f24 <rpl_re_set_registers@@Base+0x1010>
   25f80:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   25f84:	and	w8, w8, #0xffffff00
   25f88:	mov	w9, #0x80                  	// #128
   25f8c:	b	26040 <rpl_re_set_registers@@Base+0x112c>
   25f90:	tbnz	w20, #13, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   25f94:	and	w8, w8, #0xffffff00
   25f98:	orr	w8, w8, #0x8
   25f9c:	b	2609c <rpl_re_set_registers@@Base+0x1188>
   25fa0:	tbnz	w20, #13, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   25fa4:	mov	w9, #0x9                   	// #9
   25fa8:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   25fac:	mov	w9, #0x402                 	// #1026
   25fb0:	and	x9, x20, x9
   25fb4:	cmp	x9, #0x2
   25fb8:	b.ne	260c4 <rpl_re_set_registers@@Base+0x11b0>  // b.any
   25fbc:	mov	w9, #0x12                  	// #18
   25fc0:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   25fc4:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   25fc8:	and	w8, w8, #0xffffff00
   25fcc:	mov	w9, #0x6                   	// #6
   25fd0:	b	26040 <rpl_re_set_registers@@Base+0x112c>
   25fd4:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   25fd8:	and	w8, w8, #0xffffff00
   25fdc:	mov	w9, #0x9                   	// #9
   25fe0:	b	26040 <rpl_re_set_registers@@Base+0x112c>
   25fe4:	mov	w9, #0x402                 	// #1026
   25fe8:	and	x9, x20, x9
   25fec:	cmp	x9, #0x2
   25ff0:	b.ne	260c4 <rpl_re_set_registers@@Base+0x11b0>  // b.any
   25ff4:	mov	w9, #0x13                  	// #19
   25ff8:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   25ffc:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   26000:	and	w8, w8, #0xffffff00
   26004:	mov	w9, #0x200                 	// #512
   26008:	b	26040 <rpl_re_set_registers@@Base+0x112c>
   2600c:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   26010:	mov	w9, #0x23                  	// #35
   26014:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   26018:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   2601c:	mov	w9, #0x21                  	// #33
   26020:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   26024:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   26028:	and	w8, w8, #0xffffff00
   2602c:	mov	w9, #0x40                  	// #64
   26030:	b	26040 <rpl_re_set_registers@@Base+0x112c>
   26034:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   26038:	and	w8, w8, #0xffffff00
   2603c:	mov	w9, #0x100                 	// #256
   26040:	orr	w8, w8, #0xc
   26044:	str	w9, [x19]
   26048:	str	w8, [x19, #8]
   2604c:	mov	w0, #0x2                   	// #2
   26050:	b	25f28 <rpl_re_set_registers@@Base+0x1014>
   26054:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   26058:	mov	w9, #0x22                  	// #34
   2605c:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   26060:	tbnz	w20, #19, 260c4 <rpl_re_set_registers@@Base+0x11b0>
   26064:	and	w8, w8, #0xffffff00
   26068:	orr	w8, w8, #0x20
   2606c:	b	2609c <rpl_re_set_registers@@Base+0x1188>
   26070:	mov	w9, #0x1200                	// #4608
   26074:	and	x9, x20, x9
   26078:	cmp	x9, #0x200
   2607c:	b.ne	260c4 <rpl_re_set_registers@@Base+0x11b0>  // b.any
   26080:	mov	w9, #0x17                  	// #23
   26084:	b	26098 <rpl_re_set_registers@@Base+0x1184>
   26088:	mov	w9, #0x8400                	// #33792
   2608c:	tst	x20, x9
   26090:	b.ne	260c4 <rpl_re_set_registers@@Base+0x11b0>  // b.any
   26094:	mov	w9, #0xa                   	// #10
   26098:	bfxil	w8, w9, #0, #8
   2609c:	str	w8, [x23]
   260a0:	mov	w0, #0x2                   	// #2
   260a4:	b	25f28 <rpl_re_set_registers@@Base+0x1014>
   260a8:	mov	w9, #0x1200                	// #4608
   260ac:	and	x9, x20, x9
   260b0:	cmp	x9, #0x200
   260b4:	b.ne	260c4 <rpl_re_set_registers@@Base+0x11b0>  // b.any
   260b8:	and	w8, w8, #0xffffff00
   260bc:	orr	w8, w8, #0x18
   260c0:	b	2609c <rpl_re_set_registers@@Base+0x1188>
   260c4:	mov	w0, #0x2                   	// #2
   260c8:	b	25f28 <rpl_re_set_registers@@Base+0x1014>
   260cc:	cmp	w11, #0x2
   260d0:	b.lt	26100 <rpl_re_set_registers@@Base+0x11ec>  // b.tstop
   260d4:	ldr	x11, [x21, #16]
   260d8:	ldr	w13, [x11, x10, lsl #2]
   260dc:	cmn	w13, #0x1
   260e0:	b.eq	25c54 <rpl_re_set_registers@@Base+0xd40>  // b.none
   260e4:	ldr	x13, [x21, #48]
   260e8:	add	x12, x12, #0x2
   260ec:	cmp	x13, x12
   260f0:	b.eq	26100 <rpl_re_set_registers@@Base+0x11ec>  // b.none
   260f4:	ldr	w11, [x11, x12, lsl #2]
   260f8:	cmn	w11, #0x1
   260fc:	b.eq	25c54 <rpl_re_set_registers@@Base+0xd40>  // b.none
   26100:	ldrb	w11, [x21, #140]
   26104:	mov	x12, x10
   26108:	cbz	w11, 26114 <rpl_re_set_registers@@Base+0x1200>
   2610c:	ldr	x12, [x21, #24]
   26110:	ldr	x12, [x12, x10, lsl #3]
   26114:	ldr	x13, [x21, #40]
   26118:	ldr	x14, [x21]
   2611c:	add	x12, x13, x12
   26120:	ldrsb	w22, [x14, x12]
   26124:	cbz	w11, 25c5c <rpl_re_set_registers@@Base+0xd48>
   26128:	tbnz	w22, #31, 25c54 <rpl_re_set_registers@@Base+0xd40>
   2612c:	b	25c5c <rpl_re_set_registers@@Base+0xd48>
   26130:	stp	x29, x30, [sp, #-96]!
   26134:	stp	x28, x27, [sp, #16]
   26138:	stp	x26, x25, [sp, #32]
   2613c:	stp	x24, x23, [sp, #48]
   26140:	stp	x22, x21, [sp, #64]
   26144:	stp	x20, x19, [sp, #80]
   26148:	ldr	x27, [x1]
   2614c:	mov	x29, sp
   26150:	mov	x19, x5
   26154:	mov	x26, x4
   26158:	mov	x21, x3
   2615c:	mov	x22, x2
   26160:	mov	x23, x1
   26164:	mov	x24, x0
   26168:	bl	2652c <rpl_re_set_registers@@Base+0x1618>
   2616c:	mov	x20, x0
   26170:	cbnz	x0, 2617c <rpl_re_set_registers@@Base+0x1268>
   26174:	ldr	w8, [x19]
   26178:	cbnz	w8, 263e8 <rpl_re_set_registers@@Base+0x14d4>
   2617c:	cbz	x26, 26270 <rpl_re_set_registers@@Base+0x135c>
   26180:	mov	x28, #0xffffffffffffffff    	// #-1
   26184:	ldrb	w8, [x22, #8]
   26188:	orr	w9, w8, #0x8
   2618c:	cmp	w9, #0xa
   26190:	b.ne	261b0 <rpl_re_set_registers@@Base+0x129c>  // b.any
   26194:	b	263ec <rpl_re_set_registers@@Base+0x14d8>
   26198:	cmp	x20, #0x0
   2619c:	csel	x20, x25, x20, eq  // eq = none
   261a0:	ldrb	w8, [x22, #8]
   261a4:	orr	w9, w8, #0x8
   261a8:	cmp	w9, #0xa
   261ac:	b.eq	263ec <rpl_re_set_registers@@Base+0x14d8>  // b.none
   261b0:	cmp	w8, #0x9
   261b4:	b.eq	263ec <rpl_re_set_registers@@Base+0x14d8>  // b.none
   261b8:	mov	x0, x24
   261bc:	mov	x1, x23
   261c0:	mov	x2, x22
   261c4:	mov	x3, x21
   261c8:	mov	x4, x26
   261cc:	mov	x5, x19
   261d0:	bl	2652c <rpl_re_set_registers@@Base+0x1618>
   261d4:	cmp	x20, #0x0
   261d8:	mov	x25, x0
   261dc:	cset	w8, ne  // ne = any
   261e0:	cbnz	x0, 261ec <rpl_re_set_registers@@Base+0x12d8>
   261e4:	ldr	w9, [x19]
   261e8:	cbnz	w9, 26358 <rpl_re_set_registers@@Base+0x1444>
   261ec:	cbz	x20, 26198 <rpl_re_set_registers@@Base+0x1284>
   261f0:	cbz	x25, 26198 <rpl_re_set_registers@@Base+0x1284>
   261f4:	ldr	w8, [x27, #128]
   261f8:	cmp	w8, #0xf
   261fc:	b.eq	2624c <rpl_re_set_registers@@Base+0x1338>  // b.none
   26200:	ldr	x0, [x27, #112]
   26204:	add	w9, w8, #0x1
   26208:	sxtw	x8, w8
   2620c:	add	x8, x0, x8, lsl #6
   26210:	str	w9, [x27, #128]
   26214:	str	xzr, [x8, #8]!
   26218:	mov	w9, #0x10                  	// #16
   2621c:	stp	x20, x25, [x8, #8]
   26220:	str	w9, [x8, #48]
   26224:	stp	xzr, xzr, [x8, #24]
   26228:	str	x28, [x8, #56]
   2622c:	str	x8, [x20]
   26230:	str	x8, [x25]
   26234:	mov	x20, x8
   26238:	ldrb	w8, [x22, #8]
   2623c:	orr	w9, w8, #0x8
   26240:	cmp	w9, #0xa
   26244:	b.ne	261b0 <rpl_re_set_registers@@Base+0x129c>  // b.any
   26248:	b	263ec <rpl_re_set_registers@@Base+0x14d8>
   2624c:	mov	w0, #0x3c8                 	// #968
   26250:	bl	a550 <malloc@plt>
   26254:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x14f8>
   26258:	ldr	x9, [x27, #112]
   2625c:	mov	w8, wzr
   26260:	str	x9, [x0]
   26264:	str	x0, [x27, #112]
   26268:	str	wzr, [x27, #128]
   2626c:	b	26204 <rpl_re_set_registers@@Base+0x12f0>
   26270:	mov	w26, #0x10                  	// #16
   26274:	mov	x28, #0xffffffffffffffff    	// #-1
   26278:	ldrb	w8, [x22, #8]
   2627c:	orr	w8, w8, #0x8
   26280:	cmp	w8, #0xa
   26284:	b.ne	262a4 <rpl_re_set_registers@@Base+0x1390>  // b.any
   26288:	b	263ec <rpl_re_set_registers@@Base+0x14d8>
   2628c:	cmp	x20, #0x0
   26290:	csel	x20, x25, x20, eq  // eq = none
   26294:	ldrb	w8, [x22, #8]
   26298:	orr	w8, w8, #0x8
   2629c:	cmp	w8, #0xa
   262a0:	b.eq	263ec <rpl_re_set_registers@@Base+0x14d8>  // b.none
   262a4:	mov	x0, x24
   262a8:	mov	x1, x23
   262ac:	mov	x2, x22
   262b0:	mov	x3, x21
   262b4:	mov	x4, xzr
   262b8:	mov	x5, x19
   262bc:	bl	2652c <rpl_re_set_registers@@Base+0x1618>
   262c0:	cmp	x20, #0x0
   262c4:	mov	x25, x0
   262c8:	cset	w8, ne  // ne = any
   262cc:	cbnz	x0, 262d8 <rpl_re_set_registers@@Base+0x13c4>
   262d0:	ldr	w9, [x19]
   262d4:	cbnz	w9, 26358 <rpl_re_set_registers@@Base+0x1444>
   262d8:	cbz	x20, 2628c <rpl_re_set_registers@@Base+0x1378>
   262dc:	cbz	x25, 2628c <rpl_re_set_registers@@Base+0x1378>
   262e0:	ldr	w8, [x27, #128]
   262e4:	cmp	w8, #0xf
   262e8:	b.eq	26334 <rpl_re_set_registers@@Base+0x1420>  // b.none
   262ec:	ldr	x0, [x27, #112]
   262f0:	add	w9, w8, #0x1
   262f4:	sxtw	x8, w8
   262f8:	add	x8, x0, x8, lsl #6
   262fc:	str	w9, [x27, #128]
   26300:	str	xzr, [x8, #8]!
   26304:	stp	x20, x25, [x8, #8]
   26308:	str	w26, [x8, #48]
   2630c:	stp	xzr, xzr, [x8, #24]
   26310:	str	x28, [x8, #56]
   26314:	str	x8, [x20]
   26318:	str	x8, [x25]
   2631c:	mov	x20, x8
   26320:	ldrb	w8, [x22, #8]
   26324:	orr	w8, w8, #0x8
   26328:	cmp	w8, #0xa
   2632c:	b.ne	262a4 <rpl_re_set_registers@@Base+0x1390>  // b.any
   26330:	b	263ec <rpl_re_set_registers@@Base+0x14d8>
   26334:	mov	w0, #0x3c8                 	// #968
   26338:	bl	a550 <malloc@plt>
   2633c:	cbz	x0, 2640c <rpl_re_set_registers@@Base+0x14f8>
   26340:	ldr	x9, [x27, #112]
   26344:	mov	w8, wzr
   26348:	str	x9, [x0]
   2634c:	str	x0, [x27, #112]
   26350:	str	wzr, [x27, #128]
   26354:	b	262f0 <rpl_re_set_registers@@Base+0x13dc>
   26358:	cbz	w8, 263e8 <rpl_re_set_registers@@Base+0x14d4>
   2635c:	mov	w21, #0xff                  	// #255
   26360:	movk	w21, #0x4, lsl #16
   26364:	mov	x22, x20
   26368:	ldr	x20, [x20, #8]
   2636c:	cbnz	x20, 26364 <rpl_re_set_registers@@Base+0x1450>
   26370:	ldr	x20, [x22, #16]
   26374:	cbnz	x20, 26364 <rpl_re_set_registers@@Base+0x1450>
   26378:	ldr	w8, [x22, #48]
   2637c:	and	w8, w8, w21
   26380:	cmp	w8, #0x3
   26384:	b.eq	263b8 <rpl_re_set_registers@@Base+0x14a4>  // b.none
   26388:	cmp	w8, #0x6
   2638c:	b.ne	263c4 <rpl_re_set_registers@@Base+0x14b0>  // b.any
   26390:	ldr	x19, [x22, #40]
   26394:	ldr	x0, [x19]
   26398:	bl	a970 <free@plt>
   2639c:	ldr	x0, [x19, #8]
   263a0:	bl	a970 <free@plt>
   263a4:	ldr	x0, [x19, #16]
   263a8:	bl	a970 <free@plt>
   263ac:	ldr	x0, [x19, #24]
   263b0:	bl	a970 <free@plt>
   263b4:	b	263bc <rpl_re_set_registers@@Base+0x14a8>
   263b8:	ldr	x19, [x22, #40]
   263bc:	mov	x0, x19
   263c0:	bl	a970 <free@plt>
   263c4:	ldr	x8, [x22]
   263c8:	cbz	x8, 263e8 <rpl_re_set_registers@@Base+0x14d4>
   263cc:	ldr	x20, [x8, #16]
   263d0:	cmp	x20, x22
   263d4:	mov	x22, x8
   263d8:	b.eq	26378 <rpl_re_set_registers@@Base+0x1464>  // b.none
   263dc:	mov	x22, x8
   263e0:	cbz	x20, 26378 <rpl_re_set_registers@@Base+0x1464>
   263e4:	b	26364 <rpl_re_set_registers@@Base+0x1450>
   263e8:	mov	x20, xzr
   263ec:	mov	x0, x20
   263f0:	ldp	x20, x19, [sp, #80]
   263f4:	ldp	x22, x21, [sp, #64]
   263f8:	ldp	x24, x23, [sp, #48]
   263fc:	ldp	x26, x25, [sp, #32]
   26400:	ldp	x28, x27, [sp, #16]
   26404:	ldp	x29, x30, [sp], #96
   26408:	ret
   2640c:	mov	w22, #0xff                  	// #255
   26410:	movk	w22, #0x4, lsl #16
   26414:	mov	x23, x25
   26418:	ldr	x25, [x25, #8]
   2641c:	cbnz	x25, 26414 <rpl_re_set_registers@@Base+0x1500>
   26420:	ldr	x25, [x23, #16]
   26424:	cbnz	x25, 26414 <rpl_re_set_registers@@Base+0x1500>
   26428:	ldr	w8, [x23, #48]
   2642c:	and	w8, w8, w22
   26430:	cmp	w8, #0x3
   26434:	b.eq	26468 <rpl_re_set_registers@@Base+0x1554>  // b.none
   26438:	cmp	w8, #0x6
   2643c:	b.ne	26474 <rpl_re_set_registers@@Base+0x1560>  // b.any
   26440:	ldr	x21, [x23, #40]
   26444:	ldr	x0, [x21]
   26448:	bl	a970 <free@plt>
   2644c:	ldr	x0, [x21, #8]
   26450:	bl	a970 <free@plt>
   26454:	ldr	x0, [x21, #16]
   26458:	bl	a970 <free@plt>
   2645c:	ldr	x0, [x21, #24]
   26460:	bl	a970 <free@plt>
   26464:	b	2646c <rpl_re_set_registers@@Base+0x1558>
   26468:	ldr	x21, [x23, #40]
   2646c:	mov	x0, x21
   26470:	bl	a970 <free@plt>
   26474:	ldr	x8, [x23]
   26478:	cbz	x8, 26498 <rpl_re_set_registers@@Base+0x1584>
   2647c:	ldr	x25, [x8, #16]
   26480:	cmp	x25, x23
   26484:	mov	x23, x8
   26488:	b.eq	26428 <rpl_re_set_registers@@Base+0x1514>  // b.none
   2648c:	mov	x23, x8
   26490:	cbz	x25, 26428 <rpl_re_set_registers@@Base+0x1514>
   26494:	b	26414 <rpl_re_set_registers@@Base+0x1500>
   26498:	mov	x21, x20
   2649c:	ldr	x20, [x20, #8]
   264a0:	cbnz	x20, 26498 <rpl_re_set_registers@@Base+0x1584>
   264a4:	ldr	x20, [x21, #16]
   264a8:	cbnz	x20, 26498 <rpl_re_set_registers@@Base+0x1584>
   264ac:	ldr	w8, [x21, #48]
   264b0:	and	w8, w8, w22
   264b4:	cmp	w8, #0x3
   264b8:	b.eq	264ec <rpl_re_set_registers@@Base+0x15d8>  // b.none
   264bc:	cmp	w8, #0x6
   264c0:	b.ne	264f8 <rpl_re_set_registers@@Base+0x15e4>  // b.any
   264c4:	ldr	x20, [x21, #40]
   264c8:	ldr	x0, [x20]
   264cc:	bl	a970 <free@plt>
   264d0:	ldr	x0, [x20, #8]
   264d4:	bl	a970 <free@plt>
   264d8:	ldr	x0, [x20, #16]
   264dc:	bl	a970 <free@plt>
   264e0:	ldr	x0, [x20, #24]
   264e4:	bl	a970 <free@plt>
   264e8:	b	264f0 <rpl_re_set_registers@@Base+0x15dc>
   264ec:	ldr	x20, [x21, #40]
   264f0:	mov	x0, x20
   264f4:	bl	a970 <free@plt>
   264f8:	ldr	x8, [x21]
   264fc:	cbz	x8, 2651c <rpl_re_set_registers@@Base+0x1608>
   26500:	ldr	x20, [x8, #16]
   26504:	cmp	x20, x21
   26508:	mov	x21, x8
   2650c:	b.eq	264ac <rpl_re_set_registers@@Base+0x1598>  // b.none
   26510:	mov	x21, x8
   26514:	cbz	x20, 264ac <rpl_re_set_registers@@Base+0x1598>
   26518:	b	26498 <rpl_re_set_registers@@Base+0x1584>
   2651c:	mov	x20, xzr
   26520:	mov	w8, #0xc                   	// #12
   26524:	str	w8, [x19]
   26528:	b	263ec <rpl_re_set_registers@@Base+0x14d8>
   2652c:	sub	sp, sp, #0x120
   26530:	stp	x29, x30, [sp, #192]
   26534:	stp	x28, x27, [sp, #208]
   26538:	stp	x26, x25, [sp, #224]
   2653c:	stp	x24, x23, [sp, #240]
   26540:	stp	x22, x21, [sp, #256]
   26544:	stp	x20, x19, [sp, #272]
   26548:	ldr	w8, [x2, #8]
   2654c:	add	x29, sp, #0xc0
   26550:	str	xzr, [sp, #48]
   26554:	and	w9, w8, #0xff
   26558:	sub	w9, w9, #0x1
   2655c:	cmp	w9, #0x23
   26560:	b.hi	27ee4 <rpl_re_set_registers@@Base+0x2fd0>  // b.pmore
   26564:	stp	x0, x3, [sp, #32]
   26568:	ldr	x23, [x1]
   2656c:	adrp	x10, 34000 <vasnprintf@@Base+0x3474>
   26570:	add	x10, x10, #0x24a
   26574:	adr	x11, 26598 <rpl_re_set_registers@@Base+0x1684>
   26578:	ldrh	w12, [x10, x9, lsl #1]
   2657c:	add	x11, x11, x12, lsl #2
   26580:	mov	x28, x5
   26584:	mov	x25, x4
   26588:	mov	x14, x2
   2658c:	mov	x26, x1
   26590:	str	x2, [sp, #56]
   26594:	br	x11
   26598:	ldr	x9, [sp, #40]
   2659c:	tbnz	w9, #5, 266a4 <rpl_re_set_registers@@Base+0x1790>
   265a0:	tbnz	w9, #4, 26bdc <rpl_re_set_registers@@Base+0x1cc8>
   265a4:	ldr	x9, [sp, #40]
   265a8:	tbnz	w9, #17, 26640 <rpl_re_set_registers@@Base+0x172c>
   265ac:	and	w9, w8, #0xff
   265b0:	cmp	w9, #0x9
   265b4:	b.ne	26640 <rpl_re_set_registers@@Base+0x172c>  // b.any
   265b8:	mov	w8, #0x10                  	// #16
   265bc:	str	xzr, [sp, #48]
   265c0:	str	w8, [x28]
   265c4:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   265c8:	ldr	x9, [sp, #32]
   265cc:	and	w8, w8, #0xff
   265d0:	cmp	w8, #0x23
   265d4:	adrp	x2, 34000 <vasnprintf@@Base+0x3474>
   265d8:	ldr	x1, [x9, #120]
   265dc:	adrp	x3, 33000 <vasnprintf@@Base+0x2474>
   265e0:	cset	w4, eq  // eq = none
   265e4:	add	x2, x2, #0x4fe
   265e8:	add	x3, x3, #0xeac
   265ec:	b	26614 <rpl_re_set_registers@@Base+0x1700>
   265f0:	ldr	x9, [sp, #32]
   265f4:	and	w8, w8, #0xff
   265f8:	cmp	w8, #0x21
   265fc:	adrp	x2, 34000 <vasnprintf@@Base+0x3474>
   26600:	ldr	x1, [x9, #120]
   26604:	adrp	x3, 32000 <vasnprintf@@Base+0x1474>
   26608:	cset	w4, eq  // eq = none
   2660c:	add	x2, x2, #0x4f8
   26610:	add	x3, x3, #0xdf
   26614:	mov	x0, x23
   26618:	mov	x5, x28
   2661c:	bl	28660 <rpl_re_set_registers@@Base+0x374c>
   26620:	str	x0, [sp, #48]
   26624:	cbnz	x0, 26638 <rpl_re_set_registers@@Base+0x1724>
   26628:	ldr	w8, [x28]
   2662c:	ldr	x14, [sp, #56]
   26630:	cbz	w8, 272cc <rpl_re_set_registers@@Base+0x23b8>
   26634:	b	26c60 <rpl_re_set_registers@@Base+0x1d4c>
   26638:	ldr	x14, [sp, #56]
   2663c:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   26640:	and	w8, w8, #0xffffff00
   26644:	orr	w8, w8, #0x1
   26648:	str	w8, [x14, #8]
   2664c:	ldr	w8, [x23, #128]
   26650:	cmp	w8, #0xf
   26654:	b.eq	28204 <rpl_re_set_registers@@Base+0x32f0>  // b.none
   26658:	ldr	x0, [x23, #112]
   2665c:	add	w9, w8, #0x1
   26660:	sxtw	x8, w8
   26664:	add	x10, x0, x8, lsl #6
   26668:	str	w9, [x23, #128]
   2666c:	str	xzr, [x10, #8]!
   26670:	stp	xzr, xzr, [x10, #8]
   26674:	ldr	q0, [x14]
   26678:	mov	x9, #0xffffffffffffffff    	// #-1
   2667c:	stp	xzr, xzr, [x10, #24]
   26680:	str	x10, [sp, #48]
   26684:	stur	q0, [x10, #40]
   26688:	ldr	w8, [x10, #48]
   2668c:	str	x9, [x10, #56]
   26690:	and	w8, w8, #0xfff3ffff
   26694:	str	w8, [x10, #48]
   26698:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   2669c:	ldr	x9, [sp, #40]
   266a0:	tbz	w9, #24, 26598 <rpl_re_set_registers@@Base+0x1684>
   266a4:	mov	w8, #0xd                   	// #13
   266a8:	str	xzr, [sp, #48]
   266ac:	str	w8, [x28]
   266b0:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   266b4:	ldr	w8, [x14]
   266b8:	ldr	x10, [x23, #168]
   266bc:	mov	w9, #0x1                   	// #1
   266c0:	lsl	w8, w9, w8
   266c4:	sxtw	x9, w8
   266c8:	tst	x10, x9
   266cc:	b.eq	28234 <rpl_re_set_registers@@Base+0x3320>  // b.none
   266d0:	ldr	x10, [x23, #160]
   266d4:	ldr	w8, [x23, #128]
   266d8:	orr	x9, x10, x9
   266dc:	cmp	w8, #0xf
   266e0:	str	x9, [x23, #160]
   266e4:	b.eq	282ac <rpl_re_set_registers@@Base+0x3398>  // b.none
   266e8:	ldr	x0, [x23, #112]
   266ec:	add	w9, w8, #0x1
   266f0:	sxtw	x8, w8
   266f4:	add	x10, x0, x8, lsl #6
   266f8:	str	w9, [x23, #128]
   266fc:	str	xzr, [x10, #8]!
   26700:	stp	xzr, xzr, [x10, #8]
   26704:	ldr	q0, [x14]
   26708:	mov	x8, #0xffffffffffffffff    	// #-1
   2670c:	str	x8, [x10, #56]
   26710:	stp	xzr, xzr, [x10, #24]
   26714:	stur	q0, [x10, #40]
   26718:	ldr	w9, [x10, #48]
   2671c:	str	x10, [sp, #48]
   26720:	and	w8, w9, #0xfff3ffff
   26724:	str	w8, [x10, #48]
   26728:	ldr	x8, [x23, #152]
   2672c:	ldrb	w9, [x23, #176]
   26730:	add	x8, x8, #0x1
   26734:	orr	w9, w9, #0x2
   26738:	str	x8, [x23, #152]
   2673c:	strb	w9, [x23, #176]
   26740:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   26744:	ldr	x19, [x26, #48]
   26748:	mov	x0, x14
   2674c:	add	x8, x19, #0x1
   26750:	str	x8, [x26, #48]
   26754:	ldp	x20, x21, [sp, #32]
   26758:	orr	x2, x21, #0x800000
   2675c:	mov	x1, x20
   26760:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   26764:	ldr	x8, [x20, #72]
   26768:	ldr	x14, [sp, #56]
   2676c:	add	x8, x8, w0, sxtw
   26770:	str	x8, [x20, #72]
   26774:	ldrb	w8, [x14, #8]
   26778:	cmp	w8, #0x9
   2677c:	b.ne	26c38 <rpl_re_set_registers@@Base+0x1d24>  // b.any
   26780:	mov	x25, xzr
   26784:	cmp	x19, #0x8
   26788:	b.hi	267a4 <rpl_re_set_registers@@Base+0x1890>  // b.pmore
   2678c:	ldr	x8, [x23, #168]
   26790:	mov	w9, #0x1                   	// #1
   26794:	lsl	w9, w9, w19
   26798:	sxtw	x9, w9
   2679c:	orr	x8, x8, x9
   267a0:	str	x8, [x23, #168]
   267a4:	ldr	w8, [x23, #128]
   267a8:	cmp	w8, #0xf
   267ac:	b.eq	283a0 <rpl_re_set_registers@@Base+0x348c>  // b.none
   267b0:	ldr	x0, [x23, #112]
   267b4:	add	w9, w8, #0x1
   267b8:	sxtw	x8, w8
   267bc:	add	x8, x0, x8, lsl #6
   267c0:	str	w9, [x23, #128]
   267c4:	mov	x9, x8
   267c8:	mov	w10, #0x11                  	// #17
   267cc:	mov	x11, #0xffffffffffffffff    	// #-1
   267d0:	str	xzr, [x9, #8]!
   267d4:	stp	x25, xzr, [x9, #8]
   267d8:	str	w10, [x9, #48]
   267dc:	stp	xzr, xzr, [x9, #24]
   267e0:	str	x11, [x9, #56]
   267e4:	cbz	x25, 267ec <rpl_re_set_registers@@Base+0x18d8>
   267e8:	str	x9, [x25]
   267ec:	str	x9, [sp, #48]
   267f0:	str	x19, [x8, #48]
   267f4:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   267f8:	ldr	w8, [x23, #128]
   267fc:	cmp	w8, #0xf
   26800:	b.eq	28244 <rpl_re_set_registers@@Base+0x3330>  // b.none
   26804:	ldr	x0, [x23, #112]
   26808:	ldr	x10, [sp, #32]
   2680c:	add	w9, w8, #0x1
   26810:	sxtw	x8, w8
   26814:	add	x19, x0, x8, lsl #6
   26818:	str	w9, [x23, #128]
   2681c:	str	xzr, [x19, #8]!
   26820:	stp	xzr, xzr, [x19, #8]
   26824:	ldr	q0, [x14]
   26828:	mov	x9, #0xffffffffffffffff    	// #-1
   2682c:	stp	xzr, xzr, [x19, #24]
   26830:	str	x9, [x19, #56]
   26834:	stur	q0, [x19, #40]
   26838:	ldr	w8, [x19, #48]
   2683c:	and	w8, w8, #0xfff3ffff
   26840:	str	w8, [x19, #48]
   26844:	ldr	w8, [x23, #180]
   26848:	cmp	w8, #0x2
   2684c:	b.lt	26bd4 <rpl_re_set_registers@@Base+0x1cc0>  // b.tstop
   26850:	ldr	x9, [x10, #104]
   26854:	ldr	x8, [x10, #72]
   26858:	cmp	x9, x8
   2685c:	b.le	26bd4 <rpl_re_set_registers@@Base+0x1cc0>
   26860:	mov	w20, #0x10                  	// #16
   26864:	mov	x21, #0xffffffffffffffff    	// #-1
   26868:	ldr	x22, [sp, #32]
   2686c:	ldr	x9, [x22, #48]
   26870:	cmp	x8, x9
   26874:	b.eq	26bd4 <rpl_re_set_registers@@Base+0x1cc0>  // b.none
   26878:	ldr	x9, [x22, #16]
   2687c:	ldr	w8, [x9, x8, lsl #2]
   26880:	cmn	w8, #0x1
   26884:	b.ne	26bd4 <rpl_re_set_registers@@Base+0x1cc0>  // b.any
   26888:	ldr	x2, [sp, #40]
   2688c:	mov	x0, x14
   26890:	mov	x1, x22
   26894:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   26898:	ldr	x8, [x22, #72]
   2689c:	add	x8, x8, w0, sxtw
   268a0:	str	x8, [x22, #72]
   268a4:	ldr	w8, [x23, #128]
   268a8:	cmp	w8, #0xf
   268ac:	b.eq	2694c <rpl_re_set_registers@@Base+0x1a38>  // b.none
   268b0:	ldr	x0, [x23, #112]
   268b4:	add	w9, w8, #0x1
   268b8:	sxtw	x8, w8
   268bc:	add	x22, x0, x8, lsl #6
   268c0:	str	w9, [x23, #128]
   268c4:	str	xzr, [x22, #8]!
   268c8:	stp	xzr, xzr, [x22, #8]
   268cc:	ldr	x14, [sp, #56]
   268d0:	ldr	q0, [x14]
   268d4:	stp	xzr, xzr, [x22, #24]
   268d8:	str	x21, [x22, #56]
   268dc:	stur	q0, [x22, #40]
   268e0:	ldr	w8, [x22, #48]
   268e4:	and	w8, w8, #0xfff3ffff
   268e8:	str	w8, [x22, #48]
   268ec:	ldr	w8, [x23, #128]
   268f0:	cmp	w8, #0xf
   268f4:	b.eq	26984 <rpl_re_set_registers@@Base+0x1a70>  // b.none
   268f8:	ldr	x0, [x23, #112]
   268fc:	add	w9, w8, #0x1
   26900:	sxtw	x8, w8
   26904:	str	w9, [x23, #128]
   26908:	add	x9, x0, x8, lsl #6
   2690c:	str	xzr, [x9, #8]!
   26910:	stp	x19, x22, [x9, #8]
   26914:	str	w20, [x9, #48]
   26918:	stp	xzr, xzr, [x9, #24]
   2691c:	str	x21, [x9, #56]
   26920:	str	x9, [x19]
   26924:	cbz	x22, 28510 <rpl_re_set_registers@@Base+0x35fc>
   26928:	ldr	x8, [sp, #32]
   2692c:	str	x9, [x22]
   26930:	mov	x19, x9
   26934:	str	x19, [sp, #48]
   26938:	ldr	x9, [x8, #104]
   2693c:	ldr	x8, [x8, #72]
   26940:	cmp	x9, x8
   26944:	b.gt	26868 <rpl_re_set_registers@@Base+0x1954>
   26948:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   2694c:	mov	w0, #0x3c8                 	// #968
   26950:	bl	a550 <malloc@plt>
   26954:	cbz	x0, 26970 <rpl_re_set_registers@@Base+0x1a5c>
   26958:	ldr	x9, [x23, #112]
   2695c:	mov	w8, wzr
   26960:	str	x9, [x0]
   26964:	str	x0, [x23, #112]
   26968:	str	wzr, [x23, #128]
   2696c:	b	268b4 <rpl_re_set_registers@@Base+0x19a0>
   26970:	ldr	x14, [sp, #56]
   26974:	mov	x22, xzr
   26978:	ldr	w8, [x23, #128]
   2697c:	cmp	w8, #0xf
   26980:	b.ne	268f8 <rpl_re_set_registers@@Base+0x19e4>  // b.any
   26984:	mov	w0, #0x3c8                 	// #968
   26988:	bl	a550 <malloc@plt>
   2698c:	ldr	x14, [sp, #56]
   26990:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   26994:	ldr	x9, [x23, #112]
   26998:	mov	w8, wzr
   2699c:	str	x9, [x0]
   269a0:	str	x0, [x23, #112]
   269a4:	str	wzr, [x23, #128]
   269a8:	b	268fc <rpl_re_set_registers@@Base+0x19e8>
   269ac:	ldr	w8, [x23, #128]
   269b0:	cmp	w8, #0xf
   269b4:	b.eq	28270 <rpl_re_set_registers@@Base+0x335c>  // b.none
   269b8:	ldr	x0, [x23, #112]
   269bc:	add	w9, w8, #0x1
   269c0:	sxtw	x8, w8
   269c4:	add	x10, x0, x8, lsl #6
   269c8:	str	w9, [x23, #128]
   269cc:	str	xzr, [x10, #8]!
   269d0:	stp	xzr, xzr, [x10, #8]
   269d4:	ldr	q0, [x14]
   269d8:	mov	x9, #0xffffffffffffffff    	// #-1
   269dc:	stp	xzr, xzr, [x10, #24]
   269e0:	str	x9, [x10, #56]
   269e4:	stur	q0, [x10, #40]
   269e8:	ldr	w8, [x10, #48]
   269ec:	str	x10, [sp, #48]
   269f0:	and	w8, w8, #0xfff3ffff
   269f4:	str	w8, [x10, #48]
   269f8:	ldr	w8, [x23, #180]
   269fc:	cmp	w8, #0x2
   26a00:	b.lt	272cc <rpl_re_set_registers@@Base+0x23b8>  // b.tstop
   26a04:	ldrb	w8, [x23, #176]
   26a08:	orr	w8, w8, #0x2
   26a0c:	strb	w8, [x23, #176]
   26a10:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   26a14:	ldr	w8, [x14]
   26a18:	mov	w9, #0x30f                 	// #783
   26a1c:	tst	w8, w9
   26a20:	b.eq	26a50 <rpl_re_set_registers@@Base+0x1b3c>  // b.none
   26a24:	ldrb	w8, [x23, #176]
   26a28:	tbnz	w8, #4, 26a4c <rpl_re_set_registers@@Base+0x1b38>
   26a2c:	orr	w9, w8, #0x10
   26a30:	strb	w9, [x23, #176]
   26a34:	tbnz	w8, #3, 2844c <rpl_re_set_registers@@Base+0x3538>
   26a38:	adrp	x9, 34000 <vasnprintf@@Base+0x3474>
   26a3c:	ldr	q0, [x9, #336]
   26a40:	stur	q0, [x23, #184]
   26a44:	tbz	w8, #2, 28458 <rpl_re_set_registers@@Base+0x3544>
   26a48:	stp	xzr, xzr, [x23, #200]
   26a4c:	ldr	w8, [x14]
   26a50:	cmp	w8, #0x200
   26a54:	b.eq	27f94 <rpl_re_set_registers@@Base+0x3080>  // b.none
   26a58:	ldr	x21, [sp, #40]
   26a5c:	cmp	w8, #0x100
   26a60:	b.ne	28028 <rpl_re_set_registers@@Base+0x3114>  // b.any
   26a64:	mov	w8, #0x6                   	// #6
   26a68:	str	w8, [x14]
   26a6c:	ldr	w8, [x23, #128]
   26a70:	cmp	w8, #0xf
   26a74:	b.eq	283c8 <rpl_re_set_registers@@Base+0x34b4>  // b.none
   26a78:	ldr	x0, [x23, #112]
   26a7c:	add	w9, w8, #0x1
   26a80:	sxtw	x8, w8
   26a84:	add	x19, x0, x8, lsl #6
   26a88:	str	w9, [x23, #128]
   26a8c:	str	xzr, [x19, #8]!
   26a90:	stp	xzr, xzr, [x19, #8]
   26a94:	ldr	q0, [x14]
   26a98:	mov	x8, #0xffffffffffffffff    	// #-1
   26a9c:	str	x8, [x19, #56]
   26aa0:	stp	xzr, xzr, [x19, #24]
   26aa4:	stur	q0, [x19, #40]
   26aa8:	ldr	w9, [x19, #48]
   26aac:	and	w8, w9, #0xfff3ffff
   26ab0:	str	w8, [x19, #48]
   26ab4:	mov	w8, #0x9                   	// #9
   26ab8:	str	w8, [x14]
   26abc:	ldr	w8, [x23, #128]
   26ac0:	cmp	w8, #0xf
   26ac4:	b.eq	27ffc <rpl_re_set_registers@@Base+0x30e8>  // b.none
   26ac8:	ldr	x0, [x23, #112]
   26acc:	add	w9, w8, #0x1
   26ad0:	sxtw	x8, w8
   26ad4:	add	x20, x0, x8, lsl #6
   26ad8:	str	w9, [x23, #128]
   26adc:	str	xzr, [x20, #8]!
   26ae0:	stp	xzr, xzr, [x20, #8]
   26ae4:	ldr	q0, [x14]
   26ae8:	mov	x9, #0xffffffffffffffff    	// #-1
   26aec:	stp	xzr, xzr, [x20, #24]
   26af0:	str	x9, [x20, #56]
   26af4:	stur	q0, [x20, #40]
   26af8:	ldr	w8, [x20, #48]
   26afc:	and	w8, w8, #0xfff3ffff
   26b00:	str	w8, [x20, #48]
   26b04:	ldr	w8, [x23, #128]
   26b08:	cmp	w8, #0xf
   26b0c:	b.eq	284e8 <rpl_re_set_registers@@Base+0x35d4>  // b.none
   26b10:	ldr	x0, [x23, #112]
   26b14:	add	w9, w8, #0x1
   26b18:	sxtw	x8, w8
   26b1c:	add	x8, x0, x8, lsl #6
   26b20:	mov	w10, #0xa                   	// #10
   26b24:	mov	x11, #0xffffffffffffffff    	// #-1
   26b28:	str	w9, [x23, #128]
   26b2c:	str	xzr, [x8, #8]!
   26b30:	stp	x19, x20, [x8, #8]
   26b34:	str	w10, [x8, #48]
   26b38:	stp	xzr, xzr, [x8, #24]
   26b3c:	str	x11, [x8, #56]
   26b40:	cbz	x19, 26b48 <rpl_re_set_registers@@Base+0x1c34>
   26b44:	str	x8, [x19]
   26b48:	cbz	x20, 28510 <rpl_re_set_registers@@Base+0x35fc>
   26b4c:	str	x8, [x20]
   26b50:	cbnz	x19, 28074 <rpl_re_set_registers@@Base+0x3160>
   26b54:	b	28510 <rpl_re_set_registers@@Base+0x35fc>
   26b58:	mov	w8, #0x5                   	// #5
   26b5c:	str	xzr, [sp, #48]
   26b60:	str	w8, [x28]
   26b64:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   26b68:	mov	w0, #0x20                  	// #32
   26b6c:	mov	w1, #0x1                   	// #1
   26b70:	stur	xzr, [x29, #-16]
   26b74:	bl	a6c0 <calloc@plt>
   26b78:	mov	x25, x0
   26b7c:	mov	w0, #0x50                  	// #80
   26b80:	mov	w1, #0x1                   	// #1
   26b84:	bl	a6c0 <calloc@plt>
   26b88:	mov	x24, x0
   26b8c:	cbz	x25, 28298 <rpl_re_set_registers@@Base+0x3384>
   26b90:	cbz	x24, 28298 <rpl_re_set_registers@@Base+0x3384>
   26b94:	ldr	x21, [sp, #56]
   26b98:	ldp	x19, x20, [sp, #32]
   26b9c:	mov	x0, x21
   26ba0:	mov	x1, x19
   26ba4:	mov	x2, x20
   26ba8:	bl	289b4 <rpl_re_set_registers@@Base+0x3aa0>
   26bac:	ldr	w8, [x21, #8]
   26bb0:	mov	x2, x21
   26bb4:	mov	w3, w0
   26bb8:	and	w9, w8, #0xff
   26bbc:	cmp	w9, #0x19
   26bc0:	b.eq	26c68 <rpl_re_set_registers@@Base+0x1d54>  // b.none
   26bc4:	cmp	w9, #0x2
   26bc8:	b.eq	2822c <rpl_re_set_registers@@Base+0x3318>  // b.none
   26bcc:	str	wzr, [sp, #48]
   26bd0:	b	26cc0 <rpl_re_set_registers@@Base+0x1dac>
   26bd4:	str	x19, [sp, #48]
   26bd8:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   26bdc:	ldp	x19, x20, [sp, #32]
   26be0:	mov	x0, x14
   26be4:	mov	x21, x14
   26be8:	mov	x1, x19
   26bec:	mov	x2, x20
   26bf0:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   26bf4:	ldr	x8, [x19, #72]
   26bf8:	mov	x1, x26
   26bfc:	mov	x2, x21
   26c00:	mov	x3, x20
   26c04:	add	x8, x8, w0, sxtw
   26c08:	str	x8, [x19, #72]
   26c0c:	mov	x0, x19
   26c10:	mov	x4, x25
   26c14:	mov	x5, x28
   26c18:	ldp	x20, x19, [sp, #272]
   26c1c:	ldp	x22, x21, [sp, #256]
   26c20:	ldp	x24, x23, [sp, #240]
   26c24:	ldp	x26, x25, [sp, #224]
   26c28:	ldp	x28, x27, [sp, #208]
   26c2c:	ldp	x29, x30, [sp, #192]
   26c30:	add	sp, sp, #0x120
   26c34:	b	2652c <rpl_re_set_registers@@Base+0x1618>
   26c38:	add	x4, x25, #0x1
   26c3c:	mov	x0, x20
   26c40:	mov	x1, x26
   26c44:	mov	x2, x14
   26c48:	mov	x3, x21
   26c4c:	mov	x5, x28
   26c50:	mov	x20, x14
   26c54:	bl	25860 <rpl_re_set_registers@@Base+0x94c>
   26c58:	ldr	w8, [x28]
   26c5c:	cbz	w8, 2809c <rpl_re_set_registers@@Base+0x3188>
   26c60:	str	xzr, [sp, #48]
   26c64:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   26c68:	ldrb	w8, [x24, #32]
   26c6c:	orr	w8, w8, #0x1
   26c70:	strb	w8, [x24, #32]
   26c74:	tbz	w20, #8, 26c84 <rpl_re_set_registers@@Base+0x1d70>
   26c78:	ldr	x8, [x25]
   26c7c:	orr	x8, x8, #0x400
   26c80:	str	x8, [x25]
   26c84:	ldr	x8, [x19, #72]
   26c88:	mov	x0, x2
   26c8c:	mov	x1, x19
   26c90:	mov	x2, x20
   26c94:	add	x8, x8, w3, sxtw
   26c98:	str	x8, [x19, #72]
   26c9c:	bl	289b4 <rpl_re_set_registers@@Base+0x3aa0>
   26ca0:	ldr	x2, [sp, #56]
   26ca4:	ldr	w8, [x2, #8]
   26ca8:	and	w9, w8, #0xff
   26cac:	cmp	w9, #0x2
   26cb0:	b.eq	2822c <rpl_re_set_registers@@Base+0x3318>  // b.none
   26cb4:	mov	w3, w0
   26cb8:	mov	w9, #0x1                   	// #1
   26cbc:	str	w9, [sp, #48]
   26cc0:	and	w9, w8, #0xff
   26cc4:	cmp	w9, #0x15
   26cc8:	b.ne	26cd8 <rpl_re_set_registers@@Base+0x1dc4>  // b.any
   26ccc:	and	w8, w8, #0xffffff00
   26cd0:	orr	w8, w8, #0x1
   26cd4:	str	w8, [x2, #8]
   26cd8:	ldr	x4, [sp, #40]
   26cdc:	sub	x8, x29, #0x50
   26ce0:	mov	w27, #0x3                   	// #3
   26ce4:	sub	x0, x29, #0x20
   26ce8:	mov	w5, #0x1                   	// #1
   26cec:	mov	x1, x19
   26cf0:	stur	x8, [x29, #-24]
   26cf4:	stur	w27, [x29, #-32]
   26cf8:	mov	w21, #0x1                   	// #1
   26cfc:	bl	28b2c <rpl_re_set_registers@@Base+0x3c18>
   26d00:	cbnz	w0, 281fc <rpl_re_set_registers@@Base+0x32e8>
   26d04:	ldr	x20, [sp, #40]
   26d08:	ldr	x22, [sp, #56]
   26d0c:	stp	xzr, xzr, [sp, #8]
   26d10:	mov	x0, x22
   26d14:	mov	x1, x19
   26d18:	mov	x2, x20
   26d1c:	bl	289b4 <rpl_re_set_registers@@Base+0x3aa0>
   26d20:	ldur	w22, [x29, #-32]
   26d24:	mov	w26, w0
   26d28:	cmp	w22, #0x2
   26d2c:	b.eq	26ea8 <rpl_re_set_registers@@Base+0x1f94>  // b.none
   26d30:	cmp	w22, #0x4
   26d34:	b.ne	26d64 <rpl_re_set_registers@@Base+0x1e50>  // b.any
   26d38:	ldr	x0, [x19, #120]
   26d3c:	ldur	x4, [x29, #-24]
   26d40:	ldr	x5, [sp, #40]
   26d44:	sub	x3, x29, #0x10
   26d48:	mov	x1, x25
   26d4c:	mov	x2, x24
   26d50:	bl	28e0c <rpl_re_set_registers@@Base+0x3ef8>
   26d54:	ldr	x14, [sp, #56]
   26d58:	str	w0, [x28]
   26d5c:	cbz	w0, 26ee4 <rpl_re_set_registers@@Base+0x1fd0>
   26d60:	b	2835c <rpl_re_set_registers@@Base+0x3448>
   26d64:	ldr	x8, [sp, #56]
   26d68:	ldrb	w8, [x8, #8]
   26d6c:	cmp	w8, #0x16
   26d70:	b.eq	26d80 <rpl_re_set_registers@@Base+0x1e6c>  // b.none
   26d74:	cmp	w8, #0x2
   26d78:	b.ne	26e84 <rpl_re_set_registers@@Base+0x1f70>  // b.any
   26d7c:	b	281f0 <rpl_re_set_registers@@Base+0x32dc>
   26d80:	ldr	x8, [x19, #72]
   26d84:	ldr	x2, [sp, #40]
   26d88:	add	x0, sp, #0x40
   26d8c:	mov	x1, x19
   26d90:	add	x8, x8, w26, sxtw
   26d94:	str	x8, [x19, #72]
   26d98:	bl	289b4 <rpl_re_set_registers@@Base+0x3aa0>
   26d9c:	ldrb	w8, [sp, #72]
   26da0:	cmp	w8, #0x15
   26da4:	b.eq	26e6c <rpl_re_set_registers@@Base+0x1f58>  // b.none
   26da8:	cmp	w8, #0x2
   26dac:	str	x28, [sp, #24]
   26db0:	b.eq	281f4 <rpl_re_set_registers@@Base+0x32e0>  // b.none
   26db4:	ldr	x20, [sp, #40]
   26db8:	mov	w3, w0
   26dbc:	add	x8, sp, #0x50
   26dc0:	sub	x0, x29, #0x30
   26dc4:	add	x2, sp, #0x40
   26dc8:	mov	w5, #0x1                   	// #1
   26dcc:	mov	x1, x19
   26dd0:	mov	x4, x20
   26dd4:	stur	x8, [x29, #-40]
   26dd8:	stur	w27, [x29, #-48]
   26ddc:	bl	28b2c <rpl_re_set_registers@@Base+0x3c18>
   26de0:	cbnz	w0, 28354 <rpl_re_set_registers@@Base+0x3440>
   26de4:	ldr	x0, [sp, #56]
   26de8:	mov	x1, x19
   26dec:	mov	x2, x20
   26df0:	bl	289b4 <rpl_re_set_registers@@Base+0x3aa0>
   26df4:	ldr	w8, [x23, #180]
   26df8:	ldur	w19, [x29, #-48]
   26dfc:	mov	w26, w0
   26e00:	mov	w0, #0xb                   	// #11
   26e04:	cmp	w8, #0x1
   26e08:	csel	x20, x24, xzr, gt
   26e0c:	cmp	w19, #0x2
   26e10:	b.eq	28354 <rpl_re_set_registers@@Base+0x3440>  // b.none
   26e14:	ldr	x14, [sp, #56]
   26e18:	cmp	w19, #0x4
   26e1c:	b.eq	28354 <rpl_re_set_registers@@Base+0x3440>  // b.none
   26e20:	cmp	w22, #0x3
   26e24:	b.ne	26e3c <rpl_re_set_registers@@Base+0x1f28>  // b.any
   26e28:	ldur	x0, [x29, #-24]
   26e2c:	bl	a290 <strlen@plt>
   26e30:	ldr	x14, [sp, #56]
   26e34:	cmp	x0, #0x1
   26e38:	b.hi	28350 <rpl_re_set_registers@@Base+0x343c>  // b.pmore
   26e3c:	cmp	w19, #0x3
   26e40:	b.ne	26e58 <rpl_re_set_registers@@Base+0x1f44>  // b.any
   26e44:	ldur	x0, [x29, #-40]
   26e48:	bl	a290 <strlen@plt>
   26e4c:	ldr	x14, [sp, #56]
   26e50:	cmp	x0, #0x1
   26e54:	b.hi	28350 <rpl_re_set_registers@@Base+0x343c>  // b.pmore
   26e58:	cmp	w22, #0x3
   26e5c:	b.eq	26f80 <rpl_re_set_registers@@Base+0x206c>  // b.none
   26e60:	cbnz	w22, 26f8c <rpl_re_set_registers@@Base+0x2078>
   26e64:	ldurb	w27, [x29, #-24]
   26e68:	b	26f90 <rpl_re_set_registers@@Base+0x207c>
   26e6c:	ldr	x8, [x19, #72]
   26e70:	neg	w9, w26
   26e74:	add	x8, x8, w9, sxtw
   26e78:	str	x8, [x19, #72]
   26e7c:	ldr	x8, [sp, #56]
   26e80:	strb	w21, [x8, #8]
   26e84:	cmp	w22, #0x3
   26e88:	b.hi	28640 <rpl_re_set_registers@@Base+0x372c>  // b.pmore
   26e8c:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   26e90:	mov	w8, w22
   26e94:	add	x11, x11, #0x292
   26e98:	adr	x9, 26ea8 <rpl_re_set_registers@@Base+0x1f94>
   26e9c:	ldrb	w10, [x11, x8]
   26ea0:	add	x9, x9, x10, lsl #2
   26ea4:	br	x9
   26ea8:	ldur	x27, [x29, #-24]
   26eac:	mov	x0, x27
   26eb0:	bl	a290 <strlen@plt>
   26eb4:	cmp	x0, #0x1
   26eb8:	b.ne	2834c <rpl_re_set_registers@@Base+0x3438>  // b.any
   26ebc:	ldrb	w8, [x27]
   26ec0:	mov	w27, #0x3                   	// #3
   26ec4:	lsr	x9, x8, #3
   26ec8:	and	x9, x9, #0x18
   26ecc:	ldr	x10, [x25, x9]
   26ed0:	lsl	x8, x21, x8
   26ed4:	orr	x8, x8, x10
   26ed8:	str	x8, [x25, x9]
   26edc:	ldr	x14, [sp, #56]
   26ee0:	str	wzr, [x28]
   26ee4:	ldrb	w8, [x14, #8]
   26ee8:	cmp	w8, #0x15
   26eec:	b.eq	27134 <rpl_re_set_registers@@Base+0x2220>  // b.none
   26ef0:	cmp	w8, #0x2
   26ef4:	b.eq	281f0 <rpl_re_set_registers@@Base+0x32dc>  // b.none
   26ef8:	ldr	x20, [sp, #40]
   26efc:	sub	x8, x29, #0x50
   26f00:	sub	x0, x29, #0x20
   26f04:	mov	x1, x19
   26f08:	mov	x2, x14
   26f0c:	mov	w3, w26
   26f10:	mov	x4, x20
   26f14:	mov	w5, wzr
   26f18:	stur	x8, [x29, #-24]
   26f1c:	stur	w27, [x29, #-32]
   26f20:	mov	x22, x14
   26f24:	bl	28b2c <rpl_re_set_registers@@Base+0x3c18>
   26f28:	cbz	w0, 26d10 <rpl_re_set_registers@@Base+0x1dfc>
   26f2c:	b	281fc <rpl_re_set_registers@@Base+0x32e8>
   26f30:	ldurb	w8, [x29, #-24]
   26f34:	ldr	x14, [sp, #56]
   26f38:	lsr	x9, x8, #3
   26f3c:	and	x9, x9, #0x18
   26f40:	ldr	x10, [x25, x9]
   26f44:	lsl	x8, x21, x8
   26f48:	orr	x8, x8, x10
   26f4c:	str	x8, [x25, x9]
   26f50:	b	26ee4 <rpl_re_set_registers@@Base+0x1fd0>
   26f54:	ldr	x8, [x24, #40]
   26f58:	ldr	x9, [sp, #16]
   26f5c:	cmp	x9, x8
   26f60:	b.eq	270a4 <rpl_re_set_registers@@Base+0x2190>  // b.none
   26f64:	ldr	x0, [x24]
   26f68:	ldr	x14, [sp, #56]
   26f6c:	ldur	w9, [x29, #-24]
   26f70:	add	x10, x8, #0x1
   26f74:	str	x10, [x24, #40]
   26f78:	str	w9, [x0, x8, lsl #2]
   26f7c:	b	26ee4 <rpl_re_set_registers@@Base+0x1fd0>
   26f80:	ldur	x8, [x29, #-24]
   26f84:	ldrb	w27, [x8]
   26f88:	b	26f90 <rpl_re_set_registers@@Base+0x207c>
   26f8c:	mov	w27, wzr
   26f90:	cmp	w19, #0x3
   26f94:	b.eq	26fa4 <rpl_re_set_registers@@Base+0x2090>  // b.none
   26f98:	cbnz	w19, 26fb0 <rpl_re_set_registers@@Base+0x209c>
   26f9c:	ldurb	w28, [x29, #-40]
   26fa0:	b	26fb4 <rpl_re_set_registers@@Base+0x20a0>
   26fa4:	ldur	x8, [x29, #-40]
   26fa8:	ldrb	w28, [x8]
   26fac:	b	26fb4 <rpl_re_set_registers@@Base+0x20a0>
   26fb0:	mov	w28, wzr
   26fb4:	cmp	w22, #0x3
   26fb8:	b.eq	26fc0 <rpl_re_set_registers@@Base+0x20ac>  // b.none
   26fbc:	cbnz	w22, 26fd8 <rpl_re_set_registers@@Base+0x20c4>
   26fc0:	cbz	x20, 26fdc <rpl_re_set_registers@@Base+0x20c8>
   26fc4:	mov	w0, w27
   26fc8:	bl	a820 <btowc@plt>
   26fcc:	ldr	x14, [sp, #56]
   26fd0:	mov	w27, w0
   26fd4:	b	26fdc <rpl_re_set_registers@@Base+0x20c8>
   26fd8:	ldur	w27, [x29, #-24]
   26fdc:	cmp	w19, #0x3
   26fe0:	b.eq	26fe8 <rpl_re_set_registers@@Base+0x20d4>  // b.none
   26fe4:	cbnz	w19, 27000 <rpl_re_set_registers@@Base+0x20ec>
   26fe8:	cbz	x20, 27004 <rpl_re_set_registers@@Base+0x20f0>
   26fec:	mov	w0, w28
   26ff0:	bl	a820 <btowc@plt>
   26ff4:	ldr	x14, [sp, #56]
   26ff8:	mov	w28, w0
   26ffc:	b	27004 <rpl_re_set_registers@@Base+0x20f0>
   27000:	ldur	w28, [x29, #-40]
   27004:	cmn	w27, #0x1
   27008:	mov	w0, #0x3                   	// #3
   2700c:	b.eq	28354 <rpl_re_set_registers@@Base+0x3440>  // b.none
   27010:	cmn	w28, #0x1
   27014:	b.eq	28354 <rpl_re_set_registers@@Base+0x3440>  // b.none
   27018:	ldr	x8, [sp, #40]
   2701c:	tbz	w8, #16, 27028 <rpl_re_set_registers@@Base+0x2114>
   27020:	cmp	w27, w28
   27024:	b.hi	285c0 <rpl_re_set_registers@@Base+0x36ac>  // b.pmore
   27028:	cbz	x20, 27054 <rpl_re_set_registers@@Base+0x2140>
   2702c:	ldr	x8, [x20, #64]
   27030:	ldr	x9, [sp, #8]
   27034:	cmp	x9, x8
   27038:	b.eq	270dc <rpl_re_set_registers@@Base+0x21c8>  // b.none
   2703c:	ldp	x22, x10, [x20, #8]
   27040:	lsl	x9, x8, #2
   27044:	add	x8, x8, #0x1
   27048:	str	w27, [x22, x9]
   2704c:	str	x8, [x20, #64]
   27050:	str	w28, [x10, x9]
   27054:	mov	w9, w28
   27058:	ldp	x28, x19, [sp, #24]
   2705c:	mov	x8, xzr
   27060:	mov	w10, w27
   27064:	mov	w27, #0x3                   	// #3
   27068:	b	27078 <rpl_re_set_registers@@Base+0x2164>
   2706c:	add	x8, x8, #0x1
   27070:	cmp	x8, #0x100
   27074:	b.eq	26ee0 <rpl_re_set_registers@@Base+0x1fcc>  // b.none
   27078:	cmp	x8, x10
   2707c:	b.cc	2706c <rpl_re_set_registers@@Base+0x2158>  // b.lo, b.ul, b.last
   27080:	cmp	x8, x9
   27084:	b.hi	2706c <rpl_re_set_registers@@Base+0x2158>  // b.pmore
   27088:	lsr	x11, x8, #3
   2708c:	and	x11, x11, #0x1ffffffffffffff8
   27090:	ldr	x12, [x25, x11]
   27094:	lsl	x13, x21, x8
   27098:	orr	x12, x12, x13
   2709c:	str	x12, [x25, x11]
   270a0:	b	2706c <rpl_re_set_registers@@Base+0x2158>
   270a4:	ldr	x8, [sp, #16]
   270a8:	ldr	x0, [x24]
   270ac:	mov	w19, #0x1                   	// #1
   270b0:	bfi	x19, x8, #1, #63
   270b4:	lsl	x1, x19, #2
   270b8:	bl	a730 <realloc@plt>
   270bc:	cbz	x0, 2861c <rpl_re_set_registers@@Base+0x3708>
   270c0:	ldr	x8, [x24, #40]
   270c4:	str	x19, [sp, #16]
   270c8:	ldr	x19, [sp, #32]
   270cc:	ldr	x14, [sp, #56]
   270d0:	mov	w27, #0x3                   	// #3
   270d4:	str	x0, [x24]
   270d8:	b	26f6c <rpl_re_set_registers@@Base+0x2058>
   270dc:	ldr	x8, [sp, #8]
   270e0:	ldr	x0, [x20, #8]
   270e4:	mov	w19, #0x1                   	// #1
   270e8:	bfi	x19, x8, #1, #63
   270ec:	lsl	x1, x19, #2
   270f0:	str	x1, [sp, #8]
   270f4:	bl	a730 <realloc@plt>
   270f8:	ldr	x8, [x20, #16]
   270fc:	ldr	x1, [sp, #8]
   27100:	mov	x22, x0
   27104:	mov	x0, x8
   27108:	bl	a730 <realloc@plt>
   2710c:	str	x0, [sp]
   27110:	cbz	x22, 28628 <rpl_re_set_registers@@Base+0x3714>
   27114:	ldr	x8, [sp]
   27118:	cbz	x8, 28628 <rpl_re_set_registers@@Base+0x3714>
   2711c:	ldr	x10, [sp]
   27120:	ldr	x8, [x20, #64]
   27124:	stp	x22, x10, [x20, #8]
   27128:	ldr	x14, [sp, #56]
   2712c:	str	x19, [sp, #8]
   27130:	b	27040 <rpl_re_set_registers@@Base+0x212c>
   27134:	ldr	x8, [x19, #72]
   27138:	add	x8, x8, w26, sxtw
   2713c:	str	x8, [x19, #72]
   27140:	ldr	w8, [sp, #48]
   27144:	cbz	w8, 27170 <rpl_re_set_registers@@Base+0x225c>
   27148:	ldp	q0, q1, [x25]
   2714c:	mvn	v0.16b, v0.16b
   27150:	mvn	v1.16b, v1.16b
   27154:	stp	q0, q1, [x25]
   27158:	ldr	w8, [x23, #180]
   2715c:	cmp	w8, #0x2
   27160:	b.ge	2717c <rpl_re_set_registers@@Base+0x2268>  // b.tcont
   27164:	ldr	x9, [x24, #40]
   27168:	cbnz	x9, 271d8 <rpl_re_set_registers@@Base+0x22c4>
   2716c:	b	271c0 <rpl_re_set_registers@@Base+0x22ac>
   27170:	ldr	w8, [x23, #180]
   27174:	cmp	w8, #0x2
   27178:	b.lt	27164 <rpl_re_set_registers@@Base+0x2250>  // b.tstop
   2717c:	ldr	x9, [x23, #120]
   27180:	ldp	x11, x12, [x25]
   27184:	ldr	x10, [x9]
   27188:	and	x10, x11, x10
   2718c:	str	x10, [x25]
   27190:	ldr	x10, [x9, #8]
   27194:	and	x10, x12, x10
   27198:	str	x10, [x25, #8]
   2719c:	ldr	x10, [x9, #16]
   271a0:	ldp	x11, x12, [x25, #16]
   271a4:	and	x10, x11, x10
   271a8:	str	x10, [x25, #16]
   271ac:	ldr	x9, [x9, #24]
   271b0:	and	x9, x12, x9
   271b4:	str	x9, [x25, #24]
   271b8:	ldr	x9, [x24, #40]
   271bc:	cbnz	x9, 271d8 <rpl_re_set_registers@@Base+0x22c4>
   271c0:	ldr	x9, [x24, #48]
   271c4:	cbnz	x9, 271d8 <rpl_re_set_registers@@Base+0x22c4>
   271c8:	ldr	x9, [x24, #56]
   271cc:	cbnz	x9, 271d8 <rpl_re_set_registers@@Base+0x22c4>
   271d0:	ldr	x9, [x24, #64]
   271d4:	cbz	x9, 28150 <rpl_re_set_registers@@Base+0x323c>
   271d8:	ldrb	w9, [x23, #176]
   271dc:	ldr	w8, [x23, #128]
   271e0:	orr	w9, w9, #0x2
   271e4:	cmp	w8, #0xf
   271e8:	strb	w9, [x23, #176]
   271ec:	b.eq	282d4 <rpl_re_set_registers@@Base+0x33c0>  // b.none
   271f0:	ldr	x0, [x23, #112]
   271f4:	add	w9, w8, #0x1
   271f8:	sxtw	x8, w8
   271fc:	add	x19, x0, x8, lsl #6
   27200:	mov	w10, #0x6                   	// #6
   27204:	mov	x11, #0xffffffffffffffff    	// #-1
   27208:	str	w9, [x23, #128]
   2720c:	str	xzr, [x19, #8]!
   27210:	stp	xzr, xzr, [x19, #16]
   27214:	str	xzr, [x19, #8]
   27218:	str	w10, [x19, #48]
   2721c:	stp	xzr, x24, [x19, #32]
   27220:	str	x11, [x19, #56]
   27224:	ldr	x8, [x25]
   27228:	cbnz	x8, 27244 <rpl_re_set_registers@@Base+0x2330>
   2722c:	ldr	x8, [x25, #8]
   27230:	cbnz	x8, 27244 <rpl_re_set_registers@@Base+0x2330>
   27234:	ldr	x8, [x25, #16]
   27238:	cbnz	x8, 27244 <rpl_re_set_registers@@Base+0x2330>
   2723c:	ldr	x8, [x25, #24]
   27240:	cbz	x8, 281dc <rpl_re_set_registers@@Base+0x32c8>
   27244:	ldr	w8, [x23, #128]
   27248:	cmp	w8, #0xf
   2724c:	b.eq	282fc <rpl_re_set_registers@@Base+0x33e8>  // b.none
   27250:	ldr	x0, [x23, #112]
   27254:	add	w9, w8, #0x1
   27258:	sxtw	x8, w8
   2725c:	add	x20, x0, x8, lsl #6
   27260:	str	w9, [x23, #128]
   27264:	mov	w9, #0x3                   	// #3
   27268:	mov	x8, #0xffffffffffffffff    	// #-1
   2726c:	str	xzr, [x20, #8]!
   27270:	stp	xzr, xzr, [x20, #16]
   27274:	str	xzr, [x20, #8]
   27278:	str	w9, [x20, #48]
   2727c:	stp	xzr, x25, [x20, #32]
   27280:	str	x8, [x20, #56]
   27284:	ldr	w8, [x23, #128]
   27288:	cmp	w8, #0xf
   2728c:	b.eq	28324 <rpl_re_set_registers@@Base+0x3410>  // b.none
   27290:	ldr	x0, [x23, #112]
   27294:	add	w9, w8, #0x1
   27298:	sxtw	x8, w8
   2729c:	add	x8, x0, x8, lsl #6
   272a0:	mov	w10, #0xa                   	// #10
   272a4:	mov	x11, #0xffffffffffffffff    	// #-1
   272a8:	str	w9, [x23, #128]
   272ac:	str	xzr, [x8, #8]!
   272b0:	stp	x20, x19, [x8, #8]
   272b4:	str	w10, [x8, #48]
   272b8:	stp	xzr, xzr, [x8, #24]
   272bc:	str	x11, [x8, #56]
   272c0:	str	x8, [x20]
   272c4:	str	x8, [sp, #48]
   272c8:	str	x8, [x19]
   272cc:	ldp	x20, x21, [sp, #32]
   272d0:	mov	x0, x14
   272d4:	str	x28, [sp, #24]
   272d8:	mov	x1, x20
   272dc:	mov	x2, x21
   272e0:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   272e4:	ldr	x8, [x20, #72]
   272e8:	ldp	x9, x12, [sp, #48]
   272ec:	add	x25, x23, #0x80
   272f0:	add	x26, x23, #0x70
   272f4:	mov	w23, #0x1                   	// #1
   272f8:	mov	x28, #0xffffffffffffffff    	// #-1
   272fc:	add	x8, x8, w0, sxtw
   27300:	str	x8, [x20, #72]
   27304:	ldrb	w8, [x12, #8]
   27308:	str	x9, [sp, #48]
   2730c:	cmp	w8, #0x17
   27310:	b.hi	27ee4 <rpl_re_set_registers@@Base+0x2fd0>  // b.pmore
   27314:	mov	w10, #0x800                 	// #2048
   27318:	lsl	w9, w23, w8
   2731c:	movk	w10, #0x8c, lsl #16
   27320:	tst	w9, w10
   27324:	b.eq	27ee4 <rpl_re_set_registers@@Base+0x2fd0>  // b.none
   27328:	ldr	q0, [x12]
   2732c:	ldr	x19, [x20, #72]
   27330:	mov	w24, #0xa                   	// #10
   27334:	cmp	w8, #0x17
   27338:	stur	q0, [x29, #-80]
   2733c:	b.ne	273dc <rpl_re_set_registers@@Base+0x24c8>  // b.any
   27340:	mov	x10, #0xffffffffffffffff    	// #-1
   27344:	mov	x0, x12
   27348:	mov	x1, x20
   2734c:	mov	x2, x21
   27350:	mov	x22, x10
   27354:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   27358:	ldr	x8, [x20, #72]
   2735c:	ldr	x12, [sp, #56]
   27360:	add	x8, x8, w0, sxtw
   27364:	str	x8, [x20, #72]
   27368:	ldrb	w8, [x12, #8]
   2736c:	ldrb	w9, [x12]
   27370:	cmp	w8, #0x18
   27374:	b.eq	273f4 <rpl_re_set_registers@@Base+0x24e0>  // b.none
   27378:	cmp	w8, #0x2
   2737c:	b.eq	27a30 <rpl_re_set_registers@@Base+0x2b1c>  // b.none
   27380:	cmp	w9, #0x2c
   27384:	b.eq	273f4 <rpl_re_set_registers@@Base+0x24e0>  // b.none
   27388:	cmp	w9, #0x30
   2738c:	mov	x10, #0xfffffffffffffffe    	// #-2
   27390:	b.cc	27344 <rpl_re_set_registers@@Base+0x2430>  // b.lo, b.ul, b.last
   27394:	cmp	w8, #0x1
   27398:	b.ne	27344 <rpl_re_set_registers@@Base+0x2430>  // b.any
   2739c:	cmn	x22, #0x2
   273a0:	mov	x10, #0xfffffffffffffffe    	// #-2
   273a4:	b.eq	27344 <rpl_re_set_registers@@Base+0x2430>  // b.none
   273a8:	cmp	w9, #0x39
   273ac:	b.hi	27344 <rpl_re_set_registers@@Base+0x2430>  // b.pmore
   273b0:	cmn	x22, #0x1
   273b4:	b.eq	273d4 <rpl_re_set_registers@@Base+0x24c0>  // b.none
   273b8:	madd	x8, x22, x24, x9
   273bc:	mov	w10, #0x8030                	// #32816
   273c0:	sub	x9, x8, #0x30
   273c4:	cmp	x8, x10
   273c8:	mov	w8, #0x8000                	// #32768
   273cc:	csel	x10, x8, x9, gt
   273d0:	b	27344 <rpl_re_set_registers@@Base+0x2430>
   273d4:	sub	x10, x9, #0x30
   273d8:	b	27344 <rpl_re_set_registers@@Base+0x2430>
   273dc:	cmp	w8, #0x12
   273e0:	cset	w22, eq  // eq = none
   273e4:	cmp	w8, #0x13
   273e8:	mov	w8, #0x1                   	// #1
   273ec:	cneg	x23, x8, ne  // ne = any
   273f0:	b	27528 <rpl_re_set_registers@@Base+0x2614>
   273f4:	cmn	x22, #0x1
   273f8:	b.ne	27414 <rpl_re_set_registers@@Base+0x2500>  // b.any
   273fc:	cmp	w9, #0x2c
   27400:	b.ne	274d4 <rpl_re_set_registers@@Base+0x25c0>  // b.any
   27404:	cmp	w8, #0x1
   27408:	b.ne	274d4 <rpl_re_set_registers@@Base+0x25c0>  // b.any
   2740c:	mov	x22, xzr
   27410:	b	27434 <rpl_re_set_registers@@Base+0x2520>
   27414:	cmn	x22, #0x2
   27418:	b.eq	27a30 <rpl_re_set_registers@@Base+0x2b1c>  // b.none
   2741c:	cmp	w8, #0x18
   27420:	b.eq	274e8 <rpl_re_set_registers@@Base+0x25d4>  // b.none
   27424:	cmp	w8, #0x1
   27428:	b.ne	27a30 <rpl_re_set_registers@@Base+0x2b1c>  // b.any
   2742c:	cmp	w9, #0x2c
   27430:	b.ne	27a30 <rpl_re_set_registers@@Base+0x2b1c>  // b.any
   27434:	mov	x10, #0xffffffffffffffff    	// #-1
   27438:	mov	x0, x12
   2743c:	mov	x1, x20
   27440:	mov	x2, x21
   27444:	mov	x23, x10
   27448:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   2744c:	ldr	x8, [x20, #72]
   27450:	ldr	x12, [sp, #56]
   27454:	add	x8, x8, w0, sxtw
   27458:	str	x8, [x20, #72]
   2745c:	ldrb	w8, [x12, #8]
   27460:	cmp	w8, #0x18
   27464:	b.eq	274ec <rpl_re_set_registers@@Base+0x25d8>  // b.none
   27468:	cmp	w8, #0x2
   2746c:	b.eq	27a2c <rpl_re_set_registers@@Base+0x2b18>  // b.none
   27470:	ldrb	w9, [x12]
   27474:	mov	w11, #0xa                   	// #10
   27478:	cmp	w9, #0x2c
   2747c:	b.eq	274f0 <rpl_re_set_registers@@Base+0x25dc>  // b.none
   27480:	cmp	w9, #0x30
   27484:	mov	x10, #0xfffffffffffffffe    	// #-2
   27488:	b.cc	27438 <rpl_re_set_registers@@Base+0x2524>  // b.lo, b.ul, b.last
   2748c:	cmp	w8, #0x1
   27490:	b.ne	27438 <rpl_re_set_registers@@Base+0x2524>  // b.any
   27494:	cmn	x23, #0x2
   27498:	mov	x10, #0xfffffffffffffffe    	// #-2
   2749c:	b.eq	27438 <rpl_re_set_registers@@Base+0x2524>  // b.none
   274a0:	cmp	w9, #0x39
   274a4:	b.hi	27438 <rpl_re_set_registers@@Base+0x2524>  // b.pmore
   274a8:	cmn	x23, #0x1
   274ac:	b.eq	274cc <rpl_re_set_registers@@Base+0x25b8>  // b.none
   274b0:	madd	x8, x23, x11, x9
   274b4:	mov	w10, #0x8030                	// #32816
   274b8:	sub	x9, x8, #0x30
   274bc:	cmp	x8, x10
   274c0:	mov	w8, #0x8000                	// #32768
   274c4:	csel	x10, x8, x9, gt
   274c8:	b	27438 <rpl_re_set_registers@@Base+0x2524>
   274cc:	sub	x10, x9, #0x30
   274d0:	b	27438 <rpl_re_set_registers@@Base+0x2524>
   274d4:	ldr	x8, [sp, #24]
   274d8:	mov	x14, xzr
   274dc:	mov	w9, #0xa                   	// #10
   274e0:	str	w9, [x8]
   274e4:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   274e8:	mov	x23, x22
   274ec:	mov	w11, #0xa                   	// #10
   274f0:	cmn	x23, #0x2
   274f4:	b.eq	27a2c <rpl_re_set_registers@@Base+0x2b18>  // b.none
   274f8:	cmn	x23, #0x1
   274fc:	cset	w9, eq  // eq = none
   27500:	cmp	x22, x23
   27504:	cset	w10, le
   27508:	cmp	w8, #0x18
   2750c:	b.ne	27c74 <rpl_re_set_registers@@Base+0x2d60>  // b.any
   27510:	orr	w8, w10, w9
   27514:	tbz	w8, #0, 27c74 <rpl_re_set_registers@@Base+0x2d60>
   27518:	cmn	x23, #0x1
   2751c:	csel	x8, x22, x23, eq  // eq = none
   27520:	cmp	x8, #0x8, lsl #12
   27524:	b.ge	27df4 <rpl_re_set_registers@@Base+0x2ee0>  // b.tcont
   27528:	mov	x0, x12
   2752c:	mov	x1, x20
   27530:	mov	x2, x21
   27534:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   27538:	ldr	x8, [x20, #72]
   2753c:	ldr	x19, [sp, #48]
   27540:	add	x8, x8, w0, sxtw
   27544:	str	x8, [x20, #72]
   27548:	cbz	x19, 2791c <rpl_re_set_registers@@Base+0x2a08>
   2754c:	ldr	x12, [sp, #56]
   27550:	orr	x8, x23, x22
   27554:	mov	w13, #0xa                   	// #10
   27558:	cbz	x8, 27928 <rpl_re_set_registers@@Base+0x2a14>
   2755c:	cmp	x22, #0x1
   27560:	b.ge	279cc <rpl_re_set_registers@@Base+0x2ab8>  // b.tcont
   27564:	mov	x14, xzr
   27568:	mov	x21, x19
   2756c:	ldrb	w8, [x21, #48]
   27570:	cmp	w8, #0x11
   27574:	b.ne	275dc <rpl_re_set_registers@@Base+0x26c8>  // b.any
   27578:	ldr	x8, [x21, #40]
   2757c:	mov	x10, x21
   27580:	mov	x9, x10
   27584:	ldr	x10, [x10, #8]
   27588:	cbnz	x10, 27580 <rpl_re_set_registers@@Base+0x266c>
   2758c:	ldr	x10, [x9, #16]
   27590:	cbnz	x10, 27580 <rpl_re_set_registers@@Base+0x266c>
   27594:	ldr	w10, [x9, #48]
   27598:	and	w11, w10, #0xff
   2759c:	cmp	w11, #0x11
   275a0:	b.ne	275b8 <rpl_re_set_registers@@Base+0x26a4>  // b.any
   275a4:	ldr	x11, [x9, #40]
   275a8:	cmp	x11, x8
   275ac:	b.ne	275b8 <rpl_re_set_registers@@Base+0x26a4>  // b.any
   275b0:	orr	w10, w10, #0x80000
   275b4:	str	w10, [x9, #48]
   275b8:	ldr	x11, [x9]
   275bc:	cbz	x11, 275dc <rpl_re_set_registers@@Base+0x26c8>
   275c0:	ldr	x10, [x11, #16]
   275c4:	cmp	x10, x9
   275c8:	mov	x9, x11
   275cc:	b.eq	27594 <rpl_re_set_registers@@Base+0x2680>  // b.none
   275d0:	mov	x9, x11
   275d4:	cbz	x10, 27594 <rpl_re_set_registers@@Base+0x2680>
   275d8:	b	27580 <rpl_re_set_registers@@Base+0x266c>
   275dc:	ldr	w8, [x25]
   275e0:	cmn	x23, #0x1
   275e4:	cinc	w19, w13, eq  // eq = none
   275e8:	cmp	w8, #0xf
   275ec:	b.eq	279f4 <rpl_re_set_registers@@Base+0x2ae0>  // b.none
   275f0:	ldr	x0, [x26]
   275f4:	mov	w11, #0x10                  	// #16
   275f8:	add	w9, w8, #0x1
   275fc:	sxtw	x8, w8
   27600:	add	x22, x22, #0x2
   27604:	add	x27, x0, x8, lsl #6
   27608:	str	w9, [x25]
   2760c:	cmp	x22, x23
   27610:	str	xzr, [x27, #8]!
   27614:	stp	x21, xzr, [x27, #8]
   27618:	str	w19, [x27, #48]
   2761c:	stp	xzr, xzr, [x27, #24]
   27620:	str	x28, [x27, #56]
   27624:	str	x27, [x21]
   27628:	b.gt	278c0 <rpl_re_set_registers@@Base+0x29ac>
   2762c:	mov	x20, x27
   27630:	ldr	w8, [x25]
   27634:	cmp	w8, #0xf
   27638:	b.eq	27800 <rpl_re_set_registers@@Base+0x28ec>  // b.none
   2763c:	ldr	x0, [x26]
   27640:	add	w10, w8, #0x1
   27644:	sxtw	x8, w8
   27648:	add	x19, x0, x8, lsl #6
   2764c:	str	w10, [x25]
   27650:	str	xzr, [x19, #8]!
   27654:	add	x9, x21, #0x28
   27658:	stp	xzr, xzr, [x19, #8]
   2765c:	ldr	q0, [x9]
   27660:	add	x24, sp, #0x50
   27664:	stp	xzr, xzr, [x19, #24]
   27668:	str	x28, [x19, #56]
   2766c:	stur	q0, [x19, #40]
   27670:	ldr	w8, [x19, #48]
   27674:	and	w8, w8, #0xfff3ffff
   27678:	str	w8, [x19, #48]
   2767c:	mov	x8, x19
   27680:	str	x19, [sp, #80]
   27684:	str	x27, [x8]
   27688:	ldr	x8, [x24]
   2768c:	ldr	w9, [x8, #48]
   27690:	orr	w9, w9, #0x40000
   27694:	str	w9, [x8, #48]
   27698:	ldr	x8, [x21, #8]
   2769c:	ldr	x27, [x24]
   276a0:	cbz	x8, 27708 <rpl_re_set_registers@@Base+0x27f4>
   276a4:	add	x24, x27, #0x8
   276a8:	mov	x21, x8
   276ac:	ldr	w8, [x25]
   276b0:	cmp	w8, #0xf
   276b4:	b.eq	27730 <rpl_re_set_registers@@Base+0x281c>  // b.none
   276b8:	ldr	x0, [x26]
   276bc:	add	w10, w8, #0x1
   276c0:	sxtw	x8, w8
   276c4:	add	x8, x0, x8, lsl #6
   276c8:	str	w10, [x25]
   276cc:	str	xzr, [x8, #8]!
   276d0:	add	x9, x21, #0x28
   276d4:	stp	xzr, xzr, [x8, #8]
   276d8:	ldr	q0, [x9]
   276dc:	stp	xzr, xzr, [x8, #24]
   276e0:	str	x28, [x8, #56]
   276e4:	stur	q0, [x8, #40]
   276e8:	ldr	w9, [x8, #48]
   276ec:	and	w9, w9, #0xfff3ffff
   276f0:	str	w9, [x8, #48]
   276f4:	str	x8, [x24]
   276f8:	b	27684 <rpl_re_set_registers@@Base+0x2770>
   276fc:	ldr	x21, [x8]
   27700:	ldr	x27, [x27]
   27704:	cbz	x21, 27768 <rpl_re_set_registers@@Base+0x2854>
   27708:	mov	x9, x8
   2770c:	mov	x8, x21
   27710:	ldr	x21, [x21, #16]
   27714:	cmp	x21, x9
   27718:	b.eq	276fc <rpl_re_set_registers@@Base+0x27e8>  // b.none
   2771c:	cbz	x21, 276fc <rpl_re_set_registers@@Base+0x27e8>
   27720:	add	x24, x27, #0x10
   27724:	ldr	w8, [x25]
   27728:	cmp	w8, #0xf
   2772c:	b.ne	276b8 <rpl_re_set_registers@@Base+0x27a4>  // b.any
   27730:	mov	w0, #0x3c8                 	// #968
   27734:	str	x14, [sp, #16]
   27738:	bl	a550 <malloc@plt>
   2773c:	cbz	x0, 27880 <rpl_re_set_registers@@Base+0x296c>
   27740:	ldr	x9, [x26]
   27744:	ldr	x12, [sp, #56]
   27748:	ldr	x14, [sp, #16]
   2774c:	mov	w8, wzr
   27750:	mov	w13, #0xa                   	// #10
   27754:	mov	w11, #0x10                  	// #16
   27758:	str	x9, [x0]
   2775c:	str	x0, [x26]
   27760:	str	wzr, [x25]
   27764:	b	276bc <rpl_re_set_registers@@Base+0x27a8>
   27768:	ldr	w8, [x25]
   2776c:	cmp	w8, #0xf
   27770:	b.eq	27838 <rpl_re_set_registers@@Base+0x2924>  // b.none
   27774:	ldr	x0, [x26]
   27778:	add	w9, w8, #0x1
   2777c:	sxtw	x8, w8
   27780:	add	x21, x0, x8, lsl #6
   27784:	str	w9, [x25]
   27788:	str	xzr, [x21, #8]!
   2778c:	stp	x20, x19, [x21, #8]
   27790:	str	w11, [x21, #48]
   27794:	stp	xzr, xzr, [x21, #24]
   27798:	str	x28, [x21, #56]
   2779c:	str	x21, [x20]
   277a0:	cbz	x19, 27e80 <rpl_re_set_registers@@Base+0x2f6c>
   277a4:	str	x21, [x19]
   277a8:	ldr	w8, [x25]
   277ac:	cmp	w8, #0xf
   277b0:	b.eq	27840 <rpl_re_set_registers@@Base+0x292c>  // b.none
   277b4:	ldr	x0, [x26]
   277b8:	add	w9, w8, #0x1
   277bc:	sxtw	x8, w8
   277c0:	add	x20, x0, x8, lsl #6
   277c4:	cmp	x22, x23
   277c8:	str	w9, [x25]
   277cc:	str	xzr, [x20, #8]!
   277d0:	stp	x21, xzr, [x20, #8]
   277d4:	str	w13, [x20, #48]
   277d8:	stp	xzr, xzr, [x20, #24]
   277dc:	str	x28, [x20, #56]
   277e0:	str	x20, [x21]
   277e4:	b.ge	278bc <rpl_re_set_registers@@Base+0x29a8>  // b.tcont
   277e8:	ldr	x27, [x19]
   277ec:	add	x22, x22, #0x1
   277f0:	mov	x21, x19
   277f4:	ldr	w8, [x25]
   277f8:	cmp	w8, #0xf
   277fc:	b.ne	2763c <rpl_re_set_registers@@Base+0x2728>  // b.any
   27800:	mov	w0, #0x3c8                 	// #968
   27804:	str	x14, [sp, #16]
   27808:	bl	a550 <malloc@plt>
   2780c:	cbz	x0, 27878 <rpl_re_set_registers@@Base+0x2964>
   27810:	ldr	x9, [x26]
   27814:	ldr	x12, [sp, #56]
   27818:	ldr	x14, [sp, #16]
   2781c:	mov	w8, wzr
   27820:	mov	w13, #0xa                   	// #10
   27824:	mov	w11, #0x10                  	// #16
   27828:	str	x9, [x0]
   2782c:	str	x0, [x26]
   27830:	str	wzr, [x25]
   27834:	b	27640 <rpl_re_set_registers@@Base+0x272c>
   27838:	str	x14, [sp, #16]
   2783c:	b	27888 <rpl_re_set_registers@@Base+0x2974>
   27840:	mov	w0, #0x3c8                 	// #968
   27844:	mov	x20, x14
   27848:	bl	a550 <malloc@plt>
   2784c:	ldr	x12, [sp, #56]
   27850:	mov	w11, #0x10                  	// #16
   27854:	mov	w13, #0xa                   	// #10
   27858:	cbz	x0, 27e80 <rpl_re_set_registers@@Base+0x2f6c>
   2785c:	ldr	x9, [x26]
   27860:	mov	x14, x20
   27864:	mov	w8, wzr
   27868:	str	x9, [x0]
   2786c:	str	x0, [x26]
   27870:	str	wzr, [x25]
   27874:	b	277b8 <rpl_re_set_registers@@Base+0x28a4>
   27878:	str	xzr, [sp, #80]
   2787c:	b	27884 <rpl_re_set_registers@@Base+0x2970>
   27880:	str	xzr, [x24]
   27884:	mov	x19, xzr
   27888:	mov	w0, #0x3c8                 	// #968
   2788c:	bl	a550 <malloc@plt>
   27890:	ldr	x12, [sp, #56]
   27894:	ldr	x14, [sp, #16]
   27898:	mov	w13, #0xa                   	// #10
   2789c:	mov	w11, #0x10                  	// #16
   278a0:	cbz	x0, 27e80 <rpl_re_set_registers@@Base+0x2f6c>
   278a4:	ldr	x9, [x26]
   278a8:	mov	w8, wzr
   278ac:	str	x9, [x0]
   278b0:	str	x0, [x26]
   278b4:	str	wzr, [x25]
   278b8:	b	27778 <rpl_re_set_registers@@Base+0x2864>
   278bc:	mov	x27, x20
   278c0:	ldp	x20, x21, [sp, #32]
   278c4:	mov	w23, #0x1                   	// #1
   278c8:	cbz	x14, 27910 <rpl_re_set_registers@@Base+0x29fc>
   278cc:	ldr	w8, [x25]
   278d0:	cmp	w8, #0xf
   278d4:	b.eq	27c88 <rpl_re_set_registers@@Base+0x2d74>  // b.none
   278d8:	ldr	x0, [x26]
   278dc:	add	w9, w8, #0x1
   278e0:	sxtw	x8, w8
   278e4:	add	x8, x0, x8, lsl #6
   278e8:	str	w9, [x25]
   278ec:	str	xzr, [x8, #8]!
   278f0:	stp	x14, x27, [x8, #8]
   278f4:	str	w11, [x8, #48]
   278f8:	stp	xzr, xzr, [x8, #24]
   278fc:	str	x28, [x8, #56]
   27900:	str	x8, [x14]
   27904:	mov	x14, x8
   27908:	str	x8, [x27]
   2790c:	b	27914 <rpl_re_set_registers@@Base+0x2a00>
   27910:	mov	x14, x27
   27914:	mov	w8, wzr
   27918:	b	27eb0 <rpl_re_set_registers@@Base+0x2f9c>
   2791c:	ldr	x12, [sp, #56]
   27920:	mov	x14, xzr
   27924:	b	27e94 <rpl_re_set_registers@@Base+0x2f80>
   27928:	mov	x8, x19
   2792c:	mov	w23, #0x1                   	// #1
   27930:	mov	x19, x8
   27934:	ldr	x8, [x8, #8]
   27938:	cbnz	x8, 27930 <rpl_re_set_registers@@Base+0x2a1c>
   2793c:	ldr	x8, [x19, #16]
   27940:	cbnz	x8, 27930 <rpl_re_set_registers@@Base+0x2a1c>
   27944:	ldr	w8, [x19, #48]
   27948:	mov	w9, #0xff                  	// #255
   2794c:	movk	w9, #0x4, lsl #16
   27950:	and	w8, w8, w9
   27954:	cmp	w8, #0x3
   27958:	b.eq	2798c <rpl_re_set_registers@@Base+0x2a78>  // b.none
   2795c:	cmp	w8, #0x6
   27960:	b.ne	279a0 <rpl_re_set_registers@@Base+0x2a8c>  // b.any
   27964:	ldr	x23, [x19, #40]
   27968:	ldr	x0, [x23]
   2796c:	bl	a970 <free@plt>
   27970:	ldr	x0, [x23, #8]
   27974:	bl	a970 <free@plt>
   27978:	ldr	x0, [x23, #16]
   2797c:	bl	a970 <free@plt>
   27980:	ldr	x0, [x23, #24]
   27984:	bl	a970 <free@plt>
   27988:	b	27990 <rpl_re_set_registers@@Base+0x2a7c>
   2798c:	ldr	x23, [x19, #40]
   27990:	mov	x0, x23
   27994:	bl	a970 <free@plt>
   27998:	ldr	x12, [sp, #56]
   2799c:	mov	w23, #0x1                   	// #1
   279a0:	ldr	x9, [x19]
   279a4:	cbz	x9, 279c4 <rpl_re_set_registers@@Base+0x2ab0>
   279a8:	ldr	x8, [x9, #16]
   279ac:	cmp	x8, x19
   279b0:	mov	x19, x9
   279b4:	b.eq	27944 <rpl_re_set_registers@@Base+0x2a30>  // b.none
   279b8:	mov	x19, x9
   279bc:	cbz	x8, 27944 <rpl_re_set_registers@@Base+0x2a30>
   279c0:	b	27930 <rpl_re_set_registers@@Base+0x2a1c>
   279c4:	mov	x14, xzr
   279c8:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   279cc:	mov	x14, x19
   279d0:	mov	x15, x19
   279d4:	mov	w11, #0x10                  	// #16
   279d8:	b.ne	27a4c <rpl_re_set_registers@@Base+0x2b38>  // b.any
   279dc:	ldr	x21, [sp, #40]
   279e0:	cmp	x22, x23
   279e4:	b.ne	27cbc <rpl_re_set_registers@@Base+0x2da8>  // b.any
   279e8:	ldr	x20, [sp, #32]
   279ec:	mov	w23, #0x1                   	// #1
   279f0:	b	27914 <rpl_re_set_registers@@Base+0x2a00>
   279f4:	mov	w0, #0x3c8                 	// #968
   279f8:	mov	x20, x14
   279fc:	bl	a550 <malloc@plt>
   27a00:	ldr	x12, [sp, #56]
   27a04:	mov	w13, #0xa                   	// #10
   27a08:	mov	w11, #0x10                  	// #16
   27a0c:	cbz	x0, 27e80 <rpl_re_set_registers@@Base+0x2f6c>
   27a10:	ldr	x9, [x26]
   27a14:	mov	x14, x20
   27a18:	mov	w8, wzr
   27a1c:	str	x9, [x0]
   27a20:	str	x0, [x26]
   27a24:	str	wzr, [x25]
   27a28:	b	275f8 <rpl_re_set_registers@@Base+0x26e4>
   27a2c:	mov	w23, #0x1                   	// #1
   27a30:	tbz	w21, #21, 27e18 <rpl_re_set_registers@@Base+0x2f04>
   27a34:	str	x19, [x20, #72]
   27a38:	ldur	q0, [x29, #-80]
   27a3c:	ldr	x14, [sp, #48]
   27a40:	str	q0, [x12]
   27a44:	strb	w23, [x12, #8]
   27a48:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   27a4c:	ldr	x14, [x19]
   27a50:	mov	x15, x19
   27a54:	mov	w21, #0x2                   	// #2
   27a58:	ldr	w8, [x25]
   27a5c:	cmp	w8, #0xf
   27a60:	b.eq	27bf0 <rpl_re_set_registers@@Base+0x2cdc>  // b.none
   27a64:	ldr	x0, [x26]
   27a68:	add	w10, w8, #0x1
   27a6c:	sxtw	x8, w8
   27a70:	add	x20, x0, x8, lsl #6
   27a74:	str	w10, [x25]
   27a78:	str	xzr, [x20, #8]!
   27a7c:	add	x9, x15, #0x28
   27a80:	stp	xzr, xzr, [x20, #8]
   27a84:	ldr	q0, [x9]
   27a88:	add	x27, sp, #0x50
   27a8c:	stp	xzr, xzr, [x20, #24]
   27a90:	str	x28, [x20, #56]
   27a94:	stur	q0, [x20, #40]
   27a98:	ldr	w8, [x20, #48]
   27a9c:	and	w8, w8, #0xfff3ffff
   27aa0:	str	w8, [x20, #48]
   27aa4:	mov	x8, x20
   27aa8:	str	x20, [sp, #80]
   27aac:	str	x14, [x8]
   27ab0:	ldr	x8, [x27]
   27ab4:	ldr	w9, [x8, #48]
   27ab8:	orr	w9, w9, #0x40000
   27abc:	str	w9, [x8, #48]
   27ac0:	ldr	x8, [x15, #8]
   27ac4:	ldr	x14, [x27]
   27ac8:	cbz	x8, 27b30 <rpl_re_set_registers@@Base+0x2c1c>
   27acc:	add	x27, x14, #0x8
   27ad0:	mov	x15, x8
   27ad4:	ldr	w8, [x25]
   27ad8:	cmp	w8, #0xf
   27adc:	b.eq	27b58 <rpl_re_set_registers@@Base+0x2c44>  // b.none
   27ae0:	ldr	x0, [x26]
   27ae4:	add	w10, w8, #0x1
   27ae8:	sxtw	x8, w8
   27aec:	add	x8, x0, x8, lsl #6
   27af0:	str	w10, [x25]
   27af4:	str	xzr, [x8, #8]!
   27af8:	add	x9, x15, #0x28
   27afc:	stp	xzr, xzr, [x8, #8]
   27b00:	ldr	q0, [x9]
   27b04:	stp	xzr, xzr, [x8, #24]
   27b08:	str	x28, [x8, #56]
   27b0c:	stur	q0, [x8, #40]
   27b10:	ldr	w9, [x8, #48]
   27b14:	and	w9, w9, #0xfff3ffff
   27b18:	str	w9, [x8, #48]
   27b1c:	str	x8, [x27]
   27b20:	b	27aac <rpl_re_set_registers@@Base+0x2b98>
   27b24:	ldr	x15, [x8]
   27b28:	ldr	x14, [x14]
   27b2c:	cbz	x15, 27b98 <rpl_re_set_registers@@Base+0x2c84>
   27b30:	mov	x9, x8
   27b34:	mov	x8, x15
   27b38:	ldr	x15, [x15, #16]
   27b3c:	cmp	x15, x9
   27b40:	b.eq	27b24 <rpl_re_set_registers@@Base+0x2c10>  // b.none
   27b44:	cbz	x15, 27b24 <rpl_re_set_registers@@Base+0x2c10>
   27b48:	add	x27, x14, #0x10
   27b4c:	ldr	w8, [x25]
   27b50:	cmp	w8, #0xf
   27b54:	b.ne	27ae0 <rpl_re_set_registers@@Base+0x2bcc>  // b.any
   27b58:	mov	w0, #0x3c8                 	// #968
   27b5c:	str	x15, [sp, #16]
   27b60:	mov	x24, x14
   27b64:	bl	a550 <malloc@plt>
   27b68:	cbz	x0, 27c38 <rpl_re_set_registers@@Base+0x2d24>
   27b6c:	ldr	x9, [x26]
   27b70:	ldr	x12, [sp, #56]
   27b74:	ldr	x15, [sp, #16]
   27b78:	mov	w8, wzr
   27b7c:	mov	w13, #0xa                   	// #10
   27b80:	mov	w11, #0x10                  	// #16
   27b84:	mov	x14, x24
   27b88:	str	x9, [x0]
   27b8c:	str	x0, [x26]
   27b90:	str	wzr, [x25]
   27b94:	b	27ae4 <rpl_re_set_registers@@Base+0x2bd0>
   27b98:	ldr	w8, [x25]
   27b9c:	cmp	w8, #0xf
   27ba0:	b.eq	27c40 <rpl_re_set_registers@@Base+0x2d2c>  // b.none
   27ba4:	ldr	x0, [x26]
   27ba8:	mov	x15, x20
   27bac:	add	w9, w8, #0x1
   27bb0:	sxtw	x8, w8
   27bb4:	add	x14, x0, x8, lsl #6
   27bb8:	str	w9, [x25]
   27bbc:	str	xzr, [x14, #8]!
   27bc0:	stp	x19, x15, [x14, #8]
   27bc4:	str	w11, [x14, #48]
   27bc8:	stp	xzr, xzr, [x14, #24]
   27bcc:	str	x28, [x14, #56]
   27bd0:	str	x14, [x19]
   27bd4:	cbz	x15, 27e80 <rpl_re_set_registers@@Base+0x2f6c>
   27bd8:	cmp	x21, x22
   27bdc:	add	x21, x21, #0x1
   27be0:	mov	x19, x14
   27be4:	str	x14, [x15]
   27be8:	b.ne	27a58 <rpl_re_set_registers@@Base+0x2b44>  // b.any
   27bec:	b	279dc <rpl_re_set_registers@@Base+0x2ac8>
   27bf0:	mov	w0, #0x3c8                 	// #968
   27bf4:	mov	x24, x15
   27bf8:	mov	x20, x14
   27bfc:	bl	a550 <malloc@plt>
   27c00:	cbz	x0, 27c30 <rpl_re_set_registers@@Base+0x2d1c>
   27c04:	ldr	x9, [x26]
   27c08:	ldr	x12, [sp, #56]
   27c0c:	mov	w8, wzr
   27c10:	mov	w13, #0xa                   	// #10
   27c14:	mov	w11, #0x10                  	// #16
   27c18:	mov	x14, x20
   27c1c:	mov	x15, x24
   27c20:	str	x9, [x0]
   27c24:	str	x0, [x26]
   27c28:	str	wzr, [x25]
   27c2c:	b	27a68 <rpl_re_set_registers@@Base+0x2b54>
   27c30:	str	xzr, [sp, #80]
   27c34:	b	27c3c <rpl_re_set_registers@@Base+0x2d28>
   27c38:	str	xzr, [x27]
   27c3c:	mov	x20, xzr
   27c40:	mov	w0, #0x3c8                 	// #968
   27c44:	bl	a550 <malloc@plt>
   27c48:	ldr	x12, [sp, #56]
   27c4c:	mov	w13, #0xa                   	// #10
   27c50:	mov	w11, #0x10                  	// #16
   27c54:	cbz	x0, 27e80 <rpl_re_set_registers@@Base+0x2f6c>
   27c58:	ldr	x9, [x26]
   27c5c:	mov	x15, x20
   27c60:	mov	w8, wzr
   27c64:	str	x9, [x0]
   27c68:	str	x0, [x26]
   27c6c:	str	wzr, [x25]
   27c70:	b	27bac <rpl_re_set_registers@@Base+0x2c98>
   27c74:	ldr	x8, [sp, #24]
   27c78:	mov	x14, xzr
   27c7c:	mov	w23, #0x1                   	// #1
   27c80:	str	w11, [x8]
   27c84:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   27c88:	mov	w0, #0x3c8                 	// #968
   27c8c:	mov	x19, x14
   27c90:	bl	a550 <malloc@plt>
   27c94:	cbz	x0, 27e0c <rpl_re_set_registers@@Base+0x2ef8>
   27c98:	ldr	x9, [x26]
   27c9c:	ldr	x12, [sp, #56]
   27ca0:	mov	w8, wzr
   27ca4:	mov	w11, #0x10                  	// #16
   27ca8:	mov	x14, x19
   27cac:	str	x9, [x0]
   27cb0:	str	x0, [x26]
   27cb4:	str	wzr, [x25]
   27cb8:	b	278dc <rpl_re_set_registers@@Base+0x29c8>
   27cbc:	mov	x20, x15
   27cc0:	ldr	x19, [x20], #40
   27cc4:	ldr	w8, [x25]
   27cc8:	cmp	w8, #0xf
   27ccc:	b.eq	27e34 <rpl_re_set_registers@@Base+0x2f20>  // b.none
   27cd0:	ldr	x0, [x26]
   27cd4:	add	w9, w8, #0x1
   27cd8:	sxtw	x8, w8
   27cdc:	add	x21, x0, x8, lsl #6
   27ce0:	str	w9, [x25]
   27ce4:	str	xzr, [x21, #8]!
   27ce8:	stp	xzr, xzr, [x21, #8]
   27cec:	ldr	q0, [x20]
   27cf0:	add	x20, sp, #0x50
   27cf4:	stp	xzr, xzr, [x21, #24]
   27cf8:	str	x28, [x21, #56]
   27cfc:	stur	q0, [x21, #40]
   27d00:	ldr	w8, [x21, #48]
   27d04:	and	w8, w8, #0xfff3ffff
   27d08:	str	w8, [x21, #48]
   27d0c:	mov	x8, x21
   27d10:	str	x21, [sp, #80]
   27d14:	str	x19, [x8]
   27d18:	ldr	x8, [x20]
   27d1c:	ldr	w9, [x8, #48]
   27d20:	orr	w9, w9, #0x40000
   27d24:	str	w9, [x8, #48]
   27d28:	ldr	x8, [x15, #8]
   27d2c:	ldr	x19, [x20]
   27d30:	cbz	x8, 27d4c <rpl_re_set_registers@@Base+0x2e38>
   27d34:	add	x20, x19, #0x8
   27d38:	mov	x15, x8
   27d3c:	b	27d68 <rpl_re_set_registers@@Base+0x2e54>
   27d40:	ldr	x15, [x8]
   27d44:	ldr	x19, [x19]
   27d48:	cbz	x15, 2756c <rpl_re_set_registers@@Base+0x2658>
   27d4c:	mov	x9, x8
   27d50:	mov	x8, x15
   27d54:	ldr	x15, [x15, #16]
   27d58:	cmp	x15, x9
   27d5c:	b.eq	27d40 <rpl_re_set_registers@@Base+0x2e2c>  // b.none
   27d60:	cbz	x15, 27d40 <rpl_re_set_registers@@Base+0x2e2c>
   27d64:	add	x20, x19, #0x10
   27d68:	ldr	w8, [x25]
   27d6c:	cmp	w8, #0xf
   27d70:	b.eq	27db8 <rpl_re_set_registers@@Base+0x2ea4>  // b.none
   27d74:	ldr	x0, [x26]
   27d78:	add	w10, w8, #0x1
   27d7c:	sxtw	x8, w8
   27d80:	add	x8, x0, x8, lsl #6
   27d84:	str	w10, [x25]
   27d88:	str	xzr, [x8, #8]!
   27d8c:	add	x9, x15, #0x28
   27d90:	stp	xzr, xzr, [x8, #8]
   27d94:	ldr	q0, [x9]
   27d98:	stp	xzr, xzr, [x8, #24]
   27d9c:	str	x28, [x8, #56]
   27da0:	stur	q0, [x8, #40]
   27da4:	ldr	w9, [x8, #48]
   27da8:	and	w9, w9, #0xfff3ffff
   27dac:	str	w9, [x8, #48]
   27db0:	str	x8, [x20]
   27db4:	b	27d14 <rpl_re_set_registers@@Base+0x2e00>
   27db8:	mov	w0, #0x3c8                 	// #968
   27dbc:	mov	x27, x15
   27dc0:	mov	x24, x14
   27dc4:	bl	a550 <malloc@plt>
   27dc8:	cbz	x0, 27e78 <rpl_re_set_registers@@Base+0x2f64>
   27dcc:	ldr	x9, [x26]
   27dd0:	ldr	x12, [sp, #56]
   27dd4:	mov	w8, wzr
   27dd8:	mov	w13, #0xa                   	// #10
   27ddc:	mov	x14, x24
   27de0:	mov	x15, x27
   27de4:	str	x9, [x0]
   27de8:	str	x0, [x26]
   27dec:	str	wzr, [x25]
   27df0:	b	27d78 <rpl_re_set_registers@@Base+0x2e64>
   27df4:	ldr	x8, [sp, #24]
   27df8:	mov	w9, #0xf                   	// #15
   27dfc:	mov	x14, xzr
   27e00:	mov	w23, #0x1                   	// #1
   27e04:	str	w9, [x8]
   27e08:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   27e0c:	ldr	x12, [sp, #56]
   27e10:	mov	x14, xzr
   27e14:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   27e18:	ldr	x9, [sp, #24]
   27e1c:	cmp	w8, #0x2
   27e20:	mov	w8, #0x9                   	// #9
   27e24:	cinc	w8, w8, ne  // ne = any
   27e28:	mov	x14, xzr
   27e2c:	str	w8, [x9]
   27e30:	b	27e98 <rpl_re_set_registers@@Base+0x2f84>
   27e34:	mov	w0, #0x3c8                 	// #968
   27e38:	mov	x24, x15
   27e3c:	mov	x21, x14
   27e40:	bl	a550 <malloc@plt>
   27e44:	cbz	x0, 27e70 <rpl_re_set_registers@@Base+0x2f5c>
   27e48:	ldr	x9, [x26]
   27e4c:	ldr	x12, [sp, #56]
   27e50:	mov	w8, wzr
   27e54:	mov	w13, #0xa                   	// #10
   27e58:	mov	x14, x21
   27e5c:	mov	x15, x24
   27e60:	str	x9, [x0]
   27e64:	str	x0, [x26]
   27e68:	str	wzr, [x25]
   27e6c:	b	27cd4 <rpl_re_set_registers@@Base+0x2dc0>
   27e70:	str	xzr, [sp, #80]
   27e74:	b	27e7c <rpl_re_set_registers@@Base+0x2f68>
   27e78:	str	xzr, [x20]
   27e7c:	ldr	x12, [sp, #56]
   27e80:	ldp	x8, x20, [sp, #24]
   27e84:	ldr	x21, [sp, #40]
   27e88:	mov	w9, #0xc                   	// #12
   27e8c:	mov	x14, xzr
   27e90:	str	w9, [x8]
   27e94:	mov	w23, #0x1                   	// #1
   27e98:	cmp	x14, #0x0
   27e9c:	cset	w8, eq  // eq = none
   27ea0:	cbnz	x14, 27eb0 <rpl_re_set_registers@@Base+0x2f9c>
   27ea4:	ldr	x9, [sp, #24]
   27ea8:	ldr	w9, [x9]
   27eac:	cbnz	w9, 280bc <rpl_re_set_registers@@Base+0x31a8>
   27eb0:	mov	x9, x14
   27eb4:	tbz	w21, #24, 27304 <rpl_re_set_registers@@Base+0x23f0>
   27eb8:	ldrb	w9, [x12, #8]
   27ebc:	cmp	w9, #0x17
   27ec0:	b.eq	27ed0 <rpl_re_set_registers@@Base+0x2fbc>  // b.none
   27ec4:	cmp	w9, #0xb
   27ec8:	mov	x9, x14
   27ecc:	b.ne	27304 <rpl_re_set_registers@@Base+0x23f0>  // b.any
   27ed0:	ldr	x22, [sp, #24]
   27ed4:	tbz	w8, #0, 27f08 <rpl_re_set_registers@@Base+0x2ff4>
   27ed8:	mov	w8, #0xd                   	// #13
   27edc:	str	xzr, [sp, #48]
   27ee0:	str	w8, [x22]
   27ee4:	ldr	x0, [sp, #48]
   27ee8:	ldp	x20, x19, [sp, #272]
   27eec:	ldp	x22, x21, [sp, #256]
   27ef0:	ldp	x24, x23, [sp, #240]
   27ef4:	ldp	x26, x25, [sp, #224]
   27ef8:	ldp	x28, x27, [sp, #208]
   27efc:	ldp	x29, x30, [sp, #192]
   27f00:	add	sp, sp, #0x120
   27f04:	ret
   27f08:	mov	w19, #0xff                  	// #255
   27f0c:	movk	w19, #0x4, lsl #16
   27f10:	mov	x21, x14
   27f14:	ldr	x14, [x14, #8]
   27f18:	cbnz	x14, 27f10 <rpl_re_set_registers@@Base+0x2ffc>
   27f1c:	ldr	x14, [x21, #16]
   27f20:	cbnz	x14, 27f10 <rpl_re_set_registers@@Base+0x2ffc>
   27f24:	ldr	w8, [x21, #48]
   27f28:	and	w8, w8, w19
   27f2c:	cmp	w8, #0x3
   27f30:	b.eq	27f64 <rpl_re_set_registers@@Base+0x3050>  // b.none
   27f34:	cmp	w8, #0x6
   27f38:	b.ne	27f70 <rpl_re_set_registers@@Base+0x305c>  // b.any
   27f3c:	ldr	x20, [x21, #40]
   27f40:	ldr	x0, [x20]
   27f44:	bl	a970 <free@plt>
   27f48:	ldr	x0, [x20, #8]
   27f4c:	bl	a970 <free@plt>
   27f50:	ldr	x0, [x20, #16]
   27f54:	bl	a970 <free@plt>
   27f58:	ldr	x0, [x20, #24]
   27f5c:	bl	a970 <free@plt>
   27f60:	b	27f68 <rpl_re_set_registers@@Base+0x3054>
   27f64:	ldr	x20, [x21, #40]
   27f68:	mov	x0, x20
   27f6c:	bl	a970 <free@plt>
   27f70:	ldr	x8, [x21]
   27f74:	cbz	x8, 27ed8 <rpl_re_set_registers@@Base+0x2fc4>
   27f78:	ldr	x14, [x8, #16]
   27f7c:	cmp	x14, x21
   27f80:	mov	x21, x8
   27f84:	b.eq	27f24 <rpl_re_set_registers@@Base+0x3010>  // b.none
   27f88:	mov	x21, x8
   27f8c:	cbz	x14, 27f24 <rpl_re_set_registers@@Base+0x3010>
   27f90:	b	27f10 <rpl_re_set_registers@@Base+0x2ffc>
   27f94:	mov	w8, #0x5                   	// #5
   27f98:	str	w8, [x14]
   27f9c:	ldr	w8, [x23, #128]
   27fa0:	ldr	x21, [sp, #40]
   27fa4:	cmp	w8, #0xf
   27fa8:	b.eq	283f4 <rpl_re_set_registers@@Base+0x34e0>  // b.none
   27fac:	ldr	x0, [x23, #112]
   27fb0:	add	w9, w8, #0x1
   27fb4:	sxtw	x8, w8
   27fb8:	add	x19, x0, x8, lsl #6
   27fbc:	str	w9, [x23, #128]
   27fc0:	str	xzr, [x19, #8]!
   27fc4:	stp	xzr, xzr, [x19, #8]
   27fc8:	ldr	q0, [x14]
   27fcc:	mov	x8, #0xffffffffffffffff    	// #-1
   27fd0:	str	x8, [x19, #56]
   27fd4:	stp	xzr, xzr, [x19, #24]
   27fd8:	stur	q0, [x19, #40]
   27fdc:	ldr	w9, [x19, #48]
   27fe0:	and	w8, w9, #0xfff3ffff
   27fe4:	str	w8, [x19, #48]
   27fe8:	mov	w8, #0xa                   	// #10
   27fec:	str	w8, [x14]
   27ff0:	ldr	w8, [x23, #128]
   27ff4:	cmp	w8, #0xf
   27ff8:	b.ne	26ac8 <rpl_re_set_registers@@Base+0x1bb4>  // b.any
   27ffc:	mov	w0, #0x3c8                 	// #968
   28000:	bl	a550 <malloc@plt>
   28004:	cbz	x0, 284d0 <rpl_re_set_registers@@Base+0x35bc>
   28008:	ldr	x9, [x23, #112]
   2800c:	ldr	x21, [sp, #40]
   28010:	ldr	x14, [sp, #56]
   28014:	mov	w8, wzr
   28018:	str	x9, [x0]
   2801c:	str	x0, [x23, #112]
   28020:	str	wzr, [x23, #128]
   28024:	b	26acc <rpl_re_set_registers@@Base+0x1bb8>
   28028:	ldr	w8, [x23, #128]
   2802c:	cmp	w8, #0xf
   28030:	b.eq	28420 <rpl_re_set_registers@@Base+0x350c>  // b.none
   28034:	ldr	x0, [x23, #112]
   28038:	add	w9, w8, #0x1
   2803c:	sxtw	x8, w8
   28040:	add	x10, x0, x8, lsl #6
   28044:	str	w9, [x23, #128]
   28048:	str	xzr, [x10, #8]!
   2804c:	stp	xzr, xzr, [x10, #8]
   28050:	ldr	q0, [x14]
   28054:	mov	x9, #0xffffffffffffffff    	// #-1
   28058:	stp	xzr, xzr, [x10, #24]
   2805c:	str	x9, [x10, #56]
   28060:	stur	q0, [x10, #40]
   28064:	ldr	w8, [x10, #48]
   28068:	and	w8, w8, #0xfff3ffff
   2806c:	str	w8, [x10, #48]
   28070:	mov	x8, x10
   28074:	ldr	x19, [sp, #32]
   28078:	mov	x0, x14
   2807c:	mov	x2, x21
   28080:	str	x8, [sp, #48]
   28084:	mov	x1, x19
   28088:	bl	25bac <rpl_re_set_registers@@Base+0xc98>
   2808c:	ldr	x8, [x19, #72]
   28090:	add	x8, x8, w0, sxtw
   28094:	str	x8, [x19, #72]
   28098:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   2809c:	ldrb	w8, [x20, #8]
   280a0:	mov	x25, x0
   280a4:	cmp	w8, #0x9
   280a8:	b.ne	28520 <rpl_re_set_registers@@Base+0x360c>  // b.any
   280ac:	mov	x14, x20
   280b0:	cmp	x19, #0x8
   280b4:	b.ls	2678c <rpl_re_set_registers@@Base+0x1878>  // b.plast
   280b8:	b	267a4 <rpl_re_set_registers@@Base+0x1890>
   280bc:	ldr	x9, [sp, #48]
   280c0:	cbz	x9, 26c60 <rpl_re_set_registers@@Base+0x1d4c>
   280c4:	mov	w20, #0xff                  	// #255
   280c8:	movk	w20, #0x4, lsl #16
   280cc:	mov	x21, x9
   280d0:	ldr	x9, [x9, #8]
   280d4:	cbnz	x9, 280cc <rpl_re_set_registers@@Base+0x31b8>
   280d8:	ldr	x9, [x21, #16]
   280dc:	cbnz	x9, 280cc <rpl_re_set_registers@@Base+0x31b8>
   280e0:	ldr	w8, [x21, #48]
   280e4:	and	w8, w8, w20
   280e8:	cmp	w8, #0x3
   280ec:	b.eq	28120 <rpl_re_set_registers@@Base+0x320c>  // b.none
   280f0:	cmp	w8, #0x6
   280f4:	b.ne	2812c <rpl_re_set_registers@@Base+0x3218>  // b.any
   280f8:	ldr	x19, [x21, #40]
   280fc:	ldr	x0, [x19]
   28100:	bl	a970 <free@plt>
   28104:	ldr	x0, [x19, #8]
   28108:	bl	a970 <free@plt>
   2810c:	ldr	x0, [x19, #16]
   28110:	bl	a970 <free@plt>
   28114:	ldr	x0, [x19, #24]
   28118:	bl	a970 <free@plt>
   2811c:	b	28124 <rpl_re_set_registers@@Base+0x3210>
   28120:	ldr	x19, [x21, #40]
   28124:	mov	x0, x19
   28128:	bl	a970 <free@plt>
   2812c:	ldr	x8, [x21]
   28130:	cbz	x8, 26c60 <rpl_re_set_registers@@Base+0x1d4c>
   28134:	ldr	x9, [x8, #16]
   28138:	cmp	x9, x21
   2813c:	mov	x21, x8
   28140:	b.eq	280e0 <rpl_re_set_registers@@Base+0x31cc>  // b.none
   28144:	mov	x21, x8
   28148:	cbz	x9, 280e0 <rpl_re_set_registers@@Base+0x31cc>
   2814c:	b	280cc <rpl_re_set_registers@@Base+0x31b8>
   28150:	cmp	w8, #0x2
   28154:	b.lt	28168 <rpl_re_set_registers@@Base+0x3254>  // b.tstop
   28158:	ldr	x8, [x24, #72]
   2815c:	cbnz	x8, 271d8 <rpl_re_set_registers@@Base+0x22c4>
   28160:	ldrb	w8, [x24, #32]
   28164:	tbnz	w8, #0, 271d8 <rpl_re_set_registers@@Base+0x22c4>
   28168:	ldr	x0, [x24]
   2816c:	bl	a970 <free@plt>
   28170:	ldr	x0, [x24, #8]
   28174:	bl	a970 <free@plt>
   28178:	ldr	x0, [x24, #16]
   2817c:	bl	a970 <free@plt>
   28180:	ldr	x0, [x24, #24]
   28184:	bl	a970 <free@plt>
   28188:	mov	x0, x24
   2818c:	bl	a970 <free@plt>
   28190:	ldr	w8, [x23, #128]
   28194:	cmp	w8, #0xf
   28198:	b.eq	285f8 <rpl_re_set_registers@@Base+0x36e4>  // b.none
   2819c:	ldr	x0, [x23, #112]
   281a0:	ldr	x14, [sp, #56]
   281a4:	add	w9, w8, #0x1
   281a8:	sxtw	x8, w8
   281ac:	add	x8, x0, x8, lsl #6
   281b0:	mov	w10, #0x3                   	// #3
   281b4:	mov	x11, #0xffffffffffffffff    	// #-1
   281b8:	str	w9, [x23, #128]
   281bc:	str	xzr, [x8, #8]!
   281c0:	stp	xzr, xzr, [x8, #16]
   281c4:	str	xzr, [x8, #8]
   281c8:	str	w10, [x8, #48]
   281cc:	stp	xzr, x25, [x8, #32]
   281d0:	str	x8, [sp, #48]
   281d4:	str	x11, [x8, #56]
   281d8:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   281dc:	mov	x0, x25
   281e0:	bl	a970 <free@plt>
   281e4:	ldr	x14, [sp, #56]
   281e8:	str	x19, [sp, #48]
   281ec:	b	272cc <rpl_re_set_registers@@Base+0x23b8>
   281f0:	str	x28, [sp, #24]
   281f4:	mov	w0, #0x7                   	// #7
   281f8:	b	28354 <rpl_re_set_registers@@Base+0x3440>
   281fc:	str	x28, [sp, #24]
   28200:	b	28354 <rpl_re_set_registers@@Base+0x3440>
   28204:	mov	w0, #0x3c8                 	// #968
   28208:	bl	a550 <malloc@plt>
   2820c:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   28210:	ldr	x9, [x23, #112]
   28214:	ldr	x14, [sp, #56]
   28218:	mov	w8, wzr
   2821c:	str	x9, [x0]
   28220:	str	x0, [x23, #112]
   28224:	str	wzr, [x23, #128]
   28228:	b	2665c <rpl_re_set_registers@@Base+0x1748>
   2822c:	mov	w8, #0x2                   	// #2
   28230:	b	28620 <rpl_re_set_registers@@Base+0x370c>
   28234:	mov	w8, #0x6                   	// #6
   28238:	str	xzr, [sp, #48]
   2823c:	str	w8, [x28]
   28240:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   28244:	mov	w0, #0x3c8                 	// #968
   28248:	bl	a550 <malloc@plt>
   2824c:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   28250:	ldr	x9, [x23, #112]
   28254:	ldr	x10, [sp, #32]
   28258:	ldr	x14, [sp, #56]
   2825c:	mov	w8, wzr
   28260:	str	x9, [x0]
   28264:	str	x0, [x23, #112]
   28268:	str	wzr, [x23, #128]
   2826c:	b	2680c <rpl_re_set_registers@@Base+0x18f8>
   28270:	mov	w0, #0x3c8                 	// #968
   28274:	bl	a550 <malloc@plt>
   28278:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   2827c:	ldr	x9, [x23, #112]
   28280:	ldr	x14, [sp, #56]
   28284:	mov	w8, wzr
   28288:	str	x9, [x0]
   2828c:	str	x0, [x23, #112]
   28290:	str	wzr, [x23, #128]
   28294:	b	269bc <rpl_re_set_registers@@Base+0x1aa8>
   28298:	mov	x0, x25
   2829c:	bl	a970 <free@plt>
   282a0:	mov	x0, x24
   282a4:	bl	a970 <free@plt>
   282a8:	b	28510 <rpl_re_set_registers@@Base+0x35fc>
   282ac:	mov	w0, #0x3c8                 	// #968
   282b0:	bl	a550 <malloc@plt>
   282b4:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   282b8:	ldr	x9, [x23, #112]
   282bc:	ldr	x14, [sp, #56]
   282c0:	mov	w8, wzr
   282c4:	str	x9, [x0]
   282c8:	str	x0, [x23, #112]
   282cc:	str	wzr, [x23, #128]
   282d0:	b	266ec <rpl_re_set_registers@@Base+0x17d8>
   282d4:	mov	w0, #0x3c8                 	// #968
   282d8:	bl	a550 <malloc@plt>
   282dc:	cbz	x0, 2861c <rpl_re_set_registers@@Base+0x3708>
   282e0:	ldr	x9, [x23, #112]
   282e4:	ldr	x14, [sp, #56]
   282e8:	mov	w8, wzr
   282ec:	str	x9, [x0]
   282f0:	str	x0, [x23, #112]
   282f4:	str	wzr, [x23, #128]
   282f8:	b	271f4 <rpl_re_set_registers@@Base+0x22e0>
   282fc:	mov	w0, #0x3c8                 	// #968
   28300:	bl	a550 <malloc@plt>
   28304:	cbz	x0, 2861c <rpl_re_set_registers@@Base+0x3708>
   28308:	ldr	x9, [x23, #112]
   2830c:	ldr	x14, [sp, #56]
   28310:	mov	w8, wzr
   28314:	str	x9, [x0]
   28318:	str	x0, [x23, #112]
   2831c:	str	wzr, [x23, #128]
   28320:	b	27254 <rpl_re_set_registers@@Base+0x2340>
   28324:	mov	w0, #0x3c8                 	// #968
   28328:	bl	a550 <malloc@plt>
   2832c:	cbz	x0, 2861c <rpl_re_set_registers@@Base+0x3708>
   28330:	ldr	x9, [x23, #112]
   28334:	ldr	x14, [sp, #56]
   28338:	mov	w8, wzr
   2833c:	str	x9, [x0]
   28340:	str	x0, [x23, #112]
   28344:	str	wzr, [x23, #128]
   28348:	b	27294 <rpl_re_set_registers@@Base+0x2380>
   2834c:	str	x28, [sp, #24]
   28350:	mov	w0, #0x3                   	// #3
   28354:	ldr	x28, [sp, #24]
   28358:	str	w0, [x28]
   2835c:	mov	x0, x25
   28360:	bl	a970 <free@plt>
   28364:	ldr	x0, [x24]
   28368:	bl	a970 <free@plt>
   2836c:	ldr	x0, [x24, #8]
   28370:	bl	a970 <free@plt>
   28374:	ldr	x0, [x24, #16]
   28378:	bl	a970 <free@plt>
   2837c:	ldr	x0, [x24, #24]
   28380:	bl	a970 <free@plt>
   28384:	mov	x0, x24
   28388:	bl	a970 <free@plt>
   2838c:	ldr	w8, [x28]
   28390:	ldr	x14, [sp, #56]
   28394:	str	xzr, [sp, #48]
   28398:	cbz	w8, 272cc <rpl_re_set_registers@@Base+0x23b8>
   2839c:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   283a0:	mov	w0, #0x3c8                 	// #968
   283a4:	bl	a550 <malloc@plt>
   283a8:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   283ac:	ldr	x9, [x23, #112]
   283b0:	ldr	x14, [sp, #56]
   283b4:	mov	w8, wzr
   283b8:	str	x9, [x0]
   283bc:	str	x0, [x23, #112]
   283c0:	str	wzr, [x23, #128]
   283c4:	b	267b4 <rpl_re_set_registers@@Base+0x18a0>
   283c8:	mov	w0, #0x3c8                 	// #968
   283cc:	bl	a550 <malloc@plt>
   283d0:	cbz	x0, 285c8 <rpl_re_set_registers@@Base+0x36b4>
   283d4:	ldr	x9, [x23, #112]
   283d8:	ldr	x21, [sp, #40]
   283dc:	ldr	x14, [sp, #56]
   283e0:	mov	w8, wzr
   283e4:	str	x9, [x0]
   283e8:	str	x0, [x23, #112]
   283ec:	str	wzr, [x23, #128]
   283f0:	b	26a7c <rpl_re_set_registers@@Base+0x1b68>
   283f4:	mov	w0, #0x3c8                 	// #968
   283f8:	bl	a550 <malloc@plt>
   283fc:	cbz	x0, 285d4 <rpl_re_set_registers@@Base+0x36c0>
   28400:	ldr	x9, [x23, #112]
   28404:	ldr	x21, [sp, #40]
   28408:	ldr	x14, [sp, #56]
   2840c:	mov	w8, wzr
   28410:	str	x9, [x0]
   28414:	str	x0, [x23, #112]
   28418:	str	wzr, [x23, #128]
   2841c:	b	27fb0 <rpl_re_set_registers@@Base+0x309c>
   28420:	mov	w0, #0x3c8                 	// #968
   28424:	bl	a550 <malloc@plt>
   28428:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   2842c:	ldr	x9, [x23, #112]
   28430:	ldr	x21, [sp, #40]
   28434:	ldr	x14, [sp, #56]
   28438:	mov	w8, wzr
   2843c:	str	x9, [x0]
   28440:	str	x0, [x23, #112]
   28444:	str	wzr, [x23, #128]
   28448:	b	28038 <rpl_re_set_registers@@Base+0x3124>
   2844c:	mov	x20, xzr
   28450:	mov	x19, xzr
   28454:	b	28460 <rpl_re_set_registers@@Base+0x354c>
   28458:	mov	w19, #0x2                   	// #2
   2845c:	mov	w20, #0x80                  	// #128
   28460:	bl	a910 <__ctype_b_loc@plt>
   28464:	ldr	x8, [x0]
   28468:	ldr	x14, [sp, #56]
   2846c:	mov	w9, #0x1                   	// #1
   28470:	add	x8, x8, x20, lsl #1
   28474:	b	2848c <rpl_re_set_registers@@Base+0x3578>
   28478:	add	x19, x19, #0x1
   2847c:	add	x20, x20, #0x40
   28480:	cmp	x19, #0x4
   28484:	add	x8, x8, #0x80
   28488:	b.eq	26a4c <rpl_re_set_registers@@Base+0x1b38>  // b.none
   2848c:	add	x11, x23, x19, lsl #3
   28490:	mov	x10, xzr
   28494:	add	x11, x11, #0xb8
   28498:	b	284b8 <rpl_re_set_registers@@Base+0x35a4>
   2849c:	ldr	x12, [x11]
   284a0:	lsl	x13, x9, x10
   284a4:	orr	x12, x12, x13
   284a8:	str	x12, [x11]
   284ac:	add	x10, x10, #0x1
   284b0:	cmp	x10, #0x40
   284b4:	b.eq	28478 <rpl_re_set_registers@@Base+0x3564>  // b.none
   284b8:	add	x12, x20, x10
   284bc:	cmp	x12, #0x5f
   284c0:	b.eq	2849c <rpl_re_set_registers@@Base+0x3588>  // b.none
   284c4:	ldrh	w12, [x8, x10, lsl #1]
   284c8:	tbz	w12, #3, 284ac <rpl_re_set_registers@@Base+0x3598>
   284cc:	b	2849c <rpl_re_set_registers@@Base+0x3588>
   284d0:	ldr	x21, [sp, #40]
   284d4:	ldr	x14, [sp, #56]
   284d8:	mov	x20, xzr
   284dc:	ldr	w8, [x23, #128]
   284e0:	cmp	w8, #0xf
   284e4:	b.ne	26b10 <rpl_re_set_registers@@Base+0x1bfc>  // b.any
   284e8:	mov	w0, #0x3c8                 	// #968
   284ec:	bl	a550 <malloc@plt>
   284f0:	ldr	x14, [sp, #56]
   284f4:	cbz	x0, 28510 <rpl_re_set_registers@@Base+0x35fc>
   284f8:	ldr	x9, [x23, #112]
   284fc:	mov	w8, wzr
   28500:	str	x9, [x0]
   28504:	str	x0, [x23, #112]
   28508:	str	wzr, [x23, #128]
   2850c:	b	26b14 <rpl_re_set_registers@@Base+0x1c00>
   28510:	mov	w8, #0xc                   	// #12
   28514:	str	xzr, [sp, #48]
   28518:	str	w8, [x28]
   2851c:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   28520:	cbz	x25, 285b0 <rpl_re_set_registers@@Base+0x369c>
   28524:	mov	w19, #0xff                  	// #255
   28528:	movk	w19, #0x4, lsl #16
   2852c:	mov	x21, x25
   28530:	ldr	x25, [x25, #8]
   28534:	cbnz	x25, 2852c <rpl_re_set_registers@@Base+0x3618>
   28538:	ldr	x25, [x21, #16]
   2853c:	cbnz	x25, 2852c <rpl_re_set_registers@@Base+0x3618>
   28540:	ldr	w8, [x21, #48]
   28544:	and	w8, w8, w19
   28548:	cmp	w8, #0x3
   2854c:	b.eq	28580 <rpl_re_set_registers@@Base+0x366c>  // b.none
   28550:	cmp	w8, #0x6
   28554:	b.ne	2858c <rpl_re_set_registers@@Base+0x3678>  // b.any
   28558:	ldr	x20, [x21, #40]
   2855c:	ldr	x0, [x20]
   28560:	bl	a970 <free@plt>
   28564:	ldr	x0, [x20, #8]
   28568:	bl	a970 <free@plt>
   2856c:	ldr	x0, [x20, #16]
   28570:	bl	a970 <free@plt>
   28574:	ldr	x0, [x20, #24]
   28578:	bl	a970 <free@plt>
   2857c:	b	28584 <rpl_re_set_registers@@Base+0x3670>
   28580:	ldr	x20, [x21, #40]
   28584:	mov	x0, x20
   28588:	bl	a970 <free@plt>
   2858c:	ldr	x8, [x21]
   28590:	cbz	x8, 285b0 <rpl_re_set_registers@@Base+0x369c>
   28594:	ldr	x25, [x8, #16]
   28598:	cmp	x25, x21
   2859c:	mov	x21, x8
   285a0:	b.eq	28540 <rpl_re_set_registers@@Base+0x362c>  // b.none
   285a4:	mov	x21, x8
   285a8:	cbz	x25, 28540 <rpl_re_set_registers@@Base+0x362c>
   285ac:	b	2852c <rpl_re_set_registers@@Base+0x3618>
   285b0:	mov	w8, #0x8                   	// #8
   285b4:	str	xzr, [sp, #48]
   285b8:	str	w8, [x28]
   285bc:	b	27ee4 <rpl_re_set_registers@@Base+0x2fd0>
   285c0:	mov	w0, #0xb                   	// #11
   285c4:	b	28354 <rpl_re_set_registers@@Base+0x3440>
   285c8:	mov	x19, xzr
   285cc:	mov	w8, #0x9                   	// #9
   285d0:	b	285dc <rpl_re_set_registers@@Base+0x36c8>
   285d4:	mov	x19, xzr
   285d8:	mov	w8, #0xa                   	// #10
   285dc:	ldr	x21, [sp, #40]
   285e0:	ldr	x14, [sp, #56]
   285e4:	str	w8, [x14]
   285e8:	ldr	w8, [x23, #128]
   285ec:	cmp	w8, #0xf
   285f0:	b.ne	26ac8 <rpl_re_set_registers@@Base+0x1bb4>  // b.any
   285f4:	b	27ffc <rpl_re_set_registers@@Base+0x30e8>
   285f8:	mov	w0, #0x3c8                 	// #968
   285fc:	bl	a550 <malloc@plt>
   28600:	cbz	x0, 2861c <rpl_re_set_registers@@Base+0x3708>
   28604:	ldr	x9, [x23, #112]
   28608:	mov	w8, wzr
   2860c:	str	x9, [x0]
   28610:	str	x0, [x23, #112]
   28614:	str	wzr, [x23, #128]
   28618:	b	281a0 <rpl_re_set_registers@@Base+0x328c>
   2861c:	mov	w8, #0xc                   	// #12
   28620:	str	w8, [x28]
   28624:	b	2835c <rpl_re_set_registers@@Base+0x3448>
   28628:	mov	x0, x22
   2862c:	bl	a970 <free@plt>
   28630:	ldr	x0, [sp]
   28634:	bl	a970 <free@plt>
   28638:	mov	w0, #0xc                   	// #12
   2863c:	b	28354 <rpl_re_set_registers@@Base+0x3440>
   28640:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   28644:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28648:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   2864c:	add	x0, x0, #0x798
   28650:	add	x1, x1, #0x504
   28654:	add	x3, x3, #0x510
   28658:	mov	w2, #0xced                 	// #3309
   2865c:	bl	ad80 <__assert_fail@plt>
   28660:	sub	sp, sp, #0x60
   28664:	stp	x26, x25, [sp, #32]
   28668:	stp	x20, x19, [sp, #80]
   2866c:	mov	x26, x1
   28670:	mov	x20, x0
   28674:	mov	w0, #0x20                  	// #32
   28678:	mov	w1, #0x1                   	// #1
   2867c:	stp	x29, x30, [sp, #16]
   28680:	stp	x24, x23, [sp, #48]
   28684:	stp	x22, x21, [sp, #64]
   28688:	add	x29, sp, #0x10
   2868c:	mov	x21, x5
   28690:	mov	w23, w4
   28694:	mov	x24, x3
   28698:	mov	x25, x2
   2869c:	str	xzr, [sp, #8]
   286a0:	bl	a6c0 <calloc@plt>
   286a4:	cbz	x0, 28978 <rpl_re_set_registers@@Base+0x3a64>
   286a8:	mov	x22, x0
   286ac:	mov	w0, #0x50                  	// #80
   286b0:	mov	w1, #0x1                   	// #1
   286b4:	bl	a6c0 <calloc@plt>
   286b8:	cbz	x0, 288dc <rpl_re_set_registers@@Base+0x39c8>
   286bc:	mov	x19, x0
   286c0:	and	w8, w23, #0x1
   286c4:	strb	w8, [x0, #32]
   286c8:	add	x3, sp, #0x8
   286cc:	mov	x0, x26
   286d0:	mov	x1, x22
   286d4:	mov	x2, x19
   286d8:	mov	x4, x25
   286dc:	mov	x5, xzr
   286e0:	bl	28e0c <rpl_re_set_registers@@Base+0x3ef8>
   286e4:	cbnz	w0, 288e4 <rpl_re_set_registers@@Base+0x39d0>
   286e8:	ldrb	w8, [x24]
   286ec:	cbz	w8, 28718 <rpl_re_set_registers@@Base+0x3804>
   286f0:	add	x9, x24, #0x1
   286f4:	mov	w10, #0x1                   	// #1
   286f8:	lsr	w11, w8, #3
   286fc:	and	x11, x11, #0x18
   28700:	ldr	x12, [x22, x11]
   28704:	lsl	x8, x10, x8
   28708:	orr	x8, x12, x8
   2870c:	str	x8, [x22, x11]
   28710:	ldrb	w8, [x9], #1
   28714:	cbnz	w8, 286f8 <rpl_re_set_registers@@Base+0x37e4>
   28718:	tbnz	w23, #0, 2880c <rpl_re_set_registers@@Base+0x38f8>
   2871c:	ldr	w8, [x20, #180]
   28720:	cmp	w8, #0x2
   28724:	b.ge	28828 <rpl_re_set_registers@@Base+0x3914>  // b.tcont
   28728:	ldr	w8, [x20, #128]
   2872c:	cmp	w8, #0xf
   28730:	b.eq	28870 <rpl_re_set_registers@@Base+0x395c>  // b.none
   28734:	ldr	x0, [x20, #112]
   28738:	add	w9, w8, #0x1
   2873c:	sxtw	x8, w8
   28740:	add	x23, x0, x8, lsl #6
   28744:	str	w9, [x20, #128]
   28748:	mov	w9, #0x3                   	// #3
   2874c:	mov	x8, #0xffffffffffffffff    	// #-1
   28750:	str	xzr, [x23, #8]!
   28754:	stp	xzr, xzr, [x23, #16]
   28758:	str	xzr, [x23, #8]
   2875c:	str	w9, [x23, #48]
   28760:	stp	xzr, x22, [x23, #32]
   28764:	str	x8, [x23, #56]
   28768:	ldr	w8, [x20, #180]
   2876c:	cmp	w8, #0x2
   28770:	b.lt	28894 <rpl_re_set_registers@@Base+0x3980>  // b.tstop
   28774:	ldrb	w9, [x20, #176]
   28778:	ldr	w8, [x20, #128]
   2877c:	orr	w9, w9, #0x2
   28780:	cmp	w8, #0xf
   28784:	strb	w9, [x20, #176]
   28788:	b.eq	28924 <rpl_re_set_registers@@Base+0x3a10>  // b.none
   2878c:	ldr	x0, [x20, #112]
   28790:	add	w9, w8, #0x1
   28794:	sxtw	x8, w8
   28798:	add	x21, x0, x8, lsl #6
   2879c:	str	w9, [x20, #128]
   287a0:	mov	w9, #0x6                   	// #6
   287a4:	mov	x8, #0xffffffffffffffff    	// #-1
   287a8:	str	xzr, [x21, #8]!
   287ac:	stp	xzr, xzr, [x21, #16]
   287b0:	str	xzr, [x21, #8]
   287b4:	str	w9, [x21, #48]
   287b8:	stp	xzr, x19, [x21, #32]
   287bc:	str	x8, [x21, #56]
   287c0:	ldr	w8, [x20, #128]
   287c4:	cmp	w8, #0xf
   287c8:	b.eq	28988 <rpl_re_set_registers@@Base+0x3a74>  // b.none
   287cc:	ldr	x0, [x20, #112]
   287d0:	add	w9, w8, #0x1
   287d4:	sxtw	x8, w8
   287d8:	add	x8, x0, x8, lsl #6
   287dc:	str	w9, [x20, #128]
   287e0:	mov	w9, #0xa                   	// #10
   287e4:	mov	x10, #0xffffffffffffffff    	// #-1
   287e8:	str	xzr, [x8, #8]!
   287ec:	stp	x23, x21, [x8, #8]
   287f0:	str	w9, [x8, #48]
   287f4:	stp	xzr, xzr, [x8, #24]
   287f8:	str	x10, [x8, #56]
   287fc:	str	x8, [x23]
   28800:	str	x8, [x21]
   28804:	mov	x23, x8
   28808:	b	288bc <rpl_re_set_registers@@Base+0x39a8>
   2880c:	ldp	q0, q1, [x22]
   28810:	mvn	v0.16b, v0.16b
   28814:	mvn	v1.16b, v1.16b
   28818:	stp	q0, q1, [x22]
   2881c:	ldr	w8, [x20, #180]
   28820:	cmp	w8, #0x2
   28824:	b.lt	28728 <rpl_re_set_registers@@Base+0x3814>  // b.tstop
   28828:	ldr	x8, [x20, #120]
   2882c:	ldp	x10, x11, [x22]
   28830:	ldr	x9, [x8]
   28834:	and	x9, x10, x9
   28838:	str	x9, [x22]
   2883c:	ldr	x9, [x8, #8]
   28840:	and	x9, x11, x9
   28844:	str	x9, [x22, #8]
   28848:	ldr	x9, [x8, #16]
   2884c:	ldp	x10, x11, [x22, #16]
   28850:	and	x9, x10, x9
   28854:	str	x9, [x22, #16]
   28858:	ldr	x8, [x8, #24]
   2885c:	and	x8, x11, x8
   28860:	str	x8, [x22, #24]
   28864:	ldr	w8, [x20, #128]
   28868:	cmp	w8, #0xf
   2886c:	b.ne	28734 <rpl_re_set_registers@@Base+0x3820>  // b.any
   28870:	mov	w0, #0x3c8                 	// #968
   28874:	bl	a550 <malloc@plt>
   28878:	cbz	x0, 28948 <rpl_re_set_registers@@Base+0x3a34>
   2887c:	ldr	x9, [x20, #112]
   28880:	mov	w8, wzr
   28884:	str	x9, [x0]
   28888:	str	x0, [x20, #112]
   2888c:	str	wzr, [x20, #128]
   28890:	b	28738 <rpl_re_set_registers@@Base+0x3824>
   28894:	ldr	x0, [x19]
   28898:	bl	a970 <free@plt>
   2889c:	ldr	x0, [x19, #8]
   288a0:	bl	a970 <free@plt>
   288a4:	ldr	x0, [x19, #16]
   288a8:	bl	a970 <free@plt>
   288ac:	ldr	x0, [x19, #24]
   288b0:	bl	a970 <free@plt>
   288b4:	mov	x0, x19
   288b8:	bl	a970 <free@plt>
   288bc:	mov	x0, x23
   288c0:	ldp	x20, x19, [sp, #80]
   288c4:	ldp	x22, x21, [sp, #64]
   288c8:	ldp	x24, x23, [sp, #48]
   288cc:	ldp	x26, x25, [sp, #32]
   288d0:	ldp	x29, x30, [sp, #16]
   288d4:	add	sp, sp, #0x60
   288d8:	ret
   288dc:	mov	x0, x22
   288e0:	b	28974 <rpl_re_set_registers@@Base+0x3a60>
   288e4:	mov	w25, w0
   288e8:	mov	x0, x22
   288ec:	bl	a970 <free@plt>
   288f0:	ldr	x0, [x19]
   288f4:	bl	a970 <free@plt>
   288f8:	ldr	x0, [x19, #8]
   288fc:	bl	a970 <free@plt>
   28900:	ldr	x0, [x19, #16]
   28904:	bl	a970 <free@plt>
   28908:	ldr	x0, [x19, #24]
   2890c:	bl	a970 <free@plt>
   28910:	mov	x0, x19
   28914:	bl	a970 <free@plt>
   28918:	mov	x23, xzr
   2891c:	str	w25, [x21]
   28920:	b	288bc <rpl_re_set_registers@@Base+0x39a8>
   28924:	mov	w0, #0x3c8                 	// #968
   28928:	bl	a550 <malloc@plt>
   2892c:	cbz	x0, 28948 <rpl_re_set_registers@@Base+0x3a34>
   28930:	ldr	x9, [x20, #112]
   28934:	mov	w8, wzr
   28938:	str	x9, [x0]
   2893c:	str	x0, [x20, #112]
   28940:	str	wzr, [x20, #128]
   28944:	b	28790 <rpl_re_set_registers@@Base+0x387c>
   28948:	mov	x0, x22
   2894c:	bl	a970 <free@plt>
   28950:	ldr	x0, [x19]
   28954:	bl	a970 <free@plt>
   28958:	ldr	x0, [x19, #8]
   2895c:	bl	a970 <free@plt>
   28960:	ldr	x0, [x19, #16]
   28964:	bl	a970 <free@plt>
   28968:	ldr	x0, [x19, #24]
   2896c:	bl	a970 <free@plt>
   28970:	mov	x0, x19
   28974:	bl	a970 <free@plt>
   28978:	mov	x23, xzr
   2897c:	mov	w8, #0xc                   	// #12
   28980:	str	w8, [x21]
   28984:	b	288bc <rpl_re_set_registers@@Base+0x39a8>
   28988:	mov	w0, #0x3c8                 	// #968
   2898c:	bl	a550 <malloc@plt>
   28990:	cbz	x0, 289ac <rpl_re_set_registers@@Base+0x3a98>
   28994:	ldr	x9, [x20, #112]
   28998:	mov	w8, wzr
   2899c:	str	x9, [x0]
   289a0:	str	x0, [x20, #112]
   289a4:	str	wzr, [x20, #128]
   289a8:	b	287d0 <rpl_re_set_registers@@Base+0x38bc>
   289ac:	mov	x23, xzr
   289b0:	b	288bc <rpl_re_set_registers@@Base+0x39a8>
   289b4:	ldr	x9, [x1, #104]
   289b8:	ldr	x8, [x1, #72]
   289bc:	cmp	x9, x8
   289c0:	b.le	28a3c <rpl_re_set_registers@@Base+0x3b28>
   289c4:	ldr	x9, [x1, #8]
   289c8:	ldrb	w8, [x9, x8]
   289cc:	strb	w8, [x0]
   289d0:	ldr	w9, [x1, #144]
   289d4:	cmp	w9, #0x2
   289d8:	b.lt	289fc <rpl_re_set_registers@@Base+0x3ae8>  // b.tstop
   289dc:	ldr	x9, [x1, #72]
   289e0:	ldr	x10, [x1, #48]
   289e4:	cmp	x9, x10
   289e8:	b.eq	289fc <rpl_re_set_registers@@Base+0x3ae8>  // b.none
   289ec:	ldr	x10, [x1, #16]
   289f0:	ldr	w9, [x10, x9, lsl #2]
   289f4:	cmn	w9, #0x1
   289f8:	b.eq	28ac4 <rpl_re_set_registers@@Base+0x3bb0>  // b.none
   289fc:	tbz	w2, #0, 28a4c <rpl_re_set_registers@@Base+0x3b38>
   28a00:	cmp	w8, #0x5c
   28a04:	b.ne	28a4c <rpl_re_set_registers@@Base+0x3b38>  // b.any
   28a08:	ldr	x8, [x1, #72]
   28a0c:	ldr	x9, [x1, #88]
   28a10:	add	x8, x8, #0x1
   28a14:	cmp	x8, x9
   28a18:	b.ge	28ac4 <rpl_re_set_registers@@Base+0x3bb0>  // b.tcont
   28a1c:	ldr	x9, [x1, #8]
   28a20:	str	x8, [x1, #72]
   28a24:	ldrb	w9, [x9, x8]
   28a28:	mov	w8, #0x1                   	// #1
   28a2c:	strb	w9, [x0]
   28a30:	strb	w8, [x0, #8]
   28a34:	mov	w0, w8
   28a38:	ret
   28a3c:	mov	w9, #0x2                   	// #2
   28a40:	strb	w9, [x0, #8]
   28a44:	mov	w0, wzr
   28a48:	ret
   28a4c:	cmp	w8, #0x5c
   28a50:	b.gt	28aa4 <rpl_re_set_registers@@Base+0x3b90>
   28a54:	cmp	w8, #0x2d
   28a58:	b.eq	28ad4 <rpl_re_set_registers@@Base+0x3bc0>  // b.none
   28a5c:	cmp	w8, #0x5b
   28a60:	b.ne	28ac4 <rpl_re_set_registers@@Base+0x3bb0>  // b.any
   28a64:	ldr	x8, [x1, #72]
   28a68:	ldr	x9, [x1, #88]
   28a6c:	add	x8, x8, #0x1
   28a70:	cmp	x8, x9
   28a74:	b.ge	28af4 <rpl_re_set_registers@@Base+0x3be0>  // b.tcont
   28a78:	ldr	x9, [x1, #8]
   28a7c:	ldrb	w8, [x9, x8]
   28a80:	cmp	w8, #0x3d
   28a84:	strb	w8, [x0]
   28a88:	b.eq	28b10 <rpl_re_set_registers@@Base+0x3bfc>  // b.none
   28a8c:	cmp	w8, #0x3a
   28a90:	b.eq	28b18 <rpl_re_set_registers@@Base+0x3c04>  // b.none
   28a94:	cmp	w8, #0x2e
   28a98:	b.ne	28af8 <rpl_re_set_registers@@Base+0x3be4>  // b.any
   28a9c:	mov	w8, #0x1a                  	// #26
   28aa0:	b	28b20 <rpl_re_set_registers@@Base+0x3c0c>
   28aa4:	cmp	w8, #0x5d
   28aa8:	b.eq	28ae4 <rpl_re_set_registers@@Base+0x3bd0>  // b.none
   28aac:	cmp	w8, #0x5e
   28ab0:	b.ne	28ac4 <rpl_re_set_registers@@Base+0x3bb0>  // b.any
   28ab4:	mov	w8, #0x19                  	// #25
   28ab8:	strb	w8, [x0, #8]
   28abc:	mov	w0, #0x1                   	// #1
   28ac0:	ret
   28ac4:	mov	w8, #0x1                   	// #1
   28ac8:	strb	w8, [x0, #8]
   28acc:	mov	w0, w8
   28ad0:	ret
   28ad4:	mov	w8, #0x16                  	// #22
   28ad8:	strb	w8, [x0, #8]
   28adc:	mov	w0, #0x1                   	// #1
   28ae0:	ret
   28ae4:	mov	w8, #0x15                  	// #21
   28ae8:	strb	w8, [x0, #8]
   28aec:	mov	w0, #0x1                   	// #1
   28af0:	ret
   28af4:	strb	wzr, [x0]
   28af8:	mov	w8, #0x1                   	// #1
   28afc:	mov	w9, #0x5b                  	// #91
   28b00:	strb	w8, [x0, #8]
   28b04:	strb	w9, [x0]
   28b08:	mov	w0, w8
   28b0c:	ret
   28b10:	mov	w8, #0x1c                  	// #28
   28b14:	b	28b20 <rpl_re_set_registers@@Base+0x3c0c>
   28b18:	tbz	w2, #2, 28af8 <rpl_re_set_registers@@Base+0x3be4>
   28b1c:	mov	w8, #0x1e                  	// #30
   28b20:	strb	w8, [x0, #8]
   28b24:	mov	w0, #0x2                   	// #2
   28b28:	ret
   28b2c:	sub	sp, sp, #0x30
   28b30:	stp	x29, x30, [sp, #32]
   28b34:	ldr	w8, [x1, #144]
   28b38:	ldr	x9, [x1, #72]
   28b3c:	add	x29, sp, #0x20
   28b40:	cmp	w8, #0x1
   28b44:	b.eq	28bc0 <rpl_re_set_registers@@Base+0x3cac>  // b.none
   28b48:	ldr	x8, [x1, #48]
   28b4c:	add	x10, x9, #0x1
   28b50:	cmp	x10, x8
   28b54:	b.ge	28bc0 <rpl_re_set_registers@@Base+0x3cac>  // b.tcont
   28b58:	ldr	x10, [x1, #16]
   28b5c:	sub	x8, x8, x9
   28b60:	mov	w11, #0x1                   	// #1
   28b64:	add	x12, x10, x9, lsl #2
   28b68:	ldr	w13, [x12, x11, lsl #2]
   28b6c:	cmn	w13, #0x1
   28b70:	b.ne	28b88 <rpl_re_set_registers@@Base+0x3c74>  // b.any
   28b74:	add	x11, x11, #0x1
   28b78:	cmp	x8, x11
   28b7c:	b.ne	28b68 <rpl_re_set_registers@@Base+0x3c54>  // b.any
   28b80:	mov	x11, x8
   28b84:	b	28b90 <rpl_re_set_registers@@Base+0x3c7c>
   28b88:	cmp	w11, #0x2
   28b8c:	b.lt	28bc0 <rpl_re_set_registers@@Base+0x3cac>  // b.tstop
   28b90:	mov	w12, #0x1                   	// #1
   28b94:	str	w12, [x0]
   28b98:	ldr	w9, [x10, x9, lsl #2]
   28b9c:	mov	w8, wzr
   28ba0:	str	w9, [x0, #8]
   28ba4:	ldr	x9, [x1, #72]
   28ba8:	add	x9, x9, w11, sxtw
   28bac:	str	x9, [x1, #72]
   28bb0:	ldp	x29, x30, [sp, #32]
   28bb4:	mov	w0, w8
   28bb8:	add	sp, sp, #0x30
   28bbc:	ret
   28bc0:	add	x8, x9, w3, sxtw
   28bc4:	str	x8, [x1, #72]
   28bc8:	ldrb	w10, [x2, #8]
   28bcc:	sub	w9, w10, #0x16
   28bd0:	cmp	w9, #0x8
   28bd4:	b.hi	28dd8 <rpl_re_set_registers@@Base+0x3ec4>  // b.pmore
   28bd8:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   28bdc:	add	x11, x11, #0x296
   28be0:	adr	x12, 28bf0 <rpl_re_set_registers@@Base+0x3cdc>
   28be4:	ldrb	w13, [x11, x9]
   28be8:	add	x12, x12, x13, lsl #2
   28bec:	br	x12
   28bf0:	ldr	x9, [x1, #104]
   28bf4:	cmp	x9, x8
   28bf8:	b.le	28d44 <rpl_re_set_registers@@Base+0x3e30>
   28bfc:	ldrb	w9, [x2]
   28c00:	mov	x8, xzr
   28c04:	and	w10, w10, #0xff
   28c08:	cmp	w10, #0x1e
   28c0c:	b.ne	28ce4 <rpl_re_set_registers@@Base+0x3dd0>  // b.any
   28c10:	ldrb	w10, [x1, #139]
   28c14:	cbz	w10, 28ce4 <rpl_re_set_registers@@Base+0x3dd0>
   28c18:	ldrb	w10, [x1, #140]
   28c1c:	cbz	w10, 28ca0 <rpl_re_set_registers@@Base+0x3d8c>
   28c20:	ldr	x11, [x1, #72]
   28c24:	ldr	x13, [x1, #48]
   28c28:	subs	x12, x13, x11
   28c2c:	b.eq	28c40 <rpl_re_set_registers@@Base+0x3d2c>  // b.none
   28c30:	ldr	x10, [x1, #16]
   28c34:	ldr	w10, [x10, x11, lsl #2]
   28c38:	cmn	w10, #0x1
   28c3c:	b.eq	28cc0 <rpl_re_set_registers@@Base+0x3dac>  // b.none
   28c40:	ldr	x10, [x1, #24]
   28c44:	ldr	x14, [x1, #40]
   28c48:	ldr	x15, [x1]
   28c4c:	ldr	x10, [x10, x11, lsl #3]
   28c50:	add	x10, x14, x10
   28c54:	ldrsb	w10, [x15, x10]
   28c58:	tbnz	w10, #31, 28cc0 <rpl_re_set_registers@@Base+0x3dac>
   28c5c:	ldr	w14, [x1, #144]
   28c60:	cmp	w14, #0x1
   28c64:	b.eq	28cd4 <rpl_re_set_registers@@Base+0x3dc0>  // b.none
   28c68:	add	x14, x11, #0x1
   28c6c:	cmp	x14, x13
   28c70:	b.ge	28cd4 <rpl_re_set_registers@@Base+0x3dc0>  // b.tcont
   28c74:	ldr	x13, [x1, #16]
   28c78:	add	x14, x13, x11, lsl #2
   28c7c:	mov	w13, #0x1                   	// #1
   28c80:	ldr	w15, [x14, x13, lsl #2]
   28c84:	cmn	w15, #0x1
   28c88:	b.ne	28cd8 <rpl_re_set_registers@@Base+0x3dc4>  // b.any
   28c8c:	add	x13, x13, #0x1
   28c90:	cmp	x12, x13
   28c94:	b.ne	28c80 <rpl_re_set_registers@@Base+0x3d6c>  // b.any
   28c98:	mov	x13, x12
   28c9c:	b	28cd8 <rpl_re_set_registers@@Base+0x3dc4>
   28ca0:	ldr	x10, [x1, #72]
   28ca4:	ldr	x11, [x1, #40]
   28ca8:	ldr	x13, [x1]
   28cac:	add	x12, x10, #0x1
   28cb0:	str	x12, [x1, #72]
   28cb4:	add	x10, x10, x11
   28cb8:	ldrb	w10, [x13, x10]
   28cbc:	b	28cf8 <rpl_re_set_registers@@Base+0x3de4>
   28cc0:	ldr	x10, [x1, #8]
   28cc4:	add	x12, x11, #0x1
   28cc8:	str	x12, [x1, #72]
   28ccc:	ldrb	w10, [x10, x11]
   28cd0:	b	28cf8 <rpl_re_set_registers@@Base+0x3de4>
   28cd4:	mov	w13, #0x1                   	// #1
   28cd8:	add	x12, x11, w13, sxtw
   28cdc:	str	x12, [x1, #72]
   28ce0:	b	28cf8 <rpl_re_set_registers@@Base+0x3de4>
   28ce4:	ldr	x10, [x1, #72]
   28ce8:	ldr	x11, [x1, #8]
   28cec:	add	x12, x10, #0x1
   28cf0:	str	x12, [x1, #72]
   28cf4:	ldrb	w10, [x11, x10]
   28cf8:	ldr	x11, [x1, #104]
   28cfc:	cmp	x11, x12
   28d00:	b.le	28d44 <rpl_re_set_registers@@Base+0x3e30>
   28d04:	cmp	w9, w10, uxtb
   28d08:	b.ne	28d1c <rpl_re_set_registers@@Base+0x3e08>  // b.any
   28d0c:	ldr	x11, [x1, #8]
   28d10:	ldrb	w11, [x11, x12]
   28d14:	cmp	w11, #0x5d
   28d18:	b.eq	28d58 <rpl_re_set_registers@@Base+0x3e44>  // b.none
   28d1c:	ldr	x11, [x0, #8]
   28d20:	strb	w10, [x11, x8]
   28d24:	add	x8, x8, #0x1
   28d28:	cmp	x8, #0x20
   28d2c:	b.eq	28d44 <rpl_re_set_registers@@Base+0x3e30>  // b.none
   28d30:	ldrb	w10, [x2, #8]
   28d34:	and	w10, w10, #0xff
   28d38:	cmp	w10, #0x1e
   28d3c:	b.eq	28c10 <rpl_re_set_registers@@Base+0x3cfc>  // b.none
   28d40:	b	28ce4 <rpl_re_set_registers@@Base+0x3dd0>
   28d44:	mov	w8, #0x7                   	// #7
   28d48:	ldp	x29, x30, [sp, #32]
   28d4c:	mov	w0, w8
   28d50:	add	sp, sp, #0x30
   28d54:	ret
   28d58:	add	x9, x12, #0x1
   28d5c:	str	x9, [x1, #72]
   28d60:	ldr	x9, [x0, #8]
   28d64:	strb	wzr, [x9, w8, uxtw]
   28d68:	ldrb	w8, [x2, #8]
   28d6c:	cmp	w8, #0x1e
   28d70:	b.eq	28d90 <rpl_re_set_registers@@Base+0x3e7c>  // b.none
   28d74:	cmp	w8, #0x1c
   28d78:	b.eq	28d98 <rpl_re_set_registers@@Base+0x3e84>  // b.none
   28d7c:	cmp	w8, #0x1a
   28d80:	mov	w8, wzr
   28d84:	b.ne	28bb0 <rpl_re_set_registers@@Base+0x3c9c>  // b.any
   28d88:	mov	w9, #0x3                   	// #3
   28d8c:	b	28d9c <rpl_re_set_registers@@Base+0x3e88>
   28d90:	mov	w9, #0x4                   	// #4
   28d94:	b	28d9c <rpl_re_set_registers@@Base+0x3e88>
   28d98:	mov	w9, #0x2                   	// #2
   28d9c:	mov	w8, wzr
   28da0:	str	w9, [x0]
   28da4:	ldp	x29, x30, [sp, #32]
   28da8:	mov	w0, w8
   28dac:	add	sp, sp, #0x30
   28db0:	ret
   28db4:	tbnz	w5, #0, 28dd8 <rpl_re_set_registers@@Base+0x3ec4>
   28db8:	stp	x2, x0, [sp]
   28dbc:	add	x0, sp, #0x10
   28dc0:	mov	x2, x4
   28dc4:	bl	289b4 <rpl_re_set_registers@@Base+0x3aa0>
   28dc8:	ldrb	w8, [sp, #24]
   28dcc:	ldp	x2, x0, [sp]
   28dd0:	cmp	w8, #0x15
   28dd4:	b.ne	28df8 <rpl_re_set_registers@@Base+0x3ee4>  // b.any
   28dd8:	str	wzr, [x0]
   28ddc:	ldrb	w9, [x2]
   28de0:	mov	w8, wzr
   28de4:	strb	w9, [x0, #8]
   28de8:	ldp	x29, x30, [sp, #32]
   28dec:	mov	w0, w8
   28df0:	add	sp, sp, #0x30
   28df4:	ret
   28df8:	mov	w8, #0xb                   	// #11
   28dfc:	ldp	x29, x30, [sp, #32]
   28e00:	mov	w0, w8
   28e04:	add	sp, sp, #0x30
   28e08:	ret
   28e0c:	stp	x29, x30, [sp, #-64]!
   28e10:	stp	x24, x23, [sp, #16]
   28e14:	stp	x22, x21, [sp, #32]
   28e18:	stp	x20, x19, [sp, #48]
   28e1c:	mov	x21, x4
   28e20:	mov	x23, x3
   28e24:	mov	x22, x2
   28e28:	mov	x19, x1
   28e2c:	mov	x20, x0
   28e30:	mov	x29, sp
   28e34:	tbz	w5, #22, 28e68 <rpl_re_set_registers@@Base+0x3f54>
   28e38:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28e3c:	add	x1, x1, #0x576
   28e40:	mov	x0, x21
   28e44:	bl	a8f0 <strcmp@plt>
   28e48:	cbz	w0, 28e60 <rpl_re_set_registers@@Base+0x3f4c>
   28e4c:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28e50:	add	x1, x1, #0x57c
   28e54:	mov	x0, x21
   28e58:	bl	a8f0 <strcmp@plt>
   28e5c:	cbnz	w0, 28e68 <rpl_re_set_registers@@Base+0x3f54>
   28e60:	adrp	x21, 34000 <vasnprintf@@Base+0x3474>
   28e64:	add	x21, x21, #0x582
   28e68:	ldr	x8, [x23]
   28e6c:	ldr	x9, [x22, #72]
   28e70:	cmp	x8, x9
   28e74:	b.eq	2946c <rpl_re_set_registers@@Base+0x4558>  // b.none
   28e78:	mov	x0, x21
   28e7c:	bl	a310 <wctype@plt>
   28e80:	ldr	x8, [x22, #72]
   28e84:	ldr	x9, [x22, #24]
   28e88:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28e8c:	add	x1, x1, #0x4f8
   28e90:	add	x10, x8, #0x1
   28e94:	str	x10, [x22, #72]
   28e98:	str	x0, [x9, x8, lsl #3]
   28e9c:	mov	x0, x21
   28ea0:	bl	a8f0 <strcmp@plt>
   28ea4:	cbz	w0, 28f8c <rpl_re_set_registers@@Base+0x4078>
   28ea8:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28eac:	add	x1, x1, #0x588
   28eb0:	mov	x0, x21
   28eb4:	bl	a8f0 <strcmp@plt>
   28eb8:	cbz	w0, 28fd4 <rpl_re_set_registers@@Base+0x40c0>
   28ebc:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28ec0:	add	x1, x1, #0x57c
   28ec4:	mov	x0, x21
   28ec8:	bl	a8f0 <strcmp@plt>
   28ecc:	cbz	w0, 2901c <rpl_re_set_registers@@Base+0x4108>
   28ed0:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28ed4:	add	x1, x1, #0x4fe
   28ed8:	mov	x0, x21
   28edc:	bl	a8f0 <strcmp@plt>
   28ee0:	cbz	w0, 29064 <rpl_re_set_registers@@Base+0x4150>
   28ee4:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28ee8:	add	x1, x1, #0x582
   28eec:	mov	x0, x21
   28ef0:	bl	a8f0 <strcmp@plt>
   28ef4:	cbz	w0, 290ac <rpl_re_set_registers@@Base+0x4198>
   28ef8:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28efc:	add	x1, x1, #0x5a7
   28f00:	mov	x0, x21
   28f04:	bl	a8f0 <strcmp@plt>
   28f08:	cbz	w0, 290f4 <rpl_re_set_registers@@Base+0x41e0>
   28f0c:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28f10:	add	x1, x1, #0x58e
   28f14:	mov	x0, x21
   28f18:	bl	a8f0 <strcmp@plt>
   28f1c:	cbz	w0, 29154 <rpl_re_set_registers@@Base+0x4240>
   28f20:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28f24:	add	x1, x1, #0x576
   28f28:	mov	x0, x21
   28f2c:	bl	a8f0 <strcmp@plt>
   28f30:	cbz	w0, 291a0 <rpl_re_set_registers@@Base+0x428c>
   28f34:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28f38:	add	x1, x1, #0x594
   28f3c:	mov	x0, x21
   28f40:	bl	a8f0 <strcmp@plt>
   28f44:	cbz	w0, 291ec <rpl_re_set_registers@@Base+0x42d8>
   28f48:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28f4c:	add	x1, x1, #0x59a
   28f50:	mov	x0, x21
   28f54:	bl	a8f0 <strcmp@plt>
   28f58:	cbz	w0, 29270 <rpl_re_set_registers@@Base+0x435c>
   28f5c:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28f60:	add	x1, x1, #0x5a0
   28f64:	mov	x0, x21
   28f68:	bl	a8f0 <strcmp@plt>
   28f6c:	cbz	w0, 292f4 <rpl_re_set_registers@@Base+0x43e0>
   28f70:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   28f74:	add	x1, x1, #0x5a6
   28f78:	mov	x0, x21
   28f7c:	bl	a8f0 <strcmp@plt>
   28f80:	cbz	w0, 29378 <rpl_re_set_registers@@Base+0x4464>
   28f84:	mov	w0, #0x4                   	// #4
   28f88:	b	29140 <rpl_re_set_registers@@Base+0x422c>
   28f8c:	bl	a910 <__ctype_b_loc@plt>
   28f90:	ldr	x8, [x0]
   28f94:	mov	x9, xzr
   28f98:	mov	w10, #0x1                   	// #1
   28f9c:	cbz	x20, 28fb0 <rpl_re_set_registers@@Base+0x409c>
   28fa0:	b	29248 <rpl_re_set_registers@@Base+0x4334>
   28fa4:	add	x9, x9, #0x1
   28fa8:	cmp	x9, #0x100
   28fac:	b.eq	2913c <rpl_re_set_registers@@Base+0x4228>  // b.none
   28fb0:	ldrh	w11, [x8, x9, lsl #1]
   28fb4:	tbz	w11, #3, 28fa4 <rpl_re_set_registers@@Base+0x4090>
   28fb8:	ubfx	x11, x9, #6, #2
   28fbc:	lsl	x11, x11, #3
   28fc0:	ldr	x12, [x19, x11]
   28fc4:	lsl	x13, x10, x9
   28fc8:	orr	x12, x12, x13
   28fcc:	str	x12, [x19, x11]
   28fd0:	b	28fa4 <rpl_re_set_registers@@Base+0x4090>
   28fd4:	bl	a910 <__ctype_b_loc@plt>
   28fd8:	ldr	x8, [x0]
   28fdc:	mov	x9, xzr
   28fe0:	mov	w10, #0x1                   	// #1
   28fe4:	cbz	x20, 28ff8 <rpl_re_set_registers@@Base+0x40e4>
   28fe8:	b	292cc <rpl_re_set_registers@@Base+0x43b8>
   28fec:	add	x9, x9, #0x1
   28ff0:	cmp	x9, #0x100
   28ff4:	b.eq	2913c <rpl_re_set_registers@@Base+0x4228>  // b.none
   28ff8:	ldrh	w11, [x8, x9, lsl #1]
   28ffc:	tbz	w11, #1, 28fec <rpl_re_set_registers@@Base+0x40d8>
   29000:	ubfx	x11, x9, #6, #2
   29004:	lsl	x11, x11, #3
   29008:	ldr	x12, [x19, x11]
   2900c:	lsl	x13, x10, x9
   29010:	orr	x12, x12, x13
   29014:	str	x12, [x19, x11]
   29018:	b	28fec <rpl_re_set_registers@@Base+0x40d8>
   2901c:	bl	a910 <__ctype_b_loc@plt>
   29020:	ldr	x8, [x0]
   29024:	mov	x9, xzr
   29028:	mov	w10, #0x1                   	// #1
   2902c:	cbz	x20, 29040 <rpl_re_set_registers@@Base+0x412c>
   29030:	b	29350 <rpl_re_set_registers@@Base+0x443c>
   29034:	add	x9, x9, #0x1
   29038:	cmp	x9, #0x100
   2903c:	b.eq	2913c <rpl_re_set_registers@@Base+0x4228>  // b.none
   29040:	ldrh	w11, [x8, x9, lsl #1]
   29044:	tbz	w11, #9, 29034 <rpl_re_set_registers@@Base+0x4120>
   29048:	ubfx	x11, x9, #6, #2
   2904c:	lsl	x11, x11, #3
   29050:	ldr	x12, [x19, x11]
   29054:	lsl	x13, x10, x9
   29058:	orr	x12, x12, x13
   2905c:	str	x12, [x19, x11]
   29060:	b	29034 <rpl_re_set_registers@@Base+0x4120>
   29064:	bl	a910 <__ctype_b_loc@plt>
   29068:	ldr	x8, [x0]
   2906c:	mov	x9, xzr
   29070:	mov	w10, #0x1                   	// #1
   29074:	cbz	x20, 29088 <rpl_re_set_registers@@Base+0x4174>
   29078:	b	293d4 <rpl_re_set_registers@@Base+0x44c0>
   2907c:	add	x9, x9, #0x1
   29080:	cmp	x9, #0x100
   29084:	b.eq	2913c <rpl_re_set_registers@@Base+0x4228>  // b.none
   29088:	ldrh	w11, [x8, x9, lsl #1]
   2908c:	tbz	w11, #13, 2907c <rpl_re_set_registers@@Base+0x4168>
   29090:	ubfx	x11, x9, #6, #2
   29094:	lsl	x11, x11, #3
   29098:	ldr	x12, [x19, x11]
   2909c:	lsl	x13, x10, x9
   290a0:	orr	x12, x12, x13
   290a4:	str	x12, [x19, x11]
   290a8:	b	2907c <rpl_re_set_registers@@Base+0x4168>
   290ac:	bl	a910 <__ctype_b_loc@plt>
   290b0:	ldr	x8, [x0]
   290b4:	mov	x9, xzr
   290b8:	mov	w10, #0x1                   	// #1
   290bc:	cbz	x20, 290d0 <rpl_re_set_registers@@Base+0x41bc>
   290c0:	b	2940c <rpl_re_set_registers@@Base+0x44f8>
   290c4:	add	x9, x9, #0x1
   290c8:	cmp	x9, #0x100
   290cc:	b.eq	2913c <rpl_re_set_registers@@Base+0x4228>  // b.none
   290d0:	ldrh	w11, [x8, x9, lsl #1]
   290d4:	tbz	w11, #10, 290c4 <rpl_re_set_registers@@Base+0x41b0>
   290d8:	ubfx	x11, x9, #6, #2
   290dc:	lsl	x11, x11, #3
   290e0:	ldr	x12, [x19, x11]
   290e4:	lsl	x13, x10, x9
   290e8:	orr	x12, x12, x13
   290ec:	str	x12, [x19, x11]
   290f0:	b	290c4 <rpl_re_set_registers@@Base+0x41b0>
   290f4:	bl	a910 <__ctype_b_loc@plt>
   290f8:	ldr	x8, [x0]
   290fc:	mov	x9, xzr
   29100:	mov	w10, #0x1                   	// #1
   29104:	cbz	x20, 29118 <rpl_re_set_registers@@Base+0x4204>
   29108:	b	29444 <rpl_re_set_registers@@Base+0x4530>
   2910c:	add	x9, x9, #0x1
   29110:	cmp	x9, #0x100
   29114:	b.eq	2913c <rpl_re_set_registers@@Base+0x4228>  // b.none
   29118:	ldrh	w11, [x8, x9, lsl #1]
   2911c:	tbz	w11, #11, 2910c <rpl_re_set_registers@@Base+0x41f8>
   29120:	ubfx	x11, x9, #6, #2
   29124:	lsl	x11, x11, #3
   29128:	ldr	x12, [x19, x11]
   2912c:	lsl	x13, x10, x9
   29130:	orr	x12, x12, x13
   29134:	str	x12, [x19, x11]
   29138:	b	2910c <rpl_re_set_registers@@Base+0x41f8>
   2913c:	mov	w0, wzr
   29140:	ldp	x20, x19, [sp, #48]
   29144:	ldp	x22, x21, [sp, #32]
   29148:	ldp	x24, x23, [sp, #16]
   2914c:	ldp	x29, x30, [sp], #64
   29150:	ret
   29154:	bl	a910 <__ctype_b_loc@plt>
   29158:	ldr	x8, [x0]
   2915c:	mov	x9, xzr
   29160:	mov	w10, #0x1                   	// #1
   29164:	cbz	x20, 2917c <rpl_re_set_registers@@Base+0x4268>
   29168:	b	294a0 <rpl_re_set_registers@@Base+0x458c>
   2916c:	add	x9, x9, #0x1
   29170:	cmp	x9, #0x100
   29174:	mov	w0, wzr
   29178:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   2917c:	ldrh	w11, [x8, x9, lsl #1]
   29180:	tbz	w11, #14, 2916c <rpl_re_set_registers@@Base+0x4258>
   29184:	ubfx	x11, x9, #6, #2
   29188:	lsl	x11, x11, #3
   2918c:	ldr	x12, [x19, x11]
   29190:	lsl	x13, x10, x9
   29194:	orr	x12, x12, x13
   29198:	str	x12, [x19, x11]
   2919c:	b	2916c <rpl_re_set_registers@@Base+0x4258>
   291a0:	bl	a910 <__ctype_b_loc@plt>
   291a4:	ldr	x8, [x0]
   291a8:	mov	x9, xzr
   291ac:	mov	w10, #0x1                   	// #1
   291b0:	cbz	x20, 291c8 <rpl_re_set_registers@@Base+0x42b4>
   291b4:	b	294d8 <rpl_re_set_registers@@Base+0x45c4>
   291b8:	add	x9, x9, #0x1
   291bc:	cmp	x9, #0x100
   291c0:	mov	w0, wzr
   291c4:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   291c8:	ldrh	w11, [x8, x9, lsl #1]
   291cc:	tbz	w11, #8, 291b8 <rpl_re_set_registers@@Base+0x42a4>
   291d0:	ubfx	x11, x9, #6, #2
   291d4:	lsl	x11, x11, #3
   291d8:	ldr	x12, [x19, x11]
   291dc:	lsl	x13, x10, x9
   291e0:	orr	x12, x12, x13
   291e4:	str	x12, [x19, x11]
   291e8:	b	291b8 <rpl_re_set_registers@@Base+0x42a4>
   291ec:	bl	a910 <__ctype_b_loc@plt>
   291f0:	ldr	x8, [x0]
   291f4:	mov	x9, xzr
   291f8:	mov	w10, #0x1                   	// #1
   291fc:	cbz	x20, 29214 <rpl_re_set_registers@@Base+0x4300>
   29200:	b	29510 <rpl_re_set_registers@@Base+0x45fc>
   29204:	add	x9, x9, #0x1
   29208:	cmp	x9, #0x100
   2920c:	mov	w0, wzr
   29210:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29214:	ldrh	w11, [x8, x9, lsl #1]
   29218:	tbz	w11, #0, 29204 <rpl_re_set_registers@@Base+0x42f0>
   2921c:	ubfx	x11, x9, #6, #2
   29220:	lsl	x11, x11, #3
   29224:	ldr	x12, [x19, x11]
   29228:	lsl	x13, x10, x9
   2922c:	orr	x12, x12, x13
   29230:	str	x12, [x19, x11]
   29234:	b	29204 <rpl_re_set_registers@@Base+0x42f0>
   29238:	add	x9, x9, #0x1
   2923c:	cmp	x9, #0x100
   29240:	mov	w0, wzr
   29244:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29248:	ldrh	w11, [x8, x9, lsl #1]
   2924c:	tbz	w11, #3, 29238 <rpl_re_set_registers@@Base+0x4324>
   29250:	ldrb	w11, [x20, x9]
   29254:	lsr	x12, x11, #3
   29258:	and	x12, x12, #0x18
   2925c:	ldr	x13, [x19, x12]
   29260:	lsl	x11, x10, x11
   29264:	orr	x11, x11, x13
   29268:	str	x11, [x19, x12]
   2926c:	b	29238 <rpl_re_set_registers@@Base+0x4324>
   29270:	bl	a910 <__ctype_b_loc@plt>
   29274:	ldr	x8, [x0]
   29278:	mov	x9, xzr
   2927c:	mov	w10, #0x1                   	// #1
   29280:	cbz	x20, 29298 <rpl_re_set_registers@@Base+0x4384>
   29284:	b	29548 <rpl_re_set_registers@@Base+0x4634>
   29288:	add	x9, x9, #0x1
   2928c:	cmp	x9, #0x100
   29290:	mov	w0, wzr
   29294:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29298:	ldrsh	w11, [x8, x9, lsl #1]
   2929c:	tbz	w11, #31, 29288 <rpl_re_set_registers@@Base+0x4374>
   292a0:	ubfx	x11, x9, #6, #2
   292a4:	lsl	x11, x11, #3
   292a8:	ldr	x12, [x19, x11]
   292ac:	lsl	x13, x10, x9
   292b0:	orr	x12, x12, x13
   292b4:	str	x12, [x19, x11]
   292b8:	b	29288 <rpl_re_set_registers@@Base+0x4374>
   292bc:	add	x9, x9, #0x1
   292c0:	cmp	x9, #0x100
   292c4:	mov	w0, wzr
   292c8:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   292cc:	ldrh	w11, [x8, x9, lsl #1]
   292d0:	tbz	w11, #1, 292bc <rpl_re_set_registers@@Base+0x43a8>
   292d4:	ldrb	w11, [x20, x9]
   292d8:	lsr	x12, x11, #3
   292dc:	and	x12, x12, #0x18
   292e0:	ldr	x13, [x19, x12]
   292e4:	lsl	x11, x10, x11
   292e8:	orr	x11, x11, x13
   292ec:	str	x11, [x19, x12]
   292f0:	b	292bc <rpl_re_set_registers@@Base+0x43a8>
   292f4:	bl	a910 <__ctype_b_loc@plt>
   292f8:	ldr	x8, [x0]
   292fc:	mov	x9, xzr
   29300:	mov	w10, #0x1                   	// #1
   29304:	cbz	x20, 2931c <rpl_re_set_registers@@Base+0x4408>
   29308:	b	29580 <rpl_re_set_registers@@Base+0x466c>
   2930c:	add	x9, x9, #0x1
   29310:	cmp	x9, #0x100
   29314:	mov	w0, wzr
   29318:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   2931c:	ldrh	w11, [x8, x9, lsl #1]
   29320:	tbz	w11, #2, 2930c <rpl_re_set_registers@@Base+0x43f8>
   29324:	ubfx	x11, x9, #6, #2
   29328:	lsl	x11, x11, #3
   2932c:	ldr	x12, [x19, x11]
   29330:	lsl	x13, x10, x9
   29334:	orr	x12, x12, x13
   29338:	str	x12, [x19, x11]
   2933c:	b	2930c <rpl_re_set_registers@@Base+0x43f8>
   29340:	add	x9, x9, #0x1
   29344:	cmp	x9, #0x100
   29348:	mov	w0, wzr
   2934c:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29350:	ldrh	w11, [x8, x9, lsl #1]
   29354:	tbz	w11, #9, 29340 <rpl_re_set_registers@@Base+0x442c>
   29358:	ldrb	w11, [x20, x9]
   2935c:	lsr	x12, x11, #3
   29360:	and	x12, x12, #0x18
   29364:	ldr	x13, [x19, x12]
   29368:	lsl	x11, x10, x11
   2936c:	orr	x11, x11, x13
   29370:	str	x11, [x19, x12]
   29374:	b	29340 <rpl_re_set_registers@@Base+0x442c>
   29378:	bl	a910 <__ctype_b_loc@plt>
   2937c:	ldr	x8, [x0]
   29380:	mov	x9, xzr
   29384:	mov	w10, #0x1                   	// #1
   29388:	cbz	x20, 293a0 <rpl_re_set_registers@@Base+0x448c>
   2938c:	b	295b8 <rpl_re_set_registers@@Base+0x46a4>
   29390:	add	x9, x9, #0x1
   29394:	cmp	x9, #0x100
   29398:	mov	w0, wzr
   2939c:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   293a0:	ldrh	w11, [x8, x9, lsl #1]
   293a4:	tbz	w11, #12, 29390 <rpl_re_set_registers@@Base+0x447c>
   293a8:	ubfx	x11, x9, #6, #2
   293ac:	lsl	x11, x11, #3
   293b0:	ldr	x12, [x19, x11]
   293b4:	lsl	x13, x10, x9
   293b8:	orr	x12, x12, x13
   293bc:	str	x12, [x19, x11]
   293c0:	b	29390 <rpl_re_set_registers@@Base+0x447c>
   293c4:	add	x9, x9, #0x1
   293c8:	cmp	x9, #0x100
   293cc:	mov	w0, wzr
   293d0:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   293d4:	ldrh	w11, [x8, x9, lsl #1]
   293d8:	tbz	w11, #13, 293c4 <rpl_re_set_registers@@Base+0x44b0>
   293dc:	ldrb	w11, [x20, x9]
   293e0:	lsr	x12, x11, #3
   293e4:	and	x12, x12, #0x18
   293e8:	ldr	x13, [x19, x12]
   293ec:	lsl	x11, x10, x11
   293f0:	orr	x11, x11, x13
   293f4:	str	x11, [x19, x12]
   293f8:	b	293c4 <rpl_re_set_registers@@Base+0x44b0>
   293fc:	add	x9, x9, #0x1
   29400:	cmp	x9, #0x100
   29404:	mov	w0, wzr
   29408:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   2940c:	ldrh	w11, [x8, x9, lsl #1]
   29410:	tbz	w11, #10, 293fc <rpl_re_set_registers@@Base+0x44e8>
   29414:	ldrb	w11, [x20, x9]
   29418:	lsr	x12, x11, #3
   2941c:	and	x12, x12, #0x18
   29420:	ldr	x13, [x19, x12]
   29424:	lsl	x11, x10, x11
   29428:	orr	x11, x11, x13
   2942c:	str	x11, [x19, x12]
   29430:	b	293fc <rpl_re_set_registers@@Base+0x44e8>
   29434:	add	x9, x9, #0x1
   29438:	cmp	x9, #0x100
   2943c:	mov	w0, wzr
   29440:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29444:	ldrh	w11, [x8, x9, lsl #1]
   29448:	tbz	w11, #11, 29434 <rpl_re_set_registers@@Base+0x4520>
   2944c:	ldrb	w11, [x20, x9]
   29450:	lsr	x12, x11, #3
   29454:	and	x12, x12, #0x18
   29458:	ldr	x13, [x19, x12]
   2945c:	lsl	x11, x10, x11
   29460:	orr	x11, x11, x13
   29464:	str	x11, [x19, x12]
   29468:	b	29434 <rpl_re_set_registers@@Base+0x4520>
   2946c:	ldr	x0, [x22, #24]
   29470:	mov	w24, #0x1                   	// #1
   29474:	bfi	x24, x8, #1, #63
   29478:	lsl	x1, x24, #3
   2947c:	bl	a730 <realloc@plt>
   29480:	cbz	x0, 295e0 <rpl_re_set_registers@@Base+0x46cc>
   29484:	str	x0, [x22, #24]
   29488:	str	x24, [x23]
   2948c:	b	28e78 <rpl_re_set_registers@@Base+0x3f64>
   29490:	add	x9, x9, #0x1
   29494:	cmp	x9, #0x100
   29498:	mov	w0, wzr
   2949c:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   294a0:	ldrh	w11, [x8, x9, lsl #1]
   294a4:	tbz	w11, #14, 29490 <rpl_re_set_registers@@Base+0x457c>
   294a8:	ldrb	w11, [x20, x9]
   294ac:	lsr	x12, x11, #3
   294b0:	and	x12, x12, #0x18
   294b4:	ldr	x13, [x19, x12]
   294b8:	lsl	x11, x10, x11
   294bc:	orr	x11, x11, x13
   294c0:	str	x11, [x19, x12]
   294c4:	b	29490 <rpl_re_set_registers@@Base+0x457c>
   294c8:	add	x9, x9, #0x1
   294cc:	cmp	x9, #0x100
   294d0:	mov	w0, wzr
   294d4:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   294d8:	ldrh	w11, [x8, x9, lsl #1]
   294dc:	tbz	w11, #8, 294c8 <rpl_re_set_registers@@Base+0x45b4>
   294e0:	ldrb	w11, [x20, x9]
   294e4:	lsr	x12, x11, #3
   294e8:	and	x12, x12, #0x18
   294ec:	ldr	x13, [x19, x12]
   294f0:	lsl	x11, x10, x11
   294f4:	orr	x11, x11, x13
   294f8:	str	x11, [x19, x12]
   294fc:	b	294c8 <rpl_re_set_registers@@Base+0x45b4>
   29500:	add	x9, x9, #0x1
   29504:	cmp	x9, #0x100
   29508:	mov	w0, wzr
   2950c:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29510:	ldrh	w11, [x8, x9, lsl #1]
   29514:	tbz	w11, #0, 29500 <rpl_re_set_registers@@Base+0x45ec>
   29518:	ldrb	w11, [x20, x9]
   2951c:	lsr	x12, x11, #3
   29520:	and	x12, x12, #0x18
   29524:	ldr	x13, [x19, x12]
   29528:	lsl	x11, x10, x11
   2952c:	orr	x11, x11, x13
   29530:	str	x11, [x19, x12]
   29534:	b	29500 <rpl_re_set_registers@@Base+0x45ec>
   29538:	add	x9, x9, #0x1
   2953c:	cmp	x9, #0x100
   29540:	mov	w0, wzr
   29544:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29548:	ldrsh	w11, [x8, x9, lsl #1]
   2954c:	tbz	w11, #31, 29538 <rpl_re_set_registers@@Base+0x4624>
   29550:	ldrb	w11, [x20, x9]
   29554:	lsr	x12, x11, #3
   29558:	and	x12, x12, #0x18
   2955c:	ldr	x13, [x19, x12]
   29560:	lsl	x11, x10, x11
   29564:	orr	x11, x11, x13
   29568:	str	x11, [x19, x12]
   2956c:	b	29538 <rpl_re_set_registers@@Base+0x4624>
   29570:	add	x9, x9, #0x1
   29574:	cmp	x9, #0x100
   29578:	mov	w0, wzr
   2957c:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   29580:	ldrh	w11, [x8, x9, lsl #1]
   29584:	tbz	w11, #2, 29570 <rpl_re_set_registers@@Base+0x465c>
   29588:	ldrb	w11, [x20, x9]
   2958c:	lsr	x12, x11, #3
   29590:	and	x12, x12, #0x18
   29594:	ldr	x13, [x19, x12]
   29598:	lsl	x11, x10, x11
   2959c:	orr	x11, x11, x13
   295a0:	str	x11, [x19, x12]
   295a4:	b	29570 <rpl_re_set_registers@@Base+0x465c>
   295a8:	add	x9, x9, #0x1
   295ac:	cmp	x9, #0x100
   295b0:	mov	w0, wzr
   295b4:	b.eq	29140 <rpl_re_set_registers@@Base+0x422c>  // b.none
   295b8:	ldrh	w11, [x8, x9, lsl #1]
   295bc:	tbz	w11, #12, 295a8 <rpl_re_set_registers@@Base+0x4694>
   295c0:	ldrb	w11, [x20, x9]
   295c4:	lsr	x12, x11, #3
   295c8:	and	x12, x12, #0x18
   295cc:	ldr	x13, [x19, x12]
   295d0:	lsl	x11, x10, x11
   295d4:	orr	x11, x11, x13
   295d8:	str	x11, [x19, x12]
   295dc:	b	295a8 <rpl_re_set_registers@@Base+0x4694>
   295e0:	mov	w0, #0xc                   	// #12
   295e4:	b	29140 <rpl_re_set_registers@@Base+0x422c>
   295e8:	stp	x29, x30, [sp, #-64]!
   295ec:	stp	x22, x21, [sp, #32]
   295f0:	stp	x20, x19, [sp, #48]
   295f4:	ldr	w9, [x1, #48]
   295f8:	ldr	x19, [x1, #56]
   295fc:	str	x23, [sp, #16]
   29600:	mov	x29, sp
   29604:	and	w8, w9, #0xff
   29608:	sub	w10, w8, #0x2
   2960c:	cmp	w10, #0xe
   29610:	mov	x8, x0
   29614:	b.hi	2974c <rpl_re_set_registers@@Base+0x4838>  // b.pmore
   29618:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   2961c:	add	x11, x11, #0x29f
   29620:	adr	x12, 29634 <rpl_re_set_registers@@Base+0x4720>
   29624:	ldrb	w13, [x11, x10]
   29628:	add	x12, x12, x13, lsl #2
   2962c:	mov	w0, wzr
   29630:	br	x12
   29634:	ldr	x9, [x1, #32]
   29638:	ldr	x8, [x8, #40]
   2963c:	mov	w10, #0x18                  	// #24
   29640:	ldr	x20, [x9, #56]
   29644:	madd	x19, x19, x10, x8
   29648:	mov	w8, #0x1                   	// #1
   2964c:	dup	v0.2d, x8
   29650:	mov	w0, #0x8                   	// #8
   29654:	str	q0, [x19]
   29658:	bl	a550 <malloc@plt>
   2965c:	str	x0, [x19, #16]
   29660:	cbz	x0, 2979c <rpl_re_set_registers@@Base+0x4888>
   29664:	mov	x8, x0
   29668:	mov	w0, wzr
   2966c:	str	x20, [x8]
   29670:	b	29788 <rpl_re_set_registers@@Base+0x4874>
   29674:	ldrb	w9, [x8, #176]
   29678:	add	x10, x1, #0x20
   2967c:	orr	w9, w9, #0x1
   29680:	strb	w9, [x8, #176]
   29684:	ldp	x9, x11, [x1, #8]
   29688:	add	x12, x9, #0x18
   2968c:	cmp	x9, #0x0
   29690:	csel	x9, x10, x12, eq  // eq = none
   29694:	ldr	x9, [x9]
   29698:	cmp	x11, #0x0
   2969c:	ldr	x20, [x9, #56]
   296a0:	add	x9, x11, #0x18
   296a4:	csel	x9, x10, x9, eq  // eq = none
   296a8:	tbnz	x20, #63, 297a8 <rpl_re_set_registers@@Base+0x4894>
   296ac:	ldr	x9, [x9]
   296b0:	ldr	x21, [x9, #56]
   296b4:	tbnz	x21, #63, 297c8 <rpl_re_set_registers@@Base+0x48b4>
   296b8:	ldr	x22, [x8, #40]
   296bc:	mov	w8, #0x18                  	// #24
   296c0:	mov	w0, #0x10                  	// #16
   296c4:	madd	x23, x19, x8, x22
   296c8:	mov	w8, #0x2                   	// #2
   296cc:	str	x8, [x23]
   296d0:	bl	a550 <malloc@plt>
   296d4:	str	x0, [x23, #16]
   296d8:	cbz	x0, 297a0 <rpl_re_set_registers@@Base+0x488c>
   296dc:	mov	w9, #0x18                  	// #24
   296e0:	madd	x9, x19, x9, x22
   296e4:	mov	x8, x0
   296e8:	cmp	x20, x21
   296ec:	add	x9, x9, #0x8
   296f0:	b.ne	29768 <rpl_re_set_registers@@Base+0x4854>  // b.any
   296f4:	mov	w10, #0x1                   	// #1
   296f8:	mov	w0, wzr
   296fc:	str	x10, [x9]
   29700:	str	x20, [x8]
   29704:	b	29788 <rpl_re_set_registers@@Base+0x4874>
   29708:	ldr	x9, [x1, #32]
   2970c:	ldr	x20, [x9, #56]
   29710:	ldr	x9, [x8, #24]
   29714:	str	x20, [x9, x19, lsl #3]
   29718:	ldrb	w9, [x1, #48]
   2971c:	cmp	w9, #0x4
   29720:	b.ne	29744 <rpl_re_set_registers@@Base+0x4830>  // b.any
   29724:	ldr	x8, [x8, #40]
   29728:	mov	w9, #0x18                  	// #24
   2972c:	mov	w10, #0x1                   	// #1
   29730:	dup	v0.2d, x10
   29734:	madd	x19, x19, x9, x8
   29738:	b	29650 <rpl_re_set_registers@@Base+0x473c>
   2973c:	ldr	x8, [x1, #32]
   29740:	cbnz	x8, 297e8 <rpl_re_set_registers@@Base+0x48d4>
   29744:	mov	w0, wzr
   29748:	b	29788 <rpl_re_set_registers@@Base+0x4874>
   2974c:	tbnz	w9, #3, 29808 <rpl_re_set_registers@@Base+0x48f4>
   29750:	ldr	x9, [x1, #32]
   29754:	ldr	x8, [x8, #24]
   29758:	mov	w0, wzr
   2975c:	ldr	x9, [x9, #56]
   29760:	str	x9, [x8, x19, lsl #3]
   29764:	b	29788 <rpl_re_set_registers@@Base+0x4874>
   29768:	mov	w10, #0x2                   	// #2
   2976c:	cmp	x20, x21
   29770:	mov	w0, wzr
   29774:	str	x10, [x9]
   29778:	b.ge	29784 <rpl_re_set_registers@@Base+0x4870>  // b.tcont
   2977c:	stp	x20, x21, [x8]
   29780:	b	29788 <rpl_re_set_registers@@Base+0x4874>
   29784:	stp	x21, x20, [x8]
   29788:	ldp	x20, x19, [sp, #48]
   2978c:	ldp	x22, x21, [sp, #32]
   29790:	ldr	x23, [sp, #16]
   29794:	ldp	x29, x30, [sp], #64
   29798:	ret
   2979c:	stp	xzr, xzr, [x19]
   297a0:	mov	w0, #0xc                   	// #12
   297a4:	b	29788 <rpl_re_set_registers@@Base+0x4874>
   297a8:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   297ac:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   297b0:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   297b4:	add	x0, x0, #0x5f3
   297b8:	add	x1, x1, #0x504
   297bc:	add	x3, x3, #0x5c0
   297c0:	mov	w2, #0x5af                 	// #1455
   297c4:	bl	ad80 <__assert_fail@plt>
   297c8:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   297cc:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   297d0:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   297d4:	add	x0, x0, #0x5fd
   297d8:	add	x1, x1, #0x504
   297dc:	add	x3, x3, #0x5c0
   297e0:	mov	w2, #0x5b0                 	// #1456
   297e4:	bl	ad80 <__assert_fail@plt>
   297e8:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   297ec:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   297f0:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   297f4:	add	x0, x0, #0x5ad
   297f8:	add	x1, x1, #0x504
   297fc:	add	x3, x3, #0x5c0
   29800:	mov	w2, #0x59f                 	// #1439
   29804:	bl	ad80 <__assert_fail@plt>
   29808:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   2980c:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   29810:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   29814:	add	x0, x0, #0x608
   29818:	add	x1, x1, #0x504
   2981c:	add	x3, x3, #0x5c0
   29820:	mov	w2, #0x5c2                 	// #1474
   29824:	bl	ad80 <__assert_fail@plt>
   29828:	stp	x29, x30, [sp, #-80]!
   2982c:	stp	x24, x23, [sp, #32]
   29830:	stp	x22, x21, [sp, #48]
   29834:	stp	x20, x19, [sp, #64]
   29838:	ldr	x22, [x3, #8]
   2983c:	mov	x19, x3
   29840:	mov	x21, x1
   29844:	mov	x20, x0
   29848:	str	x25, [sp, #16]
   2984c:	mov	x29, sp
   29850:	tbz	w2, #4, 29870 <rpl_re_set_registers@@Base+0x495c>
   29854:	cbz	x22, 29870 <rpl_re_set_registers@@Base+0x495c>
   29858:	ldr	x8, [x19, #40]
   2985c:	cmp	x8, #0x3f
   29860:	b.gt	299d0 <rpl_re_set_registers@@Base+0x4abc>
   29864:	ldr	x9, [x21, #160]
   29868:	lsr	x8, x9, x8
   2986c:	tbz	w8, #0, 299d0 <rpl_re_set_registers@@Base+0x4abc>
   29870:	ldr	w8, [x21, #128]
   29874:	cmp	w8, #0xf
   29878:	b.eq	299ec <rpl_re_set_registers@@Base+0x4ad8>  // b.none
   2987c:	ldr	x0, [x21, #112]
   29880:	add	w9, w8, #0x1
   29884:	sxtw	x8, w8
   29888:	add	x23, x0, x8, lsl #6
   2988c:	mov	w10, #0x8                   	// #8
   29890:	mov	x11, #0xffffffffffffffff    	// #-1
   29894:	str	w9, [x21, #128]
   29898:	str	xzr, [x23, #8]!
   2989c:	stp	xzr, xzr, [x23, #16]
   298a0:	str	xzr, [x23, #8]
   298a4:	str	w10, [x23, #48]
   298a8:	str	xzr, [x23, #32]
   298ac:	str	x11, [x23, #56]
   298b0:	ldr	w8, [x21, #128]
   298b4:	cmp	w8, #0xf
   298b8:	b.eq	29a38 <rpl_re_set_registers@@Base+0x4b24>  // b.none
   298bc:	ldr	x0, [x21, #112]
   298c0:	add	w9, w8, #0x1
   298c4:	sxtw	x8, w8
   298c8:	add	x24, x0, x8, lsl #6
   298cc:	mov	w10, #0x9                   	// #9
   298d0:	mov	x11, #0xffffffffffffffff    	// #-1
   298d4:	str	w9, [x21, #128]
   298d8:	str	xzr, [x24, #8]!
   298dc:	stp	xzr, xzr, [x24, #16]
   298e0:	str	xzr, [x24, #8]
   298e4:	str	w10, [x24, #48]
   298e8:	str	xzr, [x24, #32]
   298ec:	str	x11, [x24, #56]
   298f0:	mov	x25, x24
   298f4:	cbz	x22, 29940 <rpl_re_set_registers@@Base+0x4a2c>
   298f8:	ldr	w8, [x21, #128]
   298fc:	cmp	w8, #0xf
   29900:	b.eq	29a10 <rpl_re_set_registers@@Base+0x4afc>  // b.none
   29904:	ldr	x0, [x21, #112]
   29908:	add	w9, w8, #0x1
   2990c:	sxtw	x8, w8
   29910:	add	x25, x0, x8, lsl #6
   29914:	mov	w10, #0x10                  	// #16
   29918:	mov	x11, #0xffffffffffffffff    	// #-1
   2991c:	str	w9, [x21, #128]
   29920:	str	xzr, [x25, #8]!
   29924:	stp	x22, x24, [x25, #8]
   29928:	str	w10, [x25, #48]
   2992c:	stp	xzr, xzr, [x25, #24]
   29930:	str	x11, [x25, #56]
   29934:	str	x25, [x22]
   29938:	cbz	x24, 29940 <rpl_re_set_registers@@Base+0x4a2c>
   2993c:	str	x25, [x24]
   29940:	ldr	w8, [x21, #128]
   29944:	cmp	w8, #0xf
   29948:	b.eq	29a70 <rpl_re_set_registers@@Base+0x4b5c>  // b.none
   2994c:	ldr	x0, [x21, #112]
   29950:	add	w9, w8, #0x1
   29954:	sxtw	x8, w8
   29958:	add	x22, x0, x8, lsl #6
   2995c:	mov	w10, #0x10                  	// #16
   29960:	mov	x11, #0xffffffffffffffff    	// #-1
   29964:	str	w9, [x21, #128]
   29968:	str	xzr, [x22, #8]!
   2996c:	stp	x23, x25, [x22, #8]
   29970:	str	w10, [x22, #48]
   29974:	stp	xzr, xzr, [x22, #24]
   29978:	str	x11, [x22, #56]
   2997c:	cbz	x23, 29984 <rpl_re_set_registers@@Base+0x4a70>
   29980:	str	x22, [x23]
   29984:	cbz	x25, 2998c <rpl_re_set_registers@@Base+0x4a78>
   29988:	str	x22, [x25]
   2998c:	cbz	x24, 29a9c <rpl_re_set_registers@@Base+0x4b88>
   29990:	cbz	x23, 29a9c <rpl_re_set_registers@@Base+0x4b88>
   29994:	cbz	x25, 29a9c <rpl_re_set_registers@@Base+0x4b88>
   29998:	cbz	x22, 29a9c <rpl_re_set_registers@@Base+0x4b88>
   2999c:	ldr	x8, [x19, #40]
   299a0:	str	x8, [x24, #40]
   299a4:	str	x8, [x23, #40]
   299a8:	ldr	w8, [x19, #48]
   299ac:	ldr	w9, [x24, #48]
   299b0:	and	w8, w8, #0x80000
   299b4:	and	w9, w9, #0xfff7ffff
   299b8:	orr	w9, w9, w8
   299bc:	str	w9, [x24, #48]
   299c0:	ldr	w9, [x23, #48]
   299c4:	and	w9, w9, #0xfff7ffff
   299c8:	orr	w8, w9, w8
   299cc:	str	w8, [x23, #48]
   299d0:	mov	x0, x22
   299d4:	ldp	x20, x19, [sp, #64]
   299d8:	ldp	x22, x21, [sp, #48]
   299dc:	ldp	x24, x23, [sp, #32]
   299e0:	ldr	x25, [sp, #16]
   299e4:	ldp	x29, x30, [sp], #80
   299e8:	ret
   299ec:	mov	w0, #0x3c8                 	// #968
   299f0:	bl	a550 <malloc@plt>
   299f4:	cbz	x0, 29a34 <rpl_re_set_registers@@Base+0x4b20>
   299f8:	ldr	x9, [x21, #112]
   299fc:	mov	w8, wzr
   29a00:	str	x9, [x0]
   29a04:	str	x0, [x21, #112]
   29a08:	str	wzr, [x21, #128]
   29a0c:	b	29880 <rpl_re_set_registers@@Base+0x496c>
   29a10:	mov	w0, #0x3c8                 	// #968
   29a14:	bl	a550 <malloc@plt>
   29a18:	cbz	x0, 29a6c <rpl_re_set_registers@@Base+0x4b58>
   29a1c:	ldr	x9, [x21, #112]
   29a20:	mov	w8, wzr
   29a24:	str	x9, [x0]
   29a28:	str	x0, [x21, #112]
   29a2c:	str	wzr, [x21, #128]
   29a30:	b	29908 <rpl_re_set_registers@@Base+0x49f4>
   29a34:	mov	x23, xzr
   29a38:	mov	w0, #0x3c8                 	// #968
   29a3c:	bl	a550 <malloc@plt>
   29a40:	cbz	x0, 29a5c <rpl_re_set_registers@@Base+0x4b48>
   29a44:	ldr	x9, [x21, #112]
   29a48:	mov	w8, wzr
   29a4c:	str	x9, [x0]
   29a50:	str	x0, [x21, #112]
   29a54:	str	wzr, [x21, #128]
   29a58:	b	298c0 <rpl_re_set_registers@@Base+0x49ac>
   29a5c:	mov	x24, xzr
   29a60:	mov	x25, x24
   29a64:	cbnz	x22, 298f8 <rpl_re_set_registers@@Base+0x49e4>
   29a68:	b	29940 <rpl_re_set_registers@@Base+0x4a2c>
   29a6c:	mov	x25, xzr
   29a70:	mov	w0, #0x3c8                 	// #968
   29a74:	bl	a550 <malloc@plt>
   29a78:	cbz	x0, 29a94 <rpl_re_set_registers@@Base+0x4b80>
   29a7c:	ldr	x9, [x21, #112]
   29a80:	mov	w8, wzr
   29a84:	str	x9, [x0]
   29a88:	str	x0, [x21, #112]
   29a8c:	str	wzr, [x21, #128]
   29a90:	b	29950 <rpl_re_set_registers@@Base+0x4a3c>
   29a94:	mov	x22, xzr
   29a98:	cbnz	x24, 29990 <rpl_re_set_registers@@Base+0x4a7c>
   29a9c:	mov	w8, #0xc                   	// #12
   29aa0:	mov	x22, xzr
   29aa4:	str	w8, [x20]
   29aa8:	b	299d0 <rpl_re_set_registers@@Base+0x4abc>
   29aac:	stp	x29, x30, [sp, #-80]!
   29ab0:	stp	x26, x25, [sp, #16]
   29ab4:	stp	x24, x23, [sp, #32]
   29ab8:	stp	x22, x21, [sp, #48]
   29abc:	stp	x20, x19, [sp, #64]
   29ac0:	ldp	x24, x8, [x0, #8]
   29ac4:	mov	x20, x2
   29ac8:	mov	x19, x0
   29acc:	mov	x21, x1
   29ad0:	cmp	x8, x24
   29ad4:	mov	x29, sp
   29ad8:	b.cs	29ba4 <rpl_re_set_registers@@Base+0x4c90>  // b.hs, b.nlast
   29adc:	ldr	x9, [x19]
   29ae0:	add	x8, x9, x8, lsl #4
   29ae4:	stp	x21, x20, [x8]
   29ae8:	ldr	x8, [x19]
   29aec:	ldr	x9, [x19, #16]
   29af0:	add	x9, x8, x9, lsl #4
   29af4:	ldr	w10, [x9, #8]
   29af8:	and	w8, w20, #0xff
   29afc:	cmp	w8, #0x5
   29b00:	and	w10, w10, #0xfffc00ff
   29b04:	str	w10, [x9, #8]
   29b08:	b.ne	29b20 <rpl_re_set_registers@@Base+0x4c0c>  // b.any
   29b0c:	ldr	w9, [x19, #180]
   29b10:	cmp	w9, #0x1
   29b14:	b.le	29b20 <rpl_re_set_registers@@Base+0x4c0c>
   29b18:	mov	w8, #0x100000              	// #1048576
   29b1c:	b	29b2c <rpl_re_set_registers@@Base+0x4c18>
   29b20:	cmp	w8, #0x6
   29b24:	cset	w8, eq  // eq = none
   29b28:	lsl	w8, w8, #20
   29b2c:	ldr	x9, [x19]
   29b30:	ldr	x10, [x19, #16]
   29b34:	add	x9, x9, x10, lsl #4
   29b38:	ldr	w10, [x9, #8]
   29b3c:	and	w10, w10, #0xffefffff
   29b40:	orr	w8, w10, w8
   29b44:	str	w8, [x9, #8]
   29b48:	ldp	x9, x8, [x19, #16]
   29b4c:	mov	x10, #0xffffffffffffffff    	// #-1
   29b50:	str	x10, [x8, x9, lsl #3]
   29b54:	ldr	x8, [x19, #40]
   29b58:	ldr	x9, [x19, #16]
   29b5c:	mov	w10, #0x18                  	// #24
   29b60:	madd	x8, x9, x10, x8
   29b64:	stp	xzr, xzr, [x8]
   29b68:	str	xzr, [x8, #16]
   29b6c:	ldr	x8, [x19, #48]
   29b70:	ldr	x9, [x19, #16]
   29b74:	madd	x8, x9, x10, x8
   29b78:	stp	xzr, xzr, [x8]
   29b7c:	str	xzr, [x8, #16]
   29b80:	ldr	x0, [x19, #16]
   29b84:	add	x8, x0, #0x1
   29b88:	str	x8, [x19, #16]
   29b8c:	ldp	x20, x19, [sp, #64]
   29b90:	ldp	x22, x21, [sp, #48]
   29b94:	ldp	x24, x23, [sp, #32]
   29b98:	ldp	x26, x25, [sp, #16]
   29b9c:	ldp	x29, x30, [sp], #80
   29ba0:	ret
   29ba4:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
   29ba8:	lsl	x26, x24, #1
   29bac:	movk	x8, #0xaaa, lsl #48
   29bb0:	cmp	x26, x8
   29bb4:	b.hi	29c44 <rpl_re_set_registers@@Base+0x4d30>  // b.pmore
   29bb8:	ldr	x0, [x19]
   29bbc:	lsl	x1, x24, #5
   29bc0:	bl	a730 <realloc@plt>
   29bc4:	cbz	x0, 29c44 <rpl_re_set_registers@@Base+0x4d30>
   29bc8:	ldr	x8, [x19, #24]
   29bcc:	lsl	x23, x24, #4
   29bd0:	str	x0, [x19]
   29bd4:	mov	x1, x23
   29bd8:	mov	x0, x8
   29bdc:	bl	a730 <realloc@plt>
   29be0:	ldr	x8, [x19, #32]
   29be4:	mov	x22, x0
   29be8:	mov	x1, x23
   29bec:	mov	x0, x8
   29bf0:	bl	a730 <realloc@plt>
   29bf4:	mov	x23, x0
   29bf8:	ldr	x0, [x19, #40]
   29bfc:	add	x8, x24, x24, lsl #1
   29c00:	lsl	x25, x8, #4
   29c04:	mov	x1, x25
   29c08:	bl	a730 <realloc@plt>
   29c0c:	ldr	x8, [x19, #48]
   29c10:	mov	x24, x0
   29c14:	mov	x1, x25
   29c18:	mov	x0, x8
   29c1c:	bl	a730 <realloc@plt>
   29c20:	cbz	x22, 29c4c <rpl_re_set_registers@@Base+0x4d38>
   29c24:	cbz	x23, 29c4c <rpl_re_set_registers@@Base+0x4d38>
   29c28:	cbz	x24, 29c4c <rpl_re_set_registers@@Base+0x4d38>
   29c2c:	cbz	x0, 29c4c <rpl_re_set_registers@@Base+0x4d38>
   29c30:	ldr	x8, [x19, #16]
   29c34:	stp	x22, x23, [x19, #24]
   29c38:	stp	x24, x0, [x19, #40]
   29c3c:	str	x26, [x19, #8]
   29c40:	b	29adc <rpl_re_set_registers@@Base+0x4bc8>
   29c44:	mov	x0, #0xffffffffffffffff    	// #-1
   29c48:	b	29b8c <rpl_re_set_registers@@Base+0x4c78>
   29c4c:	mov	x19, x0
   29c50:	mov	x0, x22
   29c54:	bl	a970 <free@plt>
   29c58:	mov	x0, x23
   29c5c:	bl	a970 <free@plt>
   29c60:	mov	x0, x24
   29c64:	bl	a970 <free@plt>
   29c68:	mov	x0, x19
   29c6c:	bl	a970 <free@plt>
   29c70:	mov	x0, #0xffffffffffffffff    	// #-1
   29c74:	b	29b8c <rpl_re_set_registers@@Base+0x4c78>
   29c78:	sub	sp, sp, #0x90
   29c7c:	stp	x29, x30, [sp, #64]
   29c80:	stp	x26, x25, [sp, #80]
   29c84:	stp	x24, x23, [sp, #96]
   29c88:	stp	x22, x21, [sp, #112]
   29c8c:	stp	x20, x19, [sp, #128]
   29c90:	ldr	x23, [x1, #40]
   29c94:	mov	w8, #0x18                  	// #24
   29c98:	mov	x19, x0
   29c9c:	add	x29, sp, #0x40
   29ca0:	madd	x25, x2, x8, x23
   29ca4:	ldr	x8, [x25, #8]!
   29ca8:	mov	w21, w3
   29cac:	mov	x20, x2
   29cb0:	mov	x22, x1
   29cb4:	add	x24, x8, #0x1
   29cb8:	lsl	x0, x24, #3
   29cbc:	stp	x24, xzr, [sp, #32]
   29cc0:	bl	a550 <malloc@plt>
   29cc4:	str	x0, [sp, #48]
   29cc8:	cbz	x0, 29eec <rpl_re_set_registers@@Base+0x4fd8>
   29ccc:	ldr	x8, [x22, #48]
   29cd0:	mov	w9, #0x18                  	// #24
   29cd4:	madd	x8, x20, x9, x8
   29cd8:	mov	x9, #0xffffffffffffffff    	// #-1
   29cdc:	str	x9, [x8, #8]
   29ce0:	ldr	x9, [x22]
   29ce4:	add	x8, x9, x20, lsl #4
   29ce8:	ldr	w8, [x8, #8]
   29cec:	ubfx	w4, w8, #8, #10
   29cf0:	cbz	w4, 29d3c <rpl_re_set_registers@@Base+0x4e28>
   29cf4:	ldr	x10, [x25]
   29cf8:	cbz	x10, 29d3c <rpl_re_set_registers@@Base+0x4e28>
   29cfc:	mov	w10, #0x18                  	// #24
   29d00:	madd	x10, x20, x10, x23
   29d04:	ldr	x10, [x10, #16]
   29d08:	ldr	x10, [x10]
   29d0c:	add	x9, x9, x10, lsl #4
   29d10:	ldrb	w9, [x9, #10]
   29d14:	tbnz	w9, #2, 29d3c <rpl_re_set_registers@@Base+0x4e28>
   29d18:	mov	x0, x22
   29d1c:	mov	x1, x20
   29d20:	mov	x2, x20
   29d24:	mov	x3, x20
   29d28:	bl	29f88 <rpl_re_set_registers@@Base+0x5074>
   29d2c:	cbnz	w0, 29ea8 <rpl_re_set_registers@@Base+0x4f94>
   29d30:	ldr	x8, [x22]
   29d34:	add	x8, x8, x20, lsl #4
   29d38:	ldr	w8, [x8, #8]
   29d3c:	tbz	w8, #3, 29e04 <rpl_re_set_registers@@Base+0x4ef0>
   29d40:	ldr	x8, [x22, #40]
   29d44:	mov	w9, #0x18                  	// #24
   29d48:	madd	x9, x20, x9, x8
   29d4c:	ldr	x9, [x9, #8]
   29d50:	cmp	x9, #0x1
   29d54:	b.lt	29e04 <rpl_re_set_registers@@Base+0x4ef0>  // b.tstop
   29d58:	mov	w25, wzr
   29d5c:	mov	x24, xzr
   29d60:	mov	w26, #0x18                  	// #24
   29d64:	b	29d84 <rpl_re_set_registers@@Base+0x4e70>
   29d68:	mov	w25, #0x1                   	// #1
   29d6c:	ldr	x8, [x22, #40]
   29d70:	add	x24, x24, #0x1
   29d74:	madd	x9, x20, x26, x8
   29d78:	ldr	x9, [x9, #8]
   29d7c:	cmp	x24, x9
   29d80:	b.ge	29e4c <rpl_re_set_registers@@Base+0x4f38>  // b.tcont
   29d84:	madd	x8, x20, x26, x8
   29d88:	ldr	x8, [x8, #16]
   29d8c:	ldr	x23, [x8, x24, lsl #3]
   29d90:	ldr	x8, [x22, #48]
   29d94:	madd	x9, x23, x26, x8
   29d98:	ldr	x9, [x9, #8]
   29d9c:	cmn	x9, #0x1
   29da0:	b.eq	29d68 <rpl_re_set_registers@@Base+0x4e54>  // b.none
   29da4:	cbnz	x9, 29dc4 <rpl_re_set_registers@@Base+0x4eb0>
   29da8:	mov	x0, sp
   29dac:	mov	x1, x22
   29db0:	mov	x2, x23
   29db4:	mov	w3, wzr
   29db8:	bl	29c78 <rpl_re_set_registers@@Base+0x4d64>
   29dbc:	cbz	w0, 29dd8 <rpl_re_set_registers@@Base+0x4ec4>
   29dc0:	b	29ea8 <rpl_re_set_registers@@Base+0x4f94>
   29dc4:	madd	x8, x23, x26, x8
   29dc8:	ldr	x9, [x8, #16]
   29dcc:	ldr	q0, [x8]
   29dd0:	str	x9, [sp, #16]
   29dd4:	str	q0, [sp]
   29dd8:	add	x0, sp, #0x20
   29ddc:	mov	x1, sp
   29de0:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   29de4:	cbnz	w0, 29ea8 <rpl_re_set_registers@@Base+0x4f94>
   29de8:	ldr	x8, [x22, #48]
   29dec:	madd	x8, x23, x26, x8
   29df0:	ldr	x8, [x8, #8]
   29df4:	cbnz	x8, 29d6c <rpl_re_set_registers@@Base+0x4e58>
   29df8:	ldr	x0, [sp, #16]
   29dfc:	bl	a970 <free@plt>
   29e00:	b	29d68 <rpl_re_set_registers@@Base+0x4e54>
   29e04:	mov	w23, #0x1                   	// #1
   29e08:	cbz	x24, 29e5c <rpl_re_set_registers@@Base+0x4f48>
   29e0c:	ldr	x25, [sp, #40]
   29e10:	cbnz	x25, 29ec4 <rpl_re_set_registers@@Base+0x4fb0>
   29e14:	ldr	x8, [sp, #48]
   29e18:	mov	w9, #0x1                   	// #1
   29e1c:	str	x20, [x8]
   29e20:	str	x9, [sp, #40]
   29e24:	ldr	x8, [x22, #48]
   29e28:	orr	w9, w23, w21
   29e2c:	tbz	w9, #0, 29e88 <rpl_re_set_registers@@Base+0x4f74>
   29e30:	ldr	x9, [sp, #48]
   29e34:	ldr	q0, [sp, #32]
   29e38:	mov	w10, #0x18                  	// #24
   29e3c:	madd	x8, x20, x10, x8
   29e40:	str	x9, [x8, #16]
   29e44:	str	q0, [x8]
   29e48:	b	29e94 <rpl_re_set_registers@@Base+0x4f80>
   29e4c:	ldr	x24, [sp, #32]
   29e50:	tst	w25, #0x1
   29e54:	cset	w23, eq  // eq = none
   29e58:	cbnz	x24, 29e0c <rpl_re_set_registers@@Base+0x4ef8>
   29e5c:	mov	w8, #0x1                   	// #1
   29e60:	dup	v0.2d, x8
   29e64:	mov	w0, #0x8                   	// #8
   29e68:	str	q0, [sp, #32]
   29e6c:	bl	a550 <malloc@plt>
   29e70:	str	x0, [sp, #48]
   29e74:	cbz	x0, 29ef4 <rpl_re_set_registers@@Base+0x4fe0>
   29e78:	str	x20, [x0]
   29e7c:	ldr	x8, [x22, #48]
   29e80:	orr	w9, w23, w21
   29e84:	tbnz	w9, #0, 29e30 <rpl_re_set_registers@@Base+0x4f1c>
   29e88:	mov	w9, #0x18                  	// #24
   29e8c:	madd	x8, x20, x9, x8
   29e90:	str	xzr, [x8, #8]
   29e94:	ldr	x8, [sp, #48]
   29e98:	ldr	q0, [sp, #32]
   29e9c:	mov	w0, wzr
   29ea0:	str	x8, [x19, #16]
   29ea4:	str	q0, [x19]
   29ea8:	ldp	x20, x19, [sp, #128]
   29eac:	ldp	x22, x21, [sp, #112]
   29eb0:	ldp	x24, x23, [sp, #96]
   29eb4:	ldp	x26, x25, [sp, #80]
   29eb8:	ldp	x29, x30, [sp, #64]
   29ebc:	add	sp, sp, #0x90
   29ec0:	ret
   29ec4:	cmp	x24, x25
   29ec8:	b.ne	29f00 <rpl_re_set_registers@@Base+0x4fec>  // b.any
   29ecc:	ldr	x0, [sp, #48]
   29ed0:	lsl	x8, x24, #1
   29ed4:	lsl	x1, x24, #4
   29ed8:	str	x8, [sp, #32]
   29edc:	bl	a730 <realloc@plt>
   29ee0:	cbz	x0, 29eec <rpl_re_set_registers@@Base+0x4fd8>
   29ee4:	str	x0, [sp, #48]
   29ee8:	b	29f04 <rpl_re_set_registers@@Base+0x4ff0>
   29eec:	mov	w0, #0xc                   	// #12
   29ef0:	b	29ea8 <rpl_re_set_registers@@Base+0x4f94>
   29ef4:	stp	xzr, xzr, [sp, #32]
   29ef8:	mov	w0, #0xc                   	// #12
   29efc:	b	29ea8 <rpl_re_set_registers@@Base+0x4f94>
   29f00:	ldr	x0, [sp, #48]
   29f04:	ldr	x8, [x0]
   29f08:	cmp	x8, x20
   29f0c:	b.le	29f38 <rpl_re_set_registers@@Base+0x5024>
   29f10:	cmp	x25, #0x1
   29f14:	b.lt	29f68 <rpl_re_set_registers@@Base+0x5054>  // b.tstop
   29f18:	mov	x9, x25
   29f1c:	add	x10, x0, x9, lsl #3
   29f20:	ldur	x11, [x10, #-8]
   29f24:	subs	x8, x9, #0x1
   29f28:	mov	x9, x8
   29f2c:	str	x11, [x10]
   29f30:	b.gt	29f1c <rpl_re_set_registers@@Base+0x5008>
   29f34:	b	29f6c <rpl_re_set_registers@@Base+0x5058>
   29f38:	add	x8, x0, x25, lsl #3
   29f3c:	ldur	x9, [x8, #-8]
   29f40:	mov	x8, x25
   29f44:	cmp	x9, x20
   29f48:	b.le	29f6c <rpl_re_set_registers@@Base+0x5058>
   29f4c:	add	x10, x0, x8, lsl #3
   29f50:	str	x9, [x10]
   29f54:	ldur	x9, [x10, #-16]
   29f58:	sub	x8, x8, #0x1
   29f5c:	cmp	x9, x20
   29f60:	b.gt	29f4c <rpl_re_set_registers@@Base+0x5038>
   29f64:	b	29f6c <rpl_re_set_registers@@Base+0x5058>
   29f68:	mov	x8, x25
   29f6c:	str	x20, [x0, x8, lsl #3]
   29f70:	add	x8, x25, #0x1
   29f74:	str	x8, [sp, #40]
   29f78:	ldr	x8, [x22, #48]
   29f7c:	orr	w9, w23, w21
   29f80:	tbnz	w9, #0, 29e30 <rpl_re_set_registers@@Base+0x4f1c>
   29f84:	b	29e88 <rpl_re_set_registers@@Base+0x4f74>
   29f88:	stp	x29, x30, [sp, #-96]!
   29f8c:	stp	x26, x25, [sp, #32]
   29f90:	stp	x24, x23, [sp, #48]
   29f94:	stp	x22, x21, [sp, #64]
   29f98:	stp	x20, x19, [sp, #80]
   29f9c:	mov	w19, w4
   29fa0:	mov	x20, x3
   29fa4:	mov	x22, x2
   29fa8:	mov	x23, x1
   29fac:	mov	x21, x0
   29fb0:	mov	w25, #0x18                  	// #24
   29fb4:	str	x27, [sp, #16]
   29fb8:	mov	x29, sp
   29fbc:	ubfiz	w26, w19, #8, #10
   29fc0:	mov	x27, x23
   29fc4:	b	2a078 <rpl_re_set_registers@@Base+0x5164>
   29fc8:	ldr	x9, [x21, #24]
   29fcc:	ldr	x10, [x21, #40]
   29fd0:	mov	x0, x21
   29fd4:	ldr	x24, [x9, x27, lsl #3]
   29fd8:	madd	x9, x22, x25, x10
   29fdc:	str	xzr, [x9, #8]
   29fe0:	add	x8, x8, x24, lsl #4
   29fe4:	ldp	x1, x2, [x8]
   29fe8:	bl	29aac <rpl_re_set_registers@@Base+0x4b98>
   29fec:	cmn	x0, #0x1
   29ff0:	b.eq	2a354 <rpl_re_set_registers@@Base+0x5440>  // b.none
   29ff4:	ldr	x8, [x21]
   29ff8:	lsl	x9, x0, #4
   29ffc:	mov	x23, x0
   2a000:	mov	x1, x23
   2a004:	add	x8, x8, x9
   2a008:	ldr	w10, [x8, #8]
   2a00c:	and	w10, w10, #0xfffc00ff
   2a010:	orr	w10, w10, w26
   2a014:	str	w10, [x8, #8]
   2a018:	ldr	x8, [x21]
   2a01c:	add	x10, x8, x24, lsl #4
   2a020:	ldr	w10, [x10, #8]
   2a024:	add	x8, x8, x9
   2a028:	ldr	w11, [x8, #8]
   2a02c:	and	w10, w10, #0x3ff00
   2a030:	orr	w10, w10, w11
   2a034:	str	w10, [x8, #8]
   2a038:	ldr	x8, [x21]
   2a03c:	add	x8, x8, x9
   2a040:	ldr	w9, [x8, #8]
   2a044:	orr	w9, w9, #0x40000
   2a048:	str	w9, [x8, #8]
   2a04c:	ldr	x8, [x21, #32]
   2a050:	str	x24, [x8, x0, lsl #3]
   2a054:	ldr	x8, [x21, #24]
   2a058:	ldr	x9, [x8, x27, lsl #3]
   2a05c:	str	x9, [x8, x22, lsl #3]
   2a060:	ldr	x8, [x21, #40]
   2a064:	madd	x0, x22, x25, x8
   2a068:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2a06c:	mov	x27, x24
   2a070:	mov	x22, x23
   2a074:	tbz	w0, #0, 2a354 <rpl_re_set_registers@@Base+0x5440>
   2a078:	ldr	x8, [x21]
   2a07c:	add	x10, x8, x27, lsl #4
   2a080:	ldrb	w9, [x10, #8]!
   2a084:	cmp	w9, #0x4
   2a088:	b.eq	29fc8 <rpl_re_set_registers@@Base+0x50b4>  // b.none
   2a08c:	ldr	x9, [x21, #40]
   2a090:	madd	x11, x27, x25, x9
   2a094:	ldr	x11, [x11, #8]
   2a098:	cbz	x11, 2a30c <rpl_re_set_registers@@Base+0x53f8>
   2a09c:	madd	x12, x27, x25, x9
   2a0a0:	ldr	x12, [x12, #16]
   2a0a4:	cmp	x11, #0x1
   2a0a8:	ldr	x23, [x12]
   2a0ac:	madd	x12, x22, x25, x9
   2a0b0:	str	xzr, [x12, #8]
   2a0b4:	b.eq	2a264 <rpl_re_set_registers@@Base+0x5350>  // b.none
   2a0b8:	ldr	x12, [x21, #16]
   2a0bc:	sub	x1, x12, #0x1
   2a0c0:	cmp	x1, #0x1
   2a0c4:	b.lt	2a10c <rpl_re_set_registers@@Base+0x51f8>  // b.tstop
   2a0c8:	add	x10, x8, x1, lsl #4
   2a0cc:	ldr	w11, [x10, #8]
   2a0d0:	tbz	w11, #18, 2a10c <rpl_re_set_registers@@Base+0x51f8>
   2a0d4:	ldr	x10, [x21, #32]
   2a0d8:	add	x12, x8, x12, lsl #4
   2a0dc:	sub	x12, x12, #0x18
   2a0e0:	ldr	x13, [x10, x1, lsl #3]
   2a0e4:	cmp	x13, x23
   2a0e8:	b.ne	2a0f8 <rpl_re_set_registers@@Base+0x51e4>  // b.any
   2a0ec:	ubfx	w11, w11, #8, #10
   2a0f0:	cmp	w11, w19
   2a0f4:	b.eq	2a254 <rpl_re_set_registers@@Base+0x5340>  // b.none
   2a0f8:	ldr	w11, [x12], #-16
   2a0fc:	sub	x1, x1, #0x1
   2a100:	cmp	x1, #0x1
   2a104:	b.lt	2a10c <rpl_re_set_registers@@Base+0x51f8>  // b.tstop
   2a108:	tbnz	w11, #18, 2a0e0 <rpl_re_set_registers@@Base+0x51cc>
   2a10c:	add	x8, x8, x23, lsl #4
   2a110:	ldp	x1, x2, [x8]
   2a114:	mov	x0, x21
   2a118:	bl	29aac <rpl_re_set_registers@@Base+0x4b98>
   2a11c:	cmn	x0, #0x1
   2a120:	b.eq	2a354 <rpl_re_set_registers@@Base+0x5440>  // b.none
   2a124:	ldr	x8, [x21]
   2a128:	lsl	x9, x0, #4
   2a12c:	mov	x24, x0
   2a130:	mov	x1, x24
   2a134:	add	x8, x8, x9
   2a138:	ldr	w10, [x8, #8]
   2a13c:	and	w10, w10, #0xfffc00ff
   2a140:	orr	w10, w10, w26
   2a144:	str	w10, [x8, #8]
   2a148:	ldr	x8, [x21]
   2a14c:	add	x10, x8, x23, lsl #4
   2a150:	ldr	w10, [x10, #8]
   2a154:	add	x8, x8, x9
   2a158:	ldr	w11, [x8, #8]
   2a15c:	and	w10, w10, #0x3ff00
   2a160:	orr	w10, w10, w11
   2a164:	str	w10, [x8, #8]
   2a168:	ldr	x8, [x21]
   2a16c:	add	x8, x8, x9
   2a170:	ldr	w9, [x8, #8]
   2a174:	orr	w9, w9, #0x40000
   2a178:	str	w9, [x8, #8]
   2a17c:	ldr	x8, [x21, #32]
   2a180:	str	x23, [x8, x0, lsl #3]
   2a184:	ldr	x8, [x21, #40]
   2a188:	madd	x0, x22, x25, x8
   2a18c:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2a190:	tbz	w0, #0, 2a354 <rpl_re_set_registers@@Base+0x5440>
   2a194:	mov	x0, x21
   2a198:	mov	x1, x23
   2a19c:	mov	x2, x24
   2a1a0:	mov	x3, x20
   2a1a4:	mov	w4, w19
   2a1a8:	bl	29f88 <rpl_re_set_registers@@Base+0x5074>
   2a1ac:	cbnz	w0, 2a31c <rpl_re_set_registers@@Base+0x5408>
   2a1b0:	ldr	x8, [x21, #40]
   2a1b4:	ldr	x9, [x21]
   2a1b8:	mov	x0, x21
   2a1bc:	madd	x8, x27, x25, x8
   2a1c0:	ldr	x8, [x8, #16]
   2a1c4:	ldr	x27, [x8, #8]
   2a1c8:	add	x8, x9, x27, lsl #4
   2a1cc:	ldp	x1, x2, [x8]
   2a1d0:	bl	29aac <rpl_re_set_registers@@Base+0x4b98>
   2a1d4:	cmn	x0, #0x1
   2a1d8:	b.eq	2a354 <rpl_re_set_registers@@Base+0x5440>  // b.none
   2a1dc:	ldr	x8, [x21]
   2a1e0:	lsl	x9, x0, #4
   2a1e4:	mov	x23, x0
   2a1e8:	mov	x1, x23
   2a1ec:	add	x8, x8, x9
   2a1f0:	ldr	w10, [x8, #8]
   2a1f4:	and	w10, w10, #0xfffc00ff
   2a1f8:	orr	w10, w10, w26
   2a1fc:	str	w10, [x8, #8]
   2a200:	ldr	x8, [x21]
   2a204:	add	x10, x8, x27, lsl #4
   2a208:	ldr	w10, [x10, #8]
   2a20c:	add	x8, x8, x9
   2a210:	ldr	w11, [x8, #8]
   2a214:	and	w10, w10, #0x3ff00
   2a218:	orr	w10, w10, w11
   2a21c:	str	w10, [x8, #8]
   2a220:	ldr	x8, [x21]
   2a224:	add	x8, x8, x9
   2a228:	ldr	w9, [x8, #8]
   2a22c:	orr	w9, w9, #0x40000
   2a230:	str	w9, [x8, #8]
   2a234:	ldr	x8, [x21, #32]
   2a238:	str	x27, [x8, x0, lsl #3]
   2a23c:	ldr	x8, [x21, #40]
   2a240:	madd	x0, x22, x25, x8
   2a244:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2a248:	mov	x22, x23
   2a24c:	tbnz	w0, #0, 2a078 <rpl_re_set_registers@@Base+0x5164>
   2a250:	b	2a354 <rpl_re_set_registers@@Base+0x5440>
   2a254:	madd	x0, x22, x25, x9
   2a258:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2a25c:	tbnz	w0, #0, 2a1b0 <rpl_re_set_registers@@Base+0x529c>
   2a260:	b	2a354 <rpl_re_set_registers@@Base+0x5440>
   2a264:	cmp	x27, x20
   2a268:	b.ne	2a274 <rpl_re_set_registers@@Base+0x5360>  // b.any
   2a26c:	cmp	x22, x27
   2a270:	b.ne	2a338 <rpl_re_set_registers@@Base+0x5424>  // b.any
   2a274:	add	x8, x8, x23, lsl #4
   2a278:	ldp	x1, x2, [x8]
   2a27c:	ldr	w26, [x10]
   2a280:	mov	x0, x21
   2a284:	bl	29aac <rpl_re_set_registers@@Base+0x4b98>
   2a288:	cmn	x0, #0x1
   2a28c:	b.eq	2a354 <rpl_re_set_registers@@Base+0x5440>  // b.none
   2a290:	ldr	x8, [x21]
   2a294:	lsl	x9, x0, #4
   2a298:	ubfx	w11, w26, #8, #10
   2a29c:	orr	w19, w11, w19
   2a2a0:	add	x8, x8, x9
   2a2a4:	ldr	w10, [x8, #8]
   2a2a8:	mov	x24, x0
   2a2ac:	mov	x1, x24
   2a2b0:	bfi	w10, w19, #8, #10
   2a2b4:	str	w10, [x8, #8]
   2a2b8:	ldr	x8, [x21]
   2a2bc:	add	x10, x8, x23, lsl #4
   2a2c0:	ldr	w10, [x10, #8]
   2a2c4:	add	x8, x8, x9
   2a2c8:	ldr	w11, [x8, #8]
   2a2cc:	and	w10, w10, #0x3ff00
   2a2d0:	orr	w10, w10, w11
   2a2d4:	str	w10, [x8, #8]
   2a2d8:	ldr	x8, [x21]
   2a2dc:	add	x8, x8, x9
   2a2e0:	ldr	w9, [x8, #8]
   2a2e4:	orr	w9, w9, #0x40000
   2a2e8:	str	w9, [x8, #8]
   2a2ec:	ldr	x8, [x21, #32]
   2a2f0:	str	x23, [x8, x0, lsl #3]
   2a2f4:	ldr	x8, [x21, #40]
   2a2f8:	madd	x0, x22, x25, x8
   2a2fc:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2a300:	mov	x22, x24
   2a304:	tbnz	w0, #0, 29fbc <rpl_re_set_registers@@Base+0x50a8>
   2a308:	b	2a354 <rpl_re_set_registers@@Base+0x5440>
   2a30c:	ldr	x8, [x21, #24]
   2a310:	mov	w0, wzr
   2a314:	ldr	x9, [x8, x27, lsl #3]
   2a318:	str	x9, [x8, x22, lsl #3]
   2a31c:	ldp	x20, x19, [sp, #80]
   2a320:	ldp	x22, x21, [sp, #64]
   2a324:	ldp	x24, x23, [sp, #48]
   2a328:	ldp	x26, x25, [sp, #32]
   2a32c:	ldr	x27, [sp, #16]
   2a330:	ldp	x29, x30, [sp], #96
   2a334:	ret
   2a338:	mov	w8, #0x18                  	// #24
   2a33c:	madd	x0, x22, x8, x9
   2a340:	mov	x1, x23
   2a344:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2a348:	tbz	w0, #0, 2a354 <rpl_re_set_registers@@Base+0x5440>
   2a34c:	mov	w0, wzr
   2a350:	b	2a31c <rpl_re_set_registers@@Base+0x5408>
   2a354:	mov	w0, #0xc                   	// #12
   2a358:	b	2a31c <rpl_re_set_registers@@Base+0x5408>
   2a35c:	stp	x29, x30, [sp, #-48]!
   2a360:	str	x21, [sp, #16]
   2a364:	stp	x20, x19, [sp, #32]
   2a368:	mov	x29, sp
   2a36c:	cbz	x1, 2a454 <rpl_re_set_registers@@Base+0x5540>
   2a370:	ldr	x10, [x1, #8]
   2a374:	mov	x20, x1
   2a378:	cbz	x10, 2a454 <rpl_re_set_registers@@Base+0x5540>
   2a37c:	ldp	x8, x11, [x0]
   2a380:	mov	x19, x0
   2a384:	add	x9, x11, x10, lsl #1
   2a388:	cmp	x8, x9
   2a38c:	b.ge	2a3b8 <rpl_re_set_registers@@Base+0x54a4>  // b.tcont
   2a390:	ldr	x0, [x19, #16]
   2a394:	add	x21, x8, x10
   2a398:	lsl	x1, x21, #4
   2a39c:	bl	a730 <realloc@plt>
   2a3a0:	cbz	x0, 2a4e0 <rpl_re_set_registers@@Base+0x55cc>
   2a3a4:	lsl	x8, x21, #1
   2a3a8:	str	x0, [x19, #16]
   2a3ac:	str	x8, [x19]
   2a3b0:	ldr	x11, [x19, #8]
   2a3b4:	ldr	x10, [x20, #8]
   2a3b8:	cbz	x11, 2a4cc <rpl_re_set_registers@@Base+0x55b8>
   2a3bc:	sub	x8, x10, #0x1
   2a3c0:	sub	x9, x11, #0x1
   2a3c4:	orr	x12, x8, x9
   2a3c8:	add	x21, x11, x10, lsl #1
   2a3cc:	tbnz	x12, #63, 2a418 <rpl_re_set_registers@@Base+0x5504>
   2a3d0:	ldr	x10, [x19, #16]
   2a3d4:	ldr	x11, [x20, #16]
   2a3d8:	b	2a3f0 <rpl_re_set_registers@@Base+0x54dc>
   2a3dc:	sub	x8, x8, #0x1
   2a3e0:	sub	x21, x21, #0x1
   2a3e4:	str	x12, [x10, x21, lsl #3]
   2a3e8:	orr	x12, x8, x9
   2a3ec:	tbnz	x12, #63, 2a418 <rpl_re_set_registers@@Base+0x5504>
   2a3f0:	ldr	x13, [x10, x9, lsl #3]
   2a3f4:	ldr	x12, [x11, x8, lsl #3]
   2a3f8:	cmp	x13, x12
   2a3fc:	b.ne	2a408 <rpl_re_set_registers@@Base+0x54f4>  // b.any
   2a400:	sub	x8, x8, #0x1
   2a404:	b	2a40c <rpl_re_set_registers@@Base+0x54f8>
   2a408:	b.lt	2a3dc <rpl_re_set_registers@@Base+0x54c8>  // b.tstop
   2a40c:	sub	x9, x9, #0x1
   2a410:	orr	x12, x8, x9
   2a414:	tbz	x12, #63, 2a3f0 <rpl_re_set_registers@@Base+0x54dc>
   2a418:	tbnz	x8, #63, 2a438 <rpl_re_set_registers@@Base+0x5524>
   2a41c:	ldr	x9, [x19, #16]
   2a420:	ldr	x1, [x20, #16]
   2a424:	add	x8, x8, #0x1
   2a428:	sub	x21, x21, x8
   2a42c:	add	x0, x9, x21, lsl #3
   2a430:	lsl	x2, x8, #3
   2a434:	bl	a210 <memcpy@plt>
   2a438:	ldr	x10, [x19, #8]
   2a43c:	ldr	x8, [x20, #8]
   2a440:	sub	x9, x10, #0x1
   2a444:	add	x8, x9, x8, lsl #1
   2a448:	sub	x11, x8, x21
   2a44c:	adds	x11, x11, #0x1
   2a450:	b.cc	2a468 <rpl_re_set_registers@@Base+0x5554>  // b.lo, b.ul, b.last
   2a454:	mov	w0, wzr
   2a458:	ldp	x20, x19, [sp, #32]
   2a45c:	ldr	x21, [sp, #16]
   2a460:	ldp	x29, x30, [sp], #48
   2a464:	ret
   2a468:	ldr	x0, [x19, #16]
   2a46c:	add	x10, x11, x10
   2a470:	str	x10, [x19, #8]
   2a474:	add	x10, x0, x9, lsl #3
   2a478:	lsl	x2, x11, #3
   2a47c:	neg	x11, x11
   2a480:	ldr	x12, [x0, x8, lsl #3]
   2a484:	ldr	x13, [x0, x9, lsl #3]
   2a488:	cmp	x12, x13
   2a48c:	b.le	2a4a8 <rpl_re_set_registers@@Base+0x5594>
   2a490:	sub	x8, x8, #0x1
   2a494:	str	x12, [x10, x2]
   2a498:	adds	x11, x11, #0x1
   2a49c:	sub	x2, x2, #0x8
   2a4a0:	b.cc	2a480 <rpl_re_set_registers@@Base+0x556c>  // b.lo, b.ul, b.last
   2a4a4:	b	2a454 <rpl_re_set_registers@@Base+0x5540>
   2a4a8:	str	x13, [x10, x2]
   2a4ac:	cmp	x9, #0x0
   2a4b0:	sub	x9, x9, #0x1
   2a4b4:	neg	x11, x11
   2a4b8:	sub	x10, x10, #0x8
   2a4bc:	b.gt	2a478 <rpl_re_set_registers@@Base+0x5564>
   2a4c0:	add	x1, x0, x21, lsl #3
   2a4c4:	bl	a210 <memcpy@plt>
   2a4c8:	b	2a454 <rpl_re_set_registers@@Base+0x5540>
   2a4cc:	str	x10, [x19, #8]
   2a4d0:	ldp	x8, x1, [x20, #8]
   2a4d4:	ldr	x0, [x19, #16]
   2a4d8:	lsl	x2, x8, #3
   2a4dc:	b	2a4c4 <rpl_re_set_registers@@Base+0x55b0>
   2a4e0:	mov	w0, #0xc                   	// #12
   2a4e4:	ldp	x20, x19, [sp, #32]
   2a4e8:	ldr	x21, [sp, #16]
   2a4ec:	ldp	x29, x30, [sp], #48
   2a4f0:	ret
   2a4f4:	stp	x29, x30, [sp, #-32]!
   2a4f8:	stp	x20, x19, [sp, #16]
   2a4fc:	ldr	x9, [x0]
   2a500:	mov	x19, x0
   2a504:	mov	x20, x1
   2a508:	mov	x29, sp
   2a50c:	cbz	x9, 2a530 <rpl_re_set_registers@@Base+0x561c>
   2a510:	ldr	x8, [x19, #8]
   2a514:	cbnz	x8, 2a560 <rpl_re_set_registers@@Base+0x564c>
   2a518:	ldr	x8, [x19, #16]
   2a51c:	str	x20, [x8]
   2a520:	ldr	x8, [x19, #8]
   2a524:	add	x8, x8, #0x1
   2a528:	str	x8, [x19, #8]
   2a52c:	b	2a550 <rpl_re_set_registers@@Base+0x563c>
   2a530:	mov	w8, #0x1                   	// #1
   2a534:	dup	v0.2d, x8
   2a538:	mov	w0, #0x8                   	// #8
   2a53c:	str	q0, [x19]
   2a540:	bl	a550 <malloc@plt>
   2a544:	str	x0, [x19, #16]
   2a548:	cbz	x0, 2a58c <rpl_re_set_registers@@Base+0x5678>
   2a54c:	str	x20, [x0]
   2a550:	mov	w0, #0x1                   	// #1
   2a554:	ldp	x20, x19, [sp, #16]
   2a558:	ldp	x29, x30, [sp], #32
   2a55c:	ret
   2a560:	cmp	x9, x8
   2a564:	b.ne	2a59c <rpl_re_set_registers@@Base+0x5688>  // b.any
   2a568:	ldr	x0, [x19, #16]
   2a56c:	lsl	x8, x9, #1
   2a570:	lsl	x1, x9, #4
   2a574:	str	x8, [x19]
   2a578:	bl	a730 <realloc@plt>
   2a57c:	cbz	x0, 2a554 <rpl_re_set_registers@@Base+0x5640>
   2a580:	ldr	x8, [x19, #8]
   2a584:	str	x0, [x19, #16]
   2a588:	b	2a5a0 <rpl_re_set_registers@@Base+0x568c>
   2a58c:	stp	xzr, xzr, [x19]
   2a590:	ldp	x20, x19, [sp, #16]
   2a594:	ldp	x29, x30, [sp], #32
   2a598:	ret
   2a59c:	ldr	x0, [x19, #16]
   2a5a0:	ldr	x9, [x0]
   2a5a4:	cmp	x9, x20
   2a5a8:	b.le	2a5d4 <rpl_re_set_registers@@Base+0x56c0>
   2a5ac:	cmp	x8, #0x1
   2a5b0:	b.lt	2a5fc <rpl_re_set_registers@@Base+0x56e8>  // b.tstop
   2a5b4:	mov	x9, x8
   2a5b8:	add	x10, x0, x9, lsl #3
   2a5bc:	ldur	x11, [x10, #-8]
   2a5c0:	subs	x8, x9, #0x1
   2a5c4:	mov	x9, x8
   2a5c8:	str	x11, [x10]
   2a5cc:	b.gt	2a5b8 <rpl_re_set_registers@@Base+0x56a4>
   2a5d0:	b	2a5fc <rpl_re_set_registers@@Base+0x56e8>
   2a5d4:	add	x9, x0, x8, lsl #3
   2a5d8:	ldur	x9, [x9, #-8]
   2a5dc:	cmp	x9, x20
   2a5e0:	b.le	2a5fc <rpl_re_set_registers@@Base+0x56e8>
   2a5e4:	add	x10, x0, x8, lsl #3
   2a5e8:	str	x9, [x10]
   2a5ec:	ldur	x9, [x10, #-16]
   2a5f0:	sub	x8, x8, #0x1
   2a5f4:	cmp	x9, x20
   2a5f8:	b.gt	2a5e4 <rpl_re_set_registers@@Base+0x56d0>
   2a5fc:	str	x20, [x0, x8, lsl #3]
   2a600:	b	2a520 <rpl_re_set_registers@@Base+0x560c>
   2a604:	sub	sp, sp, #0xb0
   2a608:	stp	x29, x30, [sp, #80]
   2a60c:	stp	x28, x27, [sp, #96]
   2a610:	stp	x26, x25, [sp, #112]
   2a614:	stp	x24, x23, [sp, #128]
   2a618:	stp	x22, x21, [sp, #144]
   2a61c:	stp	x20, x19, [sp, #160]
   2a620:	ldr	x28, [x2, #8]
   2a624:	mov	x19, x0
   2a628:	add	x29, sp, #0x50
   2a62c:	cbz	x28, 2a65c <rpl_re_set_registers@@Base+0x5748>
   2a630:	mov	w24, w3
   2a634:	mov	x26, x2
   2a638:	mov	x21, x1
   2a63c:	subs	x8, x28, #0x1
   2a640:	add	x22, x28, w3, uxtw
   2a644:	b.lt	2a6c4 <rpl_re_set_registers@@Base+0x57b0>  // b.tstop
   2a648:	ldr	x9, [x26, #16]
   2a64c:	cmp	x28, #0x4
   2a650:	b.cs	2a668 <rpl_re_set_registers@@Base+0x5754>  // b.hs, b.nlast
   2a654:	mov	x10, xzr
   2a658:	b	2a6ac <rpl_re_set_registers@@Base+0x5798>
   2a65c:	mov	x23, xzr
   2a660:	str	wzr, [x19]
   2a664:	b	2a9d0 <rpl_re_set_registers@@Base+0x5abc>
   2a668:	and	x10, x28, #0xfffffffffffffffc
   2a66c:	movi	v1.2d, #0x0
   2a670:	movi	v0.2d, #0x0
   2a674:	mov	v1.d[0], x22
   2a678:	add	x11, x9, #0x10
   2a67c:	mov	x12, x10
   2a680:	ldp	q2, q3, [x11, #-16]
   2a684:	subs	x12, x12, #0x4
   2a688:	add	x11, x11, #0x20
   2a68c:	add	v1.2d, v2.2d, v1.2d
   2a690:	add	v0.2d, v3.2d, v0.2d
   2a694:	b.ne	2a680 <rpl_re_set_registers@@Base+0x576c>  // b.any
   2a698:	add	v0.2d, v0.2d, v1.2d
   2a69c:	addp	d0, v0.2d
   2a6a0:	cmp	x28, x10
   2a6a4:	fmov	x22, d0
   2a6a8:	b.eq	2a6c4 <rpl_re_set_registers@@Base+0x57b0>  // b.none
   2a6ac:	sub	x11, x28, x10
   2a6b0:	add	x9, x9, x10, lsl #3
   2a6b4:	ldr	x10, [x9], #8
   2a6b8:	subs	x11, x11, #0x1
   2a6bc:	add	x22, x10, x22
   2a6c0:	b.ne	2a6b4 <rpl_re_set_registers@@Base+0x57a0>  // b.any
   2a6c4:	ldr	x9, [x21, #136]
   2a6c8:	ldr	x10, [x21, #64]
   2a6cc:	and	x11, x9, x22
   2a6d0:	mov	w9, #0x18                  	// #24
   2a6d4:	mul	x9, x11, x9
   2a6d8:	ldr	x9, [x10, x9]
   2a6dc:	cmp	x9, #0x1
   2a6e0:	b.lt	2a770 <rpl_re_set_registers@@Base+0x585c>  // b.tstop
   2a6e4:	cbz	x26, 2a770 <rpl_re_set_registers@@Base+0x585c>
   2a6e8:	mov	w12, #0x18                  	// #24
   2a6ec:	madd	x10, x11, x12, x10
   2a6f0:	ldr	x10, [x10, #16]
   2a6f4:	mov	x11, xzr
   2a6f8:	b	2a708 <rpl_re_set_registers@@Base+0x57f4>
   2a6fc:	add	x11, x11, #0x1
   2a700:	cmp	x11, x9
   2a704:	b.ge	2a770 <rpl_re_set_registers@@Base+0x585c>  // b.tcont
   2a708:	ldr	x23, [x10, x11, lsl #3]
   2a70c:	ldr	x12, [x23]
   2a710:	cmp	x12, x22
   2a714:	b.ne	2a6fc <rpl_re_set_registers@@Base+0x57e8>  // b.any
   2a718:	ldrb	w12, [x23, #104]
   2a71c:	and	w12, w12, #0xf
   2a720:	cmp	w12, w24
   2a724:	b.ne	2a6fc <rpl_re_set_registers@@Base+0x57e8>  // b.any
   2a728:	ldr	x12, [x23, #80]
   2a72c:	cbz	x12, 2a6fc <rpl_re_set_registers@@Base+0x57e8>
   2a730:	ldr	x13, [x12, #8]
   2a734:	cmp	x13, x28
   2a738:	b.ne	2a6fc <rpl_re_set_registers@@Base+0x57e8>  // b.any
   2a73c:	mov	x13, x8
   2a740:	add	x14, x13, #0x1
   2a744:	cmp	x14, #0x1
   2a748:	b.lt	2a9d0 <rpl_re_set_registers@@Base+0x5abc>  // b.tstop
   2a74c:	ldr	x14, [x12, #16]
   2a750:	ldr	x15, [x26, #16]
   2a754:	lsl	x16, x13, #3
   2a758:	sub	x13, x13, #0x1
   2a75c:	ldr	x14, [x14, x16]
   2a760:	ldr	x15, [x15, x16]
   2a764:	cmp	x14, x15
   2a768:	b.eq	2a740 <rpl_re_set_registers@@Base+0x582c>  // b.none
   2a76c:	b	2a6fc <rpl_re_set_registers@@Base+0x57e8>
   2a770:	mov	w0, #0x70                  	// #112
   2a774:	mov	w1, #0x1                   	// #1
   2a778:	bl	a6c0 <calloc@plt>
   2a77c:	cbz	x0, 2aef0 <rpl_re_set_registers@@Base+0x5fdc>
   2a780:	mov	x23, x0
   2a784:	add	x9, x0, #0x8
   2a788:	cmp	x28, #0x1
   2a78c:	str	x28, [x0, #16]
   2a790:	str	x19, [sp, #8]
   2a794:	str	x21, [sp, #24]
   2a798:	b.lt	2a9a8 <rpl_re_set_registers@@Base+0x5a94>  // b.tstop
   2a79c:	lsl	x27, x28, #3
   2a7a0:	mov	x0, x27
   2a7a4:	stur	x9, [x29, #-8]
   2a7a8:	str	x28, [x23, #8]
   2a7ac:	bl	a550 <malloc@plt>
   2a7b0:	str	x0, [x23, #24]
   2a7b4:	cbz	x0, 2aee8 <rpl_re_set_registers@@Base+0x5fd4>
   2a7b8:	ldr	x26, [x26, #16]
   2a7bc:	mov	x2, x27
   2a7c0:	mov	x25, x0
   2a7c4:	mov	x1, x26
   2a7c8:	bl	a210 <memcpy@plt>
   2a7cc:	ldur	x15, [x29, #-8]
   2a7d0:	and	w20, w24, #0xf
   2a7d4:	strb	w20, [x23, #104]
   2a7d8:	mov	x19, xzr
   2a7dc:	str	x15, [x23, #80]
   2a7e0:	ldr	x16, [x21]
   2a7e4:	mov	x8, xzr
   2a7e8:	add	x9, x25, #0x8
   2a7ec:	stur	x27, [x29, #-32]
   2a7f0:	stp	x16, x26, [sp, #32]
   2a7f4:	stur	x28, [x29, #-16]
   2a7f8:	stur	w24, [x29, #-20]
   2a7fc:	tbnz	w24, #0, 2a9f4 <rpl_re_set_registers@@Base+0x5ae0>
   2a800:	tbnz	w24, #1, 2ab9c <rpl_re_set_registers@@Base+0x5c88>
   2a804:	mov	x21, #0xffffffffffffffff    	// #-1
   2a808:	mov	w17, #0x1100                	// #4352
   2a80c:	mov	x18, x28
   2a810:	mov	x27, x15
   2a814:	str	x9, [sp]
   2a818:	b	2a838 <rpl_re_set_registers@@Base+0x5924>
   2a81c:	mov	x18, x9
   2a820:	add	x8, x8, #0x1
   2a824:	add	x19, x19, #0x1
   2a828:	sub	x21, x21, #0x1
   2a82c:	cmp	x19, x28
   2a830:	add	x25, x25, #0x8
   2a834:	b.eq	2a9bc <rpl_re_set_registers@@Base+0x5aa8>  // b.none
   2a838:	ldr	x9, [x26, x19, lsl #3]
   2a83c:	add	x9, x16, x9, lsl #4
   2a840:	ldr	w24, [x9, #8]
   2a844:	and	w9, w24, #0x3ffff
   2a848:	cmp	w9, #0x1
   2a84c:	b.eq	2a824 <rpl_re_set_registers@@Base+0x5910>  // b.none
   2a850:	lsr	w11, w24, #15
   2a854:	and	w10, w24, #0xff
   2a858:	and	w11, w11, #0x20
   2a85c:	and	w9, w24, #0x3ff00
   2a860:	orr	w20, w20, w11
   2a864:	cmp	w10, #0x4
   2a868:	strb	w20, [x23, #104]
   2a86c:	b.eq	2a880 <rpl_re_set_registers@@Base+0x596c>  // b.none
   2a870:	cmp	w10, #0x2
   2a874:	b.ne	2a88c <rpl_re_set_registers@@Base+0x5978>  // b.any
   2a878:	mov	w10, #0x10                  	// #16
   2a87c:	b	2a884 <rpl_re_set_registers@@Base+0x5970>
   2a880:	mov	w10, #0x40                  	// #64
   2a884:	orr	w20, w20, w10
   2a888:	strb	w20, [x23, #104]
   2a88c:	cbz	w9, 2a824 <rpl_re_set_registers@@Base+0x5910>
   2a890:	cmp	x27, x15
   2a894:	b.eq	2a8a4 <rpl_re_set_registers@@Base+0x5990>  // b.none
   2a898:	tst	w24, w17
   2a89c:	b.ne	2a91c <rpl_re_set_registers@@Base+0x5a08>  // b.any
   2a8a0:	b	2a910 <rpl_re_set_registers@@Base+0x59fc>
   2a8a4:	mov	w0, #0x18                  	// #24
   2a8a8:	str	x18, [sp, #16]
   2a8ac:	bl	a550 <malloc@plt>
   2a8b0:	cbz	x0, 2aec4 <rpl_re_set_registers@@Base+0x5fb0>
   2a8b4:	ldur	x8, [x29, #-16]
   2a8b8:	ldur	x26, [x29, #-32]
   2a8bc:	mov	x27, x0
   2a8c0:	str	x0, [x23, #80]
   2a8c4:	stp	x8, x8, [x0]
   2a8c8:	mov	x0, x26
   2a8cc:	mov	x28, x8
   2a8d0:	bl	a550 <malloc@plt>
   2a8d4:	str	x0, [x27, #16]
   2a8d8:	cbz	x0, 2aed4 <rpl_re_set_registers@@Base+0x5fc0>
   2a8dc:	ldr	x1, [sp, #40]
   2a8e0:	mov	x2, x26
   2a8e4:	mov	x26, x1
   2a8e8:	bl	a210 <memcpy@plt>
   2a8ec:	ldur	x15, [x29, #-8]
   2a8f0:	ldr	x16, [sp, #32]
   2a8f4:	ldr	x18, [sp, #16]
   2a8f8:	mov	x8, xzr
   2a8fc:	orr	w20, w20, #0xffffff80
   2a900:	mov	w17, #0x1100                	// #4352
   2a904:	strb	w20, [x23, #104]
   2a908:	tst	w24, w17
   2a90c:	b.ne	2a91c <rpl_re_set_registers@@Base+0x5a08>  // b.any
   2a910:	ldur	w9, [x29, #-20]
   2a914:	tbnz	w9, #2, 2a824 <rpl_re_set_registers@@Base+0x5910>
   2a918:	tbz	w24, #14, 2a824 <rpl_re_set_registers@@Base+0x5910>
   2a91c:	subs	x10, x19, x8
   2a920:	b.mi	2a820 <rpl_re_set_registers@@Base+0x590c>  // b.first
   2a924:	cmp	x18, x10
   2a928:	b.le	2a820 <rpl_re_set_registers@@Base+0x590c>
   2a92c:	sub	x9, x18, #0x1
   2a930:	cmp	x9, x10
   2a934:	str	x9, [x23, #16]
   2a938:	b.le	2a81c <rpl_re_set_registers@@Base+0x5908>
   2a93c:	mvn	x11, x19
   2a940:	add	x13, x18, x8
   2a944:	add	x11, x13, x11
   2a948:	cmp	x11, #0x4
   2a94c:	b.cc	2a980 <rpl_re_set_registers@@Base+0x5a6c>  // b.lo, b.ul, b.last
   2a950:	and	x12, x11, #0xfffffffffffffffc
   2a954:	add	x13, x13, x21
   2a958:	add	x10, x10, x12
   2a95c:	and	x13, x13, #0xfffffffffffffffc
   2a960:	sub	x14, x25, x8, lsl #3
   2a964:	ldur	q0, [x14, #8]
   2a968:	ldur	q1, [x14, #24]
   2a96c:	subs	x13, x13, #0x4
   2a970:	stp	q0, q1, [x14], #32
   2a974:	b.ne	2a964 <rpl_re_set_registers@@Base+0x5a50>  // b.any
   2a978:	cmp	x11, x12
   2a97c:	b.eq	2a81c <rpl_re_set_registers@@Base+0x5908>  // b.none
   2a980:	ldr	x11, [sp]
   2a984:	add	x11, x11, x10, lsl #3
   2a988:	mvn	x10, x10
   2a98c:	add	x10, x10, x18
   2a990:	ldr	x12, [x11]
   2a994:	subs	x10, x10, #0x1
   2a998:	stur	x12, [x11, #-8]
   2a99c:	add	x11, x11, #0x8
   2a9a0:	b.ne	2a990 <rpl_re_set_registers@@Base+0x5a7c>  // b.any
   2a9a4:	b	2a81c <rpl_re_set_registers@@Base+0x5908>
   2a9a8:	and	w8, w24, #0xf
   2a9ac:	stp	xzr, xzr, [x9]
   2a9b0:	str	xzr, [x9, #16]
   2a9b4:	strb	w8, [x23, #104]
   2a9b8:	str	x9, [x23, #80]
   2a9bc:	ldr	x0, [sp, #24]
   2a9c0:	mov	x1, x23
   2a9c4:	mov	x2, x22
   2a9c8:	bl	2af00 <rpl_re_set_registers@@Base+0x5fec>
   2a9cc:	cbnz	w0, 2aec4 <rpl_re_set_registers@@Base+0x5fb0>
   2a9d0:	mov	x0, x23
   2a9d4:	ldp	x20, x19, [sp, #160]
   2a9d8:	ldp	x22, x21, [sp, #144]
   2a9dc:	ldp	x24, x23, [sp, #128]
   2a9e0:	ldp	x26, x25, [sp, #112]
   2a9e4:	ldp	x28, x27, [sp, #96]
   2a9e8:	ldp	x29, x30, [sp, #80]
   2a9ec:	add	sp, sp, #0xb0
   2a9f0:	ret
   2a9f4:	tbnz	w24, #1, 2ad30 <rpl_re_set_registers@@Base+0x5e1c>
   2a9f8:	mov	x21, #0xffffffffffffffff    	// #-1
   2a9fc:	mov	w17, #0x1200                	// #4608
   2aa00:	mov	x18, x28
   2aa04:	mov	x27, x15
   2aa08:	str	x9, [sp]
   2aa0c:	b	2aa2c <rpl_re_set_registers@@Base+0x5b18>
   2aa10:	mov	x18, x9
   2aa14:	add	x8, x8, #0x1
   2aa18:	add	x19, x19, #0x1
   2aa1c:	sub	x21, x21, #0x1
   2aa20:	cmp	x19, x28
   2aa24:	add	x25, x25, #0x8
   2aa28:	b.eq	2a9bc <rpl_re_set_registers@@Base+0x5aa8>  // b.none
   2aa2c:	ldr	x9, [x26, x19, lsl #3]
   2aa30:	add	x9, x16, x9, lsl #4
   2aa34:	ldr	w24, [x9, #8]
   2aa38:	and	w9, w24, #0x3ffff
   2aa3c:	cmp	w9, #0x1
   2aa40:	b.eq	2aa18 <rpl_re_set_registers@@Base+0x5b04>  // b.none
   2aa44:	lsr	w11, w24, #15
   2aa48:	and	w10, w24, #0xff
   2aa4c:	and	w11, w11, #0x20
   2aa50:	and	w9, w24, #0x3ff00
   2aa54:	orr	w20, w20, w11
   2aa58:	cmp	w10, #0x4
   2aa5c:	strb	w20, [x23, #104]
   2aa60:	b.eq	2aa74 <rpl_re_set_registers@@Base+0x5b60>  // b.none
   2aa64:	cmp	w10, #0x2
   2aa68:	b.ne	2aa80 <rpl_re_set_registers@@Base+0x5b6c>  // b.any
   2aa6c:	mov	w10, #0x10                  	// #16
   2aa70:	b	2aa78 <rpl_re_set_registers@@Base+0x5b64>
   2aa74:	mov	w10, #0x40                  	// #64
   2aa78:	orr	w20, w20, w10
   2aa7c:	strb	w20, [x23, #104]
   2aa80:	cbz	w9, 2aa18 <rpl_re_set_registers@@Base+0x5b04>
   2aa84:	cmp	x27, x15
   2aa88:	b.eq	2aa98 <rpl_re_set_registers@@Base+0x5b84>  // b.none
   2aa8c:	tst	w24, w17
   2aa90:	b.ne	2ab10 <rpl_re_set_registers@@Base+0x5bfc>  // b.any
   2aa94:	b	2ab04 <rpl_re_set_registers@@Base+0x5bf0>
   2aa98:	mov	w0, #0x18                  	// #24
   2aa9c:	str	x18, [sp, #16]
   2aaa0:	bl	a550 <malloc@plt>
   2aaa4:	cbz	x0, 2aec4 <rpl_re_set_registers@@Base+0x5fb0>
   2aaa8:	ldur	x8, [x29, #-16]
   2aaac:	ldur	x26, [x29, #-32]
   2aab0:	mov	x27, x0
   2aab4:	str	x0, [x23, #80]
   2aab8:	stp	x8, x8, [x0]
   2aabc:	mov	x0, x26
   2aac0:	mov	x28, x8
   2aac4:	bl	a550 <malloc@plt>
   2aac8:	str	x0, [x27, #16]
   2aacc:	cbz	x0, 2aed4 <rpl_re_set_registers@@Base+0x5fc0>
   2aad0:	ldr	x1, [sp, #40]
   2aad4:	mov	x2, x26
   2aad8:	mov	x26, x1
   2aadc:	bl	a210 <memcpy@plt>
   2aae0:	ldur	x15, [x29, #-8]
   2aae4:	ldr	x16, [sp, #32]
   2aae8:	ldr	x18, [sp, #16]
   2aaec:	mov	x8, xzr
   2aaf0:	orr	w20, w20, #0xffffff80
   2aaf4:	mov	w17, #0x1200                	// #4608
   2aaf8:	strb	w20, [x23, #104]
   2aafc:	tst	w24, w17
   2ab00:	b.ne	2ab10 <rpl_re_set_registers@@Base+0x5bfc>  // b.any
   2ab04:	ldur	w9, [x29, #-20]
   2ab08:	tbnz	w9, #2, 2aa18 <rpl_re_set_registers@@Base+0x5b04>
   2ab0c:	tbz	w24, #14, 2aa18 <rpl_re_set_registers@@Base+0x5b04>
   2ab10:	subs	x10, x19, x8
   2ab14:	b.mi	2aa14 <rpl_re_set_registers@@Base+0x5b00>  // b.first
   2ab18:	cmp	x18, x10
   2ab1c:	b.le	2aa14 <rpl_re_set_registers@@Base+0x5b00>
   2ab20:	sub	x9, x18, #0x1
   2ab24:	cmp	x9, x10
   2ab28:	str	x9, [x23, #16]
   2ab2c:	b.le	2aa10 <rpl_re_set_registers@@Base+0x5afc>
   2ab30:	mvn	x11, x19
   2ab34:	add	x13, x18, x8
   2ab38:	add	x11, x13, x11
   2ab3c:	cmp	x11, #0x4
   2ab40:	b.cc	2ab74 <rpl_re_set_registers@@Base+0x5c60>  // b.lo, b.ul, b.last
   2ab44:	and	x12, x11, #0xfffffffffffffffc
   2ab48:	add	x13, x13, x21
   2ab4c:	add	x10, x10, x12
   2ab50:	and	x13, x13, #0xfffffffffffffffc
   2ab54:	sub	x14, x25, x8, lsl #3
   2ab58:	ldur	q0, [x14, #8]
   2ab5c:	ldur	q1, [x14, #24]
   2ab60:	subs	x13, x13, #0x4
   2ab64:	stp	q0, q1, [x14], #32
   2ab68:	b.ne	2ab58 <rpl_re_set_registers@@Base+0x5c44>  // b.any
   2ab6c:	cmp	x11, x12
   2ab70:	b.eq	2aa10 <rpl_re_set_registers@@Base+0x5afc>  // b.none
   2ab74:	ldr	x11, [sp]
   2ab78:	add	x11, x11, x10, lsl #3
   2ab7c:	mvn	x10, x10
   2ab80:	add	x10, x10, x18
   2ab84:	ldr	x12, [x11]
   2ab88:	subs	x10, x10, #0x1
   2ab8c:	stur	x12, [x11, #-8]
   2ab90:	add	x11, x11, #0x8
   2ab94:	b.ne	2ab84 <rpl_re_set_registers@@Base+0x5c70>  // b.any
   2ab98:	b	2aa10 <rpl_re_set_registers@@Base+0x5afc>
   2ab9c:	mov	x21, #0xffffffffffffffff    	// #-1
   2aba0:	mov	x17, x28
   2aba4:	mov	x27, x15
   2aba8:	str	x9, [sp]
   2abac:	b	2abcc <rpl_re_set_registers@@Base+0x5cb8>
   2abb0:	mov	x17, x9
   2abb4:	add	x8, x8, #0x1
   2abb8:	add	x19, x19, #0x1
   2abbc:	sub	x21, x21, #0x1
   2abc0:	cmp	x19, x28
   2abc4:	add	x25, x25, #0x8
   2abc8:	b.eq	2a9bc <rpl_re_set_registers@@Base+0x5aa8>  // b.none
   2abcc:	ldr	x9, [x26, x19, lsl #3]
   2abd0:	add	x9, x16, x9, lsl #4
   2abd4:	ldr	w24, [x9, #8]
   2abd8:	and	w9, w24, #0x3ffff
   2abdc:	cmp	w9, #0x1
   2abe0:	b.eq	2abb8 <rpl_re_set_registers@@Base+0x5ca4>  // b.none
   2abe4:	lsr	w11, w24, #15
   2abe8:	and	w10, w24, #0xff
   2abec:	and	w11, w11, #0x20
   2abf0:	and	w9, w24, #0x3ff00
   2abf4:	orr	w20, w20, w11
   2abf8:	cmp	w10, #0x4
   2abfc:	strb	w20, [x23, #104]
   2ac00:	b.eq	2ac14 <rpl_re_set_registers@@Base+0x5d00>  // b.none
   2ac04:	cmp	w10, #0x2
   2ac08:	b.ne	2ac20 <rpl_re_set_registers@@Base+0x5d0c>  // b.any
   2ac0c:	mov	w10, #0x10                  	// #16
   2ac10:	b	2ac18 <rpl_re_set_registers@@Base+0x5d04>
   2ac14:	mov	w10, #0x40                  	// #64
   2ac18:	orr	w20, w20, w10
   2ac1c:	strb	w20, [x23, #104]
   2ac20:	cbz	w9, 2abb8 <rpl_re_set_registers@@Base+0x5ca4>
   2ac24:	cmp	x27, x15
   2ac28:	b.eq	2ac34 <rpl_re_set_registers@@Base+0x5d20>  // b.none
   2ac2c:	tbz	w24, #8, 2ac98 <rpl_re_set_registers@@Base+0x5d84>
   2ac30:	b	2aca4 <rpl_re_set_registers@@Base+0x5d90>
   2ac34:	mov	w0, #0x18                  	// #24
   2ac38:	str	x17, [sp, #16]
   2ac3c:	bl	a550 <malloc@plt>
   2ac40:	cbz	x0, 2aec4 <rpl_re_set_registers@@Base+0x5fb0>
   2ac44:	ldur	x8, [x29, #-16]
   2ac48:	ldur	x26, [x29, #-32]
   2ac4c:	mov	x28, x0
   2ac50:	str	x0, [x23, #80]
   2ac54:	stp	x8, x8, [x0]
   2ac58:	mov	x0, x26
   2ac5c:	bl	a550 <malloc@plt>
   2ac60:	mov	x27, x28
   2ac64:	str	x0, [x28, #16]
   2ac68:	cbz	x0, 2aed4 <rpl_re_set_registers@@Base+0x5fc0>
   2ac6c:	ldr	x1, [sp, #40]
   2ac70:	mov	x2, x26
   2ac74:	mov	x26, x1
   2ac78:	bl	a210 <memcpy@plt>
   2ac7c:	ldp	x28, x15, [x29, #-16]
   2ac80:	ldr	x16, [sp, #32]
   2ac84:	ldr	x17, [sp, #16]
   2ac88:	mov	x8, xzr
   2ac8c:	orr	w20, w20, #0xffffff80
   2ac90:	strb	w20, [x23, #104]
   2ac94:	tbnz	w24, #8, 2aca4 <rpl_re_set_registers@@Base+0x5d90>
   2ac98:	ldur	w9, [x29, #-20]
   2ac9c:	tbnz	w9, #2, 2abb8 <rpl_re_set_registers@@Base+0x5ca4>
   2aca0:	tbz	w24, #14, 2abb8 <rpl_re_set_registers@@Base+0x5ca4>
   2aca4:	subs	x10, x19, x8
   2aca8:	b.mi	2abb4 <rpl_re_set_registers@@Base+0x5ca0>  // b.first
   2acac:	cmp	x17, x10
   2acb0:	b.le	2abb4 <rpl_re_set_registers@@Base+0x5ca0>
   2acb4:	sub	x9, x17, #0x1
   2acb8:	cmp	x9, x10
   2acbc:	str	x9, [x23, #16]
   2acc0:	b.le	2abb0 <rpl_re_set_registers@@Base+0x5c9c>
   2acc4:	mvn	x11, x19
   2acc8:	add	x13, x17, x8
   2accc:	add	x11, x13, x11
   2acd0:	cmp	x11, #0x4
   2acd4:	b.cc	2ad08 <rpl_re_set_registers@@Base+0x5df4>  // b.lo, b.ul, b.last
   2acd8:	and	x12, x11, #0xfffffffffffffffc
   2acdc:	add	x13, x13, x21
   2ace0:	add	x10, x10, x12
   2ace4:	and	x13, x13, #0xfffffffffffffffc
   2ace8:	sub	x14, x25, x8, lsl #3
   2acec:	ldur	q0, [x14, #8]
   2acf0:	ldur	q1, [x14, #24]
   2acf4:	subs	x13, x13, #0x4
   2acf8:	stp	q0, q1, [x14], #32
   2acfc:	b.ne	2acec <rpl_re_set_registers@@Base+0x5dd8>  // b.any
   2ad00:	cmp	x11, x12
   2ad04:	b.eq	2abb0 <rpl_re_set_registers@@Base+0x5c9c>  // b.none
   2ad08:	ldr	x11, [sp]
   2ad0c:	add	x11, x11, x10, lsl #3
   2ad10:	mvn	x10, x10
   2ad14:	add	x10, x10, x17
   2ad18:	ldr	x12, [x11]
   2ad1c:	subs	x10, x10, #0x1
   2ad20:	stur	x12, [x11, #-8]
   2ad24:	add	x11, x11, #0x8
   2ad28:	b.ne	2ad18 <rpl_re_set_registers@@Base+0x5e04>  // b.any
   2ad2c:	b	2abb0 <rpl_re_set_registers@@Base+0x5c9c>
   2ad30:	mov	x21, #0xffffffffffffffff    	// #-1
   2ad34:	mov	x17, x28
   2ad38:	mov	x27, x15
   2ad3c:	str	x9, [sp]
   2ad40:	b	2ad60 <rpl_re_set_registers@@Base+0x5e4c>
   2ad44:	mov	x17, x9
   2ad48:	add	x8, x8, #0x1
   2ad4c:	add	x19, x19, #0x1
   2ad50:	sub	x21, x21, #0x1
   2ad54:	cmp	x19, x28
   2ad58:	add	x25, x25, #0x8
   2ad5c:	b.eq	2a9bc <rpl_re_set_registers@@Base+0x5aa8>  // b.none
   2ad60:	ldr	x9, [x26, x19, lsl #3]
   2ad64:	add	x9, x16, x9, lsl #4
   2ad68:	ldr	w24, [x9, #8]
   2ad6c:	and	w9, w24, #0x3ffff
   2ad70:	cmp	w9, #0x1
   2ad74:	b.eq	2ad4c <rpl_re_set_registers@@Base+0x5e38>  // b.none
   2ad78:	lsr	w11, w24, #15
   2ad7c:	and	w10, w24, #0xff
   2ad80:	and	w11, w11, #0x20
   2ad84:	and	w9, w24, #0x3ff00
   2ad88:	orr	w20, w20, w11
   2ad8c:	cmp	w10, #0x2
   2ad90:	strb	w20, [x23, #104]
   2ad94:	b.eq	2ada8 <rpl_re_set_registers@@Base+0x5e94>  // b.none
   2ad98:	cmp	w10, #0x4
   2ad9c:	b.ne	2adb4 <rpl_re_set_registers@@Base+0x5ea0>  // b.any
   2ada0:	mov	w10, #0x40                  	// #64
   2ada4:	b	2adac <rpl_re_set_registers@@Base+0x5e98>
   2ada8:	mov	w10, #0x10                  	// #16
   2adac:	orr	w20, w20, w10
   2adb0:	strb	w20, [x23, #104]
   2adb4:	cbz	w9, 2ad4c <rpl_re_set_registers@@Base+0x5e38>
   2adb8:	cmp	x27, x15
   2adbc:	b.eq	2adc8 <rpl_re_set_registers@@Base+0x5eb4>  // b.none
   2adc0:	tbz	w24, #9, 2ae2c <rpl_re_set_registers@@Base+0x5f18>
   2adc4:	b	2ae38 <rpl_re_set_registers@@Base+0x5f24>
   2adc8:	mov	w0, #0x18                  	// #24
   2adcc:	str	x17, [sp, #16]
   2add0:	bl	a550 <malloc@plt>
   2add4:	cbz	x0, 2aec4 <rpl_re_set_registers@@Base+0x5fb0>
   2add8:	ldur	x8, [x29, #-16]
   2addc:	ldur	x26, [x29, #-32]
   2ade0:	mov	x27, x0
   2ade4:	str	x0, [x23, #80]
   2ade8:	stp	x8, x8, [x0]
   2adec:	mov	x0, x26
   2adf0:	mov	x28, x8
   2adf4:	bl	a550 <malloc@plt>
   2adf8:	str	x0, [x27, #16]
   2adfc:	cbz	x0, 2aed4 <rpl_re_set_registers@@Base+0x5fc0>
   2ae00:	ldr	x1, [sp, #40]
   2ae04:	mov	x2, x26
   2ae08:	mov	x26, x1
   2ae0c:	bl	a210 <memcpy@plt>
   2ae10:	ldur	x15, [x29, #-8]
   2ae14:	ldr	x16, [sp, #32]
   2ae18:	ldr	x17, [sp, #16]
   2ae1c:	mov	x8, xzr
   2ae20:	orr	w20, w20, #0xffffff80
   2ae24:	strb	w20, [x23, #104]
   2ae28:	tbnz	w24, #9, 2ae38 <rpl_re_set_registers@@Base+0x5f24>
   2ae2c:	ldur	w9, [x29, #-20]
   2ae30:	tbnz	w9, #2, 2ad4c <rpl_re_set_registers@@Base+0x5e38>
   2ae34:	tbz	w24, #14, 2ad4c <rpl_re_set_registers@@Base+0x5e38>
   2ae38:	subs	x10, x19, x8
   2ae3c:	b.mi	2ad48 <rpl_re_set_registers@@Base+0x5e34>  // b.first
   2ae40:	cmp	x17, x10
   2ae44:	b.le	2ad48 <rpl_re_set_registers@@Base+0x5e34>
   2ae48:	sub	x9, x17, #0x1
   2ae4c:	cmp	x9, x10
   2ae50:	str	x9, [x23, #16]
   2ae54:	b.le	2ad44 <rpl_re_set_registers@@Base+0x5e30>
   2ae58:	mvn	x11, x19
   2ae5c:	add	x13, x17, x8
   2ae60:	add	x11, x13, x11
   2ae64:	cmp	x11, #0x4
   2ae68:	b.cc	2ae9c <rpl_re_set_registers@@Base+0x5f88>  // b.lo, b.ul, b.last
   2ae6c:	and	x12, x11, #0xfffffffffffffffc
   2ae70:	add	x13, x13, x21
   2ae74:	add	x10, x10, x12
   2ae78:	and	x13, x13, #0xfffffffffffffffc
   2ae7c:	sub	x14, x25, x8, lsl #3
   2ae80:	ldur	q0, [x14, #8]
   2ae84:	ldur	q1, [x14, #24]
   2ae88:	subs	x13, x13, #0x4
   2ae8c:	stp	q0, q1, [x14], #32
   2ae90:	b.ne	2ae80 <rpl_re_set_registers@@Base+0x5f6c>  // b.any
   2ae94:	cmp	x11, x12
   2ae98:	b.eq	2ad44 <rpl_re_set_registers@@Base+0x5e30>  // b.none
   2ae9c:	ldr	x11, [sp]
   2aea0:	add	x11, x11, x10, lsl #3
   2aea4:	mvn	x10, x10
   2aea8:	add	x10, x10, x17
   2aeac:	ldr	x12, [x11]
   2aeb0:	subs	x10, x10, #0x1
   2aeb4:	stur	x12, [x11, #-8]
   2aeb8:	add	x11, x11, #0x8
   2aebc:	b.ne	2aeac <rpl_re_set_registers@@Base+0x5f98>  // b.any
   2aec0:	b	2ad44 <rpl_re_set_registers@@Base+0x5e30>
   2aec4:	mov	x0, x23
   2aec8:	bl	24f40 <rpl_re_set_registers@@Base+0x2c>
   2aecc:	ldr	x19, [sp, #8]
   2aed0:	b	2aef0 <rpl_re_set_registers@@Base+0x5fdc>
   2aed4:	ldr	x19, [sp, #8]
   2aed8:	mov	x0, x23
   2aedc:	stp	xzr, xzr, [x27]
   2aee0:	bl	24f40 <rpl_re_set_registers@@Base+0x2c>
   2aee4:	b	2aef0 <rpl_re_set_registers@@Base+0x5fdc>
   2aee8:	mov	x0, x23
   2aeec:	bl	a970 <free@plt>
   2aef0:	mov	x23, xzr
   2aef4:	mov	w8, #0xc                   	// #12
   2aef8:	str	w8, [x19]
   2aefc:	b	2a9d0 <rpl_re_set_registers@@Base+0x5abc>
   2af00:	stp	x29, x30, [sp, #-64]!
   2af04:	stp	x24, x23, [sp, #16]
   2af08:	stp	x22, x21, [sp, #32]
   2af0c:	stp	x20, x19, [sp, #48]
   2af10:	ldr	x22, [x1, #16]
   2af14:	mov	x21, x0
   2af18:	mov	x29, sp
   2af1c:	mov	x20, x2
   2af20:	lsl	x0, x22, #3
   2af24:	mov	x19, x1
   2af28:	str	x2, [x1]
   2af2c:	stp	x22, xzr, [x1, #32]
   2af30:	bl	a550 <malloc@plt>
   2af34:	str	x0, [x19, #48]
   2af38:	cbz	x0, 2b03c <rpl_re_set_registers@@Base+0x6128>
   2af3c:	cmp	x22, #0x1
   2af40:	b.lt	2afb0 <rpl_re_set_registers@@Base+0x609c>  // b.tstop
   2af44:	mov	x23, xzr
   2af48:	b	2af64 <rpl_re_set_registers@@Base+0x6050>
   2af4c:	add	x9, x8, #0x1
   2af50:	str	x9, [x19, #40]
   2af54:	str	x24, [x0, x8, lsl #3]
   2af58:	add	x23, x23, #0x1
   2af5c:	cmp	x23, x22
   2af60:	b.ge	2afb0 <rpl_re_set_registers@@Base+0x609c>  // b.tcont
   2af64:	ldr	x8, [x19, #24]
   2af68:	ldr	x24, [x8, x23, lsl #3]
   2af6c:	ldr	x8, [x21]
   2af70:	add	x8, x8, x24, lsl #4
   2af74:	ldrb	w8, [x8, #8]
   2af78:	tbnz	w8, #3, 2af58 <rpl_re_set_registers@@Base+0x6044>
   2af7c:	ldp	x9, x8, [x19, #32]
   2af80:	cmp	x9, x8
   2af84:	b.ne	2af4c <rpl_re_set_registers@@Base+0x6038>  // b.any
   2af88:	lsl	x8, x9, #1
   2af8c:	add	x8, x8, #0x2
   2af90:	lsl	x1, x8, #3
   2af94:	str	x8, [x19, #32]
   2af98:	bl	a730 <realloc@plt>
   2af9c:	cbz	x0, 2b03c <rpl_re_set_registers@@Base+0x6128>
   2afa0:	ldr	x8, [x19, #40]
   2afa4:	ldr	x22, [x19, #16]
   2afa8:	str	x0, [x19, #48]
   2afac:	b	2af4c <rpl_re_set_registers@@Base+0x6038>
   2afb0:	ldr	x9, [x21, #136]
   2afb4:	ldr	x8, [x21, #64]
   2afb8:	mov	w11, #0x18                  	// #24
   2afbc:	and	x10, x9, x20
   2afc0:	madd	x20, x10, x11, x8
   2afc4:	mov	x21, x20
   2afc8:	ldr	x11, [x21, #8]!
   2afcc:	ldr	x9, [x20]
   2afd0:	cmp	x11, x9
   2afd4:	b.le	2b008 <rpl_re_set_registers@@Base+0x60f4>
   2afd8:	mov	w11, #0x18                  	// #24
   2afdc:	madd	x8, x10, x11, x8
   2afe0:	ldr	x8, [x8, #16]
   2afe4:	mov	w0, wzr
   2afe8:	add	x10, x9, #0x1
   2afec:	str	x10, [x20]
   2aff0:	str	x19, [x8, x9, lsl #3]
   2aff4:	ldp	x20, x19, [sp, #48]
   2aff8:	ldp	x22, x21, [sp, #32]
   2affc:	ldp	x24, x23, [sp, #16]
   2b000:	ldp	x29, x30, [sp], #64
   2b004:	ret
   2b008:	mov	w11, #0x18                  	// #24
   2b00c:	madd	x22, x10, x11, x8
   2b010:	ldr	x0, [x22, #16]!
   2b014:	lsl	x8, x9, #1
   2b018:	add	x23, x8, #0x2
   2b01c:	lsl	x1, x23, #3
   2b020:	bl	a730 <realloc@plt>
   2b024:	cbz	x0, 2b03c <rpl_re_set_registers@@Base+0x6128>
   2b028:	str	x0, [x22]
   2b02c:	str	x23, [x21]
   2b030:	ldr	x9, [x20]
   2b034:	mov	x8, x0
   2b038:	b	2afe4 <rpl_re_set_registers@@Base+0x60d0>
   2b03c:	mov	w0, #0xc                   	// #12
   2b040:	b	2aff4 <rpl_re_set_registers@@Base+0x60e0>
   2b044:	sub	sp, sp, #0x80
   2b048:	stp	x29, x30, [sp, #32]
   2b04c:	stp	x28, x27, [sp, #48]
   2b050:	stp	x26, x25, [sp, #64]
   2b054:	stp	x24, x23, [sp, #80]
   2b058:	stp	x22, x21, [sp, #96]
   2b05c:	stp	x20, x19, [sp, #112]
   2b060:	mov	x24, x0
   2b064:	ldr	x8, [x24, #40]!
   2b068:	mov	x19, x0
   2b06c:	mov	x20, x1
   2b070:	mov	w21, w2
   2b074:	cmp	x8, x1
   2b078:	add	x29, sp, #0x20
   2b07c:	b.le	2b274 <rpl_re_set_registers@@Base+0x6360>
   2b080:	ldr	w8, [x19, #144]
   2b084:	cmp	w8, #0x2
   2b088:	b.lt	2b090 <rpl_re_set_registers@@Base+0x617c>  // b.tstop
   2b08c:	str	xzr, [x19, #32]
   2b090:	ldr	x9, [x19, #80]
   2b094:	ldr	x10, [x19, #96]
   2b098:	strb	wzr, [x19, #140]
   2b09c:	tst	w21, #0x1
   2b0a0:	str	x9, [x19, #88]
   2b0a4:	str	x10, [x19, #104]
   2b0a8:	stp	xzr, xzr, [x24]
   2b0ac:	str	xzr, [x24, #16]
   2b0b0:	ldrb	w9, [x19, #139]
   2b0b4:	mov	w10, #0x4                   	// #4
   2b0b8:	mov	w11, #0x6                   	// #6
   2b0bc:	mov	x8, xzr
   2b0c0:	csel	w10, w11, w10, eq  // eq = none
   2b0c4:	mov	x25, x20
   2b0c8:	str	w10, [x19, #112]
   2b0cc:	cbnz	w9, 2b0e0 <rpl_re_set_registers@@Base+0x61cc>
   2b0d0:	ldr	x9, [x19]
   2b0d4:	mov	x8, xzr
   2b0d8:	mov	x25, x20
   2b0dc:	str	x9, [x19, #8]
   2b0e0:	cbz	x25, 2b1f4 <rpl_re_set_registers@@Base+0x62e0>
   2b0e4:	ldr	x9, [x19, #56]
   2b0e8:	cmp	x25, x9
   2b0ec:	b.ge	2b280 <rpl_re_set_registers@@Base+0x636c>  // b.tcont
   2b0f0:	ldrb	w8, [x19, #140]
   2b0f4:	cbnz	w8, 2b3f4 <rpl_re_set_registers@@Base+0x64e0>
   2b0f8:	cmp	x25, #0x0
   2b0fc:	b.le	2b140 <rpl_re_set_registers@@Base+0x622c>
   2b100:	ldr	x9, [x19, #88]
   2b104:	sub	x8, x25, #0x1
   2b108:	cmp	x9, x8
   2b10c:	b.eq	2b4b4 <rpl_re_set_registers@@Base+0x65a0>  // b.none
   2b110:	ldr	w9, [x19, #144]
   2b114:	cmp	w9, #0x2
   2b118:	b.lt	2b148 <rpl_re_set_registers@@Base+0x6234>  // b.tstop
   2b11c:	ldr	x8, [x19, #16]
   2b120:	mov	x9, x25
   2b124:	sub	x8, x8, #0x4
   2b128:	ldr	w21, [x8, x9, lsl #2]
   2b12c:	cmn	w21, #0x1
   2b130:	b.ne	2b170 <rpl_re_set_registers@@Base+0x625c>  // b.any
   2b134:	sub	x9, x9, #0x1
   2b138:	cmp	x9, #0x0
   2b13c:	b.gt	2b128 <rpl_re_set_registers@@Base+0x6214>
   2b140:	ldr	w8, [x19, #112]
   2b144:	b	2b1a0 <rpl_re_set_registers@@Base+0x628c>
   2b148:	ldr	x9, [x19, #8]
   2b14c:	ldrb	w8, [x9, x8]
   2b150:	ldr	x9, [x19, #128]
   2b154:	lsr	x10, x8, #3
   2b158:	and	x10, x10, #0x18
   2b15c:	ldr	x9, [x9, x10]
   2b160:	lsr	x9, x9, x8
   2b164:	tbz	w9, #0, 2b194 <rpl_re_set_registers@@Base+0x6280>
   2b168:	mov	w8, #0x1                   	// #1
   2b16c:	b	2b1a0 <rpl_re_set_registers@@Base+0x628c>
   2b170:	ldrb	w8, [x19, #142]
   2b174:	cbnz	w8, 2b57c <rpl_re_set_registers@@Base+0x6668>
   2b178:	cmp	w21, #0xa
   2b17c:	b.ne	2b19c <rpl_re_set_registers@@Base+0x6288>  // b.any
   2b180:	ldrb	w8, [x19, #141]
   2b184:	cmp	w8, #0x0
   2b188:	cset	w8, ne  // ne = any
   2b18c:	lsl	w8, w8, #1
   2b190:	b	2b1a0 <rpl_re_set_registers@@Base+0x628c>
   2b194:	cmp	w8, #0xa
   2b198:	b.eq	2b180 <rpl_re_set_registers@@Base+0x626c>  // b.none
   2b19c:	mov	w8, wzr
   2b1a0:	ldr	w9, [x19, #144]
   2b1a4:	str	w8, [x19, #112]
   2b1a8:	cmp	w9, #0x2
   2b1ac:	b.lt	2b1c8 <rpl_re_set_registers@@Base+0x62b4>  // b.tstop
   2b1b0:	ldr	x8, [x19, #48]
   2b1b4:	ldr	x0, [x19, #16]
   2b1b8:	sub	x8, x8, x25
   2b1bc:	add	x1, x0, x25, lsl #2
   2b1c0:	lsl	x2, x8, #2
   2b1c4:	bl	a220 <memmove@plt>
   2b1c8:	ldrb	w8, [x19, #139]
   2b1cc:	cbnz	w8, 2b49c <rpl_re_set_registers@@Base+0x6588>
   2b1d0:	ldr	q0, [x19, #48]
   2b1d4:	dup	v1.2d, x25
   2b1d8:	sub	v0.2d, v0.2d, v1.2d
   2b1dc:	str	q0, [x19, #48]
   2b1e0:	ldrb	w8, [x19, #139]
   2b1e4:	cbnz	w8, 2b1f4 <rpl_re_set_registers@@Base+0x62e0>
   2b1e8:	ldr	x8, [x19, #8]
   2b1ec:	add	x8, x8, x25
   2b1f0:	str	x8, [x19, #8]
   2b1f4:	ldr	x8, [x19, #88]
   2b1f8:	ldr	x10, [x19, #104]
   2b1fc:	ldr	w11, [x19, #144]
   2b200:	str	x20, [x19, #40]
   2b204:	sub	x9, x8, x25
   2b208:	sub	x8, x10, x25
   2b20c:	cmp	w11, #0x2
   2b210:	str	x9, [x19, #88]
   2b214:	str	x8, [x19, #104]
   2b218:	b.lt	2b234 <rpl_re_set_registers@@Base+0x6320>  // b.tstop
   2b21c:	ldrb	w8, [x19, #136]
   2b220:	cbz	w8, 2b244 <rpl_re_set_registers@@Base+0x6330>
   2b224:	mov	x0, x19
   2b228:	bl	24fa8 <rpl_re_set_registers@@Base+0x94>
   2b22c:	cbnz	w0, 2b254 <rpl_re_set_registers@@Base+0x6340>
   2b230:	b	2b24c <rpl_re_set_registers@@Base+0x6338>
   2b234:	ldrb	w8, [x19, #139]
   2b238:	cbnz	w8, 2b4c4 <rpl_re_set_registers@@Base+0x65b0>
   2b23c:	str	x9, [x19, #48]
   2b240:	b	2b24c <rpl_re_set_registers@@Base+0x6338>
   2b244:	mov	x0, x19
   2b248:	bl	25658 <rpl_re_set_registers@@Base+0x744>
   2b24c:	mov	w0, wzr
   2b250:	str	xzr, [x19, #72]
   2b254:	ldp	x20, x19, [sp, #112]
   2b258:	ldp	x22, x21, [sp, #96]
   2b25c:	ldp	x24, x23, [sp, #80]
   2b260:	ldp	x26, x25, [sp, #64]
   2b264:	ldp	x28, x27, [sp, #48]
   2b268:	ldp	x29, x30, [sp, #32]
   2b26c:	add	sp, sp, #0x80
   2b270:	ret
   2b274:	sub	x25, x20, x8
   2b278:	cbnz	x25, 2b0e4 <rpl_re_set_registers@@Base+0x61d0>
   2b27c:	b	2b1f4 <rpl_re_set_registers@@Base+0x62e0>
   2b280:	ldrb	w10, [x19, #140]
   2b284:	ldr	x26, [x19, #48]
   2b288:	cbnz	w10, 2b82c <rpl_re_set_registers@@Base+0x6918>
   2b28c:	ldr	w10, [x19, #144]
   2b290:	str	xzr, [x19, #48]
   2b294:	cmp	w10, #0x2
   2b298:	b.lt	2b85c <rpl_re_set_registers@@Base+0x6948>  // b.tstop
   2b29c:	ldrb	w11, [x19, #137]
   2b2a0:	cbz	w11, 2b348 <rpl_re_set_registers@@Base+0x6434>
   2b2a4:	ldr	x13, [x19]
   2b2a8:	sub	x10, x25, x10
   2b2ac:	add	x11, x13, x8
   2b2b0:	add	x10, x11, x10
   2b2b4:	cmp	x10, x13
   2b2b8:	add	x22, x11, x25
   2b2bc:	csel	x12, x13, x10, cc  // cc = lo, ul, last
   2b2c0:	add	x10, x13, x25
   2b2c4:	add	x13, x10, x8
   2b2c8:	sub	x13, x13, #0x1
   2b2cc:	cmp	x13, x12
   2b2d0:	b.cc	2b348 <rpl_re_set_registers@@Base+0x6434>  // b.lo, b.ul, b.last
   2b2d4:	ldrb	w13, [x13]
   2b2d8:	sub	x10, x10, #0x1
   2b2dc:	and	w13, w13, #0xc0
   2b2e0:	cmp	w13, #0x80
   2b2e4:	b.eq	2b2c4 <rpl_re_set_registers@@Base+0x63b0>  // b.none
   2b2e8:	ldr	x12, [x19, #88]
   2b2ec:	ldr	x9, [x19, #120]
   2b2f0:	add	x23, x10, x8
   2b2f4:	mov	x1, x23
   2b2f8:	add	x11, x11, x12
   2b2fc:	sub	x2, x11, x23
   2b300:	cbnz	x9, 2b958 <rpl_re_set_registers@@Base+0x6a44>
   2b304:	sub	x0, x29, #0xc
   2b308:	sub	x3, x29, #0x8
   2b30c:	stur	xzr, [x29, #-8]
   2b310:	bl	a340 <rpl_mbrtowc@plt>
   2b314:	sub	x8, x22, x23
   2b318:	subs	x8, x0, x8
   2b31c:	mov	w9, #0xffffffff            	// #-1
   2b320:	b.cc	2b338 <rpl_re_set_registers@@Base+0x6424>  // b.lo, b.ul, b.last
   2b324:	cmn	x0, #0x3
   2b328:	b.hi	2b338 <rpl_re_set_registers@@Base+0x6424>  // b.pmore
   2b32c:	str	xzr, [x19, #32]
   2b330:	str	x8, [x19, #48]
   2b334:	ldur	w9, [x29, #-12]
   2b338:	cmn	w9, #0x1
   2b33c:	b.ne	2b3d0 <rpl_re_set_registers@@Base+0x64bc>  // b.any
   2b340:	ldr	x8, [x19, #40]
   2b344:	ldr	x9, [x19, #56]
   2b348:	add	x27, x9, x8
   2b34c:	subs	x8, x27, x20
   2b350:	b.ge	2b598 <rpl_re_set_registers@@Base+0x6684>  // b.tcont
   2b354:	add	x22, x19, #0x20
   2b358:	ldr	x8, [x19, #80]
   2b35c:	ldr	x9, [x19]
   2b360:	ldr	x28, [x19, #32]
   2b364:	sub	x0, x29, #0x8
   2b368:	sub	x23, x8, x27
   2b36c:	add	x1, x9, x27
   2b370:	mov	x2, x23
   2b374:	mov	x3, x22
   2b378:	bl	a340 <rpl_mbrtowc@plt>
   2b37c:	sub	x8, x0, #0x1
   2b380:	cmn	x8, #0x3
   2b384:	b.cs	2b39c <rpl_re_set_registers@@Base+0x6488>  // b.hs, b.nlast
   2b388:	ldur	w9, [x29, #-8]
   2b38c:	add	x27, x0, x27
   2b390:	subs	x8, x27, x20
   2b394:	b.lt	2b358 <rpl_re_set_registers@@Base+0x6444>  // b.tstop
   2b398:	b	2b3c4 <rpl_re_set_registers@@Base+0x64b0>
   2b39c:	mov	w9, wzr
   2b3a0:	cbz	x23, 2b3b0 <rpl_re_set_registers@@Base+0x649c>
   2b3a4:	cbz	x0, 2b3b0 <rpl_re_set_registers@@Base+0x649c>
   2b3a8:	ldr	x8, [x19]
   2b3ac:	ldrb	w9, [x8, x27]
   2b3b0:	str	x28, [x22]
   2b3b4:	mov	w0, #0x1                   	// #1
   2b3b8:	add	x27, x0, x27
   2b3bc:	subs	x8, x27, x20
   2b3c0:	b.lt	2b358 <rpl_re_set_registers@@Base+0x6444>  // b.tstop
   2b3c4:	cmn	w9, #0x1
   2b3c8:	str	x8, [x19, #48]
   2b3cc:	b.eq	2b59c <rpl_re_set_registers@@Base+0x6688>  // b.none
   2b3d0:	ldrb	w8, [x19, #142]
   2b3d4:	cbnz	w8, 2b934 <rpl_re_set_registers@@Base+0x6a20>
   2b3d8:	cmp	w9, #0xa
   2b3dc:	b.ne	2b804 <rpl_re_set_registers@@Base+0x68f0>  // b.any
   2b3e0:	ldrb	w8, [x19, #141]
   2b3e4:	cmp	w8, #0x0
   2b3e8:	cset	w8, ne  // ne = any
   2b3ec:	lsl	w8, w8, #1
   2b3f0:	b	2b808 <rpl_re_set_registers@@Base+0x68f4>
   2b3f4:	ldr	x10, [x19, #48]
   2b3f8:	ldr	x9, [x19, #24]
   2b3fc:	mov	x11, xzr
   2b400:	b	2b410 <rpl_re_set_registers@@Base+0x64fc>
   2b404:	cmp	x11, x13
   2b408:	mov	x10, x13
   2b40c:	b.ge	2b440 <rpl_re_set_registers@@Base+0x652c>  // b.tcont
   2b410:	add	x8, x11, x10
   2b414:	cmp	x8, #0x0
   2b418:	cinc	x8, x8, lt  // lt = tstop
   2b41c:	asr	x8, x8, #1
   2b420:	ldr	x12, [x9, x8, lsl #3]
   2b424:	mov	x13, x8
   2b428:	cmp	x12, x25
   2b42c:	b.gt	2b404 <rpl_re_set_registers@@Base+0x64f0>
   2b430:	b.ge	2b440 <rpl_re_set_registers@@Base+0x652c>  // b.tcont
   2b434:	add	x11, x8, #0x1
   2b438:	mov	x13, x10
   2b43c:	b	2b404 <rpl_re_set_registers@@Base+0x64f0>
   2b440:	cmp	x12, x25
   2b444:	cinc	x22, x8, lt  // lt = tstop
   2b448:	cset	w9, lt  // lt = tstop
   2b44c:	cmp	x22, #0x0
   2b450:	b.le	2b494 <rpl_re_set_registers@@Base+0x6580>
   2b454:	ldr	x11, [x19, #88]
   2b458:	sub	x10, x22, #0x1
   2b45c:	cmp	x11, x10
   2b460:	b.eq	2b8c4 <rpl_re_set_registers@@Base+0x69b0>  // b.none
   2b464:	ldr	w11, [x19, #144]
   2b468:	cmp	w11, #0x2
   2b46c:	b.lt	2b528 <rpl_re_set_registers@@Base+0x6614>  // b.tstop
   2b470:	ldr	x10, [x19, #16]
   2b474:	add	x8, x9, x8
   2b478:	sub	x9, x10, #0x4
   2b47c:	ldr	w21, [x9, x8, lsl #2]
   2b480:	cmn	w21, #0x1
   2b484:	b.ne	2b558 <rpl_re_set_registers@@Base+0x6644>  // b.any
   2b488:	sub	x8, x8, #0x1
   2b48c:	cmp	x8, #0x0
   2b490:	b.gt	2b47c <rpl_re_set_registers@@Base+0x6568>
   2b494:	ldr	w9, [x19, #112]
   2b498:	b	2b664 <rpl_re_set_registers@@Base+0x6750>
   2b49c:	ldr	x0, [x19, #8]
   2b4a0:	ldr	x8, [x19, #48]
   2b4a4:	add	x1, x0, x25
   2b4a8:	sub	x2, x8, x25
   2b4ac:	bl	a220 <memmove@plt>
   2b4b0:	b	2b1d0 <rpl_re_set_registers@@Base+0x62bc>
   2b4b4:	and	w8, w21, #0x2
   2b4b8:	mov	w9, #0xa                   	// #10
   2b4bc:	eor	w8, w8, w9
   2b4c0:	b	2b1a0 <rpl_re_set_registers@@Base+0x628c>
   2b4c4:	ldrb	w8, [x19, #136]
   2b4c8:	cbz	w8, 2b5e8 <rpl_re_set_registers@@Base+0x66d4>
   2b4cc:	ldr	x8, [x19, #64]
   2b4d0:	ldr	x21, [x19, #48]
   2b4d4:	cmp	x8, x9
   2b4d8:	csel	x22, x9, x8, gt
   2b4dc:	cmp	x21, x22
   2b4e0:	b.ge	2b550 <rpl_re_set_registers@@Base+0x663c>  // b.tcont
   2b4e4:	bl	a740 <__ctype_toupper_loc@plt>
   2b4e8:	ldr	x8, [x19]
   2b4ec:	ldr	x9, [x19, #120]
   2b4f0:	add	x8, x8, x20
   2b4f4:	ldrb	w8, [x8, x21]
   2b4f8:	cbnz	x9, 2b520 <rpl_re_set_registers@@Base+0x660c>
   2b4fc:	ldr	x9, [x0]
   2b500:	ldr	x10, [x19, #8]
   2b504:	ldr	w8, [x9, w8, uxtw #2]
   2b508:	strb	w8, [x10, x21]
   2b50c:	add	x21, x21, #0x1
   2b510:	cmp	x21, x22
   2b514:	b.ge	2b550 <rpl_re_set_registers@@Base+0x663c>  // b.tcont
   2b518:	ldr	x20, [x24]
   2b51c:	b	2b4e8 <rpl_re_set_registers@@Base+0x65d4>
   2b520:	ldrb	w8, [x9, x8]
   2b524:	b	2b4fc <rpl_re_set_registers@@Base+0x65e8>
   2b528:	ldr	x8, [x19, #8]
   2b52c:	ldr	x9, [x19, #128]
   2b530:	ldrb	w8, [x8, x10]
   2b534:	lsr	x10, x8, #3
   2b538:	and	x10, x10, #0x18
   2b53c:	ldr	x9, [x9, x10]
   2b540:	lsr	x9, x9, x8
   2b544:	tbz	w9, #0, 2b658 <rpl_re_set_registers@@Base+0x6744>
   2b548:	mov	w9, #0x1                   	// #1
   2b54c:	b	2b664 <rpl_re_set_registers@@Base+0x6750>
   2b550:	stp	x21, x21, [x19, #48]
   2b554:	b	2b24c <rpl_re_set_registers@@Base+0x6338>
   2b558:	ldrb	w8, [x19, #142]
   2b55c:	cbnz	w8, 2b918 <rpl_re_set_registers@@Base+0x6a04>
   2b560:	cmp	w21, #0xa
   2b564:	b.ne	2b660 <rpl_re_set_registers@@Base+0x674c>  // b.any
   2b568:	ldrb	w8, [x19, #141]
   2b56c:	cmp	w8, #0x0
   2b570:	cset	w8, ne  // ne = any
   2b574:	lsl	w9, w8, #1
   2b578:	b	2b664 <rpl_re_set_registers@@Base+0x6750>
   2b57c:	mov	w0, w21
   2b580:	bl	ac20 <iswalnum@plt>
   2b584:	cmp	w21, #0x5f
   2b588:	mov	w8, #0x1                   	// #1
   2b58c:	b.eq	2b1a0 <rpl_re_set_registers@@Base+0x628c>  // b.none
   2b590:	cbz	w0, 2b178 <rpl_re_set_registers@@Base+0x6264>
   2b594:	b	2b1a0 <rpl_re_set_registers@@Base+0x628c>
   2b598:	str	x8, [x19, #48]
   2b59c:	cmp	x26, #0x0
   2b5a0:	b.le	2b5e0 <rpl_re_set_registers@@Base+0x66cc>
   2b5a4:	ldr	x9, [x19, #88]
   2b5a8:	sub	x8, x26, #0x1
   2b5ac:	cmp	x9, x8
   2b5b0:	b.eq	2b908 <rpl_re_set_registers@@Base+0x69f4>  // b.none
   2b5b4:	ldr	w9, [x19, #144]
   2b5b8:	cmp	w9, #0x2
   2b5bc:	b.lt	2b7c0 <rpl_re_set_registers@@Base+0x68ac>  // b.tstop
   2b5c0:	ldr	x8, [x19, #16]
   2b5c4:	sub	x8, x8, #0x4
   2b5c8:	ldr	w21, [x8, x26, lsl #2]
   2b5cc:	cmn	w21, #0x1
   2b5d0:	b.ne	2b7f4 <rpl_re_set_registers@@Base+0x68e0>  // b.any
   2b5d4:	sub	x26, x26, #0x1
   2b5d8:	cmp	x26, #0x0
   2b5dc:	b.gt	2b5c8 <rpl_re_set_registers@@Base+0x66b4>
   2b5e0:	ldr	w8, [x19, #112]
   2b5e4:	b	2b808 <rpl_re_set_registers@@Base+0x68f4>
   2b5e8:	ldr	x10, [x19, #120]
   2b5ec:	cbz	x10, 2b24c <rpl_re_set_registers@@Base+0x6338>
   2b5f0:	ldr	x11, [x19, #64]
   2b5f4:	ldr	x8, [x19, #48]
   2b5f8:	cmp	x11, x9
   2b5fc:	csel	x9, x9, x11, gt
   2b600:	cmp	x8, x9
   2b604:	b.ge	2b650 <rpl_re_set_registers@@Base+0x673c>  // b.tcont
   2b608:	ldp	x11, x13, [x19]
   2b60c:	add	x12, x8, x20
   2b610:	ldrb	w11, [x11, x12]
   2b614:	ldrb	w10, [x10, x11]
   2b618:	strb	w10, [x13, x8]
   2b61c:	add	x8, x8, #0x1
   2b620:	cmp	x8, x9
   2b624:	b.ge	2b650 <rpl_re_set_registers@@Base+0x673c>  // b.tcont
   2b628:	ldr	x10, [x19, #40]
   2b62c:	ldp	x11, x13, [x19]
   2b630:	ldr	x12, [x19, #120]
   2b634:	add	x10, x11, x10
   2b638:	ldrb	w10, [x10, x8]
   2b63c:	ldrb	w10, [x12, x10]
   2b640:	strb	w10, [x13, x8]
   2b644:	add	x8, x8, #0x1
   2b648:	cmp	x8, x9
   2b64c:	b.lt	2b628 <rpl_re_set_registers@@Base+0x6714>  // b.tstop
   2b650:	stp	x8, x8, [x19, #48]
   2b654:	b	2b24c <rpl_re_set_registers@@Base+0x6338>
   2b658:	cmp	w8, #0xa
   2b65c:	b.eq	2b568 <rpl_re_set_registers@@Base+0x6654>  // b.none
   2b660:	mov	w9, wzr
   2b664:	ldr	x8, [x19, #48]
   2b668:	cmp	x22, x25
   2b66c:	str	w9, [x19, #112]
   2b670:	b.ne	2b6fc <rpl_re_set_registers@@Base+0x67e8>  // b.any
   2b674:	subs	x9, x8, x25
   2b678:	b.le	2b6fc <rpl_re_set_registers@@Base+0x67e8>
   2b67c:	ldr	x10, [x19, #24]
   2b680:	ldr	x10, [x10, x25, lsl #3]
   2b684:	cmp	x10, x25
   2b688:	b.ne	2b6fc <rpl_re_set_registers@@Base+0x67e8>  // b.any
   2b68c:	ldr	x0, [x19, #16]
   2b690:	lsl	x2, x9, #2
   2b694:	add	x1, x0, x25, lsl #2
   2b698:	bl	a220 <memmove@plt>
   2b69c:	ldr	x0, [x19, #8]
   2b6a0:	ldr	x8, [x19, #48]
   2b6a4:	add	x1, x0, x25
   2b6a8:	sub	x2, x8, x25
   2b6ac:	bl	a220 <memmove@plt>
   2b6b0:	ldr	q0, [x19, #48]
   2b6b4:	dup	v1.2d, x25
   2b6b8:	sub	v0.2d, v0.2d, v1.2d
   2b6bc:	fmov	x8, d0
   2b6c0:	cmp	x8, #0x1
   2b6c4:	str	q0, [x19, #48]
   2b6c8:	b.lt	2b1e0 <rpl_re_set_registers@@Base+0x62cc>  // b.tstop
   2b6cc:	ldr	x9, [x19, #24]
   2b6d0:	mov	x8, xzr
   2b6d4:	add	x10, x9, x25, lsl #3
   2b6d8:	lsl	x11, x8, #3
   2b6dc:	ldr	x12, [x10, x11]
   2b6e0:	add	x8, x8, #0x1
   2b6e4:	sub	x12, x12, x25
   2b6e8:	str	x12, [x9, x11]
   2b6ec:	ldr	x11, [x19, #48]
   2b6f0:	cmp	x8, x11
   2b6f4:	b.lt	2b6d8 <rpl_re_set_registers@@Base+0x67c4>  // b.tstop
   2b6f8:	b	2b1e0 <rpl_re_set_registers@@Base+0x62cc>
   2b6fc:	ldr	x9, [x19, #80]
   2b700:	ldr	x10, [x19, #96]
   2b704:	sub	x11, x25, x20
   2b708:	strb	wzr, [x19, #140]
   2b70c:	add	x9, x11, x9
   2b710:	add	x10, x11, x10
   2b714:	str	x9, [x19, #88]
   2b718:	str	x10, [x19, #104]
   2b71c:	mov	x9, x22
   2b720:	subs	x22, x22, #0x1
   2b724:	b.lt	2b73c <rpl_re_set_registers@@Base+0x6828>  // b.tstop
   2b728:	ldr	x10, [x19, #24]
   2b72c:	add	x10, x10, x9, lsl #3
   2b730:	ldur	x10, [x10, #-8]
   2b734:	cmp	x10, x25
   2b738:	b.eq	2b71c <rpl_re_set_registers@@Base+0x6808>  // b.none
   2b73c:	cmp	x9, x8
   2b740:	b.ge	2b764 <rpl_re_set_registers@@Base+0x6850>  // b.tcont
   2b744:	ldr	x10, [x19, #16]
   2b748:	ldr	w11, [x10, x9, lsl #2]
   2b74c:	cmn	w11, #0x1
   2b750:	b.ne	2b764 <rpl_re_set_registers@@Base+0x6850>  // b.any
   2b754:	add	x9, x9, #0x1
   2b758:	cmp	x8, x9
   2b75c:	b.ne	2b748 <rpl_re_set_registers@@Base+0x6834>  // b.any
   2b760:	b	2b76c <rpl_re_set_registers@@Base+0x6858>
   2b764:	cmp	x9, x8
   2b768:	b.ne	2b778 <rpl_re_set_registers@@Base+0x6864>  // b.any
   2b76c:	mov	x8, xzr
   2b770:	stp	xzr, xzr, [x19, #48]
   2b774:	b	2b1e0 <rpl_re_set_registers@@Base+0x62cc>
   2b778:	ldr	x8, [x19, #24]
   2b77c:	ldr	x8, [x8, x9, lsl #3]
   2b780:	subs	x21, x8, x25
   2b784:	str	x21, [x19, #48]
   2b788:	b.eq	2b7e8 <rpl_re_set_registers@@Base+0x68d4>  // b.none
   2b78c:	cmp	x21, #0x1
   2b790:	b.lt	2b7a4 <rpl_re_set_registers@@Base+0x6890>  // b.tstop
   2b794:	ldr	x0, [x19, #16]
   2b798:	lsl	x2, x21, #2
   2b79c:	mov	w1, #0xff                  	// #255
   2b7a0:	bl	a640 <memset@plt>
   2b7a4:	ldr	x0, [x19, #8]
   2b7a8:	mov	w1, #0xff                  	// #255
   2b7ac:	mov	x2, x21
   2b7b0:	bl	a640 <memset@plt>
   2b7b4:	ldr	x8, [x19, #48]
   2b7b8:	str	x8, [x19, #56]
   2b7bc:	b	2b1e0 <rpl_re_set_registers@@Base+0x62cc>
   2b7c0:	ldr	x9, [x19, #8]
   2b7c4:	ldrb	w8, [x9, x8]
   2b7c8:	ldr	x9, [x19, #128]
   2b7cc:	lsr	x10, x8, #3
   2b7d0:	and	x10, x10, #0x18
   2b7d4:	ldr	x9, [x9, x10]
   2b7d8:	lsr	x9, x9, x8
   2b7dc:	tbz	w9, #0, 2b820 <rpl_re_set_registers@@Base+0x690c>
   2b7e0:	mov	w8, #0x1                   	// #1
   2b7e4:	b	2b808 <rpl_re_set_registers@@Base+0x68f4>
   2b7e8:	mov	x8, xzr
   2b7ec:	str	xzr, [x19, #56]
   2b7f0:	b	2b1e0 <rpl_re_set_registers@@Base+0x62cc>
   2b7f4:	ldrb	w8, [x19, #142]
   2b7f8:	cbnz	w8, 2b99c <rpl_re_set_registers@@Base+0x6a88>
   2b7fc:	cmp	w21, #0xa
   2b800:	b.eq	2b3e0 <rpl_re_set_registers@@Base+0x64cc>  // b.none
   2b804:	mov	w8, wzr
   2b808:	ldr	x21, [x19, #48]
   2b80c:	str	w8, [x19, #112]
   2b810:	cbnz	x21, 2b8d4 <rpl_re_set_registers@@Base+0x69c0>
   2b814:	ldr	x8, [x19, #48]
   2b818:	str	x8, [x19, #56]
   2b81c:	b	2b1e0 <rpl_re_set_registers@@Base+0x62cc>
   2b820:	cmp	w8, #0xa
   2b824:	b.ne	2b804 <rpl_re_set_registers@@Base+0x68f0>  // b.any
   2b828:	b	2b3e0 <rpl_re_set_registers@@Base+0x64cc>
   2b82c:	ldr	x10, [x19, #80]
   2b830:	ldr	x11, [x19, #96]
   2b834:	sub	x12, x25, x20
   2b838:	strb	wzr, [x19, #140]
   2b83c:	add	x10, x12, x10
   2b840:	add	x11, x12, x11
   2b844:	str	x10, [x19, #88]
   2b848:	str	x11, [x19, #104]
   2b84c:	ldr	w10, [x19, #144]
   2b850:	str	xzr, [x19, #48]
   2b854:	cmp	w10, #0x2
   2b858:	b.ge	2b29c <rpl_re_set_registers@@Base+0x6388>  // b.tcont
   2b85c:	ldr	x9, [x19]
   2b860:	add	x8, x25, x8
   2b864:	add	x8, x8, x9
   2b868:	ldr	x9, [x19, #120]
   2b86c:	ldurb	w8, [x8, #-1]
   2b870:	str	xzr, [x19, #56]
   2b874:	cbz	x9, 2b87c <rpl_re_set_registers@@Base+0x6968>
   2b878:	ldrb	w8, [x9, x8]
   2b87c:	ldr	x9, [x19, #128]
   2b880:	lsr	x10, x8, #3
   2b884:	and	x10, x10, #0x18
   2b888:	ldr	x9, [x9, x10]
   2b88c:	lsr	x9, x9, x8
   2b890:	tbz	w9, #0, 2b89c <rpl_re_set_registers@@Base+0x6988>
   2b894:	mov	w8, #0x1                   	// #1
   2b898:	b	2b8bc <rpl_re_set_registers@@Base+0x69a8>
   2b89c:	cmp	w8, #0xa
   2b8a0:	b.ne	2b8b8 <rpl_re_set_registers@@Base+0x69a4>  // b.any
   2b8a4:	ldrb	w8, [x19, #141]
   2b8a8:	cmp	w8, #0x0
   2b8ac:	cset	w8, ne  // ne = any
   2b8b0:	lsl	w8, w8, #1
   2b8b4:	b	2b8bc <rpl_re_set_registers@@Base+0x69a8>
   2b8b8:	mov	w8, wzr
   2b8bc:	str	w8, [x19, #112]
   2b8c0:	b	2b1e0 <rpl_re_set_registers@@Base+0x62cc>
   2b8c4:	and	w8, w21, #0x2
   2b8c8:	mov	w9, #0xa                   	// #10
   2b8cc:	eor	w9, w8, w9
   2b8d0:	b	2b664 <rpl_re_set_registers@@Base+0x6750>
   2b8d4:	cmp	x21, #0x1
   2b8d8:	b.lt	2b8ec <rpl_re_set_registers@@Base+0x69d8>  // b.tstop
   2b8dc:	ldr	x0, [x19, #16]
   2b8e0:	lsl	x2, x21, #2
   2b8e4:	mov	w1, #0xff                  	// #255
   2b8e8:	bl	a640 <memset@plt>
   2b8ec:	ldrb	w8, [x19, #139]
   2b8f0:	cbz	w8, 2b814 <rpl_re_set_registers@@Base+0x6900>
   2b8f4:	ldr	x0, [x19, #8]
   2b8f8:	mov	w1, #0xff                  	// #255
   2b8fc:	mov	x2, x21
   2b900:	bl	a640 <memset@plt>
   2b904:	b	2b814 <rpl_re_set_registers@@Base+0x6900>
   2b908:	and	w8, w21, #0x2
   2b90c:	mov	w9, #0xa                   	// #10
   2b910:	eor	w8, w8, w9
   2b914:	b	2b808 <rpl_re_set_registers@@Base+0x68f4>
   2b918:	mov	w0, w21
   2b91c:	bl	ac20 <iswalnum@plt>
   2b920:	cmp	w21, #0x5f
   2b924:	mov	w9, #0x1                   	// #1
   2b928:	b.eq	2b664 <rpl_re_set_registers@@Base+0x6750>  // b.none
   2b92c:	cbz	w0, 2b560 <rpl_re_set_registers@@Base+0x664c>
   2b930:	b	2b664 <rpl_re_set_registers@@Base+0x6750>
   2b934:	mov	w0, w9
   2b938:	mov	w21, w9
   2b93c:	bl	ac20 <iswalnum@plt>
   2b940:	cmp	w21, #0x5f
   2b944:	mov	w8, #0x1                   	// #1
   2b948:	b.eq	2b808 <rpl_re_set_registers@@Base+0x68f4>  // b.none
   2b94c:	mov	w9, w21
   2b950:	cbz	w0, 2b3d8 <rpl_re_set_registers@@Base+0x64c4>
   2b954:	b	2b808 <rpl_re_set_registers@@Base+0x68f4>
   2b958:	cmp	x2, #0x6
   2b95c:	mov	w11, #0x6                   	// #6
   2b960:	csel	x11, x2, x11, lt  // lt = tstop
   2b964:	cmp	w11, #0x1
   2b968:	add	x1, sp, #0xc
   2b96c:	b.lt	2b304 <rpl_re_set_registers@@Base+0x63f0>  // b.tstop
   2b970:	sxtw	x11, w11
   2b974:	sub	x12, x1, #0x1
   2b978:	add	x13, x8, x11
   2b97c:	add	x13, x10, x13
   2b980:	ldurb	w13, [x13, #-1]
   2b984:	add	x1, sp, #0xc
   2b988:	ldrb	w13, [x9, x13]
   2b98c:	strb	w13, [x12, x11]
   2b990:	subs	x11, x11, #0x1
   2b994:	b.gt	2b978 <rpl_re_set_registers@@Base+0x6a64>
   2b998:	b	2b304 <rpl_re_set_registers@@Base+0x63f0>
   2b99c:	mov	w0, w21
   2b9a0:	bl	ac20 <iswalnum@plt>
   2b9a4:	cmp	w21, #0x5f
   2b9a8:	mov	w8, #0x1                   	// #1
   2b9ac:	b.eq	2b808 <rpl_re_set_registers@@Base+0x68f4>  // b.none
   2b9b0:	cbz	w0, 2b7fc <rpl_re_set_registers@@Base+0x68e8>
   2b9b4:	b	2b808 <rpl_re_set_registers@@Base+0x68f4>
   2b9b8:	stp	x29, x30, [sp, #-32]!
   2b9bc:	stp	x20, x19, [sp, #16]
   2b9c0:	mov	x8, x2
   2b9c4:	ldr	w2, [x0, #160]
   2b9c8:	mov	x20, x1
   2b9cc:	mov	x1, x8
   2b9d0:	mov	x29, sp
   2b9d4:	mov	x19, x0
   2b9d8:	bl	2c678 <rpl_re_set_registers@@Base+0x7764>
   2b9dc:	ldr	x9, [x20, #16]
   2b9e0:	cmp	x9, #0x1
   2b9e4:	b.lt	2bb0c <rpl_re_set_registers@@Base+0x6bf8>  // b.tstop
   2b9e8:	ldr	x8, [x19, #152]
   2b9ec:	ldr	x10, [x20, #24]
   2b9f0:	mov	x12, xzr
   2b9f4:	ldr	x11, [x8]
   2b9f8:	tbnz	w0, #0, 2ba84 <rpl_re_set_registers@@Base+0x6b70>
   2b9fc:	tbnz	w0, #1, 2ba54 <rpl_re_set_registers@@Base+0x6b40>
   2ba00:	mov	w13, #0x2400                	// #9216
   2ba04:	b	2ba14 <rpl_re_set_registers@@Base+0x6b00>
   2ba08:	add	x12, x12, #0x1
   2ba0c:	cmp	x12, x9
   2ba10:	b.ge	2bb0c <rpl_re_set_registers@@Base+0x6bf8>  // b.tcont
   2ba14:	ldr	x8, [x10, x12, lsl #3]
   2ba18:	add	x14, x11, x8, lsl #4
   2ba1c:	ldr	w14, [x14, #8]
   2ba20:	and	w15, w14, #0xff
   2ba24:	cmp	w15, #0x2
   2ba28:	b.ne	2ba08 <rpl_re_set_registers@@Base+0x6af4>  // b.any
   2ba2c:	tst	w14, #0x3ff00
   2ba30:	b.eq	2bb10 <rpl_re_set_registers@@Base+0x6bfc>  // b.none
   2ba34:	tst	w14, w13
   2ba38:	b.ne	2ba08 <rpl_re_set_registers@@Base+0x6af4>  // b.any
   2ba3c:	tbnz	w0, #3, 2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2ba40:	tbnz	w14, #15, 2ba08 <rpl_re_set_registers@@Base+0x6af4>
   2ba44:	b	2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2ba48:	add	x12, x12, #0x1
   2ba4c:	cmp	x12, x9
   2ba50:	b.ge	2bb0c <rpl_re_set_registers@@Base+0x6bf8>  // b.tcont
   2ba54:	ldr	x8, [x10, x12, lsl #3]
   2ba58:	add	x13, x11, x8, lsl #4
   2ba5c:	ldr	w13, [x13, #8]
   2ba60:	and	w14, w13, #0xff
   2ba64:	cmp	w14, #0x2
   2ba68:	b.ne	2ba48 <rpl_re_set_registers@@Base+0x6b34>  // b.any
   2ba6c:	tst	w13, #0x3ff00
   2ba70:	b.eq	2bb10 <rpl_re_set_registers@@Base+0x6bfc>  // b.none
   2ba74:	tbnz	w13, #10, 2ba48 <rpl_re_set_registers@@Base+0x6b34>
   2ba78:	tbnz	w0, #3, 2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2ba7c:	tbnz	w13, #15, 2ba48 <rpl_re_set_registers@@Base+0x6b34>
   2ba80:	b	2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2ba84:	tbnz	w0, #1, 2badc <rpl_re_set_registers@@Base+0x6bc8>
   2ba88:	mov	w13, #0x2800                	// #10240
   2ba8c:	b	2ba9c <rpl_re_set_registers@@Base+0x6b88>
   2ba90:	add	x12, x12, #0x1
   2ba94:	cmp	x12, x9
   2ba98:	b.ge	2bb0c <rpl_re_set_registers@@Base+0x6bf8>  // b.tcont
   2ba9c:	ldr	x8, [x10, x12, lsl #3]
   2baa0:	add	x14, x11, x8, lsl #4
   2baa4:	ldr	w14, [x14, #8]
   2baa8:	and	w15, w14, #0xff
   2baac:	cmp	w15, #0x2
   2bab0:	b.ne	2ba90 <rpl_re_set_registers@@Base+0x6b7c>  // b.any
   2bab4:	tst	w14, #0x3ff00
   2bab8:	b.eq	2bb10 <rpl_re_set_registers@@Base+0x6bfc>  // b.none
   2babc:	tst	w14, w13
   2bac0:	b.ne	2ba90 <rpl_re_set_registers@@Base+0x6b7c>  // b.any
   2bac4:	tbnz	w0, #3, 2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2bac8:	tbnz	w14, #15, 2ba90 <rpl_re_set_registers@@Base+0x6b7c>
   2bacc:	b	2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2bad0:	add	x12, x12, #0x1
   2bad4:	cmp	x12, x9
   2bad8:	b.ge	2bb0c <rpl_re_set_registers@@Base+0x6bf8>  // b.tcont
   2badc:	ldr	x8, [x10, x12, lsl #3]
   2bae0:	add	x13, x11, x8, lsl #4
   2bae4:	ldr	w13, [x13, #8]
   2bae8:	and	w14, w13, #0xff
   2baec:	cmp	w14, #0x2
   2baf0:	b.ne	2bad0 <rpl_re_set_registers@@Base+0x6bbc>  // b.any
   2baf4:	tst	w13, #0x3ff00
   2baf8:	b.eq	2bb10 <rpl_re_set_registers@@Base+0x6bfc>  // b.none
   2bafc:	tbnz	w13, #11, 2bad0 <rpl_re_set_registers@@Base+0x6bbc>
   2bb00:	tbnz	w0, #3, 2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2bb04:	tbnz	w13, #15, 2bad0 <rpl_re_set_registers@@Base+0x6bbc>
   2bb08:	b	2bb10 <rpl_re_set_registers@@Base+0x6bfc>
   2bb0c:	mov	x8, xzr
   2bb10:	ldp	x20, x19, [sp, #16]
   2bb14:	mov	x0, x8
   2bb18:	ldp	x29, x30, [sp], #32
   2bb1c:	ret
   2bb20:	stp	x29, x30, [sp, #-64]!
   2bb24:	stp	x22, x21, [sp, #32]
   2bb28:	stp	x20, x19, [sp, #48]
   2bb2c:	ldr	x8, [x0, #232]
   2bb30:	mov	x19, x0
   2bb34:	str	x23, [sp, #16]
   2bb38:	mov	x29, sp
   2bb3c:	cmp	x8, #0x1
   2bb40:	b.lt	2bbc8 <rpl_re_set_registers@@Base+0x6cb4>  // b.tstop
   2bb44:	mov	x22, xzr
   2bb48:	b	2bb64 <rpl_re_set_registers@@Base+0x6c50>
   2bb4c:	mov	x0, x20
   2bb50:	bl	a970 <free@plt>
   2bb54:	ldr	x8, [x19, #232]
   2bb58:	add	x22, x22, #0x1
   2bb5c:	cmp	x22, x8
   2bb60:	b.ge	2bbc8 <rpl_re_set_registers@@Base+0x6cb4>  // b.tcont
   2bb64:	ldr	x8, [x19, #248]
   2bb68:	ldr	x20, [x8, x22, lsl #3]
   2bb6c:	ldr	x8, [x20, #32]
   2bb70:	cmp	x8, #0x1
   2bb74:	b.lt	2bba4 <rpl_re_set_registers@@Base+0x6c90>  // b.tstop
   2bb78:	mov	x23, xzr
   2bb7c:	ldr	x8, [x20, #40]
   2bb80:	ldr	x21, [x8, x23, lsl #3]
   2bb84:	ldr	x0, [x21, #32]
   2bb88:	bl	a970 <free@plt>
   2bb8c:	mov	x0, x21
   2bb90:	bl	a970 <free@plt>
   2bb94:	ldr	x8, [x20, #32]
   2bb98:	add	x23, x23, #0x1
   2bb9c:	cmp	x23, x8
   2bba0:	b.lt	2bb7c <rpl_re_set_registers@@Base+0x6c68>  // b.tstop
   2bba4:	ldr	x0, [x20, #40]
   2bba8:	bl	a970 <free@plt>
   2bbac:	ldr	x8, [x20, #16]
   2bbb0:	cbz	x8, 2bb4c <rpl_re_set_registers@@Base+0x6c38>
   2bbb4:	ldr	x0, [x8, #16]
   2bbb8:	bl	a970 <free@plt>
   2bbbc:	ldr	x0, [x20, #16]
   2bbc0:	bl	a970 <free@plt>
   2bbc4:	b	2bb4c <rpl_re_set_registers@@Base+0x6c38>
   2bbc8:	str	xzr, [x19, #232]
   2bbcc:	str	xzr, [x19, #200]
   2bbd0:	ldp	x20, x19, [sp, #48]
   2bbd4:	ldp	x22, x21, [sp, #32]
   2bbd8:	ldr	x23, [sp, #16]
   2bbdc:	ldp	x29, x30, [sp], #64
   2bbe0:	ret
   2bbe4:	stp	x29, x30, [sp, #-96]!
   2bbe8:	stp	x28, x27, [sp, #16]
   2bbec:	stp	x26, x25, [sp, #32]
   2bbf0:	stp	x24, x23, [sp, #48]
   2bbf4:	stp	x22, x21, [sp, #64]
   2bbf8:	stp	x20, x19, [sp, #80]
   2bbfc:	mov	x29, sp
   2bc00:	sub	sp, sp, #0x60
   2bc04:	adrp	x8, 34000 <vasnprintf@@Base+0x3474>
   2bc08:	add	x8, x8, #0x4e0
   2bc0c:	ldr	q0, [x8]
   2bc10:	ldr	x8, [x8, #16]
   2bc14:	mov	x20, x3
   2bc18:	mov	x21, x2
   2bc1c:	mov	x22, x1
   2bc20:	mov	x19, x0
   2bc24:	stur	q0, [x29, #-32]
   2bc28:	stur	x8, [x29, #-16]
   2bc2c:	tbz	w4, #0, 2bc6c <rpl_re_set_registers@@Base+0x6d58>
   2bc30:	mov	w0, #0x60                  	// #96
   2bc34:	bl	a550 <malloc@plt>
   2bc38:	stur	x0, [x29, #-16]
   2bc3c:	cbz	x0, 2c58c <rpl_re_set_registers@@Base+0x7678>
   2bc40:	sub	x23, x29, #0x20
   2bc44:	ldr	x24, [x19, #144]
   2bc48:	lsl	x25, x21, #4
   2bc4c:	cmp	x25, #0xfbf
   2bc50:	b.ls	2bc80 <rpl_re_set_registers@@Base+0x6d6c>  // b.plast
   2bc54:	mov	x0, x25
   2bc58:	bl	a550 <malloc@plt>
   2bc5c:	cbz	x0, 2c538 <rpl_re_set_registers@@Base+0x7624>
   2bc60:	mov	w8, #0x1                   	// #1
   2bc64:	stur	w8, [x29, #-60]
   2bc68:	b	2bc98 <rpl_re_set_registers@@Base+0x6d84>
   2bc6c:	mov	x23, xzr
   2bc70:	ldr	x24, [x19, #144]
   2bc74:	lsl	x25, x21, #4
   2bc78:	cmp	x25, #0xfbf
   2bc7c:	b.hi	2bc54 <rpl_re_set_registers@@Base+0x6d40>  // b.pmore
   2bc80:	add	x9, x25, #0xf
   2bc84:	mov	x8, sp
   2bc88:	and	x9, x9, #0xfffffffffffffff0
   2bc8c:	sub	x0, x8, x9
   2bc90:	mov	sp, x0
   2bc94:	stur	wzr, [x29, #-60]
   2bc98:	mov	x1, x20
   2bc9c:	mov	x2, x25
   2bca0:	stur	x0, [x29, #-56]
   2bca4:	bl	a210 <memcpy@plt>
   2bca8:	ldp	x26, x8, [x20]
   2bcac:	cmp	x26, x8
   2bcb0:	b.le	2bd24 <rpl_re_set_registers@@Base+0x6e10>
   2bcb4:	mov	x25, xzr
   2bcb8:	mov	x0, x25
   2bcbc:	bl	a970 <free@plt>
   2bcc0:	ldur	w8, [x29, #-60]
   2bcc4:	cbz	w8, 2bcd0 <rpl_re_set_registers@@Base+0x6dbc>
   2bcc8:	ldur	x0, [x29, #-56]
   2bccc:	bl	a970 <free@plt>
   2bcd0:	cbz	x23, 2c530 <rpl_re_set_registers@@Base+0x761c>
   2bcd4:	ldr	x8, [x23]
   2bcd8:	ldr	x0, [x23, #16]
   2bcdc:	cmp	x8, #0x1
   2bce0:	b.lt	2c52c <rpl_re_set_registers@@Base+0x7618>  // b.tstop
   2bce4:	mov	x19, xzr
   2bce8:	mov	x20, xzr
   2bcec:	add	x8, x0, x19
   2bcf0:	ldr	x0, [x8, #40]
   2bcf4:	bl	a970 <free@plt>
   2bcf8:	ldr	x8, [x23, #16]
   2bcfc:	add	x8, x8, x19
   2bd00:	ldr	x0, [x8, #16]
   2bd04:	bl	a970 <free@plt>
   2bd08:	ldr	x8, [x23]
   2bd0c:	ldr	x0, [x23, #16]
   2bd10:	add	x20, x20, #0x1
   2bd14:	add	x19, x19, #0x30
   2bd18:	cmp	x20, x8
   2bd1c:	b.lt	2bcec <rpl_re_set_registers@@Base+0x6dd8>  // b.tstop
   2bd20:	b	2c52c <rpl_re_set_registers@@Base+0x7618>
   2bd24:	stp	x25, x19, [x29, #-48]
   2bd28:	mov	x25, xzr
   2bd2c:	mov	x1, xzr
   2bd30:	mov	x18, xzr
   2bd34:	add	x8, x20, #0x8
   2bd38:	stur	x8, [x29, #-72]
   2bd3c:	b	2bd5c <rpl_re_set_registers@@Base+0x6e48>
   2bd40:	mov	x1, xzr
   2bd44:	tbnz	x27, #63, 2c310 <rpl_re_set_registers@@Base+0x73fc>
   2bd48:	ldr	x8, [x20, #8]
   2bd4c:	ldur	x19, [x29, #-40]
   2bd50:	mov	x24, x27
   2bd54:	cmp	x26, x8
   2bd58:	b.gt	2bcb8 <rpl_re_set_registers@@Base+0x6da4>
   2bd5c:	ldr	x8, [x19]
   2bd60:	add	x8, x8, x24, lsl #4
   2bd64:	ldr	w9, [x8, #8]
   2bd68:	and	w10, w9, #0xff
   2bd6c:	cmp	w10, #0x9
   2bd70:	b.eq	2bda8 <rpl_re_set_registers@@Base+0x6e94>  // b.none
   2bd74:	cmp	w10, #0x8
   2bd78:	b.ne	2be14 <rpl_re_set_registers@@Base+0x6f00>  // b.any
   2bd7c:	ldr	x8, [x8]
   2bd80:	add	x8, x8, #0x1
   2bd84:	cmp	x8, x21
   2bd88:	b.ge	2be14 <rpl_re_set_registers@@Base+0x6f00>  // b.tcont
   2bd8c:	add	x8, x20, x8, lsl #4
   2bd90:	mov	x9, #0xffffffffffffffff    	// #-1
   2bd94:	stp	x26, x9, [x8]
   2bd98:	ldr	x8, [x20, #8]
   2bd9c:	cmp	x26, x8
   2bda0:	b.eq	2be20 <rpl_re_set_registers@@Base+0x6f0c>  // b.none
   2bda4:	b	2bed0 <rpl_re_set_registers@@Base+0x6fbc>
   2bda8:	ldr	x8, [x8]
   2bdac:	add	x8, x8, #0x1
   2bdb0:	cmp	x8, x21
   2bdb4:	b.ge	2be14 <rpl_re_set_registers@@Base+0x6f00>  // b.tcont
   2bdb8:	lsl	x10, x8, #4
   2bdbc:	ldr	x11, [x20, x10]
   2bdc0:	cmp	x11, x26
   2bdc4:	b.ge	2bde0 <rpl_re_set_registers@@Base+0x6ecc>  // b.tcont
   2bdc8:	ldur	x0, [x29, #-56]
   2bdcc:	add	x8, x20, x8, lsl #4
   2bdd0:	str	x26, [x8, #8]
   2bdd4:	mov	x27, x1
   2bdd8:	mov	x1, x20
   2bddc:	b	2be00 <rpl_re_set_registers@@Base+0x6eec>
   2bde0:	tbz	w9, #19, 2c16c <rpl_re_set_registers@@Base+0x7258>
   2bde4:	ldur	x9, [x29, #-56]
   2bde8:	ldr	x9, [x9, x10]
   2bdec:	cmn	x9, #0x1
   2bdf0:	b.eq	2c16c <rpl_re_set_registers@@Base+0x7258>  // b.none
   2bdf4:	mov	x27, x1
   2bdf8:	ldur	x1, [x29, #-56]
   2bdfc:	mov	x0, x20
   2be00:	ldur	x2, [x29, #-48]
   2be04:	mov	x19, x18
   2be08:	bl	a210 <memcpy@plt>
   2be0c:	mov	x1, x27
   2be10:	mov	x18, x19
   2be14:	ldr	x8, [x20, #8]
   2be18:	cmp	x26, x8
   2be1c:	b.ne	2bed0 <rpl_re_set_registers@@Base+0x6fbc>  // b.any
   2be20:	ldr	x8, [x22, #176]
   2be24:	cmp	x24, x8
   2be28:	b.ne	2bed0 <rpl_re_set_registers@@Base+0x6fbc>  // b.any
   2be2c:	cbz	x23, 2c5d0 <rpl_re_set_registers@@Base+0x76bc>
   2be30:	mov	x8, xzr
   2be34:	cbz	x21, 2be64 <rpl_re_set_registers@@Base+0x6f50>
   2be38:	ldur	x9, [x29, #-72]
   2be3c:	b	2be50 <rpl_re_set_registers@@Base+0x6f3c>
   2be40:	add	x8, x8, #0x1
   2be44:	cmp	x21, x8
   2be48:	add	x9, x9, #0x10
   2be4c:	b.eq	2c4c8 <rpl_re_set_registers@@Base+0x75b4>  // b.none
   2be50:	ldur	x10, [x9, #-8]
   2be54:	tbnz	x10, #63, 2be40 <rpl_re_set_registers@@Base+0x6f2c>
   2be58:	ldr	x10, [x9]
   2be5c:	cmn	x10, #0x1
   2be60:	b.ne	2be40 <rpl_re_set_registers@@Base+0x6f2c>  // b.any
   2be64:	cmp	x8, x21
   2be68:	b.eq	2c4c8 <rpl_re_set_registers@@Base+0x75b4>  // b.none
   2be6c:	ldr	x9, [x23]
   2be70:	sub	x8, x9, #0x1
   2be74:	cmp	x9, #0x0
   2be78:	str	x8, [x23]
   2be7c:	b.le	2c658 <rpl_re_set_registers@@Base+0x7744>
   2be80:	ldr	x9, [x23, #16]
   2be84:	add	x8, x8, x8, lsl #1
   2be88:	lsl	x19, x8, #4
   2be8c:	ldur	x2, [x29, #-48]
   2be90:	add	x8, x9, x19
   2be94:	ldr	x1, [x8, #16]
   2be98:	ldr	x26, [x8]
   2be9c:	mov	x0, x20
   2bea0:	bl	a210 <memcpy@plt>
   2bea4:	mov	x0, x25
   2bea8:	bl	a970 <free@plt>
   2beac:	ldr	x8, [x23, #16]
   2beb0:	add	x8, x8, x19
   2beb4:	ldr	x0, [x8, #16]
   2beb8:	bl	a970 <free@plt>
   2bebc:	ldr	x8, [x23, #16]
   2bec0:	add	x8, x8, x19
   2bec4:	ldp	x18, x1, [x8, #24]
   2bec8:	ldr	x25, [x8, #40]
   2becc:	ldr	x24, [x8, #8]
   2bed0:	ldr	x28, [x22, #152]
   2bed4:	ldr	x8, [x28]
   2bed8:	add	x9, x8, x24, lsl #4
   2bedc:	ldr	w9, [x9, #8]
   2bee0:	tbnz	w9, #3, 2bf60 <rpl_re_set_registers@@Base+0x704c>
   2bee4:	tbnz	w9, #20, 2bf7c <rpl_re_set_registers@@Base+0x7068>
   2bee8:	and	w9, w9, #0xff
   2beec:	cmp	w9, #0x4
   2bef0:	b.ne	2bfa0 <rpl_re_set_registers@@Base+0x708c>  // b.any
   2bef4:	lsl	x9, x24, #4
   2bef8:	ldr	x8, [x8, x9]
   2befc:	add	x8, x20, x8, lsl #4
   2bf00:	ldp	x8, x9, [x8, #16]
   2bf04:	sub	x19, x9, x8
   2bf08:	cbz	x23, 2c18c <rpl_re_set_registers@@Base+0x7278>
   2bf0c:	cmn	x9, #0x1
   2bf10:	b.eq	2c31c <rpl_re_set_registers@@Base+0x7408>  // b.none
   2bf14:	cmn	x8, #0x1
   2bf18:	b.eq	2c31c <rpl_re_set_registers@@Base+0x7408>  // b.none
   2bf1c:	cbz	x19, 2c1e4 <rpl_re_set_registers@@Base+0x72d0>
   2bf20:	ldr	x9, [x22, #48]
   2bf24:	sub	x9, x9, x26
   2bf28:	cmp	x9, x19
   2bf2c:	b.lt	2c31c <rpl_re_set_registers@@Base+0x7408>  // b.tstop
   2bf30:	ldr	x9, [x22, #8]
   2bf34:	mov	x2, x19
   2bf38:	stur	x18, [x29, #-88]
   2bf3c:	add	x0, x9, x8
   2bf40:	add	x1, x9, x26
   2bf44:	bl	a6f0 <bcmp@plt>
   2bf48:	cbnz	w0, 2c31c <rpl_re_set_registers@@Base+0x7408>
   2bf4c:	ldr	x8, [x28, #24]
   2bf50:	ldur	x18, [x29, #-88]
   2bf54:	add	x26, x19, x26
   2bf58:	ldr	x27, [x8, x24, lsl #3]
   2bf5c:	b	2bfd4 <rpl_re_set_registers@@Base+0x70c0>
   2bf60:	ldr	x8, [x22, #184]
   2bf64:	ldr	x27, [x28, #40]
   2bf68:	ldr	x19, [x8, x26, lsl #3]
   2bf6c:	cbz	x18, 2c034 <rpl_re_set_registers@@Base+0x7120>
   2bf70:	cbnz	x1, 2c384 <rpl_re_set_registers@@Base+0x7470>
   2bf74:	str	x24, [x25]
   2bf78:	b	2c04c <rpl_re_set_registers@@Base+0x7138>
   2bf7c:	mov	x0, x28
   2bf80:	mov	x1, x24
   2bf84:	mov	x2, x22
   2bf88:	mov	x3, x26
   2bf8c:	mov	x19, x18
   2bf90:	bl	2eb84 <rpl_re_set_registers@@Base+0x9c70>
   2bf94:	mov	x18, x19
   2bf98:	sxtw	x19, w0
   2bf9c:	cbnz	x19, 2bfc4 <rpl_re_set_registers@@Base+0x70b0>
   2bfa0:	ldr	x8, [x28]
   2bfa4:	mov	x0, x22
   2bfa8:	mov	x2, x26
   2bfac:	mov	x27, x18
   2bfb0:	add	x1, x8, x24, lsl #4
   2bfb4:	bl	2eefc <rpl_re_set_registers@@Base+0x9fe8>
   2bfb8:	tbz	w0, #0, 2c318 <rpl_re_set_registers@@Base+0x7404>
   2bfbc:	mov	w19, #0x1                   	// #1
   2bfc0:	mov	x18, x27
   2bfc4:	ldr	x8, [x28, #24]
   2bfc8:	add	x26, x19, x26
   2bfcc:	ldr	x27, [x8, x24, lsl #3]
   2bfd0:	cbz	x23, 2bd40 <rpl_re_set_registers@@Base+0x6e2c>
   2bfd4:	ldr	x8, [x22, #168]
   2bfd8:	cmp	x26, x8
   2bfdc:	b.gt	2c31c <rpl_re_set_registers@@Base+0x7408>
   2bfe0:	ldr	x8, [x22, #184]
   2bfe4:	ldr	x8, [x8, x26, lsl #3]
   2bfe8:	cbz	x8, 2c31c <rpl_re_set_registers@@Base+0x7408>
   2bfec:	ldr	x9, [x8, #16]
   2bff0:	subs	x9, x9, #0x1
   2bff4:	b.lt	2c31c <rpl_re_set_registers@@Base+0x7408>  // b.tstop
   2bff8:	ldr	x8, [x8, #24]
   2bffc:	mov	x10, xzr
   2c000:	b.eq	2c024 <rpl_re_set_registers@@Base+0x7110>  // b.none
   2c004:	add	x11, x10, x9
   2c008:	lsr	x11, x11, #1
   2c00c:	ldr	x12, [x8, x11, lsl #3]
   2c010:	cmp	x12, x27
   2c014:	csinc	x10, x10, x11, ge  // ge = tcont
   2c018:	csel	x9, x9, x11, lt  // lt = tstop
   2c01c:	cmp	x10, x9
   2c020:	b.cc	2c004 <rpl_re_set_registers@@Base+0x70f0>  // b.lo, b.ul, b.last
   2c024:	ldr	x8, [x8, x10, lsl #3]
   2c028:	cmp	x8, x27
   2c02c:	b.eq	2bd40 <rpl_re_set_registers@@Base+0x6e2c>  // b.none
   2c030:	b	2c318 <rpl_re_set_registers@@Base+0x7404>
   2c034:	mov	w0, #0x8                   	// #8
   2c038:	bl	a550 <malloc@plt>
   2c03c:	mov	x25, x0
   2c040:	cbz	x0, 2c5ec <rpl_re_set_registers@@Base+0x76d8>
   2c044:	str	x24, [x25]
   2c048:	mov	w18, #0x1                   	// #1
   2c04c:	mov	w1, #0x1                   	// #1
   2c050:	mov	w8, #0x18                  	// #24
   2c054:	madd	x8, x24, x8, x27
   2c058:	ldr	x8, [x8, #8]
   2c05c:	cmp	x8, #0x1
   2c060:	b.lt	2c318 <rpl_re_set_registers@@Base+0x7404>  // b.tstop
   2c064:	ldr	x9, [x19, #16]
   2c068:	subs	x10, x9, #0x1
   2c06c:	b.lt	2c318 <rpl_re_set_registers@@Base+0x7404>  // b.tstop
   2c070:	mov	w9, #0x18                  	// #24
   2c074:	madd	x9, x24, x9, x27
   2c078:	ldr	x9, [x9, #16]
   2c07c:	ldr	x11, [x19, #24]
   2c080:	cbz	x10, 2c0f0 <rpl_re_set_registers@@Base+0x71dc>
   2c084:	mov	x13, xzr
   2c088:	mov	x12, #0xffffffffffffffff    	// #-1
   2c08c:	b	2c09c <rpl_re_set_registers@@Base+0x7188>
   2c090:	add	x13, x13, #0x1
   2c094:	cmp	x13, x8
   2c098:	b.eq	2c0e8 <rpl_re_set_registers@@Base+0x71d4>  // b.none
   2c09c:	ldr	x24, [x9, x13, lsl #3]
   2c0a0:	mov	x14, xzr
   2c0a4:	mov	x15, x10
   2c0a8:	add	x16, x14, x15
   2c0ac:	lsr	x16, x16, #1
   2c0b0:	ldr	x17, [x11, x16, lsl #3]
   2c0b4:	cmp	x17, x24
   2c0b8:	csinc	x14, x14, x16, ge  // ge = tcont
   2c0bc:	csel	x15, x15, x16, lt  // lt = tstop
   2c0c0:	cmp	x14, x15
   2c0c4:	b.cc	2c0a8 <rpl_re_set_registers@@Base+0x7194>  // b.lo, b.ul, b.last
   2c0c8:	ldr	x14, [x11, x14, lsl #3]
   2c0cc:	cmp	x14, x24
   2c0d0:	b.ne	2c090 <rpl_re_set_registers@@Base+0x717c>  // b.any
   2c0d4:	cmn	x12, #0x1
   2c0d8:	mov	x27, x12
   2c0dc:	mov	x12, x24
   2c0e0:	b.eq	2c090 <rpl_re_set_registers@@Base+0x717c>  // b.none
   2c0e4:	b	2c128 <rpl_re_set_registers@@Base+0x7214>
   2c0e8:	mov	x27, x12
   2c0ec:	b	2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c0f0:	ldr	x24, [x11]
   2c0f4:	mov	x27, #0xffffffffffffffff    	// #-1
   2c0f8:	b	2c110 <rpl_re_set_registers@@Base+0x71fc>
   2c0fc:	mov	x0, x27
   2c100:	subs	x8, x8, #0x1
   2c104:	add	x9, x9, #0x8
   2c108:	mov	x27, x0
   2c10c:	b.eq	2c184 <rpl_re_set_registers@@Base+0x7270>  // b.none
   2c110:	ldr	x10, [x9]
   2c114:	cmp	x24, x10
   2c118:	b.ne	2c0fc <rpl_re_set_registers@@Base+0x71e8>  // b.any
   2c11c:	cmn	x27, #0x1
   2c120:	mov	x0, x24
   2c124:	b.eq	2c100 <rpl_re_set_registers@@Base+0x71ec>  // b.none
   2c128:	subs	x8, x1, #0x1
   2c12c:	b.lt	2c1a4 <rpl_re_set_registers@@Base+0x7290>  // b.tstop
   2c130:	mov	x9, xzr
   2c134:	b.eq	2c158 <rpl_re_set_registers@@Base+0x7244>  // b.none
   2c138:	add	x10, x9, x8
   2c13c:	lsr	x10, x10, #1
   2c140:	ldr	x11, [x25, x10, lsl #3]
   2c144:	cmp	x11, x27
   2c148:	csinc	x9, x9, x10, ge  // ge = tcont
   2c14c:	csel	x8, x8, x10, lt  // lt = tstop
   2c150:	cmp	x9, x8
   2c154:	b.cc	2c138 <rpl_re_set_registers@@Base+0x7224>  // b.lo, b.ul, b.last
   2c158:	ldr	x8, [x25, x9, lsl #3]
   2c15c:	cmp	x8, x27
   2c160:	b.ne	2c1a4 <rpl_re_set_registers@@Base+0x7290>  // b.any
   2c164:	mov	x27, x24
   2c168:	b	2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c16c:	add	x8, x20, x8, lsl #4
   2c170:	str	x26, [x8, #8]
   2c174:	ldr	x8, [x20, #8]
   2c178:	cmp	x26, x8
   2c17c:	b.eq	2be20 <rpl_re_set_registers@@Base+0x6f0c>  // b.none
   2c180:	b	2bed0 <rpl_re_set_registers@@Base+0x6fbc>
   2c184:	mov	x27, x0
   2c188:	b	2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c18c:	cbz	x19, 2c1e4 <rpl_re_set_registers@@Base+0x72d0>
   2c190:	ldr	x8, [x28, #24]
   2c194:	mov	x1, xzr
   2c198:	add	x26, x19, x26
   2c19c:	ldr	x27, [x8, x24, lsl #3]
   2c1a0:	b	2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c1a4:	cbz	x23, 2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c1a8:	stp	x18, x1, [x29, #-88]
   2c1ac:	ldp	x19, x9, [x23]
   2c1b0:	add	x8, x19, #0x1
   2c1b4:	cmp	x8, x9
   2c1b8:	str	x8, [x23]
   2c1bc:	b.ne	2c1f4 <rpl_re_set_registers@@Base+0x72e0>  // b.any
   2c1c0:	ldr	x0, [x23, #16]
   2c1c4:	add	x8, x8, x8, lsl #1
   2c1c8:	lsl	x1, x8, #5
   2c1cc:	bl	a730 <realloc@plt>
   2c1d0:	cbz	x0, 2c5ec <rpl_re_set_registers@@Base+0x76d8>
   2c1d4:	ldr	x8, [x23, #8]
   2c1d8:	lsl	x8, x8, #1
   2c1dc:	stp	x8, x0, [x23, #8]
   2c1e0:	b	2c1f8 <rpl_re_set_registers@@Base+0x72e4>
   2c1e4:	cbz	x18, 2c280 <rpl_re_set_registers@@Base+0x736c>
   2c1e8:	cbnz	x1, 2c420 <rpl_re_set_registers@@Base+0x750c>
   2c1ec:	str	x24, [x25]
   2c1f0:	b	2c298 <rpl_re_set_registers@@Base+0x7384>
   2c1f4:	ldr	x0, [x23, #16]
   2c1f8:	mov	w8, #0x30                  	// #48
   2c1fc:	madd	x28, x19, x8, x0
   2c200:	stur	x0, [x29, #-96]
   2c204:	stp	x26, x24, [x28]
   2c208:	ldur	x24, [x29, #-48]
   2c20c:	mov	x0, x24
   2c210:	bl	a550 <malloc@plt>
   2c214:	str	x0, [x28, #16]
   2c218:	cbz	x0, 2c5ec <rpl_re_set_registers@@Base+0x76d8>
   2c21c:	mov	x1, x20
   2c220:	mov	x2, x24
   2c224:	bl	a210 <memcpy@plt>
   2c228:	ldur	x9, [x29, #-96]
   2c22c:	ldur	x1, [x29, #-80]
   2c230:	mov	w8, #0x30                  	// #48
   2c234:	madd	x8, x19, x8, x9
   2c238:	cmp	x1, #0x1
   2c23c:	add	x28, x8, #0x18
   2c240:	str	x1, [x8, #32]
   2c244:	b.lt	2c300 <rpl_re_set_registers@@Base+0x73ec>  // b.tstop
   2c248:	lsl	x24, x1, #3
   2c24c:	mov	x0, x24
   2c250:	str	x1, [x28]
   2c254:	bl	a550 <malloc@plt>
   2c258:	ldur	x9, [x29, #-96]
   2c25c:	mov	w8, #0x30                  	// #48
   2c260:	madd	x8, x19, x8, x9
   2c264:	str	x0, [x8, #40]
   2c268:	cbz	x0, 2c5e8 <rpl_re_set_registers@@Base+0x76d4>
   2c26c:	mov	x1, x25
   2c270:	mov	x2, x24
   2c274:	bl	a210 <memcpy@plt>
   2c278:	ldp	x18, x1, [x29, #-88]
   2c27c:	b	2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c280:	mov	w0, #0x8                   	// #8
   2c284:	bl	a550 <malloc@plt>
   2c288:	mov	x25, x0
   2c28c:	cbz	x0, 2c5ec <rpl_re_set_registers@@Base+0x76d8>
   2c290:	str	x24, [x25]
   2c294:	mov	w18, #0x1                   	// #1
   2c298:	mov	w1, #0x1                   	// #1
   2c29c:	ldr	x8, [x22, #184]
   2c2a0:	ldr	x8, [x8, x26, lsl #3]
   2c2a4:	ldr	x9, [x8, #16]
   2c2a8:	subs	x9, x9, #0x1
   2c2ac:	b.lt	2bfa0 <rpl_re_set_registers@@Base+0x708c>  // b.tstop
   2c2b0:	ldr	x10, [x28, #40]
   2c2b4:	mov	w11, #0x18                  	// #24
   2c2b8:	ldr	x8, [x8, #24]
   2c2bc:	madd	x10, x24, x11, x10
   2c2c0:	ldr	x10, [x10, #16]
   2c2c4:	ldr	x27, [x10]
   2c2c8:	mov	x10, xzr
   2c2cc:	b.eq	2c2f0 <rpl_re_set_registers@@Base+0x73dc>  // b.none
   2c2d0:	add	x11, x10, x9
   2c2d4:	lsr	x11, x11, #1
   2c2d8:	ldr	x12, [x8, x11, lsl #3]
   2c2dc:	cmp	x12, x27
   2c2e0:	csinc	x10, x10, x11, ge  // ge = tcont
   2c2e4:	csel	x9, x9, x11, lt  // lt = tstop
   2c2e8:	cmp	x10, x9
   2c2ec:	b.cc	2c2d0 <rpl_re_set_registers@@Base+0x73bc>  // b.lo, b.ul, b.last
   2c2f0:	ldr	x8, [x8, x10, lsl #3]
   2c2f4:	cmp	x8, x27
   2c2f8:	b.eq	2bd44 <rpl_re_set_registers@@Base+0x6e30>  // b.none
   2c2fc:	b	2bf9c <rpl_re_set_registers@@Base+0x7088>
   2c300:	stp	xzr, xzr, [x28]
   2c304:	ldur	x18, [x29, #-88]
   2c308:	str	xzr, [x28, #16]
   2c30c:	b	2bd44 <rpl_re_set_registers@@Base+0x6e30>
   2c310:	cmn	x27, #0x2
   2c314:	b.eq	2c5ec <rpl_re_set_registers@@Base+0x76d8>  // b.none
   2c318:	cbz	x23, 2c5b0 <rpl_re_set_registers@@Base+0x769c>
   2c31c:	ldr	x9, [x23]
   2c320:	sub	x8, x9, #0x1
   2c324:	cmp	x9, #0x0
   2c328:	str	x8, [x23]
   2c32c:	b.le	2c658 <rpl_re_set_registers@@Base+0x7744>
   2c330:	ldr	x9, [x23, #16]
   2c334:	add	x8, x8, x8, lsl #1
   2c338:	lsl	x19, x8, #4
   2c33c:	ldur	x2, [x29, #-48]
   2c340:	add	x8, x9, x19
   2c344:	ldr	x1, [x8, #16]
   2c348:	ldr	x26, [x8]
   2c34c:	mov	x0, x20
   2c350:	bl	a210 <memcpy@plt>
   2c354:	mov	x0, x25
   2c358:	bl	a970 <free@plt>
   2c35c:	ldr	x8, [x23, #16]
   2c360:	add	x8, x8, x19
   2c364:	ldr	x0, [x8, #16]
   2c368:	bl	a970 <free@plt>
   2c36c:	ldr	x8, [x23, #16]
   2c370:	add	x8, x8, x19
   2c374:	ldp	x18, x1, [x8, #24]
   2c378:	ldr	x25, [x8, #40]
   2c37c:	ldr	x27, [x8, #8]
   2c380:	b	2bd48 <rpl_re_set_registers@@Base+0x6e34>
   2c384:	cmp	x18, x1
   2c388:	b.ne	2c3b0 <rpl_re_set_registers@@Base+0x749c>  // b.any
   2c38c:	stur	x1, [x29, #-80]
   2c390:	lsl	x1, x18, #4
   2c394:	mov	x0, x25
   2c398:	mov	x28, x18
   2c39c:	bl	a730 <realloc@plt>
   2c3a0:	cbz	x0, 2c5ec <rpl_re_set_registers@@Base+0x76d8>
   2c3a4:	ldur	x1, [x29, #-80]
   2c3a8:	lsl	x18, x28, #1
   2c3ac:	mov	x25, x0
   2c3b0:	ldr	x8, [x25]
   2c3b4:	cmp	x8, x24
   2c3b8:	b.le	2c3e8 <rpl_re_set_registers@@Base+0x74d4>
   2c3bc:	cmp	x1, #0x1
   2c3c0:	mov	x8, x1
   2c3c4:	b.lt	2c414 <rpl_re_set_registers@@Base+0x7500>  // b.tstop
   2c3c8:	mov	x9, x1
   2c3cc:	add	x10, x25, x9, lsl #3
   2c3d0:	ldur	x11, [x10, #-8]
   2c3d4:	subs	x8, x9, #0x1
   2c3d8:	mov	x9, x8
   2c3dc:	str	x11, [x10]
   2c3e0:	b.gt	2c3cc <rpl_re_set_registers@@Base+0x74b8>
   2c3e4:	b	2c414 <rpl_re_set_registers@@Base+0x7500>
   2c3e8:	add	x8, x25, x1, lsl #3
   2c3ec:	ldur	x9, [x8, #-8]
   2c3f0:	mov	x8, x1
   2c3f4:	cmp	x9, x24
   2c3f8:	b.le	2c414 <rpl_re_set_registers@@Base+0x7500>
   2c3fc:	add	x10, x25, x8, lsl #3
   2c400:	str	x9, [x10]
   2c404:	ldur	x9, [x10, #-16]
   2c408:	sub	x8, x8, #0x1
   2c40c:	cmp	x9, x24
   2c410:	b.gt	2c3fc <rpl_re_set_registers@@Base+0x74e8>
   2c414:	add	x1, x1, #0x1
   2c418:	str	x24, [x25, x8, lsl #3]
   2c41c:	b	2c050 <rpl_re_set_registers@@Base+0x713c>
   2c420:	mov	x12, x18
   2c424:	cmp	x18, x1
   2c428:	stur	x1, [x29, #-80]
   2c42c:	b.ne	2c44c <rpl_re_set_registers@@Base+0x7538>  // b.any
   2c430:	lsl	x1, x12, #4
   2c434:	mov	x0, x25
   2c438:	mov	x27, x12
   2c43c:	bl	a730 <realloc@plt>
   2c440:	cbz	x0, 2c5ec <rpl_re_set_registers@@Base+0x76d8>
   2c444:	lsl	x12, x27, #1
   2c448:	mov	x25, x0
   2c44c:	ldr	x8, [x25]
   2c450:	cmp	x8, x24
   2c454:	b.le	2c484 <rpl_re_set_registers@@Base+0x7570>
   2c458:	ldur	x8, [x29, #-80]
   2c45c:	cmp	x8, #0x1
   2c460:	b.lt	2c4b4 <rpl_re_set_registers@@Base+0x75a0>  // b.tstop
   2c464:	ldur	x9, [x29, #-80]
   2c468:	add	x10, x25, x9, lsl #3
   2c46c:	ldur	x11, [x10, #-8]
   2c470:	subs	x8, x9, #0x1
   2c474:	mov	x9, x8
   2c478:	str	x11, [x10]
   2c47c:	b.gt	2c468 <rpl_re_set_registers@@Base+0x7554>
   2c480:	b	2c4b4 <rpl_re_set_registers@@Base+0x75a0>
   2c484:	ldur	x10, [x29, #-80]
   2c488:	add	x8, x25, x10, lsl #3
   2c48c:	ldur	x9, [x8, #-8]
   2c490:	mov	x8, x10
   2c494:	cmp	x9, x24
   2c498:	b.le	2c4b4 <rpl_re_set_registers@@Base+0x75a0>
   2c49c:	add	x10, x25, x8, lsl #3
   2c4a0:	str	x9, [x10]
   2c4a4:	ldur	x9, [x10, #-16]
   2c4a8:	sub	x8, x8, #0x1
   2c4ac:	cmp	x9, x24
   2c4b0:	b.gt	2c49c <rpl_re_set_registers@@Base+0x7588>
   2c4b4:	ldur	x1, [x29, #-80]
   2c4b8:	mov	x18, x12
   2c4bc:	str	x24, [x25, x8, lsl #3]
   2c4c0:	add	x1, x1, #0x1
   2c4c4:	b	2c29c <rpl_re_set_registers@@Base+0x7388>
   2c4c8:	mov	x0, x25
   2c4cc:	bl	a970 <free@plt>
   2c4d0:	ldur	w8, [x29, #-60]
   2c4d4:	cbz	w8, 2c4e0 <rpl_re_set_registers@@Base+0x75cc>
   2c4d8:	ldur	x0, [x29, #-56]
   2c4dc:	bl	a970 <free@plt>
   2c4e0:	ldr	x8, [x23]
   2c4e4:	ldr	x0, [x23, #16]
   2c4e8:	cmp	x8, #0x1
   2c4ec:	b.lt	2c52c <rpl_re_set_registers@@Base+0x7618>  // b.tstop
   2c4f0:	mov	x19, xzr
   2c4f4:	mov	x20, xzr
   2c4f8:	add	x8, x0, x19
   2c4fc:	ldr	x0, [x8, #40]
   2c500:	bl	a970 <free@plt>
   2c504:	ldr	x8, [x23, #16]
   2c508:	add	x8, x8, x19
   2c50c:	ldr	x0, [x8, #16]
   2c510:	bl	a970 <free@plt>
   2c514:	ldr	x8, [x23]
   2c518:	ldr	x0, [x23, #16]
   2c51c:	add	x20, x20, #0x1
   2c520:	add	x19, x19, #0x30
   2c524:	cmp	x20, x8
   2c528:	b.lt	2c4f8 <rpl_re_set_registers@@Base+0x75e4>  // b.tstop
   2c52c:	bl	a970 <free@plt>
   2c530:	mov	w0, wzr
   2c534:	b	2c590 <rpl_re_set_registers@@Base+0x767c>
   2c538:	cbz	x23, 2c58c <rpl_re_set_registers@@Base+0x7678>
   2c53c:	ldr	x8, [x23]
   2c540:	ldr	x0, [x23, #16]
   2c544:	cmp	x8, #0x1
   2c548:	b.lt	2c588 <rpl_re_set_registers@@Base+0x7674>  // b.tstop
   2c54c:	mov	x19, xzr
   2c550:	mov	x20, xzr
   2c554:	add	x8, x0, x19
   2c558:	ldr	x0, [x8, #40]
   2c55c:	bl	a970 <free@plt>
   2c560:	ldr	x8, [x23, #16]
   2c564:	add	x8, x8, x19
   2c568:	ldr	x0, [x8, #16]
   2c56c:	bl	a970 <free@plt>
   2c570:	ldr	x8, [x23]
   2c574:	ldr	x0, [x23, #16]
   2c578:	add	x20, x20, #0x1
   2c57c:	add	x19, x19, #0x30
   2c580:	cmp	x20, x8
   2c584:	b.lt	2c554 <rpl_re_set_registers@@Base+0x7640>  // b.tstop
   2c588:	bl	a970 <free@plt>
   2c58c:	mov	w0, #0xc                   	// #12
   2c590:	mov	sp, x29
   2c594:	ldp	x20, x19, [sp, #80]
   2c598:	ldp	x22, x21, [sp, #64]
   2c59c:	ldp	x24, x23, [sp, #48]
   2c5a0:	ldp	x26, x25, [sp, #32]
   2c5a4:	ldp	x28, x27, [sp, #16]
   2c5a8:	ldp	x29, x30, [sp], #96
   2c5ac:	ret
   2c5b0:	mov	x0, x25
   2c5b4:	bl	a970 <free@plt>
   2c5b8:	ldur	w8, [x29, #-60]
   2c5bc:	cbz	w8, 2c5c8 <rpl_re_set_registers@@Base+0x76b4>
   2c5c0:	ldur	x0, [x29, #-56]
   2c5c4:	bl	a970 <free@plt>
   2c5c8:	mov	w0, #0x1                   	// #1
   2c5cc:	b	2c590 <rpl_re_set_registers@@Base+0x767c>
   2c5d0:	mov	x0, x25
   2c5d4:	bl	a970 <free@plt>
   2c5d8:	ldur	w8, [x29, #-60]
   2c5dc:	cbz	w8, 2c530 <rpl_re_set_registers@@Base+0x761c>
   2c5e0:	ldur	x0, [x29, #-56]
   2c5e4:	b	2c52c <rpl_re_set_registers@@Base+0x7618>
   2c5e8:	stp	xzr, xzr, [x28]
   2c5ec:	mov	x0, x25
   2c5f0:	bl	a970 <free@plt>
   2c5f4:	ldur	w8, [x29, #-60]
   2c5f8:	cbz	w8, 2c604 <rpl_re_set_registers@@Base+0x76f0>
   2c5fc:	ldur	x0, [x29, #-56]
   2c600:	bl	a970 <free@plt>
   2c604:	cbz	x23, 2c58c <rpl_re_set_registers@@Base+0x7678>
   2c608:	ldr	x8, [x23]
   2c60c:	ldr	x0, [x23, #16]
   2c610:	cmp	x8, #0x1
   2c614:	b.lt	2c588 <rpl_re_set_registers@@Base+0x7674>  // b.tstop
   2c618:	mov	x19, xzr
   2c61c:	mov	x20, xzr
   2c620:	add	x8, x0, x19
   2c624:	ldr	x0, [x8, #40]
   2c628:	bl	a970 <free@plt>
   2c62c:	ldr	x8, [x23, #16]
   2c630:	add	x8, x8, x19
   2c634:	ldr	x0, [x8, #16]
   2c638:	bl	a970 <free@plt>
   2c63c:	ldr	x8, [x23]
   2c640:	ldr	x0, [x23, #16]
   2c644:	add	x20, x20, #0x1
   2c648:	add	x19, x19, #0x30
   2c64c:	cmp	x20, x8
   2c650:	b.lt	2c620 <rpl_re_set_registers@@Base+0x770c>  // b.tstop
   2c654:	b	2c588 <rpl_re_set_registers@@Base+0x7674>
   2c658:	adrp	x0, 34000 <vasnprintf@@Base+0x3474>
   2c65c:	adrp	x1, 34000 <vasnprintf@@Base+0x3474>
   2c660:	adrp	x3, 34000 <vasnprintf@@Base+0x3474>
   2c664:	add	x0, x0, #0x791
   2c668:	add	x1, x1, #0x645
   2c66c:	add	x3, x3, #0x79a
   2c670:	mov	w2, #0x555                 	// #1365
   2c674:	bl	ad80 <__assert_fail@plt>
   2c678:	sub	sp, sp, #0x20
   2c67c:	stp	x29, x30, [sp, #16]
   2c680:	add	x29, sp, #0x10
   2c684:	tbnz	x1, #63, 2c750 <rpl_re_set_registers@@Base+0x783c>
   2c688:	ldr	x8, [x0, #88]
   2c68c:	cmp	x8, x1
   2c690:	b.eq	2c764 <rpl_re_set_registers@@Base+0x7850>  // b.none
   2c694:	ldr	w8, [x0, #144]
   2c698:	cmp	w8, #0x2
   2c69c:	b.lt	2c6d0 <rpl_re_set_registers@@Base+0x77bc>  // b.tstop
   2c6a0:	ldr	x8, [x0, #16]
   2c6a4:	ldr	w9, [x8, x1, lsl #2]
   2c6a8:	cmn	w9, #0x1
   2c6ac:	b.ne	2c704 <rpl_re_set_registers@@Base+0x77f0>  // b.any
   2c6b0:	cmp	x1, #0x0
   2c6b4:	sub	x1, x1, #0x1
   2c6b8:	b.gt	2c6a4 <rpl_re_set_registers@@Base+0x7790>
   2c6bc:	ldr	w8, [x0, #112]
   2c6c0:	ldp	x29, x30, [sp, #16]
   2c6c4:	mov	w0, w8
   2c6c8:	add	sp, sp, #0x20
   2c6cc:	ret
   2c6d0:	ldr	x8, [x0, #8]
   2c6d4:	ldr	x9, [x0, #128]
   2c6d8:	ldrb	w8, [x8, x1]
   2c6dc:	lsr	x10, x8, #3
   2c6e0:	and	x10, x10, #0x18
   2c6e4:	ldr	x9, [x9, x10]
   2c6e8:	lsr	x9, x9, x8
   2c6ec:	tbz	w9, #0, 2c734 <rpl_re_set_registers@@Base+0x7820>
   2c6f0:	mov	w8, #0x1                   	// #1
   2c6f4:	ldp	x29, x30, [sp, #16]
   2c6f8:	mov	w0, w8
   2c6fc:	add	sp, sp, #0x20
   2c700:	ret
   2c704:	ldrb	w8, [x0, #142]
   2c708:	cbnz	w8, 2c780 <rpl_re_set_registers@@Base+0x786c>
   2c70c:	cmp	w9, #0xa
   2c710:	b.ne	2c73c <rpl_re_set_registers@@Base+0x7828>  // b.any
   2c714:	ldrb	w8, [x0, #141]
   2c718:	cmp	w8, #0x0
   2c71c:	cset	w8, ne  // ne = any
   2c720:	lsl	w8, w8, #1
   2c724:	ldp	x29, x30, [sp, #16]
   2c728:	mov	w0, w8
   2c72c:	add	sp, sp, #0x20
   2c730:	ret
   2c734:	cmp	w8, #0xa
   2c738:	b.eq	2c714 <rpl_re_set_registers@@Base+0x7800>  // b.none
   2c73c:	mov	w8, wzr
   2c740:	ldp	x29, x30, [sp, #16]
   2c744:	mov	w0, w8
   2c748:	add	sp, sp, #0x20
   2c74c:	ret
   2c750:	ldr	w8, [x0, #112]
   2c754:	ldp	x29, x30, [sp, #16]
   2c758:	mov	w0, w8
   2c75c:	add	sp, sp, #0x20
   2c760:	ret
   2c764:	and	w8, w2, #0x2
   2c768:	mov	w9, #0xa                   	// #10
   2c76c:	eor	w8, w8, w9
   2c770:	ldp	x29, x30, [sp, #16]
   2c774:	mov	w0, w8
   2c778:	add	sp, sp, #0x20
   2c77c:	ret
   2c780:	str	x0, [sp]
   2c784:	mov	w0, w9
   2c788:	stur	w9, [x29, #-4]
   2c78c:	bl	ac20 <iswalnum@plt>
   2c790:	ldur	w9, [x29, #-4]
   2c794:	mov	w8, #0x1                   	// #1
   2c798:	cmp	w9, #0x5f
   2c79c:	b.eq	2c6c0 <rpl_re_set_registers@@Base+0x77ac>  // b.none
   2c7a0:	mov	w10, w0
   2c7a4:	ldr	x0, [sp]
   2c7a8:	cbz	w10, 2c70c <rpl_re_set_registers@@Base+0x77f8>
   2c7ac:	b	2c6c0 <rpl_re_set_registers@@Base+0x77ac>
   2c7b0:	stp	x29, x30, [sp, #-80]!
   2c7b4:	stp	x24, x23, [sp, #32]
   2c7b8:	stp	x22, x21, [sp, #48]
   2c7bc:	stp	x20, x19, [sp, #64]
   2c7c0:	ldr	x8, [x1, #8]
   2c7c4:	str	x25, [sp, #16]
   2c7c8:	mov	x29, sp
   2c7cc:	cmp	x8, #0x1
   2c7d0:	b.lt	2c898 <rpl_re_set_registers@@Base+0x7984>  // b.tstop
   2c7d4:	ldr	x22, [x0, #152]
   2c7d8:	mov	x19, x2
   2c7dc:	mov	x20, x1
   2c7e0:	mov	x21, x0
   2c7e4:	mov	x23, xzr
   2c7e8:	b	2c80c <rpl_re_set_registers@@Base+0x78f8>
   2c7ec:	add	x8, x8, #0x1
   2c7f0:	str	x24, [x9, #8]
   2c7f4:	str	x8, [x21, #232]
   2c7f8:	str	x19, [x9]
   2c7fc:	ldr	x8, [x20, #8]
   2c800:	add	x23, x23, #0x1
   2c804:	cmp	x23, x8
   2c808:	b.ge	2c898 <rpl_re_set_registers@@Base+0x7984>  // b.tcont
   2c80c:	ldr	x9, [x20, #16]
   2c810:	ldr	x24, [x9, x23, lsl #3]
   2c814:	ldr	x9, [x22]
   2c818:	add	x10, x9, x24, lsl #4
   2c81c:	ldrb	w10, [x10, #8]
   2c820:	cmp	w10, #0x8
   2c824:	b.ne	2c800 <rpl_re_set_registers@@Base+0x78ec>  // b.any
   2c828:	lsl	x10, x24, #4
   2c82c:	ldr	x9, [x9, x10]
   2c830:	cmp	x9, #0x3f
   2c834:	b.gt	2c800 <rpl_re_set_registers@@Base+0x78ec>
   2c838:	ldr	x10, [x22, #160]
   2c83c:	lsr	x9, x10, x9
   2c840:	tbz	w9, #0, 2c800 <rpl_re_set_registers@@Base+0x78ec>
   2c844:	ldp	x25, x8, [x21, #232]
   2c848:	cmp	x25, x8
   2c84c:	b.eq	2c87c <rpl_re_set_registers@@Base+0x7968>  // b.none
   2c850:	mov	w0, #0x1                   	// #1
   2c854:	mov	w1, #0x30                  	// #48
   2c858:	bl	a6c0 <calloc@plt>
   2c85c:	ldr	x8, [x21, #232]
   2c860:	ldr	x9, [x21, #248]
   2c864:	lsl	x10, x8, #3
   2c868:	str	x0, [x9, x10]
   2c86c:	ldr	x9, [x21, #248]
   2c870:	ldr	x9, [x9, x10]
   2c874:	cbnz	x9, 2c7ec <rpl_re_set_registers@@Base+0x78d8>
   2c878:	b	2c8b4 <rpl_re_set_registers@@Base+0x79a0>
   2c87c:	ldr	x0, [x21, #248]
   2c880:	lsl	x1, x25, #4
   2c884:	bl	a730 <realloc@plt>
   2c888:	cbz	x0, 2c8b4 <rpl_re_set_registers@@Base+0x79a0>
   2c88c:	lsl	x8, x25, #1
   2c890:	stp	x8, x0, [x21, #240]
   2c894:	b	2c850 <rpl_re_set_registers@@Base+0x793c>
   2c898:	mov	w0, wzr
   2c89c:	ldp	x20, x19, [sp, #64]
   2c8a0:	ldp	x22, x21, [sp, #48]
   2c8a4:	ldp	x24, x23, [sp, #32]
   2c8a8:	ldr	x25, [sp, #16]
   2c8ac:	ldp	x29, x30, [sp], #80
   2c8b0:	ret
   2c8b4:	mov	w0, #0xc                   	// #12
   2c8b8:	b	2c89c <rpl_re_set_registers@@Base+0x7988>
   2c8bc:	sub	sp, sp, #0xd0
   2c8c0:	stp	x29, x30, [sp, #112]
   2c8c4:	stp	x28, x27, [sp, #128]
   2c8c8:	stp	x26, x25, [sp, #144]
   2c8cc:	stp	x24, x23, [sp, #160]
   2c8d0:	stp	x22, x21, [sp, #176]
   2c8d4:	stp	x20, x19, [sp, #192]
   2c8d8:	ldr	x8, [x1, #8]
   2c8dc:	add	x29, sp, #0x70
   2c8e0:	cmp	x8, #0x1
   2c8e4:	b.lt	2d138 <rpl_re_set_registers@@Base+0x8224>  // b.tstop
   2c8e8:	ldr	x10, [x0, #152]
   2c8ec:	ldr	x8, [x0, #72]
   2c8f0:	mov	x28, x0
   2c8f4:	mov	x9, xzr
   2c8f8:	mov	w23, #0x28                  	// #40
   2c8fc:	stur	x8, [x29, #-48]
   2c900:	str	x1, [sp]
   2c904:	str	x10, [sp, #16]
   2c908:	b	2c92c <rpl_re_set_registers@@Base+0x7a18>
   2c90c:	stur	wzr, [x29, #-4]
   2c910:	ldr	x1, [sp]
   2c914:	ldr	x9, [sp, #40]
   2c918:	ldr	x10, [sp, #16]
   2c91c:	ldr	x8, [x1, #8]
   2c920:	add	x9, x9, #0x1
   2c924:	cmp	x9, x8
   2c928:	b.ge	2d138 <rpl_re_set_registers@@Base+0x8224>  // b.tcont
   2c92c:	ldr	x8, [x1, #16]
   2c930:	str	x9, [sp, #40]
   2c934:	ldr	x9, [x8, x9, lsl #3]
   2c938:	ldr	x8, [x10]
   2c93c:	stur	x9, [x29, #-40]
   2c940:	add	x19, x8, x9, lsl #4
   2c944:	ldr	w21, [x19, #8]!
   2c948:	and	w8, w21, #0xff
   2c94c:	cmp	w8, #0x4
   2c950:	b.ne	2c910 <rpl_re_set_registers@@Base+0x79fc>  // b.any
   2c954:	tst	w21, #0x3ff00
   2c958:	b.eq	2ca40 <rpl_re_set_registers@@Base+0x7b2c>  // b.none
   2c95c:	ldur	x9, [x29, #-48]
   2c960:	tbnz	x9, #63, 2c998 <rpl_re_set_registers@@Base+0x7a84>
   2c964:	ldr	x8, [x28, #88]
   2c968:	cmp	x8, x9
   2c96c:	b.eq	2d0f8 <rpl_re_set_registers@@Base+0x81e4>  // b.none
   2c970:	ldr	w8, [x28, #144]
   2c974:	cmp	w8, #0x2
   2c978:	b.lt	2c9ac <rpl_re_set_registers@@Base+0x7a98>  // b.tstop
   2c97c:	ldr	x8, [x28, #16]
   2c980:	ldr	w24, [x8, x9, lsl #2]
   2c984:	cmn	w24, #0x1
   2c988:	b.ne	2c9d8 <rpl_re_set_registers@@Base+0x7ac4>  // b.any
   2c98c:	cmp	x9, #0x0
   2c990:	sub	x9, x9, #0x1
   2c994:	b.gt	2c980 <rpl_re_set_registers@@Base+0x7a6c>
   2c998:	ldr	w8, [x28, #112]
   2c99c:	tst	w8, #0x1
   2c9a0:	cset	w9, eq  // eq = none
   2c9a4:	tbnz	w21, #10, 2ca20 <rpl_re_set_registers@@Base+0x7b0c>
   2c9a8:	b	2ca24 <rpl_re_set_registers@@Base+0x7b10>
   2c9ac:	ldr	x8, [x28, #8]
   2c9b0:	ldrb	w8, [x8, x9]
   2c9b4:	ldr	x9, [x28, #128]
   2c9b8:	lsr	x10, x8, #3
   2c9bc:	and	x10, x10, #0x18
   2c9c0:	ldr	x9, [x9, x10]
   2c9c4:	lsr	x9, x9, x8
   2c9c8:	tbz	w9, #0, 2ca08 <rpl_re_set_registers@@Base+0x7af4>
   2c9cc:	mov	w9, wzr
   2c9d0:	mov	w8, #0x1                   	// #1
   2c9d4:	b	2ca24 <rpl_re_set_registers@@Base+0x7b10>
   2c9d8:	ldrb	w8, [x28, #142]
   2c9dc:	cbnz	w8, 2d118 <rpl_re_set_registers@@Base+0x8204>
   2c9e0:	cmp	w24, #0xa
   2c9e4:	b.ne	2ca10 <rpl_re_set_registers@@Base+0x7afc>  // b.any
   2c9e8:	ldrb	w8, [x28, #141]
   2c9ec:	cmp	w8, #0x0
   2c9f0:	cset	w8, ne  // ne = any
   2c9f4:	lsl	w8, w8, #1
   2c9f8:	tst	w8, #0x1
   2c9fc:	cset	w9, eq  // eq = none
   2ca00:	tbnz	w21, #10, 2ca20 <rpl_re_set_registers@@Base+0x7b0c>
   2ca04:	b	2ca24 <rpl_re_set_registers@@Base+0x7b10>
   2ca08:	cmp	w8, #0xa
   2ca0c:	b.eq	2c9e8 <rpl_re_set_registers@@Base+0x7ad4>  // b.none
   2ca10:	mov	w8, wzr
   2ca14:	tst	w8, #0x1
   2ca18:	cset	w9, eq  // eq = none
   2ca1c:	tbz	w21, #10, 2ca24 <rpl_re_set_registers@@Base+0x7b10>
   2ca20:	tbz	w8, #0, 2c910 <rpl_re_set_registers@@Base+0x79fc>
   2ca24:	ldr	w10, [x19]
   2ca28:	tbnz	w9, #0, 2ca30 <rpl_re_set_registers@@Base+0x7b1c>
   2ca2c:	tbnz	w10, #11, 2c910 <rpl_re_set_registers@@Base+0x79fc>
   2ca30:	tbnz	w8, #1, 2ca38 <rpl_re_set_registers@@Base+0x7b24>
   2ca34:	tbnz	w10, #13, 2c910 <rpl_re_set_registers@@Base+0x79fc>
   2ca38:	tbnz	w8, #3, 2ca40 <rpl_re_set_registers@@Base+0x7b2c>
   2ca3c:	tbnz	w10, #15, 2c910 <rpl_re_set_registers@@Base+0x79fc>
   2ca40:	ldr	x10, [x28, #200]
   2ca44:	ldr	x20, [x28, #152]
   2ca48:	ldr	x19, [x28, #8]
   2ca4c:	mov	x8, xzr
   2ca50:	cmp	x10, #0x1
   2ca54:	str	x10, [sp, #8]
   2ca58:	b.lt	2caa0 <rpl_re_set_registers@@Base+0x7b8c>  // b.tstop
   2ca5c:	ldr	x9, [x28, #216]
   2ca60:	ldur	x24, [x29, #-48]
   2ca64:	add	x11, x10, x8
   2ca68:	cmp	x11, #0x0
   2ca6c:	cinc	x11, x11, lt  // lt = tstop
   2ca70:	asr	x11, x11, #1
   2ca74:	madd	x12, x11, x23, x9
   2ca78:	ldr	x12, [x12, #8]
   2ca7c:	cmp	x12, x24
   2ca80:	csel	x10, x10, x11, lt  // lt = tstop
   2ca84:	csinc	x8, x8, x11, ge  // ge = tcont
   2ca88:	cmp	x8, x10
   2ca8c:	b.lt	2ca64 <rpl_re_set_registers@@Base+0x7b50>  // b.tstop
   2ca90:	ldr	x9, [sp, #8]
   2ca94:	cmp	x8, x9
   2ca98:	b.lt	2cab0 <rpl_re_set_registers@@Base+0x7b9c>  // b.tstop
   2ca9c:	b	2caec <rpl_re_set_registers@@Base+0x7bd8>
   2caa0:	ldur	x24, [x29, #-48]
   2caa4:	ldr	x9, [sp, #8]
   2caa8:	cmp	x8, x9
   2caac:	b.ge	2caec <rpl_re_set_registers@@Base+0x7bd8>  // b.tcont
   2cab0:	cmn	x8, #0x1
   2cab4:	b.eq	2caec <rpl_re_set_registers@@Base+0x7bd8>  // b.none
   2cab8:	ldr	x9, [x28, #216]
   2cabc:	madd	x10, x8, x23, x9
   2cac0:	ldr	x10, [x10, #8]
   2cac4:	cmp	x10, x24
   2cac8:	b.ne	2caec <rpl_re_set_registers@@Base+0x7bd8>  // b.any
   2cacc:	madd	x8, x8, x23, x9
   2cad0:	ldr	x9, [x8]
   2cad4:	ldur	x10, [x29, #-40]
   2cad8:	cmp	x9, x10
   2cadc:	b.eq	2c90c <rpl_re_set_registers@@Base+0x79f8>  // b.none
   2cae0:	ldrb	w9, [x8, #32]
   2cae4:	add	x8, x8, #0x28
   2cae8:	cbnz	w9, 2cad0 <rpl_re_set_registers@@Base+0x7bbc>
   2caec:	ldr	x8, [x28, #232]
   2caf0:	cmp	x8, #0x1
   2caf4:	b.lt	2c90c <rpl_re_set_registers@@Base+0x79f8>  // b.tstop
   2caf8:	ldur	x9, [x29, #-40]
   2cafc:	ldr	x8, [x20]
   2cb00:	mov	x12, xzr
   2cb04:	lsl	x9, x9, #4
   2cb08:	ldr	x21, [x8, x9]
   2cb0c:	stp	x21, x20, [sp, #24]
   2cb10:	ldr	x9, [x28, #248]
   2cb14:	ldr	x27, [x9, x12, lsl #3]
   2cb18:	ldr	x9, [x27, #8]
   2cb1c:	lsl	x9, x9, #4
   2cb20:	ldr	x8, [x8, x9]
   2cb24:	cmp	x8, x21
   2cb28:	b.ne	2cca8 <rpl_re_set_registers@@Base+0x7d94>  // b.any
   2cb2c:	stp	x12, x27, [sp, #48]
   2cb30:	ldr	x8, [x27, #32]
   2cb34:	ldr	x20, [x27]
   2cb38:	mov	x23, xzr
   2cb3c:	mov	x22, x24
   2cb40:	cmp	x8, #0x1
   2cb44:	b.lt	2cc5c <rpl_re_set_registers@@Base+0x7d48>  // b.tstop
   2cb48:	mov	x21, x20
   2cb4c:	ldr	x9, [x27, #40]
   2cb50:	ldr	x26, [x9, x23, lsl #3]
   2cb54:	ldr	x20, [x26, #8]
   2cb58:	sub	x25, x20, x21
   2cb5c:	cmp	x25, #0x1
   2cb60:	b.lt	2cb94 <rpl_re_set_registers@@Base+0x7c80>  // b.tstop
   2cb64:	ldr	x9, [x28, #48]
   2cb68:	mov	x24, x28
   2cb6c:	add	x28, x25, x22
   2cb70:	cmp	x28, x9
   2cb74:	b.gt	2cbd8 <rpl_re_set_registers@@Base+0x7cc4>
   2cb78:	mov	x28, x24
   2cb7c:	add	x0, x19, x22
   2cb80:	add	x1, x19, x21
   2cb84:	mov	x2, x25
   2cb88:	bl	a6f0 <bcmp@plt>
   2cb8c:	ldur	x24, [x29, #-48]
   2cb90:	cbnz	w0, 2cc54 <rpl_re_set_registers@@Base+0x7d40>
   2cb94:	ldur	x3, [x29, #-40]
   2cb98:	mov	x0, x28
   2cb9c:	mov	x1, x27
   2cba0:	mov	x2, x26
   2cba4:	mov	x4, x24
   2cba8:	bl	2d784 <rpl_re_set_registers@@Base+0x8870>
   2cbac:	cmp	w0, #0x1
   2cbb0:	b.hi	2d170 <rpl_re_set_registers@@Base+0x825c>  // b.pmore
   2cbb4:	ldr	x8, [x27, #32]
   2cbb8:	ldr	x19, [x28, #8]
   2cbbc:	add	x23, x23, #0x1
   2cbc0:	add	x22, x25, x22
   2cbc4:	cmp	x23, x8
   2cbc8:	mov	x21, x20
   2cbcc:	mov	x9, x27
   2cbd0:	b.lt	2cb4c <rpl_re_set_registers@@Base+0x7c38>  // b.tstop
   2cbd4:	b	2cc5c <rpl_re_set_registers@@Base+0x7d48>
   2cbd8:	ldr	x10, [x24, #88]
   2cbdc:	mov	x11, x24
   2cbe0:	cmp	x28, x10
   2cbe4:	b.gt	2cc74 <rpl_re_set_registers@@Base+0x7d60>
   2cbe8:	ldr	x8, [x11, #64]
   2cbec:	ldr	x19, [x11, #192]
   2cbf0:	cmp	x8, x28
   2cbf4:	b.gt	2cc00 <rpl_re_set_registers@@Base+0x7cec>
   2cbf8:	cmp	x8, x10
   2cbfc:	b.lt	2cc10 <rpl_re_set_registers@@Base+0x7cfc>  // b.tstop
   2cc00:	cmp	x9, x28
   2cc04:	b.gt	2cc20 <rpl_re_set_registers@@Base+0x7d0c>
   2cc08:	cmp	x9, x10
   2cc0c:	b.ge	2cc20 <rpl_re_set_registers@@Base+0x7d0c>  // b.tcont
   2cc10:	add	w1, w28, #0x1
   2cc14:	mov	x0, x24
   2cc18:	bl	2d194 <rpl_re_set_registers@@Base+0x8280>
   2cc1c:	cbnz	w0, 2d170 <rpl_re_set_registers@@Base+0x825c>
   2cc20:	subs	x8, x28, x19
   2cc24:	b.le	2cc48 <rpl_re_set_registers@@Base+0x7d34>
   2cc28:	ldr	x9, [x24, #184]
   2cc2c:	lsl	x2, x8, #3
   2cc30:	mov	w1, wzr
   2cc34:	mov	x27, x24
   2cc38:	add	x9, x9, x19, lsl #3
   2cc3c:	add	x0, x9, #0x8
   2cc40:	bl	a640 <memset@plt>
   2cc44:	str	x28, [x24, #192]
   2cc48:	ldr	x19, [x24, #8]
   2cc4c:	ldr	x27, [sp, #56]
   2cc50:	b	2cb78 <rpl_re_set_registers@@Base+0x7c64>
   2cc54:	ldr	x8, [x27, #32]
   2cc58:	mov	x20, x21
   2cc5c:	cmp	x23, x8
   2cc60:	b.ge	2cc88 <rpl_re_set_registers@@Base+0x7d74>  // b.tcont
   2cc64:	ldp	x21, x20, [sp, #24]
   2cc68:	ldr	x12, [sp, #48]
   2cc6c:	mov	w23, #0x28                  	// #40
   2cc70:	b	2cca8 <rpl_re_set_registers@@Base+0x7d94>
   2cc74:	ldur	x24, [x29, #-48]
   2cc78:	mov	x20, x21
   2cc7c:	mov	x28, x11
   2cc80:	cmp	x23, x8
   2cc84:	b.lt	2cc64 <rpl_re_set_registers@@Base+0x7d50>  // b.tstop
   2cc88:	ldr	x21, [sp, #24]
   2cc8c:	ldr	x12, [sp, #48]
   2cc90:	cmp	x23, #0x0
   2cc94:	cinc	x25, x20, ne  // ne = any
   2cc98:	cmp	x25, x24
   2cc9c:	mov	w23, #0x28                  	// #40
   2cca0:	b.le	2ccc0 <rpl_re_set_registers@@Base+0x7dac>
   2cca4:	ldr	x20, [sp, #32]
   2cca8:	ldr	x8, [x28, #232]
   2ccac:	add	x12, x12, #0x1
   2ccb0:	cmp	x12, x8
   2ccb4:	b.ge	2ce74 <rpl_re_set_registers@@Base+0x7f60>  // b.tcont
   2ccb8:	ldr	x8, [x20]
   2ccbc:	b	2cb10 <rpl_re_set_registers@@Base+0x7bfc>
   2ccc0:	ldr	x20, [sp, #32]
   2ccc4:	b	2ccd8 <rpl_re_set_registers@@Base+0x7dc4>
   2ccc8:	ldr	x27, [sp, #56]
   2cccc:	cmp	x25, x24
   2ccd0:	add	x25, x25, #0x1
   2ccd4:	b.ge	2cca8 <rpl_re_set_registers@@Base+0x7d94>  // b.tcont
   2ccd8:	ldr	x8, [x27]
   2ccdc:	cmp	x25, x8
   2cce0:	b.le	2cd08 <rpl_re_set_registers@@Base+0x7df4>
   2cce4:	ldr	x8, [x28, #48]
   2cce8:	cmp	x22, x8
   2ccec:	b.ge	2ce18 <rpl_re_set_registers@@Base+0x7f04>  // b.tcont
   2ccf0:	add	x9, x25, x19
   2ccf4:	ldrb	w8, [x19, x22]
   2ccf8:	ldurb	w9, [x9, #-1]
   2ccfc:	cmp	w8, w9
   2cd00:	b.ne	2cca8 <rpl_re_set_registers@@Base+0x7d94>  // b.any
   2cd04:	add	x22, x22, #0x1
   2cd08:	ldr	x8, [x28, #184]
   2cd0c:	ldr	x9, [x8, x25, lsl #3]
   2cd10:	cbz	x9, 2ccc8 <rpl_re_set_registers@@Base+0x7db4>
   2cd14:	ldr	x8, [x9, #16]
   2cd18:	cmp	x8, #0x1
   2cd1c:	b.lt	2ccc8 <rpl_re_set_registers@@Base+0x7db4>  // b.tstop
   2cd20:	ldr	x9, [x9, #24]
   2cd24:	ldr	x10, [x20]
   2cd28:	b	2cd38 <rpl_re_set_registers@@Base+0x7e24>
   2cd2c:	subs	x8, x8, #0x1
   2cd30:	add	x9, x9, #0x8
   2cd34:	b.eq	2ccc8 <rpl_re_set_registers@@Base+0x7db4>  // b.none
   2cd38:	ldr	x26, [x9]
   2cd3c:	add	x11, x10, x26, lsl #4
   2cd40:	ldrb	w11, [x11, #8]
   2cd44:	cmp	w11, #0x9
   2cd48:	b.ne	2cd2c <rpl_re_set_registers@@Base+0x7e18>  // b.any
   2cd4c:	lsl	x11, x26, #4
   2cd50:	ldr	x11, [x10, x11]
   2cd54:	cmp	x11, x21
   2cd58:	b.ne	2cd2c <rpl_re_set_registers@@Base+0x7e18>  // b.any
   2cd5c:	cmn	x26, #0x1
   2cd60:	b.eq	2ccc8 <rpl_re_set_registers@@Base+0x7db4>  // b.none
   2cd64:	ldr	x1, [x27, #16]
   2cd68:	cbnz	x1, 2cd8c <rpl_re_set_registers@@Base+0x7e78>
   2cd6c:	ldr	x8, [x27]
   2cd70:	mov	w0, #0x18                  	// #24
   2cd74:	sub	x8, x25, x8
   2cd78:	add	x1, x8, #0x1
   2cd7c:	bl	a6c0 <calloc@plt>
   2cd80:	mov	x1, x0
   2cd84:	str	x0, [x27, #16]
   2cd88:	cbz	x0, 2d164 <rpl_re_set_registers@@Base+0x8250>
   2cd8c:	ldp	x3, x2, [x27]
   2cd90:	mov	w6, #0x9                   	// #9
   2cd94:	mov	x0, x28
   2cd98:	mov	x4, x26
   2cd9c:	mov	x5, x25
   2cda0:	bl	2d950 <rpl_re_set_registers@@Base+0x8a3c>
   2cda4:	ldr	x12, [sp, #48]
   2cda8:	cmp	w0, #0x1
   2cdac:	b.eq	2ccc8 <rpl_re_set_registers@@Base+0x7db4>  // b.none
   2cdb0:	mov	w27, w0
   2cdb4:	cbnz	w0, 2d174 <rpl_re_set_registers@@Base+0x8260>
   2cdb8:	ldr	x27, [sp, #56]
   2cdbc:	ldp	x9, x8, [x27, #24]
   2cdc0:	cmp	x8, x9
   2cdc4:	b.eq	2ce40 <rpl_re_set_registers@@Base+0x7f2c>  // b.none
   2cdc8:	mov	w0, #0x1                   	// #1
   2cdcc:	mov	w1, #0x28                  	// #40
   2cdd0:	bl	a6c0 <calloc@plt>
   2cdd4:	cbz	x0, 2d164 <rpl_re_set_registers@@Base+0x8250>
   2cdd8:	ldp	x9, x8, [x27, #32]
   2cddc:	ldur	x3, [x29, #-40]
   2cde0:	mov	x2, x0
   2cde4:	mov	x1, x27
   2cde8:	str	x0, [x8, x9, lsl #3]
   2cdec:	stp	x26, x25, [x0]
   2cdf0:	add	x8, x9, #0x1
   2cdf4:	mov	x0, x28
   2cdf8:	mov	x4, x24
   2cdfc:	str	x8, [x27, #32]
   2ce00:	bl	2d784 <rpl_re_set_registers@@Base+0x8870>
   2ce04:	cmp	w0, #0x1
   2ce08:	b.hi	2d170 <rpl_re_set_registers@@Base+0x825c>  // b.pmore
   2ce0c:	ldr	x19, [x28, #8]
   2ce10:	ldr	x12, [sp, #48]
   2ce14:	b	2ccc8 <rpl_re_set_registers@@Base+0x7db4>
   2ce18:	ldr	x8, [x28, #88]
   2ce1c:	cmp	x22, x8
   2ce20:	b.ge	2cca8 <rpl_re_set_registers@@Base+0x7d94>  // b.tcont
   2ce24:	add	w1, w22, #0x1
   2ce28:	mov	x0, x28
   2ce2c:	bl	2d194 <rpl_re_set_registers@@Base+0x8280>
   2ce30:	cbnz	w0, 2d170 <rpl_re_set_registers@@Base+0x825c>
   2ce34:	ldr	x19, [x28, #8]
   2ce38:	ldp	x12, x27, [sp, #48]
   2ce3c:	b	2ccf0 <rpl_re_set_registers@@Base+0x7ddc>
   2ce40:	ldr	x0, [x27, #40]
   2ce44:	mov	w19, #0x1                   	// #1
   2ce48:	bfi	x19, x8, #1, #63
   2ce4c:	lsl	x1, x19, #3
   2ce50:	bl	a730 <realloc@plt>
   2ce54:	cbz	x0, 2d164 <rpl_re_set_registers@@Base+0x8250>
   2ce58:	str	x0, [x27, #40]
   2ce5c:	str	x19, [x27, #24]
   2ce60:	mov	w0, #0x1                   	// #1
   2ce64:	mov	w1, #0x28                  	// #40
   2ce68:	bl	a6c0 <calloc@plt>
   2ce6c:	cbnz	x0, 2cdd8 <rpl_re_set_registers@@Base+0x7ec4>
   2ce70:	b	2d164 <rpl_re_set_registers@@Base+0x8250>
   2ce74:	ldr	x8, [x28, #200]
   2ce78:	ldr	x19, [sp, #8]
   2ce7c:	stur	wzr, [x29, #-4]
   2ce80:	cmp	x19, x8
   2ce84:	b.lt	2ce9c <rpl_re_set_registers@@Base+0x7f88>  // b.tstop
   2ce88:	b	2c910 <rpl_re_set_registers@@Base+0x79fc>
   2ce8c:	ldr	x8, [x28, #200]
   2ce90:	add	x19, x19, #0x1
   2ce94:	cmp	x19, x8
   2ce98:	b.ge	2c910 <rpl_re_set_registers@@Base+0x79fc>  // b.tcont
   2ce9c:	ldr	x8, [x28, #216]
   2cea0:	mul	x9, x19, x23
   2cea4:	ldur	x10, [x29, #-40]
   2cea8:	ldr	x9, [x8, x9]
   2ceac:	cmp	x9, x10
   2ceb0:	b.ne	2ce8c <rpl_re_set_registers@@Base+0x7f78>  // b.any
   2ceb4:	madd	x9, x19, x23, x8
   2ceb8:	ldr	x9, [x9, #8]
   2cebc:	ldur	x10, [x29, #-48]
   2cec0:	cmp	x9, x10
   2cec4:	b.ne	2ce8c <rpl_re_set_registers@@Base+0x7f78>  // b.any
   2cec8:	str	x19, [sp, #8]
   2cecc:	madd	x8, x19, x23, x8
   2ced0:	ldp	x21, x19, [x8, #16]
   2ced4:	ldr	x8, [sp, #16]
   2ced8:	cmp	x19, x21
   2cedc:	ldr	x23, [x8, #48]
   2cee0:	b.ne	2cefc <rpl_re_set_registers@@Base+0x7fe8>  // b.any
   2cee4:	ldr	x8, [x8, #40]
   2cee8:	ldur	x10, [x29, #-40]
   2ceec:	mov	w9, #0x18                  	// #24
   2cef0:	madd	x8, x10, x9, x8
   2cef4:	ldr	x8, [x8, #16]
   2cef8:	b	2cf08 <rpl_re_set_registers@@Base+0x7ff4>
   2cefc:	ldr	x8, [x8, #24]
   2cf00:	ldur	x9, [x29, #-40]
   2cf04:	add	x8, x8, x9, lsl #3
   2cf08:	ldur	x9, [x29, #-48]
   2cf0c:	ldr	x26, [x8]
   2cf10:	add	x8, x19, x9
   2cf14:	sub	x22, x8, x21
   2cf18:	cmp	x22, #0x0
   2cf1c:	b.le	2cf60 <rpl_re_set_registers@@Base+0x804c>
   2cf20:	ldr	x9, [x28, #88]
   2cf24:	sub	x8, x22, #0x1
   2cf28:	cmp	x9, x8
   2cf2c:	b.eq	2d0c8 <rpl_re_set_registers@@Base+0x81b4>  // b.none
   2cf30:	ldr	w9, [x28, #144]
   2cf34:	cmp	w9, #0x2
   2cf38:	b.lt	2cf68 <rpl_re_set_registers@@Base+0x8054>  // b.tstop
   2cf3c:	ldr	x8, [x28, #16]
   2cf40:	mov	x9, x22
   2cf44:	sub	x8, x8, #0x4
   2cf48:	ldr	w24, [x8, x9, lsl #2]
   2cf4c:	cmn	w24, #0x1
   2cf50:	b.ne	2cf90 <rpl_re_set_registers@@Base+0x807c>  // b.any
   2cf54:	sub	x9, x9, #0x1
   2cf58:	cmp	x9, #0x0
   2cf5c:	b.gt	2cf48 <rpl_re_set_registers@@Base+0x8034>
   2cf60:	ldr	w25, [x28, #112]
   2cf64:	b	2cfc0 <rpl_re_set_registers@@Base+0x80ac>
   2cf68:	ldr	x9, [x28, #8]
   2cf6c:	ldrb	w8, [x9, x8]
   2cf70:	ldr	x9, [x28, #128]
   2cf74:	lsr	x10, x8, #3
   2cf78:	and	x10, x10, #0x18
   2cf7c:	ldr	x9, [x9, x10]
   2cf80:	lsr	x9, x9, x8
   2cf84:	tbz	w9, #0, 2cfb4 <rpl_re_set_registers@@Base+0x80a0>
   2cf88:	mov	w25, #0x1                   	// #1
   2cf8c:	b	2cfc0 <rpl_re_set_registers@@Base+0x80ac>
   2cf90:	ldrb	w8, [x28, #142]
   2cf94:	cbnz	w8, 2d0dc <rpl_re_set_registers@@Base+0x81c8>
   2cf98:	cmp	w24, #0xa
   2cf9c:	b.ne	2cfbc <rpl_re_set_registers@@Base+0x80a8>  // b.any
   2cfa0:	ldrb	w8, [x28, #141]
   2cfa4:	cmp	w8, #0x0
   2cfa8:	cset	w8, ne  // ne = any
   2cfac:	lsl	w25, w8, #1
   2cfb0:	b	2cfc0 <rpl_re_set_registers@@Base+0x80ac>
   2cfb4:	cmp	w8, #0xa
   2cfb8:	b.eq	2cfa0 <rpl_re_set_registers@@Base+0x808c>  // b.none
   2cfbc:	mov	w25, wzr
   2cfc0:	ldr	x8, [x28, #184]
   2cfc4:	ldur	x9, [x29, #-48]
   2cfc8:	mov	w10, #0x18                  	// #24
   2cfcc:	madd	x24, x26, x10, x23
   2cfd0:	ldr	x9, [x8, x9, lsl #3]
   2cfd4:	ldr	x8, [x8, x22, lsl #3]
   2cfd8:	cbz	x9, 2d038 <rpl_re_set_registers@@Base+0x8124>
   2cfdc:	ldr	x20, [x9, #16]
   2cfe0:	mov	w23, #0x28                  	// #40
   2cfe4:	cbz	x8, 2d044 <rpl_re_set_registers@@Base+0x8130>
   2cfe8:	ldr	x1, [x8, #80]
   2cfec:	sub	x0, x29, #0x20
   2cff0:	mov	x2, x24
   2cff4:	bl	2d594 <rpl_re_set_registers@@Base+0x8680>
   2cff8:	stur	w0, [x29, #-4]
   2cffc:	cbnz	w0, 2d17c <rpl_re_set_registers@@Base+0x8268>
   2d000:	ldr	x1, [sp, #16]
   2d004:	sub	x0, x29, #0x4
   2d008:	sub	x2, x29, #0x20
   2d00c:	mov	w3, w25
   2d010:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2d014:	ldr	x8, [x28, #184]
   2d018:	lsl	x22, x22, #3
   2d01c:	str	x0, [x8, x22]
   2d020:	ldur	x0, [x29, #-16]
   2d024:	bl	a970 <free@plt>
   2d028:	ldr	x8, [x28, #184]
   2d02c:	ldr	x9, [x8, x22]
   2d030:	cbz	x9, 2d070 <rpl_re_set_registers@@Base+0x815c>
   2d034:	b	2d078 <rpl_re_set_registers@@Base+0x8164>
   2d038:	mov	x20, xzr
   2d03c:	mov	w23, #0x28                  	// #40
   2d040:	cbnz	x8, 2cfe8 <rpl_re_set_registers@@Base+0x80d4>
   2d044:	ldr	x1, [sp, #16]
   2d048:	sub	x0, x29, #0x4
   2d04c:	mov	x2, x24
   2d050:	mov	w3, w25
   2d054:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2d058:	ldr	x8, [x28, #184]
   2d05c:	lsl	x9, x22, #3
   2d060:	str	x0, [x8, x9]
   2d064:	ldr	x8, [x28, #184]
   2d068:	ldr	x9, [x8, x9]
   2d06c:	cbnz	x9, 2d078 <rpl_re_set_registers@@Base+0x8164>
   2d070:	ldur	w27, [x29, #-4]
   2d074:	cbnz	w27, 2d140 <rpl_re_set_registers@@Base+0x822c>
   2d078:	cmp	x19, x21
   2d07c:	ldr	x19, [sp, #8]
   2d080:	b.ne	2ce8c <rpl_re_set_registers@@Base+0x7f78>  // b.any
   2d084:	ldur	x9, [x29, #-48]
   2d088:	ldr	x8, [x8, x9, lsl #3]
   2d08c:	ldr	x8, [x8, #16]
   2d090:	cmp	x8, x20
   2d094:	b.le	2ce8c <rpl_re_set_registers@@Base+0x7f78>
   2d098:	ldur	x2, [x29, #-48]
   2d09c:	mov	x0, x28
   2d0a0:	mov	x1, x24
   2d0a4:	bl	2c7b0 <rpl_re_set_registers@@Base+0x789c>
   2d0a8:	stur	w0, [x29, #-4]
   2d0ac:	cbnz	w0, 2d18c <rpl_re_set_registers@@Base+0x8278>
   2d0b0:	mov	x0, x28
   2d0b4:	mov	x1, x24
   2d0b8:	bl	2c8bc <rpl_re_set_registers@@Base+0x79a8>
   2d0bc:	stur	w0, [x29, #-4]
   2d0c0:	cbz	w0, 2ce8c <rpl_re_set_registers@@Base+0x7f78>
   2d0c4:	b	2d18c <rpl_re_set_registers@@Base+0x8278>
   2d0c8:	ldr	w8, [x28, #160]
   2d0cc:	mov	w9, #0xa                   	// #10
   2d0d0:	and	w8, w8, #0x2
   2d0d4:	eor	w25, w8, w9
   2d0d8:	b	2cfc0 <rpl_re_set_registers@@Base+0x80ac>
   2d0dc:	mov	w0, w24
   2d0e0:	bl	ac20 <iswalnum@plt>
   2d0e4:	cmp	w24, #0x5f
   2d0e8:	mov	w25, #0x1                   	// #1
   2d0ec:	b.eq	2cfc0 <rpl_re_set_registers@@Base+0x80ac>  // b.none
   2d0f0:	cbz	w0, 2cf98 <rpl_re_set_registers@@Base+0x8084>
   2d0f4:	b	2cfc0 <rpl_re_set_registers@@Base+0x80ac>
   2d0f8:	ldr	w8, [x28, #160]
   2d0fc:	mov	w9, #0xa                   	// #10
   2d100:	and	w8, w8, #0x2
   2d104:	eor	w8, w8, w9
   2d108:	tst	w8, #0x1
   2d10c:	cset	w9, eq  // eq = none
   2d110:	tbnz	w21, #10, 2ca20 <rpl_re_set_registers@@Base+0x7b0c>
   2d114:	b	2ca24 <rpl_re_set_registers@@Base+0x7b10>
   2d118:	mov	w0, w24
   2d11c:	bl	ac20 <iswalnum@plt>
   2d120:	mov	w9, wzr
   2d124:	cmp	w24, #0x5f
   2d128:	mov	w8, #0x1                   	// #1
   2d12c:	b.eq	2ca24 <rpl_re_set_registers@@Base+0x7b10>  // b.none
   2d130:	cbz	w0, 2c9e0 <rpl_re_set_registers@@Base+0x7acc>
   2d134:	b	2ca24 <rpl_re_set_registers@@Base+0x7b10>
   2d138:	mov	w27, wzr
   2d13c:	stur	wzr, [x29, #-4]
   2d140:	mov	w0, w27
   2d144:	ldp	x20, x19, [sp, #192]
   2d148:	ldp	x22, x21, [sp, #176]
   2d14c:	ldp	x24, x23, [sp, #160]
   2d150:	ldp	x26, x25, [sp, #144]
   2d154:	ldp	x28, x27, [sp, #128]
   2d158:	ldp	x29, x30, [sp, #112]
   2d15c:	add	sp, sp, #0xd0
   2d160:	ret
   2d164:	mov	w27, #0xc                   	// #12
   2d168:	stur	w27, [x29, #-4]
   2d16c:	b	2d140 <rpl_re_set_registers@@Base+0x822c>
   2d170:	mov	w27, w0
   2d174:	stur	w27, [x29, #-4]
   2d178:	b	2d140 <rpl_re_set_registers@@Base+0x822c>
   2d17c:	mov	w27, w0
   2d180:	ldur	x0, [x29, #-16]
   2d184:	bl	a970 <free@plt>
   2d188:	b	2d140 <rpl_re_set_registers@@Base+0x822c>
   2d18c:	mov	w27, w0
   2d190:	b	2d140 <rpl_re_set_registers@@Base+0x822c>
   2d194:	stp	x29, x30, [sp, #-48]!
   2d198:	stp	x20, x19, [sp, #32]
   2d19c:	ldr	x8, [x0, #64]
   2d1a0:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
   2d1a4:	str	x21, [sp, #16]
   2d1a8:	mov	x29, sp
   2d1ac:	cmp	x8, x9
   2d1b0:	b.hi	2d378 <rpl_re_set_registers@@Base+0x8464>  // b.pmore
   2d1b4:	ldr	x9, [x0, #88]
   2d1b8:	lsl	x8, x8, #1
   2d1bc:	ldr	w11, [x0, #144]
   2d1c0:	sxtw	x10, w1
   2d1c4:	cmp	x9, x8
   2d1c8:	csel	x8, x9, x8, lt  // lt = tstop
   2d1cc:	cmp	x8, x10
   2d1d0:	mov	x19, x0
   2d1d4:	csel	x20, x8, x10, gt
   2d1d8:	cmp	w11, #0x2
   2d1dc:	b.lt	2d218 <rpl_re_set_registers@@Base+0x8304>  // b.tstop
   2d1e0:	lsr	x8, x20, #61
   2d1e4:	cbnz	x8, 2d378 <rpl_re_set_registers@@Base+0x8464>
   2d1e8:	ldr	x0, [x19, #16]
   2d1ec:	lsl	x1, x20, #2
   2d1f0:	bl	a730 <realloc@plt>
   2d1f4:	cbz	x0, 2d378 <rpl_re_set_registers@@Base+0x8464>
   2d1f8:	mov	x8, x0
   2d1fc:	ldr	x0, [x19, #24]
   2d200:	str	x8, [x19, #16]
   2d204:	cbz	x0, 2d218 <rpl_re_set_registers@@Base+0x8304>
   2d208:	lsl	x1, x20, #3
   2d20c:	bl	a730 <realloc@plt>
   2d210:	cbz	x0, 2d378 <rpl_re_set_registers@@Base+0x8464>
   2d214:	str	x0, [x19, #24]
   2d218:	ldrb	w8, [x19, #139]
   2d21c:	cbz	w8, 2d234 <rpl_re_set_registers@@Base+0x8320>
   2d220:	ldr	x0, [x19, #8]
   2d224:	mov	x1, x20
   2d228:	bl	a730 <realloc@plt>
   2d22c:	cbz	x0, 2d378 <rpl_re_set_registers@@Base+0x8464>
   2d230:	str	x0, [x19, #8]
   2d234:	ldr	x0, [x19, #184]
   2d238:	str	x20, [x19, #64]
   2d23c:	cbz	x0, 2d254 <rpl_re_set_registers@@Base+0x8340>
   2d240:	lsl	x8, x20, #3
   2d244:	add	x1, x8, #0x8
   2d248:	bl	a730 <realloc@plt>
   2d24c:	cbz	x0, 2d378 <rpl_re_set_registers@@Base+0x8464>
   2d250:	str	x0, [x19, #184]
   2d254:	ldr	w8, [x19, #144]
   2d258:	ldrb	w9, [x19, #136]
   2d25c:	cmp	w8, #0x2
   2d260:	cbz	w9, 2d278 <rpl_re_set_registers@@Base+0x8364>
   2d264:	b.lt	2d288 <rpl_re_set_registers@@Base+0x8374>  // b.tstop
   2d268:	mov	x0, x19
   2d26c:	bl	24fa8 <rpl_re_set_registers@@Base+0x94>
   2d270:	cbz	w0, 2d364 <rpl_re_set_registers@@Base+0x8450>
   2d274:	b	2d368 <rpl_re_set_registers@@Base+0x8454>
   2d278:	b.lt	2d2f0 <rpl_re_set_registers@@Base+0x83dc>  // b.tstop
   2d27c:	mov	x0, x19
   2d280:	bl	25658 <rpl_re_set_registers@@Base+0x744>
   2d284:	b	2d364 <rpl_re_set_registers@@Base+0x8450>
   2d288:	ldr	x8, [x19, #64]
   2d28c:	ldr	x9, [x19, #88]
   2d290:	ldr	x20, [x19, #48]
   2d294:	cmp	x8, x9
   2d298:	csel	x21, x9, x8, gt
   2d29c:	cmp	x20, x21
   2d2a0:	b.ge	2d2e8 <rpl_re_set_registers@@Base+0x83d4>  // b.tcont
   2d2a4:	bl	a740 <__ctype_toupper_loc@plt>
   2d2a8:	ldr	x8, [x19]
   2d2ac:	ldr	x9, [x19, #40]
   2d2b0:	add	x8, x8, x9
   2d2b4:	ldr	x9, [x19, #120]
   2d2b8:	ldrb	w8, [x8, x20]
   2d2bc:	cbnz	x9, 2d2e0 <rpl_re_set_registers@@Base+0x83cc>
   2d2c0:	ldr	x9, [x0]
   2d2c4:	ldr	x10, [x19, #8]
   2d2c8:	ldr	w8, [x9, w8, uxtw #2]
   2d2cc:	strb	w8, [x10, x20]
   2d2d0:	add	x20, x20, #0x1
   2d2d4:	cmp	x20, x21
   2d2d8:	b.lt	2d2a8 <rpl_re_set_registers@@Base+0x8394>  // b.tstop
   2d2dc:	b	2d2e8 <rpl_re_set_registers@@Base+0x83d4>
   2d2e0:	ldrb	w8, [x9, x8]
   2d2e4:	b	2d2c0 <rpl_re_set_registers@@Base+0x83ac>
   2d2e8:	stp	x20, x20, [x19, #48]
   2d2ec:	b	2d364 <rpl_re_set_registers@@Base+0x8450>
   2d2f0:	ldr	x10, [x19, #120]
   2d2f4:	cbz	x10, 2d364 <rpl_re_set_registers@@Base+0x8450>
   2d2f8:	ldr	x9, [x19, #64]
   2d2fc:	ldr	x11, [x19, #88]
   2d300:	ldr	x8, [x19, #48]
   2d304:	cmp	x9, x11
   2d308:	csel	x9, x11, x9, gt
   2d30c:	cmp	x8, x9
   2d310:	b.ge	2d360 <rpl_re_set_registers@@Base+0x844c>  // b.tcont
   2d314:	ldr	x11, [x19, #40]
   2d318:	ldp	x12, x13, [x19]
   2d31c:	add	x11, x11, x8
   2d320:	ldrb	w11, [x12, x11]
   2d324:	ldrb	w10, [x10, x11]
   2d328:	strb	w10, [x13, x8]
   2d32c:	add	x8, x8, #0x1
   2d330:	cmp	x8, x9
   2d334:	b.ge	2d360 <rpl_re_set_registers@@Base+0x844c>  // b.tcont
   2d338:	ldr	x10, [x19, #40]
   2d33c:	ldp	x11, x13, [x19]
   2d340:	ldr	x12, [x19, #120]
   2d344:	add	x10, x11, x10
   2d348:	ldrb	w10, [x10, x8]
   2d34c:	ldrb	w10, [x12, x10]
   2d350:	strb	w10, [x13, x8]
   2d354:	add	x8, x8, #0x1
   2d358:	cmp	x8, x9
   2d35c:	b.lt	2d338 <rpl_re_set_registers@@Base+0x8424>  // b.tstop
   2d360:	stp	x8, x8, [x19, #48]
   2d364:	mov	w0, wzr
   2d368:	ldp	x20, x19, [sp, #32]
   2d36c:	ldr	x21, [sp, #16]
   2d370:	ldp	x29, x30, [sp], #48
   2d374:	ret
   2d378:	mov	w0, #0xc                   	// #12
   2d37c:	ldp	x20, x19, [sp, #32]
   2d380:	ldr	x21, [sp, #16]
   2d384:	ldp	x29, x30, [sp], #48
   2d388:	ret
   2d38c:	sub	sp, sp, #0x60
   2d390:	stp	x29, x30, [sp, #32]
   2d394:	stp	x24, x23, [sp, #48]
   2d398:	stp	x22, x21, [sp, #64]
   2d39c:	stp	x20, x19, [sp, #80]
   2d3a0:	ldr	x20, [x1, #72]
   2d3a4:	ldp	x8, x9, [x1, #184]
   2d3a8:	ldr	x22, [x1, #152]
   2d3ac:	mov	x24, x2
   2d3b0:	mov	x19, x1
   2d3b4:	cmp	x20, x9
   2d3b8:	mov	x21, x0
   2d3bc:	add	x29, sp, #0x20
   2d3c0:	b.le	2d3d0 <rpl_re_set_registers@@Base+0x84bc>
   2d3c4:	str	x24, [x8, x20, lsl #3]
   2d3c8:	str	x20, [x19, #192]
   2d3cc:	b	2d4f4 <rpl_re_set_registers@@Base+0x85e0>
   2d3d0:	ldr	x9, [x8, x20, lsl #3]
   2d3d4:	cbz	x9, 2d408 <rpl_re_set_registers@@Base+0x84f4>
   2d3d8:	ldr	x2, [x9, #80]
   2d3dc:	cbz	x24, 2d410 <rpl_re_set_registers@@Base+0x84fc>
   2d3e0:	ldr	x23, [x24, #80]
   2d3e4:	mov	x0, sp
   2d3e8:	mov	x1, x23
   2d3ec:	bl	2d594 <rpl_re_set_registers@@Base+0x8680>
   2d3f0:	str	w0, [x21]
   2d3f4:	cbnz	w0, 2d55c <rpl_re_set_registers@@Base+0x8648>
   2d3f8:	ldr	x8, [x19, #72]
   2d3fc:	cmp	x8, #0x0
   2d400:	b.gt	2d430 <rpl_re_set_registers@@Base+0x851c>
   2d404:	b	2d46c <rpl_re_set_registers@@Base+0x8558>
   2d408:	str	x24, [x8, x20, lsl #3]
   2d40c:	b	2d4f4 <rpl_re_set_registers@@Base+0x85e0>
   2d410:	ldr	x8, [x2, #16]
   2d414:	ldr	q0, [x2]
   2d418:	mov	x23, xzr
   2d41c:	str	x8, [sp, #16]
   2d420:	mov	x8, x20
   2d424:	str	q0, [sp]
   2d428:	cmp	x8, #0x0
   2d42c:	b.le	2d46c <rpl_re_set_registers@@Base+0x8558>
   2d430:	ldr	x10, [x19, #88]
   2d434:	sub	x9, x8, #0x1
   2d438:	cmp	x10, x9
   2d43c:	b.eq	2d564 <rpl_re_set_registers@@Base+0x8650>  // b.none
   2d440:	ldr	w10, [x19, #144]
   2d444:	cmp	w10, #0x2
   2d448:	b.lt	2d474 <rpl_re_set_registers@@Base+0x8560>  // b.tstop
   2d44c:	ldr	x9, [x19, #16]
   2d450:	sub	x9, x9, #0x4
   2d454:	ldr	w24, [x9, x8, lsl #2]
   2d458:	cmn	w24, #0x1
   2d45c:	b.ne	2d49c <rpl_re_set_registers@@Base+0x8588>  // b.any
   2d460:	sub	x8, x8, #0x1
   2d464:	cmp	x8, #0x0
   2d468:	b.gt	2d454 <rpl_re_set_registers@@Base+0x8540>
   2d46c:	ldr	w3, [x19, #112]
   2d470:	b	2d4cc <rpl_re_set_registers@@Base+0x85b8>
   2d474:	ldr	x8, [x19, #8]
   2d478:	ldrb	w8, [x8, x9]
   2d47c:	ldr	x9, [x19, #128]
   2d480:	lsr	x10, x8, #3
   2d484:	and	x10, x10, #0x18
   2d488:	ldr	x9, [x9, x10]
   2d48c:	lsr	x9, x9, x8
   2d490:	tbz	w9, #0, 2d4c0 <rpl_re_set_registers@@Base+0x85ac>
   2d494:	mov	w3, #0x1                   	// #1
   2d498:	b	2d4cc <rpl_re_set_registers@@Base+0x85b8>
   2d49c:	ldrb	w8, [x19, #142]
   2d4a0:	cbnz	w8, 2d578 <rpl_re_set_registers@@Base+0x8664>
   2d4a4:	cmp	w24, #0xa
   2d4a8:	b.ne	2d4c8 <rpl_re_set_registers@@Base+0x85b4>  // b.any
   2d4ac:	ldrb	w8, [x19, #141]
   2d4b0:	cmp	w8, #0x0
   2d4b4:	cset	w8, ne  // ne = any
   2d4b8:	lsl	w3, w8, #1
   2d4bc:	b	2d4cc <rpl_re_set_registers@@Base+0x85b8>
   2d4c0:	cmp	w8, #0xa
   2d4c4:	b.eq	2d4ac <rpl_re_set_registers@@Base+0x8598>  // b.none
   2d4c8:	mov	w3, wzr
   2d4cc:	mov	x2, sp
   2d4d0:	mov	x0, x21
   2d4d4:	mov	x1, x22
   2d4d8:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2d4dc:	ldr	x8, [x19, #184]
   2d4e0:	mov	x24, x0
   2d4e4:	str	x0, [x8, x20, lsl #3]
   2d4e8:	cbz	x23, 2d4f4 <rpl_re_set_registers@@Base+0x85e0>
   2d4ec:	ldr	x0, [sp, #16]
   2d4f0:	bl	a970 <free@plt>
   2d4f4:	cbz	x24, 2d540 <rpl_re_set_registers@@Base+0x862c>
   2d4f8:	ldr	x8, [x22, #152]
   2d4fc:	cbz	x8, 2d540 <rpl_re_set_registers@@Base+0x862c>
   2d500:	add	x22, x24, #0x8
   2d504:	mov	x0, x19
   2d508:	mov	x1, x22
   2d50c:	mov	x2, x20
   2d510:	bl	2c7b0 <rpl_re_set_registers@@Base+0x789c>
   2d514:	str	w0, [x21]
   2d518:	cbnz	w0, 2d55c <rpl_re_set_registers@@Base+0x8648>
   2d51c:	ldrb	w8, [x24, #104]
   2d520:	tbz	w8, #6, 2d540 <rpl_re_set_registers@@Base+0x862c>
   2d524:	mov	x0, x19
   2d528:	mov	x1, x22
   2d52c:	bl	2c8bc <rpl_re_set_registers@@Base+0x79a8>
   2d530:	str	w0, [x21]
   2d534:	cbnz	w0, 2d55c <rpl_re_set_registers@@Base+0x8648>
   2d538:	ldr	x8, [x19, #184]
   2d53c:	ldr	x24, [x8, x20, lsl #3]
   2d540:	mov	x0, x24
   2d544:	ldp	x20, x19, [sp, #80]
   2d548:	ldp	x22, x21, [sp, #64]
   2d54c:	ldp	x24, x23, [sp, #48]
   2d550:	ldp	x29, x30, [sp, #32]
   2d554:	add	sp, sp, #0x60
   2d558:	ret
   2d55c:	mov	x24, xzr
   2d560:	b	2d540 <rpl_re_set_registers@@Base+0x862c>
   2d564:	ldr	w8, [x19, #160]
   2d568:	mov	w9, #0xa                   	// #10
   2d56c:	and	w8, w8, #0x2
   2d570:	eor	w3, w8, w9
   2d574:	b	2d4cc <rpl_re_set_registers@@Base+0x85b8>
   2d578:	mov	w0, w24
   2d57c:	bl	ac20 <iswalnum@plt>
   2d580:	cmp	w24, #0x5f
   2d584:	mov	w3, #0x1                   	// #1
   2d588:	b.eq	2d4cc <rpl_re_set_registers@@Base+0x85b8>  // b.none
   2d58c:	cbz	w0, 2d4a4 <rpl_re_set_registers@@Base+0x8590>
   2d590:	b	2d4cc <rpl_re_set_registers@@Base+0x85b8>
   2d594:	stp	x29, x30, [sp, #-80]!
   2d598:	stp	x20, x19, [sp, #64]
   2d59c:	mov	x20, x2
   2d5a0:	mov	x19, x0
   2d5a4:	stp	x26, x25, [sp, #16]
   2d5a8:	stp	x24, x23, [sp, #32]
   2d5ac:	stp	x22, x21, [sp, #48]
   2d5b0:	mov	x29, sp
   2d5b4:	cbz	x1, 2d6dc <rpl_re_set_registers@@Base+0x87c8>
   2d5b8:	ldr	x24, [x1, #8]
   2d5bc:	mov	x21, x1
   2d5c0:	cbz	x20, 2d6a4 <rpl_re_set_registers@@Base+0x8790>
   2d5c4:	cmp	x24, #0x1
   2d5c8:	b.lt	2d6a4 <rpl_re_set_registers@@Base+0x8790>  // b.tstop
   2d5cc:	ldr	x23, [x20, #8]
   2d5d0:	cmp	x23, #0x1
   2d5d4:	b.lt	2d6a4 <rpl_re_set_registers@@Base+0x8790>  // b.tstop
   2d5d8:	add	x8, x23, x24
   2d5dc:	lsl	x0, x8, #3
   2d5e0:	str	x8, [x19]
   2d5e4:	bl	a550 <malloc@plt>
   2d5e8:	str	x0, [x19, #16]
   2d5ec:	cbz	x0, 2d77c <rpl_re_set_registers@@Base+0x8868>
   2d5f0:	mov	x25, xzr
   2d5f4:	mov	x22, xzr
   2d5f8:	mov	x11, xzr
   2d5fc:	mov	x9, xzr
   2d600:	mov	w10, #0x1                   	// #1
   2d604:	add	x8, x0, x22, lsl #3
   2d608:	mov	x26, x11
   2d60c:	tbz	w10, #0, 2d734 <rpl_re_set_registers@@Base+0x8820>
   2d610:	ldr	x10, [x21, #16]
   2d614:	ldr	x11, [x20, #16]
   2d618:	ldr	x13, [x10, x9, lsl #3]
   2d61c:	ldr	x12, [x11, x26, lsl #3]
   2d620:	cmp	x13, x12
   2d624:	b.le	2d648 <rpl_re_set_registers@@Base+0x8734>
   2d628:	add	x26, x26, #0x1
   2d62c:	cmp	x23, x26
   2d630:	add	x22, x22, #0x1
   2d634:	cset	w10, gt
   2d638:	cmp	x24, x9
   2d63c:	str	x12, [x8], #8
   2d640:	b.gt	2d60c <rpl_re_set_registers@@Base+0x86f8>
   2d644:	b	2d67c <rpl_re_set_registers@@Base+0x8768>
   2d648:	str	x13, [x8]
   2d64c:	ldr	x23, [x20, #8]
   2d650:	ldr	x24, [x21, #8]
   2d654:	cinc	x11, x26, eq  // eq = none
   2d658:	add	x9, x9, #0x1
   2d65c:	cmp	x23, x11
   2d660:	add	x22, x22, #0x1
   2d664:	cset	w10, gt
   2d668:	cmp	x24, x9
   2d66c:	sub	x25, x25, #0x1
   2d670:	b.gt	2d604 <rpl_re_set_registers@@Base+0x86f0>
   2d674:	cmp	x13, x12
   2d678:	cinc	x26, x26, eq  // eq = none
   2d67c:	cbz	w10, 2d758 <rpl_re_set_registers@@Base+0x8844>
   2d680:	ldr	x8, [x20, #16]
   2d684:	sub	x9, x23, x26
   2d688:	add	x0, x0, x22, lsl #3
   2d68c:	lsl	x2, x9, #3
   2d690:	add	x1, x8, x26, lsl #3
   2d694:	bl	a210 <memcpy@plt>
   2d698:	sub	x8, x22, x26
   2d69c:	add	x22, x8, x23
   2d6a0:	b	2d758 <rpl_re_set_registers@@Base+0x8844>
   2d6a4:	cmp	x24, #0x1
   2d6a8:	b.lt	2d6dc <rpl_re_set_registers@@Base+0x87c8>  // b.tstop
   2d6ac:	str	x24, [x19, #8]
   2d6b0:	ldr	x20, [x21, #8]
   2d6b4:	cmp	x20, #0x1
   2d6b8:	b.lt	2d724 <rpl_re_set_registers@@Base+0x8810>  // b.tstop
   2d6bc:	lsl	x0, x24, #3
   2d6c0:	str	x24, [x19]
   2d6c4:	bl	a550 <malloc@plt>
   2d6c8:	str	x0, [x19, #16]
   2d6cc:	cbz	x0, 2d778 <rpl_re_set_registers@@Base+0x8864>
   2d6d0:	ldr	x1, [x21, #16]
   2d6d4:	lsl	x2, x20, #3
   2d6d8:	b	2d718 <rpl_re_set_registers@@Base+0x8804>
   2d6dc:	cbz	x20, 2d724 <rpl_re_set_registers@@Base+0x8810>
   2d6e0:	ldr	x8, [x20, #8]
   2d6e4:	cmp	x8, #0x1
   2d6e8:	b.lt	2d724 <rpl_re_set_registers@@Base+0x8810>  // b.tstop
   2d6ec:	str	x8, [x19, #8]
   2d6f0:	ldr	x21, [x20, #8]
   2d6f4:	cmp	x21, #0x1
   2d6f8:	b.lt	2d724 <rpl_re_set_registers@@Base+0x8810>  // b.tstop
   2d6fc:	lsl	x0, x8, #3
   2d700:	str	x8, [x19]
   2d704:	bl	a550 <malloc@plt>
   2d708:	str	x0, [x19, #16]
   2d70c:	cbz	x0, 2d778 <rpl_re_set_registers@@Base+0x8864>
   2d710:	ldr	x1, [x20, #16]
   2d714:	lsl	x2, x21, #3
   2d718:	bl	a210 <memcpy@plt>
   2d71c:	mov	w0, wzr
   2d720:	b	2d760 <rpl_re_set_registers@@Base+0x884c>
   2d724:	mov	w0, wzr
   2d728:	stp	xzr, xzr, [x19]
   2d72c:	str	xzr, [x19, #16]
   2d730:	b	2d760 <rpl_re_set_registers@@Base+0x884c>
   2d734:	ldr	x10, [x21, #16]
   2d738:	sub	x11, x24, x9
   2d73c:	lsl	x2, x11, #3
   2d740:	mov	x0, x8
   2d744:	add	x1, x10, x9, lsl #3
   2d748:	bl	a210 <memcpy@plt>
   2d74c:	ldr	x8, [x21, #8]
   2d750:	add	x8, x8, x25
   2d754:	add	x22, x8, x22
   2d758:	mov	w0, wzr
   2d75c:	str	x22, [x19, #8]
   2d760:	ldp	x20, x19, [sp, #64]
   2d764:	ldp	x22, x21, [sp, #48]
   2d768:	ldp	x24, x23, [sp, #32]
   2d76c:	ldp	x26, x25, [sp, #16]
   2d770:	ldp	x29, x30, [sp], #80
   2d774:	ret
   2d778:	stp	xzr, xzr, [x19]
   2d77c:	mov	w0, #0xc                   	// #12
   2d780:	b	2d760 <rpl_re_set_registers@@Base+0x884c>
   2d784:	stp	x29, x30, [sp, #-96]!
   2d788:	stp	x28, x27, [sp, #16]
   2d78c:	stp	x26, x25, [sp, #32]
   2d790:	stp	x24, x23, [sp, #48]
   2d794:	stp	x22, x21, [sp, #64]
   2d798:	stp	x20, x19, [sp, #80]
   2d79c:	mov	x22, x2
   2d7a0:	mov	x23, x3
   2d7a4:	ldr	x2, [x2]
   2d7a8:	ldr	x3, [x22, #8]
   2d7ac:	mov	x20, x4
   2d7b0:	mov	x21, x1
   2d7b4:	add	x1, x22, #0x10
   2d7b8:	mov	w6, #0x8                   	// #8
   2d7bc:	mov	x4, x23
   2d7c0:	mov	x5, x20
   2d7c4:	mov	x29, sp
   2d7c8:	mov	x19, x0
   2d7cc:	bl	2d950 <rpl_re_set_registers@@Base+0x8a3c>
   2d7d0:	cbz	w0, 2d7f0 <rpl_re_set_registers@@Base+0x88dc>
   2d7d4:	ldp	x20, x19, [sp, #80]
   2d7d8:	ldp	x22, x21, [sp, #64]
   2d7dc:	ldp	x24, x23, [sp, #48]
   2d7e0:	ldp	x26, x25, [sp, #32]
   2d7e4:	ldp	x28, x27, [sp, #16]
   2d7e8:	ldp	x29, x30, [sp], #96
   2d7ec:	ret
   2d7f0:	ldp	x27, x8, [x19, #200]
   2d7f4:	ldr	x26, [x21]
   2d7f8:	ldr	x25, [x22, #8]
   2d7fc:	cmp	x27, x8
   2d800:	b.ge	2d814 <rpl_re_set_registers@@Base+0x8900>  // b.tcont
   2d804:	ldr	x24, [x19, #216]
   2d808:	subs	x8, x27, #0x1
   2d80c:	b.ge	2d85c <rpl_re_set_registers@@Base+0x8948>  // b.tcont
   2d810:	b	2d880 <rpl_re_set_registers@@Base+0x896c>
   2d814:	ldr	x0, [x19, #216]
   2d818:	add	x8, x8, x8, lsl #2
   2d81c:	lsl	x1, x8, #4
   2d820:	bl	a730 <realloc@plt>
   2d824:	cbz	x0, 2d940 <rpl_re_set_registers@@Base+0x8a2c>
   2d828:	ldp	x27, x28, [x19, #200]
   2d82c:	mov	w8, #0x28                  	// #40
   2d830:	mov	x24, x0
   2d834:	str	x0, [x19, #216]
   2d838:	madd	x0, x27, x8, x0
   2d83c:	add	x8, x28, x28, lsl #2
   2d840:	lsl	x2, x8, #3
   2d844:	mov	w1, wzr
   2d848:	bl	a640 <memset@plt>
   2d84c:	lsl	x8, x28, #1
   2d850:	str	x8, [x19, #208]
   2d854:	subs	x8, x27, #0x1
   2d858:	b.lt	2d880 <rpl_re_set_registers@@Base+0x896c>  // b.tstop
   2d85c:	mov	w9, #0x28                  	// #40
   2d860:	madd	x9, x8, x9, x24
   2d864:	ldr	x9, [x9, #8]
   2d868:	cmp	x9, x20
   2d86c:	b.ne	2d880 <rpl_re_set_registers@@Base+0x896c>  // b.any
   2d870:	mov	w9, #0x28                  	// #40
   2d874:	madd	x8, x8, x9, x24
   2d878:	mov	w9, #0x1                   	// #1
   2d87c:	strb	w9, [x8, #32]
   2d880:	mov	w9, #0x28                  	// #40
   2d884:	subs	x8, x25, x26
   2d888:	add	x10, x27, #0x1
   2d88c:	madd	x9, x27, x9, x24
   2d890:	csetm	w11, eq  // eq = none
   2d894:	stp	x23, x20, [x9]
   2d898:	stp	x26, x25, [x9, #16]
   2d89c:	strh	w11, [x9, #34]
   2d8a0:	str	x10, [x19, #200]
   2d8a4:	strb	wzr, [x9, #32]
   2d8a8:	ldrsw	x9, [x19, #224]
   2d8ac:	cmp	x8, x9
   2d8b0:	b.le	2d8b8 <rpl_re_set_registers@@Base+0x89a4>
   2d8b4:	str	w8, [x19, #224]
   2d8b8:	ldr	x9, [x22, #8]
   2d8bc:	ldr	x10, [x21]
   2d8c0:	ldr	x8, [x19, #64]
   2d8c4:	ldr	x21, [x19, #192]
   2d8c8:	add	x9, x9, x20
   2d8cc:	sub	x20, x9, x10
   2d8d0:	cmp	x8, x20
   2d8d4:	b.gt	2d8e4 <rpl_re_set_registers@@Base+0x89d0>
   2d8d8:	ldr	x9, [x19, #88]
   2d8dc:	cmp	x8, x9
   2d8e0:	b.lt	2d8fc <rpl_re_set_registers@@Base+0x89e8>  // b.tstop
   2d8e4:	ldr	x8, [x19, #48]
   2d8e8:	cmp	x8, x20
   2d8ec:	b.gt	2d90c <rpl_re_set_registers@@Base+0x89f8>
   2d8f0:	ldr	x9, [x19, #88]
   2d8f4:	cmp	x8, x9
   2d8f8:	b.ge	2d90c <rpl_re_set_registers@@Base+0x89f8>  // b.tcont
   2d8fc:	add	w1, w20, #0x1
   2d900:	mov	x0, x19
   2d904:	bl	2d194 <rpl_re_set_registers@@Base+0x8280>
   2d908:	cbnz	w0, 2d7d4 <rpl_re_set_registers@@Base+0x88c0>
   2d90c:	subs	x8, x20, x21
   2d910:	b.le	2d938 <rpl_re_set_registers@@Base+0x8a24>
   2d914:	ldr	x9, [x19, #184]
   2d918:	lsl	x2, x8, #3
   2d91c:	mov	w1, wzr
   2d920:	add	x9, x9, x21, lsl #3
   2d924:	add	x0, x9, #0x8
   2d928:	bl	a640 <memset@plt>
   2d92c:	mov	w0, wzr
   2d930:	str	x20, [x19, #192]
   2d934:	b	2d7d4 <rpl_re_set_registers@@Base+0x88c0>
   2d938:	mov	w0, wzr
   2d93c:	b	2d7d4 <rpl_re_set_registers@@Base+0x88c0>
   2d940:	ldr	x0, [x19, #216]
   2d944:	bl	a970 <free@plt>
   2d948:	mov	w0, #0xc                   	// #12
   2d94c:	b	2d7d4 <rpl_re_set_registers@@Base+0x88c0>
   2d950:	sub	sp, sp, #0x100
   2d954:	stp	x29, x30, [sp, #160]
   2d958:	stp	x28, x27, [sp, #176]
   2d95c:	stp	x26, x25, [sp, #192]
   2d960:	stp	x24, x23, [sp, #208]
   2d964:	stp	x22, x21, [sp, #224]
   2d968:	stp	x20, x19, [sp, #240]
   2d96c:	ldr	x8, [x0, #152]
   2d970:	add	x29, sp, #0xa0
   2d974:	stur	wzr, [x29, #-36]
   2d978:	lsl	x10, x2, #4
   2d97c:	str	x8, [sp, #48]
   2d980:	ldr	x8, [x8]
   2d984:	ldrsw	x9, [x0, #224]
   2d988:	ldr	x21, [x1, #8]
   2d98c:	mov	x22, x2
   2d990:	ldr	x8, [x8, x10]
   2d994:	mov	x27, x1
   2d998:	mov	x20, x0
   2d99c:	mov	x19, x3
   2d9a0:	str	x8, [sp, #56]
   2d9a4:	add	x8, x9, x5
   2d9a8:	cmp	x21, x8
   2d9ac:	str	w6, [sp, #44]
   2d9b0:	mov	x26, x4
   2d9b4:	str	x5, [sp, #32]
   2d9b8:	str	x4, [sp, #8]
   2d9bc:	b.le	2e138 <rpl_re_set_registers@@Base+0x9224>
   2d9c0:	ldr	x23, [x27, #16]
   2d9c4:	mov	x24, x5
   2d9c8:	ldr	x8, [x27]
   2d9cc:	ldr	x28, [x20, #184]
   2d9d0:	ldr	x21, [x20, #72]
   2d9d4:	str	x23, [x20, #184]
   2d9d8:	cmp	x8, #0x0
   2d9dc:	csel	x26, x19, x8, eq  // eq = none
   2d9e0:	cmp	x26, #0x0
   2d9e4:	str	x26, [x20, #72]
   2d9e8:	b.le	2da2c <rpl_re_set_registers@@Base+0x8b18>
   2d9ec:	ldr	x9, [x20, #88]
   2d9f0:	sub	x8, x26, #0x1
   2d9f4:	cmp	x9, x8
   2d9f8:	b.eq	2e188 <rpl_re_set_registers@@Base+0x9274>  // b.none
   2d9fc:	ldr	w9, [x20, #144]
   2da00:	cmp	w9, #0x2
   2da04:	b.lt	2da34 <rpl_re_set_registers@@Base+0x8b20>  // b.tstop
   2da08:	ldr	x8, [x20, #16]
   2da0c:	mov	x9, x26
   2da10:	sub	x8, x8, #0x4
   2da14:	ldr	w25, [x8, x9, lsl #2]
   2da18:	cmn	w25, #0x1
   2da1c:	b.ne	2da5c <rpl_re_set_registers@@Base+0x8b48>  // b.any
   2da20:	sub	x9, x9, #0x1
   2da24:	cmp	x9, #0x0
   2da28:	b.gt	2da14 <rpl_re_set_registers@@Base+0x8b00>
   2da2c:	ldr	w23, [x20, #112]
   2da30:	b	2da8c <rpl_re_set_registers@@Base+0x8b78>
   2da34:	ldr	x9, [x20, #8]
   2da38:	ldrb	w8, [x9, x8]
   2da3c:	ldr	x9, [x20, #128]
   2da40:	lsr	x10, x8, #3
   2da44:	and	x10, x10, #0x18
   2da48:	ldr	x9, [x9, x10]
   2da4c:	lsr	x9, x9, x8
   2da50:	tbz	w9, #0, 2da80 <rpl_re_set_registers@@Base+0x8b6c>
   2da54:	mov	w23, #0x1                   	// #1
   2da58:	b	2da8c <rpl_re_set_registers@@Base+0x8b78>
   2da5c:	ldrb	w8, [x20, #142]
   2da60:	cbnz	w8, 2e1bc <rpl_re_set_registers@@Base+0x92a8>
   2da64:	cmp	w25, #0xa
   2da68:	b.ne	2da88 <rpl_re_set_registers@@Base+0x8b74>  // b.any
   2da6c:	ldrb	w8, [x20, #141]
   2da70:	cmp	w8, #0x0
   2da74:	cset	w8, ne  // ne = any
   2da78:	lsl	w23, w8, #1
   2da7c:	b	2da8c <rpl_re_set_registers@@Base+0x8b78>
   2da80:	cmp	w8, #0xa
   2da84:	b.eq	2da6c <rpl_re_set_registers@@Base+0x8b58>  // b.none
   2da88:	mov	w23, wzr
   2da8c:	cmp	x26, x19
   2da90:	stp	x28, x27, [sp, #16]
   2da94:	b.ne	2db30 <rpl_re_set_registers@@Base+0x8c1c>  // b.any
   2da98:	mov	w8, #0x1                   	// #1
   2da9c:	dup	v0.2d, x8
   2daa0:	mov	w0, #0x8                   	// #8
   2daa4:	stur	q0, [x29, #-64]
   2daa8:	bl	a550 <malloc@plt>
   2daac:	stur	x0, [x29, #-48]
   2dab0:	cbz	x0, 2e1ac <rpl_re_set_registers@@Base+0x9298>
   2dab4:	str	x22, [x0]
   2dab8:	ldp	x0, x22, [sp, #48]
   2dabc:	ldr	w3, [sp, #44]
   2dac0:	sub	x1, x29, #0x40
   2dac4:	stur	wzr, [x29, #-36]
   2dac8:	mov	x2, x22
   2dacc:	bl	2e1e0 <rpl_re_set_registers@@Base+0x92cc>
   2dad0:	stur	w0, [x29, #-36]
   2dad4:	cbnz	w0, 2e19c <rpl_re_set_registers@@Base+0x9288>
   2dad8:	ldur	x8, [x29, #-56]
   2dadc:	cbz	x8, 2db00 <rpl_re_set_registers@@Base+0x8bec>
   2dae0:	ldr	w4, [sp, #44]
   2dae4:	sub	x1, x29, #0x40
   2dae8:	mov	x0, x20
   2daec:	mov	x2, x26
   2daf0:	mov	x3, x22
   2daf4:	bl	2e324 <rpl_re_set_registers@@Base+0x9410>
   2daf8:	stur	w0, [x29, #-36]
   2dafc:	cbnz	w0, 2e19c <rpl_re_set_registers@@Base+0x9288>
   2db00:	ldr	x1, [sp, #48]
   2db04:	sub	x0, x29, #0x24
   2db08:	sub	x2, x29, #0x40
   2db0c:	mov	w3, w23
   2db10:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2db14:	mov	x28, x0
   2db18:	cbnz	x0, 2db24 <rpl_re_set_registers@@Base+0x8c10>
   2db1c:	ldur	w8, [x29, #-36]
   2db20:	cbnz	w8, 2e104 <rpl_re_set_registers@@Base+0x91f0>
   2db24:	ldr	x8, [x20, #184]
   2db28:	str	x28, [x8, x26, lsl #3]
   2db2c:	b	2dba4 <rpl_re_set_registers@@Base+0x8c90>
   2db30:	ldr	x8, [x20, #184]
   2db34:	ldr	x28, [x8, x26, lsl #3]
   2db38:	cbz	x28, 2db54 <rpl_re_set_registers@@Base+0x8c40>
   2db3c:	ldrb	w8, [x28, #104]
   2db40:	ldr	x22, [sp, #56]
   2db44:	tbnz	w8, #6, 2db64 <rpl_re_set_registers@@Base+0x8c50>
   2db48:	stp	xzr, xzr, [x29, #-64]
   2db4c:	stur	xzr, [x29, #-48]
   2db50:	b	2dba4 <rpl_re_set_registers@@Base+0x8c90>
   2db54:	ldr	x22, [sp, #56]
   2db58:	stp	xzr, xzr, [x29, #-64]
   2db5c:	stur	xzr, [x29, #-48]
   2db60:	b	2dba4 <rpl_re_set_registers@@Base+0x8c90>
   2db64:	ldr	x8, [x28, #16]
   2db68:	cmp	x8, #0x1
   2db6c:	stur	x8, [x29, #-56]
   2db70:	b.lt	2e0e4 <rpl_re_set_registers@@Base+0x91d0>  // b.tstop
   2db74:	lsl	x19, x8, #3
   2db78:	mov	x0, x19
   2db7c:	stur	x8, [x29, #-64]
   2db80:	bl	a550 <malloc@plt>
   2db84:	stur	x0, [x29, #-48]
   2db88:	cbz	x0, 2e1ac <rpl_re_set_registers@@Base+0x9298>
   2db8c:	ldr	x1, [x28, #24]
   2db90:	mov	x2, x19
   2db94:	bl	a210 <memcpy@plt>
   2db98:	ldrb	w8, [x28, #104]
   2db9c:	stur	wzr, [x29, #-36]
   2dba0:	tbnz	w8, #6, 2dae0 <rpl_re_set_registers@@Base+0x8bcc>
   2dba4:	cmp	x26, x24
   2dba8:	b.ge	2e028 <rpl_re_set_registers@@Base+0x9114>  // b.tcont
   2dbac:	str	x21, [sp]
   2dbb0:	ldr	w21, [sp, #44]
   2dbb4:	ldr	x23, [sp, #48]
   2dbb8:	mov	w8, #0x1                   	// #1
   2dbbc:	mov	x9, xzr
   2dbc0:	dup	v0.2d, x8
   2dbc4:	str	q0, [sp, #80]
   2dbc8:	b	2dbe8 <rpl_re_set_registers@@Base+0x8cd4>
   2dbcc:	ldp	x9, x26, [sp, #64]
   2dbd0:	ldr	x8, [x20, #184]
   2dbd4:	cmp	x28, #0x0
   2dbd8:	csinc	x9, xzr, x9, ne  // ne = any
   2dbdc:	cmp	x26, x24
   2dbe0:	str	x28, [x8, x26, lsl #3]
   2dbe4:	b.eq	2e020 <rpl_re_set_registers@@Base+0x910c>  // b.none
   2dbe8:	ldrsw	x8, [x20, #224]
   2dbec:	cmp	x9, x8
   2dbf0:	b.gt	2e024 <rpl_re_set_registers@@Base+0x9110>
   2dbf4:	stur	xzr, [x29, #-56]
   2dbf8:	ldr	x8, [x20, #184]
   2dbfc:	str	x9, [sp, #64]
   2dc00:	add	x9, x26, #0x1
   2dc04:	str	x9, [sp, #72]
   2dc08:	ldr	x8, [x8, x9, lsl #3]
   2dc0c:	cbz	x8, 2dc24 <rpl_re_set_registers@@Base+0x8d10>
   2dc10:	add	x1, x8, #0x8
   2dc14:	sub	x0, x29, #0x40
   2dc18:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   2dc1c:	stur	w0, [x29, #-36]
   2dc20:	cbnz	w0, 2e104 <rpl_re_set_registers@@Base+0x91f0>
   2dc24:	cbz	x28, 2def0 <rpl_re_set_registers@@Base+0x8fdc>
   2dc28:	ldr	x22, [x20, #152]
   2dc2c:	stur	wzr, [x29, #-4]
   2dc30:	stp	xzr, xzr, [x29, #-32]
   2dc34:	stur	xzr, [x29, #-16]
   2dc38:	ldr	x8, [x28, #40]
   2dc3c:	cmp	x8, #0x1
   2dc40:	b.lt	2dee0 <rpl_re_set_registers@@Base+0x8fcc>  // b.tstop
   2dc44:	mov	x24, xzr
   2dc48:	b	2dc78 <rpl_re_set_registers@@Base+0x8d64>
   2dc4c:	ldur	x8, [x29, #-56]
   2dc50:	cbnz	x8, 2dda4 <rpl_re_set_registers@@Base+0x8e90>
   2dc54:	ldur	x8, [x29, #-48]
   2dc58:	str	x19, [x8]
   2dc5c:	ldur	x8, [x29, #-56]
   2dc60:	add	x8, x8, #0x1
   2dc64:	stur	x8, [x29, #-56]
   2dc68:	ldr	x8, [x28, #40]
   2dc6c:	add	x24, x24, #0x1
   2dc70:	cmp	x24, x8
   2dc74:	b.ge	2decc <rpl_re_set_registers@@Base+0x8fb8>  // b.tcont
   2dc78:	ldr	x8, [x28, #48]
   2dc7c:	ldr	x19, [x8, x24, lsl #3]
   2dc80:	ldr	x8, [x22]
   2dc84:	add	x9, x8, x19, lsl #4
   2dc88:	ldrb	w9, [x9, #10]
   2dc8c:	tbz	w9, #4, 2dd60 <rpl_re_set_registers@@Base+0x8e4c>
   2dc90:	mov	x0, x22
   2dc94:	mov	x1, x19
   2dc98:	mov	x2, x20
   2dc9c:	mov	x3, x26
   2dca0:	bl	2eb84 <rpl_re_set_registers@@Base+0x9c70>
   2dca4:	mov	w23, w0
   2dca8:	cmp	w0, #0x2
   2dcac:	b.lt	2dd58 <rpl_re_set_registers@@Base+0x8e44>  // b.tstop
   2dcb0:	ldr	x8, [x20, #184]
   2dcb4:	ldr	x9, [x22, #24]
   2dcb8:	add	x27, x26, w23, uxtw
   2dcbc:	ldr	x8, [x8, x27, lsl #3]
   2dcc0:	ldr	x21, [x9, x19, lsl #3]
   2dcc4:	stur	xzr, [x29, #-24]
   2dcc8:	cbz	x8, 2dce0 <rpl_re_set_registers@@Base+0x8dcc>
   2dccc:	add	x1, x8, #0x8
   2dcd0:	sub	x0, x29, #0x20
   2dcd4:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   2dcd8:	stur	w0, [x29, #-4]
   2dcdc:	cbnz	w0, 2e10c <rpl_re_set_registers@@Base+0x91f8>
   2dce0:	ldur	x9, [x29, #-32]
   2dce4:	cbz	x9, 2dd08 <rpl_re_set_registers@@Base+0x8df4>
   2dce8:	ldur	x8, [x29, #-24]
   2dcec:	cbnz	x8, 2de38 <rpl_re_set_registers@@Base+0x8f24>
   2dcf0:	ldur	x8, [x29, #-16]
   2dcf4:	str	x21, [x8]
   2dcf8:	ldur	x8, [x29, #-24]
   2dcfc:	add	x8, x8, #0x1
   2dd00:	stur	x8, [x29, #-24]
   2dd04:	b	2dd28 <rpl_re_set_registers@@Base+0x8e14>
   2dd08:	mov	w8, #0x1                   	// #1
   2dd0c:	dup	v0.2d, x8
   2dd10:	mov	w0, #0x8                   	// #8
   2dd14:	stur	q0, [x29, #-32]
   2dd18:	bl	a550 <malloc@plt>
   2dd1c:	stur	x0, [x29, #-16]
   2dd20:	cbz	x0, 2e12c <rpl_re_set_registers@@Base+0x9218>
   2dd24:	str	x21, [x0]
   2dd28:	sub	x0, x29, #0x4
   2dd2c:	sub	x2, x29, #0x20
   2dd30:	mov	x1, x22
   2dd34:	bl	2e908 <rpl_re_set_registers@@Base+0x99f4>
   2dd38:	ldr	x8, [x20, #184]
   2dd3c:	lsl	x9, x27, #3
   2dd40:	str	x0, [x8, x9]
   2dd44:	ldr	x8, [x20, #184]
   2dd48:	ldr	x8, [x8, x9]
   2dd4c:	cbnz	x8, 2dd58 <rpl_re_set_registers@@Base+0x8e44>
   2dd50:	ldur	w25, [x29, #-4]
   2dd54:	cbnz	w25, 2e110 <rpl_re_set_registers@@Base+0x91fc>
   2dd58:	cbnz	w23, 2dd74 <rpl_re_set_registers@@Base+0x8e60>
   2dd5c:	ldr	x8, [x22]
   2dd60:	add	x1, x8, x19, lsl #4
   2dd64:	mov	x0, x20
   2dd68:	mov	x2, x26
   2dd6c:	bl	2eefc <rpl_re_set_registers@@Base+0x9fe8>
   2dd70:	tbz	w0, #0, 2dc68 <rpl_re_set_registers@@Base+0x8d54>
   2dd74:	ldr	x8, [x22, #24]
   2dd78:	ldur	x9, [x29, #-64]
   2dd7c:	ldr	x19, [x8, x19, lsl #3]
   2dd80:	cbnz	x9, 2dc4c <rpl_re_set_registers@@Base+0x8d38>
   2dd84:	ldr	q0, [sp, #80]
   2dd88:	mov	w0, #0x8                   	// #8
   2dd8c:	stur	q0, [x29, #-64]
   2dd90:	bl	a550 <malloc@plt>
   2dd94:	stur	x0, [x29, #-48]
   2dd98:	cbz	x0, 2e0f4 <rpl_re_set_registers@@Base+0x91e0>
   2dd9c:	str	x19, [x0]
   2dda0:	b	2dc68 <rpl_re_set_registers@@Base+0x8d54>
   2dda4:	cmp	x9, x8
   2dda8:	b.ne	2ddd0 <rpl_re_set_registers@@Base+0x8ebc>  // b.any
   2ddac:	ldur	x0, [x29, #-48]
   2ddb0:	lsl	x8, x9, #1
   2ddb4:	lsl	x1, x9, #4
   2ddb8:	stur	x8, [x29, #-64]
   2ddbc:	bl	a730 <realloc@plt>
   2ddc0:	cbz	x0, 2e0f8 <rpl_re_set_registers@@Base+0x91e4>
   2ddc4:	ldur	x8, [x29, #-56]
   2ddc8:	stur	x0, [x29, #-48]
   2ddcc:	b	2ddd4 <rpl_re_set_registers@@Base+0x8ec0>
   2ddd0:	ldur	x0, [x29, #-48]
   2ddd4:	ldr	x9, [x0]
   2ddd8:	cmp	x9, x19
   2dddc:	b.le	2de08 <rpl_re_set_registers@@Base+0x8ef4>
   2dde0:	cmp	x8, #0x1
   2dde4:	b.lt	2de30 <rpl_re_set_registers@@Base+0x8f1c>  // b.tstop
   2dde8:	mov	x9, x8
   2ddec:	add	x10, x0, x9, lsl #3
   2ddf0:	ldur	x11, [x10, #-8]
   2ddf4:	subs	x8, x9, #0x1
   2ddf8:	mov	x9, x8
   2ddfc:	str	x11, [x10]
   2de00:	b.gt	2ddec <rpl_re_set_registers@@Base+0x8ed8>
   2de04:	b	2de30 <rpl_re_set_registers@@Base+0x8f1c>
   2de08:	add	x9, x0, x8, lsl #3
   2de0c:	ldur	x9, [x9, #-8]
   2de10:	cmp	x9, x19
   2de14:	b.le	2de30 <rpl_re_set_registers@@Base+0x8f1c>
   2de18:	add	x10, x0, x8, lsl #3
   2de1c:	str	x9, [x10]
   2de20:	ldur	x9, [x10, #-16]
   2de24:	sub	x8, x8, #0x1
   2de28:	cmp	x9, x19
   2de2c:	b.gt	2de18 <rpl_re_set_registers@@Base+0x8f04>
   2de30:	str	x19, [x0, x8, lsl #3]
   2de34:	b	2dc5c <rpl_re_set_registers@@Base+0x8d48>
   2de38:	cmp	x9, x8
   2de3c:	b.ne	2de64 <rpl_re_set_registers@@Base+0x8f50>  // b.any
   2de40:	ldur	x0, [x29, #-16]
   2de44:	lsl	x8, x9, #1
   2de48:	lsl	x1, x9, #4
   2de4c:	stur	x8, [x29, #-32]
   2de50:	bl	a730 <realloc@plt>
   2de54:	cbz	x0, 2e0f8 <rpl_re_set_registers@@Base+0x91e4>
   2de58:	ldur	x8, [x29, #-24]
   2de5c:	stur	x0, [x29, #-16]
   2de60:	b	2de68 <rpl_re_set_registers@@Base+0x8f54>
   2de64:	ldur	x0, [x29, #-16]
   2de68:	ldr	x9, [x0]
   2de6c:	cmp	x9, x21
   2de70:	b.le	2de9c <rpl_re_set_registers@@Base+0x8f88>
   2de74:	cmp	x8, #0x1
   2de78:	b.lt	2dec4 <rpl_re_set_registers@@Base+0x8fb0>  // b.tstop
   2de7c:	mov	x9, x8
   2de80:	add	x10, x0, x9, lsl #3
   2de84:	ldur	x11, [x10, #-8]
   2de88:	subs	x8, x9, #0x1
   2de8c:	mov	x9, x8
   2de90:	str	x11, [x10]
   2de94:	b.gt	2de80 <rpl_re_set_registers@@Base+0x8f6c>
   2de98:	b	2dec4 <rpl_re_set_registers@@Base+0x8fb0>
   2de9c:	add	x9, x0, x8, lsl #3
   2dea0:	ldur	x9, [x9, #-8]
   2dea4:	cmp	x9, x21
   2dea8:	b.le	2dec4 <rpl_re_set_registers@@Base+0x8fb0>
   2deac:	add	x10, x0, x8, lsl #3
   2deb0:	str	x9, [x10]
   2deb4:	ldur	x9, [x10, #-16]
   2deb8:	sub	x8, x8, #0x1
   2debc:	cmp	x9, x21
   2dec0:	b.gt	2deac <rpl_re_set_registers@@Base+0x8f98>
   2dec4:	str	x21, [x0, x8, lsl #3]
   2dec8:	b	2dcf8 <rpl_re_set_registers@@Base+0x8de4>
   2decc:	ldur	x0, [x29, #-16]
   2ded0:	ldr	x24, [sp, #32]
   2ded4:	ldr	w21, [sp, #44]
   2ded8:	ldr	x23, [sp, #48]
   2dedc:	b	2dee4 <rpl_re_set_registers@@Base+0x8fd0>
   2dee0:	mov	x0, xzr
   2dee4:	bl	a970 <free@plt>
   2dee8:	ldr	x22, [sp, #56]
   2deec:	stur	wzr, [x29, #-36]
   2def0:	ldur	x8, [x29, #-56]
   2def4:	cbz	x8, 2df34 <rpl_re_set_registers@@Base+0x9020>
   2def8:	sub	x1, x29, #0x40
   2defc:	mov	x0, x23
   2df00:	mov	x2, x22
   2df04:	mov	w3, w21
   2df08:	bl	2e1e0 <rpl_re_set_registers@@Base+0x92cc>
   2df0c:	stur	w0, [x29, #-36]
   2df10:	cbnz	w0, 2e104 <rpl_re_set_registers@@Base+0x91f0>
   2df14:	ldr	x2, [sp, #72]
   2df18:	sub	x1, x29, #0x40
   2df1c:	mov	x0, x20
   2df20:	mov	x3, x22
   2df24:	mov	w4, w21
   2df28:	bl	2e324 <rpl_re_set_registers@@Base+0x9410>
   2df2c:	stur	w0, [x29, #-36]
   2df30:	cbnz	w0, 2e104 <rpl_re_set_registers@@Base+0x91f0>
   2df34:	tbnz	x26, #63, 2df6c <rpl_re_set_registers@@Base+0x9058>
   2df38:	ldr	x8, [x20, #88]
   2df3c:	cmp	x8, x26
   2df40:	b.eq	2dff0 <rpl_re_set_registers@@Base+0x90dc>  // b.none
   2df44:	ldr	w8, [x20, #144]
   2df48:	cmp	w8, #0x2
   2df4c:	b.lt	2df74 <rpl_re_set_registers@@Base+0x9060>  // b.tstop
   2df50:	ldr	x8, [x20, #16]
   2df54:	ldr	w19, [x8, x26, lsl #2]
   2df58:	cmn	w19, #0x1
   2df5c:	b.ne	2df9c <rpl_re_set_registers@@Base+0x9088>  // b.any
   2df60:	cmp	x26, #0x0
   2df64:	sub	x26, x26, #0x1
   2df68:	b.gt	2df54 <rpl_re_set_registers@@Base+0x9040>
   2df6c:	ldr	w3, [x20, #112]
   2df70:	b	2dfcc <rpl_re_set_registers@@Base+0x90b8>
   2df74:	ldr	x8, [x20, #8]
   2df78:	ldr	x9, [x20, #128]
   2df7c:	ldrb	w8, [x8, x26]
   2df80:	lsr	x10, x8, #3
   2df84:	and	x10, x10, #0x18
   2df88:	ldr	x9, [x9, x10]
   2df8c:	lsr	x9, x9, x8
   2df90:	tbz	w9, #0, 2dfc0 <rpl_re_set_registers@@Base+0x90ac>
   2df94:	mov	w3, #0x1                   	// #1
   2df98:	b	2dfcc <rpl_re_set_registers@@Base+0x90b8>
   2df9c:	ldrb	w8, [x20, #142]
   2dfa0:	cbnz	w8, 2e004 <rpl_re_set_registers@@Base+0x90f0>
   2dfa4:	cmp	w19, #0xa
   2dfa8:	b.ne	2dfc8 <rpl_re_set_registers@@Base+0x90b4>  // b.any
   2dfac:	ldrb	w8, [x20, #141]
   2dfb0:	cmp	w8, #0x0
   2dfb4:	cset	w8, ne  // ne = any
   2dfb8:	lsl	w3, w8, #1
   2dfbc:	b	2dfcc <rpl_re_set_registers@@Base+0x90b8>
   2dfc0:	cmp	w8, #0xa
   2dfc4:	b.eq	2dfac <rpl_re_set_registers@@Base+0x9098>  // b.none
   2dfc8:	mov	w3, wzr
   2dfcc:	sub	x0, x29, #0x24
   2dfd0:	sub	x2, x29, #0x40
   2dfd4:	mov	x1, x23
   2dfd8:	bl	2a604 <rpl_re_set_registers@@Base+0x56f0>
   2dfdc:	mov	x28, x0
   2dfe0:	cbnz	x0, 2dbcc <rpl_re_set_registers@@Base+0x8cb8>
   2dfe4:	ldur	w8, [x29, #-36]
   2dfe8:	cbz	w8, 2dbcc <rpl_re_set_registers@@Base+0x8cb8>
   2dfec:	b	2e104 <rpl_re_set_registers@@Base+0x91f0>
   2dff0:	ldr	w8, [x20, #160]
   2dff4:	mov	w9, #0xa                   	// #10
   2dff8:	and	w8, w8, #0x2
   2dffc:	eor	w3, w8, w9
   2e000:	b	2dfcc <rpl_re_set_registers@@Base+0x90b8>
   2e004:	mov	w0, w19
   2e008:	bl	ac20 <iswalnum@plt>
   2e00c:	cmp	w19, #0x5f
   2e010:	mov	w3, #0x1                   	// #1
   2e014:	b.eq	2dfcc <rpl_re_set_registers@@Base+0x90b8>  // b.none
   2e018:	cbz	w0, 2dfa4 <rpl_re_set_registers@@Base+0x9090>
   2e01c:	b	2dfcc <rpl_re_set_registers@@Base+0x90b8>
   2e020:	mov	x26, x24
   2e024:	ldr	x21, [sp]
   2e028:	ldur	x0, [x29, #-48]
   2e02c:	bl	a970 <free@plt>
   2e030:	ldr	x8, [x20, #184]
   2e034:	ldr	x9, [x8, x24, lsl #3]
   2e038:	ldr	x8, [sp, #24]
   2e03c:	cmp	x9, #0x0
   2e040:	str	x26, [x8]
   2e044:	ldr	x8, [sp, #16]
   2e048:	str	x21, [x20, #72]
   2e04c:	str	x8, [x20, #184]
   2e050:	add	x8, x9, #0x8
   2e054:	csel	x8, xzr, x8, eq  // eq = none
   2e058:	cbz	x9, 2e0bc <rpl_re_set_registers@@Base+0x91a8>
   2e05c:	ldr	x9, [x8, #8]
   2e060:	subs	x9, x9, #0x1
   2e064:	b.lt	2e0bc <rpl_re_set_registers@@Base+0x91a8>  // b.tstop
   2e068:	ldr	x8, [x8, #16]
   2e06c:	mov	x10, xzr
   2e070:	b.eq	2e0ac <rpl_re_set_registers@@Base+0x9198>  // b.none
   2e074:	ldr	x13, [sp, #8]
   2e078:	add	x11, x10, x9
   2e07c:	lsr	x11, x11, #1
   2e080:	ldr	x12, [x8, x11, lsl #3]
   2e084:	cmp	x12, x13
   2e088:	csinc	x10, x10, x11, ge  // ge = tcont
   2e08c:	csel	x9, x9, x11, lt  // lt = tstop
   2e090:	cmp	x10, x9
   2e094:	b.cc	2e078 <rpl_re_set_registers@@Base+0x9164>  // b.lo, b.ul, b.last
   2e098:	ldr	x8, [x8, x10, lsl #3]
   2e09c:	cmp	x8, x13
   2e0a0:	b.ne	2e0bc <rpl_re_set_registers@@Base+0x91a8>  // b.any
   2e0a4:	mov	w19, wzr
   2e0a8:	b	2e0c0 <rpl_re_set_registers@@Base+0x91ac>
   2e0ac:	ldr	x13, [sp, #8]
   2e0b0:	ldr	x8, [x8, x10, lsl #3]
   2e0b4:	cmp	x8, x13
   2e0b8:	b.eq	2e0a4 <rpl_re_set_registers@@Base+0x9190>  // b.none
   2e0bc:	mov	w19, #0x1                   	// #1
   2e0c0:	mov	w0, w19
   2e0c4:	ldp	x20, x19, [sp, #240]
   2e0c8:	ldp	x22, x21, [sp, #224]
   2e0cc:	ldp	x24, x23, [sp, #208]
   2e0d0:	ldp	x26, x25, [sp, #192]
   2e0d4:	ldp	x28, x27, [sp, #176]
   2e0d8:	ldp	x29, x30, [sp, #160]
   2e0dc:	add	sp, sp, #0x100
   2e0e0:	ret
   2e0e4:	stp	xzr, xzr, [x29, #-64]
   2e0e8:	stur	xzr, [x29, #-48]
   2e0ec:	stur	wzr, [x29, #-36]
   2e0f0:	b	2db00 <rpl_re_set_registers@@Base+0x8bec>
   2e0f4:	stp	xzr, xzr, [x29, #-64]
   2e0f8:	ldur	x0, [x29, #-16]
   2e0fc:	mov	w25, #0xc                   	// #12
   2e100:	b	2e114 <rpl_re_set_registers@@Base+0x9200>
   2e104:	ldur	x0, [x29, #-48]
   2e108:	b	2e120 <rpl_re_set_registers@@Base+0x920c>
   2e10c:	mov	w25, w0
   2e110:	ldur	x0, [x29, #-16]
   2e114:	bl	a970 <free@plt>
   2e118:	ldur	x0, [x29, #-48]
   2e11c:	stur	w25, [x29, #-36]
   2e120:	bl	a970 <free@plt>
   2e124:	ldur	w19, [x29, #-36]
   2e128:	b	2e0c0 <rpl_re_set_registers@@Base+0x91ac>
   2e12c:	stp	xzr, xzr, [x29, #-32]
   2e130:	mov	w25, #0xc                   	// #12
   2e134:	b	2e114 <rpl_re_set_registers@@Base+0x9200>
   2e138:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
   2e13c:	sub	x9, x9, x21
   2e140:	cmp	x9, x8
   2e144:	b.le	2e1d8 <rpl_re_set_registers@@Base+0x92c4>
   2e148:	add	x24, x8, #0x1
   2e14c:	add	x25, x24, x21
   2e150:	lsr	x8, x25, #61
   2e154:	cbnz	x8, 2e1d8 <rpl_re_set_registers@@Base+0x92c4>
   2e158:	ldr	x0, [x27, #16]
   2e15c:	lsl	x1, x25, #3
   2e160:	bl	a730 <realloc@plt>
   2e164:	cbz	x0, 2e1d8 <rpl_re_set_registers@@Base+0x92c4>
   2e168:	mov	x23, x0
   2e16c:	stp	x25, x0, [x27, #8]
   2e170:	add	x0, x0, x21, lsl #3
   2e174:	lsl	x2, x24, #3
   2e178:	mov	w1, wzr
   2e17c:	bl	a640 <memset@plt>
   2e180:	ldr	x24, [sp, #32]
   2e184:	b	2d9c8 <rpl_re_set_registers@@Base+0x8ab4>
   2e188:	ldr	w8, [x20, #160]
   2e18c:	mov	w9, #0xa                   	// #10
   2e190:	and	w8, w8, #0x2
   2e194:	eor	w23, w8, w9
   2e198:	b	2da8c <rpl_re_set_registers@@Base+0x8b78>
   2e19c:	mov	w19, w0
   2e1a0:	ldur	x0, [x29, #-48]
   2e1a4:	bl	a970 <free@plt>
   2e1a8:	b	2e0c0 <rpl_re_set_registers@@Base+0x91ac>
   2e1ac:	mov	w19, #0xc                   	// #12
   2e1b0:	stp	xzr, xzr, [x29, #-64]
   2e1b4:	stur	w19, [x29, #-36]
   2e1b8:	b	2e0c0 <rpl_re_set_registers@@Base+0x91ac>
   2e1bc:	mov	w0, w25
   2e1c0:	bl	ac20 <iswalnum@plt>
   2e1c4:	cmp	w25, #0x5f
   2e1c8:	mov	w23, #0x1                   	// #1
   2e1cc:	b.eq	2da8c <rpl_re_set_registers@@Base+0x8b78>  // b.none
   2e1d0:	cbz	w0, 2da64 <rpl_re_set_registers@@Base+0x8b50>
   2e1d4:	b	2da8c <rpl_re_set_registers@@Base+0x8b78>
   2e1d8:	mov	w19, #0xc                   	// #12
   2e1dc:	b	2e0c0 <rpl_re_set_registers@@Base+0x91ac>
   2e1e0:	sub	sp, sp, #0x70
   2e1e4:	stp	x29, x30, [sp, #32]
   2e1e8:	stp	x24, x23, [sp, #64]
   2e1ec:	stp	x22, x21, [sp, #80]
   2e1f0:	stp	x20, x19, [sp, #96]
   2e1f4:	ldr	x23, [x1, #8]
   2e1f8:	mov	x22, x0
   2e1fc:	str	x25, [sp, #48]
   2e200:	add	x29, sp, #0x20
   2e204:	lsl	x0, x23, #3
   2e208:	mov	w20, w3
   2e20c:	mov	x21, x2
   2e210:	mov	x19, x1
   2e214:	stp	x23, xzr, [sp, #8]
   2e218:	bl	a550 <malloc@plt>
   2e21c:	str	x0, [sp, #24]
   2e220:	cbz	x0, 2e31c <rpl_re_set_registers@@Base+0x9408>
   2e224:	cmp	x23, #0x1
   2e228:	b.lt	2e2e0 <rpl_re_set_registers@@Base+0x93cc>  // b.tstop
   2e22c:	mov	x24, xzr
   2e230:	mov	w25, #0x18                  	// #24
   2e234:	b	2e254 <rpl_re_set_registers@@Base+0x9340>
   2e238:	add	x0, sp, #0x8
   2e23c:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   2e240:	cbnz	w0, 2e2d0 <rpl_re_set_registers@@Base+0x93bc>
   2e244:	ldr	x8, [x19, #8]
   2e248:	add	x24, x24, #0x1
   2e24c:	cmp	x24, x8
   2e250:	b.ge	2e2e0 <rpl_re_set_registers@@Base+0x93cc>  // b.tcont
   2e254:	ldr	x8, [x19, #16]
   2e258:	ldr	x9, [x22, #48]
   2e25c:	ldr	x2, [x8, x24, lsl #3]
   2e260:	madd	x1, x2, x25, x9
   2e264:	ldr	x8, [x1, #8]
   2e268:	cmp	x8, #0x1
   2e26c:	b.lt	2e238 <rpl_re_set_registers@@Base+0x9324>  // b.tstop
   2e270:	madd	x9, x2, x25, x9
   2e274:	ldr	x9, [x9, #16]
   2e278:	ldr	x10, [x22]
   2e27c:	b	2e28c <rpl_re_set_registers@@Base+0x9378>
   2e280:	subs	x8, x8, #0x1
   2e284:	add	x9, x9, #0x8
   2e288:	b.eq	2e238 <rpl_re_set_registers@@Base+0x9324>  // b.none
   2e28c:	ldr	x11, [x9]
   2e290:	add	x12, x10, x11, lsl #4
   2e294:	ldrb	w12, [x12, #8]
   2e298:	cmp	w12, w20
   2e29c:	b.ne	2e280 <rpl_re_set_registers@@Base+0x936c>  // b.any
   2e2a0:	lsl	x12, x11, #4
   2e2a4:	ldr	x12, [x10, x12]
   2e2a8:	cmp	x12, x21
   2e2ac:	b.ne	2e280 <rpl_re_set_registers@@Base+0x936c>  // b.any
   2e2b0:	cmn	x11, #0x1
   2e2b4:	b.eq	2e238 <rpl_re_set_registers@@Base+0x9324>  // b.none
   2e2b8:	add	x1, sp, #0x8
   2e2bc:	mov	x0, x22
   2e2c0:	mov	x3, x21
   2e2c4:	mov	w4, w20
   2e2c8:	bl	2e7d8 <rpl_re_set_registers@@Base+0x98c4>
   2e2cc:	cbz	w0, 2e244 <rpl_re_set_registers@@Base+0x9330>
   2e2d0:	mov	w23, w0
   2e2d4:	ldr	x0, [sp, #24]
   2e2d8:	bl	a970 <free@plt>
   2e2dc:	b	2e2fc <rpl_re_set_registers@@Base+0x93e8>
   2e2e0:	ldr	x0, [x19, #16]
   2e2e4:	bl	a970 <free@plt>
   2e2e8:	ldr	x8, [sp, #24]
   2e2ec:	ldur	q0, [sp, #8]
   2e2f0:	mov	w23, wzr
   2e2f4:	str	x8, [x19, #16]
   2e2f8:	str	q0, [x19]
   2e2fc:	mov	w0, w23
   2e300:	ldp	x20, x19, [sp, #96]
   2e304:	ldp	x22, x21, [sp, #80]
   2e308:	ldp	x24, x23, [sp, #64]
   2e30c:	ldr	x25, [sp, #48]
   2e310:	ldp	x29, x30, [sp, #32]
   2e314:	add	sp, sp, #0x70
   2e318:	ret
   2e31c:	mov	w23, #0xc                   	// #12
   2e320:	b	2e2fc <rpl_re_set_registers@@Base+0x93e8>
   2e324:	sub	sp, sp, #0xb0
   2e328:	stp	x29, x30, [sp, #80]
   2e32c:	stp	x28, x27, [sp, #96]
   2e330:	stp	x26, x25, [sp, #112]
   2e334:	stp	x24, x23, [sp, #128]
   2e338:	stp	x22, x21, [sp, #144]
   2e33c:	stp	x20, x19, [sp, #160]
   2e340:	ldr	x8, [x0, #200]
   2e344:	ldr	x26, [x0, #152]
   2e348:	mov	x21, x2
   2e34c:	mov	x22, x0
   2e350:	cmp	x8, #0x1
   2e354:	mov	x24, x1
   2e358:	mov	x28, xzr
   2e35c:	add	x29, sp, #0x50
   2e360:	b.lt	2e39c <rpl_re_set_registers@@Base+0x9488>  // b.tstop
   2e364:	ldr	x9, [x22, #216]
   2e368:	mov	w10, #0x28                  	// #40
   2e36c:	mov	x11, x8
   2e370:	add	x12, x11, x28
   2e374:	cmp	x12, #0x0
   2e378:	cinc	x12, x12, lt  // lt = tstop
   2e37c:	asr	x12, x12, #1
   2e380:	madd	x13, x12, x10, x9
   2e384:	ldr	x13, [x13, #8]
   2e388:	cmp	x13, x21
   2e38c:	csel	x11, x11, x12, lt  // lt = tstop
   2e390:	csinc	x28, x28, x12, ge  // ge = tcont
   2e394:	cmp	x28, x11
   2e398:	b.lt	2e370 <rpl_re_set_registers@@Base+0x945c>  // b.tstop
   2e39c:	cmp	x28, x8
   2e3a0:	b.ge	2e7ac <rpl_re_set_registers@@Base+0x9898>  // b.tcont
   2e3a4:	cmn	x28, #0x1
   2e3a8:	mov	w0, wzr
   2e3ac:	b.eq	2e7b0 <rpl_re_set_registers@@Base+0x989c>  // b.none
   2e3b0:	ldr	x8, [x22, #216]
   2e3b4:	mov	w9, #0x28                  	// #40
   2e3b8:	madd	x9, x28, x9, x8
   2e3bc:	ldr	x9, [x9, #8]
   2e3c0:	cmp	x9, x21
   2e3c4:	b.ne	2e7b0 <rpl_re_set_registers@@Base+0x989c>  // b.any
   2e3c8:	mov	w9, #0x1                   	// #1
   2e3cc:	dup	v0.2d, x9
   2e3d0:	str	x3, [sp, #32]
   2e3d4:	str	w4, [sp, #40]
   2e3d8:	str	q0, [sp, #16]
   2e3dc:	mov	w9, #0x28                  	// #40
   2e3e0:	madd	x19, x28, x9, x8
   2e3e4:	b	2e3f4 <rpl_re_set_registers@@Base+0x94e0>
   2e3e8:	ldrb	w8, [x19, #32]
   2e3ec:	add	x19, x19, #0x28
   2e3f0:	cbz	w8, 2e7ac <rpl_re_set_registers@@Base+0x9898>
   2e3f4:	ldr	x8, [x24, #8]
   2e3f8:	subs	x9, x8, #0x1
   2e3fc:	b.lt	2e3e8 <rpl_re_set_registers@@Base+0x94d4>  // b.tstop
   2e400:	ldr	x10, [x19]
   2e404:	ldr	x8, [x24, #16]
   2e408:	mov	x11, xzr
   2e40c:	b.eq	2e434 <rpl_re_set_registers@@Base+0x9520>  // b.none
   2e410:	mov	x12, x9
   2e414:	add	x13, x11, x12
   2e418:	lsr	x13, x13, #1
   2e41c:	ldr	x14, [x8, x13, lsl #3]
   2e420:	cmp	x14, x10
   2e424:	csinc	x11, x11, x13, ge  // ge = tcont
   2e428:	csel	x12, x12, x13, lt  // lt = tstop
   2e42c:	cmp	x11, x12
   2e430:	b.cc	2e414 <rpl_re_set_registers@@Base+0x9500>  // b.lo, b.ul, b.last
   2e434:	ldr	x11, [x8, x11, lsl #3]
   2e438:	cmp	x11, x10
   2e43c:	b.ne	2e3e8 <rpl_re_set_registers@@Base+0x94d4>  // b.any
   2e440:	ldp	x12, x11, [x19, #16]
   2e444:	add	x11, x11, x21
   2e448:	sub	x20, x11, x12
   2e44c:	cmp	x20, x21
   2e450:	b.ne	2e510 <rpl_re_set_registers@@Base+0x95fc>  // b.any
   2e454:	ldr	x11, [x26, #40]
   2e458:	mov	w12, #0x18                  	// #24
   2e45c:	madd	x10, x10, x12, x11
   2e460:	ldr	x10, [x10, #16]
   2e464:	ldr	x20, [x10]
   2e468:	mov	x10, xzr
   2e46c:	cbz	x9, 2e490 <rpl_re_set_registers@@Base+0x957c>
   2e470:	add	x11, x10, x9
   2e474:	lsr	x11, x11, #1
   2e478:	ldr	x12, [x8, x11, lsl #3]
   2e47c:	cmp	x12, x20
   2e480:	csinc	x10, x10, x11, ge  // ge = tcont
   2e484:	csel	x9, x9, x11, lt  // lt = tstop
   2e488:	cmp	x10, x9
   2e48c:	b.cc	2e470 <rpl_re_set_registers@@Base+0x955c>  // b.lo, b.ul, b.last
   2e490:	ldr	x8, [x8, x10, lsl #3]
   2e494:	cmp	x8, x20
   2e498:	b.eq	2e56c <rpl_re_set_registers@@Base+0x9658>  // b.none
   2e49c:	ldr	q0, [sp, #16]
   2e4a0:	mov	w0, #0x8                   	// #8
   2e4a4:	stur	q0, [x29, #-32]
   2e4a8:	bl	a550 <malloc@plt>
   2e4ac:	stur	x0, [x29, #-16]
   2e4b0:	cbz	x0, 2e714 <rpl_re_set_registers@@Base+0x9800>
   2e4b4:	mov	w23, wzr
   2e4b8:	str	x20, [x0]
   2e4bc:	ldr	x2, [sp, #32]
   2e4c0:	ldr	w3, [sp, #40]
   2e4c4:	sub	x1, x29, #0x20
   2e4c8:	mov	x0, x26
   2e4cc:	stur	w23, [x29, #-4]
   2e4d0:	mov	x20, x26
   2e4d4:	bl	2e1e0 <rpl_re_set_registers@@Base+0x92cc>
   2e4d8:	mov	w26, w0
   2e4dc:	sub	x1, x29, #0x20
   2e4e0:	mov	x0, x24
   2e4e4:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   2e4e8:	ldur	x8, [x29, #-16]
   2e4ec:	mov	w27, w0
   2e4f0:	mov	x0, x8
   2e4f4:	bl	a970 <free@plt>
   2e4f8:	orr	w8, w26, w23
   2e4fc:	orr	w8, w8, w27
   2e500:	cbnz	w8, 2e720 <rpl_re_set_registers@@Base+0x980c>
   2e504:	mov	w8, #0x2                   	// #2
   2e508:	mov	x26, x20
   2e50c:	b	2e704 <rpl_re_set_registers@@Base+0x97f0>
   2e510:	ldr	x8, [x22, #184]
   2e514:	ldr	x9, [x26, #24]
   2e518:	ldr	x27, [x8, x20, lsl #3]
   2e51c:	ldr	x23, [x9, x10, lsl #3]
   2e520:	cbz	x27, 2e574 <rpl_re_set_registers@@Base+0x9660>
   2e524:	ldr	x25, [x27, #16]
   2e528:	cmp	x25, #0x0
   2e52c:	b.le	2e59c <rpl_re_set_registers@@Base+0x9688>
   2e530:	ldr	x8, [x27, #24]
   2e534:	mov	x10, xzr
   2e538:	subs	x9, x25, #0x1
   2e53c:	b.eq	2e560 <rpl_re_set_registers@@Base+0x964c>  // b.none
   2e540:	add	x11, x10, x9
   2e544:	lsr	x11, x11, #1
   2e548:	ldr	x12, [x8, x11, lsl #3]
   2e54c:	cmp	x12, x23
   2e550:	csinc	x10, x10, x11, ge  // ge = tcont
   2e554:	csel	x9, x9, x11, lt  // lt = tstop
   2e558:	cmp	x10, x9
   2e55c:	b.cc	2e540 <rpl_re_set_registers@@Base+0x962c>  // b.lo, b.ul, b.last
   2e560:	ldr	x8, [x8, x10, lsl #3]
   2e564:	cmp	x8, x23
   2e568:	b.ne	2e5a4 <rpl_re_set_registers@@Base+0x9690>  // b.any
   2e56c:	mov	w8, #0x4                   	// #4
   2e570:	b	2e704 <rpl_re_set_registers@@Base+0x97f0>
   2e574:	mov	w8, #0x1                   	// #1
   2e578:	dup	v0.2d, x8
   2e57c:	mov	w0, #0x8                   	// #8
   2e580:	stur	q0, [x29, #-32]
   2e584:	bl	a550 <malloc@plt>
   2e588:	stur	x0, [x29, #-16]
   2e58c:	cbz	x0, 2e744 <rpl_re_set_registers@@Base+0x9830>
   2e590:	str	x23, [x0]
   2e594:	stur	wzr, [x29, #-4]
   2e598:	b	2e6b0 <rpl_re_set_registers@@Base+0x979c>
   2e59c:	stur	x25, [x29, #-24]
   2e5a0:	b	2e634 <rpl_re_set_registers@@Base+0x9720>
   2e5a4:	cmp	x25, #0x1
   2e5a8:	stur	x25, [x29, #-24]
   2e5ac:	b.lt	2e634 <rpl_re_set_registers@@Base+0x9720>  // b.tstop
   2e5b0:	lsl	x0, x25, #3
   2e5b4:	stur	x25, [x29, #-32]
   2e5b8:	stp	x0, x26, [sp]
   2e5bc:	bl	a550 <malloc@plt>
   2e5c0:	stur	x0, [x29, #-16]
   2e5c4:	cbz	x0, 2e76c <rpl_re_set_registers@@Base+0x9858>
   2e5c8:	ldr	x1, [x27, #24]
   2e5cc:	ldr	x2, [sp]
   2e5d0:	mov	x26, x0
   2e5d4:	bl	a210 <memcpy@plt>
   2e5d8:	lsl	x8, x25, #1
   2e5dc:	lsl	x1, x25, #4
   2e5e0:	mov	x0, x26
   2e5e4:	stur	wzr, [x29, #-4]
   2e5e8:	stur	x8, [x29, #-32]
   2e5ec:	bl	a730 <realloc@plt>
   2e5f0:	cbz	x0, 2e77c <rpl_re_set_registers@@Base+0x9868>
   2e5f4:	ldr	x9, [x0]
   2e5f8:	ldur	x8, [x29, #-24]
   2e5fc:	ldr	x26, [sp, #8]
   2e600:	stur	x0, [x29, #-16]
   2e604:	cmp	x9, x23
   2e608:	b.le	2e670 <rpl_re_set_registers@@Base+0x975c>
   2e60c:	cmp	x8, #0x1
   2e610:	b.lt	2e6a0 <rpl_re_set_registers@@Base+0x978c>  // b.tstop
   2e614:	mov	x10, x8
   2e618:	add	x11, x0, x10, lsl #3
   2e61c:	ldur	x12, [x11, #-8]
   2e620:	subs	x9, x10, #0x1
   2e624:	mov	x10, x9
   2e628:	str	x12, [x11]
   2e62c:	b.gt	2e618 <rpl_re_set_registers@@Base+0x9704>
   2e630:	b	2e6a4 <rpl_re_set_registers@@Base+0x9790>
   2e634:	mov	w25, wzr
   2e638:	stp	xzr, xzr, [x29, #-32]
   2e63c:	stur	xzr, [x29, #-16]
   2e640:	mov	w8, #0x1                   	// #1
   2e644:	dup	v0.2d, x8
   2e648:	mov	w0, #0x8                   	// #8
   2e64c:	stur	w25, [x29, #-4]
   2e650:	stur	q0, [x29, #-32]
   2e654:	bl	a550 <malloc@plt>
   2e658:	stur	x0, [x29, #-16]
   2e65c:	cbz	x0, 2e760 <rpl_re_set_registers@@Base+0x984c>
   2e660:	str	x23, [x0]
   2e664:	cbz	w25, 2e6b0 <rpl_re_set_registers@@Base+0x979c>
   2e668:	bl	a970 <free@plt>
   2e66c:	b	2e78c <rpl_re_set_registers@@Base+0x9878>
   2e670:	add	x9, x0, x8, lsl #3
   2e674:	ldur	x10, [x9, #-8]
   2e678:	mov	x9, x8
   2e67c:	cmp	x10, x23
   2e680:	b.le	2e6a4 <rpl_re_set_registers@@Base+0x9790>
   2e684:	add	x11, x0, x9, lsl #3
   2e688:	str	x10, [x11]
   2e68c:	ldur	x10, [x11, #-16]
   2e690:	sub	x9, x9, #0x1
   2e694:	cmp	x10, x23
   2e698:	b.gt	2e684 <rpl_re_set_registers@@Base+0x9770>
   2e69c:	b	2e6a4 <rpl_re_set_registers@@Base+0x9790>
   2e6a0:	mov	x9, x8
   2e6a4:	add	x8, x8, #0x1
   2e6a8:	str	x23, [x0, x9, lsl #3]
   2e6ac:	stur	x8, [x29, #-24]
   2e6b0:	sub	x0, x29, #0x4
   2e6b4:	sub	x2, x29, #0x20
   2e6b8:	mov	x1, x26
   2e6bc:	bl	2e908 <rpl_re_set_registers@@Base+0x99f4>
   2e6c0:	ldr	x8, [x22, #184]
   2e6c4:	lsl	x20, x20, #3
   2e6c8:	str	x0, [x8, x20]
   2e6cc:	ldur	x0, [x29, #-16]
   2e6d0:	bl	a970 <free@plt>
   2e6d4:	ldr	x8, [x22, #184]
   2e6d8:	ldur	w9, [x29, #-4]
   2e6dc:	ldr	x8, [x8, x20]
   2e6e0:	cmp	x8, #0x0
   2e6e4:	cset	w10, eq  // eq = none
   2e6e8:	cmp	w9, #0x0
   2e6ec:	cset	w11, ne  // ne = any
   2e6f0:	and	w8, w10, w11
   2e6f4:	tst	w10, w11
   2e6f8:	ldur	w10, [x29, #-36]
   2e6fc:	csel	w10, w9, w10, ne  // ne = any
   2e700:	stur	w10, [x29, #-36]
   2e704:	cbz	w8, 2e3e8 <rpl_re_set_registers@@Base+0x94d4>
   2e708:	cmp	w8, #0x4
   2e70c:	b.eq	2e3e8 <rpl_re_set_registers@@Base+0x94d4>  // b.none
   2e710:	b	2e79c <rpl_re_set_registers@@Base+0x9888>
   2e714:	stp	xzr, xzr, [x29, #-32]
   2e718:	mov	w23, #0xc                   	// #12
   2e71c:	b	2e4bc <rpl_re_set_registers@@Base+0x95a8>
   2e720:	cmp	w26, #0x0
   2e724:	csel	w8, w27, w26, eq  // eq = none
   2e728:	cmp	w23, #0x0
   2e72c:	csel	w8, w8, w23, eq  // eq = none
   2e730:	stur	w8, [x29, #-36]
   2e734:	stur	w8, [x29, #-4]
   2e738:	mov	w8, #0x1                   	// #1
   2e73c:	mov	x26, x20
   2e740:	b	2e704 <rpl_re_set_registers@@Base+0x97f0>
   2e744:	mov	w9, #0xc                   	// #12
   2e748:	mov	w8, #0xc                   	// #12
   2e74c:	stp	xzr, xzr, [x29, #-32]
   2e750:	stur	w8, [x29, #-36]
   2e754:	stur	w9, [x29, #-4]
   2e758:	mov	w8, #0x1                   	// #1
   2e75c:	b	2e704 <rpl_re_set_registers@@Base+0x97f0>
   2e760:	stp	xzr, xzr, [x29, #-32]
   2e764:	cbnz	w25, 2e78c <rpl_re_set_registers@@Base+0x9878>
   2e768:	b	2e788 <rpl_re_set_registers@@Base+0x9874>
   2e76c:	ldr	x26, [sp, #8]
   2e770:	mov	w25, #0xc                   	// #12
   2e774:	stp	xzr, xzr, [x29, #-32]
   2e778:	b	2e640 <rpl_re_set_registers@@Base+0x972c>
   2e77c:	ldur	x0, [x29, #-16]
   2e780:	bl	a970 <free@plt>
   2e784:	ldr	x26, [sp, #8]
   2e788:	mov	w25, #0xc                   	// #12
   2e78c:	stur	w25, [x29, #-4]
   2e790:	mov	w8, #0x1                   	// #1
   2e794:	stur	w25, [x29, #-36]
   2e798:	b	2e704 <rpl_re_set_registers@@Base+0x97f0>
   2e79c:	cmp	w8, #0x2
   2e7a0:	b.ne	2e7d0 <rpl_re_set_registers@@Base+0x98bc>  // b.any
   2e7a4:	ldr	x8, [x22, #216]
   2e7a8:	b	2e3dc <rpl_re_set_registers@@Base+0x94c8>
   2e7ac:	mov	w0, wzr
   2e7b0:	ldp	x20, x19, [sp, #160]
   2e7b4:	ldp	x22, x21, [sp, #144]
   2e7b8:	ldp	x24, x23, [sp, #128]
   2e7bc:	ldp	x26, x25, [sp, #112]
   2e7c0:	ldp	x28, x27, [sp, #96]
   2e7c4:	ldp	x29, x30, [sp, #80]
   2e7c8:	add	sp, sp, #0xb0
   2e7cc:	ret
   2e7d0:	ldur	w0, [x29, #-36]
   2e7d4:	b	2e7b0 <rpl_re_set_registers@@Base+0x989c>
   2e7d8:	stp	x29, x30, [sp, #-64]!
   2e7dc:	stp	x24, x23, [sp, #16]
   2e7e0:	stp	x22, x21, [sp, #32]
   2e7e4:	stp	x20, x19, [sp, #48]
   2e7e8:	mov	w21, w4
   2e7ec:	mov	x22, x3
   2e7f0:	mov	x19, x2
   2e7f4:	mov	x20, x1
   2e7f8:	mov	x23, x0
   2e7fc:	mov	w24, #0x18                  	// #24
   2e800:	mov	x29, sp
   2e804:	b	2e818 <rpl_re_set_registers@@Base+0x9904>
   2e808:	cbz	x9, 2e8e8 <rpl_re_set_registers@@Base+0x99d4>
   2e80c:	madd	x8, x19, x24, x8
   2e810:	ldr	x8, [x8, #16]
   2e814:	ldr	x19, [x8]
   2e818:	ldr	x8, [x20, #8]
   2e81c:	subs	x9, x8, #0x1
   2e820:	b.lt	2e85c <rpl_re_set_registers@@Base+0x9948>  // b.tstop
   2e824:	ldr	x8, [x20, #16]
   2e828:	mov	x10, xzr
   2e82c:	b.eq	2e850 <rpl_re_set_registers@@Base+0x993c>  // b.none
   2e830:	add	x11, x10, x9
   2e834:	lsr	x11, x11, #1
   2e838:	ldr	x12, [x8, x11, lsl #3]
   2e83c:	cmp	x12, x19
   2e840:	csinc	x10, x10, x11, ge  // ge = tcont
   2e844:	csel	x9, x9, x11, lt  // lt = tstop
   2e848:	cmp	x10, x9
   2e84c:	b.cc	2e830 <rpl_re_set_registers@@Base+0x991c>  // b.lo, b.ul, b.last
   2e850:	ldr	x8, [x8, x10, lsl #3]
   2e854:	cmp	x8, x19
   2e858:	b.eq	2e8e8 <rpl_re_set_registers@@Base+0x99d4>  // b.none
   2e85c:	ldr	x8, [x23]
   2e860:	add	x9, x8, x19, lsl #4
   2e864:	ldrb	w9, [x9, #8]
   2e868:	cmp	w9, w21
   2e86c:	b.ne	2e880 <rpl_re_set_registers@@Base+0x996c>  // b.any
   2e870:	lsl	x9, x19, #4
   2e874:	ldr	x8, [x8, x9]
   2e878:	cmp	x8, x22
   2e87c:	b.eq	2e8d0 <rpl_re_set_registers@@Base+0x99bc>  // b.none
   2e880:	mov	x0, x20
   2e884:	mov	x1, x19
   2e888:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2e88c:	tbz	w0, #0, 2e900 <rpl_re_set_registers@@Base+0x99ec>
   2e890:	ldr	x8, [x23, #40]
   2e894:	madd	x9, x19, x24, x8
   2e898:	ldr	x9, [x9, #8]
   2e89c:	cmp	x9, #0x2
   2e8a0:	b.ne	2e808 <rpl_re_set_registers@@Base+0x98f4>  // b.any
   2e8a4:	madd	x8, x19, x24, x8
   2e8a8:	ldr	x8, [x8, #16]
   2e8ac:	mov	x0, x23
   2e8b0:	mov	x1, x20
   2e8b4:	mov	x3, x22
   2e8b8:	ldr	x2, [x8, #8]
   2e8bc:	mov	w4, w21
   2e8c0:	bl	2e7d8 <rpl_re_set_registers@@Base+0x98c4>
   2e8c4:	cbnz	w0, 2e8ec <rpl_re_set_registers@@Base+0x99d8>
   2e8c8:	ldr	x8, [x23, #40]
   2e8cc:	b	2e80c <rpl_re_set_registers@@Base+0x98f8>
   2e8d0:	cmp	w21, #0x9
   2e8d4:	b.ne	2e8e8 <rpl_re_set_registers@@Base+0x99d4>  // b.any
   2e8d8:	mov	x0, x20
   2e8dc:	mov	x1, x19
   2e8e0:	bl	2a4f4 <rpl_re_set_registers@@Base+0x55e0>
   2e8e4:	tbz	w0, #0, 2e900 <rpl_re_set_registers@@Base+0x99ec>
   2e8e8:	mov	w0, wzr
   2e8ec:	ldp	x20, x19, [sp, #48]
   2e8f0:	ldp	x22, x21, [sp, #32]
   2e8f4:	ldp	x24, x23, [sp, #16]
   2e8f8:	ldp	x29, x30, [sp], #64
   2e8fc:	ret
   2e900:	mov	w0, #0xc                   	// #12
   2e904:	b	2e8ec <rpl_re_set_registers@@Base+0x99d8>
   2e908:	stp	x29, x30, [sp, #-80]!
   2e90c:	stp	x26, x25, [sp, #16]
   2e910:	stp	x24, x23, [sp, #32]
   2e914:	stp	x22, x21, [sp, #48]
   2e918:	stp	x20, x19, [sp, #64]
   2e91c:	ldr	x25, [x2, #8]
   2e920:	mov	x19, x0
   2e924:	mov	x29, sp
   2e928:	cbz	x25, 2eb54 <rpl_re_set_registers@@Base+0x9c40>
   2e92c:	mov	x22, x2
   2e930:	mov	x20, x1
   2e934:	subs	x8, x25, #0x1
   2e938:	mov	x21, x25
   2e93c:	b.lt	2e9b4 <rpl_re_set_registers@@Base+0x9aa0>  // b.tstop
   2e940:	ldr	x9, [x22, #16]
   2e944:	cmp	x25, #0x4
   2e948:	b.cs	2e958 <rpl_re_set_registers@@Base+0x9a44>  // b.hs, b.nlast
   2e94c:	mov	x10, xzr
   2e950:	mov	x21, x25
   2e954:	b	2e99c <rpl_re_set_registers@@Base+0x9a88>
   2e958:	and	x10, x25, #0xfffffffffffffffc
   2e95c:	movi	v1.2d, #0x0
   2e960:	movi	v0.2d, #0x0
   2e964:	mov	v1.d[0], x25
   2e968:	add	x11, x9, #0x10
   2e96c:	mov	x12, x10
   2e970:	ldp	q2, q3, [x11, #-16]
   2e974:	subs	x12, x12, #0x4
   2e978:	add	x11, x11, #0x20
   2e97c:	add	v1.2d, v2.2d, v1.2d
   2e980:	add	v0.2d, v3.2d, v0.2d
   2e984:	b.ne	2e970 <rpl_re_set_registers@@Base+0x9a5c>  // b.any
   2e988:	add	v0.2d, v0.2d, v1.2d
   2e98c:	addp	d0, v0.2d
   2e990:	cmp	x25, x10
   2e994:	fmov	x21, d0
   2e998:	b.eq	2e9b4 <rpl_re_set_registers@@Base+0x9aa0>  // b.none
   2e99c:	sub	x11, x25, x10
   2e9a0:	add	x9, x9, x10, lsl #3
   2e9a4:	ldr	x10, [x9], #8
   2e9a8:	subs	x11, x11, #0x1
   2e9ac:	add	x21, x10, x21
   2e9b0:	b.ne	2e9a4 <rpl_re_set_registers@@Base+0x9a90>  // b.any
   2e9b4:	ldr	x9, [x20, #136]
   2e9b8:	ldr	x10, [x20, #64]
   2e9bc:	and	x11, x9, x21
   2e9c0:	mov	w9, #0x18                  	// #24
   2e9c4:	mul	x9, x11, x9
   2e9c8:	ldr	x9, [x10, x9]
   2e9cc:	cmp	x9, #0x1
   2e9d0:	b.lt	2ea48 <rpl_re_set_registers@@Base+0x9b34>  // b.tstop
   2e9d4:	cbz	x22, 2ea48 <rpl_re_set_registers@@Base+0x9b34>
   2e9d8:	mov	w12, #0x18                  	// #24
   2e9dc:	madd	x10, x11, x12, x10
   2e9e0:	ldr	x10, [x10, #16]
   2e9e4:	mov	x11, xzr
   2e9e8:	b	2e9f8 <rpl_re_set_registers@@Base+0x9ae4>
   2e9ec:	add	x11, x11, #0x1
   2e9f0:	cmp	x11, x9
   2e9f4:	b.ge	2ea48 <rpl_re_set_registers@@Base+0x9b34>  // b.tcont
   2e9f8:	ldr	x23, [x10, x11, lsl #3]
   2e9fc:	ldr	x12, [x23]
   2ea00:	cmp	x21, x12
   2ea04:	b.ne	2e9ec <rpl_re_set_registers@@Base+0x9ad8>  // b.any
   2ea08:	ldr	x12, [x23, #16]
   2ea0c:	cmp	x12, x25
   2ea10:	b.ne	2e9ec <rpl_re_set_registers@@Base+0x9ad8>  // b.any
   2ea14:	mov	x12, x8
   2ea18:	add	x13, x12, #0x1
   2ea1c:	cmp	x13, #0x1
   2ea20:	b.lt	2eb38 <rpl_re_set_registers@@Base+0x9c24>  // b.tstop
   2ea24:	ldr	x13, [x23, #24]
   2ea28:	ldr	x14, [x22, #16]
   2ea2c:	lsl	x15, x12, #3
   2ea30:	sub	x12, x12, #0x1
   2ea34:	ldr	x13, [x13, x15]
   2ea38:	ldr	x14, [x14, x15]
   2ea3c:	cmp	x13, x14
   2ea40:	b.eq	2ea18 <rpl_re_set_registers@@Base+0x9b04>  // b.none
   2ea44:	b	2e9ec <rpl_re_set_registers@@Base+0x9ad8>
   2ea48:	mov	w0, #0x70                  	// #112
   2ea4c:	mov	w1, #0x1                   	// #1
   2ea50:	bl	a6c0 <calloc@plt>
   2ea54:	cbz	x0, 2eb74 <rpl_re_set_registers@@Base+0x9c60>
   2ea58:	mov	x23, x0
   2ea5c:	add	x26, x0, #0x8
   2ea60:	cmp	x25, #0x1
   2ea64:	str	x25, [x0, #16]
   2ea68:	b.lt	2eb18 <rpl_re_set_registers@@Base+0x9c04>  // b.tstop
   2ea6c:	lsl	x24, x25, #3
   2ea70:	mov	x0, x24
   2ea74:	str	x25, [x23, #8]
   2ea78:	bl	a550 <malloc@plt>
   2ea7c:	str	x0, [x23, #24]
   2ea80:	cbz	x0, 2eb6c <rpl_re_set_registers@@Base+0x9c58>
   2ea84:	ldr	x22, [x22, #16]
   2ea88:	mov	x2, x24
   2ea8c:	mov	x1, x22
   2ea90:	bl	a210 <memcpy@plt>
   2ea94:	str	x26, [x23, #80]
   2ea98:	ldr	x8, [x20]
   2ea9c:	mov	w9, wzr
   2eaa0:	b	2eac4 <rpl_re_set_registers@@Base+0x9bb0>
   2eaa4:	ldr	w10, [x10]
   2eaa8:	tst	w10, #0x3ff00
   2eaac:	b.eq	2eab8 <rpl_re_set_registers@@Base+0x9ba4>  // b.none
   2eab0:	orr	w9, w9, #0xffffff80
   2eab4:	strb	w9, [x23, #104]
   2eab8:	subs	x25, x25, #0x1
   2eabc:	add	x22, x22, #0x8
   2eac0:	b.eq	2eb24 <rpl_re_set_registers@@Base+0x9c10>  // b.none
   2eac4:	ldr	x10, [x22]
   2eac8:	add	x10, x8, x10, lsl #4
   2eacc:	ldr	w11, [x10, #8]!
   2ead0:	and	w12, w11, #0x3ffff
   2ead4:	cmp	w12, #0x1
   2ead8:	b.eq	2eab8 <rpl_re_set_registers@@Base+0x9ba4>  // b.none
   2eadc:	lsr	w12, w11, #15
   2eae0:	and	w11, w11, #0xff
   2eae4:	and	w12, w12, #0x20
   2eae8:	orr	w9, w12, w9
   2eaec:	cmp	w11, #0xc
   2eaf0:	strb	w9, [x23, #104]
   2eaf4:	b.eq	2eab0 <rpl_re_set_registers@@Base+0x9b9c>  // b.none
   2eaf8:	cmp	w11, #0x4
   2eafc:	b.eq	2eb10 <rpl_re_set_registers@@Base+0x9bfc>  // b.none
   2eb00:	cmp	w11, #0x2
   2eb04:	b.ne	2eaa4 <rpl_re_set_registers@@Base+0x9b90>  // b.any
   2eb08:	orr	w9, w9, #0x10
   2eb0c:	b	2eab4 <rpl_re_set_registers@@Base+0x9ba0>
   2eb10:	orr	w9, w9, #0x40
   2eb14:	b	2eab4 <rpl_re_set_registers@@Base+0x9ba0>
   2eb18:	stp	xzr, xzr, [x26]
   2eb1c:	str	xzr, [x26, #16]
   2eb20:	str	x26, [x23, #80]
   2eb24:	mov	x0, x20
   2eb28:	mov	x1, x23
   2eb2c:	mov	x2, x21
   2eb30:	bl	2af00 <rpl_re_set_registers@@Base+0x5fec>
   2eb34:	cbnz	w0, 2eb60 <rpl_re_set_registers@@Base+0x9c4c>
   2eb38:	mov	x0, x23
   2eb3c:	ldp	x20, x19, [sp, #64]
   2eb40:	ldp	x22, x21, [sp, #48]
   2eb44:	ldp	x24, x23, [sp, #32]
   2eb48:	ldp	x26, x25, [sp, #16]
   2eb4c:	ldp	x29, x30, [sp], #80
   2eb50:	ret
   2eb54:	mov	x23, xzr
   2eb58:	str	wzr, [x19]
   2eb5c:	b	2eb38 <rpl_re_set_registers@@Base+0x9c24>
   2eb60:	mov	x0, x23
   2eb64:	bl	24f40 <rpl_re_set_registers@@Base+0x2c>
   2eb68:	b	2eb74 <rpl_re_set_registers@@Base+0x9c60>
   2eb6c:	mov	x0, x23
   2eb70:	bl	a970 <free@plt>
   2eb74:	mov	x23, xzr
   2eb78:	mov	w8, #0xc                   	// #12
   2eb7c:	str	w8, [x19]
   2eb80:	b	2eb38 <rpl_re_set_registers@@Base+0x9c24>
   2eb84:	stp	x29, x30, [sp, #-48]!
   2eb88:	stp	x22, x21, [sp, #16]
   2eb8c:	stp	x20, x19, [sp, #32]
   2eb90:	ldr	x8, [x0]
   2eb94:	mov	x29, sp
   2eb98:	add	x9, x8, x1, lsl #4
   2eb9c:	ldrb	w10, [x9, #8]
   2eba0:	cmp	w10, #0x7
   2eba4:	b.eq	2edd8 <rpl_re_set_registers@@Base+0x9ec4>  // b.none
   2eba8:	ldr	w9, [x2, #144]
   2ebac:	cmp	w9, #0x1
   2ebb0:	b.ne	2ec14 <rpl_re_set_registers@@Base+0x9d00>  // b.any
   2ebb4:	mov	w20, #0x1                   	// #1
   2ebb8:	cmp	w10, #0x5
   2ebbc:	b.eq	2ec60 <rpl_re_set_registers@@Base+0x9d4c>  // b.none
   2ebc0:	cmp	w10, #0x6
   2ebc4:	mov	w0, wzr
   2ebc8:	b.ne	2ed80 <rpl_re_set_registers@@Base+0x9e6c>  // b.any
   2ebcc:	cmp	w20, #0x2
   2ebd0:	b.lt	2ed80 <rpl_re_set_registers@@Base+0x9e6c>  // b.tstop
   2ebd4:	lsl	x10, x1, #4
   2ebd8:	ldr	x21, [x8, x10]
   2ebdc:	ldr	x8, [x21, #64]
   2ebe0:	cbnz	x8, 2ebf4 <rpl_re_set_registers@@Base+0x9ce0>
   2ebe4:	ldr	x10, [x21, #72]
   2ebe8:	cbnz	x10, 2ebf4 <rpl_re_set_registers@@Base+0x9ce0>
   2ebec:	ldr	x10, [x21, #40]
   2ebf0:	cbz	x10, 2edc4 <rpl_re_set_registers@@Base+0x9eb0>
   2ebf4:	cmp	w9, #0x1
   2ebf8:	b.ne	2ecbc <rpl_re_set_registers@@Base+0x9da8>  // b.any
   2ebfc:	ldr	x9, [x2, #8]
   2ec00:	ldrb	w19, [x9, x3]
   2ec04:	ldr	x9, [x21, #40]
   2ec08:	cmp	x9, #0x1
   2ec0c:	b.ge	2ecd0 <rpl_re_set_registers@@Base+0x9dbc>  // b.tcont
   2ec10:	b	2ecf0 <rpl_re_set_registers@@Base+0x9ddc>
   2ec14:	ldr	x11, [x2, #48]
   2ec18:	add	x12, x3, #0x1
   2ec1c:	cmp	x12, x11
   2ec20:	b.ge	2ec54 <rpl_re_set_registers@@Base+0x9d40>  // b.tcont
   2ec24:	ldr	x13, [x2, #16]
   2ec28:	sub	w20, w11, w3
   2ec2c:	sub	x12, x11, x3
   2ec30:	mov	w11, #0x1                   	// #1
   2ec34:	add	x13, x13, x3, lsl #2
   2ec38:	ldr	w14, [x13, x11, lsl #2]
   2ec3c:	cmn	w14, #0x1
   2ec40:	b.ne	2ecac <rpl_re_set_registers@@Base+0x9d98>  // b.any
   2ec44:	add	x11, x11, #0x1
   2ec48:	cmp	x12, x11
   2ec4c:	b.ne	2ec38 <rpl_re_set_registers@@Base+0x9d24>  // b.any
   2ec50:	b	2ec58 <rpl_re_set_registers@@Base+0x9d44>
   2ec54:	mov	w20, #0x1                   	// #1
   2ec58:	cmp	w10, #0x5
   2ec5c:	b.ne	2ebc0 <rpl_re_set_registers@@Base+0x9cac>  // b.any
   2ec60:	cmp	w20, #0x2
   2ec64:	b.ge	2ec70 <rpl_re_set_registers@@Base+0x9d5c>  // b.tcont
   2ec68:	mov	w0, wzr
   2ec6c:	b	2ed80 <rpl_re_set_registers@@Base+0x9e6c>
   2ec70:	ldr	x8, [x0, #216]
   2ec74:	tbnz	w8, #6, 2ec88 <rpl_re_set_registers@@Base+0x9d74>
   2ec78:	ldr	x9, [x2, #8]
   2ec7c:	ldrb	w9, [x9, x3]
   2ec80:	cmp	w9, #0xa
   2ec84:	b.eq	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.none
   2ec88:	tbz	w8, #7, 2ec98 <rpl_re_set_registers@@Base+0x9d84>
   2ec8c:	ldr	x8, [x2, #8]
   2ec90:	ldrb	w8, [x8, x3]
   2ec94:	cbz	w8, 2ed98 <rpl_re_set_registers@@Base+0x9e84>
   2ec98:	mov	w0, w20
   2ec9c:	ldp	x20, x19, [sp, #32]
   2eca0:	ldp	x22, x21, [sp, #16]
   2eca4:	ldp	x29, x30, [sp], #48
   2eca8:	ret
   2ecac:	mov	w20, w11
   2ecb0:	cmp	w10, #0x5
   2ecb4:	b.eq	2ec60 <rpl_re_set_registers@@Base+0x9d4c>  // b.none
   2ecb8:	b	2ebc0 <rpl_re_set_registers@@Base+0x9cac>
   2ecbc:	ldr	x9, [x2, #16]
   2ecc0:	ldr	w19, [x9, x3, lsl #2]
   2ecc4:	ldr	x9, [x21, #40]
   2ecc8:	cmp	x9, #0x1
   2eccc:	b.lt	2ecf0 <rpl_re_set_registers@@Base+0x9ddc>  // b.tstop
   2ecd0:	ldr	x10, [x21]
   2ecd4:	mov	x11, xzr
   2ecd8:	ldr	w12, [x10, x11, lsl #2]
   2ecdc:	cmp	w19, w12
   2ece0:	b.eq	2ed64 <rpl_re_set_registers@@Base+0x9e50>  // b.none
   2ece4:	add	x11, x11, #0x1
   2ece8:	cmp	x11, x9
   2ecec:	b.lt	2ecd8 <rpl_re_set_registers@@Base+0x9dc4>  // b.tstop
   2ecf0:	ldr	x9, [x21, #72]
   2ecf4:	cmp	x9, #0x1
   2ecf8:	b.lt	2ed28 <rpl_re_set_registers@@Base+0x9e14>  // b.tstop
   2ecfc:	mov	x22, xzr
   2ed00:	ldr	x8, [x21, #24]
   2ed04:	mov	w0, w19
   2ed08:	ldr	x1, [x8, x22, lsl #3]
   2ed0c:	bl	a540 <iswctype@plt>
   2ed10:	cbnz	w0, 2ed64 <rpl_re_set_registers@@Base+0x9e50>
   2ed14:	ldr	x8, [x21, #72]
   2ed18:	add	x22, x22, #0x1
   2ed1c:	cmp	x22, x8
   2ed20:	b.lt	2ed00 <rpl_re_set_registers@@Base+0x9dec>  // b.tstop
   2ed24:	ldr	x8, [x21, #64]
   2ed28:	cmp	x8, #0x1
   2ed2c:	b.lt	2ed74 <rpl_re_set_registers@@Base+0x9e60>  // b.tstop
   2ed30:	ldr	x9, [x21, #8]
   2ed34:	mov	x10, xzr
   2ed38:	b	2ed48 <rpl_re_set_registers@@Base+0x9e34>
   2ed3c:	add	x10, x10, #0x1
   2ed40:	cmp	x10, x8
   2ed44:	b.ge	2ed74 <rpl_re_set_registers@@Base+0x9e60>  // b.tcont
   2ed48:	ldr	w11, [x9, x10, lsl #2]
   2ed4c:	cmp	w11, w19
   2ed50:	b.hi	2ed3c <rpl_re_set_registers@@Base+0x9e28>  // b.pmore
   2ed54:	ldr	x11, [x21, #16]
   2ed58:	ldr	w11, [x11, x10, lsl #2]
   2ed5c:	cmp	w19, w11
   2ed60:	b.hi	2ed3c <rpl_re_set_registers@@Base+0x9e28>  // b.pmore
   2ed64:	mov	w0, w20
   2ed68:	ldrb	w8, [x21, #32]
   2ed6c:	tbz	w8, #0, 2ed80 <rpl_re_set_registers@@Base+0x9e6c>
   2ed70:	b	2ed90 <rpl_re_set_registers@@Base+0x9e7c>
   2ed74:	mov	w0, wzr
   2ed78:	ldrb	w8, [x21, #32]
   2ed7c:	tbnz	w8, #0, 2ed90 <rpl_re_set_registers@@Base+0x9e7c>
   2ed80:	ldp	x20, x19, [sp, #32]
   2ed84:	ldp	x22, x21, [sp, #16]
   2ed88:	ldp	x29, x30, [sp], #48
   2ed8c:	ret
   2ed90:	cmp	w0, #0x0
   2ed94:	b.le	2edac <rpl_re_set_registers@@Base+0x9e98>
   2ed98:	mov	w0, wzr
   2ed9c:	ldp	x20, x19, [sp, #32]
   2eda0:	ldp	x22, x21, [sp, #16]
   2eda4:	ldp	x29, x30, [sp], #48
   2eda8:	ret
   2edac:	cmp	w20, #0x1
   2edb0:	csinc	w0, w20, wzr, gt
   2edb4:	ldp	x20, x19, [sp, #32]
   2edb8:	ldp	x22, x21, [sp, #16]
   2edbc:	ldp	x29, x30, [sp], #48
   2edc0:	ret
   2edc4:	mov	w19, wzr
   2edc8:	ldr	x9, [x21, #40]
   2edcc:	cmp	x9, #0x1
   2edd0:	b.ge	2ecd0 <rpl_re_set_registers@@Base+0x9dbc>  // b.tcont
   2edd4:	b	2ecf0 <rpl_re_set_registers@@Base+0x9ddc>
   2edd8:	ldr	x8, [x2, #8]
   2eddc:	ldrb	w10, [x8, x3]
   2ede0:	cmp	w10, #0xc2
   2ede4:	b.cc	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.lo, b.ul, b.last
   2ede8:	ldr	x9, [x2, #88]
   2edec:	add	x11, x3, #0x2
   2edf0:	cmp	x11, x9
   2edf4:	b.gt	2ed98 <rpl_re_set_registers@@Base+0x9e84>
   2edf8:	add	x11, x3, x8
   2edfc:	ldrb	w11, [x11, #1]
   2ee00:	cmp	w10, #0xdf
   2ee04:	b.hi	2ee30 <rpl_re_set_registers@@Base+0x9f1c>  // b.pmore
   2ee08:	sxtb	w8, w11
   2ee0c:	cmp	w11, #0xbf
   2ee10:	mov	w9, #0xffffffff            	// #-1
   2ee14:	ccmp	w8, w9, #0x0, ls  // ls = plast
   2ee18:	mov	w8, #0x2                   	// #2
   2ee1c:	csel	w0, wzr, w8, gt
   2ee20:	ldp	x20, x19, [sp, #32]
   2ee24:	ldp	x22, x21, [sp, #16]
   2ee28:	ldp	x29, x30, [sp], #48
   2ee2c:	ret
   2ee30:	cmp	w10, #0xef
   2ee34:	b.hi	2ee50 <rpl_re_set_registers@@Base+0x9f3c>  // b.pmore
   2ee38:	cmp	w10, #0xe0
   2ee3c:	mov	w10, #0x3                   	// #3
   2ee40:	b.ne	2eeac <rpl_re_set_registers@@Base+0x9f98>  // b.any
   2ee44:	cmp	w11, #0xa0
   2ee48:	b.cc	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.lo, b.ul, b.last
   2ee4c:	b	2eeac <rpl_re_set_registers@@Base+0x9f98>
   2ee50:	cmp	w10, #0xf7
   2ee54:	b.hi	2ee70 <rpl_re_set_registers@@Base+0x9f5c>  // b.pmore
   2ee58:	cmp	w10, #0xf0
   2ee5c:	mov	w10, #0x4                   	// #4
   2ee60:	b.ne	2eeac <rpl_re_set_registers@@Base+0x9f98>  // b.any
   2ee64:	cmp	w11, #0x90
   2ee68:	b.cc	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.lo, b.ul, b.last
   2ee6c:	b	2eeac <rpl_re_set_registers@@Base+0x9f98>
   2ee70:	cmp	w10, #0xfb
   2ee74:	b.hi	2ee90 <rpl_re_set_registers@@Base+0x9f7c>  // b.pmore
   2ee78:	cmp	w10, #0xf8
   2ee7c:	mov	w10, #0x5                   	// #5
   2ee80:	b.ne	2eeac <rpl_re_set_registers@@Base+0x9f98>  // b.any
   2ee84:	cmp	w11, #0x88
   2ee88:	b.cc	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.lo, b.ul, b.last
   2ee8c:	b	2eeac <rpl_re_set_registers@@Base+0x9f98>
   2ee90:	cmp	w10, #0xfd
   2ee94:	b.hi	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.pmore
   2ee98:	cmp	w10, #0xfc
   2ee9c:	mov	w10, #0x6                   	// #6
   2eea0:	b.ne	2eeac <rpl_re_set_registers@@Base+0x9f98>  // b.any
   2eea4:	cmp	w11, #0x84
   2eea8:	b.cc	2ed98 <rpl_re_set_registers@@Base+0x9e84>  // b.lo, b.ul, b.last
   2eeac:	add	x11, x10, x3
   2eeb0:	cmp	x11, x9
   2eeb4:	b.gt	2ed98 <rpl_re_set_registers@@Base+0x9e84>
   2eeb8:	add	x8, x3, x8
   2eebc:	sub	x9, x10, #0x1
   2eec0:	add	x8, x8, #0x1
   2eec4:	ldrb	w11, [x8]
   2eec8:	mov	w0, wzr
   2eecc:	sxtb	w12, w11
   2eed0:	tbz	w12, #31, 2ed80 <rpl_re_set_registers@@Base+0x9e6c>
   2eed4:	cmp	w11, #0xbf
   2eed8:	b.hi	2ed80 <rpl_re_set_registers@@Base+0x9e6c>  // b.pmore
   2eedc:	subs	x9, x9, #0x1
   2eee0:	add	x8, x8, #0x1
   2eee4:	b.ne	2eec4 <rpl_re_set_registers@@Base+0x9fb0>  // b.any
   2eee8:	mov	w0, w10
   2eeec:	ldp	x20, x19, [sp, #32]
   2eef0:	ldp	x22, x21, [sp, #16]
   2eef4:	ldp	x29, x30, [sp], #48
   2eef8:	ret
   2eefc:	sub	sp, sp, #0x30
   2ef00:	stp	x29, x30, [sp, #16]
   2ef04:	ldr	w10, [x1, #8]
   2ef08:	str	x19, [sp, #32]
   2ef0c:	add	x29, sp, #0x10
   2ef10:	and	w8, w10, #0xff
   2ef14:	sub	w11, w8, #0x1
   2ef18:	cmp	w11, #0x6
   2ef1c:	mov	w8, wzr
   2ef20:	b.hi	2f084 <rpl_re_set_registers@@Base+0xa170>  // b.pmore
   2ef24:	ldr	x9, [x0, #8]
   2ef28:	adrp	x12, 34000 <vasnprintf@@Base+0x3474>
   2ef2c:	add	x12, x12, #0x2ae
   2ef30:	ldrb	w9, [x9, x2]
   2ef34:	adr	x13, 2ef44 <rpl_re_set_registers@@Base+0xa030>
   2ef38:	ldrb	w14, [x12, x11]
   2ef3c:	add	x13, x13, x14, lsl #2
   2ef40:	br	x13
   2ef44:	ldrb	w8, [x1]
   2ef48:	cmp	w8, w9
   2ef4c:	b.eq	2efa0 <rpl_re_set_registers@@Base+0xa08c>  // b.none
   2ef50:	b	2f080 <rpl_re_set_registers@@Base+0xa16c>
   2ef54:	ldr	x8, [x1]
   2ef58:	lsr	x11, x9, #3
   2ef5c:	and	x11, x11, #0x18
   2ef60:	ldr	x8, [x8, x11]
   2ef64:	lsr	x8, x8, x9
   2ef68:	tbnz	w8, #0, 2efa0 <rpl_re_set_registers@@Base+0xa08c>
   2ef6c:	b	2f080 <rpl_re_set_registers@@Base+0xa16c>
   2ef70:	sxtb	w8, w9
   2ef74:	tbnz	w8, #31, 2f080 <rpl_re_set_registers@@Base+0xa16c>
   2ef78:	cbz	w9, 2ef94 <rpl_re_set_registers@@Base+0xa080>
   2ef7c:	cmp	w9, #0xa
   2ef80:	b.ne	2efa0 <rpl_re_set_registers@@Base+0xa08c>  // b.any
   2ef84:	ldr	x8, [x0, #152]
   2ef88:	ldrb	w8, [x8, #216]
   2ef8c:	tbnz	w8, #6, 2efa0 <rpl_re_set_registers@@Base+0xa08c>
   2ef90:	b	2f080 <rpl_re_set_registers@@Base+0xa16c>
   2ef94:	ldr	x8, [x0, #152]
   2ef98:	ldrb	w8, [x8, #216]
   2ef9c:	tbnz	w8, #7, 2f080 <rpl_re_set_registers@@Base+0xa16c>
   2efa0:	tst	w10, #0x3ff00
   2efa4:	b.eq	2eff4 <rpl_re_set_registers@@Base+0xa0e0>  // b.none
   2efa8:	tbnz	x2, #63, 2efe0 <rpl_re_set_registers@@Base+0xa0cc>
   2efac:	ldr	x8, [x0, #88]
   2efb0:	cmp	x8, x2
   2efb4:	b.eq	2f0b8 <rpl_re_set_registers@@Base+0xa1a4>  // b.none
   2efb8:	ldr	w8, [x0, #144]
   2efbc:	cmp	w8, #0x2
   2efc0:	b.lt	2effc <rpl_re_set_registers@@Base+0xa0e8>  // b.tstop
   2efc4:	ldr	x9, [x0, #16]
   2efc8:	ldr	w8, [x9, x2, lsl #2]
   2efcc:	cmn	w8, #0x1
   2efd0:	b.ne	2f020 <rpl_re_set_registers@@Base+0xa10c>  // b.any
   2efd4:	cmp	x2, #0x0
   2efd8:	sub	x2, x2, #0x1
   2efdc:	b.gt	2efc8 <rpl_re_set_registers@@Base+0xa0b4>
   2efe0:	ldr	w11, [x0, #112]
   2efe4:	tst	w11, #0x1
   2efe8:	cset	w12, eq  // eq = none
   2efec:	tbnz	w10, #10, 2f068 <rpl_re_set_registers@@Base+0xa154>
   2eff0:	b	2f06c <rpl_re_set_registers@@Base+0xa158>
   2eff4:	mov	w8, #0x1                   	// #1
   2eff8:	b	2f084 <rpl_re_set_registers@@Base+0xa170>
   2effc:	ldr	x8, [x0, #128]
   2f000:	lsr	x11, x9, #3
   2f004:	and	x11, x11, #0x18
   2f008:	ldr	x8, [x8, x11]
   2f00c:	lsr	x8, x8, x9
   2f010:	tbz	w8, #0, 2f050 <rpl_re_set_registers@@Base+0xa13c>
   2f014:	mov	w12, wzr
   2f018:	mov	w11, #0x1                   	// #1
   2f01c:	b	2f06c <rpl_re_set_registers@@Base+0xa158>
   2f020:	ldrb	w9, [x0, #142]
   2f024:	cbnz	w9, 2f0d8 <rpl_re_set_registers@@Base+0xa1c4>
   2f028:	cmp	w8, #0xa
   2f02c:	b.ne	2f058 <rpl_re_set_registers@@Base+0xa144>  // b.any
   2f030:	ldrb	w8, [x0, #141]
   2f034:	cmp	w8, #0x0
   2f038:	cset	w8, ne  // ne = any
   2f03c:	lsl	w11, w8, #1
   2f040:	tst	w11, #0x1
   2f044:	cset	w12, eq  // eq = none
   2f048:	tbnz	w10, #10, 2f068 <rpl_re_set_registers@@Base+0xa154>
   2f04c:	b	2f06c <rpl_re_set_registers@@Base+0xa158>
   2f050:	cmp	w9, #0xa
   2f054:	b.eq	2f030 <rpl_re_set_registers@@Base+0xa11c>  // b.none
   2f058:	mov	w11, wzr
   2f05c:	tst	w11, #0x1
   2f060:	cset	w12, eq  // eq = none
   2f064:	tbz	w10, #10, 2f06c <rpl_re_set_registers@@Base+0xa158>
   2f068:	tbz	w11, #0, 2f080 <rpl_re_set_registers@@Base+0xa16c>
   2f06c:	ldr	w8, [x1, #8]
   2f070:	tbnz	w12, #0, 2f078 <rpl_re_set_registers@@Base+0xa164>
   2f074:	tbnz	w8, #11, 2f080 <rpl_re_set_registers@@Base+0xa16c>
   2f078:	tbnz	w11, #1, 2f098 <rpl_re_set_registers@@Base+0xa184>
   2f07c:	tbz	w8, #13, 2f098 <rpl_re_set_registers@@Base+0xa184>
   2f080:	mov	w8, wzr
   2f084:	mov	w0, w8
   2f088:	ldr	x19, [sp, #32]
   2f08c:	ldp	x29, x30, [sp, #16]
   2f090:	add	sp, sp, #0x30
   2f094:	ret
   2f098:	tst	w8, #0x8000
   2f09c:	cset	w8, eq  // eq = none
   2f0a0:	and	w9, w11, #0x8
   2f0a4:	orr	w0, w8, w9, lsr #3
   2f0a8:	ldr	x19, [sp, #32]
   2f0ac:	ldp	x29, x30, [sp, #16]
   2f0b0:	add	sp, sp, #0x30
   2f0b4:	ret
   2f0b8:	ldr	w8, [x0, #160]
   2f0bc:	mov	w9, #0xa                   	// #10
   2f0c0:	and	w8, w8, #0x2
   2f0c4:	eor	w11, w8, w9
   2f0c8:	tst	w11, #0x1
   2f0cc:	cset	w12, eq  // eq = none
   2f0d0:	tbnz	w10, #10, 2f068 <rpl_re_set_registers@@Base+0xa154>
   2f0d4:	b	2f06c <rpl_re_set_registers@@Base+0xa158>
   2f0d8:	str	x0, [sp]
   2f0dc:	mov	w0, w8
   2f0e0:	stur	w10, [x29, #-4]
   2f0e4:	str	x1, [x29, #24]
   2f0e8:	mov	w19, w8
   2f0ec:	bl	ac20 <iswalnum@plt>
   2f0f0:	mov	w12, wzr
   2f0f4:	cmp	w19, #0x5f
   2f0f8:	mov	w11, #0x1                   	// #1
   2f0fc:	b.eq	2f11c <rpl_re_set_registers@@Base+0xa208>  // b.none
   2f100:	mov	w9, w0
   2f104:	ldr	x1, [x29, #24]
   2f108:	ldr	x0, [sp]
   2f10c:	ldur	w10, [x29, #-4]
   2f110:	mov	w8, w19
   2f114:	cbz	w9, 2f028 <rpl_re_set_registers@@Base+0xa114>
   2f118:	b	2f06c <rpl_re_set_registers@@Base+0xa158>
   2f11c:	ldr	x1, [x29, #24]
   2f120:	b	2f06c <rpl_re_set_registers@@Base+0xa158>
   2f124:	sub	sp, sp, #0xd0
   2f128:	stp	x29, x30, [sp, #112]
   2f12c:	stp	x28, x27, [sp, #128]
   2f130:	stp	x26, x25, [sp, #144]
   2f134:	stp	x24, x23, [sp, #160]
   2f138:	stp	x22, x21, [sp, #176]
   2f13c:	stp	x20, x19, [sp, #192]
   2f140:	ldp	x19, x21, [x1, #16]
   2f144:	mov	w8, #0x1                   	// #1
   2f148:	add	x29, sp, #0x70
   2f14c:	mov	x22, x0
   2f150:	dup	v0.2d, x8
   2f154:	mov	w0, #0x8                   	// #8
   2f158:	mov	x20, x1
   2f15c:	stur	q0, [x29, #-32]
   2f160:	bl	a550 <malloc@plt>
   2f164:	stur	x0, [x29, #-16]
   2f168:	cbz	x0, 2f730 <rpl_re_set_registers@@Base+0xa81c>
   2f16c:	str	x19, [x0]
   2f170:	sub	x3, x29, #0x20
   2f174:	mov	x0, x22
   2f178:	mov	x1, x20
   2f17c:	mov	x2, x21
   2f180:	stp	x22, x20, [x29, #-48]
   2f184:	bl	2f744 <rpl_re_set_registers@@Base+0xa830>
   2f188:	cbnz	w0, 2f728 <rpl_re_set_registers@@Base+0xa814>
   2f18c:	mov	w8, #0x1                   	// #1
   2f190:	mov	w10, wzr
   2f194:	dup	v0.2d, x8
   2f198:	mov	w28, #0x28                  	// #40
   2f19c:	str	q0, [sp]
   2f1a0:	b	2f1c0 <rpl_re_set_registers@@Base+0xa2ac>
   2f1a4:	sub	x3, x29, #0x20
   2f1a8:	mov	x0, x15
   2f1ac:	mov	x1, x14
   2f1b0:	mov	x2, x21
   2f1b4:	bl	2f744 <rpl_re_set_registers@@Base+0xa830>
   2f1b8:	ldr	w10, [sp, #20]
   2f1bc:	cbnz	w0, 2f728 <rpl_re_set_registers@@Base+0xa814>
   2f1c0:	mov	x11, x21
   2f1c4:	subs	x21, x21, #0x1
   2f1c8:	b.lt	2f6d0 <rpl_re_set_registers@@Base+0xa7bc>  // b.tstop
   2f1cc:	ldp	x15, x14, [x29, #-48]
   2f1d0:	ldr	x0, [x14]
   2f1d4:	ldr	w9, [x15, #224]
   2f1d8:	ldr	x8, [x0, x11, lsl #3]
   2f1dc:	cmp	x8, #0x0
   2f1e0:	csinc	w10, wzr, w10, ne  // ne = any
   2f1e4:	cmp	w10, w9
   2f1e8:	b.gt	2f6e0 <rpl_re_set_registers@@Base+0xa7cc>
   2f1ec:	stur	xzr, [x29, #-24]
   2f1f0:	ldr	x8, [x15, #184]
   2f1f4:	str	w10, [sp, #20]
   2f1f8:	ldr	x9, [x8, x21, lsl #3]
   2f1fc:	cbz	x9, 2f1a4 <rpl_re_set_registers@@Base+0xa290>
   2f200:	ldr	x8, [x9, #40]
   2f204:	cmp	x8, #0x1
   2f208:	b.lt	2f1a4 <rpl_re_set_registers@@Base+0xa290>  // b.tstop
   2f20c:	ldr	x8, [x15, #152]
   2f210:	mov	x22, xzr
   2f214:	str	x9, [sp, #32]
   2f218:	stp	x11, x8, [sp, #48]
   2f21c:	b	2f25c <rpl_re_set_registers@@Base+0xa348>
   2f220:	ldur	x9, [x29, #-32]
   2f224:	cbz	x9, 2f490 <rpl_re_set_registers@@Base+0xa57c>
   2f228:	ldur	x8, [x29, #-24]
   2f22c:	ldr	x19, [sp, #40]
   2f230:	cbnz	x8, 2f638 <rpl_re_set_registers@@Base+0xa724>
   2f234:	ldur	x8, [x29, #-16]
   2f238:	str	x19, [x8]
   2f23c:	ldur	x8, [x29, #-24]
   2f240:	add	x8, x8, #0x1
   2f244:	stur	x8, [x29, #-24]
   2f248:	ldr	x9, [sp, #32]
   2f24c:	add	x22, x22, #0x1
   2f250:	ldr	x8, [x9, #40]
   2f254:	cmp	x22, x8
   2f258:	b.ge	2f1a4 <rpl_re_set_registers@@Base+0xa290>  // b.tcont
   2f25c:	ldr	x8, [x9, #48]
   2f260:	ldr	x20, [x8, x22, lsl #3]
   2f264:	ldr	x8, [sp, #56]
   2f268:	ldr	x8, [x8]
   2f26c:	add	x8, x8, x20, lsl #4
   2f270:	ldrb	w8, [x8, #10]
   2f274:	tbnz	w8, #4, 2f30c <rpl_re_set_registers@@Base+0xa3f8>
   2f278:	ldr	x8, [sp, #56]
   2f27c:	mov	x0, x15
   2f280:	mov	x2, x21
   2f284:	mov	x19, x20
   2f288:	ldr	x8, [x8]
   2f28c:	add	x1, x8, x20, lsl #4
   2f290:	bl	2eefc <rpl_re_set_registers@@Base+0x9fe8>
   2f294:	ldr	x16, [sp, #48]
   2f298:	ldp	x15, x14, [x29, #-48]
   2f29c:	tbz	w0, #0, 2f248 <rpl_re_set_registers@@Base+0xa334>
   2f2a0:	ldr	x8, [x14]
   2f2a4:	ldr	x9, [x8, x16, lsl #3]
   2f2a8:	cbz	x9, 2f248 <rpl_re_set_registers@@Base+0xa334>
   2f2ac:	ldr	x8, [x9, #16]
   2f2b0:	subs	x10, x8, #0x1
   2f2b4:	b.lt	2f248 <rpl_re_set_registers@@Base+0xa334>  // b.tstop
   2f2b8:	ldr	x8, [sp, #56]
   2f2bc:	ldr	x9, [x9, #24]
   2f2c0:	mov	x11, x19
   2f2c4:	mov	x11, xzr
   2f2c8:	ldr	x8, [x8, #24]
   2f2cc:	ldr	x8, [x8, x19, lsl #3]
   2f2d0:	b.eq	2f2f4 <rpl_re_set_registers@@Base+0xa3e0>  // b.none
   2f2d4:	add	x12, x11, x10
   2f2d8:	lsr	x12, x12, #1
   2f2dc:	ldr	x13, [x9, x12, lsl #3]
   2f2e0:	cmp	x13, x8
   2f2e4:	csinc	x11, x11, x12, ge  // ge = tcont
   2f2e8:	csel	x10, x10, x12, lt  // lt = tstop
   2f2ec:	cmp	x11, x10
   2f2f0:	b.cc	2f2d4 <rpl_re_set_registers@@Base+0xa3c0>  // b.lo, b.ul, b.last
   2f2f4:	ldr	x9, [x9, x11, lsl #3]
   2f2f8:	cmp	x9, x8
   2f2fc:	b.ne	2f248 <rpl_re_set_registers@@Base+0xa334>  // b.any
   2f300:	mov	w0, #0x1                   	// #1
   2f304:	mov	x20, x19
   2f308:	b	2f3bc <rpl_re_set_registers@@Base+0xa4a8>
   2f30c:	ldr	x23, [x15, #152]
   2f310:	ldr	x19, [x14, #24]
   2f314:	mov	x1, x20
   2f318:	mov	x2, x15
   2f31c:	mov	x0, x23
   2f320:	mov	x3, x21
   2f324:	bl	2eb84 <rpl_re_set_registers@@Base+0x9c70>
   2f328:	cmp	w0, #0x1
   2f32c:	b.lt	2f348 <rpl_re_set_registers@@Base+0xa434>  // b.tstop
   2f330:	add	x8, x21, w0, uxtw
   2f334:	cmp	x8, x19
   2f338:	b.le	2f358 <rpl_re_set_registers@@Base+0xa444>
   2f33c:	ldp	x15, x14, [x29, #-48]
   2f340:	ldr	x16, [sp, #48]
   2f344:	b	2f3bc <rpl_re_set_registers@@Base+0xa4a8>
   2f348:	ldp	x15, x14, [x29, #-48]
   2f34c:	ldr	x16, [sp, #48]
   2f350:	cbnz	w0, 2f3bc <rpl_re_set_registers@@Base+0xa4a8>
   2f354:	b	2f278 <rpl_re_set_registers@@Base+0xa364>
   2f358:	ldp	x15, x14, [x29, #-48]
   2f35c:	ldr	x16, [sp, #48]
   2f360:	ldr	x9, [x14]
   2f364:	ldr	x9, [x9, x8, lsl #3]
   2f368:	cbz	x9, 2f278 <rpl_re_set_registers@@Base+0xa364>
   2f36c:	ldr	x8, [x9, #16]
   2f370:	subs	x10, x8, #0x1
   2f374:	b.lt	2f278 <rpl_re_set_registers@@Base+0xa364>  // b.tstop
   2f378:	ldr	x8, [x23, #24]
   2f37c:	ldr	x9, [x9, #24]
   2f380:	mov	x11, xzr
   2f384:	ldr	x8, [x8, x20, lsl #3]
   2f388:	b.eq	2f3ac <rpl_re_set_registers@@Base+0xa498>  // b.none
   2f38c:	add	x12, x11, x10
   2f390:	lsr	x12, x12, #1
   2f394:	ldr	x13, [x9, x12, lsl #3]
   2f398:	cmp	x13, x8
   2f39c:	csinc	x11, x11, x12, ge  // ge = tcont
   2f3a0:	csel	x10, x10, x12, lt  // lt = tstop
   2f3a4:	cmp	x11, x10
   2f3a8:	b.cc	2f38c <rpl_re_set_registers@@Base+0xa478>  // b.lo, b.ul, b.last
   2f3ac:	cbz	w0, 2f278 <rpl_re_set_registers@@Base+0xa364>
   2f3b0:	ldr	x9, [x9, x11, lsl #3]
   2f3b4:	cmp	x9, x8
   2f3b8:	b.ne	2f278 <rpl_re_set_registers@@Base+0xa364>  // b.any
   2f3bc:	ldr	x8, [x14, #40]
   2f3c0:	str	x20, [sp, #40]
   2f3c4:	cbz	x8, 2f220 <rpl_re_set_registers@@Base+0xa30c>
   2f3c8:	ldr	x9, [sp, #56]
   2f3cc:	ldr	x11, [sp, #40]
   2f3d0:	add	x23, x21, w0, sxtw
   2f3d4:	mov	x24, xzr
   2f3d8:	ldr	x10, [x9, #24]
   2f3dc:	ldr	x9, [x15, #200]
   2f3e0:	ldr	x10, [x10, x11, lsl #3]
   2f3e4:	cmp	x9, #0x1
   2f3e8:	str	x10, [sp, #24]
   2f3ec:	b.lt	2f424 <rpl_re_set_registers@@Base+0xa510>  // b.tstop
   2f3f0:	ldr	x10, [x15, #216]
   2f3f4:	mov	x11, x9
   2f3f8:	add	x12, x11, x24
   2f3fc:	cmp	x12, #0x0
   2f400:	cinc	x12, x12, lt  // lt = tstop
   2f404:	asr	x12, x12, #1
   2f408:	madd	x13, x12, x28, x10
   2f40c:	ldr	x13, [x13, #8]
   2f410:	cmp	x13, x23
   2f414:	csel	x11, x11, x12, lt  // lt = tstop
   2f418:	csinc	x24, x24, x12, ge  // ge = tcont
   2f41c:	cmp	x24, x11
   2f420:	b.lt	2f3f8 <rpl_re_set_registers@@Base+0xa4e4>  // b.tstop
   2f424:	cmp	x24, x9
   2f428:	b.ge	2f440 <rpl_re_set_registers@@Base+0xa52c>  // b.tcont
   2f42c:	ldr	x10, [x15, #216]
   2f430:	madd	x10, x24, x28, x10
   2f434:	ldr	x10, [x10, #8]
   2f438:	cmp	x10, x23
   2f43c:	b.eq	2f444 <rpl_re_set_registers@@Base+0xa530>  // b.none
   2f440:	mov	x24, #0xffffffffffffffff    	// #-1
   2f444:	cmp	x9, #0x1
   2f448:	b.lt	2f4b8 <rpl_re_set_registers@@Base+0xa5a4>  // b.tstop
   2f44c:	ldr	x10, [x15, #216]
   2f450:	mov	x25, xzr
   2f454:	mov	x11, x9
   2f458:	add	x12, x11, x25
   2f45c:	cmp	x12, #0x0
   2f460:	cinc	x12, x12, lt  // lt = tstop
   2f464:	asr	x12, x12, #1
   2f468:	madd	x13, x12, x28, x10
   2f46c:	ldr	x13, [x13, #8]
   2f470:	cmp	x13, x21
   2f474:	csel	x11, x11, x12, lt  // lt = tstop
   2f478:	csinc	x25, x25, x12, ge  // ge = tcont
   2f47c:	cmp	x25, x11
   2f480:	b.lt	2f458 <rpl_re_set_registers@@Base+0xa544>  // b.tstop
   2f484:	cmp	x25, x9
   2f488:	b.lt	2f4c4 <rpl_re_set_registers@@Base+0xa5b0>  // b.tstop
   2f48c:	b	2f4d8 <rpl_re_set_registers@@Base+0xa5c4>
   2f490:	ldr	q0, [sp]
   2f494:	mov	w0, #0x8                   	// #8
   2f498:	stur	q0, [x29, #-32]
   2f49c:	bl	a550 <malloc@plt>
   2f4a0:	ldr	x8, [sp, #40]
   2f4a4:	stur	x0, [x29, #-16]
   2f4a8:	cbz	x0, 2f71c <rpl_re_set_registers@@Base+0xa808>
   2f4ac:	ldp	x15, x14, [x29, #-48]
   2f4b0:	str	x8, [x0]
   2f4b4:	b	2f248 <rpl_re_set_registers@@Base+0xa334>
   2f4b8:	mov	x25, xzr
   2f4bc:	cmp	x25, x9
   2f4c0:	b.ge	2f4d8 <rpl_re_set_registers@@Base+0xa5c4>  // b.tcont
   2f4c4:	ldr	x9, [x15, #216]
   2f4c8:	madd	x9, x25, x28, x9
   2f4cc:	ldr	x9, [x9, #8]
   2f4d0:	cmp	x9, x21
   2f4d4:	b.eq	2f4dc <rpl_re_set_registers@@Base+0xa5c8>  // b.none
   2f4d8:	mov	x25, #0xffffffffffffffff    	// #-1
   2f4dc:	cmp	x8, #0x1
   2f4e0:	b.lt	2f220 <rpl_re_set_registers@@Base+0xa30c>  // b.tstop
   2f4e4:	ldr	x20, [x15, #152]
   2f4e8:	mov	x19, xzr
   2f4ec:	ldr	x8, [x14, #48]
   2f4f0:	ldr	x9, [x15, #216]
   2f4f4:	ldr	x12, [x20]
   2f4f8:	ldr	x8, [x8, x19, lsl #3]
   2f4fc:	madd	x10, x8, x28, x9
   2f500:	ldr	x11, [x10]
   2f504:	ldr	x10, [x10, #16]
   2f508:	lsl	x11, x11, #4
   2f50c:	ldr	x26, [x12, x11]
   2f510:	cmp	x10, x23
   2f514:	b.le	2f528 <rpl_re_set_registers@@Base+0xa614>
   2f518:	mov	w27, #0xffffffff            	// #-1
   2f51c:	cmp	x10, x16
   2f520:	b.lt	2f59c <rpl_re_set_registers@@Base+0xa688>  // b.tstop
   2f524:	b	2f608 <rpl_re_set_registers@@Base+0xa6f4>
   2f528:	madd	x11, x8, x28, x9
   2f52c:	ldr	x11, [x11, #24]
   2f530:	cmp	x11, x23
   2f534:	b.ge	2f548 <rpl_re_set_registers@@Base+0xa634>  // b.tcont
   2f538:	mov	w27, #0x1                   	// #1
   2f53c:	cmp	x10, x16
   2f540:	b.lt	2f59c <rpl_re_set_registers@@Base+0xa688>  // b.tstop
   2f544:	b	2f608 <rpl_re_set_registers@@Base+0xa6f4>
   2f548:	cmp	x10, x23
   2f54c:	cset	w1, eq  // eq = none
   2f550:	cmp	x11, x23
   2f554:	cset	w11, eq  // eq = none
   2f558:	bfi	w1, w11, #1, #1
   2f55c:	cbz	w1, 2f5fc <rpl_re_set_registers@@Base+0xa6e8>
   2f560:	ldr	x3, [sp, #24]
   2f564:	mov	x0, x15
   2f568:	mov	x2, x26
   2f56c:	mov	x4, x24
   2f570:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   2f574:	ldp	x15, x14, [x29, #-48]
   2f578:	ldr	x16, [sp, #48]
   2f57c:	mov	w27, w0
   2f580:	ldr	x8, [x14, #48]
   2f584:	ldr	x9, [x15, #216]
   2f588:	ldr	x8, [x8, x19, lsl #3]
   2f58c:	madd	x10, x8, x28, x9
   2f590:	ldr	x10, [x10, #16]
   2f594:	cmp	x10, x16
   2f598:	b.ge	2f608 <rpl_re_set_registers@@Base+0xa6f4>  // b.tcont
   2f59c:	madd	x8, x8, x28, x9
   2f5a0:	ldr	x8, [x8, #24]
   2f5a4:	cmp	x8, x21
   2f5a8:	b.ge	2f5bc <rpl_re_set_registers@@Base+0xa6a8>  // b.tcont
   2f5ac:	mov	w0, #0x1                   	// #1
   2f5b0:	cmp	w0, w27
   2f5b4:	b.eq	2f614 <rpl_re_set_registers@@Base+0xa700>  // b.none
   2f5b8:	b	2f248 <rpl_re_set_registers@@Base+0xa334>
   2f5bc:	cmp	x10, x21
   2f5c0:	cset	w1, eq  // eq = none
   2f5c4:	cmp	x8, x21
   2f5c8:	cset	w8, eq  // eq = none
   2f5cc:	bfi	w1, w8, #1, #1
   2f5d0:	cbz	w1, 2f628 <rpl_re_set_registers@@Base+0xa714>
   2f5d4:	ldr	x3, [sp, #40]
   2f5d8:	mov	x0, x15
   2f5dc:	mov	x2, x26
   2f5e0:	mov	x4, x25
   2f5e4:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   2f5e8:	ldr	x16, [sp, #48]
   2f5ec:	ldp	x15, x14, [x29, #-48]
   2f5f0:	cmp	w0, w27
   2f5f4:	b.eq	2f614 <rpl_re_set_registers@@Base+0xa700>  // b.none
   2f5f8:	b	2f248 <rpl_re_set_registers@@Base+0xa334>
   2f5fc:	mov	w27, wzr
   2f600:	cmp	x10, x16
   2f604:	b.lt	2f59c <rpl_re_set_registers@@Base+0xa688>  // b.tstop
   2f608:	mov	w0, #0xffffffff            	// #-1
   2f60c:	cmp	w0, w27
   2f610:	b.ne	2f248 <rpl_re_set_registers@@Base+0xa334>  // b.any
   2f614:	ldr	x8, [x14, #40]
   2f618:	add	x19, x19, #0x1
   2f61c:	cmp	x19, x8
   2f620:	b.lt	2f4ec <rpl_re_set_registers@@Base+0xa5d8>  // b.tstop
   2f624:	b	2f220 <rpl_re_set_registers@@Base+0xa30c>
   2f628:	mov	w0, wzr
   2f62c:	cmp	w0, w27
   2f630:	b.eq	2f614 <rpl_re_set_registers@@Base+0xa700>  // b.none
   2f634:	b	2f248 <rpl_re_set_registers@@Base+0xa334>
   2f638:	cmp	x9, x8
   2f63c:	b.ne	2f668 <rpl_re_set_registers@@Base+0xa754>  // b.any
   2f640:	ldur	x0, [x29, #-16]
   2f644:	lsl	x8, x9, #1
   2f648:	lsl	x1, x9, #4
   2f64c:	stur	x8, [x29, #-32]
   2f650:	bl	a730 <realloc@plt>
   2f654:	cbz	x0, 2f73c <rpl_re_set_registers@@Base+0xa828>
   2f658:	ldur	x8, [x29, #-24]
   2f65c:	ldp	x15, x14, [x29, #-48]
   2f660:	stur	x0, [x29, #-16]
   2f664:	b	2f66c <rpl_re_set_registers@@Base+0xa758>
   2f668:	ldur	x0, [x29, #-16]
   2f66c:	ldr	x9, [x0]
   2f670:	cmp	x9, x19
   2f674:	b.le	2f6a0 <rpl_re_set_registers@@Base+0xa78c>
   2f678:	cmp	x8, #0x1
   2f67c:	b.lt	2f6c8 <rpl_re_set_registers@@Base+0xa7b4>  // b.tstop
   2f680:	mov	x9, x8
   2f684:	add	x10, x0, x9, lsl #3
   2f688:	ldur	x11, [x10, #-8]
   2f68c:	subs	x8, x9, #0x1
   2f690:	mov	x9, x8
   2f694:	str	x11, [x10]
   2f698:	b.gt	2f684 <rpl_re_set_registers@@Base+0xa770>
   2f69c:	b	2f6c8 <rpl_re_set_registers@@Base+0xa7b4>
   2f6a0:	add	x9, x0, x8, lsl #3
   2f6a4:	ldur	x9, [x9, #-8]
   2f6a8:	cmp	x9, x19
   2f6ac:	b.le	2f6c8 <rpl_re_set_registers@@Base+0xa7b4>
   2f6b0:	add	x10, x0, x8, lsl #3
   2f6b4:	str	x9, [x10]
   2f6b8:	ldur	x9, [x10, #-16]
   2f6bc:	sub	x8, x8, #0x1
   2f6c0:	cmp	x9, x19
   2f6c4:	b.gt	2f6b0 <rpl_re_set_registers@@Base+0xa79c>
   2f6c8:	str	x19, [x0, x8, lsl #3]
   2f6cc:	b	2f23c <rpl_re_set_registers@@Base+0xa328>
   2f6d0:	mov	w22, wzr
   2f6d4:	ldur	x0, [x29, #-16]
   2f6d8:	bl	a970 <free@plt>
   2f6dc:	b	2f6f8 <rpl_re_set_registers@@Base+0xa7e4>
   2f6e0:	lsl	x2, x11, #3
   2f6e4:	mov	w1, wzr
   2f6e8:	bl	a640 <memset@plt>
   2f6ec:	ldur	x0, [x29, #-16]
   2f6f0:	bl	a970 <free@plt>
   2f6f4:	mov	w22, wzr
   2f6f8:	mov	w0, w22
   2f6fc:	ldp	x20, x19, [sp, #192]
   2f700:	ldp	x22, x21, [sp, #176]
   2f704:	ldp	x24, x23, [sp, #160]
   2f708:	ldp	x26, x25, [sp, #144]
   2f70c:	ldp	x28, x27, [sp, #128]
   2f710:	ldp	x29, x30, [sp, #112]
   2f714:	add	sp, sp, #0xd0
   2f718:	ret
   2f71c:	stp	xzr, xzr, [x29, #-32]
   2f720:	mov	w22, #0xc                   	// #12
   2f724:	b	2f6d4 <rpl_re_set_registers@@Base+0xa7c0>
   2f728:	mov	w22, w0
   2f72c:	b	2f6d4 <rpl_re_set_registers@@Base+0xa7c0>
   2f730:	stp	xzr, xzr, [x29, #-32]
   2f734:	mov	w22, #0xc                   	// #12
   2f738:	b	2f6f8 <rpl_re_set_registers@@Base+0xa7e4>
   2f73c:	mov	w22, #0xc                   	// #12
   2f740:	b	2f6d4 <rpl_re_set_registers@@Base+0xa7c0>
   2f744:	sub	sp, sp, #0x150
   2f748:	stp	x29, x30, [sp, #240]
   2f74c:	stp	x28, x27, [sp, #256]
   2f750:	stp	x26, x25, [sp, #272]
   2f754:	stp	x24, x23, [sp, #288]
   2f758:	stp	x22, x21, [sp, #304]
   2f75c:	stp	x20, x19, [sp, #320]
   2f760:	add	x29, sp, #0xf0
   2f764:	ldr	x24, [x0, #152]
   2f768:	stur	wzr, [x29, #-100]
   2f76c:	ldr	x8, [x0, #184]
   2f770:	stur	x2, [x29, #-112]
   2f774:	ldr	x21, [x8, x2, lsl #3]
   2f778:	ldr	x8, [x3, #8]
   2f77c:	stp	x0, x1, [sp, #112]
   2f780:	add	x9, x21, #0x8
   2f784:	cmp	x21, #0x0
   2f788:	csel	x27, xzr, x9, eq  // eq = none
   2f78c:	cbz	x8, 2fac4 <rpl_re_set_registers@@Base+0xabb0>
   2f790:	mov	x23, x3
   2f794:	cbz	x21, 2fadc <rpl_re_set_registers@@Base+0xabc8>
   2f798:	sub	x0, x29, #0x60
   2f79c:	mov	x1, x24
   2f7a0:	mov	x2, x23
   2f7a4:	stur	wzr, [x29, #-96]
   2f7a8:	bl	2e908 <rpl_re_set_registers@@Base+0x99f4>
   2f7ac:	ldur	w26, [x29, #-96]
   2f7b0:	cbnz	w26, 30310 <rpl_re_set_registers@@Base+0xb3fc>
   2f7b4:	mov	x22, x0
   2f7b8:	ldr	x8, [x22, #56]!
   2f7bc:	mov	x25, x0
   2f7c0:	cbnz	x8, 2f830 <rpl_re_set_registers@@Base+0xa91c>
   2f7c4:	ldr	x8, [x23, #8]
   2f7c8:	lsl	x0, x8, #3
   2f7cc:	stp	x8, xzr, [x25, #56]
   2f7d0:	bl	a550 <malloc@plt>
   2f7d4:	cmp	x0, #0x0
   2f7d8:	mov	w26, #0xc                   	// #12
   2f7dc:	csel	w8, w26, wzr, eq  // eq = none
   2f7e0:	str	x0, [x25, #72]
   2f7e4:	stur	w8, [x29, #-96]
   2f7e8:	cbz	x0, 30310 <rpl_re_set_registers@@Base+0xb3fc>
   2f7ec:	ldr	x8, [x23, #8]
   2f7f0:	cmp	x8, #0x1
   2f7f4:	b.lt	2f830 <rpl_re_set_registers@@Base+0xa91c>  // b.tstop
   2f7f8:	mov	x19, xzr
   2f7fc:	mov	w20, #0x18                  	// #24
   2f800:	ldr	x8, [x23, #16]
   2f804:	ldr	x9, [x24, #56]
   2f808:	mov	x0, x22
   2f80c:	ldr	x8, [x8, x19, lsl #3]
   2f810:	madd	x1, x8, x20, x9
   2f814:	bl	2a35c <rpl_re_set_registers@@Base+0x5448>
   2f818:	cbnz	w0, 30308 <rpl_re_set_registers@@Base+0xb3f4>
   2f81c:	ldr	x8, [x23, #8]
   2f820:	add	x19, x19, #0x1
   2f824:	cmp	x19, x8
   2f828:	b.lt	2f800 <rpl_re_set_registers@@Base+0xa8ec>  // b.tstop
   2f82c:	stur	wzr, [x29, #-96]
   2f830:	mov	x0, x23
   2f834:	mov	x1, x27
   2f838:	mov	x2, x22
   2f83c:	bl	30340 <rpl_re_set_registers@@Base+0xb42c>
   2f840:	stur	w0, [x29, #-100]
   2f844:	cbnz	w0, 30320 <rpl_re_set_registers@@Base+0xb40c>
   2f848:	ldr	x15, [sp, #120]
   2f84c:	ldr	x8, [x15, #40]
   2f850:	cbz	x8, 2fadc <rpl_re_set_registers@@Base+0xabc8>
   2f854:	ldur	x14, [x29, #-112]
   2f858:	cmp	x8, #0x1
   2f85c:	b.lt	2fad8 <rpl_re_set_registers@@Base+0xabc4>  // b.tstop
   2f860:	ldr	x8, [sp, #112]
   2f864:	mov	x20, xzr
   2f868:	mov	w25, #0x18                  	// #24
   2f86c:	ldr	x22, [x8, #216]
   2f870:	b	2f884 <rpl_re_set_registers@@Base+0xa970>
   2f874:	ldr	x8, [x15, #40]
   2f878:	add	x20, x20, #0x1
   2f87c:	cmp	x20, x8
   2f880:	b.ge	2fad8 <rpl_re_set_registers@@Base+0xabc4>  // b.tcont
   2f884:	ldr	x8, [x15, #48]
   2f888:	mov	w9, #0x28                  	// #40
   2f88c:	ldr	x8, [x8, x20, lsl #3]
   2f890:	madd	x9, x8, x9, x22
   2f894:	ldr	x9, [x9, #16]
   2f898:	cmp	x9, x14
   2f89c:	b.ge	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tcont
   2f8a0:	mov	w9, #0x28                  	// #40
   2f8a4:	madd	x9, x8, x9, x22
   2f8a8:	ldr	x9, [x9, #8]
   2f8ac:	cmp	x9, x14
   2f8b0:	b.lt	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tstop
   2f8b4:	mov	w9, #0x28                  	// #40
   2f8b8:	madd	x8, x8, x9, x22
   2f8bc:	ldr	x10, [x8]
   2f8c0:	ldr	x9, [x24]
   2f8c4:	ldr	x11, [x8, #24]
   2f8c8:	lsl	x8, x10, #4
   2f8cc:	ldr	x19, [x9, x8]
   2f8d0:	ldr	x8, [x23, #8]
   2f8d4:	cmp	x11, x14
   2f8d8:	b.ne	2f940 <rpl_re_set_registers@@Base+0xaa2c>  // b.any
   2f8dc:	cmp	x8, #0x1
   2f8e0:	b.lt	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tstop
   2f8e4:	ldr	x10, [x23, #16]
   2f8e8:	mov	x28, #0xffffffffffffffff    	// #-1
   2f8ec:	mov	x1, #0xffffffffffffffff    	// #-1
   2f8f0:	b	2f910 <rpl_re_set_registers@@Base+0xa9fc>
   2f8f4:	lsl	x12, x11, #4
   2f8f8:	ldr	x12, [x9, x12]
   2f8fc:	cmp	x19, x12
   2f900:	csel	x28, x11, x28, eq  // eq = none
   2f904:	subs	x8, x8, #0x1
   2f908:	add	x10, x10, #0x8
   2f90c:	b.eq	2f9b0 <rpl_re_set_registers@@Base+0xaa9c>  // b.none
   2f910:	ldr	x11, [x10]
   2f914:	add	x12, x9, x11, lsl #4
   2f918:	ldrb	w12, [x12, #8]
   2f91c:	cmp	w12, #0x9
   2f920:	b.eq	2f8f4 <rpl_re_set_registers@@Base+0xa9e0>  // b.none
   2f924:	cmp	w12, #0x8
   2f928:	b.ne	2f904 <rpl_re_set_registers@@Base+0xa9f0>  // b.any
   2f92c:	lsl	x12, x11, #4
   2f930:	ldr	x12, [x9, x12]
   2f934:	cmp	x19, x12
   2f938:	csel	x1, x11, x1, eq  // eq = none
   2f93c:	b	2f904 <rpl_re_set_registers@@Base+0xa9f0>
   2f940:	cmp	x8, #0x1
   2f944:	b.lt	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tstop
   2f948:	mov	x28, xzr
   2f94c:	ldr	x10, [x23, #16]
   2f950:	ldr	x1, [x10, x28, lsl #3]
   2f954:	add	x10, x9, x1, lsl #4
   2f958:	ldr	w10, [x10, #8]
   2f95c:	and	w10, w10, #0xfe
   2f960:	orr	w10, w10, #0x1
   2f964:	cmp	w10, #0x9
   2f968:	b.ne	2f99c <rpl_re_set_registers@@Base+0xaa88>  // b.any
   2f96c:	lsl	x10, x1, #4
   2f970:	ldr	x9, [x9, x10]
   2f974:	cmp	x19, x9
   2f978:	b.ne	2f99c <rpl_re_set_registers@@Base+0xaa88>  // b.any
   2f97c:	mov	x0, x24
   2f980:	mov	x2, x23
   2f984:	mov	x3, x27
   2f988:	bl	30514 <rpl_re_set_registers@@Base+0xb600>
   2f98c:	cbnz	w0, 302dc <rpl_re_set_registers@@Base+0xb3c8>
   2f990:	ldr	x8, [x23, #8]
   2f994:	ldur	x14, [x29, #-112]
   2f998:	ldr	x15, [sp, #120]
   2f99c:	add	x28, x28, #0x1
   2f9a0:	cmp	x28, x8
   2f9a4:	b.ge	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tcont
   2f9a8:	ldr	x9, [x24]
   2f9ac:	b	2f94c <rpl_re_set_registers@@Base+0xaa38>
   2f9b0:	tbnz	x1, #63, 2f9d0 <rpl_re_set_registers@@Base+0xaabc>
   2f9b4:	mov	x0, x24
   2f9b8:	mov	x2, x23
   2f9bc:	mov	x3, x27
   2f9c0:	bl	30514 <rpl_re_set_registers@@Base+0xb600>
   2f9c4:	ldr	x15, [sp, #120]
   2f9c8:	ldur	x14, [x29, #-112]
   2f9cc:	cbnz	w0, 302dc <rpl_re_set_registers@@Base+0xb3c8>
   2f9d0:	tbnz	x28, #63, 2f874 <rpl_re_set_registers@@Base+0xa960>
   2f9d4:	ldr	x8, [x23, #8]
   2f9d8:	cmp	x8, #0x1
   2f9dc:	b.lt	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tstop
   2f9e0:	mov	x19, xzr
   2f9e4:	b	2fa18 <rpl_re_set_registers@@Base+0xab04>
   2f9e8:	mov	x0, x24
   2f9ec:	mov	x2, x23
   2f9f0:	mov	x3, x27
   2f9f4:	bl	30514 <rpl_re_set_registers@@Base+0xb600>
   2f9f8:	cbnz	w0, 302dc <rpl_re_set_registers@@Base+0xb3c8>
   2f9fc:	ldr	x8, [x23, #8]
   2fa00:	ldur	x14, [x29, #-112]
   2fa04:	ldr	x15, [sp, #120]
   2fa08:	sub	x19, x19, #0x1
   2fa0c:	add	x19, x19, #0x1
   2fa10:	cmp	x19, x8
   2fa14:	b.ge	2f874 <rpl_re_set_registers@@Base+0xa960>  // b.tcont
   2fa18:	ldr	x9, [x23, #16]
   2fa1c:	ldr	x1, [x9, x19, lsl #3]
   2fa20:	ldr	x9, [x24, #56]
   2fa24:	madd	x10, x1, x25, x9
   2fa28:	ldr	x10, [x10, #8]
   2fa2c:	subs	x10, x10, #0x1
   2fa30:	b.lt	2fa70 <rpl_re_set_registers@@Base+0xab5c>  // b.tstop
   2fa34:	madd	x9, x1, x25, x9
   2fa38:	ldr	x9, [x9, #16]
   2fa3c:	mov	x11, xzr
   2fa40:	b.eq	2fa64 <rpl_re_set_registers@@Base+0xab50>  // b.none
   2fa44:	add	x12, x11, x10
   2fa48:	lsr	x12, x12, #1
   2fa4c:	ldr	x13, [x9, x12, lsl #3]
   2fa50:	cmp	x13, x28
   2fa54:	csinc	x11, x11, x12, ge  // ge = tcont
   2fa58:	csel	x10, x10, x12, lt  // lt = tstop
   2fa5c:	cmp	x11, x10
   2fa60:	b.cc	2fa44 <rpl_re_set_registers@@Base+0xab30>  // b.lo, b.ul, b.last
   2fa64:	ldr	x9, [x9, x11, lsl #3]
   2fa68:	cmp	x9, x28
   2fa6c:	b.eq	2fa0c <rpl_re_set_registers@@Base+0xaaf8>  // b.none
   2fa70:	ldr	x9, [x24, #48]
   2fa74:	madd	x10, x1, x25, x9
   2fa78:	ldr	x10, [x10, #8]
   2fa7c:	subs	x10, x10, #0x1
   2fa80:	b.lt	2f9e8 <rpl_re_set_registers@@Base+0xaad4>  // b.tstop
   2fa84:	madd	x9, x1, x25, x9
   2fa88:	ldr	x9, [x9, #16]
   2fa8c:	mov	x11, xzr
   2fa90:	b.eq	2fab4 <rpl_re_set_registers@@Base+0xaba0>  // b.none
   2fa94:	add	x12, x11, x10
   2fa98:	lsr	x12, x12, #1
   2fa9c:	ldr	x13, [x9, x12, lsl #3]
   2faa0:	cmp	x13, x28
   2faa4:	csinc	x11, x11, x12, ge  // ge = tcont
   2faa8:	csel	x10, x10, x12, lt  // lt = tstop
   2faac:	cmp	x11, x10
   2fab0:	b.cc	2fa94 <rpl_re_set_registers@@Base+0xab80>  // b.lo, b.ul, b.last
   2fab4:	ldr	x9, [x9, x11, lsl #3]
   2fab8:	cmp	x9, x28
   2fabc:	b.ne	2f9e8 <rpl_re_set_registers@@Base+0xaad4>  // b.any
   2fac0:	b	2fa0c <rpl_re_set_registers@@Base+0xaaf8>
   2fac4:	ldr	x8, [x1]
   2fac8:	mov	x14, x1
   2facc:	mov	x15, x0
   2fad0:	str	xzr, [x8, x2, lsl #3]
   2fad4:	b	2fb04 <rpl_re_set_registers@@Base+0xabf0>
   2fad8:	stur	wzr, [x29, #-100]
   2fadc:	sub	x0, x29, #0x64
   2fae0:	mov	x1, x24
   2fae4:	mov	x2, x23
   2fae8:	bl	2e908 <rpl_re_set_registers@@Base+0x99f4>
   2faec:	ldp	x15, x14, [sp, #112]
   2faf0:	ldur	x2, [x29, #-112]
   2faf4:	ldr	x8, [x14]
   2faf8:	str	x0, [x8, x2, lsl #3]
   2fafc:	ldur	w26, [x29, #-100]
   2fb00:	cbnz	w26, 302b8 <rpl_re_set_registers@@Base+0xb3a4>
   2fb04:	cbz	x21, 302b4 <rpl_re_set_registers@@Base+0xb3a0>
   2fb08:	ldr	x8, [x15, #184]
   2fb0c:	ldr	x8, [x8, x2, lsl #3]
   2fb10:	ldrb	w8, [x8, #104]
   2fb14:	tbz	w8, #6, 302b4 <rpl_re_set_registers@@Base+0xb3a0>
   2fb18:	ldr	x8, [x15, #200]
   2fb1c:	ldr	x28, [x15, #152]
   2fb20:	cmp	x8, #0x1
   2fb24:	b.lt	2fb70 <rpl_re_set_registers@@Base+0xac5c>  // b.tstop
   2fb28:	ldr	x9, [x15, #216]
   2fb2c:	mov	x21, xzr
   2fb30:	mov	w10, #0x28                  	// #40
   2fb34:	mov	x11, x8
   2fb38:	add	x12, x11, x21
   2fb3c:	cmp	x12, #0x0
   2fb40:	cinc	x12, x12, lt  // lt = tstop
   2fb44:	asr	x12, x12, #1
   2fb48:	madd	x13, x12, x10, x9
   2fb4c:	ldr	x13, [x13, #8]
   2fb50:	cmp	x13, x2
   2fb54:	csel	x11, x11, x12, lt  // lt = tstop
   2fb58:	csinc	x21, x21, x12, ge  // ge = tcont
   2fb5c:	cmp	x21, x11
   2fb60:	b.lt	2fb38 <rpl_re_set_registers@@Base+0xac24>  // b.tstop
   2fb64:	cmp	x21, x8
   2fb68:	b.lt	2fb7c <rpl_re_set_registers@@Base+0xac68>  // b.tstop
   2fb6c:	b	302b0 <rpl_re_set_registers@@Base+0xb39c>
   2fb70:	mov	x21, xzr
   2fb74:	cmp	x21, x8
   2fb78:	b.ge	302b0 <rpl_re_set_registers@@Base+0xb39c>  // b.tcont
   2fb7c:	cmn	x21, #0x1
   2fb80:	b.eq	302b0 <rpl_re_set_registers@@Base+0xb39c>  // b.none
   2fb84:	ldr	x8, [x15, #216]
   2fb88:	mov	w9, #0x28                  	// #40
   2fb8c:	madd	x8, x21, x9, x8
   2fb90:	ldr	x8, [x8, #8]
   2fb94:	cmp	x8, x2
   2fb98:	b.ne	302b0 <rpl_re_set_registers@@Base+0xb39c>  // b.any
   2fb9c:	stur	xzr, [x29, #-96]
   2fba0:	ldr	x8, [x27, #8]
   2fba4:	cmp	x8, #0x0
   2fba8:	b.le	302b0 <rpl_re_set_registers@@Base+0xb39c>
   2fbac:	sub	x8, x29, #0x60
   2fbb0:	add	x9, x2, #0x1
   2fbb4:	str	x9, [sp, #32]
   2fbb8:	mov	w9, #0x1                   	// #1
   2fbbc:	add	x8, x8, #0x20
   2fbc0:	mov	x19, xzr
   2fbc4:	mov	w13, #0x28                  	// #40
   2fbc8:	mov	w23, #0x18                  	// #24
   2fbcc:	str	x8, [sp, #8]
   2fbd0:	dup	v0.2d, x9
   2fbd4:	str	xzr, [sp, #88]
   2fbd8:	str	q0, [sp, #16]
   2fbdc:	stp	x28, x27, [sp, #48]
   2fbe0:	b	2fbf4 <rpl_re_set_registers@@Base+0xace0>
   2fbe4:	ldr	x8, [x27, #8]
   2fbe8:	add	x19, x19, #0x1
   2fbec:	cmp	x19, x8
   2fbf0:	b.ge	302e8 <rpl_re_set_registers@@Base+0xb3d4>  // b.tcont
   2fbf4:	ldr	x8, [x27, #16]
   2fbf8:	ldr	x9, [x14, #16]
   2fbfc:	ldr	x16, [x8, x19, lsl #3]
   2fc00:	ldr	x8, [x28]
   2fc04:	cmp	x16, x9
   2fc08:	add	x8, x8, x16, lsl #4
   2fc0c:	ldrb	w8, [x8, #8]
   2fc10:	b.ne	2fc2c <rpl_re_set_registers@@Base+0xad18>  // b.any
   2fc14:	cmp	w8, #0x4
   2fc18:	b.ne	2fbe4 <rpl_re_set_registers@@Base+0xacd0>  // b.any
   2fc1c:	ldr	x8, [x14, #24]
   2fc20:	cmp	x8, x2
   2fc24:	b.ne	2fc34 <rpl_re_set_registers@@Base+0xad20>  // b.any
   2fc28:	b	2fbe4 <rpl_re_set_registers@@Base+0xacd0>
   2fc2c:	cmp	w8, #0x4
   2fc30:	b.ne	2fbe4 <rpl_re_set_registers@@Base+0xacd0>  // b.any
   2fc34:	ldr	x8, [x15, #216]
   2fc38:	mov	x24, x21
   2fc3c:	str	x19, [sp, #64]
   2fc40:	str	x16, [sp, #104]
   2fc44:	madd	x25, x21, x13, x8
   2fc48:	b	2fc60 <rpl_re_set_registers@@Base+0xad4c>
   2fc4c:	ldr	x16, [sp, #104]
   2fc50:	ldrb	w8, [x25, #32]
   2fc54:	add	x25, x25, #0x28
   2fc58:	add	x24, x24, #0x1
   2fc5c:	cbz	w8, 2fbe4 <rpl_re_set_registers@@Base+0xacd0>
   2fc60:	ldr	x8, [x25]
   2fc64:	cmp	x8, x16
   2fc68:	b.ne	2fc50 <rpl_re_set_registers@@Base+0xad3c>  // b.any
   2fc6c:	ldp	x9, x8, [x25, #16]
   2fc70:	subs	x8, x8, x9
   2fc74:	add	x20, x8, x2
   2fc78:	b.eq	2fc94 <rpl_re_set_registers@@Base+0xad80>  // b.none
   2fc7c:	ldr	x8, [x28, #24]
   2fc80:	add	x8, x8, x16, lsl #3
   2fc84:	ldr	x9, [x14, #24]
   2fc88:	cmp	x20, x9
   2fc8c:	b.gt	2fc50 <rpl_re_set_registers@@Base+0xad3c>
   2fc90:	b	2fcac <rpl_re_set_registers@@Base+0xad98>
   2fc94:	ldr	x8, [x28, #40]
   2fc98:	madd	x8, x16, x23, x8
   2fc9c:	ldr	x8, [x8, #16]
   2fca0:	ldr	x9, [x14, #24]
   2fca4:	cmp	x20, x9
   2fca8:	b.gt	2fc50 <rpl_re_set_registers@@Base+0xad3c>
   2fcac:	ldr	x9, [x14]
   2fcb0:	ldr	x10, [x9, x20, lsl #3]
   2fcb4:	cbz	x10, 2fc50 <rpl_re_set_registers@@Base+0xad3c>
   2fcb8:	ldr	x9, [x10, #16]
   2fcbc:	subs	x9, x9, #0x1
   2fcc0:	b.lt	2fc50 <rpl_re_set_registers@@Base+0xad3c>  // b.tstop
   2fcc4:	ldr	x26, [x8]
   2fcc8:	ldr	x8, [x10, #24]
   2fccc:	mov	x10, xzr
   2fcd0:	b.eq	2fcf4 <rpl_re_set_registers@@Base+0xade0>  // b.none
   2fcd4:	add	x11, x10, x9
   2fcd8:	lsr	x11, x11, #1
   2fcdc:	ldr	x12, [x8, x11, lsl #3]
   2fce0:	cmp	x12, x26
   2fce4:	csinc	x10, x10, x11, ge  // ge = tcont
   2fce8:	csel	x9, x9, x11, lt  // lt = tstop
   2fcec:	cmp	x10, x9
   2fcf0:	b.cc	2fcd4 <rpl_re_set_registers@@Base+0xadc0>  // b.lo, b.ul, b.last
   2fcf4:	ldr	x8, [x8, x10, lsl #3]
   2fcf8:	cmp	x8, x26
   2fcfc:	b.ne	2fc4c <rpl_re_set_registers@@Base+0xad38>  // b.any
   2fd00:	ldr	x8, [x15, #200]
   2fd04:	cmp	x8, #0x1
   2fd08:	b.lt	2fd50 <rpl_re_set_registers@@Base+0xae3c>  // b.tstop
   2fd0c:	ldr	x9, [x15, #216]
   2fd10:	mov	x27, xzr
   2fd14:	mov	x10, x8
   2fd18:	add	x11, x10, x27
   2fd1c:	cmp	x11, #0x0
   2fd20:	cinc	x11, x11, lt  // lt = tstop
   2fd24:	asr	x11, x11, #1
   2fd28:	madd	x12, x11, x13, x9
   2fd2c:	ldr	x12, [x12, #8]
   2fd30:	cmp	x12, x2
   2fd34:	csel	x10, x10, x11, lt  // lt = tstop
   2fd38:	csinc	x27, x27, x11, ge  // ge = tcont
   2fd3c:	cmp	x27, x10
   2fd40:	b.lt	2fd18 <rpl_re_set_registers@@Base+0xae04>  // b.tstop
   2fd44:	cmp	x27, x8
   2fd48:	b.lt	2fd5c <rpl_re_set_registers@@Base+0xae48>  // b.tstop
   2fd4c:	b	2fd70 <rpl_re_set_registers@@Base+0xae5c>
   2fd50:	mov	x27, xzr
   2fd54:	cmp	x27, x8
   2fd58:	b.ge	2fd70 <rpl_re_set_registers@@Base+0xae5c>  // b.tcont
   2fd5c:	ldr	x9, [x15, #216]
   2fd60:	madd	x9, x27, x13, x9
   2fd64:	ldr	x9, [x9, #8]
   2fd68:	cmp	x9, x2
   2fd6c:	b.eq	2fd74 <rpl_re_set_registers@@Base+0xae60>  // b.none
   2fd70:	mov	x27, #0xffffffffffffffff    	// #-1
   2fd74:	cmp	x8, #0x1
   2fd78:	b.lt	2fdc4 <rpl_re_set_registers@@Base+0xaeb0>  // b.tstop
   2fd7c:	ldr	x9, [x15, #216]
   2fd80:	mov	x28, xzr
   2fd84:	mov	x10, x8
   2fd88:	add	x11, x10, x28
   2fd8c:	cmp	x11, #0x0
   2fd90:	cinc	x11, x11, lt  // lt = tstop
   2fd94:	asr	x11, x11, #1
   2fd98:	madd	x12, x11, x13, x9
   2fd9c:	ldr	x12, [x12, #8]
   2fda0:	cmp	x12, x20
   2fda4:	csel	x10, x10, x11, lt  // lt = tstop
   2fda8:	csinc	x28, x28, x11, ge  // ge = tcont
   2fdac:	cmp	x28, x10
   2fdb0:	b.lt	2fd88 <rpl_re_set_registers@@Base+0xae74>  // b.tstop
   2fdb4:	cmp	x28, x8
   2fdb8:	str	x17, [sp, #80]
   2fdbc:	b.lt	2fdd4 <rpl_re_set_registers@@Base+0xaec0>  // b.tstop
   2fdc0:	b	2fde8 <rpl_re_set_registers@@Base+0xaed4>
   2fdc4:	mov	x28, xzr
   2fdc8:	cmp	x28, x8
   2fdcc:	str	x17, [sp, #80]
   2fdd0:	b.ge	2fde8 <rpl_re_set_registers@@Base+0xaed4>  // b.tcont
   2fdd4:	ldr	x8, [x15, #216]
   2fdd8:	madd	x8, x28, x13, x8
   2fddc:	ldr	x8, [x8, #8]
   2fde0:	cmp	x8, x20
   2fde4:	b.eq	2fdec <rpl_re_set_registers@@Base+0xaed8>  // b.none
   2fde8:	mov	x28, #0xffffffffffffffff    	// #-1
   2fdec:	ldr	x23, [x14, #40]
   2fdf0:	cmp	x23, #0x1
   2fdf4:	b.lt	2ff78 <rpl_re_set_registers@@Base+0xb064>  // b.tstop
   2fdf8:	ldr	x16, [x15, #152]
   2fdfc:	mov	x19, xzr
   2fe00:	str	x16, [sp, #96]
   2fe04:	b	2fe24 <rpl_re_set_registers@@Base+0xaf10>
   2fe08:	mov	w0, #0xffffffff            	// #-1
   2fe0c:	cmp	w0, w23
   2fe10:	b.ne	2ff60 <rpl_re_set_registers@@Base+0xb04c>  // b.any
   2fe14:	ldr	x23, [x14, #40]
   2fe18:	add	x19, x19, #0x1
   2fe1c:	cmp	x19, x23
   2fe20:	b.ge	2ff78 <rpl_re_set_registers@@Base+0xb064>  // b.tcont
   2fe24:	ldr	x8, [x14, #48]
   2fe28:	ldr	x9, [x15, #216]
   2fe2c:	ldr	x12, [x16]
   2fe30:	ldr	x8, [x8, x19, lsl #3]
   2fe34:	madd	x10, x8, x13, x9
   2fe38:	ldr	x11, [x10]
   2fe3c:	ldr	x10, [x10, #16]
   2fe40:	lsl	x11, x11, #4
   2fe44:	ldr	x22, [x12, x11]
   2fe48:	cmp	x10, x2
   2fe4c:	b.le	2fe60 <rpl_re_set_registers@@Base+0xaf4c>
   2fe50:	mov	w23, #0xffffffff            	// #-1
   2fe54:	cmp	x10, x20
   2fe58:	b.gt	2fe08 <rpl_re_set_registers@@Base+0xaef4>
   2fe5c:	b	2feec <rpl_re_set_registers@@Base+0xafd8>
   2fe60:	madd	x11, x8, x13, x9
   2fe64:	ldr	x11, [x11, #24]
   2fe68:	cmp	x11, x2
   2fe6c:	b.ge	2fe80 <rpl_re_set_registers@@Base+0xaf6c>  // b.tcont
   2fe70:	mov	w23, #0x1                   	// #1
   2fe74:	cmp	x10, x20
   2fe78:	b.gt	2fe08 <rpl_re_set_registers@@Base+0xaef4>
   2fe7c:	b	2feec <rpl_re_set_registers@@Base+0xafd8>
   2fe80:	cmp	x10, x2
   2fe84:	cset	w1, eq  // eq = none
   2fe88:	cmp	x11, x2
   2fe8c:	cset	w11, eq  // eq = none
   2fe90:	bfi	w1, w11, #1, #1
   2fe94:	cbz	w1, 2fee0 <rpl_re_set_registers@@Base+0xafcc>
   2fe98:	ldr	x3, [sp, #104]
   2fe9c:	mov	x0, x15
   2fea0:	mov	x2, x22
   2fea4:	mov	x4, x27
   2fea8:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   2feac:	ldp	x15, x14, [sp, #112]
   2feb0:	mov	w13, #0x28                  	// #40
   2feb4:	ldr	x16, [sp, #96]
   2feb8:	ldur	x2, [x29, #-112]
   2febc:	ldr	x8, [x14, #48]
   2fec0:	ldr	x9, [x15, #216]
   2fec4:	mov	w23, w0
   2fec8:	ldr	x8, [x8, x19, lsl #3]
   2fecc:	madd	x10, x8, x13, x9
   2fed0:	ldr	x10, [x10, #16]
   2fed4:	cmp	x10, x20
   2fed8:	b.le	2feec <rpl_re_set_registers@@Base+0xafd8>
   2fedc:	b	2fe08 <rpl_re_set_registers@@Base+0xaef4>
   2fee0:	mov	w23, wzr
   2fee4:	cmp	x10, x20
   2fee8:	b.gt	2fe08 <rpl_re_set_registers@@Base+0xaef4>
   2feec:	madd	x8, x8, x13, x9
   2fef0:	ldr	x8, [x8, #24]
   2fef4:	cmp	x8, x20
   2fef8:	b.ge	2ff0c <rpl_re_set_registers@@Base+0xaff8>  // b.tcont
   2fefc:	mov	w0, #0x1                   	// #1
   2ff00:	cmp	w0, w23
   2ff04:	b.eq	2fe14 <rpl_re_set_registers@@Base+0xaf00>  // b.none
   2ff08:	b	2ff60 <rpl_re_set_registers@@Base+0xb04c>
   2ff0c:	cmp	x10, x20
   2ff10:	cset	w1, eq  // eq = none
   2ff14:	cmp	x8, x20
   2ff18:	cset	w8, eq  // eq = none
   2ff1c:	bfi	w1, w8, #1, #1
   2ff20:	cbz	w1, 2ff54 <rpl_re_set_registers@@Base+0xb040>
   2ff24:	mov	x0, x15
   2ff28:	mov	x2, x22
   2ff2c:	mov	x3, x26
   2ff30:	mov	x4, x28
   2ff34:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   2ff38:	ldr	x16, [sp, #96]
   2ff3c:	ldp	x15, x14, [sp, #112]
   2ff40:	ldur	x2, [x29, #-112]
   2ff44:	mov	w13, #0x28                  	// #40
   2ff48:	cmp	w0, w23
   2ff4c:	b.eq	2fe14 <rpl_re_set_registers@@Base+0xaf00>  // b.none
   2ff50:	b	2ff60 <rpl_re_set_registers@@Base+0xb04c>
   2ff54:	mov	w0, wzr
   2ff58:	cmp	w0, w23
   2ff5c:	b.eq	2fe14 <rpl_re_set_registers@@Base+0xaf00>  // b.none
   2ff60:	ldp	x28, x27, [sp, #48]
   2ff64:	ldr	x19, [sp, #64]
   2ff68:	ldr	x16, [sp, #104]
   2ff6c:	ldr	x17, [sp, #80]
   2ff70:	mov	w23, #0x18                  	// #24
   2ff74:	b	2fc50 <rpl_re_set_registers@@Base+0xad3c>
   2ff78:	ldp	x28, x27, [sp, #48]
   2ff7c:	ldp	x25, x12, [sp, #72]
   2ff80:	ldr	x20, [sp, #104]
   2ff84:	ldr	x8, [sp, #88]
   2ff88:	cbz	x8, 2ffb4 <rpl_re_set_registers@@Base+0xb0a0>
   2ff8c:	ldr	x8, [sp, #40]
   2ff90:	stp	x20, x2, [x29, #-80]
   2ff94:	cbz	x8, 3008c <rpl_re_set_registers@@Base+0xb178>
   2ff98:	mov	w23, #0x18                  	// #24
   2ff9c:	cbnz	x12, 302a0 <rpl_re_set_registers@@Base+0xb38c>
   2ffa0:	mov	w8, #0x1                   	// #1
   2ffa4:	str	x24, [x25]
   2ffa8:	stur	x8, [x29, #-56]
   2ffac:	mov	w20, #0x1                   	// #1
   2ffb0:	b	30104 <rpl_re_set_registers@@Base+0xb1f0>
   2ffb4:	ldr	x8, [x14, #48]
   2ffb8:	ldp	q2, q0, [x14, #16]
   2ffbc:	ldr	q1, [x14]
   2ffc0:	cmp	x23, #0x1
   2ffc4:	stp	q2, q0, [x29, #-80]
   2ffc8:	stp	x23, x8, [x29, #-56]
   2ffcc:	stur	q1, [x29, #-96]
   2ffd0:	b.lt	3007c <rpl_re_set_registers@@Base+0xb168>  // b.tstop
   2ffd4:	lsl	x22, x23, #3
   2ffd8:	mov	x0, x22
   2ffdc:	stur	x23, [x29, #-64]
   2ffe0:	bl	a550 <malloc@plt>
   2ffe4:	stur	x0, [x29, #-48]
   2ffe8:	cbz	x0, 30328 <rpl_re_set_registers@@Base+0xb414>
   2ffec:	ldr	x8, [sp, #120]
   2fff0:	mov	x2, x22
   2fff4:	mov	x25, x0
   2fff8:	ldr	x1, [x8, #48]
   2fffc:	bl	a210 <memcpy@plt>
   30000:	ldur	x8, [x29, #-112]
   30004:	mov	x12, x23
   30008:	mov	w23, #0x18                  	// #24
   3000c:	stp	x20, x8, [x29, #-80]
   30010:	lsl	x8, x12, #1
   30014:	lsl	x1, x12, #4
   30018:	mov	x0, x25
   3001c:	str	x8, [sp, #40]
   30020:	stur	x8, [x29, #-64]
   30024:	mov	x20, x12
   30028:	bl	a730 <realloc@plt>
   3002c:	cbz	x0, 30338 <rpl_re_set_registers@@Base+0xb424>
   30030:	ldur	x2, [x29, #-112]
   30034:	mov	x25, x0
   30038:	mov	x12, x20
   3003c:	stur	x0, [x29, #-48]
   30040:	ldr	x8, [x25]
   30044:	cmp	x8, x24
   30048:	b.le	300c8 <rpl_re_set_registers@@Base+0xb1b4>
   3004c:	ldr	x15, [sp, #112]
   30050:	cmp	x12, #0x1
   30054:	mov	x8, x12
   30058:	b.lt	300f8 <rpl_re_set_registers@@Base+0xb1e4>  // b.tstop
   3005c:	mov	x9, x12
   30060:	add	x10, x25, x9, lsl #3
   30064:	ldur	x11, [x10, #-8]
   30068:	subs	x8, x9, #0x1
   3006c:	mov	x9, x8
   30070:	str	x11, [x10]
   30074:	b.gt	30060 <rpl_re_set_registers@@Base+0xb14c>
   30078:	b	300f8 <rpl_re_set_registers@@Base+0xb1e4>
   3007c:	ldr	x8, [sp, #8]
   30080:	stp	xzr, xzr, [x8]
   30084:	str	xzr, [x8, #16]
   30088:	stp	x20, x2, [x29, #-80]
   3008c:	ldr	q0, [sp, #16]
   30090:	mov	w0, #0x8                   	// #8
   30094:	stur	q0, [x29, #-64]
   30098:	bl	a550 <malloc@plt>
   3009c:	mov	w23, #0x18                  	// #24
   300a0:	stur	x0, [x29, #-48]
   300a4:	cbz	x0, 30328 <rpl_re_set_registers@@Base+0xb414>
   300a8:	ldur	x2, [x29, #-112]
   300ac:	ldr	x15, [sp, #112]
   300b0:	mov	w8, #0x1                   	// #1
   300b4:	mov	x25, x0
   300b8:	str	x24, [x0]
   300bc:	mov	w20, #0x1                   	// #1
   300c0:	str	x8, [sp, #40]
   300c4:	b	30104 <rpl_re_set_registers@@Base+0xb1f0>
   300c8:	add	x8, x25, x12, lsl #3
   300cc:	ldur	x9, [x8, #-8]
   300d0:	ldr	x15, [sp, #112]
   300d4:	mov	x8, x12
   300d8:	cmp	x9, x24
   300dc:	b.le	300f8 <rpl_re_set_registers@@Base+0xb1e4>
   300e0:	add	x10, x25, x8, lsl #3
   300e4:	str	x9, [x10]
   300e8:	ldur	x9, [x10, #-16]
   300ec:	sub	x8, x8, #0x1
   300f0:	cmp	x9, x24
   300f4:	b.gt	300e0 <rpl_re_set_registers@@Base+0xb1cc>
   300f8:	add	x20, x12, #0x1
   300fc:	str	x24, [x25, x8, lsl #3]
   30100:	stur	x20, [x29, #-56]
   30104:	ldur	x8, [x29, #-96]
   30108:	sub	x1, x29, #0x60
   3010c:	mov	x0, x15
   30110:	ldr	x19, [x8, x2, lsl #3]
   30114:	str	x8, [sp, #88]
   30118:	bl	2f124 <rpl_re_set_registers@@Base+0xa210>
   3011c:	cbnz	w0, 30318 <rpl_re_set_registers@@Base+0xb404>
   30120:	ldp	x15, x14, [sp, #112]
   30124:	ldur	x2, [x29, #-112]
   30128:	mov	w13, #0x28                  	// #40
   3012c:	str	x25, [sp, #72]
   30130:	ldr	x22, [x14, #8]
   30134:	cbz	x22, 301c0 <rpl_re_set_registers@@Base+0xb2ac>
   30138:	tbnz	x2, #63, 301b8 <rpl_re_set_registers@@Base+0xb2a4>
   3013c:	ldr	x23, [sp, #88]
   30140:	ldr	x25, [sp, #32]
   30144:	b	3015c <rpl_re_set_registers@@Base+0xb248>
   30148:	str	x8, [x22]
   3014c:	subs	x25, x25, #0x1
   30150:	add	x23, x23, #0x8
   30154:	add	x22, x22, #0x8
   30158:	b.eq	301b8 <rpl_re_set_registers@@Base+0xb2a4>  // b.none
   3015c:	ldr	x9, [x22]
   30160:	ldr	x8, [x23]
   30164:	cbz	x9, 30148 <rpl_re_set_registers@@Base+0xb234>
   30168:	cbz	x8, 3014c <rpl_re_set_registers@@Base+0xb238>
   3016c:	add	x1, x9, #0x8
   30170:	add	x2, x8, #0x8
   30174:	sub	x0, x29, #0x28
   30178:	bl	2d594 <rpl_re_set_registers@@Base+0x8680>
   3017c:	stur	w0, [x29, #-12]
   30180:	cbnz	w0, 30318 <rpl_re_set_registers@@Base+0xb404>
   30184:	sub	x0, x29, #0xc
   30188:	sub	x2, x29, #0x28
   3018c:	mov	x1, x28
   30190:	bl	2e908 <rpl_re_set_registers@@Base+0x99f4>
   30194:	str	x0, [x22]
   30198:	ldur	x0, [x29, #-24]
   3019c:	bl	a970 <free@plt>
   301a0:	ldur	w26, [x29, #-12]
   301a4:	ldur	x2, [x29, #-112]
   301a8:	ldp	x15, x14, [sp, #112]
   301ac:	mov	w13, #0x28                  	// #40
   301b0:	cbz	w26, 3014c <rpl_re_set_registers@@Base+0xb238>
   301b4:	b	302ec <rpl_re_set_registers@@Base+0xb3d8>
   301b8:	ldr	x25, [sp, #72]
   301bc:	mov	w23, #0x18                  	// #24
   301c0:	ldr	x8, [sp, #88]
   301c4:	subs	x17, x20, #0x1
   301c8:	str	x19, [x8, x2, lsl #3]
   301cc:	b.lt	30288 <rpl_re_set_registers@@Base+0xb374>  // b.tstop
   301d0:	ldr	x19, [sp, #64]
   301d4:	ldr	x16, [sp, #104]
   301d8:	mov	x8, xzr
   301dc:	b.eq	30204 <rpl_re_set_registers@@Base+0xb2f0>  // b.none
   301e0:	mov	x9, x17
   301e4:	add	x10, x8, x9
   301e8:	lsr	x10, x10, #1
   301ec:	ldr	x11, [x25, x10, lsl #3]
   301f0:	cmp	x11, x24
   301f4:	csinc	x8, x8, x10, ge  // ge = tcont
   301f8:	csel	x9, x9, x10, lt  // lt = tstop
   301fc:	cmp	x8, x9
   30200:	b.cc	301e4 <rpl_re_set_registers@@Base+0xb2d0>  // b.lo, b.ul, b.last
   30204:	ldr	x9, [x25, x8, lsl #3]
   30208:	cmp	x9, x24
   3020c:	csinv	x9, x8, xzr, eq  // eq = none
   30210:	tbnz	x9, #63, 30290 <rpl_re_set_registers@@Base+0xb37c>
   30214:	cmp	x20, x9
   30218:	b.le	30290 <rpl_re_set_registers@@Base+0xb37c>
   3021c:	cmp	x17, x9
   30220:	stur	x17, [x29, #-56]
   30224:	b.le	30294 <rpl_re_set_registers@@Base+0xb380>
   30228:	mvn	x9, x8
   3022c:	add	x9, x20, x9
   30230:	cmp	x9, #0x4
   30234:	b.cc	3026c <rpl_re_set_registers@@Base+0xb358>  // b.lo, b.ul, b.last
   30238:	and	x10, x9, #0xfffffffffffffffc
   3023c:	add	x11, x25, x8, lsl #3
   30240:	add	x8, x8, x10
   30244:	add	x11, x11, #0x10
   30248:	mov	x12, x10
   3024c:	ldur	q0, [x11, #-8]
   30250:	ldur	q1, [x11, #8]
   30254:	subs	x12, x12, #0x4
   30258:	stp	q0, q1, [x11, #-16]
   3025c:	add	x11, x11, #0x20
   30260:	b.ne	3024c <rpl_re_set_registers@@Base+0xb338>  // b.any
   30264:	cmp	x9, x10
   30268:	b.eq	30294 <rpl_re_set_registers@@Base+0xb380>  // b.none
   3026c:	add	x9, x25, x8, lsl #3
   30270:	ldr	x10, [x9, #8]
   30274:	add	x8, x8, #0x1
   30278:	cmp	x17, x8
   3027c:	str	x10, [x9]
   30280:	b.ne	3026c <rpl_re_set_registers@@Base+0xb358>  // b.any
   30284:	b	30294 <rpl_re_set_registers@@Base+0xb380>
   30288:	ldr	x19, [sp, #64]
   3028c:	ldr	x16, [sp, #104]
   30290:	mov	x17, x20
   30294:	ldr	x8, [x15, #216]
   30298:	madd	x25, x24, x13, x8
   3029c:	b	2fc50 <rpl_re_set_registers@@Base+0xad3c>
   302a0:	ldr	x8, [sp, #40]
   302a4:	cmp	x8, x12
   302a8:	b.eq	30010 <rpl_re_set_registers@@Base+0xb0fc>  // b.none
   302ac:	b	30040 <rpl_re_set_registers@@Base+0xb12c>
   302b0:	stur	wzr, [x29, #-100]
   302b4:	mov	w26, wzr
   302b8:	mov	w0, w26
   302bc:	ldp	x20, x19, [sp, #320]
   302c0:	ldp	x22, x21, [sp, #304]
   302c4:	ldp	x24, x23, [sp, #288]
   302c8:	ldp	x26, x25, [sp, #272]
   302cc:	ldp	x28, x27, [sp, #256]
   302d0:	ldp	x29, x30, [sp, #240]
   302d4:	add	sp, sp, #0x150
   302d8:	ret
   302dc:	mov	w26, w0
   302e0:	stur	w0, [x29, #-100]
   302e4:	b	302b8 <rpl_re_set_registers@@Base+0xb3a4>
   302e8:	mov	w26, wzr
   302ec:	ldur	x8, [x29, #-96]
   302f0:	cbz	x8, 302fc <rpl_re_set_registers@@Base+0xb3e8>
   302f4:	ldur	x0, [x29, #-48]
   302f8:	bl	a970 <free@plt>
   302fc:	stur	w26, [x29, #-100]
   30300:	cbz	w26, 302b4 <rpl_re_set_registers@@Base+0xb3a0>
   30304:	b	302b8 <rpl_re_set_registers@@Base+0xb3a4>
   30308:	mov	w26, #0xc                   	// #12
   3030c:	stur	w0, [x29, #-96]
   30310:	stur	w26, [x29, #-100]
   30314:	b	302b8 <rpl_re_set_registers@@Base+0xb3a4>
   30318:	mov	w26, w0
   3031c:	b	302ec <rpl_re_set_registers@@Base+0xb3d8>
   30320:	mov	w26, w0
   30324:	b	302b8 <rpl_re_set_registers@@Base+0xb3a4>
   30328:	ldr	x8, [sp, #8]
   3032c:	mov	w26, #0xc                   	// #12
   30330:	stp	xzr, xzr, [x8]
   30334:	b	302ec <rpl_re_set_registers@@Base+0xb3d8>
   30338:	mov	w26, #0xc                   	// #12
   3033c:	b	302ec <rpl_re_set_registers@@Base+0xb3d8>
   30340:	stp	x29, x30, [sp, #-48]!
   30344:	stp	x22, x21, [sp, #16]
   30348:	stp	x20, x19, [sp, #32]
   3034c:	ldr	x9, [x1, #8]
   30350:	mov	x29, sp
   30354:	cbz	x9, 304ec <rpl_re_set_registers@@Base+0xb5d8>
   30358:	ldr	x10, [x2, #8]
   3035c:	mov	x20, x2
   30360:	cbz	x10, 304ec <rpl_re_set_registers@@Base+0xb5d8>
   30364:	ldp	x8, x13, [x0]
   30368:	add	x11, x10, x9
   3036c:	mov	x21, x1
   30370:	mov	x19, x0
   30374:	add	x12, x13, x11
   30378:	cmp	x12, x8
   3037c:	b.le	303a8 <rpl_re_set_registers@@Base+0xb494>
   30380:	ldr	x0, [x19, #16]
   30384:	add	x22, x8, x11
   30388:	lsl	x1, x22, #3
   3038c:	bl	a730 <realloc@plt>
   30390:	cbz	x0, 30500 <rpl_re_set_registers@@Base+0xb5ec>
   30394:	str	x0, [x19, #16]
   30398:	str	x22, [x19]
   3039c:	ldr	x13, [x19, #8]
   303a0:	ldr	x9, [x21, #8]
   303a4:	ldr	x10, [x20, #8]
   303a8:	ldr	x11, [x21, #16]
   303ac:	ldr	x12, [x20, #16]
   303b0:	add	x8, x9, x13
   303b4:	add	x8, x8, x10
   303b8:	sub	x13, x13, #0x1
   303bc:	sub	x9, x9, #0x1
   303c0:	mov	x14, x10
   303c4:	sub	x10, x14, #0x1
   303c8:	ldr	x16, [x12, x10, lsl #3]
   303cc:	ldr	x15, [x11, x9, lsl #3]
   303d0:	cmp	x15, x16
   303d4:	b.eq	303fc <rpl_re_set_registers@@Base+0xb4e8>  // b.none
   303d8:	b.lt	303ec <rpl_re_set_registers@@Base+0xb4d8>  // b.tstop
   303dc:	cmp	x9, #0x0
   303e0:	sub	x9, x9, #0x1
   303e4:	b.gt	303cc <rpl_re_set_registers@@Base+0xb4b8>
   303e8:	b	30454 <rpl_re_set_registers@@Base+0xb540>
   303ec:	cmp	x14, #0x2
   303f0:	mov	x14, x10
   303f4:	b.ge	303c4 <rpl_re_set_registers@@Base+0xb4b0>  // b.tcont
   303f8:	b	30454 <rpl_re_set_registers@@Base+0xb540>
   303fc:	tbnz	x13, #63, 30424 <rpl_re_set_registers@@Base+0xb510>
   30400:	ldr	x17, [x19, #16]
   30404:	ldr	x16, [x17, x13, lsl #3]
   30408:	cmp	x16, x15
   3040c:	b.le	3042c <rpl_re_set_registers@@Base+0xb518>
   30410:	sub	x16, x13, #0x1
   30414:	cmp	x13, #0x0
   30418:	mov	x13, x16
   3041c:	b.gt	30404 <rpl_re_set_registers@@Base+0xb4f0>
   30420:	b	30434 <rpl_re_set_registers@@Base+0xb520>
   30424:	mov	x16, x13
   30428:	b	30434 <rpl_re_set_registers@@Base+0xb520>
   3042c:	mov	x16, x13
   30430:	b.eq	30444 <rpl_re_set_registers@@Base+0xb530>  // b.none
   30434:	ldr	x13, [x19, #16]
   30438:	sub	x8, x8, #0x1
   3043c:	str	x15, [x13, x8, lsl #3]
   30440:	mov	x13, x16
   30444:	cmp	x9, #0x1
   30448:	b.lt	30454 <rpl_re_set_registers@@Base+0xb540>  // b.tstop
   3044c:	cmp	x14, #0x2
   30450:	b.ge	303bc <rpl_re_set_registers@@Base+0xb4a8>  // b.tcont
   30454:	ldp	x12, x0, [x19, #8]
   30458:	ldr	x13, [x21, #8]
   3045c:	ldr	x14, [x20, #8]
   30460:	subs	x9, x12, #0x1
   30464:	add	x9, x9, x13
   30468:	add	x10, x9, x14
   3046c:	sub	x15, x10, x8
   30470:	add	x9, x15, #0x1
   30474:	subs	x11, x12, #0x1
   30478:	add	x16, x9, x12
   3047c:	str	x16, [x19, #8]
   30480:	b.lt	304dc <rpl_re_set_registers@@Base+0xb5c8>  // b.tstop
   30484:	tbnz	x15, #63, 304dc <rpl_re_set_registers@@Base+0xb5c8>
   30488:	add	x12, x12, x14
   3048c:	add	x12, x12, x13
   30490:	sub	x12, x12, x8
   30494:	add	x12, x0, x12, lsl #3
   30498:	ldr	x14, [x0, x10, lsl #3]
   3049c:	ldr	x13, [x0, x11, lsl #3]
   304a0:	cmp	x14, x13
   304a4:	b.gt	304c0 <rpl_re_set_registers@@Base+0xb5ac>
   304a8:	sub	x14, x11, #0x1
   304ac:	cmp	x11, #0x0
   304b0:	str	x13, [x12, x11, lsl #3]
   304b4:	mov	x11, x14
   304b8:	b.gt	30498 <rpl_re_set_registers@@Base+0xb584>
   304bc:	b	304dc <rpl_re_set_registers@@Base+0xb5c8>
   304c0:	mov	x13, xzr
   304c4:	sub	x10, x10, #0x1
   304c8:	sub	x9, x9, #0x1
   304cc:	str	x14, [x12, x11, lsl #3]
   304d0:	sub	x12, x12, #0x8
   304d4:	cbnz	x9, 30498 <rpl_re_set_registers@@Base+0xb584>
   304d8:	b	304e0 <rpl_re_set_registers@@Base+0xb5cc>
   304dc:	mov	x13, x9
   304e0:	add	x1, x0, x8, lsl #3
   304e4:	lsl	x2, x13, #3
   304e8:	bl	a210 <memcpy@plt>
   304ec:	mov	w0, wzr
   304f0:	ldp	x20, x19, [sp, #32]
   304f4:	ldp	x22, x21, [sp, #16]
   304f8:	ldp	x29, x30, [sp], #48
   304fc:	ret
   30500:	mov	w0, #0xc                   	// #12
   30504:	ldp	x20, x19, [sp, #32]
   30508:	ldp	x22, x21, [sp, #16]
   3050c:	ldp	x29, x30, [sp], #48
   30510:	ret
   30514:	sub	sp, sp, #0x80
   30518:	stp	x29, x30, [sp, #32]
   3051c:	stp	x28, x27, [sp, #48]
   30520:	stp	x26, x25, [sp, #64]
   30524:	stp	x24, x23, [sp, #80]
   30528:	stp	x22, x21, [sp, #96]
   3052c:	stp	x20, x19, [sp, #112]
   30530:	ldr	x25, [x0, #56]
   30534:	mov	w8, #0x18                  	// #24
   30538:	stp	xzr, xzr, [sp, #8]
   3053c:	str	xzr, [sp, #24]
   30540:	madd	x24, x1, x8, x25
   30544:	ldr	x8, [x24, #8]!
   30548:	add	x29, sp, #0x20
   3054c:	cmp	x8, #0x1
   30550:	b.lt	307ec <rpl_re_set_registers@@Base+0xb8d8>  // b.tstop
   30554:	mov	w27, #0x18                  	// #24
   30558:	madd	x9, x1, x27, x25
   3055c:	mov	x21, x3
   30560:	mov	x20, x1
   30564:	mov	x22, x0
   30568:	mov	x19, x2
   3056c:	mov	x26, xzr
   30570:	add	x28, x9, #0x10
   30574:	b	30584 <rpl_re_set_registers@@Base+0xb670>
   30578:	add	x26, x26, #0x1
   3057c:	cmp	x26, x8
   30580:	b.ge	306f8 <rpl_re_set_registers@@Base+0xb7e4>  // b.tcont
   30584:	ldr	x11, [x28]
   30588:	ldr	x9, [x11, x26, lsl #3]
   3058c:	cmp	x9, x20
   30590:	b.eq	30578 <rpl_re_set_registers@@Base+0xb664>  // b.none
   30594:	ldr	x10, [x22]
   30598:	add	x10, x10, x9, lsl #4
   3059c:	ldrb	w10, [x10, #8]
   305a0:	tbz	w10, #3, 30578 <rpl_re_set_registers@@Base+0xb664>
   305a4:	ldr	x10, [x22, #40]
   305a8:	madd	x12, x9, x27, x10
   305ac:	ldp	x13, x10, [x12, #8]
   305b0:	ldr	x12, [x10]
   305b4:	cmp	x13, #0x1
   305b8:	b.le	305cc <rpl_re_set_registers@@Base+0xb6b8>
   305bc:	ldr	x10, [x10, #8]
   305c0:	subs	x13, x8, #0x1
   305c4:	b.ge	305d8 <rpl_re_set_registers@@Base+0xb6c4>  // b.tcont
   305c8:	b	3060c <rpl_re_set_registers@@Base+0xb6f8>
   305cc:	mov	x10, #0xffffffffffffffff    	// #-1
   305d0:	subs	x13, x8, #0x1
   305d4:	b.lt	3060c <rpl_re_set_registers@@Base+0xb6f8>  // b.tstop
   305d8:	mov	x14, xzr
   305dc:	b.eq	30600 <rpl_re_set_registers@@Base+0xb6ec>  // b.none
   305e0:	add	x15, x14, x13
   305e4:	lsr	x15, x15, #1
   305e8:	ldr	x16, [x11, x15, lsl #3]
   305ec:	cmp	x16, x12
   305f0:	csinc	x14, x14, x15, ge  // ge = tcont
   305f4:	csel	x13, x13, x15, lt  // lt = tstop
   305f8:	cmp	x14, x13
   305fc:	b.cc	305e0 <rpl_re_set_registers@@Base+0xb6cc>  // b.lo, b.ul, b.last
   30600:	ldr	x13, [x11, x14, lsl #3]
   30604:	cmp	x13, x12
   30608:	b.eq	30650 <rpl_re_set_registers@@Base+0xb73c>  // b.none
   3060c:	ldr	x13, [x19, #8]
   30610:	subs	x14, x13, #0x1
   30614:	b.lt	30650 <rpl_re_set_registers@@Base+0xb73c>  // b.tstop
   30618:	ldr	x13, [x19, #16]
   3061c:	mov	x15, xzr
   30620:	b.eq	30644 <rpl_re_set_registers@@Base+0xb730>  // b.none
   30624:	add	x16, x15, x14
   30628:	lsr	x16, x16, #1
   3062c:	ldr	x17, [x13, x16, lsl #3]
   30630:	cmp	x17, x12
   30634:	csinc	x15, x15, x16, ge  // ge = tcont
   30638:	csel	x14, x14, x16, lt  // lt = tstop
   3063c:	cmp	x15, x14
   30640:	b.cc	30624 <rpl_re_set_registers@@Base+0xb710>  // b.lo, b.ul, b.last
   30644:	ldr	x13, [x13, x15, lsl #3]
   30648:	cmp	x13, x12
   3064c:	b.eq	306d8 <rpl_re_set_registers@@Base+0xb7c4>  // b.none
   30650:	cmp	x10, #0x1
   30654:	b.lt	30578 <rpl_re_set_registers@@Base+0xb664>  // b.tstop
   30658:	subs	x12, x8, #0x1
   3065c:	b.lt	30694 <rpl_re_set_registers@@Base+0xb780>  // b.tstop
   30660:	mov	x13, xzr
   30664:	b.eq	30688 <rpl_re_set_registers@@Base+0xb774>  // b.none
   30668:	add	x14, x13, x12
   3066c:	lsr	x14, x14, #1
   30670:	ldr	x15, [x11, x14, lsl #3]
   30674:	cmp	x15, x10
   30678:	csinc	x13, x13, x14, ge  // ge = tcont
   3067c:	csel	x12, x12, x14, lt  // lt = tstop
   30680:	cmp	x13, x12
   30684:	b.cc	30668 <rpl_re_set_registers@@Base+0xb754>  // b.lo, b.ul, b.last
   30688:	ldr	x11, [x11, x13, lsl #3]
   3068c:	cmp	x11, x10
   30690:	b.eq	30578 <rpl_re_set_registers@@Base+0xb664>  // b.none
   30694:	ldr	x11, [x19, #8]
   30698:	subs	x12, x11, #0x1
   3069c:	b.lt	30578 <rpl_re_set_registers@@Base+0xb664>  // b.tstop
   306a0:	ldr	x11, [x19, #16]
   306a4:	mov	x13, xzr
   306a8:	b.eq	306cc <rpl_re_set_registers@@Base+0xb7b8>  // b.none
   306ac:	add	x14, x13, x12
   306b0:	lsr	x14, x14, #1
   306b4:	ldr	x15, [x11, x14, lsl #3]
   306b8:	cmp	x15, x10
   306bc:	csinc	x13, x13, x14, ge  // ge = tcont
   306c0:	csel	x12, x12, x14, lt  // lt = tstop
   306c4:	cmp	x13, x12
   306c8:	b.cc	306ac <rpl_re_set_registers@@Base+0xb798>  // b.lo, b.ul, b.last
   306cc:	ldr	x11, [x11, x13, lsl #3]
   306d0:	cmp	x11, x10
   306d4:	b.ne	30578 <rpl_re_set_registers@@Base+0xb664>  // b.any
   306d8:	ldr	x8, [x22, #56]
   306dc:	add	x0, sp, #0x8
   306e0:	mov	x1, x21
   306e4:	madd	x2, x9, x27, x8
   306e8:	bl	30340 <rpl_re_set_registers@@Base+0xb42c>
   306ec:	cbnz	w0, 308bc <rpl_re_set_registers@@Base+0xb9a8>
   306f0:	ldr	x8, [x24]
   306f4:	b	30578 <rpl_re_set_registers@@Base+0xb664>
   306f8:	cmp	x8, #0x0
   306fc:	b.le	307ec <rpl_re_set_registers@@Base+0xb8d8>
   30700:	mov	w8, #0x18                  	// #24
   30704:	madd	x8, x20, x8, x25
   30708:	ldp	x9, x0, [sp, #16]
   3070c:	ldr	x8, [x8, #16]
   30710:	subs	x9, x9, #0x1
   30714:	b.lt	3081c <rpl_re_set_registers@@Base+0xb908>  // b.tstop
   30718:	mov	x10, xzr
   3071c:	b	30730 <rpl_re_set_registers@@Base+0xb81c>
   30720:	ldr	x11, [x24]
   30724:	add	x10, x10, #0x1
   30728:	cmp	x10, x11
   3072c:	b.ge	307f0 <rpl_re_set_registers@@Base+0xb8dc>  // b.tcont
   30730:	ldr	x11, [x8, x10, lsl #3]
   30734:	mov	x12, xzr
   30738:	cbz	x9, 30760 <rpl_re_set_registers@@Base+0xb84c>
   3073c:	mov	x13, x9
   30740:	add	x14, x12, x13
   30744:	lsr	x14, x14, #1
   30748:	ldr	x15, [x0, x14, lsl #3]
   3074c:	cmp	x15, x11
   30750:	csinc	x12, x12, x14, ge  // ge = tcont
   30754:	csel	x13, x13, x14, lt  // lt = tstop
   30758:	cmp	x12, x13
   3075c:	b.cc	30740 <rpl_re_set_registers@@Base+0xb82c>  // b.lo, b.ul, b.last
   30760:	ldr	x12, [x0, x12, lsl #3]
   30764:	cmp	x12, x11
   30768:	b.eq	30720 <rpl_re_set_registers@@Base+0xb80c>  // b.none
   3076c:	ldr	x15, [x19, #8]
   30770:	subs	x14, x15, #0x1
   30774:	b.lt	30720 <rpl_re_set_registers@@Base+0xb80c>  // b.tstop
   30778:	ldr	x12, [x19, #16]
   3077c:	mov	x13, xzr
   30780:	b.eq	307a8 <rpl_re_set_registers@@Base+0xb894>  // b.none
   30784:	mov	x16, x14
   30788:	add	x17, x13, x16
   3078c:	lsr	x17, x17, #1
   30790:	ldr	x18, [x12, x17, lsl #3]
   30794:	cmp	x18, x11
   30798:	csinc	x13, x13, x17, ge  // ge = tcont
   3079c:	csel	x16, x16, x17, lt  // lt = tstop
   307a0:	cmp	x13, x16
   307a4:	b.cc	30788 <rpl_re_set_registers@@Base+0xb874>  // b.lo, b.ul, b.last
   307a8:	ldr	x16, [x12, x13, lsl #3]
   307ac:	cmp	x16, x11
   307b0:	csinv	x11, x13, xzr, eq  // eq = none
   307b4:	tbnz	x11, #63, 30720 <rpl_re_set_registers@@Base+0xb80c>
   307b8:	cmp	x15, x11
   307bc:	b.le	30720 <rpl_re_set_registers@@Base+0xb80c>
   307c0:	cmp	x14, x11
   307c4:	str	x14, [x19, #8]
   307c8:	b.le	30720 <rpl_re_set_registers@@Base+0xb80c>
   307cc:	add	x11, x12, x13, lsl #3
   307d0:	ldr	x14, [x11, #8]
   307d4:	add	x13, x13, #0x1
   307d8:	str	x14, [x11]
   307dc:	ldr	x11, [x19, #8]
   307e0:	cmp	x13, x11
   307e4:	b.lt	307cc <rpl_re_set_registers@@Base+0xb8b8>  // b.tstop
   307e8:	b	30720 <rpl_re_set_registers@@Base+0xb80c>
   307ec:	ldr	x0, [sp, #24]
   307f0:	mov	w23, wzr
   307f4:	bl	a970 <free@plt>
   307f8:	mov	w0, w23
   307fc:	ldp	x20, x19, [sp, #112]
   30800:	ldp	x22, x21, [sp, #96]
   30804:	ldp	x24, x23, [sp, #80]
   30808:	ldp	x26, x25, [sp, #64]
   3080c:	ldp	x28, x27, [sp, #48]
   30810:	ldp	x29, x30, [sp, #32]
   30814:	add	sp, sp, #0x80
   30818:	ret
   3081c:	ldr	x10, [x19, #8]
   30820:	mov	x9, xzr
   30824:	b	30838 <rpl_re_set_registers@@Base+0xb924>
   30828:	ldr	x11, [x24]
   3082c:	add	x9, x9, #0x1
   30830:	cmp	x9, x11
   30834:	b.ge	307f0 <rpl_re_set_registers@@Base+0xb8dc>  // b.tcont
   30838:	subs	x13, x10, #0x1
   3083c:	b.lt	30828 <rpl_re_set_registers@@Base+0xb914>  // b.tstop
   30840:	ldr	x14, [x8, x9, lsl #3]
   30844:	ldr	x11, [x19, #16]
   30848:	mov	x12, xzr
   3084c:	b.eq	30874 <rpl_re_set_registers@@Base+0xb960>  // b.none
   30850:	mov	x15, x13
   30854:	add	x16, x12, x15
   30858:	lsr	x16, x16, #1
   3085c:	ldr	x17, [x11, x16, lsl #3]
   30860:	cmp	x17, x14
   30864:	csinc	x12, x12, x16, ge  // ge = tcont
   30868:	csel	x15, x15, x16, lt  // lt = tstop
   3086c:	cmp	x12, x15
   30870:	b.cc	30854 <rpl_re_set_registers@@Base+0xb940>  // b.lo, b.ul, b.last
   30874:	ldr	x15, [x11, x12, lsl #3]
   30878:	cmp	x15, x14
   3087c:	csinv	x14, x12, xzr, eq  // eq = none
   30880:	tbnz	x14, #63, 30828 <rpl_re_set_registers@@Base+0xb914>
   30884:	cmp	x10, x14
   30888:	b.le	30828 <rpl_re_set_registers@@Base+0xb914>
   3088c:	cmp	x13, x14
   30890:	mov	x10, x13
   30894:	str	x13, [x19, #8]
   30898:	b.le	30828 <rpl_re_set_registers@@Base+0xb914>
   3089c:	add	x10, x11, x12, lsl #3
   308a0:	ldr	x13, [x10, #8]
   308a4:	add	x12, x12, #0x1
   308a8:	str	x13, [x10]
   308ac:	ldr	x10, [x19, #8]
   308b0:	cmp	x12, x10
   308b4:	b.lt	3089c <rpl_re_set_registers@@Base+0xb988>  // b.tstop
   308b8:	b	30828 <rpl_re_set_registers@@Base+0xb914>
   308bc:	mov	w23, w0
   308c0:	ldr	x0, [sp, #24]
   308c4:	b	307f4 <rpl_re_set_registers@@Base+0xb8e0>
   308c8:	sub	sp, sp, #0x80
   308cc:	stp	x29, x30, [sp, #32]
   308d0:	stp	x28, x27, [sp, #48]
   308d4:	stp	x26, x25, [sp, #64]
   308d8:	stp	x24, x23, [sp, #80]
   308dc:	stp	x22, x21, [sp, #96]
   308e0:	stp	x20, x19, [sp, #112]
   308e4:	ldr	x24, [x0, #152]
   308e8:	mov	w9, #0x18                  	// #24
   308ec:	mov	w23, w1
   308f0:	add	x29, sp, #0x20
   308f4:	ldr	x8, [x24, #48]
   308f8:	madd	x25, x3, x9, x8
   308fc:	ldr	x9, [x25, #8]!
   30900:	cmp	x9, #0x1
   30904:	b.lt	30b50 <rpl_re_set_registers@@Base+0xbc3c>  // b.tstop
   30908:	mov	w11, #0x18                  	// #24
   3090c:	cmp	x2, #0x3f
   30910:	madd	x8, x3, x11, x8
   30914:	and	w9, w23, #0x2
   30918:	mov	w10, #0x1                   	// #1
   3091c:	cset	w11, gt
   30920:	add	x8, x8, #0x10
   30924:	lsl	x10, x10, x2
   30928:	stur	x8, [x29, #-8]
   3092c:	orr	w8, w11, w9, lsr #1
   30930:	mov	x19, x4
   30934:	mov	x20, x3
   30938:	mov	x21, x2
   3093c:	mov	x22, x0
   30940:	mov	x26, xzr
   30944:	str	w8, [sp, #8]
   30948:	mvn	w8, w10
   3094c:	str	x10, [sp, #16]
   30950:	str	w8, [sp, #12]
   30954:	b	30968 <rpl_re_set_registers@@Base+0xba54>
   30958:	ldr	x8, [x25]
   3095c:	add	x26, x26, #0x1
   30960:	cmp	x26, x8
   30964:	b.ge	30b50 <rpl_re_set_registers@@Base+0xbc3c>  // b.tcont
   30968:	ldur	x8, [x29, #-8]
   3096c:	ldr	x8, [x8]
   30970:	ldr	x28, [x8, x26, lsl #3]
   30974:	ldr	x8, [x24]
   30978:	add	x8, x8, x28, lsl #4
   3097c:	ldrb	w9, [x8, #8]
   30980:	cmp	w9, #0x9
   30984:	b.eq	309bc <rpl_re_set_registers@@Base+0xbaa8>  // b.none
   30988:	cmp	w9, #0x8
   3098c:	b.eq	309d0 <rpl_re_set_registers@@Base+0xbabc>  // b.none
   30990:	cmp	w9, #0x4
   30994:	b.ne	30958 <rpl_re_set_registers@@Base+0xba44>  // b.any
   30998:	cmn	x19, #0x1
   3099c:	b.eq	30958 <rpl_re_set_registers@@Base+0xba44>  // b.none
   309a0:	ldr	x8, [x22, #216]
   309a4:	cmp	x21, #0x3f
   309a8:	b.gt	30a68 <rpl_re_set_registers@@Base+0xbb54>
   309ac:	mov	w9, #0x28                  	// #40
   309b0:	madd	x8, x19, x9, x8
   309b4:	add	x27, x8, #0x22
   309b8:	b	30a08 <rpl_re_set_registers@@Base+0xbaf4>
   309bc:	tbz	w23, #1, 30958 <rpl_re_set_registers@@Base+0xba44>
   309c0:	ldr	x8, [x8]
   309c4:	cmp	x8, x21
   309c8:	b.ne	30958 <rpl_re_set_registers@@Base+0xba44>  // b.any
   309cc:	b	30b60 <rpl_re_set_registers@@Base+0xbc4c>
   309d0:	tbz	w23, #0, 30958 <rpl_re_set_registers@@Base+0xba44>
   309d4:	ldr	x8, [x8]
   309d8:	cmp	x8, x21
   309dc:	b.ne	30958 <rpl_re_set_registers@@Base+0xba44>  // b.any
   309e0:	b	30b68 <rpl_re_set_registers@@Base+0xbc54>
   309e4:	cmn	w0, #0x1
   309e8:	b.eq	30b6c <rpl_re_set_registers@@Base+0xbc58>  // b.none
   309ec:	ldrh	w8, [x27]
   309f0:	ldr	w9, [sp, #12]
   309f4:	and	w8, w8, w9
   309f8:	strh	w8, [x27]
   309fc:	ldurb	w8, [x27, #-2]
   30a00:	add	x27, x27, #0x28
   30a04:	cbz	w8, 30958 <rpl_re_set_registers@@Base+0xba44>
   30a08:	ldur	x8, [x27, #-34]
   30a0c:	cmp	x8, x28
   30a10:	b.ne	309fc <rpl_re_set_registers@@Base+0xbae8>  // b.any
   30a14:	ldrh	w8, [x27]
   30a18:	ldr	x9, [sp, #16]
   30a1c:	tst	x9, x8
   30a20:	b.eq	309fc <rpl_re_set_registers@@Base+0xbae8>  // b.none
   30a24:	ldr	x8, [x24, #40]
   30a28:	mov	w9, #0x18                  	// #24
   30a2c:	madd	x8, x28, x9, x8
   30a30:	ldr	x8, [x8, #16]
   30a34:	ldr	x3, [x8]
   30a38:	cmp	x3, x20
   30a3c:	b.eq	30b58 <rpl_re_set_registers@@Base+0xbc44>  // b.none
   30a40:	mov	x0, x22
   30a44:	mov	w1, w23
   30a48:	mov	x2, x21
   30a4c:	mov	x4, x19
   30a50:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   30a54:	cbnz	w0, 309e4 <rpl_re_set_registers@@Base+0xbad0>
   30a58:	ldr	w8, [sp, #8]
   30a5c:	cbz	w8, 309ec <rpl_re_set_registers@@Base+0xbad8>
   30a60:	tbz	w23, #1, 309fc <rpl_re_set_registers@@Base+0xbae8>
   30a64:	b	30b60 <rpl_re_set_registers@@Base+0xbc4c>
   30a68:	ldr	w9, [sp, #8]
   30a6c:	tbz	w9, #0, 30ad8 <rpl_re_set_registers@@Base+0xbbc4>
   30a70:	mov	w9, #0x28                  	// #40
   30a74:	madd	x27, x19, x9, x8
   30a78:	b	30a8c <rpl_re_set_registers@@Base+0xbb78>
   30a7c:	tbnz	w23, #1, 30b60 <rpl_re_set_registers@@Base+0xbc4c>
   30a80:	ldrb	w8, [x27, #32]
   30a84:	add	x27, x27, #0x28
   30a88:	cbz	w8, 30958 <rpl_re_set_registers@@Base+0xba44>
   30a8c:	ldr	x8, [x27]
   30a90:	cmp	x8, x28
   30a94:	b.ne	30a80 <rpl_re_set_registers@@Base+0xbb6c>  // b.any
   30a98:	ldr	x8, [x24, #40]
   30a9c:	mov	w9, #0x18                  	// #24
   30aa0:	madd	x8, x28, x9, x8
   30aa4:	ldr	x8, [x8, #16]
   30aa8:	ldr	x3, [x8]
   30aac:	cmp	x3, x20
   30ab0:	b.eq	30b58 <rpl_re_set_registers@@Base+0xbc44>  // b.none
   30ab4:	mov	x0, x22
   30ab8:	mov	w1, w23
   30abc:	mov	x2, x21
   30ac0:	mov	x4, x19
   30ac4:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   30ac8:	cbz	w0, 30a7c <rpl_re_set_registers@@Base+0xbb68>
   30acc:	cmn	w0, #0x1
   30ad0:	b.ne	30a80 <rpl_re_set_registers@@Base+0xbb6c>  // b.any
   30ad4:	b	30b6c <rpl_re_set_registers@@Base+0xbc58>
   30ad8:	mov	w9, #0x28                  	// #40
   30adc:	madd	x8, x19, x9, x8
   30ae0:	add	x27, x8, #0x22
   30ae4:	b	30b04 <rpl_re_set_registers@@Base+0xbbf0>
   30ae8:	ldrh	w8, [x27]
   30aec:	ldr	w9, [sp, #12]
   30af0:	and	w8, w8, w9
   30af4:	strh	w8, [x27]
   30af8:	ldurb	w8, [x27, #-2]
   30afc:	add	x27, x27, #0x28
   30b00:	cbz	w8, 30958 <rpl_re_set_registers@@Base+0xba44>
   30b04:	ldur	x8, [x27, #-34]
   30b08:	cmp	x8, x28
   30b0c:	b.ne	30af8 <rpl_re_set_registers@@Base+0xbbe4>  // b.any
   30b10:	ldr	x8, [x24, #40]
   30b14:	mov	w9, #0x18                  	// #24
   30b18:	madd	x8, x28, x9, x8
   30b1c:	ldr	x8, [x8, #16]
   30b20:	ldr	x3, [x8]
   30b24:	cmp	x3, x20
   30b28:	b.eq	30b58 <rpl_re_set_registers@@Base+0xbc44>  // b.none
   30b2c:	mov	x0, x22
   30b30:	mov	w1, w23
   30b34:	mov	x2, x21
   30b38:	mov	x4, x19
   30b3c:	bl	308c8 <rpl_re_set_registers@@Base+0xb9b4>
   30b40:	cbz	w0, 30ae8 <rpl_re_set_registers@@Base+0xbbd4>
   30b44:	cmn	w0, #0x1
   30b48:	b.ne	30af8 <rpl_re_set_registers@@Base+0xbbe4>  // b.any
   30b4c:	b	30b6c <rpl_re_set_registers@@Base+0xbc58>
   30b50:	ubfx	w0, w23, #1, #1
   30b54:	b	30b6c <rpl_re_set_registers@@Base+0xbc58>
   30b58:	sbfx	w0, w23, #0, #1
   30b5c:	b	30b6c <rpl_re_set_registers@@Base+0xbc58>
   30b60:	mov	w0, wzr
   30b64:	b	30b6c <rpl_re_set_registers@@Base+0xbc58>
   30b68:	mov	w0, #0xffffffff            	// #-1
   30b6c:	ldp	x20, x19, [sp, #112]
   30b70:	ldp	x22, x21, [sp, #96]
   30b74:	ldp	x24, x23, [sp, #80]
   30b78:	ldp	x26, x25, [sp, #64]
   30b7c:	ldp	x28, x27, [sp, #48]
   30b80:	ldp	x29, x30, [sp, #32]
   30b84:	add	sp, sp, #0x80
   30b88:	ret

0000000000030b8c <vasnprintf@@Base>:
   30b8c:	stp	x29, x30, [sp, #-96]!
   30b90:	stp	x28, x27, [sp, #16]
   30b94:	stp	x26, x25, [sp, #32]
   30b98:	stp	x24, x23, [sp, #48]
   30b9c:	stp	x22, x21, [sp, #64]
   30ba0:	stp	x20, x19, [sp, #80]
   30ba4:	mov	x29, sp
   30ba8:	sub	sp, sp, #0x400
   30bac:	mov	x19, sp
   30bb0:	mov	x21, x2
   30bb4:	mov	x22, x1
   30bb8:	mov	x20, x0
   30bbc:	add	x1, x19, #0x168
   30bc0:	add	x2, x19, #0x70
   30bc4:	mov	x0, x21
   30bc8:	mov	x23, x3
   30bcc:	bl	ae00 <printf_parse@plt>
   30bd0:	tbnz	w0, #31, 30c34 <vasnprintf@@Base+0xa8>
   30bd4:	ldp	q1, q0, [x23]
   30bd8:	add	x0, x19, #0x50
   30bdc:	add	x1, x19, #0x70
   30be0:	add	x28, x19, #0x168
   30be4:	stp	q1, q0, [x19, #80]
   30be8:	bl	a9f0 <printf_fetchargs@plt>
   30bec:	tbnz	w0, #31, 30c3c <vasnprintf@@Base+0xb0>
   30bf0:	ldp	x8, x9, [x28, #16]
   30bf4:	adds	x8, x8, #0x7
   30bf8:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   30bfc:	adds	x8, x8, x9
   30c00:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   30c04:	adds	x8, x8, #0x6
   30c08:	csinv	x0, x8, xzr, cc  // cc = lo, ul, last
   30c0c:	cmp	x0, #0xf9f
   30c10:	b.hi	30c7c <vasnprintf@@Base+0xf0>  // b.pmore
   30c14:	add	x9, x0, #0xf
   30c18:	mov	x8, sp
   30c1c:	and	x9, x9, #0xfffffffffffffff0
   30c20:	sub	x8, x8, x9
   30c24:	str	x8, [x19, #64]
   30c28:	mov	sp, x8
   30c2c:	mov	x0, xzr
   30c30:	b	30c90 <vasnprintf@@Base+0x104>
   30c34:	mov	x20, xzr
   30c38:	b	315a0 <vasnprintf@@Base+0xa14>
   30c3c:	ldr	x0, [x28, #8]
   30c40:	add	x8, x19, #0x168
   30c44:	add	x8, x8, #0x20
   30c48:	cmp	x0, x8
   30c4c:	b.eq	30c54 <vasnprintf@@Base+0xc8>  // b.none
   30c50:	bl	a970 <free@plt>
   30c54:	ldr	x0, [x19, #120]
   30c58:	add	x8, x19, #0x70
   30c5c:	add	x8, x8, #0x10
   30c60:	cmp	x0, x8
   30c64:	b.eq	30c6c <vasnprintf@@Base+0xe0>  // b.none
   30c68:	bl	a970 <free@plt>
   30c6c:	bl	ad90 <__errno_location@plt>
   30c70:	mov	x20, xzr
   30c74:	mov	w8, #0x16                  	// #22
   30c78:	b	3159c <vasnprintf@@Base+0xa10>
   30c7c:	cmn	x0, #0x1
   30c80:	b.eq	31560 <vasnprintf@@Base+0x9d4>  // b.none
   30c84:	bl	a550 <malloc@plt>
   30c88:	str	x0, [x19, #64]
   30c8c:	cbz	x0, 31560 <vasnprintf@@Base+0x9d4>
   30c90:	str	x0, [x19, #32]
   30c94:	str	x22, [x19]
   30c98:	cbz	x20, 30ca4 <vasnprintf@@Base+0x118>
   30c9c:	ldr	x24, [x22]
   30ca0:	b	30ca8 <vasnprintf@@Base+0x11c>
   30ca4:	mov	x24, xzr
   30ca8:	ldr	x8, [x19, #64]
   30cac:	ldr	x22, [x28, #8]
   30cb0:	mov	x23, xzr
   30cb4:	mov	x27, xzr
   30cb8:	add	x9, x8, #0x1
   30cbc:	add	x8, x8, #0x2
   30cc0:	mov	x14, x20
   30cc4:	str	x9, [x19, #40]
   30cc8:	str	x8, [x19, #24]
   30ccc:	b	30cf0 <vasnprintf@@Base+0x164>
   30cd0:	mov	x21, x14
   30cd4:	mov	w8, #0x25                  	// #37
   30cd8:	strb	w8, [x21, x23]
   30cdc:	mov	x23, x25
   30ce0:	mov	x14, x21
   30ce4:	ldr	x21, [x22, #8]
   30ce8:	add	x27, x27, #0x1
   30cec:	add	x22, x22, #0x58
   30cf0:	ldr	x8, [x22]
   30cf4:	cmp	x21, x8
   30cf8:	b.eq	30db8 <vasnprintf@@Base+0x22c>  // b.none
   30cfc:	mov	x26, x22
   30d00:	mov	x22, x27
   30d04:	sub	x27, x8, x21
   30d08:	adds	x8, x23, x27
   30d0c:	csinv	x25, x8, xzr, cc  // cc = lo, ul, last
   30d10:	mov	w9, #0xc                   	// #12
   30d14:	cmp	x25, x24
   30d18:	b.ls	30d5c <vasnprintf@@Base+0x1d0>  // b.plast
   30d1c:	lsl	x8, x24, #1
   30d20:	cmp	x24, #0x0
   30d24:	csinv	x8, x8, xzr, ge  // ge = tcont
   30d28:	csel	x8, x9, x8, eq  // eq = none
   30d2c:	cmp	x25, x8
   30d30:	csel	x24, x25, x8, hi  // hi = pmore
   30d34:	cmn	x24, #0x1
   30d38:	b.eq	3153c <vasnprintf@@Base+0x9b0>  // b.none
   30d3c:	cmp	x14, x20
   30d40:	str	x14, [x19, #56]
   30d44:	b.eq	30d64 <vasnprintf@@Base+0x1d8>  // b.none
   30d48:	cbz	x14, 30d64 <vasnprintf@@Base+0x1d8>
   30d4c:	mov	x0, x14
   30d50:	mov	x1, x24
   30d54:	bl	a730 <realloc@plt>
   30d58:	b	30d6c <vasnprintf@@Base+0x1e0>
   30d5c:	mov	x28, x14
   30d60:	b	30d94 <vasnprintf@@Base+0x208>
   30d64:	mov	x0, x24
   30d68:	bl	a550 <malloc@plt>
   30d6c:	mov	x28, x0
   30d70:	cbz	x0, 316e8 <vasnprintf@@Base+0xb5c>
   30d74:	cbz	x23, 30d94 <vasnprintf@@Base+0x208>
   30d78:	ldr	x8, [x19, #56]
   30d7c:	cmp	x8, x20
   30d80:	b.ne	30d94 <vasnprintf@@Base+0x208>  // b.any
   30d84:	mov	x1, x20
   30d88:	mov	x0, x28
   30d8c:	mov	x2, x23
   30d90:	bl	a210 <memcpy@plt>
   30d94:	add	x0, x28, x23
   30d98:	mov	x1, x21
   30d9c:	mov	x2, x27
   30da0:	bl	a210 <memcpy@plt>
   30da4:	mov	x23, x25
   30da8:	mov	x14, x28
   30dac:	add	x28, x19, #0x168
   30db0:	mov	x27, x22
   30db4:	mov	x22, x26
   30db8:	ldr	x8, [x28]
   30dbc:	cmp	x27, x8
   30dc0:	b.eq	31654 <vasnprintf@@Base+0xac8>  // b.none
   30dc4:	ldrb	w10, [x22, #72]
   30dc8:	ldr	x8, [x22, #80]
   30dcc:	cmp	w10, #0x25
   30dd0:	b.ne	30e34 <vasnprintf@@Base+0x2a8>  // b.any
   30dd4:	cmn	x8, #0x1
   30dd8:	b.ne	31818 <vasnprintf@@Base+0xc8c>  // b.any
   30ddc:	adds	x8, x23, #0x1
   30de0:	csinv	x25, x8, xzr, cc  // cc = lo, ul, last
   30de4:	cmp	x25, x24
   30de8:	b.ls	30cd0 <vasnprintf@@Base+0x144>  // b.plast
   30dec:	lsl	x8, x24, #1
   30df0:	cmp	x24, #0x0
   30df4:	csinv	x8, x8, xzr, ge  // ge = tcont
   30df8:	mov	w9, #0xc                   	// #12
   30dfc:	csel	x8, x9, x8, eq  // eq = none
   30e00:	cmp	x25, x8
   30e04:	csel	x24, x25, x8, hi  // hi = pmore
   30e08:	cmn	x24, #0x1
   30e0c:	b.eq	3153c <vasnprintf@@Base+0x9b0>  // b.none
   30e10:	mov	x26, x23
   30e14:	cmp	x14, x20
   30e18:	b.eq	30ff0 <vasnprintf@@Base+0x464>  // b.none
   30e1c:	cbz	x14, 30ff0 <vasnprintf@@Base+0x464>
   30e20:	mov	x0, x14
   30e24:	mov	x1, x24
   30e28:	mov	x23, x14
   30e2c:	bl	a730 <realloc@plt>
   30e30:	b	30ffc <vasnprintf@@Base+0x470>
   30e34:	cmn	x8, #0x1
   30e38:	b.eq	31818 <vasnprintf@@Base+0xc8c>  // b.none
   30e3c:	ldr	x9, [x19, #120]
   30e40:	lsl	x11, x8, #5
   30e44:	cmp	w10, #0x6e
   30e48:	ldr	w26, [x9, x11]
   30e4c:	b.ne	30e84 <vasnprintf@@Base+0x2f8>  // b.any
   30e50:	sub	w10, w26, #0x12
   30e54:	cmp	w10, #0x4
   30e58:	b.hi	31818 <vasnprintf@@Base+0xc8c>  // b.pmore
   30e5c:	adrp	x13, 34000 <vasnprintf@@Base+0x3474>
   30e60:	add	x13, x13, #0x802
   30e64:	adr	x11, 30e74 <vasnprintf@@Base+0x2e8>
   30e68:	ldrh	w12, [x13, x10, lsl #1]
   30e6c:	add	x11, x11, x12, lsl #2
   30e70:	br	x11
   30e74:	add	x8, x9, x8, lsl #5
   30e78:	ldr	x8, [x8, #16]
   30e7c:	str	x23, [x8]
   30e80:	b	30ce4 <vasnprintf@@Base+0x158>
   30e84:	str	x27, [x19, #16]
   30e88:	ldr	w8, [x22, #16]
   30e8c:	ldr	x9, [x19, #64]
   30e90:	ldr	x27, [x19, #40]
   30e94:	mov	w10, #0x25                  	// #37
   30e98:	strb	w10, [x9]
   30e9c:	tbnz	w8, #0, 30f84 <vasnprintf@@Base+0x3f8>
   30ea0:	tbnz	w8, #1, 30f98 <vasnprintf@@Base+0x40c>
   30ea4:	tbnz	w8, #2, 30fa4 <vasnprintf@@Base+0x418>
   30ea8:	tbnz	w8, #3, 30fb0 <vasnprintf@@Base+0x424>
   30eac:	tbnz	w8, #4, 30fbc <vasnprintf@@Base+0x430>
   30eb0:	tbnz	w8, #6, 30fc8 <vasnprintf@@Base+0x43c>
   30eb4:	mov	x25, x14
   30eb8:	tbnz	w8, #5, 30fd8 <vasnprintf@@Base+0x44c>
   30ebc:	ldp	x1, x8, [x22, #24]
   30ec0:	cmp	x1, x8
   30ec4:	b.eq	30edc <vasnprintf@@Base+0x350>  // b.none
   30ec8:	sub	x21, x8, x1
   30ecc:	mov	x0, x27
   30ed0:	mov	x2, x21
   30ed4:	bl	a210 <memcpy@plt>
   30ed8:	add	x27, x27, x21
   30edc:	ldp	x1, x8, [x22, #48]
   30ee0:	cmp	x1, x8
   30ee4:	b.eq	30efc <vasnprintf@@Base+0x370>  // b.none
   30ee8:	sub	x21, x8, x1
   30eec:	mov	x0, x27
   30ef0:	mov	x2, x21
   30ef4:	bl	a210 <memcpy@plt>
   30ef8:	add	x27, x27, x21
   30efc:	mov	x14, x25
   30f00:	cmp	w26, #0x10
   30f04:	b.hi	30f38 <vasnprintf@@Base+0x3ac>  // b.pmore
   30f08:	mov	w8, #0x1                   	// #1
   30f0c:	mov	w9, #0x4180                	// #16768
   30f10:	lsl	w8, w8, w26
   30f14:	movk	w9, #0x1, lsl #16
   30f18:	tst	w8, w9
   30f1c:	b.ne	30f30 <vasnprintf@@Base+0x3a4>  // b.any
   30f20:	tst	w8, #0x600
   30f24:	b.eq	31528 <vasnprintf@@Base+0x99c>  // b.none
   30f28:	mov	w8, #0x6c                  	// #108
   30f2c:	strb	w8, [x27], #1
   30f30:	mov	w8, #0x6c                  	// #108
   30f34:	strb	w8, [x27], #1
   30f38:	ldrb	w8, [x22, #72]
   30f3c:	strb	wzr, [x27, #1]
   30f40:	strb	w8, [x27]
   30f44:	ldr	x8, [x22, #40]
   30f48:	cmn	x8, #0x1
   30f4c:	b.eq	31030 <vasnprintf@@Base+0x4a4>  // b.none
   30f50:	ldr	x9, [x19, #120]
   30f54:	lsl	x10, x8, #5
   30f58:	ldr	w10, [x9, x10]
   30f5c:	cmp	w10, #0x5
   30f60:	b.ne	31818 <vasnprintf@@Base+0xc8c>  // b.any
   30f64:	add	x8, x9, x8, lsl #5
   30f68:	ldr	w8, [x8, #16]
   30f6c:	mov	w28, #0x1                   	// #1
   30f70:	str	w8, [x19, #80]
   30f74:	ldr	x8, [x22, #64]
   30f78:	cmn	x8, #0x1
   30f7c:	b.ne	31040 <vasnprintf@@Base+0x4b4>  // b.any
   30f80:	b	3106c <vasnprintf@@Base+0x4e0>
   30f84:	ldr	x9, [x19, #40]
   30f88:	ldr	x27, [x19, #24]
   30f8c:	mov	w10, #0x27                  	// #39
   30f90:	strb	w10, [x9]
   30f94:	tbz	w8, #1, 30ea4 <vasnprintf@@Base+0x318>
   30f98:	mov	w9, #0x2d                  	// #45
   30f9c:	strb	w9, [x27], #1
   30fa0:	tbz	w8, #2, 30ea8 <vasnprintf@@Base+0x31c>
   30fa4:	mov	w9, #0x2b                  	// #43
   30fa8:	strb	w9, [x27], #1
   30fac:	tbz	w8, #3, 30eac <vasnprintf@@Base+0x320>
   30fb0:	mov	w9, #0x20                  	// #32
   30fb4:	strb	w9, [x27], #1
   30fb8:	tbz	w8, #4, 30eb0 <vasnprintf@@Base+0x324>
   30fbc:	mov	w9, #0x23                  	// #35
   30fc0:	strb	w9, [x27], #1
   30fc4:	tbz	w8, #6, 30eb4 <vasnprintf@@Base+0x328>
   30fc8:	mov	w9, #0x49                  	// #73
   30fcc:	strb	w9, [x27], #1
   30fd0:	mov	x25, x14
   30fd4:	tbz	w8, #5, 30ebc <vasnprintf@@Base+0x330>
   30fd8:	mov	w8, #0x30                  	// #48
   30fdc:	strb	w8, [x27], #1
   30fe0:	ldp	x1, x8, [x22, #24]
   30fe4:	cmp	x1, x8
   30fe8:	b.ne	30ec8 <vasnprintf@@Base+0x33c>  // b.any
   30fec:	b	30edc <vasnprintf@@Base+0x350>
   30ff0:	mov	x0, x24
   30ff4:	mov	x23, x14
   30ff8:	bl	a550 <malloc@plt>
   30ffc:	mov	x21, x0
   31000:	cbz	x0, 316f8 <vasnprintf@@Base+0xb6c>
   31004:	cbz	x26, 31028 <vasnprintf@@Base+0x49c>
   31008:	cmp	x23, x20
   3100c:	b.ne	31028 <vasnprintf@@Base+0x49c>  // b.any
   31010:	mov	x0, x21
   31014:	mov	x1, x20
   31018:	mov	x2, x26
   3101c:	mov	x23, x26
   31020:	bl	a210 <memcpy@plt>
   31024:	b	30cd4 <vasnprintf@@Base+0x148>
   31028:	mov	x23, x26
   3102c:	b	30cd4 <vasnprintf@@Base+0x148>
   31030:	mov	w28, wzr
   31034:	ldr	x8, [x22, #64]
   31038:	cmn	x8, #0x1
   3103c:	b.eq	3106c <vasnprintf@@Base+0x4e0>  // b.none
   31040:	ldr	x9, [x19, #120]
   31044:	lsl	x10, x8, #5
   31048:	ldr	w10, [x9, x10]
   3104c:	cmp	w10, #0x5
   31050:	b.ne	31818 <vasnprintf@@Base+0xc8c>  // b.any
   31054:	add	x8, x9, x8, lsl #5
   31058:	ldr	w8, [x8, #16]
   3105c:	add	w9, w28, #0x1
   31060:	add	x10, x19, #0x50
   31064:	str	w8, [x10, w28, uxtw #2]
   31068:	mov	w28, w9
   3106c:	adds	x8, x23, #0x2
   31070:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   31074:	cmp	x8, x24
   31078:	str	x27, [x19, #48]
   3107c:	b.ls	310c8 <vasnprintf@@Base+0x53c>  // b.plast
   31080:	lsl	x9, x24, #1
   31084:	cmp	x24, #0x0
   31088:	csinv	x9, x9, xzr, ge  // ge = tcont
   3108c:	mov	w10, #0xc                   	// #12
   31090:	csel	x9, x10, x9, eq  // eq = none
   31094:	cmp	x8, x9
   31098:	csel	x24, x8, x9, hi  // hi = pmore
   3109c:	cmn	x24, #0x1
   310a0:	b.eq	31538 <vasnprintf@@Base+0x9ac>  // b.none
   310a4:	mov	x25, x23
   310a8:	cmp	x14, x20
   310ac:	b.eq	310d0 <vasnprintf@@Base+0x544>  // b.none
   310b0:	cbz	x14, 310d0 <vasnprintf@@Base+0x544>
   310b4:	mov	x0, x14
   310b8:	mov	x1, x24
   310bc:	mov	x23, x14
   310c0:	bl	a730 <realloc@plt>
   310c4:	b	310dc <vasnprintf@@Base+0x550>
   310c8:	mov	x21, x14
   310cc:	b	31108 <vasnprintf@@Base+0x57c>
   310d0:	mov	x0, x24
   310d4:	mov	x23, x14
   310d8:	bl	a550 <malloc@plt>
   310dc:	mov	x21, x0
   310e0:	mov	x14, x23
   310e4:	cbz	x0, 31538 <vasnprintf@@Base+0x9ac>
   310e8:	mov	x23, x25
   310ec:	cbz	x25, 31108 <vasnprintf@@Base+0x57c>
   310f0:	cmp	x14, x20
   310f4:	b.ne	31108 <vasnprintf@@Base+0x57c>  // b.any
   310f8:	mov	x0, x21
   310fc:	mov	x1, x20
   31100:	mov	x2, x23
   31104:	bl	a210 <memcpy@plt>
   31108:	strb	wzr, [x21, x23]
   3110c:	bl	ad90 <__errno_location@plt>
   31110:	ldr	w8, [x0]
   31114:	str	x0, [x19, #56]
   31118:	str	w8, [x19, #12]
   3111c:	mov	x14, x21
   31120:	sub	x25, x24, x23
   31124:	mov	w9, #0x7fffffff            	// #2147483647
   31128:	cmp	x25, x9
   3112c:	csel	x21, x25, x9, cc  // cc = lo, ul, last
   31130:	ldr	x9, [x19, #56]
   31134:	mov	w8, #0xffffffff            	// #-1
   31138:	str	w8, [x19, #76]
   3113c:	sub	w8, w26, #0x1
   31140:	cmp	w8, #0x10
   31144:	str	wzr, [x9]
   31148:	b.hi	31818 <vasnprintf@@Base+0xc8c>  // b.pmore
   3114c:	adrp	x11, 34000 <vasnprintf@@Base+0x3474>
   31150:	add	x11, x11, #0x7f0
   31154:	adr	x9, 3116c <vasnprintf@@Base+0x5e0>
   31158:	ldrb	w10, [x11, x8]
   3115c:	add	x9, x9, x10, lsl #2
   31160:	mov	w27, w26
   31164:	mov	x26, x14
   31168:	br	x9
   3116c:	ldr	x8, [x19, #120]
   31170:	ldr	x9, [x22, #80]
   31174:	cmp	w28, #0x2
   31178:	add	x8, x8, x9, lsl #5
   3117c:	ldr	x8, [x8, #16]
   31180:	b.eq	3122c <vasnprintf@@Base+0x6a0>  // b.none
   31184:	cmp	w28, #0x1
   31188:	b.eq	3120c <vasnprintf@@Base+0x680>  // b.none
   3118c:	cbnz	w28, 31818 <vasnprintf@@Base+0xc8c>
   31190:	ldr	x2, [x19, #64]
   31194:	add	x0, x14, x23
   31198:	add	x4, x19, #0x4c
   3119c:	mov	x1, x21
   311a0:	mov	x3, x8
   311a4:	bl	a4a0 <snprintf@plt>
   311a8:	b	312bc <vasnprintf@@Base+0x730>
   311ac:	ldr	x8, [x19, #120]
   311b0:	ldr	x9, [x22, #80]
   311b4:	cmp	w28, #0x2
   311b8:	add	x8, x8, x9, lsl #5
   311bc:	ldr	w8, [x8, #16]
   311c0:	b.eq	312a0 <vasnprintf@@Base+0x714>  // b.none
   311c4:	cmp	w28, #0x1
   311c8:	b.eq	311ec <vasnprintf@@Base+0x660>  // b.none
   311cc:	cbnz	w28, 31818 <vasnprintf@@Base+0xc8c>
   311d0:	ldr	x2, [x19, #64]
   311d4:	add	x0, x14, x23
   311d8:	add	x4, x19, #0x4c
   311dc:	mov	x1, x21
   311e0:	mov	w3, w8
   311e4:	bl	a4a0 <snprintf@plt>
   311e8:	b	312bc <vasnprintf@@Base+0x730>
   311ec:	ldr	w3, [x19, #80]
   311f0:	ldr	x2, [x19, #64]
   311f4:	add	x0, x14, x23
   311f8:	add	x5, x19, #0x4c
   311fc:	mov	x1, x21
   31200:	mov	w4, w8
   31204:	bl	a4a0 <snprintf@plt>
   31208:	b	312bc <vasnprintf@@Base+0x730>
   3120c:	ldr	w3, [x19, #80]
   31210:	ldr	x2, [x19, #64]
   31214:	add	x0, x14, x23
   31218:	add	x5, x19, #0x4c
   3121c:	mov	x1, x21
   31220:	mov	x4, x8
   31224:	bl	a4a0 <snprintf@plt>
   31228:	b	312bc <vasnprintf@@Base+0x730>
   3122c:	ldp	w3, w4, [x19, #80]
   31230:	ldr	x2, [x19, #64]
   31234:	add	x0, x14, x23
   31238:	add	x6, x19, #0x4c
   3123c:	mov	x1, x21
   31240:	mov	x5, x8
   31244:	bl	a4a0 <snprintf@plt>
   31248:	b	312bc <vasnprintf@@Base+0x730>
   3124c:	ldr	x8, [x19, #120]
   31250:	ldr	x9, [x22, #80]
   31254:	cmp	w28, #0x2
   31258:	add	x8, x8, x9, lsl #5
   3125c:	ldr	q0, [x8, #16]
   31260:	b.eq	313fc <vasnprintf@@Base+0x870>  // b.none
   31264:	cmp	w28, #0x1
   31268:	b.eq	31418 <vasnprintf@@Base+0x88c>  // b.none
   3126c:	cbnz	w28, 31818 <vasnprintf@@Base+0xc8c>
   31270:	ldr	x2, [x19, #64]
   31274:	add	x0, x14, x23
   31278:	add	x3, x19, #0x4c
   3127c:	mov	x1, x21
   31280:	bl	a4a0 <snprintf@plt>
   31284:	b	312bc <vasnprintf@@Base+0x730>
   31288:	ldr	x8, [x19, #120]
   3128c:	ldr	x9, [x22, #80]
   31290:	cmp	w28, #0x2
   31294:	add	x8, x8, x9, lsl #5
   31298:	ldrsb	w8, [x8, #16]
   3129c:	b.ne	311c4 <vasnprintf@@Base+0x638>  // b.any
   312a0:	ldp	w3, w4, [x19, #80]
   312a4:	ldr	x2, [x19, #64]
   312a8:	add	x0, x14, x23
   312ac:	add	x6, x19, #0x4c
   312b0:	mov	x1, x21
   312b4:	mov	w5, w8
   312b8:	bl	a4a0 <snprintf@plt>
   312bc:	ldr	w8, [x19, #76]
   312c0:	mov	x14, x26
   312c4:	tbnz	w8, #31, 31338 <vasnprintf@@Base+0x7ac>
   312c8:	cmp	x21, x8
   312cc:	b.ls	312dc <vasnprintf@@Base+0x750>  // b.plast
   312d0:	add	x9, x14, x23
   312d4:	ldrb	w9, [x9, x8]
   312d8:	cbnz	w9, 31818 <vasnprintf@@Base+0xc8c>
   312dc:	cmp	w0, w8
   312e0:	b.le	312f0 <vasnprintf@@Base+0x764>
   312e4:	mov	w8, w0
   312e8:	str	w0, [x19, #76]
   312ec:	tbnz	w0, #31, 3162c <vasnprintf@@Base+0xaa0>
   312f0:	add	w9, w8, #0x1
   312f4:	cmp	x21, x9
   312f8:	b.hi	314dc <vasnprintf@@Base+0x950>  // b.pmore
   312fc:	mov	w9, #0x7ffffffe            	// #2147483646
   31300:	cmp	x25, x9
   31304:	b.hi	315c4 <vasnprintf@@Base+0xa38>  // b.pmore
   31308:	add	w8, w8, #0x2
   3130c:	adds	x8, x23, x8
   31310:	lsl	x9, x24, #1
   31314:	csinv	x10, x8, xzr, cc  // cc = lo, ul, last
   31318:	cmp	x24, #0x0
   3131c:	csinv	x8, x9, xzr, ge  // ge = tcont
   31320:	cmp	x10, x8
   31324:	csel	x9, x8, x10, cc  // cc = lo, ul, last
   31328:	cmp	x9, x24
   3132c:	b.hi	3146c <vasnprintf@@Base+0x8e0>  // b.pmore
   31330:	mov	w26, w27
   31334:	b	31120 <vasnprintf@@Base+0x594>
   31338:	ldr	x9, [x19, #48]
   3133c:	ldrb	w8, [x9, #1]
   31340:	cbz	w8, 31350 <vasnprintf@@Base+0x7c4>
   31344:	strb	wzr, [x9, #1]
   31348:	mov	w26, w27
   3134c:	b	31120 <vasnprintf@@Base+0x594>
   31350:	tbnz	w0, #31, 3162c <vasnprintf@@Base+0xaa0>
   31354:	mov	w8, w0
   31358:	str	w0, [x19, #76]
   3135c:	add	w9, w8, #0x1
   31360:	cmp	x21, x9
   31364:	b.ls	312fc <vasnprintf@@Base+0x770>  // b.plast
   31368:	b	314dc <vasnprintf@@Base+0x950>
   3136c:	ldr	x8, [x19, #120]
   31370:	ldr	x9, [x22, #80]
   31374:	cmp	w28, #0x2
   31378:	add	x8, x8, x9, lsl #5
   3137c:	ldrb	w8, [x8, #16]
   31380:	b.ne	311c4 <vasnprintf@@Base+0x638>  // b.any
   31384:	b	312a0 <vasnprintf@@Base+0x714>
   31388:	ldr	x8, [x19, #120]
   3138c:	ldr	x9, [x22, #80]
   31390:	cmp	w28, #0x2
   31394:	add	x8, x8, x9, lsl #5
   31398:	ldrsh	w8, [x8, #16]
   3139c:	b.ne	311c4 <vasnprintf@@Base+0x638>  // b.any
   313a0:	b	312a0 <vasnprintf@@Base+0x714>
   313a4:	ldr	x8, [x19, #120]
   313a8:	ldr	x9, [x22, #80]
   313ac:	cmp	w28, #0x2
   313b0:	add	x8, x8, x9, lsl #5
   313b4:	ldrh	w8, [x8, #16]
   313b8:	b.ne	311c4 <vasnprintf@@Base+0x638>  // b.any
   313bc:	b	312a0 <vasnprintf@@Base+0x714>
   313c0:	ldr	x8, [x19, #120]
   313c4:	ldr	x9, [x22, #80]
   313c8:	cmp	w28, #0x2
   313cc:	add	x8, x8, x9, lsl #5
   313d0:	ldr	d0, [x8, #16]
   313d4:	b.eq	31434 <vasnprintf@@Base+0x8a8>  // b.none
   313d8:	cmp	w28, #0x1
   313dc:	b.eq	31450 <vasnprintf@@Base+0x8c4>  // b.none
   313e0:	cbnz	w28, 31818 <vasnprintf@@Base+0xc8c>
   313e4:	ldr	x2, [x19, #64]
   313e8:	add	x0, x14, x23
   313ec:	add	x3, x19, #0x4c
   313f0:	mov	x1, x21
   313f4:	bl	a4a0 <snprintf@plt>
   313f8:	b	312bc <vasnprintf@@Base+0x730>
   313fc:	ldp	w3, w4, [x19, #80]
   31400:	ldr	x2, [x19, #64]
   31404:	add	x0, x14, x23
   31408:	add	x5, x19, #0x4c
   3140c:	mov	x1, x21
   31410:	bl	a4a0 <snprintf@plt>
   31414:	b	312bc <vasnprintf@@Base+0x730>
   31418:	ldr	w3, [x19, #80]
   3141c:	ldr	x2, [x19, #64]
   31420:	add	x0, x14, x23
   31424:	add	x4, x19, #0x4c
   31428:	mov	x1, x21
   3142c:	bl	a4a0 <snprintf@plt>
   31430:	b	312bc <vasnprintf@@Base+0x730>
   31434:	ldp	w3, w4, [x19, #80]
   31438:	ldr	x2, [x19, #64]
   3143c:	add	x0, x14, x23
   31440:	add	x5, x19, #0x4c
   31444:	mov	x1, x21
   31448:	bl	a4a0 <snprintf@plt>
   3144c:	b	312bc <vasnprintf@@Base+0x730>
   31450:	ldr	w3, [x19, #80]
   31454:	ldr	x2, [x19, #64]
   31458:	add	x0, x14, x23
   3145c:	add	x4, x19, #0x4c
   31460:	mov	x1, x21
   31464:	bl	a4a0 <snprintf@plt>
   31468:	b	312bc <vasnprintf@@Base+0x730>
   3146c:	cmp	x24, #0x0
   31470:	mov	w10, #0xc                   	// #12
   31474:	csel	x8, x10, x8, eq  // eq = none
   31478:	cmp	x9, x8
   3147c:	csel	x24, x9, x8, hi  // hi = pmore
   31480:	cmn	x24, #0x1
   31484:	b.eq	31538 <vasnprintf@@Base+0x9ac>  // b.none
   31488:	cmp	x14, x20
   3148c:	b.eq	314a4 <vasnprintf@@Base+0x918>  // b.none
   31490:	cbz	x14, 314a4 <vasnprintf@@Base+0x918>
   31494:	mov	x0, x14
   31498:	mov	x1, x24
   3149c:	bl	a730 <realloc@plt>
   314a0:	b	314ac <vasnprintf@@Base+0x920>
   314a4:	mov	x0, x24
   314a8:	bl	a550 <malloc@plt>
   314ac:	mov	x21, x0
   314b0:	mov	x14, x26
   314b4:	cbz	x0, 31538 <vasnprintf@@Base+0x9ac>
   314b8:	mov	w26, w27
   314bc:	cbz	x23, 3111c <vasnprintf@@Base+0x590>
   314c0:	cmp	x14, x20
   314c4:	b.ne	3111c <vasnprintf@@Base+0x590>  // b.any
   314c8:	mov	x0, x21
   314cc:	mov	x1, x20
   314d0:	mov	x2, x23
   314d4:	bl	a210 <memcpy@plt>
   314d8:	b	3111c <vasnprintf@@Base+0x590>
   314dc:	add	x23, x23, w8, uxtw
   314e0:	ldr	x8, [x19, #56]
   314e4:	ldr	w9, [x19, #12]
   314e8:	ldr	x27, [x19, #16]
   314ec:	add	x28, x19, #0x168
   314f0:	str	w9, [x8]
   314f4:	b	30ce4 <vasnprintf@@Base+0x158>
   314f8:	add	x8, x9, x8, lsl #5
   314fc:	ldr	x8, [x8, #16]
   31500:	strb	w23, [x8]
   31504:	b	30ce4 <vasnprintf@@Base+0x158>
   31508:	add	x8, x9, x8, lsl #5
   3150c:	ldr	x8, [x8, #16]
   31510:	strh	w23, [x8]
   31514:	b	30ce4 <vasnprintf@@Base+0x158>
   31518:	add	x8, x9, x8, lsl #5
   3151c:	ldr	x8, [x8, #16]
   31520:	str	w23, [x8]
   31524:	b	30ce4 <vasnprintf@@Base+0x158>
   31528:	cmp	w26, #0xc
   3152c:	b.ne	30f38 <vasnprintf@@Base+0x3ac>  // b.any
   31530:	mov	w8, #0x4c                  	// #76
   31534:	b	30f34 <vasnprintf@@Base+0x3a8>
   31538:	add	x28, x19, #0x168
   3153c:	ldr	x22, [x19, #32]
   31540:	cmp	x14, x20
   31544:	b.eq	31554 <vasnprintf@@Base+0x9c8>  // b.none
   31548:	cbz	x14, 31554 <vasnprintf@@Base+0x9c8>
   3154c:	mov	x0, x14
   31550:	bl	a970 <free@plt>
   31554:	cbz	x22, 31560 <vasnprintf@@Base+0x9d4>
   31558:	mov	x0, x22
   3155c:	bl	a970 <free@plt>
   31560:	ldr	x0, [x28, #8]
   31564:	add	x8, x19, #0x168
   31568:	add	x8, x8, #0x20
   3156c:	cmp	x0, x8
   31570:	b.eq	31578 <vasnprintf@@Base+0x9ec>  // b.none
   31574:	bl	a970 <free@plt>
   31578:	ldr	x0, [x19, #120]
   3157c:	add	x8, x19, #0x70
   31580:	add	x8, x8, #0x10
   31584:	cmp	x0, x8
   31588:	b.eq	31590 <vasnprintf@@Base+0xa04>  // b.none
   3158c:	bl	a970 <free@plt>
   31590:	bl	ad90 <__errno_location@plt>
   31594:	mov	x20, xzr
   31598:	mov	w8, #0xc                   	// #12
   3159c:	str	w8, [x0]
   315a0:	mov	x0, x20
   315a4:	mov	sp, x29
   315a8:	ldp	x20, x19, [sp, #80]
   315ac:	ldp	x22, x21, [sp, #64]
   315b0:	ldp	x24, x23, [sp, #48]
   315b4:	ldp	x26, x25, [sp, #32]
   315b8:	ldp	x28, x27, [sp, #16]
   315bc:	ldp	x29, x30, [sp], #96
   315c0:	ret
   315c4:	cmp	x14, x20
   315c8:	b.eq	315d8 <vasnprintf@@Base+0xa4c>  // b.none
   315cc:	cbz	x14, 315d8 <vasnprintf@@Base+0xa4c>
   315d0:	mov	x0, x14
   315d4:	bl	a970 <free@plt>
   315d8:	ldr	x0, [x19, #32]
   315dc:	add	x20, x19, #0x168
   315e0:	cbz	x0, 315e8 <vasnprintf@@Base+0xa5c>
   315e4:	bl	a970 <free@plt>
   315e8:	ldr	x0, [x20, #8]
   315ec:	add	x8, x19, #0x168
   315f0:	add	x8, x8, #0x20
   315f4:	cmp	x0, x8
   315f8:	b.eq	31600 <vasnprintf@@Base+0xa74>  // b.none
   315fc:	bl	a970 <free@plt>
   31600:	ldr	x0, [x19, #120]
   31604:	add	x8, x19, #0x70
   31608:	add	x8, x8, #0x10
   3160c:	cmp	x0, x8
   31610:	b.eq	31618 <vasnprintf@@Base+0xa8c>  // b.none
   31614:	bl	a970 <free@plt>
   31618:	ldr	x9, [x19, #56]
   3161c:	mov	w8, #0x4b                  	// #75
   31620:	mov	x20, xzr
   31624:	str	w8, [x9]
   31628:	b	315a0 <vasnprintf@@Base+0xa14>
   3162c:	ldr	x8, [x19, #56]
   31630:	add	x23, x19, #0x168
   31634:	ldr	w21, [x8]
   31638:	cbnz	w21, 31750 <vasnprintf@@Base+0xbc4>
   3163c:	ldrb	w8, [x22, #72]
   31640:	orr	w8, w8, #0x10
   31644:	cmp	w8, #0x73
   31648:	b.ne	3174c <vasnprintf@@Base+0xbc0>  // b.any
   3164c:	mov	w21, #0x54                  	// #84
   31650:	b	31750 <vasnprintf@@Base+0xbc4>
   31654:	adds	x8, x23, #0x1
   31658:	csinv	x8, x8, xzr, cc  // cc = lo, ul, last
   3165c:	cmp	x8, x24
   31660:	b.ls	316b0 <vasnprintf@@Base+0xb24>  // b.plast
   31664:	lsl	x9, x24, #1
   31668:	cmp	x24, #0x0
   3166c:	csinv	x9, x9, xzr, ge  // ge = tcont
   31670:	mov	w10, #0xc                   	// #12
   31674:	csel	x9, x10, x9, eq  // eq = none
   31678:	ldr	x22, [x19, #32]
   3167c:	cmp	x8, x9
   31680:	csel	x24, x8, x9, hi  // hi = pmore
   31684:	cmn	x24, #0x1
   31688:	b.eq	31540 <vasnprintf@@Base+0x9b4>  // b.none
   3168c:	mov	x26, x23
   31690:	cmp	x14, x20
   31694:	b.eq	317b0 <vasnprintf@@Base+0xc24>  // b.none
   31698:	cbz	x14, 317b0 <vasnprintf@@Base+0xc24>
   3169c:	mov	x0, x14
   316a0:	mov	x1, x24
   316a4:	mov	x23, x14
   316a8:	bl	a730 <realloc@plt>
   316ac:	b	317bc <vasnprintf@@Base+0xc30>
   316b0:	ldr	x22, [x19, #32]
   316b4:	mov	x21, x14
   316b8:	ldr	x25, [x19]
   316bc:	cmp	x21, x20
   316c0:	strb	wzr, [x21, x23]
   316c4:	b.eq	31708 <vasnprintf@@Base+0xb7c>  // b.none
   316c8:	add	x1, x23, #0x1
   316cc:	cmp	x1, x24
   316d0:	b.cs	31704 <vasnprintf@@Base+0xb78>  // b.hs, b.nlast
   316d4:	mov	x0, x21
   316d8:	bl	a730 <realloc@plt>
   316dc:	cmp	x0, #0x0
   316e0:	csel	x20, x21, x0, eq  // eq = none
   316e4:	b	31708 <vasnprintf@@Base+0xb7c>
   316e8:	ldr	x22, [x19, #32]
   316ec:	ldr	x14, [x19, #56]
   316f0:	add	x28, x19, #0x168
   316f4:	b	31540 <vasnprintf@@Base+0x9b4>
   316f8:	ldr	x22, [x19, #32]
   316fc:	mov	x14, x23
   31700:	b	31540 <vasnprintf@@Base+0x9b4>
   31704:	mov	x20, x21
   31708:	cbz	x22, 31714 <vasnprintf@@Base+0xb88>
   3170c:	mov	x0, x22
   31710:	bl	a970 <free@plt>
   31714:	ldr	x0, [x28, #8]
   31718:	add	x8, x19, #0x168
   3171c:	add	x8, x8, #0x20
   31720:	cmp	x0, x8
   31724:	b.eq	3172c <vasnprintf@@Base+0xba0>  // b.none
   31728:	bl	a970 <free@plt>
   3172c:	ldr	x0, [x19, #120]
   31730:	add	x8, x19, #0x70
   31734:	add	x8, x8, #0x10
   31738:	cmp	x0, x8
   3173c:	b.eq	31744 <vasnprintf@@Base+0xbb8>  // b.none
   31740:	bl	a970 <free@plt>
   31744:	str	x23, [x25]
   31748:	b	315a0 <vasnprintf@@Base+0xa14>
   3174c:	mov	w21, #0x16                  	// #22
   31750:	cmp	x14, x20
   31754:	b.eq	31764 <vasnprintf@@Base+0xbd8>  // b.none
   31758:	cbz	x14, 31764 <vasnprintf@@Base+0xbd8>
   3175c:	mov	x0, x14
   31760:	bl	a970 <free@plt>
   31764:	ldr	x0, [x19, #32]
   31768:	cbz	x0, 31770 <vasnprintf@@Base+0xbe4>
   3176c:	bl	a970 <free@plt>
   31770:	ldr	x0, [x23, #8]
   31774:	add	x8, x19, #0x168
   31778:	add	x8, x8, #0x20
   3177c:	cmp	x0, x8
   31780:	b.eq	31788 <vasnprintf@@Base+0xbfc>  // b.none
   31784:	bl	a970 <free@plt>
   31788:	ldr	x0, [x19, #120]
   3178c:	add	x8, x19, #0x70
   31790:	add	x8, x8, #0x10
   31794:	cmp	x0, x8
   31798:	b.eq	317a0 <vasnprintf@@Base+0xc14>  // b.none
   3179c:	bl	a970 <free@plt>
   317a0:	ldr	x8, [x19, #56]
   317a4:	mov	x20, xzr
   317a8:	str	w21, [x8]
   317ac:	b	315a0 <vasnprintf@@Base+0xa14>
   317b0:	mov	x0, x24
   317b4:	mov	x23, x14
   317b8:	bl	a550 <malloc@plt>
   317bc:	mov	x21, x0
   317c0:	cbz	x0, 317f8 <vasnprintf@@Base+0xc6c>
   317c4:	cbz	x26, 31800 <vasnprintf@@Base+0xc74>
   317c8:	cmp	x23, x20
   317cc:	b.ne	31800 <vasnprintf@@Base+0xc74>  // b.any
   317d0:	mov	x0, x21
   317d4:	mov	x1, x20
   317d8:	mov	x2, x26
   317dc:	mov	x23, x26
   317e0:	bl	a210 <memcpy@plt>
   317e4:	ldr	x25, [x19]
   317e8:	cmp	x21, x20
   317ec:	strb	wzr, [x21, x23]
   317f0:	b.ne	316c8 <vasnprintf@@Base+0xb3c>  // b.any
   317f4:	b	31708 <vasnprintf@@Base+0xb7c>
   317f8:	mov	x14, x23
   317fc:	b	31540 <vasnprintf@@Base+0x9b4>
   31800:	ldr	x25, [x19]
   31804:	mov	x23, x26
   31808:	cmp	x21, x20
   3180c:	strb	wzr, [x21, x23]
   31810:	b.ne	316c8 <vasnprintf@@Base+0xb3c>  // b.any
   31814:	b	31708 <vasnprintf@@Base+0xb7c>
   31818:	bl	a850 <abort@plt>
   3181c:	nop
   31820:	adrp	x2, 46000 <base_len@@Base+0x30a14>
   31824:	mov	x1, #0x0                   	// #0
   31828:	ldr	x2, [x2, #1648]
   3182c:	b	a430 <__cxa_atexit@plt>

Disassembly of section .fini:

0000000000031830 <.fini>:
   31830:	stp	x29, x30, [sp, #-16]!
   31834:	mov	x29, sp
   31838:	ldp	x29, x30, [sp], #16
   3183c:	ret
