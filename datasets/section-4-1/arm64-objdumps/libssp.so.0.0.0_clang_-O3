
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//libssp.so.0.0.0_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000d88 <.init>:
 d88:	stp	x29, x30, [sp, #-16]!
 d8c:	mov	x29, sp
 d90:	bl	fa0 <fgets@plt+0xa0>
 d94:	ldp	x29, x30, [sp], #16
 d98:	ret

Disassembly of section .plt:

0000000000000da0 <memcpy@plt-0x20>:
 da0:	stp	x16, x30, [sp, #-16]!
 da4:	adrp	x16, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
 da8:	ldr	x17, [x16, #4088]
 dac:	add	x16, x16, #0xff8
 db0:	br	x17
 db4:	nop
 db8:	nop
 dbc:	nop

0000000000000dc0 <memcpy@plt>:
 dc0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 dc4:	ldr	x17, [x16]
 dc8:	add	x16, x16, #0x0
 dcc:	br	x17

0000000000000dd0 <memmove@plt>:
 dd0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 dd4:	ldr	x17, [x16, #8]
 dd8:	add	x16, x16, #0x8
 ddc:	br	x17

0000000000000de0 <_exit@plt>:
 de0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 de4:	ldr	x17, [x16, #16]
 de8:	add	x16, x16, #0x10
 dec:	br	x17

0000000000000df0 <strlen@plt>:
 df0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 df4:	ldr	x17, [x16, #24]
 df8:	add	x16, x16, #0x18
 dfc:	br	x17

0000000000000e00 <syslog@plt>:
 e00:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e04:	ldr	x17, [x16, #32]
 e08:	add	x16, x16, #0x20
 e0c:	br	x17

0000000000000e10 <__chk_fail@plt>:
 e10:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e14:	ldr	x17, [x16, #40]
 e18:	add	x16, x16, #0x28
 e1c:	br	x17

0000000000000e20 <__cxa_finalize@plt>:
 e20:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e24:	ldr	x17, [x16, #48]
 e28:	add	x16, x16, #0x30
 e2c:	br	x17

0000000000000e30 <malloc@plt>:
 e30:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e34:	ldr	x17, [x16, #56]
 e38:	add	x16, x16, #0x38
 e3c:	br	x17

0000000000000e40 <open@plt>:
 e40:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e44:	ldr	x17, [x16, #64]
 e48:	add	x16, x16, #0x40
 e4c:	br	x17

0000000000000e50 <__stack_chk_fail@plt>:
 e50:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e54:	ldr	x17, [x16, #72]
 e58:	add	x16, x16, #0x48
 e5c:	br	x17

0000000000000e60 <memset@plt>:
 e60:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e64:	ldr	x17, [x16, #80]
 e68:	add	x16, x16, #0x50
 e6c:	br	x17

0000000000000e70 <close@plt>:
 e70:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e74:	ldr	x17, [x16, #88]
 e78:	add	x16, x16, #0x58
 e7c:	br	x17

0000000000000e80 <__gmon_start__@plt>:
 e80:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e84:	ldr	x17, [x16, #96]
 e88:	add	x16, x16, #0x60
 e8c:	br	x17

0000000000000e90 <write@plt>:
 e90:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 e94:	ldr	x17, [x16, #104]
 e98:	add	x16, x16, #0x68
 e9c:	br	x17

0000000000000ea0 <free@plt>:
 ea0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 ea4:	ldr	x17, [x16, #112]
 ea8:	add	x16, x16, #0x70
 eac:	br	x17

0000000000000eb0 <vsprintf@plt>:
 eb0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 eb4:	ldr	x17, [x16, #120]
 eb8:	add	x16, x16, #0x78
 ebc:	br	x17

0000000000000ec0 <read@plt>:
 ec0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 ec4:	ldr	x17, [x16, #128]
 ec8:	add	x16, x16, #0x80
 ecc:	br	x17

0000000000000ed0 <vsnprintf@plt>:
 ed0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 ed4:	ldr	x17, [x16, #136]
 ed8:	add	x16, x16, #0x88
 edc:	br	x17

0000000000000ee0 <strncpy@plt>:
 ee0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 ee4:	ldr	x17, [x16, #144]
 ee8:	add	x16, x16, #0x90
 eec:	br	x17

0000000000000ef0 <gets@plt>:
 ef0:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 ef4:	ldr	x17, [x16, #152]
 ef8:	add	x16, x16, #0x98
 efc:	br	x17

0000000000000f00 <fgets@plt>:
 f00:	adrp	x16, 12000 <memcpy@GLIBC_2.17>
 f04:	ldr	x17, [x16, #160]
 f08:	add	x16, x16, #0xa0
 f0c:	br	x17

Disassembly of section .text:

0000000000000f10 <__stack_chk_fail@@LIBSSP_1.0-0x2a8>:
     f10:	stp	x29, x30, [sp, #-48]!
     f14:	mov	x29, sp
     f18:	stp	x19, x20, [sp, #16]
     f1c:	adrp	x19, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
     f20:	ldr	x20, [x19, #4032]
     f24:	ldr	x0, [x20]
     f28:	cbz	x0, f38 <fgets@plt+0x38>
     f2c:	ldp	x19, x20, [sp, #16]
     f30:	ldp	x29, x30, [sp], #48
     f34:	ret
     f38:	adrp	x0, 1000 <fgets@plt+0x100>
     f3c:	mov	w1, #0x0                   	// #0
     f40:	add	x0, x0, #0x7f0
     f44:	stp	x21, x22, [sp, #32]
     f48:	bl	e40 <open@plt>
     f4c:	mov	w21, w0
     f50:	cmn	w0, #0x1
     f54:	b.ne	f70 <fgets@plt+0x70>  // b.any
     f58:	ldr	x19, [x19, #4032]
     f5c:	mov	w0, #0xffffff0a            	// #-246
     f60:	strb	wzr, [x19]
     f64:	strh	w0, [x19, #6]
     f68:	ldp	x21, x22, [sp, #32]
     f6c:	b	f2c <fgets@plt+0x2c>
     f70:	mov	x1, x20
     f74:	mov	x2, #0x8                   	// #8
     f78:	bl	ec0 <read@plt>
     f7c:	mov	x22, x0
     f80:	mov	w0, w21
     f84:	bl	e70 <close@plt>
     f88:	cmp	x22, #0x8
     f8c:	b.ne	f58 <fgets@plt+0x58>  // b.any
     f90:	ldr	x0, [x20]
     f94:	cbz	x0, f58 <fgets@plt+0x58>
     f98:	ldp	x21, x22, [sp, #32]
     f9c:	b	f2c <fgets@plt+0x2c>
     fa0:	adrp	x0, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
     fa4:	ldr	x0, [x0, #4048]
     fa8:	cbz	x0, fb0 <fgets@plt+0xb0>
     fac:	b	e80 <__gmon_start__@plt>
     fb0:	ret
     fb4:	nop
     fb8:	adrp	x0, 12000 <__vsprintf_chk@@LIBSSP_1.0+0x108b8>
     fbc:	add	x0, x0, #0xb0
     fc0:	adrp	x1, 12000 <__vsprintf_chk@@LIBSSP_1.0+0x108b8>
     fc4:	add	x1, x1, #0xb0
     fc8:	cmp	x1, x0
     fcc:	b.eq	fe4 <fgets@plt+0xe4>  // b.none
     fd0:	adrp	x1, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
     fd4:	ldr	x1, [x1, #4016]
     fd8:	cbz	x1, fe4 <fgets@plt+0xe4>
     fdc:	mov	x16, x1
     fe0:	br	x16
     fe4:	ret
     fe8:	adrp	x0, 12000 <__vsprintf_chk@@LIBSSP_1.0+0x108b8>
     fec:	add	x0, x0, #0xb0
     ff0:	adrp	x1, 12000 <__vsprintf_chk@@LIBSSP_1.0+0x108b8>
     ff4:	add	x1, x1, #0xb0
     ff8:	sub	x1, x1, x0
     ffc:	lsr	x2, x1, #63
    1000:	add	x1, x2, x1, asr #3
    1004:	cmp	xzr, x1, asr #1
    1008:	asr	x1, x1, #1
    100c:	b.eq	1024 <fgets@plt+0x124>  // b.none
    1010:	adrp	x2, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
    1014:	ldr	x2, [x2, #4064]
    1018:	cbz	x2, 1024 <fgets@plt+0x124>
    101c:	mov	x16, x2
    1020:	br	x16
    1024:	ret
    1028:	stp	x29, x30, [sp, #-32]!
    102c:	mov	x29, sp
    1030:	str	x19, [sp, #16]
    1034:	adrp	x19, 12000 <__vsprintf_chk@@LIBSSP_1.0+0x108b8>
    1038:	ldrb	w0, [x19, #176]
    103c:	cbnz	w0, 1064 <fgets@plt+0x164>
    1040:	adrp	x0, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
    1044:	ldr	x0, [x0, #4024]
    1048:	cbz	x0, 1058 <fgets@plt+0x158>
    104c:	adrp	x0, 12000 <__vsprintf_chk@@LIBSSP_1.0+0x108b8>
    1050:	ldr	x0, [x0, #168]
    1054:	bl	e20 <__cxa_finalize@plt>
    1058:	bl	fb8 <fgets@plt+0xb8>
    105c:	mov	w0, #0x1                   	// #1
    1060:	strb	w0, [x19, #176]
    1064:	ldr	x19, [sp, #16]
    1068:	ldp	x29, x30, [sp], #32
    106c:	ret
    1070:	b	fe8 <fgets@plt+0xe8>
    1074:	nop
    1078:	stp	x29, x30, [sp, #-80]!
    107c:	mov	x29, sp
    1080:	stp	x19, x20, [sp, #16]
    1084:	mov	x20, x1
    1088:	mov	x19, x2
    108c:	mov	w1, #0x1                   	// #1
    1090:	stp	x21, x22, [sp, #32]
    1094:	stp	x23, x24, [sp, #48]
    1098:	mov	x23, x0
    109c:	adrp	x0, 1000 <fgets@plt+0x100>
    10a0:	add	x0, x0, #0x7c8
    10a4:	bl	e40 <open@plt>
    10a8:	cmn	w0, #0x1
    10ac:	b.eq	1198 <fgets@plt+0x298>  // b.none
    10b0:	mov	w21, w0
    10b4:	adrp	x0, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
    10b8:	add	x19, x20, #0xd
    10bc:	ldr	x0, [x0, #4056]
    10c0:	ldr	x24, [x0]
    10c4:	mov	x0, x24
    10c8:	bl	df0 <strlen@plt>
    10cc:	add	x19, x19, x0
    10d0:	mov	x22, x0
    10d4:	add	x0, x19, #0xf
    10d8:	mov	x2, x20
    10dc:	and	x0, x0, #0xfffffffffffffff0
    10e0:	mov	x1, x23
    10e4:	sub	sp, sp, x0
    10e8:	mov	x20, sp
    10ec:	add	x23, x20, x2
    10f0:	mov	x0, x20
    10f4:	bl	dc0 <memcpy@plt>
    10f8:	mov	x1, x24
    10fc:	mov	x2, x22
    1100:	mov	x0, x23
    1104:	bl	dc0 <memcpy@plt>
    1108:	adrp	x0, 1000 <fgets@plt+0x100>
    110c:	add	x0, x0, #0x7e0
    1110:	add	x1, x23, x22
    1114:	ldr	x2, [x0]
    1118:	str	x2, [x23, x22]
    111c:	ldur	x0, [x0, #5]
    1120:	stur	x0, [x1, #5]
    1124:	nop
    1128:	mov	x2, x19
    112c:	mov	x1, x20
    1130:	mov	w0, w21
    1134:	bl	e90 <write@plt>
    1138:	tbnz	x0, #63, 1148 <fgets@plt+0x248>
    113c:	add	x20, x20, x0
    1140:	subs	x19, x19, x0
    1144:	b.ne	1128 <fgets@plt+0x228>  // b.any
    1148:	mov	w0, w21
    114c:	bl	e70 <close@plt>
    1150:	str	wzr, [x29, #76]
    1154:	mov	x1, #0xffffffffffffffff    	// #-1
    1158:	ldr	w0, [x29, #76]
    115c:	cmp	w0, #0x2
    1160:	b.eq	1190 <fgets@plt+0x290>  // b.none
    1164:	b.gt	1178 <fgets@plt+0x278>
    1168:	cbz	w0, 11b0 <fgets@plt+0x2b0>
    116c:	cmp	w0, #0x1
    1170:	b.ne	1178 <fgets@plt+0x278>  // b.any
    1174:	str	wzr, [x1]
    1178:	ldr	w0, [x29, #76]
    117c:	add	w0, w0, #0x1
    1180:	str	w0, [x29, #76]
    1184:	ldr	w0, [x29, #76]
    1188:	cmp	w0, #0x2
    118c:	b.ne	1164 <fgets@plt+0x264>  // b.any
    1190:	mov	w0, #0x7f                  	// #127
    1194:	bl	de0 <_exit@plt>
    1198:	mov	x2, x19
    119c:	adrp	x1, 1000 <fgets@plt+0x100>
    11a0:	mov	w0, #0x2                   	// #2
    11a4:	add	x1, x1, #0x7d8
    11a8:	bl	e00 <syslog@plt>
    11ac:	b	1150 <fgets@plt+0x250>
    11b0:	brk	#0x3e8
    11b4:	nop

00000000000011b8 <__stack_chk_fail@@LIBSSP_1.0>:
    11b8:	stp	x29, x30, [sp, #-16]!
    11bc:	adrp	x2, 1000 <fgets@plt+0x100>
    11c0:	adrp	x0, 1000 <fgets@plt+0x100>
    11c4:	mov	x29, sp
    11c8:	add	x2, x2, #0x800
    11cc:	add	x0, x0, #0x828
    11d0:	mov	x1, #0x21                  	// #33
    11d4:	bl	1078 <fgets@plt+0x178>

00000000000011d8 <__chk_fail@@LIBSSP_1.0>:
    11d8:	stp	x29, x30, [sp, #-16]!
    11dc:	adrp	x2, 1000 <fgets@plt+0x100>
    11e0:	adrp	x0, 1000 <fgets@plt+0x100>
    11e4:	mov	x29, sp
    11e8:	add	x2, x2, #0x850
    11ec:	add	x0, x0, #0x878
    11f0:	mov	x1, #0x22                  	// #34
    11f4:	bl	1078 <fgets@plt+0x178>
    11f8:	b	e50 <__stack_chk_fail@plt>
    11fc:	nop

0000000000001200 <__gets_chk@@LIBSSP_1.0>:
    1200:	stp	x29, x30, [sp, #-48]!
    1204:	mov	x29, sp
    1208:	stp	x19, x20, [sp, #16]
    120c:	mov	x19, x1
    1210:	mov	x1, #0x7ffffffe            	// #2147483646
    1214:	stp	x21, x22, [sp, #32]
    1218:	cmp	x19, x1
    121c:	b.hi	1318 <__gets_chk@@LIBSSP_1.0+0x118>  // b.pmore
    1220:	mov	x20, x0
    1224:	cmp	x19, #0x2, lsl #12
    1228:	add	x0, x19, #0x1
    122c:	b.hi	12a8 <__gets_chk@@LIBSSP_1.0+0xa8>  // b.pmore
    1230:	adrp	x2, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
    1234:	add	x0, x19, #0x10
    1238:	and	x0, x0, #0xfffffffffffffff0
    123c:	add	w1, w19, #0x1
    1240:	ldr	x2, [x2, #4040]
    1244:	sub	sp, sp, x0
    1248:	mov	x22, sp
    124c:	mov	x0, x22
    1250:	ldr	x2, [x2]
    1254:	bl	f00 <fgets@plt>
    1258:	cbz	x0, 1294 <__gets_chk@@LIBSSP_1.0+0x94>
    125c:	mov	x0, x22
    1260:	bl	df0 <strlen@plt>
    1264:	mov	x21, x0
    1268:	cbnz	x0, 12dc <__gets_chk@@LIBSSP_1.0+0xdc>
    126c:	cmp	x21, x19
    1270:	b.eq	1330 <__gets_chk@@LIBSSP_1.0+0x130>  // b.none
    1274:	mov	x2, x21
    1278:	mov	x1, x22
    127c:	mov	x0, x20
    1280:	bl	dc0 <memcpy@plt>
    1284:	strb	wzr, [x20, x21]
    1288:	cmp	x19, #0x2, lsl #12
    128c:	mov	x0, x20
    1290:	b.hi	12f4 <__gets_chk@@LIBSSP_1.0+0xf4>  // b.pmore
    1294:	mov	sp, x29
    1298:	ldp	x19, x20, [sp, #16]
    129c:	ldp	x21, x22, [sp, #32]
    12a0:	ldp	x29, x30, [sp], #48
    12a4:	ret
    12a8:	bl	e30 <malloc@plt>
    12ac:	mov	x22, x0
    12b0:	cbz	x0, 1314 <__gets_chk@@LIBSSP_1.0+0x114>
    12b4:	adrp	x2, 11000 <__vsprintf_chk@@LIBSSP_1.0+0xf8b8>
    12b8:	add	w1, w19, #0x1
    12bc:	ldr	x2, [x2, #4040]
    12c0:	ldr	x2, [x2]
    12c4:	bl	f00 <fgets@plt>
    12c8:	cbz	x0, 12f0 <__gets_chk@@LIBSSP_1.0+0xf0>
    12cc:	mov	x0, x22
    12d0:	bl	df0 <strlen@plt>
    12d4:	mov	x21, x0
    12d8:	cbz	x0, 1274 <__gets_chk@@LIBSSP_1.0+0x74>
    12dc:	sub	x0, x21, #0x1
    12e0:	ldrb	w1, [x22, x0]
    12e4:	cmp	w1, #0xa
    12e8:	csel	x21, x21, x0, ne  // ne = any
    12ec:	b	126c <__gets_chk@@LIBSSP_1.0+0x6c>
    12f0:	mov	x20, #0x0                   	// #0
    12f4:	mov	x0, x22
    12f8:	bl	ea0 <free@plt>
    12fc:	mov	sp, x29
    1300:	mov	x0, x20
    1304:	ldp	x19, x20, [sp, #16]
    1308:	ldp	x21, x22, [sp, #32]
    130c:	ldp	x29, x30, [sp], #48
    1310:	ret
    1314:	mov	x0, x20
    1318:	bl	ef0 <gets@plt>
    131c:	mov	sp, x29
    1320:	ldp	x19, x20, [sp, #16]
    1324:	ldp	x21, x22, [sp, #32]
    1328:	ldp	x29, x30, [sp], #48
    132c:	ret
    1330:	bl	e10 <__chk_fail@plt>
    1334:	nop

0000000000001338 <__memcpy_chk@@LIBSSP_1.0>:
    1338:	cmp	x2, x3
    133c:	b.hi	1344 <__memcpy_chk@@LIBSSP_1.0+0xc>  // b.pmore
    1340:	b	dc0 <memcpy@plt>
    1344:	stp	x29, x30, [sp, #-16]!
    1348:	mov	x29, sp
    134c:	bl	e10 <__chk_fail@plt>

0000000000001350 <__memmove_chk@@LIBSSP_1.0>:
    1350:	cmp	x2, x3
    1354:	b.hi	135c <__memmove_chk@@LIBSSP_1.0+0xc>  // b.pmore
    1358:	b	dd0 <memmove@plt>
    135c:	stp	x29, x30, [sp, #-16]!
    1360:	mov	x29, sp
    1364:	bl	e10 <__chk_fail@plt>

0000000000001368 <__mempcpy_chk@@LIBSSP_1.0>:
    1368:	stp	x29, x30, [sp, #-32]!
    136c:	cmp	x2, x3
    1370:	mov	x29, sp
    1374:	str	x19, [sp, #16]
    1378:	b.hi	1394 <__mempcpy_chk@@LIBSSP_1.0+0x2c>  // b.pmore
    137c:	mov	x19, x2
    1380:	bl	dc0 <memcpy@plt>
    1384:	add	x0, x0, x19
    1388:	ldr	x19, [sp, #16]
    138c:	ldp	x29, x30, [sp], #32
    1390:	ret
    1394:	bl	e10 <__chk_fail@plt>

0000000000001398 <__memset_chk@@LIBSSP_1.0>:
    1398:	cmp	x2, x3
    139c:	b.hi	13a4 <__memset_chk@@LIBSSP_1.0+0xc>  // b.pmore
    13a0:	b	e60 <memset@plt>
    13a4:	stp	x29, x30, [sp, #-16]!
    13a8:	mov	x29, sp
    13ac:	bl	e10 <__chk_fail@plt>

00000000000013b0 <__snprintf_chk@@LIBSSP_1.0>:
    13b0:	stp	x29, x30, [sp, #-240]!
    13b4:	cmp	x1, x3
    13b8:	mov	x29, sp
    13bc:	str	q0, [sp, #80]
    13c0:	str	q1, [sp, #96]
    13c4:	str	q2, [sp, #112]
    13c8:	str	q3, [sp, #128]
    13cc:	str	q4, [sp, #144]
    13d0:	str	q5, [sp, #160]
    13d4:	str	q6, [sp, #176]
    13d8:	str	q7, [sp, #192]
    13dc:	stp	x5, x6, [sp, #216]
    13e0:	str	x7, [sp, #232]
    13e4:	b.hi	1428 <__snprintf_chk@@LIBSSP_1.0+0x78>  // b.pmore
    13e8:	add	x6, sp, #0xf0
    13ec:	stp	x6, x6, [sp, #48]
    13f0:	mov	x2, x4
    13f4:	add	x3, sp, #0xd0
    13f8:	mov	w5, #0xffffffe8            	// #-24
    13fc:	mov	w4, #0xffffff80            	// #-128
    1400:	str	x3, [sp, #64]
    1404:	stp	w5, w4, [sp, #72]
    1408:	add	x3, sp, #0x10
    140c:	ldp	x4, x5, [sp, #48]
    1410:	stp	x4, x5, [sp, #16]
    1414:	ldp	x4, x5, [sp, #64]
    1418:	stp	x4, x5, [sp, #32]
    141c:	bl	ed0 <vsnprintf@plt>
    1420:	ldp	x29, x30, [sp], #240
    1424:	ret
    1428:	bl	e10 <__chk_fail@plt>
    142c:	nop

0000000000001430 <__sprintf_chk@@LIBSSP_1.0>:
    1430:	stp	x29, x30, [sp, #-256]!
    1434:	mov	w9, #0xffffffe0            	// #-32
    1438:	mov	w8, #0xffffff80            	// #-128
    143c:	mov	x29, sp
    1440:	str	x19, [sp, #16]
    1444:	mov	x19, x2
    1448:	mov	x2, #0x7fffffff            	// #2147483647
    144c:	add	x10, sp, #0xe0
    1450:	cmp	x19, x2
    1454:	add	x2, sp, #0x100
    1458:	stp	x2, x2, [sp, #64]
    145c:	mov	x1, x3
    1460:	str	x10, [sp, #80]
    1464:	stp	w9, w8, [sp, #88]
    1468:	str	q0, [sp, #96]
    146c:	str	q1, [sp, #112]
    1470:	str	q2, [sp, #128]
    1474:	str	q3, [sp, #144]
    1478:	str	q4, [sp, #160]
    147c:	str	q5, [sp, #176]
    1480:	str	q6, [sp, #192]
    1484:	str	q7, [sp, #208]
    1488:	stp	x4, x5, [sp, #224]
    148c:	stp	x6, x7, [sp, #240]
    1490:	ldp	x6, x7, [sp, #64]
    1494:	b.ls	14b8 <__sprintf_chk@@LIBSSP_1.0+0x88>  // b.plast
    1498:	ldp	x4, x5, [sp, #80]
    149c:	add	x2, sp, #0x20
    14a0:	stp	x6, x7, [sp, #32]
    14a4:	stp	x4, x5, [sp, #48]
    14a8:	bl	eb0 <vsprintf@plt>
    14ac:	ldr	x19, [sp, #16]
    14b0:	ldp	x29, x30, [sp], #256
    14b4:	ret
    14b8:	ldp	x4, x5, [sp, #80]
    14bc:	mov	x2, x3
    14c0:	mov	x1, x19
    14c4:	add	x3, sp, #0x20
    14c8:	stp	x6, x7, [sp, #32]
    14cc:	stp	x4, x5, [sp, #48]
    14d0:	bl	ed0 <vsnprintf@plt>
    14d4:	tbnz	w0, #31, 14ac <__sprintf_chk@@LIBSSP_1.0+0x7c>
    14d8:	cmp	x19, w0, sxtw
    14dc:	b.hi	14ac <__sprintf_chk@@LIBSSP_1.0+0x7c>  // b.pmore
    14e0:	bl	e10 <__chk_fail@plt>
    14e4:	nop

00000000000014e8 <__stpcpy_chk@@LIBSSP_1.0>:
    14e8:	stp	x29, x30, [sp, #-48]!
    14ec:	mov	x29, sp
    14f0:	stp	x21, x22, [sp, #32]
    14f4:	mov	x21, x2
    14f8:	mov	x22, x0
    14fc:	mov	x0, x1
    1500:	stp	x19, x20, [sp, #16]
    1504:	mov	x20, x1
    1508:	bl	df0 <strlen@plt>
    150c:	cmp	x0, x21
    1510:	b.cs	153c <__stpcpy_chk@@LIBSSP_1.0+0x54>  // b.hs, b.nlast
    1514:	mov	x19, x0
    1518:	mov	x1, x20
    151c:	add	x2, x19, #0x1
    1520:	mov	x0, x22
    1524:	bl	dc0 <memcpy@plt>
    1528:	add	x0, x0, x19
    152c:	ldp	x19, x20, [sp, #16]
    1530:	ldp	x21, x22, [sp, #32]
    1534:	ldp	x29, x30, [sp], #48
    1538:	ret
    153c:	bl	e10 <__chk_fail@plt>

0000000000001540 <__strcat_chk@@LIBSSP_1.0>:
    1540:	sub	x7, x2, #0x1
    1544:	add	x6, x0, x2
    1548:	mov	x4, x0
    154c:	b	1554 <__strcat_chk@@LIBSSP_1.0+0x14>
    1550:	mov	x4, x2
    1554:	sub	x2, x0, x4
    1558:	cmp	x4, x6
    155c:	add	x3, x2, x7
    1560:	b.eq	1594 <__strcat_chk@@LIBSSP_1.0+0x54>  // b.none
    1564:	mov	x2, x4
    1568:	ldrb	w5, [x2], #1
    156c:	cbnz	w5, 1550 <__strcat_chk@@LIBSSP_1.0+0x10>
    1570:	mov	x2, #0x0                   	// #0
    1574:	b	1584 <__strcat_chk@@LIBSSP_1.0+0x44>
    1578:	cmp	x2, x3
    157c:	add	x2, x2, #0x1
    1580:	b.eq	1594 <__strcat_chk@@LIBSSP_1.0+0x54>  // b.none
    1584:	ldrb	w5, [x1, x2]
    1588:	strb	w5, [x4, x2]
    158c:	cbnz	w5, 1578 <__strcat_chk@@LIBSSP_1.0+0x38>
    1590:	ret
    1594:	stp	x29, x30, [sp, #-16]!
    1598:	mov	x29, sp
    159c:	bl	e10 <__chk_fail@plt>

00000000000015a0 <__strcpy_chk@@LIBSSP_1.0>:
    15a0:	stp	x29, x30, [sp, #-48]!
    15a4:	mov	x29, sp
    15a8:	stp	x19, x20, [sp, #16]
    15ac:	mov	x20, x2
    15b0:	mov	x19, x1
    15b4:	str	x21, [sp, #32]
    15b8:	mov	x21, x0
    15bc:	mov	x0, x1
    15c0:	bl	df0 <strlen@plt>
    15c4:	cmp	x0, x20
    15c8:	b.cs	15e8 <__strcpy_chk@@LIBSSP_1.0+0x48>  // b.hs, b.nlast
    15cc:	add	x2, x0, #0x1
    15d0:	mov	x1, x19
    15d4:	mov	x0, x21
    15d8:	ldp	x19, x20, [sp, #16]
    15dc:	ldr	x21, [sp, #32]
    15e0:	ldp	x29, x30, [sp], #48
    15e4:	b	dc0 <memcpy@plt>
    15e8:	bl	e10 <__chk_fail@plt>
    15ec:	nop

00000000000015f0 <__strncat_chk@@LIBSSP_1.0>:
    15f0:	add	x8, x0, x3
    15f4:	mov	x4, x0
    15f8:	b	1600 <__strncat_chk@@LIBSSP_1.0+0x10>
    15fc:	mov	x4, x5
    1600:	mov	x6, x3
    1604:	cmp	x4, x8
    1608:	sub	x3, x3, #0x1
    160c:	b.eq	16ec <__strncat_chk@@LIBSSP_1.0+0xfc>  // b.none
    1610:	mov	x5, x4
    1614:	ldrb	w7, [x5], #1
    1618:	cbnz	w7, 15fc <__strncat_chk@@LIBSSP_1.0+0xc>
    161c:	sub	x4, x4, #0x1
    1620:	cmp	x2, #0x3
    1624:	b.ls	1698 <__strncat_chk@@LIBSSP_1.0+0xa8>  // b.plast
    1628:	and	x7, x2, #0xfffffffffffffffc
    162c:	add	x7, x1, x7
    1630:	b	1688 <__strncat_chk@@LIBSSP_1.0+0x98>
    1634:	cmp	x6, #0x1
    1638:	b.eq	16ec <__strncat_chk@@LIBSSP_1.0+0xfc>  // b.none
    163c:	ldrb	w3, [x1, #1]
    1640:	strb	w3, [x4, #2]
    1644:	cbz	w3, 1694 <__strncat_chk@@LIBSSP_1.0+0xa4>
    1648:	cmp	x6, #0x2
    164c:	b.eq	16ec <__strncat_chk@@LIBSSP_1.0+0xfc>  // b.none
    1650:	ldrb	w3, [x1, #2]
    1654:	strb	w3, [x4, #3]
    1658:	cbz	w3, 1694 <__strncat_chk@@LIBSSP_1.0+0xa4>
    165c:	cmp	x6, #0x3
    1660:	sub	x5, x6, #0x4
    1664:	b.eq	16ec <__strncat_chk@@LIBSSP_1.0+0xfc>  // b.none
    1668:	ldrb	w3, [x1, #3]
    166c:	add	x1, x1, #0x4
    1670:	strb	w3, [x4, #4]!
    1674:	cbz	w3, 1694 <__strncat_chk@@LIBSSP_1.0+0xa4>
    1678:	cmp	x1, x7
    167c:	b.eq	16dc <__strncat_chk@@LIBSSP_1.0+0xec>  // b.none
    1680:	cbz	x5, 16ec <__strncat_chk@@LIBSSP_1.0+0xfc>
    1684:	mov	x6, x5
    1688:	ldrb	w3, [x1]
    168c:	strb	w3, [x4, #1]
    1690:	cbnz	w3, 1634 <__strncat_chk@@LIBSSP_1.0+0x44>
    1694:	ret
    1698:	cbz	x2, 1694 <__strncat_chk@@LIBSSP_1.0+0xa4>
    169c:	add	x5, x3, #0x1
    16a0:	sub	x5, x5, x2
    16a4:	b	16bc <__strncat_chk@@LIBSSP_1.0+0xcc>
    16a8:	cmp	x5, x3
    16ac:	b.eq	16d0 <__strncat_chk@@LIBSSP_1.0+0xe0>  // b.none
    16b0:	sub	x2, x3, #0x1
    16b4:	cbz	x3, 16ec <__strncat_chk@@LIBSSP_1.0+0xfc>
    16b8:	mov	x3, x2
    16bc:	ldrb	w2, [x1], #1
    16c0:	strb	w2, [x4, #1]!
    16c4:	cbnz	w2, 16a8 <__strncat_chk@@LIBSSP_1.0+0xb8>
    16c8:	b	1694 <__strncat_chk@@LIBSSP_1.0+0xa4>
    16cc:	mov	x3, x5
    16d0:	cbz	x3, 16ec <__strncat_chk@@LIBSSP_1.0+0xfc>
    16d4:	strb	wzr, [x4, #1]
    16d8:	ret
    16dc:	ands	x2, x2, #0x3
    16e0:	b.eq	16cc <__strncat_chk@@LIBSSP_1.0+0xdc>  // b.none
    16e4:	sub	x3, x6, #0x5
    16e8:	cbnz	x5, 169c <__strncat_chk@@LIBSSP_1.0+0xac>
    16ec:	stp	x29, x30, [sp, #-16]!
    16f0:	mov	x29, sp
    16f4:	bl	e10 <__chk_fail@plt>

00000000000016f8 <__strncpy_chk@@LIBSSP_1.0>:
    16f8:	cmp	x2, x3
    16fc:	b.hi	1704 <__strncpy_chk@@LIBSSP_1.0+0xc>  // b.pmore
    1700:	b	ee0 <strncpy@plt>
    1704:	stp	x29, x30, [sp, #-16]!
    1708:	mov	x29, sp
    170c:	bl	e10 <__chk_fail@plt>

0000000000001710 <__vsnprintf_chk@@LIBSSP_1.0>:
    1710:	stp	x29, x30, [sp, #-48]!
    1714:	cmp	x1, x3
    1718:	mov	x29, sp
    171c:	b.hi	1744 <__vsnprintf_chk@@LIBSSP_1.0+0x34>  // b.pmore
    1720:	mov	x2, x4
    1724:	add	x3, sp, #0x10
    1728:	ldp	x6, x7, [x5]
    172c:	ldp	x4, x5, [x5, #16]
    1730:	stp	x6, x7, [sp, #16]
    1734:	stp	x4, x5, [sp, #32]
    1738:	bl	ed0 <vsnprintf@plt>
    173c:	ldp	x29, x30, [sp], #48
    1740:	ret
    1744:	bl	e10 <__chk_fail@plt>

0000000000001748 <__vsprintf_chk@@LIBSSP_1.0>:
    1748:	stp	x29, x30, [sp, #-64]!
    174c:	mov	x1, x3
    1750:	mov	x29, sp
    1754:	ldp	x6, x7, [x4]
    1758:	str	x19, [sp, #16]
    175c:	mov	x19, x2
    1760:	mov	x2, #0x7fffffff            	// #2147483647
    1764:	cmp	x19, x2
    1768:	b.ls	178c <__vsprintf_chk@@LIBSSP_1.0+0x44>  // b.plast
    176c:	ldp	x4, x5, [x4, #16]
    1770:	add	x2, sp, #0x20
    1774:	stp	x6, x7, [sp, #32]
    1778:	stp	x4, x5, [sp, #48]
    177c:	bl	eb0 <vsprintf@plt>
    1780:	ldr	x19, [sp, #16]
    1784:	ldp	x29, x30, [sp], #64
    1788:	ret
    178c:	ldp	x4, x5, [x4, #16]
    1790:	mov	x2, x3
    1794:	mov	x1, x19
    1798:	add	x3, sp, #0x20
    179c:	stp	x6, x7, [sp, #32]
    17a0:	stp	x4, x5, [sp, #48]
    17a4:	bl	ed0 <vsnprintf@plt>
    17a8:	tbnz	w0, #31, 1780 <__vsprintf_chk@@LIBSSP_1.0+0x38>
    17ac:	cmp	x19, w0, sxtw
    17b0:	b.hi	1780 <__vsprintf_chk@@LIBSSP_1.0+0x38>  // b.pmore
    17b4:	bl	e10 <__chk_fail@plt>

Disassembly of section .fini:

00000000000017b8 <.fini>:
    17b8:	stp	x29, x30, [sp, #-16]!
    17bc:	mov	x29, sp
    17c0:	ldp	x29, x30, [sp], #16
    17c4:	ret
