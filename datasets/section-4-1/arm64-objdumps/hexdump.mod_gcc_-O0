
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//hexdump.mod_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0x350>:
   0:	sub	sp, sp, #0x890
   4:	stp	x29, x30, [sp]
   8:	mov	x29, sp
   c:	str	x0, [sp, #40]
  10:	str	w1, [sp, #36]
  14:	str	x2, [sp, #24]
  18:	ldr	x0, [sp, #40]
  1c:	ldr	x0, [x0, #8]
  20:	str	x0, [sp, #2144]
  24:	ldr	w0, [sp, #36]
  28:	cmp	w0, #0x1
  2c:	b.eq	48 <grub_mod_init-0x308>  // b.none
  30:	adrp	x0, 0 <grub_mod_init-0x350>
  34:	add	x0, x0, #0x0
  38:	ldr	x1, [x0]
  3c:	mov	w0, #0x12                  	// #18
  40:	bl	0 <grub_error>
  44:	b	330 <grub_mod_init-0x20>
  48:	ldr	x0, [sp, #24]
  4c:	ldr	x0, [x0]
  50:	bl	0 <grub_strlen>
  54:	str	w0, [sp, #2140]
  58:	ldr	x0, [sp, #2144]
  5c:	ldr	w0, [x0]
  60:	cmp	w0, #0x0
  64:	b.eq	80 <grub_mod_init-0x2d0>  // b.none
  68:	ldr	x0, [sp, #2144]
  6c:	ldr	x0, [x0, #8]
  70:	mov	w2, #0x0                   	// #0
  74:	mov	x1, #0x0                   	// #0
  78:	bl	0 <grub_strtoull>
  7c:	b	84 <grub_mod_init-0x2cc>
  80:	mov	x0, #0x0                   	// #0
  84:	str	x0, [sp, #2176]
  88:	ldr	x0, [sp, #2144]
  8c:	add	x0, x0, #0x10
  90:	ldr	w0, [x0]
  94:	cmp	w0, #0x0
  98:	b.eq	b8 <grub_mod_init-0x298>  // b.none
  9c:	ldr	x0, [sp, #2144]
  a0:	add	x0, x0, #0x10
  a4:	ldr	x0, [x0, #8]
  a8:	mov	w2, #0x0                   	// #0
  ac:	mov	x1, #0x0                   	// #0
  b0:	bl	0 <grub_strtoul>
  b4:	b	bc <grub_mod_init-0x294>
  b8:	mov	x0, #0x100                 	// #256
  bc:	str	x0, [sp, #2184]
  c0:	ldr	x0, [sp, #24]
  c4:	ldr	x2, [x0]
  c8:	adrp	x0, 0 <grub_mod_init-0x350>
  cc:	add	x0, x0, #0x0
  d0:	ldr	x1, [x0]
  d4:	mov	x0, x2
  d8:	bl	0 <grub_strcmp>
  dc:	cmp	w0, #0x0
  e0:	b.ne	100 <grub_mod_init-0x250>  // b.any
  e4:	ldr	x0, [sp, #2176]
  e8:	ldr	x1, [sp, #2184]
  ec:	mov	w2, w1
  f0:	mov	x1, x0
  f4:	ldr	x0, [sp, #2176]
  f8:	bl	420 <hexdump>
  fc:	b	32c <grub_mod_init-0x24>
 100:	ldr	x0, [sp, #24]
 104:	ldr	x0, [x0]
 108:	ldrb	w0, [x0]
 10c:	cmp	w0, #0x28
 110:	b.ne	240 <grub_mod_init-0x110>  // b.any
 114:	ldr	x0, [sp, #24]
 118:	ldr	x1, [x0]
 11c:	ldrsw	x0, [sp, #2140]
 120:	sub	x0, x0, #0x1
 124:	add	x0, x1, x0
 128:	ldrb	w0, [x0]
 12c:	cmp	w0, #0x29
 130:	b.ne	240 <grub_mod_init-0x110>  // b.any
 134:	ldr	x0, [sp, #24]
 138:	ldr	x1, [x0]
 13c:	ldrsw	x0, [sp, #2140]
 140:	sub	x0, x0, #0x1
 144:	add	x0, x1, x0
 148:	strb	wzr, [x0]
 14c:	ldr	x0, [sp, #24]
 150:	ldr	x0, [x0]
 154:	add	x0, x0, #0x1
 158:	bl	0 <grub_disk_open>
 15c:	str	x0, [sp, #2128]
 160:	ldr	x0, [sp, #2128]
 164:	cmp	x0, #0x0
 168:	b.ne	174 <grub_mod_init-0x1dc>  // b.any
 16c:	mov	w0, #0x0                   	// #0
 170:	b	330 <grub_mod_init-0x20>
 174:	ldr	x0, [sp, #2176]
 178:	lsr	x0, x0, #11
 17c:	lsl	x0, x0, #2
 180:	str	x0, [sp, #2168]
 184:	ldr	x0, [sp, #2176]
 188:	and	x0, x0, #0x7ff
 18c:	str	x0, [sp, #2160]
 190:	b	220 <grub_mod_init-0x130>
 194:	ldr	x0, [sp, #2184]
 198:	str	x0, [sp, #2152]
 19c:	ldr	x0, [sp, #2152]
 1a0:	cmp	x0, #0x800
 1a4:	b.ls	1b0 <grub_mod_init-0x1a0>  // b.plast
 1a8:	mov	x0, #0x800                 	// #2048
 1ac:	str	x0, [sp, #2152]
 1b0:	add	x0, sp, #0x38
 1b4:	mov	x4, x0
 1b8:	ldr	x3, [sp, #2152]
 1bc:	ldr	x2, [sp, #2160]
 1c0:	ldr	x1, [sp, #2168]
 1c4:	ldr	x0, [sp, #2128]
 1c8:	bl	0 <grub_disk_read>
 1cc:	cmp	w0, #0x0
 1d0:	b.ne	230 <grub_mod_init-0x120>  // b.any
 1d4:	ldr	x0, [sp, #2152]
 1d8:	mov	w1, w0
 1dc:	add	x0, sp, #0x38
 1e0:	mov	w2, w1
 1e4:	mov	x1, x0
 1e8:	ldr	x0, [sp, #2176]
 1ec:	bl	420 <hexdump>
 1f0:	str	xzr, [sp, #2160]
 1f4:	ldr	x1, [sp, #2176]
 1f8:	ldr	x0, [sp, #2152]
 1fc:	add	x0, x1, x0
 200:	str	x0, [sp, #2176]
 204:	ldr	x1, [sp, #2184]
 208:	ldr	x0, [sp, #2152]
 20c:	sub	x0, x1, x0
 210:	str	x0, [sp, #2184]
 214:	ldr	x0, [sp, #2168]
 218:	add	x0, x0, #0x4
 21c:	str	x0, [sp, #2168]
 220:	ldr	x0, [sp, #2184]
 224:	cmp	x0, #0x0
 228:	b.ne	194 <grub_mod_init-0x1bc>  // b.any
 22c:	b	234 <grub_mod_init-0x11c>
 230:	nop
 234:	ldr	x0, [sp, #2128]
 238:	bl	0 <grub_disk_close>
 23c:	b	32c <grub_mod_init-0x24>
 240:	ldr	x0, [sp, #24]
 244:	ldr	x0, [x0]
 248:	mov	w1, #0x2c                  	// #44
 24c:	bl	0 <grub_file_open>
 250:	str	x0, [sp, #2120]
 254:	ldr	x0, [sp, #2120]
 258:	cmp	x0, #0x0
 25c:	b.ne	268 <grub_mod_init-0xe8>  // b.any
 260:	mov	w0, #0x0                   	// #0
 264:	b	330 <grub_mod_init-0x20>
 268:	ldr	x0, [sp, #2120]
 26c:	ldr	x1, [sp, #2176]
 270:	str	x1, [x0, #24]
 274:	b	2f8 <grub_mod_init-0x58>
 278:	ldr	x0, [sp, #2184]
 27c:	cmp	x0, #0x0
 280:	b.eq	29c <grub_mod_init-0xb4>  // b.none
 284:	ldr	x1, [sp, #2112]
 288:	ldr	x0, [sp, #2184]
 28c:	cmp	x1, x0
 290:	b.le	29c <grub_mod_init-0xb4>
 294:	ldr	x0, [sp, #2184]
 298:	b	2a0 <grub_mod_init-0xb0>
 29c:	ldr	x0, [sp, #2112]
 2a0:	str	x0, [sp, #2104]
 2a4:	ldr	x0, [sp, #2104]
 2a8:	mov	w1, w0
 2ac:	add	x0, sp, #0x38
 2b0:	mov	w2, w1
 2b4:	mov	x1, x0
 2b8:	ldr	x0, [sp, #2176]
 2bc:	bl	420 <hexdump>
 2c0:	ldr	x1, [sp, #2176]
 2c4:	ldr	x0, [sp, #2104]
 2c8:	add	x0, x1, x0
 2cc:	str	x0, [sp, #2176]
 2d0:	ldr	x0, [sp, #2184]
 2d4:	cmp	x0, #0x0
 2d8:	b.eq	2f8 <grub_mod_init-0x58>  // b.none
 2dc:	ldr	x1, [sp, #2184]
 2e0:	ldr	x0, [sp, #2104]
 2e4:	sub	x0, x1, x0
 2e8:	str	x0, [sp, #2184]
 2ec:	ldr	x0, [sp, #2184]
 2f0:	cmp	x0, #0x0
 2f4:	b.eq	320 <grub_mod_init-0x30>  // b.none
 2f8:	add	x0, sp, #0x38
 2fc:	mov	x2, #0x800                 	// #2048
 300:	mov	x1, x0
 304:	ldr	x0, [sp, #2120]
 308:	bl	0 <grub_file_read>
 30c:	str	x0, [sp, #2112]
 310:	ldr	x0, [sp, #2112]
 314:	cmp	x0, #0x0
 318:	b.gt	278 <grub_mod_init-0xd8>
 31c:	b	324 <grub_mod_init-0x2c>
 320:	nop
 324:	ldr	x0, [sp, #2120]
 328:	bl	0 <grub_file_close>
 32c:	mov	w0, #0x0                   	// #0
 330:	ldp	x29, x30, [sp]
 334:	add	sp, sp, #0x890
 338:	ret
 33c:	nop
	...

0000000000000350 <grub_mod_init>:
 350:	stp	x29, x30, [sp, #-32]!
 354:	mov	x29, sp
 358:	str	x0, [sp, #24]
 35c:	adrp	x0, 0 <grub_mod_init-0x350>
 360:	add	x0, x0, #0x0
 364:	ldr	x5, [x0]
 368:	adrp	x0, 0 <grub_mod_init-0x350>
 36c:	add	x0, x0, #0x0
 370:	ldr	x4, [x0]
 374:	adrp	x0, 0 <grub_mod_init-0x350>
 378:	add	x0, x0, #0x0
 37c:	ldr	x3, [x0]
 380:	mov	w2, #0x0                   	// #0
 384:	adrp	x0, 0 <grub_mod_init-0x350>
 388:	add	x0, x0, #0x0
 38c:	ldr	x1, [x0]
 390:	adrp	x0, 0 <grub_mod_init-0x350>
 394:	add	x0, x0, #0x0
 398:	ldr	x0, [x0]
 39c:	bl	0 <grub_register_extcmd>
 3a0:	mov	x1, x0
 3a4:	adrp	x0, 0 <grub_mod_init-0x350>
 3a8:	add	x0, x0, #0x0
 3ac:	ldr	x0, [x0]
 3b0:	str	x1, [x0]
 3b4:	nop
 3b8:	ldp	x29, x30, [sp], #32
 3bc:	ret
	...

00000000000003f0 <grub_mod_fini>:
 3f0:	stp	x29, x30, [sp, #-16]!
 3f4:	mov	x29, sp
 3f8:	adrp	x0, 0 <grub_mod_init-0x350>
 3fc:	add	x0, x0, #0x0
 400:	ldr	x0, [x0]
 404:	ldr	x0, [x0]
 408:	bl	0 <grub_unregister_extcmd>
 40c:	nop
 410:	ldp	x29, x30, [sp], #16
 414:	ret
	...

0000000000000420 <hexdump>:
 420:	stp	x29, x30, [sp, #-144]!
 424:	mov	x29, sp
 428:	str	x0, [sp, #40]
 42c:	str	x1, [sp, #32]
 430:	str	w2, [sp, #28]
 434:	b	778 <hexdump+0x358>
 438:	add	x4, sp, #0x30
 43c:	ldr	x3, [sp, #40]
 440:	adrp	x0, 0 <grub_mod_init-0x350>
 444:	add	x0, x0, #0x0
 448:	ldr	x2, [x0]
 44c:	mov	x1, #0x50                  	// #80
 450:	mov	x0, x4
 454:	bl	0 <grub_snprintf>
 458:	str	w0, [sp, #140]
 45c:	mov	w0, #0x10                  	// #16
 460:	str	w0, [sp, #136]
 464:	ldr	w1, [sp, #136]
 468:	ldr	w0, [sp, #28]
 46c:	cmp	w1, w0
 470:	b.le	47c <hexdump+0x5c>
 474:	ldr	w0, [sp, #28]
 478:	str	w0, [sp, #136]
 47c:	str	wzr, [sp, #132]
 480:	b	510 <hexdump+0xf0>
 484:	add	x1, sp, #0x30
 488:	ldrsw	x0, [sp, #140]
 48c:	add	x4, x1, x0
 490:	ldrsw	x0, [sp, #140]
 494:	mov	x1, #0x50                  	// #80
 498:	sub	x5, x1, x0
 49c:	ldrsw	x0, [sp, #132]
 4a0:	ldr	x1, [sp, #32]
 4a4:	add	x0, x1, x0
 4a8:	ldrb	w0, [x0]
 4ac:	mov	w3, w0
 4b0:	adrp	x0, 0 <grub_mod_init-0x350>
 4b4:	add	x0, x0, #0x0
 4b8:	ldr	x2, [x0]
 4bc:	mov	x1, x5
 4c0:	mov	x0, x4
 4c4:	bl	0 <grub_snprintf>
 4c8:	mov	w1, w0
 4cc:	ldr	w0, [sp, #140]
 4d0:	add	w0, w0, w1
 4d4:	str	w0, [sp, #140]
 4d8:	ldr	w0, [sp, #132]
 4dc:	and	w0, w0, #0x7
 4e0:	cmp	w0, #0x7
 4e4:	b.ne	504 <hexdump+0xe4>  // b.any
 4e8:	ldr	w0, [sp, #140]
 4ec:	add	w1, w0, #0x1
 4f0:	str	w1, [sp, #140]
 4f4:	sxtw	x0, w0
 4f8:	add	x1, sp, #0x30
 4fc:	mov	w2, #0x20                  	// #32
 500:	strb	w2, [x1, x0]
 504:	ldr	w0, [sp, #132]
 508:	add	w0, w0, #0x1
 50c:	str	w0, [sp, #132]
 510:	ldr	w1, [sp, #132]
 514:	ldr	w0, [sp, #136]
 518:	cmp	w1, w0
 51c:	b.lt	484 <hexdump+0x64>  // b.tstop
 520:	b	598 <hexdump+0x178>
 524:	add	x1, sp, #0x30
 528:	ldrsw	x0, [sp, #140]
 52c:	add	x3, x1, x0
 530:	ldrsw	x0, [sp, #140]
 534:	mov	x1, #0x50                  	// #80
 538:	sub	x1, x1, x0
 53c:	adrp	x0, 0 <grub_mod_init-0x350>
 540:	add	x0, x0, #0x0
 544:	ldr	x2, [x0]
 548:	mov	x0, x3
 54c:	bl	0 <grub_snprintf>
 550:	mov	w1, w0
 554:	ldr	w0, [sp, #140]
 558:	add	w0, w0, w1
 55c:	str	w0, [sp, #140]
 560:	ldr	w0, [sp, #132]
 564:	and	w0, w0, #0x7
 568:	cmp	w0, #0x7
 56c:	b.ne	58c <hexdump+0x16c>  // b.any
 570:	ldr	w0, [sp, #140]
 574:	add	w1, w0, #0x1
 578:	str	w1, [sp, #140]
 57c:	sxtw	x0, w0
 580:	add	x1, sp, #0x30
 584:	mov	w2, #0x20                  	// #32
 588:	strb	w2, [x1, x0]
 58c:	ldr	w0, [sp, #132]
 590:	add	w0, w0, #0x1
 594:	str	w0, [sp, #132]
 598:	ldr	w0, [sp, #132]
 59c:	cmp	w0, #0xf
 5a0:	b.le	524 <hexdump+0x104>
 5a4:	ldr	w0, [sp, #140]
 5a8:	add	w1, w0, #0x1
 5ac:	str	w1, [sp, #140]
 5b0:	sxtw	x0, w0
 5b4:	add	x1, sp, #0x30
 5b8:	mov	w2, #0x7c                  	// #124
 5bc:	strb	w2, [x1, x0]
 5c0:	str	wzr, [sp, #132]
 5c4:	b	634 <hexdump+0x214>
 5c8:	ldrsw	x0, [sp, #132]
 5cc:	ldr	x1, [sp, #32]
 5d0:	add	x0, x1, x0
 5d4:	ldrb	w0, [x0]
 5d8:	cmp	w0, #0x1f
 5dc:	b.ls	60c <hexdump+0x1ec>  // b.plast
 5e0:	ldrsw	x0, [sp, #132]
 5e4:	ldr	x1, [sp, #32]
 5e8:	add	x0, x1, x0
 5ec:	ldrb	w0, [x0]
 5f0:	cmp	w0, #0x7e
 5f4:	b.hi	60c <hexdump+0x1ec>  // b.pmore
 5f8:	ldrsw	x0, [sp, #132]
 5fc:	ldr	x1, [sp, #32]
 600:	add	x0, x1, x0
 604:	ldrb	w0, [x0]
 608:	b	610 <hexdump+0x1f0>
 60c:	mov	w0, #0x2e                  	// #46
 610:	ldr	w1, [sp, #140]
 614:	add	w2, w1, #0x1
 618:	str	w2, [sp, #140]
 61c:	sxtw	x1, w1
 620:	add	x2, sp, #0x30
 624:	strb	w0, [x2, x1]
 628:	ldr	w0, [sp, #132]
 62c:	add	w0, w0, #0x1
 630:	str	w0, [sp, #132]
 634:	ldr	w1, [sp, #132]
 638:	ldr	w0, [sp, #136]
 63c:	cmp	w1, w0
 640:	b.lt	5c8 <hexdump+0x1a8>  // b.tstop
 644:	ldr	w0, [sp, #140]
 648:	add	w1, w0, #0x1
 64c:	str	w1, [sp, #140]
 650:	sxtw	x0, w0
 654:	add	x1, sp, #0x30
 658:	mov	w2, #0x7c                  	// #124
 65c:	strb	w2, [x1, x0]
 660:	ldrsw	x0, [sp, #140]
 664:	add	x1, sp, #0x30
 668:	strb	wzr, [x1, x0]
 66c:	add	x0, sp, #0x30
 670:	mov	x1, x0
 674:	adrp	x0, 0 <grub_mod_init-0x350>
 678:	add	x0, x0, #0x0
 67c:	ldr	x0, [x0]
 680:	bl	0 <grub_printf>
 684:	ldr	w0, [sp, #28]
 688:	cmp	w0, #0x3f
 68c:	b.le	750 <hexdump+0x330>
 690:	ldr	x0, [sp, #32]
 694:	add	x0, x0, #0x10
 698:	mov	x2, #0x10                  	// #16
 69c:	mov	x1, x0
 6a0:	ldr	x0, [sp, #32]
 6a4:	bl	0 <grub_memcmp>
 6a8:	cmp	w0, #0x0
 6ac:	b.ne	750 <hexdump+0x330>  // b.any
 6b0:	ldr	x0, [sp, #32]
 6b4:	add	x0, x0, #0x20
 6b8:	mov	x2, #0x10                  	// #16
 6bc:	mov	x1, x0
 6c0:	ldr	x0, [sp, #32]
 6c4:	bl	0 <grub_memcmp>
 6c8:	cmp	w0, #0x0
 6cc:	b.ne	750 <hexdump+0x330>  // b.any
 6d0:	ldr	x0, [sp, #32]
 6d4:	add	x0, x0, #0x30
 6d8:	mov	x2, #0x10                  	// #16
 6dc:	mov	x1, x0
 6e0:	ldr	x0, [sp, #32]
 6e4:	bl	0 <grub_memcmp>
 6e8:	cmp	w0, #0x0
 6ec:	b.ne	750 <hexdump+0x330>  // b.any
 6f0:	adrp	x0, 0 <grub_mod_init-0x350>
 6f4:	add	x0, x0, #0x0
 6f8:	ldr	x0, [x0]
 6fc:	bl	0 <grub_printf>
 700:	ldr	x0, [sp, #40]
 704:	add	x0, x0, #0x10
 708:	str	x0, [sp, #40]
 70c:	ldr	x0, [sp, #32]
 710:	add	x0, x0, #0x10
 714:	str	x0, [sp, #32]
 718:	ldr	w0, [sp, #28]
 71c:	sub	w0, w0, #0x10
 720:	str	w0, [sp, #28]
 724:	ldr	w0, [sp, #28]
 728:	cmp	w0, #0x2f
 72c:	b.le	750 <hexdump+0x330>
 730:	ldr	x0, [sp, #32]
 734:	add	x0, x0, #0x20
 738:	mov	x2, #0x10                  	// #16
 73c:	mov	x1, x0
 740:	ldr	x0, [sp, #32]
 744:	bl	0 <grub_memcmp>
 748:	cmp	w0, #0x0
 74c:	b.eq	700 <hexdump+0x2e0>  // b.none
 750:	ldr	x0, [sp, #40]
 754:	add	x0, x0, #0x10
 758:	str	x0, [sp, #40]
 75c:	ldr	x0, [sp, #32]
 760:	add	x0, x0, #0x10
 764:	str	x0, [sp, #32]
 768:	ldr	w1, [sp, #28]
 76c:	ldr	w0, [sp, #136]
 770:	sub	w0, w1, w0
 774:	str	w0, [sp, #28]
 778:	ldr	w0, [sp, #28]
 77c:	cmp	w0, #0x0
 780:	b.gt	438 <hexdump+0x18>
 784:	nop
 788:	nop
 78c:	ldp	x29, x30, [sp], #144
 790:	ret
 794:	nop
	...
