
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//print_gcc_-O1:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000b28 <_init>:
 b28:	stp	x29, x30, [sp, #-16]!
 b2c:	mov	x29, sp
 b30:	bl	cb0 <call_weak_fn>
 b34:	ldp	x29, x30, [sp], #16
 b38:	ret

Disassembly of section .plt:

0000000000000b40 <.plt>:
 b40:	stp	x16, x30, [sp, #-16]!
 b44:	adrp	x16, 11000 <__FRAME_END__+0xfcc8>
 b48:	ldr	x17, [x16, #4088]
 b4c:	add	x16, x16, #0xff8
 b50:	br	x17
 b54:	nop
 b58:	nop
 b5c:	nop

0000000000000b60 <all_digits@plt>:
 b60:	adrp	x16, 12000 <all_digits>
 b64:	ldr	x17, [x16]
 b68:	add	x16, x16, #0x0
 b6c:	br	x17

0000000000000b70 <strlen@plt>:
 b70:	adrp	x16, 12000 <all_digits>
 b74:	ldr	x17, [x16, #8]
 b78:	add	x16, x16, #0x8
 b7c:	br	x17

0000000000000b80 <fputs@plt>:
 b80:	adrp	x16, 12000 <all_digits>
 b84:	ldr	x17, [x16, #16]
 b88:	add	x16, x16, #0x10
 b8c:	br	x17

0000000000000b90 <dup@plt>:
 b90:	adrp	x16, 12000 <all_digits>
 b94:	ldr	x17, [x16, #24]
 b98:	add	x16, x16, #0x18
 b9c:	br	x17

0000000000000ba0 <__cxa_finalize@plt>:
 ba0:	adrp	x16, 12000 <all_digits>
 ba4:	ldr	x17, [x16, #32]
 ba8:	add	x16, x16, #0x20
 bac:	br	x17

0000000000000bb0 <fputc@plt>:
 bb0:	adrp	x16, 12000 <all_digits>
 bb4:	ldr	x17, [x16, #40]
 bb8:	add	x16, x16, #0x28
 bbc:	br	x17

0000000000000bc0 <make_word@plt>:
 bc0:	adrp	x16, 12000 <all_digits>
 bc4:	ldr	x17, [x16, #48]
 bc8:	add	x16, x16, #0x30
 bcc:	br	x17

0000000000000bd0 <fclose@plt>:
 bd0:	adrp	x16, 12000 <all_digits>
 bd4:	ldr	x17, [x16, #56]
 bd8:	add	x16, x16, #0x38
 bdc:	br	x17

0000000000000be0 <builtin_help@plt>:
 be0:	adrp	x16, 12000 <all_digits>
 be4:	ldr	x17, [x16, #64]
 be8:	add	x16, x16, #0x40
 bec:	br	x17

0000000000000bf0 <fdopen@plt>:
 bf0:	adrp	x16, 12000 <all_digits>
 bf4:	ldr	x17, [x16, #72]
 bf8:	add	x16, x16, #0x48
 bfc:	br	x17

0000000000000c00 <builtin_usage@plt>:
 c00:	adrp	x16, 12000 <all_digits>
 c04:	ldr	x17, [x16, #80]
 c08:	add	x16, x16, #0x50
 c0c:	br	x17

0000000000000c10 <__gmon_start__@plt>:
 c10:	adrp	x16, 12000 <all_digits>
 c14:	ldr	x17, [x16, #88]
 c18:	add	x16, x16, #0x58
 c1c:	br	x17

0000000000000c20 <ansicstr@plt>:
 c20:	adrp	x16, 12000 <all_digits>
 c24:	ldr	x17, [x16, #96]
 c28:	add	x16, x16, #0x60
 c2c:	br	x17

0000000000000c30 <dispose_words@plt>:
 c30:	adrp	x16, 12000 <all_digits>
 c34:	ldr	x17, [x16, #104]
 c38:	add	x16, x16, #0x68
 c3c:	br	x17

0000000000000c40 <free@plt>:
 c40:	adrp	x16, 12000 <all_digits>
 c44:	ldr	x17, [x16, #112]
 c48:	add	x16, x16, #0x70
 c4c:	br	x17

0000000000000c50 <internal_getopt@plt>:
 c50:	adrp	x16, 12000 <all_digits>
 c54:	ldr	x17, [x16, #120]
 c58:	add	x16, x16, #0x78
 c5c:	br	x17

0000000000000c60 <reset_internal_getopt@plt>:
 c60:	adrp	x16, 12000 <all_digits>
 c64:	ldr	x17, [x16, #128]
 c68:	add	x16, x16, #0x80
 c6c:	br	x17

0000000000000c70 <fflush@plt>:
 c70:	adrp	x16, 12000 <all_digits>
 c74:	ldr	x17, [x16, #136]
 c78:	add	x16, x16, #0x88
 c7c:	br	x17

0000000000000c80 <legal_number@plt>:
 c80:	adrp	x16, 12000 <all_digits>
 c84:	ldr	x17, [x16, #144]
 c88:	add	x16, x16, #0x90
 c8c:	br	x17

0000000000000c90 <printf_builtin@plt>:
 c90:	adrp	x16, 12000 <all_digits>
 c94:	ldr	x17, [x16, #152]
 c98:	add	x16, x16, #0x98
 c9c:	br	x17

0000000000000ca0 <make_word_list@plt>:
 ca0:	adrp	x16, 12000 <all_digits>
 ca4:	ldr	x17, [x16, #160]
 ca8:	add	x16, x16, #0xa0
 cac:	br	x17

Disassembly of section .text:

0000000000000cb0 <call_weak_fn>:
     cb0:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     cb4:	ldr	x0, [x0, #4040]
     cb8:	cbz	x0, cc0 <call_weak_fn+0x10>
     cbc:	b	c10 <__gmon_start__@plt>
     cc0:	ret

0000000000000cc4 <deregister_tm_clones>:
     cc4:	adrp	x0, 12000 <all_digits>
     cc8:	add	x0, x0, #0x110
     ccc:	adrp	x1, 12000 <all_digits>
     cd0:	add	x1, x1, #0x110
     cd4:	cmp	x0, x1
     cd8:	b.eq	d04 <deregister_tm_clones+0x40>  // b.none
     cdc:	adrp	x1, 11000 <__FRAME_END__+0xfcc8>
     ce0:	ldr	x1, [x1, #4008]
     ce4:	cbz	x1, d04 <deregister_tm_clones+0x40>
     ce8:	stp	x29, x30, [sp, #-16]!
     cec:	mov	x29, sp
     cf0:	adrp	x0, 12000 <all_digits>
     cf4:	add	x0, x0, #0x110
     cf8:	blr	x1
     cfc:	ldp	x29, x30, [sp], #16
     d00:	ret
     d04:	ret

0000000000000d08 <register_tm_clones>:
     d08:	adrp	x0, 12000 <all_digits>
     d0c:	add	x0, x0, #0x110
     d10:	adrp	x1, 12000 <all_digits>
     d14:	add	x1, x1, #0x110
     d18:	sub	x0, x0, x1
     d1c:	lsr	x1, x0, #63
     d20:	add	x0, x1, x0, asr #3
     d24:	cmp	xzr, x0, asr #1
     d28:	b.eq	d58 <register_tm_clones+0x50>  // b.none
     d2c:	asr	x1, x0, #1
     d30:	adrp	x2, 11000 <__FRAME_END__+0xfcc8>
     d34:	ldr	x2, [x2, #4064]
     d38:	cbz	x2, d58 <register_tm_clones+0x50>
     d3c:	stp	x29, x30, [sp, #-16]!
     d40:	mov	x29, sp
     d44:	adrp	x0, 12000 <all_digits>
     d48:	add	x0, x0, #0x110
     d4c:	blr	x2
     d50:	ldp	x29, x30, [sp], #16
     d54:	ret
     d58:	ret

0000000000000d5c <__do_global_dtors_aux>:
     d5c:	adrp	x0, 12000 <all_digits>
     d60:	ldrb	w0, [x0, #272]
     d64:	cbnz	w0, da0 <__do_global_dtors_aux+0x44>
     d68:	stp	x29, x30, [sp, #-16]!
     d6c:	mov	x29, sp
     d70:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     d74:	ldr	x0, [x0, #4016]
     d78:	cbz	x0, d88 <__do_global_dtors_aux+0x2c>
     d7c:	adrp	x0, 12000 <all_digits>
     d80:	ldr	x0, [x0, #168]
     d84:	bl	ba0 <__cxa_finalize@plt>
     d88:	bl	cc4 <deregister_tm_clones>
     d8c:	adrp	x0, 12000 <all_digits>
     d90:	mov	w1, #0x1                   	// #1
     d94:	strb	w1, [x0, #272]
     d98:	ldp	x29, x30, [sp], #16
     d9c:	ret
     da0:	ret

0000000000000da4 <frame_dummy>:
     da4:	stp	x29, x30, [sp, #-16]!
     da8:	mov	x29, sp
     dac:	bl	d08 <register_tm_clones>
     db0:	ldp	x29, x30, [sp], #16
     db4:	ret

0000000000000db8 <print_builtin>:
     db8:	stp	x29, x30, [sp, #-112]!
     dbc:	mov	x29, sp
     dc0:	stp	x19, x20, [sp, #16]
     dc4:	stp	x21, x22, [sp, #32]
     dc8:	stp	x23, x24, [sp, #48]
     dcc:	stp	x25, x26, [sp, #64]
     dd0:	stp	x27, x28, [sp, #80]
     dd4:	mov	x20, x0
     dd8:	bl	c60 <reset_internal_getopt@plt>
     ddc:	mov	x25, #0x0                   	// #0
     de0:	mov	w24, #0x1                   	// #1
     de4:	mov	w19, #0x0                   	// #0
     de8:	mov	w26, #0x0                   	// #0
     dec:	adrp	x21, 1000 <print_builtin+0x248>
     df0:	add	x21, x21, #0x110
     df4:	mov	w22, w24
     df8:	adrp	x23, 11000 <__FRAME_END__+0xfcc8>
     dfc:	ldr	x27, [x23, #4048]
     e00:	add	x28, sp, #0x68
     e04:	b	e94 <print_builtin+0xdc>
     e08:	cmn	w0, #0x63
     e0c:	b.ne	fac <print_builtin+0x1f4>  // b.any
     e10:	bl	be0 <builtin_help@plt>
     e14:	mov	w19, #0x102                 	// #258
     e18:	mov	w0, w19
     e1c:	ldp	x19, x20, [sp, #16]
     e20:	ldp	x21, x22, [sp, #32]
     e24:	ldp	x23, x24, [sp, #48]
     e28:	ldp	x25, x26, [sp, #64]
     e2c:	ldp	x27, x28, [sp, #80]
     e30:	ldp	x29, x30, [sp], #112
     e34:	ret
     e38:	cmp	w0, #0x73
     e3c:	b.eq	e94 <print_builtin+0xdc>  // b.none
     e40:	b.le	e80 <print_builtin+0xc8>
     e44:	cmp	w0, #0x75
     e48:	b.ne	fac <print_builtin+0x1f4>  // b.any
     e4c:	ldr	x0, [x27]
     e50:	bl	b60 <all_digits@plt>
     e54:	cbz	w0, f70 <print_builtin+0x1b8>
     e58:	ldr	x0, [x23, #4048]
     e5c:	mov	x1, x28
     e60:	ldr	x0, [x0]
     e64:	bl	c80 <legal_number@plt>
     e68:	cbz	w0, f70 <print_builtin+0x1b8>
     e6c:	ldr	x0, [sp, #104]
     e70:	cmp	x0, w0, sxtw
     e74:	b.ne	f70 <print_builtin+0x1b8>  // b.any
     e78:	mov	w24, w0
     e7c:	b	e94 <print_builtin+0xdc>
     e80:	cmp	w0, #0x70
     e84:	b.eq	e94 <print_builtin+0xdc>  // b.none
     e88:	cmp	w0, #0x72
     e8c:	b.ne	fac <print_builtin+0x1f4>  // b.any
     e90:	mov	w19, w22
     e94:	mov	x1, x21
     e98:	mov	x0, x20
     e9c:	bl	c50 <internal_getopt@plt>
     ea0:	cmn	w0, #0x1
     ea4:	b.eq	f04 <print_builtin+0x14c>  // b.none
     ea8:	cmp	w0, #0x6e
     eac:	b.eq	fb8 <print_builtin+0x200>  // b.none
     eb0:	b.gt	e38 <print_builtin+0x80>
     eb4:	cmp	w0, #0x52
     eb8:	b.eq	ed0 <print_builtin+0x118>  // b.none
     ebc:	cmp	w0, #0x66
     ec0:	b.ne	e08 <print_builtin+0x50>  // b.any
     ec4:	ldr	x0, [x23, #4048]
     ec8:	ldr	x25, [x0]
     ecc:	b	e94 <print_builtin+0xdc>
     ed0:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     ed4:	ldr	x0, [x0, #4024]
     ed8:	ldr	x1, [x0]
     edc:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     ee0:	ldr	x0, [x0, #4056]
     ee4:	str	x1, [x0]
     ee8:	mov	w19, #0x2                   	// #2
     eec:	cbz	x1, f04 <print_builtin+0x14c>
     ef0:	ldr	x0, [x1, #8]
     ef4:	ldr	x0, [x0]
     ef8:	ldrb	w2, [x0]
     efc:	cmp	w2, #0x2d
     f00:	b.eq	f44 <print_builtin+0x18c>  // b.none
     f04:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     f08:	ldr	x0, [x0, #4056]
     f0c:	ldr	x20, [x0]
     f10:	cmp	w24, #0x1
     f14:	b.ne	fc0 <print_builtin+0x208>  // b.any
     f18:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     f1c:	ldr	x0, [x0, #4032]
     f20:	ldr	x22, [x0]
     f24:	adrp	x0, 12000 <all_digits>
     f28:	str	x22, [x0, #280]
     f2c:	cbnz	x25, fdc <print_builtin+0x224>
     f30:	cbz	w19, 1060 <print_builtin+0x2a8>
     f34:	cbz	x20, 1034 <print_builtin+0x27c>
     f38:	adrp	x19, 12000 <all_digits>
     f3c:	mov	w21, #0x20                  	// #32
     f40:	b	101c <print_builtin+0x264>
     f44:	ldrb	w2, [x0, #1]
     f48:	cmp	w2, #0x6e
     f4c:	b.ne	f04 <print_builtin+0x14c>  // b.any
     f50:	ldrb	w0, [x0, #2]
     f54:	cbnz	w0, f04 <print_builtin+0x14c>
     f58:	ldr	x1, [x1]
     f5c:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     f60:	ldr	x0, [x0, #4056]
     f64:	str	x1, [x0]
     f68:	mov	w26, #0x1                   	// #1
     f6c:	b	f04 <print_builtin+0x14c>
     f70:	adrp	x0, 11000 <__FRAME_END__+0xfcc8>
     f74:	ldr	x0, [x0, #4024]
     f78:	ldr	x1, [x0]
     f7c:	mov	x0, x20
     f80:	ldr	x20, [x20]
     f84:	cbz	x20, f90 <print_builtin+0x1d8>
     f88:	cmp	x20, x1
     f8c:	b.ne	f7c <print_builtin+0x1c4>  // b.any
     f90:	adrp	x1, 11000 <__FRAME_END__+0xfcc8>
     f94:	ldr	x1, [x1, #4056]
     f98:	str	x0, [x1]
     f9c:	adrp	x1, 11000 <__FRAME_END__+0xfcc8>
     fa0:	ldr	x1, [x1, #4024]
     fa4:	str	x0, [x1]
     fa8:	b	f04 <print_builtin+0x14c>
     fac:	bl	c00 <builtin_usage@plt>
     fb0:	mov	w19, #0x102                 	// #258
     fb4:	b	e18 <print_builtin+0x60>
     fb8:	mov	w26, w22
     fbc:	b	e94 <print_builtin+0xdc>
     fc0:	mov	w0, w24
     fc4:	bl	b90 <dup@plt>
     fc8:	adrp	x1, 1000 <print_builtin+0x248>
     fcc:	add	x1, x1, #0x120
     fd0:	bl	bf0 <fdopen@plt>
     fd4:	mov	x22, x0
     fd8:	b	f24 <print_builtin+0x16c>
     fdc:	mov	x0, x25
     fe0:	bl	bc0 <make_word@plt>
     fe4:	mov	x1, x20
     fe8:	bl	ca0 <make_word_list@plt>
     fec:	mov	x20, x0
     ff0:	bl	c90 <printf_builtin@plt>
     ff4:	mov	w19, w0
     ff8:	str	xzr, [x20]
     ffc:	mov	x0, x20
    1000:	bl	c30 <dispose_words@plt>
    1004:	b	e18 <print_builtin+0x60>
    1008:	ldr	x1, [x19, #280]
    100c:	mov	w0, w21
    1010:	bl	bb0 <fputc@plt>
    1014:	ldr	x20, [x20]
    1018:	cbz	x20, 1034 <print_builtin+0x27c>
    101c:	ldr	x0, [x20, #8]
    1020:	ldr	x1, [x19, #280]
    1024:	ldr	x0, [x0]
    1028:	bl	b80 <fputs@plt>
    102c:	ldr	x0, [x20]
    1030:	cbnz	x0, 1008 <print_builtin+0x250>
    1034:	cbz	w26, 104c <print_builtin+0x294>
    1038:	adrp	x0, 12000 <all_digits>
    103c:	ldr	x0, [x0, #280]
    1040:	bl	c70 <fflush@plt>
    1044:	mov	w19, #0x0                   	// #0
    1048:	b	e18 <print_builtin+0x60>
    104c:	adrp	x0, 12000 <all_digits>
    1050:	ldr	x1, [x0, #280]
    1054:	mov	w0, #0xa                   	// #10
    1058:	bl	bb0 <fputc@plt>
    105c:	b	1038 <print_builtin+0x280>
    1060:	str	wzr, [sp, #100]
    1064:	cbz	x20, 10d4 <print_builtin+0x31c>
    1068:	add	x23, sp, #0x64
    106c:	mov	w25, #0x20                  	// #32
    1070:	b	1088 <print_builtin+0x2d0>
    1074:	mov	x1, x22
    1078:	mov	w0, w25
    107c:	bl	bb0 <fputc@plt>
    1080:	ldr	x20, [x20]
    1084:	cbz	x20, 10d4 <print_builtin+0x31c>
    1088:	ldr	x0, [x20, #8]
    108c:	ldr	x21, [x0]
    1090:	mov	x0, x21
    1094:	bl	b70 <strlen@plt>
    1098:	mov	x4, #0x0                   	// #0
    109c:	mov	x3, x23
    10a0:	mov	w2, #0x0                   	// #0
    10a4:	mov	w1, w0
    10a8:	mov	x0, x21
    10ac:	bl	c20 <ansicstr@plt>
    10b0:	mov	x21, x0
    10b4:	mov	x1, x22
    10b8:	bl	b80 <fputs@plt>
    10bc:	mov	x0, x21
    10c0:	bl	c40 <free@plt>
    10c4:	ldr	w0, [sp, #100]
    10c8:	cbnz	w0, 10e8 <print_builtin+0x330>
    10cc:	ldr	x0, [x20]
    10d0:	cbnz	x0, 1074 <print_builtin+0x2bc>
    10d4:	cbnz	w26, 10e8 <print_builtin+0x330>
    10d8:	adrp	x0, 12000 <all_digits>
    10dc:	ldr	x1, [x0, #280]
    10e0:	mov	w0, #0xa                   	// #10
    10e4:	bl	bb0 <fputc@plt>
    10e8:	cmp	w24, #0x1
    10ec:	b.eq	e18 <print_builtin+0x60>  // b.none
    10f0:	adrp	x0, 12000 <all_digits>
    10f4:	ldr	x0, [x0, #280]
    10f8:	bl	bd0 <fclose@plt>
    10fc:	b	e18 <print_builtin+0x60>

Disassembly of section .fini:

0000000000001100 <_fini>:
    1100:	stp	x29, x30, [sp, #-16]!
    1104:	mov	x29, sp
    1108:	ldp	x29, x30, [sp], #16
    110c:	ret
