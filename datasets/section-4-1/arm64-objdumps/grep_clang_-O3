
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//grep_clang_-O3:     file format elf64-littleaarch64


Disassembly of section .init:

00000000004021c8 <.init>:
  4021c8:	stp	x29, x30, [sp, #-16]!
  4021cc:	mov	x29, sp
  4021d0:	bl	4028d0 <wcrtomb@plt+0x60>
  4021d4:	ldp	x29, x30, [sp], #16
  4021d8:	ret

Disassembly of section .plt:

00000000004021e0 <mbrtowc@plt-0x20>:
  4021e0:	stp	x16, x30, [sp, #-16]!
  4021e4:	adrp	x16, 43e000 <_obstack_memory_used@@Base+0x23e6c>
  4021e8:	ldr	x17, [x16, #4088]
  4021ec:	add	x16, x16, #0xff8
  4021f0:	br	x17
  4021f4:	nop
  4021f8:	nop
  4021fc:	nop

0000000000402200 <mbrtowc@plt>:
  402200:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402204:	ldr	x17, [x16]
  402208:	add	x16, x16, #0x0
  40220c:	br	x17

0000000000402210 <memcpy@plt>:
  402210:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402214:	ldr	x17, [x16, #8]
  402218:	add	x16, x16, #0x8
  40221c:	br	x17

0000000000402220 <sigaltstack@plt>:
  402220:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402224:	ldr	x17, [x16, #16]
  402228:	add	x16, x16, #0x10
  40222c:	br	x17

0000000000402230 <memmove@plt>:
  402230:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402234:	ldr	x17, [x16, #24]
  402238:	add	x16, x16, #0x18
  40223c:	br	x17

0000000000402240 <isalpha@plt>:
  402240:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402244:	ldr	x17, [x16, #32]
  402248:	add	x16, x16, #0x20
  40224c:	br	x17

0000000000402250 <_exit@plt>:
  402250:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402254:	ldr	x17, [x16, #40]
  402258:	add	x16, x16, #0x28
  40225c:	br	x17

0000000000402260 <fwrite_unlocked@plt>:
  402260:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402264:	ldr	x17, [x16, #48]
  402268:	add	x16, x16, #0x30
  40226c:	br	x17

0000000000402270 <strlen@plt>:
  402270:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402274:	ldr	x17, [x16, #56]
  402278:	add	x16, x16, #0x38
  40227c:	br	x17

0000000000402280 <fputs@plt>:
  402280:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402284:	ldr	x17, [x16, #64]
  402288:	add	x16, x16, #0x40
  40228c:	br	x17

0000000000402290 <exit@plt>:
  402290:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402294:	ldr	x17, [x16, #72]
  402298:	add	x16, x16, #0x48
  40229c:	br	x17

00000000004022a0 <error@plt>:
  4022a0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4022a4:	ldr	x17, [x16, #80]
  4022a8:	add	x16, x16, #0x50
  4022ac:	br	x17

00000000004022b0 <fchdir@plt>:
  4022b0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4022b4:	ldr	x17, [x16, #88]
  4022b8:	add	x16, x16, #0x58
  4022bc:	br	x17

00000000004022c0 <wctype@plt>:
  4022c0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4022c4:	ldr	x17, [x16, #96]
  4022c8:	add	x16, x16, #0x60
  4022cc:	br	x17

00000000004022d0 <__cxa_atexit@plt>:
  4022d0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4022d4:	ldr	x17, [x16, #104]
  4022d8:	add	x16, x16, #0x68
  4022dc:	br	x17

00000000004022e0 <iswcntrl@plt>:
  4022e0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4022e4:	ldr	x17, [x16, #112]
  4022e8:	add	x16, x16, #0x70
  4022ec:	br	x17

00000000004022f0 <qsort@plt>:
  4022f0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4022f4:	ldr	x17, [x16, #120]
  4022f8:	add	x16, x16, #0x78
  4022fc:	br	x17

0000000000402300 <isblank@plt>:
  402300:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402304:	ldr	x17, [x16, #128]
  402308:	add	x16, x16, #0x80
  40230c:	br	x17

0000000000402310 <lseek@plt>:
  402310:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402314:	ldr	x17, [x16, #136]
  402318:	add	x16, x16, #0x88
  40231c:	br	x17

0000000000402320 <__fpending@plt>:
  402320:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402324:	ldr	x17, [x16, #144]
  402328:	add	x16, x16, #0x90
  40232c:	br	x17

0000000000402330 <__ctype_tolower_loc@plt>:
  402330:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402334:	ldr	x17, [x16, #152]
  402338:	add	x16, x16, #0x98
  40233c:	br	x17

0000000000402340 <fclose@plt>:
  402340:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402344:	ldr	x17, [x16, #160]
  402348:	add	x16, x16, #0xa0
  40234c:	br	x17

0000000000402350 <wctob@plt>:
  402350:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402354:	ldr	x17, [x16, #168]
  402358:	add	x16, x16, #0xa8
  40235c:	br	x17

0000000000402360 <nl_langinfo@plt>:
  402360:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402364:	ldr	x17, [x16, #176]
  402368:	add	x16, x16, #0xb0
  40236c:	br	x17

0000000000402370 <fopen@plt>:
  402370:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402374:	ldr	x17, [x16, #184]
  402378:	add	x16, x16, #0xb8
  40237c:	br	x17

0000000000402380 <isspace@plt>:
  402380:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402384:	ldr	x17, [x16, #192]
  402388:	add	x16, x16, #0xc0
  40238c:	br	x17

0000000000402390 <iswctype@plt>:
  402390:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402394:	ldr	x17, [x16, #200]
  402398:	add	x16, x16, #0xc8
  40239c:	br	x17

00000000004023a0 <malloc@plt>:
  4023a0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4023a4:	ldr	x17, [x16, #208]
  4023a8:	add	x16, x16, #0xd0
  4023ac:	br	x17

00000000004023b0 <wcwidth@plt>:
  4023b0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4023b4:	ldr	x17, [x16, #216]
  4023b8:	add	x16, x16, #0xd8
  4023bc:	br	x17

00000000004023c0 <open@plt>:
  4023c0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4023c4:	ldr	x17, [x16, #224]
  4023c8:	add	x16, x16, #0xe0
  4023cc:	br	x17

00000000004023d0 <splice@plt>:
  4023d0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4023d4:	ldr	x17, [x16, #232]
  4023d8:	add	x16, x16, #0xe8
  4023dc:	br	x17

00000000004023e0 <islower@plt>:
  4023e0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4023e4:	ldr	x17, [x16, #240]
  4023e8:	add	x16, x16, #0xf0
  4023ec:	br	x17

00000000004023f0 <isxdigit@plt>:
  4023f0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4023f4:	ldr	x17, [x16, #248]
  4023f8:	add	x16, x16, #0xf8
  4023fc:	br	x17

0000000000402400 <__strtol_internal@plt>:
  402400:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402404:	ldr	x17, [x16, #256]
  402408:	add	x16, x16, #0x100
  40240c:	br	x17

0000000000402410 <sigemptyset@plt>:
  402410:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402414:	ldr	x17, [x16, #264]
  402418:	add	x16, x16, #0x108
  40241c:	br	x17

0000000000402420 <strncmp@plt>:
  402420:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402424:	ldr	x17, [x16, #272]
  402428:	add	x16, x16, #0x110
  40242c:	br	x17

0000000000402430 <bindtextdomain@plt>:
  402430:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402434:	ldr	x17, [x16, #280]
  402438:	add	x16, x16, #0x118
  40243c:	br	x17

0000000000402440 <isdigit@plt>:
  402440:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402444:	ldr	x17, [x16, #288]
  402448:	add	x16, x16, #0x120
  40244c:	br	x17

0000000000402450 <__libc_start_main@plt>:
  402450:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402454:	ldr	x17, [x16, #296]
  402458:	add	x16, x16, #0x128
  40245c:	br	x17

0000000000402460 <fstatfs@plt>:
  402460:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402464:	ldr	x17, [x16, #304]
  402468:	add	x16, x16, #0x130
  40246c:	br	x17

0000000000402470 <memset@plt>:
  402470:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402474:	ldr	x17, [x16, #312]
  402478:	add	x16, x16, #0x138
  40247c:	br	x17

0000000000402480 <calloc@plt>:
  402480:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402484:	ldr	x17, [x16, #320]
  402488:	add	x16, x16, #0x140
  40248c:	br	x17

0000000000402490 <bcmp@plt>:
  402490:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402494:	ldr	x17, [x16, #328]
  402498:	add	x16, x16, #0x148
  40249c:	br	x17

00000000004024a0 <isupper@plt>:
  4024a0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4024a4:	ldr	x17, [x16, #336]
  4024a8:	add	x16, x16, #0x150
  4024ac:	br	x17

00000000004024b0 <readdir@plt>:
  4024b0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4024b4:	ldr	x17, [x16, #344]
  4024b8:	add	x16, x16, #0x158
  4024bc:	br	x17

00000000004024c0 <realloc@plt>:
  4024c0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4024c4:	ldr	x17, [x16, #352]
  4024c8:	add	x16, x16, #0x160
  4024cc:	br	x17

00000000004024d0 <__ctype_toupper_loc@plt>:
  4024d0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4024d4:	ldr	x17, [x16, #360]
  4024d8:	add	x16, x16, #0x168
  4024dc:	br	x17

00000000004024e0 <closedir@plt>:
  4024e0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4024e4:	ldr	x17, [x16, #368]
  4024e8:	add	x16, x16, #0x170
  4024ec:	br	x17

00000000004024f0 <close@plt>:
  4024f0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4024f4:	ldr	x17, [x16, #376]
  4024f8:	add	x16, x16, #0x178
  4024fc:	br	x17

0000000000402500 <sigaction@plt>:
  402500:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402504:	ldr	x17, [x16, #384]
  402508:	add	x16, x16, #0x180
  40250c:	br	x17

0000000000402510 <strrchr@plt>:
  402510:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402514:	ldr	x17, [x16, #392]
  402518:	add	x16, x16, #0x188
  40251c:	br	x17

0000000000402520 <__gmon_start__@plt>:
  402520:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402524:	ldr	x17, [x16, #400]
  402528:	add	x16, x16, #0x190
  40252c:	br	x17

0000000000402530 <fdopendir@plt>:
  402530:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402534:	ldr	x17, [x16, #408]
  402538:	add	x16, x16, #0x198
  40253c:	br	x17

0000000000402540 <write@plt>:
  402540:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402544:	ldr	x17, [x16, #416]
  402548:	add	x16, x16, #0x1a0
  40254c:	br	x17

0000000000402550 <btowc@plt>:
  402550:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402554:	ldr	x17, [x16, #424]
  402558:	add	x16, x16, #0x1a8
  40255c:	br	x17

0000000000402560 <abort@plt>:
  402560:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402564:	ldr	x17, [x16, #432]
  402568:	add	x16, x16, #0x1b0
  40256c:	br	x17

0000000000402570 <iscntrl@plt>:
  402570:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402574:	ldr	x17, [x16, #440]
  402578:	add	x16, x16, #0x1b8
  40257c:	br	x17

0000000000402580 <mbsinit@plt>:
  402580:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402584:	ldr	x17, [x16, #448]
  402588:	add	x16, x16, #0x1c0
  40258c:	br	x17

0000000000402590 <__overflow@plt>:
  402590:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402594:	ldr	x17, [x16, #456]
  402598:	add	x16, x16, #0x1c8
  40259c:	br	x17

00000000004025a0 <ispunct@plt>:
  4025a0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4025a4:	ldr	x17, [x16, #464]
  4025a8:	add	x16, x16, #0x1d0
  4025ac:	br	x17

00000000004025b0 <puts@plt>:
  4025b0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4025b4:	ldr	x17, [x16, #472]
  4025b8:	add	x16, x16, #0x1d8
  4025bc:	br	x17

00000000004025c0 <fread_unlocked@plt>:
  4025c0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4025c4:	ldr	x17, [x16, #480]
  4025c8:	add	x16, x16, #0x1e0
  4025cc:	br	x17

00000000004025d0 <memcmp@plt>:
  4025d0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4025d4:	ldr	x17, [x16, #488]
  4025d8:	add	x16, x16, #0x1e8
  4025dc:	br	x17

00000000004025e0 <textdomain@plt>:
  4025e0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4025e4:	ldr	x17, [x16, #496]
  4025e8:	add	x16, x16, #0x1f0
  4025ec:	br	x17

00000000004025f0 <getopt_long@plt>:
  4025f0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4025f4:	ldr	x17, [x16, #504]
  4025f8:	add	x16, x16, #0x1f8
  4025fc:	br	x17

0000000000402600 <strcmp@plt>:
  402600:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402604:	ldr	x17, [x16, #512]
  402608:	add	x16, x16, #0x200
  40260c:	br	x17

0000000000402610 <__ctype_b_loc@plt>:
  402610:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402614:	ldr	x17, [x16, #520]
  402618:	add	x16, x16, #0x208
  40261c:	br	x17

0000000000402620 <free@plt>:
  402620:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402624:	ldr	x17, [x16, #528]
  402628:	add	x16, x16, #0x210
  40262c:	br	x17

0000000000402630 <__ctype_get_mb_cur_max@plt>:
  402630:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402634:	ldr	x17, [x16, #536]
  402638:	add	x16, x16, #0x218
  40263c:	br	x17

0000000000402640 <strchr@plt>:
  402640:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402644:	ldr	x17, [x16, #544]
  402648:	add	x16, x16, #0x220
  40264c:	br	x17

0000000000402650 <memrchr@plt>:
  402650:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402654:	ldr	x17, [x16, #552]
  402658:	add	x16, x16, #0x228
  40265c:	br	x17

0000000000402660 <fnmatch@plt>:
  402660:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402664:	ldr	x17, [x16, #560]
  402668:	add	x16, x16, #0x230
  40266c:	br	x17

0000000000402670 <fflush_unlocked@plt>:
  402670:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402674:	ldr	x17, [x16, #568]
  402678:	add	x16, x16, #0x238
  40267c:	br	x17

0000000000402680 <fcntl@plt>:
  402680:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402684:	ldr	x17, [x16, #576]
  402688:	add	x16, x16, #0x240
  40268c:	br	x17

0000000000402690 <strcpy@plt>:
  402690:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402694:	ldr	x17, [x16, #584]
  402698:	add	x16, x16, #0x248
  40269c:	br	x17

00000000004026a0 <dirfd@plt>:
  4026a0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4026a4:	ldr	x17, [x16, #592]
  4026a8:	add	x16, x16, #0x250
  4026ac:	br	x17

00000000004026b0 <__lxstat@plt>:
  4026b0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4026b4:	ldr	x17, [x16, #600]
  4026b8:	add	x16, x16, #0x258
  4026bc:	br	x17

00000000004026c0 <read@plt>:
  4026c0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4026c4:	ldr	x17, [x16, #608]
  4026c8:	add	x16, x16, #0x260
  4026cc:	br	x17

00000000004026d0 <memchr@plt>:
  4026d0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4026d4:	ldr	x17, [x16, #616]
  4026d8:	add	x16, x16, #0x268
  4026dc:	br	x17

00000000004026e0 <isatty@plt>:
  4026e0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4026e4:	ldr	x17, [x16, #624]
  4026e8:	add	x16, x16, #0x270
  4026ec:	br	x17

00000000004026f0 <sysconf@plt>:
  4026f0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4026f4:	ldr	x17, [x16, #632]
  4026f8:	add	x16, x16, #0x278
  4026fc:	br	x17

0000000000402700 <isgraph@plt>:
  402700:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402704:	ldr	x17, [x16, #640]
  402708:	add	x16, x16, #0x280
  40270c:	br	x17

0000000000402710 <iswalnum@plt>:
  402710:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402714:	ldr	x17, [x16, #648]
  402718:	add	x16, x16, #0x288
  40271c:	br	x17

0000000000402720 <__fxstat@plt>:
  402720:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402724:	ldr	x17, [x16, #656]
  402728:	add	x16, x16, #0x290
  40272c:	br	x17

0000000000402730 <strstr@plt>:
  402730:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402734:	ldr	x17, [x16, #664]
  402738:	add	x16, x16, #0x298
  40273c:	br	x17

0000000000402740 <dcgettext@plt>:
  402740:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402744:	ldr	x17, [x16, #672]
  402748:	add	x16, x16, #0x2a0
  40274c:	br	x17

0000000000402750 <fputs_unlocked@plt>:
  402750:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402754:	ldr	x17, [x16, #680]
  402758:	add	x16, x16, #0x2a8
  40275c:	br	x17

0000000000402760 <strcoll@plt>:
  402760:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402764:	ldr	x17, [x16, #688]
  402768:	add	x16, x16, #0x2b0
  40276c:	br	x17

0000000000402770 <isalnum@plt>:
  402770:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402774:	ldr	x17, [x16, #696]
  402778:	add	x16, x16, #0x2b8
  40277c:	br	x17

0000000000402780 <towupper@plt>:
  402780:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402784:	ldr	x17, [x16, #704]
  402788:	add	x16, x16, #0x2c0
  40278c:	br	x17

0000000000402790 <iswprint@plt>:
  402790:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402794:	ldr	x17, [x16, #712]
  402798:	add	x16, x16, #0x2c8
  40279c:	br	x17

00000000004027a0 <vfprintf@plt>:
  4027a0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4027a4:	ldr	x17, [x16, #720]
  4027a8:	add	x16, x16, #0x2d0
  4027ac:	br	x17

00000000004027b0 <openat@plt>:
  4027b0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4027b4:	ldr	x17, [x16, #728]
  4027b8:	add	x16, x16, #0x2d8
  4027bc:	br	x17

00000000004027c0 <printf@plt>:
  4027c0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4027c4:	ldr	x17, [x16, #736]
  4027c8:	add	x16, x16, #0x2e0
  4027cc:	br	x17

00000000004027d0 <__assert_fail@plt>:
  4027d0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4027d4:	ldr	x17, [x16, #744]
  4027d8:	add	x16, x16, #0x2e8
  4027dc:	br	x17

00000000004027e0 <__errno_location@plt>:
  4027e0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4027e4:	ldr	x17, [x16, #752]
  4027e8:	add	x16, x16, #0x2f0
  4027ec:	br	x17

00000000004027f0 <getenv@plt>:
  4027f0:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  4027f4:	ldr	x17, [x16, #760]
  4027f8:	add	x16, x16, #0x2f8
  4027fc:	br	x17

0000000000402800 <__xstat@plt>:
  402800:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402804:	ldr	x17, [x16, #768]
  402808:	add	x16, x16, #0x300
  40280c:	br	x17

0000000000402810 <towlower@plt>:
  402810:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402814:	ldr	x17, [x16, #776]
  402818:	add	x16, x16, #0x308
  40281c:	br	x17

0000000000402820 <fprintf@plt>:
  402820:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402824:	ldr	x17, [x16, #784]
  402828:	add	x16, x16, #0x310
  40282c:	br	x17

0000000000402830 <__uflow@plt>:
  402830:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402834:	ldr	x17, [x16, #792]
  402838:	add	x16, x16, #0x318
  40283c:	br	x17

0000000000402840 <isprint@plt>:
  402840:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402844:	ldr	x17, [x16, #800]
  402848:	add	x16, x16, #0x320
  40284c:	br	x17

0000000000402850 <setlocale@plt>:
  402850:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402854:	ldr	x17, [x16, #808]
  402858:	add	x16, x16, #0x328
  40285c:	br	x17

0000000000402860 <__fxstatat@plt>:
  402860:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402864:	ldr	x17, [x16, #816]
  402868:	add	x16, x16, #0x330
  40286c:	br	x17

0000000000402870 <wcrtomb@plt>:
  402870:	adrp	x16, 43f000 <mbrtowc@GLIBC_2.17>
  402874:	ldr	x17, [x16, #824]
  402878:	add	x16, x16, #0x338
  40287c:	br	x17

Disassembly of section .text:

0000000000402880 <_obstack_begin@@Base-0x17594>:
  402880:	mov	x29, #0x0                   	// #0
  402884:	mov	x30, #0x0                   	// #0
  402888:	mov	x5, x0
  40288c:	ldr	x1, [sp]
  402890:	add	x2, sp, #0x8
  402894:	mov	x6, sp
  402898:	movz	x0, #0x0, lsl #48
  40289c:	movk	x0, #0x0, lsl #32
  4028a0:	movk	x0, #0x40, lsl #16
  4028a4:	movk	x0, #0x3984
  4028a8:	movz	x3, #0x0, lsl #48
  4028ac:	movk	x3, #0x0, lsl #32
  4028b0:	movk	x3, #0x42, lsl #16
  4028b4:	movk	x3, #0xb220
  4028b8:	movz	x4, #0x0, lsl #48
  4028bc:	movk	x4, #0x0, lsl #32
  4028c0:	movk	x4, #0x42, lsl #16
  4028c4:	movk	x4, #0xb2a0
  4028c8:	bl	402450 <__libc_start_main@plt>
  4028cc:	bl	402560 <abort@plt>
  4028d0:	adrp	x0, 43e000 <_obstack_memory_used@@Base+0x23e6c>
  4028d4:	ldr	x0, [x0, #4064]
  4028d8:	cbz	x0, 4028e0 <wcrtomb@plt+0x70>
  4028dc:	b	402520 <__gmon_start__@plt>
  4028e0:	ret
  4028e4:	nop
  4028e8:	adrp	x0, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4028ec:	add	x0, x0, #0x420
  4028f0:	adrp	x1, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4028f4:	add	x1, x1, #0x420
  4028f8:	cmp	x1, x0
  4028fc:	b.eq	402914 <wcrtomb@plt+0xa4>  // b.none
  402900:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402904:	ldr	x1, [x1, #728]
  402908:	cbz	x1, 402914 <wcrtomb@plt+0xa4>
  40290c:	mov	x16, x1
  402910:	br	x16
  402914:	ret
  402918:	adrp	x0, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40291c:	add	x0, x0, #0x420
  402920:	adrp	x1, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  402924:	add	x1, x1, #0x420
  402928:	sub	x1, x1, x0
  40292c:	lsr	x2, x1, #63
  402930:	add	x1, x2, x1, asr #3
  402934:	cmp	xzr, x1, asr #1
  402938:	asr	x1, x1, #1
  40293c:	b.eq	402954 <wcrtomb@plt+0xe4>  // b.none
  402940:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402944:	ldr	x2, [x2, #736]
  402948:	cbz	x2, 402954 <wcrtomb@plt+0xe4>
  40294c:	mov	x16, x2
  402950:	br	x16
  402954:	ret
  402958:	stp	x29, x30, [sp, #-32]!
  40295c:	mov	x29, sp
  402960:	str	x19, [sp, #16]
  402964:	adrp	x19, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  402968:	ldrb	w0, [x19, #1104]
  40296c:	cbnz	w0, 40297c <wcrtomb@plt+0x10c>
  402970:	bl	4028e8 <wcrtomb@plt+0x78>
  402974:	mov	w0, #0x1                   	// #1
  402978:	strb	w0, [x19, #1104]
  40297c:	ldr	x19, [sp, #16]
  402980:	ldp	x29, x30, [sp], #32
  402984:	ret
  402988:	b	402918 <wcrtomb@plt+0xa8>
  40298c:	stp	x29, x30, [sp, #-16]!
  402990:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  402994:	mov	x3, x0
  402998:	add	x2, x2, #0x3d7
  40299c:	mov	w0, #0x2                   	// #2
  4029a0:	mov	w1, wzr
  4029a4:	mov	x29, sp
  4029a8:	bl	4022a0 <error@plt>
  4029ac:	stp	x29, x30, [sp, #-32]!
  4029b0:	str	x19, [sp, #16]
  4029b4:	mov	x19, x0
  4029b8:	adrp	x0, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  4029bc:	add	x0, x0, #0x2e8
  4029c0:	mov	x29, sp
  4029c4:	bl	4027f0 <getenv@plt>
  4029c8:	cbz	x0, 4029d8 <wcrtomb@plt+0x168>
  4029cc:	ldr	x19, [sp, #16]
  4029d0:	ldp	x29, x30, [sp], #32
  4029d4:	ret
  4029d8:	mov	x0, x19
  4029dc:	bl	40298c <wcrtomb@plt+0x11c>
  4029e0:	sub	sp, sp, #0x130
  4029e4:	stp	x24, x23, [sp, #256]
  4029e8:	stp	x22, x21, [sp, #272]
  4029ec:	mov	x22, x1
  4029f0:	mov	x23, x0
  4029f4:	mov	w0, #0x1                   	// #1
  4029f8:	mov	w1, #0x48                  	// #72
  4029fc:	stp	x29, x30, [sp, #208]
  402a00:	stp	x28, x27, [sp, #224]
  402a04:	stp	x26, x25, [sp, #240]
  402a08:	stp	x20, x19, [sp, #288]
  402a0c:	add	x29, sp, #0xd0
  402a10:	mov	x21, x2
  402a14:	mov	w28, #0x1                   	// #1
  402a18:	bl	4174d4 <wcrtomb@plt+0x14c64>
  402a1c:	mov	x19, x0
  402a20:	bl	40e2f4 <wcrtomb@plt+0xba84>
  402a24:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402a28:	ldrb	w8, [x8, #3470]
  402a2c:	orr	x9, x21, #0x400000
  402a30:	mov	x20, x0
  402a34:	str	x0, [x19, #8]
  402a38:	cmp	w8, #0x0
  402a3c:	csel	x24, x21, x9, eq  // eq = none
  402a40:	mov	x0, x24
  402a44:	bl	41b51c <_obstack_memory_used@@Base+0x1388>
  402a48:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402a4c:	ldrb	w8, [x8, #2180]
  402a50:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402a54:	add	x21, x21, #0x888
  402a58:	mov	x0, x20
  402a5c:	cmp	w8, #0x0
  402a60:	cset	w8, eq  // eq = none
  402a64:	lsl	w3, w8, #1
  402a68:	mov	x1, x21
  402a6c:	mov	x2, x24
  402a70:	str	x20, [sp, #24]
  402a74:	str	x24, [sp]
  402a78:	bl	40e2fc <wcrtomb@plt+0xba8c>
  402a7c:	ldrb	w8, [x21]
  402a80:	ldrb	w9, [x21, #2]
  402a84:	mov	w0, #0x40                  	// #64
  402a88:	str	x22, [sp, #16]
  402a8c:	eor	w8, w8, #0x1
  402a90:	orr	w20, w8, w9
  402a94:	add	x8, x23, x22
  402a98:	str	x8, [sp, #72]
  402a9c:	bl	417290 <wcrtomb@plt+0x14a20>
  402aa0:	cmp	w20, #0x0
  402aa4:	mov	w8, #0x5c                  	// #92
  402aa8:	mov	w9, #0x100                 	// #256
  402aac:	mov	x26, #0x5555555555555555    	// #6148914691236517205
  402ab0:	mov	x27, xzr
  402ab4:	add	x25, x0, #0x40
  402ab8:	csel	w24, w9, w8, eq  // eq = none
  402abc:	movk	x26, #0x155, lsl #48
  402ac0:	mov	x22, x23
  402ac4:	str	xzr, [sp, #88]
  402ac8:	stp	xzr, xzr, [x29, #-96]
  402acc:	stp	xzr, xzr, [sp, #32]
  402ad0:	str	wzr, [sp, #52]
  402ad4:	stp	x25, xzr, [x19, #16]
  402ad8:	str	x25, [sp, #96]
  402adc:	str	x23, [sp, #56]
  402ae0:	str	x23, [sp, #8]
  402ae4:	str	w24, [sp, #68]
  402ae8:	b	402b08 <wcrtomb@plt+0x298>
  402aec:	ldr	x8, [sp, #80]
  402af0:	str	x20, [x19, #24]
  402af4:	str	x20, [sp, #88]
  402af8:	stur	x20, [x29, #-96]
  402afc:	str	x8, [sp, #56]
  402b00:	ldr	w24, [sp, #68]
  402b04:	cbz	x23, 402d70 <wcrtomb@plt+0x500>
  402b08:	ldr	x8, [sp, #72]
  402b0c:	mov	w1, #0xa                   	// #10
  402b10:	mov	x0, x22
  402b14:	str	x27, [sp, #104]
  402b18:	sub	x21, x8, x22
  402b1c:	mov	x2, x21
  402b20:	bl	4026d0 <memchr@plt>
  402b24:	sub	x8, x0, x22
  402b28:	cmp	x0, #0x0
  402b2c:	csel	x21, x21, x8, eq  // eq = none
  402b30:	mov	x23, x0
  402b34:	csinc	x8, xzr, x0, eq  // eq = none
  402b38:	subs	x27, x21, #0x1
  402b3c:	str	x8, [sp, #80]
  402b40:	b.lt	402b9c <wcrtomb@plt+0x32c>  // b.tstop
  402b44:	mov	w1, #0x5c                  	// #92
  402b48:	mov	x0, x22
  402b4c:	mov	x2, x27
  402b50:	bl	4026d0 <memchr@plt>
  402b54:	cbz	x0, 402b9c <wcrtomb@plt+0x32c>
  402b58:	add	x20, x22, x27
  402b5c:	b	402b74 <wcrtomb@plt+0x304>
  402b60:	add	x0, x0, #0x1
  402b64:	sub	x2, x20, x0
  402b68:	mov	w1, #0x5c                  	// #92
  402b6c:	bl	4026d0 <memchr@plt>
  402b70:	cbz	x0, 402b9c <wcrtomb@plt+0x32c>
  402b74:	mov	x8, x0
  402b78:	ldrb	w9, [x8, #1]!
  402b7c:	sub	w10, w9, #0x31
  402b80:	cmp	w10, #0x9
  402b84:	b.cc	402bb8 <wcrtomb@plt+0x348>  // b.lo, b.ul, b.last
  402b88:	cmp	w24, w9
  402b8c:	b.ne	402b60 <wcrtomb@plt+0x2f0>  // b.any
  402b90:	cmp	x8, x20
  402b94:	mov	x0, x8
  402b98:	b.ne	402b60 <wcrtomb@plt+0x2f0>  // b.any
  402b9c:	mov	w24, wzr
  402ba0:	ldur	x8, [x29, #-96]
  402ba4:	add	x20, x8, #0x1
  402ba8:	cmp	x28, x20
  402bac:	b.ls	402c44 <wcrtomb@plt+0x3d4>  // b.plast
  402bb0:	ldr	x10, [sp, #96]
  402bb4:	b	402c80 <wcrtomb@plt+0x410>
  402bb8:	ldr	x9, [sp, #56]
  402bbc:	cmp	x9, x22
  402bc0:	b.cs	402bf8 <wcrtomb@plt+0x388>  // b.hs, b.nlast
  402bc4:	sub	x27, x22, x9
  402bc8:	ldr	x9, [sp, #40]
  402bcc:	ldur	x8, [x29, #-88]
  402bd0:	add	x20, x27, x9
  402bd4:	cmp	x8, x20
  402bd8:	b.cs	402c10 <wcrtomb@plt+0x3a0>  // b.hs, b.nlast
  402bdc:	ldr	x0, [sp, #32]
  402be0:	sub	x1, x29, #0x58
  402be4:	bl	417428 <wcrtomb@plt+0x14bb8>
  402be8:	ldur	x8, [x29, #-88]
  402bec:	cmp	x8, x20
  402bf0:	b.cc	402be0 <wcrtomb@plt+0x370>  // b.lo, b.ul, b.last
  402bf4:	b	402c14 <wcrtomb@plt+0x3a4>
  402bf8:	mov	w24, #0x1                   	// #1
  402bfc:	ldur	x8, [x29, #-96]
  402c00:	add	x20, x8, #0x1
  402c04:	cmp	x28, x20
  402c08:	b.hi	402bb0 <wcrtomb@plt+0x340>  // b.pmore
  402c0c:	b	402c44 <wcrtomb@plt+0x3d4>
  402c10:	ldr	x0, [sp, #32]
  402c14:	ldr	x8, [sp, #40]
  402c18:	ldr	x1, [sp, #56]
  402c1c:	str	x0, [sp, #32]
  402c20:	mov	x2, x27
  402c24:	add	x0, x0, x8
  402c28:	bl	402210 <memcpy@plt>
  402c2c:	mov	w24, #0x1                   	// #1
  402c30:	str	x20, [sp, #40]
  402c34:	ldur	x8, [x29, #-96]
  402c38:	add	x20, x8, #0x1
  402c3c:	cmp	x28, x20
  402c40:	b.hi	402bb0 <wcrtomb@plt+0x340>  // b.pmore
  402c44:	ldr	x8, [sp, #88]
  402c48:	add	x20, x8, #0x1
  402c4c:	cmp	x28, x26
  402c50:	b.cs	40303c <wcrtomb@plt+0x7cc>  // b.hs, b.nlast
  402c54:	add	x8, x28, x28, lsr #1
  402c58:	add	x28, x8, #0x1
  402c5c:	sub	x0, x25, #0x40
  402c60:	lsl	x1, x28, #6
  402c64:	bl	417310 <wcrtomb@plt+0x14aa0>
  402c68:	add	x25, x0, #0x40
  402c6c:	cmp	x28, x20
  402c70:	str	x25, [x19, #16]
  402c74:	b.ls	402c4c <wcrtomb@plt+0x3dc>  // b.plast
  402c78:	ldr	x8, [sp, #88]
  402c7c:	mov	x10, x25
  402c80:	stur	x8, [x29, #-96]
  402c84:	add	x8, x10, x8, lsl #6
  402c88:	cmp	w24, #0x0
  402c8c:	sub	x9, x29, #0x48
  402c90:	csel	x27, x8, x9, ne  // ne = any
  402c94:	stp	xzr, xzr, [x27]
  402c98:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402c9c:	ldrb	w8, [x8, #3470]
  402ca0:	eor	w9, w24, #0x1
  402ca4:	mov	x0, xzr
  402ca8:	csel	x25, x10, x25, ne  // ne = any
  402cac:	orr	w8, w8, w9
  402cb0:	str	x10, [sp, #96]
  402cb4:	cbnz	w8, 402cc0 <wcrtomb@plt+0x450>
  402cb8:	mov	w0, #0x100                 	// #256
  402cbc:	bl	417290 <wcrtomb@plt+0x14a20>
  402cc0:	stp	x0, xzr, [x27, #32]
  402cc4:	mov	x0, x22
  402cc8:	mov	x1, x21
  402ccc:	mov	x2, x27
  402cd0:	bl	41a204 <_obstack_memory_used@@Base+0x70>
  402cd4:	cbz	x0, 402d30 <wcrtomb@plt+0x4c0>
  402cd8:	ldr	x27, [sp, #104]
  402cdc:	mov	x21, x0
  402ce0:	sub	x1, x29, #0x50
  402ce4:	stur	x27, [x29, #-80]
  402ce8:	add	x27, x27, #0x1
  402cec:	mov	x0, x27
  402cf0:	bl	4035d8 <wcrtomb@plt+0xd68>
  402cf4:	ldrb	w8, [x0]
  402cf8:	cbz	w8, 402d44 <wcrtomb@plt+0x4d4>
  402cfc:	ldur	x4, [x29, #-80]
  402d00:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402d04:	mov	x3, x0
  402d08:	mov	w0, wzr
  402d0c:	mov	w1, wzr
  402d10:	add	x2, x2, #0x2f8
  402d14:	mov	x5, x21
  402d18:	bl	4022a0 <error@plt>
  402d1c:	mov	w8, #0x1                   	// #1
  402d20:	str	w8, [sp, #52]
  402d24:	add	x22, x23, #0x1
  402d28:	cbz	w24, 402b00 <wcrtomb@plt+0x290>
  402d2c:	b	402aec <wcrtomb@plt+0x27c>
  402d30:	ldr	x27, [sp, #104]
  402d34:	add	x27, x27, #0x1
  402d38:	add	x22, x23, #0x1
  402d3c:	cbnz	w24, 402aec <wcrtomb@plt+0x27c>
  402d40:	b	402b00 <wcrtomb@plt+0x290>
  402d44:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  402d48:	mov	w0, wzr
  402d4c:	mov	w1, wzr
  402d50:	add	x2, x2, #0x3d7
  402d54:	mov	x3, x21
  402d58:	bl	4022a0 <error@plt>
  402d5c:	mov	w8, #0x1                   	// #1
  402d60:	str	w8, [sp, #52]
  402d64:	add	x22, x23, #0x1
  402d68:	cbz	w24, 402b00 <wcrtomb@plt+0x290>
  402d6c:	b	402aec <wcrtomb@plt+0x27c>
  402d70:	ldr	w8, [sp, #52]
  402d74:	tbnz	w8, #0, 403040 <wcrtomb@plt+0x7d0>
  402d78:	ldp	x26, x25, [sp, #16]
  402d7c:	ldr	x27, [sp, #8]
  402d80:	ldr	x20, [sp, #96]
  402d84:	ldr	x0, [sp, #32]
  402d88:	ldr	x28, [sp, #56]
  402d8c:	cbz	x28, 402dd4 <wcrtomb@plt+0x564>
  402d90:	cmp	x28, x27
  402d94:	mov	x21, x27
  402d98:	mov	x22, x26
  402d9c:	b.ls	402dcc <wcrtomb@plt+0x55c>  // b.plast
  402da0:	ldr	x8, [sp, #72]
  402da4:	ldr	x24, [sp, #40]
  402da8:	sub	x23, x8, x28
  402dac:	add	x22, x23, x24
  402db0:	mov	x1, x22
  402db4:	bl	417310 <wcrtomb@plt+0x14aa0>
  402db8:	mov	x21, x0
  402dbc:	add	x0, x0, x24
  402dc0:	mov	x1, x28
  402dc4:	mov	x2, x23
  402dc8:	bl	402210 <memcpy@plt>
  402dcc:	cbnz	x21, 402de0 <wcrtomb@plt+0x570>
  402dd0:	b	402e34 <wcrtomb@plt+0x5c4>
  402dd4:	ldr	x22, [sp, #40]
  402dd8:	mov	x21, x0
  402ddc:	cbz	x21, 402e34 <wcrtomb@plt+0x5c4>
  402de0:	ldr	x8, [sp, #88]
  402de4:	sub	x23, x20, #0x40
  402de8:	mov	x0, xzr
  402dec:	add	x8, x8, #0x1
  402df0:	stp	x23, x8, [x19, #16]
  402df4:	stp	xzr, xzr, [x20, #-64]
  402df8:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402dfc:	ldrb	w8, [x8, #3470]
  402e00:	cbnz	w8, 402e0c <wcrtomb@plt+0x59c>
  402e04:	mov	w0, #0x100                 	// #256
  402e08:	bl	417290 <wcrtomb@plt+0x14a20>
  402e0c:	stp	x0, xzr, [x20, #-32]
  402e10:	mov	x0, x21
  402e14:	mov	x1, x22
  402e18:	mov	x2, x23
  402e1c:	bl	41a204 <_obstack_memory_used@@Base+0x70>
  402e20:	cbnz	x0, 403048 <wcrtomb@plt+0x7d8>
  402e24:	cmp	x21, x27
  402e28:	b.eq	402e34 <wcrtomb@plt+0x5c4>  // b.none
  402e2c:	mov	x0, x21
  402e30:	bl	402620 <free@plt>
  402e34:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402e38:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402e3c:	ldrb	w8, [x8, #3468]
  402e40:	ldrb	w9, [x20, #3469]
  402e44:	orr	w8, w9, w8
  402e48:	cbz	w8, 402f00 <wcrtomb@plt+0x690>
  402e4c:	add	x0, x26, #0x2d
  402e50:	bl	417290 <wcrtomb@plt+0x14a20>
  402e54:	ldr	x11, [sp]
  402e58:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402e5c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402e60:	add	x9, x9, #0x303
  402e64:	add	x10, x10, #0x32f
  402e68:	tst	x11, #0x2000
  402e6c:	ldrb	w8, [x20, #3469]
  402e70:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402e74:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402e78:	adrp	x13, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402e7c:	csel	x9, x10, x9, eq  // eq = none
  402e80:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402e84:	add	x11, x11, #0x309
  402e88:	add	x12, x12, #0x337
  402e8c:	add	x13, x13, #0x306
  402e90:	add	x10, x10, #0x333
  402e94:	csel	x11, x12, x11, eq  // eq = none
  402e98:	csel	x23, x10, x13, eq  // eq = none
  402e9c:	adrp	x10, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402ea0:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  402ea4:	add	x10, x10, #0x31c
  402ea8:	add	x12, x12, #0x34e
  402eac:	csel	x24, x12, x10, eq  // eq = none
  402eb0:	cmp	w8, #0x0
  402eb4:	csel	x1, x11, x9, eq  // eq = none
  402eb8:	mov	x21, x0
  402ebc:	bl	402690 <strcpy@plt>
  402ec0:	bl	402270 <strlen@plt>
  402ec4:	mov	x22, x0
  402ec8:	add	x0, x21, x0
  402ecc:	mov	x1, x27
  402ed0:	mov	x2, x26
  402ed4:	bl	402210 <memcpy@plt>
  402ed8:	ldrb	w8, [x20, #3469]
  402edc:	add	x20, x22, x26
  402ee0:	add	x0, x21, x20
  402ee4:	cmp	w8, #0x0
  402ee8:	csel	x1, x24, x23, eq  // eq = none
  402eec:	bl	402690 <strcpy@plt>
  402ef0:	bl	402270 <strlen@plt>
  402ef4:	add	x26, x0, x20
  402ef8:	mov	x27, x21
  402efc:	b	402f04 <wcrtomb@plt+0x694>
  402f00:	mov	x21, xzr
  402f04:	mov	x0, x27
  402f08:	mov	x1, x26
  402f0c:	mov	x2, x25
  402f10:	bl	40a910 <wcrtomb@plt+0x80a0>
  402f14:	mov	x0, x25
  402f18:	bl	40d4b8 <wcrtomb@plt+0xac48>
  402f1c:	cbz	x0, 402ffc <wcrtomb@plt+0x78c>
  402f20:	mov	x20, x0
  402f24:	mov	w0, wzr
  402f28:	bl	409c78 <wcrtomb@plt+0x7408>
  402f2c:	str	x0, [x19]
  402f30:	ldrb	w8, [x20]
  402f34:	mov	x22, x0
  402f38:	cbz	w8, 402fd0 <wcrtomb@plt+0x760>
  402f3c:	ldr	x8, [x19, #56]
  402f40:	add	x27, x20, #0x3
  402f44:	mov	x0, x27
  402f48:	add	x8, x8, #0x1
  402f4c:	str	x8, [x19, #56]
  402f50:	bl	402270 <strlen@plt>
  402f54:	ldrb	w8, [x20, #1]
  402f58:	ldrb	w9, [x20, #2]
  402f5c:	mov	x25, x0
  402f60:	add	x8, x0, x8
  402f64:	add	x23, x8, x9
  402f68:	mov	x0, x23
  402f6c:	bl	417290 <wcrtomb@plt+0x14a20>
  402f70:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  402f74:	ldrb	w28, [x8, #2180]
  402f78:	ldrb	w9, [x19, #64]
  402f7c:	mov	x24, x0
  402f80:	mov	x1, x27
  402f84:	strb	w28, [x0]
  402f88:	ldrb	w8, [x20, #1]
  402f8c:	mov	x2, x25
  402f90:	add	x26, x0, x8
  402f94:	orr	w8, w9, w8
  402f98:	mov	x0, x26
  402f9c:	strb	w8, [x19, #64]
  402fa0:	bl	402210 <memcpy@plt>
  402fa4:	ldrb	w8, [x20, #2]
  402fa8:	cbz	w8, 402fb0 <wcrtomb@plt+0x740>
  402fac:	strb	w28, [x26, x25]
  402fb0:	mov	x0, x22
  402fb4:	mov	x1, x24
  402fb8:	mov	x2, x23
  402fbc:	bl	4089bc <wcrtomb@plt+0x614c>
  402fc0:	mov	x0, x24
  402fc4:	bl	402620 <free@plt>
  402fc8:	ldr	x25, [sp, #24]
  402fcc:	b	402fec <wcrtomb@plt+0x77c>
  402fd0:	add	x23, x20, #0x3
  402fd4:	mov	x0, x23
  402fd8:	bl	402270 <strlen@plt>
  402fdc:	mov	x2, x0
  402fe0:	mov	x0, x22
  402fe4:	mov	x1, x23
  402fe8:	bl	4089bc <wcrtomb@plt+0x614c>
  402fec:	mov	x0, x22
  402ff0:	bl	409398 <wcrtomb@plt+0x6b28>
  402ff4:	mov	x0, x20
  402ff8:	bl	40e2f0 <wcrtomb@plt+0xba80>
  402ffc:	mov	w3, #0x1                   	// #1
  403000:	mov	x0, xzr
  403004:	mov	x1, xzr
  403008:	mov	x2, x25
  40300c:	bl	40b93c <wcrtomb@plt+0x90cc>
  403010:	mov	x0, x21
  403014:	bl	402620 <free@plt>
  403018:	mov	x0, x19
  40301c:	ldp	x20, x19, [sp, #288]
  403020:	ldp	x22, x21, [sp, #272]
  403024:	ldp	x24, x23, [sp, #256]
  403028:	ldp	x26, x25, [sp, #240]
  40302c:	ldp	x28, x27, [sp, #224]
  403030:	ldp	x29, x30, [sp, #208]
  403034:	add	sp, sp, #0x130
  403038:	ret
  40303c:	bl	41757c <wcrtomb@plt+0x14d0c>
  403040:	mov	w0, #0x2                   	// #2
  403044:	bl	402290 <exit@plt>
  403048:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40304c:	mov	x3, x0
  403050:	add	x2, x2, #0x3d7
  403054:	mov	w0, wzr
  403058:	mov	w1, wzr
  40305c:	bl	4022a0 <error@plt>
  403060:	bl	402560 <abort@plt>
  403064:	sub	sp, sp, #0x100
  403068:	stp	x29, x30, [sp, #160]
  40306c:	stp	x28, x27, [sp, #176]
  403070:	stp	x26, x25, [sp, #192]
  403074:	stp	x24, x23, [sp, #208]
  403078:	stp	x22, x21, [sp, #224]
  40307c:	stp	x20, x19, [sp, #240]
  403080:	ldr	x20, [x0, #8]
  403084:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403088:	ldrb	w23, [x21, #2180]
  40308c:	mov	x22, x0
  403090:	mov	x0, x20
  403094:	add	x29, sp, #0xa0
  403098:	mov	x28, x4
  40309c:	str	x3, [sp, #8]
  4030a0:	mov	x19, x2
  4030a4:	mov	x25, x1
  4030a8:	bl	40b92c <wcrtomb@plt+0x90bc>
  4030ac:	str	x0, [sp, #24]
  4030b0:	mov	x0, x20
  4030b4:	bl	40b934 <wcrtomb@plt+0x90c4>
  4030b8:	cmp	x19, #0x1
  4030bc:	stur	x25, [x29, #-8]
  4030c0:	b.lt	403584 <wcrtomb@plt+0xd14>  // b.tstop
  4030c4:	eor	w8, w0, #0x1
  4030c8:	add	x26, x25, x19
  4030cc:	str	w8, [sp, #20]
  4030d0:	add	x8, x22, #0x20
  4030d4:	mov	x27, x25
  4030d8:	str	w23, [sp, #44]
  4030dc:	stur	x8, [x29, #-56]
  4030e0:	str	x26, [sp, #48]
  4030e4:	str	x25, [sp, #32]
  4030e8:	stur	x28, [x29, #-72]
  4030ec:	b	403114 <wcrtomb@plt+0x8a4>
  4030f0:	ldr	x20, [sp, #56]
  4030f4:	ldr	x25, [sp, #32]
  4030f8:	ldur	x28, [x29, #-72]
  4030fc:	cmp	x26, x20
  403100:	b.cc	4035c8 <wcrtomb@plt+0xd58>  // b.lo, b.ul, b.last
  403104:	ldr	x26, [sp, #48]
  403108:	mov	x27, x20
  40310c:	cmp	x20, x26
  403110:	b.cs	403584 <wcrtomb@plt+0xd14>  // b.hs, b.nlast
  403114:	cbz	x28, 40336c <wcrtomb@plt+0xafc>
  403118:	mov	x20, x26
  40311c:	mov	x23, x28
  403120:	ldr	x8, [x22, #24]
  403124:	cbz	x8, 403104 <wcrtomb@plt+0x894>
  403128:	mvn	x8, x27
  40312c:	sub	x9, x20, x23
  403130:	mov	x28, xzr
  403134:	stp	xzr, x23, [sp, #72]
  403138:	sub	x19, x23, x27
  40313c:	add	x24, x20, x8
  403140:	sub	x23, x9, #0x1
  403144:	sub	x8, x20, #0x1
  403148:	mov	x26, x20
  40314c:	str	x9, [sp, #64]
  403150:	stur	x8, [x29, #-64]
  403154:	str	x20, [sp, #56]
  403158:	b	403174 <wcrtomb@plt+0x904>
  40315c:	mov	x26, x9
  403160:	str	x8, [sp, #72]
  403164:	ldr	x8, [x22, #24]
  403168:	add	x28, x28, #0x1
  40316c:	cmp	x28, x8
  403170:	b.cs	4030f0 <wcrtomb@plt+0x880>  // b.hs, b.nlast
  403174:	ldr	x8, [x22, #16]
  403178:	lsl	x20, x28, #6
  40317c:	ldur	x5, [x29, #-56]
  403180:	mov	x1, x27
  403184:	add	x8, x8, x20
  403188:	ldrb	w9, [x8, #56]
  40318c:	mov	x2, x24
  403190:	mov	x3, x19
  403194:	mov	x4, x23
  403198:	and	w9, w9, #0xffffffbf
  40319c:	strb	w9, [x8, #56]
  4031a0:	ldr	x8, [x22, #16]
  4031a4:	ldrb	w9, [x21, #2180]
  4031a8:	add	x8, x8, x20
  4031ac:	ldrb	w10, [x8, #56]
  4031b0:	cmp	w9, #0xa
  4031b4:	cset	w9, eq  // eq = none
  4031b8:	bfi	w10, w9, #7, #1
  4031bc:	strb	w10, [x8, #56]
  4031c0:	ldr	x8, [x22, #16]
  4031c4:	add	x0, x8, x20
  4031c8:	bl	41eb4c <_obstack_memory_used@@Base+0x49b8>
  4031cc:	cmn	x0, #0x2
  4031d0:	b.le	4035d4 <wcrtomb@plt+0xd64>
  4031d4:	tbnz	x0, #63, 403164 <wcrtomb@plt+0x8f4>
  4031d8:	add	x25, x27, x0
  4031dc:	cmp	x25, x26
  4031e0:	b.hi	403164 <wcrtomb@plt+0x8f4>  // b.pmore
  4031e4:	ldr	x8, [x22, #48]
  4031e8:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4031ec:	ldrb	w10, [x9, #3468]
  4031f0:	ldr	x8, [x8]
  4031f4:	sub	x21, x8, x0
  4031f8:	ldur	x8, [x29, #-72]
  4031fc:	cbz	x8, 403210 <wcrtomb@plt+0x9a0>
  403200:	cbnz	w10, 403210 <wcrtomb@plt+0x9a0>
  403204:	mov	x8, x21
  403208:	mov	x9, x25
  40320c:	b	40323c <wcrtomb@plt+0x9cc>
  403210:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403214:	ldrb	w11, [x8, #3469]
  403218:	ldr	x8, [sp, #64]
  40321c:	ldr	x9, [sp, #80]
  403220:	orr	w12, w11, w10
  403224:	cbz	w12, 40323c <wcrtomb@plt+0x9cc>
  403228:	cmp	x21, x23
  40322c:	b.ne	403268 <wcrtomb@plt+0x9f8>  // b.any
  403230:	ldr	x8, [sp, #64]
  403234:	ldr	x9, [sp, #80]
  403238:	cbz	w11, 403268 <wcrtomb@plt+0x9f8>
  40323c:	ldur	x10, [x29, #-72]
  403240:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403244:	cbz	x10, 40358c <wcrtomb@plt+0xd1c>
  403248:	cmp	x9, x26
  40324c:	b.cc	40315c <wcrtomb@plt+0x8ec>  // b.lo, b.ul, b.last
  403250:	ldr	x10, [sp, #72]
  403254:	cmp	x8, x10
  403258:	b.ls	403164 <wcrtomb@plt+0x8f4>  // b.plast
  40325c:	cmp	x9, x26
  403260:	b.eq	40315c <wcrtomb@plt+0x8ec>  // b.none
  403264:	b	403164 <wcrtomb@plt+0x8f4>
  403268:	cbz	w10, 403270 <wcrtomb@plt+0xa00>
  40326c:	cbz	w11, 403280 <wcrtomb@plt+0xa10>
  403270:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403274:	b	403164 <wcrtomb@plt+0x8f4>
  403278:	cmp	x25, x26
  40327c:	b.hi	403270 <wcrtomb@plt+0xa00>  // b.pmore
  403280:	ldur	x1, [x29, #-64]
  403284:	add	x0, x25, x21
  403288:	bl	409fe8 <wcrtomb@plt+0x7778>
  40328c:	cbnz	x0, 4032a4 <wcrtomb@plt+0xa34>
  403290:	ldur	x2, [x29, #-64]
  403294:	mov	x0, x27
  403298:	mov	x1, x25
  40329c:	bl	40a0a4 <wcrtomb@plt+0x7834>
  4032a0:	cbz	x0, 403204 <wcrtomb@plt+0x994>
  4032a4:	cbz	x21, 4032f8 <wcrtomb@plt+0xa88>
  4032a8:	ldr	x8, [x22, #16]
  4032ac:	ldr	x10, [sp, #80]
  4032b0:	ldur	x4, [x29, #-56]
  4032b4:	sub	x3, x25, x27
  4032b8:	add	x8, x8, x20
  4032bc:	ldrb	w9, [x8, #56]
  4032c0:	mvn	x10, x10
  4032c4:	mov	x1, x27
  4032c8:	orr	w9, w9, #0x40
  4032cc:	strb	w9, [x8, #56]
  4032d0:	ldr	x8, [x22, #16]
  4032d4:	add	x9, x21, x25
  4032d8:	add	x2, x10, x9
  4032dc:	add	x0, x8, x20
  4032e0:	bl	41e754 <_obstack_memory_used@@Base+0x45c0>
  4032e4:	cmn	x0, #0x2
  4032e8:	b.le	4035d4 <wcrtomb@plt+0xd64>
  4032ec:	mov	x21, x0
  4032f0:	cmp	x0, #0x0
  4032f4:	b.gt	403278 <wcrtomb@plt+0xa08>
  4032f8:	ldur	x8, [x29, #-64]
  4032fc:	cmp	x25, x8
  403300:	b.eq	403270 <wcrtomb@plt+0xa00>  // b.none
  403304:	ldr	x8, [x22, #16]
  403308:	ldur	x5, [x29, #-56]
  40330c:	mov	x1, x27
  403310:	mov	x2, x24
  403314:	add	x8, x8, x20
  403318:	ldrb	w9, [x8, #56]
  40331c:	and	w9, w9, #0xffffffbf
  403320:	strb	w9, [x8, #56]
  403324:	ldr	x8, [x22, #16]
  403328:	add	x9, x25, #0x1
  40332c:	sub	x3, x9, x27
  403330:	mvn	x9, x9
  403334:	add	x0, x8, x20
  403338:	ldr	x8, [sp, #56]
  40333c:	add	x4, x8, x9
  403340:	bl	41eb4c <_obstack_memory_used@@Base+0x49b8>
  403344:	tbnz	x0, #63, 40335c <wcrtomb@plt+0xaec>
  403348:	ldr	x8, [x22, #48]
  40334c:	add	x25, x27, x0
  403350:	ldr	x8, [x8]
  403354:	sub	x21, x8, x0
  403358:	b	403278 <wcrtomb@plt+0xa08>
  40335c:	cmn	x0, #0x1
  403360:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403364:	b.eq	403164 <wcrtomb@plt+0x8f4>  // b.none
  403368:	b	4035d4 <wcrtomb@plt+0xd64>
  40336c:	stur	xzr, [x29, #-40]
  403370:	sturb	wzr, [x29, #-44]
  403374:	ldr	x0, [x22]
  403378:	cbz	x0, 403480 <wcrtomb@plt+0xc10>
  40337c:	ldrb	w8, [x22, #64]
  403380:	sub	x21, x26, x27
  403384:	sub	x3, x29, #0x20
  403388:	mov	w4, #0x1                   	// #1
  40338c:	sub	x1, x27, x8
  403390:	add	x2, x21, x8
  403394:	bl	409ba0 <wcrtomb@plt+0x7330>
  403398:	tbnz	x0, #63, 403584 <wcrtomb@plt+0xd14>
  40339c:	ldr	w1, [sp, #44]
  4033a0:	add	x19, x27, x0
  4033a4:	mov	x20, x0
  4033a8:	sub	x2, x19, x25
  4033ac:	mov	x0, x25
  4033b0:	bl	402650 <memrchr@plt>
  4033b4:	ldur	x23, [x29, #-32]
  4033b8:	ldr	x24, [x22, #56]
  4033bc:	ldr	w9, [sp, #20]
  4033c0:	cmp	x0, #0x0
  4033c4:	csinc	x8, x25, x0, eq  // eq = none
  4033c8:	cmp	x23, x24
  4033cc:	str	x8, [sp, #80]
  4033d0:	cset	w8, lt  // lt = tstop
  4033d4:	orr	w8, w8, w9
  4033d8:	mov	x0, x19
  4033dc:	tbnz	w8, #0, 403410 <wcrtomb@plt+0xba0>
  4033e0:	ldr	x8, [sp, #80]
  4033e4:	mov	w9, #0x10                  	// #16
  4033e8:	mov	x0, x19
  4033ec:	sub	x8, x19, x8
  4033f0:	cmp	x8, #0x10
  4033f4:	csel	x8, x8, x9, gt
  4033f8:	cmp	x8, x20, lsr #2
  4033fc:	b.lt	403410 <wcrtomb@plt+0xba0>  // b.tstop
  403400:	cmp	x8, x21, asr #2
  403404:	mov	x0, x26
  403408:	b.ge	403410 <wcrtomb@plt+0xba0>  // b.tcont
  40340c:	add	x0, x27, x8, lsl #2
  403410:	ldr	w1, [sp, #44]
  403414:	sub	x2, x26, x0
  403418:	bl	4026d0 <memchr@plt>
  40341c:	cmp	x0, #0x0
  403420:	csinc	x20, x26, x0, eq  // eq = none
  403424:	cmp	x23, x24
  403428:	b.ge	403490 <wcrtomb@plt+0xc20>  // b.tcont
  40342c:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403430:	add	x9, x9, #0x888
  403434:	ldrb	w8, [x9]
  403438:	ldrb	w9, [x9, #2]
  40343c:	ldr	x23, [sp, #80]
  403440:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403444:	eor	w8, w8, #0x1
  403448:	orr	w8, w8, w9
  40344c:	cbnz	w8, 403598 <wcrtomb@plt+0xd28>
  403450:	ldur	x8, [x29, #-8]
  403454:	cmp	x8, x23
  403458:	b.cs	403460 <wcrtomb@plt+0xbf0>  // b.hs, b.nlast
  40345c:	stur	x23, [x29, #-8]
  403460:	sub	x0, x29, #0x8
  403464:	mov	x1, xzr
  403468:	mov	x2, x19
  40346c:	mov	x3, x26
  403470:	bl	409d60 <wcrtomb@plt+0x74f0>
  403474:	cbz	x0, 403598 <wcrtomb@plt+0xd28>
  403478:	ldur	x27, [x29, #-8]
  40347c:	b	403508 <wcrtomb@plt+0xc98>
  403480:	mov	x20, x26
  403484:	ldr	x0, [sp, #24]
  403488:	cbnz	x0, 4034a0 <wcrtomb@plt+0xc30>
  40348c:	b	403504 <wcrtomb@plt+0xc94>
  403490:	ldr	x27, [sp, #80]
  403494:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403498:	ldr	x0, [sp, #24]
  40349c:	cbz	x0, 403504 <wcrtomb@plt+0xc94>
  4034a0:	sub	x4, x29, #0x28
  4034a4:	mov	x1, x27
  4034a8:	mov	x2, x20
  4034ac:	mov	w3, wzr
  4034b0:	mov	x5, xzr
  4034b4:	bl	40b920 <wcrtomb@plt+0x90b0>
  4034b8:	cbz	x0, 403104 <wcrtomb@plt+0x894>
  4034bc:	mov	x19, x0
  4034c0:	cmp	x0, x20
  4034c4:	b.eq	403104 <wcrtomb@plt+0x894>  // b.none
  4034c8:	ldur	x8, [x29, #-40]
  4034cc:	ldr	w20, [sp, #44]
  4034d0:	cbz	x8, 4034e8 <wcrtomb@plt+0xc78>
  4034d4:	sub	x2, x19, x25
  4034d8:	mov	x0, x25
  4034dc:	mov	w1, w20
  4034e0:	bl	402650 <memrchr@plt>
  4034e4:	add	x27, x0, #0x1
  4034e8:	sub	x2, x26, x19
  4034ec:	mov	x0, x19
  4034f0:	mov	w1, w20
  4034f4:	bl	4026d0 <memchr@plt>
  4034f8:	cmp	x0, #0x0
  4034fc:	csinc	x20, x26, x0, eq  // eq = none
  403500:	stur	xzr, [x29, #-40]
  403504:	mov	x23, x27
  403508:	ldr	x0, [x22, #8]
  40350c:	sub	x4, x29, #0x28
  403510:	sub	x5, x29, #0x2c
  403514:	mov	x1, x27
  403518:	mov	x2, x20
  40351c:	mov	w3, wzr
  403520:	bl	40b920 <wcrtomb@plt+0x90b0>
  403524:	cbz	x0, 403104 <wcrtomb@plt+0x894>
  403528:	mov	x19, x0
  40352c:	cmp	x0, x20
  403530:	b.eq	403104 <wcrtomb@plt+0x894>  // b.none
  403534:	ldur	x8, [x29, #-40]
  403538:	ldr	w20, [sp, #44]
  40353c:	cbz	x8, 403554 <wcrtomb@plt+0xce4>
  403540:	sub	x2, x19, x25
  403544:	mov	x0, x25
  403548:	mov	w1, w20
  40354c:	bl	402650 <memrchr@plt>
  403550:	add	x23, x0, #0x1
  403554:	sub	x2, x26, x19
  403558:	mov	x0, x19
  40355c:	mov	w1, w20
  403560:	bl	4026d0 <memchr@plt>
  403564:	ldurb	w8, [x29, #-44]
  403568:	cmp	x0, #0x0
  40356c:	csinc	x20, x26, x0, eq  // eq = none
  403570:	cbz	w8, 403598 <wcrtomb@plt+0xd28>
  403574:	mov	x27, x23
  403578:	ldr	x8, [x22, #24]
  40357c:	cbnz	x8, 403128 <wcrtomb@plt+0x8b8>
  403580:	b	403104 <wcrtomb@plt+0x894>
  403584:	mov	x0, #0xffffffffffffffff    	// #-1
  403588:	b	4035a8 <wcrtomb@plt+0xd38>
  40358c:	ldr	x25, [sp, #32]
  403590:	ldr	x20, [sp, #56]
  403594:	mov	x23, x27
  403598:	sub	x9, x20, x23
  40359c:	ldr	x8, [sp, #8]
  4035a0:	sub	x0, x23, x25
  4035a4:	str	x9, [x8]
  4035a8:	ldp	x20, x19, [sp, #240]
  4035ac:	ldp	x22, x21, [sp, #224]
  4035b0:	ldp	x24, x23, [sp, #208]
  4035b4:	ldp	x26, x25, [sp, #192]
  4035b8:	ldp	x28, x27, [sp, #176]
  4035bc:	ldp	x29, x30, [sp, #160]
  4035c0:	add	sp, sp, #0x100
  4035c4:	ret
  4035c8:	ldr	x9, [sp, #72]
  4035cc:	mov	x23, x26
  4035d0:	b	40359c <wcrtomb@plt+0xd2c>
  4035d4:	bl	41757c <wcrtomb@plt+0x14d0c>
  4035d8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4035dc:	add	x8, x8, #0x4a8
  4035e0:	ldp	x10, x8, [x8]
  4035e4:	cmp	x10, #0x2
  4035e8:	b.cc	403614 <wcrtomb@plt+0xda4>  // b.lo, b.ul, b.last
  4035ec:	add	x11, x8, #0x18
  4035f0:	mov	w9, #0x1                   	// #1
  4035f4:	ldr	x12, [x11]
  4035f8:	cmp	x12, x0
  4035fc:	b.hi	403618 <wcrtomb@plt+0xda8>  // b.pmore
  403600:	add	x9, x9, #0x1
  403604:	cmp	x9, x10
  403608:	add	x11, x11, #0x10
  40360c:	b.cc	4035f4 <wcrtomb@plt+0xd84>  // b.lo, b.ul, b.last
  403610:	b	403618 <wcrtomb@plt+0xda8>
  403614:	mov	w9, #0x1                   	// #1
  403618:	add	x8, x8, x9, lsl #4
  40361c:	ldur	x9, [x8, #-8]
  403620:	sub	x9, x0, x9
  403624:	add	x9, x9, #0x1
  403628:	str	x9, [x1]
  40362c:	ldur	x0, [x8, #-16]
  403630:	ret
  403634:	stp	x29, x30, [sp, #-48]!
  403638:	stp	x20, x19, [sp, #32]
  40363c:	mov	w19, w0
  403640:	stp	x22, x21, [sp, #16]
  403644:	mov	x29, sp
  403648:	cbnz	w0, 4037c8 <wcrtomb@plt+0xf58>
  40364c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  403650:	add	x1, x1, #0xfa8
  403654:	mov	w2, #0x5                   	// #5
  403658:	mov	x0, xzr
  40365c:	bl	402740 <dcgettext@plt>
  403660:	mov	x20, x0
  403664:	bl	4137e0 <wcrtomb@plt+0x10f70>
  403668:	mov	x1, x0
  40366c:	mov	x0, x20
  403670:	bl	4027c0 <printf@plt>
  403674:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  403678:	add	x1, x1, #0xff9
  40367c:	mov	w2, #0x5                   	// #5
  403680:	mov	x0, xzr
  403684:	bl	402740 <dcgettext@plt>
  403688:	bl	4027c0 <printf@plt>
  40368c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403690:	add	x1, x1, #0x1c
  403694:	mov	w2, #0x5                   	// #5
  403698:	mov	x0, xzr
  40369c:	bl	402740 <dcgettext@plt>
  4036a0:	mov	x20, x0
  4036a4:	bl	4137e0 <wcrtomb@plt+0x10f70>
  4036a8:	mov	x1, x0
  4036ac:	mov	x0, x20
  4036b0:	bl	4027c0 <printf@plt>
  4036b4:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4036b8:	add	x1, x1, #0xad
  4036bc:	mov	w2, #0x5                   	// #5
  4036c0:	mov	x0, xzr
  4036c4:	bl	402740 <dcgettext@plt>
  4036c8:	bl	4027c0 <printf@plt>
  4036cc:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4036d0:	add	x1, x1, #0x1aa
  4036d4:	mov	w2, #0x5                   	// #5
  4036d8:	mov	x0, xzr
  4036dc:	bl	402740 <dcgettext@plt>
  4036e0:	bl	4027c0 <printf@plt>
  4036e4:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4036e8:	add	x1, x1, #0x34f
  4036ec:	mov	w2, #0x5                   	// #5
  4036f0:	mov	x0, xzr
  4036f4:	bl	402740 <dcgettext@plt>
  4036f8:	bl	4027c0 <printf@plt>
  4036fc:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403700:	add	x1, x1, #0x447
  403704:	mov	w2, #0x5                   	// #5
  403708:	mov	x0, xzr
  40370c:	bl	402740 <dcgettext@plt>
  403710:	bl	4027c0 <printf@plt>
  403714:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403718:	add	x1, x1, #0x61d
  40371c:	mov	w2, #0x5                   	// #5
  403720:	mov	x0, xzr
  403724:	bl	402740 <dcgettext@plt>
  403728:	bl	4027c0 <printf@plt>
  40372c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403730:	add	x1, x1, #0x764
  403734:	mov	w2, #0x5                   	// #5
  403738:	mov	x0, xzr
  40373c:	bl	402740 <dcgettext@plt>
  403740:	bl	4027c0 <printf@plt>
  403744:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403748:	add	x1, x1, #0x91b
  40374c:	mov	w2, #0x5                   	// #5
  403750:	mov	x0, xzr
  403754:	bl	402740 <dcgettext@plt>
  403758:	bl	4027c0 <printf@plt>
  40375c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403760:	add	x1, x1, #0xa2c
  403764:	mov	w2, #0x5                   	// #5
  403768:	mov	x0, xzr
  40376c:	bl	402740 <dcgettext@plt>
  403770:	bl	4027c0 <printf@plt>
  403774:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403778:	add	x1, x1, #0xb82
  40377c:	mov	w2, #0x5                   	// #5
  403780:	mov	x0, xzr
  403784:	bl	402740 <dcgettext@plt>
  403788:	bl	4027c0 <printf@plt>
  40378c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403790:	add	x1, x1, #0xc52
  403794:	mov	w2, #0x5                   	// #5
  403798:	mov	x0, xzr
  40379c:	bl	402740 <dcgettext@plt>
  4037a0:	bl	4027c0 <printf@plt>
  4037a4:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4037a8:	add	x1, x1, #0xd76
  4037ac:	mov	w2, #0x5                   	// #5
  4037b0:	mov	x0, xzr
  4037b4:	bl	402740 <dcgettext@plt>
  4037b8:	bl	4027c0 <printf@plt>
  4037bc:	bl	4171c8 <wcrtomb@plt+0x14958>
  4037c0:	mov	w0, w19
  4037c4:	bl	402290 <exit@plt>
  4037c8:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4037cc:	ldr	x20, [x22, #1056]
  4037d0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  4037d4:	add	x1, x1, #0xfa8
  4037d8:	mov	w2, #0x5                   	// #5
  4037dc:	mov	x0, xzr
  4037e0:	bl	402740 <dcgettext@plt>
  4037e4:	mov	x21, x0
  4037e8:	bl	4137e0 <wcrtomb@plt+0x10f70>
  4037ec:	mov	x2, x0
  4037f0:	mov	x0, x20
  4037f4:	mov	x1, x21
  4037f8:	bl	402820 <fprintf@plt>
  4037fc:	ldr	x20, [x22, #1056]
  403800:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  403804:	add	x1, x1, #0xfd2
  403808:	mov	w2, #0x5                   	// #5
  40380c:	mov	x0, xzr
  403810:	bl	402740 <dcgettext@plt>
  403814:	mov	x21, x0
  403818:	bl	4137e0 <wcrtomb@plt+0x10f70>
  40381c:	mov	x2, x0
  403820:	mov	x0, x20
  403824:	mov	x1, x21
  403828:	bl	402820 <fprintf@plt>
  40382c:	mov	w0, w19
  403830:	bl	402290 <exit@plt>
  403834:	sub	sp, sp, #0x70
  403838:	stp	x29, x30, [sp, #16]
  40383c:	stp	x28, x27, [sp, #32]
  403840:	stp	x26, x25, [sp, #48]
  403844:	stp	x24, x23, [sp, #64]
  403848:	stp	x22, x21, [sp, #80]
  40384c:	stp	x20, x19, [sp, #96]
  403850:	stp	x1, xzr, [sp]
  403854:	ldr	x21, [x1]
  403858:	ldr	x22, [x0]
  40385c:	add	x29, sp, #0x10
  403860:	add	x8, x21, #0x1
  403864:	lsr	x9, x8, #62
  403868:	cbnz	x9, 403980 <wcrtomb@plt+0x1110>
  40386c:	mov	x20, x0
  403870:	lsl	x0, x8, #1
  403874:	bl	417290 <wcrtomb@plt+0x14a20>
  403878:	mov	x23, x0
  40387c:	mov	x24, x0
  403880:	cbz	x21, 403948 <wcrtomb@plt+0x10d8>
  403884:	adrp	x26, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403888:	mov	x28, #0x441                 	// #1089
  40388c:	add	x26, x26, #0x888
  403890:	mov	w27, #0x1                   	// #1
  403894:	movk	x28, #0x580, lsl #48
  403898:	mov	w19, #0x5c                  	// #92
  40389c:	mov	x24, x23
  4038a0:	b	4038c4 <wcrtomb@plt+0x1054>
  4038a4:	mov	x0, x24
  4038a8:	mov	x1, x22
  4038ac:	mov	x2, x25
  4038b0:	bl	402210 <memcpy@plt>
  4038b4:	add	x24, x24, x25
  4038b8:	subs	x21, x21, x25
  4038bc:	add	x22, x22, x25
  4038c0:	b.eq	403948 <wcrtomb@plt+0x10d8>  // b.none
  4038c4:	ldrb	w8, [x22]
  4038c8:	add	x8, x26, x8
  4038cc:	ldrsb	x25, [x8, #3]
  4038d0:	cmn	x25, #0x2
  4038d4:	b.ne	4038ec <wcrtomb@plt+0x107c>  // b.any
  4038d8:	add	x2, sp, #0x8
  4038dc:	mov	x0, x22
  4038e0:	mov	x1, x21
  4038e4:	bl	419d80 <wcrtomb@plt+0x17510>
  4038e8:	mov	x25, x0
  4038ec:	cmp	x25, #0x1
  4038f0:	b.eq	403910 <wcrtomb@plt+0x10a0>  // b.none
  4038f4:	cmn	x25, #0x1
  4038f8:	b.eq	40390c <wcrtomb@plt+0x109c>  // b.none
  4038fc:	cmn	x25, #0x2
  403900:	b.ne	4038a4 <wcrtomb@plt+0x1034>  // b.any
  403904:	mov	x25, x21
  403908:	b	4038a4 <wcrtomb@plt+0x1034>
  40390c:	str	xzr, [sp, #8]
  403910:	ldrb	w8, [x22]
  403914:	sub	w9, w8, #0x24
  403918:	cmp	w9, #0x3a
  40391c:	b.hi	403934 <wcrtomb@plt+0x10c4>  // b.pmore
  403920:	lsl	x9, x27, x9
  403924:	tst	x9, x28
  403928:	b.eq	403934 <wcrtomb@plt+0x10c4>  // b.none
  40392c:	strb	w19, [x24], #1
  403930:	ldrb	w8, [x22]
  403934:	strb	w8, [x24], #1
  403938:	mov	w25, #0x1                   	// #1
  40393c:	subs	x21, x21, x25
  403940:	add	x22, x22, x25
  403944:	b.ne	4038c4 <wcrtomb@plt+0x1054>  // b.any
  403948:	ldr	x0, [x20]
  40394c:	bl	402620 <free@plt>
  403950:	ldr	x9, [sp]
  403954:	sub	x8, x24, x23
  403958:	str	x23, [x20]
  40395c:	str	x8, [x9]
  403960:	ldp	x20, x19, [sp, #96]
  403964:	ldp	x22, x21, [sp, #80]
  403968:	ldp	x24, x23, [sp, #64]
  40396c:	ldp	x26, x25, [sp, #48]
  403970:	ldp	x28, x27, [sp, #32]
  403974:	ldp	x29, x30, [sp, #16]
  403978:	add	sp, sp, #0x70
  40397c:	ret
  403980:	bl	41757c <wcrtomb@plt+0x14d0c>
  403984:	sub	sp, sp, #0x1c0
  403988:	stp	x29, x30, [sp, #352]
  40398c:	add	x29, sp, #0x160
  403990:	adrp	x12, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403994:	mov	w8, #0x2                   	// #2
  403998:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40399c:	stp	x28, x27, [sp, #368]
  4039a0:	stp	x26, x25, [sp, #384]
  4039a4:	stp	x24, x23, [sp, #400]
  4039a8:	stp	x22, x21, [sp, #416]
  4039ac:	stp	x20, x19, [sp, #432]
  4039b0:	mov	x19, x1
  4039b4:	stp	xzr, xzr, [x29, #-168]
  4039b8:	adrp	x11, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4039bc:	mov	w9, #0xa                   	// #10
  4039c0:	add	x10, x10, #0x458
  4039c4:	str	w8, [x12, #952]
  4039c8:	mov	w8, #0x1                   	// #1
  4039cc:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4039d0:	mov	w20, w0
  4039d4:	strb	w9, [x11, #2180]
  4039d8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4039dc:	strh	w8, [x10]
  4039e0:	mov	x8, #0xffffffffffffffff    	// #-1
  4039e4:	add	x1, x1, #0xd75
  4039e8:	mov	w0, #0x6                   	// #6
  4039ec:	stp	x9, x8, [x10, #96]
  4039f0:	str	x8, [x10, #112]
  4039f4:	stp	x8, xzr, [sp, #168]
  4039f8:	bl	402850 <setlocale@plt>
  4039fc:	adrp	x21, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403a00:	add	x21, x21, #0xf7f
  403a04:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403a08:	add	x1, x1, #0xe80
  403a0c:	mov	x0, x21
  403a10:	bl	402430 <bindtextdomain@plt>
  403a14:	mov	x0, x21
  403a18:	bl	4025e0 <textdomain@plt>
  403a1c:	adrp	x0, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403a20:	add	x0, x0, #0x888
  403a24:	bl	41279c <wcrtomb@plt+0xff2c>
  403a28:	adrp	x0, 405000 <wcrtomb@plt+0x2790>
  403a2c:	add	x0, x0, #0x5d0
  403a30:	bl	42b2a8 <_obstack_memory_used@@Base+0x11114>
  403a34:	mov	x0, xzr
  403a38:	bl	40a634 <wcrtomb@plt+0x7dc4>
  403a3c:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403a40:	add	x0, x0, #0xe92
  403a44:	bl	4027f0 <getenv@plt>
  403a48:	cbz	x0, 403a98 <wcrtomb@plt+0x1228>
  403a4c:	ldrb	w8, [x0]
  403a50:	mov	x22, x0
  403a54:	cbz	w8, 403a98 <wcrtomb@plt+0x1228>
  403a58:	mov	x0, x22
  403a5c:	bl	402270 <strlen@plt>
  403a60:	add	x0, x0, #0x1
  403a64:	bl	417290 <wcrtomb@plt+0x14a20>
  403a68:	mov	x9, #0x3e01                	// #15873
  403a6c:	mov	x23, x0
  403a70:	mov	x21, xzr
  403a74:	mov	w8, #0x1                   	// #1
  403a78:	movk	x9, #0x1, lsl #32
  403a7c:	mov	x10, x22
  403a80:	mov	x11, x0
  403a84:	ldrb	w12, [x10]
  403a88:	sub	w13, w12, #0x9
  403a8c:	cmp	w13, #0x5
  403a90:	b.cc	403b28 <wcrtomb@plt+0x12b8>  // b.lo, b.ul, b.last
  403a94:	b	403b20 <wcrtomb@plt+0x12b0>
  403a98:	str	xzr, [sp, #8]
  403a9c:	b	403c88 <wcrtomb@plt+0x1418>
  403aa0:	add	x21, x21, #0x1
  403aa4:	add	x13, x11, #0x2
  403aa8:	b	403ad0 <wcrtomb@plt+0x1260>
  403aac:	mov	x10, x14
  403ab0:	ldrb	w12, [x10]
  403ab4:	add	x13, x11, #0x1
  403ab8:	cmp	w12, #0x20
  403abc:	b.hi	403ad0 <wcrtomb@plt+0x1260>  // b.pmore
  403ac0:	lsl	x14, x8, x12
  403ac4:	tst	x14, x9
  403ac8:	mov	x14, x10
  403acc:	b.ne	403b08 <wcrtomb@plt+0x1298>  // b.any
  403ad0:	mov	x11, x13
  403ad4:	and	w13, w12, #0xff
  403ad8:	add	x14, x10, #0x1
  403adc:	cmp	w13, #0x5c
  403ae0:	sturb	w12, [x11, #-2]
  403ae4:	b.ne	403aac <wcrtomb@plt+0x123c>  // b.any
  403ae8:	ldrb	w12, [x14]
  403aec:	cbz	w12, 403b08 <wcrtomb@plt+0x1298>
  403af0:	sturb	w12, [x11, #-2]
  403af4:	ldrb	w12, [x10, #2]!
  403af8:	add	x13, x11, #0x1
  403afc:	cmp	w12, #0x20
  403b00:	b.ls	403ac0 <wcrtomb@plt+0x1250>  // b.plast
  403b04:	b	403ad0 <wcrtomb@plt+0x1260>
  403b08:	sturb	wzr, [x11, #-1]
  403b0c:	mov	x10, x14
  403b10:	ldrb	w12, [x10]
  403b14:	sub	w13, w12, #0x9
  403b18:	cmp	w13, #0x5
  403b1c:	b.cc	403b28 <wcrtomb@plt+0x12b8>  // b.lo, b.ul, b.last
  403b20:	cmp	w12, #0x20
  403b24:	b.ne	403b3c <wcrtomb@plt+0x12cc>  // b.any
  403b28:	ldrb	w12, [x10, #1]!
  403b2c:	sub	w13, w12, #0x9
  403b30:	cmp	w13, #0x5
  403b34:	b.cc	403b28 <wcrtomb@plt+0x12b8>  // b.lo, b.ul, b.last
  403b38:	b	403b20 <wcrtomb@plt+0x12b0>
  403b3c:	cbnz	w12, 403aa0 <wcrtomb@plt+0x1230>
  403b40:	mov	w8, #0x7fffffff            	// #2147483647
  403b44:	sub	w8, w8, w20
  403b48:	cmp	x21, w8, sxtw
  403b4c:	b.hi	404850 <wcrtomb@plt+0x1fe0>  // b.pmore
  403b50:	add	x20, x21, w20, sxtw
  403b54:	lsl	x8, x20, #3
  403b58:	add	x0, x8, #0x8
  403b5c:	bl	417290 <wcrtomb@plt+0x14a20>
  403b60:	ldr	x11, [x19]
  403b64:	mov	x9, x0
  403b68:	mov	x24, x0
  403b6c:	mov	x8, xzr
  403b70:	str	x11, [x9], #8
  403b74:	mov	x11, #0x3e01                	// #15873
  403b78:	mov	w10, #0x1                   	// #1
  403b7c:	movk	x11, #0x1, lsl #32
  403b80:	ldrb	w12, [x22]
  403b84:	sub	w13, w12, #0x9
  403b88:	cmp	w13, #0x5
  403b8c:	b.cc	403c24 <wcrtomb@plt+0x13b4>  // b.lo, b.ul, b.last
  403b90:	b	403c1c <wcrtomb@plt+0x13ac>
  403b94:	str	x23, [x9, x8, lsl #3]
  403b98:	ldrb	w12, [x22]
  403b9c:	add	x8, x8, #0x1
  403ba0:	add	x13, x23, #0x2
  403ba4:	b	403bcc <wcrtomb@plt+0x135c>
  403ba8:	mov	x22, x14
  403bac:	ldrb	w12, [x22]
  403bb0:	add	x13, x23, #0x1
  403bb4:	cmp	w12, #0x20
  403bb8:	b.hi	403bcc <wcrtomb@plt+0x135c>  // b.pmore
  403bbc:	lsl	x14, x10, x12
  403bc0:	tst	x14, x11
  403bc4:	mov	x14, x22
  403bc8:	b.ne	403c04 <wcrtomb@plt+0x1394>  // b.any
  403bcc:	mov	x23, x13
  403bd0:	and	w13, w12, #0xff
  403bd4:	add	x14, x22, #0x1
  403bd8:	cmp	w13, #0x5c
  403bdc:	sturb	w12, [x23, #-2]
  403be0:	b.ne	403ba8 <wcrtomb@plt+0x1338>  // b.any
  403be4:	ldrb	w12, [x14]
  403be8:	cbz	w12, 403c04 <wcrtomb@plt+0x1394>
  403bec:	sturb	w12, [x23, #-2]
  403bf0:	ldrb	w12, [x22, #2]!
  403bf4:	add	x13, x23, #0x1
  403bf8:	cmp	w12, #0x20
  403bfc:	b.ls	403bbc <wcrtomb@plt+0x134c>  // b.plast
  403c00:	b	403bcc <wcrtomb@plt+0x135c>
  403c04:	sturb	wzr, [x23, #-1]
  403c08:	mov	x22, x14
  403c0c:	ldrb	w12, [x22]
  403c10:	sub	w13, w12, #0x9
  403c14:	cmp	w13, #0x5
  403c18:	b.cc	403c24 <wcrtomb@plt+0x13b4>  // b.lo, b.ul, b.last
  403c1c:	cmp	w12, #0x20
  403c20:	b.ne	403c38 <wcrtomb@plt+0x13c8>  // b.any
  403c24:	ldrb	w12, [x22, #1]!
  403c28:	sub	w13, w12, #0x9
  403c2c:	cmp	w13, #0x5
  403c30:	b.cc	403c24 <wcrtomb@plt+0x13b4>  // b.lo, b.ul, b.last
  403c34:	b	403c1c <wcrtomb@plt+0x13ac>
  403c38:	cbnz	w12, 403b94 <wcrtomb@plt+0x1324>
  403c3c:	add	x8, x9, x8, lsl #3
  403c40:	add	x9, x19, #0x8
  403c44:	ldr	x10, [x9], #8
  403c48:	str	x10, [x8], #8
  403c4c:	cbnz	x10, 403c44 <wcrtomb@plt+0x13d4>
  403c50:	cbz	w21, 403c80 <wcrtomb@plt+0x1410>
  403c54:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403c58:	add	x1, x1, #0xe9f
  403c5c:	mov	w2, #0x5                   	// #5
  403c60:	mov	x0, xzr
  403c64:	str	x21, [sp, #8]
  403c68:	bl	402740 <dcgettext@plt>
  403c6c:	mov	x2, x0
  403c70:	mov	w0, wzr
  403c74:	mov	w1, wzr
  403c78:	bl	4022a0 <error@plt>
  403c7c:	b	403c84 <wcrtomb@plt+0x1414>
  403c80:	str	xzr, [sp, #8]
  403c84:	mov	x19, x24
  403c88:	adrp	x24, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  403c8c:	adrp	x25, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  403c90:	mov	w8, #0xffffffff            	// #-1
  403c94:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403c98:	add	x24, x24, #0x7e0
  403c9c:	add	x25, x25, #0x820
  403ca0:	sub	x28, x29, #0x98
  403ca4:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403ca8:	str	xzr, [sp, #24]
  403cac:	str	w8, [sp, #32]
  403cb0:	b	403cc8 <wcrtomb@plt+0x1458>
  403cb4:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403cb8:	add	x0, x0, #0xf03
  403cbc:	ldr	w1, [sp, #32]
  403cc0:	bl	4055e4 <wcrtomb@plt+0x2d74>
  403cc4:	str	w0, [sp, #32]
  403cc8:	ldr	w27, [x23, #1072]
  403ccc:	mov	w0, w20
  403cd0:	mov	x1, x19
  403cd4:	mov	x2, x24
  403cd8:	mov	x3, x25
  403cdc:	mov	x4, xzr
  403ce0:	bl	4025f0 <getopt_long@plt>
  403ce4:	sub	w8, w0, #0x30
  403ce8:	mov	w26, w0
  403cec:	cmp	w8, #0x9
  403cf0:	b.hi	403da8 <wcrtomb@plt+0x1538>  // b.pmore
  403cf4:	mov	x8, xzr
  403cf8:	mov	w21, w27
  403cfc:	str	w21, [x22, #852]
  403d00:	ldr	w21, [x23, #1072]
  403d04:	mov	w0, w20
  403d08:	mov	x1, x19
  403d0c:	mov	x2, x24
  403d10:	mov	x3, x25
  403d14:	mov	x4, xzr
  403d18:	add	x23, x8, #0x1
  403d1c:	strb	w26, [x28, x8]
  403d20:	bl	4025f0 <getopt_long@plt>
  403d24:	sub	w8, w0, #0x30
  403d28:	mov	w26, w0
  403d2c:	cmp	w8, #0x9
  403d30:	b.hi	403d70 <wcrtomb@plt+0x1500>  // b.pmore
  403d34:	ldurb	w8, [x29, #-152]
  403d38:	ldr	w9, [x22, #852]
  403d3c:	cmp	w8, #0x30
  403d40:	cset	w8, eq  // eq = none
  403d44:	sub	x8, x23, x8
  403d48:	cmp	w9, w21
  403d4c:	csel	x8, x8, xzr, eq  // eq = none
  403d50:	cmp	x8, #0x15
  403d54:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403d58:	b.ne	403cfc <wcrtomb@plt+0x148c>  // b.any
  403d5c:	mov	w9, #0x2e2e                	// #11822
  403d60:	movk	w9, #0x2e, lsl #16
  403d64:	mov	w23, #0x18                  	// #24
  403d68:	str	w9, [x28, x8]
  403d6c:	b	403d74 <wcrtomb@plt+0x1504>
  403d70:	cbz	x23, 403ddc <wcrtomb@plt+0x156c>
  403d74:	adrp	x4, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403d78:	sub	x0, x29, #0x98
  403d7c:	add	x3, sp, #0xa8
  403d80:	mov	w2, #0xa                   	// #10
  403d84:	mov	x1, xzr
  403d88:	add	x4, x4, #0xd75
  403d8c:	strb	wzr, [x28, x23]
  403d90:	bl	4175c0 <wcrtomb@plt+0x14d50>
  403d94:	cmp	w0, #0x1
  403d98:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403d9c:	b.hi	4054f8 <wcrtomb@plt+0x2c88>  // b.pmore
  403da0:	ldr	x8, [sp, #168]
  403da4:	tbnz	x8, #63, 4054f8 <wcrtomb@plt+0x2c88>
  403da8:	add	w8, w26, #0x1
  403dac:	cmp	w8, #0x10a
  403db0:	b.hi	4054f0 <wcrtomb@plt+0x2c80>  // b.pmore
  403db4:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  403db8:	add	x11, x11, #0x368
  403dbc:	adr	x9, 403cb4 <wcrtomb@plt+0x1444>
  403dc0:	ldrh	w10, [x11, x8, lsl #1]
  403dc4:	add	x9, x9, x10, lsl #2
  403dc8:	br	x9
  403dcc:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403dd0:	mov	w9, #0x1                   	// #1
  403dd4:	strb	w9, [x8, #3470]
  403dd8:	b	403cc8 <wcrtomb@plt+0x1458>
  403ddc:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403de0:	add	w8, w26, #0x1
  403de4:	cmp	w8, #0x10a
  403de8:	b.ls	403db4 <wcrtomb@plt+0x1544>  // b.plast
  403dec:	b	4054f0 <wcrtomb@plt+0x2c80>
  403df0:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403df4:	ldr	x0, [x23, #1392]
  403df8:	cmp	w26, #0x106
  403dfc:	cset	w8, eq  // eq = none
  403e00:	lsl	w21, w8, #29
  403e04:	cbnz	x0, 403e10 <wcrtomb@plt+0x15a0>
  403e08:	bl	412be8 <wcrtomb@plt+0x10378>
  403e0c:	str	x0, [x23, #1392]
  403e10:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403e14:	ldr	x1, [x23, #1064]
  403e18:	mov	w8, #0x50000000            	// #1342177280
  403e1c:	orr	w2, w21, w8
  403e20:	bl	413118 <wcrtomb@plt+0x108a8>
  403e24:	adrp	x26, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403e28:	ldr	x0, [x26, #1400]
  403e2c:	cbnz	x0, 403e38 <wcrtomb@plt+0x15c8>
  403e30:	bl	412be8 <wcrtomb@plt+0x10378>
  403e34:	str	x0, [x26, #1400]
  403e38:	ldr	x1, [x23, #1064]
  403e3c:	orr	w2, w21, #0x10000000
  403e40:	b	4041cc <wcrtomb@plt+0x195c>
  403e44:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403e48:	ldr	x8, [x8, #1064]
  403e4c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403e50:	str	x8, [x9, #856]
  403e54:	b	403cc8 <wcrtomb@plt+0x1458>
  403e58:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403e5c:	ldr	x21, [x8, #1064]
  403e60:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403e64:	add	x1, x1, #0xf36
  403e68:	mov	x0, x21
  403e6c:	bl	402600 <strcmp@plt>
  403e70:	cbz	w0, 404478 <wcrtomb@plt+0x1c08>
  403e74:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  403e78:	add	x1, x1, #0x56
  403e7c:	mov	x0, x21
  403e80:	bl	402600 <strcmp@plt>
  403e84:	cbz	w0, 403eac <wcrtomb@plt+0x163c>
  403e88:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  403e8c:	add	x1, x1, #0xc8
  403e90:	mov	x0, x21
  403e94:	bl	402600 <strcmp@plt>
  403e98:	cbnz	w0, 405558 <wcrtomb@plt+0x2ce8>
  403e9c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403ea0:	mov	w9, #0x2                   	// #2
  403ea4:	str	w9, [x8, #1156]
  403ea8:	b	403cc8 <wcrtomb@plt+0x1458>
  403eac:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403eb0:	mov	w9, #0x1                   	// #1
  403eb4:	str	w9, [x8, #1156]
  403eb8:	b	403cc8 <wcrtomb@plt+0x1458>
  403ebc:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403ec0:	mov	w9, #0x1                   	// #1
  403ec4:	strb	w9, [x8, #3469]
  403ec8:	b	403cc8 <wcrtomb@plt+0x1458>
  403ecc:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403ed0:	strb	wzr, [x8, #2180]
  403ed4:	b	403cc8 <wcrtomb@plt+0x1458>
  403ed8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403edc:	mov	w9, #0x1                   	// #1
  403ee0:	str	w9, [x8, #1160]
  403ee4:	b	403cc8 <wcrtomb@plt+0x1458>
  403ee8:	bl	409c00 <wcrtomb@plt+0x7390>
  403eec:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  403ef0:	mov	w9, #0x1                   	// #1
  403ef4:	strb	w9, [x8, #3468]
  403ef8:	b	403cc8 <wcrtomb@plt+0x1458>
  403efc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f00:	mov	w9, #0x1                   	// #1
  403f04:	strb	w9, [x8, #1125]
  403f08:	b	403cc8 <wcrtomb@plt+0x1458>
  403f0c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f10:	mov	w9, #0x1                   	// #1
  403f14:	strb	w9, [x8, #1124]
  403f18:	b	403cc8 <wcrtomb@plt+0x1458>
  403f1c:	mov	w8, #0x1                   	// #1
  403f20:	str	w8, [sp, #24]
  403f24:	b	403cc8 <wcrtomb@plt+0x1458>
  403f28:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f2c:	mov	w9, #0x1                   	// #1
  403f30:	strb	w9, [x8, #1115]
  403f34:	b	403cc8 <wcrtomb@plt+0x1458>
  403f38:	mov	w8, #0xffffffff            	// #-1
  403f3c:	str	w8, [sp, #24]
  403f40:	b	403cc8 <wcrtomb@plt+0x1458>
  403f44:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f48:	mov	w9, #0x2                   	// #2
  403f4c:	str	w9, [x8, #1160]
  403f50:	b	403cc8 <wcrtomb@plt+0x1458>
  403f54:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f58:	ldr	x21, [x8, #1064]
  403f5c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403f60:	add	x1, x1, #0xee2
  403f64:	mov	x0, x21
  403f68:	bl	402600 <strcmp@plt>
  403f6c:	cbz	w0, 404484 <wcrtomb@plt+0x1c14>
  403f70:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403f74:	add	x1, x1, #0xee7
  403f78:	mov	x0, x21
  403f7c:	bl	402600 <strcmp@plt>
  403f80:	cbnz	w0, 405564 <wcrtomb@plt+0x2cf4>
  403f84:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f88:	mov	w9, #0x2                   	// #2
  403f8c:	str	w9, [x8, #1152]
  403f90:	b	403cc8 <wcrtomb@plt+0x1458>
  403f94:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403f98:	mov	w9, #0x1                   	// #1
  403f9c:	strb	w9, [x8, #1120]
  403fa0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403fa4:	mov	w9, #0x3                   	// #3
  403fa8:	str	w9, [x8, #848]
  403fac:	str	w27, [sp, #28]
  403fb0:	b	403cc8 <wcrtomb@plt+0x1458>
  403fb4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403fb8:	mov	w9, #0x1                   	// #1
  403fbc:	strb	w9, [x8, #1119]
  403fc0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403fc4:	str	wzr, [x8, #952]
  403fc8:	b	403cc8 <wcrtomb@plt+0x1458>
  403fcc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403fd0:	ldr	x26, [x8, #1064]
  403fd4:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403fd8:	add	x21, x21, #0x4c8
  403fdc:	b	4040b8 <wcrtomb@plt+0x1848>
  403fe0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403fe4:	strb	wzr, [x8, #1112]
  403fe8:	b	403cc8 <wcrtomb@plt+0x1458>
  403fec:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  403ff0:	ldr	x26, [x8, #1064]
  403ff4:	adrp	x4, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  403ff8:	add	x4, x4, #0xd75
  403ffc:	add	x3, sp, #0xa8
  404000:	mov	w2, #0xa                   	// #10
  404004:	mov	x0, x26
  404008:	mov	x1, xzr
  40400c:	bl	4175c0 <wcrtomb@plt+0x14d50>
  404010:	cmp	w0, #0x1
  404014:	b.hi	405528 <wcrtomb@plt+0x2cb8>  // b.pmore
  404018:	ldr	x8, [sp, #168]
  40401c:	tbz	x8, #63, 403cc8 <wcrtomb@plt+0x1458>
  404020:	b	405528 <wcrtomb@plt+0x2cb8>
  404024:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404028:	mov	w9, #0x1                   	// #1
  40402c:	strb	w9, [x8, #1117]
  404030:	b	403cc8 <wcrtomb@plt+0x1458>
  404034:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404038:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40403c:	ldr	x1, [x8, #1064]
  404040:	ldr	x5, [x9, #944]
  404044:	adrp	x21, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404048:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40404c:	adrp	x2, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404050:	add	x21, x21, #0x6d4
  404054:	add	x0, x0, #0xf14
  404058:	add	x2, x2, #0x6e0
  40405c:	mov	w4, #0x4                   	// #4
  404060:	mov	x3, x21
  404064:	bl	40a4dc <wcrtomb@plt+0x7c6c>
  404068:	ldr	w8, [x21, x0, lsl #2]
  40406c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404070:	cmp	x0, #0x1
  404074:	str	w8, [x9, #848]
  404078:	ldr	w8, [sp, #28]
  40407c:	csel	w8, w27, w8, eq  // eq = none
  404080:	str	w8, [sp, #28]
  404084:	b	403cc8 <wcrtomb@plt+0x1458>
  404088:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40408c:	mov	w9, #0x1                   	// #1
  404090:	strb	w9, [x8, #1113]
  404094:	b	403cc8 <wcrtomb@plt+0x1458>
  404098:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40409c:	mov	w9, #0x1                   	// #1
  4040a0:	strb	w9, [x8, #1121]
  4040a4:	b	403cc8 <wcrtomb@plt+0x1458>
  4040a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4040ac:	ldr	x26, [x8, #1064]
  4040b0:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4040b4:	add	x21, x21, #0x4c0
  4040b8:	adrp	x4, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4040bc:	add	x4, x4, #0xd75
  4040c0:	mov	w2, #0xa                   	// #10
  4040c4:	mov	x0, x26
  4040c8:	mov	x1, xzr
  4040cc:	mov	x3, x21
  4040d0:	bl	4175c0 <wcrtomb@plt+0x14d50>
  4040d4:	cmp	w0, #0x1
  4040d8:	b.hi	405528 <wcrtomb@plt+0x2cb8>  // b.pmore
  4040dc:	ldr	x8, [x21]
  4040e0:	tbz	x8, #63, 403cc8 <wcrtomb@plt+0x1458>
  4040e4:	b	405528 <wcrtomb@plt+0x2cb8>
  4040e8:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4040ec:	add	x0, x0, #0xf09
  4040f0:	b	403cbc <wcrtomb@plt+0x144c>
  4040f4:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4040f8:	add	x0, x0, #0xf7f
  4040fc:	b	403cbc <wcrtomb@plt+0x144c>
  404100:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404104:	ldr	x8, [x8, #1064]
  404108:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40410c:	str	x8, [x9, #1232]
  404110:	b	403cc8 <wcrtomb@plt+0x1458>
  404114:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404118:	add	x0, x0, #0xf0f
  40411c:	b	403cbc <wcrtomb@plt+0x144c>
  404120:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404124:	ldr	x21, [x23, #1064]
  404128:	mov	x0, x21
  40412c:	bl	402270 <strlen@plt>
  404130:	ldur	x8, [x29, #-168]
  404134:	ldr	x10, [sp, #176]
  404138:	add	x9, x0, #0x1
  40413c:	str	x9, [sp, #16]
  404140:	add	x9, x9, x8
  404144:	mov	x26, x0
  404148:	cmp	x10, x9
  40414c:	b.cs	4043c4 <wcrtomb@plt+0x1b54>  // b.hs, b.nlast
  404150:	ldur	x0, [x29, #-160]
  404154:	add	x1, sp, #0xb0
  404158:	str	x9, [sp, #176]
  40415c:	bl	417428 <wcrtomb@plt+0x14bb8>
  404160:	ldur	x8, [x29, #-168]
  404164:	ldr	x21, [x23, #1064]
  404168:	mov	x27, x0
  40416c:	stur	x0, [x29, #-160]
  404170:	b	4043c8 <wcrtomb@plt+0x1b58>
  404174:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404178:	mov	w9, #0x1                   	// #1
  40417c:	strb	w9, [x8, #1114]
  404180:	b	403cc8 <wcrtomb@plt+0x1458>
  404184:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404188:	ldr	x0, [x21, #1064]
  40418c:	bl	412990 <wcrtomb@plt+0x10120>
  404190:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404194:	ldr	x0, [x23, #1408]
  404198:	cbnz	x0, 4041a4 <wcrtomb@plt+0x1934>
  40419c:	bl	412be8 <wcrtomb@plt+0x10378>
  4041a0:	str	x0, [x23, #1408]
  4041a4:	ldr	x1, [x21, #1064]
  4041a8:	mov	w2, #0x50000000            	// #1342177280
  4041ac:	bl	413118 <wcrtomb@plt+0x108a8>
  4041b0:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4041b4:	ldr	x0, [x23, #1416]
  4041b8:	cbnz	x0, 4041c4 <wcrtomb@plt+0x1954>
  4041bc:	bl	412be8 <wcrtomb@plt+0x10378>
  4041c0:	str	x0, [x23, #1416]
  4041c4:	ldr	x1, [x21, #1064]
  4041c8:	mov	w2, #0x10000000            	// #268435456
  4041cc:	bl	413118 <wcrtomb@plt+0x108a8>
  4041d0:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4041d4:	b	403cc8 <wcrtomb@plt+0x1458>
  4041d8:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4041dc:	ldr	x1, [x21, #1392]
  4041e0:	cbnz	x1, 4041f0 <wcrtomb@plt+0x1980>
  4041e4:	bl	412be8 <wcrtomb@plt+0x10378>
  4041e8:	mov	x1, x0
  4041ec:	str	x0, [x21, #1392]
  4041f0:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4041f4:	ldr	x2, [x21, #1064]
  4041f8:	adrp	x0, 413000 <wcrtomb@plt+0x10790>
  4041fc:	add	x0, x0, #0x118
  404200:	mov	w3, #0x50000000            	// #1342177280
  404204:	mov	w4, #0xa                   	// #10
  404208:	bl	413620 <wcrtomb@plt+0x10db0>
  40420c:	cbnz	w0, 405570 <wcrtomb@plt+0x2d00>
  404210:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404214:	ldr	x1, [x23, #1400]
  404218:	cbnz	x1, 404228 <wcrtomb@plt+0x19b8>
  40421c:	bl	412be8 <wcrtomb@plt+0x10378>
  404220:	mov	x1, x0
  404224:	str	x0, [x23, #1400]
  404228:	ldr	x2, [x21, #1064]
  40422c:	adrp	x0, 413000 <wcrtomb@plt+0x10790>
  404230:	add	x0, x0, #0x118
  404234:	mov	w3, #0x10000000            	// #268435456
  404238:	mov	w4, #0xa                   	// #10
  40423c:	bl	413620 <wcrtomb@plt+0x10db0>
  404240:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404244:	cbz	w0, 403cc8 <wcrtomb@plt+0x1458>
  404248:	b	405570 <wcrtomb@plt+0x2d00>
  40424c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404250:	mov	w9, #0x1                   	// #1
  404254:	strb	w9, [x8, #1116]
  404258:	b	403cc8 <wcrtomb@plt+0x1458>
  40425c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404260:	ldr	x0, [x8, #1064]
  404264:	b	403cbc <wcrtomb@plt+0x144c>
  404268:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40426c:	ldr	x0, [x8, #1064]
  404270:	adrp	x3, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404274:	adrp	x4, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404278:	add	x3, x3, #0x4b8
  40427c:	add	x4, x4, #0xd75
  404280:	mov	w2, #0xa                   	// #10
  404284:	mov	x1, xzr
  404288:	bl	4175c0 <wcrtomb@plt+0x14d50>
  40428c:	cmp	w0, #0x2
  404290:	b.cc	403cc8 <wcrtomb@plt+0x1458>  // b.lo, b.ul, b.last
  404294:	b	405580 <wcrtomb@plt+0x2d10>
  404298:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40429c:	mov	w9, #0x1                   	// #1
  4042a0:	strb	w9, [x8, #1118]
  4042a4:	b	403cc8 <wcrtomb@plt+0x1458>
  4042a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4042ac:	ldr	x21, [x8, #1064]
  4042b0:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4042b4:	add	x1, x1, #0xf22
  4042b8:	mov	x0, x21
  4042bc:	bl	402600 <strcmp@plt>
  4042c0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4042c4:	cbz	w0, 404494 <wcrtomb@plt+0x1c24>
  4042c8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4042cc:	add	x1, x1, #0x11c
  4042d0:	mov	x0, x21
  4042d4:	mov	x23, x8
  4042d8:	bl	402370 <fopen@plt>
  4042dc:	mov	x26, x0
  4042e0:	cbnz	x0, 40449c <wcrtomb@plt+0x1c2c>
  4042e4:	b	4055a4 <wcrtomb@plt+0x2d34>
  4042e8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4042ec:	ldr	x26, [x8, #1064]
  4042f0:	cbz	x26, 404468 <wcrtomb@plt+0x1bf8>
  4042f4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4042f8:	add	x1, x1, #0xc05
  4042fc:	mov	x0, x26
  404300:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  404304:	cbz	w0, 404458 <wcrtomb@plt+0x1be8>
  404308:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40430c:	add	x1, x1, #0xf57
  404310:	mov	x0, x26
  404314:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  404318:	cbz	w0, 404458 <wcrtomb@plt+0x1be8>
  40431c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404320:	add	x1, x1, #0xf5b
  404324:	mov	x0, x26
  404328:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  40432c:	cbz	w0, 404458 <wcrtomb@plt+0x1be8>
  404330:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404334:	add	x1, x1, #0xf61
  404338:	mov	x0, x26
  40433c:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  404340:	cbz	w0, 404668 <wcrtomb@plt+0x1df8>
  404344:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404348:	add	x1, x1, #0xf67
  40434c:	mov	x0, x26
  404350:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  404354:	cbz	w0, 404668 <wcrtomb@plt+0x1df8>
  404358:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40435c:	add	x1, x1, #0xf6a
  404360:	mov	x0, x26
  404364:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  404368:	cbz	w0, 404668 <wcrtomb@plt+0x1df8>
  40436c:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404370:	add	x1, x1, #0xf6f
  404374:	mov	x0, x26
  404378:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  40437c:	cbz	w0, 404468 <wcrtomb@plt+0x1bf8>
  404380:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404384:	add	x1, x1, #0xf77
  404388:	mov	x0, x26
  40438c:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  404390:	cbz	w0, 404468 <wcrtomb@plt+0x1bf8>
  404394:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404398:	add	x1, x1, #0xf74
  40439c:	mov	x0, x26
  4043a0:	bl	40a7b8 <wcrtomb@plt+0x7f48>
  4043a4:	cbz	w0, 404468 <wcrtomb@plt+0x1bf8>
  4043a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4043ac:	mov	w9, #0x1                   	// #1
  4043b0:	str	w9, [x8, #1168]
  4043b4:	b	403cc8 <wcrtomb@plt+0x1458>
  4043b8:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4043bc:	strb	wzr, [x8, #3470]
  4043c0:	b	403cc8 <wcrtomb@plt+0x1458>
  4043c4:	ldur	x27, [x29, #-160]
  4043c8:	add	x0, x27, x8
  4043cc:	mov	x1, x21
  4043d0:	mov	x2, x26
  4043d4:	mov	x23, x0
  4043d8:	bl	402210 <memcpy@plt>
  4043dc:	ldur	x8, [x29, #-168]
  4043e0:	mov	w9, #0xa                   	// #10
  4043e4:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4043e8:	add	x21, x21, #0x4a8
  4043ec:	add	x8, x8, x26
  4043f0:	add	x10, x8, #0x1
  4043f4:	stur	x10, [x29, #-168]
  4043f8:	strb	w9, [x27, x8]
  4043fc:	ldr	x8, [x21, #96]
  404400:	ldr	x9, [x21]
  404404:	cmp	x8, x9
  404408:	b.ls	404424 <wcrtomb@plt+0x1bb4>  // b.plast
  40440c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404410:	ldr	x0, [x8, #1200]
  404414:	ldr	x8, [sp, #16]
  404418:	mov	x27, x23
  40441c:	mov	x23, x8
  404420:	b	4045f4 <wcrtomb@plt+0x1d84>
  404424:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404428:	ldr	x0, [x9, #1200]
  40442c:	ldr	x10, [sp, #16]
  404430:	cbz	x0, 4045cc <wcrtomb@plt+0x1d5c>
  404434:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  404438:	movk	x9, #0x555, lsl #48
  40443c:	cmp	x8, x9
  404440:	b.cs	404850 <wcrtomb@plt+0x1fe0>  // b.hs, b.nlast
  404444:	add	x8, x8, x8, lsr #1
  404448:	mov	x27, x23
  40444c:	add	x8, x8, #0x1
  404450:	mov	x23, x10
  404454:	b	4045e0 <wcrtomb@plt+0x1d70>
  404458:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40445c:	mov	w9, #0x1                   	// #1
  404460:	str	w9, [x8, #1164]
  404464:	b	403cc8 <wcrtomb@plt+0x1458>
  404468:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40446c:	mov	w9, #0x2                   	// #2
  404470:	str	w9, [x8, #1164]
  404474:	b	403cc8 <wcrtomb@plt+0x1458>
  404478:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40447c:	str	wzr, [x8, #1156]
  404480:	b	403cc8 <wcrtomb@plt+0x1458>
  404484:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404488:	mov	w9, #0x1                   	// #1
  40448c:	str	w9, [x8, #1152]
  404490:	b	403cc8 <wcrtomb@plt+0x1458>
  404494:	ldr	x26, [x8, #1088]
  404498:	mov	x23, x8
  40449c:	ldp	x21, x27, [x29, #-168]
  4044a0:	mov	x8, x21
  4044a4:	str	x21, [sp, #16]
  4044a8:	ldr	x9, [sp, #176]
  4044ac:	add	x10, x8, #0x1
  4044b0:	cmp	x9, x10
  4044b4:	b.hi	4044f0 <wcrtomb@plt+0x1c80>  // b.pmore
  4044b8:	b	4044d8 <wcrtomb@plt+0x1c68>
  4044bc:	ldur	x8, [x29, #-168]
  4044c0:	add	x8, x8, x0
  4044c4:	stur	x8, [x29, #-168]
  4044c8:	ldr	x9, [sp, #176]
  4044cc:	add	x10, x8, #0x1
  4044d0:	cmp	x9, x10
  4044d4:	b.hi	4044f0 <wcrtomb@plt+0x1c80>  // b.pmore
  4044d8:	add	x1, sp, #0xb0
  4044dc:	mov	x0, x27
  4044e0:	bl	417428 <wcrtomb@plt+0x14bb8>
  4044e4:	ldr	x9, [sp, #176]
  4044e8:	ldur	x8, [x29, #-168]
  4044ec:	mov	x27, x0
  4044f0:	mvn	x10, x8
  4044f4:	add	x2, x9, x10
  4044f8:	add	x0, x27, x8
  4044fc:	mov	w1, #0x1                   	// #1
  404500:	mov	x3, x26
  404504:	bl	4025c0 <fread_unlocked@plt>
  404508:	cbnz	x0, 4044bc <wcrtomb@plt+0x1c4c>
  40450c:	stur	x27, [x29, #-160]
  404510:	ldrb	w8, [x26]
  404514:	tbnz	w8, #5, 4055a4 <wcrtomb@plt+0x2d34>
  404518:	ldr	x8, [x23, #1088]
  40451c:	cmp	x26, x8
  404520:	b.eq	40452c <wcrtomb@plt+0x1cbc>  // b.none
  404524:	mov	x0, x26
  404528:	bl	402340 <fclose@plt>
  40452c:	ldp	x8, x26, [x29, #-168]
  404530:	ldr	x11, [sp, #16]
  404534:	cmp	x21, x8
  404538:	b.eq	404568 <wcrtomb@plt+0x1cf8>  // b.none
  40453c:	add	x9, x8, x26
  404540:	ldurb	w9, [x9, #-1]
  404544:	cmp	w9, #0xa
  404548:	b.ne	404554 <wcrtomb@plt+0x1ce4>  // b.any
  40454c:	mov	x11, x8
  404550:	b	404568 <wcrtomb@plt+0x1cf8>
  404554:	add	x9, x8, #0x1
  404558:	mov	w10, #0xa                   	// #10
  40455c:	stur	x9, [x29, #-168]
  404560:	strb	w10, [x26, x8]
  404564:	ldur	x11, [x29, #-168]
  404568:	adrp	x12, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40456c:	add	x12, x12, #0x4a8
  404570:	ldr	x8, [x12, #96]
  404574:	ldr	x9, [x12]
  404578:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40457c:	ldr	x13, [x10, #1064]
  404580:	cmp	x8, x9
  404584:	b.ls	40459c <wcrtomb@plt+0x1d2c>  // b.plast
  404588:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40458c:	ldr	x0, [x8, #1200]
  404590:	mov	x27, x21
  404594:	mov	x21, x11
  404598:	b	4046a4 <wcrtomb@plt+0x1e34>
  40459c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4045a0:	ldr	x0, [x9, #1200]
  4045a4:	cbz	x0, 404650 <wcrtomb@plt+0x1de0>
  4045a8:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  4045ac:	movk	x9, #0x555, lsl #48
  4045b0:	cmp	x8, x9
  4045b4:	b.cs	404850 <wcrtomb@plt+0x1fe0>  // b.hs, b.nlast
  4045b8:	add	x8, x8, x8, lsr #1
  4045bc:	mov	x23, x13
  4045c0:	mov	x27, x21
  4045c4:	add	x8, x8, #0x1
  4045c8:	b	404680 <wcrtomb@plt+0x1e10>
  4045cc:	mov	x27, x23
  4045d0:	cbz	x8, 404674 <wcrtomb@plt+0x1e04>
  4045d4:	lsr	x9, x8, #59
  4045d8:	mov	x23, x10
  4045dc:	cbnz	x9, 404850 <wcrtomb@plt+0x1fe0>
  4045e0:	lsl	x1, x8, #4
  4045e4:	str	x8, [x21, #96]
  4045e8:	bl	417310 <wcrtomb@plt+0x14aa0>
  4045ec:	ldr	x9, [x21]
  4045f0:	str	x0, [x21, #8]
  4045f4:	ldr	x26, [x21, #48]
  4045f8:	add	x8, x0, x9, lsl #4
  4045fc:	add	x9, x9, #0x1
  404600:	mov	w1, #0xa                   	// #10
  404604:	add	x10, x26, #0x1
  404608:	str	x10, [x8, #8]
  40460c:	adrp	x10, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404610:	add	x10, x10, #0xd75
  404614:	mov	x0, x27
  404618:	mov	x2, x23
  40461c:	str	x10, [x8]
  404620:	str	x9, [x21]
  404624:	bl	4026d0 <memchr@plt>
  404628:	mov	x21, xzr
  40462c:	cbz	x0, 404700 <wcrtomb@plt+0x1e90>
  404630:	add	x23, x27, x23
  404634:	add	x0, x0, #0x1
  404638:	sub	x2, x23, x0
  40463c:	mov	w1, #0xa                   	// #10
  404640:	add	x21, x21, #0x1
  404644:	bl	4026d0 <memchr@plt>
  404648:	cbnz	x0, 404634 <wcrtomb@plt+0x1dc4>
  40464c:	b	404700 <wcrtomb@plt+0x1e90>
  404650:	mov	x23, x13
  404654:	mov	x27, x21
  404658:	cbz	x8, 40467c <wcrtomb@plt+0x1e0c>
  40465c:	lsr	x9, x8, #59
  404660:	cbz	x9, 404680 <wcrtomb@plt+0x1e10>
  404664:	b	404850 <wcrtomb@plt+0x1fe0>
  404668:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40466c:	str	wzr, [x8, #1164]
  404670:	b	403cc8 <wcrtomb@plt+0x1458>
  404674:	mov	w8, #0x8                   	// #8
  404678:	b	404450 <wcrtomb@plt+0x1be0>
  40467c:	mov	w8, #0x8                   	// #8
  404680:	lsl	x1, x8, #4
  404684:	mov	x21, x11
  404688:	str	x8, [x12, #96]
  40468c:	bl	417310 <wcrtomb@plt+0x14aa0>
  404690:	adrp	x12, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404694:	add	x12, x12, #0x4a8
  404698:	ldr	x9, [x12]
  40469c:	mov	x13, x23
  4046a0:	str	x0, [x12, #8]
  4046a4:	add	x8, x26, x27
  4046a8:	mov	x23, x26
  4046ac:	ldr	x26, [x12, #48]
  4046b0:	mov	x10, x27
  4046b4:	sub	x2, x21, x10
  4046b8:	add	x10, x0, x9, lsl #4
  4046bc:	add	x9, x9, #0x1
  4046c0:	add	x11, x26, #0x1
  4046c4:	mov	w1, #0xa                   	// #10
  4046c8:	mov	x0, x8
  4046cc:	mov	x27, x21
  4046d0:	stp	x13, x11, [x10]
  4046d4:	str	x9, [x12]
  4046d8:	bl	4026d0 <memchr@plt>
  4046dc:	mov	x21, xzr
  4046e0:	cbz	x0, 404700 <wcrtomb@plt+0x1e90>
  4046e4:	add	x23, x23, x27
  4046e8:	add	x0, x0, #0x1
  4046ec:	sub	x2, x23, x0
  4046f0:	mov	w1, #0xa                   	// #10
  4046f4:	add	x21, x21, #0x1
  4046f8:	bl	4026d0 <memchr@plt>
  4046fc:	cbnz	x0, 4046e8 <wcrtomb@plt+0x1e78>
  404700:	add	x8, x21, x26
  404704:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404708:	str	x8, [x9, #1240]
  40470c:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404710:	b	403cc8 <wcrtomb@plt+0x1458>
  404714:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404718:	ldrb	w8, [x8, #1115]
  40471c:	cmp	w8, #0x1
  404720:	b.ne	404770 <wcrtomb@plt+0x1f00>  // b.any
  404724:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404728:	ldr	x19, [x8, #1080]
  40472c:	bl	4137e0 <wcrtomb@plt+0x10f70>
  404730:	adrp	x2, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404734:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404738:	mov	x1, x0
  40473c:	add	x2, x2, #0xf7b
  404740:	add	x3, x3, #0xf84
  404744:	mov	x0, x19
  404748:	mov	x4, xzr
  40474c:	bl	417164 <wcrtomb@plt+0x148f4>
  404750:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404754:	add	x1, x1, #0xf88
  404758:	mov	w2, #0x5                   	// #5
  40475c:	mov	x0, xzr
  404760:	bl	402740 <dcgettext@plt>
  404764:	bl	4025b0 <puts@plt>
  404768:	mov	w0, wzr
  40476c:	b	4054c8 <wcrtomb@plt+0x2c58>
  404770:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404774:	ldr	w8, [x8, #1168]
  404778:	cbnz	w8, 4055c4 <wcrtomb@plt+0x2d54>
  40477c:	ldur	x8, [x29, #-160]
  404780:	cbz	x8, 404798 <wcrtomb@plt+0x1f28>
  404784:	ldur	x8, [x29, #-168]
  404788:	cbz	x8, 4047f8 <wcrtomb@plt+0x1f88>
  40478c:	sub	x8, x8, #0x1
  404790:	stur	x8, [x29, #-168]
  404794:	b	4048cc <wcrtomb@plt+0x205c>
  404798:	ldrsw	x22, [x23, #1072]
  40479c:	cmp	w22, w20
  4047a0:	b.ge	4054f0 <wcrtomb@plt+0x2c80>  // b.tcont
  4047a4:	ldr	x21, [x19, x22, lsl #3]
  4047a8:	mov	x0, x21
  4047ac:	bl	402270 <strlen@plt>
  4047b0:	stur	x0, [x29, #-168]
  4047b4:	add	w8, w22, #0x1
  4047b8:	add	x1, x0, #0x1
  4047bc:	mov	x0, x21
  4047c0:	str	w8, [x23, #1072]
  4047c4:	bl	417500 <wcrtomb@plt+0x14c90>
  4047c8:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4047cc:	add	x21, x21, #0x4a8
  4047d0:	ldr	x8, [x21, #96]
  4047d4:	ldr	x9, [x21]
  4047d8:	ldur	x25, [x29, #-168]
  4047dc:	mov	x24, x0
  4047e0:	stur	x0, [x29, #-160]
  4047e4:	cmp	x8, x9
  4047e8:	b.ls	40481c <wcrtomb@plt+0x1fac>  // b.plast
  4047ec:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4047f0:	ldr	x0, [x8, #1200]
  4047f4:	b	40486c <wcrtomb@plt+0x1ffc>
  4047f8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4047fc:	ldrb	w9, [x8, #1124]
  404800:	adrp	x10, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404804:	adrp	x11, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404808:	strb	wzr, [x10, #3468]
  40480c:	eor	w9, w9, #0x1
  404810:	strb	w9, [x8, #1124]
  404814:	strb	wzr, [x11, #3469]
  404818:	b	4048cc <wcrtomb@plt+0x205c>
  40481c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404820:	ldr	x0, [x9, #1200]
  404824:	cbz	x0, 404844 <wcrtomb@plt+0x1fd4>
  404828:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40482c:	movk	x9, #0x555, lsl #48
  404830:	cmp	x8, x9
  404834:	b.cs	404850 <wcrtomb@plt+0x1fe0>  // b.hs, b.nlast
  404838:	add	x8, x8, x8, lsr #1
  40483c:	add	x8, x8, #0x1
  404840:	b	404858 <wcrtomb@plt+0x1fe8>
  404844:	cbz	x8, 404854 <wcrtomb@plt+0x1fe4>
  404848:	lsr	x9, x8, #59
  40484c:	cbz	x9, 404858 <wcrtomb@plt+0x1fe8>
  404850:	bl	41757c <wcrtomb@plt+0x14d0c>
  404854:	mov	w8, #0x8                   	// #8
  404858:	lsl	x1, x8, #4
  40485c:	str	x8, [x21, #96]
  404860:	bl	417310 <wcrtomb@plt+0x14aa0>
  404864:	ldr	x9, [x21]
  404868:	str	x0, [x21, #8]
  40486c:	ldr	x8, [x21, #48]
  404870:	add	x10, x0, x9, lsl #4
  404874:	add	x9, x9, #0x1
  404878:	mov	w1, #0xa                   	// #10
  40487c:	add	x22, x8, #0x1
  404880:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404884:	add	x8, x8, #0xd75
  404888:	mov	x0, x24
  40488c:	mov	x2, x25
  404890:	stp	x8, x22, [x10]
  404894:	str	x9, [x21]
  404898:	bl	4026d0 <memchr@plt>
  40489c:	mov	x21, xzr
  4048a0:	cbz	x0, 4048c0 <wcrtomb@plt+0x2050>
  4048a4:	add	x23, x24, x25
  4048a8:	add	x0, x0, #0x1
  4048ac:	sub	x2, x23, x0
  4048b0:	mov	w1, #0xa                   	// #10
  4048b4:	add	x21, x21, #0x1
  4048b8:	bl	4026d0 <memchr@plt>
  4048bc:	cbnz	x0, 4048a8 <wcrtomb@plt+0x2038>
  4048c0:	add	x8, x22, x21
  4048c4:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4048c8:	str	x8, [x9, #1240]
  4048cc:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4048d0:	ldrb	w8, [x22, #1119]
  4048d4:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4048d8:	add	x21, x21, #0x45d
  4048dc:	tbz	w8, #0, 4048e8 <wcrtomb@plt+0x2078>
  4048e0:	mov	w8, wzr
  4048e4:	b	40490c <wcrtomb@plt+0x209c>
  4048e8:	add	x2, sp, #0x28
  4048ec:	mov	w1, #0x1                   	// #1
  4048f0:	mov	w0, wzr
  4048f4:	bl	402720 <__fxstat@plt>
  4048f8:	mov	w8, wzr
  4048fc:	cbz	w0, 404a20 <wcrtomb@plt+0x21b0>
  404900:	ldrb	w9, [x22, #1119]
  404904:	cmp	w9, #0x1
  404908:	b.ne	4049fc <wcrtomb@plt+0x218c>  // b.any
  40490c:	mov	w9, wzr
  404910:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404914:	str	wzr, [x10, #1160]
  404918:	mov	w11, #0x1                   	// #1
  40491c:	mov	w10, wzr
  404920:	strb	wzr, [x21]
  404924:	strb	w11, [x21, #11]
  404928:	adrp	x12, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40492c:	add	x12, x12, #0x46c
  404930:	ldur	x13, [x12, #92]
  404934:	orr	w10, w11, w10
  404938:	strb	w10, [x12]
  40493c:	tbnz	x13, #63, 404998 <wcrtomb@plt+0x2128>
  404940:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404944:	ldr	x11, [x10, #1216]
  404948:	tbnz	x11, #63, 4049b0 <wcrtomb@plt+0x2140>
  40494c:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404950:	ldr	x10, [x10, #1208]
  404954:	cbz	x10, 4049c4 <wcrtomb@plt+0x2154>
  404958:	cmp	w9, #0x2
  40495c:	b.eq	4049cc <wcrtomb@plt+0x215c>  // b.none
  404960:	ldur	x9, [x29, #-168]
  404964:	cbnz	x9, 4049cc <wcrtomb@plt+0x215c>
  404968:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40496c:	ldrb	w9, [x9, #1124]
  404970:	cbz	w9, 4049cc <wcrtomb@plt+0x215c>
  404974:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404978:	adrp	x10, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40497c:	ldrb	w9, [x9, #3469]
  404980:	ldrb	w10, [x10, #3468]
  404984:	orr	w9, w10, w9
  404988:	tst	w9, #0xff
  40498c:	b.ne	4049cc <wcrtomb@plt+0x215c>  // b.any
  404990:	mov	w0, #0x1                   	// #1
  404994:	b	4054c8 <wcrtomb@plt+0x2c58>
  404998:	ldr	x10, [sp, #168]
  40499c:	adrp	x11, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4049a0:	str	x10, [x11, #1224]
  4049a4:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4049a8:	ldr	x11, [x10, #1216]
  4049ac:	tbz	x11, #63, 40494c <wcrtomb@plt+0x20dc>
  4049b0:	ldr	x11, [sp, #168]
  4049b4:	str	x11, [x10, #1216]
  4049b8:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4049bc:	ldr	x10, [x10, #1208]
  4049c0:	cbnz	x10, 404958 <wcrtomb@plt+0x20e8>
  4049c4:	cmp	w9, #0x2
  4049c8:	b.ne	404990 <wcrtomb@plt+0x2120>  // b.any
  4049cc:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4049d0:	ldr	w9, [x21, #1164]
  4049d4:	cmp	w9, #0x2
  4049d8:	b.ne	404ad4 <wcrtomb@plt+0x2264>  // b.any
  4049dc:	cbz	w8, 404ad0 <wcrtomb@plt+0x2260>
  4049e0:	bl	417b44 <wcrtomb@plt+0x152d4>
  4049e4:	cbz	w0, 404acc <wcrtomb@plt+0x225c>
  4049e8:	mov	w0, #0x1                   	// #1
  4049ec:	bl	4026e0 <isatty@plt>
  4049f0:	cmp	w0, #0x0
  4049f4:	cset	w8, ne  // ne = any
  4049f8:	b	404ad0 <wcrtomb@plt+0x2260>
  4049fc:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404a00:	add	x9, x9, #0x466
  404a04:	ldrb	w10, [x9]
  404a08:	ldur	w9, [x9, #34]
  404a0c:	tbnz	w10, #0, 404918 <wcrtomb@plt+0x20a8>
  404a10:	cbnz	w9, 404918 <wcrtomb@plt+0x20a8>
  404a14:	ldrb	w10, [x21]
  404a18:	ldrb	w11, [x21, #11]
  404a1c:	b	404928 <wcrtomb@plt+0x20b8>
  404a20:	ldr	w8, [sp, #56]
  404a24:	and	w8, w8, #0xf000
  404a28:	cmp	w8, #0x2, lsl #12
  404a2c:	b.eq	404a78 <wcrtomb@plt+0x2208>  // b.none
  404a30:	cmp	w8, #0x8, lsl #12
  404a34:	b.ne	404abc <wcrtomb@plt+0x224c>  // b.any
  404a38:	ldur	q0, [sp, #104]
  404a3c:	ldur	q1, [sp, #120]
  404a40:	ldur	q2, [sp, #136]
  404a44:	ldur	q3, [sp, #152]
  404a48:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404a4c:	add	x9, x9, #0x590
  404a50:	stp	q0, q1, [x9, #64]
  404a54:	ldur	q0, [sp, #40]
  404a58:	ldur	q1, [sp, #56]
  404a5c:	stp	q2, q3, [x9, #96]
  404a60:	ldur	q2, [sp, #72]
  404a64:	ldur	q3, [sp, #88]
  404a68:	mov	w8, wzr
  404a6c:	stp	q0, q1, [x9]
  404a70:	stp	q2, q3, [x9, #32]
  404a74:	b	404900 <wcrtomb@plt+0x2090>
  404a78:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404a7c:	add	x1, x1, #0xfe5
  404a80:	sub	x2, x29, #0x98
  404a84:	mov	w0, wzr
  404a88:	bl	402800 <__xstat@plt>
  404a8c:	cbnz	w0, 404ac4 <wcrtomb@plt+0x2254>
  404a90:	ldr	x8, [sp, #48]
  404a94:	ldur	x9, [x29, #-144]
  404a98:	cmp	x8, x9
  404a9c:	b.ne	404ac4 <wcrtomb@plt+0x2254>  // b.any
  404aa0:	ldr	x8, [sp, #40]
  404aa4:	ldur	x9, [x29, #-152]
  404aa8:	cmp	x8, x9
  404aac:	mov	w8, #0x1                   	// #1
  404ab0:	b.ne	404900 <wcrtomb@plt+0x2090>  // b.any
  404ab4:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404ab8:	strb	w8, [x9, #1126]
  404abc:	mov	w8, wzr
  404ac0:	b	404900 <wcrtomb@plt+0x2090>
  404ac4:	mov	w8, #0x1                   	// #1
  404ac8:	b	404900 <wcrtomb@plt+0x2090>
  404acc:	mov	w8, wzr
  404ad0:	str	w8, [x21, #1164]
  404ad4:	bl	417b78 <wcrtomb@plt+0x15308>
  404ad8:	ldr	w8, [x21, #1164]
  404adc:	cbz	w8, 404d24 <wcrtomb@plt+0x24b4>
  404ae0:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404ae4:	add	x0, x0, #0xfef
  404ae8:	bl	4027f0 <getenv@plt>
  404aec:	cbz	x0, 404b04 <wcrtomb@plt+0x2294>
  404af0:	ldrb	w8, [x0]
  404af4:	cbz	w8, 404b04 <wcrtomb@plt+0x2294>
  404af8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404afc:	add	x8, x8, #0x360
  404b00:	stp	x0, x0, [x8]
  404b04:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404b08:	add	x0, x0, #0x278
  404b0c:	bl	4027f0 <getenv@plt>
  404b10:	cbz	x0, 404d24 <wcrtomb@plt+0x24b4>
  404b14:	ldrb	w8, [x0]
  404b18:	cbz	w8, 404d24 <wcrtomb@plt+0x24b4>
  404b1c:	bl	41753c <wcrtomb@plt+0x14ccc>
  404b20:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404b24:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404b28:	adrp	x24, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404b2c:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404b30:	mov	x27, x0
  404b34:	add	x21, x21, #0x284
  404b38:	add	x23, x23, #0xe88
  404b3c:	add	x24, x24, #0x287
  404b40:	add	x25, x25, #0x28a
  404b44:	mov	x28, x0
  404b48:	mov	x26, xzr
  404b4c:	b	404b54 <wcrtomb@plt+0x22e4>
  404b50:	add	x28, x28, #0x1
  404b54:	ldrb	w22, [x28]
  404b58:	cbz	w22, 404ba8 <wcrtomb@plt+0x2338>
  404b5c:	cmp	w22, #0x3d
  404b60:	b.eq	404b90 <wcrtomb@plt+0x2320>  // b.none
  404b64:	cmp	w22, #0x3a
  404b68:	b.eq	404ba8 <wcrtomb@plt+0x2338>  // b.none
  404b6c:	cbz	x26, 404b88 <wcrtomb@plt+0x2318>
  404b70:	cmp	w22, #0x3b
  404b74:	b.eq	404b50 <wcrtomb@plt+0x22e0>  // b.none
  404b78:	sub	w8, w22, #0x30
  404b7c:	cmp	w8, #0x9
  404b80:	b.ls	404b50 <wcrtomb@plt+0x22e0>  // b.plast
  404b84:	b	404d24 <wcrtomb@plt+0x24b4>
  404b88:	add	x28, x28, #0x1
  404b8c:	b	404b54 <wcrtomb@plt+0x22e4>
  404b90:	cbnz	x26, 404d24 <wcrtomb@plt+0x24b4>
  404b94:	cmp	x27, x28
  404b98:	b.eq	404d24 <wcrtomb@plt+0x24b4>  // b.none
  404b9c:	strb	wzr, [x28], #1
  404ba0:	mov	x26, x28
  404ba4:	b	404b54 <wcrtomb@plt+0x22e4>
  404ba8:	mov	x0, x21
  404bac:	mov	x1, x27
  404bb0:	strb	wzr, [x28], #1
  404bb4:	bl	402600 <strcmp@plt>
  404bb8:	cbz	w0, 404c90 <wcrtomb@plt+0x2420>
  404bbc:	mov	x0, x24
  404bc0:	mov	x1, x27
  404bc4:	bl	402600 <strcmp@plt>
  404bc8:	cbz	w0, 404c98 <wcrtomb@plt+0x2428>
  404bcc:	mov	x0, x25
  404bd0:	mov	x1, x27
  404bd4:	bl	402600 <strcmp@plt>
  404bd8:	cbz	w0, 404ca4 <wcrtomb@plt+0x2434>
  404bdc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404be0:	add	x0, x0, #0x28d
  404be4:	mov	x1, x27
  404be8:	bl	402600 <strcmp@plt>
  404bec:	cbz	w0, 404cb0 <wcrtomb@plt+0x2440>
  404bf0:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404bf4:	add	x0, x0, #0x290
  404bf8:	mov	x1, x27
  404bfc:	bl	402600 <strcmp@plt>
  404c00:	cbz	w0, 404cbc <wcrtomb@plt+0x244c>
  404c04:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404c08:	add	x0, x0, #0x293
  404c0c:	mov	x1, x27
  404c10:	bl	402600 <strcmp@plt>
  404c14:	cbz	w0, 404cc8 <wcrtomb@plt+0x2458>
  404c18:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404c1c:	add	x0, x0, #0xef
  404c20:	mov	x1, x27
  404c24:	bl	402600 <strcmp@plt>
  404c28:	cbz	w0, 404cd4 <wcrtomb@plt+0x2464>
  404c2c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404c30:	add	x0, x0, #0x296
  404c34:	mov	x1, x27
  404c38:	bl	402600 <strcmp@plt>
  404c3c:	cbz	w0, 404ce0 <wcrtomb@plt+0x2470>
  404c40:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404c44:	add	x0, x0, #0x299
  404c48:	mov	x1, x27
  404c4c:	bl	402600 <strcmp@plt>
  404c50:	cbz	w0, 404cec <wcrtomb@plt+0x247c>
  404c54:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  404c58:	add	x0, x0, #0x29c
  404c5c:	mov	x1, x27
  404c60:	bl	402600 <strcmp@plt>
  404c64:	cbz	w0, 404cf8 <wcrtomb@plt+0x2488>
  404c68:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  404c6c:	add	x0, x0, #0xf6c
  404c70:	mov	x1, x27
  404c74:	bl	402600 <strcmp@plt>
  404c78:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404c7c:	add	x9, x9, #0xf78
  404c80:	add	x8, x9, #0x18
  404c84:	cmp	w0, #0x0
  404c88:	csel	x8, x9, x8, eq  // eq = none
  404c8c:	b	404d00 <wcrtomb@plt+0x2490>
  404c90:	mov	x8, x23
  404c94:	b	404d00 <wcrtomb@plt+0x2490>
  404c98:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404c9c:	add	x8, x8, #0xea0
  404ca0:	b	404d00 <wcrtomb@plt+0x2490>
  404ca4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404ca8:	add	x8, x8, #0xeb8
  404cac:	b	404d00 <wcrtomb@plt+0x2490>
  404cb0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404cb4:	add	x8, x8, #0xed0
  404cb8:	b	404d00 <wcrtomb@plt+0x2490>
  404cbc:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404cc0:	add	x8, x8, #0xee8
  404cc4:	b	404d00 <wcrtomb@plt+0x2490>
  404cc8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404ccc:	add	x8, x8, #0xf00
  404cd0:	b	404d00 <wcrtomb@plt+0x2490>
  404cd4:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404cd8:	add	x8, x8, #0xf18
  404cdc:	b	404d00 <wcrtomb@plt+0x2490>
  404ce0:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404ce4:	add	x8, x8, #0xf30
  404ce8:	b	404d00 <wcrtomb@plt+0x2490>
  404cec:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404cf0:	add	x8, x8, #0xf48
  404cf4:	b	404d00 <wcrtomb@plt+0x2490>
  404cf8:	adrp	x8, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404cfc:	add	x8, x8, #0xf60
  404d00:	cbz	x26, 404d10 <wcrtomb@plt+0x24a0>
  404d04:	ldr	x9, [x8, #8]
  404d08:	cbz	x9, 404d10 <wcrtomb@plt+0x24a0>
  404d0c:	str	x26, [x9]
  404d10:	ldr	x8, [x8, #16]
  404d14:	cbz	x8, 404d1c <wcrtomb@plt+0x24ac>
  404d18:	blr	x8
  404d1c:	mov	x27, x28
  404d20:	cbnz	w22, 404b48 <wcrtomb@plt+0x22d8>
  404d24:	ldr	w26, [sp, #32]
  404d28:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404d2c:	mov	w8, wzr
  404d30:	mov	w9, #0x1                   	// #1
  404d34:	mov	w10, #0x1                   	// #1
  404d38:	add	x23, x23, #0x888
  404d3c:	b	404d54 <wcrtomb@plt+0x24e4>
  404d40:	mov	w11, w10
  404d44:	add	x9, x9, #0x1
  404d48:	cmp	x9, #0x100
  404d4c:	mov	w10, w11
  404d50:	b.eq	404d94 <wcrtomb@plt+0x2524>  // b.none
  404d54:	and	w11, w8, w9
  404d58:	tst	w11, #0xff
  404d5c:	b.ne	404d40 <wcrtomb@plt+0x24d0>  // b.any
  404d60:	add	x11, x23, x9
  404d64:	ldrb	w11, [x11, #3]
  404d68:	cmp	w11, #0x1
  404d6c:	b.eq	404d40 <wcrtomb@plt+0x24d0>  // b.none
  404d70:	mov	w11, w10
  404d74:	lsl	w10, w10, #1
  404d78:	cmp	x9, w10, sxtw
  404d7c:	b.ge	404d70 <wcrtomb@plt+0x2500>  // b.tcont
  404d80:	orr	w8, w8, w11
  404d84:	add	x9, x9, #0x1
  404d88:	cmp	x9, #0x100
  404d8c:	mov	w10, w11
  404d90:	b.ne	404d54 <wcrtomb@plt+0x24e4>  // b.any
  404d94:	and	x8, x8, #0xff
  404d98:	mov	x9, #0x101010101010101     	// #72340172838076673
  404d9c:	bic	w24, w26, w26, asr #31
  404da0:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404da4:	mul	x8, x8, x9
  404da8:	cmp	w24, #0x2
  404dac:	str	x8, [x10, #1296]
  404db0:	b.ne	404f04 <wcrtomb@plt+0x2694>  // b.any
  404db4:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404db8:	ldrb	w8, [x8, #2184]
  404dbc:	cbz	w8, 404e30 <wcrtomb@plt+0x25c0>
  404dc0:	ldp	x21, x22, [x29, #-168]
  404dc4:	stur	xzr, [x29, #-152]
  404dc8:	cbz	x21, 404e0c <wcrtomb@plt+0x259c>
  404dcc:	mov	x25, xzr
  404dd0:	add	x8, x22, x25
  404dd4:	ldrb	w9, [x8]
  404dd8:	add	x9, x23, x9
  404ddc:	ldrsb	x0, [x9, #3]
  404de0:	cmn	x0, #0x2
  404de4:	b.ne	404df8 <wcrtomb@plt+0x2588>  // b.any
  404de8:	sub	x1, x21, x25
  404dec:	sub	x2, x29, #0x98
  404df0:	mov	x0, x8
  404df4:	bl	419d80 <wcrtomb@plt+0x17510>
  404df8:	cmn	x0, #0x2
  404dfc:	b.cs	404ee4 <wcrtomb@plt+0x2674>  // b.hs, b.nlast
  404e00:	add	x25, x0, x25
  404e04:	cmp	x25, x21
  404e08:	b.cc	404dd0 <wcrtomb@plt+0x2560>  // b.lo, b.ul, b.last
  404e0c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404e10:	ldrb	w8, [x8, #3470]
  404e14:	cbz	w8, 404f04 <wcrtomb@plt+0x2694>
  404e18:	ldur	x26, [x29, #-168]
  404e1c:	mov	x25, xzr
  404e20:	sub	x8, x22, #0x1
  404e24:	stur	xzr, [x29, #-24]
  404e28:	str	x8, [sp, #16]
  404e2c:	b	404e70 <wcrtomb@plt+0x2600>
  404e30:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404e34:	ldr	x8, [x8, #1240]
  404e38:	mov	w24, #0x2                   	// #2
  404e3c:	cmp	x8, #0x1
  404e40:	b.ne	405250 <wcrtomb@plt+0x29e0>  // b.any
  404e44:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404e48:	ldrb	w8, [x8, #3468]
  404e4c:	ldr	w23, [sp, #24]
  404e50:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404e54:	cbnz	w8, 404eec <wcrtomb@plt+0x267c>
  404e58:	b	405258 <wcrtomb@plt+0x29e8>
  404e5c:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  404e60:	add	x23, x23, #0x888
  404e64:	bic	w8, w21, w21, asr #31
  404e68:	add	x25, x25, x8
  404e6c:	tbnz	w21, #31, 404ee4 <wcrtomb@plt+0x2674>
  404e70:	subs	x2, x26, x25
  404e74:	b.ls	404f00 <wcrtomb@plt+0x2690>  // b.plast
  404e78:	add	x1, x22, x25
  404e7c:	ldrb	w8, [x1]
  404e80:	add	x8, x23, x8
  404e84:	ldrsb	w21, [x8, #3]
  404e88:	tbz	w21, #31, 404e64 <wcrtomb@plt+0x25f4>
  404e8c:	sub	x0, x29, #0xc
  404e90:	sub	x3, x29, #0x18
  404e94:	bl	419da4 <wcrtomb@plt+0x17534>
  404e98:	cmp	x0, #0x10
  404e9c:	b.hi	404ee4 <wcrtomb@plt+0x2674>  // b.pmore
  404ea0:	mov	x21, x0
  404ea4:	ldur	w0, [x29, #-12]
  404ea8:	sub	x1, x29, #0x98
  404eac:	bl	4128a0 <wcrtomb@plt+0x10030>
  404eb0:	cbnz	w0, 404ee4 <wcrtomb@plt+0x2674>
  404eb4:	ldr	x8, [sp, #16]
  404eb8:	mov	x27, x21
  404ebc:	add	x23, x8, x25
  404ec0:	cmp	x27, #0x2
  404ec4:	b.lt	404e5c <wcrtomb@plt+0x25ec>  // b.tstop
  404ec8:	ldrb	w28, [x23, x27]
  404ecc:	sub	x27, x27, #0x1
  404ed0:	bl	4024d0 <__ctype_toupper_loc@plt>
  404ed4:	ldr	x8, [x0]
  404ed8:	ldr	w8, [x8, x28, lsl #2]
  404edc:	cmp	w8, w28
  404ee0:	b.eq	404ec0 <wcrtomb@plt+0x2650>  // b.none
  404ee4:	ldr	w23, [sp, #24]
  404ee8:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404eec:	sub	x0, x29, #0xa0
  404ef0:	sub	x1, x29, #0xa8
  404ef4:	bl	403834 <wcrtomb@plt+0xfc4>
  404ef8:	mov	w24, wzr
  404efc:	b	405258 <wcrtomb@plt+0x29e8>
  404f00:	ldr	w26, [sp, #32]
  404f04:	cmp	w24, #0x1
  404f08:	b.hi	405250 <wcrtomb@plt+0x29e0>  // b.pmore
  404f0c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  404f10:	ldr	x8, [x8, #1240]
  404f14:	cmp	x8, #0x2
  404f18:	b.cc	405250 <wcrtomb@plt+0x29e0>  // b.lo, b.ul, b.last
  404f1c:	ldp	x25, x28, [x29, #-168]
  404f20:	add	x0, x25, #0x1
  404f24:	bl	417290 <wcrtomb@plt+0x14a20>
  404f28:	cmp	w26, #0x1
  404f2c:	mov	x22, x0
  404f30:	stur	xzr, [x29, #-24]
  404f34:	str	x0, [sp, #32]
  404f38:	b.lt	404f50 <wcrtomb@plt+0x26e0>  // b.tstop
  404f3c:	cbz	x25, 405218 <wcrtomb@plt+0x29a8>
  404f40:	ldr	x22, [sp, #32]
  404f44:	mov	x26, x28
  404f48:	str	x28, [sp, #16]
  404f4c:	b	404fa0 <wcrtomb@plt+0x2730>
  404f50:	cbz	x25, 405218 <wcrtomb@plt+0x29a8>
  404f54:	ldr	x22, [sp, #32]
  404f58:	mov	x26, x28
  404f5c:	str	x28, [sp, #16]
  404f60:	b	4050e8 <wcrtomb@plt+0x2878>
  404f64:	sub	x2, x29, #0x18
  404f68:	mov	x0, x26
  404f6c:	mov	x1, x25
  404f70:	bl	419d80 <wcrtomb@plt+0x17510>
  404f74:	mov	x21, x0
  404f78:	cmp	x21, #0x10
  404f7c:	b.hi	405240 <wcrtomb@plt+0x29d0>  // b.pmore
  404f80:	mov	x0, x22
  404f84:	mov	x1, x26
  404f88:	mov	x2, x21
  404f8c:	bl	402210 <memcpy@plt>
  404f90:	add	x22, x22, x21
  404f94:	subs	x25, x25, x21
  404f98:	add	x26, x26, x21
  404f9c:	b.eq	405218 <wcrtomb@plt+0x29a8>  // b.none
  404fa0:	ldrb	w8, [x26]
  404fa4:	sub	w9, w8, #0x24
  404fa8:	cmp	w9, #0x58
  404fac:	b.hi	405010 <wcrtomb@plt+0x27a0>  // b.pmore
  404fb0:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404fb4:	add	x12, x12, #0x57e
  404fb8:	adr	x10, 404fcc <wcrtomb@plt+0x275c>
  404fbc:	ldrb	w11, [x12, x9]
  404fc0:	add	x10, x10, x11, lsl #2
  404fc4:	mov	w21, w24
  404fc8:	br	x10
  404fcc:	cmp	x25, #0x2
  404fd0:	b.cc	405008 <wcrtomb@plt+0x2798>  // b.lo, b.ul, b.last
  404fd4:	ldrb	w8, [x26, #1]!
  404fd8:	sub	w9, w8, #0xa
  404fdc:	cmp	w9, #0x6d
  404fe0:	b.hi	405000 <wcrtomb@plt+0x2790>  // b.pmore
  404fe4:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  404fe8:	add	x12, x12, #0x5d7
  404fec:	adr	x10, 405000 <wcrtomb@plt+0x2790>
  404ff0:	ldrb	w11, [x12, x9]
  404ff4:	add	x10, x10, x11, lsl #2
  404ff8:	mov	w21, w24
  404ffc:	br	x10
  405000:	sub	x25, x25, #0x1
  405004:	b	405010 <wcrtomb@plt+0x27a0>
  405008:	mov	w8, #0x5c                  	// #92
  40500c:	mov	w25, #0x1                   	// #1
  405010:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  405014:	add	x8, x23, x8
  405018:	ldrb	w9, [x9, #3470]
  40501c:	ldrsb	w27, [x8, #3]
  405020:	cbz	w9, 40508c <wcrtomb@plt+0x281c>
  405024:	tbz	w27, #31, 4050b0 <wcrtomb@plt+0x2840>
  405028:	sub	x0, x29, #0xc
  40502c:	sub	x3, x29, #0x18
  405030:	mov	x1, x26
  405034:	mov	x2, x25
  405038:	bl	419da4 <wcrtomb@plt+0x17534>
  40503c:	cmp	x0, #0x10
  405040:	b.hi	405240 <wcrtomb@plt+0x29d0>  // b.pmore
  405044:	mov	x27, x0
  405048:	ldur	w0, [x29, #-12]
  40504c:	sub	x1, x29, #0x98
  405050:	bl	4128a0 <wcrtomb@plt+0x10030>
  405054:	cbnz	w0, 405240 <wcrtomb@plt+0x29d0>
  405058:	sub	x21, x26, #0x1
  40505c:	mov	x8, x27
  405060:	cmp	x8, #0x2
  405064:	b.lt	4050a4 <wcrtomb@plt+0x2834>  // b.tstop
  405068:	ldrb	w23, [x21, x8]
  40506c:	sub	x28, x8, #0x1
  405070:	bl	4024d0 <__ctype_toupper_loc@plt>
  405074:	ldr	x8, [x0]
  405078:	ldr	w8, [x8, x23, lsl #2]
  40507c:	cmp	w8, w23
  405080:	mov	x8, x28
  405084:	b.eq	405060 <wcrtomb@plt+0x27f0>  // b.none
  405088:	b	405240 <wcrtomb@plt+0x29d0>
  40508c:	cmn	w27, #0x2
  405090:	b.eq	404f64 <wcrtomb@plt+0x26f4>  // b.none
  405094:	sxtw	x21, w27
  405098:	cmp	x21, #0x10
  40509c:	b.ls	404f80 <wcrtomb@plt+0x2710>  // b.plast
  4050a0:	b	405240 <wcrtomb@plt+0x29d0>
  4050a4:	ldr	x28, [sp, #16]
  4050a8:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4050ac:	add	x23, x23, #0x888
  4050b0:	tbnz	w27, #31, 405240 <wcrtomb@plt+0x29d0>
  4050b4:	sxtw	x21, w27
  4050b8:	b	404f80 <wcrtomb@plt+0x2710>
  4050bc:	sxtw	x21, w27
  4050c0:	cmp	x21, #0x10
  4050c4:	b.hi	4054e8 <wcrtomb@plt+0x2c78>  // b.pmore
  4050c8:	mov	x0, x22
  4050cc:	mov	x1, x26
  4050d0:	mov	x2, x21
  4050d4:	bl	402210 <memcpy@plt>
  4050d8:	add	x22, x22, x21
  4050dc:	subs	x25, x25, x21
  4050e0:	add	x26, x26, x21
  4050e4:	b.eq	405218 <wcrtomb@plt+0x29a8>  // b.none
  4050e8:	ldrb	w8, [x26]
  4050ec:	sub	w9, w8, #0x24
  4050f0:	cmp	w9, #0x3a
  4050f4:	b.hi	405160 <wcrtomb@plt+0x28f0>  // b.pmore
  4050f8:	cmp	x9, #0x38
  4050fc:	b.ne	40513c <wcrtomb@plt+0x28cc>  // b.any
  405100:	cmp	x25, #0x2
  405104:	b.cc	405158 <wcrtomb@plt+0x28e8>  // b.lo, b.ul, b.last
  405108:	ldrb	w8, [x26, #1]!
  40510c:	sub	w9, w8, #0xa
  405110:	cmp	w9, #0x72
  405114:	b.hi	405134 <wcrtomb@plt+0x28c4>  // b.pmore
  405118:	adrp	x12, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  40511c:	add	x12, x12, #0x645
  405120:	adr	x10, 405134 <wcrtomb@plt+0x28c4>
  405124:	ldrb	w11, [x12, x9]
  405128:	add	x10, x10, x11, lsl #2
  40512c:	mov	w21, wzr
  405130:	br	x10
  405134:	sub	x25, x25, #0x1
  405138:	b	405160 <wcrtomb@plt+0x28f0>
  40513c:	mov	w10, #0x1                   	// #1
  405140:	lsl	x9, x10, x9
  405144:	mov	x10, #0x441                 	// #1089
  405148:	movk	x10, #0x480, lsl #48
  40514c:	tst	x9, x10
  405150:	b.eq	405160 <wcrtomb@plt+0x28f0>  // b.none
  405154:	b	4054e8 <wcrtomb@plt+0x2c78>
  405158:	mov	w8, #0x5c                  	// #92
  40515c:	mov	w25, #0x1                   	// #1
  405160:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  405164:	add	x8, x23, x8
  405168:	ldrb	w9, [x9, #3470]
  40516c:	ldrsb	w27, [x8, #3]
  405170:	cbz	w9, 4051d8 <wcrtomb@plt+0x2968>
  405174:	tbz	w27, #31, 40520c <wcrtomb@plt+0x299c>
  405178:	sub	x0, x29, #0xc
  40517c:	sub	x3, x29, #0x18
  405180:	mov	x1, x26
  405184:	mov	x2, x25
  405188:	bl	419da4 <wcrtomb@plt+0x17534>
  40518c:	cmp	x0, #0x10
  405190:	b.hi	405240 <wcrtomb@plt+0x29d0>  // b.pmore
  405194:	mov	x27, x0
  405198:	ldur	w0, [x29, #-12]
  40519c:	sub	x1, x29, #0x98
  4051a0:	bl	4128a0 <wcrtomb@plt+0x10030>
  4051a4:	cbnz	w0, 405240 <wcrtomb@plt+0x29d0>
  4051a8:	sub	x21, x26, #0x1
  4051ac:	mov	x8, x27
  4051b0:	subs	x23, x8, #0x1
  4051b4:	b.le	405200 <wcrtomb@plt+0x2990>
  4051b8:	ldrb	w28, [x21, x8]
  4051bc:	bl	4024d0 <__ctype_toupper_loc@plt>
  4051c0:	ldr	x8, [x0]
  4051c4:	ldr	w8, [x8, x28, lsl #2]
  4051c8:	cmp	w8, w28
  4051cc:	mov	x8, x23
  4051d0:	b.eq	4051b0 <wcrtomb@plt+0x2940>  // b.none
  4051d4:	b	405240 <wcrtomb@plt+0x29d0>
  4051d8:	cmn	w27, #0x2
  4051dc:	b.ne	4050bc <wcrtomb@plt+0x284c>  // b.any
  4051e0:	sub	x2, x29, #0x18
  4051e4:	mov	x0, x26
  4051e8:	mov	x1, x25
  4051ec:	bl	419d80 <wcrtomb@plt+0x17510>
  4051f0:	mov	x21, x0
  4051f4:	cmp	x21, #0x10
  4051f8:	b.ls	4050c8 <wcrtomb@plt+0x2858>  // b.plast
  4051fc:	b	4054e8 <wcrtomb@plt+0x2c78>
  405200:	ldr	x28, [sp, #16]
  405204:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  405208:	add	x23, x23, #0x888
  40520c:	tbnz	w27, #31, 4054e8 <wcrtomb@plt+0x2c78>
  405210:	sxtw	x21, w27
  405214:	b	4050c8 <wcrtomb@plt+0x2858>
  405218:	ldr	x1, [sp, #32]
  40521c:	ldur	x8, [x29, #-168]
  405220:	sub	x2, x22, x1
  405224:	cmp	x8, x2
  405228:	b.eq	405238 <wcrtomb@plt+0x29c8>  // b.none
  40522c:	mov	x0, x28
  405230:	stur	x2, [x29, #-168]
  405234:	bl	402210 <memcpy@plt>
  405238:	mov	w21, #0x2                   	// #2
  40523c:	b	405244 <wcrtomb@plt+0x29d4>
  405240:	mov	w21, w24
  405244:	ldr	x0, [sp, #32]
  405248:	bl	402620 <free@plt>
  40524c:	mov	w24, w21
  405250:	ldr	w23, [sp, #24]
  405254:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405258:	adrp	x9, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  40525c:	sxtw	x8, w24
  405260:	add	x9, x9, #0x700
  405264:	add	x8, x9, x8, lsl #5
  405268:	ldp	x1, x0, [x29, #-168]
  40526c:	ldp	x10, x9, [x8, #16]
  405270:	ldrsw	x2, [x8, #12]
  405274:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405278:	add	x21, x21, #0x464
  40527c:	stur	x9, [x21, #124]
  405280:	blr	x10
  405284:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  405288:	ldrb	w8, [x8, #2180]
  40528c:	ldur	x10, [x21, #124]
  405290:	sub	x9, x29, #0x18
  405294:	orr	x1, x9, #0x1
  405298:	sub	x3, x29, #0x98
  40529c:	mov	w2, #0x1                   	// #1
  4052a0:	mov	x4, xzr
  4052a4:	stur	x0, [x21, #132]
  4052a8:	sturb	wzr, [x29, #-24]
  4052ac:	sturb	w8, [x29, #-23]
  4052b0:	sturb	wzr, [x29, #-22]
  4052b4:	blr	x10
  4052b8:	ldrb	w8, [x21]
  4052bc:	ldr	w9, [x22, #1072]
  4052c0:	cmp	x0, #0x0
  4052c4:	cset	w10, eq  // eq = none
  4052c8:	eor	w8, w8, w10
  4052cc:	eor	w8, w8, #0x1
  4052d0:	sub	w20, w20, w9
  4052d4:	strb	w8, [x21, #12]
  4052d8:	cbnz	w23, 4052f8 <wcrtomb@plt+0x2a88>
  4052dc:	cmp	w20, #0x1
  4052e0:	b.gt	4052f8 <wcrtomb@plt+0x2a88>
  4052e4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4052e8:	ldr	w8, [x8, #848]
  4052ec:	cmp	w8, #0x3
  4052f0:	csetm	w8, eq  // eq = none
  4052f4:	b	405300 <wcrtomb@plt+0x2a90>
  4052f8:	mvn	w8, w23
  4052fc:	lsr	w8, w8, #31
  405300:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405304:	mov	w0, #0x1e                  	// #30
  405308:	str	w8, [x9, #1172]
  40530c:	bl	4026f0 <sysconf@plt>
  405310:	cmp	x0, #0x1
  405314:	b.lt	4055cc <wcrtomb@plt+0x2d5c>  // b.tstop
  405318:	mov	x8, #0x7ffffffffffffffc    	// #9223372036854775804
  40531c:	cmp	x0, x8
  405320:	b.cs	4055cc <wcrtomb@plt+0x2d5c>  // b.hs, b.nlast
  405324:	mov	w8, #0x18000               	// #98304
  405328:	udiv	x9, x8, x0
  40532c:	msub	x9, x9, x0, x8
  405330:	sub	x10, x0, x9
  405334:	cmp	x9, #0x0
  405338:	add	x9, x10, #0x18, lsl #12
  40533c:	csel	x8, x8, x9, eq  // eq = none
  405340:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405344:	add	x8, x0, x8
  405348:	add	x21, x21, #0x460
  40534c:	add	x8, x8, #0x8
  405350:	stp	x0, x8, [x21, #144]
  405354:	mov	x0, x8
  405358:	bl	417290 <wcrtomb@plt+0x14a20>
  40535c:	ldrb	w8, [x21]
  405360:	str	x0, [x21, #160]
  405364:	cmp	w8, #0x1
  405368:	b.ne	405380 <wcrtomb@plt+0x2b10>  // b.any
  40536c:	ldr	w8, [x21, #32]
  405370:	cbnz	w8, 405380 <wcrtomb@plt+0x2b10>
  405374:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405378:	mov	w9, #0x1                   	// #1
  40537c:	str	w9, [x8, #1152]
  405380:	cmp	w20, #0x1
  405384:	b.lt	405394 <wcrtomb@plt+0x2b24>  // b.tstop
  405388:	ldrsw	x8, [x22, #1072]
  40538c:	add	x23, x19, x8, lsl #3
  405390:	b	4053d0 <wcrtomb@plt+0x2b60>
  405394:	ldr	x8, [sp, #8]
  405398:	ldr	w9, [sp, #28]
  40539c:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  4053a0:	add	x23, x23, #0x7d0
  4053a4:	cmp	w8, w9
  4053a8:	b.ge	4053d0 <wcrtomb@plt+0x2b60>  // b.tcont
  4053ac:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4053b0:	ldr	w8, [x8, #848]
  4053b4:	cmp	w8, #0x3
  4053b8:	b.ne	4053d0 <wcrtomb@plt+0x2b60>  // b.any
  4053bc:	adrp	x23, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  4053c0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4053c4:	mov	w9, #0x1                   	// #1
  4053c8:	add	x23, x23, #0x7c0
  4053cc:	strb	w9, [x8, #1137]
  4053d0:	ldr	x22, [x23], #8
  4053d4:	adrp	x19, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4053d8:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4053dc:	adrp	x26, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4053e0:	mov	w24, #0x1                   	// #1
  4053e4:	add	x19, x19, #0xf22
  4053e8:	add	x25, x25, #0x4d0
  4053ec:	add	x26, x26, #0x480
  4053f0:	mov	w27, #0x100                 	// #256
  4053f4:	mov	w28, #0x900                 	// #2304
  4053f8:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4053fc:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405400:	b	405420 <wcrtomb@plt+0x2bb0>
  405404:	ldr	x8, [x25]
  405408:	str	x8, [x25, #72]
  40540c:	mov	w1, #0x1                   	// #1
  405410:	bl	405768 <wcrtomb@plt+0x2ef8>
  405414:	ldr	x22, [x23], #8
  405418:	and	w24, w24, w0
  40541c:	cbz	x22, 4054b4 <wcrtomb@plt+0x2c44>
  405420:	mov	x0, x22
  405424:	mov	x1, x19
  405428:	bl	402600 <strcmp@plt>
  40542c:	cbz	w0, 405404 <wcrtomb@plt+0x2b94>
  405430:	ldr	w8, [x26]
  405434:	mov	w0, #0xffffff9c            	// #-100
  405438:	mov	x1, x22
  40543c:	str	x22, [x26, #152]
  405440:	cmp	w8, #0x2
  405444:	csel	w2, w28, w27, eq  // eq = none
  405448:	bl	414ee0 <wcrtomb@plt+0x12670>
  40544c:	tbz	w0, #31, 40540c <wcrtomb@plt+0x2b9c>
  405450:	bl	4027e0 <__errno_location@plt>
  405454:	ldrb	w8, [x21, #1121]
  405458:	tbnz	w8, #0, 4054a0 <wcrtomb@plt+0x2c30>
  40545c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405460:	ldr	x3, [x8, #1304]
  405464:	ldr	w22, [x0]
  405468:	cbnz	x3, 40548c <wcrtomb@plt+0x2c1c>
  40546c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405470:	mov	w2, #0x5                   	// #5
  405474:	mov	x0, xzr
  405478:	add	x1, x1, #0x30e
  40547c:	bl	402740 <dcgettext@plt>
  405480:	mov	x3, x0
  405484:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405488:	str	x0, [x8, #1304]
  40548c:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405490:	mov	w0, wzr
  405494:	mov	w1, w22
  405498:	add	x2, x2, #0x3d7
  40549c:	bl	4022a0 <error@plt>
  4054a0:	mov	w0, #0x1                   	// #1
  4054a4:	strb	w0, [x20, #1138]
  4054a8:	ldr	x22, [x23], #8
  4054ac:	and	w24, w24, w0
  4054b0:	cbnz	x22, 405420 <wcrtomb@plt+0x2bb0>
  4054b4:	ldrb	w8, [x20, #1138]
  4054b8:	and	w9, w24, #0x1
  4054bc:	cmp	w8, #0x0
  4054c0:	mov	w8, #0x2                   	// #2
  4054c4:	csel	w0, w8, w9, ne  // ne = any
  4054c8:	ldp	x20, x19, [sp, #432]
  4054cc:	ldp	x22, x21, [sp, #416]
  4054d0:	ldp	x24, x23, [sp, #400]
  4054d4:	ldp	x26, x25, [sp, #384]
  4054d8:	ldp	x28, x27, [sp, #368]
  4054dc:	ldp	x29, x30, [sp, #352]
  4054e0:	add	sp, sp, #0x1c0
  4054e4:	ret
  4054e8:	mov	w21, wzr
  4054ec:	b	405244 <wcrtomb@plt+0x29d4>
  4054f0:	mov	w0, #0x2                   	// #2
  4054f4:	bl	403634 <wcrtomb@plt+0xdc4>
  4054f8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4054fc:	add	x1, x1, #0x1db
  405500:	mov	w2, #0x5                   	// #5
  405504:	mov	x0, xzr
  405508:	bl	402740 <dcgettext@plt>
  40550c:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405510:	mov	x4, x0
  405514:	add	x2, x2, #0x2ee
  405518:	sub	x3, x29, #0x98
  40551c:	mov	w0, #0x2                   	// #2
  405520:	mov	w1, wzr
  405524:	bl	4022a0 <error@plt>
  405528:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40552c:	add	x1, x1, #0x1db
  405530:	mov	w2, #0x5                   	// #5
  405534:	mov	x0, xzr
  405538:	bl	402740 <dcgettext@plt>
  40553c:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405540:	mov	x4, x0
  405544:	add	x2, x2, #0x2ee
  405548:	mov	w0, #0x2                   	// #2
  40554c:	mov	w1, wzr
  405550:	mov	x3, x26
  405554:	bl	4022a0 <error@plt>
  405558:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40555c:	add	x1, x1, #0xf3d
  405560:	b	405588 <wcrtomb@plt+0x2d18>
  405564:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  405568:	add	x1, x1, #0xeec
  40556c:	b	405588 <wcrtomb@plt+0x2d18>
  405570:	bl	4027e0 <__errno_location@plt>
  405574:	ldr	w1, [x0]
  405578:	ldr	x3, [x21, #1064]
  40557c:	b	4055b4 <wcrtomb@plt+0x2d44>
  405580:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  405584:	add	x1, x1, #0xf24
  405588:	mov	w2, #0x5                   	// #5
  40558c:	mov	x0, xzr
  405590:	bl	402740 <dcgettext@plt>
  405594:	mov	x2, x0
  405598:	mov	w0, #0x2                   	// #2
  40559c:	mov	w1, wzr
  4055a0:	bl	4022a0 <error@plt>
  4055a4:	bl	4027e0 <__errno_location@plt>
  4055a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4055ac:	ldr	w1, [x0]
  4055b0:	ldr	x3, [x8, #1064]
  4055b4:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4055b8:	add	x2, x2, #0x3d7
  4055bc:	mov	w0, #0x2                   	// #2
  4055c0:	bl	4022a0 <error@plt>
  4055c4:	mov	w0, wzr
  4055c8:	bl	403634 <wcrtomb@plt+0xdc4>
  4055cc:	bl	402560 <abort@plt>
  4055d0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4055d4:	ldr	w8, [x8, #1176]
  4055d8:	cbz	w8, 4055e0 <wcrtomb@plt+0x2d70>
  4055dc:	ret
  4055e0:	b	40a83c <wcrtomb@plt+0x7fcc>
  4055e4:	stp	x29, x30, [sp, #-32]!
  4055e8:	stp	x20, x19, [sp, #16]
  4055ec:	mov	w19, w1
  4055f0:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  4055f4:	add	x1, x1, #0x700
  4055f8:	mov	x29, sp
  4055fc:	mov	x20, x0
  405600:	bl	402600 <strcmp@plt>
  405604:	cbz	w0, 405694 <wcrtomb@plt+0x2e24>
  405608:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  40560c:	add	x1, x1, #0x720
  405610:	mov	x0, x20
  405614:	bl	402600 <strcmp@plt>
  405618:	cbz	w0, 405678 <wcrtomb@plt+0x2e08>
  40561c:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  405620:	add	x1, x1, #0x740
  405624:	mov	x0, x20
  405628:	bl	402600 <strcmp@plt>
  40562c:	cbz	w0, 405684 <wcrtomb@plt+0x2e14>
  405630:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  405634:	add	x1, x1, #0x760
  405638:	mov	x0, x20
  40563c:	bl	402600 <strcmp@plt>
  405640:	cbz	w0, 405690 <wcrtomb@plt+0x2e20>
  405644:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  405648:	add	x1, x1, #0x780
  40564c:	mov	x0, x20
  405650:	bl	402600 <strcmp@plt>
  405654:	cbz	w0, 4056ac <wcrtomb@plt+0x2e3c>
  405658:	adrp	x1, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  40565c:	add	x1, x1, #0x7a0
  405660:	mov	x0, x20
  405664:	bl	402600 <strcmp@plt>
  405668:	cbnz	w0, 4056dc <wcrtomb@plt+0x2e6c>
  40566c:	mov	w0, #0x5                   	// #5
  405670:	tbz	w19, #31, 405698 <wcrtomb@plt+0x2e28>
  405674:	b	4056a0 <wcrtomb@plt+0x2e30>
  405678:	mov	w0, #0x1                   	// #1
  40567c:	tbz	w19, #31, 405698 <wcrtomb@plt+0x2e28>
  405680:	b	4056a0 <wcrtomb@plt+0x2e30>
  405684:	mov	w0, #0x2                   	// #2
  405688:	tbz	w19, #31, 405698 <wcrtomb@plt+0x2e28>
  40568c:	b	4056a0 <wcrtomb@plt+0x2e30>
  405690:	mov	w0, #0x3                   	// #3
  405694:	tbnz	w19, #31, 4056a0 <wcrtomb@plt+0x2e30>
  405698:	cmp	w0, w19
  40569c:	b.ne	4056b8 <wcrtomb@plt+0x2e48>  // b.any
  4056a0:	ldp	x20, x19, [sp, #16]
  4056a4:	ldp	x29, x30, [sp], #32
  4056a8:	ret
  4056ac:	mov	w0, #0x4                   	// #4
  4056b0:	tbz	w19, #31, 405698 <wcrtomb@plt+0x2e28>
  4056b4:	b	4056a0 <wcrtomb@plt+0x2e30>
  4056b8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4056bc:	add	x1, x1, #0x1fb
  4056c0:	mov	w2, #0x5                   	// #5
  4056c4:	mov	x0, xzr
  4056c8:	bl	402740 <dcgettext@plt>
  4056cc:	mov	x2, x0
  4056d0:	mov	w0, #0x2                   	// #2
  4056d4:	mov	w1, wzr
  4056d8:	bl	4022a0 <error@plt>
  4056dc:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4056e0:	add	x1, x1, #0xf0f
  4056e4:	mov	x0, x20
  4056e8:	bl	402600 <strcmp@plt>
  4056ec:	cbnz	w0, 4056fc <wcrtomb@plt+0x2e8c>
  4056f0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4056f4:	add	x1, x1, #0x21a
  4056f8:	b	4056c0 <wcrtomb@plt+0x2e50>
  4056fc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405700:	add	x1, x1, #0x257
  405704:	mov	w2, #0x5                   	// #5
  405708:	mov	x0, xzr
  40570c:	bl	402740 <dcgettext@plt>
  405710:	mov	x2, x0
  405714:	mov	w0, #0x2                   	// #2
  405718:	mov	w1, wzr
  40571c:	mov	x3, x20
  405720:	bl	4022a0 <error@plt>
  405724:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405728:	add	x8, x8, #0x360
  40572c:	ldr	x9, [x8, #8]
  405730:	str	x9, [x8]
  405734:	ret
  405738:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40573c:	mov	w9, #0xffffffff            	// #-1
  405740:	str	w9, [x8, #1164]
  405744:	ret
  405748:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40574c:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405750:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405754:	add	x8, x8, #0x3a0
  405758:	add	x9, x9, #0x2a5
  40575c:	add	x10, x10, #0x2ab
  405760:	stp	x9, x10, [x8]
  405764:	ret
  405768:	sub	sp, sp, #0x190
  40576c:	stp	x28, x27, [sp, #320]
  405770:	mov	w27, w0
  405774:	stp	x20, x19, [sp, #384]
  405778:	mov	w20, w1
  40577c:	add	x2, sp, #0x28
  405780:	mov	w0, wzr
  405784:	mov	w1, w27
  405788:	stp	x29, x30, [sp, #304]
  40578c:	stp	x26, x25, [sp, #336]
  405790:	stp	x24, x23, [sp, #352]
  405794:	stp	x22, x21, [sp, #368]
  405798:	add	x29, sp, #0x130
  40579c:	bl	402720 <__fxstat@plt>
  4057a0:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4057a4:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4057a8:	cbz	w0, 405888 <wcrtomb@plt+0x3018>
  4057ac:	bl	4027e0 <__errno_location@plt>
  4057b0:	ldrb	w8, [x22, #1121]
  4057b4:	tbnz	w8, #0, 4057f8 <wcrtomb@plt+0x2f88>
  4057b8:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4057bc:	ldr	x3, [x21, #1304]
  4057c0:	ldr	w20, [x0]
  4057c4:	cbnz	x3, 4057e4 <wcrtomb@plt+0x2f74>
  4057c8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4057cc:	add	x1, x1, #0x30e
  4057d0:	mov	w2, #0x5                   	// #5
  4057d4:	mov	x0, xzr
  4057d8:	bl	402740 <dcgettext@plt>
  4057dc:	mov	x3, x0
  4057e0:	str	x0, [x21, #1304]
  4057e4:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4057e8:	add	x2, x2, #0x3d7
  4057ec:	mov	w0, wzr
  4057f0:	mov	w1, w20
  4057f4:	bl	4022a0 <error@plt>
  4057f8:	mov	w24, #0x1                   	// #1
  4057fc:	strb	w24, [x23, #1138]
  405800:	cbz	w27, 405864 <wcrtomb@plt+0x2ff4>
  405804:	mov	w0, w27
  405808:	bl	4024f0 <close@plt>
  40580c:	cbz	w0, 405864 <wcrtomb@plt+0x2ff4>
  405810:	bl	4027e0 <__errno_location@plt>
  405814:	ldrb	w8, [x22, #1121]
  405818:	tbnz	w8, #0, 40585c <wcrtomb@plt+0x2fec>
  40581c:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405820:	ldr	x3, [x20, #1304]
  405824:	ldr	w19, [x0]
  405828:	cbnz	x3, 405848 <wcrtomb@plt+0x2fd8>
  40582c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405830:	add	x1, x1, #0x30e
  405834:	mov	w2, #0x5                   	// #5
  405838:	mov	x0, xzr
  40583c:	bl	402740 <dcgettext@plt>
  405840:	mov	x3, x0
  405844:	str	x0, [x20, #1304]
  405848:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40584c:	add	x2, x2, #0x3d7
  405850:	mov	w0, wzr
  405854:	mov	w1, w19
  405858:	bl	4022a0 <error@plt>
  40585c:	mov	w8, #0x1                   	// #1
  405860:	strb	w8, [x23, #1138]
  405864:	and	w0, w24, #0x1
  405868:	ldp	x20, x19, [sp, #384]
  40586c:	ldp	x22, x21, [sp, #368]
  405870:	ldp	x24, x23, [sp, #352]
  405874:	ldp	x26, x25, [sp, #336]
  405878:	ldp	x28, x27, [sp, #320]
  40587c:	ldp	x29, x30, [sp, #304]
  405880:	add	sp, sp, #0x190
  405884:	ret
  405888:	cbz	w27, 40592c <wcrtomb@plt+0x30bc>
  40588c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405890:	ldr	w8, [x8, #1152]
  405894:	cmp	w8, #0x2
  405898:	b.eq	4058a4 <wcrtomb@plt+0x3034>  // b.none
  40589c:	cbnz	w8, 4058d8 <wcrtomb@plt+0x3068>
  4058a0:	tbnz	w20, #0, 4058d8 <wcrtomb@plt+0x3068>
  4058a4:	ldr	w8, [sp, #56]
  4058a8:	mov	w24, #0x1                   	// #1
  4058ac:	and	w8, w8, #0xf000
  4058b0:	cmp	w8, #0x6, lsl #12
  4058b4:	b.ge	4058cc <wcrtomb@plt+0x305c>  // b.tcont
  4058b8:	cmp	w8, #0x1, lsl #12
  4058bc:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  4058c0:	cmp	w8, #0x2, lsl #12
  4058c4:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  4058c8:	b	4058d8 <wcrtomb@plt+0x3068>
  4058cc:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  4058d0:	cmp	w8, #0xc, lsl #12
  4058d4:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  4058d8:	tbz	w20, #0, 40592c <wcrtomb@plt+0x30bc>
  4058dc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4058e0:	add	x8, x8, #0x518
  4058e4:	ldr	x1, [x8], #88
  4058e8:	ldr	w9, [sp, #56]
  4058ec:	and	w9, w9, #0xf000
  4058f0:	cmp	w9, #0x4, lsl #12
  4058f4:	b.ne	40591c <wcrtomb@plt+0x30ac>  // b.any
  4058f8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4058fc:	ldr	w8, [x8, #848]
  405900:	cmp	w8, #0x4
  405904:	b.eq	405a58 <wcrtomb@plt+0x31e8>  // b.none
  405908:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40590c:	add	x8, x8, #0x471
  405910:	ldrb	w9, [x8]
  405914:	tbnz	w9, #0, 40592c <wcrtomb@plt+0x30bc>
  405918:	add	x8, x8, #0x10f
  40591c:	ldr	x0, [x8, #8]
  405920:	cbz	x0, 40592c <wcrtomb@plt+0x30bc>
  405924:	bl	412e74 <wcrtomb@plt+0x10604>
  405928:	tbnz	w0, #0, 405a58 <wcrtomb@plt+0x31e8>
  40592c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405930:	ldr	w8, [x9, #1172]
  405934:	tbz	w8, #31, 40594c <wcrtomb@plt+0x30dc>
  405938:	ldr	w8, [sp, #56]
  40593c:	and	w8, w8, #0xf000
  405940:	cmp	w8, #0x4, lsl #12
  405944:	cset	w8, eq  // eq = none
  405948:	str	w8, [x9, #1172]
  40594c:	adrp	x28, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405950:	ldr	w8, [x28, #848]
  405954:	cbz	w27, 405a38 <wcrtomb@plt+0x31c8>
  405958:	cmp	w8, #0x3
  40595c:	b.ne	405a38 <wcrtomb@plt+0x31c8>  // b.any
  405960:	ldr	w9, [sp, #56]
  405964:	and	w9, w9, #0xf000
  405968:	cmp	w9, #0x4, lsl #12
  40596c:	b.ne	405a38 <wcrtomb@plt+0x31c8>  // b.any
  405970:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405974:	ldrb	w8, [x8, #1120]
  405978:	mov	w9, #0x319                 	// #793
  40597c:	mov	w10, #0x30a                 	// #778
  405980:	mov	w0, w27
  405984:	cmp	w8, #0x0
  405988:	csel	w8, w10, w9, ne  // ne = any
  40598c:	orr	w9, w20, #0xfffffffe
  405990:	and	w21, w8, w9
  405994:	bl	4024f0 <close@plt>
  405998:	cbz	w0, 4059f4 <wcrtomb@plt+0x3184>
  40599c:	bl	4027e0 <__errno_location@plt>
  4059a0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4059a4:	ldrb	w8, [x8, #1121]
  4059a8:	tbnz	w8, #0, 4059ec <wcrtomb@plt+0x317c>
  4059ac:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4059b0:	ldr	x3, [x22, #1304]
  4059b4:	ldr	w19, [x0]
  4059b8:	cbnz	x3, 4059d8 <wcrtomb@plt+0x3168>
  4059bc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4059c0:	add	x1, x1, #0x30e
  4059c4:	mov	w2, #0x5                   	// #5
  4059c8:	mov	x0, xzr
  4059cc:	bl	402740 <dcgettext@plt>
  4059d0:	mov	x3, x0
  4059d4:	str	x0, [x22, #1304]
  4059d8:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4059dc:	add	x2, x2, #0x3d7
  4059e0:	mov	w0, wzr
  4059e4:	mov	w1, w19
  4059e8:	bl	4022a0 <error@plt>
  4059ec:	mov	w8, #0x1                   	// #1
  4059f0:	strb	w8, [x23, #1138]
  4059f4:	adrp	x27, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4059f8:	ldr	x8, [x27, #1304]
  4059fc:	add	x0, sp, #0x18
  405a00:	mov	w1, w21
  405a04:	mov	x2, xzr
  405a08:	stp	x8, xzr, [sp, #24]
  405a0c:	bl	417b8c <wcrtomb@plt+0x1531c>
  405a10:	cbz	x0, 406bcc <wcrtomb@plt+0x435c>
  405a14:	mov	x19, x0
  405a18:	bl	41851c <wcrtomb@plt+0x15cac>
  405a1c:	mov	w22, #0x1                   	// #1
  405a20:	cbz	x0, 405e08 <wcrtomb@plt+0x3598>
  405a24:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405a28:	mov	x25, x0
  405a2c:	add	x21, x21, #0x471
  405a30:	mov	w24, #0x1                   	// #1
  405a34:	b	405a88 <wcrtomb@plt+0x3218>
  405a38:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405a3c:	cbz	w27, 405ed4 <wcrtomb@plt+0x3664>
  405a40:	cmp	w8, #0x4
  405a44:	b.ne	405dc8 <wcrtomb@plt+0x3558>  // b.any
  405a48:	ldr	w8, [sp, #56]
  405a4c:	and	w8, w8, #0xf000
  405a50:	cmp	w8, #0x4, lsl #12
  405a54:	b.ne	405dc8 <wcrtomb@plt+0x3558>  // b.any
  405a58:	mov	w24, #0x1                   	// #1
  405a5c:	b	405804 <wcrtomb@plt+0x2f94>
  405a60:	mov	w2, #0x4                   	// #4
  405a64:	mov	x0, x19
  405a68:	mov	x1, x25
  405a6c:	bl	4199e8 <wcrtomb@plt+0x17178>
  405a70:	mov	w0, #0x1                   	// #1
  405a74:	and	w24, w24, w0
  405a78:	mov	x0, x19
  405a7c:	bl	41851c <wcrtomb@plt+0x15cac>
  405a80:	mov	x25, x0
  405a84:	cbz	x0, 405e0c <wcrtomb@plt+0x359c>
  405a88:	ldr	x9, [x25, #88]
  405a8c:	ldrh	w8, [x25, #108]
  405a90:	cmp	x9, #0x0
  405a94:	cset	w9, eq  // eq = none
  405a98:	cmp	w8, #0x6
  405a9c:	b.eq	405a70 <wcrtomb@plt+0x3200>  // b.none
  405aa0:	and	w26, w9, w20
  405aa4:	tbz	w26, #0, 405adc <wcrtomb@plt+0x326c>
  405aa8:	ldrb	w8, [x21]
  405aac:	ldr	x3, [x25, #56]
  405ab0:	cmp	w8, #0x1
  405ab4:	stur	x3, [x21, #167]
  405ab8:	b.ne	405acc <wcrtomb@plt+0x325c>  // b.any
  405abc:	ldrb	w8, [x3, #1]
  405ac0:	cbz	w8, 405acc <wcrtomb@plt+0x325c>
  405ac4:	add	x3, x3, #0x2
  405ac8:	str	x3, [x27, #1304]
  405acc:	ldr	w8, [x19, #72]
  405ad0:	tbnz	w8, #1, 405b28 <wcrtomb@plt+0x32b8>
  405ad4:	and	w23, w8, w26
  405ad8:	b	405b2c <wcrtomb@plt+0x32bc>
  405adc:	cmp	w8, #0x4
  405ae0:	b.hi	405d10 <wcrtomb@plt+0x34a0>  // b.pmore
  405ae4:	lsl	w8, w22, w8
  405ae8:	mov	w9, #0x16                  	// #22
  405aec:	tst	w8, w9
  405af0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405af4:	add	x8, x8, #0x570
  405af8:	b.eq	405b10 <wcrtomb@plt+0x32a0>  // b.none
  405afc:	ldr	w8, [x28, #848]
  405b00:	cmp	w8, #0x4
  405b04:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405b08:	add	x8, x8, #0x580
  405b0c:	b.eq	405a60 <wcrtomb@plt+0x31f0>  // b.none
  405b10:	ldr	x0, [x8]
  405b14:	cbz	x0, 405aa8 <wcrtomb@plt+0x3238>
  405b18:	add	x1, x25, #0xf8
  405b1c:	bl	412e74 <wcrtomb@plt+0x10604>
  405b20:	tbz	w0, #0, 405aa8 <wcrtomb@plt+0x3238>
  405b24:	b	405a60 <wcrtomb@plt+0x31f0>
  405b28:	mov	w23, #0x1                   	// #1
  405b2c:	ldrh	w8, [x25, #108]
  405b30:	sub	w8, w8, #0x1
  405b34:	cmp	w8, #0xd
  405b38:	b.hi	406ba4 <wcrtomb@plt+0x4334>  // b.pmore
  405b3c:	adrp	x11, 42b000 <_obstack_memory_used@@Base+0x10e6c>
  405b40:	add	x11, x11, #0x6b8
  405b44:	adr	x9, 405a74 <wcrtomb@plt+0x3204>
  405b48:	ldrh	w10, [x11, x8, lsl #1]
  405b4c:	add	x9, x9, x10, lsl #2
  405b50:	mov	w0, #0x1                   	// #1
  405b54:	br	x9
  405b58:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405b5c:	ldrb	w8, [x8, #1121]
  405b60:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405b64:	tbnz	w8, #0, 405ba0 <wcrtomb@plt+0x3330>
  405b68:	ldr	w25, [x25, #64]
  405b6c:	cbnz	x3, 405b8c <wcrtomb@plt+0x331c>
  405b70:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405b74:	mov	w2, #0x5                   	// #5
  405b78:	mov	x0, xzr
  405b7c:	add	x1, x1, #0x30e
  405b80:	bl	402740 <dcgettext@plt>
  405b84:	mov	x3, x0
  405b88:	str	x0, [x27, #1304]
  405b8c:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405b90:	mov	w0, wzr
  405b94:	mov	w1, w25
  405b98:	add	x2, x2, #0x3d7
  405b9c:	bl	4022a0 <error@plt>
  405ba0:	mov	w0, #0x1                   	// #1
  405ba4:	strb	w0, [x23, #1138]
  405ba8:	b	405a74 <wcrtomb@plt+0x3204>
  405bac:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405bb0:	ldr	w8, [x8, #1152]
  405bb4:	cmp	w8, #0x2
  405bb8:	b.eq	405bc8 <wcrtomb@plt+0x3358>  // b.none
  405bbc:	cbnz	w8, 405c78 <wcrtomb@plt+0x3408>
  405bc0:	eor	w8, w26, #0x1
  405bc4:	cbz	w8, 405c78 <wcrtomb@plt+0x3408>
  405bc8:	ldr	w8, [x25, #136]
  405bcc:	mov	x22, x27
  405bd0:	cbz	w8, 405d40 <wcrtomb@plt+0x34d0>
  405bd4:	add	x27, x25, #0x78
  405bd8:	ldr	w8, [x27, #16]
  405bdc:	and	w8, w8, #0xf000
  405be0:	cmp	w8, #0x6, lsl #12
  405be4:	b.ge	405d24 <wcrtomb@plt+0x34b4>  // b.tcont
  405be8:	cmp	w8, #0x1, lsl #12
  405bec:	mov	x27, x22
  405bf0:	mov	w22, #0x1                   	// #1
  405bf4:	b.eq	405a70 <wcrtomb@plt+0x3200>  // b.none
  405bf8:	cmp	w8, #0x2, lsl #12
  405bfc:	b.eq	405a70 <wcrtomb@plt+0x3200>  // b.none
  405c00:	b	405c78 <wcrtomb@plt+0x3408>
  405c04:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405c08:	ldrb	w8, [x8, #1121]
  405c0c:	tbnz	w8, #0, 405a70 <wcrtomb@plt+0x3200>
  405c10:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405c14:	mov	w2, #0x5                   	// #5
  405c18:	mov	x0, xzr
  405c1c:	add	x1, x1, #0x2e5
  405c20:	bl	402740 <dcgettext@plt>
  405c24:	ldr	x25, [x27, #1304]
  405c28:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405c2c:	mov	x26, x0
  405c30:	mov	w2, #0x5                   	// #5
  405c34:	mov	x0, xzr
  405c38:	add	x1, x1, #0x2f5
  405c3c:	bl	402740 <dcgettext@plt>
  405c40:	mov	x4, x0
  405c44:	mov	w0, wzr
  405c48:	mov	w1, wzr
  405c4c:	mov	x2, x26
  405c50:	mov	x3, x25
  405c54:	bl	4022a0 <error@plt>
  405c58:	b	405a70 <wcrtomb@plt+0x3200>
  405c5c:	ldr	w8, [x28, #848]
  405c60:	cmp	w8, #0x3
  405c64:	b.eq	405a70 <wcrtomb@plt+0x3200>  // b.none
  405c68:	mov	w2, #0x4                   	// #4
  405c6c:	mov	x0, x19
  405c70:	mov	x1, x25
  405c74:	bl	4199e8 <wcrtomb@plt+0x17178>
  405c78:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405c7c:	ldr	w10, [x8, #1152]
  405c80:	ldr	w0, [x19, #44]
  405c84:	ldr	x1, [x25, #48]
  405c88:	cmp	w23, #0x0
  405c8c:	mov	w8, #0x8100                	// #33024
  405c90:	mov	w9, #0x100                 	// #256
  405c94:	csel	w8, w9, w8, ne  // ne = any
  405c98:	cmp	w10, #0x2
  405c9c:	b.eq	405cb0 <wcrtomb@plt+0x3440>  // b.none
  405ca0:	mov	w9, wzr
  405ca4:	cbnz	w10, 405cb4 <wcrtomb@plt+0x3444>
  405ca8:	eor	w10, w26, #0x1
  405cac:	cbz	w10, 405cb4 <wcrtomb@plt+0x3444>
  405cb0:	mov	w9, #0x800                 	// #2048
  405cb4:	orr	w2, w9, w8
  405cb8:	bl	414ee0 <wcrtomb@plt+0x12670>
  405cbc:	tbnz	w0, #31, 405ccc <wcrtomb@plt+0x345c>
  405cc0:	mov	w1, w26
  405cc4:	bl	405768 <wcrtomb@plt+0x2ef8>
  405cc8:	b	405a74 <wcrtomb@plt+0x3204>
  405ccc:	bl	4027e0 <__errno_location@plt>
  405cd0:	mov	x8, x0
  405cd4:	tbnz	w23, #0, 405cf0 <wcrtomb@plt+0x3480>
  405cd8:	ldr	w9, [x8]
  405cdc:	mov	w0, #0x1                   	// #1
  405ce0:	cmp	w9, #0x1f
  405ce4:	b.eq	405a74 <wcrtomb@plt+0x3204>  // b.none
  405ce8:	cmp	w9, #0x28
  405cec:	b.eq	405a74 <wcrtomb@plt+0x3204>  // b.none
  405cf0:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405cf4:	ldrb	w9, [x9, #1121]
  405cf8:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405cfc:	tbnz	w9, #0, 405ba0 <wcrtomb@plt+0x3330>
  405d00:	ldr	x3, [x27, #1304]
  405d04:	ldr	w25, [x8]
  405d08:	cbnz	x3, 405b8c <wcrtomb@plt+0x331c>
  405d0c:	b	405b70 <wcrtomb@plt+0x3300>
  405d10:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405d14:	add	x8, x8, #0x570
  405d18:	ldr	x0, [x8]
  405d1c:	cbnz	x0, 405b18 <wcrtomb@plt+0x32a8>
  405d20:	b	405aa8 <wcrtomb@plt+0x3238>
  405d24:	cmp	w8, #0xc, lsl #12
  405d28:	mov	x27, x22
  405d2c:	mov	w22, #0x1                   	// #1
  405d30:	b.eq	405a70 <wcrtomb@plt+0x3200>  // b.none
  405d34:	cmp	w8, #0x6, lsl #12
  405d38:	b.eq	405a70 <wcrtomb@plt+0x3200>  // b.none
  405d3c:	b	405c78 <wcrtomb@plt+0x3408>
  405d40:	ldr	w1, [x19, #44]
  405d44:	ldr	x2, [x25, #48]
  405d48:	cmp	w23, #0x0
  405d4c:	mov	w8, #0x100                 	// #256
  405d50:	csel	w4, wzr, w8, ne  // ne = any
  405d54:	sub	x3, x29, #0x88
  405d58:	mov	w0, wzr
  405d5c:	sub	x27, x29, #0x88
  405d60:	bl	402860 <__fxstatat@plt>
  405d64:	cbz	w0, 405bd8 <wcrtomb@plt+0x3368>
  405d68:	bl	4027e0 <__errno_location@plt>
  405d6c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405d70:	ldrb	w8, [x8, #1121]
  405d74:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405d78:	mov	x27, x22
  405d7c:	mov	w22, #0x1                   	// #1
  405d80:	tbnz	w8, #0, 405dc0 <wcrtomb@plt+0x3550>
  405d84:	ldr	x3, [x27, #1304]
  405d88:	ldr	w25, [x0]
  405d8c:	cbnz	x3, 405dac <wcrtomb@plt+0x353c>
  405d90:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405d94:	mov	w2, #0x5                   	// #5
  405d98:	mov	x0, xzr
  405d9c:	add	x1, x1, #0x30e
  405da0:	bl	402740 <dcgettext@plt>
  405da4:	mov	x3, x0
  405da8:	str	x0, [x27, #1304]
  405dac:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405db0:	mov	w0, wzr
  405db4:	mov	w1, w25
  405db8:	add	x2, x2, #0x3d7
  405dbc:	bl	4022a0 <error@plt>
  405dc0:	strb	w22, [x23, #1138]
  405dc4:	b	405a70 <wcrtomb@plt+0x3200>
  405dc8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405dcc:	ldr	w8, [x8, #1152]
  405dd0:	cmp	w8, #0x2
  405dd4:	b.eq	405de0 <wcrtomb@plt+0x3570>  // b.none
  405dd8:	cbnz	w8, 405ed4 <wcrtomb@plt+0x3664>
  405ddc:	tbnz	w20, #0, 405ed4 <wcrtomb@plt+0x3664>
  405de0:	ldr	w8, [sp, #56]
  405de4:	mov	w24, #0x1                   	// #1
  405de8:	and	w8, w8, #0xf000
  405dec:	cmp	w8, #0x6, lsl #12
  405df0:	b.ge	405ec8 <wcrtomb@plt+0x3658>  // b.tcont
  405df4:	cmp	w8, #0x1, lsl #12
  405df8:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  405dfc:	cmp	w8, #0x2, lsl #12
  405e00:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  405e04:	b	405ed4 <wcrtomb@plt+0x3664>
  405e08:	mov	w24, #0x1                   	// #1
  405e0c:	bl	4027e0 <__errno_location@plt>
  405e10:	ldr	w21, [x0]
  405e14:	mov	x20, x0
  405e18:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405e1c:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405e20:	cbz	w21, 405e6c <wcrtomb@plt+0x35fc>
  405e24:	ldrb	w8, [x23, #1121]
  405e28:	tbnz	w8, #0, 405e64 <wcrtomb@plt+0x35f4>
  405e2c:	ldr	x3, [x27, #1304]
  405e30:	cbnz	x3, 405e50 <wcrtomb@plt+0x35e0>
  405e34:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405e38:	add	x1, x1, #0x30e
  405e3c:	mov	w2, #0x5                   	// #5
  405e40:	mov	x0, xzr
  405e44:	bl	402740 <dcgettext@plt>
  405e48:	mov	x3, x0
  405e4c:	str	x0, [x27, #1304]
  405e50:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405e54:	add	x2, x2, #0x3d7
  405e58:	mov	w0, wzr
  405e5c:	mov	w1, w21
  405e60:	bl	4022a0 <error@plt>
  405e64:	mov	w8, #0x1                   	// #1
  405e68:	strb	w8, [x22, #1138]
  405e6c:	mov	x0, x19
  405e70:	bl	418394 <wcrtomb@plt+0x15b24>
  405e74:	cbz	w0, 405864 <wcrtomb@plt+0x2ff4>
  405e78:	ldrb	w8, [x23, #1121]
  405e7c:	tbnz	w8, #0, 405ebc <wcrtomb@plt+0x364c>
  405e80:	ldr	x3, [x27, #1304]
  405e84:	ldr	w19, [x20]
  405e88:	cbnz	x3, 405ea8 <wcrtomb@plt+0x3638>
  405e8c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405e90:	add	x1, x1, #0x30e
  405e94:	mov	w2, #0x5                   	// #5
  405e98:	mov	x0, xzr
  405e9c:	bl	402740 <dcgettext@plt>
  405ea0:	mov	x3, x0
  405ea4:	str	x0, [x27, #1304]
  405ea8:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405eac:	add	x2, x2, #0x3d7
  405eb0:	mov	w0, wzr
  405eb4:	mov	w1, w19
  405eb8:	bl	4022a0 <error@plt>
  405ebc:	mov	w8, #0x1                   	// #1
  405ec0:	strb	w8, [x22, #1138]
  405ec4:	b	405864 <wcrtomb@plt+0x2ff4>
  405ec8:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  405ecc:	cmp	w8, #0xc, lsl #12
  405ed0:	b.eq	405804 <wcrtomb@plt+0x2f94>  // b.none
  405ed4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405ed8:	add	x8, x8, #0x46c
  405edc:	ldrb	w26, [x8]
  405ee0:	cbnz	w26, 405f94 <wcrtomb@plt+0x3724>
  405ee4:	ldr	w9, [x8, #28]
  405ee8:	cbnz	w9, 405f94 <wcrtomb@plt+0x3724>
  405eec:	ldur	x8, [x8, #76]
  405ef0:	cmp	x8, #0x2
  405ef4:	b.lt	405f94 <wcrtomb@plt+0x3724>  // b.tstop
  405ef8:	ldr	w8, [sp, #56]
  405efc:	and	w8, w8, #0xf000
  405f00:	cmp	w8, #0x8, lsl #12
  405f04:	b.ne	405f94 <wcrtomb@plt+0x3724>  // b.any
  405f08:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405f0c:	ldr	x8, [sp, #48]
  405f10:	ldr	x9, [x9, #1432]
  405f14:	cmp	x8, x9
  405f18:	b.ne	405f94 <wcrtomb@plt+0x3724>  // b.any
  405f1c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405f20:	ldr	x8, [sp, #40]
  405f24:	ldr	x9, [x9, #1424]
  405f28:	cmp	x8, x9
  405f2c:	b.ne	405f94 <wcrtomb@plt+0x3724>  // b.any
  405f30:	ldrb	w8, [x22, #1121]
  405f34:	tbnz	w8, #0, 4057f8 <wcrtomb@plt+0x2f88>
  405f38:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405f3c:	add	x1, x1, #0x2bf
  405f40:	mov	w2, #0x5                   	// #5
  405f44:	mov	x0, xzr
  405f48:	bl	402740 <dcgettext@plt>
  405f4c:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405f50:	ldr	x8, [x21, #1304]
  405f54:	mov	x20, x0
  405f58:	cbnz	x8, 405f78 <wcrtomb@plt+0x3708>
  405f5c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  405f60:	add	x1, x1, #0x30e
  405f64:	mov	w2, #0x5                   	// #5
  405f68:	mov	x0, xzr
  405f6c:	bl	402740 <dcgettext@plt>
  405f70:	mov	x8, x0
  405f74:	str	x0, [x21, #1304]
  405f78:	mov	x0, x8
  405f7c:	bl	416a08 <wcrtomb@plt+0x14198>
  405f80:	mov	x3, x0
  405f84:	mov	w0, wzr
  405f88:	mov	w1, wzr
  405f8c:	mov	x2, x20
  405f90:	b	4057f4 <wcrtomb@plt+0x2f84>
  405f94:	adrp	x12, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405f98:	add	x12, x12, #0x468
  405f9c:	ldr	x8, [x12, #152]
  405fa0:	ldr	x9, [x12, #136]
  405fa4:	adrp	x10, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  405fa8:	ldrb	w21, [x10, #2180]
  405fac:	add	x10, x8, #0x1
  405fb0:	udiv	x11, x10, x9
  405fb4:	msub	x11, x11, x9, x10
  405fb8:	ldrb	w23, [x12]
  405fbc:	sub	x9, x9, x11
  405fc0:	cmp	x11, #0x0
  405fc4:	add	x9, x10, x9
  405fc8:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405fcc:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  405fd0:	csinc	x8, x9, x8, ne  // ne = any
  405fd4:	add	x25, x25, #0x478
  405fd8:	stp	x8, x8, [x12, #232]
  405fdc:	sturb	w21, [x8, #-1]
  405fe0:	str	w27, [x12, #56]
  405fe4:	cbz	w27, 405ff8 <wcrtomb@plt+0x3788>
  405fe8:	str	xzr, [x25, #240]
  405fec:	strb	wzr, [x25]
  405ff0:	strb	wzr, [x25, #4]
  405ff4:	b	406034 <wcrtomb@plt+0x37c4>
  405ff8:	mov	w2, #0x1                   	// #1
  405ffc:	mov	w0, wzr
  406000:	mov	x1, xzr
  406004:	bl	402310 <lseek@plt>
  406008:	lsr	x8, x0, #63
  40600c:	str	x0, [x25, #240]
  406010:	strb	w8, [x25]
  406014:	strb	w8, [x25, #4]
  406018:	tbz	x0, #63, 406034 <wcrtomb@plt+0x37c4>
  40601c:	bl	4027e0 <__errno_location@plt>
  406020:	ldr	w20, [x0]
  406024:	cmp	w20, #0x1d
  406028:	b.ne	406ab4 <wcrtomb@plt+0x4244>  // b.any
  40602c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406030:	str	xzr, [x8, #1384]
  406034:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406038:	add	x10, x10, #0x470
  40603c:	ldrb	w9, [x10]
  406040:	ldr	x8, [x10, #72]
  406044:	add	x1, sp, #0x28
  406048:	mov	x0, xzr
  40604c:	cmp	w9, #0x0
  406050:	stp	xzr, x8, [x10, #192]
  406054:	cset	w8, ne  // ne = any
  406058:	cmp	w21, #0x0
  40605c:	cset	w9, eq  // eq = none
  406060:	and	w8, w9, w8
  406064:	stp	xzr, xzr, [x10, #176]
  406068:	stp	xzr, xzr, [x10, #208]
  40606c:	strb	w8, [x10, #4]
  406070:	strb	wzr, [x10, #5]
  406074:	bl	406d48 <wcrtomb@plt+0x44d8>
  406078:	tbz	w0, #0, 406560 <wcrtomb@plt+0x3cf0>
  40607c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406080:	add	x8, x8, #0x45a
  406084:	ldrb	w9, [x8]
  406088:	stp	w23, w26, [sp, #4]
  40608c:	stur	wzr, [x8, #66]
  406090:	cmp	w9, #0x1
  406094:	b.ne	4060ec <wcrtomb@plt+0x387c>  // b.any
  406098:	ldr	w9, [sp, #56]
  40609c:	ldr	x10, [sp, #88]
  4060a0:	adrp	x11, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4060a4:	ldrb	w11, [x11, #1118]
  4060a8:	and	w9, w9, #0xf000
  4060ac:	cmp	w9, #0x8, lsl #12
  4060b0:	csinv	x9, x10, xzr, eq  // eq = none
  4060b4:	cmn	x9, #0x1
  4060b8:	cset	w10, ne  // ne = any
  4060bc:	and	x10, x11, x10
  4060c0:	add	x9, x9, x10
  4060c4:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  4060c8:	mov	w8, wzr
  4060cc:	movk	x10, #0xcccd
  4060d0:	umulh	x11, x9, x10
  4060d4:	cmp	x9, #0x9
  4060d8:	lsr	x9, x11, #3
  4060dc:	add	w8, w8, #0x1
  4060e0:	b.hi	4060d0 <wcrtomb@plt+0x3860>  // b.pmore
  4060e4:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4060e8:	str	w8, [x9, #1180]
  4060ec:	adrp	x28, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4060f0:	str	w27, [sp, #12]
  4060f4:	mov	x24, xzr
  4060f8:	mov	x20, xzr
  4060fc:	mov	w23, wzr
  406100:	mov	x27, #0xffffffffffffffff    	// #-1
  406104:	add	x28, x28, #0x528
  406108:	mov	w25, #0x1                   	// #1
  40610c:	str	xzr, [sp, #16]
  406110:	b	406154 <wcrtomb@plt+0x38e4>
  406114:	mov	x22, xzr
  406118:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40611c:	ldr	x8, [x8, #1328]
  406120:	adds	x8, x8, x22
  406124:	b.cs	406ba8 <wcrtomb@plt+0x4338>  // b.hs, b.nlast
  406128:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40612c:	add	x9, x9, #0x530
  406130:	str	x8, [x9]
  406134:	str	x20, [x9, #48]
  406138:	add	x1, sp, #0x28
  40613c:	mov	x0, x24
  406140:	sub	x20, x27, x25
  406144:	bl	406d48 <wcrtomb@plt+0x44d8>
  406148:	mov	w25, wzr
  40614c:	mov	x27, x19
  406150:	tbz	w0, #0, 40667c <wcrtomb@plt+0x3e0c>
  406154:	tbnz	x27, #63, 4063f4 <wcrtomb@plt+0x3b84>
  406158:	ldr	x8, [x28, #40]
  40615c:	ldr	x9, [x28]
  406160:	str	x8, [x28, #56]
  406164:	cbz	x9, 406170 <wcrtomb@plt+0x3900>
  406168:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40616c:	str	x8, [x9, #1320]
  406170:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406174:	ldr	x26, [x9, #1368]
  406178:	add	x24, x8, x24
  40617c:	cmp	x24, x26
  406180:	b.eq	4065c4 <wcrtomb@plt+0x3d54>  // b.none
  406184:	mov	x19, x27
  406188:	tst	w23, #0xff
  40618c:	b.eq	4061d8 <wcrtomb@plt+0x3968>  // b.none
  406190:	mov	x0, x24
  406194:	strb	wzr, [x26]
  406198:	bl	402270 <strlen@plt>
  40619c:	add	x25, x24, x0
  4061a0:	cmp	x25, x26
  4061a4:	strb	w23, [x26]
  4061a8:	b.eq	4061d8 <wcrtomb@plt+0x3968>  // b.none
  4061ac:	mov	x8, x25
  4061b0:	ldrb	w9, [x25, #1]!
  4061b4:	strb	w23, [x8]
  4061b8:	cbz	w9, 4061ac <wcrtomb@plt+0x393c>
  4061bc:	mov	x0, x25
  4061c0:	strb	wzr, [x26]
  4061c4:	bl	402270 <strlen@plt>
  4061c8:	add	x25, x25, x0
  4061cc:	cmp	x25, x26
  4061d0:	strb	w23, [x26]
  4061d4:	b.ne	4061ac <wcrtomb@plt+0x393c>  // b.any
  4061d8:	mov	x26, x24
  4061dc:	ldrb	w22, [x26, #-1]!
  4061e0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4061e4:	mov	w1, w21
  4061e8:	strb	w21, [x26]
  4061ec:	ldr	x27, [x8, #1368]
  4061f0:	mov	x0, x26
  4061f4:	sub	x8, x27, x24
  4061f8:	add	x2, x8, #0x1
  4061fc:	bl	402650 <memrchr@plt>
  406200:	add	x9, x0, #0x1
  406204:	mov	x8, x0
  406208:	sub	x0, x24, x20
  40620c:	cmp	x9, x24
  406210:	csinc	x25, x0, x8, eq  // eq = none
  406214:	cmp	x0, x25
  406218:	strb	w22, [x26]
  40621c:	b.cs	4062e4 <wcrtomb@plt+0x3a74>  // b.hs, b.nlast
  406220:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406224:	ldr	x8, [x8, #1336]
  406228:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40622c:	cbz	x8, 406244 <wcrtomb@plt+0x39d4>
  406230:	mov	x1, x25
  406234:	bl	407044 <wcrtomb@plt+0x47d4>
  406238:	ldr	x8, [sp, #16]
  40623c:	add	x8, x0, x8
  406240:	str	x8, [sp, #16]
  406244:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406248:	ldr	x8, [x8, #1352]
  40624c:	cbz	x8, 4062b4 <wcrtomb@plt+0x3a44>
  406250:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406254:	ldr	x24, [x9, #1320]
  406258:	cbnz	x24, 406264 <wcrtomb@plt+0x39f4>
  40625c:	ldr	x24, [x28, #40]
  406260:	str	x24, [x28]
  406264:	cmp	x8, #0x1
  406268:	b.lt	4062b4 <wcrtomb@plt+0x3a44>  // b.tstop
  40626c:	cmp	x24, x25
  406270:	b.cs	4062b4 <wcrtomb@plt+0x3a44>  // b.hs, b.nlast
  406274:	ldrb	w1, [x20, #2180]
  406278:	sub	x2, x25, x24
  40627c:	mov	x0, x24
  406280:	bl	4026d0 <memchr@plt>
  406284:	add	x1, x0, #0x1
  406288:	mov	w2, #0x2d                  	// #45
  40628c:	mov	x0, x24
  406290:	bl	4074f0 <wcrtomb@plt+0x4c80>
  406294:	ldr	x9, [x28, #32]
  406298:	sub	x8, x9, #0x1
  40629c:	cmp	x9, #0x2
  4062a0:	str	x8, [x28, #32]
  4062a4:	b.lt	4062b4 <wcrtomb@plt+0x3a44>  // b.tstop
  4062a8:	ldr	x24, [x28]
  4062ac:	cmp	x24, x25
  4062b0:	b.cc	406274 <wcrtomb@plt+0x3a04>  // b.lo, b.ul, b.last
  4062b4:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4062b8:	ldr	x9, [x9, #1336]
  4062bc:	orr	x8, x9, x8
  4062c0:	cbz	x8, 406700 <wcrtomb@plt+0x3e90>
  4062c4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4062c8:	ldrb	w8, [x8, #1128]
  4062cc:	cmp	w8, #0x1
  4062d0:	b.ne	4062e4 <wcrtomb@plt+0x3a74>  // b.any
  4062d4:	ldr	x9, [sp, #16]
  4062d8:	bic	x8, x19, x19, asr #63
  4062dc:	cmp	x8, x9
  4062e0:	b.lt	406700 <wcrtomb@plt+0x3e90>  // b.tstop
  4062e4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4062e8:	add	x8, x8, #0x4c0
  4062ec:	ldr	x9, [x8, #104]
  4062f0:	ldr	x11, [x8]
  4062f4:	ldr	x8, [x8, #144]
  4062f8:	cmp	x25, x9
  4062fc:	cset	w10, eq  // eq = none
  406300:	cmp	x11, #0x1
  406304:	b.lt	406354 <wcrtomb@plt+0x3ae4>  // b.tstop
  406308:	cmp	x25, x8
  40630c:	b.ls	406354 <wcrtomb@plt+0x3ae4>  // b.plast
  406310:	cmp	x25, x9
  406314:	b.eq	406354 <wcrtomb@plt+0x3ae4>  // b.none
  406318:	mov	x12, xzr
  40631c:	mov	x20, x25
  406320:	ldurb	w10, [x20, #-2]
  406324:	sub	x20, x20, #0x1
  406328:	cmp	w10, w21
  40632c:	b.ne	406320 <wcrtomb@plt+0x3ab0>  // b.any
  406330:	cmp	x9, x20
  406334:	cset	w10, eq  // eq = none
  406338:	b.eq	406358 <wcrtomb@plt+0x3ae8>  // b.none
  40633c:	add	x12, x12, #0x1
  406340:	cmp	x12, x11
  406344:	b.ge	406358 <wcrtomb@plt+0x3ae8>  // b.tcont
  406348:	cmp	x20, x8
  40634c:	b.hi	406320 <wcrtomb@plt+0x3ab0>  // b.pmore
  406350:	b	406358 <wcrtomb@plt+0x3ae8>
  406354:	mov	x20, x25
  406358:	tbnz	w10, #0, 406364 <wcrtomb@plt+0x3af4>
  40635c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406360:	str	xzr, [x9, #1320]
  406364:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406368:	ldrb	w9, [x9, #1116]
  40636c:	sub	x24, x27, x20
  406370:	cmp	w9, #0x1
  406374:	b.ne	4063a4 <wcrtomb@plt+0x3b34>  // b.any
  406378:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40637c:	add	x10, x10, #0x520
  406380:	ldr	x9, [x10]
  406384:	ldr	x10, [x10, #56]
  406388:	add	x8, x24, x8
  40638c:	sub	x8, x9, x8
  406390:	add	x8, x8, x10
  406394:	cmp	x8, x9
  406398:	b.cc	406ba8 <wcrtomb@plt+0x4338>  // b.lo, b.ul, b.last
  40639c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4063a0:	str	x8, [x9, #1312]
  4063a4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4063a8:	ldrb	w8, [x8, #1118]
  4063ac:	cmp	w8, #0x1
  4063b0:	b.ne	406138 <wcrtomb@plt+0x38c8>  // b.any
  4063b4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4063b8:	ldr	x0, [x8, #1376]
  4063bc:	cmp	x0, x20
  4063c0:	b.cs	406114 <wcrtomb@plt+0x38a4>  // b.hs, b.nlast
  4063c4:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4063c8:	ldrb	w26, [x8, #2180]
  4063cc:	mov	x22, xzr
  4063d0:	sub	x2, x20, x0
  4063d4:	mov	w1, w26
  4063d8:	bl	4026d0 <memchr@plt>
  4063dc:	cbz	x0, 406118 <wcrtomb@plt+0x38a8>
  4063e0:	add	x0, x0, #0x1
  4063e4:	cmp	x0, x20
  4063e8:	add	x22, x22, #0x1
  4063ec:	b.cc	4063d0 <wcrtomb@plt+0x3b60>  // b.lo, b.ul, b.last
  4063f0:	b	406118 <wcrtomb@plt+0x38a8>
  4063f4:	cbz	w21, 406158 <wcrtomb@plt+0x38e8>
  4063f8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4063fc:	ldr	w22, [x8, #1156]
  406400:	cmp	w22, #0x1
  406404:	b.eq	406158 <wcrtomb@plt+0x38e8>  // b.none
  406408:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40640c:	add	x8, x8, #0x550
  406410:	ldp	x0, x8, [x8]
  406414:	sub	x26, x8, x0
  406418:	strb	wzr, [x8]
  40641c:	bl	402270 <strlen@plt>
  406420:	cmp	x0, x26
  406424:	b.ne	40651c <wcrtomb@plt+0x3cac>  // b.any
  406428:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40642c:	ldrb	w8, [x8, #1144]
  406430:	cmp	w8, #0x0
  406434:	cset	w8, ne  // ne = any
  406438:	orn	w8, w8, w25
  40643c:	tbnz	w8, #0, 406158 <wcrtomb@plt+0x38e8>
  406440:	ldr	w8, [sp, #56]
  406444:	and	w8, w8, #0xf000
  406448:	cmp	w8, #0x8, lsl #12
  40644c:	b.ne	406158 <wcrtomb@plt+0x38e8>  // b.any
  406450:	ldr	x8, [sp, #88]
  406454:	cmp	x8, x26
  406458:	b.ls	406158 <wcrtomb@plt+0x38e8>  // b.plast
  40645c:	ldr	w19, [sp, #12]
  406460:	cbnz	w19, 40647c <wcrtomb@plt+0x3c0c>
  406464:	mov	w2, #0x1                   	// #1
  406468:	mov	w0, wzr
  40646c:	mov	x1, xzr
  406470:	bl	402310 <lseek@plt>
  406474:	mov	x26, x0
  406478:	tbnz	x0, #63, 406158 <wcrtomb@plt+0x38e8>
  40647c:	mov	w2, #0x4                   	// #4
  406480:	mov	w0, w19
  406484:	mov	x1, x26
  406488:	bl	402310 <lseek@plt>
  40648c:	tbnz	x0, #63, 406158 <wcrtomb@plt+0x38e8>
  406490:	mov	x25, x0
  406494:	mov	w0, w19
  406498:	mov	x1, x26
  40649c:	mov	w2, wzr
  4064a0:	bl	402310 <lseek@plt>
  4064a4:	tbz	x0, #63, 406508 <wcrtomb@plt+0x3c98>
  4064a8:	bl	4027e0 <__errno_location@plt>
  4064ac:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4064b0:	ldrb	w8, [x8, #1121]
  4064b4:	tbnz	w8, #0, 4064fc <wcrtomb@plt+0x3c8c>
  4064b8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4064bc:	ldr	x3, [x8, #1304]
  4064c0:	ldr	w26, [x0]
  4064c4:	cbnz	x3, 4064e8 <wcrtomb@plt+0x3c78>
  4064c8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4064cc:	mov	w2, #0x5                   	// #5
  4064d0:	mov	x0, xzr
  4064d4:	add	x1, x1, #0x30e
  4064d8:	bl	402740 <dcgettext@plt>
  4064dc:	mov	x3, x0
  4064e0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4064e4:	str	x0, [x8, #1304]
  4064e8:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4064ec:	mov	w0, wzr
  4064f0:	mov	w1, w26
  4064f4:	add	x2, x2, #0x3d7
  4064f8:	bl	4022a0 <error@plt>
  4064fc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406500:	mov	w9, #0x1                   	// #1
  406504:	strb	w9, [x8, #1138]
  406508:	ldr	x8, [sp, #88]
  40650c:	cmp	x25, x8
  406510:	b.ge	406158 <wcrtomb@plt+0x38e8>  // b.tcont
  406514:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406518:	ldr	w22, [x8, #1156]
  40651c:	cmp	w22, #0x2
  406520:	b.eq	406af4 <wcrtomb@plt+0x4284>  // b.none
  406524:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406528:	ldrb	w8, [x8, #1117]
  40652c:	tbnz	w8, #0, 406544 <wcrtomb@plt+0x3cd4>
  406530:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406534:	add	x8, x8, #0x468
  406538:	mov	w9, #0x1                   	// #1
  40653c:	strb	w9, [x8, #4]
  406540:	strb	w9, [x8]
  406544:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406548:	add	x9, x9, #0x470
  40654c:	ldrb	w8, [x9]
  406550:	ldr	x27, [sp, #16]
  406554:	mov	w23, w21
  406558:	strb	w8, [x9, #4]
  40655c:	b	406158 <wcrtomb@plt+0x38e8>
  406560:	bl	4027e0 <__errno_location@plt>
  406564:	ldrb	w8, [x22, #1121]
  406568:	tbnz	w8, #0, 4065ac <wcrtomb@plt+0x3d3c>
  40656c:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406570:	ldr	x3, [x21, #1304]
  406574:	ldr	w20, [x0]
  406578:	cbnz	x3, 406598 <wcrtomb@plt+0x3d28>
  40657c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406580:	add	x1, x1, #0x30e
  406584:	mov	w2, #0x5                   	// #5
  406588:	mov	x0, xzr
  40658c:	bl	402740 <dcgettext@plt>
  406590:	mov	x3, x0
  406594:	str	x0, [x21, #1304]
  406598:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40659c:	add	x2, x2, #0x3d7
  4065a0:	mov	w0, wzr
  4065a4:	mov	w1, w20
  4065a8:	bl	4022a0 <error@plt>
  4065ac:	mov	w8, #0x1                   	// #1
  4065b0:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4065b4:	mov	w23, wzr
  4065b8:	mov	x26, xzr
  4065bc:	strb	w8, [x9, #1138]
  4065c0:	b	406740 <wcrtomb@plt+0x3ed0>
  4065c4:	cbz	x20, 406708 <wcrtomb@plt+0x3e98>
  4065c8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4065cc:	add	x1, x24, #0x1
  4065d0:	add	x8, x8, #0x538
  4065d4:	str	x1, [x8, #32]
  4065d8:	strb	w21, [x24]
  4065dc:	ldr	x8, [x8]
  4065e0:	cbz	x8, 4065f8 <wcrtomb@plt+0x3d88>
  4065e4:	sub	x0, x24, x20
  4065e8:	bl	407044 <wcrtomb@plt+0x47d4>
  4065ec:	ldr	x8, [sp, #16]
  4065f0:	add	x8, x0, x8
  4065f4:	str	x8, [sp, #16]
  4065f8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4065fc:	ldr	x8, [x8, #1352]
  406600:	cbz	x8, 406708 <wcrtomb@plt+0x3e98>
  406604:	ldr	x21, [x28]
  406608:	ldr	x20, [x28, #48]
  40660c:	cbnz	x21, 406618 <wcrtomb@plt+0x3da8>
  406610:	ldr	x21, [x28, #40]
  406614:	str	x21, [x28]
  406618:	cmp	x8, #0x1
  40661c:	mov	w23, #0x1                   	// #1
  406620:	b.lt	406674 <wcrtomb@plt+0x3e04>  // b.tstop
  406624:	cmp	x21, x20
  406628:	b.cs	406674 <wcrtomb@plt+0x3e04>  // b.hs, b.nlast
  40662c:	mov	w23, #0x1                   	// #1
  406630:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  406634:	ldrb	w1, [x8, #2180]
  406638:	sub	x2, x20, x21
  40663c:	mov	x0, x21
  406640:	bl	4026d0 <memchr@plt>
  406644:	add	x1, x0, #0x1
  406648:	mov	w2, #0x2d                  	// #45
  40664c:	mov	x0, x21
  406650:	bl	4074f0 <wcrtomb@plt+0x4c80>
  406654:	ldr	x8, [x28, #32]
  406658:	sub	x9, x8, #0x1
  40665c:	cmp	x8, #0x2
  406660:	str	x9, [x28, #32]
  406664:	b.lt	406674 <wcrtomb@plt+0x3e04>  // b.tstop
  406668:	ldr	x21, [x28]
  40666c:	cmp	x21, x20
  406670:	b.cc	406630 <wcrtomb@plt+0x3dc0>  // b.lo, b.ul, b.last
  406674:	mov	x19, x27
  406678:	b	406710 <wcrtomb@plt+0x3ea0>
  40667c:	bl	4027e0 <__errno_location@plt>
  406680:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406684:	ldrb	w8, [x22, #1121]
  406688:	ldr	x26, [sp, #16]
  40668c:	ldp	w28, w20, [sp, #4]
  406690:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406694:	adrp	x27, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406698:	add	x25, x25, #0x478
  40669c:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4066a0:	add	x27, x27, #0x468
  4066a4:	tbnz	w8, #0, 4066ec <wcrtomb@plt+0x3e7c>
  4066a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4066ac:	ldr	x3, [x8, #1304]
  4066b0:	ldr	w21, [x0]
  4066b4:	cbnz	x3, 4066d8 <wcrtomb@plt+0x3e68>
  4066b8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4066bc:	add	x1, x1, #0x30e
  4066c0:	mov	w2, #0x5                   	// #5
  4066c4:	mov	x0, xzr
  4066c8:	bl	402740 <dcgettext@plt>
  4066cc:	mov	x3, x0
  4066d0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4066d4:	str	x0, [x8, #1304]
  4066d8:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4066dc:	add	x2, x2, #0x3d7
  4066e0:	mov	w0, wzr
  4066e4:	mov	w1, w21
  4066e8:	bl	4022a0 <error@plt>
  4066ec:	mov	w8, #0x1                   	// #1
  4066f0:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4066f4:	mov	w23, wzr
  4066f8:	strb	w8, [x9, #1138]
  4066fc:	b	406730 <wcrtomb@plt+0x3ec0>
  406700:	mov	w23, wzr
  406704:	b	406710 <wcrtomb@plt+0x3ea0>
  406708:	mov	x19, x27
  40670c:	mov	w23, #0x1                   	// #1
  406710:	ldr	x26, [sp, #16]
  406714:	ldp	w28, w20, [sp, #4]
  406718:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40671c:	adrp	x27, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406720:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406724:	add	x25, x25, #0x478
  406728:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40672c:	add	x27, x27, #0x468
  406730:	strb	w28, [x27]
  406734:	strb	w20, [x27, #4]
  406738:	cbz	w20, 4067dc <wcrtomb@plt+0x3f6c>
  40673c:	ldr	w27, [sp, #12]
  406740:	ldrb	w8, [x24, #1117]
  406744:	cmp	w8, #0x1
  406748:	b.ne	4068d4 <wcrtomb@plt+0x4064>  // b.any
  40674c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406750:	ldr	w8, [x8, #1172]
  406754:	cbz	w8, 406894 <wcrtomb@plt+0x4024>
  406758:	bl	406bd0 <wcrtomb@plt+0x4360>
  40675c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406760:	ldrb	w8, [x8, #1112]
  406764:	cmp	w8, #0x1
  406768:	b.ne	406874 <wcrtomb@plt+0x4004>  // b.any
  40676c:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406770:	ldr	w8, [x21, #1164]
  406774:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406778:	cbz	w8, 406794 <wcrtomb@plt+0x3f24>
  40677c:	ldr	x1, [x20, #904]
  406780:	ldrb	w8, [x1]
  406784:	cbz	w8, 406794 <wcrtomb@plt+0x3f24>
  406788:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40678c:	ldr	x0, [x8, #928]
  406790:	bl	417b7c <wcrtomb@plt+0x1530c>
  406794:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406798:	ldr	x0, [x8, #1080]
  40679c:	ldp	x8, x9, [x0, #40]
  4067a0:	cmp	x8, x9
  4067a4:	b.cs	406b48 <wcrtomb@plt+0x42d8>  // b.hs, b.nlast
  4067a8:	add	x9, x8, #0x1
  4067ac:	mov	w10, #0x3a                  	// #58
  4067b0:	str	x9, [x0, #40]
  4067b4:	strb	w10, [x8]
  4067b8:	ldr	w8, [x21, #1164]
  4067bc:	cbz	w8, 406894 <wcrtomb@plt+0x4024>
  4067c0:	ldr	x8, [x20, #904]
  4067c4:	ldrb	w8, [x8]
  4067c8:	cbz	w8, 406894 <wcrtomb@plt+0x4024>
  4067cc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4067d0:	ldr	x0, [x8, #936]
  4067d4:	bl	417b80 <wcrtomb@plt+0x15310>
  4067d8:	b	406894 <wcrtomb@plt+0x4024>
  4067dc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4067e0:	ldrb	w8, [x8, #1141]
  4067e4:	ldr	w27, [sp, #12]
  4067e8:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4067ec:	tbnz	w8, #0, 4067fc <wcrtomb@plt+0x3f8c>
  4067f0:	tbnz	x19, #63, 406740 <wcrtomb@plt+0x3ed0>
  4067f4:	cmp	x19, x26
  4067f8:	b.ge	406740 <wcrtomb@plt+0x3ed0>  // b.tcont
  4067fc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406800:	add	x1, x1, #0x31f
  406804:	mov	w2, #0x5                   	// #5
  406808:	mov	x0, xzr
  40680c:	bl	402740 <dcgettext@plt>
  406810:	ldr	x1, [x20, #1304]
  406814:	mov	x21, x0
  406818:	cbnz	x1, 406838 <wcrtomb@plt+0x3fc8>
  40681c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406820:	add	x1, x1, #0x30e
  406824:	mov	w2, #0x5                   	// #5
  406828:	mov	x0, xzr
  40682c:	bl	402740 <dcgettext@plt>
  406830:	mov	x1, x0
  406834:	str	x0, [x20, #1304]
  406838:	mov	x0, x21
  40683c:	bl	406ca0 <wcrtomb@plt+0x4430>
  406840:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406844:	ldrb	w8, [x8, #1125]
  406848:	cmp	w8, #0x1
  40684c:	b.ne	406740 <wcrtomb@plt+0x3ed0>  // b.any
  406850:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406854:	ldr	x0, [x8, #1080]
  406858:	bl	402670 <fflush_unlocked@plt>
  40685c:	cbz	w0, 406740 <wcrtomb@plt+0x3ed0>
  406860:	bl	4027e0 <__errno_location@plt>
  406864:	ldr	w8, [x0]
  406868:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40686c:	str	w8, [x9, #1176]
  406870:	b	406740 <wcrtomb@plt+0x3ed0>
  406874:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406878:	ldr	x0, [x8, #1080]
  40687c:	ldp	x8, x9, [x0, #40]
  406880:	cmp	x8, x9
  406884:	b.cs	406b68 <wcrtomb@plt+0x42f8>  // b.hs, b.nlast
  406888:	add	x9, x8, #0x1
  40688c:	str	x9, [x0, #40]
  406890:	strb	wzr, [x8]
  406894:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406898:	add	x0, x0, #0x2e0
  40689c:	mov	x1, x26
  4068a0:	bl	406ca0 <wcrtomb@plt+0x4430>
  4068a4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4068a8:	ldrb	w8, [x8, #1125]
  4068ac:	cmp	w8, #0x1
  4068b0:	b.ne	4068d4 <wcrtomb@plt+0x4064>  // b.any
  4068b4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4068b8:	ldr	x0, [x8, #1080]
  4068bc:	bl	402670 <fflush_unlocked@plt>
  4068c0:	cbz	w0, 4068d4 <wcrtomb@plt+0x4064>
  4068c4:	bl	4027e0 <__errno_location@plt>
  4068c8:	ldr	w8, [x0]
  4068cc:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4068d0:	str	w8, [x9, #1176]
  4068d4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4068d8:	ldr	w8, [x8, #1160]
  4068dc:	cmp	x26, #0x0
  4068e0:	cset	w9, eq  // eq = none
  4068e4:	cmp	w8, #0x2
  4068e8:	cset	w10, ne  // ne = any
  4068ec:	eor	w9, w9, w10
  4068f0:	eor	w24, w9, #0x1
  4068f4:	cbz	w8, 406908 <wcrtomb@plt+0x4098>
  4068f8:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4068fc:	ldrb	w9, [x9, #1126]
  406900:	cmp	w9, #0x1
  406904:	b.ne	406914 <wcrtomb@plt+0x40a4>  // b.any
  406908:	cbz	w27, 406998 <wcrtomb@plt+0x4128>
  40690c:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406910:	b	405804 <wcrtomb@plt+0x2f94>
  406914:	cmp	w8, #0x2
  406918:	cset	w8, ne  // ne = any
  40691c:	cmp	x26, #0x0
  406920:	cset	w9, eq  // eq = none
  406924:	cmp	w9, w8
  406928:	b.eq	406a28 <wcrtomb@plt+0x41b8>  // b.none
  40692c:	bl	406bd0 <wcrtomb@plt+0x4360>
  406930:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406934:	ldr	x0, [x20, #1080]
  406938:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40693c:	ldrb	w9, [x8, #1112]
  406940:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406944:	ldp	x8, x10, [x0, #40]
  406948:	cmp	w9, #0x0
  40694c:	mov	w9, #0xa                   	// #10
  406950:	csel	w1, w9, wzr, ne  // ne = any
  406954:	cmp	x8, x10
  406958:	b.cs	406b88 <wcrtomb@plt+0x4318>  // b.hs, b.nlast
  40695c:	add	x9, x8, #0x1
  406960:	str	x9, [x0, #40]
  406964:	strb	w1, [x8]
  406968:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40696c:	ldrb	w8, [x8, #1125]
  406970:	cmp	w8, #0x1
  406974:	b.ne	405800 <wcrtomb@plt+0x2f90>  // b.any
  406978:	ldr	x0, [x20, #1080]
  40697c:	bl	402670 <fflush_unlocked@plt>
  406980:	cbz	w0, 405800 <wcrtomb@plt+0x2f90>
  406984:	bl	4027e0 <__errno_location@plt>
  406988:	ldr	w8, [x0]
  40698c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406990:	str	w8, [x9, #1176]
  406994:	b	405800 <wcrtomb@plt+0x2f90>
  406998:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40699c:	ldr	x8, [x8, #1336]
  4069a0:	cbz	x8, 406a30 <wcrtomb@plt+0x41c0>
  4069a4:	cbnz	w23, 405864 <wcrtomb@plt+0x2ff4>
  4069a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4069ac:	ldrb	w8, [x8, #1144]
  4069b0:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4069b4:	cbz	w8, 406acc <wcrtomb@plt+0x425c>
  4069b8:	ldr	w8, [sp, #56]
  4069bc:	and	w8, w8, #0xf000
  4069c0:	cmp	w8, #0x1, lsl #12
  4069c4:	b.ne	406b24 <wcrtomb@plt+0x42b4>  // b.any
  4069c8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4069cc:	ldrb	w8, [x8, #1126]
  4069d0:	cmp	w8, #0x1
  4069d4:	b.ne	406b24 <wcrtomb@plt+0x42b4>  // b.any
  4069d8:	mov	w2, #0x1                   	// #1
  4069dc:	mov	w4, #0x18000               	// #98304
  4069e0:	mov	w5, #0x1                   	// #1
  4069e4:	mov	w0, wzr
  4069e8:	mov	x1, xzr
  4069ec:	mov	x3, xzr
  4069f0:	bl	4023d0 <splice@plt>
  4069f4:	tbnz	x0, #63, 406b14 <wcrtomb@plt+0x42a4>
  4069f8:	cbz	x0, 405864 <wcrtomb@plt+0x2ff4>
  4069fc:	mov	w2, #0x1                   	// #1
  406a00:	mov	w4, #0x18000               	// #98304
  406a04:	mov	w5, #0x1                   	// #1
  406a08:	mov	w0, wzr
  406a0c:	mov	x1, xzr
  406a10:	mov	x3, xzr
  406a14:	bl	4023d0 <splice@plt>
  406a18:	cmp	x0, #0x0
  406a1c:	b.gt	4069fc <wcrtomb@plt+0x418c>
  406a20:	cbnz	x0, 406a5c <wcrtomb@plt+0x41ec>
  406a24:	b	405800 <wcrtomb@plt+0x2f90>
  406a28:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406a2c:	b	405800 <wcrtomb@plt+0x2f90>
  406a30:	ldr	x8, [x25, #240]
  406a34:	ldr	x1, [x25, #200]
  406a38:	cmp	x8, x1
  406a3c:	b.eq	405864 <wcrtomb@plt+0x2ff4>  // b.none
  406a40:	ldrb	w8, [x25]
  406a44:	cbnz	w8, 405864 <wcrtomb@plt+0x2ff4>
  406a48:	mov	w0, wzr
  406a4c:	mov	w2, wzr
  406a50:	bl	402310 <lseek@plt>
  406a54:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406a58:	tbz	x0, #63, 405864 <wcrtomb@plt+0x2ff4>
  406a5c:	bl	4027e0 <__errno_location@plt>
  406a60:	ldrb	w8, [x22, #1121]
  406a64:	tbnz	w8, #0, 406aa8 <wcrtomb@plt+0x4238>
  406a68:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406a6c:	ldr	x3, [x21, #1304]
  406a70:	ldr	w20, [x0]
  406a74:	cbnz	x3, 406a94 <wcrtomb@plt+0x4224>
  406a78:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406a7c:	add	x1, x1, #0x30e
  406a80:	mov	w2, #0x5                   	// #5
  406a84:	mov	x0, xzr
  406a88:	bl	402740 <dcgettext@plt>
  406a8c:	mov	x3, x0
  406a90:	str	x0, [x21, #1304]
  406a94:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406a98:	add	x2, x2, #0x3d7
  406a9c:	mov	w0, wzr
  406aa0:	mov	w1, w20
  406aa4:	bl	4022a0 <error@plt>
  406aa8:	mov	w8, #0x1                   	// #1
  406aac:	strb	w8, [x23, #1138]
  406ab0:	b	405800 <wcrtomb@plt+0x2f90>
  406ab4:	ldrb	w8, [x22, #1121]
  406ab8:	tbnz	w8, #0, 4065ac <wcrtomb@plt+0x3d3c>
  406abc:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406ac0:	ldr	x3, [x21, #1304]
  406ac4:	cbnz	x3, 406598 <wcrtomb@plt+0x3d28>
  406ac8:	b	40657c <wcrtomb@plt+0x3d0c>
  406acc:	mov	w2, #0x2                   	// #2
  406ad0:	mov	w0, wzr
  406ad4:	mov	x1, xzr
  406ad8:	bl	402310 <lseek@plt>
  406adc:	tbz	x0, #63, 405864 <wcrtomb@plt+0x2ff4>
  406ae0:	bl	4027e0 <__errno_location@plt>
  406ae4:	ldr	w8, [x0]
  406ae8:	cmp	w8, #0x16
  406aec:	b.eq	405864 <wcrtomb@plt+0x2ff4>  // b.none
  406af0:	b	4069b8 <wcrtomb@plt+0x4148>
  406af4:	ldr	w27, [sp, #12]
  406af8:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406afc:	mov	w23, wzr
  406b00:	mov	x26, xzr
  406b04:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406b08:	add	x25, x25, #0x478
  406b0c:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406b10:	b	406740 <wcrtomb@plt+0x3ed0>
  406b14:	bl	4027e0 <__errno_location@plt>
  406b18:	ldr	w8, [x0]
  406b1c:	cmp	w8, #0x16
  406b20:	b.ne	406a5c <wcrtomb@plt+0x41ec>  // b.any
  406b24:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406b28:	add	x8, x8, #0x4f8
  406b2c:	ldp	x2, x1, [x8]
  406b30:	mov	w0, wzr
  406b34:	bl	416a20 <wcrtomb@plt+0x141b0>
  406b38:	cmn	x0, #0x1
  406b3c:	b.eq	406a5c <wcrtomb@plt+0x41ec>  // b.none
  406b40:	cbnz	x0, 406b24 <wcrtomb@plt+0x42b4>
  406b44:	b	405800 <wcrtomb@plt+0x2f90>
  406b48:	mov	w1, #0x3a                  	// #58
  406b4c:	bl	402590 <__overflow@plt>
  406b50:	tbz	w0, #31, 4067b8 <wcrtomb@plt+0x3f48>
  406b54:	bl	4027e0 <__errno_location@plt>
  406b58:	ldr	w8, [x0]
  406b5c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406b60:	str	w8, [x9, #1176]
  406b64:	b	4067b8 <wcrtomb@plt+0x3f48>
  406b68:	mov	w1, wzr
  406b6c:	bl	402590 <__overflow@plt>
  406b70:	tbz	w0, #31, 406894 <wcrtomb@plt+0x4024>
  406b74:	bl	4027e0 <__errno_location@plt>
  406b78:	ldr	w8, [x0]
  406b7c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406b80:	str	w8, [x9, #1176]
  406b84:	b	406894 <wcrtomb@plt+0x4024>
  406b88:	bl	402590 <__overflow@plt>
  406b8c:	tbz	w0, #31, 406968 <wcrtomb@plt+0x40f8>
  406b90:	bl	4027e0 <__errno_location@plt>
  406b94:	ldr	w8, [x0]
  406b98:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406b9c:	str	w8, [x9, #1176]
  406ba0:	b	406968 <wcrtomb@plt+0x40f8>
  406ba4:	bl	402560 <abort@plt>
  406ba8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406bac:	add	x1, x1, #0x348
  406bb0:	mov	w2, #0x5                   	// #5
  406bb4:	mov	x0, xzr
  406bb8:	bl	402740 <dcgettext@plt>
  406bbc:	mov	x2, x0
  406bc0:	mov	w0, #0x2                   	// #2
  406bc4:	mov	w1, wzr
  406bc8:	bl	4022a0 <error@plt>
  406bcc:	bl	41757c <wcrtomb@plt+0x14d0c>
  406bd0:	stp	x29, x30, [sp, #-48]!
  406bd4:	stp	x20, x19, [sp, #32]
  406bd8:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406bdc:	ldr	w8, [x20, #1164]
  406be0:	adrp	x19, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406be4:	str	x21, [sp, #16]
  406be8:	mov	x29, sp
  406bec:	cbz	w8, 406c08 <wcrtomb@plt+0x4398>
  406bf0:	ldr	x1, [x19, #880]
  406bf4:	ldrb	w8, [x1]
  406bf8:	cbz	w8, 406c08 <wcrtomb@plt+0x4398>
  406bfc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406c00:	ldr	x0, [x8, #928]
  406c04:	bl	417b7c <wcrtomb@plt+0x1530c>
  406c08:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406c0c:	ldr	x0, [x21, #1304]
  406c10:	cbz	x0, 406c30 <wcrtomb@plt+0x43c0>
  406c14:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406c18:	ldr	x1, [x8, #1080]
  406c1c:	bl	402750 <fputs_unlocked@plt>
  406c20:	tbnz	w0, #31, 406c54 <wcrtomb@plt+0x43e4>
  406c24:	ldr	w8, [x20, #1164]
  406c28:	cbnz	w8, 406c6c <wcrtomb@plt+0x43fc>
  406c2c:	b	406c90 <wcrtomb@plt+0x4420>
  406c30:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  406c34:	add	x1, x1, #0x30e
  406c38:	mov	w2, #0x5                   	// #5
  406c3c:	bl	402740 <dcgettext@plt>
  406c40:	str	x0, [x21, #1304]
  406c44:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406c48:	ldr	x1, [x8, #1080]
  406c4c:	bl	402750 <fputs_unlocked@plt>
  406c50:	tbz	w0, #31, 406c24 <wcrtomb@plt+0x43b4>
  406c54:	bl	4027e0 <__errno_location@plt>
  406c58:	ldr	w8, [x0]
  406c5c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406c60:	str	w8, [x9, #1176]
  406c64:	ldr	w8, [x20, #1164]
  406c68:	cbz	w8, 406c90 <wcrtomb@plt+0x4420>
  406c6c:	ldr	x8, [x19, #880]
  406c70:	ldrb	w8, [x8]
  406c74:	cbz	w8, 406c90 <wcrtomb@plt+0x4420>
  406c78:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406c7c:	ldr	x0, [x8, #936]
  406c80:	ldp	x20, x19, [sp, #32]
  406c84:	ldr	x21, [sp, #16]
  406c88:	ldp	x29, x30, [sp], #48
  406c8c:	b	417b80 <wcrtomb@plt+0x15310>
  406c90:	ldp	x20, x19, [sp, #32]
  406c94:	ldr	x21, [sp, #16]
  406c98:	ldp	x29, x30, [sp], #48
  406c9c:	ret
  406ca0:	sub	sp, sp, #0x120
  406ca4:	stp	x29, x30, [sp, #256]
  406ca8:	add	x29, sp, #0x100
  406cac:	mov	x9, #0xffffffffffffffc8    	// #-56
  406cb0:	mov	x10, sp
  406cb4:	sub	x11, x29, #0x78
  406cb8:	movk	x9, #0xff80, lsl #32
  406cbc:	add	x12, x29, #0x20
  406cc0:	add	x10, x10, #0x80
  406cc4:	add	x11, x11, #0x38
  406cc8:	adrp	x13, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406ccc:	stp	x10, x9, [x29, #-16]
  406cd0:	stp	x12, x11, [x29, #-32]
  406cd4:	mov	x8, x0
  406cd8:	stp	x1, x2, [x29, #-120]
  406cdc:	stp	x3, x4, [x29, #-104]
  406ce0:	stp	x5, x6, [x29, #-88]
  406ce4:	stur	x7, [x29, #-72]
  406ce8:	stp	q0, q1, [sp]
  406cec:	ldr	x0, [x13, #1080]
  406cf0:	ldp	q0, q1, [x29, #-32]
  406cf4:	sub	x2, x29, #0x40
  406cf8:	mov	x1, x8
  406cfc:	str	x28, [sp, #272]
  406d00:	stp	q2, q3, [sp, #32]
  406d04:	stp	q4, q5, [sp, #64]
  406d08:	stp	q6, q7, [sp, #96]
  406d0c:	stp	q0, q1, [x29, #-64]
  406d10:	bl	4027a0 <vfprintf@plt>
  406d14:	tbnz	w0, #31, 406d28 <wcrtomb@plt+0x44b8>
  406d18:	ldr	x28, [sp, #272]
  406d1c:	ldp	x29, x30, [sp, #256]
  406d20:	add	sp, sp, #0x120
  406d24:	ret
  406d28:	bl	4027e0 <__errno_location@plt>
  406d2c:	ldr	w8, [x0]
  406d30:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406d34:	str	w8, [x9, #1176]
  406d38:	ldr	x28, [sp, #272]
  406d3c:	ldp	x29, x30, [sp, #256]
  406d40:	add	sp, sp, #0x120
  406d44:	ret
  406d48:	stp	x29, x30, [sp, #-96]!
  406d4c:	stp	x28, x27, [sp, #16]
  406d50:	adrp	x27, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406d54:	add	x27, x27, #0x4f0
  406d58:	stp	x22, x21, [sp, #64]
  406d5c:	ldp	x9, x21, [x27, #8]
  406d60:	stp	x20, x19, [sp, #80]
  406d64:	ldr	x20, [x27, #104]
  406d68:	stp	x26, x25, [sp, #32]
  406d6c:	ldr	x26, [x27]
  406d70:	add	x10, x21, x9
  406d74:	sub	x10, x10, x20
  406d78:	sub	x10, x10, #0x8
  406d7c:	mov	x19, x1
  406d80:	sub	x8, x20, x0
  406d84:	cmp	x26, x10
  406d88:	adrp	x13, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406d8c:	stp	x24, x23, [sp, #48]
  406d90:	mov	x29, sp
  406d94:	b.ls	406ea0 <wcrtomb@plt+0x4630>  // b.plast
  406d98:	sub	x10, x9, x26
  406d9c:	add	x11, x26, x0
  406da0:	sub	x10, x10, #0x8
  406da4:	mov	x22, x0
  406da8:	cmp	x10, x11
  406dac:	b.cs	406dd0 <wcrtomb@plt+0x4560>  // b.hs, b.nlast
  406db0:	mov	x12, #0xfffffffffffffff7    	// #-9
  406db4:	sub	x12, x12, x26
  406db8:	lsr	x12, x12, #1
  406dbc:	cmp	x12, x10
  406dc0:	b.cc	40701c <wcrtomb@plt+0x47ac>  // b.lo, b.ul, b.last
  406dc4:	lsl	x10, x10, #1
  406dc8:	cmp	x10, x11
  406dcc:	b.cc	406dbc <wcrtomb@plt+0x454c>  // b.lo, b.ul, b.last
  406dd0:	ldr	w12, [x19, #16]
  406dd4:	and	w12, w12, #0xf000
  406dd8:	cmp	w12, #0x8, lsl #12
  406ddc:	b.ne	406e08 <wcrtomb@plt+0x4598>  // b.any
  406de0:	ldr	x12, [x19, #48]
  406de4:	ldr	x13, [x13, #1384]
  406de8:	mov	x14, #0xffffffffffffffff    	// #-1
  406dec:	sub	x12, x12, x13
  406df0:	add	x13, x12, x22
  406df4:	cmp	x12, x13
  406df8:	ccmp	x12, x14, #0x4, le
  406dfc:	ccmp	x11, x13, #0x2, gt
  406e00:	ccmp	x13, x10, #0x2, ls  // ls = plast
  406e04:	csel	x10, x13, x10, cc  // cc = lo, ul, last
  406e08:	add	x10, x26, x10
  406e0c:	add	x0, x10, #0x8
  406e10:	neg	x24, x22
  406e14:	cmp	x9, x0
  406e18:	sub	x25, x8, x21
  406e1c:	mov	x23, x21
  406e20:	b.cs	406e38 <wcrtomb@plt+0x45c8>  // b.hs, b.nlast
  406e24:	str	x0, [x27, #8]
  406e28:	bl	417290 <wcrtomb@plt+0x14a20>
  406e2c:	ldr	x26, [x27]
  406e30:	ldr	x21, [x27, #16]
  406e34:	mov	x23, x0
  406e38:	add	x8, x23, x22
  406e3c:	add	x10, x8, #0x1
  406e40:	udiv	x11, x10, x26
  406e44:	msub	x11, x11, x26, x10
  406e48:	sub	x12, x26, x11
  406e4c:	cmp	x11, #0x0
  406e50:	add	x10, x10, x12
  406e54:	csinc	x20, x10, x8, ne  // ne = any
  406e58:	add	x24, x20, x24
  406e5c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406e60:	add	x1, x21, x25
  406e64:	mov	x0, x24
  406e68:	mov	x2, x22
  406e6c:	str	x24, [x9, #1360]
  406e70:	bl	402230 <memmove@plt>
  406e74:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  406e78:	ldrb	w8, [x8, #2180]
  406e7c:	cmp	x23, x21
  406e80:	sturb	w8, [x24, #-1]
  406e84:	b.eq	406ea8 <wcrtomb@plt+0x4638>  // b.none
  406e88:	mov	x0, x21
  406e8c:	bl	402620 <free@plt>
  406e90:	ldr	x26, [x27]
  406e94:	mov	x21, x23
  406e98:	str	x23, [x27, #16]
  406e9c:	b	406ea8 <wcrtomb@plt+0x4638>
  406ea0:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406ea4:	str	x8, [x9, #1360]
  406ea8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406eac:	ldr	x8, [x8, #1272]
  406eb0:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406eb4:	adrp	x28, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406eb8:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406ebc:	add	x8, x21, x8
  406ec0:	sub	x8, x8, x20
  406ec4:	sub	x8, x8, #0x8
  406ec8:	udiv	x8, x8, x26
  406ecc:	add	x24, x24, #0x474
  406ed0:	adrp	x27, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406ed4:	add	x28, x28, #0x47c
  406ed8:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406edc:	add	x23, x23, #0x530
  406ee0:	mul	x22, x8, x26
  406ee4:	mov	w21, #0x1                   	// #1
  406ee8:	ldr	w0, [x24, #44]
  406eec:	mov	x1, x20
  406ef0:	mov	x2, x22
  406ef4:	bl	416a20 <wcrtomb@plt+0x141b0>
  406ef8:	ldur	x9, [x24, #244]
  406efc:	ldrb	w10, [x24]
  406f00:	cmn	x0, #0x1
  406f04:	csel	x8, xzr, x0, eq  // eq = none
  406f08:	cset	w11, ne  // ne = any
  406f0c:	cmp	x8, #0x0
  406f10:	and	w21, w21, w11
  406f14:	cset	w11, eq  // eq = none
  406f18:	add	x1, x8, x9
  406f1c:	eor	w9, w10, #0x1
  406f20:	orr	w9, w9, w11
  406f24:	stur	x1, [x24, #244]
  406f28:	cbnz	w9, 406fec <wcrtomb@plt+0x477c>
  406f2c:	cmp	x8, #0x1
  406f30:	add	x9, x20, x8
  406f34:	mov	x10, x20
  406f38:	b.lt	406f4c <wcrtomb@plt+0x46dc>  // b.tstop
  406f3c:	ldrb	w11, [x10], #1
  406f40:	cbnz	w11, 406fec <wcrtomb@plt+0x477c>
  406f44:	cmp	x10, x9
  406f48:	b.cc	406f3c <wcrtomb@plt+0x46cc>  // b.lo, b.ul, b.last
  406f4c:	ldr	x9, [x27, #1328]
  406f50:	adds	x8, x9, x8
  406f54:	b.cs	407020 <wcrtomb@plt+0x47b0>  // b.hs, b.nlast
  406f58:	ldrb	w9, [x28]
  406f5c:	stur	x8, [x28, #180]
  406f60:	cbnz	w9, 406ee8 <wcrtomb@plt+0x4678>
  406f64:	ldr	w0, [x25, #1184]
  406f68:	mov	w2, #0x3                   	// #3
  406f6c:	bl	402310 <lseek@plt>
  406f70:	tbnz	x0, #63, 406f94 <wcrtomb@plt+0x4724>
  406f74:	ldr	x8, [x23, #56]
  406f78:	ldr	x9, [x23]
  406f7c:	sub	x8, x0, x8
  406f80:	adds	x8, x8, x9
  406f84:	b.cs	407020 <wcrtomb@plt+0x47b0>  // b.hs, b.nlast
  406f88:	str	x8, [x23]
  406f8c:	str	x0, [x23, #56]
  406f90:	b	406ee8 <wcrtomb@plt+0x4678>
  406f94:	bl	4027e0 <__errno_location@plt>
  406f98:	ldr	w8, [x0]
  406f9c:	cmp	w8, #0x6
  406fa0:	b.ne	406fdc <wcrtomb@plt+0x476c>  // b.any
  406fa4:	ldr	w8, [x19, #16]
  406fa8:	and	w8, w8, #0xf000
  406fac:	cmp	w8, #0x8, lsl #12
  406fb0:	b.ne	406fdc <wcrtomb@plt+0x476c>  // b.any
  406fb4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406fb8:	ldr	x8, [x8, #1384]
  406fbc:	ldr	x9, [x19, #48]
  406fc0:	cmp	x8, x9
  406fc4:	b.ge	406fdc <wcrtomb@plt+0x476c>  // b.tcont
  406fc8:	ldr	w0, [x25, #1184]
  406fcc:	mov	w2, #0x2                   	// #2
  406fd0:	mov	x1, xzr
  406fd4:	bl	402310 <lseek@plt>
  406fd8:	tbz	x0, #63, 406f74 <wcrtomb@plt+0x4704>
  406fdc:	mov	w8, #0x1                   	// #1
  406fe0:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406fe4:	strb	w8, [x9, #1148]
  406fe8:	b	406ee8 <wcrtomb@plt+0x4678>
  406fec:	add	x9, x20, x8
  406ff0:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  406ff4:	str	x9, [x10, #1368]
  406ff8:	str	xzr, [x20, x8]
  406ffc:	mov	w0, w21
  407000:	ldp	x20, x19, [sp, #80]
  407004:	ldp	x22, x21, [sp, #64]
  407008:	ldp	x24, x23, [sp, #48]
  40700c:	ldp	x26, x25, [sp, #32]
  407010:	ldp	x28, x27, [sp, #16]
  407014:	ldp	x29, x30, [sp], #96
  407018:	ret
  40701c:	bl	41757c <wcrtomb@plt+0x14d0c>
  407020:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  407024:	add	x1, x1, #0x348
  407028:	mov	w2, #0x5                   	// #5
  40702c:	mov	x0, xzr
  407030:	bl	402740 <dcgettext@plt>
  407034:	mov	x2, x0
  407038:	mov	w0, #0x2                   	// #2
  40703c:	mov	w1, wzr
  407040:	bl	4022a0 <error@plt>
  407044:	sub	sp, sp, #0x70
  407048:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40704c:	ldr	x8, [x8, #1336]
  407050:	cmp	x0, x1
  407054:	stp	x29, x30, [sp, #16]
  407058:	stp	x28, x27, [sp, #32]
  40705c:	stp	x26, x25, [sp, #48]
  407060:	stp	x24, x23, [sp, #64]
  407064:	stp	x22, x21, [sp, #80]
  407068:	stp	x20, x19, [sp, #96]
  40706c:	add	x29, sp, #0x10
  407070:	str	x8, [sp]
  407074:	b.cs	40749c <wcrtomb@plt+0x4c2c>  // b.hs, b.nlast
  407078:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40707c:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407080:	adrp	x28, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407084:	mov	x26, x1
  407088:	mov	x20, x0
  40708c:	add	x22, x22, #0x4e0
  407090:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407094:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  407098:	add	x24, x24, #0x46c
  40709c:	add	x28, x28, #0x528
  4070a0:	adrp	x27, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4070a4:	b	4070b4 <wcrtomb@plt+0x4844>
  4070a8:	cmp	x19, x26
  4070ac:	mov	x20, x19
  4070b0:	b.cs	40749c <wcrtomb@plt+0x4c2c>  // b.hs, b.nlast
  4070b4:	ldp	x8, x0, [x22]
  4070b8:	sub	x21, x26, x20
  4070bc:	add	x3, sp, #0x8
  4070c0:	mov	x1, x20
  4070c4:	mov	x2, x21
  4070c8:	mov	x4, xzr
  4070cc:	blr	x8
  4070d0:	cmn	x0, #0x1
  4070d4:	b.eq	407108 <wcrtomb@plt+0x4898>  // b.none
  4070d8:	ldrb	w8, [x25, #1124]
  4070dc:	ldr	x11, [sp, #8]
  4070e0:	add	x9, x20, x0
  4070e4:	cmp	w8, #0x0
  4070e8:	cset	w10, eq  // eq = none
  4070ec:	cmp	x9, x26
  4070f0:	add	x19, x9, x11
  4070f4:	b.ne	4070fc <wcrtomb@plt+0x488c>  // b.any
  4070f8:	cbz	w8, 40749c <wcrtomb@plt+0x4c2c>
  4070fc:	cmp	x0, #0x0
  407100:	b.le	407130 <wcrtomb@plt+0x48c0>
  407104:	b	407134 <wcrtomb@plt+0x48c4>
  407108:	ldrb	w8, [x25, #1124]
  40710c:	cbz	w8, 40749c <wcrtomb@plt+0x4c2c>
  407110:	mov	w10, wzr
  407114:	str	xzr, [sp, #8]
  407118:	mov	w8, #0x1                   	// #1
  40711c:	mov	x19, x26
  407120:	mov	x9, x26
  407124:	mov	x0, x21
  407128:	cmp	x0, #0x0
  40712c:	b.gt	407134 <wcrtomb@plt+0x48c4>
  407130:	cbz	w10, 4070a8 <wcrtomb@plt+0x4838>
  407134:	ldrb	w10, [x24]
  407138:	ldrb	w21, [x23, #2180]
  40713c:	cmp	w8, #0x0
  407140:	csel	x22, x20, x9, ne  // ne = any
  407144:	csel	x20, x9, x19, ne  // ne = any
  407148:	cbnz	w10, 4071d0 <wcrtomb@plt+0x4960>
  40714c:	ldur	x8, [x24, #220]
  407150:	cmp	x8, #0x1
  407154:	b.lt	4071d0 <wcrtomb@plt+0x4960>  // b.tstop
  407158:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40715c:	ldr	x24, [x8, #1320]
  407160:	cbz	x24, 407170 <wcrtomb@plt+0x4900>
  407164:	cmp	x24, x22
  407168:	b.cc	407180 <wcrtomb@plt+0x4910>  // b.lo, b.ul, b.last
  40716c:	b	4071e0 <wcrtomb@plt+0x4970>
  407170:	ldr	x24, [x28, #40]
  407174:	str	x24, [x28]
  407178:	cmp	x24, x22
  40717c:	b.cs	4071e0 <wcrtomb@plt+0x4970>  // b.hs, b.nlast
  407180:	mov	w8, w21
  407184:	and	w1, w8, #0xff
  407188:	sub	x2, x22, x24
  40718c:	mov	x0, x24
  407190:	bl	4026d0 <memchr@plt>
  407194:	add	x1, x0, #0x1
  407198:	mov	w2, #0x2d                  	// #45
  40719c:	mov	x0, x24
  4071a0:	bl	4074f0 <wcrtomb@plt+0x4c80>
  4071a4:	ldr	x8, [x28, #32]
  4071a8:	sub	x9, x8, #0x1
  4071ac:	cmp	x8, #0x2
  4071b0:	str	x9, [x28, #32]
  4071b4:	b.lt	4071cc <wcrtomb@plt+0x495c>  // b.tstop
  4071b8:	ldr	x24, [x28]
  4071bc:	cmp	x24, x22
  4071c0:	b.cs	4071cc <wcrtomb@plt+0x495c>  // b.hs, b.nlast
  4071c4:	ldrb	w8, [x23, #2180]
  4071c8:	b	407184 <wcrtomb@plt+0x4914>
  4071cc:	ldrb	w10, [x27, #1132]
  4071d0:	mov	x24, x22
  4071d4:	cbnz	w10, 40734c <wcrtomb@plt+0x4adc>
  4071d8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4071dc:	ldr	x24, [x8, #1320]
  4071e0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4071e4:	add	x8, x8, #0x4c0
  4071e8:	ldr	x9, [x8, #144]
  4071ec:	ldr	x8, [x8]
  4071f0:	cmp	x24, #0x0
  4071f4:	mov	x23, x22
  4071f8:	csel	x9, x9, x24, eq  // eq = none
  4071fc:	cmp	x8, #0x1
  407200:	b.lt	407244 <wcrtomb@plt+0x49d4>  // b.tstop
  407204:	mov	x10, xzr
  407208:	mov	x11, x22
  40720c:	b	407224 <wcrtomb@plt+0x49b4>
  407210:	mov	x23, x11
  407214:	add	x10, x10, #0x1
  407218:	cmp	x10, x8
  40721c:	mov	x11, x23
  407220:	b.eq	407244 <wcrtomb@plt+0x49d4>  // b.none
  407224:	cmp	x11, x9
  407228:	b.ls	407210 <wcrtomb@plt+0x49a0>  // b.plast
  40722c:	ldurb	w12, [x11, #-2]
  407230:	sub	x23, x11, #0x1
  407234:	mov	x11, x23
  407238:	cmp	w12, w21
  40723c:	b.ne	40722c <wcrtomb@plt+0x49bc>  // b.any
  407240:	b	407214 <wcrtomb@plt+0x49a4>
  407244:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407248:	ldr	x9, [x9, #1224]
  40724c:	tst	x9, x8
  407250:	b.lt	407314 <wcrtomb@plt+0x4aa4>  // b.tstop
  407254:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407258:	ldrb	w8, [x8, #1149]
  40725c:	cmp	w8, #0x1
  407260:	b.ne	407314 <wcrtomb@plt+0x4aa4>  // b.any
  407264:	cmp	x23, x24
  407268:	b.eq	407314 <wcrtomb@plt+0x4aa4>  // b.none
  40726c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407270:	ldr	x0, [x8, #856]
  407274:	cbz	x0, 407314 <wcrtomb@plt+0x4aa4>
  407278:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40727c:	ldr	w8, [x8, #1164]
  407280:	cbz	w8, 4072a8 <wcrtomb@plt+0x4a38>
  407284:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407288:	ldr	x1, [x8, #904]
  40728c:	ldrb	w8, [x1]
  407290:	cbz	w8, 4072a8 <wcrtomb@plt+0x4a38>
  407294:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407298:	add	x24, x24, #0x358
  40729c:	ldr	x0, [x24, #72]
  4072a0:	bl	417b7c <wcrtomb@plt+0x1530c>
  4072a4:	ldr	x0, [x24]
  4072a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4072ac:	ldr	x1, [x8, #1080]
  4072b0:	bl	402750 <fputs_unlocked@plt>
  4072b4:	tbz	w0, #31, 4072c8 <wcrtomb@plt+0x4a58>
  4072b8:	bl	4027e0 <__errno_location@plt>
  4072bc:	ldr	w8, [x0]
  4072c0:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4072c4:	str	w8, [x9, #1176]
  4072c8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4072cc:	ldr	w8, [x8, #1164]
  4072d0:	cbz	w8, 4072f0 <wcrtomb@plt+0x4a80>
  4072d4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4072d8:	ldr	x8, [x8, #904]
  4072dc:	ldrb	w8, [x8]
  4072e0:	cbz	w8, 4072f0 <wcrtomb@plt+0x4a80>
  4072e4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4072e8:	ldr	x0, [x8, #936]
  4072ec:	bl	417b80 <wcrtomb@plt+0x15310>
  4072f0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4072f4:	ldr	x0, [x8, #1080]
  4072f8:	ldp	x8, x9, [x0, #40]
  4072fc:	cmp	x8, x9
  407300:	b.cs	40746c <wcrtomb@plt+0x4bfc>  // b.hs, b.nlast
  407304:	add	x9, x8, #0x1
  407308:	str	x9, [x0, #40]
  40730c:	mov	w9, #0xa                   	// #10
  407310:	strb	w9, [x8]
  407314:	cmp	x23, x22
  407318:	b.cs	4073cc <wcrtomb@plt+0x4b5c>  // b.hs, b.nlast
  40731c:	sub	x2, x22, x23
  407320:	mov	x0, x23
  407324:	mov	w1, w21
  407328:	bl	4026d0 <memchr@plt>
  40732c:	add	x24, x0, #0x1
  407330:	mov	w2, #0x2d                  	// #45
  407334:	mov	x0, x23
  407338:	mov	x1, x24
  40733c:	bl	4074f0 <wcrtomb@plt+0x4c80>
  407340:	cmp	x24, x22
  407344:	mov	x23, x24
  407348:	b.cc	40731c <wcrtomb@plt+0x4aac>  // b.lo, b.ul, b.last
  40734c:	ldrb	w8, [x25, #1124]
  407350:	cbz	w8, 4073d8 <wcrtomb@plt+0x4b68>
  407354:	cmp	x24, x20
  407358:	mov	x23, xzr
  40735c:	b.cs	4073c4 <wcrtomb@plt+0x4b54>  // b.hs, b.nlast
  407360:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407364:	ldr	x25, [x8, #1336]
  407368:	cmp	x25, #0x1
  40736c:	b.lt	4073c4 <wcrtomb@plt+0x4b54>  // b.tstop
  407370:	mov	x23, xzr
  407374:	sub	x2, x20, x24
  407378:	mov	x0, x24
  40737c:	mov	w1, w21
  407380:	bl	4026d0 <memchr@plt>
  407384:	ldrb	w8, [x27, #1132]
  407388:	add	x22, x0, #0x1
  40738c:	cbnz	w8, 4073a8 <wcrtomb@plt+0x4b38>
  407390:	mov	w2, #0x3a                  	// #58
  407394:	mov	x0, x24
  407398:	mov	x1, x22
  40739c:	bl	4074f0 <wcrtomb@plt+0x4c80>
  4073a0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4073a4:	ldr	x25, [x8, #1336]
  4073a8:	cmp	x22, x20
  4073ac:	add	x23, x23, #0x1
  4073b0:	b.cs	4073f8 <wcrtomb@plt+0x4b88>  // b.hs, b.nlast
  4073b4:	cmp	x23, x25
  4073b8:	mov	x24, x22
  4073bc:	b.lt	407374 <wcrtomb@plt+0x4b04>  // b.tstop
  4073c0:	b	4073f8 <wcrtomb@plt+0x4b88>
  4073c4:	mov	x22, x24
  4073c8:	b	4073f8 <wcrtomb@plt+0x4b88>
  4073cc:	mov	x24, x23
  4073d0:	ldrb	w8, [x25, #1124]
  4073d4:	cbnz	w8, 407354 <wcrtomb@plt+0x4ae4>
  4073d8:	ldrb	w8, [x27, #1132]
  4073dc:	cbnz	w8, 4073f0 <wcrtomb@plt+0x4b80>
  4073e0:	mov	w2, #0x3a                  	// #58
  4073e4:	mov	x0, x22
  4073e8:	mov	x1, x20
  4073ec:	bl	4074f0 <wcrtomb@plt+0x4c80>
  4073f0:	mov	x22, x20
  4073f4:	mov	w23, #0x1                   	// #1
  4073f8:	adrp	x13, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4073fc:	add	x13, x13, #0x468
  407400:	ldr	x11, [x13, #96]
  407404:	ldr	x8, [x13, #256]
  407408:	ldrb	w10, [x13, #4]
  40740c:	mov	w12, #0x1                   	// #1
  407410:	ldr	x9, [x13, #240]
  407414:	strb	w12, [x13, #21]
  407418:	ldr	x12, [x13, #208]
  40741c:	cmp	x11, #0x0
  407420:	add	x8, x8, x22
  407424:	ccmp	w10, #0x0, #0x0, gt
  407428:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40742c:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407430:	sub	x8, x8, x9
  407434:	csel	x9, x11, xzr, eq  // eq = none
  407438:	subs	x10, x12, x23
  40743c:	add	x22, x22, #0x4e0
  407440:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407444:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  407448:	add	x24, x24, #0x46c
  40744c:	stp	x8, x9, [x13, #216]
  407450:	str	x10, [x13, #208]
  407454:	b.eq	40748c <wcrtomb@plt+0x4c1c>  // b.none
  407458:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40745c:	add	x8, x8, #0x468
  407460:	ldrb	w8, [x8]
  407464:	cbz	w8, 4070a8 <wcrtomb@plt+0x4838>
  407468:	b	40748c <wcrtomb@plt+0x4c1c>
  40746c:	mov	w1, #0xa                   	// #10
  407470:	bl	402590 <__overflow@plt>
  407474:	tbz	w0, #31, 407314 <wcrtomb@plt+0x4aa4>
  407478:	bl	4027e0 <__errno_location@plt>
  40747c:	ldr	w8, [x0]
  407480:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407484:	str	w8, [x9, #1176]
  407488:	b	407314 <wcrtomb@plt+0x4aa4>
  40748c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407490:	ldrb	w8, [x8, #1119]
  407494:	cmp	w8, #0x1
  407498:	b.eq	4074cc <wcrtomb@plt+0x4c5c>  // b.none
  40749c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4074a0:	ldr	x8, [x8, #1336]
  4074a4:	ldr	x9, [sp]
  4074a8:	ldp	x20, x19, [sp, #96]
  4074ac:	ldp	x22, x21, [sp, #80]
  4074b0:	ldp	x24, x23, [sp, #64]
  4074b4:	ldp	x26, x25, [sp, #48]
  4074b8:	ldp	x28, x27, [sp, #32]
  4074bc:	ldp	x29, x30, [sp, #16]
  4074c0:	sub	x0, x9, x8
  4074c4:	add	sp, sp, #0x70
  4074c8:	ret
  4074cc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4074d0:	ldrb	w8, [x8, #1138]
  4074d4:	cmp	w8, #0x1
  4074d8:	b.ne	4074e8 <wcrtomb@plt+0x4c78>  // b.any
  4074dc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4074e0:	ldr	w0, [x8, #952]
  4074e4:	bl	402290 <exit@plt>
  4074e8:	mov	w0, wzr
  4074ec:	bl	402290 <exit@plt>
  4074f0:	sub	sp, sp, #0x70
  4074f4:	stp	x26, x25, [sp, #48]
  4074f8:	adrp	x26, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4074fc:	ldrb	w8, [x26, #1113]
  407500:	stp	x22, x21, [sp, #80]
  407504:	stp	x20, x19, [sp, #96]
  407508:	mov	w21, w2
  40750c:	mov	x19, x1
  407510:	mov	x20, x0
  407514:	stp	x29, x30, [sp, #16]
  407518:	stp	x28, x27, [sp, #32]
  40751c:	stp	x24, x23, [sp, #64]
  407520:	add	x29, sp, #0x10
  407524:	tbnz	w8, #0, 407544 <wcrtomb@plt+0x4cd4>
  407528:	mvn	x8, x20
  40752c:	add	x1, x19, x8
  407530:	mov	x0, x20
  407534:	mov	x2, x19
  407538:	mov	w3, w21
  40753c:	bl	4079cc <wcrtomb@plt+0x515c>
  407540:	tbz	w0, #0, 407988 <wcrtomb@plt+0x5118>
  407544:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407548:	add	x8, x8, #0x464
  40754c:	ldr	w11, [x8, #40]
  407550:	ldrb	w9, [x8]
  407554:	and	w8, w21, #0xff
  407558:	cmp	w8, #0x3a
  40755c:	cset	w10, eq  // eq = none
  407560:	cbz	w11, 4075bc <wcrtomb@plt+0x4d4c>
  407564:	cmp	w9, #0x0
  407568:	adrp	x12, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40756c:	cset	w13, ne  // ne = any
  407570:	cmp	w11, #0x0
  407574:	add	x12, x12, #0x360
  407578:	cset	w15, lt  // lt = tstop
  40757c:	cmp	w8, #0x3a
  407580:	and	w13, w13, w15
  407584:	add	x15, x12, #0x8
  407588:	add	x14, x12, #0x30
  40758c:	add	x8, x12, #0x38
  407590:	csel	x12, x15, x12, eq  // eq = none
  407594:	cset	w15, eq  // eq = none
  407598:	eor	w13, w15, w13
  40759c:	cmp	w13, #0x0
  4075a0:	csel	x8, x14, x8, ne  // ne = any
  4075a4:	ldr	x21, [x8]
  4075a8:	ldr	x22, [x12]
  4075ac:	ldrb	w8, [x26, #1113]
  4075b0:	cmp	w9, w10
  4075b4:	b.ne	4075d0 <wcrtomb@plt+0x4d60>  // b.any
  4075b8:	b	4075d4 <wcrtomb@plt+0x4d64>
  4075bc:	mov	x21, xzr
  4075c0:	mov	x22, xzr
  4075c4:	ldrb	w8, [x26, #1113]
  4075c8:	cmp	w9, w10
  4075cc:	b.eq	4075d4 <wcrtomb@plt+0x4d64>  // b.none
  4075d0:	tbnz	w8, #0, 4075e8 <wcrtomb@plt+0x4d78>
  4075d4:	cbz	w11, 4078b8 <wcrtomb@plt+0x5048>
  4075d8:	ldrb	w11, [x21]
  4075dc:	cbnz	w11, 4075e8 <wcrtomb@plt+0x4d78>
  4075e0:	ldrb	w11, [x22]
  4075e4:	cbz	w11, 4078b8 <wcrtomb@plt+0x5048>
  4075e8:	cmp	w9, w10
  4075ec:	b.eq	40780c <wcrtomb@plt+0x4f9c>  // b.none
  4075f0:	tbnz	w8, #0, 4075fc <wcrtomb@plt+0x4d8c>
  4075f4:	ldrb	w9, [x22]
  4075f8:	cbz	w9, 407814 <wcrtomb@plt+0x4fa4>
  4075fc:	cmp	x20, x19
  407600:	b.cs	4077e8 <wcrtomb@plt+0x4f78>  // b.hs, b.nlast
  407604:	adrp	x28, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407608:	mov	x27, xzr
  40760c:	sub	x23, x19, x20
  407610:	add	x28, x28, #0x4e0
  407614:	mov	x25, x20
  407618:	b	40763c <wcrtomb@plt+0x4dcc>
  40761c:	mov	w8, #0x1                   	// #1
  407620:	cmp	x27, #0x0
  407624:	str	x8, [sp, #8]
  407628:	csel	x27, x25, x27, eq  // eq = none
  40762c:	ldr	x8, [sp, #8]
  407630:	add	x25, x24, x8
  407634:	cmp	x25, x19
  407638:	b.cs	4077f0 <wcrtomb@plt+0x4f80>  // b.hs, b.nlast
  40763c:	ldp	x8, x0, [x28]
  407640:	add	x3, sp, #0x8
  407644:	mov	x1, x20
  407648:	mov	x2, x23
  40764c:	mov	x4, x25
  407650:	blr	x8
  407654:	cmn	x0, #0x1
  407658:	b.eq	4077f0 <wcrtomb@plt+0x4f80>  // b.none
  40765c:	add	x24, x20, x0
  407660:	cmp	x24, x19
  407664:	b.eq	4077f0 <wcrtomb@plt+0x4f80>  // b.none
  407668:	ldr	x1, [sp, #8]
  40766c:	cbz	x1, 40761c <wcrtomb@plt+0x4dac>
  407670:	ldrb	w8, [x26, #1113]
  407674:	cmp	w8, #0x1
  407678:	b.ne	4076b4 <wcrtomb@plt+0x4e44>  // b.any
  40767c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407680:	ldrb	w8, [x8, #1124]
  407684:	mov	w9, #0x3a                  	// #58
  407688:	mov	x0, x24
  40768c:	mov	x2, x19
  407690:	cmp	w8, #0x0
  407694:	mov	w8, #0x2d                  	// #45
  407698:	csel	w3, w9, w8, eq  // eq = none
  40769c:	bl	4079cc <wcrtomb@plt+0x515c>
  4076a0:	tbz	w0, #0, 407988 <wcrtomb@plt+0x5118>
  4076a4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4076a8:	ldr	w8, [x8, #1164]
  4076ac:	cbnz	w8, 407728 <wcrtomb@plt+0x4eb8>
  4076b0:	b	407740 <wcrtomb@plt+0x4ed0>
  4076b4:	ldrb	w8, [x21]
  4076b8:	cbz	w8, 4076cc <wcrtomb@plt+0x4e5c>
  4076bc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4076c0:	ldr	x0, [x8, #928]
  4076c4:	mov	x1, x21
  4076c8:	bl	417b7c <wcrtomb@plt+0x1530c>
  4076cc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4076d0:	ldr	x3, [x8, #1080]
  4076d4:	cmp	x27, #0x0
  4076d8:	csel	x0, x25, x27, eq  // eq = none
  4076dc:	sub	x25, x24, x0
  4076e0:	mov	w1, #0x1                   	// #1
  4076e4:	mov	x2, x25
  4076e8:	bl	402260 <fwrite_unlocked@plt>
  4076ec:	cmp	x0, x25
  4076f0:	b.ne	407708 <wcrtomb@plt+0x4e98>  // b.any
  4076f4:	mov	x27, xzr
  4076f8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4076fc:	ldr	w8, [x8, #1164]
  407700:	cbnz	w8, 407728 <wcrtomb@plt+0x4eb8>
  407704:	b	407740 <wcrtomb@plt+0x4ed0>
  407708:	bl	4027e0 <__errno_location@plt>
  40770c:	ldr	w8, [x0]
  407710:	mov	x27, xzr
  407714:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407718:	str	w8, [x9, #1176]
  40771c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407720:	ldr	w8, [x8, #1164]
  407724:	cbz	w8, 407740 <wcrtomb@plt+0x4ed0>
  407728:	ldrb	w8, [x22]
  40772c:	cbz	w8, 407740 <wcrtomb@plt+0x4ed0>
  407730:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407734:	ldr	x0, [x8, #928]
  407738:	mov	x1, x22
  40773c:	bl	417b7c <wcrtomb@plt+0x1530c>
  407740:	ldr	x25, [sp, #8]
  407744:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407748:	ldr	x3, [x8, #1080]
  40774c:	mov	w1, #0x1                   	// #1
  407750:	mov	x0, x24
  407754:	mov	x2, x25
  407758:	bl	402260 <fwrite_unlocked@plt>
  40775c:	cmp	x0, x25
  407760:	b.eq	407774 <wcrtomb@plt+0x4f04>  // b.none
  407764:	bl	4027e0 <__errno_location@plt>
  407768:	ldr	w8, [x0]
  40776c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407770:	str	w8, [x9, #1176]
  407774:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407778:	ldr	w8, [x8, #1164]
  40777c:	cbz	w8, 407794 <wcrtomb@plt+0x4f24>
  407780:	ldrb	w8, [x22]
  407784:	cbz	w8, 407794 <wcrtomb@plt+0x4f24>
  407788:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40778c:	ldr	x0, [x8, #936]
  407790:	bl	417b80 <wcrtomb@plt+0x15310>
  407794:	ldrb	w8, [x26, #1113]
  407798:	cmp	w8, #0x1
  40779c:	b.ne	40762c <wcrtomb@plt+0x4dbc>  // b.any
  4077a0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4077a4:	ldr	x0, [x8, #1080]
  4077a8:	adrp	x10, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4077ac:	ldrb	w1, [x10, #2180]
  4077b0:	ldp	x8, x9, [x0, #40]
  4077b4:	cmp	x8, x9
  4077b8:	b.cs	4077cc <wcrtomb@plt+0x4f5c>  // b.hs, b.nlast
  4077bc:	add	x9, x8, #0x1
  4077c0:	str	x9, [x0, #40]
  4077c4:	strb	w1, [x8]
  4077c8:	b	40762c <wcrtomb@plt+0x4dbc>
  4077cc:	bl	402590 <__overflow@plt>
  4077d0:	tbz	w0, #31, 40762c <wcrtomb@plt+0x4dbc>
  4077d4:	bl	4027e0 <__errno_location@plt>
  4077d8:	ldr	w8, [x0]
  4077dc:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4077e0:	str	w8, [x9, #1176]
  4077e4:	b	40762c <wcrtomb@plt+0x4dbc>
  4077e8:	mov	x27, xzr
  4077ec:	b	4077f8 <wcrtomb@plt+0x4f88>
  4077f0:	ldrb	w8, [x26, #1113]
  4077f4:	mov	x20, x25
  4077f8:	cmp	x27, #0x0
  4077fc:	csel	x9, x20, x27, eq  // eq = none
  407800:	cmp	w8, #0x0
  407804:	csel	x20, x19, x9, ne  // ne = any
  407808:	cbz	x20, 407988 <wcrtomb@plt+0x5118>
  40780c:	mov	x22, x20
  407810:	tbnz	w8, #0, 4078fc <wcrtomb@plt+0x508c>
  407814:	ldrb	w8, [x21]
  407818:	cbz	w8, 4078b8 <wcrtomb@plt+0x5048>
  40781c:	cmp	x20, x19
  407820:	b.cs	4078c8 <wcrtomb@plt+0x5058>  // b.hs, b.nlast
  407824:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  407828:	ldurb	w8, [x19, #-1]
  40782c:	ldrb	w9, [x9, #2180]
  407830:	cmp	w8, w9
  407834:	cset	w8, eq  // eq = none
  407838:	sub	x9, x19, x8
  40783c:	cmp	x9, x20
  407840:	b.hi	4078d8 <wcrtomb@plt+0x5068>  // b.pmore
  407844:	mov	x9, xzr
  407848:	add	x8, x8, x9
  40784c:	sub	x22, x19, x8
  407850:	subs	x23, x22, x20
  407854:	b.eq	4078f8 <wcrtomb@plt+0x5088>  // b.none
  407858:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40785c:	ldr	x0, [x8, #928]
  407860:	mov	x1, x21
  407864:	bl	417b7c <wcrtomb@plt+0x1530c>
  407868:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40786c:	ldr	x3, [x8, #1080]
  407870:	mov	w1, #0x1                   	// #1
  407874:	mov	x0, x20
  407878:	mov	x2, x23
  40787c:	bl	402260 <fwrite_unlocked@plt>
  407880:	cmp	x0, x23
  407884:	b.eq	407898 <wcrtomb@plt+0x5028>  // b.none
  407888:	bl	4027e0 <__errno_location@plt>
  40788c:	ldr	w8, [x0]
  407890:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407894:	str	w8, [x9, #1176]
  407898:	ldrb	w8, [x21]
  40789c:	cbz	w8, 4078fc <wcrtomb@plt+0x508c>
  4078a0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4078a4:	ldr	x0, [x8, #936]
  4078a8:	bl	417b80 <wcrtomb@plt+0x15310>
  4078ac:	cmp	x22, x19
  4078b0:	b.cc	407904 <wcrtomb@plt+0x5094>  // b.lo, b.ul, b.last
  4078b4:	b	407940 <wcrtomb@plt+0x50d0>
  4078b8:	mov	x22, x20
  4078bc:	cmp	x22, x19
  4078c0:	b.cc	407904 <wcrtomb@plt+0x5094>  // b.lo, b.ul, b.last
  4078c4:	b	407940 <wcrtomb@plt+0x50d0>
  4078c8:	mov	x8, xzr
  4078cc:	sub	x9, x19, x8
  4078d0:	cmp	x9, x20
  4078d4:	b.ls	407844 <wcrtomb@plt+0x4fd4>  // b.plast
  4078d8:	mvn	x9, x8
  4078dc:	ldrb	w9, [x19, x9]
  4078e0:	cmp	w9, #0xd
  4078e4:	cset	w9, eq  // eq = none
  4078e8:	add	x8, x8, x9
  4078ec:	sub	x22, x19, x8
  4078f0:	subs	x23, x22, x20
  4078f4:	b.ne	407858 <wcrtomb@plt+0x4fe8>  // b.any
  4078f8:	mov	x22, x20
  4078fc:	cmp	x22, x19
  407900:	b.cs	407940 <wcrtomb@plt+0x50d0>  // b.hs, b.nlast
  407904:	ldrb	w8, [x26, #1113]
  407908:	cbnz	w8, 407940 <wcrtomb@plt+0x50d0>
  40790c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407910:	ldr	x3, [x8, #1080]
  407914:	sub	x20, x19, x22
  407918:	mov	w1, #0x1                   	// #1
  40791c:	mov	x0, x22
  407920:	mov	x2, x20
  407924:	bl	402260 <fwrite_unlocked@plt>
  407928:	cmp	x0, x20
  40792c:	b.eq	407940 <wcrtomb@plt+0x50d0>  // b.none
  407930:	bl	4027e0 <__errno_location@plt>
  407934:	ldr	w8, [x0]
  407938:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40793c:	str	w8, [x9, #1176]
  407940:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407944:	ldrb	w8, [x8, #1125]
  407948:	cmp	w8, #0x1
  40794c:	b.ne	407974 <wcrtomb@plt+0x5104>  // b.any
  407950:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407954:	ldr	x0, [x8, #1080]
  407958:	bl	402670 <fflush_unlocked@plt>
  40795c:	cbz	w0, 407974 <wcrtomb@plt+0x5104>
  407960:	bl	4027e0 <__errno_location@plt>
  407964:	ldr	w20, [x0]
  407968:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40796c:	str	w20, [x8, #1176]
  407970:	b	40797c <wcrtomb@plt+0x510c>
  407974:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407978:	ldr	w20, [x8, #1176]
  40797c:	cbnz	w20, 4079a8 <wcrtomb@plt+0x5138>
  407980:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407984:	str	x19, [x8, #1320]
  407988:	ldp	x20, x19, [sp, #96]
  40798c:	ldp	x22, x21, [sp, #80]
  407990:	ldp	x24, x23, [sp, #64]
  407994:	ldp	x26, x25, [sp, #48]
  407998:	ldp	x28, x27, [sp, #32]
  40799c:	ldp	x29, x30, [sp, #16]
  4079a0:	add	sp, sp, #0x70
  4079a4:	ret
  4079a8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4079ac:	add	x1, x1, #0x337
  4079b0:	mov	w2, #0x5                   	// #5
  4079b4:	mov	x0, xzr
  4079b8:	bl	402740 <dcgettext@plt>
  4079bc:	mov	x2, x0
  4079c0:	mov	w0, #0x2                   	// #2
  4079c4:	mov	w1, w20
  4079c8:	bl	4022a0 <error@plt>
  4079cc:	sub	sp, sp, #0x60
  4079d0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4079d4:	ldr	w8, [x8, #1156]
  4079d8:	stp	x22, x21, [sp, #64]
  4079dc:	stp	x20, x19, [sp, #80]
  4079e0:	mov	w20, w3
  4079e4:	mov	x22, x2
  4079e8:	mov	x19, x1
  4079ec:	cmp	w8, #0x1
  4079f0:	mov	x21, x0
  4079f4:	stp	x29, x30, [sp, #16]
  4079f8:	stp	x26, x25, [sp, #32]
  4079fc:	stp	x24, x23, [sp, #48]
  407a00:	add	x29, sp, #0x10
  407a04:	b.eq	407aa8 <wcrtomb@plt+0x5238>  // b.none
  407a08:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407a0c:	ldr	x8, [x24, #1296]
  407a10:	cbz	x8, 407aa8 <wcrtomb@plt+0x5238>
  407a14:	add	x25, x21, x19
  407a18:	ldrb	w26, [x25]
  407a1c:	mov	w9, #0xff                  	// #255
  407a20:	mov	x23, x21
  407a24:	str	xzr, [sp, #8]
  407a28:	strb	w9, [x25]
  407a2c:	tst	x23, #0x7
  407a30:	b.eq	407a4c <wcrtomb@plt+0x51dc>  // b.none
  407a34:	ldrb	w9, [x23]
  407a38:	tst	x8, x9
  407a3c:	b.ne	407a70 <wcrtomb@plt+0x5200>  // b.any
  407a40:	add	x23, x23, #0x1
  407a44:	tst	x23, #0x7
  407a48:	b.ne	407a34 <wcrtomb@plt+0x51c4>  // b.any
  407a4c:	sub	x23, x23, #0x8
  407a50:	ldr	x9, [x23, #8]!
  407a54:	ands	x9, x9, x8
  407a58:	b.eq	407a50 <wcrtomb@plt+0x51e0>  // b.none
  407a5c:	tst	x9, #0xff
  407a60:	b.ne	407a70 <wcrtomb@plt+0x5200>  // b.any
  407a64:	ldrb	w9, [x23, #1]!
  407a68:	tst	x8, x9
  407a6c:	b.eq	407a64 <wcrtomb@plt+0x51f4>  // b.none
  407a70:	cmp	x23, x25
  407a74:	b.cs	407aa4 <wcrtomb@plt+0x5234>  // b.hs, b.nlast
  407a78:	sub	x1, x25, x23
  407a7c:	add	x2, sp, #0x8
  407a80:	mov	x0, x23
  407a84:	bl	419d80 <wcrtomb@plt+0x17510>
  407a88:	cmn	x0, #0x3
  407a8c:	b.hi	407bb8 <wcrtomb@plt+0x5348>  // b.pmore
  407a90:	ldr	x8, [x24, #1296]
  407a94:	add	x23, x23, x0
  407a98:	tst	x23, #0x7
  407a9c:	b.ne	407a34 <wcrtomb@plt+0x51c4>  // b.any
  407aa0:	b	407a4c <wcrtomb@plt+0x51dc>
  407aa4:	strb	w26, [x25]
  407aa8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407aac:	ldr	w8, [x8, #1172]
  407ab0:	cbz	w8, 407b54 <wcrtomb@plt+0x52e4>
  407ab4:	bl	406bd0 <wcrtomb@plt+0x4360>
  407ab8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407abc:	ldrb	w8, [x8, #1112]
  407ac0:	cmp	w8, #0x1
  407ac4:	b.ne	407b34 <wcrtomb@plt+0x52c4>  // b.any
  407ac8:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407acc:	ldr	w8, [x24, #1164]
  407ad0:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ad4:	cbz	w8, 407af0 <wcrtomb@plt+0x5280>
  407ad8:	ldr	x1, [x23, #904]
  407adc:	ldrb	w8, [x1]
  407ae0:	cbz	w8, 407af0 <wcrtomb@plt+0x5280>
  407ae4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ae8:	ldr	x0, [x8, #928]
  407aec:	bl	417b7c <wcrtomb@plt+0x1530c>
  407af0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407af4:	ldr	x0, [x8, #1080]
  407af8:	ldp	x8, x9, [x0, #40]
  407afc:	cmp	x8, x9
  407b00:	b.cs	407e88 <wcrtomb@plt+0x5618>  // b.hs, b.nlast
  407b04:	add	x9, x8, #0x1
  407b08:	str	x9, [x0, #40]
  407b0c:	strb	w20, [x8]
  407b10:	ldr	w8, [x24, #1164]
  407b14:	cbz	w8, 407b54 <wcrtomb@plt+0x52e4>
  407b18:	ldr	x8, [x23, #904]
  407b1c:	ldrb	w8, [x8]
  407b20:	cbz	w8, 407b54 <wcrtomb@plt+0x52e4>
  407b24:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407b28:	ldr	x0, [x8, #936]
  407b2c:	bl	417b80 <wcrtomb@plt+0x15310>
  407b30:	b	407b54 <wcrtomb@plt+0x52e4>
  407b34:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407b38:	ldr	x0, [x8, #1080]
  407b3c:	ldp	x8, x9, [x0, #40]
  407b40:	cmp	x8, x9
  407b44:	b.cs	407ea8 <wcrtomb@plt+0x5638>  // b.hs, b.nlast
  407b48:	add	x9, x8, #0x1
  407b4c:	str	x9, [x0, #40]
  407b50:	strb	wzr, [x8]
  407b54:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407b58:	ldrb	w8, [x8, #1118]
  407b5c:	cmp	w8, #0x1
  407b60:	b.ne	407cd4 <wcrtomb@plt+0x5464>  // b.any
  407b64:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407b68:	ldr	x0, [x8, #1376]
  407b6c:	cmp	x0, x22
  407b70:	b.cs	407bac <wcrtomb@plt+0x533c>  // b.hs, b.nlast
  407b74:	cmp	x0, x21
  407b78:	b.cs	407bd0 <wcrtomb@plt+0x5360>  // b.hs, b.nlast
  407b7c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  407b80:	ldrb	w23, [x8, #2180]
  407b84:	mov	x24, xzr
  407b88:	sub	x2, x21, x0
  407b8c:	mov	w1, w23
  407b90:	bl	4026d0 <memchr@plt>
  407b94:	cbz	x0, 407bd4 <wcrtomb@plt+0x5364>
  407b98:	add	x0, x0, #0x1
  407b9c:	cmp	x0, x21
  407ba0:	add	x24, x24, #0x1
  407ba4:	b.cc	407b88 <wcrtomb@plt+0x5318>  // b.lo, b.ul, b.last
  407ba8:	b	407bd4 <wcrtomb@plt+0x5364>
  407bac:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407bb0:	ldr	x23, [x8, #1328]
  407bb4:	b	407c08 <wcrtomb@plt+0x5398>
  407bb8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407bbc:	mov	w9, #0x1                   	// #1
  407bc0:	mov	w0, wzr
  407bc4:	strb	w26, [x25]
  407bc8:	strb	w9, [x8, #1141]
  407bcc:	b	407e2c <wcrtomb@plt+0x55bc>
  407bd0:	mov	x24, xzr
  407bd4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407bd8:	ldr	x8, [x8, #1328]
  407bdc:	adds	x8, x8, x24
  407be0:	b.cs	407ee8 <wcrtomb@plt+0x5678>  // b.hs, b.nlast
  407be4:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407be8:	add	x9, x9, #0x530
  407bec:	cmn	x8, #0x1
  407bf0:	str	x8, [x9]
  407bf4:	str	x21, [x9, #48]
  407bf8:	b.eq	407ee8 <wcrtomb@plt+0x5678>  // b.none
  407bfc:	add	x23, x8, #0x1
  407c00:	str	x23, [x9]
  407c04:	str	x22, [x9, #48]
  407c08:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c0c:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c10:	ldr	w9, [x24, #1164]
  407c14:	ldr	x22, [x8, #888]
  407c18:	cbz	w9, 407c34 <wcrtomb@plt+0x53c4>
  407c1c:	ldrb	w8, [x22]
  407c20:	cbz	w8, 407c34 <wcrtomb@plt+0x53c4>
  407c24:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c28:	ldr	x0, [x8, #928]
  407c2c:	mov	x1, x22
  407c30:	bl	417b7c <wcrtomb@plt+0x1530c>
  407c34:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c38:	add	x25, x25, #0x48c
  407c3c:	ldr	w1, [x25, #16]
  407c40:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  407c44:	add	x0, x0, #0x343
  407c48:	mov	x2, x23
  407c4c:	bl	406ca0 <wcrtomb@plt+0x4430>
  407c50:	ldr	w8, [x25]
  407c54:	cbz	w8, 407c90 <wcrtomb@plt+0x5420>
  407c58:	ldrb	w8, [x22]
  407c5c:	cbz	w8, 407c74 <wcrtomb@plt+0x5404>
  407c60:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c64:	ldr	x0, [x8, #936]
  407c68:	bl	417b80 <wcrtomb@plt+0x15310>
  407c6c:	ldr	w8, [x24, #1164]
  407c70:	cbz	w8, 407c90 <wcrtomb@plt+0x5420>
  407c74:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c78:	ldr	x1, [x8, #904]
  407c7c:	ldrb	w8, [x1]
  407c80:	cbz	w8, 407c90 <wcrtomb@plt+0x5420>
  407c84:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c88:	ldr	x0, [x8, #928]
  407c8c:	bl	417b7c <wcrtomb@plt+0x1530c>
  407c90:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407c94:	ldr	x0, [x8, #1080]
  407c98:	ldp	x8, x9, [x0, #40]
  407c9c:	cmp	x8, x9
  407ca0:	b.cs	407e48 <wcrtomb@plt+0x55d8>  // b.hs, b.nlast
  407ca4:	add	x9, x8, #0x1
  407ca8:	str	x9, [x0, #40]
  407cac:	strb	w20, [x8]
  407cb0:	ldr	w8, [x24, #1164]
  407cb4:	cbz	w8, 407cd4 <wcrtomb@plt+0x5464>
  407cb8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407cbc:	ldr	x8, [x8, #904]
  407cc0:	ldrb	w8, [x8]
  407cc4:	cbz	w8, 407cd4 <wcrtomb@plt+0x5464>
  407cc8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ccc:	ldr	x0, [x8, #936]
  407cd0:	bl	417b80 <wcrtomb@plt+0x15310>
  407cd4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407cd8:	ldrb	w8, [x8, #1116]
  407cdc:	cmp	w8, #0x1
  407ce0:	b.ne	407dcc <wcrtomb@plt+0x555c>  // b.any
  407ce4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ce8:	add	x8, x8, #0x520
  407cec:	ldr	x9, [x8, #48]
  407cf0:	ldr	x8, [x8]
  407cf4:	sub	x9, x21, x9
  407cf8:	adds	x21, x9, x8
  407cfc:	b.cs	407ee8 <wcrtomb@plt+0x5678>  // b.hs, b.nlast
  407d00:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d04:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d08:	ldr	w9, [x23, #1164]
  407d0c:	ldr	x22, [x8, #896]
  407d10:	cbz	w9, 407d2c <wcrtomb@plt+0x54bc>
  407d14:	ldrb	w8, [x22]
  407d18:	cbz	w8, 407d2c <wcrtomb@plt+0x54bc>
  407d1c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d20:	ldr	x0, [x8, #928]
  407d24:	mov	x1, x22
  407d28:	bl	417b7c <wcrtomb@plt+0x1530c>
  407d2c:	adrp	x24, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d30:	add	x24, x24, #0x48c
  407d34:	ldr	w1, [x24, #16]
  407d38:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  407d3c:	add	x0, x0, #0x343
  407d40:	mov	x2, x21
  407d44:	bl	406ca0 <wcrtomb@plt+0x4430>
  407d48:	ldr	w8, [x24]
  407d4c:	cbz	w8, 407d88 <wcrtomb@plt+0x5518>
  407d50:	ldrb	w8, [x22]
  407d54:	cbz	w8, 407d6c <wcrtomb@plt+0x54fc>
  407d58:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d5c:	ldr	x0, [x8, #936]
  407d60:	bl	417b80 <wcrtomb@plt+0x15310>
  407d64:	ldr	w8, [x23, #1164]
  407d68:	cbz	w8, 407d88 <wcrtomb@plt+0x5518>
  407d6c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d70:	ldr	x1, [x8, #904]
  407d74:	ldrb	w8, [x1]
  407d78:	cbz	w8, 407d88 <wcrtomb@plt+0x5518>
  407d7c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d80:	ldr	x0, [x8, #928]
  407d84:	bl	417b7c <wcrtomb@plt+0x1530c>
  407d88:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407d8c:	ldr	x0, [x8, #1080]
  407d90:	ldp	x8, x9, [x0, #40]
  407d94:	cmp	x8, x9
  407d98:	b.cs	407e68 <wcrtomb@plt+0x55f8>  // b.hs, b.nlast
  407d9c:	add	x9, x8, #0x1
  407da0:	str	x9, [x0, #40]
  407da4:	strb	w20, [x8]
  407da8:	ldr	w8, [x23, #1164]
  407dac:	cbz	w8, 407dcc <wcrtomb@plt+0x555c>
  407db0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407db4:	ldr	x8, [x8, #904]
  407db8:	ldrb	w8, [x8]
  407dbc:	cbz	w8, 407dcc <wcrtomb@plt+0x555c>
  407dc0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407dc4:	ldr	x0, [x8, #936]
  407dc8:	bl	417b80 <wcrtomb@plt+0x15310>
  407dcc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407dd0:	ldrb	w8, [x8, #1114]
  407dd4:	cmp	w8, #0x1
  407dd8:	b.ne	407e28 <wcrtomb@plt+0x55b8>  // b.any
  407ddc:	mov	w0, #0x1                   	// #1
  407de0:	cbz	x19, 407e2c <wcrtomb@plt+0x55bc>
  407de4:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407de8:	add	x8, x8, #0x45c
  407dec:	ldr	w9, [x8, #56]
  407df0:	ldrb	w10, [x8, #2]
  407df4:	ldrb	w8, [x8]
  407df8:	orr	w9, w9, w10
  407dfc:	orr	w8, w9, w8
  407e00:	cbz	w8, 407e2c <wcrtomb@plt+0x55bc>
  407e04:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407e08:	ldr	x0, [x8, #1080]
  407e0c:	ldp	x8, x9, [x0, #40]
  407e10:	cmp	x8, x9
  407e14:	b.cs	407ec8 <wcrtomb@plt+0x5658>  // b.hs, b.nlast
  407e18:	add	x9, x8, #0x1
  407e1c:	mov	w10, #0x9                   	// #9
  407e20:	str	x9, [x0, #40]
  407e24:	strb	w10, [x8]
  407e28:	mov	w0, #0x1                   	// #1
  407e2c:	ldp	x20, x19, [sp, #80]
  407e30:	ldp	x22, x21, [sp, #64]
  407e34:	ldp	x24, x23, [sp, #48]
  407e38:	ldp	x26, x25, [sp, #32]
  407e3c:	ldp	x29, x30, [sp, #16]
  407e40:	add	sp, sp, #0x60
  407e44:	ret
  407e48:	and	w1, w20, #0xff
  407e4c:	bl	402590 <__overflow@plt>
  407e50:	tbz	w0, #31, 407cb0 <wcrtomb@plt+0x5440>
  407e54:	bl	4027e0 <__errno_location@plt>
  407e58:	ldr	w8, [x0]
  407e5c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407e60:	str	w8, [x9, #1176]
  407e64:	b	407cb0 <wcrtomb@plt+0x5440>
  407e68:	and	w1, w20, #0xff
  407e6c:	bl	402590 <__overflow@plt>
  407e70:	tbz	w0, #31, 407da8 <wcrtomb@plt+0x5538>
  407e74:	bl	4027e0 <__errno_location@plt>
  407e78:	ldr	w8, [x0]
  407e7c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407e80:	str	w8, [x9, #1176]
  407e84:	b	407da8 <wcrtomb@plt+0x5538>
  407e88:	and	w1, w20, #0xff
  407e8c:	bl	402590 <__overflow@plt>
  407e90:	tbz	w0, #31, 407b10 <wcrtomb@plt+0x52a0>
  407e94:	bl	4027e0 <__errno_location@plt>
  407e98:	ldr	w8, [x0]
  407e9c:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ea0:	str	w8, [x9, #1176]
  407ea4:	b	407b10 <wcrtomb@plt+0x52a0>
  407ea8:	mov	w1, wzr
  407eac:	bl	402590 <__overflow@plt>
  407eb0:	tbz	w0, #31, 407b54 <wcrtomb@plt+0x52e4>
  407eb4:	bl	4027e0 <__errno_location@plt>
  407eb8:	ldr	w8, [x0]
  407ebc:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ec0:	str	w8, [x9, #1176]
  407ec4:	b	407b54 <wcrtomb@plt+0x52e4>
  407ec8:	mov	w1, #0x9                   	// #9
  407ecc:	bl	402590 <__overflow@plt>
  407ed0:	tbz	w0, #31, 407e28 <wcrtomb@plt+0x55b8>
  407ed4:	bl	4027e0 <__errno_location@plt>
  407ed8:	ldr	w8, [x0]
  407edc:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  407ee0:	str	w8, [x9, #1176]
  407ee4:	b	407e28 <wcrtomb@plt+0x55b8>
  407ee8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  407eec:	add	x1, x1, #0x348
  407ef0:	mov	w2, #0x5                   	// #5
  407ef4:	mov	x0, xzr
  407ef8:	bl	402740 <dcgettext@plt>
  407efc:	mov	x2, x0
  407f00:	mov	w0, #0x2                   	// #2
  407f04:	mov	w1, wzr
  407f08:	bl	4022a0 <error@plt>
  407f0c:	stp	x29, x30, [sp, #-96]!
  407f10:	stp	x28, x27, [sp, #16]
  407f14:	stp	x26, x25, [sp, #32]
  407f18:	stp	x24, x23, [sp, #48]
  407f1c:	stp	x22, x21, [sp, #64]
  407f20:	stp	x20, x19, [sp, #80]
  407f24:	mov	x29, sp
  407f28:	sub	sp, sp, #0x1c0
  407f2c:	mov	x23, x0
  407f30:	mov	w0, #0x1                   	// #1
  407f34:	mov	x19, x1
  407f38:	stur	xzr, [x29, #-16]
  407f3c:	bl	409c78 <wcrtomb@plt+0x7408>
  407f40:	mov	x21, x0
  407f44:	mov	x22, xzr
  407f48:	adrp	x28, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  407f4c:	stp	x19, x23, [sp]
  407f50:	b	407f70 <wcrtomb@plt+0x5700>
  407f54:	mov	x25, x26
  407f58:	mov	x0, x21
  407f5c:	mov	x1, x23
  407f60:	mov	x2, x25
  407f64:	bl	4089bc <wcrtomb@plt+0x614c>
  407f68:	mov	x23, x20
  407f6c:	cbz	x24, 40802c <wcrtomb@plt+0x57bc>
  407f70:	mov	w1, #0xa                   	// #10
  407f74:	mov	x0, x23
  407f78:	mov	x2, x19
  407f7c:	mov	x25, x19
  407f80:	bl	4026d0 <memchr@plt>
  407f84:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  407f88:	ldrb	w9, [x9, #3469]
  407f8c:	sub	x8, x0, x23
  407f90:	mvn	x10, x8
  407f94:	cmp	x0, #0x0
  407f98:	mov	x24, x0
  407f9c:	add	x20, x0, #0x1
  407fa0:	add	x19, x19, x10
  407fa4:	csel	x26, x25, x8, eq  // eq = none
  407fa8:	cbz	w9, 407f54 <wcrtomb@plt+0x56e4>
  407fac:	ldrb	w27, [x28, #2180]
  407fb0:	cmp	w27, #0xa
  407fb4:	b.ne	407fd4 <wcrtomb@plt+0x5764>  // b.any
  407fb8:	ldr	x8, [sp, #8]
  407fbc:	cmp	x23, x8
  407fc0:	b.ls	407fd4 <wcrtomb@plt+0x5764>  // b.plast
  407fc4:	cbz	x24, 407fd4 <wcrtomb@plt+0x5764>
  407fc8:	sub	x23, x23, #0x1
  407fcc:	add	x25, x26, #0x2
  407fd0:	b	407f58 <wcrtomb@plt+0x56e8>
  407fd4:	ldur	x8, [x29, #-16]
  407fd8:	add	x25, x26, #0x2
  407fdc:	cmp	x8, x25
  407fe0:	b.cs	40800c <wcrtomb@plt+0x579c>  // b.hs, b.nlast
  407fe4:	mov	x0, x22
  407fe8:	bl	402620 <free@plt>
  407fec:	sub	x1, x29, #0x10
  407ff0:	mov	x0, xzr
  407ff4:	stur	x25, [x29, #-16]
  407ff8:	bl	417428 <wcrtomb@plt+0x14bb8>
  407ffc:	ldrb	w8, [x28, #2180]
  408000:	mov	x22, x0
  408004:	strb	w8, [x0]
  408008:	ldrb	w27, [x28, #2180]
  40800c:	add	x0, x22, #0x1
  408010:	mov	x1, x23
  408014:	mov	x2, x26
  408018:	bl	402210 <memcpy@plt>
  40801c:	add	x8, x26, x22
  408020:	mov	x23, x22
  408024:	strb	w27, [x8, #1]
  408028:	b	407f58 <wcrtomb@plt+0x56e8>
  40802c:	mov	x0, x22
  408030:	bl	402620 <free@plt>
  408034:	mov	x0, x21
  408038:	bl	409390 <wcrtomb@plt+0x6b20>
  40803c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  408040:	ldrb	w8, [x8, #3470]
  408044:	ldr	x28, [sp]
  408048:	mov	x22, x0
  40804c:	cbz	w8, 40811c <wcrtomb@plt+0x58ac>
  408050:	movi	v0.2d, #0x0
  408054:	cmp	x28, #0x1
  408058:	stur	xzr, [x29, #-24]
  40805c:	stp	q0, q0, [sp, #384]
  408060:	stp	q0, q0, [sp, #352]
  408064:	stp	q0, q0, [sp, #320]
  408068:	stp	q0, q0, [sp, #288]
  40806c:	stp	q0, q0, [sp, #256]
  408070:	stp	q0, q0, [sp, #224]
  408074:	stp	q0, q0, [sp, #192]
  408078:	stp	q0, q0, [sp, #160]
  40807c:	b.lt	40811c <wcrtomb@plt+0x58ac>  // b.tstop
  408080:	ldr	x26, [sp, #8]
  408084:	add	x8, sp, #0x20
  408088:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40808c:	add	x20, sp, #0xa0
  408090:	add	x19, x26, x28
  408094:	mov	w23, #0x1                   	// #1
  408098:	sub	x24, x8, #0x4
  40809c:	add	x25, x25, #0x888
  4080a0:	b	4080b0 <wcrtomb@plt+0x5840>
  4080a4:	add	x26, x26, #0x1
  4080a8:	cmp	x26, x19
  4080ac:	b.cs	40811c <wcrtomb@plt+0x58ac>  // b.hs, b.nlast
  4080b0:	ldrb	w8, [x26]
  4080b4:	ldrb	w9, [x20, x8]
  4080b8:	cbnz	w9, 4080a4 <wcrtomb@plt+0x5834>
  4080bc:	add	x9, x25, x8, lsl #2
  4080c0:	ldr	w0, [x9, #260]
  4080c4:	add	x1, sp, #0x20
  4080c8:	strb	w23, [x20, x8]
  4080cc:	bl	4128a0 <wcrtomb@plt+0x10030>
  4080d0:	cmp	w0, #0x1
  4080d4:	b.lt	4080a4 <wcrtomb@plt+0x5834>  // b.tstop
  4080d8:	mov	w27, w0
  4080dc:	b	4080ec <wcrtomb@plt+0x587c>
  4080e0:	add	x8, x27, #0x1
  4080e4:	cmp	x8, #0x1
  4080e8:	b.le	4080a4 <wcrtomb@plt+0x5834>
  4080ec:	ldr	w1, [x24, x27, lsl #2]
  4080f0:	add	x0, sp, #0x10
  4080f4:	sub	x2, x29, #0x18
  4080f8:	sub	x27, x27, #0x1
  4080fc:	bl	402870 <wcrtomb@plt>
  408100:	cmp	w0, #0x2
  408104:	b.lt	4080e0 <wcrtomb@plt+0x5870>  // b.tstop
  408108:	sxtw	x2, w0
  40810c:	add	x1, sp, #0x10
  408110:	mov	x0, x21
  408114:	bl	4089bc <wcrtomb@plt+0x614c>
  408118:	b	4080e0 <wcrtomb@plt+0x5870>
  40811c:	mov	x0, x21
  408120:	bl	409398 <wcrtomb@plt+0x6b28>
  408124:	mov	w0, #0x28                  	// #40
  408128:	bl	417290 <wcrtomb@plt+0x14a20>
  40812c:	ldr	x8, [sp, #8]
  408130:	stp	x21, x22, [x0]
  408134:	str	xzr, [x0, #32]
  408138:	stp	x8, x28, [x0, #16]
  40813c:	add	sp, sp, #0x1c0
  408140:	ldp	x20, x19, [sp, #80]
  408144:	ldp	x22, x21, [sp, #64]
  408148:	ldp	x24, x23, [sp, #48]
  40814c:	ldp	x26, x25, [sp, #32]
  408150:	ldp	x28, x27, [sp, #16]
  408154:	ldp	x29, x30, [sp], #96
  408158:	ret
  40815c:	sub	sp, sp, #0xc0
  408160:	stp	x29, x30, [sp, #96]
  408164:	stp	x28, x27, [sp, #112]
  408168:	stp	x26, x25, [sp, #128]
  40816c:	stp	x24, x23, [sp, #144]
  408170:	stp	x22, x21, [sp, #160]
  408174:	stp	x20, x19, [sp, #176]
  408178:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40817c:	adrp	x23, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  408180:	ldrb	w13, [x8, #2180]
  408184:	ldrb	w8, [x23, #3469]
  408188:	ldr	x25, [x0]
  40818c:	mov	x21, x4
  408190:	mov	x24, x0
  408194:	add	x29, sp, #0x60
  408198:	str	x3, [sp, #40]
  40819c:	cbz	x8, 4081ac <wcrtomb@plt+0x593c>
  4081a0:	stur	wzr, [x29, #-44]
  4081a4:	mov	w27, wzr
  4081a8:	b	4081f0 <wcrtomb@plt+0x5980>
  4081ac:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4081b0:	add	x9, x9, #0x888
  4081b4:	adrp	x10, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4081b8:	ldrb	w11, [x9, #2]
  4081bc:	ldrb	w10, [x10, #3468]
  4081c0:	ldrb	w9, [x9]
  4081c4:	cmp	x21, #0x0
  4081c8:	cset	w12, ne  // ne = any
  4081cc:	eor	w11, w11, #0x1
  4081d0:	orr	w10, w10, w12
  4081d4:	and	w9, w11, w9
  4081d8:	orr	w10, w10, w9
  4081dc:	tst	w9, #0xff
  4081e0:	cset	w9, ne  // ne = any
  4081e4:	tst	w10, #0xff
  4081e8:	cset	w27, ne  // ne = any
  4081ec:	stur	w9, [x29, #-44]
  4081f0:	cmp	x21, #0x0
  4081f4:	csel	x28, x21, x1, ne  // ne = any
  4081f8:	add	x26, x1, x2
  4081fc:	cmp	x28, x26
  408200:	stur	x28, [x29, #-8]
  408204:	b.hi	408444 <wcrtomb@plt+0x5bd4>  // b.pmore
  408208:	sub	x9, x26, x28
  40820c:	stp	x2, x1, [sp, #16]
  408210:	sub	x1, x28, x8
  408214:	add	x2, x9, x8
  408218:	sub	x3, x29, #0x20
  40821c:	mov	x0, x25
  408220:	mov	w4, w27
  408224:	str	w13, [sp, #36]
  408228:	bl	409ba0 <wcrtomb@plt+0x7330>
  40822c:	tbnz	x0, #63, 408444 <wcrtomb@plt+0x5bd4>
  408230:	add	x8, x24, #0x10
  408234:	mov	x19, x0
  408238:	str	x8, [sp, #8]
  40823c:	add	x8, x24, #0x18
  408240:	str	x8, [sp]
  408244:	ldr	x8, [x24, #8]
  408248:	ldur	x9, [x29, #-32]
  40824c:	cmp	x8, x9
  408250:	b.le	4084ac <wcrtomb@plt+0x5c3c>
  408254:	ldur	x22, [x29, #-16]
  408258:	ldrb	w20, [x23, #3469]
  40825c:	ldur	w8, [x29, #-44]
  408260:	stur	xzr, [x29, #-40]
  408264:	cbz	w8, 40828c <wcrtomb@plt+0x5a1c>
  408268:	add	x2, x28, x19
  40826c:	sub	x0, x29, #0x8
  408270:	sub	x1, x29, #0x28
  408274:	mov	x3, x26
  408278:	bl	409d60 <wcrtomb@plt+0x74f0>
  40827c:	cbz	x0, 40828c <wcrtomb@plt+0x5a1c>
  408280:	ldur	x8, [x29, #-8]
  408284:	sub	x8, x8, #0x1
  408288:	b	408410 <wcrtomb@plt+0x5ba0>
  40828c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  408290:	ldrb	w8, [x8, #3468]
  408294:	sub	x22, x22, x20, lsl #1
  408298:	add	x28, x28, x19
  40829c:	cbz	x21, 4082a4 <wcrtomb@plt+0x5a34>
  4082a0:	cbz	w8, 4084ec <wcrtomb@plt+0x5c7c>
  4082a4:	ldrb	w9, [x23, #3469]
  4082a8:	cbnz	w9, 4084e4 <wcrtomb@plt+0x5c74>
  4082ac:	cbz	w8, 40846c <wcrtomb@plt+0x5bfc>
  4082b0:	ldur	x8, [x29, #-40]
  4082b4:	cbz	x8, 4082cc <wcrtomb@plt+0x5a5c>
  4082b8:	sub	x0, x28, x8
  4082bc:	mov	x1, x26
  4082c0:	bl	409fe8 <wcrtomb@plt+0x7778>
  4082c4:	cbnz	x0, 4083fc <wcrtomb@plt+0x5b8c>
  4082c8:	b	408300 <wcrtomb@plt+0x5a90>
  4082cc:	ldur	x19, [x29, #-8]
  4082d0:	ldr	w1, [sp, #36]
  4082d4:	sub	x2, x28, x19
  4082d8:	mov	x0, x19
  4082dc:	bl	402650 <memrchr@plt>
  4082e0:	cbz	x0, 4082ec <wcrtomb@plt+0x5a7c>
  4082e4:	add	x19, x0, #0x1
  4082e8:	stur	x19, [x29, #-8]
  4082ec:	mov	x0, x19
  4082f0:	mov	x1, x28
  4082f4:	mov	x2, x26
  4082f8:	bl	40a0a4 <wcrtomb@plt+0x7834>
  4082fc:	cbnz	x0, 4083fc <wcrtomb@plt+0x5b8c>
  408300:	add	x19, x28, x22
  408304:	mov	x0, x19
  408308:	mov	x1, x26
  40830c:	bl	409fe8 <wcrtomb@plt+0x7778>
  408310:	cbz	x0, 408468 <wcrtomb@plt+0x5bf8>
  408314:	cbz	x21, 408368 <wcrtomb@plt+0x5af8>
  408318:	cbz	x22, 4083fc <wcrtomb@plt+0x5b8c>
  40831c:	sub	x2, x22, #0x1
  408320:	sub	x3, x29, #0x20
  408324:	mov	w4, #0x1                   	// #1
  408328:	mov	x0, x25
  40832c:	mov	x1, x28
  408330:	bl	409ba0 <wcrtomb@plt+0x7330>
  408334:	cbnz	x0, 4083fc <wcrtomb@plt+0x5b8c>
  408338:	ldur	x22, [x29, #-16]
  40833c:	mov	x1, x26
  408340:	add	x0, x28, x22
  408344:	bl	409fe8 <wcrtomb@plt+0x7778>
  408348:	cbnz	x0, 408318 <wcrtomb@plt+0x5aa8>
  40834c:	b	408468 <wcrtomb@plt+0x5bf8>
  408350:	ldur	x22, [x29, #-16]
  408354:	mov	x1, x26
  408358:	add	x19, x28, x22
  40835c:	mov	x0, x19
  408360:	bl	409fe8 <wcrtomb@plt+0x7778>
  408364:	cbz	x0, 408468 <wcrtomb@plt+0x5bf8>
  408368:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40836c:	ldrb	w8, [x8, #2184]
  408370:	cbz	w8, 408398 <wcrtomb@plt+0x5b28>
  408374:	cbz	x22, 4083fc <wcrtomb@plt+0x5b8c>
  408378:	sub	x2, x22, #0x1
  40837c:	sub	x3, x29, #0x20
  408380:	mov	w4, #0x1                   	// #1
  408384:	mov	x0, x25
  408388:	mov	x1, x28
  40838c:	bl	409ba0 <wcrtomb@plt+0x7330>
  408390:	cbz	x0, 408350 <wcrtomb@plt+0x5ae0>
  408394:	b	4083fc <wcrtomb@plt+0x5b8c>
  408398:	ldr	x20, [x24, #32]
  40839c:	cbnz	x20, 4083c0 <wcrtomb@plt+0x5b50>
  4083a0:	ldp	x1, x0, [sp]
  4083a4:	bl	403834 <wcrtomb@plt+0xfc4>
  4083a8:	ldp	x0, x1, [x24, #16]
  4083ac:	mov	w2, #0xa46                 	// #2630
  4083b0:	movk	w2, #0x1, lsl #16
  4083b4:	bl	4029e0 <wcrtomb@plt+0x170>
  4083b8:	mov	x20, x0
  4083bc:	str	x0, [x24, #32]
  4083c0:	ldr	w1, [sp, #36]
  4083c4:	sub	x2, x26, x19
  4083c8:	mov	x0, x19
  4083cc:	bl	4026d0 <memchr@plt>
  4083d0:	ldr	x3, [sp, #40]
  4083d4:	cmp	x0, #0x0
  4083d8:	csinc	x19, x26, x0, eq  // eq = none
  4083dc:	sub	x2, x19, x28
  4083e0:	mov	x0, x20
  4083e4:	mov	x1, x28
  4083e8:	mov	x4, xzr
  4083ec:	bl	403064 <wcrtomb@plt+0x7f4>
  4083f0:	cmn	x0, #0x1
  4083f4:	b.ne	408500 <wcrtomb@plt+0x5c90>  // b.any
  4083f8:	sub	x28, x19, #0x1
  4083fc:	mov	x0, x28
  408400:	mov	x1, x26
  408404:	bl	409f14 <wcrtomb@plt+0x76a4>
  408408:	add	x8, x28, x0
  40840c:	stur	x8, [x29, #-8]
  408410:	add	x28, x8, #0x1
  408414:	cmp	x28, x26
  408418:	b.hi	408444 <wcrtomb@plt+0x5bd4>  // b.pmore
  40841c:	ldrb	w8, [x23, #3469]
  408420:	sub	x9, x26, x28
  408424:	sub	x3, x29, #0x20
  408428:	mov	x0, x25
  40842c:	sub	x1, x28, x8
  408430:	add	x2, x9, x8
  408434:	mov	w4, w27
  408438:	bl	409ba0 <wcrtomb@plt+0x7330>
  40843c:	mov	x19, x0
  408440:	tbz	x0, #63, 408244 <wcrtomb@plt+0x59d4>
  408444:	mov	x0, #0xffffffffffffffff    	// #-1
  408448:	ldp	x20, x19, [sp, #176]
  40844c:	ldp	x22, x21, [sp, #160]
  408450:	ldp	x24, x23, [sp, #144]
  408454:	ldp	x26, x25, [sp, #128]
  408458:	ldp	x28, x27, [sp, #112]
  40845c:	ldp	x29, x30, [sp, #96]
  408460:	add	sp, sp, #0xc0
  408464:	ret
  408468:	cbnz	x21, 4084ec <wcrtomb@plt+0x5c7c>
  40846c:	ldr	w21, [sp, #36]
  408470:	add	x0, x28, x22
  408474:	sub	x2, x26, x0
  408478:	mov	w1, w21
  40847c:	bl	4026d0 <memchr@plt>
  408480:	cmp	x0, #0x0
  408484:	csinc	x19, x26, x0, eq  // eq = none
  408488:	ldr	x20, [sp, #24]
  40848c:	mov	w1, w21
  408490:	sub	x2, x28, x20
  408494:	mov	x0, x20
  408498:	bl	402650 <memrchr@plt>
  40849c:	cmp	x0, #0x0
  4084a0:	csinc	x28, x20, x0, eq  // eq = none
  4084a4:	sub	x22, x19, x28
  4084a8:	b	4084ec <wcrtomb@plt+0x5c7c>
  4084ac:	ldr	x0, [x24, #32]
  4084b0:	cbnz	x0, 4084d0 <wcrtomb@plt+0x5c60>
  4084b4:	ldp	x1, x0, [sp]
  4084b8:	bl	403834 <wcrtomb@plt+0xfc4>
  4084bc:	ldp	x0, x1, [x24, #16]
  4084c0:	mov	w2, #0xa46                 	// #2630
  4084c4:	movk	w2, #0x1, lsl #16
  4084c8:	bl	4029e0 <wcrtomb@plt+0x170>
  4084cc:	str	x0, [x24, #32]
  4084d0:	ldp	x2, x1, [sp, #16]
  4084d4:	ldr	x3, [sp, #40]
  4084d8:	mov	x4, x21
  4084dc:	bl	403064 <wcrtomb@plt+0x7f4>
  4084e0:	b	408448 <wcrtomb@plt+0x5bd8>
  4084e4:	cmp	x21, #0x0
  4084e8:	cinc	x22, x22, eq  // eq = none
  4084ec:	ldr	x8, [sp, #24]
  4084f0:	sub	x0, x28, x8
  4084f4:	ldr	x8, [sp, #40]
  4084f8:	str	x22, [x8]
  4084fc:	b	408448 <wcrtomb@plt+0x5bd8>
  408500:	ldr	w21, [sp, #36]
  408504:	b	408488 <wcrtomb@plt+0x5c18>
  408508:	stp	x29, x30, [sp, #-32]!
  40850c:	stp	x20, x19, [sp, #16]
  408510:	mov	x19, x0
  408514:	mov	w0, #0x9a8                 	// #2472
  408518:	mov	x29, sp
  40851c:	bl	417290 <wcrtomb@plt+0x14a20>
  408520:	adrp	x3, 417000 <wcrtomb@plt+0x14790>
  408524:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  408528:	add	x3, x3, #0x290
  40852c:	add	x4, x4, #0x620
  408530:	mov	x1, xzr
  408534:	mov	x2, xzr
  408538:	mov	x20, x0
  40853c:	bl	419e14 <_obstack_begin@@Base>
  408540:	ldp	x9, x8, [x20, #24]
  408544:	str	xzr, [x20, #88]
  408548:	sub	x8, x8, x9
  40854c:	cmp	x8, #0x3f
  408550:	b.hi	408564 <wcrtomb@plt+0x5cf4>  // b.pmore
  408554:	mov	w1, #0x40                  	// #64
  408558:	mov	x0, x20
  40855c:	bl	419f68 <_obstack_newchunk@@Base>
  408560:	ldr	x9, [x20, #24]
  408564:	ldr	x8, [x20, #16]
  408568:	add	x9, x9, #0x40
  40856c:	str	x9, [x20, #24]
  408570:	cmp	x9, x8
  408574:	b.ne	408584 <wcrtomb@plt+0x5d14>  // b.any
  408578:	ldrb	w10, [x20, #80]
  40857c:	orr	w10, w10, #0x2
  408580:	strb	w10, [x20, #80]
  408584:	ldr	x11, [x20, #48]
  408588:	ldr	x12, [x20, #8]
  40858c:	ldr	x10, [x20, #32]
  408590:	add	x9, x11, x9
  408594:	bic	x9, x9, x11
  408598:	sub	x11, x9, x12
  40859c:	sub	x12, x10, x12
  4085a0:	cmp	x11, x12
  4085a4:	str	x9, [x20, #24]
  4085a8:	b.ls	4085b4 <wcrtomb@plt+0x5d44>  // b.plast
  4085ac:	mov	x9, x10
  4085b0:	str	x10, [x20, #24]
  4085b4:	str	x9, [x20, #16]
  4085b8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4085bc:	ldr	q1, [x9, #880]
  4085c0:	movi	v0.2d, #0x0
  4085c4:	adrp	x10, 408000 <wcrtomb@plt+0x5790>
  4085c8:	str	x8, [x20, #96]
  4085cc:	str	xzr, [x8, #48]
  4085d0:	add	x10, x10, #0x5fc
  4085d4:	stp	q0, q0, [x8, #16]
  4085d8:	str	q0, [x8]
  4085dc:	str	xzr, [x20, #2424]
  4085e0:	str	x19, [x20, #2440]
  4085e4:	stur	q1, [x20, #104]
  4085e8:	str	x10, [x20, #2464]
  4085ec:	mov	x0, x20
  4085f0:	ldp	x20, x19, [sp, #16]
  4085f4:	ldp	x29, x30, [sp], #32
  4085f8:	ret
  4085fc:	stp	x29, x30, [sp, #-80]!
  408600:	stp	x24, x23, [sp, #32]
  408604:	stp	x22, x21, [sp, #48]
  408608:	stp	x20, x19, [sp, #64]
  40860c:	ldr	x8, [x0, #104]
  408610:	str	x25, [sp, #16]
  408614:	mov	x29, sp
  408618:	cmp	x8, x2
  40861c:	b.le	408628 <wcrtomb@plt+0x5db8>
  408620:	mov	x8, #0xffffffffffffffff    	// #-1
  408624:	b	4087bc <wcrtomb@plt+0x5f4c>
  408628:	ldr	x8, [x0, #96]
  40862c:	ldr	x25, [x0, #2440]
  408630:	mov	w21, w4
  408634:	mov	x19, x3
  408638:	ldr	x10, [x8]
  40863c:	mov	x22, x0
  408640:	mov	x20, x1
  408644:	add	x24, x1, x2
  408648:	cbz	x10, 4087d8 <wcrtomb@plt+0x5f68>
  40864c:	mov	x0, x20
  408650:	cmn	x10, #0x1
  408654:	mov	x9, x8
  408658:	b.ne	408670 <wcrtomb@plt+0x5e00>  // b.any
  40865c:	mov	x9, x8
  408660:	ldr	x9, [x9, #32]
  408664:	ldr	x10, [x9]
  408668:	cmn	x10, #0x1
  40866c:	b.eq	408660 <wcrtomb@plt+0x5df0>  // b.none
  408670:	ldr	x10, [x9, #40]
  408674:	cmp	x0, x24
  408678:	sub	x10, x0, x10
  40867c:	b.cs	4087a4 <wcrtomb@plt+0x5f34>  // b.hs, b.nlast
  408680:	tbz	w21, #0, 4087a4 <wcrtomb@plt+0x5f34>
  408684:	cbnz	x25, 4086a8 <wcrtomb@plt+0x5e38>
  408688:	b	408738 <wcrtomb@plt+0x5ec8>
  40868c:	ldr	x12, [x11, #40]
  408690:	sub	x12, x0, x12
  408694:	cmp	x12, x10
  408698:	csel	x10, x10, x12, hi  // hi = pmore
  40869c:	csel	x9, x9, x11, hi  // hi = pmore
  4086a0:	cmp	x0, x24
  4086a4:	b.eq	4087a4 <wcrtomb@plt+0x5f34>  // b.none
  4086a8:	ldrb	w11, [x0], #1
  4086ac:	ldrb	w11, [x25, x11]
  4086b0:	ldr	x12, [x8, #8]
  4086b4:	cbz	x12, 4086d0 <wcrtomb@plt+0x5e60>
  4086b8:	ldrb	w13, [x12, #24]
  4086bc:	cmp	w11, w13
  4086c0:	b.eq	4086ec <wcrtomb@plt+0x5e7c>  // b.none
  4086c4:	cset	w13, cs  // cs = hs, nlast
  4086c8:	ldr	x12, [x12, w13, uxtw #3]
  4086cc:	cbnz	x12, 4086b8 <wcrtomb@plt+0x5e48>
  4086d0:	ldr	x8, [x8, #32]
  4086d4:	cbz	x8, 4087a4 <wcrtomb@plt+0x5f34>
  4086d8:	ldr	x12, [x9, #40]
  4086dc:	ldr	x13, [x8, #40]
  4086e0:	cmp	x12, x13
  4086e4:	b.le	4086b0 <wcrtomb@plt+0x5e40>
  4086e8:	b	4087a4 <wcrtomb@plt+0x5f34>
  4086ec:	ldr	x8, [x12, #16]
  4086f0:	ldr	x11, [x8]
  4086f4:	cbz	x11, 4086a0 <wcrtomb@plt+0x5e30>
  4086f8:	cmn	x11, #0x1
  4086fc:	mov	x11, x8
  408700:	b.ne	40868c <wcrtomb@plt+0x5e1c>  // b.any
  408704:	mov	x11, x8
  408708:	ldr	x11, [x11, #32]
  40870c:	ldr	x12, [x11]
  408710:	cmn	x12, #0x1
  408714:	b.eq	408708 <wcrtomb@plt+0x5e98>  // b.none
  408718:	b	40868c <wcrtomb@plt+0x5e1c>
  40871c:	ldr	x12, [x11, #40]
  408720:	sub	x12, x0, x12
  408724:	cmp	x12, x10
  408728:	csel	x10, x10, x12, hi  // hi = pmore
  40872c:	csel	x9, x9, x11, hi  // hi = pmore
  408730:	cmp	x0, x24
  408734:	b.eq	4087a4 <wcrtomb@plt+0x5f34>  // b.none
  408738:	ldrb	w11, [x0], #1
  40873c:	ldr	x12, [x8, #8]
  408740:	cbz	x12, 40875c <wcrtomb@plt+0x5eec>
  408744:	ldrb	w13, [x12, #24]
  408748:	cmp	w11, w13
  40874c:	b.eq	408778 <wcrtomb@plt+0x5f08>  // b.none
  408750:	cset	w13, cs  // cs = hs, nlast
  408754:	ldr	x12, [x12, w13, uxtw #3]
  408758:	cbnz	x12, 408744 <wcrtomb@plt+0x5ed4>
  40875c:	ldr	x8, [x8, #32]
  408760:	cbz	x8, 4087a4 <wcrtomb@plt+0x5f34>
  408764:	ldr	x12, [x9, #40]
  408768:	ldr	x13, [x8, #40]
  40876c:	cmp	x12, x13
  408770:	b.le	40873c <wcrtomb@plt+0x5ecc>
  408774:	b	4087a4 <wcrtomb@plt+0x5f34>
  408778:	ldr	x8, [x12, #16]
  40877c:	ldr	x11, [x8]
  408780:	cbz	x11, 408730 <wcrtomb@plt+0x5ec0>
  408784:	cmn	x11, #0x1
  408788:	mov	x11, x8
  40878c:	b.ne	40871c <wcrtomb@plt+0x5eac>  // b.any
  408790:	ldr	x11, [x11, #32]
  408794:	ldr	x12, [x11]
  408798:	cmn	x12, #0x1
  40879c:	b.eq	408790 <wcrtomb@plt+0x5f20>  // b.none
  4087a0:	b	40871c <wcrtomb@plt+0x5eac>
  4087a4:	ldr	x11, [x9]
  4087a8:	sub	x8, x10, x20
  4087ac:	lsr	x10, x11, #1
  4087b0:	stp	x10, x8, [x19]
  4087b4:	ldr	x9, [x9, #40]
  4087b8:	str	x9, [x19, #16]
  4087bc:	ldp	x20, x19, [sp, #64]
  4087c0:	ldp	x22, x21, [sp, #48]
  4087c4:	ldp	x24, x23, [sp, #32]
  4087c8:	ldr	x25, [sp, #16]
  4087cc:	mov	x0, x8
  4087d0:	ldp	x29, x30, [sp], #80
  4087d4:	ret
  4087d8:	ldr	w23, [x22, #2448]
  4087dc:	mov	x0, x20
  4087e0:	tbnz	w23, #31, 408844 <wcrtomb@plt+0x5fd4>
  4087e4:	ldr	w2, [x22, #2452]
  4087e8:	tbnz	w2, #31, 408984 <wcrtomb@plt+0x6114>
  4087ec:	cmp	x0, x24
  4087f0:	b.cs	408620 <wcrtomb@plt+0x5db0>  // b.hs, b.nlast
  4087f4:	ldrb	w8, [x0]
  4087f8:	add	x9, x22, x8, lsl #3
  4087fc:	ldr	x9, [x9, #376]
  408800:	cbnz	x9, 408824 <wcrtomb@plt+0x5fb4>
  408804:	add	x0, x0, #0x1
  408808:	tst	x0, #0xf
  40880c:	b.ne	4087ec <wcrtomb@plt+0x5f7c>  // b.any
  408810:	sub	x3, x24, x0
  408814:	mov	w1, w23
  408818:	bl	414dfc <wcrtomb@plt+0x1258c>
  40881c:	cbz	x0, 408620 <wcrtomb@plt+0x5db0>
  408820:	ldrb	w8, [x0]
  408824:	add	x9, x0, #0x1
  408828:	cbz	x25, 408830 <wcrtomb@plt+0x5fc0>
  40882c:	ldrb	w8, [x25, w8, uxtw]
  408830:	add	x8, x22, w8, uxtw #3
  408834:	ldr	x8, [x8, #376]
  408838:	ldr	x10, [x8]
  40883c:	cbz	x10, 4088a0 <wcrtomb@plt+0x6030>
  408840:	b	4089b4 <wcrtomb@plt+0x6144>
  408844:	mov	x9, x0
  408848:	cbz	x25, 408884 <wcrtomb@plt+0x6014>
  40884c:	ldrb	w8, [x9], #1
  408850:	ldrb	w8, [x25, x8]
  408854:	add	x8, x22, x8, lsl #3
  408858:	ldr	x8, [x8, #376]
  40885c:	cbnz	x8, 408894 <wcrtomb@plt+0x6024>
  408860:	cmp	x9, x24
  408864:	mov	x8, #0xffffffffffffffff    	// #-1
  408868:	mov	x0, x9
  40886c:	b.cc	40884c <wcrtomb@plt+0x5fdc>  // b.lo, b.ul, b.last
  408870:	b	4087bc <wcrtomb@plt+0x5f4c>
  408874:	cmp	x9, x24
  408878:	mov	x8, #0xffffffffffffffff    	// #-1
  40887c:	mov	x0, x9
  408880:	b.cs	4087bc <wcrtomb@plt+0x5f4c>  // b.hs, b.nlast
  408884:	ldrb	w8, [x9], #1
  408888:	add	x8, x22, x8, lsl #3
  40888c:	ldr	x8, [x8, #376]
  408890:	cbz	x8, 408874 <wcrtomb@plt+0x6004>
  408894:	add	x9, x0, #0x1
  408898:	ldr	x10, [x8]
  40889c:	cbnz	x10, 4089b4 <wcrtomb@plt+0x6144>
  4088a0:	cbz	x25, 408924 <wcrtomb@plt+0x60b4>
  4088a4:	cmp	x9, x24
  4088a8:	b.cs	408620 <wcrtomb@plt+0x5db0>  // b.hs, b.nlast
  4088ac:	mov	x0, x9
  4088b0:	ldrb	w11, [x0], #1
  4088b4:	ldr	x10, [x8, #8]
  4088b8:	ldrb	w11, [x25, x11]
  4088bc:	ldrb	w12, [x10, #24]
  4088c0:	cmp	w11, w12
  4088c4:	b.eq	4088f0 <wcrtomb@plt+0x6080>  // b.none
  4088c8:	cmp	w11, w12, uxtb
  4088cc:	cset	w12, cs  // cs = hs, nlast
  4088d0:	ldr	x10, [x10, w12, uxtw #3]
  4088d4:	cbnz	x10, 4088bc <wcrtomb@plt+0x604c>
  4088d8:	ldr	x8, [x8, #32]
  4088dc:	cbz	x8, 408904 <wcrtomb@plt+0x6094>
  4088e0:	ldr	x10, [x8]
  4088e4:	cbnz	x10, 4089b4 <wcrtomb@plt+0x6144>
  4088e8:	ldr	x10, [x8, #8]
  4088ec:	b	4088bc <wcrtomb@plt+0x604c>
  4088f0:	ldr	x8, [x10, #16]
  4088f4:	ldr	x10, [x8]
  4088f8:	mov	x9, x0
  4088fc:	cbz	x10, 4088a4 <wcrtomb@plt+0x6034>
  408900:	b	408650 <wcrtomb@plt+0x5de0>
  408904:	add	x8, x22, x11, lsl #3
  408908:	ldr	x8, [x8, #376]
  40890c:	cbnz	x8, 4088f4 <wcrtomb@plt+0x6084>
  408910:	b	408974 <wcrtomb@plt+0x6104>
  408914:	ldr	x8, [x10, #16]
  408918:	ldr	x10, [x8]
  40891c:	mov	x9, x0
  408920:	cbnz	x10, 408650 <wcrtomb@plt+0x5de0>
  408924:	cmp	x9, x24
  408928:	b.cs	408620 <wcrtomb@plt+0x5db0>  // b.hs, b.nlast
  40892c:	mov	x0, x9
  408930:	ldrb	w11, [x0], #1
  408934:	ldr	x10, [x8, #8]
  408938:	ldrb	w12, [x10, #24]
  40893c:	cmp	w11, w12
  408940:	b.eq	408914 <wcrtomb@plt+0x60a4>  // b.none
  408944:	cmp	w11, w12, uxtb
  408948:	cset	w12, cs  // cs = hs, nlast
  40894c:	ldr	x10, [x10, w12, uxtw #3]
  408950:	cbnz	x10, 408938 <wcrtomb@plt+0x60c8>
  408954:	ldr	x8, [x8, #32]
  408958:	cbz	x8, 408968 <wcrtomb@plt+0x60f8>
  40895c:	ldr	x10, [x8]
  408960:	cbz	x10, 408934 <wcrtomb@plt+0x60c4>
  408964:	b	4089b4 <wcrtomb@plt+0x6144>
  408968:	add	x8, x22, x11, lsl #3
  40896c:	ldr	x8, [x8, #376]
  408970:	cbnz	x8, 408918 <wcrtomb@plt+0x60a8>
  408974:	cmp	x0, x24
  408978:	mov	x8, #0xffffffffffffffff    	// #-1
  40897c:	b.cc	4087e0 <wcrtomb@plt+0x5f70>  // b.lo, b.ul, b.last
  408980:	b	4087bc <wcrtomb@plt+0x5f4c>
  408984:	sub	x8, x24, x0
  408988:	cmp	x8, #0x1
  40898c:	b.lt	408620 <wcrtomb@plt+0x5db0>  // b.tstop
  408990:	ldrb	w8, [x0]
  408994:	add	x8, x22, x8, lsl #3
  408998:	ldr	x8, [x8, #376]
  40899c:	cbnz	x8, 40881c <wcrtomb@plt+0x5fac>
  4089a0:	add	x0, x0, #0x1
  4089a4:	cmp	x0, x24
  4089a8:	mov	x8, #0xffffffffffffffff    	// #-1
  4089ac:	b.cc	408990 <wcrtomb@plt+0x6120>  // b.lo, b.ul, b.last
  4089b0:	b	4087bc <wcrtomb@plt+0x5f4c>
  4089b4:	mov	x0, x9
  4089b8:	b	408650 <wcrtomb@plt+0x5de0>
  4089bc:	sub	sp, sp, #0x100
  4089c0:	stp	x29, x30, [sp, #160]
  4089c4:	stp	x28, x27, [sp, #176]
  4089c8:	stp	x26, x25, [sp, #192]
  4089cc:	stp	x24, x23, [sp, #208]
  4089d0:	stp	x22, x21, [sp, #224]
  4089d4:	stp	x20, x19, [sp, #240]
  4089d8:	ldr	x22, [x0, #96]
  4089dc:	mov	x19, x0
  4089e0:	add	x29, sp, #0xa0
  4089e4:	cbz	x2, 408d54 <wcrtomb@plt+0x64e4>
  4089e8:	ldr	x9, [x19, #2464]
  4089ec:	ldr	x15, [x19, #2440]
  4089f0:	adrp	x10, 408000 <wcrtomb@plt+0x5790>
  4089f4:	add	x10, x10, #0xdbc
  4089f8:	add	x8, x1, x2
  4089fc:	cmp	x9, x10
  408a00:	mov	x20, x2
  408a04:	mov	w24, #0x1                   	// #1
  408a08:	add	x25, sp, #0x10
  408a0c:	add	x26, sp, #0x40
  408a10:	csel	x28, x8, x1, eq  // eq = none
  408a14:	stp	x15, x9, [sp]
  408a18:	b	408a2c <wcrtomb@plt+0x61bc>
  408a1c:	str	x11, [x8, #8]
  408a20:	ldr	x22, [x23, #16]
  408a24:	sub	x20, x20, #0x1
  408a28:	cbz	x20, 408d54 <wcrtomb@plt+0x64e4>
  408a2c:	ldr	x9, [sp, #8]
  408a30:	adrp	x10, 408000 <wcrtomb@plt+0x5790>
  408a34:	add	x10, x10, #0xdbc
  408a38:	sub	x8, x28, #0x1
  408a3c:	cmp	x9, x10
  408a40:	csel	x9, x8, x28, eq  // eq = none
  408a44:	ldrb	w27, [x9]
  408a48:	csinc	x28, x8, x28, eq  // eq = none
  408a4c:	cbz	x15, 408a54 <wcrtomb@plt+0x61e4>
  408a50:	ldrb	w27, [x15, x27]
  408a54:	mov	x8, x22
  408a58:	ldr	x23, [x8, #8]!
  408a5c:	str	wzr, [sp, #16]
  408a60:	str	x8, [sp, #64]
  408a64:	cbz	x23, 408ab4 <wcrtomb@plt+0x6244>
  408a68:	mov	w8, #0x1                   	// #1
  408a6c:	b	408a84 <wcrtomb@plt+0x6214>
  408a70:	add	x23, x23, #0x8
  408a74:	str	w24, [x25, x8, lsl #2]
  408a78:	ldr	x23, [x23]
  408a7c:	mov	x8, x21
  408a80:	cbz	x23, 408ab8 <wcrtomb@plt+0x6248>
  408a84:	ldrb	w9, [x23, #24]
  408a88:	cmp	w27, w9
  408a8c:	b.eq	408a20 <wcrtomb@plt+0x61b0>  // b.none
  408a90:	cmp	w27, w9
  408a94:	add	x21, x8, #0x1
  408a98:	str	x23, [x26, x8, lsl #3]
  408a9c:	b.cs	408a70 <wcrtomb@plt+0x6200>  // b.hs, b.nlast
  408aa0:	str	wzr, [x25, x8, lsl #2]
  408aa4:	ldr	x23, [x23]
  408aa8:	mov	x8, x21
  408aac:	cbnz	x23, 408a84 <wcrtomb@plt+0x6214>
  408ab0:	b	408ab8 <wcrtomb@plt+0x6248>
  408ab4:	mov	w21, #0x1                   	// #1
  408ab8:	ldp	x8, x9, [x19, #24]
  408abc:	sub	x9, x9, x8
  408ac0:	cmp	x9, #0x1f
  408ac4:	b.hi	408adc <wcrtomb@plt+0x626c>  // b.pmore
  408ac8:	mov	w1, #0x20                  	// #32
  408acc:	mov	x0, x19
  408ad0:	bl	419f68 <_obstack_newchunk@@Base>
  408ad4:	ldr	x15, [sp]
  408ad8:	ldr	x8, [x19, #24]
  408adc:	ldr	x23, [x19, #16]
  408ae0:	add	x8, x8, #0x20
  408ae4:	str	x8, [x19, #24]
  408ae8:	cmp	x8, x23
  408aec:	b.ne	408afc <wcrtomb@plt+0x628c>  // b.any
  408af0:	ldrb	w9, [x19, #80]
  408af4:	orr	w9, w9, #0x2
  408af8:	strb	w9, [x19, #80]
  408afc:	ldr	x9, [x19, #48]
  408b00:	ldr	x10, [x19, #8]
  408b04:	ldr	x11, [x19, #32]
  408b08:	add	x8, x9, x8
  408b0c:	bic	x8, x8, x9
  408b10:	sub	x9, x11, x10
  408b14:	sub	x10, x8, x10
  408b18:	cmp	x10, x9
  408b1c:	csel	x8, x11, x8, hi  // hi = pmore
  408b20:	sub	x9, x11, x8
  408b24:	cmp	x9, #0x3f
  408b28:	mov	x9, x8
  408b2c:	stp	x8, x8, [x19, #16]
  408b30:	stp	xzr, xzr, [x23]
  408b34:	b.hi	408b4c <wcrtomb@plt+0x62dc>  // b.pmore
  408b38:	mov	w1, #0x40                  	// #64
  408b3c:	mov	x0, x19
  408b40:	bl	419f68 <_obstack_newchunk@@Base>
  408b44:	ldr	x15, [sp]
  408b48:	ldp	x8, x9, [x19, #16]
  408b4c:	add	x9, x9, #0x40
  408b50:	cmp	x9, x8
  408b54:	str	x9, [x19, #24]
  408b58:	b.ne	408b68 <wcrtomb@plt+0x62f8>  // b.any
  408b5c:	ldrb	w10, [x19, #80]
  408b60:	orr	w10, w10, #0x2
  408b64:	strb	w10, [x19, #80]
  408b68:	ldr	x10, [x19, #48]
  408b6c:	ldr	x11, [x19, #8]
  408b70:	ldr	x12, [x19, #32]
  408b74:	add	x9, x10, x9
  408b78:	bic	x9, x9, x10
  408b7c:	sub	x10, x12, x11
  408b80:	sub	x11, x9, x11
  408b84:	cmp	x11, x10
  408b88:	csel	x9, x12, x9, hi  // hi = pmore
  408b8c:	stp	x9, x9, [x19, #16]
  408b90:	str	x8, [x23, #16]
  408b94:	stp	xzr, xzr, [x8]
  408b98:	stp	xzr, xzr, [x8, #24]
  408b9c:	str	x22, [x8, #16]
  408ba0:	ldr	x9, [x22, #40]
  408ba4:	add	x9, x9, #0x1
  408ba8:	stp	x9, xzr, [x8, #40]
  408bac:	strb	w27, [x23, #24]
  408bb0:	strb	wzr, [x23, #25]
  408bb4:	sub	x9, x21, #0x1
  408bb8:	ldr	w11, [x25, x9, lsl #2]
  408bbc:	ldr	x10, [x26, x9, lsl #3]
  408bc0:	cmp	w11, #0x0
  408bc4:	cset	w8, ne  // ne = any
  408bc8:	str	x23, [x10, w8, uxtw #3]
  408bcc:	cbz	x9, 408a20 <wcrtomb@plt+0x61b0>
  408bd0:	mov	x8, x10
  408bd4:	ldrb	w12, [x8, #25]!
  408bd8:	cmp	w11, #0x0
  408bdc:	cset	w13, eq  // eq = none
  408be0:	mov	w14, #0xffffffff            	// #-1
  408be4:	cbz	w12, 408c00 <wcrtomb@plt+0x6390>
  408be8:	cbz	w13, 408c3c <wcrtomb@plt+0x63cc>
  408bec:	sub	w11, w12, #0x1
  408bf0:	tst	w11, #0xff
  408bf4:	strb	w11, [x8]
  408bf8:	b.ne	408c50 <wcrtomb@plt+0x63e0>  // b.any
  408bfc:	b	408a20 <wcrtomb@plt+0x61b0>
  408c00:	sub	x9, x21, #0x2
  408c04:	tst	w13, #0x1
  408c08:	cneg	w10, w14, eq  // eq = none
  408c0c:	strb	w10, [x8]
  408c10:	cbz	x9, 408a20 <wcrtomb@plt+0x61b0>
  408c14:	ldr	x10, [x26, x9, lsl #3]
  408c18:	ldr	w11, [x25, x9, lsl #2]
  408c1c:	sub	x9, x9, #0x1
  408c20:	mov	x8, x10
  408c24:	ldrb	w12, [x8, #25]!
  408c28:	cmp	w11, #0x0
  408c2c:	cset	w13, eq  // eq = none
  408c30:	cbz	w12, 408c04 <wcrtomb@plt+0x6394>
  408c34:	add	x9, x9, #0x1
  408c38:	cbnz	w13, 408bec <wcrtomb@plt+0x637c>
  408c3c:	cmp	w11, #0x1
  408c40:	b.ne	408a20 <wcrtomb@plt+0x61b0>  // b.any
  408c44:	add	w11, w12, #0x1
  408c48:	strb	w11, [x8]
  408c4c:	tbnz	w11, #8, 408a20 <wcrtomb@plt+0x61b0>
  408c50:	and	w11, w11, #0xff
  408c54:	cmp	w11, #0x2
  408c58:	b.eq	408c90 <wcrtomb@plt+0x6420>  // b.none
  408c5c:	cmp	w11, #0xfe
  408c60:	b.ne	408db8 <wcrtomb@plt+0x6548>  // b.any
  408c64:	add	x11, x25, x9, lsl #2
  408c68:	ldr	w11, [x11, #4]
  408c6c:	cmp	w11, #0x1
  408c70:	b.eq	408cbc <wcrtomb@plt+0x644c>  // b.none
  408c74:	cbnz	w11, 408db8 <wcrtomb@plt+0x6548>
  408c78:	ldr	x11, [x10]
  408c7c:	ldr	x12, [x11, #8]
  408c80:	str	x10, [x11, #8]
  408c84:	str	x12, [x10]
  408c88:	strb	wzr, [x8]
  408c8c:	b	408d38 <wcrtomb@plt+0x64c8>
  408c90:	add	x11, x25, x9, lsl #2
  408c94:	ldr	w11, [x11, #4]
  408c98:	cbz	w11, 408cfc <wcrtomb@plt+0x648c>
  408c9c:	cmp	w11, #0x1
  408ca0:	b.ne	408db8 <wcrtomb@plt+0x6548>  // b.any
  408ca4:	ldr	x11, [x10, #8]
  408ca8:	ldr	x12, [x11]
  408cac:	str	x10, [x11]
  408cb0:	str	x12, [x10, #8]
  408cb4:	strb	wzr, [x8]
  408cb8:	b	408d38 <wcrtomb@plt+0x64c8>
  408cbc:	ldr	x12, [x10]
  408cc0:	ldr	x11, [x12, #8]
  408cc4:	ldp	x13, x14, [x11]
  408cc8:	str	x12, [x11]
  408ccc:	str	x13, [x12, #8]
  408cd0:	str	x10, [x11, #8]
  408cd4:	str	x14, [x10]
  408cd8:	ldrb	w10, [x11, #25]
  408cdc:	cmp	w10, #0x1
  408ce0:	csetm	w10, eq  // eq = none
  408ce4:	strb	w10, [x12, #25]
  408ce8:	ldrb	w10, [x11, #25]
  408cec:	cmp	w10, #0xff
  408cf0:	cset	w10, eq  // eq = none
  408cf4:	strb	w10, [x8]
  408cf8:	b	408d38 <wcrtomb@plt+0x64c8>
  408cfc:	ldr	x12, [x10, #8]
  408d00:	ldr	x11, [x12]
  408d04:	ldp	x13, x14, [x11]
  408d08:	str	x10, [x11]
  408d0c:	str	x13, [x10, #8]
  408d10:	str	x12, [x11, #8]
  408d14:	str	x14, [x12]
  408d18:	ldrb	w10, [x11, #25]
  408d1c:	cmp	w10, #0x1
  408d20:	csetm	w10, eq  // eq = none
  408d24:	strb	w10, [x8]
  408d28:	ldrb	w8, [x11, #25]
  408d2c:	cmp	w8, #0xff
  408d30:	cset	w8, eq  // eq = none
  408d34:	strb	w8, [x12, #25]
  408d38:	strb	wzr, [x11, #25]
  408d3c:	sub	x8, x9, #0x1
  408d40:	ldr	w9, [x25, x8, lsl #2]
  408d44:	ldr	x8, [x26, x8, lsl #3]
  408d48:	cbnz	w9, 408a1c <wcrtomb@plt+0x61ac>
  408d4c:	str	x11, [x8]
  408d50:	b	408a20 <wcrtomb@plt+0x61b0>
  408d54:	ldr	x9, [x22]
  408d58:	ldr	x8, [x19, #88]
  408d5c:	cbnz	x9, 408d6c <wcrtomb@plt+0x64fc>
  408d60:	mov	w9, #0x1                   	// #1
  408d64:	bfi	x9, x8, #1, #63
  408d68:	str	x9, [x22]
  408d6c:	add	x8, x8, #0x1
  408d70:	str	x8, [x19, #88]
  408d74:	ldr	x8, [x22, #40]
  408d78:	ldr	x9, [x19, #104]
  408d7c:	cmp	x8, x9
  408d80:	b.ge	408d88 <wcrtomb@plt+0x6518>  // b.tcont
  408d84:	str	x8, [x19, #104]
  408d88:	ldr	x9, [x19, #112]
  408d8c:	cmp	x8, x9
  408d90:	b.le	408d98 <wcrtomb@plt+0x6528>
  408d94:	str	x8, [x19, #112]
  408d98:	ldp	x20, x19, [sp, #240]
  408d9c:	ldp	x22, x21, [sp, #224]
  408da0:	ldp	x24, x23, [sp, #208]
  408da4:	ldp	x26, x25, [sp, #192]
  408da8:	ldp	x28, x27, [sp, #176]
  408dac:	ldp	x29, x30, [sp, #160]
  408db0:	add	sp, sp, #0x100
  408db4:	ret
  408db8:	bl	402560 <abort@plt>
  408dbc:	sub	sp, sp, #0x70
  408dc0:	stp	x29, x30, [sp, #16]
  408dc4:	stp	x28, x27, [sp, #32]
  408dc8:	stp	x26, x25, [sp, #48]
  408dcc:	stp	x24, x23, [sp, #64]
  408dd0:	stp	x22, x21, [sp, #80]
  408dd4:	stp	x20, x19, [sp, #96]
  408dd8:	ldr	x24, [x0, #104]
  408ddc:	mov	x19, x3
  408de0:	mov	x20, x0
  408de4:	add	x29, sp, #0x10
  408de8:	cbz	x24, 408e00 <wcrtomb@plt+0x6590>
  408dec:	mov	x23, x2
  408df0:	cmp	x24, x2
  408df4:	b.le	408e30 <wcrtomb@plt+0x65c0>
  408df8:	mov	x0, #0xffffffffffffffff    	// #-1
  408dfc:	b	408e10 <wcrtomb@plt+0x65a0>
  408e00:	mov	x0, xzr
  408e04:	stp	xzr, x0, [x19]
  408e08:	ldr	x8, [x20, #104]
  408e0c:	str	x8, [x19, #16]
  408e10:	ldp	x20, x19, [sp, #96]
  408e14:	ldp	x22, x21, [sp, #80]
  408e18:	ldp	x24, x23, [sp, #64]
  408e1c:	ldp	x26, x25, [sp, #48]
  408e20:	ldp	x28, x27, [sp, #32]
  408e24:	ldp	x29, x30, [sp, #16]
  408e28:	add	sp, sp, #0x70
  408e2c:	ret
  408e30:	mov	x21, x1
  408e34:	cmp	x24, #0x1
  408e38:	b.ne	408e90 <wcrtomb@plt+0x6620>  // b.any
  408e3c:	ldr	w2, [x20, #2452]
  408e40:	add	x9, x21, x23
  408e44:	tbnz	w2, #31, 408ec0 <wcrtomb@plt+0x6650>
  408e48:	mov	x0, x21
  408e4c:	cmp	x0, x9
  408e50:	b.cs	408df8 <wcrtomb@plt+0x6588>  // b.hs, b.nlast
  408e54:	ldrb	w8, [x0]
  408e58:	add	x8, x20, x8, lsl #3
  408e5c:	ldr	x8, [x8, #376]
  408e60:	cbnz	x8, 408f50 <wcrtomb@plt+0x66e0>
  408e64:	add	x0, x0, #0x1
  408e68:	tst	x0, #0xf
  408e6c:	b.ne	408e4c <wcrtomb@plt+0x65dc>  // b.any
  408e70:	ldr	w1, [x20, #2448]
  408e74:	sub	x3, x9, x0
  408e78:	bl	414dfc <wcrtomb@plt+0x1258c>
  408e7c:	mov	x8, x0
  408e80:	cbz	x8, 408df8 <wcrtomb@plt+0x6588>
  408e84:	sub	x0, x8, x21
  408e88:	tbz	x0, #63, 408e04 <wcrtomb@plt+0x6594>
  408e8c:	b	408e10 <wcrtomb@plt+0x65a0>
  408e90:	ldr	x8, [x20, #2424]
  408e94:	ldr	x27, [x20, #2440]
  408e98:	ldr	w22, [x20, #2448]
  408e9c:	ldrb	w25, [x20, #2456]
  408ea0:	add	x26, x8, x24
  408ea4:	add	x8, x21, x24
  408ea8:	tbnz	x24, #63, 408eec <wcrtomb@plt+0x667c>
  408eac:	mov	x9, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  408eb0:	movk	x9, #0xaaa, lsl #48
  408eb4:	cmp	x24, x9
  408eb8:	b.le	408f04 <wcrtomb@plt+0x6694>
  408ebc:	b	408f28 <wcrtomb@plt+0x66b8>
  408ec0:	cbz	x23, 408df8 <wcrtomb@plt+0x6588>
  408ec4:	mov	x8, x21
  408ec8:	mov	x0, #0xffffffffffffffff    	// #-1
  408ecc:	ldrb	w10, [x8]
  408ed0:	add	x10, x20, x10, lsl #3
  408ed4:	ldr	x10, [x10, #376]
  408ed8:	cbnz	x10, 408e80 <wcrtomb@plt+0x6610>
  408edc:	add	x8, x8, #0x1
  408ee0:	cmp	x8, x9
  408ee4:	b.cc	408ecc <wcrtomb@plt+0x665c>  // b.lo, b.ul, b.last
  408ee8:	b	408e10 <wcrtomb@plt+0x65a0>
  408eec:	cmn	x24, #0x1
  408ef0:	b.eq	408f04 <wcrtomb@plt+0x6694>  // b.none
  408ef4:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  408ef8:	sdiv	x9, x9, x24
  408efc:	cmp	x9, #0xc
  408f00:	b.lt	408f28 <wcrtomb@plt+0x66b8>  // b.tstop
  408f04:	add	x9, x24, x24, lsl #1
  408f08:	lsl	x9, x9, #2
  408f0c:	cmp	x9, x23
  408f10:	b.ge	408f28 <wcrtomb@plt+0x66b8>  // b.tcont
  408f14:	add	x15, x21, x23
  408f18:	mov	x9, #0xfffffffffffffff5    	// #-11
  408f1c:	madd	x28, x24, x9, x15
  408f20:	cmp	x28, x8
  408f24:	b.cs	408f5c <wcrtomb@plt+0x66ec>  // b.hs, b.nlast
  408f28:	ldurb	w9, [x8, #-1]
  408f2c:	mov	x0, #0xffffffffffffffff    	// #-1
  408f30:	add	x9, x20, x9
  408f34:	ldrb	w10, [x9, #120]
  408f38:	add	x9, x21, x23
  408f3c:	sub	x11, x9, x8
  408f40:	cmp	x11, x10
  408f44:	b.lt	408e10 <wcrtomb@plt+0x65a0>  // b.tstop
  408f48:	cbnz	x27, 4091f8 <wcrtomb@plt+0x6988>
  408f4c:	b	4092d0 <wcrtomb@plt+0x6a60>
  408f50:	sub	x0, x0, x21
  408f54:	tbz	x0, #63, 408e04 <wcrtomb@plt+0x6594>
  408f58:	b	408e10 <wcrtomb@plt+0x65a0>
  408f5c:	mov	x9, x8
  408f60:	ldurb	w11, [x8, #-1]
  408f64:	add	x10, x20, #0x78
  408f68:	ldrb	w11, [x10, x11]
  408f6c:	add	x8, x8, x11
  408f70:	ldurb	w11, [x8, #-1]
  408f74:	ldrb	w11, [x10, x11]
  408f78:	add	x8, x8, x11
  408f7c:	cbz	x11, 409054 <wcrtomb@plt+0x67e4>
  408f80:	ldurb	w11, [x8, #-1]
  408f84:	ldrb	w11, [x10, x11]
  408f88:	add	x8, x8, x11
  408f8c:	ldurb	w11, [x8, #-1]
  408f90:	ldrb	w11, [x10, x11]
  408f94:	add	x8, x8, x11
  408f98:	ldurb	w11, [x8, #-1]
  408f9c:	ldrb	w10, [x10, x11]
  408fa0:	add	x8, x8, x10
  408fa4:	cbz	x10, 409054 <wcrtomb@plt+0x67e4>
  408fa8:	ldurb	w11, [x8, #-1]
  408fac:	add	x10, x20, #0x78
  408fb0:	ldrb	w11, [x10, x11]
  408fb4:	add	x8, x8, x11
  408fb8:	ldurb	w11, [x8, #-1]
  408fbc:	ldrb	w11, [x10, x11]
  408fc0:	add	x8, x8, x11
  408fc4:	ldurb	w11, [x8, #-1]
  408fc8:	ldrb	w11, [x10, x11]
  408fcc:	add	x8, x8, x11
  408fd0:	cbz	x11, 409054 <wcrtomb@plt+0x67e4>
  408fd4:	ldurb	w11, [x8, #-1]
  408fd8:	ldrb	w11, [x10, x11]
  408fdc:	add	x8, x8, x11
  408fe0:	ldurb	w11, [x8, #-1]
  408fe4:	ldrb	w10, [x10, x11]
  408fe8:	add	x8, x8, x10
  408fec:	sub	x9, x8, x9
  408ff0:	cmp	x9, #0x7f
  408ff4:	b.gt	4091a8 <wcrtomb@plt+0x6938>
  408ff8:	ldr	w2, [x20, #2452]
  408ffc:	sub	x8, x8, #0x1
  409000:	tbnz	w2, #31, 4091b8 <wcrtomb@plt+0x6948>
  409004:	cmp	x8, x15
  409008:	b.cs	408df8 <wcrtomb@plt+0x6588>  // b.hs, b.nlast
  40900c:	ldrb	w9, [x8]
  409010:	add	x9, x20, x9, lsl #3
  409014:	ldr	x9, [x9, #376]
  409018:	cbnz	x9, 409048 <wcrtomb@plt+0x67d8>
  40901c:	add	x8, x8, #0x1
  409020:	tst	x8, #0xf
  409024:	b.ne	409004 <wcrtomb@plt+0x6794>  // b.any
  409028:	sub	x3, x15, x8
  40902c:	mov	x0, x8
  409030:	mov	w1, w22
  409034:	str	x15, [sp, #8]
  409038:	bl	414dfc <wcrtomb@plt+0x1258c>
  40903c:	ldr	x15, [sp, #8]
  409040:	mov	x8, x0
  409044:	cbz	x0, 408df8 <wcrtomb@plt+0x6588>
  409048:	add	x8, x8, #0x1
  40904c:	cmp	x28, x8
  409050:	b.ls	408f28 <wcrtomb@plt+0x66b8>  // b.plast
  409054:	mov	x11, xzr
  409058:	mov	x10, x24
  40905c:	cbz	x27, 409138 <wcrtomb@plt+0x68c8>
  409060:	ldurb	w9, [x8, #-2]
  409064:	ldrb	w9, [x27, x9]
  409068:	cmp	w9, w25
  40906c:	b.ne	4090a4 <wcrtomb@plt+0x6834>  // b.any
  409070:	mov	x12, #0xfffffffffffffffd    	// #-3
  409074:	mov	w9, #0x2                   	// #2
  409078:	cmp	x9, x10
  40907c:	b.ge	4090d8 <wcrtomb@plt+0x6868>  // b.tcont
  409080:	ldrb	w13, [x8, x12]
  409084:	ldrb	w14, [x26, x12]
  409088:	add	x9, x9, #0x1
  40908c:	sub	x12, x12, #0x1
  409090:	ldrb	w13, [x27, x13]
  409094:	ldrb	w14, [x27, x14]
  409098:	cmp	w13, w14
  40909c:	b.eq	409078 <wcrtomb@plt+0x6808>  // b.none
  4090a0:	b	4090a8 <wcrtomb@plt+0x6838>
  4090a4:	mov	w9, #0x2                   	// #2
  4090a8:	ldr	x10, [x20, #2432]
  4090ac:	add	x10, x10, x9, lsl #3
  4090b0:	ldur	x10, [x10, #-16]
  4090b4:	add	x8, x8, x10
  4090b8:	cmp	x8, x28
  4090bc:	b.hi	4091a8 <wcrtomb@plt+0x6938>  // b.pmore
  4090c0:	ldurb	w12, [x8, #-1]
  4090c4:	ldrb	w11, [x27, x12]
  4090c8:	cmp	w11, w22, uxtb
  4090cc:	sub	x11, x9, #0x1
  4090d0:	b.eq	409060 <wcrtomb@plt+0x67f0>  // b.none
  4090d4:	b	40919c <wcrtomb@plt+0x692c>
  4090d8:	add	x9, x11, x10
  4090dc:	mvn	x10, x9
  4090e0:	cmp	x9, x24
  4090e4:	b.ge	409380 <wcrtomb@plt+0x6b10>  // b.tcont
  4090e8:	ldrb	w11, [x8, x10]
  4090ec:	ldrb	w12, [x26, x10]
  4090f0:	add	x9, x9, #0x1
  4090f4:	sub	x10, x10, #0x1
  4090f8:	ldrb	w11, [x27, x11]
  4090fc:	ldrb	w12, [x27, x12]
  409100:	cmp	w11, w12
  409104:	b.eq	4090e0 <wcrtomb@plt+0x6870>  // b.none
  409108:	b	4090a8 <wcrtomb@plt+0x6838>
  40910c:	add	x9, x11, x10
  409110:	mvn	x10, x9
  409114:	cmp	x9, x24
  409118:	b.ge	409380 <wcrtomb@plt+0x6b10>  // b.tcont
  40911c:	ldrb	w11, [x8, x10]
  409120:	ldrb	w12, [x26, x10]
  409124:	add	x9, x9, #0x1
  409128:	sub	x10, x10, #0x1
  40912c:	cmp	w11, w12
  409130:	b.eq	409114 <wcrtomb@plt+0x68a4>  // b.none
  409134:	b	409174 <wcrtomb@plt+0x6904>
  409138:	ldurb	w9, [x8, #-2]
  40913c:	cmp	w9, w25
  409140:	b.ne	409170 <wcrtomb@plt+0x6900>  // b.any
  409144:	mov	x12, #0xfffffffffffffffd    	// #-3
  409148:	mov	w9, #0x2                   	// #2
  40914c:	cmp	x9, x10
  409150:	b.ge	40910c <wcrtomb@plt+0x689c>  // b.tcont
  409154:	ldrb	w13, [x8, x12]
  409158:	ldrb	w14, [x26, x12]
  40915c:	add	x9, x9, #0x1
  409160:	sub	x12, x12, #0x1
  409164:	cmp	w13, w14
  409168:	b.eq	40914c <wcrtomb@plt+0x68dc>  // b.none
  40916c:	b	409174 <wcrtomb@plt+0x6904>
  409170:	mov	w9, #0x2                   	// #2
  409174:	ldr	x10, [x20, #2432]
  409178:	add	x10, x10, x9, lsl #3
  40917c:	ldur	x10, [x10, #-16]
  409180:	add	x8, x8, x10
  409184:	cmp	x8, x28
  409188:	b.hi	4091a8 <wcrtomb@plt+0x6938>  // b.pmore
  40918c:	ldurb	w12, [x8, #-1]
  409190:	sub	x11, x9, #0x1
  409194:	cmp	w12, w22, uxtb
  409198:	b.eq	409138 <wcrtomb@plt+0x68c8>  // b.none
  40919c:	add	x9, x20, x12
  4091a0:	ldrb	w9, [x9, #120]
  4091a4:	add	x8, x8, x9
  4091a8:	cmp	x28, x8
  4091ac:	mov	x9, x8
  4091b0:	b.cs	408f60 <wcrtomb@plt+0x66f0>  // b.hs, b.nlast
  4091b4:	b	408f28 <wcrtomb@plt+0x66b8>
  4091b8:	sub	x9, x15, x8
  4091bc:	cmp	x9, #0x1
  4091c0:	b.lt	408df8 <wcrtomb@plt+0x6588>  // b.tstop
  4091c4:	ldrb	w9, [x8]
  4091c8:	add	x9, x20, x9, lsl #3
  4091cc:	ldr	x9, [x9, #376]
  4091d0:	cbnz	x9, 409048 <wcrtomb@plt+0x67d8>
  4091d4:	add	x8, x8, #0x1
  4091d8:	cmp	x8, x15
  4091dc:	mov	x0, #0xffffffffffffffff    	// #-1
  4091e0:	b.cc	4091c4 <wcrtomb@plt+0x6954>  // b.lo, b.ul, b.last
  4091e4:	b	408e10 <wcrtomb@plt+0x65a0>
  4091e8:	mov	w10, wzr
  4091ec:	sub	x11, x9, x8
  4091f0:	cmp	x11, x10
  4091f4:	b.lt	408e10 <wcrtomb@plt+0x65a0>  // b.tstop
  4091f8:	add	x8, x8, x10
  4091fc:	ldurb	w10, [x8, #-1]
  409200:	add	x10, x20, x10
  409204:	ldrb	w10, [x10, #120]
  409208:	cbnz	w10, 4091ec <wcrtomb@plt+0x697c>
  40920c:	mov	x12, xzr
  409210:	mov	x11, x24
  409214:	ldurb	w10, [x8, #-2]
  409218:	ldrb	w10, [x27, x10]
  40921c:	cmp	w10, w25
  409220:	b.ne	409258 <wcrtomb@plt+0x69e8>  // b.any
  409224:	mov	x13, #0xfffffffffffffffd    	// #-3
  409228:	mov	w10, #0x2                   	// #2
  40922c:	cmp	x10, x11
  409230:	b.ge	40928c <wcrtomb@plt+0x6a1c>  // b.tcont
  409234:	ldrb	w14, [x8, x13]
  409238:	ldrb	w15, [x26, x13]
  40923c:	add	x10, x10, #0x1
  409240:	sub	x13, x13, #0x1
  409244:	ldrb	w14, [x27, x14]
  409248:	ldrb	w15, [x27, x15]
  40924c:	cmp	w14, w15
  409250:	b.eq	40922c <wcrtomb@plt+0x69bc>  // b.none
  409254:	b	40925c <wcrtomb@plt+0x69ec>
  409258:	mov	w10, #0x2                   	// #2
  40925c:	ldr	x11, [x20, #2432]
  409260:	add	x11, x11, x10, lsl #3
  409264:	ldur	x11, [x11, #-16]
  409268:	add	x8, x8, x11
  40926c:	cmp	x8, x9
  409270:	b.hi	4091e8 <wcrtomb@plt+0x6978>  // b.pmore
  409274:	ldurb	w12, [x8, #-1]
  409278:	ldrb	w12, [x27, x12]
  40927c:	cmp	w12, w22, uxtb
  409280:	sub	x12, x10, #0x1
  409284:	b.eq	409214 <wcrtomb@plt+0x69a4>  // b.none
  409288:	b	4091e8 <wcrtomb@plt+0x6978>
  40928c:	add	x10, x12, x11
  409290:	mvn	x11, x10
  409294:	cmp	x10, x24
  409298:	b.ge	409380 <wcrtomb@plt+0x6b10>  // b.tcont
  40929c:	ldrb	w12, [x8, x11]
  4092a0:	ldrb	w13, [x26, x11]
  4092a4:	add	x10, x10, #0x1
  4092a8:	sub	x11, x11, #0x1
  4092ac:	ldrb	w12, [x27, x12]
  4092b0:	ldrb	w13, [x27, x13]
  4092b4:	cmp	w12, w13
  4092b8:	b.eq	409294 <wcrtomb@plt+0x6a24>  // b.none
  4092bc:	b	40925c <wcrtomb@plt+0x69ec>
  4092c0:	mov	w10, wzr
  4092c4:	sub	x11, x9, x8
  4092c8:	cmp	x11, x10
  4092cc:	b.lt	408e10 <wcrtomb@plt+0x65a0>  // b.tstop
  4092d0:	add	x8, x8, x10
  4092d4:	ldurb	w10, [x8, #-1]
  4092d8:	add	x10, x20, x10
  4092dc:	ldrb	w10, [x10, #120]
  4092e0:	cbnz	w10, 4092c4 <wcrtomb@plt+0x6a54>
  4092e4:	mov	x12, xzr
  4092e8:	mov	x11, x24
  4092ec:	ldurb	w10, [x8, #-2]
  4092f0:	cmp	w10, w25
  4092f4:	b.ne	409324 <wcrtomb@plt+0x6ab4>  // b.any
  4092f8:	mov	x13, #0xfffffffffffffffd    	// #-3
  4092fc:	mov	w10, #0x2                   	// #2
  409300:	cmp	x10, x11
  409304:	b.ge	409354 <wcrtomb@plt+0x6ae4>  // b.tcont
  409308:	ldrb	w14, [x8, x13]
  40930c:	ldrb	w15, [x26, x13]
  409310:	add	x10, x10, #0x1
  409314:	sub	x13, x13, #0x1
  409318:	cmp	w14, w15
  40931c:	b.eq	409300 <wcrtomb@plt+0x6a90>  // b.none
  409320:	b	409328 <wcrtomb@plt+0x6ab8>
  409324:	mov	w10, #0x2                   	// #2
  409328:	ldr	x11, [x20, #2432]
  40932c:	add	x11, x11, x10, lsl #3
  409330:	ldur	x11, [x11, #-16]
  409334:	add	x8, x8, x11
  409338:	cmp	x8, x9
  40933c:	b.hi	4092c0 <wcrtomb@plt+0x6a50>  // b.pmore
  409340:	ldurb	w12, [x8, #-1]
  409344:	cmp	w12, w22, uxtb
  409348:	sub	x12, x10, #0x1
  40934c:	b.eq	4092ec <wcrtomb@plt+0x6a7c>  // b.none
  409350:	b	4092c0 <wcrtomb@plt+0x6a50>
  409354:	add	x10, x12, x11
  409358:	mvn	x11, x10
  40935c:	cmp	x10, x24
  409360:	b.ge	409380 <wcrtomb@plt+0x6b10>  // b.tcont
  409364:	ldrb	w12, [x8, x11]
  409368:	ldrb	w13, [x26, x11]
  40936c:	add	x10, x10, #0x1
  409370:	sub	x11, x11, #0x1
  409374:	cmp	w12, w13
  409378:	b.eq	40935c <wcrtomb@plt+0x6aec>  // b.none
  40937c:	b	409328 <wcrtomb@plt+0x6ab8>
  409380:	sub	x8, x8, x24
  409384:	sub	x0, x8, x21
  409388:	tbz	x0, #63, 408e04 <wcrtomb@plt+0x6594>
  40938c:	b	408e10 <wcrtomb@plt+0x65a0>
  409390:	ldr	x0, [x0, #88]
  409394:	ret
  409398:	stp	x29, x30, [sp, #-96]!
  40939c:	str	x28, [sp, #16]
  4093a0:	stp	x26, x25, [sp, #32]
  4093a4:	stp	x24, x23, [sp, #48]
  4093a8:	stp	x22, x21, [sp, #64]
  4093ac:	stp	x20, x19, [sp, #80]
  4093b0:	mov	x29, sp
  4093b4:	sub	sp, sp, #0x900
  4093b8:	ldr	x22, [x0, #2440]
  4093bc:	ldr	x23, [x0, #88]
  4093c0:	add	x8, x0, #0x78
  4093c4:	sub	x9, x29, #0x100
  4093c8:	cmp	x22, #0x0
  4093cc:	mov	x20, x0
  4093d0:	csel	x19, x9, x8, ne  // ne = any
  4093d4:	cmp	x23, #0x1
  4093d8:	b.ne	409510 <wcrtomb@plt+0x6ca0>  // b.any
  4093dc:	ldr	x21, [x20, #96]
  4093e0:	str	x21, [x29, #24]
  4093e4:	cbz	x21, 4093fc <wcrtomb@plt+0x6b8c>
  4093e8:	ldr	x0, [x21, #8]
  4093ec:	add	x1, x29, #0x18
  4093f0:	bl	409974 <wcrtomb@plt+0x7104>
  4093f4:	ldr	x21, [x21, #24]
  4093f8:	cbnz	x21, 4093e8 <wcrtomb@plt+0x6b78>
  4093fc:	ldp	x9, x8, [x20, #24]
  409400:	ldr	x21, [x20, #104]
  409404:	sub	x8, x8, x9
  409408:	cmp	x8, x21
  40940c:	b.cs	409420 <wcrtomb@plt+0x6bb0>  // b.hs, b.nlast
  409410:	mov	x0, x20
  409414:	mov	x1, x21
  409418:	bl	419f68 <_obstack_newchunk@@Base>
  40941c:	ldr	x9, [x20, #24]
  409420:	ldr	x8, [x20, #16]
  409424:	add	x9, x9, x21
  409428:	str	x9, [x20, #24]
  40942c:	cmp	x9, x8
  409430:	b.ne	409440 <wcrtomb@plt+0x6bd0>  // b.any
  409434:	ldrb	w10, [x20, #80]
  409438:	orr	w10, w10, #0x2
  40943c:	strb	w10, [x20, #80]
  409440:	ldr	x11, [x20, #48]
  409444:	ldr	x12, [x20, #8]
  409448:	ldr	x10, [x20, #32]
  40944c:	add	x9, x11, x9
  409450:	bic	x9, x9, x11
  409454:	sub	x11, x9, x12
  409458:	sub	x12, x10, x12
  40945c:	cmp	x11, x12
  409460:	str	x9, [x20, #24]
  409464:	b.ls	409470 <wcrtomb@plt+0x6c00>  // b.plast
  409468:	mov	x9, x10
  40946c:	str	x10, [x20, #24]
  409470:	ldr	x10, [x20, #104]
  409474:	str	x9, [x20, #16]
  409478:	str	x8, [x20, #2424]
  40947c:	cmp	x10, #0x1
  409480:	b.lt	4094c8 <wcrtomb@plt+0x6c58>  // b.tstop
  409484:	ldr	x9, [x20, #96]
  409488:	ldr	x10, [x9, #8]
  40948c:	ldrb	w10, [x10, #24]
  409490:	strb	w10, [x8]
  409494:	ldr	x8, [x20, #104]
  409498:	cmp	x8, #0x2
  40949c:	b.lt	4094c8 <wcrtomb@plt+0x6c58>  // b.tstop
  4094a0:	mov	w8, #0x1                   	// #1
  4094a4:	ldr	x9, [x9, #24]
  4094a8:	ldr	x11, [x20, #2424]
  4094ac:	ldr	x10, [x9, #8]
  4094b0:	ldrb	w10, [x10, #24]
  4094b4:	strb	w10, [x11, x8]
  4094b8:	ldr	x10, [x20, #104]
  4094bc:	add	x8, x8, #0x1
  4094c0:	cmp	x8, x10
  4094c4:	b.lt	4094a4 <wcrtomb@plt+0x6c34>  // b.tstop
  4094c8:	ldr	x0, [x20, #2440]
  4094cc:	bl	408508 <wcrtomb@plt+0x5c98>
  4094d0:	adrp	x8, 408000 <wcrtomb@plt+0x5790>
  4094d4:	add	x8, x8, #0xdbc
  4094d8:	str	x8, [x0, #2464]
  4094dc:	ldr	x1, [x20, #2424]
  4094e0:	ldr	x2, [x20, #104]
  4094e4:	mov	x21, x0
  4094e8:	bl	4089bc <wcrtomb@plt+0x614c>
  4094ec:	mov	x0, x20
  4094f0:	mov	x1, xzr
  4094f4:	bl	41a0e8 <_obstack_free@@Base>
  4094f8:	mov	w2, #0x9a8                 	// #2472
  4094fc:	mov	x0, x20
  409500:	mov	x1, x21
  409504:	bl	402210 <memcpy@plt>
  409508:	mov	x0, x21
  40950c:	bl	402620 <free@plt>
  409510:	ldr	x8, [x20, #104]
  409514:	mov	w9, #0xff                  	// #255
  409518:	cmp	x8, #0xff
  40951c:	csel	x8, x8, x9, lt  // lt = tstop
  409520:	mov	x9, #0x101010101010101     	// #72340172838076673
  409524:	and	x8, x8, #0xff
  409528:	mul	x8, x8, x9
  40952c:	dup	v0.2d, x8
  409530:	stp	q0, q0, [x19, #224]
  409534:	stp	q0, q0, [x19, #192]
  409538:	stp	q0, q0, [x19, #160]
  40953c:	stp	q0, q0, [x19, #128]
  409540:	stp	q0, q0, [x19, #96]
  409544:	stp	q0, q0, [x19, #64]
  409548:	stp	q0, q0, [x19, #32]
  40954c:	stp	q0, q0, [x19]
  409550:	ldr	x24, [x20, #96]
  409554:	str	x24, [x29, #24]
  409558:	cbnz	x24, 4095b8 <wcrtomb@plt+0x6d48>
  40955c:	ldr	x25, [x20, #96]
  409560:	cmp	x23, #0x1
  409564:	b.ne	409570 <wcrtomb@plt+0x6d00>  // b.any
  409568:	ldr	x8, [x25, #24]
  40956c:	cbnz	x8, 409698 <wcrtomb@plt+0x6e28>
  409570:	add	x24, x20, #0x178
  409574:	cmp	x22, #0x0
  409578:	mov	x8, sp
  40957c:	csel	x21, x8, x24, ne  // ne = any
  409580:	mov	w2, #0x800                 	// #2048
  409584:	mov	x0, x21
  409588:	mov	w1, wzr
  40958c:	bl	402470 <memset@plt>
  409590:	ldr	x0, [x25, #8]
  409594:	mov	x1, x21
  409598:	bl	409b5c <wcrtomb@plt+0x72ec>
  40959c:	mov	x10, xzr
  4095a0:	mov	w8, #0xffffffff            	// #-1
  4095a4:	cbz	x22, 40973c <wcrtomb@plt+0x6ecc>
  4095a8:	mov	w11, #0xfffffffe            	// #-2
  4095ac:	b	4096f4 <wcrtomb@plt+0x6e84>
  4095b0:	ldr	x24, [x24, #24]
  4095b4:	cbz	x24, 40955c <wcrtomb@plt+0x6cec>
  4095b8:	ldr	x0, [x24, #8]
  4095bc:	cmp	x23, #0x1
  4095c0:	add	x1, x29, #0x18
  4095c4:	cset	w21, eq  // eq = none
  4095c8:	bl	409974 <wcrtomb@plt+0x7104>
  4095cc:	ldr	x0, [x24, #8]
  4095d0:	ldr	x1, [x24, #40]
  4095d4:	mov	x2, x19
  4095d8:	bl	4099bc <wcrtomb@plt+0x714c>
  4095dc:	ldr	x0, [x24, #8]
  4095e0:	ldr	x1, [x24, #32]
  4095e4:	ldr	x2, [x20, #96]
  4095e8:	mov	w3, w21
  4095ec:	bl	409a18 <wcrtomb@plt+0x71a8>
  4095f0:	cmp	x23, #0x1
  4095f4:	b.ne	4095b0 <wcrtomb@plt+0x6d40>  // b.any
  4095f8:	ldr	x8, [x20, #104]
  4095fc:	ldr	x25, [x24, #32]
  409600:	stp	x8, x8, [x24, #48]
  409604:	cbz	x25, 4095b0 <wcrtomb@plt+0x6d40>
  409608:	ldp	x8, x21, [x24]
  40960c:	cbz	x8, 409664 <wcrtomb@plt+0x6df4>
  409610:	ldr	x26, [x24, #40]
  409614:	b	409620 <wcrtomb@plt+0x6db0>
  409618:	ldr	x25, [x25, #32]
  40961c:	cbz	x25, 4095b0 <wcrtomb@plt+0x6d40>
  409620:	ldr	x0, [x25, #8]
  409624:	mov	x1, x21
  409628:	bl	409ae0 <wcrtomb@plt+0x7270>
  40962c:	ldr	x8, [x25, #40]
  409630:	sub	x8, x26, x8
  409634:	tbnz	w0, #0, 409648 <wcrtomb@plt+0x6dd8>
  409638:	ldr	x9, [x25, #48]
  40963c:	cmp	x8, x9
  409640:	b.ge	409648 <wcrtomb@plt+0x6dd8>  // b.tcont
  409644:	str	x8, [x25, #48]
  409648:	ldr	x9, [x25, #56]
  40964c:	cmp	x9, x8
  409650:	b.le	409618 <wcrtomb@plt+0x6da8>
  409654:	str	x8, [x25, #56]
  409658:	b	409618 <wcrtomb@plt+0x6da8>
  40965c:	ldr	x25, [x25, #32]
  409660:	cbz	x25, 4095b0 <wcrtomb@plt+0x6d40>
  409664:	ldr	x0, [x25, #8]
  409668:	mov	x1, x21
  40966c:	bl	409ae0 <wcrtomb@plt+0x7270>
  409670:	tbnz	w0, #0, 40965c <wcrtomb@plt+0x6dec>
  409674:	ldr	x8, [x24, #40]
  409678:	ldp	x9, x10, [x25, #40]
  40967c:	sub	x8, x8, x9
  409680:	cmp	x8, x10
  409684:	b.ge	40965c <wcrtomb@plt+0x6dec>  // b.tcont
  409688:	str	x8, [x25, #48]
  40968c:	b	40965c <wcrtomb@plt+0x6dec>
  409690:	ldr	x8, [x8, #24]
  409694:	cbz	x8, 409570 <wcrtomb@plt+0x6d00>
  409698:	ldr	x10, [x8, #16]
  40969c:	ldr	x9, [x8, #56]
  4096a0:	ldr	x10, [x10, #56]
  4096a4:	cmp	x9, x10
  4096a8:	b.gt	4096bc <wcrtomb@plt+0x6e4c>
  4096ac:	ldr	x10, [x8, #48]
  4096b0:	cmp	x10, x9
  4096b4:	b.le	409690 <wcrtomb@plt+0x6e20>
  4096b8:	b	4096d0 <wcrtomb@plt+0x6e60>
  4096bc:	mov	x9, x10
  4096c0:	str	x10, [x8, #56]
  4096c4:	ldr	x10, [x8, #48]
  4096c8:	cmp	x10, x9
  4096cc:	b.le	409690 <wcrtomb@plt+0x6e20>
  4096d0:	str	x9, [x8, #48]
  4096d4:	b	409690 <wcrtomb@plt+0x6e20>
  4096d8:	cmp	w8, w11
  4096dc:	csinv	w8, w10, wzr, eq  // eq = none
  4096e0:	mov	w9, w11
  4096e4:	add	x10, x10, #0x1
  4096e8:	cmp	x10, #0x100
  4096ec:	mov	w11, w9
  4096f0:	b.eq	40978c <wcrtomb@plt+0x6f1c>  // b.none
  4096f4:	ldrb	w9, [x22, x10]
  4096f8:	ldr	x12, [x21, x9, lsl #3]
  4096fc:	str	x12, [x24, x10, lsl #3]
  409700:	cbz	x12, 4096e0 <wcrtomb@plt+0x6e70>
  409704:	cmn	w11, #0x2
  409708:	b.gt	409714 <wcrtomb@plt+0x6ea4>
  40970c:	mov	w8, w10
  409710:	b	4096e4 <wcrtomb@plt+0x6e74>
  409714:	cmp	w11, w9
  409718:	b.eq	4096d8 <wcrtomb@plt+0x6e68>  // b.none
  40971c:	cmp	x10, x9
  409720:	cset	w9, eq  // eq = none
  409724:	cmp	w11, w8
  409728:	cset	w12, eq  // eq = none
  40972c:	tst	w12, w9
  409730:	csel	w8, w10, w8, ne  // ne = any
  409734:	csinv	w9, w11, wzr, ne  // ne = any
  409738:	b	4096e4 <wcrtomb@plt+0x6e74>
  40973c:	mov	w9, #0xfffffffe            	// #-2
  409740:	b	409758 <wcrtomb@plt+0x6ee8>
  409744:	mov	w8, w10
  409748:	mov	w9, w10
  40974c:	add	x10, x10, #0x1
  409750:	cmp	x10, #0x100
  409754:	b.eq	40978c <wcrtomb@plt+0x6f1c>  // b.none
  409758:	ldr	x11, [x24, x10, lsl #3]
  40975c:	cbz	x11, 40974c <wcrtomb@plt+0x6edc>
  409760:	cmn	w9, #0x2
  409764:	b.le	409744 <wcrtomb@plt+0x6ed4>
  409768:	cmp	w10, w9
  40976c:	b.ne	40977c <wcrtomb@plt+0x6f0c>  // b.any
  409770:	cmp	w8, w9
  409774:	csinv	w8, w9, wzr, eq  // eq = none
  409778:	b	40974c <wcrtomb@plt+0x6edc>
  40977c:	cmp	w9, w8
  409780:	csel	w8, w10, w8, eq  // eq = none
  409784:	csinv	w9, w9, wzr, eq  // eq = none
  409788:	b	40974c <wcrtomb@plt+0x6edc>
  40978c:	cmp	x23, #0x1
  409790:	str	w9, [x20, #2448]
  409794:	str	w8, [x20, #2452]
  409798:	b.ne	409930 <wcrtomb@plt+0x70c0>  // b.any
  40979c:	ldp	x9, x8, [x20, #24]
  4097a0:	ldr	x21, [x20, #104]
  4097a4:	sub	x8, x8, x9
  4097a8:	cmp	x8, x21
  4097ac:	b.cs	4097c0 <wcrtomb@plt+0x6f50>  // b.hs, b.nlast
  4097b0:	mov	x0, x20
  4097b4:	mov	x1, x21
  4097b8:	bl	419f68 <_obstack_newchunk@@Base>
  4097bc:	ldr	x9, [x20, #24]
  4097c0:	ldr	x8, [x20, #16]
  4097c4:	add	x9, x9, x21
  4097c8:	str	x9, [x20, #24]
  4097cc:	cmp	x9, x8
  4097d0:	b.ne	4097e0 <wcrtomb@plt+0x6f70>  // b.any
  4097d4:	ldrb	w10, [x20, #80]
  4097d8:	orr	w10, w10, #0x2
  4097dc:	strb	w10, [x20, #80]
  4097e0:	ldr	x10, [x20, #48]
  4097e4:	ldr	x12, [x20, #8]
  4097e8:	ldr	x11, [x20, #32]
  4097ec:	add	x9, x10, x9
  4097f0:	bic	x10, x9, x10
  4097f4:	sub	x9, x10, x12
  4097f8:	sub	x12, x11, x12
  4097fc:	cmp	x9, x12
  409800:	str	x10, [x20, #24]
  409804:	b.ls	409810 <wcrtomb@plt+0x6fa0>  // b.plast
  409808:	mov	x10, x11
  40980c:	str	x11, [x20, #24]
  409810:	ldr	x9, [x20, #104]
  409814:	str	x10, [x20, #16]
  409818:	str	x8, [x20, #2424]
  40981c:	cmp	x9, #0x1
  409820:	b.lt	409930 <wcrtomb@plt+0x70c0>  // b.tstop
  409824:	ldr	x10, [x20, #96]
  409828:	add	x8, x9, x8
  40982c:	cmp	x9, #0x1
  409830:	ldr	x11, [x10, #8]
  409834:	ldrb	w11, [x11, #24]
  409838:	sturb	w11, [x8, #-1]
  40983c:	b.eq	409864 <wcrtomb@plt+0x6ff4>  // b.none
  409840:	ldr	x10, [x10, #24]
  409844:	ldr	x11, [x20, #2424]
  409848:	ldr	x8, [x10, #8]
  40984c:	add	x11, x11, x9
  409850:	sub	x9, x9, #0x1
  409854:	cmp	x9, #0x1
  409858:	ldrb	w8, [x8, #24]
  40985c:	sturb	w8, [x11, #-2]
  409860:	b.gt	409840 <wcrtomb@plt+0x6fd0>
  409864:	ldr	x8, [x20, #104]
  409868:	cmp	x8, #0x2
  40986c:	b.lt	409930 <wcrtomb@plt+0x70c0>  // b.tstop
  409870:	ldp	x9, x10, [x20, #24]
  409874:	lsl	x8, x8, #3
  409878:	sub	x21, x8, #0x8
  40987c:	sub	x8, x10, x9
  409880:	cmp	x8, x21
  409884:	b.cs	409898 <wcrtomb@plt+0x7028>  // b.hs, b.nlast
  409888:	mov	x0, x20
  40988c:	mov	x1, x21
  409890:	bl	419f68 <_obstack_newchunk@@Base>
  409894:	ldr	x9, [x20, #24]
  409898:	ldr	x8, [x20, #16]
  40989c:	add	x9, x9, x21
  4098a0:	str	x9, [x20, #24]
  4098a4:	cmp	x9, x8
  4098a8:	b.ne	4098b8 <wcrtomb@plt+0x7048>  // b.any
  4098ac:	ldrb	w10, [x20, #80]
  4098b0:	orr	w10, w10, #0x2
  4098b4:	strb	w10, [x20, #80]
  4098b8:	ldr	x11, [x20, #48]
  4098bc:	ldr	x12, [x20, #8]
  4098c0:	ldr	x13, [x20, #32]
  4098c4:	ldr	x10, [x20, #104]
  4098c8:	add	x9, x11, x9
  4098cc:	bic	x9, x9, x11
  4098d0:	sub	x14, x13, x12
  4098d4:	sub	x11, x9, x12
  4098d8:	cmp	x11, x14
  4098dc:	csel	x9, x13, x9, hi  // hi = pmore
  4098e0:	cmp	x10, #0x2
  4098e4:	stp	x9, x9, [x20, #16]
  4098e8:	str	x8, [x20, #2432]
  4098ec:	b.lt	409918 <wcrtomb@plt+0x70a8>  // b.tstop
  4098f0:	ldr	x9, [x20, #96]
  4098f4:	mov	x11, xzr
  4098f8:	ldr	x9, [x9, #24]
  4098fc:	ldr	x10, [x9, #48]
  409900:	str	x10, [x8, x11, lsl #3]
  409904:	ldr	x10, [x20, #104]
  409908:	add	x11, x11, #0x1
  40990c:	sub	x12, x10, #0x1
  409910:	cmp	x11, x12
  409914:	b.lt	4098f8 <wcrtomb@plt+0x7088>  // b.tstop
  409918:	ldr	x8, [x20, #2424]
  40991c:	add	x8, x10, x8
  409920:	ldurb	w8, [x8, #-2]
  409924:	cbz	x22, 40992c <wcrtomb@plt+0x70bc>
  409928:	ldrb	w8, [x22, x8]
  40992c:	strb	w8, [x20, #2456]
  409930:	cbz	x22, 409954 <wcrtomb@plt+0x70e4>
  409934:	mov	x8, xzr
  409938:	add	x9, x20, #0x78
  40993c:	ldrb	w10, [x22, x8]
  409940:	ldrb	w10, [x19, x10]
  409944:	strb	w10, [x9, x8]
  409948:	add	x8, x8, #0x1
  40994c:	cmp	x8, #0x100
  409950:	b.ne	40993c <wcrtomb@plt+0x70cc>  // b.any
  409954:	add	sp, sp, #0x900
  409958:	ldp	x20, x19, [sp, #80]
  40995c:	ldp	x22, x21, [sp, #64]
  409960:	ldp	x24, x23, [sp, #48]
  409964:	ldp	x26, x25, [sp, #32]
  409968:	ldr	x28, [sp, #16]
  40996c:	ldp	x29, x30, [sp], #96
  409970:	ret
  409974:	cbz	x0, 4099b8 <wcrtomb@plt+0x7148>
  409978:	stp	x29, x30, [sp, #-32]!
  40997c:	stp	x20, x19, [sp, #16]
  409980:	mov	x20, x0
  409984:	ldr	x0, [x0]
  409988:	mov	x29, sp
  40998c:	mov	x19, x1
  409990:	bl	409974 <wcrtomb@plt+0x7104>
  409994:	ldr	x0, [x20, #8]
  409998:	mov	x1, x19
  40999c:	bl	409974 <wcrtomb@plt+0x7104>
  4099a0:	ldr	x8, [x20, #16]
  4099a4:	ldr	x9, [x19]
  4099a8:	str	x8, [x9, #24]
  4099ac:	str	x8, [x19]
  4099b0:	ldp	x20, x19, [sp, #16]
  4099b4:	ldp	x29, x30, [sp], #32
  4099b8:	ret
  4099bc:	stp	x29, x30, [sp, #-48]!
  4099c0:	str	x21, [sp, #16]
  4099c4:	stp	x20, x19, [sp, #32]
  4099c8:	mov	x29, sp
  4099cc:	cbz	x0, 409a08 <wcrtomb@plt+0x7198>
  4099d0:	mov	x21, x0
  4099d4:	ldr	x0, [x0]
  4099d8:	mov	x19, x2
  4099dc:	mov	x20, x1
  4099e0:	bl	4099bc <wcrtomb@plt+0x714c>
  4099e4:	ldr	x0, [x21, #8]
  4099e8:	mov	x1, x20
  4099ec:	mov	x2, x19
  4099f0:	bl	4099bc <wcrtomb@plt+0x714c>
  4099f4:	ldrb	w8, [x21, #24]
  4099f8:	ldrb	w9, [x19, x8]
  4099fc:	cmp	x9, x20
  409a00:	b.le	409a08 <wcrtomb@plt+0x7198>
  409a04:	strb	w20, [x19, x8]
  409a08:	ldp	x20, x19, [sp, #32]
  409a0c:	ldr	x21, [sp, #16]
  409a10:	ldp	x29, x30, [sp], #48
  409a14:	ret
  409a18:	stp	x29, x30, [sp, #-64]!
  409a1c:	str	x23, [sp, #16]
  409a20:	stp	x22, x21, [sp, #32]
  409a24:	stp	x20, x19, [sp, #48]
  409a28:	mov	x29, sp
  409a2c:	cbz	x0, 409acc <wcrtomb@plt+0x725c>
  409a30:	mov	x21, x0
  409a34:	ldr	x0, [x0]
  409a38:	and	w23, w3, #0x1
  409a3c:	mov	w19, w3
  409a40:	mov	w3, w23
  409a44:	mov	x20, x2
  409a48:	mov	x22, x1
  409a4c:	bl	409a18 <wcrtomb@plt+0x71a8>
  409a50:	ldr	x0, [x21, #8]
  409a54:	mov	x1, x22
  409a58:	mov	x2, x20
  409a5c:	mov	w3, w23
  409a60:	bl	409a18 <wcrtomb@plt+0x71a8>
  409a64:	cbnz	x22, 409a7c <wcrtomb@plt+0x720c>
  409a68:	ldr	x8, [x21, #16]
  409a6c:	str	x20, [x8, #32]
  409a70:	b	409acc <wcrtomb@plt+0x725c>
  409a74:	ldr	x22, [x22, #32]
  409a78:	cbz	x22, 409a68 <wcrtomb@plt+0x71f8>
  409a7c:	ldr	x8, [x22, #8]
  409a80:	cbz	x8, 409a74 <wcrtomb@plt+0x7204>
  409a84:	ldrb	w9, [x21, #24]
  409a88:	ldrb	w10, [x8, #24]
  409a8c:	cmp	w9, w10
  409a90:	b.eq	409aa4 <wcrtomb@plt+0x7234>  // b.none
  409a94:	cset	w10, cs  // cs = hs, nlast
  409a98:	ldr	x8, [x8, w10, uxtw #3]
  409a9c:	cbnz	x8, 409a88 <wcrtomb@plt+0x7218>
  409aa0:	b	409a74 <wcrtomb@plt+0x7204>
  409aa4:	ldr	x9, [x8, #16]
  409aa8:	ldr	x8, [x21, #16]
  409aac:	str	x9, [x8, #32]
  409ab0:	tbnz	w19, #0, 409acc <wcrtomb@plt+0x725c>
  409ab4:	ldr	x9, [x9]
  409ab8:	cbz	x9, 409acc <wcrtomb@plt+0x725c>
  409abc:	ldr	x9, [x8]
  409ac0:	cbnz	x9, 409acc <wcrtomb@plt+0x725c>
  409ac4:	mov	x9, #0xffffffffffffffff    	// #-1
  409ac8:	str	x9, [x8]
  409acc:	ldp	x20, x19, [sp, #48]
  409ad0:	ldp	x22, x21, [sp, #32]
  409ad4:	ldr	x23, [sp, #16]
  409ad8:	ldp	x29, x30, [sp], #64
  409adc:	ret
  409ae0:	stp	x29, x30, [sp, #-32]!
  409ae4:	stp	x20, x19, [sp, #16]
  409ae8:	mov	x29, sp
  409aec:	cbz	x1, 409b4c <wcrtomb@plt+0x72dc>
  409af0:	mov	x20, x1
  409af4:	ldr	x1, [x1]
  409af8:	mov	x19, x0
  409afc:	bl	409ae0 <wcrtomb@plt+0x7270>
  409b00:	tbz	w0, #0, 409b3c <wcrtomb@plt+0x72cc>
  409b04:	ldr	x1, [x20, #8]
  409b08:	mov	x0, x19
  409b0c:	bl	409ae0 <wcrtomb@plt+0x7270>
  409b10:	mov	w8, w0
  409b14:	mov	w0, wzr
  409b18:	cbz	x19, 409b40 <wcrtomb@plt+0x72d0>
  409b1c:	tbz	w8, #0, 409b40 <wcrtomb@plt+0x72d0>
  409b20:	ldrb	w8, [x20, #24]
  409b24:	ldrb	w9, [x19, #24]
  409b28:	cmp	w8, w9
  409b2c:	b.eq	409b4c <wcrtomb@plt+0x72dc>  // b.none
  409b30:	cset	w9, cs  // cs = hs, nlast
  409b34:	ldr	x19, [x19, w9, uxtw #3]
  409b38:	cbnz	x19, 409b24 <wcrtomb@plt+0x72b4>
  409b3c:	mov	w0, wzr
  409b40:	ldp	x20, x19, [sp, #16]
  409b44:	ldp	x29, x30, [sp], #32
  409b48:	ret
  409b4c:	mov	w0, #0x1                   	// #1
  409b50:	ldp	x20, x19, [sp, #16]
  409b54:	ldp	x29, x30, [sp], #32
  409b58:	ret
  409b5c:	cbz	x0, 409b9c <wcrtomb@plt+0x732c>
  409b60:	stp	x29, x30, [sp, #-32]!
  409b64:	stp	x20, x19, [sp, #16]
  409b68:	mov	x20, x0
  409b6c:	ldr	x0, [x0]
  409b70:	mov	x29, sp
  409b74:	mov	x19, x1
  409b78:	bl	409b5c <wcrtomb@plt+0x72ec>
  409b7c:	ldr	x0, [x20, #8]
  409b80:	mov	x1, x19
  409b84:	bl	409b5c <wcrtomb@plt+0x72ec>
  409b88:	ldr	x8, [x20, #16]
  409b8c:	ldrb	w9, [x20, #24]
  409b90:	str	x8, [x19, x9, lsl #3]
  409b94:	ldp	x20, x19, [sp, #16]
  409b98:	ldp	x29, x30, [sp], #32
  409b9c:	ret
  409ba0:	ldr	x5, [x0, #2464]
  409ba4:	and	w4, w4, #0x1
  409ba8:	br	x5
  409bac:	stp	x29, x30, [sp, #-32]!
  409bb0:	mov	x1, xzr
  409bb4:	str	x19, [sp, #16]
  409bb8:	mov	x29, sp
  409bbc:	mov	x19, x0
  409bc0:	bl	41a0e8 <_obstack_free@@Base>
  409bc4:	mov	x0, x19
  409bc8:	ldr	x19, [sp, #16]
  409bcc:	ldp	x29, x30, [sp], #32
  409bd0:	b	402620 <free@plt>
  409bd4:	ret
  409bd8:	ldrb	w8, [x0]
  409bdc:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409be0:	add	x9, x9, #0x888
  409be4:	add	x8, x9, x8
  409be8:	ldrsb	x8, [x8, #3]
  409bec:	cmn	x8, #0x2
  409bf0:	b.ne	409bf8 <wcrtomb@plt+0x7388>  // b.any
  409bf4:	b	419d80 <wcrtomb@plt+0x17510>
  409bf8:	mov	x0, x8
  409bfc:	ret
  409c00:	stp	x29, x30, [sp, #-48]!
  409c04:	str	x21, [sp, #16]
  409c08:	stp	x20, x19, [sp, #32]
  409c0c:	adrp	x20, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409c10:	adrp	x21, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  409c14:	mov	x19, xzr
  409c18:	add	x20, x20, #0x888
  409c1c:	add	x21, x21, #0x610
  409c20:	mov	x29, sp
  409c24:	b	409c44 <wcrtomb@plt+0x73d4>
  409c28:	bl	402710 <iswalnum@plt>
  409c2c:	cmp	w0, #0x0
  409c30:	cset	w8, ne  // ne = any
  409c34:	strb	w8, [x21, x19]
  409c38:	add	x19, x19, #0x1
  409c3c:	cmp	x19, #0x100
  409c40:	b.eq	409c68 <wcrtomb@plt+0x73f8>  // b.none
  409c44:	add	x8, x20, x19, lsl #2
  409c48:	ldr	w0, [x8, #260]
  409c4c:	cmp	w0, #0x5f
  409c50:	b.ne	409c28 <wcrtomb@plt+0x73b8>  // b.any
  409c54:	mov	w8, #0x1                   	// #1
  409c58:	strb	w8, [x21, x19]
  409c5c:	add	x19, x19, #0x1
  409c60:	cmp	x19, #0x100
  409c64:	b.ne	409c44 <wcrtomb@plt+0x73d4>  // b.any
  409c68:	ldp	x20, x19, [sp, #32]
  409c6c:	ldr	x21, [sp, #16]
  409c70:	ldp	x29, x30, [sp], #48
  409c74:	ret
  409c78:	sub	sp, sp, #0x40
  409c7c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409c80:	ldrb	w8, [x8, #3470]
  409c84:	stp	x29, x30, [sp, #16]
  409c88:	stp	x22, x21, [sp, #32]
  409c8c:	stp	x20, x19, [sp, #48]
  409c90:	add	x29, sp, #0x10
  409c94:	cbz	w8, 409cac <wcrtomb@plt+0x743c>
  409c98:	mov	w19, w0
  409c9c:	bl	402630 <__ctype_get_mb_cur_max@plt>
  409ca0:	cmp	x0, #0x1
  409ca4:	b.eq	409ccc <wcrtomb@plt+0x745c>  // b.none
  409ca8:	tbnz	w19, #0, 409ccc <wcrtomb@plt+0x745c>
  409cac:	mov	x19, xzr
  409cb0:	mov	x0, x19
  409cb4:	bl	408508 <wcrtomb@plt+0x5c98>
  409cb8:	ldp	x20, x19, [sp, #48]
  409cbc:	ldp	x22, x21, [sp, #32]
  409cc0:	ldp	x29, x30, [sp, #16]
  409cc4:	add	sp, sp, #0x40
  409cc8:	ret
  409ccc:	mov	w0, #0x100                 	// #256
  409cd0:	bl	417290 <wcrtomb@plt+0x14a20>
  409cd4:	mov	x19, x0
  409cd8:	bl	402630 <__ctype_get_mb_cur_max@plt>
  409cdc:	cmp	x0, #0x1
  409ce0:	b.ne	409d08 <wcrtomb@plt+0x7498>  // b.any
  409ce4:	bl	4024d0 <__ctype_toupper_loc@plt>
  409ce8:	mov	x8, xzr
  409cec:	ldr	x9, [x0]
  409cf0:	ldr	w9, [x9, x8, lsl #2]
  409cf4:	strb	w9, [x19, x8]
  409cf8:	add	x8, x8, #0x1
  409cfc:	cmp	x8, #0x100
  409d00:	b.ne	409cec <wcrtomb@plt+0x747c>  // b.any
  409d04:	b	409cb0 <wcrtomb@plt+0x7440>
  409d08:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409d0c:	mov	x21, xzr
  409d10:	add	x22, x22, #0x888
  409d14:	b	409d28 <wcrtomb@plt+0x74b8>
  409d18:	strb	w21, [x19, x21]
  409d1c:	add	x21, x21, #0x1
  409d20:	cmp	x21, #0x100
  409d24:	b.eq	409cb0 <wcrtomb@plt+0x7440>  // b.none
  409d28:	add	x8, x22, x21, lsl #2
  409d2c:	ldr	w20, [x8, #260]
  409d30:	mov	w0, w20
  409d34:	bl	402780 <towupper@plt>
  409d38:	cmp	w0, w20
  409d3c:	b.eq	409d18 <wcrtomb@plt+0x74a8>  // b.none
  409d40:	mov	w1, w0
  409d44:	add	x0, x19, x21
  409d48:	add	x2, sp, #0x8
  409d4c:	str	xzr, [sp, #8]
  409d50:	bl	402870 <wcrtomb@plt>
  409d54:	cmp	x0, #0x1
  409d58:	b.eq	409d1c <wcrtomb@plt+0x74ac>  // b.none
  409d5c:	bl	402560 <abort@plt>
  409d60:	stp	x29, x30, [sp, #-80]!
  409d64:	stp	x24, x23, [sp, #32]
  409d68:	stp	x22, x21, [sp, #48]
  409d6c:	stp	x20, x19, [sp, #64]
  409d70:	ldr	x24, [x0]
  409d74:	mov	x19, x2
  409d78:	str	x25, [sp, #16]
  409d7c:	mov	x29, sp
  409d80:	cmp	x24, x2
  409d84:	b.cs	409dfc <wcrtomb@plt+0x758c>  // b.hs, b.nlast
  409d88:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409d8c:	ldrb	w8, [x8, #2186]
  409d90:	mov	x22, x3
  409d94:	mov	x21, x0
  409d98:	mov	x20, x1
  409d9c:	cbz	w8, 409e04 <wcrtomb@plt+0x7594>
  409da0:	cmp	x19, x22
  409da4:	b.cs	409de8 <wcrtomb@plt+0x7578>  // b.hs, b.nlast
  409da8:	ldrb	w8, [x19]
  409dac:	and	w8, w8, #0xc0
  409db0:	cmp	w8, #0x80
  409db4:	b.ne	409de8 <wcrtomb@plt+0x7578>  // b.any
  409db8:	ldurb	w8, [x19, #-1]
  409dbc:	and	w8, w8, #0xc0
  409dc0:	cmp	w8, #0x80
  409dc4:	b.ne	409ea0 <wcrtomb@plt+0x7630>  // b.any
  409dc8:	ldurb	w8, [x19, #-2]
  409dcc:	and	w8, w8, #0xc0
  409dd0:	cmp	w8, #0x80
  409dd4:	b.ne	409ea8 <wcrtomb@plt+0x7638>  // b.any
  409dd8:	ldurb	w8, [x19, #-3]
  409ddc:	and	w8, w8, #0xc0
  409de0:	cmp	w8, #0x80
  409de4:	b.ne	409eb0 <wcrtomb@plt+0x7640>  // b.any
  409de8:	mov	w0, #0x1                   	// #1
  409dec:	mov	x8, x19
  409df0:	str	x8, [x21]
  409df4:	cbnz	x20, 409e78 <wcrtomb@plt+0x7608>
  409df8:	b	409e7c <wcrtomb@plt+0x760c>
  409dfc:	sub	x0, x19, x24
  409e00:	b	409e88 <wcrtomb@plt+0x7618>
  409e04:	adrp	x25, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409e08:	add	x25, x25, #0x888
  409e0c:	str	xzr, [x29, #24]
  409e10:	b	409e20 <wcrtomb@plt+0x75b0>
  409e14:	add	x24, x23, x0
  409e18:	cmp	x24, x19
  409e1c:	b.cs	409e68 <wcrtomb@plt+0x75f8>  // b.hs, b.nlast
  409e20:	ldrb	w8, [x24]
  409e24:	mov	x23, x24
  409e28:	add	x8, x25, x8
  409e2c:	ldrsb	x0, [x8, #3]
  409e30:	cmn	x0, #0x2
  409e34:	b.eq	409e44 <wcrtomb@plt+0x75d4>  // b.none
  409e38:	cmn	x0, #0x2
  409e3c:	b.cc	409e14 <wcrtomb@plt+0x75a4>  // b.lo, b.ul, b.last
  409e40:	b	409e5c <wcrtomb@plt+0x75ec>
  409e44:	sub	x1, x22, x23
  409e48:	add	x2, x29, #0x18
  409e4c:	mov	x0, x23
  409e50:	bl	419d80 <wcrtomb@plt+0x17510>
  409e54:	cmn	x0, #0x2
  409e58:	b.cc	409e14 <wcrtomb@plt+0x75a4>  // b.lo, b.ul, b.last
  409e5c:	mov	w0, #0x1                   	// #1
  409e60:	str	xzr, [x29, #24]
  409e64:	b	409e14 <wcrtomb@plt+0x75a4>
  409e68:	mov	x8, x24
  409e6c:	mov	x24, x23
  409e70:	str	x8, [x21]
  409e74:	cbz	x20, 409e7c <wcrtomb@plt+0x760c>
  409e78:	str	x0, [x20]
  409e7c:	sub	x9, x19, x24
  409e80:	cmp	x8, x19
  409e84:	csel	x0, xzr, x9, eq  // eq = none
  409e88:	ldp	x20, x19, [sp, #64]
  409e8c:	ldp	x22, x21, [sp, #48]
  409e90:	ldp	x24, x23, [sp, #32]
  409e94:	ldr	x25, [sp, #16]
  409e98:	ldp	x29, x30, [sp], #80
  409e9c:	ret
  409ea0:	mov	w25, #0x1                   	// #1
  409ea4:	b	409eb4 <wcrtomb@plt+0x7644>
  409ea8:	mov	w25, #0x2                   	// #2
  409eac:	b	409eb4 <wcrtomb@plt+0x7644>
  409eb0:	mov	w25, #0x3                   	// #3
  409eb4:	str	xzr, [x29, #24]
  409eb8:	sub	x23, x19, x25
  409ebc:	ldrb	w8, [x23]
  409ec0:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409ec4:	add	x9, x9, #0x888
  409ec8:	add	x8, x9, x8
  409ecc:	ldrsb	x0, [x8, #3]
  409ed0:	cmn	x0, #0x2
  409ed4:	b.ne	409ee8 <wcrtomb@plt+0x7678>  // b.any
  409ed8:	sub	x1, x22, x23
  409edc:	add	x2, x29, #0x18
  409ee0:	mov	x0, x23
  409ee4:	bl	419d80 <wcrtomb@plt+0x17510>
  409ee8:	cmp	x0, x25
  409eec:	cset	w9, hi  // hi = pmore
  409ef0:	cmn	x0, #0x2
  409ef4:	cset	w10, cc  // cc = lo, ul, last
  409ef8:	add	x8, x23, x0
  409efc:	tst	w9, w10
  409f00:	csel	x8, x8, x19, ne  // ne = any
  409f04:	csel	x24, x23, x24, ne  // ne = any
  409f08:	str	x8, [x21]
  409f0c:	cbnz	x20, 409e78 <wcrtomb@plt+0x7608>
  409f10:	b	409e7c <wcrtomb@plt+0x760c>
  409f14:	sub	sp, sp, #0x50
  409f18:	stp	x22, x21, [sp, #48]
  409f1c:	subs	x22, x1, x0
  409f20:	stp	x29, x30, [sp, #16]
  409f24:	stp	x24, x23, [sp, #32]
  409f28:	stp	x20, x19, [sp, #64]
  409f2c:	add	x29, sp, #0x10
  409f30:	str	xzr, [sp, #8]
  409f34:	b.eq	409fc8 <wcrtomb@plt+0x7758>  // b.none
  409f38:	adrp	x23, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  409f3c:	adrp	x24, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  409f40:	mov	x20, x0
  409f44:	mov	x19, xzr
  409f48:	add	x23, x23, #0x610
  409f4c:	add	x24, x24, #0x888
  409f50:	b	409f60 <wcrtomb@plt+0x76f0>
  409f54:	add	x19, x19, #0x1
  409f58:	cmp	x22, x19
  409f5c:	b.ls	409fcc <wcrtomb@plt+0x775c>  // b.plast
  409f60:	add	x1, x20, x19
  409f64:	ldrb	w8, [x1]
  409f68:	ldrb	w9, [x23, x8]
  409f6c:	cbnz	w9, 409f54 <wcrtomb@plt+0x76e4>
  409f70:	add	x8, x24, x8
  409f74:	ldrb	w8, [x8, #3]
  409f78:	cmp	w8, #0xfe
  409f7c:	b.ne	409fcc <wcrtomb@plt+0x775c>  // b.any
  409f80:	sub	x2, x22, x19
  409f84:	add	x0, sp, #0x4
  409f88:	add	x3, sp, #0x8
  409f8c:	str	wzr, [sp, #4]
  409f90:	bl	419da4 <wcrtomb@plt+0x17534>
  409f94:	ldr	w8, [sp, #4]
  409f98:	mov	x21, x0
  409f9c:	cmp	w8, #0x5f
  409fa0:	b.eq	409fb0 <wcrtomb@plt+0x7740>  // b.none
  409fa4:	mov	w0, w8
  409fa8:	bl	402710 <iswalnum@plt>
  409fac:	cbz	w0, 409fcc <wcrtomb@plt+0x775c>
  409fb0:	cmp	x21, #0x0
  409fb4:	add	x8, x21, x19
  409fb8:	cinc	x19, x8, eq  // eq = none
  409fbc:	cmp	x22, x19
  409fc0:	b.hi	409f60 <wcrtomb@plt+0x76f0>  // b.pmore
  409fc4:	b	409fcc <wcrtomb@plt+0x775c>
  409fc8:	mov	x19, xzr
  409fcc:	mov	x0, x19
  409fd0:	ldp	x20, x19, [sp, #64]
  409fd4:	ldp	x22, x21, [sp, #48]
  409fd8:	ldp	x24, x23, [sp, #32]
  409fdc:	ldp	x29, x30, [sp, #16]
  409fe0:	add	sp, sp, #0x50
  409fe4:	ret
  409fe8:	sub	sp, sp, #0x30
  409fec:	stp	x29, x30, [sp, #16]
  409ff0:	add	x29, sp, #0x10
  409ff4:	subs	x2, x1, x0
  409ff8:	str	x19, [sp, #32]
  409ffc:	str	xzr, [x29, #24]
  40a000:	b.eq	40a090 <wcrtomb@plt+0x7820>  // b.none
  40a004:	ldrb	w9, [x0]
  40a008:	adrp	x10, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a00c:	add	x10, x10, #0x610
  40a010:	mov	x8, x0
  40a014:	ldrb	w10, [x10, x9]
  40a018:	cbz	w10, 40a030 <wcrtomb@plt+0x77c0>
  40a01c:	mov	w0, #0x1                   	// #1
  40a020:	ldr	x19, [sp, #32]
  40a024:	ldp	x29, x30, [sp, #16]
  40a028:	add	sp, sp, #0x30
  40a02c:	ret
  40a030:	adrp	x10, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a034:	add	x10, x10, #0x888
  40a038:	add	x9, x10, x9
  40a03c:	ldrb	w9, [x9, #3]
  40a040:	cmp	w9, #0xfe
  40a044:	b.ne	40a090 <wcrtomb@plt+0x7820>  // b.any
  40a048:	sub	x0, x29, #0x4
  40a04c:	add	x3, x29, #0x18
  40a050:	mov	x1, x8
  40a054:	stur	wzr, [x29, #-4]
  40a058:	bl	419da4 <wcrtomb@plt+0x17534>
  40a05c:	ldur	w8, [x29, #-4]
  40a060:	mov	x19, x0
  40a064:	cmp	w8, #0x5f
  40a068:	b.eq	40a078 <wcrtomb@plt+0x7808>  // b.none
  40a06c:	mov	w0, w8
  40a070:	bl	402710 <iswalnum@plt>
  40a074:	cbz	w0, 40a090 <wcrtomb@plt+0x7820>
  40a078:	cmp	x19, #0x0
  40a07c:	cinc	x0, x19, eq  // eq = none
  40a080:	ldr	x19, [sp, #32]
  40a084:	ldp	x29, x30, [sp, #16]
  40a088:	add	sp, sp, #0x30
  40a08c:	ret
  40a090:	mov	x0, xzr
  40a094:	ldr	x19, [sp, #32]
  40a098:	ldp	x29, x30, [sp, #16]
  40a09c:	add	sp, sp, #0x30
  40a0a0:	ret
  40a0a4:	sub	sp, sp, #0x40
  40a0a8:	cmp	x0, x1
  40a0ac:	stp	x29, x30, [sp, #32]
  40a0b0:	stp	x20, x19, [sp, #48]
  40a0b4:	add	x29, sp, #0x20
  40a0b8:	b.eq	40a1c0 <wcrtomb@plt+0x7950>  // b.none
  40a0bc:	mov	x19, x1
  40a0c0:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a0c4:	ldrb	w8, [x19, #-1]!
  40a0c8:	ldrb	w9, [x9, #2184]
  40a0cc:	cbz	w9, 40a148 <wcrtomb@plt+0x78d8>
  40a0d0:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a0d4:	ldrb	w9, [x9, #2186]
  40a0d8:	mov	x20, x2
  40a0dc:	cbz	w9, 40a0f8 <wcrtomb@plt+0x7888>
  40a0e0:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a0e4:	add	x9, x9, #0x888
  40a0e8:	add	x9, x9, x8
  40a0ec:	ldrb	w9, [x9, #3]
  40a0f0:	cmp	w9, #0xfe
  40a0f4:	b.ne	40a148 <wcrtomb@plt+0x78d8>  // b.any
  40a0f8:	str	x0, [sp, #8]
  40a0fc:	add	x0, sp, #0x8
  40a100:	mov	x1, xzr
  40a104:	mov	x2, x19
  40a108:	mov	x3, x20
  40a10c:	bl	409d60 <wcrtomb@plt+0x74f0>
  40a110:	sub	x1, x19, x0
  40a114:	subs	x2, x20, x1
  40a118:	stur	xzr, [x29, #-8]
  40a11c:	b.eq	40a1c0 <wcrtomb@plt+0x7950>  // b.none
  40a120:	ldrb	w8, [x1]
  40a124:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a128:	add	x9, x9, #0x610
  40a12c:	ldrb	w9, [x9, x8]
  40a130:	cbz	w9, 40a164 <wcrtomb@plt+0x78f4>
  40a134:	mov	w0, #0x1                   	// #1
  40a138:	ldp	x20, x19, [sp, #48]
  40a13c:	ldp	x29, x30, [sp, #32]
  40a140:	add	sp, sp, #0x40
  40a144:	ret
  40a148:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a14c:	add	x9, x9, #0x610
  40a150:	ldrb	w0, [x9, x8]
  40a154:	ldp	x20, x19, [sp, #48]
  40a158:	ldp	x29, x30, [sp, #32]
  40a15c:	add	sp, sp, #0x40
  40a160:	ret
  40a164:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a168:	add	x9, x9, #0x888
  40a16c:	add	x8, x9, x8
  40a170:	ldrb	w8, [x8, #3]
  40a174:	cmp	w8, #0xfe
  40a178:	b.ne	40a1c0 <wcrtomb@plt+0x7950>  // b.any
  40a17c:	sub	x0, x29, #0xc
  40a180:	sub	x3, x29, #0x8
  40a184:	stur	wzr, [x29, #-12]
  40a188:	bl	419da4 <wcrtomb@plt+0x17534>
  40a18c:	ldur	w8, [x29, #-12]
  40a190:	mov	x19, x0
  40a194:	cmp	w8, #0x5f
  40a198:	b.eq	40a1a8 <wcrtomb@plt+0x7938>  // b.none
  40a19c:	mov	w0, w8
  40a1a0:	bl	402710 <iswalnum@plt>
  40a1a4:	cbz	w0, 40a1c0 <wcrtomb@plt+0x7950>
  40a1a8:	cmp	x19, #0x0
  40a1ac:	cinc	x0, x19, eq  // eq = none
  40a1b0:	ldp	x20, x19, [sp, #48]
  40a1b4:	ldp	x29, x30, [sp, #32]
  40a1b8:	add	sp, sp, #0x40
  40a1bc:	ret
  40a1c0:	mov	x0, xzr
  40a1c4:	ldp	x20, x19, [sp, #48]
  40a1c8:	ldp	x29, x30, [sp, #32]
  40a1cc:	add	sp, sp, #0x40
  40a1d0:	ret
  40a1d4:	mov	w0, #0x1                   	// #1
  40a1d8:	b	403634 <wcrtomb@plt+0xdc4>
  40a1dc:	stp	x29, x30, [sp, #-96]!
  40a1e0:	stp	x28, x27, [sp, #16]
  40a1e4:	stp	x26, x25, [sp, #32]
  40a1e8:	stp	x24, x23, [sp, #48]
  40a1ec:	stp	x22, x21, [sp, #64]
  40a1f0:	stp	x20, x19, [sp, #80]
  40a1f4:	mov	x29, sp
  40a1f8:	mov	x22, x3
  40a1fc:	mov	x23, x2
  40a200:	mov	x25, x1
  40a204:	mov	x19, x0
  40a208:	bl	402270 <strlen@plt>
  40a20c:	ldr	x24, [x25]
  40a210:	cbz	x24, 40a294 <wcrtomb@plt+0x7a24>
  40a214:	mov	x20, x0
  40a218:	mov	w26, wzr
  40a21c:	mov	x21, xzr
  40a220:	cbz	x23, 40a2a0 <wcrtomb@plt+0x7a30>
  40a224:	add	x28, x25, #0x8
  40a228:	mov	x27, #0xffffffffffffffff    	// #-1
  40a22c:	mov	x25, x23
  40a230:	b	40a260 <wcrtomb@plt+0x79f0>
  40a234:	madd	x0, x27, x22, x23
  40a238:	mov	x1, x25
  40a23c:	mov	x2, x22
  40a240:	bl	402490 <bcmp@plt>
  40a244:	cmp	w0, #0x0
  40a248:	cset	w8, ne  // ne = any
  40a24c:	orr	w26, w26, w8
  40a250:	ldr	x24, [x28, x21, lsl #3]
  40a254:	add	x21, x21, #0x1
  40a258:	add	x25, x25, x22
  40a25c:	cbz	x24, 40a2f0 <wcrtomb@plt+0x7a80>
  40a260:	mov	x0, x24
  40a264:	mov	x1, x19
  40a268:	mov	x2, x20
  40a26c:	bl	402420 <strncmp@plt>
  40a270:	cbnz	w0, 40a250 <wcrtomb@plt+0x79e0>
  40a274:	mov	x0, x24
  40a278:	bl	402270 <strlen@plt>
  40a27c:	cmp	x0, x20
  40a280:	b.eq	40a298 <wcrtomb@plt+0x7a28>  // b.none
  40a284:	cmn	x27, #0x1
  40a288:	b.ne	40a234 <wcrtomb@plt+0x79c4>  // b.any
  40a28c:	mov	x27, x21
  40a290:	b	40a250 <wcrtomb@plt+0x79e0>
  40a294:	mov	x21, #0xffffffffffffffff    	// #-1
  40a298:	mov	x0, x21
  40a29c:	b	40a2fc <wcrtomb@plt+0x7a8c>
  40a2a0:	add	x22, x25, #0x8
  40a2a4:	mov	x27, #0xffffffffffffffff    	// #-1
  40a2a8:	b	40a2c8 <wcrtomb@plt+0x7a58>
  40a2ac:	cmn	x27, #0x1
  40a2b0:	cset	w8, ne  // ne = any
  40a2b4:	csel	x27, x21, x27, eq  // eq = none
  40a2b8:	orr	w26, w26, w8
  40a2bc:	ldr	x24, [x22, x21, lsl #3]
  40a2c0:	add	x21, x21, #0x1
  40a2c4:	cbz	x24, 40a2f0 <wcrtomb@plt+0x7a80>
  40a2c8:	mov	x0, x24
  40a2cc:	mov	x1, x19
  40a2d0:	mov	x2, x20
  40a2d4:	bl	402420 <strncmp@plt>
  40a2d8:	cbnz	w0, 40a2bc <wcrtomb@plt+0x7a4c>
  40a2dc:	mov	x0, x24
  40a2e0:	bl	402270 <strlen@plt>
  40a2e4:	cmp	x0, x20
  40a2e8:	b.ne	40a2ac <wcrtomb@plt+0x7a3c>  // b.any
  40a2ec:	b	40a298 <wcrtomb@plt+0x7a28>
  40a2f0:	tst	w26, #0x1
  40a2f4:	mov	x8, #0xfffffffffffffffe    	// #-2
  40a2f8:	csel	x0, x8, x27, ne  // ne = any
  40a2fc:	ldp	x20, x19, [sp, #80]
  40a300:	ldp	x22, x21, [sp, #64]
  40a304:	ldp	x24, x23, [sp, #48]
  40a308:	ldp	x26, x25, [sp, #32]
  40a30c:	ldp	x28, x27, [sp, #16]
  40a310:	ldp	x29, x30, [sp], #96
  40a314:	ret
  40a318:	stp	x29, x30, [sp, #-48]!
  40a31c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a320:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a324:	add	x8, x8, #0x39b
  40a328:	add	x9, x9, #0x380
  40a32c:	cmn	x2, #0x1
  40a330:	stp	x20, x19, [sp, #32]
  40a334:	mov	x19, x1
  40a338:	mov	x20, x0
  40a33c:	csel	x1, x9, x8, eq  // eq = none
  40a340:	mov	w2, #0x5                   	// #5
  40a344:	mov	x0, xzr
  40a348:	str	x21, [sp, #16]
  40a34c:	mov	x29, sp
  40a350:	bl	402740 <dcgettext@plt>
  40a354:	mov	x21, x0
  40a358:	mov	w1, #0x8                   	// #8
  40a35c:	mov	w0, wzr
  40a360:	mov	x2, x19
  40a364:	bl	41650c <wcrtomb@plt+0x13c9c>
  40a368:	mov	x19, x0
  40a36c:	mov	w0, #0x1                   	// #1
  40a370:	mov	x1, x20
  40a374:	bl	4169f8 <wcrtomb@plt+0x14188>
  40a378:	mov	x2, x21
  40a37c:	mov	x3, x19
  40a380:	ldp	x20, x19, [sp, #32]
  40a384:	ldr	x21, [sp, #16]
  40a388:	mov	x4, x0
  40a38c:	mov	w0, wzr
  40a390:	mov	w1, wzr
  40a394:	ldp	x29, x30, [sp], #48
  40a398:	b	4022a0 <error@plt>
  40a39c:	stp	x29, x30, [sp, #-96]!
  40a3a0:	stp	x20, x19, [sp, #80]
  40a3a4:	mov	x20, x1
  40a3a8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a3ac:	stp	x22, x21, [sp, #64]
  40a3b0:	mov	x19, x2
  40a3b4:	mov	x21, x0
  40a3b8:	add	x1, x1, #0x3b8
  40a3bc:	mov	w2, #0x5                   	// #5
  40a3c0:	mov	x0, xzr
  40a3c4:	stp	x28, x27, [sp, #16]
  40a3c8:	stp	x26, x25, [sp, #32]
  40a3cc:	stp	x24, x23, [sp, #48]
  40a3d0:	mov	x29, sp
  40a3d4:	bl	402740 <dcgettext@plt>
  40a3d8:	adrp	x26, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a3dc:	ldr	x1, [x26, #1056]
  40a3e0:	bl	402750 <fputs_unlocked@plt>
  40a3e4:	ldr	x24, [x21]
  40a3e8:	cbnz	x24, 40a428 <wcrtomb@plt+0x7bb8>
  40a3ec:	ldr	x0, [x26, #1056]
  40a3f0:	ldp	x8, x9, [x0, #40]
  40a3f4:	cmp	x8, x9
  40a3f8:	b.cs	40a4bc <wcrtomb@plt+0x7c4c>  // b.hs, b.nlast
  40a3fc:	add	x9, x8, #0x1
  40a400:	mov	w10, #0xa                   	// #10
  40a404:	str	x9, [x0, #40]
  40a408:	strb	w10, [x8]
  40a40c:	ldp	x20, x19, [sp, #80]
  40a410:	ldp	x22, x21, [sp, #64]
  40a414:	ldp	x24, x23, [sp, #48]
  40a418:	ldp	x26, x25, [sp, #32]
  40a41c:	ldp	x28, x27, [sp, #16]
  40a420:	ldp	x29, x30, [sp], #96
  40a424:	ret
  40a428:	add	x28, x21, #0x8
  40a42c:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a430:	mov	x27, xzr
  40a434:	mov	x23, xzr
  40a438:	mov	x22, xzr
  40a43c:	add	x21, x21, #0x3cd
  40a440:	cbnz	x22, 40a44c <wcrtomb@plt+0x7bdc>
  40a444:	mov	x25, xzr
  40a448:	b	40a488 <wcrtomb@plt+0x7c18>
  40a44c:	add	x1, x20, x27
  40a450:	mov	x0, x23
  40a454:	mov	x2, x19
  40a458:	bl	402490 <bcmp@plt>
  40a45c:	mov	x25, x27
  40a460:	cbnz	w0, 40a488 <wcrtomb@plt+0x7c18>
  40a464:	ldr	x25, [x26, #1056]
  40a468:	mov	x0, x24
  40a46c:	bl	416a08 <wcrtomb@plt+0x14198>
  40a470:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a474:	mov	x2, x0
  40a478:	mov	x0, x25
  40a47c:	add	x1, x1, #0x3d5
  40a480:	bl	402820 <fprintf@plt>
  40a484:	b	40a4a8 <wcrtomb@plt+0x7c38>
  40a488:	ldr	x23, [x26, #1056]
  40a48c:	mov	x0, x24
  40a490:	bl	416a08 <wcrtomb@plt+0x14198>
  40a494:	mov	x2, x0
  40a498:	mov	x0, x23
  40a49c:	mov	x1, x21
  40a4a0:	bl	402820 <fprintf@plt>
  40a4a4:	add	x23, x20, x25
  40a4a8:	ldr	x24, [x28, x22, lsl #3]
  40a4ac:	add	x22, x22, #0x1
  40a4b0:	add	x27, x27, x19
  40a4b4:	cbz	x24, 40a3ec <wcrtomb@plt+0x7b7c>
  40a4b8:	b	40a440 <wcrtomb@plt+0x7bd0>
  40a4bc:	ldp	x20, x19, [sp, #80]
  40a4c0:	ldp	x22, x21, [sp, #64]
  40a4c4:	ldp	x24, x23, [sp, #48]
  40a4c8:	ldp	x26, x25, [sp, #32]
  40a4cc:	ldp	x28, x27, [sp, #16]
  40a4d0:	mov	w1, #0xa                   	// #10
  40a4d4:	ldp	x29, x30, [sp], #96
  40a4d8:	b	402590 <__overflow@plt>
  40a4dc:	stp	x29, x30, [sp, #-80]!
  40a4e0:	stp	x24, x23, [sp, #32]
  40a4e4:	stp	x22, x21, [sp, #48]
  40a4e8:	mov	x21, x3
  40a4ec:	mov	x22, x2
  40a4f0:	mov	x24, x1
  40a4f4:	mov	x23, x0
  40a4f8:	mov	x0, x1
  40a4fc:	mov	x1, x2
  40a500:	mov	x2, x3
  40a504:	mov	x3, x4
  40a508:	str	x25, [sp, #16]
  40a50c:	stp	x20, x19, [sp, #64]
  40a510:	mov	x29, sp
  40a514:	mov	x19, x5
  40a518:	mov	x20, x4
  40a51c:	bl	40a1dc <wcrtomb@plt+0x796c>
  40a520:	tbz	x0, #63, 40a59c <wcrtomb@plt+0x7d2c>
  40a524:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a528:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a52c:	add	x8, x8, #0x39b
  40a530:	add	x9, x9, #0x380
  40a534:	cmn	x0, #0x1
  40a538:	csel	x1, x9, x8, eq  // eq = none
  40a53c:	mov	w2, #0x5                   	// #5
  40a540:	mov	x0, xzr
  40a544:	bl	402740 <dcgettext@plt>
  40a548:	mov	x25, x0
  40a54c:	mov	w1, #0x8                   	// #8
  40a550:	mov	w0, wzr
  40a554:	mov	x2, x24
  40a558:	bl	41650c <wcrtomb@plt+0x13c9c>
  40a55c:	mov	x24, x0
  40a560:	mov	w0, #0x1                   	// #1
  40a564:	mov	x1, x23
  40a568:	bl	4169f8 <wcrtomb@plt+0x14188>
  40a56c:	mov	x4, x0
  40a570:	mov	w0, wzr
  40a574:	mov	w1, wzr
  40a578:	mov	x2, x25
  40a57c:	mov	x3, x24
  40a580:	bl	4022a0 <error@plt>
  40a584:	mov	x0, x22
  40a588:	mov	x1, x21
  40a58c:	mov	x2, x20
  40a590:	bl	40a39c <wcrtomb@plt+0x7b2c>
  40a594:	blr	x19
  40a598:	mov	x0, #0xffffffffffffffff    	// #-1
  40a59c:	ldp	x20, x19, [sp, #64]
  40a5a0:	ldp	x22, x21, [sp, #48]
  40a5a4:	ldp	x24, x23, [sp, #32]
  40a5a8:	ldr	x25, [sp, #16]
  40a5ac:	ldp	x29, x30, [sp], #80
  40a5b0:	ret
  40a5b4:	stp	x29, x30, [sp, #-64]!
  40a5b8:	stp	x22, x21, [sp, #32]
  40a5bc:	stp	x20, x19, [sp, #48]
  40a5c0:	ldr	x20, [x1]
  40a5c4:	str	x23, [sp, #16]
  40a5c8:	mov	x29, sp
  40a5cc:	cbz	x20, 40a61c <wcrtomb@plt+0x7dac>
  40a5d0:	mov	x22, x2
  40a5d4:	mov	x23, x1
  40a5d8:	mov	x1, x2
  40a5dc:	mov	x2, x3
  40a5e0:	mov	x19, x3
  40a5e4:	mov	x21, x0
  40a5e8:	bl	402490 <bcmp@plt>
  40a5ec:	cbz	w0, 40a61c <wcrtomb@plt+0x7dac>
  40a5f0:	add	x22, x22, x19
  40a5f4:	add	x23, x23, #0x8
  40a5f8:	ldr	x20, [x23]
  40a5fc:	cbz	x20, 40a61c <wcrtomb@plt+0x7dac>
  40a600:	mov	x0, x21
  40a604:	mov	x1, x22
  40a608:	mov	x2, x19
  40a60c:	bl	402490 <bcmp@plt>
  40a610:	add	x22, x22, x19
  40a614:	add	x23, x23, #0x8
  40a618:	cbnz	w0, 40a5f8 <wcrtomb@plt+0x7d88>
  40a61c:	mov	x0, x20
  40a620:	ldp	x20, x19, [sp, #48]
  40a624:	ldp	x22, x21, [sp, #32]
  40a628:	ldr	x23, [sp, #16]
  40a62c:	ldp	x29, x30, [sp], #64
  40a630:	ret
  40a634:	sub	sp, sp, #0xd0
  40a638:	stp	x29, x30, [sp, #176]
  40a63c:	add	x29, sp, #0xb0
  40a640:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a644:	str	x19, [sp, #192]
  40a648:	mov	x19, x0
  40a64c:	add	x8, x8, #0x710
  40a650:	mov	w9, #0x4000                	// #16384
  40a654:	sub	x0, x29, #0x18
  40a658:	mov	x1, xzr
  40a65c:	stur	wzr, [x29, #-16]
  40a660:	stur	x8, [x29, #-24]
  40a664:	stur	x9, [x29, #-8]
  40a668:	bl	402220 <sigaltstack@plt>
  40a66c:	cbz	w0, 40a680 <wcrtomb@plt+0x7e10>
  40a670:	ldr	x19, [sp, #192]
  40a674:	ldp	x29, x30, [sp, #176]
  40a678:	add	sp, sp, #0xd0
  40a67c:	ret
  40a680:	adrp	x8, 40a000 <wcrtomb@plt+0x7790>
  40a684:	add	x8, x8, #0x718
  40a688:	cmp	x19, #0x0
  40a68c:	csel	x8, x8, x19, eq  // eq = none
  40a690:	adrp	x19, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a694:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a698:	add	x19, x19, #0x710
  40a69c:	add	x1, x1, #0x3da
  40a6a0:	mov	w2, #0x5                   	// #5
  40a6a4:	mov	x0, xzr
  40a6a8:	str	x8, [x19]
  40a6ac:	bl	402740 <dcgettext@plt>
  40a6b0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a6b4:	str	x0, [x19, #8]
  40a6b8:	add	x1, x1, #0x3e8
  40a6bc:	mov	w2, #0x5                   	// #5
  40a6c0:	mov	x0, xzr
  40a6c4:	bl	402740 <dcgettext@plt>
  40a6c8:	str	x0, [x19, #16]
  40a6cc:	bl	4137e0 <wcrtomb@plt+0x10f70>
  40a6d0:	mov	x8, sp
  40a6d4:	str	x0, [x19, #24]
  40a6d8:	add	x0, x8, #0x8
  40a6dc:	bl	402410 <sigemptyset@plt>
  40a6e0:	mov	w8, #0x4                   	// #4
  40a6e4:	adrp	x9, 40a000 <wcrtomb@plt+0x7790>
  40a6e8:	movk	w8, #0xc800, lsl #16
  40a6ec:	add	x9, x9, #0x71c
  40a6f0:	mov	x1, sp
  40a6f4:	mov	w0, #0xb                   	// #11
  40a6f8:	mov	x2, xzr
  40a6fc:	str	w8, [sp, #136]
  40a700:	str	x9, [sp]
  40a704:	bl	402500 <sigaction@plt>
  40a708:	ldr	x19, [sp, #192]
  40a70c:	ldp	x29, x30, [sp, #176]
  40a710:	add	sp, sp, #0xd0
  40a714:	ret
  40a718:	ret
  40a71c:	stp	x29, x30, [sp, #-16]!
  40a720:	mov	x29, sp
  40a724:	bl	40a728 <wcrtomb@plt+0x7eb8>
  40a728:	stp	x29, x30, [sp, #-48]!
  40a72c:	str	x21, [sp, #16]
  40a730:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a734:	stp	x20, x19, [sp, #32]
  40a738:	add	x21, x21, #0x710
  40a73c:	ldr	x8, [x21]
  40a740:	mov	w0, wzr
  40a744:	mov	x29, sp
  40a748:	blr	x8
  40a74c:	ldr	x19, [x21, #16]
  40a750:	ldr	x20, [x21, #24]
  40a754:	ldr	x0, [x21, #24]
  40a758:	bl	402270 <strlen@plt>
  40a75c:	mov	x2, x0
  40a760:	mov	w0, #0x2                   	// #2
  40a764:	mov	x1, x20
  40a768:	bl	402540 <write@plt>
  40a76c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a770:	add	x1, x1, #0x3f7
  40a774:	mov	w0, #0x2                   	// #2
  40a778:	mov	w2, #0x2                   	// #2
  40a77c:	bl	402540 <write@plt>
  40a780:	mov	x0, x19
  40a784:	bl	402270 <strlen@plt>
  40a788:	mov	x2, x0
  40a78c:	mov	w0, #0x2                   	// #2
  40a790:	mov	x1, x19
  40a794:	bl	402540 <write@plt>
  40a798:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40a79c:	add	x1, x1, #0xd74
  40a7a0:	mov	w0, #0x2                   	// #2
  40a7a4:	mov	w2, #0x1                   	// #1
  40a7a8:	bl	402540 <write@plt>
  40a7ac:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a7b0:	ldr	w0, [x8, #952]
  40a7b4:	bl	402250 <_exit@plt>
  40a7b8:	cmp	x0, x1
  40a7bc:	b.eq	40a80c <wcrtomb@plt+0x7f9c>  // b.none
  40a7c0:	ldrb	w8, [x0]
  40a7c4:	ldrb	w9, [x1]
  40a7c8:	sub	w10, w8, #0x41
  40a7cc:	add	w11, w8, #0x20
  40a7d0:	sub	w12, w9, #0x41
  40a7d4:	cmp	w10, #0x1a
  40a7d8:	add	w13, w9, #0x20
  40a7dc:	csel	w8, w11, w8, cc  // cc = lo, ul, last
  40a7e0:	cmp	w12, #0x1a
  40a7e4:	csel	w9, w13, w9, cc  // cc = lo, ul, last
  40a7e8:	ands	w8, w8, #0xff
  40a7ec:	b.eq	40a814 <wcrtomb@plt+0x7fa4>  // b.none
  40a7f0:	and	w9, w9, #0xff
  40a7f4:	add	x0, x0, #0x1
  40a7f8:	cmp	w8, w9
  40a7fc:	add	x1, x1, #0x1
  40a800:	b.eq	40a7c0 <wcrtomb@plt+0x7f50>  // b.none
  40a804:	sub	w0, w8, w9
  40a808:	ret
  40a80c:	mov	w0, wzr
  40a810:	ret
  40a814:	and	w9, w9, #0xff
  40a818:	sub	w0, w8, w9
  40a81c:	ret
  40a820:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a824:	str	x0, [x8, #1848]
  40a828:	ret
  40a82c:	and	w8, w0, #0x1
  40a830:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a834:	strb	w8, [x9, #1840]
  40a838:	ret
  40a83c:	stp	x29, x30, [sp, #-48]!
  40a840:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a844:	ldr	x0, [x8, #1080]
  40a848:	str	x21, [sp, #16]
  40a84c:	stp	x20, x19, [sp, #32]
  40a850:	mov	x29, sp
  40a854:	bl	42a95c <_obstack_memory_used@@Base+0x107c8>
  40a858:	cbz	w0, 40a878 <wcrtomb@plt+0x8008>
  40a85c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a860:	ldrb	w8, [x8, #1840]
  40a864:	cbz	w8, 40a898 <wcrtomb@plt+0x8028>
  40a868:	bl	4027e0 <__errno_location@plt>
  40a86c:	ldr	w8, [x0]
  40a870:	cmp	w8, #0x20
  40a874:	b.ne	40a898 <wcrtomb@plt+0x8028>  // b.any
  40a878:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a87c:	ldr	x0, [x8, #1056]
  40a880:	bl	42a95c <_obstack_memory_used@@Base+0x107c8>
  40a884:	cbnz	w0, 40a904 <wcrtomb@plt+0x8094>
  40a888:	ldp	x20, x19, [sp, #32]
  40a88c:	ldr	x21, [sp, #16]
  40a890:	ldp	x29, x30, [sp], #48
  40a894:	ret
  40a898:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a89c:	add	x1, x1, #0x337
  40a8a0:	mov	w2, #0x5                   	// #5
  40a8a4:	mov	x0, xzr
  40a8a8:	bl	402740 <dcgettext@plt>
  40a8ac:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  40a8b0:	ldr	x21, [x8, #1848]
  40a8b4:	mov	x19, x0
  40a8b8:	bl	4027e0 <__errno_location@plt>
  40a8bc:	ldr	w20, [x0]
  40a8c0:	cbnz	x21, 40a8e0 <wcrtomb@plt+0x8070>
  40a8c4:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a8c8:	add	x2, x2, #0x3d7
  40a8cc:	mov	w0, wzr
  40a8d0:	mov	w1, w20
  40a8d4:	mov	x3, x19
  40a8d8:	bl	4022a0 <error@plt>
  40a8dc:	b	40a904 <wcrtomb@plt+0x8094>
  40a8e0:	mov	x0, x21
  40a8e4:	bl	416720 <wcrtomb@plt+0x13eb0>
  40a8e8:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40a8ec:	mov	x3, x0
  40a8f0:	add	x2, x2, #0x2ee
  40a8f4:	mov	w0, wzr
  40a8f8:	mov	w1, w20
  40a8fc:	mov	x4, x19
  40a900:	bl	4022a0 <error@plt>
  40a904:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  40a908:	ldr	w0, [x8, #952]
  40a90c:	bl	402250 <_exit@plt>
  40a910:	stp	x29, x30, [sp, #-32]!
  40a914:	ldrb	w8, [x2, #456]
  40a918:	mov	x9, #0xffffffffffffffff    	// #-1
  40a91c:	str	x9, [x2, #48]
  40a920:	mov	w9, #0x1                   	// #1
  40a924:	str	x19, [sp, #16]
  40a928:	mov	x29, sp
  40a92c:	stp	x0, x1, [x2, #32]
  40a930:	strb	w9, [x2, #120]
  40a934:	cbz	w8, 40aa94 <wcrtomb@plt+0x8224>
  40a938:	ldr	x8, [x2, #184]
  40a93c:	mov	x19, x2
  40a940:	cbnz	x8, 40a954 <wcrtomb@plt+0x80e4>
  40a944:	mov	w1, #0x10b                 	// #267
  40a948:	mov	w2, #0x3                   	// #3
  40a94c:	mov	x0, x19
  40a950:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40a954:	mov	x0, x19
  40a958:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40a95c:	ldr	x8, [x19, #168]
  40a960:	stp	x0, x8, [x19, #128]
  40a964:	mov	x0, x19
  40a968:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40a96c:	ldr	x8, [x19, #128]
  40a970:	cmp	x8, #0x106
  40a974:	b.eq	40a9c8 <wcrtomb@plt+0x8158>  // b.none
  40a978:	cmp	x8, #0x108
  40a97c:	b.eq	40aa88 <wcrtomb@plt+0x8218>  // b.none
  40a980:	tbnz	x8, #63, 40aa1c <wcrtomb@plt+0x81ac>
  40a984:	mov	x0, x19
  40a988:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40a98c:	mov	w1, #0x105                 	// #261
  40a990:	mov	w2, #0x3                   	// #3
  40a994:	mov	x0, x19
  40a998:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40a99c:	ldr	x8, [x19, #128]
  40a9a0:	cmp	x8, #0x106
  40a9a4:	b.ne	40a978 <wcrtomb@plt+0x8108>  // b.any
  40a9a8:	b	40a9c8 <wcrtomb@plt+0x8158>
  40a9ac:	mov	w1, #0x106                 	// #262
  40a9b0:	mov	w2, #0x3                   	// #3
  40a9b4:	mov	x0, x19
  40a9b8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40a9bc:	ldr	x8, [x19, #128]
  40a9c0:	cmp	x8, #0x106
  40a9c4:	b.ne	40aa1c <wcrtomb@plt+0x81ac>  // b.any
  40a9c8:	mov	x0, x19
  40a9cc:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40a9d0:	str	x0, [x19, #128]
  40a9d4:	mov	x0, x19
  40a9d8:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40a9dc:	ldr	x8, [x19, #128]
  40a9e0:	cmp	x8, #0x106
  40a9e4:	b.eq	40a9ac <wcrtomb@plt+0x813c>  // b.none
  40a9e8:	cmp	x8, #0x108
  40a9ec:	b.eq	40a9ac <wcrtomb@plt+0x813c>  // b.none
  40a9f0:	tbnz	x8, #63, 40a9ac <wcrtomb@plt+0x813c>
  40a9f4:	mov	x0, x19
  40a9f8:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40a9fc:	mov	w1, #0x105                 	// #261
  40aa00:	mov	w2, #0x3                   	// #3
  40aa04:	mov	x0, x19
  40aa08:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40aa0c:	ldr	x8, [x19, #128]
  40aa10:	cmp	x8, #0x106
  40aa14:	b.ne	40a9e8 <wcrtomb@plt+0x8178>  // b.any
  40aa18:	b	40a9ac <wcrtomb@plt+0x813c>
  40aa1c:	cmn	x8, #0x1
  40aa20:	b.ne	40aa88 <wcrtomb@plt+0x8218>  // b.any
  40aa24:	ldr	x8, [x19, #184]
  40aa28:	mov	x0, x19
  40aa2c:	mvn	x1, x8
  40aa30:	bl	40aaac <wcrtomb@plt+0x823c>
  40aa34:	mov	w1, #0x105                 	// #261
  40aa38:	mov	w2, #0x3                   	// #3
  40aa3c:	mov	x0, x19
  40aa40:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40aa44:	ldr	x8, [x19, #184]
  40aa48:	cbz	x8, 40aa74 <wcrtomb@plt+0x8204>
  40aa4c:	mov	w1, #0x106                 	// #262
  40aa50:	mov	w2, #0x3                   	// #3
  40aa54:	mov	x0, x19
  40aa58:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40aa5c:	ldr	x8, [x19, #184]
  40aa60:	add	x8, x8, #0x1
  40aa64:	str	x8, [x19, #184]
  40aa68:	ldr	x19, [sp, #16]
  40aa6c:	ldp	x29, x30, [sp], #32
  40aa70:	ret
  40aa74:	mov	w8, #0x1                   	// #1
  40aa78:	str	x8, [x19, #184]
  40aa7c:	ldr	x19, [sp, #16]
  40aa80:	ldp	x29, x30, [sp], #32
  40aa84:	ret
  40aa88:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40aa8c:	add	x1, x1, #0x764
  40aa90:	b	40aa9c <wcrtomb@plt+0x822c>
  40aa94:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40aa98:	add	x1, x1, #0x750
  40aa9c:	mov	w2, #0x5                   	// #5
  40aaa0:	mov	x0, xzr
  40aaa4:	bl	402740 <dcgettext@plt>
  40aaa8:	bl	40298c <wcrtomb@plt+0x11c>
  40aaac:	sub	sp, sp, #0x60
  40aab0:	stp	x20, x19, [sp, #80]
  40aab4:	cmp	x1, #0x113
  40aab8:	mov	x19, x0
  40aabc:	stp	x29, x30, [sp, #16]
  40aac0:	str	x25, [sp, #32]
  40aac4:	stp	x24, x23, [sp, #48]
  40aac8:	stp	x22, x21, [sp, #64]
  40aacc:	add	x29, sp, #0x10
  40aad0:	b.ne	40abcc <wcrtomb@plt+0x835c>  // b.any
  40aad4:	ldrb	w8, [x19, #1048]
  40aad8:	cbz	w8, 40abcc <wcrtomb@plt+0x835c>
  40aadc:	ldr	x8, [x19, #104]
  40aae0:	cmp	x8, #0x1
  40aae4:	b.lt	40abf0 <wcrtomb@plt+0x8380>  // b.tstop
  40aae8:	mov	x8, sp
  40aaec:	mov	x22, xzr
  40aaf0:	mov	w21, wzr
  40aaf4:	orr	x23, x8, #0x1
  40aaf8:	b	40ab10 <wcrtomb@plt+0x82a0>
  40aafc:	ldr	x8, [x19, #104]
  40ab00:	add	x22, x22, #0x1
  40ab04:	mov	w21, #0x1                   	// #1
  40ab08:	cmp	x22, x8
  40ab0c:	b.ge	40abf4 <wcrtomb@plt+0x8384>  // b.tcont
  40ab10:	ldr	x8, [x19, #96]
  40ab14:	mov	x0, sp
  40ab18:	add	x2, x29, #0x18
  40ab1c:	ldr	w1, [x8, x22, lsl #2]
  40ab20:	str	xzr, [x29, #24]
  40ab24:	bl	402870 <wcrtomb@plt>
  40ab28:	cmn	x0, #0x1
  40ab2c:	b.eq	40aba0 <wcrtomb@plt+0x8330>  // b.none
  40ab30:	ldrb	w1, [sp]
  40ab34:	mov	x20, x0
  40ab38:	cmp	w20, #0x1
  40ab3c:	b.eq	40aba8 <wcrtomb@plt+0x8338>  // b.none
  40ab40:	mov	w2, #0x1                   	// #1
  40ab44:	mov	x0, x19
  40ab48:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40ab4c:	cmp	w20, #0x2
  40ab50:	b.lt	40abb4 <wcrtomb@plt+0x8344>  // b.tstop
  40ab54:	sub	w8, w20, #0x1
  40ab58:	and	x9, x20, #0xffffffff
  40ab5c:	sub	x20, x8, #0x1
  40ab60:	sub	x24, x9, #0x1
  40ab64:	mov	x25, x23
  40ab68:	ldrb	w1, [x25], #1
  40ab6c:	cmp	x20, #0x0
  40ab70:	cset	w8, eq  // eq = none
  40ab74:	lsl	w2, w8, #1
  40ab78:	mov	x0, x19
  40ab7c:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40ab80:	mov	w1, #0x105                 	// #261
  40ab84:	mov	w2, #0x3                   	// #3
  40ab88:	mov	x0, x19
  40ab8c:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40ab90:	subs	x24, x24, #0x1
  40ab94:	sub	x20, x20, #0x1
  40ab98:	b.ne	40ab68 <wcrtomb@plt+0x82f8>  // b.any
  40ab9c:	b	40abb4 <wcrtomb@plt+0x8344>
  40aba0:	mov	x1, xzr
  40aba4:	strb	wzr, [sp]
  40aba8:	mov	w2, #0x3                   	// #3
  40abac:	mov	x0, x19
  40abb0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40abb4:	tbz	w21, #0, 40aafc <wcrtomb@plt+0x828c>
  40abb8:	mov	w1, #0x106                 	// #262
  40abbc:	mov	w2, #0x3                   	// #3
  40abc0:	mov	x0, x19
  40abc4:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40abc8:	b	40aafc <wcrtomb@plt+0x828c>
  40abcc:	mov	x0, x19
  40abd0:	ldp	x20, x19, [sp, #80]
  40abd4:	ldp	x22, x21, [sp, #64]
  40abd8:	ldp	x24, x23, [sp, #48]
  40abdc:	ldr	x25, [sp, #32]
  40abe0:	ldp	x29, x30, [sp, #16]
  40abe4:	mov	w2, #0x3                   	// #3
  40abe8:	add	sp, sp, #0x60
  40abec:	b	40e6d8 <wcrtomb@plt+0xbe68>
  40abf0:	mov	w21, wzr
  40abf4:	ldr	x8, [x19, #80]
  40abf8:	str	xzr, [x19, #104]
  40abfc:	cmn	x8, #0x1
  40ac00:	b.eq	40ac24 <wcrtomb@plt+0x83b4>  // b.none
  40ac04:	add	x1, x8, #0x114
  40ac08:	mov	x0, x19
  40ac0c:	bl	40aaac <wcrtomb@plt+0x823c>
  40ac10:	cbz	w21, 40ac24 <wcrtomb@plt+0x83b4>
  40ac14:	mov	w1, #0x106                 	// #262
  40ac18:	mov	w2, #0x3                   	// #3
  40ac1c:	mov	x0, x19
  40ac20:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40ac24:	ldp	x20, x19, [sp, #80]
  40ac28:	ldp	x22, x21, [sp, #64]
  40ac2c:	ldp	x24, x23, [sp, #48]
  40ac30:	ldr	x25, [sp, #32]
  40ac34:	ldp	x29, x30, [sp, #16]
  40ac38:	add	sp, sp, #0x60
  40ac3c:	ret
  40ac40:	sub	sp, sp, #0x60
  40ac44:	stp	x29, x30, [sp, #32]
  40ac48:	stp	x24, x23, [sp, #48]
  40ac4c:	stp	x22, x21, [sp, #64]
  40ac50:	stp	x20, x19, [sp, #80]
  40ac54:	ldr	x20, [x0, #40]
  40ac58:	mov	x19, x0
  40ac5c:	add	x29, sp, #0x20
  40ac60:	cbz	x20, 40acf0 <wcrtomb@plt+0x8480>
  40ac64:	mov	w23, wzr
  40ac68:	add	x21, x19, #0x110
  40ac6c:	mov	w24, #0x1                   	// #1
  40ac70:	ldr	x1, [x19, #32]
  40ac74:	ldrb	w8, [x1]
  40ac78:	add	x8, x19, x8, lsl #2
  40ac7c:	ldr	w22, [x8, #1308]
  40ac80:	cmn	w22, #0x1
  40ac84:	b.ne	40acbc <wcrtomb@plt+0x844c>  // b.any
  40ac88:	mov	x0, sp
  40ac8c:	mov	x2, x20
  40ac90:	mov	x3, x21
  40ac94:	bl	419da4 <wcrtomb@plt+0x17534>
  40ac98:	sub	x8, x0, #0x1
  40ac9c:	cmn	x8, #0x3
  40aca0:	b.cs	40acb8 <wcrtomb@plt+0x8448>  // b.hs, b.nlast
  40aca4:	ldr	w8, [sp]
  40aca8:	cmp	w0, #0x1
  40acac:	str	w8, [x19, #72]
  40acb0:	b.eq	40acc0 <wcrtomb@plt+0x8450>  // b.none
  40acb4:	b	40ae58 <wcrtomb@plt+0x85e8>
  40acb8:	str	xzr, [x21]
  40acbc:	str	w22, [x19, #72]
  40acc0:	ldp	x12, x11, [x19, #32]
  40acc4:	mov	x8, x12
  40acc8:	ldrb	w22, [x8], #1
  40accc:	sub	x20, x11, #0x1
  40acd0:	cmp	w22, #0x5c
  40acd4:	stp	x8, x20, [x19, #32]
  40acd8:	b.ne	40acf8 <wcrtomb@plt+0x8488>  // b.any
  40acdc:	cbz	w24, 40ad34 <wcrtomb@plt+0x84c4>
  40ace0:	cbz	x20, 40b8d4 <wcrtomb@plt+0x9064>
  40ace4:	sub	w24, w24, #0x1
  40ace8:	mov	w23, #0x1                   	// #1
  40acec:	b	40ac70 <wcrtomb@plt+0x8400>
  40acf0:	mov	x21, #0xffffffffffffffff    	// #-1
  40acf4:	b	40ad48 <wcrtomb@plt+0x84d8>
  40acf8:	sub	w8, w22, #0xa
  40acfc:	cmp	w8, #0x72
  40ad00:	b.hi	40ad38 <wcrtomb@plt+0x84c8>  // b.pmore
  40ad04:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ad08:	add	x9, x9, #0x400
  40ad0c:	adr	x10, 40ad1c <wcrtomb@plt+0x84ac>
  40ad10:	ldrb	w13, [x9, x8]
  40ad14:	add	x10, x10, x13, lsl #2
  40ad18:	br	x10
  40ad1c:	tbz	w23, #0, 40ad38 <wcrtomb@plt+0x84c8>
  40ad20:	ldrb	w8, [x19, #449]
  40ad24:	tbnz	w8, #6, 40ad38 <wcrtomb@plt+0x84c8>
  40ad28:	strb	wzr, [x19, #120]
  40ad2c:	mov	w21, #0x112                 	// #274
  40ad30:	b	40ad48 <wcrtomb@plt+0x84d8>
  40ad34:	mov	w22, #0x5c                  	// #92
  40ad38:	ldrb	w8, [x19, #1048]
  40ad3c:	strb	wzr, [x19, #120]
  40ad40:	cbz	w8, 40ad68 <wcrtomb@plt+0x84f8>
  40ad44:	mov	w21, #0x109                 	// #265
  40ad48:	str	x21, [x19, #48]
  40ad4c:	mov	x0, x21
  40ad50:	ldp	x20, x19, [sp, #80]
  40ad54:	ldp	x22, x21, [sp, #64]
  40ad58:	ldp	x24, x23, [sp, #48]
  40ad5c:	ldp	x29, x30, [sp, #32]
  40ad60:	add	sp, sp, #0x60
  40ad64:	ret
  40ad68:	ldrb	w8, [x19, #457]
  40ad6c:	cbz	w8, 40ade4 <wcrtomb@plt+0x8574>
  40ad70:	bl	402610 <__ctype_b_loc@plt>
  40ad74:	ldr	x8, [x0]
  40ad78:	sxtw	x21, w22
  40ad7c:	ldrh	w8, [x8, w22, sxtw #1]
  40ad80:	tbz	w8, #10, 40ad48 <wcrtomb@plt+0x84d8>
  40ad84:	movi	v0.2d, #0x0
  40ad88:	stp	q0, q0, [sp]
  40ad8c:	bl	4024d0 <__ctype_toupper_loc@plt>
  40ad90:	ldr	x8, [x0]
  40ad94:	ldr	w20, [x8, x21, lsl #2]
  40ad98:	bl	4024d0 <__ctype_toupper_loc@plt>
  40ad9c:	ldr	x9, [x0]
  40ada0:	mov	x8, xzr
  40ada4:	mov	w10, #0x1                   	// #1
  40ada8:	mov	x11, sp
  40adac:	b	40adbc <wcrtomb@plt+0x854c>
  40adb0:	add	x8, x8, #0x1
  40adb4:	cmp	x8, #0x100
  40adb8:	b.eq	40adec <wcrtomb@plt+0x857c>  // b.none
  40adbc:	ldr	w12, [x9, x8, lsl #2]
  40adc0:	cmp	w12, w20
  40adc4:	b.ne	40adb0 <wcrtomb@plt+0x8540>  // b.any
  40adc8:	ubfx	x12, x8, #6, #26
  40adcc:	lsl	x12, x12, #3
  40add0:	ldr	x13, [x11, x12]
  40add4:	lsl	x14, x10, x8
  40add8:	orr	x13, x13, x14
  40addc:	str	x13, [x11, x12]
  40ade0:	b	40adb0 <wcrtomb@plt+0x8540>
  40ade4:	sxtw	x21, w22
  40ade8:	b	40ad48 <wcrtomb@plt+0x84d8>
  40adec:	ldr	x9, [x19, #8]
  40adf0:	cmp	x9, #0x0
  40adf4:	b.le	40b428 <wcrtomb@plt+0x8bb8>
  40adf8:	ldr	x0, [x19]
  40adfc:	ldp	x8, x10, [sp]
  40ae00:	ldp	x11, x12, [sp, #16]
  40ae04:	mov	x20, xzr
  40ae08:	add	x13, x0, #0x10
  40ae0c:	ldp	x14, x15, [x13, #-16]
  40ae10:	ldp	x16, x17, [x13]
  40ae14:	eor	x14, x14, x8
  40ae18:	eor	x15, x15, x10
  40ae1c:	eor	x16, x16, x11
  40ae20:	orr	x14, x15, x14
  40ae24:	orr	x14, x14, x16
  40ae28:	eor	x15, x17, x12
  40ae2c:	orr	x14, x14, x15
  40ae30:	cbz	x14, 40b854 <wcrtomb@plt+0x8fe4>
  40ae34:	add	x20, x20, #0x1
  40ae38:	cmp	x9, x20
  40ae3c:	add	x13, x13, #0x20
  40ae40:	b.ne	40ae0c <wcrtomb@plt+0x859c>  // b.any
  40ae44:	mov	x20, x9
  40ae48:	ldr	x8, [x19, #16]
  40ae4c:	cmp	x8, x9
  40ae50:	b.gt	40b840 <wcrtomb@plt+0x8fd0>
  40ae54:	b	40b43c <wcrtomb@plt+0x8bcc>
  40ae58:	ldp	x8, x9, [x19, #32]
  40ae5c:	sxtw	x10, w0
  40ae60:	mov	w22, #0xffffffff            	// #-1
  40ae64:	add	x8, x8, x10
  40ae68:	sub	x9, x9, x10
  40ae6c:	stp	x8, x9, [x19, #32]
  40ae70:	b	40ad38 <wcrtomb@plt+0x84c8>
  40ae74:	tbz	w23, #0, 40ad38 <wcrtomb@plt+0x84c8>
  40ae78:	ldrb	w8, [x19, #450]
  40ae7c:	tbnz	w8, #3, 40ad38 <wcrtomb@plt+0x84c8>
  40ae80:	ldrb	w8, [x19, #1048]
  40ae84:	cbz	w8, 40b294 <wcrtomb@plt+0x8a24>
  40ae88:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ae8c:	add	x23, x12, #0x1
  40ae90:	add	x8, x8, #0x82d
  40ae94:	cmp	w22, #0x77
  40ae98:	mov	w9, #0xb                   	// #11
  40ae9c:	b	40aec8 <wcrtomb@plt+0x8658>
  40aea0:	tbz	w23, #0, 40ad38 <wcrtomb@plt+0x84c8>
  40aea4:	ldrb	w8, [x19, #450]
  40aea8:	tbnz	w8, #3, 40ad38 <wcrtomb@plt+0x84c8>
  40aeac:	ldrb	w8, [x19, #1048]
  40aeb0:	cbz	w8, 40b360 <wcrtomb@plt+0x8af0>
  40aeb4:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40aeb8:	add	x23, x12, #0x1
  40aebc:	add	x8, x8, #0x821
  40aec0:	cmp	w22, #0x73
  40aec4:	mov	w9, #0xa                   	// #10
  40aec8:	cinc	x8, x8, eq  // eq = none
  40aecc:	cinc	x9, x9, ne  // ne = any
  40aed0:	mov	x0, x19
  40aed4:	stp	x8, x9, [x19, #32]
  40aed8:	bl	40e87c <wcrtomb@plt+0xc00c>
  40aedc:	mov	x21, x0
  40aee0:	stp	x20, x0, [x19, #40]
  40aee4:	str	x23, [x19, #32]
  40aee8:	strb	wzr, [x19, #120]
  40aeec:	b	40ad4c <wcrtomb@plt+0x84dc>
  40aef0:	tbz	w23, #0, 40b0f8 <wcrtomb@plt+0x8888>
  40aef4:	ldrb	w8, [x19, #450]
  40aef8:	tbnz	w8, #3, 40b0f8 <wcrtomb@plt+0x8888>
  40aefc:	mov	w21, #0x110                 	// #272
  40af00:	b	40ad48 <wcrtomb@plt+0x84d8>
  40af04:	ldr	x8, [x19, #448]
  40af08:	tbz	w8, #9, 40b738 <wcrtomb@plt+0x8ec8>
  40af0c:	mov	w10, #0x1                   	// #1
  40af10:	and	w9, w23, #0x1
  40af14:	bic	w10, w10, w8, lsr #12
  40af18:	cmp	w10, w9
  40af1c:	b.ne	40b738 <wcrtomb@plt+0x8ec8>  // b.any
  40af20:	tbnz	w8, #4, 40af2c <wcrtomb@plt+0x86bc>
  40af24:	ldrb	w9, [x19, #120]
  40af28:	cbnz	w9, 40b738 <wcrtomb@plt+0x8ec8>
  40af2c:	add	x9, x12, x11
  40af30:	movi	v0.2d, #0xffffffffffffffff
  40af34:	str	d0, [x19, #64]
  40af38:	cbz	x20, 40b640 <wcrtomb@plt+0x8dd0>
  40af3c:	mov	x13, xzr
  40af40:	mov	w10, #0xffffffff            	// #-1
  40af44:	mov	w14, #0xa                   	// #10
  40af48:	mov	w15, #0x8030                	// #32816
  40af4c:	mov	w16, #0x8000                	// #32768
  40af50:	b	40b134 <wcrtomb@plt+0x88c4>
  40af54:	tbz	w23, #0, 40b170 <wcrtomb@plt+0x8900>
  40af58:	mov	w22, #0x5b                  	// #91
  40af5c:	b	40ad38 <wcrtomb@plt+0x84c8>
  40af60:	ldr	x8, [x19, #448]
  40af64:	tbnz	w8, #10, 40b100 <wcrtomb@plt+0x8890>
  40af68:	mov	w9, #0x1                   	// #1
  40af6c:	and	w10, w23, #0x1
  40af70:	bic	w8, w9, w8, lsr #15
  40af74:	cmp	w8, w10
  40af78:	b.ne	40b100 <wcrtomb@plt+0x8890>  // b.any
  40af7c:	strb	w9, [x19, #120]
  40af80:	mov	w21, #0x106                 	// #262
  40af84:	b	40ad48 <wcrtomb@plt+0x84d8>
  40af88:	tbz	w23, #0, 40b108 <wcrtomb@plt+0x8898>
  40af8c:	ldrb	w8, [x19, #450]
  40af90:	tbnz	w8, #3, 40b108 <wcrtomb@plt+0x8898>
  40af94:	mov	w21, #0x10f                 	// #271
  40af98:	b	40ad48 <wcrtomb@plt+0x84d8>
  40af9c:	ldr	x8, [x19, #448]
  40afa0:	tbnz	w8, #10, 40afbc <wcrtomb@plt+0x874c>
  40afa4:	ubfx	x9, x8, #1, #1
  40afa8:	eor	w9, w23, w9
  40afac:	tbnz	w9, #0, 40afbc <wcrtomb@plt+0x874c>
  40afb0:	tbnz	w8, #4, 40b4e4 <wcrtomb@plt+0x8c74>
  40afb4:	ldrb	w8, [x19, #120]
  40afb8:	cbz	w8, 40b4e4 <wcrtomb@plt+0x8c74>
  40afbc:	mov	w22, #0x2b                  	// #43
  40afc0:	b	40ad38 <wcrtomb@plt+0x84c8>
  40afc4:	tbz	w23, #0, 40b188 <wcrtomb@plt+0x8918>
  40afc8:	mov	w22, #0x2e                  	// #46
  40afcc:	b	40ad38 <wcrtomb@plt+0x84c8>
  40afd0:	ldr	x8, [x19, #448]
  40afd4:	mov	w10, #0x1                   	// #1
  40afd8:	and	w9, w23, #0x1
  40afdc:	bic	w10, w10, w8, lsr #13
  40afe0:	cmp	w10, w9
  40afe4:	b.ne	40aff4 <wcrtomb@plt+0x8784>  // b.any
  40afe8:	ldr	x9, [x19, #56]
  40afec:	tbz	w8, #17, 40b280 <wcrtomb@plt+0x8a10>
  40aff0:	cbnz	x9, 40b280 <wcrtomb@plt+0x8a10>
  40aff4:	mov	w22, #0x29                  	// #41
  40aff8:	b	40ad38 <wcrtomb@plt+0x84c8>
  40affc:	ldr	w9, [x19, #448]
  40b000:	mov	w8, #0x1                   	// #1
  40b004:	and	w10, w23, #0x1
  40b008:	bic	w9, w8, w9, lsr #13
  40b00c:	cmp	w9, w10
  40b010:	b.ne	40b1b0 <wcrtomb@plt+0x8940>  // b.any
  40b014:	ldr	x9, [x19, #56]
  40b018:	strb	w8, [x19, #120]
  40b01c:	mov	w21, #0x107                 	// #263
  40b020:	add	x8, x9, #0x1
  40b024:	str	x8, [x19, #56]
  40b028:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b02c:	tbnz	w23, #0, 40b040 <wcrtomb@plt+0x87d0>
  40b030:	ldrb	w8, [x19, #448]
  40b034:	tbnz	w8, #4, 40b278 <wcrtomb@plt+0x8a08>
  40b038:	ldrb	w8, [x19, #120]
  40b03c:	cbz	w8, 40b278 <wcrtomb@plt+0x8a08>
  40b040:	mov	w22, #0x2a                  	// #42
  40b044:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b048:	tbz	w23, #0, 40b054 <wcrtomb@plt+0x87e4>
  40b04c:	ldrb	w8, [x19, #450]
  40b050:	tbz	w8, #3, 40b238 <wcrtomb@plt+0x89c8>
  40b054:	mov	w22, #0x27                  	// #39
  40b058:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b05c:	tbz	w23, #0, 40b110 <wcrtomb@plt+0x88a0>
  40b060:	ldrb	w8, [x19, #450]
  40b064:	tbnz	w8, #3, 40b110 <wcrtomb@plt+0x88a0>
  40b068:	mov	w21, #0x111                 	// #273
  40b06c:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b070:	tbz	w23, #0, 40b1b8 <wcrtomb@plt+0x8948>
  40b074:	mov	w22, #0x24                  	// #36
  40b078:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b07c:	ldr	x8, [x19, #448]
  40b080:	and	x8, x8, #0xc00
  40b084:	cmp	x8, #0x800
  40b088:	cset	w8, ne  // ne = any
  40b08c:	orr	w8, w23, w8
  40b090:	tbz	w8, #0, 40b240 <wcrtomb@plt+0x89d0>
  40b094:	mov	w22, #0xa                   	// #10
  40b098:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b09c:	ldr	x8, [x19, #448]
  40b0a0:	tbnz	w8, #10, 40b0bc <wcrtomb@plt+0x884c>
  40b0a4:	ubfx	x9, x8, #1, #1
  40b0a8:	eor	w9, w23, w9
  40b0ac:	tbnz	w9, #0, 40b0bc <wcrtomb@plt+0x884c>
  40b0b0:	tbnz	w8, #4, 40b4ec <wcrtomb@plt+0x8c7c>
  40b0b4:	ldrb	w8, [x19, #120]
  40b0b8:	cbz	w8, 40b4ec <wcrtomb@plt+0x8c7c>
  40b0bc:	mov	w22, #0x3f                  	// #63
  40b0c0:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b0c4:	tbz	w23, #0, 40b118 <wcrtomb@plt+0x88a8>
  40b0c8:	ldrb	w8, [x19, #450]
  40b0cc:	tbnz	w8, #3, 40b118 <wcrtomb@plt+0x88a8>
  40b0d0:	mov	w21, #0x10e                 	// #270
  40b0d4:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b0d8:	tbz	w23, #0, 40b250 <wcrtomb@plt+0x89e0>
  40b0dc:	mov	w22, #0x5e                  	// #94
  40b0e0:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b0e4:	tbz	w23, #0, 40b0f0 <wcrtomb@plt+0x8880>
  40b0e8:	ldrb	w8, [x19, #450]
  40b0ec:	tbz	w8, #3, 40b270 <wcrtomb@plt+0x8a00>
  40b0f0:	mov	w22, #0x60                  	// #96
  40b0f4:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b0f8:	mov	w22, #0x62                  	// #98
  40b0fc:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b100:	mov	w22, #0x7c                  	// #124
  40b104:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b108:	mov	w22, #0x3e                  	// #62
  40b10c:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b110:	mov	w22, #0x42                  	// #66
  40b114:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b118:	mov	w22, #0x3c                  	// #60
  40b11c:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b120:	mov	w10, w0
  40b124:	add	x13, x13, #0x1
  40b128:	cmp	x20, x13
  40b12c:	str	w10, [x19, #64]
  40b130:	b.eq	40b6e0 <wcrtomb@plt+0x8e70>  // b.none
  40b134:	add	x17, x12, x13
  40b138:	ldrb	w18, [x17, #1]
  40b13c:	sub	w0, w18, #0x30
  40b140:	cmp	w0, #0x9
  40b144:	b.hi	40b650 <wcrtomb@plt+0x8de0>  // b.pmore
  40b148:	tbnz	w10, #31, 40b120 <wcrtomb@plt+0x88b0>
  40b14c:	madd	w10, w10, w14, w18
  40b150:	sub	w17, w10, #0x30
  40b154:	cmp	w10, w15
  40b158:	csel	w10, w16, w17, gt
  40b15c:	add	x13, x13, #0x1
  40b160:	cmp	x20, x13
  40b164:	str	w10, [x19, #64]
  40b168:	b.ne	40b134 <wcrtomb@plt+0x88c4>  // b.any
  40b16c:	b	40b6e0 <wcrtomb@plt+0x8e70>
  40b170:	mov	x0, x19
  40b174:	strb	wzr, [x19, #120]
  40b178:	bl	40e87c <wcrtomb@plt+0xc00c>
  40b17c:	mov	x21, x0
  40b180:	str	x0, [x19, #48]
  40b184:	b	40ad4c <wcrtomb@plt+0x84dc>
  40b188:	ldr	x20, [x19, #24]
  40b18c:	tbz	x20, #63, 40b8b8 <wcrtomb@plt+0x9048>
  40b190:	movi	v0.2d, #0xffffffffffffffff
  40b194:	stp	q0, q0, [sp]
  40b198:	ldr	x8, [x19, #448]
  40b19c:	tbnz	w8, #6, 40b4f4 <wcrtomb@plt+0x8c84>
  40b1a0:	mov	x9, #0xfffffffffffffbff    	// #-1025
  40b1a4:	str	x9, [sp]
  40b1a8:	mov	x9, #0xfffffffffffffbfe    	// #-1026
  40b1ac:	b	40b4f8 <wcrtomb@plt+0x8c88>
  40b1b0:	mov	w22, #0x28                  	// #40
  40b1b4:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b1b8:	cbz	x20, 40b238 <wcrtomb@plt+0x89c8>
  40b1bc:	ldr	x8, [x19, #448]
  40b1c0:	tbnz	w8, #3, 40b238 <wcrtomb@plt+0x89c8>
  40b1c4:	mov	w10, #0x1                   	// #1
  40b1c8:	bic	w13, w10, w8, lsr #13
  40b1cc:	cmp	x20, x13
  40b1d0:	add	x9, x12, #0x1
  40b1d4:	b.le	40b1f4 <wcrtomb@plt+0x8984>
  40b1d8:	ldrb	w12, [x9]
  40b1dc:	cmp	w12, #0x5c
  40b1e0:	cset	w12, eq  // eq = none
  40b1e4:	and	x12, x13, x12
  40b1e8:	ldrb	w12, [x9, x12]
  40b1ec:	cmp	w12, #0x29
  40b1f0:	b.eq	40b238 <wcrtomb@plt+0x89c8>  // b.none
  40b1f4:	bic	w10, w10, w8, lsr #15
  40b1f8:	cmp	x20, x10
  40b1fc:	b.le	40b21c <wcrtomb@plt+0x89ac>
  40b200:	ldrb	w12, [x9]
  40b204:	cmp	w12, #0x5c
  40b208:	cset	w12, eq  // eq = none
  40b20c:	and	x10, x10, x12
  40b210:	ldrb	w10, [x9, x10]
  40b214:	cmp	w10, #0x7c
  40b218:	b.eq	40b238 <wcrtomb@plt+0x89c8>  // b.none
  40b21c:	cmp	x11, #0x2
  40b220:	mov	w22, #0x24                  	// #36
  40b224:	b.lt	40ad38 <wcrtomb@plt+0x84c8>  // b.tstop
  40b228:	tbz	w8, #11, 40ad38 <wcrtomb@plt+0x84c8>
  40b22c:	ldrb	w8, [x9]
  40b230:	cmp	w8, #0xa
  40b234:	b.ne	40b074 <wcrtomb@plt+0x8804>  // b.any
  40b238:	mov	w21, #0x10d                 	// #269
  40b23c:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b240:	mov	w8, #0x1                   	// #1
  40b244:	mov	w21, #0x106                 	// #262
  40b248:	strb	w8, [x19, #120]
  40b24c:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b250:	ldrb	w8, [x19, #448]
  40b254:	tbnz	w8, #3, 40b270 <wcrtomb@plt+0x8a00>
  40b258:	ldr	x8, [x19, #48]
  40b25c:	sub	x9, x8, #0x106
  40b260:	cmp	x9, #0x2
  40b264:	b.cc	40b270 <wcrtomb@plt+0x8a00>  // b.lo, b.ul, b.last
  40b268:	cmn	x8, #0x1
  40b26c:	b.ne	40b0dc <wcrtomb@plt+0x886c>  // b.any
  40b270:	mov	w21, #0x10c                 	// #268
  40b274:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b278:	mov	w21, #0x102                 	// #258
  40b27c:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b280:	sub	x8, x9, #0x1
  40b284:	strb	wzr, [x19, #120]
  40b288:	mov	w21, #0x108                 	// #264
  40b28c:	str	x8, [x19, #56]
  40b290:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b294:	mov	x8, xzr
  40b298:	movi	v0.2d, #0x0
  40b29c:	add	x9, x19, #0x1cc
  40b2a0:	mov	w10, #0x1                   	// #1
  40b2a4:	mov	x11, sp
  40b2a8:	stp	q0, q0, [sp]
  40b2ac:	b	40b2bc <wcrtomb@plt+0x8a4c>
  40b2b0:	add	x8, x8, #0x1
  40b2b4:	cmp	x8, #0x100
  40b2b8:	b.eq	40b2e4 <wcrtomb@plt+0x8a74>  // b.none
  40b2bc:	ldrb	w12, [x9, x8]
  40b2c0:	cmp	w12, #0x2
  40b2c4:	b.ne	40b2b0 <wcrtomb@plt+0x8a40>  // b.any
  40b2c8:	ubfx	x12, x8, #6, #26
  40b2cc:	lsl	x12, x12, #3
  40b2d0:	ldr	x13, [x11, x12]
  40b2d4:	lsl	x14, x10, x8
  40b2d8:	orr	x13, x13, x14
  40b2dc:	str	x13, [x11, x12]
  40b2e0:	b	40b2b0 <wcrtomb@plt+0x8a40>
  40b2e4:	cmp	w22, #0x57
  40b2e8:	b.ne	40b2fc <wcrtomb@plt+0x8a8c>  // b.any
  40b2ec:	ldp	q0, q1, [sp]
  40b2f0:	mvn	v0.16b, v0.16b
  40b2f4:	mvn	v1.16b, v1.16b
  40b2f8:	stp	q0, q1, [sp]
  40b2fc:	ldr	x9, [x19, #8]
  40b300:	strb	wzr, [x19, #120]
  40b304:	cmp	x9, #0x0
  40b308:	b.le	40b5f8 <wcrtomb@plt+0x8d88>
  40b30c:	ldr	x0, [x19]
  40b310:	ldp	x8, x10, [sp]
  40b314:	ldp	x11, x12, [sp, #16]
  40b318:	mov	x20, xzr
  40b31c:	add	x13, x0, #0x10
  40b320:	ldp	x14, x15, [x13, #-16]
  40b324:	ldp	x16, x17, [x13]
  40b328:	eor	x14, x14, x8
  40b32c:	eor	x15, x15, x10
  40b330:	eor	x16, x16, x11
  40b334:	orr	x14, x15, x14
  40b338:	orr	x14, x14, x16
  40b33c:	eor	x15, x17, x12
  40b340:	orr	x14, x14, x15
  40b344:	cbz	x14, 40b854 <wcrtomb@plt+0x8fe4>
  40b348:	add	x20, x20, #0x1
  40b34c:	cmp	x9, x20
  40b350:	add	x13, x13, #0x20
  40b354:	b.ne	40b320 <wcrtomb@plt+0x8ab0>  // b.any
  40b358:	mov	x20, x9
  40b35c:	b	40b600 <wcrtomb@plt+0x8d90>
  40b360:	movi	v0.2d, #0x0
  40b364:	stp	q0, q0, [sp]
  40b368:	bl	402610 <__ctype_b_loc@plt>
  40b36c:	ldr	x9, [x0]
  40b370:	mov	x8, xzr
  40b374:	mov	w10, #0x1                   	// #1
  40b378:	mov	x11, sp
  40b37c:	b	40b38c <wcrtomb@plt+0x8b1c>
  40b380:	add	x8, x8, #0x1
  40b384:	cmp	x8, #0x100
  40b388:	b.eq	40b3b0 <wcrtomb@plt+0x8b40>  // b.none
  40b38c:	ldrh	w12, [x9, x8, lsl #1]
  40b390:	tbz	w12, #13, 40b380 <wcrtomb@plt+0x8b10>
  40b394:	ubfx	x12, x8, #6, #26
  40b398:	lsl	x12, x12, #3
  40b39c:	ldr	x13, [x11, x12]
  40b3a0:	lsl	x14, x10, x8
  40b3a4:	orr	x13, x13, x14
  40b3a8:	str	x13, [x11, x12]
  40b3ac:	b	40b380 <wcrtomb@plt+0x8b10>
  40b3b0:	cmp	w22, #0x53
  40b3b4:	b.ne	40b3c8 <wcrtomb@plt+0x8b58>  // b.any
  40b3b8:	ldp	q0, q1, [sp]
  40b3bc:	mvn	v0.16b, v0.16b
  40b3c0:	mvn	v1.16b, v1.16b
  40b3c4:	stp	q0, q1, [sp]
  40b3c8:	ldr	x9, [x19, #8]
  40b3cc:	strb	wzr, [x19, #120]
  40b3d0:	cmp	x9, #0x0
  40b3d4:	b.le	40b428 <wcrtomb@plt+0x8bb8>
  40b3d8:	ldr	x0, [x19]
  40b3dc:	ldp	x8, x10, [sp]
  40b3e0:	ldp	x11, x12, [sp, #16]
  40b3e4:	mov	x20, xzr
  40b3e8:	add	x13, x0, #0x10
  40b3ec:	ldp	x14, x15, [x13, #-16]
  40b3f0:	ldp	x16, x17, [x13]
  40b3f4:	eor	x14, x14, x8
  40b3f8:	eor	x15, x15, x10
  40b3fc:	eor	x16, x16, x11
  40b400:	orr	x14, x15, x14
  40b404:	orr	x14, x14, x16
  40b408:	eor	x15, x17, x12
  40b40c:	orr	x14, x14, x15
  40b410:	cbz	x14, 40b854 <wcrtomb@plt+0x8fe4>
  40b414:	add	x20, x20, #0x1
  40b418:	cmp	x9, x20
  40b41c:	add	x13, x13, #0x20
  40b420:	b.ne	40b3ec <wcrtomb@plt+0x8b7c>  // b.any
  40b424:	b	40ae44 <wcrtomb@plt+0x85d4>
  40b428:	ldr	x0, [x19]
  40b42c:	mov	x20, xzr
  40b430:	ldr	x8, [x19, #16]
  40b434:	cmp	x8, x9
  40b438:	b.gt	40b840 <wcrtomb@plt+0x8fd0>
  40b43c:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40b440:	adds	x10, x8, x8, asr #1
  40b444:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40b448:	movk	x9, #0x7fff, lsl #48
  40b44c:	csel	x21, x11, x10, vs
  40b450:	cmp	x21, x9
  40b454:	csel	x10, x21, x9, lt  // lt = tstop
  40b458:	tbnz	x10, #63, 40b470 <wcrtomb@plt+0x8c00>
  40b45c:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40b460:	cmp	x10, x11
  40b464:	b.le	40b488 <wcrtomb@plt+0x8c18>
  40b468:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40b46c:	b	40b498 <wcrtomb@plt+0x8c28>
  40b470:	cmn	x10, #0x1
  40b474:	b.eq	40b494 <wcrtomb@plt+0x8c24>  // b.none
  40b478:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40b47c:	sdiv	x11, x11, x10
  40b480:	cmp	x11, #0x20
  40b484:	b.lt	40b468 <wcrtomb@plt+0x8bf8>  // b.tstop
  40b488:	lsl	x1, x10, #5
  40b48c:	cmp	x1, #0x7f
  40b490:	b.gt	40b4b4 <wcrtomb@plt+0x8c44>
  40b494:	mov	w10, #0x80                  	// #128
  40b498:	lsr	x21, x10, #5
  40b49c:	and	x1, x10, #0x7fffffffffffffe0
  40b4a0:	cbnz	x0, 40b4b8 <wcrtomb@plt+0x8c48>
  40b4a4:	str	xzr, [x19, #16]
  40b4a8:	cmp	x21, x8
  40b4ac:	b.gt	40b834 <wcrtomb@plt+0x8fc4>
  40b4b0:	b	40b4c0 <wcrtomb@plt+0x8c50>
  40b4b4:	cbz	x0, 40b4a4 <wcrtomb@plt+0x8c34>
  40b4b8:	cmp	x21, x8
  40b4bc:	b.gt	40b834 <wcrtomb@plt+0x8fc4>
  40b4c0:	adds	x21, x8, #0x1
  40b4c4:	b.vs	40b8ec <wcrtomb@plt+0x907c>
  40b4c8:	cmp	x21, x9
  40b4cc:	b.gt	40b8ec <wcrtomb@plt+0x907c>
  40b4d0:	tbnz	x21, #63, 40b818 <wcrtomb@plt+0x8fa8>
  40b4d4:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40b4d8:	cmp	x21, x8
  40b4dc:	b.le	40b830 <wcrtomb@plt+0x8fc0>
  40b4e0:	b	40b8ec <wcrtomb@plt+0x907c>
  40b4e4:	mov	w21, #0x103                 	// #259
  40b4e8:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b4ec:	mov	w21, #0x101                 	// #257
  40b4f0:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b4f4:	mov	x9, #0xfffffffffffffffe    	// #-2
  40b4f8:	tbz	w8, #7, 40b500 <wcrtomb@plt+0x8c90>
  40b4fc:	str	x9, [sp]
  40b500:	ldrb	w8, [x19, #1048]
  40b504:	cbz	w8, 40b550 <wcrtomb@plt+0x8ce0>
  40b508:	mov	x8, xzr
  40b50c:	add	x9, x19, #0x51c
  40b510:	mov	w10, #0x1                   	// #1
  40b514:	mov	x11, sp
  40b518:	b	40b528 <wcrtomb@plt+0x8cb8>
  40b51c:	add	x8, x8, #0x1
  40b520:	cmp	x8, #0x100
  40b524:	b.eq	40b550 <wcrtomb@plt+0x8ce0>  // b.none
  40b528:	ldr	w12, [x9, x8, lsl #2]
  40b52c:	cmn	w12, #0x1
  40b530:	b.ne	40b51c <wcrtomb@plt+0x8cac>  // b.any
  40b534:	ubfx	x12, x8, #6, #26
  40b538:	lsl	x12, x12, #3
  40b53c:	ldr	x13, [x11, x12]
  40b540:	lsl	x14, x10, x8
  40b544:	bic	x13, x13, x14
  40b548:	str	x13, [x11, x12]
  40b54c:	b	40b51c <wcrtomb@plt+0x8cac>
  40b550:	ldr	x9, [x19, #8]
  40b554:	cmp	x9, #0x0
  40b558:	b.le	40b5b0 <wcrtomb@plt+0x8d40>
  40b55c:	ldr	x0, [x19]
  40b560:	ldp	x8, x10, [sp]
  40b564:	ldp	x11, x12, [sp, #16]
  40b568:	mov	x20, xzr
  40b56c:	add	x13, x0, #0x10
  40b570:	ldp	x14, x15, [x13, #-16]
  40b574:	ldp	x16, x17, [x13]
  40b578:	eor	x14, x14, x8
  40b57c:	eor	x15, x15, x10
  40b580:	eor	x16, x16, x11
  40b584:	orr	x14, x15, x14
  40b588:	orr	x14, x14, x16
  40b58c:	eor	x15, x17, x12
  40b590:	orr	x14, x14, x15
  40b594:	cbz	x14, 40b8b4 <wcrtomb@plt+0x9044>
  40b598:	add	x20, x20, #0x1
  40b59c:	cmp	x9, x20
  40b5a0:	add	x13, x13, #0x20
  40b5a4:	b.ne	40b570 <wcrtomb@plt+0x8d00>  // b.any
  40b5a8:	mov	x20, x9
  40b5ac:	b	40b5b8 <wcrtomb@plt+0x8d48>
  40b5b0:	ldr	x0, [x19]
  40b5b4:	mov	x20, xzr
  40b5b8:	ldr	x8, [x19, #16]
  40b5bc:	cmp	x8, x9
  40b5c0:	b.gt	40b8a0 <wcrtomb@plt+0x9030>
  40b5c4:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40b5c8:	adds	x10, x8, x8, asr #1
  40b5cc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40b5d0:	movk	x9, #0x7fff, lsl #48
  40b5d4:	csel	x21, x11, x10, vs
  40b5d8:	cmp	x21, x9
  40b5dc:	csel	x10, x21, x9, lt  // lt = tstop
  40b5e0:	tbnz	x10, #63, 40b740 <wcrtomb@plt+0x8ed0>
  40b5e4:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40b5e8:	cmp	x10, x11
  40b5ec:	b.le	40b758 <wcrtomb@plt+0x8ee8>
  40b5f0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40b5f4:	b	40b768 <wcrtomb@plt+0x8ef8>
  40b5f8:	ldr	x0, [x19]
  40b5fc:	mov	x20, xzr
  40b600:	ldr	x8, [x19, #16]
  40b604:	cmp	x8, x9
  40b608:	b.gt	40b840 <wcrtomb@plt+0x8fd0>
  40b60c:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40b610:	adds	x10, x8, x8, asr #1
  40b614:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40b618:	movk	x9, #0x7fff, lsl #48
  40b61c:	csel	x21, x11, x10, vs
  40b620:	cmp	x21, x9
  40b624:	csel	x10, x21, x9, lt  // lt = tstop
  40b628:	tbnz	x10, #63, 40b7b4 <wcrtomb@plt+0x8f44>
  40b62c:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40b630:	cmp	x10, x11
  40b634:	b.le	40b7cc <wcrtomb@plt+0x8f5c>
  40b638:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40b63c:	b	40b7dc <wcrtomb@plt+0x8f6c>
  40b640:	add	x11, x12, #0x1
  40b644:	mov	w12, #0xffffffff            	// #-1
  40b648:	mov	w10, #0xffffffff            	// #-1
  40b64c:	b	40b6f8 <wcrtomb@plt+0x8e88>
  40b650:	cmp	w18, #0x2c
  40b654:	b.ne	40b6ec <wcrtomb@plt+0x8e7c>  // b.any
  40b658:	tbz	w10, #31, 40b664 <wcrtomb@plt+0x8df4>
  40b65c:	mov	w10, wzr
  40b660:	str	wzr, [x19, #64]
  40b664:	sub	x14, x11, #0x2
  40b668:	cmp	x14, x13
  40b66c:	b.eq	40b6e0 <wcrtomb@plt+0x8e70>  // b.none
  40b670:	sub	x11, x11, x13
  40b674:	add	x16, x12, x13
  40b678:	mov	w12, #0xffffffff            	// #-1
  40b67c:	mov	w13, #0xa                   	// #10
  40b680:	mov	w14, #0x8030                	// #32816
  40b684:	sub	x15, x11, #0x2
  40b688:	add	x11, x16, #0x2
  40b68c:	mov	w16, #0x8000                	// #32768
  40b690:	b	40b6a8 <wcrtomb@plt+0x8e38>
  40b694:	mov	w12, w18
  40b698:	subs	x15, x15, #0x1
  40b69c:	add	x11, x11, #0x1
  40b6a0:	str	w12, [x19, #68]
  40b6a4:	b.eq	40b6e4 <wcrtomb@plt+0x8e74>  // b.none
  40b6a8:	ldrb	w17, [x11]
  40b6ac:	sub	w18, w17, #0x30
  40b6b0:	cmp	w18, #0x9
  40b6b4:	b.hi	40b6f8 <wcrtomb@plt+0x8e88>  // b.pmore
  40b6b8:	tbnz	w12, #31, 40b694 <wcrtomb@plt+0x8e24>
  40b6bc:	madd	w12, w12, w13, w17
  40b6c0:	sub	w17, w12, #0x30
  40b6c4:	cmp	w12, w14
  40b6c8:	csel	w12, w16, w17, gt
  40b6cc:	subs	x15, x15, #0x1
  40b6d0:	add	x11, x11, #0x1
  40b6d4:	str	w12, [x19, #68]
  40b6d8:	b.ne	40b6a8 <wcrtomb@plt+0x8e38>  // b.any
  40b6dc:	b	40b6e4 <wcrtomb@plt+0x8e74>
  40b6e0:	mov	w12, #0xffffffff            	// #-1
  40b6e4:	mov	x11, x9
  40b6e8:	b	40b6f8 <wcrtomb@plt+0x8e88>
  40b6ec:	add	x11, x17, #0x1
  40b6f0:	str	w10, [x19, #68]
  40b6f4:	mov	w12, w10
  40b6f8:	tbz	w23, #0, 40b710 <wcrtomb@plt+0x8ea0>
  40b6fc:	cmp	x11, x9
  40b700:	b.eq	40b734 <wcrtomb@plt+0x8ec4>  // b.none
  40b704:	ldrb	w13, [x11], #1
  40b708:	cmp	w13, #0x5c
  40b70c:	b.ne	40b734 <wcrtomb@plt+0x8ec4>  // b.any
  40b710:	cmp	x11, x9
  40b714:	b.eq	40b734 <wcrtomb@plt+0x8ec4>  // b.none
  40b718:	ldrb	w13, [x11], #1
  40b71c:	cmp	w13, #0x7d
  40b720:	b.ne	40b734 <wcrtomb@plt+0x8ec4>  // b.any
  40b724:	tbnz	w10, #31, 40b734 <wcrtomb@plt+0x8ec4>
  40b728:	tbnz	w12, #31, 40b85c <wcrtomb@plt+0x8fec>
  40b72c:	cmp	w10, w12
  40b730:	b.le	40b85c <wcrtomb@plt+0x8fec>
  40b734:	tbz	w8, #21, 40b8f0 <wcrtomb@plt+0x9080>
  40b738:	mov	w22, #0x7b                  	// #123
  40b73c:	b	40ad38 <wcrtomb@plt+0x84c8>
  40b740:	cmn	x10, #0x1
  40b744:	b.eq	40b764 <wcrtomb@plt+0x8ef4>  // b.none
  40b748:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40b74c:	sdiv	x11, x11, x10
  40b750:	cmp	x11, #0x20
  40b754:	b.lt	40b5f0 <wcrtomb@plt+0x8d80>  // b.tstop
  40b758:	lsl	x1, x10, #5
  40b75c:	cmp	x1, #0x7f
  40b760:	b.gt	40b784 <wcrtomb@plt+0x8f14>
  40b764:	mov	w10, #0x80                  	// #128
  40b768:	lsr	x21, x10, #5
  40b76c:	and	x1, x10, #0x7fffffffffffffe0
  40b770:	cbnz	x0, 40b788 <wcrtomb@plt+0x8f18>
  40b774:	str	xzr, [x19, #16]
  40b778:	cmp	x21, x8
  40b77c:	b.gt	40b894 <wcrtomb@plt+0x9024>
  40b780:	b	40b790 <wcrtomb@plt+0x8f20>
  40b784:	cbz	x0, 40b774 <wcrtomb@plt+0x8f04>
  40b788:	cmp	x21, x8
  40b78c:	b.gt	40b894 <wcrtomb@plt+0x9024>
  40b790:	adds	x21, x8, #0x1
  40b794:	b.vs	40b8ec <wcrtomb@plt+0x907c>
  40b798:	cmp	x21, x9
  40b79c:	b.gt	40b8ec <wcrtomb@plt+0x907c>
  40b7a0:	tbnz	x21, #63, 40b878 <wcrtomb@plt+0x9008>
  40b7a4:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40b7a8:	cmp	x21, x8
  40b7ac:	b.le	40b890 <wcrtomb@plt+0x9020>
  40b7b0:	b	40b8ec <wcrtomb@plt+0x907c>
  40b7b4:	cmn	x10, #0x1
  40b7b8:	b.eq	40b7d8 <wcrtomb@plt+0x8f68>  // b.none
  40b7bc:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40b7c0:	sdiv	x11, x11, x10
  40b7c4:	cmp	x11, #0x20
  40b7c8:	b.lt	40b638 <wcrtomb@plt+0x8dc8>  // b.tstop
  40b7cc:	lsl	x1, x10, #5
  40b7d0:	cmp	x1, #0x7f
  40b7d4:	b.gt	40b7f8 <wcrtomb@plt+0x8f88>
  40b7d8:	mov	w10, #0x80                  	// #128
  40b7dc:	lsr	x21, x10, #5
  40b7e0:	and	x1, x10, #0x7fffffffffffffe0
  40b7e4:	cbnz	x0, 40b7fc <wcrtomb@plt+0x8f8c>
  40b7e8:	str	xzr, [x19, #16]
  40b7ec:	cmp	x21, x8
  40b7f0:	b.gt	40b834 <wcrtomb@plt+0x8fc4>
  40b7f4:	b	40b804 <wcrtomb@plt+0x8f94>
  40b7f8:	cbz	x0, 40b7e8 <wcrtomb@plt+0x8f78>
  40b7fc:	cmp	x21, x8
  40b800:	b.gt	40b834 <wcrtomb@plt+0x8fc4>
  40b804:	adds	x21, x8, #0x1
  40b808:	b.vs	40b8ec <wcrtomb@plt+0x907c>
  40b80c:	cmp	x21, x9
  40b810:	b.gt	40b8ec <wcrtomb@plt+0x907c>
  40b814:	tbz	x21, #63, 40b4d4 <wcrtomb@plt+0x8c64>
  40b818:	cmn	x21, #0x1
  40b81c:	b.eq	40b830 <wcrtomb@plt+0x8fc0>  // b.none
  40b820:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40b824:	sdiv	x8, x8, x21
  40b828:	cmp	x8, #0x20
  40b82c:	b.lt	40b8ec <wcrtomb@plt+0x907c>  // b.tstop
  40b830:	lsl	x1, x21, #5
  40b834:	bl	417310 <wcrtomb@plt+0x14aa0>
  40b838:	ldr	x9, [x19, #8]
  40b83c:	str	x21, [x19, #16]
  40b840:	add	x8, x9, #0x1
  40b844:	stp	x0, x8, [x19]
  40b848:	ldp	q1, q0, [sp]
  40b84c:	add	x8, x0, x20, lsl #5
  40b850:	stp	q1, q0, [x8]
  40b854:	add	x21, x20, #0x114
  40b858:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b85c:	cmp	w12, #0x8, lsl #12
  40b860:	b.ge	40b908 <wcrtomb@plt+0x9098>  // b.tcont
  40b864:	sub	x8, x9, x11
  40b868:	strb	wzr, [x19, #120]
  40b86c:	mov	w21, #0x104                 	// #260
  40b870:	stp	x11, x8, [x19, #32]
  40b874:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b878:	cmn	x21, #0x1
  40b87c:	b.eq	40b890 <wcrtomb@plt+0x9020>  // b.none
  40b880:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40b884:	sdiv	x8, x8, x21
  40b888:	cmp	x8, #0x20
  40b88c:	b.lt	40b8ec <wcrtomb@plt+0x907c>  // b.tstop
  40b890:	lsl	x1, x21, #5
  40b894:	bl	417310 <wcrtomb@plt+0x14aa0>
  40b898:	ldr	x9, [x19, #8]
  40b89c:	str	x21, [x19, #16]
  40b8a0:	add	x8, x9, #0x1
  40b8a4:	stp	x0, x8, [x19]
  40b8a8:	ldp	q1, q0, [sp]
  40b8ac:	add	x8, x0, x20, lsl #5
  40b8b0:	stp	q1, q0, [x8]
  40b8b4:	str	x20, [x19, #24]
  40b8b8:	ldrb	w8, [x19, #1048]
  40b8bc:	add	x9, x20, #0x114
  40b8c0:	strb	wzr, [x19, #120]
  40b8c4:	cmp	w8, #0x0
  40b8c8:	mov	w8, #0x10a                 	// #266
  40b8cc:	csel	x21, x9, x8, eq  // eq = none
  40b8d0:	b	40ad48 <wcrtomb@plt+0x84d8>
  40b8d4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40b8d8:	add	x1, x1, #0x7da
  40b8dc:	mov	w2, #0x5                   	// #5
  40b8e0:	mov	x0, xzr
  40b8e4:	bl	402740 <dcgettext@plt>
  40b8e8:	bl	40298c <wcrtomb@plt+0x11c>
  40b8ec:	bl	41757c <wcrtomb@plt+0x14d0c>
  40b8f0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40b8f4:	add	x1, x1, #0x7ee
  40b8f8:	mov	w2, #0x5                   	// #5
  40b8fc:	mov	x0, xzr
  40b900:	bl	402740 <dcgettext@plt>
  40b904:	bl	40298c <wcrtomb@plt+0x11c>
  40b908:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40b90c:	add	x1, x1, #0x806
  40b910:	mov	w2, #0x5                   	// #5
  40b914:	mov	x0, xzr
  40b918:	bl	402740 <dcgettext@plt>
  40b91c:	bl	40298c <wcrtomb@plt+0x11c>
  40b920:	ldr	x6, [x0, #1040]
  40b924:	and	w3, w3, #0x1
  40b928:	br	x6
  40b92c:	ldr	x0, [x0, #288]
  40b930:	ret
  40b934:	ldrb	w0, [x0, #192]
  40b938:	ret
  40b93c:	sub	sp, sp, #0x70
  40b940:	stp	x22, x21, [sp, #80]
  40b944:	stp	x20, x19, [sp, #96]
  40b948:	mov	w22, w3
  40b94c:	mov	x20, x2
  40b950:	stp	x29, x30, [sp, #16]
  40b954:	stp	x28, x27, [sp, #32]
  40b958:	stp	x26, x25, [sp, #48]
  40b95c:	stp	x24, x23, [sp, #64]
  40b960:	add	x29, sp, #0x10
  40b964:	cbz	x0, 40b970 <wcrtomb@plt+0x9100>
  40b968:	mov	x2, x20
  40b96c:	bl	40a910 <wcrtomb@plt+0x80a0>
  40b970:	mov	w0, #0x920                 	// #2336
  40b974:	bl	417290 <wcrtomb@plt+0x14a20>
  40b978:	mov	w2, #0x920                 	// #2336
  40b97c:	mov	x1, x20
  40b980:	mov	x21, x0
  40b984:	bl	402210 <memcpy@plt>
  40b988:	adrp	x9, 40e000 <wcrtomb@plt+0xb790>
  40b98c:	add	x9, x9, #0x570
  40b990:	add	x8, x21, #0x118
  40b994:	movi	v0.2d, #0x0
  40b998:	strb	wzr, [x21, #1048]
  40b99c:	str	xzr, [x21, #320]
  40b9a0:	str	x9, [x21, #1040]
  40b9a4:	stp	q0, q0, [x8]
  40b9a8:	ldr	x8, [x21, #16]
  40b9ac:	stp	xzr, xzr, [x21, #344]
  40b9b0:	str	xzr, [x21, #336]
  40b9b4:	stp	q0, q0, [x21, #368]
  40b9b8:	lsr	x9, x8, #58
  40b9bc:	cbnz	x9, 40be24 <wcrtomb@plt+0x95b4>
  40b9c0:	lsl	x0, x8, #5
  40b9c4:	bl	417290 <wcrtomb@plt+0x14a20>
  40b9c8:	str	x0, [x21]
  40b9cc:	ldr	x8, [x20, #8]
  40b9d0:	cbz	x8, 40b9e0 <wcrtomb@plt+0x9170>
  40b9d4:	ldr	x1, [x20]
  40b9d8:	lsl	x2, x8, #5
  40b9dc:	bl	402210 <memcpy@plt>
  40b9e0:	ldr	x8, [x20, #152]
  40b9e4:	lsr	x9, x8, #59
  40b9e8:	cbnz	x9, 40be24 <wcrtomb@plt+0x95b4>
  40b9ec:	lsl	x0, x8, #4
  40b9f0:	bl	417290 <wcrtomb@plt+0x14a20>
  40b9f4:	str	x0, [x21, #144]
  40b9f8:	ldr	x8, [x20, #152]
  40b9fc:	lsl	x9, x8, #1
  40ba00:	cmp	x8, #0x0
  40ba04:	str	x9, [x21, #160]
  40ba08:	b.le	40bc7c <wcrtomb@plt+0x940c>
  40ba0c:	ldr	x9, [x20, #144]
  40ba10:	stur	w22, [x29, #-4]
  40ba14:	mov	x24, xzr
  40ba18:	mov	x19, xzr
  40ba1c:	mov	w23, wzr
  40ba20:	mov	w8, wzr
  40ba24:	mov	w26, #0x1                   	// #1
  40ba28:	mov	w16, #0x100                 	// #256
  40ba2c:	mov	w28, #0x301                 	// #769
  40ba30:	mov	w22, #0x102                 	// #258
  40ba34:	movi	v0.2d, #0xffffffffffffffff
  40ba38:	b	40ba70 <wcrtomb@plt+0x9200>
  40ba3c:	str	x10, [x0, x19, lsl #3]
  40ba40:	ldr	x10, [x9, x24, lsl #3]
  40ba44:	add	x19, x19, #0x1
  40ba48:	cmp	x10, #0x100
  40ba4c:	cset	w11, cc  // cc = lo, ul, last
  40ba50:	cmp	x10, #0x113
  40ba54:	cset	w10, gt
  40ba58:	orr	w10, w11, w10
  40ba5c:	orr	w23, w23, w10
  40ba60:	ldr	x10, [x20, #152]
  40ba64:	add	x24, x24, #0x1
  40ba68:	cmp	x24, x10
  40ba6c:	b.ge	40bc54 <wcrtomb@plt+0x93e4>  // b.tcont
  40ba70:	ldr	x10, [x9, x24, lsl #3]
  40ba74:	sub	x11, x10, #0x10a
  40ba78:	cmp	x11, #0x9
  40ba7c:	b.hi	40ba3c <wcrtomb@plt+0x91cc>  // b.pmore
  40ba80:	lsl	x12, x26, x11
  40ba84:	tst	x12, #0xf0
  40ba88:	b.eq	40baa4 <wcrtomb@plt+0x9234>  // b.none
  40ba8c:	ldrb	w11, [x20, #1048]
  40ba90:	cbz	w11, 40ba3c <wcrtomb@plt+0x91cc>
  40ba94:	add	x10, x19, #0x1
  40ba98:	str	x16, [x0, x19, lsl #3]
  40ba9c:	mov	x19, x10
  40baa0:	b	40ba60 <wcrtomb@plt+0x91f0>
  40baa4:	lsl	x11, x26, x11
  40baa8:	tst	x11, x28
  40baac:	b.eq	40ba3c <wcrtomb@plt+0x91cc>  // b.none
  40bab0:	ldr	x10, [x21, #8]
  40bab4:	cmp	x10, #0x0
  40bab8:	b.le	40bb08 <wcrtomb@plt+0x9298>
  40babc:	ldr	x8, [x21]
  40bac0:	mov	x25, xzr
  40bac4:	add	x11, x8, #0x10
  40bac8:	ldp	x12, x13, [x11, #-16]
  40bacc:	ldp	x14, x15, [x11]
  40bad0:	and	x12, x13, x12
  40bad4:	and	x12, x12, x14
  40bad8:	and	x12, x12, x15
  40badc:	cmn	x12, #0x1
  40bae0:	b.eq	40bc28 <wcrtomb@plt+0x93b8>  // b.none
  40bae4:	add	x25, x25, #0x1
  40bae8:	cmp	x10, x25
  40baec:	add	x11, x11, #0x20
  40baf0:	b.ne	40bac8 <wcrtomb@plt+0x9258>  // b.any
  40baf4:	mov	x25, x10
  40baf8:	ldr	x9, [x21, #16]
  40bafc:	cmp	x9, x10
  40bb00:	b.le	40bb1c <wcrtomb@plt+0x92ac>
  40bb04:	b	40bc10 <wcrtomb@plt+0x93a0>
  40bb08:	ldr	x8, [x21]
  40bb0c:	mov	x25, xzr
  40bb10:	ldr	x9, [x21, #16]
  40bb14:	cmp	x9, x10
  40bb18:	b.gt	40bc10 <wcrtomb@plt+0x93a0>
  40bb1c:	adds	x10, x9, x9, asr #1
  40bb20:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40bb24:	csel	x27, x11, x10, vs
  40bb28:	mov	x10, #0xfffffffffffffeeb    	// #-277
  40bb2c:	movk	x10, #0x7fff, lsl #48
  40bb30:	cmp	x27, x10
  40bb34:	mov	x12, #0xfffffffffffffeeb    	// #-277
  40bb38:	movk	x12, #0x7fff, lsl #48
  40bb3c:	csel	x10, x27, x10, lt  // lt = tstop
  40bb40:	tbnz	x10, #63, 40bb70 <wcrtomb@plt+0x9300>
  40bb44:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40bb48:	cmp	x10, x11
  40bb4c:	b.le	40bb88 <wcrtomb@plt+0x9318>
  40bb50:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40bb54:	lsr	x27, x10, #5
  40bb58:	and	x1, x10, #0x7fffffffffffffe0
  40bb5c:	cbnz	x8, 40bbac <wcrtomb@plt+0x933c>
  40bb60:	str	xzr, [x21, #16]
  40bb64:	cmp	x27, x9
  40bb68:	b.gt	40bbf4 <wcrtomb@plt+0x9384>
  40bb6c:	b	40bbb4 <wcrtomb@plt+0x9344>
  40bb70:	cmn	x10, #0x1
  40bb74:	b.eq	40bb94 <wcrtomb@plt+0x9324>  // b.none
  40bb78:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40bb7c:	sdiv	x11, x11, x10
  40bb80:	cmp	x11, #0x20
  40bb84:	b.lt	40bb50 <wcrtomb@plt+0x92e0>  // b.tstop
  40bb88:	lsl	x1, x10, #5
  40bb8c:	cmp	x1, #0x7f
  40bb90:	b.gt	40bba8 <wcrtomb@plt+0x9338>
  40bb94:	mov	w10, #0x80                  	// #128
  40bb98:	lsr	x27, x10, #5
  40bb9c:	and	x1, x10, #0x7fffffffffffffe0
  40bba0:	cbnz	x8, 40bbac <wcrtomb@plt+0x933c>
  40bba4:	b	40bb60 <wcrtomb@plt+0x92f0>
  40bba8:	cbz	x8, 40bb60 <wcrtomb@plt+0x92f0>
  40bbac:	cmp	x27, x9
  40bbb0:	b.gt	40bbf4 <wcrtomb@plt+0x9384>
  40bbb4:	adds	x27, x9, #0x1
  40bbb8:	b.vs	40be24 <wcrtomb@plt+0x95b4>
  40bbbc:	cmp	x27, x12
  40bbc0:	b.gt	40be24 <wcrtomb@plt+0x95b4>
  40bbc4:	tbnz	x27, #63, 40bbd8 <wcrtomb@plt+0x9368>
  40bbc8:	mov	x9, #0x3ffffffffffffff     	// #288230376151711743
  40bbcc:	cmp	x27, x9
  40bbd0:	b.le	40bbf0 <wcrtomb@plt+0x9380>
  40bbd4:	b	40be24 <wcrtomb@plt+0x95b4>
  40bbd8:	cmn	x27, #0x1
  40bbdc:	b.eq	40bbf0 <wcrtomb@plt+0x9380>  // b.none
  40bbe0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40bbe4:	sdiv	x9, x9, x27
  40bbe8:	cmp	x9, #0x20
  40bbec:	b.lt	40be24 <wcrtomb@plt+0x95b4>  // b.tstop
  40bbf0:	lsl	x1, x27, #5
  40bbf4:	mov	x0, x8
  40bbf8:	bl	417310 <wcrtomb@plt+0x14aa0>
  40bbfc:	ldr	x10, [x21, #8]
  40bc00:	mov	x8, x0
  40bc04:	mov	w16, #0x100                 	// #256
  40bc08:	movi	v0.2d, #0xffffffffffffffff
  40bc0c:	str	x27, [x21, #16]
  40bc10:	add	x9, x10, #0x1
  40bc14:	add	x10, x8, x25, lsl #5
  40bc18:	stp	x8, x9, [x21]
  40bc1c:	stp	q0, q0, [x10]
  40bc20:	ldr	x0, [x21, #144]
  40bc24:	ldr	x9, [x20, #144]
  40bc28:	add	x8, x25, #0x114
  40bc2c:	add	x10, x0, x19, lsl #3
  40bc30:	add	x11, x24, #0x1
  40bc34:	stp	x8, x22, [x10]
  40bc38:	ldr	x8, [x9, x11, lsl #3]
  40bc3c:	add	x19, x19, #0x2
  40bc40:	sub	x8, x8, #0x101
  40bc44:	cmp	x8, #0x3
  40bc48:	cinc	x24, x24, cc  // cc = lo, ul, last
  40bc4c:	mov	w8, #0x1                   	// #1
  40bc50:	b	40ba60 <wcrtomb@plt+0x91f0>
  40bc54:	ldur	w22, [x29, #-4]
  40bc58:	str	x19, [x21, #152]
  40bc5c:	tbz	w23, #0, 40bc80 <wcrtomb@plt+0x9410>
  40bc60:	tbnz	w8, #0, 40bc6c <wcrtomb@plt+0x93fc>
  40bc64:	ldrb	w8, [x20, #1048]
  40bc68:	cbz	w8, 40bc80 <wcrtomb@plt+0x9410>
  40bc6c:	str	x21, [x20, #288]
  40bc70:	cmp	x10, #0x1
  40bc74:	b.ge	40bc9c <wcrtomb@plt+0x942c>  // b.tcont
  40bc78:	b	40bd0c <wcrtomb@plt+0x949c>
  40bc7c:	str	xzr, [x21, #152]
  40bc80:	mov	x0, x21
  40bc84:	bl	40d2f0 <wcrtomb@plt+0xaa80>
  40bc88:	mov	x0, x21
  40bc8c:	bl	402620 <free@plt>
  40bc90:	ldr	x10, [x20, #152]
  40bc94:	cmp	x10, #0x1
  40bc98:	b.lt	40bd0c <wcrtomb@plt+0x949c>  // b.tstop
  40bc9c:	ldr	x8, [x20, #144]
  40bca0:	mov	x9, x10
  40bca4:	b	40bcbc <wcrtomb@plt+0x944c>
  40bca8:	ldrb	w11, [x20, #1048]
  40bcac:	cbnz	w11, 40bcd8 <wcrtomb@plt+0x9468>
  40bcb0:	subs	x9, x9, #0x1
  40bcb4:	add	x8, x8, #0x8
  40bcb8:	b.eq	40bd0c <wcrtomb@plt+0x949c>  // b.none
  40bcbc:	ldr	x11, [x8]
  40bcc0:	sub	x12, x11, #0x10e
  40bcc4:	cmp	x12, #0x4
  40bcc8:	b.cc	40bca8 <wcrtomb@plt+0x9438>  // b.lo, b.ul, b.last
  40bccc:	sub	x11, x11, #0x112
  40bcd0:	cmp	x11, #0x2
  40bcd4:	b.cs	40bcb0 <wcrtomb@plt+0x9440>  // b.hs, b.nlast
  40bcd8:	adrp	x8, 40d000 <wcrtomb@plt+0xa790>
  40bcdc:	add	x8, x8, #0x2e0
  40bce0:	str	x8, [x20, #1040]
  40bce4:	ldr	x0, [x20, #288]
  40bce8:	cbnz	x0, 40bdf8 <wcrtomb@plt+0x9588>
  40bcec:	ldp	x20, x19, [sp, #96]
  40bcf0:	ldp	x22, x21, [sp, #80]
  40bcf4:	ldp	x24, x23, [sp, #64]
  40bcf8:	ldp	x26, x25, [sp, #48]
  40bcfc:	ldp	x28, x27, [sp, #32]
  40bd00:	ldp	x29, x30, [sp, #16]
  40bd04:	add	sp, sp, #0x70
  40bd08:	ret
  40bd0c:	ldrb	w8, [x20, #1050]
  40bd10:	cbz	w8, 40bde4 <wcrtomb@plt+0x9574>
  40bd14:	cmp	x10, #0x1
  40bd18:	b.lt	40bd64 <wcrtomb@plt+0x94f4>  // b.tstop
  40bd1c:	ldr	x8, [x20, #144]
  40bd20:	mov	w9, wzr
  40bd24:	ldr	x11, [x8]
  40bd28:	cmp	x11, #0x112
  40bd2c:	b.eq	40bd50 <wcrtomb@plt+0x94e0>  // b.none
  40bd30:	cmp	x11, #0x113
  40bd34:	b.eq	40bde4 <wcrtomb@plt+0x9574>  // b.none
  40bd38:	cmp	x11, #0x10a
  40bd3c:	b.eq	40be28 <wcrtomb@plt+0x95b8>  // b.none
  40bd40:	subs	x10, x10, #0x1
  40bd44:	add	x8, x8, #0x8
  40bd48:	b.ne	40bd24 <wcrtomb@plt+0x94b4>  // b.any
  40bd4c:	b	40bd60 <wcrtomb@plt+0x94f0>
  40bd50:	mov	w9, #0x1                   	// #1
  40bd54:	subs	x10, x10, #0x1
  40bd58:	add	x8, x8, #0x8
  40bd5c:	b.ne	40bd24 <wcrtomb@plt+0x94b4>  // b.any
  40bd60:	tbnz	w9, #0, 40bd7c <wcrtomb@plt+0x950c>
  40bd64:	ldr	x0, [x20, #288]
  40bd68:	cbz	x0, 40bd7c <wcrtomb@plt+0x950c>
  40bd6c:	bl	40d2f0 <wcrtomb@plt+0xaa80>
  40bd70:	ldr	x0, [x20, #288]
  40bd74:	bl	402620 <free@plt>
  40bd78:	str	xzr, [x20, #288]
  40bd7c:	ldr	x0, [x20, #280]
  40bd80:	bl	402620 <free@plt>
  40bd84:	ldr	x0, [x20, #96]
  40bd88:	bl	402620 <free@plt>
  40bd8c:	ldr	x0, [x20, #408]
  40bd90:	bl	402620 <free@plt>
  40bd94:	ldr	x8, [x20, #432]
  40bd98:	cbz	x8, 40bdcc <wcrtomb@plt+0x955c>
  40bd9c:	ldr	x9, [x20, #352]
  40bda0:	tbnz	x9, #63, 40bdc4 <wcrtomb@plt+0x9554>
  40bda4:	mov	x19, #0xffffffffffffffff    	// #-1
  40bda8:	ldr	x0, [x8, x19, lsl #3]
  40bdac:	bl	402620 <free@plt>
  40bdb0:	ldr	x9, [x20, #352]
  40bdb4:	ldr	x8, [x20, #432]
  40bdb8:	add	x19, x19, #0x1
  40bdbc:	cmp	x19, x9
  40bdc0:	b.lt	40bda8 <wcrtomb@plt+0x9538>  // b.tstop
  40bdc4:	sub	x0, x8, #0x10
  40bdc8:	bl	402620 <free@plt>
  40bdcc:	adrp	x8, 40e000 <wcrtomb@plt+0xb790>
  40bdd0:	add	x8, x8, #0x570
  40bdd4:	str	x8, [x20, #1040]
  40bdd8:	mov	w8, #0x1                   	// #1
  40bddc:	strb	wzr, [x20, #1048]
  40bde0:	strb	w8, [x20, #192]
  40bde4:	and	w1, w22, #0x1
  40bde8:	mov	x0, x20
  40bdec:	bl	40be2c <wcrtomb@plt+0x95bc>
  40bdf0:	ldr	x0, [x20, #288]
  40bdf4:	cbz	x0, 40bcec <wcrtomb@plt+0x947c>
  40bdf8:	mov	w8, #0x1                   	// #1
  40bdfc:	strb	w8, [x20, #192]
  40be00:	and	w1, w22, #0x1
  40be04:	ldp	x20, x19, [sp, #96]
  40be08:	ldp	x22, x21, [sp, #80]
  40be0c:	ldp	x24, x23, [sp, #64]
  40be10:	ldp	x26, x25, [sp, #48]
  40be14:	ldp	x28, x27, [sp, #32]
  40be18:	ldp	x29, x30, [sp, #16]
  40be1c:	add	sp, sp, #0x70
  40be20:	b	40be2c <wcrtomb@plt+0x95bc>
  40be24:	bl	41757c <wcrtomb@plt+0x14d0c>
  40be28:	bl	402560 <abort@plt>
  40be2c:	sub	sp, sp, #0x130
  40be30:	stp	x29, x30, [sp, #208]
  40be34:	stp	x28, x27, [sp, #224]
  40be38:	stp	x26, x25, [sp, #240]
  40be3c:	stp	x24, x23, [sp, #256]
  40be40:	stp	x22, x21, [sp, #272]
  40be44:	stp	x20, x19, [sp, #288]
  40be48:	ldr	x8, [x0, #176]
  40be4c:	add	x29, sp, #0xd0
  40be50:	lsr	x9, x8, #58
  40be54:	cbnz	x9, 40d2dc <wcrtomb@plt+0xaa6c>
  40be58:	mov	x23, x0
  40be5c:	mov	x19, #0x5555555555555555    	// #6148914691236517205
  40be60:	lsl	x0, x8, #5
  40be64:	mov	w21, w1
  40be68:	movk	x19, #0x555, lsl #48
  40be6c:	bl	417290 <wcrtomb@plt+0x14a20>
  40be70:	ldr	x8, [x23, #168]
  40be74:	str	x0, [sp, #16]
  40be78:	cmp	x8, x19
  40be7c:	b.hi	40d2dc <wcrtomb@plt+0xaa6c>  // b.pmore
  40be80:	ldr	x19, [x23, #176]
  40be84:	add	x8, x8, x8, lsl #1
  40be88:	lsl	x0, x8, #3
  40be8c:	and	w21, w21, #0x1
  40be90:	bl	417290 <wcrtomb@plt+0x14a20>
  40be94:	str	x0, [sp, #8]
  40be98:	mov	w1, #0x105                 	// #261
  40be9c:	mov	w2, #0x3                   	// #3
  40bea0:	mov	x0, x23
  40bea4:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40bea8:	ldr	x20, [x23, #176]
  40beac:	strb	w21, [x23, #328]
  40beb0:	lsr	x8, x20, #59
  40beb4:	cbnz	x8, 40d2dc <wcrtomb@plt+0xaa6c>
  40beb8:	lsl	x0, x20, #4
  40bebc:	bl	417290 <wcrtomb@plt+0x14a20>
  40bec0:	stp	xzr, x20, [x29, #-72]
  40bec4:	stur	x0, [x29, #-80]
  40bec8:	ldr	x0, [x23, #152]
  40becc:	mov	w1, #0x18                  	// #24
  40bed0:	bl	4174d4 <wcrtomb@plt+0x14c64>
  40bed4:	ldr	x8, [x23, #152]
  40bed8:	str	x0, [x23, #320]
  40bedc:	stur	x23, [x29, #-88]
  40bee0:	cmp	x8, #0x1
  40bee4:	b.lt	40c37c <wcrtomb@plt+0x9b0c>  // b.tstop
  40bee8:	ldp	x22, x8, [sp, #8]
  40beec:	mov	w9, #0x1                   	// #1
  40bef0:	adrp	x15, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40bef4:	mov	x13, xzr
  40bef8:	add	x14, x8, x19, lsl #4
  40befc:	add	x15, x15, #0x473
  40bf00:	mov	w25, #0x18                  	// #24
  40bf04:	dup	v0.2d, x9
  40bf08:	mov	x16, x8
  40bf0c:	str	q0, [sp, #80]
  40bf10:	b	40bf2c <wcrtomb@plt+0x96bc>
  40bf14:	mov	w8, #0x1                   	// #1
  40bf18:	sturb	w8, [x22, #-24]
  40bf1c:	ldr	x8, [x23, #152]
  40bf20:	add	x13, x13, #0x1
  40bf24:	cmp	x13, x8
  40bf28:	b.ge	40c37c <wcrtomb@plt+0x9b0c>  // b.tcont
  40bf2c:	ldr	x8, [x23, #144]
  40bf30:	ldr	x8, [x8, x13, lsl #3]
  40bf34:	sub	x9, x8, #0x100
  40bf38:	cmp	x9, #0x6
  40bf3c:	b.hi	40c0e4 <wcrtomb@plt+0x9874>  // b.pmore
  40bf40:	adr	x10, 40bf14 <wcrtomb@plt+0x96a4>
  40bf44:	ldrb	w11, [x15, x9]
  40bf48:	add	x10, x10, x11, lsl #2
  40bf4c:	br	x10
  40bf50:	ldp	x10, x9, [x22, #-16]
  40bf54:	sub	x11, x16, x10, lsl #4
  40bf58:	cmp	x9, #0x1
  40bf5c:	stp	x11, x10, [x29, #-56]
  40bf60:	b.lt	40c0c0 <wcrtomb@plt+0x9850>  // b.tstop
  40bf64:	mov	x19, xzr
  40bf68:	sub	x24, x14, x9, lsl #4
  40bf6c:	str	x16, [sp, #96]
  40bf70:	stur	x13, [x29, #-96]
  40bf74:	str	x14, [sp, #104]
  40bf78:	b	40bf90 <wcrtomb@plt+0x9720>
  40bf7c:	ldur	x8, [x22, #-8]
  40bf80:	add	x19, x19, #0x1
  40bf84:	add	x24, x24, #0x10
  40bf88:	cmp	x19, x8
  40bf8c:	b.ge	40c0a8 <wcrtomb@plt+0x9838>  // b.tcont
  40bf90:	ldur	x20, [x29, #-88]
  40bf94:	ldr	x9, [x24]
  40bf98:	sub	x0, x29, #0x38
  40bf9c:	sub	x3, x29, #0x50
  40bfa0:	ldr	x8, [x20, #320]
  40bfa4:	mov	w2, #0xffffffff            	// #-1
  40bfa8:	madd	x1, x9, x25, x8
  40bfac:	bl	4108ac <wcrtomb@plt+0xe03c>
  40bfb0:	ldr	x23, [x20, #320]
  40bfb4:	ldr	x28, [x24]
  40bfb8:	madd	x27, x28, x25, x23
  40bfbc:	mov	x26, x27
  40bfc0:	ldr	x8, [x26, #16]!
  40bfc4:	ldur	x21, [x29, #-72]
  40bfc8:	cmp	x8, x21
  40bfcc:	b.ge	40c088 <wcrtomb@plt+0x9818>  // b.tcont
  40bfd0:	ldr	x0, [x27]
  40bfd4:	bl	402620 <free@plt>
  40bfd8:	ldr	x8, [x26]
  40bfdc:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40bfe0:	adds	x9, x8, x8, asr #1
  40bfe4:	csel	x20, x10, x9, vs
  40bfe8:	tbnz	x20, #63, 40c000 <wcrtomb@plt+0x9790>
  40bfec:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40bff0:	cmp	x20, x9
  40bff4:	b.le	40c018 <wcrtomb@plt+0x97a8>
  40bff8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40bffc:	b	40c028 <wcrtomb@plt+0x97b8>
  40c000:	cmn	x20, #0x1
  40c004:	b.eq	40c024 <wcrtomb@plt+0x97b4>  // b.none
  40c008:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c00c:	sdiv	x9, x9, x20
  40c010:	cmp	x9, #0x10
  40c014:	b.lt	40bff8 <wcrtomb@plt+0x9788>  // b.tstop
  40c018:	lsl	x1, x20, #4
  40c01c:	cmp	x1, #0x7f
  40c020:	b.gt	40c030 <wcrtomb@plt+0x97c0>
  40c024:	mov	w9, #0x80                  	// #128
  40c028:	lsr	x20, x9, #4
  40c02c:	and	x1, x9, #0x7ffffffffffffff0
  40c030:	cmp	x20, x21
  40c034:	str	xzr, [x26]
  40c038:	b.ge	40c078 <wcrtomb@plt+0x9808>  // b.tcont
  40c03c:	sub	x9, x21, x8
  40c040:	adds	x20, x8, x9
  40c044:	b.vs	40d2dc <wcrtomb@plt+0xaa6c>
  40c048:	tbnz	x20, #63, 40c05c <wcrtomb@plt+0x97ec>
  40c04c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40c050:	cmp	x20, x8
  40c054:	b.le	40c074 <wcrtomb@plt+0x9804>
  40c058:	b	40d2dc <wcrtomb@plt+0xaa6c>
  40c05c:	cmn	x20, #0x1
  40c060:	b.eq	40c074 <wcrtomb@plt+0x9804>  // b.none
  40c064:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c068:	sdiv	x8, x8, x20
  40c06c:	cmp	x8, #0x10
  40c070:	b.lt	40d2dc <wcrtomb@plt+0xaa6c>  // b.tstop
  40c074:	lsl	x1, x20, #4
  40c078:	mov	x0, xzr
  40c07c:	bl	417310 <wcrtomb@plt+0x14aa0>
  40c080:	str	x20, [x26]
  40c084:	str	x0, [x27]
  40c088:	madd	x8, x28, x25, x23
  40c08c:	str	x21, [x8, #8]
  40c090:	cbz	x21, 40bf7c <wcrtomb@plt+0x970c>
  40c094:	ldr	x0, [x27]
  40c098:	ldur	x1, [x29, #-80]
  40c09c:	lsl	x2, x21, #4
  40c0a0:	bl	402210 <memcpy@plt>
  40c0a4:	b	40bf7c <wcrtomb@plt+0x970c>
  40c0a8:	ldp	x13, x23, [x29, #-96]
  40c0ac:	ldp	x16, x14, [sp, #96]
  40c0b0:	adrp	x15, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40c0b4:	add	x15, x15, #0x473
  40c0b8:	ldr	x8, [x23, #144]
  40c0bc:	ldr	x8, [x8, x13, lsl #3]
  40c0c0:	cmp	x8, #0x103
  40c0c4:	b.ne	40bf14 <wcrtomb@plt+0x96a4>  // b.any
  40c0c8:	b	40bf1c <wcrtomb@plt+0x96ac>
  40c0cc:	mov	w8, #0x1                   	// #1
  40c0d0:	strb	w8, [x22]
  40c0d4:	add	x8, x22, #0x18
  40c0d8:	stp	xzr, xzr, [x22, #8]
  40c0dc:	mov	x22, x8
  40c0e0:	b	40bf1c <wcrtomb@plt+0x96ac>
  40c0e4:	ldr	q0, [sp, #80]
  40c0e8:	cmp	x8, #0x112
  40c0ec:	mov	w8, #0x1ff                 	// #511
  40c0f0:	str	x13, [x14]
  40c0f4:	str	x13, [x16]
  40c0f8:	str	w8, [x14, #8]
  40c0fc:	str	w8, [x16, #8]
  40c100:	cset	w8, eq  // eq = none
  40c104:	stur	q0, [x22, #8]
  40c108:	add	x16, x16, #0x10
  40c10c:	strb	w8, [x22], #24
  40c110:	add	x14, x14, #0x10
  40c114:	b	40bf1c <wcrtomb@plt+0x96ac>
  40c118:	ldur	x10, [x22, #-16]
  40c11c:	ldur	x9, [x22, #-32]
  40c120:	sub	x8, x16, x10, lsl #4
  40c124:	cmp	x9, #0x1
  40c128:	stp	x8, x10, [x29, #-56]
  40c12c:	b.lt	40c2b4 <wcrtomb@plt+0x9a44>  // b.tstop
  40c130:	ldur	x8, [x22, #-8]
  40c134:	mov	x19, xzr
  40c138:	str	x16, [sp, #96]
  40c13c:	stur	x13, [x29, #-96]
  40c140:	sub	x8, x14, x8, lsl #4
  40c144:	sub	x24, x8, x9, lsl #4
  40c148:	str	x14, [sp, #104]
  40c14c:	b	40c164 <wcrtomb@plt+0x98f4>
  40c150:	ldur	x9, [x22, #-32]
  40c154:	add	x19, x19, #0x1
  40c158:	add	x24, x24, #0x10
  40c15c:	cmp	x19, x9
  40c160:	b.ge	40c2a0 <wcrtomb@plt+0x9a30>  // b.tcont
  40c164:	ldur	x20, [x29, #-88]
  40c168:	ldr	x9, [x24]
  40c16c:	sub	x0, x29, #0x38
  40c170:	sub	x3, x29, #0x50
  40c174:	ldr	x8, [x20, #320]
  40c178:	mov	w2, #0xffffffff            	// #-1
  40c17c:	madd	x1, x9, x25, x8
  40c180:	bl	4108ac <wcrtomb@plt+0xe03c>
  40c184:	ldr	x23, [x20, #320]
  40c188:	ldr	x28, [x24]
  40c18c:	madd	x26, x28, x25, x23
  40c190:	mov	x27, x26
  40c194:	ldr	x8, [x27, #16]!
  40c198:	ldur	x21, [x29, #-72]
  40c19c:	cmp	x8, x21
  40c1a0:	b.ge	40c25c <wcrtomb@plt+0x99ec>  // b.tcont
  40c1a4:	ldr	x0, [x26]
  40c1a8:	bl	402620 <free@plt>
  40c1ac:	ldr	x8, [x27]
  40c1b0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40c1b4:	adds	x9, x8, x8, asr #1
  40c1b8:	csel	x20, x10, x9, vs
  40c1bc:	tbnz	x20, #63, 40c1d4 <wcrtomb@plt+0x9964>
  40c1c0:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40c1c4:	cmp	x20, x9
  40c1c8:	b.le	40c1ec <wcrtomb@plt+0x997c>
  40c1cc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c1d0:	b	40c1fc <wcrtomb@plt+0x998c>
  40c1d4:	cmn	x20, #0x1
  40c1d8:	b.eq	40c1f8 <wcrtomb@plt+0x9988>  // b.none
  40c1dc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c1e0:	sdiv	x9, x9, x20
  40c1e4:	cmp	x9, #0x10
  40c1e8:	b.lt	40c1cc <wcrtomb@plt+0x995c>  // b.tstop
  40c1ec:	lsl	x1, x20, #4
  40c1f0:	cmp	x1, #0x7f
  40c1f4:	b.gt	40c204 <wcrtomb@plt+0x9994>
  40c1f8:	mov	w9, #0x80                  	// #128
  40c1fc:	lsr	x20, x9, #4
  40c200:	and	x1, x9, #0x7ffffffffffffff0
  40c204:	cmp	x20, x21
  40c208:	str	xzr, [x27]
  40c20c:	b.ge	40c24c <wcrtomb@plt+0x99dc>  // b.tcont
  40c210:	sub	x9, x21, x8
  40c214:	adds	x20, x8, x9
  40c218:	b.vs	40d2dc <wcrtomb@plt+0xaa6c>
  40c21c:	tbnz	x20, #63, 40c230 <wcrtomb@plt+0x99c0>
  40c220:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40c224:	cmp	x20, x8
  40c228:	b.le	40c248 <wcrtomb@plt+0x99d8>
  40c22c:	b	40d2dc <wcrtomb@plt+0xaa6c>
  40c230:	cmn	x20, #0x1
  40c234:	b.eq	40c248 <wcrtomb@plt+0x99d8>  // b.none
  40c238:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c23c:	sdiv	x8, x8, x20
  40c240:	cmp	x8, #0x10
  40c244:	b.lt	40d2dc <wcrtomb@plt+0xaa6c>  // b.tstop
  40c248:	lsl	x1, x20, #4
  40c24c:	mov	x0, xzr
  40c250:	bl	417310 <wcrtomb@plt+0x14aa0>
  40c254:	str	x20, [x27]
  40c258:	str	x0, [x26]
  40c25c:	madd	x8, x28, x25, x23
  40c260:	str	x21, [x8, #8]
  40c264:	cbz	x21, 40c150 <wcrtomb@plt+0x98e0>
  40c268:	ldr	x0, [x26]
  40c26c:	ldur	x1, [x29, #-80]
  40c270:	lsl	x2, x21, #4
  40c274:	bl	402210 <memcpy@plt>
  40c278:	b	40c150 <wcrtomb@plt+0x98e0>
  40c27c:	ldrb	w8, [x22, #-24]!
  40c280:	ldur	q0, [x22, #8]
  40c284:	ldur	q1, [x22, #-16]
  40c288:	ldurb	w9, [x22, #-24]
  40c28c:	add	v0.2d, v1.2d, v0.2d
  40c290:	orr	w8, w9, w8
  40c294:	stur	q0, [x22, #-16]
  40c298:	sturb	w8, [x22, #-24]
  40c29c:	b	40bf1c <wcrtomb@plt+0x96ac>
  40c2a0:	ldur	x10, [x22, #-16]
  40c2a4:	ldp	x13, x23, [x29, #-96]
  40c2a8:	ldp	x16, x14, [sp, #96]
  40c2ac:	adrp	x15, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40c2b0:	add	x15, x15, #0x473
  40c2b4:	ldurb	w8, [x22, #-48]
  40c2b8:	cbz	w8, 40c2e0 <wcrtomb@plt+0x9a70>
  40c2bc:	ldur	x11, [x22, #-40]
  40c2c0:	add	x10, x11, x10
  40c2c4:	stur	x10, [x22, #-40]
  40c2c8:	ldurb	w10, [x22, #-24]
  40c2cc:	ldur	x12, [x22, #-8]
  40c2d0:	cbz	w10, 40c2f0 <wcrtomb@plt+0x9a80>
  40c2d4:	add	x10, x12, x9
  40c2d8:	mov	w9, #0x1                   	// #1
  40c2dc:	b	40c368 <wcrtomb@plt+0x9af8>
  40c2e0:	sub	x16, x16, x10, lsl #4
  40c2e4:	ldurb	w10, [x22, #-24]
  40c2e8:	ldur	x12, [x22, #-8]
  40c2ec:	cbnz	w10, 40c2d4 <wcrtomb@plt+0x9a64>
  40c2f0:	cmp	x12, #0x1
  40c2f4:	neg	x11, x9
  40c2f8:	b.lt	40c35c <wcrtomb@plt+0x9aec>  // b.tstop
  40c2fc:	sub	x8, x14, x12, lsl #4
  40c300:	sub	x8, x8, x9, lsl #4
  40c304:	ldur	x10, [x22, #-8]
  40c308:	ldr	q0, [x8, x9, lsl #4]
  40c30c:	cmp	x10, #0x2
  40c310:	str	q0, [x8]
  40c314:	b.lt	40c348 <wcrtomb@plt+0x9ad8>  // b.tstop
  40c318:	sub	x9, x11, x12
  40c31c:	add	x9, x14, x9, lsl #4
  40c320:	add	x9, x9, #0x10
  40c324:	mov	w11, #0x1                   	// #1
  40c328:	ldur	x12, [x22, #-32]
  40c32c:	ldur	x10, [x22, #-8]
  40c330:	add	x12, x11, x12
  40c334:	ldr	q0, [x8, x12, lsl #4]
  40c338:	add	x11, x11, #0x1
  40c33c:	cmp	x11, x10
  40c340:	str	q0, [x9], #16
  40c344:	b.lt	40c328 <wcrtomb@plt+0x9ab8>  // b.tstop
  40c348:	ldur	x11, [x22, #-32]
  40c34c:	ldurb	w9, [x22, #-24]
  40c350:	ldurb	w8, [x22, #-48]
  40c354:	neg	x11, x11
  40c358:	b	40c364 <wcrtomb@plt+0x9af4>
  40c35c:	mov	w9, wzr
  40c360:	mov	x10, x12
  40c364:	add	x14, x14, x11, lsl #4
  40c368:	and	w8, w8, w9
  40c36c:	stur	x10, [x22, #-32]
  40c370:	sturb	w8, [x22, #-48]
  40c374:	sub	x22, x22, #0x18
  40c378:	b	40bf1c <wcrtomb@plt+0x96ac>
  40c37c:	ldr	x28, [x23, #176]
  40c380:	lsr	x8, x28, #59
  40c384:	cbnz	x8, 40d2dc <wcrtomb@plt+0xaa6c>
  40c388:	lsl	x0, x28, #4
  40c38c:	mov	x19, x23
  40c390:	bl	417290 <wcrtomb@plt+0x14a20>
  40c394:	stp	xzr, x28, [x29, #-24]
  40c398:	stur	x0, [x29, #-32]
  40c39c:	ldr	x8, [x23, #152]
  40c3a0:	mov	x22, x0
  40c3a4:	cmp	x8, #0x1
  40c3a8:	b.lt	40c6f8 <wcrtomb@plt+0x9e88>  // b.tstop
  40c3ac:	mov	x20, xzr
  40c3b0:	mov	w21, #0x18                  	// #24
  40c3b4:	b	40c3c4 <wcrtomb@plt+0x9b54>
  40c3b8:	add	x20, x20, #0x1
  40c3bc:	cmp	x20, x8
  40c3c0:	b.ge	40c6f8 <wcrtomb@plt+0x9e88>  // b.tcont
  40c3c4:	ldr	x11, [x19, #320]
  40c3c8:	madd	x9, x20, x21, x11
  40c3cc:	ldr	x10, [x9, #8]!
  40c3d0:	cmp	x10, #0x1
  40c3d4:	b.lt	40c3b8 <wcrtomb@plt+0x9b48>  // b.tstop
  40c3d8:	ldr	x12, [x19, #144]
  40c3dc:	ldr	x12, [x12, x20, lsl #3]
  40c3e0:	cmp	x12, #0x100
  40c3e4:	cset	w13, lt  // lt = tstop
  40c3e8:	cmp	x12, #0x112
  40c3ec:	cset	w14, eq  // eq = none
  40c3f0:	cmp	x12, #0x10a
  40c3f4:	orr	w13, w13, w14
  40c3f8:	cset	w14, eq  // eq = none
  40c3fc:	cmp	x12, #0x113
  40c400:	orr	w13, w14, w13
  40c404:	cset	w14, eq  // eq = none
  40c408:	cmp	x12, #0x114
  40c40c:	orr	w13, w14, w13
  40c410:	cset	w14, lt  // lt = tstop
  40c414:	eor	w13, w14, w13
  40c418:	cmp	w13, #0x1
  40c41c:	b.ne	40c3b8 <wcrtomb@plt+0x9b48>  // b.any
  40c420:	sub	x12, x12, #0x10c
  40c424:	cmp	x12, #0x5
  40c428:	b.hi	40c43c <wcrtomb@plt+0x9bcc>  // b.pmore
  40c42c:	adrp	x13, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40c430:	add	x13, x13, #0x710
  40c434:	ldr	w12, [x13, x12, lsl #2]
  40c438:	b	40c440 <wcrtomb@plt+0x9bd0>
  40c43c:	mov	w12, #0x1ff                 	// #511
  40c440:	madd	x11, x20, x21, x11
  40c444:	ldr	x13, [x11]
  40c448:	mov	x15, xzr
  40c44c:	mov	x16, x10
  40c450:	stur	w12, [x29, #-96]
  40c454:	b	40c464 <wcrtomb@plt+0x9bf4>
  40c458:	add	x15, x12, #0x1
  40c45c:	cmp	x15, x16
  40c460:	b.ge	40c48c <wcrtomb@plt+0x9c1c>  // b.tcont
  40c464:	add	x12, x16, x15
  40c468:	asr	x12, x12, #1
  40c46c:	lsl	x14, x12, #4
  40c470:	ldr	x17, [x13, x14]
  40c474:	cmp	x17, x20
  40c478:	b.lt	40c458 <wcrtomb@plt+0x9be8>  // b.tstop
  40c47c:	b.eq	40c498 <wcrtomb@plt+0x9c28>  // b.none
  40c480:	mov	x16, x12
  40c484:	cmp	x15, x16
  40c488:	b.lt	40c464 <wcrtomb@plt+0x9bf4>  // b.tstop
  40c48c:	cmp	x8, #0x1
  40c490:	b.ge	40c4f8 <wcrtomb@plt+0x9c88>  // b.tcont
  40c494:	b	40c3b8 <wcrtomb@plt+0x9b48>
  40c498:	add	x8, x12, #0x1
  40c49c:	cmp	x8, x10
  40c4a0:	b.ge	40c4e4 <wcrtomb@plt+0x9c74>  // b.tcont
  40c4a4:	ldr	q0, [x13, x8, lsl #4]
  40c4a8:	add	x15, x12, #0x2
  40c4ac:	cmp	x15, x10
  40c4b0:	str	q0, [x13, x12, lsl #4]
  40c4b4:	b.eq	40c4e8 <wcrtomb@plt+0x9c78>  // b.none
  40c4b8:	sub	x8, x10, #0x2
  40c4bc:	ldr	x10, [x11]
  40c4c0:	add	x12, x12, #0x1
  40c4c4:	cmp	x8, x12
  40c4c8:	add	x10, x10, x14
  40c4cc:	ldr	q0, [x10, #32]
  40c4d0:	add	x14, x14, #0x10
  40c4d4:	str	q0, [x10, #16]
  40c4d8:	b.ne	40c4bc <wcrtomb@plt+0x9c4c>  // b.any
  40c4dc:	add	x8, x12, #0x1
  40c4e0:	b	40c4e8 <wcrtomb@plt+0x9c78>
  40c4e4:	mov	x8, x12
  40c4e8:	str	x8, [x9]
  40c4ec:	ldr	x8, [x19, #152]
  40c4f0:	cmp	x8, #0x1
  40c4f4:	b.lt	40c3b8 <wcrtomb@plt+0x9b48>  // b.tstop
  40c4f8:	mov	x27, xzr
  40c4fc:	b	40c524 <wcrtomb@plt+0x9cb4>
  40c500:	sub	x0, x29, #0x20
  40c504:	mov	x1, x24
  40c508:	mov	w2, w25
  40c50c:	mov	x3, x23
  40c510:	bl	4108ac <wcrtomb@plt+0xe03c>
  40c514:	ldr	x8, [x19, #152]
  40c518:	add	x27, x27, #0x1
  40c51c:	cmp	x27, x8
  40c520:	b.ge	40c3b8 <wcrtomb@plt+0x9b48>  // b.tcont
  40c524:	cmp	x20, x27
  40c528:	b.eq	40c514 <wcrtomb@plt+0x9ca4>  // b.none
  40c52c:	ldr	x10, [x19, #320]
  40c530:	madd	x26, x27, x21, x10
  40c534:	ldr	x8, [x26, #8]!
  40c538:	cmp	x8, #0x1
  40c53c:	b.lt	40c514 <wcrtomb@plt+0x9ca4>  // b.tstop
  40c540:	madd	x23, x27, x21, x10
  40c544:	ldr	x11, [x23]
  40c548:	mov	x9, xzr
  40c54c:	madd	x24, x20, x21, x10
  40c550:	mov	x13, x8
  40c554:	b	40c564 <wcrtomb@plt+0x9cf4>
  40c558:	add	x9, x10, #0x1
  40c55c:	cmp	x9, x13
  40c560:	b.ge	40c58c <wcrtomb@plt+0x9d1c>  // b.tcont
  40c564:	add	x10, x13, x9
  40c568:	asr	x10, x10, #1
  40c56c:	lsl	x12, x10, #4
  40c570:	ldr	x14, [x11, x12]
  40c574:	cmp	x14, x20
  40c578:	b.lt	40c558 <wcrtomb@plt+0x9ce8>  // b.tstop
  40c57c:	b.eq	40c5a0 <wcrtomb@plt+0x9d30>  // b.none
  40c580:	mov	x13, x10
  40c584:	cmp	x9, x13
  40c588:	b.lt	40c564 <wcrtomb@plt+0x9cf4>  // b.tstop
  40c58c:	mov	w9, wzr
  40c590:	ldur	w10, [x29, #-96]
  40c594:	ands	w25, w9, w10
  40c598:	b.ne	40c60c <wcrtomb@plt+0x9d9c>  // b.any
  40c59c:	b	40c514 <wcrtomb@plt+0x9ca4>
  40c5a0:	add	x9, x11, x10, lsl #4
  40c5a4:	ldr	w9, [x9, #8]
  40c5a8:	add	x13, x10, #0x1
  40c5ac:	cmp	x13, x8
  40c5b0:	b.ge	40c5f4 <wcrtomb@plt+0x9d84>  // b.tcont
  40c5b4:	ldr	q0, [x11, x13, lsl #4]
  40c5b8:	add	x14, x10, #0x2
  40c5bc:	cmp	x14, x8
  40c5c0:	str	q0, [x11, x10, lsl #4]
  40c5c4:	b.eq	40c5f8 <wcrtomb@plt+0x9d88>  // b.none
  40c5c8:	sub	x8, x8, #0x2
  40c5cc:	ldr	x11, [x23]
  40c5d0:	add	x10, x10, #0x1
  40c5d4:	cmp	x8, x10
  40c5d8:	add	x11, x11, x12
  40c5dc:	ldr	q0, [x11, #32]
  40c5e0:	add	x12, x12, #0x10
  40c5e4:	str	q0, [x11, #16]
  40c5e8:	b.ne	40c5cc <wcrtomb@plt+0x9d5c>  // b.any
  40c5ec:	add	x13, x10, #0x1
  40c5f0:	b	40c5f8 <wcrtomb@plt+0x9d88>
  40c5f4:	mov	x13, x10
  40c5f8:	mov	x8, x13
  40c5fc:	str	x13, [x26]
  40c600:	ldur	w10, [x29, #-96]
  40c604:	ands	w25, w9, w10
  40c608:	b.eq	40c514 <wcrtomb@plt+0x9ca4>  // b.none
  40c60c:	cmp	x28, x8
  40c610:	b.ge	40c6dc <wcrtomb@plt+0x9e6c>  // b.tcont
  40c614:	mov	x0, x22
  40c618:	bl	402620 <free@plt>
  40c61c:	ldr	x8, [x26]
  40c620:	adds	x9, x28, x28, asr #1
  40c624:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40c628:	csel	x19, x10, x9, vs
  40c62c:	tbnz	x19, #63, 40c644 <wcrtomb@plt+0x9dd4>
  40c630:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40c634:	cmp	x19, x9
  40c638:	b.le	40c65c <wcrtomb@plt+0x9dec>
  40c63c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40c640:	b	40c66c <wcrtomb@plt+0x9dfc>
  40c644:	cmn	x19, #0x1
  40c648:	b.eq	40c668 <wcrtomb@plt+0x9df8>  // b.none
  40c64c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40c650:	sdiv	x9, x9, x19
  40c654:	cmp	x9, #0x10
  40c658:	b.lt	40c63c <wcrtomb@plt+0x9dcc>  // b.tstop
  40c65c:	lsl	x1, x19, #4
  40c660:	cmp	x1, #0x7f
  40c664:	b.gt	40c674 <wcrtomb@plt+0x9e04>
  40c668:	mov	w9, #0x80                  	// #128
  40c66c:	lsr	x19, x9, #4
  40c670:	and	x1, x9, #0x7ffffffffffffff0
  40c674:	cmp	x19, x8
  40c678:	stur	xzr, [x29, #-16]
  40c67c:	b.ge	40c6bc <wcrtomb@plt+0x9e4c>  // b.tcont
  40c680:	sub	x8, x8, x28
  40c684:	adds	x19, x28, x8
  40c688:	b.vs	40d2dc <wcrtomb@plt+0xaa6c>
  40c68c:	tbnz	x19, #63, 40c6a0 <wcrtomb@plt+0x9e30>
  40c690:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40c694:	cmp	x19, x8
  40c698:	b.le	40c6b8 <wcrtomb@plt+0x9e48>
  40c69c:	b	40d2dc <wcrtomb@plt+0xaa6c>
  40c6a0:	cmn	x19, #0x1
  40c6a4:	b.eq	40c6b8 <wcrtomb@plt+0x9e48>  // b.none
  40c6a8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40c6ac:	sdiv	x8, x8, x19
  40c6b0:	cmp	x8, #0x10
  40c6b4:	b.lt	40d2dc <wcrtomb@plt+0xaa6c>  // b.tstop
  40c6b8:	lsl	x1, x19, #4
  40c6bc:	mov	x0, xzr
  40c6c0:	bl	417310 <wcrtomb@plt+0x14aa0>
  40c6c4:	stur	x19, [x29, #-16]
  40c6c8:	stur	x0, [x29, #-32]
  40c6cc:	ldr	x8, [x26]
  40c6d0:	mov	x28, x19
  40c6d4:	ldur	x19, [x29, #-88]
  40c6d8:	mov	x22, x0
  40c6dc:	stur	x8, [x29, #-24]
  40c6e0:	cbz	x8, 40c500 <wcrtomb@plt+0x9c90>
  40c6e4:	ldr	x1, [x23]
  40c6e8:	lsl	x2, x8, #4
  40c6ec:	mov	x0, x22
  40c6f0:	bl	402210 <memcpy@plt>
  40c6f4:	b	40c500 <wcrtomb@plt+0x9c90>
  40c6f8:	mov	x0, x22
  40c6fc:	bl	402620 <free@plt>
  40c700:	ldr	x0, [x19, #152]
  40c704:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40c708:	ldr	x8, [x19, #152]
  40c70c:	mov	x22, x0
  40c710:	cmp	x8, #0x1
  40c714:	b.lt	40c7ac <wcrtomb@plt+0x9f3c>  // b.tstop
  40c718:	ldr	x10, [x19, #320]
  40c71c:	mov	x9, xzr
  40c720:	mov	w11, #0x18                  	// #24
  40c724:	mov	w12, #0x8                   	// #8
  40c728:	b	40c738 <wcrtomb@plt+0x9ec8>
  40c72c:	add	x9, x9, #0x1
  40c730:	cmp	x9, x8
  40c734:	b.eq	40c7ac <wcrtomb@plt+0x9f3c>  // b.none
  40c738:	madd	x13, x9, x11, x10
  40c73c:	ldr	x13, [x13, #8]
  40c740:	cmp	x13, #0x1
  40c744:	b.lt	40c72c <wcrtomb@plt+0x9ebc>  // b.tstop
  40c748:	mul	x14, x9, x11
  40c74c:	ldr	x14, [x10, x14]
  40c750:	b	40c76c <wcrtomb@plt+0x9efc>
  40c754:	ldrb	w15, [x22, x9]
  40c758:	orr	w15, w15, #0x1
  40c75c:	strb	w15, [x22, x9]
  40c760:	subs	x13, x13, #0x1
  40c764:	add	x14, x14, #0x10
  40c768:	b.eq	40c72c <wcrtomb@plt+0x9ebc>  // b.none
  40c76c:	ldr	x15, [x14]
  40c770:	cmp	x15, x9
  40c774:	b.eq	40c754 <wcrtomb@plt+0x9ee4>  // b.none
  40c778:	ldrb	w16, [x22, x15]
  40c77c:	b.ge	40c78c <wcrtomb@plt+0x9f1c>  // b.tcont
  40c780:	orr	w16, w16, #0x2
  40c784:	strb	w16, [x22, x15]
  40c788:	b	40c760 <wcrtomb@plt+0x9ef0>
  40c78c:	and	w17, w16, #0x8
  40c790:	strb	w17, [x22, x15]
  40c794:	tbnz	w16, #3, 40c7a0 <wcrtomb@plt+0x9f30>
  40c798:	strb	w12, [x22, x15]
  40c79c:	b	40c760 <wcrtomb@plt+0x9ef0>
  40c7a0:	orr	w16, w17, #0x4
  40c7a4:	strb	w16, [x22, x15]
  40c7a8:	b	40c760 <wcrtomb@plt+0x9ef0>
  40c7ac:	ldrb	w8, [x22]
  40c7b0:	mov	x21, x19
  40c7b4:	orr	w19, w8, #0x10
  40c7b8:	strb	w19, [x22]
  40c7bc:	ldr	x20, [x21, #176]
  40c7c0:	lsr	x8, x20, #59
  40c7c4:	cbnz	x8, 40d2dc <wcrtomb@plt+0xaa6c>
  40c7c8:	lsl	x0, x20, #4
  40c7cc:	bl	417290 <wcrtomb@plt+0x14a20>
  40c7d0:	stp	xzr, x20, [x29, #-24]
  40c7d4:	stur	x0, [x29, #-32]
  40c7d8:	ldr	x8, [x21, #152]
  40c7dc:	lsr	x9, x8, #61
  40c7e0:	cbnz	x9, 40d2dc <wcrtomb@plt+0xaa6c>
  40c7e4:	lsl	x0, x8, #2
  40c7e8:	bl	417290 <wcrtomb@plt+0x14a20>
  40c7ec:	ldr	x8, [x21, #152]
  40c7f0:	str	x0, [x21, #336]
  40c7f4:	cmp	x8, #0x1
  40c7f8:	b.lt	40cd4c <wcrtomb@plt+0xa4dc>  // b.tstop
  40c7fc:	mov	x16, xzr
  40c800:	mov	w17, #0x18                  	// #24
  40c804:	tbz	w19, #4, 40cd30 <wcrtomb@plt+0xa4c0>
  40c808:	ldur	x19, [x29, #-88]
  40c80c:	ldr	x9, [x19, #336]
  40c810:	ldr	x20, [x19, #320]
  40c814:	str	wzr, [x9, x16, lsl #2]
  40c818:	madd	x18, x16, x17, x20
  40c81c:	ldr	x9, [x18, #8]!
  40c820:	cmp	x9, #0x1
  40c824:	b.lt	40c838 <wcrtomb@plt+0x9fc8>  // b.tstop
  40c828:	mov	x21, xzr
  40c82c:	mov	x28, xzr
  40c830:	madd	x0, x16, x17, x20
  40c834:	b	40c890 <wcrtomb@plt+0xa020>
  40c838:	mov	x21, xzr
  40c83c:	str	x21, [x18]
  40c840:	add	x16, x16, #0x1
  40c844:	cmp	x16, x8
  40c848:	b.lt	40cd40 <wcrtomb@plt+0xa4d0>  // b.tstop
  40c84c:	b	40cd50 <wcrtomb@plt+0xa4e0>
  40c850:	ldp	x0, x18, [sp, #32]
  40c854:	ldur	x19, [x29, #-88]
  40c858:	ldp	x16, x1, [sp, #48]
  40c85c:	ldr	x20, [sp, #64]
  40c860:	ldr	x8, [x0]
  40c864:	ldr	w2, [sp, #28]
  40c868:	mov	w17, #0x18                  	// #24
  40c86c:	ldr	q0, [x8, x28, lsl #4]
  40c870:	str	q0, [x8, x21, lsl #4]
  40c874:	add	x21, x21, #0x1
  40c878:	orr	w8, w2, #0x10
  40c87c:	strb	w8, [x22, x1]
  40c880:	ldr	x8, [x18]
  40c884:	add	x28, x28, #0x1
  40c888:	cmp	x28, x8
  40c88c:	b.ge	40cd18 <wcrtomb@plt+0xa4a8>  // b.tcont
  40c890:	ldr	x8, [x0]
  40c894:	add	x10, x8, x28, lsl #4
  40c898:	ldr	w9, [x10, #8]
  40c89c:	cbz	w9, 40c880 <wcrtomb@plt+0xa010>
  40c8a0:	ldr	x1, [x10]
  40c8a4:	ldr	x10, [x19, #144]
  40c8a8:	ldr	x11, [x10, x1, lsl #3]
  40c8ac:	tbnz	x11, #63, 40c978 <wcrtomb@plt+0xa108>
  40c8b0:	ldrb	w2, [x22, x1]
  40c8b4:	cmp	x21, #0x1
  40c8b8:	b.lt	40c86c <wcrtomb@plt+0x9ffc>  // b.tstop
  40c8bc:	and	w12, w2, #0x6
  40c8c0:	cbnz	w12, 40c86c <wcrtomb@plt+0x9ffc>
  40c8c4:	mov	x12, xzr
  40c8c8:	add	x13, x8, #0x8
  40c8cc:	mov	w27, #0x1                   	// #1
  40c8d0:	b	40c8ec <wcrtomb@plt+0xa07c>
  40c8d4:	add	x12, x12, #0x1
  40c8d8:	cmp	x12, x21
  40c8dc:	cset	w27, lt  // lt = tstop
  40c8e0:	cmp	x21, x12
  40c8e4:	add	x13, x13, #0x10
  40c8e8:	b.eq	40c86c <wcrtomb@plt+0x9ffc>  // b.none
  40c8ec:	ldr	w14, [x13]
  40c8f0:	cmp	w14, w9
  40c8f4:	b.ne	40c8d4 <wcrtomb@plt+0xa064>  // b.any
  40c8f8:	ldur	x25, [x13, #-8]
  40c8fc:	ldrb	w14, [x22, x25]
  40c900:	tst	w14, #0x6
  40c904:	b.ne	40c8d4 <wcrtomb@plt+0xa064>  // b.any
  40c908:	ldr	x15, [x10, x25, lsl #3]
  40c90c:	cmp	x11, x15
  40c910:	b.ne	40c8d4 <wcrtomb@plt+0xa064>  // b.any
  40c914:	eor	w14, w14, w2
  40c918:	tbnz	w14, #0, 40c8d4 <wcrtomb@plt+0xa064>
  40c91c:	stp	x0, x18, [sp, #32]
  40c920:	stp	x16, x1, [sp, #48]
  40c924:	madd	x18, x1, x17, x20
  40c928:	ldr	x8, [x18, #8]!
  40c92c:	str	w2, [sp, #28]
  40c930:	str	x20, [sp, #64]
  40c934:	tbnz	w2, #0, 40cb3c <wcrtomb@plt+0xa2cc>
  40c938:	ldr	x9, [sp, #56]
  40c93c:	madd	x23, x25, x17, x20
  40c940:	cmp	x8, #0x3
  40c944:	madd	x12, x9, x17, x20
  40c948:	b.gt	40cb98 <wcrtomb@plt+0xa328>
  40c94c:	mov	w9, #0x18                  	// #24
  40c950:	cmp	x8, #0x1
  40c954:	b.lt	40ccfc <wcrtomb@plt+0xa48c>  // b.tstop
  40c958:	ldr	x10, [sp, #64]
  40c95c:	mov	x20, xzr
  40c960:	madd	x13, x25, x9, x10
  40c964:	ldr	x25, [x13, #8]!
  40c968:	stp	x12, x18, [sp, #96]
  40c96c:	add	x14, x13, #0x8
  40c970:	stp	x14, x13, [sp, #72]
  40c974:	b	40c9b4 <wcrtomb@plt+0xa144>
  40c978:	ldr	x8, [x19, #336]
  40c97c:	lsl	x10, x16, #2
  40c980:	ldr	w11, [x8, x10]
  40c984:	orr	w9, w11, w9
  40c988:	str	w9, [x8, x10]
  40c98c:	b	40c880 <wcrtomb@plt+0xa010>
  40c990:	add	x8, x0, x24, lsl #4
  40c994:	stp	x19, x15, [x8]
  40c998:	ldr	x8, [x13]
  40c99c:	add	x25, x8, #0x1
  40c9a0:	str	x25, [x13]
  40c9a4:	ldr	x8, [x18]
  40c9a8:	add	x20, x20, #0x1
  40c9ac:	cmp	x20, x8
  40c9b0:	b.ge	40ccfc <wcrtomb@plt+0xa48c>  // b.tcont
  40c9b4:	ldr	x9, [x12]
  40c9b8:	cmp	x25, #0x0
  40c9bc:	add	x9, x9, x20, lsl #4
  40c9c0:	ldp	x19, x15, [x9]
  40c9c4:	b.le	40ca24 <wcrtomb@plt+0xa1b4>
  40c9c8:	ldr	x0, [x23]
  40c9cc:	mov	x24, xzr
  40c9d0:	mov	x9, x25
  40c9d4:	b	40c9e4 <wcrtomb@plt+0xa174>
  40c9d8:	add	x24, x10, #0x1
  40c9dc:	cmp	x24, x9
  40c9e0:	b.ge	40ca2c <wcrtomb@plt+0xa1bc>  // b.tcont
  40c9e4:	add	x10, x9, x24
  40c9e8:	asr	x10, x10, #1
  40c9ec:	lsl	x11, x10, #4
  40c9f0:	ldr	x11, [x0, x11]
  40c9f4:	cmp	x11, x19
  40c9f8:	b.lt	40c9d8 <wcrtomb@plt+0xa168>  // b.tstop
  40c9fc:	mov	x9, x10
  40ca00:	b.ne	40c9dc <wcrtomb@plt+0xa16c>  // b.any
  40ca04:	add	x9, x0, x10, lsl #4
  40ca08:	ldr	w10, [x9, #8]
  40ca0c:	orr	w10, w10, w15
  40ca10:	str	w10, [x9, #8]
  40ca14:	add	x20, x20, #0x1
  40ca18:	cmp	x20, x8
  40ca1c:	b.lt	40c9b4 <wcrtomb@plt+0xa144>  // b.tstop
  40ca20:	b	40ccfc <wcrtomb@plt+0xa48c>
  40ca24:	ldr	x0, [x23]
  40ca28:	mov	x24, xzr
  40ca2c:	ldr	x8, [x14]
  40ca30:	cmp	x8, x25
  40ca34:	b.gt	40cb08 <wcrtomb@plt+0xa298>
  40ca38:	adds	x9, x8, x8, asr #1
  40ca3c:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40ca40:	csel	x26, x10, x9, vs
  40ca44:	stur	x15, [x29, #-96]
  40ca48:	tbnz	x26, #63, 40ca78 <wcrtomb@plt+0xa208>
  40ca4c:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40ca50:	cmp	x26, x9
  40ca54:	b.le	40ca90 <wcrtomb@plt+0xa220>
  40ca58:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40ca5c:	lsr	x26, x9, #4
  40ca60:	and	x1, x9, #0x7ffffffffffffff0
  40ca64:	cbnz	x0, 40cab4 <wcrtomb@plt+0xa244>
  40ca68:	str	xzr, [x14]
  40ca6c:	cmp	x26, x8
  40ca70:	b.gt	40caf4 <wcrtomb@plt+0xa284>
  40ca74:	b	40cabc <wcrtomb@plt+0xa24c>
  40ca78:	cmn	x26, #0x1
  40ca7c:	b.eq	40ca9c <wcrtomb@plt+0xa22c>  // b.none
  40ca80:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40ca84:	sdiv	x9, x9, x26
  40ca88:	cmp	x9, #0x10
  40ca8c:	b.lt	40ca58 <wcrtomb@plt+0xa1e8>  // b.tstop
  40ca90:	lsl	x1, x26, #4
  40ca94:	cmp	x1, #0x7f
  40ca98:	b.gt	40cab0 <wcrtomb@plt+0xa240>
  40ca9c:	mov	w9, #0x80                  	// #128
  40caa0:	lsr	x26, x9, #4
  40caa4:	and	x1, x9, #0x7ffffffffffffff0
  40caa8:	cbnz	x0, 40cab4 <wcrtomb@plt+0xa244>
  40caac:	b	40ca68 <wcrtomb@plt+0xa1f8>
  40cab0:	cbz	x0, 40ca68 <wcrtomb@plt+0xa1f8>
  40cab4:	cmp	x26, x8
  40cab8:	b.gt	40caf4 <wcrtomb@plt+0xa284>
  40cabc:	adds	x26, x8, #0x1
  40cac0:	b.vs	40d2dc <wcrtomb@plt+0xaa6c>
  40cac4:	tbnz	x26, #63, 40cad8 <wcrtomb@plt+0xa268>
  40cac8:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40cacc:	cmp	x26, x8
  40cad0:	b.le	40caf0 <wcrtomb@plt+0xa280>
  40cad4:	b	40d2dc <wcrtomb@plt+0xaa6c>
  40cad8:	cmn	x26, #0x1
  40cadc:	b.eq	40caf0 <wcrtomb@plt+0xa280>  // b.none
  40cae0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40cae4:	sdiv	x8, x8, x26
  40cae8:	cmp	x8, #0x10
  40caec:	b.lt	40d2dc <wcrtomb@plt+0xaa6c>  // b.tstop
  40caf0:	lsl	x1, x26, #4
  40caf4:	bl	417310 <wcrtomb@plt+0x14aa0>
  40caf8:	ldp	x14, x13, [sp, #72]
  40cafc:	ldur	x15, [x29, #-96]
  40cb00:	str	x26, [x14]
  40cb04:	ldp	x12, x18, [sp, #96]
  40cb08:	cmp	x25, x24
  40cb0c:	str	x0, [x23]
  40cb10:	b.le	40c990 <wcrtomb@plt+0xa120>
  40cb14:	lsl	x8, x25, #4
  40cb18:	add	x9, x0, x8
  40cb1c:	ldur	q0, [x9, #-16]
  40cb20:	sub	x25, x25, #0x1
  40cb24:	cmp	x25, x24
  40cb28:	sub	x8, x8, #0x10
  40cb2c:	str	q0, [x9]
  40cb30:	ldr	x0, [x23]
  40cb34:	b.gt	40cb18 <wcrtomb@plt+0xa2a8>
  40cb38:	b	40c990 <wcrtomb@plt+0xa120>
  40cb3c:	cmp	x8, #0x1
  40cb40:	b.lt	40ccfc <wcrtomb@plt+0xa48c>  // b.tstop
  40cb44:	ldp	x16, x20, [sp, #56]
  40cb48:	mov	w17, #0x18                  	// #24
  40cb4c:	mov	x13, xzr
  40cb50:	mov	x14, x8
  40cb54:	madd	x9, x16, x17, x20
  40cb58:	ldr	x11, [x9]
  40cb5c:	b	40cb6c <wcrtomb@plt+0xa2fc>
  40cb60:	add	x13, x10, #0x1
  40cb64:	cmp	x13, x14
  40cb68:	b.ge	40c938 <wcrtomb@plt+0xa0c8>  // b.tcont
  40cb6c:	add	x10, x14, x13
  40cb70:	asr	x10, x10, #1
  40cb74:	lsl	x12, x10, #4
  40cb78:	ldr	x15, [x11, x12]
  40cb7c:	cmp	x15, x16
  40cb80:	b.lt	40cb60 <wcrtomb@plt+0xa2f0>  // b.tstop
  40cb84:	b.eq	40cbf8 <wcrtomb@plt+0xa388>  // b.none
  40cb88:	mov	x14, x10
  40cb8c:	cmp	x13, x14
  40cb90:	b.lt	40cb6c <wcrtomb@plt+0xa2fc>  // b.tstop
  40cb94:	b	40c938 <wcrtomb@plt+0xa0c8>
  40cb98:	sub	x3, x29, #0x20
  40cb9c:	mov	w2, #0xffffffff            	// #-1
  40cba0:	mov	x0, x12
  40cba4:	mov	x1, x23
  40cba8:	bl	4108ac <wcrtomb@plt+0xe03c>
  40cbac:	mov	w8, #0x18                  	// #24
  40cbb0:	madd	x20, x25, x8, x20
  40cbb4:	ldr	x8, [x20, #16]!
  40cbb8:	ldur	x19, [x29, #-24]
  40cbbc:	mov	w26, #0x18                  	// #24
  40cbc0:	cmp	x8, x19
  40cbc4:	b.ge	40ccdc <wcrtomb@plt+0xa46c>  // b.tcont
  40cbc8:	ldr	x0, [x23]
  40cbcc:	bl	402620 <free@plt>
  40cbd0:	ldr	x8, [x20]
  40cbd4:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40cbd8:	adds	x9, x8, x8, asr #1
  40cbdc:	csel	x24, x10, x9, vs
  40cbe0:	tbnz	x24, #63, 40cc44 <wcrtomb@plt+0xa3d4>
  40cbe4:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  40cbe8:	cmp	x24, x9
  40cbec:	b.le	40cc5c <wcrtomb@plt+0xa3ec>
  40cbf0:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40cbf4:	b	40cc6c <wcrtomb@plt+0xa3fc>
  40cbf8:	add	x13, x10, #0x1
  40cbfc:	cmp	x13, x8
  40cc00:	b.ge	40cca0 <wcrtomb@plt+0xa430>  // b.tcont
  40cc04:	ldr	q0, [x11, x13, lsl #4]
  40cc08:	add	x14, x10, #0x2
  40cc0c:	cmp	x14, x8
  40cc10:	str	q0, [x11, x10, lsl #4]
  40cc14:	b.eq	40cca4 <wcrtomb@plt+0xa434>  // b.none
  40cc18:	sub	x8, x8, #0x2
  40cc1c:	ldr	x11, [x9]
  40cc20:	add	x10, x10, #0x1
  40cc24:	cmp	x8, x10
  40cc28:	add	x11, x11, x12
  40cc2c:	ldr	q0, [x11, #32]
  40cc30:	add	x12, x12, #0x10
  40cc34:	str	q0, [x11, #16]
  40cc38:	b.ne	40cc1c <wcrtomb@plt+0xa3ac>  // b.any
  40cc3c:	add	x13, x10, #0x1
  40cc40:	b	40cca4 <wcrtomb@plt+0xa434>
  40cc44:	cmn	x24, #0x1
  40cc48:	b.eq	40cc68 <wcrtomb@plt+0xa3f8>  // b.none
  40cc4c:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40cc50:	sdiv	x9, x9, x24
  40cc54:	cmp	x9, #0x10
  40cc58:	b.lt	40cbf0 <wcrtomb@plt+0xa380>  // b.tstop
  40cc5c:	lsl	x1, x24, #4
  40cc60:	cmp	x1, #0x7f
  40cc64:	b.gt	40cc74 <wcrtomb@plt+0xa404>
  40cc68:	mov	w9, #0x80                  	// #128
  40cc6c:	lsr	x24, x9, #4
  40cc70:	and	x1, x9, #0x7ffffffffffffff0
  40cc74:	cmp	x24, x19
  40cc78:	str	xzr, [x20]
  40cc7c:	b.ge	40cccc <wcrtomb@plt+0xa45c>  // b.tcont
  40cc80:	sub	x9, x19, x8
  40cc84:	adds	x24, x8, x9
  40cc88:	b.vs	40d2dc <wcrtomb@plt+0xaa6c>
  40cc8c:	tbnz	x24, #63, 40ccb0 <wcrtomb@plt+0xa440>
  40cc90:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  40cc94:	cmp	x24, x8
  40cc98:	b.le	40ccc8 <wcrtomb@plt+0xa458>
  40cc9c:	b	40d2dc <wcrtomb@plt+0xaa6c>
  40cca0:	mov	x13, x10
  40cca4:	mov	x8, x13
  40cca8:	str	x13, [x18]
  40ccac:	b	40c938 <wcrtomb@plt+0xa0c8>
  40ccb0:	cmn	x24, #0x1
  40ccb4:	b.eq	40ccc8 <wcrtomb@plt+0xa458>  // b.none
  40ccb8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40ccbc:	sdiv	x8, x8, x24
  40ccc0:	cmp	x8, #0x10
  40ccc4:	b.lt	40d2dc <wcrtomb@plt+0xaa6c>  // b.tstop
  40ccc8:	lsl	x1, x24, #4
  40cccc:	mov	x0, xzr
  40ccd0:	bl	417310 <wcrtomb@plt+0x14aa0>
  40ccd4:	str	x24, [x20]
  40ccd8:	str	x0, [x23]
  40ccdc:	ldr	x8, [sp, #64]
  40cce0:	madd	x8, x25, x26, x8
  40cce4:	str	x19, [x8, #8]
  40cce8:	cbz	x19, 40ccfc <wcrtomb@plt+0xa48c>
  40ccec:	ldr	x0, [x23]
  40ccf0:	ldur	x1, [x29, #-32]
  40ccf4:	lsl	x2, x19, #4
  40ccf8:	bl	402210 <memcpy@plt>
  40ccfc:	tbz	w27, #0, 40c850 <wcrtomb@plt+0x9fe0>
  40cd00:	ldur	x19, [x29, #-88]
  40cd04:	ldp	x18, x16, [sp, #40]
  40cd08:	ldr	x20, [sp, #64]
  40cd0c:	ldr	x0, [sp, #32]
  40cd10:	mov	w17, #0x18                  	// #24
  40cd14:	b	40c880 <wcrtomb@plt+0xa010>
  40cd18:	ldr	x8, [x19, #152]
  40cd1c:	str	x21, [x18]
  40cd20:	add	x16, x16, #0x1
  40cd24:	cmp	x16, x8
  40cd28:	b.lt	40cd40 <wcrtomb@plt+0xa4d0>  // b.tstop
  40cd2c:	b	40cd50 <wcrtomb@plt+0xa4e0>
  40cd30:	ldur	x19, [x29, #-88]
  40cd34:	add	x16, x16, #0x1
  40cd38:	cmp	x16, x8
  40cd3c:	b.ge	40cd50 <wcrtomb@plt+0xa4e0>  // b.tcont
  40cd40:	ldrb	w19, [x22, x16]
  40cd44:	tbnz	w19, #4, 40c808 <wcrtomb@plt+0x9f98>
  40cd48:	b	40cd30 <wcrtomb@plt+0xa4c0>
  40cd4c:	ldur	x19, [x29, #-88]
  40cd50:	lsr	x9, x8, #60
  40cd54:	cbnz	x9, 40d2dc <wcrtomb@plt+0xaa6c>
  40cd58:	lsl	x0, x8, #3
  40cd5c:	bl	417290 <wcrtomb@plt+0x14a20>
  40cd60:	str	xzr, [x0]
  40cd64:	ldr	x8, [x19, #152]
  40cd68:	mov	x23, x0
  40cd6c:	cmp	x8, #0x2
  40cd70:	b.lt	40cd88 <wcrtomb@plt+0xa518>  // b.tstop
  40cd74:	lsl	x8, x8, #3
  40cd78:	add	x0, x23, #0x8
  40cd7c:	sub	x2, x8, #0x8
  40cd80:	mov	w1, #0xff                  	// #255
  40cd84:	bl	402470 <memset@plt>
  40cd88:	ldr	x8, [x19, #176]
  40cd8c:	lsr	x9, x8, #60
  40cd90:	cbnz	x9, 40d2dc <wcrtomb@plt+0xaa6c>
  40cd94:	lsl	x0, x8, #3
  40cd98:	bl	417290 <wcrtomb@plt+0x14a20>
  40cd9c:	ldr	x8, [x19, #176]
  40cda0:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  40cda4:	movk	x9, #0x555, lsl #48
  40cda8:	cmp	x8, x9
  40cdac:	b.hi	40d2dc <wcrtomb@plt+0xaa6c>  // b.pmore
  40cdb0:	add	x8, x8, x8, lsl #1
  40cdb4:	mov	x24, x0
  40cdb8:	lsl	x0, x8, #3
  40cdbc:	bl	417290 <wcrtomb@plt+0x14a20>
  40cdc0:	ldr	x8, [x19, #176]
  40cdc4:	lsr	x9, x8, #61
  40cdc8:	cbnz	x9, 40d2dc <wcrtomb@plt+0xaa6c>
  40cdcc:	mov	x25, x0
  40cdd0:	lsl	x0, x8, #2
  40cdd4:	bl	417290 <wcrtomb@plt+0x14a20>
  40cdd8:	ldrb	w8, [x19, #1048]
  40cddc:	mov	x26, x0
  40cde0:	cbz	w8, 40d020 <wcrtomb@plt+0xa7b0>
  40cde4:	ldr	x0, [x19, #176]
  40cde8:	tbnz	x0, #63, 40d2dc <wcrtomb@plt+0xaa6c>
  40cdec:	bl	417290 <wcrtomb@plt+0x14a20>
  40cdf0:	mov	x27, x0
  40cdf4:	ldr	x8, [x19, #152]
  40cdf8:	cmp	x8, #0x1
  40cdfc:	b.lt	40d030 <wcrtomb@plt+0xa7c0>  // b.tstop
  40ce00:	mov	x8, xzr
  40ce04:	mov	x19, xzr
  40ce08:	mov	w20, #0x1                   	// #1
  40ce0c:	cbz	x27, 40cf44 <wcrtomb@plt+0xa6d4>
  40ce10:	cmn	x8, #0x1
  40ce14:	b.eq	40cee0 <wcrtomb@plt+0xa670>  // b.none
  40ce18:	ldur	x12, [x29, #-88]
  40ce1c:	mov	w11, #0x18                  	// #24
  40ce20:	ldr	x9, [x12, #144]
  40ce24:	ldr	x9, [x9, x19, lsl #3]
  40ce28:	str	x9, [x24, x8, lsl #3]
  40ce2c:	ldr	x9, [x12, #320]
  40ce30:	madd	x9, x19, x11, x9
  40ce34:	ldr	x10, [x9, #16]
  40ce38:	ldr	q0, [x9]
  40ce3c:	madd	x11, x8, x11, x25
  40ce40:	str	x10, [x11, #16]
  40ce44:	str	q0, [x11]
  40ce48:	ldr	x10, [x12, #336]
  40ce4c:	ldr	w10, [x10, x19, lsl #2]
  40ce50:	str	w10, [x26, x8, lsl #2]
  40ce54:	ldr	x10, [x12, #280]
  40ce58:	ldrb	w10, [x10, x19]
  40ce5c:	strb	w10, [x27, x8]
  40ce60:	ldr	x1, [x9, #8]
  40ce64:	cmp	x1, #0x0
  40ce68:	b.le	40ceac <wcrtomb@plt+0xa63c>
  40ce6c:	ldr	x0, [x9]
  40ce70:	mov	x9, x1
  40ce74:	mov	x8, x0
  40ce78:	b	40ce88 <wcrtomb@plt+0xa618>
  40ce7c:	subs	x9, x9, #0x1
  40ce80:	str	x10, [x8], #16
  40ce84:	b.eq	40ceb0 <wcrtomb@plt+0xa640>  // b.none
  40ce88:	ldr	x11, [x8]
  40ce8c:	ldr	x10, [x23, x11, lsl #3]
  40ce90:	cmn	x10, #0x1
  40ce94:	b.ne	40ce7c <wcrtomb@plt+0xa60c>  // b.any
  40ce98:	add	x12, x20, #0x1
  40ce9c:	str	x20, [x23, x11, lsl #3]
  40cea0:	mov	x10, x20
  40cea4:	mov	x20, x12
  40cea8:	b	40ce7c <wcrtomb@plt+0xa60c>
  40ceac:	ldr	x0, [x9]
  40ceb0:	adrp	x3, 410000 <wcrtomb@plt+0xd790>
  40ceb4:	mov	w2, #0x10                  	// #16
  40ceb8:	add	x3, x3, #0xabc
  40cebc:	bl	4022f0 <qsort@plt>
  40cec0:	ldur	x21, [x29, #-88]
  40cec4:	ldr	x8, [x21, #152]
  40cec8:	add	x19, x19, #0x1
  40cecc:	cmp	x19, x8
  40ced0:	b.ge	40d004 <wcrtomb@plt+0xa794>  // b.tcont
  40ced4:	ldr	x8, [x23, x19, lsl #3]
  40ced8:	cmn	x8, #0x1
  40cedc:	b.ne	40ce18 <wcrtomb@plt+0xa5a8>  // b.any
  40cee0:	ldur	x21, [x29, #-88]
  40cee4:	add	x9, x19, x19, lsl #1
  40cee8:	lsl	x28, x9, #3
  40ceec:	ldr	x8, [x21, #320]
  40cef0:	ldr	x0, [x8, x28]
  40cef4:	bl	402620 <free@plt>
  40cef8:	ldr	x8, [x21, #320]
  40cefc:	add	x8, x8, x28
  40cf00:	stp	xzr, xzr, [x8]
  40cf04:	ldr	x8, [x21, #152]
  40cf08:	add	x19, x19, #0x1
  40cf0c:	cmp	x19, x8
  40cf10:	b.lt	40ced4 <wcrtomb@plt+0xa664>  // b.tstop
  40cf14:	b	40d004 <wcrtomb@plt+0xa794>
  40cf18:	ldr	x0, [x9]
  40cf1c:	adrp	x3, 410000 <wcrtomb@plt+0xd790>
  40cf20:	mov	w2, #0x10                  	// #16
  40cf24:	add	x3, x3, #0xabc
  40cf28:	bl	4022f0 <qsort@plt>
  40cf2c:	ldur	x21, [x29, #-88]
  40cf30:	ldr	x8, [x21, #152]
  40cf34:	add	x19, x19, #0x1
  40cf38:	cmp	x19, x8
  40cf3c:	b.ge	40d004 <wcrtomb@plt+0xa794>  // b.tcont
  40cf40:	ldr	x8, [x23, x19, lsl #3]
  40cf44:	cmn	x8, #0x1
  40cf48:	b.eq	40cfd0 <wcrtomb@plt+0xa760>  // b.none
  40cf4c:	ldur	x12, [x29, #-88]
  40cf50:	mov	w11, #0x18                  	// #24
  40cf54:	ldr	x9, [x12, #144]
  40cf58:	ldr	x9, [x9, x19, lsl #3]
  40cf5c:	str	x9, [x24, x8, lsl #3]
  40cf60:	ldr	x9, [x12, #320]
  40cf64:	madd	x9, x19, x11, x9
  40cf68:	ldp	x1, x10, [x9, #8]
  40cf6c:	ldr	q0, [x9]
  40cf70:	madd	x11, x8, x11, x25
  40cf74:	str	x10, [x11, #16]
  40cf78:	str	q0, [x11]
  40cf7c:	ldr	x10, [x12, #336]
  40cf80:	cmp	x1, #0x0
  40cf84:	ldr	w10, [x10, x19, lsl #2]
  40cf88:	str	w10, [x26, x8, lsl #2]
  40cf8c:	b.le	40cf18 <wcrtomb@plt+0xa6a8>
  40cf90:	ldr	x0, [x9]
  40cf94:	mov	x9, x1
  40cf98:	mov	x8, x0
  40cf9c:	b	40cfac <wcrtomb@plt+0xa73c>
  40cfa0:	subs	x9, x9, #0x1
  40cfa4:	str	x10, [x8], #16
  40cfa8:	b.eq	40cf1c <wcrtomb@plt+0xa6ac>  // b.none
  40cfac:	ldr	x11, [x8]
  40cfb0:	ldr	x10, [x23, x11, lsl #3]
  40cfb4:	cmn	x10, #0x1
  40cfb8:	b.ne	40cfa0 <wcrtomb@plt+0xa730>  // b.any
  40cfbc:	add	x12, x20, #0x1
  40cfc0:	str	x20, [x23, x11, lsl #3]
  40cfc4:	mov	x10, x20
  40cfc8:	mov	x20, x12
  40cfcc:	b	40cfa0 <wcrtomb@plt+0xa730>
  40cfd0:	ldur	x21, [x29, #-88]
  40cfd4:	add	x9, x19, x19, lsl #1
  40cfd8:	lsl	x28, x9, #3
  40cfdc:	ldr	x8, [x21, #320]
  40cfe0:	ldr	x0, [x8, x28]
  40cfe4:	bl	402620 <free@plt>
  40cfe8:	ldr	x8, [x21, #320]
  40cfec:	add	x8, x8, x28
  40cff0:	stp	xzr, xzr, [x8]
  40cff4:	ldr	x8, [x21, #152]
  40cff8:	add	x19, x19, #0x1
  40cffc:	cmp	x19, x8
  40d000:	b.lt	40cf40 <wcrtomb@plt+0xa6d0>  // b.tstop
  40d004:	ldur	x19, [x29, #-88]
  40d008:	cmp	x20, #0x1
  40d00c:	b.lt	40d0e8 <wcrtomb@plt+0xa878>  // b.tstop
  40d010:	mov	x8, xzr
  40d014:	mov	x9, xzr
  40d018:	cbnz	x27, 40d040 <wcrtomb@plt+0xa7d0>
  40d01c:	b	40d09c <wcrtomb@plt+0xa82c>
  40d020:	mov	x27, xzr
  40d024:	ldr	x8, [x19, #152]
  40d028:	cmp	x8, #0x1
  40d02c:	b.ge	40ce00 <wcrtomb@plt+0xa590>  // b.tcont
  40d030:	mov	w20, #0x1                   	// #1
  40d034:	mov	x8, xzr
  40d038:	mov	x9, xzr
  40d03c:	cbz	x27, 40d09c <wcrtomb@plt+0xa82c>
  40d040:	lsl	x10, x9, #3
  40d044:	ldr	x11, [x19, #144]
  40d048:	ldr	x12, [x24, x10]
  40d04c:	str	x12, [x11, x10]
  40d050:	add	x10, x25, x8
  40d054:	ldr	x11, [x19, #320]
  40d058:	ldr	x12, [x10, #16]
  40d05c:	ldr	q0, [x10]
  40d060:	lsl	x10, x9, #2
  40d064:	add	x11, x11, x8
  40d068:	str	x12, [x11, #16]
  40d06c:	str	q0, [x11]
  40d070:	ldr	w11, [x26, x10]
  40d074:	ldr	x12, [x19, #336]
  40d078:	add	x8, x8, #0x18
  40d07c:	str	w11, [x12, x10]
  40d080:	ldrb	w10, [x27, x9]
  40d084:	ldr	x11, [x19, #280]
  40d088:	strb	w10, [x11, x9]
  40d08c:	add	x9, x9, #0x1
  40d090:	cmp	x20, x9
  40d094:	b.ne	40d040 <wcrtomb@plt+0xa7d0>  // b.any
  40d098:	b	40d0e8 <wcrtomb@plt+0xa878>
  40d09c:	lsl	x10, x9, #3
  40d0a0:	ldr	x11, [x19, #144]
  40d0a4:	ldr	x12, [x24, x10]
  40d0a8:	str	x12, [x11, x10]
  40d0ac:	add	x10, x25, x8
  40d0b0:	ldr	x11, [x19, #320]
  40d0b4:	ldr	x12, [x10, #16]
  40d0b8:	ldr	q0, [x10]
  40d0bc:	lsl	x10, x9, #2
  40d0c0:	add	x11, x11, x8
  40d0c4:	str	x12, [x11, #16]
  40d0c8:	str	q0, [x11]
  40d0cc:	ldr	w11, [x26, x10]
  40d0d0:	ldr	x12, [x19, #336]
  40d0d4:	add	x9, x9, #0x1
  40d0d8:	cmp	x20, x9
  40d0dc:	add	x8, x8, #0x18
  40d0e0:	str	w11, [x12, x10]
  40d0e4:	b.ne	40d09c <wcrtomb@plt+0xa82c>  // b.any
  40d0e8:	mov	x0, x24
  40d0ec:	str	x20, [x19, #176]
  40d0f0:	str	x20, [x19, #152]
  40d0f4:	bl	402620 <free@plt>
  40d0f8:	mov	x0, x25
  40d0fc:	bl	402620 <free@plt>
  40d100:	mov	x0, x26
  40d104:	bl	402620 <free@plt>
  40d108:	mov	x0, x27
  40d10c:	bl	402620 <free@plt>
  40d110:	mov	x0, x23
  40d114:	bl	402620 <free@plt>
  40d118:	ldur	x0, [x29, #-32]
  40d11c:	bl	402620 <free@plt>
  40d120:	mov	x0, x22
  40d124:	bl	402620 <free@plt>
  40d128:	mov	w0, #0x10                  	// #16
  40d12c:	bl	417290 <wcrtomb@plt+0x14a20>
  40d130:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40d134:	ldr	q0, [x8, #1840]
  40d138:	mov	w8, #0x1                   	// #1
  40d13c:	dup	v1.2d, x8
  40d140:	stur	x0, [x29, #-56]
  40d144:	stur	q1, [x29, #-48]
  40d148:	str	q0, [x0]
  40d14c:	ldr	x8, [x19, #152]
  40d150:	lsr	x9, x8, #61
  40d154:	cbnz	x9, 40d2dc <wcrtomb@plt+0xaa6c>
  40d158:	mov	x22, x0
  40d15c:	lsl	x0, x8, #2
  40d160:	bl	417290 <wcrtomb@plt+0x14a20>
  40d164:	ldr	x8, [x19, #152]
  40d168:	str	x0, [x19, #344]
  40d16c:	cmp	x8, #0x1
  40d170:	b.lt	40d240 <wcrtomb@plt+0xa9d0>  // b.tstop
  40d174:	mov	x8, xzr
  40d178:	mov	w9, #0x49                  	// #73
  40d17c:	mov	w10, #0x18                  	// #24
  40d180:	b	40d198 <wcrtomb@plt+0xa928>
  40d184:	ldr	x11, [x19, #152]
  40d188:	ldr	x0, [x19, #344]
  40d18c:	add	x8, x8, #0x1
  40d190:	cmp	x8, x11
  40d194:	b.ge	40d240 <wcrtomb@plt+0xa9d0>  // b.tcont
  40d198:	lsl	x12, x8, #2
  40d19c:	str	wzr, [x0, x12]
  40d1a0:	ldr	x13, [x19, #336]
  40d1a4:	ldr	w11, [x13, x12]
  40d1a8:	eor	w11, w11, w11, lsr #2
  40d1ac:	tst	w11, w9
  40d1b0:	cset	w11, ne  // ne = any
  40d1b4:	lsl	w11, w11, #2
  40d1b8:	str	w11, [x0, x12]
  40d1bc:	ldr	w12, [x13, x12]
  40d1c0:	eor	w12, w12, w12, lsr #1
  40d1c4:	tst	w12, w9
  40d1c8:	b.eq	40d1d4 <wcrtomb@plt+0xa964>  // b.none
  40d1cc:	orr	w11, w11, #0x2
  40d1d0:	str	w11, [x0, x8, lsl #2]
  40d1d4:	ldr	x14, [x19, #320]
  40d1d8:	madd	x12, x8, x10, x14
  40d1dc:	ldr	x12, [x12, #8]
  40d1e0:	cmp	x12, #0x1
  40d1e4:	b.lt	40d184 <wcrtomb@plt+0xa914>  // b.tstop
  40d1e8:	mul	x15, x8, x10
  40d1ec:	ldr	x14, [x14, x15]
  40d1f0:	mov	x13, xzr
  40d1f4:	add	x14, x14, #0x8
  40d1f8:	b	40d20c <wcrtomb@plt+0xa99c>
  40d1fc:	add	x13, x13, #0x1
  40d200:	cmp	x13, x12
  40d204:	add	x14, x14, #0x10
  40d208:	b.ge	40d184 <wcrtomb@plt+0xa914>  // b.tcont
  40d20c:	ldr	w15, [x14]
  40d210:	eor	w16, w15, w15, lsr #2
  40d214:	tst	w16, w9
  40d218:	b.eq	40d228 <wcrtomb@plt+0xa9b8>  // b.none
  40d21c:	orr	w11, w11, #0x4
  40d220:	str	w11, [x0, x8, lsl #2]
  40d224:	ldr	w15, [x14]
  40d228:	eor	w15, w15, w15, lsr #1
  40d22c:	tst	w15, w9
  40d230:	b.eq	40d1fc <wcrtomb@plt+0xa98c>  // b.none
  40d234:	orr	w11, w11, #0x2
  40d238:	str	w11, [x0, x8, lsl #2]
  40d23c:	b	40d1fc <wcrtomb@plt+0xa98c>
  40d240:	ldr	x8, [x22]
  40d244:	ldr	w19, [x0, x8, lsl #2]
  40d248:	tbz	w19, #2, 40d25c <wcrtomb@plt+0xa9ec>
  40d24c:	ldur	x0, [x29, #-88]
  40d250:	sub	x1, x29, #0x38
  40d254:	mov	w2, #0x4                   	// #4
  40d258:	bl	4103e0 <wcrtomb@plt+0xdb70>
  40d25c:	ldur	x20, [x29, #-88]
  40d260:	eor	w2, w19, #0x7
  40d264:	sub	x1, x29, #0x38
  40d268:	mov	x0, x20
  40d26c:	bl	4103e0 <wcrtomb@plt+0xdb70>
  40d270:	sxtw	x8, w0
  40d274:	str	w0, [x20, #364]
  40d278:	str	x8, [x20, #400]
  40d27c:	tbz	w19, #1, 40d294 <wcrtomb@plt+0xaa24>
  40d280:	sub	x1, x29, #0x38
  40d284:	mov	w2, #0x2                   	// #2
  40d288:	mov	x0, x20
  40d28c:	bl	4103e0 <wcrtomb@plt+0xdb70>
  40d290:	str	w0, [x20, #364]
  40d294:	add	w8, w0, #0x1
  40d298:	ldr	x0, [sp, #16]
  40d29c:	str	w8, [x20, #364]
  40d2a0:	str	wzr, [x20, #360]
  40d2a4:	bl	402620 <free@plt>
  40d2a8:	ldr	x0, [sp, #8]
  40d2ac:	bl	402620 <free@plt>
  40d2b0:	ldur	x0, [x29, #-80]
  40d2b4:	bl	402620 <free@plt>
  40d2b8:	mov	x0, x22
  40d2bc:	ldp	x20, x19, [sp, #288]
  40d2c0:	ldp	x22, x21, [sp, #272]
  40d2c4:	ldp	x24, x23, [sp, #256]
  40d2c8:	ldp	x26, x25, [sp, #240]
  40d2cc:	ldp	x28, x27, [sp, #224]
  40d2d0:	ldp	x29, x30, [sp, #208]
  40d2d4:	add	sp, sp, #0x130
  40d2d8:	b	402620 <free@plt>
  40d2dc:	bl	41757c <wcrtomb@plt+0x14d0c>
  40d2e0:	mov	x0, x1
  40d2e4:	mov	w8, #0x1                   	// #1
  40d2e8:	strb	w8, [x5]
  40d2ec:	ret
  40d2f0:	stp	x29, x30, [sp, #-48]!
  40d2f4:	stp	x20, x19, [sp, #32]
  40d2f8:	mov	x19, x0
  40d2fc:	ldr	x0, [x0]
  40d300:	str	x21, [sp, #16]
  40d304:	mov	x29, sp
  40d308:	bl	402620 <free@plt>
  40d30c:	ldr	x0, [x19, #144]
  40d310:	bl	402620 <free@plt>
  40d314:	ldrb	w8, [x19, #1048]
  40d318:	cbz	w8, 40d36c <wcrtomb@plt+0xaafc>
  40d31c:	ldr	x0, [x19, #280]
  40d320:	bl	402620 <free@plt>
  40d324:	ldr	x0, [x19, #96]
  40d328:	bl	402620 <free@plt>
  40d32c:	ldr	x0, [x19, #408]
  40d330:	bl	402620 <free@plt>
  40d334:	ldr	x8, [x19, #432]
  40d338:	cbz	x8, 40d36c <wcrtomb@plt+0xaafc>
  40d33c:	ldr	x9, [x19, #352]
  40d340:	tbnz	x9, #63, 40d364 <wcrtomb@plt+0xaaf4>
  40d344:	mov	x20, #0xffffffffffffffff    	// #-1
  40d348:	ldr	x0, [x8, x20, lsl #3]
  40d34c:	bl	402620 <free@plt>
  40d350:	ldr	x9, [x19, #352]
  40d354:	ldr	x8, [x19, #432]
  40d358:	add	x20, x20, #0x1
  40d35c:	cmp	x20, x9
  40d360:	b.lt	40d348 <wcrtomb@plt+0xaad8>  // b.tstop
  40d364:	sub	x0, x8, #0x10
  40d368:	bl	402620 <free@plt>
  40d36c:	ldr	x0, [x19, #336]
  40d370:	bl	402620 <free@plt>
  40d374:	ldr	x0, [x19, #344]
  40d378:	bl	402620 <free@plt>
  40d37c:	ldr	x8, [x19, #304]
  40d380:	cmp	x8, #0x1
  40d384:	b.lt	40d3c4 <wcrtomb@plt+0xab54>  // b.tstop
  40d388:	mov	x20, xzr
  40d38c:	mov	x21, xzr
  40d390:	ldr	x8, [x19, #296]
  40d394:	add	x8, x8, x20
  40d398:	ldr	x0, [x8, #8]
  40d39c:	bl	402620 <free@plt>
  40d3a0:	ldr	x8, [x19, #296]
  40d3a4:	add	x8, x8, x20
  40d3a8:	ldr	x0, [x8, #48]
  40d3ac:	bl	402620 <free@plt>
  40d3b0:	ldr	x8, [x19, #304]
  40d3b4:	add	x21, x21, #0x1
  40d3b8:	add	x20, x20, #0x50
  40d3bc:	cmp	x21, x8
  40d3c0:	b.lt	40d390 <wcrtomb@plt+0xab20>  // b.tstop
  40d3c4:	ldr	x0, [x19, #296]
  40d3c8:	bl	402620 <free@plt>
  40d3cc:	ldr	x0, [x19, #320]
  40d3d0:	cbz	x0, 40d424 <wcrtomb@plt+0xabb4>
  40d3d4:	ldr	x8, [x19, #152]
  40d3d8:	cmp	x8, #0x1
  40d3dc:	b.lt	40d420 <wcrtomb@plt+0xabb0>  // b.tstop
  40d3e0:	ldr	x0, [x0]
  40d3e4:	bl	402620 <free@plt>
  40d3e8:	ldr	x8, [x19, #152]
  40d3ec:	cmp	x8, #0x2
  40d3f0:	b.lt	40d41c <wcrtomb@plt+0xabac>  // b.tstop
  40d3f4:	mov	w20, #0x1                   	// #1
  40d3f8:	mov	w21, #0x18                  	// #24
  40d3fc:	ldr	x8, [x19, #320]
  40d400:	ldr	x0, [x8, x21]
  40d404:	bl	402620 <free@plt>
  40d408:	ldr	x8, [x19, #152]
  40d40c:	add	x20, x20, #0x1
  40d410:	add	x21, x21, #0x18
  40d414:	cmp	x20, x8
  40d418:	b.lt	40d3fc <wcrtomb@plt+0xab8c>  // b.tstop
  40d41c:	ldr	x0, [x19, #320]
  40d420:	bl	402620 <free@plt>
  40d424:	ldr	x8, [x19, #368]
  40d428:	cbz	x8, 40d488 <wcrtomb@plt+0xac18>
  40d42c:	ldr	x9, [x19, #352]
  40d430:	cmp	x9, #0x1
  40d434:	b.lt	40d468 <wcrtomb@plt+0xabf8>  // b.tstop
  40d438:	mov	x20, xzr
  40d43c:	lsl	x21, x20, #3
  40d440:	ldr	x0, [x8, x21]
  40d444:	bl	402620 <free@plt>
  40d448:	ldr	x8, [x19, #376]
  40d44c:	ldr	x0, [x8, x21]
  40d450:	bl	402620 <free@plt>
  40d454:	ldr	x9, [x19, #352]
  40d458:	ldr	x8, [x19, #368]
  40d45c:	add	x20, x20, #0x1
  40d460:	cmp	x20, x9
  40d464:	b.lt	40d43c <wcrtomb@plt+0xabcc>  // b.tstop
  40d468:	sub	x0, x8, #0x10
  40d46c:	bl	402620 <free@plt>
  40d470:	ldr	x0, [x19, #376]
  40d474:	bl	402620 <free@plt>
  40d478:	ldr	x0, [x19, #392]
  40d47c:	bl	402620 <free@plt>
  40d480:	ldr	x0, [x19, #384]
  40d484:	bl	402620 <free@plt>
  40d488:	ldr	x0, [x19, #288]
  40d48c:	cbz	x0, 40d4a8 <wcrtomb@plt+0xac38>
  40d490:	bl	40d2f0 <wcrtomb@plt+0xaa80>
  40d494:	ldr	x0, [x19, #288]
  40d498:	ldp	x20, x19, [sp, #32]
  40d49c:	ldr	x21, [sp, #16]
  40d4a0:	ldp	x29, x30, [sp], #48
  40d4a4:	b	402620 <free@plt>
  40d4a8:	ldp	x20, x19, [sp, #32]
  40d4ac:	ldr	x21, [sp, #16]
  40d4b0:	ldp	x29, x30, [sp], #48
  40d4b4:	ret
  40d4b8:	sub	sp, sp, #0xa0
  40d4bc:	stp	x29, x30, [sp, #64]
  40d4c0:	stp	x28, x27, [sp, #80]
  40d4c4:	stp	x26, x25, [sp, #96]
  40d4c8:	stp	x24, x23, [sp, #112]
  40d4cc:	stp	x22, x21, [sp, #128]
  40d4d0:	stp	x20, x19, [sp, #144]
  40d4d4:	ldr	x21, [x0, #152]
  40d4d8:	add	x29, sp, #0x40
  40d4dc:	cmp	x21, #0x3
  40d4e0:	b.lt	40dfcc <wcrtomb@plt+0xb75c>  // b.tstop
  40d4e4:	stp	wzr, wzr, [sp, #20]
  40d4e8:	ldrb	w9, [x0, #1048]
  40d4ec:	ldrb	w8, [x0, #457]
  40d4f0:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40d4f4:	mov	x24, x0
  40d4f8:	eor	w9, w9, #0x1
  40d4fc:	mov	x25, xzr
  40d500:	mov	w27, #0x1                   	// #1
  40d504:	mov	w23, #0x2                   	// #2
  40d508:	add	x28, x28, #0xd75
  40d50c:	and	w8, w9, w8
  40d510:	str	w8, [sp, #28]
  40d514:	stur	x0, [x29, #-16]
  40d518:	b	40d57c <wcrtomb@plt+0xad0c>
  40d51c:	mov	w0, #0x30                  	// #48
  40d520:	bl	417290 <wcrtomb@plt+0x14a20>
  40d524:	mov	x22, x0
  40d528:	mov	w0, #0x8                   	// #8
  40d52c:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d530:	str	x0, [x22]
  40d534:	mov	w0, #0x2                   	// #2
  40d538:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d53c:	str	x0, [x22, #8]
  40d540:	mov	w0, #0x2                   	// #2
  40d544:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d548:	str	x0, [x22, #16]
  40d54c:	mov	w0, #0x2                   	// #2
  40d550:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d554:	str	x0, [x22, #24]
  40d558:	strh	wzr, [x22, #32]
  40d55c:	str	x25, [x22, #40]
  40d560:	ldur	x24, [x29, #-16]
  40d564:	mov	x25, x22
  40d568:	ldr	x21, [x24, #152]
  40d56c:	add	x23, x27, #0x2
  40d570:	add	x27, x27, #0x1
  40d574:	cmp	x23, x21
  40d578:	b.ge	40e074 <wcrtomb@plt+0xb804>  // b.tcont
  40d57c:	ldr	x24, [x24, #144]
  40d580:	add	x22, x24, x27, lsl #3
  40d584:	ldr	x19, [x22]
  40d588:	sub	x8, x19, #0x100
  40d58c:	cmp	x8, #0x13
  40d590:	b.hi	40d5f4 <wcrtomb@plt+0xad84>  // b.pmore
  40d594:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40d598:	add	x11, x11, #0x47a
  40d59c:	adr	x9, 40d51c <wcrtomb@plt+0xacac>
  40d5a0:	ldrh	w10, [x11, x8, lsl #1]
  40d5a4:	add	x9, x9, x10, lsl #2
  40d5a8:	br	x9
  40d5ac:	ldr	x8, [x25]
  40d5b0:	ldr	x0, [x8]
  40d5b4:	cbz	x0, 40d5cc <wcrtomb@plt+0xad5c>
  40d5b8:	add	x19, x8, #0x8
  40d5bc:	bl	402620 <free@plt>
  40d5c0:	ldr	x0, [x19], #8
  40d5c4:	cbnz	x0, 40d5bc <wcrtomb@plt+0xad4c>
  40d5c8:	ldr	x8, [x25]
  40d5cc:	str	xzr, [x8]
  40d5d0:	ldr	x8, [x25, #24]
  40d5d4:	ldur	x24, [x29, #-16]
  40d5d8:	strb	wzr, [x8]
  40d5dc:	ldr	x8, [x25, #16]
  40d5e0:	strb	wzr, [x8]
  40d5e4:	ldr	x8, [x25, #8]
  40d5e8:	strb	wzr, [x8]
  40d5ec:	strh	wzr, [x25, #32]
  40d5f0:	b	40d568 <wcrtomb@plt+0xacf8>
  40d5f4:	cmn	x19, #0x1
  40d5f8:	b.eq	40e020 <wcrtomb@plt+0xb7b0>  // b.none
  40d5fc:	cbz	x19, 40e10c <wcrtomb@plt+0xb89c>
  40d600:	str	x25, [sp, #32]
  40d604:	subs	x25, x19, #0x114
  40d608:	b.lt	40dd9c <wcrtomb@plt+0xb52c>  // b.tstop
  40d60c:	ldur	x8, [x29, #-16]
  40d610:	mov	x19, xzr
  40d614:	ldr	x26, [x8]
  40d618:	ubfx	x8, x19, #6, #26
  40d61c:	add	x9, x26, x25, lsl #5
  40d620:	ldr	x8, [x9, w8, uxtw #3]
  40d624:	lsr	x8, x8, x19
  40d628:	tbnz	w8, #0, 40dcac <wcrtomb@plt+0xb43c>
  40d62c:	add	x19, x19, #0x1
  40d630:	cmp	w19, #0x100
  40d634:	b.ne	40d618 <wcrtomb@plt+0xada8>  // b.any
  40d638:	mov	w0, #0x30                  	// #48
  40d63c:	bl	417290 <wcrtomb@plt+0x14a20>
  40d640:	mov	x25, x0
  40d644:	mov	w0, #0x8                   	// #8
  40d648:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d64c:	str	x0, [x25]
  40d650:	mov	w0, #0x2                   	// #2
  40d654:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d658:	str	x0, [x25, #8]
  40d65c:	mov	w0, #0x2                   	// #2
  40d660:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d664:	str	x0, [x25, #16]
  40d668:	mov	w0, #0x2                   	// #2
  40d66c:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d670:	ldr	x8, [sp, #32]
  40d674:	ldur	x24, [x29, #-16]
  40d678:	str	x0, [x25, #24]
  40d67c:	strh	wzr, [x25, #32]
  40d680:	str	x8, [x25, #40]
  40d684:	b	40d568 <wcrtomb@plt+0xacf8>
  40d688:	ldr	x8, [x25]
  40d68c:	ldr	x21, [x25, #40]
  40d690:	ldr	x23, [x8]
  40d694:	ldr	x22, [x21]
  40d698:	cbz	x23, 40d6c4 <wcrtomb@plt+0xae54>
  40d69c:	add	x19, x8, #0x8
  40d6a0:	mov	x0, x23
  40d6a4:	bl	402270 <strlen@plt>
  40d6a8:	mov	x2, x0
  40d6ac:	mov	x0, x22
  40d6b0:	mov	x1, x23
  40d6b4:	bl	40e1c8 <wcrtomb@plt+0xb958>
  40d6b8:	ldr	x23, [x19], #8
  40d6bc:	mov	x22, x0
  40d6c0:	cbnz	x23, 40d6a0 <wcrtomb@plt+0xae30>
  40d6c4:	ldr	x0, [x21, #16]
  40d6c8:	str	x22, [x21]
  40d6cc:	ldrb	w8, [x0]
  40d6d0:	cbz	w8, 40d744 <wcrtomb@plt+0xaed4>
  40d6d4:	ldr	x22, [x25, #8]
  40d6d8:	ldrb	w8, [x22]
  40d6dc:	cbz	w8, 40d744 <wcrtomb@plt+0xaed4>
  40d6e0:	bl	402270 <strlen@plt>
  40d6e4:	mov	x23, x0
  40d6e8:	mov	x0, x22
  40d6ec:	bl	402270 <strlen@plt>
  40d6f0:	add	x24, x0, x23
  40d6f4:	mov	x22, x0
  40d6f8:	mov	x0, x24
  40d6fc:	bl	417290 <wcrtomb@plt+0x14a20>
  40d700:	ldr	x1, [x21, #16]
  40d704:	mov	x2, x23
  40d708:	mov	x19, x25
  40d70c:	mov	x25, x0
  40d710:	bl	402210 <memcpy@plt>
  40d714:	ldr	x1, [x19, #8]
  40d718:	add	x0, x25, x23
  40d71c:	mov	x2, x22
  40d720:	bl	402210 <memcpy@plt>
  40d724:	ldr	x0, [x21]
  40d728:	mov	x1, x25
  40d72c:	mov	x2, x24
  40d730:	bl	40e1c8 <wcrtomb@plt+0xb958>
  40d734:	str	x0, [x21]
  40d738:	mov	x0, x25
  40d73c:	mov	x25, x19
  40d740:	bl	402620 <free@plt>
  40d744:	ldr	x8, [x21, #24]
  40d748:	ldrb	w8, [x8]
  40d74c:	cbz	w8, 40d7a4 <wcrtomb@plt+0xaf34>
  40d750:	ldr	x23, [x25, #8]
  40d754:	ldr	x22, [x21, #8]
  40d758:	mov	x0, x23
  40d75c:	bl	402270 <strlen@plt>
  40d760:	cbz	x0, 40d7a0 <wcrtomb@plt+0xaf30>
  40d764:	mov	x24, x0
  40d768:	mov	x0, x22
  40d76c:	bl	402270 <strlen@plt>
  40d770:	add	x24, x24, #0x1
  40d774:	mov	x19, x25
  40d778:	mov	x25, x0
  40d77c:	add	x1, x0, x24
  40d780:	mov	x0, x22
  40d784:	bl	417310 <wcrtomb@plt+0x14aa0>
  40d788:	mov	x22, x0
  40d78c:	add	x0, x0, x25
  40d790:	mov	x1, x23
  40d794:	mov	x2, x24
  40d798:	mov	x25, x19
  40d79c:	bl	402210 <memcpy@plt>
  40d7a0:	str	x22, [x21, #8]
  40d7a4:	ldr	x8, [x25, #24]
  40d7a8:	ldrb	w8, [x8]
  40d7ac:	cbnz	w8, 40d7b8 <wcrtomb@plt+0xaf48>
  40d7b0:	ldr	x8, [x21, #16]
  40d7b4:	strb	wzr, [x8]
  40d7b8:	ldr	x22, [x25, #16]
  40d7bc:	ldr	x23, [x21, #16]
  40d7c0:	mov	x0, x22
  40d7c4:	bl	402270 <strlen@plt>
  40d7c8:	cbz	x0, 40d808 <wcrtomb@plt+0xaf98>
  40d7cc:	mov	x24, x0
  40d7d0:	mov	x0, x23
  40d7d4:	bl	402270 <strlen@plt>
  40d7d8:	add	x24, x24, #0x1
  40d7dc:	mov	x19, x25
  40d7e0:	mov	x25, x0
  40d7e4:	add	x1, x0, x24
  40d7e8:	mov	x0, x23
  40d7ec:	bl	417310 <wcrtomb@plt+0x14aa0>
  40d7f0:	mov	x23, x0
  40d7f4:	add	x0, x0, x25
  40d7f8:	mov	x1, x22
  40d7fc:	mov	x2, x24
  40d800:	mov	x25, x19
  40d804:	bl	402210 <memcpy@plt>
  40d808:	ldr	x22, [x21, #24]
  40d80c:	str	x23, [x21, #16]
  40d810:	ldrb	w8, [x22]
  40d814:	cbnz	w8, 40d820 <wcrtomb@plt+0xafb0>
  40d818:	ldrb	w8, [x21, #32]
  40d81c:	cbz	w8, 40dd14 <wcrtomb@plt+0xb4a4>
  40d820:	ldr	x23, [x25, #24]
  40d824:	ldrb	w8, [x23]
  40d828:	cbnz	w8, 40d834 <wcrtomb@plt+0xafc4>
  40d82c:	ldrb	w8, [x25, #33]
  40d830:	cbz	w8, 40dd14 <wcrtomb@plt+0xb4a4>
  40d834:	mov	x0, x23
  40d838:	bl	402270 <strlen@plt>
  40d83c:	cbz	x0, 40d87c <wcrtomb@plt+0xb00c>
  40d840:	mov	x24, x0
  40d844:	mov	x0, x22
  40d848:	bl	402270 <strlen@plt>
  40d84c:	add	x24, x24, #0x1
  40d850:	mov	x19, x25
  40d854:	mov	x25, x0
  40d858:	add	x1, x0, x24
  40d85c:	mov	x0, x22
  40d860:	bl	417310 <wcrtomb@plt+0x14aa0>
  40d864:	mov	x22, x0
  40d868:	add	x0, x0, x25
  40d86c:	mov	x1, x23
  40d870:	mov	x2, x24
  40d874:	mov	x25, x19
  40d878:	bl	402210 <memcpy@plt>
  40d87c:	str	x22, [x21, #24]
  40d880:	ldur	x24, [x29, #-16]
  40d884:	ldrb	w8, [x25, #33]
  40d888:	strb	w8, [x21, #33]
  40d88c:	ldr	x8, [x25]
  40d890:	ldr	x0, [x8]
  40d894:	cbnz	x0, 40dd34 <wcrtomb@plt+0xb4c4>
  40d898:	b	40dd48 <wcrtomb@plt+0xb4d8>
  40d89c:	ldr	x8, [x25, #24]
  40d8a0:	ldur	x24, [x29, #-16]
  40d8a4:	strb	wzr, [x8]
  40d8a8:	b	40d568 <wcrtomb@plt+0xacf8>
  40d8ac:	mov	w0, #0x30                  	// #48
  40d8b0:	bl	417290 <wcrtomb@plt+0x14a20>
  40d8b4:	mov	x22, x0
  40d8b8:	mov	w0, #0x8                   	// #8
  40d8bc:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d8c0:	str	x0, [x22]
  40d8c4:	mov	w0, #0x2                   	// #2
  40d8c8:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d8cc:	str	x0, [x22, #8]
  40d8d0:	mov	w0, #0x2                   	// #2
  40d8d4:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d8d8:	str	x0, [x22, #16]
  40d8dc:	mov	w0, #0x2                   	// #2
  40d8e0:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d8e4:	mov	w8, #0x100                 	// #256
  40d8e8:	strh	w8, [x22, #32]
  40d8ec:	mov	w8, #0x1                   	// #1
  40d8f0:	str	x0, [x22, #24]
  40d8f4:	str	x25, [x22, #40]
  40d8f8:	str	w8, [sp, #20]
  40d8fc:	b	40d560 <wcrtomb@plt+0xacf0>
  40d900:	ldr	x19, [x25, #40]
  40d904:	ldr	x1, [x25, #24]
  40d908:	str	x27, [sp, #8]
  40d90c:	ldr	x22, [x19, #24]
  40d910:	mov	x0, x22
  40d914:	bl	402600 <strcmp@plt>
  40d918:	cbz	w0, 40d988 <wcrtomb@plt+0xb118>
  40d91c:	strb	wzr, [x22]
  40d920:	strh	wzr, [x19, #32]
  40d924:	ldr	x8, [x19, #8]
  40d928:	ldrb	w10, [x8]
  40d92c:	cbnz	w10, 40d9b4 <wcrtomb@plt+0xb144>
  40d930:	b	40d9e8 <wcrtomb@plt+0xb178>
  40d934:	mov	w0, #0x30                  	// #48
  40d938:	bl	417290 <wcrtomb@plt+0x14a20>
  40d93c:	mov	x22, x0
  40d940:	mov	w0, #0x8                   	// #8
  40d944:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d948:	str	x0, [x22]
  40d94c:	mov	w0, #0x2                   	// #2
  40d950:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d954:	str	x0, [x22, #8]
  40d958:	mov	w0, #0x2                   	// #2
  40d95c:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d960:	str	x0, [x22, #16]
  40d964:	mov	w0, #0x2                   	// #2
  40d968:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40d96c:	mov	w9, #0x1                   	// #1
  40d970:	mov	w8, #0x1                   	// #1
  40d974:	str	x0, [x22, #24]
  40d978:	str	x25, [x22, #40]
  40d97c:	str	w8, [sp, #24]
  40d980:	strh	w9, [x22, #32]
  40d984:	b	40d560 <wcrtomb@plt+0xacf0>
  40d988:	ldrb	w8, [x25, #32]
  40d98c:	ldrb	w9, [x19, #32]
  40d990:	and	w8, w9, w8
  40d994:	strb	w8, [x19, #32]
  40d998:	ldrb	w8, [x25, #33]
  40d99c:	ldrb	w9, [x19, #33]
  40d9a0:	and	w8, w9, w8
  40d9a4:	strb	w8, [x19, #33]
  40d9a8:	ldr	x8, [x19, #8]
  40d9ac:	ldrb	w10, [x8]
  40d9b0:	cbz	w10, 40d9e8 <wcrtomb@plt+0xb178>
  40d9b4:	ldr	x9, [x25, #8]
  40d9b8:	ldrb	w11, [x9]
  40d9bc:	cmp	w10, w11
  40d9c0:	b.ne	40d9e8 <wcrtomb@plt+0xb178>  // b.any
  40d9c4:	add	x10, x8, #0x1
  40d9c8:	add	x9, x9, #0x1
  40d9cc:	mov	x8, x10
  40d9d0:	ldrb	w10, [x10]
  40d9d4:	cbz	w10, 40d9e8 <wcrtomb@plt+0xb178>
  40d9d8:	ldrb	w11, [x9], #1
  40d9dc:	cmp	w10, w11
  40d9e0:	add	x10, x8, #0x1
  40d9e4:	b.eq	40d9cc <wcrtomb@plt+0xb15c>  // b.none
  40d9e8:	strb	wzr, [x8]
  40d9ec:	ldr	x22, [x19, #16]
  40d9f0:	mov	x0, x22
  40d9f4:	bl	402270 <strlen@plt>
  40d9f8:	ldr	x24, [x25, #16]
  40d9fc:	mov	x23, x0
  40da00:	mov	x0, x24
  40da04:	bl	402270 <strlen@plt>
  40da08:	cmp	x23, x0
  40da0c:	csel	x9, x0, x23, gt
  40da10:	cmp	x9, #0x1
  40da14:	b.lt	40da7c <wcrtomb@plt+0xb20c>  // b.tstop
  40da18:	add	x10, x24, x0
  40da1c:	mov	x8, xzr
  40da20:	sub	x10, x10, #0x1
  40da24:	sub	x11, x23, #0x1
  40da28:	ldrb	w12, [x22, x11]
  40da2c:	ldrb	w13, [x10]
  40da30:	cmp	w12, w13
  40da34:	b.ne	40da50 <wcrtomb@plt+0xb1e0>  // b.any
  40da38:	add	x8, x8, #0x1
  40da3c:	sub	x10, x10, #0x1
  40da40:	cmp	x8, x9
  40da44:	sub	x11, x11, #0x1
  40da48:	b.lt	40da28 <wcrtomb@plt+0xb1b8>  // b.tstop
  40da4c:	mov	x8, x9
  40da50:	cbz	x8, 40da80 <wcrtomb@plt+0xb210>
  40da54:	mov	x9, xzr
  40da58:	sub	x10, x23, x8
  40da5c:	add	x11, x22, x10
  40da60:	ldrb	w11, [x11, x9]
  40da64:	strb	w11, [x22, x9]
  40da68:	ldr	x22, [x19, #16]
  40da6c:	add	x9, x9, #0x1
  40da70:	cmp	x8, x9
  40da74:	b.ne	40da5c <wcrtomb@plt+0xb1ec>  // b.any
  40da78:	b	40da80 <wcrtomb@plt+0xb210>
  40da7c:	mov	x8, xzr
  40da80:	strb	wzr, [x22, x8]
  40da84:	str	x19, [sp]
  40da88:	ldr	x19, [x19]
  40da8c:	ldr	x21, [x25]
  40da90:	mov	w0, #0x8                   	// #8
  40da94:	str	x25, [sp, #32]
  40da98:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40da9c:	ldr	x24, [x19]
  40daa0:	mov	x22, x0
  40daa4:	cbz	x24, 40dc08 <wcrtomb@plt+0xb398>
  40daa8:	mov	x8, xzr
  40daac:	mov	x28, x19
  40dab0:	stur	x19, [x29, #-24]
  40dab4:	b	40dad0 <wcrtomb@plt+0xb260>
  40dab8:	ldur	x19, [x29, #-24]
  40dabc:	ldur	x8, [x29, #-8]
  40dac0:	add	x8, x8, #0x1
  40dac4:	add	x28, x19, x8, lsl #3
  40dac8:	ldr	x24, [x28]
  40dacc:	cbz	x24, 40dc08 <wcrtomb@plt+0xb398>
  40dad0:	ldr	x25, [x21]
  40dad4:	cbz	x25, 40dac0 <wcrtomb@plt+0xb250>
  40dad8:	mov	x19, xzr
  40dadc:	stur	x8, [x29, #-8]
  40dae0:	mov	w0, #0x8                   	// #8
  40dae4:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40dae8:	ldrb	w8, [x24]
  40daec:	mov	x23, x0
  40daf0:	cbnz	w8, 40db7c <wcrtomb@plt+0xb30c>
  40daf4:	ldr	x24, [x23]
  40daf8:	cbz	x24, 40db40 <wcrtomb@plt+0xb2d0>
  40dafc:	mov	w20, #0x8                   	// #8
  40db00:	mov	x0, x24
  40db04:	bl	402270 <strlen@plt>
  40db08:	mov	x2, x0
  40db0c:	mov	x0, x22
  40db10:	mov	x1, x24
  40db14:	bl	40e1c8 <wcrtomb@plt+0xb958>
  40db18:	ldr	x24, [x23, x20]
  40db1c:	mov	x22, x0
  40db20:	add	x20, x20, #0x8
  40db24:	cbnz	x24, 40db00 <wcrtomb@plt+0xb290>
  40db28:	ldr	x0, [x23]
  40db2c:	cbz	x0, 40db40 <wcrtomb@plt+0xb2d0>
  40db30:	add	x20, x23, #0x8
  40db34:	bl	402620 <free@plt>
  40db38:	ldr	x0, [x20], #8
  40db3c:	cbnz	x0, 40db34 <wcrtomb@plt+0xb2c4>
  40db40:	mov	x0, x23
  40db44:	bl	402620 <free@plt>
  40db48:	add	x19, x19, #0x1
  40db4c:	ldr	x25, [x21, x19, lsl #3]
  40db50:	cbz	x25, 40dab8 <wcrtomb@plt+0xb248>
  40db54:	ldr	x24, [x28]
  40db58:	b	40dae0 <wcrtomb@plt+0xb270>
  40db5c:	cbz	x27, 40db74 <wcrtomb@plt+0xb304>
  40db60:	mov	x0, x23
  40db64:	mov	x1, x24
  40db68:	mov	x2, x27
  40db6c:	bl	40e1c8 <wcrtomb@plt+0xb958>
  40db70:	mov	x23, x0
  40db74:	ldrb	w8, [x24, #1]!
  40db78:	cbz	w8, 40daf4 <wcrtomb@plt+0xb284>
  40db7c:	and	w26, w8, #0xff
  40db80:	mov	x0, x25
  40db84:	mov	w1, w26
  40db88:	bl	402640 <strchr@plt>
  40db8c:	cbz	x0, 40db74 <wcrtomb@plt+0xb304>
  40db90:	ldrb	w20, [x24, #1]
  40db94:	cbz	w20, 40dbe8 <wcrtomb@plt+0xb378>
  40db98:	mov	x27, xzr
  40db9c:	b	40dbbc <wcrtomb@plt+0xb34c>
  40dba0:	add	x8, x8, #0x1
  40dba4:	cmp	x8, x27
  40dba8:	add	x0, x0, #0x1
  40dbac:	mov	w1, w26
  40dbb0:	csel	x27, x8, x27, gt
  40dbb4:	bl	402640 <strchr@plt>
  40dbb8:	cbz	x0, 40db5c <wcrtomb@plt+0xb2ec>
  40dbbc:	mov	x8, xzr
  40dbc0:	add	x9, x0, #0x1
  40dbc4:	mov	w10, w20
  40dbc8:	ldrb	w11, [x9, x8]
  40dbcc:	cmp	w11, w10, uxtb
  40dbd0:	b.ne	40dba0 <wcrtomb@plt+0xb330>  // b.any
  40dbd4:	add	x10, x24, x8
  40dbd8:	ldrb	w10, [x10, #2]
  40dbdc:	add	x8, x8, #0x1
  40dbe0:	cbnz	w10, 40dbc8 <wcrtomb@plt+0xb358>
  40dbe4:	b	40dba0 <wcrtomb@plt+0xb330>
  40dbe8:	mov	x27, xzr
  40dbec:	cmp	x27, #0x0
  40dbf0:	add	x0, x0, #0x1
  40dbf4:	mov	w1, w26
  40dbf8:	csinc	x27, x27, xzr, ne  // ne = any
  40dbfc:	bl	402640 <strchr@plt>
  40dc00:	cbnz	x0, 40dbec <wcrtomb@plt+0xb37c>
  40dc04:	b	40db60 <wcrtomb@plt+0xb2f0>
  40dc08:	ldr	x25, [sp]
  40dc0c:	ldr	x8, [x25]
  40dc10:	ldr	x0, [x8]
  40dc14:	cbz	x0, 40dc40 <wcrtomb@plt+0xb3d0>
  40dc18:	ldr	x20, [sp, #32]
  40dc1c:	ldur	x24, [x29, #-16]
  40dc20:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40dc24:	add	x19, x8, #0x8
  40dc28:	add	x28, x28, #0xd75
  40dc2c:	bl	402620 <free@plt>
  40dc30:	ldr	x0, [x19], #8
  40dc34:	cbnz	x0, 40dc2c <wcrtomb@plt+0xb3bc>
  40dc38:	ldr	x8, [x25]
  40dc3c:	b	40dc50 <wcrtomb@plt+0xb3e0>
  40dc40:	ldr	x20, [sp, #32]
  40dc44:	ldur	x24, [x29, #-16]
  40dc48:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40dc4c:	add	x28, x28, #0xd75
  40dc50:	mov	x0, x8
  40dc54:	bl	402620 <free@plt>
  40dc58:	str	x22, [x25]
  40dc5c:	ldr	x8, [x20]
  40dc60:	ldr	x0, [x8]
  40dc64:	cbz	x0, 40dc7c <wcrtomb@plt+0xb40c>
  40dc68:	add	x19, x8, #0x8
  40dc6c:	bl	402620 <free@plt>
  40dc70:	ldr	x0, [x19], #8
  40dc74:	cbnz	x0, 40dc6c <wcrtomb@plt+0xb3fc>
  40dc78:	ldr	x8, [x20]
  40dc7c:	mov	x0, x8
  40dc80:	bl	402620 <free@plt>
  40dc84:	ldr	x0, [x20, #8]
  40dc88:	bl	402620 <free@plt>
  40dc8c:	ldr	x0, [x20, #16]
  40dc90:	bl	402620 <free@plt>
  40dc94:	ldr	x0, [x20, #24]
  40dc98:	bl	402620 <free@plt>
  40dc9c:	mov	x0, x20
  40dca0:	bl	402620 <free@plt>
  40dca4:	ldr	x27, [sp, #8]
  40dca8:	b	40d568 <wcrtomb@plt+0xacf8>
  40dcac:	cmp	w19, #0xfe
  40dcb0:	b.hi	40dd9c <wcrtomb@plt+0xb52c>  // b.pmore
  40dcb4:	ldr	w8, [sp, #28]
  40dcb8:	tst	w8, #0xff
  40dcbc:	b.eq	40dd78 <wcrtomb@plt+0xb508>  // b.none
  40dcc0:	add	x20, x19, #0x1
  40dcc4:	b	40dcd4 <wcrtomb@plt+0xb464>
  40dcc8:	add	x20, x20, #0x1
  40dccc:	cmp	x20, #0x100
  40dcd0:	b.eq	40dd9c <wcrtomb@plt+0xb52c>  // b.none
  40dcd4:	ubfx	x8, x20, #6, #26
  40dcd8:	add	x9, x26, x25, lsl #5
  40dcdc:	ldr	x8, [x9, x8, lsl #3]
  40dce0:	lsr	x8, x8, x20
  40dce4:	tbz	w8, #0, 40dcc8 <wcrtomb@plt+0xb458>
  40dce8:	bl	4024d0 <__ctype_toupper_loc@plt>
  40dcec:	ldr	x8, [x0]
  40dcf0:	ldr	w8, [x8, x20, lsl #2]
  40dcf4:	stur	w8, [x29, #-8]
  40dcf8:	bl	4024d0 <__ctype_toupper_loc@plt>
  40dcfc:	ldr	x8, [x0]
  40dd00:	ldur	w9, [x29, #-8]
  40dd04:	ldr	w8, [x8, x19, lsl #2]
  40dd08:	cmp	w9, w8
  40dd0c:	b.eq	40dcc8 <wcrtomb@plt+0xb458>  // b.none
  40dd10:	b	40d638 <wcrtomb@plt+0xadc8>
  40dd14:	ldur	x24, [x29, #-16]
  40dd18:	mov	w8, wzr
  40dd1c:	strb	wzr, [x22]
  40dd20:	strb	wzr, [x21, #32]
  40dd24:	strb	w8, [x21, #33]
  40dd28:	ldr	x8, [x25]
  40dd2c:	ldr	x0, [x8]
  40dd30:	cbz	x0, 40dd48 <wcrtomb@plt+0xb4d8>
  40dd34:	add	x19, x8, #0x8
  40dd38:	bl	402620 <free@plt>
  40dd3c:	ldr	x0, [x19], #8
  40dd40:	cbnz	x0, 40dd38 <wcrtomb@plt+0xb4c8>
  40dd44:	ldr	x8, [x25]
  40dd48:	mov	x0, x8
  40dd4c:	bl	402620 <free@plt>
  40dd50:	ldr	x0, [x25, #8]
  40dd54:	bl	402620 <free@plt>
  40dd58:	ldr	x0, [x25, #16]
  40dd5c:	bl	402620 <free@plt>
  40dd60:	ldr	x0, [x25, #24]
  40dd64:	bl	402620 <free@plt>
  40dd68:	mov	x0, x25
  40dd6c:	bl	402620 <free@plt>
  40dd70:	mov	x25, x21
  40dd74:	b	40d568 <wcrtomb@plt+0xacf8>
  40dd78:	add	w8, w19, #0x1
  40dd7c:	lsr	w9, w8, #6
  40dd80:	add	x10, x26, x25, lsl #5
  40dd84:	ldr	x9, [x10, w9, uxtw #3]
  40dd88:	lsr	x9, x9, x8
  40dd8c:	tbnz	w9, #0, 40d638 <wcrtomb@plt+0xadc8>
  40dd90:	add	w8, w8, #0x1
  40dd94:	cmp	w8, #0x100
  40dd98:	b.ne	40dd7c <wcrtomb@plt+0xb50c>  // b.any
  40dd9c:	ldr	x8, [x24, x23, lsl #3]
  40dda0:	add	x24, x27, #0x2
  40dda4:	cmp	x8, #0x105
  40dda8:	b.ne	40de10 <wcrtomb@plt+0xb5a0>  // b.any
  40ddac:	sub	x8, x21, #0x1
  40ddb0:	cmp	x24, x8
  40ddb4:	b.ge	40de10 <wcrtomb@plt+0xb5a0>  // b.tcont
  40ddb8:	mov	x9, xzr
  40ddbc:	add	x10, x27, #0x2
  40ddc0:	mov	x21, x24
  40ddc4:	cmn	x9, #0x2
  40ddc8:	b.eq	40dde0 <wcrtomb@plt+0xb570>  // b.none
  40ddcc:	add	x11, x22, x9, lsl #3
  40ddd0:	ldr	x11, [x11, #16]
  40ddd4:	sub	x11, x11, #0x1
  40ddd8:	cmp	x11, #0xfe
  40dddc:	b.hi	40de14 <wcrtomb@plt+0xb5a4>  // b.pmore
  40dde0:	add	x11, x22, x9, lsl #3
  40dde4:	ldr	x11, [x11, #24]
  40dde8:	cmp	x11, #0x105
  40ddec:	b.ne	40de04 <wcrtomb@plt+0xb594>  // b.any
  40ddf0:	add	x9, x9, #0x2
  40ddf4:	add	x11, x10, x9
  40ddf8:	cmp	x11, x8
  40ddfc:	add	x21, x21, #0x2
  40de00:	b.lt	40ddc4 <wcrtomb@plt+0xb554>  // b.tstop
  40de04:	add	x8, x27, x9
  40de08:	add	x21, x8, #0x2
  40de0c:	b	40de14 <wcrtomb@plt+0xb5a4>
  40de10:	mov	x21, x24
  40de14:	ldr	w8, [sp, #28]
  40de18:	sub	x25, x21, x27
  40de1c:	mov	w0, #0x30                  	// #48
  40de20:	mov	x26, x27
  40de24:	and	w20, w8, #0xff
  40de28:	asr	x8, x25, #1
  40de2c:	add	x23, x8, #0x1
  40de30:	bl	417290 <wcrtomb@plt+0x14a20>
  40de34:	mov	x22, x0
  40de38:	mov	w0, #0x8                   	// #8
  40de3c:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40de40:	str	x0, [x22]
  40de44:	mov	x0, x23
  40de48:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40de4c:	str	x0, [x22, #8]
  40de50:	mov	x0, x23
  40de54:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40de58:	str	x0, [x22, #16]
  40de5c:	mov	x0, x23
  40de60:	bl	4174b0 <wcrtomb@plt+0x14c40>
  40de64:	ldr	x8, [sp, #32]
  40de68:	str	x0, [x22, #24]
  40de6c:	strh	wzr, [x22, #32]
  40de70:	str	x8, [x22, #40]
  40de74:	cbz	w20, 40de98 <wcrtomb@plt+0xb628>
  40de78:	add	w8, w19, #0x80
  40de7c:	cmp	w8, #0x17f
  40de80:	b.hi	40de94 <wcrtomb@plt+0xb624>  // b.pmore
  40de84:	bl	4024d0 <__ctype_toupper_loc@plt>
  40de88:	ldr	x8, [x0]
  40de8c:	sbfiz	x9, x19, #2, #32
  40de90:	ldr	w19, [x8, x9]
  40de94:	sxtw	x19, w19
  40de98:	ldr	x8, [x22, #16]
  40de9c:	mov	x12, x26
  40dea0:	cmp	x24, x21
  40dea4:	strb	w19, [x8]
  40dea8:	ldr	x8, [x22, #8]
  40deac:	strb	w19, [x8]
  40deb0:	ldr	x8, [x22, #24]
  40deb4:	strb	w19, [x8]
  40deb8:	b.ge	40df44 <wcrtomb@plt+0xb6d4>  // b.tcont
  40debc:	ldr	w8, [sp, #28]
  40dec0:	ldur	x24, [x29, #-16]
  40dec4:	and	w9, w8, #0xff
  40dec8:	sub	x8, x25, #0x3
  40decc:	lsr	x8, x8, #1
  40ded0:	add	x20, x8, #0x2
  40ded4:	cbz	w9, 40df50 <wcrtomb@plt+0xb6e0>
  40ded8:	neg	x19, x8
  40dedc:	mov	w21, #0x1                   	// #1
  40dee0:	b	40df10 <wcrtomb@plt+0xb6a0>
  40dee4:	ldr	x8, [x22, #16]
  40dee8:	add	x12, x12, #0x2
  40deec:	strb	w23, [x8, x21]
  40def0:	ldr	x8, [x22, #8]
  40def4:	strb	w23, [x8, x21]
  40def8:	ldr	x8, [x22, #24]
  40defc:	strb	w23, [x8, x21]
  40df00:	add	x21, x21, #0x1
  40df04:	add	x8, x19, x21
  40df08:	cmp	x8, #0x2
  40df0c:	b.eq	40df90 <wcrtomb@plt+0xb720>  // b.none
  40df10:	ldr	x8, [x24, #144]
  40df14:	add	x8, x8, x12, lsl #3
  40df18:	ldr	x23, [x8, #16]
  40df1c:	add	w8, w23, #0x80
  40df20:	cmp	w8, #0x17f
  40df24:	b.hi	40dee4 <wcrtomb@plt+0xb674>  // b.pmore
  40df28:	mov	x25, x12
  40df2c:	bl	4024d0 <__ctype_toupper_loc@plt>
  40df30:	ldr	x8, [x0]
  40df34:	sbfiz	x9, x23, #2, #32
  40df38:	mov	x12, x25
  40df3c:	ldr	w23, [x8, x9]
  40df40:	b	40dee4 <wcrtomb@plt+0xb674>
  40df44:	ldur	x24, [x29, #-16]
  40df48:	mov	w20, #0x1                   	// #1
  40df4c:	b	40df94 <wcrtomb@plt+0xb724>
  40df50:	neg	x8, x8
  40df54:	mov	w9, #0x1                   	// #1
  40df58:	ldr	x10, [x24, #144]
  40df5c:	ldr	x11, [x22, #16]
  40df60:	add	x10, x10, x12, lsl #3
  40df64:	ldrb	w10, [x10, #16]
  40df68:	add	x12, x12, #0x2
  40df6c:	strb	w10, [x11, x9]
  40df70:	ldr	x11, [x22, #8]
  40df74:	strb	w10, [x11, x9]
  40df78:	ldr	x11, [x22, #24]
  40df7c:	strb	w10, [x11, x9]
  40df80:	add	x9, x9, #0x1
  40df84:	add	x10, x8, x9
  40df88:	cmp	x10, #0x2
  40df8c:	b.ne	40df58 <wcrtomb@plt+0xb6e8>  // b.any
  40df90:	mov	x26, x12
  40df94:	ldr	x8, [x22, #16]
  40df98:	mov	x2, x20
  40df9c:	strb	wzr, [x8, x20]
  40dfa0:	ldr	x8, [x22, #8]
  40dfa4:	strb	wzr, [x8, x20]
  40dfa8:	ldr	x8, [x22, #24]
  40dfac:	strb	wzr, [x8, x20]
  40dfb0:	ldr	x0, [x22]
  40dfb4:	ldr	x1, [x22, #24]
  40dfb8:	bl	40e1c8 <wcrtomb@plt+0xb958>
  40dfbc:	mov	x25, x22
  40dfc0:	mov	x27, x26
  40dfc4:	str	x0, [x22]
  40dfc8:	b	40d568 <wcrtomb@plt+0xacf8>
  40dfcc:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40dfd0:	mov	x25, xzr
  40dfd4:	mov	w20, wzr
  40dfd8:	mov	w22, wzr
  40dfdc:	mov	w19, wzr
  40dfe0:	add	x28, x28, #0xd75
  40dfe4:	ldrb	w8, [x28]
  40dfe8:	cbz	w8, 40e088 <wcrtomb@plt+0xb818>
  40dfec:	mov	x0, x28
  40dff0:	bl	402270 <strlen@plt>
  40dff4:	add	x0, x0, #0x4
  40dff8:	bl	417290 <wcrtomb@plt+0x14a20>
  40dffc:	mov	x21, x0
  40e000:	strb	w19, [x0]
  40e004:	strb	w22, [x0, #1]
  40e008:	strb	w20, [x0, #2]
  40e00c:	add	x0, x0, #0x3
  40e010:	mov	x1, x28
  40e014:	bl	402690 <strcpy@plt>
  40e018:	cbnz	x25, 40e0e4 <wcrtomb@plt+0xb874>
  40e01c:	b	40e090 <wcrtomb@plt+0xb820>
  40e020:	ldr	x8, [x25, #40]
  40e024:	cbnz	x8, 40e1a8 <wcrtomb@plt+0xb938>
  40e028:	ldr	x8, [x25]
  40e02c:	ldr	x21, [x8]
  40e030:	cbz	x21, 40e120 <wcrtomb@plt+0xb8b0>
  40e034:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40e038:	add	x19, x8, #0x8
  40e03c:	add	x28, x28, #0xd75
  40e040:	mov	x0, x21
  40e044:	bl	402270 <strlen@plt>
  40e048:	mov	x22, x0
  40e04c:	mov	x0, x28
  40e050:	bl	402270 <strlen@plt>
  40e054:	cmp	x22, x0
  40e058:	csel	x28, x21, x28, hi  // hi = pmore
  40e05c:	ldr	x21, [x19], #8
  40e060:	cbnz	x21, 40e040 <wcrtomb@plt+0xb7d0>
  40e064:	ldr	x1, [x25, #24]
  40e068:	mov	x0, x28
  40e06c:	bl	402600 <strcmp@plt>
  40e070:	cbz	w0, 40e138 <wcrtomb@plt+0xb8c8>
  40e074:	mov	w20, wzr
  40e078:	mov	w22, wzr
  40e07c:	mov	w19, wzr
  40e080:	ldrb	w8, [x28]
  40e084:	cbnz	w8, 40dfec <wcrtomb@plt+0xb77c>
  40e088:	mov	x21, xzr
  40e08c:	cbnz	x25, 40e0e4 <wcrtomb@plt+0xb874>
  40e090:	mov	x0, x21
  40e094:	ldp	x20, x19, [sp, #144]
  40e098:	ldp	x22, x21, [sp, #128]
  40e09c:	ldp	x24, x23, [sp, #112]
  40e0a0:	ldp	x26, x25, [sp, #96]
  40e0a4:	ldp	x28, x27, [sp, #80]
  40e0a8:	ldp	x29, x30, [sp, #64]
  40e0ac:	add	sp, sp, #0xa0
  40e0b0:	ret
  40e0b4:	mov	x0, x8
  40e0b8:	bl	402620 <free@plt>
  40e0bc:	ldr	x0, [x25, #8]
  40e0c0:	bl	402620 <free@plt>
  40e0c4:	ldr	x0, [x25, #16]
  40e0c8:	bl	402620 <free@plt>
  40e0cc:	ldr	x0, [x25, #24]
  40e0d0:	bl	402620 <free@plt>
  40e0d4:	mov	x0, x25
  40e0d8:	bl	402620 <free@plt>
  40e0dc:	mov	x25, x19
  40e0e0:	cbz	x19, 40e090 <wcrtomb@plt+0xb820>
  40e0e4:	ldr	x8, [x25]
  40e0e8:	ldr	x19, [x25, #40]
  40e0ec:	ldr	x0, [x8]
  40e0f0:	cbz	x0, 40e0b4 <wcrtomb@plt+0xb844>
  40e0f4:	add	x20, x8, #0x8
  40e0f8:	bl	402620 <free@plt>
  40e0fc:	ldr	x0, [x20], #8
  40e100:	cbnz	x0, 40e0f8 <wcrtomb@plt+0xb888>
  40e104:	ldr	x8, [x25]
  40e108:	b	40e0b4 <wcrtomb@plt+0xb844>
  40e10c:	mov	w20, wzr
  40e110:	mov	w22, wzr
  40e114:	ldrb	w8, [x28]
  40e118:	cbnz	w8, 40dfec <wcrtomb@plt+0xb77c>
  40e11c:	b	40e088 <wcrtomb@plt+0xb818>
  40e120:	adrp	x28, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  40e124:	add	x28, x28, #0xd75
  40e128:	ldr	x1, [x25, #24]
  40e12c:	mov	x0, x28
  40e130:	bl	402600 <strcmp@plt>
  40e134:	cbnz	w0, 40e074 <wcrtomb@plt+0xb804>
  40e138:	ldr	w8, [sp, #24]
  40e13c:	tbz	w8, #0, 40e148 <wcrtomb@plt+0xb8d8>
  40e140:	ldrb	w8, [x25, #32]
  40e144:	cbz	w8, 40e170 <wcrtomb@plt+0xb900>
  40e148:	ldr	w8, [sp, #20]
  40e14c:	tbz	w8, #0, 40e158 <wcrtomb@plt+0xb8e8>
  40e150:	ldrb	w8, [x25, #33]
  40e154:	cbz	w8, 40e170 <wcrtomb@plt+0xb900>
  40e158:	mov	w19, #0x1                   	// #1
  40e15c:	ldrb	w22, [x25, #32]
  40e160:	ldrb	w20, [x25, #33]
  40e164:	ldrb	w8, [x28]
  40e168:	cbnz	w8, 40dfec <wcrtomb@plt+0xb77c>
  40e16c:	b	40e088 <wcrtomb@plt+0xb818>
  40e170:	mov	w19, wzr
  40e174:	ldrb	w22, [x25, #32]
  40e178:	ldrb	w20, [x25, #33]
  40e17c:	ldrb	w8, [x28]
  40e180:	cbnz	w8, 40dfec <wcrtomb@plt+0xb77c>
  40e184:	b	40e088 <wcrtomb@plt+0xb818>
  40e188:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e18c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e190:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e194:	add	x0, x0, #0x771
  40e198:	add	x1, x1, #0x79e
  40e19c:	add	x3, x3, #0x7a4
  40e1a0:	mov	w2, #0xff6                 	// #4086
  40e1a4:	bl	4027d0 <__assert_fail@plt>
  40e1a8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e1ac:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e1b0:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e1b4:	add	x0, x0, #0x7d0
  40e1b8:	add	x1, x1, #0x79e
  40e1bc:	add	x3, x3, #0x7a4
  40e1c0:	mov	w2, #0x1039                	// #4153
  40e1c4:	bl	4027d0 <__assert_fail@plt>
  40e1c8:	stp	x29, x30, [sp, #-64]!
  40e1cc:	stp	x20, x19, [sp, #48]
  40e1d0:	mov	x19, x0
  40e1d4:	add	x0, x2, #0x1
  40e1d8:	stp	x24, x23, [sp, #16]
  40e1dc:	stp	x22, x21, [sp, #32]
  40e1e0:	mov	x29, sp
  40e1e4:	mov	x21, x2
  40e1e8:	mov	x22, x1
  40e1ec:	bl	417290 <wcrtomb@plt+0x14a20>
  40e1f0:	mov	x1, x22
  40e1f4:	mov	x2, x21
  40e1f8:	mov	x20, x0
  40e1fc:	bl	402210 <memcpy@plt>
  40e200:	strb	wzr, [x20, x21]
  40e204:	ldr	x21, [x19]
  40e208:	cbz	x21, 40e298 <wcrtomb@plt+0xba28>
  40e20c:	mov	x23, xzr
  40e210:	mov	x0, x21
  40e214:	mov	x1, x20
  40e218:	bl	402730 <strstr@plt>
  40e21c:	cbnz	x0, 40e2a4 <wcrtomb@plt+0xba34>
  40e220:	add	x8, x19, x23, lsl #3
  40e224:	ldr	x0, [x8, #8]
  40e228:	add	x22, x23, #0x1
  40e22c:	mov	x23, x22
  40e230:	cbnz	x0, 40e214 <wcrtomb@plt+0xb9a4>
  40e234:	cbz	x21, 40e2b8 <wcrtomb@plt+0xba48>
  40e238:	mov	x23, xzr
  40e23c:	mov	x24, x19
  40e240:	b	40e254 <wcrtomb@plt+0xb9e4>
  40e244:	add	x23, x23, #0x1
  40e248:	add	x24, x19, x23, lsl #3
  40e24c:	ldr	x21, [x24]
  40e250:	cbz	x21, 40e2b8 <wcrtomb@plt+0xba48>
  40e254:	mov	x0, x20
  40e258:	mov	x1, x21
  40e25c:	bl	402730 <strstr@plt>
  40e260:	cbz	x0, 40e244 <wcrtomb@plt+0xb9d4>
  40e264:	mov	x0, x21
  40e268:	bl	402620 <free@plt>
  40e26c:	sub	x22, x22, #0x1
  40e270:	cmp	x22, x23
  40e274:	b.eq	40e2b4 <wcrtomb@plt+0xba44>  // b.none
  40e278:	lsl	x8, x22, #3
  40e27c:	ldr	x9, [x19, x8]
  40e280:	str	x9, [x24]
  40e284:	str	xzr, [x19, x8]
  40e288:	add	x24, x19, x23, lsl #3
  40e28c:	ldr	x21, [x24]
  40e290:	cbnz	x21, 40e254 <wcrtomb@plt+0xb9e4>
  40e294:	b	40e2b8 <wcrtomb@plt+0xba48>
  40e298:	mov	x22, xzr
  40e29c:	mov	w8, #0x2                   	// #2
  40e2a0:	b	40e2c4 <wcrtomb@plt+0xba54>
  40e2a4:	mov	x0, x20
  40e2a8:	bl	402620 <free@plt>
  40e2ac:	mov	x0, x19
  40e2b0:	b	40e2d8 <wcrtomb@plt+0xba68>
  40e2b4:	mov	x22, x23
  40e2b8:	add	x8, x22, #0x2
  40e2bc:	lsr	x9, x8, #60
  40e2c0:	cbnz	x9, 40e2ec <wcrtomb@plt+0xba7c>
  40e2c4:	lsl	x1, x8, #3
  40e2c8:	mov	x0, x19
  40e2cc:	bl	417310 <wcrtomb@plt+0x14aa0>
  40e2d0:	add	x8, x0, x22, lsl #3
  40e2d4:	stp	x20, xzr, [x8]
  40e2d8:	ldp	x20, x19, [sp, #48]
  40e2dc:	ldp	x22, x21, [sp, #32]
  40e2e0:	ldp	x24, x23, [sp, #16]
  40e2e4:	ldp	x29, x30, [sp], #64
  40e2e8:	ret
  40e2ec:	bl	41757c <wcrtomb@plt+0x14d0c>
  40e2f0:	b	402620 <free@plt>
  40e2f4:	mov	w0, #0x920                 	// #2336
  40e2f8:	b	417290 <wcrtomb@plt+0x14a20>
  40e2fc:	stp	x29, x30, [sp, #-96]!
  40e300:	stp	x24, x23, [sp, #48]
  40e304:	stp	x22, x21, [sp, #64]
  40e308:	mov	x21, x2
  40e30c:	mov	x22, x1
  40e310:	mov	x23, #0x2401                	// #9217
  40e314:	mov	w2, #0x410                 	// #1040
  40e318:	mov	w1, wzr
  40e31c:	str	x27, [sp, #16]
  40e320:	stp	x26, x25, [sp, #32]
  40e324:	stp	x20, x19, [sp, #80]
  40e328:	mov	x29, sp
  40e32c:	mov	w20, w3
  40e330:	mov	x19, x0
  40e334:	movk	x23, #0xc000, lsl #32
  40e338:	bl	402470 <memset@plt>
  40e33c:	ldrb	w8, [x22]
  40e340:	adrp	x9, 40e000 <wcrtomb@plt+0xb790>
  40e344:	adrp	x10, 40e000 <wcrtomb@plt+0xb790>
  40e348:	add	x9, x9, #0x564
  40e34c:	add	x10, x10, #0x570
  40e350:	cmp	w8, #0x0
  40e354:	csel	x8, x10, x9, eq  // eq = none
  40e358:	add	x0, x19, #0x418
  40e35c:	mov	w2, #0x504                 	// #1284
  40e360:	mov	x1, x22
  40e364:	str	x8, [x19, #1040]
  40e368:	bl	402210 <memcpy@plt>
  40e36c:	ldrb	w8, [x19, #1048]
  40e370:	mov	x9, #0xffffffffffffffff    	// #-1
  40e374:	add	x10, x19, #0x1c0
  40e378:	mov	w22, #0x1                   	// #1
  40e37c:	eor	w8, w8, #0x1
  40e380:	strb	w8, [x19, #192]
  40e384:	ubfx	w8, w21, #22, #1
  40e388:	str	x9, [x19, #24]
  40e38c:	strb	w22, [x19, #456]
  40e390:	strb	w8, [x10, #9]
  40e394:	and	w8, w20, #0x1
  40e398:	tst	w20, #0x2
  40e39c:	strb	w8, [x10, #10]
  40e3a0:	mov	w8, #0xa                   	// #10
  40e3a4:	csel	w24, w8, wzr, eq  // eq = none
  40e3a8:	strb	w24, [x10, #11]
  40e3ac:	str	x21, [x19, #448]
  40e3b0:	tbnz	w20, #0, 40e498 <wcrtomb@plt+0xbc28>
  40e3b4:	add	x8, x19, x24
  40e3b8:	mov	x20, xzr
  40e3bc:	lsl	x21, x22, x24
  40e3c0:	add	x25, x19, #0x51c
  40e3c4:	add	x26, x8, #0x1cc
  40e3c8:	mov	w27, #0x4                   	// #4
  40e3cc:	b	40e3f4 <wcrtomb@plt+0xbb84>
  40e3d0:	cmp	x20, #0x40
  40e3d4:	cset	w8, cc  // cc = lo, ul, last
  40e3d8:	lsr	x9, x23, x20
  40e3dc:	and	w8, w9, w8
  40e3e0:	add	x9, x19, x20
  40e3e4:	add	x20, x20, #0x1
  40e3e8:	cmp	x20, #0x100
  40e3ec:	strb	w8, [x9, #716]
  40e3f0:	b.eq	40e548 <wcrtomb@plt+0xbcd8>  // b.none
  40e3f4:	cmp	x24, x20
  40e3f8:	b.ne	40e418 <wcrtomb@plt+0xbba8>  // b.any
  40e3fc:	strb	w27, [x26]
  40e400:	ldr	x8, [x19, #1008]
  40e404:	orr	x8, x8, x21
  40e408:	str	x8, [x19, #1008]
  40e40c:	ldrb	w8, [x19, #1050]
  40e410:	cbnz	w8, 40e474 <wcrtomb@plt+0xbc04>
  40e414:	b	40e3d0 <wcrtomb@plt+0xbb60>
  40e418:	ldr	w8, [x25, x20, lsl #2]
  40e41c:	cmn	w8, #0x1
  40e420:	b.eq	40e484 <wcrtomb@plt+0xbc14>  // b.none
  40e424:	bl	402610 <__ctype_b_loc@plt>
  40e428:	ldr	x8, [x0]
  40e42c:	cmp	x20, #0x5f
  40e430:	cset	w9, eq  // eq = none
  40e434:	add	x10, x19, x20
  40e438:	ldrh	w8, [x8, x20, lsl #1]
  40e43c:	and	w8, w8, #0x8
  40e440:	orr	w8, w9, w8, lsr #3
  40e444:	cmp	w8, #0x0
  40e448:	cinc	w9, w22, ne  // ne = any
  40e44c:	strb	w9, [x10, #460]
  40e450:	cbz	w8, 40e46c <wcrtomb@plt+0xbbfc>
  40e454:	ubfx	x8, x20, #6, #26
  40e458:	add	x8, x19, x8, lsl #3
  40e45c:	ldr	x9, [x8, #976]
  40e460:	lsl	x10, x22, x20
  40e464:	orr	x9, x9, x10
  40e468:	str	x9, [x8, #976]
  40e46c:	ldrb	w8, [x19, #1050]
  40e470:	cbz	w8, 40e3d0 <wcrtomb@plt+0xbb60>
  40e474:	and	x8, x20, #0xc0
  40e478:	cmp	x8, #0x80
  40e47c:	cset	w8, ne  // ne = any
  40e480:	b	40e3e0 <wcrtomb@plt+0xbb70>
  40e484:	add	x8, x19, x20
  40e488:	strb	w22, [x8, #460]
  40e48c:	ldrb	w8, [x19, #1050]
  40e490:	cbnz	w8, 40e474 <wcrtomb@plt+0xbc04>
  40e494:	b	40e3d0 <wcrtomb@plt+0xbb60>
  40e498:	mov	x20, xzr
  40e49c:	add	x21, x19, #0x51c
  40e4a0:	b	40e4c8 <wcrtomb@plt+0xbc58>
  40e4a4:	cmp	x20, #0x40
  40e4a8:	cset	w8, cc  // cc = lo, ul, last
  40e4ac:	lsr	x9, x23, x20
  40e4b0:	and	w8, w9, w8
  40e4b4:	add	x9, x19, x20
  40e4b8:	add	x20, x20, #0x1
  40e4bc:	cmp	x20, #0x100
  40e4c0:	strb	w8, [x9, #716]
  40e4c4:	b.eq	40e548 <wcrtomb@plt+0xbcd8>  // b.none
  40e4c8:	ldr	w8, [x21, x20, lsl #2]
  40e4cc:	cmn	w8, #0x1
  40e4d0:	b.eq	40e528 <wcrtomb@plt+0xbcb8>  // b.none
  40e4d4:	bl	402610 <__ctype_b_loc@plt>
  40e4d8:	ldr	x8, [x0]
  40e4dc:	cmp	x20, #0x5f
  40e4e0:	cset	w9, eq  // eq = none
  40e4e4:	add	x10, x19, x20
  40e4e8:	ldrh	w8, [x8, x20, lsl #1]
  40e4ec:	and	w8, w8, #0x8
  40e4f0:	orr	w8, w9, w8, lsr #3
  40e4f4:	cmp	w8, #0x0
  40e4f8:	cinc	w9, w22, ne  // ne = any
  40e4fc:	strb	w9, [x10, #460]
  40e500:	cbz	w8, 40e51c <wcrtomb@plt+0xbcac>
  40e504:	ubfx	x8, x20, #6, #26
  40e508:	add	x8, x19, x8, lsl #3
  40e50c:	ldr	x9, [x8, #976]
  40e510:	lsl	x10, x22, x20
  40e514:	orr	x9, x9, x10
  40e518:	str	x9, [x8, #976]
  40e51c:	ldrb	w8, [x19, #1050]
  40e520:	cbnz	w8, 40e538 <wcrtomb@plt+0xbcc8>
  40e524:	b	40e4a4 <wcrtomb@plt+0xbc34>
  40e528:	add	x8, x19, x20
  40e52c:	strb	w22, [x8, #460]
  40e530:	ldrb	w8, [x19, #1050]
  40e534:	cbz	w8, 40e4a4 <wcrtomb@plt+0xbc34>
  40e538:	and	x8, x20, #0xc0
  40e53c:	cmp	x8, #0x80
  40e540:	cset	w8, ne  // ne = any
  40e544:	b	40e4b4 <wcrtomb@plt+0xbc44>
  40e548:	ldp	x20, x19, [sp, #80]
  40e54c:	ldp	x22, x21, [sp, #64]
  40e550:	ldp	x24, x23, [sp, #48]
  40e554:	ldp	x26, x25, [sp, #32]
  40e558:	ldr	x27, [sp, #16]
  40e55c:	ldp	x29, x30, [sp], #96
  40e560:	ret
  40e564:	and	w3, w3, #0x1
  40e568:	mov	w5, #0x1                   	// #1
  40e56c:	b	410ad4 <wcrtomb@plt+0xe264>
  40e570:	and	w3, w3, #0x1
  40e574:	mov	w5, wzr
  40e578:	b	410ad4 <wcrtomb@plt+0xe264>
  40e57c:	stp	x29, x30, [sp, #-32]!
  40e580:	movi	v0.2d, #0x0
  40e584:	mov	x8, #0xffffffffffffffff    	// #-1
  40e588:	stp	x20, x19, [sp, #16]
  40e58c:	stp	q0, q0, [x0, #416]
  40e590:	stp	q0, q0, [x0, #384]
  40e594:	stp	q0, q0, [x0, #352]
  40e598:	stp	q0, q0, [x0, #320]
  40e59c:	stp	q0, q0, [x0, #288]
  40e5a0:	stp	q0, q0, [x0, #256]
  40e5a4:	stp	q0, q0, [x0, #224]
  40e5a8:	stp	q0, q0, [x0, #192]
  40e5ac:	stp	q0, q0, [x0, #160]
  40e5b0:	stp	q0, q0, [x0, #128]
  40e5b4:	stp	q0, q0, [x0, #96]
  40e5b8:	stp	q0, q0, [x0, #64]
  40e5bc:	stp	q0, q0, [x0, #32]
  40e5c0:	stp	q0, q0, [x0]
  40e5c4:	str	x8, [x0, #24]
  40e5c8:	ldrb	w8, [x1, #192]
  40e5cc:	mov	x19, x1
  40e5d0:	mov	x20, x0
  40e5d4:	add	x0, x0, #0x1c0
  40e5d8:	add	x1, x1, #0x1c0
  40e5dc:	mov	w2, #0x250                 	// #592
  40e5e0:	mov	x29, sp
  40e5e4:	strb	w8, [x20, #192]
  40e5e8:	bl	402210 <memcpy@plt>
  40e5ec:	ldr	x8, [x19, #1040]
  40e5f0:	add	x0, x20, #0x418
  40e5f4:	add	x1, x19, #0x418
  40e5f8:	mov	w2, #0x504                 	// #1284
  40e5fc:	str	x8, [x20, #1040]
  40e600:	ldp	x20, x19, [sp, #16]
  40e604:	ldp	x29, x30, [sp], #32
  40e608:	b	402210 <memcpy@plt>
  40e60c:	sub	sp, sp, #0x50
  40e610:	stp	x20, x19, [sp, #64]
  40e614:	mov	x19, x0
  40e618:	add	x0, sp, #0x10
  40e61c:	add	x2, sp, #0x8
  40e620:	stp	x29, x30, [sp, #32]
  40e624:	stp	x22, x21, [sp, #48]
  40e628:	add	x29, sp, #0x20
  40e62c:	str	xzr, [sp, #8]
  40e630:	bl	402870 <wcrtomb@plt>
  40e634:	cmn	x0, #0x1
  40e638:	b.eq	40e6b0 <wcrtomb@plt+0xbe40>  // b.none
  40e63c:	ldrb	w1, [sp, #16]
  40e640:	mov	x20, x0
  40e644:	cmp	w20, #0x1
  40e648:	b.eq	40e6b8 <wcrtomb@plt+0xbe48>  // b.none
  40e64c:	mov	w2, #0x1                   	// #1
  40e650:	mov	x0, x19
  40e654:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40e658:	cmp	w20, #0x2
  40e65c:	b.lt	40e6c4 <wcrtomb@plt+0xbe54>  // b.tstop
  40e660:	sub	w8, w20, #0x1
  40e664:	and	x9, x20, #0xffffffff
  40e668:	add	x10, sp, #0x10
  40e66c:	sub	x20, x8, #0x1
  40e670:	orr	x21, x10, #0x1
  40e674:	sub	x22, x9, #0x1
  40e678:	ldrb	w1, [x21], #1
  40e67c:	cmp	x20, #0x0
  40e680:	cset	w8, eq  // eq = none
  40e684:	lsl	w2, w8, #1
  40e688:	mov	x0, x19
  40e68c:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40e690:	mov	w1, #0x105                 	// #261
  40e694:	mov	w2, #0x3                   	// #3
  40e698:	mov	x0, x19
  40e69c:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40e6a0:	subs	x22, x22, #0x1
  40e6a4:	sub	x20, x20, #0x1
  40e6a8:	b.ne	40e678 <wcrtomb@plt+0xbe08>  // b.any
  40e6ac:	b	40e6c4 <wcrtomb@plt+0xbe54>
  40e6b0:	mov	x1, xzr
  40e6b4:	strb	wzr, [sp, #16]
  40e6b8:	mov	w2, #0x3                   	// #3
  40e6bc:	mov	x0, x19
  40e6c0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40e6c4:	ldp	x20, x19, [sp, #64]
  40e6c8:	ldp	x22, x21, [sp, #48]
  40e6cc:	ldp	x29, x30, [sp, #32]
  40e6d0:	add	sp, sp, #0x50
  40e6d4:	ret
  40e6d8:	stp	x29, x30, [sp, #-48]!
  40e6dc:	stp	x22, x21, [sp, #16]
  40e6e0:	stp	x20, x19, [sp, #32]
  40e6e4:	ldp	x9, x8, [x0, #152]
  40e6e8:	mov	w21, w2
  40e6ec:	mov	x19, x0
  40e6f0:	mov	x20, x1
  40e6f4:	cmp	x8, x9
  40e6f8:	mov	x29, sp
  40e6fc:	b.ne	40e7e4 <wcrtomb@plt+0xbf74>  // b.any
  40e700:	ldr	x0, [x19, #144]
  40e704:	adds	x9, x8, x8, asr #1
  40e708:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40e70c:	csel	x22, x10, x9, vs
  40e710:	tbnz	x22, #63, 40e740 <wcrtomb@plt+0xbed0>
  40e714:	mov	x9, #0xfffffffffffffff     	// #1152921504606846975
  40e718:	cmp	x22, x9
  40e71c:	b.le	40e758 <wcrtomb@plt+0xbee8>
  40e720:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40e724:	lsr	x22, x9, #3
  40e728:	and	x1, x9, #0x7ffffffffffffff8
  40e72c:	cbnz	x0, 40e77c <wcrtomb@plt+0xbf0c>
  40e730:	str	xzr, [x19, #160]
  40e734:	cmp	x22, x8
  40e738:	b.gt	40e7bc <wcrtomb@plt+0xbf4c>
  40e73c:	b	40e784 <wcrtomb@plt+0xbf14>
  40e740:	cmn	x22, #0x1
  40e744:	b.eq	40e764 <wcrtomb@plt+0xbef4>  // b.none
  40e748:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40e74c:	sdiv	x9, x9, x22
  40e750:	cmp	x9, #0x8
  40e754:	b.lt	40e720 <wcrtomb@plt+0xbeb0>  // b.tstop
  40e758:	lsl	x1, x22, #3
  40e75c:	cmp	x1, #0x7f
  40e760:	b.gt	40e778 <wcrtomb@plt+0xbf08>
  40e764:	mov	w9, #0x80                  	// #128
  40e768:	lsr	x22, x9, #3
  40e76c:	and	x1, x9, #0x7ffffffffffffff8
  40e770:	cbnz	x0, 40e77c <wcrtomb@plt+0xbf0c>
  40e774:	b	40e730 <wcrtomb@plt+0xbec0>
  40e778:	cbz	x0, 40e730 <wcrtomb@plt+0xbec0>
  40e77c:	cmp	x22, x8
  40e780:	b.gt	40e7bc <wcrtomb@plt+0xbf4c>
  40e784:	adds	x22, x8, #0x1
  40e788:	b.vs	40e878 <wcrtomb@plt+0xc008>
  40e78c:	tbnz	x22, #63, 40e7a0 <wcrtomb@plt+0xbf30>
  40e790:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  40e794:	cmp	x22, x8
  40e798:	b.le	40e7b8 <wcrtomb@plt+0xbf48>
  40e79c:	b	40e878 <wcrtomb@plt+0xc008>
  40e7a0:	cmn	x22, #0x1
  40e7a4:	b.eq	40e7b8 <wcrtomb@plt+0xbf48>  // b.none
  40e7a8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40e7ac:	sdiv	x8, x8, x22
  40e7b0:	cmp	x8, #0x8
  40e7b4:	b.lt	40e878 <wcrtomb@plt+0xc008>  // b.tstop
  40e7b8:	lsl	x1, x22, #3
  40e7bc:	bl	417310 <wcrtomb@plt+0x14aa0>
  40e7c0:	ldrb	w8, [x19, #1048]
  40e7c4:	str	x22, [x19, #160]
  40e7c8:	str	x0, [x19, #144]
  40e7cc:	cbz	w8, 40e7e4 <wcrtomb@plt+0xbf74>
  40e7d0:	tbnz	x22, #63, 40e878 <wcrtomb@plt+0xc008>
  40e7d4:	ldr	x0, [x19, #280]
  40e7d8:	mov	x1, x22
  40e7dc:	bl	417310 <wcrtomb@plt+0x14aa0>
  40e7e0:	str	x0, [x19, #280]
  40e7e4:	ldrb	w8, [x19, #1048]
  40e7e8:	cbz	w8, 40e7f8 <wcrtomb@plt+0xbf88>
  40e7ec:	ldr	x8, [x19, #280]
  40e7f0:	ldr	x9, [x19, #152]
  40e7f4:	strb	w21, [x8, x9]
  40e7f8:	ldp	x10, x9, [x19, #144]
  40e7fc:	sub	x8, x20, #0x100
  40e800:	cmp	x8, #0x12
  40e804:	add	x11, x9, #0x1
  40e808:	str	x11, [x19, #152]
  40e80c:	str	x20, [x10, x9, lsl #3]
  40e810:	b.hi	40e83c <wcrtomb@plt+0xbfcc>  // b.pmore
  40e814:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40e818:	add	x9, x9, #0x4a2
  40e81c:	adr	x10, 40e82c <wcrtomb@plt+0xbfbc>
  40e820:	ldrb	w11, [x9, x8]
  40e824:	add	x10, x10, x11, lsl #2
  40e828:	br	x10
  40e82c:	ldr	x8, [x19, #136]
  40e830:	sub	x8, x8, #0x1
  40e834:	b	40e850 <wcrtomb@plt+0xbfe0>
  40e838:	strb	wzr, [x19, #192]
  40e83c:	ldr	x8, [x19, #176]
  40e840:	add	x8, x8, #0x1
  40e844:	str	x8, [x19, #176]
  40e848:	ldr	x8, [x19, #136]
  40e84c:	add	x8, x8, #0x1
  40e850:	str	x8, [x19, #136]
  40e854:	ldr	x8, [x19, #136]
  40e858:	ldr	x9, [x19, #168]
  40e85c:	cmp	x8, x9
  40e860:	b.le	40e868 <wcrtomb@plt+0xbff8>
  40e864:	str	x8, [x19, #168]
  40e868:	ldp	x20, x19, [sp, #32]
  40e86c:	ldp	x22, x21, [sp, #16]
  40e870:	ldp	x29, x30, [sp], #48
  40e874:	ret
  40e878:	bl	41757c <wcrtomb@plt+0x14d0c>
  40e87c:	sub	sp, sp, #0x150
  40e880:	stp	x29, x30, [sp, #240]
  40e884:	add	x29, sp, #0xf0
  40e888:	sub	x8, x29, #0x40
  40e88c:	movi	v0.2d, #0x0
  40e890:	stp	x28, x27, [sp, #256]
  40e894:	stp	x26, x25, [sp, #272]
  40e898:	stp	x24, x23, [sp, #288]
  40e89c:	stp	x22, x21, [sp, #304]
  40e8a0:	stp	x20, x19, [sp, #320]
  40e8a4:	str	xzr, [x0, #104]
  40e8a8:	stp	q0, q0, [x8]
  40e8ac:	mov	x19, x0
  40e8b0:	ldr	x2, [x19, #40]!
  40e8b4:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40e8b8:	mov	x24, x0
  40e8bc:	ldr	x1, [x24, #32]!
  40e8c0:	mov	x23, x0
  40e8c4:	add	x22, x0, #0x48
  40e8c8:	ldrb	w8, [x1]
  40e8cc:	add	x8, x0, x8, lsl #2
  40e8d0:	ldr	w27, [x8, #1308]
  40e8d4:	cmn	w27, #0x1
  40e8d8:	b.ne	40e91c <wcrtomb@plt+0xc0ac>  // b.any
  40e8dc:	add	x20, x23, #0x110
  40e8e0:	add	x0, sp, #0x2c
  40e8e4:	mov	x3, x20
  40e8e8:	bl	419da4 <wcrtomb@plt+0x17534>
  40e8ec:	sub	x8, x0, #0x1
  40e8f0:	cmn	x8, #0x3
  40e8f4:	b.cs	40e918 <wcrtomb@plt+0xc0a8>  // b.hs, b.nlast
  40e8f8:	ldr	w27, [sp, #44]
  40e8fc:	cmp	w0, #0x1
  40e900:	str	w27, [x22]
  40e904:	b.eq	40e920 <wcrtomb@plt+0xc0b0>  // b.none
  40e908:	ldr	x9, [x24]
  40e90c:	sxtw	x8, w0
  40e910:	mov	w21, #0xffffffff            	// #-1
  40e914:	b	40e92c <wcrtomb@plt+0xc0bc>
  40e918:	str	xzr, [x20]
  40e91c:	str	w27, [x22]
  40e920:	ldr	x9, [x24]
  40e924:	mov	w8, #0x1                   	// #1
  40e928:	ldrb	w21, [x9]
  40e92c:	add	x1, x9, x8
  40e930:	str	x1, [x24]
  40e934:	ldr	x9, [x19]
  40e938:	cmp	w21, #0x5e
  40e93c:	sub	x2, x9, x8
  40e940:	cset	w8, eq  // eq = none
  40e944:	str	x2, [x19]
  40e948:	stp	w8, w21, [sp, #8]
  40e94c:	b.ne	40e9a4 <wcrtomb@plt+0xc134>  // b.any
  40e950:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40e954:	ldrb	w8, [x1]
  40e958:	add	x8, x23, x8, lsl #2
  40e95c:	ldr	w27, [x8, #1308]
  40e960:	cmn	w27, #0x1
  40e964:	b.ne	40e9b4 <wcrtomb@plt+0xc144>  // b.any
  40e968:	add	x20, x23, #0x110
  40e96c:	add	x0, sp, #0x2c
  40e970:	mov	x3, x20
  40e974:	bl	419da4 <wcrtomb@plt+0x17534>
  40e978:	sub	x8, x0, #0x1
  40e97c:	cmn	x8, #0x3
  40e980:	b.cs	40e9b0 <wcrtomb@plt+0xc140>  // b.hs, b.nlast
  40e984:	ldr	w27, [sp, #44]
  40e988:	cmp	w0, #0x1
  40e98c:	str	w27, [x22]
  40e990:	b.eq	40e9b8 <wcrtomb@plt+0xc148>  // b.none
  40e994:	ldr	x8, [x24]
  40e998:	sxtw	x9, w0
  40e99c:	mov	w25, #0xffffffff            	// #-1
  40e9a0:	b	40e9c4 <wcrtomb@plt+0xc154>
  40e9a4:	mov	w25, w21
  40e9a8:	mov	w8, #0x1                   	// #1
  40e9ac:	b	40e9e4 <wcrtomb@plt+0xc174>
  40e9b0:	str	xzr, [x20]
  40e9b4:	str	w27, [x22]
  40e9b8:	ldr	x8, [x24]
  40e9bc:	mov	w9, #0x1                   	// #1
  40e9c0:	ldrb	w25, [x8]
  40e9c4:	ldr	x10, [x23, #40]
  40e9c8:	ldrb	w11, [x23, #1049]
  40e9cc:	add	x8, x8, x9
  40e9d0:	str	x8, [x23, #32]
  40e9d4:	sub	x8, x10, x9
  40e9d8:	cmp	w11, #0x0
  40e9dc:	str	x8, [x23, #40]
  40e9e0:	cset	w8, ne  // ne = any
  40e9e4:	str	w8, [sp, #24]
  40e9e8:	add	x8, x23, #0x110
  40e9ec:	cmp	w25, #0x3a
  40e9f0:	str	x8, [sp, #32]
  40e9f4:	add	x8, sp, #0x2c
  40e9f8:	sub	x26, x29, #0x40
  40e9fc:	cset	w20, eq  // eq = none
  40ea00:	add	x8, x8, #0x4
  40ea04:	str	x8, [sp, #16]
  40ea08:	b	40ea34 <wcrtomb@plt+0xc1c4>
  40ea0c:	lsr	w8, w25, #6
  40ea10:	lsl	x8, x8, #3
  40ea14:	ldr	x9, [x26, x8]
  40ea18:	lsl	x10, x11, x25
  40ea1c:	orr	x9, x9, x10
  40ea20:	str	x9, [x26, x8]
  40ea24:	cmp	w28, #0x5d
  40ea28:	mov	w25, w28
  40ea2c:	mov	w27, w21
  40ea30:	b.eq	40f630 <wcrtomb@plt+0xcdc0>  // b.none
  40ea34:	cmp	w25, #0x5c
  40ea38:	and	w20, w20, #0xfffffffd
  40ea3c:	b.eq	40eac4 <wcrtomb@plt+0xc254>  // b.none
  40ea40:	cmp	w25, #0x5b
  40ea44:	b.ne	40eacc <wcrtomb@plt+0xc25c>  // b.any
  40ea48:	ldr	x2, [x19]
  40ea4c:	str	w20, [sp, #40]
  40ea50:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40ea54:	ldr	x1, [x23, #32]
  40ea58:	ldrb	w8, [x1]
  40ea5c:	add	x8, x23, x8, lsl #2
  40ea60:	ldr	w21, [x8, #1308]
  40ea64:	cmn	w21, #0x1
  40ea68:	b.ne	40eb34 <wcrtomb@plt+0xc2c4>  // b.any
  40ea6c:	ldr	x20, [sp, #32]
  40ea70:	add	x0, sp, #0x2c
  40ea74:	mov	x3, x20
  40ea78:	bl	419da4 <wcrtomb@plt+0x17534>
  40ea7c:	sub	x8, x0, #0x1
  40ea80:	cmn	x8, #0x3
  40ea84:	b.cs	40eb30 <wcrtomb@plt+0xc2c0>  // b.hs, b.nlast
  40ea88:	ldr	w21, [sp, #44]
  40ea8c:	cmp	w0, #0x1
  40ea90:	str	w21, [x22]
  40ea94:	b.eq	40eb38 <wcrtomb@plt+0xc2c8>  // b.none
  40ea98:	ldr	x8, [x24]
  40ea9c:	sxtw	x9, w0
  40eaa0:	mov	w25, #0x5b                  	// #91
  40eaa4:	mov	w28, #0xffffffff            	// #-1
  40eaa8:	add	x8, x8, x9
  40eaac:	str	x8, [x24]
  40eab0:	ldr	x10, [x19]
  40eab4:	mov	w8, #0x4                   	// #4
  40eab8:	sub	x9, x10, x9
  40eabc:	str	x9, [x19]
  40eac0:	b	40eb7c <wcrtomb@plt+0xc30c>
  40eac4:	ldrb	w8, [x23, #448]
  40eac8:	tbnz	w8, #0, 40ead8 <wcrtomb@plt+0xc268>
  40eacc:	ldr	x2, [x19]
  40ead0:	cbnz	x2, 40ef08 <wcrtomb@plt+0xc698>
  40ead4:	b	40f9e4 <wcrtomb@plt+0xd174>
  40ead8:	ldr	x2, [x19]
  40eadc:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40eae0:	ldr	x1, [x23, #32]
  40eae4:	ldrb	w8, [x1]
  40eae8:	add	x8, x23, x8, lsl #2
  40eaec:	ldr	w27, [x8, #1308]
  40eaf0:	cmn	w27, #0x1
  40eaf4:	b.ne	40eee0 <wcrtomb@plt+0xc670>  // b.any
  40eaf8:	mov	w21, w20
  40eafc:	ldr	x20, [sp, #32]
  40eb00:	add	x0, sp, #0x2c
  40eb04:	mov	x3, x20
  40eb08:	bl	419da4 <wcrtomb@plt+0x17534>
  40eb0c:	sub	x8, x0, #0x1
  40eb10:	cmn	x8, #0x3
  40eb14:	b.cs	40eed8 <wcrtomb@plt+0xc668>  // b.hs, b.nlast
  40eb18:	ldr	w27, [sp, #44]
  40eb1c:	cmp	w0, #0x1
  40eb20:	str	w27, [x22]
  40eb24:	b.ne	40f0e4 <wcrtomb@plt+0xc874>  // b.any
  40eb28:	mov	w20, w21
  40eb2c:	b	40eee4 <wcrtomb@plt+0xc674>
  40eb30:	str	xzr, [x20]
  40eb34:	str	w21, [x22]
  40eb38:	ldr	x1, [x24]
  40eb3c:	mov	w20, wzr
  40eb40:	ldrb	w28, [x1], #1
  40eb44:	str	x1, [x24]
  40eb48:	ldr	x8, [x19]
  40eb4c:	cmp	w28, #0x2e
  40eb50:	sub	x2, x8, #0x1
  40eb54:	str	x2, [x19]
  40eb58:	b.eq	40ec3c <wcrtomb@plt+0xc3cc>  // b.none
  40eb5c:	cmp	w28, #0x3d
  40eb60:	b.eq	40ec3c <wcrtomb@plt+0xc3cc>  // b.none
  40eb64:	cmp	w28, #0x3a
  40eb68:	b.ne	40ec20 <wcrtomb@plt+0xc3b0>  // b.any
  40eb6c:	ldrb	w8, [x23, #448]
  40eb70:	tbnz	w8, #2, 40ec38 <wcrtomb@plt+0xc3c8>
  40eb74:	mov	w8, #0x4                   	// #4
  40eb78:	mov	w25, #0x5b                  	// #91
  40eb7c:	ldr	w20, [sp, #40]
  40eb80:	mov	w11, #0x1                   	// #1
  40eb84:	ldrb	w9, [x23, #1048]
  40eb88:	orr	w20, w20, w8
  40eb8c:	cbnz	w9, 40f208 <wcrtomb@plt+0xc998>
  40eb90:	ldrb	w8, [x23, #457]
  40eb94:	cbz	w8, 40ea0c <wcrtomb@plt+0xc19c>
  40eb98:	bl	402610 <__ctype_b_loc@plt>
  40eb9c:	ldr	x8, [x0]
  40eba0:	mov	w11, #0x1                   	// #1
  40eba4:	ldrh	w8, [x8, w25, sxtw #1]
  40eba8:	tbz	w8, #10, 40ea0c <wcrtomb@plt+0xc19c>
  40ebac:	add	w8, w25, #0x80
  40ebb0:	cmp	w8, #0x17f
  40ebb4:	b.hi	40ebd8 <wcrtomb@plt+0xc368>  // b.pmore
  40ebb8:	mov	w27, w21
  40ebbc:	mov	w21, w20
  40ebc0:	sxtw	x20, w25
  40ebc4:	bl	4024d0 <__ctype_toupper_loc@plt>
  40ebc8:	ldr	x8, [x0]
  40ebcc:	ldr	w25, [x8, x20, lsl #2]
  40ebd0:	mov	w20, w21
  40ebd4:	mov	w21, w27
  40ebd8:	bl	4024d0 <__ctype_toupper_loc@plt>
  40ebdc:	ldr	x8, [x0]
  40ebe0:	mov	x9, xzr
  40ebe4:	mov	w13, #0x1                   	// #1
  40ebe8:	b	40ebf8 <wcrtomb@plt+0xc388>
  40ebec:	add	x9, x9, #0x1
  40ebf0:	cmp	x9, #0x100
  40ebf4:	b.eq	40ea24 <wcrtomb@plt+0xc1b4>  // b.none
  40ebf8:	ldr	w10, [x8, x9, lsl #2]
  40ebfc:	cmp	w10, w25
  40ec00:	b.ne	40ebec <wcrtomb@plt+0xc37c>  // b.any
  40ec04:	ubfx	x10, x9, #6, #26
  40ec08:	lsl	x10, x10, #3
  40ec0c:	ldr	x11, [x26, x10]
  40ec10:	lsl	x12, x13, x9
  40ec14:	orr	x11, x11, x12
  40ec18:	str	x11, [x26, x10]
  40ec1c:	b	40ebec <wcrtomb@plt+0xc37c>
  40ec20:	ldr	w20, [sp, #40]
  40ec24:	mov	w25, #0x5b                  	// #91
  40ec28:	cmp	w28, #0x2d
  40ec2c:	b.eq	40ef9c <wcrtomb@plt+0xc72c>  // b.none
  40ec30:	mov	w11, #0x1                   	// #1
  40ec34:	b	40f1ec <wcrtomb@plt+0xc97c>
  40ec38:	mov	w20, #0x1                   	// #1
  40ec3c:	ldr	x27, [sp, #32]
  40ec40:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40ec44:	mov	w21, wzr
  40ec48:	b	40ec58 <wcrtomb@plt+0xc3e8>
  40ec4c:	cmp	w21, #0x1f
  40ec50:	b.ls	40ece8 <wcrtomb@plt+0xc478>  // b.plast
  40ec54:	strb	wzr, [sp, #44]
  40ec58:	ldrb	w8, [x1]
  40ec5c:	add	x8, x23, x8, lsl #2
  40ec60:	ldr	w25, [x8, #1308]
  40ec64:	cmn	w25, #0x1
  40ec68:	b.ne	40eca8 <wcrtomb@plt+0xc438>  // b.any
  40ec6c:	sub	x0, x29, #0x14
  40ec70:	mov	x3, x27
  40ec74:	bl	419da4 <wcrtomb@plt+0x17534>
  40ec78:	sub	x8, x0, #0x1
  40ec7c:	cmn	x8, #0x3
  40ec80:	b.cs	40eca4 <wcrtomb@plt+0xc434>  // b.hs, b.nlast
  40ec84:	ldur	w8, [x29, #-20]
  40ec88:	cmp	w0, #0x1
  40ec8c:	str	w8, [x22]
  40ec90:	b.eq	40ecac <wcrtomb@plt+0xc43c>  // b.none
  40ec94:	ldr	x9, [x24]
  40ec98:	sxtw	x10, w0
  40ec9c:	mov	w8, #0xffffffff            	// #-1
  40eca0:	b	40ecb8 <wcrtomb@plt+0xc448>
  40eca4:	str	xzr, [x27]
  40eca8:	str	w25, [x22]
  40ecac:	ldr	x9, [x24]
  40ecb0:	mov	w10, #0x1                   	// #1
  40ecb4:	ldrb	w8, [x9]
  40ecb8:	add	x1, x9, x10
  40ecbc:	str	x1, [x24]
  40ecc0:	ldr	x9, [x19]
  40ecc4:	subs	x2, x9, x10
  40ecc8:	str	x2, [x19]
  40eccc:	b.eq	40f9e4 <wcrtomb@plt+0xd174>  // b.none
  40ecd0:	cmp	w8, w28
  40ecd4:	b.ne	40ec4c <wcrtomb@plt+0xc3dc>  // b.any
  40ecd8:	ldrb	w9, [x1]
  40ecdc:	cmp	w9, #0x5d
  40ece0:	b.ne	40ec4c <wcrtomb@plt+0xc3dc>  // b.any
  40ece4:	b	40ecfc <wcrtomb@plt+0xc48c>
  40ece8:	add	w9, w21, #0x1
  40ecec:	add	x10, sp, #0x2c
  40ecf0:	strb	w8, [x10, w21, uxtw]
  40ecf4:	mov	w21, w9
  40ecf8:	b	40ec58 <wcrtomb@plt+0xc3e8>
  40ecfc:	add	x8, sp, #0x2c
  40ed00:	strb	wzr, [x8, w21, uxtw]
  40ed04:	ldr	w21, [x23, #1680]
  40ed08:	cmn	w21, #0x1
  40ed0c:	b.ne	40ed44 <wcrtomb@plt+0xc4d4>  // b.any
  40ed10:	sub	x0, x29, #0x14
  40ed14:	mov	x3, x27
  40ed18:	bl	419da4 <wcrtomb@plt+0x17534>
  40ed1c:	sub	x8, x0, #0x1
  40ed20:	cmn	x8, #0x3
  40ed24:	b.cs	40ed40 <wcrtomb@plt+0xc4d0>  // b.hs, b.nlast
  40ed28:	ldur	w8, [x29, #-20]
  40ed2c:	cmp	w0, #0x1
  40ed30:	str	w8, [x22]
  40ed34:	b.eq	40ed48 <wcrtomb@plt+0xc4d8>  // b.none
  40ed38:	sxtw	x8, w0
  40ed3c:	b	40ed4c <wcrtomb@plt+0xc4dc>
  40ed40:	str	xzr, [x27]
  40ed44:	str	w21, [x22]
  40ed48:	mov	w8, #0x1                   	// #1
  40ed4c:	ldr	x9, [x24]
  40ed50:	add	x9, x9, x8
  40ed54:	str	x9, [x24]
  40ed58:	ldr	x9, [x19]
  40ed5c:	sub	x27, x9, x8
  40ed60:	str	x27, [x19]
  40ed64:	cbz	w20, 40f564 <wcrtomb@plt+0xccf4>
  40ed68:	ldrb	w8, [x23, #457]
  40ed6c:	mov	w11, #0x72                  	// #114
  40ed70:	cbz	w8, 40edb4 <wcrtomb@plt+0xc544>
  40ed74:	ldr	w8, [sp, #44]
  40ed78:	ldrh	w9, [sp, #48]
  40ed7c:	mov	w10, #0x7075                	// #28789
  40ed80:	movk	w10, #0x6570, lsl #16
  40ed84:	eor	w8, w8, w10
  40ed88:	eor	w9, w9, w11
  40ed8c:	orr	w8, w8, w9
  40ed90:	cbz	w8, 40eeb4 <wcrtomb@plt+0xc644>
  40ed94:	ldr	w8, [sp, #44]
  40ed98:	ldrh	w9, [sp, #48]
  40ed9c:	mov	w10, #0x6f6c                	// #28524
  40eda0:	movk	w10, #0x6577, lsl #16
  40eda4:	eor	w8, w8, w10
  40eda8:	eor	w9, w9, w11
  40edac:	orr	w8, w8, w9
  40edb0:	cbz	w8, 40eeb4 <wcrtomb@plt+0xc644>
  40edb4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40edb8:	add	x21, sp, #0x2c
  40edbc:	add	x1, x1, #0x846
  40edc0:	mov	x0, x21
  40edc4:	bl	402600 <strcmp@plt>
  40edc8:	cbz	w0, 40eecc <wcrtomb@plt+0xc65c>
  40edcc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40edd0:	mov	x0, x21
  40edd4:	add	x1, x1, #0x83a
  40edd8:	bl	402600 <strcmp@plt>
  40eddc:	cbz	w0, 40f0d8 <wcrtomb@plt+0xc868>
  40ede0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ede4:	mov	x0, x21
  40ede8:	add	x1, x1, #0x840
  40edec:	bl	402600 <strcmp@plt>
  40edf0:	cbz	w0, 40f0f8 <wcrtomb@plt+0xc888>
  40edf4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40edf8:	mov	x0, x21
  40edfc:	add	x1, x1, #0x8a7
  40ee00:	bl	402600 <strcmp@plt>
  40ee04:	cbz	w0, 40f104 <wcrtomb@plt+0xc894>
  40ee08:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee0c:	mov	x0, x21
  40ee10:	add	x1, x1, #0x8a6
  40ee14:	bl	402600 <strcmp@plt>
  40ee18:	cbz	w0, 40f4c0 <wcrtomb@plt+0xcc50>
  40ee1c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee20:	mov	x0, x21
  40ee24:	add	x1, x1, #0x8ad
  40ee28:	bl	402600 <strcmp@plt>
  40ee2c:	cbz	w0, 40f4cc <wcrtomb@plt+0xcc5c>
  40ee30:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee34:	mov	x0, x21
  40ee38:	add	x1, x1, #0x8b3
  40ee3c:	bl	402600 <strcmp@plt>
  40ee40:	cbz	w0, 40f4d8 <wcrtomb@plt+0xcc68>
  40ee44:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee48:	mov	x0, x21
  40ee4c:	add	x1, x1, #0x8b9
  40ee50:	bl	402600 <strcmp@plt>
  40ee54:	cbz	w0, 40f4e4 <wcrtomb@plt+0xcc74>
  40ee58:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee5c:	mov	x0, x21
  40ee60:	add	x1, x1, #0x8bf
  40ee64:	bl	402600 <strcmp@plt>
  40ee68:	cbz	w0, 40f4f0 <wcrtomb@plt+0xcc80>
  40ee6c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee70:	mov	x0, x21
  40ee74:	add	x1, x1, #0x8c5
  40ee78:	bl	402600 <strcmp@plt>
  40ee7c:	cbz	w0, 40f4fc <wcrtomb@plt+0xcc8c>
  40ee80:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee84:	mov	x0, x21
  40ee88:	add	x1, x1, #0x8cb
  40ee8c:	bl	402600 <strcmp@plt>
  40ee90:	cbz	w0, 40f508 <wcrtomb@plt+0xcc98>
  40ee94:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40ee98:	mov	x0, x21
  40ee9c:	add	x1, x1, #0x8d1
  40eea0:	bl	402600 <strcmp@plt>
  40eea4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40eea8:	add	x20, x20, #0x5c0
  40eeac:	cbz	w0, 40f510 <wcrtomb@plt+0xcca0>
  40eeb0:	b	40fa00 <wcrtomb@plt+0xd190>
  40eeb4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40eeb8:	add	x1, x1, #0x846
  40eebc:	mov	x21, x1
  40eec0:	mov	x0, x21
  40eec4:	bl	402600 <strcmp@plt>
  40eec8:	cbnz	w0, 40edcc <wcrtomb@plt+0xc55c>
  40eecc:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40eed0:	add	x20, x20, #0x4b8
  40eed4:	b	40f510 <wcrtomb@plt+0xcca0>
  40eed8:	str	xzr, [x20]
  40eedc:	mov	w20, w21
  40eee0:	str	w27, [x22]
  40eee4:	ldr	x8, [x24]
  40eee8:	mov	w9, #0x1                   	// #1
  40eeec:	ldrb	w25, [x8]
  40eef0:	add	x8, x8, x9
  40eef4:	str	x8, [x24]
  40eef8:	ldr	x8, [x19]
  40eefc:	sub	x2, x8, x9
  40ef00:	str	x2, [x19]
  40ef04:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40ef08:	ldr	x1, [x23, #32]
  40ef0c:	ldrb	w8, [x1]
  40ef10:	add	x8, x23, x8, lsl #2
  40ef14:	ldr	w21, [x8, #1308]
  40ef18:	cmn	w21, #0x1
  40ef1c:	b.ne	40ef70 <wcrtomb@plt+0xc700>  // b.any
  40ef20:	mov	w28, w21
  40ef24:	mov	w21, w20
  40ef28:	ldr	x20, [sp, #32]
  40ef2c:	add	x0, sp, #0x2c
  40ef30:	mov	x3, x20
  40ef34:	bl	419da4 <wcrtomb@plt+0x17534>
  40ef38:	sub	x8, x0, #0x1
  40ef3c:	cmn	x8, #0x3
  40ef40:	b.cs	40ef64 <wcrtomb@plt+0xc6f4>  // b.hs, b.nlast
  40ef44:	ldr	w8, [sp, #44]
  40ef48:	cmp	w0, #0x1
  40ef4c:	mov	w10, w8
  40ef50:	str	w8, [x22]
  40ef54:	b.ne	40f06c <wcrtomb@plt+0xc7fc>  // b.any
  40ef58:	mov	w20, w21
  40ef5c:	mov	w21, w10
  40ef60:	b	40ef74 <wcrtomb@plt+0xc704>
  40ef64:	str	xzr, [x20]
  40ef68:	mov	w20, w21
  40ef6c:	mov	w21, w28
  40ef70:	str	w21, [x22]
  40ef74:	ldr	x8, [x24]
  40ef78:	mov	w9, #0x1                   	// #1
  40ef7c:	ldrb	w28, [x8]
  40ef80:	add	x1, x8, x9
  40ef84:	str	x1, [x24]
  40ef88:	ldr	x8, [x19]
  40ef8c:	sub	x2, x8, x9
  40ef90:	str	x2, [x19]
  40ef94:	cmp	w28, #0x2d
  40ef98:	b.ne	40ec30 <wcrtomb@plt+0xc3c0>  // b.any
  40ef9c:	str	w20, [sp, #40]
  40efa0:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40efa4:	ldrb	w8, [x1]
  40efa8:	add	x8, x23, x8, lsl #2
  40efac:	ldr	w12, [x8, #1308]
  40efb0:	cmn	w12, #0x1
  40efb4:	b.ne	40f000 <wcrtomb@plt+0xc790>  // b.any
  40efb8:	ldr	x20, [sp, #32]
  40efbc:	add	x0, sp, #0x2c
  40efc0:	mov	w28, w12
  40efc4:	mov	x3, x20
  40efc8:	bl	419da4 <wcrtomb@plt+0x17534>
  40efcc:	sub	x8, x0, #0x1
  40efd0:	cmn	x8, #0x3
  40efd4:	b.cs	40eff8 <wcrtomb@plt+0xc788>  // b.hs, b.nlast
  40efd8:	ldr	w12, [sp, #44]
  40efdc:	cmp	w0, #0x1
  40efe0:	str	w12, [x22]
  40efe4:	b.eq	40f004 <wcrtomb@plt+0xc794>  // b.none
  40efe8:	ldr	x8, [x24]
  40efec:	sxtw	x9, w0
  40eff0:	mov	w20, #0xffffffff            	// #-1
  40eff4:	b	40f128 <wcrtomb@plt+0xc8b8>
  40eff8:	mov	w12, w28
  40effc:	str	xzr, [x20]
  40f000:	str	w12, [x22]
  40f004:	ldr	x8, [x24]
  40f008:	mov	x1, x8
  40f00c:	ldrb	w20, [x1], #1
  40f010:	str	x1, [x24]
  40f014:	ldr	x9, [x19]
  40f018:	cmp	w20, #0x5d
  40f01c:	sub	x2, x9, #0x1
  40f020:	str	x2, [x19]
  40f024:	b.eq	40f048 <wcrtomb@plt+0xc7d8>  // b.none
  40f028:	cmp	w20, #0x5c
  40f02c:	b.eq	40f05c <wcrtomb@plt+0xc7ec>  // b.none
  40f030:	cmp	w20, #0x5b
  40f034:	b.ne	40f13c <wcrtomb@plt+0xc8cc>  // b.any
  40f038:	ldrb	w10, [x1]
  40f03c:	cmp	w10, #0x2e
  40f040:	b.ne	40f0d0 <wcrtomb@plt+0xc860>  // b.any
  40f044:	str	wzr, [sp, #24]
  40f048:	ldr	w20, [sp, #40]
  40f04c:	stp	x8, x9, [x23, #32]
  40f050:	mov	w28, #0x2d                  	// #45
  40f054:	mov	w11, #0x1                   	// #1
  40f058:	b	40f1ec <wcrtomb@plt+0xc97c>
  40f05c:	ldrb	w8, [x23, #448]
  40f060:	tbnz	w8, #0, 40f084 <wcrtomb@plt+0xc814>
  40f064:	mov	w20, #0x5c                  	// #92
  40f068:	b	40f13c <wcrtomb@plt+0xc8cc>
  40f06c:	ldr	x8, [x24]
  40f070:	sxtw	x9, w0
  40f074:	mov	w28, #0xffffffff            	// #-1
  40f078:	mov	w20, w21
  40f07c:	mov	w21, w10
  40f080:	b	40ef80 <wcrtomb@plt+0xc710>
  40f084:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40f088:	ldrb	w8, [x1]
  40f08c:	add	x8, x23, x8, lsl #2
  40f090:	ldr	w12, [x8, #1308]
  40f094:	cmn	w12, #0x1
  40f098:	b.ne	40f118 <wcrtomb@plt+0xc8a8>  // b.any
  40f09c:	ldr	x20, [sp, #32]
  40f0a0:	add	x0, sp, #0x2c
  40f0a4:	mov	w21, w12
  40f0a8:	mov	x3, x20
  40f0ac:	bl	419da4 <wcrtomb@plt+0x17534>
  40f0b0:	sub	x8, x0, #0x1
  40f0b4:	cmn	x8, #0x3
  40f0b8:	b.cs	40f110 <wcrtomb@plt+0xc8a0>  // b.hs, b.nlast
  40f0bc:	ldr	w12, [sp, #44]
  40f0c0:	cmp	w0, #0x1
  40f0c4:	str	w12, [x22]
  40f0c8:	b.ne	40efe8 <wcrtomb@plt+0xc778>  // b.any
  40f0cc:	b	40f11c <wcrtomb@plt+0xc8ac>
  40f0d0:	mov	w20, #0x5b                  	// #91
  40f0d4:	b	40f13c <wcrtomb@plt+0xc8cc>
  40f0d8:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f0dc:	add	x20, x20, #0x4d0
  40f0e0:	b	40f510 <wcrtomb@plt+0xcca0>
  40f0e4:	ldr	x8, [x24]
  40f0e8:	sxtw	x9, w0
  40f0ec:	mov	w25, #0xffffffff            	// #-1
  40f0f0:	mov	w20, w21
  40f0f4:	b	40eef0 <wcrtomb@plt+0xc680>
  40f0f8:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f0fc:	add	x20, x20, #0x4e8
  40f100:	b	40f510 <wcrtomb@plt+0xcca0>
  40f104:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f108:	add	x20, x20, #0x500
  40f10c:	b	40f510 <wcrtomb@plt+0xcca0>
  40f110:	mov	w12, w21
  40f114:	str	xzr, [x20]
  40f118:	str	w12, [x22]
  40f11c:	ldr	x8, [x24]
  40f120:	mov	w9, #0x1                   	// #1
  40f124:	ldrb	w20, [x8]
  40f128:	add	x1, x8, x9
  40f12c:	str	x1, [x24]
  40f130:	ldr	x8, [x19]
  40f134:	sub	x2, x8, x9
  40f138:	str	x2, [x19]
  40f13c:	cbz	x2, 40f9e4 <wcrtomb@plt+0xd174>
  40f140:	ldrb	w8, [x1]
  40f144:	add	x8, x23, x8, lsl #2
  40f148:	ldr	w21, [x8, #1308]
  40f14c:	ldr	w8, [sp, #40]
  40f150:	cmn	w21, #0x1
  40f154:	orr	w8, w8, #0x8
  40f158:	str	w8, [sp, #40]
  40f15c:	b.ne	40f1b0 <wcrtomb@plt+0xc940>  // b.any
  40f160:	ldr	x28, [sp, #32]
  40f164:	add	x0, sp, #0x2c
  40f168:	str	w12, [sp, #28]
  40f16c:	mov	x3, x28
  40f170:	bl	419da4 <wcrtomb@plt+0x17534>
  40f174:	sub	x8, x0, #0x1
  40f178:	cmn	x8, #0x3
  40f17c:	b.cs	40f1a8 <wcrtomb@plt+0xc938>  // b.hs, b.nlast
  40f180:	ldr	w21, [sp, #44]
  40f184:	ldr	w12, [sp, #28]
  40f188:	cmp	w0, #0x1
  40f18c:	mov	w11, #0x1                   	// #1
  40f190:	str	w21, [x22]
  40f194:	b.eq	40f1b8 <wcrtomb@plt+0xc948>  // b.none
  40f198:	ldr	x8, [x24]
  40f19c:	sxtw	x9, w0
  40f1a0:	mov	w28, #0xffffffff            	// #-1
  40f1a4:	b	40f1c4 <wcrtomb@plt+0xc954>
  40f1a8:	ldr	w12, [sp, #28]
  40f1ac:	str	xzr, [x28]
  40f1b0:	mov	w11, #0x1                   	// #1
  40f1b4:	str	w21, [x22]
  40f1b8:	ldr	x8, [x24]
  40f1bc:	mov	w9, #0x1                   	// #1
  40f1c0:	ldrb	w28, [x8]
  40f1c4:	add	x8, x8, x9
  40f1c8:	str	x8, [x24]
  40f1cc:	ldr	x8, [x19]
  40f1d0:	cmn	w27, #0x1
  40f1d4:	sub	x8, x8, x9
  40f1d8:	str	x8, [x19]
  40f1dc:	b.eq	40f244 <wcrtomb@plt+0xc9d4>  // b.none
  40f1e0:	cmp	w27, w12
  40f1e4:	b.ne	40f244 <wcrtomb@plt+0xc9d4>  // b.any
  40f1e8:	ldr	w20, [sp, #40]
  40f1ec:	cmp	w25, #0x3a
  40f1f0:	mov	w8, #0x4                   	// #4
  40f1f4:	mov	w9, #0x2                   	// #2
  40f1f8:	csel	w8, w9, w8, eq  // eq = none
  40f1fc:	ldrb	w9, [x23, #1048]
  40f200:	orr	w20, w20, w8
  40f204:	cbz	w9, 40eb90 <wcrtomb@plt+0xc320>
  40f208:	cmn	w27, #0x1
  40f20c:	b.eq	40f23c <wcrtomb@plt+0xc9cc>  // b.none
  40f210:	ldrb	w8, [x23, #457]
  40f214:	str	w21, [sp, #28]
  40f218:	mov	w21, w20
  40f21c:	cbz	w8, 40f358 <wcrtomb@plt+0xcae8>
  40f220:	ldr	x1, [sp, #16]
  40f224:	mov	w0, w27
  40f228:	bl	4128a0 <wcrtomb@plt+0x10030>
  40f22c:	str	w27, [sp, #44]
  40f230:	tbnz	w0, #31, 40f4a0 <wcrtomb@plt+0xcc30>
  40f234:	add	w8, w0, #0x1
  40f238:	b	40f360 <wcrtomb@plt+0xcaf0>
  40f23c:	str	wzr, [sp, #24]
  40f240:	b	40ea24 <wcrtomb@plt+0xc1b4>
  40f244:	ldrb	w8, [x23, #1049]
  40f248:	cbnz	w8, 40f26c <wcrtomb@plt+0xc9fc>
  40f24c:	sub	w8, w25, #0x30
  40f250:	and	w8, w8, #0xff
  40f254:	cmp	w8, #0x9
  40f258:	b.hi	40f4b4 <wcrtomb@plt+0xcc44>  // b.pmore
  40f25c:	sub	w8, w20, #0x30
  40f260:	and	w8, w8, #0xff
  40f264:	cmp	w8, #0x9
  40f268:	b.hi	40f4b4 <wcrtomb@plt+0xcc44>  // b.pmore
  40f26c:	cmp	w25, w20
  40f270:	b.gt	40f2c0 <wcrtomb@plt+0xca50>
  40f274:	ldrb	w8, [x23, #457]
  40f278:	cbz	w8, 40f298 <wcrtomb@plt+0xca28>
  40f27c:	str	w21, [sp, #28]
  40f280:	sxtw	x25, w25
  40f284:	sxtw	x20, w20
  40f288:	bl	402610 <__ctype_b_loc@plt>
  40f28c:	ldr	x27, [x0]
  40f290:	mov	w13, #0x1                   	// #1
  40f294:	b	40f2ec <wcrtomb@plt+0xca7c>
  40f298:	lsr	w8, w25, #6
  40f29c:	lsl	x8, x8, #3
  40f2a0:	ldr	x9, [x26, x8]
  40f2a4:	lsl	x10, x11, x25
  40f2a8:	cmp	w25, w20
  40f2ac:	orr	x9, x9, x10
  40f2b0:	add	w10, w25, #0x1
  40f2b4:	mov	w25, w10
  40f2b8:	str	x9, [x26, x8]
  40f2bc:	b.lt	40f298 <wcrtomb@plt+0xca28>  // b.tstop
  40f2c0:	ldr	w20, [sp, #40]
  40f2c4:	b	40ea24 <wcrtomb@plt+0xc1b4>
  40f2c8:	ubfx	x8, x25, #6, #26
  40f2cc:	lsl	x8, x8, #3
  40f2d0:	ldr	x9, [x26, x8]
  40f2d4:	lsl	x10, x13, x25
  40f2d8:	orr	x9, x9, x10
  40f2dc:	str	x9, [x26, x8]
  40f2e0:	cmp	x25, x20
  40f2e4:	add	x25, x25, #0x1
  40f2e8:	b.ge	40f4ac <wcrtomb@plt+0xcc3c>  // b.tcont
  40f2ec:	ldrh	w8, [x27, x25, lsl #1]
  40f2f0:	tbz	w8, #10, 40f2c8 <wcrtomb@plt+0xca58>
  40f2f4:	add	x8, x25, #0x80
  40f2f8:	cmp	x8, #0x17f
  40f2fc:	mov	w21, w25
  40f300:	b.hi	40f310 <wcrtomb@plt+0xcaa0>  // b.pmore
  40f304:	bl	4024d0 <__ctype_toupper_loc@plt>
  40f308:	ldr	x8, [x0]
  40f30c:	ldr	w21, [x8, x25, lsl #2]
  40f310:	bl	4024d0 <__ctype_toupper_loc@plt>
  40f314:	ldr	x8, [x0]
  40f318:	mov	x9, xzr
  40f31c:	mov	w13, #0x1                   	// #1
  40f320:	b	40f330 <wcrtomb@plt+0xcac0>
  40f324:	add	x9, x9, #0x1
  40f328:	cmp	x9, #0x100
  40f32c:	b.eq	40f2e0 <wcrtomb@plt+0xca70>  // b.none
  40f330:	ldr	w10, [x8, x9, lsl #2]
  40f334:	cmp	w10, w21
  40f338:	b.ne	40f324 <wcrtomb@plt+0xcab4>  // b.any
  40f33c:	ubfx	x10, x9, #6, #26
  40f340:	lsl	x10, x10, #3
  40f344:	ldr	x11, [x26, x10]
  40f348:	lsl	x12, x13, x9
  40f34c:	orr	x11, x11, x12
  40f350:	str	x11, [x26, x10]
  40f354:	b	40f324 <wcrtomb@plt+0xcab4>
  40f358:	str	w27, [sp, #44]
  40f35c:	mov	w8, #0x1                   	// #1
  40f360:	ldr	x25, [sp, #16]
  40f364:	mov	w8, w8
  40f368:	sub	x20, x8, #0x1
  40f36c:	mov	w0, w27
  40f370:	bl	402350 <wctob@plt>
  40f374:	tbnz	w0, #31, 40f39c <wcrtomb@plt+0xcb2c>
  40f378:	lsr	w8, w0, #6
  40f37c:	lsl	x8, x8, #3
  40f380:	ldr	x9, [x26, x8]
  40f384:	mov	w10, #0x1                   	// #1
  40f388:	lsl	x10, x10, x0
  40f38c:	orr	x9, x9, x10
  40f390:	str	x9, [x26, x8]
  40f394:	cbnz	x20, 40f488 <wcrtomb@plt+0xcc18>
  40f398:	b	40f4a0 <wcrtomb@plt+0xcc30>
  40f39c:	ldp	x9, x8, [x23, #104]
  40f3a0:	ldr	x0, [x23, #96]
  40f3a4:	cmp	x8, x9
  40f3a8:	b.gt	40f470 <wcrtomb@plt+0xcc00>
  40f3ac:	adds	x9, x8, x8, asr #1
  40f3b0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40f3b4:	csel	x27, x10, x9, vs
  40f3b8:	tbnz	x27, #63, 40f3e8 <wcrtomb@plt+0xcb78>
  40f3bc:	mov	x9, #0x1fffffffffffffff    	// #2305843009213693951
  40f3c0:	cmp	x27, x9
  40f3c4:	b.le	40f400 <wcrtomb@plt+0xcb90>
  40f3c8:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40f3cc:	lsr	x27, x9, #2
  40f3d0:	and	x1, x9, #0x7ffffffffffffffc
  40f3d4:	cbnz	x0, 40f424 <wcrtomb@plt+0xcbb4>
  40f3d8:	str	xzr, [x23, #112]
  40f3dc:	cmp	x27, x8
  40f3e0:	b.gt	40f464 <wcrtomb@plt+0xcbf4>
  40f3e4:	b	40f42c <wcrtomb@plt+0xcbbc>
  40f3e8:	cmn	x27, #0x1
  40f3ec:	b.eq	40f40c <wcrtomb@plt+0xcb9c>  // b.none
  40f3f0:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  40f3f4:	sdiv	x9, x9, x27
  40f3f8:	cmp	x9, #0x4
  40f3fc:	b.lt	40f3c8 <wcrtomb@plt+0xcb58>  // b.tstop
  40f400:	lsl	x1, x27, #2
  40f404:	cmp	x1, #0x7f
  40f408:	b.gt	40f420 <wcrtomb@plt+0xcbb0>
  40f40c:	mov	w9, #0x80                  	// #128
  40f410:	lsr	x27, x9, #2
  40f414:	and	x1, x9, #0x7ffffffffffffffc
  40f418:	cbnz	x0, 40f424 <wcrtomb@plt+0xcbb4>
  40f41c:	b	40f3d8 <wcrtomb@plt+0xcb68>
  40f420:	cbz	x0, 40f3d8 <wcrtomb@plt+0xcb68>
  40f424:	cmp	x27, x8
  40f428:	b.gt	40f464 <wcrtomb@plt+0xcbf4>
  40f42c:	adds	x27, x8, #0x1
  40f430:	b.vs	40f9fc <wcrtomb@plt+0xd18c>
  40f434:	tbnz	x27, #63, 40f448 <wcrtomb@plt+0xcbd8>
  40f438:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  40f43c:	cmp	x27, x8
  40f440:	b.le	40f460 <wcrtomb@plt+0xcbf0>
  40f444:	b	40f9fc <wcrtomb@plt+0xd18c>
  40f448:	cmn	x27, #0x1
  40f44c:	b.eq	40f460 <wcrtomb@plt+0xcbf0>  // b.none
  40f450:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40f454:	sdiv	x8, x8, x27
  40f458:	cmp	x8, #0x4
  40f45c:	b.lt	40f9fc <wcrtomb@plt+0xd18c>  // b.tstop
  40f460:	lsl	x1, x27, #2
  40f464:	bl	417310 <wcrtomb@plt+0x14aa0>
  40f468:	ldr	x9, [x23, #104]
  40f46c:	str	x27, [x23, #112]
  40f470:	str	x0, [x23, #96]
  40f474:	ldur	w8, [x25, #-4]
  40f478:	add	x10, x9, #0x1
  40f47c:	str	x10, [x23, #104]
  40f480:	str	w8, [x0, x9, lsl #2]
  40f484:	cbz	x20, 40f4a0 <wcrtomb@plt+0xcc30>
  40f488:	ldr	w27, [x25], #4
  40f48c:	sub	x20, x20, #0x1
  40f490:	mov	w0, w27
  40f494:	bl	402350 <wctob@plt>
  40f498:	tbz	w0, #31, 40f378 <wcrtomb@plt+0xcb08>
  40f49c:	b	40f39c <wcrtomb@plt+0xcb2c>
  40f4a0:	mov	w20, w21
  40f4a4:	ldr	w21, [sp, #28]
  40f4a8:	b	40ea24 <wcrtomb@plt+0xc1b4>
  40f4ac:	ldr	w20, [sp, #40]
  40f4b0:	b	40f4a4 <wcrtomb@plt+0xcc34>
  40f4b4:	ldr	w20, [sp, #40]
  40f4b8:	str	wzr, [sp, #24]
  40f4bc:	b	40ea24 <wcrtomb@plt+0xc1b4>
  40f4c0:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f4c4:	add	x20, x20, #0x518
  40f4c8:	b	40f510 <wcrtomb@plt+0xcca0>
  40f4cc:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f4d0:	add	x20, x20, #0x530
  40f4d4:	b	40f510 <wcrtomb@plt+0xcca0>
  40f4d8:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f4dc:	add	x20, x20, #0x548
  40f4e0:	b	40f510 <wcrtomb@plt+0xcca0>
  40f4e4:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f4e8:	add	x20, x20, #0x560
  40f4ec:	b	40f510 <wcrtomb@plt+0xcca0>
  40f4f0:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f4f4:	add	x20, x20, #0x578
  40f4f8:	b	40f510 <wcrtomb@plt+0xcca0>
  40f4fc:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f500:	add	x20, x20, #0x590
  40f504:	b	40f510 <wcrtomb@plt+0xcca0>
  40f508:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f50c:	add	x20, x20, #0x5a8
  40f510:	ldrb	w8, [x23, #1048]
  40f514:	cbz	w8, 40f520 <wcrtomb@plt+0xccb0>
  40f518:	ldrb	w8, [x20, #16]
  40f51c:	cbz	w8, 40f564 <wcrtomb@plt+0xccf4>
  40f520:	mov	w21, wzr
  40f524:	b	40f534 <wcrtomb@plt+0xccc4>
  40f528:	add	w21, w21, #0x1
  40f52c:	cmp	w21, #0x100
  40f530:	b.eq	40f574 <wcrtomb@plt+0xcd04>  // b.none
  40f534:	ldr	x8, [x20, #8]
  40f538:	mov	w0, w21
  40f53c:	blr	x8
  40f540:	mov	w10, #0x1                   	// #1
  40f544:	cbz	w0, 40f528 <wcrtomb@plt+0xccb8>
  40f548:	lsr	w8, w21, #6
  40f54c:	lsl	x8, x8, #3
  40f550:	ldr	x9, [x26, x8]
  40f554:	lsl	x10, x10, x21
  40f558:	orr	x9, x9, x10
  40f55c:	str	x9, [x26, x8]
  40f560:	b	40f528 <wcrtomb@plt+0xccb8>
  40f564:	str	wzr, [sp, #24]
  40f568:	ldr	w20, [sp, #40]
  40f56c:	cbnz	x27, 40f580 <wcrtomb@plt+0xcd10>
  40f570:	b	40f9e4 <wcrtomb@plt+0xd174>
  40f574:	ldr	x27, [x19]
  40f578:	ldr	w20, [sp, #40]
  40f57c:	cbz	x27, 40f9e4 <wcrtomb@plt+0xd174>
  40f580:	ldr	x1, [x23, #32]
  40f584:	orr	w20, w20, #0x8
  40f588:	ldrb	w8, [x1]
  40f58c:	add	x8, x23, x8, lsl #2
  40f590:	ldr	w21, [x8, #1308]
  40f594:	cmn	w21, #0x1
  40f598:	b.ne	40f5f0 <wcrtomb@plt+0xcd80>  // b.any
  40f59c:	mov	w25, w21
  40f5a0:	mov	w21, w20
  40f5a4:	ldr	x20, [sp, #32]
  40f5a8:	sub	x0, x29, #0x14
  40f5ac:	mov	x2, x27
  40f5b0:	mov	x3, x20
  40f5b4:	bl	419da4 <wcrtomb@plt+0x17534>
  40f5b8:	sub	x8, x0, #0x1
  40f5bc:	cmn	x8, #0x3
  40f5c0:	b.cs	40f5e4 <wcrtomb@plt+0xcd74>  // b.hs, b.nlast
  40f5c4:	ldur	w8, [x29, #-20]
  40f5c8:	cmp	w0, #0x1
  40f5cc:	mov	w10, w8
  40f5d0:	str	w8, [x22]
  40f5d4:	b.ne	40f618 <wcrtomb@plt+0xcda8>  // b.any
  40f5d8:	mov	w20, w21
  40f5dc:	mov	w21, w10
  40f5e0:	b	40f5f4 <wcrtomb@plt+0xcd84>
  40f5e4:	str	xzr, [x20]
  40f5e8:	mov	w20, w21
  40f5ec:	mov	w21, w25
  40f5f0:	str	w21, [x22]
  40f5f4:	ldr	x8, [x24]
  40f5f8:	mov	w9, #0x1                   	// #1
  40f5fc:	ldrb	w28, [x8]
  40f600:	add	x8, x8, x9
  40f604:	str	x8, [x24]
  40f608:	ldr	x8, [x19]
  40f60c:	sub	x8, x8, x9
  40f610:	str	x8, [x19]
  40f614:	b	40ea24 <wcrtomb@plt+0xc1b4>
  40f618:	ldr	x8, [x24]
  40f61c:	sxtw	x9, w0
  40f620:	mov	w28, #0xffffffff            	// #-1
  40f624:	mov	w20, w21
  40f628:	mov	w21, w10
  40f62c:	b	40f600 <wcrtomb@plt+0xcd90>
  40f630:	cmp	w20, #0x7
  40f634:	b.ne	40f650 <wcrtomb@plt+0xcde0>  // b.any
  40f638:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f63c:	add	x1, x1, #0x864
  40f640:	mov	w2, #0x5                   	// #5
  40f644:	mov	x0, xzr
  40f648:	bl	402740 <dcgettext@plt>
  40f64c:	bl	4029ac <wcrtomb@plt+0x13c>
  40f650:	ldr	w9, [sp, #12]
  40f654:	ldr	w8, [sp, #24]
  40f658:	tbz	w8, #0, 40f6fc <wcrtomb@plt+0xce8c>
  40f65c:	ldrb	w8, [x23, #1048]
  40f660:	cbz	w8, 40f704 <wcrtomb@plt+0xce94>
  40f664:	cmp	w9, #0x5e
  40f668:	b.eq	40f674 <wcrtomb@plt+0xce04>  // b.none
  40f66c:	ldr	x8, [x23, #104]
  40f670:	cbz	x8, 40f738 <wcrtomb@plt+0xcec8>
  40f674:	ldr	w8, [sp, #8]
  40f678:	sub	x9, x29, #0x40
  40f67c:	strb	w8, [x23, #88]
  40f680:	ldp	x8, x10, [x9]
  40f684:	ldp	x11, x12, [x9, #16]
  40f688:	orr	x9, x10, x8
  40f68c:	orr	x9, x9, x11
  40f690:	orr	x9, x9, x12
  40f694:	cbz	x9, 40f7a8 <wcrtomb@plt+0xcf38>
  40f698:	ldr	x9, [x23, #8]
  40f69c:	cmp	x9, #0x0
  40f6a0:	b.le	40f810 <wcrtomb@plt+0xcfa0>
  40f6a4:	ldr	x0, [x23]
  40f6a8:	mov	x19, xzr
  40f6ac:	add	x13, x0, #0x10
  40f6b0:	ldp	x14, x15, [x13, #-16]
  40f6b4:	ldp	x16, x17, [x13]
  40f6b8:	eor	x14, x14, x8
  40f6bc:	eor	x15, x15, x10
  40f6c0:	eor	x16, x16, x11
  40f6c4:	orr	x14, x15, x14
  40f6c8:	orr	x14, x14, x16
  40f6cc:	eor	x15, x17, x12
  40f6d0:	orr	x14, x14, x15
  40f6d4:	cbz	x14, 40f9bc <wcrtomb@plt+0xd14c>
  40f6d8:	add	x19, x19, #0x1
  40f6dc:	cmp	x9, x19
  40f6e0:	add	x13, x13, #0x20
  40f6e4:	b.ne	40f6b0 <wcrtomb@plt+0xce40>  // b.any
  40f6e8:	mov	x19, x9
  40f6ec:	ldr	x8, [x23, #16]
  40f6f0:	cmp	x8, x9
  40f6f4:	b.le	40f824 <wcrtomb@plt+0xcfb4>
  40f6f8:	b	40f9a4 <wcrtomb@plt+0xd134>
  40f6fc:	mov	w0, #0x112                 	// #274
  40f700:	b	40f9c4 <wcrtomb@plt+0xd154>
  40f704:	cmp	w9, #0x5e
  40f708:	b.ne	40f738 <wcrtomb@plt+0xcec8>  // b.any
  40f70c:	sub	x8, x29, #0x40
  40f710:	ldp	q0, q1, [x8]
  40f714:	sub	x9, x29, #0x40
  40f718:	mvn	v0.16b, v0.16b
  40f71c:	mvn	v1.16b, v1.16b
  40f720:	stp	q0, q1, [x8]
  40f724:	ldrb	w8, [x23, #449]
  40f728:	tbz	w8, #0, 40f738 <wcrtomb@plt+0xcec8>
  40f72c:	fmov	x8, d0
  40f730:	and	x8, x8, #0xfffffffffffffbff
  40f734:	str	x8, [x9]
  40f738:	ldr	x9, [x23, #8]
  40f73c:	cmp	x9, #0x0
  40f740:	b.le	40f7b0 <wcrtomb@plt+0xcf40>
  40f744:	ldr	x0, [x23]
  40f748:	sub	x12, x29, #0x40
  40f74c:	ldp	x8, x10, [x12]
  40f750:	ldp	x11, x12, [x12, #16]
  40f754:	mov	x19, xzr
  40f758:	add	x13, x0, #0x10
  40f75c:	ldp	x14, x15, [x13, #-16]
  40f760:	ldp	x16, x17, [x13]
  40f764:	eor	x14, x14, x8
  40f768:	eor	x15, x15, x10
  40f76c:	eor	x16, x16, x11
  40f770:	orr	x14, x15, x14
  40f774:	orr	x14, x14, x16
  40f778:	eor	x15, x17, x12
  40f77c:	orr	x14, x14, x15
  40f780:	cbz	x14, 40f974 <wcrtomb@plt+0xd104>
  40f784:	add	x19, x19, #0x1
  40f788:	cmp	x9, x19
  40f78c:	add	x13, x13, #0x20
  40f790:	b.ne	40f75c <wcrtomb@plt+0xceec>  // b.any
  40f794:	mov	x19, x9
  40f798:	ldr	x8, [x23, #16]
  40f79c:	cmp	x8, x9
  40f7a0:	b.le	40f7c4 <wcrtomb@plt+0xcf54>
  40f7a4:	b	40f95c <wcrtomb@plt+0xd0ec>
  40f7a8:	mov	x19, #0xffffffffffffffff    	// #-1
  40f7ac:	b	40f9bc <wcrtomb@plt+0xd14c>
  40f7b0:	ldr	x0, [x23]
  40f7b4:	mov	x19, xzr
  40f7b8:	ldr	x8, [x23, #16]
  40f7bc:	cmp	x8, x9
  40f7c0:	b.gt	40f95c <wcrtomb@plt+0xd0ec>
  40f7c4:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40f7c8:	adds	x10, x8, x8, asr #1
  40f7cc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40f7d0:	movk	x9, #0x7fff, lsl #48
  40f7d4:	csel	x20, x11, x10, vs
  40f7d8:	cmp	x20, x9
  40f7dc:	csel	x10, x20, x9, lt  // lt = tstop
  40f7e0:	tbnz	x10, #63, 40f858 <wcrtomb@plt+0xcfe8>
  40f7e4:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40f7e8:	cmp	x10, x11
  40f7ec:	b.le	40f870 <wcrtomb@plt+0xd000>
  40f7f0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40f7f4:	lsr	x20, x10, #5
  40f7f8:	and	x1, x10, #0x7fffffffffffffe0
  40f7fc:	cbnz	x0, 40f894 <wcrtomb@plt+0xd024>
  40f800:	str	xzr, [x23, #16]
  40f804:	cmp	x20, x8
  40f808:	b.gt	40f950 <wcrtomb@plt+0xd0e0>
  40f80c:	b	40f89c <wcrtomb@plt+0xd02c>
  40f810:	ldr	x0, [x23]
  40f814:	mov	x19, xzr
  40f818:	ldr	x8, [x23, #16]
  40f81c:	cmp	x8, x9
  40f820:	b.gt	40f9a4 <wcrtomb@plt+0xd134>
  40f824:	mov	x9, #0xfffffffffffffeeb    	// #-277
  40f828:	adds	x10, x8, x8, asr #1
  40f82c:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  40f830:	movk	x9, #0x7fff, lsl #48
  40f834:	csel	x20, x11, x10, vs
  40f838:	cmp	x20, x9
  40f83c:	csel	x10, x20, x9, lt  // lt = tstop
  40f840:	tbnz	x10, #63, 40f8c0 <wcrtomb@plt+0xd050>
  40f844:	mov	x11, #0x3ffffffffffffff     	// #288230376151711743
  40f848:	cmp	x10, x11
  40f84c:	b.le	40f8d8 <wcrtomb@plt+0xd068>
  40f850:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40f854:	b	40f8e8 <wcrtomb@plt+0xd078>
  40f858:	cmn	x10, #0x1
  40f85c:	b.eq	40f87c <wcrtomb@plt+0xd00c>  // b.none
  40f860:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40f864:	sdiv	x11, x11, x10
  40f868:	cmp	x11, #0x20
  40f86c:	b.lt	40f7f0 <wcrtomb@plt+0xcf80>  // b.tstop
  40f870:	lsl	x1, x10, #5
  40f874:	cmp	x1, #0x7f
  40f878:	b.gt	40f890 <wcrtomb@plt+0xd020>
  40f87c:	mov	w10, #0x80                  	// #128
  40f880:	lsr	x20, x10, #5
  40f884:	and	x1, x10, #0x7fffffffffffffe0
  40f888:	cbnz	x0, 40f894 <wcrtomb@plt+0xd024>
  40f88c:	b	40f800 <wcrtomb@plt+0xcf90>
  40f890:	cbz	x0, 40f800 <wcrtomb@plt+0xcf90>
  40f894:	cmp	x20, x8
  40f898:	b.gt	40f950 <wcrtomb@plt+0xd0e0>
  40f89c:	adds	x20, x8, #0x1
  40f8a0:	b.vs	40f9fc <wcrtomb@plt+0xd18c>
  40f8a4:	cmp	x20, x9
  40f8a8:	b.gt	40f9fc <wcrtomb@plt+0xd18c>
  40f8ac:	tbnz	x20, #63, 40f934 <wcrtomb@plt+0xd0c4>
  40f8b0:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40f8b4:	cmp	x20, x8
  40f8b8:	b.le	40f94c <wcrtomb@plt+0xd0dc>
  40f8bc:	b	40f9fc <wcrtomb@plt+0xd18c>
  40f8c0:	cmn	x10, #0x1
  40f8c4:	b.eq	40f8e4 <wcrtomb@plt+0xd074>  // b.none
  40f8c8:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  40f8cc:	sdiv	x11, x11, x10
  40f8d0:	cmp	x11, #0x20
  40f8d4:	b.lt	40f850 <wcrtomb@plt+0xcfe0>  // b.tstop
  40f8d8:	lsl	x1, x10, #5
  40f8dc:	cmp	x1, #0x7f
  40f8e0:	b.gt	40f904 <wcrtomb@plt+0xd094>
  40f8e4:	mov	w10, #0x80                  	// #128
  40f8e8:	lsr	x20, x10, #5
  40f8ec:	and	x1, x10, #0x7fffffffffffffe0
  40f8f0:	cbnz	x0, 40f908 <wcrtomb@plt+0xd098>
  40f8f4:	str	xzr, [x23, #16]
  40f8f8:	cmp	x20, x8
  40f8fc:	b.gt	40f998 <wcrtomb@plt+0xd128>
  40f900:	b	40f910 <wcrtomb@plt+0xd0a0>
  40f904:	cbz	x0, 40f8f4 <wcrtomb@plt+0xd084>
  40f908:	cmp	x20, x8
  40f90c:	b.gt	40f998 <wcrtomb@plt+0xd128>
  40f910:	adds	x20, x8, #0x1
  40f914:	b.vs	40f9fc <wcrtomb@plt+0xd18c>
  40f918:	cmp	x20, x9
  40f91c:	b.gt	40f9fc <wcrtomb@plt+0xd18c>
  40f920:	tbnz	x20, #63, 40f97c <wcrtomb@plt+0xd10c>
  40f924:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40f928:	cmp	x20, x8
  40f92c:	b.le	40f994 <wcrtomb@plt+0xd124>
  40f930:	b	40f9fc <wcrtomb@plt+0xd18c>
  40f934:	cmn	x20, #0x1
  40f938:	b.eq	40f94c <wcrtomb@plt+0xd0dc>  // b.none
  40f93c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40f940:	sdiv	x8, x8, x20
  40f944:	cmp	x8, #0x20
  40f948:	b.lt	40f9fc <wcrtomb@plt+0xd18c>  // b.tstop
  40f94c:	lsl	x1, x20, #5
  40f950:	bl	417310 <wcrtomb@plt+0x14aa0>
  40f954:	ldr	x9, [x23, #8]
  40f958:	str	x20, [x23, #16]
  40f95c:	add	x8, x9, #0x1
  40f960:	stp	x0, x8, [x23]
  40f964:	sub	x8, x29, #0x40
  40f968:	ldp	q1, q0, [x8]
  40f96c:	add	x8, x0, x19, lsl #5
  40f970:	stp	q1, q0, [x8]
  40f974:	add	x0, x19, #0x114
  40f978:	b	40f9c4 <wcrtomb@plt+0xd154>
  40f97c:	cmn	x20, #0x1
  40f980:	b.eq	40f994 <wcrtomb@plt+0xd124>  // b.none
  40f984:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40f988:	sdiv	x8, x8, x20
  40f98c:	cmp	x8, #0x20
  40f990:	b.lt	40f9fc <wcrtomb@plt+0xd18c>  // b.tstop
  40f994:	lsl	x1, x20, #5
  40f998:	bl	417310 <wcrtomb@plt+0x14aa0>
  40f99c:	ldr	x9, [x23, #8]
  40f9a0:	str	x20, [x23, #16]
  40f9a4:	add	x8, x9, #0x1
  40f9a8:	stp	x0, x8, [x23]
  40f9ac:	sub	x8, x29, #0x40
  40f9b0:	ldp	q1, q0, [x8]
  40f9b4:	add	x8, x0, x19, lsl #5
  40f9b8:	stp	q1, q0, [x8]
  40f9bc:	str	x19, [x23, #80]
  40f9c0:	mov	w0, #0x113                 	// #275
  40f9c4:	ldp	x20, x19, [sp, #320]
  40f9c8:	ldp	x22, x21, [sp, #304]
  40f9cc:	ldp	x24, x23, [sp, #288]
  40f9d0:	ldp	x26, x25, [sp, #272]
  40f9d4:	ldp	x28, x27, [sp, #256]
  40f9d8:	ldp	x29, x30, [sp, #240]
  40f9dc:	add	sp, sp, #0x150
  40f9e0:	ret
  40f9e4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40f9e8:	add	x1, x1, #0x899
  40f9ec:	mov	w2, #0x5                   	// #5
  40f9f0:	mov	x0, xzr
  40f9f4:	bl	402740 <dcgettext@plt>
  40f9f8:	bl	40298c <wcrtomb@plt+0x11c>
  40f9fc:	bl	41757c <wcrtomb@plt+0x14d0c>
  40fa00:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40fa04:	add	x1, x1, #0x84c
  40fa08:	mov	w2, #0x5                   	// #5
  40fa0c:	mov	x0, xzr
  40fa10:	bl	402740 <dcgettext@plt>
  40fa14:	bl	40298c <wcrtomb@plt+0x11c>
  40fa18:	sub	sp, sp, #0xe0
  40fa1c:	stp	x29, x30, [sp, #128]
  40fa20:	stp	x28, x27, [sp, #144]
  40fa24:	stp	x26, x25, [sp, #160]
  40fa28:	stp	x24, x23, [sp, #176]
  40fa2c:	stp	x22, x21, [sp, #192]
  40fa30:	stp	x20, x19, [sp, #208]
  40fa34:	ldr	x1, [x0, #128]
  40fa38:	mov	x19, x0
  40fa3c:	add	x29, sp, #0x80
  40fa40:	cmp	x1, #0x100
  40fa44:	b.cc	40fa5c <wcrtomb@plt+0xd1ec>  // b.lo, b.ul, b.last
  40fa48:	cmp	x1, #0x113
  40fa4c:	b.gt	40fa5c <wcrtomb@plt+0xd1ec>
  40fa50:	sub	x8, x1, #0x10b
  40fa54:	cmp	x8, #0x9
  40fa58:	b.cs	40faa0 <wcrtomb@plt+0xd230>  // b.hs, b.nlast
  40fa5c:	mov	x0, x19
  40fa60:	bl	40aaac <wcrtomb@plt+0x823c>
  40fa64:	mov	x0, x19
  40fa68:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40fa6c:	mov	x1, x0
  40fa70:	str	x0, [x19, #128]
  40fa74:	sub	x8, x1, #0x101
  40fa78:	cmp	x8, #0x3
  40fa7c:	b.ls	40fcac <wcrtomb@plt+0xd43c>  // b.plast
  40fa80:	ldp	x20, x19, [sp, #208]
  40fa84:	ldp	x22, x21, [sp, #192]
  40fa88:	ldp	x24, x23, [sp, #176]
  40fa8c:	ldp	x26, x25, [sp, #160]
  40fa90:	ldp	x28, x27, [sp, #144]
  40fa94:	ldp	x29, x30, [sp, #128]
  40fa98:	add	sp, sp, #0xe0
  40fa9c:	ret
  40faa0:	cmp	x1, #0x107
  40faa4:	b.eq	40fb38 <wcrtomb@plt+0xd2c8>  // b.none
  40faa8:	cmp	x1, #0x109
  40faac:	b.eq	40fc04 <wcrtomb@plt+0xd394>  // b.none
  40fab0:	cmp	x1, #0x10a
  40fab4:	b.ne	40fc64 <wcrtomb@plt+0xd3f4>  // b.any
  40fab8:	ldrb	w8, [x19, #1050]
  40fabc:	cbz	w8, 40fa5c <wcrtomb@plt+0xd1ec>
  40fac0:	ldr	x1, [x19, #200]
  40fac4:	cbnz	x1, 410184 <wcrtomb@plt+0xd914>
  40fac8:	ldr	x8, [x19, #448]
  40facc:	ldr	x9, [x19, #8]
  40fad0:	mov	x10, #0xfffffffffffffbff    	// #-1025
  40fad4:	mov	x20, #0xfffffffffffffeeb    	// #-277
  40fad8:	tst	x8, #0x40
  40fadc:	csinv	x10, x10, xzr, eq  // eq = none
  40fae0:	tst	x8, #0x80
  40fae4:	and	x8, x10, #0xfffffffffffffffe
  40fae8:	csel	x21, x10, x8, eq  // eq = none
  40faec:	cmp	x9, #0x0
  40faf0:	movk	x20, #0x7fff, lsl #48
  40faf4:	b.le	40fef8 <wcrtomb@plt+0xd688>
  40faf8:	ldr	x0, [x19]
  40fafc:	mov	x22, xzr
  40fb00:	add	x8, x0, #0x10
  40fb04:	ldp	x10, x11, [x8, #-16]
  40fb08:	ldp	x12, x13, [x8]
  40fb0c:	eor	x10, x10, x21
  40fb10:	orn	x10, x10, x11
  40fb14:	orr	x10, x10, x12
  40fb18:	orr	x10, x10, x13
  40fb1c:	cbz	x10, 40ffec <wcrtomb@plt+0xd77c>
  40fb20:	add	x22, x22, #0x1
  40fb24:	cmp	x9, x22
  40fb28:	add	x8, x8, #0x20
  40fb2c:	b.ne	40fb04 <wcrtomb@plt+0xd294>  // b.any
  40fb30:	mov	x22, x9
  40fb34:	b	40ff00 <wcrtomb@plt+0xd690>
  40fb38:	mov	x0, x19
  40fb3c:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40fb40:	str	x0, [x19, #128]
  40fb44:	mov	x0, x19
  40fb48:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40fb4c:	ldr	x8, [x19, #128]
  40fb50:	cmp	x8, #0x106
  40fb54:	b.eq	40fba0 <wcrtomb@plt+0xd330>  // b.none
  40fb58:	cmp	x8, #0x108
  40fb5c:	b.eq	40fba0 <wcrtomb@plt+0xd330>  // b.none
  40fb60:	tbnz	x8, #63, 40fba0 <wcrtomb@plt+0xd330>
  40fb64:	mov	x0, x19
  40fb68:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40fb6c:	mov	w1, #0x105                 	// #261
  40fb70:	mov	w2, #0x3                   	// #3
  40fb74:	mov	x0, x19
  40fb78:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fb7c:	ldr	x8, [x19, #128]
  40fb80:	cmp	x8, #0x106
  40fb84:	b.ne	40fb58 <wcrtomb@plt+0xd2e8>  // b.any
  40fb88:	b	40fba0 <wcrtomb@plt+0xd330>
  40fb8c:	mov	w1, #0x106                 	// #262
  40fb90:	mov	w2, #0x3                   	// #3
  40fb94:	mov	x0, x19
  40fb98:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fb9c:	ldr	x8, [x19, #128]
  40fba0:	cmp	x8, #0x108
  40fba4:	b.eq	40fa64 <wcrtomb@plt+0xd1f4>  // b.none
  40fba8:	cmp	x8, #0x106
  40fbac:	b.ne	410328 <wcrtomb@plt+0xdab8>  // b.any
  40fbb0:	mov	x0, x19
  40fbb4:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40fbb8:	str	x0, [x19, #128]
  40fbbc:	mov	x0, x19
  40fbc0:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40fbc4:	ldr	x8, [x19, #128]
  40fbc8:	cmp	x8, #0x106
  40fbcc:	b.eq	40fb8c <wcrtomb@plt+0xd31c>  // b.none
  40fbd0:	cmp	x8, #0x108
  40fbd4:	b.eq	40fb8c <wcrtomb@plt+0xd31c>  // b.none
  40fbd8:	tbnz	x8, #63, 40fb8c <wcrtomb@plt+0xd31c>
  40fbdc:	mov	x0, x19
  40fbe0:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40fbe4:	mov	w1, #0x105                 	// #261
  40fbe8:	mov	w2, #0x3                   	// #3
  40fbec:	mov	x0, x19
  40fbf0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fbf4:	ldr	x8, [x19, #128]
  40fbf8:	cmp	x8, #0x106
  40fbfc:	b.ne	40fbd0 <wcrtomb@plt+0xd360>  // b.any
  40fc00:	b	40fb8c <wcrtomb@plt+0xd31c>
  40fc04:	ldr	w1, [x19, #72]
  40fc08:	cmn	w1, #0x1
  40fc0c:	b.eq	40fef0 <wcrtomb@plt+0xd680>  // b.none
  40fc10:	mov	x0, x19
  40fc14:	bl	40e60c <wcrtomb@plt+0xbd9c>
  40fc18:	ldrb	w8, [x19, #457]
  40fc1c:	cbz	w8, 40fa64 <wcrtomb@plt+0xd1f4>
  40fc20:	ldr	w0, [x19, #72]
  40fc24:	mov	x1, sp
  40fc28:	bl	4128a0 <wcrtomb@plt+0x10030>
  40fc2c:	cmp	w0, #0x1
  40fc30:	b.lt	40fa64 <wcrtomb@plt+0xd1f4>  // b.tstop
  40fc34:	mov	w20, w0
  40fc38:	mov	x21, sp
  40fc3c:	ldr	w1, [x21], #4
  40fc40:	mov	x0, x19
  40fc44:	bl	40e60c <wcrtomb@plt+0xbd9c>
  40fc48:	mov	w1, #0x106                 	// #262
  40fc4c:	mov	w2, #0x3                   	// #3
  40fc50:	mov	x0, x19
  40fc54:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fc58:	subs	x20, x20, #0x1
  40fc5c:	b.ne	40fc3c <wcrtomb@plt+0xd3cc>  // b.any
  40fc60:	b	40fa64 <wcrtomb@plt+0xd1f4>
  40fc64:	mov	w1, #0x100                 	// #256
  40fc68:	mov	w2, #0x3                   	// #3
  40fc6c:	mov	x0, x19
  40fc70:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fc74:	ldr	x1, [x19, #128]
  40fc78:	sub	x8, x1, #0x101
  40fc7c:	cmp	x8, #0x3
  40fc80:	b.ls	40fcac <wcrtomb@plt+0xd43c>  // b.plast
  40fc84:	b	40fa80 <wcrtomb@plt+0xd210>
  40fc88:	mov	x0, x19
  40fc8c:	bl	40aaac <wcrtomb@plt+0x823c>
  40fc90:	mov	x0, x19
  40fc94:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40fc98:	mov	x1, x0
  40fc9c:	str	x0, [x19, #128]
  40fca0:	sub	x8, x1, #0x101
  40fca4:	cmp	x8, #0x4
  40fca8:	b.cs	40fa80 <wcrtomb@plt+0xd210>  // b.hs, b.nlast
  40fcac:	cmp	x1, #0x104
  40fcb0:	b.ne	40fc88 <wcrtomb@plt+0xd418>  // b.any
  40fcb4:	ldr	x21, [x19, #152]
  40fcb8:	ldp	w23, w24, [x19, #64]
  40fcbc:	mov	x0, x19
  40fcc0:	mov	x1, x21
  40fcc4:	orr	w25, w23, w24
  40fcc8:	bl	410340 <wcrtomb@plt+0xdad0>
  40fccc:	sub	x22, x21, x0
  40fcd0:	cbz	w25, 40fd80 <wcrtomb@plt+0xd510>
  40fcd4:	mov	x20, x0
  40fcd8:	tbnz	w24, #31, 40fdac <wcrtomb@plt+0xd53c>
  40fcdc:	cbz	w23, 40fdc4 <wcrtomb@plt+0xd554>
  40fce0:	cmp	w23, #0x2
  40fce4:	b.lt	40fde0 <wcrtomb@plt+0xd570>  // b.tstop
  40fce8:	cmp	x20, #0x0
  40fcec:	b.le	40fde8 <wcrtomb@plt+0xd578>
  40fcf0:	neg	x24, x20
  40fcf4:	lsl	x25, x21, #3
  40fcf8:	mov	w23, #0x1                   	// #1
  40fcfc:	b	40fd20 <wcrtomb@plt+0xd4b0>
  40fd00:	mov	w1, #0x105                 	// #261
  40fd04:	mov	w2, #0x3                   	// #3
  40fd08:	mov	x0, x19
  40fd0c:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fd10:	ldr	w8, [x19, #64]
  40fd14:	add	w23, w23, #0x1
  40fd18:	cmp	w23, w8
  40fd1c:	b.ge	40fe0c <wcrtomb@plt+0xd59c>  // b.tcont
  40fd20:	ldrb	w8, [x19, #1048]
  40fd24:	mov	x26, x22
  40fd28:	mov	x27, x20
  40fd2c:	mov	x28, x24
  40fd30:	cbz	w8, 40fd5c <wcrtomb@plt+0xd4ec>
  40fd34:	ldr	x8, [x19, #144]
  40fd38:	ldr	x9, [x19, #280]
  40fd3c:	mov	x0, x19
  40fd40:	ldr	x1, [x8, x26, lsl #3]
  40fd44:	ldrb	w2, [x9, x26]
  40fd48:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fd4c:	subs	x27, x27, #0x1
  40fd50:	add	x26, x26, #0x1
  40fd54:	b.ne	40fd34 <wcrtomb@plt+0xd4c4>  // b.any
  40fd58:	b	40fd00 <wcrtomb@plt+0xd490>
  40fd5c:	ldr	x8, [x19, #144]
  40fd60:	mov	w2, #0x3                   	// #3
  40fd64:	mov	x0, x19
  40fd68:	add	x8, x8, x25
  40fd6c:	ldr	x1, [x8, x28, lsl #3]
  40fd70:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fd74:	adds	x28, x28, #0x1
  40fd78:	b.cc	40fd5c <wcrtomb@plt+0xd4ec>  // b.lo, b.ul, b.last
  40fd7c:	b	40fd00 <wcrtomb@plt+0xd490>
  40fd80:	mov	x0, x19
  40fd84:	str	x22, [x19, #152]
  40fd88:	bl	40ac40 <wcrtomb@plt+0x83d0>
  40fd8c:	str	x0, [x19, #128]
  40fd90:	mov	x0, x19
  40fd94:	bl	40fa18 <wcrtomb@plt+0xd1a8>
  40fd98:	ldr	x1, [x19, #128]
  40fd9c:	sub	x8, x1, #0x101
  40fda0:	cmp	x8, #0x4
  40fda4:	b.cc	40fcac <wcrtomb@plt+0xd43c>  // b.lo, b.ul, b.last
  40fda8:	b	40fa80 <wcrtomb@plt+0xd210>
  40fdac:	mov	w1, #0x103                 	// #259
  40fdb0:	mov	w2, #0x3                   	// #3
  40fdb4:	mov	x0, x19
  40fdb8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fdbc:	ldr	w23, [x19, #64]
  40fdc0:	cbnz	w23, 40fce0 <wcrtomb@plt+0xd470>
  40fdc4:	mov	w1, #0x101                 	// #257
  40fdc8:	mov	w2, #0x3                   	// #3
  40fdcc:	mov	x0, x19
  40fdd0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fdd4:	ldr	w23, [x19, #64]
  40fdd8:	cmp	w23, #0x2
  40fddc:	b.ge	40fce8 <wcrtomb@plt+0xd478>  // b.tcont
  40fde0:	mov	w23, #0x1                   	// #1
  40fde4:	b	40fe0c <wcrtomb@plt+0xd59c>
  40fde8:	mov	w23, #0x1                   	// #1
  40fdec:	mov	w1, #0x105                 	// #261
  40fdf0:	mov	w2, #0x3                   	// #3
  40fdf4:	mov	x0, x19
  40fdf8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fdfc:	ldr	w8, [x19, #64]
  40fe00:	add	w23, w23, #0x1
  40fe04:	cmp	w23, w8
  40fe08:	b.lt	40fdec <wcrtomb@plt+0xd57c>  // b.tstop
  40fe0c:	ldr	w8, [x19, #68]
  40fe10:	cmp	w23, w8
  40fe14:	b.ge	40fc90 <wcrtomb@plt+0xd420>  // b.tcont
  40fe18:	cmp	x20, #0x0
  40fe1c:	b.le	40febc <wcrtomb@plt+0xd64c>
  40fe20:	neg	x24, x20
  40fe24:	lsl	x21, x21, #3
  40fe28:	b	40fe5c <wcrtomb@plt+0xd5ec>
  40fe2c:	mov	w1, #0x101                 	// #257
  40fe30:	mov	w2, #0x3                   	// #3
  40fe34:	mov	x0, x19
  40fe38:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fe3c:	mov	w1, #0x105                 	// #261
  40fe40:	mov	w2, #0x3                   	// #3
  40fe44:	mov	x0, x19
  40fe48:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fe4c:	ldr	w8, [x19, #68]
  40fe50:	add	w23, w23, #0x1
  40fe54:	cmp	w23, w8
  40fe58:	b.ge	40fc90 <wcrtomb@plt+0xd420>  // b.tcont
  40fe5c:	ldrb	w8, [x19, #1048]
  40fe60:	mov	x25, x22
  40fe64:	mov	x26, x20
  40fe68:	mov	x27, x24
  40fe6c:	cbz	w8, 40fe98 <wcrtomb@plt+0xd628>
  40fe70:	ldr	x8, [x19, #144]
  40fe74:	ldr	x9, [x19, #280]
  40fe78:	mov	x0, x19
  40fe7c:	ldr	x1, [x8, x25, lsl #3]
  40fe80:	ldrb	w2, [x9, x25]
  40fe84:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fe88:	subs	x26, x26, #0x1
  40fe8c:	add	x25, x25, #0x1
  40fe90:	b.ne	40fe70 <wcrtomb@plt+0xd600>  // b.any
  40fe94:	b	40fe2c <wcrtomb@plt+0xd5bc>
  40fe98:	ldr	x8, [x19, #144]
  40fe9c:	mov	w2, #0x3                   	// #3
  40fea0:	mov	x0, x19
  40fea4:	add	x8, x8, x21
  40fea8:	ldr	x1, [x8, x27, lsl #3]
  40feac:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40feb0:	adds	x27, x27, #0x1
  40feb4:	b.cc	40fe98 <wcrtomb@plt+0xd628>  // b.lo, b.ul, b.last
  40feb8:	b	40fe2c <wcrtomb@plt+0xd5bc>
  40febc:	mov	w1, #0x101                 	// #257
  40fec0:	mov	w2, #0x3                   	// #3
  40fec4:	mov	x0, x19
  40fec8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fecc:	mov	w1, #0x105                 	// #261
  40fed0:	mov	w2, #0x3                   	// #3
  40fed4:	mov	x0, x19
  40fed8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  40fedc:	ldr	w8, [x19, #68]
  40fee0:	add	w23, w23, #0x1
  40fee4:	cmp	w23, w8
  40fee8:	b.lt	40febc <wcrtomb@plt+0xd64c>  // b.tstop
  40feec:	b	40fc90 <wcrtomb@plt+0xd420>
  40fef0:	mov	w1, #0x112                 	// #274
  40fef4:	b	410318 <wcrtomb@plt+0xdaa8>
  40fef8:	ldr	x0, [x19]
  40fefc:	mov	x22, xzr
  40ff00:	ldr	x8, [x19, #16]
  40ff04:	cmp	x8, x9
  40ff08:	b.gt	40ffd4 <wcrtomb@plt+0xd764>
  40ff0c:	adds	x9, x8, x8, asr #1
  40ff10:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  40ff14:	csel	x23, x10, x9, vs
  40ff18:	cmp	x23, x20
  40ff1c:	csel	x9, x23, x20, lt  // lt = tstop
  40ff20:	tbnz	x9, #63, 40ff38 <wcrtomb@plt+0xd6c8>
  40ff24:	mov	x10, #0x3ffffffffffffff     	// #288230376151711743
  40ff28:	cmp	x9, x10
  40ff2c:	b.le	40ff50 <wcrtomb@plt+0xd6e0>
  40ff30:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  40ff34:	b	40ff60 <wcrtomb@plt+0xd6f0>
  40ff38:	cmn	x9, #0x1
  40ff3c:	b.eq	40ff5c <wcrtomb@plt+0xd6ec>  // b.none
  40ff40:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  40ff44:	sdiv	x10, x10, x9
  40ff48:	cmp	x10, #0x20
  40ff4c:	b.lt	40ff30 <wcrtomb@plt+0xd6c0>  // b.tstop
  40ff50:	lsl	x1, x9, #5
  40ff54:	cmp	x1, #0x7f
  40ff58:	b.gt	40ff7c <wcrtomb@plt+0xd70c>
  40ff5c:	mov	w9, #0x80                  	// #128
  40ff60:	lsr	x23, x9, #5
  40ff64:	and	x1, x9, #0x7fffffffffffffe0
  40ff68:	cbnz	x0, 40ff80 <wcrtomb@plt+0xd710>
  40ff6c:	str	xzr, [x19, #16]
  40ff70:	cmp	x23, x8
  40ff74:	b.gt	40ffc8 <wcrtomb@plt+0xd758>
  40ff78:	b	40ff88 <wcrtomb@plt+0xd718>
  40ff7c:	cbz	x0, 40ff6c <wcrtomb@plt+0xd6fc>
  40ff80:	cmp	x23, x8
  40ff84:	b.gt	40ffc8 <wcrtomb@plt+0xd758>
  40ff88:	adds	x23, x8, #0x1
  40ff8c:	b.vs	41017c <wcrtomb@plt+0xd90c>
  40ff90:	cmp	x23, x20
  40ff94:	b.gt	41017c <wcrtomb@plt+0xd90c>
  40ff98:	tbnz	x23, #63, 40ffac <wcrtomb@plt+0xd73c>
  40ff9c:	mov	x8, #0x3ffffffffffffff     	// #288230376151711743
  40ffa0:	cmp	x23, x8
  40ffa4:	b.le	40ffc4 <wcrtomb@plt+0xd754>
  40ffa8:	b	41017c <wcrtomb@plt+0xd90c>
  40ffac:	cmn	x23, #0x1
  40ffb0:	b.eq	40ffc4 <wcrtomb@plt+0xd754>  // b.none
  40ffb4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  40ffb8:	sdiv	x8, x8, x23
  40ffbc:	cmp	x8, #0x20
  40ffc0:	b.lt	41017c <wcrtomb@plt+0xd90c>  // b.tstop
  40ffc4:	lsl	x1, x23, #5
  40ffc8:	bl	417310 <wcrtomb@plt+0x14aa0>
  40ffcc:	ldr	x9, [x19, #8]
  40ffd0:	str	x23, [x19, #16]
  40ffd4:	add	x8, x9, #0x1
  40ffd8:	add	x9, x0, x22, lsl #5
  40ffdc:	mov	x10, #0xffffffffffffffff    	// #-1
  40ffe0:	stp	x0, x8, [x19]
  40ffe4:	stp	x21, x10, [x9]
  40ffe8:	stp	xzr, xzr, [x9, #16]
  40ffec:	add	x8, x22, #0x114
  40fff0:	adrp	x22, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  40fff4:	mov	w21, #0x1                   	// #1
  40fff8:	add	x22, x22, #0x5f0
  40fffc:	mov	x23, #0x7fffffffffffffff    	// #9223372036854775807
  410000:	mov	x24, #0x8000000000000000    	// #-9223372036854775808
  410004:	mov	x25, #0x3ffffffffffffff     	// #288230376151711743
  410008:	str	x8, [x19, #200]
  41000c:	b	410054 <wcrtomb@plt+0xd7e4>
  410010:	cmp	x28, x25
  410014:	b.gt	41017c <wcrtomb@plt+0xd90c>
  410018:	lsl	x1, x28, #5
  41001c:	bl	417310 <wcrtomb@plt+0x14aa0>
  410020:	ldr	x8, [x19, #8]
  410024:	str	x28, [x19, #16]
  410028:	ldp	q0, q1, [x26]
  41002c:	add	x8, x8, #0x1
  410030:	add	x9, x0, x27, lsl #5
  410034:	stp	x0, x8, [x19]
  410038:	stp	q0, q1, [x9]
  41003c:	add	x9, x19, x21, lsl #3
  410040:	add	x21, x21, #0x1
  410044:	add	x8, x27, #0x114
  410048:	cmp	x21, #0x9
  41004c:	str	x8, [x9, #200]
  410050:	b.eq	410180 <wcrtomb@plt+0xd910>  // b.none
  410054:	ldr	x8, [x19, #8]
  410058:	add	x26, x22, x21, lsl #5
  41005c:	cmp	x8, #0x0
  410060:	b.le	4100c4 <wcrtomb@plt+0xd854>
  410064:	ldr	x0, [x19]
  410068:	ldp	x9, x10, [x26]
  41006c:	ldp	x11, x12, [x26, #16]
  410070:	mov	x27, xzr
  410074:	add	x13, x0, #0x10
  410078:	ldp	x14, x15, [x13, #-16]
  41007c:	ldp	x16, x17, [x13]
  410080:	eor	x14, x14, x9
  410084:	eor	x15, x15, x10
  410088:	eor	x16, x16, x11
  41008c:	orr	x14, x15, x14
  410090:	orr	x14, x14, x16
  410094:	eor	x15, x17, x12
  410098:	orr	x14, x14, x15
  41009c:	cbz	x14, 41003c <wcrtomb@plt+0xd7cc>
  4100a0:	add	x27, x27, #0x1
  4100a4:	cmp	x8, x27
  4100a8:	add	x13, x13, #0x20
  4100ac:	b.ne	410078 <wcrtomb@plt+0xd808>  // b.any
  4100b0:	mov	x27, x8
  4100b4:	ldr	x9, [x19, #16]
  4100b8:	cmp	x9, x8
  4100bc:	b.gt	410028 <wcrtomb@plt+0xd7b8>
  4100c0:	b	4100d8 <wcrtomb@plt+0xd868>
  4100c4:	ldr	x0, [x19]
  4100c8:	mov	x27, xzr
  4100cc:	ldr	x9, [x19, #16]
  4100d0:	cmp	x9, x8
  4100d4:	b.gt	410028 <wcrtomb@plt+0xd7b8>
  4100d8:	adds	x8, x9, x9, asr #1
  4100dc:	csel	x28, x23, x8, vs
  4100e0:	cmp	x28, x20
  4100e4:	csel	x8, x28, x20, lt  // lt = tstop
  4100e8:	tbnz	x8, #63, 410114 <wcrtomb@plt+0xd8a4>
  4100ec:	cmp	x8, x25
  4100f0:	b.le	410128 <wcrtomb@plt+0xd8b8>
  4100f4:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4100f8:	lsr	x28, x8, #5
  4100fc:	and	x1, x8, #0x7fffffffffffffe0
  410100:	cbnz	x0, 41014c <wcrtomb@plt+0xd8dc>
  410104:	str	xzr, [x19, #16]
  410108:	cmp	x28, x9
  41010c:	b.gt	41001c <wcrtomb@plt+0xd7ac>
  410110:	b	410154 <wcrtomb@plt+0xd8e4>
  410114:	cmn	x8, #0x1
  410118:	b.eq	410134 <wcrtomb@plt+0xd8c4>  // b.none
  41011c:	sdiv	x10, x24, x8
  410120:	cmp	x10, #0x20
  410124:	b.lt	4100f4 <wcrtomb@plt+0xd884>  // b.tstop
  410128:	lsl	x1, x8, #5
  41012c:	cmp	x1, #0x7f
  410130:	b.gt	410148 <wcrtomb@plt+0xd8d8>
  410134:	mov	w8, #0x80                  	// #128
  410138:	lsr	x28, x8, #5
  41013c:	and	x1, x8, #0x7fffffffffffffe0
  410140:	cbnz	x0, 41014c <wcrtomb@plt+0xd8dc>
  410144:	b	410104 <wcrtomb@plt+0xd894>
  410148:	cbz	x0, 410104 <wcrtomb@plt+0xd894>
  41014c:	cmp	x28, x9
  410150:	b.gt	41001c <wcrtomb@plt+0xd7ac>
  410154:	adds	x28, x9, #0x1
  410158:	b.vs	41017c <wcrtomb@plt+0xd90c>
  41015c:	cmp	x28, x20
  410160:	b.gt	41017c <wcrtomb@plt+0xd90c>
  410164:	tbz	x28, #63, 410010 <wcrtomb@plt+0xd7a0>
  410168:	cmn	x28, #0x1
  41016c:	b.eq	410018 <wcrtomb@plt+0xd7a8>  // b.none
  410170:	sdiv	x8, x24, x28
  410174:	cmp	x8, #0x20
  410178:	b.ge	410018 <wcrtomb@plt+0xd7a8>  // b.tcont
  41017c:	bl	41757c <wcrtomb@plt+0x14d0c>
  410180:	ldr	x1, [x19, #200]
  410184:	mov	x0, x19
  410188:	bl	40aaac <wcrtomb@plt+0x823c>
  41018c:	ldr	x1, [x19, #208]
  410190:	mov	x0, x19
  410194:	bl	40aaac <wcrtomb@plt+0x823c>
  410198:	mov	w1, #0xe0                  	// #224
  41019c:	mov	w2, #0x3                   	// #3
  4101a0:	mov	x0, x19
  4101a4:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4101a8:	ldr	x1, [x19, #224]
  4101ac:	mov	x0, x19
  4101b0:	bl	40aaac <wcrtomb@plt+0x823c>
  4101b4:	mov	w1, #0x105                 	// #261
  4101b8:	mov	w2, #0x3                   	// #3
  4101bc:	mov	x0, x19
  4101c0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4101c4:	mov	w1, #0x106                 	// #262
  4101c8:	mov	w2, #0x3                   	// #3
  4101cc:	mov	x0, x19
  4101d0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4101d4:	mov	w1, #0xed                  	// #237
  4101d8:	mov	w2, #0x3                   	// #3
  4101dc:	mov	x0, x19
  4101e0:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4101e4:	ldr	x1, [x19, #240]
  4101e8:	mov	x0, x19
  4101ec:	bl	40aaac <wcrtomb@plt+0x823c>
  4101f0:	mov	w1, #0x105                 	// #261
  4101f4:	mov	w2, #0x3                   	// #3
  4101f8:	mov	x0, x19
  4101fc:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410200:	mov	w1, #0x106                 	// #262
  410204:	mov	w2, #0x3                   	// #3
  410208:	mov	x0, x19
  41020c:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410210:	ldr	x1, [x19, #232]
  410214:	mov	x0, x19
  410218:	bl	40aaac <wcrtomb@plt+0x823c>
  41021c:	mov	w1, #0xf0                  	// #240
  410220:	mov	w2, #0x3                   	// #3
  410224:	mov	x0, x19
  410228:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  41022c:	ldr	x1, [x19, #248]
  410230:	mov	x0, x19
  410234:	bl	40aaac <wcrtomb@plt+0x823c>
  410238:	mov	w1, #0x105                 	// #261
  41023c:	mov	w2, #0x3                   	// #3
  410240:	mov	x0, x19
  410244:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410248:	mov	w1, #0x106                 	// #262
  41024c:	mov	w2, #0x3                   	// #3
  410250:	mov	x0, x19
  410254:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410258:	mov	w1, #0xf4                  	// #244
  41025c:	mov	w2, #0x3                   	// #3
  410260:	mov	x0, x19
  410264:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410268:	ldr	x1, [x19, #264]
  41026c:	mov	x0, x19
  410270:	bl	40aaac <wcrtomb@plt+0x823c>
  410274:	mov	w1, #0x105                 	// #261
  410278:	mov	w2, #0x3                   	// #3
  41027c:	mov	x0, x19
  410280:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410284:	mov	w1, #0x106                 	// #262
  410288:	mov	w2, #0x3                   	// #3
  41028c:	mov	x0, x19
  410290:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410294:	ldr	x1, [x19, #256]
  410298:	mov	x0, x19
  41029c:	bl	40aaac <wcrtomb@plt+0x823c>
  4102a0:	ldr	x1, [x19, #216]
  4102a4:	mov	x0, x19
  4102a8:	bl	40aaac <wcrtomb@plt+0x823c>
  4102ac:	mov	w1, #0x105                 	// #261
  4102b0:	mov	w2, #0x3                   	// #3
  4102b4:	mov	x0, x19
  4102b8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4102bc:	mov	w1, #0x106                 	// #262
  4102c0:	mov	w2, #0x3                   	// #3
  4102c4:	mov	x0, x19
  4102c8:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4102cc:	ldr	x1, [x19, #216]
  4102d0:	mov	x0, x19
  4102d4:	bl	40aaac <wcrtomb@plt+0x823c>
  4102d8:	mov	w1, #0x105                 	// #261
  4102dc:	mov	w2, #0x3                   	// #3
  4102e0:	mov	x0, x19
  4102e4:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4102e8:	mov	w1, #0x106                 	// #262
  4102ec:	mov	w2, #0x3                   	// #3
  4102f0:	mov	x0, x19
  4102f4:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  4102f8:	ldr	x1, [x19, #216]
  4102fc:	mov	x0, x19
  410300:	bl	40aaac <wcrtomb@plt+0x823c>
  410304:	mov	w1, #0x105                 	// #261
  410308:	mov	w2, #0x3                   	// #3
  41030c:	mov	x0, x19
  410310:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410314:	mov	w1, #0x106                 	// #262
  410318:	mov	w2, #0x3                   	// #3
  41031c:	mov	x0, x19
  410320:	bl	40e6d8 <wcrtomb@plt+0xbe68>
  410324:	b	40fa64 <wcrtomb@plt+0xd1f4>
  410328:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41032c:	add	x1, x1, #0x8d7
  410330:	mov	w2, #0x5                   	// #5
  410334:	mov	x0, xzr
  410338:	bl	402740 <dcgettext@plt>
  41033c:	bl	40298c <wcrtomb@plt+0x11c>
  410340:	stp	x29, x30, [sp, #-48]!
  410344:	stp	x20, x19, [sp, #32]
  410348:	ldr	x8, [x0, #144]
  41034c:	sub	x20, x1, #0x1
  410350:	mov	x19, x0
  410354:	str	x21, [sp, #16]
  410358:	ldr	x8, [x8, x20, lsl #3]
  41035c:	mov	x29, sp
  410360:	sub	x9, x8, #0x101
  410364:	cmp	x9, #0x3
  410368:	b.cs	41038c <wcrtomb@plt+0xdb1c>  // b.hs, b.nlast
  41036c:	mov	x0, x19
  410370:	mov	x1, x20
  410374:	bl	410340 <wcrtomb@plt+0xdad0>
  410378:	add	x0, x0, #0x1
  41037c:	ldp	x20, x19, [sp, #32]
  410380:	ldr	x21, [sp, #16]
  410384:	ldp	x29, x30, [sp], #48
  410388:	ret
  41038c:	sub	x8, x8, #0x105
  410390:	cmp	x8, #0x2
  410394:	b.cs	4103cc <wcrtomb@plt+0xdb5c>  // b.hs, b.nlast
  410398:	mov	x0, x19
  41039c:	mov	x1, x20
  4103a0:	bl	410340 <wcrtomb@plt+0xdad0>
  4103a4:	mov	x21, x0
  4103a8:	sub	x1, x20, x0
  4103ac:	mov	x0, x19
  4103b0:	bl	410340 <wcrtomb@plt+0xdad0>
  4103b4:	add	x8, x21, x0
  4103b8:	add	x0, x8, #0x1
  4103bc:	ldp	x20, x19, [sp, #32]
  4103c0:	ldr	x21, [sp, #16]
  4103c4:	ldp	x29, x30, [sp], #48
  4103c8:	ret
  4103cc:	mov	w0, #0x1                   	// #1
  4103d0:	ldp	x20, x19, [sp, #32]
  4103d4:	ldr	x21, [sp, #16]
  4103d8:	ldp	x29, x30, [sp], #48
  4103dc:	ret
  4103e0:	stp	x29, x30, [sp, #-96]!
  4103e4:	stp	x28, x27, [sp, #16]
  4103e8:	stp	x26, x25, [sp, #32]
  4103ec:	stp	x24, x23, [sp, #48]
  4103f0:	stp	x22, x21, [sp, #64]
  4103f4:	stp	x20, x19, [sp, #80]
  4103f8:	ldr	x26, [x1, #8]
  4103fc:	mov	w19, w2
  410400:	mov	x21, x1
  410404:	mov	x20, x0
  410408:	cmp	x26, #0x1
  41040c:	mov	x29, sp
  410410:	b.lt	41042c <wcrtomb@plt+0xdbbc>  // b.tstop
  410414:	ldr	x9, [x21]
  410418:	cmp	x26, #0x4
  41041c:	b.hi	410434 <wcrtomb@plt+0xdbc4>  // b.pmore
  410420:	mov	x23, xzr
  410424:	mov	x8, xzr
  410428:	b	4104a0 <wcrtomb@plt+0xdc30>
  41042c:	mov	x23, xzr
  410430:	b	4104c4 <wcrtomb@plt+0xdc54>
  410434:	and	x8, x26, #0x3
  410438:	tst	x26, #0x3
  41043c:	mov	w11, #0x4                   	// #4
  410440:	csel	x8, x11, x8, eq  // eq = none
  410444:	sub	x8, x26, x8
  410448:	add	x10, x9, #0x20
  41044c:	movi	v0.2d, #0x0
  410450:	mov	x11, x8
  410454:	movi	v1.2d, #0x0
  410458:	sub	x12, x10, #0x20
  41045c:	sub	x13, x10, #0x18
  410460:	add	x14, x10, #0x8
  410464:	ld2	{v2.2d, v3.2d}, [x10]
  410468:	ld2	{v4.2d, v5.2d}, [x12]
  41046c:	ld4	{v16.2s-v19.2s}, [x13]
  410470:	ld4	{v20.2s-v23.2s}, [x14]
  410474:	subs	x11, x11, #0x4
  410478:	add	x10, x10, #0x40
  41047c:	uaddw	v4.2d, v4.2d, v16.2s
  410480:	uaddw	v2.2d, v2.2d, v20.2s
  410484:	eor	v0.16b, v4.16b, v0.16b
  410488:	eor	v1.16b, v2.16b, v1.16b
  41048c:	b.ne	410458 <wcrtomb@plt+0xdbe8>  // b.any
  410490:	eor	v0.16b, v1.16b, v0.16b
  410494:	dup	v1.2d, v0.d[1]
  410498:	eor	v0.16b, v0.16b, v1.16b
  41049c:	fmov	x23, d0
  4104a0:	add	x9, x9, x8, lsl #4
  4104a4:	add	x9, x9, #0x8
  4104a8:	ldur	x10, [x9, #-8]
  4104ac:	ldr	w11, [x9], #16
  4104b0:	add	x8, x8, #0x1
  4104b4:	cmp	x8, x26
  4104b8:	add	x10, x10, x11
  4104bc:	eor	x23, x10, x23
  4104c0:	b.lt	4104a8 <wcrtomb@plt+0xdc38>  // b.tstop
  4104c4:	ldr	x8, [x20, #304]
  4104c8:	cmp	x8, #0x1
  4104cc:	b.lt	410574 <wcrtomb@plt+0xdd04>  // b.tstop
  4104d0:	ldr	x9, [x20, #296]
  4104d4:	cmp	x26, #0x1
  4104d8:	b.lt	41062c <wcrtomb@plt+0xddbc>  // b.tstop
  4104dc:	mov	x22, xzr
  4104e0:	mov	w10, #0x50                  	// #80
  4104e4:	b	4104f8 <wcrtomb@plt+0xdc88>
  4104e8:	cbz	x13, 410888 <wcrtomb@plt+0xe018>
  4104ec:	add	x22, x22, #0x1
  4104f0:	cmp	x22, x8
  4104f4:	b.ge	410578 <wcrtomb@plt+0xdd08>  // b.tcont
  4104f8:	mul	x11, x22, x10
  4104fc:	ldr	x11, [x9, x11]
  410500:	cmp	x23, x11
  410504:	b.ne	4104ec <wcrtomb@plt+0xdc7c>  // b.any
  410508:	madd	x11, x22, x10, x9
  41050c:	ldr	x11, [x11, #16]
  410510:	cmp	x26, x11
  410514:	b.ne	4104ec <wcrtomb@plt+0xdc7c>  // b.any
  410518:	madd	x11, x22, x10, x9
  41051c:	ldrb	w11, [x11, #32]
  410520:	cmp	w11, w19
  410524:	b.ne	4104ec <wcrtomb@plt+0xdc7c>  // b.any
  410528:	madd	x11, x22, x10, x9
  41052c:	ldr	x11, [x11, #8]
  410530:	ldr	x12, [x21]
  410534:	mov	x13, x26
  410538:	add	x11, x11, #0x8
  41053c:	add	x12, x12, #0x8
  410540:	ldr	w14, [x12]
  410544:	ldr	w15, [x11]
  410548:	cmp	w14, w15
  41054c:	b.ne	4104e8 <wcrtomb@plt+0xdc78>  // b.any
  410550:	ldur	x14, [x12, #-8]
  410554:	ldur	x15, [x11, #-8]
  410558:	cmp	x14, x15
  41055c:	b.ne	4104e8 <wcrtomb@plt+0xdc78>  // b.any
  410560:	subs	x13, x13, #0x1
  410564:	add	x11, x11, #0x10
  410568:	add	x12, x12, #0x10
  41056c:	b.ne	410540 <wcrtomb@plt+0xdcd0>  // b.any
  410570:	b	410888 <wcrtomb@plt+0xe018>
  410574:	mov	x22, xzr
  410578:	cmp	x26, #0x1
  41057c:	b.lt	4105ec <wcrtomb@plt+0xdd7c>  // b.tstop
  410580:	ldr	x9, [x20, #336]
  410584:	ldr	x10, [x21]
  410588:	mov	x25, xzr
  41058c:	mov	w24, wzr
  410590:	and	w11, w19, #0x7
  410594:	mov	w12, #0x1ff                 	// #511
  410598:	mov	x13, x26
  41059c:	b	4105bc <wcrtomb@plt+0xdd4c>
  4105a0:	ldr	x15, [x20, #144]
  4105a4:	ldr	x14, [x15, x14, lsl #3]
  4105a8:	cmp	x14, #0x112
  4105ac:	csel	w24, w12, w24, eq  // eq = none
  4105b0:	subs	x13, x13, #0x1
  4105b4:	add	x10, x10, #0x10
  4105b8:	b.eq	4105f4 <wcrtomb@plt+0xdd84>  // b.none
  4105bc:	ldr	x14, [x10]
  4105c0:	ldr	w15, [x9, x14, lsl #2]
  4105c4:	cbz	w15, 4105a0 <wcrtomb@plt+0xdd30>
  4105c8:	orr	w16, w15, w15, lsr #3
  4105cc:	orr	w16, w16, w15, lsr #6
  4105d0:	tst	w11, w16
  4105d4:	csel	w15, wzr, w15, eq  // eq = none
  4105d8:	orr	w24, w15, w24
  4105dc:	cbnz	x25, 4105b0 <wcrtomb@plt+0xdd40>
  4105e0:	ldr	x15, [x20, #144]
  4105e4:	ldr	x25, [x15, x14, lsl #3]
  4105e8:	b	4105b0 <wcrtomb@plt+0xdd40>
  4105ec:	mov	w24, wzr
  4105f0:	mov	x25, xzr
  4105f4:	ldr	x9, [x20, #312]
  4105f8:	ldr	x0, [x20, #296]
  4105fc:	cmp	x9, x8
  410600:	b.gt	410724 <wcrtomb@plt+0xdeb4>
  410604:	adds	x8, x9, x9, asr #1
  410608:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41060c:	csel	x26, x10, x8, vs
  410610:	tbnz	x26, #63, 410674 <wcrtomb@plt+0xde04>
  410614:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
  410618:	movk	x8, #0x199, lsl #48
  41061c:	cmp	x26, x8
  410620:	b.le	41068c <wcrtomb@plt+0xde1c>
  410624:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  410628:	b	4106a0 <wcrtomb@plt+0xde30>
  41062c:	mov	x22, xzr
  410630:	add	x9, x9, #0x10
  410634:	b	410648 <wcrtomb@plt+0xddd8>
  410638:	add	x22, x22, #0x1
  41063c:	cmp	x22, x8
  410640:	add	x9, x9, #0x50
  410644:	b.ge	410578 <wcrtomb@plt+0xdd08>  // b.tcont
  410648:	ldur	x10, [x9, #-16]
  41064c:	cmp	x23, x10
  410650:	b.ne	410638 <wcrtomb@plt+0xddc8>  // b.any
  410654:	ldr	x10, [x9]
  410658:	cmp	x26, x10
  41065c:	b.ne	410638 <wcrtomb@plt+0xddc8>  // b.any
  410660:	ldrb	w10, [x9, #16]
  410664:	cmp	w10, w19
  410668:	b.ne	410638 <wcrtomb@plt+0xddc8>  // b.any
  41066c:	cbnz	x26, 410638 <wcrtomb@plt+0xddc8>
  410670:	b	410888 <wcrtomb@plt+0xe018>
  410674:	cmn	x26, #0x1
  410678:	b.eq	41069c <wcrtomb@plt+0xde2c>  // b.none
  41067c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410680:	sdiv	x8, x8, x26
  410684:	cmp	x8, #0x50
  410688:	b.lt	410624 <wcrtomb@plt+0xddb4>  // b.tstop
  41068c:	add	x8, x26, x26, lsl #2
  410690:	lsl	x1, x8, #4
  410694:	cmp	x1, #0x7f
  410698:	b.gt	4106cc <wcrtomb@plt+0xde5c>
  41069c:	mov	w8, #0x80                  	// #128
  4106a0:	mov	x10, #0xcccccccccccccccc    	// #-3689348814741910324
  4106a4:	movk	x10, #0xcccd
  4106a8:	umulh	x8, x8, x10
  4106ac:	lsr	x26, x8, #6
  4106b0:	add	x8, x26, x26, lsl #2
  4106b4:	lsl	x1, x8, #4
  4106b8:	cbnz	x0, 4106d0 <wcrtomb@plt+0xde60>
  4106bc:	str	xzr, [x20, #312]
  4106c0:	cmp	x26, x9
  4106c4:	b.gt	410718 <wcrtomb@plt+0xdea8>
  4106c8:	b	4106d8 <wcrtomb@plt+0xde68>
  4106cc:	cbz	x0, 4106bc <wcrtomb@plt+0xde4c>
  4106d0:	cmp	x26, x9
  4106d4:	b.gt	410718 <wcrtomb@plt+0xdea8>
  4106d8:	adds	x26, x9, #0x1
  4106dc:	b.vs	4108a8 <wcrtomb@plt+0xe038>
  4106e0:	tbnz	x26, #63, 4106f8 <wcrtomb@plt+0xde88>
  4106e4:	mov	x8, #0x9999999999999999    	// #-7378697629483820647
  4106e8:	movk	x8, #0x199, lsl #48
  4106ec:	cmp	x26, x8
  4106f0:	b.le	410710 <wcrtomb@plt+0xdea0>
  4106f4:	b	4108a8 <wcrtomb@plt+0xe038>
  4106f8:	cmn	x26, #0x1
  4106fc:	b.eq	410710 <wcrtomb@plt+0xdea0>  // b.none
  410700:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410704:	sdiv	x8, x8, x26
  410708:	cmp	x8, #0x50
  41070c:	b.lt	4108a8 <wcrtomb@plt+0xe038>  // b.tstop
  410710:	add	x8, x26, x26, lsl #2
  410714:	lsl	x1, x8, #4
  410718:	bl	417310 <wcrtomb@plt+0x14aa0>
  41071c:	str	x26, [x20, #312]
  410720:	ldr	x26, [x21, #8]
  410724:	mov	w8, #0x50                  	// #80
  410728:	mul	x8, x22, x8
  41072c:	lsr	x9, x26, #59
  410730:	str	x0, [x20, #296]
  410734:	str	x23, [x0, x8]
  410738:	cbnz	x9, 4108a8 <wcrtomb@plt+0xe038>
  41073c:	add	x8, x22, x22, lsl #2
  410740:	lsl	x27, x8, #4
  410744:	add	x23, x0, x27
  410748:	lsl	x0, x26, #4
  41074c:	bl	417290 <wcrtomb@plt+0x14a20>
  410750:	stp	xzr, x26, [x23, #16]
  410754:	str	x0, [x23, #8]
  410758:	ldr	x23, [x20, #296]
  41075c:	add	x27, x23, x27
  410760:	ldr	x9, [x27, #24]!
  410764:	ldr	x8, [x21, #8]
  410768:	sub	x26, x27, #0x10
  41076c:	cmp	x9, x8
  410770:	b.ge	410834 <wcrtomb@plt+0xdfc4>  // b.tcont
  410774:	ldr	x0, [x26]
  410778:	bl	402620 <free@plt>
  41077c:	ldr	x8, [x27]
  410780:	ldr	x9, [x21, #8]
  410784:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  410788:	adds	x10, x8, x8, asr #1
  41078c:	csel	x28, x11, x10, vs
  410790:	tbnz	x28, #63, 4107a8 <wcrtomb@plt+0xdf38>
  410794:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  410798:	cmp	x28, x10
  41079c:	b.le	4107c0 <wcrtomb@plt+0xdf50>
  4107a0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4107a4:	b	4107d0 <wcrtomb@plt+0xdf60>
  4107a8:	cmn	x28, #0x1
  4107ac:	b.eq	4107cc <wcrtomb@plt+0xdf5c>  // b.none
  4107b0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4107b4:	sdiv	x10, x10, x28
  4107b8:	cmp	x10, #0x10
  4107bc:	b.lt	4107a0 <wcrtomb@plt+0xdf30>  // b.tstop
  4107c0:	lsl	x1, x28, #4
  4107c4:	cmp	x1, #0x7f
  4107c8:	b.gt	4107d8 <wcrtomb@plt+0xdf68>
  4107cc:	mov	w10, #0x80                  	// #128
  4107d0:	lsr	x28, x10, #4
  4107d4:	and	x1, x10, #0x7ffffffffffffff0
  4107d8:	cmp	x28, x9
  4107dc:	str	xzr, [x27]
  4107e0:	b.ge	410820 <wcrtomb@plt+0xdfb0>  // b.tcont
  4107e4:	sub	x9, x9, x8
  4107e8:	adds	x28, x8, x9
  4107ec:	b.vs	4108a8 <wcrtomb@plt+0xe038>
  4107f0:	tbnz	x28, #63, 410804 <wcrtomb@plt+0xdf94>
  4107f4:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4107f8:	cmp	x28, x8
  4107fc:	b.le	41081c <wcrtomb@plt+0xdfac>
  410800:	b	4108a8 <wcrtomb@plt+0xe038>
  410804:	cmn	x28, #0x1
  410808:	b.eq	41081c <wcrtomb@plt+0xdfac>  // b.none
  41080c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410810:	sdiv	x8, x8, x28
  410814:	cmp	x8, #0x10
  410818:	b.lt	4108a8 <wcrtomb@plt+0xe038>  // b.tstop
  41081c:	lsl	x1, x28, #4
  410820:	mov	x0, xzr
  410824:	bl	417310 <wcrtomb@plt+0x14aa0>
  410828:	str	x28, [x27]
  41082c:	str	x0, [x26]
  410830:	ldr	x8, [x21, #8]
  410834:	mov	w9, #0x50                  	// #80
  410838:	madd	x9, x22, x9, x23
  41083c:	str	x8, [x9, #16]
  410840:	ldr	x8, [x21, #8]
  410844:	cbz	x8, 410858 <wcrtomb@plt+0xdfe8>
  410848:	ldr	x0, [x26]
  41084c:	ldr	x1, [x21]
  410850:	lsl	x2, x8, #4
  410854:	bl	402210 <memcpy@plt>
  410858:	ldr	x8, [x20, #296]
  41085c:	mov	w9, #0x50                  	// #80
  410860:	mov	x10, #0xffffffffffffffff    	// #-1
  410864:	madd	x8, x22, x9, x8
  410868:	strb	w19, [x8, #32]
  41086c:	strh	w24, [x8, #34]
  410870:	stp	xzr, xzr, [x8, #48]
  410874:	str	x25, [x8, #40]
  410878:	str	x10, [x8, #72]
  41087c:	ldr	x8, [x20, #304]
  410880:	add	x8, x8, #0x1
  410884:	str	x8, [x20, #304]
  410888:	mov	x0, x22
  41088c:	ldp	x20, x19, [sp, #80]
  410890:	ldp	x22, x21, [sp, #64]
  410894:	ldp	x24, x23, [sp, #48]
  410898:	ldp	x26, x25, [sp, #32]
  41089c:	ldp	x28, x27, [sp, #16]
  4108a0:	ldp	x29, x30, [sp], #96
  4108a4:	ret
  4108a8:	bl	41757c <wcrtomb@plt+0x14d0c>
  4108ac:	stp	x29, x30, [sp, #-64]!
  4108b0:	stp	x22, x21, [sp, #32]
  4108b4:	stp	x20, x19, [sp, #48]
  4108b8:	ldr	x8, [x3, #16]
  4108bc:	ldr	x9, [x0, #8]
  4108c0:	ldr	x10, [x1, #8]
  4108c4:	mov	x19, x3
  4108c8:	mov	x20, x1
  4108cc:	sub	x8, x8, x9
  4108d0:	mov	x21, x0
  4108d4:	cmp	x8, x10
  4108d8:	mov	w22, w2
  4108dc:	str	x23, [sp, #16]
  4108e0:	mov	x29, sp
  4108e4:	b.ge	4109a8 <wcrtomb@plt+0xe138>  // b.tcont
  4108e8:	ldr	x0, [x19]
  4108ec:	bl	402620 <free@plt>
  4108f0:	ldr	x8, [x21, #8]
  4108f4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4108f8:	str	x8, [x19, #16]
  4108fc:	ldr	x9, [x20, #8]
  410900:	adds	x10, x8, x8, asr #1
  410904:	csel	x23, x11, x10, vs
  410908:	tbnz	x23, #63, 410920 <wcrtomb@plt+0xe0b0>
  41090c:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  410910:	cmp	x23, x10
  410914:	b.le	410938 <wcrtomb@plt+0xe0c8>
  410918:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  41091c:	b	410948 <wcrtomb@plt+0xe0d8>
  410920:	cmn	x23, #0x1
  410924:	b.eq	410944 <wcrtomb@plt+0xe0d4>  // b.none
  410928:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41092c:	sdiv	x10, x10, x23
  410930:	cmp	x10, #0x10
  410934:	b.lt	410918 <wcrtomb@plt+0xe0a8>  // b.tstop
  410938:	lsl	x1, x23, #4
  41093c:	cmp	x1, #0x7f
  410940:	b.gt	410950 <wcrtomb@plt+0xe0e0>
  410944:	mov	w10, #0x80                  	// #128
  410948:	lsr	x23, x10, #4
  41094c:	and	x1, x10, #0x7ffffffffffffff0
  410950:	sub	x10, x23, x8
  410954:	cmp	x10, x9
  410958:	str	xzr, [x19, #16]
  41095c:	b.ge	410998 <wcrtomb@plt+0xe128>  // b.tcont
  410960:	adds	x23, x8, x9
  410964:	b.vs	410ab8 <wcrtomb@plt+0xe248>
  410968:	tbnz	x23, #63, 41097c <wcrtomb@plt+0xe10c>
  41096c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  410970:	cmp	x23, x8
  410974:	b.le	410994 <wcrtomb@plt+0xe124>
  410978:	b	410ab8 <wcrtomb@plt+0xe248>
  41097c:	cmn	x23, #0x1
  410980:	b.eq	410994 <wcrtomb@plt+0xe124>  // b.none
  410984:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  410988:	sdiv	x8, x8, x23
  41098c:	cmp	x8, #0x10
  410990:	b.lt	410ab8 <wcrtomb@plt+0xe248>  // b.tstop
  410994:	lsl	x1, x23, #4
  410998:	mov	x0, xzr
  41099c:	bl	417310 <wcrtomb@plt+0x14aa0>
  4109a0:	str	x23, [x19, #16]
  4109a4:	str	x0, [x19]
  4109a8:	str	xzr, [x19, #8]
  4109ac:	ldr	x8, [x21, #8]
  4109b0:	ldr	x12, [x20, #8]
  4109b4:	cmp	x8, #0x0
  4109b8:	cset	w11, gt
  4109bc:	b.gt	4109c8 <wcrtomb@plt+0xe158>
  4109c0:	cmp	x12, #0x1
  4109c4:	b.lt	410aa4 <wcrtomb@plt+0xe234>  // b.tstop
  4109c8:	mov	x8, xzr
  4109cc:	mov	x10, xzr
  4109d0:	mov	x9, xzr
  4109d4:	cmp	x10, x12
  4109d8:	b.ge	410a18 <wcrtomb@plt+0xe1a8>  // b.tcont
  4109dc:	tbz	w11, #0, 410a50 <wcrtomb@plt+0xe1e0>
  4109e0:	ldr	x12, [x21]
  4109e4:	ldr	x11, [x20]
  4109e8:	lsl	x13, x8, #4
  4109ec:	lsl	x14, x10, #4
  4109f0:	ldr	x12, [x12, x13]
  4109f4:	ldr	x13, [x11, x14]
  4109f8:	cmp	x12, x13
  4109fc:	b.gt	410a54 <wcrtomb@plt+0xe1e4>
  410a00:	b.ne	410a18 <wcrtomb@plt+0xe1a8>  // b.any
  410a04:	add	x11, x11, x10, lsl #4
  410a08:	ldr	w11, [x11, #8]
  410a0c:	add	x10, x10, #0x1
  410a10:	and	w11, w11, w22
  410a14:	b	410a1c <wcrtomb@plt+0xe1ac>
  410a18:	mov	w11, wzr
  410a1c:	ldr	x12, [x21]
  410a20:	ldr	x13, [x19]
  410a24:	add	x12, x12, x8, lsl #4
  410a28:	ldr	x14, [x12]
  410a2c:	add	x13, x13, x9, lsl #4
  410a30:	add	x8, x8, #0x1
  410a34:	add	x9, x9, #0x1
  410a38:	str	x14, [x13]
  410a3c:	ldr	w12, [x12, #8]
  410a40:	str	x9, [x19, #8]
  410a44:	orr	w11, w12, w11
  410a48:	str	w11, [x13, #8]
  410a4c:	b	410a88 <wcrtomb@plt+0xe218>
  410a50:	ldr	x11, [x20]
  410a54:	add	x12, x11, x10, lsl #4
  410a58:	ldr	w12, [x12, #8]
  410a5c:	ands	w12, w12, w22
  410a60:	b.eq	410a84 <wcrtomb@plt+0xe214>  // b.none
  410a64:	ldr	x13, [x19]
  410a68:	lsl	x14, x10, #4
  410a6c:	ldr	x11, [x11, x14]
  410a70:	add	x13, x13, x9, lsl #4
  410a74:	add	x9, x9, #0x1
  410a78:	str	x11, [x13]
  410a7c:	str	x9, [x19, #8]
  410a80:	str	w12, [x13, #8]
  410a84:	add	x10, x10, #0x1
  410a88:	ldr	x11, [x21, #8]
  410a8c:	ldr	x12, [x20, #8]
  410a90:	cmp	x8, x11
  410a94:	cset	w11, lt  // lt = tstop
  410a98:	b.lt	4109d4 <wcrtomb@plt+0xe164>  // b.tstop
  410a9c:	cmp	x10, x12
  410aa0:	b.lt	4109d4 <wcrtomb@plt+0xe164>  // b.tstop
  410aa4:	ldp	x20, x19, [sp, #48]
  410aa8:	ldp	x22, x21, [sp, #32]
  410aac:	ldr	x23, [sp, #16]
  410ab0:	ldp	x29, x30, [sp], #64
  410ab4:	ret
  410ab8:	bl	41757c <wcrtomb@plt+0x14d0c>
  410abc:	ldr	x8, [x0]
  410ac0:	ldr	x9, [x1]
  410ac4:	cmp	x8, x9
  410ac8:	cset	w8, gt
  410acc:	csinv	w0, w8, wzr, ge  // ge = tcont
  410ad0:	ret
  410ad4:	sub	sp, sp, #0xa0
  410ad8:	stp	x29, x30, [sp, #64]
  410adc:	stp	x28, x27, [sp, #80]
  410ae0:	stp	x26, x25, [sp, #96]
  410ae4:	stp	x24, x23, [sp, #112]
  410ae8:	stp	x22, x21, [sp, #128]
  410aec:	stp	x20, x19, [sp, #144]
  410af0:	ldr	x8, [x0, #304]
  410af4:	mov	w21, w5
  410af8:	mov	x24, x4
  410afc:	mov	x19, x2
  410b00:	mov	x23, x0
  410b04:	cmp	x8, #0x400
  410b08:	mov	x26, x1
  410b0c:	add	x29, sp, #0x40
  410b10:	str	w3, [sp, #28]
  410b14:	b.lt	410cc8 <wcrtomb@plt+0xe458>  // b.tstop
  410b18:	ldrsw	x20, [x23, #364]
  410b1c:	cmp	x8, x20
  410b20:	b.le	410b68 <wcrtomb@plt+0xe2f8>
  410b24:	add	x8, x20, x20, lsl #2
  410b28:	lsl	x22, x8, #4
  410b2c:	ldr	x8, [x23, #296]
  410b30:	add	x8, x8, x22
  410b34:	ldr	x0, [x8, #8]
  410b38:	bl	402620 <free@plt>
  410b3c:	ldr	x8, [x23, #296]
  410b40:	add	x8, x8, x22
  410b44:	ldr	x0, [x8, #48]
  410b48:	bl	402620 <free@plt>
  410b4c:	ldr	x8, [x23, #304]
  410b50:	add	x20, x20, #0x1
  410b54:	add	x22, x22, #0x50
  410b58:	cmp	x20, x8
  410b5c:	b.lt	410b2c <wcrtomb@plt+0xe2bc>  // b.tstop
  410b60:	ldrsw	x20, [x23, #364]
  410b64:	mov	x1, x26
  410b68:	ldr	x8, [x23, #368]
  410b6c:	str	x20, [x23, #304]
  410b70:	cbz	x8, 410bf8 <wcrtomb@plt+0xe388>
  410b74:	ldr	x9, [x23, #352]
  410b78:	cmp	x9, #0x1
  410b7c:	b.lt	410bf0 <wcrtomb@plt+0xe380>  // b.tstop
  410b80:	ldr	x0, [x8]
  410b84:	bl	402620 <free@plt>
  410b88:	ldr	x8, [x23, #376]
  410b8c:	ldr	x0, [x8]
  410b90:	bl	402620 <free@plt>
  410b94:	ldr	x8, [x23, #376]
  410b98:	str	xzr, [x8]
  410b9c:	ldr	x8, [x23, #368]
  410ba0:	str	xzr, [x8]
  410ba4:	ldr	x8, [x23, #352]
  410ba8:	cmp	x8, #0x2
  410bac:	b.lt	410bf0 <wcrtomb@plt+0xe380>  // b.tstop
  410bb0:	mov	w20, #0x1                   	// #1
  410bb4:	ldr	x8, [x23, #368]
  410bb8:	lsl	x22, x20, #3
  410bbc:	ldr	x0, [x8, x22]
  410bc0:	bl	402620 <free@plt>
  410bc4:	ldr	x8, [x23, #376]
  410bc8:	ldr	x0, [x8, x22]
  410bcc:	bl	402620 <free@plt>
  410bd0:	ldr	x8, [x23, #376]
  410bd4:	add	x20, x20, #0x1
  410bd8:	str	xzr, [x8, x22]
  410bdc:	ldr	x8, [x23, #368]
  410be0:	str	xzr, [x8, x22]
  410be4:	ldr	x8, [x23, #352]
  410be8:	cmp	x20, x8
  410bec:	b.lt	410bb4 <wcrtomb@plt+0xe344>  // b.tstop
  410bf0:	mov	x1, x26
  410bf4:	str	wzr, [x23, #360]
  410bf8:	ldrb	w8, [x23, #1048]
  410bfc:	cbz	w8, 410cc8 <wcrtomb@plt+0xe458>
  410c00:	ldr	x8, [x23, #432]
  410c04:	cbz	x8, 410cc8 <wcrtomb@plt+0xe458>
  410c08:	ldr	x9, [x23, #352]
  410c0c:	tbnz	x9, #63, 410c58 <wcrtomb@plt+0xe3e8>
  410c10:	ldur	x0, [x8, #-8]
  410c14:	bl	402620 <free@plt>
  410c18:	ldr	x8, [x23, #432]
  410c1c:	stur	xzr, [x8, #-8]
  410c20:	ldr	x8, [x23, #352]
  410c24:	cmp	x8, #0x1
  410c28:	b.lt	410c58 <wcrtomb@plt+0xe3e8>  // b.tstop
  410c2c:	mov	x20, xzr
  410c30:	ldr	x8, [x23, #432]
  410c34:	lsl	x22, x20, #3
  410c38:	ldr	x0, [x8, x22]
  410c3c:	bl	402620 <free@plt>
  410c40:	ldr	x8, [x23, #432]
  410c44:	add	x20, x20, #0x1
  410c48:	str	xzr, [x8, x22]
  410c4c:	ldr	x8, [x23, #352]
  410c50:	cmp	x20, x8
  410c54:	b.lt	410c30 <wcrtomb@plt+0xe3c0>  // b.tstop
  410c58:	ldr	w8, [x23, #364]
  410c5c:	mov	x1, x26
  410c60:	cmp	w8, #0x1
  410c64:	b.lt	410cc4 <wcrtomb@plt+0xe454>  // b.tstop
  410c68:	ldr	x10, [x23, #296]
  410c6c:	cmp	w8, #0x1
  410c70:	b.ne	410c7c <wcrtomb@plt+0xe40c>  // b.any
  410c74:	mov	x9, xzr
  410c78:	b	410ca4 <wcrtomb@plt+0xe434>
  410c7c:	and	x9, x8, #0xfffffffe
  410c80:	add	x11, x10, #0x98
  410c84:	mov	x12, #0xffffffffffffffff    	// #-1
  410c88:	mov	x13, x9
  410c8c:	stur	x12, [x11, #-80]
  410c90:	str	x12, [x11], #160
  410c94:	subs	x13, x13, #0x2
  410c98:	b.ne	410c8c <wcrtomb@plt+0xe41c>  // b.any
  410c9c:	cmp	x9, x8
  410ca0:	b.eq	410cc4 <wcrtomb@plt+0xe454>  // b.none
  410ca4:	mov	w11, #0x50                  	// #80
  410ca8:	madd	x10, x9, x11, x10
  410cac:	add	x10, x10, #0x48
  410cb0:	mov	x11, #0xffffffffffffffff    	// #-1
  410cb4:	add	x9, x9, #0x1
  410cb8:	cmp	x9, x8
  410cbc:	str	x11, [x10], #80
  410cc0:	b.cc	410cb4 <wcrtomb@plt+0xe444>  // b.lo, b.ul, b.last
  410cc4:	str	xzr, [x23, #440]
  410cc8:	ldr	x8, [x23, #352]
  410ccc:	cbnz	x8, 410cdc <wcrtomb@plt+0xe46c>
  410cd0:	mov	x0, x23
  410cd4:	bl	411184 <wcrtomb@plt+0xe914>
  410cd8:	mov	x1, x26
  410cdc:	stur	x1, [x29, #-16]
  410ce0:	ldr	x22, [x23, #368]
  410ce4:	ldrb	w8, [x23, #459]
  410ce8:	ldrb	w25, [x19]
  410cec:	str	x8, [sp, #32]
  410cf0:	strb	w8, [x19]
  410cf4:	tbz	w21, #0, 410d24 <wcrtomb@plt+0xe4b4>
  410cf8:	ldr	x8, [x23, #424]
  410cfc:	str	xzr, [x23, #272]
  410d00:	cbnz	x8, 410d24 <wcrtomb@plt+0xe4b4>
  410d04:	ldr	x20, [x23, #176]
  410d08:	lsr	x8, x20, #59
  410d0c:	cbnz	x8, 411180 <wcrtomb@plt+0xe910>
  410d10:	lsl	x0, x20, #4
  410d14:	bl	417290 <wcrtomb@plt+0x14a20>
  410d18:	mov	x1, x26
  410d1c:	stp	xzr, x20, [x23, #416]
  410d20:	str	x0, [x23, #408]
  410d24:	ldr	x8, [sp, #32]
  410d28:	str	x24, [sp, #8]
  410d2c:	mov	x27, xzr
  410d30:	mov	x28, xzr
  410d34:	add	x8, x23, x8
  410d38:	add	x24, x23, #0x110
  410d3c:	add	x8, x8, #0x1cc
  410d40:	str	w25, [sp, #4]
  410d44:	stur	xzr, [x29, #-24]
  410d48:	str	x8, [sp, #16]
  410d4c:	b	410d70 <wcrtomb@plt+0xe500>
  410d50:	ldr	x8, [x23, #376]
  410d54:	add	x9, x26, #0x1
  410d58:	mov	x28, x20
  410d5c:	mov	x1, x25
  410d60:	ldr	x8, [x8, x20, lsl #3]
  410d64:	stur	x9, [x29, #-16]
  410d68:	ldrb	w9, [x26]
  410d6c:	ldr	x27, [x8, x9, lsl #3]
  410d70:	ldr	x26, [x22, x27, lsl #3]
  410d74:	cbz	x26, 410f30 <wcrtomb@plt+0xe6c0>
  410d78:	mov	x25, x1
  410d7c:	b	410da4 <wcrtomb@plt+0xe534>
  410d80:	add	x11, x10, #0x1
  410d84:	stur	x11, [x29, #-16]
  410d88:	ldrb	w10, [x10]
  410d8c:	mov	x27, x8
  410d90:	ldr	x20, [x9, x10, lsl #3]
  410d94:	ldr	x26, [x22, x20, lsl #3]
  410d98:	mov	x28, x27
  410d9c:	mov	x27, x20
  410da0:	cbz	x26, 410f38 <wcrtomb@plt+0xe6c8>
  410da4:	ldrsw	x8, [x23, #364]
  410da8:	cmp	x27, x8
  410dac:	b.ge	410e1c <wcrtomb@plt+0xe5ac>  // b.tcont
  410db0:	tbz	w21, #0, 410dd4 <wcrtomb@plt+0xe564>
  410db4:	ldr	x8, [x23, #296]
  410db8:	mov	w9, #0x50                  	// #80
  410dbc:	madd	x8, x27, x9, x8
  410dc0:	ldr	x8, [x8, #56]
  410dc4:	cbz	x8, 410dd4 <wcrtomb@plt+0xe564>
  410dc8:	ldur	x20, [x29, #-16]
  410dcc:	ldrb	w8, [x20]
  410dd0:	b	410e08 <wcrtomb@plt+0xe598>
  410dd4:	ldur	x20, [x29, #-16]
  410dd8:	ldrb	w8, [x20]
  410ddc:	ldr	x9, [x26, x8, lsl #3]
  410de0:	cmp	x9, x27
  410de4:	b.ne	410e04 <wcrtomb@plt+0xe594>  // b.any
  410de8:	add	x9, x20, #0x1
  410dec:	stur	x9, [x29, #-16]
  410df0:	ldrb	w8, [x9], #1
  410df4:	ldr	x10, [x26, x8, lsl #3]
  410df8:	cmp	x10, x27
  410dfc:	b.eq	410dec <wcrtomb@plt+0xe57c>  // b.none
  410e00:	sub	x20, x9, #0x1
  410e04:	tbz	w21, #0, 410ec8 <wcrtomb@plt+0xe658>
  410e08:	add	x8, x23, x8
  410e0c:	ldrb	w8, [x8, #716]
  410e10:	cbz	w8, 410e80 <wcrtomb@plt+0xe610>
  410e14:	mov	x25, x20
  410e18:	stur	x25, [x29, #-16]
  410e1c:	tbz	w21, #0, 410ec4 <wcrtomb@plt+0xe654>
  410e20:	ldr	x8, [x23, #296]
  410e24:	mov	w9, #0x50                  	// #80
  410e28:	madd	x8, x27, x9, x8
  410e2c:	ldr	x9, [x8, #56]
  410e30:	ldur	x8, [x29, #-16]
  410e34:	cbz	x9, 410f1c <wcrtomb@plt+0xe6ac>
  410e38:	cmp	x8, x19
  410e3c:	b.cs	410f1c <wcrtomb@plt+0xe6ac>  // b.hs, b.nlast
  410e40:	ldrb	w9, [x8]
  410e44:	add	x9, x23, x9, lsl #2
  410e48:	ldr	w9, [x9, #1308]
  410e4c:	cmn	w9, #0x1
  410e50:	b.ne	410f1c <wcrtomb@plt+0xe6ac>  // b.any
  410e54:	sub	x2, x29, #0x10
  410e58:	mov	x0, x23
  410e5c:	mov	x1, x27
  410e60:	mov	x3, x19
  410e64:	bl	41135c <wcrtomb@plt+0xeaec>
  410e68:	ldur	x25, [x29, #-16]
  410e6c:	ldr	x22, [x23, #368]
  410e70:	mov	x20, x0
  410e74:	b	410d94 <wcrtomb@plt+0xe524>
  410e78:	mov	w0, #0x1                   	// #1
  410e7c:	add	x25, x25, w0, sxtw
  410e80:	cmp	x25, x20
  410e84:	b.cs	410e18 <wcrtomb@plt+0xe5a8>  // b.hs, b.nlast
  410e88:	ldrb	w8, [x25]
  410e8c:	add	x8, x23, x8, lsl #2
  410e90:	ldr	w8, [x8, #1308]
  410e94:	cmn	w8, #0x1
  410e98:	b.ne	410e78 <wcrtomb@plt+0xe608>  // b.any
  410e9c:	sub	x2, x19, x25
  410ea0:	sub	x0, x29, #0x4
  410ea4:	mov	x1, x25
  410ea8:	mov	x3, x24
  410eac:	bl	419da4 <wcrtomb@plt+0x17534>
  410eb0:	sub	x8, x0, #0x1
  410eb4:	cmn	x8, #0x3
  410eb8:	b.cc	410e7c <wcrtomb@plt+0xe60c>  // b.lo, b.ul, b.last
  410ebc:	str	xzr, [x24]
  410ec0:	b	410e78 <wcrtomb@plt+0xe608>
  410ec4:	ldur	x20, [x29, #-16]
  410ec8:	add	x10, x20, #0x1
  410ecc:	stur	x10, [x29, #-16]
  410ed0:	ldrb	w8, [x20]
  410ed4:	ldr	x8, [x26, x8, lsl #3]
  410ed8:	ldr	x9, [x22, x8, lsl #3]
  410edc:	cbz	x9, 411088 <wcrtomb@plt+0xe818>
  410ee0:	ldrsw	x11, [x23, #364]
  410ee4:	cmp	x27, x11
  410ee8:	b.ge	410d80 <wcrtomb@plt+0xe510>  // b.tcont
  410eec:	ldrb	w11, [x10]
  410ef0:	ldr	x11, [x9, x11, lsl #3]
  410ef4:	cmp	x11, x8
  410ef8:	b.ne	410d80 <wcrtomb@plt+0xe510>  // b.any
  410efc:	add	x10, x20, #0x2
  410f00:	stur	x10, [x29, #-16]
  410f04:	ldrb	w11, [x10], #1
  410f08:	ldr	x11, [x9, x11, lsl #3]
  410f0c:	cmp	x11, x8
  410f10:	b.eq	410f00 <wcrtomb@plt+0xe690>  // b.none
  410f14:	sub	x10, x10, #0x1
  410f18:	b	410d80 <wcrtomb@plt+0xe510>
  410f1c:	add	x9, x8, #0x1
  410f20:	stur	x9, [x29, #-16]
  410f24:	ldrb	w8, [x8]
  410f28:	ldr	x20, [x26, x8, lsl #3]
  410f2c:	b	410d94 <wcrtomb@plt+0xe524>
  410f30:	mov	x20, x27
  410f34:	mov	x25, x1
  410f38:	tbnz	x20, #63, 411094 <wcrtomb@plt+0xe824>
  410f3c:	ldr	x8, [x23, #376]
  410f40:	ldr	x8, [x8, x20, lsl #3]
  410f44:	cbz	x8, 411064 <wcrtomb@plt+0xe7f4>
  410f48:	ldur	x26, [x29, #-16]
  410f4c:	ldr	x9, [x23, #384]
  410f50:	ldrb	w8, [x26]
  410f54:	ldrb	w9, [x9, x20]
  410f58:	add	x10, x23, x8
  410f5c:	ldrb	w10, [x10, #460]
  410f60:	tst	w10, w9
  410f64:	b.ne	41113c <wcrtomb@plt+0xe8cc>  // b.any
  410f68:	cmp	x26, x19
  410f6c:	b.ne	410f90 <wcrtomb@plt+0xe720>  // b.any
  410f70:	ldr	x9, [x23, #296]
  410f74:	mov	w10, #0x50                  	// #80
  410f78:	madd	x9, x20, x10, x9
  410f7c:	ldrb	w10, [x9, #32]
  410f80:	ldrh	w9, [x9, #34]
  410f84:	and	w9, w10, w9, lsr #6
  410f88:	tst	w9, #0x7
  410f8c:	b.ne	41113c <wcrtomb@plt+0xe8cc>  // b.any
  410f90:	tbz	w21, #0, 410d50 <wcrtomb@plt+0xe4e0>
  410f94:	ldrsw	x9, [x23, #364]
  410f98:	cmp	x20, x9
  410f9c:	b.ge	410fc0 <wcrtomb@plt+0xe750>  // b.tcont
  410fa0:	add	x8, x23, x8
  410fa4:	ldrb	w8, [x8, #716]
  410fa8:	cbnz	w8, 410fb8 <wcrtomb@plt+0xe748>
  410fac:	cmp	x25, x26
  410fb0:	b.cc	411028 <wcrtomb@plt+0xe7b8>  // b.lo, b.ul, b.last
  410fb4:	mov	x26, x25
  410fb8:	stur	x26, [x29, #-16]
  410fbc:	mov	x25, x26
  410fc0:	ldr	x8, [x23, #296]
  410fc4:	mov	w9, #0x50                  	// #80
  410fc8:	madd	x8, x20, x9, x8
  410fcc:	ldr	x8, [x8, #56]
  410fd0:	cbz	x8, 410d50 <wcrtomb@plt+0xe4e0>
  410fd4:	cmp	x26, x19
  410fd8:	b.cs	410d50 <wcrtomb@plt+0xe4e0>  // b.hs, b.nlast
  410fdc:	ldrb	w8, [x26]
  410fe0:	add	x8, x23, x8, lsl #2
  410fe4:	ldr	w8, [x8, #1308]
  410fe8:	cmn	w8, #0x1
  410fec:	b.ne	410d50 <wcrtomb@plt+0xe4e0>  // b.any
  410ff0:	sub	x2, x29, #0x10
  410ff4:	mov	x0, x23
  410ff8:	mov	x1, x20
  410ffc:	mov	x3, x19
  411000:	bl	41135c <wcrtomb@plt+0xeaec>
  411004:	ldur	x1, [x29, #-16]
  411008:	ldr	x22, [x23, #368]
  41100c:	mov	x27, x0
  411010:	mov	x28, x20
  411014:	b	410d70 <wcrtomb@plt+0xe500>
  411018:	mov	w0, #0x1                   	// #1
  41101c:	add	x25, x25, w0, sxtw
  411020:	cmp	x25, x26
  411024:	b.cs	411128 <wcrtomb@plt+0xe8b8>  // b.hs, b.nlast
  411028:	ldrb	w8, [x25]
  41102c:	add	x8, x23, x8, lsl #2
  411030:	ldr	w8, [x8, #1308]
  411034:	cmn	w8, #0x1
  411038:	b.ne	411018 <wcrtomb@plt+0xe7a8>  // b.any
  41103c:	sub	x2, x19, x25
  411040:	sub	x0, x29, #0x4
  411044:	mov	x1, x25
  411048:	mov	x3, x24
  41104c:	bl	419da4 <wcrtomb@plt+0x17534>
  411050:	sub	x8, x0, #0x1
  411054:	cmn	x8, #0x3
  411058:	b.cc	41101c <wcrtomb@plt+0xe7ac>  // b.lo, b.ul, b.last
  41105c:	str	xzr, [x24]
  411060:	b	411018 <wcrtomb@plt+0xe7a8>
  411064:	ldur	x8, [x29, #-16]
  411068:	mov	x0, x20
  41106c:	mov	x1, x23
  411070:	ldrb	w2, [x8]
  411074:	bl	41181c <wcrtomb@plt+0xefac>
  411078:	ldr	x22, [x23, #368]
  41107c:	mov	x27, x20
  411080:	mov	x1, x25
  411084:	b	410d70 <wcrtomb@plt+0xe500>
  411088:	mov	x20, x8
  41108c:	mov	x28, x27
  411090:	tbz	x20, #63, 410f3c <wcrtomb@plt+0xe6cc>
  411094:	ldur	x1, [x29, #-16]
  411098:	cmn	x20, #0x2
  41109c:	b.ne	4110c0 <wcrtomb@plt+0xe850>  // b.any
  4110a0:	ldurb	w2, [x1, #-1]
  4110a4:	mov	x0, x28
  4110a8:	mov	x1, x23
  4110ac:	bl	41181c <wcrtomb@plt+0xefac>
  4110b0:	ldr	x22, [x23, #368]
  4110b4:	mov	x27, x0
  4110b8:	mov	x1, x25
  4110bc:	b	410d70 <wcrtomb@plt+0xe500>
  4110c0:	cmp	x1, x19
  4110c4:	b.hi	411134 <wcrtomb@plt+0xe8c4>  // b.pmore
  4110c8:	ldurb	w8, [x1, #-1]
  4110cc:	ldr	x9, [sp, #32]
  4110d0:	cmp	w8, w9
  4110d4:	b.ne	411134 <wcrtomb@plt+0xe8c4>  // b.any
  4110d8:	ldr	x8, [x23, #392]
  4110dc:	ldr	x27, [x8, x28, lsl #3]
  4110e0:	tbnz	x27, #63, 411134 <wcrtomb@plt+0xe8c4>
  4110e4:	ldur	x8, [x29, #-24]
  4110e8:	add	x8, x8, #0x1
  4110ec:	stur	x8, [x29, #-24]
  4110f0:	ldr	w8, [sp, #28]
  4110f4:	tbnz	w8, #0, 410d70 <wcrtomb@plt+0xe500>
  4110f8:	ldr	x8, [sp, #16]
  4110fc:	mov	x27, xzr
  411100:	ldrb	w8, [x8]
  411104:	cmp	w8, #0x4
  411108:	b.eq	410d70 <wcrtomb@plt+0xe500>  // b.none
  41110c:	cmp	w8, #0x2
  411110:	b.ne	411120 <wcrtomb@plt+0xe8b0>  // b.any
  411114:	ldrsw	x8, [x23, #364]
  411118:	sub	x27, x8, #0x1
  41111c:	b	410d70 <wcrtomb@plt+0xe500>
  411120:	ldr	x27, [x23, #400]
  411124:	b	410d70 <wcrtomb@plt+0xe500>
  411128:	mov	x26, x25
  41112c:	stur	x25, [x29, #-16]
  411130:	b	410fc0 <wcrtomb@plt+0xe750>
  411134:	mov	x26, xzr
  411138:	stur	xzr, [x29, #-16]
  41113c:	ldr	x9, [sp, #8]
  411140:	ldr	w10, [sp, #4]
  411144:	cbz	x9, 411158 <wcrtomb@plt+0xe8e8>
  411148:	ldr	x8, [x9]
  41114c:	ldur	x11, [x29, #-24]
  411150:	add	x8, x8, x11
  411154:	str	x8, [x9]
  411158:	strb	w10, [x19]
  41115c:	mov	x0, x26
  411160:	ldp	x20, x19, [sp, #144]
  411164:	ldp	x22, x21, [sp, #128]
  411168:	ldp	x24, x23, [sp, #112]
  41116c:	ldp	x26, x25, [sp, #96]
  411170:	ldp	x28, x27, [sp, #80]
  411174:	ldp	x29, x30, [sp, #64]
  411178:	add	sp, sp, #0xa0
  41117c:	ret
  411180:	bl	41757c <wcrtomb@plt+0x14d0c>
  411184:	stp	x29, x30, [sp, #-64]!
  411188:	stp	x22, x21, [sp, #32]
  41118c:	stp	x20, x19, [sp, #48]
  411190:	ldr	x22, [x0, #352]
  411194:	ldr	x8, [x0, #304]
  411198:	str	x23, [sp, #16]
  41119c:	mov	x29, sp
  4111a0:	subs	x8, x8, x22
  4111a4:	b.le	411344 <wcrtomb@plt+0xead4>
  4111a8:	ldr	x9, [x0, #368]
  4111ac:	add	x10, x22, #0x2
  4111b0:	mov	x19, x0
  4111b4:	cmp	x9, #0x0
  4111b8:	sub	x11, x9, #0x10
  4111bc:	csel	x9, xzr, x10, eq  // eq = none
  4111c0:	csel	x0, xzr, x11, eq  // eq = none
  4111c4:	adds	x10, x9, x9, asr #1
  4111c8:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4111cc:	csel	x23, x11, x10, vs
  4111d0:	tbnz	x23, #63, 4111e8 <wcrtomb@plt+0xe978>
  4111d4:	mov	x10, #0xfffffffffffffff     	// #1152921504606846975
  4111d8:	cmp	x23, x10
  4111dc:	b.le	411200 <wcrtomb@plt+0xe990>
  4111e0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  4111e4:	b	411210 <wcrtomb@plt+0xe9a0>
  4111e8:	cmn	x23, #0x1
  4111ec:	b.eq	41120c <wcrtomb@plt+0xe99c>  // b.none
  4111f0:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  4111f4:	sdiv	x10, x10, x23
  4111f8:	cmp	x10, #0x8
  4111fc:	b.lt	4111e0 <wcrtomb@plt+0xe970>  // b.tstop
  411200:	lsl	x1, x23, #3
  411204:	cmp	x1, #0x7f
  411208:	b.gt	411218 <wcrtomb@plt+0xe9a8>
  41120c:	mov	w10, #0x80                  	// #128
  411210:	lsr	x23, x10, #3
  411214:	and	x1, x10, #0x7ffffffffffffff8
  411218:	sub	x10, x23, x9
  41121c:	cmp	x10, x8
  411220:	b.ge	41125c <wcrtomb@plt+0xe9ec>  // b.tcont
  411224:	adds	x23, x9, x8
  411228:	b.vs	411358 <wcrtomb@plt+0xeae8>
  41122c:	tbnz	x23, #63, 411240 <wcrtomb@plt+0xe9d0>
  411230:	mov	x8, #0xfffffffffffffff     	// #1152921504606846975
  411234:	cmp	x23, x8
  411238:	b.le	411258 <wcrtomb@plt+0xe9e8>
  41123c:	b	411358 <wcrtomb@plt+0xeae8>
  411240:	cmn	x23, #0x1
  411244:	b.eq	411258 <wcrtomb@plt+0xe9e8>  // b.none
  411248:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  41124c:	sdiv	x8, x8, x23
  411250:	cmp	x8, #0x8
  411254:	b.lt	411358 <wcrtomb@plt+0xeae8>  // b.tstop
  411258:	lsl	x1, x23, #3
  41125c:	bl	417310 <wcrtomb@plt+0x14aa0>
  411260:	add	x8, x0, #0x10
  411264:	sub	x20, x23, #0x2
  411268:	stp	xzr, xzr, [x0]
  41126c:	str	x8, [x19, #368]
  411270:	lsr	x8, x20, #60
  411274:	str	x20, [x19, #352]
  411278:	cbnz	x8, 411358 <wcrtomb@plt+0xeae8>
  41127c:	ldr	x0, [x19, #376]
  411280:	lsl	x21, x20, #3
  411284:	mov	x1, x21
  411288:	bl	417310 <wcrtomb@plt+0x14aa0>
  41128c:	ldr	x8, [x19, #384]
  411290:	str	x0, [x19, #376]
  411294:	mov	x1, x20
  411298:	mov	x0, x8
  41129c:	bl	417310 <wcrtomb@plt+0x14aa0>
  4112a0:	ldr	x8, [x19, #392]
  4112a4:	str	x0, [x19, #384]
  4112a8:	mov	x1, x21
  4112ac:	mov	x0, x8
  4112b0:	bl	417310 <wcrtomb@plt+0x14aa0>
  4112b4:	ldrb	w8, [x19, #1048]
  4112b8:	str	x0, [x19, #392]
  4112bc:	cbz	w8, 4112e8 <wcrtomb@plt+0xea78>
  4112c0:	ldr	x8, [x19, #432]
  4112c4:	lsl	x1, x23, #3
  4112c8:	sub	x9, x8, #0x10
  4112cc:	cmp	x8, #0x0
  4112d0:	csel	x0, xzr, x9, eq  // eq = none
  4112d4:	bl	417310 <wcrtomb@plt+0x14aa0>
  4112d8:	cbnz	x22, 4112e0 <wcrtomb@plt+0xea70>
  4112dc:	stp	xzr, xzr, [x0]
  4112e0:	add	x8, x0, #0x10
  4112e4:	str	x8, [x19, #432]
  4112e8:	cmp	x22, x20
  4112ec:	b.ge	411344 <wcrtomb@plt+0xead4>  // b.tcont
  4112f0:	ldrb	w8, [x19, #1048]
  4112f4:	cbz	w8, 411324 <wcrtomb@plt+0xeab4>
  4112f8:	ldr	x8, [x19, #368]
  4112fc:	lsl	x9, x22, #3
  411300:	add	x22, x22, #0x1
  411304:	cmp	x22, x20
  411308:	str	xzr, [x8, x9]
  41130c:	ldr	x8, [x19, #376]
  411310:	str	xzr, [x8, x9]
  411314:	ldr	x8, [x19, #432]
  411318:	str	xzr, [x8, x9]
  41131c:	b.lt	4112f8 <wcrtomb@plt+0xea88>  // b.tstop
  411320:	b	411344 <wcrtomb@plt+0xead4>
  411324:	ldr	x8, [x19, #368]
  411328:	lsl	x9, x22, #3
  41132c:	add	x22, x22, #0x1
  411330:	cmp	x22, x20
  411334:	str	xzr, [x8, x9]
  411338:	ldr	x8, [x19, #376]
  41133c:	str	xzr, [x8, x9]
  411340:	b.lt	411324 <wcrtomb@plt+0xeab4>  // b.tstop
  411344:	ldp	x20, x19, [sp, #48]
  411348:	ldp	x22, x21, [sp, #32]
  41134c:	ldr	x23, [sp, #16]
  411350:	ldp	x29, x30, [sp], #64
  411354:	ret
  411358:	bl	41757c <wcrtomb@plt+0x14d0c>
  41135c:	sub	sp, sp, #0x70
  411360:	stp	x29, x30, [sp, #16]
  411364:	stp	x28, x27, [sp, #32]
  411368:	stp	x26, x25, [sp, #48]
  41136c:	stp	x24, x23, [sp, #64]
  411370:	stp	x22, x21, [sp, #80]
  411374:	stp	x20, x19, [sp, #96]
  411378:	ldr	x8, [x2]
  41137c:	mov	x23, x2
  411380:	mov	x19, x0
  411384:	mov	x20, x1
  411388:	ldrb	w9, [x8]
  41138c:	add	x29, sp, #0x10
  411390:	add	x9, x0, x9, lsl #2
  411394:	ldr	w26, [x9, #1308]
  411398:	cmn	w26, #0x1
  41139c:	b.ne	4113f0 <wcrtomb@plt+0xeb80>  // b.any
  4113a0:	add	x21, x19, #0x110
  4113a4:	sub	x2, x3, x8
  4113a8:	sub	x0, x29, #0x4
  4113ac:	mov	x1, x8
  4113b0:	mov	x3, x21
  4113b4:	bl	419da4 <wcrtomb@plt+0x17534>
  4113b8:	sub	x8, x0, #0x1
  4113bc:	cmn	x8, #0x3
  4113c0:	b.cs	4113ec <wcrtomb@plt+0xeb7c>  // b.hs, b.nlast
  4113c4:	ldur	w26, [x29, #-4]
  4113c8:	mov	x24, x0
  4113cc:	add	x21, x19, #0x198
  4113d0:	add	x25, x19, #0x1a0
  4113d4:	cmp	w24, #0x1
  4113d8:	str	xzr, [x19, #416]
  4113dc:	b.ge	411400 <wcrtomb@plt+0xeb90>  // b.tcont
  4113e0:	mov	w27, wzr
  4113e4:	mov	x22, x20
  4113e8:	b	4114a8 <wcrtomb@plt+0xec38>
  4113ec:	str	xzr, [x21]
  4113f0:	add	x21, x19, #0x198
  4113f4:	add	x25, x19, #0x1a0
  4113f8:	mov	w24, #0x1                   	// #1
  4113fc:	str	xzr, [x19, #416]
  411400:	mov	w27, wzr
  411404:	mov	x22, x20
  411408:	b	411428 <wcrtomb@plt+0xebb8>
  41140c:	add	x9, x8, #0x1
  411410:	str	x9, [x23]
  411414:	ldrb	w8, [x8]
  411418:	add	w27, w27, #0x1
  41141c:	cmp	w24, w27
  411420:	ldr	x22, [x28, x8, lsl #3]
  411424:	b.eq	4114a4 <wcrtomb@plt+0xec34>  // b.none
  411428:	cbz	w27, 411438 <wcrtomb@plt+0xebc8>
  41142c:	ldrsw	x8, [x19, #364]
  411430:	cmp	x22, x8
  411434:	b.lt	4114a8 <wcrtomb@plt+0xec38>  // b.tstop
  411438:	ldr	x8, [x19, #368]
  41143c:	ldr	x28, [x8, x22, lsl #3]
  411440:	cbnz	x28, 41147c <wcrtomb@plt+0xec0c>
  411444:	ldr	x8, [x19, #376]
  411448:	ldr	x28, [x8, x22, lsl #3]
  41144c:	cbnz	x28, 41147c <wcrtomb@plt+0xec0c>
  411450:	ldr	x8, [x23]
  411454:	mov	x0, x22
  411458:	mov	x1, x19
  41145c:	ldrb	w2, [x8]
  411460:	bl	41181c <wcrtomb@plt+0xefac>
  411464:	ldr	x8, [x19, #368]
  411468:	ldr	x28, [x8, x22, lsl #3]
  41146c:	cbnz	x28, 41147c <wcrtomb@plt+0xec0c>
  411470:	ldr	x8, [x19, #376]
  411474:	ldr	x28, [x8, x22, lsl #3]
  411478:	cbz	x28, 4117f8 <wcrtomb@plt+0xef88>
  41147c:	ldr	x8, [x23]
  411480:	ldrb	w2, [x8]
  411484:	ldr	x9, [x28, x2, lsl #3]
  411488:	cmn	x9, #0x2
  41148c:	b.ne	41140c <wcrtomb@plt+0xeb9c>  // b.any
  411490:	mov	x0, x22
  411494:	mov	x1, x19
  411498:	bl	41181c <wcrtomb@plt+0xefac>
  41149c:	ldr	x8, [x23]
  4114a0:	b	41140c <wcrtomb@plt+0xeb9c>
  4114a4:	mov	w27, w24
  4114a8:	ldr	x8, [x23]
  4114ac:	sub	w9, w24, w27
  4114b0:	cmn	w26, #0x1
  4114b4:	add	x8, x8, w9, sxtw
  4114b8:	str	x8, [x23]
  4114bc:	b.eq	4114ec <wcrtomb@plt+0xec7c>  // b.none
  4114c0:	ldr	x8, [x19, #296]
  4114c4:	mov	w9, #0x50                  	// #80
  4114c8:	madd	x9, x20, x9, x8
  4114cc:	ldr	x9, [x9, #72]
  4114d0:	tbnz	x9, #63, 4114f4 <wcrtomb@plt+0xec84>
  4114d4:	ldr	x10, [x19, #432]
  4114d8:	ldr	x10, [x10, x22, lsl #3]
  4114dc:	cbz	x10, 4115bc <wcrtomb@plt+0xed4c>
  4114e0:	ldr	x23, [x10, x9, lsl #3]
  4114e4:	tbz	x23, #63, 4117d4 <wcrtomb@plt+0xef64>
  4114e8:	b	4115e8 <wcrtomb@plt+0xed78>
  4114ec:	mov	x23, x22
  4114f0:	b	4117d4 <wcrtomb@plt+0xef64>
  4114f4:	ldr	x9, [x19, #440]
  4114f8:	cmp	x9, #0x400
  4114fc:	b.lt	41159c <wcrtomb@plt+0xed2c>  // b.tstop
  411500:	ldr	x8, [x19, #352]
  411504:	tbnz	x8, #63, 411534 <wcrtomb@plt+0xecc4>
  411508:	mov	x23, #0xffffffffffffffff    	// #-1
  41150c:	ldr	x8, [x19, #432]
  411510:	lsl	x24, x23, #3
  411514:	ldr	x0, [x8, x24]
  411518:	bl	402620 <free@plt>
  41151c:	ldr	x8, [x19, #432]
  411520:	add	x23, x23, #0x1
  411524:	str	xzr, [x8, x24]
  411528:	ldr	x8, [x19, #352]
  41152c:	cmp	x23, x8
  411530:	b.lt	41150c <wcrtomb@plt+0xec9c>  // b.tstop
  411534:	ldp	x8, x9, [x19, #296]
  411538:	cmp	x9, #0x1
  41153c:	b.lt	411594 <wcrtomb@plt+0xed24>  // b.tstop
  411540:	b.ne	41154c <wcrtomb@plt+0xecdc>  // b.any
  411544:	mov	x10, xzr
  411548:	b	411574 <wcrtomb@plt+0xed04>
  41154c:	and	x10, x9, #0xfffffffffffffffe
  411550:	add	x11, x8, #0x98
  411554:	mov	x12, #0xffffffffffffffff    	// #-1
  411558:	mov	x13, x10
  41155c:	stur	x12, [x11, #-80]
  411560:	str	x12, [x11], #160
  411564:	subs	x13, x13, #0x2
  411568:	b.ne	41155c <wcrtomb@plt+0xecec>  // b.any
  41156c:	cmp	x9, x10
  411570:	b.eq	411594 <wcrtomb@plt+0xed24>  // b.none
  411574:	mov	w11, #0x50                  	// #80
  411578:	madd	x11, x10, x11, x8
  41157c:	add	x11, x11, #0x48
  411580:	mov	x12, #0xffffffffffffffff    	// #-1
  411584:	add	x10, x10, #0x1
  411588:	cmp	x10, x9
  41158c:	str	x12, [x11], #80
  411590:	b.lt	411584 <wcrtomb@plt+0xed14>  // b.tstop
  411594:	mov	x9, xzr
  411598:	str	xzr, [x19, #440]
  41159c:	add	x10, x9, #0x1
  4115a0:	mov	w11, #0x50                  	// #80
  4115a4:	str	x10, [x19, #440]
  4115a8:	madd	x10, x20, x11, x8
  4115ac:	str	x9, [x10, #72]
  4115b0:	ldr	x10, [x19, #432]
  4115b4:	ldr	x10, [x10, x22, lsl #3]
  4115b8:	cbnz	x10, 4114e0 <wcrtomb@plt+0xec70>
  4115bc:	mov	w0, #0x2000                	// #8192
  4115c0:	bl	417290 <wcrtomb@plt+0x14a20>
  4115c4:	ldr	x8, [x19, #432]
  4115c8:	lsl	x9, x22, #3
  4115cc:	mov	w1, #0xff                  	// #255
  4115d0:	mov	w2, #0x2000                	// #8192
  4115d4:	str	x0, [x8, x9]
  4115d8:	ldr	x8, [x19, #432]
  4115dc:	ldr	x0, [x8, x9]
  4115e0:	bl	402470 <memset@plt>
  4115e4:	ldr	x8, [x19, #296]
  4115e8:	mov	w9, #0x50                  	// #80
  4115ec:	madd	x9, x20, x9, x8
  4115f0:	cmn	x22, #0x1
  4115f4:	add	x23, x9, #0x30
  4115f8:	b.eq	41161c <wcrtomb@plt+0xedac>  // b.none
  4115fc:	mov	w9, #0x50                  	// #80
  411600:	madd	x8, x22, x9, x8
  411604:	add	x1, x8, #0x8
  411608:	mov	w2, #0xffffffff            	// #-1
  41160c:	mov	x0, x23
  411610:	mov	x3, x21
  411614:	bl	4108ac <wcrtomb@plt+0xe03c>
  411618:	b	411710 <wcrtomb@plt+0xeea0>
  41161c:	mov	w9, #0x50                  	// #80
  411620:	madd	x24, x20, x9, x8
  411624:	ldr	x10, [x19, #424]
  411628:	ldr	x9, [x24, #56]!
  41162c:	cmp	x10, x9
  411630:	b.ge	4116f4 <wcrtomb@plt+0xee84>  // b.tcont
  411634:	ldr	x0, [x21]
  411638:	bl	402620 <free@plt>
  41163c:	ldr	x8, [x19, #424]
  411640:	ldr	x9, [x24]
  411644:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  411648:	adds	x10, x8, x8, asr #1
  41164c:	csel	x26, x11, x10, vs
  411650:	tbnz	x26, #63, 411668 <wcrtomb@plt+0xedf8>
  411654:	mov	x10, #0x7ffffffffffffff     	// #576460752303423487
  411658:	cmp	x26, x10
  41165c:	b.le	411680 <wcrtomb@plt+0xee10>
  411660:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  411664:	b	411690 <wcrtomb@plt+0xee20>
  411668:	cmn	x26, #0x1
  41166c:	b.eq	41168c <wcrtomb@plt+0xee1c>  // b.none
  411670:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  411674:	sdiv	x10, x10, x26
  411678:	cmp	x10, #0x10
  41167c:	b.lt	411660 <wcrtomb@plt+0xedf0>  // b.tstop
  411680:	lsl	x1, x26, #4
  411684:	cmp	x1, #0x7f
  411688:	b.gt	411698 <wcrtomb@plt+0xee28>
  41168c:	mov	w10, #0x80                  	// #128
  411690:	lsr	x26, x10, #4
  411694:	and	x1, x10, #0x7ffffffffffffff0
  411698:	cmp	x26, x9
  41169c:	str	xzr, [x19, #424]
  4116a0:	b.ge	4116e0 <wcrtomb@plt+0xee70>  // b.tcont
  4116a4:	sub	x9, x9, x8
  4116a8:	adds	x26, x8, x9
  4116ac:	b.vs	411818 <wcrtomb@plt+0xefa8>
  4116b0:	tbnz	x26, #63, 4116c4 <wcrtomb@plt+0xee54>
  4116b4:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4116b8:	cmp	x26, x8
  4116bc:	b.le	4116dc <wcrtomb@plt+0xee6c>
  4116c0:	b	411818 <wcrtomb@plt+0xefa8>
  4116c4:	cmn	x26, #0x1
  4116c8:	b.eq	4116dc <wcrtomb@plt+0xee6c>  // b.none
  4116cc:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4116d0:	sdiv	x8, x8, x26
  4116d4:	cmp	x8, #0x10
  4116d8:	b.lt	411818 <wcrtomb@plt+0xefa8>  // b.tstop
  4116dc:	lsl	x1, x26, #4
  4116e0:	mov	x0, xzr
  4116e4:	bl	417310 <wcrtomb@plt+0x14aa0>
  4116e8:	str	x26, [x19, #424]
  4116ec:	str	x0, [x21]
  4116f0:	ldr	x9, [x24]
  4116f4:	str	x9, [x25]
  4116f8:	ldr	x8, [x24]
  4116fc:	cbz	x8, 411714 <wcrtomb@plt+0xeea4>
  411700:	ldr	x0, [x21]
  411704:	ldr	x1, [x23]
  411708:	lsl	x2, x8, #4
  41170c:	bl	402210 <memcpy@plt>
  411710:	ldr	x9, [x25]
  411714:	cmp	x9, #0x1
  411718:	b.lt	411738 <wcrtomb@plt+0xeec8>  // b.tstop
  41171c:	ldr	x8, [x19, #344]
  411720:	ldr	x10, [x21]
  411724:	cmp	x9, #0x3
  411728:	b.cs	411740 <wcrtomb@plt+0xeed0>  // b.hs, b.nlast
  41172c:	mov	x11, xzr
  411730:	mov	w12, wzr
  411734:	b	411780 <wcrtomb@plt+0xef10>
  411738:	mov	w2, #0x7                   	// #7
  41173c:	b	4117a0 <wcrtomb@plt+0xef30>
  411740:	and	x11, x9, #0xfffffffffffffffe
  411744:	mov	w12, wzr
  411748:	mov	w13, wzr
  41174c:	add	x14, x10, #0x10
  411750:	mov	x15, x11
  411754:	ldur	x16, [x14, #-16]
  411758:	ldr	x17, [x14], #32
  41175c:	subs	x15, x15, #0x2
  411760:	ldr	w16, [x8, x16, lsl #2]
  411764:	ldr	w17, [x8, x17, lsl #2]
  411768:	orr	w12, w16, w12
  41176c:	orr	w13, w17, w13
  411770:	b.ne	411754 <wcrtomb@plt+0xeee4>  // b.any
  411774:	cmp	x9, x11
  411778:	orr	w12, w13, w12
  41177c:	b.eq	41179c <wcrtomb@plt+0xef2c>  // b.none
  411780:	sub	x9, x9, x11
  411784:	add	x10, x10, x11, lsl #4
  411788:	ldr	x11, [x10], #16
  41178c:	subs	x9, x9, #0x1
  411790:	ldr	w11, [x8, x11, lsl #2]
  411794:	orr	w12, w11, w12
  411798:	b.ne	411788 <wcrtomb@plt+0xef18>  // b.any
  41179c:	eor	w2, w12, #0x7
  4117a0:	mov	x0, x19
  4117a4:	mov	x1, x21
  4117a8:	bl	4103e0 <wcrtomb@plt+0xdb70>
  4117ac:	mov	x23, x0
  4117b0:	mov	x0, x19
  4117b4:	bl	411184 <wcrtomb@plt+0xe914>
  4117b8:	ldr	x9, [x19, #296]
  4117bc:	ldr	x8, [x19, #432]
  4117c0:	mov	w10, #0x50                  	// #80
  4117c4:	madd	x9, x20, x10, x9
  4117c8:	ldr	x8, [x8, x22, lsl #3]
  4117cc:	ldr	x9, [x9, #72]
  4117d0:	str	x23, [x8, x9, lsl #3]
  4117d4:	mov	x0, x23
  4117d8:	ldp	x20, x19, [sp, #96]
  4117dc:	ldp	x22, x21, [sp, #80]
  4117e0:	ldp	x24, x23, [sp, #64]
  4117e4:	ldp	x26, x25, [sp, #48]
  4117e8:	ldp	x28, x27, [sp, #32]
  4117ec:	ldp	x29, x30, [sp, #16]
  4117f0:	add	sp, sp, #0x70
  4117f4:	ret
  4117f8:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4117fc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  411800:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  411804:	add	x0, x0, #0x8b7
  411808:	add	x1, x1, #0x79e
  41180c:	add	x3, x3, #0x8e4
  411810:	mov	w2, #0xc93                 	// #3219
  411814:	bl	4027d0 <__assert_fail@plt>
  411818:	bl	41757c <wcrtomb@plt+0x14d0c>
  41181c:	sub	sp, sp, #0x160
  411820:	stp	x29, x30, [sp, #256]
  411824:	stp	x28, x27, [sp, #272]
  411828:	stp	x26, x25, [sp, #288]
  41182c:	stp	x24, x23, [sp, #304]
  411830:	stp	x22, x21, [sp, #320]
  411834:	stp	x20, x19, [sp, #336]
  411838:	ldr	x8, [x1, #296]
  41183c:	mov	w9, #0x50                  	// #80
  411840:	add	x29, sp, #0x100
  411844:	str	x2, [sp, #56]
  411848:	madd	x8, x0, x9, x8
  41184c:	ldrh	w8, [x8, #34]
  411850:	mov	w9, #0x178                 	// #376
  411854:	str	x0, [sp, #128]
  411858:	stur	x1, [x29, #-120]
  41185c:	cmp	w8, #0x0
  411860:	mov	w8, #0x170                 	// #368
  411864:	csel	x8, x8, x9, eq  // eq = none
  411868:	ldr	x19, [x1, x8]
  41186c:	ldr	x11, [x19, x0, lsl #3]
  411870:	cbnz	x11, 411a84 <wcrtomb@plt+0xf214>
  411874:	ldr	w8, [x1, #360]
  411878:	cmp	w8, #0x400
  41187c:	b.lt	4118dc <wcrtomb@plt+0xf06c>  // b.tstop
  411880:	ldrsw	x20, [x1, #364]
  411884:	ldr	x8, [x1, #352]
  411888:	cmp	x8, x20
  41188c:	b.le	4118d4 <wcrtomb@plt+0xf064>
  411890:	ldr	x8, [x1, #368]
  411894:	lsl	x21, x20, #3
  411898:	ldr	x0, [x8, x21]
  41189c:	bl	402620 <free@plt>
  4118a0:	ldur	x8, [x29, #-120]
  4118a4:	ldr	x8, [x8, #376]
  4118a8:	ldr	x0, [x8, x21]
  4118ac:	bl	402620 <free@plt>
  4118b0:	ldur	x1, [x29, #-120]
  4118b4:	add	x20, x20, #0x1
  4118b8:	ldr	x8, [x1, #376]
  4118bc:	str	xzr, [x8, x21]
  4118c0:	ldr	x8, [x1, #368]
  4118c4:	str	xzr, [x8, x21]
  4118c8:	ldr	x8, [x1, #352]
  4118cc:	cmp	x20, x8
  4118d0:	b.lt	411890 <wcrtomb@plt+0xf020>  // b.tstop
  4118d4:	mov	w8, wzr
  4118d8:	str	wzr, [x1, #360]
  4118dc:	add	w8, w8, #0x1
  4118e0:	mov	w0, #0x800                 	// #2048
  4118e4:	str	w8, [x1, #360]
  4118e8:	bl	417290 <wcrtomb@plt+0x14a20>
  4118ec:	ldur	x1, [x29, #-120]
  4118f0:	mov	x11, x0
  4118f4:	ldr	x0, [sp, #128]
  4118f8:	mov	x8, #0xfffffffffffffffe    	// #-2
  4118fc:	dup	v0.2d, x8
  411900:	str	x11, [x19, x0, lsl #3]
  411904:	stp	q0, q0, [x11]
  411908:	stp	q0, q0, [x11, #32]
  41190c:	stp	q0, q0, [x11, #64]
  411910:	stp	q0, q0, [x11, #96]
  411914:	stp	q0, q0, [x11, #128]
  411918:	stp	q0, q0, [x11, #160]
  41191c:	stp	q0, q0, [x11, #192]
  411920:	stp	q0, q0, [x11, #224]
  411924:	stp	q0, q0, [x11, #256]
  411928:	stp	q0, q0, [x11, #288]
  41192c:	stp	q0, q0, [x11, #320]
  411930:	stp	q0, q0, [x11, #352]
  411934:	stp	q0, q0, [x11, #384]
  411938:	stp	q0, q0, [x11, #416]
  41193c:	stp	q0, q0, [x11, #448]
  411940:	stp	q0, q0, [x11, #480]
  411944:	stp	q0, q0, [x11, #512]
  411948:	stp	q0, q0, [x11, #544]
  41194c:	stp	q0, q0, [x11, #576]
  411950:	stp	q0, q0, [x11, #608]
  411954:	stp	q0, q0, [x11, #640]
  411958:	stp	q0, q0, [x11, #672]
  41195c:	stp	q0, q0, [x11, #704]
  411960:	stp	q0, q0, [x11, #736]
  411964:	stp	q0, q0, [x11, #768]
  411968:	stp	q0, q0, [x11, #800]
  41196c:	stp	q0, q0, [x11, #832]
  411970:	stp	q0, q0, [x11, #864]
  411974:	stp	q0, q0, [x11, #896]
  411978:	stp	q0, q0, [x11, #928]
  41197c:	stp	q0, q0, [x11, #960]
  411980:	stp	q0, q0, [x11, #992]
  411984:	str	q0, [x11, #1024]
  411988:	str	q0, [x11, #1040]
  41198c:	str	q0, [x11, #1056]
  411990:	str	q0, [x11, #1072]
  411994:	str	q0, [x11, #1088]
  411998:	str	q0, [x11, #1104]
  41199c:	str	q0, [x11, #1120]
  4119a0:	str	q0, [x11, #1136]
  4119a4:	str	q0, [x11, #1152]
  4119a8:	str	q0, [x11, #1168]
  4119ac:	str	q0, [x11, #1184]
  4119b0:	str	q0, [x11, #1200]
  4119b4:	str	q0, [x11, #1216]
  4119b8:	str	q0, [x11, #1232]
  4119bc:	str	q0, [x11, #1248]
  4119c0:	str	q0, [x11, #1264]
  4119c4:	str	q0, [x11, #1280]
  4119c8:	str	q0, [x11, #1296]
  4119cc:	str	q0, [x11, #1312]
  4119d0:	str	q0, [x11, #1328]
  4119d4:	str	q0, [x11, #1344]
  4119d8:	str	q0, [x11, #1360]
  4119dc:	str	q0, [x11, #1376]
  4119e0:	str	q0, [x11, #1392]
  4119e4:	str	q0, [x11, #1408]
  4119e8:	str	q0, [x11, #1424]
  4119ec:	str	q0, [x11, #1440]
  4119f0:	str	q0, [x11, #1456]
  4119f4:	str	q0, [x11, #1472]
  4119f8:	str	q0, [x11, #1488]
  4119fc:	str	q0, [x11, #1504]
  411a00:	str	q0, [x11, #1520]
  411a04:	str	q0, [x11, #1536]
  411a08:	str	q0, [x11, #1552]
  411a0c:	str	q0, [x11, #1568]
  411a10:	str	q0, [x11, #1584]
  411a14:	str	q0, [x11, #1600]
  411a18:	str	q0, [x11, #1616]
  411a1c:	str	q0, [x11, #1632]
  411a20:	str	q0, [x11, #1648]
  411a24:	str	q0, [x11, #1664]
  411a28:	str	q0, [x11, #1680]
  411a2c:	str	q0, [x11, #1696]
  411a30:	str	q0, [x11, #1712]
  411a34:	str	q0, [x11, #1728]
  411a38:	str	q0, [x11, #1744]
  411a3c:	str	q0, [x11, #1760]
  411a40:	str	q0, [x11, #1776]
  411a44:	str	q0, [x11, #1792]
  411a48:	str	q0, [x11, #1808]
  411a4c:	str	q0, [x11, #1824]
  411a50:	str	q0, [x11, #1840]
  411a54:	str	q0, [x11, #1856]
  411a58:	str	q0, [x11, #1872]
  411a5c:	str	q0, [x11, #1888]
  411a60:	str	q0, [x11, #1904]
  411a64:	str	q0, [x11, #1920]
  411a68:	str	q0, [x11, #1936]
  411a6c:	str	q0, [x11, #1952]
  411a70:	str	q0, [x11, #1968]
  411a74:	str	q0, [x11, #1984]
  411a78:	str	q0, [x11, #2000]
  411a7c:	str	q0, [x11, #2016]
  411a80:	str	q0, [x11, #2032]
  411a84:	ldr	x8, [x1, #384]
  411a88:	mov	w9, #0x50                  	// #80
  411a8c:	strb	wzr, [x8, x0]
  411a90:	ldr	x8, [x1, #296]
  411a94:	madd	x9, x0, x9, x8
  411a98:	ldrb	w8, [x9, #32]
  411a9c:	ldrh	w9, [x9, #34]
  411aa0:	and	w10, w8, w9, lsr #6
  411aa4:	tst	w10, #0x7
  411aa8:	b.eq	411ad0 <wcrtomb@plt+0xf260>  // b.none
  411aac:	ldr	x8, [x1, #384]
  411ab0:	ldrb	w9, [x8, x0]
  411ab4:	orr	w9, w9, #0x4
  411ab8:	strb	w9, [x8, x0]
  411abc:	ldr	x8, [x1, #296]
  411ac0:	mov	w9, #0x50                  	// #80
  411ac4:	madd	x9, x0, x9, x8
  411ac8:	ldrb	w8, [x9, #32]
  411acc:	ldrh	w9, [x9, #34]
  411ad0:	and	w10, w8, w9, lsr #3
  411ad4:	tst	w10, #0x7
  411ad8:	b.eq	411b00 <wcrtomb@plt+0xf290>  // b.none
  411adc:	ldr	x8, [x1, #384]
  411ae0:	ldrb	w9, [x8, x0]
  411ae4:	orr	w9, w9, #0x2
  411ae8:	strb	w9, [x8, x0]
  411aec:	ldr	x8, [x1, #296]
  411af0:	mov	w9, #0x50                  	// #80
  411af4:	madd	x9, x0, x9, x8
  411af8:	ldrb	w8, [x9, #32]
  411afc:	ldrh	w9, [x9, #34]
  411b00:	and	w8, w9, w8
  411b04:	tst	w8, #0x7
  411b08:	str	x11, [sp, #40]
  411b0c:	b.eq	411b20 <wcrtomb@plt+0xf2b0>  // b.none
  411b10:	ldr	x8, [x1, #384]
  411b14:	ldrb	w9, [x8, x0]
  411b18:	orr	w9, w9, #0x1
  411b1c:	strb	w9, [x8, x0]
  411b20:	ldr	x22, [x1, #176]
  411b24:	lsr	x8, x22, #59
  411b28:	cbnz	x8, 412798 <wcrtomb@plt+0xff28>
  411b2c:	lsl	x0, x22, #4
  411b30:	mov	x19, x1
  411b34:	bl	417290 <wcrtomb@plt+0x14a20>
  411b38:	stur	x0, [x29, #-16]
  411b3c:	ldr	x8, [x19, #296]
  411b40:	ldr	x13, [sp, #128]
  411b44:	mov	w9, #0x50                  	// #80
  411b48:	mov	x24, x0
  411b4c:	mov	x14, x19
  411b50:	madd	x9, x13, x9, x8
  411b54:	ldr	x9, [x9, #16]
  411b58:	cmp	x9, #0x1
  411b5c:	b.lt	411d44 <wcrtomb@plt+0xf4d4>  // b.tstop
  411b60:	ldr	x9, [x14, #320]
  411b64:	mov	x11, xzr
  411b68:	mov	x25, xzr
  411b6c:	mov	w15, #0x50                  	// #80
  411b70:	mov	w23, #0x18                  	// #24
  411b74:	b	411b90 <wcrtomb@plt+0xf320>
  411b78:	madd	x10, x13, x15, x8
  411b7c:	ldr	x11, [sp, #120]
  411b80:	ldr	x10, [x10, #16]
  411b84:	add	x11, x11, #0x1
  411b88:	cmp	x11, x10
  411b8c:	b.ge	411d48 <wcrtomb@plt+0xf4d8>  // b.tcont
  411b90:	madd	x10, x13, x15, x8
  411b94:	ldr	x10, [x10, #8]
  411b98:	lsl	x28, x11, #4
  411b9c:	str	x11, [sp, #120]
  411ba0:	ldr	x10, [x10, x28]
  411ba4:	madd	x11, x10, x23, x9
  411ba8:	ldr	x11, [x11, #8]
  411bac:	cmp	x11, #0x1
  411bb0:	b.lt	411b78 <wcrtomb@plt+0xf308>  // b.tstop
  411bb4:	mov	x26, xzr
  411bb8:	b	411bf0 <wcrtomb@plt+0xf380>
  411bbc:	add	x8, x24, x21, lsl #4
  411bc0:	stp	x20, x19, [x8]
  411bc4:	ldr	x9, [x14, #320]
  411bc8:	ldr	x8, [x14, #296]
  411bcc:	add	x25, x25, #0x1
  411bd0:	madd	x10, x13, x15, x8
  411bd4:	ldr	x10, [x10, #8]
  411bd8:	add	x26, x26, #0x1
  411bdc:	ldr	x10, [x10, x28]
  411be0:	madd	x11, x10, x23, x9
  411be4:	ldr	x11, [x11, #8]
  411be8:	cmp	x26, x11
  411bec:	b.ge	411b78 <wcrtomb@plt+0xf308>  // b.tcont
  411bf0:	mul	x10, x10, x23
  411bf4:	ldr	x10, [x9, x10]
  411bf8:	cmp	x25, #0x1
  411bfc:	add	x10, x10, x26, lsl #4
  411c00:	ldp	x20, x19, [x10]
  411c04:	b.lt	411c54 <wcrtomb@plt+0xf3e4>  // b.tstop
  411c08:	mov	x21, xzr
  411c0c:	mov	x10, x25
  411c10:	b	411c20 <wcrtomb@plt+0xf3b0>
  411c14:	add	x21, x11, #0x1
  411c18:	cmp	x21, x10
  411c1c:	b.ge	411c58 <wcrtomb@plt+0xf3e8>  // b.tcont
  411c20:	add	x11, x10, x21
  411c24:	asr	x11, x11, #1
  411c28:	lsl	x12, x11, #4
  411c2c:	ldr	x12, [x24, x12]
  411c30:	cmp	x12, x20
  411c34:	b.lt	411c14 <wcrtomb@plt+0xf3a4>  // b.tstop
  411c38:	mov	x10, x11
  411c3c:	b.ne	411c18 <wcrtomb@plt+0xf3a8>  // b.any
  411c40:	add	x10, x24, x11, lsl #4
  411c44:	ldr	w11, [x10, #8]
  411c48:	orr	w11, w11, w19
  411c4c:	str	w11, [x10, #8]
  411c50:	b	411bd0 <wcrtomb@plt+0xf360>
  411c54:	mov	x21, xzr
  411c58:	cmp	x22, x25
  411c5c:	b.gt	411d10 <wcrtomb@plt+0xf4a0>
  411c60:	adds	x8, x22, x22, asr #1
  411c64:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  411c68:	csel	x27, x9, x8, vs
  411c6c:	tbnz	x27, #63, 411c84 <wcrtomb@plt+0xf414>
  411c70:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  411c74:	cmp	x27, x8
  411c78:	b.le	411c9c <wcrtomb@plt+0xf42c>
  411c7c:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  411c80:	b	411cac <wcrtomb@plt+0xf43c>
  411c84:	cmn	x27, #0x1
  411c88:	b.eq	411ca8 <wcrtomb@plt+0xf438>  // b.none
  411c8c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  411c90:	sdiv	x8, x8, x27
  411c94:	cmp	x8, #0x10
  411c98:	b.lt	411c7c <wcrtomb@plt+0xf40c>  // b.tstop
  411c9c:	lsl	x1, x27, #4
  411ca0:	cmp	x1, #0x7f
  411ca4:	b.gt	411cb4 <wcrtomb@plt+0xf444>
  411ca8:	mov	w8, #0x80                  	// #128
  411cac:	lsr	x27, x8, #4
  411cb0:	and	x1, x8, #0x7ffffffffffffff0
  411cb4:	cmp	x27, x22
  411cb8:	b.gt	411cf4 <wcrtomb@plt+0xf484>
  411cbc:	adds	x27, x22, #0x1
  411cc0:	b.vs	412798 <wcrtomb@plt+0xff28>
  411cc4:	tbnz	x27, #63, 411cd8 <wcrtomb@plt+0xf468>
  411cc8:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  411ccc:	cmp	x27, x8
  411cd0:	b.le	411cf0 <wcrtomb@plt+0xf480>
  411cd4:	b	412798 <wcrtomb@plt+0xff28>
  411cd8:	cmn	x27, #0x1
  411cdc:	b.eq	411cf0 <wcrtomb@plt+0xf480>  // b.none
  411ce0:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  411ce4:	sdiv	x8, x8, x27
  411ce8:	cmp	x8, #0x10
  411cec:	b.lt	412798 <wcrtomb@plt+0xff28>  // b.tstop
  411cf0:	lsl	x1, x27, #4
  411cf4:	mov	x0, x24
  411cf8:	bl	417310 <wcrtomb@plt+0x14aa0>
  411cfc:	ldr	x13, [sp, #128]
  411d00:	ldur	x14, [x29, #-120]
  411d04:	mov	x24, x0
  411d08:	mov	x22, x27
  411d0c:	mov	w15, #0x50                  	// #80
  411d10:	cmp	x25, x21
  411d14:	stur	x24, [x29, #-16]
  411d18:	b.le	411bbc <wcrtomb@plt+0xf34c>
  411d1c:	add	x8, x24, x25, lsl #4
  411d20:	mov	x9, x25
  411d24:	ldur	q0, [x8, #-16]
  411d28:	sub	x9, x9, #0x1
  411d2c:	sub	x10, x8, #0x10
  411d30:	cmp	x9, x21
  411d34:	str	q0, [x8]
  411d38:	mov	x8, x10
  411d3c:	b.gt	411d24 <wcrtomb@plt+0xf4b4>
  411d40:	b	411bbc <wcrtomb@plt+0xf34c>
  411d44:	mov	x25, xzr
  411d48:	ldr	x9, [x14, #176]
  411d4c:	lsr	x8, x9, #59
  411d50:	cbnz	x8, 412798 <wcrtomb@plt+0xff28>
  411d54:	lsl	x0, x9, #4
  411d58:	mov	x19, x9
  411d5c:	bl	417290 <wcrtomb@plt+0x14a20>
  411d60:	mov	x16, x19
  411d64:	movi	v0.2d, #0xffffffffffffffff
  411d68:	cmp	x25, #0x1
  411d6c:	mov	x28, xzr
  411d70:	stp	xzr, x19, [x29, #-32]
  411d74:	stur	x0, [x29, #-40]
  411d78:	stp	q0, q0, [x29, #-80]
  411d7c:	b.lt	412338 <wcrtomb@plt+0xfac8>  // b.tstop
  411d80:	ldr	x9, [sp, #56]
  411d84:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  411d88:	ldr	q0, [x8, #1856]
  411d8c:	ldr	x13, [sp, #128]
  411d90:	ldur	x14, [x29, #-120]
  411d94:	mov	w18, #0x1                   	// #1
  411d98:	mov	x22, xzr
  411d9c:	ubfx	x17, x9, #6, #2
  411da0:	and	x1, x9, #0xff
  411da4:	mov	x20, #0xffffffffffffffff    	// #-1
  411da8:	movi	v4.2d, #0x0
  411dac:	sub	x2, x29, #0x70
  411db0:	mov	w3, #0x50                  	// #80
  411db4:	lsl	x4, x18, x9
  411db8:	mov	x21, #0xffffffffffffffff    	// #-1
  411dbc:	mov	x15, #0xffffffffffffffff    	// #-1
  411dc0:	mov	x23, #0xffffffffffffffff    	// #-1
  411dc4:	str	q0, [sp]
  411dc8:	stp	x1, x17, [sp, #104]
  411dcc:	str	x4, [sp, #96]
  411dd0:	b	411df8 <wcrtomb@plt+0xf588>
  411dd4:	bic	x23, x23, x10
  411dd8:	bic	x15, x15, x8
  411ddc:	bic	x21, x21, x11
  411de0:	bic	x20, x20, x9
  411de4:	stp	x23, x15, [x29, #-80]
  411de8:	stp	x21, x20, [x29, #-64]
  411dec:	add	x22, x22, #0x1
  411df0:	cmp	x22, x25
  411df4:	b.eq	41234c <wcrtomb@plt+0xfadc>  // b.none
  411df8:	add	x8, x24, x22, lsl #4
  411dfc:	ldr	x9, [x14, #144]
  411e00:	ldp	x27, x26, [x8]
  411e04:	ldr	x8, [x9, x27, lsl #3]
  411e08:	cmp	x8, #0xff
  411e0c:	b.hi	411e38 <wcrtomb@plt+0xf5c8>  // b.pmore
  411e10:	lsr	x9, x8, #3
  411e14:	stp	q4, q4, [x29, #-112]
  411e18:	and	x9, x9, #0x1ffffffffffffff8
  411e1c:	ldr	x10, [x2, x9]
  411e20:	lsl	x11, x18, x8
  411e24:	cmp	x8, x1
  411e28:	cset	w5, eq  // eq = none
  411e2c:	orr	x8, x10, x11
  411e30:	str	x8, [x2, x9]
  411e34:	b	412100 <wcrtomb@plt+0xf890>
  411e38:	cmp	x8, #0x114
  411e3c:	b.lt	411e68 <wcrtomb@plt+0xf5f8>  // b.tstop
  411e40:	ldr	x9, [x14]
  411e44:	add	x8, x9, x8, lsl #5
  411e48:	mov	x9, #0xffffffffffffdd80    	// #-8832
  411e4c:	add	x8, x8, x9
  411e50:	ldp	q1, q0, [x8]
  411e54:	stp	q1, q0, [x29, #-112]
  411e58:	ldr	x8, [x2, x17, lsl #3]
  411e5c:	tst	x8, x4
  411e60:	cset	w5, ne  // ne = any
  411e64:	b	412100 <wcrtomb@plt+0xf890>
  411e68:	cmp	x8, #0x10a
  411e6c:	b.ne	411dec <wcrtomb@plt+0xf57c>  // b.any
  411e70:	ldr	x8, [x14]
  411e74:	ldr	x9, [x14, #24]
  411e78:	add	x8, x8, x9, lsl #5
  411e7c:	ldp	q1, q0, [x8]
  411e80:	stp	q1, q0, [x29, #-112]
  411e84:	ldr	x8, [x14, #296]
  411e88:	ldr	x9, [x2, x17, lsl #3]
  411e8c:	madd	x10, x13, x3, x8
  411e90:	ldrb	w10, [x10, #32]
  411e94:	tst	x9, x4
  411e98:	cset	w5, ne  // ne = any
  411e9c:	and	w9, w26, w10
  411ea0:	tst	w9, #0x7
  411ea4:	b.eq	412100 <wcrtomb@plt+0xf890>  // b.none
  411ea8:	stp	x23, x21, [sp, #64]
  411eac:	str	x20, [sp, #80]
  411eb0:	madd	x19, x13, x3, x8
  411eb4:	ldr	x21, [x19, #56]!
  411eb8:	str	x0, [sp, #88]
  411ebc:	cbnz	x21, 411f30 <wcrtomb@plt+0xf6c0>
  411ec0:	add	x9, x13, x13, lsl #2
  411ec4:	lsl	x20, x9, #4
  411ec8:	add	x8, x8, x20
  411ecc:	mov	w0, #0x10                  	// #16
  411ed0:	str	x8, [sp, #120]
  411ed4:	mov	x23, x15
  411ed8:	mov	x21, x28
  411edc:	mov	x28, x16
  411ee0:	str	w5, [sp, #52]
  411ee4:	bl	417290 <wcrtomb@plt+0x14a20>
  411ee8:	ldp	x17, x8, [sp, #112]
  411eec:	ldr	q0, [sp]
  411ef0:	ldur	x14, [x29, #-120]
  411ef4:	ldp	x4, x1, [sp, #96]
  411ef8:	str	x0, [x8, #48]
  411efc:	str	q0, [x19]
  411f00:	ldr	x8, [x14, #296]
  411f04:	ldr	w5, [sp, #52]
  411f08:	mov	x16, x28
  411f0c:	mov	x28, x21
  411f10:	add	x9, x8, x20
  411f14:	ldr	x13, [sp, #128]
  411f18:	ldr	x21, [x9, #56]
  411f1c:	mov	w3, #0x50                  	// #80
  411f20:	sub	x2, x29, #0x70
  411f24:	movi	v4.2d, #0x0
  411f28:	mov	w18, #0x1                   	// #1
  411f2c:	mov	x15, x23
  411f30:	madd	x12, x13, x3, x8
  411f34:	cmp	x21, #0x0
  411f38:	add	x23, x12, #0x30
  411f3c:	str	x28, [sp, #120]
  411f40:	b.le	411f94 <wcrtomb@plt+0xf724>
  411f44:	ldr	x0, [x23]
  411f48:	mov	x28, xzr
  411f4c:	mov	x9, x21
  411f50:	b	411f60 <wcrtomb@plt+0xf6f0>
  411f54:	add	x28, x10, #0x1
  411f58:	cmp	x28, x9
  411f5c:	b.ge	411f9c <wcrtomb@plt+0xf72c>  // b.tcont
  411f60:	add	x10, x9, x28
  411f64:	asr	x10, x10, #1
  411f68:	lsl	x11, x10, #4
  411f6c:	ldr	x11, [x0, x11]
  411f70:	cmp	x11, x27
  411f74:	b.lt	411f54 <wcrtomb@plt+0xf6e4>  // b.tstop
  411f78:	mov	x9, x10
  411f7c:	b.ne	411f58 <wcrtomb@plt+0xf6e8>  // b.any
  411f80:	add	x8, x0, x10, lsl #4
  411f84:	ldr	w9, [x8, #8]
  411f88:	orr	w9, w9, w26
  411f8c:	str	w9, [x8, #8]
  411f90:	b	4120f4 <wcrtomb@plt+0xf884>
  411f94:	ldr	x0, [x23]
  411f98:	mov	x28, xzr
  411f9c:	madd	x20, x13, x3, x8
  411fa0:	ldr	x8, [x20, #64]!
  411fa4:	cmp	x8, x21
  411fa8:	b.gt	4120ac <wcrtomb@plt+0xf83c>
  411fac:	adds	x9, x8, x8, asr #1
  411fb0:	mov	x10, #0x7fffffffffffffff    	// #9223372036854775807
  411fb4:	csel	x19, x10, x9, vs
  411fb8:	str	x15, [sp, #32]
  411fbc:	tbnz	x19, #63, 411ff4 <wcrtomb@plt+0xf784>
  411fc0:	mov	x9, #0x7ffffffffffffff     	// #576460752303423487
  411fc4:	cmp	x19, x9
  411fc8:	b.le	41200c <wcrtomb@plt+0xf79c>
  411fcc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  411fd0:	lsr	x19, x9, #4
  411fd4:	and	x1, x9, #0x7ffffffffffffff0
  411fd8:	cbnz	x0, 412030 <wcrtomb@plt+0xf7c0>
  411fdc:	str	xzr, [x20]
  411fe0:	cmp	x19, x8
  411fe4:	stp	x12, x16, [sp, #16]
  411fe8:	str	w5, [sp, #52]
  411fec:	b.gt	412078 <wcrtomb@plt+0xf808>
  411ff0:	b	412040 <wcrtomb@plt+0xf7d0>
  411ff4:	cmn	x19, #0x1
  411ff8:	b.eq	412018 <wcrtomb@plt+0xf7a8>  // b.none
  411ffc:	mov	x9, #0x8000000000000000    	// #-9223372036854775808
  412000:	sdiv	x9, x9, x19
  412004:	cmp	x9, #0x10
  412008:	b.lt	411fcc <wcrtomb@plt+0xf75c>  // b.tstop
  41200c:	lsl	x1, x19, #4
  412010:	cmp	x1, #0x7f
  412014:	b.gt	41202c <wcrtomb@plt+0xf7bc>
  412018:	mov	w9, #0x80                  	// #128
  41201c:	lsr	x19, x9, #4
  412020:	and	x1, x9, #0x7ffffffffffffff0
  412024:	cbnz	x0, 412030 <wcrtomb@plt+0xf7c0>
  412028:	b	411fdc <wcrtomb@plt+0xf76c>
  41202c:	cbz	x0, 411fdc <wcrtomb@plt+0xf76c>
  412030:	cmp	x19, x8
  412034:	stp	x12, x16, [sp, #16]
  412038:	str	w5, [sp, #52]
  41203c:	b.gt	412078 <wcrtomb@plt+0xf808>
  412040:	adds	x19, x8, #0x1
  412044:	b.vs	412798 <wcrtomb@plt+0xff28>
  412048:	tbnz	x19, #63, 41205c <wcrtomb@plt+0xf7ec>
  41204c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412050:	cmp	x19, x8
  412054:	b.le	412074 <wcrtomb@plt+0xf804>
  412058:	b	412798 <wcrtomb@plt+0xff28>
  41205c:	cmn	x19, #0x1
  412060:	b.eq	412074 <wcrtomb@plt+0xf804>  // b.none
  412064:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412068:	sdiv	x8, x8, x19
  41206c:	cmp	x8, #0x10
  412070:	b.lt	412798 <wcrtomb@plt+0xff28>  // b.tstop
  412074:	lsl	x1, x19, #4
  412078:	bl	417310 <wcrtomb@plt+0x14aa0>
  41207c:	str	x19, [x20]
  412080:	ldr	x13, [sp, #128]
  412084:	ldur	x14, [x29, #-120]
  412088:	ldp	x16, x15, [sp, #24]
  41208c:	ldp	x1, x17, [sp, #104]
  412090:	ldr	x4, [sp, #96]
  412094:	ldr	w5, [sp, #52]
  412098:	ldr	x12, [sp, #16]
  41209c:	mov	w18, #0x1                   	// #1
  4120a0:	movi	v4.2d, #0x0
  4120a4:	sub	x2, x29, #0x70
  4120a8:	mov	w3, #0x50                  	// #80
  4120ac:	add	x8, x12, #0x38
  4120b0:	cmp	x21, x28
  4120b4:	str	x0, [x23]
  4120b8:	b.le	4120e0 <wcrtomb@plt+0xf870>
  4120bc:	lsl	x9, x21, #4
  4120c0:	add	x10, x0, x9
  4120c4:	ldur	q0, [x10, #-16]
  4120c8:	sub	x21, x21, #0x1
  4120cc:	cmp	x21, x28
  4120d0:	sub	x9, x9, #0x10
  4120d4:	str	q0, [x10]
  4120d8:	ldr	x0, [x23]
  4120dc:	b.gt	4120c0 <wcrtomb@plt+0xf850>
  4120e0:	add	x9, x0, x28, lsl #4
  4120e4:	stp	x27, x26, [x9]
  4120e8:	ldr	x9, [x8]
  4120ec:	add	x9, x9, #0x1
  4120f0:	str	x9, [x8]
  4120f4:	ldp	x20, x0, [sp, #80]
  4120f8:	ldr	x28, [sp, #120]
  4120fc:	ldp	x23, x21, [sp, #64]
  412100:	cmp	w26, #0x1ff
  412104:	b.ne	412118 <wcrtomb@plt+0xf8a8>  // b.any
  412108:	ldp	x10, x8, [x29, #-112]
  41210c:	ldp	x11, x9, [x29, #-96]
  412110:	cbz	w5, 411dd4 <wcrtomb@plt+0xf564>
  412114:	b	412208 <wcrtomb@plt+0xf998>
  412118:	ldr	x8, [x14, #296]
  41211c:	lsr	w9, w26, #3
  412120:	madd	x8, x13, x3, x8
  412124:	ldrb	w8, [x8, #32]
  412128:	and	w8, w8, #0x7
  41212c:	tst	w8, w26, lsr #6
  412130:	b.eq	412160 <wcrtomb@plt+0xf8f0>  // b.none
  412134:	tst	w9, w8
  412138:	b.eq	412184 <wcrtomb@plt+0xf914>  // b.none
  41213c:	tst	w8, w26
  412140:	b.eq	4121a8 <wcrtomb@plt+0xf938>  // b.none
  412144:	ldp	x10, x8, [x29, #-112]
  412148:	ldp	x11, x9, [x29, #-96]
  41214c:	orr	x12, x8, x10
  412150:	orr	x12, x12, x11
  412154:	orr	x12, x12, x9
  412158:	cbnz	x12, 4121f4 <wcrtomb@plt+0xf984>
  41215c:	b	411dec <wcrtomb@plt+0xf57c>
  412160:	ldr	q0, [x14, #1008]
  412164:	ldp	q1, q2, [x29, #-112]
  412168:	bic	v0.16b, v1.16b, v0.16b
  41216c:	stur	q0, [x29, #-112]
  412170:	ldr	q0, [x14, #1024]
  412174:	bic	v0.16b, v2.16b, v0.16b
  412178:	stur	q0, [x29, #-96]
  41217c:	tst	w9, w8
  412180:	b.ne	41213c <wcrtomb@plt+0xf8cc>  // b.any
  412184:	ldr	q0, [x14, #976]
  412188:	ldp	q1, q2, [x29, #-112]
  41218c:	bic	v0.16b, v1.16b, v0.16b
  412190:	stur	q0, [x29, #-112]
  412194:	ldr	q0, [x14, #992]
  412198:	bic	v0.16b, v2.16b, v0.16b
  41219c:	stur	q0, [x29, #-96]
  4121a0:	tst	w8, w26
  4121a4:	b.ne	412144 <wcrtomb@plt+0xf8d4>  // b.any
  4121a8:	ldr	q0, [x14, #976]
  4121ac:	ldr	q1, [x14, #1008]
  4121b0:	ldp	q2, q3, [x29, #-112]
  4121b4:	orr	v0.16b, v1.16b, v0.16b
  4121b8:	and	v0.16b, v2.16b, v0.16b
  4121bc:	stur	q0, [x29, #-112]
  4121c0:	ldr	q1, [x14, #992]
  4121c4:	ldr	q2, [x14, #1024]
  4121c8:	mov	x8, v0.d[1]
  4121cc:	fmov	x10, d0
  4121d0:	orr	v0.16b, v2.16b, v1.16b
  4121d4:	and	v0.16b, v3.16b, v0.16b
  4121d8:	mov	x9, v0.d[1]
  4121dc:	fmov	x11, d0
  4121e0:	stur	q0, [x29, #-96]
  4121e4:	orr	x12, x8, x10
  4121e8:	orr	x12, x12, x11
  4121ec:	orr	x12, x12, x9
  4121f0:	cbz	x12, 411dec <wcrtomb@plt+0xf57c>
  4121f4:	ldr	x12, [x2, x17, lsl #3]
  4121f8:	tst	x12, x4
  4121fc:	cset	w12, ne  // ne = any
  412200:	and	w12, w5, w12
  412204:	tbz	w12, #0, 411dd4 <wcrtomb@plt+0xf564>
  412208:	and	x23, x23, x10
  41220c:	and	x15, x15, x8
  412210:	and	x21, x21, x11
  412214:	and	x20, x20, x9
  412218:	cmp	x16, x28
  41221c:	stp	x23, x15, [x29, #-80]
  412220:	stp	x21, x20, [x29, #-64]
  412224:	b.gt	412320 <wcrtomb@plt+0xfab0>
  412228:	adds	x8, x16, x16, asr #1
  41222c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412230:	str	x28, [sp, #120]
  412234:	mov	x28, x23
  412238:	mov	x23, x15
  41223c:	csel	x19, x9, x8, vs
  412240:	tbnz	x19, #63, 412270 <wcrtomb@plt+0xfa00>
  412244:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  412248:	cmp	x19, x8
  41224c:	b.le	412288 <wcrtomb@plt+0xfa18>
  412250:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412254:	lsr	x19, x8, #4
  412258:	and	x1, x8, #0x7ffffffffffffff0
  41225c:	cbnz	x0, 4122ac <wcrtomb@plt+0xfa3c>
  412260:	stur	xzr, [x29, #-24]
  412264:	cmp	x19, x16
  412268:	b.gt	4122ec <wcrtomb@plt+0xfa7c>
  41226c:	b	4122b4 <wcrtomb@plt+0xfa44>
  412270:	cmn	x19, #0x1
  412274:	b.eq	412294 <wcrtomb@plt+0xfa24>  // b.none
  412278:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  41227c:	sdiv	x8, x8, x19
  412280:	cmp	x8, #0x10
  412284:	b.lt	412250 <wcrtomb@plt+0xf9e0>  // b.tstop
  412288:	lsl	x1, x19, #4
  41228c:	cmp	x1, #0x7f
  412290:	b.gt	4122a8 <wcrtomb@plt+0xfa38>
  412294:	mov	w8, #0x80                  	// #128
  412298:	lsr	x19, x8, #4
  41229c:	and	x1, x8, #0x7ffffffffffffff0
  4122a0:	cbnz	x0, 4122ac <wcrtomb@plt+0xfa3c>
  4122a4:	b	412260 <wcrtomb@plt+0xf9f0>
  4122a8:	cbz	x0, 412260 <wcrtomb@plt+0xf9f0>
  4122ac:	cmp	x19, x16
  4122b0:	b.gt	4122ec <wcrtomb@plt+0xfa7c>
  4122b4:	adds	x19, x16, #0x1
  4122b8:	b.vs	412798 <wcrtomb@plt+0xff28>
  4122bc:	tbnz	x19, #63, 4122d0 <wcrtomb@plt+0xfa60>
  4122c0:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4122c4:	cmp	x19, x8
  4122c8:	b.le	4122e8 <wcrtomb@plt+0xfa78>
  4122cc:	b	412798 <wcrtomb@plt+0xff28>
  4122d0:	cmn	x19, #0x1
  4122d4:	b.eq	4122e8 <wcrtomb@plt+0xfa78>  // b.none
  4122d8:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4122dc:	sdiv	x8, x8, x19
  4122e0:	cmp	x8, #0x10
  4122e4:	b.lt	412798 <wcrtomb@plt+0xff28>  // b.tstop
  4122e8:	lsl	x1, x19, #4
  4122ec:	bl	417310 <wcrtomb@plt+0x14aa0>
  4122f0:	ldur	x14, [x29, #-120]
  4122f4:	mov	x15, x23
  4122f8:	mov	x23, x28
  4122fc:	ldp	x28, x13, [sp, #120]
  412300:	ldp	x1, x17, [sp, #104]
  412304:	ldr	x4, [sp, #96]
  412308:	mov	x16, x19
  41230c:	mov	w18, #0x1                   	// #1
  412310:	movi	v4.2d, #0x0
  412314:	sub	x2, x29, #0x70
  412318:	mov	w3, #0x50                  	// #80
  41231c:	stur	x19, [x29, #-24]
  412320:	add	x9, x28, #0x1
  412324:	add	x8, x0, x28, lsl #4
  412328:	mov	x28, x9
  41232c:	stp	x0, x9, [x29, #-40]
  412330:	stp	x27, x26, [x8]
  412334:	b	411dec <wcrtomb@plt+0xf57c>
  412338:	ldur	x14, [x29, #-120]
  41233c:	mov	x20, #0xffffffffffffffff    	// #-1
  412340:	mov	x21, #0xffffffffffffffff    	// #-1
  412344:	mov	x15, #0xffffffffffffffff    	// #-1
  412348:	mov	x23, #0xffffffffffffffff    	// #-1
  41234c:	ldr	x19, [x14, #176]
  412350:	lsr	x8, x19, #59
  412354:	cbnz	x8, 412798 <wcrtomb@plt+0xff28>
  412358:	mov	x27, x0
  41235c:	lsl	x0, x19, #4
  412360:	mov	x26, x16
  412364:	mov	x25, x15
  412368:	mov	x24, x21
  41236c:	mov	x22, x20
  412370:	mov	x20, x14
  412374:	bl	417290 <wcrtomb@plt+0x14a20>
  412378:	stp	xzr, x19, [x29, #-104]
  41237c:	stur	x0, [x29, #-112]
  412380:	ldrb	w8, [x20, #328]
  412384:	ldr	x21, [sp, #40]
  412388:	cmp	x28, #0x0
  41238c:	mov	x0, x20
  412390:	b.le	41242c <wcrtomb@plt+0xfbbc>
  412394:	mov	x14, x25
  412398:	cbz	w8, 412500 <wcrtomb@plt+0xfc90>
  41239c:	ldrb	w8, [x0, #1048]
  4123a0:	cmp	w8, #0x1
  4123a4:	cset	w9, ne  // ne = any
  4123a8:	cbz	w8, 4123d4 <wcrtomb@plt+0xfb64>
  4123ac:	ldr	x8, [x0, #280]
  4123b0:	mov	w10, #0x1                   	// #1
  4123b4:	mov	x11, x27
  4123b8:	ldr	x9, [x11], #16
  4123bc:	ldrb	w12, [x8, x9]
  4123c0:	and	w9, w12, #0x1
  4123c4:	tbz	w12, #0, 4123d4 <wcrtomb@plt+0xfb64>
  4123c8:	cmp	x10, x28
  4123cc:	add	x10, x10, #0x1
  4123d0:	b.lt	4123b8 <wcrtomb@plt+0xfb48>  // b.tstop
  4123d4:	cbz	w9, 412500 <wcrtomb@plt+0xfc90>
  4123d8:	ldr	x8, [x0, #296]
  4123dc:	sub	x1, x29, #0x28
  4123e0:	sub	x3, x29, #0x70
  4123e4:	mov	w2, #0xffffffff            	// #-1
  4123e8:	add	x0, x8, #0x8
  4123ec:	bl	4108ac <wcrtomb@plt+0xe03c>
  4123f0:	ldur	x28, [x29, #-104]
  4123f4:	mov	x0, x27
  4123f8:	mov	x8, x26
  4123fc:	subs	x20, x28, x26
  412400:	b.le	4124d8 <wcrtomb@plt+0xfc68>
  412404:	bl	402620 <free@plt>
  412408:	adds	x8, x26, x26, asr #1
  41240c:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  412410:	csel	x19, x9, x8, vs
  412414:	tbnz	x19, #63, 412454 <wcrtomb@plt+0xfbe4>
  412418:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  41241c:	cmp	x19, x8
  412420:	b.le	41246c <wcrtomb@plt+0xfbfc>
  412424:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  412428:	b	41247c <wcrtomb@plt+0xfc0c>
  41242c:	cbz	w8, 412444 <wcrtomb@plt+0xfbd4>
  412430:	ldrsw	x8, [x0, #364]
  412434:	ldr	x24, [x0, #400]
  412438:	mov	x25, xzr
  41243c:	sub	x26, x8, #0x1
  412440:	b	4126b0 <wcrtomb@plt+0xfe40>
  412444:	mov	x26, #0xffffffffffffffff    	// #-1
  412448:	mov	x25, #0xffffffffffffffff    	// #-1
  41244c:	mov	x24, #0xffffffffffffffff    	// #-1
  412450:	b	4126b0 <wcrtomb@plt+0xfe40>
  412454:	cmn	x19, #0x1
  412458:	b.eq	412478 <wcrtomb@plt+0xfc08>  // b.none
  41245c:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  412460:	sdiv	x8, x8, x19
  412464:	cmp	x8, #0x10
  412468:	b.lt	412424 <wcrtomb@plt+0xfbb4>  // b.tstop
  41246c:	lsl	x1, x19, #4
  412470:	cmp	x1, #0x7f
  412474:	b.gt	412484 <wcrtomb@plt+0xfc14>
  412478:	mov	w8, #0x80                  	// #128
  41247c:	lsr	x19, x8, #4
  412480:	and	x1, x8, #0x7ffffffffffffff0
  412484:	cmp	x19, x28
  412488:	stur	xzr, [x29, #-24]
  41248c:	b.ge	4124c8 <wcrtomb@plt+0xfc58>  // b.tcont
  412490:	adds	x19, x26, x20
  412494:	b.vs	412798 <wcrtomb@plt+0xff28>
  412498:	tbnz	x19, #63, 4124ac <wcrtomb@plt+0xfc3c>
  41249c:	mov	x8, #0x7ffffffffffffff     	// #576460752303423487
  4124a0:	cmp	x19, x8
  4124a4:	b.le	4124c4 <wcrtomb@plt+0xfc54>
  4124a8:	b	412798 <wcrtomb@plt+0xff28>
  4124ac:	cmn	x19, #0x1
  4124b0:	b.eq	4124c4 <wcrtomb@plt+0xfc54>  // b.none
  4124b4:	mov	x8, #0x8000000000000000    	// #-9223372036854775808
  4124b8:	sdiv	x8, x8, x19
  4124bc:	cmp	x8, #0x10
  4124c0:	b.lt	412798 <wcrtomb@plt+0xff28>  // b.tstop
  4124c4:	lsl	x1, x19, #4
  4124c8:	mov	x0, xzr
  4124cc:	bl	417310 <wcrtomb@plt+0x14aa0>
  4124d0:	stur	x19, [x29, #-24]
  4124d4:	stur	x0, [x29, #-40]
  4124d8:	stur	x28, [x29, #-32]
  4124dc:	cbz	x28, 4124f4 <wcrtomb@plt+0xfc84>
  4124e0:	ldur	x1, [x29, #-112]
  4124e4:	lsl	x2, x28, #4
  4124e8:	mov	x27, x0
  4124ec:	bl	402210 <memcpy@plt>
  4124f0:	b	4124f8 <wcrtomb@plt+0xfc88>
  4124f4:	mov	x27, x0
  4124f8:	ldur	x0, [x29, #-120]
  4124fc:	mov	x14, x25
  412500:	ldr	x8, [x0, #1008]
  412504:	ldr	x9, [x0, #976]
  412508:	mov	w10, #0x2                   	// #2
  41250c:	ldr	x11, [x0, #1016]
  412510:	tst	x8, x23
  412514:	cset	w12, ne  // ne = any
  412518:	orr	x8, x9, x8
  41251c:	tst	x9, x23
  412520:	bfi	w10, w12, #2, #1
  412524:	lsl	w12, w12, #2
  412528:	csel	w10, w12, w10, eq  // eq = none
  41252c:	bics	xzr, x23, x8
  412530:	ldr	x9, [x0, #984]
  412534:	cset	w13, ne  // ne = any
  412538:	orr	w10, w10, w13
  41253c:	tst	x11, x14
  412540:	orr	w13, w10, #0x4
  412544:	csel	w10, w10, w13, eq  // eq = none
  412548:	ldr	x12, [x0, #1024]
  41254c:	orr	x11, x9, x11
  412550:	tst	x9, x14
  412554:	orr	w9, w10, #0x2
  412558:	csel	w9, w10, w9, eq  // eq = none
  41255c:	bics	xzr, x14, x11
  412560:	ldr	x8, [x0, #992]
  412564:	cset	w14, ne  // ne = any
  412568:	orr	w9, w9, w14
  41256c:	tst	x12, x24
  412570:	orr	w14, w9, #0x4
  412574:	csel	w9, w9, w14, eq  // eq = none
  412578:	ldr	x13, [x0, #1032]
  41257c:	orr	x11, x8, x12
  412580:	tst	x8, x24
  412584:	orr	w8, w9, #0x2
  412588:	csel	w8, w9, w8, eq  // eq = none
  41258c:	bics	xzr, x24, x11
  412590:	ldr	x10, [x0, #1000]
  412594:	cset	w9, ne  // ne = any
  412598:	orr	w8, w8, w9
  41259c:	tst	x13, x22
  4125a0:	orr	w9, w8, #0x4
  4125a4:	csel	w8, w8, w9, eq  // eq = none
  4125a8:	orr	x12, x10, x13
  4125ac:	tst	x10, x22
  4125b0:	orr	w9, w8, #0x2
  4125b4:	csel	w8, w8, w9, eq  // eq = none
  4125b8:	bics	xzr, x22, x12
  4125bc:	cset	w9, ne  // ne = any
  4125c0:	cmp	x28, #0x1
  4125c4:	orr	w19, w8, w9
  4125c8:	b.lt	4125e4 <wcrtomb@plt+0xfd74>  // b.tstop
  4125cc:	ldr	x8, [x0, #344]
  4125d0:	cmp	x28, #0x3
  4125d4:	b.cs	4125ec <wcrtomb@plt+0xfd7c>  // b.hs, b.nlast
  4125d8:	mov	x9, xzr
  4125dc:	mov	w20, wzr
  4125e0:	b	41262c <wcrtomb@plt+0xfdbc>
  4125e4:	mov	w20, wzr
  4125e8:	b	412648 <wcrtomb@plt+0xfdd8>
  4125ec:	and	x9, x28, #0xfffffffffffffffe
  4125f0:	mov	w10, wzr
  4125f4:	mov	w11, wzr
  4125f8:	add	x12, x27, #0x10
  4125fc:	mov	x13, x9
  412600:	ldur	x14, [x12, #-16]
  412604:	ldr	x15, [x12], #32
  412608:	subs	x13, x13, #0x2
  41260c:	ldr	w14, [x8, x14, lsl #2]
  412610:	ldr	w15, [x8, x15, lsl #2]
  412614:	orr	w10, w14, w10
  412618:	orr	w11, w15, w11
  41261c:	b.ne	412600 <wcrtomb@plt+0xfd90>  // b.any
  412620:	cmp	x28, x9
  412624:	orr	w20, w11, w10
  412628:	b.eq	412648 <wcrtomb@plt+0xfdd8>  // b.none
  41262c:	sub	x10, x28, x9
  412630:	add	x9, x27, x9, lsl #4
  412634:	ldr	x11, [x9], #16
  412638:	subs	x10, x10, #0x1
  41263c:	ldr	w11, [x8, x11, lsl #2]
  412640:	orr	w20, w11, w20
  412644:	b.ne	412634 <wcrtomb@plt+0xfdc4>  // b.any
  412648:	bics	wzr, w19, w20
  41264c:	b.eq	412784 <wcrtomb@plt+0xff14>  // b.none
  412650:	eor	w2, w20, #0x7
  412654:	sub	x1, x29, #0x28
  412658:	bl	4103e0 <wcrtomb@plt+0xdb70>
  41265c:	mov	x24, x0
  412660:	and	w19, w20, w19
  412664:	mov	x25, x24
  412668:	tbz	w19, #2, 412680 <wcrtomb@plt+0xfe10>
  41266c:	ldur	x0, [x29, #-120]
  412670:	sub	x1, x29, #0x28
  412674:	mov	w2, #0x4                   	// #4
  412678:	bl	4103e0 <wcrtomb@plt+0xdb70>
  41267c:	mov	x25, x0
  412680:	ldur	x8, [x29, #-120]
  412684:	mov	x26, x24
  412688:	tbz	w19, #1, 4126a4 <wcrtomb@plt+0xfe34>
  41268c:	sub	x1, x29, #0x28
  412690:	mov	w2, #0x2                   	// #2
  412694:	mov	x0, x8
  412698:	bl	4103e0 <wcrtomb@plt+0xdb70>
  41269c:	ldur	x8, [x29, #-120]
  4126a0:	mov	x26, x0
  4126a4:	mov	x0, x8
  4126a8:	bl	411184 <wcrtomb@plt+0xe914>
  4126ac:	ldur	x0, [x29, #-120]
  4126b0:	mov	x8, xzr
  4126b4:	add	x9, x0, #0x1cc
  4126b8:	sub	x10, x29, #0x50
  4126bc:	b	4126d0 <wcrtomb@plt+0xfe60>
  4126c0:	str	x11, [x21, x8, lsl #3]
  4126c4:	add	x8, x8, #0x1
  4126c8:	cmp	x8, #0x100
  4126cc:	b.eq	412704 <wcrtomb@plt+0xfe94>  // b.none
  4126d0:	ubfx	x11, x8, #6, #26
  4126d4:	ldr	x11, [x10, x11, lsl #3]
  4126d8:	lsr	x11, x11, x8
  4126dc:	tbz	w11, #0, 4126c4 <wcrtomb@plt+0xfe54>
  4126e0:	ldrb	w12, [x9, x8]
  4126e4:	mov	x11, x25
  4126e8:	cmp	w12, #0x4
  4126ec:	b.eq	4126c0 <wcrtomb@plt+0xfe50>  // b.none
  4126f0:	cmp	w12, #0x2
  4126f4:	mov	x11, x26
  4126f8:	b.eq	4126c0 <wcrtomb@plt+0xfe50>  // b.none
  4126fc:	mov	x11, x24
  412700:	b	4126c0 <wcrtomb@plt+0xfe50>
  412704:	mov	x0, x27
  412708:	bl	402620 <free@plt>
  41270c:	ldur	x0, [x29, #-16]
  412710:	bl	402620 <free@plt>
  412714:	ldur	x0, [x29, #-112]
  412718:	bl	402620 <free@plt>
  41271c:	ldur	x11, [x29, #-120]
  412720:	sub	x10, x29, #0x50
  412724:	ldrb	w8, [x11, #459]
  412728:	lsr	x9, x8, #3
  41272c:	and	x9, x9, #0x18
  412730:	ldr	x9, [x10, x9]
  412734:	lsr	x9, x9, x8
  412738:	tbz	w9, #0, 412758 <wcrtomb@plt+0xfee8>
  41273c:	lsl	x8, x8, #3
  412740:	ldr	x9, [x11, #392]
  412744:	ldr	x10, [x21, x8]
  412748:	ldr	x12, [sp, #128]
  41274c:	mov	x11, #0xffffffffffffffff    	// #-1
  412750:	str	x10, [x9, x12, lsl #3]
  412754:	str	x11, [x21, x8]
  412758:	ldr	x8, [sp, #56]
  41275c:	ldp	x20, x19, [sp, #336]
  412760:	ldp	x24, x23, [sp, #304]
  412764:	ldp	x26, x25, [sp, #288]
  412768:	and	x8, x8, #0xff
  41276c:	ldr	x0, [x21, x8, lsl #3]
  412770:	ldp	x22, x21, [sp, #320]
  412774:	ldp	x28, x27, [sp, #272]
  412778:	ldp	x29, x30, [sp, #256]
  41277c:	add	sp, sp, #0x160
  412780:	ret
  412784:	mov	x24, #0xffffffffffffffff    	// #-1
  412788:	and	w19, w20, w19
  41278c:	mov	x25, x24
  412790:	tbnz	w19, #2, 41266c <wcrtomb@plt+0xfdfc>
  412794:	b	412680 <wcrtomb@plt+0xfe10>
  412798:	bl	41757c <wcrtomb@plt+0x14d0c>
  41279c:	sub	sp, sp, #0x40
  4127a0:	stp	x29, x30, [sp, #32]
  4127a4:	stp	x20, x19, [sp, #48]
  4127a8:	add	x29, sp, #0x20
  4127ac:	mov	x19, x0
  4127b0:	bl	402630 <__ctype_get_mb_cur_max@plt>
  4127b4:	cmp	x0, #0x1
  4127b8:	cset	w8, hi  // hi = pmore
  4127bc:	strb	w8, [x19]
  4127c0:	b.hi	4127f8 <wcrtomb@plt+0xff88>  // b.pmore
  4127c4:	mov	w20, #0x1                   	// #1
  4127c8:	cmp	w20, #0x100
  4127cc:	b.eq	412800 <wcrtomb@plt+0xff90>  // b.none
  4127d0:	sub	w8, w20, #0x1
  4127d4:	add	x0, sp, #0x10
  4127d8:	sub	x1, x29, #0x4
  4127dc:	strb	wzr, [sp, #17]
  4127e0:	sturb	w20, [x29, #-4]
  4127e4:	strb	w8, [sp, #16]
  4127e8:	sturb	wzr, [x29, #-3]
  4127ec:	bl	402760 <strcoll@plt>
  4127f0:	add	w20, w20, #0x1
  4127f4:	tbnz	w0, #31, 4127c8 <wcrtomb@plt+0xff58>
  4127f8:	mov	w8, wzr
  4127fc:	b	412804 <wcrtomb@plt+0xff94>
  412800:	mov	w8, #0x1                   	// #1
  412804:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  412808:	add	x1, x1, #0x95e
  41280c:	sub	x0, x29, #0x4
  412810:	add	x3, sp, #0x10
  412814:	mov	w2, #0x2                   	// #2
  412818:	strb	w8, [x19, #1]
  41281c:	str	xzr, [sp, #16]
  412820:	bl	419da4 <wcrtomb@plt+0x17534>
  412824:	ldur	w8, [x29, #-4]
  412828:	cmp	x0, #0x2
  41282c:	cset	w9, eq  // eq = none
  412830:	mov	x20, xzr
  412834:	cmp	w8, #0x100
  412838:	cset	w8, eq  // eq = none
  41283c:	and	w8, w9, w8
  412840:	strb	w8, [x19, #2]
  412844:	add	x19, x19, #0x104
  412848:	sub	x0, x29, #0x4
  41284c:	add	x1, sp, #0xc
  412850:	add	x3, sp, #0x10
  412854:	mov	w2, #0x1                   	// #1
  412858:	strb	w20, [sp, #12]
  41285c:	str	xzr, [sp, #16]
  412860:	bl	419da4 <wcrtomb@plt+0x17534>
  412864:	add	x8, x19, x20
  412868:	cmp	x0, #0x2
  41286c:	sub	x8, x8, #0x101
  412870:	csinc	w9, w0, wzr, cs  // cs = hs, nlast
  412874:	strb	w9, [x8]
  412878:	ldur	w8, [x29, #-4]
  41287c:	csinv	w8, w8, wzr, cc  // cc = lo, ul, last
  412880:	str	w8, [x19, x20, lsl #2]
  412884:	add	x20, x20, #0x1
  412888:	cmp	x20, #0x100
  41288c:	b.ne	412848 <wcrtomb@plt+0xffd8>  // b.any
  412890:	ldp	x20, x19, [sp, #48]
  412894:	ldp	x29, x30, [sp, #32]
  412898:	add	sp, sp, #0x40
  41289c:	ret
  4128a0:	stp	x29, x30, [sp, #-80]!
  4128a4:	stp	x26, x25, [sp, #16]
  4128a8:	stp	x24, x23, [sp, #32]
  4128ac:	stp	x22, x21, [sp, #48]
  4128b0:	stp	x20, x19, [sp, #64]
  4128b4:	mov	x29, sp
  4128b8:	mov	x19, x1
  4128bc:	mov	w20, w0
  4128c0:	bl	402780 <towupper@plt>
  4128c4:	mov	w21, w0
  4128c8:	bl	402810 <towlower@plt>
  4128cc:	cmp	w21, w20
  4128d0:	mov	w22, w0
  4128d4:	b.ne	4128e8 <wcrtomb@plt+0x10078>  // b.any
  4128d8:	mov	w23, wzr
  4128dc:	cmp	w22, w21
  4128e0:	b.ne	4128f8 <wcrtomb@plt+0x10088>  // b.any
  4128e4:	b	41291c <wcrtomb@plt+0x100ac>
  4128e8:	mov	w23, #0x1                   	// #1
  4128ec:	str	w21, [x19]
  4128f0:	cmp	w22, w21
  4128f4:	b.eq	41291c <wcrtomb@plt+0x100ac>  // b.none
  4128f8:	cmp	w22, w20
  4128fc:	b.eq	41291c <wcrtomb@plt+0x100ac>  // b.none
  412900:	mov	w0, w22
  412904:	bl	402780 <towupper@plt>
  412908:	cmp	w0, w21
  41290c:	b.ne	41291c <wcrtomb@plt+0x100ac>  // b.any
  412910:	add	w8, w23, #0x1
  412914:	str	w22, [x19, w23, uxtw #2]
  412918:	mov	w23, w8
  41291c:	adrp	x26, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  412920:	mov	x25, xzr
  412924:	add	x26, x26, #0x938
  412928:	b	412938 <wcrtomb@plt+0x100c8>
  41292c:	add	x25, x25, #0x2
  412930:	cmp	x25, #0x26
  412934:	b.eq	412974 <wcrtomb@plt+0x10104>  // b.none
  412938:	ldrsh	w24, [x26, x25]
  41293c:	cmp	w24, w20
  412940:	b.eq	41292c <wcrtomb@plt+0x100bc>  // b.none
  412944:	cmp	w22, w24
  412948:	b.eq	41292c <wcrtomb@plt+0x100bc>  // b.none
  41294c:	cmp	w21, w24
  412950:	b.eq	41292c <wcrtomb@plt+0x100bc>  // b.none
  412954:	mov	w0, w24
  412958:	bl	402780 <towupper@plt>
  41295c:	cmp	w0, w21
  412960:	b.ne	41292c <wcrtomb@plt+0x100bc>  // b.any
  412964:	add	w8, w23, #0x1
  412968:	str	w24, [x19, w23, sxtw #2]
  41296c:	mov	w23, w8
  412970:	b	41292c <wcrtomb@plt+0x100bc>
  412974:	mov	w0, w23
  412978:	ldp	x20, x19, [sp, #64]
  41297c:	ldp	x22, x21, [sp, #48]
  412980:	ldp	x24, x23, [sp, #32]
  412984:	ldp	x26, x25, [sp, #16]
  412988:	ldp	x29, x30, [sp], #80
  41298c:	ret
  412990:	stp	x29, x30, [sp, #-32]!
  412994:	str	x19, [sp, #16]
  412998:	mov	x29, sp
  41299c:	mov	x19, x0
  4129a0:	bl	42aaa4 <_obstack_memory_used@@Base+0x10910>
  4129a4:	ldrb	w8, [x0]
  4129a8:	cmp	w8, #0x0
  4129ac:	csel	x19, x19, x0, eq  // eq = none
  4129b0:	mov	x0, x19
  4129b4:	bl	42ab04 <_obstack_memory_used@@Base+0x10970>
  4129b8:	ldrb	w8, [x19, x0]
  4129bc:	strb	wzr, [x19, x0]
  4129c0:	ldr	x19, [sp, #16]
  4129c4:	cmp	w8, #0x0
  4129c8:	cset	w0, ne  // ne = any
  4129cc:	ldp	x29, x30, [sp], #32
  4129d0:	ret
  4129d4:	stp	x29, x30, [sp, #-32]!
  4129d8:	stp	x20, x19, [sp, #16]
  4129dc:	mov	x20, x0
  4129e0:	mov	w0, #0x10                  	// #16
  4129e4:	mov	x29, sp
  4129e8:	mov	x19, x1
  4129ec:	bl	417290 <wcrtomb@plt+0x14a20>
  4129f0:	ldr	x8, [x20, #8]
  4129f4:	stp	x8, x19, [x0]
  4129f8:	str	x0, [x20, #8]
  4129fc:	ldp	x20, x19, [sp, #16]
  412a00:	ldp	x29, x30, [sp], #32
  412a04:	ret
  412a08:	tbnz	w1, #5, 412ab4 <wcrtomb@plt+0x10244>
  412a0c:	tbz	w1, #27, 412a64 <wcrtomb@plt+0x101f4>
  412a10:	mov	x9, #0x1                   	// #1
  412a14:	mov	x10, #0x470000000000        	// #78065325572096
  412a18:	mov	w8, #0x1                   	// #1
  412a1c:	movk	x9, #0x5, lsl #32
  412a20:	movk	x10, #0x8000, lsl #48
  412a24:	ldrb	w11, [x0], #1
  412a28:	cmp	w11, #0x3f
  412a2c:	b.hi	412a40 <wcrtomb@plt+0x101d0>  // b.pmore
  412a30:	lsl	x12, x8, x11
  412a34:	tst	x12, x10
  412a38:	b.ne	412bd8 <wcrtomb@plt+0x10368>  // b.any
  412a3c:	cbz	x11, 412be0 <wcrtomb@plt+0x10370>
  412a40:	sub	w11, w11, #0x5b
  412a44:	cmp	w11, #0x22
  412a48:	b.hi	412a24 <wcrtomb@plt+0x101b4>  // b.pmore
  412a4c:	lsl	x11, x8, x11
  412a50:	tst	x11, x9
  412a54:	b.eq	412a24 <wcrtomb@plt+0x101b4>  // b.none
  412a58:	b	412bd8 <wcrtomb@plt+0x10368>
  412a5c:	mov	w8, wzr
  412a60:	add	x0, x0, x8
  412a64:	ldrb	w8, [x0], #1
  412a68:	cmp	w8, #0x5a
  412a6c:	b.le	412a90 <wcrtomb@plt+0x10220>
  412a70:	cmp	w8, #0x5c
  412a74:	b.ne	412aa8 <wcrtomb@plt+0x10238>  // b.any
  412a78:	tbnz	w1, #1, 412a5c <wcrtomb@plt+0x101ec>
  412a7c:	ldrb	w8, [x0]
  412a80:	cmp	w8, #0x0
  412a84:	cset	w8, ne  // ne = any
  412a88:	add	x0, x0, x8
  412a8c:	b	412a64 <wcrtomb@plt+0x101f4>
  412a90:	cbz	w8, 412be0 <wcrtomb@plt+0x10370>
  412a94:	cmp	w8, #0x2a
  412a98:	b.eq	412bd8 <wcrtomb@plt+0x10368>  // b.none
  412a9c:	cmp	w8, #0x3f
  412aa0:	b.ne	412a64 <wcrtomb@plt+0x101f4>  // b.any
  412aa4:	b	412bd8 <wcrtomb@plt+0x10368>
  412aa8:	cmp	w8, #0x5b
  412aac:	b.ne	412a64 <wcrtomb@plt+0x101f4>  // b.any
  412ab0:	b	412bd8 <wcrtomb@plt+0x10368>
  412ab4:	tbnz	w1, #27, 412b30 <wcrtomb@plt+0x102c0>
  412ab8:	tbnz	w1, #1, 412b7c <wcrtomb@plt+0x1030c>
  412abc:	mov	x10, #0x200                 	// #512
  412ac0:	mov	w9, #0x401                 	// #1025
  412ac4:	movk	x10, #0x4000, lsl #16
  412ac8:	mov	w8, #0x1                   	// #1
  412acc:	movk	w9, #0x8000, lsl #16
  412ad0:	movk	x10, #0x400, lsl #48
  412ad4:	b	412af0 <wcrtomb@plt+0x10280>
  412ad8:	cmp	x12, #0x3b
  412adc:	b.eq	412b1c <wcrtomb@plt+0x102ac>  // b.none
  412ae0:	lsl	x12, x8, x12
  412ae4:	tst	x12, x10
  412ae8:	b.ne	412bd8 <wcrtomb@plt+0x10368>  // b.any
  412aec:	cbz	w11, 412be0 <wcrtomb@plt+0x10370>
  412af0:	ldrb	w11, [x0], #1
  412af4:	sub	w12, w11, #0x21
  412af8:	cmp	w12, #0x3b
  412afc:	b.hi	412aec <wcrtomb@plt+0x1027c>  // b.pmore
  412b00:	lsl	x13, x8, x12
  412b04:	tst	x13, x9
  412b08:	b.eq	412ad8 <wcrtomb@plt+0x10268>  // b.none
  412b0c:	ldrb	w11, [x0]
  412b10:	cmp	w11, #0x28
  412b14:	b.ne	412af0 <wcrtomb@plt+0x10280>  // b.any
  412b18:	b	412bd8 <wcrtomb@plt+0x10368>
  412b1c:	mov	x11, x0
  412b20:	ldrb	w12, [x11], #1
  412b24:	cmp	w12, #0x0
  412b28:	csel	x0, x0, x11, eq  // eq = none
  412b2c:	b	412af0 <wcrtomb@plt+0x10280>
  412b30:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  412b34:	add	x8, x0, #0x1
  412b38:	add	x9, x9, #0x961
  412b3c:	mov	w0, #0x1                   	// #1
  412b40:	b	412b4c <wcrtomb@plt+0x102dc>
  412b44:	cbz	w11, 412be0 <wcrtomb@plt+0x10370>
  412b48:	add	x8, x8, #0x1
  412b4c:	ldurb	w11, [x8, #-1]
  412b50:	sub	w10, w11, #0x21
  412b54:	cmp	w10, #0x5c
  412b58:	b.hi	412b44 <wcrtomb@plt+0x102d4>  // b.pmore
  412b5c:	adr	x11, 412b48 <wcrtomb@plt+0x102d8>
  412b60:	ldrb	w12, [x9, x10]
  412b64:	add	x11, x11, x12, lsl #2
  412b68:	br	x11
  412b6c:	ldrb	w10, [x8]
  412b70:	cmp	w10, #0x28
  412b74:	b.ne	412b48 <wcrtomb@plt+0x102d8>  // b.any
  412b78:	b	412bd8 <wcrtomb@plt+0x10368>
  412b7c:	mov	x11, #0x200                 	// #512
  412b80:	mov	w10, #0x401                 	// #1025
  412b84:	movk	x11, #0x4000, lsl #16
  412b88:	add	x8, x0, #0x1
  412b8c:	mov	w9, #0x1                   	// #1
  412b90:	movk	w10, #0x8000, lsl #16
  412b94:	movk	x11, #0x400, lsl #48
  412b98:	b	412bb0 <wcrtomb@plt+0x10340>
  412b9c:	lsl	x13, x9, x13
  412ba0:	tst	x13, x11
  412ba4:	b.ne	412bd8 <wcrtomb@plt+0x10368>  // b.any
  412ba8:	cbz	w12, 412be0 <wcrtomb@plt+0x10370>
  412bac:	add	x8, x8, #0x1
  412bb0:	ldurb	w12, [x8, #-1]
  412bb4:	sub	w13, w12, #0x21
  412bb8:	cmp	w13, #0x3a
  412bbc:	b.hi	412ba8 <wcrtomb@plt+0x10338>  // b.pmore
  412bc0:	lsl	x14, x9, x13
  412bc4:	tst	x14, x10
  412bc8:	b.eq	412b9c <wcrtomb@plt+0x1032c>  // b.none
  412bcc:	ldrb	w12, [x8]
  412bd0:	cmp	w12, #0x28
  412bd4:	b.ne	412bac <wcrtomb@plt+0x1033c>  // b.any
  412bd8:	mov	w0, #0x1                   	// #1
  412bdc:	ret
  412be0:	mov	w0, wzr
  412be4:	ret
  412be8:	mov	w0, #0x10                  	// #16
  412bec:	b	4174b0 <wcrtomb@plt+0x14c40>
  412bf0:	stp	x29, x30, [sp, #-64]!
  412bf4:	stp	x22, x21, [sp, #32]
  412bf8:	stp	x20, x19, [sp, #48]
  412bfc:	ldr	x21, [x0]
  412c00:	mov	x19, x0
  412c04:	str	x23, [sp, #16]
  412c08:	mov	x29, sp
  412c0c:	cbnz	x21, 412c5c <wcrtomb@plt+0x103ec>
  412c10:	ldr	x20, [x19, #8]
  412c14:	cbz	x20, 412c30 <wcrtomb@plt+0x103c0>
  412c18:	ldp	x21, x0, [x20]
  412c1c:	bl	402620 <free@plt>
  412c20:	mov	x0, x20
  412c24:	bl	402620 <free@plt>
  412c28:	mov	x20, x21
  412c2c:	cbnz	x21, 412c18 <wcrtomb@plt+0x103a8>
  412c30:	mov	x0, x19
  412c34:	ldp	x20, x19, [sp, #48]
  412c38:	ldp	x22, x21, [sp, #32]
  412c3c:	ldr	x23, [sp, #16]
  412c40:	ldp	x29, x30, [sp], #64
  412c44:	b	402620 <free@plt>
  412c48:	ldr	x0, [x20, #16]
  412c4c:	bl	413f4c <wcrtomb@plt+0x116dc>
  412c50:	mov	x0, x20
  412c54:	bl	402620 <free@plt>
  412c58:	cbz	x21, 412c10 <wcrtomb@plt+0x103a0>
  412c5c:	mov	x20, x21
  412c60:	ldr	w8, [x21, #8]
  412c64:	ldr	x21, [x21]
  412c68:	cbz	w8, 412c48 <wcrtomb@plt+0x103d8>
  412c6c:	cmp	w8, #0x1
  412c70:	b.ne	412c50 <wcrtomb@plt+0x103e0>  // b.any
  412c74:	ldr	x8, [x20, #32]
  412c78:	ldr	x0, [x20, #16]
  412c7c:	cbz	x8, 412cbc <wcrtomb@plt+0x1044c>
  412c80:	mov	x22, xzr
  412c84:	mov	x23, xzr
  412c88:	b	412c9c <wcrtomb@plt+0x1042c>
  412c8c:	add	x23, x23, #0x1
  412c90:	cmp	x23, x8
  412c94:	add	x22, x22, #0x48
  412c98:	b.cs	412cbc <wcrtomb@plt+0x1044c>  // b.hs, b.nlast
  412c9c:	add	x9, x0, x22
  412ca0:	ldrb	w10, [x9, #3]
  412ca4:	tbz	w10, #3, 412c8c <wcrtomb@plt+0x1041c>
  412ca8:	add	x0, x9, #0x8
  412cac:	bl	41bf40 <_obstack_memory_used@@Base+0x1dac>
  412cb0:	ldr	x8, [x20, #32]
  412cb4:	ldr	x0, [x20, #16]
  412cb8:	b	412c8c <wcrtomb@plt+0x1041c>
  412cbc:	bl	402620 <free@plt>
  412cc0:	b	412c50 <wcrtomb@plt+0x103e0>
  412cc4:	stp	x29, x30, [sp, #-48]!
  412cc8:	adrp	x8, 402000 <mbrtowc@plt-0x200>
  412ccc:	adrp	x9, 412000 <wcrtomb@plt+0xf790>
  412cd0:	add	x8, x8, #0x660
  412cd4:	add	x9, x9, #0xd68
  412cd8:	tst	w2, #0x10000000
  412cdc:	stp	x22, x21, [sp, #16]
  412ce0:	csel	x22, x9, x8, eq  // eq = none
  412ce4:	stp	x20, x19, [sp, #32]
  412ce8:	mov	x29, sp
  412cec:	mov	w19, w2
  412cf0:	mov	x21, x1
  412cf4:	mov	x20, x0
  412cf8:	blr	x22
  412cfc:	cmp	w0, #0x0
  412d00:	cset	w8, eq  // eq = none
  412d04:	tbnz	w19, #30, 412d54 <wcrtomb@plt+0x104e4>
  412d08:	ldrb	w9, [x21]
  412d0c:	cbz	w9, 412d54 <wcrtomb@plt+0x104e4>
  412d10:	cbz	w0, 412d54 <wcrtomb@plt+0x104e4>
  412d14:	add	x21, x21, #0x1
  412d18:	and	w9, w9, #0xff
  412d1c:	cmp	w9, #0x2f
  412d20:	b.ne	412d48 <wcrtomb@plt+0x104d8>  // b.any
  412d24:	ldrb	w9, [x21]
  412d28:	cmp	w9, #0x2f
  412d2c:	b.eq	412d48 <wcrtomb@plt+0x104d8>  // b.none
  412d30:	mov	x0, x20
  412d34:	mov	x1, x21
  412d38:	mov	w2, w19
  412d3c:	blr	x22
  412d40:	cmp	w0, #0x0
  412d44:	cset	w8, eq  // eq = none
  412d48:	ldrb	w9, [x21], #1
  412d4c:	cbz	w9, 412d54 <wcrtomb@plt+0x104e4>
  412d50:	tbz	w8, #0, 412d18 <wcrtomb@plt+0x104a8>
  412d54:	ldp	x20, x19, [sp, #32]
  412d58:	ldp	x22, x21, [sp, #16]
  412d5c:	and	w0, w8, #0x1
  412d60:	ldp	x29, x30, [sp], #48
  412d64:	ret
  412d68:	stp	x29, x30, [sp, #-64]!
  412d6c:	stp	x20, x19, [sp, #48]
  412d70:	mov	x20, x1
  412d74:	mov	x19, x0
  412d78:	str	x23, [sp, #16]
  412d7c:	stp	x22, x21, [sp, #32]
  412d80:	mov	x29, sp
  412d84:	tbnz	w2, #3, 412da8 <wcrtomb@plt+0x10538>
  412d88:	mov	x0, x19
  412d8c:	mov	x1, x20
  412d90:	tbz	w2, #4, 412e18 <wcrtomb@plt+0x105a8>
  412d94:	ldp	x20, x19, [sp, #48]
  412d98:	ldp	x22, x21, [sp, #32]
  412d9c:	ldr	x23, [sp, #16]
  412da0:	ldp	x29, x30, [sp], #64
  412da4:	b	4149ac <wcrtomb@plt+0x1213c>
  412da8:	tbz	w2, #4, 412e2c <wcrtomb@plt+0x105bc>
  412dac:	mov	x0, x20
  412db0:	bl	41753c <wcrtomb@plt+0x14ccc>
  412db4:	mov	w1, #0x2f                  	// #47
  412db8:	mov	x20, x0
  412dbc:	mov	w23, #0x2f                  	// #47
  412dc0:	bl	402640 <strchr@plt>
  412dc4:	cbz	x0, 412dfc <wcrtomb@plt+0x1058c>
  412dc8:	mov	x22, x0
  412dcc:	mov	x0, x19
  412dd0:	mov	x1, x20
  412dd4:	strb	wzr, [x22]
  412dd8:	bl	4149ac <wcrtomb@plt+0x1213c>
  412ddc:	cmp	w0, #0x1
  412de0:	b.lt	412e08 <wcrtomb@plt+0x10598>  // b.tstop
  412de4:	strb	w23, [x22], #1
  412de8:	mov	w1, #0x2f                  	// #47
  412dec:	mov	x0, x22
  412df0:	bl	402640 <strchr@plt>
  412df4:	mov	x22, x0
  412df8:	cbnz	x0, 412dcc <wcrtomb@plt+0x1055c>
  412dfc:	mov	x0, x19
  412e00:	mov	x1, x20
  412e04:	bl	4149ac <wcrtomb@plt+0x1213c>
  412e08:	mov	w21, w0
  412e0c:	mov	x0, x20
  412e10:	bl	402620 <free@plt>
  412e14:	b	412e5c <wcrtomb@plt+0x105ec>
  412e18:	ldp	x20, x19, [sp, #48]
  412e1c:	ldp	x22, x21, [sp, #32]
  412e20:	ldr	x23, [sp, #16]
  412e24:	ldp	x29, x30, [sp], #64
  412e28:	b	402600 <strcmp@plt>
  412e2c:	mov	x0, x19
  412e30:	bl	402270 <strlen@plt>
  412e34:	mov	x22, x0
  412e38:	mov	x0, x19
  412e3c:	mov	x1, x20
  412e40:	mov	x2, x22
  412e44:	bl	402420 <strncmp@plt>
  412e48:	mov	w21, w0
  412e4c:	cbnz	w0, 412e5c <wcrtomb@plt+0x105ec>
  412e50:	ldrb	w8, [x20, x22]
  412e54:	cmp	w8, #0x2f
  412e58:	csel	w21, wzr, w8, eq  // eq = none
  412e5c:	mov	w0, w21
  412e60:	ldp	x20, x19, [sp, #48]
  412e64:	ldp	x22, x21, [sp, #32]
  412e68:	ldr	x23, [sp, #16]
  412e6c:	ldp	x29, x30, [sp], #64
  412e70:	ret
  412e74:	sub	sp, sp, #0x70
  412e78:	stp	x29, x30, [sp, #16]
  412e7c:	stp	x28, x27, [sp, #32]
  412e80:	stp	x26, x25, [sp, #48]
  412e84:	stp	x24, x23, [sp, #64]
  412e88:	stp	x22, x21, [sp, #80]
  412e8c:	stp	x20, x19, [sp, #96]
  412e90:	ldr	x8, [x0]
  412e94:	add	x29, sp, #0x10
  412e98:	cbz	x8, 412eb4 <wcrtomb@plt+0x10644>
  412e9c:	mov	x20, x1
  412ea0:	mov	x19, xzr
  412ea4:	add	x9, x1, #0x1
  412ea8:	mov	w23, #0x48                  	// #72
  412eac:	str	x9, [sp, #8]
  412eb0:	b	412ee0 <wcrtomb@plt+0x10670>
  412eb4:	mov	w0, wzr
  412eb8:	b	4130f0 <wcrtomb@plt+0x10880>
  412ebc:	mov	x0, x19
  412ec0:	mov	x1, x20
  412ec4:	bl	402690 <strcpy@plt>
  412ec8:	mov	x0, x21
  412ecc:	mov	x1, x19
  412ed0:	bl	413998 <wcrtomb@plt+0x11128>
  412ed4:	cbnz	x0, 4130d0 <wcrtomb@plt+0x10860>
  412ed8:	ldr	x8, [x24]
  412edc:	cbz	x8, 413110 <wcrtomb@plt+0x108a0>
  412ee0:	mov	x24, x8
  412ee4:	ldr	w8, [x8, #8]
  412ee8:	cbz	w8, 412fc0 <wcrtomb@plt+0x10750>
  412eec:	ldr	x25, [x24, #32]
  412ef0:	cbz	x25, 412ed8 <wcrtomb@plt+0x10668>
  412ef4:	ldr	x27, [x24, #16]
  412ef8:	mov	x28, xzr
  412efc:	b	412f24 <wcrtomb@plt+0x106b4>
  412f00:	mov	x1, x20
  412f04:	mov	x2, xzr
  412f08:	mov	x3, xzr
  412f0c:	mov	w4, wzr
  412f10:	bl	41c150 <_obstack_memory_used@@Base+0x1fbc>
  412f14:	cbz	w0, 4130d0 <wcrtomb@plt+0x10860>
  412f18:	add	x28, x28, #0x1
  412f1c:	cmp	x28, x25
  412f20:	b.eq	412ed8 <wcrtomb@plt+0x10668>  // b.none
  412f24:	madd	x0, x28, x23, x27
  412f28:	ldr	w21, [x0], #8
  412f2c:	tbnz	w21, #27, 412f00 <wcrtomb@plt+0x10690>
  412f30:	ldr	x22, [x0]
  412f34:	adrp	x8, 402000 <mbrtowc@plt-0x200>
  412f38:	adrp	x9, 412000 <wcrtomb@plt+0xf790>
  412f3c:	tst	w21, #0x10000000
  412f40:	add	x8, x8, #0x660
  412f44:	add	x9, x9, #0xd68
  412f48:	csel	x26, x9, x8, eq  // eq = none
  412f4c:	mov	x0, x22
  412f50:	mov	x1, x20
  412f54:	mov	w2, w21
  412f58:	blr	x26
  412f5c:	cmp	w0, #0x0
  412f60:	cset	w8, eq  // eq = none
  412f64:	tbnz	w21, #30, 412fb4 <wcrtomb@plt+0x10744>
  412f68:	ldrb	w9, [x20]
  412f6c:	cbz	w9, 412fb4 <wcrtomb@plt+0x10744>
  412f70:	cbz	w0, 412fb4 <wcrtomb@plt+0x10744>
  412f74:	ldr	x23, [sp, #8]
  412f78:	and	w9, w9, #0xff
  412f7c:	cmp	w9, #0x2f
  412f80:	b.ne	412fa8 <wcrtomb@plt+0x10738>  // b.any
  412f84:	ldrb	w9, [x23]
  412f88:	cmp	w9, #0x2f
  412f8c:	b.eq	412fa8 <wcrtomb@plt+0x10738>  // b.none
  412f90:	mov	x0, x22
  412f94:	mov	x1, x23
  412f98:	mov	w2, w21
  412f9c:	blr	x26
  412fa0:	cmp	w0, #0x0
  412fa4:	cset	w8, eq  // eq = none
  412fa8:	ldrb	w9, [x23], #1
  412fac:	cbz	w9, 412fb4 <wcrtomb@plt+0x10744>
  412fb0:	tbz	w8, #0, 412f78 <wcrtomb@plt+0x10708>
  412fb4:	mov	w23, #0x48                  	// #72
  412fb8:	tbz	w8, #0, 412f18 <wcrtomb@plt+0x106a8>
  412fbc:	b	4130d0 <wcrtomb@plt+0x10860>
  412fc0:	cbz	x19, 41300c <wcrtomb@plt+0x1079c>
  412fc4:	ldr	w8, [x24, #12]
  412fc8:	ldr	x21, [x24, #16]
  412fcc:	tbnz	w8, #3, 41302c <wcrtomb@plt+0x107bc>
  412fd0:	tbnz	w8, #30, 412ebc <wcrtomb@plt+0x1064c>
  412fd4:	mov	x22, x20
  412fd8:	mov	x0, x19
  412fdc:	mov	x1, x22
  412fe0:	bl	402690 <strcpy@plt>
  412fe4:	mov	x0, x21
  412fe8:	mov	x1, x19
  412fec:	bl	413998 <wcrtomb@plt+0x11128>
  412ff0:	cbnz	x0, 4130d0 <wcrtomb@plt+0x10860>
  412ff4:	mov	w1, #0x2f                  	// #47
  412ff8:	mov	x0, x22
  412ffc:	bl	402640 <strchr@plt>
  413000:	add	x22, x0, #0x1
  413004:	cbnz	x0, 412fd8 <wcrtomb@plt+0x10768>
  413008:	b	412ed8 <wcrtomb@plt+0x10668>
  41300c:	mov	x0, x20
  413010:	bl	402270 <strlen@plt>
  413014:	add	x0, x0, #0x1
  413018:	bl	417290 <wcrtomb@plt+0x14a20>
  41301c:	mov	x19, x0
  413020:	ldr	w8, [x24, #12]
  413024:	ldr	x21, [x24, #16]
  413028:	tbz	w8, #3, 412fd0 <wcrtomb@plt+0x10760>
  41302c:	tbnz	w8, #30, 413090 <wcrtomb@plt+0x10820>
  413030:	mov	x22, x20
  413034:	mov	x0, x19
  413038:	mov	x1, x22
  41303c:	bl	402690 <strcpy@plt>
  413040:	mov	x0, x21
  413044:	mov	x1, x19
  413048:	bl	413998 <wcrtomb@plt+0x11128>
  41304c:	cbnz	x0, 4130d0 <wcrtomb@plt+0x10860>
  413050:	mov	w1, #0x2f                  	// #47
  413054:	mov	x0, x19
  413058:	bl	402510 <strrchr@plt>
  41305c:	cbz	x0, 413078 <wcrtomb@plt+0x10808>
  413060:	strb	wzr, [x0]
  413064:	mov	x0, x21
  413068:	mov	x1, x19
  41306c:	bl	413998 <wcrtomb@plt+0x11128>
  413070:	cbz	x0, 413050 <wcrtomb@plt+0x107e0>
  413074:	b	4130d0 <wcrtomb@plt+0x10860>
  413078:	mov	w1, #0x2f                  	// #47
  41307c:	mov	x0, x22
  413080:	bl	402640 <strchr@plt>
  413084:	add	x22, x0, #0x1
  413088:	cbnz	x0, 413034 <wcrtomb@plt+0x107c4>
  41308c:	b	412ed8 <wcrtomb@plt+0x10668>
  413090:	mov	x0, x19
  413094:	mov	x1, x20
  413098:	bl	402690 <strcpy@plt>
  41309c:	mov	x0, x21
  4130a0:	mov	x1, x19
  4130a4:	bl	413998 <wcrtomb@plt+0x11128>
  4130a8:	cbnz	x0, 4130d0 <wcrtomb@plt+0x10860>
  4130ac:	mov	w1, #0x2f                  	// #47
  4130b0:	mov	x0, x19
  4130b4:	bl	402510 <strrchr@plt>
  4130b8:	cbz	x0, 412ed8 <wcrtomb@plt+0x10668>
  4130bc:	strb	wzr, [x0]
  4130c0:	mov	x0, x21
  4130c4:	mov	x1, x19
  4130c8:	bl	413998 <wcrtomb@plt+0x11128>
  4130cc:	cbz	x0, 4130ac <wcrtomb@plt+0x1083c>
  4130d0:	mov	w20, wzr
  4130d4:	mov	x0, x19
  4130d8:	bl	402620 <free@plt>
  4130dc:	ldr	w8, [x24, #12]
  4130e0:	mov	w9, #0x1                   	// #1
  4130e4:	bic	w8, w9, w8, lsr #29
  4130e8:	cmp	w20, w8
  4130ec:	cset	w0, ne  // ne = any
  4130f0:	ldp	x20, x19, [sp, #96]
  4130f4:	ldp	x22, x21, [sp, #80]
  4130f8:	ldp	x24, x23, [sp, #64]
  4130fc:	ldp	x26, x25, [sp, #48]
  413100:	ldp	x28, x27, [sp, #32]
  413104:	ldp	x29, x30, [sp, #16]
  413108:	add	sp, sp, #0x70
  41310c:	ret
  413110:	mov	w20, #0x1                   	// #1
  413114:	b	4130d4 <wcrtomb@plt+0x10864>
  413118:	stp	x29, x30, [sp, #-80]!
  41311c:	stp	x22, x21, [sp, #48]
  413120:	stp	x20, x19, [sp, #64]
  413124:	mov	w21, w2
  413128:	mov	x19, x1
  41312c:	tst	w2, #0x18000000
  413130:	mov	x22, x0
  413134:	stp	x26, x25, [sp, #16]
  413138:	stp	x24, x23, [sp, #32]
  41313c:	mov	x29, sp
  413140:	b.eq	4131cc <wcrtomb@plt+0x1095c>  // b.none
  413144:	mov	x0, x19
  413148:	mov	w1, w21
  41314c:	bl	412a08 <wcrtomb@plt+0x10198>
  413150:	tbz	w0, #0, 4131cc <wcrtomb@plt+0x1095c>
  413154:	ldr	x20, [x22]
  413158:	cbz	x20, 413174 <wcrtomb@plt+0x10904>
  41315c:	ldr	w8, [x20, #8]
  413160:	cmp	w8, #0x1
  413164:	b.ne	413174 <wcrtomb@plt+0x10904>  // b.any
  413168:	ldr	w8, [x20, #12]
  41316c:	eor	w8, w8, w21
  413170:	tbz	w8, #29, 413194 <wcrtomb@plt+0x10924>
  413174:	mov	w0, #0x28                  	// #40
  413178:	bl	4174b0 <wcrtomb@plt+0x14c40>
  41317c:	mov	w8, #0x1                   	// #1
  413180:	stp	w8, w21, [x0, #8]
  413184:	ldr	x8, [x22]
  413188:	mov	x20, x0
  41318c:	str	x8, [x0]
  413190:	str	x0, [x22]
  413194:	ldp	x8, x24, [x20, #24]
  413198:	cmp	x24, x8
  41319c:	b.ne	4132fc <wcrtomb@plt+0x10a8c>  // b.any
  4131a0:	ldr	x0, [x20, #16]
  4131a4:	cbz	x0, 413304 <wcrtomb@plt+0x10a94>
  4131a8:	mov	x8, #0xf684                	// #63108
  4131ac:	movk	x8, #0xda12, lsl #16
  4131b0:	movk	x8, #0x684b, lsl #32
  4131b4:	movk	x8, #0x12f, lsl #48
  4131b8:	cmp	x24, x8
  4131bc:	b.cs	413320 <wcrtomb@plt+0x10ab0>  // b.hs, b.nlast
  4131c0:	add	x8, x24, x24, lsr #1
  4131c4:	add	x24, x8, #0x1
  4131c8:	b	413328 <wcrtomb@plt+0x10ab8>
  4131cc:	ldr	x20, [x22]
  4131d0:	cbz	x20, 4131f4 <wcrtomb@plt+0x10984>
  4131d4:	ldr	w8, [x20, #8]
  4131d8:	cbnz	w8, 4131f4 <wcrtomb@plt+0x10984>
  4131dc:	ldr	w8, [x20, #12]
  4131e0:	mov	w9, #0x18                  	// #24
  4131e4:	movk	w9, #0x6000, lsl #16
  4131e8:	eor	w8, w8, w21
  4131ec:	tst	w8, w9
  4131f0:	b.eq	413254 <wcrtomb@plt+0x109e4>  // b.none
  4131f4:	mov	w0, #0x28                  	// #40
  4131f8:	bl	4174b0 <wcrtomb@plt+0x14c40>
  4131fc:	adrp	x8, 413000 <wcrtomb@plt+0x10790>
  413200:	adrp	x9, 413000 <wcrtomb@plt+0x10790>
  413204:	adrp	x10, 413000 <wcrtomb@plt+0x10790>
  413208:	adrp	x11, 413000 <wcrtomb@plt+0x10790>
  41320c:	add	x8, x8, #0x7a0
  413210:	add	x9, x9, #0x6f0
  413214:	tst	w21, #0x10
  413218:	add	x10, x10, #0x7c0
  41321c:	add	x11, x11, #0x7a4
  413220:	adrp	x4, 413000 <wcrtomb@plt+0x10790>
  413224:	mov	x20, x0
  413228:	stp	wzr, w21, [x0, #8]
  41322c:	csel	x2, x9, x8, ne  // ne = any
  413230:	csel	x3, x11, x10, ne  // ne = any
  413234:	add	x4, x4, #0x7dc
  413238:	mov	x0, xzr
  41323c:	mov	x1, xzr
  413240:	bl	413ca0 <wcrtomb@plt+0x11430>
  413244:	str	x0, [x20, #16]
  413248:	ldr	x8, [x22]
  41324c:	str	x8, [x20]
  413250:	str	x20, [x22]
  413254:	mov	x0, x19
  413258:	bl	41753c <wcrtomb@plt+0x14ccc>
  41325c:	mov	w8, #0x2                   	// #2
  413260:	movk	w8, #0x1000, lsl #16
  413264:	and	w8, w21, w8
  413268:	mov	w9, #0x10000000            	// #268435456
  41326c:	cmp	w8, w9
  413270:	mov	x19, x0
  413274:	b.ne	4132cc <wcrtomb@plt+0x10a5c>  // b.any
  413278:	mov	x8, x19
  41327c:	mov	x9, x19
  413280:	b	4132ac <wcrtomb@plt+0x10a3c>
  413284:	mov	x10, x9
  413288:	ldrb	w11, [x10, #1]!
  41328c:	cmp	w11, #0x0
  413290:	csel	x10, x9, x10, eq  // eq = none
  413294:	ldrb	w10, [x10]
  413298:	cset	w11, ne  // ne = any
  41329c:	add	x9, x9, x11
  4132a0:	add	x9, x9, #0x1
  4132a4:	strb	w10, [x8], #1
  4132a8:	cbz	w10, 4132cc <wcrtomb@plt+0x10a5c>
  4132ac:	ldrb	w10, [x9]
  4132b0:	cmp	w10, #0x5c
  4132b4:	b.eq	413284 <wcrtomb@plt+0x10a14>  // b.none
  4132b8:	mov	w11, wzr
  4132bc:	add	x9, x9, x11
  4132c0:	add	x9, x9, #0x1
  4132c4:	strb	w10, [x8], #1
  4132c8:	cbnz	w10, 4132ac <wcrtomb@plt+0x10a3c>
  4132cc:	ldr	x0, [x20, #16]
  4132d0:	mov	x1, x19
  4132d4:	bl	41473c <wcrtomb@plt+0x11ecc>
  4132d8:	cmp	x0, x19
  4132dc:	b.eq	413454 <wcrtomb@plt+0x10be4>  // b.none
  4132e0:	mov	x0, x19
  4132e4:	ldp	x20, x19, [sp, #64]
  4132e8:	ldp	x22, x21, [sp, #48]
  4132ec:	ldp	x24, x23, [sp, #32]
  4132f0:	ldp	x26, x25, [sp, #16]
  4132f4:	ldp	x29, x30, [sp], #80
  4132f8:	b	402620 <free@plt>
  4132fc:	ldr	x23, [x20, #16]
  413300:	b	413344 <wcrtomb@plt+0x10ad4>
  413304:	cbz	x24, 413324 <wcrtomb@plt+0x10ab4>
  413308:	mov	x8, #0x71c8                	// #29128
  41330c:	movk	x8, #0xc71c, lsl #16
  413310:	movk	x8, #0x1c71, lsl #32
  413314:	movk	x8, #0x1c7, lsl #48
  413318:	cmp	x24, x8
  41331c:	b.cc	413328 <wcrtomb@plt+0x10ab8>  // b.lo, b.ul, b.last
  413320:	bl	41757c <wcrtomb@plt+0x14d0c>
  413324:	mov	w24, #0x1                   	// #1
  413328:	add	x8, x24, x24, lsl #3
  41332c:	lsl	x1, x8, #3
  413330:	str	x24, [x20, #24]
  413334:	bl	417310 <wcrtomb@plt+0x14aa0>
  413338:	ldr	x24, [x20, #32]
  41333c:	mov	x23, x0
  413340:	str	x0, [x20, #16]
  413344:	mov	w8, #0x48                  	// #72
  413348:	add	x25, x24, #0x1
  41334c:	mul	x8, x24, x8
  413350:	str	x25, [x20, #32]
  413354:	str	w21, [x23, x8]
  413358:	tbnz	w21, #27, 413390 <wcrtomb@plt+0x10b20>
  41335c:	tbz	w21, #26, 413380 <wcrtomb@plt+0x10b10>
  413360:	mov	x0, x19
  413364:	bl	41753c <wcrtomb@plt+0x14ccc>
  413368:	mov	x19, x0
  41336c:	mov	w0, #0x10                  	// #16
  413370:	bl	417290 <wcrtomb@plt+0x14a20>
  413374:	ldr	x8, [x22, #8]
  413378:	stp	x8, x19, [x0]
  41337c:	str	x0, [x22, #8]
  413380:	mov	w8, #0x48                  	// #72
  413384:	madd	x8, x24, x8, x23
  413388:	str	x19, [x8, #8]
  41338c:	b	413454 <wcrtomb@plt+0x10be4>
  413390:	lsr	w8, w21, #3
  413394:	and	w8, w8, #0x2
  413398:	mov	w9, #0x9                   	// #9
  41339c:	orr	w22, w8, w9
  4133a0:	tbnz	w21, #3, 4133c8 <wcrtomb@plt+0x10b58>
  4133a4:	mov	w8, #0x48                  	// #72
  4133a8:	madd	x8, x24, x8, x23
  4133ac:	add	x0, x8, #0x8
  4133b0:	mov	x1, x19
  4133b4:	mov	w2, w22
  4133b8:	bl	41bd20 <_obstack_memory_used@@Base+0x1b8c>
  4133bc:	mov	w19, w0
  4133c0:	cbnz	w19, 413448 <wcrtomb@plt+0x10bd8>
  4133c4:	b	413454 <wcrtomb@plt+0x10be4>
  4133c8:	mov	x0, x19
  4133cc:	bl	402270 <strlen@plt>
  4133d0:	sub	x8, x19, #0x1
  4133d4:	cbz	x0, 41344c <wcrtomb@plt+0x10bdc>
  4133d8:	ldrb	w9, [x8, x0]
  4133dc:	sub	x26, x0, #0x1
  4133e0:	mov	x0, x26
  4133e4:	cmp	w9, #0x2f
  4133e8:	b.eq	4133d4 <wcrtomb@plt+0x10b64>  // b.none
  4133ec:	add	x0, x26, #0x8
  4133f0:	bl	417290 <wcrtomb@plt+0x14a20>
  4133f4:	add	x2, x26, #0x1
  4133f8:	mov	x1, x19
  4133fc:	mov	x21, x0
  413400:	bl	402210 <memcpy@plt>
  413404:	mov	w9, #0x2f28                	// #12072
  413408:	mov	w10, #0x292a                	// #10538
  41340c:	add	x8, x21, x26
  413410:	movk	w9, #0x2a2e, lsl #16
  413414:	movk	w10, #0x3f, lsl #16
  413418:	mov	w11, #0x48                  	// #72
  41341c:	stur	w9, [x8, #1]
  413420:	str	w10, [x8, #4]
  413424:	madd	x8, x24, x11, x23
  413428:	add	x0, x8, #0x8
  41342c:	mov	x1, x21
  413430:	mov	w2, w22
  413434:	bl	41bd20 <_obstack_memory_used@@Base+0x1b8c>
  413438:	mov	w19, w0
  41343c:	mov	x0, x21
  413440:	bl	402620 <free@plt>
  413444:	cbz	w19, 413454 <wcrtomb@plt+0x10be4>
  413448:	ldr	x25, [x20, #32]
  41344c:	sub	x8, x25, #0x1
  413450:	str	x8, [x20, #32]
  413454:	ldp	x20, x19, [sp, #64]
  413458:	ldp	x22, x21, [sp, #48]
  41345c:	ldp	x24, x23, [sp, #32]
  413460:	ldp	x26, x25, [sp, #16]
  413464:	ldp	x29, x30, [sp], #80
  413468:	ret
  41346c:	sub	sp, sp, #0x70
  413470:	stp	x28, x27, [sp, #32]
  413474:	stp	x26, x25, [sp, #48]
  413478:	stp	x24, x23, [sp, #64]
  41347c:	stp	x22, x21, [sp, #80]
  413480:	stp	x20, x19, [sp, #96]
  413484:	mov	x19, x5
  413488:	mov	w20, w4
  41348c:	mov	w21, w3
  413490:	mov	x25, x2
  413494:	mov	x22, x1
  413498:	mov	x23, x0
  41349c:	mov	x27, xzr
  4134a0:	mov	x24, xzr
  4134a4:	stp	x29, x30, [sp, #16]
  4134a8:	add	x29, sp, #0x10
  4134ac:	str	xzr, [sp, #8]
  4134b0:	b	4134c0 <wcrtomb@plt+0x10c50>
  4134b4:	add	x8, x27, #0x1
  4134b8:	strb	w26, [x24, x27]
  4134bc:	mov	x27, x8
  4134c0:	ldp	x8, x9, [x25, #8]
  4134c4:	cmp	x8, x9
  4134c8:	b.cs	4134f8 <wcrtomb@plt+0x10c88>  // b.hs, b.nlast
  4134cc:	add	x9, x8, #0x1
  4134d0:	str	x9, [x25, #8]
  4134d4:	ldrb	w26, [x8]
  4134d8:	ldr	x8, [sp, #8]
  4134dc:	cmp	x27, x8
  4134e0:	b.ne	4134b4 <wcrtomb@plt+0x10c44>  // b.any
  4134e4:	add	x1, sp, #0x8
  4134e8:	mov	x0, x24
  4134ec:	bl	417428 <wcrtomb@plt+0x14bb8>
  4134f0:	mov	x24, x0
  4134f4:	b	4134b4 <wcrtomb@plt+0x10c44>
  4134f8:	mov	x0, x25
  4134fc:	bl	402830 <__uflow@plt>
  413500:	mov	w26, w0
  413504:	cmn	w0, #0x1
  413508:	b.ne	4134d8 <wcrtomb@plt+0x10c68>  // b.any
  41350c:	ldrb	w8, [x25]
  413510:	tbnz	w8, #5, 41351c <wcrtomb@plt+0x10cac>
  413514:	mov	w26, wzr
  413518:	b	413524 <wcrtomb@plt+0x10cb4>
  41351c:	bl	4027e0 <__errno_location@plt>
  413520:	ldr	w26, [x0]
  413524:	add	x1, x27, #0x1
  413528:	mov	x0, x24
  41352c:	bl	417310 <wcrtomb@plt+0x14aa0>
  413530:	mov	x24, x0
  413534:	strb	w20, [x0, x27]
  413538:	cbz	x27, 413550 <wcrtomb@plt+0x10ce0>
  41353c:	add	x8, x24, x27
  413540:	ldurb	w8, [x8, #-1]
  413544:	cmp	w8, w20, uxtb
  413548:	cset	w8, ne  // ne = any
  41354c:	b	413554 <wcrtomb@plt+0x10ce4>
  413550:	mov	x8, xzr
  413554:	add	x8, x24, x8
  413558:	mov	w0, #0x10                  	// #16
  41355c:	add	x27, x8, x27
  413560:	bl	417290 <wcrtomb@plt+0x14a20>
  413564:	ldr	x8, [x22, #8]
  413568:	cmp	x24, x27
  41356c:	stp	x8, x24, [x0]
  413570:	str	x0, [x22, #8]
  413574:	b.cs	4135ec <wcrtomb@plt+0x10d7c>  // b.hs, b.nlast
  413578:	and	x28, x20, #0xff
  41357c:	mov	x25, x24
  413580:	b	4135ac <wcrtomb@plt+0x10d3c>
  413584:	mov	x0, x22
  413588:	mov	x1, x25
  41358c:	mov	w2, w21
  413590:	mov	x3, x19
  413594:	strb	wzr, [x9]
  413598:	blr	x23
  41359c:	add	x25, x24, #0x1
  4135a0:	add	x24, x24, #0x1
  4135a4:	cmp	x27, x24
  4135a8:	b.eq	4135ec <wcrtomb@plt+0x10d7c>  // b.none
  4135ac:	ldrb	w8, [x24]
  4135b0:	cmp	w8, w20, uxtb
  4135b4:	b.ne	4135a0 <wcrtomb@plt+0x10d30>  // b.any
  4135b8:	bl	402610 <__ctype_b_loc@plt>
  4135bc:	ldr	x8, [x0]
  4135c0:	mov	x9, x24
  4135c4:	ldrh	w10, [x8, x28, lsl #1]
  4135c8:	tbz	w10, #13, 413584 <wcrtomb@plt+0x10d14>
  4135cc:	mov	x9, x24
  4135d0:	cmp	x25, x9
  4135d4:	b.eq	41359c <wcrtomb@plt+0x10d2c>  // b.none
  4135d8:	ldrb	w10, [x9, #-1]!
  4135dc:	ldrh	w10, [x8, x10, lsl #1]
  4135e0:	tbnz	w10, #13, 4135d0 <wcrtomb@plt+0x10d60>
  4135e4:	add	x9, x9, #0x1
  4135e8:	b	413584 <wcrtomb@plt+0x10d14>
  4135ec:	bl	4027e0 <__errno_location@plt>
  4135f0:	str	w26, [x0]
  4135f4:	cmp	w26, #0x0
  4135f8:	ldp	x20, x19, [sp, #96]
  4135fc:	ldp	x22, x21, [sp, #80]
  413600:	ldp	x24, x23, [sp, #64]
  413604:	ldp	x26, x25, [sp, #48]
  413608:	ldp	x28, x27, [sp, #32]
  41360c:	ldp	x29, x30, [sp, #16]
  413610:	csetm	w8, ne  // ne = any
  413614:	mov	w0, w8
  413618:	add	sp, sp, #0x70
  41361c:	ret
  413620:	sub	sp, sp, #0x40
  413624:	stp	x29, x30, [sp, #16]
  413628:	stp	x22, x21, [sp, #32]
  41362c:	stp	x20, x19, [sp, #48]
  413630:	str	x0, [sp, #8]
  413634:	ldrb	w8, [x2]
  413638:	mov	w19, w4
  41363c:	mov	w20, w3
  413640:	mov	x21, x1
  413644:	cmp	w8, #0x2d
  413648:	add	x29, sp, #0x10
  41364c:	b.ne	413658 <wcrtomb@plt+0x10de8>  // b.any
  413650:	ldrb	w8, [x2, #1]
  413654:	cbz	w8, 4136b0 <wcrtomb@plt+0x10e40>
  413658:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41365c:	add	x1, x1, #0x11c
  413660:	mov	x0, x2
  413664:	bl	402370 <fopen@plt>
  413668:	cbz	x0, 4136a8 <wcrtomb@plt+0x10e38>
  41366c:	mov	x22, x0
  413670:	adrp	x0, 413000 <wcrtomb@plt+0x10790>
  413674:	add	x0, x0, #0x6e8
  413678:	add	x5, sp, #0x8
  41367c:	mov	x1, x21
  413680:	mov	x2, x22
  413684:	mov	w3, w20
  413688:	mov	w4, w19
  41368c:	bl	41346c <wcrtomb@plt+0x10bfc>
  413690:	mov	w19, w0
  413694:	mov	x0, x22
  413698:	bl	402340 <fclose@plt>
  41369c:	cmp	w0, #0x0
  4136a0:	csinv	w0, w19, wzr, eq  // eq = none
  4136a4:	b	4136d4 <wcrtomb@plt+0x10e64>
  4136a8:	mov	w0, #0xffffffff            	// #-1
  4136ac:	b	4136d4 <wcrtomb@plt+0x10e64>
  4136b0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4136b4:	ldr	x2, [x8, #1088]
  4136b8:	adrp	x0, 413000 <wcrtomb@plt+0x10790>
  4136bc:	add	x0, x0, #0x6e8
  4136c0:	add	x5, sp, #0x8
  4136c4:	mov	x1, x21
  4136c8:	mov	w3, w20
  4136cc:	mov	w4, w19
  4136d0:	bl	41346c <wcrtomb@plt+0x10bfc>
  4136d4:	ldp	x20, x19, [sp, #48]
  4136d8:	ldp	x22, x21, [sp, #32]
  4136dc:	ldp	x29, x30, [sp, #16]
  4136e0:	add	sp, sp, #0x40
  4136e4:	ret
  4136e8:	ldr	x3, [x3]
  4136ec:	br	x3
  4136f0:	sub	sp, sp, #0x60
  4136f4:	str	x0, [sp, #16]
  4136f8:	mov	x0, sp
  4136fc:	stp	x29, x30, [sp, #64]
  413700:	stp	x20, x19, [sp, #80]
  413704:	add	x29, sp, #0x40
  413708:	mov	x19, x1
  41370c:	strb	wzr, [sp]
  413710:	stur	xzr, [sp, #4]
  413714:	strb	wzr, [sp, #12]
  413718:	bl	414bc4 <wcrtomb@plt+0x12354>
  41371c:	ldrb	w8, [sp, #32]
  413720:	ldr	w0, [sp, #36]
  413724:	cbz	w8, 413730 <wcrtomb@plt+0x10ec0>
  413728:	mov	x20, xzr
  41372c:	cbz	w0, 41378c <wcrtomb@plt+0x10f1c>
  413730:	mov	x20, xzr
  413734:	tst	w8, #0xff
  413738:	b.eq	413748 <wcrtomb@plt+0x10ed8>  // b.none
  41373c:	bl	402810 <towlower@plt>
  413740:	ldr	x8, [sp, #16]
  413744:	b	413750 <wcrtomb@plt+0x10ee0>
  413748:	ldr	x8, [sp, #16]
  41374c:	ldrb	w0, [x8]
  413750:	ldr	x10, [sp, #24]
  413754:	lsl	x9, x20, #5
  413758:	sub	x9, x9, x20
  41375c:	add	x9, x9, w0, uxtw
  413760:	udiv	x11, x9, x19
  413764:	add	x8, x8, x10
  413768:	mov	x0, sp
  41376c:	msub	x20, x11, x19, x9
  413770:	str	x8, [sp, #16]
  413774:	strb	wzr, [sp, #12]
  413778:	bl	414bc4 <wcrtomb@plt+0x12354>
  41377c:	ldrb	w8, [sp, #32]
  413780:	ldr	w0, [sp, #36]
  413784:	cbz	w8, 413734 <wcrtomb@plt+0x10ec4>
  413788:	cbnz	w0, 413734 <wcrtomb@plt+0x10ec4>
  41378c:	mov	x0, x20
  413790:	ldp	x20, x19, [sp, #80]
  413794:	ldp	x29, x30, [sp, #64]
  413798:	add	sp, sp, #0x60
  41379c:	ret
  4137a0:	b	413c48 <wcrtomb@plt+0x113d8>
  4137a4:	stp	x29, x30, [sp, #-16]!
  4137a8:	mov	x29, sp
  4137ac:	bl	4149ac <wcrtomb@plt+0x1213c>
  4137b0:	cmp	w0, #0x0
  4137b4:	cset	w0, eq  // eq = none
  4137b8:	ldp	x29, x30, [sp], #16
  4137bc:	ret
  4137c0:	stp	x29, x30, [sp, #-16]!
  4137c4:	mov	x29, sp
  4137c8:	bl	402600 <strcmp@plt>
  4137cc:	cmp	w0, #0x0
  4137d0:	cset	w0, eq  // eq = none
  4137d4:	ldp	x29, x30, [sp], #16
  4137d8:	ret
  4137dc:	b	402620 <free@plt>
  4137e0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4137e4:	ldr	x0, [x8, #1096]
  4137e8:	ret
  4137ec:	ldr	x0, [x0, #16]
  4137f0:	ret
  4137f4:	ldr	x0, [x0, #24]
  4137f8:	ret
  4137fc:	ldr	x0, [x0, #32]
  413800:	ret
  413804:	ldp	x8, x9, [x0]
  413808:	cmp	x8, x9
  41380c:	b.cs	41384c <wcrtomb@plt+0x10fdc>  // b.hs, b.nlast
  413810:	mov	x0, xzr
  413814:	b	413824 <wcrtomb@plt+0x10fb4>
  413818:	add	x8, x8, #0x10
  41381c:	cmp	x8, x9
  413820:	b.cs	413850 <wcrtomb@plt+0x10fe0>  // b.hs, b.nlast
  413824:	ldr	x10, [x8]
  413828:	cbz	x10, 413818 <wcrtomb@plt+0x10fa8>
  41382c:	mov	x10, xzr
  413830:	mov	x11, x8
  413834:	ldr	x11, [x11, #8]
  413838:	add	x10, x10, #0x1
  41383c:	cbnz	x11, 413834 <wcrtomb@plt+0x10fc4>
  413840:	cmp	x10, x0
  413844:	csel	x0, x10, x0, hi  // hi = pmore
  413848:	b	413818 <wcrtomb@plt+0x10fa8>
  41384c:	mov	x0, xzr
  413850:	ret
  413854:	ldp	x9, x10, [x0]
  413858:	cmp	x9, x10
  41385c:	b.cs	413898 <wcrtomb@plt+0x11028>  // b.hs, b.nlast
  413860:	mov	x8, xzr
  413864:	mov	x11, xzr
  413868:	b	413878 <wcrtomb@plt+0x11008>
  41386c:	add	x9, x9, #0x10
  413870:	cmp	x9, x10
  413874:	b.cs	4138a0 <wcrtomb@plt+0x11030>  // b.hs, b.nlast
  413878:	ldr	x12, [x9]
  41387c:	cbz	x12, 41386c <wcrtomb@plt+0x10ffc>
  413880:	mov	x12, x9
  413884:	ldr	x12, [x12, #8]
  413888:	add	x8, x8, #0x1
  41388c:	cbnz	x12, 413884 <wcrtomb@plt+0x11014>
  413890:	add	x11, x11, #0x1
  413894:	b	41386c <wcrtomb@plt+0x10ffc>
  413898:	mov	x11, xzr
  41389c:	mov	x8, xzr
  4138a0:	ldr	x9, [x0, #24]
  4138a4:	cmp	x11, x9
  4138a8:	b.ne	4138c0 <wcrtomb@plt+0x11050>  // b.any
  4138ac:	ldr	x9, [x0, #32]
  4138b0:	cmp	x8, x9
  4138b4:	b.ne	4138c0 <wcrtomb@plt+0x11050>  // b.any
  4138b8:	mov	w0, #0x1                   	// #1
  4138bc:	ret
  4138c0:	mov	w0, wzr
  4138c4:	ret
  4138c8:	stp	x29, x30, [sp, #-48]!
  4138cc:	stp	x22, x21, [sp, #16]
  4138d0:	stp	x20, x19, [sp, #32]
  4138d4:	ldp	x8, x9, [x0]
  4138d8:	ldp	x20, x2, [x0, #24]
  4138dc:	ldr	x22, [x0, #16]
  4138e0:	mov	x19, x1
  4138e4:	cmp	x8, x9
  4138e8:	mov	x21, xzr
  4138ec:	mov	x29, sp
  4138f0:	b.cc	413970 <wcrtomb@plt+0x11100>  // b.lo, b.ul, b.last
  4138f4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4138f8:	add	x1, x1, #0x9c5
  4138fc:	mov	x0, x19
  413900:	bl	402820 <fprintf@plt>
  413904:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  413908:	add	x1, x1, #0x9dd
  41390c:	mov	x0, x19
  413910:	mov	x2, x22
  413914:	bl	402820 <fprintf@plt>
  413918:	mov	x8, #0x4059000000000000    	// #4636737291354636288
  41391c:	ucvtf	d0, x20
  413920:	fmov	d1, x8
  413924:	fmul	d0, d0, d1
  413928:	ucvtf	d1, x22
  41392c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  413930:	fdiv	d0, d0, d1
  413934:	add	x1, x1, #0x9f5
  413938:	mov	x0, x19
  41393c:	mov	x2, x20
  413940:	bl	402820 <fprintf@plt>
  413944:	mov	x0, x19
  413948:	mov	x2, x21
  41394c:	ldp	x20, x19, [sp, #32]
  413950:	ldp	x22, x21, [sp, #16]
  413954:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  413958:	add	x1, x1, #0xa16
  41395c:	ldp	x29, x30, [sp], #48
  413960:	b	402820 <fprintf@plt>
  413964:	add	x8, x8, #0x10
  413968:	cmp	x8, x9
  41396c:	b.cs	4138f4 <wcrtomb@plt+0x11084>  // b.hs, b.nlast
  413970:	ldr	x10, [x8]
  413974:	cbz	x10, 413964 <wcrtomb@plt+0x110f4>
  413978:	mov	x10, xzr
  41397c:	mov	x11, x8
  413980:	ldr	x11, [x11, #8]
  413984:	add	x10, x10, #0x1
  413988:	cbnz	x11, 413980 <wcrtomb@plt+0x11110>
  41398c:	cmp	x10, x21
  413990:	csel	x21, x10, x21, hi  // hi = pmore
  413994:	b	413964 <wcrtomb@plt+0x110f4>
  413998:	stp	x29, x30, [sp, #-48]!
  41399c:	stp	x20, x19, [sp, #32]
  4139a0:	ldr	x8, [x0, #16]
  4139a4:	ldr	x9, [x0, #48]
  4139a8:	mov	x19, x0
  4139ac:	mov	x20, x1
  4139b0:	mov	x0, x1
  4139b4:	mov	x1, x8
  4139b8:	str	x21, [sp, #16]
  4139bc:	mov	x29, sp
  4139c0:	blr	x9
  4139c4:	ldr	x8, [x19, #16]
  4139c8:	cmp	x0, x8
  4139cc:	b.cs	413a50 <wcrtomb@plt+0x111e0>  // b.hs, b.nlast
  4139d0:	ldr	x8, [x19]
  4139d4:	add	x21, x8, x0, lsl #4
  4139d8:	ldr	x1, [x21]
  4139dc:	mov	x0, xzr
  4139e0:	cbz	x1, 413a18 <wcrtomb@plt+0x111a8>
  4139e4:	cbz	x8, 413a18 <wcrtomb@plt+0x111a8>
  4139e8:	cmp	x1, x20
  4139ec:	b.eq	413a14 <wcrtomb@plt+0x111a4>  // b.none
  4139f0:	ldr	x8, [x19, #56]
  4139f4:	mov	x0, x20
  4139f8:	blr	x8
  4139fc:	tbnz	w0, #0, 413a28 <wcrtomb@plt+0x111b8>
  413a00:	ldr	x21, [x21, #8]
  413a04:	cbz	x21, 413a3c <wcrtomb@plt+0x111cc>
  413a08:	ldr	x1, [x21]
  413a0c:	cmp	x1, x20
  413a10:	b.ne	4139f0 <wcrtomb@plt+0x11180>  // b.any
  413a14:	mov	x0, x20
  413a18:	ldp	x20, x19, [sp, #32]
  413a1c:	ldr	x21, [sp, #16]
  413a20:	ldp	x29, x30, [sp], #48
  413a24:	ret
  413a28:	ldr	x0, [x21]
  413a2c:	ldp	x20, x19, [sp, #32]
  413a30:	ldr	x21, [sp, #16]
  413a34:	ldp	x29, x30, [sp], #48
  413a38:	ret
  413a3c:	mov	x0, xzr
  413a40:	ldp	x20, x19, [sp, #32]
  413a44:	ldr	x21, [sp, #16]
  413a48:	ldp	x29, x30, [sp], #48
  413a4c:	ret
  413a50:	bl	402560 <abort@plt>
  413a54:	stp	x29, x30, [sp, #-16]!
  413a58:	ldr	x8, [x0, #32]
  413a5c:	mov	x29, sp
  413a60:	cbz	x8, 413a80 <wcrtomb@plt+0x11210>
  413a64:	ldp	x8, x9, [x0]
  413a68:	cmp	x8, x9
  413a6c:	b.cs	413a8c <wcrtomb@plt+0x1121c>  // b.hs, b.nlast
  413a70:	ldr	x0, [x8], #16
  413a74:	cbz	x0, 413a68 <wcrtomb@plt+0x111f8>
  413a78:	ldp	x29, x30, [sp], #16
  413a7c:	ret
  413a80:	mov	x0, xzr
  413a84:	ldp	x29, x30, [sp], #16
  413a88:	ret
  413a8c:	bl	402560 <abort@plt>
  413a90:	stp	x29, x30, [sp, #-32]!
  413a94:	stp	x20, x19, [sp, #16]
  413a98:	ldr	x8, [x0, #16]
  413a9c:	ldr	x9, [x0, #48]
  413aa0:	mov	x19, x0
  413aa4:	mov	x20, x1
  413aa8:	mov	x0, x1
  413aac:	mov	x1, x8
  413ab0:	mov	x29, sp
  413ab4:	blr	x9
  413ab8:	ldr	x8, [x19, #16]
  413abc:	cmp	x0, x8
  413ac0:	b.cs	413b24 <wcrtomb@plt+0x112b4>  // b.hs, b.nlast
  413ac4:	ldr	x8, [x19]
  413ac8:	add	x9, x8, x0, lsl #4
  413acc:	ldp	x10, x9, [x9]
  413ad0:	cmp	x10, x20
  413ad4:	b.eq	413ae0 <wcrtomb@plt+0x11270>  // b.none
  413ad8:	cbnz	x9, 413acc <wcrtomb@plt+0x1125c>
  413adc:	b	413af4 <wcrtomb@plt+0x11284>
  413ae0:	cbz	x9, 413af4 <wcrtomb@plt+0x11284>
  413ae4:	ldr	x0, [x9]
  413ae8:	ldp	x20, x19, [sp, #16]
  413aec:	ldp	x29, x30, [sp], #32
  413af0:	ret
  413af4:	ldr	x9, [x19, #8]
  413af8:	add	x8, x8, x0, lsl #4
  413afc:	add	x8, x8, #0x10
  413b00:	cmp	x8, x9
  413b04:	b.cs	413b14 <wcrtomb@plt+0x112a4>  // b.hs, b.nlast
  413b08:	ldr	x0, [x8], #16
  413b0c:	cbz	x0, 413b00 <wcrtomb@plt+0x11290>
  413b10:	b	413ae8 <wcrtomb@plt+0x11278>
  413b14:	mov	x0, xzr
  413b18:	ldp	x20, x19, [sp, #16]
  413b1c:	ldp	x29, x30, [sp], #32
  413b20:	ret
  413b24:	bl	402560 <abort@plt>
  413b28:	ldp	x9, x10, [x0]
  413b2c:	cmp	x9, x10
  413b30:	b.cs	413b9c <wcrtomb@plt+0x1132c>  // b.hs, b.nlast
  413b34:	mov	x11, xzr
  413b38:	ldr	x8, [x9]
  413b3c:	cbz	x8, 413b80 <wcrtomb@plt+0x11310>
  413b40:	cbz	x9, 413b80 <wcrtomb@plt+0x11310>
  413b44:	mov	x10, x9
  413b48:	cmp	x11, x2
  413b4c:	b.cs	413ba4 <wcrtomb@plt+0x11334>  // b.hs, b.nlast
  413b50:	ldr	x8, [x10]
  413b54:	str	x8, [x1, x11, lsl #3]
  413b58:	ldr	x10, [x10, #8]
  413b5c:	add	x8, x11, #0x1
  413b60:	mov	x11, x8
  413b64:	cbnz	x10, 413b48 <wcrtomb@plt+0x112d8>
  413b68:	ldr	x10, [x0, #8]
  413b6c:	add	x9, x9, #0x10
  413b70:	cmp	x9, x10
  413b74:	mov	x11, x8
  413b78:	b.cc	413b38 <wcrtomb@plt+0x112c8>  // b.lo, b.ul, b.last
  413b7c:	b	413b94 <wcrtomb@plt+0x11324>
  413b80:	mov	x8, x11
  413b84:	add	x9, x9, #0x10
  413b88:	cmp	x9, x10
  413b8c:	mov	x11, x8
  413b90:	b.cc	413b38 <wcrtomb@plt+0x112c8>  // b.lo, b.ul, b.last
  413b94:	mov	x0, x8
  413b98:	ret
  413b9c:	mov	x0, xzr
  413ba0:	ret
  413ba4:	mov	x0, x11
  413ba8:	ret
  413bac:	stp	x29, x30, [sp, #-64]!
  413bb0:	stp	x24, x23, [sp, #16]
  413bb4:	stp	x22, x21, [sp, #32]
  413bb8:	stp	x20, x19, [sp, #48]
  413bbc:	ldp	x23, x8, [x0]
  413bc0:	mov	x29, sp
  413bc4:	cmp	x23, x8
  413bc8:	b.cs	413be0 <wcrtomb@plt+0x11370>  // b.hs, b.nlast
  413bcc:	mov	x19, x2
  413bd0:	mov	x20, x0
  413bd4:	mov	x21, x1
  413bd8:	mov	x22, xzr
  413bdc:	b	413bf8 <wcrtomb@plt+0x11388>
  413be0:	mov	x22, xzr
  413be4:	b	413c30 <wcrtomb@plt+0x113c0>
  413be8:	ldr	x8, [x20, #8]
  413bec:	add	x23, x23, #0x10
  413bf0:	cmp	x23, x8
  413bf4:	b.cs	413c30 <wcrtomb@plt+0x113c0>  // b.hs, b.nlast
  413bf8:	ldr	x0, [x23]
  413bfc:	cbz	x0, 413bec <wcrtomb@plt+0x1137c>
  413c00:	cbz	x23, 413bec <wcrtomb@plt+0x1137c>
  413c04:	mov	x1, x19
  413c08:	blr	x21
  413c0c:	tbz	w0, #0, 413c30 <wcrtomb@plt+0x113c0>
  413c10:	mov	x24, x23
  413c14:	ldr	x24, [x24, #8]
  413c18:	add	x22, x22, #0x1
  413c1c:	cbz	x24, 413be8 <wcrtomb@plt+0x11378>
  413c20:	ldr	x0, [x24]
  413c24:	mov	x1, x19
  413c28:	blr	x21
  413c2c:	tbnz	w0, #0, 413c14 <wcrtomb@plt+0x113a4>
  413c30:	mov	x0, x22
  413c34:	ldp	x20, x19, [sp, #48]
  413c38:	ldp	x22, x21, [sp, #32]
  413c3c:	ldp	x24, x23, [sp, #16]
  413c40:	ldp	x29, x30, [sp], #64
  413c44:	ret
  413c48:	ldrb	w9, [x0]
  413c4c:	cbz	w9, 413c7c <wcrtomb@plt+0x1140c>
  413c50:	mov	x8, x0
  413c54:	mov	x0, xzr
  413c58:	add	x8, x8, #0x1
  413c5c:	lsl	x10, x0, #5
  413c60:	sub	x10, x10, x0
  413c64:	add	x10, x10, w9, uxtb
  413c68:	ldrb	w9, [x8], #1
  413c6c:	udiv	x11, x10, x1
  413c70:	msub	x0, x11, x1, x10
  413c74:	cbnz	w9, 413c5c <wcrtomb@plt+0x113ec>
  413c78:	ret
  413c7c:	mov	x0, xzr
  413c80:	ret
  413c84:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  413c88:	add	x8, x8, #0xa30
  413c8c:	ldr	w9, [x8, #16]
  413c90:	ldr	q0, [x8]
  413c94:	str	w9, [x0, #16]
  413c98:	str	q0, [x0]
  413c9c:	ret
  413ca0:	stp	x29, x30, [sp, #-64]!
  413ca4:	adrp	x8, 413000 <wcrtomb@plt+0x10790>
  413ca8:	add	x8, x8, #0xe88
  413cac:	cmp	x2, #0x0
  413cb0:	adrp	x9, 413000 <wcrtomb@plt+0x10790>
  413cb4:	stp	x24, x23, [sp, #16]
  413cb8:	stp	x22, x21, [sp, #32]
  413cbc:	mov	x21, x0
  413cc0:	add	x9, x9, #0xe98
  413cc4:	csel	x23, x8, x2, eq  // eq = none
  413cc8:	cmp	x3, #0x0
  413ccc:	mov	w0, #0x50                  	// #80
  413cd0:	stp	x20, x19, [sp, #48]
  413cd4:	mov	x29, sp
  413cd8:	mov	x19, x4
  413cdc:	mov	x22, x1
  413ce0:	csel	x24, x9, x3, eq  // eq = none
  413ce4:	bl	4023a0 <malloc@plt>
  413ce8:	mov	x20, x0
  413cec:	cbz	x0, 413e70 <wcrtomb@plt+0x11600>
  413cf0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  413cf4:	add	x9, x9, #0xa30
  413cf8:	cmp	x22, #0x0
  413cfc:	csel	x8, x9, x22, eq  // eq = none
  413d00:	cmp	x8, x9
  413d04:	str	x8, [x20, #40]
  413d08:	b.eq	413d8c <wcrtomb@plt+0x1151c>  // b.none
  413d0c:	ldr	s0, [x8, #8]
  413d10:	mov	w9, #0xcccd                	// #52429
  413d14:	movk	w9, #0x3dcc, lsl #16
  413d18:	fmov	s1, w9
  413d1c:	fcmp	s0, s1
  413d20:	b.le	413e64 <wcrtomb@plt+0x115f4>
  413d24:	mov	w9, #0x6666                	// #26214
  413d28:	movk	w9, #0x3f66, lsl #16
  413d2c:	fmov	s1, w9
  413d30:	fcmp	s0, s1
  413d34:	b.pl	413e64 <wcrtomb@plt+0x115f4>  // b.nfrst
  413d38:	ldr	s1, [x8, #12]
  413d3c:	mov	w9, #0xcccd                	// #52429
  413d40:	movk	w9, #0x3f8c, lsl #16
  413d44:	fmov	s2, w9
  413d48:	fcmp	s1, s2
  413d4c:	b.le	413e64 <wcrtomb@plt+0x115f4>
  413d50:	ldr	s1, [x8]
  413d54:	fcmp	s1, #0.0
  413d58:	b.lt	413e64 <wcrtomb@plt+0x115f4>  // b.tstop
  413d5c:	mov	w9, #0xcccd                	// #52429
  413d60:	movk	w9, #0x3dcc, lsl #16
  413d64:	fmov	s2, w9
  413d68:	fadd	s1, s1, s2
  413d6c:	fcmp	s1, s0
  413d70:	b.pl	413e64 <wcrtomb@plt+0x115f4>  // b.nfrst
  413d74:	ldr	s0, [x8, #4]
  413d78:	fmov	s2, #1.000000000000000000e+00
  413d7c:	fcmp	s0, s2
  413d80:	b.hi	413e64 <wcrtomb@plt+0x115f4>  // b.pmore
  413d84:	fcmp	s1, s0
  413d88:	b.pl	413e64 <wcrtomb@plt+0x115f4>  // b.nfrst
  413d8c:	ldrb	w9, [x8, #16]
  413d90:	cbnz	w9, 413db4 <wcrtomb@plt+0x11544>
  413d94:	ldr	s0, [x8, #8]
  413d98:	ucvtf	s1, x21
  413d9c:	mov	w8, #0x5f800000            	// #1602224128
  413da0:	fdiv	s0, s1, s0
  413da4:	fmov	s1, w8
  413da8:	fcmp	s0, s1
  413dac:	b.ge	413e64 <wcrtomb@plt+0x115f4>  // b.tcont
  413db0:	fcvtzu	x21, s0
  413db4:	cmp	x21, #0xa
  413db8:	mov	w8, #0xa                   	// #10
  413dbc:	csel	x8, x21, x8, hi  // hi = pmore
  413dc0:	orr	x21, x8, #0x1
  413dc4:	cmn	x21, #0x1
  413dc8:	b.eq	413e64 <wcrtomb@plt+0x115f4>  // b.none
  413dcc:	cmp	x21, #0xa
  413dd0:	b.cc	413e08 <wcrtomb@plt+0x11598>  // b.lo, b.ul, b.last
  413dd4:	mov	w9, #0xc                   	// #12
  413dd8:	mov	w10, #0x9                   	// #9
  413ddc:	mov	w8, #0x3                   	// #3
  413de0:	udiv	x11, x21, x8
  413de4:	msub	x11, x11, x8, x21
  413de8:	cbz	x11, 413e0c <wcrtomb@plt+0x1159c>
  413dec:	add	x10, x10, x9
  413df0:	add	x10, x10, #0x4
  413df4:	add	x8, x8, #0x2
  413df8:	cmp	x10, x21
  413dfc:	add	x9, x9, #0x8
  413e00:	b.cc	413de0 <wcrtomb@plt+0x11570>  // b.lo, b.ul, b.last
  413e04:	b	413e0c <wcrtomb@plt+0x1159c>
  413e08:	mov	w8, #0x3                   	// #3
  413e0c:	udiv	x9, x21, x8
  413e10:	msub	x8, x9, x8, x21
  413e14:	cbnz	x8, 413e28 <wcrtomb@plt+0x115b8>
  413e18:	add	x21, x21, #0x2
  413e1c:	cmn	x21, #0x1
  413e20:	b.ne	413dcc <wcrtomb@plt+0x1155c>  // b.any
  413e24:	b	413e64 <wcrtomb@plt+0x115f4>
  413e28:	lsr	x8, x21, #60
  413e2c:	cbnz	x8, 413e64 <wcrtomb@plt+0x115f4>
  413e30:	str	x21, [x20, #16]
  413e34:	cbz	x21, 413e64 <wcrtomb@plt+0x115f4>
  413e38:	mov	w1, #0x10                  	// #16
  413e3c:	mov	x0, x21
  413e40:	bl	402480 <calloc@plt>
  413e44:	str	x0, [x20]
  413e48:	cbz	x0, 413e64 <wcrtomb@plt+0x115f4>
  413e4c:	add	x8, x0, x21, lsl #4
  413e50:	stp	xzr, xzr, [x20, #24]
  413e54:	stp	x23, x24, [x20, #48]
  413e58:	str	x8, [x20, #8]
  413e5c:	stp	x19, xzr, [x20, #64]
  413e60:	b	413e70 <wcrtomb@plt+0x11600>
  413e64:	mov	x0, x20
  413e68:	bl	402620 <free@plt>
  413e6c:	mov	x20, xzr
  413e70:	mov	x0, x20
  413e74:	ldp	x20, x19, [sp, #48]
  413e78:	ldp	x22, x21, [sp, #32]
  413e7c:	ldp	x24, x23, [sp, #16]
  413e80:	ldp	x29, x30, [sp], #64
  413e84:	ret
  413e88:	ror	x8, x0, #3
  413e8c:	udiv	x9, x8, x1
  413e90:	msub	x0, x9, x1, x8
  413e94:	ret
  413e98:	cmp	x0, x1
  413e9c:	cset	w0, eq  // eq = none
  413ea0:	ret
  413ea4:	stp	x29, x30, [sp, #-48]!
  413ea8:	str	x21, [sp, #16]
  413eac:	stp	x20, x19, [sp, #32]
  413eb0:	ldp	x20, x8, [x0]
  413eb4:	mov	x19, x0
  413eb8:	mov	x29, sp
  413ebc:	b	413ecc <wcrtomb@plt+0x1165c>
  413ec0:	stp	xzr, xzr, [x20]
  413ec4:	ldr	x8, [x19, #8]
  413ec8:	add	x20, x20, #0x10
  413ecc:	cmp	x20, x8
  413ed0:	b.cs	413f38 <wcrtomb@plt+0x116c8>  // b.hs, b.nlast
  413ed4:	ldr	x9, [x20]
  413ed8:	cbz	x9, 413ec8 <wcrtomb@plt+0x11658>
  413edc:	ldr	x8, [x19, #64]
  413ee0:	ldr	x21, [x20, #8]
  413ee4:	cmp	x8, #0x0
  413ee8:	cset	w9, ne  // ne = any
  413eec:	cbnz	x21, 413f24 <wcrtomb@plt+0x116b4>
  413ef0:	cbz	w9, 413ec0 <wcrtomb@plt+0x11650>
  413ef4:	ldr	x0, [x20]
  413ef8:	blr	x8
  413efc:	b	413ec0 <wcrtomb@plt+0x11650>
  413f00:	str	xzr, [x21]
  413f04:	ldr	x9, [x19, #72]
  413f08:	ldr	x10, [x21, #8]
  413f0c:	cmp	x8, #0x0
  413f10:	str	x9, [x21, #8]
  413f14:	str	x21, [x19, #72]
  413f18:	cset	w9, ne  // ne = any
  413f1c:	mov	x21, x10
  413f20:	cbz	x10, 413ef0 <wcrtomb@plt+0x11680>
  413f24:	tbz	w9, #0, 413f00 <wcrtomb@plt+0x11690>
  413f28:	ldr	x0, [x21]
  413f2c:	blr	x8
  413f30:	ldr	x8, [x19, #64]
  413f34:	b	413f00 <wcrtomb@plt+0x11690>
  413f38:	stp	xzr, xzr, [x19, #24]
  413f3c:	ldp	x20, x19, [sp, #32]
  413f40:	ldr	x21, [sp, #16]
  413f44:	ldp	x29, x30, [sp], #48
  413f48:	ret
  413f4c:	stp	x29, x30, [sp, #-48]!
  413f50:	stp	x20, x19, [sp, #32]
  413f54:	ldr	x8, [x0, #64]
  413f58:	mov	x19, x0
  413f5c:	str	x21, [sp, #16]
  413f60:	mov	x29, sp
  413f64:	cbz	x8, 413fbc <wcrtomb@plt+0x1174c>
  413f68:	ldr	x8, [x19, #32]
  413f6c:	cbz	x8, 413fbc <wcrtomb@plt+0x1174c>
  413f70:	ldp	x20, x8, [x19]
  413f74:	b	413f80 <wcrtomb@plt+0x11710>
  413f78:	ldr	x8, [x19, #8]
  413f7c:	add	x20, x20, #0x10
  413f80:	cmp	x20, x8
  413f84:	b.cs	413fbc <wcrtomb@plt+0x1174c>  // b.hs, b.nlast
  413f88:	ldr	x0, [x20]
  413f8c:	cbz	x0, 413f7c <wcrtomb@plt+0x1170c>
  413f90:	cbz	x20, 413f7c <wcrtomb@plt+0x1170c>
  413f94:	ldr	x8, [x19, #64]
  413f98:	blr	x8
  413f9c:	ldr	x21, [x20, #8]
  413fa0:	cbz	x21, 413f78 <wcrtomb@plt+0x11708>
  413fa4:	ldr	x0, [x21]
  413fa8:	ldr	x8, [x19, #64]
  413fac:	blr	x8
  413fb0:	ldr	x21, [x21, #8]
  413fb4:	cbnz	x21, 413fa4 <wcrtomb@plt+0x11734>
  413fb8:	b	413f78 <wcrtomb@plt+0x11708>
  413fbc:	ldp	x20, x8, [x19]
  413fc0:	b	413fc8 <wcrtomb@plt+0x11758>
  413fc4:	add	x20, x20, #0x10
  413fc8:	cmp	x20, x8
  413fcc:	b.cs	413ff0 <wcrtomb@plt+0x11780>  // b.hs, b.nlast
  413fd0:	ldr	x0, [x20, #8]
  413fd4:	cbz	x0, 413fc4 <wcrtomb@plt+0x11754>
  413fd8:	ldr	x21, [x0, #8]
  413fdc:	bl	402620 <free@plt>
  413fe0:	mov	x0, x21
  413fe4:	cbnz	x21, 413fd8 <wcrtomb@plt+0x11768>
  413fe8:	ldr	x8, [x19, #8]
  413fec:	b	413fc4 <wcrtomb@plt+0x11754>
  413ff0:	ldr	x0, [x19, #72]
  413ff4:	cbz	x0, 414008 <wcrtomb@plt+0x11798>
  413ff8:	ldr	x20, [x0, #8]
  413ffc:	bl	402620 <free@plt>
  414000:	mov	x0, x20
  414004:	cbnz	x20, 413ff8 <wcrtomb@plt+0x11788>
  414008:	ldr	x0, [x19]
  41400c:	bl	402620 <free@plt>
  414010:	mov	x0, x19
  414014:	ldp	x20, x19, [sp, #32]
  414018:	ldr	x21, [sp, #16]
  41401c:	ldp	x29, x30, [sp], #48
  414020:	b	402620 <free@plt>
  414024:	sub	sp, sp, #0x90
  414028:	stp	x29, x30, [sp, #80]
  41402c:	stp	x24, x23, [sp, #96]
  414030:	stp	x22, x21, [sp, #112]
  414034:	stp	x20, x19, [sp, #128]
  414038:	ldr	x21, [x0, #40]
  41403c:	mov	x19, x0
  414040:	add	x29, sp, #0x50
  414044:	ldrb	w8, [x21, #16]
  414048:	cbnz	w8, 41406c <wcrtomb@plt+0x117fc>
  41404c:	ldr	s0, [x21, #8]
  414050:	ucvtf	s1, x1
  414054:	mov	w8, #0x5f800000            	// #1602224128
  414058:	fdiv	s0, s1, s0
  41405c:	fmov	s1, w8
  414060:	fcmp	s0, s1
  414064:	b.ge	4140f0 <wcrtomb@plt+0x11880>  // b.tcont
  414068:	fcvtzu	x1, s0
  41406c:	cmp	x1, #0xa
  414070:	mov	w8, #0xa                   	// #10
  414074:	csel	x8, x1, x8, hi  // hi = pmore
  414078:	orr	x20, x8, #0x1
  41407c:	cmn	x20, #0x1
  414080:	b.eq	4140f0 <wcrtomb@plt+0x11880>  // b.none
  414084:	cmp	x20, #0xa
  414088:	b.cc	4140c0 <wcrtomb@plt+0x11850>  // b.lo, b.ul, b.last
  41408c:	mov	w9, #0xc                   	// #12
  414090:	mov	w10, #0x9                   	// #9
  414094:	mov	w8, #0x3                   	// #3
  414098:	udiv	x11, x20, x8
  41409c:	msub	x11, x11, x8, x20
  4140a0:	cbz	x11, 4140c4 <wcrtomb@plt+0x11854>
  4140a4:	add	x10, x10, x9
  4140a8:	add	x10, x10, #0x4
  4140ac:	add	x8, x8, #0x2
  4140b0:	cmp	x10, x20
  4140b4:	add	x9, x9, #0x8
  4140b8:	b.cc	414098 <wcrtomb@plt+0x11828>  // b.lo, b.ul, b.last
  4140bc:	b	4140c4 <wcrtomb@plt+0x11854>
  4140c0:	mov	w8, #0x3                   	// #3
  4140c4:	udiv	x9, x20, x8
  4140c8:	msub	x8, x9, x8, x20
  4140cc:	cbnz	x8, 4140e0 <wcrtomb@plt+0x11870>
  4140d0:	add	x20, x20, #0x2
  4140d4:	cmn	x20, #0x1
  4140d8:	b.ne	414084 <wcrtomb@plt+0x11814>  // b.any
  4140dc:	b	4140f0 <wcrtomb@plt+0x11880>
  4140e0:	sub	x8, x20, #0x1
  4140e4:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  4140e8:	cmp	x8, x9
  4140ec:	b.ls	41410c <wcrtomb@plt+0x1189c>  // b.plast
  4140f0:	mov	w0, wzr
  4140f4:	ldp	x20, x19, [sp, #128]
  4140f8:	ldp	x22, x21, [sp, #112]
  4140fc:	ldp	x24, x23, [sp, #96]
  414100:	ldp	x29, x30, [sp, #80]
  414104:	add	sp, sp, #0x90
  414108:	ret
  41410c:	ldr	x8, [x19, #16]
  414110:	cmp	x20, x8
  414114:	b.ne	414120 <wcrtomb@plt+0x118b0>  // b.any
  414118:	mov	w0, #0x1                   	// #1
  41411c:	b	4140f4 <wcrtomb@plt+0x11884>
  414120:	mov	w1, #0x10                  	// #16
  414124:	mov	x0, x20
  414128:	bl	402480 <calloc@plt>
  41412c:	str	x0, [sp]
  414130:	cbz	x0, 4140f4 <wcrtomb@plt+0x11884>
  414134:	add	x8, x0, x20, lsl #4
  414138:	stp	xzr, xzr, [sp, #24]
  41413c:	stp	x8, x20, [sp, #8]
  414140:	str	x21, [sp, #40]
  414144:	ldr	q0, [x19, #48]
  414148:	mov	x0, sp
  41414c:	mov	x1, x19
  414150:	mov	w2, wzr
  414154:	str	q0, [sp, #48]
  414158:	ldr	q0, [x19, #64]
  41415c:	str	q0, [sp, #64]
  414160:	bl	414254 <wcrtomb@plt+0x119e4>
  414164:	tbz	w0, #0, 414190 <wcrtomb@plt+0x11920>
  414168:	ldr	x0, [x19]
  41416c:	bl	402620 <free@plt>
  414170:	ldr	q0, [sp]
  414174:	mov	w0, #0x1                   	// #1
  414178:	str	q0, [x19]
  41417c:	ldr	q0, [sp, #16]
  414180:	str	q0, [x19, #16]
  414184:	ldr	x8, [sp, #72]
  414188:	str	x8, [x19, #72]
  41418c:	b	4140f4 <wcrtomb@plt+0x11884>
  414190:	ldr	x8, [sp, #72]
  414194:	add	x21, x19, #0x48
  414198:	str	x8, [x21]
  41419c:	ldp	x22, x23, [sp]
  4141a0:	b	4141ac <wcrtomb@plt+0x1193c>
  4141a4:	str	xzr, [x22, #8]
  4141a8:	add	x22, x22, #0x10
  4141ac:	cmp	x22, x23
  4141b0:	b.cs	414230 <wcrtomb@plt+0x119c0>  // b.hs, b.nlast
  4141b4:	ldr	x8, [x22]
  4141b8:	cbz	x8, 4141a8 <wcrtomb@plt+0x11938>
  4141bc:	ldr	x24, [x22, #8]
  4141c0:	cbz	x24, 4141a4 <wcrtomb@plt+0x11934>
  4141c4:	ldr	x1, [x19, #16]
  4141c8:	b	4141f8 <wcrtomb@plt+0x11988>
  4141cc:	str	x20, [x9]
  4141d0:	ldr	x9, [x19, #24]
  4141d4:	add	x9, x9, #0x1
  4141d8:	str	x9, [x19, #24]
  4141dc:	mov	x9, x21
  4141e0:	str	xzr, [x24]
  4141e4:	ldr	x10, [x9]
  4141e8:	str	x10, [x24, #8]
  4141ec:	str	x24, [x9]
  4141f0:	mov	x24, x8
  4141f4:	cbz	x8, 4141a4 <wcrtomb@plt+0x11934>
  4141f8:	ldr	x20, [x24]
  4141fc:	ldr	x8, [x19, #48]
  414200:	mov	x0, x20
  414204:	blr	x8
  414208:	ldr	x1, [x19, #16]
  41420c:	cmp	x0, x1
  414210:	b.cs	414250 <wcrtomb@plt+0x119e0>  // b.hs, b.nlast
  414214:	ldr	x8, [x19]
  414218:	add	x9, x8, x0, lsl #4
  41421c:	ldr	x10, [x9]
  414220:	ldr	x8, [x24, #8]
  414224:	cbz	x10, 4141cc <wcrtomb@plt+0x1195c>
  414228:	add	x9, x9, #0x8
  41422c:	b	4141e4 <wcrtomb@plt+0x11974>
  414230:	mov	x1, sp
  414234:	mov	x0, x19
  414238:	mov	w2, wzr
  41423c:	bl	414254 <wcrtomb@plt+0x119e4>
  414240:	tbz	w0, #0, 414250 <wcrtomb@plt+0x119e0>
  414244:	ldr	x0, [sp]
  414248:	bl	402620 <free@plt>
  41424c:	b	4140f0 <wcrtomb@plt+0x11880>
  414250:	bl	402560 <abort@plt>
  414254:	stp	x29, x30, [sp, #-80]!
  414258:	str	x25, [sp, #16]
  41425c:	stp	x24, x23, [sp, #32]
  414260:	stp	x22, x21, [sp, #48]
  414264:	stp	x20, x19, [sp, #64]
  414268:	ldp	x23, x8, [x1]
  41426c:	mov	x29, sp
  414270:	cmp	x23, x8
  414274:	b.cs	414434 <wcrtomb@plt+0x11bc4>  // b.hs, b.nlast
  414278:	mov	x19, x1
  41427c:	mov	x20, x0
  414280:	add	x24, x0, #0x48
  414284:	tbz	w2, #0, 41434c <wcrtomb@plt+0x11adc>
  414288:	b	4142a0 <wcrtomb@plt+0x11a30>
  41428c:	ldr	x8, [x19, #8]
  414290:	str	xzr, [x23, #8]
  414294:	add	x23, x23, #0x10
  414298:	cmp	x23, x8
  41429c:	b.cs	414434 <wcrtomb@plt+0x11bc4>  // b.hs, b.nlast
  4142a0:	ldr	x9, [x23]
  4142a4:	cbz	x9, 414294 <wcrtomb@plt+0x11a24>
  4142a8:	ldr	x22, [x23, #8]
  4142ac:	cbz	x22, 414290 <wcrtomb@plt+0x11a20>
  4142b0:	ldr	x1, [x20, #16]
  4142b4:	b	4142e4 <wcrtomb@plt+0x11a74>
  4142b8:	str	x21, [x9]
  4142bc:	ldr	x9, [x20, #24]
  4142c0:	add	x9, x9, #0x1
  4142c4:	str	x9, [x20, #24]
  4142c8:	mov	x9, x24
  4142cc:	str	xzr, [x22]
  4142d0:	ldr	x10, [x9]
  4142d4:	str	x10, [x22, #8]
  4142d8:	str	x22, [x9]
  4142dc:	mov	x22, x8
  4142e0:	cbz	x8, 41428c <wcrtomb@plt+0x11a1c>
  4142e4:	ldr	x21, [x22]
  4142e8:	ldr	x8, [x20, #48]
  4142ec:	mov	x0, x21
  4142f0:	blr	x8
  4142f4:	ldr	x1, [x20, #16]
  4142f8:	cmp	x0, x1
  4142fc:	b.cs	414450 <wcrtomb@plt+0x11be0>  // b.hs, b.nlast
  414300:	ldr	x8, [x20]
  414304:	add	x9, x8, x0, lsl #4
  414308:	ldr	x10, [x9]
  41430c:	ldr	x8, [x22, #8]
  414310:	cbz	x10, 4142b8 <wcrtomb@plt+0x11a48>
  414314:	add	x9, x9, #0x8
  414318:	b	4142d0 <wcrtomb@plt+0x11a60>
  41431c:	str	x21, [x8]
  414320:	ldr	x8, [x20, #24]
  414324:	add	x8, x8, #0x1
  414328:	str	x8, [x20, #24]
  41432c:	str	xzr, [x23]
  414330:	ldr	x9, [x19, #24]
  414334:	ldr	x8, [x19, #8]
  414338:	sub	x9, x9, #0x1
  41433c:	str	x9, [x19, #24]
  414340:	add	x23, x23, #0x10
  414344:	cmp	x23, x8
  414348:	b.cs	414434 <wcrtomb@plt+0x11bc4>  // b.hs, b.nlast
  41434c:	ldr	x21, [x23]
  414350:	cbz	x21, 414340 <wcrtomb@plt+0x11ad0>
  414354:	ldr	x22, [x23, #8]
  414358:	ldr	x1, [x20, #16]
  41435c:	cbnz	x22, 41437c <wcrtomb@plt+0x11b0c>
  414360:	b	4143cc <wcrtomb@plt+0x11b5c>
  414364:	add	x9, x9, #0x8
  414368:	ldr	x10, [x9]
  41436c:	str	x10, [x22, #8]
  414370:	str	x22, [x9]
  414374:	mov	x22, x8
  414378:	cbz	x8, 4143c8 <wcrtomb@plt+0x11b58>
  41437c:	ldr	x21, [x22]
  414380:	ldr	x8, [x20, #48]
  414384:	mov	x0, x21
  414388:	blr	x8
  41438c:	ldr	x1, [x20, #16]
  414390:	cmp	x0, x1
  414394:	b.cs	414450 <wcrtomb@plt+0x11be0>  // b.hs, b.nlast
  414398:	ldr	x8, [x20]
  41439c:	add	x9, x8, x0, lsl #4
  4143a0:	ldr	x10, [x9]
  4143a4:	ldr	x8, [x22, #8]
  4143a8:	cbnz	x10, 414364 <wcrtomb@plt+0x11af4>
  4143ac:	str	x21, [x9]
  4143b0:	ldr	x9, [x20, #24]
  4143b4:	add	x9, x9, #0x1
  4143b8:	str	x9, [x20, #24]
  4143bc:	mov	x9, x24
  4143c0:	str	xzr, [x22]
  4143c4:	b	414368 <wcrtomb@plt+0x11af8>
  4143c8:	ldr	x21, [x23]
  4143cc:	str	xzr, [x23, #8]
  4143d0:	ldr	x8, [x20, #48]
  4143d4:	mov	x0, x21
  4143d8:	blr	x8
  4143dc:	ldr	x8, [x20, #16]
  4143e0:	cmp	x0, x8
  4143e4:	b.cs	414450 <wcrtomb@plt+0x11be0>  // b.hs, b.nlast
  4143e8:	ldr	x25, [x20]
  4143ec:	mov	x22, x0
  4143f0:	add	x8, x25, x0, lsl #4
  4143f4:	ldr	x9, [x8]
  4143f8:	cbz	x9, 41431c <wcrtomb@plt+0x11aac>
  4143fc:	ldr	x0, [x24]
  414400:	cbz	x0, 414410 <wcrtomb@plt+0x11ba0>
  414404:	ldr	x8, [x0, #8]
  414408:	str	x8, [x24]
  41440c:	b	41441c <wcrtomb@plt+0x11bac>
  414410:	mov	w0, #0x10                  	// #16
  414414:	bl	4023a0 <malloc@plt>
  414418:	cbz	x0, 414438 <wcrtomb@plt+0x11bc8>
  41441c:	str	x21, [x0]
  414420:	add	x8, x25, x22, lsl #4
  414424:	ldr	x9, [x8, #8]
  414428:	str	x9, [x0, #8]
  41442c:	str	x0, [x8, #8]
  414430:	b	41432c <wcrtomb@plt+0x11abc>
  414434:	mov	w0, #0x1                   	// #1
  414438:	ldp	x20, x19, [sp, #64]
  41443c:	ldp	x22, x21, [sp, #48]
  414440:	ldp	x24, x23, [sp, #32]
  414444:	ldr	x25, [sp, #16]
  414448:	ldp	x29, x30, [sp], #80
  41444c:	ret
  414450:	bl	402560 <abort@plt>
  414454:	stp	x29, x30, [sp, #-80]!
  414458:	str	x25, [sp, #16]
  41445c:	stp	x24, x23, [sp, #32]
  414460:	stp	x22, x21, [sp, #48]
  414464:	stp	x20, x19, [sp, #64]
  414468:	mov	x29, sp
  41446c:	cbz	x1, 414738 <wcrtomb@plt+0x11ec8>
  414470:	mov	x20, x1
  414474:	ldr	x8, [x0, #48]
  414478:	ldr	x1, [x0, #16]
  41447c:	mov	x19, x0
  414480:	mov	x0, x20
  414484:	mov	x21, x2
  414488:	blr	x8
  41448c:	ldr	x8, [x19, #16]
  414490:	cmp	x0, x8
  414494:	b.cs	414738 <wcrtomb@plt+0x11ec8>  // b.hs, b.nlast
  414498:	ldr	x25, [x19]
  41449c:	mov	x22, x0
  4144a0:	add	x23, x25, x0, lsl #4
  4144a4:	ldr	x1, [x23]
  4144a8:	cbz	x1, 4144d0 <wcrtomb@plt+0x11c60>
  4144ac:	cmp	x1, x20
  4144b0:	b.eq	414644 <wcrtomb@plt+0x11dd4>  // b.none
  4144b4:	ldr	x8, [x19, #56]
  4144b8:	mov	x0, x20
  4144bc:	blr	x8
  4144c0:	mov	x24, x23
  4144c4:	tbz	w0, #0, 414658 <wcrtomb@plt+0x11de8>
  4144c8:	ldr	x8, [x24]
  4144cc:	cbnz	x8, 414648 <wcrtomb@plt+0x11dd8>
  4144d0:	ldr	x8, [x19, #40]
  4144d4:	ldp	x10, x9, [x19, #16]
  4144d8:	ldr	s1, [x8, #8]
  4144dc:	ucvtf	s0, x10
  4144e0:	ucvtf	s2, x9
  4144e4:	fmul	s3, s1, s0
  4144e8:	fcmp	s3, s2
  4144ec:	b.pl	414628 <wcrtomb@plt+0x11db8>  // b.nfrst
  4144f0:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4144f4:	add	x9, x9, #0xa30
  4144f8:	cmp	x8, x9
  4144fc:	b.eq	41458c <wcrtomb@plt+0x11d1c>  // b.none
  414500:	mov	w10, #0xcccd                	// #52429
  414504:	movk	w10, #0x3dcc, lsl #16
  414508:	fmov	s3, w10
  41450c:	fcmp	s1, s3
  414510:	b.le	41457c <wcrtomb@plt+0x11d0c>
  414514:	mov	w10, #0x6666                	// #26214
  414518:	movk	w10, #0x3f66, lsl #16
  41451c:	fmov	s3, w10
  414520:	fcmp	s1, s3
  414524:	b.pl	41457c <wcrtomb@plt+0x11d0c>  // b.nfrst
  414528:	ldr	s3, [x8, #12]
  41452c:	mov	w10, #0xcccd                	// #52429
  414530:	movk	w10, #0x3f8c, lsl #16
  414534:	fmov	s4, w10
  414538:	fcmp	s3, s4
  41453c:	b.le	41457c <wcrtomb@plt+0x11d0c>
  414540:	ldr	s3, [x8]
  414544:	fcmp	s3, #0.0
  414548:	b.lt	41457c <wcrtomb@plt+0x11d0c>  // b.tstop
  41454c:	mov	w10, #0xcccd                	// #52429
  414550:	movk	w10, #0x3dcc, lsl #16
  414554:	fmov	s4, w10
  414558:	fadd	s3, s3, s4
  41455c:	fcmp	s3, s1
  414560:	b.pl	41457c <wcrtomb@plt+0x11d0c>  // b.nfrst
  414564:	ldr	s4, [x8, #4]
  414568:	fmov	s5, #1.000000000000000000e+00
  41456c:	fcmp	s4, s5
  414570:	b.hi	41457c <wcrtomb@plt+0x11d0c>  // b.pmore
  414574:	fcmp	s3, s4
  414578:	b.mi	414590 <wcrtomb@plt+0x11d20>  // b.first
  41457c:	mov	w8, #0xcccd                	// #52429
  414580:	movk	w8, #0x3f4c, lsl #16
  414584:	fmov	s1, w8
  414588:	str	x9, [x19, #40]
  41458c:	mov	x8, x9
  414590:	fmul	s3, s1, s0
  414594:	fcmp	s3, s2
  414598:	b.pl	414628 <wcrtomb@plt+0x11db8>  // b.nfrst
  41459c:	ldr	s2, [x8, #12]
  4145a0:	ldrb	w8, [x8, #16]
  4145a4:	fmul	s0, s2, s0
  4145a8:	cmp	w8, #0x0
  4145ac:	fmul	s1, s1, s0
  4145b0:	mov	w8, #0x5f800000            	// #1602224128
  4145b4:	fcsel	s0, s1, s0, eq  // eq = none
  4145b8:	fmov	s1, w8
  4145bc:	fcmp	s0, s1
  4145c0:	b.ge	4146d4 <wcrtomb@plt+0x11e64>  // b.tcont
  4145c4:	fcvtzu	x1, s0
  4145c8:	mov	x0, x19
  4145cc:	bl	414024 <wcrtomb@plt+0x117b4>
  4145d0:	tbz	w0, #0, 4146d4 <wcrtomb@plt+0x11e64>
  4145d4:	ldr	x8, [x19, #48]
  4145d8:	ldr	x1, [x19, #16]
  4145dc:	mov	x0, x20
  4145e0:	blr	x8
  4145e4:	ldr	x8, [x19, #16]
  4145e8:	cmp	x0, x8
  4145ec:	b.cs	414738 <wcrtomb@plt+0x11ec8>  // b.hs, b.nlast
  4145f0:	ldr	x22, [x19]
  4145f4:	mov	x21, x0
  4145f8:	add	x23, x22, x0, lsl #4
  4145fc:	ldr	x1, [x23]
  414600:	cbz	x1, 414628 <wcrtomb@plt+0x11db8>
  414604:	cmp	x1, x20
  414608:	mov	x8, x20
  41460c:	b.eq	414624 <wcrtomb@plt+0x11db4>  // b.none
  414610:	ldr	x8, [x19, #56]
  414614:	mov	x0, x20
  414618:	blr	x8
  41461c:	tbz	w0, #0, 4146fc <wcrtomb@plt+0x11e8c>
  414620:	ldr	x8, [x23]
  414624:	cbnz	x8, 414738 <wcrtomb@plt+0x11ec8>
  414628:	ldr	x8, [x23]
  41462c:	cbz	x8, 414688 <wcrtomb@plt+0x11e18>
  414630:	ldr	x0, [x19, #72]
  414634:	cbz	x0, 4146a4 <wcrtomb@plt+0x11e34>
  414638:	ldr	x8, [x0, #8]
  41463c:	str	x8, [x19, #72]
  414640:	b	4146b0 <wcrtomb@plt+0x11e40>
  414644:	mov	x8, x20
  414648:	mov	w0, wzr
  41464c:	cbz	x21, 4146d8 <wcrtomb@plt+0x11e68>
  414650:	str	x8, [x21]
  414654:	b	4146d8 <wcrtomb@plt+0x11e68>
  414658:	add	x24, x25, x22, lsl #4
  41465c:	ldr	x8, [x24, #8]!
  414660:	cbz	x8, 4144d0 <wcrtomb@plt+0x11c60>
  414664:	ldr	x1, [x8]
  414668:	cmp	x1, x20
  41466c:	b.eq	4146f0 <wcrtomb@plt+0x11e80>  // b.none
  414670:	ldr	x8, [x19, #56]
  414674:	mov	x0, x20
  414678:	blr	x8
  41467c:	ldr	x24, [x24]
  414680:	tbz	w0, #0, 41465c <wcrtomb@plt+0x11dec>
  414684:	b	4144c8 <wcrtomb@plt+0x11c58>
  414688:	str	x20, [x23]
  41468c:	ldur	q0, [x19, #24]
  414690:	mov	w0, #0x1                   	// #1
  414694:	dup	v1.2d, x0
  414698:	add	v0.2d, v0.2d, v1.2d
  41469c:	stur	q0, [x19, #24]
  4146a0:	b	4146d8 <wcrtomb@plt+0x11e68>
  4146a4:	mov	w0, #0x10                  	// #16
  4146a8:	bl	4023a0 <malloc@plt>
  4146ac:	cbz	x0, 4146d4 <wcrtomb@plt+0x11e64>
  4146b0:	str	x20, [x0]
  4146b4:	ldr	x8, [x23, #8]
  4146b8:	str	x8, [x0, #8]
  4146bc:	str	x0, [x23, #8]
  4146c0:	ldr	x8, [x19, #32]
  4146c4:	mov	w0, #0x1                   	// #1
  4146c8:	add	x8, x8, #0x1
  4146cc:	str	x8, [x19, #32]
  4146d0:	b	4146d8 <wcrtomb@plt+0x11e68>
  4146d4:	mov	w0, #0xffffffff            	// #-1
  4146d8:	ldp	x20, x19, [sp, #64]
  4146dc:	ldp	x22, x21, [sp, #48]
  4146e0:	ldp	x24, x23, [sp, #32]
  4146e4:	ldr	x25, [sp, #16]
  4146e8:	ldp	x29, x30, [sp], #80
  4146ec:	ret
  4146f0:	mov	x8, x20
  4146f4:	cbnz	x8, 414648 <wcrtomb@plt+0x11dd8>
  4146f8:	b	4144d0 <wcrtomb@plt+0x11c60>
  4146fc:	add	x21, x22, x21, lsl #4
  414700:	ldr	x8, [x21, #8]!
  414704:	cbz	x8, 414628 <wcrtomb@plt+0x11db8>
  414708:	ldr	x1, [x8]
  41470c:	cmp	x1, x20
  414710:	b.eq	414730 <wcrtomb@plt+0x11ec0>  // b.none
  414714:	ldr	x8, [x19, #56]
  414718:	mov	x0, x20
  41471c:	blr	x8
  414720:	ldr	x21, [x21]
  414724:	tbz	w0, #0, 414700 <wcrtomb@plt+0x11e90>
  414728:	ldr	x8, [x21]
  41472c:	b	414624 <wcrtomb@plt+0x11db4>
  414730:	mov	x8, x20
  414734:	b	414624 <wcrtomb@plt+0x11db4>
  414738:	bl	402560 <abort@plt>
  41473c:	stp	x29, x30, [sp, #-32]!
  414740:	mov	x29, sp
  414744:	add	x2, x29, #0x18
  414748:	str	x19, [sp, #16]
  41474c:	mov	x19, x1
  414750:	bl	414454 <wcrtomb@plt+0x11be4>
  414754:	ldr	x8, [x29, #24]
  414758:	cmp	w0, #0x0
  41475c:	csel	x8, x8, x19, eq  // eq = none
  414760:	ldr	x19, [sp, #16]
  414764:	cmn	w0, #0x1
  414768:	csel	x0, xzr, x8, eq  // eq = none
  41476c:	ldp	x29, x30, [sp], #32
  414770:	ret
  414774:	stp	x29, x30, [sp, #-64]!
  414778:	stp	x22, x21, [sp, #32]
  41477c:	stp	x20, x19, [sp, #48]
  414780:	ldr	x8, [x0, #16]
  414784:	ldr	x9, [x0, #48]
  414788:	mov	x20, x0
  41478c:	mov	x19, x1
  414790:	mov	x0, x1
  414794:	mov	x1, x8
  414798:	str	x23, [sp, #16]
  41479c:	mov	x29, sp
  4147a0:	blr	x9
  4147a4:	ldr	x8, [x20, #16]
  4147a8:	cmp	x0, x8
  4147ac:	b.cs	4149a8 <wcrtomb@plt+0x12138>  // b.hs, b.nlast
  4147b0:	ldr	x23, [x20]
  4147b4:	mov	x21, x0
  4147b8:	add	x22, x23, x0, lsl #4
  4147bc:	ldr	x1, [x22]
  4147c0:	cbz	x1, 414830 <wcrtomb@plt+0x11fc0>
  4147c4:	cmp	x1, x19
  4147c8:	b.eq	4147e0 <wcrtomb@plt+0x11f70>  // b.none
  4147cc:	ldr	x8, [x20, #56]
  4147d0:	mov	x0, x19
  4147d4:	blr	x8
  4147d8:	tbz	w0, #0, 4147f8 <wcrtomb@plt+0x11f88>
  4147dc:	ldr	x19, [x22]
  4147e0:	add	x8, x23, x21, lsl #4
  4147e4:	ldr	x8, [x8, #8]
  4147e8:	cbz	x8, 414838 <wcrtomb@plt+0x11fc8>
  4147ec:	ldr	q0, [x8]
  4147f0:	str	q0, [x22]
  4147f4:	b	414858 <wcrtomb@plt+0x11fe8>
  4147f8:	add	x21, x23, x21, lsl #4
  4147fc:	ldr	x9, [x21, #8]!
  414800:	cbz	x9, 414830 <wcrtomb@plt+0x11fc0>
  414804:	ldr	x1, [x9]
  414808:	cmp	x1, x19
  41480c:	b.eq	414844 <wcrtomb@plt+0x11fd4>  // b.none
  414810:	ldr	x8, [x20, #56]
  414814:	mov	x0, x19
  414818:	blr	x8
  41481c:	ldr	x8, [x21]
  414820:	tbnz	w0, #0, 41484c <wcrtomb@plt+0x11fdc>
  414824:	ldr	x9, [x8, #8]!
  414828:	mov	x21, x8
  41482c:	cbnz	x9, 414804 <wcrtomb@plt+0x11f94>
  414830:	mov	x19, xzr
  414834:	b	414990 <wcrtomb@plt+0x12120>
  414838:	str	xzr, [x22]
  41483c:	cbnz	x19, 41486c <wcrtomb@plt+0x11ffc>
  414840:	b	414990 <wcrtomb@plt+0x12120>
  414844:	mov	x8, x9
  414848:	b	414850 <wcrtomb@plt+0x11fe0>
  41484c:	ldr	x19, [x8]
  414850:	ldr	x9, [x8, #8]
  414854:	str	x9, [x21]
  414858:	str	xzr, [x8]
  41485c:	ldr	x9, [x20, #72]
  414860:	str	x9, [x8, #8]
  414864:	str	x8, [x20, #72]
  414868:	cbz	x19, 414990 <wcrtomb@plt+0x12120>
  41486c:	ldr	x8, [x20, #32]
  414870:	sub	x8, x8, #0x1
  414874:	str	x8, [x20, #32]
  414878:	ldr	x8, [x22]
  41487c:	cbnz	x8, 414990 <wcrtomb@plt+0x12120>
  414880:	ldp	x10, x9, [x20, #16]
  414884:	ldr	x8, [x20, #40]
  414888:	sub	x9, x9, #0x1
  41488c:	str	x9, [x20, #24]
  414890:	ldr	s2, [x8]
  414894:	ucvtf	s0, x10
  414898:	ucvtf	s1, x9
  41489c:	fmul	s3, s2, s0
  4148a0:	fcmp	s3, s1
  4148a4:	b.le	414990 <wcrtomb@plt+0x12120>
  4148a8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4148ac:	add	x9, x9, #0xa30
  4148b0:	cmp	x8, x9
  4148b4:	b.eq	41493c <wcrtomb@plt+0x120cc>  // b.none
  4148b8:	ldr	s3, [x8, #8]
  4148bc:	mov	w10, #0xcccd                	// #52429
  4148c0:	movk	w10, #0x3dcc, lsl #16
  4148c4:	fmov	s4, w10
  4148c8:	fcmp	s3, s4
  4148cc:	b.le	414934 <wcrtomb@plt+0x120c4>
  4148d0:	mov	w10, #0x6666                	// #26214
  4148d4:	movk	w10, #0x3f66, lsl #16
  4148d8:	fmov	s4, w10
  4148dc:	fcmp	s3, s4
  4148e0:	b.pl	414934 <wcrtomb@plt+0x120c4>  // b.nfrst
  4148e4:	fcmp	s2, #0.0
  4148e8:	b.lt	414934 <wcrtomb@plt+0x120c4>  // b.tstop
  4148ec:	ldr	s4, [x8, #12]
  4148f0:	mov	w10, #0xcccd                	// #52429
  4148f4:	movk	w10, #0x3f8c, lsl #16
  4148f8:	fmov	s5, w10
  4148fc:	fcmp	s4, s5
  414900:	b.le	414934 <wcrtomb@plt+0x120c4>
  414904:	mov	w10, #0xcccd                	// #52429
  414908:	movk	w10, #0x3dcc, lsl #16
  41490c:	fmov	s4, w10
  414910:	fadd	s4, s2, s4
  414914:	fcmp	s4, s3
  414918:	b.pl	414934 <wcrtomb@plt+0x120c4>  // b.nfrst
  41491c:	ldr	s3, [x8, #4]
  414920:	fmov	s5, #1.000000000000000000e+00
  414924:	fcmp	s3, s5
  414928:	b.hi	414934 <wcrtomb@plt+0x120c4>  // b.pmore
  41492c:	fcmp	s4, s3
  414930:	b.mi	414940 <wcrtomb@plt+0x120d0>  // b.first
  414934:	fmov	s2, wzr
  414938:	str	x9, [x20, #40]
  41493c:	mov	x8, x9
  414940:	fmul	s2, s2, s0
  414944:	fcmp	s2, s1
  414948:	b.le	414990 <wcrtomb@plt+0x12120>
  41494c:	ldr	s1, [x8, #4]
  414950:	ldrb	w9, [x8, #16]
  414954:	fmul	s0, s1, s0
  414958:	cbnz	w9, 414964 <wcrtomb@plt+0x120f4>
  41495c:	ldr	s1, [x8, #8]
  414960:	fmul	s0, s0, s1
  414964:	fcvtzu	x1, s0
  414968:	mov	x0, x20
  41496c:	bl	414024 <wcrtomb@plt+0x117b4>
  414970:	tbnz	w0, #0, 414990 <wcrtomb@plt+0x12120>
  414974:	ldr	x0, [x20, #72]
  414978:	cbz	x0, 41498c <wcrtomb@plt+0x1211c>
  41497c:	ldr	x21, [x0, #8]
  414980:	bl	402620 <free@plt>
  414984:	mov	x0, x21
  414988:	cbnz	x21, 41497c <wcrtomb@plt+0x1210c>
  41498c:	str	xzr, [x20, #72]
  414990:	mov	x0, x19
  414994:	ldp	x20, x19, [sp, #48]
  414998:	ldp	x22, x21, [sp, #32]
  41499c:	ldr	x23, [sp, #16]
  4149a0:	ldp	x29, x30, [sp], #64
  4149a4:	ret
  4149a8:	bl	402560 <abort@plt>
  4149ac:	sub	sp, sp, #0xc0
  4149b0:	cmp	x0, x1
  4149b4:	stp	x29, x30, [sp, #128]
  4149b8:	str	x23, [sp, #144]
  4149bc:	stp	x22, x21, [sp, #160]
  4149c0:	stp	x20, x19, [sp, #176]
  4149c4:	add	x29, sp, #0x80
  4149c8:	b.eq	414aa4 <wcrtomb@plt+0x12234>  // b.none
  4149cc:	mov	x19, x1
  4149d0:	mov	x20, x0
  4149d4:	bl	402630 <__ctype_get_mb_cur_max@plt>
  4149d8:	cmp	x0, #0x1
  4149dc:	b.ls	414aac <wcrtomb@plt+0x1223c>  // b.plast
  4149e0:	str	x20, [sp, #80]
  4149e4:	strb	wzr, [sp, #64]
  4149e8:	stur	xzr, [sp, #68]
  4149ec:	strb	wzr, [sp, #76]
  4149f0:	str	x19, [sp, #16]
  4149f4:	strb	wzr, [sp]
  4149f8:	stur	xzr, [sp, #4]
  4149fc:	add	x0, sp, #0x40
  414a00:	strb	wzr, [sp, #12]
  414a04:	bl	414bc4 <wcrtomb@plt+0x12354>
  414a08:	ldrb	w8, [sp, #96]
  414a0c:	cbz	w8, 414a18 <wcrtomb@plt+0x121a8>
  414a10:	ldr	w8, [sp, #100]
  414a14:	cbz	w8, 414b1c <wcrtomb@plt+0x122ac>
  414a18:	mov	x0, sp
  414a1c:	bl	414bc4 <wcrtomb@plt+0x12354>
  414a20:	ldrb	w8, [sp, #32]
  414a24:	cbz	w8, 414a30 <wcrtomb@plt+0x121c0>
  414a28:	ldr	w9, [sp, #36]
  414a2c:	cbz	w9, 414b1c <wcrtomb@plt+0x122ac>
  414a30:	ldrb	w9, [sp, #96]
  414a34:	cbz	w9, 414a60 <wcrtomb@plt+0x121f0>
  414a38:	cbz	w8, 414b78 <wcrtomb@plt+0x12308>
  414a3c:	ldr	w0, [sp, #100]
  414a40:	bl	402810 <towlower@plt>
  414a44:	ldr	w8, [sp, #36]
  414a48:	mov	w19, w0
  414a4c:	mov	w0, w8
  414a50:	bl	402810 <towlower@plt>
  414a54:	sub	w0, w19, w0
  414a58:	cbz	w0, 414a84 <wcrtomb@plt+0x12214>
  414a5c:	b	414b60 <wcrtomb@plt+0x122f0>
  414a60:	cbnz	w8, 414b80 <wcrtomb@plt+0x12310>
  414a64:	ldr	x2, [sp, #88]
  414a68:	ldr	x8, [sp, #24]
  414a6c:	cmp	x2, x8
  414a70:	b.ne	414b88 <wcrtomb@plt+0x12318>  // b.any
  414a74:	ldr	x0, [sp, #80]
  414a78:	ldr	x1, [sp, #16]
  414a7c:	bl	4025d0 <memcmp@plt>
  414a80:	cbnz	w0, 414b60 <wcrtomb@plt+0x122f0>
  414a84:	ldp	x9, x8, [sp, #80]
  414a88:	ldp	x11, x10, [sp, #16]
  414a8c:	strb	wzr, [sp, #76]
  414a90:	add	x8, x9, x8
  414a94:	add	x9, x11, x10
  414a98:	str	x8, [sp, #80]
  414a9c:	str	x9, [sp, #16]
  414aa0:	b	4149fc <wcrtomb@plt+0x1218c>
  414aa4:	mov	w0, wzr
  414aa8:	b	414b60 <wcrtomb@plt+0x122f0>
  414aac:	bl	402610 <__ctype_b_loc@plt>
  414ab0:	ldr	x22, [x0]
  414ab4:	ldrb	w21, [x20]
  414ab8:	ldrh	w8, [x22, x21, lsl #1]
  414abc:	tbnz	w8, #8, 414ad4 <wcrtomb@plt+0x12264>
  414ac0:	ldrb	w23, [x19]
  414ac4:	ldrh	w8, [x22, x23, lsl #1]
  414ac8:	tbnz	w8, #8, 414af0 <wcrtomb@plt+0x12280>
  414acc:	cbnz	w21, 414b04 <wcrtomb@plt+0x12294>
  414ad0:	b	414b14 <wcrtomb@plt+0x122a4>
  414ad4:	bl	402330 <__ctype_tolower_loc@plt>
  414ad8:	ldr	x8, [x0]
  414adc:	lsl	x9, x21, #2
  414ae0:	ldrb	w21, [x8, x9]
  414ae4:	ldrb	w23, [x19]
  414ae8:	ldrh	w8, [x22, x23, lsl #1]
  414aec:	tbz	w8, #8, 414acc <wcrtomb@plt+0x1225c>
  414af0:	bl	402330 <__ctype_tolower_loc@plt>
  414af4:	ldr	x8, [x0]
  414af8:	lsl	x9, x23, #2
  414afc:	ldrb	w23, [x8, x9]
  414b00:	cbz	w21, 414b14 <wcrtomb@plt+0x122a4>
  414b04:	add	x20, x20, #0x1
  414b08:	cmp	w21, w23
  414b0c:	add	x19, x19, #0x1
  414b10:	b.eq	414ab4 <wcrtomb@plt+0x12244>  // b.none
  414b14:	sub	w0, w21, w23
  414b18:	b	414b60 <wcrtomb@plt+0x122f0>
  414b1c:	add	x0, sp, #0x40
  414b20:	bl	414bc4 <wcrtomb@plt+0x12354>
  414b24:	ldrb	w8, [sp, #96]
  414b28:	mov	w0, #0x1                   	// #1
  414b2c:	cbz	w8, 414b60 <wcrtomb@plt+0x122f0>
  414b30:	ldr	w8, [sp, #100]
  414b34:	cbnz	w8, 414b60 <wcrtomb@plt+0x122f0>
  414b38:	mov	x0, sp
  414b3c:	bl	414bc4 <wcrtomb@plt+0x12354>
  414b40:	ldrb	w8, [sp, #32]
  414b44:	ldr	w9, [sp, #36]
  414b48:	cmp	w8, #0x0
  414b4c:	cset	w8, eq  // eq = none
  414b50:	cmp	w9, #0x0
  414b54:	cset	w9, ne  // ne = any
  414b58:	orr	w8, w8, w9
  414b5c:	sbfx	w0, w8, #0, #1
  414b60:	ldp	x20, x19, [sp, #176]
  414b64:	ldp	x22, x21, [sp, #160]
  414b68:	ldr	x23, [sp, #144]
  414b6c:	ldp	x29, x30, [sp, #128]
  414b70:	add	sp, sp, #0xc0
  414b74:	ret
  414b78:	mov	w0, #0xffffffff            	// #-1
  414b7c:	b	414b60 <wcrtomb@plt+0x122f0>
  414b80:	mov	w0, #0x1                   	// #1
  414b84:	b	414b60 <wcrtomb@plt+0x122f0>
  414b88:	ldr	x0, [sp, #80]
  414b8c:	ldr	x1, [sp, #16]
  414b90:	cmp	x2, x8
  414b94:	b.cs	414bac <wcrtomb@plt+0x1233c>  // b.hs, b.nlast
  414b98:	bl	4025d0 <memcmp@plt>
  414b9c:	cmp	w0, #0x1
  414ba0:	mov	w8, #0xffffffff            	// #-1
  414ba4:	cneg	w0, w8, ge  // ge = tcont
  414ba8:	b	414b60 <wcrtomb@plt+0x122f0>
  414bac:	mov	x2, x8
  414bb0:	bl	4025d0 <memcmp@plt>
  414bb4:	cmp	w0, #0x0
  414bb8:	mov	w8, #0x1                   	// #1
  414bbc:	cneg	w0, w8, lt  // lt = tstop
  414bc0:	b	414b60 <wcrtomb@plt+0x122f0>
  414bc4:	stp	x29, x30, [sp, #-48]!
  414bc8:	stp	x22, x21, [sp, #16]
  414bcc:	stp	x20, x19, [sp, #32]
  414bd0:	ldrb	w8, [x0, #12]
  414bd4:	mov	x29, sp
  414bd8:	cbz	w8, 414bec <wcrtomb@plt+0x1237c>
  414bdc:	ldp	x20, x19, [sp, #32]
  414be0:	ldp	x22, x21, [sp, #16]
  414be4:	ldp	x29, x30, [sp], #48
  414be8:	ret
  414bec:	ldrb	w8, [x0]
  414bf0:	ldr	x20, [x0, #16]
  414bf4:	mov	x19, x0
  414bf8:	cbz	w8, 414c4c <wcrtomb@plt+0x123dc>
  414bfc:	add	x22, x19, #0x24
  414c00:	bl	402630 <__ctype_get_mb_cur_max@plt>
  414c04:	mov	x1, x0
  414c08:	mov	x0, x20
  414c0c:	bl	416a9c <wcrtomb@plt+0x1422c>
  414c10:	add	x21, x19, #0x4
  414c14:	mov	x2, x0
  414c18:	mov	x0, x22
  414c1c:	mov	x1, x20
  414c20:	mov	x3, x21
  414c24:	bl	419da4 <wcrtomb@plt+0x17534>
  414c28:	cmn	x0, #0x2
  414c2c:	str	x0, [x19, #24]
  414c30:	b.eq	414cbc <wcrtomb@plt+0x1244c>  // b.none
  414c34:	cbz	x0, 414c84 <wcrtomb@plt+0x12414>
  414c38:	cmn	x0, #0x1
  414c3c:	b.ne	414ca0 <wcrtomb@plt+0x12430>  // b.any
  414c40:	mov	w8, #0x1                   	// #1
  414c44:	str	x8, [x19, #24]
  414c48:	b	414cc8 <wcrtomb@plt+0x12458>
  414c4c:	ldrb	w8, [x20]
  414c50:	adrp	x10, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  414c54:	add	x10, x10, #0x4a4
  414c58:	lsr	w9, w8, #3
  414c5c:	and	x9, x9, #0x1c
  414c60:	ldr	w9, [x10, x9]
  414c64:	lsr	w8, w9, w8
  414c68:	tbz	w8, #0, 414ce4 <wcrtomb@plt+0x12474>
  414c6c:	mov	w8, #0x1                   	// #1
  414c70:	str	x8, [x19, #24]
  414c74:	ldrb	w9, [x20]
  414c78:	strb	w8, [x19, #32]
  414c7c:	str	w9, [x19, #36]
  414c80:	b	414ccc <wcrtomb@plt+0x1245c>
  414c84:	ldr	x8, [x19, #16]
  414c88:	mov	w9, #0x1                   	// #1
  414c8c:	str	x9, [x19, #24]
  414c90:	ldrb	w8, [x8]
  414c94:	cbnz	w8, 414cfc <wcrtomb@plt+0x1248c>
  414c98:	ldr	w8, [x22]
  414c9c:	cbnz	w8, 414d1c <wcrtomb@plt+0x124ac>
  414ca0:	mov	w8, #0x1                   	// #1
  414ca4:	mov	x0, x21
  414ca8:	strb	w8, [x19, #32]
  414cac:	bl	402580 <mbsinit@plt>
  414cb0:	cbz	w0, 414ccc <wcrtomb@plt+0x1245c>
  414cb4:	strb	wzr, [x19]
  414cb8:	b	414ccc <wcrtomb@plt+0x1245c>
  414cbc:	ldr	x0, [x19, #16]
  414cc0:	bl	402270 <strlen@plt>
  414cc4:	str	x0, [x19, #24]
  414cc8:	strb	wzr, [x19, #32]
  414ccc:	mov	w8, #0x1                   	// #1
  414cd0:	strb	w8, [x19, #12]
  414cd4:	ldp	x20, x19, [sp, #32]
  414cd8:	ldp	x22, x21, [sp, #16]
  414cdc:	ldp	x29, x30, [sp], #48
  414ce0:	ret
  414ce4:	add	x0, x19, #0x4
  414ce8:	bl	402580 <mbsinit@plt>
  414cec:	cbz	w0, 414d3c <wcrtomb@plt+0x124cc>
  414cf0:	mov	w8, #0x1                   	// #1
  414cf4:	strb	w8, [x19]
  414cf8:	b	414bfc <wcrtomb@plt+0x1238c>
  414cfc:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d00:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d04:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d08:	add	x0, x0, #0xa97
  414d0c:	add	x1, x1, #0xa5b
  414d10:	add	x3, x3, #0xa67
  414d14:	mov	w2, #0xb2                  	// #178
  414d18:	bl	4027d0 <__assert_fail@plt>
  414d1c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d20:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d24:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d28:	add	x0, x0, #0xaae
  414d2c:	add	x1, x1, #0xa5b
  414d30:	add	x3, x3, #0xa67
  414d34:	mov	w2, #0xb3                  	// #179
  414d38:	bl	4027d0 <__assert_fail@plt>
  414d3c:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d40:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d44:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  414d48:	add	x0, x0, #0xa44
  414d4c:	add	x1, x1, #0xa5b
  414d50:	add	x3, x3, #0xa67
  414d54:	mov	w2, #0x96                  	// #150
  414d58:	bl	4027d0 <__assert_fail@plt>
  414d5c:	ldr	x8, [x0, #16]
  414d60:	add	x8, x8, x1
  414d64:	str	x8, [x0, #16]
  414d68:	ret
  414d6c:	stp	x29, x30, [sp, #-48]!
  414d70:	stp	x20, x19, [sp, #32]
  414d74:	ldrb	w8, [x1]
  414d78:	mov	x19, x1
  414d7c:	mov	x20, x0
  414d80:	str	x21, [sp, #16]
  414d84:	mov	x29, sp
  414d88:	strb	w8, [x0]
  414d8c:	cbz	w8, 414d9c <wcrtomb@plt+0x1252c>
  414d90:	ldur	x8, [x19, #4]
  414d94:	stur	x8, [x20, #4]
  414d98:	b	414da0 <wcrtomb@plt+0x12530>
  414d9c:	stur	xzr, [x20, #4]
  414da0:	ldrb	w8, [x19, #12]
  414da4:	strb	w8, [x20, #12]
  414da8:	ldr	x1, [x19, #16]
  414dac:	add	x8, x19, #0x28
  414db0:	cmp	x1, x8
  414db4:	b.ne	414dcc <wcrtomb@plt+0x1255c>  // b.any
  414db8:	ldr	x2, [x19, #24]
  414dbc:	add	x21, x20, #0x28
  414dc0:	mov	x0, x21
  414dc4:	bl	402210 <memcpy@plt>
  414dc8:	mov	x1, x21
  414dcc:	str	x1, [x20, #16]
  414dd0:	ldr	x8, [x19, #24]
  414dd4:	str	x8, [x20, #24]
  414dd8:	ldrb	w8, [x19, #32]
  414ddc:	strb	w8, [x20, #32]
  414de0:	cbz	w8, 414dec <wcrtomb@plt+0x1257c>
  414de4:	ldr	w8, [x19, #36]
  414de8:	str	w8, [x20, #36]
  414dec:	ldp	x20, x19, [sp, #32]
  414df0:	ldr	x21, [sp, #16]
  414df4:	ldp	x29, x30, [sp], #48
  414df8:	ret
  414dfc:	and	w1, w1, #0xff
  414e00:	and	w8, w2, #0xff
  414e04:	cmp	w1, w8
  414e08:	b.ne	414e14 <wcrtomb@plt+0x125a4>  // b.any
  414e0c:	mov	x2, x3
  414e10:	b	4026d0 <memchr@plt>
  414e14:	cbz	x3, 414e40 <wcrtomb@plt+0x125d0>
  414e18:	and	x9, x0, #0x7
  414e1c:	cbz	x9, 414e40 <wcrtomb@plt+0x125d0>
  414e20:	ldrb	w9, [x0]
  414e24:	cmp	w1, w9
  414e28:	b.eq	414edc <wcrtomb@plt+0x1266c>  // b.none
  414e2c:	cmp	w8, w9
  414e30:	b.eq	414edc <wcrtomb@plt+0x1266c>  // b.none
  414e34:	subs	x3, x3, #0x1
  414e38:	add	x0, x0, #0x1
  414e3c:	b.ne	414e18 <wcrtomb@plt+0x125a8>  // b.any
  414e40:	mov	w12, w1
  414e44:	mov	w13, w8
  414e48:	bfi	w12, w12, #8, #8
  414e4c:	bfi	w13, w13, #8, #8
  414e50:	mov	x11, #0xfefefefefefefefe    	// #-72340172838076674
  414e54:	bfi	x12, x12, #16, #16
  414e58:	bfi	x13, x13, #16, #16
  414e5c:	movk	x11, #0xfeff
  414e60:	bfi	x12, x12, #32, #32
  414e64:	bfi	x13, x13, #32, #32
  414e68:	mov	x9, x3
  414e6c:	subs	x3, x3, #0x8
  414e70:	mov	x10, x0
  414e74:	b.cc	414ea8 <wcrtomb@plt+0x12638>  // b.lo, b.ul, b.last
  414e78:	mov	x0, x10
  414e7c:	ldr	x14, [x0], #8
  414e80:	eor	x15, x14, x12
  414e84:	eor	x14, x14, x13
  414e88:	add	x16, x15, x11
  414e8c:	add	x17, x14, x11
  414e90:	bic	x15, x16, x15
  414e94:	bic	x14, x17, x14
  414e98:	orr	x14, x15, x14
  414e9c:	and	x14, x14, #0x8080808080808080
  414ea0:	cbz	x14, 414e68 <wcrtomb@plt+0x125f8>
  414ea4:	b	414eac <wcrtomb@plt+0x1263c>
  414ea8:	cbz	x9, 414ed0 <wcrtomb@plt+0x12660>
  414eac:	mov	x11, xzr
  414eb0:	ldrb	w12, [x10, x11]
  414eb4:	cmp	w1, w12
  414eb8:	b.eq	414ed8 <wcrtomb@plt+0x12668>  // b.none
  414ebc:	cmp	w8, w12
  414ec0:	b.eq	414ed8 <wcrtomb@plt+0x12668>  // b.none
  414ec4:	add	x11, x11, #0x1
  414ec8:	cmp	x9, x11
  414ecc:	b.ne	414eb0 <wcrtomb@plt+0x12640>  // b.any
  414ed0:	mov	x0, xzr
  414ed4:	ret
  414ed8:	add	x0, x10, x11
  414edc:	ret
  414ee0:	sub	sp, sp, #0xe0
  414ee4:	stp	x29, x30, [sp, #208]
  414ee8:	add	x29, sp, #0xd0
  414eec:	stp	x3, x4, [x29, #-72]
  414ef0:	stp	x5, x6, [x29, #-56]
  414ef4:	stur	x7, [x29, #-40]
  414ef8:	stp	q1, q2, [sp, #16]
  414efc:	stp	q3, q4, [sp, #48]
  414f00:	str	q0, [sp]
  414f04:	stp	q5, q6, [sp, #80]
  414f08:	str	q7, [sp, #112]
  414f0c:	tbnz	w2, #6, 414f18 <wcrtomb@plt+0x126a8>
  414f10:	mov	w3, wzr
  414f14:	b	414f70 <wcrtomb@plt+0x12700>
  414f18:	mov	x9, #0xffffffffffffffd8    	// #-40
  414f1c:	mov	x11, sp
  414f20:	sub	x12, x29, #0x48
  414f24:	movk	x9, #0xff80, lsl #32
  414f28:	add	x10, x29, #0x10
  414f2c:	mov	x8, #0xffffffffffffffd8    	// #-40
  414f30:	add	x11, x11, #0x80
  414f34:	add	x12, x12, #0x28
  414f38:	stp	x11, x9, [x29, #-16]
  414f3c:	stp	x10, x12, [x29, #-32]
  414f40:	tbz	w8, #31, 414f60 <wcrtomb@plt+0x126f0>
  414f44:	add	w9, w8, #0x8
  414f48:	cmn	w8, #0x8
  414f4c:	stur	w9, [x29, #-8]
  414f50:	b.gt	414f60 <wcrtomb@plt+0x126f0>
  414f54:	ldur	x9, [x29, #-24]
  414f58:	add	x8, x9, x8
  414f5c:	b	414f6c <wcrtomb@plt+0x126fc>
  414f60:	ldur	x8, [x29, #-32]
  414f64:	add	x9, x8, #0x8
  414f68:	stur	x9, [x29, #-32]
  414f6c:	ldr	w3, [x8]
  414f70:	bl	4027b0 <openat@plt>
  414f74:	bl	416ad4 <wcrtomb@plt+0x14264>
  414f78:	ldp	x29, x30, [sp, #208]
  414f7c:	add	sp, sp, #0xe0
  414f80:	ret
  414f84:	stp	x29, x30, [sp, #-48]!
  414f88:	str	x21, [sp, #16]
  414f8c:	stp	x20, x19, [sp, #32]
  414f90:	mov	x29, sp
  414f94:	mov	x19, x0
  414f98:	bl	4027e0 <__errno_location@plt>
  414f9c:	ldr	w21, [x0]
  414fa0:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  414fa4:	add	x8, x8, #0x740
  414fa8:	cmp	x19, #0x0
  414fac:	mov	x20, x0
  414fb0:	csel	x0, x8, x19, eq  // eq = none
  414fb4:	mov	w1, #0x38                  	// #56
  414fb8:	bl	417500 <wcrtomb@plt+0x14c90>
  414fbc:	str	w21, [x20]
  414fc0:	ldp	x20, x19, [sp, #32]
  414fc4:	ldr	x21, [sp, #16]
  414fc8:	ldp	x29, x30, [sp], #48
  414fcc:	ret
  414fd0:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  414fd4:	add	x8, x8, #0x740
  414fd8:	cmp	x0, #0x0
  414fdc:	csel	x8, x8, x0, eq  // eq = none
  414fe0:	ldr	w0, [x8]
  414fe4:	ret
  414fe8:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  414fec:	add	x8, x8, #0x740
  414ff0:	cmp	x0, #0x0
  414ff4:	csel	x8, x8, x0, eq  // eq = none
  414ff8:	str	w1, [x8]
  414ffc:	ret
  415000:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  415004:	add	x8, x8, #0x740
  415008:	cmp	x0, #0x0
  41500c:	ubfx	w9, w1, #5, #3
  415010:	csel	x8, x8, x0, eq  // eq = none
  415014:	add	x8, x8, w9, uxtw #2
  415018:	ldr	w9, [x8, #8]
  41501c:	lsr	w10, w9, w1
  415020:	and	w0, w10, #0x1
  415024:	and	w10, w2, #0x1
  415028:	eor	w10, w0, w10
  41502c:	lsl	w10, w10, w1
  415030:	eor	w9, w10, w9
  415034:	str	w9, [x8, #8]
  415038:	ret
  41503c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  415040:	add	x8, x8, #0x740
  415044:	cmp	x0, #0x0
  415048:	csel	x8, x8, x0, eq  // eq = none
  41504c:	ldr	w0, [x8, #4]
  415050:	str	w1, [x8, #4]
  415054:	ret
  415058:	stp	x29, x30, [sp, #-16]!
  41505c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  415060:	add	x8, x8, #0x740
  415064:	cmp	x0, #0x0
  415068:	csel	x8, x8, x0, eq  // eq = none
  41506c:	mov	w9, #0xa                   	// #10
  415070:	mov	x29, sp
  415074:	str	w9, [x8]
  415078:	cbz	x1, 41508c <wcrtomb@plt+0x1281c>
  41507c:	cbz	x2, 41508c <wcrtomb@plt+0x1281c>
  415080:	stp	x1, x2, [x8, #40]
  415084:	ldp	x29, x30, [sp], #16
  415088:	ret
  41508c:	bl	402560 <abort@plt>
  415090:	sub	sp, sp, #0x60
  415094:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  415098:	add	x8, x8, #0x740
  41509c:	cmp	x4, #0x0
  4150a0:	stp	x29, x30, [sp, #16]
  4150a4:	str	x25, [sp, #32]
  4150a8:	stp	x24, x23, [sp, #48]
  4150ac:	stp	x22, x21, [sp, #64]
  4150b0:	stp	x20, x19, [sp, #80]
  4150b4:	add	x29, sp, #0x10
  4150b8:	mov	x19, x3
  4150bc:	mov	x20, x2
  4150c0:	mov	x21, x1
  4150c4:	mov	x22, x0
  4150c8:	csel	x24, x8, x4, eq  // eq = none
  4150cc:	bl	4027e0 <__errno_location@plt>
  4150d0:	ldp	w4, w5, [x24]
  4150d4:	ldp	x7, x8, [x24, #40]
  4150d8:	ldr	w25, [x0]
  4150dc:	mov	x23, x0
  4150e0:	add	x6, x24, #0x8
  4150e4:	mov	x0, x22
  4150e8:	mov	x1, x21
  4150ec:	mov	x2, x20
  4150f0:	mov	x3, x19
  4150f4:	str	x8, [sp]
  4150f8:	bl	41511c <wcrtomb@plt+0x128ac>
  4150fc:	str	w25, [x23]
  415100:	ldp	x20, x19, [sp, #80]
  415104:	ldp	x22, x21, [sp, #64]
  415108:	ldp	x24, x23, [sp, #48]
  41510c:	ldr	x25, [sp, #32]
  415110:	ldp	x29, x30, [sp, #16]
  415114:	add	sp, sp, #0x60
  415118:	ret
  41511c:	sub	sp, sp, #0x120
  415120:	stp	x29, x30, [sp, #192]
  415124:	add	x29, sp, #0xc0
  415128:	ldr	x8, [x29, #96]
  41512c:	stp	x28, x27, [sp, #208]
  415130:	stp	x26, x25, [sp, #224]
  415134:	stp	x24, x23, [sp, #240]
  415138:	stp	x22, x21, [sp, #256]
  41513c:	stp	x20, x19, [sp, #272]
  415140:	str	x7, [sp, #96]
  415144:	stur	x6, [x29, #-40]
  415148:	mov	w20, w5
  41514c:	mov	w24, w4
  415150:	mov	x22, x3
  415154:	mov	x19, x2
  415158:	mov	x23, x1
  41515c:	stur	x8, [x29, #-88]
  415160:	mov	x28, x0
  415164:	bl	402630 <__ctype_get_mb_cur_max@plt>
  415168:	mov	w8, wzr
  41516c:	mov	w15, wzr
  415170:	stp	wzr, w20, [sp, #84]
  415174:	ubfx	w21, w20, #1, #1
  415178:	mov	w20, w24
  41517c:	add	x9, x19, #0x1
  415180:	mov	w14, #0x1                   	// #1
  415184:	str	x0, [sp, #32]
  415188:	str	xzr, [sp, #72]
  41518c:	stur	xzr, [x29, #-64]
  415190:	stur	xzr, [x29, #-32]
  415194:	stur	x9, [x29, #-80]
  415198:	cmp	w20, #0xa
  41519c:	b.hi	4160c8 <wcrtomb@plt+0x13858>  // b.pmore
  4151a0:	adrp	x12, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4151a4:	mov	w9, w20
  4151a8:	add	x12, x12, #0xac0
  4151ac:	adr	x10, 4151d0 <wcrtomb@plt+0x12960>
  4151b0:	ldrb	w11, [x12, x9]
  4151b4:	add	x10, x10, x11, lsl #2
  4151b8:	mov	x24, x23
  4151bc:	mov	x27, xzr
  4151c0:	mov	w17, wzr
  4151c4:	mov	w16, #0x1                   	// #1
  4151c8:	mov	x23, x22
  4151cc:	br	x10
  4151d0:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4151d4:	add	x25, x25, #0xc1c
  4151d8:	mov	w2, #0x5                   	// #5
  4151dc:	mov	x0, xzr
  4151e0:	mov	x1, x25
  4151e4:	mov	w27, w15
  4151e8:	mov	w26, w14
  4151ec:	mov	w22, w20
  4151f0:	bl	402740 <dcgettext@plt>
  4151f4:	mov	x20, x0
  4151f8:	cmp	x0, x25
  4151fc:	b.ne	4153cc <wcrtomb@plt+0x12b5c>  // b.any
  415200:	bl	42ad2c <_obstack_memory_used@@Base+0x10b98>
  415204:	ldrb	w8, [x0]
  415208:	and	w8, w8, #0xffffffdf
  41520c:	cmp	w8, #0x47
  415210:	b.eq	41535c <wcrtomb@plt+0x12aec>  // b.none
  415214:	cmp	w8, #0x55
  415218:	mov	w9, w22
  41521c:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415220:	ldrb	w8, [x0, #1]
  415224:	and	w8, w8, #0xffffffdf
  415228:	cmp	w8, #0x54
  41522c:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415230:	ldrb	w8, [x0, #2]
  415234:	and	w8, w8, #0xffffffdf
  415238:	cmp	w8, #0x46
  41523c:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415240:	ldrb	w8, [x0, #3]
  415244:	cmp	w8, #0x2d
  415248:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  41524c:	ldrb	w8, [x0, #4]
  415250:	cmp	w8, #0x38
  415254:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415258:	ldrb	w8, [x0, #5]
  41525c:	cbnz	w8, 4153b4 <wcrtomb@plt+0x12b44>
  415260:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  415264:	add	x20, x20, #0xc1e
  415268:	b	4153cc <wcrtomb@plt+0x12b5c>
  41526c:	mov	w8, #0x1                   	// #1
  415270:	b	4152f0 <wcrtomb@plt+0x12a80>
  415274:	tbnz	w21, #0, 4152f0 <wcrtomb@plt+0x12a80>
  415278:	mov	w16, w8
  41527c:	mov	w17, wzr
  415280:	cbz	x24, 41528c <wcrtomb@plt+0x12a1c>
  415284:	mov	w8, #0x27                  	// #39
  415288:	strb	w8, [x28]
  41528c:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  415290:	add	x8, x8, #0xaac
  415294:	stur	x8, [x29, #-64]
  415298:	mov	w8, #0x1                   	// #1
  41529c:	mov	w20, #0x2                   	// #2
  4152a0:	mov	w27, #0x1                   	// #1
  4152a4:	stur	x8, [x29, #-32]
  4152a8:	b	41555c <wcrtomb@plt+0x12cec>
  4152ac:	tbz	w21, #0, 415318 <wcrtomb@plt+0x12aa8>
  4152b0:	mov	w8, #0x1                   	// #1
  4152b4:	stur	x8, [x29, #-32]
  4152b8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4152bc:	add	x8, x8, #0x79c
  4152c0:	mov	x27, xzr
  4152c4:	mov	w20, #0x5                   	// #5
  4152c8:	stur	x8, [x29, #-64]
  4152cc:	mov	w16, #0x1                   	// #1
  4152d0:	mov	w17, #0x1                   	// #1
  4152d4:	b	41555c <wcrtomb@plt+0x12cec>
  4152d8:	mov	w20, wzr
  4152dc:	mov	x27, xzr
  4152e0:	mov	w17, wzr
  4152e4:	mov	w16, w8
  4152e8:	b	41555c <wcrtomb@plt+0x12cec>
  4152ec:	tbz	w21, #0, 41534c <wcrtomb@plt+0x12adc>
  4152f0:	mov	w9, #0x1                   	// #1
  4152f4:	stur	x9, [x29, #-32]
  4152f8:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4152fc:	add	x9, x9, #0xaac
  415300:	mov	x27, xzr
  415304:	mov	w20, #0x2                   	// #2
  415308:	stur	x9, [x29, #-64]
  41530c:	mov	w16, w8
  415310:	mov	w17, #0x1                   	// #1
  415314:	b	41555c <wcrtomb@plt+0x12cec>
  415318:	mov	w17, wzr
  41531c:	cbz	x24, 415328 <wcrtomb@plt+0x12ab8>
  415320:	mov	w8, #0x22                  	// #34
  415324:	strb	w8, [x28]
  415328:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41532c:	add	x8, x8, #0x79c
  415330:	stur	x8, [x29, #-64]
  415334:	mov	w8, #0x1                   	// #1
  415338:	mov	w27, #0x1                   	// #1
  41533c:	mov	w20, #0x5                   	// #5
  415340:	stur	x8, [x29, #-32]
  415344:	mov	w16, #0x1                   	// #1
  415348:	b	41555c <wcrtomb@plt+0x12cec>
  41534c:	mov	w16, #0x1                   	// #1
  415350:	mov	w17, wzr
  415354:	cbnz	x24, 415284 <wcrtomb@plt+0x12a14>
  415358:	b	41528c <wcrtomb@plt+0x12a1c>
  41535c:	ldrb	w8, [x0, #1]
  415360:	mov	w9, w22
  415364:	and	w8, w8, #0xffffffdf
  415368:	cmp	w8, #0x42
  41536c:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415370:	ldrb	w8, [x0, #2]
  415374:	cmp	w8, #0x31
  415378:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  41537c:	ldrb	w8, [x0, #3]
  415380:	cmp	w8, #0x38
  415384:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415388:	ldrb	w8, [x0, #4]
  41538c:	cmp	w8, #0x30
  415390:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  415394:	ldrb	w8, [x0, #5]
  415398:	cmp	w8, #0x33
  41539c:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  4153a0:	ldrb	w8, [x0, #6]
  4153a4:	cmp	w8, #0x30
  4153a8:	b.ne	4153b4 <wcrtomb@plt+0x12b44>  // b.any
  4153ac:	ldrb	w8, [x0, #7]
  4153b0:	cbz	w8, 415f94 <wcrtomb@plt+0x13724>
  4153b4:	cmp	w9, #0x9
  4153b8:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4153bc:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4153c0:	add	x8, x8, #0xaac
  4153c4:	add	x9, x9, #0x79c
  4153c8:	csel	x20, x9, x8, eq  // eq = none
  4153cc:	adrp	x25, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4153d0:	add	x25, x25, #0xaac
  4153d4:	mov	w2, #0x5                   	// #5
  4153d8:	mov	x0, xzr
  4153dc:	mov	x1, x25
  4153e0:	bl	402740 <dcgettext@plt>
  4153e4:	cmp	x0, x25
  4153e8:	stur	x0, [x29, #-88]
  4153ec:	str	x20, [sp, #96]
  4153f0:	b.eq	4153fc <wcrtomb@plt+0x12b8c>  // b.none
  4153f4:	mov	w20, w22
  4153f8:	b	4154e0 <wcrtomb@plt+0x12c70>
  4153fc:	bl	42ad2c <_obstack_memory_used@@Base+0x10b98>
  415400:	ldrb	w8, [x0]
  415404:	and	w8, w8, #0xffffffdf
  415408:	cmp	w8, #0x47
  41540c:	b.eq	41546c <wcrtomb@plt+0x12bfc>  // b.none
  415410:	cmp	w8, #0x55
  415414:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415418:	ldrb	w8, [x0, #1]
  41541c:	and	w8, w8, #0xffffffdf
  415420:	cmp	w8, #0x54
  415424:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415428:	ldrb	w8, [x0, #2]
  41542c:	and	w8, w8, #0xffffffdf
  415430:	cmp	w8, #0x46
  415434:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415438:	ldrb	w8, [x0, #3]
  41543c:	cmp	w8, #0x2d
  415440:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415444:	ldrb	w8, [x0, #4]
  415448:	cmp	w8, #0x38
  41544c:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415450:	ldrb	w8, [x0, #5]
  415454:	cbnz	w8, 4154c0 <wcrtomb@plt+0x12c50>
  415458:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41545c:	add	x8, x8, #0xc22
  415460:	stur	x8, [x29, #-88]
  415464:	mov	w20, w22
  415468:	b	4154e0 <wcrtomb@plt+0x12c70>
  41546c:	ldrb	w8, [x0, #1]
  415470:	and	w8, w8, #0xffffffdf
  415474:	cmp	w8, #0x42
  415478:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  41547c:	ldrb	w8, [x0, #2]
  415480:	cmp	w8, #0x31
  415484:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415488:	ldrb	w8, [x0, #3]
  41548c:	cmp	w8, #0x38
  415490:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  415494:	ldrb	w8, [x0, #4]
  415498:	cmp	w8, #0x30
  41549c:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  4154a0:	ldrb	w8, [x0, #5]
  4154a4:	cmp	w8, #0x33
  4154a8:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  4154ac:	ldrb	w8, [x0, #6]
  4154b0:	cmp	w8, #0x30
  4154b4:	b.ne	4154c0 <wcrtomb@plt+0x12c50>  // b.any
  4154b8:	ldrb	w8, [x0, #7]
  4154bc:	cbz	w8, 415fa0 <wcrtomb@plt+0x13730>
  4154c0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4154c4:	adrp	x9, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4154c8:	cmp	w22, #0x9
  4154cc:	add	x8, x8, #0xaac
  4154d0:	add	x9, x9, #0x79c
  4154d4:	mov	w20, w22
  4154d8:	csel	x8, x9, x8, eq  // eq = none
  4154dc:	stur	x8, [x29, #-88]
  4154e0:	mov	w14, w26
  4154e4:	mov	w15, w27
  4154e8:	tbnz	w21, #0, 41552c <wcrtomb@plt+0x12cbc>
  4154ec:	ldr	x8, [sp, #96]
  4154f0:	ldrb	w9, [x8]
  4154f4:	cbz	w9, 41552c <wcrtomb@plt+0x12cbc>
  4154f8:	mov	w26, w15
  4154fc:	mov	w22, w14
  415500:	mov	x10, xzr
  415504:	add	x8, x8, #0x1
  415508:	b	41551c <wcrtomb@plt+0x12cac>
  41550c:	ldrb	w9, [x8, x10]
  415510:	add	x27, x10, #0x1
  415514:	mov	x10, x27
  415518:	cbz	w9, 415538 <wcrtomb@plt+0x12cc8>
  41551c:	cmp	x10, x24
  415520:	b.cs	41550c <wcrtomb@plt+0x12c9c>  // b.hs, b.nlast
  415524:	strb	w9, [x28, x10]
  415528:	b	41550c <wcrtomb@plt+0x12c9c>
  41552c:	mov	w26, w15
  415530:	mov	w22, w14
  415534:	mov	x27, xzr
  415538:	ldur	x25, [x29, #-88]
  41553c:	mov	x0, x25
  415540:	bl	402270 <strlen@plt>
  415544:	stur	x0, [x29, #-32]
  415548:	mov	w16, #0x1                   	// #1
  41554c:	stur	x25, [x29, #-64]
  415550:	mov	w17, w21
  415554:	mov	w14, w22
  415558:	mov	w15, w26
  41555c:	ldp	x8, x9, [x29, #-40]
  415560:	eor	w18, w17, #0x1
  415564:	stur	w18, [x29, #-68]
  415568:	mov	x22, xzr
  41556c:	cmp	x8, #0x0
  415570:	cset	w8, eq  // eq = none
  415574:	cmp	x9, #0x0
  415578:	cset	w9, ne  // ne = any
  41557c:	cmp	w20, #0x2
  415580:	cset	w10, ne  // ne = any
  415584:	and	w13, w10, w16
  415588:	and	w12, w9, w17
  41558c:	orr	w10, w10, w18
  415590:	and	w18, w9, w13
  415594:	orr	w9, w13, w17
  415598:	eor	w9, w9, #0x1
  41559c:	cset	w11, eq  // eq = none
  4155a0:	orr	w8, w8, w9
  4155a4:	and	w12, w16, w12
  4155a8:	str	w10, [sp, #92]
  4155ac:	and	w10, w11, w17
  4155b0:	stur	w8, [x29, #-24]
  4155b4:	eor	w8, w16, #0x1
  4155b8:	stp	w10, w12, [sp, #60]
  4155bc:	stur	w16, [x29, #-72]
  4155c0:	str	w8, [sp, #68]
  4155c4:	stp	w17, w20, [x29, #-48]
  4155c8:	stur	w18, [x29, #-52]
  4155cc:	cmn	x23, #0x1
  4155d0:	b.eq	4155e0 <wcrtomb@plt+0x12d70>  // b.none
  4155d4:	cmp	x22, x23
  4155d8:	b.ne	4155e8 <wcrtomb@plt+0x12d78>  // b.any
  4155dc:	b	415f24 <wcrtomb@plt+0x136b4>
  4155e0:	ldrb	w8, [x19, x22]
  4155e4:	cbz	w8, 415f2c <wcrtomb@plt+0x136bc>
  4155e8:	cbz	w18, 415630 <wcrtomb@plt+0x12dc0>
  4155ec:	ldur	x8, [x29, #-32]
  4155f0:	cmp	x8, #0x2
  4155f4:	add	x20, x22, x8
  4155f8:	b.cc	415624 <wcrtomb@plt+0x12db4>  // b.lo, b.ul, b.last
  4155fc:	cmn	x23, #0x1
  415600:	b.ne	415624 <wcrtomb@plt+0x12db4>  // b.any
  415604:	mov	x0, x19
  415608:	mov	w21, w14
  41560c:	mov	w25, w15
  415610:	bl	402270 <strlen@plt>
  415614:	ldp	w18, w17, [x29, #-52]
  415618:	mov	x23, x0
  41561c:	mov	w15, w25
  415620:	mov	w14, w21
  415624:	cmp	x20, x23
  415628:	b.ls	415644 <wcrtomb@plt+0x12dd4>  // b.plast
  41562c:	ldur	w20, [x29, #-44]
  415630:	mov	w25, wzr
  415634:	ldrb	w21, [x19, x22]
  415638:	cmp	w21, #0x7e
  41563c:	b.ls	415690 <wcrtomb@plt+0x12e20>  // b.plast
  415640:	b	4158e0 <wcrtomb@plt+0x13070>
  415644:	ldur	x1, [x29, #-64]
  415648:	ldur	x2, [x29, #-32]
  41564c:	add	x0, x19, x22
  415650:	mov	w26, w15
  415654:	mov	w21, w14
  415658:	bl	402490 <bcmp@plt>
  41565c:	ldur	w9, [x29, #-68]
  415660:	ldur	w20, [x29, #-44]
  415664:	cmp	w0, #0x0
  415668:	cset	w8, ne  // ne = any
  41566c:	orr	w8, w8, w9
  415670:	cset	w25, eq  // eq = none
  415674:	tbz	w8, #0, 415fec <wcrtomb@plt+0x1377c>
  415678:	ldp	w18, w17, [x29, #-52]
  41567c:	mov	w14, w21
  415680:	mov	w15, w26
  415684:	ldrb	w21, [x19, x22]
  415688:	cmp	w21, #0x7e
  41568c:	b.hi	4158e0 <wcrtomb@plt+0x13070>  // b.pmore
  415690:	adrp	x13, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  415694:	add	x13, x13, #0xacb
  415698:	adr	x12, 4156bc <wcrtomb@plt+0x12e4c>
  41569c:	ldrb	w9, [x13, x21]
  4156a0:	add	x12, x12, x9, lsl #2
  4156a4:	mov	w10, wzr
  4156a8:	mov	w8, wzr
  4156ac:	mov	w26, #0x1                   	// #1
  4156b0:	mov	w11, #0x6e                  	// #110
  4156b4:	mov	w9, #0x61                  	// #97
  4156b8:	br	x12
  4156bc:	ldur	w9, [x29, #-24]
  4156c0:	tbnz	w9, #0, 4156e0 <wcrtomb@plt+0x12e70>
  4156c4:	ldur	x10, [x29, #-40]
  4156c8:	lsr	w9, w21, #5
  4156cc:	ldr	w9, [x10, w9, uxtw #2]
  4156d0:	lsr	w9, w9, w21
  4156d4:	tbz	w9, #0, 4156e0 <wcrtomb@plt+0x12e70>
  4156d8:	mov	w9, w21
  4156dc:	b	4156e8 <wcrtomb@plt+0x12e78>
  4156e0:	mov	w9, w21
  4156e4:	cbz	w25, 415920 <wcrtomb@plt+0x130b0>
  4156e8:	tbnz	w17, #0, 415fac <wcrtomb@plt+0x1373c>
  4156ec:	cmp	w20, #0x2
  4156f0:	cset	w8, ne  // ne = any
  4156f4:	orr	w8, w8, w15
  4156f8:	tbnz	w8, #0, 415734 <wcrtomb@plt+0x12ec4>
  4156fc:	cmp	x27, x24
  415700:	b.cs	41576c <wcrtomb@plt+0x12efc>  // b.hs, b.nlast
  415704:	mov	w8, #0x27                  	// #39
  415708:	strb	w8, [x28, x27]
  41570c:	add	x8, x27, #0x1
  415710:	cmp	x8, x24
  415714:	b.cc	415778 <wcrtomb@plt+0x12f08>  // b.lo, b.ul, b.last
  415718:	add	x8, x27, #0x2
  41571c:	cmp	x8, x24
  415720:	b.cs	41572c <wcrtomb@plt+0x12ebc>  // b.hs, b.nlast
  415724:	mov	w10, #0x27                  	// #39
  415728:	strb	w10, [x28, x8]
  41572c:	add	x27, x27, #0x3
  415730:	mov	w15, #0x1                   	// #1
  415734:	cmp	x27, x24
  415738:	b.cs	415744 <wcrtomb@plt+0x12ed4>  // b.hs, b.nlast
  41573c:	mov	w8, #0x5c                  	// #92
  415740:	strb	w8, [x28, x27]
  415744:	add	x27, x27, #0x1
  415748:	cmp	x27, x24
  41574c:	b.cs	415754 <wcrtomb@plt+0x12ee4>  // b.hs, b.nlast
  415750:	strb	w9, [x28, x27]
  415754:	add	x27, x27, #0x1
  415758:	and	w14, w14, w26
  41575c:	add	x22, x22, #0x1
  415760:	cmn	x23, #0x1
  415764:	b.ne	4155d4 <wcrtomb@plt+0x12d64>  // b.any
  415768:	b	4155e0 <wcrtomb@plt+0x12d70>
  41576c:	add	x8, x27, #0x1
  415770:	cmp	x8, x24
  415774:	b.cs	415718 <wcrtomb@plt+0x12ea8>  // b.hs, b.nlast
  415778:	mov	w10, #0x24                  	// #36
  41577c:	strb	w10, [x28, x8]
  415780:	add	x8, x27, #0x2
  415784:	cmp	x8, x24
  415788:	b.cc	415724 <wcrtomb@plt+0x12eb4>  // b.lo, b.ul, b.last
  41578c:	b	41572c <wcrtomb@plt+0x12ebc>
  415790:	cmp	x23, #0x1
  415794:	b.eq	4157b8 <wcrtomb@plt+0x12f48>  // b.none
  415798:	cmn	x23, #0x1
  41579c:	b.ne	4157bc <wcrtomb@plt+0x12f4c>  // b.any
  4157a0:	ldrb	w8, [x19, #1]
  4157a4:	cbz	w8, 4157b8 <wcrtomb@plt+0x12f48>
  4157a8:	mov	w8, wzr
  4157ac:	mov	w26, wzr
  4157b0:	mov	x23, #0xffffffffffffffff    	// #-1
  4157b4:	b	4156bc <wcrtomb@plt+0x12e4c>
  4157b8:	cbz	x22, 4157c8 <wcrtomb@plt+0x12f58>
  4157bc:	mov	w8, wzr
  4157c0:	mov	w26, wzr
  4157c4:	b	4156bc <wcrtomb@plt+0x12e4c>
  4157c8:	mov	w10, #0x1                   	// #1
  4157cc:	cmp	w20, #0x2
  4157d0:	b.ne	4157d8 <wcrtomb@plt+0x12f68>  // b.any
  4157d4:	tbnz	w17, #0, 415fac <wcrtomb@plt+0x1373c>
  4157d8:	mov	w8, wzr
  4157dc:	mov	w26, w10
  4157e0:	b	4156bc <wcrtomb@plt+0x12e4c>
  4157e4:	cmp	w20, #0x2
  4157e8:	b.ne	415908 <wcrtomb@plt+0x13098>  // b.any
  4157ec:	tbz	w17, #0, 415914 <wcrtomb@plt+0x130a4>
  4157f0:	b	415fac <wcrtomb@plt+0x1373c>
  4157f4:	mov	w9, #0x66                  	// #102
  4157f8:	b	415964 <wcrtomb@plt+0x130f4>
  4157fc:	mov	w11, #0x74                  	// #116
  415800:	b	415810 <wcrtomb@plt+0x12fa0>
  415804:	mov	w9, #0x62                  	// #98
  415808:	b	415964 <wcrtomb@plt+0x130f4>
  41580c:	mov	w11, #0x72                  	// #114
  415810:	ldr	w8, [sp, #92]
  415814:	mov	w9, w11
  415818:	tbnz	w8, #0, 415964 <wcrtomb@plt+0x130f4>
  41581c:	b	415fac <wcrtomb@plt+0x1373c>
  415820:	ldur	w8, [x29, #-72]
  415824:	tbz	w8, #0, 415978 <wcrtomb@plt+0x13108>
  415828:	cmp	w20, #0x2
  41582c:	tbnz	w17, #0, 4160bc <wcrtomb@plt+0x1384c>
  415830:	cset	w8, ne  // ne = any
  415834:	orr	w8, w8, w15
  415838:	tbz	w8, #0, 415b4c <wcrtomb@plt+0x132dc>
  41583c:	mov	x8, x27
  415840:	cmp	x8, x24
  415844:	b.cc	415b8c <wcrtomb@plt+0x1331c>  // b.lo, b.ul, b.last
  415848:	b	415b94 <wcrtomb@plt+0x13324>
  41584c:	cmp	w20, #0x5
  415850:	b.eq	415aac <wcrtomb@plt+0x1323c>  // b.none
  415854:	cmp	w20, #0x2
  415858:	b.ne	415b3c <wcrtomb@plt+0x132cc>  // b.any
  41585c:	tbz	w17, #0, 415b3c <wcrtomb@plt+0x132cc>
  415860:	b	415fac <wcrtomb@plt+0x1373c>
  415864:	mov	w9, #0x76                  	// #118
  415868:	b	415964 <wcrtomb@plt+0x130f4>
  41586c:	cmp	w20, #0x2
  415870:	b.ne	415988 <wcrtomb@plt+0x13118>  // b.any
  415874:	tbnz	w17, #0, 415fac <wcrtomb@plt+0x1373c>
  415878:	ldr	x10, [sp, #72]
  41587c:	cmp	x24, #0x0
  415880:	cset	w8, eq  // eq = none
  415884:	cmp	x10, #0x0
  415888:	cset	w9, ne  // ne = any
  41588c:	orr	w8, w9, w8
  415890:	cmp	w8, #0x0
  415894:	csel	x10, x10, x24, ne  // ne = any
  415898:	csel	x24, x24, xzr, ne  // ne = any
  41589c:	cmp	x27, x24
  4158a0:	str	x10, [sp, #72]
  4158a4:	b.cs	415a88 <wcrtomb@plt+0x13218>  // b.hs, b.nlast
  4158a8:	mov	w8, #0x27                  	// #39
  4158ac:	strb	w8, [x28, x27]
  4158b0:	add	x8, x27, #0x1
  4158b4:	cmp	x8, x24
  4158b8:	b.cc	415a94 <wcrtomb@plt+0x13224>  // b.lo, b.ul, b.last
  4158bc:	add	x8, x27, #0x2
  4158c0:	cmp	x8, x24
  4158c4:	b.cs	4158d0 <wcrtomb@plt+0x13060>  // b.hs, b.nlast
  4158c8:	mov	w9, #0x27                  	// #39
  4158cc:	strb	w9, [x28, x8]
  4158d0:	mov	w15, wzr
  4158d4:	mov	w8, wzr
  4158d8:	add	x27, x27, #0x3
  4158dc:	b	41598c <wcrtomb@plt+0x1311c>
  4158e0:	ldr	x8, [sp, #32]
  4158e4:	stp	w15, w14, [sp, #24]
  4158e8:	cmp	x8, #0x1
  4158ec:	b.ne	4159a0 <wcrtomb@plt+0x13130>  // b.any
  4158f0:	bl	402610 <__ctype_b_loc@plt>
  4158f4:	ldr	x8, [x0]
  4158f8:	mov	w20, #0x1                   	// #1
  4158fc:	ldrh	w8, [x8, x21, lsl #1]
  415900:	ubfx	w26, w8, #14, #1
  415904:	b	415cfc <wcrtomb@plt+0x1348c>
  415908:	ldr	w8, [sp, #64]
  41590c:	mov	w9, #0x5c                  	// #92
  415910:	tbz	w8, #0, 415964 <wcrtomb@plt+0x130f4>
  415914:	mov	w8, wzr
  415918:	mov	w26, wzr
  41591c:	mov	w21, #0x5c                  	// #92
  415920:	tbnz	w8, #0, 415954 <wcrtomb@plt+0x130e4>
  415924:	tbz	w15, #0, 415954 <wcrtomb@plt+0x130e4>
  415928:	cmp	x27, x24
  41592c:	b.cs	415938 <wcrtomb@plt+0x130c8>  // b.hs, b.nlast
  415930:	mov	w8, #0x27                  	// #39
  415934:	strb	w8, [x28, x27]
  415938:	add	x8, x27, #0x1
  41593c:	cmp	x8, x24
  415940:	b.cs	41594c <wcrtomb@plt+0x130dc>  // b.hs, b.nlast
  415944:	mov	w9, #0x27                  	// #39
  415948:	strb	w9, [x28, x8]
  41594c:	mov	w15, wzr
  415950:	add	x27, x27, #0x2
  415954:	mov	w9, w21
  415958:	cmp	x27, x24
  41595c:	b.cc	415750 <wcrtomb@plt+0x12ee0>  // b.lo, b.ul, b.last
  415960:	b	415754 <wcrtomb@plt+0x12ee4>
  415964:	ldur	w10, [x29, #-72]
  415968:	mov	w8, wzr
  41596c:	mov	w26, wzr
  415970:	tbz	w10, #0, 4156bc <wcrtomb@plt+0x12e4c>
  415974:	b	4156e8 <wcrtomb@plt+0x12e78>
  415978:	ldr	w8, [sp, #88]
  41597c:	tbnz	w8, #0, 41575c <wcrtomb@plt+0x12eec>
  415980:	mov	w21, wzr
  415984:	b	4157bc <wcrtomb@plt+0x12f4c>
  415988:	mov	w8, wzr
  41598c:	mov	w9, #0x1                   	// #1
  415990:	mov	w21, #0x27                  	// #39
  415994:	str	w9, [sp, #84]
  415998:	mov	w26, #0x1                   	// #1
  41599c:	b	4156bc <wcrtomb@plt+0x12e4c>
  4159a0:	cmn	x23, #0x1
  4159a4:	stur	xzr, [x29, #-16]
  4159a8:	b.eq	415c20 <wcrtomb@plt+0x133b0>  // b.none
  4159ac:	ldr	w8, [sp, #60]
  4159b0:	stp	x23, x19, [sp, #40]
  4159b4:	tbz	w8, #0, 415c38 <wcrtomb@plt+0x133c8>
  4159b8:	ldur	x8, [x29, #-80]
  4159bc:	mov	x20, xzr
  4159c0:	mov	w26, #0x1                   	// #1
  4159c4:	add	x8, x8, x22
  4159c8:	str	x8, [sp, #16]
  4159cc:	b	4159f8 <wcrtomb@plt+0x13188>
  4159d0:	ldur	w0, [x29, #-20]
  4159d4:	bl	402790 <iswprint@plt>
  4159d8:	cmp	w0, #0x0
  4159dc:	cset	w8, ne  // ne = any
  4159e0:	sub	x0, x29, #0x10
  4159e4:	and	w26, w26, w8
  4159e8:	add	x20, x23, x20
  4159ec:	bl	402580 <mbsinit@plt>
  4159f0:	ldr	x23, [sp, #40]
  4159f4:	cbnz	w0, 415cf8 <wcrtomb@plt+0x13488>
  4159f8:	ldr	x8, [sp, #48]
  4159fc:	mov	x19, x28
  415a00:	add	x28, x20, x22
  415a04:	sub	x2, x23, x28
  415a08:	add	x1, x8, x28
  415a0c:	sub	x0, x29, #0x14
  415a10:	sub	x3, x29, #0x10
  415a14:	bl	419da4 <wcrtomb@plt+0x17534>
  415a18:	cmn	x0, #0x2
  415a1c:	b.eq	415cb8 <wcrtomb@plt+0x13448>  // b.none
  415a20:	mov	x23, x0
  415a24:	cmn	x0, #0x1
  415a28:	b.eq	415ca8 <wcrtomb@plt+0x13438>  // b.none
  415a2c:	mov	x28, x19
  415a30:	cbz	x23, 415cb0 <wcrtomb@plt+0x13440>
  415a34:	ldr	x19, [sp, #48]
  415a38:	cmp	x23, #0x2
  415a3c:	b.cc	4159d0 <wcrtomb@plt+0x13160>  // b.lo, b.ul, b.last
  415a40:	ldr	x9, [sp, #16]
  415a44:	sub	x8, x23, #0x1
  415a48:	add	x9, x9, x20
  415a4c:	b	415a5c <wcrtomb@plt+0x131ec>
  415a50:	subs	x8, x8, #0x1
  415a54:	add	x9, x9, #0x1
  415a58:	b.eq	4159d0 <wcrtomb@plt+0x13160>  // b.none
  415a5c:	ldrb	w10, [x9]
  415a60:	sub	w10, w10, #0x5b
  415a64:	cmp	w10, #0x21
  415a68:	b.hi	415a50 <wcrtomb@plt+0x131e0>  // b.pmore
  415a6c:	mov	w11, #0x1                   	// #1
  415a70:	lsl	x10, x11, x10
  415a74:	mov	x11, #0x2b                  	// #43
  415a78:	movk	x11, #0x2, lsl #32
  415a7c:	tst	x10, x11
  415a80:	b.eq	415a50 <wcrtomb@plt+0x131e0>  // b.none
  415a84:	b	415fd4 <wcrtomb@plt+0x13764>
  415a88:	add	x8, x27, #0x1
  415a8c:	cmp	x8, x24
  415a90:	b.cs	4158bc <wcrtomb@plt+0x1304c>  // b.hs, b.nlast
  415a94:	mov	w9, #0x5c                  	// #92
  415a98:	strb	w9, [x28, x8]
  415a9c:	add	x8, x27, #0x2
  415aa0:	cmp	x8, x24
  415aa4:	b.cc	4158c8 <wcrtomb@plt+0x13058>  // b.lo, b.ul, b.last
  415aa8:	b	4158d0 <wcrtomb@plt+0x13060>
  415aac:	ldr	w8, [sp, #88]
  415ab0:	tbz	w8, #2, 415b3c <wcrtomb@plt+0x132cc>
  415ab4:	add	x9, x22, #0x2
  415ab8:	cmp	x9, x23
  415abc:	b.cs	415b3c <wcrtomb@plt+0x132cc>  // b.hs, b.nlast
  415ac0:	add	x8, x22, x19
  415ac4:	ldrb	w8, [x8, #1]
  415ac8:	cmp	w8, #0x3f
  415acc:	b.ne	415b3c <wcrtomb@plt+0x132cc>  // b.any
  415ad0:	ldrb	w21, [x19, x9]
  415ad4:	mov	w8, wzr
  415ad8:	cmp	w21, #0x3e
  415adc:	b.hi	415f18 <wcrtomb@plt+0x136a8>  // b.pmore
  415ae0:	mov	w10, #0x1                   	// #1
  415ae4:	mov	x11, #0xa38200000000        	// #179778741075968
  415ae8:	lsl	x10, x10, x21
  415aec:	movk	x11, #0x7000, lsl #48
  415af0:	tst	x10, x11
  415af4:	b.eq	415f18 <wcrtomb@plt+0x136a8>  // b.none
  415af8:	tbnz	w17, #0, 415fac <wcrtomb@plt+0x1373c>
  415afc:	cmp	x27, x24
  415b00:	b.cs	415ed0 <wcrtomb@plt+0x13660>  // b.hs, b.nlast
  415b04:	mov	w8, #0x3f                  	// #63
  415b08:	strb	w8, [x28, x27]
  415b0c:	add	x8, x27, #0x1
  415b10:	cmp	x8, x24
  415b14:	b.cc	415edc <wcrtomb@plt+0x1366c>  // b.lo, b.ul, b.last
  415b18:	add	x8, x27, #0x2
  415b1c:	cmp	x8, x24
  415b20:	b.cs	415ef0 <wcrtomb@plt+0x13680>  // b.hs, b.nlast
  415b24:	mov	w10, #0x22                  	// #34
  415b28:	strb	w10, [x28, x8]
  415b2c:	add	x8, x27, #0x3
  415b30:	cmp	x8, x24
  415b34:	b.cc	415efc <wcrtomb@plt+0x1368c>  // b.lo, b.ul, b.last
  415b38:	b	415f04 <wcrtomb@plt+0x13694>
  415b3c:	mov	w8, wzr
  415b40:	mov	w26, wzr
  415b44:	mov	w21, #0x3f                  	// #63
  415b48:	b	4156bc <wcrtomb@plt+0x12e4c>
  415b4c:	cmp	x27, x24
  415b50:	b.cs	415bfc <wcrtomb@plt+0x1338c>  // b.hs, b.nlast
  415b54:	mov	w8, #0x27                  	// #39
  415b58:	strb	w8, [x28, x27]
  415b5c:	add	x8, x27, #0x1
  415b60:	cmp	x8, x24
  415b64:	b.cc	415c08 <wcrtomb@plt+0x13398>  // b.lo, b.ul, b.last
  415b68:	add	x8, x27, #0x2
  415b6c:	cmp	x8, x24
  415b70:	b.cs	415b7c <wcrtomb@plt+0x1330c>  // b.hs, b.nlast
  415b74:	mov	w9, #0x27                  	// #39
  415b78:	strb	w9, [x28, x8]
  415b7c:	add	x8, x27, #0x3
  415b80:	mov	w15, #0x1                   	// #1
  415b84:	cmp	x8, x24
  415b88:	b.cs	415b94 <wcrtomb@plt+0x13324>  // b.hs, b.nlast
  415b8c:	mov	w9, #0x5c                  	// #92
  415b90:	strb	w9, [x28, x8]
  415b94:	cmp	w20, #0x2
  415b98:	add	x27, x8, #0x1
  415b9c:	b.eq	415bec <wcrtomb@plt+0x1337c>  // b.none
  415ba0:	add	x9, x22, #0x1
  415ba4:	cmp	x9, x23
  415ba8:	b.cs	415bec <wcrtomb@plt+0x1337c>  // b.hs, b.nlast
  415bac:	ldrb	w9, [x19, x9]
  415bb0:	sub	w9, w9, #0x30
  415bb4:	cmp	w9, #0x9
  415bb8:	b.hi	415bec <wcrtomb@plt+0x1337c>  // b.pmore
  415bbc:	cmp	x27, x24
  415bc0:	b.cs	415bcc <wcrtomb@plt+0x1335c>  // b.hs, b.nlast
  415bc4:	mov	w9, #0x30                  	// #48
  415bc8:	strb	w9, [x28, x27]
  415bcc:	add	x9, x8, #0x2
  415bd0:	cmp	x9, x24
  415bd4:	b.cs	415be0 <wcrtomb@plt+0x13370>  // b.hs, b.nlast
  415bd8:	mov	w10, #0x30                  	// #48
  415bdc:	strb	w10, [x28, x9]
  415be0:	mov	w26, wzr
  415be4:	add	x27, x8, #0x3
  415be8:	b	415bf0 <wcrtomb@plt+0x13380>
  415bec:	mov	w26, wzr
  415bf0:	mov	w8, #0x1                   	// #1
  415bf4:	mov	w21, #0x30                  	// #48
  415bf8:	b	4156bc <wcrtomb@plt+0x12e4c>
  415bfc:	add	x8, x27, #0x1
  415c00:	cmp	x8, x24
  415c04:	b.cs	415b68 <wcrtomb@plt+0x132f8>  // b.hs, b.nlast
  415c08:	mov	w9, #0x24                  	// #36
  415c0c:	strb	w9, [x28, x8]
  415c10:	add	x8, x27, #0x2
  415c14:	cmp	x8, x24
  415c18:	b.cc	415b74 <wcrtomb@plt+0x13304>  // b.lo, b.ul, b.last
  415c1c:	b	415b7c <wcrtomb@plt+0x1330c>
  415c20:	mov	x0, x19
  415c24:	bl	402270 <strlen@plt>
  415c28:	mov	x23, x0
  415c2c:	ldr	w8, [sp, #60]
  415c30:	stp	x23, x19, [sp, #40]
  415c34:	tbnz	w8, #0, 4159b8 <wcrtomb@plt+0x13148>
  415c38:	mov	x20, xzr
  415c3c:	mov	w26, #0x1                   	// #1
  415c40:	ldr	x8, [sp, #48]
  415c44:	mov	x19, x28
  415c48:	add	x28, x20, x22
  415c4c:	sub	x2, x23, x28
  415c50:	add	x1, x8, x28
  415c54:	sub	x0, x29, #0x14
  415c58:	sub	x3, x29, #0x10
  415c5c:	bl	419da4 <wcrtomb@plt+0x17534>
  415c60:	cmn	x0, #0x2
  415c64:	b.eq	415cb8 <wcrtomb@plt+0x13448>  // b.none
  415c68:	mov	x23, x0
  415c6c:	cmn	x0, #0x1
  415c70:	b.eq	415ca8 <wcrtomb@plt+0x13438>  // b.none
  415c74:	mov	x28, x19
  415c78:	cbz	x23, 415cb0 <wcrtomb@plt+0x13440>
  415c7c:	ldur	w0, [x29, #-20]
  415c80:	bl	402790 <iswprint@plt>
  415c84:	cmp	w0, #0x0
  415c88:	cset	w8, ne  // ne = any
  415c8c:	sub	x0, x29, #0x10
  415c90:	and	w26, w26, w8
  415c94:	add	x20, x23, x20
  415c98:	bl	402580 <mbsinit@plt>
  415c9c:	ldr	x23, [sp, #40]
  415ca0:	cbz	w0, 415c40 <wcrtomb@plt+0x133d0>
  415ca4:	b	415cf8 <wcrtomb@plt+0x13488>
  415ca8:	mov	w26, wzr
  415cac:	mov	x28, x19
  415cb0:	ldr	x23, [sp, #40]
  415cb4:	b	415cf8 <wcrtomb@plt+0x13488>
  415cb8:	ldr	x23, [sp, #40]
  415cbc:	cmp	x28, x23
  415cc0:	b.cs	415cf0 <wcrtomb@plt+0x13480>  // b.hs, b.nlast
  415cc4:	sub	x8, x23, x22
  415cc8:	ldr	x9, [sp, #48]
  415ccc:	ldrb	w9, [x9, x28]
  415cd0:	cbz	w9, 415cf0 <wcrtomb@plt+0x13480>
  415cd4:	add	x20, x20, #0x1
  415cd8:	add	x28, x20, x22
  415cdc:	cmp	x28, x23
  415ce0:	b.cc	415cc8 <wcrtomb@plt+0x13458>  // b.lo, b.ul, b.last
  415ce4:	mov	w26, wzr
  415ce8:	mov	x20, x8
  415cec:	b	415cf4 <wcrtomb@plt+0x13484>
  415cf0:	mov	w26, wzr
  415cf4:	mov	x28, x19
  415cf8:	ldr	x19, [sp, #48]
  415cfc:	ldr	w8, [sp, #68]
  415d00:	ldp	w15, w14, [sp, #24]
  415d04:	ldp	w18, w17, [x29, #-52]
  415d08:	cmp	x20, #0x1
  415d0c:	orr	w8, w26, w8
  415d10:	b.hi	415d24 <wcrtomb@plt+0x134b4>  // b.pmore
  415d14:	tbz	w8, #0, 415d24 <wcrtomb@plt+0x134b4>
  415d18:	ldur	w20, [x29, #-44]
  415d1c:	mov	w8, wzr
  415d20:	b	4156bc <wcrtomb@plt+0x12e4c>
  415d24:	add	x9, x20, x22
  415d28:	ldur	w20, [x29, #-44]
  415d2c:	mov	w10, wzr
  415d30:	b	415d44 <wcrtomb@plt+0x134d4>
  415d34:	ldur	x12, [x29, #-80]
  415d38:	add	x27, x27, #0x1
  415d3c:	ldrb	w21, [x12, x22]
  415d40:	mov	x22, x11
  415d44:	tbz	w8, #0, 415d74 <wcrtomb@plt+0x13504>
  415d48:	tbz	w25, #0, 415de0 <wcrtomb@plt+0x13570>
  415d4c:	cmp	x27, x24
  415d50:	b.cs	415d5c <wcrtomb@plt+0x134ec>  // b.hs, b.nlast
  415d54:	mov	w11, #0x5c                  	// #92
  415d58:	strb	w11, [x28, x27]
  415d5c:	mov	w25, wzr
  415d60:	add	x27, x27, #0x1
  415d64:	add	x11, x22, #0x1
  415d68:	cmp	x9, x11
  415d6c:	b.hi	415df0 <wcrtomb@plt+0x13580>  // b.pmore
  415d70:	b	415ec4 <wcrtomb@plt+0x13654>
  415d74:	tbnz	w17, #0, 415fac <wcrtomb@plt+0x1373c>
  415d78:	cmp	w20, #0x2
  415d7c:	cset	w10, ne  // ne = any
  415d80:	orr	w10, w10, w15
  415d84:	tbz	w10, #0, 415e38 <wcrtomb@plt+0x135c8>
  415d88:	cmp	x27, x24
  415d8c:	b.cs	415e78 <wcrtomb@plt+0x13608>  // b.hs, b.nlast
  415d90:	mov	w10, #0x5c                  	// #92
  415d94:	strb	w10, [x28, x27]
  415d98:	add	x10, x27, #0x1
  415d9c:	cmp	x10, x24
  415da0:	b.cc	415e84 <wcrtomb@plt+0x13614>  // b.lo, b.ul, b.last
  415da4:	add	x10, x27, #0x2
  415da8:	cmp	x10, x24
  415dac:	b.cs	415dbc <wcrtomb@plt+0x1354c>  // b.hs, b.nlast
  415db0:	mov	w11, #0x30                  	// #48
  415db4:	bfxil	w11, w21, #3, #3
  415db8:	strb	w11, [x28, x10]
  415dbc:	mov	w11, #0x30                  	// #48
  415dc0:	bfxil	w11, w21, #0, #3
  415dc4:	add	x27, x27, #0x3
  415dc8:	mov	w10, #0x1                   	// #1
  415dcc:	mov	w21, w11
  415dd0:	add	x11, x22, #0x1
  415dd4:	cmp	x9, x11
  415dd8:	b.hi	415df0 <wcrtomb@plt+0x13580>  // b.pmore
  415ddc:	b	415ec4 <wcrtomb@plt+0x13654>
  415de0:	mov	w25, wzr
  415de4:	add	x11, x22, #0x1
  415de8:	cmp	x9, x11
  415dec:	b.ls	415ec4 <wcrtomb@plt+0x13654>  // b.plast
  415df0:	and	w12, w10, #0x1
  415df4:	orn	w12, w12, w15
  415df8:	tbnz	w12, #0, 415e28 <wcrtomb@plt+0x135b8>
  415dfc:	cmp	x27, x24
  415e00:	b.cs	415e0c <wcrtomb@plt+0x1359c>  // b.hs, b.nlast
  415e04:	mov	w12, #0x27                  	// #39
  415e08:	strb	w12, [x28, x27]
  415e0c:	add	x12, x27, #0x1
  415e10:	cmp	x12, x24
  415e14:	b.cs	415e20 <wcrtomb@plt+0x135b0>  // b.hs, b.nlast
  415e18:	mov	w13, #0x27                  	// #39
  415e1c:	strb	w13, [x28, x12]
  415e20:	mov	w15, wzr
  415e24:	add	x27, x27, #0x2
  415e28:	cmp	x27, x24
  415e2c:	b.cs	415d34 <wcrtomb@plt+0x134c4>  // b.hs, b.nlast
  415e30:	strb	w21, [x28, x27]
  415e34:	b	415d34 <wcrtomb@plt+0x134c4>
  415e38:	cmp	x27, x24
  415e3c:	b.cs	415ea0 <wcrtomb@plt+0x13630>  // b.hs, b.nlast
  415e40:	mov	w10, #0x27                  	// #39
  415e44:	strb	w10, [x28, x27]
  415e48:	add	x10, x27, #0x1
  415e4c:	cmp	x10, x24
  415e50:	b.cc	415eac <wcrtomb@plt+0x1363c>  // b.lo, b.ul, b.last
  415e54:	add	x10, x27, #0x2
  415e58:	cmp	x10, x24
  415e5c:	b.cs	415e68 <wcrtomb@plt+0x135f8>  // b.hs, b.nlast
  415e60:	mov	w11, #0x27                  	// #39
  415e64:	strb	w11, [x28, x10]
  415e68:	add	x27, x27, #0x3
  415e6c:	mov	w15, #0x1                   	// #1
  415e70:	cmp	x27, x24
  415e74:	b.cc	415d90 <wcrtomb@plt+0x13520>  // b.lo, b.ul, b.last
  415e78:	add	x10, x27, #0x1
  415e7c:	cmp	x10, x24
  415e80:	b.cs	415da4 <wcrtomb@plt+0x13534>  // b.hs, b.nlast
  415e84:	mov	w11, #0x30                  	// #48
  415e88:	bfxil	w11, w21, #6, #2
  415e8c:	strb	w11, [x28, x10]
  415e90:	add	x10, x27, #0x2
  415e94:	cmp	x10, x24
  415e98:	b.cc	415db0 <wcrtomb@plt+0x13540>  // b.lo, b.ul, b.last
  415e9c:	b	415dbc <wcrtomb@plt+0x1354c>
  415ea0:	add	x10, x27, #0x1
  415ea4:	cmp	x10, x24
  415ea8:	b.cs	415e54 <wcrtomb@plt+0x135e4>  // b.hs, b.nlast
  415eac:	mov	w11, #0x24                  	// #36
  415eb0:	strb	w11, [x28, x10]
  415eb4:	add	x10, x27, #0x2
  415eb8:	cmp	x10, x24
  415ebc:	b.cc	415e60 <wcrtomb@plt+0x135f0>  // b.lo, b.ul, b.last
  415ec0:	b	415e68 <wcrtomb@plt+0x135f8>
  415ec4:	and	w8, w10, #0x1
  415ec8:	tbz	w8, #0, 415924 <wcrtomb@plt+0x130b4>
  415ecc:	b	415954 <wcrtomb@plt+0x130e4>
  415ed0:	add	x8, x27, #0x1
  415ed4:	cmp	x8, x24
  415ed8:	b.cs	415b18 <wcrtomb@plt+0x132a8>  // b.hs, b.nlast
  415edc:	mov	w10, #0x22                  	// #34
  415ee0:	strb	w10, [x28, x8]
  415ee4:	add	x8, x27, #0x2
  415ee8:	cmp	x8, x24
  415eec:	b.cc	415b24 <wcrtomb@plt+0x132b4>  // b.lo, b.ul, b.last
  415ef0:	add	x8, x27, #0x3
  415ef4:	cmp	x8, x24
  415ef8:	b.cs	415f04 <wcrtomb@plt+0x13694>  // b.hs, b.nlast
  415efc:	mov	w10, #0x3f                  	// #63
  415f00:	strb	w10, [x28, x8]
  415f04:	mov	w8, wzr
  415f08:	mov	w26, wzr
  415f0c:	add	x27, x27, #0x4
  415f10:	mov	x22, x9
  415f14:	b	4156bc <wcrtomb@plt+0x12e4c>
  415f18:	mov	w21, #0x3f                  	// #63
  415f1c:	mov	w26, w8
  415f20:	b	4156bc <wcrtomb@plt+0x12e4c>
  415f24:	mov	x23, x22
  415f28:	b	415f30 <wcrtomb@plt+0x136c0>
  415f2c:	mov	x23, #0xffffffffffffffff    	// #-1
  415f30:	cmp	w20, #0x2
  415f34:	cset	w8, eq  // eq = none
  415f38:	cmp	x27, #0x0
  415f3c:	cset	w9, eq  // eq = none
  415f40:	and	w8, w8, w9
  415f44:	and	w8, w17, w8
  415f48:	tbnz	w8, #0, 415fac <wcrtomb@plt+0x1373c>
  415f4c:	cmp	w20, #0x2
  415f50:	cset	w8, ne  // ne = any
  415f54:	orr	w8, w17, w8
  415f58:	tbnz	w8, #0, 416074 <wcrtomb@plt+0x13804>
  415f5c:	ldr	w8, [sp, #84]
  415f60:	eor	w8, w8, #0x1
  415f64:	tbnz	w8, #0, 416074 <wcrtomb@plt+0x13804>
  415f68:	mov	x22, x23
  415f6c:	tbnz	w14, #0, 416044 <wcrtomb@plt+0x137d4>
  415f70:	ldr	x23, [sp, #72]
  415f74:	mov	w21, wzr
  415f78:	cbz	x23, 416070 <wcrtomb@plt+0x13800>
  415f7c:	ldur	w8, [x29, #-72]
  415f80:	mov	w20, #0x2                   	// #2
  415f84:	mov	w14, w21
  415f88:	mov	w17, w21
  415f8c:	cbz	x24, 415198 <wcrtomb@plt+0x12928>
  415f90:	b	416074 <wcrtomb@plt+0x13804>
  415f94:	adrp	x20, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  415f98:	add	x20, x20, #0xc26
  415f9c:	b	4153cc <wcrtomb@plt+0x12b5c>
  415fa0:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  415fa4:	add	x8, x8, #0xc2a
  415fa8:	b	415460 <wcrtomb@plt+0x12bf0>
  415fac:	ldur	w8, [x29, #-72]
  415fb0:	ldr	x7, [sp, #96]
  415fb4:	mov	w9, #0x4                   	// #4
  415fb8:	tst	w8, #0x1
  415fbc:	mov	w8, #0x2                   	// #2
  415fc0:	csel	w8, w9, w8, ne  // ne = any
  415fc4:	cmp	w20, #0x2
  415fc8:	b.ne	415ff0 <wcrtomb@plt+0x13780>  // b.any
  415fcc:	mov	w20, w8
  415fd0:	b	415ff0 <wcrtomb@plt+0x13780>
  415fd4:	ldur	w8, [x29, #-72]
  415fd8:	ldr	x23, [sp, #40]
  415fdc:	mov	w9, #0x4                   	// #4
  415fe0:	tst	w8, #0x1
  415fe4:	mov	w8, #0x2                   	// #2
  415fe8:	csel	w20, w9, w8, ne  // ne = any
  415fec:	ldr	x7, [sp, #96]
  415ff0:	ldr	w8, [sp, #88]
  415ff4:	mov	x0, x28
  415ff8:	mov	x1, x24
  415ffc:	mov	x2, x19
  416000:	and	w5, w8, #0xfffffffd
  416004:	ldur	x8, [x29, #-88]
  416008:	mov	x3, x23
  41600c:	mov	w4, w20
  416010:	mov	x6, xzr
  416014:	str	x8, [sp]
  416018:	bl	41511c <wcrtomb@plt+0x128ac>
  41601c:	mov	x27, x0
  416020:	mov	x0, x27
  416024:	ldp	x20, x19, [sp, #272]
  416028:	ldp	x22, x21, [sp, #256]
  41602c:	ldp	x24, x23, [sp, #240]
  416030:	ldp	x26, x25, [sp, #224]
  416034:	ldp	x28, x27, [sp, #208]
  416038:	ldp	x29, x30, [sp, #192]
  41603c:	add	sp, sp, #0x120
  416040:	ret
  416044:	ldur	x8, [x29, #-88]
  416048:	ldr	x1, [sp, #72]
  41604c:	ldr	w5, [sp, #88]
  416050:	ldur	x6, [x29, #-40]
  416054:	ldr	x7, [sp, #96]
  416058:	mov	w4, #0x5                   	// #5
  41605c:	str	x8, [sp]
  416060:	mov	x0, x28
  416064:	mov	x2, x19
  416068:	mov	x3, x22
  41606c:	b	416018 <wcrtomb@plt+0x137a8>
  416070:	mov	w17, w21
  416074:	ldur	x8, [x29, #-64]
  416078:	cbz	x8, 4160ac <wcrtomb@plt+0x1383c>
  41607c:	tbnz	w17, #0, 4160ac <wcrtomb@plt+0x1383c>
  416080:	ldrb	w9, [x8]
  416084:	cbz	w9, 4160ac <wcrtomb@plt+0x1383c>
  416088:	add	x8, x8, #0x1
  41608c:	b	41609c <wcrtomb@plt+0x1382c>
  416090:	ldrb	w9, [x8], #1
  416094:	add	x27, x27, #0x1
  416098:	cbz	w9, 4160ac <wcrtomb@plt+0x1383c>
  41609c:	cmp	x27, x24
  4160a0:	b.cs	416090 <wcrtomb@plt+0x13820>  // b.hs, b.nlast
  4160a4:	strb	w9, [x28, x27]
  4160a8:	b	416090 <wcrtomb@plt+0x13820>
  4160ac:	cmp	x27, x24
  4160b0:	b.cs	416020 <wcrtomb@plt+0x137b0>  // b.hs, b.nlast
  4160b4:	strb	wzr, [x28, x27]
  4160b8:	b	416020 <wcrtomb@plt+0x137b0>
  4160bc:	b.ne	415fec <wcrtomb@plt+0x1377c>  // b.any
  4160c0:	mov	w20, #0x4                   	// #4
  4160c4:	b	415fec <wcrtomb@plt+0x1377c>
  4160c8:	bl	402560 <abort@plt>
  4160cc:	sub	sp, sp, #0x60
  4160d0:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4160d4:	add	x8, x8, #0x740
  4160d8:	cmp	x2, #0x0
  4160dc:	stp	x29, x30, [sp, #16]
  4160e0:	stp	x26, x25, [sp, #32]
  4160e4:	stp	x24, x23, [sp, #48]
  4160e8:	stp	x22, x21, [sp, #64]
  4160ec:	stp	x20, x19, [sp, #80]
  4160f0:	add	x29, sp, #0x10
  4160f4:	mov	x19, x1
  4160f8:	mov	x20, x0
  4160fc:	csel	x25, x8, x2, eq  // eq = none
  416100:	bl	4027e0 <__errno_location@plt>
  416104:	ldp	w4, w8, [x25]
  416108:	ldp	x7, x9, [x25, #40]
  41610c:	ldr	w26, [x0]
  416110:	add	x23, x25, #0x8
  416114:	orr	w22, w8, #0x1
  416118:	mov	x21, x0
  41611c:	mov	x0, xzr
  416120:	mov	x1, xzr
  416124:	mov	x2, x20
  416128:	mov	x3, x19
  41612c:	mov	w5, w22
  416130:	mov	x6, x23
  416134:	str	x9, [sp]
  416138:	bl	41511c <wcrtomb@plt+0x128ac>
  41613c:	add	x24, x0, #0x1
  416140:	mov	x0, x24
  416144:	bl	417290 <wcrtomb@plt+0x14a20>
  416148:	ldr	w4, [x25]
  41614c:	ldp	x7, x8, [x25, #40]
  416150:	mov	x1, x24
  416154:	mov	x2, x20
  416158:	mov	x3, x19
  41615c:	mov	w5, w22
  416160:	mov	x6, x23
  416164:	mov	x25, x0
  416168:	str	x8, [sp]
  41616c:	bl	41511c <wcrtomb@plt+0x128ac>
  416170:	str	w26, [x21]
  416174:	mov	x0, x25
  416178:	ldp	x20, x19, [sp, #80]
  41617c:	ldp	x22, x21, [sp, #64]
  416180:	ldp	x24, x23, [sp, #48]
  416184:	ldp	x26, x25, [sp, #32]
  416188:	ldp	x29, x30, [sp, #16]
  41618c:	add	sp, sp, #0x60
  416190:	ret
  416194:	sub	sp, sp, #0x70
  416198:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  41619c:	add	x8, x8, #0x740
  4161a0:	cmp	x3, #0x0
  4161a4:	stp	x29, x30, [sp, #16]
  4161a8:	stp	x28, x27, [sp, #32]
  4161ac:	stp	x26, x25, [sp, #48]
  4161b0:	stp	x24, x23, [sp, #64]
  4161b4:	stp	x22, x21, [sp, #80]
  4161b8:	stp	x20, x19, [sp, #96]
  4161bc:	add	x29, sp, #0x10
  4161c0:	mov	x19, x2
  4161c4:	mov	x22, x1
  4161c8:	mov	x23, x0
  4161cc:	csel	x21, x8, x3, eq  // eq = none
  4161d0:	bl	4027e0 <__errno_location@plt>
  4161d4:	ldp	w4, w8, [x21]
  4161d8:	cmp	x19, #0x0
  4161dc:	ldp	x7, x9, [x21, #40]
  4161e0:	ldr	w28, [x0]
  4161e4:	cset	w10, eq  // eq = none
  4161e8:	orr	w25, w8, w10
  4161ec:	add	x26, x21, #0x8
  4161f0:	mov	x24, x0
  4161f4:	mov	x0, xzr
  4161f8:	mov	x1, xzr
  4161fc:	mov	x2, x23
  416200:	mov	x3, x22
  416204:	mov	w5, w25
  416208:	mov	x6, x26
  41620c:	str	x9, [sp]
  416210:	bl	41511c <wcrtomb@plt+0x128ac>
  416214:	add	x27, x0, #0x1
  416218:	mov	x20, x0
  41621c:	mov	x0, x27
  416220:	bl	417290 <wcrtomb@plt+0x14a20>
  416224:	ldr	w4, [x21]
  416228:	ldp	x7, x8, [x21, #40]
  41622c:	mov	x1, x27
  416230:	mov	x2, x23
  416234:	mov	x3, x22
  416238:	mov	w5, w25
  41623c:	mov	x6, x26
  416240:	mov	x21, x0
  416244:	str	x8, [sp]
  416248:	bl	41511c <wcrtomb@plt+0x128ac>
  41624c:	str	w28, [x24]
  416250:	cbz	x19, 416258 <wcrtomb@plt+0x139e8>
  416254:	str	x20, [x19]
  416258:	mov	x0, x21
  41625c:	ldp	x20, x19, [sp, #96]
  416260:	ldp	x22, x21, [sp, #80]
  416264:	ldp	x24, x23, [sp, #64]
  416268:	ldp	x26, x25, [sp, #48]
  41626c:	ldp	x28, x27, [sp, #32]
  416270:	ldp	x29, x30, [sp, #16]
  416274:	add	sp, sp, #0x70
  416278:	ret
  41627c:	stp	x29, x30, [sp, #-48]!
  416280:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  416284:	add	x8, x8, #0x3f8
  416288:	ldr	w9, [x8]
  41628c:	stp	x20, x19, [sp, #32]
  416290:	ldr	x19, [x8, #8]
  416294:	adrp	x20, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  416298:	cmp	w9, #0x2
  41629c:	stp	x22, x21, [sp, #16]
  4162a0:	mov	x29, sp
  4162a4:	b.lt	4162c8 <wcrtomb@plt+0x13a58>  // b.tstop
  4162a8:	add	x21, x19, #0x18
  4162ac:	mov	w22, #0x1                   	// #1
  4162b0:	ldr	x0, [x21], #16
  4162b4:	bl	402620 <free@plt>
  4162b8:	ldrsw	x8, [x20, #1016]
  4162bc:	add	x22, x22, #0x1
  4162c0:	cmp	x22, x8
  4162c4:	b.lt	4162b0 <wcrtomb@plt+0x13a40>  // b.tstop
  4162c8:	ldr	x0, [x19, #8]
  4162cc:	adrp	x21, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4162d0:	add	x21, x21, #0x778
  4162d4:	adrp	x22, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4162d8:	cmp	x0, x21
  4162dc:	add	x22, x22, #0x408
  4162e0:	b.eq	4162f0 <wcrtomb@plt+0x13a80>  // b.none
  4162e4:	bl	402620 <free@plt>
  4162e8:	mov	w8, #0x100                 	// #256
  4162ec:	stp	x8, x21, [x22]
  4162f0:	cmp	x19, x22
  4162f4:	b.eq	416310 <wcrtomb@plt+0x13aa0>  // b.none
  4162f8:	mov	x0, x19
  4162fc:	bl	402620 <free@plt>
  416300:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  416304:	add	x8, x8, #0x400
  416308:	add	x9, x8, #0x8
  41630c:	str	x9, [x8]
  416310:	mov	w8, #0x1                   	// #1
  416314:	str	w8, [x20, #1016]
  416318:	ldp	x20, x19, [sp, #32]
  41631c:	ldp	x22, x21, [sp, #16]
  416320:	ldp	x29, x30, [sp], #48
  416324:	ret
  416328:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  41632c:	add	x3, x3, #0x740
  416330:	mov	x2, #0xffffffffffffffff    	// #-1
  416334:	b	416338 <wcrtomb@plt+0x13ac8>
  416338:	sub	sp, sp, #0x80
  41633c:	stp	x29, x30, [sp, #32]
  416340:	add	x29, sp, #0x20
  416344:	stp	x28, x27, [sp, #48]
  416348:	stp	x26, x25, [sp, #64]
  41634c:	stp	x24, x23, [sp, #80]
  416350:	stp	x22, x21, [sp, #96]
  416354:	stp	x20, x19, [sp, #112]
  416358:	mov	x22, x3
  41635c:	stur	x2, [x29, #-8]
  416360:	mov	x21, x1
  416364:	mov	w23, w0
  416368:	bl	4027e0 <__errno_location@plt>
  41636c:	tbnz	w23, #31, 4164c8 <wcrtomb@plt+0x13c58>
  416370:	adrp	x25, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  416374:	ldr	w8, [x25, #1016]
  416378:	adrp	x9, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  41637c:	ldr	w20, [x0]
  416380:	ldr	x27, [x9, #1024]
  416384:	mov	x19, x0
  416388:	cmp	w8, w23
  41638c:	b.gt	416404 <wcrtomb@plt+0x13b94>
  416390:	mov	w8, #0x7fffffff            	// #2147483647
  416394:	cmp	w23, w8
  416398:	stur	w20, [x29, #-12]
  41639c:	b.eq	4164cc <wcrtomb@plt+0x13c5c>  // b.none
  4163a0:	adrp	x28, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4163a4:	add	x28, x28, #0x400
  4163a8:	add	x20, x28, #0x8
  4163ac:	add	w26, w23, #0x1
  4163b0:	cmp	x27, x20
  4163b4:	csel	x0, xzr, x27, eq  // eq = none
  4163b8:	sbfiz	x1, x26, #4, #32
  4163bc:	bl	417310 <wcrtomb@plt+0x14aa0>
  4163c0:	mov	x24, x0
  4163c4:	cmp	x27, x20
  4163c8:	str	x0, [x28]
  4163cc:	b.ne	4163e0 <wcrtomb@plt+0x13b70>  // b.any
  4163d0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4163d4:	add	x8, x8, #0x408
  4163d8:	ldr	q0, [x8]
  4163dc:	str	q0, [x24]
  4163e0:	ldrsw	x8, [x25, #1016]
  4163e4:	mov	w1, wzr
  4163e8:	add	x0, x24, x8, lsl #4
  4163ec:	sub	w8, w26, w8
  4163f0:	sbfiz	x2, x8, #4, #32
  4163f4:	bl	402470 <memset@plt>
  4163f8:	ldur	w20, [x29, #-12]
  4163fc:	mov	x27, x24
  416400:	str	w26, [x25, #1016]
  416404:	add	x28, x27, w23, uxtw #4
  416408:	mov	x27, x28
  41640c:	ldr	x26, [x28]
  416410:	ldr	x23, [x27, #8]!
  416414:	ldp	w4, w8, [x22]
  416418:	ldp	x7, x9, [x22, #40]
  41641c:	ldur	x3, [x29, #-8]
  416420:	add	x24, x22, #0x8
  416424:	orr	w25, w8, #0x1
  416428:	mov	x0, x23
  41642c:	mov	x1, x26
  416430:	mov	x2, x21
  416434:	mov	w5, w25
  416438:	mov	x6, x24
  41643c:	str	x9, [sp]
  416440:	bl	41511c <wcrtomb@plt+0x128ac>
  416444:	cmp	x26, x0
  416448:	b.hi	4164a0 <wcrtomb@plt+0x13c30>  // b.pmore
  41644c:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  416450:	add	x8, x8, #0x778
  416454:	add	x26, x0, #0x1
  416458:	cmp	x23, x8
  41645c:	str	x26, [x28]
  416460:	b.eq	41646c <wcrtomb@plt+0x13bfc>  // b.none
  416464:	mov	x0, x23
  416468:	bl	402620 <free@plt>
  41646c:	mov	x0, x26
  416470:	bl	417290 <wcrtomb@plt+0x14a20>
  416474:	str	x0, [x27]
  416478:	ldr	w4, [x22]
  41647c:	ldp	x7, x8, [x22, #40]
  416480:	ldur	x3, [x29, #-8]
  416484:	mov	x1, x26
  416488:	mov	x2, x21
  41648c:	mov	w5, w25
  416490:	mov	x6, x24
  416494:	mov	x23, x0
  416498:	str	x8, [sp]
  41649c:	bl	41511c <wcrtomb@plt+0x128ac>
  4164a0:	str	w20, [x19]
  4164a4:	mov	x0, x23
  4164a8:	ldp	x20, x19, [sp, #112]
  4164ac:	ldp	x22, x21, [sp, #96]
  4164b0:	ldp	x24, x23, [sp, #80]
  4164b4:	ldp	x26, x25, [sp, #64]
  4164b8:	ldp	x28, x27, [sp, #48]
  4164bc:	ldp	x29, x30, [sp, #32]
  4164c0:	add	sp, sp, #0x80
  4164c4:	ret
  4164c8:	bl	402560 <abort@plt>
  4164cc:	bl	41757c <wcrtomb@plt+0x14d0c>
  4164d0:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4164d4:	add	x3, x3, #0x740
  4164d8:	b	416338 <wcrtomb@plt+0x13ac8>
  4164dc:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4164e0:	add	x3, x3, #0x740
  4164e4:	mov	x2, #0xffffffffffffffff    	// #-1
  4164e8:	mov	x1, x0
  4164ec:	mov	w0, wzr
  4164f0:	b	416338 <wcrtomb@plt+0x13ac8>
  4164f4:	adrp	x3, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4164f8:	mov	x2, x1
  4164fc:	add	x3, x3, #0x740
  416500:	mov	x1, x0
  416504:	mov	w0, wzr
  416508:	b	416338 <wcrtomb@plt+0x13ac8>
  41650c:	sub	sp, sp, #0x50
  416510:	movi	v0.2d, #0x0
  416514:	cmp	w1, #0xa
  416518:	stp	x29, x30, [sp, #64]
  41651c:	add	x29, sp, #0x40
  416520:	str	xzr, [sp, #48]
  416524:	stp	q0, q0, [sp, #16]
  416528:	str	q0, [sp]
  41652c:	b.eq	416554 <wcrtomb@plt+0x13ce4>  // b.none
  416530:	mov	x8, x2
  416534:	str	w1, [sp]
  416538:	mov	x3, sp
  41653c:	mov	x2, #0xffffffffffffffff    	// #-1
  416540:	mov	x1, x8
  416544:	bl	416338 <wcrtomb@plt+0x13ac8>
  416548:	ldp	x29, x30, [sp, #64]
  41654c:	add	sp, sp, #0x50
  416550:	ret
  416554:	bl	402560 <abort@plt>
  416558:	sub	sp, sp, #0x50
  41655c:	movi	v0.2d, #0x0
  416560:	cmp	w1, #0xa
  416564:	stp	x29, x30, [sp, #64]
  416568:	add	x29, sp, #0x40
  41656c:	str	xzr, [sp, #48]
  416570:	stp	q0, q0, [sp, #16]
  416574:	str	q0, [sp]
  416578:	b.eq	4165a0 <wcrtomb@plt+0x13d30>  // b.none
  41657c:	mov	x8, x3
  416580:	str	w1, [sp]
  416584:	mov	x3, sp
  416588:	mov	x1, x2
  41658c:	mov	x2, x8
  416590:	bl	416338 <wcrtomb@plt+0x13ac8>
  416594:	ldp	x29, x30, [sp, #64]
  416598:	add	sp, sp, #0x50
  41659c:	ret
  4165a0:	bl	402560 <abort@plt>
  4165a4:	sub	sp, sp, #0x50
  4165a8:	movi	v0.2d, #0x0
  4165ac:	cmp	w0, #0xa
  4165b0:	stp	x29, x30, [sp, #64]
  4165b4:	add	x29, sp, #0x40
  4165b8:	str	xzr, [sp, #48]
  4165bc:	stp	q0, q0, [sp, #16]
  4165c0:	str	q0, [sp]
  4165c4:	b.eq	4165e8 <wcrtomb@plt+0x13d78>  // b.none
  4165c8:	str	w0, [sp]
  4165cc:	mov	x3, sp
  4165d0:	mov	x2, #0xffffffffffffffff    	// #-1
  4165d4:	mov	w0, wzr
  4165d8:	bl	416338 <wcrtomb@plt+0x13ac8>
  4165dc:	ldp	x29, x30, [sp, #64]
  4165e0:	add	sp, sp, #0x50
  4165e4:	ret
  4165e8:	bl	402560 <abort@plt>
  4165ec:	sub	sp, sp, #0x50
  4165f0:	movi	v0.2d, #0x0
  4165f4:	cmp	w0, #0xa
  4165f8:	stp	x29, x30, [sp, #64]
  4165fc:	add	x29, sp, #0x40
  416600:	str	xzr, [sp, #48]
  416604:	stp	q0, q0, [sp, #16]
  416608:	str	q0, [sp]
  41660c:	b.eq	41662c <wcrtomb@plt+0x13dbc>  // b.none
  416610:	str	w0, [sp]
  416614:	mov	x3, sp
  416618:	mov	w0, wzr
  41661c:	bl	416338 <wcrtomb@plt+0x13ac8>
  416620:	ldp	x29, x30, [sp, #64]
  416624:	add	sp, sp, #0x50
  416628:	ret
  41662c:	bl	402560 <abort@plt>
  416630:	sub	sp, sp, #0x50
  416634:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  416638:	add	x9, x9, #0x740
  41663c:	ldp	q0, q1, [x9]
  416640:	ubfx	w10, w2, #5, #3
  416644:	mov	x11, sp
  416648:	mov	x8, x1
  41664c:	stp	q0, q1, [sp]
  416650:	ldr	q0, [x9, #32]
  416654:	ldr	x9, [x9, #48]
  416658:	mov	x1, x0
  41665c:	mov	x3, sp
  416660:	str	q0, [sp, #32]
  416664:	str	x9, [sp, #48]
  416668:	add	x9, x11, w10, uxtw #2
  41666c:	ldr	w10, [x9, #8]
  416670:	mov	w0, wzr
  416674:	stp	x29, x30, [sp, #64]
  416678:	add	x29, sp, #0x40
  41667c:	lsr	w11, w10, w2
  416680:	mvn	w11, w11
  416684:	and	w11, w11, #0x1
  416688:	lsl	w11, w11, w2
  41668c:	eor	w10, w11, w10
  416690:	mov	x2, x8
  416694:	str	w10, [x9, #8]
  416698:	bl	416338 <wcrtomb@plt+0x13ac8>
  41669c:	ldp	x29, x30, [sp, #64]
  4166a0:	add	sp, sp, #0x50
  4166a4:	ret
  4166a8:	sub	sp, sp, #0x50
  4166ac:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4166b0:	add	x9, x9, #0x740
  4166b4:	ldp	q0, q1, [x9]
  4166b8:	ubfx	w10, w1, #5, #3
  4166bc:	mov	x11, sp
  4166c0:	mov	x8, x0
  4166c4:	stp	q0, q1, [sp]
  4166c8:	ldr	q0, [x9, #32]
  4166cc:	ldr	x9, [x9, #48]
  4166d0:	mov	x3, sp
  4166d4:	mov	x2, #0xffffffffffffffff    	// #-1
  4166d8:	str	q0, [sp, #32]
  4166dc:	str	x9, [sp, #48]
  4166e0:	add	x9, x11, w10, uxtw #2
  4166e4:	ldr	w10, [x9, #8]
  4166e8:	mov	w0, wzr
  4166ec:	stp	x29, x30, [sp, #64]
  4166f0:	add	x29, sp, #0x40
  4166f4:	lsr	w11, w10, w1
  4166f8:	mvn	w11, w11
  4166fc:	and	w11, w11, #0x1
  416700:	lsl	w11, w11, w1
  416704:	eor	w10, w11, w10
  416708:	mov	x1, x8
  41670c:	str	w10, [x9, #8]
  416710:	bl	416338 <wcrtomb@plt+0x13ac8>
  416714:	ldp	x29, x30, [sp, #64]
  416718:	add	sp, sp, #0x50
  41671c:	ret
  416720:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  416724:	add	x8, x8, #0x740
  416728:	ldp	q0, q1, [x8]
  41672c:	ldr	q2, [x8, #32]
  416730:	ldr	x8, [x8, #48]
  416734:	mov	x1, x0
  416738:	stp	q0, q1, [sp, #-80]!
  41673c:	ldr	w9, [sp, #12]
  416740:	str	x8, [sp, #48]
  416744:	mov	x3, sp
  416748:	mov	x2, #0xffffffffffffffff    	// #-1
  41674c:	orr	w8, w9, #0x4000000
  416750:	mov	w0, wzr
  416754:	stp	x29, x30, [sp, #64]
  416758:	add	x29, sp, #0x40
  41675c:	str	q2, [sp, #32]
  416760:	str	w8, [sp, #12]
  416764:	bl	416338 <wcrtomb@plt+0x13ac8>
  416768:	ldp	x29, x30, [sp, #64]
  41676c:	add	sp, sp, #0x50
  416770:	ret
  416774:	adrp	x8, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  416778:	add	x8, x8, #0x740
  41677c:	ldp	q0, q1, [x8]
  416780:	ldr	q2, [x8, #32]
  416784:	ldr	x8, [x8, #48]
  416788:	mov	x2, x1
  41678c:	stp	q0, q1, [sp, #-80]!
  416790:	ldr	w9, [sp, #12]
  416794:	mov	x1, x0
  416798:	str	x8, [sp, #48]
  41679c:	mov	x3, sp
  4167a0:	orr	w8, w9, #0x4000000
  4167a4:	mov	w0, wzr
  4167a8:	stp	x29, x30, [sp, #64]
  4167ac:	add	x29, sp, #0x40
  4167b0:	str	q2, [sp, #32]
  4167b4:	str	w8, [sp, #12]
  4167b8:	bl	416338 <wcrtomb@plt+0x13ac8>
  4167bc:	ldp	x29, x30, [sp, #64]
  4167c0:	add	sp, sp, #0x50
  4167c4:	ret
  4167c8:	sub	sp, sp, #0x80
  4167cc:	movi	v0.2d, #0x0
  4167d0:	cmp	w1, #0xa
  4167d4:	stp	x29, x30, [sp, #112]
  4167d8:	add	x29, sp, #0x70
  4167dc:	str	wzr, [sp, #48]
  4167e0:	stp	q0, q0, [sp, #16]
  4167e4:	str	q0, [sp]
  4167e8:	b.eq	416838 <wcrtomb@plt+0x13fc8>  // b.none
  4167ec:	ldp	q0, q1, [sp]
  4167f0:	ldr	w9, [sp, #48]
  4167f4:	ldr	q2, [sp, #32]
  4167f8:	mov	x8, x2
  4167fc:	stur	q0, [sp, #60]
  416800:	ldr	w10, [sp, #68]
  416804:	str	w1, [sp, #56]
  416808:	str	w9, [sp, #108]
  41680c:	add	x3, sp, #0x38
  416810:	orr	w9, w10, #0x4000000
  416814:	mov	x2, #0xffffffffffffffff    	// #-1
  416818:	mov	x1, x8
  41681c:	stur	q1, [sp, #76]
  416820:	stur	q2, [sp, #92]
  416824:	str	w9, [sp, #68]
  416828:	bl	416338 <wcrtomb@plt+0x13ac8>
  41682c:	ldp	x29, x30, [sp, #112]
  416830:	add	sp, sp, #0x80
  416834:	ret
  416838:	bl	402560 <abort@plt>
  41683c:	sub	sp, sp, #0x50
  416840:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  416844:	add	x9, x9, #0x740
  416848:	ldp	q0, q1, [x9]
  41684c:	ldr	q2, [x9, #32]
  416850:	ldr	x9, [x9, #48]
  416854:	mov	w10, #0xa                   	// #10
  416858:	stp	x29, x30, [sp, #64]
  41685c:	add	x29, sp, #0x40
  416860:	stp	q0, q1, [sp]
  416864:	str	q2, [sp, #32]
  416868:	str	x9, [sp, #48]
  41686c:	str	w10, [sp]
  416870:	cbz	x1, 41689c <wcrtomb@plt+0x1402c>
  416874:	cbz	x2, 41689c <wcrtomb@plt+0x1402c>
  416878:	mov	x8, x3
  41687c:	stp	x1, x2, [sp, #40]
  416880:	mov	x3, sp
  416884:	mov	x2, #0xffffffffffffffff    	// #-1
  416888:	mov	x1, x8
  41688c:	bl	416338 <wcrtomb@plt+0x13ac8>
  416890:	ldp	x29, x30, [sp, #64]
  416894:	add	sp, sp, #0x50
  416898:	ret
  41689c:	bl	402560 <abort@plt>
  4168a0:	sub	sp, sp, #0x50
  4168a4:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  4168a8:	add	x9, x9, #0x740
  4168ac:	ldp	q0, q1, [x9]
  4168b0:	ldr	x10, [x9, #48]
  4168b4:	stp	x29, x30, [sp, #64]
  4168b8:	add	x29, sp, #0x40
  4168bc:	stp	q0, q1, [sp]
  4168c0:	ldr	q0, [x9, #32]
  4168c4:	mov	w9, #0xa                   	// #10
  4168c8:	str	x10, [sp, #48]
  4168cc:	str	w9, [sp]
  4168d0:	str	q0, [sp, #32]
  4168d4:	cbz	x1, 416900 <wcrtomb@plt+0x14090>
  4168d8:	cbz	x2, 416900 <wcrtomb@plt+0x14090>
  4168dc:	mov	x8, x3
  4168e0:	stp	x1, x2, [sp, #40]
  4168e4:	mov	x3, sp
  4168e8:	mov	x1, x8
  4168ec:	mov	x2, x4
  4168f0:	bl	416338 <wcrtomb@plt+0x13ac8>
  4168f4:	ldp	x29, x30, [sp, #64]
  4168f8:	add	sp, sp, #0x50
  4168fc:	ret
  416900:	bl	402560 <abort@plt>
  416904:	sub	sp, sp, #0x50
  416908:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  41690c:	add	x9, x9, #0x740
  416910:	ldp	q0, q1, [x9]
  416914:	ldr	q2, [x9, #32]
  416918:	ldr	x9, [x9, #48]
  41691c:	mov	w10, #0xa                   	// #10
  416920:	stp	x29, x30, [sp, #64]
  416924:	add	x29, sp, #0x40
  416928:	stp	q0, q1, [sp]
  41692c:	str	q2, [sp, #32]
  416930:	str	x9, [sp, #48]
  416934:	str	w10, [sp]
  416938:	cbz	x0, 416968 <wcrtomb@plt+0x140f8>
  41693c:	cbz	x1, 416968 <wcrtomb@plt+0x140f8>
  416940:	mov	x8, x2
  416944:	stp	x0, x1, [sp, #40]
  416948:	mov	x3, sp
  41694c:	mov	x2, #0xffffffffffffffff    	// #-1
  416950:	mov	w0, wzr
  416954:	mov	x1, x8
  416958:	bl	416338 <wcrtomb@plt+0x13ac8>
  41695c:	ldp	x29, x30, [sp, #64]
  416960:	add	sp, sp, #0x50
  416964:	ret
  416968:	bl	402560 <abort@plt>
  41696c:	sub	sp, sp, #0x50
  416970:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  416974:	add	x9, x9, #0x740
  416978:	ldp	q0, q1, [x9]
  41697c:	ldr	q2, [x9, #32]
  416980:	ldr	x9, [x9, #48]
  416984:	mov	w10, #0xa                   	// #10
  416988:	stp	x29, x30, [sp, #64]
  41698c:	add	x29, sp, #0x40
  416990:	stp	q0, q1, [sp]
  416994:	str	q2, [sp, #32]
  416998:	str	x9, [sp, #48]
  41699c:	str	w10, [sp]
  4169a0:	cbz	x0, 4169d0 <wcrtomb@plt+0x14160>
  4169a4:	cbz	x1, 4169d0 <wcrtomb@plt+0x14160>
  4169a8:	mov	x8, x3
  4169ac:	stp	x0, x1, [sp, #40]
  4169b0:	mov	x3, sp
  4169b4:	mov	w0, wzr
  4169b8:	mov	x1, x2
  4169bc:	mov	x2, x8
  4169c0:	bl	416338 <wcrtomb@plt+0x13ac8>
  4169c4:	ldp	x29, x30, [sp, #64]
  4169c8:	add	sp, sp, #0x50
  4169cc:	ret
  4169d0:	bl	402560 <abort@plt>
  4169d4:	adrp	x3, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4169d8:	add	x3, x3, #0x3c0
  4169dc:	b	416338 <wcrtomb@plt+0x13ac8>
  4169e0:	adrp	x3, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4169e4:	mov	x2, x1
  4169e8:	add	x3, x3, #0x3c0
  4169ec:	mov	x1, x0
  4169f0:	mov	w0, wzr
  4169f4:	b	416338 <wcrtomb@plt+0x13ac8>
  4169f8:	adrp	x3, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4169fc:	add	x3, x3, #0x3c0
  416a00:	mov	x2, #0xffffffffffffffff    	// #-1
  416a04:	b	416338 <wcrtomb@plt+0x13ac8>
  416a08:	adrp	x3, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  416a0c:	add	x3, x3, #0x3c0
  416a10:	mov	x2, #0xffffffffffffffff    	// #-1
  416a14:	mov	x1, x0
  416a18:	mov	w0, wzr
  416a1c:	b	416338 <wcrtomb@plt+0x13ac8>
  416a20:	stp	x29, x30, [sp, #-64]!
  416a24:	str	x23, [sp, #16]
  416a28:	mov	w23, #0x1                   	// #1
  416a2c:	stp	x22, x21, [sp, #32]
  416a30:	stp	x20, x19, [sp, #48]
  416a34:	mov	x21, x2
  416a38:	mov	x19, x1
  416a3c:	mov	w20, w0
  416a40:	movk	w23, #0x7ff0, lsl #16
  416a44:	mov	x29, sp
  416a48:	mov	w0, w20
  416a4c:	mov	x1, x19
  416a50:	mov	x2, x21
  416a54:	bl	4026c0 <read@plt>
  416a58:	mov	x22, x0
  416a5c:	tbz	x0, #63, 416a84 <wcrtomb@plt+0x14214>
  416a60:	bl	4027e0 <__errno_location@plt>
  416a64:	ldr	w8, [x0]
  416a68:	cmp	w8, #0x4
  416a6c:	b.eq	416a48 <wcrtomb@plt+0x141d8>  // b.none
  416a70:	cmp	x21, x23
  416a74:	b.cc	416a84 <wcrtomb@plt+0x14214>  // b.lo, b.ul, b.last
  416a78:	cmp	w8, #0x16
  416a7c:	mov	w21, #0x7ff00000            	// #2146435072
  416a80:	b.eq	416a48 <wcrtomb@plt+0x141d8>  // b.none
  416a84:	mov	x0, x22
  416a88:	ldp	x20, x19, [sp, #48]
  416a8c:	ldp	x22, x21, [sp, #32]
  416a90:	ldr	x23, [sp, #16]
  416a94:	ldp	x29, x30, [sp], #64
  416a98:	ret
  416a9c:	stp	x29, x30, [sp, #-32]!
  416aa0:	stp	x20, x19, [sp, #16]
  416aa4:	mov	x19, x1
  416aa8:	mov	w1, wzr
  416aac:	mov	x2, x19
  416ab0:	mov	x29, sp
  416ab4:	mov	x20, x0
  416ab8:	bl	4026d0 <memchr@plt>
  416abc:	sub	x8, x0, x20
  416ac0:	cmp	x0, #0x0
  416ac4:	csinc	x0, x19, x8, eq  // eq = none
  416ac8:	ldp	x20, x19, [sp, #16]
  416acc:	ldp	x29, x30, [sp], #32
  416ad0:	ret
  416ad4:	stp	x29, x30, [sp, #-48]!
  416ad8:	stp	x20, x19, [sp, #32]
  416adc:	mov	w19, w0
  416ae0:	cmp	w0, #0x2
  416ae4:	stp	x22, x21, [sp, #16]
  416ae8:	mov	x29, sp
  416aec:	b.hi	416b28 <wcrtomb@plt+0x142b8>  // b.pmore
  416af0:	mov	w0, w19
  416af4:	bl	42af68 <_obstack_memory_used@@Base+0x10dd4>
  416af8:	mov	w20, w0
  416afc:	bl	4027e0 <__errno_location@plt>
  416b00:	ldr	w22, [x0]
  416b04:	mov	x21, x0
  416b08:	mov	w0, w19
  416b0c:	bl	4024f0 <close@plt>
  416b10:	str	w22, [x21]
  416b14:	mov	w0, w20
  416b18:	ldp	x20, x19, [sp, #32]
  416b1c:	ldp	x22, x21, [sp, #16]
  416b20:	ldp	x29, x30, [sp], #48
  416b24:	ret
  416b28:	mov	w0, w19
  416b2c:	ldp	x20, x19, [sp, #32]
  416b30:	ldp	x22, x21, [sp, #16]
  416b34:	ldp	x29, x30, [sp], #48
  416b38:	ret
  416b3c:	sub	sp, sp, #0x50
  416b40:	stp	x22, x21, [sp, #48]
  416b44:	stp	x20, x19, [sp, #64]
  416b48:	mov	x21, x5
  416b4c:	mov	x20, x4
  416b50:	mov	x4, x3
  416b54:	mov	x3, x2
  416b58:	mov	x19, x0
  416b5c:	stp	x29, x30, [sp, #32]
  416b60:	add	x29, sp, #0x20
  416b64:	cbz	x1, 416b80 <wcrtomb@plt+0x14310>
  416b68:	mov	x2, x1
  416b6c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416b70:	add	x1, x1, #0xc37
  416b74:	mov	x0, x19
  416b78:	bl	402820 <fprintf@plt>
  416b7c:	b	416b98 <wcrtomb@plt+0x14328>
  416b80:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416b84:	add	x1, x1, #0xc43
  416b88:	mov	x0, x19
  416b8c:	mov	x2, x3
  416b90:	mov	x3, x4
  416b94:	bl	402820 <fprintf@plt>
  416b98:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416b9c:	add	x1, x1, #0xc4a
  416ba0:	mov	w2, #0x5                   	// #5
  416ba4:	mov	x0, xzr
  416ba8:	bl	402740 <dcgettext@plt>
  416bac:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416bb0:	mov	x2, x0
  416bb4:	add	x1, x1, #0xf36
  416bb8:	mov	w3, #0x7e4                 	// #2020
  416bbc:	mov	x0, x19
  416bc0:	bl	402820 <fprintf@plt>
  416bc4:	adrp	x22, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  416bc8:	add	x22, x22, #0xd74
  416bcc:	mov	x0, x22
  416bd0:	mov	x1, x19
  416bd4:	bl	402750 <fputs_unlocked@plt>
  416bd8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416bdc:	add	x1, x1, #0xc4e
  416be0:	mov	w2, #0x5                   	// #5
  416be4:	mov	x0, xzr
  416be8:	bl	402740 <dcgettext@plt>
  416bec:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416bf0:	mov	x1, x0
  416bf4:	add	x2, x2, #0xcf9
  416bf8:	mov	x0, x19
  416bfc:	bl	402820 <fprintf@plt>
  416c00:	mov	x0, x22
  416c04:	mov	x1, x19
  416c08:	bl	402750 <fputs_unlocked@plt>
  416c0c:	cmp	x21, #0x9
  416c10:	b.hi	416c60 <wcrtomb@plt+0x143f0>  // b.pmore
  416c14:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416c18:	add	x8, x8, #0xc2d
  416c1c:	adr	x9, 416c2c <wcrtomb@plt+0x143bc>
  416c20:	ldrb	w10, [x8, x21]
  416c24:	add	x9, x9, x10, lsl #2
  416c28:	br	x9
  416c2c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416c30:	add	x1, x1, #0xd1b
  416c34:	mov	w2, #0x5                   	// #5
  416c38:	mov	x0, xzr
  416c3c:	bl	402740 <dcgettext@plt>
  416c40:	ldr	x2, [x20]
  416c44:	mov	x1, x0
  416c48:	mov	x0, x19
  416c4c:	ldp	x20, x19, [sp, #64]
  416c50:	ldp	x22, x21, [sp, #48]
  416c54:	ldp	x29, x30, [sp, #32]
  416c58:	add	sp, sp, #0x50
  416c5c:	b	402820 <fprintf@plt>
  416c60:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416c64:	add	x1, x1, #0xe5a
  416c68:	b	416dbc <wcrtomb@plt+0x1454c>
  416c6c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416c70:	add	x1, x1, #0xd2b
  416c74:	mov	w2, #0x5                   	// #5
  416c78:	mov	x0, xzr
  416c7c:	bl	402740 <dcgettext@plt>
  416c80:	ldp	x2, x3, [x20]
  416c84:	mov	x1, x0
  416c88:	mov	x0, x19
  416c8c:	ldp	x20, x19, [sp, #64]
  416c90:	ldp	x22, x21, [sp, #48]
  416c94:	ldp	x29, x30, [sp, #32]
  416c98:	add	sp, sp, #0x50
  416c9c:	b	402820 <fprintf@plt>
  416ca0:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416ca4:	add	x1, x1, #0xd42
  416ca8:	mov	w2, #0x5                   	// #5
  416cac:	mov	x0, xzr
  416cb0:	bl	402740 <dcgettext@plt>
  416cb4:	ldp	x2, x3, [x20]
  416cb8:	ldr	x4, [x20, #16]
  416cbc:	mov	x1, x0
  416cc0:	mov	x0, x19
  416cc4:	ldp	x20, x19, [sp, #64]
  416cc8:	ldp	x22, x21, [sp, #48]
  416ccc:	ldp	x29, x30, [sp, #32]
  416cd0:	add	sp, sp, #0x50
  416cd4:	b	402820 <fprintf@plt>
  416cd8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416cdc:	add	x1, x1, #0xd5e
  416ce0:	mov	w2, #0x5                   	// #5
  416ce4:	mov	x0, xzr
  416ce8:	bl	402740 <dcgettext@plt>
  416cec:	ldp	x2, x3, [x20]
  416cf0:	ldp	x4, x5, [x20, #16]
  416cf4:	mov	x1, x0
  416cf8:	mov	x0, x19
  416cfc:	ldp	x20, x19, [sp, #64]
  416d00:	ldp	x22, x21, [sp, #48]
  416d04:	ldp	x29, x30, [sp, #32]
  416d08:	add	sp, sp, #0x50
  416d0c:	b	402820 <fprintf@plt>
  416d10:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416d14:	add	x1, x1, #0xd7e
  416d18:	mov	w2, #0x5                   	// #5
  416d1c:	mov	x0, xzr
  416d20:	bl	402740 <dcgettext@plt>
  416d24:	ldp	x2, x3, [x20]
  416d28:	ldp	x4, x5, [x20, #16]
  416d2c:	ldr	x6, [x20, #32]
  416d30:	mov	x1, x0
  416d34:	mov	x0, x19
  416d38:	ldp	x20, x19, [sp, #64]
  416d3c:	ldp	x22, x21, [sp, #48]
  416d40:	ldp	x29, x30, [sp, #32]
  416d44:	add	sp, sp, #0x50
  416d48:	b	402820 <fprintf@plt>
  416d4c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416d50:	add	x1, x1, #0xda2
  416d54:	mov	w2, #0x5                   	// #5
  416d58:	mov	x0, xzr
  416d5c:	bl	402740 <dcgettext@plt>
  416d60:	ldp	x2, x3, [x20]
  416d64:	ldp	x4, x5, [x20, #16]
  416d68:	ldp	x6, x7, [x20, #32]
  416d6c:	mov	x1, x0
  416d70:	mov	x0, x19
  416d74:	ldp	x20, x19, [sp, #64]
  416d78:	ldp	x22, x21, [sp, #48]
  416d7c:	ldp	x29, x30, [sp, #32]
  416d80:	add	sp, sp, #0x50
  416d84:	b	402820 <fprintf@plt>
  416d88:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416d8c:	add	x1, x1, #0xdca
  416d90:	mov	w2, #0x5                   	// #5
  416d94:	mov	x0, xzr
  416d98:	bl	402740 <dcgettext@plt>
  416d9c:	ldp	x2, x3, [x20]
  416da0:	ldp	x4, x5, [x20, #16]
  416da4:	ldp	x6, x7, [x20, #32]
  416da8:	ldr	x8, [x20, #48]
  416dac:	mov	x1, x0
  416db0:	b	416e18 <wcrtomb@plt+0x145a8>
  416db4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416db8:	add	x1, x1, #0xe26
  416dbc:	mov	w2, #0x5                   	// #5
  416dc0:	mov	x0, xzr
  416dc4:	bl	402740 <dcgettext@plt>
  416dc8:	ldr	q0, [x20, #48]
  416dcc:	ldr	x8, [x20, #64]
  416dd0:	ldp	x2, x3, [x20]
  416dd4:	ldp	x4, x5, [x20, #16]
  416dd8:	ldp	x6, x7, [x20, #32]
  416ddc:	mov	x1, x0
  416de0:	str	x8, [sp, #16]
  416de4:	str	q0, [sp]
  416de8:	b	416e1c <wcrtomb@plt+0x145ac>
  416dec:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  416df0:	add	x1, x1, #0xdf6
  416df4:	mov	w2, #0x5                   	// #5
  416df8:	mov	x0, xzr
  416dfc:	bl	402740 <dcgettext@plt>
  416e00:	ldp	x8, x9, [x20, #48]
  416e04:	ldp	x2, x3, [x20]
  416e08:	ldp	x4, x5, [x20, #16]
  416e0c:	ldp	x6, x7, [x20, #32]
  416e10:	mov	x1, x0
  416e14:	str	x9, [sp, #8]
  416e18:	str	x8, [sp]
  416e1c:	mov	x0, x19
  416e20:	bl	402820 <fprintf@plt>
  416e24:	ldp	x20, x19, [sp, #64]
  416e28:	ldp	x22, x21, [sp, #48]
  416e2c:	ldp	x29, x30, [sp, #32]
  416e30:	add	sp, sp, #0x50
  416e34:	ret
  416e38:	mov	x8, xzr
  416e3c:	ldr	x9, [x4, x8, lsl #3]
  416e40:	add	x8, x8, #0x1
  416e44:	cbnz	x9, 416e3c <wcrtomb@plt+0x145cc>
  416e48:	sub	x5, x8, #0x1
  416e4c:	b	416b3c <wcrtomb@plt+0x142cc>
  416e50:	sub	sp, sp, #0x60
  416e54:	stp	x29, x30, [sp, #80]
  416e58:	ldr	w9, [x4, #24]
  416e5c:	add	x29, sp, #0x50
  416e60:	mov	w8, w9
  416e64:	tbz	w9, #31, 416e98 <wcrtomb@plt+0x14628>
  416e68:	add	w8, w9, #0x8
  416e6c:	cmn	w9, #0x8
  416e70:	str	w8, [x4, #24]
  416e74:	b.gt	416e98 <wcrtomb@plt+0x14628>
  416e78:	ldr	x10, [x4, #8]
  416e7c:	sxtw	x9, w9
  416e80:	add	x9, x10, x9
  416e84:	ldr	x9, [x9]
  416e88:	str	x9, [sp]
  416e8c:	cbnz	x9, 416eb0 <wcrtomb@plt+0x14640>
  416e90:	mov	x5, xzr
  416e94:	b	417150 <wcrtomb@plt+0x148e0>
  416e98:	ldr	x9, [x4]
  416e9c:	add	x10, x9, #0x8
  416ea0:	str	x10, [x4]
  416ea4:	ldr	x9, [x9]
  416ea8:	str	x9, [sp]
  416eac:	cbz	x9, 416e90 <wcrtomb@plt+0x14620>
  416eb0:	tbnz	w8, #31, 416ebc <wcrtomb@plt+0x1464c>
  416eb4:	mov	w9, w8
  416eb8:	b	416ee8 <wcrtomb@plt+0x14678>
  416ebc:	add	w9, w8, #0x8
  416ec0:	cmn	w8, #0x8
  416ec4:	str	w9, [x4, #24]
  416ec8:	b.gt	416ee8 <wcrtomb@plt+0x14678>
  416ecc:	ldr	x10, [x4, #8]
  416ed0:	add	x8, x10, w8, sxtw
  416ed4:	ldr	x8, [x8]
  416ed8:	str	x8, [sp, #8]
  416edc:	cbnz	x8, 416f00 <wcrtomb@plt+0x14690>
  416ee0:	mov	w5, #0x1                   	// #1
  416ee4:	b	417150 <wcrtomb@plt+0x148e0>
  416ee8:	ldr	x8, [x4]
  416eec:	add	x10, x8, #0x8
  416ef0:	str	x10, [x4]
  416ef4:	ldr	x8, [x8]
  416ef8:	str	x8, [sp, #8]
  416efc:	cbz	x8, 416ee0 <wcrtomb@plt+0x14670>
  416f00:	tbnz	w9, #31, 416f0c <wcrtomb@plt+0x1469c>
  416f04:	mov	w8, w9
  416f08:	b	416f38 <wcrtomb@plt+0x146c8>
  416f0c:	add	w8, w9, #0x8
  416f10:	cmn	w9, #0x8
  416f14:	str	w8, [x4, #24]
  416f18:	b.gt	416f38 <wcrtomb@plt+0x146c8>
  416f1c:	ldr	x10, [x4, #8]
  416f20:	add	x9, x10, w9, sxtw
  416f24:	ldr	x9, [x9]
  416f28:	str	x9, [sp, #16]
  416f2c:	cbnz	x9, 416f50 <wcrtomb@plt+0x146e0>
  416f30:	mov	w5, #0x2                   	// #2
  416f34:	b	417150 <wcrtomb@plt+0x148e0>
  416f38:	ldr	x9, [x4]
  416f3c:	add	x10, x9, #0x8
  416f40:	str	x10, [x4]
  416f44:	ldr	x9, [x9]
  416f48:	str	x9, [sp, #16]
  416f4c:	cbz	x9, 416f30 <wcrtomb@plt+0x146c0>
  416f50:	tbnz	w8, #31, 416f5c <wcrtomb@plt+0x146ec>
  416f54:	mov	w9, w8
  416f58:	b	416f88 <wcrtomb@plt+0x14718>
  416f5c:	add	w9, w8, #0x8
  416f60:	cmn	w8, #0x8
  416f64:	str	w9, [x4, #24]
  416f68:	b.gt	416f88 <wcrtomb@plt+0x14718>
  416f6c:	ldr	x10, [x4, #8]
  416f70:	add	x8, x10, w8, sxtw
  416f74:	ldr	x8, [x8]
  416f78:	str	x8, [sp, #24]
  416f7c:	cbnz	x8, 416fa0 <wcrtomb@plt+0x14730>
  416f80:	mov	w5, #0x3                   	// #3
  416f84:	b	417150 <wcrtomb@plt+0x148e0>
  416f88:	ldr	x8, [x4]
  416f8c:	add	x10, x8, #0x8
  416f90:	str	x10, [x4]
  416f94:	ldr	x8, [x8]
  416f98:	str	x8, [sp, #24]
  416f9c:	cbz	x8, 416f80 <wcrtomb@plt+0x14710>
  416fa0:	tbnz	w9, #31, 416fac <wcrtomb@plt+0x1473c>
  416fa4:	mov	w8, w9
  416fa8:	b	416fd8 <wcrtomb@plt+0x14768>
  416fac:	add	w8, w9, #0x8
  416fb0:	cmn	w9, #0x8
  416fb4:	str	w8, [x4, #24]
  416fb8:	b.gt	416fd8 <wcrtomb@plt+0x14768>
  416fbc:	ldr	x10, [x4, #8]
  416fc0:	add	x9, x10, w9, sxtw
  416fc4:	ldr	x9, [x9]
  416fc8:	str	x9, [sp, #32]
  416fcc:	cbnz	x9, 416ff0 <wcrtomb@plt+0x14780>
  416fd0:	mov	w5, #0x4                   	// #4
  416fd4:	b	417150 <wcrtomb@plt+0x148e0>
  416fd8:	ldr	x9, [x4]
  416fdc:	add	x10, x9, #0x8
  416fe0:	str	x10, [x4]
  416fe4:	ldr	x9, [x9]
  416fe8:	str	x9, [sp, #32]
  416fec:	cbz	x9, 416fd0 <wcrtomb@plt+0x14760>
  416ff0:	tbnz	w8, #31, 416ffc <wcrtomb@plt+0x1478c>
  416ff4:	mov	w9, w8
  416ff8:	b	417018 <wcrtomb@plt+0x147a8>
  416ffc:	add	w9, w8, #0x8
  417000:	cmn	w8, #0x8
  417004:	str	w9, [x4, #24]
  417008:	b.gt	417018 <wcrtomb@plt+0x147a8>
  41700c:	ldr	x10, [x4, #8]
  417010:	add	x8, x10, w8, sxtw
  417014:	b	417024 <wcrtomb@plt+0x147b4>
  417018:	ldr	x8, [x4]
  41701c:	add	x10, x8, #0x8
  417020:	str	x10, [x4]
  417024:	ldr	x8, [x8]
  417028:	str	x8, [sp, #40]
  41702c:	cbz	x8, 41703c <wcrtomb@plt+0x147cc>
  417030:	tbnz	w9, #31, 417044 <wcrtomb@plt+0x147d4>
  417034:	mov	w8, w9
  417038:	b	417060 <wcrtomb@plt+0x147f0>
  41703c:	mov	w5, #0x5                   	// #5
  417040:	b	417150 <wcrtomb@plt+0x148e0>
  417044:	add	w8, w9, #0x8
  417048:	cmn	w9, #0x8
  41704c:	str	w8, [x4, #24]
  417050:	b.gt	417060 <wcrtomb@plt+0x147f0>
  417054:	ldr	x10, [x4, #8]
  417058:	add	x9, x10, w9, sxtw
  41705c:	b	41706c <wcrtomb@plt+0x147fc>
  417060:	ldr	x9, [x4]
  417064:	add	x10, x9, #0x8
  417068:	str	x10, [x4]
  41706c:	ldr	x9, [x9]
  417070:	str	x9, [sp, #48]
  417074:	cbz	x9, 417084 <wcrtomb@plt+0x14814>
  417078:	tbnz	w8, #31, 41708c <wcrtomb@plt+0x1481c>
  41707c:	mov	w9, w8
  417080:	b	4170a8 <wcrtomb@plt+0x14838>
  417084:	mov	w5, #0x6                   	// #6
  417088:	b	417150 <wcrtomb@plt+0x148e0>
  41708c:	add	w9, w8, #0x8
  417090:	cmn	w8, #0x8
  417094:	str	w9, [x4, #24]
  417098:	b.gt	4170a8 <wcrtomb@plt+0x14838>
  41709c:	ldr	x10, [x4, #8]
  4170a0:	add	x8, x10, w8, sxtw
  4170a4:	b	4170b4 <wcrtomb@plt+0x14844>
  4170a8:	ldr	x8, [x4]
  4170ac:	add	x10, x8, #0x8
  4170b0:	str	x10, [x4]
  4170b4:	ldr	x8, [x8]
  4170b8:	str	x8, [sp, #56]
  4170bc:	cbz	x8, 4170cc <wcrtomb@plt+0x1485c>
  4170c0:	tbnz	w9, #31, 4170d4 <wcrtomb@plt+0x14864>
  4170c4:	mov	w8, w9
  4170c8:	b	4170f0 <wcrtomb@plt+0x14880>
  4170cc:	mov	w5, #0x7                   	// #7
  4170d0:	b	417150 <wcrtomb@plt+0x148e0>
  4170d4:	add	w8, w9, #0x8
  4170d8:	cmn	w9, #0x8
  4170dc:	str	w8, [x4, #24]
  4170e0:	b.gt	4170f0 <wcrtomb@plt+0x14880>
  4170e4:	ldr	x10, [x4, #8]
  4170e8:	add	x9, x10, w9, sxtw
  4170ec:	b	4170fc <wcrtomb@plt+0x1488c>
  4170f0:	ldr	x9, [x4]
  4170f4:	add	x10, x9, #0x8
  4170f8:	str	x10, [x4]
  4170fc:	ldr	x9, [x9]
  417100:	str	x9, [sp, #64]
  417104:	cbz	x9, 41714c <wcrtomb@plt+0x148dc>
  417108:	tbz	w8, #31, 417128 <wcrtomb@plt+0x148b8>
  41710c:	add	w9, w8, #0x8
  417110:	cmn	w8, #0x8
  417114:	str	w9, [x4, #24]
  417118:	b.gt	417128 <wcrtomb@plt+0x148b8>
  41711c:	ldr	x9, [x4, #8]
  417120:	add	x8, x9, w8, sxtw
  417124:	b	417134 <wcrtomb@plt+0x148c4>
  417128:	ldr	x8, [x4]
  41712c:	add	x9, x8, #0x8
  417130:	str	x9, [x4]
  417134:	ldr	x8, [x8]
  417138:	str	x8, [sp, #72]
  41713c:	cmp	x8, #0x0
  417140:	mov	w8, #0x9                   	// #9
  417144:	cinc	x5, x8, ne  // ne = any
  417148:	b	417150 <wcrtomb@plt+0x148e0>
  41714c:	mov	w5, #0x8                   	// #8
  417150:	mov	x4, sp
  417154:	bl	416b3c <wcrtomb@plt+0x142cc>
  417158:	ldp	x29, x30, [sp, #80]
  41715c:	add	sp, sp, #0x60
  417160:	ret
  417164:	sub	sp, sp, #0xf0
  417168:	stp	x29, x30, [sp, #224]
  41716c:	add	x29, sp, #0xe0
  417170:	mov	x8, #0xffffffffffffffe0    	// #-32
  417174:	mov	x9, sp
  417178:	sub	x10, x29, #0x60
  41717c:	movk	x8, #0xff80, lsl #32
  417180:	add	x11, x29, #0x10
  417184:	add	x9, x9, #0x80
  417188:	add	x10, x10, #0x20
  41718c:	stp	x9, x8, [x29, #-16]
  417190:	stp	x11, x10, [x29, #-32]
  417194:	stp	x4, x5, [x29, #-96]
  417198:	stp	x6, x7, [x29, #-80]
  41719c:	stp	q0, q1, [sp]
  4171a0:	ldp	q0, q1, [x29, #-32]
  4171a4:	sub	x4, x29, #0x40
  4171a8:	stp	q2, q3, [sp, #32]
  4171ac:	stp	q4, q5, [sp, #64]
  4171b0:	stp	q6, q7, [sp, #96]
  4171b4:	stp	q0, q1, [x29, #-64]
  4171b8:	bl	416e50 <wcrtomb@plt+0x145e0>
  4171bc:	ldp	x29, x30, [sp, #224]
  4171c0:	add	sp, sp, #0xf0
  4171c4:	ret
  4171c8:	stp	x29, x30, [sp, #-16]!
  4171cc:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  4171d0:	ldr	x1, [x8, #1080]
  4171d4:	adrp	x0, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  4171d8:	add	x0, x0, #0xd74
  4171dc:	mov	x29, sp
  4171e0:	bl	402750 <fputs_unlocked@plt>
  4171e4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4171e8:	add	x1, x1, #0xe96
  4171ec:	mov	w2, #0x5                   	// #5
  4171f0:	mov	x0, xzr
  4171f4:	bl	402740 <dcgettext@plt>
  4171f8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4171fc:	add	x1, x1, #0xeaa
  417200:	bl	4027c0 <printf@plt>
  417204:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417208:	add	x1, x1, #0xebb
  41720c:	mov	w2, #0x5                   	// #5
  417210:	mov	x0, xzr
  417214:	bl	402740 <dcgettext@plt>
  417218:	adrp	x1, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  41721c:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417220:	add	x1, x1, #0xf7b
  417224:	add	x2, x2, #0xecf
  417228:	bl	4027c0 <printf@plt>
  41722c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417230:	add	x1, x1, #0xef2
  417234:	mov	w2, #0x5                   	// #5
  417238:	mov	x0, xzr
  41723c:	bl	402740 <dcgettext@plt>
  417240:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417244:	add	x1, x1, #0xf19
  417248:	ldp	x29, x30, [sp], #16
  41724c:	b	4027c0 <printf@plt>
  417250:	stp	x29, x30, [sp, #-32]!
  417254:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  417258:	udiv	x8, x8, x1
  41725c:	cmp	x8, x0
  417260:	str	x19, [sp, #16]
  417264:	mov	x29, sp
  417268:	b.cc	41728c <wcrtomb@plt+0x14a1c>  // b.lo, b.ul, b.last
  41726c:	mul	x19, x1, x0
  417270:	mov	x0, x19
  417274:	bl	4023a0 <malloc@plt>
  417278:	cbz	x19, 417280 <wcrtomb@plt+0x14a10>
  41727c:	cbz	x0, 41728c <wcrtomb@plt+0x14a1c>
  417280:	ldr	x19, [sp, #16]
  417284:	ldp	x29, x30, [sp], #32
  417288:	ret
  41728c:	bl	41757c <wcrtomb@plt+0x14d0c>
  417290:	stp	x29, x30, [sp, #-32]!
  417294:	str	x19, [sp, #16]
  417298:	mov	x29, sp
  41729c:	mov	x19, x0
  4172a0:	bl	4023a0 <malloc@plt>
  4172a4:	cbz	x19, 4172ac <wcrtomb@plt+0x14a3c>
  4172a8:	cbz	x0, 4172b8 <wcrtomb@plt+0x14a48>
  4172ac:	ldr	x19, [sp, #16]
  4172b0:	ldp	x29, x30, [sp], #32
  4172b4:	ret
  4172b8:	bl	41757c <wcrtomb@plt+0x14d0c>
  4172bc:	stp	x29, x30, [sp, #-32]!
  4172c0:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4172c4:	udiv	x8, x8, x2
  4172c8:	cmp	x8, x1
  4172cc:	str	x19, [sp, #16]
  4172d0:	mov	x29, sp
  4172d4:	b.cc	41730c <wcrtomb@plt+0x14a9c>  // b.lo, b.ul, b.last
  4172d8:	mul	x19, x2, x1
  4172dc:	cbz	x0, 4172f0 <wcrtomb@plt+0x14a80>
  4172e0:	cbnz	x19, 4172f0 <wcrtomb@plt+0x14a80>
  4172e4:	bl	402620 <free@plt>
  4172e8:	mov	x0, xzr
  4172ec:	b	417300 <wcrtomb@plt+0x14a90>
  4172f0:	mov	x1, x19
  4172f4:	bl	4024c0 <realloc@plt>
  4172f8:	cbz	x19, 417300 <wcrtomb@plt+0x14a90>
  4172fc:	cbz	x0, 41730c <wcrtomb@plt+0x14a9c>
  417300:	ldr	x19, [sp, #16]
  417304:	ldp	x29, x30, [sp], #32
  417308:	ret
  41730c:	bl	41757c <wcrtomb@plt+0x14d0c>
  417310:	stp	x29, x30, [sp, #-32]!
  417314:	str	x19, [sp, #16]
  417318:	mov	x19, x1
  41731c:	mov	x29, sp
  417320:	cbz	x0, 417334 <wcrtomb@plt+0x14ac4>
  417324:	cbnz	x19, 417334 <wcrtomb@plt+0x14ac4>
  417328:	bl	402620 <free@plt>
  41732c:	mov	x0, xzr
  417330:	b	417344 <wcrtomb@plt+0x14ad4>
  417334:	mov	x1, x19
  417338:	bl	4024c0 <realloc@plt>
  41733c:	cbz	x19, 417344 <wcrtomb@plt+0x14ad4>
  417340:	cbz	x0, 417350 <wcrtomb@plt+0x14ae0>
  417344:	ldr	x19, [sp, #16]
  417348:	ldp	x29, x30, [sp], #32
  41734c:	ret
  417350:	bl	41757c <wcrtomb@plt+0x14d0c>
  417354:	stp	x29, x30, [sp, #-32]!
  417358:	ldr	x8, [x1]
  41735c:	str	x19, [sp, #16]
  417360:	mov	x29, sp
  417364:	cbz	x0, 4173a8 <wcrtomb@plt+0x14b38>
  417368:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  41736c:	movk	x9, #0x5554
  417370:	udiv	x9, x9, x2
  417374:	cmp	x9, x8
  417378:	b.ls	4173e4 <wcrtomb@plt+0x14b74>  // b.plast
  41737c:	add	x8, x8, x8, lsr #1
  417380:	add	x9, x8, #0x1
  417384:	mul	x8, x9, x2
  417388:	str	x9, [x1]
  41738c:	cbz	x8, 4173e8 <wcrtomb@plt+0x14b78>
  417390:	mov	x1, x8
  417394:	bl	4024c0 <realloc@plt>
  417398:	cbz	x0, 4173e4 <wcrtomb@plt+0x14b74>
  41739c:	ldr	x19, [sp, #16]
  4173a0:	ldp	x29, x30, [sp], #32
  4173a4:	ret
  4173a8:	cbnz	x8, 4173bc <wcrtomb@plt+0x14b4c>
  4173ac:	mov	w8, #0x80                  	// #128
  4173b0:	udiv	x8, x8, x2
  4173b4:	cmp	x2, #0x80
  4173b8:	cinc	x8, x8, hi  // hi = pmore
  4173bc:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  4173c0:	udiv	x9, x9, x2
  4173c4:	cmp	x9, x8
  4173c8:	b.cc	4173e4 <wcrtomb@plt+0x14b74>  // b.lo, b.ul, b.last
  4173cc:	mul	x19, x8, x2
  4173d0:	mov	x0, x19
  4173d4:	str	x8, [x1]
  4173d8:	bl	4023a0 <malloc@plt>
  4173dc:	cbz	x19, 41739c <wcrtomb@plt+0x14b2c>
  4173e0:	cbnz	x0, 41739c <wcrtomb@plt+0x14b2c>
  4173e4:	bl	41757c <wcrtomb@plt+0x14d0c>
  4173e8:	bl	402620 <free@plt>
  4173ec:	mov	x0, xzr
  4173f0:	ldr	x19, [sp, #16]
  4173f4:	ldp	x29, x30, [sp], #32
  4173f8:	ret
  4173fc:	stp	x29, x30, [sp, #-32]!
  417400:	str	x19, [sp, #16]
  417404:	mov	x29, sp
  417408:	mov	x19, x0
  41740c:	bl	4023a0 <malloc@plt>
  417410:	cbz	x19, 417418 <wcrtomb@plt+0x14ba8>
  417414:	cbz	x0, 417424 <wcrtomb@plt+0x14bb4>
  417418:	ldr	x19, [sp, #16]
  41741c:	ldp	x29, x30, [sp], #32
  417420:	ret
  417424:	bl	41757c <wcrtomb@plt+0x14d0c>
  417428:	stp	x29, x30, [sp, #-16]!
  41742c:	ldr	x8, [x1]
  417430:	mov	x29, sp
  417434:	cbz	x0, 417468 <wcrtomb@plt+0x14bf8>
  417438:	mov	x9, #0x5555555555555555    	// #6148914691236517205
  41743c:	movk	x9, #0x5554
  417440:	cmp	x8, x9
  417444:	b.cs	4174ac <wcrtomb@plt+0x14c3c>  // b.hs, b.nlast
  417448:	add	x8, x8, x8, lsr #1
  41744c:	adds	x8, x8, #0x1
  417450:	str	x8, [x1]
  417454:	b.eq	417488 <wcrtomb@plt+0x14c18>  // b.none
  417458:	mov	x1, x8
  41745c:	bl	4024c0 <realloc@plt>
  417460:	cbnz	x0, 417480 <wcrtomb@plt+0x14c10>
  417464:	b	4174ac <wcrtomb@plt+0x14c3c>
  417468:	cbz	x8, 417498 <wcrtomb@plt+0x14c28>
  41746c:	tbnz	x8, #63, 4174ac <wcrtomb@plt+0x14c3c>
  417470:	mov	x0, x8
  417474:	str	x8, [x1]
  417478:	bl	4023a0 <malloc@plt>
  41747c:	cbz	x0, 4174ac <wcrtomb@plt+0x14c3c>
  417480:	ldp	x29, x30, [sp], #16
  417484:	ret
  417488:	bl	402620 <free@plt>
  41748c:	mov	x0, xzr
  417490:	ldp	x29, x30, [sp], #16
  417494:	ret
  417498:	mov	w8, #0x80                  	// #128
  41749c:	mov	x0, x8
  4174a0:	str	x8, [x1]
  4174a4:	bl	4023a0 <malloc@plt>
  4174a8:	cbnz	x0, 417480 <wcrtomb@plt+0x14c10>
  4174ac:	bl	41757c <wcrtomb@plt+0x14d0c>
  4174b0:	stp	x29, x30, [sp, #-16]!
  4174b4:	mov	x29, sp
  4174b8:	tbnz	x0, #63, 4174d0 <wcrtomb@plt+0x14c60>
  4174bc:	mov	w1, #0x1                   	// #1
  4174c0:	bl	402480 <calloc@plt>
  4174c4:	cbz	x0, 4174d0 <wcrtomb@plt+0x14c60>
  4174c8:	ldp	x29, x30, [sp], #16
  4174cc:	ret
  4174d0:	bl	41757c <wcrtomb@plt+0x14d0c>
  4174d4:	stp	x29, x30, [sp, #-16]!
  4174d8:	mov	x8, #0x7fffffffffffffff    	// #9223372036854775807
  4174dc:	udiv	x8, x8, x1
  4174e0:	cmp	x8, x0
  4174e4:	mov	x29, sp
  4174e8:	b.cc	4174fc <wcrtomb@plt+0x14c8c>  // b.lo, b.ul, b.last
  4174ec:	bl	402480 <calloc@plt>
  4174f0:	cbz	x0, 4174fc <wcrtomb@plt+0x14c8c>
  4174f4:	ldp	x29, x30, [sp], #16
  4174f8:	ret
  4174fc:	bl	41757c <wcrtomb@plt+0x14d0c>
  417500:	stp	x29, x30, [sp, #-32]!
  417504:	stp	x20, x19, [sp, #16]
  417508:	mov	x20, x0
  41750c:	mov	x0, x1
  417510:	mov	x29, sp
  417514:	mov	x19, x1
  417518:	bl	4023a0 <malloc@plt>
  41751c:	cbz	x19, 417524 <wcrtomb@plt+0x14cb4>
  417520:	cbz	x0, 417538 <wcrtomb@plt+0x14cc8>
  417524:	mov	x1, x20
  417528:	mov	x2, x19
  41752c:	ldp	x20, x19, [sp, #16]
  417530:	ldp	x29, x30, [sp], #32
  417534:	b	402210 <memcpy@plt>
  417538:	bl	41757c <wcrtomb@plt+0x14d0c>
  41753c:	stp	x29, x30, [sp, #-32]!
  417540:	stp	x20, x19, [sp, #16]
  417544:	mov	x29, sp
  417548:	mov	x19, x0
  41754c:	bl	402270 <strlen@plt>
  417550:	add	x20, x0, #0x1
  417554:	mov	x0, x20
  417558:	bl	4023a0 <malloc@plt>
  41755c:	cbz	x20, 417564 <wcrtomb@plt+0x14cf4>
  417560:	cbz	x0, 417578 <wcrtomb@plt+0x14d08>
  417564:	mov	x1, x19
  417568:	mov	x2, x20
  41756c:	ldp	x20, x19, [sp, #16]
  417570:	ldp	x29, x30, [sp], #32
  417574:	b	402210 <memcpy@plt>
  417578:	bl	41757c <wcrtomb@plt+0x14d0c>
  41757c:	stp	x29, x30, [sp, #-32]!
  417580:	str	x19, [sp, #16]
  417584:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  417588:	ldr	w19, [x8, #952]
  41758c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417590:	add	x1, x1, #0xf65
  417594:	mov	w2, #0x5                   	// #5
  417598:	mov	x0, xzr
  41759c:	mov	x29, sp
  4175a0:	bl	402740 <dcgettext@plt>
  4175a4:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  4175a8:	mov	x3, x0
  4175ac:	add	x2, x2, #0x3d7
  4175b0:	mov	w0, w19
  4175b4:	mov	w1, wzr
  4175b8:	bl	4022a0 <error@plt>
  4175bc:	bl	402560 <abort@plt>
  4175c0:	stp	x29, x30, [sp, #-80]!
  4175c4:	cmp	w2, #0x25
  4175c8:	str	x25, [sp, #16]
  4175cc:	stp	x24, x23, [sp, #32]
  4175d0:	stp	x22, x21, [sp, #48]
  4175d4:	stp	x20, x19, [sp, #64]
  4175d8:	mov	x29, sp
  4175dc:	b.cs	417b24 <wcrtomb@plt+0x152b4>  // b.hs, b.nlast
  4175e0:	cmp	x1, #0x0
  4175e4:	add	x8, x29, #0x18
  4175e8:	mov	x23, x4
  4175ec:	mov	x19, x3
  4175f0:	mov	w22, w2
  4175f4:	mov	x20, x0
  4175f8:	csel	x21, x8, x1, eq  // eq = none
  4175fc:	bl	4027e0 <__errno_location@plt>
  417600:	mov	x24, x0
  417604:	str	wzr, [x0]
  417608:	mov	x0, x20
  41760c:	mov	x1, x21
  417610:	mov	w2, w22
  417614:	mov	w3, wzr
  417618:	bl	402400 <__strtol_internal@plt>
  41761c:	ldr	x25, [x21]
  417620:	cmp	x25, x20
  417624:	b.eq	417650 <wcrtomb@plt+0x14de0>  // b.none
  417628:	ldr	w20, [x24]
  41762c:	mov	x22, x0
  417630:	cbz	w20, 417640 <wcrtomb@plt+0x14dd0>
  417634:	cmp	w20, #0x22
  417638:	b.ne	417708 <wcrtomb@plt+0x14e98>  // b.any
  41763c:	mov	w20, #0x1                   	// #1
  417640:	cbz	x23, 417b04 <wcrtomb@plt+0x15294>
  417644:	ldrb	w24, [x25]
  417648:	cbnz	w24, 417678 <wcrtomb@plt+0x14e08>
  41764c:	b	417b04 <wcrtomb@plt+0x15294>
  417650:	cbz	x23, 417708 <wcrtomb@plt+0x14e98>
  417654:	ldrb	w1, [x20]
  417658:	cbz	w1, 417708 <wcrtomb@plt+0x14e98>
  41765c:	mov	x0, x23
  417660:	bl	402640 <strchr@plt>
  417664:	cbz	x0, 417708 <wcrtomb@plt+0x14e98>
  417668:	mov	w20, wzr
  41766c:	mov	w22, #0x1                   	// #1
  417670:	ldrb	w24, [x25]
  417674:	cbz	w24, 417b04 <wcrtomb@plt+0x15294>
  417678:	mov	x0, x23
  41767c:	mov	w1, w24
  417680:	bl	402640 <strchr@plt>
  417684:	cbz	x0, 417770 <wcrtomb@plt+0x14f00>
  417688:	sub	w10, w24, #0x45
  41768c:	mov	w8, #0x1                   	// #1
  417690:	cmp	w10, #0x2f
  417694:	mov	w9, #0x400                 	// #1024
  417698:	b.hi	417718 <wcrtomb@plt+0x14ea8>  // b.pmore
  41769c:	mov	w11, #0x1                   	// #1
  4176a0:	lsl	x10, x11, x10
  4176a4:	mov	x11, #0x8945                	// #35141
  4176a8:	movk	x11, #0x30, lsl #16
  4176ac:	movk	x11, #0x8144, lsl #32
  4176b0:	tst	x10, x11
  4176b4:	b.eq	417718 <wcrtomb@plt+0x14ea8>  // b.none
  4176b8:	mov	w1, #0x30                  	// #48
  4176bc:	mov	x0, x23
  4176c0:	bl	402640 <strchr@plt>
  4176c4:	cbz	x0, 417710 <wcrtomb@plt+0x14ea0>
  4176c8:	ldrb	w8, [x25, #1]
  4176cc:	cmp	w8, #0x42
  4176d0:	b.eq	417728 <wcrtomb@plt+0x14eb8>  // b.none
  4176d4:	cmp	w8, #0x44
  4176d8:	b.eq	417728 <wcrtomb@plt+0x14eb8>  // b.none
  4176dc:	cmp	w8, #0x69
  4176e0:	b.ne	417710 <wcrtomb@plt+0x14ea0>  // b.any
  4176e4:	ldrb	w8, [x25, #2]
  4176e8:	mov	w9, #0x3                   	// #3
  4176ec:	cmp	w8, #0x42
  4176f0:	csinc	x8, x9, xzr, eq  // eq = none
  4176f4:	mov	w9, #0x400                 	// #1024
  4176f8:	sub	w10, w24, #0x42
  4176fc:	cmp	w10, #0x35
  417700:	b.ls	41773c <wcrtomb@plt+0x14ecc>  // b.plast
  417704:	b	417770 <wcrtomb@plt+0x14f00>
  417708:	mov	w20, #0x4                   	// #4
  41770c:	b	417b08 <wcrtomb@plt+0x15298>
  417710:	mov	w8, #0x1                   	// #1
  417714:	mov	w9, #0x400                 	// #1024
  417718:	sub	w10, w24, #0x42
  41771c:	cmp	w10, #0x35
  417720:	b.ls	41773c <wcrtomb@plt+0x14ecc>  // b.plast
  417724:	b	417770 <wcrtomb@plt+0x14f00>
  417728:	mov	w8, #0x2                   	// #2
  41772c:	mov	w9, #0x3e8                 	// #1000
  417730:	sub	w10, w24, #0x42
  417734:	cmp	w10, #0x35
  417738:	b.hi	417770 <wcrtomb@plt+0x14f00>  // b.pmore
  41773c:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417740:	add	x11, x11, #0xf76
  417744:	adr	x12, 417758 <wcrtomb@plt+0x14ee8>
  417748:	ldrb	w13, [x11, x10]
  41774c:	add	x12, x12, x13, lsl #2
  417750:	mov	w10, wzr
  417754:	br	x12
  417758:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  41775c:	sdiv	x10, x12, x9
  417760:	cmp	x22, x10
  417764:	b.ge	41787c <wcrtomb@plt+0x1500c>  // b.tcont
  417768:	mov	w11, #0x1                   	// #1
  41776c:	b	417894 <wcrtomb@plt+0x15024>
  417770:	orr	w20, w20, #0x2
  417774:	b	417b04 <wcrtomb@plt+0x15294>
  417778:	mov	x10, #0x8000000000000000    	// #-9223372036854775808
  41777c:	sdiv	x10, x10, x9
  417780:	cmp	x22, x10
  417784:	b.lt	417870 <wcrtomb@plt+0x15000>  // b.tstop
  417788:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  41778c:	mul	x12, x22, x9
  417790:	udiv	x9, x11, x9
  417794:	cmp	x9, x22
  417798:	cset	w10, lt  // lt = tstop
  41779c:	csel	x22, x11, x12, lt  // lt = tstop
  4177a0:	b	417ae8 <wcrtomb@plt+0x15278>
  4177a4:	mov	x11, #0x8000000000000000    	// #-9223372036854775808
  4177a8:	sdiv	x12, x11, x9
  4177ac:	cmp	x22, x12
  4177b0:	b.ge	4178c4 <wcrtomb@plt+0x15054>  // b.tcont
  4177b4:	mov	w10, #0x1                   	// #1
  4177b8:	b	4178dc <wcrtomb@plt+0x1506c>
  4177bc:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  4177c0:	sdiv	x10, x12, x9
  4177c4:	cmp	x22, x10
  4177c8:	b.ge	417900 <wcrtomb@plt+0x15090>  // b.tcont
  4177cc:	mov	w11, #0x1                   	// #1
  4177d0:	b	417918 <wcrtomb@plt+0x150a8>
  4177d4:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  4177d8:	sdiv	x10, x12, x9
  4177dc:	cmp	x22, x10
  4177e0:	b.ge	41793c <wcrtomb@plt+0x150cc>  // b.tcont
  4177e4:	mov	w11, #0x1                   	// #1
  4177e8:	b	417954 <wcrtomb@plt+0x150e4>
  4177ec:	mov	x9, #0xffe0000000000000    	// #-9007199254740992
  4177f0:	cmp	x22, x9
  4177f4:	b.lt	417870 <wcrtomb@plt+0x15000>  // b.tstop
  4177f8:	mov	x9, #0x1fffffffffffff      	// #9007199254740991
  4177fc:	lsl	x11, x22, #10
  417800:	b	417a14 <wcrtomb@plt+0x151a4>
  417804:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417808:	sdiv	x10, x12, x9
  41780c:	cmp	x22, x10
  417810:	b.ge	417968 <wcrtomb@plt+0x150f8>  // b.tcont
  417814:	mov	w11, #0x1                   	// #1
  417818:	b	417980 <wcrtomb@plt+0x15110>
  41781c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417820:	sdiv	x10, x12, x9
  417824:	cmp	x22, x10
  417828:	b.ge	4179a4 <wcrtomb@plt+0x15134>  // b.tcont
  41782c:	mov	w11, #0x1                   	// #1
  417830:	b	4179bc <wcrtomb@plt+0x1514c>
  417834:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417838:	sdiv	x10, x12, x9
  41783c:	cmp	x22, x10
  417840:	b.ge	4179e0 <wcrtomb@plt+0x15170>  // b.tcont
  417844:	mov	w11, #0x1                   	// #1
  417848:	b	4179f8 <wcrtomb@plt+0x15188>
  41784c:	mov	x9, #0xffc0000000000000    	// #-18014398509481984
  417850:	cmp	x22, x9
  417854:	b.lt	417870 <wcrtomb@plt+0x15000>  // b.tstop
  417858:	mov	x9, #0x3fffffffffffff      	// #18014398509481983
  41785c:	lsl	x11, x22, #9
  417860:	b	417a14 <wcrtomb@plt+0x151a4>
  417864:	mov	x9, #0xc000000000000000    	// #-4611686018427387904
  417868:	cmp	x22, x9
  41786c:	b.ge	417a0c <wcrtomb@plt+0x1519c>  // b.tcont
  417870:	mov	w10, #0x1                   	// #1
  417874:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  417878:	b	417ae8 <wcrtomb@plt+0x15278>
  41787c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  417880:	udiv	x11, x12, x9
  417884:	mul	x13, x22, x9
  417888:	cmp	x11, x22
  41788c:	cset	w11, lt  // lt = tstop
  417890:	csel	x12, x12, x13, lt  // lt = tstop
  417894:	cmp	x12, x10
  417898:	b.lt	417aac <wcrtomb@plt+0x1523c>  // b.tstop
  41789c:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  4178a0:	udiv	x13, x14, x9
  4178a4:	mul	x15, x12, x9
  4178a8:	cmp	x13, x12
  4178ac:	cset	w13, lt  // lt = tstop
  4178b0:	csel	x12, x14, x15, lt  // lt = tstop
  4178b4:	cmp	x12, x10
  4178b8:	orr	w10, w13, w11
  4178bc:	b.lt	417ac0 <wcrtomb@plt+0x15250>  // b.tstop
  4178c0:	b	417acc <wcrtomb@plt+0x1525c>
  4178c4:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  4178c8:	udiv	x10, x11, x9
  4178cc:	mul	x13, x22, x9
  4178d0:	cmp	x10, x22
  4178d4:	cset	w10, lt  // lt = tstop
  4178d8:	csel	x11, x11, x13, lt  // lt = tstop
  4178dc:	cmp	x11, x12
  4178e0:	b.lt	417ac0 <wcrtomb@plt+0x15250>  // b.tstop
  4178e4:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  4178e8:	mul	x13, x11, x9
  4178ec:	udiv	x9, x12, x9
  4178f0:	cmp	x9, x11
  4178f4:	cset	w9, lt  // lt = tstop
  4178f8:	csel	x22, x12, x13, lt  // lt = tstop
  4178fc:	b	417ae4 <wcrtomb@plt+0x15274>
  417900:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  417904:	udiv	x11, x12, x9
  417908:	mul	x13, x22, x9
  41790c:	cmp	x11, x22
  417910:	cset	w11, lt  // lt = tstop
  417914:	csel	x12, x12, x13, lt  // lt = tstop
  417918:	cmp	x12, x10
  41791c:	b.lt	417a98 <wcrtomb@plt+0x15228>  // b.tstop
  417920:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  417924:	udiv	x13, x14, x9
  417928:	mul	x15, x12, x9
  41792c:	cmp	x13, x12
  417930:	cset	w13, lt  // lt = tstop
  417934:	csel	x12, x14, x15, lt  // lt = tstop
  417938:	b	417aa0 <wcrtomb@plt+0x15230>
  41793c:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  417940:	udiv	x11, x12, x9
  417944:	mul	x13, x22, x9
  417948:	cmp	x11, x22
  41794c:	cset	w11, lt  // lt = tstop
  417950:	csel	x12, x12, x13, lt  // lt = tstop
  417954:	cmp	x12, x10
  417958:	b.ge	417a4c <wcrtomb@plt+0x151dc>  // b.tcont
  41795c:	mov	w13, #0x1                   	// #1
  417960:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417964:	b	417a64 <wcrtomb@plt+0x151f4>
  417968:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  41796c:	udiv	x11, x12, x9
  417970:	mul	x13, x22, x9
  417974:	cmp	x11, x22
  417978:	cset	w11, lt  // lt = tstop
  41797c:	csel	x12, x12, x13, lt  // lt = tstop
  417980:	cmp	x12, x10
  417984:	b.lt	417a70 <wcrtomb@plt+0x15200>  // b.tstop
  417988:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  41798c:	udiv	x13, x14, x9
  417990:	mul	x15, x12, x9
  417994:	cmp	x13, x12
  417998:	cset	w13, lt  // lt = tstop
  41799c:	csel	x12, x14, x15, lt  // lt = tstop
  4179a0:	b	417a78 <wcrtomb@plt+0x15208>
  4179a4:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  4179a8:	udiv	x11, x12, x9
  4179ac:	mul	x13, x22, x9
  4179b0:	cmp	x11, x22
  4179b4:	cset	w11, lt  // lt = tstop
  4179b8:	csel	x12, x12, x13, lt  // lt = tstop
  4179bc:	cmp	x12, x10
  4179c0:	b.lt	417a84 <wcrtomb@plt+0x15214>  // b.tstop
  4179c4:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  4179c8:	udiv	x13, x14, x9
  4179cc:	mul	x15, x12, x9
  4179d0:	cmp	x13, x12
  4179d4:	cset	w13, lt  // lt = tstop
  4179d8:	csel	x12, x14, x15, lt  // lt = tstop
  4179dc:	b	417a8c <wcrtomb@plt+0x1521c>
  4179e0:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  4179e4:	udiv	x11, x12, x9
  4179e8:	mul	x13, x22, x9
  4179ec:	cmp	x11, x22
  4179f0:	cset	w11, lt  // lt = tstop
  4179f4:	csel	x12, x12, x13, lt  // lt = tstop
  4179f8:	cmp	x12, x10
  4179fc:	b.ge	417a28 <wcrtomb@plt+0x151b8>  // b.tcont
  417a00:	mov	w13, #0x1                   	// #1
  417a04:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417a08:	b	417a40 <wcrtomb@plt+0x151d0>
  417a0c:	mov	x9, #0x3fffffffffffffff    	// #4611686018427387903
  417a10:	lsl	x11, x22, #1
  417a14:	mov	x12, #0x7fffffffffffffff    	// #9223372036854775807
  417a18:	cmp	x22, x9
  417a1c:	cset	w10, gt
  417a20:	csel	x22, x12, x11, gt
  417a24:	b	417ae8 <wcrtomb@plt+0x15278>
  417a28:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  417a2c:	udiv	x13, x14, x9
  417a30:	mul	x15, x12, x9
  417a34:	cmp	x13, x12
  417a38:	cset	w13, lt  // lt = tstop
  417a3c:	csel	x12, x14, x15, lt  // lt = tstop
  417a40:	cmp	x12, x10
  417a44:	orr	w11, w13, w11
  417a48:	b.lt	41795c <wcrtomb@plt+0x150ec>  // b.tstop
  417a4c:	mov	x14, #0x7fffffffffffffff    	// #9223372036854775807
  417a50:	udiv	x13, x14, x9
  417a54:	mul	x15, x12, x9
  417a58:	cmp	x13, x12
  417a5c:	cset	w13, lt  // lt = tstop
  417a60:	csel	x12, x14, x15, lt  // lt = tstop
  417a64:	cmp	x12, x10
  417a68:	orr	w11, w13, w11
  417a6c:	b.ge	417988 <wcrtomb@plt+0x15118>  // b.tcont
  417a70:	mov	w13, #0x1                   	// #1
  417a74:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417a78:	cmp	x12, x10
  417a7c:	orr	w11, w13, w11
  417a80:	b.ge	4179c4 <wcrtomb@plt+0x15154>  // b.tcont
  417a84:	mov	w13, #0x1                   	// #1
  417a88:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417a8c:	cmp	x12, x10
  417a90:	orr	w11, w13, w11
  417a94:	b.ge	417920 <wcrtomb@plt+0x150b0>  // b.tcont
  417a98:	mov	w13, #0x1                   	// #1
  417a9c:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417aa0:	cmp	x12, x10
  417aa4:	orr	w11, w13, w11
  417aa8:	b.ge	41789c <wcrtomb@plt+0x1502c>  // b.tcont
  417aac:	mov	w13, #0x1                   	// #1
  417ab0:	mov	x12, #0x8000000000000000    	// #-9223372036854775808
  417ab4:	cmp	x12, x10
  417ab8:	orr	w10, w13, w11
  417abc:	b.ge	417acc <wcrtomb@plt+0x1525c>  // b.tcont
  417ac0:	mov	w9, #0x1                   	// #1
  417ac4:	mov	x22, #0x8000000000000000    	// #-9223372036854775808
  417ac8:	b	417ae4 <wcrtomb@plt+0x15274>
  417acc:	mov	x11, #0x7fffffffffffffff    	// #9223372036854775807
  417ad0:	mul	x13, x12, x9
  417ad4:	udiv	x9, x11, x9
  417ad8:	cmp	x9, x12
  417adc:	cset	w9, lt  // lt = tstop
  417ae0:	csel	x22, x11, x13, lt  // lt = tstop
  417ae4:	orr	w10, w9, w10
  417ae8:	add	x9, x25, x8
  417aec:	str	x9, [x21]
  417af0:	ldrb	w8, [x25, x8]
  417af4:	orr	w9, w10, w20
  417af8:	orr	w10, w9, #0x2
  417afc:	cmp	w8, #0x0
  417b00:	csel	w20, w9, w10, eq  // eq = none
  417b04:	str	x22, [x19]
  417b08:	mov	w0, w20
  417b0c:	ldp	x20, x19, [sp, #64]
  417b10:	ldp	x22, x21, [sp, #48]
  417b14:	ldp	x24, x23, [sp, #32]
  417b18:	ldr	x25, [sp, #16]
  417b1c:	ldp	x29, x30, [sp], #80
  417b20:	ret
  417b24:	adrp	x0, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417b28:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417b2c:	adrp	x3, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  417b30:	add	x0, x0, #0xfac
  417b34:	add	x1, x1, #0xfd2
  417b38:	add	x3, x3, #0xfde
  417b3c:	mov	w2, #0x54                  	// #84
  417b40:	bl	4027d0 <__assert_fail@plt>
  417b44:	stp	x29, x30, [sp, #-16]!
  417b48:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  417b4c:	add	x0, x0, #0x2c
  417b50:	mov	x29, sp
  417b54:	bl	4027f0 <getenv@plt>
  417b58:	cbz	x0, 417b70 <wcrtomb@plt+0x15300>
  417b5c:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  417b60:	add	x1, x1, #0x31
  417b64:	bl	402600 <strcmp@plt>
  417b68:	cmp	w0, #0x0
  417b6c:	cset	w0, ne  // ne = any
  417b70:	ldp	x29, x30, [sp], #16
  417b74:	ret
  417b78:	ret
  417b7c:	b	4027c0 <printf@plt>
  417b80:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  417b84:	ldr	x1, [x8, #1080]
  417b88:	b	402280 <fputs@plt>
  417b8c:	sub	sp, sp, #0x70
  417b90:	cmp	w1, #0x1, lsl #12
  417b94:	stp	x29, x30, [sp, #16]
  417b98:	stp	x28, x27, [sp, #32]
  417b9c:	stp	x26, x25, [sp, #48]
  417ba0:	stp	x24, x23, [sp, #64]
  417ba4:	stp	x22, x21, [sp, #80]
  417ba8:	stp	x20, x19, [sp, #96]
  417bac:	add	x29, sp, #0x10
  417bb0:	b.cs	417c58 <wcrtomb@plt+0x153e8>  // b.hs, b.nlast
  417bb4:	mov	w8, #0x204                 	// #516
  417bb8:	mov	w22, w1
  417bbc:	bics	wzr, w8, w1
  417bc0:	b.eq	417c58 <wcrtomb@plt+0x153e8>  // b.none
  417bc4:	mov	w8, #0x12                  	// #18
  417bc8:	tst	w22, w8
  417bcc:	b.eq	417c58 <wcrtomb@plt+0x153e8>  // b.none
  417bd0:	mov	x23, x0
  417bd4:	mov	w0, #0x1                   	// #1
  417bd8:	mov	w1, #0x80                  	// #128
  417bdc:	mov	x21, x2
  417be0:	bl	402480 <calloc@plt>
  417be4:	mov	x19, x0
  417be8:	cbz	x0, 417c68 <wcrtomb@plt+0x153f8>
  417bec:	and	w8, w22, #0xfffffdff
  417bf0:	tst	w22, #0x2
  417bf4:	orr	w8, w8, #0x4
  417bf8:	mov	w9, #0xffffff9c            	// #-100
  417bfc:	csel	w8, w22, w8, eq  // eq = none
  417c00:	str	x21, [x19, #64]
  417c04:	str	w8, [x19, #72]
  417c08:	str	w9, [x19, #44]
  417c0c:	ldr	x8, [x23]
  417c10:	cbz	x8, 417c8c <wcrtomb@plt+0x1541c>
  417c14:	mov	x20, xzr
  417c18:	add	x24, x23, #0x8
  417c1c:	mov	x0, x8
  417c20:	bl	402270 <strlen@plt>
  417c24:	ldr	x8, [x24], #8
  417c28:	cmp	x0, x20
  417c2c:	csel	x20, x0, x20, hi  // hi = pmore
  417c30:	cbnz	x8, 417c1c <wcrtomb@plt+0x153ac>
  417c34:	add	x8, x20, #0x1
  417c38:	cmp	x8, #0x1, lsl #12
  417c3c:	mov	w8, #0x1000                	// #4096
  417c40:	csinc	x8, x8, x20, ls  // ls = plast
  417c44:	add	x0, x8, #0x100
  417c48:	str	x0, [x19, #48]
  417c4c:	bl	4023a0 <malloc@plt>
  417c50:	cbnz	x0, 417c9c <wcrtomb@plt+0x1542c>
  417c54:	b	41800c <wcrtomb@plt+0x1579c>
  417c58:	bl	4027e0 <__errno_location@plt>
  417c5c:	mov	w8, #0x16                  	// #22
  417c60:	mov	x19, xzr
  417c64:	str	w8, [x0]
  417c68:	mov	x0, x19
  417c6c:	ldp	x20, x19, [sp, #96]
  417c70:	ldp	x22, x21, [sp, #80]
  417c74:	ldp	x24, x23, [sp, #64]
  417c78:	ldp	x26, x25, [sp, #48]
  417c7c:	ldp	x28, x27, [sp, #32]
  417c80:	ldp	x29, x30, [sp, #16]
  417c84:	add	sp, sp, #0x70
  417c88:	ret
  417c8c:	mov	w0, #0x1100                	// #4352
  417c90:	str	x0, [x19, #48]
  417c94:	bl	4023a0 <malloc@plt>
  417c98:	cbz	x0, 41800c <wcrtomb@plt+0x1579c>
  417c9c:	str	x0, [x19, #32]
  417ca0:	ldr	x24, [x23]
  417ca4:	mov	x25, x0
  417ca8:	cbz	x24, 417cf0 <wcrtomb@plt+0x15480>
  417cac:	mov	w0, #0x100                 	// #256
  417cb0:	bl	4023a0 <malloc@plt>
  417cb4:	cbz	x0, 418010 <wcrtomb@plt+0x157a0>
  417cb8:	mov	x20, x0
  417cbc:	mov	w8, #0x30000               	// #196608
  417cc0:	mov	x9, #0xffffffffffffffff    	// #-1
  417cc4:	mov	w10, #0xffffffff            	// #-1
  417cc8:	strb	wzr, [x0, #248]
  417ccc:	str	x25, [x0, #56]
  417cd0:	str	wzr, [x0, #64]
  417cd4:	stp	xzr, xzr, [x0, #32]
  417cd8:	str	xzr, [x0, #24]
  417cdc:	stur	w8, [x0, #110]
  417ce0:	str	x19, [x0, #80]
  417ce4:	stp	x9, xzr, [x0, #88]
  417ce8:	str	w10, [x0, #104]
  417cec:	b	417cf4 <wcrtomb@plt+0x15484>
  417cf0:	mov	x20, xzr
  417cf4:	cbz	x21, 417e3c <wcrtomb@plt+0x155cc>
  417cf8:	ldrb	w8, [x19, #73]
  417cfc:	ubfx	w8, w8, #2, #1
  417d00:	stur	w8, [x29, #-4]
  417d04:	cbz	x24, 417e48 <wcrtomb@plt+0x155d8>
  417d08:	tbnz	w22, #11, 417e50 <wcrtomb@plt+0x155e0>
  417d0c:	mov	x22, xzr
  417d10:	mov	x25, xzr
  417d14:	str	xzr, [sp]
  417d18:	b	417d5c <wcrtomb@plt+0x154ec>
  417d1c:	str	xzr, [x26, #16]
  417d20:	cbz	x22, 417d40 <wcrtomb@plt+0x154d0>
  417d24:	ldr	x8, [sp]
  417d28:	str	x26, [sp]
  417d2c:	str	x26, [x8, #16]
  417d30:	ldr	x24, [x23, #8]!
  417d34:	add	x25, x25, #0x1
  417d38:	cbnz	x24, 417d5c <wcrtomb@plt+0x154ec>
  417d3c:	b	417f58 <wcrtomb@plt+0x156e8>
  417d40:	str	x26, [sp]
  417d44:	b	417d4c <wcrtomb@plt+0x154dc>
  417d48:	str	x22, [x26, #16]
  417d4c:	mov	x22, x26
  417d50:	ldr	x24, [x23, #8]!
  417d54:	add	x25, x25, #0x1
  417d58:	cbz	x24, 417f58 <wcrtomb@plt+0x156e8>
  417d5c:	mov	x0, x24
  417d60:	bl	402270 <strlen@plt>
  417d64:	mov	x27, x0
  417d68:	cmp	x0, #0x3
  417d6c:	b.cc	417da0 <wcrtomb@plt+0x15530>  // b.lo, b.ul, b.last
  417d70:	add	x8, x27, x24
  417d74:	ldurb	w8, [x8, #-1]
  417d78:	cmp	w8, #0x2f
  417d7c:	b.ne	417da0 <wcrtomb@plt+0x15530>  // b.any
  417d80:	sub	x8, x24, #0x2
  417d84:	ldrb	w9, [x8, x27]
  417d88:	cmp	w9, #0x2f
  417d8c:	b.ne	417da0 <wcrtomb@plt+0x15530>  // b.any
  417d90:	sub	x27, x27, #0x1
  417d94:	cmp	x27, #0x1
  417d98:	b.hi	417d84 <wcrtomb@plt+0x15514>  // b.pmore
  417d9c:	mov	w27, #0x1                   	// #1
  417da0:	add	x8, x27, #0x100
  417da4:	and	x0, x8, #0xfffffffffffffff8
  417da8:	bl	4023a0 <malloc@plt>
  417dac:	cbz	x0, 418000 <wcrtomb@plt+0x15790>
  417db0:	add	x28, x0, #0xf8
  417db4:	mov	x26, x0
  417db8:	mov	x0, x28
  417dbc:	mov	x1, x24
  417dc0:	mov	x2, x27
  417dc4:	bl	402210 <memcpy@plt>
  417dc8:	ldr	x8, [x19, #32]
  417dcc:	mov	w9, #0x30000               	// #196608
  417dd0:	strb	wzr, [x28, x27]
  417dd4:	stur	w9, [x26, #110]
  417dd8:	ldur	w9, [x29, #-4]
  417ddc:	cmp	x22, #0x0
  417de0:	stp	x28, x8, [x26, #48]
  417de4:	cset	w8, ne  // ne = any
  417de8:	and	w8, w9, w8
  417dec:	stp	xzr, x27, [x26, #88]
  417df0:	str	wzr, [x26, #64]
  417df4:	stp	xzr, xzr, [x26, #24]
  417df8:	str	x19, [x26, #80]
  417dfc:	str	x20, [x26, #8]
  417e00:	str	xzr, [x26, #40]
  417e04:	tbz	w8, #0, 417e20 <wcrtomb@plt+0x155b0>
  417e08:	mov	w8, #0xb                   	// #11
  417e0c:	strh	w8, [x26, #108]
  417e10:	mov	w8, #0x2                   	// #2
  417e14:	str	x8, [x26, #168]
  417e18:	cbnz	x21, 417d48 <wcrtomb@plt+0x154d8>
  417e1c:	b	417d1c <wcrtomb@plt+0x154ac>
  417e20:	mov	x0, x19
  417e24:	mov	x1, x26
  417e28:	mov	w2, wzr
  417e2c:	bl	4180c8 <wcrtomb@plt+0x15858>
  417e30:	strh	w0, [x26, #108]
  417e34:	cbnz	x21, 417d48 <wcrtomb@plt+0x154d8>
  417e38:	b	417d1c <wcrtomb@plt+0x154ac>
  417e3c:	mov	w8, #0x1                   	// #1
  417e40:	stur	w8, [x29, #-4]
  417e44:	cbnz	x24, 417d08 <wcrtomb@plt+0x15498>
  417e48:	mov	x22, xzr
  417e4c:	b	417f78 <wcrtomb@plt+0x15708>
  417e50:	mov	x22, xzr
  417e54:	mov	x28, xzr
  417e58:	add	x27, x23, #0x8
  417e5c:	str	xzr, [sp]
  417e60:	b	417eac <wcrtomb@plt+0x1563c>
  417e64:	str	xzr, [x23, #16]
  417e68:	cbz	x22, 417e8c <wcrtomb@plt+0x1561c>
  417e6c:	ldr	x8, [sp]
  417e70:	str	x23, [sp]
  417e74:	str	x23, [x8, #16]
  417e78:	ldr	x24, [x27, x28, lsl #3]
  417e7c:	add	x25, x28, #0x1
  417e80:	mov	x28, x25
  417e84:	cbnz	x24, 417eac <wcrtomb@plt+0x1563c>
  417e88:	b	417f58 <wcrtomb@plt+0x156e8>
  417e8c:	str	x23, [sp]
  417e90:	b	417e98 <wcrtomb@plt+0x15628>
  417e94:	str	x22, [x23, #16]
  417e98:	mov	x22, x23
  417e9c:	ldr	x24, [x27, x28, lsl #3]
  417ea0:	add	x25, x28, #0x1
  417ea4:	mov	x28, x25
  417ea8:	cbz	x24, 417f58 <wcrtomb@plt+0x156e8>
  417eac:	mov	x0, x24
  417eb0:	bl	402270 <strlen@plt>
  417eb4:	add	x8, x0, #0x100
  417eb8:	mov	x25, x0
  417ebc:	and	x0, x8, #0xfffffffffffffff8
  417ec0:	bl	4023a0 <malloc@plt>
  417ec4:	cbz	x0, 418000 <wcrtomb@plt+0x15790>
  417ec8:	add	x26, x0, #0xf8
  417ecc:	mov	x23, x0
  417ed0:	mov	x0, x26
  417ed4:	mov	x1, x24
  417ed8:	mov	x2, x25
  417edc:	bl	402210 <memcpy@plt>
  417ee0:	ldur	w9, [x29, #-4]
  417ee4:	ldr	x8, [x19, #32]
  417ee8:	cmp	x22, #0x0
  417eec:	cset	w10, eq  // eq = none
  417ef0:	eor	w9, w9, #0x1
  417ef4:	strb	wzr, [x26, x25]
  417ef8:	orr	w9, w9, w10
  417efc:	stp	x26, x8, [x23, #48]
  417f00:	mov	w8, #0x30000               	// #196608
  417f04:	stp	xzr, x25, [x23, #88]
  417f08:	str	wzr, [x23, #64]
  417f0c:	stur	w8, [x23, #110]
  417f10:	stp	xzr, xzr, [x23, #24]
  417f14:	str	x19, [x23, #80]
  417f18:	str	x20, [x23, #8]
  417f1c:	str	xzr, [x23, #40]
  417f20:	tbnz	w9, #0, 417f3c <wcrtomb@plt+0x156cc>
  417f24:	mov	w8, #0xb                   	// #11
  417f28:	strh	w8, [x23, #108]
  417f2c:	mov	w8, #0x2                   	// #2
  417f30:	str	x8, [x23, #168]
  417f34:	cbnz	x21, 417e94 <wcrtomb@plt+0x15624>
  417f38:	b	417e64 <wcrtomb@plt+0x155f4>
  417f3c:	mov	x0, x19
  417f40:	mov	x1, x23
  417f44:	mov	w2, wzr
  417f48:	bl	4180c8 <wcrtomb@plt+0x15858>
  417f4c:	strh	w0, [x23, #108]
  417f50:	cbnz	x21, 417e94 <wcrtomb@plt+0x15624>
  417f54:	b	417e64 <wcrtomb@plt+0x155f4>
  417f58:	cbz	x21, 417f78 <wcrtomb@plt+0x15708>
  417f5c:	cmp	x25, #0x2
  417f60:	b.cc	417f78 <wcrtomb@plt+0x15708>  // b.lo, b.ul, b.last
  417f64:	mov	x0, x19
  417f68:	mov	x1, x22
  417f6c:	mov	x2, x25
  417f70:	bl	4182b0 <wcrtomb@plt+0x15a40>
  417f74:	mov	x22, x0
  417f78:	mov	w0, #0x100                 	// #256
  417f7c:	bl	4023a0 <malloc@plt>
  417f80:	cbz	x0, 417ffc <wcrtomb@plt+0x1578c>
  417f84:	ldrh	w8, [x19, #72]
  417f88:	mov	w9, #0x102                 	// #258
  417f8c:	strb	wzr, [x0, #248]
  417f90:	str	wzr, [x0, #64]
  417f94:	tst	w8, w9
  417f98:	mov	w8, #0x30000               	// #196608
  417f9c:	stur	w8, [x0, #110]
  417fa0:	mov	w8, #0x9                   	// #9
  417fa4:	strh	w8, [x0, #108]
  417fa8:	ldr	x8, [x19, #32]
  417fac:	stp	xzr, xzr, [x0, #32]
  417fb0:	str	x0, [x19]
  417fb4:	stp	x22, xzr, [x0, #16]
  417fb8:	str	x8, [x0, #56]
  417fbc:	mov	w8, #0x1                   	// #1
  417fc0:	str	x19, [x0, #80]
  417fc4:	stp	x8, xzr, [x0, #88]
  417fc8:	b.eq	418048 <wcrtomb@plt+0x157d8>  // b.none
  417fcc:	adrp	x2, 419000 <wcrtomb@plt+0x16790>
  417fd0:	adrp	x3, 419000 <wcrtomb@plt+0x16790>
  417fd4:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  417fd8:	add	x2, x2, #0xbf4
  417fdc:	add	x3, x3, #0xc04
  417fe0:	add	x4, x4, #0x620
  417fe4:	mov	w0, #0x1f                  	// #31
  417fe8:	mov	x1, xzr
  417fec:	bl	413ca0 <wcrtomb@plt+0x11430>
  417ff0:	str	x0, [x19, #88]
  417ff4:	cbnz	x0, 41805c <wcrtomb@plt+0x157ec>
  417ff8:	b	418000 <wcrtomb@plt+0x15790>
  417ffc:	str	xzr, [x19]
  418000:	cbnz	x22, 418038 <wcrtomb@plt+0x157c8>
  418004:	mov	x0, x20
  418008:	bl	402620 <free@plt>
  41800c:	ldr	x25, [x19, #32]
  418010:	mov	x0, x25
  418014:	bl	402620 <free@plt>
  418018:	mov	x0, x19
  41801c:	bl	402620 <free@plt>
  418020:	mov	x19, xzr
  418024:	b	417c68 <wcrtomb@plt+0x153f8>
  418028:	mov	x0, x22
  41802c:	bl	402620 <free@plt>
  418030:	mov	x22, x21
  418034:	cbz	x21, 418004 <wcrtomb@plt+0x15794>
  418038:	ldp	x21, x0, [x22, #16]
  41803c:	cbz	x0, 418028 <wcrtomb@plt+0x157b8>
  418040:	bl	4024e0 <closedir@plt>
  418044:	b	418028 <wcrtomb@plt+0x157b8>
  418048:	mov	w0, #0x20                  	// #32
  41804c:	bl	4023a0 <malloc@plt>
  418050:	str	x0, [x19, #88]
  418054:	cbz	x0, 418000 <wcrtomb@plt+0x15790>
  418058:	bl	42a9dc <_obstack_memory_used@@Base+0x10848>
  41805c:	ldr	w8, [x19, #72]
  418060:	mov	w9, #0x204                 	// #516
  418064:	tst	w8, w9
  418068:	b.ne	4180b8 <wcrtomb@plt+0x15848>  // b.any
  41806c:	mov	w2, #0x4900                	// #18688
  418070:	lsr	w9, w8, #4
  418074:	movk	w2, #0x8, lsl #16
  418078:	bfi	w2, w9, #15, #1
  41807c:	tbnz	w8, #9, 418094 <wcrtomb@plt+0x15824>
  418080:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  418084:	add	x0, x0, #0x37
  418088:	mov	w1, w2
  41808c:	bl	42ab48 <_obstack_memory_used@@Base+0x109b4>
  418090:	b	4180a4 <wcrtomb@plt+0x15834>
  418094:	ldr	w0, [x19, #44]
  418098:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41809c:	add	x1, x1, #0x37
  4180a0:	bl	414ee0 <wcrtomb@plt+0x12670>
  4180a4:	str	w0, [x19, #40]
  4180a8:	tbz	w0, #31, 4180b8 <wcrtomb@plt+0x15848>
  4180ac:	ldr	w8, [x19, #72]
  4180b0:	orr	w8, w8, #0x4
  4180b4:	str	w8, [x19, #72]
  4180b8:	add	x0, x19, #0x60
  4180bc:	mov	w1, #0xffffffff            	// #-1
  4180c0:	bl	42ac64 <_obstack_memory_used@@Base+0x10ad0>
  4180c4:	b	417c68 <wcrtomb@plt+0x153f8>
  4180c8:	stp	x29, x30, [sp, #-48]!
  4180cc:	stp	x20, x19, [sp, #32]
  4180d0:	ldr	x9, [x1, #88]
  4180d4:	ldr	w8, [x0, #72]
  4180d8:	str	x21, [sp, #16]
  4180dc:	mov	x19, x1
  4180e0:	mov	x21, x0
  4180e4:	mov	x29, sp
  4180e8:	cbz	x9, 4180f8 <wcrtomb@plt+0x15888>
  4180ec:	add	x20, x19, #0x78
  4180f0:	tbz	w2, #0, 418108 <wcrtomb@plt+0x15898>
  4180f4:	b	418134 <wcrtomb@plt+0x158c4>
  4180f8:	and	w9, w8, #0x1
  4180fc:	orr	w2, w9, w2
  418100:	add	x20, x19, #0x78
  418104:	tbnz	w2, #0, 418134 <wcrtomb@plt+0x158c4>
  418108:	tbnz	w8, #1, 418134 <wcrtomb@plt+0x158c4>
  41810c:	ldr	w1, [x21, #44]
  418110:	ldr	x2, [x19, #48]
  418114:	mov	w4, #0x100                 	// #256
  418118:	mov	w0, wzr
  41811c:	mov	x3, x20
  418120:	bl	402860 <__fxstatat@plt>
  418124:	cbz	w0, 4181a0 <wcrtomb@plt+0x15930>
  418128:	bl	4027e0 <__errno_location@plt>
  41812c:	mov	x21, x0
  418130:	b	418170 <wcrtomb@plt+0x15900>
  418134:	ldr	x1, [x19, #48]
  418138:	mov	w0, wzr
  41813c:	mov	x2, x20
  418140:	bl	402800 <__xstat@plt>
  418144:	cbz	w0, 4181a0 <wcrtomb@plt+0x15930>
  418148:	bl	4027e0 <__errno_location@plt>
  41814c:	ldr	w8, [x0]
  418150:	cmp	w8, #0x2
  418154:	b.ne	418174 <wcrtomb@plt+0x15904>  // b.any
  418158:	ldr	x1, [x19, #48]
  41815c:	mov	x21, x0
  418160:	mov	w0, wzr
  418164:	mov	x2, x20
  418168:	bl	4026b0 <__lxstat@plt>
  41816c:	cbz	w0, 418278 <wcrtomb@plt+0x15a08>
  418170:	ldr	w8, [x21]
  418174:	movi	v0.2d, #0x0
  418178:	str	w8, [x19, #64]
  41817c:	stp	q0, q0, [x20, #96]
  418180:	stp	q0, q0, [x20, #64]
  418184:	stp	q0, q0, [x20, #32]
  418188:	stp	q0, q0, [x20]
  41818c:	mov	w0, #0xa                   	// #10
  418190:	ldp	x20, x19, [sp, #32]
  418194:	ldr	x21, [sp, #16]
  418198:	ldp	x29, x30, [sp], #48
  41819c:	ret
  4181a0:	ldr	w8, [x19, #136]
  4181a4:	and	w8, w8, #0xf000
  4181a8:	cmp	w8, #0xa, lsl #12
  4181ac:	b.eq	4181fc <wcrtomb@plt+0x1598c>  // b.none
  4181b0:	cmp	w8, #0x8, lsl #12
  4181b4:	b.eq	418210 <wcrtomb@plt+0x159a0>  // b.none
  4181b8:	cmp	w8, #0x4, lsl #12
  4181bc:	b.ne	418224 <wcrtomb@plt+0x159b4>  // b.any
  4181c0:	ldr	w8, [x19, #140]
  4181c4:	cmp	w8, #0x2
  4181c8:	b.cc	418238 <wcrtomb@plt+0x159c8>  // b.lo, b.ul, b.last
  4181cc:	ldr	x9, [x19, #88]
  4181d0:	cmp	x9, #0x1
  4181d4:	b.lt	418238 <wcrtomb@plt+0x159c8>  // b.tstop
  4181d8:	ldr	w9, [x21, #72]
  4181dc:	mov	w10, #0x2                   	// #2
  4181e0:	bic	w9, w10, w9, lsr #4
  4181e4:	sub	w8, w8, w9
  4181e8:	ldrb	w9, [x19, #248]
  4181ec:	str	w8, [x19, #104]
  4181f0:	cmp	w9, #0x2e
  4181f4:	b.ne	418264 <wcrtomb@plt+0x159f4>  // b.any
  4181f8:	b	41824c <wcrtomb@plt+0x159dc>
  4181fc:	mov	w0, #0xc                   	// #12
  418200:	ldp	x20, x19, [sp, #32]
  418204:	ldr	x21, [sp, #16]
  418208:	ldp	x29, x30, [sp], #48
  41820c:	ret
  418210:	mov	w0, #0x8                   	// #8
  418214:	ldp	x20, x19, [sp, #32]
  418218:	ldr	x21, [sp, #16]
  41821c:	ldp	x29, x30, [sp], #48
  418220:	ret
  418224:	mov	w0, #0x3                   	// #3
  418228:	ldp	x20, x19, [sp, #32]
  41822c:	ldr	x21, [sp, #16]
  418230:	ldp	x29, x30, [sp], #48
  418234:	ret
  418238:	mov	w8, #0xffffffff            	// #-1
  41823c:	ldrb	w9, [x19, #248]
  418240:	str	w8, [x19, #104]
  418244:	cmp	w9, #0x2e
  418248:	b.ne	418264 <wcrtomb@plt+0x159f4>  // b.any
  41824c:	ldrb	w8, [x19, #249]
  418250:	cbz	w8, 418290 <wcrtomb@plt+0x15a20>
  418254:	cmp	w8, #0x2e
  418258:	b.ne	418264 <wcrtomb@plt+0x159f4>  // b.any
  41825c:	ldrb	w8, [x19, #250]
  418260:	cbz	w8, 418290 <wcrtomb@plt+0x15a20>
  418264:	mov	w0, #0x1                   	// #1
  418268:	ldp	x20, x19, [sp, #32]
  41826c:	ldr	x21, [sp, #16]
  418270:	ldp	x29, x30, [sp], #48
  418274:	ret
  418278:	str	wzr, [x21]
  41827c:	mov	w0, #0xd                   	// #13
  418280:	ldp	x20, x19, [sp, #32]
  418284:	ldr	x21, [sp, #16]
  418288:	ldp	x29, x30, [sp], #48
  41828c:	ret
  418290:	ldr	x8, [x19, #88]
  418294:	cmp	x8, #0x0
  418298:	mov	w8, #0x5                   	// #5
  41829c:	csinc	w0, w8, wzr, ne  // ne = any
  4182a0:	ldp	x20, x19, [sp, #32]
  4182a4:	ldr	x21, [sp, #16]
  4182a8:	ldp	x29, x30, [sp], #48
  4182ac:	ret
  4182b0:	stp	x29, x30, [sp, #-48]!
  4182b4:	stp	x22, x21, [sp, #16]
  4182b8:	stp	x20, x19, [sp, #32]
  4182bc:	ldp	x8, x22, [x0, #56]
  4182c0:	mov	x21, x0
  4182c4:	mov	x20, x2
  4182c8:	mov	x19, x1
  4182cc:	cmp	x8, x2
  4182d0:	mov	x29, sp
  4182d4:	b.cs	418304 <wcrtomb@plt+0x15a94>  // b.hs, b.nlast
  4182d8:	add	x8, x20, #0x28
  4182dc:	lsr	x9, x8, #61
  4182e0:	str	x8, [x21, #56]
  4182e4:	cbnz	x9, 418370 <wcrtomb@plt+0x15b00>
  4182e8:	ldr	x0, [x21, #16]
  4182ec:	lsl	x1, x8, #3
  4182f0:	bl	4024c0 <realloc@plt>
  4182f4:	cbz	x0, 418370 <wcrtomb@plt+0x15b00>
  4182f8:	str	x0, [x21, #16]
  4182fc:	cbnz	x19, 41830c <wcrtomb@plt+0x15a9c>
  418300:	b	41831c <wcrtomb@plt+0x15aac>
  418304:	ldr	x0, [x21, #16]
  418308:	cbz	x19, 41831c <wcrtomb@plt+0x15aac>
  41830c:	str	x19, [x0], #8
  418310:	ldr	x19, [x19, #16]
  418314:	cbnz	x19, 41830c <wcrtomb@plt+0x15a9c>
  418318:	ldr	x0, [x21, #16]
  41831c:	mov	w2, #0x8                   	// #8
  418320:	mov	x1, x20
  418324:	mov	x3, x22
  418328:	bl	4022f0 <qsort@plt>
  41832c:	ldr	x8, [x21, #16]
  418330:	cmp	x20, #0x1
  418334:	ldr	x19, [x8]
  418338:	mov	x9, x19
  41833c:	b.eq	418368 <wcrtomb@plt+0x15af8>  // b.none
  418340:	ldr	x10, [x8, #8]!
  418344:	subs	x9, x20, #0x2
  418348:	str	x10, [x19, #16]
  41834c:	b.eq	418364 <wcrtomb@plt+0x15af4>  // b.none
  418350:	ldr	x10, [x8]
  418354:	ldr	x11, [x8, #8]!
  418358:	subs	x9, x9, #0x1
  41835c:	str	x11, [x10, #16]
  418360:	b.ne	418350 <wcrtomb@plt+0x15ae0>  // b.any
  418364:	ldr	x9, [x8]
  418368:	str	xzr, [x9, #16]
  41836c:	b	418380 <wcrtomb@plt+0x15b10>
  418370:	ldr	x0, [x21, #16]
  418374:	bl	402620 <free@plt>
  418378:	str	xzr, [x21, #16]
  41837c:	str	xzr, [x21, #56]
  418380:	mov	x0, x19
  418384:	ldp	x20, x19, [sp, #32]
  418388:	ldp	x22, x21, [sp, #16]
  41838c:	ldp	x29, x30, [sp], #48
  418390:	ret
  418394:	stp	x29, x30, [sp, #-48]!
  418398:	stp	x20, x19, [sp, #32]
  41839c:	mov	x19, x0
  4183a0:	ldr	x0, [x0]
  4183a4:	str	x21, [sp, #16]
  4183a8:	mov	x29, sp
  4183ac:	cbz	x0, 4183c4 <wcrtomb@plt+0x15b54>
  4183b0:	ldr	x8, [x0, #88]
  4183b4:	tbz	x8, #63, 41843c <wcrtomb@plt+0x15bcc>
  4183b8:	mov	x20, x0
  4183bc:	mov	x0, x20
  4183c0:	bl	402620 <free@plt>
  4183c4:	ldr	x20, [x19, #8]
  4183c8:	cbnz	x20, 41841c <wcrtomb@plt+0x15bac>
  4183cc:	ldr	x0, [x19, #16]
  4183d0:	bl	402620 <free@plt>
  4183d4:	ldr	x0, [x19, #32]
  4183d8:	bl	402620 <free@plt>
  4183dc:	ldr	w8, [x19, #72]
  4183e0:	tbnz	w8, #9, 41844c <wcrtomb@plt+0x15bdc>
  4183e4:	tbnz	w8, #2, 41845c <wcrtomb@plt+0x15bec>
  4183e8:	ldr	w0, [x19, #40]
  4183ec:	bl	4022b0 <fchdir@plt>
  4183f0:	cbz	w0, 418464 <wcrtomb@plt+0x15bf4>
  4183f4:	bl	4027e0 <__errno_location@plt>
  4183f8:	ldr	w21, [x0]
  4183fc:	ldr	w0, [x19, #40]
  418400:	bl	4024f0 <close@plt>
  418404:	cbz	w21, 418474 <wcrtomb@plt+0x15c04>
  418408:	b	418480 <wcrtomb@plt+0x15c10>
  41840c:	mov	x0, x20
  418410:	bl	402620 <free@plt>
  418414:	mov	x20, x21
  418418:	cbz	x21, 4183cc <wcrtomb@plt+0x15b5c>
  41841c:	ldp	x21, x0, [x20, #16]
  418420:	cbz	x0, 41840c <wcrtomb@plt+0x15b9c>
  418424:	bl	4024e0 <closedir@plt>
  418428:	b	41840c <wcrtomb@plt+0x15b9c>
  41842c:	bl	402620 <free@plt>
  418430:	ldr	x8, [x20, #88]
  418434:	mov	x0, x20
  418438:	tbnz	x8, #63, 4183bc <wcrtomb@plt+0x15b4c>
  41843c:	ldr	x20, [x0, #16]
  418440:	cbnz	x20, 41842c <wcrtomb@plt+0x15bbc>
  418444:	ldr	x20, [x0, #8]
  418448:	b	41842c <wcrtomb@plt+0x15bbc>
  41844c:	ldr	w0, [x19, #44]
  418450:	tbnz	w0, #31, 41845c <wcrtomb@plt+0x15bec>
  418454:	bl	4024f0 <close@plt>
  418458:	cbnz	w0, 418478 <wcrtomb@plt+0x15c08>
  41845c:	mov	w21, wzr
  418460:	b	418480 <wcrtomb@plt+0x15c10>
  418464:	mov	w21, wzr
  418468:	ldr	w0, [x19, #40]
  41846c:	bl	4024f0 <close@plt>
  418470:	cbnz	w21, 418480 <wcrtomb@plt+0x15c10>
  418474:	cbz	w0, 418480 <wcrtomb@plt+0x15c10>
  418478:	bl	4027e0 <__errno_location@plt>
  41847c:	ldr	w21, [x0]
  418480:	add	x20, x19, #0x60
  418484:	mov	x0, x20
  418488:	bl	42ac80 <_obstack_memory_used@@Base+0x10aec>
  41848c:	tbnz	w0, #0, 4184a4 <wcrtomb@plt+0x15c34>
  418490:	mov	x0, x20
  418494:	bl	42acd0 <_obstack_memory_used@@Base+0x10b3c>
  418498:	tbnz	w0, #31, 418484 <wcrtomb@plt+0x15c14>
  41849c:	bl	4024f0 <close@plt>
  4184a0:	b	418484 <wcrtomb@plt+0x15c14>
  4184a4:	ldr	x0, [x19, #80]
  4184a8:	cbz	x0, 4184b0 <wcrtomb@plt+0x15c40>
  4184ac:	bl	413f4c <wcrtomb@plt+0x116dc>
  4184b0:	ldrh	w8, [x19, #72]
  4184b4:	mov	w9, #0x102                 	// #258
  4184b8:	tst	w8, w9
  4184bc:	b.eq	4184f4 <wcrtomb@plt+0x15c84>  // b.none
  4184c0:	ldr	x0, [x19, #88]
  4184c4:	cbz	x0, 4184cc <wcrtomb@plt+0x15c5c>
  4184c8:	bl	413f4c <wcrtomb@plt+0x116dc>
  4184cc:	mov	x0, x19
  4184d0:	bl	402620 <free@plt>
  4184d4:	cbz	w21, 418508 <wcrtomb@plt+0x15c98>
  4184d8:	bl	4027e0 <__errno_location@plt>
  4184dc:	str	w21, [x0]
  4184e0:	mov	w0, #0xffffffff            	// #-1
  4184e4:	ldp	x20, x19, [sp, #32]
  4184e8:	ldr	x21, [sp, #16]
  4184ec:	ldp	x29, x30, [sp], #48
  4184f0:	ret
  4184f4:	ldr	x0, [x19, #88]
  4184f8:	bl	402620 <free@plt>
  4184fc:	mov	x0, x19
  418500:	bl	402620 <free@plt>
  418504:	cbnz	w21, 4184d8 <wcrtomb@plt+0x15c68>
  418508:	mov	w0, wzr
  41850c:	ldp	x20, x19, [sp, #32]
  418510:	ldr	x21, [sp, #16]
  418514:	ldp	x29, x30, [sp], #48
  418518:	ret
  41851c:	stp	x29, x30, [sp, #-64]!
  418520:	stp	x22, x21, [sp, #32]
  418524:	stp	x20, x19, [sp, #48]
  418528:	ldr	x20, [x0]
  41852c:	str	x23, [sp, #16]
  418530:	mov	x29, sp
  418534:	cbz	x20, 4188c0 <wcrtomb@plt+0x16050>
  418538:	ldr	w8, [x0, #72]
  41853c:	mov	x19, x0
  418540:	tbnz	w8, #13, 4188bc <wcrtomb@plt+0x1604c>
  418544:	ldrh	w9, [x20, #112]
  418548:	mov	w10, #0x3                   	// #3
  41854c:	strh	w10, [x20, #112]
  418550:	cmp	w9, #0x1
  418554:	b.eq	4185c0 <wcrtomb@plt+0x15d50>  // b.none
  418558:	cmp	w9, #0x2
  41855c:	b.ne	4185d8 <wcrtomb@plt+0x15d68>  // b.any
  418560:	ldrh	w10, [x20, #108]
  418564:	and	w11, w10, #0xfffe
  418568:	cmp	w11, #0xc
  41856c:	b.ne	4185dc <wcrtomb@plt+0x15d6c>  // b.any
  418570:	mov	w2, #0x1                   	// #1
  418574:	mov	x0, x19
  418578:	mov	x1, x20
  41857c:	bl	4180c8 <wcrtomb@plt+0x15858>
  418580:	and	w8, w0, #0xffff
  418584:	cmp	w8, #0x1
  418588:	strh	w0, [x20, #108]
  41858c:	b.ne	418ab4 <wcrtomb@plt+0x16244>  // b.any
  418590:	ldr	w8, [x19, #72]
  418594:	tbnz	w8, #2, 418ab4 <wcrtomb@plt+0x16244>
  418598:	mov	w2, #0x4900                	// #18688
  41859c:	lsr	w9, w8, #4
  4185a0:	movk	w2, #0x8, lsl #16
  4185a4:	bfi	w2, w9, #15, #1
  4185a8:	tbnz	w8, #9, 418824 <wcrtomb@plt+0x15fb4>
  4185ac:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  4185b0:	add	x0, x0, #0x37
  4185b4:	mov	w1, w2
  4185b8:	bl	42ab48 <_obstack_memory_used@@Base+0x109b4>
  4185bc:	b	418834 <wcrtomb@plt+0x15fc4>
  4185c0:	mov	x0, x19
  4185c4:	mov	x1, x20
  4185c8:	mov	w2, wzr
  4185cc:	bl	4180c8 <wcrtomb@plt+0x15858>
  4185d0:	strh	w0, [x20, #108]
  4185d4:	b	4188c0 <wcrtomb@plt+0x16050>
  4185d8:	ldrh	w10, [x20, #108]
  4185dc:	cmp	w10, #0x1
  4185e0:	b.ne	418628 <wcrtomb@plt+0x15db8>  // b.any
  4185e4:	cmp	w9, #0x4
  4185e8:	b.ne	4186ac <wcrtomb@plt+0x15e3c>  // b.any
  4185ec:	ldrb	w8, [x20, #110]
  4185f0:	tbz	w8, #1, 4185fc <wcrtomb@plt+0x15d8c>
  4185f4:	ldr	w0, [x20, #68]
  4185f8:	bl	4024f0 <close@plt>
  4185fc:	ldr	x21, [x19, #8]
  418600:	cbnz	x21, 418618 <wcrtomb@plt+0x15da8>
  418604:	b	418720 <wcrtomb@plt+0x15eb0>
  418608:	mov	x0, x21
  41860c:	bl	402620 <free@plt>
  418610:	mov	x21, x22
  418614:	cbz	x22, 41871c <wcrtomb@plt+0x15eac>
  418618:	ldp	x22, x0, [x21, #16]
  41861c:	cbz	x0, 418608 <wcrtomb@plt+0x15d98>
  418620:	bl	4024e0 <closedir@plt>
  418624:	b	418608 <wcrtomb@plt+0x15d98>
  418628:	ldr	x21, [x20, #16]
  41862c:	cbz	x21, 418738 <wcrtomb@plt+0x15ec8>
  418630:	mov	x0, x20
  418634:	str	x21, [x19]
  418638:	bl	402620 <free@plt>
  41863c:	ldr	x8, [x21, #88]
  418640:	cbz	x8, 418774 <wcrtomb@plt+0x15f04>
  418644:	ldrh	w8, [x21, #112]
  418648:	mov	x20, x21
  41864c:	cmp	w8, #0x4
  418650:	b.eq	418628 <wcrtomb@plt+0x15db8>  // b.none
  418654:	cmp	w8, #0x2
  418658:	b.ne	418a74 <wcrtomb@plt+0x16204>  // b.any
  41865c:	mov	w2, #0x1                   	// #1
  418660:	mov	x0, x19
  418664:	mov	x1, x21
  418668:	bl	4180c8 <wcrtomb@plt+0x15858>
  41866c:	and	w8, w0, #0xffff
  418670:	cmp	w8, #0x1
  418674:	strh	w0, [x21, #108]
  418678:	b.ne	418a6c <wcrtomb@plt+0x161fc>  // b.any
  41867c:	ldr	w8, [x19, #72]
  418680:	tbnz	w8, #2, 418a6c <wcrtomb@plt+0x161fc>
  418684:	mov	w2, #0x4900                	// #18688
  418688:	lsr	w9, w8, #4
  41868c:	movk	w2, #0x8, lsl #16
  418690:	bfi	w2, w9, #15, #1
  418694:	tbnz	w8, #9, 418a30 <wcrtomb@plt+0x161c0>
  418698:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41869c:	add	x0, x0, #0x37
  4186a0:	mov	w1, w2
  4186a4:	bl	42ab48 <_obstack_memory_used@@Base+0x109b4>
  4186a8:	b	418a40 <wcrtomb@plt+0x161d0>
  4186ac:	tbz	w8, #6, 4186c0 <wcrtomb@plt+0x15e50>
  4186b0:	ldr	x9, [x20, #120]
  4186b4:	ldr	x10, [x19, #24]
  4186b8:	cmp	x9, x10
  4186bc:	b.ne	4185ec <wcrtomb@plt+0x15d7c>  // b.any
  4186c0:	ldr	x21, [x19, #8]
  4186c4:	cbz	x21, 4187e0 <wcrtomb@plt+0x15f70>
  4186c8:	tbnz	w8, #12, 4187b0 <wcrtomb@plt+0x15f40>
  4186cc:	ldr	x3, [x20, #48]
  4186d0:	mov	w2, #0xffffffff            	// #-1
  4186d4:	mov	x0, x19
  4186d8:	mov	x1, x20
  4186dc:	bl	418d34 <wcrtomb@plt+0x164c4>
  4186e0:	cbz	w0, 4187f4 <wcrtomb@plt+0x15f84>
  4186e4:	bl	4027e0 <__errno_location@plt>
  4186e8:	ldr	w8, [x0]
  4186ec:	ldrh	w9, [x20, #110]
  4186f0:	str	w8, [x20, #64]
  4186f4:	orr	w8, w9, #0x1
  4186f8:	strh	w8, [x20, #110]
  4186fc:	ldr	x8, [x19, #8]
  418700:	cbz	x8, 4187f4 <wcrtomb@plt+0x15f84>
  418704:	ldr	x9, [x8, #8]
  418708:	ldr	x9, [x9, #48]
  41870c:	str	x9, [x8, #48]
  418710:	ldr	x8, [x8, #16]
  418714:	cbnz	x8, 418704 <wcrtomb@plt+0x15e94>
  418718:	b	4187f4 <wcrtomb@plt+0x15f84>
  41871c:	str	xzr, [x19, #8]
  418720:	mov	w8, #0x6                   	// #6
  418724:	strh	w8, [x20, #108]
  418728:	mov	x0, x19
  41872c:	mov	x1, x20
  418730:	bl	418c90 <wcrtomb@plt+0x16420>
  418734:	b	4188c0 <wcrtomb@plt+0x16050>
  418738:	ldr	x21, [x20, #8]
  41873c:	ldr	x8, [x21, #24]
  418740:	cbz	x8, 418858 <wcrtomb@plt+0x15fe8>
  418744:	str	x21, [x19]
  418748:	ldr	x8, [x19, #32]
  41874c:	ldr	x9, [x21, #72]
  418750:	mov	w1, #0x3                   	// #3
  418754:	mov	x0, x19
  418758:	strb	wzr, [x8, x9]
  41875c:	bl	418f68 <wcrtomb@plt+0x166f8>
  418760:	cbz	x0, 41884c <wcrtomb@plt+0x15fdc>
  418764:	mov	x21, x0
  418768:	mov	x0, x20
  41876c:	bl	402620 <free@plt>
  418770:	b	418a74 <wcrtomb@plt+0x16204>
  418774:	mov	x0, x19
  418778:	bl	41995c <wcrtomb@plt+0x170ec>
  41877c:	ldr	w8, [x19, #72]
  418780:	cbz	w0, 418794 <wcrtomb@plt+0x15f24>
  418784:	orr	w8, w8, #0x2000
  418788:	mov	x20, xzr
  41878c:	str	w8, [x19, #72]
  418790:	b	4188c0 <wcrtomb@plt+0x16050>
  418794:	mov	w9, #0x102                 	// #258
  418798:	tst	w8, w9
  41879c:	b.eq	41890c <wcrtomb@plt+0x1609c>  // b.none
  4187a0:	ldr	x0, [x19, #88]
  4187a4:	cbz	x0, 418914 <wcrtomb@plt+0x160a4>
  4187a8:	bl	413f4c <wcrtomb@plt+0x116dc>
  4187ac:	b	418914 <wcrtomb@plt+0x160a4>
  4187b0:	and	w8, w8, #0xffffefff
  4187b4:	str	w8, [x19, #72]
  4187b8:	b	4187cc <wcrtomb@plt+0x15f5c>
  4187bc:	mov	x0, x21
  4187c0:	bl	402620 <free@plt>
  4187c4:	mov	x21, x22
  4187c8:	cbz	x22, 4187dc <wcrtomb@plt+0x15f6c>
  4187cc:	ldp	x22, x0, [x21, #16]
  4187d0:	cbz	x0, 4187bc <wcrtomb@plt+0x15f4c>
  4187d4:	bl	4024e0 <closedir@plt>
  4187d8:	b	4187bc <wcrtomb@plt+0x15f4c>
  4187dc:	str	xzr, [x19, #8]
  4187e0:	mov	w1, #0x3                   	// #3
  4187e4:	mov	x0, x19
  4187e8:	bl	418f68 <wcrtomb@plt+0x166f8>
  4187ec:	str	x0, [x19, #8]
  4187f0:	cbz	x0, 418800 <wcrtomb@plt+0x15f90>
  4187f4:	ldr	x21, [x19, #8]
  4187f8:	str	xzr, [x19, #8]
  4187fc:	b	418a74 <wcrtomb@plt+0x16204>
  418800:	ldrb	w8, [x19, #73]
  418804:	tbnz	w8, #5, 4188bc <wcrtomb@plt+0x1604c>
  418808:	ldr	w8, [x20, #64]
  41880c:	cbz	w8, 418728 <wcrtomb@plt+0x15eb8>
  418810:	ldrh	w8, [x20, #108]
  418814:	cmp	w8, #0x4
  418818:	b.eq	418728 <wcrtomb@plt+0x15eb8>  // b.none
  41881c:	mov	w8, #0x7                   	// #7
  418820:	b	418724 <wcrtomb@plt+0x15eb4>
  418824:	ldr	w0, [x19, #44]
  418828:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41882c:	add	x1, x1, #0x37
  418830:	bl	414ee0 <wcrtomb@plt+0x12670>
  418834:	str	w0, [x20, #68]
  418838:	tbnz	w0, #31, 4188f4 <wcrtomb@plt+0x16084>
  41883c:	ldrh	w8, [x20, #110]
  418840:	orr	w8, w8, #0x2
  418844:	strh	w8, [x20, #110]
  418848:	b	418ab4 <wcrtomb@plt+0x16244>
  41884c:	ldrb	w8, [x19, #73]
  418850:	tbnz	w8, #5, 4188bc <wcrtomb@plt+0x1604c>
  418854:	ldr	x21, [x20, #8]
  418858:	mov	x0, x20
  41885c:	str	x21, [x19]
  418860:	bl	402620 <free@plt>
  418864:	ldr	x8, [x21, #88]
  418868:	cmn	x8, #0x1
  41886c:	b.eq	4188d8 <wcrtomb@plt+0x16068>  // b.none
  418870:	ldrh	w8, [x21, #108]
  418874:	cmp	w8, #0xb
  418878:	b.eq	418c8c <wcrtomb@plt+0x1641c>  // b.none
  41887c:	ldr	x8, [x19, #32]
  418880:	ldr	x9, [x21, #72]
  418884:	strb	wzr, [x8, x9]
  418888:	ldr	x8, [x21, #88]
  41888c:	cbz	x8, 4189d0 <wcrtomb@plt+0x16160>
  418890:	ldrh	w8, [x21, #110]
  418894:	tbnz	w8, #1, 4189f8 <wcrtomb@plt+0x16188>
  418898:	tbnz	w8, #0, 418c4c <wcrtomb@plt+0x163dc>
  41889c:	ldr	x1, [x21, #8]
  4188a0:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  4188a4:	add	x3, x3, #0x36
  4188a8:	mov	w2, #0xffffffff            	// #-1
  4188ac:	mov	x0, x19
  4188b0:	bl	418d34 <wcrtomb@plt+0x164c4>
  4188b4:	cbnz	w0, 4189dc <wcrtomb@plt+0x1616c>
  4188b8:	b	418c4c <wcrtomb@plt+0x163dc>
  4188bc:	mov	x20, xzr
  4188c0:	mov	x0, x20
  4188c4:	ldp	x20, x19, [sp, #48]
  4188c8:	ldp	x22, x21, [sp, #32]
  4188cc:	ldr	x23, [sp, #16]
  4188d0:	ldp	x29, x30, [sp], #64
  4188d4:	ret
  4188d8:	mov	x0, x21
  4188dc:	bl	402620 <free@plt>
  4188e0:	bl	4027e0 <__errno_location@plt>
  4188e4:	mov	x20, xzr
  4188e8:	str	wzr, [x0]
  4188ec:	str	xzr, [x19]
  4188f0:	b	4188c0 <wcrtomb@plt+0x16050>
  4188f4:	bl	4027e0 <__errno_location@plt>
  4188f8:	ldr	w8, [x0]
  4188fc:	mov	w9, #0x7                   	// #7
  418900:	strh	w9, [x20, #108]
  418904:	str	w8, [x20, #64]
  418908:	b	418ab4 <wcrtomb@plt+0x16244>
  41890c:	ldr	x0, [x19, #88]
  418910:	bl	402620 <free@plt>
  418914:	ldr	x8, [x21, #96]
  418918:	add	x20, x21, #0xf8
  41891c:	mov	x1, x20
  418920:	str	x8, [x21, #72]
  418924:	ldr	x0, [x19, #32]
  418928:	add	x2, x8, #0x1
  41892c:	bl	402230 <memmove@plt>
  418930:	mov	w1, #0x2f                  	// #47
  418934:	mov	x0, x20
  418938:	bl	402510 <strrchr@plt>
  41893c:	cbz	x0, 418974 <wcrtomb@plt+0x16104>
  418940:	cmp	x0, x20
  418944:	b.ne	418950 <wcrtomb@plt+0x160e0>  // b.any
  418948:	ldrb	w8, [x21, #249]
  41894c:	cbz	w8, 418974 <wcrtomb@plt+0x16104>
  418950:	add	x22, x0, #0x1
  418954:	mov	x0, x22
  418958:	bl	402270 <strlen@plt>
  41895c:	mov	x23, x0
  418960:	add	x2, x0, #0x1
  418964:	mov	x0, x20
  418968:	mov	x1, x22
  41896c:	bl	402230 <memmove@plt>
  418970:	str	x23, [x21, #96]
  418974:	ldr	x8, [x19, #32]
  418978:	mov	w9, #0x102                 	// #258
  41897c:	stp	x8, x8, [x21, #48]
  418980:	ldrh	w8, [x19, #72]
  418984:	tst	w8, w9
  418988:	b.eq	4189b8 <wcrtomb@plt+0x16148>  // b.none
  41898c:	adrp	x2, 419000 <wcrtomb@plt+0x16790>
  418990:	adrp	x3, 419000 <wcrtomb@plt+0x16790>
  418994:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  418998:	add	x2, x2, #0xbf4
  41899c:	add	x3, x3, #0xc04
  4189a0:	add	x4, x4, #0x620
  4189a4:	mov	w0, #0x1f                  	// #31
  4189a8:	mov	x1, xzr
  4189ac:	bl	413ca0 <wcrtomb@plt+0x11430>
  4189b0:	str	x0, [x19, #88]
  4189b4:	b	418ab0 <wcrtomb@plt+0x16240>
  4189b8:	mov	w0, #0x20                  	// #32
  4189bc:	bl	4023a0 <malloc@plt>
  4189c0:	str	x0, [x19, #88]
  4189c4:	cbz	x0, 418ab0 <wcrtomb@plt+0x16240>
  4189c8:	bl	42a9dc <_obstack_memory_used@@Base+0x10848>
  4189cc:	b	418ab0 <wcrtomb@plt+0x16240>
  4189d0:	mov	x0, x19
  4189d4:	bl	41995c <wcrtomb@plt+0x170ec>
  4189d8:	cbz	w0, 418c4c <wcrtomb@plt+0x163dc>
  4189dc:	bl	4027e0 <__errno_location@plt>
  4189e0:	ldr	w8, [x0]
  4189e4:	str	w8, [x21, #64]
  4189e8:	ldr	w8, [x19, #72]
  4189ec:	orr	w8, w8, #0x2000
  4189f0:	str	w8, [x19, #72]
  4189f4:	b	418c4c <wcrtomb@plt+0x163dc>
  4189f8:	ldr	w8, [x19, #72]
  4189fc:	tbnz	w8, #2, 418c44 <wcrtomb@plt+0x163d4>
  418a00:	ldr	w20, [x21, #68]
  418a04:	tbnz	w8, #9, 418c1c <wcrtomb@plt+0x163ac>
  418a08:	mov	w0, w20
  418a0c:	bl	4022b0 <fchdir@plt>
  418a10:	cbz	w0, 418c44 <wcrtomb@plt+0x163d4>
  418a14:	bl	4027e0 <__errno_location@plt>
  418a18:	ldr	w8, [x0]
  418a1c:	str	w8, [x21, #64]
  418a20:	ldr	w8, [x19, #72]
  418a24:	orr	w8, w8, #0x2000
  418a28:	str	w8, [x19, #72]
  418a2c:	b	418c44 <wcrtomb@plt+0x163d4>
  418a30:	ldr	w0, [x19, #44]
  418a34:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  418a38:	add	x1, x1, #0x37
  418a3c:	bl	414ee0 <wcrtomb@plt+0x12670>
  418a40:	str	w0, [x21, #68]
  418a44:	tbnz	w0, #31, 418a58 <wcrtomb@plt+0x161e8>
  418a48:	ldrh	w8, [x21, #110]
  418a4c:	orr	w8, w8, #0x2
  418a50:	strh	w8, [x21, #110]
  418a54:	b	418a6c <wcrtomb@plt+0x161fc>
  418a58:	bl	4027e0 <__errno_location@plt>
  418a5c:	ldr	w8, [x0]
  418a60:	mov	w9, #0x7                   	// #7
  418a64:	strh	w9, [x21, #108]
  418a68:	str	w8, [x21, #64]
  418a6c:	mov	w8, #0x3                   	// #3
  418a70:	strh	w8, [x21, #112]
  418a74:	ldr	x8, [x21, #8]
  418a78:	ldr	x11, [x19, #32]
  418a7c:	add	x1, x21, #0xf8
  418a80:	ldr	x9, [x8, #72]
  418a84:	ldr	x8, [x8, #56]
  418a88:	sub	x10, x9, #0x1
  418a8c:	ldrb	w8, [x8, x10]
  418a90:	cmp	w8, #0x2f
  418a94:	csel	x8, x10, x9, eq  // eq = none
  418a98:	add	x0, x11, x8
  418a9c:	mov	w8, #0x2f                  	// #47
  418aa0:	strb	w8, [x0], #1
  418aa4:	ldr	x8, [x21, #96]
  418aa8:	add	x2, x8, #0x1
  418aac:	bl	402230 <memmove@plt>
  418ab0:	mov	x20, x21
  418ab4:	str	x20, [x19]
  418ab8:	ldrh	w0, [x20, #108]
  418abc:	cmp	w0, #0xb
  418ac0:	b.ne	418b68 <wcrtomb@plt+0x162f8>  // b.any
  418ac4:	ldr	x8, [x20, #168]
  418ac8:	cmp	x8, #0x1
  418acc:	b.eq	4188c0 <wcrtomb@plt+0x16050>  // b.none
  418ad0:	cmp	x8, #0x2
  418ad4:	b.ne	418c8c <wcrtomb@plt+0x1641c>  // b.any
  418ad8:	ldr	x21, [x20, #8]
  418adc:	ldr	w8, [x21, #104]
  418ae0:	cbnz	w8, 418b20 <wcrtomb@plt+0x162b0>
  418ae4:	ldr	w8, [x19, #72]
  418ae8:	mvn	w8, w8
  418aec:	tst	w8, #0x18
  418af0:	b.ne	418b20 <wcrtomb@plt+0x162b0>  // b.any
  418af4:	ldr	w1, [x19, #44]
  418af8:	mov	x0, x21
  418afc:	bl	419c30 <wcrtomb@plt+0x173c0>
  418b00:	mov	w8, #0x4973                	// #18803
  418b04:	movk	w8, #0x5265, lsl #16
  418b08:	cmp	x0, x8
  418b0c:	b.eq	418b64 <wcrtomb@plt+0x162f4>  // b.none
  418b10:	mov	w8, #0x5342                	// #21314
  418b14:	movk	w8, #0x5846, lsl #16
  418b18:	cmp	x0, x8
  418b1c:	b.eq	418b64 <wcrtomb@plt+0x162f4>  // b.none
  418b20:	mov	x0, x19
  418b24:	mov	x1, x20
  418b28:	mov	w2, wzr
  418b2c:	bl	4180c8 <wcrtomb@plt+0x15858>
  418b30:	ldr	w8, [x20, #136]
  418b34:	strh	w0, [x20, #108]
  418b38:	and	w8, w8, #0xf000
  418b3c:	cmp	w8, #0x4, lsl #12
  418b40:	b.ne	418b68 <wcrtomb@plt+0x162f8>  // b.any
  418b44:	ldr	x8, [x20, #88]
  418b48:	cbz	x8, 418b64 <wcrtomb@plt+0x162f4>
  418b4c:	ldr	w8, [x21, #104]
  418b50:	add	w9, w8, #0x1
  418b54:	cmp	w9, #0x2
  418b58:	b.cc	418b64 <wcrtomb@plt+0x162f4>  // b.lo, b.ul, b.last
  418b5c:	sub	w8, w8, #0x1
  418b60:	str	w8, [x21, #104]
  418b64:	ldrh	w0, [x20, #108]
  418b68:	and	w8, w0, #0xffff
  418b6c:	cmp	w8, #0x1
  418b70:	b.ne	4188c0 <wcrtomb@plt+0x16050>  // b.any
  418b74:	ldr	x8, [x20, #88]
  418b78:	cbnz	x8, 418b84 <wcrtomb@plt+0x16314>
  418b7c:	ldr	x8, [x20, #120]
  418b80:	str	x8, [x19, #24]
  418b84:	ldrh	w8, [x19, #72]
  418b88:	mov	w9, #0x102                 	// #258
  418b8c:	tst	w8, w9
  418b90:	b.eq	418be8 <wcrtomb@plt+0x16378>  // b.none
  418b94:	mov	w0, #0x18                  	// #24
  418b98:	bl	4023a0 <malloc@plt>
  418b9c:	cbz	x0, 418c08 <wcrtomb@plt+0x16398>
  418ba0:	ldur	q0, [x20, #120]
  418ba4:	str	x20, [x0, #16]
  418ba8:	mov	x21, x0
  418bac:	mov	x1, x21
  418bb0:	str	q0, [x0]
  418bb4:	ldr	x0, [x19, #88]
  418bb8:	bl	41473c <wcrtomb@plt+0x11ecc>
  418bbc:	cmp	x0, x21
  418bc0:	b.eq	4188c0 <wcrtomb@plt+0x16050>  // b.none
  418bc4:	mov	x19, x0
  418bc8:	mov	x0, x21
  418bcc:	bl	402620 <free@plt>
  418bd0:	cbz	x19, 418c08 <wcrtomb@plt+0x16398>
  418bd4:	ldr	x8, [x19, #16]
  418bd8:	mov	w9, #0x2                   	// #2
  418bdc:	strh	w9, [x20, #108]
  418be0:	str	x8, [x20]
  418be4:	b	4188c0 <wcrtomb@plt+0x16050>
  418be8:	ldr	x0, [x19, #88]
  418bec:	add	x1, x20, #0x78
  418bf0:	bl	42a9f0 <_obstack_memory_used@@Base+0x1085c>
  418bf4:	tbz	w0, #0, 4188c0 <wcrtomb@plt+0x16050>
  418bf8:	mov	w8, #0x2                   	// #2
  418bfc:	str	x20, [x20]
  418c00:	strh	w8, [x20, #108]
  418c04:	b	4188c0 <wcrtomb@plt+0x16050>
  418c08:	bl	4027e0 <__errno_location@plt>
  418c0c:	mov	w8, #0xc                   	// #12
  418c10:	mov	x20, xzr
  418c14:	str	w8, [x0]
  418c18:	b	4188c0 <wcrtomb@plt+0x16050>
  418c1c:	ldr	w1, [x19, #44]
  418c20:	cmp	w1, w20
  418c24:	b.ne	418c30 <wcrtomb@plt+0x163c0>  // b.any
  418c28:	cmn	w1, #0x64
  418c2c:	b.ne	418c8c <wcrtomb@plt+0x1641c>  // b.any
  418c30:	add	x0, x19, #0x60
  418c34:	bl	42ac88 <_obstack_memory_used@@Base+0x10af4>
  418c38:	tbnz	w0, #31, 418c40 <wcrtomb@plt+0x163d0>
  418c3c:	bl	4024f0 <close@plt>
  418c40:	str	w20, [x19, #44]
  418c44:	ldr	w0, [x21, #68]
  418c48:	bl	4024f0 <close@plt>
  418c4c:	ldrh	w8, [x21, #108]
  418c50:	cmp	w8, #0x2
  418c54:	b.eq	418c7c <wcrtomb@plt+0x1640c>  // b.none
  418c58:	ldr	w8, [x21, #64]
  418c5c:	mov	w9, #0x6                   	// #6
  418c60:	cmp	w8, #0x0
  418c64:	cinc	w9, w9, ne  // ne = any
  418c68:	strh	w9, [x21, #108]
  418c6c:	cbnz	w8, 418c7c <wcrtomb@plt+0x1640c>
  418c70:	mov	x0, x19
  418c74:	mov	x1, x21
  418c78:	bl	418c90 <wcrtomb@plt+0x16420>
  418c7c:	ldrb	w8, [x19, #73]
  418c80:	tst	w8, #0x20
  418c84:	csel	x20, x21, xzr, eq  // eq = none
  418c88:	b	4188c0 <wcrtomb@plt+0x16050>
  418c8c:	bl	402560 <abort@plt>
  418c90:	sub	sp, sp, #0x30
  418c94:	stp	x29, x30, [sp, #32]
  418c98:	ldrh	w8, [x0, #72]
  418c9c:	mov	w9, #0x102                 	// #258
  418ca0:	add	x29, sp, #0x20
  418ca4:	tst	w8, w9
  418ca8:	b.eq	418cd4 <wcrtomb@plt+0x16464>  // b.none
  418cac:	ldur	q0, [x1, #120]
  418cb0:	mov	x1, sp
  418cb4:	str	q0, [sp]
  418cb8:	ldr	x0, [x0, #88]
  418cbc:	bl	414774 <wcrtomb@plt+0x11f04>
  418cc0:	cbz	x0, 418d30 <wcrtomb@plt+0x164c0>
  418cc4:	bl	402620 <free@plt>
  418cc8:	ldp	x29, x30, [sp, #32]
  418ccc:	add	sp, sp, #0x30
  418cd0:	ret
  418cd4:	ldr	x8, [x1, #8]
  418cd8:	cbz	x8, 418cc8 <wcrtomb@plt+0x16458>
  418cdc:	ldr	x9, [x8, #88]
  418ce0:	tbnz	x9, #63, 418cc8 <wcrtomb@plt+0x16458>
  418ce4:	ldr	x9, [x0, #88]
  418ce8:	ldr	x10, [x9, #16]
  418cec:	cbz	x10, 418d30 <wcrtomb@plt+0x164c0>
  418cf0:	ldr	x10, [x9]
  418cf4:	ldr	x11, [x1, #128]
  418cf8:	cmp	x10, x11
  418cfc:	b.ne	418cc8 <wcrtomb@plt+0x16458>  // b.any
  418d00:	ldr	x10, [x9, #8]
  418d04:	ldr	x11, [x1, #120]
  418d08:	cmp	x10, x11
  418d0c:	b.ne	418cc8 <wcrtomb@plt+0x16458>  // b.any
  418d10:	ldr	x10, [x8, #120]
  418d14:	str	x10, [x9, #8]
  418d18:	ldr	x8, [x8, #128]
  418d1c:	ldr	x9, [x0, #88]
  418d20:	str	x8, [x9]
  418d24:	ldp	x29, x30, [sp, #32]
  418d28:	add	sp, sp, #0x30
  418d2c:	ret
  418d30:	bl	402560 <abort@plt>
  418d34:	sub	sp, sp, #0xd0
  418d38:	stp	x22, x21, [sp, #176]
  418d3c:	stp	x20, x19, [sp, #192]
  418d40:	mov	x22, x3
  418d44:	mov	w19, w2
  418d48:	mov	x21, x1
  418d4c:	mov	x20, x0
  418d50:	stp	x29, x30, [sp, #128]
  418d54:	str	x25, [sp, #144]
  418d58:	stp	x24, x23, [sp, #160]
  418d5c:	add	x29, sp, #0x80
  418d60:	cbz	x3, 418dcc <wcrtomb@plt+0x1655c>
  418d64:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  418d68:	add	x1, x1, #0x36
  418d6c:	mov	x0, x22
  418d70:	bl	402600 <strcmp@plt>
  418d74:	cmp	w0, #0x0
  418d78:	cset	w23, ne  // ne = any
  418d7c:	ldr	w8, [x20, #72]
  418d80:	tbnz	w8, #2, 418dd8 <wcrtomb@plt+0x16568>
  418d84:	cmp	w19, #0x0
  418d88:	cset	w9, ge  // ge = tcont
  418d8c:	orr	w9, w9, w23
  418d90:	tbnz	w9, #0, 418df4 <wcrtomb@plt+0x16584>
  418d94:	tbz	w8, #9, 418df4 <wcrtomb@plt+0x16584>
  418d98:	add	x19, x20, #0x60
  418d9c:	mov	x0, x19
  418da0:	bl	42ac80 <_obstack_memory_used@@Base+0x10aec>
  418da4:	tbnz	w0, #0, 418e08 <wcrtomb@plt+0x16598>
  418da8:	mov	x0, x19
  418dac:	bl	42acd0 <_obstack_memory_used@@Base+0x10b3c>
  418db0:	tbnz	w0, #31, 418e08 <wcrtomb@plt+0x16598>
  418db4:	mov	w19, w0
  418db8:	mov	w24, wzr
  418dbc:	mov	x22, xzr
  418dc0:	ldr	w25, [x20, #72]
  418dc4:	tbz	w25, #1, 418e40 <wcrtomb@plt+0x165d0>
  418dc8:	b	418e70 <wcrtomb@plt+0x16600>
  418dcc:	mov	w23, #0x1                   	// #1
  418dd0:	ldr	w8, [x20, #72]
  418dd4:	tbz	w8, #2, 418d84 <wcrtomb@plt+0x16514>
  418dd8:	mov	w21, wzr
  418ddc:	tbnz	w19, #31, 418f44 <wcrtomb@plt+0x166d4>
  418de0:	tbz	w8, #9, 418f44 <wcrtomb@plt+0x166d4>
  418de4:	mov	w0, w19
  418de8:	bl	4024f0 <close@plt>
  418dec:	mov	w21, wzr
  418df0:	b	418f44 <wcrtomb@plt+0x166d4>
  418df4:	tbnz	w19, #31, 418e08 <wcrtomb@plt+0x16598>
  418df8:	mov	w24, wzr
  418dfc:	ldr	w25, [x20, #72]
  418e00:	tbz	w25, #1, 418e40 <wcrtomb@plt+0x165d0>
  418e04:	b	418e70 <wcrtomb@plt+0x16600>
  418e08:	ldr	w8, [x20, #72]
  418e0c:	mov	w2, #0x4900                	// #18688
  418e10:	movk	w2, #0x8, lsl #16
  418e14:	lsr	w9, w8, #4
  418e18:	bfi	w2, w9, #15, #1
  418e1c:	tbnz	w8, #9, 418e90 <wcrtomb@plt+0x16620>
  418e20:	mov	x0, x22
  418e24:	mov	w1, w2
  418e28:	bl	42ab48 <_obstack_memory_used@@Base+0x109b4>
  418e2c:	mov	w19, w0
  418e30:	tbnz	w0, #31, 418ea4 <wcrtomb@plt+0x16634>
  418e34:	mov	w24, #0x1                   	// #1
  418e38:	ldr	w25, [x20, #72]
  418e3c:	tbnz	w25, #1, 418e70 <wcrtomb@plt+0x16600>
  418e40:	cbz	x22, 418e58 <wcrtomb@plt+0x165e8>
  418e44:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  418e48:	add	x1, x1, #0x36
  418e4c:	mov	x0, x22
  418e50:	bl	402600 <strcmp@plt>
  418e54:	cbz	w0, 418e70 <wcrtomb@plt+0x16600>
  418e58:	tbnz	w25, #9, 418ed4 <wcrtomb@plt+0x16664>
  418e5c:	mov	w0, w19
  418e60:	bl	4022b0 <fchdir@plt>
  418e64:	mov	w21, w0
  418e68:	cbnz	w24, 418f10 <wcrtomb@plt+0x166a0>
  418e6c:	b	418f44 <wcrtomb@plt+0x166d4>
  418e70:	mov	x2, sp
  418e74:	mov	w0, wzr
  418e78:	mov	w1, w19
  418e7c:	bl	402720 <__fxstat@plt>
  418e80:	cbz	w0, 418eac <wcrtomb@plt+0x1663c>
  418e84:	mov	w21, #0xffffffff            	// #-1
  418e88:	cbnz	w24, 418f10 <wcrtomb@plt+0x166a0>
  418e8c:	b	418f44 <wcrtomb@plt+0x166d4>
  418e90:	ldr	w0, [x20, #44]
  418e94:	mov	x1, x22
  418e98:	bl	414ee0 <wcrtomb@plt+0x12670>
  418e9c:	mov	w19, w0
  418ea0:	tbz	w0, #31, 418e34 <wcrtomb@plt+0x165c4>
  418ea4:	mov	w21, #0xffffffff            	// #-1
  418ea8:	b	418f44 <wcrtomb@plt+0x166d4>
  418eac:	ldr	x8, [x21, #120]
  418eb0:	ldr	x9, [sp]
  418eb4:	cmp	x8, x9
  418eb8:	b.ne	418efc <wcrtomb@plt+0x1668c>  // b.any
  418ebc:	ldr	x8, [x21, #128]
  418ec0:	ldr	x9, [sp, #8]
  418ec4:	cmp	x8, x9
  418ec8:	b.ne	418efc <wcrtomb@plt+0x1668c>  // b.any
  418ecc:	ldr	w25, [x20, #72]
  418ed0:	tbz	w25, #9, 418e5c <wcrtomb@plt+0x165ec>
  418ed4:	ldr	w1, [x20, #44]
  418ed8:	cmp	w1, w19
  418edc:	b.ne	418ee8 <wcrtomb@plt+0x16678>  // b.any
  418ee0:	cmn	w1, #0x64
  418ee4:	b.ne	418f64 <wcrtomb@plt+0x166f4>  // b.any
  418ee8:	cbz	w23, 418f2c <wcrtomb@plt+0x166bc>
  418eec:	add	x0, x20, #0x60
  418ef0:	bl	42ac88 <_obstack_memory_used@@Base+0x10af4>
  418ef4:	tbz	w0, #31, 418f38 <wcrtomb@plt+0x166c8>
  418ef8:	b	418f3c <wcrtomb@plt+0x166cc>
  418efc:	bl	4027e0 <__errno_location@plt>
  418f00:	mov	w8, #0x2                   	// #2
  418f04:	str	w8, [x0]
  418f08:	mov	w21, #0xffffffff            	// #-1
  418f0c:	cbz	w24, 418f44 <wcrtomb@plt+0x166d4>
  418f10:	bl	4027e0 <__errno_location@plt>
  418f14:	ldr	w22, [x0]
  418f18:	mov	x20, x0
  418f1c:	mov	w0, w19
  418f20:	bl	4024f0 <close@plt>
  418f24:	str	w22, [x20]
  418f28:	b	418f44 <wcrtomb@plt+0x166d4>
  418f2c:	tbnz	w25, #2, 418f3c <wcrtomb@plt+0x166cc>
  418f30:	tbnz	w1, #31, 418f3c <wcrtomb@plt+0x166cc>
  418f34:	mov	w0, w1
  418f38:	bl	4024f0 <close@plt>
  418f3c:	mov	w21, wzr
  418f40:	str	w19, [x20, #44]
  418f44:	mov	w0, w21
  418f48:	ldp	x20, x19, [sp, #192]
  418f4c:	ldp	x22, x21, [sp, #176]
  418f50:	ldp	x24, x23, [sp, #160]
  418f54:	ldr	x25, [sp, #144]
  418f58:	ldp	x29, x30, [sp, #128]
  418f5c:	add	sp, sp, #0xd0
  418f60:	ret
  418f64:	bl	402560 <abort@plt>
  418f68:	sub	sp, sp, #0xc0
  418f6c:	stp	x29, x30, [sp, #96]
  418f70:	stp	x28, x27, [sp, #112]
  418f74:	stp	x26, x25, [sp, #128]
  418f78:	stp	x24, x23, [sp, #144]
  418f7c:	stp	x22, x21, [sp, #160]
  418f80:	stp	x20, x19, [sp, #176]
  418f84:	ldr	x25, [x0]
  418f88:	mov	x20, x0
  418f8c:	mov	w24, w1
  418f90:	add	x29, sp, #0x60
  418f94:	ldr	x23, [x25, #24]
  418f98:	cbz	x23, 418fd4 <wcrtomb@plt+0x16764>
  418f9c:	mov	x0, x23
  418fa0:	bl	4026a0 <dirfd@plt>
  418fa4:	stur	w0, [x29, #-4]
  418fa8:	tbnz	w0, #31, 418ff8 <wcrtomb@plt+0x16788>
  418fac:	str	wzr, [sp]
  418fb0:	mov	x9, x20
  418fb4:	ldr	x8, [x9, #64]!
  418fb8:	cmp	x8, #0x0
  418fbc:	mov	w8, #0x86a0                	// #34464
  418fc0:	movk	w8, #0x1, lsl #16
  418fc4:	csinv	x8, x8, xzr, eq  // eq = none
  418fc8:	str	x9, [sp, #24]
  418fcc:	str	x8, [sp, #40]
  418fd0:	b	4192b0 <wcrtomb@plt+0x16a40>
  418fd4:	ldr	w8, [x20, #72]
  418fd8:	mov	w9, #0x204                 	// #516
  418fdc:	and	w9, w8, w9
  418fe0:	cmp	w9, #0x200
  418fe4:	b.ne	419014 <wcrtomb@plt+0x167a4>  // b.any
  418fe8:	ldr	w0, [x20, #44]
  418fec:	ldr	x1, [x25, #48]
  418ff0:	tbz	w8, #4, 419064 <wcrtomb@plt+0x167f4>
  418ff4:	b	419020 <wcrtomb@plt+0x167b0>
  418ff8:	ldr	x0, [x25, #24]
  418ffc:	bl	4024e0 <closedir@plt>
  419000:	mov	x26, xzr
  419004:	cmp	w24, #0x3
  419008:	str	xzr, [x25, #24]
  41900c:	b.ne	419918 <wcrtomb@plt+0x170a8>  // b.any
  419010:	b	419048 <wcrtomb@plt+0x167d8>
  419014:	mov	w0, #0xffffff9c            	// #-100
  419018:	ldr	x1, [x25, #48]
  41901c:	tbz	w8, #4, 419064 <wcrtomb@plt+0x167f4>
  419020:	tbz	w8, #0, 41902c <wcrtomb@plt+0x167bc>
  419024:	ldr	x8, [x25, #88]
  419028:	cbz	x8, 419064 <wcrtomb@plt+0x167f4>
  41902c:	mov	w2, #0x8000                	// #32768
  419030:	sub	x3, x29, #0x4
  419034:	bl	42ae34 <_obstack_memory_used@@Base+0x10ca0>
  419038:	str	x0, [x25, #24]
  41903c:	cbnz	x0, 419078 <wcrtomb@plt+0x16808>
  419040:	cmp	w24, #0x3
  419044:	b.ne	419148 <wcrtomb@plt+0x168d8>  // b.any
  419048:	mov	w8, #0x4                   	// #4
  41904c:	strh	w8, [x25, #108]
  419050:	bl	4027e0 <__errno_location@plt>
  419054:	ldr	w8, [x0]
  419058:	mov	x26, xzr
  41905c:	str	w8, [x25, #64]
  419060:	b	419918 <wcrtomb@plt+0x170a8>
  419064:	mov	w2, wzr
  419068:	sub	x3, x29, #0x4
  41906c:	bl	42ae34 <_obstack_memory_used@@Base+0x10ca0>
  419070:	str	x0, [x25, #24]
  419074:	cbz	x0, 419040 <wcrtomb@plt+0x167d0>
  419078:	ldrh	w8, [x25, #108]
  41907c:	cmp	w8, #0xb
  419080:	b.ne	41909c <wcrtomb@plt+0x1682c>  // b.any
  419084:	mov	x0, x20
  419088:	mov	x1, x25
  41908c:	mov	w2, wzr
  419090:	bl	4180c8 <wcrtomb@plt+0x15858>
  419094:	strh	w0, [x25, #108]
  419098:	b	4190a4 <wcrtomb@plt+0x16834>
  41909c:	ldrb	w8, [x20, #73]
  4190a0:	tbnz	w8, #0, 419150 <wcrtomb@plt+0x168e0>
  4190a4:	mov	x9, x20
  4190a8:	ldr	x8, [x9, #64]!
  4190ac:	str	x9, [sp, #24]
  4190b0:	mov	w9, #0x86a0                	// #34464
  4190b4:	movk	w9, #0x1, lsl #16
  4190b8:	cmp	x8, #0x0
  4190bc:	csinv	x8, x9, xzr, eq  // eq = none
  4190c0:	cmp	w24, #0x2
  4190c4:	str	x8, [sp, #40]
  4190c8:	b.ne	4190ec <wcrtomb@plt+0x1687c>  // b.any
  4190cc:	cmp	w24, #0x3
  4190d0:	cset	w19, eq  // eq = none
  4190d4:	b.ne	4192a8 <wcrtomb@plt+0x16a38>  // b.any
  4190d8:	mov	w21, wzr
  4190dc:	ldrb	w9, [x20, #73]
  4190e0:	ldur	w8, [x29, #-4]
  4190e4:	tbnz	w9, #1, 41922c <wcrtomb@plt+0x169bc>
  4190e8:	b	419244 <wcrtomb@plt+0x169d4>
  4190ec:	ldr	w8, [x20, #72]
  4190f0:	and	w8, w8, #0x38
  4190f4:	cmp	w8, #0x18
  4190f8:	b.ne	419214 <wcrtomb@plt+0x169a4>  // b.any
  4190fc:	ldr	w8, [x25, #140]
  419100:	cmp	w8, #0x2
  419104:	b.ne	419214 <wcrtomb@plt+0x169a4>  // b.any
  419108:	ldur	w1, [x29, #-4]
  41910c:	mov	x0, x25
  419110:	bl	419c30 <wcrtomb@plt+0x173c0>
  419114:	mov	w8, #0x9f9f                	// #40863
  419118:	cmp	x0, x8
  41911c:	b.le	419204 <wcrtomb@plt+0x16994>
  419120:	mov	w8, #0x9fa0                	// #40864
  419124:	cmp	x0, x8
  419128:	b.eq	419214 <wcrtomb@plt+0x169a4>  // b.none
  41912c:	mov	w8, #0x4d42                	// #19778
  419130:	movk	w8, #0xff53, lsl #16
  419134:	cmp	x0, x8
  419138:	b.eq	419214 <wcrtomb@plt+0x169a4>  // b.none
  41913c:	mov	w8, #0x414f                	// #16719
  419140:	movk	w8, #0x5346, lsl #16
  419144:	b	41920c <wcrtomb@plt+0x1699c>
  419148:	mov	x26, xzr
  41914c:	b	419918 <wcrtomb@plt+0x170a8>
  419150:	mov	x0, x20
  419154:	mov	x1, x25
  419158:	bl	418c90 <wcrtomb@plt+0x16420>
  41915c:	mov	x0, x20
  419160:	mov	x1, x25
  419164:	mov	w2, wzr
  419168:	bl	4180c8 <wcrtomb@plt+0x15858>
  41916c:	ldrh	w8, [x20, #72]
  419170:	mov	w9, #0x102                 	// #258
  419174:	tst	w8, w9
  419178:	b.eq	4191d0 <wcrtomb@plt+0x16960>  // b.none
  41917c:	mov	w0, #0x18                  	// #24
  419180:	bl	4023a0 <malloc@plt>
  419184:	cbz	x0, 4191f0 <wcrtomb@plt+0x16980>
  419188:	ldur	q0, [x25, #120]
  41918c:	str	x25, [x0, #16]
  419190:	mov	x21, x0
  419194:	mov	x1, x21
  419198:	str	q0, [x0]
  41919c:	ldr	x0, [x20, #88]
  4191a0:	bl	41473c <wcrtomb@plt+0x11ecc>
  4191a4:	cmp	x0, x21
  4191a8:	b.eq	4190a4 <wcrtomb@plt+0x16834>  // b.none
  4191ac:	mov	x22, x0
  4191b0:	mov	x0, x21
  4191b4:	bl	402620 <free@plt>
  4191b8:	cbz	x22, 4191f0 <wcrtomb@plt+0x16980>
  4191bc:	ldr	x8, [x22, #16]
  4191c0:	mov	w9, #0x2                   	// #2
  4191c4:	strh	w9, [x25, #108]
  4191c8:	str	x8, [x25]
  4191cc:	b	4190a4 <wcrtomb@plt+0x16834>
  4191d0:	ldr	x0, [x20, #88]
  4191d4:	add	x1, x25, #0x78
  4191d8:	bl	42a9f0 <_obstack_memory_used@@Base+0x1085c>
  4191dc:	tbz	w0, #0, 4190a4 <wcrtomb@plt+0x16834>
  4191e0:	mov	w8, #0x2                   	// #2
  4191e4:	str	x25, [x25]
  4191e8:	strh	w8, [x25, #108]
  4191ec:	b	4190a4 <wcrtomb@plt+0x16834>
  4191f0:	bl	4027e0 <__errno_location@plt>
  4191f4:	mov	w8, #0xc                   	// #12
  4191f8:	mov	x26, xzr
  4191fc:	str	w8, [x0]
  419200:	b	419918 <wcrtomb@plt+0x170a8>
  419204:	cbz	x0, 419214 <wcrtomb@plt+0x169a4>
  419208:	mov	w8, #0x6969                	// #26985
  41920c:	cmp	x0, x8
  419210:	b.ne	4190cc <wcrtomb@plt+0x1685c>  // b.any
  419214:	cmp	w24, #0x3
  419218:	cset	w19, eq  // eq = none
  41921c:	mov	w21, #0x1                   	// #1
  419220:	ldrb	w9, [x20, #73]
  419224:	ldur	w8, [x29, #-4]
  419228:	tbz	w9, #1, 419244 <wcrtomb@plt+0x169d4>
  41922c:	mov	w1, #0x406                 	// #1030
  419230:	mov	w2, #0x3                   	// #3
  419234:	mov	w0, w8
  419238:	bl	42af74 <_obstack_memory_used@@Base+0x10de0>
  41923c:	mov	w8, w0
  419240:	stur	w0, [x29, #-4]
  419244:	tbnz	w8, #31, 419260 <wcrtomb@plt+0x169f0>
  419248:	mov	x0, x20
  41924c:	mov	x1, x25
  419250:	mov	w2, w8
  419254:	mov	x3, xzr
  419258:	bl	418d34 <wcrtomb@plt+0x164c4>
  41925c:	cbz	w0, 4198a8 <wcrtomb@plt+0x17038>
  419260:	and	w8, w19, w21
  419264:	cmp	w8, #0x1
  419268:	b.ne	419278 <wcrtomb@plt+0x16a08>  // b.any
  41926c:	bl	4027e0 <__errno_location@plt>
  419270:	ldr	w8, [x0]
  419274:	str	w8, [x25, #64]
  419278:	ldrh	w8, [x25, #110]
  41927c:	ldr	x0, [x25, #24]
  419280:	orr	w8, w8, #0x1
  419284:	strh	w8, [x25, #110]
  419288:	bl	4024e0 <closedir@plt>
  41928c:	str	xzr, [x25, #24]
  419290:	ldrb	w8, [x20, #73]
  419294:	tbz	w8, #1, 4192a4 <wcrtomb@plt+0x16a34>
  419298:	ldur	w0, [x29, #-4]
  41929c:	tbnz	w0, #31, 4192a4 <wcrtomb@plt+0x16a34>
  4192a0:	bl	4024f0 <close@plt>
  4192a4:	str	xzr, [x25, #24]
  4192a8:	mov	w8, #0x1                   	// #1
  4192ac:	str	w8, [sp]
  4192b0:	ldr	x8, [x25, #72]
  4192b4:	ldr	x9, [x25, #56]
  4192b8:	ldrb	w11, [x20, #72]
  4192bc:	str	w24, [sp, #4]
  4192c0:	sub	x10, x8, #0x1
  4192c4:	ldrb	w9, [x9, x10]
  4192c8:	cmp	w9, #0x2f
  4192cc:	csel	x8, x10, x8, eq  // eq = none
  4192d0:	tbnz	w11, #2, 4195e0 <wcrtomb@plt+0x16d70>
  4192d4:	str	xzr, [sp, #48]
  4192d8:	ldr	x21, [x25, #24]
  4192dc:	add	x19, x8, #0x1
  4192e0:	str	x23, [sp, #8]
  4192e4:	cbz	x21, 419604 <wcrtomb@plt+0x16d94>
  4192e8:	ldr	x8, [x25, #88]
  4192ec:	ldr	x9, [x20, #48]
  4192f0:	add	x8, x8, #0x1
  4192f4:	str	x8, [sp, #32]
  4192f8:	sub	x8, x9, x19
  4192fc:	stur	x8, [x29, #-24]
  419300:	bl	4027e0 <__errno_location@plt>
  419304:	mov	x26, xzr
  419308:	mov	x22, xzr
  41930c:	mov	x27, xzr
  419310:	stur	x0, [x29, #-40]
  419314:	str	xzr, [sp, #16]
  419318:	ldur	x8, [x29, #-40]
  41931c:	mov	x0, x21
  419320:	str	wzr, [x8]
  419324:	bl	4024b0 <readdir@plt>
  419328:	cbz	x0, 419614 <wcrtomb@plt+0x16da4>
  41932c:	ldrb	w8, [x20, #72]
  419330:	mov	x28, x0
  419334:	tbnz	w8, #5, 41935c <wcrtomb@plt+0x16aec>
  419338:	ldrb	w8, [x28, #19]
  41933c:	cmp	w8, #0x2e
  419340:	b.ne	41935c <wcrtomb@plt+0x16aec>  // b.any
  419344:	ldrb	w8, [x28, #20]
  419348:	cbz	w8, 419588 <wcrtomb@plt+0x16d18>
  41934c:	cmp	w8, #0x2e
  419350:	b.ne	41935c <wcrtomb@plt+0x16aec>  // b.any
  419354:	ldrb	w8, [x28, #21]
  419358:	cbz	w8, 419588 <wcrtomb@plt+0x16d18>
  41935c:	mov	x24, x25
  419360:	add	x25, x28, #0x13
  419364:	mov	x0, x25
  419368:	stur	x22, [x29, #-16]
  41936c:	mov	x23, x20
  419370:	stur	x27, [x29, #-32]
  419374:	bl	402270 <strlen@plt>
  419378:	add	x8, x0, #0x100
  41937c:	mov	x22, x0
  419380:	and	x0, x8, #0xfffffffffffffff8
  419384:	bl	4023a0 <malloc@plt>
  419388:	mov	x27, x0
  41938c:	cbz	x0, 4198d8 <wcrtomb@plt+0x17068>
  419390:	add	x21, x27, #0xf8
  419394:	mov	x0, x21
  419398:	mov	x1, x25
  41939c:	mov	x2, x22
  4193a0:	bl	402210 <memcpy@plt>
  4193a4:	strb	wzr, [x21, x22]
  4193a8:	str	x22, [x27, #96]
  4193ac:	str	x23, [x27, #80]
  4193b0:	ldur	x8, [x29, #-24]
  4193b4:	ldr	x25, [x23, #32]
  4193b8:	mov	x20, x23
  4193bc:	str	wzr, [x27, #64]
  4193c0:	cmp	x22, x8
  4193c4:	mov	w8, #0x30000               	// #196608
  4193c8:	add	x22, x22, x19
  4193cc:	stur	w8, [x27, #110]
  4193d0:	stp	xzr, xzr, [x27, #24]
  4193d4:	str	xzr, [x27, #40]
  4193d8:	str	x25, [x27, #56]
  4193dc:	b.cs	4193f0 <wcrtomb@plt+0x16b80>  // b.hs, b.nlast
  4193e0:	mov	x25, x24
  4193e4:	cmp	x22, x19
  4193e8:	b.cs	419454 <wcrtomb@plt+0x16be4>  // b.hs, b.nlast
  4193ec:	b	419800 <wcrtomb@plt+0x16f90>
  4193f0:	ldr	x8, [x20, #48]
  4193f4:	add	x9, x22, #0x101
  4193f8:	adds	x1, x9, x8
  4193fc:	b.cs	4198b0 <wcrtomb@plt+0x17040>  // b.hs, b.nlast
  419400:	mov	x0, x25
  419404:	str	x1, [x20, #48]
  419408:	bl	4024c0 <realloc@plt>
  41940c:	cbz	x0, 4198cc <wcrtomb@plt+0x1705c>
  419410:	cmp	x0, x25
  419414:	str	x0, [x20, #32]
  419418:	b.eq	41943c <wcrtomb@plt+0x16bcc>  // b.none
  41941c:	ldrb	w8, [x20, #72]
  419420:	add	x9, x0, x19
  419424:	tst	w8, #0x4
  419428:	ldr	x8, [sp, #48]
  41942c:	csel	x8, x8, x9, eq  // eq = none
  419430:	str	x8, [sp, #48]
  419434:	mov	w8, #0x1                   	// #1
  419438:	str	w8, [sp, #16]
  41943c:	ldr	x8, [x20, #48]
  419440:	mov	x25, x24
  419444:	sub	x8, x8, x19
  419448:	stur	x8, [x29, #-24]
  41944c:	cmp	x22, x19
  419450:	b.cc	419800 <wcrtomb@plt+0x16f90>  // b.lo, b.ul, b.last
  419454:	ldr	x8, [sp, #32]
  419458:	str	x8, [x27, #88]
  41945c:	ldr	x8, [x20]
  419460:	str	x22, [x27, #72]
  419464:	str	x8, [x27, #8]
  419468:	ldr	x8, [x28]
  41946c:	str	x8, [x27, #128]
  419470:	ldrb	w8, [x20, #72]
  419474:	tbnz	w8, #2, 419490 <wcrtomb@plt+0x16c20>
  419478:	str	x21, [x27, #48]
  41947c:	ldur	x22, [x29, #-16]
  419480:	ldr	x9, [x20, #64]
  419484:	ldr	w8, [x20, #72]
  419488:	cbnz	x9, 4194bc <wcrtomb@plt+0x16c4c>
  41948c:	b	4194f4 <wcrtomb@plt+0x16c84>
  419490:	ldr	x9, [x27, #96]
  419494:	ldr	x8, [x27, #56]
  419498:	ldr	x0, [sp, #48]
  41949c:	mov	x1, x21
  4194a0:	add	x2, x9, #0x1
  4194a4:	str	x8, [x27, #48]
  4194a8:	bl	402230 <memmove@plt>
  4194ac:	ldur	x22, [x29, #-16]
  4194b0:	ldr	x9, [x20, #64]
  4194b4:	ldr	w8, [x20, #72]
  4194b8:	cbz	x9, 4194f4 <wcrtomb@plt+0x16c84>
  4194bc:	tbnz	w8, #10, 4194f4 <wcrtomb@plt+0x16c84>
  4194c0:	mov	x0, x20
  4194c4:	mov	x1, x27
  4194c8:	mov	w2, wzr
  4194cc:	bl	4180c8 <wcrtomb@plt+0x15858>
  4194d0:	strh	w0, [x27, #108]
  4194d4:	str	xzr, [x27, #16]
  4194d8:	cbz	x26, 41955c <wcrtomb@plt+0x16cec>
  4194dc:	ldur	x8, [x29, #-32]
  4194e0:	str	x27, [x8, #16]
  4194e4:	mov	w8, #0x2710                	// #10000
  4194e8:	cmp	x22, x8
  4194ec:	b.eq	41956c <wcrtomb@plt+0x16cfc>  // b.none
  4194f0:	b	419578 <wcrtomb@plt+0x16d08>
  4194f4:	ldrb	w9, [x28, #18]
  4194f8:	mov	w10, #0x18                  	// #24
  4194fc:	bics	wzr, w10, w8
  419500:	mov	w10, #0xfb                  	// #251
  419504:	cset	w8, eq  // eq = none
  419508:	tst	w9, w10
  41950c:	sub	w9, w9, #0x1
  419510:	cset	w10, ne  // ne = any
  419514:	cmp	w9, #0xb
  419518:	and	w8, w8, w10
  41951c:	mov	w10, #0xb                   	// #11
  419520:	strh	w10, [x27, #108]
  419524:	b.hi	41953c <wcrtomb@plt+0x16ccc>  // b.pmore
  419528:	adrp	x10, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41952c:	sxtb	x9, w9
  419530:	add	x10, x10, #0x3c
  419534:	ldr	w9, [x10, x9, lsl #2]
  419538:	b	419540 <wcrtomb@plt+0x16cd0>
  41953c:	mov	w9, wzr
  419540:	cmp	w8, #0x0
  419544:	mov	w8, #0x1                   	// #1
  419548:	cinc	x8, x8, eq  // eq = none
  41954c:	str	w9, [x27, #136]
  419550:	str	x8, [x27, #168]
  419554:	str	xzr, [x27, #16]
  419558:	cbnz	x26, 4194dc <wcrtomb@plt+0x16c6c>
  41955c:	mov	x26, x27
  419560:	mov	w8, #0x2710                	// #10000
  419564:	cmp	x22, x8
  419568:	b.ne	419578 <wcrtomb@plt+0x16d08>  // b.any
  41956c:	ldr	x8, [sp, #24]
  419570:	ldr	x8, [x8]
  419574:	cbz	x8, 419594 <wcrtomb@plt+0x16d24>
  419578:	ldr	x8, [sp, #40]
  41957c:	add	x22, x22, #0x1
  419580:	cmp	x8, x22
  419584:	b.ls	419650 <wcrtomb@plt+0x16de0>  // b.plast
  419588:	ldr	x21, [x25, #24]
  41958c:	cbnz	x21, 419318 <wcrtomb@plt+0x16aa8>
  419590:	b	419650 <wcrtomb@plt+0x16de0>
  419594:	ldur	w1, [x29, #-4]
  419598:	mov	x0, x25
  41959c:	bl	419c30 <wcrtomb@plt+0x173c0>
  4195a0:	mov	w8, #0x6969                	// #26985
  4195a4:	cmp	x0, x8
  4195a8:	mov	w8, wzr
  4195ac:	str	wzr, [sp, #20]
  4195b0:	b.eq	419578 <wcrtomb@plt+0x16d08>  // b.none
  4195b4:	mov	w9, #0x1994                	// #6548
  4195b8:	movk	w9, #0x102, lsl #16
  4195bc:	cmp	x0, x9
  4195c0:	b.eq	419578 <wcrtomb@plt+0x16d08>  // b.none
  4195c4:	mov	w8, #0x4d42                	// #19778
  4195c8:	movk	w8, #0xff53, lsl #16
  4195cc:	cmp	x0, x8
  4195d0:	b.eq	419578 <wcrtomb@plt+0x16d08>  // b.none
  4195d4:	mov	w8, #0x1                   	// #1
  4195d8:	str	w8, [sp, #20]
  4195dc:	b	419578 <wcrtomb@plt+0x16d08>
  4195e0:	ldr	x9, [x20, #32]
  4195e4:	add	x10, x9, x8
  4195e8:	mov	w9, #0x2f                  	// #47
  4195ec:	strb	w9, [x10], #1
  4195f0:	str	x10, [sp, #48]
  4195f4:	ldr	x21, [x25, #24]
  4195f8:	add	x19, x8, #0x1
  4195fc:	str	x23, [sp, #8]
  419600:	cbnz	x21, 4192e8 <wcrtomb@plt+0x16a78>
  419604:	mov	x26, xzr
  419608:	mov	x22, xzr
  41960c:	str	wzr, [sp, #20]
  419610:	b	4196e4 <wcrtomb@plt+0x16e74>
  419614:	ldur	x8, [x29, #-40]
  419618:	ldr	w8, [x8]
  41961c:	cbz	w8, 419640 <wcrtomb@plt+0x16dd0>
  419620:	ldr	x9, [sp, #8]
  419624:	str	w8, [x25, #64]
  419628:	mov	w8, #0x4                   	// #4
  41962c:	orr	x9, x9, x22
  419630:	cmp	x9, #0x0
  419634:	mov	w9, #0x7                   	// #7
  419638:	csel	w8, w9, w8, ne  // ne = any
  41963c:	strh	w8, [x25, #108]
  419640:	ldr	x0, [x25, #24]
  419644:	cbz	x0, 419650 <wcrtomb@plt+0x16de0>
  419648:	bl	4024e0 <closedir@plt>
  41964c:	str	xzr, [x25, #24]
  419650:	ldr	w8, [sp, #16]
  419654:	tbz	w8, #0, 4196e4 <wcrtomb@plt+0x16e74>
  419658:	ldr	x9, [x20, #8]
  41965c:	ldr	x8, [x20, #32]
  419660:	cbnz	x9, 419680 <wcrtomb@plt+0x16e10>
  419664:	ldr	x9, [x26, #88]
  419668:	tbnz	x9, #63, 4196e4 <wcrtomb@plt+0x16e74>
  41966c:	mov	x9, x26
  419670:	b	4196b0 <wcrtomb@plt+0x16e40>
  419674:	str	x8, [x9, #56]
  419678:	ldr	x9, [x9, #16]
  41967c:	cbz	x9, 419664 <wcrtomb@plt+0x16df4>
  419680:	ldr	x10, [x9, #48]
  419684:	add	x11, x9, #0xf8
  419688:	cmp	x10, x11
  41968c:	b.eq	419674 <wcrtomb@plt+0x16e04>  // b.none
  419690:	ldr	x11, [x9, #56]
  419694:	sub	x10, x10, x11
  419698:	add	x10, x8, x10
  41969c:	str	x10, [x9, #48]
  4196a0:	b	419674 <wcrtomb@plt+0x16e04>
  4196a4:	ldr	x11, [x10, #88]
  4196a8:	mov	x9, x10
  4196ac:	tbnz	x11, #63, 4196e4 <wcrtomb@plt+0x16e74>
  4196b0:	ldr	x10, [x9, #48]
  4196b4:	add	x11, x9, #0xf8
  4196b8:	cmp	x10, x11
  4196bc:	b.eq	4196d0 <wcrtomb@plt+0x16e60>  // b.none
  4196c0:	ldr	x11, [x9, #56]
  4196c4:	sub	x10, x10, x11
  4196c8:	add	x10, x8, x10
  4196cc:	str	x10, [x9, #48]
  4196d0:	ldr	x10, [x9, #16]
  4196d4:	str	x8, [x9, #56]
  4196d8:	cbnz	x10, 4196a4 <wcrtomb@plt+0x16e34>
  4196dc:	ldr	x10, [x9, #8]
  4196e0:	b	4196a4 <wcrtomb@plt+0x16e34>
  4196e4:	ldrb	w8, [x20, #72]
  4196e8:	tbz	w8, #2, 419708 <wcrtomb@plt+0x16e98>
  4196ec:	ldr	x8, [x20, #48]
  4196f0:	ldr	x10, [sp, #48]
  4196f4:	cmp	x19, x8
  4196f8:	sub	x9, x10, #0x1
  4196fc:	ccmp	x22, #0x0, #0x4, ne  // ne = any
  419700:	csel	x8, x9, x10, eq  // eq = none
  419704:	strb	wzr, [x8]
  419708:	ldr	x8, [sp, #8]
  41970c:	ldp	w9, w19, [sp]
  419710:	cmp	x8, #0x0
  419714:	cset	w8, ne  // ne = any
  419718:	orr	w8, w8, w9
  41971c:	tbz	w8, #0, 419770 <wcrtomb@plt+0x16f00>
  419720:	cbnz	x22, 41977c <wcrtomb@plt+0x16f0c>
  419724:	cmp	w19, #0x3
  419728:	b.ne	419748 <wcrtomb@plt+0x16ed8>  // b.any
  41972c:	ldrh	w8, [x25, #108]
  419730:	cmp	w8, #0x4
  419734:	b.eq	419748 <wcrtomb@plt+0x16ed8>  // b.none
  419738:	cmp	w8, #0x7
  41973c:	b.eq	419748 <wcrtomb@plt+0x16ed8>  // b.none
  419740:	mov	w8, #0x6                   	// #6
  419744:	strh	w8, [x25, #108]
  419748:	cbnz	x26, 419760 <wcrtomb@plt+0x16ef0>
  41974c:	b	419918 <wcrtomb@plt+0x170a8>
  419750:	mov	x0, x26
  419754:	bl	402620 <free@plt>
  419758:	mov	x26, x19
  41975c:	cbz	x19, 419918 <wcrtomb@plt+0x170a8>
  419760:	ldp	x19, x0, [x26, #16]
  419764:	cbz	x0, 419750 <wcrtomb@plt+0x16ee0>
  419768:	bl	4024e0 <closedir@plt>
  41976c:	b	419750 <wcrtomb@plt+0x16ee0>
  419770:	cmp	w19, #0x1
  419774:	b.eq	4197d8 <wcrtomb@plt+0x16f68>  // b.none
  419778:	cbz	x22, 4197d8 <wcrtomb@plt+0x16f68>
  41977c:	ldr	w8, [sp, #20]
  419780:	tbz	w8, #0, 4197ac <wcrtomb@plt+0x16f3c>
  419784:	adrp	x8, 419000 <wcrtomb@plt+0x16790>
  419788:	add	x8, x8, #0xd5c
  41978c:	mov	x0, x20
  419790:	mov	x1, x26
  419794:	mov	x2, x22
  419798:	str	x8, [x20, #64]
  41979c:	bl	4182b0 <wcrtomb@plt+0x15a40>
  4197a0:	mov	x26, x0
  4197a4:	str	xzr, [x20, #64]
  4197a8:	b	419918 <wcrtomb@plt+0x170a8>
  4197ac:	cmp	x22, #0x2
  4197b0:	b.cc	419918 <wcrtomb@plt+0x170a8>  // b.lo, b.ul, b.last
  4197b4:	ldr	x8, [sp, #24]
  4197b8:	ldr	x8, [x8]
  4197bc:	cbz	x8, 419918 <wcrtomb@plt+0x170a8>
  4197c0:	mov	x0, x20
  4197c4:	mov	x1, x26
  4197c8:	mov	x2, x22
  4197cc:	bl	4182b0 <wcrtomb@plt+0x15a40>
  4197d0:	mov	x26, x0
  4197d4:	b	419918 <wcrtomb@plt+0x170a8>
  4197d8:	ldr	x8, [x25, #88]
  4197dc:	cbz	x8, 419860 <wcrtomb@plt+0x16ff0>
  4197e0:	ldr	x1, [x25, #8]
  4197e4:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  4197e8:	add	x3, x3, #0x36
  4197ec:	mov	w2, #0xffffffff            	// #-1
  4197f0:	mov	x0, x20
  4197f4:	bl	418d34 <wcrtomb@plt+0x164c4>
  4197f8:	cbnz	w0, 41986c <wcrtomb@plt+0x16ffc>
  4197fc:	b	419720 <wcrtomb@plt+0x16eb0>
  419800:	mov	x0, x27
  419804:	bl	402620 <free@plt>
  419808:	cbnz	x26, 419850 <wcrtomb@plt+0x16fe0>
  41980c:	ldr	x0, [x25, #24]
  419810:	bl	4024e0 <closedir@plt>
  419814:	mov	w8, #0x7                   	// #7
  419818:	str	xzr, [x25, #24]
  41981c:	strh	w8, [x25, #108]
  419820:	ldr	w8, [x20, #72]
  419824:	mov	w9, #0x24                  	// #36
  419828:	mov	x26, xzr
  41982c:	orr	w8, w8, #0x2000
  419830:	str	w8, [x20, #72]
  419834:	ldur	x8, [x29, #-40]
  419838:	str	w9, [x8]
  41983c:	b	419918 <wcrtomb@plt+0x170a8>
  419840:	mov	x0, x26
  419844:	bl	402620 <free@plt>
  419848:	mov	x26, x19
  41984c:	cbz	x19, 41980c <wcrtomb@plt+0x16f9c>
  419850:	ldp	x19, x0, [x26, #16]
  419854:	cbz	x0, 419840 <wcrtomb@plt+0x16fd0>
  419858:	bl	4024e0 <closedir@plt>
  41985c:	b	419840 <wcrtomb@plt+0x16fd0>
  419860:	mov	x0, x20
  419864:	bl	41995c <wcrtomb@plt+0x170ec>
  419868:	cbz	w0, 419720 <wcrtomb@plt+0x16eb0>
  41986c:	mov	w8, #0x7                   	// #7
  419870:	strh	w8, [x25, #108]
  419874:	ldr	w8, [x20, #72]
  419878:	orr	w8, w8, #0x2000
  41987c:	str	w8, [x20, #72]
  419880:	cbnz	x26, 419898 <wcrtomb@plt+0x17028>
  419884:	b	419918 <wcrtomb@plt+0x170a8>
  419888:	mov	x0, x26
  41988c:	bl	402620 <free@plt>
  419890:	mov	x26, x19
  419894:	cbz	x19, 419918 <wcrtomb@plt+0x170a8>
  419898:	ldp	x19, x0, [x26, #16]
  41989c:	cbz	x0, 419888 <wcrtomb@plt+0x17018>
  4198a0:	bl	4024e0 <closedir@plt>
  4198a4:	b	419888 <wcrtomb@plt+0x17018>
  4198a8:	str	wzr, [sp]
  4198ac:	b	4192b0 <wcrtomb@plt+0x16a40>
  4198b0:	mov	x0, x25
  4198b4:	bl	402620 <free@plt>
  4198b8:	ldur	x9, [x29, #-40]
  4198bc:	mov	w8, #0x24                  	// #36
  4198c0:	str	xzr, [x20, #32]
  4198c4:	str	w8, [x9]
  4198c8:	b	4198d8 <wcrtomb@plt+0x17068>
  4198cc:	ldr	x0, [x20, #32]
  4198d0:	bl	402620 <free@plt>
  4198d4:	str	xzr, [x20, #32]
  4198d8:	ldur	x8, [x29, #-40]
  4198dc:	mov	x0, x27
  4198e0:	ldr	w22, [x8]
  4198e4:	bl	402620 <free@plt>
  4198e8:	cbnz	x26, 41994c <wcrtomb@plt+0x170dc>
  4198ec:	ldr	x0, [x24, #24]
  4198f0:	bl	4024e0 <closedir@plt>
  4198f4:	mov	w8, #0x7                   	// #7
  4198f8:	str	xzr, [x24, #24]
  4198fc:	strh	w8, [x24, #108]
  419900:	ldr	w8, [x23, #72]
  419904:	mov	x26, xzr
  419908:	orr	w8, w8, #0x2000
  41990c:	str	w8, [x23, #72]
  419910:	ldur	x8, [x29, #-40]
  419914:	str	w22, [x8]
  419918:	mov	x0, x26
  41991c:	ldp	x20, x19, [sp, #176]
  419920:	ldp	x22, x21, [sp, #160]
  419924:	ldp	x24, x23, [sp, #144]
  419928:	ldp	x26, x25, [sp, #128]
  41992c:	ldp	x28, x27, [sp, #112]
  419930:	ldp	x29, x30, [sp, #96]
  419934:	add	sp, sp, #0xc0
  419938:	ret
  41993c:	mov	x0, x26
  419940:	bl	402620 <free@plt>
  419944:	mov	x26, x21
  419948:	cbz	x21, 4198ec <wcrtomb@plt+0x1707c>
  41994c:	ldp	x21, x0, [x26, #16]
  419950:	cbz	x0, 41993c <wcrtomb@plt+0x170cc>
  419954:	bl	4024e0 <closedir@plt>
  419958:	b	41993c <wcrtomb@plt+0x170cc>
  41995c:	stp	x29, x30, [sp, #-32]!
  419960:	stp	x20, x19, [sp, #16]
  419964:	ldr	w8, [x0, #72]
  419968:	mov	x19, x0
  41996c:	mov	x29, sp
  419970:	tbnz	w8, #2, 41998c <wcrtomb@plt+0x1711c>
  419974:	tbnz	w8, #9, 419994 <wcrtomb@plt+0x17124>
  419978:	ldr	w0, [x19, #40]
  41997c:	bl	4022b0 <fchdir@plt>
  419980:	cmp	w0, #0x0
  419984:	cset	w20, ne  // ne = any
  419988:	b	4199b4 <wcrtomb@plt+0x17144>
  41998c:	mov	w20, wzr
  419990:	b	4199b4 <wcrtomb@plt+0x17144>
  419994:	ldr	w1, [x19, #44]
  419998:	add	x0, x19, #0x60
  41999c:	bl	42ac88 <_obstack_memory_used@@Base+0x10af4>
  4199a0:	tbnz	w0, #31, 4199a8 <wcrtomb@plt+0x17138>
  4199a4:	bl	4024f0 <close@plt>
  4199a8:	mov	w8, #0xffffff9c            	// #-100
  4199ac:	mov	w20, wzr
  4199b0:	str	w8, [x19, #44]
  4199b4:	add	x19, x19, #0x60
  4199b8:	mov	x0, x19
  4199bc:	bl	42ac80 <_obstack_memory_used@@Base+0x10aec>
  4199c0:	tbnz	w0, #0, 4199d8 <wcrtomb@plt+0x17168>
  4199c4:	mov	x0, x19
  4199c8:	bl	42acd0 <_obstack_memory_used@@Base+0x10b3c>
  4199cc:	tbnz	w0, #31, 4199b8 <wcrtomb@plt+0x17148>
  4199d0:	bl	4024f0 <close@plt>
  4199d4:	b	4199b8 <wcrtomb@plt+0x17148>
  4199d8:	mov	w0, w20
  4199dc:	ldp	x20, x19, [sp, #16]
  4199e0:	ldp	x29, x30, [sp], #32
  4199e4:	ret
  4199e8:	stp	x29, x30, [sp, #-16]!
  4199ec:	cmp	w2, #0x5
  4199f0:	mov	x29, sp
  4199f4:	b.cc	419a10 <wcrtomb@plt+0x171a0>  // b.lo, b.ul, b.last
  4199f8:	bl	4027e0 <__errno_location@plt>
  4199fc:	mov	w8, #0x16                  	// #22
  419a00:	str	w8, [x0]
  419a04:	mov	w0, #0x1                   	// #1
  419a08:	ldp	x29, x30, [sp], #16
  419a0c:	ret
  419a10:	mov	w0, wzr
  419a14:	strh	w2, [x1, #112]
  419a18:	ldp	x29, x30, [sp], #16
  419a1c:	ret
  419a20:	stp	x29, x30, [sp, #-64]!
  419a24:	tst	w1, #0xffffefff
  419a28:	stp	x24, x23, [sp, #16]
  419a2c:	stp	x22, x21, [sp, #32]
  419a30:	stp	x20, x19, [sp, #48]
  419a34:	mov	x29, sp
  419a38:	b.eq	419a54 <wcrtomb@plt+0x171e4>  // b.none
  419a3c:	bl	4027e0 <__errno_location@plt>
  419a40:	mov	x8, x0
  419a44:	mov	w9, #0x16                  	// #22
  419a48:	mov	x0, xzr
  419a4c:	str	w9, [x8]
  419a50:	b	419a90 <wcrtomb@plt+0x17220>
  419a54:	ldr	x23, [x0]
  419a58:	mov	w21, w1
  419a5c:	mov	x19, x0
  419a60:	bl	4027e0 <__errno_location@plt>
  419a64:	str	wzr, [x0]
  419a68:	ldrb	w8, [x19, #73]
  419a6c:	tbnz	w8, #5, 419a8c <wcrtomb@plt+0x1721c>
  419a70:	ldrh	w8, [x23, #108]
  419a74:	cmp	w8, #0x1
  419a78:	b.eq	419aa4 <wcrtomb@plt+0x17234>  // b.none
  419a7c:	cmp	w8, #0x9
  419a80:	b.ne	419a8c <wcrtomb@plt+0x1721c>  // b.any
  419a84:	ldr	x0, [x23, #16]
  419a88:	b	419a90 <wcrtomb@plt+0x17220>
  419a8c:	mov	x0, xzr
  419a90:	ldp	x20, x19, [sp, #48]
  419a94:	ldp	x22, x21, [sp, #32]
  419a98:	ldp	x24, x23, [sp, #16]
  419a9c:	ldp	x29, x30, [sp], #64
  419aa0:	ret
  419aa4:	ldr	x22, [x19, #8]
  419aa8:	mov	x20, x0
  419aac:	cbnz	x22, 419ae4 <wcrtomb@plt+0x17274>
  419ab0:	cmp	w21, #0x1, lsl #12
  419ab4:	b.ne	419af4 <wcrtomb@plt+0x17284>  // b.any
  419ab8:	ldr	w8, [x19, #72]
  419abc:	mov	w21, #0x2                   	// #2
  419ac0:	orr	w8, w8, #0x1000
  419ac4:	str	w8, [x19, #72]
  419ac8:	ldr	x8, [x23, #88]
  419acc:	cbnz	x8, 419b40 <wcrtomb@plt+0x172d0>
  419ad0:	b	419b00 <wcrtomb@plt+0x17290>
  419ad4:	mov	x0, x22
  419ad8:	bl	402620 <free@plt>
  419adc:	mov	x22, x24
  419ae0:	cbz	x24, 419ab0 <wcrtomb@plt+0x17240>
  419ae4:	ldp	x24, x0, [x22, #16]
  419ae8:	cbz	x0, 419ad4 <wcrtomb@plt+0x17264>
  419aec:	bl	4024e0 <closedir@plt>
  419af0:	b	419ad4 <wcrtomb@plt+0x17264>
  419af4:	mov	w21, #0x1                   	// #1
  419af8:	ldr	x8, [x23, #88]
  419afc:	cbnz	x8, 419b40 <wcrtomb@plt+0x172d0>
  419b00:	ldr	x8, [x23, #48]
  419b04:	ldrb	w8, [x8]
  419b08:	cmp	w8, #0x2f
  419b0c:	b.eq	419b40 <wcrtomb@plt+0x172d0>  // b.none
  419b10:	ldr	w8, [x19, #72]
  419b14:	tbnz	w8, #2, 419b40 <wcrtomb@plt+0x172d0>
  419b18:	mov	w2, #0x4900                	// #18688
  419b1c:	lsr	w9, w8, #4
  419b20:	movk	w2, #0x8, lsl #16
  419b24:	bfi	w2, w9, #15, #1
  419b28:	tbnz	w8, #9, 419b54 <wcrtomb@plt+0x172e4>
  419b2c:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  419b30:	add	x0, x0, #0x37
  419b34:	mov	w1, w2
  419b38:	bl	42ab48 <_obstack_memory_used@@Base+0x109b4>
  419b3c:	b	419b64 <wcrtomb@plt+0x172f4>
  419b40:	mov	x0, x19
  419b44:	mov	w1, w21
  419b48:	bl	418f68 <wcrtomb@plt+0x166f8>
  419b4c:	str	x0, [x19, #8]
  419b50:	b	419a90 <wcrtomb@plt+0x17220>
  419b54:	ldr	w0, [x19, #44]
  419b58:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  419b5c:	add	x1, x1, #0x37
  419b60:	bl	414ee0 <wcrtomb@plt+0x12670>
  419b64:	mov	w22, w0
  419b68:	tbnz	w0, #31, 419ba8 <wcrtomb@plt+0x17338>
  419b6c:	mov	x0, x19
  419b70:	mov	w1, w21
  419b74:	bl	418f68 <wcrtomb@plt+0x166f8>
  419b78:	ldrb	w8, [x19, #73]
  419b7c:	str	x0, [x19, #8]
  419b80:	tbnz	w8, #1, 419bb4 <wcrtomb@plt+0x17344>
  419b84:	mov	w0, w22
  419b88:	bl	4022b0 <fchdir@plt>
  419b8c:	cbz	w0, 419be0 <wcrtomb@plt+0x17370>
  419b90:	ldr	w19, [x20]
  419b94:	mov	w0, w22
  419b98:	bl	4024f0 <close@plt>
  419b9c:	mov	x0, xzr
  419ba0:	str	w19, [x20]
  419ba4:	b	419a90 <wcrtomb@plt+0x17220>
  419ba8:	mov	x0, xzr
  419bac:	str	xzr, [x19, #8]
  419bb0:	b	419a90 <wcrtomb@plt+0x17220>
  419bb4:	ldr	w1, [x19, #44]
  419bb8:	cmp	w1, w22
  419bbc:	b.ne	419bc8 <wcrtomb@plt+0x17358>  // b.any
  419bc0:	cmn	w1, #0x64
  419bc4:	b.ne	419bf0 <wcrtomb@plt+0x17380>  // b.any
  419bc8:	add	x0, x19, #0x60
  419bcc:	bl	42ac88 <_obstack_memory_used@@Base+0x10af4>
  419bd0:	tbnz	w0, #31, 419bd8 <wcrtomb@plt+0x17368>
  419bd4:	bl	4024f0 <close@plt>
  419bd8:	str	w22, [x19, #44]
  419bdc:	b	419be8 <wcrtomb@plt+0x17378>
  419be0:	mov	w0, w22
  419be4:	bl	4024f0 <close@plt>
  419be8:	ldr	x0, [x19, #8]
  419bec:	b	419a90 <wcrtomb@plt+0x17220>
  419bf0:	bl	402560 <abort@plt>
  419bf4:	ldr	x8, [x0, #8]
  419bf8:	udiv	x9, x8, x1
  419bfc:	msub	x0, x9, x1, x8
  419c00:	ret
  419c04:	ldr	x8, [x0, #8]
  419c08:	ldr	x9, [x1, #8]
  419c0c:	cmp	x8, x9
  419c10:	b.ne	419c28 <wcrtomb@plt+0x173b8>  // b.any
  419c14:	ldr	x8, [x0]
  419c18:	ldr	x9, [x1]
  419c1c:	cmp	x8, x9
  419c20:	cset	w0, eq  // eq = none
  419c24:	ret
  419c28:	mov	w0, wzr
  419c2c:	ret
  419c30:	sub	sp, sp, #0xb0
  419c34:	stp	x29, x30, [sp, #128]
  419c38:	stp	x22, x21, [sp, #144]
  419c3c:	stp	x20, x19, [sp, #160]
  419c40:	ldr	x22, [x0, #80]
  419c44:	add	x29, sp, #0x80
  419c48:	ldrb	w8, [x22, #73]
  419c4c:	tbnz	w8, #1, 419c58 <wcrtomb@plt+0x173e8>
  419c50:	mov	x0, xzr
  419c54:	b	419cb4 <wcrtomb@plt+0x17444>
  419c58:	ldr	x20, [x22, #80]
  419c5c:	mov	x19, x0
  419c60:	mov	w21, w1
  419c64:	cbnz	x20, 419c98 <wcrtomb@plt+0x17428>
  419c68:	adrp	x2, 419000 <wcrtomb@plt+0x16790>
  419c6c:	adrp	x3, 419000 <wcrtomb@plt+0x16790>
  419c70:	adrp	x4, 402000 <mbrtowc@plt-0x200>
  419c74:	add	x2, x2, #0xd38
  419c78:	add	x3, x3, #0xd48
  419c7c:	add	x4, x4, #0x620
  419c80:	mov	w0, #0xd                   	// #13
  419c84:	mov	x1, xzr
  419c88:	bl	413ca0 <wcrtomb@plt+0x11430>
  419c8c:	mov	x20, x0
  419c90:	str	x0, [x22, #80]
  419c94:	cbz	x0, 419cd4 <wcrtomb@plt+0x17464>
  419c98:	ldr	x8, [x19, #120]
  419c9c:	add	x1, sp, #0x8
  419ca0:	mov	x0, x20
  419ca4:	str	x8, [sp, #8]
  419ca8:	bl	413998 <wcrtomb@plt+0x11128>
  419cac:	cbz	x0, 419cc8 <wcrtomb@plt+0x17458>
  419cb0:	ldr	x0, [x0, #8]
  419cb4:	ldp	x20, x19, [sp, #160]
  419cb8:	ldp	x22, x21, [sp, #144]
  419cbc:	ldp	x29, x30, [sp, #128]
  419cc0:	add	sp, sp, #0xb0
  419cc4:	ret
  419cc8:	mov	w22, #0x1                   	// #1
  419ccc:	tbz	w21, #31, 419cdc <wcrtomb@plt+0x1746c>
  419cd0:	b	419c50 <wcrtomb@plt+0x173e0>
  419cd4:	mov	w22, wzr
  419cd8:	tbnz	w21, #31, 419c50 <wcrtomb@plt+0x173e0>
  419cdc:	add	x1, sp, #0x8
  419ce0:	mov	w0, w21
  419ce4:	bl	402460 <fstatfs@plt>
  419ce8:	cbnz	w0, 419c50 <wcrtomb@plt+0x173e0>
  419cec:	cbz	w22, 419d30 <wcrtomb@plt+0x174c0>
  419cf0:	mov	w0, #0x10                  	// #16
  419cf4:	bl	4023a0 <malloc@plt>
  419cf8:	cbz	x0, 419d30 <wcrtomb@plt+0x174c0>
  419cfc:	ldr	x8, [x19, #120]
  419d00:	ldr	x9, [sp, #8]
  419d04:	mov	x21, x0
  419d08:	mov	x1, x21
  419d0c:	stp	x8, x9, [x0]
  419d10:	mov	x0, x20
  419d14:	bl	41473c <wcrtomb@plt+0x11ecc>
  419d18:	cbz	x0, 419d28 <wcrtomb@plt+0x174b8>
  419d1c:	cmp	x0, x21
  419d20:	b.eq	419d30 <wcrtomb@plt+0x174c0>  // b.none
  419d24:	bl	402560 <abort@plt>
  419d28:	mov	x0, x21
  419d2c:	bl	402620 <free@plt>
  419d30:	ldr	x0, [sp, #8]
  419d34:	b	419cb4 <wcrtomb@plt+0x17444>
  419d38:	ldr	x8, [x0]
  419d3c:	udiv	x9, x8, x1
  419d40:	msub	x0, x9, x1, x8
  419d44:	ret
  419d48:	ldr	x8, [x0]
  419d4c:	ldr	x9, [x1]
  419d50:	cmp	x8, x9
  419d54:	cset	w0, eq  // eq = none
  419d58:	ret
  419d5c:	ldr	x8, [x0]
  419d60:	ldr	x9, [x1]
  419d64:	ldr	x8, [x8, #128]
  419d68:	ldr	x9, [x9, #128]
  419d6c:	cmp	x9, x8
  419d70:	cset	w10, cc  // cc = lo, ul, last
  419d74:	cmp	x8, x9
  419d78:	csinv	w0, w10, wzr, cs  // cs = hs, nlast
  419d7c:	ret
  419d80:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  419d84:	mov	x8, x1
  419d88:	add	x9, x9, #0x878
  419d8c:	cmp	x2, #0x0
  419d90:	csel	x3, x9, x2, eq  // eq = none
  419d94:	mov	x1, x0
  419d98:	mov	x0, xzr
  419d9c:	mov	x2, x8
  419da0:	b	419da4 <wcrtomb@plt+0x17534>
  419da4:	sub	sp, sp, #0x40
  419da8:	stp	x29, x30, [sp, #16]
  419dac:	add	x29, sp, #0x10
  419db0:	cmp	x0, #0x0
  419db4:	sub	x8, x29, #0x4
  419db8:	stp	x20, x19, [sp, #48]
  419dbc:	csel	x20, x8, x0, eq  // eq = none
  419dc0:	mov	x0, x20
  419dc4:	stp	x22, x21, [sp, #32]
  419dc8:	mov	x22, x2
  419dcc:	mov	x19, x1
  419dd0:	bl	402200 <mbrtowc@plt>
  419dd4:	mov	x21, x0
  419dd8:	cbz	x22, 419dfc <wcrtomb@plt+0x1758c>
  419ddc:	cmn	x21, #0x2
  419de0:	b.cc	419dfc <wcrtomb@plt+0x1758c>  // b.lo, b.ul, b.last
  419de4:	mov	w0, wzr
  419de8:	bl	42abec <_obstack_memory_used@@Base+0x10a58>
  419dec:	tbnz	w0, #0, 419dfc <wcrtomb@plt+0x1758c>
  419df0:	ldrb	w8, [x19]
  419df4:	mov	w21, #0x1                   	// #1
  419df8:	str	w8, [x20]
  419dfc:	mov	x0, x21
  419e00:	ldp	x20, x19, [sp, #48]
  419e04:	ldp	x22, x21, [sp, #32]
  419e08:	ldp	x29, x30, [sp, #16]
  419e0c:	add	sp, sp, #0x40
  419e10:	ret

0000000000419e14 <_obstack_begin@@Base>:
  419e14:	stp	x29, x30, [sp, #-48]!
  419e18:	stp	x20, x19, [sp, #32]
  419e1c:	ldrb	w8, [x0, #80]
  419e20:	cmp	x2, #0x0
  419e24:	mov	w9, #0x10                  	// #16
  419e28:	csel	x20, x9, x2, eq  // eq = none
  419e2c:	mov	w9, #0xfe0                 	// #4064
  419e30:	cmp	x1, #0x0
  419e34:	str	x21, [sp, #16]
  419e38:	mov	x19, x0
  419e3c:	str	x4, [x0, #64]
  419e40:	csel	x0, x9, x1, eq  // eq = none
  419e44:	and	w8, w8, #0xfe
  419e48:	sub	x21, x20, #0x1
  419e4c:	mov	x29, sp
  419e50:	strb	w8, [x19, #80]
  419e54:	str	x0, [x19]
  419e58:	stp	x21, x3, [x19, #48]
  419e5c:	blr	x3
  419e60:	str	x0, [x19, #8]
  419e64:	cbz	x0, 419eb0 <_obstack_begin@@Base+0x9c>
  419e68:	ldr	x10, [x19]
  419e6c:	add	x8, x0, x21
  419e70:	neg	x9, x20
  419e74:	add	x8, x8, #0x10
  419e78:	and	x8, x8, x9
  419e7c:	stp	x8, x8, [x19, #16]
  419e80:	add	x8, x0, x10
  419e84:	str	x8, [x0]
  419e88:	str	x8, [x19, #32]
  419e8c:	str	xzr, [x0, #8]
  419e90:	ldrb	w8, [x19, #80]
  419e94:	ldr	x21, [sp, #16]
  419e98:	mov	w0, #0x1                   	// #1
  419e9c:	and	w8, w8, #0xfffffff9
  419ea0:	strb	w8, [x19, #80]
  419ea4:	ldp	x20, x19, [sp, #32]
  419ea8:	ldp	x29, x30, [sp], #48
  419eac:	ret
  419eb0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  419eb4:	ldr	x8, [x8, #1048]
  419eb8:	blr	x8

0000000000419ebc <_obstack_begin_1@@Base>:
  419ebc:	stp	x29, x30, [sp, #-48]!
  419ec0:	stp	x20, x19, [sp, #32]
  419ec4:	ldrb	w8, [x0, #80]
  419ec8:	cmp	x2, #0x0
  419ecc:	mov	w9, #0x10                  	// #16
  419ed0:	csel	x20, x9, x2, eq  // eq = none
  419ed4:	mov	w9, #0xfe0                 	// #4064
  419ed8:	cmp	x1, #0x0
  419edc:	str	x21, [sp, #16]
  419ee0:	csel	x1, x9, x1, eq  // eq = none
  419ee4:	orr	w8, w8, #0x1
  419ee8:	sub	x21, x20, #0x1
  419eec:	mov	x19, x0
  419ef0:	stp	x4, x5, [x0, #64]
  419ef4:	strb	w8, [x0, #80]
  419ef8:	str	x1, [x0]
  419efc:	stp	x21, x3, [x0, #48]
  419f00:	mov	x0, x5
  419f04:	mov	x29, sp
  419f08:	blr	x3
  419f0c:	str	x0, [x19, #8]
  419f10:	cbz	x0, 419f5c <_obstack_begin_1@@Base+0xa0>
  419f14:	ldr	x10, [x19]
  419f18:	add	x8, x0, x21
  419f1c:	neg	x9, x20
  419f20:	add	x8, x8, #0x10
  419f24:	and	x8, x8, x9
  419f28:	stp	x8, x8, [x19, #16]
  419f2c:	add	x8, x0, x10
  419f30:	str	x8, [x0]
  419f34:	str	x8, [x19, #32]
  419f38:	str	xzr, [x0, #8]
  419f3c:	ldrb	w8, [x19, #80]
  419f40:	ldr	x21, [sp, #16]
  419f44:	mov	w0, #0x1                   	// #1
  419f48:	and	w8, w8, #0xfffffff9
  419f4c:	strb	w8, [x19, #80]
  419f50:	ldp	x20, x19, [sp, #32]
  419f54:	ldp	x29, x30, [sp], #48
  419f58:	ret
  419f5c:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  419f60:	ldr	x8, [x8, #1048]
  419f64:	blr	x8

0000000000419f68 <_obstack_newchunk@@Base>:
  419f68:	stp	x29, x30, [sp, #-80]!
  419f6c:	str	x25, [sp, #16]
  419f70:	stp	x24, x23, [sp, #32]
  419f74:	stp	x22, x21, [sp, #48]
  419f78:	stp	x20, x19, [sp, #64]
  419f7c:	ldp	x9, x8, [x0, #16]
  419f80:	ldr	x10, [x0, #48]
  419f84:	ldr	x11, [x0]
  419f88:	mov	x29, sp
  419f8c:	sub	x20, x8, x9
  419f90:	adds	x8, x20, x1
  419f94:	lsr	x9, x20, #3
  419f98:	cset	w12, cs  // cs = hs, nlast
  419f9c:	adds	x10, x8, x10
  419fa0:	add	x9, x9, #0x64
  419fa4:	cset	w8, cs  // cs = hs, nlast
  419fa8:	adds	x9, x9, x10
  419fac:	csel	x9, x10, x9, cs  // cs = hs, nlast
  419fb0:	cmp	x9, x11
  419fb4:	csel	x23, x11, x9, cc  // cc = lo, ul, last
  419fb8:	tbnz	w12, #0, 41a0a8 <_obstack_newchunk@@Base+0x140>
  419fbc:	tbnz	w8, #0, 41a0a8 <_obstack_newchunk@@Base+0x140>
  419fc0:	ldrb	w8, [x0, #80]
  419fc4:	ldr	x21, [x0, #8]
  419fc8:	mov	x19, x0
  419fcc:	tbnz	w8, #0, 419fe0 <_obstack_newchunk@@Base+0x78>
  419fd0:	ldr	x8, [x19, #56]
  419fd4:	mov	x0, x23
  419fd8:	blr	x8
  419fdc:	b	419ff0 <_obstack_newchunk@@Base+0x88>
  419fe0:	ldr	x8, [x19, #56]
  419fe4:	ldr	x0, [x19, #72]
  419fe8:	mov	x1, x23
  419fec:	blr	x8
  419ff0:	mov	x22, x0
  419ff4:	cbz	x0, 41a0a8 <_obstack_newchunk@@Base+0x140>
  419ff8:	add	x8, x22, x23
  419ffc:	str	x22, [x19, #8]
  41a000:	str	x21, [x22, #8]
  41a004:	str	x8, [x19, #32]
  41a008:	str	x8, [x22]
  41a00c:	ldr	x25, [x19, #48]
  41a010:	ldr	x24, [x19, #16]
  41a014:	mov	x2, x20
  41a018:	add	x8, x22, x25
  41a01c:	add	x8, x8, #0x10
  41a020:	bic	x23, x8, x25
  41a024:	mov	x0, x23
  41a028:	mov	x1, x24
  41a02c:	bl	402210 <memcpy@plt>
  41a030:	ldrb	w8, [x19, #80]
  41a034:	tbnz	w8, #1, 41a07c <_obstack_newchunk@@Base+0x114>
  41a038:	add	x9, x21, x25
  41a03c:	mvn	x8, x25
  41a040:	add	x9, x9, #0x10
  41a044:	and	x8, x9, x8
  41a048:	cmp	x24, x8
  41a04c:	b.ne	41a07c <_obstack_newchunk@@Base+0x114>  // b.any
  41a050:	ldr	x8, [x21, #8]
  41a054:	str	x8, [x22, #8]
  41a058:	ldrb	w8, [x19, #80]
  41a05c:	tbnz	w8, #0, 41a070 <_obstack_newchunk@@Base+0x108>
  41a060:	ldr	x8, [x19, #64]
  41a064:	mov	x0, x21
  41a068:	blr	x8
  41a06c:	b	41a07c <_obstack_newchunk@@Base+0x114>
  41a070:	ldp	x8, x0, [x19, #64]
  41a074:	mov	x1, x21
  41a078:	blr	x8
  41a07c:	ldrb	w8, [x19, #80]
  41a080:	add	x9, x23, x20
  41a084:	stp	x23, x9, [x19, #16]
  41a088:	ldr	x25, [sp, #16]
  41a08c:	and	w8, w8, #0xfffffffd
  41a090:	strb	w8, [x19, #80]
  41a094:	ldp	x20, x19, [sp, #64]
  41a098:	ldp	x22, x21, [sp, #48]
  41a09c:	ldp	x24, x23, [sp, #32]
  41a0a0:	ldp	x29, x30, [sp], #80
  41a0a4:	ret
  41a0a8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  41a0ac:	ldr	x8, [x8, #1048]
  41a0b0:	blr	x8

000000000041a0b4 <_obstack_allocated_p@@Base>:
  41a0b4:	ldr	x8, [x0, #8]
  41a0b8:	cbnz	x8, 41a0cc <_obstack_allocated_p@@Base+0x18>
  41a0bc:	mov	w0, wzr
  41a0c0:	ret
  41a0c4:	ldr	x8, [x8, #8]
  41a0c8:	cbz	x8, 41a0bc <_obstack_allocated_p@@Base+0x8>
  41a0cc:	cmp	x8, x1
  41a0d0:	b.cs	41a0c4 <_obstack_allocated_p@@Base+0x10>  // b.hs, b.nlast
  41a0d4:	ldr	x9, [x8]
  41a0d8:	cmp	x9, x1
  41a0dc:	b.cc	41a0c4 <_obstack_allocated_p@@Base+0x10>  // b.lo, b.ul, b.last
  41a0e0:	mov	w0, #0x1                   	// #1
  41a0e4:	ret

000000000041a0e8 <_obstack_free@@Base>:
  41a0e8:	stp	x29, x30, [sp, #-48]!
  41a0ec:	stp	x20, x19, [sp, #32]
  41a0f0:	ldr	x8, [x0, #8]
  41a0f4:	mov	x20, x1
  41a0f8:	str	x21, [sp, #16]
  41a0fc:	mov	x29, sp
  41a100:	cbz	x8, 41a15c <_obstack_free@@Base+0x74>
  41a104:	mov	x19, x0
  41a108:	b	41a12c <_obstack_free@@Base+0x44>
  41a10c:	ldr	x9, [x19, #64]
  41a110:	mov	x0, x8
  41a114:	blr	x9
  41a118:	ldrb	w8, [x19, #80]
  41a11c:	orr	w8, w8, #0x2
  41a120:	strb	w8, [x19, #80]
  41a124:	mov	x8, x21
  41a128:	cbz	x21, 41a15c <_obstack_free@@Base+0x74>
  41a12c:	cmp	x8, x20
  41a130:	b.cs	41a140 <_obstack_free@@Base+0x58>  // b.hs, b.nlast
  41a134:	ldr	x9, [x8]
  41a138:	cmp	x9, x20
  41a13c:	b.cs	41a170 <_obstack_free@@Base+0x88>  // b.hs, b.nlast
  41a140:	ldrb	w9, [x19, #80]
  41a144:	ldr	x21, [x8, #8]
  41a148:	tbz	w9, #0, 41a10c <_obstack_free@@Base+0x24>
  41a14c:	ldp	x9, x0, [x19, #64]
  41a150:	mov	x1, x8
  41a154:	blr	x9
  41a158:	b	41a118 <_obstack_free@@Base+0x30>
  41a15c:	cbnz	x20, 41a190 <_obstack_free@@Base+0xa8>
  41a160:	ldp	x20, x19, [sp, #32]
  41a164:	ldr	x21, [sp, #16]
  41a168:	ldp	x29, x30, [sp], #48
  41a16c:	ret
  41a170:	stp	x20, x20, [x19, #16]
  41a174:	ldr	x9, [x8]
  41a178:	str	x8, [x19, #8]
  41a17c:	str	x9, [x19, #32]
  41a180:	ldp	x20, x19, [sp, #32]
  41a184:	ldr	x21, [sp, #16]
  41a188:	ldp	x29, x30, [sp], #48
  41a18c:	ret
  41a190:	bl	402560 <abort@plt>

000000000041a194 <_obstack_memory_used@@Base>:
  41a194:	ldr	x8, [x0, #8]
  41a198:	cbz	x8, 41a1b4 <_obstack_memory_used@@Base+0x20>
  41a19c:	mov	x0, xzr
  41a1a0:	sub	x10, x0, x8
  41a1a4:	ldp	x9, x8, [x8]
  41a1a8:	add	x0, x10, x9
  41a1ac:	cbnz	x8, 41a1a0 <_obstack_memory_used@@Base+0xc>
  41a1b0:	ret
  41a1b4:	mov	x0, xzr
  41a1b8:	ret
  41a1bc:	stp	x29, x30, [sp, #-32]!
  41a1c0:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  41a1c4:	str	x19, [sp, #16]
  41a1c8:	ldr	x19, [x8, #1056]
  41a1cc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41a1d0:	add	x1, x1, #0xf65
  41a1d4:	mov	w2, #0x5                   	// #5
  41a1d8:	mov	x0, xzr
  41a1dc:	mov	x29, sp
  41a1e0:	bl	402740 <dcgettext@plt>
  41a1e4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41a1e8:	mov	x2, x0
  41a1ec:	add	x1, x1, #0xc3f
  41a1f0:	mov	x0, x19
  41a1f4:	bl	402820 <fprintf@plt>
  41a1f8:	adrp	x8, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  41a1fc:	ldr	w0, [x8, #952]
  41a200:	bl	402290 <exit@plt>
  41a204:	stp	x29, x30, [sp, #-16]!
  41a208:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  41a20c:	ldr	x3, [x9, #3472]
  41a210:	ldrb	w9, [x2, #56]
  41a214:	mov	x8, x1
  41a218:	mov	x1, x0
  41a21c:	ubfx	x10, x3, #21, #11
  41a220:	and	w10, w10, #0x10
  41a224:	and	w9, w9, #0xffffffef
  41a228:	orr	w9, w9, w10
  41a22c:	orr	w9, w9, #0x80
  41a230:	strb	w9, [x2, #56]
  41a234:	mov	x0, x2
  41a238:	mov	x2, x8
  41a23c:	mov	x29, sp
  41a240:	bl	41a27c <_obstack_memory_used@@Base+0xe8>
  41a244:	cbz	w0, 41a270 <_obstack_memory_used@@Base+0xdc>
  41a248:	adrp	x8, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41a24c:	add	x8, x8, #0x368
  41a250:	ldr	x8, [x8, w0, sxtw #3]
  41a254:	adrp	x9, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41a258:	add	x9, x9, #0x1e5
  41a25c:	mov	w2, #0x5                   	// #5
  41a260:	add	x1, x9, x8
  41a264:	mov	x0, xzr
  41a268:	ldp	x29, x30, [sp], #16
  41a26c:	b	402740 <dcgettext@plt>
  41a270:	mov	x0, xzr
  41a274:	ldp	x29, x30, [sp], #16
  41a278:	ret
  41a27c:	sub	sp, sp, #0x130
  41a280:	stp	x29, x30, [sp, #208]
  41a284:	add	x29, sp, #0xd0
  41a288:	stp	x28, x27, [sp, #224]
  41a28c:	stp	x26, x25, [sp, #240]
  41a290:	stp	x24, x23, [sp, #256]
  41a294:	stp	x22, x21, [sp, #272]
  41a298:	stp	x20, x19, [sp, #288]
  41a29c:	stur	wzr, [x29, #-44]
  41a2a0:	ldrb	w8, [x0, #56]
  41a2a4:	ldp	x20, x9, [x0]
  41a2a8:	mov	w10, #0x90                  	// #144
  41a2ac:	mov	x21, x3
  41a2b0:	mov	x22, x2
  41a2b4:	mov	x23, x1
  41a2b8:	mov	x19, x0
  41a2bc:	and	w8, w8, w10
  41a2c0:	cmp	x9, #0xe7
  41a2c4:	stp	xzr, x3, [x0, #16]
  41a2c8:	str	xzr, [x0, #48]
  41a2cc:	strb	w8, [x0, #56]
  41a2d0:	b.ls	41a9ec <_obstack_memory_used@@Base+0x858>  // b.plast
  41a2d4:	mov	w8, #0xe8                  	// #232
  41a2d8:	str	x8, [x19, #16]
  41a2dc:	mov	x8, #0x5555555555555555    	// #6148914691236517205
  41a2e0:	movk	x8, #0x5554
  41a2e4:	movk	x8, #0x555, lsl #48
  41a2e8:	movi	v0.2d, #0x0
  41a2ec:	cmp	x22, x8
  41a2f0:	mov	w8, #0xf                   	// #15
  41a2f4:	str	xzr, [x20, #224]
  41a2f8:	stp	q0, q0, [x20, #192]
  41a2fc:	stp	q0, q0, [x20, #160]
  41a300:	stp	q0, q0, [x20, #128]
  41a304:	stp	q0, q0, [x20, #96]
  41a308:	stp	q0, q0, [x20, #64]
  41a30c:	stp	q0, q0, [x20, #32]
  41a310:	stp	q0, q0, [x20]
  41a314:	str	w8, [x20, #128]
  41a318:	b.hi	41a514 <_obstack_memory_used@@Base+0x380>  // b.pmore
  41a31c:	add	x24, x22, #0x1
  41a320:	lsl	x0, x24, #4
  41a324:	str	x24, [x20, #8]
  41a328:	bl	4023a0 <malloc@plt>
  41a32c:	mov	w8, #0x1                   	// #1
  41a330:	str	x0, [x20]
  41a334:	mov	x25, x8
  41a338:	cmp	x8, x22
  41a33c:	lsl	x8, x8, #1
  41a340:	b.ls	41a334 <_obstack_memory_used@@Base+0x1a0>  // b.plast
  41a344:	mov	w0, #0x18                  	// #24
  41a348:	mov	x1, x25
  41a34c:	bl	402480 <calloc@plt>
  41a350:	sub	x8, x25, #0x1
  41a354:	str	x0, [x20, #64]
  41a358:	str	x8, [x20, #136]
  41a35c:	bl	402630 <__ctype_get_mb_cur_max@plt>
  41a360:	str	w0, [x20, #180]
  41a364:	mov	w0, #0xe                   	// #14
  41a368:	bl	402360 <nl_langinfo@plt>
  41a36c:	ldrb	w8, [x0]
  41a370:	orr	w8, w8, #0x20
  41a374:	cmp	w8, #0x75
  41a378:	b.ne	41a3c4 <_obstack_memory_used@@Base+0x230>  // b.any
  41a37c:	ldrb	w8, [x0, #1]
  41a380:	orr	w8, w8, #0x20
  41a384:	cmp	w8, #0x74
  41a388:	b.ne	41a3c4 <_obstack_memory_used@@Base+0x230>  // b.any
  41a38c:	ldrb	w8, [x0, #2]
  41a390:	orr	w8, w8, #0x20
  41a394:	cmp	w8, #0x66
  41a398:	b.ne	41a3c4 <_obstack_memory_used@@Base+0x230>  // b.any
  41a39c:	ldrb	w8, [x0, #3]!
  41a3a0:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41a3a4:	add	x1, x1, #0x428
  41a3a8:	cmp	w8, #0x2d
  41a3ac:	cinc	x0, x0, eq  // eq = none
  41a3b0:	bl	402600 <strcmp@plt>
  41a3b4:	cbnz	w0, 41a3c4 <_obstack_memory_used@@Base+0x230>
  41a3b8:	ldrb	w8, [x20, #176]
  41a3bc:	orr	w8, w8, #0x4
  41a3c0:	strb	w8, [x20, #176]
  41a3c4:	ldrb	w8, [x20, #176]
  41a3c8:	ldr	w9, [x20, #180]
  41a3cc:	and	w10, w8, #0xfffffff7
  41a3d0:	cmp	w9, #0x2
  41a3d4:	strb	w10, [x20, #176]
  41a3d8:	b.lt	41a454 <_obstack_memory_used@@Base+0x2c0>  // b.tstop
  41a3dc:	tbnz	w8, #2, 41a448 <_obstack_memory_used@@Base+0x2b4>
  41a3e0:	mov	w0, #0x20                  	// #32
  41a3e4:	mov	w1, #0x1                   	// #1
  41a3e8:	bl	402480 <calloc@plt>
  41a3ec:	str	x0, [x20, #120]
  41a3f0:	cbz	x0, 41a514 <_obstack_memory_used@@Base+0x380>
  41a3f4:	mov	x25, xzr
  41a3f8:	mov	w26, #0x1                   	// #1
  41a3fc:	b	41a40c <_obstack_memory_used@@Base+0x278>
  41a400:	add	x25, x25, #0x1
  41a404:	cmp	x25, #0x40
  41a408:	b.eq	41a52c <_obstack_memory_used@@Base+0x398>  // b.none
  41a40c:	mov	w0, w25
  41a410:	bl	402550 <btowc@plt>
  41a414:	cmn	w0, #0x1
  41a418:	b.eq	41a430 <_obstack_memory_used@@Base+0x29c>  // b.none
  41a41c:	ldr	x8, [x20, #120]
  41a420:	lsl	x10, x26, x25
  41a424:	ldr	x9, [x8]
  41a428:	orr	x9, x9, x10
  41a42c:	str	x9, [x8]
  41a430:	cmp	w25, w0
  41a434:	b.eq	41a400 <_obstack_memory_used@@Base+0x26c>  // b.none
  41a438:	ldrb	w8, [x20, #176]
  41a43c:	orr	w8, w8, #0x8
  41a440:	strb	w8, [x20, #176]
  41a444:	b	41a400 <_obstack_memory_used@@Base+0x26c>
  41a448:	adrp	x8, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41a44c:	add	x8, x8, #0x3f0
  41a450:	str	x8, [x20, #120]
  41a454:	ldr	x8, [x20]
  41a458:	cbz	x8, 41a514 <_obstack_memory_used@@Base+0x380>
  41a45c:	ldr	x8, [x20, #64]
  41a460:	cbz	x8, 41a514 <_obstack_memory_used@@Base+0x380>
  41a464:	stur	wzr, [x29, #-44]
  41a468:	ldr	x26, [x19, #40]
  41a46c:	and	x25, x21, #0x400000
  41a470:	movi	v0.2d, #0x0
  41a474:	ubfx	x8, x21, #22, #1
  41a478:	stp	q0, q0, [sp, #128]
  41a47c:	strb	w8, [sp, #144]
  41a480:	orr	x8, x25, x26
  41a484:	cmp	x8, #0x0
  41a488:	cset	w27, ne  // ne = any
  41a48c:	stp	q0, q0, [sp, #80]
  41a490:	stur	q0, [sp, #112]
  41a494:	stp	q0, q0, [sp, #48]
  41a498:	stp	q0, q0, [sp, #16]
  41a49c:	str	x23, [sp, #8]
  41a4a0:	stp	x22, x22, [sp, #88]
  41a4a4:	str	x26, [sp, #128]
  41a4a8:	strb	w27, [sp, #147]
  41a4ac:	ldr	w8, [x20, #180]
  41a4b0:	cmp	x22, #0x1
  41a4b4:	str	w8, [sp, #152]
  41a4b8:	ldrb	w9, [x20, #176]
  41a4bc:	stp	x22, x22, [sp, #104]
  41a4c0:	ubfx	w10, w9, #2, #1
  41a4c4:	ubfx	w9, w9, #3, #1
  41a4c8:	strb	w10, [sp, #145]
  41a4cc:	strb	w9, [sp, #146]
  41a4d0:	b.lt	41a644 <_obstack_memory_used@@Base+0x4b0>  // b.tstop
  41a4d4:	cmp	w8, #0x2
  41a4d8:	b.lt	41a4f8 <_obstack_memory_used@@Base+0x364>  // b.tstop
  41a4dc:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  41a4e0:	cmp	x22, x8
  41a4e4:	b.hi	41aae0 <_obstack_memory_used@@Base+0x94c>  // b.pmore
  41a4e8:	lsl	x0, x24, #2
  41a4ec:	bl	4023a0 <malloc@plt>
  41a4f0:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a4f4:	str	x0, [sp, #24]
  41a4f8:	cbz	w27, 41a650 <_obstack_memory_used@@Base+0x4bc>
  41a4fc:	mov	x0, x24
  41a500:	bl	4023a0 <malloc@plt>
  41a504:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a508:	mov	w27, #0x1                   	// #1
  41a50c:	str	x0, [sp, #16]
  41a510:	b	41a654 <_obstack_memory_used@@Base+0x4c0>
  41a514:	mov	w21, #0xc                   	// #12
  41a518:	mov	x0, x20
  41a51c:	stur	w21, [x29, #-44]
  41a520:	bl	41bf84 <_obstack_memory_used@@Base+0x1df0>
  41a524:	stp	xzr, xzr, [x19]
  41a528:	b	41b470 <_obstack_memory_used@@Base+0x12dc>
  41a52c:	mov	x26, xzr
  41a530:	mov	w27, #0x1                   	// #1
  41a534:	b	41a544 <_obstack_memory_used@@Base+0x3b0>
  41a538:	add	x26, x26, #0x1
  41a53c:	cmp	x26, #0x40
  41a540:	b.eq	41a584 <_obstack_memory_used@@Base+0x3f0>  // b.none
  41a544:	add	x25, x26, #0x40
  41a548:	mov	w0, w25
  41a54c:	bl	402550 <btowc@plt>
  41a550:	cmn	w0, #0x1
  41a554:	b.eq	41a56c <_obstack_memory_used@@Base+0x3d8>  // b.none
  41a558:	ldr	x8, [x20, #120]
  41a55c:	lsl	x10, x27, x26
  41a560:	ldr	x9, [x8, #8]
  41a564:	orr	x9, x9, x10
  41a568:	str	x9, [x8, #8]
  41a56c:	cmp	w25, w0
  41a570:	b.eq	41a538 <_obstack_memory_used@@Base+0x3a4>  // b.none
  41a574:	ldrb	w8, [x20, #176]
  41a578:	orr	w8, w8, #0x8
  41a57c:	strb	w8, [x20, #176]
  41a580:	b	41a538 <_obstack_memory_used@@Base+0x3a4>
  41a584:	mov	x26, xzr
  41a588:	mov	w27, #0x1                   	// #1
  41a58c:	b	41a59c <_obstack_memory_used@@Base+0x408>
  41a590:	add	x26, x26, #0x1
  41a594:	cmp	x26, #0x40
  41a598:	b.eq	41a5e4 <_obstack_memory_used@@Base+0x450>  // b.none
  41a59c:	add	x25, x26, #0x80
  41a5a0:	mov	w0, w25
  41a5a4:	bl	402550 <btowc@plt>
  41a5a8:	cmn	w0, #0x1
  41a5ac:	b.eq	41a5c4 <_obstack_memory_used@@Base+0x430>  // b.none
  41a5b0:	ldr	x8, [x20, #120]
  41a5b4:	lsl	x10, x27, x26
  41a5b8:	ldr	x9, [x8, #16]
  41a5bc:	orr	x9, x9, x10
  41a5c0:	str	x9, [x8, #16]
  41a5c4:	cmp	w25, #0x7f
  41a5c8:	b.hi	41a590 <_obstack_memory_used@@Base+0x3fc>  // b.pmore
  41a5cc:	cmp	w25, w0
  41a5d0:	b.eq	41a590 <_obstack_memory_used@@Base+0x3fc>  // b.none
  41a5d4:	ldrb	w8, [x20, #176]
  41a5d8:	orr	w8, w8, #0x8
  41a5dc:	strb	w8, [x20, #176]
  41a5e0:	b	41a590 <_obstack_memory_used@@Base+0x3fc>
  41a5e4:	mov	x26, xzr
  41a5e8:	mov	w27, #0x1                   	// #1
  41a5ec:	b	41a5fc <_obstack_memory_used@@Base+0x468>
  41a5f0:	add	x26, x26, #0x1
  41a5f4:	cmp	x26, #0x40
  41a5f8:	b.eq	41a454 <_obstack_memory_used@@Base+0x2c0>  // b.none
  41a5fc:	add	x25, x26, #0xc0
  41a600:	mov	w0, w25
  41a604:	bl	402550 <btowc@plt>
  41a608:	cmn	w0, #0x1
  41a60c:	b.eq	41a624 <_obstack_memory_used@@Base+0x490>  // b.none
  41a610:	ldr	x8, [x20, #120]
  41a614:	lsl	x10, x27, x26
  41a618:	ldr	x9, [x8, #24]
  41a61c:	orr	x9, x9, x10
  41a620:	str	x9, [x8, #24]
  41a624:	cmp	w25, #0x7f
  41a628:	b.hi	41a5f0 <_obstack_memory_used@@Base+0x45c>  // b.pmore
  41a62c:	cmp	w25, w0
  41a630:	b.eq	41a5f0 <_obstack_memory_used@@Base+0x45c>  // b.none
  41a634:	ldrb	w8, [x20, #176]
  41a638:	orr	w8, w8, #0x8
  41a63c:	strb	w8, [x20, #176]
  41a640:	b	41a5f0 <_obstack_memory_used@@Base+0x45c>
  41a644:	mov	x0, xzr
  41a648:	mov	x24, xzr
  41a64c:	b	41a65c <_obstack_memory_used@@Base+0x4c8>
  41a650:	mov	x0, xzr
  41a654:	str	x24, [sp, #72]
  41a658:	ldr	w8, [x20, #180]
  41a65c:	cmp	w27, #0x0
  41a660:	csel	x9, x23, x0, eq  // eq = none
  41a664:	cmp	w8, #0x2
  41a668:	str	x9, [sp, #16]
  41a66c:	cbz	x25, 41a778 <_obstack_memory_used@@Base+0x5e4>
  41a670:	b.ge	41a6e4 <_obstack_memory_used@@Base+0x550>  // b.tcont
  41a674:	cmp	x24, x22
  41a678:	csel	x22, x22, x24, gt
  41a67c:	cmp	x22, #0x1
  41a680:	b.lt	41a7b8 <_obstack_memory_used@@Base+0x624>  // b.tstop
  41a684:	bl	4024d0 <__ctype_toupper_loc@plt>
  41a688:	mov	x9, xzr
  41a68c:	mov	x8, xzr
  41a690:	add	x9, x23, x9
  41a694:	ldrb	w9, [x9, x8]
  41a698:	cbz	x26, 41a6bc <_obstack_memory_used@@Base+0x528>
  41a69c:	b	41a6b8 <_obstack_memory_used@@Base+0x524>
  41a6a0:	ldr	x23, [sp, #8]
  41a6a4:	ldr	x9, [sp, #48]
  41a6a8:	ldr	x26, [sp, #128]
  41a6ac:	add	x9, x23, x9
  41a6b0:	ldrb	w9, [x9, x8]
  41a6b4:	cbz	x26, 41a6bc <_obstack_memory_used@@Base+0x528>
  41a6b8:	ldrb	w9, [x26, x9]
  41a6bc:	ldr	x10, [x0]
  41a6c0:	ldr	x11, [sp, #16]
  41a6c4:	ldr	w9, [x10, w9, uxtw #2]
  41a6c8:	strb	w9, [x11, x8]
  41a6cc:	add	x8, x8, #0x1
  41a6d0:	cmp	x8, x22
  41a6d4:	b.lt	41a6a0 <_obstack_memory_used@@Base+0x50c>  // b.tstop
  41a6d8:	b	41a7bc <_obstack_memory_used@@Base+0x628>
  41a6dc:	str	x0, [sp, #16]
  41a6e0:	str	x23, [sp, #72]
  41a6e4:	add	x0, sp, #0x8
  41a6e8:	bl	41edf8 <_obstack_memory_used@@Base+0x4c64>
  41a6ec:	cbnz	w0, 41aae4 <_obstack_memory_used@@Base+0x950>
  41a6f0:	ldr	x8, [sp, #64]
  41a6f4:	cmp	x8, x22
  41a6f8:	b.ge	41a81c <_obstack_memory_used@@Base+0x688>  // b.tcont
  41a6fc:	ldr	x8, [sp, #56]
  41a700:	ldrsw	x9, [x20, #180]
  41a704:	ldr	x24, [sp, #72]
  41a708:	add	x8, x8, x9
  41a70c:	cmp	x24, x8
  41a710:	b.gt	41a81c <_obstack_memory_used@@Base+0x688>
  41a714:	ldr	w8, [sp, #152]
  41a718:	lsl	x23, x24, #1
  41a71c:	cmp	w8, #0x2
  41a720:	b.lt	41a75c <_obstack_memory_used@@Base+0x5c8>  // b.tstop
  41a724:	lsr	x8, x23, #61
  41a728:	cbnz	x8, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a72c:	ldr	x0, [sp, #24]
  41a730:	lsl	x1, x24, #3
  41a734:	bl	4024c0 <realloc@plt>
  41a738:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a73c:	mov	x8, x0
  41a740:	ldr	x0, [sp, #32]
  41a744:	str	x8, [sp, #24]
  41a748:	cbz	x0, 41a75c <_obstack_memory_used@@Base+0x5c8>
  41a74c:	lsl	x1, x24, #4
  41a750:	bl	4024c0 <realloc@plt>
  41a754:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a758:	str	x0, [sp, #32]
  41a75c:	ldrb	w8, [sp, #147]
  41a760:	cbz	w8, 41a6e0 <_obstack_memory_used@@Base+0x54c>
  41a764:	ldr	x0, [sp, #16]
  41a768:	mov	x1, x23
  41a76c:	bl	4024c0 <realloc@plt>
  41a770:	cbnz	x0, 41a6dc <_obstack_memory_used@@Base+0x548>
  41a774:	b	41aae0 <_obstack_memory_used@@Base+0x94c>
  41a778:	b.lt	41a788 <_obstack_memory_used@@Base+0x5f4>  // b.tstop
  41a77c:	add	x0, sp, #0x8
  41a780:	bl	41f4a8 <_obstack_memory_used@@Base+0x5314>
  41a784:	b	41a81c <_obstack_memory_used@@Base+0x688>
  41a788:	cbz	x26, 41a7c4 <_obstack_memory_used@@Base+0x630>
  41a78c:	cmp	x24, x22
  41a790:	csel	x8, x22, x24, gt
  41a794:	cmp	x8, #0x1
  41a798:	b.lt	41a7cc <_obstack_memory_used@@Base+0x638>  // b.tstop
  41a79c:	ldrb	w10, [x23]
  41a7a0:	cmp	x8, #0x1
  41a7a4:	ldrb	w10, [x26, x10]
  41a7a8:	strb	w10, [x9]
  41a7ac:	b.ne	41a7d4 <_obstack_memory_used@@Base+0x640>  // b.any
  41a7b0:	mov	w9, #0x1                   	// #1
  41a7b4:	b	41a818 <_obstack_memory_used@@Base+0x684>
  41a7b8:	mov	x8, xzr
  41a7bc:	stp	x8, x8, [sp, #56]
  41a7c0:	b	41a81c <_obstack_memory_used@@Base+0x688>
  41a7c4:	stp	x24, x24, [sp, #56]
  41a7c8:	b	41a81c <_obstack_memory_used@@Base+0x688>
  41a7cc:	mov	x9, xzr
  41a7d0:	b	41a818 <_obstack_memory_used@@Base+0x684>
  41a7d4:	ldrb	w10, [x23, #1]
  41a7d8:	cmp	x8, #0x3
  41a7dc:	ldrb	w10, [x26, x10]
  41a7e0:	strb	w10, [x9, #1]
  41a7e4:	mov	w9, #0x2                   	// #2
  41a7e8:	b.lt	41a818 <_obstack_memory_used@@Base+0x684>  // b.tstop
  41a7ec:	ldr	x10, [sp, #8]
  41a7f0:	ldr	x11, [sp, #48]
  41a7f4:	ldr	x12, [sp, #128]
  41a7f8:	add	x10, x10, x11
  41a7fc:	ldrb	w10, [x10, x9]
  41a800:	ldr	x11, [sp, #16]
  41a804:	ldrb	w10, [x12, x10]
  41a808:	strb	w10, [x11, x9]
  41a80c:	add	x9, x9, #0x1
  41a810:	cmp	x9, x8
  41a814:	b.lt	41a7ec <_obstack_memory_used@@Base+0x658>  // b.tstop
  41a818:	stp	x9, x9, [sp, #56]
  41a81c:	stur	wzr, [x29, #-44]
  41a820:	ldr	x22, [x19]
  41a824:	orr	x2, x21, #0x800000
  41a828:	sub	x0, x29, #0x28
  41a82c:	add	x1, sp, #0x8
  41a830:	str	xzr, [x19, #48]
  41a834:	str	x21, [x22, #216]
  41a838:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  41a83c:	ldr	x8, [sp, #80]
  41a840:	sub	x2, x29, #0x28
  41a844:	sub	x5, x29, #0x2c
  41a848:	mov	x1, x19
  41a84c:	add	x8, x8, w0, sxtw
  41a850:	add	x0, sp, #0x8
  41a854:	mov	x3, x21
  41a858:	mov	x4, xzr
  41a85c:	str	x8, [sp, #80]
  41a860:	bl	41f6b0 <_obstack_memory_used@@Base+0x551c>
  41a864:	mov	x21, x0
  41a868:	cbnz	x0, 41a874 <_obstack_memory_used@@Base+0x6e0>
  41a86c:	ldur	w8, [x29, #-44]
  41a870:	cbnz	w8, 41aa5c <_obstack_memory_used@@Base+0x8c8>
  41a874:	ldr	w8, [x22, #128]
  41a878:	cmp	w8, #0xf
  41a87c:	b.eq	41aa0c <_obstack_memory_used@@Base+0x878>  // b.none
  41a880:	ldr	x0, [x22, #112]
  41a884:	add	w9, w8, #0x1
  41a888:	sxtw	x8, w8
  41a88c:	add	x23, x0, x8, lsl #6
  41a890:	mov	w10, #0x2                   	// #2
  41a894:	mov	x11, #0xffffffffffffffff    	// #-1
  41a898:	str	w9, [x22, #128]
  41a89c:	str	xzr, [x23, #8]!
  41a8a0:	stp	xzr, xzr, [x23, #16]
  41a8a4:	str	xzr, [x23, #8]
  41a8a8:	str	w10, [x23, #48]
  41a8ac:	stp	xzr, xzr, [x23, #32]
  41a8b0:	str	x11, [x23, #56]
  41a8b4:	mov	x8, x23
  41a8b8:	cbz	x21, 41a908 <_obstack_memory_used@@Base+0x774>
  41a8bc:	ldr	w8, [x22, #128]
  41a8c0:	cmp	w8, #0xf
  41a8c4:	b.eq	41aa30 <_obstack_memory_used@@Base+0x89c>  // b.none
  41a8c8:	ldr	x0, [x22, #112]
  41a8cc:	add	w9, w8, #0x1
  41a8d0:	sxtw	x8, w8
  41a8d4:	add	x8, x0, x8, lsl #6
  41a8d8:	mov	w10, #0x10                  	// #16
  41a8dc:	mov	x11, #0xffffffffffffffff    	// #-1
  41a8e0:	str	w9, [x22, #128]
  41a8e4:	str	xzr, [x8, #8]!
  41a8e8:	stp	x21, x23, [x8, #8]
  41a8ec:	stp	xzr, xzr, [x8, #32]
  41a8f0:	str	w10, [x8, #48]
  41a8f4:	str	xzr, [x8, #24]
  41a8f8:	str	x11, [x8, #56]
  41a8fc:	str	x8, [x21]
  41a900:	cbz	x23, 41aa54 <_obstack_memory_used@@Base+0x8c0>
  41a904:	str	x8, [x23]
  41a908:	cbz	x23, 41aa54 <_obstack_memory_used@@Base+0x8c0>
  41a90c:	cbz	x8, 41aa54 <_obstack_memory_used@@Base+0x8c0>
  41a910:	str	x8, [x20, #104]
  41a914:	ldr	x21, [x19]
  41a918:	ldr	x8, [x21, #8]
  41a91c:	lsl	x0, x8, #3
  41a920:	bl	4023a0 <malloc@plt>
  41a924:	ldr	x8, [x21, #8]
  41a928:	str	x0, [x21, #24]
  41a92c:	lsl	x0, x8, #3
  41a930:	bl	4023a0 <malloc@plt>
  41a934:	ldr	x8, [x21, #8]
  41a938:	str	x0, [x21, #32]
  41a93c:	add	x8, x8, x8, lsl #1
  41a940:	lsl	x0, x8, #3
  41a944:	bl	4023a0 <malloc@plt>
  41a948:	ldr	x8, [x21, #8]
  41a94c:	str	x0, [x21, #40]
  41a950:	add	x8, x8, x8, lsl #1
  41a954:	lsl	x0, x8, #3
  41a958:	bl	4023a0 <malloc@plt>
  41a95c:	ldr	x9, [x21, #24]
  41a960:	str	x0, [x21, #48]
  41a964:	cbz	x9, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a968:	ldr	x9, [x21, #32]
  41a96c:	cbz	x9, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41a970:	mov	x8, x0
  41a974:	mov	w0, #0xc                   	// #12
  41a978:	cbz	x8, 41aae4 <_obstack_memory_used@@Base+0x950>
  41a97c:	ldr	x8, [x21, #40]
  41a980:	cbz	x8, 41aae4 <_obstack_memory_used@@Base+0x950>
  41a984:	ldr	x22, [x19, #48]
  41a988:	lsl	x0, x22, #3
  41a98c:	bl	4023a0 <malloc@plt>
  41a990:	str	x0, [x21, #224]
  41a994:	cbz	x0, 41acc0 <_obstack_memory_used@@Base+0xb2c>
  41a998:	cbz	x22, 41ab08 <_obstack_memory_used@@Base+0x974>
  41a99c:	cmp	x22, #0x4
  41a9a0:	b.cs	41a9ac <_obstack_memory_used@@Base+0x818>  // b.hs, b.nlast
  41a9a4:	mov	x8, xzr
  41a9a8:	b	41aaf8 <_obstack_memory_used@@Base+0x964>
  41a9ac:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41a9b0:	ldr	q0, [x10, #1856]
  41a9b4:	mov	w10, #0x2                   	// #2
  41a9b8:	and	x8, x22, #0xfffffffffffffffc
  41a9bc:	dup	v1.2d, x10
  41a9c0:	mov	w10, #0x4                   	// #4
  41a9c4:	add	x9, x0, #0x10
  41a9c8:	dup	v2.2d, x10
  41a9cc:	mov	x10, x8
  41a9d0:	add	v3.2d, v0.2d, v1.2d
  41a9d4:	stp	q0, q3, [x9, #-16]
  41a9d8:	add	v0.2d, v0.2d, v2.2d
  41a9dc:	subs	x10, x10, #0x4
  41a9e0:	add	x9, x9, #0x20
  41a9e4:	b.ne	41a9d0 <_obstack_memory_used@@Base+0x83c>  // b.any
  41a9e8:	b	41ab00 <_obstack_memory_used@@Base+0x96c>
  41a9ec:	mov	w1, #0xe8                  	// #232
  41a9f0:	mov	x0, x20
  41a9f4:	bl	4024c0 <realloc@plt>
  41a9f8:	cbz	x0, 41aac8 <_obstack_memory_used@@Base+0x934>
  41a9fc:	mov	x20, x0
  41aa00:	mov	w8, #0xe8                  	// #232
  41aa04:	stp	x0, x8, [x19]
  41aa08:	b	41a2d4 <_obstack_memory_used@@Base+0x140>
  41aa0c:	mov	w0, #0x3c8                 	// #968
  41aa10:	bl	4023a0 <malloc@plt>
  41aa14:	cbz	x0, 41aad0 <_obstack_memory_used@@Base+0x93c>
  41aa18:	ldr	x9, [x22, #112]
  41aa1c:	mov	w8, wzr
  41aa20:	str	x9, [x0]
  41aa24:	str	x0, [x22, #112]
  41aa28:	str	wzr, [x22, #128]
  41aa2c:	b	41a884 <_obstack_memory_used@@Base+0x6f0>
  41aa30:	mov	w0, #0x3c8                 	// #968
  41aa34:	bl	4023a0 <malloc@plt>
  41aa38:	cbz	x0, 41aa54 <_obstack_memory_used@@Base+0x8c0>
  41aa3c:	ldr	x9, [x22, #112]
  41aa40:	mov	w8, wzr
  41aa44:	str	x9, [x0]
  41aa48:	str	x0, [x22, #112]
  41aa4c:	str	wzr, [x22, #128]
  41aa50:	b	41a8cc <_obstack_memory_used@@Base+0x738>
  41aa54:	mov	w8, #0xc                   	// #12
  41aa58:	stur	w8, [x29, #-44]
  41aa5c:	str	xzr, [x20, #104]
  41aa60:	ldr	x21, [x19]
  41aa64:	ldr	x0, [x21, #112]
  41aa68:	cbz	x0, 41aa7c <_obstack_memory_used@@Base+0x8e8>
  41aa6c:	ldr	x22, [x0]
  41aa70:	bl	402620 <free@plt>
  41aa74:	mov	x0, x22
  41aa78:	cbnz	x22, 41aa6c <_obstack_memory_used@@Base+0x8d8>
  41aa7c:	ldr	x0, [x21, #32]
  41aa80:	mov	w8, #0xf                   	// #15
  41aa84:	str	w8, [x21, #128]
  41aa88:	stp	xzr, xzr, [x21, #104]
  41aa8c:	bl	402620 <free@plt>
  41aa90:	str	xzr, [x21, #32]
  41aa94:	ldr	x0, [sp, #24]
  41aa98:	bl	402620 <free@plt>
  41aa9c:	ldr	x0, [sp, #32]
  41aaa0:	bl	402620 <free@plt>
  41aaa4:	ldrb	w8, [sp, #147]
  41aaa8:	cbz	w8, 41aab4 <_obstack_memory_used@@Base+0x920>
  41aaac:	ldr	x0, [sp, #16]
  41aab0:	bl	402620 <free@plt>
  41aab4:	mov	x0, x20
  41aab8:	bl	41bf84 <_obstack_memory_used@@Base+0x1df0>
  41aabc:	stp	xzr, xzr, [x19]
  41aac0:	ldur	w21, [x29, #-44]
  41aac4:	b	41b470 <_obstack_memory_used@@Base+0x12dc>
  41aac8:	mov	w21, #0xc                   	// #12
  41aacc:	b	41b470 <_obstack_memory_used@@Base+0x12dc>
  41aad0:	mov	x23, xzr
  41aad4:	mov	x8, x23
  41aad8:	cbnz	x21, 41a8bc <_obstack_memory_used@@Base+0x728>
  41aadc:	b	41a908 <_obstack_memory_used@@Base+0x774>
  41aae0:	mov	w0, #0xc                   	// #12
  41aae4:	stur	w0, [x29, #-44]
  41aae8:	ldr	x21, [x19]
  41aaec:	ldr	x0, [x21, #112]
  41aaf0:	cbnz	x0, 41aa6c <_obstack_memory_used@@Base+0x8d8>
  41aaf4:	b	41aa7c <_obstack_memory_used@@Base+0x8e8>
  41aaf8:	str	x8, [x0, x8, lsl #3]
  41aafc:	add	x8, x8, #0x1
  41ab00:	cmp	x22, x8
  41ab04:	b.ne	41aaf8 <_obstack_memory_used@@Base+0x964>  // b.any
  41ab08:	ldr	x9, [x21, #104]
  41ab0c:	ldrb	w8, [x9, #48]
  41ab10:	cmp	w8, #0x11
  41ab14:	b.eq	41ab4c <_obstack_memory_used@@Base+0x9b8>  // b.none
  41ab18:	cmp	w8, #0x4
  41ab1c:	b.ne	41ab9c <_obstack_memory_used@@Base+0xa08>  // b.any
  41ab20:	ldr	x8, [x9, #40]
  41ab24:	mov	w11, #0x1                   	// #1
  41ab28:	sbfiz	x8, x8, #3, #32
  41ab2c:	ldr	x8, [x0, x8]
  41ab30:	str	x8, [x9, #40]
  41ab34:	ldr	x10, [x21, #160]
  41ab38:	lsl	w8, w11, w8
  41ab3c:	sxtw	x8, w8
  41ab40:	orr	x8, x10, x8
  41ab44:	str	x8, [x21, #160]
  41ab48:	b	41ab9c <_obstack_memory_used@@Base+0xa08>
  41ab4c:	ldr	x8, [x9, #8]
  41ab50:	cbz	x8, 41ab9c <_obstack_memory_used@@Base+0xa08>
  41ab54:	ldrb	w10, [x8, #48]
  41ab58:	cmp	w10, #0x11
  41ab5c:	b.ne	41ab9c <_obstack_memory_used@@Base+0xa08>  // b.any
  41ab60:	ldr	x10, [x8, #8]
  41ab64:	ldr	x8, [x8, #40]
  41ab68:	str	x10, [x9, #8]
  41ab6c:	cbz	x10, 41ab74 <_obstack_memory_used@@Base+0x9e0>
  41ab70:	str	x9, [x10]
  41ab74:	ldr	x10, [x9, #40]
  41ab78:	cmp	x8, #0x3f
  41ab7c:	ldr	x10, [x0, x10, lsl #3]
  41ab80:	str	x10, [x0, x8, lsl #3]
  41ab84:	b.gt	41ab9c <_obstack_memory_used@@Base+0xa08>
  41ab88:	ldr	x10, [x21, #160]
  41ab8c:	mov	w11, #0x1                   	// #1
  41ab90:	lsl	x8, x11, x8
  41ab94:	bic	x8, x10, x8
  41ab98:	b	41ab44 <_obstack_memory_used@@Base+0x9b0>
  41ab9c:	mov	w8, #0x1                   	// #1
  41aba0:	ldr	x10, [x9, #8]
  41aba4:	cbnz	x10, 41abd0 <_obstack_memory_used@@Base+0xa3c>
  41aba8:	mov	x11, xzr
  41abac:	b	41abb8 <_obstack_memory_used@@Base+0xa24>
  41abb0:	ldr	x9, [x11]
  41abb4:	cbz	x9, 41ac7c <_obstack_memory_used@@Base+0xae8>
  41abb8:	ldr	x10, [x9, #16]
  41abbc:	mov	x12, x11
  41abc0:	mov	x11, x9
  41abc4:	cmp	x10, x12
  41abc8:	b.eq	41abb0 <_obstack_memory_used@@Base+0xa1c>  // b.none
  41abcc:	cbz	x10, 41abb0 <_obstack_memory_used@@Base+0xa1c>
  41abd0:	ldrb	w9, [x10, #48]
  41abd4:	cmp	w9, #0x11
  41abd8:	b.eq	41ac20 <_obstack_memory_used@@Base+0xa8c>  // b.none
  41abdc:	cmp	w9, #0x4
  41abe0:	mov	x9, x10
  41abe4:	b.ne	41aba0 <_obstack_memory_used@@Base+0xa0c>  // b.any
  41abe8:	ldr	x11, [x21, #224]
  41abec:	mov	x9, x10
  41abf0:	cbz	x11, 41aba0 <_obstack_memory_used@@Base+0xa0c>
  41abf4:	ldr	x9, [x10, #40]
  41abf8:	sbfiz	x9, x9, #3, #32
  41abfc:	ldr	x9, [x11, x9]
  41ac00:	str	x9, [x10, #40]
  41ac04:	ldr	x11, [x21, #160]
  41ac08:	lsl	w9, w8, w9
  41ac0c:	sxtw	x9, w9
  41ac10:	orr	x9, x11, x9
  41ac14:	str	x9, [x21, #160]
  41ac18:	mov	x9, x10
  41ac1c:	b	41aba0 <_obstack_memory_used@@Base+0xa0c>
  41ac20:	ldr	x11, [x10, #8]
  41ac24:	mov	x9, x10
  41ac28:	cbz	x11, 41aba0 <_obstack_memory_used@@Base+0xa0c>
  41ac2c:	ldrb	w9, [x11, #48]
  41ac30:	cmp	w9, #0x11
  41ac34:	mov	x9, x10
  41ac38:	b.ne	41aba0 <_obstack_memory_used@@Base+0xa0c>  // b.any
  41ac3c:	ldr	x9, [x11, #8]
  41ac40:	ldr	x11, [x11, #40]
  41ac44:	str	x9, [x10, #8]
  41ac48:	cbz	x9, 41ac50 <_obstack_memory_used@@Base+0xabc>
  41ac4c:	str	x10, [x9]
  41ac50:	ldr	x9, [x21, #224]
  41ac54:	ldr	x12, [x10, #40]
  41ac58:	cmp	x11, #0x3f
  41ac5c:	ldr	x12, [x9, x12, lsl #3]
  41ac60:	str	x12, [x9, x11, lsl #3]
  41ac64:	mov	x9, x10
  41ac68:	b.gt	41aba0 <_obstack_memory_used@@Base+0xa0c>
  41ac6c:	ldr	x9, [x21, #160]
  41ac70:	lsl	x11, x8, x11
  41ac74:	bic	x9, x9, x11
  41ac78:	b	41ac14 <_obstack_memory_used@@Base+0xa80>
  41ac7c:	ldr	x8, [x19, #48]
  41ac80:	cbz	x8, 41aca8 <_obstack_memory_used@@Base+0xb14>
  41ac84:	ldr	x0, [x21, #224]
  41ac88:	mov	x9, xzr
  41ac8c:	ldr	x10, [x0, x9, lsl #3]
  41ac90:	cmp	x9, x10
  41ac94:	b.ne	41acb0 <_obstack_memory_used@@Base+0xb1c>  // b.any
  41ac98:	add	x9, x9, #0x1
  41ac9c:	cmp	x8, x9
  41aca0:	b.ne	41ac8c <_obstack_memory_used@@Base+0xaf8>  // b.any
  41aca4:	b	41acb8 <_obstack_memory_used@@Base+0xb24>
  41aca8:	ldr	x0, [x21, #224]
  41acac:	b	41acb8 <_obstack_memory_used@@Base+0xb24>
  41acb0:	cmp	x8, x9
  41acb4:	b.ne	41acc0 <_obstack_memory_used@@Base+0xb2c>  // b.any
  41acb8:	bl	402620 <free@plt>
  41acbc:	str	xzr, [x21, #224]
  41acc0:	ldr	x8, [x21, #104]
  41acc4:	mov	x22, x8
  41acc8:	ldr	x8, [x8, #8]
  41accc:	cbnz	x8, 41acc4 <_obstack_memory_used@@Base+0xb30>
  41acd0:	ldr	x8, [x22, #16]
  41acd4:	cbnz	x8, 41acc4 <_obstack_memory_used@@Base+0xb30>
  41acd8:	mov	x3, xzr
  41acdc:	b	41ace8 <_obstack_memory_used@@Base+0xb54>
  41ace0:	ldr	x3, [x9, #8]
  41ace4:	mov	x22, x9
  41ace8:	stur	wzr, [x29, #-40]
  41acec:	cbz	x3, 41ad18 <_obstack_memory_used@@Base+0xb84>
  41acf0:	ldrb	w8, [x3, #48]
  41acf4:	cmp	w8, #0x11
  41acf8:	b.ne	41ad18 <_obstack_memory_used@@Base+0xb84>  // b.any
  41acfc:	ldr	x1, [x19]
  41ad00:	ldrb	w2, [x19, #56]
  41ad04:	sub	x0, x29, #0x28
  41ad08:	bl	4235e0 <_obstack_memory_used@@Base+0x944c>
  41ad0c:	str	x0, [x22, #8]
  41ad10:	cbz	x0, 41ad18 <_obstack_memory_used@@Base+0xb84>
  41ad14:	str	x22, [x0]
  41ad18:	ldr	x3, [x22, #16]
  41ad1c:	cbz	x3, 41ad48 <_obstack_memory_used@@Base+0xbb4>
  41ad20:	ldrb	w8, [x3, #48]
  41ad24:	cmp	w8, #0x11
  41ad28:	b.ne	41ad48 <_obstack_memory_used@@Base+0xbb4>  // b.any
  41ad2c:	ldr	x1, [x19]
  41ad30:	ldrb	w2, [x19, #56]
  41ad34:	sub	x0, x29, #0x28
  41ad38:	bl	4235e0 <_obstack_memory_used@@Base+0x944c>
  41ad3c:	str	x0, [x22, #16]
  41ad40:	cbz	x0, 41ad48 <_obstack_memory_used@@Base+0xbb4>
  41ad44:	str	x22, [x0]
  41ad48:	ldur	w0, [x29, #-40]
  41ad4c:	cbnz	w0, 41aae4 <_obstack_memory_used@@Base+0x950>
  41ad50:	ldr	x9, [x22]
  41ad54:	cbz	x9, 41ad6c <_obstack_memory_used@@Base+0xbd8>
  41ad58:	ldr	x8, [x9, #16]
  41ad5c:	cmp	x8, x22
  41ad60:	b.eq	41ace0 <_obstack_memory_used@@Base+0xb4c>  // b.none
  41ad64:	cbz	x8, 41ace0 <_obstack_memory_used@@Base+0xb4c>
  41ad68:	b	41acc4 <_obstack_memory_used@@Base+0xb30>
  41ad6c:	ldr	x8, [x21, #104]
  41ad70:	mov	x22, x8
  41ad74:	ldr	x8, [x8, #8]
  41ad78:	cbnz	x8, 41ad70 <_obstack_memory_used@@Base+0xbdc>
  41ad7c:	ldr	x8, [x22, #16]
  41ad80:	cbnz	x8, 41ad70 <_obstack_memory_used@@Base+0xbdc>
  41ad84:	ldrb	w8, [x22, #48]
  41ad88:	cmp	w8, #0x10
  41ad8c:	b.ne	41ada8 <_obstack_memory_used@@Base+0xc14>  // b.any
  41ad90:	ldr	x8, [x22, #8]
  41ad94:	ldr	x9, [x8, #24]
  41ad98:	str	x9, [x22, #24]
  41ad9c:	ldr	x8, [x8, #56]
  41ada0:	str	x8, [x22, #56]
  41ada4:	b	41ade8 <_obstack_memory_used@@Base+0xc54>
  41ada8:	ldp	x1, x2, [x22, #40]
  41adac:	mov	x0, x21
  41adb0:	str	x22, [x22, #24]
  41adb4:	bl	42386c <_obstack_memory_used@@Base+0x96d8>
  41adb8:	cmn	x0, #0x1
  41adbc:	str	x0, [x22, #56]
  41adc0:	b.eq	41aae0 <_obstack_memory_used@@Base+0x94c>  // b.none
  41adc4:	ldrb	w8, [x22, #48]
  41adc8:	cmp	w8, #0xc
  41adcc:	b.ne	41ade8 <_obstack_memory_used@@Base+0xc54>  // b.any
  41add0:	ldr	x8, [x21]
  41add4:	ldr	w9, [x22, #40]
  41add8:	add	x8, x8, x0, lsl #4
  41addc:	ldr	w10, [x8, #8]
  41ade0:	bfi	w10, w9, #8, #10
  41ade4:	str	w10, [x8, #8]
  41ade8:	ldr	x9, [x22]
  41adec:	cbz	x9, 41ae0c <_obstack_memory_used@@Base+0xc78>
  41adf0:	ldr	x8, [x9, #16]
  41adf4:	cmp	x8, x22
  41adf8:	mov	x22, x9
  41adfc:	b.eq	41ad84 <_obstack_memory_used@@Base+0xbf0>  // b.none
  41ae00:	mov	x22, x9
  41ae04:	cbz	x8, 41ad84 <_obstack_memory_used@@Base+0xbf0>
  41ae08:	b	41ad70 <_obstack_memory_used@@Base+0xbdc>
  41ae0c:	ldr	x22, [x21, #104]
  41ae10:	ldrb	w8, [x22, #48]
  41ae14:	cmp	w8, #0x10
  41ae18:	b.eq	41ae30 <_obstack_memory_used@@Base+0xc9c>  // b.none
  41ae1c:	cmp	w8, #0xb
  41ae20:	b.ne	41ae40 <_obstack_memory_used@@Base+0xcac>  // b.any
  41ae24:	ldr	x8, [x22, #8]
  41ae28:	str	x22, [x8, #32]
  41ae2c:	b	41ae60 <_obstack_memory_used@@Base+0xccc>
  41ae30:	ldp	x8, x9, [x22, #8]
  41ae34:	ldr	x10, [x9, #24]
  41ae38:	str	x10, [x8, #32]
  41ae3c:	b	41ae58 <_obstack_memory_used@@Base+0xcc4>
  41ae40:	ldr	x8, [x22, #8]
  41ae44:	cbz	x8, 41ae50 <_obstack_memory_used@@Base+0xcbc>
  41ae48:	ldr	x9, [x22, #32]
  41ae4c:	str	x9, [x8, #32]
  41ae50:	ldr	x9, [x22, #16]
  41ae54:	cbz	x9, 41ae60 <_obstack_memory_used@@Base+0xccc>
  41ae58:	ldr	x10, [x22, #32]
  41ae5c:	str	x10, [x9, #32]
  41ae60:	mov	x10, x22
  41ae64:	b	41ae80 <_obstack_memory_used@@Base+0xcec>
  41ae68:	ldp	x8, x10, [x9, #8]
  41ae6c:	ldr	x11, [x10, #24]
  41ae70:	str	x11, [x8, #32]
  41ae74:	ldr	x11, [x9, #32]
  41ae78:	str	x11, [x10, #32]
  41ae7c:	mov	x10, x9
  41ae80:	mov	x9, x8
  41ae84:	cbnz	x8, 41aeac <_obstack_memory_used@@Base+0xd18>
  41ae88:	b	41ae94 <_obstack_memory_used@@Base+0xd00>
  41ae8c:	ldr	x10, [x8]
  41ae90:	cbz	x10, 41aefc <_obstack_memory_used@@Base+0xd68>
  41ae94:	ldr	x9, [x10, #16]
  41ae98:	mov	x11, x8
  41ae9c:	mov	x8, x10
  41aea0:	cmp	x9, x11
  41aea4:	b.eq	41ae8c <_obstack_memory_used@@Base+0xcf8>  // b.none
  41aea8:	cbz	x9, 41ae8c <_obstack_memory_used@@Base+0xcf8>
  41aeac:	ldrb	w8, [x9, #48]
  41aeb0:	cmp	w8, #0x10
  41aeb4:	b.eq	41ae68 <_obstack_memory_used@@Base+0xcd4>  // b.none
  41aeb8:	cmp	w8, #0xb
  41aebc:	b.ne	41aed0 <_obstack_memory_used@@Base+0xd3c>  // b.any
  41aec0:	ldr	x8, [x9, #8]
  41aec4:	mov	x10, x9
  41aec8:	str	x9, [x8, #32]
  41aecc:	b	41ae80 <_obstack_memory_used@@Base+0xcec>
  41aed0:	ldr	x8, [x9, #8]
  41aed4:	cbz	x8, 41aee0 <_obstack_memory_used@@Base+0xd4c>
  41aed8:	ldr	x10, [x9, #32]
  41aedc:	str	x10, [x8, #32]
  41aee0:	ldr	x11, [x9, #16]
  41aee4:	mov	x10, x9
  41aee8:	cbz	x11, 41ae80 <_obstack_memory_used@@Base+0xcec>
  41aeec:	ldr	x10, [x9, #32]
  41aef0:	str	x10, [x11, #32]
  41aef4:	mov	x10, x9
  41aef8:	b	41ae80 <_obstack_memory_used@@Base+0xcec>
  41aefc:	mov	x0, x21
  41af00:	mov	x1, x22
  41af04:	bl	423434 <_obstack_memory_used@@Base+0x92a0>
  41af08:	cbz	w0, 41af24 <_obstack_memory_used@@Base+0xd90>
  41af0c:	b	41aae4 <_obstack_memory_used@@Base+0x950>
  41af10:	mov	x0, x21
  41af14:	mov	x1, x23
  41af18:	bl	423434 <_obstack_memory_used@@Base+0x92a0>
  41af1c:	mov	x22, x23
  41af20:	cbnz	w0, 41aae4 <_obstack_memory_used@@Base+0x950>
  41af24:	ldr	x23, [x22, #8]
  41af28:	cbnz	x23, 41af10 <_obstack_memory_used@@Base+0xd7c>
  41af2c:	mov	x8, xzr
  41af30:	b	41af3c <_obstack_memory_used@@Base+0xda8>
  41af34:	ldr	x22, [x8]
  41af38:	cbz	x22, 41af58 <_obstack_memory_used@@Base+0xdc4>
  41af3c:	ldr	x23, [x22, #16]
  41af40:	mov	x9, x8
  41af44:	mov	x8, x22
  41af48:	cmp	x23, x9
  41af4c:	b.eq	41af34 <_obstack_memory_used@@Base+0xda0>  // b.none
  41af50:	cbz	x23, 41af34 <_obstack_memory_used@@Base+0xda0>
  41af54:	b	41af10 <_obstack_memory_used@@Base+0xd7c>
  41af58:	mov	w24, wzr
  41af5c:	mov	w23, #0x18                  	// #24
  41af60:	ldr	x8, [x21, #48]
  41af64:	madd	x8, x22, x23, x8
  41af68:	ldr	x8, [x8, #8]
  41af6c:	cbnz	x8, 41afa4 <_obstack_memory_used@@Base+0xe10>
  41af70:	sub	x0, x29, #0x28
  41af74:	mov	w3, #0x1                   	// #1
  41af78:	mov	x1, x21
  41af7c:	mov	x2, x22
  41af80:	bl	423a38 <_obstack_memory_used@@Base+0x98a4>
  41af84:	cbnz	w0, 41aae4 <_obstack_memory_used@@Base+0x950>
  41af88:	ldr	x8, [x21, #48]
  41af8c:	madd	x8, x22, x23, x8
  41af90:	ldr	x8, [x8, #8]
  41af94:	cbnz	x8, 41afa4 <_obstack_memory_used@@Base+0xe10>
  41af98:	ldur	x0, [x29, #-24]
  41af9c:	bl	402620 <free@plt>
  41afa0:	mov	w24, #0x1                   	// #1
  41afa4:	ldr	x9, [x21, #16]
  41afa8:	add	x8, x22, #0x1
  41afac:	mov	w10, w24
  41afb0:	cmp	x8, x9
  41afb4:	cset	w11, ne  // ne = any
  41afb8:	csinc	x22, xzr, x22, eq  // eq = none
  41afbc:	and	w24, w24, w11
  41afc0:	tbnz	w10, #0, 41af60 <_obstack_memory_used@@Base+0xdcc>
  41afc4:	cmp	x8, x9
  41afc8:	b.ne	41af60 <_obstack_memory_used@@Base+0xdcc>  // b.any
  41afcc:	ldrb	w9, [x19, #56]
  41afd0:	tbnz	w9, #4, 41afe4 <_obstack_memory_used@@Base+0xe50>
  41afd4:	ldr	x9, [x19, #48]
  41afd8:	cbz	x9, 41afe4 <_obstack_memory_used@@Base+0xe50>
  41afdc:	ldrb	w9, [x21, #176]
  41afe0:	tbnz	w9, #0, 41afec <_obstack_memory_used@@Base+0xe58>
  41afe4:	ldr	x9, [x21, #152]
  41afe8:	cbz	x9, 41b100 <_obstack_memory_used@@Base+0xf6c>
  41afec:	add	x8, x8, x8, lsl #1
  41aff0:	lsl	x0, x8, #3
  41aff4:	bl	4023a0 <malloc@plt>
  41aff8:	str	x0, [x21, #56]
  41affc:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41b000:	ldr	x8, [x21, #16]
  41b004:	cbz	x8, 41b100 <_obstack_memory_used@@Base+0xf6c>
  41b008:	stp	xzr, xzr, [x0]
  41b00c:	str	xzr, [x0, #16]
  41b010:	ldr	x9, [x21, #16]
  41b014:	cmp	x9, #0x2
  41b018:	b.cc	41b048 <_obstack_memory_used@@Base+0xeb4>  // b.lo, b.ul, b.last
  41b01c:	mov	w8, #0x1                   	// #1
  41b020:	mov	w10, #0x18                  	// #24
  41b024:	ldr	x9, [x21, #56]
  41b028:	add	x8, x8, #0x1
  41b02c:	add	x9, x9, x10
  41b030:	stp	xzr, xzr, [x9]
  41b034:	str	xzr, [x9, #16]
  41b038:	ldr	x9, [x21, #16]
  41b03c:	add	x10, x10, #0x18
  41b040:	cmp	x8, x9
  41b044:	b.cc	41b024 <_obstack_memory_used@@Base+0xe90>  // b.lo, b.ul, b.last
  41b048:	cbz	x9, 41b100 <_obstack_memory_used@@Base+0xf6c>
  41b04c:	ldr	x8, [x21, #48]
  41b050:	mov	x22, xzr
  41b054:	mov	w23, #0x18                  	// #24
  41b058:	b	41b06c <_obstack_memory_used@@Base+0xed8>
  41b05c:	ldr	x9, [x21, #16]
  41b060:	add	x22, x22, #0x1
  41b064:	cmp	x22, x9
  41b068:	b.cs	41b100 <_obstack_memory_used@@Base+0xf6c>  // b.hs, b.nlast
  41b06c:	madd	x10, x22, x23, x8
  41b070:	ldr	x11, [x10, #8]
  41b074:	cmp	x11, #0x1
  41b078:	b.lt	41b060 <_obstack_memory_used@@Base+0xecc>  // b.tstop
  41b07c:	ldr	x24, [x10, #16]
  41b080:	mov	x26, xzr
  41b084:	b	41b0b0 <_obstack_memory_used@@Base+0xf1c>
  41b088:	madd	x10, x11, x23, x10
  41b08c:	ldr	x0, [x10, #16]
  41b090:	add	x10, x9, #0x1
  41b094:	str	x10, [x27]
  41b098:	str	x22, [x0, x9, lsl #3]
  41b09c:	madd	x9, x22, x23, x8
  41b0a0:	ldr	x9, [x9, #8]
  41b0a4:	add	x26, x26, #0x1
  41b0a8:	cmp	x26, x9
  41b0ac:	b.ge	41b05c <_obstack_memory_used@@Base+0xec8>  // b.tcont
  41b0b0:	ldr	x10, [x21, #56]
  41b0b4:	ldr	x11, [x24, x26, lsl #3]
  41b0b8:	madd	x12, x11, x23, x10
  41b0bc:	mov	x27, x12
  41b0c0:	ldr	x13, [x12]
  41b0c4:	ldr	x9, [x27, #8]!
  41b0c8:	cmp	x13, x9
  41b0cc:	b.ne	41b088 <_obstack_memory_used@@Base+0xef4>  // b.any
  41b0d0:	lsl	x8, x13, #1
  41b0d4:	add	x8, x8, #0x2
  41b0d8:	str	x8, [x12]
  41b0dc:	madd	x28, x11, x23, x10
  41b0e0:	ldr	x0, [x28, #16]!
  41b0e4:	lsl	x1, x8, #3
  41b0e8:	bl	4024c0 <realloc@plt>
  41b0ec:	cbz	x0, 41aae0 <_obstack_memory_used@@Base+0x94c>
  41b0f0:	str	x0, [x28]
  41b0f4:	ldr	x9, [x27]
  41b0f8:	ldr	x8, [x21, #48]
  41b0fc:	b	41b090 <_obstack_memory_used@@Base+0xefc>
  41b100:	stur	wzr, [x29, #-44]
  41b104:	cbnz	x25, 41b1f8 <_obstack_memory_used@@Base+0x1064>
  41b108:	ldrb	w9, [x20, #176]
  41b10c:	tbz	w9, #2, 41b1f8 <_obstack_memory_used@@Base+0x1064>
  41b110:	ldr	x8, [x19, #40]
  41b114:	cbnz	x8, 41b1f8 <_obstack_memory_used@@Base+0x1064>
  41b118:	ldr	x11, [x20, #16]
  41b11c:	cbz	x11, 41b1c4 <_obstack_memory_used@@Base+0x1030>
  41b120:	ldr	x10, [x20]
  41b124:	adrp	x13, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41b128:	mov	w8, wzr
  41b12c:	mov	w12, wzr
  41b130:	add	x13, x13, #0x90
  41b134:	mov	w14, #0x1                   	// #1
  41b138:	mov	w15, #0x8b                  	// #139
  41b13c:	mov	x16, x10
  41b140:	b	41b160 <_obstack_memory_used@@Base+0xfcc>
  41b144:	ldrsb	w17, [x16]
  41b148:	cmp	w17, #0x0
  41b14c:	cset	w17, lt  // lt = tstop
  41b150:	orr	w12, w12, w17
  41b154:	subs	x11, x11, #0x1
  41b158:	add	x16, x16, #0x10
  41b15c:	b.eq	41b494 <_obstack_memory_used@@Base+0x1300>  // b.none
  41b160:	ldrb	w17, [x16, #8]
  41b164:	sub	w17, w17, #0x1
  41b168:	cmp	w17, #0xb
  41b16c:	b.hi	41b518 <_obstack_memory_used@@Base+0x1384>  // b.pmore
  41b170:	adr	x18, 41b144 <_obstack_memory_used@@Base+0xfb0>
  41b174:	ldrb	w0, [x13, x17]
  41b178:	add	x18, x18, x0, lsl #2
  41b17c:	br	x18
  41b180:	ldr	x17, [x16]
  41b184:	ldr	x18, [x17, #16]
  41b188:	cbnz	x18, 41b1f8 <_obstack_memory_used@@Base+0x1064>
  41b18c:	ldr	x17, [x17, #24]
  41b190:	cbz	x17, 41b154 <_obstack_memory_used@@Base+0xfc0>
  41b194:	b	41b1f8 <_obstack_memory_used@@Base+0x1064>
  41b198:	ldr	w17, [x16]
  41b19c:	sub	w17, w17, #0x10
  41b1a0:	ror	w17, w17, #4
  41b1a4:	cmp	w17, #0x7
  41b1a8:	b.hi	41b1f8 <_obstack_memory_used@@Base+0x1064>  // b.pmore
  41b1ac:	lsl	w17, w14, w17
  41b1b0:	tst	w17, w15
  41b1b4:	b.ne	41b154 <_obstack_memory_used@@Base+0xfc0>  // b.any
  41b1b8:	b	41b1f8 <_obstack_memory_used@@Base+0x1064>
  41b1bc:	mov	w8, #0x1                   	// #1
  41b1c0:	b	41b154 <_obstack_memory_used@@Base+0xfc0>
  41b1c4:	mov	w8, wzr
  41b1c8:	ldr	x10, [x20, #152]
  41b1cc:	mov	w12, #0x2                   	// #2
  41b1d0:	and	w9, w9, #0xfffffff9
  41b1d4:	mov	w11, #0x1                   	// #1
  41b1d8:	cmp	x10, #0x0
  41b1dc:	cset	w10, gt
  41b1e0:	orr	w8, w8, w10
  41b1e4:	tst	w8, #0x1
  41b1e8:	csel	w8, w12, wzr, ne  // ne = any
  41b1ec:	orr	w8, w8, w9
  41b1f0:	str	w11, [x20, #180]
  41b1f4:	strb	w8, [x20, #176]
  41b1f8:	ldr	x8, [x20, #104]
  41b1fc:	ldr	x24, [x20, #48]
  41b200:	ldr	x8, [x8, #24]
  41b204:	ldr	x23, [x8, #56]
  41b208:	mov	w8, #0x18                  	// #24
  41b20c:	str	x23, [x20, #144]
  41b210:	madd	x8, x23, x8, x24
  41b214:	ldr	x22, [x8, #8]
  41b218:	stur	x22, [x29, #-32]
  41b21c:	ldr	x25, [x8, #8]
  41b220:	cmp	x25, #0x1
  41b224:	b.lt	41b368 <_obstack_memory_used@@Base+0x11d4>  // b.tstop
  41b228:	lsl	x0, x22, #3
  41b22c:	stur	x22, [x29, #-40]
  41b230:	bl	4023a0 <malloc@plt>
  41b234:	stur	x0, [x29, #-24]
  41b238:	cbz	x0, 41b508 <_obstack_memory_used@@Base+0x1374>
  41b23c:	mov	w8, #0x18                  	// #24
  41b240:	madd	x8, x23, x8, x24
  41b244:	ldr	x1, [x8, #16]
  41b248:	lsl	x2, x25, #3
  41b24c:	mov	x21, x0
  41b250:	bl	402210 <memcpy@plt>
  41b254:	cmp	x22, #0x1
  41b258:	stur	wzr, [x29, #-12]
  41b25c:	b.lt	41b374 <_obstack_memory_used@@Base+0x11e0>  // b.tstop
  41b260:	ldr	x8, [x20, #152]
  41b264:	cmp	x8, #0x1
  41b268:	b.lt	41b374 <_obstack_memory_used@@Base+0x11e0>  // b.tstop
  41b26c:	mov	x8, xzr
  41b270:	mov	w23, #0x18                  	// #24
  41b274:	ldr	x9, [x21, x8, lsl #3]
  41b278:	ldr	x10, [x20]
  41b27c:	add	x11, x10, x9, lsl #4
  41b280:	ldrb	w11, [x11, #8]
  41b284:	cmp	w11, #0x4
  41b288:	b.ne	41b354 <_obstack_memory_used@@Base+0x11c0>  // b.any
  41b28c:	cmp	x22, #0x1
  41b290:	b.lt	41b2e0 <_obstack_memory_used@@Base+0x114c>  // b.tstop
  41b294:	mov	x11, xzr
  41b298:	add	x12, x10, x9, lsl #4
  41b29c:	b	41b2ac <_obstack_memory_used@@Base+0x1118>
  41b2a0:	add	x11, x11, #0x1
  41b2a4:	cmp	x22, x11
  41b2a8:	b.eq	41b354 <_obstack_memory_used@@Base+0x11c0>  // b.none
  41b2ac:	ldr	x13, [x21, x11, lsl #3]
  41b2b0:	add	x14, x10, x13, lsl #4
  41b2b4:	ldrb	w14, [x14, #8]
  41b2b8:	cmp	w14, #0x9
  41b2bc:	b.ne	41b2a0 <_obstack_memory_used@@Base+0x110c>  // b.any
  41b2c0:	lsl	x13, x13, #4
  41b2c4:	ldr	x13, [x10, x13]
  41b2c8:	ldr	x14, [x12]
  41b2cc:	cmp	x13, x14
  41b2d0:	b.ne	41b2a0 <_obstack_memory_used@@Base+0x110c>  // b.any
  41b2d4:	cmp	x11, x22
  41b2d8:	b.ne	41b2ec <_obstack_memory_used@@Base+0x1158>  // b.any
  41b2dc:	b	41b354 <_obstack_memory_used@@Base+0x11c0>
  41b2e0:	mov	x11, xzr
  41b2e4:	cmp	x11, x22
  41b2e8:	b.eq	41b354 <_obstack_memory_used@@Base+0x11c0>  // b.none
  41b2ec:	ldr	x10, [x20, #40]
  41b2f0:	madd	x9, x9, x23, x10
  41b2f4:	ldr	x9, [x9, #16]
  41b2f8:	subs	x10, x22, #0x1
  41b2fc:	ldr	x9, [x9]
  41b300:	b.lt	41b338 <_obstack_memory_used@@Base+0x11a4>  // b.tstop
  41b304:	mov	x11, xzr
  41b308:	b.eq	41b32c <_obstack_memory_used@@Base+0x1198>  // b.none
  41b30c:	add	x12, x11, x10
  41b310:	lsr	x12, x12, #1
  41b314:	ldr	x13, [x21, x12, lsl #3]
  41b318:	cmp	x13, x9
  41b31c:	csinc	x11, x11, x12, ge  // ge = tcont
  41b320:	csel	x10, x10, x12, lt  // lt = tstop
  41b324:	cmp	x11, x10
  41b328:	b.cc	41b30c <_obstack_memory_used@@Base+0x1178>  // b.lo, b.ul, b.last
  41b32c:	ldr	x10, [x21, x11, lsl #3]
  41b330:	cmp	x10, x9
  41b334:	b.eq	41b354 <_obstack_memory_used@@Base+0x11c0>  // b.none
  41b338:	ldr	x8, [x20, #48]
  41b33c:	sub	x0, x29, #0x28
  41b340:	madd	x1, x9, x23, x8
  41b344:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  41b348:	cbnz	w0, 41b40c <_obstack_memory_used@@Base+0x1278>
  41b34c:	ldur	x22, [x29, #-32]
  41b350:	mov	x8, xzr
  41b354:	add	x8, x8, #0x1
  41b358:	cmp	x8, x22
  41b35c:	b.ge	41b374 <_obstack_memory_used@@Base+0x11e0>  // b.tcont
  41b360:	ldur	x21, [x29, #-24]
  41b364:	b	41b274 <_obstack_memory_used@@Base+0x10e0>
  41b368:	stp	xzr, xzr, [x29, #-40]
  41b36c:	stur	xzr, [x29, #-24]
  41b370:	stur	wzr, [x29, #-12]
  41b374:	sub	x0, x29, #0xc
  41b378:	sub	x2, x29, #0x28
  41b37c:	mov	x1, x20
  41b380:	mov	w3, wzr
  41b384:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41b388:	str	x0, [x20, #72]
  41b38c:	cbz	x0, 41b500 <_obstack_memory_used@@Base+0x136c>
  41b390:	ldrsb	w8, [x0, #104]
  41b394:	tbnz	w8, #31, 41b3a4 <_obstack_memory_used@@Base+0x1210>
  41b398:	stp	x0, x0, [x20, #88]
  41b39c:	str	x0, [x20, #80]
  41b3a0:	b	41b400 <_obstack_memory_used@@Base+0x126c>
  41b3a4:	sub	x0, x29, #0xc
  41b3a8:	sub	x2, x29, #0x28
  41b3ac:	mov	w3, #0x1                   	// #1
  41b3b0:	mov	x1, x20
  41b3b4:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41b3b8:	str	x0, [x20, #80]
  41b3bc:	sub	x0, x29, #0xc
  41b3c0:	sub	x2, x29, #0x28
  41b3c4:	mov	w3, #0x2                   	// #2
  41b3c8:	mov	x1, x20
  41b3cc:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41b3d0:	str	x0, [x20, #88]
  41b3d4:	sub	x0, x29, #0xc
  41b3d8:	sub	x2, x29, #0x28
  41b3dc:	mov	w3, #0x6                   	// #6
  41b3e0:	mov	x1, x20
  41b3e4:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41b3e8:	ldr	x8, [x20, #80]
  41b3ec:	str	x0, [x20, #96]
  41b3f0:	cbz	x8, 41b500 <_obstack_memory_used@@Base+0x136c>
  41b3f4:	cbz	x0, 41b500 <_obstack_memory_used@@Base+0x136c>
  41b3f8:	ldr	x8, [x20, #88]
  41b3fc:	cbz	x8, 41b500 <_obstack_memory_used@@Base+0x136c>
  41b400:	ldur	x0, [x29, #-24]
  41b404:	bl	402620 <free@plt>
  41b408:	mov	w0, wzr
  41b40c:	stur	w0, [x29, #-44]
  41b410:	ldr	x21, [x19]
  41b414:	ldr	x0, [x21, #112]
  41b418:	cbz	x0, 41b42c <_obstack_memory_used@@Base+0x1298>
  41b41c:	ldr	x22, [x0]
  41b420:	bl	402620 <free@plt>
  41b424:	mov	x0, x22
  41b428:	cbnz	x22, 41b41c <_obstack_memory_used@@Base+0x1288>
  41b42c:	ldr	x0, [x21, #32]
  41b430:	mov	w8, #0xf                   	// #15
  41b434:	str	w8, [x21, #128]
  41b438:	stp	xzr, xzr, [x21, #104]
  41b43c:	bl	402620 <free@plt>
  41b440:	str	xzr, [x21, #32]
  41b444:	ldr	x0, [sp, #24]
  41b448:	bl	402620 <free@plt>
  41b44c:	ldr	x0, [sp, #32]
  41b450:	bl	402620 <free@plt>
  41b454:	ldrb	w8, [sp, #147]
  41b458:	cbz	w8, 41b464 <_obstack_memory_used@@Base+0x12d0>
  41b45c:	ldr	x0, [sp, #16]
  41b460:	bl	402620 <free@plt>
  41b464:	ldur	w8, [x29, #-44]
  41b468:	cbnz	w8, 41aab4 <_obstack_memory_used@@Base+0x920>
  41b46c:	mov	w21, wzr
  41b470:	mov	w0, w21
  41b474:	ldp	x20, x19, [sp, #288]
  41b478:	ldp	x22, x21, [sp, #272]
  41b47c:	ldp	x24, x23, [sp, #256]
  41b480:	ldp	x26, x25, [sp, #240]
  41b484:	ldp	x28, x27, [sp, #224]
  41b488:	ldp	x29, x30, [sp, #208]
  41b48c:	add	sp, sp, #0x130
  41b490:	ret
  41b494:	orr	w11, w12, w8
  41b498:	tbz	w11, #0, 41b1c8 <_obstack_memory_used@@Base+0x1034>
  41b49c:	mov	x9, xzr
  41b4a0:	mov	w11, #0x1                   	// #1
  41b4a4:	add	x12, x10, x9
  41b4a8:	ldr	w13, [x12, #8]
  41b4ac:	and	w14, w13, #0xff
  41b4b0:	cmp	w14, #0x5
  41b4b4:	b.eq	41b4d0 <_obstack_memory_used@@Base+0x133c>  // b.none
  41b4b8:	cmp	w14, #0x1
  41b4bc:	b.ne	41b4dc <_obstack_memory_used@@Base+0x1348>  // b.any
  41b4c0:	ldrsb	w10, [x10, x9]
  41b4c4:	tbz	w10, #31, 41b4dc <_obstack_memory_used@@Base+0x1348>
  41b4c8:	and	w10, w13, #0xffdfffff
  41b4cc:	b	41b4d8 <_obstack_memory_used@@Base+0x1344>
  41b4d0:	and	w10, w13, #0xffffff00
  41b4d4:	orr	w10, w10, #0x7
  41b4d8:	str	w10, [x12, #8]
  41b4dc:	ldr	x10, [x20, #16]
  41b4e0:	cmp	x11, x10
  41b4e4:	b.cs	41b4f8 <_obstack_memory_used@@Base+0x1364>  // b.hs, b.nlast
  41b4e8:	ldr	x10, [x20]
  41b4ec:	add	x9, x9, #0x10
  41b4f0:	add	x11, x11, #0x1
  41b4f4:	b	41b4a4 <_obstack_memory_used@@Base+0x1310>
  41b4f8:	ldrb	w9, [x20, #176]
  41b4fc:	b	41b1c8 <_obstack_memory_used@@Base+0x1034>
  41b500:	ldur	w0, [x29, #-12]
  41b504:	b	41b40c <_obstack_memory_used@@Base+0x1278>
  41b508:	mov	w0, #0xc                   	// #12
  41b50c:	stp	xzr, xzr, [x29, #-40]
  41b510:	stur	w0, [x29, #-12]
  41b514:	b	41b40c <_obstack_memory_used@@Base+0x1278>
  41b518:	bl	402560 <abort@plt>
  41b51c:	adrp	x9, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  41b520:	ldr	x8, [x9, #3472]
  41b524:	str	x0, [x9, #3472]
  41b528:	mov	x0, x8
  41b52c:	ret
  41b530:	stp	x29, x30, [sp, #-48]!
  41b534:	stp	x20, x19, [sp, #32]
  41b538:	ldr	x20, [x0, #32]
  41b53c:	str	x21, [sp, #16]
  41b540:	ldr	x21, [x0]
  41b544:	movi	v0.2d, #0x0
  41b548:	stp	q0, q0, [x20, #224]
  41b54c:	stp	q0, q0, [x20, #192]
  41b550:	stp	q0, q0, [x20, #160]
  41b554:	stp	q0, q0, [x20, #128]
  41b558:	stp	q0, q0, [x20, #96]
  41b55c:	stp	q0, q0, [x20, #64]
  41b560:	stp	q0, q0, [x20, #32]
  41b564:	stp	q0, q0, [x20]
  41b568:	ldr	x1, [x21, #72]
  41b56c:	mov	x2, x20
  41b570:	mov	x29, sp
  41b574:	mov	x19, x0
  41b578:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41b57c:	ldp	x8, x1, [x21, #72]
  41b580:	cmp	x8, x1
  41b584:	b.eq	41b598 <_obstack_memory_used@@Base+0x1404>  // b.none
  41b588:	mov	x0, x19
  41b58c:	mov	x2, x20
  41b590:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41b594:	ldr	x8, [x21, #72]
  41b598:	ldr	x1, [x21, #88]
  41b59c:	cmp	x8, x1
  41b5a0:	b.eq	41b5b4 <_obstack_memory_used@@Base+0x1420>  // b.none
  41b5a4:	mov	x0, x19
  41b5a8:	mov	x2, x20
  41b5ac:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41b5b0:	ldr	x8, [x21, #72]
  41b5b4:	ldr	x1, [x21, #96]
  41b5b8:	cmp	x8, x1
  41b5bc:	b.eq	41b5cc <_obstack_memory_used@@Base+0x1438>  // b.none
  41b5c0:	mov	x0, x19
  41b5c4:	mov	x2, x20
  41b5c8:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41b5cc:	ldrb	w8, [x19, #56]
  41b5d0:	ldr	x21, [sp, #16]
  41b5d4:	mov	w0, wzr
  41b5d8:	orr	w8, w8, #0x8
  41b5dc:	strb	w8, [x19, #56]
  41b5e0:	ldp	x20, x19, [sp, #32]
  41b5e4:	ldp	x29, x30, [sp], #48
  41b5e8:	ret
  41b5ec:	sub	sp, sp, #0x1e0
  41b5f0:	stp	x29, x30, [sp, #384]
  41b5f4:	stp	x28, x27, [sp, #400]
  41b5f8:	stp	x26, x25, [sp, #416]
  41b5fc:	stp	x24, x23, [sp, #432]
  41b600:	stp	x22, x21, [sp, #448]
  41b604:	stp	x20, x19, [sp, #464]
  41b608:	ldr	x28, [x0]
  41b60c:	mov	x20, x2
  41b610:	mov	x23, x0
  41b614:	add	x29, sp, #0x180
  41b618:	ldr	w8, [x28, #180]
  41b61c:	cmp	w8, #0x1
  41b620:	b.ne	41b640 <_obstack_memory_used@@Base+0x14ac>  // b.any
  41b624:	ldrb	w8, [x23, #26]
  41b628:	ubfx	w8, w8, #6, #1
  41b62c:	str	w8, [sp, #68]
  41b630:	ldr	x8, [x1, #16]
  41b634:	cmp	x8, #0x1
  41b638:	b.ge	41b650 <_obstack_memory_used@@Base+0x14bc>  // b.tcont
  41b63c:	b	41bd00 <_obstack_memory_used@@Base+0x1b6c>
  41b640:	str	wzr, [sp, #68]
  41b644:	ldr	x8, [x1, #16]
  41b648:	cmp	x8, #0x1
  41b64c:	b.lt	41bd00 <_obstack_memory_used@@Base+0x1b6c>  // b.tstop
  41b650:	add	x8, x20, #0x3
  41b654:	str	x8, [sp, #16]
  41b658:	adrp	x8, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41b65c:	ldr	q0, [x8, #1856]
  41b660:	add	x9, sp, #0x68
  41b664:	mov	w8, #0x2                   	// #2
  41b668:	mov	x25, xzr
  41b66c:	mov	w26, #0x1                   	// #1
  41b670:	orr	x9, x9, #0x1
  41b674:	str	q0, [sp, #48]
  41b678:	dup	v0.2d, x8
  41b67c:	str	x9, [sp, #8]
  41b680:	str	q0, [sp, #80]
  41b684:	stp	x23, x28, [sp, #24]
  41b688:	str	x1, [sp, #72]
  41b68c:	b	41b6a4 <_obstack_memory_used@@Base+0x1510>
  41b690:	ldr	x1, [sp, #72]
  41b694:	add	x25, x25, #0x1
  41b698:	ldr	x8, [x1, #16]
  41b69c:	cmp	x25, x8
  41b6a0:	b.ge	41bd00 <_obstack_memory_used@@Base+0x1b6c>  // b.tcont
  41b6a4:	ldr	x8, [x1, #24]
  41b6a8:	ldr	x10, [x28]
  41b6ac:	ldr	x19, [x8, x25, lsl #3]
  41b6b0:	add	x9, x10, x19, lsl #4
  41b6b4:	ldrb	w8, [x9, #8]
  41b6b8:	sub	w11, w8, #0x1
  41b6bc:	cmp	w11, #0x6
  41b6c0:	b.hi	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.pmore
  41b6c4:	adrp	x14, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41b6c8:	add	x14, x14, #0x9c
  41b6cc:	adr	x12, 41b690 <_obstack_memory_used@@Base+0x14fc>
  41b6d0:	ldrh	w13, [x14, x11, lsl #1]
  41b6d4:	add	x12, x12, x13, lsl #2
  41b6d8:	br	x12
  41b6dc:	ldrb	w21, [x9]
  41b6e0:	ldr	w8, [sp, #68]
  41b6e4:	strb	w26, [x20, x21]
  41b6e8:	cbz	w8, 41b6fc <_obstack_memory_used@@Base+0x1568>
  41b6ec:	bl	402330 <__ctype_tolower_loc@plt>
  41b6f0:	ldr	x8, [x0]
  41b6f4:	ldrsw	x8, [x8, x21, lsl #2]
  41b6f8:	strb	w26, [x20, x8]
  41b6fc:	ldrb	w8, [x23, #26]
  41b700:	tbz	w8, #6, 41b690 <_obstack_memory_used@@Base+0x14fc>
  41b704:	ldr	w8, [x28, #180]
  41b708:	cmp	w8, #0x2
  41b70c:	b.lt	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.tstop
  41b710:	ldr	x9, [x28]
  41b714:	lsl	x8, x19, #4
  41b718:	add	x10, x19, #0x1
  41b71c:	mov	w14, #0x1                   	// #1
  41b720:	ldrb	w9, [x9, x8]
  41b724:	movk	w14, #0x20, lsl #16
  41b728:	strb	w9, [sp, #104]
  41b72c:	ldr	x9, [x28, #16]
  41b730:	cmp	x10, x9
  41b734:	ldr	x9, [sp, #8]
  41b738:	b.cs	41b778 <_obstack_memory_used@@Base+0x15e4>  // b.hs, b.nlast
  41b73c:	ldr	x9, [sp, #8]
  41b740:	ldr	x11, [x28]
  41b744:	add	w13, w14, #0xfe
  41b748:	add	x11, x11, x8
  41b74c:	ldr	w12, [x11, #24]
  41b750:	and	w12, w12, w13
  41b754:	cmp	w12, w14
  41b758:	b.ne	41b778 <_obstack_memory_used@@Base+0x15e4>  // b.any
  41b75c:	ldrb	w11, [x11, #16]
  41b760:	add	x10, x10, #0x1
  41b764:	add	x8, x8, #0x10
  41b768:	strb	w11, [x9], #1
  41b76c:	ldr	x11, [x28, #16]
  41b770:	cmp	x10, x11
  41b774:	b.cc	41b740 <_obstack_memory_used@@Base+0x15ac>  // b.lo, b.ul, b.last
  41b778:	add	x8, sp, #0x68
  41b77c:	sub	x22, x9, x8
  41b780:	sub	x0, x29, #0xc
  41b784:	add	x1, sp, #0x68
  41b788:	sub	x3, x29, #0x18
  41b78c:	mov	x2, x22
  41b790:	stur	xzr, [x29, #-24]
  41b794:	bl	419da4 <wcrtomb@plt+0x17534>
  41b798:	cmp	x0, x22
  41b79c:	b.ne	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.any
  41b7a0:	ldur	w0, [x29, #-12]
  41b7a4:	bl	402810 <towlower@plt>
  41b7a8:	mov	w1, w0
  41b7ac:	add	x0, sp, #0x68
  41b7b0:	sub	x2, x29, #0x18
  41b7b4:	bl	402870 <wcrtomb@plt>
  41b7b8:	cmn	x0, #0x1
  41b7bc:	b.eq	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.none
  41b7c0:	ldrb	w8, [sp, #104]
  41b7c4:	strb	w26, [x20, x8]
  41b7c8:	b	41b690 <_obstack_memory_used@@Base+0x14fc>
  41b7cc:	lsl	x22, x19, #4
  41b7d0:	ldr	x8, [x10, x22]
  41b7d4:	ldr	x19, [x8]
  41b7d8:	ldr	w8, [sp, #68]
  41b7dc:	cbz	w8, 41b94c <_obstack_memory_used@@Base+0x17b8>
  41b7e0:	ldr	x9, [sp, #16]
  41b7e4:	mov	x27, xzr
  41b7e8:	mov	w8, #0x83                  	// #131
  41b7ec:	b	41b814 <_obstack_memory_used@@Base+0x1680>
  41b7f0:	bl	402330 <__ctype_tolower_loc@plt>
  41b7f4:	ldr	x8, [x0]
  41b7f8:	ldr	w8, [x8, x27, lsl #2]
  41b7fc:	strb	w26, [x20, w8, sxtw]
  41b800:	add	x27, x27, #0x1
  41b804:	add	w8, w21, #0x1
  41b808:	cmp	x27, #0x40
  41b80c:	add	x9, x24, #0x1
  41b810:	b.eq	41b9b4 <_obstack_memory_used@@Base+0x1820>  // b.none
  41b814:	lsr	x10, x19, x27
  41b818:	mov	w21, w8
  41b81c:	mov	x24, x9
  41b820:	tbz	w10, #0, 41b800 <_obstack_memory_used@@Base+0x166c>
  41b824:	add	w8, w27, #0x80
  41b828:	cmp	w8, #0x180
  41b82c:	strb	w26, [x20, x27]
  41b830:	b.cc	41b7f0 <_obstack_memory_used@@Base+0x165c>  // b.lo, b.ul, b.last
  41b834:	mov	w8, w27
  41b838:	b	41b7fc <_obstack_memory_used@@Base+0x1668>
  41b83c:	ldr	w8, [x28, #180]
  41b840:	ldr	x22, [x9]
  41b844:	cmp	w8, #0x2
  41b848:	b.lt	41b8a4 <_obstack_memory_used@@Base+0x1710>  // b.tstop
  41b84c:	ldr	x8, [x22, #72]
  41b850:	cbnz	x8, 41b864 <_obstack_memory_used@@Base+0x16d0>
  41b854:	ldrb	w8, [x22, #32]
  41b858:	tbnz	w8, #0, 41b864 <_obstack_memory_used@@Base+0x16d0>
  41b85c:	ldr	x8, [x22, #64]
  41b860:	cbz	x8, 41b8a4 <_obstack_memory_used@@Base+0x1710>
  41b864:	sturb	wzr, [x29, #-24]
  41b868:	b	41b878 <_obstack_memory_used@@Base+0x16e4>
  41b86c:	add	w8, w8, #0x1
  41b870:	sturb	w8, [x29, #-24]
  41b874:	tbnz	w8, #8, 41b690 <_obstack_memory_used@@Base+0x14fc>
  41b878:	sub	x1, x29, #0x18
  41b87c:	add	x3, sp, #0x68
  41b880:	mov	w2, #0x1                   	// #1
  41b884:	mov	x0, xzr
  41b888:	str	xzr, [sp, #104]
  41b88c:	bl	419da4 <wcrtomb@plt+0x17534>
  41b890:	ldurb	w8, [x29, #-24]
  41b894:	cmn	x0, #0x2
  41b898:	b.ne	41b86c <_obstack_memory_used@@Base+0x16d8>  // b.any
  41b89c:	strb	w26, [x20, x8]
  41b8a0:	b	41b86c <_obstack_memory_used@@Base+0x16d8>
  41b8a4:	ldr	x8, [x22, #40]
  41b8a8:	cmp	x8, #0x1
  41b8ac:	b.lt	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.tstop
  41b8b0:	ldr	w8, [sp, #68]
  41b8b4:	tbz	w8, #0, 41bc44 <_obstack_memory_used@@Base+0x1ab0>
  41b8b8:	mov	x21, xzr
  41b8bc:	b	41b8d0 <_obstack_memory_used@@Base+0x173c>
  41b8c0:	ldr	x8, [x22, #40]
  41b8c4:	add	x21, x21, #0x1
  41b8c8:	cmp	x21, x8
  41b8cc:	b.ge	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.tcont
  41b8d0:	stur	xzr, [x29, #-24]
  41b8d4:	ldr	x8, [x22]
  41b8d8:	add	x0, sp, #0x68
  41b8dc:	sub	x2, x29, #0x18
  41b8e0:	ldr	w1, [x8, x21, lsl #2]
  41b8e4:	bl	402870 <wcrtomb@plt>
  41b8e8:	cmn	x0, #0x1
  41b8ec:	b.eq	41b908 <_obstack_memory_used@@Base+0x1774>  // b.none
  41b8f0:	ldrb	w19, [sp, #104]
  41b8f4:	strb	w26, [x20, x19]
  41b8f8:	bl	402330 <__ctype_tolower_loc@plt>
  41b8fc:	ldr	x8, [x0]
  41b900:	ldrsw	x8, [x8, x19, lsl #2]
  41b904:	strb	w26, [x20, x8]
  41b908:	ldrb	w8, [x23, #26]
  41b90c:	tbz	w8, #6, 41b8c0 <_obstack_memory_used@@Base+0x172c>
  41b910:	ldr	w8, [x28, #180]
  41b914:	cmp	w8, #0x2
  41b918:	b.lt	41b8c0 <_obstack_memory_used@@Base+0x172c>  // b.tstop
  41b91c:	ldr	x8, [x22]
  41b920:	ldr	w0, [x8, x21, lsl #2]
  41b924:	bl	402810 <towlower@plt>
  41b928:	mov	w1, w0
  41b92c:	add	x0, sp, #0x68
  41b930:	sub	x2, x29, #0x18
  41b934:	bl	402870 <wcrtomb@plt>
  41b938:	cmn	x0, #0x1
  41b93c:	b.eq	41b8c0 <_obstack_memory_used@@Base+0x172c>  // b.none
  41b940:	ldrb	w8, [sp, #104]
  41b944:	strb	w26, [x20, x8]
  41b948:	b	41b8c0 <_obstack_memory_used@@Base+0x172c>
  41b94c:	ldr	q1, [sp, #48]
  41b950:	mov	x8, xzr
  41b954:	dup	v0.2d, x19
  41b958:	mov	w10, #0x2                   	// #2
  41b95c:	b	41b974 <_obstack_memory_used@@Base+0x17e0>
  41b960:	ldr	q2, [sp, #80]
  41b964:	add	x8, x8, #0x2
  41b968:	cmp	x8, #0x40
  41b96c:	add	v1.2d, v1.2d, v2.2d
  41b970:	b.eq	41ba1c <_obstack_memory_used@@Base+0x1888>  // b.none
  41b974:	dup	v2.2d, x26
  41b978:	ushl	v2.2d, v2.2d, v1.2d
  41b97c:	cmtst	v3.2d, v2.2d, v0.2d
  41b980:	xtn	v3.2s, v3.2d
  41b984:	and	v2.16b, v2.16b, v0.16b
  41b988:	fmov	w9, s3
  41b98c:	tbz	w9, #0, 41b994 <_obstack_memory_used@@Base+0x1800>
  41b990:	strb	w26, [x20, x8]
  41b994:	cmeq	v2.2d, v2.2d, #0
  41b998:	mvn	v2.16b, v2.16b
  41b99c:	xtn	v2.2s, v2.2d
  41b9a0:	mov	w9, v2.s[1]
  41b9a4:	tbz	w9, #0, 41b960 <_obstack_memory_used@@Base+0x17cc>
  41b9a8:	add	x9, x20, x8
  41b9ac:	strb	w26, [x9, #1]
  41b9b0:	b	41b960 <_obstack_memory_used@@Base+0x17cc>
  41b9b4:	ldr	x8, [x28]
  41b9b8:	mov	x28, xzr
  41b9bc:	str	x22, [sp, #40]
  41b9c0:	ldr	x8, [x8, x22]
  41b9c4:	ldr	x23, [x8, #8]
  41b9c8:	b	41b9f4 <_obstack_memory_used@@Base+0x1860>
  41b9cc:	bl	402330 <__ctype_tolower_loc@plt>
  41b9d0:	ldr	x8, [x0]
  41b9d4:	ldr	w8, [x8, x27, lsl #2]
  41b9d8:	strb	w26, [x20, w8, sxtw]
  41b9dc:	add	x28, x28, #0x1
  41b9e0:	add	x27, x27, #0x1
  41b9e4:	add	w21, w22, #0x1
  41b9e8:	cmp	x28, #0x40
  41b9ec:	add	x24, x19, #0x1
  41b9f0:	b.eq	41ba90 <_obstack_memory_used@@Base+0x18fc>  // b.none
  41b9f4:	lsr	x8, x23, x28
  41b9f8:	mov	w22, w21
  41b9fc:	mov	x19, x24
  41ba00:	tbz	w8, #0, 41b9dc <_obstack_memory_used@@Base+0x1848>
  41ba04:	add	w8, w27, #0x80
  41ba08:	cmp	w8, #0x180
  41ba0c:	strb	w26, [x20, x27]
  41ba10:	b.cc	41b9cc <_obstack_memory_used@@Base+0x1838>  // b.lo, b.ul, b.last
  41ba14:	mov	w8, w27
  41ba18:	b	41b9d8 <_obstack_memory_used@@Base+0x1844>
  41ba1c:	ldr	x9, [x28]
  41ba20:	ldr	q1, [sp, #48]
  41ba24:	mov	x8, xzr
  41ba28:	ldr	x9, [x9, x22]
  41ba2c:	add	x9, x9, #0x8
  41ba30:	ld1r	{v0.2d}, [x9]
  41ba34:	b	41ba4c <_obstack_memory_used@@Base+0x18b8>
  41ba38:	add	x8, x8, #0x2
  41ba3c:	dup	v2.2d, x10
  41ba40:	cmp	x8, #0x40
  41ba44:	add	v1.2d, v1.2d, v2.2d
  41ba48:	b.eq	41baf8 <_obstack_memory_used@@Base+0x1964>  // b.none
  41ba4c:	dup	v2.2d, x26
  41ba50:	ushl	v2.2d, v2.2d, v1.2d
  41ba54:	cmtst	v3.2d, v2.2d, v0.2d
  41ba58:	xtn	v3.2s, v3.2d
  41ba5c:	and	v2.16b, v2.16b, v0.16b
  41ba60:	fmov	w9, s3
  41ba64:	tbz	w9, #0, 41ba70 <_obstack_memory_used@@Base+0x18dc>
  41ba68:	add	x9, x20, x8
  41ba6c:	strb	w26, [x9, #64]
  41ba70:	cmeq	v2.2d, v2.2d, #0
  41ba74:	mvn	v2.16b, v2.16b
  41ba78:	xtn	v2.2s, v2.2d
  41ba7c:	mov	w9, v2.s[1]
  41ba80:	tbz	w9, #0, 41ba38 <_obstack_memory_used@@Base+0x18a4>
  41ba84:	add	x9, x20, x8
  41ba88:	strb	w26, [x9, #65]
  41ba8c:	b	41ba38 <_obstack_memory_used@@Base+0x18a4>
  41ba90:	ldp	x8, x9, [sp, #32]
  41ba94:	mov	x28, xzr
  41ba98:	ldr	x8, [x8]
  41ba9c:	ldr	x8, [x8, x9]
  41baa0:	ldr	x23, [x8, #16]
  41baa4:	b	41bad0 <_obstack_memory_used@@Base+0x193c>
  41baa8:	bl	402330 <__ctype_tolower_loc@plt>
  41baac:	ldr	x8, [x0]
  41bab0:	ldr	w8, [x8, x27, lsl #2]
  41bab4:	strb	w26, [x20, w8, sxtw]
  41bab8:	add	x28, x28, #0x1
  41babc:	add	x27, x27, #0x1
  41bac0:	add	w22, w24, #0x1
  41bac4:	cmp	x28, #0x40
  41bac8:	add	x19, x21, #0x1
  41bacc:	b.eq	41bb6c <_obstack_memory_used@@Base+0x19d8>  // b.none
  41bad0:	lsr	x8, x23, x28
  41bad4:	mov	w24, w22
  41bad8:	mov	x21, x19
  41badc:	tbz	w8, #0, 41bab8 <_obstack_memory_used@@Base+0x1924>
  41bae0:	add	w8, w27, #0x80
  41bae4:	cmp	w8, #0x180
  41bae8:	strb	w26, [x20, x27]
  41baec:	b.cc	41baa8 <_obstack_memory_used@@Base+0x1914>  // b.lo, b.ul, b.last
  41baf0:	mov	w8, w27
  41baf4:	b	41bab4 <_obstack_memory_used@@Base+0x1920>
  41baf8:	ldr	x9, [x28]
  41bafc:	ldr	q1, [sp, #48]
  41bb00:	mov	x8, xzr
  41bb04:	ldr	x9, [x9, x22]
  41bb08:	add	x9, x9, #0x10
  41bb0c:	ld1r	{v0.2d}, [x9]
  41bb10:	b	41bb28 <_obstack_memory_used@@Base+0x1994>
  41bb14:	add	x8, x8, #0x2
  41bb18:	dup	v2.2d, x10
  41bb1c:	cmp	x8, #0x40
  41bb20:	add	v1.2d, v1.2d, v2.2d
  41bb24:	b.eq	41bbcc <_obstack_memory_used@@Base+0x1a38>  // b.none
  41bb28:	dup	v2.2d, x26
  41bb2c:	ushl	v2.2d, v2.2d, v1.2d
  41bb30:	cmtst	v3.2d, v2.2d, v0.2d
  41bb34:	xtn	v3.2s, v3.2d
  41bb38:	and	v2.16b, v2.16b, v0.16b
  41bb3c:	fmov	w9, s3
  41bb40:	tbz	w9, #0, 41bb4c <_obstack_memory_used@@Base+0x19b8>
  41bb44:	add	x9, x20, x8
  41bb48:	strb	w26, [x9, #128]
  41bb4c:	cmeq	v2.2d, v2.2d, #0
  41bb50:	mvn	v2.16b, v2.16b
  41bb54:	xtn	v2.2s, v2.2d
  41bb58:	mov	w9, v2.s[1]
  41bb5c:	tbz	w9, #0, 41bb14 <_obstack_memory_used@@Base+0x1980>
  41bb60:	add	x9, x20, x8
  41bb64:	strb	w26, [x9, #129]
  41bb68:	b	41bb14 <_obstack_memory_used@@Base+0x1980>
  41bb6c:	ldp	x28, x9, [sp, #32]
  41bb70:	ldr	x23, [sp, #24]
  41bb74:	mov	x22, xzr
  41bb78:	ldr	x8, [x28]
  41bb7c:	ldr	x8, [x8, x9]
  41bb80:	ldr	x19, [x8, #24]
  41bb84:	b	41bbb0 <_obstack_memory_used@@Base+0x1a1c>
  41bb88:	bl	402330 <__ctype_tolower_loc@plt>
  41bb8c:	ldr	x8, [x0]
  41bb90:	ldr	w8, [x8, x27, lsl #2]
  41bb94:	strb	w26, [x20, w8, sxtw]
  41bb98:	add	x22, x22, #0x1
  41bb9c:	add	x27, x27, #0x1
  41bba0:	add	w24, w24, #0x1
  41bba4:	cmp	x22, #0x40
  41bba8:	add	x21, x21, #0x1
  41bbac:	b.eq	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.none
  41bbb0:	lsr	x8, x19, x22
  41bbb4:	tbz	w8, #0, 41bb98 <_obstack_memory_used@@Base+0x1a04>
  41bbb8:	cmp	w24, #0x180
  41bbbc:	strb	w26, [x21]
  41bbc0:	b.cc	41bb88 <_obstack_memory_used@@Base+0x19f4>  // b.lo, b.ul, b.last
  41bbc4:	mov	w8, w27
  41bbc8:	b	41bb94 <_obstack_memory_used@@Base+0x1a00>
  41bbcc:	ldr	x9, [x28]
  41bbd0:	ldr	q1, [sp, #48]
  41bbd4:	mov	x8, xzr
  41bbd8:	ldr	x9, [x9, x22]
  41bbdc:	add	x9, x9, #0x18
  41bbe0:	ld1r	{v0.2d}, [x9]
  41bbe4:	b	41bbfc <_obstack_memory_used@@Base+0x1a68>
  41bbe8:	add	x8, x8, #0x2
  41bbec:	dup	v2.2d, x10
  41bbf0:	cmp	x8, #0x40
  41bbf4:	add	v1.2d, v1.2d, v2.2d
  41bbf8:	b.eq	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.none
  41bbfc:	dup	v2.2d, x26
  41bc00:	ushl	v2.2d, v2.2d, v1.2d
  41bc04:	cmtst	v3.2d, v2.2d, v0.2d
  41bc08:	xtn	v3.2s, v3.2d
  41bc0c:	and	v2.16b, v2.16b, v0.16b
  41bc10:	fmov	w9, s3
  41bc14:	tbz	w9, #0, 41bc20 <_obstack_memory_used@@Base+0x1a8c>
  41bc18:	add	x9, x20, x8
  41bc1c:	strb	w26, [x9, #192]
  41bc20:	cmeq	v2.2d, v2.2d, #0
  41bc24:	mvn	v2.16b, v2.16b
  41bc28:	xtn	v2.2s, v2.2d
  41bc2c:	mov	w9, v2.s[1]
  41bc30:	mov	w10, #0x2                   	// #2
  41bc34:	tbz	w9, #0, 41bbe8 <_obstack_memory_used@@Base+0x1a54>
  41bc38:	add	x9, x20, x8
  41bc3c:	strb	w26, [x9, #193]
  41bc40:	b	41bbe8 <_obstack_memory_used@@Base+0x1a54>
  41bc44:	mov	x19, xzr
  41bc48:	b	41bc5c <_obstack_memory_used@@Base+0x1ac8>
  41bc4c:	ldr	x8, [x22, #40]
  41bc50:	add	x19, x19, #0x1
  41bc54:	cmp	x19, x8
  41bc58:	b.ge	41b690 <_obstack_memory_used@@Base+0x14fc>  // b.tcont
  41bc5c:	stur	xzr, [x29, #-24]
  41bc60:	ldr	x8, [x22]
  41bc64:	add	x0, sp, #0x68
  41bc68:	sub	x2, x29, #0x18
  41bc6c:	ldr	w1, [x8, x19, lsl #2]
  41bc70:	bl	402870 <wcrtomb@plt>
  41bc74:	cmn	x0, #0x1
  41bc78:	b.eq	41bc84 <_obstack_memory_used@@Base+0x1af0>  // b.none
  41bc7c:	ldrb	w8, [sp, #104]
  41bc80:	strb	w26, [x20, x8]
  41bc84:	ldrb	w8, [x23, #26]
  41bc88:	tbz	w8, #6, 41bc4c <_obstack_memory_used@@Base+0x1ab8>
  41bc8c:	ldr	w8, [x28, #180]
  41bc90:	cmp	w8, #0x2
  41bc94:	b.lt	41bc4c <_obstack_memory_used@@Base+0x1ab8>  // b.tstop
  41bc98:	ldr	x8, [x22]
  41bc9c:	ldr	w0, [x8, x19, lsl #2]
  41bca0:	bl	402810 <towlower@plt>
  41bca4:	mov	w1, w0
  41bca8:	add	x0, sp, #0x68
  41bcac:	sub	x2, x29, #0x18
  41bcb0:	bl	402870 <wcrtomb@plt>
  41bcb4:	cmn	x0, #0x1
  41bcb8:	b.eq	41bc4c <_obstack_memory_used@@Base+0x1ab8>  // b.none
  41bcbc:	ldrb	w8, [sp, #104]
  41bcc0:	strb	w26, [x20, x8]
  41bcc4:	b	41bc4c <_obstack_memory_used@@Base+0x1ab8>
  41bcc8:	movi	v0.16b, #0x1
  41bccc:	cmp	w8, #0x2
  41bcd0:	stp	q0, q0, [x20, #224]
  41bcd4:	stp	q0, q0, [x20, #192]
  41bcd8:	stp	q0, q0, [x20, #160]
  41bcdc:	stp	q0, q0, [x20, #128]
  41bce0:	stp	q0, q0, [x20, #96]
  41bce4:	stp	q0, q0, [x20, #64]
  41bce8:	stp	q0, q0, [x20, #32]
  41bcec:	stp	q0, q0, [x20]
  41bcf0:	b.ne	41bd00 <_obstack_memory_used@@Base+0x1b6c>  // b.any
  41bcf4:	ldrb	w8, [x23, #56]
  41bcf8:	orr	w8, w8, #0x1
  41bcfc:	strb	w8, [x23, #56]
  41bd00:	ldp	x20, x19, [sp, #464]
  41bd04:	ldp	x22, x21, [sp, #448]
  41bd08:	ldp	x24, x23, [sp, #432]
  41bd0c:	ldp	x26, x25, [sp, #416]
  41bd10:	ldp	x28, x27, [sp, #400]
  41bd14:	ldp	x29, x30, [sp, #384]
  41bd18:	add	sp, sp, #0x1e0
  41bd1c:	ret
  41bd20:	stp	x29, x30, [sp, #-48]!
  41bd24:	stp	x20, x19, [sp, #32]
  41bd28:	mov	x19, x0
  41bd2c:	stp	xzr, xzr, [x0]
  41bd30:	str	xzr, [x0, #16]
  41bd34:	mov	w0, #0x100                 	// #256
  41bd38:	stp	x22, x21, [sp, #16]
  41bd3c:	mov	x29, sp
  41bd40:	mov	w21, w2
  41bd44:	mov	x20, x1
  41bd48:	bl	4023a0 <malloc@plt>
  41bd4c:	str	x0, [x19, #32]
  41bd50:	cbz	x0, 41be98 <_obstack_memory_used@@Base+0x1d04>
  41bd54:	mov	w8, #0xb2fc                	// #45820
  41bd58:	mov	w9, #0x2c6                 	// #710
  41bd5c:	tst	w21, #0x1
  41bd60:	movk	w8, #0x3, lsl #16
  41bd64:	movk	w9, #0x101, lsl #16
  41bd68:	lsl	w10, w21, #21
  41bd6c:	csel	x8, x9, x8, eq  // eq = none
  41bd70:	and	w9, w10, #0x400000
  41bd74:	orr	x22, x8, x9
  41bd78:	tbnz	w21, #2, 41bd88 <_obstack_memory_used@@Base+0x1bf4>
  41bd7c:	ldrb	w8, [x19, #56]
  41bd80:	and	w8, w8, #0x7f
  41bd84:	b	41bda0 <_obstack_memory_used@@Base+0x1c0c>
  41bd88:	ldrb	w8, [x19, #56]
  41bd8c:	mov	w9, #0xb2be                	// #45758
  41bd90:	movk	w9, #0x143, lsl #16
  41bd94:	and	x9, x22, x9
  41bd98:	orr	x22, x9, #0x100
  41bd9c:	orr	w8, w8, #0xffffff80
  41bda0:	lsl	w9, w21, #1
  41bda4:	strb	w8, [x19, #56]
  41bda8:	and	w8, w8, #0xffffffef
  41bdac:	and	w9, w9, #0x10
  41bdb0:	orr	w8, w8, w9
  41bdb4:	mov	x0, x20
  41bdb8:	strb	w8, [x19, #56]
  41bdbc:	str	xzr, [x19, #40]
  41bdc0:	bl	402270 <strlen@plt>
  41bdc4:	mov	x2, x0
  41bdc8:	mov	x0, x19
  41bdcc:	mov	x1, x20
  41bdd0:	mov	x3, x22
  41bdd4:	bl	41a27c <_obstack_memory_used@@Base+0xe8>
  41bdd8:	cmp	w0, #0x10
  41bddc:	mov	w8, #0x8                   	// #8
  41bde0:	csel	w20, w8, w0, eq  // eq = none
  41bde4:	cbnz	w20, 41bea0 <_obstack_memory_used@@Base+0x1d0c>
  41bde8:	ldr	x20, [x19, #32]
  41bdec:	ldr	x21, [x19]
  41bdf0:	movi	v0.2d, #0x0
  41bdf4:	mov	x0, x19
  41bdf8:	stp	q0, q0, [x20, #224]
  41bdfc:	stp	q0, q0, [x20, #192]
  41be00:	stp	q0, q0, [x20, #160]
  41be04:	stp	q0, q0, [x20, #128]
  41be08:	stp	q0, q0, [x20, #96]
  41be0c:	stp	q0, q0, [x20, #64]
  41be10:	stp	q0, q0, [x20, #32]
  41be14:	stp	q0, q0, [x20]
  41be18:	ldr	x1, [x21, #72]
  41be1c:	mov	x2, x20
  41be20:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41be24:	ldp	x8, x1, [x21, #72]
  41be28:	cmp	x8, x1
  41be2c:	b.eq	41be40 <_obstack_memory_used@@Base+0x1cac>  // b.none
  41be30:	mov	x0, x19
  41be34:	mov	x2, x20
  41be38:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41be3c:	ldr	x8, [x21, #72]
  41be40:	ldr	x1, [x21, #88]
  41be44:	cmp	x8, x1
  41be48:	b.eq	41be5c <_obstack_memory_used@@Base+0x1cc8>  // b.none
  41be4c:	mov	x0, x19
  41be50:	mov	x2, x20
  41be54:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41be58:	ldr	x8, [x21, #72]
  41be5c:	ldr	x1, [x21, #96]
  41be60:	cmp	x8, x1
  41be64:	b.eq	41be74 <_obstack_memory_used@@Base+0x1ce0>  // b.none
  41be68:	mov	x0, x19
  41be6c:	mov	x2, x20
  41be70:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41be74:	ldrb	w8, [x19, #56]
  41be78:	mov	w20, wzr
  41be7c:	orr	w8, w8, #0x8
  41be80:	strb	w8, [x19, #56]
  41be84:	mov	w0, w20
  41be88:	ldp	x20, x19, [sp, #32]
  41be8c:	ldp	x22, x21, [sp, #16]
  41be90:	ldp	x29, x30, [sp], #48
  41be94:	ret
  41be98:	mov	w20, #0xc                   	// #12
  41be9c:	b	41be84 <_obstack_memory_used@@Base+0x1cf0>
  41bea0:	ldr	x0, [x19, #32]
  41bea4:	bl	402620 <free@plt>
  41bea8:	str	xzr, [x19, #32]
  41beac:	b	41be84 <_obstack_memory_used@@Base+0x1cf0>
  41beb0:	stp	x29, x30, [sp, #-48]!
  41beb4:	cmp	w0, #0x11
  41beb8:	stp	x22, x21, [sp, #16]
  41bebc:	stp	x20, x19, [sp, #32]
  41bec0:	mov	x29, sp
  41bec4:	b.cs	41bf3c <_obstack_memory_used@@Base+0x1da8>  // b.hs, b.nlast
  41bec8:	adrp	x8, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41becc:	add	x8, x8, #0x368
  41bed0:	ldr	x8, [x8, w0, uxtw #3]
  41bed4:	adrp	x9, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41bed8:	add	x9, x9, #0x1e5
  41bedc:	mov	x19, x2
  41bee0:	add	x1, x9, x8
  41bee4:	mov	w2, #0x5                   	// #5
  41bee8:	mov	x0, xzr
  41beec:	mov	x20, x3
  41bef0:	bl	402740 <dcgettext@plt>
  41bef4:	mov	x21, x0
  41bef8:	bl	402270 <strlen@plt>
  41befc:	add	x22, x0, #0x1
  41bf00:	cbz	x20, 41bf1c <_obstack_memory_used@@Base+0x1d88>
  41bf04:	cmp	x22, x20
  41bf08:	mov	x2, x22
  41bf0c:	b.hi	41bf30 <_obstack_memory_used@@Base+0x1d9c>  // b.pmore
  41bf10:	mov	x0, x19
  41bf14:	mov	x1, x21
  41bf18:	bl	402210 <memcpy@plt>
  41bf1c:	mov	x0, x22
  41bf20:	ldp	x20, x19, [sp, #32]
  41bf24:	ldp	x22, x21, [sp, #16]
  41bf28:	ldp	x29, x30, [sp], #48
  41bf2c:	ret
  41bf30:	sub	x2, x20, #0x1
  41bf34:	strb	wzr, [x19, x2]
  41bf38:	b	41bf10 <_obstack_memory_used@@Base+0x1d7c>
  41bf3c:	bl	402560 <abort@plt>
  41bf40:	stp	x29, x30, [sp, #-32]!
  41bf44:	str	x19, [sp, #16]
  41bf48:	mov	x19, x0
  41bf4c:	ldr	x0, [x0]
  41bf50:	mov	x29, sp
  41bf54:	cbz	x0, 41bf5c <_obstack_memory_used@@Base+0x1dc8>
  41bf58:	bl	41bf84 <_obstack_memory_used@@Base+0x1df0>
  41bf5c:	ldr	x0, [x19, #32]
  41bf60:	stp	xzr, xzr, [x19]
  41bf64:	bl	402620 <free@plt>
  41bf68:	ldr	x0, [x19, #40]
  41bf6c:	str	xzr, [x19, #32]
  41bf70:	bl	402620 <free@plt>
  41bf74:	str	xzr, [x19, #40]
  41bf78:	ldr	x19, [sp, #16]
  41bf7c:	ldp	x29, x30, [sp], #32
  41bf80:	ret
  41bf84:	stp	x29, x30, [sp, #-64]!
  41bf88:	stp	x24, x23, [sp, #16]
  41bf8c:	stp	x22, x21, [sp, #32]
  41bf90:	stp	x20, x19, [sp, #48]
  41bf94:	ldr	x8, [x0]
  41bf98:	mov	x19, x0
  41bf9c:	mov	x29, sp
  41bfa0:	cbz	x8, 41c028 <_obstack_memory_used@@Base+0x1e94>
  41bfa4:	ldr	x9, [x19, #16]
  41bfa8:	cbz	x9, 41c028 <_obstack_memory_used@@Base+0x1e94>
  41bfac:	mov	w23, #0xff                  	// #255
  41bfb0:	mov	x21, xzr
  41bfb4:	mov	w22, #0x1                   	// #1
  41bfb8:	movk	w23, #0x4, lsl #16
  41bfbc:	add	x9, x8, x21
  41bfc0:	ldr	w9, [x9, #8]
  41bfc4:	and	w9, w9, w23
  41bfc8:	cmp	w9, #0x3
  41bfcc:	b.eq	41c000 <_obstack_memory_used@@Base+0x1e6c>  // b.none
  41bfd0:	cmp	w9, #0x6
  41bfd4:	b.ne	41c00c <_obstack_memory_used@@Base+0x1e78>  // b.any
  41bfd8:	ldr	x20, [x8, x21]
  41bfdc:	ldr	x0, [x20]
  41bfe0:	bl	402620 <free@plt>
  41bfe4:	ldr	x0, [x20, #8]
  41bfe8:	bl	402620 <free@plt>
  41bfec:	ldr	x0, [x20, #16]
  41bff0:	bl	402620 <free@plt>
  41bff4:	ldr	x0, [x20, #24]
  41bff8:	bl	402620 <free@plt>
  41bffc:	b	41c004 <_obstack_memory_used@@Base+0x1e70>
  41c000:	ldr	x20, [x8, x21]
  41c004:	mov	x0, x20
  41c008:	bl	402620 <free@plt>
  41c00c:	ldr	x8, [x19, #16]
  41c010:	cmp	x22, x8
  41c014:	b.cs	41c028 <_obstack_memory_used@@Base+0x1e94>  // b.hs, b.nlast
  41c018:	ldr	x8, [x19]
  41c01c:	add	x22, x22, #0x1
  41c020:	add	x21, x21, #0x10
  41c024:	b	41bfbc <_obstack_memory_used@@Base+0x1e28>
  41c028:	ldr	x0, [x19, #24]
  41c02c:	bl	402620 <free@plt>
  41c030:	ldr	x8, [x19, #16]
  41c034:	cbz	x8, 41c08c <_obstack_memory_used@@Base+0x1ef8>
  41c038:	mov	x20, xzr
  41c03c:	mov	w21, #0x10                  	// #16
  41c040:	b	41c058 <_obstack_memory_used@@Base+0x1ec4>
  41c044:	ldr	x8, [x19, #16]
  41c048:	add	x20, x20, #0x1
  41c04c:	add	x21, x21, #0x18
  41c050:	cmp	x20, x8
  41c054:	b.cs	41c08c <_obstack_memory_used@@Base+0x1ef8>  // b.hs, b.nlast
  41c058:	ldr	x8, [x19, #48]
  41c05c:	cbz	x8, 41c068 <_obstack_memory_used@@Base+0x1ed4>
  41c060:	ldr	x0, [x8, x21]
  41c064:	bl	402620 <free@plt>
  41c068:	ldr	x8, [x19, #56]
  41c06c:	cbz	x8, 41c078 <_obstack_memory_used@@Base+0x1ee4>
  41c070:	ldr	x0, [x8, x21]
  41c074:	bl	402620 <free@plt>
  41c078:	ldr	x8, [x19, #40]
  41c07c:	cbz	x8, 41c044 <_obstack_memory_used@@Base+0x1eb0>
  41c080:	ldr	x0, [x8, x21]
  41c084:	bl	402620 <free@plt>
  41c088:	b	41c044 <_obstack_memory_used@@Base+0x1eb0>
  41c08c:	ldr	x0, [x19, #40]
  41c090:	bl	402620 <free@plt>
  41c094:	ldr	x0, [x19, #48]
  41c098:	bl	402620 <free@plt>
  41c09c:	ldr	x0, [x19, #56]
  41c0a0:	bl	402620 <free@plt>
  41c0a4:	ldr	x0, [x19]
  41c0a8:	bl	402620 <free@plt>
  41c0ac:	ldr	x0, [x19, #64]
  41c0b0:	cbz	x0, 41c114 <_obstack_memory_used@@Base+0x1f80>
  41c0b4:	mov	x20, xzr
  41c0b8:	mov	w21, #0x18                  	// #24
  41c0bc:	madd	x23, x20, x21, x0
  41c0c0:	mov	x22, x23
  41c0c4:	ldr	x8, [x22], #16
  41c0c8:	cmp	x8, #0x1
  41c0cc:	b.lt	41c0f0 <_obstack_memory_used@@Base+0x1f5c>  // b.tstop
  41c0d0:	mov	x24, xzr
  41c0d4:	ldr	x8, [x22]
  41c0d8:	ldr	x0, [x8, x24, lsl #3]
  41c0dc:	bl	41ed90 <_obstack_memory_used@@Base+0x4bfc>
  41c0e0:	ldr	x8, [x23]
  41c0e4:	add	x24, x24, #0x1
  41c0e8:	cmp	x24, x8
  41c0ec:	b.lt	41c0d4 <_obstack_memory_used@@Base+0x1f40>  // b.tstop
  41c0f0:	ldr	x0, [x22]
  41c0f4:	bl	402620 <free@plt>
  41c0f8:	ldr	x8, [x19, #136]
  41c0fc:	cmp	x20, x8
  41c100:	b.cs	41c110 <_obstack_memory_used@@Base+0x1f7c>  // b.hs, b.nlast
  41c104:	ldr	x0, [x19, #64]
  41c108:	add	x20, x20, #0x1
  41c10c:	b	41c0bc <_obstack_memory_used@@Base+0x1f28>
  41c110:	ldr	x0, [x19, #64]
  41c114:	bl	402620 <free@plt>
  41c118:	ldr	x0, [x19, #120]
  41c11c:	adrp	x8, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41c120:	add	x8, x8, #0x3f0
  41c124:	cmp	x0, x8
  41c128:	b.eq	41c130 <_obstack_memory_used@@Base+0x1f9c>  // b.none
  41c12c:	bl	402620 <free@plt>
  41c130:	ldr	x0, [x19, #224]
  41c134:	bl	402620 <free@plt>
  41c138:	mov	x0, x19
  41c13c:	ldp	x20, x19, [sp, #48]
  41c140:	ldp	x22, x21, [sp, #32]
  41c144:	ldp	x24, x23, [sp, #16]
  41c148:	ldp	x29, x30, [sp], #64
  41c14c:	b	402620 <free@plt>
  41c150:	cmp	w4, #0x7
  41c154:	b.ls	41c160 <_obstack_memory_used@@Base+0x1fcc>  // b.plast
  41c158:	mov	w0, #0x2                   	// #2
  41c15c:	ret
  41c160:	sub	sp, sp, #0x50
  41c164:	str	x23, [sp, #32]
  41c168:	stp	x22, x21, [sp, #48]
  41c16c:	stp	x20, x19, [sp, #64]
  41c170:	mov	w22, w4
  41c174:	mov	x19, x3
  41c178:	mov	x21, x2
  41c17c:	mov	x20, x1
  41c180:	mov	x23, x0
  41c184:	stp	x29, x30, [sp, #16]
  41c188:	add	x29, sp, #0x10
  41c18c:	tbnz	w4, #2, 41c1c8 <_obstack_memory_used@@Base+0x2034>
  41c190:	mov	x0, x20
  41c194:	bl	402270 <strlen@plt>
  41c198:	mov	x2, x0
  41c19c:	mov	x3, xzr
  41c1a0:	ldrb	w8, [x23, #56]
  41c1a4:	tbz	w8, #4, 41c1d4 <_obstack_memory_used@@Base+0x2040>
  41c1a8:	str	w22, [sp]
  41c1ac:	mov	x0, x23
  41c1b0:	mov	x1, x20
  41c1b4:	mov	x4, x2
  41c1b8:	mov	x5, x2
  41c1bc:	mov	x6, xzr
  41c1c0:	mov	x7, xzr
  41c1c4:	b	41c1f0 <_obstack_memory_used@@Base+0x205c>
  41c1c8:	ldp	x3, x2, [x19]
  41c1cc:	ldrb	w8, [x23, #56]
  41c1d0:	tbnz	w8, #4, 41c1a8 <_obstack_memory_used@@Base+0x2014>
  41c1d4:	mov	x0, x23
  41c1d8:	mov	x1, x20
  41c1dc:	mov	x4, x2
  41c1e0:	mov	x5, x2
  41c1e4:	mov	x6, x21
  41c1e8:	mov	x7, x19
  41c1ec:	str	w22, [sp]
  41c1f0:	bl	41c214 <_obstack_memory_used@@Base+0x2080>
  41c1f4:	ldp	x20, x19, [sp, #64]
  41c1f8:	ldp	x22, x21, [sp, #48]
  41c1fc:	ldr	x23, [sp, #32]
  41c200:	ldp	x29, x30, [sp, #16]
  41c204:	cmp	w0, #0x0
  41c208:	cset	w0, ne  // ne = any
  41c20c:	add	sp, sp, #0x50
  41c210:	ret
  41c214:	stp	x29, x30, [sp, #-96]!
  41c218:	stp	x28, x27, [sp, #16]
  41c21c:	stp	x26, x25, [sp, #32]
  41c220:	stp	x24, x23, [sp, #48]
  41c224:	stp	x22, x21, [sp, #64]
  41c228:	stp	x20, x19, [sp, #80]
  41c22c:	mov	x29, sp
  41c230:	sub	sp, sp, #0x2a0
  41c234:	ldr	x23, [x0]
  41c238:	movi	v0.2d, #0x0
  41c23c:	stp	q0, q0, [sp, #528]
  41c240:	stp	q0, q0, [sp, #496]
  41c244:	stp	q0, q0, [sp, #464]
  41c248:	stp	q0, q0, [sp, #432]
  41c24c:	stp	q0, q0, [sp, #400]
  41c250:	stp	q0, q0, [sp, #368]
  41c254:	stp	q0, q0, [sp, #336]
  41c258:	stp	q0, q0, [sp, #304]
  41c25c:	str	x23, [sp, #456]
  41c260:	ldr	x8, [x0, #32]
  41c264:	mov	x22, x7
  41c268:	mov	x19, x5
  41c26c:	mov	x26, x3
  41c270:	mov	x24, x1
  41c274:	str	x2, [sp, #288]
  41c278:	cbz	x8, 41c298 <_obstack_memory_used@@Base+0x2104>
  41c27c:	ldrb	w9, [x0, #56]
  41c280:	mov	w10, #0x9                   	// #9
  41c284:	and	w9, w9, w10
  41c288:	cmp	w9, #0x8
  41c28c:	ccmp	x26, x4, #0x4, eq  // eq = none
  41c290:	csel	x21, x8, xzr, ne  // ne = any
  41c294:	b	41c29c <_obstack_memory_used@@Base+0x2108>
  41c298:	mov	x21, xzr
  41c29c:	ldr	x8, [x0, #48]
  41c2a0:	ldr	x9, [x0, #16]
  41c2a4:	mvn	x10, x8
  41c2a8:	add	x10, x10, x6
  41c2ac:	cmp	x8, x6
  41c2b0:	csel	x12, x10, xzr, cc  // cc = lo, ul, last
  41c2b4:	cbz	x9, 41e4b8 <_obstack_memory_used@@Base+0x4324>
  41c2b8:	ldr	x10, [x23, #72]
  41c2bc:	cbz	x10, 41e4b8 <_obstack_memory_used@@Base+0x4324>
  41c2c0:	ldr	x9, [x23, #80]
  41c2c4:	cbz	x9, 41e4b8 <_obstack_memory_used@@Base+0x4324>
  41c2c8:	ldr	x8, [x23, #88]
  41c2cc:	cbz	x8, 41e4b8 <_obstack_memory_used@@Base+0x4324>
  41c2d0:	ldr	x11, [x23, #96]
  41c2d4:	cbz	x11, 41e4b8 <_obstack_memory_used@@Base+0x4324>
  41c2d8:	ldr	x10, [x10, #16]
  41c2dc:	ldr	x14, [x0, #40]
  41c2e0:	cbnz	x10, 41c2ec <_obstack_memory_used@@Base+0x2158>
  41c2e4:	ldr	x9, [x9, #16]
  41c2e8:	cbz	x9, 41e498 <_obstack_memory_used@@Base+0x4304>
  41c2ec:	mov	x27, x4
  41c2f0:	sub	x28, x6, x12
  41c2f4:	stp	x6, x12, [sp, #144]
  41c2f8:	cbz	x28, 41c304 <_obstack_memory_used@@Base+0x2170>
  41c2fc:	mov	w8, #0x1                   	// #1
  41c300:	b	41c310 <_obstack_memory_used@@Base+0x217c>
  41c304:	ldr	x8, [x23, #152]
  41c308:	cmp	x8, #0x0
  41c30c:	cset	w8, ne  // ne = any
  41c310:	str	w8, [sp, #172]
  41c314:	ldr	x8, [x23, #16]
  41c318:	ldrsw	x10, [x23, #180]
  41c31c:	ldr	x9, [x0, #24]
  41c320:	ldr	x13, [sp, #288]
  41c324:	add	x12, x8, #0x1
  41c328:	cmp	x12, x10
  41c32c:	and	x12, x9, #0x400000
  41c330:	add	x11, x13, #0x1
  41c334:	ubfx	x9, x9, #22, #1
  41c338:	csinc	x8, x10, x8, lt  // lt = tstop
  41c33c:	strb	w9, [sp, #440]
  41c340:	orr	x9, x14, x12
  41c344:	cmp	x11, x8
  41c348:	csinc	x25, x8, x13, ge  // ge = tcont
  41c34c:	cmp	x9, #0x0
  41c350:	cset	w20, ne  // ne = any
  41c354:	str	x24, [sp, #304]
  41c358:	stp	x13, x13, [sp, #384]
  41c35c:	str	x14, [sp, #424]
  41c360:	str	w10, [sp, #448]
  41c364:	strb	w20, [sp, #443]
  41c368:	ldrb	w8, [x23, #176]
  41c36c:	cmp	w10, #0x2
  41c370:	str	x0, [sp, #256]
  41c374:	str	x14, [sp, #216]
  41c378:	ubfx	w9, w8, #2, #1
  41c37c:	ubfx	w8, w8, #3, #1
  41c380:	strb	w9, [sp, #441]
  41c384:	strb	w8, [sp, #442]
  41c388:	stp	x13, x13, [sp, #400]
  41c38c:	b.lt	41c3a8 <_obstack_memory_used@@Base+0x2214>  // b.tstop
  41c390:	lsr	x8, x25, #61
  41c394:	cbnz	x8, 41e6c8 <_obstack_memory_used@@Base+0x4534>
  41c398:	lsl	x0, x25, #2
  41c39c:	bl	4023a0 <malloc@plt>
  41c3a0:	cbz	x0, 41e6c8 <_obstack_memory_used@@Base+0x4534>
  41c3a4:	str	x0, [sp, #320]
  41c3a8:	cbz	w20, 41c3c4 <_obstack_memory_used@@Base+0x2230>
  41c3ac:	mov	x0, x25
  41c3b0:	bl	4023a0 <malloc@plt>
  41c3b4:	cbz	x0, 41e6c8 <_obstack_memory_used@@Base+0x4534>
  41c3b8:	mov	w8, wzr
  41c3bc:	str	x0, [sp, #312]
  41c3c0:	b	41c3c8 <_obstack_memory_used@@Base+0x2234>
  41c3c4:	mov	w8, #0x1                   	// #1
  41c3c8:	add	x9, x23, #0xb8
  41c3cc:	str	x25, [sp, #368]
  41c3d0:	str	x9, [sp, #432]
  41c3d4:	ldrb	w9, [x23, #176]
  41c3d8:	ldr	w10, [x29, #96]
  41c3dc:	str	x22, [sp, #136]
  41c3e0:	ubfx	w9, w9, #4, #1
  41c3e4:	str	w10, [sp, #284]
  41c3e8:	strb	w9, [sp, #446]
  41c3ec:	cbz	w8, 41c408 <_obstack_memory_used@@Base+0x2274>
  41c3f0:	str	x24, [sp, #312]
  41c3f4:	ldr	w8, [x23, #180]
  41c3f8:	cmp	w8, #0x1
  41c3fc:	ldr	x8, [sp, #288]
  41c400:	csel	x8, xzr, x8, gt
  41c404:	b	41c40c <_obstack_memory_used@@Base+0x2278>
  41c408:	mov	x8, xzr
  41c40c:	stp	x8, x8, [sp, #352]
  41c410:	ldr	x8, [sp, #256]
  41c414:	stp	x19, x19, [sp, #400]
  41c418:	ldr	w9, [sp, #284]
  41c41c:	ldr	x19, [sp, #288]
  41c420:	ldrb	w8, [x8, #56]
  41c424:	lsr	w8, w8, #7
  41c428:	strb	w8, [sp, #445]
  41c42c:	ldr	x20, [x23, #152]
  41c430:	mov	x8, #0xffffffffffffffff    	// #-1
  41c434:	str	w9, [sp, #464]
  41c438:	str	x8, [sp, #472]
  41c43c:	lsl	x22, x20, #1
  41c440:	cmp	x20, #0x1
  41c444:	b.lt	41c488 <_obstack_memory_used@@Base+0x22f4>  // b.tstop
  41c448:	mov	x8, #0x6666666666666666    	// #7378697629483820646
  41c44c:	movk	x8, #0x666, lsl #48
  41c450:	cmp	x22, x8
  41c454:	b.hi	41e6c8 <_obstack_memory_used@@Base+0x4534>  // b.pmore
  41c458:	add	x8, x20, x20, lsl #2
  41c45c:	lsl	x0, x8, #4
  41c460:	bl	4023a0 <malloc@plt>
  41c464:	mov	x19, x0
  41c468:	str	x0, [sp, #520]
  41c46c:	lsl	x0, x20, #4
  41c470:	bl	4023a0 <malloc@plt>
  41c474:	mov	w20, #0xc                   	// #12
  41c478:	str	x0, [sp, #552]
  41c47c:	cbz	x19, 41e614 <_obstack_memory_used@@Base+0x4480>
  41c480:	ldr	x19, [sp, #288]
  41c484:	cbz	x0, 41e614 <_obstack_memory_used@@Base+0x4480>
  41c488:	mov	w8, #0x1                   	// #1
  41c48c:	cmp	x28, #0x1
  41c490:	str	x22, [sp, #512]
  41c494:	str	w8, [sp, #528]
  41c498:	str	x22, [sp, #544]
  41c49c:	b.hi	41c4a8 <_obstack_memory_used@@Base+0x2314>  // b.pmore
  41c4a0:	ldrb	w8, [x23, #176]
  41c4a4:	tbz	w8, #1, 41c4c8 <_obstack_memory_used@@Base+0x2334>
  41c4a8:	mov	x8, #0x1ffffffffffffffe    	// #2305843009213693950
  41c4ac:	cmp	x25, x8
  41c4b0:	b.hi	41e6c8 <_obstack_memory_used@@Base+0x4534>  // b.pmore
  41c4b4:	lsl	x8, x25, #3
  41c4b8:	add	x0, x8, #0x8
  41c4bc:	bl	4023a0 <malloc@plt>
  41c4c0:	str	x0, [sp, #488]
  41c4c4:	cbz	x0, 41e6c8 <_obstack_memory_used@@Base+0x4534>
  41c4c8:	ldr	w9, [sp, #284]
  41c4cc:	mov	w10, #0x6                   	// #6
  41c4d0:	stur	x26, [x29, #-112]
  41c4d4:	add	x8, sp, #0x130
  41c4d8:	tst	w9, #0x1
  41c4dc:	mov	w9, #0x4                   	// #4
  41c4e0:	csel	w9, w10, w9, eq  // eq = none
  41c4e4:	str	w9, [sp, #416]
  41c4e8:	ldr	w25, [x23, #180]
  41c4ec:	cmp	x27, x26
  41c4f0:	csel	x9, x27, x26, lt  // lt = tstop
  41c4f4:	csel	x22, x26, x27, lt  // lt = tstop
  41c4f8:	str	x9, [sp, #272]
  41c4fc:	cbz	x21, 41c514 <_obstack_memory_used@@Base+0x2380>
  41c500:	ldr	x11, [sp, #216]
  41c504:	cmp	w25, #0x1
  41c508:	b.ne	41c51c <_obstack_memory_used@@Base+0x2388>  // b.any
  41c50c:	mov	w9, #0x4                   	// #4
  41c510:	b	41c538 <_obstack_memory_used@@Base+0x23a4>
  41c514:	mov	w9, #0x8                   	// #8
  41c518:	b	41c550 <_obstack_memory_used@@Base+0x23bc>
  41c51c:	ldr	x9, [sp, #256]
  41c520:	ldr	x9, [x9, #24]
  41c524:	and	x9, x9, #0x400000
  41c528:	orr	x9, x11, x9
  41c52c:	cmp	x9, #0x0
  41c530:	cset	w9, eq  // eq = none
  41c534:	lsl	w9, w9, #2
  41c538:	cmp	x27, x26
  41c53c:	cset	w10, ge  // ge = tcont
  41c540:	cmp	x11, #0x0
  41c544:	cset	w11, ne  // ne = any
  41c548:	bfi	w11, w10, #1, #1
  41c54c:	orr	w9, w11, w9
  41c550:	add	x8, x8, #0x38
  41c554:	str	x8, [sp, #128]
  41c558:	add	x8, sp, #0x130
  41c55c:	cmp	x27, x26
  41c560:	sub	x10, x29, #0x70
  41c564:	add	x8, x8, #0xc0
  41c568:	ldr	x27, [sp, #272]
  41c56c:	mov	x11, #0xffffffffffffffff    	// #-1
  41c570:	sub	w9, w9, #0x4
  41c574:	str	x8, [sp, #184]
  41c578:	csel	x8, xzr, x10, lt  // lt = tstop
  41c57c:	sub	x12, x29, #0x60
  41c580:	str	x9, [sp, #248]
  41c584:	cneg	x9, x11, ge  // ge = tcont
  41c588:	cmp	x8, #0x0
  41c58c:	str	x9, [sp, #296]
  41c590:	add	x9, x12, #0x20
  41c594:	str	x8, [sp, #176]
  41c598:	cset	w8, ne  // ne = any
  41c59c:	str	x9, [sp, #160]
  41c5a0:	str	w8, [sp, #196]
  41c5a4:	str	x28, [sp, #224]
  41c5a8:	str	w25, [sp, #212]
  41c5ac:	ldr	x10, [sp, #248]
  41c5b0:	cmp	w10, #0x4
  41c5b4:	b.hi	41c754 <_obstack_memory_used@@Base+0x25c0>  // b.pmore
  41c5b8:	adrp	x11, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41c5bc:	add	x11, x11, #0xaa
  41c5c0:	adr	x8, 41c5d0 <_obstack_memory_used@@Base+0x243c>
  41c5c4:	ldrb	w9, [x11, x10]
  41c5c8:	add	x8, x8, x9, lsl #2
  41c5cc:	br	x8
  41c5d0:	cmp	x26, x27
  41c5d4:	b.lt	41e420 <_obstack_memory_used@@Base+0x428c>  // b.tstop
  41c5d8:	ldr	x9, [sp, #216]
  41c5dc:	cbnz	x9, 41c604 <_obstack_memory_used@@Base+0x2470>
  41c5e0:	b	41c63c <_obstack_memory_used@@Base+0x24a8>
  41c5e4:	mov	x8, xzr
  41c5e8:	ldrb	w8, [x9, x8]
  41c5ec:	ldrb	w8, [x21, x8]
  41c5f0:	cbnz	w8, 41c6b0 <_obstack_memory_used@@Base+0x251c>
  41c5f4:	cmp	x26, x27
  41c5f8:	sub	x26, x26, #0x1
  41c5fc:	stur	x26, [x29, #-112]
  41c600:	b.le	41e420 <_obstack_memory_used@@Base+0x428c>
  41c604:	cmp	x26, x19
  41c608:	b.ge	41c5e4 <_obstack_memory_used@@Base+0x2450>  // b.tcont
  41c60c:	ldrb	w8, [x24, x26]
  41c610:	ldrb	w8, [x9, x8]
  41c614:	ldrb	w8, [x21, x8]
  41c618:	cbz	w8, 41c5f4 <_obstack_memory_used@@Base+0x2460>
  41c61c:	b	41c6b0 <_obstack_memory_used@@Base+0x251c>
  41c620:	mov	x8, xzr
  41c624:	ldrb	w8, [x21, x8]
  41c628:	cbnz	w8, 41c6b0 <_obstack_memory_used@@Base+0x251c>
  41c62c:	cmp	x26, x27
  41c630:	sub	x26, x26, #0x1
  41c634:	stur	x26, [x29, #-112]
  41c638:	b.le	41e420 <_obstack_memory_used@@Base+0x428c>
  41c63c:	cmp	x26, x19
  41c640:	b.ge	41c620 <_obstack_memory_used@@Base+0x248c>  // b.tcont
  41c644:	ldrb	w8, [x24, x26]
  41c648:	ldrb	w8, [x21, x8]
  41c64c:	cbz	w8, 41c62c <_obstack_memory_used@@Base+0x2498>
  41c650:	b	41c6b0 <_obstack_memory_used@@Base+0x251c>
  41c654:	cmp	x26, x22
  41c658:	b.ge	41c6a8 <_obstack_memory_used@@Base+0x2514>  // b.tcont
  41c65c:	ldr	x9, [sp, #216]
  41c660:	ldrb	w8, [x24, x26]
  41c664:	ldrb	w8, [x9, x8]
  41c668:	ldrb	w8, [x21, x8]
  41c66c:	cbnz	w8, 41c6a8 <_obstack_memory_used@@Base+0x2514>
  41c670:	add	x26, x26, #0x1
  41c674:	cmp	x26, x22
  41c678:	stur	x26, [x29, #-112]
  41c67c:	b.lt	41c660 <_obstack_memory_used@@Base+0x24cc>  // b.tstop
  41c680:	b	41c6a8 <_obstack_memory_used@@Base+0x2514>
  41c684:	cmp	x26, x22
  41c688:	b.ge	41c6a8 <_obstack_memory_used@@Base+0x2514>  // b.tcont
  41c68c:	ldrb	w8, [x24, x26]
  41c690:	ldrb	w8, [x21, x8]
  41c694:	cbnz	w8, 41c6a8 <_obstack_memory_used@@Base+0x2514>
  41c698:	add	x26, x26, #0x1
  41c69c:	cmp	x26, x22
  41c6a0:	stur	x26, [x29, #-112]
  41c6a4:	b.lt	41c68c <_obstack_memory_used@@Base+0x24f8>  // b.tstop
  41c6a8:	cmp	x26, x22
  41c6ac:	b.eq	41c874 <_obstack_memory_used@@Base+0x26e0>  // b.none
  41c6b0:	ldr	w2, [sp, #284]
  41c6b4:	add	x0, sp, #0x130
  41c6b8:	mov	x1, x26
  41c6bc:	bl	424e04 <_obstack_memory_used@@Base+0xac70>
  41c6c0:	cbnz	w0, 41e6d0 <_obstack_memory_used@@Base+0x453c>
  41c6c4:	cmp	w25, #0x1
  41c6c8:	b.eq	41c6e4 <_obstack_memory_used@@Base+0x2550>  // b.none
  41c6cc:	ldr	x8, [sp, #352]
  41c6d0:	cbz	x8, 41c6e4 <_obstack_memory_used@@Base+0x2550>
  41c6d4:	ldr	x8, [sp, #320]
  41c6d8:	ldr	w8, [x8]
  41c6dc:	cmn	w8, #0x1
  41c6e0:	b.eq	41e0ac <_obstack_memory_used@@Base+0x3f18>  // b.none
  41c6e4:	ldr	x8, [sp, #184]
  41c6e8:	str	wzr, [sp, #528]
  41c6ec:	stur	wzr, [x29, #-100]
  41c6f0:	stp	xzr, xzr, [x8]
  41c6f4:	ldr	x19, [sp, #456]
  41c6f8:	ldr	x26, [sp, #376]
  41c6fc:	ldr	x28, [x19, #72]
  41c700:	ldrsb	w8, [x28, #104]
  41c704:	tbz	w8, #31, 41c89c <_obstack_memory_used@@Base+0x2708>
  41c708:	cmp	x26, #0x0
  41c70c:	b.le	41c748 <_obstack_memory_used@@Base+0x25b4>
  41c710:	ldr	x9, [sp, #392]
  41c714:	sub	x8, x26, #0x1
  41c718:	cmp	x9, x8
  41c71c:	b.eq	41c884 <_obstack_memory_used@@Base+0x26f0>  // b.none
  41c720:	ldr	w9, [sp, #448]
  41c724:	cmp	w9, #0x2
  41c728:	b.lt	41c7dc <_obstack_memory_used@@Base+0x2648>  // b.tstop
  41c72c:	ldr	x9, [sp, #320]
  41c730:	ldr	w20, [x9, x8, lsl #2]
  41c734:	cmn	w20, #0x1
  41c738:	b.ne	41c808 <_obstack_memory_used@@Base+0x2674>  // b.any
  41c73c:	sub	x8, x8, #0x1
  41c740:	cmn	x8, #0x1
  41c744:	b.ne	41c730 <_obstack_memory_used@@Base+0x259c>  // b.any
  41c748:	ldr	w3, [sp, #416]
  41c74c:	tbnz	w3, #0, 41c898 <_obstack_memory_used@@Base+0x2704>
  41c750:	b	41c82c <_obstack_memory_used@@Base+0x2698>
  41c754:	ldr	x8, [sp, #344]
  41c758:	ldr	x10, [sp, #360]
  41c75c:	sub	x9, x26, x8
  41c760:	cmp	x9, x10
  41c764:	b.cs	41c784 <_obstack_memory_used@@Base+0x25f0>  // b.hs, b.nlast
  41c768:	cmp	x26, x19
  41c76c:	b.ge	41c7ac <_obstack_memory_used@@Base+0x2618>  // b.tcont
  41c770:	ldr	x10, [sp, #312]
  41c774:	ldrb	w9, [x10, x9]
  41c778:	ldrb	w9, [x21, x9]
  41c77c:	cbz	w9, 41c7b8 <_obstack_memory_used@@Base+0x2624>
  41c780:	b	41c6b0 <_obstack_memory_used@@Base+0x251c>
  41c784:	ldr	w2, [sp, #284]
  41c788:	add	x0, sp, #0x130
  41c78c:	mov	x1, x26
  41c790:	bl	424e04 <_obstack_memory_used@@Base+0xac70>
  41c794:	cbnz	w0, 41e6d0 <_obstack_memory_used@@Base+0x453c>
  41c798:	ldur	x26, [x29, #-112]
  41c79c:	ldr	x8, [sp, #344]
  41c7a0:	sub	x9, x26, x8
  41c7a4:	cmp	x26, x19
  41c7a8:	b.lt	41c770 <_obstack_memory_used@@Base+0x25dc>  // b.tstop
  41c7ac:	mov	x9, xzr
  41c7b0:	ldrb	w9, [x21, x9]
  41c7b4:	cbnz	w9, 41c6b0 <_obstack_memory_used@@Base+0x251c>
  41c7b8:	ldr	x9, [sp, #296]
  41c7bc:	mov	w20, #0x1                   	// #1
  41c7c0:	add	x26, x26, x9
  41c7c4:	cmp	x26, x27
  41c7c8:	stur	x26, [x29, #-112]
  41c7cc:	b.lt	41e614 <_obstack_memory_used@@Base+0x4480>  // b.tstop
  41c7d0:	cmp	x26, x22
  41c7d4:	b.le	41c758 <_obstack_memory_used@@Base+0x25c4>
  41c7d8:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41c7dc:	ldr	x9, [sp, #312]
  41c7e0:	ldr	x10, [sp, #432]
  41c7e4:	ldrb	w8, [x9, x8]
  41c7e8:	lsr	x9, x8, #3
  41c7ec:	and	x9, x9, #0x18
  41c7f0:	ldr	x9, [x10, x9]
  41c7f4:	lsr	x9, x9, x8
  41c7f8:	tbnz	w9, #0, 41c898 <_obstack_memory_used@@Base+0x2704>
  41c7fc:	cmp	w8, #0xa
  41c800:	b.eq	41c818 <_obstack_memory_used@@Base+0x2684>  // b.none
  41c804:	b	41c89c <_obstack_memory_used@@Base+0x2708>
  41c808:	ldrb	w8, [sp, #446]
  41c80c:	cbnz	w8, 41e3dc <_obstack_memory_used@@Base+0x4248>
  41c810:	cmp	w20, #0xa
  41c814:	b.ne	41c89c <_obstack_memory_used@@Base+0x2708>  // b.any
  41c818:	ldrb	w8, [sp, #445]
  41c81c:	cmp	w8, #0x0
  41c820:	cset	w8, ne  // ne = any
  41c824:	lsl	w3, w8, #1
  41c828:	tbnz	w3, #0, 41c898 <_obstack_memory_used@@Base+0x2704>
  41c82c:	ldr	w9, [sp, #196]
  41c830:	cbz	w3, 41c8a0 <_obstack_memory_used@@Base+0x270c>
  41c834:	tbz	w3, #1, 41c844 <_obstack_memory_used@@Base+0x26b0>
  41c838:	tbz	w3, #2, 41c844 <_obstack_memory_used@@Base+0x26b0>
  41c83c:	ldr	x28, [x19, #96]
  41c840:	b	41c8a0 <_obstack_memory_used@@Base+0x270c>
  41c844:	tbnz	w3, #1, 41c86c <_obstack_memory_used@@Base+0x26d8>
  41c848:	ldr	x28, [x19, #72]
  41c84c:	tbz	w3, #2, 41c8a0 <_obstack_memory_used@@Base+0x270c>
  41c850:	ldr	x2, [x28, #80]
  41c854:	sub	x0, x29, #0x64
  41c858:	mov	x1, x19
  41c85c:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41c860:	ldr	w9, [sp, #196]
  41c864:	mov	x28, x0
  41c868:	b	41c8a0 <_obstack_memory_used@@Base+0x270c>
  41c86c:	ldr	x28, [x19, #88]
  41c870:	b	41c8a0 <_obstack_memory_used@@Base+0x270c>
  41c874:	cmp	x22, x19
  41c878:	b.ge	41e380 <_obstack_memory_used@@Base+0x41ec>  // b.tcont
  41c87c:	ldrb	w8, [x24, x22]
  41c880:	b	41e384 <_obstack_memory_used@@Base+0x41f0>
  41c884:	ldr	w8, [sp, #464]
  41c888:	mov	w9, #0xa                   	// #10
  41c88c:	and	w8, w8, #0x2
  41c890:	eor	w3, w8, w9
  41c894:	tbz	w3, #0, 41c82c <_obstack_memory_used@@Base+0x2698>
  41c898:	ldr	x28, [x19, #80]
  41c89c:	ldr	w9, [sp, #196]
  41c8a0:	cbz	x28, 41e6c8 <_obstack_memory_used@@Base+0x4534>
  41c8a4:	ldr	x8, [sp, #488]
  41c8a8:	mov	w25, w9
  41c8ac:	cbz	x8, 41c8c0 <_obstack_memory_used@@Base+0x272c>
  41c8b0:	str	x28, [x8, x26, lsl #3]
  41c8b4:	ldr	x8, [x19, #152]
  41c8b8:	mov	w25, w9
  41c8bc:	cbnz	x8, 41e21c <_obstack_memory_used@@Base+0x4088>
  41c8c0:	ldrsb	w8, [x28, #104]
  41c8c4:	tbnz	w8, #4, 41e1fc <_obstack_memory_used@@Base+0x4068>
  41c8c8:	ldr	x19, [sp, #288]
  41c8cc:	mov	x8, #0xffffffffffffffff    	// #-1
  41c8d0:	str	xzr, [sp, #200]
  41c8d4:	str	x8, [sp, #240]
  41c8d8:	ldr	x9, [sp, #408]
  41c8dc:	ldr	x8, [sp, #376]
  41c8e0:	cmp	x9, x8
  41c8e4:	b.le	41deb4 <_obstack_memory_used@@Base+0x3d20>
  41c8e8:	ldr	x9, [sp, #176]
  41c8ec:	str	x9, [sp, #232]
  41c8f0:	ldr	x10, [sp, #368]
  41c8f4:	ldr	x9, [sp, #392]
  41c8f8:	add	x20, x8, #0x1
  41c8fc:	mov	x27, x28
  41c900:	cmp	x20, x10
  41c904:	str	x26, [sp, #264]
  41c908:	b.lt	41c914 <_obstack_memory_used@@Base+0x2780>  // b.tstop
  41c90c:	cmp	x10, x9
  41c910:	b.lt	41dc48 <_obstack_memory_used@@Base+0x3ab4>  // b.tstop
  41c914:	ldr	x10, [sp, #352]
  41c918:	cmp	x20, x10
  41c91c:	b.lt	41c928 <_obstack_memory_used@@Base+0x2794>  // b.tstop
  41c920:	cmp	x10, x9
  41c924:	b.lt	41dc48 <_obstack_memory_used@@Base+0x3ab4>  // b.tstop
  41c928:	ldrb	w8, [x27, #104]
  41c92c:	tbnz	w8, #5, 41ca70 <_obstack_memory_used@@Base+0x28dc>
  41c930:	ldr	x8, [sp, #376]
  41c934:	ldr	x9, [sp, #312]
  41c938:	mov	x26, x27
  41c93c:	add	x10, x8, #0x1
  41c940:	str	x10, [sp, #376]
  41c944:	ldrb	w28, [x9, x8]
  41c948:	ldr	x0, [x26, #88]!
  41c94c:	cbz	x0, 41ce2c <_obstack_memory_used@@Base+0x2c98>
  41c950:	ldr	x28, [x0, x28, lsl #3]
  41c954:	ldr	x26, [sp, #264]
  41c958:	ldr	x8, [sp, #488]
  41c95c:	cbz	x8, 41c974 <_obstack_memory_used@@Base+0x27e0>
  41c960:	sub	x0, x29, #0x64
  41c964:	add	x1, sp, #0x130
  41c968:	mov	x2, x28
  41c96c:	bl	427168 <_obstack_memory_used@@Base+0xcfd4>
  41c970:	mov	x28, x0
  41c974:	cbz	x28, 41c998 <_obstack_memory_used@@Base+0x2804>
  41c978:	ldrsb	w8, [x28, #104]
  41c97c:	cmp	x27, x28
  41c980:	cset	w19, eq  // eq = none
  41c984:	tst	w25, w19
  41c988:	csel	x26, x20, x26, ne  // ne = any
  41c98c:	tbnz	w8, #4, 41ca14 <_obstack_memory_used@@Base+0x2880>
  41c990:	ldr	x27, [sp, #272]
  41c994:	b	41ca4c <_obstack_memory_used@@Base+0x28b8>
  41c998:	ldur	w8, [x29, #-100]
  41c99c:	cbnz	w8, 41e6c8 <_obstack_memory_used@@Base+0x4534>
  41c9a0:	ldr	x8, [sp, #200]
  41c9a4:	ldr	w9, [sp, #172]
  41c9a8:	cmp	x8, #0x0
  41c9ac:	cset	w8, ne  // ne = any
  41c9b0:	bic	w8, w8, w9
  41c9b4:	tbnz	w8, #0, 41e1c4 <_obstack_memory_used@@Base+0x4030>
  41c9b8:	ldr	x10, [sp, #488]
  41c9bc:	ldr	x19, [sp, #288]
  41c9c0:	cbz	x10, 41e1c8 <_obstack_memory_used@@Base+0x4034>
  41c9c4:	ldr	x8, [sp, #496]
  41c9c8:	ldr	x9, [sp, #376]
  41c9cc:	add	x10, x10, #0x8
  41c9d0:	cmp	x9, x8
  41c9d4:	b.ge	41e1c8 <_obstack_memory_used@@Base+0x4034>  // b.tcont
  41c9d8:	add	x11, x9, #0x1
  41c9dc:	str	x11, [sp, #376]
  41c9e0:	ldr	x12, [x10, x9, lsl #3]
  41c9e4:	mov	x9, x11
  41c9e8:	cbz	x12, 41c9d0 <_obstack_memory_used@@Base+0x283c>
  41c9ec:	sub	x0, x29, #0x64
  41c9f0:	add	x1, sp, #0x130
  41c9f4:	mov	x2, xzr
  41c9f8:	bl	427168 <_obstack_memory_used@@Base+0xcfd4>
  41c9fc:	mov	x28, x0
  41ca00:	cbnz	x0, 41ca68 <_obstack_memory_used@@Base+0x28d4>
  41ca04:	ldur	w8, [x29, #-100]
  41ca08:	cbnz	w8, 41ca68 <_obstack_memory_used@@Base+0x28d4>
  41ca0c:	ldr	x10, [sp, #488]
  41ca10:	b	41c9c4 <_obstack_memory_used@@Base+0x2830>
  41ca14:	ldr	x27, [sp, #272]
  41ca18:	tbz	w8, #31, 41ca30 <_obstack_memory_used@@Base+0x289c>
  41ca1c:	ldr	x2, [sp, #376]
  41ca20:	add	x0, sp, #0x130
  41ca24:	mov	x1, x28
  41ca28:	bl	425760 <_obstack_memory_used@@Base+0xb5cc>
  41ca2c:	cbz	x0, 41ca4c <_obstack_memory_used@@Base+0x28b8>
  41ca30:	ldr	x8, [sp, #376]
  41ca34:	str	x8, [sp, #240]
  41ca38:	ldr	w8, [sp, #172]
  41ca3c:	cbz	w8, 41e1a8 <_obstack_memory_used@@Base+0x4014>
  41ca40:	mov	w8, #0x1                   	// #1
  41ca44:	str	xzr, [sp, #232]
  41ca48:	str	x8, [sp, #200]
  41ca4c:	ldr	x9, [sp, #408]
  41ca50:	ldr	x8, [sp, #376]
  41ca54:	and	w25, w25, w19
  41ca58:	ldr	x19, [sp, #288]
  41ca5c:	cmp	x9, x8
  41ca60:	b.gt	41c8f0 <_obstack_memory_used@@Base+0x275c>
  41ca64:	b	41debc <_obstack_memory_used@@Base+0x3d28>
  41ca68:	cbnz	x28, 41c978 <_obstack_memory_used@@Base+0x27e4>
  41ca6c:	b	41e1c4 <_obstack_memory_used@@Base+0x4030>
  41ca70:	ldr	x8, [x27, #16]
  41ca74:	cmp	x8, #0x1
  41ca78:	b.lt	41dcb0 <_obstack_memory_used@@Base+0x3b1c>  // b.tstop
  41ca7c:	ldr	x11, [sp, #456]
  41ca80:	mov	x26, xzr
  41ca84:	str	x11, [sp, #112]
  41ca88:	b	41ca9c <_obstack_memory_used@@Base+0x2908>
  41ca8c:	ldr	x8, [x27, #16]
  41ca90:	add	x26, x26, #0x1
  41ca94:	cmp	x26, x8
  41ca98:	b.ge	41dcb0 <_obstack_memory_used@@Base+0x3b1c>  // b.tcont
  41ca9c:	ldr	x8, [x27, #24]
  41caa0:	ldr	x12, [x8, x26, lsl #3]
  41caa4:	ldr	x8, [x11]
  41caa8:	add	x8, x8, x12, lsl #4
  41caac:	ldr	w28, [x8, #8]
  41cab0:	tbz	w28, #20, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cab4:	tst	w28, #0x3ff00
  41cab8:	b.eq	41cba8 <_obstack_memory_used@@Base+0x2a14>  // b.none
  41cabc:	ldr	x8, [sp, #376]
  41cac0:	tbnz	x8, #63, 41caf8 <_obstack_memory_used@@Base+0x2964>
  41cac4:	ldr	x9, [sp, #392]
  41cac8:	cmp	x9, x8
  41cacc:	b.eq	41cd94 <_obstack_memory_used@@Base+0x2c00>  // b.none
  41cad0:	ldr	w9, [sp, #448]
  41cad4:	cmp	w9, #0x2
  41cad8:	b.lt	41cb0c <_obstack_memory_used@@Base+0x2978>  // b.tstop
  41cadc:	ldr	x9, [sp, #320]
  41cae0:	ldr	w19, [x9, x8, lsl #2]
  41cae4:	cmn	w19, #0x1
  41cae8:	b.ne	41cb38 <_obstack_memory_used@@Base+0x29a4>  // b.any
  41caec:	sub	x8, x8, #0x1
  41caf0:	cmn	x8, #0x1
  41caf4:	b.ne	41cae0 <_obstack_memory_used@@Base+0x294c>  // b.any
  41caf8:	ldr	w8, [sp, #416]
  41cafc:	tst	w8, #0x1
  41cb00:	cset	w9, eq  // eq = none
  41cb04:	tbnz	w28, #10, 41cb80 <_obstack_memory_used@@Base+0x29ec>
  41cb08:	b	41cb84 <_obstack_memory_used@@Base+0x29f0>
  41cb0c:	ldr	x9, [sp, #312]
  41cb10:	ldr	x10, [sp, #432]
  41cb14:	ldrb	w8, [x9, x8]
  41cb18:	lsr	x9, x8, #3
  41cb1c:	and	x9, x9, #0x18
  41cb20:	ldr	x9, [x10, x9]
  41cb24:	lsr	x9, x9, x8
  41cb28:	tbz	w9, #0, 41cb68 <_obstack_memory_used@@Base+0x29d4>
  41cb2c:	mov	w9, wzr
  41cb30:	mov	w8, #0x1                   	// #1
  41cb34:	b	41cb84 <_obstack_memory_used@@Base+0x29f0>
  41cb38:	ldrb	w8, [sp, #446]
  41cb3c:	cbnz	w8, 41cdd4 <_obstack_memory_used@@Base+0x2c40>
  41cb40:	cmp	w19, #0xa
  41cb44:	b.ne	41cb70 <_obstack_memory_used@@Base+0x29dc>  // b.any
  41cb48:	ldrb	w8, [sp, #445]
  41cb4c:	cmp	w8, #0x0
  41cb50:	cset	w8, ne  // ne = any
  41cb54:	lsl	w8, w8, #1
  41cb58:	tst	w8, #0x1
  41cb5c:	cset	w9, eq  // eq = none
  41cb60:	tbnz	w28, #10, 41cb80 <_obstack_memory_used@@Base+0x29ec>
  41cb64:	b	41cb84 <_obstack_memory_used@@Base+0x29f0>
  41cb68:	cmp	w8, #0xa
  41cb6c:	b.eq	41cb48 <_obstack_memory_used@@Base+0x29b4>  // b.none
  41cb70:	mov	w8, wzr
  41cb74:	tst	w8, #0x1
  41cb78:	cset	w9, eq  // eq = none
  41cb7c:	tbz	w28, #10, 41cb84 <_obstack_memory_used@@Base+0x29f0>
  41cb80:	tbz	w8, #0, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cb84:	ldr	x10, [x11]
  41cb88:	add	x10, x10, x12, lsl #4
  41cb8c:	ldr	w10, [x10, #8]
  41cb90:	tbnz	w9, #0, 41cb98 <_obstack_memory_used@@Base+0x2a04>
  41cb94:	tbnz	w10, #11, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cb98:	tbnz	w8, #1, 41cba0 <_obstack_memory_used@@Base+0x2a0c>
  41cb9c:	tbnz	w10, #13, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cba0:	tbnz	w8, #3, 41cba8 <_obstack_memory_used@@Base+0x2a14>
  41cba4:	tbnz	w10, #15, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cba8:	ldr	x3, [sp, #376]
  41cbac:	add	x2, sp, #0x130
  41cbb0:	mov	x0, x11
  41cbb4:	mov	x1, x12
  41cbb8:	mov	x28, x12
  41cbbc:	bl	428954 <_obstack_memory_used@@Base+0xe7c0>
  41cbc0:	ldr	x11, [sp, #112]
  41cbc4:	cbz	w0, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cbc8:	ldr	w10, [sp, #528]
  41cbcc:	ldp	x9, x11, [sp, #368]
  41cbd0:	ldr	x19, [sp, #496]
  41cbd4:	ldr	x8, [sp, #392]
  41cbd8:	cmp	w10, w0
  41cbdc:	add	x11, x11, w0, sxtw
  41cbe0:	mov	x12, x28
  41cbe4:	csel	w10, w0, w10, lt  // lt = tstop
  41cbe8:	cmp	x9, x11
  41cbec:	str	w10, [sp, #528]
  41cbf0:	str	x11, [sp, #104]
  41cbf4:	b.gt	41cc00 <_obstack_memory_used@@Base+0x2a6c>
  41cbf8:	cmp	x9, x8
  41cbfc:	b.lt	41cc14 <_obstack_memory_used@@Base+0x2a80>  // b.tstop
  41cc00:	ldr	x9, [sp, #352]
  41cc04:	cmp	x9, x11
  41cc08:	b.gt	41cc2c <_obstack_memory_used@@Base+0x2a98>
  41cc0c:	cmp	x9, x8
  41cc10:	b.ge	41cc2c <_obstack_memory_used@@Base+0x2a98>  // b.tcont
  41cc14:	add	w1, w11, #0x1
  41cc18:	add	x0, sp, #0x130
  41cc1c:	bl	426f70 <_obstack_memory_used@@Base+0xcddc>
  41cc20:	ldr	x11, [sp, #104]
  41cc24:	mov	x12, x28
  41cc28:	cbnz	w0, 41dd20 <_obstack_memory_used@@Base+0x3b8c>
  41cc2c:	subs	x8, x11, x19
  41cc30:	b.le	41cc58 <_obstack_memory_used@@Base+0x2ac4>
  41cc34:	ldr	x9, [sp, #488]
  41cc38:	lsl	x2, x8, #3
  41cc3c:	mov	w1, wzr
  41cc40:	add	x9, x9, x19, lsl #3
  41cc44:	add	x0, x9, #0x8
  41cc48:	bl	402470 <memset@plt>
  41cc4c:	ldr	x11, [sp, #104]
  41cc50:	mov	x12, x28
  41cc54:	str	x11, [sp, #496]
  41cc58:	ldr	x10, [sp, #112]
  41cc5c:	stur	wzr, [x29, #-40]
  41cc60:	ldr	x9, [sp, #488]
  41cc64:	ldr	x8, [x10, #24]
  41cc68:	ldr	x10, [x10, #48]
  41cc6c:	ldr	x28, [x9, x11, lsl #3]
  41cc70:	mov	w9, #0x18                  	// #24
  41cc74:	ldr	x8, [x8, x12, lsl #3]
  41cc78:	madd	x2, x8, x9, x10
  41cc7c:	cbz	x28, 41cc9c <_obstack_memory_used@@Base+0x2b08>
  41cc80:	ldr	x1, [x28, #80]
  41cc84:	sub	x0, x29, #0x60
  41cc88:	bl	42736c <_obstack_memory_used@@Base+0xd1d8>
  41cc8c:	ldr	x11, [sp, #104]
  41cc90:	stur	w0, [x29, #-40]
  41cc94:	cbz	w0, 41ccac <_obstack_memory_used@@Base+0x2b18>
  41cc98:	b	41dd24 <_obstack_memory_used@@Base+0x3b90>
  41cc9c:	ldr	x8, [x2, #16]
  41cca0:	ldr	q0, [x2]
  41cca4:	stur	x8, [x29, #-80]
  41cca8:	stur	q0, [x29, #-96]
  41ccac:	cmp	x11, #0x0
  41ccb0:	b.le	41cdb4 <_obstack_memory_used@@Base+0x2c20>
  41ccb4:	ldr	x9, [sp, #392]
  41ccb8:	ldr	x1, [sp, #112]
  41ccbc:	sub	x8, x11, #0x1
  41ccc0:	cmp	x9, x8
  41ccc4:	b.eq	41cdc0 <_obstack_memory_used@@Base+0x2c2c>  // b.none
  41ccc8:	ldr	w9, [sp, #448]
  41cccc:	cmp	w9, #0x2
  41ccd0:	b.lt	41ccf8 <_obstack_memory_used@@Base+0x2b64>  // b.tstop
  41ccd4:	ldr	x9, [sp, #320]
  41ccd8:	ldr	w19, [x9, x8, lsl #2]
  41ccdc:	cmn	w19, #0x1
  41cce0:	b.ne	41cd20 <_obstack_memory_used@@Base+0x2b8c>  // b.any
  41cce4:	sub	x8, x8, #0x1
  41cce8:	cmn	x8, #0x1
  41ccec:	b.ne	41ccd8 <_obstack_memory_used@@Base+0x2b44>  // b.any
  41ccf0:	ldr	w3, [sp, #416]
  41ccf4:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41ccf8:	ldr	x9, [sp, #312]
  41ccfc:	ldr	x10, [sp, #432]
  41cd00:	ldrb	w8, [x9, x8]
  41cd04:	lsr	x9, x8, #3
  41cd08:	and	x9, x9, #0x18
  41cd0c:	ldr	x9, [x10, x9]
  41cd10:	lsr	x9, x9, x8
  41cd14:	tbz	w9, #0, 41cd44 <_obstack_memory_used@@Base+0x2bb0>
  41cd18:	mov	w3, #0x1                   	// #1
  41cd1c:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41cd20:	ldrb	w8, [sp, #446]
  41cd24:	cbnz	w8, 41cdfc <_obstack_memory_used@@Base+0x2c68>
  41cd28:	cmp	w19, #0xa
  41cd2c:	b.ne	41cd4c <_obstack_memory_used@@Base+0x2bb8>  // b.any
  41cd30:	ldrb	w8, [sp, #445]
  41cd34:	cmp	w8, #0x0
  41cd38:	cset	w8, ne  // ne = any
  41cd3c:	lsl	w3, w8, #1
  41cd40:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41cd44:	cmp	w8, #0xa
  41cd48:	b.eq	41cd30 <_obstack_memory_used@@Base+0x2b9c>  // b.none
  41cd4c:	mov	w3, wzr
  41cd50:	sub	x0, x29, #0x28
  41cd54:	sub	x2, x29, #0x60
  41cd58:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41cd5c:	ldr	x8, [sp, #488]
  41cd60:	ldr	x9, [sp, #104]
  41cd64:	str	x0, [x8, x9, lsl #3]
  41cd68:	cbz	x28, 41cd78 <_obstack_memory_used@@Base+0x2be4>
  41cd6c:	ldur	x0, [x29, #-80]
  41cd70:	bl	402620 <free@plt>
  41cd74:	ldr	x9, [sp, #104]
  41cd78:	ldr	x8, [sp, #488]
  41cd7c:	ldr	x11, [sp, #112]
  41cd80:	ldr	x8, [x8, x9, lsl #3]
  41cd84:	cbnz	x8, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cd88:	ldur	w0, [x29, #-40]
  41cd8c:	cbz	w0, 41ca8c <_obstack_memory_used@@Base+0x28f8>
  41cd90:	b	41dd24 <_obstack_memory_used@@Base+0x3b90>
  41cd94:	ldr	w8, [sp, #464]
  41cd98:	mov	w9, #0xa                   	// #10
  41cd9c:	and	w8, w8, #0x2
  41cda0:	eor	w8, w8, w9
  41cda4:	tst	w8, #0x1
  41cda8:	cset	w9, eq  // eq = none
  41cdac:	tbnz	w28, #10, 41cb80 <_obstack_memory_used@@Base+0x29ec>
  41cdb0:	b	41cb84 <_obstack_memory_used@@Base+0x29f0>
  41cdb4:	ldr	w3, [sp, #416]
  41cdb8:	ldr	x1, [sp, #112]
  41cdbc:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41cdc0:	ldr	w8, [sp, #464]
  41cdc4:	mov	w9, #0xa                   	// #10
  41cdc8:	and	w8, w8, #0x2
  41cdcc:	eor	w3, w8, w9
  41cdd0:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41cdd4:	mov	w0, w19
  41cdd8:	str	x12, [sp, #104]
  41cddc:	bl	402710 <iswalnum@plt>
  41cde0:	mov	w9, wzr
  41cde4:	cmp	w19, #0x5f
  41cde8:	mov	w8, #0x1                   	// #1
  41cdec:	b.eq	41ce1c <_obstack_memory_used@@Base+0x2c88>  // b.none
  41cdf0:	ldp	x12, x11, [sp, #104]
  41cdf4:	cbz	w0, 41cb40 <_obstack_memory_used@@Base+0x29ac>
  41cdf8:	b	41cb84 <_obstack_memory_used@@Base+0x29f0>
  41cdfc:	mov	w0, w19
  41ce00:	bl	402710 <iswalnum@plt>
  41ce04:	cmp	w19, #0x5f
  41ce08:	mov	w3, #0x1                   	// #1
  41ce0c:	b.eq	41ce24 <_obstack_memory_used@@Base+0x2c90>  // b.none
  41ce10:	ldr	x1, [sp, #112]
  41ce14:	cbz	w0, 41cd28 <_obstack_memory_used@@Base+0x2b94>
  41ce18:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41ce1c:	ldp	x12, x11, [sp, #104]
  41ce20:	b	41cb84 <_obstack_memory_used@@Base+0x29f0>
  41ce24:	ldr	x1, [sp, #112]
  41ce28:	b	41cd50 <_obstack_memory_used@@Base+0x2bbc>
  41ce2c:	ldr	x11, [x27, #96]
  41ce30:	cbnz	x11, 41dc60 <_obstack_memory_used@@Base+0x3acc>
  41ce34:	ldr	x8, [sp, #456]
  41ce38:	mov	w0, #0x3800                	// #14336
  41ce3c:	str	x23, [sp, #120]
  41ce40:	str	x8, [sp, #104]
  41ce44:	bl	4023a0 <malloc@plt>
  41ce48:	str	x0, [sp, #48]
  41ce4c:	cbz	x0, 41de7c <_obstack_memory_used@@Base+0x3ce8>
  41ce50:	movi	v0.2d, #0x0
  41ce54:	stp	xzr, xzr, [x26]
  41ce58:	stp	q0, q0, [x29, #-96]
  41ce5c:	ldr	x8, [x27, #16]
  41ce60:	cmp	x8, #0x0
  41ce64:	b.le	41d990 <_obstack_memory_used@@Base+0x37fc>
  41ce68:	ldr	x9, [sp, #48]
  41ce6c:	mov	w8, #0x1800                	// #6144
  41ce70:	str	xzr, [sp, #56]
  41ce74:	str	xzr, [sp, #112]
  41ce78:	add	x8, x9, x8
  41ce7c:	str	x8, [sp, #32]
  41ce80:	mov	w8, #0x1818                	// #6168
  41ce84:	add	x8, x9, x8
  41ce88:	str	x8, [sp]
  41ce8c:	b	41cec0 <_obstack_memory_used@@Base+0x2d2c>
  41ce90:	ldr	x8, [sp, #72]
  41ce94:	str	x23, [x0]
  41ce98:	add	x8, x8, #0x1
  41ce9c:	str	x8, [sp, #112]
  41cea0:	movi	v0.2d, #0x0
  41cea4:	stp	q0, q0, [x29, #-96]
  41cea8:	ldr	x9, [sp, #56]
  41ceac:	ldr	x8, [x27, #16]
  41ceb0:	add	x9, x9, #0x1
  41ceb4:	cmp	x9, x8
  41ceb8:	str	x9, [sp, #56]
  41cebc:	b.ge	41d548 <_obstack_memory_used@@Base+0x33b4>  // b.tcont
  41cec0:	ldr	x8, [x27, #24]
  41cec4:	ldr	x9, [sp, #104]
  41cec8:	ldr	x10, [sp, #56]
  41cecc:	ldr	x9, [x9]
  41ced0:	ldr	x8, [x8, x10, lsl #3]
  41ced4:	add	x8, x9, x8, lsl #4
  41ced8:	ldr	w9, [x8, #8]
  41cedc:	str	x8, [sp, #40]
  41cee0:	and	w8, w9, #0xff
  41cee4:	cmp	w8, #0x1
  41cee8:	b.ne	41cfa0 <_obstack_memory_used@@Base+0x2e0c>  // b.any
  41ceec:	ldr	x10, [sp, #40]
  41cef0:	sub	x13, x29, #0x60
  41cef4:	mov	w14, #0x1                   	// #1
  41cef8:	ldrb	w10, [x10]
  41cefc:	lsr	x11, x10, #3
  41cf00:	and	x11, x11, #0x18
  41cf04:	ldr	x12, [x13, x11]
  41cf08:	lsl	x10, x14, x10
  41cf0c:	orr	x10, x10, x12
  41cf10:	str	x10, [x13, x11]
  41cf14:	and	w10, w9, #0x3ff00
  41cf18:	cbz	w10, 41d168 <_obstack_memory_used@@Base+0x2fd4>
  41cf1c:	tbz	w9, #13, 41cf38 <_obstack_memory_used@@Base+0x2da4>
  41cf20:	ldur	x10, [x29, #-96]
  41cf24:	movi	v0.2d, #0x0
  41cf28:	stp	q0, q0, [x29, #-96]
  41cf2c:	tbz	w10, #10, 41cea8 <_obstack_memory_used@@Base+0x2d14>
  41cf30:	mov	w10, #0x400                 	// #1024
  41cf34:	stur	x10, [x29, #-96]
  41cf38:	tbnz	w9, #15, 41cea0 <_obstack_memory_used@@Base+0x2d0c>
  41cf3c:	tbz	w9, #10, 41d0cc <_obstack_memory_used@@Base+0x2f38>
  41cf40:	mov	w10, #0xff                  	// #255
  41cf44:	movk	w10, #0x40, lsl #16
  41cf48:	and	w10, w9, w10
  41cf4c:	cmp	w10, #0x1
  41cf50:	b.eq	41cea0 <_obstack_memory_used@@Base+0x2d0c>  // b.none
  41cf54:	ldr	x10, [sp, #104]
  41cf58:	ldr	w10, [x10, #180]
  41cf5c:	cmp	w10, #0x1
  41cf60:	b.le	41d08c <_obstack_memory_used@@Base+0x2ef8>
  41cf64:	ldr	x11, [sp, #104]
  41cf68:	ldp	q2, q3, [x29, #-96]
  41cf6c:	ldr	x10, [x11, #120]
  41cf70:	ldur	q0, [x11, #184]
  41cf74:	ldr	q1, [x10]
  41cf78:	orn	v0.16b, v0.16b, v1.16b
  41cf7c:	and	v0.16b, v2.16b, v0.16b
  41cf80:	stur	q0, [x29, #-96]
  41cf84:	ldur	q1, [x11, #200]
  41cf88:	ldr	q2, [x10, #16]
  41cf8c:	mov	x10, v0.d[1]
  41cf90:	fmov	x11, d0
  41cf94:	orn	v0.16b, v1.16b, v2.16b
  41cf98:	and	v0.16b, v3.16b, v0.16b
  41cf9c:	b	41d0b0 <_obstack_memory_used@@Base+0x2f1c>
  41cfa0:	cmp	w8, #0x7
  41cfa4:	b.eq	41cfe0 <_obstack_memory_used@@Base+0x2e4c>  // b.none
  41cfa8:	cmp	w8, #0x5
  41cfac:	b.eq	41d018 <_obstack_memory_used@@Base+0x2e84>  // b.none
  41cfb0:	cmp	w8, #0x3
  41cfb4:	b.ne	41cea8 <_obstack_memory_used@@Base+0x2d14>  // b.any
  41cfb8:	ldr	x10, [sp, #40]
  41cfbc:	ldp	q1, q2, [x29, #-96]
  41cfc0:	ldr	x10, [x10]
  41cfc4:	ldr	q0, [x10]
  41cfc8:	orr	v0.16b, v1.16b, v0.16b
  41cfcc:	stur	q0, [x29, #-96]
  41cfd0:	ldr	q0, [x10, #16]
  41cfd4:	orr	v0.16b, v2.16b, v0.16b
  41cfd8:	stur	q0, [x29, #-80]
  41cfdc:	b	41cf14 <_obstack_memory_used@@Base+0x2d80>
  41cfe0:	mov	x10, #0xffffffffffffffff    	// #-1
  41cfe4:	stp	x10, x10, [x29, #-96]
  41cfe8:	ldr	x10, [sp, #104]
  41cfec:	ldr	x10, [x10, #216]
  41cff0:	tbz	w10, #6, 41cff8 <_obstack_memory_used@@Base+0x2e64>
  41cff4:	tbz	w10, #7, 41cf14 <_obstack_memory_used@@Base+0x2d80>
  41cff8:	tst	x10, #0x40
  41cffc:	mov	x11, #0xfffffffffffffffe    	// #-2
  41d000:	mov	x12, #0xfffffffffffffbfe    	// #-1026
  41d004:	csel	x11, x12, x11, eq  // eq = none
  41d008:	tst	x10, #0x80
  41d00c:	mov	x10, #0xfffffffffffffbff    	// #-1025
  41d010:	csel	x10, x10, x11, eq  // eq = none
  41d014:	b	41d084 <_obstack_memory_used@@Base+0x2ef0>
  41d018:	ldr	x10, [sp, #104]
  41d01c:	ldr	w10, [x10, #180]
  41d020:	cmp	w10, #0x2
  41d024:	b.lt	41d050 <_obstack_memory_used@@Base+0x2ebc>  // b.tstop
  41d028:	ldr	x10, [sp, #104]
  41d02c:	ldp	q1, q2, [x29, #-96]
  41d030:	ldr	x10, [x10, #120]
  41d034:	ldr	q0, [x10]
  41d038:	orr	v0.16b, v1.16b, v0.16b
  41d03c:	ldr	q1, [x10, #16]
  41d040:	fmov	x11, d0
  41d044:	orr	v1.16b, v2.16b, v1.16b
  41d048:	stp	q0, q1, [x29, #-96]
  41d04c:	b	41d05c <_obstack_memory_used@@Base+0x2ec8>
  41d050:	movi	v0.2d, #0xffffffffffffffff
  41d054:	mov	x11, #0xffffffffffffffff    	// #-1
  41d058:	stp	q0, q0, [x29, #-96]
  41d05c:	ldr	x10, [sp, #104]
  41d060:	and	x12, x11, #0xfffffffffffffbff
  41d064:	ldr	x10, [x10, #216]
  41d068:	tst	x10, #0x40
  41d06c:	csel	x11, x12, x11, eq  // eq = none
  41d070:	tbz	w10, #6, 41d078 <_obstack_memory_used@@Base+0x2ee4>
  41d074:	tbz	w10, #7, 41cf14 <_obstack_memory_used@@Base+0x2d80>
  41d078:	and	x12, x11, #0xfffffffffffffffe
  41d07c:	tst	x10, #0x80
  41d080:	csel	x10, x11, x12, eq  // eq = none
  41d084:	stur	x10, [x29, #-96]
  41d088:	b	41cf14 <_obstack_memory_used@@Base+0x2d80>
  41d08c:	ldr	x10, [sp, #104]
  41d090:	ldp	q1, q2, [x29, #-96]
  41d094:	ldur	q0, [x10, #184]
  41d098:	and	v0.16b, v1.16b, v0.16b
  41d09c:	stur	q0, [x29, #-96]
  41d0a0:	ldur	q1, [x10, #200]
  41d0a4:	mov	x10, v0.d[1]
  41d0a8:	fmov	x11, d0
  41d0ac:	and	v0.16b, v2.16b, v1.16b
  41d0b0:	orr	x10, x10, x11
  41d0b4:	fmov	x11, d0
  41d0b8:	orr	x10, x10, x11
  41d0bc:	mov	x11, v0.d[1]
  41d0c0:	orr	x10, x10, x11
  41d0c4:	stur	q0, [x29, #-80]
  41d0c8:	cbz	x10, 41cea8 <_obstack_memory_used@@Base+0x2d14>
  41d0cc:	tbz	w9, #11, 41d168 <_obstack_memory_used@@Base+0x2fd4>
  41d0d0:	tbz	w9, #22, 41d0dc <_obstack_memory_used@@Base+0x2f48>
  41d0d4:	cmp	w8, #0x1
  41d0d8:	b.eq	41cea0 <_obstack_memory_used@@Base+0x2d0c>  // b.none
  41d0dc:	ldr	x9, [sp, #104]
  41d0e0:	ldr	w9, [x9, #180]
  41d0e4:	cmp	w9, #0x1
  41d0e8:	b.le	41d128 <_obstack_memory_used@@Base+0x2f94>
  41d0ec:	ldr	x10, [sp, #104]
  41d0f0:	ldp	q2, q3, [x29, #-96]
  41d0f4:	ldr	x9, [x10, #120]
  41d0f8:	ldur	q0, [x10, #184]
  41d0fc:	ldr	q1, [x9]
  41d100:	and	v0.16b, v1.16b, v0.16b
  41d104:	bic	v0.16b, v2.16b, v0.16b
  41d108:	stur	q0, [x29, #-96]
  41d10c:	ldur	q1, [x10, #200]
  41d110:	ldr	q2, [x9, #16]
  41d114:	mov	x9, v0.d[1]
  41d118:	fmov	x10, d0
  41d11c:	and	v0.16b, v2.16b, v1.16b
  41d120:	bic	v0.16b, v3.16b, v0.16b
  41d124:	b	41d14c <_obstack_memory_used@@Base+0x2fb8>
  41d128:	ldr	x9, [sp, #104]
  41d12c:	ldp	q1, q2, [x29, #-96]
  41d130:	ldur	q0, [x9, #184]
  41d134:	bic	v0.16b, v1.16b, v0.16b
  41d138:	stur	q0, [x29, #-96]
  41d13c:	ldur	q1, [x9, #200]
  41d140:	mov	x9, v0.d[1]
  41d144:	fmov	x10, d0
  41d148:	bic	v0.16b, v2.16b, v1.16b
  41d14c:	orr	x9, x9, x10
  41d150:	fmov	x10, d0
  41d154:	orr	x9, x9, x10
  41d158:	mov	x10, v0.d[1]
  41d15c:	orr	x9, x9, x10
  41d160:	stur	q0, [x29, #-80]
  41d164:	cbz	x9, 41cea8 <_obstack_memory_used@@Base+0x2d14>
  41d168:	ldr	x9, [sp, #112]
  41d16c:	cmp	x9, #0x1
  41d170:	b.lt	41d344 <_obstack_memory_used@@Base+0x31b0>  // b.tstop
  41d174:	ldp	x9, x23, [x29, #-96]
  41d178:	cmp	w8, #0x1
  41d17c:	str	x9, [sp, #96]
  41d180:	ldur	x9, [x29, #-80]
  41d184:	str	x9, [sp, #80]
  41d188:	ldur	x9, [x29, #-72]
  41d18c:	str	x9, [sp, #88]
  41d190:	b.ne	41d34c <_obstack_memory_used@@Base+0x31b8>  // b.any
  41d194:	ldr	x19, [sp, #32]
  41d198:	ldr	x8, [sp, #48]
  41d19c:	stp	x8, xzr, [sp, #64]
  41d1a0:	b	41d1c4 <_obstack_memory_used@@Base+0x3030>
  41d1a4:	ldp	x8, x9, [sp, #64]
  41d1a8:	add	x19, x19, #0x20
  41d1ac:	add	x9, x9, #0x1
  41d1b0:	add	x8, x8, #0x18
  41d1b4:	stp	x8, x9, [sp, #64]
  41d1b8:	ldr	x8, [sp, #112]
  41d1bc:	cmp	x9, x8
  41d1c0:	b.ge	41d328 <_obstack_memory_used@@Base+0x3194>  // b.tcont
  41d1c4:	ldr	x8, [sp, #40]
  41d1c8:	ldrb	w8, [x8]
  41d1cc:	lsr	x9, x8, #3
  41d1d0:	and	x9, x9, #0x18
  41d1d4:	ldr	x9, [x19, x9]
  41d1d8:	lsr	x8, x9, x8
  41d1dc:	tbz	w8, #0, 41d1a4 <_obstack_memory_used@@Base+0x3010>
  41d1e0:	ldp	x13, x14, [x19]
  41d1e4:	ldr	x8, [sp, #96]
  41d1e8:	ldp	x16, x15, [x19, #16]
  41d1ec:	and	x9, x14, x23
  41d1f0:	and	x11, x13, x8
  41d1f4:	ldr	x8, [sp, #80]
  41d1f8:	orr	x10, x9, x11
  41d1fc:	and	x8, x16, x8
  41d200:	orr	x12, x10, x8
  41d204:	ldr	x10, [sp, #88]
  41d208:	and	x10, x15, x10
  41d20c:	orr	x12, x12, x10
  41d210:	cbz	x12, 41d1a4 <_obstack_memory_used@@Base+0x3010>
  41d214:	ldp	x18, x17, [sp, #88]
  41d218:	bic	x12, x13, x17
  41d21c:	bic	x17, x17, x13
  41d220:	str	x17, [sp, #96]
  41d224:	ldr	x17, [sp, #80]
  41d228:	bic	x13, x14, x23
  41d22c:	bic	x23, x23, x14
  41d230:	bic	x14, x16, x17
  41d234:	bic	x17, x17, x16
  41d238:	orr	x16, x13, x12
  41d23c:	str	x17, [sp, #80]
  41d240:	orr	x17, x16, x14
  41d244:	bic	x16, x15, x18
  41d248:	orr	x17, x17, x16
  41d24c:	bic	x18, x18, x15
  41d250:	str	x18, [sp, #88]
  41d254:	cbz	x17, 41d2f8 <_obstack_memory_used@@Base+0x3164>
  41d258:	ldr	x17, [sp, #112]
  41d25c:	ldr	x15, [sp, #32]
  41d260:	add	x15, x15, x17, lsl #5
  41d264:	stp	x12, x13, [x15]
  41d268:	stp	x14, x16, [x15, #16]
  41d26c:	stp	x11, x9, [x19]
  41d270:	ldr	x11, [sp, #64]
  41d274:	stp	x8, x10, [x19, #16]
  41d278:	ldr	x10, [sp, #48]
  41d27c:	mov	w9, #0x18                  	// #24
  41d280:	ldr	x8, [x11, #8]
  41d284:	madd	x9, x17, x9, x10
  41d288:	str	x9, [sp, #24]
  41d28c:	str	x8, [x9, #8]
  41d290:	ldr	x9, [x11, #8]
  41d294:	cmp	x9, #0x0
  41d298:	str	x9, [sp, #16]
  41d29c:	b.le	41d2e0 <_obstack_memory_used@@Base+0x314c>
  41d2a0:	ldr	x9, [sp, #24]
  41d2a4:	lsl	x0, x8, #3
  41d2a8:	str	x8, [x9]
  41d2ac:	bl	4023a0 <malloc@plt>
  41d2b0:	ldr	x9, [sp, #48]
  41d2b4:	ldr	x10, [sp, #112]
  41d2b8:	mov	w8, #0x18                  	// #24
  41d2bc:	madd	x8, x10, x8, x9
  41d2c0:	str	x0, [x8, #16]
  41d2c4:	cbz	x0, 41de24 <_obstack_memory_used@@Base+0x3c90>
  41d2c8:	ldr	x8, [sp, #64]
  41d2cc:	ldr	x1, [x8, #16]
  41d2d0:	ldr	x8, [sp, #16]
  41d2d4:	lsl	x2, x8, #3
  41d2d8:	bl	402210 <memcpy@plt>
  41d2dc:	b	41d2ec <_obstack_memory_used@@Base+0x3158>
  41d2e0:	ldr	x8, [sp, #24]
  41d2e4:	stp	xzr, xzr, [x8]
  41d2e8:	str	xzr, [x8, #16]
  41d2ec:	ldr	x8, [sp, #112]
  41d2f0:	add	x8, x8, #0x1
  41d2f4:	str	x8, [sp, #112]
  41d2f8:	ldr	x8, [x27, #24]
  41d2fc:	ldp	x9, x0, [sp, #56]
  41d300:	ldr	x1, [x8, x9, lsl #3]
  41d304:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  41d308:	tbz	w0, #0, 41dde4 <_obstack_memory_used@@Base+0x3c50>
  41d30c:	ldr	x8, [sp, #96]
  41d310:	ldr	x9, [sp, #80]
  41d314:	orr	x8, x23, x8
  41d318:	orr	x8, x8, x9
  41d31c:	ldr	x9, [sp, #88]
  41d320:	orr	x8, x8, x9
  41d324:	cbnz	x8, 41d1a4 <_obstack_memory_used@@Base+0x3010>
  41d328:	ldr	x8, [sp, #96]
  41d32c:	stp	x8, x23, [x29, #-96]
  41d330:	ldr	x8, [sp, #80]
  41d334:	stur	x8, [x29, #-80]
  41d338:	ldr	x8, [sp, #88]
  41d33c:	stur	x8, [x29, #-72]
  41d340:	b	41d4ec <_obstack_memory_used@@Base+0x3358>
  41d344:	str	xzr, [sp, #72]
  41d348:	b	41d4ec <_obstack_memory_used@@Base+0x3358>
  41d34c:	ldur	x8, [x29, #-88]
  41d350:	ldr	x19, [sp]
  41d354:	str	x8, [sp, #40]
  41d358:	ldr	x8, [sp, #48]
  41d35c:	stp	x8, xzr, [sp, #64]
  41d360:	b	41d384 <_obstack_memory_used@@Base+0x31f0>
  41d364:	ldp	x8, x9, [sp, #64]
  41d368:	add	x19, x19, #0x20
  41d36c:	add	x9, x9, #0x1
  41d370:	add	x8, x8, #0x18
  41d374:	stp	x8, x9, [sp, #64]
  41d378:	ldr	x8, [sp, #112]
  41d37c:	cmp	x9, x8
  41d380:	b.ge	41d4cc <_obstack_memory_used@@Base+0x3338>  // b.tcont
  41d384:	ldp	x13, x14, [x19, #-24]
  41d388:	ldr	x8, [sp, #96]
  41d38c:	ldp	x16, x15, [x19, #-8]
  41d390:	and	x9, x14, x23
  41d394:	and	x11, x13, x8
  41d398:	ldr	x8, [sp, #80]
  41d39c:	orr	x10, x9, x11
  41d3a0:	and	x8, x16, x8
  41d3a4:	orr	x12, x10, x8
  41d3a8:	ldr	x10, [sp, #88]
  41d3ac:	and	x10, x15, x10
  41d3b0:	orr	x12, x12, x10
  41d3b4:	cbz	x12, 41d364 <_obstack_memory_used@@Base+0x31d0>
  41d3b8:	ldp	x18, x17, [sp, #88]
  41d3bc:	bic	x12, x13, x17
  41d3c0:	bic	x17, x17, x13
  41d3c4:	str	x17, [sp, #96]
  41d3c8:	ldr	x17, [sp, #80]
  41d3cc:	bic	x13, x14, x23
  41d3d0:	bic	x14, x23, x14
  41d3d4:	str	x14, [sp, #40]
  41d3d8:	bic	x14, x16, x17
  41d3dc:	bic	x17, x17, x16
  41d3e0:	orr	x16, x13, x12
  41d3e4:	str	x17, [sp, #80]
  41d3e8:	orr	x17, x16, x14
  41d3ec:	bic	x16, x15, x18
  41d3f0:	orr	x17, x17, x16
  41d3f4:	bic	x18, x18, x15
  41d3f8:	str	x18, [sp, #88]
  41d3fc:	cbz	x17, 41d498 <_obstack_memory_used@@Base+0x3304>
  41d400:	ldr	x17, [sp, #112]
  41d404:	ldr	x15, [sp, #32]
  41d408:	add	x15, x15, x17, lsl #5
  41d40c:	stp	x12, x13, [x15]
  41d410:	stp	x14, x16, [x15, #16]
  41d414:	stp	x11, x9, [x19, #-24]
  41d418:	ldr	x11, [sp, #64]
  41d41c:	stp	x8, x10, [x19, #-8]
  41d420:	ldr	x10, [sp, #48]
  41d424:	mov	w9, #0x18                  	// #24
  41d428:	ldr	x8, [x11, #8]
  41d42c:	madd	x9, x17, x9, x10
  41d430:	str	x9, [sp, #24]
  41d434:	str	x8, [x9, #8]
  41d438:	ldr	x23, [x11, #8]
  41d43c:	cmp	x23, #0x1
  41d440:	b.lt	41d480 <_obstack_memory_used@@Base+0x32ec>  // b.tstop
  41d444:	ldr	x9, [sp, #24]
  41d448:	lsl	x0, x8, #3
  41d44c:	str	x8, [x9]
  41d450:	bl	4023a0 <malloc@plt>
  41d454:	ldr	x9, [sp, #48]
  41d458:	ldr	x10, [sp, #112]
  41d45c:	mov	w8, #0x18                  	// #24
  41d460:	madd	x8, x10, x8, x9
  41d464:	str	x0, [x8, #16]
  41d468:	cbz	x0, 41de00 <_obstack_memory_used@@Base+0x3c6c>
  41d46c:	ldr	x8, [sp, #64]
  41d470:	lsl	x2, x23, #3
  41d474:	ldr	x1, [x8, #16]
  41d478:	bl	402210 <memcpy@plt>
  41d47c:	b	41d48c <_obstack_memory_used@@Base+0x32f8>
  41d480:	ldr	x8, [sp, #24]
  41d484:	stp	xzr, xzr, [x8]
  41d488:	str	xzr, [x8, #16]
  41d48c:	ldr	x8, [sp, #112]
  41d490:	add	x8, x8, #0x1
  41d494:	str	x8, [sp, #112]
  41d498:	ldr	x8, [x27, #24]
  41d49c:	ldp	x9, x0, [sp, #56]
  41d4a0:	ldr	x1, [x8, x9, lsl #3]
  41d4a4:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  41d4a8:	tbz	w0, #0, 41ddc0 <_obstack_memory_used@@Base+0x3c2c>
  41d4ac:	ldr	x8, [sp, #96]
  41d4b0:	ldr	x23, [sp, #40]
  41d4b4:	ldr	x9, [sp, #80]
  41d4b8:	orr	x8, x23, x8
  41d4bc:	orr	x8, x8, x9
  41d4c0:	ldr	x9, [sp, #88]
  41d4c4:	orr	x8, x8, x9
  41d4c8:	cbnz	x8, 41d364 <_obstack_memory_used@@Base+0x31d0>
  41d4cc:	ldr	x8, [sp, #80]
  41d4d0:	stur	x8, [x29, #-80]
  41d4d4:	ldr	x8, [sp, #88]
  41d4d8:	stur	x8, [x29, #-72]
  41d4dc:	ldr	x8, [sp, #40]
  41d4e0:	stur	x8, [x29, #-88]
  41d4e4:	ldr	x8, [sp, #96]
  41d4e8:	stur	x8, [x29, #-96]
  41d4ec:	ldr	x8, [sp, #112]
  41d4f0:	ldr	x9, [sp, #72]
  41d4f4:	cmp	x9, x8
  41d4f8:	b.ne	41cea8 <_obstack_memory_used@@Base+0x2d14>  // b.any
  41d4fc:	ldr	x8, [sp, #32]
  41d500:	ldr	x10, [sp, #72]
  41d504:	ldp	q1, q0, [x29, #-96]
  41d508:	ldr	x9, [sp, #56]
  41d50c:	mov	w0, #0x8                   	// #8
  41d510:	add	x8, x8, x10, lsl #5
  41d514:	stp	q1, q0, [x8]
  41d518:	ldr	x8, [x27, #24]
  41d51c:	ldr	x23, [x8, x9, lsl #3]
  41d520:	ldr	x9, [sp, #48]
  41d524:	mov	w8, #0x18                  	// #24
  41d528:	madd	x19, x10, x8, x9
  41d52c:	mov	w8, #0x1                   	// #1
  41d530:	dup	v0.2d, x8
  41d534:	str	q0, [x19]
  41d538:	bl	4023a0 <malloc@plt>
  41d53c:	str	x0, [x19, #16]
  41d540:	cbnz	x0, 41ce90 <_obstack_memory_used@@Base+0x2cfc>
  41d544:	b	41de94 <_obstack_memory_used@@Base+0x3d00>
  41d548:	ldr	x8, [sp, #112]
  41d54c:	cmp	x8, #0x0
  41d550:	b.le	41d9b0 <_obstack_memory_used@@Base+0x381c>
  41d554:	ldr	x8, [sp, #112]
  41d558:	add	x8, x8, #0x1
  41d55c:	lsl	x0, x8, #3
  41d560:	stp	x8, xzr, [x29, #-40]
  41d564:	bl	4023a0 <malloc@plt>
  41d568:	cmp	x0, #0x0
  41d56c:	mov	w8, #0xc                   	// #12
  41d570:	mov	x19, x0
  41d574:	csel	w8, w8, wzr, eq  // eq = none
  41d578:	stur	x0, [x29, #-24]
  41d57c:	stur	w8, [x29, #-12]
  41d580:	cbz	x0, 41dea8 <_obstack_memory_used@@Base+0x3d14>
  41d584:	ldr	x8, [sp, #112]
  41d588:	add	x8, x8, x8, lsl #1
  41d58c:	lsl	x0, x8, #3
  41d590:	bl	4023a0 <malloc@plt>
  41d594:	str	x0, [sp, #56]
  41d598:	cbz	x0, 41dea8 <_obstack_memory_used@@Base+0x3d14>
  41d59c:	ldr	x9, [sp, #112]
  41d5a0:	ldr	x10, [sp, #56]
  41d5a4:	mov	w8, wzr
  41d5a8:	stp	xzr, xzr, [sp, #72]
  41d5ac:	lsl	x9, x9, #3
  41d5b0:	add	x10, x10, x9
  41d5b4:	add	x9, x10, x9
  41d5b8:	str	xzr, [sp, #64]
  41d5bc:	str	xzr, [sp, #40]
  41d5c0:	str	xzr, [sp, #88]
  41d5c4:	str	wzr, [sp, #12]
  41d5c8:	stp	x9, x10, [sp, #16]
  41d5cc:	b	41d648 <_obstack_memory_used@@Base+0x34b4>
  41d5d0:	ldrsb	w9, [x0, #104]
  41d5d4:	tbnz	w9, #31, 41d70c <_obstack_memory_used@@Base+0x3578>
  41d5d8:	ldr	x9, [sp, #88]
  41d5dc:	ldp	x11, x10, [sp, #16]
  41d5e0:	lsl	x9, x9, #3
  41d5e4:	str	x0, [x10, x9]
  41d5e8:	ldr	x10, [sp, #56]
  41d5ec:	ldr	x10, [x10, x9]
  41d5f0:	str	x10, [x11, x9]
  41d5f4:	ldr	x9, [sp, #32]
  41d5f8:	ldr	x14, [sp, #88]
  41d5fc:	ldr	x13, [sp, #112]
  41d600:	add	x9, x9, x14, lsl #5
  41d604:	add	x14, x14, #0x1
  41d608:	ldp	x10, x11, [x9]
  41d60c:	cmp	x14, x13
  41d610:	ldr	x13, [sp, #40]
  41d614:	ldp	x12, x9, [x9, #16]
  41d618:	orr	x13, x10, x13
  41d61c:	ldr	x10, [sp, #64]
  41d620:	str	x13, [sp, #40]
  41d624:	orr	x10, x11, x10
  41d628:	str	x10, [sp, #64]
  41d62c:	ldr	x10, [sp, #72]
  41d630:	orr	x10, x12, x10
  41d634:	str	x10, [sp, #72]
  41d638:	ldr	x10, [sp, #80]
  41d63c:	orr	x10, x9, x10
  41d640:	stp	x10, x14, [sp, #80]
  41d644:	b.eq	41d798 <_obstack_memory_used@@Base+0x3604>  // b.none
  41d648:	ldr	x10, [sp, #48]
  41d64c:	ldr	x11, [sp, #88]
  41d650:	mov	w9, #0x18                  	// #24
  41d654:	stur	xzr, [x29, #-32]
  41d658:	madd	x10, x11, x9, x10
  41d65c:	ldr	x9, [x10, #8]!
  41d660:	cmp	x9, #0x1
  41d664:	str	x10, [sp, #96]
  41d668:	b.lt	41d6dc <_obstack_memory_used@@Base+0x3548>  // b.tstop
  41d66c:	ldr	x11, [sp, #48]
  41d670:	ldr	x12, [sp, #88]
  41d674:	mov	w10, #0x18                  	// #24
  41d678:	mov	x19, xzr
  41d67c:	madd	x10, x12, x10, x11
  41d680:	ldr	x12, [sp, #104]
  41d684:	add	x23, x10, #0x10
  41d688:	b	41d6a4 <_obstack_memory_used@@Base+0x3510>
  41d68c:	ldp	x8, x12, [sp, #96]
  41d690:	ldr	x9, [x8]
  41d694:	mov	w8, wzr
  41d698:	add	x19, x19, #0x1
  41d69c:	cmp	x19, x9
  41d6a0:	b.ge	41d6d8 <_obstack_memory_used@@Base+0x3544>  // b.tcont
  41d6a4:	ldr	x10, [x23]
  41d6a8:	ldr	x11, [x12, #24]
  41d6ac:	ldr	x10, [x10, x19, lsl #3]
  41d6b0:	ldr	x10, [x11, x10, lsl #3]
  41d6b4:	cmn	x10, #0x1
  41d6b8:	b.eq	41d698 <_obstack_memory_used@@Base+0x3504>  // b.none
  41d6bc:	ldr	x8, [x12, #48]
  41d6c0:	mov	w9, #0x18                  	// #24
  41d6c4:	sub	x0, x29, #0x28
  41d6c8:	madd	x1, x10, x9, x8
  41d6cc:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  41d6d0:	cbz	w0, 41d68c <_obstack_memory_used@@Base+0x34f8>
  41d6d4:	b	41dd70 <_obstack_memory_used@@Base+0x3bdc>
  41d6d8:	stur	w8, [x29, #-12]
  41d6dc:	ldr	x1, [sp, #104]
  41d6e0:	sub	x0, x29, #0xc
  41d6e4:	sub	x2, x29, #0x28
  41d6e8:	mov	w3, wzr
  41d6ec:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41d6f0:	ldur	w8, [x29, #-12]
  41d6f4:	ldr	x9, [sp, #56]
  41d6f8:	ldr	x10, [sp, #88]
  41d6fc:	str	x0, [x9, x10, lsl #3]
  41d700:	cbnz	x0, 41d5d0 <_obstack_memory_used@@Base+0x343c>
  41d704:	cbz	w8, 41d5d0 <_obstack_memory_used@@Base+0x343c>
  41d708:	b	41dd74 <_obstack_memory_used@@Base+0x3be0>
  41d70c:	ldr	x1, [sp, #104]
  41d710:	sub	x0, x29, #0xc
  41d714:	sub	x2, x29, #0x28
  41d718:	mov	w3, #0x1                   	// #1
  41d71c:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41d720:	ldr	x8, [sp, #24]
  41d724:	ldr	x9, [sp, #88]
  41d728:	str	x0, [x8, x9, lsl #3]
  41d72c:	cbnz	x0, 41d738 <_obstack_memory_used@@Base+0x35a4>
  41d730:	ldur	w8, [x29, #-12]
  41d734:	cbnz	w8, 41dd74 <_obstack_memory_used@@Base+0x3be0>
  41d738:	ldr	x8, [sp, #56]
  41d73c:	ldr	x9, [sp, #88]
  41d740:	ldr	x8, [x8, x9, lsl #3]
  41d744:	cmp	x8, x0
  41d748:	b.eq	41d768 <_obstack_memory_used@@Base+0x35d4>  // b.none
  41d74c:	ldr	x8, [sp, #104]
  41d750:	ldr	w9, [sp, #12]
  41d754:	ldr	w8, [x8, #180]
  41d758:	cmp	w8, #0x1
  41d75c:	cset	w8, gt
  41d760:	orr	w9, w9, w8
  41d764:	str	w9, [sp, #12]
  41d768:	ldr	x1, [sp, #104]
  41d76c:	sub	x0, x29, #0xc
  41d770:	sub	x2, x29, #0x28
  41d774:	mov	w3, #0x2                   	// #2
  41d778:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  41d77c:	ldur	w8, [x29, #-12]
  41d780:	ldr	x9, [sp, #88]
  41d784:	ldr	x10, [sp, #16]
  41d788:	str	x0, [x10, x9, lsl #3]
  41d78c:	cbnz	x0, 41d5f4 <_obstack_memory_used@@Base+0x3460>
  41d790:	cbz	w8, 41d5f4 <_obstack_memory_used@@Base+0x3460>
  41d794:	b	41dd74 <_obstack_memory_used@@Base+0x3be0>
  41d798:	ldr	w8, [sp, #12]
  41d79c:	tbnz	w8, #0, 41d9c4 <_obstack_memory_used@@Base+0x3830>
  41d7a0:	mov	w0, #0x8                   	// #8
  41d7a4:	mov	w1, #0x100                 	// #256
  41d7a8:	bl	402480 <calloc@plt>
  41d7ac:	str	x0, [x26]
  41d7b0:	cbz	x0, 41dd74 <_obstack_memory_used@@Base+0x3be0>
  41d7b4:	ldr	x8, [sp, #40]
  41d7b8:	cbz	x8, 41d828 <_obstack_memory_used@@Base+0x3694>
  41d7bc:	ldr	x9, [sp, #40]
  41d7c0:	mov	x8, xzr
  41d7c4:	mov	w10, #0x1                   	// #1
  41d7c8:	tbnz	w9, #0, 41d7e0 <_obstack_memory_used@@Base+0x364c>
  41d7cc:	lsl	x10, x10, #1
  41d7d0:	lsr	x9, x9, #1
  41d7d4:	add	x8, x8, #0x1
  41d7d8:	cbnz	x9, 41d7c8 <_obstack_memory_used@@Base+0x3634>
  41d7dc:	b	41d828 <_obstack_memory_used@@Base+0x3694>
  41d7e0:	ldr	x12, [sp, #32]
  41d7e4:	mov	x11, #0xfffffffffffffff8    	// #-8
  41d7e8:	ldr	x13, [x12], #32
  41d7ec:	add	x11, x11, #0x8
  41d7f0:	tst	x13, x10
  41d7f4:	b.eq	41d7e8 <_obstack_memory_used@@Base+0x3654>  // b.none
  41d7f8:	ldr	x12, [sp, #104]
  41d7fc:	ldr	x13, [sp, #24]
  41d800:	ldr	x12, [x12, #184]
  41d804:	tst	x12, x10
  41d808:	ldr	x12, [sp, #56]
  41d80c:	csel	x12, x12, x13, eq  // eq = none
  41d810:	ldr	x11, [x12, x11]
  41d814:	str	x11, [x0, x8, lsl #3]
  41d818:	lsl	x10, x10, #1
  41d81c:	lsr	x9, x9, #1
  41d820:	add	x8, x8, #0x1
  41d824:	cbnz	x9, 41d7c8 <_obstack_memory_used@@Base+0x3634>
  41d828:	ldr	x8, [sp, #64]
  41d82c:	cbz	x8, 41d8a4 <_obstack_memory_used@@Base+0x3710>
  41d830:	ldr	x9, [sp, #48]
  41d834:	mov	w8, #0x1808                	// #6152
  41d838:	mov	w10, #0x1                   	// #1
  41d83c:	add	x8, x9, x8
  41d840:	mov	w9, #0x40                  	// #64
  41d844:	ldr	x11, [sp, #64]
  41d848:	tbnz	w11, #0, 41d868 <_obstack_memory_used@@Base+0x36d4>
  41d84c:	ldr	x11, [sp, #64]
  41d850:	lsl	x10, x10, #1
  41d854:	add	x9, x9, #0x1
  41d858:	lsr	x11, x11, #1
  41d85c:	str	x11, [sp, #64]
  41d860:	cbnz	x11, 41d844 <_obstack_memory_used@@Base+0x36b0>
  41d864:	b	41d8a4 <_obstack_memory_used@@Base+0x3710>
  41d868:	mov	x11, #0xfffffffffffffff8    	// #-8
  41d86c:	mov	x12, x8
  41d870:	ldr	x13, [x12], #32
  41d874:	add	x11, x11, #0x8
  41d878:	tst	x13, x10
  41d87c:	b.eq	41d870 <_obstack_memory_used@@Base+0x36dc>  // b.none
  41d880:	ldr	x12, [sp, #104]
  41d884:	ldr	x13, [sp, #24]
  41d888:	ldr	x12, [x12, #192]
  41d88c:	tst	x12, x10
  41d890:	ldr	x12, [sp, #56]
  41d894:	csel	x12, x12, x13, eq  // eq = none
  41d898:	ldr	x11, [x12, x11]
  41d89c:	str	x11, [x0, x9, lsl #3]
  41d8a0:	b	41d84c <_obstack_memory_used@@Base+0x36b8>
  41d8a4:	ldr	x8, [sp, #72]
  41d8a8:	cbz	x8, 41d920 <_obstack_memory_used@@Base+0x378c>
  41d8ac:	ldr	x9, [sp, #48]
  41d8b0:	mov	w8, #0x1810                	// #6160
  41d8b4:	mov	w10, #0x1                   	// #1
  41d8b8:	add	x8, x9, x8
  41d8bc:	mov	w9, #0x80                  	// #128
  41d8c0:	ldr	x11, [sp, #72]
  41d8c4:	tbnz	w11, #0, 41d8e4 <_obstack_memory_used@@Base+0x3750>
  41d8c8:	ldr	x11, [sp, #72]
  41d8cc:	lsl	x10, x10, #1
  41d8d0:	add	x9, x9, #0x1
  41d8d4:	lsr	x11, x11, #1
  41d8d8:	str	x11, [sp, #72]
  41d8dc:	cbnz	x11, 41d8c0 <_obstack_memory_used@@Base+0x372c>
  41d8e0:	b	41d920 <_obstack_memory_used@@Base+0x378c>
  41d8e4:	mov	x11, #0xfffffffffffffff8    	// #-8
  41d8e8:	mov	x12, x8
  41d8ec:	ldr	x13, [x12], #32
  41d8f0:	add	x11, x11, #0x8
  41d8f4:	tst	x13, x10
  41d8f8:	b.eq	41d8ec <_obstack_memory_used@@Base+0x3758>  // b.none
  41d8fc:	ldr	x12, [sp, #104]
  41d900:	ldr	x13, [sp, #24]
  41d904:	ldr	x12, [x12, #200]
  41d908:	tst	x12, x10
  41d90c:	ldr	x12, [sp, #56]
  41d910:	csel	x12, x12, x13, eq  // eq = none
  41d914:	ldr	x11, [x12, x11]
  41d918:	str	x11, [x0, x9, lsl #3]
  41d91c:	b	41d8c8 <_obstack_memory_used@@Base+0x3734>
  41d920:	ldr	x8, [sp, #80]
  41d924:	cbz	x8, 41dbac <_obstack_memory_used@@Base+0x3a18>
  41d928:	mov	w8, #0xc0                  	// #192
  41d92c:	mov	w9, #0x1                   	// #1
  41d930:	ldr	x10, [sp, #80]
  41d934:	tbnz	w10, #0, 41d954 <_obstack_memory_used@@Base+0x37c0>
  41d938:	ldr	x10, [sp, #80]
  41d93c:	lsl	x9, x9, #1
  41d940:	add	x8, x8, #0x1
  41d944:	lsr	x10, x10, #1
  41d948:	str	x10, [sp, #80]
  41d94c:	cbnz	x10, 41d930 <_obstack_memory_used@@Base+0x379c>
  41d950:	b	41dbac <_obstack_memory_used@@Base+0x3a18>
  41d954:	ldr	x11, [sp]
  41d958:	mov	x10, #0xfffffffffffffff8    	// #-8
  41d95c:	ldr	x12, [x11], #32
  41d960:	add	x10, x10, #0x8
  41d964:	tst	x12, x9
  41d968:	b.eq	41d95c <_obstack_memory_used@@Base+0x37c8>  // b.none
  41d96c:	ldr	x11, [sp, #104]
  41d970:	ldr	x12, [sp, #24]
  41d974:	ldr	x11, [x11, #208]
  41d978:	tst	x11, x9
  41d97c:	ldr	x11, [sp, #56]
  41d980:	csel	x11, x11, x12, eq  // eq = none
  41d984:	ldr	x10, [x11, x10]
  41d988:	str	x10, [x0, x8, lsl #3]
  41d98c:	b	41d938 <_obstack_memory_used@@Base+0x37a4>
  41d990:	ldr	x0, [sp, #48]
  41d994:	bl	402620 <free@plt>
  41d998:	mov	w0, #0x8                   	// #8
  41d99c:	mov	w1, #0x100                 	// #256
  41d9a0:	bl	402480 <calloc@plt>
  41d9a4:	str	x0, [x26]
  41d9a8:	cbnz	x0, 41dc3c <_obstack_memory_used@@Base+0x3aa8>
  41d9ac:	b	41de7c <_obstack_memory_used@@Base+0x3ce8>
  41d9b0:	ldr	x0, [sp, #48]
  41d9b4:	bl	402620 <free@plt>
  41d9b8:	ldr	x8, [sp, #112]
  41d9bc:	cbz	x8, 41d998 <_obstack_memory_used@@Base+0x3804>
  41d9c0:	b	41de7c <_obstack_memory_used@@Base+0x3ce8>
  41d9c4:	mov	w0, #0x8                   	// #8
  41d9c8:	mov	w1, #0x200                 	// #512
  41d9cc:	bl	402480 <calloc@plt>
  41d9d0:	str	x0, [x27, #96]
  41d9d4:	cbz	x0, 41dd74 <_obstack_memory_used@@Base+0x3be0>
  41d9d8:	ldr	x8, [sp, #40]
  41d9dc:	cbz	x8, 41da4c <_obstack_memory_used@@Base+0x38b8>
  41d9e0:	ldr	x9, [sp, #56]
  41d9e4:	ldr	x10, [sp, #40]
  41d9e8:	mov	x8, xzr
  41d9ec:	mov	w11, #0x1                   	// #1
  41d9f0:	sub	x9, x9, #0x8
  41d9f4:	tbnz	w10, #0, 41da0c <_obstack_memory_used@@Base+0x3878>
  41d9f8:	lsl	x11, x11, #1
  41d9fc:	lsr	x10, x10, #1
  41da00:	add	x8, x8, #0x1
  41da04:	cbnz	x10, 41d9f4 <_obstack_memory_used@@Base+0x3860>
  41da08:	b	41da4c <_obstack_memory_used@@Base+0x38b8>
  41da0c:	ldr	x13, [sp, #32]
  41da10:	mov	x12, x9
  41da14:	ldr	x14, [x13], #32
  41da18:	add	x12, x12, #0x8
  41da1c:	tst	x14, x11
  41da20:	b.eq	41da14 <_obstack_memory_used@@Base+0x3880>  // b.none
  41da24:	ldr	x14, [sp, #112]
  41da28:	ldr	x13, [x12]
  41da2c:	ldr	x12, [x12, x14, lsl #3]
  41da30:	add	x14, x0, x8, lsl #3
  41da34:	str	x13, [x14]
  41da38:	str	x12, [x14, #2048]
  41da3c:	lsl	x11, x11, #1
  41da40:	lsr	x10, x10, #1
  41da44:	add	x8, x8, #0x1
  41da48:	cbnz	x10, 41d9f4 <_obstack_memory_used@@Base+0x3860>
  41da4c:	ldr	x8, [sp, #64]
  41da50:	cbz	x8, 41dac4 <_obstack_memory_used@@Base+0x3930>
  41da54:	ldp	x10, x8, [sp, #48]
  41da58:	mov	w9, #0x1808                	// #6152
  41da5c:	mov	w11, #0x1                   	// #1
  41da60:	sub	x8, x8, #0x8
  41da64:	add	x9, x10, x9
  41da68:	mov	w10, #0x40                  	// #64
  41da6c:	ldr	x12, [sp, #64]
  41da70:	tbnz	w12, #0, 41da90 <_obstack_memory_used@@Base+0x38fc>
  41da74:	ldr	x12, [sp, #64]
  41da78:	lsl	x11, x11, #1
  41da7c:	add	x10, x10, #0x1
  41da80:	lsr	x12, x12, #1
  41da84:	str	x12, [sp, #64]
  41da88:	cbnz	x12, 41da6c <_obstack_memory_used@@Base+0x38d8>
  41da8c:	b	41dac4 <_obstack_memory_used@@Base+0x3930>
  41da90:	mov	x13, x9
  41da94:	mov	x12, x8
  41da98:	ldr	x14, [x13], #32
  41da9c:	add	x12, x12, #0x8
  41daa0:	tst	x14, x11
  41daa4:	b.eq	41da98 <_obstack_memory_used@@Base+0x3904>  // b.none
  41daa8:	ldr	x14, [sp, #112]
  41daac:	ldr	x13, [x12]
  41dab0:	ldr	x12, [x12, x14, lsl #3]
  41dab4:	add	x14, x0, x10, lsl #3
  41dab8:	str	x13, [x14]
  41dabc:	str	x12, [x14, #2048]
  41dac0:	b	41da74 <_obstack_memory_used@@Base+0x38e0>
  41dac4:	ldr	x8, [sp, #72]
  41dac8:	cbz	x8, 41db3c <_obstack_memory_used@@Base+0x39a8>
  41dacc:	ldp	x10, x8, [sp, #48]
  41dad0:	mov	w9, #0x1810                	// #6160
  41dad4:	mov	w11, #0x1                   	// #1
  41dad8:	sub	x8, x8, #0x8
  41dadc:	add	x9, x10, x9
  41dae0:	mov	w10, #0x80                  	// #128
  41dae4:	ldr	x12, [sp, #72]
  41dae8:	tbnz	w12, #0, 41db08 <_obstack_memory_used@@Base+0x3974>
  41daec:	ldr	x12, [sp, #72]
  41daf0:	lsl	x11, x11, #1
  41daf4:	add	x10, x10, #0x1
  41daf8:	lsr	x12, x12, #1
  41dafc:	str	x12, [sp, #72]
  41db00:	cbnz	x12, 41dae4 <_obstack_memory_used@@Base+0x3950>
  41db04:	b	41db3c <_obstack_memory_used@@Base+0x39a8>
  41db08:	mov	x13, x9
  41db0c:	mov	x12, x8
  41db10:	ldr	x14, [x13], #32
  41db14:	add	x12, x12, #0x8
  41db18:	tst	x14, x11
  41db1c:	b.eq	41db10 <_obstack_memory_used@@Base+0x397c>  // b.none
  41db20:	ldr	x14, [sp, #112]
  41db24:	ldr	x13, [x12]
  41db28:	ldr	x12, [x12, x14, lsl #3]
  41db2c:	add	x14, x0, x10, lsl #3
  41db30:	str	x13, [x14]
  41db34:	str	x12, [x14, #2048]
  41db38:	b	41daec <_obstack_memory_used@@Base+0x3958>
  41db3c:	ldr	x8, [sp, #80]
  41db40:	cbz	x8, 41dbac <_obstack_memory_used@@Base+0x3a18>
  41db44:	ldr	x8, [sp, #56]
  41db48:	mov	w9, #0xc0                  	// #192
  41db4c:	mov	w10, #0x1                   	// #1
  41db50:	sub	x8, x8, #0x8
  41db54:	ldr	x11, [sp, #80]
  41db58:	tbnz	w11, #0, 41db78 <_obstack_memory_used@@Base+0x39e4>
  41db5c:	ldr	x11, [sp, #80]
  41db60:	lsl	x10, x10, #1
  41db64:	add	x9, x9, #0x1
  41db68:	lsr	x11, x11, #1
  41db6c:	str	x11, [sp, #80]
  41db70:	cbnz	x11, 41db54 <_obstack_memory_used@@Base+0x39c0>
  41db74:	b	41dbac <_obstack_memory_used@@Base+0x3a18>
  41db78:	ldr	x12, [sp]
  41db7c:	mov	x11, x8
  41db80:	ldr	x13, [x12], #32
  41db84:	add	x11, x11, #0x8
  41db88:	tst	x13, x10
  41db8c:	b.eq	41db80 <_obstack_memory_used@@Base+0x39ec>  // b.none
  41db90:	ldr	x13, [sp, #112]
  41db94:	ldr	x12, [x11]
  41db98:	ldr	x11, [x11, x13, lsl #3]
  41db9c:	add	x13, x0, x9, lsl #3
  41dba0:	str	x12, [x13]
  41dba4:	str	x11, [x13, #2048]
  41dba8:	b	41db5c <_obstack_memory_used@@Base+0x39c8>
  41dbac:	ldr	x8, [sp, #40]
  41dbb0:	tbz	w8, #10, 41dbfc <_obstack_memory_used@@Base+0x3a68>
  41dbb4:	ldr	x9, [sp, #112]
  41dbb8:	ldr	x8, [sp, #56]
  41dbbc:	add	x8, x8, x9, lsl #4
  41dbc0:	ldr	x10, [sp, #32]
  41dbc4:	ldrb	w10, [x10, #1]
  41dbc8:	tbnz	w10, #2, 41dbe8 <_obstack_memory_used@@Base+0x3a54>
  41dbcc:	ldr	x10, [sp, #32]
  41dbd0:	add	x8, x8, #0x8
  41dbd4:	subs	x9, x9, #0x1
  41dbd8:	add	x10, x10, #0x20
  41dbdc:	str	x10, [sp, #32]
  41dbe0:	b.ne	41dbc0 <_obstack_memory_used@@Base+0x3a2c>  // b.any
  41dbe4:	b	41dbfc <_obstack_memory_used@@Base+0x3a68>
  41dbe8:	ldr	x8, [x8]
  41dbec:	ldr	w9, [sp, #12]
  41dbf0:	str	x8, [x0, #80]
  41dbf4:	tbz	w9, #0, 41dbfc <_obstack_memory_used@@Base+0x3a68>
  41dbf8:	str	x8, [x0, #2128]
  41dbfc:	ldr	x0, [sp, #56]
  41dc00:	bl	402620 <free@plt>
  41dc04:	ldur	x0, [x29, #-24]
  41dc08:	bl	402620 <free@plt>
  41dc0c:	mov	w19, #0x10                  	// #16
  41dc10:	ldr	x8, [sp, #48]
  41dc14:	ldr	x0, [x8, x19]
  41dc18:	bl	402620 <free@plt>
  41dc1c:	ldr	x8, [sp, #112]
  41dc20:	add	x19, x19, #0x18
  41dc24:	subs	x8, x8, #0x1
  41dc28:	str	x8, [sp, #112]
  41dc2c:	b.ne	41dc10 <_obstack_memory_used@@Base+0x3a7c>  // b.any
  41dc30:	ldr	x0, [sp, #48]
  41dc34:	bl	402620 <free@plt>
  41dc38:	ldr	x0, [x26]
  41dc3c:	ldr	x23, [sp, #120]
  41dc40:	cbnz	x0, 41c950 <_obstack_memory_used@@Base+0x27bc>
  41dc44:	b	41ce2c <_obstack_memory_used@@Base+0x2c98>
  41dc48:	add	w1, w8, #0x2
  41dc4c:	add	x0, sp, #0x130
  41dc50:	bl	426f70 <_obstack_memory_used@@Base+0xcddc>
  41dc54:	stur	w0, [x29, #-100]
  41dc58:	cbz	w0, 41c928 <_obstack_memory_used@@Base+0x2794>
  41dc5c:	b	41e6c8 <_obstack_memory_used@@Base+0x4534>
  41dc60:	ldr	x8, [sp, #376]
  41dc64:	cmp	x8, #0x0
  41dc68:	b.le	41dd34 <_obstack_memory_used@@Base+0x3ba0>
  41dc6c:	ldr	x9, [sp, #392]
  41dc70:	ldr	x26, [sp, #264]
  41dc74:	sub	x8, x8, #0x1
  41dc78:	cmp	x9, x8
  41dc7c:	b.eq	41dd40 <_obstack_memory_used@@Base+0x3bac>  // b.none
  41dc80:	ldr	w9, [sp, #448]
  41dc84:	cmp	w9, #0x2
  41dc88:	b.lt	41dcb8 <_obstack_memory_used@@Base+0x3b24>  // b.tstop
  41dc8c:	ldr	x9, [sp, #320]
  41dc90:	ldr	w19, [x9, x8, lsl #2]
  41dc94:	cmn	w19, #0x1
  41dc98:	b.ne	41dce0 <_obstack_memory_used@@Base+0x3b4c>  // b.any
  41dc9c:	sub	x8, x8, #0x1
  41dca0:	cmn	x8, #0x1
  41dca4:	b.ne	41dc90 <_obstack_memory_used@@Base+0x3afc>  // b.any
  41dca8:	ldr	w8, [sp, #416]
  41dcac:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41dcb0:	stur	wzr, [x29, #-100]
  41dcb4:	b	41c930 <_obstack_memory_used@@Base+0x279c>
  41dcb8:	ldr	x9, [sp, #312]
  41dcbc:	ldr	x10, [sp, #432]
  41dcc0:	ldrb	w8, [x9, x8]
  41dcc4:	lsr	x9, x8, #3
  41dcc8:	and	x9, x9, #0x18
  41dccc:	ldr	x9, [x10, x9]
  41dcd0:	lsr	x9, x9, x8
  41dcd4:	tbz	w9, #0, 41dd04 <_obstack_memory_used@@Base+0x3b70>
  41dcd8:	mov	w8, #0x1                   	// #1
  41dcdc:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41dce0:	ldrb	w8, [sp, #446]
  41dce4:	cbnz	w8, 41dd48 <_obstack_memory_used@@Base+0x3bb4>
  41dce8:	cmp	w19, #0xa
  41dcec:	b.ne	41dd0c <_obstack_memory_used@@Base+0x3b78>  // b.any
  41dcf0:	ldrb	w8, [sp, #445]
  41dcf4:	cmp	w8, #0x0
  41dcf8:	cset	w8, ne  // ne = any
  41dcfc:	lsl	w8, w8, #1
  41dd00:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41dd04:	cmp	w8, #0xa
  41dd08:	b.eq	41dcf0 <_obstack_memory_used@@Base+0x3b5c>  // b.none
  41dd0c:	mov	w8, wzr
  41dd10:	ubfiz	w8, w8, #8, #1
  41dd14:	orr	x8, x8, x28
  41dd18:	ldr	x28, [x11, x8, lsl #3]
  41dd1c:	b	41c958 <_obstack_memory_used@@Base+0x27c4>
  41dd20:	stur	w0, [x29, #-40]
  41dd24:	ldr	x26, [sp, #264]
  41dd28:	mov	x28, xzr
  41dd2c:	stur	w0, [x29, #-100]
  41dd30:	b	41c958 <_obstack_memory_used@@Base+0x27c4>
  41dd34:	ldr	w8, [sp, #416]
  41dd38:	ldr	x26, [sp, #264]
  41dd3c:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41dd40:	mov	w8, #0xa                   	// #10
  41dd44:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41dd48:	mov	w0, w19
  41dd4c:	str	x11, [sp, #112]
  41dd50:	bl	402710 <iswalnum@plt>
  41dd54:	cmp	w19, #0x5f
  41dd58:	mov	w8, #0x1                   	// #1
  41dd5c:	b.eq	41ddb4 <_obstack_memory_used@@Base+0x3c20>  // b.none
  41dd60:	ldr	x26, [sp, #264]
  41dd64:	ldr	x11, [sp, #112]
  41dd68:	cbz	w0, 41dce8 <_obstack_memory_used@@Base+0x3b54>
  41dd6c:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41dd70:	stur	w0, [x29, #-12]
  41dd74:	ldr	x0, [sp, #56]
  41dd78:	bl	402620 <free@plt>
  41dd7c:	ldur	x0, [x29, #-24]
  41dd80:	bl	402620 <free@plt>
  41dd84:	ldr	x8, [sp, #112]
  41dd88:	cmp	x8, #0x1
  41dd8c:	b.lt	41de74 <_obstack_memory_used@@Base+0x3ce0>  // b.tstop
  41dd90:	ldr	x8, [sp, #48]
  41dd94:	add	x19, x8, #0x10
  41dd98:	ldr	x0, [x19], #24
  41dd9c:	bl	402620 <free@plt>
  41dda0:	ldr	x8, [sp, #112]
  41dda4:	subs	x8, x8, #0x1
  41dda8:	str	x8, [sp, #112]
  41ddac:	b.ne	41dd98 <_obstack_memory_used@@Base+0x3c04>  // b.any
  41ddb0:	b	41de74 <_obstack_memory_used@@Base+0x3ce0>
  41ddb4:	ldr	x26, [sp, #264]
  41ddb8:	ldr	x11, [sp, #112]
  41ddbc:	b	41dd10 <_obstack_memory_used@@Base+0x3b7c>
  41ddc0:	ldr	x8, [sp, #80]
  41ddc4:	stur	x8, [x29, #-80]
  41ddc8:	ldr	x8, [sp, #88]
  41ddcc:	stur	x8, [x29, #-72]
  41ddd0:	ldr	x8, [sp, #40]
  41ddd4:	stur	x8, [x29, #-88]
  41ddd8:	ldr	x8, [sp, #96]
  41dddc:	stur	x8, [x29, #-96]
  41dde0:	b	41de44 <_obstack_memory_used@@Base+0x3cb0>
  41dde4:	ldr	x8, [sp, #96]
  41dde8:	stp	x8, x23, [x29, #-96]
  41ddec:	ldr	x8, [sp, #80]
  41ddf0:	stur	x8, [x29, #-80]
  41ddf4:	ldr	x8, [sp, #88]
  41ddf8:	stur	x8, [x29, #-72]
  41ddfc:	b	41de44 <_obstack_memory_used@@Base+0x3cb0>
  41de00:	ldr	x8, [sp, #80]
  41de04:	stur	x8, [x29, #-80]
  41de08:	ldr	x8, [sp, #88]
  41de0c:	stur	x8, [x29, #-72]
  41de10:	ldr	x8, [sp, #40]
  41de14:	stur	x8, [x29, #-88]
  41de18:	ldr	x8, [sp, #96]
  41de1c:	stur	x8, [x29, #-96]
  41de20:	b	41de3c <_obstack_memory_used@@Base+0x3ca8>
  41de24:	ldr	x8, [sp, #96]
  41de28:	stp	x8, x23, [x29, #-96]
  41de2c:	ldr	x8, [sp, #80]
  41de30:	stur	x8, [x29, #-80]
  41de34:	ldr	x8, [sp, #88]
  41de38:	stur	x8, [x29, #-72]
  41de3c:	ldr	x8, [sp, #24]
  41de40:	stp	xzr, xzr, [x8]
  41de44:	ldr	x8, [sp, #112]
  41de48:	str	x8, [sp, #72]
  41de4c:	cmp	x8, #0x1
  41de50:	b.lt	41de74 <_obstack_memory_used@@Base+0x3ce0>  // b.tstop
  41de54:	ldr	x8, [sp, #48]
  41de58:	add	x19, x8, #0x10
  41de5c:	ldr	x0, [x19], #24
  41de60:	bl	402620 <free@plt>
  41de64:	ldr	x8, [sp, #72]
  41de68:	subs	x8, x8, #0x1
  41de6c:	str	x8, [sp, #72]
  41de70:	b.ne	41de5c <_obstack_memory_used@@Base+0x3cc8>  // b.any
  41de74:	ldr	x0, [sp, #48]
  41de78:	bl	402620 <free@plt>
  41de7c:	ldr	x23, [sp, #120]
  41de80:	ldr	x26, [sp, #264]
  41de84:	mov	w8, #0xc                   	// #12
  41de88:	mov	x28, xzr
  41de8c:	stur	w8, [x29, #-100]
  41de90:	b	41c958 <_obstack_memory_used@@Base+0x27c4>
  41de94:	stp	xzr, xzr, [x19]
  41de98:	ldr	x8, [sp, #72]
  41de9c:	cmp	x8, #0x1
  41dea0:	b.ge	41de54 <_obstack_memory_used@@Base+0x3cc0>  // b.tcont
  41dea4:	b	41de74 <_obstack_memory_used@@Base+0x3ce0>
  41dea8:	mov	x0, x19
  41deac:	bl	402620 <free@plt>
  41deb0:	b	41dd90 <_obstack_memory_used@@Base+0x3bfc>
  41deb4:	ldr	x8, [sp, #176]
  41deb8:	str	x8, [sp, #232]
  41debc:	ldr	x9, [sp, #232]
  41dec0:	cbz	x9, 41ded0 <_obstack_memory_used@@Base+0x3d3c>
  41dec4:	ldr	x8, [x9]
  41dec8:	add	x8, x8, x26
  41decc:	str	x8, [x9]
  41ded0:	ldr	x28, [sp, #224]
  41ded4:	ldr	w25, [sp, #212]
  41ded8:	ldr	x2, [sp, #240]
  41dedc:	cmn	x2, #0x1
  41dee0:	b.eq	41e0a4 <_obstack_memory_used@@Base+0x3f10>  // b.none
  41dee4:	cmn	x2, #0x2
  41dee8:	b.eq	41e6c8 <_obstack_memory_used@@Base+0x4534>  // b.none
  41deec:	ldr	x25, [sp, #256]
  41def0:	str	x2, [sp, #472]
  41def4:	cmp	x28, #0x2
  41def8:	ldrb	w8, [x25, #56]
  41defc:	b.cc	41df04 <_obstack_memory_used@@Base+0x3d70>  // b.lo, b.ul, b.last
  41df00:	tbz	w8, #4, 41df0c <_obstack_memory_used@@Base+0x3d78>
  41df04:	ldr	x9, [x23, #152]
  41df08:	cbz	x9, 41df24 <_obstack_memory_used@@Base+0x3d90>
  41df0c:	ldr	x8, [sp, #488]
  41df10:	add	x0, sp, #0x130
  41df14:	ldr	x1, [x8, x2, lsl #3]
  41df18:	bl	425760 <_obstack_memory_used@@Base+0xb5cc>
  41df1c:	str	x0, [sp, #480]
  41df20:	ldrb	w8, [x25, #56]
  41df24:	cmp	x28, #0x2
  41df28:	b.cc	41df38 <_obstack_memory_used@@Base+0x3da4>  // b.lo, b.ul, b.last
  41df2c:	tbnz	w8, #4, 41df38 <_obstack_memory_used@@Base+0x3da4>
  41df30:	ldrb	w8, [x23, #176]
  41df34:	tbnz	w8, #0, 41df40 <_obstack_memory_used@@Base+0x3dac>
  41df38:	ldr	x8, [x23, #152]
  41df3c:	cbz	x8, 41e440 <_obstack_memory_used@@Base+0x42ac>
  41df40:	ldr	x27, [sp, #472]
  41df44:	mov	x8, #0x1fffffffffffffff    	// #2305843009213693951
  41df48:	cmp	x27, x8
  41df4c:	b.cs	41e6c8 <_obstack_memory_used@@Base+0x4534>  // b.hs, b.nlast
  41df50:	ldr	x19, [sp, #456]
  41df54:	ldr	x25, [sp, #480]
  41df58:	lsl	x8, x27, #3
  41df5c:	add	x20, x8, #0x8
  41df60:	mov	x0, x20
  41df64:	bl	4023a0 <malloc@plt>
  41df68:	mov	x26, x0
  41df6c:	cbz	x0, 41e6d8 <_obstack_memory_used@@Base+0x4544>
  41df70:	ldr	x8, [x19, #152]
  41df74:	cbz	x8, 41e058 <_obstack_memory_used@@Base+0x3ec4>
  41df78:	mov	x0, x20
  41df7c:	bl	4023a0 <malloc@plt>
  41df80:	cbz	x0, 41e6d8 <_obstack_memory_used@@Base+0x4544>
  41df84:	mov	w1, wzr
  41df88:	mov	x2, x20
  41df8c:	mov	x28, x0
  41df90:	bl	402470 <memset@plt>
  41df94:	ldr	x8, [sp, #160]
  41df98:	add	x0, sp, #0x130
  41df9c:	sub	x1, x29, #0x60
  41dfa0:	stp	x26, x28, [x29, #-96]
  41dfa4:	stp	x25, x27, [x29, #-80]
  41dfa8:	stp	xzr, xzr, [x8, #8]
  41dfac:	str	xzr, [x8]
  41dfb0:	bl	428ef4 <_obstack_memory_used@@Base+0xed60>
  41dfb4:	cbnz	w0, 41e378 <_obstack_memory_used@@Base+0x41e4>
  41dfb8:	ldr	x8, [x26]
  41dfbc:	cbz	x8, 41e0d4 <_obstack_memory_used@@Base+0x3f40>
  41dfc0:	str	x23, [sp, #120]
  41dfc4:	mov	x23, xzr
  41dfc8:	ldr	x9, [x28, x23, lsl #3]
  41dfcc:	cbnz	x8, 41dff0 <_obstack_memory_used@@Base+0x3e5c>
  41dfd0:	str	x9, [x26, x23, lsl #3]
  41dfd4:	cmp	x27, x23
  41dfd8:	b.eq	41e03c <_obstack_memory_used@@Base+0x3ea8>  // b.none
  41dfdc:	add	x8, x26, x23, lsl #3
  41dfe0:	ldr	x8, [x8, #8]
  41dfe4:	add	x23, x23, #0x1
  41dfe8:	ldr	x9, [x28, x23, lsl #3]
  41dfec:	cbz	x8, 41dfd0 <_obstack_memory_used@@Base+0x3e3c>
  41dff0:	cbz	x9, 41e034 <_obstack_memory_used@@Base+0x3ea0>
  41dff4:	add	x1, x8, #0x8
  41dff8:	add	x2, x9, #0x8
  41dffc:	sub	x0, x29, #0x28
  41e000:	bl	42736c <_obstack_memory_used@@Base+0xd1d8>
  41e004:	stur	w0, [x29, #-12]
  41e008:	cbnz	w0, 41e1e0 <_obstack_memory_used@@Base+0x404c>
  41e00c:	sub	x0, x29, #0xc
  41e010:	sub	x2, x29, #0x28
  41e014:	mov	x1, x19
  41e018:	bl	4286d8 <_obstack_memory_used@@Base+0xe544>
  41e01c:	ldur	x8, [x29, #-24]
  41e020:	str	x0, [x26, x23, lsl #3]
  41e024:	mov	x0, x8
  41e028:	bl	402620 <free@plt>
  41e02c:	ldur	w20, [x29, #-12]
  41e030:	cbnz	w20, 41e180 <_obstack_memory_used@@Base+0x3fec>
  41e034:	cmp	x27, x23
  41e038:	b.ne	41dfdc <_obstack_memory_used@@Base+0x3e48>  // b.any
  41e03c:	ldr	x23, [sp, #120]
  41e040:	mov	w20, wzr
  41e044:	mov	x0, x28
  41e048:	bl	402620 <free@plt>
  41e04c:	ldr	x19, [sp, #288]
  41e050:	cbz	w20, 41e428 <_obstack_memory_used@@Base+0x4294>
  41e054:	b	41e194 <_obstack_memory_used@@Base+0x4000>
  41e058:	ldr	x8, [sp, #160]
  41e05c:	add	x0, sp, #0x130
  41e060:	sub	x1, x29, #0x60
  41e064:	stp	x26, xzr, [x29, #-96]
  41e068:	stp	x25, x27, [x29, #-80]
  41e06c:	stp	xzr, xzr, [x8]
  41e070:	str	xzr, [x8, #16]
  41e074:	bl	428ef4 <_obstack_memory_used@@Base+0xed60>
  41e078:	cbnz	w0, 41e3a0 <_obstack_memory_used@@Base+0x420c>
  41e07c:	ldr	x8, [x26]
  41e080:	ldr	x19, [sp, #288]
  41e084:	cbnz	x8, 41e428 <_obstack_memory_used@@Base+0x4294>
  41e088:	mov	x28, xzr
  41e08c:	ldr	w25, [sp, #212]
  41e090:	ldr	x27, [sp, #272]
  41e094:	mov	x0, x26
  41e098:	bl	402620 <free@plt>
  41e09c:	mov	x0, x28
  41e0a0:	bl	402620 <free@plt>
  41e0a4:	add	x0, sp, #0x130
  41e0a8:	bl	4258c8 <_obstack_memory_used@@Base+0xb734>
  41e0ac:	ldur	x8, [x29, #-112]
  41e0b0:	ldr	x9, [sp, #296]
  41e0b4:	mov	w20, #0x1                   	// #1
  41e0b8:	add	x26, x8, x9
  41e0bc:	cmp	x26, x27
  41e0c0:	stur	x26, [x29, #-112]
  41e0c4:	b.lt	41e614 <_obstack_memory_used@@Base+0x4480>  // b.tstop
  41e0c8:	cmp	x22, x26
  41e0cc:	b.ge	41c5ac <_obstack_memory_used@@Base+0x2418>  // b.tcont
  41e0d0:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41e0d4:	ldr	x8, [x28]
  41e0d8:	cbnz	x8, 41e174 <_obstack_memory_used@@Base+0x3fe0>
  41e0dc:	cmp	x27, #0x1
  41e0e0:	b.lt	41e1d8 <_obstack_memory_used@@Base+0x4044>  // b.tstop
  41e0e4:	ldr	x9, [sp, #488]
  41e0e8:	add	x8, x27, #0x1
  41e0ec:	lsl	x20, x27, #3
  41e0f0:	ldr	w25, [sp, #212]
  41e0f4:	ldr	x27, [sp, #272]
  41e0f8:	sub	x9, x9, #0x8
  41e0fc:	b	41e110 <_obstack_memory_used@@Base+0x3f7c>
  41e100:	sub	x8, x8, #0x1
  41e104:	cmp	x8, #0x2
  41e108:	sub	x20, x20, #0x8
  41e10c:	b.lt	41e1a0 <_obstack_memory_used@@Base+0x400c>  // b.tstop
  41e110:	ldr	x1, [x9, x20]
  41e114:	cbz	x1, 41e100 <_obstack_memory_used@@Base+0x3f6c>
  41e118:	ldrb	w10, [x1, #104]
  41e11c:	tbz	w10, #4, 41e100 <_obstack_memory_used@@Base+0x3f6c>
  41e120:	sub	x27, x8, #0x2
  41e124:	add	x0, sp, #0x130
  41e128:	mov	x2, x27
  41e12c:	bl	425760 <_obstack_memory_used@@Base+0xb5cc>
  41e130:	mov	x25, x0
  41e134:	mov	x0, x28
  41e138:	mov	w1, wzr
  41e13c:	mov	x2, x20
  41e140:	bl	402470 <memset@plt>
  41e144:	ldr	x8, [sp, #160]
  41e148:	add	x0, sp, #0x130
  41e14c:	sub	x1, x29, #0x60
  41e150:	stp	x26, x28, [x29, #-96]
  41e154:	stp	x25, x27, [x29, #-80]
  41e158:	stp	xzr, xzr, [x8, #8]
  41e15c:	str	xzr, [x8]
  41e160:	bl	428ef4 <_obstack_memory_used@@Base+0xed60>
  41e164:	cbnz	w0, 41e378 <_obstack_memory_used@@Base+0x41e4>
  41e168:	ldr	x8, [x26]
  41e16c:	cbz	x8, 41e0d4 <_obstack_memory_used@@Base+0x3f40>
  41e170:	b	41e178 <_obstack_memory_used@@Base+0x3fe4>
  41e174:	mov	x8, xzr
  41e178:	tbz	x27, #63, 41dfc0 <_obstack_memory_used@@Base+0x3e2c>
  41e17c:	b	41e040 <_obstack_memory_used@@Base+0x3eac>
  41e180:	ldr	x23, [sp, #120]
  41e184:	mov	x0, x28
  41e188:	bl	402620 <free@plt>
  41e18c:	ldr	x19, [sp, #288]
  41e190:	cbz	w20, 41e428 <_obstack_memory_used@@Base+0x4294>
  41e194:	ldr	x25, [sp, #256]
  41e198:	mov	x28, xzr
  41e19c:	b	41e3b0 <_obstack_memory_used@@Base+0x421c>
  41e1a0:	ldr	x19, [sp, #288]
  41e1a4:	b	41e094 <_obstack_memory_used@@Base+0x3f00>
  41e1a8:	ldr	x28, [sp, #224]
  41e1ac:	ldr	x19, [sp, #288]
  41e1b0:	ldr	w25, [sp, #212]
  41e1b4:	ldr	x2, [sp, #240]
  41e1b8:	cmn	x2, #0x1
  41e1bc:	b.ne	41dee4 <_obstack_memory_used@@Base+0x3d50>  // b.any
  41e1c0:	b	41e0a4 <_obstack_memory_used@@Base+0x3f10>
  41e1c4:	ldr	x19, [sp, #288]
  41e1c8:	ldr	x27, [sp, #272]
  41e1cc:	ldr	x9, [sp, #232]
  41e1d0:	cbnz	x9, 41dec4 <_obstack_memory_used@@Base+0x3d30>
  41e1d4:	b	41ded0 <_obstack_memory_used@@Base+0x3d3c>
  41e1d8:	ldr	x19, [sp, #288]
  41e1dc:	b	41e08c <_obstack_memory_used@@Base+0x3ef8>
  41e1e0:	ldr	x23, [sp, #120]
  41e1e4:	mov	w20, w0
  41e1e8:	mov	x0, x28
  41e1ec:	bl	402620 <free@plt>
  41e1f0:	ldr	x19, [sp, #288]
  41e1f4:	cbz	w20, 41e428 <_obstack_memory_used@@Base+0x4294>
  41e1f8:	b	41e194 <_obstack_memory_used@@Base+0x4000>
  41e1fc:	ldr	x19, [sp, #288]
  41e200:	tbnz	w8, #31, 41e32c <_obstack_memory_used@@Base+0x4198>
  41e204:	ldr	w8, [sp, #172]
  41e208:	cbz	w8, 41e360 <_obstack_memory_used@@Base+0x41cc>
  41e20c:	mov	w8, #0x1                   	// #1
  41e210:	str	x26, [sp, #240]
  41e214:	str	x8, [sp, #200]
  41e218:	b	41c8d8 <_obstack_memory_used@@Base+0x2744>
  41e21c:	ldr	x8, [x28, #16]
  41e220:	str	x26, [sp, #264]
  41e224:	cmp	x8, #0x1
  41e228:	b.lt	41e2fc <_obstack_memory_used@@Base+0x4168>  // b.tstop
  41e22c:	ldr	x20, [sp, #456]
  41e230:	mov	x25, xzr
  41e234:	str	x23, [sp, #120]
  41e238:	b	41e264 <_obstack_memory_used@@Base+0x40d0>
  41e23c:	add	x9, x23, #0x1
  41e240:	str	x26, [x8, #8]
  41e244:	str	x9, [sp, #536]
  41e248:	str	xzr, [x8]
  41e24c:	ldr	x8, [x28, #16]
  41e250:	ldr	x23, [sp, #120]
  41e254:	ldr	x27, [sp, #272]
  41e258:	add	x25, x25, #0x1
  41e25c:	cmp	x25, x8
  41e260:	b.ge	41e2fc <_obstack_memory_used@@Base+0x4168>  // b.tcont
  41e264:	ldr	x9, [x28, #24]
  41e268:	ldr	x26, [x9, x25, lsl #3]
  41e26c:	ldr	x9, [x20]
  41e270:	add	x10, x9, x26, lsl #4
  41e274:	ldrb	w10, [x10, #8]
  41e278:	cmp	w10, #0x8
  41e27c:	b.ne	41e258 <_obstack_memory_used@@Base+0x40c4>  // b.any
  41e280:	lsl	x10, x26, #4
  41e284:	ldr	x9, [x9, x10]
  41e288:	cmp	x9, #0x3f
  41e28c:	b.gt	41e258 <_obstack_memory_used@@Base+0x40c4>
  41e290:	ldr	x10, [x20, #160]
  41e294:	lsr	x9, x10, x9
  41e298:	tbz	w9, #0, 41e258 <_obstack_memory_used@@Base+0x40c4>
  41e29c:	ldr	x27, [sp, #544]
  41e2a0:	ldr	x23, [sp, #536]
  41e2a4:	ldr	x19, [sp, #552]
  41e2a8:	cmp	x23, x27
  41e2ac:	b.eq	41e2d4 <_obstack_memory_used@@Base+0x4140>  // b.none
  41e2b0:	mov	w0, #0x1                   	// #1
  41e2b4:	mov	w1, #0x30                  	// #48
  41e2b8:	bl	402480 <calloc@plt>
  41e2bc:	lsl	x8, x23, #3
  41e2c0:	str	x0, [x19, x8]
  41e2c4:	ldr	x9, [sp, #552]
  41e2c8:	ldr	x8, [x9, x8]
  41e2cc:	cbnz	x8, 41e23c <_obstack_memory_used@@Base+0x40a8>
  41e2d0:	b	41e3f4 <_obstack_memory_used@@Base+0x4260>
  41e2d4:	lsl	x1, x27, #4
  41e2d8:	mov	x0, x19
  41e2dc:	bl	4024c0 <realloc@plt>
  41e2e0:	cbz	x0, 41e3f4 <_obstack_memory_used@@Base+0x4260>
  41e2e4:	ldr	x23, [sp, #536]
  41e2e8:	mov	x19, x0
  41e2ec:	lsl	x8, x27, #1
  41e2f0:	str	x0, [sp, #552]
  41e2f4:	str	x8, [sp, #544]
  41e2f8:	b	41e2b0 <_obstack_memory_used@@Base+0x411c>
  41e2fc:	stur	wzr, [x29, #-100]
  41e300:	ldrb	w8, [x28, #104]
  41e304:	ldr	x26, [sp, #264]
  41e308:	mov	w25, wzr
  41e30c:	tbz	w8, #6, 41c8c0 <_obstack_memory_used@@Base+0x272c>
  41e310:	add	x1, x28, #0x8
  41e314:	add	x0, sp, #0x130
  41e318:	bl	42666c <_obstack_memory_used@@Base+0xc4d8>
  41e31c:	stur	w0, [x29, #-100]
  41e320:	cbnz	w0, 41e404 <_obstack_memory_used@@Base+0x4270>
  41e324:	mov	w25, wzr
  41e328:	b	41c8c0 <_obstack_memory_used@@Base+0x272c>
  41e32c:	add	x0, sp, #0x130
  41e330:	mov	x1, x28
  41e334:	mov	x2, x26
  41e338:	bl	425760 <_obstack_memory_used@@Base+0xb5cc>
  41e33c:	ldr	w9, [sp, #172]
  41e340:	cmp	x0, #0x0
  41e344:	cset	w8, ne  // ne = any
  41e348:	str	x8, [sp, #200]
  41e34c:	cset	w8, eq  // eq = none
  41e350:	orr	w8, w9, w8
  41e354:	csinv	x9, x26, xzr, ne  // ne = any
  41e358:	str	x9, [sp, #240]
  41e35c:	tbnz	w8, #0, 41c8d8 <_obstack_memory_used@@Base+0x2744>
  41e360:	ldr	x28, [sp, #224]
  41e364:	mov	x2, x26
  41e368:	ldr	w25, [sp, #212]
  41e36c:	cmn	x2, #0x1
  41e370:	b.ne	41dee4 <_obstack_memory_used@@Base+0x3d50>  // b.any
  41e374:	b	41e0a4 <_obstack_memory_used@@Base+0x3f10>
  41e378:	mov	w20, w0
  41e37c:	b	41e3a8 <_obstack_memory_used@@Base+0x4214>
  41e380:	mov	w8, wzr
  41e384:	ldr	x9, [sp, #216]
  41e388:	cbz	x9, 41e390 <_obstack_memory_used@@Base+0x41fc>
  41e38c:	ldrb	w8, [x9, w8, uxtw]
  41e390:	ldrb	w8, [x21, w8, uxtw]
  41e394:	mov	x26, x22
  41e398:	cbnz	w8, 41c6b0 <_obstack_memory_used@@Base+0x251c>
  41e39c:	b	41e420 <_obstack_memory_used@@Base+0x428c>
  41e3a0:	mov	w20, w0
  41e3a4:	mov	x28, xzr
  41e3a8:	ldr	x25, [sp, #256]
  41e3ac:	ldr	x19, [sp, #288]
  41e3b0:	mov	x0, x26
  41e3b4:	bl	402620 <free@plt>
  41e3b8:	mov	x0, x28
  41e3bc:	bl	402620 <free@plt>
  41e3c0:	ldr	x28, [sp, #224]
  41e3c4:	cbz	w20, 41e440 <_obstack_memory_used@@Base+0x42ac>
  41e3c8:	ldr	w25, [sp, #212]
  41e3cc:	ldr	x27, [sp, #272]
  41e3d0:	cmp	w20, #0x1
  41e3d4:	b.eq	41e0a4 <_obstack_memory_used@@Base+0x3f10>  // b.none
  41e3d8:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41e3dc:	mov	w0, w20
  41e3e0:	bl	402710 <iswalnum@plt>
  41e3e4:	cmp	w20, #0x5f
  41e3e8:	b.eq	41c898 <_obstack_memory_used@@Base+0x2704>  // b.none
  41e3ec:	cbz	w0, 41c810 <_obstack_memory_used@@Base+0x267c>
  41e3f0:	b	41c898 <_obstack_memory_used@@Base+0x2704>
  41e3f4:	ldr	x23, [sp, #120]
  41e3f8:	ldr	x28, [sp, #224]
  41e3fc:	mov	w2, #0xc                   	// #12
  41e400:	b	41deec <_obstack_memory_used@@Base+0x3d58>
  41e404:	ldr	x28, [sp, #224]
  41e408:	ldr	x19, [sp, #288]
  41e40c:	sxtw	x2, w0
  41e410:	ldr	w25, [sp, #212]
  41e414:	cmn	x2, #0x1
  41e418:	b.ne	41dee4 <_obstack_memory_used@@Base+0x3d50>  // b.any
  41e41c:	b	41e0a4 <_obstack_memory_used@@Base+0x3f10>
  41e420:	mov	w20, #0x1                   	// #1
  41e424:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41e428:	ldr	x0, [sp, #488]
  41e42c:	bl	402620 <free@plt>
  41e430:	stp	x25, x26, [sp, #480]
  41e434:	ldr	x28, [sp, #224]
  41e438:	ldr	x25, [sp, #256]
  41e43c:	str	x27, [sp, #472]
  41e440:	cbz	x28, 41e610 <_obstack_memory_used@@Base+0x447c>
  41e444:	ldr	x19, [sp, #136]
  41e448:	ldr	x21, [sp, #152]
  41e44c:	cmp	x28, #0x1
  41e450:	b.eq	41e470 <_obstack_memory_used@@Base+0x42dc>  // b.none
  41e454:	ldr	x9, [sp, #144]
  41e458:	mvn	x8, x21
  41e45c:	add	x0, x19, #0x10
  41e460:	mov	w1, #0xff                  	// #255
  41e464:	add	x8, x8, x9
  41e468:	lsl	x2, x8, #4
  41e46c:	bl	402470 <memset@plt>
  41e470:	ldr	x8, [sp, #472]
  41e474:	cmp	x28, #0x2
  41e478:	stp	xzr, x8, [x19]
  41e47c:	b.cc	41e4e4 <_obstack_memory_used@@Base+0x4350>  // b.lo, b.ul, b.last
  41e480:	ldrb	w8, [x25, #56]
  41e484:	tbnz	w8, #4, 41e4e4 <_obstack_memory_used@@Base+0x4350>
  41e488:	ldrb	w8, [x23, #176]
  41e48c:	tbnz	w8, #0, 41e4c0 <_obstack_memory_used@@Base+0x432c>
  41e490:	mov	w4, wzr
  41e494:	b	41e4cc <_obstack_memory_used@@Base+0x4338>
  41e498:	ldr	x8, [x8, #16]
  41e49c:	cbz	x8, 41e4a8 <_obstack_memory_used@@Base+0x4314>
  41e4a0:	ldrsb	w8, [x0, #56]
  41e4a4:	tbnz	w8, #31, 41c2ec <_obstack_memory_used@@Base+0x2158>
  41e4a8:	mov	x27, xzr
  41e4ac:	cbz	x26, 41e6c0 <_obstack_memory_used@@Base+0x452c>
  41e4b0:	mov	x26, x27
  41e4b4:	cbz	x4, 41c2f0 <_obstack_memory_used@@Base+0x215c>
  41e4b8:	mov	w20, #0x1                   	// #1
  41e4bc:	b	41e65c <_obstack_memory_used@@Base+0x44c8>
  41e4c0:	ldr	x8, [x23, #152]
  41e4c4:	cmp	x8, #0x0
  41e4c8:	cset	w4, gt
  41e4cc:	ldr	x0, [x25]
  41e4d0:	add	x1, sp, #0x130
  41e4d4:	mov	x2, x28
  41e4d8:	mov	x3, x19
  41e4dc:	bl	42598c <_obstack_memory_used@@Base+0xb7f8>
  41e4e0:	cbnz	w0, 41e6d0 <_obstack_memory_used@@Base+0x453c>
  41e4e4:	ldrb	w9, [sp, #444]
  41e4e8:	ldur	x8, [x29, #-112]
  41e4ec:	cbnz	w9, 41e6e8 <_obstack_memory_used@@Base+0x4554>
  41e4f0:	cmp	x28, #0x1
  41e4f4:	csinc	x10, x28, xzr, hi  // hi = pmore
  41e4f8:	cmp	x10, #0x3
  41e4fc:	b.cs	41e508 <_obstack_memory_used@@Base+0x4374>  // b.hs, b.nlast
  41e500:	mov	x9, xzr
  41e504:	b	41e680 <_obstack_memory_used@@Base+0x44ec>
  41e508:	and	x9, x10, #0xfffffffffffffffe
  41e50c:	add	x11, x19, #0x10
  41e510:	mov	x12, x9
  41e514:	b	41e524 <_obstack_memory_used@@Base+0x4390>
  41e518:	subs	x12, x12, #0x2
  41e51c:	add	x11, x11, #0x20
  41e520:	b.eq	41e588 <_obstack_memory_used@@Base+0x43f4>  // b.none
  41e524:	ldur	x14, [x11, #-16]
  41e528:	ldr	x13, [x11]
  41e52c:	cmn	x14, #0x1
  41e530:	b.eq	41e53c <_obstack_memory_used@@Base+0x43a8>  // b.none
  41e534:	add	x15, x14, x8
  41e538:	stur	x15, [x11, #-16]
  41e53c:	cmn	x13, #0x1
  41e540:	b.eq	41e54c <_obstack_memory_used@@Base+0x43b8>  // b.none
  41e544:	add	x15, x13, x8
  41e548:	str	x15, [x11]
  41e54c:	cmn	x14, #0x1
  41e550:	b.eq	41e558 <_obstack_memory_used@@Base+0x43c4>  // b.none
  41e554:	ldur	x15, [x11, #-8]
  41e558:	cmn	x13, #0x1
  41e55c:	b.eq	41e564 <_obstack_memory_used@@Base+0x43d0>  // b.none
  41e560:	ldr	x16, [x11, #8]
  41e564:	cmn	x14, #0x1
  41e568:	b.eq	41e574 <_obstack_memory_used@@Base+0x43e0>  // b.none
  41e56c:	add	x14, x15, x8
  41e570:	stur	x14, [x11, #-8]
  41e574:	cmn	x13, #0x1
  41e578:	b.eq	41e518 <_obstack_memory_used@@Base+0x4384>  // b.none
  41e57c:	add	x13, x16, x8
  41e580:	str	x13, [x11, #8]
  41e584:	b	41e518 <_obstack_memory_used@@Base+0x4384>
  41e588:	cmp	x10, x9
  41e58c:	b.ne	41e680 <_obstack_memory_used@@Base+0x44ec>  // b.any
  41e590:	cmp	x21, #0x1
  41e594:	b.lt	41e5a8 <_obstack_memory_used@@Base+0x4414>  // b.tstop
  41e598:	add	x0, x19, x28, lsl #4
  41e59c:	lsl	x2, x21, #4
  41e5a0:	mov	w1, #0xff                  	// #255
  41e5a4:	bl	402470 <memset@plt>
  41e5a8:	ldr	x8, [x23, #224]
  41e5ac:	mov	w20, wzr
  41e5b0:	cbz	x8, 41e614 <_obstack_memory_used@@Base+0x4480>
  41e5b4:	cmp	x28, #0x2
  41e5b8:	b.cc	41e614 <_obstack_memory_used@@Base+0x4480>  // b.lo, b.ul, b.last
  41e5bc:	ldr	x11, [sp, #144]
  41e5c0:	mvn	x10, x21
  41e5c4:	mov	x9, xzr
  41e5c8:	add	x10, x10, x11
  41e5cc:	add	x11, x19, #0x18
  41e5d0:	b	41e5e4 <_obstack_memory_used@@Base+0x4450>
  41e5d4:	add	x9, x9, #0x1
  41e5d8:	cmp	x10, x9
  41e5dc:	add	x11, x11, #0x10
  41e5e0:	b.eq	41e610 <_obstack_memory_used@@Base+0x447c>  // b.none
  41e5e4:	ldr	x12, [x8, x9, lsl #3]
  41e5e8:	cmp	x9, x12
  41e5ec:	b.eq	41e5d4 <_obstack_memory_used@@Base+0x4440>  // b.none
  41e5f0:	add	x12, x19, x12, lsl #4
  41e5f4:	ldr	x12, [x12, #16]
  41e5f8:	stur	x12, [x11, #-8]
  41e5fc:	ldr	x12, [x8, x9, lsl #3]
  41e600:	add	x12, x19, x12, lsl #4
  41e604:	ldr	x12, [x12, #24]
  41e608:	str	x12, [x11]
  41e60c:	b	41e5d4 <_obstack_memory_used@@Base+0x4440>
  41e610:	mov	w20, wzr
  41e614:	ldr	x0, [sp, #488]
  41e618:	bl	402620 <free@plt>
  41e61c:	ldr	x8, [x23, #152]
  41e620:	cbz	x8, 41e63c <_obstack_memory_used@@Base+0x44a8>
  41e624:	add	x0, sp, #0x130
  41e628:	bl	4258c8 <_obstack_memory_used@@Base+0xb734>
  41e62c:	ldr	x0, [sp, #552]
  41e630:	bl	402620 <free@plt>
  41e634:	ldr	x0, [sp, #520]
  41e638:	bl	402620 <free@plt>
  41e63c:	ldr	x0, [sp, #320]
  41e640:	bl	402620 <free@plt>
  41e644:	ldr	x0, [sp, #328]
  41e648:	bl	402620 <free@plt>
  41e64c:	ldrb	w8, [sp, #443]
  41e650:	cbz	w8, 41e65c <_obstack_memory_used@@Base+0x44c8>
  41e654:	ldr	x0, [sp, #312]
  41e658:	bl	402620 <free@plt>
  41e65c:	mov	w0, w20
  41e660:	add	sp, sp, #0x2a0
  41e664:	ldp	x20, x19, [sp, #80]
  41e668:	ldp	x22, x21, [sp, #64]
  41e66c:	ldp	x24, x23, [sp, #48]
  41e670:	ldp	x26, x25, [sp, #32]
  41e674:	ldp	x28, x27, [sp, #16]
  41e678:	ldp	x29, x30, [sp], #96
  41e67c:	ret
  41e680:	add	x10, x19, x9, lsl #4
  41e684:	add	x10, x10, #0x8
  41e688:	b	41e69c <_obstack_memory_used@@Base+0x4508>
  41e68c:	add	x9, x9, #0x1
  41e690:	cmp	x9, x28
  41e694:	add	x10, x10, #0x10
  41e698:	b.cs	41e590 <_obstack_memory_used@@Base+0x43fc>  // b.hs, b.nlast
  41e69c:	ldur	x11, [x10, #-8]
  41e6a0:	cmn	x11, #0x1
  41e6a4:	b.eq	41e68c <_obstack_memory_used@@Base+0x44f8>  // b.none
  41e6a8:	ldr	x12, [x10]
  41e6ac:	add	x11, x11, x8
  41e6b0:	stur	x11, [x10, #-8]
  41e6b4:	add	x11, x12, x8
  41e6b8:	str	x11, [x10]
  41e6bc:	b	41e68c <_obstack_memory_used@@Base+0x44f8>
  41e6c0:	mov	x26, x27
  41e6c4:	b	41c2f0 <_obstack_memory_used@@Base+0x215c>
  41e6c8:	mov	w20, #0xc                   	// #12
  41e6cc:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41e6d0:	mov	w20, w0
  41e6d4:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41e6d8:	mov	x0, x26
  41e6dc:	bl	402620 <free@plt>
  41e6e0:	mov	w20, #0xc                   	// #12
  41e6e4:	b	41e614 <_obstack_memory_used@@Base+0x4480>
  41e6e8:	ldr	x10, [sp, #352]
  41e6ec:	ldr	x11, [sp, #328]
  41e6f0:	ldr	x16, [sp, #128]
  41e6f4:	mov	x9, xzr
  41e6f8:	mov	x12, x19
  41e6fc:	b	41e710 <_obstack_memory_used@@Base+0x457c>
  41e700:	add	x9, x9, #0x1
  41e704:	cmp	x9, x28
  41e708:	add	x12, x12, #0x10
  41e70c:	b.cs	41e590 <_obstack_memory_used@@Base+0x43fc>  // b.hs, b.nlast
  41e710:	ldr	x13, [x12]
  41e714:	cmn	x13, #0x1
  41e718:	b.eq	41e700 <_obstack_memory_used@@Base+0x456c>  // b.none
  41e71c:	add	x14, x11, x13, lsl #3
  41e720:	cmp	x13, x10
  41e724:	ldr	x15, [x12, #8]
  41e728:	csel	x13, x16, x14, eq  // eq = none
  41e72c:	ldr	x13, [x13]
  41e730:	add	x14, x11, x15, lsl #3
  41e734:	cmp	x15, x10
  41e738:	csel	x14, x16, x14, eq  // eq = none
  41e73c:	str	x13, [x12]
  41e740:	ldr	x14, [x14]
  41e744:	add	x13, x13, x8
  41e748:	add	x14, x14, x8
  41e74c:	stp	x13, x14, [x12]
  41e750:	b	41e700 <_obstack_memory_used@@Base+0x456c>
  41e754:	mov	x6, x4
  41e758:	mov	w7, #0x1                   	// #1
  41e75c:	mov	x4, xzr
  41e760:	mov	x5, x2
  41e764:	b	41e768 <_obstack_memory_used@@Base+0x45d4>
  41e768:	sub	sp, sp, #0x70
  41e76c:	cmp	x3, x2
  41e770:	cset	w8, gt
  41e774:	orr	x8, x8, x3, lsr #63
  41e778:	stp	x29, x30, [sp, #16]
  41e77c:	stp	x28, x27, [sp, #32]
  41e780:	stp	x26, x25, [sp, #48]
  41e784:	stp	x24, x23, [sp, #64]
  41e788:	stp	x22, x21, [sp, #80]
  41e78c:	stp	x20, x19, [sp, #96]
  41e790:	add	x29, sp, #0x10
  41e794:	cbnz	x8, 41eafc <_obstack_memory_used@@Base+0x4968>
  41e798:	add	x8, x4, x3
  41e79c:	ldrb	w19, [x0, #56]
  41e7a0:	bic	x9, x8, x8, asr #63
  41e7a4:	cmp	x8, x2
  41e7a8:	csel	x27, x2, x9, gt
  41e7ac:	mov	x22, x6
  41e7b0:	mov	x24, x5
  41e7b4:	mov	x20, x3
  41e7b8:	mov	x25, x2
  41e7bc:	mov	x26, x1
  41e7c0:	mov	x21, x0
  41e7c4:	cmp	x27, x3
  41e7c8:	stur	w7, [x29, #-4]
  41e7cc:	b.le	41e884 <_obstack_memory_used@@Base+0x46f0>
  41e7d0:	tbnz	w19, #3, 41e9a0 <_obstack_memory_used@@Base+0x480c>
  41e7d4:	ldr	x23, [x21, #32]
  41e7d8:	mov	w8, w19
  41e7dc:	cbz	x23, 41e888 <_obstack_memory_used@@Base+0x46f4>
  41e7e0:	ldr	x28, [x21]
  41e7e4:	movi	v0.2d, #0x0
  41e7e8:	stp	q0, q0, [x23, #224]
  41e7ec:	stp	q0, q0, [x23, #192]
  41e7f0:	stp	q0, q0, [x23, #160]
  41e7f4:	stp	q0, q0, [x23, #128]
  41e7f8:	stp	q0, q0, [x23, #96]
  41e7fc:	stp	q0, q0, [x23, #64]
  41e800:	stp	q0, q0, [x23, #32]
  41e804:	stp	q0, q0, [x23]
  41e808:	ldr	x1, [x28, #72]
  41e80c:	mov	x0, x21
  41e810:	mov	x2, x23
  41e814:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41e818:	ldp	x8, x1, [x28, #72]
  41e81c:	cmp	x8, x1
  41e820:	b.eq	41e834 <_obstack_memory_used@@Base+0x46a0>  // b.none
  41e824:	mov	x0, x21
  41e828:	mov	x2, x23
  41e82c:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41e830:	ldr	x8, [x28, #72]
  41e834:	ldr	x1, [x28, #88]
  41e838:	cmp	x8, x1
  41e83c:	b.eq	41e850 <_obstack_memory_used@@Base+0x46bc>  // b.none
  41e840:	mov	x0, x21
  41e844:	mov	x2, x23
  41e848:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41e84c:	ldr	x8, [x28, #72]
  41e850:	ldr	x1, [x28, #96]
  41e854:	cmp	x8, x1
  41e858:	b.eq	41e868 <_obstack_memory_used@@Base+0x46d4>  // b.none
  41e85c:	mov	x0, x21
  41e860:	mov	x2, x23
  41e864:	bl	41b5ec <_obstack_memory_used@@Base+0x1458>
  41e868:	ldrb	w8, [x21, #56]
  41e86c:	orr	w8, w8, #0x8
  41e870:	strb	w8, [x21, #56]
  41e874:	mov	x28, xzr
  41e878:	mov	w23, #0x1                   	// #1
  41e87c:	cbnz	x22, 41e894 <_obstack_memory_used@@Base+0x4700>
  41e880:	b	41e8d0 <_obstack_memory_used@@Base+0x473c>
  41e884:	mov	w8, w19
  41e888:	mov	x28, xzr
  41e88c:	mov	w23, #0x1                   	// #1
  41e890:	cbz	x22, 41e8d0 <_obstack_memory_used@@Base+0x473c>
  41e894:	tbnz	w8, #4, 41e8d0 <_obstack_memory_used@@Base+0x473c>
  41e898:	and	w8, w8, #0x6
  41e89c:	cmp	w8, #0x4
  41e8a0:	b.ne	41e8c4 <_obstack_memory_used@@Base+0x4730>  // b.any
  41e8a4:	ldr	x8, [x22]
  41e8a8:	ldr	x9, [x21, #48]
  41e8ac:	cmp	x8, x9
  41e8b0:	b.hi	41e8c8 <_obstack_memory_used@@Base+0x4734>  // b.pmore
  41e8b4:	cmp	x8, #0x1
  41e8b8:	csel	x28, xzr, x22, lt  // lt = tstop
  41e8bc:	csinc	x23, x8, xzr, ge  // ge = tcont
  41e8c0:	b	41e8d0 <_obstack_memory_used@@Base+0x473c>
  41e8c4:	ldr	x9, [x21, #48]
  41e8c8:	add	x23, x9, #0x1
  41e8cc:	mov	x28, x22
  41e8d0:	lsl	x0, x23, #4
  41e8d4:	bl	4023a0 <malloc@plt>
  41e8d8:	cbz	x0, 41eb04 <_obstack_memory_used@@Base+0x4970>
  41e8dc:	mov	x22, x0
  41e8e0:	ubfx	w8, w19, #5, #2
  41e8e4:	mov	x0, x21
  41e8e8:	mov	x1, x26
  41e8ec:	mov	x2, x25
  41e8f0:	mov	x3, x20
  41e8f4:	mov	x4, x27
  41e8f8:	mov	x5, x24
  41e8fc:	mov	x6, x23
  41e900:	mov	x7, x22
  41e904:	str	w8, [sp]
  41e908:	bl	41c214 <_obstack_memory_used@@Base+0x2080>
  41e90c:	cbz	w0, 41e948 <_obstack_memory_used@@Base+0x47b4>
  41e910:	cmp	w0, #0x1
  41e914:	mov	x8, #0xfffffffffffffffe    	// #-2
  41e918:	cinc	x19, x8, eq  // eq = none
  41e91c:	mov	x0, x22
  41e920:	bl	402620 <free@plt>
  41e924:	mov	x0, x19
  41e928:	ldp	x20, x19, [sp, #96]
  41e92c:	ldp	x22, x21, [sp, #80]
  41e930:	ldp	x24, x23, [sp, #64]
  41e934:	ldp	x26, x25, [sp, #48]
  41e938:	ldp	x28, x27, [sp, #32]
  41e93c:	ldp	x29, x30, [sp, #16]
  41e940:	add	sp, sp, #0x70
  41e944:	ret
  41e948:	cbz	x28, 41ea90 <_obstack_memory_used@@Base+0x48fc>
  41e94c:	ldrb	w8, [x21, #56]
  41e950:	add	x19, x23, #0x1
  41e954:	ubfx	w8, w8, #1, #2
  41e958:	cmp	w8, #0x1
  41e95c:	b.eq	41e9b4 <_obstack_memory_used@@Base+0x4820>  // b.none
  41e960:	cbnz	w8, 41e9e0 <_obstack_memory_used@@Base+0x484c>
  41e964:	lsl	x25, x19, #3
  41e968:	mov	x0, x25
  41e96c:	bl	4023a0 <malloc@plt>
  41e970:	str	x0, [x28, #8]
  41e974:	cbz	x0, 41eb44 <_obstack_memory_used@@Base+0x49b0>
  41e978:	mov	x24, x0
  41e97c:	mov	x0, x25
  41e980:	bl	4023a0 <malloc@plt>
  41e984:	str	x0, [x28, #16]
  41e988:	cbz	x0, 41eb3c <_obstack_memory_used@@Base+0x49a8>
  41e98c:	str	x19, [x28]
  41e990:	mov	w8, #0x1                   	// #1
  41e994:	cmp	x23, #0x1
  41e998:	b.ge	41e9f0 <_obstack_memory_used@@Base+0x485c>  // b.tcont
  41e99c:	b	41e9d0 <_obstack_memory_used@@Base+0x483c>
  41e9a0:	mov	w8, w19
  41e9a4:	mov	x28, xzr
  41e9a8:	mov	w23, #0x1                   	// #1
  41e9ac:	cbnz	x22, 41e894 <_obstack_memory_used@@Base+0x4700>
  41e9b0:	b	41e8d0 <_obstack_memory_used@@Base+0x473c>
  41e9b4:	ldr	x9, [x28]
  41e9b8:	cmp	x19, x9
  41e9bc:	b.hi	41eb0c <_obstack_memory_used@@Base+0x4978>  // b.pmore
  41e9c0:	mov	w8, #0x1                   	// #1
  41e9c4:	mov	x19, x9
  41e9c8:	cmp	x23, #0x1
  41e9cc:	b.ge	41e9f0 <_obstack_memory_used@@Base+0x485c>  // b.tcont
  41e9d0:	mov	x23, xzr
  41e9d4:	cmp	x23, x19
  41e9d8:	b.cc	41ea58 <_obstack_memory_used@@Base+0x48c4>  // b.lo, b.ul, b.last
  41e9dc:	b	41ea7c <_obstack_memory_used@@Base+0x48e8>
  41e9e0:	ldr	x19, [x28]
  41e9e4:	mov	w8, #0x2                   	// #2
  41e9e8:	cmp	x23, #0x1
  41e9ec:	b.lt	41e9d0 <_obstack_memory_used@@Base+0x483c>  // b.tstop
  41e9f0:	ldp	x9, x10, [x28, #8]
  41e9f4:	cmp	x23, #0x3
  41e9f8:	b.ls	41ea18 <_obstack_memory_used@@Base+0x4884>  // b.plast
  41e9fc:	lsl	x11, x23, #3
  41ea00:	add	x12, x10, x11
  41ea04:	cmp	x9, x12
  41ea08:	b.cs	41eab4 <_obstack_memory_used@@Base+0x4920>  // b.hs, b.nlast
  41ea0c:	add	x11, x9, x11
  41ea10:	cmp	x10, x11
  41ea14:	b.cs	41eab4 <_obstack_memory_used@@Base+0x4920>  // b.hs, b.nlast
  41ea18:	mov	x11, xzr
  41ea1c:	sub	x12, x23, x11
  41ea20:	lsl	x13, x11, #3
  41ea24:	add	x11, x22, x11, lsl #4
  41ea28:	add	x10, x10, x13
  41ea2c:	add	x11, x11, #0x8
  41ea30:	add	x9, x9, x13
  41ea34:	ldur	x13, [x11, #-8]
  41ea38:	subs	x12, x12, #0x1
  41ea3c:	str	x13, [x9], #8
  41ea40:	ldr	x13, [x11], #16
  41ea44:	str	x13, [x10], #8
  41ea48:	b.ne	41ea34 <_obstack_memory_used@@Base+0x48a0>  // b.any
  41ea4c:	ldr	x19, [x28]
  41ea50:	cmp	x23, x19
  41ea54:	b.cs	41ea7c <_obstack_memory_used@@Base+0x48e8>  // b.hs, b.nlast
  41ea58:	ldp	x10, x9, [x28, #8]
  41ea5c:	mov	x11, #0xffffffffffffffff    	// #-1
  41ea60:	lsl	x12, x23, #3
  41ea64:	str	x11, [x9, x12]
  41ea68:	str	x11, [x10, x12]
  41ea6c:	ldr	x12, [x28]
  41ea70:	add	x23, x23, #0x1
  41ea74:	cmp	x23, x12
  41ea78:	b.cc	41ea60 <_obstack_memory_used@@Base+0x48cc>  // b.lo, b.ul, b.last
  41ea7c:	ldrb	w9, [x21, #56]
  41ea80:	and	w9, w9, #0xfffffff9
  41ea84:	orr	w9, w9, w8, lsl #1
  41ea88:	strb	w9, [x21, #56]
  41ea8c:	cbz	w8, 41eaac <_obstack_memory_used@@Base+0x4918>
  41ea90:	ldur	w8, [x29, #-4]
  41ea94:	tbz	w8, #0, 41eaa4 <_obstack_memory_used@@Base+0x4910>
  41ea98:	ldr	x8, [x22, #8]
  41ea9c:	sub	x19, x8, x20
  41eaa0:	b	41e91c <_obstack_memory_used@@Base+0x4788>
  41eaa4:	ldr	x19, [x22]
  41eaa8:	b	41e91c <_obstack_memory_used@@Base+0x4788>
  41eaac:	mov	x19, #0xfffffffffffffffe    	// #-2
  41eab0:	b	41e91c <_obstack_memory_used@@Base+0x4788>
  41eab4:	and	x11, x23, #0xfffffffffffffffc
  41eab8:	add	x12, x22, #0x20
  41eabc:	add	x13, x9, #0x10
  41eac0:	add	x14, x10, #0x10
  41eac4:	mov	x15, x11
  41eac8:	sub	x16, x12, #0x20
  41eacc:	ld2	{v0.2d, v1.2d}, [x12]
  41ead0:	ld2	{v2.2d, v3.2d}, [x16]
  41ead4:	add	x12, x12, #0x40
  41ead8:	subs	x15, x15, #0x4
  41eadc:	stp	q2, q0, [x13, #-16]
  41eae0:	stp	q3, q1, [x14, #-16]
  41eae4:	add	x13, x13, #0x20
  41eae8:	add	x14, x14, #0x20
  41eaec:	b.ne	41eac8 <_obstack_memory_used@@Base+0x4934>  // b.any
  41eaf0:	cmp	x23, x11
  41eaf4:	b.ne	41ea1c <_obstack_memory_used@@Base+0x4888>  // b.any
  41eaf8:	b	41ea4c <_obstack_memory_used@@Base+0x48b8>
  41eafc:	mov	x19, #0xffffffffffffffff    	// #-1
  41eb00:	b	41e924 <_obstack_memory_used@@Base+0x4790>
  41eb04:	mov	x19, #0xfffffffffffffffe    	// #-2
  41eb08:	b	41e924 <_obstack_memory_used@@Base+0x4790>
  41eb0c:	ldr	x0, [x28, #8]
  41eb10:	lsl	x25, x19, #3
  41eb14:	mov	x1, x25
  41eb18:	bl	4024c0 <realloc@plt>
  41eb1c:	cbz	x0, 41eb44 <_obstack_memory_used@@Base+0x49b0>
  41eb20:	mov	x24, x0
  41eb24:	ldr	x0, [x28, #16]
  41eb28:	mov	x1, x25
  41eb2c:	bl	4024c0 <realloc@plt>
  41eb30:	cbz	x0, 41eb3c <_obstack_memory_used@@Base+0x49a8>
  41eb34:	stp	x24, x0, [x28, #8]
  41eb38:	b	41e98c <_obstack_memory_used@@Base+0x47f8>
  41eb3c:	mov	x0, x24
  41eb40:	bl	402620 <free@plt>
  41eb44:	mov	w8, wzr
  41eb48:	b	41ea7c <_obstack_memory_used@@Base+0x48e8>
  41eb4c:	mov	x6, x5
  41eb50:	mov	x5, x2
  41eb54:	mov	w7, wzr
  41eb58:	b	41e768 <_obstack_memory_used@@Base+0x45d4>
  41eb5c:	stp	x29, x30, [sp, #-96]!
  41eb60:	stp	x22, x21, [sp, #64]
  41eb64:	adds	x22, x2, x4
  41eb68:	stp	x28, x27, [sp, #16]
  41eb6c:	stp	x26, x25, [sp, #32]
  41eb70:	stp	x24, x23, [sp, #48]
  41eb74:	stp	x20, x19, [sp, #80]
  41eb78:	mov	x29, sp
  41eb7c:	b.vs	41ec50 <_obstack_memory_used@@Base+0x4abc>
  41eb80:	orr	x8, x4, x2
  41eb84:	mov	x19, x7
  41eb88:	mov	x27, x4
  41eb8c:	mov	x28, x2
  41eb90:	orr	x8, x8, x7
  41eb94:	tbnz	x8, #63, 41ec50 <_obstack_memory_used@@Base+0x4abc>
  41eb98:	mov	x20, x6
  41eb9c:	mov	x21, x5
  41eba0:	mov	x24, x1
  41eba4:	mov	x23, x0
  41eba8:	cmp	x27, #0x1
  41ebac:	b.lt	41ebf0 <_obstack_memory_used@@Base+0x4a5c>  // b.tstop
  41ebb0:	mov	x26, x3
  41ebb4:	cmp	x28, #0x1
  41ebb8:	b.lt	41ebf8 <_obstack_memory_used@@Base+0x4a64>  // b.tstop
  41ebbc:	mov	x0, x22
  41ebc0:	bl	4023a0 <malloc@plt>
  41ebc4:	cbz	x0, 41ec50 <_obstack_memory_used@@Base+0x4abc>
  41ebc8:	mov	x1, x24
  41ebcc:	mov	x2, x28
  41ebd0:	mov	x25, x0
  41ebd4:	bl	402210 <memcpy@plt>
  41ebd8:	add	x0, x25, x28
  41ebdc:	mov	x1, x26
  41ebe0:	mov	x2, x27
  41ebe4:	bl	402210 <memcpy@plt>
  41ebe8:	mov	x24, x25
  41ebec:	b	41ec00 <_obstack_memory_used@@Base+0x4a6c>
  41ebf0:	mov	x25, xzr
  41ebf4:	b	41ec00 <_obstack_memory_used@@Base+0x4a6c>
  41ebf8:	mov	x25, xzr
  41ebfc:	mov	x24, x26
  41ec00:	mov	w7, #0x1                   	// #1
  41ec04:	mov	x0, x23
  41ec08:	mov	x1, x24
  41ec0c:	mov	x2, x22
  41ec10:	mov	x3, x21
  41ec14:	mov	x4, xzr
  41ec18:	mov	x5, x19
  41ec1c:	mov	x6, x20
  41ec20:	bl	41e768 <_obstack_memory_used@@Base+0x45d4>
  41ec24:	mov	x19, x0
  41ec28:	mov	x0, x25
  41ec2c:	bl	402620 <free@plt>
  41ec30:	mov	x0, x19
  41ec34:	ldp	x20, x19, [sp, #80]
  41ec38:	ldp	x22, x21, [sp, #64]
  41ec3c:	ldp	x24, x23, [sp, #48]
  41ec40:	ldp	x26, x25, [sp, #32]
  41ec44:	ldp	x28, x27, [sp, #16]
  41ec48:	ldp	x29, x30, [sp], #96
  41ec4c:	ret
  41ec50:	mov	x0, #0xfffffffffffffffe    	// #-2
  41ec54:	b	41ec34 <_obstack_memory_used@@Base+0x4aa0>
  41ec58:	sub	sp, sp, #0x70
  41ec5c:	stp	x22, x21, [sp, #80]
  41ec60:	adds	x22, x2, x4
  41ec64:	stp	x29, x30, [sp, #16]
  41ec68:	stp	x28, x27, [sp, #32]
  41ec6c:	stp	x26, x25, [sp, #48]
  41ec70:	stp	x24, x23, [sp, #64]
  41ec74:	stp	x20, x19, [sp, #96]
  41ec78:	add	x29, sp, #0x10
  41ec7c:	b.vs	41ed5c <_obstack_memory_used@@Base+0x4bc8>
  41ec80:	ldr	x23, [x29, #96]
  41ec84:	orr	x8, x4, x2
  41ec88:	mov	x28, x4
  41ec8c:	mov	x19, x2
  41ec90:	orr	x8, x8, x23
  41ec94:	tbnz	x8, #63, 41ed5c <_obstack_memory_used@@Base+0x4bc8>
  41ec98:	mov	x20, x6
  41ec9c:	mov	x21, x5
  41eca0:	mov	x25, x1
  41eca4:	mov	x24, x0
  41eca8:	cmp	x28, #0x1
  41ecac:	b.lt	41ecf8 <_obstack_memory_used@@Base+0x4b64>  // b.tstop
  41ecb0:	mov	x27, x3
  41ecb4:	cmp	x19, #0x1
  41ecb8:	b.lt	41ed00 <_obstack_memory_used@@Base+0x4b6c>  // b.tstop
  41ecbc:	mov	x0, x22
  41ecc0:	str	x7, [sp, #8]
  41ecc4:	bl	4023a0 <malloc@plt>
  41ecc8:	cbz	x0, 41ed5c <_obstack_memory_used@@Base+0x4bc8>
  41eccc:	mov	x1, x25
  41ecd0:	mov	x2, x19
  41ecd4:	mov	x26, x0
  41ecd8:	bl	402210 <memcpy@plt>
  41ecdc:	add	x0, x26, x19
  41ece0:	mov	x1, x27
  41ece4:	mov	x2, x28
  41ece8:	bl	402210 <memcpy@plt>
  41ecec:	ldr	x7, [sp, #8]
  41ecf0:	mov	x25, x26
  41ecf4:	b	41ed08 <_obstack_memory_used@@Base+0x4b74>
  41ecf8:	mov	x26, xzr
  41ecfc:	b	41ed08 <_obstack_memory_used@@Base+0x4b74>
  41ed00:	mov	x26, xzr
  41ed04:	mov	x25, x27
  41ed08:	mov	x0, x24
  41ed0c:	mov	x1, x25
  41ed10:	mov	x2, x22
  41ed14:	mov	x3, x21
  41ed18:	mov	x4, x20
  41ed1c:	mov	x5, x23
  41ed20:	mov	x6, x7
  41ed24:	mov	w7, wzr
  41ed28:	bl	41e768 <_obstack_memory_used@@Base+0x45d4>
  41ed2c:	mov	x19, x0
  41ed30:	mov	x0, x26
  41ed34:	bl	402620 <free@plt>
  41ed38:	mov	x0, x19
  41ed3c:	ldp	x20, x19, [sp, #96]
  41ed40:	ldp	x22, x21, [sp, #80]
  41ed44:	ldp	x24, x23, [sp, #64]
  41ed48:	ldp	x26, x25, [sp, #48]
  41ed4c:	ldp	x28, x27, [sp, #32]
  41ed50:	ldp	x29, x30, [sp, #16]
  41ed54:	add	sp, sp, #0x70
  41ed58:	ret
  41ed5c:	mov	x0, #0xfffffffffffffffe    	// #-2
  41ed60:	b	41ed3c <_obstack_memory_used@@Base+0x4ba8>
  41ed64:	ldrb	w8, [x0, #56]
  41ed68:	cmp	x2, #0x0
  41ed6c:	csel	x9, xzr, x4, eq  // eq = none
  41ed70:	csel	x10, xzr, x3, eq  // eq = none
  41ed74:	and	w8, w8, #0xfffffff9
  41ed78:	orr	w11, w8, #0x2
  41ed7c:	csel	w8, w8, w11, eq  // eq = none
  41ed80:	strb	w8, [x0, #56]
  41ed84:	stp	x10, x9, [x1, #8]
  41ed88:	str	x2, [x1]
  41ed8c:	ret
  41ed90:	stp	x29, x30, [sp, #-32]!
  41ed94:	str	x19, [sp, #16]
  41ed98:	mov	x19, x0
  41ed9c:	ldr	x0, [x0, #48]
  41eda0:	mov	x29, sp
  41eda4:	bl	402620 <free@plt>
  41eda8:	ldr	x0, [x19, #72]
  41edac:	bl	402620 <free@plt>
  41edb0:	ldr	x8, [x19, #80]
  41edb4:	add	x9, x19, #0x8
  41edb8:	cmp	x8, x9
  41edbc:	b.eq	41edd0 <_obstack_memory_used@@Base+0x4c3c>  // b.none
  41edc0:	ldr	x0, [x8, #16]
  41edc4:	bl	402620 <free@plt>
  41edc8:	ldr	x0, [x19, #80]
  41edcc:	bl	402620 <free@plt>
  41edd0:	ldr	x0, [x19, #24]
  41edd4:	bl	402620 <free@plt>
  41edd8:	ldr	x0, [x19, #96]
  41eddc:	bl	402620 <free@plt>
  41ede0:	ldr	x0, [x19, #88]
  41ede4:	bl	402620 <free@plt>
  41ede8:	mov	x0, x19
  41edec:	ldr	x19, [sp, #16]
  41edf0:	ldp	x29, x30, [sp], #32
  41edf4:	b	402620 <free@plt>
  41edf8:	sub	sp, sp, #0xb0
  41edfc:	stp	x29, x30, [sp, #80]
  41ee00:	stp	x28, x27, [sp, #96]
  41ee04:	stp	x26, x25, [sp, #112]
  41ee08:	stp	x24, x23, [sp, #128]
  41ee0c:	stp	x22, x21, [sp, #144]
  41ee10:	stp	x20, x19, [sp, #160]
  41ee14:	ldr	x8, [x0, #64]
  41ee18:	ldr	x9, [x0, #88]
  41ee1c:	ldrb	w10, [x0, #138]
  41ee20:	ldr	x25, [x0, #48]
  41ee24:	mov	x19, x0
  41ee28:	cmp	x8, x9
  41ee2c:	csel	x26, x9, x8, gt
  41ee30:	add	x29, sp, #0x50
  41ee34:	cbnz	w10, 41ee48 <_obstack_memory_used@@Base+0x4cb4>
  41ee38:	ldr	x8, [x19, #120]
  41ee3c:	cbnz	x8, 41ee48 <_obstack_memory_used@@Base+0x4cb4>
  41ee40:	ldrb	w8, [x19, #140]
  41ee44:	cbz	w8, 41ee50 <_obstack_memory_used@@Base+0x4cbc>
  41ee48:	ldr	x22, [x19, #56]
  41ee4c:	b	41f01c <_obstack_memory_used@@Base+0x4e88>
  41ee50:	cmp	x26, x25
  41ee54:	b.le	41effc <_obstack_memory_used@@Base+0x4e68>
  41ee58:	add	x20, x19, #0x20
  41ee5c:	b	41ee94 <_obstack_memory_used@@Base+0x4d00>
  41ee60:	and	x21, x23, #0xff
  41ee64:	bl	4024d0 <__ctype_toupper_loc@plt>
  41ee68:	ldr	x8, [x0]
  41ee6c:	ldr	x9, [x19, #8]
  41ee70:	add	x27, x25, #0x1
  41ee74:	ldr	w8, [x8, x21, lsl #2]
  41ee78:	strb	w8, [x9, x25]
  41ee7c:	ldp	x8, x9, [x19, #8]
  41ee80:	ldrb	w8, [x8, x25]
  41ee84:	str	w8, [x9, x25, lsl #2]
  41ee88:	cmp	x26, x27
  41ee8c:	mov	x25, x27
  41ee90:	b.le	41f318 <_obstack_memory_used@@Base+0x5184>
  41ee94:	ldr	x21, [x19, #40]
  41ee98:	ldr	x22, [x19]
  41ee9c:	add	x8, x21, x25
  41eea0:	ldrsb	w23, [x22, x8]
  41eea4:	tbnz	w23, #31, 41eeb4 <_obstack_memory_used@@Base+0x4d20>
  41eea8:	mov	x0, x20
  41eeac:	bl	402580 <mbsinit@plt>
  41eeb0:	cbnz	w0, 41ee60 <_obstack_memory_used@@Base+0x4ccc>
  41eeb4:	ldr	x8, [x20]
  41eeb8:	add	x9, x22, x21
  41eebc:	sub	x2, x26, x25
  41eec0:	add	x1, x9, x25
  41eec4:	add	x0, sp, #0x4
  41eec8:	mov	x3, x20
  41eecc:	stur	x8, [x29, #-8]
  41eed0:	bl	419da4 <wcrtomb@plt+0x17534>
  41eed4:	sub	x23, x0, #0x1
  41eed8:	mov	x21, x0
  41eedc:	cmn	x23, #0x4
  41eee0:	b.hi	41efac <_obstack_memory_used@@Base+0x4e18>  // b.pmore
  41eee4:	ldr	w0, [sp, #4]
  41eee8:	bl	402780 <towupper@plt>
  41eeec:	ldr	w8, [sp, #4]
  41eef0:	mov	w22, w0
  41eef4:	cmp	w0, w8
  41eef8:	b.ne	41ef14 <_obstack_memory_used@@Base+0x4d80>  // b.any
  41eefc:	ldp	x9, x8, [x19]
  41ef00:	ldr	x10, [x19, #40]
  41ef04:	add	x0, x8, x25
  41ef08:	add	x8, x9, x10
  41ef0c:	add	x1, x8, x25
  41ef10:	b	41ef38 <_obstack_memory_used@@Base+0x4da4>
  41ef14:	add	x0, sp, #0x8
  41ef18:	sub	x2, x29, #0x8
  41ef1c:	mov	w1, w22
  41ef20:	bl	402870 <wcrtomb@plt>
  41ef24:	cmp	x21, x0
  41ef28:	b.ne	41f004 <_obstack_memory_used@@Base+0x4e70>  // b.any
  41ef2c:	ldr	x8, [x19, #8]
  41ef30:	add	x1, sp, #0x8
  41ef34:	add	x0, x8, x25
  41ef38:	mov	x2, x21
  41ef3c:	bl	402210 <memcpy@plt>
  41ef40:	ldr	x8, [x19, #16]
  41ef44:	add	x24, x21, x25
  41ef48:	add	x27, x25, #0x1
  41ef4c:	cmp	x27, x24
  41ef50:	str	w22, [x8, x25, lsl #2]
  41ef54:	b.ge	41ee88 <_obstack_memory_used@@Base+0x4cf4>  // b.tcont
  41ef58:	add	x8, x8, x25, lsl #2
  41ef5c:	lsl	x9, x21, #2
  41ef60:	add	x0, x8, #0x4
  41ef64:	sub	x2, x9, #0x4
  41ef68:	mov	w1, #0xff                  	// #255
  41ef6c:	bl	402470 <memset@plt>
  41ef70:	cmp	x23, #0x2
  41ef74:	b.cc	41ef94 <_obstack_memory_used@@Base+0x4e00>  // b.lo, b.ul, b.last
  41ef78:	and	x8, x23, #0xfffffffffffffffe
  41ef7c:	add	x27, x27, x8
  41ef80:	mov	x9, x8
  41ef84:	subs	x9, x9, #0x2
  41ef88:	b.ne	41ef84 <_obstack_memory_used@@Base+0x4df0>  // b.any
  41ef8c:	cmp	x23, x8
  41ef90:	b.eq	41efa4 <_obstack_memory_used@@Base+0x4e10>  // b.none
  41ef94:	add	x8, x21, x25
  41ef98:	sub	x8, x8, x27
  41ef9c:	subs	x8, x8, #0x1
  41efa0:	b.ne	41ef9c <_obstack_memory_used@@Base+0x4e08>  // b.any
  41efa4:	mov	x27, x24
  41efa8:	b	41ee88 <_obstack_memory_used@@Base+0x4cf4>
  41efac:	add	x8, x21, #0x1
  41efb0:	cmp	x8, #0x2
  41efb4:	b.cc	41efc8 <_obstack_memory_used@@Base+0x4e34>  // b.lo, b.ul, b.last
  41efb8:	ldr	x8, [x19, #64]
  41efbc:	ldr	x9, [x19, #88]
  41efc0:	cmp	x8, x9
  41efc4:	b.lt	41f00c <_obstack_memory_used@@Base+0x4e78>  // b.tstop
  41efc8:	ldr	x8, [x19, #40]
  41efcc:	ldp	x9, x10, [x19]
  41efd0:	add	x27, x25, #0x1
  41efd4:	cmn	x21, #0x1
  41efd8:	add	x8, x8, x25
  41efdc:	ldrb	w8, [x9, x8]
  41efe0:	strb	w8, [x10, x25]
  41efe4:	ldr	x9, [x19, #16]
  41efe8:	str	w8, [x9, x25, lsl #2]
  41efec:	b.ne	41ee88 <_obstack_memory_used@@Base+0x4cf4>  // b.any
  41eff0:	ldur	x8, [x29, #-8]
  41eff4:	str	x8, [x20]
  41eff8:	b	41ee88 <_obstack_memory_used@@Base+0x4cf4>
  41effc:	mov	x27, x25
  41f000:	b	41f318 <_obstack_memory_used@@Base+0x5184>
  41f004:	mov	x27, x25
  41f008:	b	41f02c <_obstack_memory_used@@Base+0x4e98>
  41f00c:	ldur	x8, [x29, #-8]
  41f010:	mov	x27, x25
  41f014:	str	x8, [x20]
  41f018:	b	41f318 <_obstack_memory_used@@Base+0x5184>
  41f01c:	cmp	x25, x26
  41f020:	mov	x27, x25
  41f024:	mov	x25, x22
  41f028:	b.ge	41f318 <_obstack_memory_used@@Base+0x5184>  // b.tcont
  41f02c:	mov	x23, x19
  41f030:	ldr	x8, [x23, #32]!
  41f034:	sub	x2, x26, x27
  41f038:	stur	x8, [x29, #-8]
  41f03c:	ldr	x8, [x23, #88]
  41f040:	cbnz	x8, 41f138 <_obstack_memory_used@@Base+0x4fa4>
  41f044:	ldr	x8, [x19]
  41f048:	ldr	x9, [x19, #40]
  41f04c:	add	x8, x8, x9
  41f050:	add	x24, x8, x25
  41f054:	mov	x0, sp
  41f058:	mov	x1, x24
  41f05c:	mov	x3, x23
  41f060:	bl	419da4 <wcrtomb@plt+0x17534>
  41f064:	sub	x28, x0, #0x1
  41f068:	mov	x20, x0
  41f06c:	cmn	x28, #0x4
  41f070:	b.hi	41f18c <_obstack_memory_used@@Base+0x4ff8>  // b.pmore
  41f074:	ldr	w0, [sp]
  41f078:	bl	402780 <towupper@plt>
  41f07c:	ldr	w8, [sp]
  41f080:	mov	w21, w0
  41f084:	cmp	w0, w8
  41f088:	b.ne	41f098 <_obstack_memory_used@@Base+0x4f04>  // b.any
  41f08c:	ldr	x8, [x19, #8]
  41f090:	mov	x1, x24
  41f094:	b	41f0b8 <_obstack_memory_used@@Base+0x4f24>
  41f098:	add	x0, sp, #0x8
  41f09c:	sub	x2, x29, #0x8
  41f0a0:	mov	w1, w21
  41f0a4:	bl	402870 <wcrtomb@plt>
  41f0a8:	subs	x9, x0, x20
  41f0ac:	b.ne	41f1f4 <_obstack_memory_used@@Base+0x5060>  // b.any
  41f0b0:	ldr	x8, [x19, #8]
  41f0b4:	add	x1, sp, #0x8
  41f0b8:	add	x0, x8, x27
  41f0bc:	mov	x2, x20
  41f0c0:	bl	402210 <memcpy@plt>
  41f0c4:	ldrb	w8, [x19, #140]
  41f0c8:	cbnz	w8, 41f248 <_obstack_memory_used@@Base+0x50b4>
  41f0cc:	ldr	x8, [x19, #16]
  41f0d0:	add	x22, x20, x25
  41f0d4:	add	x23, x20, x27
  41f0d8:	add	x25, x27, #0x1
  41f0dc:	cmp	x25, x23
  41f0e0:	str	w21, [x8, x27, lsl #2]
  41f0e4:	b.ge	41f01c <_obstack_memory_used@@Base+0x4e88>  // b.tcont
  41f0e8:	add	x0, x8, x25, lsl #2
  41f0ec:	lsl	x8, x20, #2
  41f0f0:	sub	x2, x8, #0x4
  41f0f4:	mov	w1, #0xff                  	// #255
  41f0f8:	bl	402470 <memset@plt>
  41f0fc:	cmp	x28, #0x2
  41f100:	b.cc	41f120 <_obstack_memory_used@@Base+0x4f8c>  // b.lo, b.ul, b.last
  41f104:	and	x8, x28, #0xfffffffffffffffe
  41f108:	add	x25, x25, x8
  41f10c:	mov	x9, x8
  41f110:	subs	x9, x9, #0x2
  41f114:	b.ne	41f110 <_obstack_memory_used@@Base+0x4f7c>  // b.any
  41f118:	cmp	x28, x8
  41f11c:	b.eq	41f130 <_obstack_memory_used@@Base+0x4f9c>  // b.none
  41f120:	add	x8, x20, x27
  41f124:	sub	x8, x8, x25
  41f128:	subs	x8, x8, #0x1
  41f12c:	b.ne	41f128 <_obstack_memory_used@@Base+0x4f94>  // b.any
  41f130:	mov	x25, x23
  41f134:	b	41f01c <_obstack_memory_used@@Base+0x4e88>
  41f138:	ldr	w9, [x19, #144]
  41f13c:	add	x24, sp, #0x8
  41f140:	cmp	w9, #0x1
  41f144:	b.lt	41f054 <_obstack_memory_used@@Base+0x4ec0>  // b.tstop
  41f148:	cmp	x2, #0x1
  41f14c:	b.lt	41f054 <_obstack_memory_used@@Base+0x4ec0>  // b.tstop
  41f150:	ldr	x11, [x19, #40]
  41f154:	ldr	x12, [x19]
  41f158:	mov	x10, xzr
  41f15c:	add	x11, x25, x11
  41f160:	add	x11, x12, x11
  41f164:	ldrb	w12, [x11, x10]
  41f168:	add	x24, sp, #0x8
  41f16c:	ldrb	w12, [x8, x12]
  41f170:	strb	w12, [x24, x10]
  41f174:	add	x10, x10, #0x1
  41f178:	cmp	x10, x9
  41f17c:	b.cs	41f054 <_obstack_memory_used@@Base+0x4ec0>  // b.hs, b.nlast
  41f180:	cmp	x2, x10
  41f184:	b.gt	41f164 <_obstack_memory_used@@Base+0x4fd0>
  41f188:	b	41f054 <_obstack_memory_used@@Base+0x4ec0>
  41f18c:	add	x8, x20, #0x1
  41f190:	cmp	x8, #0x2
  41f194:	b.cc	41f1a8 <_obstack_memory_used@@Base+0x5014>  // b.lo, b.ul, b.last
  41f198:	ldr	x8, [x19, #64]
  41f19c:	ldr	x9, [x19, #88]
  41f1a0:	cmp	x8, x9
  41f1a4:	b.lt	41f310 <_obstack_memory_used@@Base+0x517c>  // b.tstop
  41f1a8:	ldr	x8, [x19, #40]
  41f1ac:	ldr	x10, [x19]
  41f1b0:	ldr	x9, [x19, #120]
  41f1b4:	add	x8, x8, x25
  41f1b8:	ldrb	w8, [x10, x8]
  41f1bc:	cbnz	x9, 41f348 <_obstack_memory_used@@Base+0x51b4>
  41f1c0:	ldr	x9, [x19, #8]
  41f1c4:	strb	w8, [x9, x27]
  41f1c8:	ldrb	w9, [x19, #140]
  41f1cc:	cbnz	w9, 41f35c <_obstack_memory_used@@Base+0x51c8>
  41f1d0:	ldr	x9, [x19, #16]
  41f1d4:	add	x22, x25, #0x1
  41f1d8:	add	x25, x27, #0x1
  41f1dc:	cmn	x20, #0x1
  41f1e0:	str	w8, [x9, x27, lsl #2]
  41f1e4:	b.ne	41f01c <_obstack_memory_used@@Base+0x4e88>  // b.any
  41f1e8:	ldur	x8, [x29, #-8]
  41f1ec:	str	x8, [x23]
  41f1f0:	b	41f01c <_obstack_memory_used@@Base+0x4e88>
  41f1f4:	mov	x22, x0
  41f1f8:	cmn	x0, #0x1
  41f1fc:	b.eq	41f08c <_obstack_memory_used@@Base+0x4ef8>  // b.none
  41f200:	ldr	x8, [x19, #64]
  41f204:	add	x24, x22, x27
  41f208:	cmp	x24, x8
  41f20c:	b.hi	41f310 <_obstack_memory_used@@Base+0x517c>  // b.pmore
  41f210:	ldr	x0, [x19, #24]
  41f214:	mov	x23, x9
  41f218:	cbnz	x0, 41f22c <_obstack_memory_used@@Base+0x5098>
  41f21c:	lsl	x0, x8, #3
  41f220:	bl	4023a0 <malloc@plt>
  41f224:	str	x0, [x19, #24]
  41f228:	cbz	x0, 41f340 <_obstack_memory_used@@Base+0x51ac>
  41f22c:	ldrb	w8, [x19, #140]
  41f230:	cbnz	w8, 41f380 <_obstack_memory_used@@Base+0x51ec>
  41f234:	cbz	x27, 41f378 <_obstack_memory_used@@Base+0x51e4>
  41f238:	cmp	x27, #0x4
  41f23c:	b.cs	41f2d0 <_obstack_memory_used@@Base+0x513c>  // b.hs, b.nlast
  41f240:	mov	x8, xzr
  41f244:	b	41f368 <_obstack_memory_used@@Base+0x51d4>
  41f248:	ldr	x8, [x19, #24]
  41f24c:	cmp	x20, #0x4
  41f250:	b.cs	41f25c <_obstack_memory_used@@Base+0x50c8>  // b.hs, b.nlast
  41f254:	mov	x9, xzr
  41f258:	b	41f2ac <_obstack_memory_used@@Base+0x5118>
  41f25c:	adrp	x11, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41f260:	ldr	q1, [x11, #1856]
  41f264:	mov	w11, #0x2                   	// #2
  41f268:	and	x9, x20, #0xfffffffffffffffc
  41f26c:	add	x10, x8, x27, lsl #3
  41f270:	dup	v2.2d, x11
  41f274:	mov	w11, #0x4                   	// #4
  41f278:	dup	v0.2d, x25
  41f27c:	add	x10, x10, #0x10
  41f280:	dup	v3.2d, x11
  41f284:	mov	x11, x9
  41f288:	add	v4.2d, v1.2d, v0.2d
  41f28c:	add	v5.2d, v4.2d, v2.2d
  41f290:	add	v1.2d, v1.2d, v3.2d
  41f294:	subs	x11, x11, #0x4
  41f298:	stp	q4, q5, [x10, #-16]
  41f29c:	add	x10, x10, #0x20
  41f2a0:	b.ne	41f288 <_obstack_memory_used@@Base+0x50f4>  // b.any
  41f2a4:	cmp	x20, x9
  41f2a8:	b.eq	41f0cc <_obstack_memory_used@@Base+0x4f38>  // b.none
  41f2ac:	sub	x10, x20, x9
  41f2b0:	add	x11, x25, x9
  41f2b4:	add	x9, x27, x9
  41f2b8:	add	x8, x8, x9, lsl #3
  41f2bc:	str	x11, [x8], #8
  41f2c0:	subs	x10, x10, #0x1
  41f2c4:	add	x11, x11, #0x1
  41f2c8:	b.ne	41f2bc <_obstack_memory_used@@Base+0x5128>  // b.any
  41f2cc:	b	41f0cc <_obstack_memory_used@@Base+0x4f38>
  41f2d0:	adrp	x10, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  41f2d4:	ldr	q0, [x10, #1856]
  41f2d8:	mov	w10, #0x2                   	// #2
  41f2dc:	and	x8, x27, #0xfffffffffffffffc
  41f2e0:	dup	v1.2d, x10
  41f2e4:	mov	w10, #0x4                   	// #4
  41f2e8:	add	x9, x0, #0x10
  41f2ec:	dup	v2.2d, x10
  41f2f0:	mov	x10, x8
  41f2f4:	add	v3.2d, v0.2d, v1.2d
  41f2f8:	stp	q0, q3, [x9, #-16]
  41f2fc:	add	v0.2d, v0.2d, v2.2d
  41f300:	subs	x10, x10, #0x4
  41f304:	add	x9, x9, #0x20
  41f308:	b.ne	41f2f4 <_obstack_memory_used@@Base+0x5160>  // b.any
  41f30c:	b	41f370 <_obstack_memory_used@@Base+0x51dc>
  41f310:	ldur	x8, [x29, #-8]
  41f314:	str	x8, [x23]
  41f318:	mov	w0, wzr
  41f31c:	stp	x27, x25, [x19, #48]
  41f320:	ldp	x20, x19, [sp, #160]
  41f324:	ldp	x22, x21, [sp, #144]
  41f328:	ldp	x24, x23, [sp, #128]
  41f32c:	ldp	x26, x25, [sp, #112]
  41f330:	ldp	x28, x27, [sp, #96]
  41f334:	ldp	x29, x30, [sp, #80]
  41f338:	add	sp, sp, #0xb0
  41f33c:	ret
  41f340:	mov	w0, #0xc                   	// #12
  41f344:	b	41f320 <_obstack_memory_used@@Base+0x518c>
  41f348:	ldrb	w8, [x9, x8]
  41f34c:	ldr	x9, [x19, #8]
  41f350:	strb	w8, [x9, x27]
  41f354:	ldrb	w9, [x19, #140]
  41f358:	cbz	w9, 41f1d0 <_obstack_memory_used@@Base+0x503c>
  41f35c:	ldr	x9, [x19, #24]
  41f360:	str	x25, [x9, x27, lsl #3]
  41f364:	b	41f1d0 <_obstack_memory_used@@Base+0x503c>
  41f368:	str	x8, [x0, x8, lsl #3]
  41f36c:	add	x8, x8, #0x1
  41f370:	cmp	x27, x8
  41f374:	b.ne	41f368 <_obstack_memory_used@@Base+0x51d4>  // b.any
  41f378:	mov	w8, #0x1                   	// #1
  41f37c:	strb	w8, [x19, #140]
  41f380:	ldr	x8, [x19, #8]
  41f384:	add	x1, sp, #0x8
  41f388:	mov	x2, x22
  41f38c:	add	x0, x8, x27
  41f390:	bl	402210 <memcpy@plt>
  41f394:	ldr	x8, [x19, #16]
  41f398:	cmp	x22, #0x2
  41f39c:	mov	x16, x23
  41f3a0:	str	w21, [x8, x27, lsl #2]
  41f3a4:	ldr	x9, [x19, #24]
  41f3a8:	str	x25, [x9, x27, lsl #3]
  41f3ac:	b.cc	41f470 <_obstack_memory_used@@Base+0x52dc>  // b.lo, b.ul, b.last
  41f3b0:	sub	x11, x22, #0x1
  41f3b4:	cmp	x11, #0x4
  41f3b8:	b.cs	41f3c4 <_obstack_memory_used@@Base+0x5230>  // b.hs, b.nlast
  41f3bc:	mov	w10, #0x1                   	// #1
  41f3c0:	b	41f444 <_obstack_memory_used@@Base+0x52b0>
  41f3c4:	adrp	x13, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41f3c8:	ldr	q3, [x13, #112]
  41f3cc:	mov	w15, #0x2                   	// #2
  41f3d0:	and	x12, x11, #0xfffffffffffffffc
  41f3d4:	add	x14, x27, #0x3
  41f3d8:	dup	v4.2d, x15
  41f3dc:	mov	w15, #0x4                   	// #4
  41f3e0:	dup	v0.2d, x20
  41f3e4:	dup	v1.2d, x28
  41f3e8:	dup	v2.2d, x25
  41f3ec:	orr	x10, x12, #0x1
  41f3f0:	add	x13, x8, x14, lsl #2
  41f3f4:	add	x14, x9, x14, lsl #3
  41f3f8:	movi	v5.2d, #0xffffffffffffffff
  41f3fc:	dup	v6.2d, x15
  41f400:	mov	x15, x12
  41f404:	add	v7.2d, v3.2d, v4.2d
  41f408:	cmhi	v16.2d, v0.2d, v3.2d
  41f40c:	cmhi	v17.2d, v0.2d, v7.2d
  41f410:	bsl	v16.16b, v3.16b, v1.16b
  41f414:	bsl	v17.16b, v7.16b, v1.16b
  41f418:	add	v7.2d, v16.2d, v2.2d
  41f41c:	add	v16.2d, v17.2d, v2.2d
  41f420:	subs	x15, x15, #0x4
  41f424:	add	v3.2d, v3.2d, v6.2d
  41f428:	stp	q7, q16, [x14, #-16]
  41f42c:	stp	d5, d5, [x13, #-8]
  41f430:	add	x13, x13, #0x10
  41f434:	add	x14, x14, #0x20
  41f438:	b.ne	41f404 <_obstack_memory_used@@Base+0x5270>  // b.any
  41f43c:	cmp	x11, x12
  41f440:	b.eq	41f470 <_obstack_memory_used@@Base+0x52dc>  // b.none
  41f444:	add	x8, x8, x27, lsl #2
  41f448:	add	x9, x9, x27, lsl #3
  41f44c:	mov	w11, #0xffffffff            	// #-1
  41f450:	cmp	x10, x20
  41f454:	csel	x12, x10, x28, cc  // cc = lo, ul, last
  41f458:	add	x12, x12, x25
  41f45c:	str	x12, [x9, x10, lsl #3]
  41f460:	str	w11, [x8, x10, lsl #2]
  41f464:	add	x10, x10, #0x1
  41f468:	cmp	x22, x10
  41f46c:	b.ne	41f450 <_obstack_memory_used@@Base+0x52bc>  // b.any
  41f470:	ldp	x8, x9, [x19, #88]
  41f474:	add	x8, x8, x16
  41f478:	cmp	x9, x25
  41f47c:	str	x8, [x19, #88]
  41f480:	b.le	41f490 <_obstack_memory_used@@Base+0x52fc>
  41f484:	ldr	x9, [x19, #104]
  41f488:	add	x9, x9, x16
  41f48c:	str	x9, [x19, #104]
  41f490:	ldr	x9, [x19, #64]
  41f494:	add	x22, x20, x25
  41f498:	mov	x25, x24
  41f49c:	cmp	x9, x8
  41f4a0:	csel	x26, x8, x9, gt
  41f4a4:	b	41f01c <_obstack_memory_used@@Base+0x4e88>
  41f4a8:	sub	sp, sp, #0x90
  41f4ac:	stp	x29, x30, [sp, #64]
  41f4b0:	stp	x24, x23, [sp, #96]
  41f4b4:	stp	x22, x21, [sp, #112]
  41f4b8:	stp	x20, x19, [sp, #128]
  41f4bc:	ldr	x8, [x0, #64]
  41f4c0:	ldr	x9, [x0, #88]
  41f4c4:	ldr	x23, [x0, #48]
  41f4c8:	mov	x19, x0
  41f4cc:	str	x25, [sp, #80]
  41f4d0:	cmp	x8, x9
  41f4d4:	csel	x22, x9, x8, gt
  41f4d8:	cmp	x22, x23
  41f4dc:	add	x29, sp, #0x40
  41f4e0:	b.le	41f68c <_obstack_memory_used@@Base+0x54f8>
  41f4e4:	add	x20, x19, #0x20
  41f4e8:	ldr	x8, [x19, #120]
  41f4ec:	ldr	x24, [x19, #32]
  41f4f0:	sub	x2, x22, x23
  41f4f4:	cbnz	x8, 41f5e4 <_obstack_memory_used@@Base+0x5450>
  41f4f8:	ldr	x8, [x19]
  41f4fc:	ldr	x9, [x19, #40]
  41f500:	add	x8, x8, x9
  41f504:	add	x1, x8, x23
  41f508:	add	x0, x29, #0x1c
  41f50c:	mov	x3, x20
  41f510:	bl	419da4 <wcrtomb@plt+0x17534>
  41f514:	add	x8, x0, #0x1
  41f518:	cmp	x8, #0x2
  41f51c:	b.cc	41f53c <_obstack_memory_used@@Base+0x53a8>  // b.lo, b.ul, b.last
  41f520:	mov	x21, x0
  41f524:	cmn	x0, #0x2
  41f528:	b.ne	41f564 <_obstack_memory_used@@Base+0x53d0>  // b.any
  41f52c:	ldr	x8, [x19, #64]
  41f530:	ldr	x9, [x19, #88]
  41f534:	cmp	x8, x9
  41f538:	b.lt	41f688 <_obstack_memory_used@@Base+0x54f4>  // b.tstop
  41f53c:	ldr	x8, [x19, #40]
  41f540:	ldr	x9, [x19]
  41f544:	add	x8, x8, x23
  41f548:	ldrb	w8, [x9, x8]
  41f54c:	str	w8, [x29, #28]
  41f550:	ldr	x9, [x19, #120]
  41f554:	cbnz	x9, 41f67c <_obstack_memory_used@@Base+0x54e8>
  41f558:	mov	w21, #0x1                   	// #1
  41f55c:	str	x24, [x20]
  41f560:	b	41f568 <_obstack_memory_used@@Base+0x53d4>
  41f564:	ldr	w8, [x29, #28]
  41f568:	ldr	x9, [x19, #16]
  41f56c:	add	x25, x21, x23
  41f570:	add	x24, x23, #0x1
  41f574:	cmp	x24, x25
  41f578:	str	w8, [x9, x23, lsl #2]
  41f57c:	b.ge	41f5d4 <_obstack_memory_used@@Base+0x5440>  // b.tcont
  41f580:	add	x8, x9, x23, lsl #2
  41f584:	lsl	x9, x21, #2
  41f588:	add	x0, x8, #0x4
  41f58c:	sub	x2, x9, #0x4
  41f590:	mov	w1, #0xff                  	// #255
  41f594:	bl	402470 <memset@plt>
  41f598:	sub	x8, x21, #0x1
  41f59c:	cmp	x8, #0x2
  41f5a0:	b.cc	41f5c0 <_obstack_memory_used@@Base+0x542c>  // b.lo, b.ul, b.last
  41f5a4:	and	x9, x8, #0xfffffffffffffffe
  41f5a8:	add	x24, x24, x9
  41f5ac:	mov	x10, x9
  41f5b0:	subs	x10, x10, #0x2
  41f5b4:	b.ne	41f5b0 <_obstack_memory_used@@Base+0x541c>  // b.any
  41f5b8:	cmp	x8, x9
  41f5bc:	b.eq	41f5d0 <_obstack_memory_used@@Base+0x543c>  // b.none
  41f5c0:	add	x8, x23, x21
  41f5c4:	sub	x8, x8, x24
  41f5c8:	subs	x8, x8, #0x1
  41f5cc:	b.ne	41f5c8 <_obstack_memory_used@@Base+0x5434>  // b.any
  41f5d0:	mov	x24, x25
  41f5d4:	cmp	x22, x24
  41f5d8:	mov	x23, x24
  41f5dc:	b.gt	41f4e8 <_obstack_memory_used@@Base+0x5354>
  41f5e0:	b	41f690 <_obstack_memory_used@@Base+0x54fc>
  41f5e4:	ldr	w9, [x19, #144]
  41f5e8:	mov	x1, sp
  41f5ec:	cmp	w9, #0x1
  41f5f0:	b.lt	41f508 <_obstack_memory_used@@Base+0x5374>  // b.tstop
  41f5f4:	cmp	x2, #0x1
  41f5f8:	b.lt	41f508 <_obstack_memory_used@@Base+0x5374>  // b.tstop
  41f5fc:	ldr	x9, [x19, #40]
  41f600:	ldp	x10, x11, [x19]
  41f604:	mov	x1, sp
  41f608:	add	x9, x23, x9
  41f60c:	ldrb	w9, [x10, x9]
  41f610:	ldrb	w8, [x8, x9]
  41f614:	strb	w8, [x11, x23]
  41f618:	strb	w8, [sp]
  41f61c:	ldr	w8, [x19, #144]
  41f620:	cmp	w8, #0x2
  41f624:	b.lt	41f508 <_obstack_memory_used@@Base+0x5374>  // b.tstop
  41f628:	cmp	x2, #0x2
  41f62c:	b.lt	41f508 <_obstack_memory_used@@Base+0x5374>  // b.tstop
  41f630:	mov	w8, #0x1                   	// #1
  41f634:	ldr	x9, [x19, #40]
  41f638:	ldp	x10, x12, [x19]
  41f63c:	ldr	x11, [x19, #120]
  41f640:	mov	x1, sp
  41f644:	add	x9, x10, x9
  41f648:	add	x9, x9, x23
  41f64c:	ldrb	w9, [x9, x8]
  41f650:	add	x10, x12, x23
  41f654:	ldrb	w9, [x11, x9]
  41f658:	strb	w9, [x10, x8]
  41f65c:	strb	w9, [x1, x8]
  41f660:	ldr	w9, [x19, #144]
  41f664:	add	x8, x8, #0x1
  41f668:	cmp	w9, w8
  41f66c:	b.le	41f508 <_obstack_memory_used@@Base+0x5374>
  41f670:	cmp	x2, x8
  41f674:	b.gt	41f634 <_obstack_memory_used@@Base+0x54a0>
  41f678:	b	41f508 <_obstack_memory_used@@Base+0x5374>
  41f67c:	ldrb	w8, [x9, w8, uxtw]
  41f680:	str	w8, [x29, #28]
  41f684:	b	41f558 <_obstack_memory_used@@Base+0x53c4>
  41f688:	str	x24, [x20]
  41f68c:	mov	x24, x23
  41f690:	stp	x24, x24, [x19, #48]
  41f694:	ldp	x20, x19, [sp, #128]
  41f698:	ldp	x22, x21, [sp, #112]
  41f69c:	ldp	x24, x23, [sp, #96]
  41f6a0:	ldr	x25, [sp, #80]
  41f6a4:	ldp	x29, x30, [sp, #64]
  41f6a8:	add	sp, sp, #0x90
  41f6ac:	ret
  41f6b0:	sub	sp, sp, #0x80
  41f6b4:	stp	x29, x30, [sp, #32]
  41f6b8:	stp	x28, x27, [sp, #48]
  41f6bc:	stp	x26, x25, [sp, #64]
  41f6c0:	stp	x24, x23, [sp, #80]
  41f6c4:	stp	x22, x21, [sp, #96]
  41f6c8:	stp	x20, x19, [sp, #112]
  41f6cc:	ldr	x28, [x1]
  41f6d0:	add	x29, sp, #0x20
  41f6d4:	mov	x19, x5
  41f6d8:	mov	x22, x2
  41f6dc:	ldr	x8, [x28, #168]
  41f6e0:	mov	x24, x0
  41f6e4:	stur	x3, [x29, #-8]
  41f6e8:	str	x4, [sp]
  41f6ec:	stp	x8, x1, [sp, #8]
  41f6f0:	bl	41ff88 <_obstack_memory_used@@Base+0x5df4>
  41f6f4:	mov	x20, x0
  41f6f8:	cbnz	x0, 41f704 <_obstack_memory_used@@Base+0x5570>
  41f6fc:	ldr	w8, [x19]
  41f700:	cbnz	w8, 41f9ec <_obstack_memory_used@@Base+0x5858>
  41f704:	ldrb	w8, [x22, #8]
  41f708:	cmp	w8, #0xa
  41f70c:	b.ne	41f830 <_obstack_memory_used@@Base+0x569c>  // b.any
  41f710:	ldur	x8, [x29, #-8]
  41f714:	orr	x25, x8, #0x800000
  41f718:	ldr	x8, [sp]
  41f71c:	cbz	x8, 41f854 <_obstack_memory_used@@Base+0x56c0>
  41f720:	mov	w21, #0xa                   	// #10
  41f724:	mov	x23, #0xffffffffffffffff    	// #-1
  41f728:	b	41f73c <_obstack_memory_used@@Base+0x55a8>
  41f72c:	ldrb	w8, [x22, #8]
  41f730:	mov	x20, x0
  41f734:	cmp	w8, #0xa
  41f738:	b.ne	41f834 <_obstack_memory_used@@Base+0x56a0>  // b.any
  41f73c:	mov	x0, x22
  41f740:	mov	x1, x24
  41f744:	mov	x2, x25
  41f748:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  41f74c:	ldr	x8, [x24, #72]
  41f750:	add	x8, x8, w0, sxtw
  41f754:	str	x8, [x24, #72]
  41f758:	ldrb	w8, [x22, #8]
  41f75c:	orr	w9, w8, #0x8
  41f760:	cmp	w9, #0xa
  41f764:	b.ne	41f7b8 <_obstack_memory_used@@Base+0x5624>  // b.any
  41f768:	mov	x27, xzr
  41f76c:	ldr	w8, [x28, #128]
  41f770:	cmp	w8, #0xf
  41f774:	b.eq	41f80c <_obstack_memory_used@@Base+0x5678>  // b.none
  41f778:	ldr	x0, [x28, #112]
  41f77c:	add	w9, w8, #0x1
  41f780:	sxtw	x8, w8
  41f784:	add	x0, x0, x8, lsl #6
  41f788:	str	w9, [x28, #128]
  41f78c:	str	xzr, [x0, #8]!
  41f790:	stp	x20, x27, [x0, #8]
  41f794:	stp	xzr, xzr, [x0, #32]
  41f798:	str	w21, [x0, #48]
  41f79c:	str	xzr, [x0, #24]
  41f7a0:	str	x23, [x0, #56]
  41f7a4:	cbz	x20, 41f7ac <_obstack_memory_used@@Base+0x5618>
  41f7a8:	str	x0, [x20]
  41f7ac:	cbz	x27, 41f72c <_obstack_memory_used@@Base+0x5598>
  41f7b0:	str	x0, [x27]
  41f7b4:	b	41f72c <_obstack_memory_used@@Base+0x5598>
  41f7b8:	cmp	w8, #0x9
  41f7bc:	b.eq	41f768 <_obstack_memory_used@@Base+0x55d4>  // b.none
  41f7c0:	ldp	x8, x1, [sp, #8]
  41f7c4:	ldur	x3, [x29, #-8]
  41f7c8:	ldr	x4, [sp]
  41f7cc:	ldr	x26, [x28, #168]
  41f7d0:	mov	x0, x24
  41f7d4:	mov	x2, x22
  41f7d8:	mov	x5, x19
  41f7dc:	str	x8, [x28, #168]
  41f7e0:	bl	41ff88 <_obstack_memory_used@@Base+0x5df4>
  41f7e4:	mov	x27, x0
  41f7e8:	cbnz	x0, 41f7f4 <_obstack_memory_used@@Base+0x5660>
  41f7ec:	ldr	w8, [x19]
  41f7f0:	cbnz	w8, 41f95c <_obstack_memory_used@@Base+0x57c8>
  41f7f4:	ldr	x8, [x28, #168]
  41f7f8:	orr	x8, x8, x26
  41f7fc:	str	x8, [x28, #168]
  41f800:	ldr	w8, [x28, #128]
  41f804:	cmp	w8, #0xf
  41f808:	b.ne	41f778 <_obstack_memory_used@@Base+0x55e4>  // b.any
  41f80c:	mov	w0, #0x3c8                 	// #968
  41f810:	bl	4023a0 <malloc@plt>
  41f814:	cbz	x0, 41f9f4 <_obstack_memory_used@@Base+0x5860>
  41f818:	ldr	x9, [x28, #112]
  41f81c:	mov	w8, wzr
  41f820:	str	x9, [x0]
  41f824:	str	x0, [x28, #112]
  41f828:	str	wzr, [x28, #128]
  41f82c:	b	41f77c <_obstack_memory_used@@Base+0x55e8>
  41f830:	mov	x0, x20
  41f834:	ldp	x20, x19, [sp, #112]
  41f838:	ldp	x22, x21, [sp, #96]
  41f83c:	ldp	x24, x23, [sp, #80]
  41f840:	ldp	x26, x25, [sp, #64]
  41f844:	ldp	x28, x27, [sp, #48]
  41f848:	ldp	x29, x30, [sp, #32]
  41f84c:	add	sp, sp, #0x80
  41f850:	ret
  41f854:	mov	w21, #0xa                   	// #10
  41f858:	mov	x23, #0xffffffffffffffff    	// #-1
  41f85c:	b	41f870 <_obstack_memory_used@@Base+0x56dc>
  41f860:	ldrb	w8, [x22, #8]
  41f864:	mov	x20, x0
  41f868:	cmp	w8, #0xa
  41f86c:	b.ne	41f834 <_obstack_memory_used@@Base+0x56a0>  // b.any
  41f870:	mov	x0, x22
  41f874:	mov	x1, x24
  41f878:	mov	x2, x25
  41f87c:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  41f880:	ldr	x8, [x24, #72]
  41f884:	add	x8, x8, w0, sxtw
  41f888:	str	x8, [x24, #72]
  41f88c:	ldrb	w8, [x22, #8]
  41f890:	orr	w8, w8, #0x8
  41f894:	cmp	w8, #0xa
  41f898:	b.ne	41f8ec <_obstack_memory_used@@Base+0x5758>  // b.any
  41f89c:	mov	x26, xzr
  41f8a0:	ldr	w8, [x28, #128]
  41f8a4:	cmp	w8, #0xf
  41f8a8:	b.eq	41f938 <_obstack_memory_used@@Base+0x57a4>  // b.none
  41f8ac:	ldr	x0, [x28, #112]
  41f8b0:	add	w9, w8, #0x1
  41f8b4:	sxtw	x8, w8
  41f8b8:	add	x0, x0, x8, lsl #6
  41f8bc:	str	w9, [x28, #128]
  41f8c0:	str	xzr, [x0, #8]!
  41f8c4:	stp	x20, x26, [x0, #8]
  41f8c8:	stp	xzr, xzr, [x0, #32]
  41f8cc:	str	w21, [x0, #48]
  41f8d0:	str	xzr, [x0, #24]
  41f8d4:	str	x23, [x0, #56]
  41f8d8:	cbz	x20, 41f8e0 <_obstack_memory_used@@Base+0x574c>
  41f8dc:	str	x0, [x20]
  41f8e0:	cbz	x26, 41f860 <_obstack_memory_used@@Base+0x56cc>
  41f8e4:	str	x0, [x26]
  41f8e8:	b	41f860 <_obstack_memory_used@@Base+0x56cc>
  41f8ec:	ldp	x8, x1, [sp, #8]
  41f8f0:	ldur	x3, [x29, #-8]
  41f8f4:	ldr	x27, [x28, #168]
  41f8f8:	mov	x0, x24
  41f8fc:	mov	x2, x22
  41f900:	mov	x4, xzr
  41f904:	mov	x5, x19
  41f908:	str	x8, [x28, #168]
  41f90c:	bl	41ff88 <_obstack_memory_used@@Base+0x5df4>
  41f910:	mov	x26, x0
  41f914:	cbnz	x0, 41f920 <_obstack_memory_used@@Base+0x578c>
  41f918:	ldr	w8, [x19]
  41f91c:	cbnz	w8, 41f95c <_obstack_memory_used@@Base+0x57c8>
  41f920:	ldr	x8, [x28, #168]
  41f924:	orr	x8, x8, x27
  41f928:	str	x8, [x28, #168]
  41f92c:	ldr	w8, [x28, #128]
  41f930:	cmp	w8, #0xf
  41f934:	b.ne	41f8ac <_obstack_memory_used@@Base+0x5718>  // b.any
  41f938:	mov	w0, #0x3c8                 	// #968
  41f93c:	bl	4023a0 <malloc@plt>
  41f940:	cbz	x0, 41f9f4 <_obstack_memory_used@@Base+0x5860>
  41f944:	ldr	x9, [x28, #112]
  41f948:	mov	w8, wzr
  41f94c:	str	x9, [x0]
  41f950:	str	x0, [x28, #112]
  41f954:	str	wzr, [x28, #128]
  41f958:	b	41f8b0 <_obstack_memory_used@@Base+0x571c>
  41f95c:	cbz	x20, 41f9ec <_obstack_memory_used@@Base+0x5858>
  41f960:	mov	w21, #0xff                  	// #255
  41f964:	movk	w21, #0x4, lsl #16
  41f968:	mov	x22, x20
  41f96c:	ldr	x20, [x20, #8]
  41f970:	cbnz	x20, 41f968 <_obstack_memory_used@@Base+0x57d4>
  41f974:	ldr	x20, [x22, #16]
  41f978:	cbnz	x20, 41f968 <_obstack_memory_used@@Base+0x57d4>
  41f97c:	ldr	w8, [x22, #48]
  41f980:	and	w8, w8, w21
  41f984:	cmp	w8, #0x3
  41f988:	b.eq	41f9bc <_obstack_memory_used@@Base+0x5828>  // b.none
  41f98c:	cmp	w8, #0x6
  41f990:	b.ne	41f9c8 <_obstack_memory_used@@Base+0x5834>  // b.any
  41f994:	ldr	x19, [x22, #40]
  41f998:	ldr	x0, [x19]
  41f99c:	bl	402620 <free@plt>
  41f9a0:	ldr	x0, [x19, #8]
  41f9a4:	bl	402620 <free@plt>
  41f9a8:	ldr	x0, [x19, #16]
  41f9ac:	bl	402620 <free@plt>
  41f9b0:	ldr	x0, [x19, #24]
  41f9b4:	bl	402620 <free@plt>
  41f9b8:	b	41f9c0 <_obstack_memory_used@@Base+0x582c>
  41f9bc:	ldr	x19, [x22, #40]
  41f9c0:	mov	x0, x19
  41f9c4:	bl	402620 <free@plt>
  41f9c8:	ldr	x8, [x22]
  41f9cc:	cbz	x8, 41f9ec <_obstack_memory_used@@Base+0x5858>
  41f9d0:	ldr	x20, [x8, #16]
  41f9d4:	cmp	x20, x22
  41f9d8:	mov	x22, x8
  41f9dc:	b.eq	41f97c <_obstack_memory_used@@Base+0x57e8>  // b.none
  41f9e0:	mov	x22, x8
  41f9e4:	cbz	x20, 41f97c <_obstack_memory_used@@Base+0x57e8>
  41f9e8:	b	41f968 <_obstack_memory_used@@Base+0x57d4>
  41f9ec:	mov	x0, xzr
  41f9f0:	b	41f834 <_obstack_memory_used@@Base+0x56a0>
  41f9f4:	mov	x0, xzr
  41f9f8:	mov	w8, #0xc                   	// #12
  41f9fc:	str	w8, [x19]
  41fa00:	b	41f834 <_obstack_memory_used@@Base+0x56a0>
  41fa04:	sub	sp, sp, #0x50
  41fa08:	stp	x29, x30, [sp, #16]
  41fa0c:	stp	x24, x23, [sp, #32]
  41fa10:	stp	x22, x21, [sp, #48]
  41fa14:	stp	x20, x19, [sp, #64]
  41fa18:	ldr	x9, [x1, #104]
  41fa1c:	ldr	x8, [x1, #72]
  41fa20:	mov	x19, x0
  41fa24:	add	x29, sp, #0x10
  41fa28:	cmp	x9, x8
  41fa2c:	b.le	41fb10 <_obstack_memory_used@@Base+0x597c>
  41fa30:	ldr	x9, [x1, #8]
  41fa34:	mov	x23, x19
  41fa38:	mov	x20, x2
  41fa3c:	mov	x21, x1
  41fa40:	ldrb	w24, [x9, x8]
  41fa44:	strb	w24, [x23], #8
  41fa48:	ldr	w8, [x23]
  41fa4c:	and	w9, w8, #0xff9fffff
  41fa50:	str	w9, [x23]
  41fa54:	ldr	w11, [x1, #144]
  41fa58:	cmp	w11, #0x2
  41fa5c:	b.lt	41fa80 <_obstack_memory_used@@Base+0x58ec>  // b.tstop
  41fa60:	ldr	x9, [x21, #72]
  41fa64:	ldr	x10, [x21, #48]
  41fa68:	cmp	x9, x10
  41fa6c:	b.eq	41fa80 <_obstack_memory_used@@Base+0x58ec>  // b.none
  41fa70:	ldr	x10, [x21, #16]
  41fa74:	ldr	w9, [x10, x9, lsl #2]
  41fa78:	cmn	w9, #0x1
  41fa7c:	b.eq	41fc50 <_obstack_memory_used@@Base+0x5abc>  // b.none
  41fa80:	mov	w9, #0xff00                	// #65280
  41fa84:	cmp	w24, #0x5c
  41fa88:	movk	w9, #0xff9f, lsl #16
  41fa8c:	b.ne	41fb20 <_obstack_memory_used@@Base+0x598c>  // b.any
  41fa90:	ldr	x12, [x21, #72]
  41fa94:	ldr	x13, [x21, #88]
  41fa98:	add	x10, x12, #0x1
  41fa9c:	cmp	x10, x13
  41faa0:	b.ge	41fb70 <_obstack_memory_used@@Base+0x59dc>  // b.tcont
  41faa4:	ldrb	w13, [x21, #139]
  41faa8:	cbnz	w13, 41ff24 <_obstack_memory_used@@Base+0x5d90>
  41faac:	ldr	x11, [x21, #8]
  41fab0:	ldrb	w22, [x11, x10]
  41fab4:	and	w8, w8, w9
  41fab8:	orr	w24, w8, #0x1
  41fabc:	strb	w22, [x19]
  41fac0:	str	w24, [x19, #8]
  41fac4:	ldr	w8, [x21, #144]
  41fac8:	cmp	w8, #0x2
  41facc:	b.lt	41fbe0 <_obstack_memory_used@@Base+0x5a4c>  // b.tstop
  41fad0:	ldr	x8, [x21, #72]
  41fad4:	ldr	x9, [x21, #16]
  41fad8:	add	x8, x9, x8, lsl #2
  41fadc:	ldr	w21, [x8, #4]
  41fae0:	mov	w0, w21
  41fae4:	bl	402710 <iswalnum@plt>
  41fae8:	ldr	w9, [x23]
  41faec:	cmp	w0, #0x0
  41faf0:	mov	w8, #0x5f                  	// #95
  41faf4:	mov	w10, #0x400000              	// #4194304
  41faf8:	ccmp	w21, w8, #0x4, eq  // eq = none
  41fafc:	csel	w8, w10, wzr, eq  // eq = none
  41fb00:	and	w9, w9, #0xffbfffff
  41fb04:	orr	w8, w8, w9
  41fb08:	and	x9, x22, #0xff
  41fb0c:	b	41fc08 <_obstack_memory_used@@Base+0x5a74>
  41fb10:	mov	w8, #0x2                   	// #2
  41fb14:	mov	w0, wzr
  41fb18:	strb	w8, [x19, #8]
  41fb1c:	b	41fd80 <_obstack_memory_used@@Base+0x5bec>
  41fb20:	and	w8, w8, w9
  41fb24:	orr	w22, w8, #0x1
  41fb28:	str	w22, [x23]
  41fb2c:	ldr	w8, [x21, #144]
  41fb30:	cmp	w8, #0x2
  41fb34:	b.lt	41fb80 <_obstack_memory_used@@Base+0x59ec>  // b.tstop
  41fb38:	ldr	x8, [x21, #72]
  41fb3c:	ldr	x9, [x21, #16]
  41fb40:	ldr	w22, [x9, x8, lsl #2]
  41fb44:	mov	w0, w22
  41fb48:	bl	402710 <iswalnum@plt>
  41fb4c:	ldr	w9, [x23]
  41fb50:	cmp	w0, #0x0
  41fb54:	mov	w8, #0x5f                  	// #95
  41fb58:	ccmp	w22, w8, #0x4, eq  // eq = none
  41fb5c:	mov	w8, #0x400000              	// #4194304
  41fb60:	csel	w8, w8, wzr, eq  // eq = none
  41fb64:	and	w9, w9, #0xffbfffff
  41fb68:	orr	w8, w8, w9
  41fb6c:	b	41fbac <_obstack_memory_used@@Base+0x5a18>
  41fb70:	and	w8, w8, w9
  41fb74:	mov	w9, #0x24                  	// #36
  41fb78:	orr	w8, w8, w9
  41fb7c:	b	41fd78 <_obstack_memory_used@@Base+0x5be4>
  41fb80:	bl	402610 <__ctype_b_loc@plt>
  41fb84:	ldr	x8, [x0]
  41fb88:	cmp	w24, #0x5f
  41fb8c:	cset	w9, eq  // eq = none
  41fb90:	ldrh	w8, [x8, x24, lsl #1]
  41fb94:	and	w8, w8, #0x8
  41fb98:	orr	w8, w9, w8, lsr #3
  41fb9c:	cmp	w8, #0x0
  41fba0:	mov	w8, #0x400000              	// #4194304
  41fba4:	csel	w8, w8, wzr, ne  // ne = any
  41fba8:	orr	w8, w8, w22
  41fbac:	sub	w9, w24, #0xa
  41fbb0:	cmp	w9, #0x73
  41fbb4:	mov	w0, #0x1                   	// #1
  41fbb8:	str	w8, [x23]
  41fbbc:	b.hi	41fd80 <_obstack_memory_used@@Base+0x5bec>  // b.pmore
  41fbc0:	adrp	x10, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41fbc4:	add	x10, x10, #0xaf
  41fbc8:	adr	x11, 41fbd8 <_obstack_memory_used@@Base+0x5a44>
  41fbcc:	ldrb	w12, [x10, x9]
  41fbd0:	add	x11, x11, x12, lsl #2
  41fbd4:	br	x11
  41fbd8:	tbnz	w20, #11, 41fd70 <_obstack_memory_used@@Base+0x5bdc>
  41fbdc:	b	41fd7c <_obstack_memory_used@@Base+0x5be8>
  41fbe0:	bl	402610 <__ctype_b_loc@plt>
  41fbe4:	ldr	x8, [x0]
  41fbe8:	and	x9, x22, #0xff
  41fbec:	and	w10, w22, #0xff
  41fbf0:	cmp	w10, #0x5f
  41fbf4:	ldrh	w8, [x8, x9, lsl #1]
  41fbf8:	cset	w10, eq  // eq = none
  41fbfc:	ubfx	w8, w8, #3, #1
  41fc00:	orr	w8, w8, w10
  41fc04:	orr	w8, w24, w8, lsl #22
  41fc08:	and	w10, w22, #0xff
  41fc0c:	sub	w10, w10, #0x27
  41fc10:	cmp	w10, #0x56
  41fc14:	mov	w0, #0x2                   	// #2
  41fc18:	str	w8, [x23]
  41fc1c:	b.hi	41fd80 <_obstack_memory_used@@Base+0x5bec>  // b.pmore
  41fc20:	adrp	x11, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  41fc24:	add	x11, x11, #0x123
  41fc28:	adr	x12, 41fc38 <_obstack_memory_used@@Base+0x5aa4>
  41fc2c:	ldrb	w13, [x11, x10]
  41fc30:	add	x12, x12, x13, lsl #2
  41fc34:	br	x12
  41fc38:	tbnz	w20, #14, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fc3c:	and	w8, w8, #0xffffff00
  41fc40:	sub	x9, x9, #0x31
  41fc44:	orr	w8, w8, #0x4
  41fc48:	str	x9, [x19]
  41fc4c:	b	41fea0 <_obstack_memory_used@@Base+0x5d0c>
  41fc50:	mov	w9, #0xff00                	// #65280
  41fc54:	movk	w9, #0xff9f, lsl #16
  41fc58:	mov	w10, #0x1                   	// #1
  41fc5c:	movk	w10, #0x20, lsl #16
  41fc60:	and	w8, w8, w9
  41fc64:	orr	w8, w8, w10
  41fc68:	b	41fd78 <_obstack_memory_used@@Base+0x5be4>
  41fc6c:	tbnz	w20, #3, 41fcb8 <_obstack_memory_used@@Base+0x5b24>
  41fc70:	ldr	x9, [x21, #72]
  41fc74:	ldr	x10, [x21, #88]
  41fc78:	add	x9, x9, #0x1
  41fc7c:	cmp	x9, x10
  41fc80:	b.eq	41fcb8 <_obstack_memory_used@@Base+0x5b24>  // b.none
  41fc84:	mov	x0, sp
  41fc88:	mov	x1, x21
  41fc8c:	mov	x2, x20
  41fc90:	str	x9, [x21, #72]
  41fc94:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  41fc98:	ldr	x8, [x21, #72]
  41fc9c:	sub	x8, x8, #0x1
  41fca0:	str	x8, [x21, #72]
  41fca4:	ldrb	w8, [sp, #8]
  41fca8:	sub	w8, w8, #0x9
  41fcac:	cmp	w8, #0x1
  41fcb0:	b.hi	41fd7c <_obstack_memory_used@@Base+0x5be8>  // b.pmore
  41fcb4:	ldr	w8, [x23]
  41fcb8:	and	w8, w8, #0xffffff00
  41fcbc:	mov	w9, #0x20                  	// #32
  41fcc0:	b	41fd38 <_obstack_memory_used@@Base+0x5ba4>
  41fcc4:	tbz	w20, #13, 41fd7c <_obstack_memory_used@@Base+0x5be8>
  41fcc8:	and	w8, w8, #0xffffff00
  41fccc:	orr	w8, w8, #0x8
  41fcd0:	b	41fd78 <_obstack_memory_used@@Base+0x5be4>
  41fcd4:	tbz	w20, #13, 41fd7c <_obstack_memory_used@@Base+0x5be8>
  41fcd8:	mov	w9, #0x9                   	// #9
  41fcdc:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fce0:	mov	w9, #0xb                   	// #11
  41fce4:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fce8:	mov	w9, #0x402                 	// #1026
  41fcec:	tst	x20, x9
  41fcf0:	b.ne	41fd7c <_obstack_memory_used@@Base+0x5be8>  // b.any
  41fcf4:	mov	w9, #0x12                  	// #18
  41fcf8:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fcfc:	mov	w9, #0x5                   	// #5
  41fd00:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fd04:	mov	w9, #0x402                 	// #1026
  41fd08:	tst	x20, x9
  41fd0c:	b.ne	41fd7c <_obstack_memory_used@@Base+0x5be8>  // b.any
  41fd10:	mov	w9, #0x13                  	// #19
  41fd14:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fd18:	mov	w9, #0x14                  	// #20
  41fd1c:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fd20:	mov	w9, #0x8                   	// #8
  41fd24:	movk	w9, #0x80, lsl #16
  41fd28:	tst	x20, x9
  41fd2c:	b.eq	41fdb4 <_obstack_memory_used@@Base+0x5c20>  // b.none
  41fd30:	and	w8, w8, #0xffffff00
  41fd34:	mov	w9, #0x10                  	// #16
  41fd38:	orr	w8, w8, #0xc
  41fd3c:	str	w9, [x19]
  41fd40:	str	w8, [x19, #8]
  41fd44:	b	41fd7c <_obstack_memory_used@@Base+0x5be8>
  41fd48:	mvn	w9, w20
  41fd4c:	mov	w10, #0x1200                	// #4608
  41fd50:	tst	x9, x10
  41fd54:	b.ne	41fd7c <_obstack_memory_used@@Base+0x5be8>  // b.any
  41fd58:	mov	w9, #0x17                  	// #23
  41fd5c:	b	41fd74 <_obstack_memory_used@@Base+0x5be0>
  41fd60:	mov	w9, #0x8400                	// #33792
  41fd64:	and	x9, x20, x9
  41fd68:	cmp	x9, #0x8, lsl #12
  41fd6c:	b.ne	41fd7c <_obstack_memory_used@@Base+0x5be8>  // b.any
  41fd70:	mov	w9, #0xa                   	// #10
  41fd74:	bfxil	w8, w9, #0, #8
  41fd78:	str	w8, [x23]
  41fd7c:	mov	w0, #0x1                   	// #1
  41fd80:	ldp	x20, x19, [sp, #64]
  41fd84:	ldp	x22, x21, [sp, #48]
  41fd88:	ldp	x24, x23, [sp, #32]
  41fd8c:	ldp	x29, x30, [sp, #16]
  41fd90:	add	sp, sp, #0x50
  41fd94:	ret
  41fd98:	mvn	w9, w20
  41fd9c:	mov	w10, #0x1200                	// #4608
  41fda0:	tst	x9, x10
  41fda4:	b.ne	41fd7c <_obstack_memory_used@@Base+0x5be8>  // b.any
  41fda8:	and	w8, w8, #0xffffff00
  41fdac:	orr	w8, w8, #0x18
  41fdb0:	b	41fd78 <_obstack_memory_used@@Base+0x5be4>
  41fdb4:	ldr	x9, [x21, #72]
  41fdb8:	cbz	x9, 41fd30 <_obstack_memory_used@@Base+0x5b9c>
  41fdbc:	tbz	w20, #11, 41fd7c <_obstack_memory_used@@Base+0x5be8>
  41fdc0:	ldr	x10, [x21, #8]
  41fdc4:	add	x9, x9, x10
  41fdc8:	ldurb	w9, [x9, #-1]
  41fdcc:	cmp	w9, #0xa
  41fdd0:	b.eq	41fd30 <_obstack_memory_used@@Base+0x5b9c>  // b.none
  41fdd4:	b	41fd7c <_obstack_memory_used@@Base+0x5be8>
  41fdd8:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fddc:	and	w8, w8, #0xffffff00
  41fde0:	mov	w9, #0x80                  	// #128
  41fde4:	b	41fe98 <_obstack_memory_used@@Base+0x5d04>
  41fde8:	tbnz	w20, #13, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fdec:	and	w8, w8, #0xffffff00
  41fdf0:	orr	w8, w8, #0x8
  41fdf4:	b	41fef4 <_obstack_memory_used@@Base+0x5d60>
  41fdf8:	tbnz	w20, #13, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fdfc:	mov	w9, #0x9                   	// #9
  41fe00:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41fe04:	mov	w9, #0x402                 	// #1026
  41fe08:	and	x9, x20, x9
  41fe0c:	cmp	x9, #0x2
  41fe10:	b.ne	41ff1c <_obstack_memory_used@@Base+0x5d88>  // b.any
  41fe14:	mov	w9, #0x12                  	// #18
  41fe18:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41fe1c:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe20:	and	w8, w8, #0xffffff00
  41fe24:	mov	w9, #0x6                   	// #6
  41fe28:	b	41fe98 <_obstack_memory_used@@Base+0x5d04>
  41fe2c:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe30:	and	w8, w8, #0xffffff00
  41fe34:	mov	w9, #0x9                   	// #9
  41fe38:	b	41fe98 <_obstack_memory_used@@Base+0x5d04>
  41fe3c:	mov	w9, #0x402                 	// #1026
  41fe40:	and	x9, x20, x9
  41fe44:	cmp	x9, #0x2
  41fe48:	b.ne	41ff1c <_obstack_memory_used@@Base+0x5d88>  // b.any
  41fe4c:	mov	w9, #0x13                  	// #19
  41fe50:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41fe54:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe58:	and	w8, w8, #0xffffff00
  41fe5c:	mov	w9, #0x200                 	// #512
  41fe60:	b	41fe98 <_obstack_memory_used@@Base+0x5d04>
  41fe64:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe68:	mov	w9, #0x23                  	// #35
  41fe6c:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41fe70:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe74:	mov	w9, #0x21                  	// #33
  41fe78:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41fe7c:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe80:	and	w8, w8, #0xffffff00
  41fe84:	mov	w9, #0x40                  	// #64
  41fe88:	b	41fe98 <_obstack_memory_used@@Base+0x5d04>
  41fe8c:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41fe90:	and	w8, w8, #0xffffff00
  41fe94:	mov	w9, #0x100                 	// #256
  41fe98:	orr	w8, w8, #0xc
  41fe9c:	str	w9, [x19]
  41fea0:	str	w8, [x19, #8]
  41fea4:	mov	w0, #0x2                   	// #2
  41fea8:	b	41fd80 <_obstack_memory_used@@Base+0x5bec>
  41feac:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41feb0:	mov	w9, #0x22                  	// #34
  41feb4:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41feb8:	tbnz	w20, #19, 41ff1c <_obstack_memory_used@@Base+0x5d88>
  41febc:	and	w8, w8, #0xffffff00
  41fec0:	orr	w8, w8, #0x20
  41fec4:	b	41fef4 <_obstack_memory_used@@Base+0x5d60>
  41fec8:	mov	w9, #0x1200                	// #4608
  41fecc:	and	x9, x20, x9
  41fed0:	cmp	x9, #0x200
  41fed4:	b.ne	41ff1c <_obstack_memory_used@@Base+0x5d88>  // b.any
  41fed8:	mov	w9, #0x17                  	// #23
  41fedc:	b	41fef0 <_obstack_memory_used@@Base+0x5d5c>
  41fee0:	mov	w9, #0x8400                	// #33792
  41fee4:	tst	x20, x9
  41fee8:	b.ne	41ff1c <_obstack_memory_used@@Base+0x5d88>  // b.any
  41feec:	mov	w9, #0xa                   	// #10
  41fef0:	bfxil	w8, w9, #0, #8
  41fef4:	str	w8, [x23]
  41fef8:	mov	w0, #0x2                   	// #2
  41fefc:	b	41fd80 <_obstack_memory_used@@Base+0x5bec>
  41ff00:	mov	w9, #0x1200                	// #4608
  41ff04:	and	x9, x20, x9
  41ff08:	cmp	x9, #0x200
  41ff0c:	b.ne	41ff1c <_obstack_memory_used@@Base+0x5d88>  // b.any
  41ff10:	and	w8, w8, #0xffffff00
  41ff14:	orr	w8, w8, #0x18
  41ff18:	b	41fef4 <_obstack_memory_used@@Base+0x5d60>
  41ff1c:	mov	w0, #0x2                   	// #2
  41ff20:	b	41fd80 <_obstack_memory_used@@Base+0x5bec>
  41ff24:	cmp	w11, #0x2
  41ff28:	b.lt	41ff58 <_obstack_memory_used@@Base+0x5dc4>  // b.tstop
  41ff2c:	ldr	x11, [x21, #16]
  41ff30:	ldr	w13, [x11, x10, lsl #2]
  41ff34:	cmn	w13, #0x1
  41ff38:	b.eq	41faac <_obstack_memory_used@@Base+0x5918>  // b.none
  41ff3c:	ldr	x13, [x21, #48]
  41ff40:	add	x12, x12, #0x2
  41ff44:	cmp	x13, x12
  41ff48:	b.eq	41ff58 <_obstack_memory_used@@Base+0x5dc4>  // b.none
  41ff4c:	ldr	w11, [x11, x12, lsl #2]
  41ff50:	cmn	w11, #0x1
  41ff54:	b.eq	41faac <_obstack_memory_used@@Base+0x5918>  // b.none
  41ff58:	ldrb	w11, [x21, #140]
  41ff5c:	mov	x12, x10
  41ff60:	cbz	w11, 41ff6c <_obstack_memory_used@@Base+0x5dd8>
  41ff64:	ldr	x12, [x21, #24]
  41ff68:	ldr	x12, [x12, x10, lsl #3]
  41ff6c:	ldr	x13, [x21, #40]
  41ff70:	ldr	x14, [x21]
  41ff74:	add	x12, x13, x12
  41ff78:	ldrsb	w22, [x14, x12]
  41ff7c:	cbz	w11, 41fab4 <_obstack_memory_used@@Base+0x5920>
  41ff80:	tbnz	w22, #31, 41faac <_obstack_memory_used@@Base+0x5918>
  41ff84:	b	41fab4 <_obstack_memory_used@@Base+0x5920>
  41ff88:	stp	x29, x30, [sp, #-96]!
  41ff8c:	stp	x28, x27, [sp, #16]
  41ff90:	stp	x26, x25, [sp, #32]
  41ff94:	stp	x24, x23, [sp, #48]
  41ff98:	stp	x22, x21, [sp, #64]
  41ff9c:	stp	x20, x19, [sp, #80]
  41ffa0:	ldr	x27, [x1]
  41ffa4:	mov	x29, sp
  41ffa8:	mov	x19, x5
  41ffac:	mov	x26, x4
  41ffb0:	mov	x21, x3
  41ffb4:	mov	x22, x2
  41ffb8:	mov	x23, x1
  41ffbc:	mov	x24, x0
  41ffc0:	bl	42038c <_obstack_memory_used@@Base+0x61f8>
  41ffc4:	mov	x20, x0
  41ffc8:	cbnz	x0, 41ffd4 <_obstack_memory_used@@Base+0x5e40>
  41ffcc:	ldr	w8, [x19]
  41ffd0:	cbnz	w8, 420248 <_obstack_memory_used@@Base+0x60b4>
  41ffd4:	cbz	x26, 4200cc <_obstack_memory_used@@Base+0x5f38>
  41ffd8:	mov	x28, #0xffffffffffffffff    	// #-1
  41ffdc:	ldrb	w8, [x22, #8]
  41ffe0:	orr	w9, w8, #0x8
  41ffe4:	cmp	w9, #0xa
  41ffe8:	b.ne	420008 <_obstack_memory_used@@Base+0x5e74>  // b.any
  41ffec:	b	42024c <_obstack_memory_used@@Base+0x60b8>
  41fff0:	cmp	x20, #0x0
  41fff4:	csel	x20, x25, x20, eq  // eq = none
  41fff8:	ldrb	w8, [x22, #8]
  41fffc:	orr	w9, w8, #0x8
  420000:	cmp	w9, #0xa
  420004:	b.eq	42024c <_obstack_memory_used@@Base+0x60b8>  // b.none
  420008:	cmp	w8, #0x9
  42000c:	b.eq	42024c <_obstack_memory_used@@Base+0x60b8>  // b.none
  420010:	mov	x0, x24
  420014:	mov	x1, x23
  420018:	mov	x2, x22
  42001c:	mov	x3, x21
  420020:	mov	x4, x26
  420024:	mov	x5, x19
  420028:	bl	42038c <_obstack_memory_used@@Base+0x61f8>
  42002c:	cmp	x20, #0x0
  420030:	mov	x25, x0
  420034:	cset	w8, ne  // ne = any
  420038:	cbnz	x0, 420044 <_obstack_memory_used@@Base+0x5eb0>
  42003c:	ldr	w9, [x19]
  420040:	cbnz	w9, 4201b8 <_obstack_memory_used@@Base+0x6024>
  420044:	cbz	x20, 41fff0 <_obstack_memory_used@@Base+0x5e5c>
  420048:	cbz	x25, 41fff0 <_obstack_memory_used@@Base+0x5e5c>
  42004c:	ldr	w8, [x27, #128]
  420050:	cmp	w8, #0xf
  420054:	b.eq	4200a8 <_obstack_memory_used@@Base+0x5f14>  // b.none
  420058:	ldr	x0, [x27, #112]
  42005c:	add	w9, w8, #0x1
  420060:	sxtw	x8, w8
  420064:	add	x8, x0, x8, lsl #6
  420068:	str	w9, [x27, #128]
  42006c:	str	xzr, [x8, #8]!
  420070:	mov	w9, #0x10                  	// #16
  420074:	stp	x20, x25, [x8, #8]
  420078:	stp	xzr, xzr, [x8, #32]
  42007c:	str	w9, [x8, #48]
  420080:	str	xzr, [x8, #24]
  420084:	str	x28, [x8, #56]
  420088:	str	x8, [x20]
  42008c:	str	x8, [x25]
  420090:	mov	x20, x8
  420094:	ldrb	w8, [x22, #8]
  420098:	orr	w9, w8, #0x8
  42009c:	cmp	w9, #0xa
  4200a0:	b.ne	420008 <_obstack_memory_used@@Base+0x5e74>  // b.any
  4200a4:	b	42024c <_obstack_memory_used@@Base+0x60b8>
  4200a8:	mov	w0, #0x3c8                 	// #968
  4200ac:	bl	4023a0 <malloc@plt>
  4200b0:	cbz	x0, 42026c <_obstack_memory_used@@Base+0x60d8>
  4200b4:	ldr	x9, [x27, #112]
  4200b8:	mov	w8, wzr
  4200bc:	str	x9, [x0]
  4200c0:	str	x0, [x27, #112]
  4200c4:	str	wzr, [x27, #128]
  4200c8:	b	42005c <_obstack_memory_used@@Base+0x5ec8>
  4200cc:	mov	w26, #0x10                  	// #16
  4200d0:	mov	x28, #0xffffffffffffffff    	// #-1
  4200d4:	ldrb	w8, [x22, #8]
  4200d8:	orr	w8, w8, #0x8
  4200dc:	cmp	w8, #0xa
  4200e0:	b.ne	420100 <_obstack_memory_used@@Base+0x5f6c>  // b.any
  4200e4:	b	42024c <_obstack_memory_used@@Base+0x60b8>
  4200e8:	cmp	x20, #0x0
  4200ec:	csel	x20, x25, x20, eq  // eq = none
  4200f0:	ldrb	w8, [x22, #8]
  4200f4:	orr	w8, w8, #0x8
  4200f8:	cmp	w8, #0xa
  4200fc:	b.eq	42024c <_obstack_memory_used@@Base+0x60b8>  // b.none
  420100:	mov	x0, x24
  420104:	mov	x1, x23
  420108:	mov	x2, x22
  42010c:	mov	x3, x21
  420110:	mov	x4, xzr
  420114:	mov	x5, x19
  420118:	bl	42038c <_obstack_memory_used@@Base+0x61f8>
  42011c:	cmp	x20, #0x0
  420120:	mov	x25, x0
  420124:	cset	w8, ne  // ne = any
  420128:	cbnz	x0, 420134 <_obstack_memory_used@@Base+0x5fa0>
  42012c:	ldr	w9, [x19]
  420130:	cbnz	w9, 4201b8 <_obstack_memory_used@@Base+0x6024>
  420134:	cbz	x20, 4200e8 <_obstack_memory_used@@Base+0x5f54>
  420138:	cbz	x25, 4200e8 <_obstack_memory_used@@Base+0x5f54>
  42013c:	ldr	w8, [x27, #128]
  420140:	cmp	w8, #0xf
  420144:	b.eq	420194 <_obstack_memory_used@@Base+0x6000>  // b.none
  420148:	ldr	x0, [x27, #112]
  42014c:	add	w9, w8, #0x1
  420150:	sxtw	x8, w8
  420154:	add	x8, x0, x8, lsl #6
  420158:	str	w9, [x27, #128]
  42015c:	str	xzr, [x8, #8]!
  420160:	stp	x20, x25, [x8, #8]
  420164:	stp	xzr, xzr, [x8, #32]
  420168:	str	w26, [x8, #48]
  42016c:	str	xzr, [x8, #24]
  420170:	str	x28, [x8, #56]
  420174:	str	x8, [x20]
  420178:	str	x8, [x25]
  42017c:	mov	x20, x8
  420180:	ldrb	w8, [x22, #8]
  420184:	orr	w8, w8, #0x8
  420188:	cmp	w8, #0xa
  42018c:	b.ne	420100 <_obstack_memory_used@@Base+0x5f6c>  // b.any
  420190:	b	42024c <_obstack_memory_used@@Base+0x60b8>
  420194:	mov	w0, #0x3c8                 	// #968
  420198:	bl	4023a0 <malloc@plt>
  42019c:	cbz	x0, 42026c <_obstack_memory_used@@Base+0x60d8>
  4201a0:	ldr	x9, [x27, #112]
  4201a4:	mov	w8, wzr
  4201a8:	str	x9, [x0]
  4201ac:	str	x0, [x27, #112]
  4201b0:	str	wzr, [x27, #128]
  4201b4:	b	42014c <_obstack_memory_used@@Base+0x5fb8>
  4201b8:	cbz	w8, 420248 <_obstack_memory_used@@Base+0x60b4>
  4201bc:	mov	w21, #0xff                  	// #255
  4201c0:	movk	w21, #0x4, lsl #16
  4201c4:	mov	x22, x20
  4201c8:	ldr	x20, [x20, #8]
  4201cc:	cbnz	x20, 4201c4 <_obstack_memory_used@@Base+0x6030>
  4201d0:	ldr	x20, [x22, #16]
  4201d4:	cbnz	x20, 4201c4 <_obstack_memory_used@@Base+0x6030>
  4201d8:	ldr	w8, [x22, #48]
  4201dc:	and	w8, w8, w21
  4201e0:	cmp	w8, #0x3
  4201e4:	b.eq	420218 <_obstack_memory_used@@Base+0x6084>  // b.none
  4201e8:	cmp	w8, #0x6
  4201ec:	b.ne	420224 <_obstack_memory_used@@Base+0x6090>  // b.any
  4201f0:	ldr	x19, [x22, #40]
  4201f4:	ldr	x0, [x19]
  4201f8:	bl	402620 <free@plt>
  4201fc:	ldr	x0, [x19, #8]
  420200:	bl	402620 <free@plt>
  420204:	ldr	x0, [x19, #16]
  420208:	bl	402620 <free@plt>
  42020c:	ldr	x0, [x19, #24]
  420210:	bl	402620 <free@plt>
  420214:	b	42021c <_obstack_memory_used@@Base+0x6088>
  420218:	ldr	x19, [x22, #40]
  42021c:	mov	x0, x19
  420220:	bl	402620 <free@plt>
  420224:	ldr	x8, [x22]
  420228:	cbz	x8, 420248 <_obstack_memory_used@@Base+0x60b4>
  42022c:	ldr	x20, [x8, #16]
  420230:	cmp	x20, x22
  420234:	mov	x22, x8
  420238:	b.eq	4201d8 <_obstack_memory_used@@Base+0x6044>  // b.none
  42023c:	mov	x22, x8
  420240:	cbz	x20, 4201d8 <_obstack_memory_used@@Base+0x6044>
  420244:	b	4201c4 <_obstack_memory_used@@Base+0x6030>
  420248:	mov	x20, xzr
  42024c:	mov	x0, x20
  420250:	ldp	x20, x19, [sp, #80]
  420254:	ldp	x22, x21, [sp, #64]
  420258:	ldp	x24, x23, [sp, #48]
  42025c:	ldp	x26, x25, [sp, #32]
  420260:	ldp	x28, x27, [sp, #16]
  420264:	ldp	x29, x30, [sp], #96
  420268:	ret
  42026c:	mov	w22, #0xff                  	// #255
  420270:	movk	w22, #0x4, lsl #16
  420274:	mov	x23, x25
  420278:	ldr	x25, [x25, #8]
  42027c:	cbnz	x25, 420274 <_obstack_memory_used@@Base+0x60e0>
  420280:	ldr	x25, [x23, #16]
  420284:	cbnz	x25, 420274 <_obstack_memory_used@@Base+0x60e0>
  420288:	ldr	w8, [x23, #48]
  42028c:	and	w8, w8, w22
  420290:	cmp	w8, #0x3
  420294:	b.eq	4202c8 <_obstack_memory_used@@Base+0x6134>  // b.none
  420298:	cmp	w8, #0x6
  42029c:	b.ne	4202d4 <_obstack_memory_used@@Base+0x6140>  // b.any
  4202a0:	ldr	x21, [x23, #40]
  4202a4:	ldr	x0, [x21]
  4202a8:	bl	402620 <free@plt>
  4202ac:	ldr	x0, [x21, #8]
  4202b0:	bl	402620 <free@plt>
  4202b4:	ldr	x0, [x21, #16]
  4202b8:	bl	402620 <free@plt>
  4202bc:	ldr	x0, [x21, #24]
  4202c0:	bl	402620 <free@plt>
  4202c4:	b	4202cc <_obstack_memory_used@@Base+0x6138>
  4202c8:	ldr	x21, [x23, #40]
  4202cc:	mov	x0, x21
  4202d0:	bl	402620 <free@plt>
  4202d4:	ldr	x8, [x23]
  4202d8:	cbz	x8, 4202f8 <_obstack_memory_used@@Base+0x6164>
  4202dc:	ldr	x25, [x8, #16]
  4202e0:	cmp	x25, x23
  4202e4:	mov	x23, x8
  4202e8:	b.eq	420288 <_obstack_memory_used@@Base+0x60f4>  // b.none
  4202ec:	mov	x23, x8
  4202f0:	cbz	x25, 420288 <_obstack_memory_used@@Base+0x60f4>
  4202f4:	b	420274 <_obstack_memory_used@@Base+0x60e0>
  4202f8:	mov	x21, x20
  4202fc:	ldr	x20, [x20, #8]
  420300:	cbnz	x20, 4202f8 <_obstack_memory_used@@Base+0x6164>
  420304:	ldr	x20, [x21, #16]
  420308:	cbnz	x20, 4202f8 <_obstack_memory_used@@Base+0x6164>
  42030c:	ldr	w8, [x21, #48]
  420310:	and	w8, w8, w22
  420314:	cmp	w8, #0x3
  420318:	b.eq	42034c <_obstack_memory_used@@Base+0x61b8>  // b.none
  42031c:	cmp	w8, #0x6
  420320:	b.ne	420358 <_obstack_memory_used@@Base+0x61c4>  // b.any
  420324:	ldr	x20, [x21, #40]
  420328:	ldr	x0, [x20]
  42032c:	bl	402620 <free@plt>
  420330:	ldr	x0, [x20, #8]
  420334:	bl	402620 <free@plt>
  420338:	ldr	x0, [x20, #16]
  42033c:	bl	402620 <free@plt>
  420340:	ldr	x0, [x20, #24]
  420344:	bl	402620 <free@plt>
  420348:	b	420350 <_obstack_memory_used@@Base+0x61bc>
  42034c:	ldr	x20, [x21, #40]
  420350:	mov	x0, x20
  420354:	bl	402620 <free@plt>
  420358:	ldr	x8, [x21]
  42035c:	cbz	x8, 42037c <_obstack_memory_used@@Base+0x61e8>
  420360:	ldr	x20, [x8, #16]
  420364:	cmp	x20, x21
  420368:	mov	x21, x8
  42036c:	b.eq	42030c <_obstack_memory_used@@Base+0x6178>  // b.none
  420370:	mov	x21, x8
  420374:	cbz	x20, 42030c <_obstack_memory_used@@Base+0x6178>
  420378:	b	4202f8 <_obstack_memory_used@@Base+0x6164>
  42037c:	mov	x20, xzr
  420380:	mov	w8, #0xc                   	// #12
  420384:	str	w8, [x19]
  420388:	b	42024c <_obstack_memory_used@@Base+0x60b8>
  42038c:	sub	sp, sp, #0x120
  420390:	stp	x29, x30, [sp, #192]
  420394:	stp	x28, x27, [sp, #208]
  420398:	stp	x26, x25, [sp, #224]
  42039c:	stp	x24, x23, [sp, #240]
  4203a0:	stp	x22, x21, [sp, #256]
  4203a4:	stp	x20, x19, [sp, #272]
  4203a8:	stp	x0, x3, [sp, #32]
  4203ac:	ldr	w8, [x2, #8]
  4203b0:	ldr	x23, [x1]
  4203b4:	adrp	x11, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  4203b8:	add	x11, x11, #0x17a
  4203bc:	and	w9, w8, #0xff
  4203c0:	sub	w10, w9, #0x1
  4203c4:	adr	x12, 4203f0 <_obstack_memory_used@@Base+0x625c>
  4203c8:	ldrh	w13, [x11, x10, lsl #1]
  4203cc:	add	x12, x12, x13, lsl #2
  4203d0:	add	x29, sp, #0xc0
  4203d4:	mov	x28, x5
  4203d8:	mov	x25, x4
  4203dc:	mov	x14, x2
  4203e0:	mov	x26, x1
  4203e4:	mov	x24, xzr
  4203e8:	str	x2, [sp, #56]
  4203ec:	br	x12
  4203f0:	ldr	x10, [sp, #40]
  4203f4:	tbnz	w10, #5, 420994 <_obstack_memory_used@@Base+0x6800>
  4203f8:	tbnz	w10, #4, 4209bc <_obstack_memory_used@@Base+0x6828>
  4203fc:	ldr	x10, [sp, #40]
  420400:	tbnz	w10, #17, 42048c <_obstack_memory_used@@Base+0x62f8>
  420404:	cmp	w9, #0x9
  420408:	b.ne	42048c <_obstack_memory_used@@Base+0x62f8>  // b.any
  42040c:	mov	w8, #0x10                  	// #16
  420410:	mov	x24, xzr
  420414:	str	w8, [x28]
  420418:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  42041c:	ldr	x8, [sp, #32]
  420420:	cmp	w9, #0x21
  420424:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  420428:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42042c:	ldr	x1, [x8, #120]
  420430:	cset	w4, eq  // eq = none
  420434:	add	x2, x2, #0x8b9
  420438:	add	x3, x3, #0x42a
  42043c:	b	420460 <_obstack_memory_used@@Base+0x62cc>
  420440:	ldr	x8, [sp, #32]
  420444:	cmp	w9, #0x23
  420448:	adrp	x2, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  42044c:	adrp	x3, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  420450:	ldr	x1, [x8, #120]
  420454:	cset	w4, eq  // eq = none
  420458:	add	x2, x2, #0x8ad
  42045c:	add	x3, x3, #0xd75
  420460:	mov	x0, x23
  420464:	mov	x5, x28
  420468:	bl	4224a8 <_obstack_memory_used@@Base+0x8314>
  42046c:	mov	x24, x0
  420470:	cbnz	x0, 420484 <_obstack_memory_used@@Base+0x62f0>
  420474:	ldr	w8, [x28]
  420478:	ldr	x14, [sp, #56]
  42047c:	cbz	w8, 4210bc <_obstack_memory_used@@Base+0x6f28>
  420480:	b	420a40 <_obstack_memory_used@@Base+0x68ac>
  420484:	ldr	x14, [sp, #56]
  420488:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  42048c:	and	w8, w8, #0xffffff00
  420490:	orr	w8, w8, #0x1
  420494:	str	w8, [x14, #8]
  420498:	ldr	w8, [x23, #128]
  42049c:	cmp	w8, #0xf
  4204a0:	b.eq	42206c <_obstack_memory_used@@Base+0x7ed8>  // b.none
  4204a4:	ldr	x0, [x23, #112]
  4204a8:	add	w9, w8, #0x1
  4204ac:	sxtw	x8, w8
  4204b0:	add	x24, x0, x8, lsl #6
  4204b4:	str	w9, [x23, #128]
  4204b8:	str	xzr, [x24, #8]!
  4204bc:	stp	xzr, xzr, [x24, #8]
  4204c0:	ldr	q0, [x14]
  4204c4:	mov	x9, #0xffffffffffffffff    	// #-1
  4204c8:	stp	xzr, xzr, [x24, #24]
  4204cc:	str	x9, [x24, #56]
  4204d0:	stur	q0, [x24, #40]
  4204d4:	ldr	w8, [x24, #48]
  4204d8:	and	w8, w8, #0xfff3ffff
  4204dc:	str	w8, [x24, #48]
  4204e0:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  4204e4:	ldr	w8, [x14]
  4204e8:	mov	w9, #0x30f                 	// #783
  4204ec:	tst	w8, w9
  4204f0:	b.eq	420520 <_obstack_memory_used@@Base+0x638c>  // b.none
  4204f4:	ldrb	w8, [x23, #176]
  4204f8:	tbnz	w8, #4, 42051c <_obstack_memory_used@@Base+0x6388>
  4204fc:	orr	w9, w8, #0x10
  420500:	strb	w9, [x23, #176]
  420504:	tbnz	w8, #3, 4222b4 <_obstack_memory_used@@Base+0x8120>
  420508:	adrp	x9, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42050c:	ldr	q0, [x9, #128]
  420510:	stur	q0, [x23, #184]
  420514:	tbz	w8, #2, 4222c0 <_obstack_memory_used@@Base+0x812c>
  420518:	stp	xzr, xzr, [x23, #200]
  42051c:	ldr	w8, [x14]
  420520:	cmp	w8, #0x200
  420524:	b.eq	421da0 <_obstack_memory_used@@Base+0x7c0c>  // b.none
  420528:	ldr	x21, [sp, #40]
  42052c:	cmp	w8, #0x100
  420530:	b.ne	421e9c <_obstack_memory_used@@Base+0x7d08>  // b.any
  420534:	mov	w8, #0x6                   	// #6
  420538:	str	w8, [x14]
  42053c:	ldr	w8, [x23, #128]
  420540:	cmp	w8, #0xf
  420544:	b.eq	422230 <_obstack_memory_used@@Base+0x809c>  // b.none
  420548:	ldr	x0, [x23, #112]
  42054c:	add	w9, w8, #0x1
  420550:	sxtw	x8, w8
  420554:	add	x19, x0, x8, lsl #6
  420558:	str	w9, [x23, #128]
  42055c:	str	xzr, [x19, #8]!
  420560:	stp	xzr, xzr, [x19, #8]
  420564:	ldr	q0, [x14]
  420568:	mov	x8, #0xffffffffffffffff    	// #-1
  42056c:	str	x8, [x19, #56]
  420570:	stp	xzr, xzr, [x19, #24]
  420574:	stur	q0, [x19, #40]
  420578:	ldr	w9, [x19, #48]
  42057c:	and	w8, w9, #0xfff3ffff
  420580:	str	w8, [x19, #48]
  420584:	mov	w8, #0x9                   	// #9
  420588:	str	w8, [x14]
  42058c:	ldr	w8, [x23, #128]
  420590:	cmp	w8, #0xf
  420594:	b.ne	421e08 <_obstack_memory_used@@Base+0x7c74>  // b.any
  420598:	mov	w0, #0x3c8                 	// #968
  42059c:	bl	4023a0 <malloc@plt>
  4205a0:	cbz	x0, 422338 <_obstack_memory_used@@Base+0x81a4>
  4205a4:	ldr	x9, [x23, #112]
  4205a8:	ldr	x21, [sp, #40]
  4205ac:	ldr	x14, [sp, #56]
  4205b0:	mov	w8, wzr
  4205b4:	str	x9, [x0]
  4205b8:	str	x0, [x23, #112]
  4205bc:	str	wzr, [x23, #128]
  4205c0:	b	421e0c <_obstack_memory_used@@Base+0x7c78>
  4205c4:	mov	w0, #0x20                  	// #32
  4205c8:	mov	w1, #0x1                   	// #1
  4205cc:	stur	xzr, [x29, #-16]
  4205d0:	bl	402480 <calloc@plt>
  4205d4:	mov	x25, x0
  4205d8:	mov	w0, #0x50                  	// #80
  4205dc:	mov	w1, #0x1                   	// #1
  4205e0:	bl	402480 <calloc@plt>
  4205e4:	mov	x24, x0
  4205e8:	cbz	x25, 42209c <_obstack_memory_used@@Base+0x7f08>
  4205ec:	cbz	x24, 42209c <_obstack_memory_used@@Base+0x7f08>
  4205f0:	ldr	x21, [sp, #56]
  4205f4:	ldp	x19, x20, [sp, #32]
  4205f8:	mov	x0, x21
  4205fc:	mov	x1, x19
  420600:	mov	x2, x20
  420604:	bl	422800 <_obstack_memory_used@@Base+0x866c>
  420608:	ldr	w8, [x21, #8]
  42060c:	mov	x2, x21
  420610:	mov	w3, w0
  420614:	and	w9, w8, #0xff
  420618:	cmp	w9, #0x19
  42061c:	b.eq	420a48 <_obstack_memory_used@@Base+0x68b4>  // b.none
  420620:	cmp	w9, #0x2
  420624:	b.eq	422094 <_obstack_memory_used@@Base+0x7f00>  // b.none
  420628:	str	wzr, [sp, #48]
  42062c:	b	420aa0 <_obstack_memory_used@@Base+0x690c>
  420630:	ldr	w8, [x23, #128]
  420634:	cmp	w8, #0xf
  420638:	b.eq	4220b0 <_obstack_memory_used@@Base+0x7f1c>  // b.none
  42063c:	ldr	x0, [x23, #112]
  420640:	ldr	x10, [sp, #32]
  420644:	add	w9, w8, #0x1
  420648:	sxtw	x8, w8
  42064c:	add	x19, x0, x8, lsl #6
  420650:	str	w9, [x23, #128]
  420654:	str	xzr, [x19, #8]!
  420658:	stp	xzr, xzr, [x19, #8]
  42065c:	ldr	q0, [x14]
  420660:	mov	x9, #0xffffffffffffffff    	// #-1
  420664:	stp	xzr, xzr, [x19, #24]
  420668:	str	x9, [x19, #56]
  42066c:	stur	q0, [x19, #40]
  420670:	ldr	w8, [x19, #48]
  420674:	and	w8, w8, #0xfff3ffff
  420678:	str	w8, [x19, #48]
  42067c:	ldr	w8, [x23, #180]
  420680:	cmp	w8, #0x2
  420684:	b.lt	4209b4 <_obstack_memory_used@@Base+0x6820>  // b.tstop
  420688:	ldr	x9, [x10, #104]
  42068c:	ldr	x8, [x10, #72]
  420690:	cmp	x9, x8
  420694:	b.le	4209b4 <_obstack_memory_used@@Base+0x6820>
  420698:	mov	w20, #0x10                  	// #16
  42069c:	mov	x21, #0xffffffffffffffff    	// #-1
  4206a0:	ldr	x22, [sp, #32]
  4206a4:	ldr	x9, [x22, #48]
  4206a8:	cmp	x8, x9
  4206ac:	b.eq	4209b4 <_obstack_memory_used@@Base+0x6820>  // b.none
  4206b0:	ldr	x9, [x22, #16]
  4206b4:	ldr	w8, [x9, x8, lsl #2]
  4206b8:	cmn	w8, #0x1
  4206bc:	b.ne	4209b4 <_obstack_memory_used@@Base+0x6820>  // b.any
  4206c0:	ldr	x2, [sp, #40]
  4206c4:	mov	x0, x14
  4206c8:	mov	x1, x22
  4206cc:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  4206d0:	ldr	x8, [x22, #72]
  4206d4:	add	x8, x8, w0, sxtw
  4206d8:	str	x8, [x22, #72]
  4206dc:	ldr	w8, [x23, #128]
  4206e0:	cmp	w8, #0xf
  4206e4:	b.eq	420784 <_obstack_memory_used@@Base+0x65f0>  // b.none
  4206e8:	ldr	x0, [x23, #112]
  4206ec:	add	w9, w8, #0x1
  4206f0:	sxtw	x8, w8
  4206f4:	add	x22, x0, x8, lsl #6
  4206f8:	str	w9, [x23, #128]
  4206fc:	str	xzr, [x22, #8]!
  420700:	stp	xzr, xzr, [x22, #8]
  420704:	ldr	x14, [sp, #56]
  420708:	ldr	q0, [x14]
  42070c:	stp	xzr, xzr, [x22, #24]
  420710:	str	x21, [x22, #56]
  420714:	stur	q0, [x22, #40]
  420718:	ldr	w8, [x22, #48]
  42071c:	and	w8, w8, #0xfff3ffff
  420720:	str	w8, [x22, #48]
  420724:	ldr	w8, [x23, #128]
  420728:	cmp	w8, #0xf
  42072c:	b.eq	4207bc <_obstack_memory_used@@Base+0x6628>  // b.none
  420730:	ldr	x0, [x23, #112]
  420734:	add	w9, w8, #0x1
  420738:	sxtw	x8, w8
  42073c:	add	x24, x0, x8, lsl #6
  420740:	str	w9, [x23, #128]
  420744:	str	xzr, [x24, #8]!
  420748:	stp	x19, x22, [x24, #8]
  42074c:	stp	xzr, xzr, [x24, #32]
  420750:	str	w20, [x24, #48]
  420754:	str	xzr, [x24, #24]
  420758:	str	x21, [x24, #56]
  42075c:	str	x24, [x19]
  420760:	cbz	x22, 422378 <_obstack_memory_used@@Base+0x81e4>
  420764:	ldr	x8, [sp, #32]
  420768:	str	x24, [x22]
  42076c:	mov	x19, x24
  420770:	ldr	x9, [x8, #104]
  420774:	ldr	x8, [x8, #72]
  420778:	cmp	x9, x8
  42077c:	b.gt	4206a0 <_obstack_memory_used@@Base+0x650c>
  420780:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  420784:	mov	w0, #0x3c8                 	// #968
  420788:	bl	4023a0 <malloc@plt>
  42078c:	cbz	x0, 4207a8 <_obstack_memory_used@@Base+0x6614>
  420790:	ldr	x9, [x23, #112]
  420794:	mov	w8, wzr
  420798:	str	x9, [x0]
  42079c:	str	x0, [x23, #112]
  4207a0:	str	wzr, [x23, #128]
  4207a4:	b	4206ec <_obstack_memory_used@@Base+0x6558>
  4207a8:	ldr	x14, [sp, #56]
  4207ac:	mov	x22, xzr
  4207b0:	ldr	w8, [x23, #128]
  4207b4:	cmp	w8, #0xf
  4207b8:	b.ne	420730 <_obstack_memory_used@@Base+0x659c>  // b.any
  4207bc:	mov	w0, #0x3c8                 	// #968
  4207c0:	bl	4023a0 <malloc@plt>
  4207c4:	ldr	x14, [sp, #56]
  4207c8:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  4207cc:	ldr	x9, [x23, #112]
  4207d0:	mov	w8, wzr
  4207d4:	str	x9, [x0]
  4207d8:	str	x0, [x23, #112]
  4207dc:	str	wzr, [x23, #128]
  4207e0:	b	420734 <_obstack_memory_used@@Base+0x65a0>
  4207e4:	ldr	w8, [x14]
  4207e8:	ldr	x10, [x23, #168]
  4207ec:	mov	w9, #0x1                   	// #1
  4207f0:	lsl	w8, w9, w8
  4207f4:	sxtw	x9, w8
  4207f8:	tst	x10, x9
  4207fc:	b.eq	4220dc <_obstack_memory_used@@Base+0x7f48>  // b.none
  420800:	ldr	x10, [x23, #160]
  420804:	ldr	w8, [x23, #128]
  420808:	orr	x9, x10, x9
  42080c:	cmp	w8, #0xf
  420810:	str	x9, [x23, #160]
  420814:	b.eq	422114 <_obstack_memory_used@@Base+0x7f80>  // b.none
  420818:	ldr	x0, [x23, #112]
  42081c:	add	w9, w8, #0x1
  420820:	sxtw	x8, w8
  420824:	add	x24, x0, x8, lsl #6
  420828:	str	w9, [x23, #128]
  42082c:	str	xzr, [x24, #8]!
  420830:	stp	xzr, xzr, [x24, #8]
  420834:	ldr	q0, [x14]
  420838:	mov	x8, #0xffffffffffffffff    	// #-1
  42083c:	str	x8, [x24, #56]
  420840:	stp	xzr, xzr, [x24, #24]
  420844:	stur	q0, [x24, #40]
  420848:	ldr	w9, [x24, #48]
  42084c:	and	w8, w9, #0xfff3ffff
  420850:	str	w8, [x24, #48]
  420854:	ldr	x8, [x23, #152]
  420858:	ldrb	w9, [x23, #176]
  42085c:	add	x8, x8, #0x1
  420860:	orr	w9, w9, #0x2
  420864:	str	x8, [x23, #152]
  420868:	strb	w9, [x23, #176]
  42086c:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  420870:	ldr	w8, [x23, #128]
  420874:	cmp	w8, #0xf
  420878:	b.eq	4220ec <_obstack_memory_used@@Base+0x7f58>  // b.none
  42087c:	ldr	x0, [x23, #112]
  420880:	add	w9, w8, #0x1
  420884:	sxtw	x8, w8
  420888:	add	x10, x0, x8, lsl #6
  42088c:	str	w9, [x23, #128]
  420890:	str	xzr, [x10, #8]!
  420894:	stp	xzr, xzr, [x10, #8]
  420898:	ldr	q0, [x14]
  42089c:	mov	x9, #0xffffffffffffffff    	// #-1
  4208a0:	stp	xzr, xzr, [x10, #24]
  4208a4:	str	x9, [x10, #56]
  4208a8:	stur	q0, [x10, #40]
  4208ac:	ldr	w8, [x10, #48]
  4208b0:	mov	x24, x10
  4208b4:	and	w8, w8, #0xfff3ffff
  4208b8:	str	w8, [x10, #48]
  4208bc:	ldr	w8, [x23, #180]
  4208c0:	cmp	w8, #0x2
  4208c4:	b.lt	4210bc <_obstack_memory_used@@Base+0x6f28>  // b.tstop
  4208c8:	ldrb	w8, [x23, #176]
  4208cc:	orr	w8, w8, #0x2
  4208d0:	strb	w8, [x23, #176]
  4208d4:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  4208d8:	ldr	x19, [x26, #48]
  4208dc:	mov	x0, x14
  4208e0:	add	x8, x19, #0x1
  4208e4:	str	x8, [x26, #48]
  4208e8:	ldp	x20, x21, [sp, #32]
  4208ec:	orr	x2, x21, #0x800000
  4208f0:	mov	x1, x20
  4208f4:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  4208f8:	ldr	x8, [x20, #72]
  4208fc:	ldr	x14, [sp, #56]
  420900:	add	x8, x8, w0, sxtw
  420904:	str	x8, [x20, #72]
  420908:	ldrb	w8, [x14, #8]
  42090c:	cmp	w8, #0x9
  420910:	b.ne	420a18 <_obstack_memory_used@@Base+0x6884>  // b.any
  420914:	mov	x25, xzr
  420918:	cmp	x19, #0x8
  42091c:	b.hi	420938 <_obstack_memory_used@@Base+0x67a4>  // b.pmore
  420920:	ldr	x8, [x23, #168]
  420924:	mov	w9, #0x1                   	// #1
  420928:	lsl	w9, w9, w19
  42092c:	sxtw	x9, w9
  420930:	orr	x8, x8, x9
  420934:	str	x8, [x23, #168]
  420938:	ldr	w8, [x23, #128]
  42093c:	cmp	w8, #0xf
  420940:	b.eq	422208 <_obstack_memory_used@@Base+0x8074>  // b.none
  420944:	ldr	x0, [x23, #112]
  420948:	add	w9, w8, #0x1
  42094c:	sxtw	x8, w8
  420950:	add	x8, x0, x8, lsl #6
  420954:	mov	x24, x8
  420958:	mov	w10, #0x11                  	// #17
  42095c:	mov	x11, #0xffffffffffffffff    	// #-1
  420960:	str	w9, [x23, #128]
  420964:	str	xzr, [x24, #8]!
  420968:	stp	x25, xzr, [x24, #8]
  42096c:	stp	xzr, xzr, [x24, #32]
  420970:	str	w10, [x24, #48]
  420974:	str	xzr, [x24, #24]
  420978:	str	x11, [x24, #56]
  42097c:	cbz	x25, 420984 <_obstack_memory_used@@Base+0x67f0>
  420980:	str	x24, [x25]
  420984:	str	x19, [x8, #48]
  420988:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  42098c:	ldr	x10, [sp, #40]
  420990:	tbz	w10, #24, 4203f0 <_obstack_memory_used@@Base+0x625c>
  420994:	mov	w8, #0xd                   	// #13
  420998:	mov	x24, xzr
  42099c:	str	w8, [x28]
  4209a0:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  4209a4:	mov	w8, #0x5                   	// #5
  4209a8:	mov	x24, xzr
  4209ac:	str	w8, [x28]
  4209b0:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  4209b4:	mov	x24, x19
  4209b8:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  4209bc:	ldp	x19, x20, [sp, #32]
  4209c0:	mov	x0, x14
  4209c4:	mov	x21, x14
  4209c8:	mov	x1, x19
  4209cc:	mov	x2, x20
  4209d0:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  4209d4:	ldr	x8, [x19, #72]
  4209d8:	mov	x1, x26
  4209dc:	mov	x2, x21
  4209e0:	mov	x3, x20
  4209e4:	add	x8, x8, w0, sxtw
  4209e8:	str	x8, [x19, #72]
  4209ec:	mov	x0, x19
  4209f0:	mov	x4, x25
  4209f4:	mov	x5, x28
  4209f8:	ldp	x20, x19, [sp, #272]
  4209fc:	ldp	x22, x21, [sp, #256]
  420a00:	ldp	x24, x23, [sp, #240]
  420a04:	ldp	x26, x25, [sp, #224]
  420a08:	ldp	x28, x27, [sp, #208]
  420a0c:	ldp	x29, x30, [sp, #192]
  420a10:	add	sp, sp, #0x120
  420a14:	b	42038c <_obstack_memory_used@@Base+0x61f8>
  420a18:	add	x4, x25, #0x1
  420a1c:	mov	x0, x20
  420a20:	mov	x1, x26
  420a24:	mov	x2, x14
  420a28:	mov	x3, x21
  420a2c:	mov	x5, x28
  420a30:	mov	x20, x14
  420a34:	bl	41f6b0 <_obstack_memory_used@@Base+0x551c>
  420a38:	ldr	w8, [x28]
  420a3c:	cbz	w8, 421f08 <_obstack_memory_used@@Base+0x7d74>
  420a40:	mov	x24, xzr
  420a44:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  420a48:	ldrb	w8, [x24, #32]
  420a4c:	orr	w8, w8, #0x1
  420a50:	strb	w8, [x24, #32]
  420a54:	tbz	w20, #8, 420a64 <_obstack_memory_used@@Base+0x68d0>
  420a58:	ldr	x8, [x25]
  420a5c:	orr	x8, x8, #0x400
  420a60:	str	x8, [x25]
  420a64:	ldr	x8, [x19, #72]
  420a68:	mov	x0, x2
  420a6c:	mov	x1, x19
  420a70:	mov	x2, x20
  420a74:	add	x8, x8, w3, sxtw
  420a78:	str	x8, [x19, #72]
  420a7c:	bl	422800 <_obstack_memory_used@@Base+0x866c>
  420a80:	ldr	x2, [sp, #56]
  420a84:	ldr	w8, [x2, #8]
  420a88:	and	w9, w8, #0xff
  420a8c:	cmp	w9, #0x2
  420a90:	b.eq	422094 <_obstack_memory_used@@Base+0x7f00>  // b.none
  420a94:	mov	w3, w0
  420a98:	mov	w9, #0x1                   	// #1
  420a9c:	str	w9, [sp, #48]
  420aa0:	and	w9, w8, #0xff
  420aa4:	cmp	w9, #0x15
  420aa8:	b.ne	420ab8 <_obstack_memory_used@@Base+0x6924>  // b.any
  420aac:	and	w8, w8, #0xffffff00
  420ab0:	orr	w8, w8, #0x1
  420ab4:	str	w8, [x2, #8]
  420ab8:	ldr	x4, [sp, #40]
  420abc:	sub	x8, x29, #0x50
  420ac0:	mov	w27, #0x3                   	// #3
  420ac4:	sub	x0, x29, #0x20
  420ac8:	mov	w5, #0x1                   	// #1
  420acc:	mov	x1, x19
  420ad0:	stur	x8, [x29, #-24]
  420ad4:	stur	w27, [x29, #-32]
  420ad8:	mov	w21, #0x1                   	// #1
  420adc:	bl	422978 <_obstack_memory_used@@Base+0x87e4>
  420ae0:	cbnz	w0, 422064 <_obstack_memory_used@@Base+0x7ed0>
  420ae4:	ldr	x20, [sp, #40]
  420ae8:	ldr	x22, [sp, #56]
  420aec:	stp	xzr, xzr, [sp, #8]
  420af0:	mov	x0, x22
  420af4:	mov	x1, x19
  420af8:	mov	x2, x20
  420afc:	bl	422800 <_obstack_memory_used@@Base+0x866c>
  420b00:	ldur	w22, [x29, #-32]
  420b04:	mov	w26, w0
  420b08:	cmp	w22, #0x2
  420b0c:	b.eq	420c98 <_obstack_memory_used@@Base+0x6b04>  // b.none
  420b10:	cmp	w22, #0x4
  420b14:	b.ne	420b44 <_obstack_memory_used@@Base+0x69b0>  // b.any
  420b18:	ldr	x0, [x19, #120]
  420b1c:	ldur	x4, [x29, #-24]
  420b20:	ldr	x5, [sp, #40]
  420b24:	sub	x3, x29, #0x10
  420b28:	mov	x1, x25
  420b2c:	mov	x2, x24
  420b30:	bl	422c58 <_obstack_memory_used@@Base+0x8ac4>
  420b34:	ldr	x14, [sp, #56]
  420b38:	str	w0, [x28]
  420b3c:	cbz	w0, 420cd4 <_obstack_memory_used@@Base+0x6b40>
  420b40:	b	4221c4 <_obstack_memory_used@@Base+0x8030>
  420b44:	ldr	x8, [sp, #56]
  420b48:	ldrb	w8, [x8, #8]
  420b4c:	cmp	w8, #0x16
  420b50:	b.eq	420b78 <_obstack_memory_used@@Base+0x69e4>  // b.none
  420b54:	cmp	w8, #0x2
  420b58:	b.eq	422058 <_obstack_memory_used@@Base+0x7ec4>  // b.none
  420b5c:	adrp	x11, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  420b60:	mov	w8, w22
  420b64:	add	x11, x11, #0x1c2
  420b68:	adr	x9, 420c98 <_obstack_memory_used@@Base+0x6b04>
  420b6c:	ldrb	w10, [x11, x8]
  420b70:	add	x9, x9, x10, lsl #2
  420b74:	br	x9
  420b78:	ldr	x8, [x19, #72]
  420b7c:	ldr	x2, [sp, #40]
  420b80:	add	x0, sp, #0x40
  420b84:	mov	x1, x19
  420b88:	add	x8, x8, w26, sxtw
  420b8c:	str	x8, [x19, #72]
  420b90:	bl	422800 <_obstack_memory_used@@Base+0x866c>
  420b94:	ldrb	w8, [sp, #72]
  420b98:	cmp	w8, #0x15
  420b9c:	b.eq	420c64 <_obstack_memory_used@@Base+0x6ad0>  // b.none
  420ba0:	cmp	w8, #0x2
  420ba4:	str	x28, [sp, #24]
  420ba8:	b.eq	42205c <_obstack_memory_used@@Base+0x7ec8>  // b.none
  420bac:	ldr	x20, [sp, #40]
  420bb0:	mov	w3, w0
  420bb4:	add	x8, sp, #0x50
  420bb8:	sub	x0, x29, #0x30
  420bbc:	add	x2, sp, #0x40
  420bc0:	mov	w5, #0x1                   	// #1
  420bc4:	mov	x1, x19
  420bc8:	mov	x4, x20
  420bcc:	stur	x8, [x29, #-40]
  420bd0:	stur	w27, [x29, #-48]
  420bd4:	bl	422978 <_obstack_memory_used@@Base+0x87e4>
  420bd8:	cbnz	w0, 4221bc <_obstack_memory_used@@Base+0x8028>
  420bdc:	ldr	x0, [sp, #56]
  420be0:	mov	x1, x19
  420be4:	mov	x2, x20
  420be8:	bl	422800 <_obstack_memory_used@@Base+0x866c>
  420bec:	ldr	w8, [x23, #180]
  420bf0:	ldur	w19, [x29, #-48]
  420bf4:	mov	w26, w0
  420bf8:	mov	w0, #0xb                   	// #11
  420bfc:	cmp	w8, #0x1
  420c00:	csel	x20, x24, xzr, gt
  420c04:	cmp	w19, #0x2
  420c08:	b.eq	4221bc <_obstack_memory_used@@Base+0x8028>  // b.none
  420c0c:	ldr	x14, [sp, #56]
  420c10:	cmp	w19, #0x4
  420c14:	b.eq	4221bc <_obstack_memory_used@@Base+0x8028>  // b.none
  420c18:	cmp	w22, #0x3
  420c1c:	b.ne	420c34 <_obstack_memory_used@@Base+0x6aa0>  // b.any
  420c20:	ldur	x0, [x29, #-24]
  420c24:	bl	402270 <strlen@plt>
  420c28:	ldr	x14, [sp, #56]
  420c2c:	cmp	x0, #0x1
  420c30:	b.hi	4221b8 <_obstack_memory_used@@Base+0x8024>  // b.pmore
  420c34:	cmp	w19, #0x3
  420c38:	b.ne	420c50 <_obstack_memory_used@@Base+0x6abc>  // b.any
  420c3c:	ldur	x0, [x29, #-40]
  420c40:	bl	402270 <strlen@plt>
  420c44:	ldr	x14, [sp, #56]
  420c48:	cmp	x0, #0x1
  420c4c:	b.hi	4221b8 <_obstack_memory_used@@Base+0x8024>  // b.pmore
  420c50:	cmp	w22, #0x3
  420c54:	b.eq	420d70 <_obstack_memory_used@@Base+0x6bdc>  // b.none
  420c58:	cbnz	w22, 420d7c <_obstack_memory_used@@Base+0x6be8>
  420c5c:	ldurb	w27, [x29, #-24]
  420c60:	b	420d80 <_obstack_memory_used@@Base+0x6bec>
  420c64:	ldr	x8, [x19, #72]
  420c68:	neg	w9, w26
  420c6c:	adrp	x11, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  420c70:	mov	w10, w22
  420c74:	add	x8, x8, w9, sxtw
  420c78:	str	x8, [x19, #72]
  420c7c:	ldr	x8, [sp, #56]
  420c80:	add	x11, x11, #0x1c2
  420c84:	strb	w21, [x8, #8]
  420c88:	adr	x8, 420c98 <_obstack_memory_used@@Base+0x6b04>
  420c8c:	ldrb	w9, [x11, x10]
  420c90:	add	x8, x8, x9, lsl #2
  420c94:	br	x8
  420c98:	ldur	x27, [x29, #-24]
  420c9c:	mov	x0, x27
  420ca0:	bl	402270 <strlen@plt>
  420ca4:	cmp	x0, #0x1
  420ca8:	b.ne	4221b4 <_obstack_memory_used@@Base+0x8020>  // b.any
  420cac:	ldrb	w8, [x27]
  420cb0:	mov	w27, #0x3                   	// #3
  420cb4:	lsr	x9, x8, #3
  420cb8:	and	x9, x9, #0x18
  420cbc:	ldr	x10, [x25, x9]
  420cc0:	lsl	x8, x21, x8
  420cc4:	orr	x8, x8, x10
  420cc8:	str	x8, [x25, x9]
  420ccc:	ldr	x14, [sp, #56]
  420cd0:	str	wzr, [x28]
  420cd4:	ldrb	w8, [x14, #8]
  420cd8:	cmp	w8, #0x15
  420cdc:	b.eq	420f24 <_obstack_memory_used@@Base+0x6d90>  // b.none
  420ce0:	cmp	w8, #0x2
  420ce4:	b.eq	422058 <_obstack_memory_used@@Base+0x7ec4>  // b.none
  420ce8:	ldr	x20, [sp, #40]
  420cec:	sub	x8, x29, #0x50
  420cf0:	sub	x0, x29, #0x20
  420cf4:	mov	x1, x19
  420cf8:	mov	x2, x14
  420cfc:	mov	w3, w26
  420d00:	mov	x4, x20
  420d04:	mov	w5, wzr
  420d08:	stur	x8, [x29, #-24]
  420d0c:	stur	w27, [x29, #-32]
  420d10:	mov	x22, x14
  420d14:	bl	422978 <_obstack_memory_used@@Base+0x87e4>
  420d18:	cbz	w0, 420af0 <_obstack_memory_used@@Base+0x695c>
  420d1c:	b	422064 <_obstack_memory_used@@Base+0x7ed0>
  420d20:	ldurb	w8, [x29, #-24]
  420d24:	ldr	x14, [sp, #56]
  420d28:	lsr	x9, x8, #3
  420d2c:	and	x9, x9, #0x18
  420d30:	ldr	x10, [x25, x9]
  420d34:	lsl	x8, x21, x8
  420d38:	orr	x8, x8, x10
  420d3c:	str	x8, [x25, x9]
  420d40:	b	420cd4 <_obstack_memory_used@@Base+0x6b40>
  420d44:	ldr	x8, [x24, #40]
  420d48:	ldr	x9, [sp, #16]
  420d4c:	cmp	x9, x8
  420d50:	b.eq	420e94 <_obstack_memory_used@@Base+0x6d00>  // b.none
  420d54:	ldr	x0, [x24]
  420d58:	ldr	x14, [sp, #56]
  420d5c:	ldur	w9, [x29, #-24]
  420d60:	add	x10, x8, #0x1
  420d64:	str	x10, [x24, #40]
  420d68:	str	w9, [x0, x8, lsl #2]
  420d6c:	b	420cd4 <_obstack_memory_used@@Base+0x6b40>
  420d70:	ldur	x8, [x29, #-24]
  420d74:	ldrb	w27, [x8]
  420d78:	b	420d80 <_obstack_memory_used@@Base+0x6bec>
  420d7c:	mov	w27, wzr
  420d80:	cmp	w19, #0x3
  420d84:	b.eq	420d94 <_obstack_memory_used@@Base+0x6c00>  // b.none
  420d88:	cbnz	w19, 420da0 <_obstack_memory_used@@Base+0x6c0c>
  420d8c:	ldurb	w28, [x29, #-40]
  420d90:	b	420da4 <_obstack_memory_used@@Base+0x6c10>
  420d94:	ldur	x8, [x29, #-40]
  420d98:	ldrb	w28, [x8]
  420d9c:	b	420da4 <_obstack_memory_used@@Base+0x6c10>
  420da0:	mov	w28, wzr
  420da4:	cmp	w22, #0x3
  420da8:	b.eq	420db0 <_obstack_memory_used@@Base+0x6c1c>  // b.none
  420dac:	cbnz	w22, 420dc8 <_obstack_memory_used@@Base+0x6c34>
  420db0:	cbz	x20, 420dcc <_obstack_memory_used@@Base+0x6c38>
  420db4:	mov	w0, w27
  420db8:	bl	402550 <btowc@plt>
  420dbc:	ldr	x14, [sp, #56]
  420dc0:	mov	w27, w0
  420dc4:	b	420dcc <_obstack_memory_used@@Base+0x6c38>
  420dc8:	ldur	w27, [x29, #-24]
  420dcc:	cmp	w19, #0x3
  420dd0:	b.eq	420dd8 <_obstack_memory_used@@Base+0x6c44>  // b.none
  420dd4:	cbnz	w19, 420df0 <_obstack_memory_used@@Base+0x6c5c>
  420dd8:	cbz	x20, 420df4 <_obstack_memory_used@@Base+0x6c60>
  420ddc:	mov	w0, w28
  420de0:	bl	402550 <btowc@plt>
  420de4:	ldr	x14, [sp, #56]
  420de8:	mov	w28, w0
  420dec:	b	420df4 <_obstack_memory_used@@Base+0x6c60>
  420df0:	ldur	w28, [x29, #-40]
  420df4:	cmn	w27, #0x1
  420df8:	mov	w0, #0x3                   	// #3
  420dfc:	b.eq	4221bc <_obstack_memory_used@@Base+0x8028>  // b.none
  420e00:	cmn	w28, #0x1
  420e04:	b.eq	4221bc <_obstack_memory_used@@Base+0x8028>  // b.none
  420e08:	ldr	x8, [sp, #40]
  420e0c:	tbz	w8, #16, 420e18 <_obstack_memory_used@@Base+0x6c84>
  420e10:	cmp	w27, w28
  420e14:	b.hi	422428 <_obstack_memory_used@@Base+0x8294>  // b.pmore
  420e18:	cbz	x20, 420e44 <_obstack_memory_used@@Base+0x6cb0>
  420e1c:	ldr	x8, [x20, #64]
  420e20:	ldr	x9, [sp, #8]
  420e24:	cmp	x9, x8
  420e28:	b.eq	420ecc <_obstack_memory_used@@Base+0x6d38>  // b.none
  420e2c:	ldp	x22, x10, [x20, #8]
  420e30:	lsl	x9, x8, #2
  420e34:	add	x8, x8, #0x1
  420e38:	str	w27, [x22, x9]
  420e3c:	str	x8, [x20, #64]
  420e40:	str	w28, [x10, x9]
  420e44:	mov	w9, w28
  420e48:	ldp	x28, x19, [sp, #24]
  420e4c:	mov	x8, xzr
  420e50:	mov	w10, w27
  420e54:	mov	w27, #0x3                   	// #3
  420e58:	b	420e68 <_obstack_memory_used@@Base+0x6cd4>
  420e5c:	add	x8, x8, #0x1
  420e60:	cmp	x8, #0x100
  420e64:	b.eq	420cd0 <_obstack_memory_used@@Base+0x6b3c>  // b.none
  420e68:	cmp	x8, x10
  420e6c:	b.cc	420e5c <_obstack_memory_used@@Base+0x6cc8>  // b.lo, b.ul, b.last
  420e70:	cmp	x8, x9
  420e74:	b.hi	420e5c <_obstack_memory_used@@Base+0x6cc8>  // b.pmore
  420e78:	lsr	x11, x8, #3
  420e7c:	and	x11, x11, #0x1ffffffffffffff8
  420e80:	ldr	x12, [x25, x11]
  420e84:	lsl	x13, x21, x8
  420e88:	orr	x12, x12, x13
  420e8c:	str	x12, [x25, x11]
  420e90:	b	420e5c <_obstack_memory_used@@Base+0x6cc8>
  420e94:	ldr	x8, [sp, #16]
  420e98:	ldr	x0, [x24]
  420e9c:	mov	w19, #0x1                   	// #1
  420ea0:	bfi	x19, x8, #1, #63
  420ea4:	lsl	x1, x19, #2
  420ea8:	bl	4024c0 <realloc@plt>
  420eac:	cbz	x0, 422484 <_obstack_memory_used@@Base+0x82f0>
  420eb0:	ldr	x8, [x24, #40]
  420eb4:	str	x19, [sp, #16]
  420eb8:	ldr	x19, [sp, #32]
  420ebc:	ldr	x14, [sp, #56]
  420ec0:	mov	w27, #0x3                   	// #3
  420ec4:	str	x0, [x24]
  420ec8:	b	420d5c <_obstack_memory_used@@Base+0x6bc8>
  420ecc:	ldr	x8, [sp, #8]
  420ed0:	ldr	x0, [x20, #8]
  420ed4:	mov	w19, #0x1                   	// #1
  420ed8:	bfi	x19, x8, #1, #63
  420edc:	lsl	x1, x19, #2
  420ee0:	str	x1, [sp, #8]
  420ee4:	bl	4024c0 <realloc@plt>
  420ee8:	ldr	x8, [x20, #16]
  420eec:	ldr	x1, [sp, #8]
  420ef0:	mov	x22, x0
  420ef4:	mov	x0, x8
  420ef8:	bl	4024c0 <realloc@plt>
  420efc:	str	x0, [sp]
  420f00:	cbz	x22, 422490 <_obstack_memory_used@@Base+0x82fc>
  420f04:	ldr	x8, [sp]
  420f08:	cbz	x8, 422490 <_obstack_memory_used@@Base+0x82fc>
  420f0c:	ldr	x10, [sp]
  420f10:	ldr	x8, [x20, #64]
  420f14:	stp	x22, x10, [x20, #8]
  420f18:	ldr	x14, [sp, #56]
  420f1c:	str	x19, [sp, #8]
  420f20:	b	420e30 <_obstack_memory_used@@Base+0x6c9c>
  420f24:	ldr	x8, [x19, #72]
  420f28:	add	x8, x8, w26, sxtw
  420f2c:	str	x8, [x19, #72]
  420f30:	ldr	w8, [sp, #48]
  420f34:	cbz	w8, 420f60 <_obstack_memory_used@@Base+0x6dcc>
  420f38:	ldp	q0, q1, [x25]
  420f3c:	mvn	v0.16b, v0.16b
  420f40:	mvn	v1.16b, v1.16b
  420f44:	stp	q0, q1, [x25]
  420f48:	ldr	w8, [x23, #180]
  420f4c:	cmp	w8, #0x2
  420f50:	b.ge	420f6c <_obstack_memory_used@@Base+0x6dd8>  // b.tcont
  420f54:	ldr	x9, [x24, #40]
  420f58:	cbnz	x9, 420fc8 <_obstack_memory_used@@Base+0x6e34>
  420f5c:	b	420fb0 <_obstack_memory_used@@Base+0x6e1c>
  420f60:	ldr	w8, [x23, #180]
  420f64:	cmp	w8, #0x2
  420f68:	b.lt	420f54 <_obstack_memory_used@@Base+0x6dc0>  // b.tstop
  420f6c:	ldr	x9, [x23, #120]
  420f70:	ldp	x11, x12, [x25]
  420f74:	ldr	x10, [x9]
  420f78:	and	x10, x11, x10
  420f7c:	str	x10, [x25]
  420f80:	ldr	x10, [x9, #8]
  420f84:	and	x10, x12, x10
  420f88:	str	x10, [x25, #8]
  420f8c:	ldr	x10, [x9, #16]
  420f90:	ldp	x11, x12, [x25, #16]
  420f94:	and	x10, x11, x10
  420f98:	str	x10, [x25, #16]
  420f9c:	ldr	x9, [x9, #24]
  420fa0:	and	x9, x12, x9
  420fa4:	str	x9, [x25, #24]
  420fa8:	ldr	x9, [x24, #40]
  420fac:	cbnz	x9, 420fc8 <_obstack_memory_used@@Base+0x6e34>
  420fb0:	ldr	x9, [x24, #48]
  420fb4:	cbnz	x9, 420fc8 <_obstack_memory_used@@Base+0x6e34>
  420fb8:	ldr	x9, [x24, #56]
  420fbc:	cbnz	x9, 420fc8 <_obstack_memory_used@@Base+0x6e34>
  420fc0:	ldr	x9, [x24, #64]
  420fc4:	cbz	x9, 421fbc <_obstack_memory_used@@Base+0x7e28>
  420fc8:	ldrb	w9, [x23, #176]
  420fcc:	ldr	w8, [x23, #128]
  420fd0:	orr	w9, w9, #0x2
  420fd4:	cmp	w8, #0xf
  420fd8:	strb	w9, [x23, #176]
  420fdc:	b.eq	42213c <_obstack_memory_used@@Base+0x7fa8>  // b.none
  420fe0:	ldr	x0, [x23, #112]
  420fe4:	add	w9, w8, #0x1
  420fe8:	sxtw	x8, w8
  420fec:	add	x19, x0, x8, lsl #6
  420ff0:	mov	w10, #0x6                   	// #6
  420ff4:	mov	x11, #0xffffffffffffffff    	// #-1
  420ff8:	str	w9, [x23, #128]
  420ffc:	str	xzr, [x19, #8]!
  421000:	stp	xzr, xzr, [x19, #16]
  421004:	str	xzr, [x19, #8]
  421008:	str	w10, [x19, #48]
  42100c:	stp	xzr, x24, [x19, #32]
  421010:	str	x11, [x19, #56]
  421014:	ldr	x8, [x25]
  421018:	cbnz	x8, 421034 <_obstack_memory_used@@Base+0x6ea0>
  42101c:	ldr	x8, [x25, #8]
  421020:	cbnz	x8, 421034 <_obstack_memory_used@@Base+0x6ea0>
  421024:	ldr	x8, [x25, #16]
  421028:	cbnz	x8, 421034 <_obstack_memory_used@@Base+0x6ea0>
  42102c:	ldr	x8, [x25, #24]
  421030:	cbz	x8, 422044 <_obstack_memory_used@@Base+0x7eb0>
  421034:	ldr	w8, [x23, #128]
  421038:	cmp	w8, #0xf
  42103c:	b.eq	422164 <_obstack_memory_used@@Base+0x7fd0>  // b.none
  421040:	ldr	x0, [x23, #112]
  421044:	add	w9, w8, #0x1
  421048:	sxtw	x8, w8
  42104c:	add	x20, x0, x8, lsl #6
  421050:	str	w9, [x23, #128]
  421054:	mov	w9, #0x3                   	// #3
  421058:	mov	x8, #0xffffffffffffffff    	// #-1
  42105c:	str	xzr, [x20, #8]!
  421060:	stp	xzr, xzr, [x20, #16]
  421064:	str	xzr, [x20, #8]
  421068:	str	w9, [x20, #48]
  42106c:	stp	xzr, x25, [x20, #32]
  421070:	str	x8, [x20, #56]
  421074:	ldr	w8, [x23, #128]
  421078:	cmp	w8, #0xf
  42107c:	b.eq	42218c <_obstack_memory_used@@Base+0x7ff8>  // b.none
  421080:	ldr	x0, [x23, #112]
  421084:	add	w9, w8, #0x1
  421088:	sxtw	x8, w8
  42108c:	add	x24, x0, x8, lsl #6
  421090:	str	w9, [x23, #128]
  421094:	mov	w9, #0xa                   	// #10
  421098:	mov	x8, #0xffffffffffffffff    	// #-1
  42109c:	str	xzr, [x24, #8]!
  4210a0:	stp	x20, x19, [x24, #8]
  4210a4:	stp	xzr, xzr, [x24, #32]
  4210a8:	str	w9, [x24, #48]
  4210ac:	str	xzr, [x24, #24]
  4210b0:	str	x8, [x24, #56]
  4210b4:	str	x24, [x20]
  4210b8:	str	x24, [x19]
  4210bc:	ldp	x20, x21, [sp, #32]
  4210c0:	mov	x0, x14
  4210c4:	str	x28, [sp, #24]
  4210c8:	mov	x1, x20
  4210cc:	mov	x2, x21
  4210d0:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  4210d4:	ldr	x8, [x20, #72]
  4210d8:	ldr	x12, [sp, #56]
  4210dc:	add	x25, x23, #0x80
  4210e0:	add	x26, x23, #0x70
  4210e4:	mov	w23, #0x1                   	// #1
  4210e8:	mov	x28, #0xffffffffffffffff    	// #-1
  4210ec:	add	x8, x8, w0, sxtw
  4210f0:	str	x8, [x20, #72]
  4210f4:	ldrb	w8, [x12, #8]
  4210f8:	str	x24, [sp, #48]
  4210fc:	cmp	w8, #0x17
  421100:	b.hi	421cec <_obstack_memory_used@@Base+0x7b58>  // b.pmore
  421104:	mov	w10, #0x800                 	// #2048
  421108:	lsl	w9, w23, w8
  42110c:	movk	w10, #0x8c, lsl #16
  421110:	tst	w9, w10
  421114:	b.eq	421cec <_obstack_memory_used@@Base+0x7b58>  // b.none
  421118:	ldr	q0, [x12]
  42111c:	ldr	x19, [x20, #72]
  421120:	mov	w24, #0xa                   	// #10
  421124:	cmp	w8, #0x17
  421128:	stur	q0, [x29, #-80]
  42112c:	b.ne	4211cc <_obstack_memory_used@@Base+0x7038>  // b.any
  421130:	mov	x10, #0xffffffffffffffff    	// #-1
  421134:	mov	x0, x12
  421138:	mov	x1, x20
  42113c:	mov	x2, x21
  421140:	mov	x22, x10
  421144:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  421148:	ldr	x8, [x20, #72]
  42114c:	ldr	x12, [sp, #56]
  421150:	add	x8, x8, w0, sxtw
  421154:	str	x8, [x20, #72]
  421158:	ldrb	w8, [x12, #8]
  42115c:	ldrb	w9, [x12]
  421160:	cmp	w8, #0x18
  421164:	b.eq	4211e4 <_obstack_memory_used@@Base+0x7050>  // b.none
  421168:	cmp	w8, #0x2
  42116c:	b.eq	421830 <_obstack_memory_used@@Base+0x769c>  // b.none
  421170:	cmp	w9, #0x2c
  421174:	b.eq	4211e4 <_obstack_memory_used@@Base+0x7050>  // b.none
  421178:	cmp	w9, #0x30
  42117c:	mov	x10, #0xfffffffffffffffe    	// #-2
  421180:	b.cc	421134 <_obstack_memory_used@@Base+0x6fa0>  // b.lo, b.ul, b.last
  421184:	cmp	w8, #0x1
  421188:	b.ne	421134 <_obstack_memory_used@@Base+0x6fa0>  // b.any
  42118c:	cmn	x22, #0x2
  421190:	mov	x10, #0xfffffffffffffffe    	// #-2
  421194:	b.eq	421134 <_obstack_memory_used@@Base+0x6fa0>  // b.none
  421198:	cmp	w9, #0x39
  42119c:	b.hi	421134 <_obstack_memory_used@@Base+0x6fa0>  // b.pmore
  4211a0:	cmn	x22, #0x1
  4211a4:	b.eq	4211c4 <_obstack_memory_used@@Base+0x7030>  // b.none
  4211a8:	madd	x8, x22, x24, x9
  4211ac:	mov	w10, #0x8030                	// #32816
  4211b0:	sub	x9, x8, #0x30
  4211b4:	cmp	x8, x10
  4211b8:	mov	w8, #0x8000                	// #32768
  4211bc:	csel	x10, x8, x9, gt
  4211c0:	b	421134 <_obstack_memory_used@@Base+0x6fa0>
  4211c4:	sub	x10, x9, #0x30
  4211c8:	b	421134 <_obstack_memory_used@@Base+0x6fa0>
  4211cc:	cmp	w8, #0x12
  4211d0:	cset	w22, eq  // eq = none
  4211d4:	cmp	w8, #0x13
  4211d8:	mov	w8, #0x1                   	// #1
  4211dc:	cneg	x23, x8, ne  // ne = any
  4211e0:	b	421318 <_obstack_memory_used@@Base+0x7184>
  4211e4:	cmn	x22, #0x1
  4211e8:	b.ne	421204 <_obstack_memory_used@@Base+0x7070>  // b.any
  4211ec:	cmp	w9, #0x2c
  4211f0:	b.ne	4212c4 <_obstack_memory_used@@Base+0x7130>  // b.any
  4211f4:	cmp	w8, #0x1
  4211f8:	b.ne	4212c4 <_obstack_memory_used@@Base+0x7130>  // b.any
  4211fc:	mov	x22, xzr
  421200:	b	421224 <_obstack_memory_used@@Base+0x7090>
  421204:	cmn	x22, #0x2
  421208:	b.eq	421830 <_obstack_memory_used@@Base+0x769c>  // b.none
  42120c:	cmp	w8, #0x18
  421210:	b.eq	4212d8 <_obstack_memory_used@@Base+0x7144>  // b.none
  421214:	cmp	w8, #0x1
  421218:	b.ne	421830 <_obstack_memory_used@@Base+0x769c>  // b.any
  42121c:	cmp	w9, #0x2c
  421220:	b.ne	421830 <_obstack_memory_used@@Base+0x769c>  // b.any
  421224:	mov	x10, #0xffffffffffffffff    	// #-1
  421228:	mov	x0, x12
  42122c:	mov	x1, x20
  421230:	mov	x2, x21
  421234:	mov	x23, x10
  421238:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  42123c:	ldr	x8, [x20, #72]
  421240:	ldr	x12, [sp, #56]
  421244:	add	x8, x8, w0, sxtw
  421248:	str	x8, [x20, #72]
  42124c:	ldrb	w8, [x12, #8]
  421250:	cmp	w8, #0x18
  421254:	b.eq	4212dc <_obstack_memory_used@@Base+0x7148>  // b.none
  421258:	cmp	w8, #0x2
  42125c:	b.eq	42182c <_obstack_memory_used@@Base+0x7698>  // b.none
  421260:	ldrb	w9, [x12]
  421264:	mov	w11, #0xa                   	// #10
  421268:	cmp	w9, #0x2c
  42126c:	b.eq	4212e0 <_obstack_memory_used@@Base+0x714c>  // b.none
  421270:	cmp	w9, #0x30
  421274:	mov	x10, #0xfffffffffffffffe    	// #-2
  421278:	b.cc	421228 <_obstack_memory_used@@Base+0x7094>  // b.lo, b.ul, b.last
  42127c:	cmp	w8, #0x1
  421280:	b.ne	421228 <_obstack_memory_used@@Base+0x7094>  // b.any
  421284:	cmn	x23, #0x2
  421288:	mov	x10, #0xfffffffffffffffe    	// #-2
  42128c:	b.eq	421228 <_obstack_memory_used@@Base+0x7094>  // b.none
  421290:	cmp	w9, #0x39
  421294:	b.hi	421228 <_obstack_memory_used@@Base+0x7094>  // b.pmore
  421298:	cmn	x23, #0x1
  42129c:	b.eq	4212bc <_obstack_memory_used@@Base+0x7128>  // b.none
  4212a0:	madd	x8, x23, x11, x9
  4212a4:	mov	w10, #0x8030                	// #32816
  4212a8:	sub	x9, x8, #0x30
  4212ac:	cmp	x8, x10
  4212b0:	mov	w8, #0x8000                	// #32768
  4212b4:	csel	x10, x8, x9, gt
  4212b8:	b	421228 <_obstack_memory_used@@Base+0x7094>
  4212bc:	sub	x10, x9, #0x30
  4212c0:	b	421228 <_obstack_memory_used@@Base+0x7094>
  4212c4:	ldr	x8, [sp, #24]
  4212c8:	mov	x14, xzr
  4212cc:	mov	w9, #0xa                   	// #10
  4212d0:	str	w9, [x8]
  4212d4:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  4212d8:	mov	x23, x22
  4212dc:	mov	w11, #0xa                   	// #10
  4212e0:	cmn	x23, #0x2
  4212e4:	b.eq	42182c <_obstack_memory_used@@Base+0x7698>  // b.none
  4212e8:	cmn	x23, #0x1
  4212ec:	cset	w9, eq  // eq = none
  4212f0:	cmp	x22, x23
  4212f4:	cset	w10, le
  4212f8:	cmp	w8, #0x18
  4212fc:	b.ne	421a78 <_obstack_memory_used@@Base+0x78e4>  // b.any
  421300:	orr	w8, w10, w9
  421304:	tbz	w8, #0, 421a78 <_obstack_memory_used@@Base+0x78e4>
  421308:	cmn	x23, #0x1
  42130c:	csel	x8, x22, x23, eq  // eq = none
  421310:	cmp	x8, #0x8, lsl #12
  421314:	b.ge	421bf8 <_obstack_memory_used@@Base+0x7a64>  // b.tcont
  421318:	mov	x0, x12
  42131c:	mov	x1, x20
  421320:	mov	x2, x21
  421324:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  421328:	ldr	x8, [x20, #72]
  42132c:	ldr	x19, [sp, #48]
  421330:	add	x8, x8, w0, sxtw
  421334:	str	x8, [x20, #72]
  421338:	cbz	x19, 42171c <_obstack_memory_used@@Base+0x7588>
  42133c:	ldr	x12, [sp, #56]
  421340:	orr	x8, x23, x22
  421344:	mov	w13, #0xa                   	// #10
  421348:	cbz	x8, 421728 <_obstack_memory_used@@Base+0x7594>
  42134c:	cmp	x22, #0x1
  421350:	b.ge	4217cc <_obstack_memory_used@@Base+0x7638>  // b.tcont
  421354:	mov	x14, xzr
  421358:	mov	x21, x19
  42135c:	ldrb	w8, [x21, #48]
  421360:	cmp	w8, #0x11
  421364:	b.ne	4213cc <_obstack_memory_used@@Base+0x7238>  // b.any
  421368:	ldr	x8, [x21, #40]
  42136c:	mov	x10, x21
  421370:	mov	x9, x10
  421374:	ldr	x10, [x10, #8]
  421378:	cbnz	x10, 421370 <_obstack_memory_used@@Base+0x71dc>
  42137c:	ldr	x10, [x9, #16]
  421380:	cbnz	x10, 421370 <_obstack_memory_used@@Base+0x71dc>
  421384:	ldr	w10, [x9, #48]
  421388:	and	w11, w10, #0xff
  42138c:	cmp	w11, #0x11
  421390:	b.ne	4213a8 <_obstack_memory_used@@Base+0x7214>  // b.any
  421394:	ldr	x11, [x9, #40]
  421398:	cmp	x11, x8
  42139c:	b.ne	4213a8 <_obstack_memory_used@@Base+0x7214>  // b.any
  4213a0:	orr	w10, w10, #0x80000
  4213a4:	str	w10, [x9, #48]
  4213a8:	ldr	x11, [x9]
  4213ac:	cbz	x11, 4213cc <_obstack_memory_used@@Base+0x7238>
  4213b0:	ldr	x10, [x11, #16]
  4213b4:	cmp	x10, x9
  4213b8:	mov	x9, x11
  4213bc:	b.eq	421384 <_obstack_memory_used@@Base+0x71f0>  // b.none
  4213c0:	mov	x9, x11
  4213c4:	cbz	x10, 421384 <_obstack_memory_used@@Base+0x71f0>
  4213c8:	b	421370 <_obstack_memory_used@@Base+0x71dc>
  4213cc:	ldr	w8, [x25]
  4213d0:	cmn	x23, #0x1
  4213d4:	cinc	w19, w13, eq  // eq = none
  4213d8:	cmp	w8, #0xf
  4213dc:	b.eq	4217f4 <_obstack_memory_used@@Base+0x7660>  // b.none
  4213e0:	ldr	x0, [x26]
  4213e4:	mov	w11, #0x10                  	// #16
  4213e8:	add	w9, w8, #0x1
  4213ec:	sxtw	x8, w8
  4213f0:	add	x22, x22, #0x2
  4213f4:	add	x27, x0, x8, lsl #6
  4213f8:	str	w9, [x25]
  4213fc:	cmp	x22, x23
  421400:	str	xzr, [x27, #8]!
  421404:	stp	x21, xzr, [x27, #8]
  421408:	stp	xzr, xzr, [x27, #32]
  42140c:	str	w19, [x27, #48]
  421410:	str	xzr, [x27, #24]
  421414:	str	x28, [x27, #56]
  421418:	str	x27, [x21]
  42141c:	b.gt	4216bc <_obstack_memory_used@@Base+0x7528>
  421420:	mov	x20, x27
  421424:	ldr	w8, [x25]
  421428:	cmp	w8, #0xf
  42142c:	b.eq	4215fc <_obstack_memory_used@@Base+0x7468>  // b.none
  421430:	ldr	x0, [x26]
  421434:	add	w10, w8, #0x1
  421438:	sxtw	x8, w8
  42143c:	add	x19, x0, x8, lsl #6
  421440:	str	w10, [x25]
  421444:	str	xzr, [x19, #8]!
  421448:	add	x9, x21, #0x28
  42144c:	stp	xzr, xzr, [x19, #8]
  421450:	ldr	q0, [x9]
  421454:	add	x24, sp, #0x50
  421458:	stp	xzr, xzr, [x19, #24]
  42145c:	str	x28, [x19, #56]
  421460:	stur	q0, [x19, #40]
  421464:	ldr	w8, [x19, #48]
  421468:	and	w8, w8, #0xfff3ffff
  42146c:	str	w8, [x19, #48]
  421470:	mov	x8, x19
  421474:	str	x19, [sp, #80]
  421478:	str	x27, [x8]
  42147c:	ldr	x8, [x24]
  421480:	ldr	w9, [x8, #48]
  421484:	orr	w9, w9, #0x40000
  421488:	str	w9, [x8, #48]
  42148c:	ldr	x8, [x21, #8]
  421490:	ldr	x27, [x24]
  421494:	cbz	x8, 4214fc <_obstack_memory_used@@Base+0x7368>
  421498:	add	x24, x27, #0x8
  42149c:	mov	x21, x8
  4214a0:	ldr	w8, [x25]
  4214a4:	cmp	w8, #0xf
  4214a8:	b.eq	421524 <_obstack_memory_used@@Base+0x7390>  // b.none
  4214ac:	ldr	x0, [x26]
  4214b0:	add	w10, w8, #0x1
  4214b4:	sxtw	x8, w8
  4214b8:	add	x8, x0, x8, lsl #6
  4214bc:	str	w10, [x25]
  4214c0:	str	xzr, [x8, #8]!
  4214c4:	add	x9, x21, #0x28
  4214c8:	stp	xzr, xzr, [x8, #8]
  4214cc:	ldr	q0, [x9]
  4214d0:	stp	xzr, xzr, [x8, #24]
  4214d4:	str	x28, [x8, #56]
  4214d8:	stur	q0, [x8, #40]
  4214dc:	ldr	w9, [x8, #48]
  4214e0:	and	w9, w9, #0xfff3ffff
  4214e4:	str	w9, [x8, #48]
  4214e8:	str	x8, [x24]
  4214ec:	b	421478 <_obstack_memory_used@@Base+0x72e4>
  4214f0:	ldr	x21, [x8]
  4214f4:	ldr	x27, [x27]
  4214f8:	cbz	x21, 42155c <_obstack_memory_used@@Base+0x73c8>
  4214fc:	mov	x9, x8
  421500:	mov	x8, x21
  421504:	ldr	x21, [x21, #16]
  421508:	cmp	x21, x9
  42150c:	b.eq	4214f0 <_obstack_memory_used@@Base+0x735c>  // b.none
  421510:	cbz	x21, 4214f0 <_obstack_memory_used@@Base+0x735c>
  421514:	add	x24, x27, #0x10
  421518:	ldr	w8, [x25]
  42151c:	cmp	w8, #0xf
  421520:	b.ne	4214ac <_obstack_memory_used@@Base+0x7318>  // b.any
  421524:	mov	w0, #0x3c8                 	// #968
  421528:	str	x14, [sp, #16]
  42152c:	bl	4023a0 <malloc@plt>
  421530:	cbz	x0, 42167c <_obstack_memory_used@@Base+0x74e8>
  421534:	ldr	x9, [x26]
  421538:	ldr	x12, [sp, #56]
  42153c:	ldr	x14, [sp, #16]
  421540:	mov	w8, wzr
  421544:	mov	w13, #0xa                   	// #10
  421548:	mov	w11, #0x10                  	// #16
  42154c:	str	x9, [x0]
  421550:	str	x0, [x26]
  421554:	str	wzr, [x25]
  421558:	b	4214b0 <_obstack_memory_used@@Base+0x731c>
  42155c:	ldr	w8, [x25]
  421560:	cmp	w8, #0xf
  421564:	b.eq	421634 <_obstack_memory_used@@Base+0x74a0>  // b.none
  421568:	ldr	x0, [x26]
  42156c:	add	w9, w8, #0x1
  421570:	sxtw	x8, w8
  421574:	add	x21, x0, x8, lsl #6
  421578:	str	w9, [x25]
  42157c:	str	xzr, [x21, #8]!
  421580:	stp	x20, x19, [x21, #8]
  421584:	stp	xzr, xzr, [x21, #32]
  421588:	str	w11, [x21, #48]
  42158c:	str	xzr, [x21, #24]
  421590:	str	x28, [x21, #56]
  421594:	str	x21, [x20]
  421598:	cbz	x19, 421c84 <_obstack_memory_used@@Base+0x7af0>
  42159c:	str	x21, [x19]
  4215a0:	ldr	w8, [x25]
  4215a4:	cmp	w8, #0xf
  4215a8:	b.eq	42163c <_obstack_memory_used@@Base+0x74a8>  // b.none
  4215ac:	ldr	x0, [x26]
  4215b0:	add	w9, w8, #0x1
  4215b4:	sxtw	x8, w8
  4215b8:	add	x20, x0, x8, lsl #6
  4215bc:	cmp	x22, x23
  4215c0:	str	w9, [x25]
  4215c4:	str	xzr, [x20, #8]!
  4215c8:	stp	x21, xzr, [x20, #8]
  4215cc:	stp	xzr, xzr, [x20, #32]
  4215d0:	str	w13, [x20, #48]
  4215d4:	str	xzr, [x20, #24]
  4215d8:	str	x28, [x20, #56]
  4215dc:	str	x20, [x21]
  4215e0:	b.ge	4216b8 <_obstack_memory_used@@Base+0x7524>  // b.tcont
  4215e4:	ldr	x27, [x19]
  4215e8:	add	x22, x22, #0x1
  4215ec:	mov	x21, x19
  4215f0:	ldr	w8, [x25]
  4215f4:	cmp	w8, #0xf
  4215f8:	b.ne	421430 <_obstack_memory_used@@Base+0x729c>  // b.any
  4215fc:	mov	w0, #0x3c8                 	// #968
  421600:	str	x14, [sp, #16]
  421604:	bl	4023a0 <malloc@plt>
  421608:	cbz	x0, 421674 <_obstack_memory_used@@Base+0x74e0>
  42160c:	ldr	x9, [x26]
  421610:	ldr	x12, [sp, #56]
  421614:	ldr	x14, [sp, #16]
  421618:	mov	w8, wzr
  42161c:	mov	w13, #0xa                   	// #10
  421620:	mov	w11, #0x10                  	// #16
  421624:	str	x9, [x0]
  421628:	str	x0, [x26]
  42162c:	str	wzr, [x25]
  421630:	b	421434 <_obstack_memory_used@@Base+0x72a0>
  421634:	str	x14, [sp, #16]
  421638:	b	421684 <_obstack_memory_used@@Base+0x74f0>
  42163c:	mov	w0, #0x3c8                 	// #968
  421640:	mov	x20, x14
  421644:	bl	4023a0 <malloc@plt>
  421648:	ldr	x12, [sp, #56]
  42164c:	mov	w11, #0x10                  	// #16
  421650:	mov	w13, #0xa                   	// #10
  421654:	cbz	x0, 421c84 <_obstack_memory_used@@Base+0x7af0>
  421658:	ldr	x9, [x26]
  42165c:	mov	x14, x20
  421660:	mov	w8, wzr
  421664:	str	x9, [x0]
  421668:	str	x0, [x26]
  42166c:	str	wzr, [x25]
  421670:	b	4215b0 <_obstack_memory_used@@Base+0x741c>
  421674:	str	xzr, [sp, #80]
  421678:	b	421680 <_obstack_memory_used@@Base+0x74ec>
  42167c:	str	xzr, [x24]
  421680:	mov	x19, xzr
  421684:	mov	w0, #0x3c8                 	// #968
  421688:	bl	4023a0 <malloc@plt>
  42168c:	ldr	x12, [sp, #56]
  421690:	ldr	x14, [sp, #16]
  421694:	mov	w13, #0xa                   	// #10
  421698:	mov	w11, #0x10                  	// #16
  42169c:	cbz	x0, 421c84 <_obstack_memory_used@@Base+0x7af0>
  4216a0:	ldr	x9, [x26]
  4216a4:	mov	w8, wzr
  4216a8:	str	x9, [x0]
  4216ac:	str	x0, [x26]
  4216b0:	str	wzr, [x25]
  4216b4:	b	42156c <_obstack_memory_used@@Base+0x73d8>
  4216b8:	mov	x27, x20
  4216bc:	ldp	x20, x21, [sp, #32]
  4216c0:	mov	w23, #0x1                   	// #1
  4216c4:	cbz	x14, 421710 <_obstack_memory_used@@Base+0x757c>
  4216c8:	ldr	w8, [x25]
  4216cc:	cmp	w8, #0xf
  4216d0:	b.eq	421a8c <_obstack_memory_used@@Base+0x78f8>  // b.none
  4216d4:	ldr	x0, [x26]
  4216d8:	add	w9, w8, #0x1
  4216dc:	sxtw	x8, w8
  4216e0:	add	x8, x0, x8, lsl #6
  4216e4:	str	w9, [x25]
  4216e8:	str	xzr, [x8, #8]!
  4216ec:	stp	x14, x27, [x8, #8]
  4216f0:	stp	xzr, xzr, [x8, #32]
  4216f4:	str	w11, [x8, #48]
  4216f8:	str	xzr, [x8, #24]
  4216fc:	str	x28, [x8, #56]
  421700:	str	x8, [x14]
  421704:	mov	x14, x8
  421708:	str	x8, [x27]
  42170c:	b	421714 <_obstack_memory_used@@Base+0x7580>
  421710:	mov	x14, x27
  421714:	mov	w8, wzr
  421718:	b	421cb4 <_obstack_memory_used@@Base+0x7b20>
  42171c:	ldr	x12, [sp, #56]
  421720:	mov	x14, xzr
  421724:	b	421c98 <_obstack_memory_used@@Base+0x7b04>
  421728:	mov	x8, x19
  42172c:	mov	w23, #0x1                   	// #1
  421730:	mov	x19, x8
  421734:	ldr	x8, [x8, #8]
  421738:	cbnz	x8, 421730 <_obstack_memory_used@@Base+0x759c>
  42173c:	ldr	x8, [x19, #16]
  421740:	cbnz	x8, 421730 <_obstack_memory_used@@Base+0x759c>
  421744:	ldr	w8, [x19, #48]
  421748:	mov	w9, #0xff                  	// #255
  42174c:	movk	w9, #0x4, lsl #16
  421750:	and	w8, w8, w9
  421754:	cmp	w8, #0x3
  421758:	b.eq	42178c <_obstack_memory_used@@Base+0x75f8>  // b.none
  42175c:	cmp	w8, #0x6
  421760:	b.ne	4217a0 <_obstack_memory_used@@Base+0x760c>  // b.any
  421764:	ldr	x23, [x19, #40]
  421768:	ldr	x0, [x23]
  42176c:	bl	402620 <free@plt>
  421770:	ldr	x0, [x23, #8]
  421774:	bl	402620 <free@plt>
  421778:	ldr	x0, [x23, #16]
  42177c:	bl	402620 <free@plt>
  421780:	ldr	x0, [x23, #24]
  421784:	bl	402620 <free@plt>
  421788:	b	421790 <_obstack_memory_used@@Base+0x75fc>
  42178c:	ldr	x23, [x19, #40]
  421790:	mov	x0, x23
  421794:	bl	402620 <free@plt>
  421798:	ldr	x12, [sp, #56]
  42179c:	mov	w23, #0x1                   	// #1
  4217a0:	ldr	x9, [x19]
  4217a4:	cbz	x9, 4217c4 <_obstack_memory_used@@Base+0x7630>
  4217a8:	ldr	x8, [x9, #16]
  4217ac:	cmp	x8, x19
  4217b0:	mov	x19, x9
  4217b4:	b.eq	421744 <_obstack_memory_used@@Base+0x75b0>  // b.none
  4217b8:	mov	x19, x9
  4217bc:	cbz	x8, 421744 <_obstack_memory_used@@Base+0x75b0>
  4217c0:	b	421730 <_obstack_memory_used@@Base+0x759c>
  4217c4:	mov	x14, xzr
  4217c8:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  4217cc:	mov	x14, x19
  4217d0:	mov	x15, x19
  4217d4:	mov	w11, #0x10                  	// #16
  4217d8:	b.ne	42184c <_obstack_memory_used@@Base+0x76b8>  // b.any
  4217dc:	ldr	x21, [sp, #40]
  4217e0:	cmp	x22, x23
  4217e4:	b.ne	421ac0 <_obstack_memory_used@@Base+0x792c>  // b.any
  4217e8:	ldr	x20, [sp, #32]
  4217ec:	mov	w23, #0x1                   	// #1
  4217f0:	b	421714 <_obstack_memory_used@@Base+0x7580>
  4217f4:	mov	w0, #0x3c8                 	// #968
  4217f8:	mov	x20, x14
  4217fc:	bl	4023a0 <malloc@plt>
  421800:	ldr	x12, [sp, #56]
  421804:	mov	w13, #0xa                   	// #10
  421808:	mov	w11, #0x10                  	// #16
  42180c:	cbz	x0, 421c84 <_obstack_memory_used@@Base+0x7af0>
  421810:	ldr	x9, [x26]
  421814:	mov	x14, x20
  421818:	mov	w8, wzr
  42181c:	str	x9, [x0]
  421820:	str	x0, [x26]
  421824:	str	wzr, [x25]
  421828:	b	4213e8 <_obstack_memory_used@@Base+0x7254>
  42182c:	mov	w23, #0x1                   	// #1
  421830:	tbz	w21, #21, 421c1c <_obstack_memory_used@@Base+0x7a88>
  421834:	str	x19, [x20, #72]
  421838:	ldur	q0, [x29, #-80]
  42183c:	ldr	x14, [sp, #48]
  421840:	str	q0, [x12]
  421844:	strb	w23, [x12, #8]
  421848:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  42184c:	ldr	x14, [x19]
  421850:	mov	x15, x19
  421854:	mov	w21, #0x2                   	// #2
  421858:	ldr	w8, [x25]
  42185c:	cmp	w8, #0xf
  421860:	b.eq	4219f4 <_obstack_memory_used@@Base+0x7860>  // b.none
  421864:	ldr	x0, [x26]
  421868:	add	w10, w8, #0x1
  42186c:	sxtw	x8, w8
  421870:	add	x20, x0, x8, lsl #6
  421874:	str	w10, [x25]
  421878:	str	xzr, [x20, #8]!
  42187c:	add	x9, x15, #0x28
  421880:	stp	xzr, xzr, [x20, #8]
  421884:	ldr	q0, [x9]
  421888:	add	x27, sp, #0x50
  42188c:	stp	xzr, xzr, [x20, #24]
  421890:	str	x28, [x20, #56]
  421894:	stur	q0, [x20, #40]
  421898:	ldr	w8, [x20, #48]
  42189c:	and	w8, w8, #0xfff3ffff
  4218a0:	str	w8, [x20, #48]
  4218a4:	mov	x8, x20
  4218a8:	str	x20, [sp, #80]
  4218ac:	str	x14, [x8]
  4218b0:	ldr	x8, [x27]
  4218b4:	ldr	w9, [x8, #48]
  4218b8:	orr	w9, w9, #0x40000
  4218bc:	str	w9, [x8, #48]
  4218c0:	ldr	x8, [x15, #8]
  4218c4:	ldr	x14, [x27]
  4218c8:	cbz	x8, 421930 <_obstack_memory_used@@Base+0x779c>
  4218cc:	add	x27, x14, #0x8
  4218d0:	mov	x15, x8
  4218d4:	ldr	w8, [x25]
  4218d8:	cmp	w8, #0xf
  4218dc:	b.eq	421958 <_obstack_memory_used@@Base+0x77c4>  // b.none
  4218e0:	ldr	x0, [x26]
  4218e4:	add	w10, w8, #0x1
  4218e8:	sxtw	x8, w8
  4218ec:	add	x8, x0, x8, lsl #6
  4218f0:	str	w10, [x25]
  4218f4:	str	xzr, [x8, #8]!
  4218f8:	add	x9, x15, #0x28
  4218fc:	stp	xzr, xzr, [x8, #8]
  421900:	ldr	q0, [x9]
  421904:	stp	xzr, xzr, [x8, #24]
  421908:	str	x28, [x8, #56]
  42190c:	stur	q0, [x8, #40]
  421910:	ldr	w9, [x8, #48]
  421914:	and	w9, w9, #0xfff3ffff
  421918:	str	w9, [x8, #48]
  42191c:	str	x8, [x27]
  421920:	b	4218ac <_obstack_memory_used@@Base+0x7718>
  421924:	ldr	x15, [x8]
  421928:	ldr	x14, [x14]
  42192c:	cbz	x15, 421998 <_obstack_memory_used@@Base+0x7804>
  421930:	mov	x9, x8
  421934:	mov	x8, x15
  421938:	ldr	x15, [x15, #16]
  42193c:	cmp	x15, x9
  421940:	b.eq	421924 <_obstack_memory_used@@Base+0x7790>  // b.none
  421944:	cbz	x15, 421924 <_obstack_memory_used@@Base+0x7790>
  421948:	add	x27, x14, #0x10
  42194c:	ldr	w8, [x25]
  421950:	cmp	w8, #0xf
  421954:	b.ne	4218e0 <_obstack_memory_used@@Base+0x774c>  // b.any
  421958:	mov	w0, #0x3c8                 	// #968
  42195c:	str	x15, [sp, #16]
  421960:	mov	x24, x14
  421964:	bl	4023a0 <malloc@plt>
  421968:	cbz	x0, 421a3c <_obstack_memory_used@@Base+0x78a8>
  42196c:	ldr	x9, [x26]
  421970:	ldr	x12, [sp, #56]
  421974:	ldr	x15, [sp, #16]
  421978:	mov	w8, wzr
  42197c:	mov	w13, #0xa                   	// #10
  421980:	mov	w11, #0x10                  	// #16
  421984:	mov	x14, x24
  421988:	str	x9, [x0]
  42198c:	str	x0, [x26]
  421990:	str	wzr, [x25]
  421994:	b	4218e4 <_obstack_memory_used@@Base+0x7750>
  421998:	ldr	w8, [x25]
  42199c:	cmp	w8, #0xf
  4219a0:	b.eq	421a44 <_obstack_memory_used@@Base+0x78b0>  // b.none
  4219a4:	ldr	x0, [x26]
  4219a8:	mov	x15, x20
  4219ac:	add	w9, w8, #0x1
  4219b0:	sxtw	x8, w8
  4219b4:	add	x14, x0, x8, lsl #6
  4219b8:	str	w9, [x25]
  4219bc:	str	xzr, [x14, #8]!
  4219c0:	stp	x19, x15, [x14, #8]
  4219c4:	stp	xzr, xzr, [x14, #32]
  4219c8:	str	w11, [x14, #48]
  4219cc:	str	xzr, [x14, #24]
  4219d0:	str	x28, [x14, #56]
  4219d4:	str	x14, [x19]
  4219d8:	cbz	x15, 421c84 <_obstack_memory_used@@Base+0x7af0>
  4219dc:	cmp	x21, x22
  4219e0:	add	x21, x21, #0x1
  4219e4:	mov	x19, x14
  4219e8:	str	x14, [x15]
  4219ec:	b.ne	421858 <_obstack_memory_used@@Base+0x76c4>  // b.any
  4219f0:	b	4217dc <_obstack_memory_used@@Base+0x7648>
  4219f4:	mov	w0, #0x3c8                 	// #968
  4219f8:	mov	x24, x15
  4219fc:	mov	x20, x14
  421a00:	bl	4023a0 <malloc@plt>
  421a04:	cbz	x0, 421a34 <_obstack_memory_used@@Base+0x78a0>
  421a08:	ldr	x9, [x26]
  421a0c:	ldr	x12, [sp, #56]
  421a10:	mov	w8, wzr
  421a14:	mov	w13, #0xa                   	// #10
  421a18:	mov	w11, #0x10                  	// #16
  421a1c:	mov	x14, x20
  421a20:	mov	x15, x24
  421a24:	str	x9, [x0]
  421a28:	str	x0, [x26]
  421a2c:	str	wzr, [x25]
  421a30:	b	421868 <_obstack_memory_used@@Base+0x76d4>
  421a34:	str	xzr, [sp, #80]
  421a38:	b	421a40 <_obstack_memory_used@@Base+0x78ac>
  421a3c:	str	xzr, [x27]
  421a40:	mov	x20, xzr
  421a44:	mov	w0, #0x3c8                 	// #968
  421a48:	bl	4023a0 <malloc@plt>
  421a4c:	ldr	x12, [sp, #56]
  421a50:	mov	w13, #0xa                   	// #10
  421a54:	mov	w11, #0x10                  	// #16
  421a58:	cbz	x0, 421c84 <_obstack_memory_used@@Base+0x7af0>
  421a5c:	ldr	x9, [x26]
  421a60:	mov	x15, x20
  421a64:	mov	w8, wzr
  421a68:	str	x9, [x0]
  421a6c:	str	x0, [x26]
  421a70:	str	wzr, [x25]
  421a74:	b	4219ac <_obstack_memory_used@@Base+0x7818>
  421a78:	ldr	x8, [sp, #24]
  421a7c:	mov	x14, xzr
  421a80:	mov	w23, #0x1                   	// #1
  421a84:	str	w11, [x8]
  421a88:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  421a8c:	mov	w0, #0x3c8                 	// #968
  421a90:	mov	x19, x14
  421a94:	bl	4023a0 <malloc@plt>
  421a98:	cbz	x0, 421c10 <_obstack_memory_used@@Base+0x7a7c>
  421a9c:	ldr	x9, [x26]
  421aa0:	ldr	x12, [sp, #56]
  421aa4:	mov	w8, wzr
  421aa8:	mov	w11, #0x10                  	// #16
  421aac:	mov	x14, x19
  421ab0:	str	x9, [x0]
  421ab4:	str	x0, [x26]
  421ab8:	str	wzr, [x25]
  421abc:	b	4216d8 <_obstack_memory_used@@Base+0x7544>
  421ac0:	mov	x20, x15
  421ac4:	ldr	x19, [x20], #40
  421ac8:	ldr	w8, [x25]
  421acc:	cmp	w8, #0xf
  421ad0:	b.eq	421c38 <_obstack_memory_used@@Base+0x7aa4>  // b.none
  421ad4:	ldr	x0, [x26]
  421ad8:	add	w9, w8, #0x1
  421adc:	sxtw	x8, w8
  421ae0:	add	x21, x0, x8, lsl #6
  421ae4:	str	w9, [x25]
  421ae8:	str	xzr, [x21, #8]!
  421aec:	stp	xzr, xzr, [x21, #8]
  421af0:	ldr	q0, [x20]
  421af4:	add	x20, sp, #0x50
  421af8:	stp	xzr, xzr, [x21, #24]
  421afc:	str	x28, [x21, #56]
  421b00:	stur	q0, [x21, #40]
  421b04:	ldr	w8, [x21, #48]
  421b08:	and	w8, w8, #0xfff3ffff
  421b0c:	str	w8, [x21, #48]
  421b10:	mov	x8, x21
  421b14:	str	x21, [sp, #80]
  421b18:	str	x19, [x8]
  421b1c:	ldr	x8, [x20]
  421b20:	ldr	w9, [x8, #48]
  421b24:	orr	w9, w9, #0x40000
  421b28:	str	w9, [x8, #48]
  421b2c:	ldr	x8, [x15, #8]
  421b30:	ldr	x19, [x20]
  421b34:	cbz	x8, 421b50 <_obstack_memory_used@@Base+0x79bc>
  421b38:	add	x20, x19, #0x8
  421b3c:	mov	x15, x8
  421b40:	b	421b6c <_obstack_memory_used@@Base+0x79d8>
  421b44:	ldr	x15, [x8]
  421b48:	ldr	x19, [x19]
  421b4c:	cbz	x15, 42135c <_obstack_memory_used@@Base+0x71c8>
  421b50:	mov	x9, x8
  421b54:	mov	x8, x15
  421b58:	ldr	x15, [x15, #16]
  421b5c:	cmp	x15, x9
  421b60:	b.eq	421b44 <_obstack_memory_used@@Base+0x79b0>  // b.none
  421b64:	cbz	x15, 421b44 <_obstack_memory_used@@Base+0x79b0>
  421b68:	add	x20, x19, #0x10
  421b6c:	ldr	w8, [x25]
  421b70:	cmp	w8, #0xf
  421b74:	b.eq	421bbc <_obstack_memory_used@@Base+0x7a28>  // b.none
  421b78:	ldr	x0, [x26]
  421b7c:	add	w10, w8, #0x1
  421b80:	sxtw	x8, w8
  421b84:	add	x8, x0, x8, lsl #6
  421b88:	str	w10, [x25]
  421b8c:	str	xzr, [x8, #8]!
  421b90:	add	x9, x15, #0x28
  421b94:	stp	xzr, xzr, [x8, #8]
  421b98:	ldr	q0, [x9]
  421b9c:	stp	xzr, xzr, [x8, #24]
  421ba0:	str	x28, [x8, #56]
  421ba4:	stur	q0, [x8, #40]
  421ba8:	ldr	w9, [x8, #48]
  421bac:	and	w9, w9, #0xfff3ffff
  421bb0:	str	w9, [x8, #48]
  421bb4:	str	x8, [x20]
  421bb8:	b	421b18 <_obstack_memory_used@@Base+0x7984>
  421bbc:	mov	w0, #0x3c8                 	// #968
  421bc0:	mov	x27, x15
  421bc4:	mov	x24, x14
  421bc8:	bl	4023a0 <malloc@plt>
  421bcc:	cbz	x0, 421c7c <_obstack_memory_used@@Base+0x7ae8>
  421bd0:	ldr	x9, [x26]
  421bd4:	ldr	x12, [sp, #56]
  421bd8:	mov	w8, wzr
  421bdc:	mov	w13, #0xa                   	// #10
  421be0:	mov	x14, x24
  421be4:	mov	x15, x27
  421be8:	str	x9, [x0]
  421bec:	str	x0, [x26]
  421bf0:	str	wzr, [x25]
  421bf4:	b	421b7c <_obstack_memory_used@@Base+0x79e8>
  421bf8:	ldr	x8, [sp, #24]
  421bfc:	mov	w9, #0xf                   	// #15
  421c00:	mov	x14, xzr
  421c04:	mov	w23, #0x1                   	// #1
  421c08:	str	w9, [x8]
  421c0c:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  421c10:	ldr	x12, [sp, #56]
  421c14:	mov	x14, xzr
  421c18:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  421c1c:	ldr	x9, [sp, #24]
  421c20:	cmp	w8, #0x2
  421c24:	mov	w8, #0x9                   	// #9
  421c28:	cinc	w8, w8, ne  // ne = any
  421c2c:	mov	x14, xzr
  421c30:	str	w8, [x9]
  421c34:	b	421c9c <_obstack_memory_used@@Base+0x7b08>
  421c38:	mov	w0, #0x3c8                 	// #968
  421c3c:	mov	x24, x15
  421c40:	mov	x21, x14
  421c44:	bl	4023a0 <malloc@plt>
  421c48:	cbz	x0, 421c74 <_obstack_memory_used@@Base+0x7ae0>
  421c4c:	ldr	x9, [x26]
  421c50:	ldr	x12, [sp, #56]
  421c54:	mov	w8, wzr
  421c58:	mov	w13, #0xa                   	// #10
  421c5c:	mov	x14, x21
  421c60:	mov	x15, x24
  421c64:	str	x9, [x0]
  421c68:	str	x0, [x26]
  421c6c:	str	wzr, [x25]
  421c70:	b	421ad8 <_obstack_memory_used@@Base+0x7944>
  421c74:	str	xzr, [sp, #80]
  421c78:	b	421c80 <_obstack_memory_used@@Base+0x7aec>
  421c7c:	str	xzr, [x20]
  421c80:	ldr	x12, [sp, #56]
  421c84:	ldp	x8, x20, [sp, #24]
  421c88:	ldr	x21, [sp, #40]
  421c8c:	mov	w9, #0xc                   	// #12
  421c90:	mov	x14, xzr
  421c94:	str	w9, [x8]
  421c98:	mov	w23, #0x1                   	// #1
  421c9c:	cmp	x14, #0x0
  421ca0:	cset	w8, eq  // eq = none
  421ca4:	cbnz	x14, 421cb4 <_obstack_memory_used@@Base+0x7b20>
  421ca8:	ldr	x9, [sp, #24]
  421cac:	ldr	w9, [x9]
  421cb0:	cbnz	w9, 421f28 <_obstack_memory_used@@Base+0x7d94>
  421cb4:	mov	x24, x14
  421cb8:	tbz	w21, #24, 4210f4 <_obstack_memory_used@@Base+0x6f60>
  421cbc:	ldrb	w9, [x12, #8]
  421cc0:	cmp	w9, #0x17
  421cc4:	b.eq	421cd4 <_obstack_memory_used@@Base+0x7b40>  // b.none
  421cc8:	cmp	w9, #0xb
  421ccc:	mov	x24, x14
  421cd0:	b.ne	4210f4 <_obstack_memory_used@@Base+0x6f60>  // b.any
  421cd4:	ldr	x22, [sp, #24]
  421cd8:	tbz	w8, #0, 421d14 <_obstack_memory_used@@Base+0x7b80>
  421cdc:	mov	x24, xzr
  421ce0:	mov	w8, #0xd                   	// #13
  421ce4:	str	w8, [x22]
  421ce8:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  421cec:	ldr	x24, [sp, #48]
  421cf0:	mov	x0, x24
  421cf4:	ldp	x20, x19, [sp, #272]
  421cf8:	ldp	x22, x21, [sp, #256]
  421cfc:	ldp	x24, x23, [sp, #240]
  421d00:	ldp	x26, x25, [sp, #224]
  421d04:	ldp	x28, x27, [sp, #208]
  421d08:	ldp	x29, x30, [sp, #192]
  421d0c:	add	sp, sp, #0x120
  421d10:	ret
  421d14:	mov	w19, #0xff                  	// #255
  421d18:	movk	w19, #0x4, lsl #16
  421d1c:	mov	x21, x14
  421d20:	ldr	x14, [x14, #8]
  421d24:	cbnz	x14, 421d1c <_obstack_memory_used@@Base+0x7b88>
  421d28:	ldr	x14, [x21, #16]
  421d2c:	cbnz	x14, 421d1c <_obstack_memory_used@@Base+0x7b88>
  421d30:	ldr	w8, [x21, #48]
  421d34:	and	w8, w8, w19
  421d38:	cmp	w8, #0x3
  421d3c:	b.eq	421d70 <_obstack_memory_used@@Base+0x7bdc>  // b.none
  421d40:	cmp	w8, #0x6
  421d44:	b.ne	421d7c <_obstack_memory_used@@Base+0x7be8>  // b.any
  421d48:	ldr	x20, [x21, #40]
  421d4c:	ldr	x0, [x20]
  421d50:	bl	402620 <free@plt>
  421d54:	ldr	x0, [x20, #8]
  421d58:	bl	402620 <free@plt>
  421d5c:	ldr	x0, [x20, #16]
  421d60:	bl	402620 <free@plt>
  421d64:	ldr	x0, [x20, #24]
  421d68:	bl	402620 <free@plt>
  421d6c:	b	421d74 <_obstack_memory_used@@Base+0x7be0>
  421d70:	ldr	x20, [x21, #40]
  421d74:	mov	x0, x20
  421d78:	bl	402620 <free@plt>
  421d7c:	ldr	x8, [x21]
  421d80:	cbz	x8, 421cdc <_obstack_memory_used@@Base+0x7b48>
  421d84:	ldr	x14, [x8, #16]
  421d88:	cmp	x14, x21
  421d8c:	mov	x21, x8
  421d90:	b.eq	421d30 <_obstack_memory_used@@Base+0x7b9c>  // b.none
  421d94:	mov	x21, x8
  421d98:	cbz	x14, 421d30 <_obstack_memory_used@@Base+0x7b9c>
  421d9c:	b	421d1c <_obstack_memory_used@@Base+0x7b88>
  421da0:	mov	w8, #0x5                   	// #5
  421da4:	str	w8, [x14]
  421da8:	ldr	w8, [x23, #128]
  421dac:	ldr	x21, [sp, #40]
  421db0:	cmp	w8, #0xf
  421db4:	b.eq	42225c <_obstack_memory_used@@Base+0x80c8>  // b.none
  421db8:	ldr	x0, [x23, #112]
  421dbc:	add	w9, w8, #0x1
  421dc0:	sxtw	x8, w8
  421dc4:	add	x19, x0, x8, lsl #6
  421dc8:	str	w9, [x23, #128]
  421dcc:	str	xzr, [x19, #8]!
  421dd0:	stp	xzr, xzr, [x19, #8]
  421dd4:	ldr	q0, [x14]
  421dd8:	mov	x8, #0xffffffffffffffff    	// #-1
  421ddc:	str	x8, [x19, #56]
  421de0:	stp	xzr, xzr, [x19, #24]
  421de4:	stur	q0, [x19, #40]
  421de8:	ldr	w9, [x19, #48]
  421dec:	and	w8, w9, #0xfff3ffff
  421df0:	str	w8, [x19, #48]
  421df4:	mov	w8, #0xa                   	// #10
  421df8:	str	w8, [x14]
  421dfc:	ldr	w8, [x23, #128]
  421e00:	cmp	w8, #0xf
  421e04:	b.eq	420598 <_obstack_memory_used@@Base+0x6404>  // b.none
  421e08:	ldr	x0, [x23, #112]
  421e0c:	add	w9, w8, #0x1
  421e10:	sxtw	x8, w8
  421e14:	add	x20, x0, x8, lsl #6
  421e18:	str	w9, [x23, #128]
  421e1c:	str	xzr, [x20, #8]!
  421e20:	stp	xzr, xzr, [x20, #8]
  421e24:	ldr	q0, [x14]
  421e28:	mov	x9, #0xffffffffffffffff    	// #-1
  421e2c:	stp	xzr, xzr, [x20, #24]
  421e30:	str	x9, [x20, #56]
  421e34:	stur	q0, [x20, #40]
  421e38:	ldr	w8, [x20, #48]
  421e3c:	and	w8, w8, #0xfff3ffff
  421e40:	str	w8, [x20, #48]
  421e44:	ldr	w8, [x23, #128]
  421e48:	cmp	w8, #0xf
  421e4c:	b.eq	422350 <_obstack_memory_used@@Base+0x81bc>  // b.none
  421e50:	ldr	x0, [x23, #112]
  421e54:	add	w9, w8, #0x1
  421e58:	sxtw	x8, w8
  421e5c:	add	x24, x0, x8, lsl #6
  421e60:	mov	w10, #0xa                   	// #10
  421e64:	mov	x11, #0xffffffffffffffff    	// #-1
  421e68:	str	w9, [x23, #128]
  421e6c:	str	xzr, [x24, #8]!
  421e70:	stp	x19, x20, [x24, #8]
  421e74:	stp	xzr, xzr, [x24, #32]
  421e78:	str	w10, [x24, #48]
  421e7c:	str	xzr, [x24, #24]
  421e80:	str	x11, [x24, #56]
  421e84:	cbz	x19, 421e8c <_obstack_memory_used@@Base+0x7cf8>
  421e88:	str	x24, [x19]
  421e8c:	cbz	x20, 422378 <_obstack_memory_used@@Base+0x81e4>
  421e90:	str	x24, [x20]
  421e94:	cbnz	x19, 421ee4 <_obstack_memory_used@@Base+0x7d50>
  421e98:	b	422378 <_obstack_memory_used@@Base+0x81e4>
  421e9c:	ldr	w8, [x23, #128]
  421ea0:	cmp	w8, #0xf
  421ea4:	b.eq	422288 <_obstack_memory_used@@Base+0x80f4>  // b.none
  421ea8:	ldr	x0, [x23, #112]
  421eac:	add	w9, w8, #0x1
  421eb0:	sxtw	x8, w8
  421eb4:	add	x24, x0, x8, lsl #6
  421eb8:	str	w9, [x23, #128]
  421ebc:	str	xzr, [x24, #8]!
  421ec0:	stp	xzr, xzr, [x24, #8]
  421ec4:	ldr	q0, [x14]
  421ec8:	mov	x9, #0xffffffffffffffff    	// #-1
  421ecc:	stp	xzr, xzr, [x24, #24]
  421ed0:	str	x9, [x24, #56]
  421ed4:	stur	q0, [x24, #40]
  421ed8:	ldr	w8, [x24, #48]
  421edc:	and	w8, w8, #0xfff3ffff
  421ee0:	str	w8, [x24, #48]
  421ee4:	ldr	x19, [sp, #32]
  421ee8:	mov	x0, x14
  421eec:	mov	x2, x21
  421ef0:	mov	x1, x19
  421ef4:	bl	41fa04 <_obstack_memory_used@@Base+0x5870>
  421ef8:	ldr	x8, [x19, #72]
  421efc:	add	x8, x8, w0, sxtw
  421f00:	str	x8, [x19, #72]
  421f04:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  421f08:	ldrb	w8, [x20, #8]
  421f0c:	mov	x25, x0
  421f10:	cmp	w8, #0x9
  421f14:	b.ne	422388 <_obstack_memory_used@@Base+0x81f4>  // b.any
  421f18:	mov	x14, x20
  421f1c:	cmp	x19, #0x8
  421f20:	b.ls	420920 <_obstack_memory_used@@Base+0x678c>  // b.plast
  421f24:	b	420938 <_obstack_memory_used@@Base+0x67a4>
  421f28:	ldr	x9, [sp, #48]
  421f2c:	cbz	x9, 420a40 <_obstack_memory_used@@Base+0x68ac>
  421f30:	mov	w20, #0xff                  	// #255
  421f34:	movk	w20, #0x4, lsl #16
  421f38:	mov	x21, x9
  421f3c:	ldr	x9, [x9, #8]
  421f40:	cbnz	x9, 421f38 <_obstack_memory_used@@Base+0x7da4>
  421f44:	ldr	x9, [x21, #16]
  421f48:	cbnz	x9, 421f38 <_obstack_memory_used@@Base+0x7da4>
  421f4c:	ldr	w8, [x21, #48]
  421f50:	and	w8, w8, w20
  421f54:	cmp	w8, #0x3
  421f58:	b.eq	421f8c <_obstack_memory_used@@Base+0x7df8>  // b.none
  421f5c:	cmp	w8, #0x6
  421f60:	b.ne	421f98 <_obstack_memory_used@@Base+0x7e04>  // b.any
  421f64:	ldr	x19, [x21, #40]
  421f68:	ldr	x0, [x19]
  421f6c:	bl	402620 <free@plt>
  421f70:	ldr	x0, [x19, #8]
  421f74:	bl	402620 <free@plt>
  421f78:	ldr	x0, [x19, #16]
  421f7c:	bl	402620 <free@plt>
  421f80:	ldr	x0, [x19, #24]
  421f84:	bl	402620 <free@plt>
  421f88:	b	421f90 <_obstack_memory_used@@Base+0x7dfc>
  421f8c:	ldr	x19, [x21, #40]
  421f90:	mov	x0, x19
  421f94:	bl	402620 <free@plt>
  421f98:	ldr	x8, [x21]
  421f9c:	cbz	x8, 420a40 <_obstack_memory_used@@Base+0x68ac>
  421fa0:	ldr	x9, [x8, #16]
  421fa4:	cmp	x9, x21
  421fa8:	mov	x21, x8
  421fac:	b.eq	421f4c <_obstack_memory_used@@Base+0x7db8>  // b.none
  421fb0:	mov	x21, x8
  421fb4:	cbz	x9, 421f4c <_obstack_memory_used@@Base+0x7db8>
  421fb8:	b	421f38 <_obstack_memory_used@@Base+0x7da4>
  421fbc:	cmp	w8, #0x2
  421fc0:	b.lt	421fd4 <_obstack_memory_used@@Base+0x7e40>  // b.tstop
  421fc4:	ldr	x8, [x24, #72]
  421fc8:	cbnz	x8, 420fc8 <_obstack_memory_used@@Base+0x6e34>
  421fcc:	ldrb	w8, [x24, #32]
  421fd0:	tbnz	w8, #0, 420fc8 <_obstack_memory_used@@Base+0x6e34>
  421fd4:	ldr	x0, [x24]
  421fd8:	bl	402620 <free@plt>
  421fdc:	ldr	x0, [x24, #8]
  421fe0:	bl	402620 <free@plt>
  421fe4:	ldr	x0, [x24, #16]
  421fe8:	bl	402620 <free@plt>
  421fec:	ldr	x0, [x24, #24]
  421ff0:	bl	402620 <free@plt>
  421ff4:	mov	x0, x24
  421ff8:	bl	402620 <free@plt>
  421ffc:	ldr	w8, [x23, #128]
  422000:	cmp	w8, #0xf
  422004:	b.eq	422460 <_obstack_memory_used@@Base+0x82cc>  // b.none
  422008:	ldr	x0, [x23, #112]
  42200c:	ldr	x14, [sp, #56]
  422010:	add	w9, w8, #0x1
  422014:	sxtw	x8, w8
  422018:	add	x24, x0, x8, lsl #6
  42201c:	mov	w10, #0x3                   	// #3
  422020:	mov	x11, #0xffffffffffffffff    	// #-1
  422024:	str	w9, [x23, #128]
  422028:	str	xzr, [x24, #8]!
  42202c:	stp	xzr, xzr, [x24, #16]
  422030:	str	xzr, [x24, #8]
  422034:	str	w10, [x24, #48]
  422038:	stp	xzr, x25, [x24, #32]
  42203c:	str	x11, [x24, #56]
  422040:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  422044:	mov	x0, x25
  422048:	bl	402620 <free@plt>
  42204c:	ldr	x14, [sp, #56]
  422050:	mov	x24, x19
  422054:	b	4210bc <_obstack_memory_used@@Base+0x6f28>
  422058:	str	x28, [sp, #24]
  42205c:	mov	w0, #0x7                   	// #7
  422060:	b	4221bc <_obstack_memory_used@@Base+0x8028>
  422064:	str	x28, [sp, #24]
  422068:	b	4221bc <_obstack_memory_used@@Base+0x8028>
  42206c:	mov	w0, #0x3c8                 	// #968
  422070:	bl	4023a0 <malloc@plt>
  422074:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  422078:	ldr	x9, [x23, #112]
  42207c:	ldr	x14, [sp, #56]
  422080:	mov	w8, wzr
  422084:	str	x9, [x0]
  422088:	str	x0, [x23, #112]
  42208c:	str	wzr, [x23, #128]
  422090:	b	4204a8 <_obstack_memory_used@@Base+0x6314>
  422094:	mov	w8, #0x2                   	// #2
  422098:	b	422488 <_obstack_memory_used@@Base+0x82f4>
  42209c:	mov	x0, x25
  4220a0:	bl	402620 <free@plt>
  4220a4:	mov	x0, x24
  4220a8:	bl	402620 <free@plt>
  4220ac:	b	422378 <_obstack_memory_used@@Base+0x81e4>
  4220b0:	mov	w0, #0x3c8                 	// #968
  4220b4:	bl	4023a0 <malloc@plt>
  4220b8:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  4220bc:	ldr	x9, [x23, #112]
  4220c0:	ldr	x10, [sp, #32]
  4220c4:	ldr	x14, [sp, #56]
  4220c8:	mov	w8, wzr
  4220cc:	str	x9, [x0]
  4220d0:	str	x0, [x23, #112]
  4220d4:	str	wzr, [x23, #128]
  4220d8:	b	420644 <_obstack_memory_used@@Base+0x64b0>
  4220dc:	mov	w8, #0x6                   	// #6
  4220e0:	mov	x24, xzr
  4220e4:	str	w8, [x28]
  4220e8:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  4220ec:	mov	w0, #0x3c8                 	// #968
  4220f0:	bl	4023a0 <malloc@plt>
  4220f4:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  4220f8:	ldr	x9, [x23, #112]
  4220fc:	ldr	x14, [sp, #56]
  422100:	mov	w8, wzr
  422104:	str	x9, [x0]
  422108:	str	x0, [x23, #112]
  42210c:	str	wzr, [x23, #128]
  422110:	b	420880 <_obstack_memory_used@@Base+0x66ec>
  422114:	mov	w0, #0x3c8                 	// #968
  422118:	bl	4023a0 <malloc@plt>
  42211c:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  422120:	ldr	x9, [x23, #112]
  422124:	ldr	x14, [sp, #56]
  422128:	mov	w8, wzr
  42212c:	str	x9, [x0]
  422130:	str	x0, [x23, #112]
  422134:	str	wzr, [x23, #128]
  422138:	b	42081c <_obstack_memory_used@@Base+0x6688>
  42213c:	mov	w0, #0x3c8                 	// #968
  422140:	bl	4023a0 <malloc@plt>
  422144:	cbz	x0, 422484 <_obstack_memory_used@@Base+0x82f0>
  422148:	ldr	x9, [x23, #112]
  42214c:	ldr	x14, [sp, #56]
  422150:	mov	w8, wzr
  422154:	str	x9, [x0]
  422158:	str	x0, [x23, #112]
  42215c:	str	wzr, [x23, #128]
  422160:	b	420fe4 <_obstack_memory_used@@Base+0x6e50>
  422164:	mov	w0, #0x3c8                 	// #968
  422168:	bl	4023a0 <malloc@plt>
  42216c:	cbz	x0, 422484 <_obstack_memory_used@@Base+0x82f0>
  422170:	ldr	x9, [x23, #112]
  422174:	ldr	x14, [sp, #56]
  422178:	mov	w8, wzr
  42217c:	str	x9, [x0]
  422180:	str	x0, [x23, #112]
  422184:	str	wzr, [x23, #128]
  422188:	b	421044 <_obstack_memory_used@@Base+0x6eb0>
  42218c:	mov	w0, #0x3c8                 	// #968
  422190:	bl	4023a0 <malloc@plt>
  422194:	cbz	x0, 422484 <_obstack_memory_used@@Base+0x82f0>
  422198:	ldr	x9, [x23, #112]
  42219c:	ldr	x14, [sp, #56]
  4221a0:	mov	w8, wzr
  4221a4:	str	x9, [x0]
  4221a8:	str	x0, [x23, #112]
  4221ac:	str	wzr, [x23, #128]
  4221b0:	b	421084 <_obstack_memory_used@@Base+0x6ef0>
  4221b4:	str	x28, [sp, #24]
  4221b8:	mov	w0, #0x3                   	// #3
  4221bc:	ldr	x28, [sp, #24]
  4221c0:	str	w0, [x28]
  4221c4:	mov	x0, x25
  4221c8:	bl	402620 <free@plt>
  4221cc:	ldr	x0, [x24]
  4221d0:	bl	402620 <free@plt>
  4221d4:	ldr	x0, [x24, #8]
  4221d8:	bl	402620 <free@plt>
  4221dc:	ldr	x0, [x24, #16]
  4221e0:	bl	402620 <free@plt>
  4221e4:	ldr	x0, [x24, #24]
  4221e8:	bl	402620 <free@plt>
  4221ec:	mov	x0, x24
  4221f0:	bl	402620 <free@plt>
  4221f4:	ldr	w8, [x28]
  4221f8:	ldr	x14, [sp, #56]
  4221fc:	mov	x24, xzr
  422200:	cbz	w8, 4210bc <_obstack_memory_used@@Base+0x6f28>
  422204:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  422208:	mov	w0, #0x3c8                 	// #968
  42220c:	bl	4023a0 <malloc@plt>
  422210:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  422214:	ldr	x9, [x23, #112]
  422218:	ldr	x14, [sp, #56]
  42221c:	mov	w8, wzr
  422220:	str	x9, [x0]
  422224:	str	x0, [x23, #112]
  422228:	str	wzr, [x23, #128]
  42222c:	b	420948 <_obstack_memory_used@@Base+0x67b4>
  422230:	mov	w0, #0x3c8                 	// #968
  422234:	bl	4023a0 <malloc@plt>
  422238:	cbz	x0, 422430 <_obstack_memory_used@@Base+0x829c>
  42223c:	ldr	x9, [x23, #112]
  422240:	ldr	x21, [sp, #40]
  422244:	ldr	x14, [sp, #56]
  422248:	mov	w8, wzr
  42224c:	str	x9, [x0]
  422250:	str	x0, [x23, #112]
  422254:	str	wzr, [x23, #128]
  422258:	b	42054c <_obstack_memory_used@@Base+0x63b8>
  42225c:	mov	w0, #0x3c8                 	// #968
  422260:	bl	4023a0 <malloc@plt>
  422264:	cbz	x0, 42243c <_obstack_memory_used@@Base+0x82a8>
  422268:	ldr	x9, [x23, #112]
  42226c:	ldr	x21, [sp, #40]
  422270:	ldr	x14, [sp, #56]
  422274:	mov	w8, wzr
  422278:	str	x9, [x0]
  42227c:	str	x0, [x23, #112]
  422280:	str	wzr, [x23, #128]
  422284:	b	421dbc <_obstack_memory_used@@Base+0x7c28>
  422288:	mov	w0, #0x3c8                 	// #968
  42228c:	bl	4023a0 <malloc@plt>
  422290:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  422294:	ldr	x9, [x23, #112]
  422298:	ldr	x21, [sp, #40]
  42229c:	ldr	x14, [sp, #56]
  4222a0:	mov	w8, wzr
  4222a4:	str	x9, [x0]
  4222a8:	str	x0, [x23, #112]
  4222ac:	str	wzr, [x23, #128]
  4222b0:	b	421eac <_obstack_memory_used@@Base+0x7d18>
  4222b4:	mov	x20, xzr
  4222b8:	mov	x19, xzr
  4222bc:	b	4222c8 <_obstack_memory_used@@Base+0x8134>
  4222c0:	mov	w19, #0x2                   	// #2
  4222c4:	mov	w20, #0x80                  	// #128
  4222c8:	bl	402610 <__ctype_b_loc@plt>
  4222cc:	ldr	x8, [x0]
  4222d0:	ldr	x14, [sp, #56]
  4222d4:	mov	w9, #0x1                   	// #1
  4222d8:	add	x8, x8, x20, lsl #1
  4222dc:	b	4222f4 <_obstack_memory_used@@Base+0x8160>
  4222e0:	add	x19, x19, #0x1
  4222e4:	add	x20, x20, #0x40
  4222e8:	cmp	x19, #0x4
  4222ec:	add	x8, x8, #0x80
  4222f0:	b.eq	42051c <_obstack_memory_used@@Base+0x6388>  // b.none
  4222f4:	add	x11, x23, x19, lsl #3
  4222f8:	mov	x10, xzr
  4222fc:	add	x11, x11, #0xb8
  422300:	b	422320 <_obstack_memory_used@@Base+0x818c>
  422304:	ldr	x12, [x11]
  422308:	lsl	x13, x9, x10
  42230c:	orr	x12, x12, x13
  422310:	str	x12, [x11]
  422314:	add	x10, x10, #0x1
  422318:	cmp	x10, #0x40
  42231c:	b.eq	4222e0 <_obstack_memory_used@@Base+0x814c>  // b.none
  422320:	add	x12, x20, x10
  422324:	cmp	x12, #0x5f
  422328:	b.eq	422304 <_obstack_memory_used@@Base+0x8170>  // b.none
  42232c:	ldrh	w12, [x8, x10, lsl #1]
  422330:	tbz	w12, #3, 422314 <_obstack_memory_used@@Base+0x8180>
  422334:	b	422304 <_obstack_memory_used@@Base+0x8170>
  422338:	ldr	x21, [sp, #40]
  42233c:	ldr	x14, [sp, #56]
  422340:	mov	x20, xzr
  422344:	ldr	w8, [x23, #128]
  422348:	cmp	w8, #0xf
  42234c:	b.ne	421e50 <_obstack_memory_used@@Base+0x7cbc>  // b.any
  422350:	mov	w0, #0x3c8                 	// #968
  422354:	bl	4023a0 <malloc@plt>
  422358:	ldr	x14, [sp, #56]
  42235c:	cbz	x0, 422378 <_obstack_memory_used@@Base+0x81e4>
  422360:	ldr	x9, [x23, #112]
  422364:	mov	w8, wzr
  422368:	str	x9, [x0]
  42236c:	str	x0, [x23, #112]
  422370:	str	wzr, [x23, #128]
  422374:	b	421e54 <_obstack_memory_used@@Base+0x7cc0>
  422378:	mov	w8, #0xc                   	// #12
  42237c:	mov	x24, xzr
  422380:	str	w8, [x28]
  422384:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  422388:	cbz	x25, 422418 <_obstack_memory_used@@Base+0x8284>
  42238c:	mov	w19, #0xff                  	// #255
  422390:	movk	w19, #0x4, lsl #16
  422394:	mov	x21, x25
  422398:	ldr	x25, [x25, #8]
  42239c:	cbnz	x25, 422394 <_obstack_memory_used@@Base+0x8200>
  4223a0:	ldr	x25, [x21, #16]
  4223a4:	cbnz	x25, 422394 <_obstack_memory_used@@Base+0x8200>
  4223a8:	ldr	w8, [x21, #48]
  4223ac:	and	w8, w8, w19
  4223b0:	cmp	w8, #0x3
  4223b4:	b.eq	4223e8 <_obstack_memory_used@@Base+0x8254>  // b.none
  4223b8:	cmp	w8, #0x6
  4223bc:	b.ne	4223f4 <_obstack_memory_used@@Base+0x8260>  // b.any
  4223c0:	ldr	x20, [x21, #40]
  4223c4:	ldr	x0, [x20]
  4223c8:	bl	402620 <free@plt>
  4223cc:	ldr	x0, [x20, #8]
  4223d0:	bl	402620 <free@plt>
  4223d4:	ldr	x0, [x20, #16]
  4223d8:	bl	402620 <free@plt>
  4223dc:	ldr	x0, [x20, #24]
  4223e0:	bl	402620 <free@plt>
  4223e4:	b	4223ec <_obstack_memory_used@@Base+0x8258>
  4223e8:	ldr	x20, [x21, #40]
  4223ec:	mov	x0, x20
  4223f0:	bl	402620 <free@plt>
  4223f4:	ldr	x8, [x21]
  4223f8:	cbz	x8, 422418 <_obstack_memory_used@@Base+0x8284>
  4223fc:	ldr	x25, [x8, #16]
  422400:	cmp	x25, x21
  422404:	mov	x21, x8
  422408:	b.eq	4223a8 <_obstack_memory_used@@Base+0x8214>  // b.none
  42240c:	mov	x21, x8
  422410:	cbz	x25, 4223a8 <_obstack_memory_used@@Base+0x8214>
  422414:	b	422394 <_obstack_memory_used@@Base+0x8200>
  422418:	mov	w8, #0x8                   	// #8
  42241c:	mov	x24, xzr
  422420:	str	w8, [x28]
  422424:	b	421cf0 <_obstack_memory_used@@Base+0x7b5c>
  422428:	mov	w0, #0xb                   	// #11
  42242c:	b	4221bc <_obstack_memory_used@@Base+0x8028>
  422430:	mov	x19, xzr
  422434:	mov	w8, #0x9                   	// #9
  422438:	b	422444 <_obstack_memory_used@@Base+0x82b0>
  42243c:	mov	x19, xzr
  422440:	mov	w8, #0xa                   	// #10
  422444:	ldr	x21, [sp, #40]
  422448:	ldr	x14, [sp, #56]
  42244c:	str	w8, [x14]
  422450:	ldr	w8, [x23, #128]
  422454:	cmp	w8, #0xf
  422458:	b.ne	421e08 <_obstack_memory_used@@Base+0x7c74>  // b.any
  42245c:	b	420598 <_obstack_memory_used@@Base+0x6404>
  422460:	mov	w0, #0x3c8                 	// #968
  422464:	bl	4023a0 <malloc@plt>
  422468:	cbz	x0, 422484 <_obstack_memory_used@@Base+0x82f0>
  42246c:	ldr	x9, [x23, #112]
  422470:	mov	w8, wzr
  422474:	str	x9, [x0]
  422478:	str	x0, [x23, #112]
  42247c:	str	wzr, [x23, #128]
  422480:	b	42200c <_obstack_memory_used@@Base+0x7e78>
  422484:	mov	w8, #0xc                   	// #12
  422488:	str	w8, [x28]
  42248c:	b	4221c4 <_obstack_memory_used@@Base+0x8030>
  422490:	mov	x0, x22
  422494:	bl	402620 <free@plt>
  422498:	ldr	x0, [sp]
  42249c:	bl	402620 <free@plt>
  4224a0:	mov	w0, #0xc                   	// #12
  4224a4:	b	4221bc <_obstack_memory_used@@Base+0x8028>
  4224a8:	sub	sp, sp, #0x60
  4224ac:	stp	x26, x25, [sp, #32]
  4224b0:	stp	x20, x19, [sp, #80]
  4224b4:	mov	x26, x1
  4224b8:	mov	x20, x0
  4224bc:	mov	w0, #0x20                  	// #32
  4224c0:	mov	w1, #0x1                   	// #1
  4224c4:	stp	x29, x30, [sp, #16]
  4224c8:	stp	x24, x23, [sp, #48]
  4224cc:	stp	x22, x21, [sp, #64]
  4224d0:	add	x29, sp, #0x10
  4224d4:	mov	x21, x5
  4224d8:	mov	w23, w4
  4224dc:	mov	x24, x3
  4224e0:	mov	x25, x2
  4224e4:	str	xzr, [sp, #8]
  4224e8:	bl	402480 <calloc@plt>
  4224ec:	cbz	x0, 4227c4 <_obstack_memory_used@@Base+0x8630>
  4224f0:	mov	x22, x0
  4224f4:	mov	w0, #0x50                  	// #80
  4224f8:	mov	w1, #0x1                   	// #1
  4224fc:	bl	402480 <calloc@plt>
  422500:	cbz	x0, 422728 <_obstack_memory_used@@Base+0x8594>
  422504:	mov	x19, x0
  422508:	and	w8, w23, #0x1
  42250c:	strb	w8, [x0, #32]
  422510:	add	x3, sp, #0x8
  422514:	mov	x0, x26
  422518:	mov	x1, x22
  42251c:	mov	x2, x19
  422520:	mov	x4, x25
  422524:	mov	x5, xzr
  422528:	bl	422c58 <_obstack_memory_used@@Base+0x8ac4>
  42252c:	cbnz	w0, 422730 <_obstack_memory_used@@Base+0x859c>
  422530:	ldrb	w8, [x24]
  422534:	cbz	w8, 422560 <_obstack_memory_used@@Base+0x83cc>
  422538:	add	x9, x24, #0x1
  42253c:	mov	w10, #0x1                   	// #1
  422540:	lsr	w11, w8, #3
  422544:	and	x11, x11, #0x18
  422548:	ldr	x12, [x22, x11]
  42254c:	lsl	x8, x10, x8
  422550:	orr	x8, x12, x8
  422554:	str	x8, [x22, x11]
  422558:	ldrb	w8, [x9], #1
  42255c:	cbnz	w8, 422540 <_obstack_memory_used@@Base+0x83ac>
  422560:	tbnz	w23, #0, 422658 <_obstack_memory_used@@Base+0x84c4>
  422564:	ldr	w8, [x20, #180]
  422568:	cmp	w8, #0x2
  42256c:	b.ge	422674 <_obstack_memory_used@@Base+0x84e0>  // b.tcont
  422570:	ldr	w8, [x20, #128]
  422574:	cmp	w8, #0xf
  422578:	b.eq	4226bc <_obstack_memory_used@@Base+0x8528>  // b.none
  42257c:	ldr	x0, [x20, #112]
  422580:	add	w9, w8, #0x1
  422584:	sxtw	x8, w8
  422588:	add	x23, x0, x8, lsl #6
  42258c:	str	w9, [x20, #128]
  422590:	mov	w9, #0x3                   	// #3
  422594:	mov	x8, #0xffffffffffffffff    	// #-1
  422598:	str	xzr, [x23, #8]!
  42259c:	stp	xzr, xzr, [x23, #16]
  4225a0:	str	xzr, [x23, #8]
  4225a4:	str	w9, [x23, #48]
  4225a8:	stp	xzr, x22, [x23, #32]
  4225ac:	str	x8, [x23, #56]
  4225b0:	ldr	w8, [x20, #180]
  4225b4:	cmp	w8, #0x2
  4225b8:	b.lt	4226e0 <_obstack_memory_used@@Base+0x854c>  // b.tstop
  4225bc:	ldrb	w9, [x20, #176]
  4225c0:	ldr	w8, [x20, #128]
  4225c4:	orr	w9, w9, #0x2
  4225c8:	cmp	w8, #0xf
  4225cc:	strb	w9, [x20, #176]
  4225d0:	b.eq	422770 <_obstack_memory_used@@Base+0x85dc>  // b.none
  4225d4:	ldr	x0, [x20, #112]
  4225d8:	add	w9, w8, #0x1
  4225dc:	sxtw	x8, w8
  4225e0:	add	x21, x0, x8, lsl #6
  4225e4:	str	w9, [x20, #128]
  4225e8:	mov	w9, #0x6                   	// #6
  4225ec:	mov	x8, #0xffffffffffffffff    	// #-1
  4225f0:	str	xzr, [x21, #8]!
  4225f4:	stp	xzr, xzr, [x21, #16]
  4225f8:	str	xzr, [x21, #8]
  4225fc:	str	w9, [x21, #48]
  422600:	stp	xzr, x19, [x21, #32]
  422604:	str	x8, [x21, #56]
  422608:	ldr	w8, [x20, #128]
  42260c:	cmp	w8, #0xf
  422610:	b.eq	4227d4 <_obstack_memory_used@@Base+0x8640>  // b.none
  422614:	ldr	x0, [x20, #112]
  422618:	add	w9, w8, #0x1
  42261c:	sxtw	x8, w8
  422620:	add	x8, x0, x8, lsl #6
  422624:	str	w9, [x20, #128]
  422628:	mov	w9, #0xa                   	// #10
  42262c:	mov	x10, #0xffffffffffffffff    	// #-1
  422630:	str	xzr, [x8, #8]!
  422634:	stp	x23, x21, [x8, #8]
  422638:	stp	xzr, xzr, [x8, #32]
  42263c:	str	w9, [x8, #48]
  422640:	str	xzr, [x8, #24]
  422644:	str	x10, [x8, #56]
  422648:	str	x8, [x23]
  42264c:	str	x8, [x21]
  422650:	mov	x23, x8
  422654:	b	422708 <_obstack_memory_used@@Base+0x8574>
  422658:	ldp	q0, q1, [x22]
  42265c:	mvn	v0.16b, v0.16b
  422660:	mvn	v1.16b, v1.16b
  422664:	stp	q0, q1, [x22]
  422668:	ldr	w8, [x20, #180]
  42266c:	cmp	w8, #0x2
  422670:	b.lt	422570 <_obstack_memory_used@@Base+0x83dc>  // b.tstop
  422674:	ldr	x8, [x20, #120]
  422678:	ldp	x10, x11, [x22]
  42267c:	ldr	x9, [x8]
  422680:	and	x9, x10, x9
  422684:	str	x9, [x22]
  422688:	ldr	x9, [x8, #8]
  42268c:	and	x9, x11, x9
  422690:	str	x9, [x22, #8]
  422694:	ldr	x9, [x8, #16]
  422698:	ldp	x10, x11, [x22, #16]
  42269c:	and	x9, x10, x9
  4226a0:	str	x9, [x22, #16]
  4226a4:	ldr	x8, [x8, #24]
  4226a8:	and	x8, x11, x8
  4226ac:	str	x8, [x22, #24]
  4226b0:	ldr	w8, [x20, #128]
  4226b4:	cmp	w8, #0xf
  4226b8:	b.ne	42257c <_obstack_memory_used@@Base+0x83e8>  // b.any
  4226bc:	mov	w0, #0x3c8                 	// #968
  4226c0:	bl	4023a0 <malloc@plt>
  4226c4:	cbz	x0, 422794 <_obstack_memory_used@@Base+0x8600>
  4226c8:	ldr	x9, [x20, #112]
  4226cc:	mov	w8, wzr
  4226d0:	str	x9, [x0]
  4226d4:	str	x0, [x20, #112]
  4226d8:	str	wzr, [x20, #128]
  4226dc:	b	422580 <_obstack_memory_used@@Base+0x83ec>
  4226e0:	ldr	x0, [x19]
  4226e4:	bl	402620 <free@plt>
  4226e8:	ldr	x0, [x19, #8]
  4226ec:	bl	402620 <free@plt>
  4226f0:	ldr	x0, [x19, #16]
  4226f4:	bl	402620 <free@plt>
  4226f8:	ldr	x0, [x19, #24]
  4226fc:	bl	402620 <free@plt>
  422700:	mov	x0, x19
  422704:	bl	402620 <free@plt>
  422708:	mov	x0, x23
  42270c:	ldp	x20, x19, [sp, #80]
  422710:	ldp	x22, x21, [sp, #64]
  422714:	ldp	x24, x23, [sp, #48]
  422718:	ldp	x26, x25, [sp, #32]
  42271c:	ldp	x29, x30, [sp, #16]
  422720:	add	sp, sp, #0x60
  422724:	ret
  422728:	mov	x0, x22
  42272c:	b	4227c0 <_obstack_memory_used@@Base+0x862c>
  422730:	mov	w25, w0
  422734:	mov	x0, x22
  422738:	bl	402620 <free@plt>
  42273c:	ldr	x0, [x19]
  422740:	bl	402620 <free@plt>
  422744:	ldr	x0, [x19, #8]
  422748:	bl	402620 <free@plt>
  42274c:	ldr	x0, [x19, #16]
  422750:	bl	402620 <free@plt>
  422754:	ldr	x0, [x19, #24]
  422758:	bl	402620 <free@plt>
  42275c:	mov	x0, x19
  422760:	bl	402620 <free@plt>
  422764:	mov	x23, xzr
  422768:	str	w25, [x21]
  42276c:	b	422708 <_obstack_memory_used@@Base+0x8574>
  422770:	mov	w0, #0x3c8                 	// #968
  422774:	bl	4023a0 <malloc@plt>
  422778:	cbz	x0, 422794 <_obstack_memory_used@@Base+0x8600>
  42277c:	ldr	x9, [x20, #112]
  422780:	mov	w8, wzr
  422784:	str	x9, [x0]
  422788:	str	x0, [x20, #112]
  42278c:	str	wzr, [x20, #128]
  422790:	b	4225d8 <_obstack_memory_used@@Base+0x8444>
  422794:	mov	x0, x22
  422798:	bl	402620 <free@plt>
  42279c:	ldr	x0, [x19]
  4227a0:	bl	402620 <free@plt>
  4227a4:	ldr	x0, [x19, #8]
  4227a8:	bl	402620 <free@plt>
  4227ac:	ldr	x0, [x19, #16]
  4227b0:	bl	402620 <free@plt>
  4227b4:	ldr	x0, [x19, #24]
  4227b8:	bl	402620 <free@plt>
  4227bc:	mov	x0, x19
  4227c0:	bl	402620 <free@plt>
  4227c4:	mov	x23, xzr
  4227c8:	mov	w8, #0xc                   	// #12
  4227cc:	str	w8, [x21]
  4227d0:	b	422708 <_obstack_memory_used@@Base+0x8574>
  4227d4:	mov	w0, #0x3c8                 	// #968
  4227d8:	bl	4023a0 <malloc@plt>
  4227dc:	cbz	x0, 4227f8 <_obstack_memory_used@@Base+0x8664>
  4227e0:	ldr	x9, [x20, #112]
  4227e4:	mov	w8, wzr
  4227e8:	str	x9, [x0]
  4227ec:	str	x0, [x20, #112]
  4227f0:	str	wzr, [x20, #128]
  4227f4:	b	422618 <_obstack_memory_used@@Base+0x8484>
  4227f8:	mov	x23, xzr
  4227fc:	b	422708 <_obstack_memory_used@@Base+0x8574>
  422800:	ldr	x9, [x1, #104]
  422804:	ldr	x8, [x1, #72]
  422808:	cmp	x9, x8
  42280c:	b.le	422888 <_obstack_memory_used@@Base+0x86f4>
  422810:	ldr	x9, [x1, #8]
  422814:	ldrb	w8, [x9, x8]
  422818:	strb	w8, [x0]
  42281c:	ldr	w9, [x1, #144]
  422820:	cmp	w9, #0x2
  422824:	b.lt	422848 <_obstack_memory_used@@Base+0x86b4>  // b.tstop
  422828:	ldr	x9, [x1, #72]
  42282c:	ldr	x10, [x1, #48]
  422830:	cmp	x9, x10
  422834:	b.eq	422848 <_obstack_memory_used@@Base+0x86b4>  // b.none
  422838:	ldr	x10, [x1, #16]
  42283c:	ldr	w9, [x10, x9, lsl #2]
  422840:	cmn	w9, #0x1
  422844:	b.eq	422910 <_obstack_memory_used@@Base+0x877c>  // b.none
  422848:	tbz	w2, #0, 422898 <_obstack_memory_used@@Base+0x8704>
  42284c:	cmp	w8, #0x5c
  422850:	b.ne	422898 <_obstack_memory_used@@Base+0x8704>  // b.any
  422854:	ldr	x8, [x1, #72]
  422858:	ldr	x9, [x1, #88]
  42285c:	add	x8, x8, #0x1
  422860:	cmp	x8, x9
  422864:	b.ge	422910 <_obstack_memory_used@@Base+0x877c>  // b.tcont
  422868:	ldr	x9, [x1, #8]
  42286c:	str	x8, [x1, #72]
  422870:	ldrb	w9, [x9, x8]
  422874:	mov	w8, #0x1                   	// #1
  422878:	strb	w9, [x0]
  42287c:	strb	w8, [x0, #8]
  422880:	mov	w0, w8
  422884:	ret
  422888:	mov	w9, #0x2                   	// #2
  42288c:	strb	w9, [x0, #8]
  422890:	mov	w0, wzr
  422894:	ret
  422898:	cmp	w8, #0x5c
  42289c:	b.gt	4228f0 <_obstack_memory_used@@Base+0x875c>
  4228a0:	cmp	w8, #0x2d
  4228a4:	b.eq	422920 <_obstack_memory_used@@Base+0x878c>  // b.none
  4228a8:	cmp	w8, #0x5b
  4228ac:	b.ne	422910 <_obstack_memory_used@@Base+0x877c>  // b.any
  4228b0:	ldr	x8, [x1, #72]
  4228b4:	ldr	x9, [x1, #88]
  4228b8:	add	x8, x8, #0x1
  4228bc:	cmp	x8, x9
  4228c0:	b.ge	422940 <_obstack_memory_used@@Base+0x87ac>  // b.tcont
  4228c4:	ldr	x9, [x1, #8]
  4228c8:	ldrb	w8, [x9, x8]
  4228cc:	cmp	w8, #0x3d
  4228d0:	strb	w8, [x0]
  4228d4:	b.eq	42295c <_obstack_memory_used@@Base+0x87c8>  // b.none
  4228d8:	cmp	w8, #0x3a
  4228dc:	b.eq	422964 <_obstack_memory_used@@Base+0x87d0>  // b.none
  4228e0:	cmp	w8, #0x2e
  4228e4:	b.ne	422944 <_obstack_memory_used@@Base+0x87b0>  // b.any
  4228e8:	mov	w8, #0x1a                  	// #26
  4228ec:	b	42296c <_obstack_memory_used@@Base+0x87d8>
  4228f0:	cmp	w8, #0x5d
  4228f4:	b.eq	422930 <_obstack_memory_used@@Base+0x879c>  // b.none
  4228f8:	cmp	w8, #0x5e
  4228fc:	b.ne	422910 <_obstack_memory_used@@Base+0x877c>  // b.any
  422900:	mov	w8, #0x19                  	// #25
  422904:	strb	w8, [x0, #8]
  422908:	mov	w0, #0x1                   	// #1
  42290c:	ret
  422910:	mov	w8, #0x1                   	// #1
  422914:	strb	w8, [x0, #8]
  422918:	mov	w0, w8
  42291c:	ret
  422920:	mov	w8, #0x16                  	// #22
  422924:	strb	w8, [x0, #8]
  422928:	mov	w0, #0x1                   	// #1
  42292c:	ret
  422930:	mov	w8, #0x15                  	// #21
  422934:	strb	w8, [x0, #8]
  422938:	mov	w0, #0x1                   	// #1
  42293c:	ret
  422940:	strb	wzr, [x0]
  422944:	mov	w8, #0x1                   	// #1
  422948:	mov	w9, #0x5b                  	// #91
  42294c:	strb	w8, [x0, #8]
  422950:	strb	w9, [x0]
  422954:	mov	w0, w8
  422958:	ret
  42295c:	mov	w8, #0x1c                  	// #28
  422960:	b	42296c <_obstack_memory_used@@Base+0x87d8>
  422964:	tbz	w2, #2, 422944 <_obstack_memory_used@@Base+0x87b0>
  422968:	mov	w8, #0x1e                  	// #30
  42296c:	strb	w8, [x0, #8]
  422970:	mov	w0, #0x2                   	// #2
  422974:	ret
  422978:	sub	sp, sp, #0x30
  42297c:	stp	x29, x30, [sp, #32]
  422980:	ldr	w8, [x1, #144]
  422984:	ldr	x9, [x1, #72]
  422988:	add	x29, sp, #0x20
  42298c:	cmp	w8, #0x1
  422990:	b.eq	422a0c <_obstack_memory_used@@Base+0x8878>  // b.none
  422994:	ldr	x8, [x1, #48]
  422998:	add	x10, x9, #0x1
  42299c:	cmp	x10, x8
  4229a0:	b.ge	422a0c <_obstack_memory_used@@Base+0x8878>  // b.tcont
  4229a4:	ldr	x10, [x1, #16]
  4229a8:	sub	x8, x8, x9
  4229ac:	mov	w11, #0x1                   	// #1
  4229b0:	add	x12, x10, x9, lsl #2
  4229b4:	ldr	w13, [x12, x11, lsl #2]
  4229b8:	cmn	w13, #0x1
  4229bc:	b.ne	4229d4 <_obstack_memory_used@@Base+0x8840>  // b.any
  4229c0:	add	x11, x11, #0x1
  4229c4:	cmp	x8, x11
  4229c8:	b.ne	4229b4 <_obstack_memory_used@@Base+0x8820>  // b.any
  4229cc:	mov	x11, x8
  4229d0:	b	4229dc <_obstack_memory_used@@Base+0x8848>
  4229d4:	cmp	w11, #0x2
  4229d8:	b.lt	422a0c <_obstack_memory_used@@Base+0x8878>  // b.tstop
  4229dc:	mov	w12, #0x1                   	// #1
  4229e0:	str	w12, [x0]
  4229e4:	ldr	w9, [x10, x9, lsl #2]
  4229e8:	mov	w8, wzr
  4229ec:	str	w9, [x0, #8]
  4229f0:	ldr	x9, [x1, #72]
  4229f4:	add	x9, x9, w11, sxtw
  4229f8:	str	x9, [x1, #72]
  4229fc:	ldp	x29, x30, [sp, #32]
  422a00:	mov	w0, w8
  422a04:	add	sp, sp, #0x30
  422a08:	ret
  422a0c:	add	x8, x9, w3, sxtw
  422a10:	str	x8, [x1, #72]
  422a14:	ldrb	w10, [x2, #8]
  422a18:	sub	w9, w10, #0x16
  422a1c:	cmp	w9, #0x8
  422a20:	b.hi	422c24 <_obstack_memory_used@@Base+0x8a90>  // b.pmore
  422a24:	adrp	x11, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  422a28:	add	x11, x11, #0x1c6
  422a2c:	adr	x12, 422a3c <_obstack_memory_used@@Base+0x88a8>
  422a30:	ldrb	w13, [x11, x9]
  422a34:	add	x12, x12, x13, lsl #2
  422a38:	br	x12
  422a3c:	ldr	x9, [x1, #104]
  422a40:	cmp	x9, x8
  422a44:	b.le	422b90 <_obstack_memory_used@@Base+0x89fc>
  422a48:	ldrb	w9, [x2]
  422a4c:	mov	x8, xzr
  422a50:	and	w10, w10, #0xff
  422a54:	cmp	w10, #0x1e
  422a58:	b.ne	422b30 <_obstack_memory_used@@Base+0x899c>  // b.any
  422a5c:	ldrb	w10, [x1, #139]
  422a60:	cbz	w10, 422b30 <_obstack_memory_used@@Base+0x899c>
  422a64:	ldrb	w10, [x1, #140]
  422a68:	cbz	w10, 422aec <_obstack_memory_used@@Base+0x8958>
  422a6c:	ldr	x11, [x1, #72]
  422a70:	ldr	x13, [x1, #48]
  422a74:	subs	x12, x13, x11
  422a78:	b.eq	422a8c <_obstack_memory_used@@Base+0x88f8>  // b.none
  422a7c:	ldr	x10, [x1, #16]
  422a80:	ldr	w10, [x10, x11, lsl #2]
  422a84:	cmn	w10, #0x1
  422a88:	b.eq	422b0c <_obstack_memory_used@@Base+0x8978>  // b.none
  422a8c:	ldr	x10, [x1, #24]
  422a90:	ldr	x14, [x1, #40]
  422a94:	ldr	x15, [x1]
  422a98:	ldr	x10, [x10, x11, lsl #3]
  422a9c:	add	x10, x14, x10
  422aa0:	ldrsb	w10, [x15, x10]
  422aa4:	tbnz	w10, #31, 422b0c <_obstack_memory_used@@Base+0x8978>
  422aa8:	ldr	w14, [x1, #144]
  422aac:	cmp	w14, #0x1
  422ab0:	b.eq	422b20 <_obstack_memory_used@@Base+0x898c>  // b.none
  422ab4:	add	x14, x11, #0x1
  422ab8:	cmp	x14, x13
  422abc:	b.ge	422b20 <_obstack_memory_used@@Base+0x898c>  // b.tcont
  422ac0:	ldr	x13, [x1, #16]
  422ac4:	add	x14, x13, x11, lsl #2
  422ac8:	mov	w13, #0x1                   	// #1
  422acc:	ldr	w15, [x14, x13, lsl #2]
  422ad0:	cmn	w15, #0x1
  422ad4:	b.ne	422b24 <_obstack_memory_used@@Base+0x8990>  // b.any
  422ad8:	add	x13, x13, #0x1
  422adc:	cmp	x12, x13
  422ae0:	b.ne	422acc <_obstack_memory_used@@Base+0x8938>  // b.any
  422ae4:	mov	x13, x12
  422ae8:	b	422b24 <_obstack_memory_used@@Base+0x8990>
  422aec:	ldr	x10, [x1, #72]
  422af0:	ldr	x11, [x1, #40]
  422af4:	ldr	x13, [x1]
  422af8:	add	x12, x10, #0x1
  422afc:	str	x12, [x1, #72]
  422b00:	add	x10, x10, x11
  422b04:	ldrb	w10, [x13, x10]
  422b08:	b	422b44 <_obstack_memory_used@@Base+0x89b0>
  422b0c:	ldr	x10, [x1, #8]
  422b10:	add	x12, x11, #0x1
  422b14:	str	x12, [x1, #72]
  422b18:	ldrb	w10, [x10, x11]
  422b1c:	b	422b44 <_obstack_memory_used@@Base+0x89b0>
  422b20:	mov	w13, #0x1                   	// #1
  422b24:	add	x12, x11, w13, sxtw
  422b28:	str	x12, [x1, #72]
  422b2c:	b	422b44 <_obstack_memory_used@@Base+0x89b0>
  422b30:	ldr	x10, [x1, #72]
  422b34:	ldr	x11, [x1, #8]
  422b38:	add	x12, x10, #0x1
  422b3c:	str	x12, [x1, #72]
  422b40:	ldrb	w10, [x11, x10]
  422b44:	ldr	x11, [x1, #104]
  422b48:	cmp	x11, x12
  422b4c:	b.le	422b90 <_obstack_memory_used@@Base+0x89fc>
  422b50:	cmp	w9, w10, uxtb
  422b54:	b.ne	422b68 <_obstack_memory_used@@Base+0x89d4>  // b.any
  422b58:	ldr	x11, [x1, #8]
  422b5c:	ldrb	w11, [x11, x12]
  422b60:	cmp	w11, #0x5d
  422b64:	b.eq	422ba4 <_obstack_memory_used@@Base+0x8a10>  // b.none
  422b68:	ldr	x11, [x0, #8]
  422b6c:	strb	w10, [x11, x8]
  422b70:	add	x8, x8, #0x1
  422b74:	cmp	x8, #0x20
  422b78:	b.eq	422b90 <_obstack_memory_used@@Base+0x89fc>  // b.none
  422b7c:	ldrb	w10, [x2, #8]
  422b80:	and	w10, w10, #0xff
  422b84:	cmp	w10, #0x1e
  422b88:	b.eq	422a5c <_obstack_memory_used@@Base+0x88c8>  // b.none
  422b8c:	b	422b30 <_obstack_memory_used@@Base+0x899c>
  422b90:	mov	w8, #0x7                   	// #7
  422b94:	ldp	x29, x30, [sp, #32]
  422b98:	mov	w0, w8
  422b9c:	add	sp, sp, #0x30
  422ba0:	ret
  422ba4:	add	x9, x12, #0x1
  422ba8:	str	x9, [x1, #72]
  422bac:	ldr	x9, [x0, #8]
  422bb0:	strb	wzr, [x9, w8, uxtw]
  422bb4:	ldrb	w8, [x2, #8]
  422bb8:	cmp	w8, #0x1e
  422bbc:	b.eq	422bdc <_obstack_memory_used@@Base+0x8a48>  // b.none
  422bc0:	cmp	w8, #0x1c
  422bc4:	b.eq	422be4 <_obstack_memory_used@@Base+0x8a50>  // b.none
  422bc8:	cmp	w8, #0x1a
  422bcc:	mov	w8, wzr
  422bd0:	b.ne	4229fc <_obstack_memory_used@@Base+0x8868>  // b.any
  422bd4:	mov	w9, #0x3                   	// #3
  422bd8:	b	422be8 <_obstack_memory_used@@Base+0x8a54>
  422bdc:	mov	w9, #0x4                   	// #4
  422be0:	b	422be8 <_obstack_memory_used@@Base+0x8a54>
  422be4:	mov	w9, #0x2                   	// #2
  422be8:	mov	w8, wzr
  422bec:	str	w9, [x0]
  422bf0:	ldp	x29, x30, [sp, #32]
  422bf4:	mov	w0, w8
  422bf8:	add	sp, sp, #0x30
  422bfc:	ret
  422c00:	tbnz	w5, #0, 422c24 <_obstack_memory_used@@Base+0x8a90>
  422c04:	stp	x2, x0, [sp]
  422c08:	add	x0, sp, #0x10
  422c0c:	mov	x2, x4
  422c10:	bl	422800 <_obstack_memory_used@@Base+0x866c>
  422c14:	ldrb	w8, [sp, #24]
  422c18:	ldp	x2, x0, [sp]
  422c1c:	cmp	w8, #0x15
  422c20:	b.ne	422c44 <_obstack_memory_used@@Base+0x8ab0>  // b.any
  422c24:	str	wzr, [x0]
  422c28:	ldrb	w9, [x2]
  422c2c:	mov	w8, wzr
  422c30:	strb	w9, [x0, #8]
  422c34:	ldp	x29, x30, [sp, #32]
  422c38:	mov	w0, w8
  422c3c:	add	sp, sp, #0x30
  422c40:	ret
  422c44:	mov	w8, #0xb                   	// #11
  422c48:	ldp	x29, x30, [sp, #32]
  422c4c:	mov	w0, w8
  422c50:	add	sp, sp, #0x30
  422c54:	ret
  422c58:	stp	x29, x30, [sp, #-64]!
  422c5c:	stp	x24, x23, [sp, #16]
  422c60:	stp	x22, x21, [sp, #32]
  422c64:	stp	x20, x19, [sp, #48]
  422c68:	mov	x21, x4
  422c6c:	mov	x23, x3
  422c70:	mov	x22, x2
  422c74:	mov	x19, x1
  422c78:	mov	x20, x0
  422c7c:	mov	x29, sp
  422c80:	tbz	w5, #22, 422cb4 <_obstack_memory_used@@Base+0x8b20>
  422c84:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422c88:	add	x1, x1, #0x83a
  422c8c:	mov	x0, x21
  422c90:	bl	402600 <strcmp@plt>
  422c94:	cbz	w0, 422cac <_obstack_memory_used@@Base+0x8b18>
  422c98:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422c9c:	add	x1, x1, #0x840
  422ca0:	mov	x0, x21
  422ca4:	bl	402600 <strcmp@plt>
  422ca8:	cbnz	w0, 422cb4 <_obstack_memory_used@@Base+0x8b20>
  422cac:	adrp	x21, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422cb0:	add	x21, x21, #0x846
  422cb4:	ldr	x8, [x23]
  422cb8:	ldr	x9, [x22, #72]
  422cbc:	cmp	x8, x9
  422cc0:	b.eq	4232b8 <_obstack_memory_used@@Base+0x9124>  // b.none
  422cc4:	mov	x0, x21
  422cc8:	bl	4022c0 <wctype@plt>
  422ccc:	ldr	x8, [x22, #72]
  422cd0:	ldr	x9, [x22, #24]
  422cd4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422cd8:	add	x1, x1, #0x8b9
  422cdc:	add	x10, x8, #0x1
  422ce0:	str	x10, [x22, #72]
  422ce4:	str	x0, [x9, x8, lsl #3]
  422ce8:	mov	x0, x21
  422cec:	bl	402600 <strcmp@plt>
  422cf0:	cbz	w0, 422dd8 <_obstack_memory_used@@Base+0x8c44>
  422cf4:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422cf8:	add	x1, x1, #0x8cb
  422cfc:	mov	x0, x21
  422d00:	bl	402600 <strcmp@plt>
  422d04:	cbz	w0, 422e20 <_obstack_memory_used@@Base+0x8c8c>
  422d08:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d0c:	add	x1, x1, #0x840
  422d10:	mov	x0, x21
  422d14:	bl	402600 <strcmp@plt>
  422d18:	cbz	w0, 422e68 <_obstack_memory_used@@Base+0x8cd4>
  422d1c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d20:	add	x1, x1, #0x8ad
  422d24:	mov	x0, x21
  422d28:	bl	402600 <strcmp@plt>
  422d2c:	cbz	w0, 422eb0 <_obstack_memory_used@@Base+0x8d1c>
  422d30:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d34:	add	x1, x1, #0x846
  422d38:	mov	x0, x21
  422d3c:	bl	402600 <strcmp@plt>
  422d40:	cbz	w0, 422ef8 <_obstack_memory_used@@Base+0x8d64>
  422d44:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d48:	add	x1, x1, #0x8a7
  422d4c:	mov	x0, x21
  422d50:	bl	402600 <strcmp@plt>
  422d54:	cbz	w0, 422f40 <_obstack_memory_used@@Base+0x8dac>
  422d58:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d5c:	add	x1, x1, #0x8bf
  422d60:	mov	x0, x21
  422d64:	bl	402600 <strcmp@plt>
  422d68:	cbz	w0, 422fa0 <_obstack_memory_used@@Base+0x8e0c>
  422d6c:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d70:	add	x1, x1, #0x83a
  422d74:	mov	x0, x21
  422d78:	bl	402600 <strcmp@plt>
  422d7c:	cbz	w0, 422fec <_obstack_memory_used@@Base+0x8e58>
  422d80:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d84:	add	x1, x1, #0x8d1
  422d88:	mov	x0, x21
  422d8c:	bl	402600 <strcmp@plt>
  422d90:	cbz	w0, 423038 <_obstack_memory_used@@Base+0x8ea4>
  422d94:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422d98:	add	x1, x1, #0x8c5
  422d9c:	mov	x0, x21
  422da0:	bl	402600 <strcmp@plt>
  422da4:	cbz	w0, 4230bc <_obstack_memory_used@@Base+0x8f28>
  422da8:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422dac:	add	x1, x1, #0x8b3
  422db0:	mov	x0, x21
  422db4:	bl	402600 <strcmp@plt>
  422db8:	cbz	w0, 423140 <_obstack_memory_used@@Base+0x8fac>
  422dbc:	adrp	x1, 42d000 <_obstack_memory_used@@Base+0x12e6c>
  422dc0:	add	x1, x1, #0x8a6
  422dc4:	mov	x0, x21
  422dc8:	bl	402600 <strcmp@plt>
  422dcc:	cbz	w0, 4231c4 <_obstack_memory_used@@Base+0x9030>
  422dd0:	mov	w0, #0x4                   	// #4
  422dd4:	b	422f8c <_obstack_memory_used@@Base+0x8df8>
  422dd8:	bl	402610 <__ctype_b_loc@plt>
  422ddc:	ldr	x8, [x0]
  422de0:	mov	x9, xzr
  422de4:	mov	w10, #0x1                   	// #1
  422de8:	cbz	x20, 422dfc <_obstack_memory_used@@Base+0x8c68>
  422dec:	b	423094 <_obstack_memory_used@@Base+0x8f00>
  422df0:	add	x9, x9, #0x1
  422df4:	cmp	x9, #0x100
  422df8:	b.eq	422f88 <_obstack_memory_used@@Base+0x8df4>  // b.none
  422dfc:	ldrh	w11, [x8, x9, lsl #1]
  422e00:	tbz	w11, #3, 422df0 <_obstack_memory_used@@Base+0x8c5c>
  422e04:	ubfx	x11, x9, #6, #2
  422e08:	lsl	x11, x11, #3
  422e0c:	ldr	x12, [x19, x11]
  422e10:	lsl	x13, x10, x9
  422e14:	orr	x12, x12, x13
  422e18:	str	x12, [x19, x11]
  422e1c:	b	422df0 <_obstack_memory_used@@Base+0x8c5c>
  422e20:	bl	402610 <__ctype_b_loc@plt>
  422e24:	ldr	x8, [x0]
  422e28:	mov	x9, xzr
  422e2c:	mov	w10, #0x1                   	// #1
  422e30:	cbz	x20, 422e44 <_obstack_memory_used@@Base+0x8cb0>
  422e34:	b	423118 <_obstack_memory_used@@Base+0x8f84>
  422e38:	add	x9, x9, #0x1
  422e3c:	cmp	x9, #0x100
  422e40:	b.eq	422f88 <_obstack_memory_used@@Base+0x8df4>  // b.none
  422e44:	ldrh	w11, [x8, x9, lsl #1]
  422e48:	tbz	w11, #1, 422e38 <_obstack_memory_used@@Base+0x8ca4>
  422e4c:	ubfx	x11, x9, #6, #2
  422e50:	lsl	x11, x11, #3
  422e54:	ldr	x12, [x19, x11]
  422e58:	lsl	x13, x10, x9
  422e5c:	orr	x12, x12, x13
  422e60:	str	x12, [x19, x11]
  422e64:	b	422e38 <_obstack_memory_used@@Base+0x8ca4>
  422e68:	bl	402610 <__ctype_b_loc@plt>
  422e6c:	ldr	x8, [x0]
  422e70:	mov	x9, xzr
  422e74:	mov	w10, #0x1                   	// #1
  422e78:	cbz	x20, 422e8c <_obstack_memory_used@@Base+0x8cf8>
  422e7c:	b	42319c <_obstack_memory_used@@Base+0x9008>
  422e80:	add	x9, x9, #0x1
  422e84:	cmp	x9, #0x100
  422e88:	b.eq	422f88 <_obstack_memory_used@@Base+0x8df4>  // b.none
  422e8c:	ldrh	w11, [x8, x9, lsl #1]
  422e90:	tbz	w11, #9, 422e80 <_obstack_memory_used@@Base+0x8cec>
  422e94:	ubfx	x11, x9, #6, #2
  422e98:	lsl	x11, x11, #3
  422e9c:	ldr	x12, [x19, x11]
  422ea0:	lsl	x13, x10, x9
  422ea4:	orr	x12, x12, x13
  422ea8:	str	x12, [x19, x11]
  422eac:	b	422e80 <_obstack_memory_used@@Base+0x8cec>
  422eb0:	bl	402610 <__ctype_b_loc@plt>
  422eb4:	ldr	x8, [x0]
  422eb8:	mov	x9, xzr
  422ebc:	mov	w10, #0x1                   	// #1
  422ec0:	cbz	x20, 422ed4 <_obstack_memory_used@@Base+0x8d40>
  422ec4:	b	423220 <_obstack_memory_used@@Base+0x908c>
  422ec8:	add	x9, x9, #0x1
  422ecc:	cmp	x9, #0x100
  422ed0:	b.eq	422f88 <_obstack_memory_used@@Base+0x8df4>  // b.none
  422ed4:	ldrh	w11, [x8, x9, lsl #1]
  422ed8:	tbz	w11, #13, 422ec8 <_obstack_memory_used@@Base+0x8d34>
  422edc:	ubfx	x11, x9, #6, #2
  422ee0:	lsl	x11, x11, #3
  422ee4:	ldr	x12, [x19, x11]
  422ee8:	lsl	x13, x10, x9
  422eec:	orr	x12, x12, x13
  422ef0:	str	x12, [x19, x11]
  422ef4:	b	422ec8 <_obstack_memory_used@@Base+0x8d34>
  422ef8:	bl	402610 <__ctype_b_loc@plt>
  422efc:	ldr	x8, [x0]
  422f00:	mov	x9, xzr
  422f04:	mov	w10, #0x1                   	// #1
  422f08:	cbz	x20, 422f1c <_obstack_memory_used@@Base+0x8d88>
  422f0c:	b	423258 <_obstack_memory_used@@Base+0x90c4>
  422f10:	add	x9, x9, #0x1
  422f14:	cmp	x9, #0x100
  422f18:	b.eq	422f88 <_obstack_memory_used@@Base+0x8df4>  // b.none
  422f1c:	ldrh	w11, [x8, x9, lsl #1]
  422f20:	tbz	w11, #10, 422f10 <_obstack_memory_used@@Base+0x8d7c>
  422f24:	ubfx	x11, x9, #6, #2
  422f28:	lsl	x11, x11, #3
  422f2c:	ldr	x12, [x19, x11]
  422f30:	lsl	x13, x10, x9
  422f34:	orr	x12, x12, x13
  422f38:	str	x12, [x19, x11]
  422f3c:	b	422f10 <_obstack_memory_used@@Base+0x8d7c>
  422f40:	bl	402610 <__ctype_b_loc@plt>
  422f44:	ldr	x8, [x0]
  422f48:	mov	x9, xzr
  422f4c:	mov	w10, #0x1                   	// #1
  422f50:	cbz	x20, 422f64 <_obstack_memory_used@@Base+0x8dd0>
  422f54:	b	423290 <_obstack_memory_used@@Base+0x90fc>
  422f58:	add	x9, x9, #0x1
  422f5c:	cmp	x9, #0x100
  422f60:	b.eq	422f88 <_obstack_memory_used@@Base+0x8df4>  // b.none
  422f64:	ldrh	w11, [x8, x9, lsl #1]
  422f68:	tbz	w11, #11, 422f58 <_obstack_memory_used@@Base+0x8dc4>
  422f6c:	ubfx	x11, x9, #6, #2
  422f70:	lsl	x11, x11, #3
  422f74:	ldr	x12, [x19, x11]
  422f78:	lsl	x13, x10, x9
  422f7c:	orr	x12, x12, x13
  422f80:	str	x12, [x19, x11]
  422f84:	b	422f58 <_obstack_memory_used@@Base+0x8dc4>
  422f88:	mov	w0, wzr
  422f8c:	ldp	x20, x19, [sp, #48]
  422f90:	ldp	x22, x21, [sp, #32]
  422f94:	ldp	x24, x23, [sp, #16]
  422f98:	ldp	x29, x30, [sp], #64
  422f9c:	ret
  422fa0:	bl	402610 <__ctype_b_loc@plt>
  422fa4:	ldr	x8, [x0]
  422fa8:	mov	x9, xzr
  422fac:	mov	w10, #0x1                   	// #1
  422fb0:	cbz	x20, 422fc8 <_obstack_memory_used@@Base+0x8e34>
  422fb4:	b	4232ec <_obstack_memory_used@@Base+0x9158>
  422fb8:	add	x9, x9, #0x1
  422fbc:	cmp	x9, #0x100
  422fc0:	mov	w0, wzr
  422fc4:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  422fc8:	ldrh	w11, [x8, x9, lsl #1]
  422fcc:	tbz	w11, #14, 422fb8 <_obstack_memory_used@@Base+0x8e24>
  422fd0:	ubfx	x11, x9, #6, #2
  422fd4:	lsl	x11, x11, #3
  422fd8:	ldr	x12, [x19, x11]
  422fdc:	lsl	x13, x10, x9
  422fe0:	orr	x12, x12, x13
  422fe4:	str	x12, [x19, x11]
  422fe8:	b	422fb8 <_obstack_memory_used@@Base+0x8e24>
  422fec:	bl	402610 <__ctype_b_loc@plt>
  422ff0:	ldr	x8, [x0]
  422ff4:	mov	x9, xzr
  422ff8:	mov	w10, #0x1                   	// #1
  422ffc:	cbz	x20, 423014 <_obstack_memory_used@@Base+0x8e80>
  423000:	b	423324 <_obstack_memory_used@@Base+0x9190>
  423004:	add	x9, x9, #0x1
  423008:	cmp	x9, #0x100
  42300c:	mov	w0, wzr
  423010:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423014:	ldrh	w11, [x8, x9, lsl #1]
  423018:	tbz	w11, #8, 423004 <_obstack_memory_used@@Base+0x8e70>
  42301c:	ubfx	x11, x9, #6, #2
  423020:	lsl	x11, x11, #3
  423024:	ldr	x12, [x19, x11]
  423028:	lsl	x13, x10, x9
  42302c:	orr	x12, x12, x13
  423030:	str	x12, [x19, x11]
  423034:	b	423004 <_obstack_memory_used@@Base+0x8e70>
  423038:	bl	402610 <__ctype_b_loc@plt>
  42303c:	ldr	x8, [x0]
  423040:	mov	x9, xzr
  423044:	mov	w10, #0x1                   	// #1
  423048:	cbz	x20, 423060 <_obstack_memory_used@@Base+0x8ecc>
  42304c:	b	42335c <_obstack_memory_used@@Base+0x91c8>
  423050:	add	x9, x9, #0x1
  423054:	cmp	x9, #0x100
  423058:	mov	w0, wzr
  42305c:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423060:	ldrh	w11, [x8, x9, lsl #1]
  423064:	tbz	w11, #0, 423050 <_obstack_memory_used@@Base+0x8ebc>
  423068:	ubfx	x11, x9, #6, #2
  42306c:	lsl	x11, x11, #3
  423070:	ldr	x12, [x19, x11]
  423074:	lsl	x13, x10, x9
  423078:	orr	x12, x12, x13
  42307c:	str	x12, [x19, x11]
  423080:	b	423050 <_obstack_memory_used@@Base+0x8ebc>
  423084:	add	x9, x9, #0x1
  423088:	cmp	x9, #0x100
  42308c:	mov	w0, wzr
  423090:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423094:	ldrh	w11, [x8, x9, lsl #1]
  423098:	tbz	w11, #3, 423084 <_obstack_memory_used@@Base+0x8ef0>
  42309c:	ldrb	w11, [x20, x9]
  4230a0:	lsr	x12, x11, #3
  4230a4:	and	x12, x12, #0x18
  4230a8:	ldr	x13, [x19, x12]
  4230ac:	lsl	x11, x10, x11
  4230b0:	orr	x11, x11, x13
  4230b4:	str	x11, [x19, x12]
  4230b8:	b	423084 <_obstack_memory_used@@Base+0x8ef0>
  4230bc:	bl	402610 <__ctype_b_loc@plt>
  4230c0:	ldr	x8, [x0]
  4230c4:	mov	x9, xzr
  4230c8:	mov	w10, #0x1                   	// #1
  4230cc:	cbz	x20, 4230e4 <_obstack_memory_used@@Base+0x8f50>
  4230d0:	b	423394 <_obstack_memory_used@@Base+0x9200>
  4230d4:	add	x9, x9, #0x1
  4230d8:	cmp	x9, #0x100
  4230dc:	mov	w0, wzr
  4230e0:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  4230e4:	ldrsh	w11, [x8, x9, lsl #1]
  4230e8:	tbz	w11, #31, 4230d4 <_obstack_memory_used@@Base+0x8f40>
  4230ec:	ubfx	x11, x9, #6, #2
  4230f0:	lsl	x11, x11, #3
  4230f4:	ldr	x12, [x19, x11]
  4230f8:	lsl	x13, x10, x9
  4230fc:	orr	x12, x12, x13
  423100:	str	x12, [x19, x11]
  423104:	b	4230d4 <_obstack_memory_used@@Base+0x8f40>
  423108:	add	x9, x9, #0x1
  42310c:	cmp	x9, #0x100
  423110:	mov	w0, wzr
  423114:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423118:	ldrh	w11, [x8, x9, lsl #1]
  42311c:	tbz	w11, #1, 423108 <_obstack_memory_used@@Base+0x8f74>
  423120:	ldrb	w11, [x20, x9]
  423124:	lsr	x12, x11, #3
  423128:	and	x12, x12, #0x18
  42312c:	ldr	x13, [x19, x12]
  423130:	lsl	x11, x10, x11
  423134:	orr	x11, x11, x13
  423138:	str	x11, [x19, x12]
  42313c:	b	423108 <_obstack_memory_used@@Base+0x8f74>
  423140:	bl	402610 <__ctype_b_loc@plt>
  423144:	ldr	x8, [x0]
  423148:	mov	x9, xzr
  42314c:	mov	w10, #0x1                   	// #1
  423150:	cbz	x20, 423168 <_obstack_memory_used@@Base+0x8fd4>
  423154:	b	4233cc <_obstack_memory_used@@Base+0x9238>
  423158:	add	x9, x9, #0x1
  42315c:	cmp	x9, #0x100
  423160:	mov	w0, wzr
  423164:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423168:	ldrh	w11, [x8, x9, lsl #1]
  42316c:	tbz	w11, #2, 423158 <_obstack_memory_used@@Base+0x8fc4>
  423170:	ubfx	x11, x9, #6, #2
  423174:	lsl	x11, x11, #3
  423178:	ldr	x12, [x19, x11]
  42317c:	lsl	x13, x10, x9
  423180:	orr	x12, x12, x13
  423184:	str	x12, [x19, x11]
  423188:	b	423158 <_obstack_memory_used@@Base+0x8fc4>
  42318c:	add	x9, x9, #0x1
  423190:	cmp	x9, #0x100
  423194:	mov	w0, wzr
  423198:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  42319c:	ldrh	w11, [x8, x9, lsl #1]
  4231a0:	tbz	w11, #9, 42318c <_obstack_memory_used@@Base+0x8ff8>
  4231a4:	ldrb	w11, [x20, x9]
  4231a8:	lsr	x12, x11, #3
  4231ac:	and	x12, x12, #0x18
  4231b0:	ldr	x13, [x19, x12]
  4231b4:	lsl	x11, x10, x11
  4231b8:	orr	x11, x11, x13
  4231bc:	str	x11, [x19, x12]
  4231c0:	b	42318c <_obstack_memory_used@@Base+0x8ff8>
  4231c4:	bl	402610 <__ctype_b_loc@plt>
  4231c8:	ldr	x8, [x0]
  4231cc:	mov	x9, xzr
  4231d0:	mov	w10, #0x1                   	// #1
  4231d4:	cbz	x20, 4231ec <_obstack_memory_used@@Base+0x9058>
  4231d8:	b	423404 <_obstack_memory_used@@Base+0x9270>
  4231dc:	add	x9, x9, #0x1
  4231e0:	cmp	x9, #0x100
  4231e4:	mov	w0, wzr
  4231e8:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  4231ec:	ldrh	w11, [x8, x9, lsl #1]
  4231f0:	tbz	w11, #12, 4231dc <_obstack_memory_used@@Base+0x9048>
  4231f4:	ubfx	x11, x9, #6, #2
  4231f8:	lsl	x11, x11, #3
  4231fc:	ldr	x12, [x19, x11]
  423200:	lsl	x13, x10, x9
  423204:	orr	x12, x12, x13
  423208:	str	x12, [x19, x11]
  42320c:	b	4231dc <_obstack_memory_used@@Base+0x9048>
  423210:	add	x9, x9, #0x1
  423214:	cmp	x9, #0x100
  423218:	mov	w0, wzr
  42321c:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423220:	ldrh	w11, [x8, x9, lsl #1]
  423224:	tbz	w11, #13, 423210 <_obstack_memory_used@@Base+0x907c>
  423228:	ldrb	w11, [x20, x9]
  42322c:	lsr	x12, x11, #3
  423230:	and	x12, x12, #0x18
  423234:	ldr	x13, [x19, x12]
  423238:	lsl	x11, x10, x11
  42323c:	orr	x11, x11, x13
  423240:	str	x11, [x19, x12]
  423244:	b	423210 <_obstack_memory_used@@Base+0x907c>
  423248:	add	x9, x9, #0x1
  42324c:	cmp	x9, #0x100
  423250:	mov	w0, wzr
  423254:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423258:	ldrh	w11, [x8, x9, lsl #1]
  42325c:	tbz	w11, #10, 423248 <_obstack_memory_used@@Base+0x90b4>
  423260:	ldrb	w11, [x20, x9]
  423264:	lsr	x12, x11, #3
  423268:	and	x12, x12, #0x18
  42326c:	ldr	x13, [x19, x12]
  423270:	lsl	x11, x10, x11
  423274:	orr	x11, x11, x13
  423278:	str	x11, [x19, x12]
  42327c:	b	423248 <_obstack_memory_used@@Base+0x90b4>
  423280:	add	x9, x9, #0x1
  423284:	cmp	x9, #0x100
  423288:	mov	w0, wzr
  42328c:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423290:	ldrh	w11, [x8, x9, lsl #1]
  423294:	tbz	w11, #11, 423280 <_obstack_memory_used@@Base+0x90ec>
  423298:	ldrb	w11, [x20, x9]
  42329c:	lsr	x12, x11, #3
  4232a0:	and	x12, x12, #0x18
  4232a4:	ldr	x13, [x19, x12]
  4232a8:	lsl	x11, x10, x11
  4232ac:	orr	x11, x11, x13
  4232b0:	str	x11, [x19, x12]
  4232b4:	b	423280 <_obstack_memory_used@@Base+0x90ec>
  4232b8:	ldr	x0, [x22, #24]
  4232bc:	mov	w24, #0x1                   	// #1
  4232c0:	bfi	x24, x8, #1, #63
  4232c4:	lsl	x1, x24, #3
  4232c8:	bl	4024c0 <realloc@plt>
  4232cc:	cbz	x0, 42342c <_obstack_memory_used@@Base+0x9298>
  4232d0:	str	x0, [x22, #24]
  4232d4:	str	x24, [x23]
  4232d8:	b	422cc4 <_obstack_memory_used@@Base+0x8b30>
  4232dc:	add	x9, x9, #0x1
  4232e0:	cmp	x9, #0x100
  4232e4:	mov	w0, wzr
  4232e8:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  4232ec:	ldrh	w11, [x8, x9, lsl #1]
  4232f0:	tbz	w11, #14, 4232dc <_obstack_memory_used@@Base+0x9148>
  4232f4:	ldrb	w11, [x20, x9]
  4232f8:	lsr	x12, x11, #3
  4232fc:	and	x12, x12, #0x18
  423300:	ldr	x13, [x19, x12]
  423304:	lsl	x11, x10, x11
  423308:	orr	x11, x11, x13
  42330c:	str	x11, [x19, x12]
  423310:	b	4232dc <_obstack_memory_used@@Base+0x9148>
  423314:	add	x9, x9, #0x1
  423318:	cmp	x9, #0x100
  42331c:	mov	w0, wzr
  423320:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423324:	ldrh	w11, [x8, x9, lsl #1]
  423328:	tbz	w11, #8, 423314 <_obstack_memory_used@@Base+0x9180>
  42332c:	ldrb	w11, [x20, x9]
  423330:	lsr	x12, x11, #3
  423334:	and	x12, x12, #0x18
  423338:	ldr	x13, [x19, x12]
  42333c:	lsl	x11, x10, x11
  423340:	orr	x11, x11, x13
  423344:	str	x11, [x19, x12]
  423348:	b	423314 <_obstack_memory_used@@Base+0x9180>
  42334c:	add	x9, x9, #0x1
  423350:	cmp	x9, #0x100
  423354:	mov	w0, wzr
  423358:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  42335c:	ldrh	w11, [x8, x9, lsl #1]
  423360:	tbz	w11, #0, 42334c <_obstack_memory_used@@Base+0x91b8>
  423364:	ldrb	w11, [x20, x9]
  423368:	lsr	x12, x11, #3
  42336c:	and	x12, x12, #0x18
  423370:	ldr	x13, [x19, x12]
  423374:	lsl	x11, x10, x11
  423378:	orr	x11, x11, x13
  42337c:	str	x11, [x19, x12]
  423380:	b	42334c <_obstack_memory_used@@Base+0x91b8>
  423384:	add	x9, x9, #0x1
  423388:	cmp	x9, #0x100
  42338c:	mov	w0, wzr
  423390:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423394:	ldrsh	w11, [x8, x9, lsl #1]
  423398:	tbz	w11, #31, 423384 <_obstack_memory_used@@Base+0x91f0>
  42339c:	ldrb	w11, [x20, x9]
  4233a0:	lsr	x12, x11, #3
  4233a4:	and	x12, x12, #0x18
  4233a8:	ldr	x13, [x19, x12]
  4233ac:	lsl	x11, x10, x11
  4233b0:	orr	x11, x11, x13
  4233b4:	str	x11, [x19, x12]
  4233b8:	b	423384 <_obstack_memory_used@@Base+0x91f0>
  4233bc:	add	x9, x9, #0x1
  4233c0:	cmp	x9, #0x100
  4233c4:	mov	w0, wzr
  4233c8:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  4233cc:	ldrh	w11, [x8, x9, lsl #1]
  4233d0:	tbz	w11, #2, 4233bc <_obstack_memory_used@@Base+0x9228>
  4233d4:	ldrb	w11, [x20, x9]
  4233d8:	lsr	x12, x11, #3
  4233dc:	and	x12, x12, #0x18
  4233e0:	ldr	x13, [x19, x12]
  4233e4:	lsl	x11, x10, x11
  4233e8:	orr	x11, x11, x13
  4233ec:	str	x11, [x19, x12]
  4233f0:	b	4233bc <_obstack_memory_used@@Base+0x9228>
  4233f4:	add	x9, x9, #0x1
  4233f8:	cmp	x9, #0x100
  4233fc:	mov	w0, wzr
  423400:	b.eq	422f8c <_obstack_memory_used@@Base+0x8df8>  // b.none
  423404:	ldrh	w11, [x8, x9, lsl #1]
  423408:	tbz	w11, #12, 4233f4 <_obstack_memory_used@@Base+0x9260>
  42340c:	ldrb	w11, [x20, x9]
  423410:	lsr	x12, x11, #3
  423414:	and	x12, x12, #0x18
  423418:	ldr	x13, [x19, x12]
  42341c:	lsl	x11, x10, x11
  423420:	orr	x11, x11, x13
  423424:	str	x11, [x19, x12]
  423428:	b	4233f4 <_obstack_memory_used@@Base+0x9260>
  42342c:	mov	w0, #0xc                   	// #12
  423430:	b	422f8c <_obstack_memory_used@@Base+0x8df8>
  423434:	stp	x29, x30, [sp, #-64]!
  423438:	stp	x22, x21, [sp, #32]
  42343c:	stp	x20, x19, [sp, #48]
  423440:	ldr	w8, [x1, #48]
  423444:	ldr	x19, [x1, #56]
  423448:	str	x23, [sp, #16]
  42344c:	mov	x29, sp
  423450:	and	w8, w8, #0xff
  423454:	sub	w9, w8, #0x2
  423458:	cmp	w9, #0xe
  42345c:	mov	x8, x0
  423460:	b.hi	42354c <_obstack_memory_used@@Base+0x93b8>  // b.pmore
  423464:	adrp	x10, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  423468:	add	x10, x10, #0x1cf
  42346c:	adr	x11, 423480 <_obstack_memory_used@@Base+0x92ec>
  423470:	ldrb	w12, [x10, x9]
  423474:	add	x11, x11, x12, lsl #2
  423478:	mov	w0, wzr
  42347c:	br	x11
  423480:	ldr	x9, [x1, #32]
  423484:	ldr	x8, [x8, #40]
  423488:	mov	w10, #0x18                  	// #24
  42348c:	ldr	x20, [x9, #56]
  423490:	madd	x19, x19, x10, x8
  423494:	mov	w8, #0x1                   	// #1
  423498:	dup	v0.2d, x8
  42349c:	mov	w0, #0x8                   	// #8
  4234a0:	str	q0, [x19]
  4234a4:	bl	4023a0 <malloc@plt>
  4234a8:	str	x0, [x19, #16]
  4234ac:	cbz	x0, 4235d4 <_obstack_memory_used@@Base+0x9440>
  4234b0:	mov	x8, x0
  4234b4:	mov	w0, wzr
  4234b8:	str	x20, [x8]
  4234bc:	b	4235c0 <_obstack_memory_used@@Base+0x942c>
  4234c0:	ldrb	w9, [x8, #176]
  4234c4:	add	x11, x1, #0x20
  4234c8:	ldr	x22, [x8, #40]
  4234cc:	mov	w0, #0x10                  	// #16
  4234d0:	orr	w9, w9, #0x1
  4234d4:	strb	w9, [x8, #176]
  4234d8:	ldp	x9, x10, [x1, #8]
  4234dc:	mov	w8, #0x18                  	// #24
  4234e0:	madd	x23, x19, x8, x22
  4234e4:	mov	w8, #0x2                   	// #2
  4234e8:	add	x12, x9, #0x18
  4234ec:	cmp	x9, #0x0
  4234f0:	add	x9, x10, #0x18
  4234f4:	csel	x12, x11, x12, eq  // eq = none
  4234f8:	cmp	x10, #0x0
  4234fc:	csel	x9, x11, x9, eq  // eq = none
  423500:	ldr	x10, [x12]
  423504:	ldr	x9, [x9]
  423508:	ldr	x20, [x10, #56]
  42350c:	ldr	x21, [x9, #56]
  423510:	str	x8, [x23]
  423514:	bl	4023a0 <malloc@plt>
  423518:	str	x0, [x23, #16]
  42351c:	cbz	x0, 4235d8 <_obstack_memory_used@@Base+0x9444>
  423520:	mov	w9, #0x18                  	// #24
  423524:	madd	x9, x19, x9, x22
  423528:	mov	x8, x0
  42352c:	cmp	x20, x21
  423530:	add	x9, x9, #0x8
  423534:	b.ne	4235a0 <_obstack_memory_used@@Base+0x940c>  // b.any
  423538:	mov	w10, #0x1                   	// #1
  42353c:	mov	w0, wzr
  423540:	str	x10, [x9]
  423544:	str	x20, [x8]
  423548:	b	4235c0 <_obstack_memory_used@@Base+0x942c>
  42354c:	ldr	x9, [x1, #32]
  423550:	ldr	x8, [x8, #24]
  423554:	mov	w0, wzr
  423558:	ldr	x9, [x9, #56]
  42355c:	str	x9, [x8, x19, lsl #3]
  423560:	b	4235c0 <_obstack_memory_used@@Base+0x942c>
  423564:	ldr	x9, [x1, #32]
  423568:	ldr	x20, [x9, #56]
  42356c:	ldr	x9, [x8, #24]
  423570:	str	x20, [x9, x19, lsl #3]
  423574:	ldrb	w9, [x1, #48]
  423578:	cmp	w9, #0x4
  42357c:	b.ne	423598 <_obstack_memory_used@@Base+0x9404>  // b.any
  423580:	ldr	x8, [x8, #40]
  423584:	mov	w9, #0x18                  	// #24
  423588:	mov	w10, #0x1                   	// #1
  42358c:	dup	v0.2d, x10
  423590:	madd	x19, x19, x9, x8
  423594:	b	42349c <_obstack_memory_used@@Base+0x9308>
  423598:	mov	w0, wzr
  42359c:	b	4235c0 <_obstack_memory_used@@Base+0x942c>
  4235a0:	mov	w10, #0x2                   	// #2
  4235a4:	cmp	x20, x21
  4235a8:	mov	w0, wzr
  4235ac:	str	x10, [x9]
  4235b0:	b.cs	4235bc <_obstack_memory_used@@Base+0x9428>  // b.hs, b.nlast
  4235b4:	stp	x20, x21, [x8]
  4235b8:	b	4235c0 <_obstack_memory_used@@Base+0x942c>
  4235bc:	stp	x21, x20, [x8]
  4235c0:	ldp	x20, x19, [sp, #48]
  4235c4:	ldp	x22, x21, [sp, #32]
  4235c8:	ldr	x23, [sp, #16]
  4235cc:	ldp	x29, x30, [sp], #64
  4235d0:	ret
  4235d4:	stp	xzr, xzr, [x19]
  4235d8:	mov	w0, #0xc                   	// #12
  4235dc:	b	4235c0 <_obstack_memory_used@@Base+0x942c>
  4235e0:	stp	x29, x30, [sp, #-80]!
  4235e4:	stp	x24, x23, [sp, #32]
  4235e8:	stp	x22, x21, [sp, #48]
  4235ec:	stp	x20, x19, [sp, #64]
  4235f0:	ldr	x22, [x3, #8]
  4235f4:	mov	x19, x3
  4235f8:	mov	x21, x1
  4235fc:	mov	x20, x0
  423600:	str	x25, [sp, #16]
  423604:	mov	x29, sp
  423608:	tbz	w2, #4, 423628 <_obstack_memory_used@@Base+0x9494>
  42360c:	cbz	x22, 423628 <_obstack_memory_used@@Base+0x9494>
  423610:	ldr	x8, [x19, #40]
  423614:	cmp	x8, #0x3f
  423618:	b.gt	423790 <_obstack_memory_used@@Base+0x95fc>
  42361c:	ldr	x9, [x21, #160]
  423620:	lsr	x8, x9, x8
  423624:	tbz	w8, #0, 423790 <_obstack_memory_used@@Base+0x95fc>
  423628:	ldr	w8, [x21, #128]
  42362c:	cmp	w8, #0xf
  423630:	b.eq	4237ac <_obstack_memory_used@@Base+0x9618>  // b.none
  423634:	ldr	x0, [x21, #112]
  423638:	add	w9, w8, #0x1
  42363c:	sxtw	x8, w8
  423640:	add	x23, x0, x8, lsl #6
  423644:	str	w9, [x21, #128]
  423648:	mov	w9, #0x8                   	// #8
  42364c:	mov	x8, #0xffffffffffffffff    	// #-1
  423650:	str	xzr, [x23, #8]!
  423654:	stp	xzr, xzr, [x23, #16]
  423658:	str	xzr, [x23, #8]
  42365c:	str	w9, [x23, #48]
  423660:	stp	xzr, xzr, [x23, #32]
  423664:	str	x8, [x23, #56]
  423668:	ldr	w8, [x21, #128]
  42366c:	cmp	w8, #0xf
  423670:	b.eq	4237f8 <_obstack_memory_used@@Base+0x9664>  // b.none
  423674:	ldr	x0, [x21, #112]
  423678:	add	w9, w8, #0x1
  42367c:	sxtw	x8, w8
  423680:	add	x24, x0, x8, lsl #6
  423684:	mov	w10, #0x9                   	// #9
  423688:	mov	x11, #0xffffffffffffffff    	// #-1
  42368c:	str	w9, [x21, #128]
  423690:	str	xzr, [x24, #8]!
  423694:	stp	xzr, xzr, [x24, #16]
  423698:	str	xzr, [x24, #8]
  42369c:	str	w10, [x24, #48]
  4236a0:	stp	xzr, xzr, [x24, #32]
  4236a4:	str	x11, [x24, #56]
  4236a8:	mov	x25, x24
  4236ac:	cbz	x22, 4236fc <_obstack_memory_used@@Base+0x9568>
  4236b0:	ldr	w8, [x21, #128]
  4236b4:	cmp	w8, #0xf
  4236b8:	b.eq	4237d0 <_obstack_memory_used@@Base+0x963c>  // b.none
  4236bc:	ldr	x0, [x21, #112]
  4236c0:	add	w9, w8, #0x1
  4236c4:	sxtw	x8, w8
  4236c8:	add	x25, x0, x8, lsl #6
  4236cc:	mov	w10, #0x10                  	// #16
  4236d0:	mov	x11, #0xffffffffffffffff    	// #-1
  4236d4:	str	w9, [x21, #128]
  4236d8:	str	xzr, [x25, #8]!
  4236dc:	stp	x22, x24, [x25, #8]
  4236e0:	stp	xzr, xzr, [x25, #32]
  4236e4:	str	w10, [x25, #48]
  4236e8:	str	xzr, [x25, #24]
  4236ec:	str	x11, [x25, #56]
  4236f0:	str	x25, [x22]
  4236f4:	cbz	x24, 4236fc <_obstack_memory_used@@Base+0x9568>
  4236f8:	str	x25, [x24]
  4236fc:	ldr	w8, [x21, #128]
  423700:	cmp	w8, #0xf
  423704:	b.eq	423830 <_obstack_memory_used@@Base+0x969c>  // b.none
  423708:	ldr	x0, [x21, #112]
  42370c:	add	w9, w8, #0x1
  423710:	sxtw	x8, w8
  423714:	add	x22, x0, x8, lsl #6
  423718:	mov	w10, #0x10                  	// #16
  42371c:	mov	x11, #0xffffffffffffffff    	// #-1
  423720:	str	w9, [x21, #128]
  423724:	str	xzr, [x22, #8]!
  423728:	stp	x23, x25, [x22, #8]
  42372c:	stp	xzr, xzr, [x22, #32]
  423730:	str	w10, [x22, #48]
  423734:	str	xzr, [x22, #24]
  423738:	str	x11, [x22, #56]
  42373c:	cbz	x23, 423744 <_obstack_memory_used@@Base+0x95b0>
  423740:	str	x22, [x23]
  423744:	cbz	x25, 42374c <_obstack_memory_used@@Base+0x95b8>
  423748:	str	x22, [x25]
  42374c:	cbz	x24, 42385c <_obstack_memory_used@@Base+0x96c8>
  423750:	cbz	x23, 42385c <_obstack_memory_used@@Base+0x96c8>
  423754:	cbz	x25, 42385c <_obstack_memory_used@@Base+0x96c8>
  423758:	cbz	x22, 42385c <_obstack_memory_used@@Base+0x96c8>
  42375c:	ldr	x8, [x19, #40]
  423760:	str	x8, [x24, #40]
  423764:	str	x8, [x23, #40]
  423768:	ldr	w8, [x19, #48]
  42376c:	ldr	w9, [x24, #48]
  423770:	and	w8, w8, #0x80000
  423774:	and	w9, w9, #0xfff7ffff
  423778:	orr	w9, w9, w8
  42377c:	str	w9, [x24, #48]
  423780:	ldr	w9, [x23, #48]
  423784:	and	w9, w9, #0xfff7ffff
  423788:	orr	w8, w9, w8
  42378c:	str	w8, [x23, #48]
  423790:	mov	x0, x22
  423794:	ldp	x20, x19, [sp, #64]
  423798:	ldp	x22, x21, [sp, #48]
  42379c:	ldp	x24, x23, [sp, #32]
  4237a0:	ldr	x25, [sp, #16]
  4237a4:	ldp	x29, x30, [sp], #80
  4237a8:	ret
  4237ac:	mov	w0, #0x3c8                 	// #968
  4237b0:	bl	4023a0 <malloc@plt>
  4237b4:	cbz	x0, 4237f4 <_obstack_memory_used@@Base+0x9660>
  4237b8:	ldr	x9, [x21, #112]
  4237bc:	mov	w8, wzr
  4237c0:	str	x9, [x0]
  4237c4:	str	x0, [x21, #112]
  4237c8:	str	wzr, [x21, #128]
  4237cc:	b	423638 <_obstack_memory_used@@Base+0x94a4>
  4237d0:	mov	w0, #0x3c8                 	// #968
  4237d4:	bl	4023a0 <malloc@plt>
  4237d8:	cbz	x0, 42382c <_obstack_memory_used@@Base+0x9698>
  4237dc:	ldr	x9, [x21, #112]
  4237e0:	mov	w8, wzr
  4237e4:	str	x9, [x0]
  4237e8:	str	x0, [x21, #112]
  4237ec:	str	wzr, [x21, #128]
  4237f0:	b	4236c0 <_obstack_memory_used@@Base+0x952c>
  4237f4:	mov	x23, xzr
  4237f8:	mov	w0, #0x3c8                 	// #968
  4237fc:	bl	4023a0 <malloc@plt>
  423800:	cbz	x0, 42381c <_obstack_memory_used@@Base+0x9688>
  423804:	ldr	x9, [x21, #112]
  423808:	mov	w8, wzr
  42380c:	str	x9, [x0]
  423810:	str	x0, [x21, #112]
  423814:	str	wzr, [x21, #128]
  423818:	b	423678 <_obstack_memory_used@@Base+0x94e4>
  42381c:	mov	x24, xzr
  423820:	mov	x25, x24
  423824:	cbnz	x22, 4236b0 <_obstack_memory_used@@Base+0x951c>
  423828:	b	4236fc <_obstack_memory_used@@Base+0x9568>
  42382c:	mov	x25, xzr
  423830:	mov	w0, #0x3c8                 	// #968
  423834:	bl	4023a0 <malloc@plt>
  423838:	cbz	x0, 423854 <_obstack_memory_used@@Base+0x96c0>
  42383c:	ldr	x9, [x21, #112]
  423840:	mov	w8, wzr
  423844:	str	x9, [x0]
  423848:	str	x0, [x21, #112]
  42384c:	str	wzr, [x21, #128]
  423850:	b	42370c <_obstack_memory_used@@Base+0x9578>
  423854:	mov	x22, xzr
  423858:	cbnz	x24, 423750 <_obstack_memory_used@@Base+0x95bc>
  42385c:	mov	w8, #0xc                   	// #12
  423860:	mov	x22, xzr
  423864:	str	w8, [x20]
  423868:	b	423790 <_obstack_memory_used@@Base+0x95fc>
  42386c:	stp	x29, x30, [sp, #-80]!
  423870:	stp	x26, x25, [sp, #16]
  423874:	stp	x24, x23, [sp, #32]
  423878:	stp	x22, x21, [sp, #48]
  42387c:	stp	x20, x19, [sp, #64]
  423880:	ldp	x24, x8, [x0, #8]
  423884:	mov	x20, x2
  423888:	mov	x19, x0
  42388c:	mov	x21, x1
  423890:	cmp	x8, x24
  423894:	mov	x29, sp
  423898:	b.cs	423964 <_obstack_memory_used@@Base+0x97d0>  // b.hs, b.nlast
  42389c:	ldr	x9, [x19]
  4238a0:	add	x8, x9, x8, lsl #4
  4238a4:	stp	x21, x20, [x8]
  4238a8:	ldr	x8, [x19]
  4238ac:	ldr	x9, [x19, #16]
  4238b0:	add	x9, x8, x9, lsl #4
  4238b4:	ldr	w10, [x9, #8]
  4238b8:	and	w8, w20, #0xff
  4238bc:	cmp	w8, #0x5
  4238c0:	and	w10, w10, #0xfffc00ff
  4238c4:	str	w10, [x9, #8]
  4238c8:	b.ne	4238e0 <_obstack_memory_used@@Base+0x974c>  // b.any
  4238cc:	ldr	w9, [x19, #180]
  4238d0:	cmp	w9, #0x1
  4238d4:	b.le	4238e0 <_obstack_memory_used@@Base+0x974c>
  4238d8:	mov	w8, #0x100000              	// #1048576
  4238dc:	b	4238ec <_obstack_memory_used@@Base+0x9758>
  4238e0:	cmp	w8, #0x6
  4238e4:	cset	w8, eq  // eq = none
  4238e8:	lsl	w8, w8, #20
  4238ec:	ldr	x9, [x19]
  4238f0:	ldr	x10, [x19, #16]
  4238f4:	add	x9, x9, x10, lsl #4
  4238f8:	ldr	w10, [x9, #8]
  4238fc:	and	w10, w10, #0xffefffff
  423900:	orr	w8, w10, w8
  423904:	str	w8, [x9, #8]
  423908:	ldp	x9, x8, [x19, #16]
  42390c:	mov	x10, #0xffffffffffffffff    	// #-1
  423910:	str	x10, [x8, x9, lsl #3]
  423914:	ldr	x8, [x19, #40]
  423918:	ldr	x9, [x19, #16]
  42391c:	mov	w10, #0x18                  	// #24
  423920:	madd	x8, x9, x10, x8
  423924:	stp	xzr, xzr, [x8]
  423928:	str	xzr, [x8, #16]
  42392c:	ldr	x8, [x19, #48]
  423930:	ldr	x9, [x19, #16]
  423934:	madd	x8, x9, x10, x8
  423938:	stp	xzr, xzr, [x8]
  42393c:	str	xzr, [x8, #16]
  423940:	ldr	x0, [x19, #16]
  423944:	add	x8, x0, #0x1
  423948:	str	x8, [x19, #16]
  42394c:	ldp	x20, x19, [sp, #64]
  423950:	ldp	x22, x21, [sp, #48]
  423954:	ldp	x24, x23, [sp, #32]
  423958:	ldp	x26, x25, [sp, #16]
  42395c:	ldp	x29, x30, [sp], #80
  423960:	ret
  423964:	mov	x8, #0xaaaaaaaaaaaaaaaa    	// #-6148914691236517206
  423968:	lsl	x26, x24, #1
  42396c:	movk	x8, #0xaaa, lsl #48
  423970:	cmp	x26, x8
  423974:	b.hi	423a04 <_obstack_memory_used@@Base+0x9870>  // b.pmore
  423978:	ldr	x0, [x19]
  42397c:	lsl	x1, x24, #5
  423980:	bl	4024c0 <realloc@plt>
  423984:	cbz	x0, 423a04 <_obstack_memory_used@@Base+0x9870>
  423988:	ldr	x8, [x19, #24]
  42398c:	lsl	x23, x24, #4
  423990:	str	x0, [x19]
  423994:	mov	x1, x23
  423998:	mov	x0, x8
  42399c:	bl	4024c0 <realloc@plt>
  4239a0:	ldr	x8, [x19, #32]
  4239a4:	mov	x22, x0
  4239a8:	mov	x1, x23
  4239ac:	mov	x0, x8
  4239b0:	bl	4024c0 <realloc@plt>
  4239b4:	mov	x23, x0
  4239b8:	ldr	x0, [x19, #40]
  4239bc:	add	x8, x24, x24, lsl #1
  4239c0:	lsl	x25, x8, #4
  4239c4:	mov	x1, x25
  4239c8:	bl	4024c0 <realloc@plt>
  4239cc:	ldr	x8, [x19, #48]
  4239d0:	mov	x24, x0
  4239d4:	mov	x1, x25
  4239d8:	mov	x0, x8
  4239dc:	bl	4024c0 <realloc@plt>
  4239e0:	cbz	x22, 423a0c <_obstack_memory_used@@Base+0x9878>
  4239e4:	cbz	x23, 423a0c <_obstack_memory_used@@Base+0x9878>
  4239e8:	cbz	x24, 423a0c <_obstack_memory_used@@Base+0x9878>
  4239ec:	cbz	x0, 423a0c <_obstack_memory_used@@Base+0x9878>
  4239f0:	ldr	x8, [x19, #16]
  4239f4:	stp	x22, x23, [x19, #24]
  4239f8:	stp	x24, x0, [x19, #40]
  4239fc:	str	x26, [x19, #8]
  423a00:	b	42389c <_obstack_memory_used@@Base+0x9708>
  423a04:	mov	x0, #0xffffffffffffffff    	// #-1
  423a08:	b	42394c <_obstack_memory_used@@Base+0x97b8>
  423a0c:	mov	x19, x0
  423a10:	mov	x0, x22
  423a14:	bl	402620 <free@plt>
  423a18:	mov	x0, x23
  423a1c:	bl	402620 <free@plt>
  423a20:	mov	x0, x24
  423a24:	bl	402620 <free@plt>
  423a28:	mov	x0, x19
  423a2c:	bl	402620 <free@plt>
  423a30:	mov	x0, #0xffffffffffffffff    	// #-1
  423a34:	b	42394c <_obstack_memory_used@@Base+0x97b8>
  423a38:	sub	sp, sp, #0x90
  423a3c:	stp	x29, x30, [sp, #64]
  423a40:	stp	x26, x25, [sp, #80]
  423a44:	stp	x24, x23, [sp, #96]
  423a48:	stp	x22, x21, [sp, #112]
  423a4c:	stp	x20, x19, [sp, #128]
  423a50:	ldr	x23, [x1, #40]
  423a54:	mov	w8, #0x18                  	// #24
  423a58:	mov	x19, x0
  423a5c:	add	x29, sp, #0x40
  423a60:	madd	x25, x2, x8, x23
  423a64:	ldr	x8, [x25, #8]!
  423a68:	mov	w21, w3
  423a6c:	mov	x20, x2
  423a70:	mov	x22, x1
  423a74:	add	x24, x8, #0x1
  423a78:	lsl	x0, x24, #3
  423a7c:	stp	x24, xzr, [sp, #32]
  423a80:	bl	4023a0 <malloc@plt>
  423a84:	str	x0, [sp, #48]
  423a88:	cbz	x0, 423cac <_obstack_memory_used@@Base+0x9b18>
  423a8c:	ldr	x8, [x22, #48]
  423a90:	mov	w9, #0x18                  	// #24
  423a94:	madd	x8, x20, x9, x8
  423a98:	mov	x9, #0xffffffffffffffff    	// #-1
  423a9c:	str	x9, [x8, #8]
  423aa0:	ldr	x9, [x22]
  423aa4:	add	x8, x9, x20, lsl #4
  423aa8:	ldr	w8, [x8, #8]
  423aac:	ubfx	w4, w8, #8, #10
  423ab0:	cbz	w4, 423afc <_obstack_memory_used@@Base+0x9968>
  423ab4:	ldr	x10, [x25]
  423ab8:	cbz	x10, 423afc <_obstack_memory_used@@Base+0x9968>
  423abc:	mov	w10, #0x18                  	// #24
  423ac0:	madd	x10, x20, x10, x23
  423ac4:	ldr	x10, [x10, #16]
  423ac8:	ldr	x10, [x10]
  423acc:	add	x9, x9, x10, lsl #4
  423ad0:	ldrb	w9, [x9, #10]
  423ad4:	tbnz	w9, #2, 423afc <_obstack_memory_used@@Base+0x9968>
  423ad8:	mov	x0, x22
  423adc:	mov	x1, x20
  423ae0:	mov	x2, x20
  423ae4:	mov	x3, x20
  423ae8:	bl	423d48 <_obstack_memory_used@@Base+0x9bb4>
  423aec:	cbnz	w0, 423c68 <_obstack_memory_used@@Base+0x9ad4>
  423af0:	ldr	x8, [x22]
  423af4:	add	x8, x8, x20, lsl #4
  423af8:	ldr	w8, [x8, #8]
  423afc:	tbz	w8, #3, 423bc4 <_obstack_memory_used@@Base+0x9a30>
  423b00:	ldr	x8, [x22, #40]
  423b04:	mov	w9, #0x18                  	// #24
  423b08:	madd	x9, x20, x9, x8
  423b0c:	ldr	x9, [x9, #8]
  423b10:	cmp	x9, #0x1
  423b14:	b.lt	423bc4 <_obstack_memory_used@@Base+0x9a30>  // b.tstop
  423b18:	mov	w25, wzr
  423b1c:	mov	x24, xzr
  423b20:	mov	w26, #0x18                  	// #24
  423b24:	b	423b44 <_obstack_memory_used@@Base+0x99b0>
  423b28:	mov	w25, #0x1                   	// #1
  423b2c:	ldr	x8, [x22, #40]
  423b30:	add	x24, x24, #0x1
  423b34:	madd	x9, x20, x26, x8
  423b38:	ldr	x9, [x9, #8]
  423b3c:	cmp	x24, x9
  423b40:	b.ge	423c0c <_obstack_memory_used@@Base+0x9a78>  // b.tcont
  423b44:	madd	x8, x20, x26, x8
  423b48:	ldr	x8, [x8, #16]
  423b4c:	ldr	x23, [x8, x24, lsl #3]
  423b50:	ldr	x8, [x22, #48]
  423b54:	madd	x9, x23, x26, x8
  423b58:	ldr	x9, [x9, #8]
  423b5c:	cmn	x9, #0x1
  423b60:	b.eq	423b28 <_obstack_memory_used@@Base+0x9994>  // b.none
  423b64:	cbnz	x9, 423b84 <_obstack_memory_used@@Base+0x99f0>
  423b68:	mov	x0, sp
  423b6c:	mov	x1, x22
  423b70:	mov	x2, x23
  423b74:	mov	w3, wzr
  423b78:	bl	423a38 <_obstack_memory_used@@Base+0x98a4>
  423b7c:	cbz	w0, 423b98 <_obstack_memory_used@@Base+0x9a04>
  423b80:	b	423c68 <_obstack_memory_used@@Base+0x9ad4>
  423b84:	madd	x8, x23, x26, x8
  423b88:	ldr	x9, [x8, #16]
  423b8c:	ldr	q0, [x8]
  423b90:	str	x9, [sp, #16]
  423b94:	str	q0, [sp]
  423b98:	add	x0, sp, #0x20
  423b9c:	mov	x1, sp
  423ba0:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  423ba4:	cbnz	w0, 423c68 <_obstack_memory_used@@Base+0x9ad4>
  423ba8:	ldr	x8, [x22, #48]
  423bac:	madd	x8, x23, x26, x8
  423bb0:	ldr	x8, [x8, #8]
  423bb4:	cbnz	x8, 423b2c <_obstack_memory_used@@Base+0x9998>
  423bb8:	ldr	x0, [sp, #16]
  423bbc:	bl	402620 <free@plt>
  423bc0:	b	423b28 <_obstack_memory_used@@Base+0x9994>
  423bc4:	mov	w23, #0x1                   	// #1
  423bc8:	cbz	x24, 423c1c <_obstack_memory_used@@Base+0x9a88>
  423bcc:	ldr	x25, [sp, #40]
  423bd0:	cbnz	x25, 423c84 <_obstack_memory_used@@Base+0x9af0>
  423bd4:	ldr	x8, [sp, #48]
  423bd8:	mov	w9, #0x1                   	// #1
  423bdc:	str	x20, [x8]
  423be0:	str	x9, [sp, #40]
  423be4:	ldr	x8, [x22, #48]
  423be8:	orr	w9, w23, w21
  423bec:	tbz	w9, #0, 423c48 <_obstack_memory_used@@Base+0x9ab4>
  423bf0:	ldr	x9, [sp, #48]
  423bf4:	ldr	q0, [sp, #32]
  423bf8:	mov	w10, #0x18                  	// #24
  423bfc:	madd	x8, x20, x10, x8
  423c00:	str	x9, [x8, #16]
  423c04:	str	q0, [x8]
  423c08:	b	423c54 <_obstack_memory_used@@Base+0x9ac0>
  423c0c:	ldr	x24, [sp, #32]
  423c10:	tst	w25, #0x1
  423c14:	cset	w23, eq  // eq = none
  423c18:	cbnz	x24, 423bcc <_obstack_memory_used@@Base+0x9a38>
  423c1c:	mov	w8, #0x1                   	// #1
  423c20:	dup	v0.2d, x8
  423c24:	mov	w0, #0x8                   	// #8
  423c28:	str	q0, [sp, #32]
  423c2c:	bl	4023a0 <malloc@plt>
  423c30:	str	x0, [sp, #48]
  423c34:	cbz	x0, 423cb4 <_obstack_memory_used@@Base+0x9b20>
  423c38:	str	x20, [x0]
  423c3c:	ldr	x8, [x22, #48]
  423c40:	orr	w9, w23, w21
  423c44:	tbnz	w9, #0, 423bf0 <_obstack_memory_used@@Base+0x9a5c>
  423c48:	mov	w9, #0x18                  	// #24
  423c4c:	madd	x8, x20, x9, x8
  423c50:	str	xzr, [x8, #8]
  423c54:	ldr	x8, [sp, #48]
  423c58:	ldr	q0, [sp, #32]
  423c5c:	mov	w0, wzr
  423c60:	str	x8, [x19, #16]
  423c64:	str	q0, [x19]
  423c68:	ldp	x20, x19, [sp, #128]
  423c6c:	ldp	x22, x21, [sp, #112]
  423c70:	ldp	x24, x23, [sp, #96]
  423c74:	ldp	x26, x25, [sp, #80]
  423c78:	ldp	x29, x30, [sp, #64]
  423c7c:	add	sp, sp, #0x90
  423c80:	ret
  423c84:	cmp	x24, x25
  423c88:	b.ne	423cc0 <_obstack_memory_used@@Base+0x9b2c>  // b.any
  423c8c:	ldr	x0, [sp, #48]
  423c90:	lsl	x8, x24, #1
  423c94:	lsl	x1, x24, #4
  423c98:	str	x8, [sp, #32]
  423c9c:	bl	4024c0 <realloc@plt>
  423ca0:	cbz	x0, 423cac <_obstack_memory_used@@Base+0x9b18>
  423ca4:	str	x0, [sp, #48]
  423ca8:	b	423cc4 <_obstack_memory_used@@Base+0x9b30>
  423cac:	mov	w0, #0xc                   	// #12
  423cb0:	b	423c68 <_obstack_memory_used@@Base+0x9ad4>
  423cb4:	stp	xzr, xzr, [sp, #32]
  423cb8:	mov	w0, #0xc                   	// #12
  423cbc:	b	423c68 <_obstack_memory_used@@Base+0x9ad4>
  423cc0:	ldr	x0, [sp, #48]
  423cc4:	ldr	x8, [x0]
  423cc8:	cmp	x8, x20
  423ccc:	b.le	423cf8 <_obstack_memory_used@@Base+0x9b64>
  423cd0:	cmp	x25, #0x1
  423cd4:	b.lt	423d28 <_obstack_memory_used@@Base+0x9b94>  // b.tstop
  423cd8:	mov	x9, x25
  423cdc:	add	x10, x0, x9, lsl #3
  423ce0:	ldur	x11, [x10, #-8]
  423ce4:	subs	x8, x9, #0x1
  423ce8:	mov	x9, x8
  423cec:	str	x11, [x10]
  423cf0:	b.gt	423cdc <_obstack_memory_used@@Base+0x9b48>
  423cf4:	b	423d2c <_obstack_memory_used@@Base+0x9b98>
  423cf8:	add	x8, x0, x25, lsl #3
  423cfc:	ldur	x9, [x8, #-8]
  423d00:	mov	x8, x25
  423d04:	cmp	x9, x20
  423d08:	b.le	423d2c <_obstack_memory_used@@Base+0x9b98>
  423d0c:	add	x10, x0, x8, lsl #3
  423d10:	str	x9, [x10]
  423d14:	ldur	x9, [x10, #-16]
  423d18:	sub	x8, x8, #0x1
  423d1c:	cmp	x9, x20
  423d20:	b.gt	423d0c <_obstack_memory_used@@Base+0x9b78>
  423d24:	b	423d2c <_obstack_memory_used@@Base+0x9b98>
  423d28:	mov	x8, x25
  423d2c:	str	x20, [x0, x8, lsl #3]
  423d30:	add	x8, x25, #0x1
  423d34:	str	x8, [sp, #40]
  423d38:	ldr	x8, [x22, #48]
  423d3c:	orr	w9, w23, w21
  423d40:	tbnz	w9, #0, 423bf0 <_obstack_memory_used@@Base+0x9a5c>
  423d44:	b	423c48 <_obstack_memory_used@@Base+0x9ab4>
  423d48:	stp	x29, x30, [sp, #-96]!
  423d4c:	stp	x26, x25, [sp, #32]
  423d50:	stp	x24, x23, [sp, #48]
  423d54:	stp	x22, x21, [sp, #64]
  423d58:	stp	x20, x19, [sp, #80]
  423d5c:	mov	w19, w4
  423d60:	mov	x20, x3
  423d64:	mov	x22, x2
  423d68:	mov	x23, x1
  423d6c:	mov	x21, x0
  423d70:	mov	w25, #0x18                  	// #24
  423d74:	str	x27, [sp, #16]
  423d78:	mov	x29, sp
  423d7c:	ubfiz	w26, w19, #8, #10
  423d80:	mov	x27, x23
  423d84:	b	423e38 <_obstack_memory_used@@Base+0x9ca4>
  423d88:	ldr	x9, [x21, #24]
  423d8c:	ldr	x10, [x21, #40]
  423d90:	mov	x0, x21
  423d94:	ldr	x24, [x9, x27, lsl #3]
  423d98:	madd	x9, x22, x25, x10
  423d9c:	str	xzr, [x9, #8]
  423da0:	add	x8, x8, x24, lsl #4
  423da4:	ldp	x1, x2, [x8]
  423da8:	bl	42386c <_obstack_memory_used@@Base+0x96d8>
  423dac:	cmn	x0, #0x1
  423db0:	b.eq	424114 <_obstack_memory_used@@Base+0x9f80>  // b.none
  423db4:	ldr	x8, [x21]
  423db8:	lsl	x9, x0, #4
  423dbc:	mov	x23, x0
  423dc0:	mov	x1, x23
  423dc4:	add	x8, x8, x9
  423dc8:	ldr	w10, [x8, #8]
  423dcc:	and	w10, w10, #0xfffc00ff
  423dd0:	orr	w10, w10, w26
  423dd4:	str	w10, [x8, #8]
  423dd8:	ldr	x8, [x21]
  423ddc:	add	x10, x8, x24, lsl #4
  423de0:	ldr	w10, [x10, #8]
  423de4:	add	x8, x8, x9
  423de8:	ldr	w11, [x8, #8]
  423dec:	and	w10, w10, #0x3ff00
  423df0:	orr	w10, w10, w11
  423df4:	str	w10, [x8, #8]
  423df8:	ldr	x8, [x21]
  423dfc:	add	x8, x8, x9
  423e00:	ldr	w9, [x8, #8]
  423e04:	orr	w9, w9, #0x40000
  423e08:	str	w9, [x8, #8]
  423e0c:	ldr	x8, [x21, #32]
  423e10:	str	x24, [x8, x0, lsl #3]
  423e14:	ldr	x8, [x21, #24]
  423e18:	ldr	x9, [x8, x27, lsl #3]
  423e1c:	str	x9, [x8, x22, lsl #3]
  423e20:	ldr	x8, [x21, #40]
  423e24:	madd	x0, x22, x25, x8
  423e28:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  423e2c:	mov	x27, x24
  423e30:	mov	x22, x23
  423e34:	tbz	w0, #0, 424114 <_obstack_memory_used@@Base+0x9f80>
  423e38:	ldr	x8, [x21]
  423e3c:	add	x10, x8, x27, lsl #4
  423e40:	ldrb	w9, [x10, #8]!
  423e44:	cmp	w9, #0x4
  423e48:	b.eq	423d88 <_obstack_memory_used@@Base+0x9bf4>  // b.none
  423e4c:	ldr	x9, [x21, #40]
  423e50:	madd	x11, x27, x25, x9
  423e54:	ldr	x11, [x11, #8]
  423e58:	cbz	x11, 4240cc <_obstack_memory_used@@Base+0x9f38>
  423e5c:	madd	x12, x27, x25, x9
  423e60:	ldr	x12, [x12, #16]
  423e64:	cmp	x11, #0x1
  423e68:	ldr	x23, [x12]
  423e6c:	madd	x12, x22, x25, x9
  423e70:	str	xzr, [x12, #8]
  423e74:	b.eq	424024 <_obstack_memory_used@@Base+0x9e90>  // b.none
  423e78:	ldr	x12, [x21, #16]
  423e7c:	sub	x1, x12, #0x1
  423e80:	cmp	x1, #0x1
  423e84:	b.lt	423ecc <_obstack_memory_used@@Base+0x9d38>  // b.tstop
  423e88:	add	x10, x8, x1, lsl #4
  423e8c:	ldr	w11, [x10, #8]
  423e90:	tbz	w11, #18, 423ecc <_obstack_memory_used@@Base+0x9d38>
  423e94:	ldr	x10, [x21, #32]
  423e98:	add	x12, x8, x12, lsl #4
  423e9c:	sub	x12, x12, #0x18
  423ea0:	ldr	x13, [x10, x1, lsl #3]
  423ea4:	cmp	x13, x23
  423ea8:	b.ne	423eb8 <_obstack_memory_used@@Base+0x9d24>  // b.any
  423eac:	ubfx	w11, w11, #8, #10
  423eb0:	cmp	w11, w19
  423eb4:	b.eq	424014 <_obstack_memory_used@@Base+0x9e80>  // b.none
  423eb8:	ldr	w11, [x12], #-16
  423ebc:	sub	x1, x1, #0x1
  423ec0:	cmp	x1, #0x1
  423ec4:	b.lt	423ecc <_obstack_memory_used@@Base+0x9d38>  // b.tstop
  423ec8:	tbnz	w11, #18, 423ea0 <_obstack_memory_used@@Base+0x9d0c>
  423ecc:	add	x8, x8, x23, lsl #4
  423ed0:	ldp	x1, x2, [x8]
  423ed4:	mov	x0, x21
  423ed8:	bl	42386c <_obstack_memory_used@@Base+0x96d8>
  423edc:	cmn	x0, #0x1
  423ee0:	b.eq	424114 <_obstack_memory_used@@Base+0x9f80>  // b.none
  423ee4:	ldr	x8, [x21]
  423ee8:	lsl	x9, x0, #4
  423eec:	mov	x24, x0
  423ef0:	mov	x1, x24
  423ef4:	add	x8, x8, x9
  423ef8:	ldr	w10, [x8, #8]
  423efc:	and	w10, w10, #0xfffc00ff
  423f00:	orr	w10, w10, w26
  423f04:	str	w10, [x8, #8]
  423f08:	ldr	x8, [x21]
  423f0c:	add	x10, x8, x23, lsl #4
  423f10:	ldr	w10, [x10, #8]
  423f14:	add	x8, x8, x9
  423f18:	ldr	w11, [x8, #8]
  423f1c:	and	w10, w10, #0x3ff00
  423f20:	orr	w10, w10, w11
  423f24:	str	w10, [x8, #8]
  423f28:	ldr	x8, [x21]
  423f2c:	add	x8, x8, x9
  423f30:	ldr	w9, [x8, #8]
  423f34:	orr	w9, w9, #0x40000
  423f38:	str	w9, [x8, #8]
  423f3c:	ldr	x8, [x21, #32]
  423f40:	str	x23, [x8, x0, lsl #3]
  423f44:	ldr	x8, [x21, #40]
  423f48:	madd	x0, x22, x25, x8
  423f4c:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  423f50:	tbz	w0, #0, 424114 <_obstack_memory_used@@Base+0x9f80>
  423f54:	mov	x0, x21
  423f58:	mov	x1, x23
  423f5c:	mov	x2, x24
  423f60:	mov	x3, x20
  423f64:	mov	w4, w19
  423f68:	bl	423d48 <_obstack_memory_used@@Base+0x9bb4>
  423f6c:	cbnz	w0, 4240dc <_obstack_memory_used@@Base+0x9f48>
  423f70:	ldr	x8, [x21, #40]
  423f74:	ldr	x9, [x21]
  423f78:	mov	x0, x21
  423f7c:	madd	x8, x27, x25, x8
  423f80:	ldr	x8, [x8, #16]
  423f84:	ldr	x27, [x8, #8]
  423f88:	add	x8, x9, x27, lsl #4
  423f8c:	ldp	x1, x2, [x8]
  423f90:	bl	42386c <_obstack_memory_used@@Base+0x96d8>
  423f94:	cmn	x0, #0x1
  423f98:	b.eq	424114 <_obstack_memory_used@@Base+0x9f80>  // b.none
  423f9c:	ldr	x8, [x21]
  423fa0:	lsl	x9, x0, #4
  423fa4:	mov	x23, x0
  423fa8:	mov	x1, x23
  423fac:	add	x8, x8, x9
  423fb0:	ldr	w10, [x8, #8]
  423fb4:	and	w10, w10, #0xfffc00ff
  423fb8:	orr	w10, w10, w26
  423fbc:	str	w10, [x8, #8]
  423fc0:	ldr	x8, [x21]
  423fc4:	add	x10, x8, x27, lsl #4
  423fc8:	ldr	w10, [x10, #8]
  423fcc:	add	x8, x8, x9
  423fd0:	ldr	w11, [x8, #8]
  423fd4:	and	w10, w10, #0x3ff00
  423fd8:	orr	w10, w10, w11
  423fdc:	str	w10, [x8, #8]
  423fe0:	ldr	x8, [x21]
  423fe4:	add	x8, x8, x9
  423fe8:	ldr	w9, [x8, #8]
  423fec:	orr	w9, w9, #0x40000
  423ff0:	str	w9, [x8, #8]
  423ff4:	ldr	x8, [x21, #32]
  423ff8:	str	x27, [x8, x0, lsl #3]
  423ffc:	ldr	x8, [x21, #40]
  424000:	madd	x0, x22, x25, x8
  424004:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  424008:	mov	x22, x23
  42400c:	tbnz	w0, #0, 423e38 <_obstack_memory_used@@Base+0x9ca4>
  424010:	b	424114 <_obstack_memory_used@@Base+0x9f80>
  424014:	madd	x0, x22, x25, x9
  424018:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  42401c:	tbnz	w0, #0, 423f70 <_obstack_memory_used@@Base+0x9ddc>
  424020:	b	424114 <_obstack_memory_used@@Base+0x9f80>
  424024:	cmp	x27, x20
  424028:	b.ne	424034 <_obstack_memory_used@@Base+0x9ea0>  // b.any
  42402c:	cmp	x22, x27
  424030:	b.ne	4240f8 <_obstack_memory_used@@Base+0x9f64>  // b.any
  424034:	add	x8, x8, x23, lsl #4
  424038:	ldp	x1, x2, [x8]
  42403c:	ldr	w26, [x10]
  424040:	mov	x0, x21
  424044:	bl	42386c <_obstack_memory_used@@Base+0x96d8>
  424048:	cmn	x0, #0x1
  42404c:	b.eq	424114 <_obstack_memory_used@@Base+0x9f80>  // b.none
  424050:	ldr	x8, [x21]
  424054:	lsl	x9, x0, #4
  424058:	ubfx	w11, w26, #8, #10
  42405c:	orr	w19, w11, w19
  424060:	add	x8, x8, x9
  424064:	ldr	w10, [x8, #8]
  424068:	mov	x24, x0
  42406c:	mov	x1, x24
  424070:	bfi	w10, w19, #8, #10
  424074:	str	w10, [x8, #8]
  424078:	ldr	x8, [x21]
  42407c:	add	x10, x8, x23, lsl #4
  424080:	ldr	w10, [x10, #8]
  424084:	add	x8, x8, x9
  424088:	ldr	w11, [x8, #8]
  42408c:	and	w10, w10, #0x3ff00
  424090:	orr	w10, w10, w11
  424094:	str	w10, [x8, #8]
  424098:	ldr	x8, [x21]
  42409c:	add	x8, x8, x9
  4240a0:	ldr	w9, [x8, #8]
  4240a4:	orr	w9, w9, #0x40000
  4240a8:	str	w9, [x8, #8]
  4240ac:	ldr	x8, [x21, #32]
  4240b0:	str	x23, [x8, x0, lsl #3]
  4240b4:	ldr	x8, [x21, #40]
  4240b8:	madd	x0, x22, x25, x8
  4240bc:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  4240c0:	mov	x22, x24
  4240c4:	tbnz	w0, #0, 423d7c <_obstack_memory_used@@Base+0x9be8>
  4240c8:	b	424114 <_obstack_memory_used@@Base+0x9f80>
  4240cc:	ldr	x8, [x21, #24]
  4240d0:	mov	w0, wzr
  4240d4:	ldr	x9, [x8, x27, lsl #3]
  4240d8:	str	x9, [x8, x22, lsl #3]
  4240dc:	ldp	x20, x19, [sp, #80]
  4240e0:	ldp	x22, x21, [sp, #64]
  4240e4:	ldp	x24, x23, [sp, #48]
  4240e8:	ldp	x26, x25, [sp, #32]
  4240ec:	ldr	x27, [sp, #16]
  4240f0:	ldp	x29, x30, [sp], #96
  4240f4:	ret
  4240f8:	mov	w8, #0x18                  	// #24
  4240fc:	madd	x0, x22, x8, x9
  424100:	mov	x1, x23
  424104:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  424108:	tbz	w0, #0, 424114 <_obstack_memory_used@@Base+0x9f80>
  42410c:	mov	w0, wzr
  424110:	b	4240dc <_obstack_memory_used@@Base+0x9f48>
  424114:	mov	w0, #0xc                   	// #12
  424118:	b	4240dc <_obstack_memory_used@@Base+0x9f48>
  42411c:	stp	x29, x30, [sp, #-48]!
  424120:	str	x21, [sp, #16]
  424124:	stp	x20, x19, [sp, #32]
  424128:	mov	x29, sp
  42412c:	cbz	x1, 424214 <_obstack_memory_used@@Base+0xa080>
  424130:	ldr	x10, [x1, #8]
  424134:	mov	x20, x1
  424138:	cbz	x10, 424214 <_obstack_memory_used@@Base+0xa080>
  42413c:	ldp	x8, x11, [x0]
  424140:	mov	x19, x0
  424144:	add	x9, x11, x10, lsl #1
  424148:	cmp	x8, x9
  42414c:	b.ge	424178 <_obstack_memory_used@@Base+0x9fe4>  // b.tcont
  424150:	ldr	x0, [x19, #16]
  424154:	add	x21, x8, x10
  424158:	lsl	x1, x21, #4
  42415c:	bl	4024c0 <realloc@plt>
  424160:	cbz	x0, 4242a0 <_obstack_memory_used@@Base+0xa10c>
  424164:	lsl	x8, x21, #1
  424168:	str	x0, [x19, #16]
  42416c:	str	x8, [x19]
  424170:	ldr	x11, [x19, #8]
  424174:	ldr	x10, [x20, #8]
  424178:	cbz	x11, 42428c <_obstack_memory_used@@Base+0xa0f8>
  42417c:	sub	x8, x10, #0x1
  424180:	sub	x9, x11, #0x1
  424184:	orr	x12, x8, x9
  424188:	add	x21, x11, x10, lsl #1
  42418c:	tbnz	x12, #63, 4241d8 <_obstack_memory_used@@Base+0xa044>
  424190:	ldr	x10, [x19, #16]
  424194:	ldr	x11, [x20, #16]
  424198:	b	4241b0 <_obstack_memory_used@@Base+0xa01c>
  42419c:	sub	x8, x8, #0x1
  4241a0:	sub	x21, x21, #0x1
  4241a4:	str	x12, [x10, x21, lsl #3]
  4241a8:	orr	x12, x8, x9
  4241ac:	tbnz	x12, #63, 4241d8 <_obstack_memory_used@@Base+0xa044>
  4241b0:	ldr	x13, [x10, x9, lsl #3]
  4241b4:	ldr	x12, [x11, x8, lsl #3]
  4241b8:	cmp	x13, x12
  4241bc:	b.ne	4241c8 <_obstack_memory_used@@Base+0xa034>  // b.any
  4241c0:	sub	x8, x8, #0x1
  4241c4:	b	4241cc <_obstack_memory_used@@Base+0xa038>
  4241c8:	b.lt	42419c <_obstack_memory_used@@Base+0xa008>  // b.tstop
  4241cc:	sub	x9, x9, #0x1
  4241d0:	orr	x12, x8, x9
  4241d4:	tbz	x12, #63, 4241b0 <_obstack_memory_used@@Base+0xa01c>
  4241d8:	tbnz	x8, #63, 4241f8 <_obstack_memory_used@@Base+0xa064>
  4241dc:	ldr	x9, [x19, #16]
  4241e0:	ldr	x1, [x20, #16]
  4241e4:	add	x8, x8, #0x1
  4241e8:	sub	x21, x21, x8
  4241ec:	add	x0, x9, x21, lsl #3
  4241f0:	lsl	x2, x8, #3
  4241f4:	bl	402210 <memcpy@plt>
  4241f8:	ldr	x10, [x19, #8]
  4241fc:	ldr	x8, [x20, #8]
  424200:	sub	x9, x10, #0x1
  424204:	add	x8, x9, x8, lsl #1
  424208:	sub	x11, x8, x21
  42420c:	adds	x11, x11, #0x1
  424210:	b.cc	424228 <_obstack_memory_used@@Base+0xa094>  // b.lo, b.ul, b.last
  424214:	mov	w0, wzr
  424218:	ldp	x20, x19, [sp, #32]
  42421c:	ldr	x21, [sp, #16]
  424220:	ldp	x29, x30, [sp], #48
  424224:	ret
  424228:	ldr	x0, [x19, #16]
  42422c:	add	x10, x11, x10
  424230:	str	x10, [x19, #8]
  424234:	add	x10, x0, x9, lsl #3
  424238:	lsl	x2, x11, #3
  42423c:	neg	x11, x11
  424240:	ldr	x12, [x0, x8, lsl #3]
  424244:	ldr	x13, [x0, x9, lsl #3]
  424248:	cmp	x12, x13
  42424c:	b.le	424268 <_obstack_memory_used@@Base+0xa0d4>
  424250:	sub	x8, x8, #0x1
  424254:	str	x12, [x10, x2]
  424258:	adds	x11, x11, #0x1
  42425c:	sub	x2, x2, #0x8
  424260:	b.cc	424240 <_obstack_memory_used@@Base+0xa0ac>  // b.lo, b.ul, b.last
  424264:	b	424214 <_obstack_memory_used@@Base+0xa080>
  424268:	str	x13, [x10, x2]
  42426c:	cmp	x9, #0x0
  424270:	sub	x9, x9, #0x1
  424274:	neg	x11, x11
  424278:	sub	x10, x10, #0x8
  42427c:	b.gt	424238 <_obstack_memory_used@@Base+0xa0a4>
  424280:	add	x1, x0, x21, lsl #3
  424284:	bl	402210 <memcpy@plt>
  424288:	b	424214 <_obstack_memory_used@@Base+0xa080>
  42428c:	str	x10, [x19, #8]
  424290:	ldp	x8, x1, [x20, #8]
  424294:	ldr	x0, [x19, #16]
  424298:	lsl	x2, x8, #3
  42429c:	b	424284 <_obstack_memory_used@@Base+0xa0f0>
  4242a0:	mov	w0, #0xc                   	// #12
  4242a4:	ldp	x20, x19, [sp, #32]
  4242a8:	ldr	x21, [sp, #16]
  4242ac:	ldp	x29, x30, [sp], #48
  4242b0:	ret
  4242b4:	stp	x29, x30, [sp, #-32]!
  4242b8:	stp	x20, x19, [sp, #16]
  4242bc:	ldr	x9, [x0]
  4242c0:	mov	x19, x0
  4242c4:	mov	x20, x1
  4242c8:	mov	x29, sp
  4242cc:	cbz	x9, 4242f0 <_obstack_memory_used@@Base+0xa15c>
  4242d0:	ldr	x8, [x19, #8]
  4242d4:	cbnz	x8, 424320 <_obstack_memory_used@@Base+0xa18c>
  4242d8:	ldr	x8, [x19, #16]
  4242dc:	str	x20, [x8]
  4242e0:	ldr	x8, [x19, #8]
  4242e4:	add	x8, x8, #0x1
  4242e8:	str	x8, [x19, #8]
  4242ec:	b	424310 <_obstack_memory_used@@Base+0xa17c>
  4242f0:	mov	w8, #0x1                   	// #1
  4242f4:	dup	v0.2d, x8
  4242f8:	mov	w0, #0x8                   	// #8
  4242fc:	str	q0, [x19]
  424300:	bl	4023a0 <malloc@plt>
  424304:	str	x0, [x19, #16]
  424308:	cbz	x0, 42434c <_obstack_memory_used@@Base+0xa1b8>
  42430c:	str	x20, [x0]
  424310:	mov	w0, #0x1                   	// #1
  424314:	ldp	x20, x19, [sp, #16]
  424318:	ldp	x29, x30, [sp], #32
  42431c:	ret
  424320:	cmp	x9, x8
  424324:	b.ne	42435c <_obstack_memory_used@@Base+0xa1c8>  // b.any
  424328:	ldr	x0, [x19, #16]
  42432c:	lsl	x8, x9, #1
  424330:	lsl	x1, x9, #4
  424334:	str	x8, [x19]
  424338:	bl	4024c0 <realloc@plt>
  42433c:	cbz	x0, 424314 <_obstack_memory_used@@Base+0xa180>
  424340:	ldr	x8, [x19, #8]
  424344:	str	x0, [x19, #16]
  424348:	b	424360 <_obstack_memory_used@@Base+0xa1cc>
  42434c:	stp	xzr, xzr, [x19]
  424350:	ldp	x20, x19, [sp, #16]
  424354:	ldp	x29, x30, [sp], #32
  424358:	ret
  42435c:	ldr	x0, [x19, #16]
  424360:	ldr	x9, [x0]
  424364:	cmp	x9, x20
  424368:	b.le	424394 <_obstack_memory_used@@Base+0xa200>
  42436c:	cmp	x8, #0x1
  424370:	b.lt	4243bc <_obstack_memory_used@@Base+0xa228>  // b.tstop
  424374:	mov	x9, x8
  424378:	add	x10, x0, x9, lsl #3
  42437c:	ldur	x11, [x10, #-8]
  424380:	subs	x8, x9, #0x1
  424384:	mov	x9, x8
  424388:	str	x11, [x10]
  42438c:	b.gt	424378 <_obstack_memory_used@@Base+0xa1e4>
  424390:	b	4243bc <_obstack_memory_used@@Base+0xa228>
  424394:	add	x9, x0, x8, lsl #3
  424398:	ldur	x9, [x9, #-8]
  42439c:	cmp	x9, x20
  4243a0:	b.le	4243bc <_obstack_memory_used@@Base+0xa228>
  4243a4:	add	x10, x0, x8, lsl #3
  4243a8:	str	x9, [x10]
  4243ac:	ldur	x9, [x10, #-16]
  4243b0:	sub	x8, x8, #0x1
  4243b4:	cmp	x9, x20
  4243b8:	b.gt	4243a4 <_obstack_memory_used@@Base+0xa210>
  4243bc:	str	x20, [x0, x8, lsl #3]
  4243c0:	b	4242e0 <_obstack_memory_used@@Base+0xa14c>
  4243c4:	sub	sp, sp, #0xb0
  4243c8:	stp	x29, x30, [sp, #80]
  4243cc:	stp	x28, x27, [sp, #96]
  4243d0:	stp	x26, x25, [sp, #112]
  4243d4:	stp	x24, x23, [sp, #128]
  4243d8:	stp	x22, x21, [sp, #144]
  4243dc:	stp	x20, x19, [sp, #160]
  4243e0:	ldr	x28, [x2, #8]
  4243e4:	mov	x19, x0
  4243e8:	add	x29, sp, #0x50
  4243ec:	cbz	x28, 42441c <_obstack_memory_used@@Base+0xa288>
  4243f0:	mov	w24, w3
  4243f4:	mov	x26, x2
  4243f8:	mov	x21, x1
  4243fc:	subs	x8, x28, #0x1
  424400:	add	x22, x28, w3, uxtw
  424404:	b.lt	424484 <_obstack_memory_used@@Base+0xa2f0>  // b.tstop
  424408:	ldr	x9, [x26, #16]
  42440c:	cmp	x28, #0x4
  424410:	b.cs	424428 <_obstack_memory_used@@Base+0xa294>  // b.hs, b.nlast
  424414:	mov	x10, xzr
  424418:	b	42446c <_obstack_memory_used@@Base+0xa2d8>
  42441c:	mov	x23, xzr
  424420:	str	wzr, [x19]
  424424:	b	424790 <_obstack_memory_used@@Base+0xa5fc>
  424428:	and	x10, x28, #0xfffffffffffffffc
  42442c:	movi	v1.2d, #0x0
  424430:	movi	v0.2d, #0x0
  424434:	mov	v1.d[0], x22
  424438:	add	x11, x9, #0x10
  42443c:	mov	x12, x10
  424440:	ldp	q2, q3, [x11, #-16]
  424444:	subs	x12, x12, #0x4
  424448:	add	x11, x11, #0x20
  42444c:	add	v1.2d, v2.2d, v1.2d
  424450:	add	v0.2d, v3.2d, v0.2d
  424454:	b.ne	424440 <_obstack_memory_used@@Base+0xa2ac>  // b.any
  424458:	add	v0.2d, v0.2d, v1.2d
  42445c:	addp	d0, v0.2d
  424460:	cmp	x28, x10
  424464:	fmov	x22, d0
  424468:	b.eq	424484 <_obstack_memory_used@@Base+0xa2f0>  // b.none
  42446c:	sub	x11, x28, x10
  424470:	add	x9, x9, x10, lsl #3
  424474:	ldr	x10, [x9], #8
  424478:	subs	x11, x11, #0x1
  42447c:	add	x22, x10, x22
  424480:	b.ne	424474 <_obstack_memory_used@@Base+0xa2e0>  // b.any
  424484:	ldr	x9, [x21, #136]
  424488:	ldr	x10, [x21, #64]
  42448c:	and	x11, x9, x22
  424490:	mov	w9, #0x18                  	// #24
  424494:	mul	x9, x11, x9
  424498:	ldr	x9, [x10, x9]
  42449c:	cmp	x9, #0x1
  4244a0:	b.lt	424530 <_obstack_memory_used@@Base+0xa39c>  // b.tstop
  4244a4:	cbz	x26, 424530 <_obstack_memory_used@@Base+0xa39c>
  4244a8:	mov	w12, #0x18                  	// #24
  4244ac:	madd	x10, x11, x12, x10
  4244b0:	ldr	x10, [x10, #16]
  4244b4:	mov	x11, xzr
  4244b8:	b	4244c8 <_obstack_memory_used@@Base+0xa334>
  4244bc:	add	x11, x11, #0x1
  4244c0:	cmp	x11, x9
  4244c4:	b.ge	424530 <_obstack_memory_used@@Base+0xa39c>  // b.tcont
  4244c8:	ldr	x23, [x10, x11, lsl #3]
  4244cc:	ldr	x12, [x23]
  4244d0:	cmp	x12, x22
  4244d4:	b.ne	4244bc <_obstack_memory_used@@Base+0xa328>  // b.any
  4244d8:	ldrb	w12, [x23, #104]
  4244dc:	and	w12, w12, #0xf
  4244e0:	cmp	w12, w24
  4244e4:	b.ne	4244bc <_obstack_memory_used@@Base+0xa328>  // b.any
  4244e8:	ldr	x12, [x23, #80]
  4244ec:	cbz	x12, 4244bc <_obstack_memory_used@@Base+0xa328>
  4244f0:	ldr	x13, [x12, #8]
  4244f4:	cmp	x13, x28
  4244f8:	b.ne	4244bc <_obstack_memory_used@@Base+0xa328>  // b.any
  4244fc:	mov	x13, x8
  424500:	add	x14, x13, #0x1
  424504:	cmp	x14, #0x1
  424508:	b.lt	424790 <_obstack_memory_used@@Base+0xa5fc>  // b.tstop
  42450c:	ldr	x14, [x12, #16]
  424510:	ldr	x15, [x26, #16]
  424514:	lsl	x16, x13, #3
  424518:	sub	x13, x13, #0x1
  42451c:	ldr	x14, [x14, x16]
  424520:	ldr	x15, [x15, x16]
  424524:	cmp	x14, x15
  424528:	b.eq	424500 <_obstack_memory_used@@Base+0xa36c>  // b.none
  42452c:	b	4244bc <_obstack_memory_used@@Base+0xa328>
  424530:	mov	w0, #0x70                  	// #112
  424534:	mov	w1, #0x1                   	// #1
  424538:	bl	402480 <calloc@plt>
  42453c:	cbz	x0, 424cb0 <_obstack_memory_used@@Base+0xab1c>
  424540:	mov	x23, x0
  424544:	add	x9, x0, #0x8
  424548:	cmp	x28, #0x1
  42454c:	str	x28, [x0, #16]
  424550:	str	x19, [sp, #8]
  424554:	str	x21, [sp, #24]
  424558:	b.lt	424768 <_obstack_memory_used@@Base+0xa5d4>  // b.tstop
  42455c:	lsl	x27, x28, #3
  424560:	mov	x0, x27
  424564:	stur	x9, [x29, #-8]
  424568:	str	x28, [x23, #8]
  42456c:	bl	4023a0 <malloc@plt>
  424570:	str	x0, [x23, #24]
  424574:	cbz	x0, 424ca8 <_obstack_memory_used@@Base+0xab14>
  424578:	ldr	x26, [x26, #16]
  42457c:	mov	x2, x27
  424580:	mov	x25, x0
  424584:	mov	x1, x26
  424588:	bl	402210 <memcpy@plt>
  42458c:	ldur	x15, [x29, #-8]
  424590:	and	w20, w24, #0xf
  424594:	strb	w20, [x23, #104]
  424598:	mov	x19, xzr
  42459c:	str	x15, [x23, #80]
  4245a0:	ldr	x16, [x21]
  4245a4:	mov	x8, xzr
  4245a8:	add	x9, x25, #0x8
  4245ac:	stur	x27, [x29, #-32]
  4245b0:	stp	x16, x26, [sp, #32]
  4245b4:	stur	x28, [x29, #-16]
  4245b8:	stur	w24, [x29, #-20]
  4245bc:	tbnz	w24, #0, 4247b4 <_obstack_memory_used@@Base+0xa620>
  4245c0:	tbnz	w24, #1, 42495c <_obstack_memory_used@@Base+0xa7c8>
  4245c4:	mov	x21, #0xffffffffffffffff    	// #-1
  4245c8:	mov	w17, #0x1100                	// #4352
  4245cc:	mov	x18, x28
  4245d0:	mov	x27, x15
  4245d4:	str	x9, [sp]
  4245d8:	b	4245f8 <_obstack_memory_used@@Base+0xa464>
  4245dc:	mov	x18, x9
  4245e0:	add	x8, x8, #0x1
  4245e4:	add	x19, x19, #0x1
  4245e8:	sub	x21, x21, #0x1
  4245ec:	cmp	x19, x28
  4245f0:	add	x25, x25, #0x8
  4245f4:	b.eq	42477c <_obstack_memory_used@@Base+0xa5e8>  // b.none
  4245f8:	ldr	x9, [x26, x19, lsl #3]
  4245fc:	add	x9, x16, x9, lsl #4
  424600:	ldr	w24, [x9, #8]
  424604:	and	w9, w24, #0x3ffff
  424608:	cmp	w9, #0x1
  42460c:	b.eq	4245e4 <_obstack_memory_used@@Base+0xa450>  // b.none
  424610:	lsr	w11, w24, #15
  424614:	and	w10, w24, #0xff
  424618:	and	w11, w11, #0x20
  42461c:	and	w9, w24, #0x3ff00
  424620:	orr	w20, w20, w11
  424624:	cmp	w10, #0x4
  424628:	strb	w20, [x23, #104]
  42462c:	b.eq	424640 <_obstack_memory_used@@Base+0xa4ac>  // b.none
  424630:	cmp	w10, #0x2
  424634:	b.ne	42464c <_obstack_memory_used@@Base+0xa4b8>  // b.any
  424638:	mov	w10, #0x10                  	// #16
  42463c:	b	424644 <_obstack_memory_used@@Base+0xa4b0>
  424640:	mov	w10, #0x40                  	// #64
  424644:	orr	w20, w20, w10
  424648:	strb	w20, [x23, #104]
  42464c:	cbz	w9, 4245e4 <_obstack_memory_used@@Base+0xa450>
  424650:	cmp	x27, x15
  424654:	b.eq	424664 <_obstack_memory_used@@Base+0xa4d0>  // b.none
  424658:	tst	w24, w17
  42465c:	b.ne	4246dc <_obstack_memory_used@@Base+0xa548>  // b.any
  424660:	b	4246d0 <_obstack_memory_used@@Base+0xa53c>
  424664:	mov	w0, #0x18                  	// #24
  424668:	str	x18, [sp, #16]
  42466c:	bl	4023a0 <malloc@plt>
  424670:	cbz	x0, 424c84 <_obstack_memory_used@@Base+0xaaf0>
  424674:	ldur	x8, [x29, #-16]
  424678:	ldur	x26, [x29, #-32]
  42467c:	mov	x27, x0
  424680:	str	x0, [x23, #80]
  424684:	stp	x8, x8, [x0]
  424688:	mov	x0, x26
  42468c:	mov	x28, x8
  424690:	bl	4023a0 <malloc@plt>
  424694:	str	x0, [x27, #16]
  424698:	cbz	x0, 424c94 <_obstack_memory_used@@Base+0xab00>
  42469c:	ldr	x1, [sp, #40]
  4246a0:	mov	x2, x26
  4246a4:	mov	x26, x1
  4246a8:	bl	402210 <memcpy@plt>
  4246ac:	ldur	x15, [x29, #-8]
  4246b0:	ldr	x16, [sp, #32]
  4246b4:	ldr	x18, [sp, #16]
  4246b8:	mov	x8, xzr
  4246bc:	orr	w20, w20, #0xffffff80
  4246c0:	mov	w17, #0x1100                	// #4352
  4246c4:	strb	w20, [x23, #104]
  4246c8:	tst	w24, w17
  4246cc:	b.ne	4246dc <_obstack_memory_used@@Base+0xa548>  // b.any
  4246d0:	ldur	w9, [x29, #-20]
  4246d4:	tbnz	w9, #2, 4245e4 <_obstack_memory_used@@Base+0xa450>
  4246d8:	tbz	w24, #14, 4245e4 <_obstack_memory_used@@Base+0xa450>
  4246dc:	subs	x10, x19, x8
  4246e0:	b.mi	4245e0 <_obstack_memory_used@@Base+0xa44c>  // b.first
  4246e4:	cmp	x18, x10
  4246e8:	b.le	4245e0 <_obstack_memory_used@@Base+0xa44c>
  4246ec:	sub	x9, x18, #0x1
  4246f0:	cmp	x9, x10
  4246f4:	str	x9, [x23, #16]
  4246f8:	b.le	4245dc <_obstack_memory_used@@Base+0xa448>
  4246fc:	mvn	x11, x19
  424700:	add	x13, x18, x8
  424704:	add	x11, x13, x11
  424708:	cmp	x11, #0x4
  42470c:	b.cc	424740 <_obstack_memory_used@@Base+0xa5ac>  // b.lo, b.ul, b.last
  424710:	and	x12, x11, #0xfffffffffffffffc
  424714:	add	x13, x13, x21
  424718:	add	x10, x10, x12
  42471c:	and	x13, x13, #0xfffffffffffffffc
  424720:	sub	x14, x25, x8, lsl #3
  424724:	ldur	q0, [x14, #8]
  424728:	ldur	q1, [x14, #24]
  42472c:	subs	x13, x13, #0x4
  424730:	stp	q0, q1, [x14], #32
  424734:	b.ne	424724 <_obstack_memory_used@@Base+0xa590>  // b.any
  424738:	cmp	x11, x12
  42473c:	b.eq	4245dc <_obstack_memory_used@@Base+0xa448>  // b.none
  424740:	ldr	x11, [sp]
  424744:	add	x11, x11, x10, lsl #3
  424748:	mvn	x10, x10
  42474c:	add	x10, x10, x18
  424750:	ldr	x12, [x11]
  424754:	subs	x10, x10, #0x1
  424758:	stur	x12, [x11, #-8]
  42475c:	add	x11, x11, #0x8
  424760:	b.ne	424750 <_obstack_memory_used@@Base+0xa5bc>  // b.any
  424764:	b	4245dc <_obstack_memory_used@@Base+0xa448>
  424768:	and	w8, w24, #0xf
  42476c:	stp	xzr, xzr, [x9]
  424770:	str	xzr, [x9, #16]
  424774:	strb	w8, [x23, #104]
  424778:	str	x9, [x23, #80]
  42477c:	ldr	x0, [sp, #24]
  424780:	mov	x1, x23
  424784:	mov	x2, x22
  424788:	bl	424cc0 <_obstack_memory_used@@Base+0xab2c>
  42478c:	cbnz	w0, 424c84 <_obstack_memory_used@@Base+0xaaf0>
  424790:	mov	x0, x23
  424794:	ldp	x20, x19, [sp, #160]
  424798:	ldp	x22, x21, [sp, #144]
  42479c:	ldp	x24, x23, [sp, #128]
  4247a0:	ldp	x26, x25, [sp, #112]
  4247a4:	ldp	x28, x27, [sp, #96]
  4247a8:	ldp	x29, x30, [sp, #80]
  4247ac:	add	sp, sp, #0xb0
  4247b0:	ret
  4247b4:	tbnz	w24, #1, 424af0 <_obstack_memory_used@@Base+0xa95c>
  4247b8:	mov	x21, #0xffffffffffffffff    	// #-1
  4247bc:	mov	w17, #0x1200                	// #4608
  4247c0:	mov	x18, x28
  4247c4:	mov	x27, x15
  4247c8:	str	x9, [sp]
  4247cc:	b	4247ec <_obstack_memory_used@@Base+0xa658>
  4247d0:	mov	x18, x9
  4247d4:	add	x8, x8, #0x1
  4247d8:	add	x19, x19, #0x1
  4247dc:	sub	x21, x21, #0x1
  4247e0:	cmp	x19, x28
  4247e4:	add	x25, x25, #0x8
  4247e8:	b.eq	42477c <_obstack_memory_used@@Base+0xa5e8>  // b.none
  4247ec:	ldr	x9, [x26, x19, lsl #3]
  4247f0:	add	x9, x16, x9, lsl #4
  4247f4:	ldr	w24, [x9, #8]
  4247f8:	and	w9, w24, #0x3ffff
  4247fc:	cmp	w9, #0x1
  424800:	b.eq	4247d8 <_obstack_memory_used@@Base+0xa644>  // b.none
  424804:	lsr	w11, w24, #15
  424808:	and	w10, w24, #0xff
  42480c:	and	w11, w11, #0x20
  424810:	and	w9, w24, #0x3ff00
  424814:	orr	w20, w20, w11
  424818:	cmp	w10, #0x4
  42481c:	strb	w20, [x23, #104]
  424820:	b.eq	424834 <_obstack_memory_used@@Base+0xa6a0>  // b.none
  424824:	cmp	w10, #0x2
  424828:	b.ne	424840 <_obstack_memory_used@@Base+0xa6ac>  // b.any
  42482c:	mov	w10, #0x10                  	// #16
  424830:	b	424838 <_obstack_memory_used@@Base+0xa6a4>
  424834:	mov	w10, #0x40                  	// #64
  424838:	orr	w20, w20, w10
  42483c:	strb	w20, [x23, #104]
  424840:	cbz	w9, 4247d8 <_obstack_memory_used@@Base+0xa644>
  424844:	cmp	x27, x15
  424848:	b.eq	424858 <_obstack_memory_used@@Base+0xa6c4>  // b.none
  42484c:	tst	w24, w17
  424850:	b.ne	4248d0 <_obstack_memory_used@@Base+0xa73c>  // b.any
  424854:	b	4248c4 <_obstack_memory_used@@Base+0xa730>
  424858:	mov	w0, #0x18                  	// #24
  42485c:	str	x18, [sp, #16]
  424860:	bl	4023a0 <malloc@plt>
  424864:	cbz	x0, 424c84 <_obstack_memory_used@@Base+0xaaf0>
  424868:	ldur	x8, [x29, #-16]
  42486c:	ldur	x26, [x29, #-32]
  424870:	mov	x27, x0
  424874:	str	x0, [x23, #80]
  424878:	stp	x8, x8, [x0]
  42487c:	mov	x0, x26
  424880:	mov	x28, x8
  424884:	bl	4023a0 <malloc@plt>
  424888:	str	x0, [x27, #16]
  42488c:	cbz	x0, 424c94 <_obstack_memory_used@@Base+0xab00>
  424890:	ldr	x1, [sp, #40]
  424894:	mov	x2, x26
  424898:	mov	x26, x1
  42489c:	bl	402210 <memcpy@plt>
  4248a0:	ldur	x15, [x29, #-8]
  4248a4:	ldr	x16, [sp, #32]
  4248a8:	ldr	x18, [sp, #16]
  4248ac:	mov	x8, xzr
  4248b0:	orr	w20, w20, #0xffffff80
  4248b4:	mov	w17, #0x1200                	// #4608
  4248b8:	strb	w20, [x23, #104]
  4248bc:	tst	w24, w17
  4248c0:	b.ne	4248d0 <_obstack_memory_used@@Base+0xa73c>  // b.any
  4248c4:	ldur	w9, [x29, #-20]
  4248c8:	tbnz	w9, #2, 4247d8 <_obstack_memory_used@@Base+0xa644>
  4248cc:	tbz	w24, #14, 4247d8 <_obstack_memory_used@@Base+0xa644>
  4248d0:	subs	x10, x19, x8
  4248d4:	b.mi	4247d4 <_obstack_memory_used@@Base+0xa640>  // b.first
  4248d8:	cmp	x18, x10
  4248dc:	b.le	4247d4 <_obstack_memory_used@@Base+0xa640>
  4248e0:	sub	x9, x18, #0x1
  4248e4:	cmp	x9, x10
  4248e8:	str	x9, [x23, #16]
  4248ec:	b.le	4247d0 <_obstack_memory_used@@Base+0xa63c>
  4248f0:	mvn	x11, x19
  4248f4:	add	x13, x18, x8
  4248f8:	add	x11, x13, x11
  4248fc:	cmp	x11, #0x4
  424900:	b.cc	424934 <_obstack_memory_used@@Base+0xa7a0>  // b.lo, b.ul, b.last
  424904:	and	x12, x11, #0xfffffffffffffffc
  424908:	add	x13, x13, x21
  42490c:	add	x10, x10, x12
  424910:	and	x13, x13, #0xfffffffffffffffc
  424914:	sub	x14, x25, x8, lsl #3
  424918:	ldur	q0, [x14, #8]
  42491c:	ldur	q1, [x14, #24]
  424920:	subs	x13, x13, #0x4
  424924:	stp	q0, q1, [x14], #32
  424928:	b.ne	424918 <_obstack_memory_used@@Base+0xa784>  // b.any
  42492c:	cmp	x11, x12
  424930:	b.eq	4247d0 <_obstack_memory_used@@Base+0xa63c>  // b.none
  424934:	ldr	x11, [sp]
  424938:	add	x11, x11, x10, lsl #3
  42493c:	mvn	x10, x10
  424940:	add	x10, x10, x18
  424944:	ldr	x12, [x11]
  424948:	subs	x10, x10, #0x1
  42494c:	stur	x12, [x11, #-8]
  424950:	add	x11, x11, #0x8
  424954:	b.ne	424944 <_obstack_memory_used@@Base+0xa7b0>  // b.any
  424958:	b	4247d0 <_obstack_memory_used@@Base+0xa63c>
  42495c:	mov	x21, #0xffffffffffffffff    	// #-1
  424960:	mov	x17, x28
  424964:	mov	x27, x15
  424968:	str	x9, [sp]
  42496c:	b	42498c <_obstack_memory_used@@Base+0xa7f8>
  424970:	mov	x17, x9
  424974:	add	x8, x8, #0x1
  424978:	add	x19, x19, #0x1
  42497c:	sub	x21, x21, #0x1
  424980:	cmp	x19, x28
  424984:	add	x25, x25, #0x8
  424988:	b.eq	42477c <_obstack_memory_used@@Base+0xa5e8>  // b.none
  42498c:	ldr	x9, [x26, x19, lsl #3]
  424990:	add	x9, x16, x9, lsl #4
  424994:	ldr	w24, [x9, #8]
  424998:	and	w9, w24, #0x3ffff
  42499c:	cmp	w9, #0x1
  4249a0:	b.eq	424978 <_obstack_memory_used@@Base+0xa7e4>  // b.none
  4249a4:	lsr	w11, w24, #15
  4249a8:	and	w10, w24, #0xff
  4249ac:	and	w11, w11, #0x20
  4249b0:	and	w9, w24, #0x3ff00
  4249b4:	orr	w20, w20, w11
  4249b8:	cmp	w10, #0x4
  4249bc:	strb	w20, [x23, #104]
  4249c0:	b.eq	4249d4 <_obstack_memory_used@@Base+0xa840>  // b.none
  4249c4:	cmp	w10, #0x2
  4249c8:	b.ne	4249e0 <_obstack_memory_used@@Base+0xa84c>  // b.any
  4249cc:	mov	w10, #0x10                  	// #16
  4249d0:	b	4249d8 <_obstack_memory_used@@Base+0xa844>
  4249d4:	mov	w10, #0x40                  	// #64
  4249d8:	orr	w20, w20, w10
  4249dc:	strb	w20, [x23, #104]
  4249e0:	cbz	w9, 424978 <_obstack_memory_used@@Base+0xa7e4>
  4249e4:	cmp	x27, x15
  4249e8:	b.eq	4249f4 <_obstack_memory_used@@Base+0xa860>  // b.none
  4249ec:	tbz	w24, #8, 424a58 <_obstack_memory_used@@Base+0xa8c4>
  4249f0:	b	424a64 <_obstack_memory_used@@Base+0xa8d0>
  4249f4:	mov	w0, #0x18                  	// #24
  4249f8:	str	x17, [sp, #16]
  4249fc:	bl	4023a0 <malloc@plt>
  424a00:	cbz	x0, 424c84 <_obstack_memory_used@@Base+0xaaf0>
  424a04:	ldur	x8, [x29, #-16]
  424a08:	ldur	x26, [x29, #-32]
  424a0c:	mov	x28, x0
  424a10:	str	x0, [x23, #80]
  424a14:	stp	x8, x8, [x0]
  424a18:	mov	x0, x26
  424a1c:	bl	4023a0 <malloc@plt>
  424a20:	mov	x27, x28
  424a24:	str	x0, [x28, #16]
  424a28:	cbz	x0, 424c94 <_obstack_memory_used@@Base+0xab00>
  424a2c:	ldr	x1, [sp, #40]
  424a30:	mov	x2, x26
  424a34:	mov	x26, x1
  424a38:	bl	402210 <memcpy@plt>
  424a3c:	ldp	x28, x15, [x29, #-16]
  424a40:	ldr	x16, [sp, #32]
  424a44:	ldr	x17, [sp, #16]
  424a48:	mov	x8, xzr
  424a4c:	orr	w20, w20, #0xffffff80
  424a50:	strb	w20, [x23, #104]
  424a54:	tbnz	w24, #8, 424a64 <_obstack_memory_used@@Base+0xa8d0>
  424a58:	ldur	w9, [x29, #-20]
  424a5c:	tbnz	w9, #2, 424978 <_obstack_memory_used@@Base+0xa7e4>
  424a60:	tbz	w24, #14, 424978 <_obstack_memory_used@@Base+0xa7e4>
  424a64:	subs	x10, x19, x8
  424a68:	b.mi	424974 <_obstack_memory_used@@Base+0xa7e0>  // b.first
  424a6c:	cmp	x17, x10
  424a70:	b.le	424974 <_obstack_memory_used@@Base+0xa7e0>
  424a74:	sub	x9, x17, #0x1
  424a78:	cmp	x9, x10
  424a7c:	str	x9, [x23, #16]
  424a80:	b.le	424970 <_obstack_memory_used@@Base+0xa7dc>
  424a84:	mvn	x11, x19
  424a88:	add	x13, x17, x8
  424a8c:	add	x11, x13, x11
  424a90:	cmp	x11, #0x4
  424a94:	b.cc	424ac8 <_obstack_memory_used@@Base+0xa934>  // b.lo, b.ul, b.last
  424a98:	and	x12, x11, #0xfffffffffffffffc
  424a9c:	add	x13, x13, x21
  424aa0:	add	x10, x10, x12
  424aa4:	and	x13, x13, #0xfffffffffffffffc
  424aa8:	sub	x14, x25, x8, lsl #3
  424aac:	ldur	q0, [x14, #8]
  424ab0:	ldur	q1, [x14, #24]
  424ab4:	subs	x13, x13, #0x4
  424ab8:	stp	q0, q1, [x14], #32
  424abc:	b.ne	424aac <_obstack_memory_used@@Base+0xa918>  // b.any
  424ac0:	cmp	x11, x12
  424ac4:	b.eq	424970 <_obstack_memory_used@@Base+0xa7dc>  // b.none
  424ac8:	ldr	x11, [sp]
  424acc:	add	x11, x11, x10, lsl #3
  424ad0:	mvn	x10, x10
  424ad4:	add	x10, x10, x17
  424ad8:	ldr	x12, [x11]
  424adc:	subs	x10, x10, #0x1
  424ae0:	stur	x12, [x11, #-8]
  424ae4:	add	x11, x11, #0x8
  424ae8:	b.ne	424ad8 <_obstack_memory_used@@Base+0xa944>  // b.any
  424aec:	b	424970 <_obstack_memory_used@@Base+0xa7dc>
  424af0:	mov	x21, #0xffffffffffffffff    	// #-1
  424af4:	mov	x17, x28
  424af8:	mov	x27, x15
  424afc:	str	x9, [sp]
  424b00:	b	424b20 <_obstack_memory_used@@Base+0xa98c>
  424b04:	mov	x17, x9
  424b08:	add	x8, x8, #0x1
  424b0c:	add	x19, x19, #0x1
  424b10:	sub	x21, x21, #0x1
  424b14:	cmp	x19, x28
  424b18:	add	x25, x25, #0x8
  424b1c:	b.eq	42477c <_obstack_memory_used@@Base+0xa5e8>  // b.none
  424b20:	ldr	x9, [x26, x19, lsl #3]
  424b24:	add	x9, x16, x9, lsl #4
  424b28:	ldr	w24, [x9, #8]
  424b2c:	and	w9, w24, #0x3ffff
  424b30:	cmp	w9, #0x1
  424b34:	b.eq	424b0c <_obstack_memory_used@@Base+0xa978>  // b.none
  424b38:	lsr	w11, w24, #15
  424b3c:	and	w10, w24, #0xff
  424b40:	and	w11, w11, #0x20
  424b44:	and	w9, w24, #0x3ff00
  424b48:	orr	w20, w20, w11
  424b4c:	cmp	w10, #0x2
  424b50:	strb	w20, [x23, #104]
  424b54:	b.eq	424b68 <_obstack_memory_used@@Base+0xa9d4>  // b.none
  424b58:	cmp	w10, #0x4
  424b5c:	b.ne	424b74 <_obstack_memory_used@@Base+0xa9e0>  // b.any
  424b60:	mov	w10, #0x40                  	// #64
  424b64:	b	424b6c <_obstack_memory_used@@Base+0xa9d8>
  424b68:	mov	w10, #0x10                  	// #16
  424b6c:	orr	w20, w20, w10
  424b70:	strb	w20, [x23, #104]
  424b74:	cbz	w9, 424b0c <_obstack_memory_used@@Base+0xa978>
  424b78:	cmp	x27, x15
  424b7c:	b.eq	424b88 <_obstack_memory_used@@Base+0xa9f4>  // b.none
  424b80:	tbz	w24, #9, 424bec <_obstack_memory_used@@Base+0xaa58>
  424b84:	b	424bf8 <_obstack_memory_used@@Base+0xaa64>
  424b88:	mov	w0, #0x18                  	// #24
  424b8c:	str	x17, [sp, #16]
  424b90:	bl	4023a0 <malloc@plt>
  424b94:	cbz	x0, 424c84 <_obstack_memory_used@@Base+0xaaf0>
  424b98:	ldur	x8, [x29, #-16]
  424b9c:	ldur	x26, [x29, #-32]
  424ba0:	mov	x27, x0
  424ba4:	str	x0, [x23, #80]
  424ba8:	stp	x8, x8, [x0]
  424bac:	mov	x0, x26
  424bb0:	mov	x28, x8
  424bb4:	bl	4023a0 <malloc@plt>
  424bb8:	str	x0, [x27, #16]
  424bbc:	cbz	x0, 424c94 <_obstack_memory_used@@Base+0xab00>
  424bc0:	ldr	x1, [sp, #40]
  424bc4:	mov	x2, x26
  424bc8:	mov	x26, x1
  424bcc:	bl	402210 <memcpy@plt>
  424bd0:	ldur	x15, [x29, #-8]
  424bd4:	ldr	x16, [sp, #32]
  424bd8:	ldr	x17, [sp, #16]
  424bdc:	mov	x8, xzr
  424be0:	orr	w20, w20, #0xffffff80
  424be4:	strb	w20, [x23, #104]
  424be8:	tbnz	w24, #9, 424bf8 <_obstack_memory_used@@Base+0xaa64>
  424bec:	ldur	w9, [x29, #-20]
  424bf0:	tbnz	w9, #2, 424b0c <_obstack_memory_used@@Base+0xa978>
  424bf4:	tbz	w24, #14, 424b0c <_obstack_memory_used@@Base+0xa978>
  424bf8:	subs	x10, x19, x8
  424bfc:	b.mi	424b08 <_obstack_memory_used@@Base+0xa974>  // b.first
  424c00:	cmp	x17, x10
  424c04:	b.le	424b08 <_obstack_memory_used@@Base+0xa974>
  424c08:	sub	x9, x17, #0x1
  424c0c:	cmp	x9, x10
  424c10:	str	x9, [x23, #16]
  424c14:	b.le	424b04 <_obstack_memory_used@@Base+0xa970>
  424c18:	mvn	x11, x19
  424c1c:	add	x13, x17, x8
  424c20:	add	x11, x13, x11
  424c24:	cmp	x11, #0x4
  424c28:	b.cc	424c5c <_obstack_memory_used@@Base+0xaac8>  // b.lo, b.ul, b.last
  424c2c:	and	x12, x11, #0xfffffffffffffffc
  424c30:	add	x13, x13, x21
  424c34:	add	x10, x10, x12
  424c38:	and	x13, x13, #0xfffffffffffffffc
  424c3c:	sub	x14, x25, x8, lsl #3
  424c40:	ldur	q0, [x14, #8]
  424c44:	ldur	q1, [x14, #24]
  424c48:	subs	x13, x13, #0x4
  424c4c:	stp	q0, q1, [x14], #32
  424c50:	b.ne	424c40 <_obstack_memory_used@@Base+0xaaac>  // b.any
  424c54:	cmp	x11, x12
  424c58:	b.eq	424b04 <_obstack_memory_used@@Base+0xa970>  // b.none
  424c5c:	ldr	x11, [sp]
  424c60:	add	x11, x11, x10, lsl #3
  424c64:	mvn	x10, x10
  424c68:	add	x10, x10, x17
  424c6c:	ldr	x12, [x11]
  424c70:	subs	x10, x10, #0x1
  424c74:	stur	x12, [x11, #-8]
  424c78:	add	x11, x11, #0x8
  424c7c:	b.ne	424c6c <_obstack_memory_used@@Base+0xaad8>  // b.any
  424c80:	b	424b04 <_obstack_memory_used@@Base+0xa970>
  424c84:	mov	x0, x23
  424c88:	bl	41ed90 <_obstack_memory_used@@Base+0x4bfc>
  424c8c:	ldr	x19, [sp, #8]
  424c90:	b	424cb0 <_obstack_memory_used@@Base+0xab1c>
  424c94:	ldr	x19, [sp, #8]
  424c98:	mov	x0, x23
  424c9c:	stp	xzr, xzr, [x27]
  424ca0:	bl	41ed90 <_obstack_memory_used@@Base+0x4bfc>
  424ca4:	b	424cb0 <_obstack_memory_used@@Base+0xab1c>
  424ca8:	mov	x0, x23
  424cac:	bl	402620 <free@plt>
  424cb0:	mov	x23, xzr
  424cb4:	mov	w8, #0xc                   	// #12
  424cb8:	str	w8, [x19]
  424cbc:	b	424790 <_obstack_memory_used@@Base+0xa5fc>
  424cc0:	stp	x29, x30, [sp, #-64]!
  424cc4:	stp	x24, x23, [sp, #16]
  424cc8:	stp	x22, x21, [sp, #32]
  424ccc:	stp	x20, x19, [sp, #48]
  424cd0:	ldr	x22, [x1, #16]
  424cd4:	mov	x21, x0
  424cd8:	mov	x29, sp
  424cdc:	mov	x20, x2
  424ce0:	lsl	x0, x22, #3
  424ce4:	mov	x19, x1
  424ce8:	str	x2, [x1]
  424cec:	stp	x22, xzr, [x1, #32]
  424cf0:	bl	4023a0 <malloc@plt>
  424cf4:	str	x0, [x19, #48]
  424cf8:	cbz	x0, 424dfc <_obstack_memory_used@@Base+0xac68>
  424cfc:	cmp	x22, #0x1
  424d00:	b.lt	424d70 <_obstack_memory_used@@Base+0xabdc>  // b.tstop
  424d04:	mov	x23, xzr
  424d08:	b	424d24 <_obstack_memory_used@@Base+0xab90>
  424d0c:	add	x9, x8, #0x1
  424d10:	str	x9, [x19, #40]
  424d14:	str	x24, [x0, x8, lsl #3]
  424d18:	add	x23, x23, #0x1
  424d1c:	cmp	x23, x22
  424d20:	b.ge	424d70 <_obstack_memory_used@@Base+0xabdc>  // b.tcont
  424d24:	ldr	x8, [x19, #24]
  424d28:	ldr	x24, [x8, x23, lsl #3]
  424d2c:	ldr	x8, [x21]
  424d30:	add	x8, x8, x24, lsl #4
  424d34:	ldrb	w8, [x8, #8]
  424d38:	tbnz	w8, #3, 424d18 <_obstack_memory_used@@Base+0xab84>
  424d3c:	ldp	x9, x8, [x19, #32]
  424d40:	cmp	x9, x8
  424d44:	b.ne	424d0c <_obstack_memory_used@@Base+0xab78>  // b.any
  424d48:	lsl	x8, x9, #1
  424d4c:	add	x8, x8, #0x2
  424d50:	lsl	x1, x8, #3
  424d54:	str	x8, [x19, #32]
  424d58:	bl	4024c0 <realloc@plt>
  424d5c:	cbz	x0, 424dfc <_obstack_memory_used@@Base+0xac68>
  424d60:	ldr	x8, [x19, #40]
  424d64:	ldr	x22, [x19, #16]
  424d68:	str	x0, [x19, #48]
  424d6c:	b	424d0c <_obstack_memory_used@@Base+0xab78>
  424d70:	ldr	x9, [x21, #136]
  424d74:	ldr	x8, [x21, #64]
  424d78:	mov	w11, #0x18                  	// #24
  424d7c:	and	x10, x9, x20
  424d80:	madd	x20, x10, x11, x8
  424d84:	mov	x21, x20
  424d88:	ldr	x11, [x21, #8]!
  424d8c:	ldr	x9, [x20]
  424d90:	cmp	x11, x9
  424d94:	b.le	424dc8 <_obstack_memory_used@@Base+0xac34>
  424d98:	mov	w11, #0x18                  	// #24
  424d9c:	madd	x8, x10, x11, x8
  424da0:	ldr	x8, [x8, #16]
  424da4:	mov	w0, wzr
  424da8:	add	x10, x9, #0x1
  424dac:	str	x10, [x20]
  424db0:	str	x19, [x8, x9, lsl #3]
  424db4:	ldp	x20, x19, [sp, #48]
  424db8:	ldp	x22, x21, [sp, #32]
  424dbc:	ldp	x24, x23, [sp, #16]
  424dc0:	ldp	x29, x30, [sp], #64
  424dc4:	ret
  424dc8:	mov	w11, #0x18                  	// #24
  424dcc:	madd	x22, x10, x11, x8
  424dd0:	ldr	x0, [x22, #16]!
  424dd4:	lsl	x8, x9, #1
  424dd8:	add	x23, x8, #0x2
  424ddc:	lsl	x1, x23, #3
  424de0:	bl	4024c0 <realloc@plt>
  424de4:	cbz	x0, 424dfc <_obstack_memory_used@@Base+0xac68>
  424de8:	str	x0, [x22]
  424dec:	str	x23, [x21]
  424df0:	ldr	x9, [x20]
  424df4:	mov	x8, x0
  424df8:	b	424da4 <_obstack_memory_used@@Base+0xac10>
  424dfc:	mov	w0, #0xc                   	// #12
  424e00:	b	424db4 <_obstack_memory_used@@Base+0xac20>
  424e04:	sub	sp, sp, #0x80
  424e08:	stp	x29, x30, [sp, #32]
  424e0c:	stp	x28, x27, [sp, #48]
  424e10:	stp	x26, x25, [sp, #64]
  424e14:	stp	x24, x23, [sp, #80]
  424e18:	stp	x22, x21, [sp, #96]
  424e1c:	stp	x20, x19, [sp, #112]
  424e20:	mov	x24, x0
  424e24:	ldr	x8, [x24, #40]!
  424e28:	mov	x19, x0
  424e2c:	mov	x20, x1
  424e30:	mov	w21, w2
  424e34:	cmp	x8, x1
  424e38:	add	x29, sp, #0x20
  424e3c:	b.le	42502c <_obstack_memory_used@@Base+0xae98>
  424e40:	ldr	w8, [x19, #144]
  424e44:	cmp	w8, #0x2
  424e48:	b.lt	424e50 <_obstack_memory_used@@Base+0xacbc>  // b.tstop
  424e4c:	str	xzr, [x19, #32]
  424e50:	ldr	x9, [x19, #80]
  424e54:	ldr	x10, [x19, #96]
  424e58:	strb	wzr, [x19, #140]
  424e5c:	tst	w21, #0x1
  424e60:	str	x9, [x19, #88]
  424e64:	str	x10, [x19, #104]
  424e68:	stp	xzr, xzr, [x24]
  424e6c:	str	xzr, [x24, #16]
  424e70:	ldrb	w9, [x19, #139]
  424e74:	mov	w10, #0x4                   	// #4
  424e78:	mov	w11, #0x6                   	// #6
  424e7c:	mov	x8, xzr
  424e80:	csel	w10, w11, w10, eq  // eq = none
  424e84:	mov	x25, x20
  424e88:	str	w10, [x19, #112]
  424e8c:	cbnz	w9, 424ea0 <_obstack_memory_used@@Base+0xad0c>
  424e90:	ldr	x9, [x19]
  424e94:	mov	x8, xzr
  424e98:	mov	x25, x20
  424e9c:	str	x9, [x19, #8]
  424ea0:	cbz	x25, 424fac <_obstack_memory_used@@Base+0xae18>
  424ea4:	ldr	x9, [x19, #56]
  424ea8:	cmp	x25, x9
  424eac:	b.ge	425038 <_obstack_memory_used@@Base+0xaea4>  // b.tcont
  424eb0:	ldrb	w8, [x19, #140]
  424eb4:	cbnz	w8, 4251ac <_obstack_memory_used@@Base+0xb018>
  424eb8:	cmp	x25, #0x0
  424ebc:	b.le	424ef8 <_obstack_memory_used@@Base+0xad64>
  424ec0:	ldr	x9, [x19, #88]
  424ec4:	sub	x8, x25, #0x1
  424ec8:	cmp	x9, x8
  424ecc:	b.eq	425260 <_obstack_memory_used@@Base+0xb0cc>  // b.none
  424ed0:	ldr	w9, [x19, #144]
  424ed4:	cmp	w9, #0x2
  424ed8:	b.lt	424f00 <_obstack_memory_used@@Base+0xad6c>  // b.tstop
  424edc:	ldr	x9, [x19, #16]
  424ee0:	ldr	w21, [x9, x8, lsl #2]
  424ee4:	cmn	w21, #0x1
  424ee8:	b.ne	424f28 <_obstack_memory_used@@Base+0xad94>  // b.any
  424eec:	sub	x8, x8, #0x1
  424ef0:	cmn	x8, #0x1
  424ef4:	b.ne	424ee0 <_obstack_memory_used@@Base+0xad4c>  // b.any
  424ef8:	ldr	w8, [x19, #112]
  424efc:	b	424f58 <_obstack_memory_used@@Base+0xadc4>
  424f00:	ldr	x9, [x19, #8]
  424f04:	ldrb	w8, [x9, x8]
  424f08:	ldr	x9, [x19, #128]
  424f0c:	lsr	x10, x8, #3
  424f10:	and	x10, x10, #0x18
  424f14:	ldr	x9, [x9, x10]
  424f18:	lsr	x9, x9, x8
  424f1c:	tbz	w9, #0, 424f4c <_obstack_memory_used@@Base+0xadb8>
  424f20:	mov	w8, #0x1                   	// #1
  424f24:	b	424f58 <_obstack_memory_used@@Base+0xadc4>
  424f28:	ldrb	w8, [x19, #142]
  424f2c:	cbnz	w8, 425328 <_obstack_memory_used@@Base+0xb194>
  424f30:	cmp	w21, #0xa
  424f34:	b.ne	424f54 <_obstack_memory_used@@Base+0xadc0>  // b.any
  424f38:	ldrb	w8, [x19, #141]
  424f3c:	cmp	w8, #0x0
  424f40:	cset	w8, ne  // ne = any
  424f44:	lsl	w8, w8, #1
  424f48:	b	424f58 <_obstack_memory_used@@Base+0xadc4>
  424f4c:	cmp	w8, #0xa
  424f50:	b.eq	424f38 <_obstack_memory_used@@Base+0xada4>  // b.none
  424f54:	mov	w8, wzr
  424f58:	ldr	w9, [x19, #144]
  424f5c:	str	w8, [x19, #112]
  424f60:	cmp	w9, #0x2
  424f64:	b.lt	424f80 <_obstack_memory_used@@Base+0xadec>  // b.tstop
  424f68:	ldr	x8, [x19, #48]
  424f6c:	ldr	x0, [x19, #16]
  424f70:	sub	x8, x8, x25
  424f74:	add	x1, x0, x25, lsl #2
  424f78:	lsl	x2, x8, #2
  424f7c:	bl	402230 <memmove@plt>
  424f80:	ldrb	w8, [x19, #139]
  424f84:	cbnz	w8, 425248 <_obstack_memory_used@@Base+0xb0b4>
  424f88:	ldr	q0, [x19, #48]
  424f8c:	dup	v1.2d, x25
  424f90:	sub	v0.2d, v0.2d, v1.2d
  424f94:	str	q0, [x19, #48]
  424f98:	ldrb	w8, [x19, #139]
  424f9c:	cbnz	w8, 424fac <_obstack_memory_used@@Base+0xae18>
  424fa0:	ldr	x8, [x19, #8]
  424fa4:	add	x8, x8, x25
  424fa8:	str	x8, [x19, #8]
  424fac:	ldr	x8, [x19, #88]
  424fb0:	ldr	x10, [x19, #104]
  424fb4:	ldr	w11, [x19, #144]
  424fb8:	str	x20, [x19, #40]
  424fbc:	sub	x9, x8, x25
  424fc0:	sub	x8, x10, x25
  424fc4:	cmp	w11, #0x2
  424fc8:	str	x9, [x19, #88]
  424fcc:	str	x8, [x19, #104]
  424fd0:	b.lt	424fec <_obstack_memory_used@@Base+0xae58>  // b.tstop
  424fd4:	ldrb	w8, [x19, #136]
  424fd8:	cbz	w8, 424ffc <_obstack_memory_used@@Base+0xae68>
  424fdc:	mov	x0, x19
  424fe0:	bl	41edf8 <_obstack_memory_used@@Base+0x4c64>
  424fe4:	cbnz	w0, 42500c <_obstack_memory_used@@Base+0xae78>
  424fe8:	b	425004 <_obstack_memory_used@@Base+0xae70>
  424fec:	ldrb	w8, [x19, #139]
  424ff0:	cbnz	w8, 425270 <_obstack_memory_used@@Base+0xb0dc>
  424ff4:	str	x9, [x19, #48]
  424ff8:	b	425004 <_obstack_memory_used@@Base+0xae70>
  424ffc:	mov	x0, x19
  425000:	bl	41f4a8 <_obstack_memory_used@@Base+0x5314>
  425004:	mov	w0, wzr
  425008:	str	xzr, [x19, #72]
  42500c:	ldp	x20, x19, [sp, #112]
  425010:	ldp	x22, x21, [sp, #96]
  425014:	ldp	x24, x23, [sp, #80]
  425018:	ldp	x26, x25, [sp, #64]
  42501c:	ldp	x28, x27, [sp, #48]
  425020:	ldp	x29, x30, [sp, #32]
  425024:	add	sp, sp, #0x80
  425028:	ret
  42502c:	sub	x25, x20, x8
  425030:	cbnz	x25, 424ea4 <_obstack_memory_used@@Base+0xad10>
  425034:	b	424fac <_obstack_memory_used@@Base+0xae18>
  425038:	ldrb	w10, [x19, #140]
  42503c:	ldr	x26, [x19, #48]
  425040:	cbnz	w10, 4255d4 <_obstack_memory_used@@Base+0xb440>
  425044:	ldr	w10, [x19, #144]
  425048:	str	xzr, [x19, #48]
  42504c:	cmp	w10, #0x2
  425050:	b.lt	425604 <_obstack_memory_used@@Base+0xb470>  // b.tstop
  425054:	ldrb	w11, [x19, #137]
  425058:	cbz	w11, 425100 <_obstack_memory_used@@Base+0xaf6c>
  42505c:	ldr	x13, [x19]
  425060:	sub	x10, x25, x10
  425064:	add	x11, x13, x8
  425068:	add	x10, x11, x10
  42506c:	cmp	x10, x13
  425070:	add	x22, x11, x25
  425074:	csel	x12, x13, x10, cc  // cc = lo, ul, last
  425078:	add	x10, x13, x25
  42507c:	add	x13, x10, x8
  425080:	sub	x13, x13, #0x1
  425084:	cmp	x13, x12
  425088:	b.cc	425100 <_obstack_memory_used@@Base+0xaf6c>  // b.lo, b.ul, b.last
  42508c:	ldrb	w13, [x13]
  425090:	sub	x10, x10, #0x1
  425094:	and	w13, w13, #0xc0
  425098:	cmp	w13, #0x80
  42509c:	b.eq	42507c <_obstack_memory_used@@Base+0xaee8>  // b.none
  4250a0:	ldr	x12, [x19, #88]
  4250a4:	ldr	x9, [x19, #120]
  4250a8:	add	x23, x10, x8
  4250ac:	mov	x1, x23
  4250b0:	add	x11, x11, x12
  4250b4:	sub	x2, x11, x23
  4250b8:	cbnz	x9, 425700 <_obstack_memory_used@@Base+0xb56c>
  4250bc:	sub	x0, x29, #0xc
  4250c0:	sub	x3, x29, #0x8
  4250c4:	stur	xzr, [x29, #-8]
  4250c8:	bl	419da4 <wcrtomb@plt+0x17534>
  4250cc:	sub	x8, x22, x23
  4250d0:	subs	x8, x0, x8
  4250d4:	mov	w9, #0xffffffff            	// #-1
  4250d8:	b.cc	4250f0 <_obstack_memory_used@@Base+0xaf5c>  // b.lo, b.ul, b.last
  4250dc:	cmn	x0, #0x3
  4250e0:	b.hi	4250f0 <_obstack_memory_used@@Base+0xaf5c>  // b.pmore
  4250e4:	str	xzr, [x19, #32]
  4250e8:	str	x8, [x19, #48]
  4250ec:	ldur	w9, [x29, #-12]
  4250f0:	cmn	w9, #0x1
  4250f4:	b.ne	425188 <_obstack_memory_used@@Base+0xaff4>  // b.any
  4250f8:	ldr	x8, [x19, #40]
  4250fc:	ldr	x9, [x19, #56]
  425100:	add	x27, x9, x8
  425104:	subs	x8, x27, x20
  425108:	b.ge	425344 <_obstack_memory_used@@Base+0xb1b0>  // b.tcont
  42510c:	add	x22, x19, #0x20
  425110:	ldr	x8, [x19, #80]
  425114:	ldr	x9, [x19]
  425118:	ldr	x28, [x19, #32]
  42511c:	sub	x0, x29, #0x8
  425120:	sub	x23, x8, x27
  425124:	add	x1, x9, x27
  425128:	mov	x2, x23
  42512c:	mov	x3, x22
  425130:	bl	419da4 <wcrtomb@plt+0x17534>
  425134:	sub	x8, x0, #0x1
  425138:	cmn	x8, #0x3
  42513c:	b.cs	425154 <_obstack_memory_used@@Base+0xafc0>  // b.hs, b.nlast
  425140:	ldur	w9, [x29, #-8]
  425144:	add	x27, x0, x27
  425148:	subs	x8, x27, x20
  42514c:	b.lt	425110 <_obstack_memory_used@@Base+0xaf7c>  // b.tstop
  425150:	b	42517c <_obstack_memory_used@@Base+0xafe8>
  425154:	mov	w9, wzr
  425158:	cbz	x23, 425168 <_obstack_memory_used@@Base+0xafd4>
  42515c:	cbz	x0, 425168 <_obstack_memory_used@@Base+0xafd4>
  425160:	ldr	x8, [x19]
  425164:	ldrb	w9, [x8, x27]
  425168:	str	x28, [x22]
  42516c:	mov	w0, #0x1                   	// #1
  425170:	add	x27, x0, x27
  425174:	subs	x8, x27, x20
  425178:	b.lt	425110 <_obstack_memory_used@@Base+0xaf7c>  // b.tstop
  42517c:	cmn	w9, #0x1
  425180:	str	x8, [x19, #48]
  425184:	b.eq	425348 <_obstack_memory_used@@Base+0xb1b4>  // b.none
  425188:	ldrb	w8, [x19, #142]
  42518c:	cbnz	w8, 4256dc <_obstack_memory_used@@Base+0xb548>
  425190:	cmp	w9, #0xa
  425194:	b.ne	4255ac <_obstack_memory_used@@Base+0xb418>  // b.any
  425198:	ldrb	w8, [x19, #141]
  42519c:	cmp	w8, #0x0
  4251a0:	cset	w8, ne  // ne = any
  4251a4:	lsl	w8, w8, #1
  4251a8:	b	4255b0 <_obstack_memory_used@@Base+0xb41c>
  4251ac:	ldr	x9, [x19, #48]
  4251b0:	ldr	x8, [x19, #24]
  4251b4:	mov	x10, xzr
  4251b8:	b	4251c8 <_obstack_memory_used@@Base+0xb034>
  4251bc:	cmp	x10, x13
  4251c0:	mov	x9, x13
  4251c4:	b.ge	4251f8 <_obstack_memory_used@@Base+0xb064>  // b.tcont
  4251c8:	add	x11, x10, x9
  4251cc:	cmp	x11, #0x0
  4251d0:	cinc	x11, x11, lt  // lt = tstop
  4251d4:	asr	x11, x11, #1
  4251d8:	ldr	x12, [x8, x11, lsl #3]
  4251dc:	mov	x13, x11
  4251e0:	cmp	x12, x25
  4251e4:	b.gt	4251bc <_obstack_memory_used@@Base+0xb028>
  4251e8:	b.ge	4251f8 <_obstack_memory_used@@Base+0xb064>  // b.tcont
  4251ec:	add	x10, x11, #0x1
  4251f0:	mov	x13, x9
  4251f4:	b	4251bc <_obstack_memory_used@@Base+0xb028>
  4251f8:	cmp	x12, x25
  4251fc:	cinc	x22, x11, lt  // lt = tstop
  425200:	cmp	x22, #0x0
  425204:	b.le	425240 <_obstack_memory_used@@Base+0xb0ac>
  425208:	ldr	x9, [x19, #88]
  42520c:	sub	x8, x22, #0x1
  425210:	cmp	x9, x8
  425214:	b.eq	42566c <_obstack_memory_used@@Base+0xb4d8>  // b.none
  425218:	ldr	w9, [x19, #144]
  42521c:	cmp	w9, #0x2
  425220:	b.lt	4252d4 <_obstack_memory_used@@Base+0xb140>  // b.tstop
  425224:	ldr	x9, [x19, #16]
  425228:	ldr	w21, [x9, x8, lsl #2]
  42522c:	cmn	w21, #0x1
  425230:	b.ne	425304 <_obstack_memory_used@@Base+0xb170>  // b.any
  425234:	sub	x8, x8, #0x1
  425238:	cmn	x8, #0x1
  42523c:	b.ne	425228 <_obstack_memory_used@@Base+0xb094>  // b.any
  425240:	ldr	w9, [x19, #112]
  425244:	b	42540c <_obstack_memory_used@@Base+0xb278>
  425248:	ldr	x0, [x19, #8]
  42524c:	ldr	x8, [x19, #48]
  425250:	add	x1, x0, x25
  425254:	sub	x2, x8, x25
  425258:	bl	402230 <memmove@plt>
  42525c:	b	424f88 <_obstack_memory_used@@Base+0xadf4>
  425260:	and	w8, w21, #0x2
  425264:	mov	w9, #0xa                   	// #10
  425268:	eor	w8, w8, w9
  42526c:	b	424f58 <_obstack_memory_used@@Base+0xadc4>
  425270:	ldrb	w8, [x19, #136]
  425274:	cbz	w8, 425390 <_obstack_memory_used@@Base+0xb1fc>
  425278:	ldr	x8, [x19, #64]
  42527c:	ldr	x21, [x19, #48]
  425280:	cmp	x8, x9
  425284:	csel	x22, x9, x8, gt
  425288:	cmp	x21, x22
  42528c:	b.ge	4252fc <_obstack_memory_used@@Base+0xb168>  // b.tcont
  425290:	bl	4024d0 <__ctype_toupper_loc@plt>
  425294:	ldr	x8, [x19]
  425298:	ldr	x9, [x19, #120]
  42529c:	add	x8, x8, x20
  4252a0:	ldrb	w8, [x8, x21]
  4252a4:	cbnz	x9, 4252cc <_obstack_memory_used@@Base+0xb138>
  4252a8:	ldr	x9, [x0]
  4252ac:	ldr	x10, [x19, #8]
  4252b0:	ldr	w8, [x9, w8, uxtw #2]
  4252b4:	strb	w8, [x10, x21]
  4252b8:	add	x21, x21, #0x1
  4252bc:	cmp	x21, x22
  4252c0:	b.ge	4252fc <_obstack_memory_used@@Base+0xb168>  // b.tcont
  4252c4:	ldr	x20, [x24]
  4252c8:	b	425294 <_obstack_memory_used@@Base+0xb100>
  4252cc:	ldrb	w8, [x9, x8]
  4252d0:	b	4252a8 <_obstack_memory_used@@Base+0xb114>
  4252d4:	ldr	x9, [x19, #8]
  4252d8:	ldrb	w8, [x9, x8]
  4252dc:	ldr	x9, [x19, #128]
  4252e0:	lsr	x10, x8, #3
  4252e4:	and	x10, x10, #0x18
  4252e8:	ldr	x9, [x9, x10]
  4252ec:	lsr	x9, x9, x8
  4252f0:	tbz	w9, #0, 425400 <_obstack_memory_used@@Base+0xb26c>
  4252f4:	mov	w9, #0x1                   	// #1
  4252f8:	b	42540c <_obstack_memory_used@@Base+0xb278>
  4252fc:	stp	x21, x21, [x19, #48]
  425300:	b	425004 <_obstack_memory_used@@Base+0xae70>
  425304:	ldrb	w8, [x19, #142]
  425308:	cbnz	w8, 4256c0 <_obstack_memory_used@@Base+0xb52c>
  42530c:	cmp	w21, #0xa
  425310:	b.ne	425408 <_obstack_memory_used@@Base+0xb274>  // b.any
  425314:	ldrb	w8, [x19, #141]
  425318:	cmp	w8, #0x0
  42531c:	cset	w8, ne  // ne = any
  425320:	lsl	w9, w8, #1
  425324:	b	42540c <_obstack_memory_used@@Base+0xb278>
  425328:	mov	w0, w21
  42532c:	bl	402710 <iswalnum@plt>
  425330:	cmp	w21, #0x5f
  425334:	mov	w8, #0x1                   	// #1
  425338:	b.eq	424f58 <_obstack_memory_used@@Base+0xadc4>  // b.none
  42533c:	cbz	w0, 424f30 <_obstack_memory_used@@Base+0xad9c>
  425340:	b	424f58 <_obstack_memory_used@@Base+0xadc4>
  425344:	str	x8, [x19, #48]
  425348:	cmp	x26, #0x0
  42534c:	b.le	425388 <_obstack_memory_used@@Base+0xb1f4>
  425350:	ldr	x9, [x19, #88]
  425354:	sub	x8, x26, #0x1
  425358:	cmp	x9, x8
  42535c:	b.eq	4256b0 <_obstack_memory_used@@Base+0xb51c>  // b.none
  425360:	ldr	w9, [x19, #144]
  425364:	cmp	w9, #0x2
  425368:	b.lt	425568 <_obstack_memory_used@@Base+0xb3d4>  // b.tstop
  42536c:	ldr	x9, [x19, #16]
  425370:	ldr	w21, [x9, x8, lsl #2]
  425374:	cmn	w21, #0x1
  425378:	b.ne	42559c <_obstack_memory_used@@Base+0xb408>  // b.any
  42537c:	sub	x8, x8, #0x1
  425380:	cmn	x8, #0x1
  425384:	b.ne	425370 <_obstack_memory_used@@Base+0xb1dc>  // b.any
  425388:	ldr	w8, [x19, #112]
  42538c:	b	4255b0 <_obstack_memory_used@@Base+0xb41c>
  425390:	ldr	x10, [x19, #120]
  425394:	cbz	x10, 425004 <_obstack_memory_used@@Base+0xae70>
  425398:	ldr	x11, [x19, #64]
  42539c:	ldr	x8, [x19, #48]
  4253a0:	cmp	x11, x9
  4253a4:	csel	x9, x9, x11, gt
  4253a8:	cmp	x8, x9
  4253ac:	b.ge	4253f8 <_obstack_memory_used@@Base+0xb264>  // b.tcont
  4253b0:	ldp	x11, x13, [x19]
  4253b4:	add	x12, x8, x20
  4253b8:	ldrb	w11, [x11, x12]
  4253bc:	ldrb	w10, [x10, x11]
  4253c0:	strb	w10, [x13, x8]
  4253c4:	add	x8, x8, #0x1
  4253c8:	cmp	x8, x9
  4253cc:	b.ge	4253f8 <_obstack_memory_used@@Base+0xb264>  // b.tcont
  4253d0:	ldr	x10, [x19, #40]
  4253d4:	ldp	x11, x13, [x19]
  4253d8:	ldr	x12, [x19, #120]
  4253dc:	add	x10, x11, x10
  4253e0:	ldrb	w10, [x10, x8]
  4253e4:	ldrb	w10, [x12, x10]
  4253e8:	strb	w10, [x13, x8]
  4253ec:	add	x8, x8, #0x1
  4253f0:	cmp	x8, x9
  4253f4:	b.lt	4253d0 <_obstack_memory_used@@Base+0xb23c>  // b.tstop
  4253f8:	stp	x8, x8, [x19, #48]
  4253fc:	b	425004 <_obstack_memory_used@@Base+0xae70>
  425400:	cmp	w8, #0xa
  425404:	b.eq	425314 <_obstack_memory_used@@Base+0xb180>  // b.none
  425408:	mov	w9, wzr
  42540c:	ldr	x8, [x19, #48]
  425410:	cmp	x22, x25
  425414:	str	w9, [x19, #112]
  425418:	b.ne	4254a4 <_obstack_memory_used@@Base+0xb310>  // b.any
  42541c:	subs	x9, x8, x25
  425420:	b.le	4254a4 <_obstack_memory_used@@Base+0xb310>
  425424:	ldr	x10, [x19, #24]
  425428:	ldr	x10, [x10, x25, lsl #3]
  42542c:	cmp	x10, x25
  425430:	b.ne	4254a4 <_obstack_memory_used@@Base+0xb310>  // b.any
  425434:	ldr	x0, [x19, #16]
  425438:	lsl	x2, x9, #2
  42543c:	add	x1, x0, x25, lsl #2
  425440:	bl	402230 <memmove@plt>
  425444:	ldr	x0, [x19, #8]
  425448:	ldr	x8, [x19, #48]
  42544c:	add	x1, x0, x25
  425450:	sub	x2, x8, x25
  425454:	bl	402230 <memmove@plt>
  425458:	ldr	q0, [x19, #48]
  42545c:	dup	v1.2d, x25
  425460:	sub	v0.2d, v0.2d, v1.2d
  425464:	fmov	x8, d0
  425468:	cmp	x8, #0x1
  42546c:	str	q0, [x19, #48]
  425470:	b.lt	424f98 <_obstack_memory_used@@Base+0xae04>  // b.tstop
  425474:	ldr	x9, [x19, #24]
  425478:	mov	x8, xzr
  42547c:	add	x10, x9, x25, lsl #3
  425480:	lsl	x11, x8, #3
  425484:	ldr	x12, [x10, x11]
  425488:	add	x8, x8, #0x1
  42548c:	sub	x12, x12, x25
  425490:	str	x12, [x9, x11]
  425494:	ldr	x11, [x19, #48]
  425498:	cmp	x8, x11
  42549c:	b.lt	425480 <_obstack_memory_used@@Base+0xb2ec>  // b.tstop
  4254a0:	b	424f98 <_obstack_memory_used@@Base+0xae04>
  4254a4:	ldr	x9, [x19, #80]
  4254a8:	ldr	x10, [x19, #96]
  4254ac:	sub	x11, x25, x20
  4254b0:	strb	wzr, [x19, #140]
  4254b4:	add	x9, x11, x9
  4254b8:	add	x10, x11, x10
  4254bc:	str	x9, [x19, #88]
  4254c0:	str	x10, [x19, #104]
  4254c4:	mov	x9, x22
  4254c8:	subs	x22, x22, #0x1
  4254cc:	b.lt	4254e4 <_obstack_memory_used@@Base+0xb350>  // b.tstop
  4254d0:	ldr	x10, [x19, #24]
  4254d4:	add	x10, x10, x9, lsl #3
  4254d8:	ldur	x10, [x10, #-8]
  4254dc:	cmp	x10, x25
  4254e0:	b.eq	4254c4 <_obstack_memory_used@@Base+0xb330>  // b.none
  4254e4:	cmp	x9, x8
  4254e8:	b.ge	42550c <_obstack_memory_used@@Base+0xb378>  // b.tcont
  4254ec:	ldr	x10, [x19, #16]
  4254f0:	ldr	w11, [x10, x9, lsl #2]
  4254f4:	cmn	w11, #0x1
  4254f8:	b.ne	42550c <_obstack_memory_used@@Base+0xb378>  // b.any
  4254fc:	add	x9, x9, #0x1
  425500:	cmp	x8, x9
  425504:	b.ne	4254f0 <_obstack_memory_used@@Base+0xb35c>  // b.any
  425508:	b	425514 <_obstack_memory_used@@Base+0xb380>
  42550c:	cmp	x9, x8
  425510:	b.ne	425520 <_obstack_memory_used@@Base+0xb38c>  // b.any
  425514:	mov	x8, xzr
  425518:	stp	xzr, xzr, [x19, #48]
  42551c:	b	424f98 <_obstack_memory_used@@Base+0xae04>
  425520:	ldr	x8, [x19, #24]
  425524:	ldr	x8, [x8, x9, lsl #3]
  425528:	subs	x21, x8, x25
  42552c:	str	x21, [x19, #48]
  425530:	b.eq	425590 <_obstack_memory_used@@Base+0xb3fc>  // b.none
  425534:	cmp	x21, #0x1
  425538:	b.lt	42554c <_obstack_memory_used@@Base+0xb3b8>  // b.tstop
  42553c:	ldr	x0, [x19, #16]
  425540:	lsl	x2, x21, #2
  425544:	mov	w1, #0xff                  	// #255
  425548:	bl	402470 <memset@plt>
  42554c:	ldr	x0, [x19, #8]
  425550:	mov	w1, #0xff                  	// #255
  425554:	mov	x2, x21
  425558:	bl	402470 <memset@plt>
  42555c:	ldr	x8, [x19, #48]
  425560:	str	x8, [x19, #56]
  425564:	b	424f98 <_obstack_memory_used@@Base+0xae04>
  425568:	ldr	x9, [x19, #8]
  42556c:	ldrb	w8, [x9, x8]
  425570:	ldr	x9, [x19, #128]
  425574:	lsr	x10, x8, #3
  425578:	and	x10, x10, #0x18
  42557c:	ldr	x9, [x9, x10]
  425580:	lsr	x9, x9, x8
  425584:	tbz	w9, #0, 4255c8 <_obstack_memory_used@@Base+0xb434>
  425588:	mov	w8, #0x1                   	// #1
  42558c:	b	4255b0 <_obstack_memory_used@@Base+0xb41c>
  425590:	mov	x8, xzr
  425594:	str	xzr, [x19, #56]
  425598:	b	424f98 <_obstack_memory_used@@Base+0xae04>
  42559c:	ldrb	w8, [x19, #142]
  4255a0:	cbnz	w8, 425744 <_obstack_memory_used@@Base+0xb5b0>
  4255a4:	cmp	w21, #0xa
  4255a8:	b.eq	425198 <_obstack_memory_used@@Base+0xb004>  // b.none
  4255ac:	mov	w8, wzr
  4255b0:	ldr	x21, [x19, #48]
  4255b4:	str	w8, [x19, #112]
  4255b8:	cbnz	x21, 42567c <_obstack_memory_used@@Base+0xb4e8>
  4255bc:	ldr	x8, [x19, #48]
  4255c0:	str	x8, [x19, #56]
  4255c4:	b	424f98 <_obstack_memory_used@@Base+0xae04>
  4255c8:	cmp	w8, #0xa
  4255cc:	b.ne	4255ac <_obstack_memory_used@@Base+0xb418>  // b.any
  4255d0:	b	425198 <_obstack_memory_used@@Base+0xb004>
  4255d4:	ldr	x10, [x19, #80]
  4255d8:	ldr	x11, [x19, #96]
  4255dc:	sub	x12, x25, x20
  4255e0:	strb	wzr, [x19, #140]
  4255e4:	add	x10, x12, x10
  4255e8:	add	x11, x12, x11
  4255ec:	str	x10, [x19, #88]
  4255f0:	str	x11, [x19, #104]
  4255f4:	ldr	w10, [x19, #144]
  4255f8:	str	xzr, [x19, #48]
  4255fc:	cmp	w10, #0x2
  425600:	b.ge	425054 <_obstack_memory_used@@Base+0xaec0>  // b.tcont
  425604:	ldr	x9, [x19]
  425608:	add	x8, x25, x8
  42560c:	add	x8, x8, x9
  425610:	ldr	x9, [x19, #120]
  425614:	ldurb	w8, [x8, #-1]
  425618:	str	xzr, [x19, #56]
  42561c:	cbz	x9, 425624 <_obstack_memory_used@@Base+0xb490>
  425620:	ldrb	w8, [x9, x8]
  425624:	ldr	x9, [x19, #128]
  425628:	lsr	x10, x8, #3
  42562c:	and	x10, x10, #0x18
  425630:	ldr	x9, [x9, x10]
  425634:	lsr	x9, x9, x8
  425638:	tbz	w9, #0, 425644 <_obstack_memory_used@@Base+0xb4b0>
  42563c:	mov	w8, #0x1                   	// #1
  425640:	b	425664 <_obstack_memory_used@@Base+0xb4d0>
  425644:	cmp	w8, #0xa
  425648:	b.ne	425660 <_obstack_memory_used@@Base+0xb4cc>  // b.any
  42564c:	ldrb	w8, [x19, #141]
  425650:	cmp	w8, #0x0
  425654:	cset	w8, ne  // ne = any
  425658:	lsl	w8, w8, #1
  42565c:	b	425664 <_obstack_memory_used@@Base+0xb4d0>
  425660:	mov	w8, wzr
  425664:	str	w8, [x19, #112]
  425668:	b	424f98 <_obstack_memory_used@@Base+0xae04>
  42566c:	and	w8, w21, #0x2
  425670:	mov	w9, #0xa                   	// #10
  425674:	eor	w9, w8, w9
  425678:	b	42540c <_obstack_memory_used@@Base+0xb278>
  42567c:	cmp	x21, #0x1
  425680:	b.lt	425694 <_obstack_memory_used@@Base+0xb500>  // b.tstop
  425684:	ldr	x0, [x19, #16]
  425688:	lsl	x2, x21, #2
  42568c:	mov	w1, #0xff                  	// #255
  425690:	bl	402470 <memset@plt>
  425694:	ldrb	w8, [x19, #139]
  425698:	cbz	w8, 4255bc <_obstack_memory_used@@Base+0xb428>
  42569c:	ldr	x0, [x19, #8]
  4256a0:	mov	w1, #0xff                  	// #255
  4256a4:	mov	x2, x21
  4256a8:	bl	402470 <memset@plt>
  4256ac:	b	4255bc <_obstack_memory_used@@Base+0xb428>
  4256b0:	and	w8, w21, #0x2
  4256b4:	mov	w9, #0xa                   	// #10
  4256b8:	eor	w8, w8, w9
  4256bc:	b	4255b0 <_obstack_memory_used@@Base+0xb41c>
  4256c0:	mov	w0, w21
  4256c4:	bl	402710 <iswalnum@plt>
  4256c8:	cmp	w21, #0x5f
  4256cc:	mov	w9, #0x1                   	// #1
  4256d0:	b.eq	42540c <_obstack_memory_used@@Base+0xb278>  // b.none
  4256d4:	cbz	w0, 42530c <_obstack_memory_used@@Base+0xb178>
  4256d8:	b	42540c <_obstack_memory_used@@Base+0xb278>
  4256dc:	mov	w0, w9
  4256e0:	mov	w21, w9
  4256e4:	bl	402710 <iswalnum@plt>
  4256e8:	cmp	w21, #0x5f
  4256ec:	mov	w8, #0x1                   	// #1
  4256f0:	b.eq	4255b0 <_obstack_memory_used@@Base+0xb41c>  // b.none
  4256f4:	mov	w9, w21
  4256f8:	cbz	w0, 425190 <_obstack_memory_used@@Base+0xaffc>
  4256fc:	b	4255b0 <_obstack_memory_used@@Base+0xb41c>
  425700:	cmp	x2, #0x6
  425704:	mov	w11, #0x6                   	// #6
  425708:	csel	x11, x2, x11, lt  // lt = tstop
  42570c:	cmp	w11, #0x1
  425710:	add	x1, sp, #0xc
  425714:	b.lt	4250bc <_obstack_memory_used@@Base+0xaf28>  // b.tstop
  425718:	sxtw	x11, w11
  42571c:	sub	x12, x1, #0x1
  425720:	add	x13, x8, x11
  425724:	add	x13, x10, x13
  425728:	ldurb	w13, [x13, #-1]
  42572c:	add	x1, sp, #0xc
  425730:	ldrb	w13, [x9, x13]
  425734:	strb	w13, [x12, x11]
  425738:	subs	x11, x11, #0x1
  42573c:	b.gt	425720 <_obstack_memory_used@@Base+0xb58c>
  425740:	b	4250bc <_obstack_memory_used@@Base+0xaf28>
  425744:	mov	w0, w21
  425748:	bl	402710 <iswalnum@plt>
  42574c:	cmp	w21, #0x5f
  425750:	mov	w8, #0x1                   	// #1
  425754:	b.eq	4255b0 <_obstack_memory_used@@Base+0xb41c>  // b.none
  425758:	cbz	w0, 4255a4 <_obstack_memory_used@@Base+0xb410>
  42575c:	b	4255b0 <_obstack_memory_used@@Base+0xb41c>
  425760:	stp	x29, x30, [sp, #-32]!
  425764:	stp	x20, x19, [sp, #16]
  425768:	mov	x8, x2
  42576c:	ldr	w2, [x0, #160]
  425770:	mov	x20, x1
  425774:	mov	x1, x8
  425778:	mov	x29, sp
  42577c:	mov	x19, x0
  425780:	bl	426424 <_obstack_memory_used@@Base+0xc290>
  425784:	ldr	x9, [x20, #16]
  425788:	cmp	x9, #0x1
  42578c:	b.lt	4258b4 <_obstack_memory_used@@Base+0xb720>  // b.tstop
  425790:	ldr	x8, [x19, #152]
  425794:	ldr	x10, [x20, #24]
  425798:	mov	x12, xzr
  42579c:	ldr	x11, [x8]
  4257a0:	tbnz	w0, #0, 42582c <_obstack_memory_used@@Base+0xb698>
  4257a4:	tbnz	w0, #1, 4257fc <_obstack_memory_used@@Base+0xb668>
  4257a8:	mov	w13, #0x2400                	// #9216
  4257ac:	b	4257bc <_obstack_memory_used@@Base+0xb628>
  4257b0:	add	x12, x12, #0x1
  4257b4:	cmp	x12, x9
  4257b8:	b.ge	4258b4 <_obstack_memory_used@@Base+0xb720>  // b.tcont
  4257bc:	ldr	x8, [x10, x12, lsl #3]
  4257c0:	add	x14, x11, x8, lsl #4
  4257c4:	ldr	w14, [x14, #8]
  4257c8:	and	w15, w14, #0xff
  4257cc:	cmp	w15, #0x2
  4257d0:	b.ne	4257b0 <_obstack_memory_used@@Base+0xb61c>  // b.any
  4257d4:	tst	w14, #0x3ff00
  4257d8:	b.eq	4258b8 <_obstack_memory_used@@Base+0xb724>  // b.none
  4257dc:	tst	w14, w13
  4257e0:	b.ne	4257b0 <_obstack_memory_used@@Base+0xb61c>  // b.any
  4257e4:	tbnz	w0, #3, 4258b8 <_obstack_memory_used@@Base+0xb724>
  4257e8:	tbnz	w14, #15, 4257b0 <_obstack_memory_used@@Base+0xb61c>
  4257ec:	b	4258b8 <_obstack_memory_used@@Base+0xb724>
  4257f0:	add	x12, x12, #0x1
  4257f4:	cmp	x12, x9
  4257f8:	b.ge	4258b4 <_obstack_memory_used@@Base+0xb720>  // b.tcont
  4257fc:	ldr	x8, [x10, x12, lsl #3]
  425800:	add	x13, x11, x8, lsl #4
  425804:	ldr	w13, [x13, #8]
  425808:	and	w14, w13, #0xff
  42580c:	cmp	w14, #0x2
  425810:	b.ne	4257f0 <_obstack_memory_used@@Base+0xb65c>  // b.any
  425814:	tst	w13, #0x3ff00
  425818:	b.eq	4258b8 <_obstack_memory_used@@Base+0xb724>  // b.none
  42581c:	tbnz	w13, #10, 4257f0 <_obstack_memory_used@@Base+0xb65c>
  425820:	tbnz	w0, #3, 4258b8 <_obstack_memory_used@@Base+0xb724>
  425824:	tbnz	w13, #15, 4257f0 <_obstack_memory_used@@Base+0xb65c>
  425828:	b	4258b8 <_obstack_memory_used@@Base+0xb724>
  42582c:	tbnz	w0, #1, 425884 <_obstack_memory_used@@Base+0xb6f0>
  425830:	mov	w13, #0x2800                	// #10240
  425834:	b	425844 <_obstack_memory_used@@Base+0xb6b0>
  425838:	add	x12, x12, #0x1
  42583c:	cmp	x12, x9
  425840:	b.ge	4258b4 <_obstack_memory_used@@Base+0xb720>  // b.tcont
  425844:	ldr	x8, [x10, x12, lsl #3]
  425848:	add	x14, x11, x8, lsl #4
  42584c:	ldr	w14, [x14, #8]
  425850:	and	w15, w14, #0xff
  425854:	cmp	w15, #0x2
  425858:	b.ne	425838 <_obstack_memory_used@@Base+0xb6a4>  // b.any
  42585c:	tst	w14, #0x3ff00
  425860:	b.eq	4258b8 <_obstack_memory_used@@Base+0xb724>  // b.none
  425864:	tst	w14, w13
  425868:	b.ne	425838 <_obstack_memory_used@@Base+0xb6a4>  // b.any
  42586c:	tbnz	w0, #3, 4258b8 <_obstack_memory_used@@Base+0xb724>
  425870:	tbnz	w14, #15, 425838 <_obstack_memory_used@@Base+0xb6a4>
  425874:	b	4258b8 <_obstack_memory_used@@Base+0xb724>
  425878:	add	x12, x12, #0x1
  42587c:	cmp	x12, x9
  425880:	b.ge	4258b4 <_obstack_memory_used@@Base+0xb720>  // b.tcont
  425884:	ldr	x8, [x10, x12, lsl #3]
  425888:	add	x13, x11, x8, lsl #4
  42588c:	ldr	w13, [x13, #8]
  425890:	and	w14, w13, #0xff
  425894:	cmp	w14, #0x2
  425898:	b.ne	425878 <_obstack_memory_used@@Base+0xb6e4>  // b.any
  42589c:	tst	w13, #0x3ff00
  4258a0:	b.eq	4258b8 <_obstack_memory_used@@Base+0xb724>  // b.none
  4258a4:	tbnz	w13, #11, 425878 <_obstack_memory_used@@Base+0xb6e4>
  4258a8:	tbnz	w0, #3, 4258b8 <_obstack_memory_used@@Base+0xb724>
  4258ac:	tbnz	w13, #15, 425878 <_obstack_memory_used@@Base+0xb6e4>
  4258b0:	b	4258b8 <_obstack_memory_used@@Base+0xb724>
  4258b4:	mov	x8, xzr
  4258b8:	ldp	x20, x19, [sp, #16]
  4258bc:	mov	x0, x8
  4258c0:	ldp	x29, x30, [sp], #32
  4258c4:	ret
  4258c8:	stp	x29, x30, [sp, #-64]!
  4258cc:	stp	x22, x21, [sp, #32]
  4258d0:	stp	x20, x19, [sp, #48]
  4258d4:	ldr	x8, [x0, #232]
  4258d8:	mov	x19, x0
  4258dc:	str	x23, [sp, #16]
  4258e0:	mov	x29, sp
  4258e4:	cmp	x8, #0x1
  4258e8:	b.lt	425970 <_obstack_memory_used@@Base+0xb7dc>  // b.tstop
  4258ec:	mov	x22, xzr
  4258f0:	b	42590c <_obstack_memory_used@@Base+0xb778>
  4258f4:	mov	x0, x20
  4258f8:	bl	402620 <free@plt>
  4258fc:	ldr	x8, [x19, #232]
  425900:	add	x22, x22, #0x1
  425904:	cmp	x22, x8
  425908:	b.ge	425970 <_obstack_memory_used@@Base+0xb7dc>  // b.tcont
  42590c:	ldr	x8, [x19, #248]
  425910:	ldr	x20, [x8, x22, lsl #3]
  425914:	ldr	x8, [x20, #32]
  425918:	cmp	x8, #0x1
  42591c:	b.lt	42594c <_obstack_memory_used@@Base+0xb7b8>  // b.tstop
  425920:	mov	x23, xzr
  425924:	ldr	x8, [x20, #40]
  425928:	ldr	x21, [x8, x23, lsl #3]
  42592c:	ldr	x0, [x21, #32]
  425930:	bl	402620 <free@plt>
  425934:	mov	x0, x21
  425938:	bl	402620 <free@plt>
  42593c:	ldr	x8, [x20, #32]
  425940:	add	x23, x23, #0x1
  425944:	cmp	x23, x8
  425948:	b.lt	425924 <_obstack_memory_used@@Base+0xb790>  // b.tstop
  42594c:	ldr	x0, [x20, #40]
  425950:	bl	402620 <free@plt>
  425954:	ldr	x8, [x20, #16]
  425958:	cbz	x8, 4258f4 <_obstack_memory_used@@Base+0xb760>
  42595c:	ldr	x0, [x8, #16]
  425960:	bl	402620 <free@plt>
  425964:	ldr	x0, [x20, #16]
  425968:	bl	402620 <free@plt>
  42596c:	b	4258f4 <_obstack_memory_used@@Base+0xb760>
  425970:	str	xzr, [x19, #232]
  425974:	str	xzr, [x19, #200]
  425978:	ldp	x20, x19, [sp, #48]
  42597c:	ldp	x22, x21, [sp, #32]
  425980:	ldr	x23, [sp, #16]
  425984:	ldp	x29, x30, [sp], #64
  425988:	ret
  42598c:	stp	x29, x30, [sp, #-96]!
  425990:	stp	x28, x27, [sp, #16]
  425994:	stp	x26, x25, [sp, #32]
  425998:	stp	x24, x23, [sp, #48]
  42599c:	stp	x22, x21, [sp, #64]
  4259a0:	stp	x20, x19, [sp, #80]
  4259a4:	mov	x29, sp
  4259a8:	sub	sp, sp, #0x60
  4259ac:	adrp	x8, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  4259b0:	add	x8, x8, #0x410
  4259b4:	ldr	q0, [x8]
  4259b8:	ldr	x8, [x8, #16]
  4259bc:	mov	x20, x3
  4259c0:	mov	x27, x2
  4259c4:	mov	x22, x1
  4259c8:	mov	x28, x0
  4259cc:	stur	q0, [x29, #-32]
  4259d0:	stur	x8, [x29, #-16]
  4259d4:	tbz	w4, #0, 425a14 <_obstack_memory_used@@Base+0xb880>
  4259d8:	mov	w0, #0x60                  	// #96
  4259dc:	bl	4023a0 <malloc@plt>
  4259e0:	stur	x0, [x29, #-16]
  4259e4:	cbz	x0, 426400 <_obstack_memory_used@@Base+0xc26c>
  4259e8:	sub	x23, x29, #0x20
  4259ec:	ldr	x24, [x28, #144]
  4259f0:	lsl	x19, x27, #4
  4259f4:	cmp	x19, #0xfbf
  4259f8:	b.ls	425a28 <_obstack_memory_used@@Base+0xb894>  // b.plast
  4259fc:	mov	x0, x19
  425a00:	bl	4023a0 <malloc@plt>
  425a04:	cbz	x0, 425aec <_obstack_memory_used@@Base+0xb958>
  425a08:	mov	w8, #0x1                   	// #1
  425a0c:	stur	w8, [x29, #-60]
  425a10:	b	425a40 <_obstack_memory_used@@Base+0xb8ac>
  425a14:	mov	x23, xzr
  425a18:	ldr	x24, [x28, #144]
  425a1c:	lsl	x19, x27, #4
  425a20:	cmp	x19, #0xfbf
  425a24:	b.hi	4259fc <_obstack_memory_used@@Base+0xb868>  // b.pmore
  425a28:	add	x9, x19, #0xf
  425a2c:	mov	x8, sp
  425a30:	and	x9, x9, #0xfffffffffffffff0
  425a34:	sub	x0, x8, x9
  425a38:	mov	sp, x0
  425a3c:	stur	wzr, [x29, #-60]
  425a40:	mov	x1, x20
  425a44:	mov	x2, x19
  425a48:	stur	x0, [x29, #-72]
  425a4c:	bl	402210 <memcpy@plt>
  425a50:	ldp	x26, x8, [x20]
  425a54:	cmp	x26, x8
  425a58:	b.le	425acc <_obstack_memory_used@@Base+0xb938>
  425a5c:	mov	x25, xzr
  425a60:	mov	x0, x25
  425a64:	bl	402620 <free@plt>
  425a68:	ldur	w8, [x29, #-60]
  425a6c:	cbz	w8, 425a78 <_obstack_memory_used@@Base+0xb8e4>
  425a70:	ldur	x0, [x29, #-72]
  425a74:	bl	402620 <free@plt>
  425a78:	cbz	x23, 426350 <_obstack_memory_used@@Base+0xc1bc>
  425a7c:	ldr	x8, [x23]
  425a80:	ldr	x0, [x23, #16]
  425a84:	cmp	x8, #0x1
  425a88:	b.lt	42634c <_obstack_memory_used@@Base+0xc1b8>  // b.tstop
  425a8c:	mov	x19, xzr
  425a90:	mov	x20, xzr
  425a94:	add	x8, x0, x19
  425a98:	ldr	x0, [x8, #40]
  425a9c:	bl	402620 <free@plt>
  425aa0:	ldr	x8, [x23, #16]
  425aa4:	add	x8, x8, x19
  425aa8:	ldr	x0, [x8, #16]
  425aac:	bl	402620 <free@plt>
  425ab0:	ldr	x8, [x23]
  425ab4:	ldr	x0, [x23, #16]
  425ab8:	add	x20, x20, #0x1
  425abc:	add	x19, x19, #0x30
  425ac0:	cmp	x20, x8
  425ac4:	b.lt	425a94 <_obstack_memory_used@@Base+0xb900>  // b.tstop
  425ac8:	b	42634c <_obstack_memory_used@@Base+0xc1b8>
  425acc:	mov	x25, xzr
  425ad0:	mov	x21, xzr
  425ad4:	mov	x18, xzr
  425ad8:	add	x8, x20, #0x8
  425adc:	stp	x19, x27, [x29, #-56]
  425ae0:	stur	x8, [x29, #-80]
  425ae4:	stur	x28, [x29, #-40]
  425ae8:	b	425b64 <_obstack_memory_used@@Base+0xb9d0>
  425aec:	cbz	x23, 426400 <_obstack_memory_used@@Base+0xc26c>
  425af0:	ldr	x8, [x23]
  425af4:	ldr	x0, [x23, #16]
  425af8:	cmp	x8, #0x1
  425afc:	b.lt	425b3c <_obstack_memory_used@@Base+0xb9a8>  // b.tstop
  425b00:	mov	x19, xzr
  425b04:	mov	x20, xzr
  425b08:	add	x8, x0, x19
  425b0c:	ldr	x0, [x8, #40]
  425b10:	bl	402620 <free@plt>
  425b14:	ldr	x8, [x23, #16]
  425b18:	add	x8, x8, x19
  425b1c:	ldr	x0, [x8, #16]
  425b20:	bl	402620 <free@plt>
  425b24:	ldr	x8, [x23]
  425b28:	ldr	x0, [x23, #16]
  425b2c:	add	x20, x20, #0x1
  425b30:	add	x19, x19, #0x30
  425b34:	cmp	x20, x8
  425b38:	b.lt	425b08 <_obstack_memory_used@@Base+0xb974>  // b.tstop
  425b3c:	bl	402620 <free@plt>
  425b40:	mov	w0, #0xc                   	// #12
  425b44:	b	426404 <_obstack_memory_used@@Base+0xc270>
  425b48:	mov	x27, x12
  425b4c:	tbnz	x27, #63, 426148 <_obstack_memory_used@@Base+0xbfb4>
  425b50:	ldr	x8, [x20, #8]
  425b54:	mov	x24, x27
  425b58:	ldur	x27, [x29, #-48]
  425b5c:	cmp	x26, x8
  425b60:	b.gt	425a60 <_obstack_memory_used@@Base+0xb8cc>
  425b64:	ldr	x8, [x28]
  425b68:	add	x8, x8, x24, lsl #4
  425b6c:	ldr	w9, [x8, #8]
  425b70:	and	w10, w9, #0xff
  425b74:	cmp	w10, #0x9
  425b78:	b.eq	425bb0 <_obstack_memory_used@@Base+0xba1c>  // b.none
  425b7c:	cmp	w10, #0x8
  425b80:	b.ne	425c10 <_obstack_memory_used@@Base+0xba7c>  // b.any
  425b84:	ldr	x8, [x8]
  425b88:	add	x8, x8, #0x1
  425b8c:	cmp	x8, x27
  425b90:	b.ge	425c10 <_obstack_memory_used@@Base+0xba7c>  // b.tcont
  425b94:	add	x8, x20, x8, lsl #4
  425b98:	mov	x9, #0xffffffffffffffff    	// #-1
  425b9c:	stp	x26, x9, [x8]
  425ba0:	ldr	x8, [x20, #8]
  425ba4:	cmp	x26, x8
  425ba8:	b.eq	425c1c <_obstack_memory_used@@Base+0xba88>  // b.none
  425bac:	b	425cd0 <_obstack_memory_used@@Base+0xbb3c>
  425bb0:	ldr	x8, [x8]
  425bb4:	add	x8, x8, #0x1
  425bb8:	cmp	x8, x27
  425bbc:	b.ge	425c10 <_obstack_memory_used@@Base+0xba7c>  // b.tcont
  425bc0:	lsl	x10, x8, #4
  425bc4:	ldr	x11, [x20, x10]
  425bc8:	cmp	x11, x26
  425bcc:	b.ge	425be4 <_obstack_memory_used@@Base+0xba50>  // b.tcont
  425bd0:	ldur	x0, [x29, #-72]
  425bd4:	add	x8, x20, x8, lsl #4
  425bd8:	str	x26, [x8, #8]
  425bdc:	mov	x1, x20
  425be0:	b	425c00 <_obstack_memory_used@@Base+0xba6c>
  425be4:	tbz	w9, #19, 425cbc <_obstack_memory_used@@Base+0xbb28>
  425be8:	ldur	x9, [x29, #-72]
  425bec:	ldr	x9, [x9, x10]
  425bf0:	cmn	x9, #0x1
  425bf4:	b.eq	425cbc <_obstack_memory_used@@Base+0xbb28>  // b.none
  425bf8:	ldur	x1, [x29, #-72]
  425bfc:	mov	x0, x20
  425c00:	ldur	x2, [x29, #-56]
  425c04:	mov	x19, x18
  425c08:	bl	402210 <memcpy@plt>
  425c0c:	mov	x18, x19
  425c10:	ldr	x8, [x20, #8]
  425c14:	cmp	x26, x8
  425c18:	b.ne	425cd0 <_obstack_memory_used@@Base+0xbb3c>  // b.any
  425c1c:	ldr	x8, [x22, #176]
  425c20:	cmp	x24, x8
  425c24:	b.ne	425cd0 <_obstack_memory_used@@Base+0xbb3c>  // b.any
  425c28:	cbz	x23, 426378 <_obstack_memory_used@@Base+0xc1e4>
  425c2c:	ldur	x9, [x29, #-80]
  425c30:	mov	x8, x27
  425c34:	b	425c44 <_obstack_memory_used@@Base+0xbab0>
  425c38:	subs	x8, x8, #0x1
  425c3c:	add	x9, x9, #0x10
  425c40:	b.eq	4262e8 <_obstack_memory_used@@Base+0xc154>  // b.none
  425c44:	ldur	x10, [x9, #-8]
  425c48:	tbnz	x10, #63, 425c38 <_obstack_memory_used@@Base+0xbaa4>
  425c4c:	ldr	x10, [x9]
  425c50:	cmn	x10, #0x1
  425c54:	b.ne	425c38 <_obstack_memory_used@@Base+0xbaa4>  // b.any
  425c58:	cbz	x8, 4262e8 <_obstack_memory_used@@Base+0xc154>
  425c5c:	ldr	x8, [x23]
  425c60:	ldr	x9, [x23, #16]
  425c64:	ldur	x2, [x29, #-56]
  425c68:	mov	x0, x20
  425c6c:	sub	x8, x8, #0x1
  425c70:	str	x8, [x23]
  425c74:	add	x8, x8, x8, lsl #1
  425c78:	lsl	x19, x8, #4
  425c7c:	add	x8, x9, x19
  425c80:	ldr	x1, [x8, #16]
  425c84:	ldr	x26, [x8]
  425c88:	bl	402210 <memcpy@plt>
  425c8c:	mov	x0, x25
  425c90:	bl	402620 <free@plt>
  425c94:	ldr	x8, [x23, #16]
  425c98:	add	x8, x8, x19
  425c9c:	ldr	x0, [x8, #16]
  425ca0:	bl	402620 <free@plt>
  425ca4:	ldr	x8, [x23, #16]
  425ca8:	add	x8, x8, x19
  425cac:	ldp	x18, x21, [x8, #24]
  425cb0:	ldr	x25, [x8, #40]
  425cb4:	ldr	x24, [x8, #8]
  425cb8:	b	425cd0 <_obstack_memory_used@@Base+0xbb3c>
  425cbc:	add	x8, x20, x8, lsl #4
  425cc0:	str	x26, [x8, #8]
  425cc4:	ldr	x8, [x20, #8]
  425cc8:	cmp	x26, x8
  425ccc:	b.eq	425c1c <_obstack_memory_used@@Base+0xba88>  // b.none
  425cd0:	ldr	x28, [x22, #152]
  425cd4:	ldr	x8, [x28]
  425cd8:	add	x9, x8, x24, lsl #4
  425cdc:	ldr	w9, [x9, #8]
  425ce0:	tbnz	w9, #3, 425d88 <_obstack_memory_used@@Base+0xbbf4>
  425ce4:	tbnz	w9, #20, 425da4 <_obstack_memory_used@@Base+0xbc10>
  425ce8:	and	w9, w9, #0xff
  425cec:	cmp	w9, #0x4
  425cf0:	b.ne	426108 <_obstack_memory_used@@Base+0xbf74>  // b.any
  425cf4:	lsl	x9, x24, #4
  425cf8:	ldr	x8, [x8, x9]
  425cfc:	add	x8, x8, #0x1
  425d00:	cmp	x8, x27
  425d04:	b.ge	425f78 <_obstack_memory_used@@Base+0xbde4>  // b.tcont
  425d08:	add	x9, x20, x8, lsl #4
  425d0c:	ldp	x9, x10, [x9]
  425d10:	sub	x19, x10, x9
  425d14:	cbz	x23, 425f80 <_obstack_memory_used@@Base+0xbdec>
  425d18:	cmp	x8, x27
  425d1c:	b.ge	426154 <_obstack_memory_used@@Base+0xbfc0>  // b.tcont
  425d20:	lsl	x9, x8, #4
  425d24:	ldr	x9, [x20, x9]
  425d28:	cmn	x9, #0x1
  425d2c:	b.eq	426154 <_obstack_memory_used@@Base+0xbfc0>  // b.none
  425d30:	add	x8, x20, x8, lsl #4
  425d34:	ldr	x8, [x8, #8]
  425d38:	cmn	x8, #0x1
  425d3c:	b.eq	426154 <_obstack_memory_used@@Base+0xbfc0>  // b.none
  425d40:	cbz	x19, 425fe0 <_obstack_memory_used@@Base+0xbe4c>
  425d44:	ldr	x8, [x22, #48]
  425d48:	sub	x8, x8, x26
  425d4c:	cmp	x8, x19
  425d50:	b.lt	426154 <_obstack_memory_used@@Base+0xbfc0>  // b.tstop
  425d54:	ldr	x8, [x22, #8]
  425d58:	mov	x2, x19
  425d5c:	mov	x21, x18
  425d60:	add	x0, x8, x9
  425d64:	add	x1, x8, x26
  425d68:	bl	402490 <bcmp@plt>
  425d6c:	cbnz	w0, 426154 <_obstack_memory_used@@Base+0xbfc0>
  425d70:	ldr	x8, [x28, #24]
  425d74:	ldur	x28, [x29, #-40]
  425d78:	add	x26, x19, x26
  425d7c:	mov	x18, x21
  425d80:	ldr	x27, [x8, x24, lsl #3]
  425d84:	b	425ddc <_obstack_memory_used@@Base+0xbc48>
  425d88:	ldr	x8, [x22, #184]
  425d8c:	ldr	x27, [x28, #40]
  425d90:	ldr	x19, [x8, x26, lsl #3]
  425d94:	cbz	x18, 425e40 <_obstack_memory_used@@Base+0xbcac>
  425d98:	cbnz	x21, 4261b8 <_obstack_memory_used@@Base+0xc024>
  425d9c:	str	x24, [x25]
  425da0:	b	425e58 <_obstack_memory_used@@Base+0xbcc4>
  425da4:	mov	x0, x28
  425da8:	mov	x1, x24
  425dac:	mov	x2, x22
  425db0:	mov	x3, x26
  425db4:	mov	x19, x18
  425db8:	bl	428954 <_obstack_memory_used@@Base+0xe7c0>
  425dbc:	mov	x18, x19
  425dc0:	sxtw	x19, w0
  425dc4:	cbz	x19, 426108 <_obstack_memory_used@@Base+0xbf74>
  425dc8:	ldr	x8, [x28, #24]
  425dcc:	add	x26, x19, x26
  425dd0:	ldr	x27, [x8, x24, lsl #3]
  425dd4:	cbz	x23, 42613c <_obstack_memory_used@@Base+0xbfa8>
  425dd8:	ldur	x28, [x29, #-40]
  425ddc:	ldr	x8, [x22, #168]
  425de0:	cmp	x26, x8
  425de4:	b.gt	426158 <_obstack_memory_used@@Base+0xbfc4>
  425de8:	ldr	x8, [x22, #184]
  425dec:	ldr	x8, [x8, x26, lsl #3]
  425df0:	cbz	x8, 426158 <_obstack_memory_used@@Base+0xbfc4>
  425df4:	ldr	x9, [x8, #16]
  425df8:	subs	x9, x9, #0x1
  425dfc:	b.lt	426158 <_obstack_memory_used@@Base+0xbfc4>  // b.tstop
  425e00:	ldr	x8, [x8, #24]
  425e04:	mov	x10, xzr
  425e08:	b.eq	425e2c <_obstack_memory_used@@Base+0xbc98>  // b.none
  425e0c:	add	x11, x10, x9
  425e10:	lsr	x11, x11, #1
  425e14:	ldr	x12, [x8, x11, lsl #3]
  425e18:	cmp	x12, x27
  425e1c:	csinc	x10, x10, x11, ge  // ge = tcont
  425e20:	csel	x9, x9, x11, lt  // lt = tstop
  425e24:	cmp	x10, x9
  425e28:	b.cc	425e0c <_obstack_memory_used@@Base+0xbc78>  // b.lo, b.ul, b.last
  425e2c:	ldr	x8, [x8, x10, lsl #3]
  425e30:	cmp	x8, x27
  425e34:	b.ne	426150 <_obstack_memory_used@@Base+0xbfbc>  // b.any
  425e38:	mov	x21, xzr
  425e3c:	b	425b4c <_obstack_memory_used@@Base+0xb9b8>
  425e40:	mov	w0, #0x8                   	// #8
  425e44:	bl	4023a0 <malloc@plt>
  425e48:	mov	x25, x0
  425e4c:	cbz	x0, 426394 <_obstack_memory_used@@Base+0xc200>
  425e50:	str	x24, [x25]
  425e54:	mov	w18, #0x1                   	// #1
  425e58:	mov	w21, #0x1                   	// #1
  425e5c:	mov	w8, #0x18                  	// #24
  425e60:	madd	x8, x24, x8, x27
  425e64:	ldr	x8, [x8, #8]
  425e68:	cmp	x8, #0x1
  425e6c:	b.lt	426150 <_obstack_memory_used@@Base+0xbfbc>  // b.tstop
  425e70:	ldr	x9, [x19, #16]
  425e74:	subs	x10, x9, #0x1
  425e78:	b.lt	426150 <_obstack_memory_used@@Base+0xbfbc>  // b.tstop
  425e7c:	mov	w9, #0x18                  	// #24
  425e80:	madd	x9, x24, x9, x27
  425e84:	ldr	x9, [x9, #16]
  425e88:	ldr	x11, [x19, #24]
  425e8c:	cbz	x10, 425ef8 <_obstack_memory_used@@Base+0xbd64>
  425e90:	ldur	x28, [x29, #-40]
  425e94:	mov	x13, xzr
  425e98:	mov	x12, #0xffffffffffffffff    	// #-1
  425e9c:	b	425eac <_obstack_memory_used@@Base+0xbd18>
  425ea0:	add	x13, x13, #0x1
  425ea4:	cmp	x13, x8
  425ea8:	b.eq	425b48 <_obstack_memory_used@@Base+0xb9b4>  // b.none
  425eac:	ldr	x24, [x9, x13, lsl #3]
  425eb0:	mov	x14, xzr
  425eb4:	mov	x15, x10
  425eb8:	add	x16, x14, x15
  425ebc:	lsr	x16, x16, #1
  425ec0:	ldr	x17, [x11, x16, lsl #3]
  425ec4:	cmp	x17, x24
  425ec8:	csinc	x14, x14, x16, ge  // ge = tcont
  425ecc:	csel	x15, x15, x16, lt  // lt = tstop
  425ed0:	cmp	x14, x15
  425ed4:	b.cc	425eb8 <_obstack_memory_used@@Base+0xbd24>  // b.lo, b.ul, b.last
  425ed8:	ldr	x14, [x11, x14, lsl #3]
  425edc:	cmp	x14, x24
  425ee0:	b.ne	425ea0 <_obstack_memory_used@@Base+0xbd0c>  // b.any
  425ee4:	cmn	x12, #0x1
  425ee8:	mov	x27, x12
  425eec:	mov	x12, x24
  425ef0:	b.eq	425ea0 <_obstack_memory_used@@Base+0xbd0c>  // b.none
  425ef4:	b	425f34 <_obstack_memory_used@@Base+0xbda0>
  425ef8:	ldr	x24, [x11]
  425efc:	ldur	x28, [x29, #-40]
  425f00:	mov	x27, #0xffffffffffffffff    	// #-1
  425f04:	b	425f1c <_obstack_memory_used@@Base+0xbd88>
  425f08:	mov	x0, x27
  425f0c:	subs	x8, x8, #0x1
  425f10:	add	x9, x9, #0x8
  425f14:	mov	x27, x0
  425f18:	b.eq	425f98 <_obstack_memory_used@@Base+0xbe04>  // b.none
  425f1c:	ldr	x10, [x9]
  425f20:	cmp	x24, x10
  425f24:	b.ne	425f08 <_obstack_memory_used@@Base+0xbd74>  // b.any
  425f28:	cmn	x27, #0x1
  425f2c:	mov	x0, x24
  425f30:	b.eq	425f0c <_obstack_memory_used@@Base+0xbd78>  // b.none
  425f34:	subs	x8, x21, #0x1
  425f38:	b.lt	425fa0 <_obstack_memory_used@@Base+0xbe0c>  // b.tstop
  425f3c:	mov	x9, xzr
  425f40:	b.eq	425f64 <_obstack_memory_used@@Base+0xbdd0>  // b.none
  425f44:	add	x10, x9, x8
  425f48:	lsr	x10, x10, #1
  425f4c:	ldr	x11, [x25, x10, lsl #3]
  425f50:	cmp	x11, x27
  425f54:	csinc	x9, x9, x10, ge  // ge = tcont
  425f58:	csel	x8, x8, x10, lt  // lt = tstop
  425f5c:	cmp	x9, x8
  425f60:	b.cc	425f44 <_obstack_memory_used@@Base+0xbdb0>  // b.lo, b.ul, b.last
  425f64:	ldr	x8, [x25, x9, lsl #3]
  425f68:	cmp	x8, x27
  425f6c:	b.ne	425fa0 <_obstack_memory_used@@Base+0xbe0c>  // b.any
  425f70:	mov	x27, x24
  425f74:	b	425b4c <_obstack_memory_used@@Base+0xb9b8>
  425f78:	mov	x19, xzr
  425f7c:	cbnz	x23, 425d18 <_obstack_memory_used@@Base+0xbb84>
  425f80:	cbz	x19, 425fe0 <_obstack_memory_used@@Base+0xbe4c>
  425f84:	ldr	x8, [x28, #24]
  425f88:	mov	x21, xzr
  425f8c:	add	x26, x19, x26
  425f90:	ldr	x27, [x8, x24, lsl #3]
  425f94:	b	426140 <_obstack_memory_used@@Base+0xbfac>
  425f98:	mov	x27, x0
  425f9c:	b	425b4c <_obstack_memory_used@@Base+0xb9b8>
  425fa0:	cbz	x23, 425b4c <_obstack_memory_used@@Base+0xb9b8>
  425fa4:	stur	x18, [x29, #-96]
  425fa8:	ldp	x19, x9, [x23]
  425fac:	add	x8, x19, #0x1
  425fb0:	cmp	x8, x9
  425fb4:	str	x8, [x23]
  425fb8:	b.ne	425ff0 <_obstack_memory_used@@Base+0xbe5c>  // b.any
  425fbc:	ldr	x0, [x23, #16]
  425fc0:	add	x8, x8, x8, lsl #1
  425fc4:	lsl	x1, x8, #5
  425fc8:	bl	4024c0 <realloc@plt>
  425fcc:	cbz	x0, 426394 <_obstack_memory_used@@Base+0xc200>
  425fd0:	ldr	x8, [x23, #8]
  425fd4:	lsl	x8, x8, #1
  425fd8:	stp	x8, x0, [x23, #8]
  425fdc:	b	425ff4 <_obstack_memory_used@@Base+0xbe60>
  425fe0:	cbz	x18, 426088 <_obstack_memory_used@@Base+0xbef4>
  425fe4:	cbnz	x21, 42624c <_obstack_memory_used@@Base+0xc0b8>
  425fe8:	str	x24, [x25]
  425fec:	b	4260a0 <_obstack_memory_used@@Base+0xbf0c>
  425ff0:	ldr	x0, [x23, #16]
  425ff4:	mov	w8, #0x30                  	// #48
  425ff8:	madd	x28, x19, x8, x0
  425ffc:	stur	x0, [x29, #-88]
  426000:	stp	x26, x24, [x28]
  426004:	ldur	x24, [x29, #-56]
  426008:	mov	x0, x24
  42600c:	bl	4023a0 <malloc@plt>
  426010:	str	x0, [x28, #16]
  426014:	cbz	x0, 426394 <_obstack_memory_used@@Base+0xc200>
  426018:	mov	x1, x20
  42601c:	mov	x2, x24
  426020:	bl	402210 <memcpy@plt>
  426024:	ldur	x9, [x29, #-88]
  426028:	mov	w8, #0x30                  	// #48
  42602c:	cmp	x21, #0x1
  426030:	madd	x8, x19, x8, x9
  426034:	add	x28, x8, #0x18
  426038:	str	x21, [x8, #32]
  42603c:	b.lt	426074 <_obstack_memory_used@@Base+0xbee0>  // b.tstop
  426040:	lsl	x24, x21, #3
  426044:	mov	x0, x24
  426048:	str	x21, [x28]
  42604c:	bl	4023a0 <malloc@plt>
  426050:	ldur	x9, [x29, #-88]
  426054:	mov	w8, #0x30                  	// #48
  426058:	madd	x8, x19, x8, x9
  42605c:	str	x0, [x8, #40]
  426060:	cbz	x0, 426390 <_obstack_memory_used@@Base+0xc1fc>
  426064:	mov	x1, x25
  426068:	mov	x2, x24
  42606c:	bl	402210 <memcpy@plt>
  426070:	b	42607c <_obstack_memory_used@@Base+0xbee8>
  426074:	stp	xzr, xzr, [x28]
  426078:	str	xzr, [x28, #16]
  42607c:	ldur	x28, [x29, #-40]
  426080:	ldur	x18, [x29, #-96]
  426084:	b	425b4c <_obstack_memory_used@@Base+0xb9b8>
  426088:	mov	w0, #0x8                   	// #8
  42608c:	bl	4023a0 <malloc@plt>
  426090:	mov	x25, x0
  426094:	cbz	x0, 426394 <_obstack_memory_used@@Base+0xc200>
  426098:	str	x24, [x25]
  42609c:	mov	w18, #0x1                   	// #1
  4260a0:	mov	w21, #0x1                   	// #1
  4260a4:	ldr	x8, [x22, #184]
  4260a8:	ldr	x8, [x8, x26, lsl #3]
  4260ac:	ldr	x9, [x8, #16]
  4260b0:	subs	x9, x9, #0x1
  4260b4:	b.lt	426108 <_obstack_memory_used@@Base+0xbf74>  // b.tstop
  4260b8:	ldr	x10, [x28, #40]
  4260bc:	mov	w11, #0x18                  	// #24
  4260c0:	ldr	x8, [x8, #24]
  4260c4:	madd	x10, x24, x11, x10
  4260c8:	ldr	x10, [x10, #16]
  4260cc:	ldr	x27, [x10]
  4260d0:	mov	x10, xzr
  4260d4:	b.eq	4260f8 <_obstack_memory_used@@Base+0xbf64>  // b.none
  4260d8:	add	x11, x10, x9
  4260dc:	lsr	x11, x11, #1
  4260e0:	ldr	x12, [x8, x11, lsl #3]
  4260e4:	cmp	x12, x27
  4260e8:	csinc	x10, x10, x11, ge  // ge = tcont
  4260ec:	csel	x9, x9, x11, lt  // lt = tstop
  4260f0:	cmp	x10, x9
  4260f4:	b.cc	4260d8 <_obstack_memory_used@@Base+0xbf44>  // b.lo, b.ul, b.last
  4260f8:	ldr	x8, [x8, x10, lsl #3]
  4260fc:	cmp	x8, x27
  426100:	b.ne	425dc4 <_obstack_memory_used@@Base+0xbc30>  // b.any
  426104:	b	426140 <_obstack_memory_used@@Base+0xbfac>
  426108:	ldr	x8, [x28]
  42610c:	mov	x0, x22
  426110:	mov	x2, x26
  426114:	mov	x21, x18
  426118:	add	x1, x8, x24, lsl #4
  42611c:	bl	428ccc <_obstack_memory_used@@Base+0xeb38>
  426120:	tbz	w0, #0, 426150 <_obstack_memory_used@@Base+0xbfbc>
  426124:	mov	w19, #0x1                   	// #1
  426128:	mov	x18, x21
  42612c:	ldr	x8, [x28, #24]
  426130:	add	x26, x19, x26
  426134:	ldr	x27, [x8, x24, lsl #3]
  426138:	cbnz	x23, 425dd8 <_obstack_memory_used@@Base+0xbc44>
  42613c:	mov	x21, xzr
  426140:	ldur	x28, [x29, #-40]
  426144:	b	425b4c <_obstack_memory_used@@Base+0xb9b8>
  426148:	cmn	x27, #0x2
  42614c:	b.eq	426394 <_obstack_memory_used@@Base+0xc200>  // b.none
  426150:	cbz	x23, 426358 <_obstack_memory_used@@Base+0xc1c4>
  426154:	ldur	x28, [x29, #-40]
  426158:	ldr	x8, [x23]
  42615c:	ldr	x9, [x23, #16]
  426160:	ldur	x2, [x29, #-56]
  426164:	mov	x0, x20
  426168:	sub	x8, x8, #0x1
  42616c:	str	x8, [x23]
  426170:	add	x8, x8, x8, lsl #1
  426174:	lsl	x19, x8, #4
  426178:	add	x8, x9, x19
  42617c:	ldr	x1, [x8, #16]
  426180:	ldr	x26, [x8]
  426184:	bl	402210 <memcpy@plt>
  426188:	mov	x0, x25
  42618c:	bl	402620 <free@plt>
  426190:	ldr	x8, [x23, #16]
  426194:	add	x8, x8, x19
  426198:	ldr	x0, [x8, #16]
  42619c:	bl	402620 <free@plt>
  4261a0:	ldr	x8, [x23, #16]
  4261a4:	add	x8, x8, x19
  4261a8:	ldp	x18, x21, [x8, #24]
  4261ac:	ldr	x25, [x8, #40]
  4261b0:	ldr	x27, [x8, #8]
  4261b4:	b	425b50 <_obstack_memory_used@@Base+0xb9bc>
  4261b8:	cmp	x18, x21
  4261bc:	b.ne	4261dc <_obstack_memory_used@@Base+0xc048>  // b.any
  4261c0:	lsl	x1, x18, #4
  4261c4:	mov	x0, x25
  4261c8:	mov	x28, x18
  4261cc:	bl	4024c0 <realloc@plt>
  4261d0:	cbz	x0, 426394 <_obstack_memory_used@@Base+0xc200>
  4261d4:	lsl	x18, x28, #1
  4261d8:	mov	x25, x0
  4261dc:	ldr	x8, [x25]
  4261e0:	cmp	x8, x24
  4261e4:	b.le	426214 <_obstack_memory_used@@Base+0xc080>
  4261e8:	cmp	x21, #0x1
  4261ec:	mov	x8, x21
  4261f0:	b.lt	426240 <_obstack_memory_used@@Base+0xc0ac>  // b.tstop
  4261f4:	mov	x9, x21
  4261f8:	add	x10, x25, x9, lsl #3
  4261fc:	ldur	x11, [x10, #-8]
  426200:	subs	x8, x9, #0x1
  426204:	mov	x9, x8
  426208:	str	x11, [x10]
  42620c:	b.gt	4261f8 <_obstack_memory_used@@Base+0xc064>
  426210:	b	426240 <_obstack_memory_used@@Base+0xc0ac>
  426214:	add	x8, x25, x21, lsl #3
  426218:	ldur	x9, [x8, #-8]
  42621c:	mov	x8, x21
  426220:	cmp	x9, x24
  426224:	b.le	426240 <_obstack_memory_used@@Base+0xc0ac>
  426228:	add	x10, x25, x8, lsl #3
  42622c:	str	x9, [x10]
  426230:	ldur	x9, [x10, #-16]
  426234:	sub	x8, x8, #0x1
  426238:	cmp	x9, x24
  42623c:	b.gt	426228 <_obstack_memory_used@@Base+0xc094>
  426240:	add	x21, x21, #0x1
  426244:	str	x24, [x25, x8, lsl #3]
  426248:	b	425e5c <_obstack_memory_used@@Base+0xbcc8>
  42624c:	mov	x12, x18
  426250:	cmp	x18, x21
  426254:	b.ne	426274 <_obstack_memory_used@@Base+0xc0e0>  // b.any
  426258:	lsl	x1, x12, #4
  42625c:	mov	x0, x25
  426260:	mov	x27, x12
  426264:	bl	4024c0 <realloc@plt>
  426268:	cbz	x0, 426394 <_obstack_memory_used@@Base+0xc200>
  42626c:	lsl	x12, x27, #1
  426270:	mov	x25, x0
  426274:	ldr	x8, [x25]
  426278:	cmp	x8, x24
  42627c:	b.le	4262ac <_obstack_memory_used@@Base+0xc118>
  426280:	cmp	x21, #0x1
  426284:	mov	x8, x21
  426288:	b.lt	4262d8 <_obstack_memory_used@@Base+0xc144>  // b.tstop
  42628c:	mov	x9, x21
  426290:	add	x10, x25, x9, lsl #3
  426294:	ldur	x11, [x10, #-8]
  426298:	subs	x8, x9, #0x1
  42629c:	mov	x9, x8
  4262a0:	str	x11, [x10]
  4262a4:	b.gt	426290 <_obstack_memory_used@@Base+0xc0fc>
  4262a8:	b	4262d8 <_obstack_memory_used@@Base+0xc144>
  4262ac:	add	x8, x25, x21, lsl #3
  4262b0:	ldur	x9, [x8, #-8]
  4262b4:	mov	x8, x21
  4262b8:	cmp	x9, x24
  4262bc:	b.le	4262d8 <_obstack_memory_used@@Base+0xc144>
  4262c0:	add	x10, x25, x8, lsl #3
  4262c4:	str	x9, [x10]
  4262c8:	ldur	x9, [x10, #-16]
  4262cc:	sub	x8, x8, #0x1
  4262d0:	cmp	x9, x24
  4262d4:	b.gt	4262c0 <_obstack_memory_used@@Base+0xc12c>
  4262d8:	add	x21, x21, #0x1
  4262dc:	mov	x18, x12
  4262e0:	str	x24, [x25, x8, lsl #3]
  4262e4:	b	4260a4 <_obstack_memory_used@@Base+0xbf10>
  4262e8:	mov	x0, x25
  4262ec:	bl	402620 <free@plt>
  4262f0:	ldur	w8, [x29, #-60]
  4262f4:	cbz	w8, 426300 <_obstack_memory_used@@Base+0xc16c>
  4262f8:	ldur	x0, [x29, #-72]
  4262fc:	bl	402620 <free@plt>
  426300:	ldr	x8, [x23]
  426304:	ldr	x0, [x23, #16]
  426308:	cmp	x8, #0x1
  42630c:	b.lt	42634c <_obstack_memory_used@@Base+0xc1b8>  // b.tstop
  426310:	mov	x19, xzr
  426314:	mov	x20, xzr
  426318:	add	x8, x0, x19
  42631c:	ldr	x0, [x8, #40]
  426320:	bl	402620 <free@plt>
  426324:	ldr	x8, [x23, #16]
  426328:	add	x8, x8, x19
  42632c:	ldr	x0, [x8, #16]
  426330:	bl	402620 <free@plt>
  426334:	ldr	x8, [x23]
  426338:	ldr	x0, [x23, #16]
  42633c:	add	x20, x20, #0x1
  426340:	add	x19, x19, #0x30
  426344:	cmp	x20, x8
  426348:	b.lt	426318 <_obstack_memory_used@@Base+0xc184>  // b.tstop
  42634c:	bl	402620 <free@plt>
  426350:	mov	w0, wzr
  426354:	b	426404 <_obstack_memory_used@@Base+0xc270>
  426358:	mov	x0, x25
  42635c:	bl	402620 <free@plt>
  426360:	ldur	w8, [x29, #-60]
  426364:	cbz	w8, 426370 <_obstack_memory_used@@Base+0xc1dc>
  426368:	ldur	x0, [x29, #-72]
  42636c:	bl	402620 <free@plt>
  426370:	mov	w0, #0x1                   	// #1
  426374:	b	426404 <_obstack_memory_used@@Base+0xc270>
  426378:	mov	x0, x25
  42637c:	bl	402620 <free@plt>
  426380:	ldur	w8, [x29, #-60]
  426384:	cbz	w8, 426350 <_obstack_memory_used@@Base+0xc1bc>
  426388:	ldur	x0, [x29, #-72]
  42638c:	b	42634c <_obstack_memory_used@@Base+0xc1b8>
  426390:	stp	xzr, xzr, [x28]
  426394:	mov	x0, x25
  426398:	bl	402620 <free@plt>
  42639c:	ldur	w8, [x29, #-60]
  4263a0:	cbz	w8, 4263ac <_obstack_memory_used@@Base+0xc218>
  4263a4:	ldur	x0, [x29, #-72]
  4263a8:	bl	402620 <free@plt>
  4263ac:	cbz	x23, 426400 <_obstack_memory_used@@Base+0xc26c>
  4263b0:	ldr	x8, [x23]
  4263b4:	ldr	x0, [x23, #16]
  4263b8:	cmp	x8, #0x1
  4263bc:	b.lt	425b3c <_obstack_memory_used@@Base+0xb9a8>  // b.tstop
  4263c0:	mov	x19, xzr
  4263c4:	mov	x20, xzr
  4263c8:	add	x8, x0, x19
  4263cc:	ldr	x0, [x8, #40]
  4263d0:	bl	402620 <free@plt>
  4263d4:	ldr	x8, [x23, #16]
  4263d8:	add	x8, x8, x19
  4263dc:	ldr	x0, [x8, #16]
  4263e0:	bl	402620 <free@plt>
  4263e4:	ldr	x8, [x23]
  4263e8:	ldr	x0, [x23, #16]
  4263ec:	add	x20, x20, #0x1
  4263f0:	add	x19, x19, #0x30
  4263f4:	cmp	x20, x8
  4263f8:	b.lt	4263c8 <_obstack_memory_used@@Base+0xc234>  // b.tstop
  4263fc:	b	425b3c <_obstack_memory_used@@Base+0xb9a8>
  426400:	mov	w0, #0xc                   	// #12
  426404:	mov	sp, x29
  426408:	ldp	x20, x19, [sp, #80]
  42640c:	ldp	x22, x21, [sp, #64]
  426410:	ldp	x24, x23, [sp, #48]
  426414:	ldp	x26, x25, [sp, #32]
  426418:	ldp	x28, x27, [sp, #16]
  42641c:	ldp	x29, x30, [sp], #96
  426420:	ret
  426424:	sub	sp, sp, #0x20
  426428:	stp	x29, x30, [sp, #16]
  42642c:	add	x29, sp, #0x10
  426430:	tbnz	x1, #63, 4264fc <_obstack_memory_used@@Base+0xc368>
  426434:	ldr	x8, [x0, #88]
  426438:	cmp	x8, x1
  42643c:	b.eq	426510 <_obstack_memory_used@@Base+0xc37c>  // b.none
  426440:	ldr	w8, [x0, #144]
  426444:	cmp	w8, #0x2
  426448:	b.lt	42647c <_obstack_memory_used@@Base+0xc2e8>  // b.tstop
  42644c:	ldr	x8, [x0, #16]
  426450:	ldr	w9, [x8, x1, lsl #2]
  426454:	cmn	w9, #0x1
  426458:	b.ne	4264b0 <_obstack_memory_used@@Base+0xc31c>  // b.any
  42645c:	sub	x1, x1, #0x1
  426460:	cmn	x1, #0x1
  426464:	b.ne	426450 <_obstack_memory_used@@Base+0xc2bc>  // b.any
  426468:	ldr	w8, [x0, #112]
  42646c:	ldp	x29, x30, [sp, #16]
  426470:	mov	w0, w8
  426474:	add	sp, sp, #0x20
  426478:	ret
  42647c:	ldr	x8, [x0, #8]
  426480:	ldr	x9, [x0, #128]
  426484:	ldrb	w8, [x8, x1]
  426488:	lsr	x10, x8, #3
  42648c:	and	x10, x10, #0x18
  426490:	ldr	x9, [x9, x10]
  426494:	lsr	x9, x9, x8
  426498:	tbz	w9, #0, 4264e0 <_obstack_memory_used@@Base+0xc34c>
  42649c:	mov	w8, #0x1                   	// #1
  4264a0:	ldp	x29, x30, [sp, #16]
  4264a4:	mov	w0, w8
  4264a8:	add	sp, sp, #0x20
  4264ac:	ret
  4264b0:	ldrb	w8, [x0, #142]
  4264b4:	cbnz	w8, 42652c <_obstack_memory_used@@Base+0xc398>
  4264b8:	cmp	w9, #0xa
  4264bc:	b.ne	4264e8 <_obstack_memory_used@@Base+0xc354>  // b.any
  4264c0:	ldrb	w8, [x0, #141]
  4264c4:	cmp	w8, #0x0
  4264c8:	cset	w8, ne  // ne = any
  4264cc:	lsl	w8, w8, #1
  4264d0:	ldp	x29, x30, [sp, #16]
  4264d4:	mov	w0, w8
  4264d8:	add	sp, sp, #0x20
  4264dc:	ret
  4264e0:	cmp	w8, #0xa
  4264e4:	b.eq	4264c0 <_obstack_memory_used@@Base+0xc32c>  // b.none
  4264e8:	mov	w8, wzr
  4264ec:	ldp	x29, x30, [sp, #16]
  4264f0:	mov	w0, w8
  4264f4:	add	sp, sp, #0x20
  4264f8:	ret
  4264fc:	ldr	w8, [x0, #112]
  426500:	ldp	x29, x30, [sp, #16]
  426504:	mov	w0, w8
  426508:	add	sp, sp, #0x20
  42650c:	ret
  426510:	and	w8, w2, #0x2
  426514:	mov	w9, #0xa                   	// #10
  426518:	eor	w8, w8, w9
  42651c:	ldp	x29, x30, [sp, #16]
  426520:	mov	w0, w8
  426524:	add	sp, sp, #0x20
  426528:	ret
  42652c:	str	x0, [sp]
  426530:	mov	w0, w9
  426534:	stur	w9, [x29, #-4]
  426538:	bl	402710 <iswalnum@plt>
  42653c:	ldur	w9, [x29, #-4]
  426540:	mov	w8, #0x1                   	// #1
  426544:	cmp	w9, #0x5f
  426548:	b.eq	42646c <_obstack_memory_used@@Base+0xc2d8>  // b.none
  42654c:	mov	w10, w0
  426550:	ldr	x0, [sp]
  426554:	cbz	w10, 4264b8 <_obstack_memory_used@@Base+0xc324>
  426558:	b	42646c <_obstack_memory_used@@Base+0xc2d8>
  42655c:	stp	x29, x30, [sp, #-80]!
  426560:	stp	x26, x25, [sp, #16]
  426564:	stp	x24, x23, [sp, #32]
  426568:	stp	x22, x21, [sp, #48]
  42656c:	stp	x20, x19, [sp, #64]
  426570:	ldr	x8, [x1, #8]
  426574:	mov	x29, sp
  426578:	cmp	x8, #0x1
  42657c:	b.lt	426648 <_obstack_memory_used@@Base+0xc4b4>  // b.tstop
  426580:	ldr	x23, [x0, #152]
  426584:	mov	x19, x2
  426588:	mov	x20, x1
  42658c:	mov	x21, x0
  426590:	mov	x24, xzr
  426594:	b	4265b8 <_obstack_memory_used@@Base+0xc424>
  426598:	add	x8, x8, #0x1
  42659c:	str	x25, [x9, #8]
  4265a0:	str	x8, [x21, #232]
  4265a4:	str	x19, [x9]
  4265a8:	ldr	x8, [x20, #8]
  4265ac:	add	x24, x24, #0x1
  4265b0:	cmp	x24, x8
  4265b4:	b.ge	426648 <_obstack_memory_used@@Base+0xc4b4>  // b.tcont
  4265b8:	ldr	x9, [x20, #16]
  4265bc:	ldr	x25, [x9, x24, lsl #3]
  4265c0:	ldr	x9, [x23]
  4265c4:	add	x10, x9, x25, lsl #4
  4265c8:	ldrb	w10, [x10, #8]
  4265cc:	cmp	w10, #0x8
  4265d0:	b.ne	4265ac <_obstack_memory_used@@Base+0xc418>  // b.any
  4265d4:	lsl	x10, x25, #4
  4265d8:	ldr	x9, [x9, x10]
  4265dc:	cmp	x9, #0x3f
  4265e0:	b.gt	4265ac <_obstack_memory_used@@Base+0xc418>
  4265e4:	ldr	x10, [x23, #160]
  4265e8:	lsr	x9, x10, x9
  4265ec:	tbz	w9, #0, 4265ac <_obstack_memory_used@@Base+0xc418>
  4265f0:	ldp	x8, x26, [x21, #232]
  4265f4:	ldr	x22, [x21, #248]
  4265f8:	cmp	x8, x26
  4265fc:	b.eq	426628 <_obstack_memory_used@@Base+0xc494>  // b.none
  426600:	mov	w0, #0x1                   	// #1
  426604:	mov	w1, #0x30                  	// #48
  426608:	bl	402480 <calloc@plt>
  42660c:	ldr	x8, [x21, #232]
  426610:	lsl	x9, x8, #3
  426614:	str	x0, [x22, x9]
  426618:	ldr	x10, [x21, #248]
  42661c:	ldr	x9, [x10, x9]
  426620:	cbnz	x9, 426598 <_obstack_memory_used@@Base+0xc404>
  426624:	b	426664 <_obstack_memory_used@@Base+0xc4d0>
  426628:	lsl	x1, x26, #4
  42662c:	mov	x0, x22
  426630:	bl	4024c0 <realloc@plt>
  426634:	cbz	x0, 426664 <_obstack_memory_used@@Base+0xc4d0>
  426638:	mov	x22, x0
  42663c:	lsl	x8, x26, #1
  426640:	stp	x8, x0, [x21, #240]
  426644:	b	426600 <_obstack_memory_used@@Base+0xc46c>
  426648:	mov	w0, wzr
  42664c:	ldp	x20, x19, [sp, #64]
  426650:	ldp	x22, x21, [sp, #48]
  426654:	ldp	x24, x23, [sp, #32]
  426658:	ldp	x26, x25, [sp, #16]
  42665c:	ldp	x29, x30, [sp], #80
  426660:	ret
  426664:	mov	w0, #0xc                   	// #12
  426668:	b	42664c <_obstack_memory_used@@Base+0xc4b8>
  42666c:	sub	sp, sp, #0xd0
  426670:	stp	x29, x30, [sp, #112]
  426674:	stp	x28, x27, [sp, #128]
  426678:	stp	x26, x25, [sp, #144]
  42667c:	stp	x24, x23, [sp, #160]
  426680:	stp	x22, x21, [sp, #176]
  426684:	stp	x20, x19, [sp, #192]
  426688:	ldr	x8, [x1, #8]
  42668c:	add	x29, sp, #0x70
  426690:	cmp	x8, #0x1
  426694:	b.lt	426f14 <_obstack_memory_used@@Base+0xcd80>  // b.tstop
  426698:	ldr	x10, [x0, #152]
  42669c:	ldr	x8, [x0, #72]
  4266a0:	mov	x23, x1
  4266a4:	mov	x28, x0
  4266a8:	mov	x9, xzr
  4266ac:	stur	x8, [x29, #-48]
  4266b0:	str	x1, [sp]
  4266b4:	str	x10, [sp, #32]
  4266b8:	b	4266d0 <_obstack_memory_used@@Base+0xc53c>
  4266bc:	ldp	x9, x10, [sp, #24]
  4266c0:	ldr	x8, [x23, #8]
  4266c4:	add	x9, x9, #0x1
  4266c8:	cmp	x9, x8
  4266cc:	b.ge	426f14 <_obstack_memory_used@@Base+0xcd80>  // b.tcont
  4266d0:	ldr	x8, [x23, #16]
  4266d4:	str	x9, [sp, #24]
  4266d8:	ldr	x9, [x8, x9, lsl #3]
  4266dc:	ldr	x8, [x10]
  4266e0:	stur	x9, [x29, #-40]
  4266e4:	add	x19, x8, x9, lsl #4
  4266e8:	ldr	w21, [x19, #8]!
  4266ec:	and	w8, w21, #0xff
  4266f0:	cmp	w8, #0x4
  4266f4:	b.ne	4266bc <_obstack_memory_used@@Base+0xc528>  // b.any
  4266f8:	tst	w21, #0x3ff00
  4266fc:	b.eq	4267e4 <_obstack_memory_used@@Base+0xc650>  // b.none
  426700:	ldur	x9, [x29, #-48]
  426704:	tbnz	x9, #63, 42673c <_obstack_memory_used@@Base+0xc5a8>
  426708:	ldr	x8, [x28, #88]
  42670c:	cmp	x8, x9
  426710:	b.eq	426ed4 <_obstack_memory_used@@Base+0xcd40>  // b.none
  426714:	ldr	w8, [x28, #144]
  426718:	cmp	w8, #0x2
  42671c:	b.lt	426750 <_obstack_memory_used@@Base+0xc5bc>  // b.tstop
  426720:	ldr	x8, [x28, #16]
  426724:	ldr	w24, [x8, x9, lsl #2]
  426728:	cmn	w24, #0x1
  42672c:	b.ne	42677c <_obstack_memory_used@@Base+0xc5e8>  // b.any
  426730:	sub	x9, x9, #0x1
  426734:	cmn	x9, #0x1
  426738:	b.ne	426724 <_obstack_memory_used@@Base+0xc590>  // b.any
  42673c:	ldr	w8, [x28, #112]
  426740:	tst	w8, #0x1
  426744:	cset	w9, eq  // eq = none
  426748:	tbnz	w21, #10, 4267c4 <_obstack_memory_used@@Base+0xc630>
  42674c:	b	4267c8 <_obstack_memory_used@@Base+0xc634>
  426750:	ldr	x8, [x28, #8]
  426754:	ldrb	w8, [x8, x9]
  426758:	ldr	x9, [x28, #128]
  42675c:	lsr	x10, x8, #3
  426760:	and	x10, x10, #0x18
  426764:	ldr	x9, [x9, x10]
  426768:	lsr	x9, x9, x8
  42676c:	tbz	w9, #0, 4267ac <_obstack_memory_used@@Base+0xc618>
  426770:	mov	w9, wzr
  426774:	mov	w8, #0x1                   	// #1
  426778:	b	4267c8 <_obstack_memory_used@@Base+0xc634>
  42677c:	ldrb	w8, [x28, #142]
  426780:	cbnz	w8, 426ef4 <_obstack_memory_used@@Base+0xcd60>
  426784:	cmp	w24, #0xa
  426788:	b.ne	4267b4 <_obstack_memory_used@@Base+0xc620>  // b.any
  42678c:	ldrb	w8, [x28, #141]
  426790:	cmp	w8, #0x0
  426794:	cset	w8, ne  // ne = any
  426798:	lsl	w8, w8, #1
  42679c:	tst	w8, #0x1
  4267a0:	cset	w9, eq  // eq = none
  4267a4:	tbnz	w21, #10, 4267c4 <_obstack_memory_used@@Base+0xc630>
  4267a8:	b	4267c8 <_obstack_memory_used@@Base+0xc634>
  4267ac:	cmp	w8, #0xa
  4267b0:	b.eq	42678c <_obstack_memory_used@@Base+0xc5f8>  // b.none
  4267b4:	mov	w8, wzr
  4267b8:	tst	w8, #0x1
  4267bc:	cset	w9, eq  // eq = none
  4267c0:	tbz	w21, #10, 4267c8 <_obstack_memory_used@@Base+0xc634>
  4267c4:	tbz	w8, #0, 4266bc <_obstack_memory_used@@Base+0xc528>
  4267c8:	ldr	w10, [x19]
  4267cc:	tbnz	w9, #0, 4267d4 <_obstack_memory_used@@Base+0xc640>
  4267d0:	tbnz	w10, #11, 4266bc <_obstack_memory_used@@Base+0xc528>
  4267d4:	tbnz	w8, #1, 4267dc <_obstack_memory_used@@Base+0xc648>
  4267d8:	tbnz	w10, #13, 4266bc <_obstack_memory_used@@Base+0xc528>
  4267dc:	tbnz	w8, #3, 4267e4 <_obstack_memory_used@@Base+0xc650>
  4267e0:	tbnz	w10, #15, 4266bc <_obstack_memory_used@@Base+0xc528>
  4267e4:	ldr	x19, [x28, #200]
  4267e8:	ldr	x20, [x28, #152]
  4267ec:	ldr	x23, [x28, #8]
  4267f0:	cmp	x19, #0x1
  4267f4:	b.lt	426844 <_obstack_memory_used@@Base+0xc6b0>  // b.tstop
  4267f8:	ldr	x9, [x28, #216]
  4267fc:	ldur	x24, [x29, #-48]
  426800:	mov	x8, xzr
  426804:	mov	x10, x19
  426808:	mov	w13, #0x28                  	// #40
  42680c:	add	x11, x10, x8
  426810:	cmp	x11, #0x0
  426814:	cinc	x11, x11, lt  // lt = tstop
  426818:	asr	x11, x11, #1
  42681c:	madd	x12, x11, x13, x9
  426820:	ldr	x12, [x12, #8]
  426824:	cmp	x12, x24
  426828:	csel	x10, x10, x11, lt  // lt = tstop
  42682c:	csinc	x8, x8, x11, ge  // ge = tcont
  426830:	cmp	x8, x10
  426834:	b.lt	42680c <_obstack_memory_used@@Base+0xc678>  // b.tstop
  426838:	cmp	x8, x19
  42683c:	b.lt	426858 <_obstack_memory_used@@Base+0xc6c4>  // b.tstop
  426840:	b	426894 <_obstack_memory_used@@Base+0xc700>
  426844:	ldur	x24, [x29, #-48]
  426848:	mov	x8, xzr
  42684c:	mov	w13, #0x28                  	// #40
  426850:	cmp	x8, x19
  426854:	b.ge	426894 <_obstack_memory_used@@Base+0xc700>  // b.tcont
  426858:	cmn	x8, #0x1
  42685c:	b.eq	426894 <_obstack_memory_used@@Base+0xc700>  // b.none
  426860:	ldr	x9, [x28, #216]
  426864:	madd	x10, x8, x13, x9
  426868:	ldr	x10, [x10, #8]
  42686c:	cmp	x10, x24
  426870:	b.ne	426894 <_obstack_memory_used@@Base+0xc700>  // b.any
  426874:	madd	x8, x8, x13, x9
  426878:	ldr	x9, [x8]
  42687c:	ldur	x10, [x29, #-40]
  426880:	cmp	x9, x10
  426884:	b.eq	426c3c <_obstack_memory_used@@Base+0xcaa8>  // b.none
  426888:	ldrb	w9, [x8, #32]
  42688c:	add	x8, x8, #0x28
  426890:	cbnz	w9, 426878 <_obstack_memory_used@@Base+0xc6e4>
  426894:	ldr	x8, [x28, #232]
  426898:	cmp	x8, #0x1
  42689c:	mov	x8, x19
  4268a0:	b.lt	426c28 <_obstack_memory_used@@Base+0xca94>  // b.tstop
  4268a4:	ldur	x9, [x29, #-40]
  4268a8:	ldr	x8, [x20]
  4268ac:	mov	x12, xzr
  4268b0:	str	x19, [sp, #40]
  4268b4:	lsl	x9, x9, #4
  4268b8:	ldr	x21, [x8, x9]
  4268bc:	stp	x21, x20, [sp, #8]
  4268c0:	ldr	x9, [x28, #248]
  4268c4:	ldr	x27, [x9, x12, lsl #3]
  4268c8:	ldr	x9, [x27, #8]
  4268cc:	lsl	x9, x9, #4
  4268d0:	ldr	x8, [x8, x9]
  4268d4:	cmp	x8, x21
  4268d8:	b.ne	426a54 <_obstack_memory_used@@Base+0xc8c0>  // b.any
  4268dc:	stp	x12, x27, [sp, #48]
  4268e0:	ldr	x8, [x27, #32]
  4268e4:	ldr	x20, [x27]
  4268e8:	mov	x21, xzr
  4268ec:	mov	x22, x24
  4268f0:	cmp	x8, #0x1
  4268f4:	b.lt	426a0c <_obstack_memory_used@@Base+0xc878>  // b.tstop
  4268f8:	mov	x19, x20
  4268fc:	ldr	x9, [x27, #40]
  426900:	ldr	x26, [x9, x21, lsl #3]
  426904:	ldr	x20, [x26, #8]
  426908:	sub	x25, x20, x19
  42690c:	cmp	x25, #0x1
  426910:	b.lt	426944 <_obstack_memory_used@@Base+0xc7b0>  // b.tstop
  426914:	ldr	x9, [x28, #48]
  426918:	mov	x24, x28
  42691c:	add	x28, x25, x22
  426920:	cmp	x28, x9
  426924:	b.gt	426988 <_obstack_memory_used@@Base+0xc7f4>
  426928:	mov	x28, x24
  42692c:	add	x0, x23, x22
  426930:	add	x1, x23, x19
  426934:	mov	x2, x25
  426938:	bl	402490 <bcmp@plt>
  42693c:	ldur	x24, [x29, #-48]
  426940:	cbnz	w0, 426a04 <_obstack_memory_used@@Base+0xc870>
  426944:	ldur	x3, [x29, #-40]
  426948:	mov	x0, x28
  42694c:	mov	x1, x27
  426950:	mov	x2, x26
  426954:	mov	x4, x24
  426958:	bl	42755c <_obstack_memory_used@@Base+0xd3c8>
  42695c:	cmp	w0, #0x1
  426960:	b.hi	426f4c <_obstack_memory_used@@Base+0xcdb8>  // b.pmore
  426964:	ldr	x8, [x27, #32]
  426968:	ldr	x23, [x28, #8]
  42696c:	add	x21, x21, #0x1
  426970:	add	x22, x25, x22
  426974:	cmp	x21, x8
  426978:	mov	x19, x20
  42697c:	mov	x9, x27
  426980:	b.lt	4268fc <_obstack_memory_used@@Base+0xc768>  // b.tstop
  426984:	b	426a0c <_obstack_memory_used@@Base+0xc878>
  426988:	ldr	x10, [x24, #88]
  42698c:	mov	x11, x24
  426990:	cmp	x28, x10
  426994:	b.gt	426a24 <_obstack_memory_used@@Base+0xc890>
  426998:	ldr	x8, [x11, #64]
  42699c:	ldr	x23, [x11, #192]
  4269a0:	cmp	x8, x28
  4269a4:	b.gt	4269b0 <_obstack_memory_used@@Base+0xc81c>
  4269a8:	cmp	x8, x10
  4269ac:	b.lt	4269c0 <_obstack_memory_used@@Base+0xc82c>  // b.tstop
  4269b0:	cmp	x9, x28
  4269b4:	b.gt	4269d0 <_obstack_memory_used@@Base+0xc83c>
  4269b8:	cmp	x9, x10
  4269bc:	b.ge	4269d0 <_obstack_memory_used@@Base+0xc83c>  // b.tcont
  4269c0:	add	w1, w28, #0x1
  4269c4:	mov	x0, x24
  4269c8:	bl	426f70 <_obstack_memory_used@@Base+0xcddc>
  4269cc:	cbnz	w0, 426f4c <_obstack_memory_used@@Base+0xcdb8>
  4269d0:	subs	x8, x28, x23
  4269d4:	b.le	4269f8 <_obstack_memory_used@@Base+0xc864>
  4269d8:	ldr	x9, [x24, #184]
  4269dc:	lsl	x2, x8, #3
  4269e0:	mov	w1, wzr
  4269e4:	mov	x27, x24
  4269e8:	add	x9, x9, x23, lsl #3
  4269ec:	add	x0, x9, #0x8
  4269f0:	bl	402470 <memset@plt>
  4269f4:	str	x28, [x24, #192]
  4269f8:	ldr	x23, [x24, #8]
  4269fc:	ldr	x27, [sp, #56]
  426a00:	b	426928 <_obstack_memory_used@@Base+0xc794>
  426a04:	ldr	x8, [x27, #32]
  426a08:	mov	x20, x19
  426a0c:	ldr	x19, [sp, #40]
  426a10:	cmp	x21, x8
  426a14:	b.ge	426a3c <_obstack_memory_used@@Base+0xc8a8>  // b.tcont
  426a18:	ldp	x21, x20, [sp, #8]
  426a1c:	ldr	x12, [sp, #48]
  426a20:	b	426a54 <_obstack_memory_used@@Base+0xc8c0>
  426a24:	ldur	x24, [x29, #-48]
  426a28:	mov	x20, x19
  426a2c:	mov	x28, x11
  426a30:	ldr	x19, [sp, #40]
  426a34:	cmp	x21, x8
  426a38:	b.lt	426a18 <_obstack_memory_used@@Base+0xc884>  // b.tstop
  426a3c:	ldr	x12, [sp, #48]
  426a40:	cmp	x21, #0x0
  426a44:	cinc	x25, x20, ne  // ne = any
  426a48:	cmp	x25, x24
  426a4c:	b.le	426a6c <_obstack_memory_used@@Base+0xc8d8>
  426a50:	ldp	x21, x20, [sp, #8]
  426a54:	ldr	x8, [x28, #232]
  426a58:	add	x12, x12, #0x1
  426a5c:	cmp	x12, x8
  426a60:	b.ge	426c24 <_obstack_memory_used@@Base+0xca90>  // b.tcont
  426a64:	ldr	x8, [x20]
  426a68:	b	4268c0 <_obstack_memory_used@@Base+0xc72c>
  426a6c:	ldp	x21, x20, [sp, #8]
  426a70:	b	426a8c <_obstack_memory_used@@Base+0xc8f8>
  426a74:	ldr	x23, [x28, #8]
  426a78:	ldr	x12, [sp, #48]
  426a7c:	ldr	x27, [sp, #56]
  426a80:	cmp	x25, x24
  426a84:	add	x25, x25, #0x1
  426a88:	b.ge	426a54 <_obstack_memory_used@@Base+0xc8c0>  // b.tcont
  426a8c:	ldr	x8, [x27]
  426a90:	cmp	x25, x8
  426a94:	b.le	426abc <_obstack_memory_used@@Base+0xc928>
  426a98:	ldr	x8, [x28, #48]
  426a9c:	cmp	x22, x8
  426aa0:	b.ge	426bc4 <_obstack_memory_used@@Base+0xca30>  // b.tcont
  426aa4:	add	x9, x25, x23
  426aa8:	ldrb	w8, [x23, x22]
  426aac:	ldurb	w9, [x9, #-1]
  426ab0:	cmp	w8, w9
  426ab4:	b.ne	426a54 <_obstack_memory_used@@Base+0xc8c0>  // b.any
  426ab8:	add	x22, x22, #0x1
  426abc:	ldr	x8, [x28, #184]
  426ac0:	ldr	x9, [x8, x25, lsl #3]
  426ac4:	cbz	x9, 426a7c <_obstack_memory_used@@Base+0xc8e8>
  426ac8:	ldr	x8, [x9, #16]
  426acc:	cmp	x8, #0x1
  426ad0:	b.lt	426a7c <_obstack_memory_used@@Base+0xc8e8>  // b.tstop
  426ad4:	ldr	x9, [x9, #24]
  426ad8:	ldr	x10, [x20]
  426adc:	b	426aec <_obstack_memory_used@@Base+0xc958>
  426ae0:	subs	x8, x8, #0x1
  426ae4:	add	x9, x9, #0x8
  426ae8:	b.eq	426a7c <_obstack_memory_used@@Base+0xc8e8>  // b.none
  426aec:	ldr	x26, [x9]
  426af0:	add	x11, x10, x26, lsl #4
  426af4:	ldrb	w11, [x11, #8]
  426af8:	cmp	w11, #0x9
  426afc:	b.ne	426ae0 <_obstack_memory_used@@Base+0xc94c>  // b.any
  426b00:	lsl	x11, x26, #4
  426b04:	ldr	x11, [x10, x11]
  426b08:	cmp	x11, x21
  426b0c:	b.ne	426ae0 <_obstack_memory_used@@Base+0xc94c>  // b.any
  426b10:	cmn	x26, #0x1
  426b14:	b.eq	426a7c <_obstack_memory_used@@Base+0xc8e8>  // b.none
  426b18:	ldr	x1, [x27, #16]
  426b1c:	cbnz	x1, 426b40 <_obstack_memory_used@@Base+0xc9ac>
  426b20:	ldr	x8, [x27]
  426b24:	mov	w0, #0x18                  	// #24
  426b28:	sub	x8, x25, x8
  426b2c:	add	x1, x8, #0x1
  426b30:	bl	402480 <calloc@plt>
  426b34:	mov	x1, x0
  426b38:	str	x0, [x27, #16]
  426b3c:	cbz	x0, 426f40 <_obstack_memory_used@@Base+0xcdac>
  426b40:	ldp	x3, x2, [x27]
  426b44:	mov	w6, #0x9                   	// #9
  426b48:	mov	x0, x28
  426b4c:	mov	x4, x26
  426b50:	mov	x5, x25
  426b54:	bl	427728 <_obstack_memory_used@@Base+0xd594>
  426b58:	ldr	x12, [sp, #48]
  426b5c:	cmp	w0, #0x1
  426b60:	b.eq	426a7c <_obstack_memory_used@@Base+0xc8e8>  // b.none
  426b64:	mov	w27, w0
  426b68:	cbnz	w0, 426f50 <_obstack_memory_used@@Base+0xcdbc>
  426b6c:	ldr	x23, [sp, #56]
  426b70:	ldp	x9, x8, [x23, #24]
  426b74:	cmp	x8, x9
  426b78:	b.eq	426bec <_obstack_memory_used@@Base+0xca58>  // b.none
  426b7c:	mov	w0, #0x1                   	// #1
  426b80:	mov	w1, #0x28                  	// #40
  426b84:	bl	402480 <calloc@plt>
  426b88:	cbz	x0, 426f40 <_obstack_memory_used@@Base+0xcdac>
  426b8c:	ldp	x9, x8, [x23, #32]
  426b90:	ldur	x3, [x29, #-40]
  426b94:	mov	x2, x0
  426b98:	mov	x1, x23
  426b9c:	str	x0, [x8, x9, lsl #3]
  426ba0:	stp	x26, x25, [x0]
  426ba4:	add	x8, x9, #0x1
  426ba8:	mov	x0, x28
  426bac:	mov	x4, x24
  426bb0:	str	x8, [x23, #32]
  426bb4:	bl	42755c <_obstack_memory_used@@Base+0xd3c8>
  426bb8:	cmp	w0, #0x1
  426bbc:	b.ls	426a74 <_obstack_memory_used@@Base+0xc8e0>  // b.plast
  426bc0:	b	426f4c <_obstack_memory_used@@Base+0xcdb8>
  426bc4:	ldr	x8, [x28, #88]
  426bc8:	cmp	x22, x8
  426bcc:	b.ge	426a54 <_obstack_memory_used@@Base+0xc8c0>  // b.tcont
  426bd0:	add	w1, w22, #0x1
  426bd4:	mov	x0, x28
  426bd8:	bl	426f70 <_obstack_memory_used@@Base+0xcddc>
  426bdc:	cbnz	w0, 426f4c <_obstack_memory_used@@Base+0xcdb8>
  426be0:	ldr	x23, [x28, #8]
  426be4:	ldp	x12, x27, [sp, #48]
  426be8:	b	426aa4 <_obstack_memory_used@@Base+0xc910>
  426bec:	ldr	x0, [x23, #40]
  426bf0:	mov	w19, #0x1                   	// #1
  426bf4:	bfi	x19, x8, #1, #63
  426bf8:	lsl	x1, x19, #3
  426bfc:	bl	4024c0 <realloc@plt>
  426c00:	cbz	x0, 426f40 <_obstack_memory_used@@Base+0xcdac>
  426c04:	str	x19, [x23, #24]
  426c08:	ldr	x19, [sp, #40]
  426c0c:	str	x0, [x23, #40]
  426c10:	mov	w0, #0x1                   	// #1
  426c14:	mov	w1, #0x28                  	// #40
  426c18:	bl	402480 <calloc@plt>
  426c1c:	cbnz	x0, 426b8c <_obstack_memory_used@@Base+0xc9f8>
  426c20:	b	426f40 <_obstack_memory_used@@Base+0xcdac>
  426c24:	ldr	x8, [x28, #200]
  426c28:	ldr	x23, [sp]
  426c2c:	cmp	x19, x8
  426c30:	stur	wzr, [x29, #-4]
  426c34:	b.lt	426c64 <_obstack_memory_used@@Base+0xcad0>  // b.tstop
  426c38:	b	4266bc <_obstack_memory_used@@Base+0xc528>
  426c3c:	mov	x8, x19
  426c40:	ldr	x23, [sp]
  426c44:	cmp	x19, x8
  426c48:	stur	wzr, [x29, #-4]
  426c4c:	b.lt	426c64 <_obstack_memory_used@@Base+0xcad0>  // b.tstop
  426c50:	b	4266bc <_obstack_memory_used@@Base+0xc528>
  426c54:	ldr	x8, [x28, #200]
  426c58:	add	x19, x19, #0x1
  426c5c:	cmp	x19, x8
  426c60:	b.ge	4266bc <_obstack_memory_used@@Base+0xc528>  // b.tcont
  426c64:	ldr	x8, [x28, #216]
  426c68:	mov	w11, #0x28                  	// #40
  426c6c:	mul	x9, x19, x11
  426c70:	ldur	x10, [x29, #-40]
  426c74:	ldr	x9, [x8, x9]
  426c78:	cmp	x9, x10
  426c7c:	b.ne	426c54 <_obstack_memory_used@@Base+0xcac0>  // b.any
  426c80:	madd	x9, x19, x11, x8
  426c84:	ldr	x9, [x9, #8]
  426c88:	ldur	x10, [x29, #-48]
  426c8c:	cmp	x9, x10
  426c90:	b.ne	426c54 <_obstack_memory_used@@Base+0xcac0>  // b.any
  426c94:	ldr	x27, [sp, #32]
  426c98:	str	x19, [sp, #40]
  426c9c:	madd	x8, x19, x11, x8
  426ca0:	ldp	x22, x19, [x8, #16]
  426ca4:	ldr	x21, [x27, #48]
  426ca8:	cmp	x19, x22
  426cac:	b.ne	426cc8 <_obstack_memory_used@@Base+0xcb34>  // b.any
  426cb0:	ldr	x8, [x27, #40]
  426cb4:	ldur	x10, [x29, #-40]
  426cb8:	mov	w9, #0x18                  	// #24
  426cbc:	madd	x8, x10, x9, x8
  426cc0:	ldr	x8, [x8, #16]
  426cc4:	b	426cd4 <_obstack_memory_used@@Base+0xcb40>
  426cc8:	ldr	x8, [x27, #24]
  426ccc:	ldur	x9, [x29, #-40]
  426cd0:	add	x8, x8, x9, lsl #3
  426cd4:	ldur	x9, [x29, #-48]
  426cd8:	ldr	x26, [x8]
  426cdc:	add	x8, x19, x9
  426ce0:	sub	x23, x8, x22
  426ce4:	cmp	x23, #0x0
  426ce8:	b.le	426d24 <_obstack_memory_used@@Base+0xcb90>
  426cec:	ldr	x9, [x28, #88]
  426cf0:	sub	x8, x23, #0x1
  426cf4:	cmp	x9, x8
  426cf8:	b.eq	426ea4 <_obstack_memory_used@@Base+0xcd10>  // b.none
  426cfc:	ldr	w9, [x28, #144]
  426d00:	cmp	w9, #0x2
  426d04:	b.lt	426d2c <_obstack_memory_used@@Base+0xcb98>  // b.tstop
  426d08:	ldr	x9, [x28, #16]
  426d0c:	ldr	w24, [x9, x8, lsl #2]
  426d10:	cmn	w24, #0x1
  426d14:	b.ne	426d54 <_obstack_memory_used@@Base+0xcbc0>  // b.any
  426d18:	sub	x8, x8, #0x1
  426d1c:	cmn	x8, #0x1
  426d20:	b.ne	426d0c <_obstack_memory_used@@Base+0xcb78>  // b.any
  426d24:	ldr	w25, [x28, #112]
  426d28:	b	426d84 <_obstack_memory_used@@Base+0xcbf0>
  426d2c:	ldr	x9, [x28, #8]
  426d30:	ldrb	w8, [x9, x8]
  426d34:	ldr	x9, [x28, #128]
  426d38:	lsr	x10, x8, #3
  426d3c:	and	x10, x10, #0x18
  426d40:	ldr	x9, [x9, x10]
  426d44:	lsr	x9, x9, x8
  426d48:	tbz	w9, #0, 426d78 <_obstack_memory_used@@Base+0xcbe4>
  426d4c:	mov	w25, #0x1                   	// #1
  426d50:	b	426d84 <_obstack_memory_used@@Base+0xcbf0>
  426d54:	ldrb	w8, [x28, #142]
  426d58:	cbnz	w8, 426eb8 <_obstack_memory_used@@Base+0xcd24>
  426d5c:	cmp	w24, #0xa
  426d60:	b.ne	426d80 <_obstack_memory_used@@Base+0xcbec>  // b.any
  426d64:	ldrb	w8, [x28, #141]
  426d68:	cmp	w8, #0x0
  426d6c:	cset	w8, ne  // ne = any
  426d70:	lsl	w25, w8, #1
  426d74:	b	426d84 <_obstack_memory_used@@Base+0xcbf0>
  426d78:	cmp	w8, #0xa
  426d7c:	b.eq	426d64 <_obstack_memory_used@@Base+0xcbd0>  // b.none
  426d80:	mov	w25, wzr
  426d84:	ldr	x8, [x28, #184]
  426d88:	ldur	x9, [x29, #-48]
  426d8c:	mov	w10, #0x18                  	// #24
  426d90:	madd	x24, x26, x10, x21
  426d94:	ldr	x9, [x8, x9, lsl #3]
  426d98:	ldr	x8, [x8, x23, lsl #3]
  426d9c:	cbz	x9, 426e00 <_obstack_memory_used@@Base+0xcc6c>
  426da0:	ldr	x20, [x9, #16]
  426da4:	cbz	x8, 426e08 <_obstack_memory_used@@Base+0xcc74>
  426da8:	ldr	x1, [x8, #80]
  426dac:	sub	x0, x29, #0x20
  426db0:	mov	x2, x24
  426db4:	bl	42736c <_obstack_memory_used@@Base+0xd1d8>
  426db8:	stur	w0, [x29, #-4]
  426dbc:	cbnz	w0, 426f58 <_obstack_memory_used@@Base+0xcdc4>
  426dc0:	ldr	x1, [sp, #32]
  426dc4:	sub	x0, x29, #0x4
  426dc8:	sub	x2, x29, #0x20
  426dcc:	mov	w3, w25
  426dd0:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  426dd4:	ldr	x8, [x28, #184]
  426dd8:	lsl	x21, x23, #3
  426ddc:	str	x0, [x8, x21]
  426de0:	ldur	x0, [x29, #-16]
  426de4:	bl	402620 <free@plt>
  426de8:	ldr	x8, [x28, #184]
  426dec:	ldr	x9, [x8, x21]
  426df0:	cbnz	x9, 426e50 <_obstack_memory_used@@Base+0xccbc>
  426df4:	ldur	w27, [x29, #-4]
  426df8:	cbz	w27, 426e50 <_obstack_memory_used@@Base+0xccbc>
  426dfc:	b	426f1c <_obstack_memory_used@@Base+0xcd88>
  426e00:	mov	x20, xzr
  426e04:	cbnz	x8, 426da8 <_obstack_memory_used@@Base+0xcc14>
  426e08:	sub	x0, x29, #0x4
  426e0c:	mov	x1, x27
  426e10:	mov	x2, x24
  426e14:	mov	w3, w25
  426e18:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  426e1c:	ldr	x8, [x28, #184]
  426e20:	lsl	x9, x23, #3
  426e24:	str	x0, [x8, x9]
  426e28:	ldr	x8, [x28, #184]
  426e2c:	ldr	x9, [x8, x9]
  426e30:	cbnz	x9, 426e50 <_obstack_memory_used@@Base+0xccbc>
  426e34:	ldur	w27, [x29, #-4]
  426e38:	ldr	x23, [sp]
  426e3c:	cbnz	w27, 426f1c <_obstack_memory_used@@Base+0xcd88>
  426e40:	cmp	x19, x22
  426e44:	ldr	x19, [sp, #40]
  426e48:	b.ne	426c54 <_obstack_memory_used@@Base+0xcac0>  // b.any
  426e4c:	b	426e60 <_obstack_memory_used@@Base+0xcccc>
  426e50:	ldr	x23, [sp]
  426e54:	cmp	x19, x22
  426e58:	ldr	x19, [sp, #40]
  426e5c:	b.ne	426c54 <_obstack_memory_used@@Base+0xcac0>  // b.any
  426e60:	ldur	x9, [x29, #-48]
  426e64:	ldr	x8, [x8, x9, lsl #3]
  426e68:	ldr	x8, [x8, #16]
  426e6c:	cmp	x8, x20
  426e70:	b.le	426c54 <_obstack_memory_used@@Base+0xcac0>
  426e74:	ldur	x2, [x29, #-48]
  426e78:	mov	x0, x28
  426e7c:	mov	x1, x24
  426e80:	bl	42655c <_obstack_memory_used@@Base+0xc3c8>
  426e84:	stur	w0, [x29, #-4]
  426e88:	cbnz	w0, 426f68 <_obstack_memory_used@@Base+0xcdd4>
  426e8c:	mov	x0, x28
  426e90:	mov	x1, x24
  426e94:	bl	42666c <_obstack_memory_used@@Base+0xc4d8>
  426e98:	stur	w0, [x29, #-4]
  426e9c:	cbz	w0, 426c54 <_obstack_memory_used@@Base+0xcac0>
  426ea0:	b	426f68 <_obstack_memory_used@@Base+0xcdd4>
  426ea4:	ldr	w8, [x28, #160]
  426ea8:	mov	w9, #0xa                   	// #10
  426eac:	and	w8, w8, #0x2
  426eb0:	eor	w25, w8, w9
  426eb4:	b	426d84 <_obstack_memory_used@@Base+0xcbf0>
  426eb8:	mov	w0, w24
  426ebc:	bl	402710 <iswalnum@plt>
  426ec0:	cmp	w24, #0x5f
  426ec4:	mov	w25, #0x1                   	// #1
  426ec8:	b.eq	426d84 <_obstack_memory_used@@Base+0xcbf0>  // b.none
  426ecc:	cbz	w0, 426d5c <_obstack_memory_used@@Base+0xcbc8>
  426ed0:	b	426d84 <_obstack_memory_used@@Base+0xcbf0>
  426ed4:	ldr	w8, [x28, #160]
  426ed8:	mov	w9, #0xa                   	// #10
  426edc:	and	w8, w8, #0x2
  426ee0:	eor	w8, w8, w9
  426ee4:	tst	w8, #0x1
  426ee8:	cset	w9, eq  // eq = none
  426eec:	tbnz	w21, #10, 4267c4 <_obstack_memory_used@@Base+0xc630>
  426ef0:	b	4267c8 <_obstack_memory_used@@Base+0xc634>
  426ef4:	mov	w0, w24
  426ef8:	bl	402710 <iswalnum@plt>
  426efc:	mov	w9, wzr
  426f00:	cmp	w24, #0x5f
  426f04:	mov	w8, #0x1                   	// #1
  426f08:	b.eq	4267c8 <_obstack_memory_used@@Base+0xc634>  // b.none
  426f0c:	cbz	w0, 426784 <_obstack_memory_used@@Base+0xc5f0>
  426f10:	b	4267c8 <_obstack_memory_used@@Base+0xc634>
  426f14:	mov	w27, wzr
  426f18:	stur	wzr, [x29, #-4]
  426f1c:	mov	w0, w27
  426f20:	ldp	x20, x19, [sp, #192]
  426f24:	ldp	x22, x21, [sp, #176]
  426f28:	ldp	x24, x23, [sp, #160]
  426f2c:	ldp	x26, x25, [sp, #144]
  426f30:	ldp	x28, x27, [sp, #128]
  426f34:	ldp	x29, x30, [sp, #112]
  426f38:	add	sp, sp, #0xd0
  426f3c:	ret
  426f40:	mov	w27, #0xc                   	// #12
  426f44:	stur	w27, [x29, #-4]
  426f48:	b	426f1c <_obstack_memory_used@@Base+0xcd88>
  426f4c:	mov	w27, w0
  426f50:	stur	w27, [x29, #-4]
  426f54:	b	426f1c <_obstack_memory_used@@Base+0xcd88>
  426f58:	mov	w27, w0
  426f5c:	ldur	x0, [x29, #-16]
  426f60:	bl	402620 <free@plt>
  426f64:	b	426f1c <_obstack_memory_used@@Base+0xcd88>
  426f68:	mov	w27, w0
  426f6c:	b	426f1c <_obstack_memory_used@@Base+0xcd88>
  426f70:	stp	x29, x30, [sp, #-48]!
  426f74:	stp	x20, x19, [sp, #32]
  426f78:	ldr	x8, [x0, #64]
  426f7c:	mov	x9, #0xffffffffffffffe     	// #1152921504606846974
  426f80:	str	x21, [sp, #16]
  426f84:	mov	x29, sp
  426f88:	cmp	x8, x9
  426f8c:	b.hi	427154 <_obstack_memory_used@@Base+0xcfc0>  // b.pmore
  426f90:	ldr	x9, [x0, #88]
  426f94:	lsl	x8, x8, #1
  426f98:	ldr	w11, [x0, #144]
  426f9c:	sxtw	x10, w1
  426fa0:	cmp	x9, x8
  426fa4:	csel	x8, x9, x8, lt  // lt = tstop
  426fa8:	cmp	x8, x10
  426fac:	mov	x19, x0
  426fb0:	csel	x20, x8, x10, gt
  426fb4:	cmp	w11, #0x2
  426fb8:	b.lt	426ff4 <_obstack_memory_used@@Base+0xce60>  // b.tstop
  426fbc:	lsr	x8, x20, #61
  426fc0:	cbnz	x8, 427154 <_obstack_memory_used@@Base+0xcfc0>
  426fc4:	ldr	x0, [x19, #16]
  426fc8:	lsl	x1, x20, #2
  426fcc:	bl	4024c0 <realloc@plt>
  426fd0:	cbz	x0, 427154 <_obstack_memory_used@@Base+0xcfc0>
  426fd4:	mov	x8, x0
  426fd8:	ldr	x0, [x19, #24]
  426fdc:	str	x8, [x19, #16]
  426fe0:	cbz	x0, 426ff4 <_obstack_memory_used@@Base+0xce60>
  426fe4:	lsl	x1, x20, #3
  426fe8:	bl	4024c0 <realloc@plt>
  426fec:	cbz	x0, 427154 <_obstack_memory_used@@Base+0xcfc0>
  426ff0:	str	x0, [x19, #24]
  426ff4:	ldrb	w8, [x19, #139]
  426ff8:	cbz	w8, 427010 <_obstack_memory_used@@Base+0xce7c>
  426ffc:	ldr	x0, [x19, #8]
  427000:	mov	x1, x20
  427004:	bl	4024c0 <realloc@plt>
  427008:	cbz	x0, 427154 <_obstack_memory_used@@Base+0xcfc0>
  42700c:	str	x0, [x19, #8]
  427010:	ldr	x0, [x19, #184]
  427014:	str	x20, [x19, #64]
  427018:	cbz	x0, 427030 <_obstack_memory_used@@Base+0xce9c>
  42701c:	lsl	x8, x20, #3
  427020:	add	x1, x8, #0x8
  427024:	bl	4024c0 <realloc@plt>
  427028:	cbz	x0, 427154 <_obstack_memory_used@@Base+0xcfc0>
  42702c:	str	x0, [x19, #184]
  427030:	ldr	w8, [x19, #144]
  427034:	ldrb	w9, [x19, #136]
  427038:	cmp	w8, #0x2
  42703c:	cbz	w9, 427054 <_obstack_memory_used@@Base+0xcec0>
  427040:	b.lt	427064 <_obstack_memory_used@@Base+0xced0>  // b.tstop
  427044:	mov	x0, x19
  427048:	bl	41edf8 <_obstack_memory_used@@Base+0x4c64>
  42704c:	cbz	w0, 427140 <_obstack_memory_used@@Base+0xcfac>
  427050:	b	427144 <_obstack_memory_used@@Base+0xcfb0>
  427054:	b.lt	4270cc <_obstack_memory_used@@Base+0xcf38>  // b.tstop
  427058:	mov	x0, x19
  42705c:	bl	41f4a8 <_obstack_memory_used@@Base+0x5314>
  427060:	b	427140 <_obstack_memory_used@@Base+0xcfac>
  427064:	ldr	x8, [x19, #64]
  427068:	ldr	x9, [x19, #88]
  42706c:	ldr	x20, [x19, #48]
  427070:	cmp	x8, x9
  427074:	csel	x21, x9, x8, gt
  427078:	cmp	x20, x21
  42707c:	b.ge	4270c4 <_obstack_memory_used@@Base+0xcf30>  // b.tcont
  427080:	bl	4024d0 <__ctype_toupper_loc@plt>
  427084:	ldr	x8, [x19]
  427088:	ldr	x9, [x19, #40]
  42708c:	add	x8, x8, x9
  427090:	ldr	x9, [x19, #120]
  427094:	ldrb	w8, [x8, x20]
  427098:	cbnz	x9, 4270bc <_obstack_memory_used@@Base+0xcf28>
  42709c:	ldr	x9, [x0]
  4270a0:	ldr	x10, [x19, #8]
  4270a4:	ldr	w8, [x9, w8, uxtw #2]
  4270a8:	strb	w8, [x10, x20]
  4270ac:	add	x20, x20, #0x1
  4270b0:	cmp	x20, x21
  4270b4:	b.lt	427084 <_obstack_memory_used@@Base+0xcef0>  // b.tstop
  4270b8:	b	4270c4 <_obstack_memory_used@@Base+0xcf30>
  4270bc:	ldrb	w8, [x9, x8]
  4270c0:	b	42709c <_obstack_memory_used@@Base+0xcf08>
  4270c4:	stp	x20, x20, [x19, #48]
  4270c8:	b	427140 <_obstack_memory_used@@Base+0xcfac>
  4270cc:	ldr	x10, [x19, #120]
  4270d0:	cbz	x10, 427140 <_obstack_memory_used@@Base+0xcfac>
  4270d4:	ldr	x9, [x19, #64]
  4270d8:	ldr	x11, [x19, #88]
  4270dc:	ldr	x8, [x19, #48]
  4270e0:	cmp	x9, x11
  4270e4:	csel	x9, x11, x9, gt
  4270e8:	cmp	x8, x9
  4270ec:	b.ge	42713c <_obstack_memory_used@@Base+0xcfa8>  // b.tcont
  4270f0:	ldr	x11, [x19, #40]
  4270f4:	ldp	x12, x13, [x19]
  4270f8:	add	x11, x11, x8
  4270fc:	ldrb	w11, [x12, x11]
  427100:	ldrb	w10, [x10, x11]
  427104:	strb	w10, [x13, x8]
  427108:	add	x8, x8, #0x1
  42710c:	cmp	x8, x9
  427110:	b.ge	42713c <_obstack_memory_used@@Base+0xcfa8>  // b.tcont
  427114:	ldr	x10, [x19, #40]
  427118:	ldp	x11, x13, [x19]
  42711c:	ldr	x12, [x19, #120]
  427120:	add	x10, x11, x10
  427124:	ldrb	w10, [x10, x8]
  427128:	ldrb	w10, [x12, x10]
  42712c:	strb	w10, [x13, x8]
  427130:	add	x8, x8, #0x1
  427134:	cmp	x8, x9
  427138:	b.lt	427114 <_obstack_memory_used@@Base+0xcf80>  // b.tstop
  42713c:	stp	x8, x8, [x19, #48]
  427140:	mov	w0, wzr
  427144:	ldp	x20, x19, [sp, #32]
  427148:	ldr	x21, [sp, #16]
  42714c:	ldp	x29, x30, [sp], #48
  427150:	ret
  427154:	mov	w0, #0xc                   	// #12
  427158:	ldp	x20, x19, [sp, #32]
  42715c:	ldr	x21, [sp, #16]
  427160:	ldp	x29, x30, [sp], #48
  427164:	ret
  427168:	sub	sp, sp, #0x60
  42716c:	stp	x29, x30, [sp, #32]
  427170:	stp	x24, x23, [sp, #48]
  427174:	stp	x22, x21, [sp, #64]
  427178:	stp	x20, x19, [sp, #80]
  42717c:	ldr	x20, [x1, #72]
  427180:	ldp	x8, x9, [x1, #184]
  427184:	ldr	x22, [x1, #152]
  427188:	mov	x24, x2
  42718c:	mov	x19, x1
  427190:	cmp	x20, x9
  427194:	mov	x21, x0
  427198:	add	x29, sp, #0x20
  42719c:	b.le	4271ac <_obstack_memory_used@@Base+0xd018>
  4271a0:	str	x24, [x8, x20, lsl #3]
  4271a4:	str	x20, [x19, #192]
  4271a8:	b	4272cc <_obstack_memory_used@@Base+0xd138>
  4271ac:	ldr	x9, [x8, x20, lsl #3]
  4271b0:	cbz	x9, 4271e4 <_obstack_memory_used@@Base+0xd050>
  4271b4:	ldr	x2, [x9, #80]
  4271b8:	cbz	x24, 4271ec <_obstack_memory_used@@Base+0xd058>
  4271bc:	ldr	x23, [x24, #80]
  4271c0:	mov	x0, sp
  4271c4:	mov	x1, x23
  4271c8:	bl	42736c <_obstack_memory_used@@Base+0xd1d8>
  4271cc:	str	w0, [x21]
  4271d0:	cbnz	w0, 427334 <_obstack_memory_used@@Base+0xd1a0>
  4271d4:	ldr	x8, [x19, #72]
  4271d8:	cmp	x8, #0x0
  4271dc:	b.gt	42720c <_obstack_memory_used@@Base+0xd078>
  4271e0:	b	427244 <_obstack_memory_used@@Base+0xd0b0>
  4271e4:	str	x24, [x8, x20, lsl #3]
  4271e8:	b	4272cc <_obstack_memory_used@@Base+0xd138>
  4271ec:	ldr	x8, [x2, #16]
  4271f0:	ldr	q0, [x2]
  4271f4:	mov	x23, xzr
  4271f8:	str	x8, [sp, #16]
  4271fc:	mov	x8, x20
  427200:	str	q0, [sp]
  427204:	cmp	x8, #0x0
  427208:	b.le	427244 <_obstack_memory_used@@Base+0xd0b0>
  42720c:	ldr	x9, [x19, #88]
  427210:	sub	x8, x8, #0x1
  427214:	cmp	x9, x8
  427218:	b.eq	42733c <_obstack_memory_used@@Base+0xd1a8>  // b.none
  42721c:	ldr	w9, [x19, #144]
  427220:	cmp	w9, #0x2
  427224:	b.lt	42724c <_obstack_memory_used@@Base+0xd0b8>  // b.tstop
  427228:	ldr	x9, [x19, #16]
  42722c:	ldr	w24, [x9, x8, lsl #2]
  427230:	cmn	w24, #0x1
  427234:	b.ne	427274 <_obstack_memory_used@@Base+0xd0e0>  // b.any
  427238:	sub	x8, x8, #0x1
  42723c:	cmn	x8, #0x1
  427240:	b.ne	42722c <_obstack_memory_used@@Base+0xd098>  // b.any
  427244:	ldr	w3, [x19, #112]
  427248:	b	4272a4 <_obstack_memory_used@@Base+0xd110>
  42724c:	ldr	x9, [x19, #8]
  427250:	ldrb	w8, [x9, x8]
  427254:	ldr	x9, [x19, #128]
  427258:	lsr	x10, x8, #3
  42725c:	and	x10, x10, #0x18
  427260:	ldr	x9, [x9, x10]
  427264:	lsr	x9, x9, x8
  427268:	tbz	w9, #0, 427298 <_obstack_memory_used@@Base+0xd104>
  42726c:	mov	w3, #0x1                   	// #1
  427270:	b	4272a4 <_obstack_memory_used@@Base+0xd110>
  427274:	ldrb	w8, [x19, #142]
  427278:	cbnz	w8, 427350 <_obstack_memory_used@@Base+0xd1bc>
  42727c:	cmp	w24, #0xa
  427280:	b.ne	4272a0 <_obstack_memory_used@@Base+0xd10c>  // b.any
  427284:	ldrb	w8, [x19, #141]
  427288:	cmp	w8, #0x0
  42728c:	cset	w8, ne  // ne = any
  427290:	lsl	w3, w8, #1
  427294:	b	4272a4 <_obstack_memory_used@@Base+0xd110>
  427298:	cmp	w8, #0xa
  42729c:	b.eq	427284 <_obstack_memory_used@@Base+0xd0f0>  // b.none
  4272a0:	mov	w3, wzr
  4272a4:	mov	x2, sp
  4272a8:	mov	x0, x21
  4272ac:	mov	x1, x22
  4272b0:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  4272b4:	ldr	x8, [x19, #184]
  4272b8:	mov	x24, x0
  4272bc:	str	x0, [x8, x20, lsl #3]
  4272c0:	cbz	x23, 4272cc <_obstack_memory_used@@Base+0xd138>
  4272c4:	ldr	x0, [sp, #16]
  4272c8:	bl	402620 <free@plt>
  4272cc:	cbz	x24, 427318 <_obstack_memory_used@@Base+0xd184>
  4272d0:	ldr	x8, [x22, #152]
  4272d4:	cbz	x8, 427318 <_obstack_memory_used@@Base+0xd184>
  4272d8:	add	x22, x24, #0x8
  4272dc:	mov	x0, x19
  4272e0:	mov	x1, x22
  4272e4:	mov	x2, x20
  4272e8:	bl	42655c <_obstack_memory_used@@Base+0xc3c8>
  4272ec:	str	w0, [x21]
  4272f0:	cbnz	w0, 427334 <_obstack_memory_used@@Base+0xd1a0>
  4272f4:	ldrb	w8, [x24, #104]
  4272f8:	tbz	w8, #6, 427318 <_obstack_memory_used@@Base+0xd184>
  4272fc:	mov	x0, x19
  427300:	mov	x1, x22
  427304:	bl	42666c <_obstack_memory_used@@Base+0xc4d8>
  427308:	str	w0, [x21]
  42730c:	cbnz	w0, 427334 <_obstack_memory_used@@Base+0xd1a0>
  427310:	ldr	x8, [x19, #184]
  427314:	ldr	x24, [x8, x20, lsl #3]
  427318:	mov	x0, x24
  42731c:	ldp	x20, x19, [sp, #80]
  427320:	ldp	x22, x21, [sp, #64]
  427324:	ldp	x24, x23, [sp, #48]
  427328:	ldp	x29, x30, [sp, #32]
  42732c:	add	sp, sp, #0x60
  427330:	ret
  427334:	mov	x24, xzr
  427338:	b	427318 <_obstack_memory_used@@Base+0xd184>
  42733c:	ldr	w8, [x19, #160]
  427340:	mov	w9, #0xa                   	// #10
  427344:	and	w8, w8, #0x2
  427348:	eor	w3, w8, w9
  42734c:	b	4272a4 <_obstack_memory_used@@Base+0xd110>
  427350:	mov	w0, w24
  427354:	bl	402710 <iswalnum@plt>
  427358:	cmp	w24, #0x5f
  42735c:	mov	w3, #0x1                   	// #1
  427360:	b.eq	4272a4 <_obstack_memory_used@@Base+0xd110>  // b.none
  427364:	cbz	w0, 42727c <_obstack_memory_used@@Base+0xd0e8>
  427368:	b	4272a4 <_obstack_memory_used@@Base+0xd110>
  42736c:	stp	x29, x30, [sp, #-80]!
  427370:	stp	x20, x19, [sp, #64]
  427374:	mov	x20, x2
  427378:	mov	x19, x0
  42737c:	stp	x26, x25, [sp, #16]
  427380:	stp	x24, x23, [sp, #32]
  427384:	stp	x22, x21, [sp, #48]
  427388:	mov	x29, sp
  42738c:	cbz	x1, 4274b4 <_obstack_memory_used@@Base+0xd320>
  427390:	ldr	x24, [x1, #8]
  427394:	mov	x21, x1
  427398:	cbz	x20, 42747c <_obstack_memory_used@@Base+0xd2e8>
  42739c:	cmp	x24, #0x1
  4273a0:	b.lt	42747c <_obstack_memory_used@@Base+0xd2e8>  // b.tstop
  4273a4:	ldr	x23, [x20, #8]
  4273a8:	cmp	x23, #0x1
  4273ac:	b.lt	42747c <_obstack_memory_used@@Base+0xd2e8>  // b.tstop
  4273b0:	add	x8, x23, x24
  4273b4:	lsl	x0, x8, #3
  4273b8:	str	x8, [x19]
  4273bc:	bl	4023a0 <malloc@plt>
  4273c0:	str	x0, [x19, #16]
  4273c4:	cbz	x0, 427554 <_obstack_memory_used@@Base+0xd3c0>
  4273c8:	mov	x25, xzr
  4273cc:	mov	x22, xzr
  4273d0:	mov	x11, xzr
  4273d4:	mov	x9, xzr
  4273d8:	mov	w10, #0x1                   	// #1
  4273dc:	add	x8, x0, x22, lsl #3
  4273e0:	mov	x26, x11
  4273e4:	tbz	w10, #0, 42750c <_obstack_memory_used@@Base+0xd378>
  4273e8:	ldr	x10, [x21, #16]
  4273ec:	ldr	x11, [x20, #16]
  4273f0:	ldr	x13, [x10, x9, lsl #3]
  4273f4:	ldr	x12, [x11, x26, lsl #3]
  4273f8:	cmp	x13, x12
  4273fc:	b.le	427420 <_obstack_memory_used@@Base+0xd28c>
  427400:	add	x26, x26, #0x1
  427404:	cmp	x23, x26
  427408:	add	x22, x22, #0x1
  42740c:	cset	w10, gt
  427410:	cmp	x24, x9
  427414:	str	x12, [x8], #8
  427418:	b.gt	4273e4 <_obstack_memory_used@@Base+0xd250>
  42741c:	b	427454 <_obstack_memory_used@@Base+0xd2c0>
  427420:	str	x13, [x8]
  427424:	ldr	x23, [x20, #8]
  427428:	ldr	x24, [x21, #8]
  42742c:	cinc	x11, x26, eq  // eq = none
  427430:	add	x9, x9, #0x1
  427434:	cmp	x23, x11
  427438:	add	x22, x22, #0x1
  42743c:	cset	w10, gt
  427440:	cmp	x24, x9
  427444:	sub	x25, x25, #0x1
  427448:	b.gt	4273dc <_obstack_memory_used@@Base+0xd248>
  42744c:	cmp	x13, x12
  427450:	cinc	x26, x26, eq  // eq = none
  427454:	cbz	w10, 427530 <_obstack_memory_used@@Base+0xd39c>
  427458:	ldr	x8, [x20, #16]
  42745c:	sub	x9, x23, x26
  427460:	add	x0, x0, x22, lsl #3
  427464:	lsl	x2, x9, #3
  427468:	add	x1, x8, x26, lsl #3
  42746c:	bl	402210 <memcpy@plt>
  427470:	sub	x8, x22, x26
  427474:	add	x22, x8, x23
  427478:	b	427530 <_obstack_memory_used@@Base+0xd39c>
  42747c:	cmp	x24, #0x1
  427480:	b.lt	4274b4 <_obstack_memory_used@@Base+0xd320>  // b.tstop
  427484:	str	x24, [x19, #8]
  427488:	ldr	x20, [x21, #8]
  42748c:	cmp	x20, #0x1
  427490:	b.lt	4274fc <_obstack_memory_used@@Base+0xd368>  // b.tstop
  427494:	lsl	x0, x24, #3
  427498:	str	x24, [x19]
  42749c:	bl	4023a0 <malloc@plt>
  4274a0:	str	x0, [x19, #16]
  4274a4:	cbz	x0, 427550 <_obstack_memory_used@@Base+0xd3bc>
  4274a8:	ldr	x1, [x21, #16]
  4274ac:	lsl	x2, x20, #3
  4274b0:	b	4274f0 <_obstack_memory_used@@Base+0xd35c>
  4274b4:	cbz	x20, 4274fc <_obstack_memory_used@@Base+0xd368>
  4274b8:	ldr	x8, [x20, #8]
  4274bc:	cmp	x8, #0x1
  4274c0:	b.lt	4274fc <_obstack_memory_used@@Base+0xd368>  // b.tstop
  4274c4:	str	x8, [x19, #8]
  4274c8:	ldr	x21, [x20, #8]
  4274cc:	cmp	x21, #0x1
  4274d0:	b.lt	4274fc <_obstack_memory_used@@Base+0xd368>  // b.tstop
  4274d4:	lsl	x0, x8, #3
  4274d8:	str	x8, [x19]
  4274dc:	bl	4023a0 <malloc@plt>
  4274e0:	str	x0, [x19, #16]
  4274e4:	cbz	x0, 427550 <_obstack_memory_used@@Base+0xd3bc>
  4274e8:	ldr	x1, [x20, #16]
  4274ec:	lsl	x2, x21, #3
  4274f0:	bl	402210 <memcpy@plt>
  4274f4:	mov	w0, wzr
  4274f8:	b	427538 <_obstack_memory_used@@Base+0xd3a4>
  4274fc:	mov	w0, wzr
  427500:	stp	xzr, xzr, [x19]
  427504:	str	xzr, [x19, #16]
  427508:	b	427538 <_obstack_memory_used@@Base+0xd3a4>
  42750c:	ldr	x10, [x21, #16]
  427510:	sub	x11, x24, x9
  427514:	lsl	x2, x11, #3
  427518:	mov	x0, x8
  42751c:	add	x1, x10, x9, lsl #3
  427520:	bl	402210 <memcpy@plt>
  427524:	ldr	x8, [x21, #8]
  427528:	add	x8, x8, x25
  42752c:	add	x22, x8, x22
  427530:	mov	w0, wzr
  427534:	str	x22, [x19, #8]
  427538:	ldp	x20, x19, [sp, #64]
  42753c:	ldp	x22, x21, [sp, #48]
  427540:	ldp	x24, x23, [sp, #32]
  427544:	ldp	x26, x25, [sp, #16]
  427548:	ldp	x29, x30, [sp], #80
  42754c:	ret
  427550:	stp	xzr, xzr, [x19]
  427554:	mov	w0, #0xc                   	// #12
  427558:	b	427538 <_obstack_memory_used@@Base+0xd3a4>
  42755c:	stp	x29, x30, [sp, #-96]!
  427560:	stp	x28, x27, [sp, #16]
  427564:	stp	x26, x25, [sp, #32]
  427568:	stp	x24, x23, [sp, #48]
  42756c:	stp	x22, x21, [sp, #64]
  427570:	stp	x20, x19, [sp, #80]
  427574:	mov	x22, x2
  427578:	mov	x23, x3
  42757c:	ldr	x2, [x2]
  427580:	ldr	x3, [x22, #8]
  427584:	mov	x20, x4
  427588:	mov	x21, x1
  42758c:	add	x1, x22, #0x10
  427590:	mov	w6, #0x8                   	// #8
  427594:	mov	x4, x23
  427598:	mov	x5, x20
  42759c:	mov	x29, sp
  4275a0:	mov	x19, x0
  4275a4:	bl	427728 <_obstack_memory_used@@Base+0xd594>
  4275a8:	cbz	w0, 4275c8 <_obstack_memory_used@@Base+0xd434>
  4275ac:	ldp	x20, x19, [sp, #80]
  4275b0:	ldp	x22, x21, [sp, #64]
  4275b4:	ldp	x24, x23, [sp, #48]
  4275b8:	ldp	x26, x25, [sp, #32]
  4275bc:	ldp	x28, x27, [sp, #16]
  4275c0:	ldp	x29, x30, [sp], #96
  4275c4:	ret
  4275c8:	ldp	x27, x8, [x19, #200]
  4275cc:	ldr	x26, [x21]
  4275d0:	ldr	x25, [x22, #8]
  4275d4:	cmp	x27, x8
  4275d8:	b.ge	4275ec <_obstack_memory_used@@Base+0xd458>  // b.tcont
  4275dc:	ldr	x24, [x19, #216]
  4275e0:	subs	x8, x27, #0x1
  4275e4:	b.ge	427634 <_obstack_memory_used@@Base+0xd4a0>  // b.tcont
  4275e8:	b	427658 <_obstack_memory_used@@Base+0xd4c4>
  4275ec:	ldr	x0, [x19, #216]
  4275f0:	add	x8, x8, x8, lsl #2
  4275f4:	lsl	x1, x8, #4
  4275f8:	bl	4024c0 <realloc@plt>
  4275fc:	cbz	x0, 427718 <_obstack_memory_used@@Base+0xd584>
  427600:	ldp	x27, x28, [x19, #200]
  427604:	mov	w8, #0x28                  	// #40
  427608:	mov	x24, x0
  42760c:	str	x0, [x19, #216]
  427610:	madd	x0, x27, x8, x0
  427614:	add	x8, x28, x28, lsl #2
  427618:	lsl	x2, x8, #3
  42761c:	mov	w1, wzr
  427620:	bl	402470 <memset@plt>
  427624:	lsl	x8, x28, #1
  427628:	str	x8, [x19, #208]
  42762c:	subs	x8, x27, #0x1
  427630:	b.lt	427658 <_obstack_memory_used@@Base+0xd4c4>  // b.tstop
  427634:	mov	w9, #0x28                  	// #40
  427638:	madd	x9, x8, x9, x24
  42763c:	ldr	x9, [x9, #8]
  427640:	cmp	x9, x20
  427644:	b.ne	427658 <_obstack_memory_used@@Base+0xd4c4>  // b.any
  427648:	mov	w9, #0x28                  	// #40
  42764c:	madd	x8, x8, x9, x24
  427650:	mov	w9, #0x1                   	// #1
  427654:	strb	w9, [x8, #32]
  427658:	mov	w9, #0x28                  	// #40
  42765c:	subs	x8, x25, x26
  427660:	add	x10, x27, #0x1
  427664:	madd	x9, x27, x9, x24
  427668:	csetm	w11, eq  // eq = none
  42766c:	stp	x23, x20, [x9]
  427670:	stp	x26, x25, [x9, #16]
  427674:	strh	w11, [x9, #34]
  427678:	str	x10, [x19, #200]
  42767c:	strb	wzr, [x9, #32]
  427680:	ldrsw	x9, [x19, #224]
  427684:	cmp	x8, x9
  427688:	b.le	427690 <_obstack_memory_used@@Base+0xd4fc>
  42768c:	str	w8, [x19, #224]
  427690:	ldr	x9, [x22, #8]
  427694:	ldr	x10, [x21]
  427698:	ldr	x8, [x19, #64]
  42769c:	ldr	x21, [x19, #192]
  4276a0:	add	x9, x9, x20
  4276a4:	sub	x20, x9, x10
  4276a8:	cmp	x8, x20
  4276ac:	b.gt	4276bc <_obstack_memory_used@@Base+0xd528>
  4276b0:	ldr	x9, [x19, #88]
  4276b4:	cmp	x8, x9
  4276b8:	b.lt	4276d4 <_obstack_memory_used@@Base+0xd540>  // b.tstop
  4276bc:	ldr	x8, [x19, #48]
  4276c0:	cmp	x8, x20
  4276c4:	b.gt	4276e4 <_obstack_memory_used@@Base+0xd550>
  4276c8:	ldr	x9, [x19, #88]
  4276cc:	cmp	x8, x9
  4276d0:	b.ge	4276e4 <_obstack_memory_used@@Base+0xd550>  // b.tcont
  4276d4:	add	w1, w20, #0x1
  4276d8:	mov	x0, x19
  4276dc:	bl	426f70 <_obstack_memory_used@@Base+0xcddc>
  4276e0:	cbnz	w0, 4275ac <_obstack_memory_used@@Base+0xd418>
  4276e4:	subs	x8, x20, x21
  4276e8:	b.le	427710 <_obstack_memory_used@@Base+0xd57c>
  4276ec:	ldr	x9, [x19, #184]
  4276f0:	lsl	x2, x8, #3
  4276f4:	mov	w1, wzr
  4276f8:	add	x9, x9, x21, lsl #3
  4276fc:	add	x0, x9, #0x8
  427700:	bl	402470 <memset@plt>
  427704:	mov	w0, wzr
  427708:	str	x20, [x19, #192]
  42770c:	b	4275ac <_obstack_memory_used@@Base+0xd418>
  427710:	mov	w0, wzr
  427714:	b	4275ac <_obstack_memory_used@@Base+0xd418>
  427718:	ldr	x0, [x19, #216]
  42771c:	bl	402620 <free@plt>
  427720:	mov	w0, #0xc                   	// #12
  427724:	b	4275ac <_obstack_memory_used@@Base+0xd418>
  427728:	sub	sp, sp, #0x100
  42772c:	stp	x29, x30, [sp, #160]
  427730:	stp	x28, x27, [sp, #176]
  427734:	stp	x26, x25, [sp, #192]
  427738:	stp	x24, x23, [sp, #208]
  42773c:	stp	x22, x21, [sp, #224]
  427740:	stp	x20, x19, [sp, #240]
  427744:	ldr	x8, [x0, #152]
  427748:	add	x29, sp, #0xa0
  42774c:	stur	wzr, [x29, #-36]
  427750:	lsl	x10, x2, #4
  427754:	str	x8, [sp, #48]
  427758:	ldr	x8, [x8]
  42775c:	ldrsw	x9, [x0, #224]
  427760:	ldr	x21, [x1, #8]
  427764:	mov	x22, x2
  427768:	ldr	x8, [x8, x10]
  42776c:	mov	x27, x1
  427770:	mov	x20, x0
  427774:	mov	x19, x3
  427778:	str	x8, [sp, #56]
  42777c:	add	x8, x9, x5
  427780:	cmp	x21, x8
  427784:	str	w6, [sp, #44]
  427788:	mov	x26, x4
  42778c:	str	x5, [sp, #32]
  427790:	str	x4, [sp, #8]
  427794:	b.le	427f08 <_obstack_memory_used@@Base+0xdd74>
  427798:	ldr	x23, [x27, #16]
  42779c:	mov	x24, x5
  4277a0:	ldr	x8, [x27]
  4277a4:	ldr	x28, [x20, #184]
  4277a8:	ldr	x21, [x20, #72]
  4277ac:	str	x23, [x20, #184]
  4277b0:	cmp	x8, #0x0
  4277b4:	csel	x26, x19, x8, eq  // eq = none
  4277b8:	cmp	x26, #0x0
  4277bc:	str	x26, [x20, #72]
  4277c0:	b.le	4277fc <_obstack_memory_used@@Base+0xd668>
  4277c4:	ldr	x9, [x20, #88]
  4277c8:	sub	x8, x26, #0x1
  4277cc:	cmp	x9, x8
  4277d0:	b.eq	427f58 <_obstack_memory_used@@Base+0xddc4>  // b.none
  4277d4:	ldr	w9, [x20, #144]
  4277d8:	cmp	w9, #0x2
  4277dc:	b.lt	427804 <_obstack_memory_used@@Base+0xd670>  // b.tstop
  4277e0:	ldr	x9, [x20, #16]
  4277e4:	ldr	w25, [x9, x8, lsl #2]
  4277e8:	cmn	w25, #0x1
  4277ec:	b.ne	42782c <_obstack_memory_used@@Base+0xd698>  // b.any
  4277f0:	sub	x8, x8, #0x1
  4277f4:	cmn	x8, #0x1
  4277f8:	b.ne	4277e4 <_obstack_memory_used@@Base+0xd650>  // b.any
  4277fc:	ldr	w23, [x20, #112]
  427800:	b	42785c <_obstack_memory_used@@Base+0xd6c8>
  427804:	ldr	x9, [x20, #8]
  427808:	ldrb	w8, [x9, x8]
  42780c:	ldr	x9, [x20, #128]
  427810:	lsr	x10, x8, #3
  427814:	and	x10, x10, #0x18
  427818:	ldr	x9, [x9, x10]
  42781c:	lsr	x9, x9, x8
  427820:	tbz	w9, #0, 427850 <_obstack_memory_used@@Base+0xd6bc>
  427824:	mov	w23, #0x1                   	// #1
  427828:	b	42785c <_obstack_memory_used@@Base+0xd6c8>
  42782c:	ldrb	w8, [x20, #142]
  427830:	cbnz	w8, 427f8c <_obstack_memory_used@@Base+0xddf8>
  427834:	cmp	w25, #0xa
  427838:	b.ne	427858 <_obstack_memory_used@@Base+0xd6c4>  // b.any
  42783c:	ldrb	w8, [x20, #141]
  427840:	cmp	w8, #0x0
  427844:	cset	w8, ne  // ne = any
  427848:	lsl	w23, w8, #1
  42784c:	b	42785c <_obstack_memory_used@@Base+0xd6c8>
  427850:	cmp	w8, #0xa
  427854:	b.eq	42783c <_obstack_memory_used@@Base+0xd6a8>  // b.none
  427858:	mov	w23, wzr
  42785c:	cmp	x26, x19
  427860:	stp	x28, x27, [sp, #16]
  427864:	b.ne	427900 <_obstack_memory_used@@Base+0xd76c>  // b.any
  427868:	mov	w8, #0x1                   	// #1
  42786c:	dup	v0.2d, x8
  427870:	mov	w0, #0x8                   	// #8
  427874:	stur	q0, [x29, #-64]
  427878:	bl	4023a0 <malloc@plt>
  42787c:	stur	x0, [x29, #-48]
  427880:	cbz	x0, 427f7c <_obstack_memory_used@@Base+0xdde8>
  427884:	str	x22, [x0]
  427888:	ldp	x0, x22, [sp, #48]
  42788c:	ldr	w3, [sp, #44]
  427890:	sub	x1, x29, #0x40
  427894:	stur	wzr, [x29, #-36]
  427898:	mov	x2, x22
  42789c:	bl	427fb0 <_obstack_memory_used@@Base+0xde1c>
  4278a0:	stur	w0, [x29, #-36]
  4278a4:	cbnz	w0, 427f6c <_obstack_memory_used@@Base+0xddd8>
  4278a8:	ldur	x8, [x29, #-56]
  4278ac:	cbz	x8, 4278d0 <_obstack_memory_used@@Base+0xd73c>
  4278b0:	ldr	w4, [sp, #44]
  4278b4:	sub	x1, x29, #0x40
  4278b8:	mov	x0, x20
  4278bc:	mov	x2, x26
  4278c0:	mov	x3, x22
  4278c4:	bl	4280f4 <_obstack_memory_used@@Base+0xdf60>
  4278c8:	stur	w0, [x29, #-36]
  4278cc:	cbnz	w0, 427f6c <_obstack_memory_used@@Base+0xddd8>
  4278d0:	ldr	x1, [sp, #48]
  4278d4:	sub	x0, x29, #0x24
  4278d8:	sub	x2, x29, #0x40
  4278dc:	mov	w3, w23
  4278e0:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  4278e4:	mov	x28, x0
  4278e8:	cbnz	x0, 4278f4 <_obstack_memory_used@@Base+0xd760>
  4278ec:	ldur	w8, [x29, #-36]
  4278f0:	cbnz	w8, 427ed4 <_obstack_memory_used@@Base+0xdd40>
  4278f4:	ldr	x8, [x20, #184]
  4278f8:	str	x28, [x8, x26, lsl #3]
  4278fc:	b	427974 <_obstack_memory_used@@Base+0xd7e0>
  427900:	ldr	x8, [x20, #184]
  427904:	ldr	x28, [x8, x26, lsl #3]
  427908:	cbz	x28, 427924 <_obstack_memory_used@@Base+0xd790>
  42790c:	ldrb	w8, [x28, #104]
  427910:	ldr	x22, [sp, #56]
  427914:	tbnz	w8, #6, 427934 <_obstack_memory_used@@Base+0xd7a0>
  427918:	stp	xzr, xzr, [x29, #-64]
  42791c:	stur	xzr, [x29, #-48]
  427920:	b	427974 <_obstack_memory_used@@Base+0xd7e0>
  427924:	ldr	x22, [sp, #56]
  427928:	stp	xzr, xzr, [x29, #-64]
  42792c:	stur	xzr, [x29, #-48]
  427930:	b	427974 <_obstack_memory_used@@Base+0xd7e0>
  427934:	ldr	x8, [x28, #16]
  427938:	cmp	x8, #0x1
  42793c:	stur	x8, [x29, #-56]
  427940:	b.lt	427eb4 <_obstack_memory_used@@Base+0xdd20>  // b.tstop
  427944:	lsl	x19, x8, #3
  427948:	mov	x0, x19
  42794c:	stur	x8, [x29, #-64]
  427950:	bl	4023a0 <malloc@plt>
  427954:	stur	x0, [x29, #-48]
  427958:	cbz	x0, 427f7c <_obstack_memory_used@@Base+0xdde8>
  42795c:	ldr	x1, [x28, #24]
  427960:	mov	x2, x19
  427964:	bl	402210 <memcpy@plt>
  427968:	ldrb	w8, [x28, #104]
  42796c:	stur	wzr, [x29, #-36]
  427970:	tbnz	w8, #6, 4278b0 <_obstack_memory_used@@Base+0xd71c>
  427974:	cmp	x26, x24
  427978:	b.ge	427df8 <_obstack_memory_used@@Base+0xdc64>  // b.tcont
  42797c:	str	x21, [sp]
  427980:	ldr	w21, [sp, #44]
  427984:	ldr	x23, [sp, #48]
  427988:	mov	w8, #0x1                   	// #1
  42798c:	mov	x9, xzr
  427990:	dup	v0.2d, x8
  427994:	str	q0, [sp, #80]
  427998:	b	4279b8 <_obstack_memory_used@@Base+0xd824>
  42799c:	ldp	x9, x26, [sp, #64]
  4279a0:	ldr	x8, [x20, #184]
  4279a4:	cmp	x28, #0x0
  4279a8:	csinc	x9, xzr, x9, ne  // ne = any
  4279ac:	cmp	x26, x24
  4279b0:	str	x28, [x8, x26, lsl #3]
  4279b4:	b.eq	427df0 <_obstack_memory_used@@Base+0xdc5c>  // b.none
  4279b8:	ldrsw	x8, [x20, #224]
  4279bc:	cmp	x9, x8
  4279c0:	b.gt	427df4 <_obstack_memory_used@@Base+0xdc60>
  4279c4:	stur	xzr, [x29, #-56]
  4279c8:	ldr	x8, [x20, #184]
  4279cc:	str	x9, [sp, #64]
  4279d0:	add	x9, x26, #0x1
  4279d4:	str	x9, [sp, #72]
  4279d8:	ldr	x8, [x8, x9, lsl #3]
  4279dc:	cbz	x8, 4279f4 <_obstack_memory_used@@Base+0xd860>
  4279e0:	add	x1, x8, #0x8
  4279e4:	sub	x0, x29, #0x40
  4279e8:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  4279ec:	stur	w0, [x29, #-36]
  4279f0:	cbnz	w0, 427ed4 <_obstack_memory_used@@Base+0xdd40>
  4279f4:	cbz	x28, 427cc0 <_obstack_memory_used@@Base+0xdb2c>
  4279f8:	ldr	x22, [x20, #152]
  4279fc:	stur	wzr, [x29, #-4]
  427a00:	stp	xzr, xzr, [x29, #-32]
  427a04:	stur	xzr, [x29, #-16]
  427a08:	ldr	x8, [x28, #40]
  427a0c:	cmp	x8, #0x1
  427a10:	b.lt	427cb0 <_obstack_memory_used@@Base+0xdb1c>  // b.tstop
  427a14:	mov	x24, xzr
  427a18:	b	427a48 <_obstack_memory_used@@Base+0xd8b4>
  427a1c:	ldur	x8, [x29, #-56]
  427a20:	cbnz	x8, 427b74 <_obstack_memory_used@@Base+0xd9e0>
  427a24:	ldur	x8, [x29, #-48]
  427a28:	str	x19, [x8]
  427a2c:	ldur	x8, [x29, #-56]
  427a30:	add	x8, x8, #0x1
  427a34:	stur	x8, [x29, #-56]
  427a38:	ldr	x8, [x28, #40]
  427a3c:	add	x24, x24, #0x1
  427a40:	cmp	x24, x8
  427a44:	b.ge	427c9c <_obstack_memory_used@@Base+0xdb08>  // b.tcont
  427a48:	ldr	x8, [x28, #48]
  427a4c:	ldr	x19, [x8, x24, lsl #3]
  427a50:	ldr	x8, [x22]
  427a54:	add	x9, x8, x19, lsl #4
  427a58:	ldrb	w9, [x9, #10]
  427a5c:	tbz	w9, #4, 427b30 <_obstack_memory_used@@Base+0xd99c>
  427a60:	mov	x0, x22
  427a64:	mov	x1, x19
  427a68:	mov	x2, x20
  427a6c:	mov	x3, x26
  427a70:	bl	428954 <_obstack_memory_used@@Base+0xe7c0>
  427a74:	mov	w23, w0
  427a78:	cmp	w0, #0x2
  427a7c:	b.lt	427b28 <_obstack_memory_used@@Base+0xd994>  // b.tstop
  427a80:	ldr	x8, [x20, #184]
  427a84:	ldr	x9, [x22, #24]
  427a88:	add	x27, x26, w23, uxtw
  427a8c:	ldr	x8, [x8, x27, lsl #3]
  427a90:	ldr	x21, [x9, x19, lsl #3]
  427a94:	stur	xzr, [x29, #-24]
  427a98:	cbz	x8, 427ab0 <_obstack_memory_used@@Base+0xd91c>
  427a9c:	add	x1, x8, #0x8
  427aa0:	sub	x0, x29, #0x20
  427aa4:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  427aa8:	stur	w0, [x29, #-4]
  427aac:	cbnz	w0, 427edc <_obstack_memory_used@@Base+0xdd48>
  427ab0:	ldur	x9, [x29, #-32]
  427ab4:	cbz	x9, 427ad8 <_obstack_memory_used@@Base+0xd944>
  427ab8:	ldur	x8, [x29, #-24]
  427abc:	cbnz	x8, 427c08 <_obstack_memory_used@@Base+0xda74>
  427ac0:	ldur	x8, [x29, #-16]
  427ac4:	str	x21, [x8]
  427ac8:	ldur	x8, [x29, #-24]
  427acc:	add	x8, x8, #0x1
  427ad0:	stur	x8, [x29, #-24]
  427ad4:	b	427af8 <_obstack_memory_used@@Base+0xd964>
  427ad8:	mov	w8, #0x1                   	// #1
  427adc:	dup	v0.2d, x8
  427ae0:	mov	w0, #0x8                   	// #8
  427ae4:	stur	q0, [x29, #-32]
  427ae8:	bl	4023a0 <malloc@plt>
  427aec:	stur	x0, [x29, #-16]
  427af0:	cbz	x0, 427efc <_obstack_memory_used@@Base+0xdd68>
  427af4:	str	x21, [x0]
  427af8:	sub	x0, x29, #0x4
  427afc:	sub	x2, x29, #0x20
  427b00:	mov	x1, x22
  427b04:	bl	4286d8 <_obstack_memory_used@@Base+0xe544>
  427b08:	ldr	x8, [x20, #184]
  427b0c:	lsl	x9, x27, #3
  427b10:	str	x0, [x8, x9]
  427b14:	ldr	x8, [x20, #184]
  427b18:	ldr	x8, [x8, x9]
  427b1c:	cbnz	x8, 427b28 <_obstack_memory_used@@Base+0xd994>
  427b20:	ldur	w25, [x29, #-4]
  427b24:	cbnz	w25, 427ee0 <_obstack_memory_used@@Base+0xdd4c>
  427b28:	cbnz	w23, 427b44 <_obstack_memory_used@@Base+0xd9b0>
  427b2c:	ldr	x8, [x22]
  427b30:	add	x1, x8, x19, lsl #4
  427b34:	mov	x0, x20
  427b38:	mov	x2, x26
  427b3c:	bl	428ccc <_obstack_memory_used@@Base+0xeb38>
  427b40:	tbz	w0, #0, 427a38 <_obstack_memory_used@@Base+0xd8a4>
  427b44:	ldr	x8, [x22, #24]
  427b48:	ldur	x9, [x29, #-64]
  427b4c:	ldr	x19, [x8, x19, lsl #3]
  427b50:	cbnz	x9, 427a1c <_obstack_memory_used@@Base+0xd888>
  427b54:	ldr	q0, [sp, #80]
  427b58:	mov	w0, #0x8                   	// #8
  427b5c:	stur	q0, [x29, #-64]
  427b60:	bl	4023a0 <malloc@plt>
  427b64:	stur	x0, [x29, #-48]
  427b68:	cbz	x0, 427ec4 <_obstack_memory_used@@Base+0xdd30>
  427b6c:	str	x19, [x0]
  427b70:	b	427a38 <_obstack_memory_used@@Base+0xd8a4>
  427b74:	cmp	x9, x8
  427b78:	b.ne	427ba0 <_obstack_memory_used@@Base+0xda0c>  // b.any
  427b7c:	ldur	x0, [x29, #-48]
  427b80:	lsl	x8, x9, #1
  427b84:	lsl	x1, x9, #4
  427b88:	stur	x8, [x29, #-64]
  427b8c:	bl	4024c0 <realloc@plt>
  427b90:	cbz	x0, 427ec8 <_obstack_memory_used@@Base+0xdd34>
  427b94:	ldur	x8, [x29, #-56]
  427b98:	stur	x0, [x29, #-48]
  427b9c:	b	427ba4 <_obstack_memory_used@@Base+0xda10>
  427ba0:	ldur	x0, [x29, #-48]
  427ba4:	ldr	x9, [x0]
  427ba8:	cmp	x9, x19
  427bac:	b.le	427bd8 <_obstack_memory_used@@Base+0xda44>
  427bb0:	cmp	x8, #0x1
  427bb4:	b.lt	427c00 <_obstack_memory_used@@Base+0xda6c>  // b.tstop
  427bb8:	mov	x9, x8
  427bbc:	add	x10, x0, x9, lsl #3
  427bc0:	ldur	x11, [x10, #-8]
  427bc4:	subs	x8, x9, #0x1
  427bc8:	mov	x9, x8
  427bcc:	str	x11, [x10]
  427bd0:	b.gt	427bbc <_obstack_memory_used@@Base+0xda28>
  427bd4:	b	427c00 <_obstack_memory_used@@Base+0xda6c>
  427bd8:	add	x9, x0, x8, lsl #3
  427bdc:	ldur	x9, [x9, #-8]
  427be0:	cmp	x9, x19
  427be4:	b.le	427c00 <_obstack_memory_used@@Base+0xda6c>
  427be8:	add	x10, x0, x8, lsl #3
  427bec:	str	x9, [x10]
  427bf0:	ldur	x9, [x10, #-16]
  427bf4:	sub	x8, x8, #0x1
  427bf8:	cmp	x9, x19
  427bfc:	b.gt	427be8 <_obstack_memory_used@@Base+0xda54>
  427c00:	str	x19, [x0, x8, lsl #3]
  427c04:	b	427a2c <_obstack_memory_used@@Base+0xd898>
  427c08:	cmp	x9, x8
  427c0c:	b.ne	427c34 <_obstack_memory_used@@Base+0xdaa0>  // b.any
  427c10:	ldur	x0, [x29, #-16]
  427c14:	lsl	x8, x9, #1
  427c18:	lsl	x1, x9, #4
  427c1c:	stur	x8, [x29, #-32]
  427c20:	bl	4024c0 <realloc@plt>
  427c24:	cbz	x0, 427ec8 <_obstack_memory_used@@Base+0xdd34>
  427c28:	ldur	x8, [x29, #-24]
  427c2c:	stur	x0, [x29, #-16]
  427c30:	b	427c38 <_obstack_memory_used@@Base+0xdaa4>
  427c34:	ldur	x0, [x29, #-16]
  427c38:	ldr	x9, [x0]
  427c3c:	cmp	x9, x21
  427c40:	b.le	427c6c <_obstack_memory_used@@Base+0xdad8>
  427c44:	cmp	x8, #0x1
  427c48:	b.lt	427c94 <_obstack_memory_used@@Base+0xdb00>  // b.tstop
  427c4c:	mov	x9, x8
  427c50:	add	x10, x0, x9, lsl #3
  427c54:	ldur	x11, [x10, #-8]
  427c58:	subs	x8, x9, #0x1
  427c5c:	mov	x9, x8
  427c60:	str	x11, [x10]
  427c64:	b.gt	427c50 <_obstack_memory_used@@Base+0xdabc>
  427c68:	b	427c94 <_obstack_memory_used@@Base+0xdb00>
  427c6c:	add	x9, x0, x8, lsl #3
  427c70:	ldur	x9, [x9, #-8]
  427c74:	cmp	x9, x21
  427c78:	b.le	427c94 <_obstack_memory_used@@Base+0xdb00>
  427c7c:	add	x10, x0, x8, lsl #3
  427c80:	str	x9, [x10]
  427c84:	ldur	x9, [x10, #-16]
  427c88:	sub	x8, x8, #0x1
  427c8c:	cmp	x9, x21
  427c90:	b.gt	427c7c <_obstack_memory_used@@Base+0xdae8>
  427c94:	str	x21, [x0, x8, lsl #3]
  427c98:	b	427ac8 <_obstack_memory_used@@Base+0xd934>
  427c9c:	ldur	x0, [x29, #-16]
  427ca0:	ldr	x24, [sp, #32]
  427ca4:	ldr	w21, [sp, #44]
  427ca8:	ldr	x23, [sp, #48]
  427cac:	b	427cb4 <_obstack_memory_used@@Base+0xdb20>
  427cb0:	mov	x0, xzr
  427cb4:	bl	402620 <free@plt>
  427cb8:	ldr	x22, [sp, #56]
  427cbc:	stur	wzr, [x29, #-36]
  427cc0:	ldur	x8, [x29, #-56]
  427cc4:	cbz	x8, 427d04 <_obstack_memory_used@@Base+0xdb70>
  427cc8:	sub	x1, x29, #0x40
  427ccc:	mov	x0, x23
  427cd0:	mov	x2, x22
  427cd4:	mov	w3, w21
  427cd8:	bl	427fb0 <_obstack_memory_used@@Base+0xde1c>
  427cdc:	stur	w0, [x29, #-36]
  427ce0:	cbnz	w0, 427ed4 <_obstack_memory_used@@Base+0xdd40>
  427ce4:	ldr	x2, [sp, #72]
  427ce8:	sub	x1, x29, #0x40
  427cec:	mov	x0, x20
  427cf0:	mov	x3, x22
  427cf4:	mov	w4, w21
  427cf8:	bl	4280f4 <_obstack_memory_used@@Base+0xdf60>
  427cfc:	stur	w0, [x29, #-36]
  427d00:	cbnz	w0, 427ed4 <_obstack_memory_used@@Base+0xdd40>
  427d04:	tbnz	x26, #63, 427d3c <_obstack_memory_used@@Base+0xdba8>
  427d08:	ldr	x8, [x20, #88]
  427d0c:	cmp	x8, x26
  427d10:	b.eq	427dc0 <_obstack_memory_used@@Base+0xdc2c>  // b.none
  427d14:	ldr	w8, [x20, #144]
  427d18:	cmp	w8, #0x2
  427d1c:	b.lt	427d44 <_obstack_memory_used@@Base+0xdbb0>  // b.tstop
  427d20:	ldr	x8, [x20, #16]
  427d24:	ldr	w19, [x8, x26, lsl #2]
  427d28:	cmn	w19, #0x1
  427d2c:	b.ne	427d6c <_obstack_memory_used@@Base+0xdbd8>  // b.any
  427d30:	sub	x26, x26, #0x1
  427d34:	cmn	x26, #0x1
  427d38:	b.ne	427d24 <_obstack_memory_used@@Base+0xdb90>  // b.any
  427d3c:	ldr	w3, [x20, #112]
  427d40:	b	427d9c <_obstack_memory_used@@Base+0xdc08>
  427d44:	ldr	x8, [x20, #8]
  427d48:	ldr	x9, [x20, #128]
  427d4c:	ldrb	w8, [x8, x26]
  427d50:	lsr	x10, x8, #3
  427d54:	and	x10, x10, #0x18
  427d58:	ldr	x9, [x9, x10]
  427d5c:	lsr	x9, x9, x8
  427d60:	tbz	w9, #0, 427d90 <_obstack_memory_used@@Base+0xdbfc>
  427d64:	mov	w3, #0x1                   	// #1
  427d68:	b	427d9c <_obstack_memory_used@@Base+0xdc08>
  427d6c:	ldrb	w8, [x20, #142]
  427d70:	cbnz	w8, 427dd4 <_obstack_memory_used@@Base+0xdc40>
  427d74:	cmp	w19, #0xa
  427d78:	b.ne	427d98 <_obstack_memory_used@@Base+0xdc04>  // b.any
  427d7c:	ldrb	w8, [x20, #141]
  427d80:	cmp	w8, #0x0
  427d84:	cset	w8, ne  // ne = any
  427d88:	lsl	w3, w8, #1
  427d8c:	b	427d9c <_obstack_memory_used@@Base+0xdc08>
  427d90:	cmp	w8, #0xa
  427d94:	b.eq	427d7c <_obstack_memory_used@@Base+0xdbe8>  // b.none
  427d98:	mov	w3, wzr
  427d9c:	sub	x0, x29, #0x24
  427da0:	sub	x2, x29, #0x40
  427da4:	mov	x1, x23
  427da8:	bl	4243c4 <_obstack_memory_used@@Base+0xa230>
  427dac:	mov	x28, x0
  427db0:	cbnz	x0, 42799c <_obstack_memory_used@@Base+0xd808>
  427db4:	ldur	w8, [x29, #-36]
  427db8:	cbz	w8, 42799c <_obstack_memory_used@@Base+0xd808>
  427dbc:	b	427ed4 <_obstack_memory_used@@Base+0xdd40>
  427dc0:	ldr	w8, [x20, #160]
  427dc4:	mov	w9, #0xa                   	// #10
  427dc8:	and	w8, w8, #0x2
  427dcc:	eor	w3, w8, w9
  427dd0:	b	427d9c <_obstack_memory_used@@Base+0xdc08>
  427dd4:	mov	w0, w19
  427dd8:	bl	402710 <iswalnum@plt>
  427ddc:	cmp	w19, #0x5f
  427de0:	mov	w3, #0x1                   	// #1
  427de4:	b.eq	427d9c <_obstack_memory_used@@Base+0xdc08>  // b.none
  427de8:	cbz	w0, 427d74 <_obstack_memory_used@@Base+0xdbe0>
  427dec:	b	427d9c <_obstack_memory_used@@Base+0xdc08>
  427df0:	mov	x26, x24
  427df4:	ldr	x21, [sp]
  427df8:	ldur	x0, [x29, #-48]
  427dfc:	bl	402620 <free@plt>
  427e00:	ldr	x8, [x20, #184]
  427e04:	ldr	x9, [x8, x24, lsl #3]
  427e08:	ldr	x8, [sp, #24]
  427e0c:	cmp	x9, #0x0
  427e10:	str	x26, [x8]
  427e14:	ldr	x8, [sp, #16]
  427e18:	str	x21, [x20, #72]
  427e1c:	str	x8, [x20, #184]
  427e20:	add	x8, x9, #0x8
  427e24:	csel	x8, xzr, x8, eq  // eq = none
  427e28:	cbz	x9, 427e8c <_obstack_memory_used@@Base+0xdcf8>
  427e2c:	ldr	x9, [x8, #8]
  427e30:	subs	x9, x9, #0x1
  427e34:	b.lt	427e8c <_obstack_memory_used@@Base+0xdcf8>  // b.tstop
  427e38:	ldr	x8, [x8, #16]
  427e3c:	mov	x10, xzr
  427e40:	b.eq	427e7c <_obstack_memory_used@@Base+0xdce8>  // b.none
  427e44:	ldr	x13, [sp, #8]
  427e48:	add	x11, x10, x9
  427e4c:	lsr	x11, x11, #1
  427e50:	ldr	x12, [x8, x11, lsl #3]
  427e54:	cmp	x12, x13
  427e58:	csinc	x10, x10, x11, ge  // ge = tcont
  427e5c:	csel	x9, x9, x11, lt  // lt = tstop
  427e60:	cmp	x10, x9
  427e64:	b.cc	427e48 <_obstack_memory_used@@Base+0xdcb4>  // b.lo, b.ul, b.last
  427e68:	ldr	x8, [x8, x10, lsl #3]
  427e6c:	cmp	x8, x13
  427e70:	b.ne	427e8c <_obstack_memory_used@@Base+0xdcf8>  // b.any
  427e74:	mov	w19, wzr
  427e78:	b	427e90 <_obstack_memory_used@@Base+0xdcfc>
  427e7c:	ldr	x13, [sp, #8]
  427e80:	ldr	x8, [x8, x10, lsl #3]
  427e84:	cmp	x8, x13
  427e88:	b.eq	427e74 <_obstack_memory_used@@Base+0xdce0>  // b.none
  427e8c:	mov	w19, #0x1                   	// #1
  427e90:	mov	w0, w19
  427e94:	ldp	x20, x19, [sp, #240]
  427e98:	ldp	x22, x21, [sp, #224]
  427e9c:	ldp	x24, x23, [sp, #208]
  427ea0:	ldp	x26, x25, [sp, #192]
  427ea4:	ldp	x28, x27, [sp, #176]
  427ea8:	ldp	x29, x30, [sp, #160]
  427eac:	add	sp, sp, #0x100
  427eb0:	ret
  427eb4:	stp	xzr, xzr, [x29, #-64]
  427eb8:	stur	xzr, [x29, #-48]
  427ebc:	stur	wzr, [x29, #-36]
  427ec0:	b	4278d0 <_obstack_memory_used@@Base+0xd73c>
  427ec4:	stp	xzr, xzr, [x29, #-64]
  427ec8:	ldur	x0, [x29, #-16]
  427ecc:	mov	w25, #0xc                   	// #12
  427ed0:	b	427ee4 <_obstack_memory_used@@Base+0xdd50>
  427ed4:	ldur	x0, [x29, #-48]
  427ed8:	b	427ef0 <_obstack_memory_used@@Base+0xdd5c>
  427edc:	mov	w25, w0
  427ee0:	ldur	x0, [x29, #-16]
  427ee4:	bl	402620 <free@plt>
  427ee8:	ldur	x0, [x29, #-48]
  427eec:	stur	w25, [x29, #-36]
  427ef0:	bl	402620 <free@plt>
  427ef4:	ldur	w19, [x29, #-36]
  427ef8:	b	427e90 <_obstack_memory_used@@Base+0xdcfc>
  427efc:	stp	xzr, xzr, [x29, #-32]
  427f00:	mov	w25, #0xc                   	// #12
  427f04:	b	427ee4 <_obstack_memory_used@@Base+0xdd50>
  427f08:	mov	x9, #0x7fffffffffffffff    	// #9223372036854775807
  427f0c:	sub	x9, x9, x21
  427f10:	cmp	x9, x8
  427f14:	b.le	427fa8 <_obstack_memory_used@@Base+0xde14>
  427f18:	add	x24, x8, #0x1
  427f1c:	add	x25, x24, x21
  427f20:	lsr	x8, x25, #61
  427f24:	cbnz	x8, 427fa8 <_obstack_memory_used@@Base+0xde14>
  427f28:	ldr	x0, [x27, #16]
  427f2c:	lsl	x1, x25, #3
  427f30:	bl	4024c0 <realloc@plt>
  427f34:	cbz	x0, 427fa8 <_obstack_memory_used@@Base+0xde14>
  427f38:	mov	x23, x0
  427f3c:	stp	x25, x0, [x27, #8]
  427f40:	add	x0, x0, x21, lsl #3
  427f44:	lsl	x2, x24, #3
  427f48:	mov	w1, wzr
  427f4c:	bl	402470 <memset@plt>
  427f50:	ldr	x24, [sp, #32]
  427f54:	b	4277a0 <_obstack_memory_used@@Base+0xd60c>
  427f58:	ldr	w8, [x20, #160]
  427f5c:	mov	w9, #0xa                   	// #10
  427f60:	and	w8, w8, #0x2
  427f64:	eor	w23, w8, w9
  427f68:	b	42785c <_obstack_memory_used@@Base+0xd6c8>
  427f6c:	mov	w19, w0
  427f70:	ldur	x0, [x29, #-48]
  427f74:	bl	402620 <free@plt>
  427f78:	b	427e90 <_obstack_memory_used@@Base+0xdcfc>
  427f7c:	mov	w19, #0xc                   	// #12
  427f80:	stp	xzr, xzr, [x29, #-64]
  427f84:	stur	w19, [x29, #-36]
  427f88:	b	427e90 <_obstack_memory_used@@Base+0xdcfc>
  427f8c:	mov	w0, w25
  427f90:	bl	402710 <iswalnum@plt>
  427f94:	cmp	w25, #0x5f
  427f98:	mov	w23, #0x1                   	// #1
  427f9c:	b.eq	42785c <_obstack_memory_used@@Base+0xd6c8>  // b.none
  427fa0:	cbz	w0, 427834 <_obstack_memory_used@@Base+0xd6a0>
  427fa4:	b	42785c <_obstack_memory_used@@Base+0xd6c8>
  427fa8:	mov	w19, #0xc                   	// #12
  427fac:	b	427e90 <_obstack_memory_used@@Base+0xdcfc>
  427fb0:	sub	sp, sp, #0x70
  427fb4:	stp	x29, x30, [sp, #32]
  427fb8:	stp	x24, x23, [sp, #64]
  427fbc:	stp	x22, x21, [sp, #80]
  427fc0:	stp	x20, x19, [sp, #96]
  427fc4:	ldr	x23, [x1, #8]
  427fc8:	mov	x22, x0
  427fcc:	str	x25, [sp, #48]
  427fd0:	add	x29, sp, #0x20
  427fd4:	lsl	x0, x23, #3
  427fd8:	mov	w20, w3
  427fdc:	mov	x21, x2
  427fe0:	mov	x19, x1
  427fe4:	stp	x23, xzr, [sp, #8]
  427fe8:	bl	4023a0 <malloc@plt>
  427fec:	str	x0, [sp, #24]
  427ff0:	cbz	x0, 4280ec <_obstack_memory_used@@Base+0xdf58>
  427ff4:	cmp	x23, #0x1
  427ff8:	b.lt	4280b0 <_obstack_memory_used@@Base+0xdf1c>  // b.tstop
  427ffc:	mov	x24, xzr
  428000:	mov	w25, #0x18                  	// #24
  428004:	b	428024 <_obstack_memory_used@@Base+0xde90>
  428008:	add	x0, sp, #0x8
  42800c:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  428010:	cbnz	w0, 4280a0 <_obstack_memory_used@@Base+0xdf0c>
  428014:	ldr	x8, [x19, #8]
  428018:	add	x24, x24, #0x1
  42801c:	cmp	x24, x8
  428020:	b.ge	4280b0 <_obstack_memory_used@@Base+0xdf1c>  // b.tcont
  428024:	ldr	x8, [x19, #16]
  428028:	ldr	x9, [x22, #48]
  42802c:	ldr	x2, [x8, x24, lsl #3]
  428030:	madd	x1, x2, x25, x9
  428034:	ldr	x8, [x1, #8]
  428038:	cmp	x8, #0x1
  42803c:	b.lt	428008 <_obstack_memory_used@@Base+0xde74>  // b.tstop
  428040:	madd	x9, x2, x25, x9
  428044:	ldr	x9, [x9, #16]
  428048:	ldr	x10, [x22]
  42804c:	b	42805c <_obstack_memory_used@@Base+0xdec8>
  428050:	subs	x8, x8, #0x1
  428054:	add	x9, x9, #0x8
  428058:	b.eq	428008 <_obstack_memory_used@@Base+0xde74>  // b.none
  42805c:	ldr	x11, [x9]
  428060:	add	x12, x10, x11, lsl #4
  428064:	ldrb	w12, [x12, #8]
  428068:	cmp	w12, w20
  42806c:	b.ne	428050 <_obstack_memory_used@@Base+0xdebc>  // b.any
  428070:	lsl	x12, x11, #4
  428074:	ldr	x12, [x10, x12]
  428078:	cmp	x12, x21
  42807c:	b.ne	428050 <_obstack_memory_used@@Base+0xdebc>  // b.any
  428080:	cmn	x11, #0x1
  428084:	b.eq	428008 <_obstack_memory_used@@Base+0xde74>  // b.none
  428088:	add	x1, sp, #0x8
  42808c:	mov	x0, x22
  428090:	mov	x3, x21
  428094:	mov	w4, w20
  428098:	bl	4285a8 <_obstack_memory_used@@Base+0xe414>
  42809c:	cbz	w0, 428014 <_obstack_memory_used@@Base+0xde80>
  4280a0:	mov	w23, w0
  4280a4:	ldr	x0, [sp, #24]
  4280a8:	bl	402620 <free@plt>
  4280ac:	b	4280cc <_obstack_memory_used@@Base+0xdf38>
  4280b0:	ldr	x0, [x19, #16]
  4280b4:	bl	402620 <free@plt>
  4280b8:	ldr	x8, [sp, #24]
  4280bc:	ldur	q0, [sp, #8]
  4280c0:	mov	w23, wzr
  4280c4:	str	x8, [x19, #16]
  4280c8:	str	q0, [x19]
  4280cc:	mov	w0, w23
  4280d0:	ldp	x20, x19, [sp, #96]
  4280d4:	ldp	x22, x21, [sp, #80]
  4280d8:	ldp	x24, x23, [sp, #64]
  4280dc:	ldr	x25, [sp, #48]
  4280e0:	ldp	x29, x30, [sp, #32]
  4280e4:	add	sp, sp, #0x70
  4280e8:	ret
  4280ec:	mov	w23, #0xc                   	// #12
  4280f0:	b	4280cc <_obstack_memory_used@@Base+0xdf38>
  4280f4:	sub	sp, sp, #0xb0
  4280f8:	stp	x29, x30, [sp, #80]
  4280fc:	stp	x28, x27, [sp, #96]
  428100:	stp	x26, x25, [sp, #112]
  428104:	stp	x24, x23, [sp, #128]
  428108:	stp	x22, x21, [sp, #144]
  42810c:	stp	x20, x19, [sp, #160]
  428110:	ldr	x8, [x0, #200]
  428114:	ldr	x26, [x0, #152]
  428118:	mov	x21, x2
  42811c:	mov	x22, x0
  428120:	cmp	x8, #0x1
  428124:	mov	x24, x1
  428128:	mov	x28, xzr
  42812c:	add	x29, sp, #0x50
  428130:	b.lt	42816c <_obstack_memory_used@@Base+0xdfd8>  // b.tstop
  428134:	ldr	x9, [x22, #216]
  428138:	mov	w10, #0x28                  	// #40
  42813c:	mov	x11, x8
  428140:	add	x12, x11, x28
  428144:	cmp	x12, #0x0
  428148:	cinc	x12, x12, lt  // lt = tstop
  42814c:	asr	x12, x12, #1
  428150:	madd	x13, x12, x10, x9
  428154:	ldr	x13, [x13, #8]
  428158:	cmp	x13, x21
  42815c:	csel	x11, x11, x12, lt  // lt = tstop
  428160:	csinc	x28, x28, x12, ge  // ge = tcont
  428164:	cmp	x28, x11
  428168:	b.lt	428140 <_obstack_memory_used@@Base+0xdfac>  // b.tstop
  42816c:	cmp	x28, x8
  428170:	b.ge	42857c <_obstack_memory_used@@Base+0xe3e8>  // b.tcont
  428174:	cmn	x28, #0x1
  428178:	mov	w0, wzr
  42817c:	b.eq	428580 <_obstack_memory_used@@Base+0xe3ec>  // b.none
  428180:	ldr	x8, [x22, #216]
  428184:	mov	w9, #0x28                  	// #40
  428188:	madd	x9, x28, x9, x8
  42818c:	ldr	x9, [x9, #8]
  428190:	cmp	x9, x21
  428194:	b.ne	428580 <_obstack_memory_used@@Base+0xe3ec>  // b.any
  428198:	mov	w9, #0x1                   	// #1
  42819c:	dup	v0.2d, x9
  4281a0:	str	x3, [sp, #32]
  4281a4:	str	w4, [sp, #40]
  4281a8:	str	q0, [sp, #16]
  4281ac:	mov	w9, #0x28                  	// #40
  4281b0:	madd	x19, x28, x9, x8
  4281b4:	b	4281c4 <_obstack_memory_used@@Base+0xe030>
  4281b8:	ldrb	w8, [x19, #32]
  4281bc:	add	x19, x19, #0x28
  4281c0:	cbz	w8, 42857c <_obstack_memory_used@@Base+0xe3e8>
  4281c4:	ldr	x8, [x24, #8]
  4281c8:	subs	x9, x8, #0x1
  4281cc:	b.lt	4281b8 <_obstack_memory_used@@Base+0xe024>  // b.tstop
  4281d0:	ldr	x10, [x19]
  4281d4:	ldr	x8, [x24, #16]
  4281d8:	mov	x11, xzr
  4281dc:	b.eq	428204 <_obstack_memory_used@@Base+0xe070>  // b.none
  4281e0:	mov	x12, x9
  4281e4:	add	x13, x11, x12
  4281e8:	lsr	x13, x13, #1
  4281ec:	ldr	x14, [x8, x13, lsl #3]
  4281f0:	cmp	x14, x10
  4281f4:	csinc	x11, x11, x13, ge  // ge = tcont
  4281f8:	csel	x12, x12, x13, lt  // lt = tstop
  4281fc:	cmp	x11, x12
  428200:	b.cc	4281e4 <_obstack_memory_used@@Base+0xe050>  // b.lo, b.ul, b.last
  428204:	ldr	x11, [x8, x11, lsl #3]
  428208:	cmp	x11, x10
  42820c:	b.ne	4281b8 <_obstack_memory_used@@Base+0xe024>  // b.any
  428210:	ldp	x12, x11, [x19, #16]
  428214:	add	x11, x11, x21
  428218:	sub	x20, x11, x12
  42821c:	cmp	x20, x21
  428220:	b.ne	4282e0 <_obstack_memory_used@@Base+0xe14c>  // b.any
  428224:	ldr	x11, [x26, #40]
  428228:	mov	w12, #0x18                  	// #24
  42822c:	madd	x10, x10, x12, x11
  428230:	ldr	x10, [x10, #16]
  428234:	ldr	x20, [x10]
  428238:	mov	x10, xzr
  42823c:	cbz	x9, 428260 <_obstack_memory_used@@Base+0xe0cc>
  428240:	add	x11, x10, x9
  428244:	lsr	x11, x11, #1
  428248:	ldr	x12, [x8, x11, lsl #3]
  42824c:	cmp	x12, x20
  428250:	csinc	x10, x10, x11, ge  // ge = tcont
  428254:	csel	x9, x9, x11, lt  // lt = tstop
  428258:	cmp	x10, x9
  42825c:	b.cc	428240 <_obstack_memory_used@@Base+0xe0ac>  // b.lo, b.ul, b.last
  428260:	ldr	x8, [x8, x10, lsl #3]
  428264:	cmp	x8, x20
  428268:	b.eq	42833c <_obstack_memory_used@@Base+0xe1a8>  // b.none
  42826c:	ldr	q0, [sp, #16]
  428270:	mov	w0, #0x8                   	// #8
  428274:	stur	q0, [x29, #-32]
  428278:	bl	4023a0 <malloc@plt>
  42827c:	stur	x0, [x29, #-16]
  428280:	cbz	x0, 4284e4 <_obstack_memory_used@@Base+0xe350>
  428284:	mov	w23, wzr
  428288:	str	x20, [x0]
  42828c:	ldr	x2, [sp, #32]
  428290:	ldr	w3, [sp, #40]
  428294:	sub	x1, x29, #0x20
  428298:	mov	x0, x26
  42829c:	stur	w23, [x29, #-4]
  4282a0:	mov	x20, x26
  4282a4:	bl	427fb0 <_obstack_memory_used@@Base+0xde1c>
  4282a8:	mov	w26, w0
  4282ac:	sub	x1, x29, #0x20
  4282b0:	mov	x0, x24
  4282b4:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  4282b8:	ldur	x8, [x29, #-16]
  4282bc:	mov	w27, w0
  4282c0:	mov	x0, x8
  4282c4:	bl	402620 <free@plt>
  4282c8:	orr	w8, w26, w23
  4282cc:	orr	w8, w8, w27
  4282d0:	cbnz	w8, 4284f0 <_obstack_memory_used@@Base+0xe35c>
  4282d4:	mov	w8, #0x2                   	// #2
  4282d8:	mov	x26, x20
  4282dc:	b	4284d4 <_obstack_memory_used@@Base+0xe340>
  4282e0:	ldr	x8, [x22, #184]
  4282e4:	ldr	x9, [x26, #24]
  4282e8:	ldr	x27, [x8, x20, lsl #3]
  4282ec:	ldr	x23, [x9, x10, lsl #3]
  4282f0:	cbz	x27, 428344 <_obstack_memory_used@@Base+0xe1b0>
  4282f4:	ldr	x25, [x27, #16]
  4282f8:	cmp	x25, #0x0
  4282fc:	b.le	42836c <_obstack_memory_used@@Base+0xe1d8>
  428300:	ldr	x8, [x27, #24]
  428304:	mov	x10, xzr
  428308:	subs	x9, x25, #0x1
  42830c:	b.eq	428330 <_obstack_memory_used@@Base+0xe19c>  // b.none
  428310:	add	x11, x10, x9
  428314:	lsr	x11, x11, #1
  428318:	ldr	x12, [x8, x11, lsl #3]
  42831c:	cmp	x12, x23
  428320:	csinc	x10, x10, x11, ge  // ge = tcont
  428324:	csel	x9, x9, x11, lt  // lt = tstop
  428328:	cmp	x10, x9
  42832c:	b.cc	428310 <_obstack_memory_used@@Base+0xe17c>  // b.lo, b.ul, b.last
  428330:	ldr	x8, [x8, x10, lsl #3]
  428334:	cmp	x8, x23
  428338:	b.ne	428374 <_obstack_memory_used@@Base+0xe1e0>  // b.any
  42833c:	mov	w8, #0x4                   	// #4
  428340:	b	4284d4 <_obstack_memory_used@@Base+0xe340>
  428344:	mov	w8, #0x1                   	// #1
  428348:	dup	v0.2d, x8
  42834c:	mov	w0, #0x8                   	// #8
  428350:	stur	q0, [x29, #-32]
  428354:	bl	4023a0 <malloc@plt>
  428358:	stur	x0, [x29, #-16]
  42835c:	cbz	x0, 428514 <_obstack_memory_used@@Base+0xe380>
  428360:	str	x23, [x0]
  428364:	stur	wzr, [x29, #-4]
  428368:	b	428480 <_obstack_memory_used@@Base+0xe2ec>
  42836c:	stur	x25, [x29, #-24]
  428370:	b	428404 <_obstack_memory_used@@Base+0xe270>
  428374:	cmp	x25, #0x1
  428378:	stur	x25, [x29, #-24]
  42837c:	b.lt	428404 <_obstack_memory_used@@Base+0xe270>  // b.tstop
  428380:	lsl	x0, x25, #3
  428384:	stur	x25, [x29, #-32]
  428388:	stp	x0, x26, [sp]
  42838c:	bl	4023a0 <malloc@plt>
  428390:	stur	x0, [x29, #-16]
  428394:	cbz	x0, 42853c <_obstack_memory_used@@Base+0xe3a8>
  428398:	ldr	x1, [x27, #24]
  42839c:	ldr	x2, [sp]
  4283a0:	mov	x26, x0
  4283a4:	bl	402210 <memcpy@plt>
  4283a8:	lsl	x8, x25, #1
  4283ac:	lsl	x1, x25, #4
  4283b0:	mov	x0, x26
  4283b4:	stur	wzr, [x29, #-4]
  4283b8:	stur	x8, [x29, #-32]
  4283bc:	bl	4024c0 <realloc@plt>
  4283c0:	cbz	x0, 42854c <_obstack_memory_used@@Base+0xe3b8>
  4283c4:	ldr	x9, [x0]
  4283c8:	ldur	x8, [x29, #-24]
  4283cc:	ldr	x26, [sp, #8]
  4283d0:	stur	x0, [x29, #-16]
  4283d4:	cmp	x9, x23
  4283d8:	b.le	428440 <_obstack_memory_used@@Base+0xe2ac>
  4283dc:	cmp	x8, #0x1
  4283e0:	b.lt	428470 <_obstack_memory_used@@Base+0xe2dc>  // b.tstop
  4283e4:	mov	x10, x8
  4283e8:	add	x11, x0, x10, lsl #3
  4283ec:	ldur	x12, [x11, #-8]
  4283f0:	subs	x9, x10, #0x1
  4283f4:	mov	x10, x9
  4283f8:	str	x12, [x11]
  4283fc:	b.gt	4283e8 <_obstack_memory_used@@Base+0xe254>
  428400:	b	428474 <_obstack_memory_used@@Base+0xe2e0>
  428404:	mov	w25, wzr
  428408:	stp	xzr, xzr, [x29, #-32]
  42840c:	stur	xzr, [x29, #-16]
  428410:	mov	w8, #0x1                   	// #1
  428414:	dup	v0.2d, x8
  428418:	mov	w0, #0x8                   	// #8
  42841c:	stur	w25, [x29, #-4]
  428420:	stur	q0, [x29, #-32]
  428424:	bl	4023a0 <malloc@plt>
  428428:	stur	x0, [x29, #-16]
  42842c:	cbz	x0, 428530 <_obstack_memory_used@@Base+0xe39c>
  428430:	str	x23, [x0]
  428434:	cbz	w25, 428480 <_obstack_memory_used@@Base+0xe2ec>
  428438:	bl	402620 <free@plt>
  42843c:	b	42855c <_obstack_memory_used@@Base+0xe3c8>
  428440:	add	x9, x0, x8, lsl #3
  428444:	ldur	x10, [x9, #-8]
  428448:	mov	x9, x8
  42844c:	cmp	x10, x23
  428450:	b.le	428474 <_obstack_memory_used@@Base+0xe2e0>
  428454:	add	x11, x0, x9, lsl #3
  428458:	str	x10, [x11]
  42845c:	ldur	x10, [x11, #-16]
  428460:	sub	x9, x9, #0x1
  428464:	cmp	x10, x23
  428468:	b.gt	428454 <_obstack_memory_used@@Base+0xe2c0>
  42846c:	b	428474 <_obstack_memory_used@@Base+0xe2e0>
  428470:	mov	x9, x8
  428474:	add	x8, x8, #0x1
  428478:	str	x23, [x0, x9, lsl #3]
  42847c:	stur	x8, [x29, #-24]
  428480:	sub	x0, x29, #0x4
  428484:	sub	x2, x29, #0x20
  428488:	mov	x1, x26
  42848c:	bl	4286d8 <_obstack_memory_used@@Base+0xe544>
  428490:	ldr	x8, [x22, #184]
  428494:	lsl	x20, x20, #3
  428498:	str	x0, [x8, x20]
  42849c:	ldur	x0, [x29, #-16]
  4284a0:	bl	402620 <free@plt>
  4284a4:	ldr	x8, [x22, #184]
  4284a8:	ldur	w9, [x29, #-4]
  4284ac:	ldr	x8, [x8, x20]
  4284b0:	cmp	x8, #0x0
  4284b4:	cset	w10, eq  // eq = none
  4284b8:	cmp	w9, #0x0
  4284bc:	cset	w11, ne  // ne = any
  4284c0:	and	w8, w10, w11
  4284c4:	tst	w10, w11
  4284c8:	ldur	w10, [x29, #-36]
  4284cc:	csel	w10, w9, w10, ne  // ne = any
  4284d0:	stur	w10, [x29, #-36]
  4284d4:	cbz	w8, 4281b8 <_obstack_memory_used@@Base+0xe024>
  4284d8:	cmp	w8, #0x4
  4284dc:	b.eq	4281b8 <_obstack_memory_used@@Base+0xe024>  // b.none
  4284e0:	b	42856c <_obstack_memory_used@@Base+0xe3d8>
  4284e4:	stp	xzr, xzr, [x29, #-32]
  4284e8:	mov	w23, #0xc                   	// #12
  4284ec:	b	42828c <_obstack_memory_used@@Base+0xe0f8>
  4284f0:	cmp	w26, #0x0
  4284f4:	csel	w8, w27, w26, eq  // eq = none
  4284f8:	cmp	w23, #0x0
  4284fc:	csel	w8, w8, w23, eq  // eq = none
  428500:	stur	w8, [x29, #-36]
  428504:	stur	w8, [x29, #-4]
  428508:	mov	w8, #0x1                   	// #1
  42850c:	mov	x26, x20
  428510:	b	4284d4 <_obstack_memory_used@@Base+0xe340>
  428514:	mov	w9, #0xc                   	// #12
  428518:	mov	w8, #0xc                   	// #12
  42851c:	stp	xzr, xzr, [x29, #-32]
  428520:	stur	w8, [x29, #-36]
  428524:	stur	w9, [x29, #-4]
  428528:	mov	w8, #0x1                   	// #1
  42852c:	b	4284d4 <_obstack_memory_used@@Base+0xe340>
  428530:	stp	xzr, xzr, [x29, #-32]
  428534:	cbnz	w25, 42855c <_obstack_memory_used@@Base+0xe3c8>
  428538:	b	428558 <_obstack_memory_used@@Base+0xe3c4>
  42853c:	ldr	x26, [sp, #8]
  428540:	mov	w25, #0xc                   	// #12
  428544:	stp	xzr, xzr, [x29, #-32]
  428548:	b	428410 <_obstack_memory_used@@Base+0xe27c>
  42854c:	ldur	x0, [x29, #-16]
  428550:	bl	402620 <free@plt>
  428554:	ldr	x26, [sp, #8]
  428558:	mov	w25, #0xc                   	// #12
  42855c:	stur	w25, [x29, #-4]
  428560:	mov	w8, #0x1                   	// #1
  428564:	stur	w25, [x29, #-36]
  428568:	b	4284d4 <_obstack_memory_used@@Base+0xe340>
  42856c:	cmp	w8, #0x2
  428570:	b.ne	4285a0 <_obstack_memory_used@@Base+0xe40c>  // b.any
  428574:	ldr	x8, [x22, #216]
  428578:	b	4281ac <_obstack_memory_used@@Base+0xe018>
  42857c:	mov	w0, wzr
  428580:	ldp	x20, x19, [sp, #160]
  428584:	ldp	x22, x21, [sp, #144]
  428588:	ldp	x24, x23, [sp, #128]
  42858c:	ldp	x26, x25, [sp, #112]
  428590:	ldp	x28, x27, [sp, #96]
  428594:	ldp	x29, x30, [sp, #80]
  428598:	add	sp, sp, #0xb0
  42859c:	ret
  4285a0:	ldur	w0, [x29, #-36]
  4285a4:	b	428580 <_obstack_memory_used@@Base+0xe3ec>
  4285a8:	stp	x29, x30, [sp, #-64]!
  4285ac:	stp	x24, x23, [sp, #16]
  4285b0:	stp	x22, x21, [sp, #32]
  4285b4:	stp	x20, x19, [sp, #48]
  4285b8:	mov	w21, w4
  4285bc:	mov	x22, x3
  4285c0:	mov	x19, x2
  4285c4:	mov	x20, x1
  4285c8:	mov	x23, x0
  4285cc:	mov	w24, #0x18                  	// #24
  4285d0:	mov	x29, sp
  4285d4:	b	4285e8 <_obstack_memory_used@@Base+0xe454>
  4285d8:	cbz	x9, 4286b8 <_obstack_memory_used@@Base+0xe524>
  4285dc:	madd	x8, x19, x24, x8
  4285e0:	ldr	x8, [x8, #16]
  4285e4:	ldr	x19, [x8]
  4285e8:	ldr	x8, [x20, #8]
  4285ec:	subs	x9, x8, #0x1
  4285f0:	b.lt	42862c <_obstack_memory_used@@Base+0xe498>  // b.tstop
  4285f4:	ldr	x8, [x20, #16]
  4285f8:	mov	x10, xzr
  4285fc:	b.eq	428620 <_obstack_memory_used@@Base+0xe48c>  // b.none
  428600:	add	x11, x10, x9
  428604:	lsr	x11, x11, #1
  428608:	ldr	x12, [x8, x11, lsl #3]
  42860c:	cmp	x12, x19
  428610:	csinc	x10, x10, x11, ge  // ge = tcont
  428614:	csel	x9, x9, x11, lt  // lt = tstop
  428618:	cmp	x10, x9
  42861c:	b.cc	428600 <_obstack_memory_used@@Base+0xe46c>  // b.lo, b.ul, b.last
  428620:	ldr	x8, [x8, x10, lsl #3]
  428624:	cmp	x8, x19
  428628:	b.eq	4286b8 <_obstack_memory_used@@Base+0xe524>  // b.none
  42862c:	ldr	x8, [x23]
  428630:	add	x9, x8, x19, lsl #4
  428634:	ldrb	w9, [x9, #8]
  428638:	cmp	w9, w21
  42863c:	b.ne	428650 <_obstack_memory_used@@Base+0xe4bc>  // b.any
  428640:	lsl	x9, x19, #4
  428644:	ldr	x8, [x8, x9]
  428648:	cmp	x8, x22
  42864c:	b.eq	4286a0 <_obstack_memory_used@@Base+0xe50c>  // b.none
  428650:	mov	x0, x20
  428654:	mov	x1, x19
  428658:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  42865c:	tbz	w0, #0, 4286d0 <_obstack_memory_used@@Base+0xe53c>
  428660:	ldr	x8, [x23, #40]
  428664:	madd	x9, x19, x24, x8
  428668:	ldr	x9, [x9, #8]
  42866c:	cmp	x9, #0x2
  428670:	b.ne	4285d8 <_obstack_memory_used@@Base+0xe444>  // b.any
  428674:	madd	x8, x19, x24, x8
  428678:	ldr	x8, [x8, #16]
  42867c:	mov	x0, x23
  428680:	mov	x1, x20
  428684:	mov	x3, x22
  428688:	ldr	x2, [x8, #8]
  42868c:	mov	w4, w21
  428690:	bl	4285a8 <_obstack_memory_used@@Base+0xe414>
  428694:	cbnz	w0, 4286bc <_obstack_memory_used@@Base+0xe528>
  428698:	ldr	x8, [x23, #40]
  42869c:	b	4285dc <_obstack_memory_used@@Base+0xe448>
  4286a0:	cmp	w21, #0x9
  4286a4:	b.ne	4286b8 <_obstack_memory_used@@Base+0xe524>  // b.any
  4286a8:	mov	x0, x20
  4286ac:	mov	x1, x19
  4286b0:	bl	4242b4 <_obstack_memory_used@@Base+0xa120>
  4286b4:	tbz	w0, #0, 4286d0 <_obstack_memory_used@@Base+0xe53c>
  4286b8:	mov	w0, wzr
  4286bc:	ldp	x20, x19, [sp, #48]
  4286c0:	ldp	x22, x21, [sp, #32]
  4286c4:	ldp	x24, x23, [sp, #16]
  4286c8:	ldp	x29, x30, [sp], #64
  4286cc:	ret
  4286d0:	mov	w0, #0xc                   	// #12
  4286d4:	b	4286bc <_obstack_memory_used@@Base+0xe528>
  4286d8:	stp	x29, x30, [sp, #-80]!
  4286dc:	stp	x26, x25, [sp, #16]
  4286e0:	stp	x24, x23, [sp, #32]
  4286e4:	stp	x22, x21, [sp, #48]
  4286e8:	stp	x20, x19, [sp, #64]
  4286ec:	ldr	x25, [x2, #8]
  4286f0:	mov	x19, x0
  4286f4:	mov	x29, sp
  4286f8:	cbz	x25, 428924 <_obstack_memory_used@@Base+0xe790>
  4286fc:	mov	x22, x2
  428700:	mov	x20, x1
  428704:	subs	x8, x25, #0x1
  428708:	mov	x21, x25
  42870c:	b.lt	428784 <_obstack_memory_used@@Base+0xe5f0>  // b.tstop
  428710:	ldr	x9, [x22, #16]
  428714:	cmp	x25, #0x4
  428718:	b.cs	428728 <_obstack_memory_used@@Base+0xe594>  // b.hs, b.nlast
  42871c:	mov	x10, xzr
  428720:	mov	x21, x25
  428724:	b	42876c <_obstack_memory_used@@Base+0xe5d8>
  428728:	and	x10, x25, #0xfffffffffffffffc
  42872c:	movi	v1.2d, #0x0
  428730:	movi	v0.2d, #0x0
  428734:	mov	v1.d[0], x25
  428738:	add	x11, x9, #0x10
  42873c:	mov	x12, x10
  428740:	ldp	q2, q3, [x11, #-16]
  428744:	subs	x12, x12, #0x4
  428748:	add	x11, x11, #0x20
  42874c:	add	v1.2d, v2.2d, v1.2d
  428750:	add	v0.2d, v3.2d, v0.2d
  428754:	b.ne	428740 <_obstack_memory_used@@Base+0xe5ac>  // b.any
  428758:	add	v0.2d, v0.2d, v1.2d
  42875c:	addp	d0, v0.2d
  428760:	cmp	x25, x10
  428764:	fmov	x21, d0
  428768:	b.eq	428784 <_obstack_memory_used@@Base+0xe5f0>  // b.none
  42876c:	sub	x11, x25, x10
  428770:	add	x9, x9, x10, lsl #3
  428774:	ldr	x10, [x9], #8
  428778:	subs	x11, x11, #0x1
  42877c:	add	x21, x10, x21
  428780:	b.ne	428774 <_obstack_memory_used@@Base+0xe5e0>  // b.any
  428784:	ldr	x9, [x20, #136]
  428788:	ldr	x10, [x20, #64]
  42878c:	and	x11, x9, x21
  428790:	mov	w9, #0x18                  	// #24
  428794:	mul	x9, x11, x9
  428798:	ldr	x9, [x10, x9]
  42879c:	cmp	x9, #0x1
  4287a0:	b.lt	428818 <_obstack_memory_used@@Base+0xe684>  // b.tstop
  4287a4:	cbz	x22, 428818 <_obstack_memory_used@@Base+0xe684>
  4287a8:	mov	w12, #0x18                  	// #24
  4287ac:	madd	x10, x11, x12, x10
  4287b0:	ldr	x10, [x10, #16]
  4287b4:	mov	x11, xzr
  4287b8:	b	4287c8 <_obstack_memory_used@@Base+0xe634>
  4287bc:	add	x11, x11, #0x1
  4287c0:	cmp	x11, x9
  4287c4:	b.ge	428818 <_obstack_memory_used@@Base+0xe684>  // b.tcont
  4287c8:	ldr	x23, [x10, x11, lsl #3]
  4287cc:	ldr	x12, [x23]
  4287d0:	cmp	x21, x12
  4287d4:	b.ne	4287bc <_obstack_memory_used@@Base+0xe628>  // b.any
  4287d8:	ldr	x12, [x23, #16]
  4287dc:	cmp	x12, x25
  4287e0:	b.ne	4287bc <_obstack_memory_used@@Base+0xe628>  // b.any
  4287e4:	mov	x12, x8
  4287e8:	add	x13, x12, #0x1
  4287ec:	cmp	x13, #0x1
  4287f0:	b.lt	428908 <_obstack_memory_used@@Base+0xe774>  // b.tstop
  4287f4:	ldr	x13, [x23, #24]
  4287f8:	ldr	x14, [x22, #16]
  4287fc:	lsl	x15, x12, #3
  428800:	sub	x12, x12, #0x1
  428804:	ldr	x13, [x13, x15]
  428808:	ldr	x14, [x14, x15]
  42880c:	cmp	x13, x14
  428810:	b.eq	4287e8 <_obstack_memory_used@@Base+0xe654>  // b.none
  428814:	b	4287bc <_obstack_memory_used@@Base+0xe628>
  428818:	mov	w0, #0x70                  	// #112
  42881c:	mov	w1, #0x1                   	// #1
  428820:	bl	402480 <calloc@plt>
  428824:	cbz	x0, 428944 <_obstack_memory_used@@Base+0xe7b0>
  428828:	mov	x23, x0
  42882c:	add	x26, x0, #0x8
  428830:	cmp	x25, #0x1
  428834:	str	x25, [x0, #16]
  428838:	b.lt	4288e8 <_obstack_memory_used@@Base+0xe754>  // b.tstop
  42883c:	lsl	x24, x25, #3
  428840:	mov	x0, x24
  428844:	str	x25, [x23, #8]
  428848:	bl	4023a0 <malloc@plt>
  42884c:	str	x0, [x23, #24]
  428850:	cbz	x0, 42893c <_obstack_memory_used@@Base+0xe7a8>
  428854:	ldr	x22, [x22, #16]
  428858:	mov	x2, x24
  42885c:	mov	x1, x22
  428860:	bl	402210 <memcpy@plt>
  428864:	str	x26, [x23, #80]
  428868:	ldr	x8, [x20]
  42886c:	mov	w9, wzr
  428870:	b	428894 <_obstack_memory_used@@Base+0xe700>
  428874:	ldr	w10, [x10]
  428878:	tst	w10, #0x3ff00
  42887c:	b.eq	428888 <_obstack_memory_used@@Base+0xe6f4>  // b.none
  428880:	orr	w9, w9, #0xffffff80
  428884:	strb	w9, [x23, #104]
  428888:	subs	x25, x25, #0x1
  42888c:	add	x22, x22, #0x8
  428890:	b.eq	4288f4 <_obstack_memory_used@@Base+0xe760>  // b.none
  428894:	ldr	x10, [x22]
  428898:	add	x10, x8, x10, lsl #4
  42889c:	ldr	w11, [x10, #8]!
  4288a0:	and	w12, w11, #0x3ffff
  4288a4:	cmp	w12, #0x1
  4288a8:	b.eq	428888 <_obstack_memory_used@@Base+0xe6f4>  // b.none
  4288ac:	lsr	w12, w11, #15
  4288b0:	and	w11, w11, #0xff
  4288b4:	and	w12, w12, #0x20
  4288b8:	orr	w9, w12, w9
  4288bc:	cmp	w11, #0xc
  4288c0:	strb	w9, [x23, #104]
  4288c4:	b.eq	428880 <_obstack_memory_used@@Base+0xe6ec>  // b.none
  4288c8:	cmp	w11, #0x4
  4288cc:	b.eq	4288e0 <_obstack_memory_used@@Base+0xe74c>  // b.none
  4288d0:	cmp	w11, #0x2
  4288d4:	b.ne	428874 <_obstack_memory_used@@Base+0xe6e0>  // b.any
  4288d8:	orr	w9, w9, #0x10
  4288dc:	b	428884 <_obstack_memory_used@@Base+0xe6f0>
  4288e0:	orr	w9, w9, #0x40
  4288e4:	b	428884 <_obstack_memory_used@@Base+0xe6f0>
  4288e8:	stp	xzr, xzr, [x26]
  4288ec:	str	xzr, [x26, #16]
  4288f0:	str	x26, [x23, #80]
  4288f4:	mov	x0, x20
  4288f8:	mov	x1, x23
  4288fc:	mov	x2, x21
  428900:	bl	424cc0 <_obstack_memory_used@@Base+0xab2c>
  428904:	cbnz	w0, 428930 <_obstack_memory_used@@Base+0xe79c>
  428908:	mov	x0, x23
  42890c:	ldp	x20, x19, [sp, #64]
  428910:	ldp	x22, x21, [sp, #48]
  428914:	ldp	x24, x23, [sp, #32]
  428918:	ldp	x26, x25, [sp, #16]
  42891c:	ldp	x29, x30, [sp], #80
  428920:	ret
  428924:	mov	x23, xzr
  428928:	str	wzr, [x19]
  42892c:	b	428908 <_obstack_memory_used@@Base+0xe774>
  428930:	mov	x0, x23
  428934:	bl	41ed90 <_obstack_memory_used@@Base+0x4bfc>
  428938:	b	428944 <_obstack_memory_used@@Base+0xe7b0>
  42893c:	mov	x0, x23
  428940:	bl	402620 <free@plt>
  428944:	mov	x23, xzr
  428948:	mov	w8, #0xc                   	// #12
  42894c:	str	w8, [x19]
  428950:	b	428908 <_obstack_memory_used@@Base+0xe774>
  428954:	stp	x29, x30, [sp, #-48]!
  428958:	stp	x22, x21, [sp, #16]
  42895c:	stp	x20, x19, [sp, #32]
  428960:	ldr	x8, [x0]
  428964:	mov	x29, sp
  428968:	add	x9, x8, x1, lsl #4
  42896c:	ldrb	w10, [x9, #8]
  428970:	cmp	w10, #0x7
  428974:	b.eq	428ba8 <_obstack_memory_used@@Base+0xea14>  // b.none
  428978:	ldr	w9, [x2, #144]
  42897c:	cmp	w9, #0x1
  428980:	b.ne	4289e4 <_obstack_memory_used@@Base+0xe850>  // b.any
  428984:	mov	w20, #0x1                   	// #1
  428988:	cmp	w10, #0x5
  42898c:	b.eq	428a30 <_obstack_memory_used@@Base+0xe89c>  // b.none
  428990:	cmp	w10, #0x6
  428994:	mov	w0, wzr
  428998:	b.ne	428b50 <_obstack_memory_used@@Base+0xe9bc>  // b.any
  42899c:	cmp	w20, #0x2
  4289a0:	b.lt	428b50 <_obstack_memory_used@@Base+0xe9bc>  // b.tstop
  4289a4:	lsl	x10, x1, #4
  4289a8:	ldr	x21, [x8, x10]
  4289ac:	ldr	x8, [x21, #64]
  4289b0:	cbnz	x8, 4289c4 <_obstack_memory_used@@Base+0xe830>
  4289b4:	ldr	x10, [x21, #72]
  4289b8:	cbnz	x10, 4289c4 <_obstack_memory_used@@Base+0xe830>
  4289bc:	ldr	x10, [x21, #40]
  4289c0:	cbz	x10, 428b94 <_obstack_memory_used@@Base+0xea00>
  4289c4:	cmp	w9, #0x1
  4289c8:	b.ne	428a8c <_obstack_memory_used@@Base+0xe8f8>  // b.any
  4289cc:	ldr	x9, [x2, #8]
  4289d0:	ldrb	w19, [x9, x3]
  4289d4:	ldr	x9, [x21, #40]
  4289d8:	cmp	x9, #0x1
  4289dc:	b.ge	428aa0 <_obstack_memory_used@@Base+0xe90c>  // b.tcont
  4289e0:	b	428ac0 <_obstack_memory_used@@Base+0xe92c>
  4289e4:	ldr	x11, [x2, #48]
  4289e8:	add	x12, x3, #0x1
  4289ec:	cmp	x12, x11
  4289f0:	b.ge	428a24 <_obstack_memory_used@@Base+0xe890>  // b.tcont
  4289f4:	ldr	x13, [x2, #16]
  4289f8:	sub	w20, w11, w3
  4289fc:	sub	x12, x11, x3
  428a00:	mov	w11, #0x1                   	// #1
  428a04:	add	x13, x13, x3, lsl #2
  428a08:	ldr	w14, [x13, x11, lsl #2]
  428a0c:	cmn	w14, #0x1
  428a10:	b.ne	428a7c <_obstack_memory_used@@Base+0xe8e8>  // b.any
  428a14:	add	x11, x11, #0x1
  428a18:	cmp	x12, x11
  428a1c:	b.ne	428a08 <_obstack_memory_used@@Base+0xe874>  // b.any
  428a20:	b	428a28 <_obstack_memory_used@@Base+0xe894>
  428a24:	mov	w20, #0x1                   	// #1
  428a28:	cmp	w10, #0x5
  428a2c:	b.ne	428990 <_obstack_memory_used@@Base+0xe7fc>  // b.any
  428a30:	cmp	w20, #0x2
  428a34:	b.ge	428a40 <_obstack_memory_used@@Base+0xe8ac>  // b.tcont
  428a38:	mov	w0, wzr
  428a3c:	b	428b50 <_obstack_memory_used@@Base+0xe9bc>
  428a40:	ldr	x8, [x0, #216]
  428a44:	tbnz	w8, #6, 428a58 <_obstack_memory_used@@Base+0xe8c4>
  428a48:	ldr	x9, [x2, #8]
  428a4c:	ldrb	w9, [x9, x3]
  428a50:	cmp	w9, #0xa
  428a54:	b.eq	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.none
  428a58:	tbz	w8, #7, 428a68 <_obstack_memory_used@@Base+0xe8d4>
  428a5c:	ldr	x8, [x2, #8]
  428a60:	ldrb	w8, [x8, x3]
  428a64:	cbz	w8, 428b68 <_obstack_memory_used@@Base+0xe9d4>
  428a68:	mov	w0, w20
  428a6c:	ldp	x20, x19, [sp, #32]
  428a70:	ldp	x22, x21, [sp, #16]
  428a74:	ldp	x29, x30, [sp], #48
  428a78:	ret
  428a7c:	mov	w20, w11
  428a80:	cmp	w10, #0x5
  428a84:	b.eq	428a30 <_obstack_memory_used@@Base+0xe89c>  // b.none
  428a88:	b	428990 <_obstack_memory_used@@Base+0xe7fc>
  428a8c:	ldr	x9, [x2, #16]
  428a90:	ldr	w19, [x9, x3, lsl #2]
  428a94:	ldr	x9, [x21, #40]
  428a98:	cmp	x9, #0x1
  428a9c:	b.lt	428ac0 <_obstack_memory_used@@Base+0xe92c>  // b.tstop
  428aa0:	ldr	x10, [x21]
  428aa4:	mov	x11, xzr
  428aa8:	ldr	w12, [x10, x11, lsl #2]
  428aac:	cmp	w19, w12
  428ab0:	b.eq	428b34 <_obstack_memory_used@@Base+0xe9a0>  // b.none
  428ab4:	add	x11, x11, #0x1
  428ab8:	cmp	x11, x9
  428abc:	b.lt	428aa8 <_obstack_memory_used@@Base+0xe914>  // b.tstop
  428ac0:	ldr	x9, [x21, #72]
  428ac4:	cmp	x9, #0x1
  428ac8:	b.lt	428af8 <_obstack_memory_used@@Base+0xe964>  // b.tstop
  428acc:	mov	x22, xzr
  428ad0:	ldr	x8, [x21, #24]
  428ad4:	mov	w0, w19
  428ad8:	ldr	x1, [x8, x22, lsl #3]
  428adc:	bl	402390 <iswctype@plt>
  428ae0:	cbnz	w0, 428b34 <_obstack_memory_used@@Base+0xe9a0>
  428ae4:	ldr	x8, [x21, #72]
  428ae8:	add	x22, x22, #0x1
  428aec:	cmp	x22, x8
  428af0:	b.lt	428ad0 <_obstack_memory_used@@Base+0xe93c>  // b.tstop
  428af4:	ldr	x8, [x21, #64]
  428af8:	cmp	x8, #0x1
  428afc:	b.lt	428b44 <_obstack_memory_used@@Base+0xe9b0>  // b.tstop
  428b00:	ldr	x9, [x21, #8]
  428b04:	mov	x10, xzr
  428b08:	b	428b18 <_obstack_memory_used@@Base+0xe984>
  428b0c:	add	x10, x10, #0x1
  428b10:	cmp	x10, x8
  428b14:	b.ge	428b44 <_obstack_memory_used@@Base+0xe9b0>  // b.tcont
  428b18:	ldr	w11, [x9, x10, lsl #2]
  428b1c:	cmp	w11, w19
  428b20:	b.hi	428b0c <_obstack_memory_used@@Base+0xe978>  // b.pmore
  428b24:	ldr	x11, [x21, #16]
  428b28:	ldr	w11, [x11, x10, lsl #2]
  428b2c:	cmp	w19, w11
  428b30:	b.hi	428b0c <_obstack_memory_used@@Base+0xe978>  // b.pmore
  428b34:	mov	w0, w20
  428b38:	ldrb	w8, [x21, #32]
  428b3c:	tbz	w8, #0, 428b50 <_obstack_memory_used@@Base+0xe9bc>
  428b40:	b	428b60 <_obstack_memory_used@@Base+0xe9cc>
  428b44:	mov	w0, wzr
  428b48:	ldrb	w8, [x21, #32]
  428b4c:	tbnz	w8, #0, 428b60 <_obstack_memory_used@@Base+0xe9cc>
  428b50:	ldp	x20, x19, [sp, #32]
  428b54:	ldp	x22, x21, [sp, #16]
  428b58:	ldp	x29, x30, [sp], #48
  428b5c:	ret
  428b60:	cmp	w0, #0x0
  428b64:	b.le	428b7c <_obstack_memory_used@@Base+0xe9e8>
  428b68:	mov	w0, wzr
  428b6c:	ldp	x20, x19, [sp, #32]
  428b70:	ldp	x22, x21, [sp, #16]
  428b74:	ldp	x29, x30, [sp], #48
  428b78:	ret
  428b7c:	cmp	w20, #0x1
  428b80:	csinc	w0, w20, wzr, gt
  428b84:	ldp	x20, x19, [sp, #32]
  428b88:	ldp	x22, x21, [sp, #16]
  428b8c:	ldp	x29, x30, [sp], #48
  428b90:	ret
  428b94:	mov	w19, wzr
  428b98:	ldr	x9, [x21, #40]
  428b9c:	cmp	x9, #0x1
  428ba0:	b.ge	428aa0 <_obstack_memory_used@@Base+0xe90c>  // b.tcont
  428ba4:	b	428ac0 <_obstack_memory_used@@Base+0xe92c>
  428ba8:	ldr	x8, [x2, #8]
  428bac:	ldrb	w10, [x8, x3]
  428bb0:	cmp	w10, #0xc2
  428bb4:	b.cc	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.lo, b.ul, b.last
  428bb8:	ldr	x9, [x2, #88]
  428bbc:	add	x11, x3, #0x2
  428bc0:	cmp	x11, x9
  428bc4:	b.gt	428b68 <_obstack_memory_used@@Base+0xe9d4>
  428bc8:	add	x11, x3, x8
  428bcc:	ldrb	w11, [x11, #1]
  428bd0:	cmp	w10, #0xdf
  428bd4:	b.hi	428c00 <_obstack_memory_used@@Base+0xea6c>  // b.pmore
  428bd8:	sxtb	w8, w11
  428bdc:	cmp	w11, #0xbf
  428be0:	mov	w9, #0xffffffff            	// #-1
  428be4:	ccmp	w8, w9, #0x0, ls  // ls = plast
  428be8:	mov	w8, #0x2                   	// #2
  428bec:	csel	w0, wzr, w8, gt
  428bf0:	ldp	x20, x19, [sp, #32]
  428bf4:	ldp	x22, x21, [sp, #16]
  428bf8:	ldp	x29, x30, [sp], #48
  428bfc:	ret
  428c00:	cmp	w10, #0xef
  428c04:	b.hi	428c20 <_obstack_memory_used@@Base+0xea8c>  // b.pmore
  428c08:	cmp	w10, #0xe0
  428c0c:	mov	w10, #0x3                   	// #3
  428c10:	b.ne	428c7c <_obstack_memory_used@@Base+0xeae8>  // b.any
  428c14:	cmp	w11, #0xa0
  428c18:	b.cc	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.lo, b.ul, b.last
  428c1c:	b	428c7c <_obstack_memory_used@@Base+0xeae8>
  428c20:	cmp	w10, #0xf7
  428c24:	b.hi	428c40 <_obstack_memory_used@@Base+0xeaac>  // b.pmore
  428c28:	cmp	w10, #0xf0
  428c2c:	mov	w10, #0x4                   	// #4
  428c30:	b.ne	428c7c <_obstack_memory_used@@Base+0xeae8>  // b.any
  428c34:	cmp	w11, #0x90
  428c38:	b.cc	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.lo, b.ul, b.last
  428c3c:	b	428c7c <_obstack_memory_used@@Base+0xeae8>
  428c40:	cmp	w10, #0xfb
  428c44:	b.hi	428c60 <_obstack_memory_used@@Base+0xeacc>  // b.pmore
  428c48:	cmp	w10, #0xf8
  428c4c:	mov	w10, #0x5                   	// #5
  428c50:	b.ne	428c7c <_obstack_memory_used@@Base+0xeae8>  // b.any
  428c54:	cmp	w11, #0x88
  428c58:	b.cc	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.lo, b.ul, b.last
  428c5c:	b	428c7c <_obstack_memory_used@@Base+0xeae8>
  428c60:	cmp	w10, #0xfd
  428c64:	b.hi	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.pmore
  428c68:	cmp	w10, #0xfc
  428c6c:	mov	w10, #0x6                   	// #6
  428c70:	b.ne	428c7c <_obstack_memory_used@@Base+0xeae8>  // b.any
  428c74:	cmp	w11, #0x84
  428c78:	b.cc	428b68 <_obstack_memory_used@@Base+0xe9d4>  // b.lo, b.ul, b.last
  428c7c:	add	x11, x10, x3
  428c80:	cmp	x11, x9
  428c84:	b.gt	428b68 <_obstack_memory_used@@Base+0xe9d4>
  428c88:	add	x8, x3, x8
  428c8c:	sub	x9, x10, #0x1
  428c90:	add	x8, x8, #0x1
  428c94:	ldrb	w11, [x8]
  428c98:	mov	w0, wzr
  428c9c:	sxtb	w12, w11
  428ca0:	tbz	w12, #31, 428b50 <_obstack_memory_used@@Base+0xe9bc>
  428ca4:	cmp	w11, #0xbf
  428ca8:	b.hi	428b50 <_obstack_memory_used@@Base+0xe9bc>  // b.pmore
  428cac:	subs	x9, x9, #0x1
  428cb0:	add	x8, x8, #0x1
  428cb4:	b.ne	428c94 <_obstack_memory_used@@Base+0xeb00>  // b.any
  428cb8:	mov	w0, w10
  428cbc:	ldp	x20, x19, [sp, #32]
  428cc0:	ldp	x22, x21, [sp, #16]
  428cc4:	ldp	x29, x30, [sp], #48
  428cc8:	ret
  428ccc:	sub	sp, sp, #0x30
  428cd0:	stp	x29, x30, [sp, #16]
  428cd4:	ldr	w10, [x1, #8]
  428cd8:	str	x19, [sp, #32]
  428cdc:	add	x29, sp, #0x10
  428ce0:	and	w8, w10, #0xff
  428ce4:	sub	w11, w8, #0x1
  428ce8:	cmp	w11, #0x6
  428cec:	mov	w8, wzr
  428cf0:	b.hi	428e54 <_obstack_memory_used@@Base+0xecc0>  // b.pmore
  428cf4:	ldr	x9, [x0, #8]
  428cf8:	adrp	x12, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  428cfc:	add	x12, x12, #0x1de
  428d00:	ldrb	w9, [x9, x2]
  428d04:	adr	x13, 428d14 <_obstack_memory_used@@Base+0xeb80>
  428d08:	ldrb	w14, [x12, x11]
  428d0c:	add	x13, x13, x14, lsl #2
  428d10:	br	x13
  428d14:	ldrb	w8, [x1]
  428d18:	cmp	w8, w9
  428d1c:	b.eq	428d70 <_obstack_memory_used@@Base+0xebdc>  // b.none
  428d20:	b	428e50 <_obstack_memory_used@@Base+0xecbc>
  428d24:	ldr	x8, [x1]
  428d28:	lsr	x11, x9, #3
  428d2c:	and	x11, x11, #0x18
  428d30:	ldr	x8, [x8, x11]
  428d34:	lsr	x8, x8, x9
  428d38:	tbnz	w8, #0, 428d70 <_obstack_memory_used@@Base+0xebdc>
  428d3c:	b	428e50 <_obstack_memory_used@@Base+0xecbc>
  428d40:	sxtb	w8, w9
  428d44:	tbnz	w8, #31, 428e50 <_obstack_memory_used@@Base+0xecbc>
  428d48:	cbz	w9, 428d64 <_obstack_memory_used@@Base+0xebd0>
  428d4c:	cmp	w9, #0xa
  428d50:	b.ne	428d70 <_obstack_memory_used@@Base+0xebdc>  // b.any
  428d54:	ldr	x8, [x0, #152]
  428d58:	ldrb	w8, [x8, #216]
  428d5c:	tbnz	w8, #6, 428d70 <_obstack_memory_used@@Base+0xebdc>
  428d60:	b	428e50 <_obstack_memory_used@@Base+0xecbc>
  428d64:	ldr	x8, [x0, #152]
  428d68:	ldrb	w8, [x8, #216]
  428d6c:	tbnz	w8, #7, 428e50 <_obstack_memory_used@@Base+0xecbc>
  428d70:	tst	w10, #0x3ff00
  428d74:	b.eq	428dc4 <_obstack_memory_used@@Base+0xec30>  // b.none
  428d78:	tbnz	x2, #63, 428db0 <_obstack_memory_used@@Base+0xec1c>
  428d7c:	ldr	x8, [x0, #88]
  428d80:	cmp	x8, x2
  428d84:	b.eq	428e88 <_obstack_memory_used@@Base+0xecf4>  // b.none
  428d88:	ldr	w8, [x0, #144]
  428d8c:	cmp	w8, #0x2
  428d90:	b.lt	428dcc <_obstack_memory_used@@Base+0xec38>  // b.tstop
  428d94:	ldr	x9, [x0, #16]
  428d98:	ldr	w8, [x9, x2, lsl #2]
  428d9c:	cmn	w8, #0x1
  428da0:	b.ne	428df0 <_obstack_memory_used@@Base+0xec5c>  // b.any
  428da4:	sub	x2, x2, #0x1
  428da8:	cmn	x2, #0x1
  428dac:	b.ne	428d98 <_obstack_memory_used@@Base+0xec04>  // b.any
  428db0:	ldr	w11, [x0, #112]
  428db4:	tst	w11, #0x1
  428db8:	cset	w12, eq  // eq = none
  428dbc:	tbnz	w10, #10, 428e38 <_obstack_memory_used@@Base+0xeca4>
  428dc0:	b	428e3c <_obstack_memory_used@@Base+0xeca8>
  428dc4:	mov	w8, #0x1                   	// #1
  428dc8:	b	428e54 <_obstack_memory_used@@Base+0xecc0>
  428dcc:	ldr	x8, [x0, #128]
  428dd0:	lsr	x11, x9, #3
  428dd4:	and	x11, x11, #0x18
  428dd8:	ldr	x8, [x8, x11]
  428ddc:	lsr	x8, x8, x9
  428de0:	tbz	w8, #0, 428e20 <_obstack_memory_used@@Base+0xec8c>
  428de4:	mov	w12, wzr
  428de8:	mov	w11, #0x1                   	// #1
  428dec:	b	428e3c <_obstack_memory_used@@Base+0xeca8>
  428df0:	ldrb	w9, [x0, #142]
  428df4:	cbnz	w9, 428ea8 <_obstack_memory_used@@Base+0xed14>
  428df8:	cmp	w8, #0xa
  428dfc:	b.ne	428e28 <_obstack_memory_used@@Base+0xec94>  // b.any
  428e00:	ldrb	w8, [x0, #141]
  428e04:	cmp	w8, #0x0
  428e08:	cset	w8, ne  // ne = any
  428e0c:	lsl	w11, w8, #1
  428e10:	tst	w11, #0x1
  428e14:	cset	w12, eq  // eq = none
  428e18:	tbnz	w10, #10, 428e38 <_obstack_memory_used@@Base+0xeca4>
  428e1c:	b	428e3c <_obstack_memory_used@@Base+0xeca8>
  428e20:	cmp	w9, #0xa
  428e24:	b.eq	428e00 <_obstack_memory_used@@Base+0xec6c>  // b.none
  428e28:	mov	w11, wzr
  428e2c:	tst	w11, #0x1
  428e30:	cset	w12, eq  // eq = none
  428e34:	tbz	w10, #10, 428e3c <_obstack_memory_used@@Base+0xeca8>
  428e38:	tbz	w11, #0, 428e50 <_obstack_memory_used@@Base+0xecbc>
  428e3c:	ldr	w8, [x1, #8]
  428e40:	tbnz	w12, #0, 428e48 <_obstack_memory_used@@Base+0xecb4>
  428e44:	tbnz	w8, #11, 428e50 <_obstack_memory_used@@Base+0xecbc>
  428e48:	tbnz	w11, #1, 428e68 <_obstack_memory_used@@Base+0xecd4>
  428e4c:	tbz	w8, #13, 428e68 <_obstack_memory_used@@Base+0xecd4>
  428e50:	mov	w8, wzr
  428e54:	mov	w0, w8
  428e58:	ldr	x19, [sp, #32]
  428e5c:	ldp	x29, x30, [sp, #16]
  428e60:	add	sp, sp, #0x30
  428e64:	ret
  428e68:	tst	w8, #0x8000
  428e6c:	cset	w8, eq  // eq = none
  428e70:	and	w9, w11, #0x8
  428e74:	orr	w0, w8, w9, lsr #3
  428e78:	ldr	x19, [sp, #32]
  428e7c:	ldp	x29, x30, [sp, #16]
  428e80:	add	sp, sp, #0x30
  428e84:	ret
  428e88:	ldr	w8, [x0, #160]
  428e8c:	mov	w9, #0xa                   	// #10
  428e90:	and	w8, w8, #0x2
  428e94:	eor	w11, w8, w9
  428e98:	tst	w11, #0x1
  428e9c:	cset	w12, eq  // eq = none
  428ea0:	tbnz	w10, #10, 428e38 <_obstack_memory_used@@Base+0xeca4>
  428ea4:	b	428e3c <_obstack_memory_used@@Base+0xeca8>
  428ea8:	str	x0, [sp]
  428eac:	mov	w0, w8
  428eb0:	stur	w10, [x29, #-4]
  428eb4:	str	x1, [x29, #24]
  428eb8:	mov	w19, w8
  428ebc:	bl	402710 <iswalnum@plt>
  428ec0:	mov	w12, wzr
  428ec4:	cmp	w19, #0x5f
  428ec8:	mov	w11, #0x1                   	// #1
  428ecc:	b.eq	428eec <_obstack_memory_used@@Base+0xed58>  // b.none
  428ed0:	mov	w9, w0
  428ed4:	ldr	x1, [x29, #24]
  428ed8:	ldr	x0, [sp]
  428edc:	ldur	w10, [x29, #-4]
  428ee0:	mov	w8, w19
  428ee4:	cbz	w9, 428df8 <_obstack_memory_used@@Base+0xec64>
  428ee8:	b	428e3c <_obstack_memory_used@@Base+0xeca8>
  428eec:	ldr	x1, [x29, #24]
  428ef0:	b	428e3c <_obstack_memory_used@@Base+0xeca8>
  428ef4:	sub	sp, sp, #0xd0
  428ef8:	stp	x29, x30, [sp, #112]
  428efc:	stp	x28, x27, [sp, #128]
  428f00:	stp	x26, x25, [sp, #144]
  428f04:	stp	x24, x23, [sp, #160]
  428f08:	stp	x22, x21, [sp, #176]
  428f0c:	stp	x20, x19, [sp, #192]
  428f10:	ldp	x19, x21, [x1, #16]
  428f14:	mov	w8, #0x1                   	// #1
  428f18:	add	x29, sp, #0x70
  428f1c:	mov	x22, x0
  428f20:	dup	v0.2d, x8
  428f24:	mov	w0, #0x8                   	// #8
  428f28:	mov	x20, x1
  428f2c:	stur	q0, [x29, #-32]
  428f30:	bl	4023a0 <malloc@plt>
  428f34:	stur	x0, [x29, #-16]
  428f38:	cbz	x0, 429500 <_obstack_memory_used@@Base+0xf36c>
  428f3c:	str	x19, [x0]
  428f40:	sub	x3, x29, #0x20
  428f44:	mov	x0, x22
  428f48:	mov	x1, x20
  428f4c:	mov	x2, x21
  428f50:	stp	x22, x20, [x29, #-48]
  428f54:	bl	429514 <_obstack_memory_used@@Base+0xf380>
  428f58:	cbnz	w0, 4294f8 <_obstack_memory_used@@Base+0xf364>
  428f5c:	mov	w8, #0x1                   	// #1
  428f60:	mov	w10, wzr
  428f64:	dup	v0.2d, x8
  428f68:	mov	w28, #0x28                  	// #40
  428f6c:	str	q0, [sp]
  428f70:	b	428f90 <_obstack_memory_used@@Base+0xedfc>
  428f74:	sub	x3, x29, #0x20
  428f78:	mov	x0, x15
  428f7c:	mov	x1, x14
  428f80:	mov	x2, x21
  428f84:	bl	429514 <_obstack_memory_used@@Base+0xf380>
  428f88:	ldr	w10, [sp, #20]
  428f8c:	cbnz	w0, 4294f8 <_obstack_memory_used@@Base+0xf364>
  428f90:	mov	x11, x21
  428f94:	subs	x21, x21, #0x1
  428f98:	b.lt	4294a0 <_obstack_memory_used@@Base+0xf30c>  // b.tstop
  428f9c:	ldp	x15, x14, [x29, #-48]
  428fa0:	ldr	x0, [x14]
  428fa4:	ldr	w9, [x15, #224]
  428fa8:	ldr	x8, [x0, x11, lsl #3]
  428fac:	cmp	x8, #0x0
  428fb0:	csinc	w10, wzr, w10, ne  // ne = any
  428fb4:	cmp	w10, w9
  428fb8:	b.gt	4294b0 <_obstack_memory_used@@Base+0xf31c>
  428fbc:	stur	xzr, [x29, #-24]
  428fc0:	ldr	x8, [x15, #184]
  428fc4:	str	w10, [sp, #20]
  428fc8:	ldr	x9, [x8, x21, lsl #3]
  428fcc:	cbz	x9, 428f74 <_obstack_memory_used@@Base+0xede0>
  428fd0:	ldr	x8, [x9, #40]
  428fd4:	cmp	x8, #0x1
  428fd8:	b.lt	428f74 <_obstack_memory_used@@Base+0xede0>  // b.tstop
  428fdc:	ldr	x8, [x15, #152]
  428fe0:	mov	x22, xzr
  428fe4:	str	x9, [sp, #32]
  428fe8:	stp	x11, x8, [sp, #48]
  428fec:	b	42902c <_obstack_memory_used@@Base+0xee98>
  428ff0:	ldur	x9, [x29, #-32]
  428ff4:	cbz	x9, 429260 <_obstack_memory_used@@Base+0xf0cc>
  428ff8:	ldur	x8, [x29, #-24]
  428ffc:	ldr	x19, [sp, #40]
  429000:	cbnz	x8, 429408 <_obstack_memory_used@@Base+0xf274>
  429004:	ldur	x8, [x29, #-16]
  429008:	str	x19, [x8]
  42900c:	ldur	x8, [x29, #-24]
  429010:	add	x8, x8, #0x1
  429014:	stur	x8, [x29, #-24]
  429018:	ldr	x9, [sp, #32]
  42901c:	add	x22, x22, #0x1
  429020:	ldr	x8, [x9, #40]
  429024:	cmp	x22, x8
  429028:	b.ge	428f74 <_obstack_memory_used@@Base+0xede0>  // b.tcont
  42902c:	ldr	x8, [x9, #48]
  429030:	ldr	x20, [x8, x22, lsl #3]
  429034:	ldr	x8, [sp, #56]
  429038:	ldr	x8, [x8]
  42903c:	add	x8, x8, x20, lsl #4
  429040:	ldrb	w8, [x8, #10]
  429044:	tbnz	w8, #4, 4290dc <_obstack_memory_used@@Base+0xef48>
  429048:	ldr	x8, [sp, #56]
  42904c:	mov	x0, x15
  429050:	mov	x2, x21
  429054:	mov	x19, x20
  429058:	ldr	x8, [x8]
  42905c:	add	x1, x8, x20, lsl #4
  429060:	bl	428ccc <_obstack_memory_used@@Base+0xeb38>
  429064:	ldr	x16, [sp, #48]
  429068:	ldp	x15, x14, [x29, #-48]
  42906c:	tbz	w0, #0, 429018 <_obstack_memory_used@@Base+0xee84>
  429070:	ldr	x8, [x14]
  429074:	ldr	x9, [x8, x16, lsl #3]
  429078:	cbz	x9, 429018 <_obstack_memory_used@@Base+0xee84>
  42907c:	ldr	x8, [x9, #16]
  429080:	subs	x10, x8, #0x1
  429084:	b.lt	429018 <_obstack_memory_used@@Base+0xee84>  // b.tstop
  429088:	ldr	x8, [sp, #56]
  42908c:	ldr	x9, [x9, #24]
  429090:	mov	x11, x19
  429094:	mov	x11, xzr
  429098:	ldr	x8, [x8, #24]
  42909c:	ldr	x8, [x8, x19, lsl #3]
  4290a0:	b.eq	4290c4 <_obstack_memory_used@@Base+0xef30>  // b.none
  4290a4:	add	x12, x11, x10
  4290a8:	lsr	x12, x12, #1
  4290ac:	ldr	x13, [x9, x12, lsl #3]
  4290b0:	cmp	x13, x8
  4290b4:	csinc	x11, x11, x12, ge  // ge = tcont
  4290b8:	csel	x10, x10, x12, lt  // lt = tstop
  4290bc:	cmp	x11, x10
  4290c0:	b.cc	4290a4 <_obstack_memory_used@@Base+0xef10>  // b.lo, b.ul, b.last
  4290c4:	ldr	x9, [x9, x11, lsl #3]
  4290c8:	cmp	x9, x8
  4290cc:	b.ne	429018 <_obstack_memory_used@@Base+0xee84>  // b.any
  4290d0:	mov	w0, #0x1                   	// #1
  4290d4:	mov	x20, x19
  4290d8:	b	42918c <_obstack_memory_used@@Base+0xeff8>
  4290dc:	ldr	x23, [x15, #152]
  4290e0:	ldr	x19, [x14, #24]
  4290e4:	mov	x1, x20
  4290e8:	mov	x2, x15
  4290ec:	mov	x0, x23
  4290f0:	mov	x3, x21
  4290f4:	bl	428954 <_obstack_memory_used@@Base+0xe7c0>
  4290f8:	cmp	w0, #0x1
  4290fc:	b.lt	429118 <_obstack_memory_used@@Base+0xef84>  // b.tstop
  429100:	add	x8, x21, w0, uxtw
  429104:	cmp	x8, x19
  429108:	b.le	429128 <_obstack_memory_used@@Base+0xef94>
  42910c:	ldp	x15, x14, [x29, #-48]
  429110:	ldr	x16, [sp, #48]
  429114:	b	42918c <_obstack_memory_used@@Base+0xeff8>
  429118:	ldp	x15, x14, [x29, #-48]
  42911c:	ldr	x16, [sp, #48]
  429120:	cbnz	w0, 42918c <_obstack_memory_used@@Base+0xeff8>
  429124:	b	429048 <_obstack_memory_used@@Base+0xeeb4>
  429128:	ldp	x15, x14, [x29, #-48]
  42912c:	ldr	x16, [sp, #48]
  429130:	ldr	x9, [x14]
  429134:	ldr	x9, [x9, x8, lsl #3]
  429138:	cbz	x9, 429048 <_obstack_memory_used@@Base+0xeeb4>
  42913c:	ldr	x8, [x9, #16]
  429140:	subs	x10, x8, #0x1
  429144:	b.lt	429048 <_obstack_memory_used@@Base+0xeeb4>  // b.tstop
  429148:	ldr	x8, [x23, #24]
  42914c:	ldr	x9, [x9, #24]
  429150:	mov	x11, xzr
  429154:	ldr	x8, [x8, x20, lsl #3]
  429158:	b.eq	42917c <_obstack_memory_used@@Base+0xefe8>  // b.none
  42915c:	add	x12, x11, x10
  429160:	lsr	x12, x12, #1
  429164:	ldr	x13, [x9, x12, lsl #3]
  429168:	cmp	x13, x8
  42916c:	csinc	x11, x11, x12, ge  // ge = tcont
  429170:	csel	x10, x10, x12, lt  // lt = tstop
  429174:	cmp	x11, x10
  429178:	b.cc	42915c <_obstack_memory_used@@Base+0xefc8>  // b.lo, b.ul, b.last
  42917c:	cbz	w0, 429048 <_obstack_memory_used@@Base+0xeeb4>
  429180:	ldr	x9, [x9, x11, lsl #3]
  429184:	cmp	x9, x8
  429188:	b.ne	429048 <_obstack_memory_used@@Base+0xeeb4>  // b.any
  42918c:	ldr	x8, [x14, #40]
  429190:	str	x20, [sp, #40]
  429194:	cbz	x8, 428ff0 <_obstack_memory_used@@Base+0xee5c>
  429198:	ldr	x9, [sp, #56]
  42919c:	ldr	x11, [sp, #40]
  4291a0:	add	x23, x21, w0, sxtw
  4291a4:	mov	x24, xzr
  4291a8:	ldr	x10, [x9, #24]
  4291ac:	ldr	x9, [x15, #200]
  4291b0:	ldr	x10, [x10, x11, lsl #3]
  4291b4:	cmp	x9, #0x1
  4291b8:	str	x10, [sp, #24]
  4291bc:	b.lt	4291f4 <_obstack_memory_used@@Base+0xf060>  // b.tstop
  4291c0:	ldr	x10, [x15, #216]
  4291c4:	mov	x11, x9
  4291c8:	add	x12, x11, x24
  4291cc:	cmp	x12, #0x0
  4291d0:	cinc	x12, x12, lt  // lt = tstop
  4291d4:	asr	x12, x12, #1
  4291d8:	madd	x13, x12, x28, x10
  4291dc:	ldr	x13, [x13, #8]
  4291e0:	cmp	x13, x23
  4291e4:	csel	x11, x11, x12, lt  // lt = tstop
  4291e8:	csinc	x24, x24, x12, ge  // ge = tcont
  4291ec:	cmp	x24, x11
  4291f0:	b.lt	4291c8 <_obstack_memory_used@@Base+0xf034>  // b.tstop
  4291f4:	cmp	x24, x9
  4291f8:	b.ge	429210 <_obstack_memory_used@@Base+0xf07c>  // b.tcont
  4291fc:	ldr	x10, [x15, #216]
  429200:	madd	x10, x24, x28, x10
  429204:	ldr	x10, [x10, #8]
  429208:	cmp	x10, x23
  42920c:	b.eq	429214 <_obstack_memory_used@@Base+0xf080>  // b.none
  429210:	mov	x24, #0xffffffffffffffff    	// #-1
  429214:	cmp	x9, #0x1
  429218:	b.lt	429288 <_obstack_memory_used@@Base+0xf0f4>  // b.tstop
  42921c:	ldr	x10, [x15, #216]
  429220:	mov	x25, xzr
  429224:	mov	x11, x9
  429228:	add	x12, x11, x25
  42922c:	cmp	x12, #0x0
  429230:	cinc	x12, x12, lt  // lt = tstop
  429234:	asr	x12, x12, #1
  429238:	madd	x13, x12, x28, x10
  42923c:	ldr	x13, [x13, #8]
  429240:	cmp	x13, x21
  429244:	csel	x11, x11, x12, lt  // lt = tstop
  429248:	csinc	x25, x25, x12, ge  // ge = tcont
  42924c:	cmp	x25, x11
  429250:	b.lt	429228 <_obstack_memory_used@@Base+0xf094>  // b.tstop
  429254:	cmp	x25, x9
  429258:	b.lt	429294 <_obstack_memory_used@@Base+0xf100>  // b.tstop
  42925c:	b	4292a8 <_obstack_memory_used@@Base+0xf114>
  429260:	ldr	q0, [sp]
  429264:	mov	w0, #0x8                   	// #8
  429268:	stur	q0, [x29, #-32]
  42926c:	bl	4023a0 <malloc@plt>
  429270:	ldr	x8, [sp, #40]
  429274:	stur	x0, [x29, #-16]
  429278:	cbz	x0, 4294ec <_obstack_memory_used@@Base+0xf358>
  42927c:	ldp	x15, x14, [x29, #-48]
  429280:	str	x8, [x0]
  429284:	b	429018 <_obstack_memory_used@@Base+0xee84>
  429288:	mov	x25, xzr
  42928c:	cmp	x25, x9
  429290:	b.ge	4292a8 <_obstack_memory_used@@Base+0xf114>  // b.tcont
  429294:	ldr	x9, [x15, #216]
  429298:	madd	x9, x25, x28, x9
  42929c:	ldr	x9, [x9, #8]
  4292a0:	cmp	x9, x21
  4292a4:	b.eq	4292ac <_obstack_memory_used@@Base+0xf118>  // b.none
  4292a8:	mov	x25, #0xffffffffffffffff    	// #-1
  4292ac:	cmp	x8, #0x1
  4292b0:	b.lt	428ff0 <_obstack_memory_used@@Base+0xee5c>  // b.tstop
  4292b4:	ldr	x20, [x15, #152]
  4292b8:	mov	x19, xzr
  4292bc:	ldr	x8, [x14, #48]
  4292c0:	ldr	x9, [x15, #216]
  4292c4:	ldr	x12, [x20]
  4292c8:	ldr	x8, [x8, x19, lsl #3]
  4292cc:	madd	x10, x8, x28, x9
  4292d0:	ldr	x11, [x10]
  4292d4:	ldr	x10, [x10, #16]
  4292d8:	lsl	x11, x11, #4
  4292dc:	ldr	x26, [x12, x11]
  4292e0:	cmp	x10, x23
  4292e4:	b.le	4292f8 <_obstack_memory_used@@Base+0xf164>
  4292e8:	mov	w27, #0xffffffff            	// #-1
  4292ec:	cmp	x10, x16
  4292f0:	b.lt	42936c <_obstack_memory_used@@Base+0xf1d8>  // b.tstop
  4292f4:	b	4293d8 <_obstack_memory_used@@Base+0xf244>
  4292f8:	madd	x11, x8, x28, x9
  4292fc:	ldr	x11, [x11, #24]
  429300:	cmp	x11, x23
  429304:	b.ge	429318 <_obstack_memory_used@@Base+0xf184>  // b.tcont
  429308:	mov	w27, #0x1                   	// #1
  42930c:	cmp	x10, x16
  429310:	b.lt	42936c <_obstack_memory_used@@Base+0xf1d8>  // b.tstop
  429314:	b	4293d8 <_obstack_memory_used@@Base+0xf244>
  429318:	cmp	x10, x23
  42931c:	cset	w1, eq  // eq = none
  429320:	cmp	x11, x23
  429324:	cset	w11, eq  // eq = none
  429328:	bfi	w1, w11, #1, #1
  42932c:	cbz	w1, 4293cc <_obstack_memory_used@@Base+0xf238>
  429330:	ldr	x3, [sp, #24]
  429334:	mov	x0, x15
  429338:	mov	x2, x26
  42933c:	mov	x4, x24
  429340:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  429344:	ldp	x15, x14, [x29, #-48]
  429348:	ldr	x16, [sp, #48]
  42934c:	mov	w27, w0
  429350:	ldr	x8, [x14, #48]
  429354:	ldr	x9, [x15, #216]
  429358:	ldr	x8, [x8, x19, lsl #3]
  42935c:	madd	x10, x8, x28, x9
  429360:	ldr	x10, [x10, #16]
  429364:	cmp	x10, x16
  429368:	b.ge	4293d8 <_obstack_memory_used@@Base+0xf244>  // b.tcont
  42936c:	madd	x8, x8, x28, x9
  429370:	ldr	x8, [x8, #24]
  429374:	cmp	x8, x21
  429378:	b.ge	42938c <_obstack_memory_used@@Base+0xf1f8>  // b.tcont
  42937c:	mov	w0, #0x1                   	// #1
  429380:	cmp	w0, w27
  429384:	b.eq	4293e4 <_obstack_memory_used@@Base+0xf250>  // b.none
  429388:	b	429018 <_obstack_memory_used@@Base+0xee84>
  42938c:	cmp	x10, x21
  429390:	cset	w1, eq  // eq = none
  429394:	cmp	x8, x21
  429398:	cset	w8, eq  // eq = none
  42939c:	bfi	w1, w8, #1, #1
  4293a0:	cbz	w1, 4293f8 <_obstack_memory_used@@Base+0xf264>
  4293a4:	ldr	x3, [sp, #40]
  4293a8:	mov	x0, x15
  4293ac:	mov	x2, x26
  4293b0:	mov	x4, x25
  4293b4:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  4293b8:	ldr	x16, [sp, #48]
  4293bc:	ldp	x15, x14, [x29, #-48]
  4293c0:	cmp	w0, w27
  4293c4:	b.eq	4293e4 <_obstack_memory_used@@Base+0xf250>  // b.none
  4293c8:	b	429018 <_obstack_memory_used@@Base+0xee84>
  4293cc:	mov	w27, wzr
  4293d0:	cmp	x10, x16
  4293d4:	b.lt	42936c <_obstack_memory_used@@Base+0xf1d8>  // b.tstop
  4293d8:	mov	w0, #0xffffffff            	// #-1
  4293dc:	cmp	w0, w27
  4293e0:	b.ne	429018 <_obstack_memory_used@@Base+0xee84>  // b.any
  4293e4:	ldr	x8, [x14, #40]
  4293e8:	add	x19, x19, #0x1
  4293ec:	cmp	x19, x8
  4293f0:	b.lt	4292bc <_obstack_memory_used@@Base+0xf128>  // b.tstop
  4293f4:	b	428ff0 <_obstack_memory_used@@Base+0xee5c>
  4293f8:	mov	w0, wzr
  4293fc:	cmp	w0, w27
  429400:	b.eq	4293e4 <_obstack_memory_used@@Base+0xf250>  // b.none
  429404:	b	429018 <_obstack_memory_used@@Base+0xee84>
  429408:	cmp	x9, x8
  42940c:	b.ne	429438 <_obstack_memory_used@@Base+0xf2a4>  // b.any
  429410:	ldur	x0, [x29, #-16]
  429414:	lsl	x8, x9, #1
  429418:	lsl	x1, x9, #4
  42941c:	stur	x8, [x29, #-32]
  429420:	bl	4024c0 <realloc@plt>
  429424:	cbz	x0, 42950c <_obstack_memory_used@@Base+0xf378>
  429428:	ldur	x8, [x29, #-24]
  42942c:	ldp	x15, x14, [x29, #-48]
  429430:	stur	x0, [x29, #-16]
  429434:	b	42943c <_obstack_memory_used@@Base+0xf2a8>
  429438:	ldur	x0, [x29, #-16]
  42943c:	ldr	x9, [x0]
  429440:	cmp	x9, x19
  429444:	b.le	429470 <_obstack_memory_used@@Base+0xf2dc>
  429448:	cmp	x8, #0x1
  42944c:	b.lt	429498 <_obstack_memory_used@@Base+0xf304>  // b.tstop
  429450:	mov	x9, x8
  429454:	add	x10, x0, x9, lsl #3
  429458:	ldur	x11, [x10, #-8]
  42945c:	subs	x8, x9, #0x1
  429460:	mov	x9, x8
  429464:	str	x11, [x10]
  429468:	b.gt	429454 <_obstack_memory_used@@Base+0xf2c0>
  42946c:	b	429498 <_obstack_memory_used@@Base+0xf304>
  429470:	add	x9, x0, x8, lsl #3
  429474:	ldur	x9, [x9, #-8]
  429478:	cmp	x9, x19
  42947c:	b.le	429498 <_obstack_memory_used@@Base+0xf304>
  429480:	add	x10, x0, x8, lsl #3
  429484:	str	x9, [x10]
  429488:	ldur	x9, [x10, #-16]
  42948c:	sub	x8, x8, #0x1
  429490:	cmp	x9, x19
  429494:	b.gt	429480 <_obstack_memory_used@@Base+0xf2ec>
  429498:	str	x19, [x0, x8, lsl #3]
  42949c:	b	42900c <_obstack_memory_used@@Base+0xee78>
  4294a0:	mov	w22, wzr
  4294a4:	ldur	x0, [x29, #-16]
  4294a8:	bl	402620 <free@plt>
  4294ac:	b	4294c8 <_obstack_memory_used@@Base+0xf334>
  4294b0:	lsl	x2, x11, #3
  4294b4:	mov	w1, wzr
  4294b8:	bl	402470 <memset@plt>
  4294bc:	ldur	x0, [x29, #-16]
  4294c0:	bl	402620 <free@plt>
  4294c4:	mov	w22, wzr
  4294c8:	mov	w0, w22
  4294cc:	ldp	x20, x19, [sp, #192]
  4294d0:	ldp	x22, x21, [sp, #176]
  4294d4:	ldp	x24, x23, [sp, #160]
  4294d8:	ldp	x26, x25, [sp, #144]
  4294dc:	ldp	x28, x27, [sp, #128]
  4294e0:	ldp	x29, x30, [sp, #112]
  4294e4:	add	sp, sp, #0xd0
  4294e8:	ret
  4294ec:	stp	xzr, xzr, [x29, #-32]
  4294f0:	mov	w22, #0xc                   	// #12
  4294f4:	b	4294a4 <_obstack_memory_used@@Base+0xf310>
  4294f8:	mov	w22, w0
  4294fc:	b	4294a4 <_obstack_memory_used@@Base+0xf310>
  429500:	stp	xzr, xzr, [x29, #-32]
  429504:	mov	w22, #0xc                   	// #12
  429508:	b	4294c8 <_obstack_memory_used@@Base+0xf334>
  42950c:	mov	w22, #0xc                   	// #12
  429510:	b	4294a4 <_obstack_memory_used@@Base+0xf310>
  429514:	sub	sp, sp, #0x150
  429518:	stp	x29, x30, [sp, #240]
  42951c:	stp	x28, x27, [sp, #256]
  429520:	stp	x26, x25, [sp, #272]
  429524:	stp	x24, x23, [sp, #288]
  429528:	stp	x22, x21, [sp, #304]
  42952c:	stp	x20, x19, [sp, #320]
  429530:	add	x29, sp, #0xf0
  429534:	ldr	x24, [x0, #152]
  429538:	stur	wzr, [x29, #-100]
  42953c:	ldr	x8, [x0, #184]
  429540:	stur	x2, [x29, #-112]
  429544:	ldr	x21, [x8, x2, lsl #3]
  429548:	ldr	x8, [x3, #8]
  42954c:	stp	x0, x1, [sp, #112]
  429550:	add	x9, x21, #0x8
  429554:	cmp	x21, #0x0
  429558:	csel	x27, xzr, x9, eq  // eq = none
  42955c:	cbz	x8, 429894 <_obstack_memory_used@@Base+0xf700>
  429560:	mov	x23, x3
  429564:	cbz	x21, 4298ac <_obstack_memory_used@@Base+0xf718>
  429568:	sub	x0, x29, #0x60
  42956c:	mov	x1, x24
  429570:	mov	x2, x23
  429574:	stur	wzr, [x29, #-96]
  429578:	bl	4286d8 <_obstack_memory_used@@Base+0xe544>
  42957c:	ldur	w26, [x29, #-96]
  429580:	cbnz	w26, 42a0e0 <_obstack_memory_used@@Base+0xff4c>
  429584:	mov	x22, x0
  429588:	ldr	x8, [x22, #56]!
  42958c:	mov	x25, x0
  429590:	cbnz	x8, 429600 <_obstack_memory_used@@Base+0xf46c>
  429594:	ldr	x8, [x23, #8]
  429598:	lsl	x0, x8, #3
  42959c:	stp	x8, xzr, [x25, #56]
  4295a0:	bl	4023a0 <malloc@plt>
  4295a4:	cmp	x0, #0x0
  4295a8:	mov	w26, #0xc                   	// #12
  4295ac:	csel	w8, w26, wzr, eq  // eq = none
  4295b0:	str	x0, [x25, #72]
  4295b4:	stur	w8, [x29, #-96]
  4295b8:	cbz	x0, 42a0e0 <_obstack_memory_used@@Base+0xff4c>
  4295bc:	ldr	x8, [x23, #8]
  4295c0:	cmp	x8, #0x1
  4295c4:	b.lt	429600 <_obstack_memory_used@@Base+0xf46c>  // b.tstop
  4295c8:	mov	x19, xzr
  4295cc:	mov	w20, #0x18                  	// #24
  4295d0:	ldr	x8, [x23, #16]
  4295d4:	ldr	x9, [x24, #56]
  4295d8:	mov	x0, x22
  4295dc:	ldr	x8, [x8, x19, lsl #3]
  4295e0:	madd	x1, x8, x20, x9
  4295e4:	bl	42411c <_obstack_memory_used@@Base+0x9f88>
  4295e8:	cbnz	w0, 42a0d8 <_obstack_memory_used@@Base+0xff44>
  4295ec:	ldr	x8, [x23, #8]
  4295f0:	add	x19, x19, #0x1
  4295f4:	cmp	x19, x8
  4295f8:	b.lt	4295d0 <_obstack_memory_used@@Base+0xf43c>  // b.tstop
  4295fc:	stur	wzr, [x29, #-96]
  429600:	mov	x0, x23
  429604:	mov	x1, x27
  429608:	mov	x2, x22
  42960c:	bl	42a110 <_obstack_memory_used@@Base+0xff7c>
  429610:	stur	w0, [x29, #-100]
  429614:	cbnz	w0, 42a0f0 <_obstack_memory_used@@Base+0xff5c>
  429618:	ldr	x15, [sp, #120]
  42961c:	ldr	x8, [x15, #40]
  429620:	cbz	x8, 4298ac <_obstack_memory_used@@Base+0xf718>
  429624:	ldur	x14, [x29, #-112]
  429628:	cmp	x8, #0x1
  42962c:	b.lt	4298a8 <_obstack_memory_used@@Base+0xf714>  // b.tstop
  429630:	ldr	x8, [sp, #112]
  429634:	mov	x20, xzr
  429638:	mov	w25, #0x18                  	// #24
  42963c:	ldr	x22, [x8, #216]
  429640:	b	429654 <_obstack_memory_used@@Base+0xf4c0>
  429644:	ldr	x8, [x15, #40]
  429648:	add	x20, x20, #0x1
  42964c:	cmp	x20, x8
  429650:	b.ge	4298a8 <_obstack_memory_used@@Base+0xf714>  // b.tcont
  429654:	ldr	x8, [x15, #48]
  429658:	mov	w9, #0x28                  	// #40
  42965c:	ldr	x8, [x8, x20, lsl #3]
  429660:	madd	x9, x8, x9, x22
  429664:	ldr	x9, [x9, #16]
  429668:	cmp	x9, x14
  42966c:	b.ge	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tcont
  429670:	mov	w9, #0x28                  	// #40
  429674:	madd	x9, x8, x9, x22
  429678:	ldr	x9, [x9, #8]
  42967c:	cmp	x9, x14
  429680:	b.lt	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tstop
  429684:	mov	w9, #0x28                  	// #40
  429688:	madd	x8, x8, x9, x22
  42968c:	ldr	x10, [x8]
  429690:	ldr	x9, [x24]
  429694:	ldr	x11, [x8, #24]
  429698:	lsl	x8, x10, #4
  42969c:	ldr	x19, [x9, x8]
  4296a0:	ldr	x8, [x23, #8]
  4296a4:	cmp	x11, x14
  4296a8:	b.ne	429710 <_obstack_memory_used@@Base+0xf57c>  // b.any
  4296ac:	cmp	x8, #0x1
  4296b0:	b.lt	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tstop
  4296b4:	ldr	x10, [x23, #16]
  4296b8:	mov	x28, #0xffffffffffffffff    	// #-1
  4296bc:	mov	x1, #0xffffffffffffffff    	// #-1
  4296c0:	b	4296e0 <_obstack_memory_used@@Base+0xf54c>
  4296c4:	lsl	x12, x11, #4
  4296c8:	ldr	x12, [x9, x12]
  4296cc:	cmp	x19, x12
  4296d0:	csel	x28, x11, x28, eq  // eq = none
  4296d4:	subs	x8, x8, #0x1
  4296d8:	add	x10, x10, #0x8
  4296dc:	b.eq	429780 <_obstack_memory_used@@Base+0xf5ec>  // b.none
  4296e0:	ldr	x11, [x10]
  4296e4:	add	x12, x9, x11, lsl #4
  4296e8:	ldrb	w12, [x12, #8]
  4296ec:	cmp	w12, #0x9
  4296f0:	b.eq	4296c4 <_obstack_memory_used@@Base+0xf530>  // b.none
  4296f4:	cmp	w12, #0x8
  4296f8:	b.ne	4296d4 <_obstack_memory_used@@Base+0xf540>  // b.any
  4296fc:	lsl	x12, x11, #4
  429700:	ldr	x12, [x9, x12]
  429704:	cmp	x19, x12
  429708:	csel	x1, x11, x1, eq  // eq = none
  42970c:	b	4296d4 <_obstack_memory_used@@Base+0xf540>
  429710:	cmp	x8, #0x1
  429714:	b.lt	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tstop
  429718:	mov	x28, xzr
  42971c:	ldr	x10, [x23, #16]
  429720:	ldr	x1, [x10, x28, lsl #3]
  429724:	add	x10, x9, x1, lsl #4
  429728:	ldr	w10, [x10, #8]
  42972c:	and	w10, w10, #0xfe
  429730:	orr	w10, w10, #0x1
  429734:	cmp	w10, #0x9
  429738:	b.ne	42976c <_obstack_memory_used@@Base+0xf5d8>  // b.any
  42973c:	lsl	x10, x1, #4
  429740:	ldr	x9, [x9, x10]
  429744:	cmp	x19, x9
  429748:	b.ne	42976c <_obstack_memory_used@@Base+0xf5d8>  // b.any
  42974c:	mov	x0, x24
  429750:	mov	x2, x23
  429754:	mov	x3, x27
  429758:	bl	42a2e4 <_obstack_memory_used@@Base+0x10150>
  42975c:	cbnz	w0, 42a0ac <_obstack_memory_used@@Base+0xff18>
  429760:	ldr	x8, [x23, #8]
  429764:	ldur	x14, [x29, #-112]
  429768:	ldr	x15, [sp, #120]
  42976c:	add	x28, x28, #0x1
  429770:	cmp	x28, x8
  429774:	b.ge	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tcont
  429778:	ldr	x9, [x24]
  42977c:	b	42971c <_obstack_memory_used@@Base+0xf588>
  429780:	tbnz	x1, #63, 4297a0 <_obstack_memory_used@@Base+0xf60c>
  429784:	mov	x0, x24
  429788:	mov	x2, x23
  42978c:	mov	x3, x27
  429790:	bl	42a2e4 <_obstack_memory_used@@Base+0x10150>
  429794:	ldr	x15, [sp, #120]
  429798:	ldur	x14, [x29, #-112]
  42979c:	cbnz	w0, 42a0ac <_obstack_memory_used@@Base+0xff18>
  4297a0:	tbnz	x28, #63, 429644 <_obstack_memory_used@@Base+0xf4b0>
  4297a4:	ldr	x8, [x23, #8]
  4297a8:	cmp	x8, #0x1
  4297ac:	b.lt	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tstop
  4297b0:	mov	x19, xzr
  4297b4:	b	4297e8 <_obstack_memory_used@@Base+0xf654>
  4297b8:	mov	x0, x24
  4297bc:	mov	x2, x23
  4297c0:	mov	x3, x27
  4297c4:	bl	42a2e4 <_obstack_memory_used@@Base+0x10150>
  4297c8:	cbnz	w0, 42a0ac <_obstack_memory_used@@Base+0xff18>
  4297cc:	ldr	x8, [x23, #8]
  4297d0:	ldur	x14, [x29, #-112]
  4297d4:	ldr	x15, [sp, #120]
  4297d8:	sub	x19, x19, #0x1
  4297dc:	add	x19, x19, #0x1
  4297e0:	cmp	x19, x8
  4297e4:	b.ge	429644 <_obstack_memory_used@@Base+0xf4b0>  // b.tcont
  4297e8:	ldr	x9, [x23, #16]
  4297ec:	ldr	x1, [x9, x19, lsl #3]
  4297f0:	ldr	x9, [x24, #56]
  4297f4:	madd	x10, x1, x25, x9
  4297f8:	ldr	x10, [x10, #8]
  4297fc:	subs	x10, x10, #0x1
  429800:	b.lt	429840 <_obstack_memory_used@@Base+0xf6ac>  // b.tstop
  429804:	madd	x9, x1, x25, x9
  429808:	ldr	x9, [x9, #16]
  42980c:	mov	x11, xzr
  429810:	b.eq	429834 <_obstack_memory_used@@Base+0xf6a0>  // b.none
  429814:	add	x12, x11, x10
  429818:	lsr	x12, x12, #1
  42981c:	ldr	x13, [x9, x12, lsl #3]
  429820:	cmp	x13, x28
  429824:	csinc	x11, x11, x12, ge  // ge = tcont
  429828:	csel	x10, x10, x12, lt  // lt = tstop
  42982c:	cmp	x11, x10
  429830:	b.cc	429814 <_obstack_memory_used@@Base+0xf680>  // b.lo, b.ul, b.last
  429834:	ldr	x9, [x9, x11, lsl #3]
  429838:	cmp	x9, x28
  42983c:	b.eq	4297dc <_obstack_memory_used@@Base+0xf648>  // b.none
  429840:	ldr	x9, [x24, #48]
  429844:	madd	x10, x1, x25, x9
  429848:	ldr	x10, [x10, #8]
  42984c:	subs	x10, x10, #0x1
  429850:	b.lt	4297b8 <_obstack_memory_used@@Base+0xf624>  // b.tstop
  429854:	madd	x9, x1, x25, x9
  429858:	ldr	x9, [x9, #16]
  42985c:	mov	x11, xzr
  429860:	b.eq	429884 <_obstack_memory_used@@Base+0xf6f0>  // b.none
  429864:	add	x12, x11, x10
  429868:	lsr	x12, x12, #1
  42986c:	ldr	x13, [x9, x12, lsl #3]
  429870:	cmp	x13, x28
  429874:	csinc	x11, x11, x12, ge  // ge = tcont
  429878:	csel	x10, x10, x12, lt  // lt = tstop
  42987c:	cmp	x11, x10
  429880:	b.cc	429864 <_obstack_memory_used@@Base+0xf6d0>  // b.lo, b.ul, b.last
  429884:	ldr	x9, [x9, x11, lsl #3]
  429888:	cmp	x9, x28
  42988c:	b.ne	4297b8 <_obstack_memory_used@@Base+0xf624>  // b.any
  429890:	b	4297dc <_obstack_memory_used@@Base+0xf648>
  429894:	ldr	x8, [x1]
  429898:	mov	x14, x1
  42989c:	mov	x15, x0
  4298a0:	str	xzr, [x8, x2, lsl #3]
  4298a4:	b	4298d4 <_obstack_memory_used@@Base+0xf740>
  4298a8:	stur	wzr, [x29, #-100]
  4298ac:	sub	x0, x29, #0x64
  4298b0:	mov	x1, x24
  4298b4:	mov	x2, x23
  4298b8:	bl	4286d8 <_obstack_memory_used@@Base+0xe544>
  4298bc:	ldp	x15, x14, [sp, #112]
  4298c0:	ldur	x2, [x29, #-112]
  4298c4:	ldr	x8, [x14]
  4298c8:	str	x0, [x8, x2, lsl #3]
  4298cc:	ldur	w26, [x29, #-100]
  4298d0:	cbnz	w26, 42a088 <_obstack_memory_used@@Base+0xfef4>
  4298d4:	cbz	x21, 42a084 <_obstack_memory_used@@Base+0xfef0>
  4298d8:	ldr	x8, [x15, #184]
  4298dc:	ldr	x8, [x8, x2, lsl #3]
  4298e0:	ldrb	w8, [x8, #104]
  4298e4:	tbz	w8, #6, 42a084 <_obstack_memory_used@@Base+0xfef0>
  4298e8:	ldr	x8, [x15, #200]
  4298ec:	ldr	x28, [x15, #152]
  4298f0:	cmp	x8, #0x1
  4298f4:	b.lt	429940 <_obstack_memory_used@@Base+0xf7ac>  // b.tstop
  4298f8:	ldr	x9, [x15, #216]
  4298fc:	mov	x21, xzr
  429900:	mov	w10, #0x28                  	// #40
  429904:	mov	x11, x8
  429908:	add	x12, x11, x21
  42990c:	cmp	x12, #0x0
  429910:	cinc	x12, x12, lt  // lt = tstop
  429914:	asr	x12, x12, #1
  429918:	madd	x13, x12, x10, x9
  42991c:	ldr	x13, [x13, #8]
  429920:	cmp	x13, x2
  429924:	csel	x11, x11, x12, lt  // lt = tstop
  429928:	csinc	x21, x21, x12, ge  // ge = tcont
  42992c:	cmp	x21, x11
  429930:	b.lt	429908 <_obstack_memory_used@@Base+0xf774>  // b.tstop
  429934:	cmp	x21, x8
  429938:	b.lt	42994c <_obstack_memory_used@@Base+0xf7b8>  // b.tstop
  42993c:	b	42a080 <_obstack_memory_used@@Base+0xfeec>
  429940:	mov	x21, xzr
  429944:	cmp	x21, x8
  429948:	b.ge	42a080 <_obstack_memory_used@@Base+0xfeec>  // b.tcont
  42994c:	cmn	x21, #0x1
  429950:	b.eq	42a080 <_obstack_memory_used@@Base+0xfeec>  // b.none
  429954:	ldr	x8, [x15, #216]
  429958:	mov	w9, #0x28                  	// #40
  42995c:	madd	x8, x21, x9, x8
  429960:	ldr	x8, [x8, #8]
  429964:	cmp	x8, x2
  429968:	b.ne	42a080 <_obstack_memory_used@@Base+0xfeec>  // b.any
  42996c:	stur	xzr, [x29, #-96]
  429970:	ldr	x8, [x27, #8]
  429974:	cmp	x8, #0x0
  429978:	b.le	42a080 <_obstack_memory_used@@Base+0xfeec>
  42997c:	sub	x8, x29, #0x60
  429980:	add	x9, x2, #0x1
  429984:	str	x9, [sp, #32]
  429988:	mov	w9, #0x1                   	// #1
  42998c:	add	x8, x8, #0x20
  429990:	mov	x19, xzr
  429994:	mov	w13, #0x28                  	// #40
  429998:	mov	w23, #0x18                  	// #24
  42999c:	str	x8, [sp, #8]
  4299a0:	dup	v0.2d, x9
  4299a4:	str	xzr, [sp, #88]
  4299a8:	str	q0, [sp, #16]
  4299ac:	stp	x28, x27, [sp, #48]
  4299b0:	b	4299c4 <_obstack_memory_used@@Base+0xf830>
  4299b4:	ldr	x8, [x27, #8]
  4299b8:	add	x19, x19, #0x1
  4299bc:	cmp	x19, x8
  4299c0:	b.ge	42a0b8 <_obstack_memory_used@@Base+0xff24>  // b.tcont
  4299c4:	ldr	x8, [x27, #16]
  4299c8:	ldr	x9, [x14, #16]
  4299cc:	ldr	x16, [x8, x19, lsl #3]
  4299d0:	ldr	x8, [x28]
  4299d4:	cmp	x16, x9
  4299d8:	add	x8, x8, x16, lsl #4
  4299dc:	ldrb	w8, [x8, #8]
  4299e0:	b.ne	4299fc <_obstack_memory_used@@Base+0xf868>  // b.any
  4299e4:	cmp	w8, #0x4
  4299e8:	b.ne	4299b4 <_obstack_memory_used@@Base+0xf820>  // b.any
  4299ec:	ldr	x8, [x14, #24]
  4299f0:	cmp	x8, x2
  4299f4:	b.ne	429a04 <_obstack_memory_used@@Base+0xf870>  // b.any
  4299f8:	b	4299b4 <_obstack_memory_used@@Base+0xf820>
  4299fc:	cmp	w8, #0x4
  429a00:	b.ne	4299b4 <_obstack_memory_used@@Base+0xf820>  // b.any
  429a04:	ldr	x8, [x15, #216]
  429a08:	mov	x24, x21
  429a0c:	str	x19, [sp, #64]
  429a10:	str	x16, [sp, #104]
  429a14:	madd	x25, x21, x13, x8
  429a18:	b	429a30 <_obstack_memory_used@@Base+0xf89c>
  429a1c:	ldr	x16, [sp, #104]
  429a20:	ldrb	w8, [x25, #32]
  429a24:	add	x25, x25, #0x28
  429a28:	add	x24, x24, #0x1
  429a2c:	cbz	w8, 4299b4 <_obstack_memory_used@@Base+0xf820>
  429a30:	ldr	x8, [x25]
  429a34:	cmp	x8, x16
  429a38:	b.ne	429a20 <_obstack_memory_used@@Base+0xf88c>  // b.any
  429a3c:	ldp	x9, x8, [x25, #16]
  429a40:	subs	x8, x8, x9
  429a44:	add	x20, x8, x2
  429a48:	b.eq	429a64 <_obstack_memory_used@@Base+0xf8d0>  // b.none
  429a4c:	ldr	x8, [x28, #24]
  429a50:	add	x8, x8, x16, lsl #3
  429a54:	ldr	x9, [x14, #24]
  429a58:	cmp	x20, x9
  429a5c:	b.gt	429a20 <_obstack_memory_used@@Base+0xf88c>
  429a60:	b	429a7c <_obstack_memory_used@@Base+0xf8e8>
  429a64:	ldr	x8, [x28, #40]
  429a68:	madd	x8, x16, x23, x8
  429a6c:	ldr	x8, [x8, #16]
  429a70:	ldr	x9, [x14, #24]
  429a74:	cmp	x20, x9
  429a78:	b.gt	429a20 <_obstack_memory_used@@Base+0xf88c>
  429a7c:	ldr	x9, [x14]
  429a80:	ldr	x10, [x9, x20, lsl #3]
  429a84:	cbz	x10, 429a20 <_obstack_memory_used@@Base+0xf88c>
  429a88:	ldr	x9, [x10, #16]
  429a8c:	subs	x9, x9, #0x1
  429a90:	b.lt	429a20 <_obstack_memory_used@@Base+0xf88c>  // b.tstop
  429a94:	ldr	x26, [x8]
  429a98:	ldr	x8, [x10, #24]
  429a9c:	mov	x10, xzr
  429aa0:	b.eq	429ac4 <_obstack_memory_used@@Base+0xf930>  // b.none
  429aa4:	add	x11, x10, x9
  429aa8:	lsr	x11, x11, #1
  429aac:	ldr	x12, [x8, x11, lsl #3]
  429ab0:	cmp	x12, x26
  429ab4:	csinc	x10, x10, x11, ge  // ge = tcont
  429ab8:	csel	x9, x9, x11, lt  // lt = tstop
  429abc:	cmp	x10, x9
  429ac0:	b.cc	429aa4 <_obstack_memory_used@@Base+0xf910>  // b.lo, b.ul, b.last
  429ac4:	ldr	x8, [x8, x10, lsl #3]
  429ac8:	cmp	x8, x26
  429acc:	b.ne	429a1c <_obstack_memory_used@@Base+0xf888>  // b.any
  429ad0:	ldr	x8, [x15, #200]
  429ad4:	cmp	x8, #0x1
  429ad8:	b.lt	429b20 <_obstack_memory_used@@Base+0xf98c>  // b.tstop
  429adc:	ldr	x9, [x15, #216]
  429ae0:	mov	x27, xzr
  429ae4:	mov	x10, x8
  429ae8:	add	x11, x10, x27
  429aec:	cmp	x11, #0x0
  429af0:	cinc	x11, x11, lt  // lt = tstop
  429af4:	asr	x11, x11, #1
  429af8:	madd	x12, x11, x13, x9
  429afc:	ldr	x12, [x12, #8]
  429b00:	cmp	x12, x2
  429b04:	csel	x10, x10, x11, lt  // lt = tstop
  429b08:	csinc	x27, x27, x11, ge  // ge = tcont
  429b0c:	cmp	x27, x10
  429b10:	b.lt	429ae8 <_obstack_memory_used@@Base+0xf954>  // b.tstop
  429b14:	cmp	x27, x8
  429b18:	b.lt	429b2c <_obstack_memory_used@@Base+0xf998>  // b.tstop
  429b1c:	b	429b40 <_obstack_memory_used@@Base+0xf9ac>
  429b20:	mov	x27, xzr
  429b24:	cmp	x27, x8
  429b28:	b.ge	429b40 <_obstack_memory_used@@Base+0xf9ac>  // b.tcont
  429b2c:	ldr	x9, [x15, #216]
  429b30:	madd	x9, x27, x13, x9
  429b34:	ldr	x9, [x9, #8]
  429b38:	cmp	x9, x2
  429b3c:	b.eq	429b44 <_obstack_memory_used@@Base+0xf9b0>  // b.none
  429b40:	mov	x27, #0xffffffffffffffff    	// #-1
  429b44:	cmp	x8, #0x1
  429b48:	b.lt	429b94 <_obstack_memory_used@@Base+0xfa00>  // b.tstop
  429b4c:	ldr	x9, [x15, #216]
  429b50:	mov	x28, xzr
  429b54:	mov	x10, x8
  429b58:	add	x11, x10, x28
  429b5c:	cmp	x11, #0x0
  429b60:	cinc	x11, x11, lt  // lt = tstop
  429b64:	asr	x11, x11, #1
  429b68:	madd	x12, x11, x13, x9
  429b6c:	ldr	x12, [x12, #8]
  429b70:	cmp	x12, x20
  429b74:	csel	x10, x10, x11, lt  // lt = tstop
  429b78:	csinc	x28, x28, x11, ge  // ge = tcont
  429b7c:	cmp	x28, x10
  429b80:	b.lt	429b58 <_obstack_memory_used@@Base+0xf9c4>  // b.tstop
  429b84:	cmp	x28, x8
  429b88:	str	x17, [sp, #80]
  429b8c:	b.lt	429ba4 <_obstack_memory_used@@Base+0xfa10>  // b.tstop
  429b90:	b	429bb8 <_obstack_memory_used@@Base+0xfa24>
  429b94:	mov	x28, xzr
  429b98:	cmp	x28, x8
  429b9c:	str	x17, [sp, #80]
  429ba0:	b.ge	429bb8 <_obstack_memory_used@@Base+0xfa24>  // b.tcont
  429ba4:	ldr	x8, [x15, #216]
  429ba8:	madd	x8, x28, x13, x8
  429bac:	ldr	x8, [x8, #8]
  429bb0:	cmp	x8, x20
  429bb4:	b.eq	429bbc <_obstack_memory_used@@Base+0xfa28>  // b.none
  429bb8:	mov	x28, #0xffffffffffffffff    	// #-1
  429bbc:	ldr	x23, [x14, #40]
  429bc0:	cmp	x23, #0x1
  429bc4:	b.lt	429d48 <_obstack_memory_used@@Base+0xfbb4>  // b.tstop
  429bc8:	ldr	x16, [x15, #152]
  429bcc:	mov	x19, xzr
  429bd0:	str	x16, [sp, #96]
  429bd4:	b	429bf4 <_obstack_memory_used@@Base+0xfa60>
  429bd8:	mov	w0, #0xffffffff            	// #-1
  429bdc:	cmp	w0, w23
  429be0:	b.ne	429d30 <_obstack_memory_used@@Base+0xfb9c>  // b.any
  429be4:	ldr	x23, [x14, #40]
  429be8:	add	x19, x19, #0x1
  429bec:	cmp	x19, x23
  429bf0:	b.ge	429d48 <_obstack_memory_used@@Base+0xfbb4>  // b.tcont
  429bf4:	ldr	x8, [x14, #48]
  429bf8:	ldr	x9, [x15, #216]
  429bfc:	ldr	x12, [x16]
  429c00:	ldr	x8, [x8, x19, lsl #3]
  429c04:	madd	x10, x8, x13, x9
  429c08:	ldr	x11, [x10]
  429c0c:	ldr	x10, [x10, #16]
  429c10:	lsl	x11, x11, #4
  429c14:	ldr	x22, [x12, x11]
  429c18:	cmp	x10, x2
  429c1c:	b.le	429c30 <_obstack_memory_used@@Base+0xfa9c>
  429c20:	mov	w23, #0xffffffff            	// #-1
  429c24:	cmp	x10, x20
  429c28:	b.gt	429bd8 <_obstack_memory_used@@Base+0xfa44>
  429c2c:	b	429cbc <_obstack_memory_used@@Base+0xfb28>
  429c30:	madd	x11, x8, x13, x9
  429c34:	ldr	x11, [x11, #24]
  429c38:	cmp	x11, x2
  429c3c:	b.ge	429c50 <_obstack_memory_used@@Base+0xfabc>  // b.tcont
  429c40:	mov	w23, #0x1                   	// #1
  429c44:	cmp	x10, x20
  429c48:	b.gt	429bd8 <_obstack_memory_used@@Base+0xfa44>
  429c4c:	b	429cbc <_obstack_memory_used@@Base+0xfb28>
  429c50:	cmp	x10, x2
  429c54:	cset	w1, eq  // eq = none
  429c58:	cmp	x11, x2
  429c5c:	cset	w11, eq  // eq = none
  429c60:	bfi	w1, w11, #1, #1
  429c64:	cbz	w1, 429cb0 <_obstack_memory_used@@Base+0xfb1c>
  429c68:	ldr	x3, [sp, #104]
  429c6c:	mov	x0, x15
  429c70:	mov	x2, x22
  429c74:	mov	x4, x27
  429c78:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  429c7c:	ldp	x15, x14, [sp, #112]
  429c80:	mov	w13, #0x28                  	// #40
  429c84:	ldr	x16, [sp, #96]
  429c88:	ldur	x2, [x29, #-112]
  429c8c:	ldr	x8, [x14, #48]
  429c90:	ldr	x9, [x15, #216]
  429c94:	mov	w23, w0
  429c98:	ldr	x8, [x8, x19, lsl #3]
  429c9c:	madd	x10, x8, x13, x9
  429ca0:	ldr	x10, [x10, #16]
  429ca4:	cmp	x10, x20
  429ca8:	b.le	429cbc <_obstack_memory_used@@Base+0xfb28>
  429cac:	b	429bd8 <_obstack_memory_used@@Base+0xfa44>
  429cb0:	mov	w23, wzr
  429cb4:	cmp	x10, x20
  429cb8:	b.gt	429bd8 <_obstack_memory_used@@Base+0xfa44>
  429cbc:	madd	x8, x8, x13, x9
  429cc0:	ldr	x8, [x8, #24]
  429cc4:	cmp	x8, x20
  429cc8:	b.ge	429cdc <_obstack_memory_used@@Base+0xfb48>  // b.tcont
  429ccc:	mov	w0, #0x1                   	// #1
  429cd0:	cmp	w0, w23
  429cd4:	b.eq	429be4 <_obstack_memory_used@@Base+0xfa50>  // b.none
  429cd8:	b	429d30 <_obstack_memory_used@@Base+0xfb9c>
  429cdc:	cmp	x10, x20
  429ce0:	cset	w1, eq  // eq = none
  429ce4:	cmp	x8, x20
  429ce8:	cset	w8, eq  // eq = none
  429cec:	bfi	w1, w8, #1, #1
  429cf0:	cbz	w1, 429d24 <_obstack_memory_used@@Base+0xfb90>
  429cf4:	mov	x0, x15
  429cf8:	mov	x2, x22
  429cfc:	mov	x3, x26
  429d00:	mov	x4, x28
  429d04:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  429d08:	ldr	x16, [sp, #96]
  429d0c:	ldp	x15, x14, [sp, #112]
  429d10:	ldur	x2, [x29, #-112]
  429d14:	mov	w13, #0x28                  	// #40
  429d18:	cmp	w0, w23
  429d1c:	b.eq	429be4 <_obstack_memory_used@@Base+0xfa50>  // b.none
  429d20:	b	429d30 <_obstack_memory_used@@Base+0xfb9c>
  429d24:	mov	w0, wzr
  429d28:	cmp	w0, w23
  429d2c:	b.eq	429be4 <_obstack_memory_used@@Base+0xfa50>  // b.none
  429d30:	ldp	x28, x27, [sp, #48]
  429d34:	ldr	x19, [sp, #64]
  429d38:	ldr	x16, [sp, #104]
  429d3c:	ldr	x17, [sp, #80]
  429d40:	mov	w23, #0x18                  	// #24
  429d44:	b	429a20 <_obstack_memory_used@@Base+0xf88c>
  429d48:	ldp	x28, x27, [sp, #48]
  429d4c:	ldp	x25, x12, [sp, #72]
  429d50:	ldr	x20, [sp, #104]
  429d54:	ldr	x8, [sp, #88]
  429d58:	cbz	x8, 429d84 <_obstack_memory_used@@Base+0xfbf0>
  429d5c:	ldr	x8, [sp, #40]
  429d60:	stp	x20, x2, [x29, #-80]
  429d64:	cbz	x8, 429e5c <_obstack_memory_used@@Base+0xfcc8>
  429d68:	mov	w23, #0x18                  	// #24
  429d6c:	cbnz	x12, 42a070 <_obstack_memory_used@@Base+0xfedc>
  429d70:	mov	w8, #0x1                   	// #1
  429d74:	str	x24, [x25]
  429d78:	stur	x8, [x29, #-56]
  429d7c:	mov	w20, #0x1                   	// #1
  429d80:	b	429ed4 <_obstack_memory_used@@Base+0xfd40>
  429d84:	ldr	x8, [x14, #48]
  429d88:	ldp	q2, q0, [x14, #16]
  429d8c:	ldr	q1, [x14]
  429d90:	cmp	x23, #0x1
  429d94:	stp	q2, q0, [x29, #-80]
  429d98:	stp	x23, x8, [x29, #-56]
  429d9c:	stur	q1, [x29, #-96]
  429da0:	b.lt	429e4c <_obstack_memory_used@@Base+0xfcb8>  // b.tstop
  429da4:	lsl	x22, x23, #3
  429da8:	mov	x0, x22
  429dac:	stur	x23, [x29, #-64]
  429db0:	bl	4023a0 <malloc@plt>
  429db4:	stur	x0, [x29, #-48]
  429db8:	cbz	x0, 42a0f8 <_obstack_memory_used@@Base+0xff64>
  429dbc:	ldr	x8, [sp, #120]
  429dc0:	mov	x2, x22
  429dc4:	mov	x25, x0
  429dc8:	ldr	x1, [x8, #48]
  429dcc:	bl	402210 <memcpy@plt>
  429dd0:	ldur	x8, [x29, #-112]
  429dd4:	mov	x12, x23
  429dd8:	mov	w23, #0x18                  	// #24
  429ddc:	stp	x20, x8, [x29, #-80]
  429de0:	lsl	x8, x12, #1
  429de4:	lsl	x1, x12, #4
  429de8:	mov	x0, x25
  429dec:	str	x8, [sp, #40]
  429df0:	stur	x8, [x29, #-64]
  429df4:	mov	x20, x12
  429df8:	bl	4024c0 <realloc@plt>
  429dfc:	cbz	x0, 42a108 <_obstack_memory_used@@Base+0xff74>
  429e00:	ldur	x2, [x29, #-112]
  429e04:	mov	x25, x0
  429e08:	mov	x12, x20
  429e0c:	stur	x0, [x29, #-48]
  429e10:	ldr	x8, [x25]
  429e14:	cmp	x8, x24
  429e18:	b.le	429e98 <_obstack_memory_used@@Base+0xfd04>
  429e1c:	ldr	x15, [sp, #112]
  429e20:	cmp	x12, #0x1
  429e24:	mov	x8, x12
  429e28:	b.lt	429ec8 <_obstack_memory_used@@Base+0xfd34>  // b.tstop
  429e2c:	mov	x9, x12
  429e30:	add	x10, x25, x9, lsl #3
  429e34:	ldur	x11, [x10, #-8]
  429e38:	subs	x8, x9, #0x1
  429e3c:	mov	x9, x8
  429e40:	str	x11, [x10]
  429e44:	b.gt	429e30 <_obstack_memory_used@@Base+0xfc9c>
  429e48:	b	429ec8 <_obstack_memory_used@@Base+0xfd34>
  429e4c:	ldr	x8, [sp, #8]
  429e50:	stp	xzr, xzr, [x8]
  429e54:	str	xzr, [x8, #16]
  429e58:	stp	x20, x2, [x29, #-80]
  429e5c:	ldr	q0, [sp, #16]
  429e60:	mov	w0, #0x8                   	// #8
  429e64:	stur	q0, [x29, #-64]
  429e68:	bl	4023a0 <malloc@plt>
  429e6c:	mov	w23, #0x18                  	// #24
  429e70:	stur	x0, [x29, #-48]
  429e74:	cbz	x0, 42a0f8 <_obstack_memory_used@@Base+0xff64>
  429e78:	ldur	x2, [x29, #-112]
  429e7c:	ldr	x15, [sp, #112]
  429e80:	mov	w8, #0x1                   	// #1
  429e84:	mov	x25, x0
  429e88:	str	x24, [x0]
  429e8c:	mov	w20, #0x1                   	// #1
  429e90:	str	x8, [sp, #40]
  429e94:	b	429ed4 <_obstack_memory_used@@Base+0xfd40>
  429e98:	add	x8, x25, x12, lsl #3
  429e9c:	ldur	x9, [x8, #-8]
  429ea0:	ldr	x15, [sp, #112]
  429ea4:	mov	x8, x12
  429ea8:	cmp	x9, x24
  429eac:	b.le	429ec8 <_obstack_memory_used@@Base+0xfd34>
  429eb0:	add	x10, x25, x8, lsl #3
  429eb4:	str	x9, [x10]
  429eb8:	ldur	x9, [x10, #-16]
  429ebc:	sub	x8, x8, #0x1
  429ec0:	cmp	x9, x24
  429ec4:	b.gt	429eb0 <_obstack_memory_used@@Base+0xfd1c>
  429ec8:	add	x20, x12, #0x1
  429ecc:	str	x24, [x25, x8, lsl #3]
  429ed0:	stur	x20, [x29, #-56]
  429ed4:	ldur	x8, [x29, #-96]
  429ed8:	sub	x1, x29, #0x60
  429edc:	mov	x0, x15
  429ee0:	ldr	x19, [x8, x2, lsl #3]
  429ee4:	str	x8, [sp, #88]
  429ee8:	bl	428ef4 <_obstack_memory_used@@Base+0xed60>
  429eec:	cbnz	w0, 42a0e8 <_obstack_memory_used@@Base+0xff54>
  429ef0:	ldp	x15, x14, [sp, #112]
  429ef4:	ldur	x2, [x29, #-112]
  429ef8:	mov	w13, #0x28                  	// #40
  429efc:	str	x25, [sp, #72]
  429f00:	ldr	x22, [x14, #8]
  429f04:	cbz	x22, 429f90 <_obstack_memory_used@@Base+0xfdfc>
  429f08:	tbnz	x2, #63, 429f88 <_obstack_memory_used@@Base+0xfdf4>
  429f0c:	ldr	x23, [sp, #88]
  429f10:	ldr	x25, [sp, #32]
  429f14:	b	429f2c <_obstack_memory_used@@Base+0xfd98>
  429f18:	str	x8, [x22]
  429f1c:	subs	x25, x25, #0x1
  429f20:	add	x23, x23, #0x8
  429f24:	add	x22, x22, #0x8
  429f28:	b.eq	429f88 <_obstack_memory_used@@Base+0xfdf4>  // b.none
  429f2c:	ldr	x9, [x22]
  429f30:	ldr	x8, [x23]
  429f34:	cbz	x9, 429f18 <_obstack_memory_used@@Base+0xfd84>
  429f38:	cbz	x8, 429f1c <_obstack_memory_used@@Base+0xfd88>
  429f3c:	add	x1, x9, #0x8
  429f40:	add	x2, x8, #0x8
  429f44:	sub	x0, x29, #0x28
  429f48:	bl	42736c <_obstack_memory_used@@Base+0xd1d8>
  429f4c:	stur	w0, [x29, #-12]
  429f50:	cbnz	w0, 42a0e8 <_obstack_memory_used@@Base+0xff54>
  429f54:	sub	x0, x29, #0xc
  429f58:	sub	x2, x29, #0x28
  429f5c:	mov	x1, x28
  429f60:	bl	4286d8 <_obstack_memory_used@@Base+0xe544>
  429f64:	str	x0, [x22]
  429f68:	ldur	x0, [x29, #-24]
  429f6c:	bl	402620 <free@plt>
  429f70:	ldur	w26, [x29, #-12]
  429f74:	ldur	x2, [x29, #-112]
  429f78:	ldp	x15, x14, [sp, #112]
  429f7c:	mov	w13, #0x28                  	// #40
  429f80:	cbz	w26, 429f1c <_obstack_memory_used@@Base+0xfd88>
  429f84:	b	42a0bc <_obstack_memory_used@@Base+0xff28>
  429f88:	ldr	x25, [sp, #72]
  429f8c:	mov	w23, #0x18                  	// #24
  429f90:	ldr	x8, [sp, #88]
  429f94:	subs	x17, x20, #0x1
  429f98:	str	x19, [x8, x2, lsl #3]
  429f9c:	b.lt	42a058 <_obstack_memory_used@@Base+0xfec4>  // b.tstop
  429fa0:	ldr	x19, [sp, #64]
  429fa4:	ldr	x16, [sp, #104]
  429fa8:	mov	x8, xzr
  429fac:	b.eq	429fd4 <_obstack_memory_used@@Base+0xfe40>  // b.none
  429fb0:	mov	x9, x17
  429fb4:	add	x10, x8, x9
  429fb8:	lsr	x10, x10, #1
  429fbc:	ldr	x11, [x25, x10, lsl #3]
  429fc0:	cmp	x11, x24
  429fc4:	csinc	x8, x8, x10, ge  // ge = tcont
  429fc8:	csel	x9, x9, x10, lt  // lt = tstop
  429fcc:	cmp	x8, x9
  429fd0:	b.cc	429fb4 <_obstack_memory_used@@Base+0xfe20>  // b.lo, b.ul, b.last
  429fd4:	ldr	x9, [x25, x8, lsl #3]
  429fd8:	cmp	x9, x24
  429fdc:	csinv	x9, x8, xzr, eq  // eq = none
  429fe0:	tbnz	x9, #63, 42a060 <_obstack_memory_used@@Base+0xfecc>
  429fe4:	cmp	x20, x9
  429fe8:	b.le	42a060 <_obstack_memory_used@@Base+0xfecc>
  429fec:	cmp	x17, x9
  429ff0:	stur	x17, [x29, #-56]
  429ff4:	b.le	42a064 <_obstack_memory_used@@Base+0xfed0>
  429ff8:	mvn	x9, x8
  429ffc:	add	x9, x20, x9
  42a000:	cmp	x9, #0x4
  42a004:	b.cc	42a03c <_obstack_memory_used@@Base+0xfea8>  // b.lo, b.ul, b.last
  42a008:	and	x10, x9, #0xfffffffffffffffc
  42a00c:	add	x11, x25, x8, lsl #3
  42a010:	add	x8, x8, x10
  42a014:	add	x11, x11, #0x10
  42a018:	mov	x12, x10
  42a01c:	ldur	q0, [x11, #-8]
  42a020:	ldur	q1, [x11, #8]
  42a024:	subs	x12, x12, #0x4
  42a028:	stp	q0, q1, [x11, #-16]
  42a02c:	add	x11, x11, #0x20
  42a030:	b.ne	42a01c <_obstack_memory_used@@Base+0xfe88>  // b.any
  42a034:	cmp	x9, x10
  42a038:	b.eq	42a064 <_obstack_memory_used@@Base+0xfed0>  // b.none
  42a03c:	add	x9, x25, x8, lsl #3
  42a040:	ldr	x10, [x9, #8]
  42a044:	add	x8, x8, #0x1
  42a048:	cmp	x17, x8
  42a04c:	str	x10, [x9]
  42a050:	b.ne	42a03c <_obstack_memory_used@@Base+0xfea8>  // b.any
  42a054:	b	42a064 <_obstack_memory_used@@Base+0xfed0>
  42a058:	ldr	x19, [sp, #64]
  42a05c:	ldr	x16, [sp, #104]
  42a060:	mov	x17, x20
  42a064:	ldr	x8, [x15, #216]
  42a068:	madd	x25, x24, x13, x8
  42a06c:	b	429a20 <_obstack_memory_used@@Base+0xf88c>
  42a070:	ldr	x8, [sp, #40]
  42a074:	cmp	x8, x12
  42a078:	b.eq	429de0 <_obstack_memory_used@@Base+0xfc4c>  // b.none
  42a07c:	b	429e10 <_obstack_memory_used@@Base+0xfc7c>
  42a080:	stur	wzr, [x29, #-100]
  42a084:	mov	w26, wzr
  42a088:	mov	w0, w26
  42a08c:	ldp	x20, x19, [sp, #320]
  42a090:	ldp	x22, x21, [sp, #304]
  42a094:	ldp	x24, x23, [sp, #288]
  42a098:	ldp	x26, x25, [sp, #272]
  42a09c:	ldp	x28, x27, [sp, #256]
  42a0a0:	ldp	x29, x30, [sp, #240]
  42a0a4:	add	sp, sp, #0x150
  42a0a8:	ret
  42a0ac:	mov	w26, w0
  42a0b0:	stur	w0, [x29, #-100]
  42a0b4:	b	42a088 <_obstack_memory_used@@Base+0xfef4>
  42a0b8:	mov	w26, wzr
  42a0bc:	ldur	x8, [x29, #-96]
  42a0c0:	cbz	x8, 42a0cc <_obstack_memory_used@@Base+0xff38>
  42a0c4:	ldur	x0, [x29, #-48]
  42a0c8:	bl	402620 <free@plt>
  42a0cc:	stur	w26, [x29, #-100]
  42a0d0:	cbz	w26, 42a084 <_obstack_memory_used@@Base+0xfef0>
  42a0d4:	b	42a088 <_obstack_memory_used@@Base+0xfef4>
  42a0d8:	mov	w26, #0xc                   	// #12
  42a0dc:	stur	w0, [x29, #-96]
  42a0e0:	stur	w26, [x29, #-100]
  42a0e4:	b	42a088 <_obstack_memory_used@@Base+0xfef4>
  42a0e8:	mov	w26, w0
  42a0ec:	b	42a0bc <_obstack_memory_used@@Base+0xff28>
  42a0f0:	mov	w26, w0
  42a0f4:	b	42a088 <_obstack_memory_used@@Base+0xfef4>
  42a0f8:	ldr	x8, [sp, #8]
  42a0fc:	mov	w26, #0xc                   	// #12
  42a100:	stp	xzr, xzr, [x8]
  42a104:	b	42a0bc <_obstack_memory_used@@Base+0xff28>
  42a108:	mov	w26, #0xc                   	// #12
  42a10c:	b	42a0bc <_obstack_memory_used@@Base+0xff28>
  42a110:	stp	x29, x30, [sp, #-48]!
  42a114:	stp	x22, x21, [sp, #16]
  42a118:	stp	x20, x19, [sp, #32]
  42a11c:	ldr	x9, [x1, #8]
  42a120:	mov	x29, sp
  42a124:	cbz	x9, 42a2bc <_obstack_memory_used@@Base+0x10128>
  42a128:	ldr	x10, [x2, #8]
  42a12c:	mov	x20, x2
  42a130:	cbz	x10, 42a2bc <_obstack_memory_used@@Base+0x10128>
  42a134:	ldp	x8, x13, [x0]
  42a138:	add	x11, x10, x9
  42a13c:	mov	x21, x1
  42a140:	mov	x19, x0
  42a144:	add	x12, x13, x11
  42a148:	cmp	x12, x8
  42a14c:	b.le	42a178 <_obstack_memory_used@@Base+0xffe4>
  42a150:	ldr	x0, [x19, #16]
  42a154:	add	x22, x8, x11
  42a158:	lsl	x1, x22, #3
  42a15c:	bl	4024c0 <realloc@plt>
  42a160:	cbz	x0, 42a2d0 <_obstack_memory_used@@Base+0x1013c>
  42a164:	str	x0, [x19, #16]
  42a168:	str	x22, [x19]
  42a16c:	ldr	x13, [x19, #8]
  42a170:	ldr	x9, [x21, #8]
  42a174:	ldr	x10, [x20, #8]
  42a178:	ldr	x11, [x21, #16]
  42a17c:	ldr	x12, [x20, #16]
  42a180:	add	x8, x9, x13
  42a184:	add	x8, x8, x10
  42a188:	sub	x13, x13, #0x1
  42a18c:	sub	x9, x9, #0x1
  42a190:	mov	x14, x10
  42a194:	sub	x10, x14, #0x1
  42a198:	ldr	x16, [x12, x10, lsl #3]
  42a19c:	ldr	x15, [x11, x9, lsl #3]
  42a1a0:	cmp	x15, x16
  42a1a4:	b.eq	42a1cc <_obstack_memory_used@@Base+0x10038>  // b.none
  42a1a8:	b.lt	42a1bc <_obstack_memory_used@@Base+0x10028>  // b.tstop
  42a1ac:	cmp	x9, #0x0
  42a1b0:	sub	x9, x9, #0x1
  42a1b4:	b.gt	42a19c <_obstack_memory_used@@Base+0x10008>
  42a1b8:	b	42a224 <_obstack_memory_used@@Base+0x10090>
  42a1bc:	cmp	x14, #0x2
  42a1c0:	mov	x14, x10
  42a1c4:	b.ge	42a194 <_obstack_memory_used@@Base+0x10000>  // b.tcont
  42a1c8:	b	42a224 <_obstack_memory_used@@Base+0x10090>
  42a1cc:	tbnz	x13, #63, 42a1f4 <_obstack_memory_used@@Base+0x10060>
  42a1d0:	ldr	x17, [x19, #16]
  42a1d4:	ldr	x16, [x17, x13, lsl #3]
  42a1d8:	cmp	x16, x15
  42a1dc:	b.le	42a1fc <_obstack_memory_used@@Base+0x10068>
  42a1e0:	sub	x16, x13, #0x1
  42a1e4:	cmp	x13, #0x0
  42a1e8:	mov	x13, x16
  42a1ec:	b.gt	42a1d4 <_obstack_memory_used@@Base+0x10040>
  42a1f0:	b	42a204 <_obstack_memory_used@@Base+0x10070>
  42a1f4:	mov	x16, x13
  42a1f8:	b	42a204 <_obstack_memory_used@@Base+0x10070>
  42a1fc:	mov	x16, x13
  42a200:	b.eq	42a214 <_obstack_memory_used@@Base+0x10080>  // b.none
  42a204:	ldr	x13, [x19, #16]
  42a208:	sub	x8, x8, #0x1
  42a20c:	str	x15, [x13, x8, lsl #3]
  42a210:	mov	x13, x16
  42a214:	cmp	x9, #0x1
  42a218:	b.lt	42a224 <_obstack_memory_used@@Base+0x10090>  // b.tstop
  42a21c:	cmp	x14, #0x2
  42a220:	b.ge	42a18c <_obstack_memory_used@@Base+0xfff8>  // b.tcont
  42a224:	ldp	x12, x0, [x19, #8]
  42a228:	ldr	x13, [x21, #8]
  42a22c:	ldr	x14, [x20, #8]
  42a230:	subs	x9, x12, #0x1
  42a234:	add	x9, x9, x13
  42a238:	add	x10, x9, x14
  42a23c:	sub	x15, x10, x8
  42a240:	add	x9, x15, #0x1
  42a244:	subs	x11, x12, #0x1
  42a248:	add	x16, x9, x12
  42a24c:	str	x16, [x19, #8]
  42a250:	b.lt	42a2ac <_obstack_memory_used@@Base+0x10118>  // b.tstop
  42a254:	tbnz	x15, #63, 42a2ac <_obstack_memory_used@@Base+0x10118>
  42a258:	add	x12, x12, x14
  42a25c:	add	x12, x12, x13
  42a260:	sub	x12, x12, x8
  42a264:	add	x12, x0, x12, lsl #3
  42a268:	ldr	x14, [x0, x10, lsl #3]
  42a26c:	ldr	x13, [x0, x11, lsl #3]
  42a270:	cmp	x14, x13
  42a274:	b.gt	42a290 <_obstack_memory_used@@Base+0x100fc>
  42a278:	sub	x14, x11, #0x1
  42a27c:	cmp	x11, #0x0
  42a280:	str	x13, [x12, x11, lsl #3]
  42a284:	mov	x11, x14
  42a288:	b.gt	42a268 <_obstack_memory_used@@Base+0x100d4>
  42a28c:	b	42a2ac <_obstack_memory_used@@Base+0x10118>
  42a290:	mov	x13, xzr
  42a294:	sub	x10, x10, #0x1
  42a298:	sub	x9, x9, #0x1
  42a29c:	str	x14, [x12, x11, lsl #3]
  42a2a0:	sub	x12, x12, #0x8
  42a2a4:	cbnz	x9, 42a268 <_obstack_memory_used@@Base+0x100d4>
  42a2a8:	b	42a2b0 <_obstack_memory_used@@Base+0x1011c>
  42a2ac:	mov	x13, x9
  42a2b0:	add	x1, x0, x8, lsl #3
  42a2b4:	lsl	x2, x13, #3
  42a2b8:	bl	402210 <memcpy@plt>
  42a2bc:	mov	w0, wzr
  42a2c0:	ldp	x20, x19, [sp, #32]
  42a2c4:	ldp	x22, x21, [sp, #16]
  42a2c8:	ldp	x29, x30, [sp], #48
  42a2cc:	ret
  42a2d0:	mov	w0, #0xc                   	// #12
  42a2d4:	ldp	x20, x19, [sp, #32]
  42a2d8:	ldp	x22, x21, [sp, #16]
  42a2dc:	ldp	x29, x30, [sp], #48
  42a2e0:	ret
  42a2e4:	sub	sp, sp, #0x80
  42a2e8:	stp	x29, x30, [sp, #32]
  42a2ec:	stp	x28, x27, [sp, #48]
  42a2f0:	stp	x26, x25, [sp, #64]
  42a2f4:	stp	x24, x23, [sp, #80]
  42a2f8:	stp	x22, x21, [sp, #96]
  42a2fc:	stp	x20, x19, [sp, #112]
  42a300:	ldr	x25, [x0, #56]
  42a304:	mov	w8, #0x18                  	// #24
  42a308:	stp	xzr, xzr, [sp, #8]
  42a30c:	str	xzr, [sp, #24]
  42a310:	madd	x24, x1, x8, x25
  42a314:	ldr	x8, [x24, #8]!
  42a318:	add	x29, sp, #0x20
  42a31c:	cmp	x8, #0x1
  42a320:	b.lt	42a5bc <_obstack_memory_used@@Base+0x10428>  // b.tstop
  42a324:	mov	w27, #0x18                  	// #24
  42a328:	madd	x9, x1, x27, x25
  42a32c:	mov	x21, x3
  42a330:	mov	x20, x1
  42a334:	mov	x22, x0
  42a338:	mov	x19, x2
  42a33c:	mov	x26, xzr
  42a340:	add	x28, x9, #0x10
  42a344:	b	42a354 <_obstack_memory_used@@Base+0x101c0>
  42a348:	add	x26, x26, #0x1
  42a34c:	cmp	x26, x8
  42a350:	b.ge	42a4c8 <_obstack_memory_used@@Base+0x10334>  // b.tcont
  42a354:	ldr	x11, [x28]
  42a358:	ldr	x9, [x11, x26, lsl #3]
  42a35c:	cmp	x9, x20
  42a360:	b.eq	42a348 <_obstack_memory_used@@Base+0x101b4>  // b.none
  42a364:	ldr	x10, [x22]
  42a368:	add	x10, x10, x9, lsl #4
  42a36c:	ldrb	w10, [x10, #8]
  42a370:	tbz	w10, #3, 42a348 <_obstack_memory_used@@Base+0x101b4>
  42a374:	ldr	x10, [x22, #40]
  42a378:	madd	x12, x9, x27, x10
  42a37c:	ldp	x13, x10, [x12, #8]
  42a380:	ldr	x12, [x10]
  42a384:	cmp	x13, #0x1
  42a388:	b.le	42a39c <_obstack_memory_used@@Base+0x10208>
  42a38c:	ldr	x10, [x10, #8]
  42a390:	subs	x13, x8, #0x1
  42a394:	b.ge	42a3a8 <_obstack_memory_used@@Base+0x10214>  // b.tcont
  42a398:	b	42a3dc <_obstack_memory_used@@Base+0x10248>
  42a39c:	mov	x10, #0xffffffffffffffff    	// #-1
  42a3a0:	subs	x13, x8, #0x1
  42a3a4:	b.lt	42a3dc <_obstack_memory_used@@Base+0x10248>  // b.tstop
  42a3a8:	mov	x14, xzr
  42a3ac:	b.eq	42a3d0 <_obstack_memory_used@@Base+0x1023c>  // b.none
  42a3b0:	add	x15, x14, x13
  42a3b4:	lsr	x15, x15, #1
  42a3b8:	ldr	x16, [x11, x15, lsl #3]
  42a3bc:	cmp	x16, x12
  42a3c0:	csinc	x14, x14, x15, ge  // ge = tcont
  42a3c4:	csel	x13, x13, x15, lt  // lt = tstop
  42a3c8:	cmp	x14, x13
  42a3cc:	b.cc	42a3b0 <_obstack_memory_used@@Base+0x1021c>  // b.lo, b.ul, b.last
  42a3d0:	ldr	x13, [x11, x14, lsl #3]
  42a3d4:	cmp	x13, x12
  42a3d8:	b.eq	42a420 <_obstack_memory_used@@Base+0x1028c>  // b.none
  42a3dc:	ldr	x13, [x19, #8]
  42a3e0:	subs	x14, x13, #0x1
  42a3e4:	b.lt	42a420 <_obstack_memory_used@@Base+0x1028c>  // b.tstop
  42a3e8:	ldr	x13, [x19, #16]
  42a3ec:	mov	x15, xzr
  42a3f0:	b.eq	42a414 <_obstack_memory_used@@Base+0x10280>  // b.none
  42a3f4:	add	x16, x15, x14
  42a3f8:	lsr	x16, x16, #1
  42a3fc:	ldr	x17, [x13, x16, lsl #3]
  42a400:	cmp	x17, x12
  42a404:	csinc	x15, x15, x16, ge  // ge = tcont
  42a408:	csel	x14, x14, x16, lt  // lt = tstop
  42a40c:	cmp	x15, x14
  42a410:	b.cc	42a3f4 <_obstack_memory_used@@Base+0x10260>  // b.lo, b.ul, b.last
  42a414:	ldr	x13, [x13, x15, lsl #3]
  42a418:	cmp	x13, x12
  42a41c:	b.eq	42a4a8 <_obstack_memory_used@@Base+0x10314>  // b.none
  42a420:	cmp	x10, #0x1
  42a424:	b.lt	42a348 <_obstack_memory_used@@Base+0x101b4>  // b.tstop
  42a428:	subs	x12, x8, #0x1
  42a42c:	b.lt	42a464 <_obstack_memory_used@@Base+0x102d0>  // b.tstop
  42a430:	mov	x13, xzr
  42a434:	b.eq	42a458 <_obstack_memory_used@@Base+0x102c4>  // b.none
  42a438:	add	x14, x13, x12
  42a43c:	lsr	x14, x14, #1
  42a440:	ldr	x15, [x11, x14, lsl #3]
  42a444:	cmp	x15, x10
  42a448:	csinc	x13, x13, x14, ge  // ge = tcont
  42a44c:	csel	x12, x12, x14, lt  // lt = tstop
  42a450:	cmp	x13, x12
  42a454:	b.cc	42a438 <_obstack_memory_used@@Base+0x102a4>  // b.lo, b.ul, b.last
  42a458:	ldr	x11, [x11, x13, lsl #3]
  42a45c:	cmp	x11, x10
  42a460:	b.eq	42a348 <_obstack_memory_used@@Base+0x101b4>  // b.none
  42a464:	ldr	x11, [x19, #8]
  42a468:	subs	x12, x11, #0x1
  42a46c:	b.lt	42a348 <_obstack_memory_used@@Base+0x101b4>  // b.tstop
  42a470:	ldr	x11, [x19, #16]
  42a474:	mov	x13, xzr
  42a478:	b.eq	42a49c <_obstack_memory_used@@Base+0x10308>  // b.none
  42a47c:	add	x14, x13, x12
  42a480:	lsr	x14, x14, #1
  42a484:	ldr	x15, [x11, x14, lsl #3]
  42a488:	cmp	x15, x10
  42a48c:	csinc	x13, x13, x14, ge  // ge = tcont
  42a490:	csel	x12, x12, x14, lt  // lt = tstop
  42a494:	cmp	x13, x12
  42a498:	b.cc	42a47c <_obstack_memory_used@@Base+0x102e8>  // b.lo, b.ul, b.last
  42a49c:	ldr	x11, [x11, x13, lsl #3]
  42a4a0:	cmp	x11, x10
  42a4a4:	b.ne	42a348 <_obstack_memory_used@@Base+0x101b4>  // b.any
  42a4a8:	ldr	x8, [x22, #56]
  42a4ac:	add	x0, sp, #0x8
  42a4b0:	mov	x1, x21
  42a4b4:	madd	x2, x9, x27, x8
  42a4b8:	bl	42a110 <_obstack_memory_used@@Base+0xff7c>
  42a4bc:	cbnz	w0, 42a68c <_obstack_memory_used@@Base+0x104f8>
  42a4c0:	ldr	x8, [x24]
  42a4c4:	b	42a348 <_obstack_memory_used@@Base+0x101b4>
  42a4c8:	cmp	x8, #0x0
  42a4cc:	b.le	42a5bc <_obstack_memory_used@@Base+0x10428>
  42a4d0:	mov	w8, #0x18                  	// #24
  42a4d4:	madd	x8, x20, x8, x25
  42a4d8:	ldp	x9, x0, [sp, #16]
  42a4dc:	ldr	x8, [x8, #16]
  42a4e0:	subs	x9, x9, #0x1
  42a4e4:	b.lt	42a5ec <_obstack_memory_used@@Base+0x10458>  // b.tstop
  42a4e8:	mov	x10, xzr
  42a4ec:	b	42a500 <_obstack_memory_used@@Base+0x1036c>
  42a4f0:	ldr	x11, [x24]
  42a4f4:	add	x10, x10, #0x1
  42a4f8:	cmp	x10, x11
  42a4fc:	b.ge	42a5c0 <_obstack_memory_used@@Base+0x1042c>  // b.tcont
  42a500:	ldr	x11, [x8, x10, lsl #3]
  42a504:	mov	x12, xzr
  42a508:	cbz	x9, 42a530 <_obstack_memory_used@@Base+0x1039c>
  42a50c:	mov	x13, x9
  42a510:	add	x14, x12, x13
  42a514:	lsr	x14, x14, #1
  42a518:	ldr	x15, [x0, x14, lsl #3]
  42a51c:	cmp	x15, x11
  42a520:	csinc	x12, x12, x14, ge  // ge = tcont
  42a524:	csel	x13, x13, x14, lt  // lt = tstop
  42a528:	cmp	x12, x13
  42a52c:	b.cc	42a510 <_obstack_memory_used@@Base+0x1037c>  // b.lo, b.ul, b.last
  42a530:	ldr	x12, [x0, x12, lsl #3]
  42a534:	cmp	x12, x11
  42a538:	b.eq	42a4f0 <_obstack_memory_used@@Base+0x1035c>  // b.none
  42a53c:	ldr	x15, [x19, #8]
  42a540:	subs	x14, x15, #0x1
  42a544:	b.lt	42a4f0 <_obstack_memory_used@@Base+0x1035c>  // b.tstop
  42a548:	ldr	x12, [x19, #16]
  42a54c:	mov	x13, xzr
  42a550:	b.eq	42a578 <_obstack_memory_used@@Base+0x103e4>  // b.none
  42a554:	mov	x16, x14
  42a558:	add	x17, x13, x16
  42a55c:	lsr	x17, x17, #1
  42a560:	ldr	x18, [x12, x17, lsl #3]
  42a564:	cmp	x18, x11
  42a568:	csinc	x13, x13, x17, ge  // ge = tcont
  42a56c:	csel	x16, x16, x17, lt  // lt = tstop
  42a570:	cmp	x13, x16
  42a574:	b.cc	42a558 <_obstack_memory_used@@Base+0x103c4>  // b.lo, b.ul, b.last
  42a578:	ldr	x16, [x12, x13, lsl #3]
  42a57c:	cmp	x16, x11
  42a580:	csinv	x11, x13, xzr, eq  // eq = none
  42a584:	tbnz	x11, #63, 42a4f0 <_obstack_memory_used@@Base+0x1035c>
  42a588:	cmp	x15, x11
  42a58c:	b.le	42a4f0 <_obstack_memory_used@@Base+0x1035c>
  42a590:	cmp	x14, x11
  42a594:	str	x14, [x19, #8]
  42a598:	b.le	42a4f0 <_obstack_memory_used@@Base+0x1035c>
  42a59c:	add	x11, x12, x13, lsl #3
  42a5a0:	ldr	x14, [x11, #8]
  42a5a4:	add	x13, x13, #0x1
  42a5a8:	str	x14, [x11]
  42a5ac:	ldr	x11, [x19, #8]
  42a5b0:	cmp	x13, x11
  42a5b4:	b.lt	42a59c <_obstack_memory_used@@Base+0x10408>  // b.tstop
  42a5b8:	b	42a4f0 <_obstack_memory_used@@Base+0x1035c>
  42a5bc:	ldr	x0, [sp, #24]
  42a5c0:	mov	w23, wzr
  42a5c4:	bl	402620 <free@plt>
  42a5c8:	mov	w0, w23
  42a5cc:	ldp	x20, x19, [sp, #112]
  42a5d0:	ldp	x22, x21, [sp, #96]
  42a5d4:	ldp	x24, x23, [sp, #80]
  42a5d8:	ldp	x26, x25, [sp, #64]
  42a5dc:	ldp	x28, x27, [sp, #48]
  42a5e0:	ldp	x29, x30, [sp, #32]
  42a5e4:	add	sp, sp, #0x80
  42a5e8:	ret
  42a5ec:	ldr	x10, [x19, #8]
  42a5f0:	mov	x9, xzr
  42a5f4:	b	42a608 <_obstack_memory_used@@Base+0x10474>
  42a5f8:	ldr	x11, [x24]
  42a5fc:	add	x9, x9, #0x1
  42a600:	cmp	x9, x11
  42a604:	b.ge	42a5c0 <_obstack_memory_used@@Base+0x1042c>  // b.tcont
  42a608:	subs	x13, x10, #0x1
  42a60c:	b.lt	42a5f8 <_obstack_memory_used@@Base+0x10464>  // b.tstop
  42a610:	ldr	x14, [x8, x9, lsl #3]
  42a614:	ldr	x11, [x19, #16]
  42a618:	mov	x12, xzr
  42a61c:	b.eq	42a644 <_obstack_memory_used@@Base+0x104b0>  // b.none
  42a620:	mov	x15, x13
  42a624:	add	x16, x12, x15
  42a628:	lsr	x16, x16, #1
  42a62c:	ldr	x17, [x11, x16, lsl #3]
  42a630:	cmp	x17, x14
  42a634:	csinc	x12, x12, x16, ge  // ge = tcont
  42a638:	csel	x15, x15, x16, lt  // lt = tstop
  42a63c:	cmp	x12, x15
  42a640:	b.cc	42a624 <_obstack_memory_used@@Base+0x10490>  // b.lo, b.ul, b.last
  42a644:	ldr	x15, [x11, x12, lsl #3]
  42a648:	cmp	x15, x14
  42a64c:	csinv	x14, x12, xzr, eq  // eq = none
  42a650:	tbnz	x14, #63, 42a5f8 <_obstack_memory_used@@Base+0x10464>
  42a654:	cmp	x10, x14
  42a658:	b.le	42a5f8 <_obstack_memory_used@@Base+0x10464>
  42a65c:	cmp	x13, x14
  42a660:	mov	x10, x13
  42a664:	str	x13, [x19, #8]
  42a668:	b.le	42a5f8 <_obstack_memory_used@@Base+0x10464>
  42a66c:	add	x10, x11, x12, lsl #3
  42a670:	ldr	x13, [x10, #8]
  42a674:	add	x12, x12, #0x1
  42a678:	str	x13, [x10]
  42a67c:	ldr	x10, [x19, #8]
  42a680:	cmp	x12, x10
  42a684:	b.lt	42a66c <_obstack_memory_used@@Base+0x104d8>  // b.tstop
  42a688:	b	42a5f8 <_obstack_memory_used@@Base+0x10464>
  42a68c:	mov	w23, w0
  42a690:	ldr	x0, [sp, #24]
  42a694:	b	42a5c4 <_obstack_memory_used@@Base+0x10430>
  42a698:	sub	sp, sp, #0x80
  42a69c:	stp	x29, x30, [sp, #32]
  42a6a0:	stp	x28, x27, [sp, #48]
  42a6a4:	stp	x26, x25, [sp, #64]
  42a6a8:	stp	x24, x23, [sp, #80]
  42a6ac:	stp	x22, x21, [sp, #96]
  42a6b0:	stp	x20, x19, [sp, #112]
  42a6b4:	ldr	x24, [x0, #152]
  42a6b8:	mov	w9, #0x18                  	// #24
  42a6bc:	mov	w23, w1
  42a6c0:	add	x29, sp, #0x20
  42a6c4:	ldr	x8, [x24, #48]
  42a6c8:	madd	x25, x3, x9, x8
  42a6cc:	ldr	x9, [x25, #8]!
  42a6d0:	cmp	x9, #0x1
  42a6d4:	b.lt	42a920 <_obstack_memory_used@@Base+0x1078c>  // b.tstop
  42a6d8:	mov	w11, #0x18                  	// #24
  42a6dc:	cmp	x2, #0x3f
  42a6e0:	madd	x8, x3, x11, x8
  42a6e4:	and	w9, w23, #0x2
  42a6e8:	mov	w10, #0x1                   	// #1
  42a6ec:	cset	w11, gt
  42a6f0:	add	x8, x8, #0x10
  42a6f4:	lsl	x10, x10, x2
  42a6f8:	stur	x8, [x29, #-8]
  42a6fc:	orr	w8, w11, w9, lsr #1
  42a700:	mov	x19, x4
  42a704:	mov	x20, x3
  42a708:	mov	x21, x2
  42a70c:	mov	x22, x0
  42a710:	mov	x26, xzr
  42a714:	str	w8, [sp, #8]
  42a718:	mvn	w8, w10
  42a71c:	str	x10, [sp, #16]
  42a720:	str	w8, [sp, #12]
  42a724:	b	42a738 <_obstack_memory_used@@Base+0x105a4>
  42a728:	ldr	x8, [x25]
  42a72c:	add	x26, x26, #0x1
  42a730:	cmp	x26, x8
  42a734:	b.ge	42a920 <_obstack_memory_used@@Base+0x1078c>  // b.tcont
  42a738:	ldur	x8, [x29, #-8]
  42a73c:	ldr	x8, [x8]
  42a740:	ldr	x28, [x8, x26, lsl #3]
  42a744:	ldr	x8, [x24]
  42a748:	add	x8, x8, x28, lsl #4
  42a74c:	ldrb	w9, [x8, #8]
  42a750:	cmp	w9, #0x9
  42a754:	b.eq	42a78c <_obstack_memory_used@@Base+0x105f8>  // b.none
  42a758:	cmp	w9, #0x8
  42a75c:	b.eq	42a7a0 <_obstack_memory_used@@Base+0x1060c>  // b.none
  42a760:	cmp	w9, #0x4
  42a764:	b.ne	42a728 <_obstack_memory_used@@Base+0x10594>  // b.any
  42a768:	cmn	x19, #0x1
  42a76c:	b.eq	42a728 <_obstack_memory_used@@Base+0x10594>  // b.none
  42a770:	ldr	x8, [x22, #216]
  42a774:	cmp	x21, #0x3f
  42a778:	b.gt	42a838 <_obstack_memory_used@@Base+0x106a4>
  42a77c:	mov	w9, #0x28                  	// #40
  42a780:	madd	x8, x19, x9, x8
  42a784:	add	x27, x8, #0x22
  42a788:	b	42a7d8 <_obstack_memory_used@@Base+0x10644>
  42a78c:	tbz	w23, #1, 42a728 <_obstack_memory_used@@Base+0x10594>
  42a790:	ldr	x8, [x8]
  42a794:	cmp	x8, x21
  42a798:	b.ne	42a728 <_obstack_memory_used@@Base+0x10594>  // b.any
  42a79c:	b	42a930 <_obstack_memory_used@@Base+0x1079c>
  42a7a0:	tbz	w23, #0, 42a728 <_obstack_memory_used@@Base+0x10594>
  42a7a4:	ldr	x8, [x8]
  42a7a8:	cmp	x8, x21
  42a7ac:	b.ne	42a728 <_obstack_memory_used@@Base+0x10594>  // b.any
  42a7b0:	b	42a938 <_obstack_memory_used@@Base+0x107a4>
  42a7b4:	cmn	w0, #0x1
  42a7b8:	b.eq	42a93c <_obstack_memory_used@@Base+0x107a8>  // b.none
  42a7bc:	ldrh	w8, [x27]
  42a7c0:	ldr	w9, [sp, #12]
  42a7c4:	and	w8, w8, w9
  42a7c8:	strh	w8, [x27]
  42a7cc:	ldurb	w8, [x27, #-2]
  42a7d0:	add	x27, x27, #0x28
  42a7d4:	cbz	w8, 42a728 <_obstack_memory_used@@Base+0x10594>
  42a7d8:	ldur	x8, [x27, #-34]
  42a7dc:	cmp	x8, x28
  42a7e0:	b.ne	42a7cc <_obstack_memory_used@@Base+0x10638>  // b.any
  42a7e4:	ldrh	w8, [x27]
  42a7e8:	ldr	x9, [sp, #16]
  42a7ec:	tst	x9, x8
  42a7f0:	b.eq	42a7cc <_obstack_memory_used@@Base+0x10638>  // b.none
  42a7f4:	ldr	x8, [x24, #40]
  42a7f8:	mov	w9, #0x18                  	// #24
  42a7fc:	madd	x8, x28, x9, x8
  42a800:	ldr	x8, [x8, #16]
  42a804:	ldr	x3, [x8]
  42a808:	cmp	x3, x20
  42a80c:	b.eq	42a928 <_obstack_memory_used@@Base+0x10794>  // b.none
  42a810:	mov	x0, x22
  42a814:	mov	w1, w23
  42a818:	mov	x2, x21
  42a81c:	mov	x4, x19
  42a820:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  42a824:	cbnz	w0, 42a7b4 <_obstack_memory_used@@Base+0x10620>
  42a828:	ldr	w8, [sp, #8]
  42a82c:	cbz	w8, 42a7bc <_obstack_memory_used@@Base+0x10628>
  42a830:	tbz	w23, #1, 42a7cc <_obstack_memory_used@@Base+0x10638>
  42a834:	b	42a930 <_obstack_memory_used@@Base+0x1079c>
  42a838:	ldr	w9, [sp, #8]
  42a83c:	tbz	w9, #0, 42a8a8 <_obstack_memory_used@@Base+0x10714>
  42a840:	mov	w9, #0x28                  	// #40
  42a844:	madd	x27, x19, x9, x8
  42a848:	b	42a85c <_obstack_memory_used@@Base+0x106c8>
  42a84c:	tbnz	w23, #1, 42a930 <_obstack_memory_used@@Base+0x1079c>
  42a850:	ldrb	w8, [x27, #32]
  42a854:	add	x27, x27, #0x28
  42a858:	cbz	w8, 42a728 <_obstack_memory_used@@Base+0x10594>
  42a85c:	ldr	x8, [x27]
  42a860:	cmp	x8, x28
  42a864:	b.ne	42a850 <_obstack_memory_used@@Base+0x106bc>  // b.any
  42a868:	ldr	x8, [x24, #40]
  42a86c:	mov	w9, #0x18                  	// #24
  42a870:	madd	x8, x28, x9, x8
  42a874:	ldr	x8, [x8, #16]
  42a878:	ldr	x3, [x8]
  42a87c:	cmp	x3, x20
  42a880:	b.eq	42a928 <_obstack_memory_used@@Base+0x10794>  // b.none
  42a884:	mov	x0, x22
  42a888:	mov	w1, w23
  42a88c:	mov	x2, x21
  42a890:	mov	x4, x19
  42a894:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  42a898:	cbz	w0, 42a84c <_obstack_memory_used@@Base+0x106b8>
  42a89c:	cmn	w0, #0x1
  42a8a0:	b.ne	42a850 <_obstack_memory_used@@Base+0x106bc>  // b.any
  42a8a4:	b	42a93c <_obstack_memory_used@@Base+0x107a8>
  42a8a8:	mov	w9, #0x28                  	// #40
  42a8ac:	madd	x8, x19, x9, x8
  42a8b0:	add	x27, x8, #0x22
  42a8b4:	b	42a8d4 <_obstack_memory_used@@Base+0x10740>
  42a8b8:	ldrh	w8, [x27]
  42a8bc:	ldr	w9, [sp, #12]
  42a8c0:	and	w8, w8, w9
  42a8c4:	strh	w8, [x27]
  42a8c8:	ldurb	w8, [x27, #-2]
  42a8cc:	add	x27, x27, #0x28
  42a8d0:	cbz	w8, 42a728 <_obstack_memory_used@@Base+0x10594>
  42a8d4:	ldur	x8, [x27, #-34]
  42a8d8:	cmp	x8, x28
  42a8dc:	b.ne	42a8c8 <_obstack_memory_used@@Base+0x10734>  // b.any
  42a8e0:	ldr	x8, [x24, #40]
  42a8e4:	mov	w9, #0x18                  	// #24
  42a8e8:	madd	x8, x28, x9, x8
  42a8ec:	ldr	x8, [x8, #16]
  42a8f0:	ldr	x3, [x8]
  42a8f4:	cmp	x3, x20
  42a8f8:	b.eq	42a928 <_obstack_memory_used@@Base+0x10794>  // b.none
  42a8fc:	mov	x0, x22
  42a900:	mov	w1, w23
  42a904:	mov	x2, x21
  42a908:	mov	x4, x19
  42a90c:	bl	42a698 <_obstack_memory_used@@Base+0x10504>
  42a910:	cbz	w0, 42a8b8 <_obstack_memory_used@@Base+0x10724>
  42a914:	cmn	w0, #0x1
  42a918:	b.ne	42a8c8 <_obstack_memory_used@@Base+0x10734>  // b.any
  42a91c:	b	42a93c <_obstack_memory_used@@Base+0x107a8>
  42a920:	ubfx	w0, w23, #1, #1
  42a924:	b	42a93c <_obstack_memory_used@@Base+0x107a8>
  42a928:	sbfx	w0, w23, #0, #1
  42a92c:	b	42a93c <_obstack_memory_used@@Base+0x107a8>
  42a930:	mov	w0, wzr
  42a934:	b	42a93c <_obstack_memory_used@@Base+0x107a8>
  42a938:	mov	w0, #0xffffffff            	// #-1
  42a93c:	ldp	x20, x19, [sp, #112]
  42a940:	ldp	x22, x21, [sp, #96]
  42a944:	ldp	x24, x23, [sp, #80]
  42a948:	ldp	x26, x25, [sp, #64]
  42a94c:	ldp	x28, x27, [sp, #48]
  42a950:	ldp	x29, x30, [sp, #32]
  42a954:	add	sp, sp, #0x80
  42a958:	ret
  42a95c:	stp	x29, x30, [sp, #-48]!
  42a960:	str	x21, [sp, #16]
  42a964:	stp	x20, x19, [sp, #32]
  42a968:	mov	x29, sp
  42a96c:	mov	x20, x0
  42a970:	bl	402320 <__fpending@plt>
  42a974:	ldr	w21, [x20]
  42a978:	mov	x19, x0
  42a97c:	mov	x0, x20
  42a980:	bl	402340 <fclose@plt>
  42a984:	mov	w8, w0
  42a988:	tbnz	w21, #5, 42a9bc <_obstack_memory_used@@Base+0x10828>
  42a98c:	cmp	w8, #0x0
  42a990:	csetm	w0, ne  // ne = any
  42a994:	cbnz	x19, 42a9ac <_obstack_memory_used@@Base+0x10818>
  42a998:	cbz	w8, 42a9ac <_obstack_memory_used@@Base+0x10818>
  42a99c:	bl	4027e0 <__errno_location@plt>
  42a9a0:	ldr	w8, [x0]
  42a9a4:	cmp	w8, #0x9
  42a9a8:	csetm	w0, ne  // ne = any
  42a9ac:	ldp	x20, x19, [sp, #32]
  42a9b0:	ldr	x21, [sp, #16]
  42a9b4:	ldp	x29, x30, [sp], #48
  42a9b8:	ret
  42a9bc:	cbnz	w8, 42a9c8 <_obstack_memory_used@@Base+0x10834>
  42a9c0:	bl	4027e0 <__errno_location@plt>
  42a9c4:	str	wzr, [x0]
  42a9c8:	mov	w0, #0xffffffff            	// #-1
  42a9cc:	ldp	x20, x19, [sp, #32]
  42a9d0:	ldr	x21, [sp, #16]
  42a9d4:	ldp	x29, x30, [sp], #48
  42a9d8:	ret
  42a9dc:	mov	w8, #0xf616                	// #62998
  42a9e0:	movk	w8, #0x95, lsl #16
  42a9e4:	str	xzr, [x0, #16]
  42a9e8:	str	w8, [x0, #24]
  42a9ec:	ret
  42a9f0:	stp	x29, x30, [sp, #-16]!
  42a9f4:	ldr	w8, [x0, #24]
  42a9f8:	mov	w9, #0xf616                	// #62998
  42a9fc:	movk	w9, #0x95, lsl #16
  42aa00:	mov	x29, sp
  42aa04:	cmp	w8, w9
  42aa08:	b.ne	42aa84 <_obstack_memory_used@@Base+0x108f0>  // b.any
  42aa0c:	ldr	x8, [x0, #16]
  42aa10:	cbz	x8, 42aa34 <_obstack_memory_used@@Base+0x108a0>
  42aa14:	ldr	x9, [x1, #8]
  42aa18:	ldr	x10, [x0]
  42aa1c:	cmp	x9, x10
  42aa20:	b.ne	42aa34 <_obstack_memory_used@@Base+0x108a0>  // b.any
  42aa24:	ldr	x9, [x1]
  42aa28:	ldr	x10, [x0, #8]
  42aa2c:	cmp	x9, x10
  42aa30:	b.eq	42aa74 <_obstack_memory_used@@Base+0x108e0>  // b.none
  42aa34:	add	x9, x8, #0x1
  42aa38:	tst	x9, x8
  42aa3c:	str	x9, [x0, #16]
  42aa40:	b.ne	42aa64 <_obstack_memory_used@@Base+0x108d0>  // b.any
  42aa44:	cbz	x9, 42aa74 <_obstack_memory_used@@Base+0x108e0>
  42aa48:	ldr	q0, [x1]
  42aa4c:	mov	w8, wzr
  42aa50:	ext	v0.16b, v0.16b, v0.16b, #8
  42aa54:	str	q0, [x0]
  42aa58:	mov	w0, w8
  42aa5c:	ldp	x29, x30, [sp], #16
  42aa60:	ret
  42aa64:	mov	w8, wzr
  42aa68:	mov	w0, w8
  42aa6c:	ldp	x29, x30, [sp], #16
  42aa70:	ret
  42aa74:	mov	w8, #0x1                   	// #1
  42aa78:	mov	w0, w8
  42aa7c:	ldp	x29, x30, [sp], #16
  42aa80:	ret
  42aa84:	adrp	x0, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42aa88:	adrp	x1, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42aa8c:	adrp	x3, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42aa90:	add	x0, x0, #0x42c
  42aa94:	add	x1, x1, #0x444
  42aa98:	add	x3, x3, #0x452
  42aa9c:	mov	w2, #0x3c                  	// #60
  42aaa0:	bl	4027d0 <__assert_fail@plt>
  42aaa4:	sub	x0, x0, #0x1
  42aaa8:	ldrb	w10, [x0, #1]!
  42aaac:	cmp	w10, #0x2f
  42aab0:	b.eq	42aaa8 <_obstack_memory_used@@Base+0x10914>  // b.none
  42aab4:	mov	w8, wzr
  42aab8:	mov	x9, x0
  42aabc:	and	w10, w10, #0xff
  42aac0:	cmp	w10, #0x2f
  42aac4:	b.ne	42aadc <_obstack_memory_used@@Base+0x10948>  // b.any
  42aac8:	ldrb	w10, [x9, #1]!
  42aacc:	mov	w8, #0x1                   	// #1
  42aad0:	and	w10, w10, #0xff
  42aad4:	cmp	w10, #0x2f
  42aad8:	b.eq	42aac8 <_obstack_memory_used@@Base+0x10934>  // b.none
  42aadc:	cbz	w10, 42ab00 <_obstack_memory_used@@Base+0x1096c>
  42aae0:	tst	w8, #0x1
  42aae4:	csel	x0, x9, x0, ne  // ne = any
  42aae8:	ldrb	w10, [x9, #1]!
  42aaec:	mov	w8, wzr
  42aaf0:	and	w10, w10, #0xff
  42aaf4:	cmp	w10, #0x2f
  42aaf8:	b.ne	42aadc <_obstack_memory_used@@Base+0x10948>  // b.any
  42aafc:	b	42aac8 <_obstack_memory_used@@Base+0x10934>
  42ab00:	ret
  42ab04:	stp	x29, x30, [sp, #-32]!
  42ab08:	str	x19, [sp, #16]
  42ab0c:	mov	x29, sp
  42ab10:	mov	x19, x0
  42ab14:	bl	402270 <strlen@plt>
  42ab18:	mov	x8, x0
  42ab1c:	sub	x9, x19, #0x1
  42ab20:	mov	x0, x8
  42ab24:	cmp	x8, #0x2
  42ab28:	b.cc	42ab3c <_obstack_memory_used@@Base+0x109a8>  // b.lo, b.ul, b.last
  42ab2c:	ldrb	w8, [x9, x0]
  42ab30:	cmp	w8, #0x2f
  42ab34:	sub	x8, x0, #0x1
  42ab38:	b.eq	42ab20 <_obstack_memory_used@@Base+0x1098c>  // b.none
  42ab3c:	ldr	x19, [sp, #16]
  42ab40:	ldp	x29, x30, [sp], #32
  42ab44:	ret
  42ab48:	sub	sp, sp, #0xe0
  42ab4c:	stp	x29, x30, [sp, #208]
  42ab50:	add	x29, sp, #0xd0
  42ab54:	stp	x2, x3, [x29, #-80]
  42ab58:	stp	x4, x5, [x29, #-64]
  42ab5c:	stp	x6, x7, [x29, #-48]
  42ab60:	stp	q1, q2, [sp, #16]
  42ab64:	stp	q3, q4, [sp, #48]
  42ab68:	str	q0, [sp]
  42ab6c:	stp	q5, q6, [sp, #80]
  42ab70:	str	q7, [sp, #112]
  42ab74:	tbnz	w1, #6, 42ab80 <_obstack_memory_used@@Base+0x109ec>
  42ab78:	mov	w2, wzr
  42ab7c:	b	42abd8 <_obstack_memory_used@@Base+0x10a44>
  42ab80:	mov	x9, #0xffffffffffffffd0    	// #-48
  42ab84:	mov	x11, sp
  42ab88:	sub	x12, x29, #0x50
  42ab8c:	movk	x9, #0xff80, lsl #32
  42ab90:	add	x10, x29, #0x10
  42ab94:	mov	x8, #0xffffffffffffffd0    	// #-48
  42ab98:	add	x11, x11, #0x80
  42ab9c:	add	x12, x12, #0x30
  42aba0:	stp	x11, x9, [x29, #-16]
  42aba4:	stp	x10, x12, [x29, #-32]
  42aba8:	tbz	w8, #31, 42abc8 <_obstack_memory_used@@Base+0x10a34>
  42abac:	add	w9, w8, #0x8
  42abb0:	cmn	w8, #0x8
  42abb4:	stur	w9, [x29, #-8]
  42abb8:	b.gt	42abc8 <_obstack_memory_used@@Base+0x10a34>
  42abbc:	ldur	x9, [x29, #-24]
  42abc0:	add	x8, x9, x8
  42abc4:	b	42abd4 <_obstack_memory_used@@Base+0x10a40>
  42abc8:	ldur	x8, [x29, #-32]
  42abcc:	add	x9, x8, #0x8
  42abd0:	stur	x9, [x29, #-32]
  42abd4:	ldr	w2, [x8]
  42abd8:	bl	4023c0 <open@plt>
  42abdc:	bl	416ad4 <wcrtomb@plt+0x14264>
  42abe0:	ldp	x29, x30, [sp, #208]
  42abe4:	add	sp, sp, #0xe0
  42abe8:	ret
  42abec:	sub	sp, sp, #0x130
  42abf0:	add	x1, sp, #0xc
  42abf4:	mov	w2, #0x101                 	// #257
  42abf8:	stp	x29, x30, [sp, #272]
  42abfc:	str	x28, [sp, #288]
  42ac00:	add	x29, sp, #0x110
  42ac04:	bl	42aebc <_obstack_memory_used@@Base+0x10d28>
  42ac08:	cbz	w0, 42ac20 <_obstack_memory_used@@Base+0x10a8c>
  42ac0c:	mov	w0, wzr
  42ac10:	ldr	x28, [sp, #288]
  42ac14:	ldp	x29, x30, [sp, #272]
  42ac18:	add	sp, sp, #0x130
  42ac1c:	ret
  42ac20:	ldrh	w8, [sp, #12]
  42ac24:	cmp	w8, #0x43
  42ac28:	b.eq	42ac0c <_obstack_memory_used@@Base+0x10a78>  // b.none
  42ac2c:	ldr	w8, [sp, #12]
  42ac30:	ldrh	w9, [sp, #16]
  42ac34:	mov	w10, #0x4f50                	// #20304
  42ac38:	movk	w10, #0x4953, lsl #16
  42ac3c:	mov	w11, #0x58                  	// #88
  42ac40:	eor	w8, w8, w10
  42ac44:	eor	w9, w9, w11
  42ac48:	orr	w8, w8, w9
  42ac4c:	cmp	w8, #0x0
  42ac50:	cset	w0, ne  // ne = any
  42ac54:	ldr	x28, [sp, #288]
  42ac58:	ldp	x29, x30, [sp, #272]
  42ac5c:	add	sp, sp, #0x130
  42ac60:	ret
  42ac64:	mov	w8, #0x1                   	// #1
  42ac68:	dup	v0.4s, w1
  42ac6c:	stp	wzr, wzr, [x0, #20]
  42ac70:	strb	w8, [x0, #28]
  42ac74:	str	q0, [x0]
  42ac78:	str	w1, [x0, #16]
  42ac7c:	ret
  42ac80:	ldrb	w0, [x0, #28]
  42ac84:	ret
  42ac88:	ldrb	w8, [x0, #28]
  42ac8c:	ldr	w10, [x0, #20]
  42ac90:	eor	w9, w8, #0x1
  42ac94:	add	w10, w10, w9
  42ac98:	and	w11, w10, #0x3
  42ac9c:	lsl	x12, x11, #2
  42aca0:	ldr	w8, [x0, x12]
  42aca4:	str	w1, [x0, x12]
  42aca8:	ldr	w12, [x0, #24]
  42acac:	str	w11, [x0, #20]
  42acb0:	cmp	w11, w12
  42acb4:	b.ne	42acc4 <_obstack_memory_used@@Base+0x10b30>  // b.any
  42acb8:	add	w9, w10, w9
  42acbc:	and	w9, w9, #0x3
  42acc0:	str	w9, [x0, #24]
  42acc4:	strb	wzr, [x0, #28]
  42acc8:	mov	w0, w8
  42accc:	ret
  42acd0:	stp	x29, x30, [sp, #-16]!
  42acd4:	ldrb	w8, [x0, #28]
  42acd8:	mov	x29, sp
  42acdc:	cbnz	w8, 42ad28 <_obstack_memory_used@@Base+0x10b94>
  42ace0:	ldp	w9, w8, [x0, #16]
  42ace4:	lsl	x10, x8, #2
  42ace8:	ldr	w8, [x0, x10]
  42acec:	str	w9, [x0, x10]
  42acf0:	ldp	w9, w10, [x0, #20]
  42acf4:	cmp	w9, w10
  42acf8:	b.ne	42ad10 <_obstack_memory_used@@Base+0x10b7c>  // b.any
  42acfc:	mov	w9, #0x1                   	// #1
  42ad00:	strb	w9, [x0, #28]
  42ad04:	mov	w0, w8
  42ad08:	ldp	x29, x30, [sp], #16
  42ad0c:	ret
  42ad10:	sub	w9, w9, #0x1
  42ad14:	and	w9, w9, #0x3
  42ad18:	str	w9, [x0, #20]
  42ad1c:	mov	w0, w8
  42ad20:	ldp	x29, x30, [sp], #16
  42ad24:	ret
  42ad28:	bl	402560 <abort@plt>
  42ad2c:	stp	x29, x30, [sp, #-16]!
  42ad30:	mov	w0, #0xe                   	// #14
  42ad34:	mov	x29, sp
  42ad38:	bl	402360 <nl_langinfo@plt>
  42ad3c:	adrp	x8, 42c000 <_obstack_memory_used@@Base+0x11e6c>
  42ad40:	add	x8, x8, #0xd75
  42ad44:	cmp	x0, #0x0
  42ad48:	csel	x8, x8, x0, eq  // eq = none
  42ad4c:	ldrb	w9, [x8]
  42ad50:	adrp	x10, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42ad54:	add	x10, x10, #0x49d
  42ad58:	cmp	w9, #0x0
  42ad5c:	csel	x0, x10, x8, eq  // eq = none
  42ad60:	ldp	x29, x30, [sp], #16
  42ad64:	ret
  42ad68:	stp	x29, x30, [sp, #-32]!
  42ad6c:	str	x19, [sp, #16]
  42ad70:	mov	x29, sp
  42ad74:	mov	w19, w0
  42ad78:	bl	4023b0 <wcwidth@plt>
  42ad7c:	tbnz	w0, #31, 42ad8c <_obstack_memory_used@@Base+0x10bf8>
  42ad80:	ldr	x19, [sp, #16]
  42ad84:	ldp	x29, x30, [sp], #32
  42ad88:	ret
  42ad8c:	mov	w0, w19
  42ad90:	bl	4022e0 <iswcntrl@plt>
  42ad94:	cmp	w0, #0x0
  42ad98:	cset	w0, eq  // eq = none
  42ad9c:	ldr	x19, [sp, #16]
  42ada0:	ldp	x29, x30, [sp], #32
  42ada4:	ret
  42ada8:	stp	x29, x30, [sp, #-48]!
  42adac:	str	x21, [sp, #16]
  42adb0:	stp	x20, x19, [sp, #32]
  42adb4:	mov	x8, x1
  42adb8:	mov	x19, x1
  42adbc:	ldr	x1, [x8], #24
  42adc0:	mov	x20, x0
  42adc4:	mov	x29, sp
  42adc8:	cmp	x1, x8
  42adcc:	b.ne	42ade4 <_obstack_memory_used@@Base+0x10c50>  // b.any
  42add0:	ldr	x2, [x19, #8]
  42add4:	add	x21, x20, #0x18
  42add8:	mov	x0, x21
  42addc:	bl	402210 <memcpy@plt>
  42ade0:	mov	x1, x21
  42ade4:	str	x1, [x20]
  42ade8:	ldr	x8, [x19, #8]
  42adec:	str	x8, [x20, #8]
  42adf0:	ldrb	w8, [x19, #16]
  42adf4:	strb	w8, [x20, #16]
  42adf8:	cbz	w8, 42ae04 <_obstack_memory_used@@Base+0x10c70>
  42adfc:	ldr	w8, [x19, #20]
  42ae00:	str	w8, [x20, #20]
  42ae04:	ldp	x20, x19, [sp, #32]
  42ae08:	ldr	x21, [sp, #16]
  42ae0c:	ldp	x29, x30, [sp], #48
  42ae10:	ret
  42ae14:	lsr	w8, w0, #3
  42ae18:	adrp	x9, 42e000 <_obstack_memory_used@@Base+0x13e6c>
  42ae1c:	and	x8, x8, #0x1c
  42ae20:	add	x9, x9, #0x4a4
  42ae24:	ldr	w8, [x9, x8]
  42ae28:	lsr	w8, w8, w0
  42ae2c:	and	w0, w8, #0x1
  42ae30:	ret
  42ae34:	stp	x29, x30, [sp, #-48]!
  42ae38:	mov	w8, #0x4900                	// #18688
  42ae3c:	movk	w8, #0x8, lsl #16
  42ae40:	orr	w2, w2, w8
  42ae44:	str	x21, [sp, #16]
  42ae48:	stp	x20, x19, [sp, #32]
  42ae4c:	mov	x29, sp
  42ae50:	mov	x19, x3
  42ae54:	bl	414ee0 <wcrtomb@plt+0x12670>
  42ae58:	tbnz	w0, #31, 42ae7c <_obstack_memory_used@@Base+0x10ce8>
  42ae5c:	mov	w20, w0
  42ae60:	bl	402530 <fdopendir@plt>
  42ae64:	cbz	x0, 42ae90 <_obstack_memory_used@@Base+0x10cfc>
  42ae68:	str	w20, [x19]
  42ae6c:	ldp	x20, x19, [sp, #32]
  42ae70:	ldr	x21, [sp, #16]
  42ae74:	ldp	x29, x30, [sp], #48
  42ae78:	ret
  42ae7c:	mov	x0, xzr
  42ae80:	ldp	x20, x19, [sp, #32]
  42ae84:	ldr	x21, [sp, #16]
  42ae88:	ldp	x29, x30, [sp], #48
  42ae8c:	ret
  42ae90:	bl	4027e0 <__errno_location@plt>
  42ae94:	ldr	w21, [x0]
  42ae98:	mov	x19, x0
  42ae9c:	mov	w0, w20
  42aea0:	bl	4024f0 <close@plt>
  42aea4:	mov	x0, xzr
  42aea8:	str	w21, [x19]
  42aeac:	ldp	x20, x19, [sp, #32]
  42aeb0:	ldr	x21, [sp, #16]
  42aeb4:	ldp	x29, x30, [sp], #48
  42aeb8:	ret
  42aebc:	stp	x29, x30, [sp, #-48]!
  42aec0:	stp	x20, x19, [sp, #32]
  42aec4:	mov	x19, x1
  42aec8:	mov	x1, xzr
  42aecc:	str	x21, [sp, #16]
  42aed0:	mov	x29, sp
  42aed4:	mov	x20, x2
  42aed8:	bl	402850 <setlocale@plt>
  42aedc:	cbz	x0, 42af14 <_obstack_memory_used@@Base+0x10d80>
  42aee0:	mov	x21, x0
  42aee4:	bl	402270 <strlen@plt>
  42aee8:	cmp	x0, x20
  42aeec:	b.cs	42af30 <_obstack_memory_used@@Base+0x10d9c>  // b.hs, b.nlast
  42aef0:	add	x2, x0, #0x1
  42aef4:	mov	x0, x19
  42aef8:	mov	x1, x21
  42aefc:	bl	402210 <memcpy@plt>
  42af00:	mov	w0, wzr
  42af04:	ldp	x20, x19, [sp, #32]
  42af08:	ldr	x21, [sp, #16]
  42af0c:	ldp	x29, x30, [sp], #48
  42af10:	ret
  42af14:	cbz	x20, 42af1c <_obstack_memory_used@@Base+0x10d88>
  42af18:	strb	wzr, [x19]
  42af1c:	mov	w0, #0x16                  	// #22
  42af20:	ldp	x20, x19, [sp, #32]
  42af24:	ldr	x21, [sp, #16]
  42af28:	ldp	x29, x30, [sp], #48
  42af2c:	ret
  42af30:	cbz	x20, 42af4c <_obstack_memory_used@@Base+0x10db8>
  42af34:	sub	x20, x20, #0x1
  42af38:	mov	x0, x19
  42af3c:	mov	x1, x21
  42af40:	mov	x2, x20
  42af44:	bl	402210 <memcpy@plt>
  42af48:	strb	wzr, [x19, x20]
  42af4c:	mov	w0, #0x22                  	// #34
  42af50:	ldp	x20, x19, [sp, #32]
  42af54:	ldr	x21, [sp, #16]
  42af58:	ldp	x29, x30, [sp], #48
  42af5c:	ret
  42af60:	mov	x1, xzr
  42af64:	b	402850 <setlocale@plt>
  42af68:	mov	w2, #0x3                   	// #3
  42af6c:	mov	w1, wzr
  42af70:	b	42af74 <_obstack_memory_used@@Base+0x10de0>
  42af74:	sub	sp, sp, #0x100
  42af78:	stp	x29, x30, [sp, #208]
  42af7c:	add	x29, sp, #0xd0
  42af80:	mov	x8, #0xffffffffffffffd0    	// #-48
  42af84:	mov	x9, sp
  42af88:	sub	x10, x29, #0x50
  42af8c:	stp	x20, x19, [sp, #240]
  42af90:	mov	w19, w0
  42af94:	movk	x8, #0xff80, lsl #32
  42af98:	add	x11, x29, #0x30
  42af9c:	cmp	w1, #0xb
  42afa0:	add	x9, x9, #0x80
  42afa4:	add	x10, x10, #0x30
  42afa8:	stp	x22, x21, [sp, #224]
  42afac:	stp	x2, x3, [x29, #-80]
  42afb0:	stp	x4, x5, [x29, #-64]
  42afb4:	stp	x6, x7, [x29, #-48]
  42afb8:	stp	q1, q2, [sp, #16]
  42afbc:	stp	q3, q4, [sp, #48]
  42afc0:	str	q0, [sp]
  42afc4:	stp	q5, q6, [sp, #80]
  42afc8:	str	q7, [sp, #112]
  42afcc:	stp	x9, x8, [x29, #-16]
  42afd0:	stp	x11, x10, [x29, #-32]
  42afd4:	b.hi	42b020 <_obstack_memory_used@@Base+0x10e8c>  // b.pmore
  42afd8:	mov	w8, #0x1                   	// #1
  42afdc:	lsl	w8, w8, w1
  42afe0:	mov	w9, #0x514                 	// #1300
  42afe4:	tst	w8, w9
  42afe8:	b.ne	42b058 <_obstack_memory_used@@Base+0x10ec4>  // b.any
  42afec:	mov	w9, #0xa0a                 	// #2570
  42aff0:	tst	w8, w9
  42aff4:	b.ne	42b04c <_obstack_memory_used@@Base+0x10eb8>  // b.any
  42aff8:	cbnz	w1, 42b020 <_obstack_memory_used@@Base+0x10e8c>
  42affc:	ldursw	x8, [x29, #-8]
  42b000:	tbz	w8, #31, 42b100 <_obstack_memory_used@@Base+0x10f6c>
  42b004:	add	w9, w8, #0x8
  42b008:	cmn	w8, #0x8
  42b00c:	stur	w9, [x29, #-8]
  42b010:	b.gt	42b100 <_obstack_memory_used@@Base+0x10f6c>
  42b014:	ldur	x9, [x29, #-24]
  42b018:	add	x8, x9, x8
  42b01c:	b	42b10c <_obstack_memory_used@@Base+0x10f78>
  42b020:	sub	w8, w1, #0x400
  42b024:	cmp	w8, #0xa
  42b028:	b.hi	42b0dc <_obstack_memory_used@@Base+0x10f48>  // b.pmore
  42b02c:	mov	w9, #0x1                   	// #1
  42b030:	lsl	w9, w9, w8
  42b034:	mov	w10, #0x285                 	// #645
  42b038:	tst	w9, w10
  42b03c:	b.ne	42b058 <_obstack_memory_used@@Base+0x10ec4>  // b.any
  42b040:	mov	w10, #0x502                 	// #1282
  42b044:	tst	w9, w10
  42b048:	b.eq	42b0b0 <_obstack_memory_used@@Base+0x10f1c>  // b.none
  42b04c:	mov	w0, w19
  42b050:	bl	402680 <fcntl@plt>
  42b054:	b	42b094 <_obstack_memory_used@@Base+0x10f00>
  42b058:	ldursw	x8, [x29, #-8]
  42b05c:	tbz	w8, #31, 42b07c <_obstack_memory_used@@Base+0x10ee8>
  42b060:	add	w9, w8, #0x8
  42b064:	cmn	w8, #0x8
  42b068:	stur	w9, [x29, #-8]
  42b06c:	b.gt	42b07c <_obstack_memory_used@@Base+0x10ee8>
  42b070:	ldur	x9, [x29, #-24]
  42b074:	add	x8, x9, x8
  42b078:	b	42b088 <_obstack_memory_used@@Base+0x10ef4>
  42b07c:	ldur	x8, [x29, #-32]
  42b080:	add	x9, x8, #0x8
  42b084:	stur	x9, [x29, #-32]
  42b088:	ldr	w2, [x8]
  42b08c:	mov	w0, w19
  42b090:	bl	402680 <fcntl@plt>
  42b094:	mov	w20, w0
  42b098:	mov	w0, w20
  42b09c:	ldp	x20, x19, [sp, #240]
  42b0a0:	ldp	x22, x21, [sp, #224]
  42b0a4:	ldp	x29, x30, [sp, #208]
  42b0a8:	add	sp, sp, #0x100
  42b0ac:	ret
  42b0b0:	cmp	w8, #0x6
  42b0b4:	b.ne	42b0dc <_obstack_memory_used@@Base+0x10f48>  // b.any
  42b0b8:	ldursw	x8, [x29, #-8]
  42b0bc:	tbz	w8, #31, 42b11c <_obstack_memory_used@@Base+0x10f88>
  42b0c0:	add	w9, w8, #0x8
  42b0c4:	cmn	w8, #0x8
  42b0c8:	stur	w9, [x29, #-8]
  42b0cc:	b.gt	42b11c <_obstack_memory_used@@Base+0x10f88>
  42b0d0:	ldur	x9, [x29, #-24]
  42b0d4:	add	x8, x9, x8
  42b0d8:	b	42b128 <_obstack_memory_used@@Base+0x10f94>
  42b0dc:	ldursw	x8, [x29, #-8]
  42b0e0:	tbz	w8, #31, 42b188 <_obstack_memory_used@@Base+0x10ff4>
  42b0e4:	add	w9, w8, #0x8
  42b0e8:	cmn	w8, #0x8
  42b0ec:	stur	w9, [x29, #-8]
  42b0f0:	b.gt	42b188 <_obstack_memory_used@@Base+0x10ff4>
  42b0f4:	ldur	x9, [x29, #-24]
  42b0f8:	add	x8, x9, x8
  42b0fc:	b	42b194 <_obstack_memory_used@@Base+0x11000>
  42b100:	ldur	x8, [x29, #-32]
  42b104:	add	x9, x8, #0x8
  42b108:	stur	x9, [x29, #-32]
  42b10c:	ldr	w2, [x8]
  42b110:	mov	w0, w19
  42b114:	mov	w1, wzr
  42b118:	b	42b090 <_obstack_memory_used@@Base+0x10efc>
  42b11c:	ldur	x8, [x29, #-32]
  42b120:	add	x9, x8, #0x8
  42b124:	stur	x9, [x29, #-32]
  42b128:	adrp	x22, 443000 <__progname@@GLIBC_2.17+0x3bb8>
  42b12c:	ldr	w9, [x22, #2176]
  42b130:	ldr	w21, [x8]
  42b134:	tbnz	w9, #31, 42b1b0 <_obstack_memory_used@@Base+0x1101c>
  42b138:	mov	w1, #0x406                 	// #1030
  42b13c:	mov	w0, w19
  42b140:	mov	w2, w21
  42b144:	bl	402680 <fcntl@plt>
  42b148:	mov	w20, w0
  42b14c:	tbz	w0, #31, 42b1a4 <_obstack_memory_used@@Base+0x11010>
  42b150:	bl	4027e0 <__errno_location@plt>
  42b154:	ldr	w8, [x0]
  42b158:	cmp	w8, #0x16
  42b15c:	b.ne	42b1a4 <_obstack_memory_used@@Base+0x11010>  // b.any
  42b160:	mov	w0, w19
  42b164:	mov	w1, wzr
  42b168:	mov	w2, w21
  42b16c:	bl	402680 <fcntl@plt>
  42b170:	mov	w20, w0
  42b174:	tbnz	w0, #31, 42b098 <_obstack_memory_used@@Base+0x10f04>
  42b178:	mov	w8, #0xffffffff            	// #-1
  42b17c:	str	w8, [x22, #2176]
  42b180:	mov	w8, #0x1                   	// #1
  42b184:	b	42b1d0 <_obstack_memory_used@@Base+0x1103c>
  42b188:	ldur	x8, [x29, #-32]
  42b18c:	add	x9, x8, #0x8
  42b190:	stur	x9, [x29, #-32]
  42b194:	ldr	x2, [x8]
  42b198:	mov	w0, w19
  42b19c:	bl	402680 <fcntl@plt>
  42b1a0:	b	42b094 <_obstack_memory_used@@Base+0x10f00>
  42b1a4:	mov	w8, #0x1                   	// #1
  42b1a8:	str	w8, [x22, #2176]
  42b1ac:	b	42b098 <_obstack_memory_used@@Base+0x10f04>
  42b1b0:	mov	w0, w19
  42b1b4:	mov	w1, wzr
  42b1b8:	mov	w2, w21
  42b1bc:	bl	402680 <fcntl@plt>
  42b1c0:	ldr	w8, [x22, #2176]
  42b1c4:	mov	w20, w0
  42b1c8:	cmn	w8, #0x1
  42b1cc:	cset	w8, eq  // eq = none
  42b1d0:	cbz	w8, 42b098 <_obstack_memory_used@@Base+0x10f04>
  42b1d4:	tbnz	w20, #31, 42b098 <_obstack_memory_used@@Base+0x10f04>
  42b1d8:	mov	w1, #0x1                   	// #1
  42b1dc:	mov	w0, w20
  42b1e0:	bl	402680 <fcntl@plt>
  42b1e4:	tbnz	w0, #31, 42b200 <_obstack_memory_used@@Base+0x1106c>
  42b1e8:	orr	w2, w0, #0x1
  42b1ec:	mov	w1, #0x2                   	// #2
  42b1f0:	mov	w0, w20
  42b1f4:	bl	402680 <fcntl@plt>
  42b1f8:	cmn	w0, #0x1
  42b1fc:	b.ne	42b098 <_obstack_memory_used@@Base+0x10f04>  // b.any
  42b200:	bl	4027e0 <__errno_location@plt>
  42b204:	ldr	w21, [x0]
  42b208:	mov	x19, x0
  42b20c:	mov	w0, w20
  42b210:	bl	4024f0 <close@plt>
  42b214:	str	w21, [x19]
  42b218:	mov	w20, #0xffffffff            	// #-1
  42b21c:	b	42b098 <_obstack_memory_used@@Base+0x10f04>
  42b220:	stp	x29, x30, [sp, #-64]!
  42b224:	mov	x29, sp
  42b228:	stp	x19, x20, [sp, #16]
  42b22c:	adrp	x20, 43e000 <_obstack_memory_used@@Base+0x23e6c>
  42b230:	add	x20, x20, #0xdf0
  42b234:	stp	x21, x22, [sp, #32]
  42b238:	adrp	x21, 43e000 <_obstack_memory_used@@Base+0x23e6c>
  42b23c:	add	x21, x21, #0xde8
  42b240:	sub	x20, x20, x21
  42b244:	mov	w22, w0
  42b248:	stp	x23, x24, [sp, #48]
  42b24c:	mov	x23, x1
  42b250:	mov	x24, x2
  42b254:	bl	4021c8 <mbrtowc@plt-0x38>
  42b258:	cmp	xzr, x20, asr #3
  42b25c:	b.eq	42b288 <_obstack_memory_used@@Base+0x110f4>  // b.none
  42b260:	asr	x20, x20, #3
  42b264:	mov	x19, #0x0                   	// #0
  42b268:	ldr	x3, [x21, x19, lsl #3]
  42b26c:	mov	x2, x24
  42b270:	add	x19, x19, #0x1
  42b274:	mov	x1, x23
  42b278:	mov	w0, w22
  42b27c:	blr	x3
  42b280:	cmp	x20, x19
  42b284:	b.ne	42b268 <_obstack_memory_used@@Base+0x110d4>  // b.any
  42b288:	ldp	x19, x20, [sp, #16]
  42b28c:	ldp	x21, x22, [sp, #32]
  42b290:	ldp	x23, x24, [sp, #48]
  42b294:	ldp	x29, x30, [sp], #64
  42b298:	ret
  42b29c:	nop
  42b2a0:	ret
  42b2a4:	nop
  42b2a8:	adrp	x2, 43f000 <_obstack_memory_used@@Base+0x24e6c>
  42b2ac:	mov	x1, #0x0                   	// #0
  42b2b0:	ldr	x2, [x2, #840]
  42b2b4:	b	4022d0 <__cxa_atexit@plt>

Disassembly of section .fini:

000000000042b2b8 <.fini>:
  42b2b8:	stp	x29, x30, [sp, #-16]!
  42b2bc:	mov	x29, sp
  42b2c0:	ldp	x29, x30, [sp], #16
  42b2c4:	ret
