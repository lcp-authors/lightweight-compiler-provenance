
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//fdflags_clang_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000000ba0 <_init>:
 ba0:	stp	x29, x30, [sp, #-16]!
 ba4:	mov	x29, sp
 ba8:	bl	ce0 <call_weak_fn>
 bac:	ldp	x29, x30, [sp], #16
 bb0:	ret

Disassembly of section .plt:

0000000000000bc0 <.plt>:
 bc0:	stp	x16, x30, [sp, #-16]!
 bc4:	adrp	x16, 11000 <__FRAME_END__+0xf7ac>
 bc8:	ldr	x17, [x16, #4088]
 bcc:	add	x16, x16, #0xff8
 bd0:	br	x17
 bd4:	nop
 bd8:	nop
 bdc:	nop

0000000000000be0 <strtok@plt>:
 be0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 be4:	ldr	x17, [x16]
 be8:	add	x16, x16, #0x0
 bec:	br	x17

0000000000000bf0 <builtin_error@plt>:
 bf0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 bf4:	ldr	x17, [x16, #8]
 bf8:	add	x16, x16, #0x8
 bfc:	br	x17

0000000000000c00 <__cxa_finalize@plt>:
 c00:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c04:	ldr	x17, [x16, #16]
 c08:	add	x16, x16, #0x10
 c0c:	br	x17

0000000000000c10 <putc@plt>:
 c10:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c14:	ldr	x17, [x16, #24]
 c18:	add	x16, x16, #0x18
 c1c:	br	x17

0000000000000c20 <builtin_help@plt>:
 c20:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c24:	ldr	x17, [x16, #32]
 c28:	add	x16, x16, #0x20
 c2c:	br	x17

0000000000000c30 <builtin_usage@plt>:
 c30:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c34:	ldr	x17, [x16, #40]
 c38:	add	x16, x16, #0x28
 c3c:	br	x17

0000000000000c40 <strerror@plt>:
 c40:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c44:	ldr	x17, [x16, #48]
 c48:	add	x16, x16, #0x30
 c4c:	br	x17

0000000000000c50 <__gmon_start__@plt>:
 c50:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c54:	ldr	x17, [x16, #56]
 c58:	add	x16, x16, #0x38
 c5c:	br	x17

0000000000000c60 <strcmp@plt>:
 c60:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c64:	ldr	x17, [x16, #64]
 c68:	add	x16, x16, #0x40
 c6c:	br	x17

0000000000000c70 <internal_getopt@plt>:
 c70:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c74:	ldr	x17, [x16, #72]
 c78:	add	x16, x16, #0x48
 c7c:	br	x17

0000000000000c80 <reset_internal_getopt@plt>:
 c80:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c84:	ldr	x17, [x16, #80]
 c88:	add	x16, x16, #0x50
 c8c:	br	x17

0000000000000c90 <fcntl@plt>:
 c90:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 c94:	ldr	x17, [x16, #88]
 c98:	add	x16, x16, #0x58
 c9c:	br	x17

0000000000000ca0 <legal_number@plt>:
 ca0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 ca4:	ldr	x17, [x16, #96]
 ca8:	add	x16, x16, #0x60
 cac:	br	x17

0000000000000cb0 <printf@plt>:
 cb0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cb4:	ldr	x17, [x16, #104]
 cb8:	add	x16, x16, #0x68
 cbc:	br	x17

0000000000000cc0 <__errno_location@plt>:
 cc0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cc4:	ldr	x17, [x16, #112]
 cc8:	add	x16, x16, #0x70
 ccc:	br	x17

0000000000000cd0 <getdtablesize@plt>:
 cd0:	adrp	x16, 12000 <strtok@GLIBC_2.17>
 cd4:	ldr	x17, [x16, #120]
 cd8:	add	x16, x16, #0x78
 cdc:	br	x17

Disassembly of section .text:

0000000000000ce0 <call_weak_fn>:
     ce0:	adrp	x0, 11000 <__FRAME_END__+0xf7ac>
     ce4:	ldr	x0, [x0, #4040]
     ce8:	cbz	x0, cf0 <call_weak_fn+0x10>
     cec:	b	c50 <__gmon_start__@plt>
     cf0:	ret
     cf4:	nop

0000000000000cf8 <deregister_tm_clones>:
     cf8:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     cfc:	add	x0, x0, #0x128
     d00:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d04:	add	x1, x1, #0x128
     d08:	cmp	x1, x0
     d0c:	b.eq	d24 <deregister_tm_clones+0x2c>  // b.none
     d10:	adrp	x1, 11000 <__FRAME_END__+0xf7ac>
     d14:	ldr	x1, [x1, #4016]
     d18:	cbz	x1, d24 <deregister_tm_clones+0x2c>
     d1c:	mov	x16, x1
     d20:	br	x16
     d24:	ret

0000000000000d28 <register_tm_clones>:
     d28:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d2c:	add	x0, x0, #0x128
     d30:	adrp	x1, 12000 <strtok@GLIBC_2.17>
     d34:	add	x1, x1, #0x128
     d38:	sub	x1, x1, x0
     d3c:	lsr	x2, x1, #63
     d40:	add	x1, x2, x1, asr #3
     d44:	cmp	xzr, x1, asr #1
     d48:	asr	x1, x1, #1
     d4c:	b.eq	d64 <register_tm_clones+0x3c>  // b.none
     d50:	adrp	x2, 11000 <__FRAME_END__+0xf7ac>
     d54:	ldr	x2, [x2, #4064]
     d58:	cbz	x2, d64 <register_tm_clones+0x3c>
     d5c:	mov	x16, x2
     d60:	br	x16
     d64:	ret

0000000000000d68 <__do_global_dtors_aux>:
     d68:	stp	x29, x30, [sp, #-32]!
     d6c:	mov	x29, sp
     d70:	str	x19, [sp, #16]
     d74:	adrp	x19, 12000 <strtok@GLIBC_2.17>
     d78:	ldrb	w0, [x19, #296]
     d7c:	cbnz	w0, da4 <__do_global_dtors_aux+0x3c>
     d80:	adrp	x0, 11000 <__FRAME_END__+0xf7ac>
     d84:	ldr	x0, [x0, #4024]
     d88:	cbz	x0, d98 <__do_global_dtors_aux+0x30>
     d8c:	adrp	x0, 12000 <strtok@GLIBC_2.17>
     d90:	ldr	x0, [x0, #128]
     d94:	bl	c00 <__cxa_finalize@plt>
     d98:	bl	cf8 <deregister_tm_clones>
     d9c:	mov	w0, #0x1                   	// #1
     da0:	strb	w0, [x19, #296]
     da4:	ldr	x19, [sp, #16]
     da8:	ldp	x29, x30, [sp], #32
     dac:	ret

0000000000000db0 <frame_dummy>:
     db0:	b	d28 <register_tm_clones>

0000000000000db4 <fdflags_builtin>:
     db4:	sub	sp, sp, #0x80
     db8:	stp	x29, x30, [sp, #32]
     dbc:	stp	x28, x27, [sp, #48]
     dc0:	stp	x26, x25, [sp, #64]
     dc4:	stp	x24, x23, [sp, #80]
     dc8:	stp	x22, x21, [sp, #96]
     dcc:	stp	x20, x19, [sp, #112]
     dd0:	add	x29, sp, #0x20
     dd4:	mov	x21, x0
     dd8:	bl	c80 <reset_internal_getopt@plt>
     ddc:	adrp	x23, 11000 <__FRAME_END__+0xf7ac>
     de0:	ldr	x23, [x23, #4048]
     de4:	adrp	x22, 1000 <fdflags_builtin+0x24c>
     de8:	mov	w24, wzr
     dec:	mov	w19, wzr
     df0:	add	x22, x22, #0x404
     df4:	b	e00 <fdflags_builtin+0x4c>
     df8:	ldr	x20, [x23]
     dfc:	mov	w19, #0x1                   	// #1
     e00:	mov	x0, x21
     e04:	mov	x1, x22
     e08:	bl	c70 <internal_getopt@plt>
     e0c:	cmp	w0, #0x73
     e10:	b.eq	df8 <fdflags_builtin+0x44>  // b.none
     e14:	cmn	w0, #0x63
     e18:	b.eq	e34 <fdflags_builtin+0x80>  // b.none
     e1c:	cmn	w0, #0x1
     e20:	b.eq	e3c <fdflags_builtin+0x88>  // b.none
     e24:	cmp	w0, #0x76
     e28:	b.ne	e58 <fdflags_builtin+0xa4>  // b.any
     e2c:	mov	w24, #0x1                   	// #1
     e30:	b	e00 <fdflags_builtin+0x4c>
     e34:	bl	c20 <builtin_help@plt>
     e38:	b	e5c <fdflags_builtin+0xa8>
     e3c:	adrp	x8, 11000 <__FRAME_END__+0xf7ac>
     e40:	ldr	x8, [x8, #4056]
     e44:	ldr	x28, [x8]
     e48:	cbz	w19, e84 <fdflags_builtin+0xd0>
     e4c:	cbnz	x28, e84 <fdflags_builtin+0xd0>
     e50:	mov	w21, wzr
     e54:	b	e60 <fdflags_builtin+0xac>
     e58:	bl	c30 <builtin_usage@plt>
     e5c:	mov	w21, #0x102                 	// #258
     e60:	mov	w0, w21
     e64:	ldp	x20, x19, [sp, #112]
     e68:	ldp	x22, x21, [sp, #96]
     e6c:	ldp	x24, x23, [sp, #80]
     e70:	ldp	x26, x25, [sp, #64]
     e74:	ldp	x28, x27, [sp, #48]
     e78:	ldp	x29, x30, [sp, #32]
     e7c:	add	sp, sp, #0x80
     e80:	ret
     e84:	cbz	x28, 1180 <fdflags_builtin+0x3cc>
     e88:	adrp	x23, 1000 <fdflags_builtin+0x24c>
     e8c:	adrp	x26, 1000 <fdflags_builtin+0x24c>
     e90:	adrp	x27, 11000 <__FRAME_END__+0xf7ac>
     e94:	mov	w21, wzr
     e98:	add	x23, x23, #0x4e6
     e9c:	add	x26, x26, #0x71f
     ea0:	add	x27, x27, #0xd28
     ea4:	str	w24, [sp]
     ea8:	b	ecc <fdflags_builtin+0x118>
     eac:	ldr	x8, [x28, #8]
     eb0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
     eb4:	add	x0, x0, #0x41d
     eb8:	ldr	x1, [x8]
     ebc:	bl	bf0 <builtin_error@plt>
     ec0:	mov	w21, #0x1                   	// #1
     ec4:	ldr	x28, [x28]
     ec8:	cbz	x28, e60 <fdflags_builtin+0xac>
     ecc:	ldr	x8, [x28, #8]
     ed0:	add	x1, sp, #0x8
     ed4:	ldr	x0, [x8]
     ed8:	bl	ca0 <legal_number@plt>
     edc:	cbz	w0, eac <fdflags_builtin+0xf8>
     ee0:	ldr	x22, [sp, #8]
     ee4:	tbnz	x22, #63, eac <fdflags_builtin+0xf8>
     ee8:	cbz	w19, 10a8 <fdflags_builtin+0x2f4>
     eec:	mov	w1, #0x1                   	// #1
     ef0:	mov	w0, w22
     ef4:	str	w21, [sp, #4]
     ef8:	bl	1340 <getflags>
     efc:	cmn	w0, #0x1
     f00:	b.eq	1178 <fdflags_builtin+0x3c4>  // b.none
     f04:	mov	w25, w0
     f08:	mov	x0, x20
     f0c:	mov	x1, x23
     f10:	stur	xzr, [x29, #-8]
     f14:	stur	wzr, [x29, #-12]
     f18:	bl	be0 <strtok@plt>
     f1c:	mov	x24, x0
     f20:	cbz	x0, 10bc <fdflags_builtin+0x308>
     f24:	ldrb	w8, [x24]
     f28:	cmp	w8, #0x2d
     f2c:	b.eq	f44 <fdflags_builtin+0x190>  // b.none
     f30:	cmp	w8, #0x2b
     f34:	b.ne	f50 <fdflags_builtin+0x19c>  // b.any
     f38:	add	x24, x24, #0x1
     f3c:	sub	x21, x29, #0x8
     f40:	b	f54 <fdflags_builtin+0x1a0>
     f44:	add	x24, x24, #0x1
     f48:	sub	x21, x29, #0xc
     f4c:	b	f54 <fdflags_builtin+0x1a0>
     f50:	sub	x21, x29, #0x4
     f54:	mov	x0, x24
     f58:	mov	x1, x26
     f5c:	bl	c60 <strcmp@plt>
     f60:	cbz	w0, 102c <fdflags_builtin+0x278>
     f64:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     f68:	mov	x0, x24
     f6c:	add	x1, x1, #0x726
     f70:	bl	c60 <strcmp@plt>
     f74:	cbz	w0, 1034 <fdflags_builtin+0x280>
     f78:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     f7c:	mov	x0, x24
     f80:	add	x1, x1, #0x727
     f84:	bl	c60 <strcmp@plt>
     f88:	cbz	w0, 103c <fdflags_builtin+0x288>
     f8c:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     f90:	mov	x0, x24
     f94:	add	x1, x1, #0x72c
     f98:	bl	c60 <strcmp@plt>
     f9c:	cbz	w0, 1044 <fdflags_builtin+0x290>
     fa0:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fa4:	mov	x0, x24
     fa8:	add	x1, x1, #0x735
     fac:	bl	c60 <strcmp@plt>
     fb0:	cbz	w0, 104c <fdflags_builtin+0x298>
     fb4:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fb8:	mov	x0, x24
     fbc:	add	x1, x1, #0x73b
     fc0:	bl	c60 <strcmp@plt>
     fc4:	cbz	w0, 1054 <fdflags_builtin+0x2a0>
     fc8:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fcc:	mov	x0, x24
     fd0:	add	x1, x1, #0x741
     fd4:	bl	c60 <strcmp@plt>
     fd8:	cbz	w0, 105c <fdflags_builtin+0x2a8>
     fdc:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     fe0:	mov	x0, x24
     fe4:	add	x1, x1, #0x747
     fe8:	bl	c60 <strcmp@plt>
     fec:	cbz	w0, 1064 <fdflags_builtin+0x2b0>
     ff0:	adrp	x1, 1000 <fdflags_builtin+0x24c>
     ff4:	mov	x0, x24
     ff8:	add	x1, x1, #0x74e
     ffc:	bl	c60 <strcmp@plt>
    1000:	cbz	w0, 106c <fdflags_builtin+0x2b8>
    1004:	adrp	x1, 1000 <fdflags_builtin+0x24c>
    1008:	mov	x0, x24
    100c:	add	x1, x1, #0x756
    1010:	bl	c60 <strcmp@plt>
    1014:	cbz	w0, 1074 <fdflags_builtin+0x2c0>
    1018:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    101c:	add	x0, x0, #0x79b
    1020:	mov	x1, x24
    1024:	bl	bf0 <builtin_error@plt>
    1028:	b	108c <fdflags_builtin+0x2d8>
    102c:	mov	x8, xzr
    1030:	b	1078 <fdflags_builtin+0x2c4>
    1034:	mov	w8, #0x1                   	// #1
    1038:	b	1078 <fdflags_builtin+0x2c4>
    103c:	mov	w8, #0x2                   	// #2
    1040:	b	1078 <fdflags_builtin+0x2c4>
    1044:	mov	w8, #0x3                   	// #3
    1048:	b	1078 <fdflags_builtin+0x2c4>
    104c:	mov	w8, #0x4                   	// #4
    1050:	b	1078 <fdflags_builtin+0x2c4>
    1054:	mov	w8, #0x5                   	// #5
    1058:	b	1078 <fdflags_builtin+0x2c4>
    105c:	mov	w8, #0x6                   	// #6
    1060:	b	1078 <fdflags_builtin+0x2c4>
    1064:	mov	w8, #0x7                   	// #7
    1068:	b	1078 <fdflags_builtin+0x2c4>
    106c:	mov	w8, #0x8                   	// #8
    1070:	b	1078 <fdflags_builtin+0x2c4>
    1074:	mov	w8, #0x9                   	// #9
    1078:	add	x8, x27, x8, lsl #4
    107c:	ldr	w8, [x8, #8]
    1080:	ldr	w9, [x21]
    1084:	orr	w8, w9, w8
    1088:	str	w8, [x21]
    108c:	mov	x0, xzr
    1090:	mov	x1, x23
    1094:	bl	be0 <strtok@plt>
    1098:	mov	x24, x0
    109c:	cbnz	x0, f24 <fdflags_builtin+0x170>
    10a0:	ldp	w21, w24, [x29, #-12]
    10a4:	b	10c0 <fdflags_builtin+0x30c>
    10a8:	mov	w1, #0x1                   	// #1
    10ac:	mov	w0, w22
    10b0:	mov	w2, w24
    10b4:	bl	120c <printone>
    10b8:	b	ec4 <fdflags_builtin+0x110>
    10bc:	mov	w21, wzr
    10c0:	tst	w25, #0x80000
    10c4:	and	w8, w24, #0x80000
    10c8:	cset	w10, eq  // eq = none
    10cc:	and	w9, w25, #0x80000
    10d0:	tst	w10, w8, lsr #19
    10d4:	mov	w8, #0x1                   	// #1
    10d8:	cneg	w8, w8, eq  // eq = none
    10dc:	tst	w21, w9
    10e0:	csel	w2, w8, wzr, eq  // eq = none
    10e4:	cmn	w2, #0x1
    10e8:	b.eq	1120 <fdflags_builtin+0x36c>  // b.none
    10ec:	mov	w1, #0x2                   	// #2
    10f0:	mov	w0, w22
    10f4:	bl	c90 <fcntl@plt>
    10f8:	cmn	w0, #0x1
    10fc:	b.ne	1120 <fdflags_builtin+0x36c>  // b.any
    1100:	bl	cc0 <__errno_location@plt>
    1104:	ldr	w0, [x0]
    1108:	bl	c40 <strerror@plt>
    110c:	mov	x2, x0
    1110:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1114:	add	x0, x0, #0x75e
    1118:	mov	w1, w22
    111c:	bl	bf0 <builtin_error@plt>
    1120:	and	w8, w24, #0xfff7ffff
    1124:	and	w9, w21, #0xfff7ffff
    1128:	and	w10, w25, #0xfff7ffff
    112c:	ldr	w24, [sp]
    1130:	stp	w9, w8, [x29, #-12]
    1134:	orr	w8, w8, w10
    1138:	bic	w2, w8, w9
    113c:	cmp	w2, w10
    1140:	b.eq	1178 <fdflags_builtin+0x3c4>  // b.none
    1144:	mov	w1, #0x4                   	// #4
    1148:	mov	w0, w22
    114c:	bl	c90 <fcntl@plt>
    1150:	cmn	w0, #0x1
    1154:	b.ne	1178 <fdflags_builtin+0x3c4>  // b.any
    1158:	bl	cc0 <__errno_location@plt>
    115c:	ldr	w0, [x0]
    1160:	bl	c40 <strerror@plt>
    1164:	mov	x2, x0
    1168:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    116c:	add	x0, x0, #0x77d
    1170:	mov	w1, w22
    1174:	bl	bf0 <builtin_error@plt>
    1178:	ldr	w21, [sp, #4]
    117c:	b	ec4 <fdflags_builtin+0x110>
    1180:	bl	cd0 <getdtablesize@plt>
    1184:	subs	w8, w0, #0x1
    1188:	mov	w9, #0xff                  	// #255
    118c:	csel	w20, w9, w8, lt  // lt = tstop
    1190:	cmp	w20, #0x1
    1194:	b.lt	11b8 <fdflags_builtin+0x404>  // b.tstop
    1198:	add	x2, sp, #0x8
    119c:	mov	w1, #0x1                   	// #1
    11a0:	mov	w0, w20
    11a4:	bl	c90 <fcntl@plt>
    11a8:	cmn	w0, #0x1
    11ac:	b.ne	11b8 <fdflags_builtin+0x404>  // b.any
    11b0:	subs	w20, w20, #0x1
    11b4:	b.gt	1198 <fdflags_builtin+0x3e4>
    11b8:	tbnz	w20, #31, 11e8 <fdflags_builtin+0x434>
    11bc:	cbz	w20, e50 <fdflags_builtin+0x9c>
    11c0:	mov	w22, wzr
    11c4:	mov	w0, w22
    11c8:	mov	w1, wzr
    11cc:	mov	w2, w24
    11d0:	bl	120c <printone>
    11d4:	add	w22, w22, #0x1
    11d8:	cmp	w20, w22
    11dc:	mov	w21, wzr
    11e0:	b.ne	11c4 <fdflags_builtin+0x410>  // b.any
    11e4:	b	e60 <fdflags_builtin+0xac>
    11e8:	bl	cc0 <__errno_location@plt>
    11ec:	ldr	w0, [x0]
    11f0:	bl	c40 <strerror@plt>
    11f4:	mov	x1, x0
    11f8:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    11fc:	add	x0, x0, #0x408
    1200:	bl	bf0 <builtin_error@plt>
    1204:	mov	w21, #0x1                   	// #1
    1208:	b	e60 <fdflags_builtin+0xac>

000000000000120c <printone>:
    120c:	stp	x29, x30, [sp, #-96]!
    1210:	str	x27, [sp, #16]
    1214:	stp	x26, x25, [sp, #32]
    1218:	stp	x24, x23, [sp, #48]
    121c:	stp	x22, x21, [sp, #64]
    1220:	stp	x20, x19, [sp, #80]
    1224:	mov	x29, sp
    1228:	mov	w19, w2
    122c:	mov	w21, w0
    1230:	bl	1340 <getflags>
    1234:	cmn	w0, #0x1
    1238:	b.eq	1324 <printone+0x118>  // b.none
    123c:	mov	w20, w0
    1240:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    1244:	add	x0, x0, #0x6d3
    1248:	mov	w1, w21
    124c:	bl	cb0 <printf@plt>
    1250:	adrp	x26, 11000 <__FRAME_END__+0xf7ac>
    1254:	ldr	x26, [x26, #4032]
    1258:	adrp	x8, 1000 <fdflags_builtin+0x24c>
    125c:	adrp	x9, 1000 <fdflags_builtin+0x24c>
    1260:	add	x8, x8, #0x7ac
    1264:	add	x9, x9, #0x6dc
    1268:	cmp	w19, #0x0
    126c:	adrp	x25, 11000 <__FRAME_END__+0xf7ac>
    1270:	adrp	x21, 1000 <fdflags_builtin+0x24c>
    1274:	adrp	x23, 1000 <fdflags_builtin+0x24c>
    1278:	mov	x24, xzr
    127c:	add	x25, x25, #0xd28
    1280:	add	x21, x21, #0x6de
    1284:	csel	x22, x9, x8, ne  // ne = any
    1288:	add	x23, x23, #0x6d7
    128c:	b	12a8 <printone+0x9c>
    1290:	ldr	x1, [x26]
    1294:	mov	w0, #0x2c                  	// #44
    1298:	bl	c10 <putc@plt>
    129c:	add	x24, x24, #0x10
    12a0:	cmp	x24, #0xa0
    12a4:	b.eq	1300 <printone+0xf4>  // b.none
    12a8:	add	x8, x25, x24
    12ac:	ldr	w27, [x8, #8]
    12b0:	tst	w27, w20
    12b4:	b.eq	12d0 <printone+0xc4>  // b.none
    12b8:	ldr	x2, [x25, x24]
    12bc:	mov	x0, x23
    12c0:	mov	x1, x22
    12c4:	bl	cb0 <printf@plt>
    12c8:	bic	w20, w20, w27
    12cc:	b	12e0 <printone+0xd4>
    12d0:	cbz	w19, 129c <printone+0x90>
    12d4:	ldr	x1, [x25, x24]
    12d8:	mov	x0, x21
    12dc:	bl	cb0 <printf@plt>
    12e0:	cmp	w19, #0x0
    12e4:	cset	w8, ne  // ne = any
    12e8:	cmp	x24, #0x90
    12ec:	cset	w9, ne  // ne = any
    12f0:	and	w8, w8, w9
    12f4:	tbnz	w8, #0, 1290 <printone+0x84>
    12f8:	cbz	w20, 129c <printone+0x90>
    12fc:	b	1290 <printone+0x84>
    1300:	ldr	x1, [x26]
    1304:	ldp	x20, x19, [sp, #80]
    1308:	ldp	x22, x21, [sp, #64]
    130c:	ldp	x24, x23, [sp, #48]
    1310:	ldp	x26, x25, [sp, #32]
    1314:	ldr	x27, [sp, #16]
    1318:	mov	w0, #0xa                   	// #10
    131c:	ldp	x29, x30, [sp], #96
    1320:	b	c10 <putc@plt>
    1324:	ldp	x20, x19, [sp, #80]
    1328:	ldp	x22, x21, [sp, #64]
    132c:	ldp	x24, x23, [sp, #48]
    1330:	ldp	x26, x25, [sp, #32]
    1334:	ldr	x27, [sp, #16]
    1338:	ldp	x29, x30, [sp], #96
    133c:	ret

0000000000001340 <getflags>:
    1340:	stp	x29, x30, [sp, #-48]!
    1344:	stp	x20, x19, [sp, #32]
    1348:	mov	w20, w1
    134c:	mov	w1, #0x1                   	// #1
    1350:	str	x21, [sp, #16]
    1354:	mov	x29, sp
    1358:	mov	w19, w0
    135c:	bl	c90 <fcntl@plt>
    1360:	cmn	w0, #0x1
    1364:	b.eq	139c <getflags+0x5c>  // b.none
    1368:	mov	w21, w0
    136c:	mov	w1, #0x3                   	// #3
    1370:	mov	w0, w19
    1374:	bl	c90 <fcntl@plt>
    1378:	cmn	w0, #0x1
    137c:	b.eq	13bc <getflags+0x7c>  // b.none
    1380:	orr	w8, w0, #0x80000
    1384:	cmp	w21, #0x0
    1388:	mov	w9, #0x3c00                	// #15360
    138c:	csel	w8, w0, w8, eq  // eq = none
    1390:	movk	w9, #0x1d, lsl #16
    1394:	and	w0, w8, w9
    1398:	b	13e4 <getflags+0xa4>
    139c:	cbz	w20, 13e0 <getflags+0xa0>
    13a0:	bl	cc0 <__errno_location@plt>
    13a4:	ldr	w0, [x0]
    13a8:	bl	c40 <strerror@plt>
    13ac:	mov	x2, x0
    13b0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    13b4:	add	x0, x0, #0x6e2
    13b8:	b	13d8 <getflags+0x98>
    13bc:	cbz	w20, 13e0 <getflags+0xa0>
    13c0:	bl	cc0 <__errno_location@plt>
    13c4:	ldr	w0, [x0]
    13c8:	bl	c40 <strerror@plt>
    13cc:	mov	x2, x0
    13d0:	adrp	x0, 1000 <fdflags_builtin+0x24c>
    13d4:	add	x0, x0, #0x701
    13d8:	mov	w1, w19
    13dc:	bl	bf0 <builtin_error@plt>
    13e0:	mov	w0, #0xffffffff            	// #-1
    13e4:	ldp	x20, x19, [sp, #32]
    13e8:	ldr	x21, [sp, #16]
    13ec:	ldp	x29, x30, [sp], #48
    13f0:	ret

Disassembly of section .fini:

00000000000013f4 <_fini>:
    13f4:	stp	x29, x30, [sp, #-16]!
    13f8:	mov	x29, sp
    13fc:	ldp	x29, x30, [sp], #16
    1400:	ret
