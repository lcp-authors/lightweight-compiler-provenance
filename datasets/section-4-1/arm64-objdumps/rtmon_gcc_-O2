
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//rtmon_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000404af0 <.init>:
  404af0:	stp	x29, x30, [sp, #-16]!
  404af4:	mov	x29, sp
  404af8:	bl	4054e8 <_start@@Base+0x50>
  404afc:	ldp	x29, x30, [sp], #16
  404b00:	ret

Disassembly of section .plt:

0000000000404b10 <memcpy@plt-0x20>:
  404b10:	stp	x16, x30, [sp, #-16]!
  404b14:	adrp	x16, 420000 <_IO_stdin_used@@Base+0x135b8>
  404b18:	ldr	x17, [x16, #4088]
  404b1c:	add	x16, x16, #0xff8
  404b20:	br	x17
  404b24:	nop
  404b28:	nop
  404b2c:	nop

0000000000404b30 <memcpy@plt>:
  404b30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b34:	ldr	x17, [x16]
  404b38:	add	x16, x16, #0x0
  404b3c:	br	x17

0000000000404b40 <recvmsg@plt>:
  404b40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b44:	ldr	x17, [x16, #8]
  404b48:	add	x16, x16, #0x8
  404b4c:	br	x17

0000000000404b50 <strtoul@plt>:
  404b50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b54:	ldr	x17, [x16, #16]
  404b58:	add	x16, x16, #0x10
  404b5c:	br	x17

0000000000404b60 <strlen@plt>:
  404b60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b64:	ldr	x17, [x16, #24]
  404b68:	add	x16, x16, #0x18
  404b6c:	br	x17

0000000000404b70 <exit@plt>:
  404b70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b74:	ldr	x17, [x16, #32]
  404b78:	add	x16, x16, #0x20
  404b7c:	br	x17

0000000000404b80 <perror@plt>:
  404b80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b84:	ldr	x17, [x16, #40]
  404b88:	add	x16, x16, #0x28
  404b8c:	br	x17

0000000000404b90 <strtoll@plt>:
  404b90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404b94:	ldr	x17, [x16, #48]
  404b98:	add	x16, x16, #0x30
  404b9c:	br	x17

0000000000404ba0 <strtod@plt>:
  404ba0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ba4:	ldr	x17, [x16, #56]
  404ba8:	add	x16, x16, #0x38
  404bac:	br	x17

0000000000404bb0 <geteuid@plt>:
  404bb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bb4:	ldr	x17, [x16, #64]
  404bb8:	add	x16, x16, #0x40
  404bbc:	br	x17

0000000000404bc0 <sethostent@plt>:
  404bc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bc4:	ldr	x17, [x16, #72]
  404bc8:	add	x16, x16, #0x48
  404bcc:	br	x17

0000000000404bd0 <bind@plt>:
  404bd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bd4:	ldr	x17, [x16, #80]
  404bd8:	add	x16, x16, #0x50
  404bdc:	br	x17

0000000000404be0 <ftell@plt>:
  404be0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404be4:	ldr	x17, [x16, #88]
  404be8:	add	x16, x16, #0x58
  404bec:	br	x17

0000000000404bf0 <sprintf@plt>:
  404bf0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404bf4:	ldr	x17, [x16, #96]
  404bf8:	add	x16, x16, #0x60
  404bfc:	br	x17

0000000000404c00 <getuid@plt>:
  404c00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c04:	ldr	x17, [x16, #104]
  404c08:	add	x16, x16, #0x68
  404c0c:	br	x17

0000000000404c10 <putc@plt>:
  404c10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c14:	ldr	x17, [x16, #112]
  404c18:	add	x16, x16, #0x70
  404c1c:	br	x17

0000000000404c20 <strftime@plt>:
  404c20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c24:	ldr	x17, [x16, #120]
  404c28:	add	x16, x16, #0x78
  404c2c:	br	x17

0000000000404c30 <fputc@plt>:
  404c30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c34:	ldr	x17, [x16, #128]
  404c38:	add	x16, x16, #0x80
  404c3c:	br	x17

0000000000404c40 <snprintf@plt>:
  404c40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c44:	ldr	x17, [x16, #136]
  404c48:	add	x16, x16, #0x88
  404c4c:	br	x17

0000000000404c50 <fileno@plt>:
  404c50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c54:	ldr	x17, [x16, #144]
  404c58:	add	x16, x16, #0x90
  404c5c:	br	x17

0000000000404c60 <localtime@plt>:
  404c60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c64:	ldr	x17, [x16, #152]
  404c68:	add	x16, x16, #0x98
  404c6c:	br	x17

0000000000404c70 <fclose@plt>:
  404c70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c74:	ldr	x17, [x16, #160]
  404c78:	add	x16, x16, #0xa0
  404c7c:	br	x17

0000000000404c80 <time@plt>:
  404c80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c84:	ldr	x17, [x16, #168]
  404c88:	add	x16, x16, #0xa8
  404c8c:	br	x17

0000000000404c90 <malloc@plt>:
  404c90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404c94:	ldr	x17, [x16, #176]
  404c98:	add	x16, x16, #0xb0
  404c9c:	br	x17

0000000000404ca0 <setsockopt@plt>:
  404ca0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ca4:	ldr	x17, [x16, #184]
  404ca8:	add	x16, x16, #0xb8
  404cac:	br	x17

0000000000404cb0 <__isoc99_fscanf@plt>:
  404cb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cb4:	ldr	x17, [x16, #192]
  404cb8:	add	x16, x16, #0xc0
  404cbc:	br	x17

0000000000404cc0 <__libc_start_main@plt>:
  404cc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cc4:	ldr	x17, [x16, #200]
  404cc8:	add	x16, x16, #0xc8
  404ccc:	br	x17

0000000000404cd0 <strcat@plt>:
  404cd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cd4:	ldr	x17, [x16, #208]
  404cd8:	add	x16, x16, #0xd0
  404cdc:	br	x17

0000000000404ce0 <if_indextoname@plt>:
  404ce0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ce4:	ldr	x17, [x16, #216]
  404ce8:	add	x16, x16, #0xd8
  404cec:	br	x17

0000000000404cf0 <memset@plt>:
  404cf0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404cf4:	ldr	x17, [x16, #224]
  404cf8:	add	x16, x16, #0xe0
  404cfc:	br	x17

0000000000404d00 <gettimeofday@plt>:
  404d00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d04:	ldr	x17, [x16, #232]
  404d08:	add	x16, x16, #0xe8
  404d0c:	br	x17

0000000000404d10 <sendmsg@plt>:
  404d10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d14:	ldr	x17, [x16, #240]
  404d18:	add	x16, x16, #0xf0
  404d1c:	br	x17

0000000000404d20 <cap_get_flag@plt>:
  404d20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d24:	ldr	x17, [x16, #248]
  404d28:	add	x16, x16, #0xf8
  404d2c:	br	x17

0000000000404d30 <strcasecmp@plt>:
  404d30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d34:	ldr	x17, [x16, #256]
  404d38:	add	x16, x16, #0x100
  404d3c:	br	x17

0000000000404d40 <realloc@plt>:
  404d40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d44:	ldr	x17, [x16, #264]
  404d48:	add	x16, x16, #0x108
  404d4c:	br	x17

0000000000404d50 <cap_set_proc@plt>:
  404d50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d54:	ldr	x17, [x16, #272]
  404d58:	add	x16, x16, #0x110
  404d5c:	br	x17

0000000000404d60 <strdup@plt>:
  404d60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d64:	ldr	x17, [x16, #280]
  404d68:	add	x16, x16, #0x118
  404d6c:	br	x17

0000000000404d70 <strerror@plt>:
  404d70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d74:	ldr	x17, [x16, #288]
  404d78:	add	x16, x16, #0x120
  404d7c:	br	x17

0000000000404d80 <close@plt>:
  404d80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d84:	ldr	x17, [x16, #296]
  404d88:	add	x16, x16, #0x128
  404d8c:	br	x17

0000000000404d90 <strrchr@plt>:
  404d90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404d94:	ldr	x17, [x16, #304]
  404d98:	add	x16, x16, #0x130
  404d9c:	br	x17

0000000000404da0 <recv@plt>:
  404da0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404da4:	ldr	x17, [x16, #312]
  404da8:	add	x16, x16, #0x138
  404dac:	br	x17

0000000000404db0 <__gmon_start__@plt>:
  404db0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404db4:	ldr	x17, [x16, #320]
  404db8:	add	x16, x16, #0x140
  404dbc:	br	x17

0000000000404dc0 <abort@plt>:
  404dc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404dc4:	ldr	x17, [x16, #328]
  404dc8:	add	x16, x16, #0x148
  404dcc:	br	x17

0000000000404dd0 <feof@plt>:
  404dd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404dd4:	ldr	x17, [x16, #336]
  404dd8:	add	x16, x16, #0x150
  404ddc:	br	x17

0000000000404de0 <memcmp@plt>:
  404de0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404de4:	ldr	x17, [x16, #344]
  404de8:	add	x16, x16, #0x158
  404dec:	br	x17

0000000000404df0 <strcmp@plt>:
  404df0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404df4:	ldr	x17, [x16, #352]
  404df8:	add	x16, x16, #0x160
  404dfc:	br	x17

0000000000404e00 <__ctype_b_loc@plt>:
  404e00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e04:	ldr	x17, [x16, #360]
  404e08:	add	x16, x16, #0x168
  404e0c:	br	x17

0000000000404e10 <strtol@plt>:
  404e10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e14:	ldr	x17, [x16, #368]
  404e18:	add	x16, x16, #0x170
  404e1c:	br	x17

0000000000404e20 <cap_get_proc@plt>:
  404e20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e24:	ldr	x17, [x16, #376]
  404e28:	add	x16, x16, #0x178
  404e2c:	br	x17

0000000000404e30 <fread@plt>:
  404e30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e34:	ldr	x17, [x16, #384]
  404e38:	add	x16, x16, #0x180
  404e3c:	br	x17

0000000000404e40 <gethostbyaddr@plt>:
  404e40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e44:	ldr	x17, [x16, #392]
  404e48:	add	x16, x16, #0x188
  404e4c:	br	x17

0000000000404e50 <free@plt>:
  404e50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e54:	ldr	x17, [x16, #400]
  404e58:	add	x16, x16, #0x190
  404e5c:	br	x17

0000000000404e60 <inet_pton@plt>:
  404e60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e64:	ldr	x17, [x16, #408]
  404e68:	add	x16, x16, #0x198
  404e6c:	br	x17

0000000000404e70 <send@plt>:
  404e70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e74:	ldr	x17, [x16, #416]
  404e78:	add	x16, x16, #0x1a0
  404e7c:	br	x17

0000000000404e80 <strspn@plt>:
  404e80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e84:	ldr	x17, [x16, #424]
  404e88:	add	x16, x16, #0x1a8
  404e8c:	br	x17

0000000000404e90 <strchr@plt>:
  404e90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404e94:	ldr	x17, [x16, #432]
  404e98:	add	x16, x16, #0x1b0
  404e9c:	br	x17

0000000000404ea0 <strtoull@plt>:
  404ea0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ea4:	ldr	x17, [x16, #440]
  404ea8:	add	x16, x16, #0x1b8
  404eac:	br	x17

0000000000404eb0 <fwrite@plt>:
  404eb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404eb4:	ldr	x17, [x16, #448]
  404eb8:	add	x16, x16, #0x1c0
  404ebc:	br	x17

0000000000404ec0 <socket@plt>:
  404ec0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ec4:	ldr	x17, [x16, #456]
  404ec8:	add	x16, x16, #0x1c8
  404ecc:	br	x17

0000000000404ed0 <fflush@plt>:
  404ed0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ed4:	ldr	x17, [x16, #464]
  404ed8:	add	x16, x16, #0x1d0
  404edc:	br	x17

0000000000404ee0 <fopen64@plt>:
  404ee0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ee4:	ldr	x17, [x16, #472]
  404ee8:	add	x16, x16, #0x1d8
  404eec:	br	x17

0000000000404ef0 <cap_clear@plt>:
  404ef0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ef4:	ldr	x17, [x16, #480]
  404ef8:	add	x16, x16, #0x1e0
  404efc:	br	x17

0000000000404f00 <isatty@plt>:
  404f00:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f04:	ldr	x17, [x16, #488]
  404f08:	add	x16, x16, #0x1e8
  404f0c:	br	x17

0000000000404f10 <sysconf@plt>:
  404f10:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f14:	ldr	x17, [x16, #496]
  404f18:	add	x16, x16, #0x1f0
  404f1c:	br	x17

0000000000404f20 <asctime@plt>:
  404f20:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f24:	ldr	x17, [x16, #504]
  404f28:	add	x16, x16, #0x1f8
  404f2c:	br	x17

0000000000404f30 <cap_free@plt>:
  404f30:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f34:	ldr	x17, [x16, #512]
  404f38:	add	x16, x16, #0x200
  404f3c:	br	x17

0000000000404f40 <if_nametoindex@plt>:
  404f40:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f44:	ldr	x17, [x16, #520]
  404f48:	add	x16, x16, #0x208
  404f4c:	br	x17

0000000000404f50 <strchrnul@plt>:
  404f50:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f54:	ldr	x17, [x16, #528]
  404f58:	add	x16, x16, #0x210
  404f5c:	br	x17

0000000000404f60 <strstr@plt>:
  404f60:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f64:	ldr	x17, [x16, #536]
  404f68:	add	x16, x16, #0x218
  404f6c:	br	x17

0000000000404f70 <__isoc99_sscanf@plt>:
  404f70:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f74:	ldr	x17, [x16, #544]
  404f78:	add	x16, x16, #0x220
  404f7c:	br	x17

0000000000404f80 <strncpy@plt>:
  404f80:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f84:	ldr	x17, [x16, #552]
  404f88:	add	x16, x16, #0x228
  404f8c:	br	x17

0000000000404f90 <strcspn@plt>:
  404f90:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404f94:	ldr	x17, [x16, #560]
  404f98:	add	x16, x16, #0x230
  404f9c:	br	x17

0000000000404fa0 <vfprintf@plt>:
  404fa0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fa4:	ldr	x17, [x16, #568]
  404fa8:	add	x16, x16, #0x238
  404fac:	br	x17

0000000000404fb0 <printf@plt>:
  404fb0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fb4:	ldr	x17, [x16, #576]
  404fb8:	add	x16, x16, #0x240
  404fbc:	br	x17

0000000000404fc0 <__assert_fail@plt>:
  404fc0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fc4:	ldr	x17, [x16, #584]
  404fc8:	add	x16, x16, #0x248
  404fcc:	br	x17

0000000000404fd0 <__errno_location@plt>:
  404fd0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fd4:	ldr	x17, [x16, #592]
  404fd8:	add	x16, x16, #0x250
  404fdc:	br	x17

0000000000404fe0 <getenv@plt>:
  404fe0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404fe4:	ldr	x17, [x16, #600]
  404fe8:	add	x16, x16, #0x258
  404fec:	br	x17

0000000000404ff0 <putchar@plt>:
  404ff0:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  404ff4:	ldr	x17, [x16, #608]
  404ff8:	add	x16, x16, #0x260
  404ffc:	br	x17

0000000000405000 <__getdelim@plt>:
  405000:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405004:	ldr	x17, [x16, #616]
  405008:	add	x16, x16, #0x268
  40500c:	br	x17

0000000000405010 <getsockname@plt>:
  405010:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405014:	ldr	x17, [x16, #624]
  405018:	add	x16, x16, #0x270
  40501c:	br	x17

0000000000405020 <fprintf@plt>:
  405020:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405024:	ldr	x17, [x16, #632]
  405028:	add	x16, x16, #0x278
  40502c:	br	x17

0000000000405030 <fgets@plt>:
  405030:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405034:	ldr	x17, [x16, #640]
  405038:	add	x16, x16, #0x280
  40503c:	br	x17

0000000000405040 <inet_ntop@plt>:
  405040:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405044:	ldr	x17, [x16, #648]
  405048:	add	x16, x16, #0x288
  40504c:	br	x17

0000000000405050 <ferror@plt>:
  405050:	adrp	x16, 421000 <memcpy@GLIBC_2.17>
  405054:	ldr	x17, [x16, #656]
  405058:	add	x16, x16, #0x290
  40505c:	br	x17

Disassembly of section .text:

0000000000405060 <main@@Base>:
  405060:	stp	x29, x30, [sp, #-176]!
  405064:	cmp	w0, #0x1
  405068:	mov	x29, sp
  40506c:	stp	x19, x20, [sp, #16]
  405070:	stp	x21, x22, [sp, #32]
  405074:	stp	x23, x24, [sp, #48]
  405078:	stp	x25, x26, [sp, #64]
  40507c:	stp	x27, x28, [sp, #80]
  405080:	b.le	40540c <main@@Base+0x3ac>
  405084:	adrp	x19, 40c000 <rtnl_listen@@Base+0x228>
  405088:	adrp	x23, 40c000 <rtnl_listen@@Base+0x228>
  40508c:	adrp	x24, 40c000 <rtnl_listen@@Base+0x228>
  405090:	mov	w27, w0
  405094:	mov	x28, x1
  405098:	add	x19, x19, #0xb60
  40509c:	add	x23, x23, #0xbb8
  4050a0:	add	x24, x24, #0xbe8
  4050a4:	mov	x25, #0x0                   	// #0
  4050a8:	mov	w21, #0xffffffff            	// #-1
  4050ac:	mov	w20, #0x0                   	// #0
  4050b0:	adrp	x22, 40c000 <rtnl_listen@@Base+0x228>
  4050b4:	stp	wzr, wzr, [sp, #100]
  4050b8:	str	wzr, [sp, #108]
  4050bc:	nop
  4050c0:	ldr	x0, [x28, #8]
  4050c4:	mov	x1, x19
  4050c8:	bl	4068d8 <matches@@Base>
  4050cc:	tst	w0, #0xff
  4050d0:	b.ne	4051f8 <main@@Base+0x198>  // b.any
  4050d4:	sub	w27, w27, #0x1
  4050d8:	add	x26, x28, #0x8
  4050dc:	cmp	w27, #0x1
  4050e0:	b.eq	40539c <main@@Base+0x33c>  // b.none
  4050e4:	ldr	x20, [x28, #16]
  4050e8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4050ec:	add	x1, x1, #0xb68
  4050f0:	mov	x0, x20
  4050f4:	bl	404df0 <strcmp@plt>
  4050f8:	cbz	w0, 405250 <main@@Base+0x1f0>
  4050fc:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405100:	mov	x0, x20
  405104:	add	x1, x1, #0xb70
  405108:	bl	404df0 <strcmp@plt>
  40510c:	cbz	w0, 405120 <main@@Base+0xc0>
  405110:	add	x1, x22, #0xb78
  405114:	mov	x0, x20
  405118:	bl	404df0 <strcmp@plt>
  40511c:	cbnz	w0, 405368 <main@@Base+0x308>
  405120:	mov	w20, #0xa                   	// #10
  405124:	sub	w27, w27, #0x1
  405128:	add	x28, x26, #0x8
  40512c:	cmp	w27, #0x1
  405130:	b.ne	4050c0 <main@@Base+0x60>  // b.any
  405134:	cbz	x25, 40540c <main@@Base+0x3ac>
  405138:	ldr	w0, [sp, #100]
  40513c:	orr	w21, w21, w0
  405140:	ldr	w0, [sp, #104]
  405144:	cbz	w0, 40516c <main@@Base+0x10c>
  405148:	cmp	w20, #0x0
  40514c:	and	w0, w20, #0xfffffffd
  405150:	cset	w1, eq  // eq = none
  405154:	cbnz	w0, 40515c <main@@Base+0xfc>
  405158:	orr	w21, w21, #0x10
  40515c:	cmp	w1, #0x0
  405160:	orr	w0, w21, #0x100
  405164:	ccmp	w20, #0xa, #0x4, eq  // eq = none
  405168:	csel	w21, w0, w21, eq  // eq = none
  40516c:	ldr	w0, [sp, #108]
  405170:	cbnz	w0, 4052d8 <main@@Base+0x278>
  405174:	mov	x0, x25
  405178:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40517c:	add	x1, x1, #0xc38
  405180:	bl	404ee0 <fopen64@plt>
  405184:	mov	x19, x0
  405188:	cbz	x0, 405484 <main@@Base+0x424>
  40518c:	mov	w1, w21
  405190:	add	x0, sp, #0x78
  405194:	bl	40afa8 <rtnl_open@@Base>
  405198:	tbnz	w0, #31, 40547c <main@@Base+0x41c>
  40519c:	add	x0, sp, #0x78
  4051a0:	mov	w1, #0x0                   	// #0
  4051a4:	bl	40b4d0 <rtnl_linkdump_req@@Base>
  4051a8:	tbnz	w0, #31, 405470 <main@@Base+0x410>
  4051ac:	mov	x0, x19
  4051b0:	bl	4055d8 <_start@@Base+0x140>
  4051b4:	adrp	x1, 405000 <__getdelim@plt>
  4051b8:	mov	x2, x19
  4051bc:	add	x1, x1, #0x690
  4051c0:	add	x0, sp, #0x78
  4051c4:	mov	w3, #0x0                   	// #0
  4051c8:	bl	40b918 <rtnl_dump_filter_nc@@Base>
  4051cc:	tbnz	w0, #31, 405300 <main@@Base+0x2a0>
  4051d0:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  4051d4:	adrp	x1, 405000 <__getdelim@plt>
  4051d8:	mov	x2, x19
  4051dc:	add	x0, sp, #0x78
  4051e0:	add	x1, x1, #0x630
  4051e4:	str	wzr, [x3, #680]
  4051e8:	bl	40bdd8 <rtnl_listen@@Base>
  4051ec:	tbnz	w0, #31, 405468 <main@@Base+0x408>
  4051f0:	mov	w0, #0x0                   	// #0
  4051f4:	bl	404b70 <exit@plt>
  4051f8:	ldr	x0, [x28, #8]
  4051fc:	ldrb	w1, [x0]
  405200:	cmp	w1, #0x2d
  405204:	b.eq	405258 <main@@Base+0x1f8>  // b.none
  405208:	mov	x1, x23
  40520c:	bl	4068d8 <matches@@Base>
  405210:	tst	w0, #0xff
  405214:	b.eq	4053f0 <main@@Base+0x390>  // b.none
  405218:	ldr	x0, [x28, #8]
  40521c:	mov	x1, x24
  405220:	bl	4068d8 <matches@@Base>
  405224:	tst	w0, #0xff
  405228:	b.ne	4052b0 <main@@Base+0x250>  // b.any
  40522c:	sub	w27, w27, #0x1
  405230:	add	x26, x28, #0x8
  405234:	cmp	w27, #0x1
  405238:	b.eq	40539c <main@@Base+0x33c>  // b.none
  40523c:	ldr	x25, [x28, #16]
  405240:	b	405124 <main@@Base+0xc4>
  405244:	ldrb	w4, [x0, #2]
  405248:	mov	x26, x28
  40524c:	cbnz	w4, 405264 <main@@Base+0x204>
  405250:	mov	w20, #0x2                   	// #2
  405254:	b	405124 <main@@Base+0xc4>
  405258:	ldrb	w4, [x0, #1]
  40525c:	cmp	w4, #0x34
  405260:	b.eq	405244 <main@@Base+0x1e4>  // b.none
  405264:	cmp	w1, #0x2d
  405268:	b.ne	405208 <main@@Base+0x1a8>  // b.any
  40526c:	ldrb	w4, [x0, #1]
  405270:	cmp	w4, #0x36
  405274:	b.eq	4052a0 <main@@Base+0x240>  // b.none
  405278:	cmp	w1, #0x2d
  40527c:	b.ne	405208 <main@@Base+0x1a8>  // b.any
  405280:	ldrb	w1, [x0, #1]
  405284:	cmp	w1, #0x30
  405288:	b.ne	405208 <main@@Base+0x1a8>  // b.any
  40528c:	ldrb	w1, [x0, #2]
  405290:	cbnz	w1, 405208 <main@@Base+0x1a8>
  405294:	mov	x26, x28
  405298:	mov	w20, #0x11                  	// #17
  40529c:	b	405124 <main@@Base+0xc4>
  4052a0:	ldrb	w4, [x0, #2]
  4052a4:	mov	x26, x28
  4052a8:	cbz	w4, 405120 <main@@Base+0xc0>
  4052ac:	b	405278 <main@@Base+0x218>
  4052b0:	ldr	x0, [x28, #8]
  4052b4:	add	x1, x22, #0xb78
  4052b8:	bl	4068d8 <matches@@Base>
  4052bc:	tst	w0, #0xff
  4052c0:	b.ne	40533c <main@@Base+0x2dc>  // b.any
  4052c4:	mov	w0, #0x1                   	// #1
  4052c8:	mov	x26, x28
  4052cc:	mov	w21, #0x0                   	// #0
  4052d0:	str	w0, [sp, #100]
  4052d4:	b	405124 <main@@Base+0xc4>
  4052d8:	cmp	w20, #0x0
  4052dc:	and	w0, w20, #0xfffffffd
  4052e0:	cset	w1, eq  // eq = none
  4052e4:	cbnz	w0, 4052ec <main@@Base+0x28c>
  4052e8:	orr	w21, w21, #0x40
  4052ec:	cmp	w1, #0x0
  4052f0:	orr	w0, w21, #0x400
  4052f4:	ccmp	w20, #0xa, #0x4, eq  // eq = none
  4052f8:	csel	w21, w0, w21, eq  // eq = none
  4052fc:	b	405174 <main@@Base+0x114>
  405300:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  405304:	mov	x2, #0x10                  	// #16
  405308:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  40530c:	add	x0, x0, #0xc70
  405310:	ldr	x3, [x1, #704]
  405314:	mov	x1, #0x1                   	// #1
  405318:	bl	404eb0 <fwrite@plt>
  40531c:	mov	w0, #0x1                   	// #1
  405320:	ldp	x19, x20, [sp, #16]
  405324:	ldp	x21, x22, [sp, #32]
  405328:	ldp	x23, x24, [sp, #48]
  40532c:	ldp	x25, x26, [sp, #64]
  405330:	ldp	x27, x28, [sp, #80]
  405334:	ldp	x29, x30, [sp], #176
  405338:	ret
  40533c:	ldr	x0, [x28, #8]
  405340:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405344:	add	x1, x1, #0xbf0
  405348:	bl	4068d8 <matches@@Base>
  40534c:	tst	w0, #0xff
  405350:	b.ne	4053a0 <main@@Base+0x340>  // b.any
  405354:	mov	w0, #0x1                   	// #1
  405358:	mov	x26, x28
  40535c:	mov	w21, #0x0                   	// #0
  405360:	str	w0, [sp, #104]
  405364:	b	405124 <main@@Base+0xc4>
  405368:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40536c:	mov	x0, x20
  405370:	add	x1, x1, #0xb80
  405374:	bl	404df0 <strcmp@plt>
  405378:	cbz	w0, 40539c <main@@Base+0x33c>
  40537c:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405380:	mov	x2, x20
  405384:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405388:	add	x1, x1, #0xb88
  40538c:	ldr	x0, [x0, #704]
  405390:	bl	405020 <fprintf@plt>
  405394:	mov	w0, #0xffffffff            	// #-1
  405398:	bl	404b70 <exit@plt>
  40539c:	bl	4055a8 <_start@@Base+0x110>
  4053a0:	ldr	x0, [x28, #8]
  4053a4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4053a8:	add	x1, x1, #0xbf8
  4053ac:	bl	4068d8 <matches@@Base>
  4053b0:	tst	w0, #0xff
  4053b4:	b.eq	4053dc <main@@Base+0x37c>  // b.none
  4053b8:	ldr	x21, [x28, #8]
  4053bc:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4053c0:	add	x1, x1, #0xc00
  4053c4:	mov	x0, x21
  4053c8:	bl	404df0 <strcmp@plt>
  4053cc:	cbnz	w0, 405430 <main@@Base+0x3d0>
  4053d0:	mov	x26, x28
  4053d4:	mov	w21, #0xffffffff            	// #-1
  4053d8:	b	405124 <main@@Base+0xc4>
  4053dc:	mov	w0, #0x1                   	// #1
  4053e0:	mov	x26, x28
  4053e4:	mov	w21, #0x0                   	// #0
  4053e8:	str	w0, [sp, #108]
  4053ec:	b	405124 <main@@Base+0xc4>
  4053f0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4053f4:	add	x1, x1, #0xc88
  4053f8:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  4053fc:	add	x0, x0, #0xbc8
  405400:	bl	404fb0 <printf@plt>
  405404:	mov	w0, #0x0                   	// #0
  405408:	bl	404b70 <exit@plt>
  40540c:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  405410:	mov	x2, #0x34                  	// #52
  405414:	mov	x1, #0x1                   	// #1
  405418:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  40541c:	ldr	x3, [x3, #704]
  405420:	add	x0, x0, #0xb28
  405424:	bl	404eb0 <fwrite@plt>
  405428:	mov	w0, #0xffffffff            	// #-1
  40542c:	bl	404b70 <exit@plt>
  405430:	mov	x0, x21
  405434:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405438:	add	x1, x1, #0xb80
  40543c:	bl	4068d8 <matches@@Base>
  405440:	tst	w0, #0xff
  405444:	b.eq	40539c <main@@Base+0x33c>  // b.none
  405448:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  40544c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405450:	ldr	x2, [x28, #8]
  405454:	add	x1, x1, #0xc08
  405458:	ldr	x0, [x0, #704]
  40545c:	bl	405020 <fprintf@plt>
  405460:	mov	w0, #0xffffffff            	// #-1
  405464:	bl	404b70 <exit@plt>
  405468:	mov	w0, #0x2                   	// #2
  40546c:	bl	404b70 <exit@plt>
  405470:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  405474:	add	x0, x0, #0xc50
  405478:	bl	404b80 <perror@plt>
  40547c:	mov	w0, #0x1                   	// #1
  405480:	bl	404b70 <exit@plt>
  405484:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  405488:	add	x0, x0, #0xc40
  40548c:	bl	404b80 <perror@plt>
  405490:	mov	w0, #0xffffffff            	// #-1
  405494:	bl	404b70 <exit@plt>

0000000000405498 <_start@@Base>:
  405498:	mov	x29, #0x0                   	// #0
  40549c:	mov	x30, #0x0                   	// #0
  4054a0:	mov	x5, x0
  4054a4:	ldr	x1, [sp]
  4054a8:	add	x2, sp, #0x8
  4054ac:	mov	x6, sp
  4054b0:	movz	x0, #0x0, lsl #48
  4054b4:	movk	x0, #0x0, lsl #32
  4054b8:	movk	x0, #0x40, lsl #16
  4054bc:	movk	x0, #0x5060
  4054c0:	movz	x3, #0x0, lsl #48
  4054c4:	movk	x3, #0x0, lsl #32
  4054c8:	movk	x3, #0x40, lsl #16
  4054cc:	movk	x3, #0xc9b0
  4054d0:	movz	x4, #0x0, lsl #48
  4054d4:	movk	x4, #0x0, lsl #32
  4054d8:	movk	x4, #0x40, lsl #16
  4054dc:	movk	x4, #0xca30
  4054e0:	bl	404cc0 <__libc_start_main@plt>
  4054e4:	bl	404dc0 <abort@plt>
  4054e8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  4054ec:	ldr	x0, [x0, #4040]
  4054f0:	cbz	x0, 4054f8 <_start@@Base+0x60>
  4054f4:	b	404db0 <__gmon_start__@plt>
  4054f8:	ret
  4054fc:	nop
  405500:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405504:	add	x0, x0, #0x2c0
  405508:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  40550c:	add	x1, x1, #0x2c0
  405510:	cmp	x1, x0
  405514:	b.eq	40552c <_start@@Base+0x94>  // b.none
  405518:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40551c:	ldr	x1, [x1, #2640]
  405520:	cbz	x1, 40552c <_start@@Base+0x94>
  405524:	mov	x16, x1
  405528:	br	x16
  40552c:	ret
  405530:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405534:	add	x0, x0, #0x2c0
  405538:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  40553c:	add	x1, x1, #0x2c0
  405540:	sub	x1, x1, x0
  405544:	lsr	x2, x1, #63
  405548:	add	x1, x2, x1, asr #3
  40554c:	cmp	xzr, x1, asr #1
  405550:	asr	x1, x1, #1
  405554:	b.eq	40556c <_start@@Base+0xd4>  // b.none
  405558:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  40555c:	ldr	x2, [x2, #2648]
  405560:	cbz	x2, 40556c <_start@@Base+0xd4>
  405564:	mov	x16, x2
  405568:	br	x16
  40556c:	ret
  405570:	stp	x29, x30, [sp, #-32]!
  405574:	mov	x29, sp
  405578:	str	x19, [sp, #16]
  40557c:	adrp	x19, 421000 <memcpy@GLIBC_2.17>
  405580:	ldrb	w0, [x19, #712]
  405584:	cbnz	w0, 405594 <_start@@Base+0xfc>
  405588:	bl	405500 <_start@@Base+0x68>
  40558c:	mov	w0, #0x1                   	// #1
  405590:	strb	w0, [x19, #712]
  405594:	ldr	x19, [sp, #16]
  405598:	ldp	x29, x30, [sp], #32
  40559c:	ret
  4055a0:	b	405530 <_start@@Base+0x98>
  4055a4:	nop
  4055a8:	stp	x29, x30, [sp, #-16]!
  4055ac:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  4055b0:	mov	x2, #0xc5                  	// #197
  4055b4:	mov	x29, sp
  4055b8:	ldr	x3, [x3, #704]
  4055bc:	mov	x1, #0x1                   	// #1
  4055c0:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  4055c4:	add	x0, x0, #0xa60
  4055c8:	bl	404eb0 <fwrite@plt>
  4055cc:	mov	w0, #0xffffffff            	// #-1
  4055d0:	bl	404b70 <exit@plt>
  4055d4:	nop
  4055d8:	stp	x29, x30, [sp, #-176]!
  4055dc:	mov	x2, #0x18                  	// #24
  4055e0:	movk	x2, #0xf, lsl #32
  4055e4:	mov	x29, sp
  4055e8:	mov	x1, #0x0                   	// #0
  4055ec:	str	x19, [sp, #16]
  4055f0:	mov	x19, x0
  4055f4:	add	x0, sp, #0x20
  4055f8:	stp	x2, xzr, [sp, #48]
  4055fc:	bl	404d00 <gettimeofday@plt>
  405600:	ldr	w2, [sp, #48]
  405604:	ldp	x5, x4, [sp, #32]
  405608:	add	w2, w2, #0x3
  40560c:	mov	x3, x19
  405610:	add	x0, sp, #0x30
  405614:	and	x2, x2, #0xfffffffc
  405618:	mov	x1, #0x1                   	// #1
  40561c:	stp	w5, w4, [sp, #64]
  405620:	bl	404eb0 <fwrite@plt>
  405624:	ldr	x19, [sp, #16]
  405628:	ldp	x29, x30, [sp], #176
  40562c:	ret
  405630:	stp	x29, x30, [sp, #-32]!
  405634:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  405638:	mov	x29, sp
  40563c:	ldr	w0, [x0, #680]
  405640:	stp	x19, x20, [sp, #16]
  405644:	mov	x20, x1
  405648:	mov	x19, x2
  40564c:	cbz	w0, 405684 <_start@@Base+0x1ec>
  405650:	ldr	w2, [x20]
  405654:	mov	x3, x19
  405658:	mov	x1, #0x1                   	// #1
  40565c:	mov	x0, x20
  405660:	add	w2, w2, #0x3
  405664:	and	x2, x2, #0xfffffffc
  405668:	bl	404eb0 <fwrite@plt>
  40566c:	mov	x0, x19
  405670:	bl	404ed0 <fflush@plt>
  405674:	mov	w0, #0x0                   	// #0
  405678:	ldp	x19, x20, [sp, #16]
  40567c:	ldp	x29, x30, [sp], #32
  405680:	ret
  405684:	mov	x0, x2
  405688:	bl	4055d8 <_start@@Base+0x140>
  40568c:	b	405650 <_start@@Base+0x1b8>
  405690:	mov	x2, x1
  405694:	mov	x1, x0
  405698:	mov	x0, #0x0                   	// #0
  40569c:	b	405630 <_start@@Base+0x198>
  4056a0:	ldrh	w1, [x0, #6]
  4056a4:	cmp	w1, #0x2
  4056a8:	b.eq	405704 <_start@@Base+0x26c>  // b.none
  4056ac:	cmp	w1, #0xa
  4056b0:	b.ne	4056e0 <_start@@Base+0x248>  // b.any
  4056b4:	ldr	w2, [x0, #8]
  4056b8:	ldrh	w1, [x0]
  4056bc:	cbnz	w2, 4056e4 <_start@@Base+0x24c>
  4056c0:	ldr	w2, [x0, #12]
  4056c4:	cbnz	w2, 4056e4 <_start@@Base+0x24c>
  4056c8:	ldr	w2, [x0, #16]
  4056cc:	cbnz	w2, 4056e4 <_start@@Base+0x24c>
  4056d0:	ldr	w2, [x0, #20]
  4056d4:	cbnz	w2, 4056e4 <_start@@Base+0x24c>
  4056d8:	orr	w1, w1, #0x6
  4056dc:	strh	w1, [x0]
  4056e0:	ret
  4056e4:	ldrb	w3, [x0, #8]
  4056e8:	orr	w2, w1, #0x2
  4056ec:	mov	w4, #0xa                   	// #10
  4056f0:	orr	w1, w1, w4
  4056f4:	cmp	w3, #0xff
  4056f8:	csel	w1, w1, w2, eq  // eq = none
  4056fc:	strh	w1, [x0]
  405700:	ret
  405704:	ldr	w2, [x0, #8]
  405708:	ldrh	w1, [x0]
  40570c:	cbz	w2, 4056d8 <_start@@Base+0x240>
  405710:	and	w2, w2, #0xf0
  405714:	mov	w3, #0xa                   	// #10
  405718:	cmp	w2, #0xe0
  40571c:	orr	w2, w1, w3
  405720:	orr	w1, w1, #0x2
  405724:	csel	w1, w2, w1, eq  // eq = none
  405728:	strh	w1, [x0]
  40572c:	ret
  405730:	stp	x29, x30, [sp, #-32]!
  405734:	mov	x29, sp
  405738:	stp	x19, x20, [sp, #16]
  40573c:	ldrb	w19, [x0]
  405740:	cbz	w19, 405780 <_start@@Base+0x2e8>
  405744:	mov	x20, x0
  405748:	b	405768 <_start@@Base+0x2d0>
  40574c:	bl	404e00 <__ctype_b_loc@plt>
  405750:	ubfiz	x19, x19, #1, #8
  405754:	ldr	x0, [x0]
  405758:	ldrh	w0, [x0, x19]
  40575c:	tbnz	w0, #13, 405770 <_start@@Base+0x2d8>
  405760:	ldrb	w19, [x20, #1]!
  405764:	cbz	w19, 405780 <_start@@Base+0x2e8>
  405768:	cmp	w19, #0x2f
  40576c:	b.ne	40574c <_start@@Base+0x2b4>  // b.any
  405770:	mov	w0, #0xffffffff            	// #-1
  405774:	ldp	x19, x20, [sp, #16]
  405778:	ldp	x29, x30, [sp], #32
  40577c:	ret
  405780:	mov	w0, #0x0                   	// #0
  405784:	ldp	x19, x20, [sp, #16]
  405788:	ldp	x29, x30, [sp], #32
  40578c:	ret

0000000000405790 <read_prop@@Base>:
  405790:	stp	x29, x30, [sp, #-288]!
  405794:	mov	x3, x0
  405798:	mov	x4, x1
  40579c:	mov	x29, sp
  4057a0:	str	x23, [sp, #48]
  4057a4:	add	x23, sp, #0xa0
  4057a8:	mov	x0, x23
  4057ac:	stp	x21, x22, [sp, #32]
  4057b0:	mov	x21, x1
  4057b4:	mov	x22, x2
  4057b8:	mov	x1, #0x80                  	// #128
  4057bc:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  4057c0:	add	x2, x2, #0xc90
  4057c4:	bl	404c40 <snprintf@plt>
  4057c8:	sub	w0, w0, #0x1
  4057cc:	cmp	w0, #0x7e
  4057d0:	b.hi	4058d4 <read_prop@@Base+0x144>  // b.pmore
  4057d4:	mov	x0, x23
  4057d8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4057dc:	add	x1, x1, #0xcd0
  4057e0:	stp	x19, x20, [sp, #16]
  4057e4:	bl	404ee0 <fopen64@plt>
  4057e8:	mov	x19, x0
  4057ec:	cbz	x0, 405920 <read_prop@@Base+0x190>
  4057f0:	add	x20, sp, #0x50
  4057f4:	mov	x2, x0
  4057f8:	mov	w1, #0x50                  	// #80
  4057fc:	mov	x0, x20
  405800:	bl	405030 <fgets@plt>
  405804:	cbz	x0, 40595c <read_prop@@Base+0x1cc>
  405808:	mov	x0, x20
  40580c:	mov	w1, #0xa                   	// #10
  405810:	bl	404e90 <strchr@plt>
  405814:	cbz	x0, 40581c <read_prop@@Base+0x8c>
  405818:	strb	wzr, [x0]
  40581c:	mov	x0, x19
  405820:	bl	404c70 <fclose@plt>
  405824:	add	x1, sp, #0x48
  405828:	mov	x0, x20
  40582c:	mov	w2, #0x0                   	// #0
  405830:	bl	404e10 <strtol@plt>
  405834:	ldr	x1, [sp, #72]
  405838:	mov	x19, x0
  40583c:	ldrb	w0, [x1]
  405840:	cmp	w0, #0x0
  405844:	ccmp	x20, x1, #0x4, eq  // eq = none
  405848:	b.eq	4058fc <read_prop@@Base+0x16c>  // b.none
  40584c:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405850:	add	x0, x19, x0
  405854:	cmn	x0, #0x3
  405858:	b.hi	405878 <read_prop@@Base+0xe8>  // b.pmore
  40585c:	str	x19, [x22]
  405860:	mov	w0, #0x0                   	// #0
  405864:	ldp	x19, x20, [sp, #16]
  405868:	ldp	x21, x22, [sp, #32]
  40586c:	ldr	x23, [sp, #48]
  405870:	ldp	x29, x30, [sp], #288
  405874:	ret
  405878:	bl	404fd0 <__errno_location@plt>
  40587c:	ldr	w0, [x0]
  405880:	cmp	w0, #0x22
  405884:	b.ne	40585c <read_prop@@Base+0xcc>  // b.any
  405888:	adrp	x22, 420000 <_IO_stdin_used@@Base+0x135b8>
  40588c:	ldr	x1, [x22, #3992]
  405890:	ldr	x19, [x1]
  405894:	bl	404d70 <strerror@plt>
  405898:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40589c:	mov	x3, x0
  4058a0:	add	x1, x1, #0xd40
  4058a4:	mov	x0, x19
  4058a8:	mov	x2, x23
  4058ac:	bl	405020 <fprintf@plt>
  4058b0:	ldr	x22, [x22, #3992]
  4058b4:	mov	x2, x23
  4058b8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4058bc:	add	x1, x1, #0xd50
  4058c0:	ldr	x0, [x22]
  4058c4:	bl	405020 <fprintf@plt>
  4058c8:	mov	w0, #0xffffffff            	// #-1
  4058cc:	ldp	x19, x20, [sp, #16]
  4058d0:	b	405868 <read_prop@@Base+0xd8>
  4058d4:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  4058d8:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  4058dc:	mov	x2, #0x26                  	// #38
  4058e0:	add	x0, x0, #0xca8
  4058e4:	ldr	x3, [x3, #3992]
  4058e8:	mov	x1, #0x1                   	// #1
  4058ec:	ldr	x3, [x3]
  4058f0:	bl	404eb0 <fwrite@plt>
  4058f4:	mov	w0, #0xffffffff            	// #-1
  4058f8:	b	405868 <read_prop@@Base+0xd8>
  4058fc:	adrp	x22, 420000 <_IO_stdin_used@@Base+0x135b8>
  405900:	mov	x2, x20
  405904:	mov	x3, x23
  405908:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40590c:	ldr	x0, [x22, #3992]
  405910:	add	x1, x1, #0xd18
  405914:	ldr	x0, [x0]
  405918:	bl	405020 <fprintf@plt>
  40591c:	b	4058b0 <read_prop@@Base+0x120>
  405920:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  405924:	ldr	x0, [x0, #3992]
  405928:	ldr	x19, [x0]
  40592c:	bl	404fd0 <__errno_location@plt>
  405930:	ldr	w0, [x0]
  405934:	bl	404d70 <strerror@plt>
  405938:	mov	x3, x0
  40593c:	mov	x2, x23
  405940:	mov	x0, x19
  405944:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405948:	add	x1, x1, #0xcd8
  40594c:	bl	405020 <fprintf@plt>
  405950:	mov	w0, #0xffffffff            	// #-1
  405954:	ldp	x19, x20, [sp, #16]
  405958:	b	405868 <read_prop@@Base+0xd8>
  40595c:	adrp	x22, 420000 <_IO_stdin_used@@Base+0x135b8>
  405960:	mov	x2, x21
  405964:	mov	x3, x23
  405968:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40596c:	ldr	x0, [x22, #3992]
  405970:	add	x1, x1, #0xce8
  405974:	ldr	x0, [x0]
  405978:	bl	405020 <fprintf@plt>
  40597c:	mov	x0, x19
  405980:	bl	404c70 <fclose@plt>
  405984:	b	4058b0 <read_prop@@Base+0x120>

0000000000405988 <get_hex@@Base>:
  405988:	and	w0, w0, #0xff
  40598c:	sub	w1, w0, #0x41
  405990:	and	w1, w1, #0xff
  405994:	cmp	w1, #0x5
  405998:	b.ls	4059c8 <get_hex@@Base+0x40>  // b.plast
  40599c:	sub	w1, w0, #0x61
  4059a0:	and	w1, w1, #0xff
  4059a4:	cmp	w1, #0x5
  4059a8:	b.ls	4059c0 <get_hex@@Base+0x38>  // b.plast
  4059ac:	sub	w0, w0, #0x30
  4059b0:	and	w1, w0, #0xff
  4059b4:	cmp	w1, #0x9
  4059b8:	csinv	w0, w0, wzr, ls  // ls = plast
  4059bc:	ret
  4059c0:	sub	w0, w0, #0x57
  4059c4:	ret
  4059c8:	sub	w0, w0, #0x37
  4059cc:	ret

00000000004059d0 <get_integer@@Base>:
  4059d0:	cbz	x1, 405a5c <get_integer@@Base+0x8c>
  4059d4:	stp	x29, x30, [sp, #-48]!
  4059d8:	mov	x29, sp
  4059dc:	stp	x19, x20, [sp, #16]
  4059e0:	mov	x20, x0
  4059e4:	mov	x19, x1
  4059e8:	ldrb	w0, [x1]
  4059ec:	cbz	w0, 405a54 <get_integer@@Base+0x84>
  4059f0:	add	x1, sp, #0x28
  4059f4:	mov	x0, x19
  4059f8:	bl	404e10 <strtol@plt>
  4059fc:	mov	x1, x0
  405a00:	ldr	x2, [sp, #40]
  405a04:	cmp	x2, #0x0
  405a08:	ccmp	x2, x19, #0x4, ne  // ne = any
  405a0c:	b.eq	405a54 <get_integer@@Base+0x84>  // b.none
  405a10:	ldrb	w0, [x2]
  405a14:	cbnz	w0, 405a54 <get_integer@@Base+0x84>
  405a18:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405a1c:	add	x0, x1, x0
  405a20:	cmn	x0, #0x3
  405a24:	mov	w0, #0xffffffff            	// #-1
  405a28:	b.hi	405a48 <get_integer@@Base+0x78>  // b.pmore
  405a2c:	mov	x0, #0x80000000            	// #2147483648
  405a30:	add	x0, x1, x0
  405a34:	mov	x2, #0xffffffff            	// #4294967295
  405a38:	cmp	x0, x2
  405a3c:	b.hi	405a54 <get_integer@@Base+0x84>  // b.pmore
  405a40:	mov	w0, #0x0                   	// #0
  405a44:	str	w1, [x20]
  405a48:	ldp	x19, x20, [sp, #16]
  405a4c:	ldp	x29, x30, [sp], #48
  405a50:	ret
  405a54:	mov	w0, #0xffffffff            	// #-1
  405a58:	b	405a48 <get_integer@@Base+0x78>
  405a5c:	mov	w0, #0xffffffff            	// #-1
  405a60:	ret
  405a64:	nop

0000000000405a68 <mask2bits@@Base>:
  405a68:	rev	w1, w0
  405a6c:	neg	w0, w1
  405a70:	bics	w0, w0, w1
  405a74:	b.ne	405a98 <mask2bits@@Base+0x30>  // b.any
  405a78:	cbz	w1, 405a90 <mask2bits@@Base+0x28>
  405a7c:	nop
  405a80:	add	w0, w0, #0x1
  405a84:	lsl	w1, w1, #1
  405a88:	cbnz	w1, 405a80 <mask2bits@@Base+0x18>
  405a8c:	ret
  405a90:	mov	w0, #0x0                   	// #0
  405a94:	ret
  405a98:	mov	w0, #0xffffffff            	// #-1
  405a9c:	ret

0000000000405aa0 <get_unsigned@@Base>:
  405aa0:	cbz	x1, 405b20 <get_unsigned@@Base+0x80>
  405aa4:	stp	x29, x30, [sp, #-48]!
  405aa8:	mov	x29, sp
  405aac:	stp	x19, x20, [sp, #16]
  405ab0:	mov	x20, x0
  405ab4:	mov	x19, x1
  405ab8:	ldrb	w0, [x1]
  405abc:	cbz	w0, 405b10 <get_unsigned@@Base+0x70>
  405ac0:	add	x1, sp, #0x28
  405ac4:	mov	x0, x19
  405ac8:	bl	404b50 <strtoul@plt>
  405acc:	mov	x1, x0
  405ad0:	ldr	x2, [sp, #40]
  405ad4:	mov	x0, #0xffffffff            	// #4294967295
  405ad8:	cmp	x1, x0
  405adc:	cset	w0, hi  // hi = pmore
  405ae0:	cmp	x2, #0x0
  405ae4:	ccmp	x2, x19, #0x4, ne  // ne = any
  405ae8:	b.eq	405b10 <get_unsigned@@Base+0x70>  // b.none
  405aec:	ldrb	w2, [x2]
  405af0:	cmp	w2, #0x0
  405af4:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405af8:	b.ne	405b10 <get_unsigned@@Base+0x70>  // b.any
  405afc:	str	w1, [x20]
  405b00:	mov	w0, #0x0                   	// #0
  405b04:	ldp	x19, x20, [sp, #16]
  405b08:	ldp	x29, x30, [sp], #48
  405b0c:	ret
  405b10:	mov	w0, #0xffffffff            	// #-1
  405b14:	ldp	x19, x20, [sp, #16]
  405b18:	ldp	x29, x30, [sp], #48
  405b1c:	ret
  405b20:	mov	w0, #0xffffffff            	// #-1
  405b24:	ret

0000000000405b28 <get_time_rtt@@Base>:
  405b28:	stp	x29, x30, [sp, #-80]!
  405b2c:	mov	x29, sp
  405b30:	stp	x19, x20, [sp, #16]
  405b34:	mov	x20, x1
  405b38:	stp	x21, x22, [sp, #32]
  405b3c:	mov	x22, x2
  405b40:	str	x23, [sp, #48]
  405b44:	mov	x23, x0
  405b48:	mov	x0, x1
  405b4c:	mov	w1, #0x2e                  	// #46
  405b50:	str	d8, [sp, #56]
  405b54:	bl	404e90 <strchr@plt>
  405b58:	cbz	x0, 405c68 <get_time_rtt@@Base+0x140>
  405b5c:	add	x1, sp, #0x48
  405b60:	mov	x0, x20
  405b64:	bl	404ba0 <strtod@plt>
  405b68:	fcmpe	d0, #0.0
  405b6c:	fmov	d8, d0
  405b70:	b.mi	405cf8 <get_time_rtt@@Base+0x1d0>  // b.first
  405b74:	ldr	x21, [sp, #72]
  405b78:	cmp	x21, #0x0
  405b7c:	ccmp	x21, x20, #0x4, ne  // ne = any
  405b80:	b.eq	405cf8 <get_time_rtt@@Base+0x1d0>  // b.none
  405b84:	mov	x0, #0x7ff0000000000000    	// #9218868437227405312
  405b88:	fmov	d0, x0
  405b8c:	fcmp	d8, d0
  405b90:	b.ne	405ca8 <get_time_rtt@@Base+0x180>  // b.any
  405b94:	bl	404fd0 <__errno_location@plt>
  405b98:	ldr	w0, [x0]
  405b9c:	cmp	w0, #0x22
  405ba0:	b.eq	405cf8 <get_time_rtt@@Base+0x1d0>  // b.none
  405ba4:	mov	w0, #0x1                   	// #1
  405ba8:	str	w0, [x22]
  405bac:	mov	w1, #0xffffffff            	// #-1
  405bb0:	ldrb	w0, [x21]
  405bb4:	cbz	w0, 405cf0 <get_time_rtt@@Base+0x1c8>
  405bb8:	str	wzr, [x22]
  405bbc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  405bc0:	mov	x0, x21
  405bc4:	add	x1, x1, #0x720
  405bc8:	bl	404d30 <strcasecmp@plt>
  405bcc:	cbz	w0, 405cd0 <get_time_rtt@@Base+0x1a8>
  405bd0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405bd4:	mov	x0, x21
  405bd8:	add	x1, x1, #0xd68
  405bdc:	bl	404d30 <strcasecmp@plt>
  405be0:	cbz	w0, 405cd0 <get_time_rtt@@Base+0x1a8>
  405be4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405be8:	mov	x0, x21
  405bec:	add	x1, x1, #0xd70
  405bf0:	bl	404d30 <strcasecmp@plt>
  405bf4:	cbz	w0, 405cd0 <get_time_rtt@@Base+0x1a8>
  405bf8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405bfc:	mov	x0, x21
  405c00:	add	x1, x1, #0xd78
  405c04:	bl	404d30 <strcasecmp@plt>
  405c08:	cbz	w0, 405c38 <get_time_rtt@@Base+0x110>
  405c0c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405c10:	mov	x0, x21
  405c14:	add	x1, x1, #0xd80
  405c18:	bl	404d30 <strcasecmp@plt>
  405c1c:	cbz	w0, 405c38 <get_time_rtt@@Base+0x110>
  405c20:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  405c24:	mov	x0, x21
  405c28:	add	x1, x1, #0xd88
  405c2c:	bl	404d30 <strcasecmp@plt>
  405c30:	cbnz	w0, 405cf8 <get_time_rtt@@Base+0x1d0>
  405c34:	nop
  405c38:	fcvtzu	w1, d8
  405c3c:	ucvtf	d0, w1
  405c40:	fcmpe	d0, d8
  405c44:	b.mi	405cf0 <get_time_rtt@@Base+0x1c8>  // b.first
  405c48:	mov	w0, #0x0                   	// #0
  405c4c:	str	w1, [x23]
  405c50:	ldp	x19, x20, [sp, #16]
  405c54:	ldp	x21, x22, [sp, #32]
  405c58:	ldr	x23, [sp, #48]
  405c5c:	ldr	d8, [sp, #56]
  405c60:	ldp	x29, x30, [sp], #80
  405c64:	ret
  405c68:	add	x1, sp, #0x48
  405c6c:	mov	x0, x20
  405c70:	mov	w2, #0x0                   	// #0
  405c74:	bl	404b50 <strtoul@plt>
  405c78:	ldr	x21, [sp, #72]
  405c7c:	mov	x19, x0
  405c80:	cmp	x21, #0x0
  405c84:	ccmp	x21, x20, #0x4, ne  // ne = any
  405c88:	b.eq	405cf8 <get_time_rtt@@Base+0x1d0>  // b.none
  405c8c:	cmn	x0, #0x1
  405c90:	b.ne	405ca4 <get_time_rtt@@Base+0x17c>  // b.any
  405c94:	bl	404fd0 <__errno_location@plt>
  405c98:	ldr	w0, [x0]
  405c9c:	cmp	w0, #0x22
  405ca0:	b.eq	405cf8 <get_time_rtt@@Base+0x1d0>  // b.none
  405ca4:	ucvtf	d8, x19
  405ca8:	mov	w0, #0x1                   	// #1
  405cac:	str	w0, [x22]
  405cb0:	ldrb	w0, [x21]
  405cb4:	cbz	w0, 405c38 <get_time_rtt@@Base+0x110>
  405cb8:	str	wzr, [x22]
  405cbc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  405cc0:	mov	x0, x21
  405cc4:	add	x1, x1, #0x720
  405cc8:	bl	404d30 <strcasecmp@plt>
  405ccc:	cbnz	w0, 405bd0 <get_time_rtt@@Base+0xa8>
  405cd0:	mov	x0, #0x400000000000        	// #70368744177664
  405cd4:	movk	x0, #0x408f, lsl #48
  405cd8:	fmov	d0, x0
  405cdc:	fmul	d8, d8, d0
  405ce0:	fcvtzu	w1, d8
  405ce4:	ucvtf	d0, w1
  405ce8:	fcmpe	d0, d8
  405cec:	b.pl	405c48 <get_time_rtt@@Base+0x120>  // b.nfrst
  405cf0:	add	w1, w1, #0x1
  405cf4:	b	405c48 <get_time_rtt@@Base+0x120>
  405cf8:	mov	w0, #0xffffffff            	// #-1
  405cfc:	b	405c50 <get_time_rtt@@Base+0x128>

0000000000405d00 <get_u64@@Base>:
  405d00:	cbz	x1, 405d88 <get_u64@@Base+0x88>
  405d04:	stp	x29, x30, [sp, #-64]!
  405d08:	mov	x29, sp
  405d0c:	stp	x19, x20, [sp, #16]
  405d10:	mov	x19, x1
  405d14:	str	x21, [sp, #32]
  405d18:	mov	x21, x0
  405d1c:	ldrb	w0, [x1]
  405d20:	cbz	w0, 405d80 <get_u64@@Base+0x80>
  405d24:	add	x1, sp, #0x38
  405d28:	mov	x0, x19
  405d2c:	bl	404ea0 <strtoull@plt>
  405d30:	mov	x20, x0
  405d34:	ldr	x1, [sp, #56]
  405d38:	cmp	x1, #0x0
  405d3c:	ccmp	x1, x19, #0x4, ne  // ne = any
  405d40:	b.eq	405d80 <get_u64@@Base+0x80>  // b.none
  405d44:	ldrb	w0, [x1]
  405d48:	cbnz	w0, 405d80 <get_u64@@Base+0x80>
  405d4c:	cmn	x20, #0x1
  405d50:	b.eq	405d6c <get_u64@@Base+0x6c>  // b.none
  405d54:	mov	w0, #0x0                   	// #0
  405d58:	str	x20, [x21]
  405d5c:	ldp	x19, x20, [sp, #16]
  405d60:	ldr	x21, [sp, #32]
  405d64:	ldp	x29, x30, [sp], #64
  405d68:	ret
  405d6c:	bl	404fd0 <__errno_location@plt>
  405d70:	ldr	w0, [x0]
  405d74:	cmp	w0, #0x22
  405d78:	b.ne	405d54 <get_u64@@Base+0x54>  // b.any
  405d7c:	nop
  405d80:	mov	w0, #0xffffffff            	// #-1
  405d84:	b	405d5c <get_u64@@Base+0x5c>
  405d88:	mov	w0, #0xffffffff            	// #-1
  405d8c:	ret

0000000000405d90 <get_u32@@Base>:
  405d90:	b	405aa0 <get_unsigned@@Base>
  405d94:	nop

0000000000405d98 <get_u16@@Base>:
  405d98:	cbz	x1, 405e18 <get_u16@@Base+0x80>
  405d9c:	stp	x29, x30, [sp, #-48]!
  405da0:	mov	x29, sp
  405da4:	stp	x19, x20, [sp, #16]
  405da8:	mov	x20, x0
  405dac:	mov	x19, x1
  405db0:	ldrb	w0, [x1]
  405db4:	cbz	w0, 405e08 <get_u16@@Base+0x70>
  405db8:	add	x1, sp, #0x28
  405dbc:	mov	x0, x19
  405dc0:	bl	404b50 <strtoul@plt>
  405dc4:	mov	x1, x0
  405dc8:	ldr	x2, [sp, #40]
  405dcc:	mov	x0, #0xffff                	// #65535
  405dd0:	cmp	x1, x0
  405dd4:	cset	w0, hi  // hi = pmore
  405dd8:	cmp	x2, #0x0
  405ddc:	ccmp	x2, x19, #0x4, ne  // ne = any
  405de0:	b.eq	405e08 <get_u16@@Base+0x70>  // b.none
  405de4:	ldrb	w2, [x2]
  405de8:	cmp	w2, #0x0
  405dec:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405df0:	b.ne	405e08 <get_u16@@Base+0x70>  // b.any
  405df4:	strh	w1, [x20]
  405df8:	mov	w0, #0x0                   	// #0
  405dfc:	ldp	x19, x20, [sp, #16]
  405e00:	ldp	x29, x30, [sp], #48
  405e04:	ret
  405e08:	mov	w0, #0xffffffff            	// #-1
  405e0c:	ldp	x19, x20, [sp, #16]
  405e10:	ldp	x29, x30, [sp], #48
  405e14:	ret
  405e18:	mov	w0, #0xffffffff            	// #-1
  405e1c:	ret

0000000000405e20 <get_u8@@Base>:
  405e20:	cbz	x1, 405e9c <get_u8@@Base+0x7c>
  405e24:	stp	x29, x30, [sp, #-48]!
  405e28:	mov	x29, sp
  405e2c:	stp	x19, x20, [sp, #16]
  405e30:	mov	x20, x0
  405e34:	mov	x19, x1
  405e38:	ldrb	w0, [x1]
  405e3c:	cbz	w0, 405e8c <get_u8@@Base+0x6c>
  405e40:	add	x1, sp, #0x28
  405e44:	mov	x0, x19
  405e48:	bl	404b50 <strtoul@plt>
  405e4c:	cmp	x0, #0xff
  405e50:	ldr	x2, [sp, #40]
  405e54:	mov	x1, x0
  405e58:	cset	w0, hi  // hi = pmore
  405e5c:	cmp	x2, #0x0
  405e60:	ccmp	x2, x19, #0x4, ne  // ne = any
  405e64:	b.eq	405e8c <get_u8@@Base+0x6c>  // b.none
  405e68:	ldrb	w2, [x2]
  405e6c:	cmp	w2, #0x0
  405e70:	ccmp	w0, #0x0, #0x0, eq  // eq = none
  405e74:	b.ne	405e8c <get_u8@@Base+0x6c>  // b.any
  405e78:	strb	w1, [x20]
  405e7c:	mov	w0, #0x0                   	// #0
  405e80:	ldp	x19, x20, [sp, #16]
  405e84:	ldp	x29, x30, [sp], #48
  405e88:	ret
  405e8c:	mov	w0, #0xffffffff            	// #-1
  405e90:	ldp	x19, x20, [sp, #16]
  405e94:	ldp	x29, x30, [sp], #48
  405e98:	ret
  405e9c:	mov	w0, #0xffffffff            	// #-1
  405ea0:	ret
  405ea4:	nop

0000000000405ea8 <get_s64@@Base>:
  405ea8:	stp	x29, x30, [sp, #-64]!
  405eac:	mov	x29, sp
  405eb0:	stp	x19, x20, [sp, #16]
  405eb4:	mov	x19, x1
  405eb8:	stp	x21, x22, [sp, #32]
  405ebc:	mov	x22, x0
  405ec0:	mov	w21, w2
  405ec4:	bl	404fd0 <__errno_location@plt>
  405ec8:	str	wzr, [x0]
  405ecc:	cbz	x19, 405f40 <get_s64@@Base+0x98>
  405ed0:	mov	x20, x0
  405ed4:	ldrb	w0, [x19]
  405ed8:	cbz	w0, 405f40 <get_s64@@Base+0x98>
  405edc:	mov	w2, w21
  405ee0:	add	x1, sp, #0x38
  405ee4:	mov	x0, x19
  405ee8:	bl	404b90 <strtoll@plt>
  405eec:	ldr	x2, [sp, #56]
  405ef0:	mov	x1, x0
  405ef4:	cmp	x2, #0x0
  405ef8:	ccmp	x2, x19, #0x4, ne  // ne = any
  405efc:	b.eq	405f40 <get_s64@@Base+0x98>  // b.none
  405f00:	ldrb	w0, [x2]
  405f04:	cbnz	w0, 405f40 <get_s64@@Base+0x98>
  405f08:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405f0c:	add	x0, x1, x0
  405f10:	cmn	x0, #0x3
  405f14:	b.hi	405f30 <get_s64@@Base+0x88>  // b.pmore
  405f18:	mov	w0, #0x0                   	// #0
  405f1c:	str	x1, [x22]
  405f20:	ldp	x19, x20, [sp, #16]
  405f24:	ldp	x21, x22, [sp, #32]
  405f28:	ldp	x29, x30, [sp], #64
  405f2c:	ret
  405f30:	ldr	w0, [x20]
  405f34:	cmp	w0, #0x22
  405f38:	b.ne	405f18 <get_s64@@Base+0x70>  // b.any
  405f3c:	nop
  405f40:	mov	w0, #0xffffffff            	// #-1
  405f44:	b	405f20 <get_s64@@Base+0x78>

0000000000405f48 <get_s32@@Base>:
  405f48:	stp	x29, x30, [sp, #-64]!
  405f4c:	mov	x29, sp
  405f50:	stp	x19, x20, [sp, #16]
  405f54:	mov	x19, x1
  405f58:	mov	w20, w2
  405f5c:	str	x21, [sp, #32]
  405f60:	mov	x21, x0
  405f64:	bl	404fd0 <__errno_location@plt>
  405f68:	str	wzr, [x0]
  405f6c:	cbz	x19, 405fe4 <get_s32@@Base+0x9c>
  405f70:	ldrb	w0, [x19]
  405f74:	cbz	w0, 405fe4 <get_s32@@Base+0x9c>
  405f78:	mov	w2, w20
  405f7c:	add	x1, sp, #0x38
  405f80:	mov	x0, x19
  405f84:	bl	404e10 <strtol@plt>
  405f88:	ldr	x2, [sp, #56]
  405f8c:	mov	x1, x0
  405f90:	cmp	x2, #0x0
  405f94:	ccmp	x2, x19, #0x4, ne  // ne = any
  405f98:	b.eq	405fe4 <get_s32@@Base+0x9c>  // b.none
  405f9c:	ldrb	w0, [x2]
  405fa0:	cbnz	w0, 405fe4 <get_s32@@Base+0x9c>
  405fa4:	mov	x0, #0x7fffffffffffffff    	// #9223372036854775807
  405fa8:	add	x0, x1, x0
  405fac:	cmn	x0, #0x3
  405fb0:	mov	w0, #0xffffffff            	// #-1
  405fb4:	b.hi	405fd4 <get_s32@@Base+0x8c>  // b.pmore
  405fb8:	mov	x0, #0x80000000            	// #2147483648
  405fbc:	add	x0, x1, x0
  405fc0:	mov	x2, #0xffffffff            	// #4294967295
  405fc4:	cmp	x0, x2
  405fc8:	b.hi	405fe4 <get_s32@@Base+0x9c>  // b.pmore
  405fcc:	mov	w0, #0x0                   	// #0
  405fd0:	str	w1, [x21]
  405fd4:	ldp	x19, x20, [sp, #16]
  405fd8:	ldr	x21, [sp, #32]
  405fdc:	ldp	x29, x30, [sp], #64
  405fe0:	ret
  405fe4:	mov	w0, #0xffffffff            	// #-1
  405fe8:	b	405fd4 <get_s32@@Base+0x8c>
  405fec:	nop

0000000000405ff0 <get_be64@@Base>:
  405ff0:	stp	x29, x30, [sp, #-48]!
  405ff4:	mov	x29, sp
  405ff8:	str	x19, [sp, #16]
  405ffc:	mov	x19, x0
  406000:	add	x0, sp, #0x28
  406004:	bl	405d00 <get_u64@@Base>
  406008:	cbnz	w0, 406024 <get_be64@@Base+0x34>
  40600c:	ldr	x1, [sp, #40]
  406010:	rev	w2, w1
  406014:	lsr	x1, x1, #32
  406018:	rev	w1, w1
  40601c:	orr	x1, x1, x2, lsl #32
  406020:	str	x1, [x19]
  406024:	ldr	x19, [sp, #16]
  406028:	ldp	x29, x30, [sp], #48
  40602c:	ret

0000000000406030 <get_be32@@Base>:
  406030:	stp	x29, x30, [sp, #-48]!
  406034:	mov	x29, sp
  406038:	str	x19, [sp, #16]
  40603c:	mov	x19, x0
  406040:	add	x0, sp, #0x2c
  406044:	bl	405d90 <get_u32@@Base>
  406048:	cbnz	w0, 406058 <get_be32@@Base+0x28>
  40604c:	ldr	w1, [sp, #44]
  406050:	rev	w1, w1
  406054:	str	w1, [x19]
  406058:	ldr	x19, [sp, #16]
  40605c:	ldp	x29, x30, [sp], #48
  406060:	ret
  406064:	nop

0000000000406068 <get_be16@@Base>:
  406068:	stp	x29, x30, [sp, #-48]!
  40606c:	mov	x29, sp
  406070:	str	x19, [sp, #16]
  406074:	mov	x19, x0
  406078:	add	x0, sp, #0x2e
  40607c:	bl	405d98 <get_u16@@Base>
  406080:	cbnz	w0, 406090 <get_be16@@Base+0x28>
  406084:	ldrh	w1, [sp, #46]
  406088:	rev16	w1, w1
  40608c:	strh	w1, [x19]
  406090:	ldr	x19, [sp, #16]
  406094:	ldp	x29, x30, [sp], #48
  406098:	ret
  40609c:	nop

00000000004060a0 <get_addr64@@Base>:
  4060a0:	stp	x29, x30, [sp, #-80]!
  4060a4:	mov	x29, sp
  4060a8:	stp	x19, x20, [sp, #16]
  4060ac:	mov	x19, x1
  4060b0:	mov	w20, #0x0                   	// #0
  4060b4:	stp	x21, x22, [sp, #32]
  4060b8:	mov	x22, x0
  4060bc:	add	x21, sp, #0x40
  4060c0:	stp	x23, x24, [sp, #48]
  4060c4:	add	x24, sp, #0x48
  4060c8:	mov	x23, #0xffff                	// #65535
  4060cc:	mov	x1, x24
  4060d0:	mov	x0, x19
  4060d4:	mov	w2, #0x10                  	// #16
  4060d8:	bl	404b50 <strtoul@plt>
  4060dc:	rev16	w4, w0
  4060e0:	cmp	x0, x23
  4060e4:	b.hi	406118 <get_addr64@@Base+0x78>  // b.pmore
  4060e8:	ldr	x2, [sp, #72]
  4060ec:	cmp	x2, x19
  4060f0:	b.eq	406118 <get_addr64@@Base+0x78>  // b.none
  4060f4:	ldrb	w3, [x2]
  4060f8:	add	x19, x2, #0x1
  4060fc:	strh	w4, [x21]
  406100:	add	x21, x21, #0x2
  406104:	cmp	w3, #0x3a
  406108:	ccmp	w20, #0x3, #0x4, eq  // eq = none
  40610c:	add	w20, w20, #0x1
  406110:	cbz	w3, 406130 <get_addr64@@Base+0x90>
  406114:	b.ne	4060cc <get_addr64@@Base+0x2c>  // b.any
  406118:	mov	w0, #0xffffffff            	// #-1
  40611c:	ldp	x19, x20, [sp, #16]
  406120:	ldp	x21, x22, [sp, #32]
  406124:	ldp	x23, x24, [sp, #48]
  406128:	ldp	x29, x30, [sp], #80
  40612c:	ret
  406130:	ldr	x1, [sp, #64]
  406134:	mov	w0, #0x1                   	// #1
  406138:	str	x1, [x22]
  40613c:	b	40611c <get_addr64@@Base+0x7c>

0000000000406140 <af_bit_len@@Base>:
  406140:	sub	w0, w0, #0x2
  406144:	cmp	w0, #0x1a
  406148:	b.hi	40615c <af_bit_len@@Base+0x1c>  // b.pmore
  40614c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  406150:	add	x1, x1, #0x1f8
  406154:	ldr	w0, [x1, w0, uxtw #2]
  406158:	ret
  40615c:	mov	w0, #0x0                   	// #0
  406160:	ret
  406164:	nop

0000000000406168 <get_addr_1@@Base>:
  406168:	stp	x29, x30, [sp, #-80]!
  40616c:	mov	x29, sp
  406170:	stp	x19, x20, [sp, #16]
  406174:	mov	w20, w2
  406178:	mov	x2, #0x108                 	// #264
  40617c:	mov	x19, x0
  406180:	stp	x21, x22, [sp, #32]
  406184:	mov	x21, x1
  406188:	mov	w1, #0x0                   	// #0
  40618c:	bl	404cf0 <memset@plt>
  406190:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406194:	mov	x0, x21
  406198:	add	x1, x1, #0xd90
  40619c:	bl	404df0 <strcmp@plt>
  4061a0:	cbnz	w0, 406200 <get_addr_1@@Base+0x98>
  4061a4:	and	w0, w20, #0xffffffef
  4061a8:	cmp	w0, #0xc
  4061ac:	b.eq	406294 <get_addr_1@@Base+0x12c>  // b.none
  4061b0:	strh	w20, [x19, #6]
  4061b4:	and	w0, w20, #0xffff
  4061b8:	bl	406140 <af_bit_len@@Base>
  4061bc:	add	w1, w0, #0x7
  4061c0:	cmp	w0, #0x0
  4061c4:	ldrh	w2, [x19]
  4061c8:	csel	w0, w1, w0, lt  // lt = tstop
  4061cc:	orr	w1, w2, #0x1
  4061d0:	mov	w2, #0xfffffffe            	// #-2
  4061d4:	asr	w0, w0, #3
  4061d8:	strh	w1, [x19]
  4061dc:	strh	w0, [x19, #2]
  4061e0:	strh	w2, [x19, #4]
  4061e4:	mov	x0, x19
  4061e8:	bl	4056a0 <_start@@Base+0x208>
  4061ec:	mov	w0, #0x0                   	// #0
  4061f0:	ldp	x19, x20, [sp, #16]
  4061f4:	ldp	x21, x22, [sp, #32]
  4061f8:	ldp	x29, x30, [sp], #80
  4061fc:	ret
  406200:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406204:	mov	x0, x21
  406208:	add	x1, x1, #0xc00
  40620c:	bl	404df0 <strcmp@plt>
  406210:	cbnz	w0, 406230 <get_addr_1@@Base+0xc8>
  406214:	and	w0, w20, #0xffffffef
  406218:	cmp	w0, #0xc
  40621c:	b.eq	406294 <get_addr_1@@Base+0x12c>  // b.none
  406220:	mov	w0, #0xfffffffe            	// #-2
  406224:	strh	w0, [x19, #4]
  406228:	strh	w20, [x19, #6]
  40622c:	b	4061e4 <get_addr_1@@Base+0x7c>
  406230:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406234:	mov	x0, x21
  406238:	add	x1, x1, #0xd98
  40623c:	bl	404df0 <strcmp@plt>
  406240:	cbz	w0, 406214 <get_addr_1@@Base+0xac>
  406244:	cmp	w20, #0x11
  406248:	b.eq	40631c <get_addr_1@@Base+0x1b4>  // b.none
  40624c:	mov	x0, x21
  406250:	mov	w1, #0x3a                  	// #58
  406254:	bl	404e90 <strchr@plt>
  406258:	cbz	x0, 40629c <get_addr_1@@Base+0x134>
  40625c:	mov	w0, #0xa                   	// #10
  406260:	strh	w0, [x19, #6]
  406264:	cmp	w20, #0x0
  406268:	ccmp	w20, #0xa, #0x4, ne  // ne = any
  40626c:	b.ne	406294 <get_addr_1@@Base+0x12c>  // b.any
  406270:	mov	x1, x21
  406274:	add	x2, x19, #0x8
  406278:	mov	w0, #0xa                   	// #10
  40627c:	bl	404e60 <inet_pton@plt>
  406280:	cmp	w0, #0x0
  406284:	b.le	406294 <get_addr_1@@Base+0x12c>
  406288:	mov	w0, #0xffff0010            	// #-65520
  40628c:	stur	w0, [x19, #2]
  406290:	b	4061e4 <get_addr_1@@Base+0x7c>
  406294:	mov	w0, #0xffffffff            	// #-1
  406298:	b	4061f0 <get_addr_1@@Base+0x88>
  40629c:	cmp	w20, #0x1c
  4062a0:	b.eq	406358 <get_addr_1@@Base+0x1f0>  // b.none
  4062a4:	mov	w0, #0x2                   	// #2
  4062a8:	strh	w0, [x19, #6]
  4062ac:	tst	w20, #0xfffffffd
  4062b0:	b.ne	406294 <get_addr_1@@Base+0x12c>  // b.any
  4062b4:	add	x22, x19, #0x8
  4062b8:	str	x23, [sp, #48]
  4062bc:	add	x23, sp, #0x48
  4062c0:	mov	x20, #0x0                   	// #0
  4062c4:	mov	x1, x23
  4062c8:	mov	x0, x21
  4062cc:	mov	w2, #0x0                   	// #0
  4062d0:	bl	404b50 <strtoul@plt>
  4062d4:	cmp	x0, #0xff
  4062d8:	b.hi	406310 <get_addr_1@@Base+0x1a8>  // b.pmore
  4062dc:	ldr	x2, [sp, #72]
  4062e0:	cmp	x2, x21
  4062e4:	b.eq	406310 <get_addr_1@@Base+0x1a8>  // b.none
  4062e8:	strb	w0, [x22, x20]
  4062ec:	add	x21, x2, #0x1
  4062f0:	ldrb	w2, [x2]
  4062f4:	cmp	w2, #0x2e
  4062f8:	cset	w0, ne  // ne = any
  4062fc:	cmp	w20, #0x3
  406300:	cbz	w2, 406348 <get_addr_1@@Base+0x1e0>
  406304:	csinc	w0, w0, wzr, ne  // ne = any
  406308:	add	x20, x20, #0x1
  40630c:	cbz	w0, 4062c4 <get_addr_1@@Base+0x15c>
  406310:	mov	w0, #0xffffffff            	// #-1
  406314:	ldr	x23, [sp, #48]
  406318:	b	4061f0 <get_addr_1@@Base+0x88>
  40631c:	mov	x2, x21
  406320:	add	x0, x19, #0x8
  406324:	mov	w1, #0x100                 	// #256
  406328:	bl	408d80 <ll_addr_a2n@@Base>
  40632c:	tbnz	w0, #31, 406294 <get_addr_1@@Base+0x12c>
  406330:	and	w0, w0, #0xffff
  406334:	strh	w0, [x19, #2]
  406338:	strh	w20, [x19, #6]
  40633c:	ubfiz	w0, w0, #3, #13
  406340:	strh	w0, [x19, #4]
  406344:	b	4061e4 <get_addr_1@@Base+0x7c>
  406348:	mov	w0, #0xffff0004            	// #-65532
  40634c:	stur	w0, [x19, #2]
  406350:	ldr	x23, [sp, #48]
  406354:	b	4061e4 <get_addr_1@@Base+0x7c>
  406358:	strh	w20, [x19, #6]
  40635c:	mov	x1, x21
  406360:	mov	w0, w20
  406364:	add	x2, x19, #0x8
  406368:	mov	x3, #0x100                 	// #256
  40636c:	bl	409ca0 <mpls_pton@@Base>
  406370:	cmp	w0, #0x0
  406374:	b.le	406294 <get_addr_1@@Base+0x12c>
  406378:	mov	w1, #0x4                   	// #4
  40637c:	add	x2, x19, #0x4
  406380:	movk	w1, #0x14, lsl #16
  406384:	mov	x0, #0x1                   	// #1
  406388:	stur	w1, [x19, #2]
  40638c:	b	40639c <get_addr_1@@Base+0x234>
  406390:	add	x0, x0, #0x1
  406394:	cmp	x0, #0x41
  406398:	b.eq	4061e4 <get_addr_1@@Base+0x7c>  // b.none
  40639c:	ldr	w1, [x2, x0, lsl #2]
  4063a0:	rev	w1, w1
  4063a4:	tbz	w1, #8, 406390 <get_addr_1@@Base+0x228>
  4063a8:	ubfiz	w0, w0, #2, #14
  4063ac:	strh	w0, [x19, #2]
  4063b0:	b	4061e4 <get_addr_1@@Base+0x7c>
  4063b4:	nop
  4063b8:	stp	x29, x30, [sp, #-320]!
  4063bc:	mov	w2, #0x0                   	// #0
  4063c0:	mov	x29, sp
  4063c4:	stp	x19, x20, [sp, #16]
  4063c8:	mov	x20, x1
  4063cc:	str	x21, [sp, #32]
  4063d0:	mov	x21, x0
  4063d4:	bl	405aa0 <get_unsigned@@Base>
  4063d8:	mov	w19, w0
  4063dc:	cbnz	w0, 4063f4 <get_addr_1@@Base+0x28c>
  4063e0:	mov	w0, w19
  4063e4:	ldp	x19, x20, [sp, #16]
  4063e8:	ldr	x21, [sp, #32]
  4063ec:	ldp	x29, x30, [sp], #320
  4063f0:	ret
  4063f4:	mov	x1, x20
  4063f8:	add	x0, sp, #0x38
  4063fc:	mov	w2, #0x2                   	// #2
  406400:	bl	406168 <get_addr_1@@Base>
  406404:	mov	w19, w0
  406408:	cbnz	w0, 40643c <get_addr_1@@Base+0x2d4>
  40640c:	ldrh	w0, [sp, #62]
  406410:	cmp	w0, #0x2
  406414:	b.ne	40643c <get_addr_1@@Base+0x2d4>  // b.any
  406418:	ldr	w0, [sp, #64]
  40641c:	bl	405a68 <mask2bits@@Base>
  406420:	tbnz	w0, #31, 40643c <get_addr_1@@Base+0x2d4>
  406424:	str	w0, [x21]
  406428:	mov	w0, w19
  40642c:	ldp	x19, x20, [sp, #16]
  406430:	ldr	x21, [sp, #32]
  406434:	ldp	x29, x30, [sp], #320
  406438:	ret
  40643c:	mov	w19, #0xffffffff            	// #-1
  406440:	b	4063e0 <get_addr_1@@Base+0x278>
  406444:	nop

0000000000406448 <get_prefix_1@@Base>:
  406448:	stp	x29, x30, [sp, #-64]!
  40644c:	mov	x29, sp
  406450:	stp	x19, x20, [sp, #16]
  406454:	mov	x19, x0
  406458:	mov	x0, x1
  40645c:	stp	x21, x22, [sp, #32]
  406460:	mov	x21, x1
  406464:	mov	w22, w2
  406468:	mov	w1, #0x2f                  	// #47
  40646c:	bl	404e90 <strchr@plt>
  406470:	cbz	x0, 406508 <get_prefix_1@@Base+0xc0>
  406474:	mov	x20, x0
  406478:	strb	wzr, [x0]
  40647c:	mov	x1, x21
  406480:	mov	w2, w22
  406484:	mov	x0, x19
  406488:	bl	406168 <get_addr_1@@Base>
  40648c:	mov	w1, #0x2f                  	// #47
  406490:	strb	w1, [x20]
  406494:	cbz	w0, 4064a8 <get_prefix_1@@Base+0x60>
  406498:	ldp	x19, x20, [sp, #16]
  40649c:	ldp	x21, x22, [sp, #32]
  4064a0:	ldp	x29, x30, [sp], #64
  4064a4:	ret
  4064a8:	ldrh	w0, [x19, #6]
  4064ac:	bl	406140 <af_bit_len@@Base>
  4064b0:	mov	w21, w0
  4064b4:	ldrsh	w1, [x19, #4]
  4064b8:	cmn	w1, #0x2
  4064bc:	b.eq	406548 <get_prefix_1@@Base+0x100>  // b.none
  4064c0:	add	x1, x20, #0x1
  4064c4:	add	x0, sp, #0x3c
  4064c8:	bl	4063b8 <get_addr_1@@Base+0x250>
  4064cc:	cbnz	w0, 406548 <get_prefix_1@@Base+0x100>
  4064d0:	ldr	w1, [sp, #60]
  4064d4:	cmp	w1, w21
  4064d8:	b.hi	406548 <get_prefix_1@@Base+0x100>  // b.pmore
  4064dc:	sxth	w1, w1
  4064e0:	mov	w2, #0x1                   	// #1
  4064e4:	ldrh	w3, [x19]
  4064e8:	mov	w0, #0x0                   	// #0
  4064ec:	strh	w1, [x19, #4]
  4064f0:	orr	w1, w2, w3
  4064f4:	strh	w1, [x19]
  4064f8:	ldp	x19, x20, [sp, #16]
  4064fc:	ldp	x21, x22, [sp, #32]
  406500:	ldp	x29, x30, [sp], #64
  406504:	ret
  406508:	mov	w2, w22
  40650c:	mov	x1, x21
  406510:	mov	x0, x19
  406514:	bl	406168 <get_addr_1@@Base>
  406518:	cbnz	w0, 406498 <get_prefix_1@@Base+0x50>
  40651c:	ldrh	w0, [x19, #6]
  406520:	bl	406140 <af_bit_len@@Base>
  406524:	ldrsh	w1, [x19, #4]
  406528:	cmn	w1, #0x2
  40652c:	b.eq	40653c <get_prefix_1@@Base+0xf4>  // b.none
  406530:	sxth	w1, w0
  406534:	mov	w2, #0x0                   	// #0
  406538:	b	4064e4 <get_prefix_1@@Base+0x9c>
  40653c:	mov	w1, #0x0                   	// #0
  406540:	mov	w2, #0x0                   	// #0
  406544:	b	4064e4 <get_prefix_1@@Base+0x9c>
  406548:	mov	w0, #0xffffffff            	// #-1
  40654c:	b	406498 <get_prefix_1@@Base+0x50>

0000000000406550 <get_addr_rta@@Base>:
  406550:	ldrh	w3, [x1]
  406554:	sub	w3, w3, #0x4
  406558:	cmp	w3, #0xa
  40655c:	b.eq	406600 <get_addr_rta@@Base+0xb0>  // b.none
  406560:	b.hi	4065bc <get_addr_rta@@Base+0x6c>  // b.pmore
  406564:	cmp	w3, #0x2
  406568:	b.eq	4065e8 <get_addr_rta@@Base+0x98>  // b.none
  40656c:	cmp	w3, #0x4
  406570:	b.ne	4065e0 <get_addr_rta@@Base+0x90>  // b.any
  406574:	mov	w4, #0x2                   	// #2
  406578:	strh	w3, [x0, #2]
  40657c:	strh	w4, [x0, #6]
  406580:	ldr	w1, [x1, #4]
  406584:	str	w1, [x0, #8]
  406588:	cbz	w2, 406598 <get_addr_rta@@Base+0x48>
  40658c:	ldrh	w1, [x0, #6]
  406590:	cmp	w1, w2
  406594:	b.ne	406620 <get_addr_rta@@Base+0xd0>  // b.any
  406598:	stp	x29, x30, [sp, #-16]!
  40659c:	mov	w1, #0xffffffff            	// #-1
  4065a0:	mov	x29, sp
  4065a4:	strh	wzr, [x0]
  4065a8:	strh	w1, [x0, #4]
  4065ac:	bl	4056a0 <_start@@Base+0x208>
  4065b0:	mov	w0, #0x0                   	// #0
  4065b4:	ldp	x29, x30, [sp], #16
  4065b8:	ret
  4065bc:	cmp	w3, #0x10
  4065c0:	b.ne	4065e0 <get_addr_rta@@Base+0x90>  // b.any
  4065c4:	add	x1, x1, #0x4
  4065c8:	mov	w4, #0xa                   	// #10
  4065cc:	strh	w3, [x0, #2]
  4065d0:	strh	w4, [x0, #6]
  4065d4:	ldp	x4, x5, [x1]
  4065d8:	stp	x4, x5, [x0, #8]
  4065dc:	b	406588 <get_addr_rta@@Base+0x38>
  4065e0:	mov	w0, #0xffffffff            	// #-1
  4065e4:	ret
  4065e8:	mov	w4, #0xc                   	// #12
  4065ec:	strh	w3, [x0, #2]
  4065f0:	strh	w4, [x0, #6]
  4065f4:	ldrh	w1, [x1, #4]
  4065f8:	strh	w1, [x0, #8]
  4065fc:	b	406588 <get_addr_rta@@Base+0x38>
  406600:	mov	w4, #0x4                   	// #4
  406604:	strh	w3, [x0, #2]
  406608:	strh	w4, [x0, #6]
  40660c:	ldur	x3, [x1, #4]
  406610:	str	x3, [x0, #8]
  406614:	ldrh	w1, [x1, #12]
  406618:	strh	w1, [x0, #16]
  40661c:	b	406588 <get_addr_rta@@Base+0x38>
  406620:	mov	w0, #0xfffffffe            	// #-2
  406624:	ret

0000000000406628 <get_addr32@@Base>:
  406628:	stp	x29, x30, [sp, #-304]!
  40662c:	mov	w2, #0x2                   	// #2
  406630:	mov	x29, sp
  406634:	str	x19, [sp, #16]
  406638:	mov	x19, x0
  40663c:	mov	x1, x19
  406640:	add	x0, sp, #0x28
  406644:	bl	406168 <get_addr_1@@Base>
  406648:	cbnz	w0, 40665c <get_addr32@@Base+0x34>
  40664c:	ldr	w0, [sp, #48]
  406650:	ldr	x19, [sp, #16]
  406654:	ldp	x29, x30, [sp], #304
  406658:	ret
  40665c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  406660:	mov	x2, x19
  406664:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406668:	add	x1, x1, #0xda0
  40666c:	ldr	x0, [x0, #3992]
  406670:	ldr	x0, [x0]
  406674:	bl	405020 <fprintf@plt>
  406678:	mov	w0, #0x1                   	// #1
  40667c:	bl	404b70 <exit@plt>

0000000000406680 <incomplete_command@@Base>:
  406680:	stp	x29, x30, [sp, #-16]!
  406684:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  406688:	mov	x2, #0x30                  	// #48
  40668c:	mov	x29, sp
  406690:	ldr	x3, [x3, #3992]
  406694:	mov	x1, #0x1                   	// #1
  406698:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  40669c:	add	x0, x0, #0xdd8
  4066a0:	ldr	x3, [x3]
  4066a4:	bl	404eb0 <fwrite@plt>
  4066a8:	mov	w0, #0xffffffff            	// #-1
  4066ac:	bl	404b70 <exit@plt>

00000000004066b0 <missarg@@Base>:
  4066b0:	stp	x29, x30, [sp, #-16]!
  4066b4:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  4066b8:	mov	x2, x0
  4066bc:	mov	x29, sp
  4066c0:	ldr	x3, [x3, #3992]
  4066c4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4066c8:	add	x1, x1, #0xe10
  4066cc:	ldr	x0, [x3]
  4066d0:	bl	405020 <fprintf@plt>
  4066d4:	mov	w0, #0xffffffff            	// #-1
  4066d8:	bl	404b70 <exit@plt>
  4066dc:	nop

00000000004066e0 <invarg@@Base>:
  4066e0:	stp	x29, x30, [sp, #-16]!
  4066e4:	adrp	x4, 420000 <_IO_stdin_used@@Base+0x135b8>
  4066e8:	mov	x3, x0
  4066ec:	mov	x29, sp
  4066f0:	ldr	x4, [x4, #3992]
  4066f4:	mov	x2, x1
  4066f8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4066fc:	add	x1, x1, #0xe38
  406700:	ldr	x0, [x4]
  406704:	bl	405020 <fprintf@plt>
  406708:	mov	w0, #0xffffffff            	// #-1
  40670c:	bl	404b70 <exit@plt>

0000000000406710 <duparg@@Base>:
  406710:	stp	x29, x30, [sp, #-16]!
  406714:	adrp	x4, 420000 <_IO_stdin_used@@Base+0x135b8>
  406718:	mov	x2, x0
  40671c:	mov	x29, sp
  406720:	ldr	x4, [x4, #3992]
  406724:	mov	x3, x1
  406728:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40672c:	add	x1, x1, #0xe60
  406730:	ldr	x0, [x4]
  406734:	bl	405020 <fprintf@plt>
  406738:	mov	w0, #0xffffffff            	// #-1
  40673c:	bl	404b70 <exit@plt>

0000000000406740 <duparg2@@Base>:
  406740:	stp	x29, x30, [sp, #-16]!
  406744:	adrp	x4, 420000 <_IO_stdin_used@@Base+0x135b8>
  406748:	mov	x2, x0
  40674c:	mov	x29, sp
  406750:	ldr	x4, [x4, #3992]
  406754:	mov	x3, x1
  406758:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40675c:	add	x1, x1, #0xe98
  406760:	ldr	x0, [x4]
  406764:	bl	405020 <fprintf@plt>
  406768:	mov	w0, #0xffffffff            	// #-1
  40676c:	bl	404b70 <exit@plt>

0000000000406770 <nodev@@Base>:
  406770:	stp	x29, x30, [sp, #-16]!
  406774:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  406778:	mov	x2, x0
  40677c:	mov	x29, sp
  406780:	ldr	x3, [x3, #3992]
  406784:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406788:	add	x1, x1, #0xed0
  40678c:	ldr	x0, [x3]
  406790:	bl	405020 <fprintf@plt>
  406794:	mov	w0, #0xffffffff            	// #-1
  406798:	ldp	x29, x30, [sp], #16
  40679c:	ret

00000000004067a0 <check_ifname@@Base>:
  4067a0:	stp	x29, x30, [sp, #-32]!
  4067a4:	mov	x29, sp
  4067a8:	str	x19, [sp, #16]
  4067ac:	mov	x19, x0
  4067b0:	bl	404b60 <strlen@plt>
  4067b4:	cmp	x0, #0xf
  4067b8:	b.hi	4067d4 <check_ifname@@Base+0x34>  // b.pmore
  4067bc:	ldrb	w0, [x19]
  4067c0:	cbz	w0, 4067d4 <check_ifname@@Base+0x34>
  4067c4:	mov	x0, x19
  4067c8:	ldr	x19, [sp, #16]
  4067cc:	ldp	x29, x30, [sp], #32
  4067d0:	b	405730 <_start@@Base+0x298>
  4067d4:	mov	w0, #0xffffffff            	// #-1
  4067d8:	ldr	x19, [sp, #16]
  4067dc:	ldp	x29, x30, [sp], #32
  4067e0:	ret
  4067e4:	nop

00000000004067e8 <check_altifname@@Base>:
  4067e8:	ldrb	w1, [x0]
  4067ec:	cbz	w1, 4067f4 <check_altifname@@Base+0xc>
  4067f0:	b	405730 <_start@@Base+0x298>
  4067f4:	mov	w0, #0xffffffff            	// #-1
  4067f8:	ret
  4067fc:	nop

0000000000406800 <get_ifname@@Base>:
  406800:	stp	x29, x30, [sp, #-48]!
  406804:	mov	x29, sp
  406808:	stp	x19, x20, [sp, #16]
  40680c:	mov	x20, x1
  406810:	str	x21, [sp, #32]
  406814:	mov	x21, x0
  406818:	mov	x0, x1
  40681c:	bl	4067a0 <check_ifname@@Base>
  406820:	mov	w19, w0
  406824:	cbz	w0, 40683c <get_ifname@@Base+0x3c>
  406828:	mov	w0, w19
  40682c:	ldp	x19, x20, [sp, #16]
  406830:	ldr	x21, [sp, #32]
  406834:	ldp	x29, x30, [sp], #48
  406838:	ret
  40683c:	mov	x1, x20
  406840:	mov	x0, x21
  406844:	mov	x2, #0x10                  	// #16
  406848:	bl	404f80 <strncpy@plt>
  40684c:	mov	w0, w19
  406850:	ldp	x19, x20, [sp, #16]
  406854:	ldr	x21, [sp, #32]
  406858:	ldp	x29, x30, [sp], #48
  40685c:	ret

0000000000406860 <get_ifname_rta@@Base>:
  406860:	stp	x29, x30, [sp, #-32]!
  406864:	mov	x29, sp
  406868:	str	x19, [sp, #16]
  40686c:	cbz	x1, 406890 <get_ifname_rta@@Base+0x30>
  406870:	add	x19, x1, #0x4
  406874:	mov	x0, x19
  406878:	bl	4067a0 <check_ifname@@Base>
  40687c:	cmp	w0, #0x0
  406880:	csel	x0, x19, xzr, eq  // eq = none
  406884:	ldr	x19, [sp, #16]
  406888:	ldp	x29, x30, [sp], #32
  40688c:	ret
  406890:	mov	w19, w0
  406894:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  406898:	mov	w2, w19
  40689c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4068a0:	ldr	x0, [x0, #3992]
  4068a4:	add	x1, x1, #0xef0
  4068a8:	ldr	x0, [x0]
  4068ac:	bl	405020 <fprintf@plt>
  4068b0:	mov	w0, w19
  4068b4:	bl	4088e0 <ll_idx_n2a@@Base>
  4068b8:	mov	x19, x0
  4068bc:	mov	x0, x19
  4068c0:	bl	4067a0 <check_ifname@@Base>
  4068c4:	cmp	w0, #0x0
  4068c8:	csel	x0, x19, xzr, eq  // eq = none
  4068cc:	ldr	x19, [sp, #16]
  4068d0:	ldp	x29, x30, [sp], #32
  4068d4:	ret

00000000004068d8 <matches@@Base>:
  4068d8:	ldrb	w3, [x0]
  4068dc:	cbz	w3, 406918 <matches@@Base+0x40>
  4068e0:	ldrb	w2, [x1]
  4068e4:	sub	x4, x0, #0x1
  4068e8:	mov	x0, #0x1                   	// #1
  4068ec:	cbnz	w2, 406904 <matches@@Base+0x2c>
  4068f0:	b	40690c <matches@@Base+0x34>
  4068f4:	ldrb	w2, [x1, x0]
  4068f8:	add	x0, x0, #0x1
  4068fc:	ldrb	w3, [x4, x0]
  406900:	cbz	w2, 40690c <matches@@Base+0x34>
  406904:	cmp	w3, w2
  406908:	b.eq	4068f4 <matches@@Base+0x1c>  // b.none
  40690c:	cmp	w3, #0x0
  406910:	cset	w0, ne  // ne = any
  406914:	ret
  406918:	mov	w0, #0x1                   	// #1
  40691c:	ret

0000000000406920 <inet_addr_match@@Base>:
  406920:	stp	x29, x30, [sp, #-48]!
  406924:	cmp	wzr, w2, asr #5
  406928:	mov	x29, sp
  40692c:	stp	x19, x20, [sp, #16]
  406930:	add	x20, x1, #0x8
  406934:	and	w19, w2, #0x1f
  406938:	stp	x21, x22, [sp, #32]
  40693c:	add	x21, x0, #0x8
  406940:	asr	w22, w2, #5
  406944:	b.eq	406960 <inet_addr_match@@Base+0x40>  // b.none
  406948:	lsl	w2, w22, #2
  40694c:	mov	x1, x20
  406950:	mov	x0, x21
  406954:	sxtw	x2, w2
  406958:	bl	404de0 <memcmp@plt>
  40695c:	cbnz	w0, 4069a0 <inet_addr_match@@Base+0x80>
  406960:	cbz	w19, 40698c <inet_addr_match@@Base+0x6c>
  406964:	sxtw	x22, w22
  406968:	neg	w2, w19
  40696c:	mov	w19, #0xffffffff            	// #-1
  406970:	lsl	w2, w19, w2
  406974:	rev	w2, w2
  406978:	ldr	w0, [x21, x22, lsl #2]
  40697c:	ldr	w1, [x20, x22, lsl #2]
  406980:	eor	w0, w0, w1
  406984:	tst	w0, w2
  406988:	cset	w19, ne  // ne = any
  40698c:	mov	w0, w19
  406990:	ldp	x19, x20, [sp, #16]
  406994:	ldp	x21, x22, [sp, #32]
  406998:	ldp	x29, x30, [sp], #48
  40699c:	ret
  4069a0:	mov	w19, #0xffffffff            	// #-1
  4069a4:	mov	w0, w19
  4069a8:	ldp	x19, x20, [sp, #16]
  4069ac:	ldp	x21, x22, [sp, #32]
  4069b0:	ldp	x29, x30, [sp], #48
  4069b4:	ret

00000000004069b8 <inet_addr_match_rta@@Base>:
  4069b8:	cbz	x1, 406a10 <inet_addr_match_rta@@Base+0x58>
  4069bc:	stp	x29, x30, [sp, #-304]!
  4069c0:	mov	x29, sp
  4069c4:	ldrh	w2, [x0, #6]
  4069c8:	stp	x19, x20, [sp, #16]
  4069cc:	mov	x19, x0
  4069d0:	mov	w0, #0x0                   	// #0
  4069d4:	cbz	w2, 406a04 <inet_addr_match_rta@@Base+0x4c>
  4069d8:	ldrsh	w3, [x19, #4]
  4069dc:	cmp	w3, #0x0
  4069e0:	b.le	406a04 <inet_addr_match_rta@@Base+0x4c>
  4069e4:	add	x20, sp, #0x28
  4069e8:	mov	x0, x20
  4069ec:	bl	406550 <get_addr_rta@@Base>
  4069f0:	cbnz	w0, 406a18 <inet_addr_match_rta@@Base+0x60>
  4069f4:	ldrsh	w2, [x19, #4]
  4069f8:	mov	x0, x20
  4069fc:	mov	x1, x19
  406a00:	bl	406920 <inet_addr_match@@Base>
  406a04:	ldp	x19, x20, [sp, #16]
  406a08:	ldp	x29, x30, [sp], #304
  406a0c:	ret
  406a10:	mov	w0, #0x0                   	// #0
  406a14:	ret
  406a18:	mov	w0, #0xffffffff            	// #-1
  406a1c:	b	406a04 <inet_addr_match_rta@@Base+0x4c>

0000000000406a20 <__get_hz@@Base>:
  406a20:	sub	sp, sp, #0x430
  406a24:	stp	x29, x30, [sp]
  406a28:	mov	x29, sp
  406a2c:	stp	x19, x20, [sp, #16]
  406a30:	adrp	x19, 40c000 <rtnl_listen@@Base+0x228>
  406a34:	add	x19, x19, #0xf20
  406a38:	mov	x0, x19
  406a3c:	bl	404fe0 <getenv@plt>
  406a40:	cbz	x0, 406ab0 <__get_hz@@Base+0x90>
  406a44:	mov	x0, x19
  406a48:	bl	404fe0 <getenv@plt>
  406a4c:	mov	w2, #0xa                   	// #10
  406a50:	mov	x1, #0x0                   	// #0
  406a54:	bl	404e10 <strtol@plt>
  406a58:	mov	w19, w0
  406a5c:	cbz	w0, 406a98 <__get_hz@@Base+0x78>
  406a60:	mov	w0, w19
  406a64:	ldp	x29, x30, [sp]
  406a68:	ldp	x19, x20, [sp, #16]
  406a6c:	add	sp, sp, #0x430
  406a70:	ret
  406a74:	ldr	w1, [sp, #40]
  406a78:	mov	w0, #0x4240                	// #16960
  406a7c:	movk	w0, #0xf, lsl #16
  406a80:	cmp	w1, w0
  406a84:	b.ne	406b1c <__get_hz@@Base+0xfc>  // b.any
  406a88:	ldr	w19, [sp, #44]
  406a8c:	mov	x0, x20
  406a90:	bl	404c70 <fclose@plt>
  406a94:	cbnz	w19, 406a60 <__get_hz@@Base+0x40>
  406a98:	mov	w19, #0x64                  	// #100
  406a9c:	mov	w0, w19
  406aa0:	ldp	x29, x30, [sp]
  406aa4:	ldp	x19, x20, [sp, #16]
  406aa8:	add	sp, sp, #0x430
  406aac:	ret
  406ab0:	adrp	x19, 40c000 <rtnl_listen@@Base+0x228>
  406ab4:	add	x19, x19, #0xf28
  406ab8:	mov	x0, x19
  406abc:	bl	404fe0 <getenv@plt>
  406ac0:	cbz	x0, 406b3c <__get_hz@@Base+0x11c>
  406ac4:	mov	x0, x19
  406ac8:	add	x19, sp, #0x30
  406acc:	bl	404fe0 <getenv@plt>
  406ad0:	mov	x3, x0
  406ad4:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  406ad8:	mov	x0, x19
  406adc:	add	x2, x2, #0xf38
  406ae0:	mov	x1, #0x3ff                 	// #1023
  406ae4:	bl	404c40 <snprintf@plt>
  406ae8:	mov	x0, x19
  406aec:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406af0:	add	x1, x1, #0xcd0
  406af4:	bl	404ee0 <fopen64@plt>
  406af8:	mov	x20, x0
  406afc:	cbz	x0, 406a98 <__get_hz@@Base+0x78>
  406b00:	add	x3, sp, #0x2c
  406b04:	add	x2, sp, #0x28
  406b08:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406b0c:	add	x1, x1, #0xf78
  406b10:	bl	404cb0 <__isoc99_fscanf@plt>
  406b14:	cmp	w0, #0x2
  406b18:	b.eq	406a74 <__get_hz@@Base+0x54>  // b.none
  406b1c:	mov	x0, x20
  406b20:	mov	w19, #0x64                  	// #100
  406b24:	bl	404c70 <fclose@plt>
  406b28:	mov	w0, w19
  406b2c:	ldp	x29, x30, [sp]
  406b30:	ldp	x19, x20, [sp, #16]
  406b34:	add	sp, sp, #0x430
  406b38:	ret
  406b3c:	adrp	x19, 40c000 <rtnl_listen@@Base+0x228>
  406b40:	add	x19, x19, #0xf40
  406b44:	mov	x0, x19
  406b48:	bl	404fe0 <getenv@plt>
  406b4c:	cbz	x0, 406b78 <__get_hz@@Base+0x158>
  406b50:	mov	x0, x19
  406b54:	add	x19, sp, #0x30
  406b58:	bl	404fe0 <getenv@plt>
  406b5c:	mov	x3, x0
  406b60:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  406b64:	mov	x0, x19
  406b68:	add	x2, x2, #0xf50
  406b6c:	mov	x1, #0x3ff                 	// #1023
  406b70:	bl	404c40 <snprintf@plt>
  406b74:	b	406ae8 <__get_hz@@Base+0xc8>
  406b78:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406b7c:	add	x0, x0, #0xf60
  406b80:	add	x19, sp, #0x30
  406b84:	ldp	x2, x3, [x0]
  406b88:	stp	x2, x3, [sp, #48]
  406b8c:	ldrb	w0, [x0, #16]
  406b90:	strb	w0, [sp, #64]
  406b94:	b	406ae8 <__get_hz@@Base+0xc8>

0000000000406b98 <__get_user_hz@@Base>:
  406b98:	stp	x29, x30, [sp, #-16]!
  406b9c:	mov	w0, #0x2                   	// #2
  406ba0:	mov	x29, sp
  406ba4:	bl	404f10 <sysconf@plt>
  406ba8:	ldp	x29, x30, [sp], #16
  406bac:	ret

0000000000406bb0 <rt_addr_n2a_r@@Base>:
  406bb0:	mov	x6, x2
  406bb4:	cmp	w0, #0x11
  406bb8:	mov	x2, x3
  406bbc:	b.eq	406c18 <rt_addr_n2a_r@@Base+0x68>  // b.none
  406bc0:	b.gt	406be4 <rt_addr_n2a_r@@Base+0x34>
  406bc4:	cmp	w0, #0x7
  406bc8:	b.eq	406bf8 <rt_addr_n2a_r@@Base+0x48>  // b.none
  406bcc:	and	w5, w0, #0xfffffff7
  406bd0:	cmp	w5, #0x2
  406bd4:	b.ne	406c0c <rt_addr_n2a_r@@Base+0x5c>  // b.any
  406bd8:	mov	w3, w4
  406bdc:	mov	x1, x6
  406be0:	b	405040 <inet_ntop@plt>
  406be4:	cmp	w0, #0x1c
  406be8:	b.ne	406c0c <rt_addr_n2a_r@@Base+0x5c>  // b.any
  406bec:	sxtw	x3, w4
  406bf0:	mov	x1, x6
  406bf4:	b	409ba8 <mpls_ntop@@Base>
  406bf8:	ldrh	w0, [x6]
  406bfc:	cmp	w0, #0x2
  406c00:	b.eq	406c30 <rt_addr_n2a_r@@Base+0x80>  // b.none
  406c04:	cmp	w0, #0xa
  406c08:	b.eq	406c24 <rt_addr_n2a_r@@Base+0x74>  // b.none
  406c0c:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406c10:	add	x0, x0, #0xf90
  406c14:	ret
  406c18:	mov	x0, x6
  406c1c:	mov	w2, #0xffff                	// #65535
  406c20:	b	408c50 <ll_addr_n2a@@Base>
  406c24:	mov	w3, w4
  406c28:	add	x1, x6, #0x8
  406c2c:	b	405040 <inet_ntop@plt>
  406c30:	mov	w3, w4
  406c34:	add	x1, x6, #0x4
  406c38:	b	405040 <inet_ntop@plt>
  406c3c:	nop

0000000000406c40 <rt_addr_n2a@@Base>:
  406c40:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  406c44:	mov	w4, #0x100                 	// #256
  406c48:	add	x3, x3, #0x2d0
  406c4c:	b	406bb0 <rt_addr_n2a_r@@Base>

0000000000406c50 <read_family@@Base>:
  406c50:	stp	x29, x30, [sp, #-32]!
  406c54:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406c58:	add	x1, x1, #0xb68
  406c5c:	mov	x29, sp
  406c60:	str	x19, [sp, #16]
  406c64:	mov	x19, x0
  406c68:	bl	404df0 <strcmp@plt>
  406c6c:	mov	w1, #0x2                   	// #2
  406c70:	cbz	w0, 406cf0 <read_family@@Base+0xa0>
  406c74:	mov	x0, x19
  406c78:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406c7c:	add	x1, x1, #0xb70
  406c80:	bl	404df0 <strcmp@plt>
  406c84:	mov	w1, #0xa                   	// #10
  406c88:	cbz	w0, 406cf0 <read_family@@Base+0xa0>
  406c8c:	mov	x0, x19
  406c90:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406c94:	add	x1, x1, #0xb78
  406c98:	bl	404df0 <strcmp@plt>
  406c9c:	mov	w1, #0x11                  	// #17
  406ca0:	cbz	w0, 406cf0 <read_family@@Base+0xa0>
  406ca4:	mov	x0, x19
  406ca8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406cac:	add	x1, x1, #0xf98
  406cb0:	bl	404df0 <strcmp@plt>
  406cb4:	mov	w1, #0x4                   	// #4
  406cb8:	cbz	w0, 406cf0 <read_family@@Base+0xa0>
  406cbc:	mov	x0, x19
  406cc0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406cc4:	add	x1, x1, #0xfa0
  406cc8:	bl	404df0 <strcmp@plt>
  406ccc:	mov	w1, #0x1c                  	// #28
  406cd0:	cbz	w0, 406cf0 <read_family@@Base+0xa0>
  406cd4:	mov	x0, x19
  406cd8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406cdc:	add	x1, x1, #0xfa8
  406ce0:	bl	404df0 <strcmp@plt>
  406ce4:	cmp	w0, #0x0
  406ce8:	mov	w1, #0x7                   	// #7
  406cec:	csel	w1, wzr, w1, ne  // ne = any
  406cf0:	mov	w0, w1
  406cf4:	ldr	x19, [sp, #16]
  406cf8:	ldp	x29, x30, [sp], #32
  406cfc:	ret

0000000000406d00 <family_name@@Base>:
  406d00:	cmp	w0, #0x2
  406d04:	b.eq	406d44 <family_name@@Base+0x44>  // b.none
  406d08:	cmp	w0, #0xa
  406d0c:	b.eq	406d5c <family_name@@Base+0x5c>  // b.none
  406d10:	cmp	w0, #0x11
  406d14:	b.eq	406d50 <family_name@@Base+0x50>  // b.none
  406d18:	cmp	w0, #0x4
  406d1c:	b.eq	406d68 <family_name@@Base+0x68>  // b.none
  406d20:	cmp	w0, #0x1c
  406d24:	b.eq	406d74 <family_name@@Base+0x74>  // b.none
  406d28:	cmp	w0, #0x7
  406d2c:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406d30:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406d34:	add	x1, x1, #0xfa8
  406d38:	add	x0, x0, #0xf90
  406d3c:	csel	x0, x0, x1, ne  // ne = any
  406d40:	ret
  406d44:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406d48:	add	x0, x0, #0xb68
  406d4c:	ret
  406d50:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406d54:	add	x0, x0, #0xb78
  406d58:	ret
  406d5c:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406d60:	add	x0, x0, #0xb70
  406d64:	ret
  406d68:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406d6c:	add	x0, x0, #0xf98
  406d70:	ret
  406d74:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  406d78:	add	x0, x0, #0xfa0
  406d7c:	ret

0000000000406d80 <get_addr@@Base>:
  406d80:	stp	x29, x30, [sp, #-48]!
  406d84:	mov	x29, sp
  406d88:	stp	x19, x20, [sp, #16]
  406d8c:	mov	x20, x1
  406d90:	mov	w19, w2
  406d94:	bl	406168 <get_addr_1@@Base>
  406d98:	cbnz	w0, 406da8 <get_addr@@Base+0x28>
  406d9c:	ldp	x19, x20, [sp, #16]
  406da0:	ldp	x29, x30, [sp], #48
  406da4:	ret
  406da8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  406dac:	str	x21, [sp, #32]
  406db0:	ldr	x0, [x0, #3992]
  406db4:	ldr	x21, [x0]
  406db8:	cbz	w19, 406de4 <get_addr@@Base+0x64>
  406dbc:	mov	w0, w19
  406dc0:	bl	406d00 <family_name@@Base>
  406dc4:	mov	x2, x0
  406dc8:	mov	x3, x20
  406dcc:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406dd0:	add	x1, x1, #0xfc0
  406dd4:	mov	x0, x21
  406dd8:	bl	405020 <fprintf@plt>
  406ddc:	mov	w0, #0x1                   	// #1
  406de0:	bl	404b70 <exit@plt>
  406de4:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  406de8:	add	x2, x2, #0xfb0
  406dec:	b	406dc8 <get_addr@@Base+0x48>

0000000000406df0 <get_prefix@@Base>:
  406df0:	stp	x29, x30, [sp, #-48]!
  406df4:	cmp	w2, #0x11
  406df8:	mov	x29, sp
  406dfc:	stp	x19, x20, [sp, #16]
  406e00:	mov	x20, x1
  406e04:	b.eq	406e20 <get_prefix@@Base+0x30>  // b.none
  406e08:	mov	w19, w2
  406e0c:	bl	406448 <get_prefix_1@@Base>
  406e10:	cbnz	w0, 406e48 <get_prefix@@Base+0x58>
  406e14:	ldp	x19, x20, [sp, #16]
  406e18:	ldp	x29, x30, [sp], #48
  406e1c:	ret
  406e20:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  406e24:	mov	x2, x1
  406e28:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  406e2c:	add	x1, x1, #0xff8
  406e30:	ldr	x0, [x0, #3992]
  406e34:	ldr	x0, [x0]
  406e38:	str	x21, [sp, #32]
  406e3c:	bl	405020 <fprintf@plt>
  406e40:	mov	w0, #0x1                   	// #1
  406e44:	bl	404b70 <exit@plt>
  406e48:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  406e4c:	str	x21, [sp, #32]
  406e50:	ldr	x0, [x0, #3992]
  406e54:	ldr	x21, [x0]
  406e58:	cbz	w19, 406e84 <get_prefix@@Base+0x94>
  406e5c:	mov	w0, w19
  406e60:	bl	406d00 <family_name@@Base>
  406e64:	mov	x2, x0
  406e68:	mov	x3, x20
  406e6c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  406e70:	add	x1, x1, #0x40
  406e74:	mov	x0, x21
  406e78:	bl	405020 <fprintf@plt>
  406e7c:	mov	w0, #0x1                   	// #1
  406e80:	bl	404b70 <exit@plt>
  406e84:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  406e88:	add	x2, x2, #0xfb0
  406e8c:	b	406e68 <get_prefix@@Base+0x78>

0000000000406e90 <format_host_r@@Base>:
  406e90:	stp	x29, x30, [sp, #-112]!
  406e94:	adrp	x6, 420000 <_IO_stdin_used@@Base+0x135b8>
  406e98:	mov	x29, sp
  406e9c:	ldr	x6, [x6, #4064]
  406ea0:	stp	x27, x28, [sp, #80]
  406ea4:	mov	w28, w1
  406ea8:	stp	x19, x20, [sp, #16]
  406eac:	mov	x19, x2
  406eb0:	ldr	w1, [x6]
  406eb4:	stp	x21, x22, [sp, #32]
  406eb8:	mov	w20, w0
  406ebc:	mov	x21, x3
  406ec0:	mov	w22, w4
  406ec4:	cbz	w1, 406f9c <format_host_r@@Base+0x10c>
  406ec8:	cmp	w28, #0x0
  406ecc:	b.le	406fc4 <format_host_r@@Base+0x134>
  406ed0:	stp	x23, x24, [sp, #48]
  406ed4:	cmp	w20, #0xa
  406ed8:	stp	x25, x26, [sp, #64]
  406edc:	b.eq	407070 <format_host_r@@Base+0x1e0>  // b.none
  406ee0:	sxtw	x23, w28
  406ee4:	mov	w25, w20
  406ee8:	sub	x0, x23, #0x4
  406eec:	mov	w24, w28
  406ef0:	add	x0, x19, x0
  406ef4:	mov	x27, x19
  406ef8:	ldr	w26, [x0]
  406efc:	mov	w0, #0xff01                	// #65281
  406f00:	movk	w0, #0xff00, lsl #16
  406f04:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  406f08:	add	x1, x1, #0x2d0
  406f0c:	add	x1, x1, #0x100
  406f10:	umull	x0, w26, w0
  406f14:	lsr	x0, x0, #40
  406f18:	add	w0, w0, w0, lsl #8
  406f1c:	sub	w0, w26, w0
  406f20:	str	x0, [sp, #104]
  406f24:	ldr	x0, [x1, x0, lsl #3]
  406f28:	str	x0, [sp, #96]
  406f2c:	cbz	x0, 406fe4 <format_host_r@@Base+0x154>
  406f30:	mov	x26, x0
  406f34:	b	406f40 <format_host_r@@Base+0xb0>
  406f38:	ldr	x26, [x26]
  406f3c:	cbz	x26, 406fe4 <format_host_r@@Base+0x154>
  406f40:	ldrh	w0, [x26, #22]
  406f44:	cmp	w0, w25
  406f48:	b.ne	406f38 <format_host_r@@Base+0xa8>  // b.any
  406f4c:	ldrh	w0, [x26, #18]
  406f50:	cmp	w24, w0
  406f54:	b.ne	406f38 <format_host_r@@Base+0xa8>  // b.any
  406f58:	mov	x2, x23
  406f5c:	mov	x1, x27
  406f60:	add	x0, x26, #0x18
  406f64:	bl	404de0 <memcmp@plt>
  406f68:	cbnz	w0, 406f38 <format_host_r@@Base+0xa8>
  406f6c:	nop
  406f70:	ldr	x0, [x26, #8]
  406f74:	cbz	x0, 406f94 <format_host_r@@Base+0x104>
  406f78:	ldp	x19, x20, [sp, #16]
  406f7c:	ldp	x21, x22, [sp, #32]
  406f80:	ldp	x23, x24, [sp, #48]
  406f84:	ldp	x25, x26, [sp, #64]
  406f88:	ldp	x27, x28, [sp, #80]
  406f8c:	ldp	x29, x30, [sp], #112
  406f90:	ret
  406f94:	ldp	x23, x24, [sp, #48]
  406f98:	ldp	x25, x26, [sp, #64]
  406f9c:	mov	w4, w22
  406fa0:	mov	x3, x21
  406fa4:	mov	x2, x19
  406fa8:	mov	w1, w28
  406fac:	mov	w0, w20
  406fb0:	ldp	x19, x20, [sp, #16]
  406fb4:	ldp	x21, x22, [sp, #32]
  406fb8:	ldp	x27, x28, [sp, #80]
  406fbc:	ldp	x29, x30, [sp], #112
  406fc0:	b	406bb0 <rt_addr_n2a_r@@Base>
  406fc4:	bl	406140 <af_bit_len@@Base>
  406fc8:	cmp	w0, #0x0
  406fcc:	add	w5, w0, #0x7
  406fd0:	csel	w5, w5, w0, lt  // lt = tstop
  406fd4:	cmp	w0, #0x7
  406fd8:	asr	w28, w5, #3
  406fdc:	b.le	406f9c <format_host_r@@Base+0x10c>
  406fe0:	b	406ed0 <format_host_r@@Base+0x40>
  406fe4:	mov	x0, #0x118                 	// #280
  406fe8:	bl	404c90 <malloc@plt>
  406fec:	mov	x26, x0
  406ff0:	cbz	x0, 406f94 <format_host_r@@Base+0x104>
  406ff4:	str	xzr, [x26, #8]
  406ff8:	mov	x2, x23
  406ffc:	strh	w24, [x26, #18]
  407000:	mov	x1, x27
  407004:	strh	w25, [x26, #22]
  407008:	add	x0, x0, #0x18
  40700c:	bl	404b30 <memcpy@plt>
  407010:	adrp	x0, 421000 <memcpy@GLIBC_2.17>
  407014:	add	x23, x0, #0x2d0
  407018:	ldp	x0, x2, [sp, #96]
  40701c:	add	x1, x23, #0x100
  407020:	str	x0, [x26]
  407024:	ldr	w0, [x23, #2312]
  407028:	add	w0, w0, #0x1
  40702c:	str	w0, [x23, #2312]
  407030:	str	x26, [x1, x2, lsl #3]
  407034:	cmp	w0, #0x1
  407038:	b.eq	4070a4 <format_host_r@@Base+0x214>  // b.none
  40703c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  407040:	ldr	x0, [x0, #4016]
  407044:	ldr	x0, [x0]
  407048:	bl	404ed0 <fflush@plt>
  40704c:	mov	w2, w25
  407050:	mov	w1, w24
  407054:	mov	x0, x27
  407058:	bl	404e40 <gethostbyaddr@plt>
  40705c:	cbz	x0, 406f70 <format_host_r@@Base+0xe0>
  407060:	ldr	x0, [x0]
  407064:	bl	404d60 <strdup@plt>
  407068:	str	x0, [x26, #8]
  40706c:	b	406f74 <format_host_r@@Base+0xe4>
  407070:	ldr	w0, [x19]
  407074:	cbnz	w0, 406ee0 <format_host_r@@Base+0x50>
  407078:	ldr	w0, [x19, #4]
  40707c:	cbnz	w0, 406ee0 <format_host_r@@Base+0x50>
  407080:	ldr	w0, [x19, #8]
  407084:	cmn	w0, #0x10, lsl #12
  407088:	b.ne	406ee0 <format_host_r@@Base+0x50>  // b.any
  40708c:	add	x27, x19, #0xc
  407090:	mov	x23, #0x4                   	// #4
  407094:	mov	x0, x27
  407098:	mov	w24, w23
  40709c:	mov	w25, #0x2                   	// #2
  4070a0:	b	406ef8 <format_host_r@@Base+0x68>
  4070a4:	bl	404bc0 <sethostent@plt>
  4070a8:	b	40703c <format_host_r@@Base+0x1ac>
  4070ac:	nop

00000000004070b0 <format_host@@Base>:
  4070b0:	adrp	x3, 421000 <memcpy@GLIBC_2.17>
  4070b4:	add	x3, x3, #0x2d0
  4070b8:	add	x3, x3, #0x910
  4070bc:	mov	w4, #0x100                 	// #256
  4070c0:	b	406e90 <format_host_r@@Base>
  4070c4:	nop

00000000004070c8 <hexstring_n2a@@Base>:
  4070c8:	stp	x29, x30, [sp, #-80]!
  4070cc:	cmp	w1, #0x0
  4070d0:	ccmp	w3, #0x2, #0x4, gt
  4070d4:	mov	x29, sp
  4070d8:	stp	x23, x24, [sp, #48]
  4070dc:	mov	x24, x2
  4070e0:	b.le	407150 <hexstring_n2a@@Base+0x88>
  4070e4:	mov	w23, w1
  4070e8:	stp	x19, x20, [sp, #16]
  4070ec:	mov	x20, x2
  4070f0:	stp	x21, x22, [sp, #32]
  4070f4:	sub	x22, x0, #0x1
  4070f8:	add	w21, w3, w2
  4070fc:	str	x25, [sp, #64]
  407100:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407104:	add	x25, x25, #0x70
  407108:	mov	x19, #0x1                   	// #1
  40710c:	nop
  407110:	ldrb	w2, [x22, x19]
  407114:	mov	x0, x20
  407118:	mov	x1, x25
  40711c:	add	x20, x20, #0x2
  407120:	bl	404bf0 <sprintf@plt>
  407124:	cmp	w23, w19
  407128:	sub	w3, w21, w20
  40712c:	cset	w0, le
  407130:	cmp	w3, #0x2
  407134:	cset	w3, le
  407138:	add	x19, x19, #0x1
  40713c:	orr	w0, w0, w3
  407140:	cbz	w0, 407110 <hexstring_n2a@@Base+0x48>
  407144:	ldp	x19, x20, [sp, #16]
  407148:	ldp	x21, x22, [sp, #32]
  40714c:	ldr	x25, [sp, #64]
  407150:	mov	x0, x24
  407154:	ldp	x23, x24, [sp, #48]
  407158:	ldp	x29, x30, [sp], #80
  40715c:	ret

0000000000407160 <hexstring_a2n@@Base>:
  407160:	stp	x29, x30, [sp, #-112]!
  407164:	mov	x29, sp
  407168:	stp	x21, x22, [sp, #32]
  40716c:	mov	x22, x1
  407170:	stp	x23, x24, [sp, #48]
  407174:	mov	w23, w2
  407178:	stp	x25, x26, [sp, #64]
  40717c:	mov	x25, x3
  407180:	mov	x26, x0
  407184:	bl	404b60 <strlen@plt>
  407188:	tbnz	w0, #0, 407274 <hexstring_a2n@@Base+0x114>
  40718c:	str	x27, [sp, #80]
  407190:	cbz	w23, 4072a4 <hexstring_a2n@@Base+0x144>
  407194:	mov	x3, x0
  407198:	add	x21, sp, #0x60
  40719c:	add	x24, sp, #0x68
  4071a0:	stp	x19, x20, [sp, #16]
  4071a4:	and	x20, x0, #0x1
  4071a8:	b	4071d0 <hexstring_a2n@@Base+0x70>
  4071ac:	ldr	x1, [sp, #104]
  4071b0:	ldrb	w1, [x1]
  4071b4:	cbnz	w1, 40722c <hexstring_a2n@@Base+0xcc>
  4071b8:	strb	w4, [x22, x20]
  4071bc:	add	x20, x20, #0x1
  4071c0:	cmp	w23, w20
  4071c4:	b.ls	40724c <hexstring_a2n@@Base+0xec>  // b.plast
  4071c8:	bl	404b60 <strlen@plt>
  4071cc:	mov	x3, x0
  4071d0:	mov	x1, x26
  4071d4:	mov	x0, x21
  4071d8:	cmp	x3, #0x1
  4071dc:	mov	w27, w20
  4071e0:	mov	x2, #0x2                   	// #2
  4071e4:	b.ls	40724c <hexstring_a2n@@Base+0xec>  // b.plast
  4071e8:	bl	404f80 <strncpy@plt>
  4071ec:	strb	wzr, [sp, #98]
  4071f0:	bl	404fd0 <__errno_location@plt>
  4071f4:	mov	x19, x0
  4071f8:	mov	x1, x24
  4071fc:	mov	x0, x21
  407200:	mov	w2, #0x10                  	// #16
  407204:	add	x26, x26, #0x2
  407208:	str	wzr, [x19]
  40720c:	add	w27, w27, #0x1
  407210:	bl	404b50 <strtoul@plt>
  407214:	mov	x4, x0
  407218:	ldr	w1, [x19]
  40721c:	cmp	w4, #0xff
  407220:	mov	x0, x26
  407224:	ccmp	w1, #0x0, #0x0, ls  // ls = plast
  407228:	b.eq	4071ac <hexstring_a2n@@Base+0x4c>  // b.none
  40722c:	mov	x0, #0x0                   	// #0
  407230:	ldp	x19, x20, [sp, #16]
  407234:	ldp	x21, x22, [sp, #32]
  407238:	ldp	x23, x24, [sp, #48]
  40723c:	ldp	x25, x26, [sp, #64]
  407240:	ldr	x27, [sp, #80]
  407244:	ldp	x29, x30, [sp], #112
  407248:	ret
  40724c:	ldp	x19, x20, [sp, #16]
  407250:	mov	x0, x22
  407254:	cbz	x25, 40728c <hexstring_a2n@@Base+0x12c>
  407258:	str	w27, [x25]
  40725c:	ldp	x21, x22, [sp, #32]
  407260:	ldp	x23, x24, [sp, #48]
  407264:	ldp	x25, x26, [sp, #64]
  407268:	ldr	x27, [sp, #80]
  40726c:	ldp	x29, x30, [sp], #112
  407270:	ret
  407274:	mov	x0, #0x0                   	// #0
  407278:	ldp	x21, x22, [sp, #32]
  40727c:	ldp	x23, x24, [sp, #48]
  407280:	ldp	x25, x26, [sp, #64]
  407284:	ldp	x29, x30, [sp], #112
  407288:	ret
  40728c:	ldp	x21, x22, [sp, #32]
  407290:	ldp	x23, x24, [sp, #48]
  407294:	ldp	x25, x26, [sp, #64]
  407298:	ldr	x27, [sp, #80]
  40729c:	ldp	x29, x30, [sp], #112
  4072a0:	ret
  4072a4:	mov	w27, #0x0                   	// #0
  4072a8:	b	407250 <hexstring_a2n@@Base+0xf0>
  4072ac:	nop

00000000004072b0 <hex2mem@@Base>:
  4072b0:	cmp	w2, #0x0
  4072b4:	b.le	407340 <hex2mem@@Base+0x90>
  4072b8:	stp	x29, x30, [sp, #-48]!
  4072bc:	sub	w2, w2, #0x1
  4072c0:	mov	x29, sp
  4072c4:	str	x21, [sp, #32]
  4072c8:	add	x21, x1, #0x1
  4072cc:	add	x21, x21, x2
  4072d0:	stp	x19, x20, [sp, #16]
  4072d4:	mov	x19, x1
  4072d8:	add	x20, x0, #0x1
  4072dc:	b	40730c <hex2mem@@Base+0x5c>
  4072e0:	ubfiz	w0, w0, #4, #4
  4072e4:	strb	w0, [x19]
  4072e8:	add	x20, x20, #0x2
  4072ec:	ldurb	w0, [x20, #-2]
  4072f0:	bl	405988 <get_hex@@Base>
  4072f4:	tbnz	w0, #31, 407318 <hex2mem@@Base+0x68>
  4072f8:	ldrb	w1, [x19]
  4072fc:	orr	w0, w0, w1
  407300:	strb	w0, [x19], #1
  407304:	cmp	x19, x21
  407308:	b.eq	40732c <hex2mem@@Base+0x7c>  // b.none
  40730c:	ldurb	w0, [x20, #-1]
  407310:	bl	405988 <get_hex@@Base>
  407314:	tbz	w0, #31, 4072e0 <hex2mem@@Base+0x30>
  407318:	mov	w0, #0xffffffff            	// #-1
  40731c:	ldp	x19, x20, [sp, #16]
  407320:	ldr	x21, [sp, #32]
  407324:	ldp	x29, x30, [sp], #48
  407328:	ret
  40732c:	mov	w0, #0x0                   	// #0
  407330:	ldp	x19, x20, [sp, #16]
  407334:	ldr	x21, [sp, #32]
  407338:	ldp	x29, x30, [sp], #48
  40733c:	ret
  407340:	mov	w0, #0x0                   	// #0
  407344:	ret

0000000000407348 <addr64_n2a@@Base>:
  407348:	stp	x29, x30, [sp, #-96]!
  40734c:	rev16	w3, w0
  407350:	and	w3, w3, #0xffff
  407354:	mov	x29, sp
  407358:	stp	x19, x20, [sp, #16]
  40735c:	add	x20, sp, #0x58
  407360:	mov	x19, #0x0                   	// #0
  407364:	stp	x21, x22, [sp, #32]
  407368:	mov	x21, x1
  40736c:	mov	x22, x2
  407370:	stp	x23, x24, [sp, #48]
  407374:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407378:	add	x23, x20, #0x6
  40737c:	add	x24, x24, #0x80
  407380:	str	x25, [sp, #64]
  407384:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407388:	add	x25, x25, #0x78
  40738c:	str	x0, [sp, #88]
  407390:	mov	x4, x25
  407394:	mov	x2, x24
  407398:	sub	x1, x22, x19
  40739c:	add	x0, x21, x19
  4073a0:	bl	404c40 <snprintf@plt>
  4073a4:	tbnz	w0, #31, 4073e4 <addr64_n2a@@Base+0x9c>
  4073a8:	ldrh	w3, [x20, #2]!
  4073ac:	add	x19, x19, w0, sxtw
  4073b0:	rev16	w3, w3
  4073b4:	cmp	x23, x20
  4073b8:	and	w3, w3, #0xffff
  4073bc:	b.ne	407390 <addr64_n2a@@Base+0x48>  // b.any
  4073c0:	sub	x1, x22, x19
  4073c4:	add	x0, x21, x19
  4073c8:	mov	x2, x24
  4073cc:	adrp	x4, 40c000 <rtnl_listen@@Base+0x228>
  4073d0:	add	x4, x4, #0xe08
  4073d4:	bl	404c40 <snprintf@plt>
  4073d8:	cmp	w0, #0x0
  4073dc:	add	x19, x19, w0, sxtw
  4073e0:	csel	w0, w0, w19, lt  // lt = tstop
  4073e4:	ldp	x19, x20, [sp, #16]
  4073e8:	ldp	x21, x22, [sp, #32]
  4073ec:	ldp	x23, x24, [sp, #48]
  4073f0:	ldr	x25, [sp, #64]
  4073f4:	ldp	x29, x30, [sp], #96
  4073f8:	ret
  4073fc:	nop

0000000000407400 <print_escape_buf@@Base>:
  407400:	cbz	x1, 4074ac <print_escape_buf@@Base+0xac>
  407404:	stp	x29, x30, [sp, #-64]!
  407408:	mov	x29, sp
  40740c:	stp	x19, x20, [sp, #16]
  407410:	mov	x20, x0
  407414:	stp	x21, x22, [sp, #32]
  407418:	mov	x21, x1
  40741c:	mov	x22, x2
  407420:	add	x21, x20, x21
  407424:	stp	x23, x24, [sp, #48]
  407428:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40742c:	bl	404e00 <__ctype_b_loc@plt>
  407430:	add	x24, x24, #0x88
  407434:	mov	x23, x0
  407438:	b	407454 <print_escape_buf@@Base+0x54>
  40743c:	mov	w1, w19
  407440:	mov	x0, x24
  407444:	add	x20, x20, #0x1
  407448:	bl	404fb0 <printf@plt>
  40744c:	cmp	x21, x20
  407450:	b.eq	407498 <print_escape_buf@@Base+0x98>  // b.none
  407454:	ldrb	w19, [x20]
  407458:	mov	x0, x22
  40745c:	ldr	x4, [x23]
  407460:	cmp	w19, #0x5c
  407464:	ubfiz	x3, x19, #1, #8
  407468:	mov	w1, w19
  40746c:	ldrh	w3, [x4, x3]
  407470:	and	w3, w3, #0x4000
  407474:	ccmp	w3, #0x0, #0x4, ne  // ne = any
  407478:	b.eq	40743c <print_escape_buf@@Base+0x3c>  // b.none
  40747c:	bl	404e90 <strchr@plt>
  407480:	cbnz	x0, 40743c <print_escape_buf@@Base+0x3c>
  407484:	mov	w0, w19
  407488:	add	x20, x20, #0x1
  40748c:	bl	404ff0 <putchar@plt>
  407490:	cmp	x21, x20
  407494:	b.ne	407454 <print_escape_buf@@Base+0x54>  // b.any
  407498:	ldp	x19, x20, [sp, #16]
  40749c:	ldp	x21, x22, [sp, #32]
  4074a0:	ldp	x23, x24, [sp, #48]
  4074a4:	ldp	x29, x30, [sp], #64
  4074a8:	ret
  4074ac:	ret

00000000004074b0 <print_timestamp@@Base>:
  4074b0:	stp	x29, x30, [sp, #-96]!
  4074b4:	mov	x1, #0x0                   	// #0
  4074b8:	mov	x29, sp
  4074bc:	stp	x19, x20, [sp, #16]
  4074c0:	add	x19, sp, #0x28
  4074c4:	mov	x20, x0
  4074c8:	mov	x0, x19
  4074cc:	bl	404d00 <gettimeofday@plt>
  4074d0:	mov	x0, x19
  4074d4:	bl	404c60 <localtime@plt>
  4074d8:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  4074dc:	ldr	x1, [x1, #4032]
  4074e0:	ldr	w1, [x1]
  4074e4:	cbz	w1, 40752c <print_timestamp@@Base+0x7c>
  4074e8:	add	x19, sp, #0x38
  4074ec:	mov	x3, x0
  4074f0:	mov	x1, #0x28                  	// #40
  4074f4:	mov	x0, x19
  4074f8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4074fc:	add	x2, x2, #0x90
  407500:	bl	404c20 <strftime@plt>
  407504:	ldr	x3, [sp, #48]
  407508:	mov	x2, x19
  40750c:	mov	x0, x20
  407510:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407514:	add	x1, x1, #0xa8
  407518:	bl	405020 <fprintf@plt>
  40751c:	mov	w0, #0x0                   	// #0
  407520:	ldp	x19, x20, [sp, #16]
  407524:	ldp	x29, x30, [sp], #96
  407528:	ret
  40752c:	bl	404f20 <asctime@plt>
  407530:	mov	x19, x0
  407534:	bl	404b60 <strlen@plt>
  407538:	mov	x2, x19
  40753c:	add	x19, x19, x0
  407540:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407544:	mov	x0, x20
  407548:	add	x1, x1, #0xb8
  40754c:	sturb	wzr, [x19, #-1]
  407550:	ldr	x3, [sp, #48]
  407554:	bl	405020 <fprintf@plt>
  407558:	mov	w0, #0x0                   	// #0
  40755c:	ldp	x19, x20, [sp, #16]
  407560:	ldp	x29, x30, [sp], #96
  407564:	ret

0000000000407568 <print_name_and_link@@Base>:
  407568:	stp	x29, x30, [sp, #-112]!
  40756c:	mov	x29, sp
  407570:	stp	x19, x20, [sp, #16]
  407574:	mov	x20, x0
  407578:	mov	x19, x1
  40757c:	ldr	x0, [x2, #40]
  407580:	stp	x21, x22, [sp, #32]
  407584:	mov	w21, #0x0                   	// #0
  407588:	cbz	x0, 4075c8 <print_name_and_link@@Base+0x60>
  40758c:	ldr	w21, [x0, #4]
  407590:	cbz	w21, 4075f8 <print_name_and_link@@Base+0x90>
  407594:	ldr	x0, [x2, #296]
  407598:	cbz	x0, 407670 <print_name_and_link@@Base+0x108>
  40759c:	bl	409000 <is_json_context@@Base>
  4075a0:	tst	w0, #0xff
  4075a4:	b.eq	407614 <print_name_and_link@@Base+0xac>  // b.none
  4075a8:	mov	w4, w21
  4075ac:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4075b0:	mov	x3, #0x0                   	// #0
  4075b4:	add	x2, x2, #0xd8
  4075b8:	mov	w1, #0x6                   	// #6
  4075bc:	mov	w0, #0x2                   	// #2
  4075c0:	mov	w21, #0x0                   	// #0
  4075c4:	bl	409138 <print_color_int@@Base>
  4075c8:	mov	x4, x19
  4075cc:	mov	x3, x20
  4075d0:	mov	w1, #0x0                   	// #0
  4075d4:	mov	w0, #0x4                   	// #4
  4075d8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4075dc:	add	x2, x2, #0xf0
  4075e0:	bl	409500 <print_color_string@@Base>
  4075e4:	mov	w0, w21
  4075e8:	ldp	x19, x20, [sp, #16]
  4075ec:	ldp	x21, x22, [sp, #32]
  4075f0:	ldp	x29, x30, [sp], #112
  4075f4:	ret
  4075f8:	bl	409000 <is_json_context@@Base>
  4075fc:	tst	w0, #0xff
  407600:	b.ne	40764c <print_name_and_link@@Base+0xe4>  // b.any
  407604:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407608:	mov	w21, #0x0                   	// #0
  40760c:	add	x22, x22, #0xd0
  407610:	b	407628 <print_name_and_link@@Base+0xc0>
  407614:	mov	w0, w21
  407618:	bl	4088e0 <ll_idx_n2a@@Base>
  40761c:	mov	x22, x0
  407620:	mov	w21, #0x0                   	// #0
  407624:	cbz	x22, 4075c8 <print_name_and_link@@Base+0x60>
  407628:	add	x0, sp, #0x30
  40762c:	mov	x3, x19
  407630:	mov	x4, x22
  407634:	mov	x19, x0
  407638:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40763c:	mov	x1, #0x40                  	// #64
  407640:	add	x2, x2, #0xe8
  407644:	bl	404c40 <snprintf@plt>
  407648:	b	4075c8 <print_name_and_link@@Base+0x60>
  40764c:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  407650:	mov	x4, #0x0                   	// #0
  407654:	add	x2, x2, #0xb78
  407658:	mov	x3, #0x0                   	// #0
  40765c:	mov	w1, #0x6                   	// #6
  407660:	mov	w0, #0x2                   	// #2
  407664:	mov	w21, #0x0                   	// #0
  407668:	bl	4097c0 <print_color_null@@Base>
  40766c:	b	4075c8 <print_name_and_link@@Base+0x60>
  407670:	mov	w0, w21
  407674:	bl	408920 <ll_index_to_name@@Base>
  407678:	mov	x22, x0
  40767c:	bl	409000 <is_json_context@@Base>
  407680:	tst	w0, #0xff
  407684:	b.ne	40769c <print_name_and_link@@Base+0x134>  // b.any
  407688:	mov	w0, w21
  40768c:	bl	408a60 <ll_index_to_flags@@Base>
  407690:	mvn	w21, w0
  407694:	and	w21, w21, #0x1
  407698:	b	407624 <print_name_and_link@@Base+0xbc>
  40769c:	mov	x4, x22
  4076a0:	adrp	x2, 40c000 <rtnl_listen@@Base+0x228>
  4076a4:	add	x2, x2, #0xb78
  4076a8:	mov	x3, #0x0                   	// #0
  4076ac:	mov	w1, #0x6                   	// #6
  4076b0:	mov	w0, #0x2                   	// #2
  4076b4:	bl	409500 <print_color_string@@Base>
  4076b8:	mov	w0, w21
  4076bc:	bl	408a60 <ll_index_to_flags@@Base>
  4076c0:	mvn	w21, w0
  4076c4:	and	w21, w21, #0x1
  4076c8:	b	4075c8 <print_name_and_link@@Base+0x60>
  4076cc:	nop

00000000004076d0 <getcmdline@@Base>:
  4076d0:	stp	x29, x30, [sp, #-128]!
  4076d4:	mov	x3, x2
  4076d8:	mov	x29, sp
  4076dc:	stp	x19, x20, [sp, #16]
  4076e0:	mov	x20, x0
  4076e4:	stp	x21, x22, [sp, #32]
  4076e8:	stp	x23, x24, [sp, #48]
  4076ec:	mov	x23, x2
  4076f0:	mov	w2, #0xa                   	// #10
  4076f4:	str	x1, [sp, #104]
  4076f8:	bl	405000 <__getdelim@plt>
  4076fc:	mov	x21, x0
  407700:	tbnz	x0, #63, 407818 <getcmdline@@Base+0x148>
  407704:	adrp	x22, 420000 <_IO_stdin_used@@Base+0x135b8>
  407708:	stp	x25, x26, [sp, #64]
  40770c:	mov	w1, #0x23                  	// #35
  407710:	ldr	x3, [x22, #4000]
  407714:	stp	x27, x28, [sp, #80]
  407718:	ldr	x19, [x20]
  40771c:	ldr	w2, [x3]
  407720:	mov	x0, x19
  407724:	add	w2, w2, #0x1
  407728:	str	w2, [x3]
  40772c:	bl	404e90 <strchr@plt>
  407730:	cbz	x0, 40773c <getcmdline@@Base+0x6c>
  407734:	strb	wzr, [x0]
  407738:	ldr	x19, [x20]
  40773c:	add	x0, sp, #0x70
  407740:	adrp	x25, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407744:	add	x27, sp, #0x78
  407748:	ldr	x22, [x22, #4000]
  40774c:	add	x25, x25, #0x128
  407750:	str	x0, [sp, #96]
  407754:	b	4077ec <getcmdline@@Base+0x11c>
  407758:	stp	xzr, xzr, [sp, #112]
  40775c:	bl	405000 <__getdelim@plt>
  407760:	mov	w1, #0x23                  	// #35
  407764:	mov	x19, x0
  407768:	tbnz	x0, #63, 407830 <getcmdline@@Base+0x160>
  40776c:	ldr	w0, [x22]
  407770:	add	w0, w0, #0x1
  407774:	str	w0, [x22]
  407778:	strb	wzr, [x28]
  40777c:	ldr	x26, [sp, #112]
  407780:	mov	x0, x26
  407784:	bl	404e90 <strchr@plt>
  407788:	cbz	x0, 407794 <getcmdline@@Base+0xc4>
  40778c:	strb	wzr, [x0]
  407790:	ldr	x26, [sp, #112]
  407794:	sub	x19, x19, #0x2
  407798:	ldr	x24, [x20]
  40779c:	add	x21, x21, x19
  4077a0:	mov	x0, x24
  4077a4:	bl	404b60 <strlen@plt>
  4077a8:	mov	x28, x0
  4077ac:	mov	x0, x26
  4077b0:	bl	404b60 <strlen@plt>
  4077b4:	mov	x1, x0
  4077b8:	ldr	x2, [sp, #104]
  4077bc:	add	x1, x28, x1
  4077c0:	add	x1, x1, #0x1
  4077c4:	mov	x0, x24
  4077c8:	str	x1, [x2]
  4077cc:	bl	404d40 <realloc@plt>
  4077d0:	str	x0, [x20]
  4077d4:	cbz	x0, 407874 <getcmdline@@Base+0x1a4>
  4077d8:	ldr	x1, [sp, #112]
  4077dc:	bl	404cd0 <strcat@plt>
  4077e0:	ldr	x0, [sp, #112]
  4077e4:	bl	404e50 <free@plt>
  4077e8:	ldr	x19, [x20]
  4077ec:	mov	x1, x25
  4077f0:	mov	x0, x19
  4077f4:	bl	404f60 <strstr@plt>
  4077f8:	mov	x3, x23
  4077fc:	mov	x28, x0
  407800:	mov	x1, x27
  407804:	mov	w2, #0xa                   	// #10
  407808:	ldr	x0, [sp, #96]
  40780c:	cbnz	x28, 407758 <getcmdline@@Base+0x88>
  407810:	ldp	x25, x26, [sp, #64]
  407814:	ldp	x27, x28, [sp, #80]
  407818:	mov	x0, x21
  40781c:	ldp	x19, x20, [sp, #16]
  407820:	ldp	x21, x22, [sp, #32]
  407824:	ldp	x23, x24, [sp, #48]
  407828:	ldp	x29, x30, [sp], #128
  40782c:	ret
  407830:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  407834:	mov	x21, x0
  407838:	mov	x2, #0x1a                  	// #26
  40783c:	mov	x1, #0x1                   	// #1
  407840:	ldr	x3, [x3, #3992]
  407844:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407848:	add	x0, x0, #0xf8
  40784c:	ldr	x3, [x3]
  407850:	bl	404eb0 <fwrite@plt>
  407854:	mov	x0, x21
  407858:	ldp	x19, x20, [sp, #16]
  40785c:	ldp	x21, x22, [sp, #32]
  407860:	ldp	x23, x24, [sp, #48]
  407864:	ldp	x25, x26, [sp, #64]
  407868:	ldp	x27, x28, [sp, #80]
  40786c:	ldp	x29, x30, [sp], #128
  407870:	ret
  407874:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  407878:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40787c:	mov	x2, #0xe                   	// #14
  407880:	add	x0, x0, #0x118
  407884:	ldr	x3, [x3, #3992]
  407888:	mov	x1, #0x1                   	// #1
  40788c:	mov	x21, #0xffffffffffffffff    	// #-1
  407890:	ldr	x3, [x3]
  407894:	bl	404eb0 <fwrite@plt>
  407898:	ldr	x0, [sp, #104]
  40789c:	ldp	x25, x26, [sp, #64]
  4078a0:	ldp	x27, x28, [sp, #80]
  4078a4:	str	xzr, [x0]
  4078a8:	b	407818 <getcmdline@@Base+0x148>
  4078ac:	nop

00000000004078b0 <makeargs@@Base>:
  4078b0:	stp	x29, x30, [sp, #-80]!
  4078b4:	mov	x29, sp
  4078b8:	stp	x19, x20, [sp, #16]
  4078bc:	mov	x19, x0
  4078c0:	stp	x23, x24, [sp, #48]
  4078c4:	mov	x23, x1
  4078c8:	stp	x25, x26, [sp, #64]
  4078cc:	ldrb	w0, [x0]
  4078d0:	cbz	w0, 407994 <makeargs@@Base+0xe4>
  4078d4:	stp	x21, x22, [sp, #32]
  4078d8:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4078dc:	add	x22, x22, #0x1f8
  4078e0:	sub	w24, w2, #0x1
  4078e4:	add	x22, x22, #0x70
  4078e8:	mov	x20, #0x0                   	// #0
  4078ec:	mov	w25, #0x22                  	// #34
  4078f0:	b	407918 <makeargs@@Base+0x68>
  4078f4:	add	x0, x21, #0x1
  4078f8:	str	x0, [x23, x20, lsl #3]
  4078fc:	bl	404e90 <strchr@plt>
  407900:	cbz	x0, 4079c4 <makeargs@@Base+0x114>
  407904:	mov	x19, x0
  407908:	add	x20, x20, #0x1
  40790c:	strb	wzr, [x19], #1
  407910:	ldrb	w0, [x0, #1]
  407914:	cbz	w0, 407970 <makeargs@@Base+0xc0>
  407918:	mov	x1, x22
  40791c:	mov	x0, x19
  407920:	bl	404e80 <strspn@plt>
  407924:	ldrb	w1, [x19, x0]
  407928:	add	x21, x19, x0
  40792c:	mov	w26, w20
  407930:	cbz	w1, 407970 <makeargs@@Base+0xc0>
  407934:	cmp	w24, w20
  407938:	b.le	40799c <makeargs@@Base+0xec>
  40793c:	cmp	w1, #0x27
  407940:	add	w26, w20, #0x1
  407944:	ccmp	w1, w25, #0x4, ne  // ne = any
  407948:	b.eq	4078f4 <makeargs@@Base+0x44>  // b.none
  40794c:	str	x21, [x23, x20, lsl #3]
  407950:	mov	x1, x22
  407954:	mov	x0, x21
  407958:	bl	404f90 <strcspn@plt>
  40795c:	mov	x1, x0
  407960:	add	x0, x21, x0
  407964:	ldrb	w1, [x21, x1]
  407968:	cbnz	w1, 407904 <makeargs@@Base+0x54>
  40796c:	nop
  407970:	ldp	x21, x22, [sp, #32]
  407974:	add	x23, x23, w26, sxtw #3
  407978:	mov	w0, w26
  40797c:	ldp	x19, x20, [sp, #16]
  407980:	ldp	x25, x26, [sp, #64]
  407984:	str	xzr, [x23]
  407988:	ldp	x23, x24, [sp, #48]
  40798c:	ldp	x29, x30, [sp], #80
  407990:	ret
  407994:	mov	w26, #0x0                   	// #0
  407998:	b	407978 <makeargs@@Base+0xc8>
  40799c:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  4079a0:	mov	x2, #0x1e                  	// #30
  4079a4:	mov	x1, #0x1                   	// #1
  4079a8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4079ac:	ldr	x3, [x3, #3992]
  4079b0:	add	x0, x0, #0x130
  4079b4:	ldr	x3, [x3]
  4079b8:	bl	404eb0 <fwrite@plt>
  4079bc:	mov	w0, #0x1                   	// #1
  4079c0:	bl	404b70 <exit@plt>
  4079c4:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  4079c8:	mov	x2, #0x1b                  	// #27
  4079cc:	mov	x1, #0x1                   	// #1
  4079d0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4079d4:	ldr	x3, [x3, #3992]
  4079d8:	add	x0, x0, #0x150
  4079dc:	ldr	x3, [x3]
  4079e0:	bl	404eb0 <fwrite@plt>
  4079e4:	mov	w0, #0x1                   	// #1
  4079e8:	bl	404b70 <exit@plt>
  4079ec:	nop

00000000004079f0 <print_nlmsg_timestamp@@Base>:
  4079f0:	stp	x29, x30, [sp, #-64]!
  4079f4:	mov	x29, sp
  4079f8:	ldr	w2, [x1, #16]
  4079fc:	stp	x19, x20, [sp, #16]
  407a00:	mov	x20, x0
  407a04:	add	x0, sp, #0x38
  407a08:	str	x21, [sp, #32]
  407a0c:	ldr	w21, [x1, #20]
  407a10:	str	x2, [sp, #56]
  407a14:	bl	404c60 <localtime@plt>
  407a18:	bl	404f20 <asctime@plt>
  407a1c:	mov	x19, x0
  407a20:	bl	404b60 <strlen@plt>
  407a24:	add	x4, x19, x0
  407a28:	mov	x3, x21
  407a2c:	mov	x2, x19
  407a30:	mov	x0, x20
  407a34:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407a38:	sturb	wzr, [x4, #-1]
  407a3c:	add	x1, x1, #0x170
  407a40:	bl	405020 <fprintf@plt>
  407a44:	ldp	x19, x20, [sp, #16]
  407a48:	ldr	x21, [sp, #32]
  407a4c:	ldp	x29, x30, [sp], #64
  407a50:	ret
  407a54:	nop

0000000000407a58 <int_to_str@@Base>:
  407a58:	stp	x29, x30, [sp, #-32]!
  407a5c:	mov	w2, w0
  407a60:	mov	x0, x1
  407a64:	mov	x29, sp
  407a68:	str	x19, [sp, #16]
  407a6c:	mov	x19, x1
  407a70:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407a74:	add	x1, x1, #0x188
  407a78:	bl	404bf0 <sprintf@plt>
  407a7c:	mov	x0, x19
  407a80:	ldr	x19, [sp, #16]
  407a84:	ldp	x29, x30, [sp], #32
  407a88:	ret
  407a8c:	nop

0000000000407a90 <get_guid@@Base>:
  407a90:	stp	x29, x30, [sp, #-64]!
  407a94:	mov	x29, sp
  407a98:	stp	x19, x20, [sp, #16]
  407a9c:	mov	x20, x1
  407aa0:	stp	x21, x22, [sp, #32]
  407aa4:	mov	x21, x0
  407aa8:	mov	x0, x1
  407aac:	bl	404b60 <strlen@plt>
  407ab0:	cmp	x0, #0x17
  407ab4:	b.ne	407b44 <get_guid@@Base+0xb4>  // b.any
  407ab8:	add	x19, x20, #0x2
  407abc:	add	x1, x20, #0x17
  407ac0:	mov	x2, x19
  407ac4:	nop
  407ac8:	ldrb	w0, [x2]
  407acc:	add	x2, x2, #0x3
  407ad0:	cmp	w0, #0x3a
  407ad4:	b.ne	407b44 <get_guid@@Base+0xb4>  // b.any
  407ad8:	cmp	x2, x1
  407adc:	b.ne	407ac8 <get_guid@@Base+0x38>  // b.any
  407ae0:	add	x22, sp, #0x38
  407ae4:	mov	w20, #0x38                  	// #56
  407ae8:	str	xzr, [x21]
  407aec:	nop
  407af0:	mov	w2, #0x10                  	// #16
  407af4:	mov	x1, x22
  407af8:	sub	x0, x19, #0x2
  407afc:	bl	404b50 <strtoul@plt>
  407b00:	ldr	x2, [sp, #56]
  407b04:	cmp	x0, #0xff
  407b08:	lsl	x0, x0, x20
  407b0c:	sub	w20, w20, #0x8
  407b10:	ccmp	x2, x19, #0x0, ls  // ls = plast
  407b14:	b.ne	407b44 <get_guid@@Base+0xb4>  // b.any
  407b18:	ldr	x2, [x21]
  407b1c:	add	x19, x19, #0x3
  407b20:	cmn	w20, #0x8
  407b24:	orr	x0, x2, x0
  407b28:	str	x0, [x21]
  407b2c:	b.ne	407af0 <get_guid@@Base+0x60>  // b.any
  407b30:	mov	w0, #0x0                   	// #0
  407b34:	ldp	x19, x20, [sp, #16]
  407b38:	ldp	x21, x22, [sp, #32]
  407b3c:	ldp	x29, x30, [sp], #64
  407b40:	ret
  407b44:	mov	w0, #0xffffffff            	// #-1
  407b48:	ldp	x19, x20, [sp, #16]
  407b4c:	ldp	x21, x22, [sp, #32]
  407b50:	ldp	x29, x30, [sp], #64
  407b54:	ret

0000000000407b58 <get_real_family@@Base>:
  407b58:	cmp	w0, #0x5
  407b5c:	mov	w0, w1
  407b60:	b.ne	407b78 <get_real_family@@Base+0x20>  // b.any
  407b64:	cmp	w1, #0x80
  407b68:	b.eq	407b7c <get_real_family@@Base+0x24>  // b.none
  407b6c:	cmp	w1, #0x81
  407b70:	mov	w1, #0xa                   	// #10
  407b74:	csel	w0, w0, w1, ne  // ne = any
  407b78:	ret
  407b7c:	mov	w0, #0x2                   	// #2
  407b80:	ret
  407b84:	nop

0000000000407b88 <get_rtnl_link_stats_rta@@Base>:
  407b88:	sub	sp, sp, #0x990
  407b8c:	stp	x29, x30, [sp]
  407b90:	mov	x29, sp
  407b94:	stp	x21, x22, [sp, #32]
  407b98:	ldr	x22, [x1, #184]
  407b9c:	stp	x19, x20, [sp, #16]
  407ba0:	mov	x19, x0
  407ba4:	str	x23, [sp, #48]
  407ba8:	mov	x20, x0
  407bac:	mov	w23, #0xc0                  	// #192
  407bb0:	cbz	x22, 407c34 <get_rtnl_link_stats_rta@@Base+0xac>
  407bb4:	ldrh	w0, [x22]
  407bb8:	sxtw	x21, w23
  407bbc:	sub	w0, w0, #0x4
  407bc0:	cmp	w23, w0
  407bc4:	b.gt	407c18 <get_rtnl_link_stats_rta@@Base+0x90>
  407bc8:	mov	x2, x21
  407bcc:	add	x1, x22, #0x4
  407bd0:	mov	x0, x20
  407bd4:	bl	404b30 <memcpy@plt>
  407bd8:	cmp	x20, x19
  407bdc:	b.eq	407bfc <get_rtnl_link_stats_rta@@Base+0x74>  // b.none
  407be0:	mov	x1, #0x0                   	// #0
  407be4:	nop
  407be8:	ldr	w2, [x20, x1, lsl #2]
  407bec:	str	x2, [x19, x1, lsl #3]
  407bf0:	add	x1, x1, #0x1
  407bf4:	cmp	x1, #0x18
  407bf8:	b.ne	407be8 <get_rtnl_link_stats_rta@@Base+0x60>  // b.any
  407bfc:	mov	w0, w23
  407c00:	ldp	x29, x30, [sp]
  407c04:	ldp	x19, x20, [sp, #16]
  407c08:	ldp	x21, x22, [sp, #32]
  407c0c:	ldr	x23, [sp, #48]
  407c10:	add	sp, sp, #0x990
  407c14:	ret
  407c18:	sub	w2, w23, w0
  407c1c:	sxtw	x21, w0
  407c20:	add	x0, x20, x21
  407c24:	mov	w1, #0x0                   	// #0
  407c28:	sxtw	x2, w2
  407c2c:	bl	404cf0 <memset@plt>
  407c30:	b	407bc8 <get_rtnl_link_stats_rta@@Base+0x40>
  407c34:	ldr	x22, [x1, #56]
  407c38:	add	x20, sp, #0x48
  407c3c:	mov	w23, #0x60                  	// #96
  407c40:	cbnz	x22, 407bb4 <get_rtnl_link_stats_rta@@Base+0x2c>
  407c44:	ldr	x2, [x1, #96]
  407c48:	cbz	x2, 407ce0 <get_rtnl_link_stats_rta@@Base+0x158>
  407c4c:	ldrh	w3, [x2], #4
  407c50:	add	x0, sp, #0x48
  407c54:	mov	w1, #0x128                 	// #296
  407c58:	sub	w3, w3, #0x4
  407c5c:	bl	40c8b8 <parse_rtattr@@Base>
  407c60:	ldr	x0, [sp, #96]
  407c64:	cbz	x0, 407cd8 <get_rtnl_link_stats_rta@@Base+0x150>
  407c68:	stp	xzr, xzr, [x19]
  407c6c:	stp	xzr, xzr, [x19, #16]
  407c70:	stp	xzr, xzr, [x19, #32]
  407c74:	stp	xzr, xzr, [x19, #48]
  407c78:	stp	xzr, xzr, [x19, #64]
  407c7c:	stp	xzr, xzr, [x19, #80]
  407c80:	stp	xzr, xzr, [x19, #96]
  407c84:	stp	xzr, xzr, [x19, #112]
  407c88:	stp	xzr, xzr, [x19, #128]
  407c8c:	stp	xzr, xzr, [x19, #144]
  407c90:	stp	xzr, xzr, [x19, #160]
  407c94:	stp	xzr, xzr, [x19, #176]
  407c98:	ldur	x1, [x0, #12]
  407c9c:	str	x1, [x19]
  407ca0:	ldur	x1, [x0, #20]
  407ca4:	str	x1, [x19, #16]
  407ca8:	ldur	x1, [x0, #44]
  407cac:	str	x1, [x19, #8]
  407cb0:	ldur	x1, [x0, #52]
  407cb4:	str	x1, [x19, #24]
  407cb8:	ldur	x1, [x0, #108]
  407cbc:	str	x1, [x19, #32]
  407cc0:	ldur	x1, [x0, #116]
  407cc4:	str	x1, [x19, #40]
  407cc8:	ldur	x1, [x0, #188]
  407ccc:	str	x1, [x19, #64]
  407cd0:	ldur	x0, [x0, #252]
  407cd4:	str	x0, [x19, #104]
  407cd8:	mov	w23, #0xc0                  	// #192
  407cdc:	b	407bfc <get_rtnl_link_stats_rta@@Base+0x74>
  407ce0:	mov	w23, #0xffffffff            	// #-1
  407ce4:	b	407bfc <get_rtnl_link_stats_rta@@Base+0x74>

0000000000407ce8 <strlcpy@@Base>:
  407ce8:	stp	x29, x30, [sp, #-48]!
  407cec:	mov	x29, sp
  407cf0:	stp	x19, x20, [sp, #16]
  407cf4:	mov	x19, x2
  407cf8:	stp	x21, x22, [sp, #32]
  407cfc:	mov	x21, x1
  407d00:	mov	x22, x0
  407d04:	mov	x0, x1
  407d08:	bl	404b60 <strlen@plt>
  407d0c:	mov	x20, x0
  407d10:	cbnz	x19, 407d28 <strlcpy@@Base+0x40>
  407d14:	mov	x0, x20
  407d18:	ldp	x19, x20, [sp, #16]
  407d1c:	ldp	x21, x22, [sp, #32]
  407d20:	ldp	x29, x30, [sp], #48
  407d24:	ret
  407d28:	sub	x19, x19, #0x1
  407d2c:	mov	x1, x21
  407d30:	cmp	x19, x0
  407d34:	mov	x0, x22
  407d38:	csel	x19, x19, x20, ls  // ls = plast
  407d3c:	mov	x2, x19
  407d40:	bl	404b30 <memcpy@plt>
  407d44:	strb	wzr, [x22, x19]
  407d48:	mov	x0, x20
  407d4c:	ldp	x19, x20, [sp, #16]
  407d50:	ldp	x21, x22, [sp, #32]
  407d54:	ldp	x29, x30, [sp], #48
  407d58:	ret
  407d5c:	nop

0000000000407d60 <strlcat@@Base>:
  407d60:	stp	x29, x30, [sp, #-48]!
  407d64:	mov	x29, sp
  407d68:	stp	x19, x20, [sp, #16]
  407d6c:	mov	x20, x2
  407d70:	stp	x21, x22, [sp, #32]
  407d74:	mov	x21, x1
  407d78:	mov	x22, x0
  407d7c:	bl	404b60 <strlen@plt>
  407d80:	mov	x19, x0
  407d84:	cmp	x0, x20
  407d88:	b.cc	407da8 <strlcat@@Base+0x48>  // b.lo, b.ul, b.last
  407d8c:	mov	x0, x21
  407d90:	bl	404b60 <strlen@plt>
  407d94:	add	x0, x0, x19
  407d98:	ldp	x19, x20, [sp, #16]
  407d9c:	ldp	x21, x22, [sp, #32]
  407da0:	ldp	x29, x30, [sp], #48
  407da4:	ret
  407da8:	sub	x2, x20, x0
  407dac:	mov	x1, x21
  407db0:	add	x0, x22, x0
  407db4:	bl	407ce8 <strlcpy@@Base>
  407db8:	add	x0, x0, x19
  407dbc:	ldp	x19, x20, [sp, #16]
  407dc0:	ldp	x21, x22, [sp, #32]
  407dc4:	ldp	x29, x30, [sp], #48
  407dc8:	ret
  407dcc:	nop

0000000000407dd0 <drop_cap@@Base>:
  407dd0:	stp	x29, x30, [sp, #-48]!
  407dd4:	mov	x29, sp
  407dd8:	bl	404c00 <getuid@plt>
  407ddc:	cbnz	w0, 407de8 <drop_cap@@Base+0x18>
  407de0:	ldp	x29, x30, [sp], #48
  407de4:	ret
  407de8:	bl	404bb0 <geteuid@plt>
  407dec:	cbz	w0, 407de0 <drop_cap@@Base+0x10>
  407df0:	str	x19, [sp, #16]
  407df4:	bl	404e20 <cap_get_proc@plt>
  407df8:	mov	x19, x0
  407dfc:	cbz	x0, 407e48 <drop_cap@@Base+0x78>
  407e00:	add	x3, sp, #0x2c
  407e04:	mov	w2, #0x2                   	// #2
  407e08:	mov	w1, #0xc                   	// #12
  407e0c:	bl	404d20 <cap_get_flag@plt>
  407e10:	cbnz	w0, 407e48 <drop_cap@@Base+0x78>
  407e14:	ldr	w0, [sp, #44]
  407e18:	cbnz	w0, 407e34 <drop_cap@@Base+0x64>
  407e1c:	mov	x0, x19
  407e20:	bl	404ef0 <cap_clear@plt>
  407e24:	cbnz	w0, 407e48 <drop_cap@@Base+0x78>
  407e28:	mov	x0, x19
  407e2c:	bl	404d50 <cap_set_proc@plt>
  407e30:	cbnz	w0, 407e48 <drop_cap@@Base+0x78>
  407e34:	mov	x0, x19
  407e38:	bl	404f30 <cap_free@plt>
  407e3c:	ldr	x19, [sp, #16]
  407e40:	ldp	x29, x30, [sp], #48
  407e44:	ret
  407e48:	mov	w0, #0x1                   	// #1
  407e4c:	bl	404b70 <exit@plt>

0000000000407e50 <get_time@@Base>:
  407e50:	stp	x29, x30, [sp, #-64]!
  407e54:	mov	x29, sp
  407e58:	stp	x19, x20, [sp, #16]
  407e5c:	mov	x19, x1
  407e60:	str	x21, [sp, #32]
  407e64:	mov	x21, x0
  407e68:	mov	x0, x1
  407e6c:	add	x1, sp, #0x38
  407e70:	bl	404ba0 <strtod@plt>
  407e74:	ldr	x20, [sp, #56]
  407e78:	cmp	x20, x19
  407e7c:	b.eq	407f94 <get_time@@Base+0x144>  // b.none
  407e80:	str	d8, [sp, #40]
  407e84:	fmov	d8, d0
  407e88:	ldrb	w0, [x20]
  407e8c:	cbz	w0, 407f60 <get_time@@Base+0x110>
  407e90:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407e94:	mov	x0, x20
  407e98:	add	x1, x1, #0x720
  407e9c:	bl	404d30 <strcasecmp@plt>
  407ea0:	cbz	w0, 407f50 <get_time@@Base+0x100>
  407ea4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  407ea8:	mov	x0, x20
  407eac:	add	x1, x1, #0xd68
  407eb0:	bl	404d30 <strcasecmp@plt>
  407eb4:	cbz	w0, 407f50 <get_time@@Base+0x100>
  407eb8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  407ebc:	mov	x0, x20
  407ec0:	add	x1, x1, #0xd70
  407ec4:	bl	404d30 <strcasecmp@plt>
  407ec8:	cbz	w0, 407f50 <get_time@@Base+0x100>
  407ecc:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  407ed0:	mov	x0, x20
  407ed4:	add	x1, x1, #0xd78
  407ed8:	bl	404d30 <strcasecmp@plt>
  407edc:	cbz	w0, 407f80 <get_time@@Base+0x130>
  407ee0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  407ee4:	mov	x0, x20
  407ee8:	add	x1, x1, #0xd80
  407eec:	bl	404d30 <strcasecmp@plt>
  407ef0:	cbz	w0, 407f80 <get_time@@Base+0x130>
  407ef4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  407ef8:	mov	x0, x20
  407efc:	add	x1, x1, #0xd88
  407f00:	bl	404d30 <strcasecmp@plt>
  407f04:	cbz	w0, 407f80 <get_time@@Base+0x130>
  407f08:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407f0c:	mov	x0, x20
  407f10:	add	x1, x1, #0x190
  407f14:	bl	404d30 <strcasecmp@plt>
  407f18:	cbz	w0, 407f60 <get_time@@Base+0x110>
  407f1c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407f20:	mov	x0, x20
  407f24:	add	x1, x1, #0x198
  407f28:	bl	404d30 <strcasecmp@plt>
  407f2c:	cbz	w0, 407f60 <get_time@@Base+0x110>
  407f30:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407f34:	mov	x0, x20
  407f38:	add	x1, x1, #0x1a0
  407f3c:	bl	404d30 <strcasecmp@plt>
  407f40:	cbz	w0, 407f60 <get_time@@Base+0x110>
  407f44:	mov	w0, #0xffffffff            	// #-1
  407f48:	ldr	d8, [sp, #40]
  407f4c:	b	407f70 <get_time@@Base+0x120>
  407f50:	mov	x0, #0x848000000000        	// #145685290680320
  407f54:	movk	x0, #0x412e, lsl #48
  407f58:	fmov	d0, x0
  407f5c:	fmul	d8, d8, d0
  407f60:	fcvtzu	w1, d8
  407f64:	mov	w0, #0x0                   	// #0
  407f68:	ldr	d8, [sp, #40]
  407f6c:	str	w1, [x21]
  407f70:	ldp	x19, x20, [sp, #16]
  407f74:	ldr	x21, [sp, #32]
  407f78:	ldp	x29, x30, [sp], #64
  407f7c:	ret
  407f80:	mov	x0, #0x400000000000        	// #70368744177664
  407f84:	movk	x0, #0x408f, lsl #48
  407f88:	fmov	d0, x0
  407f8c:	fmul	d8, d8, d0
  407f90:	b	407f60 <get_time@@Base+0x110>
  407f94:	mov	w0, #0xffffffff            	// #-1
  407f98:	b	407f70 <get_time@@Base+0x120>
  407f9c:	nop

0000000000407fa0 <sprint_time@@Base>:
  407fa0:	stp	x29, x30, [sp, #-32]!
  407fa4:	mov	w3, w0
  407fa8:	mov	w0, #0x423f                	// #16959
  407fac:	mov	x29, sp
  407fb0:	str	x19, [sp, #16]
  407fb4:	movk	w0, #0xf, lsl #16
  407fb8:	ucvtf	d0, w3
  407fbc:	cmp	w3, w0
  407fc0:	mov	x19, x1
  407fc4:	b.hi	408028 <sprint_time@@Base+0x88>  // b.pmore
  407fc8:	cmp	w3, #0x3e7
  407fcc:	b.hi	407ff4 <sprint_time@@Base+0x54>  // b.pmore
  407fd0:	mov	x0, x19
  407fd4:	mov	x1, #0x3f                  	// #63
  407fd8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  407fdc:	add	x2, x2, #0x1b8
  407fe0:	bl	404c40 <snprintf@plt>
  407fe4:	mov	x0, x19
  407fe8:	ldr	x19, [sp, #16]
  407fec:	ldp	x29, x30, [sp], #32
  407ff0:	ret
  407ff4:	mov	x0, #0x400000000000        	// #70368744177664
  407ff8:	mov	x1, #0x3f                  	// #63
  407ffc:	movk	x0, #0x408f, lsl #48
  408000:	fmov	d1, x0
  408004:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408008:	mov	x0, x19
  40800c:	fdiv	d0, d0, d1
  408010:	add	x2, x2, #0x1b0
  408014:	bl	404c40 <snprintf@plt>
  408018:	mov	x0, x19
  40801c:	ldr	x19, [sp, #16]
  408020:	ldp	x29, x30, [sp], #32
  408024:	ret
  408028:	mov	x0, #0x848000000000        	// #145685290680320
  40802c:	mov	x1, #0x3f                  	// #63
  408030:	movk	x0, #0x412e, lsl #48
  408034:	fmov	d1, x0
  408038:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40803c:	mov	x0, x19
  408040:	fdiv	d0, d0, d1
  408044:	add	x2, x2, #0x1a8
  408048:	bl	404c40 <snprintf@plt>
  40804c:	mov	x0, x19
  408050:	ldr	x19, [sp, #16]
  408054:	ldp	x29, x30, [sp], #32
  408058:	ret
  40805c:	nop

0000000000408060 <get_time64@@Base>:
  408060:	stp	x29, x30, [sp, #-64]!
  408064:	mov	x29, sp
  408068:	stp	x19, x20, [sp, #16]
  40806c:	mov	x19, x1
  408070:	str	x21, [sp, #32]
  408074:	mov	x21, x0
  408078:	mov	x0, x1
  40807c:	add	x1, sp, #0x38
  408080:	bl	404ba0 <strtod@plt>
  408084:	ldr	x20, [sp, #56]
  408088:	cmp	x20, x19
  40808c:	b.eq	4081f4 <get_time64@@Base+0x194>  // b.none
  408090:	str	d8, [sp, #40]
  408094:	fmov	d8, d0
  408098:	ldrb	w0, [x20]
  40809c:	cbz	w0, 4081ac <get_time64@@Base+0x14c>
  4080a0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4080a4:	mov	x0, x20
  4080a8:	add	x1, x1, #0x720
  4080ac:	bl	404d30 <strcasecmp@plt>
  4080b0:	cbz	w0, 40819c <get_time64@@Base+0x13c>
  4080b4:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4080b8:	mov	x0, x20
  4080bc:	add	x1, x1, #0xd68
  4080c0:	bl	404d30 <strcasecmp@plt>
  4080c4:	cbz	w0, 40819c <get_time64@@Base+0x13c>
  4080c8:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4080cc:	mov	x0, x20
  4080d0:	add	x1, x1, #0xd70
  4080d4:	bl	404d30 <strcasecmp@plt>
  4080d8:	cbz	w0, 40819c <get_time64@@Base+0x13c>
  4080dc:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4080e0:	mov	x0, x20
  4080e4:	add	x1, x1, #0xd78
  4080e8:	bl	404d30 <strcasecmp@plt>
  4080ec:	cbz	w0, 4081cc <get_time64@@Base+0x16c>
  4080f0:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  4080f4:	mov	x0, x20
  4080f8:	add	x1, x1, #0xd80
  4080fc:	bl	404d30 <strcasecmp@plt>
  408100:	cbz	w0, 4081cc <get_time64@@Base+0x16c>
  408104:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  408108:	mov	x0, x20
  40810c:	add	x1, x1, #0xd88
  408110:	bl	404d30 <strcasecmp@plt>
  408114:	cbz	w0, 4081cc <get_time64@@Base+0x16c>
  408118:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40811c:	mov	x0, x20
  408120:	add	x1, x1, #0x190
  408124:	bl	404d30 <strcasecmp@plt>
  408128:	cbz	w0, 4081e0 <get_time64@@Base+0x180>
  40812c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408130:	mov	x0, x20
  408134:	add	x1, x1, #0x198
  408138:	bl	404d30 <strcasecmp@plt>
  40813c:	cbz	w0, 4081e0 <get_time64@@Base+0x180>
  408140:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408144:	mov	x0, x20
  408148:	add	x1, x1, #0x1a0
  40814c:	bl	404d30 <strcasecmp@plt>
  408150:	cbz	w0, 4081e0 <get_time64@@Base+0x180>
  408154:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408158:	mov	x0, x20
  40815c:	add	x1, x1, #0x1c0
  408160:	bl	404d30 <strcasecmp@plt>
  408164:	cbz	w0, 4081ac <get_time64@@Base+0x14c>
  408168:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40816c:	mov	x0, x20
  408170:	add	x1, x1, #0x1c8
  408174:	bl	404d30 <strcasecmp@plt>
  408178:	cbz	w0, 4081ac <get_time64@@Base+0x14c>
  40817c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408180:	mov	x0, x20
  408184:	add	x1, x1, #0x1d0
  408188:	bl	404d30 <strcasecmp@plt>
  40818c:	cbz	w0, 4081ac <get_time64@@Base+0x14c>
  408190:	mov	w0, #0xffffffff            	// #-1
  408194:	ldr	d8, [sp, #40]
  408198:	b	4081bc <get_time64@@Base+0x15c>
  40819c:	mov	x0, #0xcd6500000000        	// #225833675390976
  4081a0:	movk	x0, #0x41cd, lsl #48
  4081a4:	fmov	d0, x0
  4081a8:	fmul	d8, d8, d0
  4081ac:	fcvtzs	d8, d8
  4081b0:	mov	w0, #0x0                   	// #0
  4081b4:	str	d8, [x21]
  4081b8:	ldr	d8, [sp, #40]
  4081bc:	ldp	x19, x20, [sp, #16]
  4081c0:	ldr	x21, [sp, #32]
  4081c4:	ldp	x29, x30, [sp], #64
  4081c8:	ret
  4081cc:	mov	x0, #0x848000000000        	// #145685290680320
  4081d0:	movk	x0, #0x412e, lsl #48
  4081d4:	fmov	d0, x0
  4081d8:	fmul	d8, d8, d0
  4081dc:	b	4081ac <get_time64@@Base+0x14c>
  4081e0:	mov	x0, #0x400000000000        	// #70368744177664
  4081e4:	movk	x0, #0x408f, lsl #48
  4081e8:	fmov	d0, x0
  4081ec:	fmul	d8, d8, d0
  4081f0:	b	4081ac <get_time64@@Base+0x14c>
  4081f4:	mov	w0, #0xffffffff            	// #-1
  4081f8:	b	4081bc <get_time64@@Base+0x15c>
  4081fc:	nop

0000000000408200 <sprint_time64@@Base>:
  408200:	stp	x29, x30, [sp, #-32]!
  408204:	mov	x3, x0
  408208:	mov	x0, #0xc9ff                	// #51711
  40820c:	mov	x29, sp
  408210:	str	x19, [sp, #16]
  408214:	movk	x0, #0x3b9a, lsl #16
  408218:	scvtf	d0, x3
  40821c:	cmp	x3, x0
  408220:	mov	x19, x1
  408224:	b.gt	4082a8 <sprint_time64@@Base+0xa8>
  408228:	mov	x0, #0x423f                	// #16959
  40822c:	movk	x0, #0xf, lsl #16
  408230:	cmp	x3, x0
  408234:	b.gt	408274 <sprint_time64@@Base+0x74>
  408238:	cmp	x3, #0x3e7
  40823c:	b.le	4082dc <sprint_time64@@Base+0xdc>
  408240:	mov	x0, #0x400000000000        	// #70368744177664
  408244:	mov	x1, #0x3f                  	// #63
  408248:	movk	x0, #0x408f, lsl #48
  40824c:	fmov	d1, x0
  408250:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408254:	mov	x0, x19
  408258:	fdiv	d0, d0, d1
  40825c:	add	x2, x2, #0x1e8
  408260:	bl	404c40 <snprintf@plt>
  408264:	mov	x0, x19
  408268:	ldr	x19, [sp, #16]
  40826c:	ldp	x29, x30, [sp], #32
  408270:	ret
  408274:	mov	x0, #0x848000000000        	// #145685290680320
  408278:	mov	x1, #0x3f                  	// #63
  40827c:	movk	x0, #0x412e, lsl #48
  408280:	fmov	d1, x0
  408284:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408288:	mov	x0, x19
  40828c:	fdiv	d0, d0, d1
  408290:	add	x2, x2, #0x1e0
  408294:	bl	404c40 <snprintf@plt>
  408298:	mov	x0, x19
  40829c:	ldr	x19, [sp, #16]
  4082a0:	ldp	x29, x30, [sp], #32
  4082a4:	ret
  4082a8:	mov	x0, #0xcd6500000000        	// #225833675390976
  4082ac:	mov	x1, #0x3f                  	// #63
  4082b0:	movk	x0, #0x41cd, lsl #48
  4082b4:	fmov	d1, x0
  4082b8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4082bc:	mov	x0, x19
  4082c0:	fdiv	d0, d0, d1
  4082c4:	add	x2, x2, #0x1d8
  4082c8:	bl	404c40 <snprintf@plt>
  4082cc:	mov	x0, x19
  4082d0:	ldr	x19, [sp, #16]
  4082d4:	ldp	x29, x30, [sp], #32
  4082d8:	ret
  4082dc:	mov	x0, x19
  4082e0:	mov	x1, #0x3f                  	// #63
  4082e4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4082e8:	add	x2, x2, #0x1f0
  4082ec:	bl	404c40 <snprintf@plt>
  4082f0:	mov	x0, x19
  4082f4:	ldr	x19, [sp, #16]
  4082f8:	ldp	x29, x30, [sp], #32
  4082fc:	ret
  408300:	ldr	x1, [x0, #48]
  408304:	ldr	x2, [x1], #-48
  408308:	cmp	x0, x1
  40830c:	b.eq	40836c <sprint_time64@@Base+0x16c>  // b.none
  408310:	stp	x29, x30, [sp, #-32]!
  408314:	mov	x29, sp
  408318:	stp	x19, x20, [sp, #16]
  40831c:	mov	x20, x0
  408320:	sub	x19, x2, #0x30
  408324:	nop
  408328:	ldp	x3, x4, [x1, #16]
  40832c:	mov	x0, x1
  408330:	str	x3, [x4]
  408334:	cbz	x3, 40833c <sprint_time64@@Base+0x13c>
  408338:	str	x4, [x3, #8]
  40833c:	ldr	x1, [x1, #56]
  408340:	str	x1, [x2, #8]
  408344:	str	x2, [x1]
  408348:	bl	404e50 <free@plt>
  40834c:	ldr	x2, [x19, #48]
  408350:	mov	x1, x19
  408354:	cmp	x20, x19
  408358:	sub	x19, x2, #0x30
  40835c:	b.ne	408328 <sprint_time64@@Base+0x128>  // b.any
  408360:	ldp	x19, x20, [sp, #16]
  408364:	ldp	x29, x30, [sp], #32
  408368:	ret
  40836c:	ret

0000000000408370 <namehash@@Base>:
  408370:	ldrb	w1, [x0]
  408374:	mov	x2, x0
  408378:	mov	w0, #0x1505                	// #5381
  40837c:	cbz	w1, 408390 <namehash@@Base+0x20>
  408380:	add	w3, w1, w0, lsl #5
  408384:	ldrb	w1, [x2, #1]!
  408388:	add	w0, w0, w3
  40838c:	cbnz	w1, 408380 <namehash@@Base+0x10>
  408390:	ret
  408394:	nop
  408398:	stp	x29, x30, [sp, #-64]!
  40839c:	mov	x29, sp
  4083a0:	stp	x19, x20, [sp, #16]
  4083a4:	mov	x20, x2
  4083a8:	stp	x21, x22, [sp, #32]
  4083ac:	mov	x21, x1
  4083b0:	mov	x22, x0
  4083b4:	mov	x0, x1
  4083b8:	stp	x23, x24, [sp, #48]
  4083bc:	bl	404b60 <strlen@plt>
  4083c0:	mov	x23, x0
  4083c4:	add	x0, x0, #0x41
  4083c8:	bl	404c90 <malloc@plt>
  4083cc:	mov	x19, x0
  4083d0:	cbz	x0, 408450 <namehash@@Base+0xe0>
  4083d4:	ldr	w24, [x22, #4]
  4083d8:	add	x2, x23, #0x1
  4083dc:	mov	x1, x21
  4083e0:	add	x0, x0, #0x40
  4083e4:	str	w24, [x19, #36]
  4083e8:	bl	404b30 <memcpy@plt>
  4083ec:	ldrh	w1, [x22, #2]
  4083f0:	add	x0, x19, #0x30
  4083f4:	ldr	w2, [x22, #8]
  4083f8:	str	w2, [x19, #32]
  4083fc:	strh	w1, [x19, #40]
  408400:	cbz	x20, 408468 <namehash@@Base+0xf8>
  408404:	ldr	x1, [x20, #56]
  408408:	add	x2, x20, #0x30
  40840c:	stp	x2, x1, [x19, #48]
  408410:	str	x0, [x20, #56]
  408414:	str	x0, [x1]
  408418:	mov	x0, x21
  40841c:	bl	408370 <namehash@@Base>
  408420:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  408424:	and	x0, x0, #0x3ff
  408428:	add	x2, x1, #0xd08
  40842c:	add	x3, x19, #0x10
  408430:	ldr	x2, [x2, x0, lsl #3]
  408434:	str	x2, [x19, #16]
  408438:	cbz	x2, 408440 <namehash@@Base+0xd0>
  40843c:	str	x3, [x2, #8]
  408440:	add	x1, x1, #0xd08
  408444:	add	x2, x1, x0, lsl #3
  408448:	str	x2, [x19, #24]
  40844c:	str	x3, [x1, x0, lsl #3]
  408450:	mov	x0, x19
  408454:	ldp	x19, x20, [sp, #16]
  408458:	ldp	x21, x22, [sp, #32]
  40845c:	ldp	x23, x24, [sp, #48]
  408460:	ldp	x29, x30, [sp], #64
  408464:	ret
  408468:	and	x24, x24, #0x3ff
  40846c:	adrp	x1, 423000 <stderr@@GLIBC_2.17+0x1d40>
  408470:	add	x2, x1, #0xd08
  408474:	ldr	x2, [x2, x24, lsl #3]
  408478:	str	x2, [x19]
  40847c:	cbz	x2, 408484 <namehash@@Base+0x114>
  408480:	str	x19, [x2, #8]
  408484:	add	x1, x1, #0xd08
  408488:	stp	x0, x0, [x19, #48]
  40848c:	add	x2, x1, x24, lsl #3
  408490:	str	x2, [x19, #8]
  408494:	str	x19, [x1, x24, lsl #3]
  408498:	b	408418 <namehash@@Base+0xa8>
  40849c:	nop
  4084a0:	stp	x29, x30, [sp, #-48]!
  4084a4:	mov	x29, sp
  4084a8:	stp	x19, x20, [sp, #16]
  4084ac:	ldr	x19, [x2, #416]
  4084b0:	cbz	x19, 408524 <namehash@@Base+0x1b4>
  4084b4:	ldrh	w20, [x19], #4
  4084b8:	stp	x21, x22, [sp, #32]
  4084bc:	mov	x21, x0
  4084c0:	sub	w20, w20, #0x4
  4084c4:	mov	x22, x1
  4084c8:	cmp	w20, #0x3
  4084cc:	b.gt	408514 <namehash@@Base+0x1a4>
  4084d0:	b	408520 <namehash@@Base+0x1b0>
  4084d4:	cmp	w3, w20
  4084d8:	b.gt	408520 <namehash@@Base+0x1b0>
  4084dc:	ldrh	w4, [x19, #2]
  4084e0:	cmp	w4, #0x35
  4084e4:	b.ne	4084fc <namehash@@Base+0x18c>  // b.any
  4084e8:	mov	x2, x21
  4084ec:	add	x1, x19, #0x4
  4084f0:	mov	x0, x22
  4084f4:	bl	408398 <namehash@@Base+0x28>
  4084f8:	ldrh	w3, [x19]
  4084fc:	add	w3, w3, #0x3
  408500:	and	w3, w3, #0xfffffffc
  408504:	sub	w20, w20, w3
  408508:	cmp	w20, #0x3
  40850c:	add	x19, x19, w3, uxtw
  408510:	b.le	408520 <namehash@@Base+0x1b0>
  408514:	ldrh	w3, [x19]
  408518:	cmp	w3, #0x3
  40851c:	b.hi	4084d4 <namehash@@Base+0x164>  // b.pmore
  408520:	ldp	x21, x22, [sp, #32]
  408524:	ldp	x19, x20, [sp, #16]
  408528:	ldp	x29, x30, [sp], #48
  40852c:	ret

0000000000408530 <ll_remember_index@@Base>:
  408530:	sub	sp, sp, #0x200
  408534:	stp	x29, x30, [sp]
  408538:	mov	x29, sp
  40853c:	ldrh	w2, [x0, #4]
  408540:	stp	x19, x20, [sp, #16]
  408544:	mov	x19, x0
  408548:	sub	w0, w2, #0x10
  40854c:	and	w0, w0, #0xffff
  408550:	cmp	w0, #0x1
  408554:	b.hi	4086ec <ll_remember_index@@Base+0x1bc>  // b.pmore
  408558:	ldr	w3, [x19]
  40855c:	cmp	w3, #0x1f
  408560:	b.ls	4087b0 <ll_remember_index@@Base+0x280>  // b.plast
  408564:	ldr	w0, [x19, #20]
  408568:	adrp	x1, 423000 <stderr@@GLIBC_2.17+0x1d40>
  40856c:	add	x1, x1, #0xd08
  408570:	stp	x23, x24, [sp, #48]
  408574:	and	x4, x0, #0x3ff
  408578:	add	x23, x19, #0x10
  40857c:	ldr	x20, [x1, x4, lsl #3]
  408580:	cbnz	x20, 408590 <ll_remember_index@@Base+0x60>
  408584:	b	4086e0 <ll_remember_index@@Base+0x1b0>
  408588:	ldr	x20, [x20]
  40858c:	cbz	x20, 4086e0 <ll_remember_index@@Base+0x1b0>
  408590:	ldr	w1, [x20, #36]
  408594:	cmp	w0, w1
  408598:	b.ne	408588 <ll_remember_index@@Base+0x58>  // b.any
  40859c:	cmp	w2, #0x11
  4085a0:	b.eq	408750 <ll_remember_index@@Base+0x220>  // b.none
  4085a4:	add	x24, sp, #0x50
  4085a8:	sub	w3, w3, #0x20
  4085ac:	mov	x0, x24
  4085b0:	add	x2, x19, #0x20
  4085b4:	mov	w4, #0xffff8000            	// #-32768
  4085b8:	mov	w1, #0x35                  	// #53
  4085bc:	stp	x21, x22, [sp, #32]
  4085c0:	bl	40c7b8 <parse_rtattr_flags@@Base>
  4085c4:	ldr	x0, [sp, #104]
  4085c8:	cbz	x0, 408630 <ll_remember_index@@Base+0x100>
  4085cc:	ldr	w1, [x19, #24]
  4085d0:	add	x19, x0, #0x4
  4085d4:	str	w1, [x20, #32]
  4085d8:	add	x0, x20, #0x40
  4085dc:	mov	x1, x19
  4085e0:	bl	404df0 <strcmp@plt>
  4085e4:	cbz	w0, 408630 <ll_remember_index@@Base+0x100>
  4085e8:	ldp	x0, x1, [x20, #16]
  4085ec:	str	x0, [x1]
  4085f0:	cbz	x0, 4085f8 <ll_remember_index@@Base+0xc8>
  4085f4:	str	x1, [x0, #8]
  4085f8:	mov	x0, x19
  4085fc:	bl	408370 <namehash@@Base>
  408600:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  408604:	and	x0, x0, #0x3ff
  408608:	add	x2, x1, #0xd08
  40860c:	add	x3, x20, #0x10
  408610:	ldr	x2, [x2, x0, lsl #3]
  408614:	str	x2, [x20, #16]
  408618:	cbz	x2, 408620 <ll_remember_index@@Base+0xf0>
  40861c:	str	x3, [x2, #8]
  408620:	add	x1, x1, #0xd08
  408624:	add	x2, x1, x0, lsl #3
  408628:	str	x3, [x1, x0, lsl #3]
  40862c:	str	x2, [x20, #24]
  408630:	ldr	x21, [sp, #496]
  408634:	cbz	x21, 408798 <ll_remember_index@@Base+0x268>
  408638:	ldrh	w22, [x21], #4
  40863c:	str	x25, [sp, #64]
  408640:	ldr	x25, [x20, #48]
  408644:	sub	w22, w22, #0x4
  408648:	cmp	w22, #0x3
  40864c:	sub	x25, x25, #0x30
  408650:	b.gt	408694 <ll_remember_index@@Base+0x164>
  408654:	b	4086a8 <ll_remember_index@@Base+0x178>
  408658:	cmp	w19, w22
  40865c:	b.gt	4086a8 <ll_remember_index@@Base+0x178>
  408660:	ldrh	w2, [x21, #2]
  408664:	cmp	w2, #0x35
  408668:	b.ne	40867c <ll_remember_index@@Base+0x14c>  // b.any
  40866c:	bl	404df0 <strcmp@plt>
  408670:	cbnz	w0, 4086a8 <ll_remember_index@@Base+0x178>
  408674:	ldr	x25, [x25, #48]
  408678:	sub	x25, x25, #0x30
  40867c:	add	w19, w19, #0x3
  408680:	and	w19, w19, #0xfffffffc
  408684:	sub	w22, w22, w19
  408688:	cmp	w22, #0x3
  40868c:	add	x21, x21, w19, uxtw
  408690:	b.le	4086a8 <ll_remember_index@@Base+0x178>
  408694:	ldrh	w19, [x21]
  408698:	add	x1, x25, #0x40
  40869c:	add	x0, x21, #0x4
  4086a0:	cmp	w19, #0x3
  4086a4:	b.hi	408658 <ll_remember_index@@Base+0x128>  // b.pmore
  4086a8:	mov	x0, x20
  4086ac:	bl	408300 <sprint_time64@@Base+0x100>
  4086b0:	mov	x2, x24
  4086b4:	mov	x1, x23
  4086b8:	mov	x0, x20
  4086bc:	bl	4084a0 <namehash@@Base+0x130>
  4086c0:	mov	w0, #0x0                   	// #0
  4086c4:	ldp	x29, x30, [sp]
  4086c8:	ldp	x19, x20, [sp, #16]
  4086cc:	ldp	x21, x22, [sp, #32]
  4086d0:	ldp	x23, x24, [sp, #48]
  4086d4:	ldr	x25, [sp, #64]
  4086d8:	add	sp, sp, #0x200
  4086dc:	ret
  4086e0:	cmp	w2, #0x11
  4086e4:	b.ne	408700 <ll_remember_index@@Base+0x1d0>  // b.any
  4086e8:	ldp	x23, x24, [sp, #48]
  4086ec:	mov	w0, #0x0                   	// #0
  4086f0:	ldp	x29, x30, [sp]
  4086f4:	ldp	x19, x20, [sp, #16]
  4086f8:	add	sp, sp, #0x200
  4086fc:	ret
  408700:	add	x20, sp, #0x50
  408704:	mov	w1, #0x35                  	// #53
  408708:	sub	w3, w3, #0x20
  40870c:	add	x2, x19, #0x20
  408710:	mov	x0, x20
  408714:	mov	w4, #0xffff8000            	// #-32768
  408718:	bl	40c7b8 <parse_rtattr_flags@@Base>
  40871c:	ldr	x1, [sp, #104]
  408720:	cbz	x1, 4086e8 <ll_remember_index@@Base+0x1b8>
  408724:	add	x1, x1, #0x4
  408728:	mov	x0, x23
  40872c:	mov	x2, #0x0                   	// #0
  408730:	bl	408398 <namehash@@Base+0x28>
  408734:	cbz	x0, 4086e8 <ll_remember_index@@Base+0x1b8>
  408738:	mov	x1, x23
  40873c:	mov	x2, x20
  408740:	bl	4084a0 <namehash@@Base+0x130>
  408744:	mov	w0, #0x0                   	// #0
  408748:	ldp	x23, x24, [sp, #48]
  40874c:	b	4086f0 <ll_remember_index@@Base+0x1c0>
  408750:	mov	x0, x20
  408754:	bl	408300 <sprint_time64@@Base+0x100>
  408758:	ldp	x0, x1, [x20, #16]
  40875c:	str	x0, [x1]
  408760:	cbz	x0, 408768 <ll_remember_index@@Base+0x238>
  408764:	str	x1, [x0, #8]
  408768:	ldp	x0, x1, [x20]
  40876c:	str	x0, [x1]
  408770:	cbz	x0, 408778 <ll_remember_index@@Base+0x248>
  408774:	str	x1, [x0, #8]
  408778:	mov	x0, x20
  40877c:	bl	404e50 <free@plt>
  408780:	mov	w0, #0x0                   	// #0
  408784:	ldp	x29, x30, [sp]
  408788:	ldp	x19, x20, [sp, #16]
  40878c:	ldp	x23, x24, [sp, #48]
  408790:	add	sp, sp, #0x200
  408794:	ret
  408798:	mov	x0, x20
  40879c:	bl	408300 <sprint_time64@@Base+0x100>
  4087a0:	mov	w0, #0x0                   	// #0
  4087a4:	ldp	x21, x22, [sp, #32]
  4087a8:	ldp	x23, x24, [sp, #48]
  4087ac:	b	4086f0 <ll_remember_index@@Base+0x1c0>
  4087b0:	mov	w0, #0xffffffff            	// #-1
  4087b4:	b	4086f0 <ll_remember_index@@Base+0x1c0>
  4087b8:	sub	sp, sp, #0x490
  4087bc:	mov	x2, #0x420                 	// #1056
  4087c0:	stp	x29, x30, [sp]
  4087c4:	mov	x29, sp
  4087c8:	stp	x21, x22, [sp, #32]
  4087cc:	add	x21, sp, #0x70
  4087d0:	add	x22, sp, #0x38
  4087d4:	stp	x19, x20, [sp, #16]
  4087d8:	mov	w20, w1
  4087dc:	mov	x19, x0
  4087e0:	mov	w1, #0x0                   	// #0
  4087e4:	mov	x0, x21
  4087e8:	bl	404cf0 <memset@plt>
  4087ec:	stp	xzr, xzr, [sp, #56]
  4087f0:	mov	x2, #0x20                  	// #32
  4087f4:	movk	x2, #0x12, lsl #32
  4087f8:	mov	x0, x22
  4087fc:	movk	x2, #0x1, lsl #48
  408800:	mov	w1, #0x0                   	// #0
  408804:	stp	xzr, xzr, [sp, #72]
  408808:	stp	xzr, xzr, [sp, #88]
  40880c:	stp	xzr, x2, [sp, #104]
  408810:	str	w20, [sp, #132]
  408814:	bl	40afa8 <rtnl_open@@Base>
  408818:	tbnz	w0, #31, 4088c4 <ll_remember_index@@Base+0x394>
  40881c:	mov	x0, x21
  408820:	mov	w3, #0x9                   	// #9
  408824:	mov	w2, #0x1d                  	// #29
  408828:	mov	w1, #0x420                 	// #1056
  40882c:	bl	40c370 <addattr32@@Base>
  408830:	cbz	x19, 40886c <ll_remember_index@@Base+0x33c>
  408834:	mov	x0, x19
  408838:	bl	4067a0 <check_ifname@@Base>
  40883c:	cmp	w0, #0x0
  408840:	mov	w2, #0x35                  	// #53
  408844:	mov	x0, x19
  408848:	mov	w20, #0x3                   	// #3
  40884c:	csel	w20, w20, w2, eq  // eq = none
  408850:	bl	404b60 <strlen@plt>
  408854:	add	w4, w0, #0x1
  408858:	mov	w2, w20
  40885c:	mov	x3, x19
  408860:	mov	x0, x21
  408864:	mov	w1, #0x420                 	// #1056
  408868:	bl	40c280 <addattr_l@@Base>
  40886c:	mov	x1, x21
  408870:	add	x2, sp, #0x30
  408874:	mov	x0, x22
  408878:	mov	w19, #0x0                   	// #0
  40887c:	bl	40bd38 <rtnl_talk_suppress_rtnl_errmsg@@Base>
  408880:	tbnz	w0, #31, 4088a4 <ll_remember_index@@Base+0x374>
  408884:	ldr	x0, [sp, #48]
  408888:	mov	x1, #0x0                   	// #0
  40888c:	bl	408530 <ll_remember_index@@Base>
  408890:	mov	w19, w0
  408894:	ldr	x0, [sp, #48]
  408898:	cbnz	w19, 4088a0 <ll_remember_index@@Base+0x370>
  40889c:	ldr	w19, [x0, #20]
  4088a0:	bl	404e50 <free@plt>
  4088a4:	mov	x0, x22
  4088a8:	bl	40adb0 <rtnl_close@@Base>
  4088ac:	mov	w0, w19
  4088b0:	ldp	x29, x30, [sp]
  4088b4:	ldp	x19, x20, [sp, #16]
  4088b8:	ldp	x21, x22, [sp, #32]
  4088bc:	add	sp, sp, #0x490
  4088c0:	ret
  4088c4:	mov	w19, #0x0                   	// #0
  4088c8:	mov	w0, w19
  4088cc:	ldp	x29, x30, [sp]
  4088d0:	ldp	x19, x20, [sp, #16]
  4088d4:	ldp	x21, x22, [sp, #32]
  4088d8:	add	sp, sp, #0x490
  4088dc:	ret

00000000004088e0 <ll_idx_n2a@@Base>:
  4088e0:	stp	x29, x30, [sp, #-32]!
  4088e4:	mov	w3, w0
  4088e8:	mov	x1, #0x10                  	// #16
  4088ec:	mov	x29, sp
  4088f0:	str	x19, [sp, #16]
  4088f4:	adrp	x19, 421000 <memcpy@GLIBC_2.17>
  4088f8:	add	x19, x19, #0xce0
  4088fc:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408900:	mov	x0, x19
  408904:	add	x2, x2, #0x270
  408908:	bl	404c40 <snprintf@plt>
  40890c:	mov	x0, x19
  408910:	ldr	x19, [sp, #16]
  408914:	ldp	x29, x30, [sp], #32
  408918:	ret
  40891c:	nop

0000000000408920 <ll_index_to_name@@Base>:
  408920:	stp	x29, x30, [sp, #-48]!
  408924:	mov	x29, sp
  408928:	stp	x19, x20, [sp, #16]
  40892c:	cbz	w0, 40897c <ll_index_to_name@@Base+0x5c>
  408930:	mov	w20, w0
  408934:	adrp	x19, 423000 <stderr@@GLIBC_2.17+0x1d40>
  408938:	add	x0, x19, #0xd08
  40893c:	str	x21, [sp, #32]
  408940:	and	x21, x20, #0x3ff
  408944:	ldr	x1, [x0, x21, lsl #3]
  408948:	cbnz	x1, 408958 <ll_index_to_name@@Base+0x38>
  40894c:	b	408994 <ll_index_to_name@@Base+0x74>
  408950:	ldr	x1, [x1]
  408954:	cbz	x1, 408994 <ll_index_to_name@@Base+0x74>
  408958:	ldr	w0, [x1, #36]
  40895c:	cmp	w20, w0
  408960:	b.ne	408950 <ll_index_to_name@@Base+0x30>  // b.any
  408964:	ldr	x21, [sp, #32]
  408968:	add	x19, x1, #0x40
  40896c:	mov	x0, x19
  408970:	ldp	x19, x20, [sp, #16]
  408974:	ldp	x29, x30, [sp], #48
  408978:	ret
  40897c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408980:	add	x19, x1, #0x278
  408984:	mov	x0, x19
  408988:	ldp	x19, x20, [sp, #16]
  40898c:	ldp	x29, x30, [sp], #48
  408990:	ret
  408994:	mov	w1, w20
  408998:	mov	x0, #0x0                   	// #0
  40899c:	bl	4087b8 <ll_remember_index@@Base+0x288>
  4089a0:	cmp	w0, w20
  4089a4:	b.ne	4089d0 <ll_index_to_name@@Base+0xb0>  // b.any
  4089a8:	add	x19, x19, #0xd08
  4089ac:	ldr	x1, [x19, x21, lsl #3]
  4089b0:	cbnz	x1, 4089c0 <ll_index_to_name@@Base+0xa0>
  4089b4:	b	4089d0 <ll_index_to_name@@Base+0xb0>
  4089b8:	ldr	x1, [x1]
  4089bc:	cbz	x1, 4089d0 <ll_index_to_name@@Base+0xb0>
  4089c0:	ldr	w0, [x1, #36]
  4089c4:	cmp	w20, w0
  4089c8:	b.ne	4089b8 <ll_index_to_name@@Base+0x98>  // b.any
  4089cc:	b	408964 <ll_index_to_name@@Base+0x44>
  4089d0:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  4089d4:	add	x1, x1, #0xce0
  4089d8:	add	x1, x1, #0x10
  4089dc:	mov	w0, w20
  4089e0:	mov	x19, x1
  4089e4:	bl	404ce0 <if_indextoname@plt>
  4089e8:	cbz	x0, 408a00 <ll_index_to_name@@Base+0xe0>
  4089ec:	mov	x0, x19
  4089f0:	ldp	x19, x20, [sp, #16]
  4089f4:	ldr	x21, [sp, #32]
  4089f8:	ldp	x29, x30, [sp], #48
  4089fc:	ret
  408a00:	mov	w3, w20
  408a04:	mov	x0, x19
  408a08:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408a0c:	mov	x1, #0x10                  	// #16
  408a10:	add	x2, x2, #0x270
  408a14:	bl	404c40 <snprintf@plt>
  408a18:	ldr	x21, [sp, #32]
  408a1c:	b	40896c <ll_index_to_name@@Base+0x4c>

0000000000408a20 <ll_index_to_type@@Base>:
  408a20:	cbz	w0, 408a58 <ll_index_to_type@@Base+0x38>
  408a24:	and	x2, x0, #0x3ff
  408a28:	adrp	x1, 423000 <stderr@@GLIBC_2.17+0x1d40>
  408a2c:	add	x1, x1, #0xd08
  408a30:	ldr	x1, [x1, x2, lsl #3]
  408a34:	cbnz	x1, 408a44 <ll_index_to_type@@Base+0x24>
  408a38:	b	408a58 <ll_index_to_type@@Base+0x38>
  408a3c:	ldr	x1, [x1]
  408a40:	cbz	x1, 408a58 <ll_index_to_type@@Base+0x38>
  408a44:	ldr	w2, [x1, #36]
  408a48:	cmp	w0, w2
  408a4c:	b.ne	408a3c <ll_index_to_type@@Base+0x1c>  // b.any
  408a50:	ldrh	w0, [x1, #40]
  408a54:	ret
  408a58:	mov	w0, #0xffffffff            	// #-1
  408a5c:	ret

0000000000408a60 <ll_index_to_flags@@Base>:
  408a60:	cbz	w0, 408a98 <ll_index_to_flags@@Base+0x38>
  408a64:	and	x2, x0, #0x3ff
  408a68:	adrp	x1, 423000 <stderr@@GLIBC_2.17+0x1d40>
  408a6c:	add	x1, x1, #0xd08
  408a70:	ldr	x1, [x1, x2, lsl #3]
  408a74:	cbnz	x1, 408a84 <ll_index_to_flags@@Base+0x24>
  408a78:	b	408aa0 <ll_index_to_flags@@Base+0x40>
  408a7c:	ldr	x1, [x1]
  408a80:	cbz	x1, 408aa0 <ll_index_to_flags@@Base+0x40>
  408a84:	ldr	w2, [x1, #36]
  408a88:	cmp	w0, w2
  408a8c:	b.ne	408a7c <ll_index_to_flags@@Base+0x1c>  // b.any
  408a90:	ldr	w0, [x1, #32]
  408a94:	ret
  408a98:	mov	w0, #0x0                   	// #0
  408a9c:	ret
  408aa0:	mov	w0, #0xffffffff            	// #-1
  408aa4:	ret

0000000000408aa8 <ll_name_to_index@@Base>:
  408aa8:	cbz	x0, 408b50 <ll_name_to_index@@Base+0xa8>
  408aac:	stp	x29, x30, [sp, #-64]!
  408ab0:	mov	x29, sp
  408ab4:	stp	x19, x20, [sp, #16]
  408ab8:	mov	x20, x0
  408abc:	bl	408370 <namehash@@Base>
  408ac0:	adrp	x1, 421000 <memcpy@GLIBC_2.17>
  408ac4:	and	x0, x0, #0x3ff
  408ac8:	add	x1, x1, #0xd08
  408acc:	ldr	x19, [x1, x0, lsl #3]
  408ad0:	cbz	x19, 408b10 <ll_name_to_index@@Base+0x68>
  408ad4:	str	x21, [sp, #32]
  408ad8:	b	408ae4 <ll_name_to_index@@Base+0x3c>
  408adc:	ldr	x19, [x19]
  408ae0:	cbz	x19, 408b0c <ll_name_to_index@@Base+0x64>
  408ae4:	mov	x1, x20
  408ae8:	add	x0, x19, #0x30
  408aec:	sub	x21, x19, #0x10
  408af0:	bl	404df0 <strcmp@plt>
  408af4:	cbnz	w0, 408adc <ll_name_to_index@@Base+0x34>
  408af8:	ldr	w0, [x21, #36]
  408afc:	ldr	x21, [sp, #32]
  408b00:	ldp	x19, x20, [sp, #16]
  408b04:	ldp	x29, x30, [sp], #64
  408b08:	ret
  408b0c:	ldr	x21, [sp, #32]
  408b10:	mov	x0, x20
  408b14:	mov	w1, #0x0                   	// #0
  408b18:	bl	4087b8 <ll_remember_index@@Base+0x288>
  408b1c:	cbnz	w0, 408b00 <ll_name_to_index@@Base+0x58>
  408b20:	mov	x0, x20
  408b24:	bl	404f40 <if_nametoindex@plt>
  408b28:	cbnz	w0, 408b00 <ll_name_to_index@@Base+0x58>
  408b2c:	mov	x0, x20
  408b30:	add	x2, sp, #0x3c
  408b34:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408b38:	add	x1, x1, #0x270
  408b3c:	bl	404f70 <__isoc99_sscanf@plt>
  408b40:	cmp	w0, #0x1
  408b44:	ldr	w1, [sp, #60]
  408b48:	csel	w0, w1, wzr, eq  // eq = none
  408b4c:	b	408b00 <ll_name_to_index@@Base+0x58>
  408b50:	mov	w0, #0x0                   	// #0
  408b54:	ret

0000000000408b58 <ll_drop_by_index@@Base>:
  408b58:	mov	w3, w0
  408b5c:	adrp	x1, 423000 <stderr@@GLIBC_2.17+0x1d40>
  408b60:	and	x0, x3, #0x3ff
  408b64:	add	x1, x1, #0xd08
  408b68:	ldr	x1, [x1, x0, lsl #3]
  408b6c:	nop
  408b70:	cbz	x1, 408bac <ll_drop_by_index@@Base+0x54>
  408b74:	ldr	w2, [x1, #36]
  408b78:	mov	x0, x1
  408b7c:	ldr	x1, [x1]
  408b80:	cmp	w3, w2
  408b84:	b.ne	408b70 <ll_drop_by_index@@Base+0x18>  // b.any
  408b88:	ldr	x2, [x0, #8]
  408b8c:	str	x1, [x2]
  408b90:	cbz	x1, 408b98 <ll_drop_by_index@@Base+0x40>
  408b94:	str	x2, [x1, #8]
  408b98:	ldp	x1, x2, [x0, #16]
  408b9c:	str	x1, [x2]
  408ba0:	cbz	x1, 408ba8 <ll_drop_by_index@@Base+0x50>
  408ba4:	str	x2, [x1, #8]
  408ba8:	b	404e50 <free@plt>
  408bac:	ret

0000000000408bb0 <ll_init_map@@Base>:
  408bb0:	stp	x29, x30, [sp, #-32]!
  408bb4:	mov	x29, sp
  408bb8:	stp	x19, x20, [sp, #16]
  408bbc:	adrp	x19, 421000 <memcpy@GLIBC_2.17>
  408bc0:	add	x19, x19, #0xce0
  408bc4:	ldr	w1, [x19, #32]
  408bc8:	cbz	w1, 408bd8 <ll_init_map@@Base+0x28>
  408bcc:	ldp	x19, x20, [sp, #16]
  408bd0:	ldp	x29, x30, [sp], #32
  408bd4:	ret
  408bd8:	mov	x20, x0
  408bdc:	bl	40b4d0 <rtnl_linkdump_req@@Base>
  408be0:	tbnz	w0, #31, 408c14 <ll_init_map@@Base+0x64>
  408be4:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  408be8:	mov	x0, x20
  408bec:	mov	w3, #0x0                   	// #0
  408bf0:	mov	x2, #0x0                   	// #0
  408bf4:	ldr	x1, [x1, #4008]
  408bf8:	bl	40b918 <rtnl_dump_filter_nc@@Base>
  408bfc:	tbnz	w0, #31, 408c28 <ll_init_map@@Base+0x78>
  408c00:	mov	w0, #0x1                   	// #1
  408c04:	str	w0, [x19, #32]
  408c08:	ldp	x19, x20, [sp, #16]
  408c0c:	ldp	x29, x30, [sp], #32
  408c10:	ret
  408c14:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  408c18:	add	x0, x0, #0xc50
  408c1c:	bl	404b80 <perror@plt>
  408c20:	mov	w0, #0x1                   	// #1
  408c24:	bl	404b70 <exit@plt>
  408c28:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  408c2c:	mov	x2, #0x10                  	// #16
  408c30:	mov	x1, #0x1                   	// #1
  408c34:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  408c38:	ldr	x3, [x3, #3992]
  408c3c:	add	x0, x0, #0xc70
  408c40:	ldr	x3, [x3]
  408c44:	bl	404eb0 <fwrite@plt>
  408c48:	mov	w0, #0x1                   	// #1
  408c4c:	bl	404b70 <exit@plt>

0000000000408c50 <ll_addr_n2a@@Base>:
  408c50:	stp	x29, x30, [sp, #-80]!
  408c54:	cmp	w1, #0x4
  408c58:	mov	x29, sp
  408c5c:	stp	x21, x22, [sp, #32]
  408c60:	mov	w21, w1
  408c64:	mov	x22, x0
  408c68:	stp	x23, x24, [sp, #48]
  408c6c:	mov	w23, w4
  408c70:	stp	x25, x26, [sp, #64]
  408c74:	mov	x25, x3
  408c78:	b.eq	408d30 <ll_addr_n2a@@Base+0xe0>  // b.none
  408c7c:	cmp	w1, #0x10
  408c80:	b.ne	408c94 <ll_addr_n2a@@Base+0x44>  // b.any
  408c84:	cmp	w2, #0x301
  408c88:	mov	w0, #0x337                 	// #823
  408c8c:	ccmp	w2, w0, #0x4, ne  // ne = any
  408c90:	b.eq	408d68 <ll_addr_n2a@@Base+0x118>  // b.none
  408c94:	ldrb	w3, [x22]
  408c98:	sxtw	x24, w23
  408c9c:	mov	x1, x24
  408ca0:	mov	x0, x25
  408ca4:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408ca8:	add	x2, x2, #0x70
  408cac:	bl	404c40 <snprintf@plt>
  408cb0:	cmp	w23, #0x2
  408cb4:	ccmp	w21, #0x1, #0x4, gt
  408cb8:	b.le	408d18 <ll_addr_n2a@@Base+0xc8>
  408cbc:	adrp	x26, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408cc0:	sub	x22, x22, #0x1
  408cc4:	add	x24, x25, x24
  408cc8:	add	x26, x26, #0x280
  408ccc:	stp	x19, x20, [sp, #16]
  408cd0:	add	x20, x25, #0x2
  408cd4:	mov	x19, #0x2                   	// #2
  408cd8:	ldrb	w3, [x22, x19]
  408cdc:	sub	x1, x24, x20
  408ce0:	mov	x0, x20
  408ce4:	mov	x2, x26
  408ce8:	add	x20, x20, #0x3
  408cec:	bl	404c40 <snprintf@plt>
  408cf0:	add	w0, w19, w19, lsl #1
  408cf4:	sub	w0, w0, #0x1
  408cf8:	cmp	w0, w23
  408cfc:	cset	w1, lt  // lt = tstop
  408d00:	cmp	w21, w19
  408d04:	cset	w0, gt
  408d08:	add	x19, x19, #0x1
  408d0c:	tst	w1, w0
  408d10:	b.ne	408cd8 <ll_addr_n2a@@Base+0x88>  // b.any
  408d14:	ldp	x19, x20, [sp, #16]
  408d18:	mov	x0, x25
  408d1c:	ldp	x21, x22, [sp, #32]
  408d20:	ldp	x23, x24, [sp, #48]
  408d24:	ldp	x25, x26, [sp, #64]
  408d28:	ldp	x29, x30, [sp], #80
  408d2c:	ret
  408d30:	and	w1, w2, #0xfffffff7
  408d34:	mov	w0, #0x30a                 	// #778
  408d38:	cmp	w1, #0x300
  408d3c:	ccmp	w2, w0, #0x4, ne  // ne = any
  408d40:	b.ne	408c94 <ll_addr_n2a@@Base+0x44>  // b.any
  408d44:	mov	w3, w4
  408d48:	mov	x2, x25
  408d4c:	mov	x1, x22
  408d50:	mov	w0, #0x2                   	// #2
  408d54:	ldp	x21, x22, [sp, #32]
  408d58:	ldp	x23, x24, [sp, #48]
  408d5c:	ldp	x25, x26, [sp, #64]
  408d60:	ldp	x29, x30, [sp], #80
  408d64:	b	405040 <inet_ntop@plt>
  408d68:	mov	w3, w4
  408d6c:	mov	x2, x25
  408d70:	mov	x1, x22
  408d74:	mov	w0, #0xa                   	// #10
  408d78:	b	408d54 <ll_addr_n2a@@Base+0x104>
  408d7c:	nop

0000000000408d80 <ll_addr_a2n@@Base>:
  408d80:	stp	x29, x30, [sp, #-352]!
  408d84:	mov	x29, sp
  408d88:	stp	x21, x22, [sp, #32]
  408d8c:	mov	w22, w1
  408d90:	mov	x21, x2
  408d94:	mov	w1, #0x2e                  	// #46
  408d98:	stp	x23, x24, [sp, #48]
  408d9c:	mov	x23, x0
  408da0:	mov	x0, x2
  408da4:	bl	404e90 <strchr@plt>
  408da8:	cbz	x0, 408de8 <ll_addr_a2n@@Base+0x68>
  408dac:	mov	x1, x21
  408db0:	add	x0, sp, #0x58
  408db4:	mov	w2, #0x2                   	// #2
  408db8:	bl	406168 <get_addr_1@@Base>
  408dbc:	cbnz	w0, 408eac <ll_addr_a2n@@Base+0x12c>
  408dc0:	cmp	w22, #0x3
  408dc4:	mov	w0, #0xffffffff            	// #-1
  408dc8:	b.le	408dd8 <ll_addr_a2n@@Base+0x58>
  408dcc:	ldr	w1, [sp, #96]
  408dd0:	mov	w0, #0x4                   	// #4
  408dd4:	str	w1, [x23]
  408dd8:	ldp	x21, x22, [sp, #32]
  408ddc:	ldp	x23, x24, [sp, #48]
  408de0:	ldp	x29, x30, [sp], #352
  408de4:	ret
  408de8:	cmp	w22, #0x0
  408dec:	mov	w0, #0x1                   	// #1
  408df0:	b.le	408dd8 <ll_addr_a2n@@Base+0x58>
  408df4:	sub	w22, w22, #0x1
  408df8:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408dfc:	sub	x23, x23, #0x1
  408e00:	add	x22, x22, #0x2
  408e04:	add	x24, x24, #0x2a8
  408e08:	stp	x19, x20, [sp, #16]
  408e0c:	mov	x20, #0x1                   	// #1
  408e10:	str	x25, [sp, #64]
  408e14:	add	x25, sp, #0x58
  408e18:	b	408e44 <ll_addr_a2n@@Base+0xc4>
  408e1c:	ldr	w1, [sp, #88]
  408e20:	mov	w0, w20
  408e24:	cmp	w1, #0xff
  408e28:	b.hi	408e74 <ll_addr_a2n@@Base+0xf4>  // b.pmore
  408e2c:	strb	w1, [x23, x20]
  408e30:	add	x20, x20, #0x1
  408e34:	mov	x21, x19
  408e38:	cmp	x20, x22
  408e3c:	cbz	x19, 408edc <ll_addr_a2n@@Base+0x15c>
  408e40:	b.eq	408ef4 <ll_addr_a2n@@Base+0x174>  // b.none
  408e44:	mov	w1, #0x3a                  	// #58
  408e48:	mov	x0, x21
  408e4c:	bl	404e90 <strchr@plt>
  408e50:	mov	x19, x0
  408e54:	mov	x2, x25
  408e58:	mov	x0, x21
  408e5c:	mov	x1, x24
  408e60:	cbz	x19, 408e68 <ll_addr_a2n@@Base+0xe8>
  408e64:	strb	wzr, [x19], #1
  408e68:	bl	404f70 <__isoc99_sscanf@plt>
  408e6c:	cmp	w0, #0x1
  408e70:	b.eq	408e1c <ll_addr_a2n@@Base+0x9c>  // b.none
  408e74:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  408e78:	mov	x2, x21
  408e7c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408e80:	add	x1, x1, #0x288
  408e84:	ldr	x0, [x0, #3992]
  408e88:	ldr	x0, [x0]
  408e8c:	bl	405020 <fprintf@plt>
  408e90:	mov	w0, #0xffffffff            	// #-1
  408e94:	ldp	x19, x20, [sp, #16]
  408e98:	ldp	x21, x22, [sp, #32]
  408e9c:	ldp	x23, x24, [sp, #48]
  408ea0:	ldr	x25, [sp, #64]
  408ea4:	ldp	x29, x30, [sp], #352
  408ea8:	ret
  408eac:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  408eb0:	mov	x2, x21
  408eb4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408eb8:	add	x1, x1, #0x288
  408ebc:	ldr	x0, [x0, #3992]
  408ec0:	ldr	x0, [x0]
  408ec4:	bl	405020 <fprintf@plt>
  408ec8:	mov	w0, #0xffffffff            	// #-1
  408ecc:	ldp	x21, x22, [sp, #32]
  408ed0:	ldp	x23, x24, [sp, #48]
  408ed4:	ldp	x29, x30, [sp], #352
  408ed8:	ret
  408edc:	ldp	x19, x20, [sp, #16]
  408ee0:	ldp	x21, x22, [sp, #32]
  408ee4:	ldp	x23, x24, [sp, #48]
  408ee8:	ldr	x25, [sp, #64]
  408eec:	ldp	x29, x30, [sp], #352
  408ef0:	ret
  408ef4:	add	w0, w0, #0x1
  408ef8:	ldp	x19, x20, [sp, #16]
  408efc:	ldp	x21, x22, [sp, #32]
  408f00:	ldp	x23, x24, [sp, #48]
  408f04:	ldr	x25, [sp, #64]
  408f08:	ldp	x29, x30, [sp], #352
  408f0c:	ret
  408f10:	cbnz	w0, 408f18 <ll_addr_a2n@@Base+0x198>
  408f14:	ret
  408f18:	stp	x29, x30, [sp, #-32]!
  408f1c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  408f20:	mov	x29, sp
  408f24:	ldr	x0, [x0, #4016]
  408f28:	stp	x19, x20, [sp, #16]
  408f2c:	adrp	x20, 425000 <stderr@@GLIBC_2.17+0x3d40>
  408f30:	and	w19, w1, #0xff
  408f34:	ldr	x0, [x0]
  408f38:	bl	40a030 <jsonw_new@@Base>
  408f3c:	str	x0, [x20, #3336]
  408f40:	cbz	x0, 408f80 <ll_addr_a2n@@Base+0x200>
  408f44:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  408f48:	ldr	x1, [x1, #4056]
  408f4c:	ldr	w1, [x1]
  408f50:	cbnz	w1, 408f64 <ll_addr_a2n@@Base+0x1e4>
  408f54:	cbnz	w19, 408f70 <ll_addr_a2n@@Base+0x1f0>
  408f58:	ldp	x19, x20, [sp, #16]
  408f5c:	ldp	x29, x30, [sp], #32
  408f60:	ret
  408f64:	mov	w1, #0x1                   	// #1
  408f68:	bl	40a0d8 <jsonw_pretty@@Base>
  408f6c:	cbz	w19, 408f58 <ll_addr_a2n@@Base+0x1d8>
  408f70:	ldr	x0, [x20, #3336]
  408f74:	ldp	x19, x20, [sp, #16]
  408f78:	ldp	x29, x30, [sp], #32
  408f7c:	b	40a278 <jsonw_start_array@@Base>
  408f80:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  408f84:	add	x0, x0, #0x2b0
  408f88:	bl	404b80 <perror@plt>
  408f8c:	mov	w0, #0x1                   	// #1
  408f90:	bl	404b70 <exit@plt>
  408f94:	nop

0000000000408f98 <new_json_obj@@Base>:
  408f98:	mov	w1, #0x1                   	// #1
  408f9c:	b	408f10 <ll_addr_a2n@@Base+0x190>

0000000000408fa0 <delete_json_obj@@Base>:
  408fa0:	stp	x29, x30, [sp, #-32]!
  408fa4:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d40>
  408fa8:	mov	x29, sp
  408fac:	str	x19, [sp, #16]
  408fb0:	add	x19, x0, #0xd08
  408fb4:	ldr	x0, [x0, #3336]
  408fb8:	cbz	x0, 408fd0 <delete_json_obj@@Base+0x30>
  408fbc:	bl	40a2b8 <jsonw_end_array@@Base>
  408fc0:	mov	x0, x19
  408fc4:	ldr	x19, [sp, #16]
  408fc8:	ldp	x29, x30, [sp], #32
  408fcc:	b	40a068 <jsonw_destroy@@Base>
  408fd0:	ldr	x19, [sp, #16]
  408fd4:	ldp	x29, x30, [sp], #32
  408fd8:	ret
  408fdc:	nop

0000000000408fe0 <new_json_obj_plain@@Base>:
  408fe0:	mov	w1, #0x0                   	// #0
  408fe4:	b	408f10 <ll_addr_a2n@@Base+0x190>

0000000000408fe8 <delete_json_obj_plain@@Base>:
  408fe8:	adrp	x1, 425000 <stderr@@GLIBC_2.17+0x3d40>
  408fec:	add	x0, x1, #0xd08
  408ff0:	ldr	x1, [x1, #3336]
  408ff4:	cbz	x1, 408ffc <delete_json_obj_plain@@Base+0x14>
  408ff8:	b	40a068 <jsonw_destroy@@Base>
  408ffc:	ret

0000000000409000 <is_json_context@@Base>:
  409000:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409004:	ldr	x0, [x0, #3336]
  409008:	cmp	x0, #0x0
  40900c:	cset	w0, ne  // ne = any
  409010:	ret
  409014:	nop

0000000000409018 <get_json_writer@@Base>:
  409018:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40901c:	ldr	x0, [x0, #3336]
  409020:	ret
  409024:	nop

0000000000409028 <open_json_object@@Base>:
  409028:	stp	x29, x30, [sp, #-32]!
  40902c:	mov	x1, x0
  409030:	mov	x29, sp
  409034:	str	x19, [sp, #16]
  409038:	adrp	x19, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40903c:	ldr	x0, [x19, #3336]
  409040:	cbz	x0, 40905c <open_json_object@@Base+0x34>
  409044:	cbz	x1, 409050 <open_json_object@@Base+0x28>
  409048:	bl	40a0e0 <jsonw_name@@Base>
  40904c:	ldr	x0, [x19, #3336]
  409050:	ldr	x19, [sp, #16]
  409054:	ldp	x29, x30, [sp], #32
  409058:	b	40a218 <jsonw_start_object@@Base>
  40905c:	ldr	x19, [sp, #16]
  409060:	ldp	x29, x30, [sp], #32
  409064:	ret

0000000000409068 <close_json_object@@Base>:
  409068:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40906c:	ldr	x0, [x0, #3336]
  409070:	cbz	x0, 409078 <close_json_object@@Base+0x10>
  409074:	b	40a220 <jsonw_end_object@@Base>
  409078:	ret
  40907c:	nop

0000000000409080 <open_json_array@@Base>:
  409080:	stp	x29, x30, [sp, #-32]!
  409084:	mov	w2, w0
  409088:	tst	w0, #0x6
  40908c:	mov	x29, sp
  409090:	str	x19, [sp, #16]
  409094:	adrp	x19, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409098:	mov	x3, x1
  40909c:	ldr	x0, [x19, #3336]
  4090a0:	b.eq	4090c0 <open_json_array@@Base+0x40>  // b.none
  4090a4:	cbz	x0, 4090d0 <open_json_array@@Base+0x50>
  4090a8:	cbz	x1, 4090b4 <open_json_array@@Base+0x34>
  4090ac:	bl	40a0e0 <jsonw_name@@Base>
  4090b0:	ldr	x0, [x19, #3336]
  4090b4:	ldr	x19, [sp, #16]
  4090b8:	ldp	x29, x30, [sp], #32
  4090bc:	b	40a278 <jsonw_start_array@@Base>
  4090c0:	cbz	x0, 4090d0 <open_json_array@@Base+0x50>
  4090c4:	ldr	x19, [sp, #16]
  4090c8:	ldp	x29, x30, [sp], #32
  4090cc:	ret
  4090d0:	mov	w0, #0x5                   	// #5
  4090d4:	tst	w2, w0
  4090d8:	b.eq	4090c4 <open_json_array@@Base+0x44>  // b.none
  4090dc:	ldr	x19, [sp, #16]
  4090e0:	mov	x1, x3
  4090e4:	ldp	x29, x30, [sp], #32
  4090e8:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  4090ec:	add	x0, x0, #0xf38
  4090f0:	b	404fb0 <printf@plt>
  4090f4:	nop

00000000004090f8 <close_json_array@@Base>:
  4090f8:	adrp	x3, 425000 <stderr@@GLIBC_2.17+0x3d40>
  4090fc:	mov	w2, w0
  409100:	tst	w0, #0x6
  409104:	ldr	x0, [x3, #3336]
  409108:	b.eq	409114 <close_json_array@@Base+0x1c>  // b.none
  40910c:	cbz	x0, 40911c <close_json_array@@Base+0x24>
  409110:	b	40a2b8 <jsonw_end_array@@Base>
  409114:	cbz	x0, 40911c <close_json_array@@Base+0x24>
  409118:	ret
  40911c:	mov	w0, #0x5                   	// #5
  409120:	tst	w2, w0
  409124:	b.eq	409118 <close_json_array@@Base+0x20>  // b.none
  409128:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  40912c:	add	x0, x0, #0xf38
  409130:	b	404fb0 <printf@plt>
  409134:	nop

0000000000409138 <print_color_int@@Base>:
  409138:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40913c:	mov	w5, w0
  409140:	tst	w0, #0x6
  409144:	mov	x6, x2
  409148:	ldr	x0, [x7, #3336]
  40914c:	mov	x2, x3
  409150:	b.eq	409168 <print_color_int@@Base+0x30>  // b.none
  409154:	cbz	x0, 409170 <print_color_int@@Base+0x38>
  409158:	cbz	x6, 409190 <print_color_int@@Base+0x58>
  40915c:	mov	w2, w4
  409160:	mov	x1, x6
  409164:	b	40a638 <jsonw_int_field@@Base>
  409168:	cbz	x0, 409170 <print_color_int@@Base+0x38>
  40916c:	ret
  409170:	mov	w0, #0x5                   	// #5
  409174:	tst	w5, w0
  409178:	b.eq	40916c <print_color_int@@Base+0x34>  // b.none
  40917c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409180:	mov	w3, w4
  409184:	ldr	x0, [x0, #4016]
  409188:	ldr	x0, [x0]
  40918c:	b	409a28 <color_fprintf@@Base>
  409190:	mov	w1, w4
  409194:	b	40a430 <jsonw_int@@Base>

0000000000409198 <print_color_s64@@Base>:
  409198:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40919c:	mov	w5, w0
  4091a0:	tst	w0, #0x6
  4091a4:	mov	x6, x2
  4091a8:	ldr	x0, [x7, #3336]
  4091ac:	mov	x2, x3
  4091b0:	b.eq	4091c8 <print_color_s64@@Base+0x30>  // b.none
  4091b4:	cbz	x0, 4091d0 <print_color_s64@@Base+0x38>
  4091b8:	cbz	x6, 4091f0 <print_color_s64@@Base+0x58>
  4091bc:	mov	x2, x4
  4091c0:	mov	x1, x6
  4091c4:	b	40a668 <jsonw_s64_field@@Base>
  4091c8:	cbz	x0, 4091d0 <print_color_s64@@Base+0x38>
  4091cc:	ret
  4091d0:	mov	w0, #0x5                   	// #5
  4091d4:	tst	w5, w0
  4091d8:	b.eq	4091cc <print_color_s64@@Base+0x34>  // b.none
  4091dc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  4091e0:	mov	x3, x4
  4091e4:	ldr	x0, [x0, #4016]
  4091e8:	ldr	x0, [x0]
  4091ec:	b	409a28 <color_fprintf@@Base>
  4091f0:	mov	x1, x4
  4091f4:	b	40a440 <jsonw_s64@@Base>

00000000004091f8 <print_color_hhu@@Base>:
  4091f8:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  4091fc:	mov	w5, w0
  409200:	tst	w0, #0x6
  409204:	mov	w6, w1
  409208:	ldr	x0, [x7, #3336]
  40920c:	mov	x1, x2
  409210:	mov	x2, x3
  409214:	and	w3, w4, #0xff
  409218:	b.eq	40922c <print_color_hhu@@Base+0x34>  // b.none
  40921c:	cbz	x0, 409234 <print_color_hhu@@Base+0x3c>
  409220:	cbz	x1, 409254 <print_color_hhu@@Base+0x5c>
  409224:	mov	w2, w3
  409228:	b	40a578 <jsonw_hhu_field@@Base>
  40922c:	cbz	x0, 409234 <print_color_hhu@@Base+0x3c>
  409230:	ret
  409234:	mov	w0, #0x5                   	// #5
  409238:	tst	w5, w0
  40923c:	b.eq	409230 <print_color_hhu@@Base+0x38>  // b.none
  409240:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409244:	mov	w1, w6
  409248:	ldr	x0, [x0, #4016]
  40924c:	ldr	x0, [x0]
  409250:	b	409a28 <color_fprintf@@Base>
  409254:	mov	w1, w3
  409258:	b	40a3c8 <jsonw_hhu@@Base>
  40925c:	nop

0000000000409260 <print_color_hu@@Base>:
  409260:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409264:	mov	w5, w0
  409268:	tst	w0, #0x6
  40926c:	mov	w6, w1
  409270:	ldr	x0, [x7, #3336]
  409274:	mov	x1, x2
  409278:	mov	x2, x3
  40927c:	and	w3, w4, #0xffff
  409280:	b.eq	409294 <print_color_hu@@Base+0x34>  // b.none
  409284:	cbz	x0, 40929c <print_color_hu@@Base+0x3c>
  409288:	cbz	x1, 4092bc <print_color_hu@@Base+0x5c>
  40928c:	mov	w2, w3
  409290:	b	40a5a8 <jsonw_hu_field@@Base>
  409294:	cbz	x0, 40929c <print_color_hu@@Base+0x3c>
  409298:	ret
  40929c:	mov	w0, #0x5                   	// #5
  4092a0:	tst	w5, w0
  4092a4:	b.eq	409298 <print_color_hu@@Base+0x38>  // b.none
  4092a8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  4092ac:	mov	w1, w6
  4092b0:	ldr	x0, [x0, #4016]
  4092b4:	ldr	x0, [x0]
  4092b8:	b	409a28 <color_fprintf@@Base>
  4092bc:	mov	w1, w3
  4092c0:	b	40a3d8 <jsonw_hu@@Base>
  4092c4:	nop

00000000004092c8 <print_color_uint@@Base>:
  4092c8:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  4092cc:	mov	w5, w0
  4092d0:	tst	w0, #0x6
  4092d4:	mov	x6, x2
  4092d8:	ldr	x0, [x7, #3336]
  4092dc:	mov	x2, x3
  4092e0:	b.eq	4092f8 <print_color_uint@@Base+0x30>  // b.none
  4092e4:	cbz	x0, 409300 <print_color_uint@@Base+0x38>
  4092e8:	cbz	x6, 409320 <print_color_uint@@Base+0x58>
  4092ec:	mov	w2, w4
  4092f0:	mov	x1, x6
  4092f4:	b	40a4e8 <jsonw_uint_field@@Base>
  4092f8:	cbz	x0, 409300 <print_color_uint@@Base+0x38>
  4092fc:	ret
  409300:	mov	w0, #0x5                   	// #5
  409304:	tst	w5, w0
  409308:	b.eq	4092fc <print_color_uint@@Base+0x34>  // b.none
  40930c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409310:	mov	w3, w4
  409314:	ldr	x0, [x0, #4016]
  409318:	ldr	x0, [x0]
  40931c:	b	409a28 <color_fprintf@@Base>
  409320:	mov	w1, w4
  409324:	b	40a3e8 <jsonw_uint@@Base>

0000000000409328 <print_color_u64@@Base>:
  409328:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40932c:	mov	w5, w0
  409330:	tst	w0, #0x6
  409334:	mov	x6, x2
  409338:	ldr	x0, [x7, #3336]
  40933c:	mov	x2, x3
  409340:	b.eq	409358 <print_color_u64@@Base+0x30>  // b.none
  409344:	cbz	x0, 409360 <print_color_u64@@Base+0x38>
  409348:	cbz	x6, 409380 <print_color_u64@@Base+0x58>
  40934c:	mov	x2, x4
  409350:	mov	x1, x6
  409354:	b	40a518 <jsonw_u64_field@@Base>
  409358:	cbz	x0, 409360 <print_color_u64@@Base+0x38>
  40935c:	ret
  409360:	mov	w0, #0x5                   	// #5
  409364:	tst	w5, w0
  409368:	b.eq	40935c <print_color_u64@@Base+0x34>  // b.none
  40936c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409370:	mov	x3, x4
  409374:	ldr	x0, [x0, #4016]
  409378:	ldr	x0, [x0]
  40937c:	b	409a28 <color_fprintf@@Base>
  409380:	mov	x1, x4
  409384:	b	40a3f8 <jsonw_u64@@Base>

0000000000409388 <print_color_luint@@Base>:
  409388:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40938c:	mov	w5, w0
  409390:	tst	w0, #0x6
  409394:	mov	x6, x2
  409398:	ldr	x0, [x7, #3336]
  40939c:	mov	x2, x3
  4093a0:	b.eq	4093b8 <print_color_luint@@Base+0x30>  // b.none
  4093a4:	cbz	x0, 4093c0 <print_color_luint@@Base+0x38>
  4093a8:	cbz	x6, 4093e0 <print_color_luint@@Base+0x58>
  4093ac:	mov	x2, x4
  4093b0:	mov	x1, x6
  4093b4:	b	40a5d8 <jsonw_luint_field@@Base>
  4093b8:	cbz	x0, 4093c0 <print_color_luint@@Base+0x38>
  4093bc:	ret
  4093c0:	mov	w0, #0x5                   	// #5
  4093c4:	tst	w5, w0
  4093c8:	b.eq	4093bc <print_color_luint@@Base+0x34>  // b.none
  4093cc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  4093d0:	mov	x3, x4
  4093d4:	ldr	x0, [x0, #4016]
  4093d8:	ldr	x0, [x0]
  4093dc:	b	409a28 <color_fprintf@@Base>
  4093e0:	mov	x1, x4
  4093e4:	b	40a418 <jsonw_luint@@Base>

00000000004093e8 <print_color_lluint@@Base>:
  4093e8:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  4093ec:	mov	w5, w0
  4093f0:	tst	w0, #0x6
  4093f4:	mov	x6, x2
  4093f8:	ldr	x0, [x7, #3336]
  4093fc:	mov	x2, x3
  409400:	b.eq	409418 <print_color_lluint@@Base+0x30>  // b.none
  409404:	cbz	x0, 409420 <print_color_lluint@@Base+0x38>
  409408:	cbz	x6, 409440 <print_color_lluint@@Base+0x58>
  40940c:	mov	x2, x4
  409410:	mov	x1, x6
  409414:	b	40a608 <jsonw_lluint_field@@Base>
  409418:	cbz	x0, 409420 <print_color_lluint@@Base+0x38>
  40941c:	ret
  409420:	mov	w0, #0x5                   	// #5
  409424:	tst	w5, w0
  409428:	b.eq	40941c <print_color_lluint@@Base+0x34>  // b.none
  40942c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409430:	mov	x3, x4
  409434:	ldr	x0, [x0, #4016]
  409438:	ldr	x0, [x0]
  40943c:	b	409a28 <color_fprintf@@Base>
  409440:	mov	x1, x4
  409444:	b	40a420 <jsonw_lluint@@Base>

0000000000409448 <print_color_float@@Base>:
  409448:	adrp	x5, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40944c:	mov	w4, w0
  409450:	tst	w0, #0x6
  409454:	fmov	d1, d0
  409458:	ldr	x0, [x5, #3336]
  40945c:	b.eq	409470 <print_color_float@@Base+0x28>  // b.none
  409460:	cbz	x0, 409478 <print_color_float@@Base+0x30>
  409464:	cbz	x2, 40949c <print_color_float@@Base+0x54>
  409468:	mov	x1, x2
  40946c:	b	40a4b0 <jsonw_float_field@@Base>
  409470:	cbz	x0, 409478 <print_color_float@@Base+0x30>
  409474:	ret
  409478:	mov	w0, #0x5                   	// #5
  40947c:	tst	w4, w0
  409480:	b.eq	409474 <print_color_float@@Base+0x2c>  // b.none
  409484:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409488:	fmov	d0, d1
  40948c:	mov	x2, x3
  409490:	ldr	x0, [x0, #4016]
  409494:	ldr	x0, [x0]
  409498:	b	409a28 <color_fprintf@@Base>
  40949c:	b	40a3b8 <jsonw_float@@Base>

00000000004094a0 <print_uint_name_value@@Base>:
  4094a0:	stp	x29, x30, [sp, #-112]!
  4094a4:	mov	x3, x0
  4094a8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4094ac:	mov	x29, sp
  4094b0:	stp	x19, x20, [sp, #16]
  4094b4:	add	x20, sp, #0x30
  4094b8:	mov	x19, x0
  4094bc:	add	x2, x2, #0x2c0
  4094c0:	mov	x0, x20
  4094c4:	str	x21, [sp, #32]
  4094c8:	mov	w21, w1
  4094cc:	mov	x1, #0x40                  	// #64
  4094d0:	bl	404c40 <snprintf@plt>
  4094d4:	mov	w4, w21
  4094d8:	mov	x3, x20
  4094dc:	mov	x2, x19
  4094e0:	mov	w1, #0x6                   	// #6
  4094e4:	mov	w0, #0x4                   	// #4
  4094e8:	bl	4092c8 <print_color_uint@@Base>
  4094ec:	ldp	x19, x20, [sp, #16]
  4094f0:	ldr	x21, [sp, #32]
  4094f4:	ldp	x29, x30, [sp], #112
  4094f8:	ret
  4094fc:	nop

0000000000409500 <print_color_string@@Base>:
  409500:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409504:	mov	w5, w0
  409508:	tst	w0, #0x6
  40950c:	mov	w6, w1
  409510:	ldr	x0, [x7, #3336]
  409514:	mov	x1, x2
  409518:	mov	x2, x3
  40951c:	b.eq	409544 <print_color_string@@Base+0x44>  // b.none
  409520:	cbz	x0, 40954c <print_color_string@@Base+0x4c>
  409524:	cmp	x1, #0x0
  409528:	ccmp	x4, #0x0, #0x0, ne  // ne = any
  40952c:	b.eq	409578 <print_color_string@@Base+0x78>  // b.none
  409530:	cmp	x1, #0x0
  409534:	ccmp	x4, #0x0, #0x4, eq  // eq = none
  409538:	b.eq	409570 <print_color_string@@Base+0x70>  // b.none
  40953c:	mov	x1, x4
  409540:	b	40a320 <jsonw_string@@Base>
  409544:	cbz	x0, 40954c <print_color_string@@Base+0x4c>
  409548:	ret
  40954c:	mov	w0, #0x5                   	// #5
  409550:	tst	w5, w0
  409554:	b.eq	409548 <print_color_string@@Base+0x48>  // b.none
  409558:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40955c:	mov	x3, x4
  409560:	mov	w1, w6
  409564:	ldr	x0, [x0, #4016]
  409568:	ldr	x0, [x0]
  40956c:	b	409a28 <color_fprintf@@Base>
  409570:	mov	x2, x4
  409574:	b	40a450 <jsonw_string_field@@Base>
  409578:	b	40a0e0 <jsonw_name@@Base>
  40957c:	nop

0000000000409580 <print_string_name_value@@Base>:
  409580:	stp	x29, x30, [sp, #-112]!
  409584:	mov	x3, x0
  409588:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40958c:	mov	x29, sp
  409590:	stp	x19, x20, [sp, #16]
  409594:	add	x20, sp, #0x30
  409598:	mov	x19, x0
  40959c:	add	x2, x2, #0x2c8
  4095a0:	mov	x0, x20
  4095a4:	str	x21, [sp, #32]
  4095a8:	mov	x21, x1
  4095ac:	mov	x1, #0x40                  	// #64
  4095b0:	bl	404c40 <snprintf@plt>
  4095b4:	mov	x4, x21
  4095b8:	mov	x3, x20
  4095bc:	mov	x2, x19
  4095c0:	mov	w1, #0x6                   	// #6
  4095c4:	mov	w0, #0x4                   	// #4
  4095c8:	bl	409500 <print_color_string@@Base>
  4095cc:	ldp	x19, x20, [sp, #16]
  4095d0:	ldr	x21, [sp, #32]
  4095d4:	ldp	x29, x30, [sp], #112
  4095d8:	ret
  4095dc:	nop

00000000004095e0 <print_color_bool@@Base>:
  4095e0:	sub	sp, sp, #0x10
  4095e4:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  4095e8:	mov	w5, w0
  4095ec:	tst	w0, #0x6
  4095f0:	mov	w6, w1
  4095f4:	mov	x1, x2
  4095f8:	str	x3, [sp, #8]
  4095fc:	and	w2, w4, #0xff
  409600:	ldr	x0, [x7, #3336]
  409604:	b.eq	409618 <print_color_bool@@Base+0x38>  // b.none
  409608:	cbz	x0, 409624 <print_color_bool@@Base+0x44>
  40960c:	cbz	x1, 409664 <print_color_bool@@Base+0x84>
  409610:	add	sp, sp, #0x10
  409614:	b	40a480 <jsonw_bool_field@@Base>
  409618:	cbz	x0, 409624 <print_color_bool@@Base+0x44>
  40961c:	add	sp, sp, #0x10
  409620:	ret
  409624:	mov	w0, #0x5                   	// #5
  409628:	tst	w5, w0
  40962c:	b.eq	40961c <print_color_bool@@Base+0x3c>  // b.none
  409630:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409634:	cmp	w2, #0x0
  409638:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40963c:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409640:	ldr	x0, [x0, #4016]
  409644:	add	x2, x2, #0x2d8
  409648:	add	x3, x3, #0x2d0
  40964c:	mov	w1, w6
  409650:	csel	x3, x3, x2, ne  // ne = any
  409654:	ldr	x0, [x0]
  409658:	ldr	x2, [sp, #8]
  40965c:	add	sp, sp, #0x10
  409660:	b	409a28 <color_fprintf@@Base>
  409664:	mov	w1, w2
  409668:	add	sp, sp, #0x10
  40966c:	b	40a380 <jsonw_bool@@Base>

0000000000409670 <print_color_0xhex@@Base>:
  409670:	stp	x29, x30, [sp, #-96]!
  409674:	adrp	x5, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409678:	tst	w0, #0x6
  40967c:	mov	x29, sp
  409680:	stp	x19, x20, [sp, #16]
  409684:	mov	x19, x2
  409688:	mov	x2, x3
  40968c:	ldr	x3, [x5, #3336]
  409690:	b.eq	4096d8 <print_color_0xhex@@Base+0x68>  // b.none
  409694:	cbz	x3, 4096e8 <print_color_0xhex@@Base+0x78>
  409698:	add	x20, sp, #0x20
  40969c:	mov	x3, x4
  4096a0:	mov	x0, x20
  4096a4:	mov	x1, #0x40                  	// #64
  4096a8:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4096ac:	add	x2, x2, #0x2e0
  4096b0:	bl	404c40 <snprintf@plt>
  4096b4:	mov	x4, x20
  4096b8:	mov	x2, x19
  4096bc:	mov	x3, #0x0                   	// #0
  4096c0:	mov	w1, #0x6                   	// #6
  4096c4:	mov	w0, #0x2                   	// #2
  4096c8:	bl	409500 <print_color_string@@Base>
  4096cc:	ldp	x19, x20, [sp, #16]
  4096d0:	ldp	x29, x30, [sp], #96
  4096d4:	ret
  4096d8:	cbz	x3, 4096e8 <print_color_0xhex@@Base+0x78>
  4096dc:	ldp	x19, x20, [sp, #16]
  4096e0:	ldp	x29, x30, [sp], #96
  4096e4:	ret
  4096e8:	mov	w3, #0x5                   	// #5
  4096ec:	tst	w0, w3
  4096f0:	b.eq	4096dc <print_color_0xhex@@Base+0x6c>  // b.none
  4096f4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  4096f8:	mov	x3, x4
  4096fc:	ldr	x0, [x0, #4016]
  409700:	ldr	x0, [x0]
  409704:	bl	409a28 <color_fprintf@@Base>
  409708:	b	4096dc <print_color_0xhex@@Base+0x6c>
  40970c:	nop

0000000000409710 <print_color_hex@@Base>:
  409710:	stp	x29, x30, [sp, #-112]!
  409714:	tst	w0, #0x6
  409718:	mov	x29, sp
  40971c:	stp	x19, x20, [sp, #16]
  409720:	adrp	x20, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409724:	mov	x19, x2
  409728:	mov	x2, x3
  40972c:	ldr	x3, [x20, #3336]
  409730:	b.eq	40977c <print_color_hex@@Base+0x6c>  // b.none
  409734:	cbz	x3, 40978c <print_color_hex@@Base+0x7c>
  409738:	str	x21, [sp, #32]
  40973c:	add	x21, sp, #0x30
  409740:	mov	w3, w4
  409744:	mov	x0, x21
  409748:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40974c:	mov	x1, #0x40                  	// #64
  409750:	add	x2, x2, #0x2a8
  409754:	bl	404c40 <snprintf@plt>
  409758:	ldr	x0, [x20, #3336]
  40975c:	cbz	x19, 4097b0 <print_color_hex@@Base+0xa0>
  409760:	mov	x2, x21
  409764:	mov	x1, x19
  409768:	bl	40a450 <jsonw_string_field@@Base>
  40976c:	ldp	x19, x20, [sp, #16]
  409770:	ldr	x21, [sp, #32]
  409774:	ldp	x29, x30, [sp], #112
  409778:	ret
  40977c:	cbz	x3, 40978c <print_color_hex@@Base+0x7c>
  409780:	ldp	x19, x20, [sp, #16]
  409784:	ldp	x29, x30, [sp], #112
  409788:	ret
  40978c:	mov	w3, #0x5                   	// #5
  409790:	tst	w0, w3
  409794:	b.eq	409780 <print_color_hex@@Base+0x70>  // b.none
  409798:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40979c:	mov	w3, w4
  4097a0:	ldr	x0, [x0, #4016]
  4097a4:	ldr	x0, [x0]
  4097a8:	bl	409a28 <color_fprintf@@Base>
  4097ac:	b	409780 <print_color_hex@@Base+0x70>
  4097b0:	mov	x1, x21
  4097b4:	bl	40a320 <jsonw_string@@Base>
  4097b8:	ldr	x21, [sp, #32]
  4097bc:	b	409780 <print_color_hex@@Base+0x70>

00000000004097c0 <print_color_null@@Base>:
  4097c0:	adrp	x7, 425000 <stderr@@GLIBC_2.17+0x3d40>
  4097c4:	mov	w5, w0
  4097c8:	tst	w0, #0x6
  4097cc:	mov	x6, x3
  4097d0:	ldr	x0, [x7, #3336]
  4097d4:	b.eq	4097e8 <print_color_null@@Base+0x28>  // b.none
  4097d8:	cbz	x0, 4097f0 <print_color_null@@Base+0x30>
  4097dc:	cbz	x2, 409814 <print_color_null@@Base+0x54>
  4097e0:	mov	x1, x2
  4097e4:	b	40a698 <jsonw_null_field@@Base>
  4097e8:	cbz	x0, 4097f0 <print_color_null@@Base+0x30>
  4097ec:	ret
  4097f0:	mov	w0, #0x5                   	// #5
  4097f4:	tst	w5, w0
  4097f8:	b.eq	4097ec <print_color_null@@Base+0x2c>  // b.none
  4097fc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409800:	mov	x3, x4
  409804:	mov	x2, x6
  409808:	ldr	x0, [x0, #4016]
  40980c:	ldr	x0, [x0]
  409810:	b	409a28 <color_fprintf@@Base>
  409814:	b	40a3a8 <jsonw_null@@Base>

0000000000409818 <print_nl@@Base>:
  409818:	adrp	x0, 425000 <stderr@@GLIBC_2.17+0x3d40>
  40981c:	ldr	x0, [x0, #3336]
  409820:	cbz	x0, 409828 <print_nl@@Base+0x10>
  409824:	ret
  409828:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  40982c:	adrp	x0, 40c000 <rtnl_listen@@Base+0x228>
  409830:	add	x0, x0, #0xf38
  409834:	ldr	x1, [x1, #4048]
  409838:	ldr	x1, [x1]
  40983c:	b	404fb0 <printf@plt>

0000000000409840 <check_enable_color@@Base>:
  409840:	cmp	w1, #0x0
  409844:	ccmp	w0, #0x0, #0x4, eq  // eq = none
  409848:	b.eq	4098ec <check_enable_color@@Base+0xac>  // b.none
  40984c:	stp	x29, x30, [sp, #-32]!
  409850:	cmp	w0, #0x2
  409854:	mov	x29, sp
  409858:	b.eq	409880 <check_enable_color@@Base+0x40>  // b.none
  40985c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  409860:	ldr	x0, [x0, #4016]
  409864:	ldr	x0, [x0]
  409868:	bl	404c50 <fileno@plt>
  40986c:	bl	404f00 <isatty@plt>
  409870:	cbnz	w0, 409880 <check_enable_color@@Base+0x40>
  409874:	mov	w0, #0x0                   	// #0
  409878:	ldp	x29, x30, [sp], #32
  40987c:	ret
  409880:	adrp	x1, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409884:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409888:	add	x0, x0, #0x2e8
  40988c:	stp	x19, x20, [sp, #16]
  409890:	mov	w19, #0x1                   	// #1
  409894:	add	x20, x1, #0xd10
  409898:	str	w19, [x1, #3344]
  40989c:	bl	404fe0 <getenv@plt>
  4098a0:	cbz	x0, 409900 <check_enable_color@@Base+0xc0>
  4098a4:	mov	w1, #0x3b                  	// #59
  4098a8:	bl	404d90 <strrchr@plt>
  4098ac:	mov	x2, x0
  4098b0:	mov	w0, w19
  4098b4:	cbz	x2, 4098f4 <check_enable_color@@Base+0xb4>
  4098b8:	ldrb	w3, [x2, #1]
  4098bc:	sub	w0, w3, #0x30
  4098c0:	and	w0, w0, #0xff
  4098c4:	cmp	w0, #0x6
  4098c8:	cset	w1, ls  // ls = plast
  4098cc:	cmp	w3, #0x38
  4098d0:	csinc	w0, w1, wzr, ne  // ne = any
  4098d4:	cbz	w0, 409900 <check_enable_color@@Base+0xc0>
  4098d8:	ldrb	w1, [x2, #2]
  4098dc:	cbnz	w1, 4098f4 <check_enable_color@@Base+0xb4>
  4098e0:	str	w19, [x20, #4]
  4098e4:	ldp	x19, x20, [sp, #16]
  4098e8:	b	409878 <check_enable_color@@Base+0x38>
  4098ec:	mov	w0, #0x0                   	// #0
  4098f0:	ret
  4098f4:	ldp	x19, x20, [sp, #16]
  4098f8:	ldp	x29, x30, [sp], #32
  4098fc:	ret
  409900:	mov	w0, w19
  409904:	ldp	x19, x20, [sp, #16]
  409908:	ldp	x29, x30, [sp], #32
  40990c:	ret

0000000000409910 <matches_color@@Base>:
  409910:	cbz	x1, 409a10 <matches_color@@Base+0x100>
  409914:	stp	x29, x30, [sp, #-48]!
  409918:	mov	x29, sp
  40991c:	stp	x19, x20, [sp, #16]
  409920:	mov	x19, x0
  409924:	mov	x20, x1
  409928:	str	x21, [sp, #32]
  40992c:	bl	404b60 <strlen@plt>
  409930:	add	x3, x0, #0x10
  409934:	add	x2, x0, #0x1
  409938:	and	x3, x3, #0xfffffffffffffff0
  40993c:	mov	x1, x19
  409940:	sub	sp, sp, x3
  409944:	mov	x0, sp
  409948:	bl	404b30 <memcpy@plt>
  40994c:	mov	x21, x0
  409950:	mov	w1, #0x3d                  	// #61
  409954:	bl	404f50 <strchrnul@plt>
  409958:	mov	x19, x0
  40995c:	ldrb	w0, [x0]
  409960:	cbz	w0, 409968 <matches_color@@Base+0x58>
  409964:	strb	wzr, [x19], #1
  409968:	mov	x0, x21
  40996c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409970:	add	x1, x1, #0x2f8
  409974:	bl	4068d8 <matches@@Base>
  409978:	tst	w0, #0xff
  40997c:	b.ne	4099d8 <matches_color@@Base+0xc8>  // b.any
  409980:	ldrb	w0, [x19]
  409984:	cbz	w0, 4099f0 <matches_color@@Base+0xe0>
  409988:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40998c:	mov	x0, x19
  409990:	add	x1, x1, #0x300
  409994:	bl	404df0 <strcmp@plt>
  409998:	cbz	w0, 4099f0 <matches_color@@Base+0xe0>
  40999c:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4099a0:	mov	x0, x19
  4099a4:	add	x1, x1, #0x308
  4099a8:	bl	404df0 <strcmp@plt>
  4099ac:	cbnz	w0, 4099c0 <matches_color@@Base+0xb0>
  4099b0:	mov	w1, #0x1                   	// #1
  4099b4:	mov	w0, w1
  4099b8:	str	w1, [x20]
  4099bc:	b	4099dc <matches_color@@Base+0xcc>
  4099c0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  4099c4:	mov	x0, x19
  4099c8:	add	x1, x1, #0x310
  4099cc:	bl	404df0 <strcmp@plt>
  4099d0:	cbz	w0, 409a18 <matches_color@@Base+0x108>
  4099d4:	nop
  4099d8:	mov	w0, #0x0                   	// #0
  4099dc:	mov	sp, x29
  4099e0:	ldp	x19, x20, [sp, #16]
  4099e4:	ldr	x21, [sp, #32]
  4099e8:	ldp	x29, x30, [sp], #48
  4099ec:	ret
  4099f0:	mov	w1, #0x2                   	// #2
  4099f4:	str	w1, [x20]
  4099f8:	mov	w0, #0x1                   	// #1
  4099fc:	mov	sp, x29
  409a00:	ldp	x19, x20, [sp, #16]
  409a04:	ldr	x21, [sp, #32]
  409a08:	ldp	x29, x30, [sp], #48
  409a0c:	ret
  409a10:	mov	w0, #0x0                   	// #0
  409a14:	ret
  409a18:	mov	w0, #0x1                   	// #1
  409a1c:	str	wzr, [x20]
  409a20:	b	4099dc <matches_color@@Base+0xcc>
  409a24:	nop

0000000000409a28 <color_fprintf@@Base>:
  409a28:	stp	x29, x30, [sp, #-288]!
  409a2c:	adrp	x8, 425000 <stderr@@GLIBC_2.17+0x3d40>
  409a30:	mov	w10, #0xffffffd8            	// #-40
  409a34:	mov	x29, sp
  409a38:	ldr	w12, [x8, #3344]
  409a3c:	add	x11, sp, #0xf0
  409a40:	mov	w9, #0xffffff80            	// #-128
  409a44:	stp	x21, x22, [sp, #32]
  409a48:	mov	x22, x2
  409a4c:	add	x2, sp, #0x120
  409a50:	stp	x2, x2, [sp, #80]
  409a54:	cmp	w12, #0x0
  409a58:	str	x11, [sp, #96]
  409a5c:	ccmp	w1, #0x6, #0x4, ne  // ne = any
  409a60:	stp	w10, w9, [sp, #104]
  409a64:	str	q0, [sp, #112]
  409a68:	str	q1, [sp, #128]
  409a6c:	str	q2, [sp, #144]
  409a70:	str	q3, [sp, #160]
  409a74:	str	q4, [sp, #176]
  409a78:	str	q5, [sp, #192]
  409a7c:	str	q6, [sp, #208]
  409a80:	str	q7, [sp, #224]
  409a84:	stp	x3, x4, [sp, #248]
  409a88:	stp	x5, x6, [sp, #264]
  409a8c:	str	x7, [sp, #280]
  409a90:	b.eq	409b38 <color_fprintf@@Base+0x110>  // b.none
  409a94:	add	x8, x8, #0xd10
  409a98:	stp	x19, x20, [sp, #16]
  409a9c:	mov	x20, x0
  409aa0:	ldr	w0, [x8, #4]
  409aa4:	cbnz	w0, 409b28 <color_fprintf@@Base+0x100>
  409aa8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409aac:	add	x0, x0, #0x390
  409ab0:	add	x0, x0, #0x20
  409ab4:	ldr	w2, [x0, w1, uxtw #2]
  409ab8:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  409abc:	add	x3, x3, #0xd00
  409ac0:	adrp	x21, 40c000 <rtnl_listen@@Base+0x228>
  409ac4:	add	x21, x21, #0xf38
  409ac8:	mov	x1, x21
  409acc:	mov	x0, x20
  409ad0:	ldr	x2, [x3, w2, uxtw #3]
  409ad4:	bl	405020 <fprintf@plt>
  409ad8:	mov	w19, w0
  409adc:	ldp	x4, x5, [sp, #80]
  409ae0:	mov	x1, x22
  409ae4:	ldp	x6, x7, [sp, #96]
  409ae8:	add	x2, sp, #0x30
  409aec:	mov	x0, x20
  409af0:	stp	x4, x5, [sp, #48]
  409af4:	stp	x6, x7, [sp, #64]
  409af8:	bl	404fa0 <vfprintf@plt>
  409afc:	add	w19, w19, w0
  409b00:	mov	x1, x21
  409b04:	mov	x0, x20
  409b08:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409b0c:	add	x2, x2, #0x318
  409b10:	bl	405020 <fprintf@plt>
  409b14:	add	w0, w19, w0
  409b18:	ldp	x19, x20, [sp, #16]
  409b1c:	ldp	x21, x22, [sp, #32]
  409b20:	ldp	x29, x30, [sp], #288
  409b24:	ret
  409b28:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409b2c:	add	x0, x0, #0x390
  409b30:	ldr	w2, [x0, w1, uxtw #2]
  409b34:	b	409ab8 <color_fprintf@@Base+0x90>
  409b38:	ldp	x6, x7, [sp, #80]
  409b3c:	mov	x1, x22
  409b40:	ldp	x4, x5, [sp, #96]
  409b44:	add	x2, sp, #0x30
  409b48:	stp	x6, x7, [sp, #48]
  409b4c:	stp	x4, x5, [sp, #64]
  409b50:	bl	404fa0 <vfprintf@plt>
  409b54:	ldp	x21, x22, [sp, #32]
  409b58:	ldp	x29, x30, [sp], #288
  409b5c:	ret

0000000000409b60 <ifa_family_color@@Base>:
  409b60:	and	w0, w0, #0xff
  409b64:	cmp	w0, #0x2
  409b68:	b.eq	409b7c <ifa_family_color@@Base+0x1c>  // b.none
  409b6c:	cmp	w0, #0xa
  409b70:	mov	w1, #0x3                   	// #3
  409b74:	mov	w0, #0x6                   	// #6
  409b78:	csel	w0, w0, w1, ne  // ne = any
  409b7c:	ret

0000000000409b80 <oper_state_color@@Base>:
  409b80:	and	w0, w0, #0xff
  409b84:	cmp	w0, #0x2
  409b88:	b.eq	409ba0 <oper_state_color@@Base+0x20>  // b.none
  409b8c:	cmp	w0, #0x6
  409b90:	mov	w1, #0x4                   	// #4
  409b94:	mov	w0, #0x6                   	// #6
  409b98:	csel	w0, w0, w1, ne  // ne = any
  409b9c:	ret
  409ba0:	mov	w0, #0x5                   	// #5
  409ba4:	ret

0000000000409ba8 <mpls_ntop@@Base>:
  409ba8:	stp	x29, x30, [sp, #-80]!
  409bac:	mov	x29, sp
  409bb0:	stp	x19, x20, [sp, #16]
  409bb4:	mov	x20, x1
  409bb8:	mov	x19, x3
  409bbc:	stp	x21, x22, [sp, #32]
  409bc0:	mov	w22, w0
  409bc4:	mov	x21, x2
  409bc8:	stp	x25, x26, [sp, #64]
  409bcc:	bl	404fd0 <__errno_location@plt>
  409bd0:	cmp	w22, #0x1c
  409bd4:	mov	x25, x0
  409bd8:	b.eq	409bfc <mpls_ntop@@Base+0x54>  // b.none
  409bdc:	mov	w1, #0x61                  	// #97
  409be0:	str	w1, [x25]
  409be4:	mov	x0, #0x0                   	// #0
  409be8:	ldp	x19, x20, [sp, #16]
  409bec:	ldp	x21, x22, [sp, #32]
  409bf0:	ldp	x25, x26, [sp, #64]
  409bf4:	ldp	x29, x30, [sp], #80
  409bf8:	ret
  409bfc:	stp	x23, x24, [sp, #48]
  409c00:	adrp	x26, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409c04:	mov	x24, x21
  409c08:	add	x26, x26, #0x3d0
  409c0c:	mov	w23, #0x2f                  	// #47
  409c10:	str	wzr, [x0]
  409c14:	b	409c28 <mpls_ntop@@Base+0x80>
  409c18:	tbnz	w22, #8, 409c80 <mpls_ntop@@Base+0xd8>
  409c1c:	add	x19, x19, x1
  409c20:	strb	w23, [x24, w0, sxtw]
  409c24:	add	x24, x2, #0x1
  409c28:	ldr	w22, [x20]
  409c2c:	mov	x1, x19
  409c30:	mov	x2, x26
  409c34:	mov	x0, x24
  409c38:	rev	w22, w22
  409c3c:	add	x20, x20, #0x4
  409c40:	lsr	w3, w22, #12
  409c44:	bl	404c40 <snprintf@plt>
  409c48:	sxtw	x1, w0
  409c4c:	cmp	x19, w0, sxtw
  409c50:	add	x2, x24, x1
  409c54:	mvn	x1, x1
  409c58:	b.hi	409c18 <mpls_ntop@@Base+0x70>  // b.pmore
  409c5c:	mov	w1, #0xfffffff9            	// #-7
  409c60:	mov	x0, #0x0                   	// #0
  409c64:	ldp	x23, x24, [sp, #48]
  409c68:	str	w1, [x25]
  409c6c:	ldp	x19, x20, [sp, #16]
  409c70:	ldp	x21, x22, [sp, #32]
  409c74:	ldp	x25, x26, [sp, #64]
  409c78:	ldp	x29, x30, [sp], #80
  409c7c:	ret
  409c80:	mov	x0, x21
  409c84:	ldp	x19, x20, [sp, #16]
  409c88:	ldp	x21, x22, [sp, #32]
  409c8c:	ldp	x23, x24, [sp, #48]
  409c90:	ldp	x25, x26, [sp, #64]
  409c94:	ldp	x29, x30, [sp], #80
  409c98:	ret
  409c9c:	nop

0000000000409ca0 <mpls_pton@@Base>:
  409ca0:	stp	x29, x30, [sp, #-80]!
  409ca4:	mov	x29, sp
  409ca8:	stp	x19, x20, [sp, #16]
  409cac:	lsr	x19, x3, #2
  409cb0:	mov	x20, x2
  409cb4:	stp	x21, x22, [sp, #32]
  409cb8:	mov	w22, w0
  409cbc:	mov	x21, x1
  409cc0:	bl	404fd0 <__errno_location@plt>
  409cc4:	mov	x1, x0
  409cc8:	cmp	w22, #0x1c
  409ccc:	b.ne	409db4 <mpls_pton@@Base+0x114>  // b.any
  409cd0:	str	wzr, [x0]
  409cd4:	cbz	w19, 409d60 <mpls_pton@@Base+0xc0>
  409cd8:	sub	w19, w19, #0x1
  409cdc:	mov	x22, #0xfffff               	// #1048575
  409ce0:	add	x19, x19, #0x1
  409ce4:	str	x23, [sp, #48]
  409ce8:	add	x23, sp, #0x48
  409cec:	add	x19, x20, x19, lsl #2
  409cf0:	b	409d2c <mpls_pton@@Base+0x8c>
  409cf4:	ldr	x2, [sp, #72]
  409cf8:	lsl	w0, w0, #12
  409cfc:	rev	w0, w0
  409d00:	cmp	x2, x21
  409d04:	b.eq	409d44 <mpls_pton@@Base+0xa4>  // b.none
  409d08:	str	w0, [x20]
  409d0c:	add	x21, x2, #0x1
  409d10:	ldrb	w2, [x2]
  409d14:	cmp	w2, #0x2f
  409d18:	cbz	w2, 409d94 <mpls_pton@@Base+0xf4>
  409d1c:	add	x20, x20, #0x4
  409d20:	b.ne	409d44 <mpls_pton@@Base+0xa4>  // b.any
  409d24:	cmp	x20, x19
  409d28:	b.eq	409d5c <mpls_pton@@Base+0xbc>  // b.none
  409d2c:	mov	x1, x23
  409d30:	mov	x0, x21
  409d34:	mov	w2, #0x0                   	// #0
  409d38:	bl	404b50 <strtoul@plt>
  409d3c:	cmp	x0, x22
  409d40:	b.ls	409cf4 <mpls_pton@@Base+0x54>  // b.plast
  409d44:	ldr	x23, [sp, #48]
  409d48:	mov	w0, #0x0                   	// #0
  409d4c:	ldp	x19, x20, [sp, #16]
  409d50:	ldp	x21, x22, [sp, #32]
  409d54:	ldp	x29, x30, [sp], #80
  409d58:	ret
  409d5c:	ldr	x23, [sp, #48]
  409d60:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  409d64:	mov	x2, #0x18                  	// #24
  409d68:	mov	x1, #0x1                   	// #1
  409d6c:	ldr	x3, [x3, #3992]
  409d70:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409d74:	add	x0, x0, #0x3d8
  409d78:	ldr	x3, [x3]
  409d7c:	bl	404eb0 <fwrite@plt>
  409d80:	mov	w0, #0x0                   	// #0
  409d84:	ldp	x19, x20, [sp, #16]
  409d88:	ldp	x21, x22, [sp, #32]
  409d8c:	ldp	x29, x30, [sp], #80
  409d90:	ret
  409d94:	orr	w1, w0, #0x10000
  409d98:	mov	w0, #0x1                   	// #1
  409d9c:	ldr	x23, [sp, #48]
  409da0:	str	w1, [x20]
  409da4:	ldp	x19, x20, [sp, #16]
  409da8:	ldp	x21, x22, [sp, #32]
  409dac:	ldp	x29, x30, [sp], #80
  409db0:	ret
  409db4:	mov	w2, #0x61                  	// #97
  409db8:	mov	w0, #0xffffffff            	// #-1
  409dbc:	str	w2, [x1]
  409dc0:	b	409d4c <mpls_pton@@Base+0xac>
  409dc4:	nop
  409dc8:	stp	x29, x30, [sp, #-32]!
  409dcc:	mov	x29, sp
  409dd0:	stp	x19, x20, [sp, #16]
  409dd4:	mov	x19, x0
  409dd8:	mov	w20, w1
  409ddc:	ldrb	w0, [x0, #13]
  409de0:	ldr	x1, [x19]
  409de4:	cbnz	w0, 409e14 <mpls_pton@@Base+0x174>
  409de8:	mov	w0, #0x2c                  	// #44
  409dec:	strb	w0, [x19, #13]
  409df0:	mov	w0, w20
  409df4:	bl	404c10 <putc@plt>
  409df8:	strb	wzr, [x19, #13]
  409dfc:	ldr	w0, [x19, #8]
  409e00:	add	w0, w0, #0x1
  409e04:	str	w0, [x19, #8]
  409e08:	ldp	x19, x20, [sp, #16]
  409e0c:	ldp	x29, x30, [sp], #32
  409e10:	ret
  409e14:	bl	404c10 <putc@plt>
  409e18:	ldr	x1, [x19]
  409e1c:	b	409de8 <mpls_pton@@Base+0x148>
  409e20:	stp	x29, x30, [sp, #-48]!
  409e24:	mov	x29, sp
  409e28:	stp	x19, x20, [sp, #16]
  409e2c:	mov	x20, x0
  409e30:	mov	w0, #0xa                   	// #10
  409e34:	ldr	x1, [x20]
  409e38:	bl	404c10 <putc@plt>
  409e3c:	ldr	w0, [x20, #8]
  409e40:	cbz	w0, 409e80 <mpls_pton@@Base+0x1e0>
  409e44:	str	x21, [sp, #32]
  409e48:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409e4c:	add	x21, x21, #0x3f8
  409e50:	mov	w19, #0x0                   	// #0
  409e54:	nop
  409e58:	ldr	x3, [x20]
  409e5c:	mov	x0, x21
  409e60:	mov	x2, #0x4                   	// #4
  409e64:	mov	x1, #0x1                   	// #1
  409e68:	add	w19, w19, #0x1
  409e6c:	bl	404eb0 <fwrite@plt>
  409e70:	ldr	w0, [x20, #8]
  409e74:	cmp	w19, w0
  409e78:	b.cc	409e58 <mpls_pton@@Base+0x1b8>  // b.lo, b.ul, b.last
  409e7c:	ldr	x21, [sp, #32]
  409e80:	ldp	x19, x20, [sp, #16]
  409e84:	ldp	x29, x30, [sp], #48
  409e88:	ret
  409e8c:	nop
  409e90:	stp	x29, x30, [sp, #-16]!
  409e94:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409e98:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409e9c:	mov	x29, sp
  409ea0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409ea4:	add	x3, x3, #0x4b8
  409ea8:	add	x1, x1, #0x400
  409eac:	add	x0, x0, #0x410
  409eb0:	mov	w2, #0x85                  	// #133
  409eb4:	bl	404fc0 <__assert_fail@plt>
  409eb8:	stp	x29, x30, [sp, #-48]!
  409ebc:	mov	x29, sp
  409ec0:	stp	x19, x20, [sp, #16]
  409ec4:	mov	x20, x0
  409ec8:	mov	x19, x1
  409ecc:	mov	w0, #0x22                  	// #34
  409ed0:	ldr	x1, [x20]
  409ed4:	bl	404c10 <putc@plt>
  409ed8:	ldrb	w0, [x19]
  409edc:	cbz	w0, 409f6c <mpls_pton@@Base+0x2cc>
  409ee0:	stp	x21, x22, [sp, #32]
  409ee4:	adrp	x22, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409ee8:	adrp	x21, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409eec:	add	x22, x22, #0x430
  409ef0:	add	x21, x21, #0x458
  409ef4:	b	409f28 <mpls_pton@@Base+0x288>
  409ef8:	cmp	w0, #0x8
  409efc:	b.eq	40a014 <mpls_pton@@Base+0x374>  // b.none
  409f00:	cmp	w0, #0x9
  409f04:	b.ne	40a008 <mpls_pton@@Base+0x368>  // b.any
  409f08:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409f0c:	mov	x2, #0x2                   	// #2
  409f10:	add	x0, x0, #0x420
  409f14:	mov	x1, #0x1                   	// #1
  409f18:	bl	404eb0 <fwrite@plt>
  409f1c:	nop
  409f20:	ldrb	w0, [x19, #1]!
  409f24:	cbz	w0, 409f68 <mpls_pton@@Base+0x2c8>
  409f28:	cmp	w0, #0xd
  409f2c:	ldr	x3, [x20]
  409f30:	b.eq	409fe0 <mpls_pton@@Base+0x340>  // b.none
  409f34:	b.hi	409f80 <mpls_pton@@Base+0x2e0>  // b.pmore
  409f38:	cmp	w0, #0xa
  409f3c:	b.eq	409fc8 <mpls_pton@@Base+0x328>  // b.none
  409f40:	b.ls	409ef8 <mpls_pton@@Base+0x258>  // b.plast
  409f44:	cmp	w0, #0xc
  409f48:	b.ne	40a008 <mpls_pton@@Base+0x368>  // b.any
  409f4c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409f50:	mov	x2, #0x2                   	// #2
  409f54:	add	x0, x0, #0x438
  409f58:	mov	x1, #0x1                   	// #1
  409f5c:	bl	404eb0 <fwrite@plt>
  409f60:	ldrb	w0, [x19, #1]!
  409f64:	cbnz	w0, 409f28 <mpls_pton@@Base+0x288>
  409f68:	ldp	x21, x22, [sp, #32]
  409f6c:	mov	w0, #0x22                  	// #34
  409f70:	ldr	x1, [x20]
  409f74:	ldp	x19, x20, [sp, #16]
  409f78:	ldp	x29, x30, [sp], #48
  409f7c:	b	404c10 <putc@plt>
  409f80:	cmp	w0, #0x27
  409f84:	b.eq	409ff4 <mpls_pton@@Base+0x354>  // b.none
  409f88:	cmp	w0, #0x5c
  409f8c:	b.ne	409fa8 <mpls_pton@@Base+0x308>  // b.any
  409f90:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409f94:	mov	x2, #0x2                   	// #2
  409f98:	mov	x1, #0x1                   	// #1
  409f9c:	add	x0, x0, #0x448
  409fa0:	bl	404eb0 <fwrite@plt>
  409fa4:	b	409f20 <mpls_pton@@Base+0x280>
  409fa8:	cmp	w0, #0x22
  409fac:	b.ne	40a008 <mpls_pton@@Base+0x368>  // b.any
  409fb0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409fb4:	mov	x2, #0x2                   	// #2
  409fb8:	mov	x1, #0x1                   	// #1
  409fbc:	add	x0, x0, #0x450
  409fc0:	bl	404eb0 <fwrite@plt>
  409fc4:	b	409f20 <mpls_pton@@Base+0x280>
  409fc8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  409fcc:	mov	x2, #0x2                   	// #2
  409fd0:	mov	x1, #0x1                   	// #1
  409fd4:	add	x0, x0, #0x428
  409fd8:	bl	404eb0 <fwrite@plt>
  409fdc:	b	409f20 <mpls_pton@@Base+0x280>
  409fe0:	mov	x0, x22
  409fe4:	mov	x2, #0x2                   	// #2
  409fe8:	mov	x1, #0x1                   	// #1
  409fec:	bl	404eb0 <fwrite@plt>
  409ff0:	b	409f20 <mpls_pton@@Base+0x280>
  409ff4:	mov	x0, x21
  409ff8:	mov	x2, #0x2                   	// #2
  409ffc:	mov	x1, #0x1                   	// #1
  40a000:	bl	404eb0 <fwrite@plt>
  40a004:	b	409f20 <mpls_pton@@Base+0x280>
  40a008:	mov	x1, x3
  40a00c:	bl	404c10 <putc@plt>
  40a010:	b	409f20 <mpls_pton@@Base+0x280>
  40a014:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a018:	mov	x2, #0x2                   	// #2
  40a01c:	mov	x1, #0x1                   	// #1
  40a020:	add	x0, x0, #0x440
  40a024:	bl	404eb0 <fwrite@plt>
  40a028:	b	409f20 <mpls_pton@@Base+0x280>
  40a02c:	nop

000000000040a030 <jsonw_new@@Base>:
  40a030:	stp	x29, x30, [sp, #-32]!
  40a034:	mov	x29, sp
  40a038:	str	x19, [sp, #16]
  40a03c:	mov	x19, x0
  40a040:	mov	x0, #0x10                  	// #16
  40a044:	bl	404c90 <malloc@plt>
  40a048:	cbz	x0, 40a058 <jsonw_new@@Base+0x28>
  40a04c:	str	x19, [x0]
  40a050:	str	wzr, [x0, #8]
  40a054:	strh	wzr, [x0, #12]
  40a058:	ldr	x19, [sp, #16]
  40a05c:	ldp	x29, x30, [sp], #32
  40a060:	ret
  40a064:	nop

000000000040a068 <jsonw_destroy@@Base>:
  40a068:	stp	x29, x30, [sp, #-32]!
  40a06c:	mov	x29, sp
  40a070:	stp	x19, x20, [sp, #16]
  40a074:	mov	x19, x0
  40a078:	ldr	x20, [x0]
  40a07c:	ldr	w0, [x20, #8]
  40a080:	cbnz	w0, 40a0b0 <jsonw_destroy@@Base+0x48>
  40a084:	ldr	x1, [x20]
  40a088:	mov	w0, #0xa                   	// #10
  40a08c:	bl	404c30 <fputc@plt>
  40a090:	ldr	x0, [x20]
  40a094:	bl	404ed0 <fflush@plt>
  40a098:	mov	x0, x20
  40a09c:	bl	404e50 <free@plt>
  40a0a0:	str	xzr, [x19]
  40a0a4:	ldp	x19, x20, [sp, #16]
  40a0a8:	ldp	x29, x30, [sp], #32
  40a0ac:	ret
  40a0b0:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a0b4:	add	x3, x3, #0x4b8
  40a0b8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a0bc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a0c0:	add	x3, x3, #0x10
  40a0c4:	add	x1, x1, #0x400
  40a0c8:	add	x0, x0, #0x460
  40a0cc:	mov	w2, #0x6e                  	// #110
  40a0d0:	bl	404fc0 <__assert_fail@plt>
  40a0d4:	nop

000000000040a0d8 <jsonw_pretty@@Base>:
  40a0d8:	strb	w1, [x0, #12]
  40a0dc:	ret

000000000040a0e0 <jsonw_name@@Base>:
  40a0e0:	stp	x29, x30, [sp, #-32]!
  40a0e4:	mov	x29, sp
  40a0e8:	stp	x19, x20, [sp, #16]
  40a0ec:	mov	x19, x0
  40a0f0:	mov	x20, x1
  40a0f4:	ldrb	w0, [x0, #13]
  40a0f8:	cbnz	w0, 40a144 <jsonw_name@@Base+0x64>
  40a0fc:	ldrb	w0, [x19, #12]
  40a100:	mov	w1, #0x2c                  	// #44
  40a104:	strb	w1, [x19, #13]
  40a108:	cbz	w0, 40a114 <jsonw_name@@Base+0x34>
  40a10c:	mov	x0, x19
  40a110:	bl	409e20 <mpls_pton@@Base+0x180>
  40a114:	strb	wzr, [x19, #13]
  40a118:	mov	x1, x20
  40a11c:	mov	x0, x19
  40a120:	bl	409eb8 <mpls_pton@@Base+0x218>
  40a124:	ldr	x1, [x19]
  40a128:	mov	w0, #0x3a                  	// #58
  40a12c:	bl	404c10 <putc@plt>
  40a130:	ldrb	w0, [x19, #12]
  40a134:	cbnz	w0, 40a150 <jsonw_name@@Base+0x70>
  40a138:	ldp	x19, x20, [sp, #16]
  40a13c:	ldp	x29, x30, [sp], #32
  40a140:	ret
  40a144:	ldr	x1, [x19]
  40a148:	bl	404c10 <putc@plt>
  40a14c:	b	40a0fc <jsonw_name@@Base+0x1c>
  40a150:	ldr	x1, [x19]
  40a154:	mov	w0, #0x20                  	// #32
  40a158:	ldp	x19, x20, [sp, #16]
  40a15c:	ldp	x29, x30, [sp], #32
  40a160:	b	404c10 <putc@plt>
  40a164:	nop

000000000040a168 <jsonw_printf@@Base>:
  40a168:	stp	x29, x30, [sp, #-272]!
  40a16c:	mov	w9, #0xffffffd0            	// #-48
  40a170:	mov	x29, sp
  40a174:	stp	x19, x20, [sp, #16]
  40a178:	mov	x19, x0
  40a17c:	add	x10, sp, #0xe0
  40a180:	str	q0, [sp, #96]
  40a184:	mov	w0, #0xffffff80            	// #-128
  40a188:	mov	x20, x1
  40a18c:	ldrb	w8, [x19, #13]
  40a190:	add	x1, sp, #0x110
  40a194:	stp	x1, x1, [sp, #64]
  40a198:	str	x10, [sp, #80]
  40a19c:	stp	w9, w0, [sp, #88]
  40a1a0:	str	q1, [sp, #112]
  40a1a4:	str	q2, [sp, #128]
  40a1a8:	str	q3, [sp, #144]
  40a1ac:	str	q4, [sp, #160]
  40a1b0:	str	q5, [sp, #176]
  40a1b4:	str	q6, [sp, #192]
  40a1b8:	str	q7, [sp, #208]
  40a1bc:	stp	x2, x3, [sp, #224]
  40a1c0:	stp	x4, x5, [sp, #240]
  40a1c4:	stp	x6, x7, [sp, #256]
  40a1c8:	ldr	x0, [x19]
  40a1cc:	cbnz	w8, 40a200 <jsonw_printf@@Base+0x98>
  40a1d0:	ldp	x6, x7, [sp, #64]
  40a1d4:	mov	w1, #0x2c                  	// #44
  40a1d8:	ldp	x4, x5, [sp, #80]
  40a1dc:	strb	w1, [x19, #13]
  40a1e0:	add	x2, sp, #0x20
  40a1e4:	mov	x1, x20
  40a1e8:	stp	x6, x7, [sp, #32]
  40a1ec:	stp	x4, x5, [sp, #48]
  40a1f0:	bl	404fa0 <vfprintf@plt>
  40a1f4:	ldp	x19, x20, [sp, #16]
  40a1f8:	ldp	x29, x30, [sp], #272
  40a1fc:	ret
  40a200:	mov	x1, x0
  40a204:	mov	w0, w8
  40a208:	bl	404c10 <putc@plt>
  40a20c:	ldr	x0, [x19]
  40a210:	b	40a1d0 <jsonw_printf@@Base+0x68>
  40a214:	nop

000000000040a218 <jsonw_start_object@@Base>:
  40a218:	mov	w1, #0x7b                  	// #123
  40a21c:	b	409dc8 <mpls_pton@@Base+0x128>

000000000040a220 <jsonw_end_object@@Base>:
  40a220:	stp	x29, x30, [sp, #-32]!
  40a224:	mov	x29, sp
  40a228:	ldr	w1, [x0, #8]
  40a22c:	str	x19, [sp, #16]
  40a230:	cbz	w1, 40a274 <jsonw_end_object@@Base+0x54>
  40a234:	ldrb	w2, [x0, #13]
  40a238:	sub	w1, w1, #0x1
  40a23c:	str	w1, [x0, #8]
  40a240:	mov	x19, x0
  40a244:	cbz	w2, 40a254 <jsonw_end_object@@Base+0x34>
  40a248:	ldrb	w1, [x0, #12]
  40a24c:	cbz	w1, 40a254 <jsonw_end_object@@Base+0x34>
  40a250:	bl	409e20 <mpls_pton@@Base+0x180>
  40a254:	ldr	x1, [x19]
  40a258:	mov	w0, #0x7d                  	// #125
  40a25c:	bl	404c10 <putc@plt>
  40a260:	mov	w0, #0x2c                  	// #44
  40a264:	strb	w0, [x19, #13]
  40a268:	ldr	x19, [sp, #16]
  40a26c:	ldp	x29, x30, [sp], #32
  40a270:	ret
  40a274:	bl	409e90 <mpls_pton@@Base+0x1f0>

000000000040a278 <jsonw_start_array@@Base>:
  40a278:	stp	x29, x30, [sp, #-32]!
  40a27c:	mov	w1, #0x5b                  	// #91
  40a280:	mov	x29, sp
  40a284:	str	x19, [sp, #16]
  40a288:	mov	x19, x0
  40a28c:	bl	409dc8 <mpls_pton@@Base+0x128>
  40a290:	ldrb	w0, [x19, #12]
  40a294:	cbnz	w0, 40a2a4 <jsonw_start_array@@Base+0x2c>
  40a298:	ldr	x19, [sp, #16]
  40a29c:	ldp	x29, x30, [sp], #32
  40a2a0:	ret
  40a2a4:	ldr	x1, [x19]
  40a2a8:	mov	w0, #0x20                  	// #32
  40a2ac:	ldr	x19, [sp, #16]
  40a2b0:	ldp	x29, x30, [sp], #32
  40a2b4:	b	404c10 <putc@plt>

000000000040a2b8 <jsonw_end_array@@Base>:
  40a2b8:	stp	x29, x30, [sp, #-32]!
  40a2bc:	mov	x29, sp
  40a2c0:	str	x19, [sp, #16]
  40a2c4:	mov	x19, x0
  40a2c8:	ldrb	w0, [x0, #12]
  40a2cc:	cbz	w0, 40a2d8 <jsonw_end_array@@Base+0x20>
  40a2d0:	ldrb	w0, [x19, #13]
  40a2d4:	cbnz	w0, 40a30c <jsonw_end_array@@Base+0x54>
  40a2d8:	ldr	w0, [x19, #8]
  40a2dc:	strb	wzr, [x19, #13]
  40a2e0:	cbz	w0, 40a31c <jsonw_end_array@@Base+0x64>
  40a2e4:	ldr	x1, [x19]
  40a2e8:	sub	w0, w0, #0x1
  40a2ec:	str	w0, [x19, #8]
  40a2f0:	mov	w0, #0x5d                  	// #93
  40a2f4:	bl	404c10 <putc@plt>
  40a2f8:	mov	w0, #0x2c                  	// #44
  40a2fc:	strb	w0, [x19, #13]
  40a300:	ldr	x19, [sp, #16]
  40a304:	ldp	x29, x30, [sp], #32
  40a308:	ret
  40a30c:	ldr	x1, [x19]
  40a310:	mov	w0, #0x20                  	// #32
  40a314:	bl	404c10 <putc@plt>
  40a318:	b	40a2d8 <jsonw_end_array@@Base+0x20>
  40a31c:	bl	409e90 <mpls_pton@@Base+0x1f0>

000000000040a320 <jsonw_string@@Base>:
  40a320:	stp	x29, x30, [sp, #-32]!
  40a324:	mov	x29, sp
  40a328:	stp	x19, x20, [sp, #16]
  40a32c:	mov	x19, x0
  40a330:	mov	x20, x1
  40a334:	ldrb	w0, [x0, #13]
  40a338:	cbnz	w0, 40a358 <jsonw_string@@Base+0x38>
  40a33c:	mov	w0, #0x2c                  	// #44
  40a340:	strb	w0, [x19, #13]
  40a344:	mov	x1, x20
  40a348:	mov	x0, x19
  40a34c:	ldp	x19, x20, [sp, #16]
  40a350:	ldp	x29, x30, [sp], #32
  40a354:	b	409eb8 <mpls_pton@@Base+0x218>
  40a358:	ldr	x1, [x19]
  40a35c:	bl	404c10 <putc@plt>
  40a360:	mov	w0, #0x2c                  	// #44
  40a364:	strb	w0, [x19, #13]
  40a368:	mov	x1, x20
  40a36c:	mov	x0, x19
  40a370:	ldp	x19, x20, [sp, #16]
  40a374:	ldp	x29, x30, [sp], #32
  40a378:	b	409eb8 <mpls_pton@@Base+0x218>
  40a37c:	nop

000000000040a380 <jsonw_bool@@Base>:
  40a380:	tst	w1, #0xff
  40a384:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a388:	adrp	x2, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a38c:	add	x3, x3, #0x2d8
  40a390:	add	x2, x2, #0x2d0
  40a394:	adrp	x1, 40c000 <rtnl_listen@@Base+0x228>
  40a398:	csel	x2, x2, x3, ne  // ne = any
  40a39c:	add	x1, x1, #0xf38
  40a3a0:	b	40a168 <jsonw_printf@@Base>
  40a3a4:	nop

000000000040a3a8 <jsonw_null@@Base>:
  40a3a8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a3ac:	add	x1, x1, #0x478
  40a3b0:	b	40a168 <jsonw_printf@@Base>
  40a3b4:	nop

000000000040a3b8 <jsonw_float@@Base>:
  40a3b8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a3bc:	add	x1, x1, #0x480
  40a3c0:	b	40a168 <jsonw_printf@@Base>
  40a3c4:	nop

000000000040a3c8 <jsonw_hhu@@Base>:
  40a3c8:	and	w2, w1, #0xff
  40a3cc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a3d0:	add	x1, x1, #0x488
  40a3d4:	b	40a168 <jsonw_printf@@Base>

000000000040a3d8 <jsonw_hu@@Base>:
  40a3d8:	and	w2, w1, #0xffff
  40a3dc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a3e0:	add	x1, x1, #0x490
  40a3e4:	b	40a168 <jsonw_printf@@Base>

000000000040a3e8 <jsonw_uint@@Base>:
  40a3e8:	mov	w2, w1
  40a3ec:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a3f0:	add	x1, x3, #0x3d0
  40a3f4:	b	40a168 <jsonw_printf@@Base>

000000000040a3f8 <jsonw_u64@@Base>:
  40a3f8:	mov	x2, x1
  40a3fc:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a400:	add	x1, x3, #0x498
  40a404:	b	40a168 <jsonw_printf@@Base>

000000000040a408 <jsonw_xint@@Base>:
  40a408:	mov	x2, x1
  40a40c:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a410:	add	x1, x3, #0x4a0
  40a414:	b	40a168 <jsonw_printf@@Base>

000000000040a418 <jsonw_luint@@Base>:
  40a418:	b	40a3f8 <jsonw_u64@@Base>
  40a41c:	nop

000000000040a420 <jsonw_lluint@@Base>:
  40a420:	mov	x2, x1
  40a424:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a428:	add	x1, x3, #0x4a8
  40a42c:	b	40a168 <jsonw_printf@@Base>

000000000040a430 <jsonw_int@@Base>:
  40a430:	mov	w2, w1
  40a434:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a438:	add	x1, x3, #0x188
  40a43c:	b	40a168 <jsonw_printf@@Base>

000000000040a440 <jsonw_s64@@Base>:
  40a440:	mov	x2, x1
  40a444:	adrp	x3, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a448:	add	x1, x3, #0x4b0
  40a44c:	b	40a168 <jsonw_printf@@Base>

000000000040a450 <jsonw_string_field@@Base>:
  40a450:	stp	x29, x30, [sp, #-32]!
  40a454:	mov	x29, sp
  40a458:	stp	x19, x20, [sp, #16]
  40a45c:	mov	x20, x2
  40a460:	mov	x19, x0
  40a464:	bl	40a0e0 <jsonw_name@@Base>
  40a468:	mov	x1, x20
  40a46c:	mov	x0, x19
  40a470:	ldp	x19, x20, [sp, #16]
  40a474:	ldp	x29, x30, [sp], #32
  40a478:	b	40a320 <jsonw_string@@Base>
  40a47c:	nop

000000000040a480 <jsonw_bool_field@@Base>:
  40a480:	stp	x29, x30, [sp, #-32]!
  40a484:	mov	x29, sp
  40a488:	stp	x19, x20, [sp, #16]
  40a48c:	and	w20, w2, #0xff
  40a490:	mov	x19, x0
  40a494:	bl	40a0e0 <jsonw_name@@Base>
  40a498:	mov	w1, w20
  40a49c:	mov	x0, x19
  40a4a0:	ldp	x19, x20, [sp, #16]
  40a4a4:	ldp	x29, x30, [sp], #32
  40a4a8:	b	40a380 <jsonw_bool@@Base>
  40a4ac:	nop

000000000040a4b0 <jsonw_float_field@@Base>:
  40a4b0:	stp	x29, x30, [sp, #-32]!
  40a4b4:	mov	x29, sp
  40a4b8:	str	d8, [sp, #24]
  40a4bc:	fmov	d8, d0
  40a4c0:	str	x19, [sp, #16]
  40a4c4:	mov	x19, x0
  40a4c8:	bl	40a0e0 <jsonw_name@@Base>
  40a4cc:	fmov	d0, d8
  40a4d0:	mov	x0, x19
  40a4d4:	ldr	d8, [sp, #24]
  40a4d8:	ldr	x19, [sp, #16]
  40a4dc:	ldp	x29, x30, [sp], #32
  40a4e0:	b	40a3b8 <jsonw_float@@Base>
  40a4e4:	nop

000000000040a4e8 <jsonw_uint_field@@Base>:
  40a4e8:	stp	x29, x30, [sp, #-32]!
  40a4ec:	mov	x29, sp
  40a4f0:	stp	x19, x20, [sp, #16]
  40a4f4:	mov	w20, w2
  40a4f8:	mov	x19, x0
  40a4fc:	bl	40a0e0 <jsonw_name@@Base>
  40a500:	mov	w1, w20
  40a504:	mov	x0, x19
  40a508:	ldp	x19, x20, [sp, #16]
  40a50c:	ldp	x29, x30, [sp], #32
  40a510:	b	40a3e8 <jsonw_uint@@Base>
  40a514:	nop

000000000040a518 <jsonw_u64_field@@Base>:
  40a518:	stp	x29, x30, [sp, #-32]!
  40a51c:	mov	x29, sp
  40a520:	stp	x19, x20, [sp, #16]
  40a524:	mov	x20, x2
  40a528:	mov	x19, x0
  40a52c:	bl	40a0e0 <jsonw_name@@Base>
  40a530:	mov	x1, x20
  40a534:	mov	x0, x19
  40a538:	ldp	x19, x20, [sp, #16]
  40a53c:	ldp	x29, x30, [sp], #32
  40a540:	b	40a3f8 <jsonw_u64@@Base>
  40a544:	nop

000000000040a548 <jsonw_xint_field@@Base>:
  40a548:	stp	x29, x30, [sp, #-32]!
  40a54c:	mov	x29, sp
  40a550:	stp	x19, x20, [sp, #16]
  40a554:	mov	x20, x2
  40a558:	mov	x19, x0
  40a55c:	bl	40a0e0 <jsonw_name@@Base>
  40a560:	mov	x1, x20
  40a564:	mov	x0, x19
  40a568:	ldp	x19, x20, [sp, #16]
  40a56c:	ldp	x29, x30, [sp], #32
  40a570:	b	40a408 <jsonw_xint@@Base>
  40a574:	nop

000000000040a578 <jsonw_hhu_field@@Base>:
  40a578:	stp	x29, x30, [sp, #-32]!
  40a57c:	mov	x29, sp
  40a580:	stp	x19, x20, [sp, #16]
  40a584:	and	w20, w2, #0xff
  40a588:	mov	x19, x0
  40a58c:	bl	40a0e0 <jsonw_name@@Base>
  40a590:	mov	w1, w20
  40a594:	mov	x0, x19
  40a598:	ldp	x19, x20, [sp, #16]
  40a59c:	ldp	x29, x30, [sp], #32
  40a5a0:	b	40a3c8 <jsonw_hhu@@Base>
  40a5a4:	nop

000000000040a5a8 <jsonw_hu_field@@Base>:
  40a5a8:	stp	x29, x30, [sp, #-32]!
  40a5ac:	mov	x29, sp
  40a5b0:	stp	x19, x20, [sp, #16]
  40a5b4:	and	w20, w2, #0xffff
  40a5b8:	mov	x19, x0
  40a5bc:	bl	40a0e0 <jsonw_name@@Base>
  40a5c0:	mov	w1, w20
  40a5c4:	mov	x0, x19
  40a5c8:	ldp	x19, x20, [sp, #16]
  40a5cc:	ldp	x29, x30, [sp], #32
  40a5d0:	b	40a3d8 <jsonw_hu@@Base>
  40a5d4:	nop

000000000040a5d8 <jsonw_luint_field@@Base>:
  40a5d8:	stp	x29, x30, [sp, #-32]!
  40a5dc:	mov	x29, sp
  40a5e0:	stp	x19, x20, [sp, #16]
  40a5e4:	mov	x20, x2
  40a5e8:	mov	x19, x0
  40a5ec:	bl	40a0e0 <jsonw_name@@Base>
  40a5f0:	mov	x1, x20
  40a5f4:	mov	x0, x19
  40a5f8:	ldp	x19, x20, [sp, #16]
  40a5fc:	ldp	x29, x30, [sp], #32
  40a600:	b	40a418 <jsonw_luint@@Base>
  40a604:	nop

000000000040a608 <jsonw_lluint_field@@Base>:
  40a608:	stp	x29, x30, [sp, #-32]!
  40a60c:	mov	x29, sp
  40a610:	stp	x19, x20, [sp, #16]
  40a614:	mov	x20, x2
  40a618:	mov	x19, x0
  40a61c:	bl	40a0e0 <jsonw_name@@Base>
  40a620:	mov	x1, x20
  40a624:	mov	x0, x19
  40a628:	ldp	x19, x20, [sp, #16]
  40a62c:	ldp	x29, x30, [sp], #32
  40a630:	b	40a420 <jsonw_lluint@@Base>
  40a634:	nop

000000000040a638 <jsonw_int_field@@Base>:
  40a638:	stp	x29, x30, [sp, #-32]!
  40a63c:	mov	x29, sp
  40a640:	stp	x19, x20, [sp, #16]
  40a644:	mov	w20, w2
  40a648:	mov	x19, x0
  40a64c:	bl	40a0e0 <jsonw_name@@Base>
  40a650:	mov	w1, w20
  40a654:	mov	x0, x19
  40a658:	ldp	x19, x20, [sp, #16]
  40a65c:	ldp	x29, x30, [sp], #32
  40a660:	b	40a430 <jsonw_int@@Base>
  40a664:	nop

000000000040a668 <jsonw_s64_field@@Base>:
  40a668:	stp	x29, x30, [sp, #-32]!
  40a66c:	mov	x29, sp
  40a670:	stp	x19, x20, [sp, #16]
  40a674:	mov	x20, x2
  40a678:	mov	x19, x0
  40a67c:	bl	40a0e0 <jsonw_name@@Base>
  40a680:	mov	x1, x20
  40a684:	mov	x0, x19
  40a688:	ldp	x19, x20, [sp, #16]
  40a68c:	ldp	x29, x30, [sp], #32
  40a690:	b	40a440 <jsonw_s64@@Base>
  40a694:	nop

000000000040a698 <jsonw_null_field@@Base>:
  40a698:	stp	x29, x30, [sp, #-32]!
  40a69c:	mov	x29, sp
  40a6a0:	str	x19, [sp, #16]
  40a6a4:	mov	x19, x0
  40a6a8:	bl	40a0e0 <jsonw_name@@Base>
  40a6ac:	mov	x0, x19
  40a6b0:	ldr	x19, [sp, #16]
  40a6b4:	ldp	x29, x30, [sp], #32
  40a6b8:	b	40a3a8 <jsonw_null@@Base>
  40a6bc:	nop
  40a6c0:	mov	x4, x0
  40a6c4:	stp	x29, x30, [sp, #-48]!
  40a6c8:	mov	x7, #0x20                  	// #32
  40a6cc:	mov	x29, sp
  40a6d0:	ldr	w5, [x4, #28]
  40a6d4:	mov	w6, w1
  40a6d8:	ldr	w0, [x0]
  40a6dc:	movk	x7, #0x12, lsl #32
  40a6e0:	add	w5, w5, #0x1
  40a6e4:	movk	x7, #0x301, lsl #48
  40a6e8:	stp	w5, w5, [x4, #28]
  40a6ec:	add	x1, sp, #0x10
  40a6f0:	stp	xzr, xzr, [sp, #24]
  40a6f4:	mov	w3, #0x0                   	// #0
  40a6f8:	mov	x2, #0x20                  	// #32
  40a6fc:	str	x7, [sp, #16]
  40a700:	str	w5, [sp, #24]
  40a704:	strb	w6, [sp, #32]
  40a708:	str	xzr, [sp, #40]
  40a70c:	bl	404e70 <send@plt>
  40a710:	ldp	x29, x30, [sp], #48
  40a714:	ret
  40a718:	stp	x29, x30, [sp, #-48]!
  40a71c:	mov	x29, sp
  40a720:	stp	x19, x20, [sp, #16]
  40a724:	mov	w20, w2
  40a728:	stp	x21, x22, [sp, #32]
  40a72c:	mov	w22, w0
  40a730:	mov	x21, x1
  40a734:	b	40a750 <jsonw_null_field@@Base+0xb8>
  40a738:	bl	404fd0 <__errno_location@plt>
  40a73c:	mov	x19, x0
  40a740:	ldr	w0, [x0]
  40a744:	cmp	w0, #0x4
  40a748:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40a74c:	b.ne	40a780 <jsonw_null_field@@Base+0xe8>  // b.any
  40a750:	mov	x1, x21
  40a754:	mov	w2, w20
  40a758:	mov	w0, w22
  40a75c:	bl	404b40 <recvmsg@plt>
  40a760:	mov	w1, w0
  40a764:	tbnz	w0, #31, 40a738 <jsonw_null_field@@Base+0xa0>
  40a768:	cbz	w0, 40a7c4 <jsonw_null_field@@Base+0x12c>
  40a76c:	mov	w0, w1
  40a770:	ldp	x19, x20, [sp, #16]
  40a774:	ldp	x21, x22, [sp, #32]
  40a778:	ldp	x29, x30, [sp], #48
  40a77c:	ret
  40a780:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  40a784:	ldr	x1, [x1, #3992]
  40a788:	ldr	x20, [x1]
  40a78c:	bl	404d70 <strerror@plt>
  40a790:	ldr	w3, [x19]
  40a794:	mov	x2, x0
  40a798:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a79c:	mov	x0, x20
  40a7a0:	add	x1, x1, #0x4e8
  40a7a4:	bl	405020 <fprintf@plt>
  40a7a8:	ldr	w1, [x19]
  40a7ac:	ldp	x19, x20, [sp, #16]
  40a7b0:	neg	w1, w1
  40a7b4:	mov	w0, w1
  40a7b8:	ldp	x21, x22, [sp, #32]
  40a7bc:	ldp	x29, x30, [sp], #48
  40a7c0:	ret
  40a7c4:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40a7c8:	mov	x1, #0x1                   	// #1
  40a7cc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a7d0:	mov	x2, #0xf                   	// #15
  40a7d4:	ldr	x3, [x3, #3992]
  40a7d8:	add	x0, x0, #0x4d8
  40a7dc:	ldr	x3, [x3]
  40a7e0:	bl	404eb0 <fwrite@plt>
  40a7e4:	mov	w1, #0xffffffc3            	// #-61
  40a7e8:	b	40a76c <jsonw_null_field@@Base+0xd4>
  40a7ec:	nop
  40a7f0:	stp	x29, x30, [sp, #-64]!
  40a7f4:	mov	x29, sp
  40a7f8:	stp	x21, x22, [sp, #32]
  40a7fc:	mov	x22, x2
  40a800:	mov	w2, #0x22                  	// #34
  40a804:	ldr	x21, [x1, #16]
  40a808:	stp	x19, x20, [sp, #16]
  40a80c:	mov	x20, x1
  40a810:	stp	x23, x24, [sp, #48]
  40a814:	mov	w24, w0
  40a818:	stp	xzr, xzr, [x21]
  40a81c:	bl	40a718 <jsonw_null_field@@Base+0x80>
  40a820:	sxtw	x19, w0
  40a824:	tbnz	w19, #31, 40a864 <jsonw_null_field@@Base+0x1cc>
  40a828:	cmp	w19, #0x8, lsl #12
  40a82c:	mov	x0, #0x8000                	// #32768
  40a830:	csel	x19, x19, x0, ge  // ge = tcont
  40a834:	mov	x0, x19
  40a838:	bl	404c90 <malloc@plt>
  40a83c:	mov	x23, x0
  40a840:	cbz	x0, 40a888 <jsonw_null_field@@Base+0x1f0>
  40a844:	stp	x23, x19, [x21]
  40a848:	mov	x1, x20
  40a84c:	mov	w0, w24
  40a850:	mov	w2, #0x0                   	// #0
  40a854:	bl	40a718 <jsonw_null_field@@Base+0x80>
  40a858:	mov	w19, w0
  40a85c:	tbnz	w0, #31, 40a87c <jsonw_null_field@@Base+0x1e4>
  40a860:	str	x23, [x22]
  40a864:	mov	w0, w19
  40a868:	ldp	x19, x20, [sp, #16]
  40a86c:	ldp	x21, x22, [sp, #32]
  40a870:	ldp	x23, x24, [sp, #48]
  40a874:	ldp	x29, x30, [sp], #64
  40a878:	ret
  40a87c:	mov	x0, x23
  40a880:	bl	404e50 <free@plt>
  40a884:	b	40a864 <jsonw_null_field@@Base+0x1cc>
  40a888:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40a88c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40a890:	mov	x2, #0x20                  	// #32
  40a894:	mov	x1, #0x1                   	// #1
  40a898:	ldr	x3, [x3, #3992]
  40a89c:	mov	w19, #0xfffffff4            	// #-12
  40a8a0:	add	x0, x0, #0x508
  40a8a4:	ldr	x3, [x3]
  40a8a8:	bl	404eb0 <fwrite@plt>
  40a8ac:	b	40a864 <jsonw_null_field@@Base+0x1cc>

000000000040a8b0 <nl_dump_ext_ack@@Base>:
  40a8b0:	mov	w0, #0x0                   	// #0
  40a8b4:	ret
  40a8b8:	stp	x29, x30, [sp, #-240]!
  40a8bc:	mov	x7, x2
  40a8c0:	mov	w5, #0x10                  	// #16
  40a8c4:	mov	x29, sp
  40a8c8:	str	xzr, [sp, #152]
  40a8cc:	mov	w6, #0xc                   	// #12
  40a8d0:	stp	xzr, xzr, [sp, #192]
  40a8d4:	stp	xzr, xzr, [sp, #208]
  40a8d8:	stp	x19, x20, [sp, #16]
  40a8dc:	mov	x20, x3
  40a8e0:	stp	x25, x26, [sp, #64]
  40a8e4:	stp	x27, x28, [sp, #80]
  40a8e8:	mov	x28, x0
  40a8ec:	and	w0, w4, #0xff
  40a8f0:	str	x2, [sp, #104]
  40a8f4:	str	w0, [sp, #136]
  40a8f8:	strh	w5, [sp, #152]
  40a8fc:	str	wzr, [sp, #160]
  40a900:	str	w6, [sp, #192]
  40a904:	stp	x1, x2, [sp, #200]
  40a908:	add	x2, sp, #0x98
  40a90c:	str	x2, [sp, #184]
  40a910:	stp	xzr, xzr, [sp, #224]
  40a914:	cbz	x7, 40abf4 <nl_dump_ext_ack@@Base+0x344>
  40a918:	ldr	w19, [x28, #28]
  40a91c:	mov	x2, x1
  40a920:	add	w19, w19, #0x1
  40a924:	add	w4, w19, w7
  40a928:	mov	w1, w19
  40a92c:	b	40a940 <nl_dump_ext_ack@@Base+0x90>
  40a930:	add	w1, w1, #0x1
  40a934:	add	x2, x2, #0x10
  40a938:	cmp	w1, w4
  40a93c:	b.eq	40a968 <nl_dump_ext_ack@@Base+0xb8>  // b.none
  40a940:	ldr	x0, [x2]
  40a944:	str	w1, [x0, #8]
  40a948:	cbnz	x20, 40a930 <nl_dump_ext_ack@@Base+0x80>
  40a94c:	ldrh	w3, [x0, #6]
  40a950:	add	w1, w1, #0x1
  40a954:	add	x2, x2, #0x10
  40a958:	cmp	w1, w4
  40a95c:	orr	w3, w3, #0x4
  40a960:	strh	w3, [x0, #6]
  40a964:	b.ne	40a940 <nl_dump_ext_ack@@Base+0x90>  // b.any
  40a968:	ldr	x0, [sp, #104]
  40a96c:	sub	x0, x0, #0x1
  40a970:	add	w19, w19, w0
  40a974:	str	w19, [x28, #28]
  40a978:	ldr	w0, [x28]
  40a97c:	add	x26, sp, #0xb8
  40a980:	mov	x1, x26
  40a984:	mov	w2, #0x0                   	// #0
  40a988:	bl	404d10 <sendmsg@plt>
  40a98c:	tbnz	w0, #31, 40ac7c <nl_dump_ext_ack@@Base+0x3cc>
  40a990:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  40a994:	stp	x21, x22, [sp, #32]
  40a998:	mov	w21, w19
  40a99c:	ldr	x0, [sp, #104]
  40a9a0:	add	x2, sp, #0x90
  40a9a4:	ldr	x1, [x1, #3992]
  40a9a8:	sub	x21, x21, x0
  40a9ac:	add	x0, sp, #0xa8
  40a9b0:	stp	x23, x24, [sp, #48]
  40a9b4:	str	xzr, [sp, #96]
  40a9b8:	str	x2, [sp, #112]
  40a9bc:	str	x1, [sp, #128]
  40a9c0:	mov	x1, #0x1                   	// #1
  40a9c4:	str	x0, [sp, #200]
  40a9c8:	str	x1, [sp, #208]
  40a9cc:	ldr	w3, [sp, #96]
  40a9d0:	mov	x1, x26
  40a9d4:	ldr	w0, [x28]
  40a9d8:	ldr	x2, [sp, #112]
  40a9dc:	str	w3, [sp, #124]
  40a9e0:	bl	40a7f0 <jsonw_null_field@@Base+0x158>
  40a9e4:	mov	w4, w0
  40a9e8:	tbnz	w0, #31, 40ac10 <nl_dump_ext_ack@@Base+0x360>
  40a9ec:	ldr	w2, [sp, #192]
  40a9f0:	cmp	w2, #0xc
  40a9f4:	b.ne	40ad18 <nl_dump_ext_ack@@Base+0x468>  // b.any
  40a9f8:	mov	w22, w0
  40a9fc:	cmp	w0, #0xf
  40aa00:	ldr	x23, [sp, #144]
  40aa04:	b.le	40aaa8 <nl_dump_ext_ack@@Base+0x1f8>
  40aa08:	ldr	w27, [x23]
  40aa0c:	subs	w3, w27, #0x10
  40aa10:	ccmp	w0, w27, #0x1, pl  // pl = nfrst
  40aa14:	b.lt	40aad4 <nl_dump_ext_ack@@Base+0x224>  // b.tstop
  40aa18:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40aa1c:	adrp	x24, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40aa20:	ldr	x25, [x0, #3992]
  40aa24:	b	40aa38 <nl_dump_ext_ack@@Base+0x188>
  40aa28:	ldr	w27, [x23]
  40aa2c:	subs	w3, w27, #0x10
  40aa30:	ccmp	w27, w22, #0x0, pl  // pl = nfrst
  40aa34:	b.gt	40aad4 <nl_dump_ext_ack@@Base+0x224>
  40aa38:	ldr	w1, [sp, #156]
  40aa3c:	cbnz	w1, 40aa88 <nl_dump_ext_ack@@Base+0x1d8>
  40aa40:	ldr	w2, [x23, #12]
  40aa44:	ldr	w1, [x28, #8]
  40aa48:	cmp	w2, w1
  40aa4c:	b.ne	40aa88 <nl_dump_ext_ack@@Base+0x1d8>  // b.any
  40aa50:	ldr	w0, [x23, #8]
  40aa54:	cmp	w0, w19
  40aa58:	b.hi	40aa88 <nl_dump_ext_ack@@Base+0x1d8>  // b.pmore
  40aa5c:	cmp	x21, w0, uxtw
  40aa60:	b.hi	40aa88 <nl_dump_ext_ack@@Base+0x1d8>  // b.pmore
  40aa64:	ldrh	w0, [x23, #4]
  40aa68:	cmp	w0, #0x2
  40aa6c:	b.eq	40ab5c <nl_dump_ext_ack@@Base+0x2ac>  // b.none
  40aa70:	cbnz	x20, 40abc8 <nl_dump_ext_ack@@Base+0x318>
  40aa74:	ldr	x3, [x25]
  40aa78:	add	x0, x24, #0x5d8
  40aa7c:	mov	x2, #0x14                  	// #20
  40aa80:	mov	x1, #0x1                   	// #1
  40aa84:	bl	404eb0 <fwrite@plt>
  40aa88:	add	w4, w27, #0x3
  40aa8c:	and	w4, w4, #0xfffffffc
  40aa90:	sub	w22, w22, w4
  40aa94:	add	x23, x23, w4, uxtw
  40aa98:	cmp	w22, #0xf
  40aa9c:	mov	w4, w22
  40aaa0:	b.hi	40aa28 <nl_dump_ext_ack@@Base+0x178>  // b.pmore
  40aaa4:	ldr	x23, [sp, #144]
  40aaa8:	mov	x0, x23
  40aaac:	str	w4, [sp, #124]
  40aab0:	bl	404e50 <free@plt>
  40aab4:	ldr	w0, [sp, #232]
  40aab8:	ldr	w4, [sp, #124]
  40aabc:	tbnz	w0, #5, 40ab30 <nl_dump_ext_ack@@Base+0x280>
  40aac0:	cbnz	w4, 40acf4 <nl_dump_ext_ack@@Base+0x444>
  40aac4:	ldr	x0, [sp, #96]
  40aac8:	add	x23, x0, #0x1
  40aacc:	str	x23, [sp, #96]
  40aad0:	b	40a9cc <nl_dump_ext_ack@@Base+0x11c>
  40aad4:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40aad8:	ldr	w1, [sp, #232]
  40aadc:	ldr	x0, [x0, #3992]
  40aae0:	ldr	x3, [x0]
  40aae4:	tbz	w1, #5, 40acd8 <nl_dump_ext_ack@@Base+0x428>
  40aae8:	mov	x2, #0x12                  	// #18
  40aaec:	mov	x1, #0x1                   	// #1
  40aaf0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40aaf4:	add	x0, x0, #0x570
  40aaf8:	bl	404eb0 <fwrite@plt>
  40aafc:	ldr	x0, [sp, #144]
  40ab00:	mov	w4, #0xffffffff            	// #-1
  40ab04:	str	w4, [sp, #96]
  40ab08:	bl	404e50 <free@plt>
  40ab0c:	ldp	x21, x22, [sp, #32]
  40ab10:	ldp	x23, x24, [sp, #48]
  40ab14:	ldr	w4, [sp, #96]
  40ab18:	mov	w0, w4
  40ab1c:	ldp	x19, x20, [sp, #16]
  40ab20:	ldp	x25, x26, [sp, #64]
  40ab24:	ldp	x27, x28, [sp, #80]
  40ab28:	ldp	x29, x30, [sp], #240
  40ab2c:	ret
  40ab30:	ldr	x0, [sp, #128]
  40ab34:	mov	x2, #0x12                  	// #18
  40ab38:	mov	x1, #0x1                   	// #1
  40ab3c:	ldr	x3, [x0]
  40ab40:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40ab44:	add	x0, x0, #0x5f0
  40ab48:	bl	404eb0 <fwrite@plt>
  40ab4c:	ldr	x0, [sp, #96]
  40ab50:	add	x23, x0, #0x1
  40ab54:	str	x23, [sp, #96]
  40ab58:	b	40a9cc <nl_dump_ext_ack@@Base+0x11c>
  40ab5c:	ldr	w4, [x23, #16]
  40ab60:	cmp	w3, #0x13
  40ab64:	b.ls	40ac98 <nl_dump_ext_ack@@Base+0x3e8>  // b.plast
  40ab68:	str	w4, [sp, #140]
  40ab6c:	cbz	w4, 40abfc <nl_dump_ext_ack@@Base+0x34c>
  40ab70:	bl	404fd0 <__errno_location@plt>
  40ab74:	ldp	w2, w4, [sp, #136]
  40ab78:	neg	w1, w4
  40ab7c:	str	w1, [x0]
  40ab80:	cmp	w2, #0x0
  40ab84:	ldr	w0, [x28, #36]
  40ab88:	ccmp	w0, #0x4, #0x4, ne  // ne = any
  40ab8c:	b.ne	40ac2c <nl_dump_ext_ack@@Base+0x37c>  // b.any
  40ab90:	ldr	x0, [sp, #144]
  40ab94:	cbz	x20, 40ac1c <nl_dump_ext_ack@@Base+0x36c>
  40ab98:	str	x0, [x20]
  40ab9c:	ldr	x0, [sp, #96]
  40aba0:	add	x23, x0, #0x1
  40aba4:	ldr	x0, [sp, #104]
  40aba8:	cmp	x0, x23
  40abac:	b.hi	40aacc <nl_dump_ext_ack@@Base+0x21c>  // b.pmore
  40abb0:	ldr	w0, [sp, #124]
  40abb4:	cmp	w4, #0x0
  40abb8:	ldp	x21, x22, [sp, #32]
  40abbc:	csinv	w4, w4, w0, eq  // eq = none
  40abc0:	ldp	x23, x24, [sp, #48]
  40abc4:	b	40ab18 <nl_dump_ext_ack@@Base+0x268>
  40abc8:	ldr	x0, [sp, #144]
  40abcc:	mov	w4, #0x0                   	// #0
  40abd0:	ldp	x21, x22, [sp, #32]
  40abd4:	ldp	x23, x24, [sp, #48]
  40abd8:	str	x0, [x20]
  40abdc:	mov	w0, w4
  40abe0:	ldp	x19, x20, [sp, #16]
  40abe4:	ldp	x25, x26, [sp, #64]
  40abe8:	ldp	x27, x28, [sp, #80]
  40abec:	ldp	x29, x30, [sp], #240
  40abf0:	ret
  40abf4:	mov	w19, #0x0                   	// #0
  40abf8:	b	40a978 <nl_dump_ext_ack@@Base+0xc8>
  40abfc:	mov	x0, x23
  40ac00:	mov	x1, #0x0                   	// #0
  40ac04:	bl	40a8b0 <nl_dump_ext_ack@@Base>
  40ac08:	ldr	w4, [sp, #140]
  40ac0c:	b	40ab90 <nl_dump_ext_ack@@Base+0x2e0>
  40ac10:	ldp	x21, x22, [sp, #32]
  40ac14:	ldp	x23, x24, [sp, #48]
  40ac18:	b	40ab18 <nl_dump_ext_ack@@Base+0x268>
  40ac1c:	str	w4, [sp, #140]
  40ac20:	bl	404e50 <free@plt>
  40ac24:	ldr	w4, [sp, #140]
  40ac28:	b	40ab9c <nl_dump_ext_ack@@Base+0x2ec>
  40ac2c:	mov	x0, x23
  40ac30:	mov	x1, #0x0                   	// #0
  40ac34:	str	w4, [sp, #140]
  40ac38:	bl	40a8b0 <nl_dump_ext_ack@@Base>
  40ac3c:	ldr	w4, [sp, #140]
  40ac40:	cbnz	w0, 40ab90 <nl_dump_ext_ack@@Base+0x2e0>
  40ac44:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40ac48:	str	w4, [sp, #140]
  40ac4c:	ldr	x1, [x0, #3992]
  40ac50:	ldr	w0, [x23, #16]
  40ac54:	ldr	x24, [x1]
  40ac58:	neg	w0, w0
  40ac5c:	bl	404d70 <strerror@plt>
  40ac60:	mov	x2, x0
  40ac64:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40ac68:	mov	x0, x24
  40ac6c:	add	x1, x1, #0x5c0
  40ac70:	bl	405020 <fprintf@plt>
  40ac74:	ldr	w4, [sp, #140]
  40ac78:	b	40ab90 <nl_dump_ext_ack@@Base+0x2e0>
  40ac7c:	mov	w4, #0xffffffff            	// #-1
  40ac80:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40ac84:	add	x0, x0, #0x530
  40ac88:	str	w4, [sp, #96]
  40ac8c:	bl	404b80 <perror@plt>
  40ac90:	ldr	w4, [sp, #96]
  40ac94:	b	40ab18 <nl_dump_ext_ack@@Base+0x268>
  40ac98:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40ac9c:	mov	w4, #0xffffffff            	// #-1
  40aca0:	mov	x2, #0x10                  	// #16
  40aca4:	mov	x1, #0x1                   	// #1
  40aca8:	ldr	x3, [x3, #3992]
  40acac:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40acb0:	add	x0, x0, #0x5a8
  40acb4:	str	w4, [sp, #96]
  40acb8:	ldr	x3, [x3]
  40acbc:	bl	404eb0 <fwrite@plt>
  40acc0:	ldr	x0, [sp, #144]
  40acc4:	bl	404e50 <free@plt>
  40acc8:	ldr	w4, [sp, #96]
  40accc:	ldp	x21, x22, [sp, #32]
  40acd0:	ldp	x23, x24, [sp, #48]
  40acd4:	b	40ab18 <nl_dump_ext_ack@@Base+0x268>
  40acd8:	mov	w2, w27
  40acdc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40ace0:	add	x1, x1, #0x588
  40ace4:	mov	x0, x3
  40ace8:	bl	405020 <fprintf@plt>
  40acec:	mov	w0, #0x1                   	// #1
  40acf0:	bl	404b70 <exit@plt>
  40acf4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40acf8:	mov	w2, w4
  40acfc:	add	x1, x1, #0x608
  40ad00:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40ad04:	ldr	x0, [x0, #3992]
  40ad08:	ldr	x0, [x0]
  40ad0c:	bl	405020 <fprintf@plt>
  40ad10:	mov	w0, #0x1                   	// #1
  40ad14:	bl	404b70 <exit@plt>
  40ad18:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40ad1c:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40ad20:	add	x1, x1, #0x550
  40ad24:	b	40ad04 <nl_dump_ext_ack@@Base+0x454>

000000000040ad28 <nl_dump_ext_ack_done@@Base>:
  40ad28:	mov	w0, #0x0                   	// #0
  40ad2c:	ret

000000000040ad30 <rtnl_set_strict_dump@@Base>:
  40ad30:	stp	x29, x30, [sp, #-48]!
  40ad34:	mov	w5, #0x1                   	// #1
  40ad38:	mov	w4, #0x4                   	// #4
  40ad3c:	mov	x29, sp
  40ad40:	str	x19, [sp, #16]
  40ad44:	mov	x19, x0
  40ad48:	ldr	w0, [x0]
  40ad4c:	add	x3, sp, #0x2c
  40ad50:	mov	w2, #0xc                   	// #12
  40ad54:	mov	w1, #0x10e                 	// #270
  40ad58:	str	w5, [sp, #44]
  40ad5c:	bl	404ca0 <setsockopt@plt>
  40ad60:	tbnz	w0, #31, 40ad70 <rtnl_set_strict_dump@@Base+0x40>
  40ad64:	ldr	w0, [x19, #48]
  40ad68:	orr	w0, w0, #0x4
  40ad6c:	str	w0, [x19, #48]
  40ad70:	ldr	x19, [sp, #16]
  40ad74:	ldp	x29, x30, [sp], #48
  40ad78:	ret
  40ad7c:	nop

000000000040ad80 <rtnl_add_nl_group@@Base>:
  40ad80:	stp	x29, x30, [sp, #-32]!
  40ad84:	mov	w4, #0x4                   	// #4
  40ad88:	mov	w2, #0x1                   	// #1
  40ad8c:	mov	x29, sp
  40ad90:	ldr	w0, [x0]
  40ad94:	add	x3, sp, #0x1c
  40ad98:	str	w1, [sp, #28]
  40ad9c:	mov	w1, #0x10e                 	// #270
  40ada0:	bl	404ca0 <setsockopt@plt>
  40ada4:	ldp	x29, x30, [sp], #32
  40ada8:	ret
  40adac:	nop

000000000040adb0 <rtnl_close@@Base>:
  40adb0:	stp	x29, x30, [sp, #-32]!
  40adb4:	mov	x29, sp
  40adb8:	str	x19, [sp, #16]
  40adbc:	mov	x19, x0
  40adc0:	ldr	w0, [x0]
  40adc4:	tbnz	w0, #31, 40add4 <rtnl_close@@Base+0x24>
  40adc8:	bl	404d80 <close@plt>
  40adcc:	mov	w0, #0xffffffff            	// #-1
  40add0:	str	w0, [x19]
  40add4:	ldr	x19, [sp, #16]
  40add8:	ldp	x29, x30, [sp], #32
  40addc:	ret

000000000040ade0 <rtnl_open_byproto@@Base>:
  40ade0:	stp	x29, x30, [sp, #-64]!
  40ade4:	mov	w3, #0x8000                	// #32768
  40ade8:	mov	x29, sp
  40adec:	stp	x19, x20, [sp, #16]
  40adf0:	mov	x19, x0
  40adf4:	mov	w20, #0x1                   	// #1
  40adf8:	str	x21, [sp, #32]
  40adfc:	mov	w21, w1
  40ae00:	stp	xzr, xzr, [x0, #32]
  40ae04:	mov	w1, #0x3                   	// #3
  40ae08:	movk	w1, #0x8, lsl #16
  40ae0c:	stp	xzr, xzr, [x19]
  40ae10:	mov	w0, #0x10                  	// #16
  40ae14:	stp	xzr, xzr, [x19, #16]
  40ae18:	str	w2, [x19, #36]
  40ae1c:	str	xzr, [x19, #48]
  40ae20:	stp	w3, w20, [sp, #56]
  40ae24:	bl	404ec0 <socket@plt>
  40ae28:	str	w0, [x19]
  40ae2c:	tbnz	w0, #31, 40af44 <rtnl_open_byproto@@Base+0x164>
  40ae30:	add	x3, sp, #0x38
  40ae34:	mov	w1, w20
  40ae38:	mov	w4, #0x4                   	// #4
  40ae3c:	mov	w2, #0x7                   	// #7
  40ae40:	bl	404ca0 <setsockopt@plt>
  40ae44:	tbnz	w0, #31, 40af58 <rtnl_open_byproto@@Base+0x178>
  40ae48:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40ae4c:	ldr	w0, [x19]
  40ae50:	mov	w1, w20
  40ae54:	mov	w4, #0x4                   	// #4
  40ae58:	ldr	x3, [x3, #4024]
  40ae5c:	mov	w2, #0x8                   	// #8
  40ae60:	bl	404ca0 <setsockopt@plt>
  40ae64:	tbnz	w0, #31, 40af6c <rtnl_open_byproto@@Base+0x18c>
  40ae68:	mov	x20, x19
  40ae6c:	mov	w2, #0xb                   	// #11
  40ae70:	mov	w1, #0x10e                 	// #270
  40ae74:	add	x3, sp, #0x3c
  40ae78:	mov	w4, #0x4                   	// #4
  40ae7c:	ldr	w0, [x20], #4
  40ae80:	bl	404ca0 <setsockopt@plt>
  40ae84:	stur	wzr, [x19, #6]
  40ae88:	ldr	w0, [x19]
  40ae8c:	mov	w2, #0x10                  	// #16
  40ae90:	strh	w2, [x19, #4]
  40ae94:	mov	x1, x20
  40ae98:	strh	wzr, [x19, #10]
  40ae9c:	mov	w2, #0xc                   	// #12
  40aea0:	str	w21, [x19, #12]
  40aea4:	bl	404bd0 <bind@plt>
  40aea8:	tbnz	w0, #31, 40af80 <rtnl_open_byproto@@Base+0x1a0>
  40aeac:	ldr	w0, [x19]
  40aeb0:	mov	w3, #0xc                   	// #12
  40aeb4:	mov	x1, x20
  40aeb8:	add	x2, sp, #0x34
  40aebc:	str	w3, [sp, #52]
  40aec0:	bl	405010 <getsockname@plt>
  40aec4:	tbnz	w0, #31, 40af94 <rtnl_open_byproto@@Base+0x1b4>
  40aec8:	ldr	w2, [sp, #52]
  40aecc:	cmp	w2, #0xc
  40aed0:	b.ne	40af24 <rtnl_open_byproto@@Base+0x144>  // b.any
  40aed4:	ldrh	w2, [x19, #4]
  40aed8:	cmp	w2, #0x10
  40aedc:	b.ne	40af04 <rtnl_open_byproto@@Base+0x124>  // b.any
  40aee0:	mov	x0, #0x0                   	// #0
  40aee4:	bl	404c80 <time@plt>
  40aee8:	mov	x1, x0
  40aeec:	mov	w0, #0x0                   	// #0
  40aef0:	str	w1, [x19, #28]
  40aef4:	ldp	x19, x20, [sp, #16]
  40aef8:	ldr	x21, [sp, #32]
  40aefc:	ldp	x29, x30, [sp], #64
  40af00:	ret
  40af04:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40af08:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af0c:	add	x1, x1, #0x6b8
  40af10:	ldr	x0, [x0, #3992]
  40af14:	ldr	x0, [x0]
  40af18:	bl	405020 <fprintf@plt>
  40af1c:	mov	w0, #0xffffffff            	// #-1
  40af20:	b	40aef4 <rtnl_open_byproto@@Base+0x114>
  40af24:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40af28:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af2c:	add	x1, x1, #0x698
  40af30:	ldr	x0, [x0, #3992]
  40af34:	ldr	x0, [x0]
  40af38:	bl	405020 <fprintf@plt>
  40af3c:	mov	w0, #0xffffffff            	// #-1
  40af40:	b	40aef4 <rtnl_open_byproto@@Base+0x114>
  40af44:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af48:	add	x0, x0, #0x620
  40af4c:	bl	404b80 <perror@plt>
  40af50:	mov	w0, #0xffffffff            	// #-1
  40af54:	b	40aef4 <rtnl_open_byproto@@Base+0x114>
  40af58:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af5c:	add	x0, x0, #0x640
  40af60:	bl	404b80 <perror@plt>
  40af64:	mov	w0, #0xffffffff            	// #-1
  40af68:	b	40aef4 <rtnl_open_byproto@@Base+0x114>
  40af6c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af70:	add	x0, x0, #0x650
  40af74:	bl	404b80 <perror@plt>
  40af78:	mov	w0, #0xffffffff            	// #-1
  40af7c:	b	40aef4 <rtnl_open_byproto@@Base+0x114>
  40af80:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af84:	add	x0, x0, #0x660
  40af88:	bl	404b80 <perror@plt>
  40af8c:	mov	w0, #0xffffffff            	// #-1
  40af90:	b	40aef4 <rtnl_open_byproto@@Base+0x114>
  40af94:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40af98:	add	x0, x0, #0x680
  40af9c:	bl	404b80 <perror@plt>
  40afa0:	mov	w0, #0xffffffff            	// #-1
  40afa4:	b	40aef4 <rtnl_open_byproto@@Base+0x114>

000000000040afa8 <rtnl_open@@Base>:
  40afa8:	mov	w2, #0x0                   	// #0
  40afac:	b	40ade0 <rtnl_open_byproto@@Base>

000000000040afb0 <rtnl_nexthopdump_req@@Base>:
  40afb0:	stp	x29, x30, [sp, #-192]!
  40afb4:	mov	x29, sp
  40afb8:	stp	x19, x20, [sp, #16]
  40afbc:	mov	x19, x0
  40afc0:	mov	x0, #0x18                  	// #24
  40afc4:	movk	x0, #0x6a, lsl #32
  40afc8:	stp	xzr, xzr, [sp, #48]
  40afcc:	movk	x0, #0x301, lsl #48
  40afd0:	str	x0, [sp, #40]
  40afd4:	add	x20, sp, #0x28
  40afd8:	ldr	w0, [x19, #28]
  40afdc:	strb	w1, [sp, #56]
  40afe0:	add	w0, w0, #0x1
  40afe4:	stp	w0, w0, [x19, #28]
  40afe8:	str	w0, [sp, #48]
  40afec:	stp	xzr, xzr, [sp, #64]
  40aff0:	stp	xzr, xzr, [sp, #80]
  40aff4:	stp	xzr, xzr, [sp, #96]
  40aff8:	stp	xzr, xzr, [sp, #112]
  40affc:	stp	xzr, xzr, [sp, #128]
  40b000:	stp	xzr, xzr, [sp, #144]
  40b004:	stp	xzr, xzr, [sp, #160]
  40b008:	stp	xzr, xzr, [sp, #176]
  40b00c:	cbz	x2, 40b020 <rtnl_nexthopdump_req@@Base+0x70>
  40b010:	mov	x0, x20
  40b014:	mov	w1, #0x98                  	// #152
  40b018:	blr	x2
  40b01c:	cbnz	w0, 40b034 <rtnl_nexthopdump_req@@Base+0x84>
  40b020:	ldr	w0, [x19]
  40b024:	mov	x1, x20
  40b028:	mov	w3, #0x0                   	// #0
  40b02c:	mov	x2, #0x98                  	// #152
  40b030:	bl	404e70 <send@plt>
  40b034:	ldp	x19, x20, [sp, #16]
  40b038:	ldp	x29, x30, [sp], #192
  40b03c:	ret

000000000040b040 <rtnl_addrdump_req@@Base>:
  40b040:	stp	x29, x30, [sp, #-192]!
  40b044:	mov	x29, sp
  40b048:	stp	x19, x20, [sp, #16]
  40b04c:	mov	x19, x0
  40b050:	mov	x0, #0x18                  	// #24
  40b054:	movk	x0, #0x16, lsl #32
  40b058:	stp	xzr, xzr, [sp, #48]
  40b05c:	movk	x0, #0x301, lsl #48
  40b060:	str	x0, [sp, #40]
  40b064:	add	x20, sp, #0x28
  40b068:	ldr	w0, [x19, #28]
  40b06c:	strb	w1, [sp, #56]
  40b070:	add	w0, w0, #0x1
  40b074:	stp	w0, w0, [x19, #28]
  40b078:	str	w0, [sp, #48]
  40b07c:	stp	xzr, xzr, [sp, #64]
  40b080:	stp	xzr, xzr, [sp, #80]
  40b084:	stp	xzr, xzr, [sp, #96]
  40b088:	stp	xzr, xzr, [sp, #112]
  40b08c:	stp	xzr, xzr, [sp, #128]
  40b090:	stp	xzr, xzr, [sp, #144]
  40b094:	stp	xzr, xzr, [sp, #160]
  40b098:	stp	xzr, xzr, [sp, #176]
  40b09c:	cbz	x2, 40b0b0 <rtnl_addrdump_req@@Base+0x70>
  40b0a0:	mov	x0, x20
  40b0a4:	mov	w1, #0x98                  	// #152
  40b0a8:	blr	x2
  40b0ac:	cbnz	w0, 40b0c4 <rtnl_addrdump_req@@Base+0x84>
  40b0b0:	ldr	w0, [x19]
  40b0b4:	mov	x1, x20
  40b0b8:	mov	w3, #0x0                   	// #0
  40b0bc:	mov	x2, #0x98                  	// #152
  40b0c0:	bl	404e70 <send@plt>
  40b0c4:	ldp	x19, x20, [sp, #16]
  40b0c8:	ldp	x29, x30, [sp], #192
  40b0cc:	ret

000000000040b0d0 <rtnl_addrlbldump_req@@Base>:
  40b0d0:	mov	x4, x0
  40b0d4:	stp	x29, x30, [sp, #-48]!
  40b0d8:	mov	x7, #0x1c                  	// #28
  40b0dc:	mov	x29, sp
  40b0e0:	ldr	w5, [x4, #28]
  40b0e4:	mov	w6, w1
  40b0e8:	ldr	w0, [x0]
  40b0ec:	movk	x7, #0x4a, lsl #32
  40b0f0:	add	w5, w5, #0x1
  40b0f4:	movk	x7, #0x301, lsl #48
  40b0f8:	stp	w5, w5, [x4, #28]
  40b0fc:	add	x1, sp, #0x10
  40b100:	stp	xzr, xzr, [sp, #24]
  40b104:	mov	w3, #0x0                   	// #0
  40b108:	mov	x2, #0x1c                  	// #28
  40b10c:	str	x7, [sp, #16]
  40b110:	str	w5, [sp, #24]
  40b114:	strb	w6, [sp, #32]
  40b118:	str	wzr, [sp, #40]
  40b11c:	bl	404e70 <send@plt>
  40b120:	ldp	x29, x30, [sp], #48
  40b124:	ret

000000000040b128 <rtnl_routedump_req@@Base>:
  40b128:	stp	x29, x30, [sp, #-192]!
  40b12c:	mov	x29, sp
  40b130:	stp	x19, x20, [sp, #16]
  40b134:	mov	x19, x0
  40b138:	mov	x0, #0x1c                  	// #28
  40b13c:	movk	x0, #0x1a, lsl #32
  40b140:	stp	xzr, xzr, [sp, #40]
  40b144:	movk	x0, #0x301, lsl #48
  40b148:	str	x0, [sp, #32]
  40b14c:	add	x20, sp, #0x20
  40b150:	ldr	w0, [x19, #28]
  40b154:	strb	w1, [sp, #48]
  40b158:	add	w0, w0, #0x1
  40b15c:	stp	w0, w0, [x19, #28]
  40b160:	str	w0, [sp, #40]
  40b164:	stp	xzr, xzr, [sp, #56]
  40b168:	stp	xzr, xzr, [sp, #72]
  40b16c:	stp	xzr, xzr, [sp, #88]
  40b170:	stp	xzr, xzr, [sp, #104]
  40b174:	stp	xzr, xzr, [sp, #120]
  40b178:	stp	xzr, xzr, [sp, #136]
  40b17c:	stp	xzr, xzr, [sp, #152]
  40b180:	stp	xzr, xzr, [sp, #168]
  40b184:	str	wzr, [sp, #184]
  40b188:	cbz	x2, 40b19c <rtnl_routedump_req@@Base+0x74>
  40b18c:	mov	x0, x20
  40b190:	mov	w1, #0x9c                  	// #156
  40b194:	blr	x2
  40b198:	cbnz	w0, 40b1b0 <rtnl_routedump_req@@Base+0x88>
  40b19c:	ldr	w0, [x19]
  40b1a0:	mov	x1, x20
  40b1a4:	mov	w3, #0x0                   	// #0
  40b1a8:	mov	x2, #0x9c                  	// #156
  40b1ac:	bl	404e70 <send@plt>
  40b1b0:	ldp	x19, x20, [sp, #16]
  40b1b4:	ldp	x29, x30, [sp], #192
  40b1b8:	ret
  40b1bc:	nop

000000000040b1c0 <rtnl_ruledump_req@@Base>:
  40b1c0:	mov	x4, x0
  40b1c4:	stp	x29, x30, [sp, #-48]!
  40b1c8:	mov	x7, #0x1c                  	// #28
  40b1cc:	mov	x29, sp
  40b1d0:	ldr	w5, [x4, #28]
  40b1d4:	mov	w6, w1
  40b1d8:	ldr	w0, [x0]
  40b1dc:	movk	x7, #0x22, lsl #32
  40b1e0:	add	w5, w5, #0x1
  40b1e4:	movk	x7, #0x301, lsl #48
  40b1e8:	stp	w5, w5, [x4, #28]
  40b1ec:	add	x1, sp, #0x10
  40b1f0:	stp	xzr, xzr, [sp, #24]
  40b1f4:	mov	w3, #0x0                   	// #0
  40b1f8:	mov	x2, #0x1c                  	// #28
  40b1fc:	str	x7, [sp, #16]
  40b200:	str	w5, [sp, #24]
  40b204:	strb	w6, [sp, #32]
  40b208:	str	wzr, [sp, #40]
  40b20c:	bl	404e70 <send@plt>
  40b210:	ldp	x29, x30, [sp], #48
  40b214:	ret

000000000040b218 <rtnl_neighdump_req@@Base>:
  40b218:	stp	x29, x30, [sp, #-336]!
  40b21c:	mov	x29, sp
  40b220:	stp	x19, x20, [sp, #16]
  40b224:	mov	x19, x0
  40b228:	mov	x20, x2
  40b22c:	stp	x21, x22, [sp, #32]
  40b230:	add	x22, sp, #0x30
  40b234:	mov	w21, w1
  40b238:	mov	x0, x22
  40b23c:	mov	w1, #0x0                   	// #0
  40b240:	mov	x2, #0x11c                 	// #284
  40b244:	bl	404cf0 <memset@plt>
  40b248:	ldr	w0, [x19, #28]
  40b24c:	mov	x1, #0x1c                  	// #28
  40b250:	movk	x1, #0x1e, lsl #32
  40b254:	strb	w21, [sp, #64]
  40b258:	add	w0, w0, #0x1
  40b25c:	movk	x1, #0x301, lsl #48
  40b260:	stp	w0, w0, [x19, #28]
  40b264:	str	x1, [sp, #48]
  40b268:	str	w0, [sp, #56]
  40b26c:	cbz	x20, 40b280 <rtnl_neighdump_req@@Base+0x68>
  40b270:	mov	x0, x22
  40b274:	mov	w1, #0x11c                 	// #284
  40b278:	blr	x20
  40b27c:	cbnz	w0, 40b294 <rtnl_neighdump_req@@Base+0x7c>
  40b280:	ldr	w0, [x19]
  40b284:	mov	x1, x22
  40b288:	mov	w3, #0x0                   	// #0
  40b28c:	mov	x2, #0x11c                 	// #284
  40b290:	bl	404e70 <send@plt>
  40b294:	ldp	x19, x20, [sp, #16]
  40b298:	ldp	x21, x22, [sp, #32]
  40b29c:	ldp	x29, x30, [sp], #336
  40b2a0:	ret
  40b2a4:	nop

000000000040b2a8 <rtnl_neightbldump_req@@Base>:
  40b2a8:	mov	x4, x0
  40b2ac:	stp	x29, x30, [sp, #-48]!
  40b2b0:	mov	x7, #0x14                  	// #20
  40b2b4:	mov	x29, sp
  40b2b8:	ldr	w5, [x4, #28]
  40b2bc:	mov	w6, w1
  40b2c0:	ldr	w0, [x0]
  40b2c4:	movk	x7, #0x42, lsl #32
  40b2c8:	add	w5, w5, #0x1
  40b2cc:	movk	x7, #0x301, lsl #48
  40b2d0:	stp	w5, w5, [x4, #28]
  40b2d4:	add	x1, sp, #0x18
  40b2d8:	stur	xzr, [sp, #36]
  40b2dc:	mov	w3, #0x0                   	// #0
  40b2e0:	mov	x2, #0x14                  	// #20
  40b2e4:	str	x7, [sp, #24]
  40b2e8:	str	w5, [sp, #32]
  40b2ec:	strb	w6, [sp, #40]
  40b2f0:	bl	404e70 <send@plt>
  40b2f4:	ldp	x29, x30, [sp], #48
  40b2f8:	ret
  40b2fc:	nop

000000000040b300 <rtnl_mdbdump_req@@Base>:
  40b300:	mov	x4, x0
  40b304:	stp	x29, x30, [sp, #-48]!
  40b308:	mov	x7, #0x18                  	// #24
  40b30c:	mov	x29, sp
  40b310:	ldr	w5, [x4, #28]
  40b314:	mov	w6, w1
  40b318:	ldr	w0, [x0]
  40b31c:	movk	x7, #0x56, lsl #32
  40b320:	add	w5, w5, #0x1
  40b324:	movk	x7, #0x301, lsl #48
  40b328:	stp	w5, w5, [x4, #28]
  40b32c:	mov	x2, #0x18                  	// #24
  40b330:	stp	xzr, xzr, [sp, #32]
  40b334:	add	x1, sp, x2
  40b338:	mov	w3, #0x0                   	// #0
  40b33c:	str	x7, [sp, #24]
  40b340:	str	w5, [sp, #32]
  40b344:	strb	w6, [sp, #40]
  40b348:	bl	404e70 <send@plt>
  40b34c:	ldp	x29, x30, [sp], #48
  40b350:	ret
  40b354:	nop

000000000040b358 <rtnl_netconfdump_req@@Base>:
  40b358:	mov	x4, x0
  40b35c:	stp	x29, x30, [sp, #-48]!
  40b360:	mov	x7, #0x14                  	// #20
  40b364:	mov	x29, sp
  40b368:	ldr	w5, [x4, #28]
  40b36c:	mov	w6, w1
  40b370:	ldr	w0, [x0]
  40b374:	movk	x7, #0x52, lsl #32
  40b378:	add	w5, w5, #0x1
  40b37c:	movk	x7, #0x301, lsl #48
  40b380:	stp	w5, w5, [x4, #28]
  40b384:	add	x1, sp, #0x18
  40b388:	stur	xzr, [sp, #36]
  40b38c:	mov	w3, #0x0                   	// #0
  40b390:	mov	x2, #0x14                  	// #20
  40b394:	str	x7, [sp, #24]
  40b398:	str	w5, [sp, #32]
  40b39c:	strb	w6, [sp, #40]
  40b3a0:	bl	404e70 <send@plt>
  40b3a4:	ldp	x29, x30, [sp], #48
  40b3a8:	ret
  40b3ac:	nop

000000000040b3b0 <rtnl_nsiddump_req_filter_fn@@Base>:
  40b3b0:	sub	sp, sp, #0x450
  40b3b4:	stp	x29, x30, [sp]
  40b3b8:	mov	x29, sp
  40b3bc:	stp	x19, x20, [sp, #16]
  40b3c0:	mov	x19, x0
  40b3c4:	mov	x20, x2
  40b3c8:	stp	x21, x22, [sp, #32]
  40b3cc:	add	x22, sp, #0x38
  40b3d0:	mov	w21, w1
  40b3d4:	mov	x0, x22
  40b3d8:	mov	w1, #0x0                   	// #0
  40b3dc:	mov	x2, #0x414                 	// #1044
  40b3e0:	bl	404cf0 <memset@plt>
  40b3e4:	ldr	w0, [x19, #28]
  40b3e8:	mov	x1, #0x14                  	// #20
  40b3ec:	movk	x1, #0x5a, lsl #32
  40b3f0:	strb	w21, [sp, #72]
  40b3f4:	add	w0, w0, #0x1
  40b3f8:	movk	x1, #0x301, lsl #48
  40b3fc:	stp	w0, w0, [x19, #28]
  40b400:	str	x1, [sp, #56]
  40b404:	str	w0, [sp, #64]
  40b408:	cbz	x20, 40b444 <rtnl_nsiddump_req_filter_fn@@Base+0x94>
  40b40c:	mov	x0, x22
  40b410:	mov	w1, #0x414                 	// #1044
  40b414:	blr	x20
  40b418:	cbnz	w0, 40b430 <rtnl_nsiddump_req_filter_fn@@Base+0x80>
  40b41c:	ldr	w0, [x19]
  40b420:	mov	x1, x22
  40b424:	ldr	w2, [sp, #56]
  40b428:	mov	w3, #0x0                   	// #0
  40b42c:	bl	404e70 <send@plt>
  40b430:	ldp	x29, x30, [sp]
  40b434:	ldp	x19, x20, [sp, #16]
  40b438:	ldp	x21, x22, [sp, #32]
  40b43c:	add	sp, sp, #0x450
  40b440:	ret
  40b444:	mov	w0, #0xffffffea            	// #-22
  40b448:	b	40b430 <rtnl_nsiddump_req_filter_fn@@Base+0x80>
  40b44c:	nop

000000000040b450 <rtnl_linkdump_req_filter@@Base>:
  40b450:	stp	x29, x30, [sp, #-64]!
  40b454:	cmp	w1, #0x0
  40b458:	ccmp	w1, #0x7, #0x4, ne  // ne = any
  40b45c:	mov	x29, sp
  40b460:	b.eq	40b470 <rtnl_linkdump_req_filter@@Base+0x20>  // b.none
  40b464:	bl	40a6c0 <jsonw_null_field@@Base+0x28>
  40b468:	ldp	x29, x30, [sp], #64
  40b46c:	ret
  40b470:	mov	x5, x0
  40b474:	mov	x9, #0x28                  	// #40
  40b478:	ldr	w0, [x0]
  40b47c:	mov	w4, w1
  40b480:	mov	w6, w2
  40b484:	movk	x9, #0x12, lsl #32
  40b488:	ldr	w7, [x5, #28]
  40b48c:	mov	w8, #0x8                   	// #8
  40b490:	movk	x9, #0x301, lsl #48
  40b494:	movk	w8, #0x1d, lsl #16
  40b498:	add	w7, w7, #0x1
  40b49c:	stp	w7, w7, [x5, #28]
  40b4a0:	stp	xzr, xzr, [sp, #32]
  40b4a4:	add	x1, sp, #0x18
  40b4a8:	mov	w3, #0x0                   	// #0
  40b4ac:	mov	x2, #0x28                  	// #40
  40b4b0:	str	x9, [sp, #24]
  40b4b4:	str	w7, [sp, #32]
  40b4b8:	strb	w4, [sp, #40]
  40b4bc:	str	xzr, [sp, #48]
  40b4c0:	stp	w8, w6, [sp, #56]
  40b4c4:	bl	404e70 <send@plt>
  40b4c8:	ldp	x29, x30, [sp], #64
  40b4cc:	ret

000000000040b4d0 <rtnl_linkdump_req@@Base>:
  40b4d0:	cbz	w1, 40b4d8 <rtnl_linkdump_req@@Base+0x8>
  40b4d4:	b	40a6c0 <jsonw_null_field@@Base+0x28>
  40b4d8:	mov	w2, #0x1                   	// #1
  40b4dc:	b	40b450 <rtnl_linkdump_req_filter@@Base>

000000000040b4e0 <rtnl_linkdump_req_filter_fn@@Base>:
  40b4e0:	sub	sp, sp, #0x450
  40b4e4:	cmp	w1, #0x0
  40b4e8:	ccmp	w1, #0x11, #0x4, ne  // ne = any
  40b4ec:	stp	x29, x30, [sp]
  40b4f0:	mov	x29, sp
  40b4f4:	b.ne	40b56c <rtnl_linkdump_req_filter_fn@@Base+0x8c>  // b.any
  40b4f8:	stp	x19, x20, [sp, #16]
  40b4fc:	mov	x20, x0
  40b500:	mov	w19, w1
  40b504:	stp	x21, x22, [sp, #32]
  40b508:	add	x22, sp, #0x30
  40b50c:	mov	w1, #0x0                   	// #0
  40b510:	mov	x21, x2
  40b514:	mov	x0, x22
  40b518:	mov	x2, #0x420                 	// #1056
  40b51c:	bl	404cf0 <memset@plt>
  40b520:	ldr	w0, [x20, #28]
  40b524:	mov	x1, #0x20                  	// #32
  40b528:	movk	x1, #0x12, lsl #32
  40b52c:	strb	w19, [sp, #64]
  40b530:	add	w0, w0, #0x1
  40b534:	movk	x1, #0x301, lsl #48
  40b538:	stp	w0, w0, [x20, #28]
  40b53c:	str	x1, [sp, #48]
  40b540:	str	w0, [sp, #56]
  40b544:	cbz	x21, 40b5a4 <rtnl_linkdump_req_filter_fn@@Base+0xc4>
  40b548:	mov	x0, x22
  40b54c:	mov	w1, #0x420                 	// #1056
  40b550:	blr	x21
  40b554:	cbz	w0, 40b57c <rtnl_linkdump_req_filter_fn@@Base+0x9c>
  40b558:	ldp	x29, x30, [sp]
  40b55c:	ldp	x19, x20, [sp, #16]
  40b560:	ldp	x21, x22, [sp, #32]
  40b564:	add	sp, sp, #0x450
  40b568:	ret
  40b56c:	bl	40a6c0 <jsonw_null_field@@Base+0x28>
  40b570:	ldp	x29, x30, [sp]
  40b574:	add	sp, sp, #0x450
  40b578:	ret
  40b57c:	ldr	w2, [sp, #48]
  40b580:	mov	x1, x22
  40b584:	ldr	w0, [x20]
  40b588:	mov	w3, #0x0                   	// #0
  40b58c:	bl	404e70 <send@plt>
  40b590:	ldp	x29, x30, [sp]
  40b594:	ldp	x19, x20, [sp, #16]
  40b598:	ldp	x21, x22, [sp, #32]
  40b59c:	add	sp, sp, #0x450
  40b5a0:	ret
  40b5a4:	mov	w0, #0xffffffea            	// #-22
  40b5a8:	ldp	x29, x30, [sp]
  40b5ac:	ldp	x19, x20, [sp, #16]
  40b5b0:	ldp	x21, x22, [sp, #32]
  40b5b4:	add	sp, sp, #0x450
  40b5b8:	ret
  40b5bc:	nop

000000000040b5c0 <rtnl_fdb_linkdump_req_filter_fn@@Base>:
  40b5c0:	stp	x29, x30, [sp, #-192]!
  40b5c4:	mov	x5, #0x20                  	// #32
  40b5c8:	movk	x5, #0x1e, lsl #32
  40b5cc:	mov	x29, sp
  40b5d0:	stp	x19, x20, [sp, #16]
  40b5d4:	mov	x19, x0
  40b5d8:	movk	x5, #0x301, lsl #48
  40b5dc:	stp	xzr, xzr, [sp, #40]
  40b5e0:	mov	w4, #0x7                   	// #7
  40b5e4:	ldr	w2, [x19, #28]
  40b5e8:	str	x5, [sp, #32]
  40b5ec:	add	x20, sp, #0x20
  40b5f0:	add	w2, w2, #0x1
  40b5f4:	stp	w2, w2, [x19, #28]
  40b5f8:	str	w2, [sp, #40]
  40b5fc:	mov	x3, x1
  40b600:	strb	w4, [sp, #48]
  40b604:	mov	x0, x20
  40b608:	stp	xzr, xzr, [sp, #56]
  40b60c:	mov	w1, #0xa0                  	// #160
  40b610:	stp	xzr, xzr, [sp, #72]
  40b614:	stp	xzr, xzr, [sp, #88]
  40b618:	stp	xzr, xzr, [sp, #104]
  40b61c:	stp	xzr, xzr, [sp, #120]
  40b620:	stp	xzr, xzr, [sp, #136]
  40b624:	stp	xzr, xzr, [sp, #152]
  40b628:	stp	xzr, xzr, [sp, #168]
  40b62c:	str	xzr, [sp, #184]
  40b630:	blr	x3
  40b634:	cbnz	w0, 40b64c <rtnl_fdb_linkdump_req_filter_fn@@Base+0x8c>
  40b638:	ldr	w0, [x19]
  40b63c:	mov	x1, x20
  40b640:	mov	w3, #0x0                   	// #0
  40b644:	mov	x2, #0xa0                  	// #160
  40b648:	bl	404e70 <send@plt>
  40b64c:	ldp	x19, x20, [sp, #16]
  40b650:	ldp	x29, x30, [sp], #192
  40b654:	ret

000000000040b658 <rtnl_statsdump_req_filter@@Base>:
  40b658:	mov	x4, x0
  40b65c:	stp	x29, x30, [sp, #-48]!
  40b660:	mov	x8, #0x1c                  	// #28
  40b664:	mov	x29, sp
  40b668:	ldr	w5, [x4, #28]
  40b66c:	mov	w7, w1
  40b670:	ldr	w0, [x0]
  40b674:	mov	w6, w2
  40b678:	add	w5, w5, #0x1
  40b67c:	movk	x8, #0x5e, lsl #32
  40b680:	movk	x8, #0x301, lsl #48
  40b684:	stp	w5, w5, [x4, #28]
  40b688:	stp	xzr, xzr, [sp, #24]
  40b68c:	add	x1, sp, #0x10
  40b690:	mov	w3, #0x0                   	// #0
  40b694:	mov	x2, #0x1c                  	// #28
  40b698:	str	x8, [sp, #16]
  40b69c:	str	w5, [sp, #24]
  40b6a0:	strb	w7, [sp, #32]
  40b6a4:	str	w6, [sp, #40]
  40b6a8:	bl	404e70 <send@plt>
  40b6ac:	ldp	x29, x30, [sp], #48
  40b6b0:	ret
  40b6b4:	nop

000000000040b6b8 <rtnl_send@@Base>:
  40b6b8:	stp	x29, x30, [sp, #-16]!
  40b6bc:	sxtw	x2, w2
  40b6c0:	mov	w3, #0x0                   	// #0
  40b6c4:	mov	x29, sp
  40b6c8:	ldr	w0, [x0]
  40b6cc:	bl	404e70 <send@plt>
  40b6d0:	ldp	x29, x30, [sp], #16
  40b6d4:	ret

000000000040b6d8 <rtnl_send_check@@Base>:
  40b6d8:	sub	sp, sp, #0x420
  40b6dc:	sxtw	x2, w2
  40b6e0:	mov	w3, #0x0                   	// #0
  40b6e4:	stp	x29, x30, [sp]
  40b6e8:	mov	x29, sp
  40b6ec:	str	x19, [sp, #16]
  40b6f0:	mov	x19, x0
  40b6f4:	ldr	w0, [x0]
  40b6f8:	bl	404e70 <send@plt>
  40b6fc:	tbnz	w0, #31, 40b768 <rtnl_send_check@@Base+0x90>
  40b700:	ldr	w0, [x19]
  40b704:	add	x19, sp, #0x20
  40b708:	mov	x1, x19
  40b70c:	mov	w3, #0x42                  	// #66
  40b710:	mov	x2, #0x400                 	// #1024
  40b714:	bl	404da0 <recv@plt>
  40b718:	mov	w1, w0
  40b71c:	tbnz	w0, #31, 40b778 <rtnl_send_check@@Base+0xa0>
  40b720:	cmp	w0, #0xf
  40b724:	b.gt	40b750 <rtnl_send_check@@Base+0x78>
  40b728:	b	40b764 <rtnl_send_check@@Base+0x8c>
  40b72c:	cmp	w2, w1
  40b730:	sub	w1, w1, w0
  40b734:	b.hi	40b764 <rtnl_send_check@@Base+0x8c>  // b.pmore
  40b738:	ldrh	w3, [x19, #4]
  40b73c:	cmp	w3, #0x2
  40b740:	b.eq	40b798 <rtnl_send_check@@Base+0xc0>  // b.none
  40b744:	cmp	w1, #0xf
  40b748:	add	x19, x19, w0, uxtw
  40b74c:	b.le	40b764 <rtnl_send_check@@Base+0x8c>
  40b750:	ldr	w2, [x19]
  40b754:	add	w0, w2, #0x3
  40b758:	cmp	w2, #0xf
  40b75c:	and	w0, w0, #0xfffffffc
  40b760:	b.hi	40b72c <rtnl_send_check@@Base+0x54>  // b.pmore
  40b764:	mov	w0, #0x0                   	// #0
  40b768:	ldp	x29, x30, [sp]
  40b76c:	ldr	x19, [sp, #16]
  40b770:	add	sp, sp, #0x420
  40b774:	ret
  40b778:	bl	404fd0 <__errno_location@plt>
  40b77c:	ldr	w0, [x0]
  40b780:	ldp	x29, x30, [sp]
  40b784:	cmp	w0, #0xb
  40b788:	csetm	w0, ne  // ne = any
  40b78c:	ldr	x19, [sp, #16]
  40b790:	add	sp, sp, #0x420
  40b794:	ret
  40b798:	cmp	w2, #0x23
  40b79c:	b.ls	40b7bc <rtnl_send_check@@Base+0xe4>  // b.plast
  40b7a0:	bl	404fd0 <__errno_location@plt>
  40b7a4:	mov	x2, x0
  40b7a8:	ldr	w1, [x19, #16]
  40b7ac:	mov	w0, #0xffffffff            	// #-1
  40b7b0:	neg	w1, w1
  40b7b4:	str	w1, [x2]
  40b7b8:	b	40b768 <rtnl_send_check@@Base+0x90>
  40b7bc:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40b7c0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40b7c4:	mov	x2, #0x10                  	// #16
  40b7c8:	add	x0, x0, #0x5a8
  40b7cc:	ldr	x3, [x3, #3992]
  40b7d0:	mov	x1, #0x1                   	// #1
  40b7d4:	ldr	x3, [x3]
  40b7d8:	bl	404eb0 <fwrite@plt>
  40b7dc:	mov	w0, #0xffffffff            	// #-1
  40b7e0:	b	40b768 <rtnl_send_check@@Base+0x90>
  40b7e4:	nop

000000000040b7e8 <rtnl_dump_request@@Base>:
  40b7e8:	mov	x4, x0
  40b7ec:	stp	x29, x30, [sp, #-144]!
  40b7f0:	mov	w13, w1
  40b7f4:	mov	x29, sp
  40b7f8:	ldr	w5, [x4, #28]
  40b7fc:	mov	x10, x2
  40b800:	ldr	w0, [x0]
  40b804:	add	w14, w3, #0x10
  40b808:	add	x7, sp, #0x28
  40b80c:	add	x6, sp, #0x18
  40b810:	add	w5, w5, #0x1
  40b814:	sxtw	x3, w3
  40b818:	stp	w5, w5, [x4, #28]
  40b81c:	add	x4, sp, #0x38
  40b820:	mov	w12, #0x301                 	// #769
  40b824:	mov	w15, #0x10                  	// #16
  40b828:	mov	x11, #0x10                  	// #16
  40b82c:	mov	w9, #0xc                   	// #12
  40b830:	mov	x8, #0x2                   	// #2
  40b834:	str	xzr, [sp, #24]
  40b838:	stp	xzr, xzr, [sp, #96]
  40b83c:	add	x1, sp, #0x58
  40b840:	mov	w2, #0x0                   	// #0
  40b844:	stp	xzr, xzr, [sp, #112]
  40b848:	strh	w15, [sp, #24]
  40b84c:	str	wzr, [sp, #32]
  40b850:	str	w14, [sp, #40]
  40b854:	strh	w13, [sp, #44]
  40b858:	strh	w12, [sp, #46]
  40b85c:	stp	w5, wzr, [sp, #48]
  40b860:	str	x7, [sp, #56]
  40b864:	stp	x11, x10, [sp, #64]
  40b868:	str	x3, [sp, #80]
  40b86c:	str	x6, [sp, #88]
  40b870:	str	w9, [sp, #96]
  40b874:	str	x4, [sp, #104]
  40b878:	str	x8, [sp, #112]
  40b87c:	stp	xzr, xzr, [sp, #128]
  40b880:	bl	404d10 <sendmsg@plt>
  40b884:	ldp	x29, x30, [sp], #144
  40b888:	ret
  40b88c:	nop

000000000040b890 <rtnl_dump_request_n@@Base>:
  40b890:	mov	x2, x0
  40b894:	stp	x29, x30, [sp, #-112]!
  40b898:	mov	x3, x1
  40b89c:	mov	x29, sp
  40b8a0:	mov	w0, #0x301                 	// #769
  40b8a4:	ldr	w1, [x2, #28]
  40b8a8:	ldr	w8, [x3]
  40b8ac:	add	x5, sp, #0x18
  40b8b0:	strh	w0, [x3, #6]
  40b8b4:	add	x4, sp, #0x28
  40b8b8:	ldr	w0, [x2]
  40b8bc:	add	w1, w1, #0x1
  40b8c0:	str	wzr, [x3, #12]
  40b8c4:	mov	w9, #0x10                  	// #16
  40b8c8:	stp	w1, w1, [x2, #28]
  40b8cc:	mov	w7, #0xc                   	// #12
  40b8d0:	mov	x6, #0x1                   	// #1
  40b8d4:	str	w1, [x3, #8]
  40b8d8:	str	xzr, [sp, #24]
  40b8dc:	add	x1, sp, #0x38
  40b8e0:	stp	xzr, xzr, [sp, #64]
  40b8e4:	mov	w2, #0x0                   	// #0
  40b8e8:	stp	xzr, xzr, [sp, #80]
  40b8ec:	strh	w9, [sp, #24]
  40b8f0:	str	wzr, [sp, #32]
  40b8f4:	stp	x3, x8, [sp, #40]
  40b8f8:	str	x5, [sp, #56]
  40b8fc:	str	w7, [sp, #64]
  40b900:	str	x4, [sp, #72]
  40b904:	str	x6, [sp, #80]
  40b908:	stp	xzr, xzr, [sp, #96]
  40b90c:	bl	404d10 <sendmsg@plt>
  40b910:	ldp	x29, x30, [sp], #112
  40b914:	ret

000000000040b918 <rtnl_dump_filter_nc@@Base>:
  40b918:	stp	x29, x30, [sp, #-272]!
  40b91c:	mov	x4, #0x1                   	// #1
  40b920:	mov	w5, #0xc                   	// #12
  40b924:	mov	x29, sp
  40b928:	stp	x21, x22, [sp, #32]
  40b92c:	adrp	x21, 420000 <_IO_stdin_used@@Base+0x135b8>
  40b930:	mov	w22, #0x0                   	// #0
  40b934:	stp	x23, x24, [sp, #48]
  40b938:	add	x23, sp, #0xd8
  40b93c:	stp	x25, x26, [sp, #64]
  40b940:	add	x25, sp, #0x80
  40b944:	stp	x27, x28, [sp, #80]
  40b948:	mov	x27, x0
  40b94c:	ldr	x0, [x21, #3992]
  40b950:	stp	xzr, xzr, [sp, #224]
  40b954:	stp	xzr, xzr, [sp, #240]
  40b958:	stp	x19, x20, [sp, #16]
  40b95c:	mov	x20, x1
  40b960:	add	x1, sp, #0x88
  40b964:	str	x0, [sp, #120]
  40b968:	add	x0, sp, #0x98
  40b96c:	stp	x20, x2, [sp, #168]
  40b970:	strh	w3, [sp, #184]
  40b974:	stp	xzr, xzr, [sp, #192]
  40b978:	strh	wzr, [sp, #208]
  40b97c:	str	x1, [sp, #216]
  40b980:	str	w5, [sp, #224]
  40b984:	str	x0, [sp, #232]
  40b988:	str	x4, [sp, #240]
  40b98c:	stp	xzr, xzr, [sp, #256]
  40b990:	ldr	w0, [x27]
  40b994:	mov	x2, x25
  40b998:	mov	x1, x23
  40b99c:	bl	40a7f0 <jsonw_null_field@@Base+0x158>
  40b9a0:	mov	w28, w0
  40b9a4:	tbnz	w0, #31, 40bc8c <rtnl_dump_filter_nc@@Base+0x374>
  40b9a8:	ldr	x3, [x27, #40]
  40b9ac:	ldr	x19, [sp, #128]
  40b9b0:	cbz	x3, 40b9cc <rtnl_dump_filter_nc@@Base+0xb4>
  40b9b4:	add	w2, w0, #0x3
  40b9b8:	mov	x1, #0x1                   	// #1
  40b9bc:	mov	x0, x19
  40b9c0:	and	x2, x2, #0xfffffffc
  40b9c4:	bl	404eb0 <fwrite@plt>
  40b9c8:	ldr	x19, [sp, #128]
  40b9cc:	cbz	x20, 40bc38 <rtnl_dump_filter_nc@@Base+0x320>
  40b9d0:	add	x24, sp, #0xc0
  40b9d4:	mov	x6, x20
  40b9d8:	str	wzr, [sp, #116]
  40b9dc:	nop
  40b9e0:	cmp	w28, #0xf
  40b9e4:	mov	w26, w28
  40b9e8:	b.gt	40ba08 <rtnl_dump_filter_nc@@Base+0xf0>
  40b9ec:	b	40babc <rtnl_dump_filter_nc@@Base+0x1a4>
  40b9f0:	add	w3, w3, #0x3
  40b9f4:	and	w3, w3, #0xfffffffc
  40b9f8:	sub	w26, w26, w3
  40b9fc:	cmp	w26, #0xf
  40ba00:	add	x19, x19, w3, uxtw
  40ba04:	b.le	40bab8 <rtnl_dump_filter_nc@@Base+0x1a0>
  40ba08:	ldr	w3, [x19]
  40ba0c:	cmp	w3, #0xf
  40ba10:	b.ls	40bab8 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.plast
  40ba14:	cmp	w26, w3
  40ba18:	b.cc	40bab8 <rtnl_dump_filter_nc@@Base+0x1a0>  // b.lo, b.ul, b.last
  40ba1c:	ldrh	w5, [x19, #6]
  40ba20:	ldurh	w0, [x24, #-8]
  40ba24:	ldr	w1, [sp, #140]
  40ba28:	bic	w0, w5, w0
  40ba2c:	and	w0, w0, #0xffff
  40ba30:	strh	w0, [x19, #6]
  40ba34:	cbnz	w1, 40b9f0 <rtnl_dump_filter_nc@@Base+0xd8>
  40ba38:	ldr	w5, [x19, #12]
  40ba3c:	ldr	w1, [x27, #8]
  40ba40:	cmp	w5, w1
  40ba44:	b.ne	40b9f0 <rtnl_dump_filter_nc@@Base+0xd8>  // b.any
  40ba48:	ldr	w5, [x19, #8]
  40ba4c:	ldr	w1, [x27, #32]
  40ba50:	cmp	w5, w1
  40ba54:	b.ne	40b9f0 <rtnl_dump_filter_nc@@Base+0xd8>  // b.any
  40ba58:	ldrh	w1, [x19, #4]
  40ba5c:	tst	x0, #0x10
  40ba60:	csinc	w22, w22, wzr, eq  // eq = none
  40ba64:	cmp	w1, #0x3
  40ba68:	b.eq	40bacc <rtnl_dump_filter_nc@@Base+0x1b4>  // b.none
  40ba6c:	cmp	w1, #0x2
  40ba70:	b.eq	40bb04 <rtnl_dump_filter_nc@@Base+0x1ec>  // b.none
  40ba74:	ldr	x0, [x27, #40]
  40ba78:	cbnz	x0, 40b9f0 <rtnl_dump_filter_nc@@Base+0xd8>
  40ba7c:	ldur	x1, [x24, #-16]
  40ba80:	mov	x0, x19
  40ba84:	str	x6, [sp, #104]
  40ba88:	blr	x6
  40ba8c:	mov	w21, w0
  40ba90:	tbnz	w0, #31, 40bc00 <rtnl_dump_filter_nc@@Base+0x2e8>
  40ba94:	ldr	w3, [x19]
  40ba98:	ldr	x6, [sp, #104]
  40ba9c:	add	w3, w3, #0x3
  40baa0:	and	w3, w3, #0xfffffffc
  40baa4:	sub	w26, w26, w3
  40baa8:	cmp	w26, #0xf
  40baac:	add	x19, x19, w3, uxtw
  40bab0:	b.gt	40ba08 <rtnl_dump_filter_nc@@Base+0xf0>
  40bab4:	nop
  40bab8:	ldr	x19, [sp, #128]
  40babc:	ldr	x6, [x24]
  40bac0:	cbz	x6, 40bb5c <rtnl_dump_filter_nc@@Base+0x244>
  40bac4:	add	x24, x24, #0x18
  40bac8:	b	40b9e0 <rtnl_dump_filter_nc@@Base+0xc8>
  40bacc:	ldr	w26, [x19, #16]
  40bad0:	cmp	w3, #0x13
  40bad4:	b.ls	40bccc <rtnl_dump_filter_nc@@Base+0x3b4>  // b.plast
  40bad8:	mov	x0, x19
  40badc:	tbnz	w26, #31, 40bb9c <rtnl_dump_filter_nc@@Base+0x284>
  40bae0:	mov	x1, #0x0                   	// #0
  40bae4:	bl	40a8b0 <nl_dump_ext_ack@@Base>
  40bae8:	ldr	x6, [x24]
  40baec:	cbz	x6, 40bc94 <rtnl_dump_filter_nc@@Base+0x37c>
  40baf0:	mov	w0, #0x1                   	// #1
  40baf4:	add	x24, x24, #0x18
  40baf8:	str	w0, [sp, #116]
  40bafc:	ldr	x19, [sp, #128]
  40bb00:	b	40b9e0 <rtnl_dump_filter_nc@@Base+0xc8>
  40bb04:	cmp	w3, #0x23
  40bb08:	b.ls	40bbdc <rtnl_dump_filter_nc@@Base+0x2c4>  // b.plast
  40bb0c:	bl	404fd0 <__errno_location@plt>
  40bb10:	ldr	w1, [x19, #16]
  40bb14:	neg	w2, w1
  40bb18:	str	w2, [x0]
  40bb1c:	ldr	w0, [x27, #36]
  40bb20:	cmp	w0, #0x4
  40bb24:	b.eq	40bc28 <rtnl_dump_filter_nc@@Base+0x310>  // b.none
  40bb28:	ldr	w0, [x27, #48]
  40bb2c:	tbz	w0, #1, 40bbcc <rtnl_dump_filter_nc@@Base+0x2b4>
  40bb30:	ldr	x0, [sp, #128]
  40bb34:	mov	w21, #0xffffffff            	// #-1
  40bb38:	bl	404e50 <free@plt>
  40bb3c:	mov	w0, w21
  40bb40:	ldp	x19, x20, [sp, #16]
  40bb44:	ldp	x21, x22, [sp, #32]
  40bb48:	ldp	x23, x24, [sp, #48]
  40bb4c:	ldp	x25, x26, [sp, #64]
  40bb50:	ldp	x27, x28, [sp, #80]
  40bb54:	ldp	x29, x30, [sp], #272
  40bb58:	ret
  40bb5c:	mov	x0, x19
  40bb60:	bl	404e50 <free@plt>
  40bb64:	ldr	w0, [sp, #116]
  40bb68:	cbnz	w0, 40bcf0 <rtnl_dump_filter_nc@@Base+0x3d8>
  40bb6c:	ldr	w0, [sp, #264]
  40bb70:	tbnz	w0, #5, 40bc48 <rtnl_dump_filter_nc@@Base+0x330>
  40bb74:	cbz	w26, 40b990 <rtnl_dump_filter_nc@@Base+0x78>
  40bb78:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bb7c:	mov	w2, w26
  40bb80:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bb84:	add	x1, x1, #0x608
  40bb88:	ldr	x0, [x0, #3992]
  40bb8c:	ldr	x0, [x0]
  40bb90:	bl	405020 <fprintf@plt>
  40bb94:	mov	w0, #0x1                   	// #1
  40bb98:	bl	404b70 <exit@plt>
  40bb9c:	mov	w1, w26
  40bba0:	bl	40ad28 <nl_dump_ext_ack_done@@Base>
  40bba4:	cbnz	w0, 40bb30 <rtnl_dump_filter_nc@@Base+0x218>
  40bba8:	bl	404fd0 <__errno_location@plt>
  40bbac:	neg	w1, w26
  40bbb0:	str	w1, [x0]
  40bbb4:	cmn	w26, #0x5a
  40bbb8:	b.eq	40bc68 <rtnl_dump_filter_nc@@Base+0x350>  // b.none
  40bbbc:	cmn	w26, #0x5f
  40bbc0:	b.eq	40bb30 <rtnl_dump_filter_nc@@Base+0x218>  // b.none
  40bbc4:	cmn	w26, #0x2
  40bbc8:	b.eq	40bb30 <rtnl_dump_filter_nc@@Base+0x218>  // b.none
  40bbcc:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bbd0:	add	x0, x0, #0x710
  40bbd4:	bl	404b80 <perror@plt>
  40bbd8:	b	40bb30 <rtnl_dump_filter_nc@@Base+0x218>
  40bbdc:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bbe0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bbe4:	mov	x2, #0x10                  	// #16
  40bbe8:	mov	x1, #0x1                   	// #1
  40bbec:	ldr	x3, [x3, #3992]
  40bbf0:	add	x0, x0, #0x5a8
  40bbf4:	ldr	x3, [x3]
  40bbf8:	bl	404eb0 <fwrite@plt>
  40bbfc:	b	40bb30 <rtnl_dump_filter_nc@@Base+0x218>
  40bc00:	ldr	x0, [sp, #128]
  40bc04:	bl	404e50 <free@plt>
  40bc08:	mov	w0, w21
  40bc0c:	ldp	x19, x20, [sp, #16]
  40bc10:	ldp	x21, x22, [sp, #32]
  40bc14:	ldp	x23, x24, [sp, #48]
  40bc18:	ldp	x25, x26, [sp, #64]
  40bc1c:	ldp	x27, x28, [sp, #80]
  40bc20:	ldp	x29, x30, [sp], #272
  40bc24:	ret
  40bc28:	cmn	w1, #0x5f
  40bc2c:	ccmn	w1, #0x2, #0x4, ne  // ne = any
  40bc30:	b.ne	40bb28 <rtnl_dump_filter_nc@@Base+0x210>  // b.any
  40bc34:	b	40bb30 <rtnl_dump_filter_nc@@Base+0x218>
  40bc38:	mov	x0, x19
  40bc3c:	bl	404e50 <free@plt>
  40bc40:	ldr	w0, [sp, #264]
  40bc44:	tbz	w0, #5, 40b990 <rtnl_dump_filter_nc@@Base+0x78>
  40bc48:	ldr	x0, [sp, #120]
  40bc4c:	mov	x2, #0x12                  	// #18
  40bc50:	mov	x1, #0x1                   	// #1
  40bc54:	ldr	x3, [x0]
  40bc58:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bc5c:	add	x0, x0, #0x5f0
  40bc60:	bl	404eb0 <fwrite@plt>
  40bc64:	b	40b990 <rtnl_dump_filter_nc@@Base+0x78>
  40bc68:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bc6c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bc70:	mov	x2, #0x24                  	// #36
  40bc74:	mov	x1, #0x1                   	// #1
  40bc78:	ldr	x3, [x3, #3992]
  40bc7c:	add	x0, x0, #0x6e8
  40bc80:	ldr	x3, [x3]
  40bc84:	bl	404eb0 <fwrite@plt>
  40bc88:	b	40bb30 <rtnl_dump_filter_nc@@Base+0x218>
  40bc8c:	mov	w21, w0
  40bc90:	b	40bb3c <rtnl_dump_filter_nc@@Base+0x224>
  40bc94:	ldr	x0, [sp, #128]
  40bc98:	mov	w21, w22
  40bc9c:	bl	404e50 <free@plt>
  40bca0:	cbz	w22, 40bb3c <rtnl_dump_filter_nc@@Base+0x224>
  40bca4:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bca8:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bcac:	mov	x2, #0x2e                  	// #46
  40bcb0:	mov	x1, #0x1                   	// #1
  40bcb4:	ldr	x3, [x3, #3992]
  40bcb8:	mov	w21, #0x0                   	// #0
  40bcbc:	add	x0, x0, #0x728
  40bcc0:	ldr	x3, [x3]
  40bcc4:	bl	404eb0 <fwrite@plt>
  40bcc8:	b	40bb3c <rtnl_dump_filter_nc@@Base+0x224>
  40bccc:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bcd0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bcd4:	mov	x2, #0xf                   	// #15
  40bcd8:	mov	x1, #0x1                   	// #1
  40bcdc:	ldr	x3, [x3, #3992]
  40bce0:	add	x0, x0, #0x6d8
  40bce4:	ldr	x3, [x3]
  40bce8:	bl	404eb0 <fwrite@plt>
  40bcec:	b	40bb30 <rtnl_dump_filter_nc@@Base+0x218>
  40bcf0:	mov	w21, w22
  40bcf4:	b	40bca0 <rtnl_dump_filter_nc@@Base+0x388>

000000000040bcf8 <rtnl_talk@@Base>:
  40bcf8:	stp	x29, x30, [sp, #-32]!
  40bcfc:	mov	x5, x1
  40bd00:	mov	x3, x2
  40bd04:	mov	x29, sp
  40bd08:	str	x5, [sp, #16]
  40bd0c:	add	x1, sp, #0x10
  40bd10:	ldr	w5, [x5]
  40bd14:	mov	w4, #0x1                   	// #1
  40bd18:	mov	x2, #0x1                   	// #1
  40bd1c:	str	x5, [sp, #24]
  40bd20:	bl	40a8b8 <nl_dump_ext_ack@@Base+0x8>
  40bd24:	ldp	x29, x30, [sp], #32
  40bd28:	ret
  40bd2c:	nop

000000000040bd30 <rtnl_talk_iov@@Base>:
  40bd30:	mov	w4, #0x1                   	// #1
  40bd34:	b	40a8b8 <nl_dump_ext_ack@@Base+0x8>

000000000040bd38 <rtnl_talk_suppress_rtnl_errmsg@@Base>:
  40bd38:	stp	x29, x30, [sp, #-32]!
  40bd3c:	mov	x5, x1
  40bd40:	mov	x3, x2
  40bd44:	mov	x29, sp
  40bd48:	str	x5, [sp, #16]
  40bd4c:	add	x1, sp, #0x10
  40bd50:	ldr	w5, [x5]
  40bd54:	mov	w4, #0x0                   	// #0
  40bd58:	mov	x2, #0x1                   	// #1
  40bd5c:	str	x5, [sp, #24]
  40bd60:	bl	40a8b8 <nl_dump_ext_ack@@Base+0x8>
  40bd64:	ldp	x29, x30, [sp], #32
  40bd68:	ret
  40bd6c:	nop

000000000040bd70 <rtnl_listen_all_nsid@@Base>:
  40bd70:	stp	x29, x30, [sp, #-48]!
  40bd74:	mov	w5, #0x1                   	// #1
  40bd78:	mov	w4, #0x4                   	// #4
  40bd7c:	mov	x29, sp
  40bd80:	str	x19, [sp, #16]
  40bd84:	mov	x19, x0
  40bd88:	ldr	w0, [x0]
  40bd8c:	add	x3, sp, #0x2c
  40bd90:	mov	w2, #0x8                   	// #8
  40bd94:	mov	w1, #0x10e                 	// #270
  40bd98:	str	w5, [sp, #44]
  40bd9c:	bl	404ca0 <setsockopt@plt>
  40bda0:	tbnz	w0, #31, 40bdc0 <rtnl_listen_all_nsid@@Base+0x50>
  40bda4:	ldr	w1, [x19, #48]
  40bda8:	mov	w0, #0x0                   	// #0
  40bdac:	orr	w1, w1, #0x1
  40bdb0:	str	w1, [x19, #48]
  40bdb4:	ldr	x19, [sp, #16]
  40bdb8:	ldp	x29, x30, [sp], #48
  40bdbc:	ret
  40bdc0:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bdc4:	add	x0, x0, #0x758
  40bdc8:	bl	404b80 <perror@plt>
  40bdcc:	mov	w0, #0xffffffff            	// #-1
  40bdd0:	b	40bdb4 <rtnl_listen_all_nsid@@Base+0x44>
  40bdd4:	nop

000000000040bdd8 <rtnl_listen@@Base>:
  40bdd8:	mov	x12, #0x60c0                	// #24768
  40bddc:	sub	sp, sp, x12
  40bde0:	add	x3, sp, #0x68
  40bde4:	mov	w7, #0x10                  	// #16
  40bde8:	mov	w6, #0xc                   	// #12
  40bdec:	mov	x5, #0x1                   	// #1
  40bdf0:	stp	x29, x30, [sp]
  40bdf4:	mov	x29, sp
  40bdf8:	ldr	w4, [x0, #48]
  40bdfc:	str	xzr, [sp, #104]
  40be00:	stp	xzr, xzr, [sp, #144]
  40be04:	stp	xzr, xzr, [sp, #160]
  40be08:	stp	x19, x20, [sp, #16]
  40be0c:	mov	x20, x1
  40be10:	stp	x21, x22, [sp, #32]
  40be14:	mov	x21, x2
  40be18:	stp	x23, x24, [sp, #48]
  40be1c:	mov	x23, x0
  40be20:	add	x0, sp, #0x78
  40be24:	stp	x25, x26, [sp, #64]
  40be28:	stp	x27, x28, [sp, #80]
  40be2c:	strh	w7, [sp, #104]
  40be30:	str	wzr, [sp, #112]
  40be34:	str	x3, [sp, #136]
  40be38:	str	w6, [sp, #144]
  40be3c:	stp	x0, x5, [sp, #152]
  40be40:	stp	xzr, xzr, [sp, #176]
  40be44:	tbz	w4, #0, 40be54 <rtnl_listen@@Base+0x7c>
  40be48:	add	x0, sp, #0xc0
  40be4c:	mov	x1, #0x2000                	// #8192
  40be50:	stp	x0, x1, [sp, #168]
  40be54:	mov	x26, #0x10e                 	// #270
  40be58:	add	x24, sp, #0x88
  40be5c:	add	x22, sp, #0x60
  40be60:	mov	x0, #0x20c0                	// #8384
  40be64:	movk	x26, #0x8, lsl #32
  40be68:	add	x25, sp, x0
  40be6c:	str	x25, [sp, #120]
  40be70:	ldr	w0, [x23]
  40be74:	mov	x3, #0x4000                	// #16384
  40be78:	mov	x1, x24
  40be7c:	mov	w2, #0x0                   	// #0
  40be80:	str	x3, [sp, #128]
  40be84:	bl	404b40 <recvmsg@plt>
  40be88:	cmp	w0, #0x0
  40be8c:	mov	w1, w0
  40be90:	b.ge	40bf08 <rtnl_listen@@Base+0x130>  // b.tcont
  40be94:	bl	404fd0 <__errno_location@plt>
  40be98:	mov	x19, x0
  40be9c:	ldr	w0, [x0]
  40bea0:	cmp	w0, #0x4
  40bea4:	ccmp	w0, #0xb, #0x4, ne  // ne = any
  40bea8:	b.eq	40be70 <rtnl_listen@@Base+0x98>  // b.none
  40beac:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  40beb0:	ldr	x1, [x1, #3992]
  40beb4:	ldr	x27, [x1]
  40beb8:	bl	404d70 <strerror@plt>
  40bebc:	ldr	w3, [x19]
  40bec0:	mov	x2, x0
  40bec4:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bec8:	mov	x0, x27
  40becc:	add	x1, x1, #0x4e8
  40bed0:	bl	405020 <fprintf@plt>
  40bed4:	ldr	w0, [x19]
  40bed8:	cmp	w0, #0x69
  40bedc:	b.eq	40be70 <rtnl_listen@@Base+0x98>  // b.none
  40bee0:	mov	w0, #0xffffffff            	// #-1
  40bee4:	mov	x12, #0x60c0                	// #24768
  40bee8:	ldp	x29, x30, [sp]
  40beec:	ldp	x19, x20, [sp, #16]
  40bef0:	ldp	x21, x22, [sp, #32]
  40bef4:	ldp	x23, x24, [sp, #48]
  40bef8:	ldp	x25, x26, [sp, #64]
  40befc:	ldp	x27, x28, [sp, #80]
  40bf00:	add	sp, sp, x12
  40bf04:	ret
  40bf08:	b.eq	40c0a0 <rtnl_listen@@Base+0x2c8>  // b.none
  40bf0c:	ldr	w2, [sp, #144]
  40bf10:	cmp	w2, #0xc
  40bf14:	b.ne	40c0c8 <rtnl_listen@@Base+0x2f0>  // b.any
  40bf18:	ldr	w2, [x23, #48]
  40bf1c:	tbnz	w2, #0, 40bfe8 <rtnl_listen@@Base+0x210>
  40bf20:	cmp	w0, #0xf
  40bf24:	mov	w28, w0
  40bf28:	b.ls	40c074 <rtnl_listen@@Base+0x29c>  // b.plast
  40bf2c:	ldr	w19, [sp, #8384]
  40bf30:	cmp	w19, #0x10
  40bf34:	ccmp	w0, w19, #0x1, pl  // pl = nfrst
  40bf38:	b.lt	40bf88 <rtnl_listen@@Base+0x1b0>  // b.tstop
  40bf3c:	mov	x27, x25
  40bf40:	b	40bf70 <rtnl_listen@@Base+0x198>
  40bf44:	add	w19, w19, #0x3
  40bf48:	and	w19, w19, #0xfffffffc
  40bf4c:	sub	w1, w28, w19
  40bf50:	cmp	w1, #0xf
  40bf54:	add	x27, x27, w19, uxtw
  40bf58:	mov	w28, w1
  40bf5c:	b.ls	40bfb8 <rtnl_listen@@Base+0x1e0>  // b.plast
  40bf60:	ldr	w19, [x27]
  40bf64:	cmp	w19, #0x10
  40bf68:	ccmp	w19, w28, #0x0, pl  // pl = nfrst
  40bf6c:	b.gt	40bf88 <rtnl_listen@@Base+0x1b0>
  40bf70:	mov	x2, x21
  40bf74:	mov	x1, x27
  40bf78:	mov	x0, x22
  40bf7c:	blr	x20
  40bf80:	tbz	w0, #31, 40bf44 <rtnl_listen@@Base+0x16c>
  40bf84:	b	40bee4 <rtnl_listen@@Base+0x10c>
  40bf88:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bf8c:	ldr	w1, [sp, #184]
  40bf90:	ldr	x0, [x0, #3992]
  40bf94:	ldr	x3, [x0]
  40bf98:	tbz	w1, #5, 40c0d8 <rtnl_listen@@Base+0x300>
  40bf9c:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bfa0:	mov	x2, #0x12                  	// #18
  40bfa4:	add	x0, x0, #0x570
  40bfa8:	mov	x1, #0x1                   	// #1
  40bfac:	bl	404eb0 <fwrite@plt>
  40bfb0:	mov	w0, #0xffffffff            	// #-1
  40bfb4:	b	40bee4 <rtnl_listen@@Base+0x10c>
  40bfb8:	ldr	w0, [sp, #184]
  40bfbc:	tbnz	w0, #5, 40c07c <rtnl_listen@@Base+0x2a4>
  40bfc0:	cbz	w1, 40be70 <rtnl_listen@@Base+0x98>
  40bfc4:	mov	w2, w1
  40bfc8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40bfcc:	add	x1, x1, #0x608
  40bfd0:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40bfd4:	ldr	x0, [x0, #3992]
  40bfd8:	ldr	x0, [x0]
  40bfdc:	bl	405020 <fprintf@plt>
  40bfe0:	mov	w0, #0x1                   	// #1
  40bfe4:	bl	404b70 <exit@plt>
  40bfe8:	ldr	x4, [sp, #176]
  40bfec:	mov	w3, #0xffffffff            	// #-1
  40bff0:	str	w3, [sp, #96]
  40bff4:	cmp	x4, #0xf
  40bff8:	b.ls	40bf20 <rtnl_listen@@Base+0x148>  // b.plast
  40bffc:	ldr	x2, [sp, #168]
  40c000:	mov	w6, w3
  40c004:	mov	w7, #0x0                   	// #0
  40c008:	add	x4, x2, x4
  40c00c:	cbz	x2, 40c054 <rtnl_listen@@Base+0x27c>
  40c010:	ldp	x3, x5, [x2]
  40c014:	cmp	x5, x26
  40c018:	b.eq	40c060 <rtnl_listen@@Base+0x288>  // b.none
  40c01c:	cmp	x3, #0xf
  40c020:	b.ls	40c054 <rtnl_listen@@Base+0x27c>  // b.plast
  40c024:	add	x3, x3, #0x7
  40c028:	and	x3, x3, #0xfffffffffffffff8
  40c02c:	add	x2, x2, x3
  40c030:	add	x3, x2, #0x10
  40c034:	cmp	x4, x3
  40c038:	b.cc	40c054 <rtnl_listen@@Base+0x27c>  // b.lo, b.ul, b.last
  40c03c:	ldr	x3, [x2]
  40c040:	add	x3, x3, #0x7
  40c044:	and	x3, x3, #0xfffffffffffffff8
  40c048:	add	x3, x2, x3
  40c04c:	cmp	x4, x3
  40c050:	b.cs	40c00c <rtnl_listen@@Base+0x234>  // b.hs, b.nlast
  40c054:	cbz	w7, 40bf20 <rtnl_listen@@Base+0x148>
  40c058:	str	w6, [sp, #96]
  40c05c:	b	40bf20 <rtnl_listen@@Base+0x148>
  40c060:	cmp	x3, #0x14
  40c064:	b.ne	40c01c <rtnl_listen@@Base+0x244>  // b.any
  40c068:	ldr	w6, [x2, #16]
  40c06c:	mov	w7, #0x1                   	// #1
  40c070:	b	40c024 <rtnl_listen@@Base+0x24c>
  40c074:	ldr	w0, [sp, #184]
  40c078:	tbz	w0, #5, 40bfc4 <rtnl_listen@@Base+0x1ec>
  40c07c:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c080:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c084:	mov	x2, #0x12                  	// #18
  40c088:	mov	x1, #0x1                   	// #1
  40c08c:	ldr	x3, [x3, #3992]
  40c090:	add	x0, x0, #0x5f0
  40c094:	ldr	x3, [x3]
  40c098:	bl	404eb0 <fwrite@plt>
  40c09c:	b	40be70 <rtnl_listen@@Base+0x98>
  40c0a0:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c0a4:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c0a8:	mov	x2, #0xf                   	// #15
  40c0ac:	add	x0, x0, #0x4d8
  40c0b0:	ldr	x3, [x3, #3992]
  40c0b4:	mov	x1, #0x1                   	// #1
  40c0b8:	ldr	x3, [x3]
  40c0bc:	bl	404eb0 <fwrite@plt>
  40c0c0:	mov	w0, #0xffffffff            	// #-1
  40c0c4:	b	40bee4 <rtnl_listen@@Base+0x10c>
  40c0c8:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c0cc:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c0d0:	add	x1, x1, #0x770
  40c0d4:	b	40bfd4 <rtnl_listen@@Base+0x1fc>
  40c0d8:	mov	w2, w19
  40c0dc:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c0e0:	add	x1, x1, #0x588
  40c0e4:	mov	x0, x3
  40c0e8:	bl	405020 <fprintf@plt>
  40c0ec:	mov	w0, #0x1                   	// #1
  40c0f0:	bl	404b70 <exit@plt>
  40c0f4:	nop

000000000040c0f8 <rtnl_from_file@@Base>:
  40c0f8:	mov	x12, #0x4050                	// #16464
  40c0fc:	sub	sp, sp, x12
  40c100:	stp	x29, x30, [sp]
  40c104:	mov	x29, sp
  40c108:	stp	x21, x22, [sp, #32]
  40c10c:	add	x21, sp, #0x50
  40c110:	mov	x22, x2
  40c114:	stp	x19, x20, [sp, #16]
  40c118:	mov	x20, x0
  40c11c:	stp	x23, x24, [sp, #48]
  40c120:	mov	x23, x1
  40c124:	add	x24, x21, #0x10
  40c128:	stp	x25, x26, [sp, #64]
  40c12c:	mov	w25, #0x3ff0                	// #16368
  40c130:	b	40c17c <rtnl_from_file@@Base+0x84>
  40c134:	cmp	x4, #0x10
  40c138:	b.ne	40c1b0 <rtnl_from_file@@Base+0xb8>  // b.any
  40c13c:	ldr	w26, [sp, #80]
  40c140:	sub	w19, w26, #0xd
  40c144:	sub	w2, w26, #0x10
  40c148:	and	x19, x19, #0xfffffffc
  40c14c:	cmp	w2, w25
  40c150:	mov	x2, x19
  40c154:	b.hi	40c1ec <rtnl_from_file@@Base+0xf4>  // b.pmore
  40c158:	bl	404e30 <fread@plt>
  40c15c:	mov	x3, x0
  40c160:	mov	x2, x22
  40c164:	mov	x1, x21
  40c168:	cmp	x19, x3
  40c16c:	mov	x0, #0x0                   	// #0
  40c170:	b.ne	40c1b0 <rtnl_from_file@@Base+0xb8>  // b.any
  40c174:	blr	x23
  40c178:	tbnz	w0, #31, 40c1cc <rtnl_from_file@@Base+0xd4>
  40c17c:	mov	x3, x20
  40c180:	mov	x1, #0x1                   	// #1
  40c184:	mov	x0, x21
  40c188:	mov	x2, #0x10                  	// #16
  40c18c:	bl	404e30 <fread@plt>
  40c190:	mov	x4, x0
  40c194:	mov	x3, x20
  40c198:	mov	x0, x24
  40c19c:	mov	x1, #0x1                   	// #1
  40c1a0:	cbnz	x4, 40c134 <rtnl_from_file@@Base+0x3c>
  40c1a4:	mov	x0, x20
  40c1a8:	bl	404dd0 <feof@plt>
  40c1ac:	cbnz	w0, 40c274 <rtnl_from_file@@Base+0x17c>
  40c1b0:	mov	x0, x20
  40c1b4:	bl	405050 <ferror@plt>
  40c1b8:	cbnz	w0, 40c264 <rtnl_from_file@@Base+0x16c>
  40c1bc:	mov	x0, x20
  40c1c0:	bl	404dd0 <feof@plt>
  40c1c4:	cbnz	w0, 40c23c <rtnl_from_file@@Base+0x144>
  40c1c8:	mov	w0, #0xffffffff            	// #-1
  40c1cc:	mov	x12, #0x4050                	// #16464
  40c1d0:	ldp	x29, x30, [sp]
  40c1d4:	ldp	x19, x20, [sp, #16]
  40c1d8:	ldp	x21, x22, [sp, #32]
  40c1dc:	ldp	x23, x24, [sp, #48]
  40c1e0:	ldp	x25, x26, [sp, #64]
  40c1e4:	add	sp, sp, x12
  40c1e8:	ret
  40c1ec:	adrp	x1, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c1f0:	mov	x0, x20
  40c1f4:	ldr	x1, [x1, #3992]
  40c1f8:	ldr	x19, [x1]
  40c1fc:	bl	404be0 <ftell@plt>
  40c200:	mov	w2, w26
  40c204:	mov	x3, x0
  40c208:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c20c:	mov	x0, x19
  40c210:	add	x1, x1, #0x7d0
  40c214:	bl	405020 <fprintf@plt>
  40c218:	mov	w0, #0xffffffff            	// #-1
  40c21c:	mov	x12, #0x4050                	// #16464
  40c220:	ldp	x29, x30, [sp]
  40c224:	ldp	x19, x20, [sp, #16]
  40c228:	ldp	x21, x22, [sp, #32]
  40c22c:	ldp	x23, x24, [sp, #48]
  40c230:	ldp	x25, x26, [sp, #64]
  40c234:	add	sp, sp, x12
  40c238:	ret
  40c23c:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c240:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c244:	mov	x2, #0x22                  	// #34
  40c248:	add	x0, x0, #0x7a8
  40c24c:	ldr	x3, [x3, #3992]
  40c250:	mov	x1, #0x1                   	// #1
  40c254:	ldr	x3, [x3]
  40c258:	bl	404eb0 <fwrite@plt>
  40c25c:	mov	w0, #0xffffffff            	// #-1
  40c260:	b	40c1cc <rtnl_from_file@@Base+0xd4>
  40c264:	adrp	x0, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c268:	add	x0, x0, #0x790
  40c26c:	bl	404b80 <perror@plt>
  40c270:	b	40c1bc <rtnl_from_file@@Base+0xc4>
  40c274:	mov	w0, #0x0                   	// #0
  40c278:	b	40c1cc <rtnl_from_file@@Base+0xd4>
  40c27c:	nop

000000000040c280 <addattr_l@@Base>:
  40c280:	stp	x29, x30, [sp, #-32]!
  40c284:	mov	x29, sp
  40c288:	ldr	w5, [x0]
  40c28c:	stp	x19, x20, [sp, #16]
  40c290:	add	w20, w4, #0x7
  40c294:	add	w5, w5, #0x3
  40c298:	and	w20, w20, #0xfffffffc
  40c29c:	and	w5, w5, #0xfffffffc
  40c2a0:	add	w6, w5, w20
  40c2a4:	mov	x19, x0
  40c2a8:	cmp	w6, w1
  40c2ac:	b.hi	40c2fc <addattr_l@@Base+0x7c>  // b.pmore
  40c2b0:	add	x0, x19, w5, uxtw
  40c2b4:	add	w1, w4, #0x4
  40c2b8:	strh	w2, [x0, #2]
  40c2bc:	strh	w1, [x19, w5, uxtw]
  40c2c0:	cbnz	w4, 40c2d8 <addattr_l@@Base+0x58>
  40c2c4:	mov	w0, #0x0                   	// #0
  40c2c8:	str	w6, [x19]
  40c2cc:	ldp	x19, x20, [sp, #16]
  40c2d0:	ldp	x29, x30, [sp], #32
  40c2d4:	ret
  40c2d8:	sxtw	x2, w4
  40c2dc:	mov	x1, x3
  40c2e0:	add	x0, x0, #0x4
  40c2e4:	bl	404b30 <memcpy@plt>
  40c2e8:	ldr	w6, [x19]
  40c2ec:	add	w6, w6, #0x3
  40c2f0:	and	w6, w6, #0xfffffffc
  40c2f4:	add	w6, w6, w20
  40c2f8:	b	40c2c4 <addattr_l@@Base+0x44>
  40c2fc:	adrp	x3, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c300:	mov	w2, w1
  40c304:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c308:	add	x1, x1, #0x7f8
  40c30c:	ldr	x3, [x3, #3992]
  40c310:	ldr	x0, [x3]
  40c314:	bl	405020 <fprintf@plt>
  40c318:	mov	w0, #0xffffffff            	// #-1
  40c31c:	b	40c2cc <addattr_l@@Base+0x4c>

000000000040c320 <addattr@@Base>:
  40c320:	mov	w4, #0x0                   	// #0
  40c324:	mov	x3, #0x0                   	// #0
  40c328:	b	40c280 <addattr_l@@Base>
  40c32c:	nop

000000000040c330 <addattr8@@Base>:
  40c330:	stp	x29, x30, [sp, #-32]!
  40c334:	mov	w4, #0x1                   	// #1
  40c338:	mov	x29, sp
  40c33c:	strb	w3, [sp, #31]
  40c340:	add	x3, sp, #0x1f
  40c344:	bl	40c280 <addattr_l@@Base>
  40c348:	ldp	x29, x30, [sp], #32
  40c34c:	ret

000000000040c350 <addattr16@@Base>:
  40c350:	stp	x29, x30, [sp, #-32]!
  40c354:	mov	w4, #0x2                   	// #2
  40c358:	mov	x29, sp
  40c35c:	strh	w3, [sp, #30]
  40c360:	add	x3, sp, #0x1e
  40c364:	bl	40c280 <addattr_l@@Base>
  40c368:	ldp	x29, x30, [sp], #32
  40c36c:	ret

000000000040c370 <addattr32@@Base>:
  40c370:	stp	x29, x30, [sp, #-32]!
  40c374:	mov	w4, #0x4                   	// #4
  40c378:	mov	x29, sp
  40c37c:	str	w3, [sp, #28]
  40c380:	add	x3, sp, #0x1c
  40c384:	bl	40c280 <addattr_l@@Base>
  40c388:	ldp	x29, x30, [sp], #32
  40c38c:	ret

000000000040c390 <addattr64@@Base>:
  40c390:	stp	x29, x30, [sp, #-32]!
  40c394:	mov	w4, #0x8                   	// #8
  40c398:	mov	x29, sp
  40c39c:	str	x3, [sp, #24]
  40c3a0:	add	x3, sp, #0x18
  40c3a4:	bl	40c280 <addattr_l@@Base>
  40c3a8:	ldp	x29, x30, [sp], #32
  40c3ac:	ret

000000000040c3b0 <addattrstrz@@Base>:
  40c3b0:	stp	x29, x30, [sp, #-48]!
  40c3b4:	mov	x29, sp
  40c3b8:	stp	x19, x20, [sp, #16]
  40c3bc:	mov	x19, x3
  40c3c0:	mov	x20, x0
  40c3c4:	mov	x0, x3
  40c3c8:	stp	x21, x22, [sp, #32]
  40c3cc:	mov	w21, w1
  40c3d0:	mov	w22, w2
  40c3d4:	bl	404b60 <strlen@plt>
  40c3d8:	mov	x3, x19
  40c3dc:	mov	x4, x0
  40c3e0:	mov	w2, w22
  40c3e4:	mov	w1, w21
  40c3e8:	mov	x0, x20
  40c3ec:	add	w4, w4, #0x1
  40c3f0:	ldp	x19, x20, [sp, #16]
  40c3f4:	ldp	x21, x22, [sp, #32]
  40c3f8:	ldp	x29, x30, [sp], #48
  40c3fc:	b	40c280 <addattr_l@@Base>

000000000040c400 <addraw_l@@Base>:
  40c400:	stp	x29, x30, [sp, #-48]!
  40c404:	mov	x29, sp
  40c408:	stp	x19, x20, [sp, #16]
  40c40c:	mov	x19, x0
  40c410:	ldr	w0, [x0]
  40c414:	add	w20, w3, #0x3
  40c418:	stp	x21, x22, [sp, #32]
  40c41c:	add	w0, w0, #0x3
  40c420:	and	w20, w20, #0xfffffffc
  40c424:	and	w0, w0, #0xfffffffc
  40c428:	mov	w21, w3
  40c42c:	mov	w3, w1
  40c430:	mov	x1, x2
  40c434:	add	w2, w0, w20
  40c438:	cmp	w2, w3
  40c43c:	b.hi	40c498 <addraw_l@@Base+0x98>  // b.pmore
  40c440:	sxtw	x22, w21
  40c444:	add	x0, x19, w0, uxtw
  40c448:	mov	x2, x22
  40c44c:	bl	404b30 <memcpy@plt>
  40c450:	ldr	w0, [x19]
  40c454:	mov	w1, #0x0                   	// #0
  40c458:	sub	w2, w20, w21
  40c45c:	add	w0, w0, #0x3
  40c460:	and	x0, x0, #0xfffffffc
  40c464:	add	x0, x0, x22
  40c468:	add	x0, x19, x0
  40c46c:	bl	404cf0 <memset@plt>
  40c470:	ldr	w1, [x19]
  40c474:	mov	w0, #0x0                   	// #0
  40c478:	add	w1, w1, #0x3
  40c47c:	and	w1, w1, #0xfffffffc
  40c480:	add	w1, w1, w20
  40c484:	str	w1, [x19]
  40c488:	ldp	x19, x20, [sp, #16]
  40c48c:	ldp	x21, x22, [sp, #32]
  40c490:	ldp	x29, x30, [sp], #48
  40c494:	ret
  40c498:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c49c:	mov	w2, w3
  40c4a0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c4a4:	add	x1, x1, #0x828
  40c4a8:	ldr	x0, [x0, #3992]
  40c4ac:	ldr	x0, [x0]
  40c4b0:	bl	405020 <fprintf@plt>
  40c4b4:	mov	w0, #0xffffffff            	// #-1
  40c4b8:	b	40c488 <addraw_l@@Base+0x88>
  40c4bc:	nop

000000000040c4c0 <addattr_nest@@Base>:
  40c4c0:	stp	x29, x30, [sp, #-32]!
  40c4c4:	mov	w4, #0x0                   	// #0
  40c4c8:	mov	x3, #0x0                   	// #0
  40c4cc:	mov	x29, sp
  40c4d0:	str	x19, [sp, #16]
  40c4d4:	ldr	w19, [x0]
  40c4d8:	add	w19, w19, #0x3
  40c4dc:	and	x19, x19, #0xfffffffc
  40c4e0:	add	x19, x0, x19
  40c4e4:	bl	40c280 <addattr_l@@Base>
  40c4e8:	mov	x0, x19
  40c4ec:	ldr	x19, [sp, #16]
  40c4f0:	ldp	x29, x30, [sp], #32
  40c4f4:	ret

000000000040c4f8 <addattr_nest_end@@Base>:
  40c4f8:	mov	x2, x0
  40c4fc:	ldr	w0, [x0]
  40c500:	add	w3, w0, #0x3
  40c504:	and	x3, x3, #0xfffffffc
  40c508:	add	x2, x2, x3
  40c50c:	sub	x2, x2, x1
  40c510:	strh	w2, [x1]
  40c514:	ret

000000000040c518 <addattr_nest_compat@@Base>:
  40c518:	stp	x29, x30, [sp, #-48]!
  40c51c:	mov	x29, sp
  40c520:	stp	x19, x20, [sp, #16]
  40c524:	mov	x20, x0
  40c528:	ldr	w19, [x0]
  40c52c:	stp	x21, x22, [sp, #32]
  40c530:	mov	w21, w1
  40c534:	add	w19, w19, #0x3
  40c538:	and	x19, x19, #0xfffffffc
  40c53c:	mov	w22, w2
  40c540:	add	x19, x0, x19
  40c544:	bl	40c280 <addattr_l@@Base>
  40c548:	mov	w2, w22
  40c54c:	mov	w1, w21
  40c550:	mov	x0, x20
  40c554:	bl	40c4c0 <addattr_nest@@Base>
  40c558:	mov	x0, x19
  40c55c:	ldp	x19, x20, [sp, #16]
  40c560:	ldp	x21, x22, [sp, #32]
  40c564:	ldp	x29, x30, [sp], #48
  40c568:	ret
  40c56c:	nop

000000000040c570 <addattr_nest_compat_end@@Base>:
  40c570:	stp	x29, x30, [sp, #-32]!
  40c574:	mov	x29, sp
  40c578:	ldr	w2, [x0]
  40c57c:	ldrh	w3, [x1]
  40c580:	add	w2, w2, #0x3
  40c584:	str	x19, [sp, #16]
  40c588:	and	x2, x2, #0xfffffffc
  40c58c:	add	w3, w3, #0x3
  40c590:	add	x2, x0, x2
  40c594:	and	x3, x3, #0x1fffc
  40c598:	sub	x2, x2, x1
  40c59c:	mov	x19, x0
  40c5a0:	strh	w2, [x1]
  40c5a4:	add	x1, x1, x3
  40c5a8:	bl	40c4f8 <addattr_nest_end@@Base>
  40c5ac:	ldr	w0, [x19]
  40c5b0:	ldr	x19, [sp, #16]
  40c5b4:	ldp	x29, x30, [sp], #32
  40c5b8:	ret
  40c5bc:	nop

000000000040c5c0 <rta_addattr32@@Base>:
  40c5c0:	ldrh	w4, [x0]
  40c5c4:	mov	x5, x0
  40c5c8:	add	w4, w4, #0x3
  40c5cc:	and	w4, w4, #0xfffffffc
  40c5d0:	add	w0, w4, #0x8
  40c5d4:	cmp	w0, w1
  40c5d8:	b.hi	40c60c <rta_addattr32@@Base+0x4c>  // b.pmore
  40c5dc:	add	x1, x5, w4, uxtw
  40c5e0:	mov	w6, #0x8                   	// #8
  40c5e4:	mov	w0, #0x0                   	// #0
  40c5e8:	strh	w2, [x1, #2]
  40c5ec:	strh	w6, [x5, w4, uxtw]
  40c5f0:	str	w3, [x1, #4]
  40c5f4:	ldrh	w1, [x5]
  40c5f8:	add	w1, w1, #0x3
  40c5fc:	and	w1, w1, #0xfffffffc
  40c600:	add	w1, w1, #0x8
  40c604:	strh	w1, [x5]
  40c608:	ret
  40c60c:	stp	x29, x30, [sp, #-16]!
  40c610:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c614:	mov	w2, w1
  40c618:	mov	x29, sp
  40c61c:	ldr	x0, [x0, #3992]
  40c620:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c624:	add	x1, x1, #0x858
  40c628:	ldr	x0, [x0]
  40c62c:	bl	405020 <fprintf@plt>
  40c630:	mov	w0, #0xffffffff            	// #-1
  40c634:	ldp	x29, x30, [sp], #16
  40c638:	ret
  40c63c:	nop

000000000040c640 <rta_addattr_l@@Base>:
  40c640:	stp	x29, x30, [sp, #-32]!
  40c644:	mov	x29, sp
  40c648:	stp	x19, x20, [sp, #16]
  40c64c:	mov	x20, x0
  40c650:	add	w0, w4, #0x7
  40c654:	and	w0, w0, #0xfffffffc
  40c658:	ldrh	w5, [x20]
  40c65c:	add	w5, w5, #0x3
  40c660:	and	w5, w5, #0xfffffffc
  40c664:	add	w0, w0, w5
  40c668:	cmp	w0, w1
  40c66c:	b.hi	40c6c8 <rta_addattr_l@@Base+0x88>  // b.pmore
  40c670:	add	x0, x20, w5, uxtw
  40c674:	add	w19, w4, #0x4
  40c678:	and	w19, w19, #0xffff
  40c67c:	strh	w2, [x0, #2]
  40c680:	strh	w19, [x20, w5, uxtw]
  40c684:	cbnz	w4, 40c6b4 <rta_addattr_l@@Base+0x74>
  40c688:	ldrh	w1, [x20]
  40c68c:	add	w19, w19, #0x3
  40c690:	and	w19, w19, #0xfffffffc
  40c694:	mov	w0, #0x0                   	// #0
  40c698:	add	w1, w1, #0x3
  40c69c:	and	w1, w1, #0xfffffffc
  40c6a0:	add	w19, w1, w19
  40c6a4:	strh	w19, [x20]
  40c6a8:	ldp	x19, x20, [sp, #16]
  40c6ac:	ldp	x29, x30, [sp], #32
  40c6b0:	ret
  40c6b4:	sxtw	x2, w4
  40c6b8:	mov	x1, x3
  40c6bc:	add	x0, x0, #0x4
  40c6c0:	bl	404b30 <memcpy@plt>
  40c6c4:	b	40c688 <rta_addattr_l@@Base+0x48>
  40c6c8:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c6cc:	mov	w2, w1
  40c6d0:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c6d4:	add	x1, x1, #0x890
  40c6d8:	ldr	x0, [x0, #3992]
  40c6dc:	ldr	x0, [x0]
  40c6e0:	bl	405020 <fprintf@plt>
  40c6e4:	mov	w0, #0xffffffff            	// #-1
  40c6e8:	b	40c6a8 <rta_addattr_l@@Base+0x68>
  40c6ec:	nop

000000000040c6f0 <rta_addattr8@@Base>:
  40c6f0:	stp	x29, x30, [sp, #-32]!
  40c6f4:	mov	w4, #0x1                   	// #1
  40c6f8:	mov	x29, sp
  40c6fc:	strb	w3, [sp, #31]
  40c700:	add	x3, sp, #0x1f
  40c704:	bl	40c640 <rta_addattr_l@@Base>
  40c708:	ldp	x29, x30, [sp], #32
  40c70c:	ret

000000000040c710 <rta_addattr16@@Base>:
  40c710:	stp	x29, x30, [sp, #-32]!
  40c714:	mov	w4, #0x2                   	// #2
  40c718:	mov	x29, sp
  40c71c:	strh	w3, [sp, #30]
  40c720:	add	x3, sp, #0x1e
  40c724:	bl	40c640 <rta_addattr_l@@Base>
  40c728:	ldp	x29, x30, [sp], #32
  40c72c:	ret

000000000040c730 <rta_addattr64@@Base>:
  40c730:	stp	x29, x30, [sp, #-32]!
  40c734:	mov	w4, #0x8                   	// #8
  40c738:	mov	x29, sp
  40c73c:	str	x3, [sp, #24]
  40c740:	add	x3, sp, #0x18
  40c744:	bl	40c640 <rta_addattr_l@@Base>
  40c748:	ldp	x29, x30, [sp], #32
  40c74c:	ret

000000000040c750 <rta_nest@@Base>:
  40c750:	stp	x29, x30, [sp, #-32]!
  40c754:	mov	w4, #0x0                   	// #0
  40c758:	mov	x3, #0x0                   	// #0
  40c75c:	mov	x29, sp
  40c760:	ldrh	w5, [x0]
  40c764:	str	x19, [sp, #16]
  40c768:	add	w5, w5, #0x3
  40c76c:	and	x5, x5, #0x1fffc
  40c770:	add	x19, x0, x5
  40c774:	bl	40c640 <rta_addattr_l@@Base>
  40c778:	ldrh	w1, [x19, #2]
  40c77c:	mov	x0, x19
  40c780:	orr	w1, w1, #0xffff8000
  40c784:	strh	w1, [x19, #2]
  40c788:	ldr	x19, [sp, #16]
  40c78c:	ldp	x29, x30, [sp], #32
  40c790:	ret
  40c794:	nop

000000000040c798 <rta_nest_end@@Base>:
  40c798:	ldrh	w2, [x0]
  40c79c:	add	w2, w2, #0x3
  40c7a0:	and	x2, x2, #0x1fffc
  40c7a4:	add	x2, x0, x2
  40c7a8:	sub	x2, x2, x1
  40c7ac:	strh	w2, [x1]
  40c7b0:	ldrh	w0, [x0]
  40c7b4:	ret

000000000040c7b8 <parse_rtattr_flags@@Base>:
  40c7b8:	stp	x29, x30, [sp, #-64]!
  40c7bc:	mov	x29, sp
  40c7c0:	stp	x21, x22, [sp, #32]
  40c7c4:	mov	w21, w1
  40c7c8:	add	w1, w1, #0x1
  40c7cc:	and	w22, w4, #0xffff
  40c7d0:	stp	x19, x20, [sp, #16]
  40c7d4:	mov	w19, w3
  40c7d8:	mov	x20, x2
  40c7dc:	sbfiz	x2, x1, #3, #32
  40c7e0:	mov	w1, #0x0                   	// #0
  40c7e4:	str	x23, [sp, #48]
  40c7e8:	mov	x23, x0
  40c7ec:	bl	404cf0 <memset@plt>
  40c7f0:	mvn	w1, w22
  40c7f4:	cmp	w19, #0x3
  40c7f8:	b.gt	40c80c <parse_rtattr_flags@@Base+0x54>
  40c7fc:	b	40c860 <parse_rtattr_flags@@Base+0xa8>
  40c800:	add	x20, x20, w5, uxtw
  40c804:	cmp	w19, #0x3
  40c808:	b.le	40c860 <parse_rtattr_flags@@Base+0xa8>
  40c80c:	ldrh	w4, [x20]
  40c810:	add	w5, w4, #0x3
  40c814:	cmp	w4, #0x3
  40c818:	and	w5, w5, #0xfffffffc
  40c81c:	mov	w3, w4
  40c820:	b.ls	40c880 <parse_rtattr_flags@@Base+0xc8>  // b.plast
  40c824:	cmp	w19, w4
  40c828:	b.lt	40c880 <parse_rtattr_flags@@Base+0xc8>  // b.tstop
  40c82c:	ldrh	w4, [x20, #2]
  40c830:	sub	w19, w19, w5
  40c834:	and	w4, w1, w4
  40c838:	and	x2, x4, #0xffff
  40c83c:	cmp	w21, w4, uxth
  40c840:	b.lt	40c800 <parse_rtattr_flags@@Base+0x48>  // b.tstop
  40c844:	ldr	x0, [x23, x2, lsl #3]
  40c848:	cbnz	x0, 40c800 <parse_rtattr_flags@@Base+0x48>
  40c84c:	str	x20, [x23, x2, lsl #3]
  40c850:	cmp	w19, #0x3
  40c854:	add	x20, x20, w5, uxtw
  40c858:	b.gt	40c80c <parse_rtattr_flags@@Base+0x54>
  40c85c:	nop
  40c860:	cbnz	w19, 40c87c <parse_rtattr_flags@@Base+0xc4>
  40c864:	mov	w0, #0x0                   	// #0
  40c868:	ldp	x19, x20, [sp, #16]
  40c86c:	ldp	x21, x22, [sp, #32]
  40c870:	ldr	x23, [sp, #48]
  40c874:	ldp	x29, x30, [sp], #64
  40c878:	ret
  40c87c:	ldrh	w3, [x20]
  40c880:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c884:	mov	w2, w19
  40c888:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c88c:	add	x1, x1, #0x8c8
  40c890:	ldr	x0, [x0, #3992]
  40c894:	ldr	x0, [x0]
  40c898:	bl	405020 <fprintf@plt>
  40c89c:	mov	w0, #0x0                   	// #0
  40c8a0:	ldp	x19, x20, [sp, #16]
  40c8a4:	ldp	x21, x22, [sp, #32]
  40c8a8:	ldr	x23, [sp, #48]
  40c8ac:	ldp	x29, x30, [sp], #64
  40c8b0:	ret
  40c8b4:	nop

000000000040c8b8 <parse_rtattr@@Base>:
  40c8b8:	mov	w4, #0x0                   	// #0
  40c8bc:	b	40c7b8 <parse_rtattr_flags@@Base>

000000000040c8c0 <parse_rtattr_one@@Base>:
  40c8c0:	b	40c8f8 <parse_rtattr_one@@Base+0x38>
  40c8c4:	ldrh	w4, [x1]
  40c8c8:	add	w5, w4, #0x3
  40c8cc:	cmp	w4, #0x3
  40c8d0:	and	w5, w5, #0xfffffffc
  40c8d4:	mov	w3, w4
  40c8d8:	b.ls	40c910 <parse_rtattr_one@@Base+0x50>  // b.plast
  40c8dc:	cmp	w4, w2
  40c8e0:	b.gt	40c910 <parse_rtattr_one@@Base+0x50>
  40c8e4:	ldrh	w3, [x1, #2]
  40c8e8:	sub	w2, w2, w5
  40c8ec:	cmp	w3, w0
  40c8f0:	b.eq	40c93c <parse_rtattr_one@@Base+0x7c>  // b.none
  40c8f4:	add	x1, x1, w5, uxtw
  40c8f8:	cmp	w2, #0x3
  40c8fc:	b.gt	40c8c4 <parse_rtattr_one@@Base+0x4>
  40c900:	mov	x0, #0x0                   	// #0
  40c904:	cbnz	w2, 40c90c <parse_rtattr_one@@Base+0x4c>
  40c908:	ret
  40c90c:	ldrh	w3, [x1]
  40c910:	stp	x29, x30, [sp, #-16]!
  40c914:	adrp	x0, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c918:	adrp	x1, 40d000 <_IO_stdin_used@@Base+0x5b8>
  40c91c:	mov	x29, sp
  40c920:	ldr	x0, [x0, #3992]
  40c924:	add	x1, x1, #0x8c8
  40c928:	ldr	x0, [x0]
  40c92c:	bl	405020 <fprintf@plt>
  40c930:	mov	x0, #0x0                   	// #0
  40c934:	ldp	x29, x30, [sp], #16
  40c938:	ret
  40c93c:	mov	x0, x1
  40c940:	ret
  40c944:	nop

000000000040c948 <__parse_rtattr_nested_compat@@Base>:
  40c948:	ldrh	w5, [x2]
  40c94c:	sub	x5, x5, #0x4
  40c950:	cmp	x5, w3, sxtw
  40c954:	b.cc	40c9a4 <__parse_rtattr_nested_compat@@Base+0x5c>  // b.lo, b.ul, b.last
  40c958:	add	w4, w3, #0x3
  40c95c:	and	x4, x4, #0xfffffffc
  40c960:	add	x4, x4, #0x4
  40c964:	cmp	x5, x4
  40c968:	b.cs	40c990 <__parse_rtattr_nested_compat@@Base+0x48>  // b.hs, b.nlast
  40c96c:	stp	x29, x30, [sp, #-16]!
  40c970:	add	w2, w1, #0x1
  40c974:	mov	w1, #0x0                   	// #0
  40c978:	mov	x29, sp
  40c97c:	sbfiz	x2, x2, #3, #32
  40c980:	bl	404cf0 <memset@plt>
  40c984:	mov	w0, #0x0                   	// #0
  40c988:	ldp	x29, x30, [sp], #16
  40c98c:	ret
  40c990:	ldrh	w3, [x2, x4]
  40c994:	add	x2, x2, x4
  40c998:	add	x2, x2, #0x4
  40c99c:	sub	w3, w3, #0x4
  40c9a0:	b	40c8b8 <parse_rtattr@@Base>
  40c9a4:	mov	w0, #0xffffffff            	// #-1
  40c9a8:	ret
  40c9ac:	nop

000000000040c9b0 <__libc_csu_init@@Base>:
  40c9b0:	stp	x29, x30, [sp, #-64]!
  40c9b4:	mov	x29, sp
  40c9b8:	stp	x19, x20, [sp, #16]
  40c9bc:	adrp	x20, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c9c0:	add	x20, x20, #0xcf8
  40c9c4:	stp	x21, x22, [sp, #32]
  40c9c8:	adrp	x21, 420000 <_IO_stdin_used@@Base+0x135b8>
  40c9cc:	add	x21, x21, #0xcf0
  40c9d0:	sub	x20, x20, x21
  40c9d4:	mov	w22, w0
  40c9d8:	stp	x23, x24, [sp, #48]
  40c9dc:	mov	x23, x1
  40c9e0:	mov	x24, x2
  40c9e4:	bl	404af0 <memcpy@plt-0x40>
  40c9e8:	cmp	xzr, x20, asr #3
  40c9ec:	b.eq	40ca18 <__libc_csu_init@@Base+0x68>  // b.none
  40c9f0:	asr	x20, x20, #3
  40c9f4:	mov	x19, #0x0                   	// #0
  40c9f8:	ldr	x3, [x21, x19, lsl #3]
  40c9fc:	mov	x2, x24
  40ca00:	add	x19, x19, #0x1
  40ca04:	mov	x1, x23
  40ca08:	mov	w0, w22
  40ca0c:	blr	x3
  40ca10:	cmp	x20, x19
  40ca14:	b.ne	40c9f8 <__libc_csu_init@@Base+0x48>  // b.any
  40ca18:	ldp	x19, x20, [sp, #16]
  40ca1c:	ldp	x21, x22, [sp, #32]
  40ca20:	ldp	x23, x24, [sp, #48]
  40ca24:	ldp	x29, x30, [sp], #64
  40ca28:	ret
  40ca2c:	nop

000000000040ca30 <__libc_csu_fini@@Base>:
  40ca30:	ret

Disassembly of section .fini:

000000000040ca34 <.fini>:
  40ca34:	stp	x29, x30, [sp, #-16]!
  40ca38:	mov	x29, sp
  40ca3c:	ldp	x29, x30, [sp], #16
  40ca40:	ret
