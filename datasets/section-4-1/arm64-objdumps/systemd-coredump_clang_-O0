
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-coredump_clang_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000402ca0 <_init>:
  402ca0:	stp	x29, x30, [sp, #-16]!
  402ca4:	mov	x29, sp
  402ca8:	bl	4035a8 <call_weak_fn>
  402cac:	ldp	x29, x30, [sp], #16
  402cb0:	ret

Disassembly of section .plt:

0000000000402cb8 <__libc_start_main@plt-0x20>:
  402cb8:	stp	x16, x30, [sp, #-16]!
  402cbc:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402cc0:	ldr	x17, [x16, #3000]
  402cc4:	add	x16, x16, #0xbb8
  402cc8:	br	x17
  402ccc:	nop
  402cd0:	nop
  402cd4:	nop

0000000000402cd8 <__libc_start_main@plt>:
  402cd8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402cdc:	ldr	x17, [x16, #3008]
  402ce0:	add	x16, x16, #0xbc0
  402ce4:	br	x17

0000000000402ce8 <abort@plt>:
  402ce8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402cec:	ldr	x17, [x16, #3016]
  402cf0:	add	x16, x16, #0xbc8
  402cf4:	br	x17

0000000000402cf8 <__gmon_start__@plt>:
  402cf8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402cfc:	ldr	x17, [x16, #3024]
  402d00:	add	x16, x16, #0xbd0
  402d04:	br	x17

0000000000402d08 <ask_password_agent_close@plt>:
  402d08:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d0c:	ldr	x17, [x16, #3032]
  402d10:	add	x16, x16, #0xbd8
  402d14:	br	x17

0000000000402d18 <polkit_agent_close@plt>:
  402d18:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d1c:	ldr	x17, [x16, #3040]
  402d20:	add	x16, x16, #0xbe0
  402d24:	br	x17

0000000000402d28 <pager_close@plt>:
  402d28:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d2c:	ldr	x17, [x16, #3048]
  402d30:	add	x16, x16, #0xbe8
  402d34:	br	x17

0000000000402d38 <mac_selinux_finish@plt>:
  402d38:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d3c:	ldr	x17, [x16, #3056]
  402d40:	add	x16, x16, #0xbf0
  402d44:	br	x17

0000000000402d48 <log_set_target@plt>:
  402d48:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d4c:	ldr	x17, [x16, #3064]
  402d50:	add	x16, x16, #0xbf8
  402d54:	br	x17

0000000000402d58 <log_open@plt>:
  402d58:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d5c:	ldr	x17, [x16, #3072]
  402d60:	add	x16, x16, #0xc00
  402d64:	br	x17

0000000000402d68 <prctl@plt>:
  402d68:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d6c:	ldr	x17, [x16, #3080]
  402d70:	add	x16, x16, #0xc08
  402d74:	br	x17

0000000000402d78 <log_get_max_level_realm@plt>:
  402d78:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d7c:	ldr	x17, [x16, #3088]
  402d80:	add	x16, x16, #0xc10
  402d84:	br	x17

0000000000402d88 <log_internal_realm@plt>:
  402d88:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d8c:	ldr	x17, [x16, #3096]
  402d90:	add	x16, x16, #0xc18
  402d94:	br	x17

0000000000402d98 <abs@plt>:
  402d98:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402d9c:	ldr	x17, [x16, #3104]
  402da0:	add	x16, x16, #0xc20
  402da4:	br	x17

0000000000402da8 <sd_listen_fds@plt>:
  402da8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402dac:	ldr	x17, [x16, #3112]
  402db0:	add	x16, x16, #0xc28
  402db4:	br	x17

0000000000402db8 <config_item_table_lookup@plt>:
  402db8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402dbc:	ldr	x17, [x16, #3120]
  402dc0:	add	x16, x16, #0xc30
  402dc4:	br	x17

0000000000402dc8 <config_parse_many_nulstr@plt>:
  402dc8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402dcc:	ldr	x17, [x16, #3128]
  402dd0:	add	x16, x16, #0xc38
  402dd4:	br	x17

0000000000402dd8 <strcmp_ptr@plt>:
  402dd8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402ddc:	ldr	x17, [x16, #3136]
  402de0:	add	x16, x16, #0xc40
  402de4:	br	x17

0000000000402de8 <memset@plt>:
  402de8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402dec:	ldr	x17, [x16, #3144]
  402df0:	add	x16, x16, #0xc48
  402df4:	br	x17

0000000000402df8 <iovw_new@plt>:
  402df8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402dfc:	ldr	x17, [x16, #3152]
  402e00:	add	x16, x16, #0xc50
  402e04:	br	x17

0000000000402e08 <log_oom_internal@plt>:
  402e08:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e0c:	ldr	x17, [x16, #3160]
  402e10:	add	x16, x16, #0xc58
  402e14:	br	x17

0000000000402e18 <iovw_put_string_field@plt>:
  402e18:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e1c:	ldr	x17, [x16, #3168]
  402e20:	add	x16, x16, #0xc60
  402e24:	br	x17

0000000000402e28 <journal_importer_process_data@plt>:
  402e28:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e2c:	ldr	x17, [x16, #3176]
  402e30:	add	x16, x16, #0xc68
  402e34:	br	x17

0000000000402e38 <journal_importer_eof@plt>:
  402e38:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e3c:	ldr	x17, [x16, #3184]
  402e40:	add	x16, x16, #0xc70
  402e44:	br	x17

0000000000402e48 <strlen@plt>:
  402e48:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e4c:	ldr	x17, [x16, #3192]
  402e50:	add	x16, x16, #0xc78
  402e54:	br	x17

0000000000402e58 <log_assert_failed_realm@plt>:
  402e58:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e5c:	ldr	x17, [x16, #3200]
  402e60:	add	x16, x16, #0xc80
  402e64:	br	x17

0000000000402e68 <stpcpy@plt>:
  402e68:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e6c:	ldr	x17, [x16, #3208]
  402e70:	add	x16, x16, #0xc88
  402e74:	br	x17

0000000000402e78 <iovw_put@plt>:
  402e78:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e7c:	ldr	x17, [x16, #3216]
  402e80:	add	x16, x16, #0xc90
  402e84:	br	x17

0000000000402e88 <sd_journal_sendv_with_location@plt>:
  402e88:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e8c:	ldr	x17, [x16, #3224]
  402e90:	add	x16, x16, #0xc98
  402e94:	br	x17

0000000000402e98 <iovw_free_free@plt>:
  402e98:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402e9c:	ldr	x17, [x16, #3232]
  402ea0:	add	x16, x16, #0xca0
  402ea4:	br	x17

0000000000402ea8 <journal_importer_cleanup@plt>:
  402ea8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402eac:	ldr	x17, [x16, #3240]
  402eb0:	add	x16, x16, #0xca8
  402eb4:	br	x17

0000000000402eb8 <disable_coredumps@plt>:
  402eb8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402ebc:	ldr	x17, [x16, #3248]
  402ec0:	add	x16, x16, #0xcb0
  402ec4:	br	x17

0000000000402ec8 <log_setup_service@plt>:
  402ec8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402ecc:	ldr	x17, [x16, #3256]
  402ed0:	add	x16, x16, #0xcb8
  402ed4:	br	x17

0000000000402ed8 <next_datagram_size_fd@plt>:
  402ed8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402edc:	ldr	x17, [x16, #3264]
  402ee0:	add	x16, x16, #0xcc0
  402ee4:	br	x17

0000000000402ee8 <malloc@plt>:
  402ee8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402eec:	ldr	x17, [x16, #3272]
  402ef0:	add	x16, x16, #0xcc8
  402ef4:	br	x17

0000000000402ef8 <recvmsg@plt>:
  402ef8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402efc:	ldr	x17, [x16, #3280]
  402f00:	add	x16, x16, #0xcd0
  402f04:	br	x17

0000000000402f08 <free@plt>:
  402f08:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f0c:	ldr	x17, [x16, #3288]
  402f10:	add	x16, x16, #0xcd8
  402f14:	br	x17

0000000000402f18 <__errno_location@plt>:
  402f18:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f1c:	ldr	x17, [x16, #3296]
  402f20:	add	x16, x16, #0xce0
  402f24:	br	x17

0000000000402f28 <__cmsg_nxthdr@plt>:
  402f28:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f2c:	ldr	x17, [x16, #3304]
  402f30:	add	x16, x16, #0xce8
  402f34:	br	x17

0000000000402f38 <cmsg_close_all@plt>:
  402f38:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f3c:	ldr	x17, [x16, #3312]
  402f40:	add	x16, x16, #0xcf0
  402f44:	br	x17

0000000000402f48 <iovw_free_contents@plt>:
  402f48:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f4c:	ldr	x17, [x16, #3320]
  402f50:	add	x16, x16, #0xcf8
  402f54:	br	x17

0000000000402f58 <log_syntax_internal@plt>:
  402f58:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f5c:	ldr	x17, [x16, #3328]
  402f60:	add	x16, x16, #0xd00
  402f64:	br	x17

0000000000402f68 <string_table_lookup@plt>:
  402f68:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f6c:	ldr	x17, [x16, #3336]
  402f70:	add	x16, x16, #0xd08
  402f74:	br	x17

0000000000402f78 <strjoin_real@plt>:
  402f78:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f7c:	ldr	x17, [x16, #3344]
  402f80:	add	x16, x16, #0xd10
  402f84:	br	x17

0000000000402f88 <safe_atoi@plt>:
  402f88:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f8c:	ldr	x17, [x16, #3352]
  402f90:	add	x16, x16, #0xd18
  402f94:	br	x17

0000000000402f98 <signal_to_string@plt>:
  402f98:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402f9c:	ldr	x17, [x16, #3360]
  402fa0:	add	x16, x16, #0xd20
  402fa4:	br	x17

0000000000402fa8 <get_process_comm@plt>:
  402fa8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402fac:	ldr	x17, [x16, #3368]
  402fb0:	add	x16, x16, #0xd28
  402fb4:	br	x17

0000000000402fb8 <iovw_put_string_field_free@plt>:
  402fb8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402fbc:	ldr	x17, [x16, #3376]
  402fc0:	add	x16, x16, #0xd30
  402fc4:	br	x17

0000000000402fc8 <get_process_exe@plt>:
  402fc8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402fcc:	ldr	x17, [x16, #3384]
  402fd0:	add	x16, x16, #0xd38
  402fd4:	br	x17

0000000000402fd8 <cg_pid_get_unit@plt>:
  402fd8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402fdc:	ldr	x17, [x16, #3392]
  402fe0:	add	x16, x16, #0xd40
  402fe4:	br	x17

0000000000402fe8 <cg_pid_get_user_unit@plt>:
  402fe8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402fec:	ldr	x17, [x16, #3400]
  402ff0:	add	x16, x16, #0xd48
  402ff4:	br	x17

0000000000402ff8 <sd_pid_get_session@plt>:
  402ff8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  402ffc:	ldr	x17, [x16, #3408]
  403000:	add	x16, x16, #0xd50
  403004:	br	x17

0000000000403008 <sd_pid_get_owner_uid@plt>:
  403008:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40300c:	ldr	x17, [x16, #3416]
  403010:	add	x16, x16, #0xd58
  403014:	br	x17

0000000000403018 <asprintf@plt>:
  403018:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40301c:	ldr	x17, [x16, #3424]
  403020:	add	x16, x16, #0xd60
  403024:	br	x17

0000000000403028 <sd_pid_get_slice@plt>:
  403028:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40302c:	ldr	x17, [x16, #3432]
  403030:	add	x16, x16, #0xd68
  403034:	br	x17

0000000000403038 <get_process_cmdline@plt>:
  403038:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40303c:	ldr	x17, [x16, #3440]
  403040:	add	x16, x16, #0xd70
  403044:	br	x17

0000000000403048 <cg_pid_get_path_shifted@plt>:
  403048:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40304c:	ldr	x17, [x16, #3448]
  403050:	add	x16, x16, #0xd78
  403054:	br	x17

0000000000403058 <sprintf@plt>:
  403058:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40305c:	ldr	x17, [x16, #3456]
  403060:	add	x16, x16, #0xd80
  403064:	br	x17

0000000000403068 <get_process_cwd@plt>:
  403068:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40306c:	ldr	x17, [x16, #3464]
  403070:	add	x16, x16, #0xd88
  403074:	br	x17

0000000000403078 <get_process_root@plt>:
  403078:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40307c:	ldr	x17, [x16, #3472]
  403080:	add	x16, x16, #0xd90
  403084:	br	x17

0000000000403088 <strcmp@plt>:
  403088:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40308c:	ldr	x17, [x16, #3480]
  403090:	add	x16, x16, #0xd98
  403094:	br	x17

0000000000403098 <get_process_environ@plt>:
  403098:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40309c:	ldr	x17, [x16, #3488]
  4030a0:	add	x16, x16, #0xda0
  4030a4:	br	x17

00000000004030a8 <parse_pid@plt>:
  4030a8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4030ac:	ldr	x17, [x16, #3496]
  4030b0:	add	x16, x16, #0xda8
  4030b4:	br	x17

00000000004030b8 <strncmp@plt>:
  4030b8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4030bc:	ldr	x17, [x16, #3504]
  4030c0:	add	x16, x16, #0xdb0
  4030c4:	br	x17

00000000004030c8 <opendir@plt>:
  4030c8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4030cc:	ldr	x17, [x16, #3512]
  4030d0:	add	x16, x16, #0xdb8
  4030d4:	br	x17

00000000004030d8 <dirfd@plt>:
  4030d8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4030dc:	ldr	x17, [x16, #3520]
  4030e0:	add	x16, x16, #0xdc0
  4030e4:	br	x17

00000000004030e8 <openat64@plt>:
  4030e8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4030ec:	ldr	x17, [x16, #3528]
  4030f0:	add	x16, x16, #0xdc8
  4030f4:	br	x17

00000000004030f8 <open_memstream_unlocked@plt>:
  4030f8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4030fc:	ldr	x17, [x16, #3536]
  403100:	add	x16, x16, #0xdd0
  403104:	br	x17

0000000000403108 <readdir64@plt>:
  403108:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40310c:	ldr	x17, [x16, #3544]
  403110:	add	x16, x16, #0xdd8
  403114:	br	x17

0000000000403118 <hidden_or_backup_file@plt>:
  403118:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40311c:	ldr	x17, [x16, #3552]
  403120:	add	x16, x16, #0xde0
  403124:	br	x17

0000000000403128 <readlinkat_malloc@plt>:
  403128:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40312c:	ldr	x17, [x16, #3560]
  403130:	add	x16, x16, #0xde8
  403134:	br	x17

0000000000403138 <fprintf@plt>:
  403138:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40313c:	ldr	x17, [x16, #3568]
  403140:	add	x16, x16, #0xdf0
  403144:	br	x17

0000000000403148 <fdopen@plt>:
  403148:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40314c:	ldr	x17, [x16, #3576]
  403150:	add	x16, x16, #0xdf8
  403154:	br	x17

0000000000403158 <safe_close@plt>:
  403158:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40315c:	ldr	x17, [x16, #3584]
  403160:	add	x16, x16, #0xe00
  403164:	br	x17

0000000000403168 <fputs@plt>:
  403168:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40316c:	ldr	x17, [x16, #3592]
  403170:	add	x16, x16, #0xe08
  403174:	br	x17

0000000000403178 <fputc@plt>:
  403178:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40317c:	ldr	x17, [x16, #3600]
  403180:	add	x16, x16, #0xe10
  403184:	br	x17

0000000000403188 <safe_fclose@plt>:
  403188:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40318c:	ldr	x17, [x16, #3608]
  403190:	add	x16, x16, #0xe18
  403194:	br	x17

0000000000403198 <read_full_file_full@plt>:
  403198:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40319c:	ldr	x17, [x16, #3616]
  4031a0:	add	x16, x16, #0xe20
  4031a4:	br	x17

00000000004031a8 <closedir@plt>:
  4031a8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4031ac:	ldr	x17, [x16, #3624]
  4031b0:	add	x16, x16, #0xe28
  4031b4:	br	x17

00000000004031b8 <read_line_full@plt>:
  4031b8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4031bc:	ldr	x17, [x16, #3632]
  4031c0:	add	x16, x16, #0xe30
  4031c4:	br	x17

00000000004031c8 <get_process_ppid@plt>:
  4031c8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4031cc:	ldr	x17, [x16, #3640]
  4031d0:	add	x16, x16, #0xe38
  4031d4:	br	x17

00000000004031d8 <open64@plt>:
  4031d8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4031dc:	ldr	x17, [x16, #3648]
  4031e0:	add	x16, x16, #0xe40
  4031e4:	br	x17

00000000004031e8 <log_dispatch_internal@plt>:
  4031e8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4031ec:	ldr	x17, [x16, #3656]
  4031f0:	add	x16, x16, #0xe48
  4031f4:	br	x17

00000000004031f8 <socket@plt>:
  4031f8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4031fc:	ldr	x17, [x16, #3664]
  403200:	add	x16, x16, #0xe50
  403204:	br	x17

0000000000403208 <strnlen@plt>:
  403208:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40320c:	ldr	x17, [x16, #3672]
  403210:	add	x16, x16, #0xe58
  403214:	br	x17

0000000000403218 <connect@plt>:
  403218:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40321c:	ldr	x17, [x16, #3680]
  403220:	add	x16, x16, #0xe60
  403224:	br	x17

0000000000403228 <sendmsg@plt>:
  403228:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40322c:	ldr	x17, [x16, #3688]
  403230:	add	x16, x16, #0xe68
  403234:	br	x17

0000000000403238 <send_one_fd_iov_sa@plt>:
  403238:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40323c:	ldr	x17, [x16, #3696]
  403240:	add	x16, x16, #0xe70
  403244:	br	x17

0000000000403248 <parse_uid@plt>:
  403248:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40324c:	ldr	x17, [x16, #3704]
  403250:	add	x16, x16, #0xe78
  403254:	br	x17

0000000000403258 <page_size@plt>:
  403258:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40325c:	ldr	x17, [x16, #3712]
  403260:	add	x16, x16, #0xe80
  403264:	br	x17

0000000000403268 <mkdir_p_label@plt>:
  403268:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40326c:	ldr	x17, [x16, #3720]
  403270:	add	x16, x16, #0xe88
  403274:	br	x17

0000000000403278 <open_tmpfile_linkable@plt>:
  403278:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40327c:	ldr	x17, [x16, #3728]
  403280:	add	x16, x16, #0xe90
  403284:	br	x17

0000000000403288 <log_struct_internal@plt>:
  403288:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40328c:	ldr	x17, [x16, #3736]
  403290:	add	x16, x16, #0xe98
  403294:	br	x17

0000000000403298 <lseek64@plt>:
  403298:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40329c:	ldr	x17, [x16, #3744]
  4032a0:	add	x16, x16, #0xea0
  4032a4:	br	x17

00000000004032a8 <compress_stream_xz@plt>:
  4032a8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4032ac:	ldr	x17, [x16, #3752]
  4032b0:	add	x16, x16, #0xea8
  4032b4:	br	x17

00000000004032b8 <unlink_noerrno@plt>:
  4032b8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4032bc:	ldr	x17, [x16, #3760]
  4032c0:	add	x16, x16, #0xeb0
  4032c4:	br	x17

00000000004032c8 <unlink@plt>:
  4032c8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4032cc:	ldr	x17, [x16, #3768]
  4032d0:	add	x16, x16, #0xeb8
  4032d4:	br	x17

00000000004032d8 <get_user_creds@plt>:
  4032d8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4032dc:	ldr	x17, [x16, #3776]
  4032e0:	add	x16, x16, #0xec0
  4032e4:	br	x17

00000000004032e8 <drop_privileges@plt>:
  4032e8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4032ec:	ldr	x17, [x16, #3784]
  4032f0:	add	x16, x16, #0xec8
  4032f4:	br	x17

00000000004032f8 <read@plt>:
  4032f8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4032fc:	ldr	x17, [x16, #3792]
  403300:	add	x16, x16, #0xed0
  403304:	br	x17

0000000000403308 <safe_atollu@plt>:
  403308:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40330c:	ldr	x17, [x16, #3800]
  403310:	add	x16, x16, #0xed8
  403314:	br	x17

0000000000403318 <sd_id128_get_boot@plt>:
  403318:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40331c:	ldr	x17, [x16, #3808]
  403320:	add	x16, x16, #0xee0
  403324:	br	x17

0000000000403328 <copy_bytes_full@plt>:
  403328:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40332c:	ldr	x17, [x16, #3816]
  403330:	add	x16, x16, #0xee8
  403334:	br	x17

0000000000403338 <fchmod@plt>:
  403338:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40333c:	ldr	x17, [x16, #3824]
  403340:	add	x16, x16, #0xef0
  403344:	br	x17

0000000000403348 <fsync@plt>:
  403348:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40334c:	ldr	x17, [x16, #3832]
  403350:	add	x16, x16, #0xef8
  403354:	br	x17

0000000000403358 <fsync_directory_of_file@plt>:
  403358:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40335c:	ldr	x17, [x16, #3840]
  403360:	add	x16, x16, #0xf00
  403364:	br	x17

0000000000403368 <link_tmpfile@plt>:
  403368:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40336c:	ldr	x17, [x16, #3848]
  403370:	add	x16, x16, #0xf08
  403374:	br	x17

0000000000403378 <xescape_full@plt>:
  403378:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40337c:	ldr	x17, [x16, #3856]
  403380:	add	x16, x16, #0xf10
  403384:	br	x17

0000000000403388 <acl_get_fd@plt>:
  403388:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40338c:	ldr	x17, [x16, #3864]
  403390:	add	x16, x16, #0xf18
  403394:	br	x17

0000000000403398 <acl_create_entry@plt>:
  403398:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40339c:	ldr	x17, [x16, #3872]
  4033a0:	add	x16, x16, #0xf20
  4033a4:	br	x17

00000000004033a8 <acl_set_tag_type@plt>:
  4033a8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4033ac:	ldr	x17, [x16, #3880]
  4033b0:	add	x16, x16, #0xf28
  4033b4:	br	x17

00000000004033b8 <acl_set_qualifier@plt>:
  4033b8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4033bc:	ldr	x17, [x16, #3888]
  4033c0:	add	x16, x16, #0xf30
  4033c4:	br	x17

00000000004033c8 <acl_get_permset@plt>:
  4033c8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4033cc:	ldr	x17, [x16, #3896]
  4033d0:	add	x16, x16, #0xf38
  4033d4:	br	x17

00000000004033d8 <acl_add_perm@plt>:
  4033d8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4033dc:	ldr	x17, [x16, #3904]
  4033e0:	add	x16, x16, #0xf40
  4033e4:	br	x17

00000000004033e8 <calc_acl_mask_if_needed@plt>:
  4033e8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4033ec:	ldr	x17, [x16, #3912]
  4033f0:	add	x16, x16, #0xf48
  4033f4:	br	x17

00000000004033f8 <acl_set_fd@plt>:
  4033f8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4033fc:	ldr	x17, [x16, #3920]
  403400:	add	x16, x16, #0xf50
  403404:	br	x17

0000000000403408 <fsetxattr@plt>:
  403408:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40340c:	ldr	x17, [x16, #3928]
  403410:	add	x16, x16, #0xf58
  403414:	br	x17

0000000000403418 <acl_free@plt>:
  403418:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40341c:	ldr	x17, [x16, #3936]
  403420:	add	x16, x16, #0xf60
  403424:	br	x17

0000000000403428 <config_parse_bool@plt>:
  403428:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40342c:	ldr	x17, [x16, #3944]
  403430:	add	x16, x16, #0xf68
  403434:	br	x17

0000000000403438 <config_parse_iec_uint64@plt>:
  403438:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40343c:	ldr	x17, [x16, #3952]
  403440:	add	x16, x16, #0xf70
  403444:	br	x17

0000000000403448 <config_parse_iec_size@plt>:
  403448:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40344c:	ldr	x17, [x16, #3960]
  403450:	add	x16, x16, #0xf78
  403454:	br	x17

0000000000403458 <rewinddir@plt>:
  403458:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40345c:	ldr	x17, [x16, #3968]
  403460:	add	x16, x16, #0xf80
  403464:	br	x17

0000000000403468 <internal_hashmap_ensure_allocated@plt>:
  403468:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40346c:	ldr	x17, [x16, #3976]
  403470:	add	x16, x16, #0xf88
  403474:	br	x17

0000000000403478 <timespec_load@plt>:
  403478:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40347c:	ldr	x17, [x16, #3984]
  403480:	add	x16, x16, #0xf90
  403484:	br	x17

0000000000403488 <strdup@plt>:
  403488:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40348c:	ldr	x17, [x16, #3992]
  403490:	add	x16, x16, #0xf98
  403494:	br	x17

0000000000403498 <calloc@plt>:
  403498:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40349c:	ldr	x17, [x16, #4000]
  4034a0:	add	x16, x16, #0xfa0
  4034a4:	br	x17

00000000004034a8 <hashmap_put@plt>:
  4034a8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4034ac:	ldr	x17, [x16, #4008]
  4034b0:	add	x16, x16, #0xfa8
  4034b4:	br	x17

00000000004034b8 <unlinkat_deallocate@plt>:
  4034b8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4034bc:	ldr	x17, [x16, #4016]
  4034c0:	add	x16, x16, #0xfb0
  4034c4:	br	x17

00000000004034c8 <strchr@plt>:
  4034c8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4034cc:	ldr	x17, [x16, #4024]
  4034d0:	add	x16, x16, #0xfb8
  4034d4:	br	x17

00000000004034d8 <memcpy@plt>:
  4034d8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4034dc:	ldr	x17, [x16, #4032]
  4034e0:	add	x16, x16, #0xfc0
  4034e4:	br	x17

00000000004034e8 <internal_hashmap_get@plt>:
  4034e8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4034ec:	ldr	x17, [x16, #4040]
  4034f0:	add	x16, x16, #0xfc8
  4034f4:	br	x17

00000000004034f8 <fstatvfs64@plt>:
  4034f8:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  4034fc:	ldr	x17, [x16, #4048]
  403500:	add	x16, x16, #0xfd0
  403504:	br	x17

0000000000403508 <internal_hashmap_first_key_and_value@plt>:
  403508:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40350c:	ldr	x17, [x16, #4056]
  403510:	add	x16, x16, #0xfd8
  403514:	br	x17

0000000000403518 <internal_hashmap_free@plt>:
  403518:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40351c:	ldr	x17, [x16, #4064]
  403520:	add	x16, x16, #0xfe0
  403524:	br	x17

0000000000403528 <__xstat64@plt>:
  403528:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40352c:	ldr	x17, [x16, #4072]
  403530:	add	x16, x16, #0xfe8
  403534:	br	x17

0000000000403538 <__fxstat64@plt>:
  403538:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40353c:	ldr	x17, [x16, #4080]
  403540:	add	x16, x16, #0xff0
  403544:	br	x17

0000000000403548 <__fxstatat64@plt>:
  403548:	adrp	x16, 41f000 <__FRAME_END__+0x12018>
  40354c:	ldr	x17, [x16, #4088]
  403550:	add	x16, x16, #0xff8
  403554:	br	x17

Disassembly of section .text:

0000000000403558 <_start>:
  403558:	mov	x29, #0x0                   	// #0
  40355c:	mov	x30, #0x0                   	// #0
  403560:	mov	x5, x0
  403564:	ldr	x1, [sp]
  403568:	add	x2, sp, #0x8
  40356c:	mov	x6, sp
  403570:	movz	x0, #0x0, lsl #48
  403574:	movk	x0, #0x0, lsl #32
  403578:	movk	x0, #0x40, lsl #16
  40357c:	movk	x0, #0x3720
  403580:	movz	x3, #0x0, lsl #48
  403584:	movk	x3, #0x0, lsl #32
  403588:	movk	x3, #0x40, lsl #16
  40358c:	movk	x3, #0xb418
  403590:	movz	x4, #0x0, lsl #48
  403594:	movk	x4, #0x0, lsl #32
  403598:	movk	x4, #0x40, lsl #16
  40359c:	movk	x4, #0xb498
  4035a0:	bl	402cd8 <__libc_start_main@plt>
  4035a4:	bl	402ce8 <abort@plt>

00000000004035a8 <call_weak_fn>:
  4035a8:	adrp	x0, 41f000 <__FRAME_END__+0x12018>
  4035ac:	ldr	x0, [x0, #2960]
  4035b0:	cbz	x0, 4035b8 <call_weak_fn+0x10>
  4035b4:	b	402cf8 <__gmon_start__@plt>
  4035b8:	ret

00000000004035bc <deregister_tm_clones>:
  4035bc:	stp	x29, x30, [sp, #-32]!
  4035c0:	mov	x29, sp
  4035c4:	adrp	x0, 420000 <arg_storage>
  4035c8:	add	x0, x0, #0x0
  4035cc:	str	x0, [sp, #24]
  4035d0:	ldr	x0, [sp, #24]
  4035d4:	str	x0, [sp, #24]
  4035d8:	ldr	x1, [sp, #24]
  4035dc:	adrp	x0, 420000 <arg_storage>
  4035e0:	add	x0, x0, #0x0
  4035e4:	cmp	x1, x0
  4035e8:	b.eq	403624 <deregister_tm_clones+0x68>  // b.none
  4035ec:	adrp	x0, 40b000 <vacuum_candidate_freep+0x20>
  4035f0:	add	x0, x0, #0x4f0
  4035f4:	ldr	x0, [x0]
  4035f8:	str	x0, [sp, #16]
  4035fc:	ldr	x0, [sp, #16]
  403600:	str	x0, [sp, #16]
  403604:	ldr	x0, [sp, #16]
  403608:	cmp	x0, #0x0
  40360c:	b.eq	403628 <deregister_tm_clones+0x6c>  // b.none
  403610:	ldr	x1, [sp, #16]
  403614:	adrp	x0, 420000 <arg_storage>
  403618:	add	x0, x0, #0x0
  40361c:	blr	x1
  403620:	b	403628 <deregister_tm_clones+0x6c>
  403624:	nop
  403628:	ldp	x29, x30, [sp], #32
  40362c:	ret

0000000000403630 <register_tm_clones>:
  403630:	stp	x29, x30, [sp, #-48]!
  403634:	mov	x29, sp
  403638:	adrp	x0, 420000 <arg_storage>
  40363c:	add	x0, x0, #0x0
  403640:	str	x0, [sp, #40]
  403644:	ldr	x0, [sp, #40]
  403648:	str	x0, [sp, #40]
  40364c:	ldr	x1, [sp, #40]
  403650:	adrp	x0, 420000 <arg_storage>
  403654:	add	x0, x0, #0x0
  403658:	sub	x0, x1, x0
  40365c:	asr	x0, x0, #3
  403660:	lsr	x1, x0, #63
  403664:	add	x0, x1, x0
  403668:	asr	x0, x0, #1
  40366c:	str	x0, [sp, #32]
  403670:	ldr	x0, [sp, #32]
  403674:	cmp	x0, #0x0
  403678:	b.eq	4036b8 <register_tm_clones+0x88>  // b.none
  40367c:	adrp	x0, 40b000 <vacuum_candidate_freep+0x20>
  403680:	add	x0, x0, #0x4f8
  403684:	ldr	x0, [x0]
  403688:	str	x0, [sp, #24]
  40368c:	ldr	x0, [sp, #24]
  403690:	str	x0, [sp, #24]
  403694:	ldr	x0, [sp, #24]
  403698:	cmp	x0, #0x0
  40369c:	b.eq	4036bc <register_tm_clones+0x8c>  // b.none
  4036a0:	ldr	x2, [sp, #24]
  4036a4:	ldr	x1, [sp, #32]
  4036a8:	adrp	x0, 420000 <arg_storage>
  4036ac:	add	x0, x0, #0x0
  4036b0:	blr	x2
  4036b4:	b	4036bc <register_tm_clones+0x8c>
  4036b8:	nop
  4036bc:	ldp	x29, x30, [sp], #48
  4036c0:	ret

00000000004036c4 <__do_global_dtors_aux>:
  4036c4:	stp	x29, x30, [sp, #-16]!
  4036c8:	mov	x29, sp
  4036cc:	adrp	x0, 420000 <arg_storage>
  4036d0:	add	x0, x0, #0x30
  4036d4:	ldrb	w0, [x0]
  4036d8:	and	x0, x0, #0xff
  4036dc:	cmp	x0, #0x0
  4036e0:	b.ne	4036fc <__do_global_dtors_aux+0x38>  // b.any
  4036e4:	bl	4035bc <deregister_tm_clones>
  4036e8:	adrp	x0, 420000 <arg_storage>
  4036ec:	add	x0, x0, #0x30
  4036f0:	mov	w1, #0x1                   	// #1
  4036f4:	strb	w1, [x0]
  4036f8:	b	403700 <__do_global_dtors_aux+0x3c>
  4036fc:	nop
  403700:	ldp	x29, x30, [sp], #16
  403704:	ret

0000000000403708 <frame_dummy>:
  403708:	stp	x29, x30, [sp, #-16]!
  40370c:	mov	x29, sp
  403710:	bl	403630 <register_tm_clones>
  403714:	nop
  403718:	ldp	x29, x30, [sp], #16
  40371c:	ret

0000000000403720 <main>:
  403720:	sub	sp, sp, #0x30
  403724:	stp	x29, x30, [sp, #32]
  403728:	add	x29, sp, #0x20
  40372c:	mov	w8, wzr
  403730:	mov	w9, #0x1                   	// #1
  403734:	stur	wzr, [x29, #-4]
  403738:	stur	w0, [x29, #-8]
  40373c:	str	x1, [sp, #16]
  403740:	ldur	w0, [x29, #-8]
  403744:	ldr	x1, [sp, #16]
  403748:	str	w8, [sp, #8]
  40374c:	str	w9, [sp, #4]
  403750:	bl	403798 <save_argc_argv>
  403754:	ldur	w0, [x29, #-8]
  403758:	ldr	x1, [sp, #16]
  40375c:	bl	4037cc <run>
  403760:	str	w0, [sp, #12]
  403764:	bl	402d08 <ask_password_agent_close@plt>
  403768:	bl	402d18 <polkit_agent_close@plt>
  40376c:	bl	402d28 <pager_close@plt>
  403770:	bl	402d38 <mac_selinux_finish@plt>
  403774:	bl	403b28 <static_destruct>
  403778:	ldr	w8, [sp, #12]
  40377c:	cmp	w8, #0x0
  403780:	ldr	w8, [sp, #4]
  403784:	ldr	w9, [sp, #8]
  403788:	csel	w0, w8, w9, lt  // lt = tstop
  40378c:	ldp	x29, x30, [sp, #32]
  403790:	add	sp, sp, #0x30
  403794:	ret

0000000000403798 <save_argc_argv>:
  403798:	sub	sp, sp, #0x10
  40379c:	adrp	x8, 420000 <arg_storage>
  4037a0:	add	x8, x8, #0x38
  4037a4:	adrp	x9, 420000 <arg_storage>
  4037a8:	add	x9, x9, #0x40
  4037ac:	str	w0, [sp, #12]
  4037b0:	str	x1, [sp]
  4037b4:	ldr	w10, [sp, #12]
  4037b8:	str	w10, [x8]
  4037bc:	ldr	x8, [sp]
  4037c0:	str	x8, [x9]
  4037c4:	add	sp, sp, #0x10
  4037c8:	ret

00000000004037cc <run>:
  4037cc:	sub	sp, sp, #0xc0
  4037d0:	stp	x29, x30, [sp, #176]
  4037d4:	add	x29, sp, #0xb0
  4037d8:	mov	w8, #0x2                   	// #2
  4037dc:	mov	w9, #0x4                   	// #4
  4037e0:	mov	w10, wzr
  4037e4:	mov	w11, #0x7                   	// #7
  4037e8:	adrp	x12, 40b000 <vacuum_candidate_freep+0x20>
  4037ec:	add	x12, x12, #0x500
  4037f0:	add	x12, x12, #0x3
  4037f4:	adrp	x13, 40b000 <vacuum_candidate_freep+0x20>
  4037f8:	add	x13, x13, #0x51b
  4037fc:	stur	w0, [x29, #-8]
  403800:	stur	x1, [x29, #-16]
  403804:	mov	w0, w8
  403808:	str	w9, [sp, #88]
  40380c:	str	w10, [sp, #84]
  403810:	str	w11, [sp, #80]
  403814:	str	x12, [sp, #72]
  403818:	str	x13, [sp, #64]
  40381c:	bl	402d48 <log_set_target@plt>
  403820:	bl	402d58 <log_open@plt>
  403824:	ldr	w8, [sp, #88]
  403828:	mov	w0, w8
  40382c:	ldr	w1, [sp, #84]
  403830:	bl	402d68 <prctl@plt>
  403834:	bl	403ba8 <parse_config>
  403838:	ldr	w8, [sp, #80]
  40383c:	stur	w8, [x29, #-24]
  403840:	stur	wzr, [x29, #-28]
  403844:	stur	wzr, [x29, #-32]
  403848:	ldur	w9, [x29, #-32]
  40384c:	mov	w0, w9
  403850:	bl	402d78 <log_get_max_level_realm@plt>
  403854:	ldur	w8, [x29, #-24]
  403858:	and	w8, w8, #0x7
  40385c:	cmp	w0, w8
  403860:	b.lt	4038c4 <run+0xf8>  // b.tstop
  403864:	ldur	w8, [x29, #-32]
  403868:	ldur	w9, [x29, #-24]
  40386c:	orr	w0, w9, w8, lsl #10
  403870:	ldur	w1, [x29, #-28]
  403874:	adrp	x10, 420000 <arg_storage>
  403878:	add	x10, x10, #0x0
  40387c:	ldr	w8, [x10]
  403880:	str	w0, [sp, #60]
  403884:	mov	w0, w8
  403888:	str	w1, [sp, #56]
  40388c:	bl	403bf0 <coredump_storage_to_string>
  403890:	ldr	w8, [sp, #60]
  403894:	str	x0, [sp, #48]
  403898:	mov	w0, w8
  40389c:	ldr	w1, [sp, #56]
  4038a0:	ldr	x2, [sp, #72]
  4038a4:	mov	w3, #0x535                 	// #1333
  4038a8:	ldr	x4, [sp, #64]
  4038ac:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  4038b0:	add	x5, x5, #0x51f
  4038b4:	ldr	x6, [sp, #48]
  4038b8:	bl	402d88 <log_internal_realm@plt>
  4038bc:	str	w0, [sp, #44]
  4038c0:	b	4038d8 <run+0x10c>
  4038c4:	ldur	w0, [x29, #-28]
  4038c8:	bl	402d98 <abs@plt>
  4038cc:	mov	w8, wzr
  4038d0:	subs	w8, w8, w0, uxtb
  4038d4:	str	w8, [sp, #44]
  4038d8:	ldr	w8, [sp, #44]
  4038dc:	stur	w8, [x29, #-36]
  4038e0:	mov	w8, #0x7                   	// #7
  4038e4:	stur	w8, [x29, #-40]
  4038e8:	stur	wzr, [x29, #-44]
  4038ec:	stur	wzr, [x29, #-48]
  4038f0:	ldur	w0, [x29, #-48]
  4038f4:	bl	402d78 <log_get_max_level_realm@plt>
  4038f8:	ldur	w8, [x29, #-40]
  4038fc:	and	w8, w8, #0x7
  403900:	cmp	w0, w8
  403904:	b.lt	40396c <run+0x1a0>  // b.tstop
  403908:	ldur	w8, [x29, #-48]
  40390c:	ldur	w9, [x29, #-40]
  403910:	orr	w0, w9, w8, lsl #10
  403914:	ldur	w1, [x29, #-44]
  403918:	adrp	x10, 420000 <arg_storage>
  40391c:	add	x10, x10, #0x4
  403920:	ldrb	w8, [x10]
  403924:	and	w8, w8, #0x1
  403928:	str	w0, [sp, #40]
  40392c:	mov	w0, w8
  403930:	str	w1, [sp, #36]
  403934:	bl	403c4c <yes_no>
  403938:	ldr	w8, [sp, #40]
  40393c:	str	x0, [sp, #24]
  403940:	mov	w0, w8
  403944:	ldr	w1, [sp, #36]
  403948:	ldr	x2, [sp, #72]
  40394c:	mov	w3, #0x536                 	// #1334
  403950:	ldr	x4, [sp, #64]
  403954:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  403958:	add	x5, x5, #0x536
  40395c:	ldr	x6, [sp, #24]
  403960:	bl	402d88 <log_internal_realm@plt>
  403964:	str	w0, [sp, #20]
  403968:	b	403980 <run+0x1b4>
  40396c:	ldur	w0, [x29, #-44]
  403970:	bl	402d98 <abs@plt>
  403974:	mov	w8, wzr
  403978:	subs	w8, w8, w0, uxtb
  40397c:	str	w8, [sp, #20]
  403980:	ldr	w8, [sp, #20]
  403984:	stur	w8, [x29, #-52]
  403988:	mov	w8, wzr
  40398c:	mov	w0, w8
  403990:	bl	402da8 <sd_listen_fds@plt>
  403994:	stur	w0, [x29, #-20]
  403998:	ldur	w8, [x29, #-20]
  40399c:	cmp	w8, #0x0
  4039a0:	cset	w8, ge  // ge = tcont
  4039a4:	tbnz	w8, #0, 403a2c <run+0x260>
  4039a8:	mov	w8, #0x3                   	// #3
  4039ac:	stur	w8, [x29, #-56]
  4039b0:	ldur	w8, [x29, #-20]
  4039b4:	stur	w8, [x29, #-60]
  4039b8:	stur	wzr, [x29, #-64]
  4039bc:	ldur	w0, [x29, #-64]
  4039c0:	bl	402d78 <log_get_max_level_realm@plt>
  4039c4:	ldur	w8, [x29, #-56]
  4039c8:	and	w8, w8, #0x7
  4039cc:	cmp	w0, w8
  4039d0:	b.lt	403a04 <run+0x238>  // b.tstop
  4039d4:	ldur	w8, [x29, #-64]
  4039d8:	ldur	w9, [x29, #-56]
  4039dc:	orr	w0, w9, w8, lsl #10
  4039e0:	ldur	w1, [x29, #-60]
  4039e4:	ldr	x2, [sp, #72]
  4039e8:	mov	w3, #0x53a                 	// #1338
  4039ec:	ldr	x4, [sp, #64]
  4039f0:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  4039f4:	add	x5, x5, #0x54f
  4039f8:	bl	402d88 <log_internal_realm@plt>
  4039fc:	str	w0, [sp, #16]
  403a00:	b	403a18 <run+0x24c>
  403a04:	ldur	w0, [x29, #-60]
  403a08:	bl	402d98 <abs@plt>
  403a0c:	mov	w8, wzr
  403a10:	subs	w8, w8, w0, uxtb
  403a14:	str	w8, [sp, #16]
  403a18:	ldr	w8, [sp, #16]
  403a1c:	stur	w8, [x29, #-68]
  403a20:	ldur	w8, [x29, #-68]
  403a24:	stur	w8, [x29, #-4]
  403a28:	b	403b18 <run+0x34c>
  403a2c:	ldur	w8, [x29, #-20]
  403a30:	cbnz	w8, 403a78 <run+0x2ac>
  403a34:	ldur	x8, [x29, #-16]
  403a38:	ldr	x0, [x8, #8]
  403a3c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  403a40:	add	x1, x1, #0x586
  403a44:	bl	403c7c <streq_ptr>
  403a48:	tbnz	w0, #0, 403a50 <run+0x284>
  403a4c:	b	403a64 <run+0x298>
  403a50:	ldur	w0, [x29, #-8]
  403a54:	ldur	x1, [x29, #-16]
  403a58:	bl	403cb4 <process_backtrace>
  403a5c:	stur	w0, [x29, #-4]
  403a60:	b	403b18 <run+0x34c>
  403a64:	ldur	w0, [x29, #-8]
  403a68:	ldur	x1, [x29, #-16]
  403a6c:	bl	4043b0 <process_kernel>
  403a70:	stur	w0, [x29, #-4]
  403a74:	b	403b18 <run+0x34c>
  403a78:	ldur	w8, [x29, #-20]
  403a7c:	cmp	w8, #0x1
  403a80:	b.ne	403a94 <run+0x2c8>  // b.any
  403a84:	mov	w0, #0x3                   	// #3
  403a88:	bl	404650 <process_socket>
  403a8c:	stur	w0, [x29, #-4]
  403a90:	b	403b18 <run+0x34c>
  403a94:	mov	w8, #0x3                   	// #3
  403a98:	stur	w8, [x29, #-72]
  403a9c:	mov	w8, #0x16                  	// #22
  403aa0:	movk	w8, #0x4000, lsl #16
  403aa4:	stur	w8, [x29, #-76]
  403aa8:	stur	wzr, [x29, #-80]
  403aac:	ldur	w0, [x29, #-80]
  403ab0:	bl	402d78 <log_get_max_level_realm@plt>
  403ab4:	ldur	w8, [x29, #-72]
  403ab8:	and	w8, w8, #0x7
  403abc:	cmp	w0, w8
  403ac0:	b.lt	403af4 <run+0x328>  // b.tstop
  403ac4:	ldur	w8, [x29, #-80]
  403ac8:	ldur	w9, [x29, #-72]
  403acc:	orr	w0, w9, w8, lsl #10
  403ad0:	ldur	w1, [x29, #-76]
  403ad4:	ldr	x2, [sp, #72]
  403ad8:	mov	w3, #0x547                 	// #1351
  403adc:	ldr	x4, [sp, #64]
  403ae0:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  403ae4:	add	x5, x5, #0x592
  403ae8:	bl	402d88 <log_internal_realm@plt>
  403aec:	str	w0, [sp, #12]
  403af0:	b	403b08 <run+0x33c>
  403af4:	ldur	w0, [x29, #-76]
  403af8:	bl	402d98 <abs@plt>
  403afc:	mov	w8, wzr
  403b00:	subs	w8, w8, w0, uxtb
  403b04:	str	w8, [sp, #12]
  403b08:	ldr	w8, [sp, #12]
  403b0c:	stur	w8, [x29, #-84]
  403b10:	ldur	w8, [x29, #-84]
  403b14:	stur	w8, [x29, #-4]
  403b18:	ldur	w0, [x29, #-4]
  403b1c:	ldp	x29, x30, [sp, #176]
  403b20:	add	sp, sp, #0xc0
  403b24:	ret

0000000000403b28 <static_destruct>:
  403b28:	sub	sp, sp, #0x20
  403b2c:	stp	x29, x30, [sp, #16]
  403b30:	add	x29, sp, #0x10
  403b34:	adrp	x8, 41f000 <__FRAME_END__+0x12018>
  403b38:	ldr	x8, [x8, #2968]
  403b3c:	str	x8, [sp]
  403b40:	cbnz	x8, 403b48 <static_destruct+0x20>
  403b44:	b	403b9c <static_destruct+0x74>
  403b48:	ldr	x0, [sp]
  403b4c:	mov	x1, #0x8                   	// #8
  403b50:	bl	40a4e4 <ALIGN_TO>
  403b54:	str	x0, [sp, #8]
  403b58:	ldr	x8, [sp, #8]
  403b5c:	adrp	x9, 41f000 <__FRAME_END__+0x12018>
  403b60:	ldr	x9, [x9, #2976]
  403b64:	cmp	x8, x9
  403b68:	b.cs	403b9c <static_destruct+0x74>  // b.hs, b.nlast
  403b6c:	ldr	x8, [sp, #8]
  403b70:	ldr	x8, [x8, #8]
  403b74:	ldr	x9, [sp, #8]
  403b78:	ldr	x0, [x9]
  403b7c:	blr	x8
  403b80:	ldr	x8, [sp, #8]
  403b84:	add	x8, x8, #0x10
  403b88:	mov	x0, x8
  403b8c:	mov	x1, #0x8                   	// #8
  403b90:	bl	40a4e4 <ALIGN_TO>
  403b94:	str	x0, [sp, #8]
  403b98:	b	403b58 <static_destruct+0x30>
  403b9c:	ldp	x29, x30, [sp, #16]
  403ba0:	add	sp, sp, #0x20
  403ba4:	ret

0000000000403ba8 <parse_config>:
  403ba8:	stp	x29, x30, [sp, #-16]!
  403bac:	mov	x29, sp
  403bb0:	adrp	x0, 40b000 <vacuum_candidate_freep+0x20>
  403bb4:	add	x0, x0, #0x61a
  403bb8:	adrp	x1, 40c000 <_fini+0xb20>
  403bbc:	add	x1, x1, #0xc90
  403bc0:	adrp	x2, 40c000 <_fini+0xb20>
  403bc4:	add	x2, x2, #0xd30
  403bc8:	adrp	x3, 402000 <_init-0xca0>
  403bcc:	add	x3, x3, #0xdb8
  403bd0:	adrp	x4, 40c000 <_fini+0xb20>
  403bd4:	add	x4, x4, #0xb50
  403bd8:	mov	w5, #0x4                   	// #4
  403bdc:	mov	x8, xzr
  403be0:	mov	x6, x8
  403be4:	bl	402dc8 <config_parse_many_nulstr@plt>
  403be8:	ldp	x29, x30, [sp], #16
  403bec:	ret

0000000000403bf0 <coredump_storage_to_string>:
  403bf0:	sub	sp, sp, #0x10
  403bf4:	str	w0, [sp, #4]
  403bf8:	ldr	w8, [sp, #4]
  403bfc:	cmp	w8, #0x0
  403c00:	cset	w8, lt  // lt = tstop
  403c04:	tbnz	w8, #0, 403c14 <coredump_storage_to_string+0x24>
  403c08:	ldr	w8, [sp, #4]
  403c0c:	cmp	w8, #0x3
  403c10:	b.lt	403c20 <coredump_storage_to_string+0x30>  // b.tstop
  403c14:	mov	x8, xzr
  403c18:	str	x8, [sp, #8]
  403c1c:	b	403c40 <coredump_storage_to_string+0x50>
  403c20:	ldrsw	x8, [sp, #4]
  403c24:	mov	x9, #0x8                   	// #8
  403c28:	mul	x8, x9, x8
  403c2c:	adrp	x9, 40c000 <_fini+0xb20>
  403c30:	add	x9, x9, #0xd40
  403c34:	add	x8, x9, x8
  403c38:	ldr	x8, [x8]
  403c3c:	str	x8, [sp, #8]
  403c40:	ldr	x0, [sp, #8]
  403c44:	add	sp, sp, #0x10
  403c48:	ret

0000000000403c4c <yes_no>:
  403c4c:	sub	sp, sp, #0x10
  403c50:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  403c54:	add	x8, x8, #0x74c
  403c58:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  403c5c:	add	x9, x9, #0x750
  403c60:	and	w10, w0, #0x1
  403c64:	strb	w10, [sp, #15]
  403c68:	ldrb	w10, [sp, #15]
  403c6c:	tst	w10, #0x1
  403c70:	csel	x0, x8, x9, ne  // ne = any
  403c74:	add	sp, sp, #0x10
  403c78:	ret

0000000000403c7c <streq_ptr>:
  403c7c:	sub	sp, sp, #0x20
  403c80:	stp	x29, x30, [sp, #16]
  403c84:	add	x29, sp, #0x10
  403c88:	str	x0, [sp, #8]
  403c8c:	str	x1, [sp]
  403c90:	ldr	x0, [sp, #8]
  403c94:	ldr	x1, [sp]
  403c98:	bl	402dd8 <strcmp_ptr@plt>
  403c9c:	cmp	w0, #0x0
  403ca0:	cset	w8, eq  // eq = none
  403ca4:	and	w0, w8, #0x1
  403ca8:	ldp	x29, x30, [sp, #16]
  403cac:	add	sp, sp, #0x20
  403cb0:	ret

0000000000403cb4 <process_backtrace>:
  403cb4:	stp	x29, x30, [sp, #-32]!
  403cb8:	stp	x28, x19, [sp, #16]
  403cbc:	mov	x29, sp
  403cc0:	sub	sp, sp, #0x220
  403cc4:	mov	x19, sp
  403cc8:	mov	x2, #0x58                  	// #88
  403ccc:	mov	x8, #0x88                  	// #136
  403cd0:	mov	w9, #0x7                   	// #7
  403cd4:	mov	w10, wzr
  403cd8:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  403cdc:	add	x11, x11, #0x500
  403ce0:	add	x11, x11, #0x3
  403ce4:	adrp	x12, 40b000 <vacuum_candidate_freep+0x20>
  403ce8:	add	x12, x12, #0x753
  403cec:	sub	x13, x29, #0x68
  403cf0:	add	x14, x19, #0x110
  403cf4:	stur	w0, [x29, #-8]
  403cf8:	stur	x1, [x29, #-16]
  403cfc:	mov	x0, x13
  403d00:	mov	w3, w10
  403d04:	mov	w1, w3
  403d08:	str	x8, [x19, #64]
  403d0c:	str	w9, [x19, #60]
  403d10:	str	w10, [x19, #56]
  403d14:	str	x11, [x19, #48]
  403d18:	str	x12, [x19, #40]
  403d1c:	str	x14, [x19, #32]
  403d20:	bl	402de8 <memset@plt>
  403d24:	ldr	x0, [x19, #32]
  403d28:	ldr	w9, [x19, #56]
  403d2c:	mov	w1, w9
  403d30:	ldr	x2, [x19, #64]
  403d34:	bl	402de8 <memset@plt>
  403d38:	ldr	w9, [x19, #60]
  403d3c:	str	w9, [x19, #268]
  403d40:	str	wzr, [x19, #264]
  403d44:	str	wzr, [x19, #260]
  403d48:	ldr	w0, [x19, #260]
  403d4c:	bl	402d78 <log_get_max_level_realm@plt>
  403d50:	ldr	w9, [x19, #268]
  403d54:	and	w9, w9, #0x7
  403d58:	cmp	w0, w9
  403d5c:	b.lt	403d90 <process_backtrace+0xdc>  // b.tstop
  403d60:	ldr	w8, [x19, #260]
  403d64:	ldr	w9, [x19, #268]
  403d68:	orr	w0, w9, w8, lsl #10
  403d6c:	ldr	w1, [x19, #264]
  403d70:	ldr	x2, [x19, #48]
  403d74:	mov	w3, #0x4e7                 	// #1255
  403d78:	ldr	x4, [x19, #40]
  403d7c:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  403d80:	add	x5, x5, #0x765
  403d84:	bl	402d88 <log_internal_realm@plt>
  403d88:	str	w0, [x19, #28]
  403d8c:	b	403da4 <process_backtrace+0xf0>
  403d90:	ldr	w0, [x19, #264]
  403d94:	bl	402d98 <abs@plt>
  403d98:	mov	w8, wzr
  403d9c:	subs	w8, w8, w0, uxtb
  403da0:	str	w8, [x19, #28]
  403da4:	ldr	w8, [x19, #28]
  403da8:	str	w8, [x19, #256]
  403dac:	bl	402df8 <iovw_new@plt>
  403db0:	stur	x0, [x29, #-112]
  403db4:	ldur	x9, [x29, #-112]
  403db8:	cbnz	x9, 403de4 <process_backtrace+0x130>
  403dbc:	mov	w8, wzr
  403dc0:	mov	w0, w8
  403dc4:	ldr	x1, [x19, #48]
  403dc8:	mov	w2, #0x4eb                 	// #1259
  403dcc:	ldr	x3, [x19, #40]
  403dd0:	bl	402e08 <log_oom_internal@plt>
  403dd4:	stur	w0, [x29, #-4]
  403dd8:	mov	w8, #0x1                   	// #1
  403ddc:	str	w8, [x19, #252]
  403de0:	b	404394 <process_backtrace+0x6e0>
  403de4:	ldur	x0, [x29, #-112]
  403de8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  403dec:	add	x1, x1, #0x786
  403df0:	adrp	x2, 40b000 <vacuum_candidate_freep+0x20>
  403df4:	add	x2, x2, #0x792
  403df8:	bl	402e18 <iovw_put_string_field@plt>
  403dfc:	ldur	x8, [x29, #-112]
  403e00:	mov	x0, x8
  403e04:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  403e08:	add	x1, x1, #0x7b3
  403e0c:	adrp	x2, 40b000 <vacuum_candidate_freep+0x20>
  403e10:	add	x2, x2, #0x7bd
  403e14:	bl	402e18 <iovw_put_string_field@plt>
  403e18:	ldur	x8, [x29, #-112]
  403e1c:	ldur	w9, [x29, #-8]
  403e20:	subs	w2, w9, #0x2
  403e24:	ldur	x10, [x29, #-16]
  403e28:	add	x3, x10, #0x10
  403e2c:	mov	x0, x8
  403e30:	sub	x1, x29, #0x68
  403e34:	bl	404f9c <gather_pid_metadata_from_argv>
  403e38:	stur	w0, [x29, #-132]
  403e3c:	ldur	w9, [x29, #-132]
  403e40:	cmp	w9, #0x0
  403e44:	cset	w9, ge  // ge = tcont
  403e48:	tbnz	w9, #0, 403e50 <process_backtrace+0x19c>
  403e4c:	b	404364 <process_backtrace+0x6b0>
  403e50:	ldur	x0, [x29, #-112]
  403e54:	sub	x1, x29, #0x68
  403e58:	bl	40523c <gather_pid_metadata>
  403e5c:	stur	w0, [x29, #-132]
  403e60:	ldur	w8, [x29, #-132]
  403e64:	cmp	w8, #0x0
  403e68:	cset	w8, ge  // ge = tcont
  403e6c:	tbnz	w8, #0, 403e74 <process_backtrace+0x1c0>
  403e70:	b	404364 <process_backtrace+0x6b0>
  403e74:	add	x0, x19, #0x110
  403e78:	bl	402e28 <journal_importer_process_data@plt>
  403e7c:	stur	w0, [x29, #-132]
  403e80:	ldur	w8, [x29, #-132]
  403e84:	cmp	w8, #0x0
  403e88:	cset	w8, ge  // ge = tcont
  403e8c:	tbnz	w8, #0, 403f0c <process_backtrace+0x258>
  403e90:	mov	w8, #0x3                   	// #3
  403e94:	str	w8, [x19, #248]
  403e98:	ldur	w8, [x29, #-132]
  403e9c:	str	w8, [x19, #244]
  403ea0:	str	wzr, [x19, #240]
  403ea4:	ldr	w0, [x19, #240]
  403ea8:	bl	402d78 <log_get_max_level_realm@plt>
  403eac:	ldr	w8, [x19, #248]
  403eb0:	and	w8, w8, #0x7
  403eb4:	cmp	w0, w8
  403eb8:	b.lt	403eec <process_backtrace+0x238>  // b.tstop
  403ebc:	ldr	w8, [x19, #240]
  403ec0:	ldr	w9, [x19, #248]
  403ec4:	orr	w0, w9, w8, lsl #10
  403ec8:	ldr	w1, [x19, #244]
  403ecc:	ldr	x2, [x19, #48]
  403ed0:	mov	w3, #0x4fe                 	// #1278
  403ed4:	ldr	x4, [x19, #40]
  403ed8:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  403edc:	add	x5, x5, #0x7bf
  403ee0:	bl	402d88 <log_internal_realm@plt>
  403ee4:	str	w0, [x19, #24]
  403ee8:	b	403f00 <process_backtrace+0x24c>
  403eec:	ldr	w0, [x19, #244]
  403ef0:	bl	402d98 <abs@plt>
  403ef4:	mov	w8, wzr
  403ef8:	subs	w8, w8, w0, uxtb
  403efc:	str	w8, [x19, #24]
  403f00:	ldr	w8, [x19, #24]
  403f04:	str	w8, [x19, #236]
  403f08:	b	404364 <process_backtrace+0x6b0>
  403f0c:	ldur	w8, [x29, #-132]
  403f10:	cmp	w8, #0x1
  403f14:	b.eq	403f28 <process_backtrace+0x274>  // b.none
  403f18:	add	x0, x19, #0x110
  403f1c:	bl	402e38 <journal_importer_eof@plt>
  403f20:	tbnz	w0, #0, 403f28 <process_backtrace+0x274>
  403f24:	b	403f2c <process_backtrace+0x278>
  403f28:	b	403f30 <process_backtrace+0x27c>
  403f2c:	b	403e74 <process_backtrace+0x1c0>
  403f30:	add	x0, x19, #0x110
  403f34:	bl	402e38 <journal_importer_eof@plt>
  403f38:	tbnz	w0, #0, 403f40 <process_backtrace+0x28c>
  403f3c:	b	404254 <process_backtrace+0x5a0>
  403f40:	mov	w8, #0x4                   	// #4
  403f44:	str	w8, [x19, #232]
  403f48:	str	wzr, [x19, #228]
  403f4c:	str	wzr, [x19, #224]
  403f50:	ldr	w0, [x19, #224]
  403f54:	bl	402d78 <log_get_max_level_realm@plt>
  403f58:	ldr	w8, [x19, #232]
  403f5c:	and	w8, w8, #0x7
  403f60:	cmp	w0, w8
  403f64:	b.lt	403f98 <process_backtrace+0x2e4>  // b.tstop
  403f68:	ldr	w8, [x19, #224]
  403f6c:	ldr	w9, [x19, #232]
  403f70:	orr	w0, w9, w8, lsl #10
  403f74:	ldr	w1, [x19, #228]
  403f78:	ldr	x2, [x19, #48]
  403f7c:	mov	w3, #0x507                 	// #1287
  403f80:	ldr	x4, [x19, #40]
  403f84:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  403f88:	add	x5, x5, #0x7ea
  403f8c:	bl	402d88 <log_internal_realm@plt>
  403f90:	str	w0, [x19, #20]
  403f94:	b	403fac <process_backtrace+0x2f8>
  403f98:	ldr	w0, [x19, #228]
  403f9c:	bl	402d98 <abs@plt>
  403fa0:	mov	w8, wzr
  403fa4:	subs	w8, w8, w0, uxtb
  403fa8:	str	w8, [x19, #20]
  403fac:	ldr	w8, [x19, #20]
  403fb0:	str	w8, [x19, #220]
  403fb4:	add	x9, x19, #0x98
  403fb8:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  403fbc:	add	x10, x10, #0x83b
  403fc0:	str	x10, [x19, #152]
  403fc4:	sub	x10, x29, #0x68
  403fc8:	ldur	x11, [x29, #-104]
  403fcc:	str	x11, [x9, #8]
  403fd0:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  403fd4:	add	x11, x11, #0x844
  403fd8:	str	x11, [x9, #16]
  403fdc:	ldr	x11, [x10, #56]
  403fe0:	str	x11, [x9, #24]
  403fe4:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  403fe8:	add	x11, x11, #0x847
  403fec:	str	x11, [x9, #32]
  403ff0:	ldr	x11, [x10, #8]
  403ff4:	str	x11, [x9, #40]
  403ff8:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  403ffc:	add	x11, x11, #0x852
  404000:	str	x11, [x9, #48]
  404004:	ldr	x10, [x10, #24]
  404008:	str	x10, [x9, #56]
  40400c:	str	xzr, [x19, #128]
  404010:	str	xzr, [x19, #120]
  404014:	ldr	x8, [x19, #120]
  404018:	mov	w9, #0x0                   	// #0
  40401c:	cmp	x8, #0x8
  404020:	str	w9, [x19, #16]
  404024:	b.cs	40404c <process_backtrace+0x398>  // b.hs, b.nlast
  404028:	ldr	x8, [x19, #120]
  40402c:	mov	x9, #0x8                   	// #8
  404030:	mul	x8, x9, x8
  404034:	add	x9, x19, #0x98
  404038:	add	x8, x9, x8
  40403c:	ldr	x8, [x8]
  404040:	cmp	x8, #0x0
  404044:	cset	w10, ne  // ne = any
  404048:	str	w10, [x19, #16]
  40404c:	ldr	w8, [x19, #16]
  404050:	tbnz	w8, #0, 404058 <process_backtrace+0x3a4>
  404054:	b	404090 <process_backtrace+0x3dc>
  404058:	ldr	x8, [x19, #120]
  40405c:	mov	x9, #0x8                   	// #8
  404060:	mul	x8, x9, x8
  404064:	add	x9, x19, #0x98
  404068:	add	x8, x9, x8
  40406c:	ldr	x0, [x8]
  404070:	bl	402e48 <strlen@plt>
  404074:	ldr	x8, [x19, #128]
  404078:	add	x8, x8, x0
  40407c:	str	x8, [x19, #128]
  404080:	ldr	x8, [x19, #120]
  404084:	add	x8, x8, #0x1
  404088:	str	x8, [x19, #120]
  40408c:	b	404014 <process_backtrace+0x360>
  404090:	ldr	x8, [x19, #128]
  404094:	add	x8, x8, #0x1
  404098:	str	x8, [x19, #112]
  40409c:	ldr	x1, [x19, #112]
  4040a0:	mov	x0, #0x1                   	// #1
  4040a4:	bl	405e84 <size_multiply_overflow>
  4040a8:	mov	w8, #0x1                   	// #1
  4040ac:	eor	w9, w0, #0x1
  4040b0:	eor	w9, w9, w8
  4040b4:	eor	w9, w9, w8
  4040b8:	eor	w8, w9, w8
  4040bc:	and	w8, w8, #0x1
  4040c0:	mov	w1, w8
  4040c4:	sxtw	x10, w1
  4040c8:	cbz	x10, 4040f0 <process_backtrace+0x43c>
  4040cc:	mov	w8, wzr
  4040d0:	mov	w0, w8
  4040d4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4040d8:	add	x1, x1, #0x860
  4040dc:	ldr	x2, [x19, #48]
  4040e0:	mov	w3, #0x50c                 	// #1292
  4040e4:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  4040e8:	add	x4, x4, #0x88b
  4040ec:	bl	402e58 <log_assert_failed_realm@plt>
  4040f0:	ldr	x8, [x19, #112]
  4040f4:	mov	x9, #0x1                   	// #1
  4040f8:	mul	x8, x9, x8
  4040fc:	cmp	x8, #0x400, lsl #12
  404100:	cset	w10, ls  // ls = plast
  404104:	mov	w11, #0x1                   	// #1
  404108:	eor	w10, w10, #0x1
  40410c:	eor	w10, w10, w11
  404110:	eor	w10, w10, w11
  404114:	and	w10, w10, #0x1
  404118:	mov	w0, w10
  40411c:	sxtw	x8, w0
  404120:	cbz	x8, 404148 <process_backtrace+0x494>
  404124:	mov	w8, wzr
  404128:	mov	w0, w8
  40412c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404130:	add	x1, x1, #0x8af
  404134:	ldr	x2, [x19, #48]
  404138:	mov	w3, #0x50c                 	// #1292
  40413c:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  404140:	add	x4, x4, #0x88b
  404144:	bl	402e58 <log_assert_failed_realm@plt>
  404148:	ldr	x8, [x19, #112]
  40414c:	mov	x9, #0x1                   	// #1
  404150:	mul	x8, x9, x8
  404154:	mul	x8, x8, x9
  404158:	add	x8, x8, #0xf
  40415c:	and	x8, x8, #0xfffffffffffffff0
  404160:	mov	x9, sp
  404164:	subs	x8, x9, x8
  404168:	mov	sp, x8
  40416c:	str	x8, [x19, #104]
  404170:	ldr	x8, [x19, #104]
  404174:	str	x8, [x19, #144]
  404178:	str	x8, [x19, #136]
  40417c:	str	xzr, [x19, #120]
  404180:	ldr	x8, [x19, #120]
  404184:	mov	w9, #0x0                   	// #0
  404188:	cmp	x8, #0x8
  40418c:	str	w9, [x19, #12]
  404190:	b.cs	4041b8 <process_backtrace+0x504>  // b.hs, b.nlast
  404194:	ldr	x8, [x19, #120]
  404198:	mov	x9, #0x8                   	// #8
  40419c:	mul	x8, x9, x8
  4041a0:	add	x9, x19, #0x98
  4041a4:	add	x8, x9, x8
  4041a8:	ldr	x8, [x8]
  4041ac:	cmp	x8, #0x0
  4041b0:	cset	w10, ne  // ne = any
  4041b4:	str	w10, [x19, #12]
  4041b8:	ldr	w8, [x19, #12]
  4041bc:	tbnz	w8, #0, 4041c4 <process_backtrace+0x510>
  4041c0:	b	4041f8 <process_backtrace+0x544>
  4041c4:	ldr	x0, [x19, #136]
  4041c8:	ldr	x8, [x19, #120]
  4041cc:	mov	x9, #0x8                   	// #8
  4041d0:	mul	x8, x9, x8
  4041d4:	add	x9, x19, #0x98
  4041d8:	add	x8, x9, x8
  4041dc:	ldr	x1, [x8]
  4041e0:	bl	402e68 <stpcpy@plt>
  4041e4:	str	x0, [x19, #136]
  4041e8:	ldr	x8, [x19, #120]
  4041ec:	add	x8, x8, #0x1
  4041f0:	str	x8, [x19, #120]
  4041f4:	b	404180 <process_backtrace+0x4cc>
  4041f8:	ldr	x8, [x19, #136]
  4041fc:	mov	w9, #0x0                   	// #0
  404200:	strb	w9, [x8]
  404204:	ldr	x8, [x19, #144]
  404208:	str	x8, [x19, #96]
  40420c:	ldr	x8, [x19, #96]
  404210:	stur	x8, [x29, #-120]
  404214:	ldur	x0, [x29, #-112]
  404218:	ldur	x2, [x29, #-120]
  40421c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404220:	add	x1, x1, #0x8ce
  404224:	bl	402e18 <iovw_put_string_field@plt>
  404228:	stur	w0, [x29, #-132]
  40422c:	ldur	w9, [x29, #-132]
  404230:	cmp	w9, #0x0
  404234:	cset	w9, ge  // ge = tcont
  404238:	tbnz	w9, #0, 404250 <process_backtrace+0x59c>
  40423c:	ldur	w8, [x29, #-132]
  404240:	stur	w8, [x29, #-4]
  404244:	mov	w8, #0x1                   	// #1
  404248:	str	w8, [x19, #252]
  40424c:	b	404394 <process_backtrace+0x6e0>
  404250:	b	4042ac <process_backtrace+0x5f8>
  404254:	stur	xzr, [x29, #-128]
  404258:	ldur	x8, [x29, #-128]
  40425c:	ldr	x9, [x19, #352]
  404260:	cmp	x8, x9
  404264:	b.cs	4042ac <process_backtrace+0x5f8>  // b.hs, b.nlast
  404268:	add	x8, x19, #0x110
  40426c:	ldr	x8, [x8, #72]
  404270:	ldur	x9, [x29, #-128]
  404274:	mov	x10, #0x10                  	// #16
  404278:	mul	x9, x10, x9
  40427c:	add	x8, x8, x9
  404280:	str	x8, [x19, #88]
  404284:	ldur	x0, [x29, #-112]
  404288:	ldr	x8, [x19, #88]
  40428c:	ldr	x1, [x8]
  404290:	ldr	x8, [x19, #88]
  404294:	ldr	x2, [x8, #8]
  404298:	bl	402e78 <iovw_put@plt>
  40429c:	ldur	x8, [x29, #-128]
  4042a0:	add	x8, x8, #0x1
  4042a4:	stur	x8, [x29, #-128]
  4042a8:	b	404258 <process_backtrace+0x5a4>
  4042ac:	ldur	x8, [x29, #-112]
  4042b0:	ldr	x3, [x8]
  4042b4:	ldur	x8, [x29, #-112]
  4042b8:	ldr	x8, [x8, #8]
  4042bc:	adrp	x0, 40b000 <vacuum_candidate_freep+0x20>
  4042c0:	add	x0, x0, #0x8d7
  4042c4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4042c8:	add	x1, x1, #0x8fc
  4042cc:	ldr	x2, [x19, #40]
  4042d0:	mov	w4, w8
  4042d4:	bl	402e88 <sd_journal_sendv_with_location@plt>
  4042d8:	stur	w0, [x29, #-132]
  4042dc:	ldur	w8, [x29, #-132]
  4042e0:	cmp	w8, #0x0
  4042e4:	cset	w8, ge  // ge = tcont
  4042e8:	tbnz	w8, #0, 404364 <process_backtrace+0x6b0>
  4042ec:	mov	w8, #0x3                   	// #3
  4042f0:	str	w8, [x19, #84]
  4042f4:	ldur	w8, [x29, #-132]
  4042f8:	str	w8, [x19, #80]
  4042fc:	str	wzr, [x19, #76]
  404300:	ldr	w0, [x19, #76]
  404304:	bl	402d78 <log_get_max_level_realm@plt>
  404308:	ldr	w8, [x19, #84]
  40430c:	and	w8, w8, #0x7
  404310:	cmp	w0, w8
  404314:	b.lt	404348 <process_backtrace+0x694>  // b.tstop
  404318:	ldr	w8, [x19, #76]
  40431c:	ldr	w9, [x19, #84]
  404320:	orr	w0, w9, w8, lsl #10
  404324:	ldr	w1, [x19, #80]
  404328:	ldr	x2, [x19, #48]
  40432c:	mov	w3, #0x51e                 	// #1310
  404330:	ldr	x4, [x19, #40]
  404334:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  404338:	add	x5, x5, #0x90b
  40433c:	bl	402d88 <log_internal_realm@plt>
  404340:	str	w0, [x19, #8]
  404344:	b	40435c <process_backtrace+0x6a8>
  404348:	ldr	w0, [x19, #80]
  40434c:	bl	402d98 <abs@plt>
  404350:	mov	w8, wzr
  404354:	subs	w8, w8, w0, uxtb
  404358:	str	w8, [x19, #8]
  40435c:	ldr	w8, [x19, #8]
  404360:	str	w8, [x19, #72]
  404364:	ldr	x8, [x19, #352]
  404368:	ldur	x9, [x29, #-112]
  40436c:	ldr	x10, [x9, #8]
  404370:	subs	x8, x10, x8
  404374:	str	x8, [x9, #8]
  404378:	ldur	x0, [x29, #-112]
  40437c:	bl	402e98 <iovw_free_free@plt>
  404380:	stur	x0, [x29, #-112]
  404384:	ldur	w11, [x29, #-132]
  404388:	stur	w11, [x29, #-4]
  40438c:	mov	w11, #0x1                   	// #1
  404390:	str	w11, [x19, #252]
  404394:	add	x0, x19, #0x110
  404398:	bl	402ea8 <journal_importer_cleanup@plt>
  40439c:	ldur	w0, [x29, #-4]
  4043a0:	mov	sp, x29
  4043a4:	ldp	x28, x19, [sp, #16]
  4043a8:	ldp	x29, x30, [sp], #32
  4043ac:	ret

00000000004043b0 <process_kernel>:
  4043b0:	sub	sp, sp, #0xd0
  4043b4:	stp	x29, x30, [sp, #192]
  4043b8:	add	x29, sp, #0xc0
  4043bc:	sub	x8, x29, #0x10
  4043c0:	mov	x2, #0x58                  	// #88
  4043c4:	mov	w9, #0x7                   	// #7
  4043c8:	mov	w10, wzr
  4043cc:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  4043d0:	add	x11, x11, #0x500
  4043d4:	add	x11, x11, #0x3
  4043d8:	adrp	x12, 40b000 <vacuum_candidate_freep+0x20>
  4043dc:	add	x12, x12, #0xed8
  4043e0:	add	x13, sp, #0x58
  4043e4:	stur	w0, [x29, #-8]
  4043e8:	str	x1, [x8]
  4043ec:	mov	x0, x13
  4043f0:	mov	w1, w10
  4043f4:	str	x8, [sp, #32]
  4043f8:	str	w9, [sp, #28]
  4043fc:	str	x11, [sp, #16]
  404400:	str	x12, [sp, #8]
  404404:	bl	402de8 <memset@plt>
  404408:	ldr	w9, [sp, #28]
  40440c:	str	w9, [sp, #72]
  404410:	str	wzr, [sp, #68]
  404414:	str	wzr, [sp, #64]
  404418:	ldr	w0, [sp, #64]
  40441c:	bl	402d78 <log_get_max_level_realm@plt>
  404420:	ldr	w9, [sp, #72]
  404424:	and	w9, w9, #0x7
  404428:	cmp	w0, w9
  40442c:	b.lt	404460 <process_kernel+0xb0>  // b.tstop
  404430:	ldr	w8, [sp, #64]
  404434:	ldr	w9, [sp, #72]
  404438:	orr	w0, w9, w8, lsl #10
  40443c:	ldr	w1, [sp, #68]
  404440:	ldr	x2, [sp, #16]
  404444:	mov	w3, #0x4b1                 	// #1201
  404448:	ldr	x4, [sp, #8]
  40444c:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  404450:	add	x5, x5, #0xee7
  404454:	bl	402d88 <log_internal_realm@plt>
  404458:	str	w0, [sp, #4]
  40445c:	b	404474 <process_kernel+0xc4>
  404460:	ldr	w0, [sp, #68]
  404464:	bl	402d98 <abs@plt>
  404468:	mov	w8, wzr
  40446c:	subs	w8, w8, w0, uxtb
  404470:	str	w8, [sp, #4]
  404474:	ldr	w8, [sp, #4]
  404478:	str	w8, [sp, #60]
  40447c:	bl	402df8 <iovw_new@plt>
  404480:	str	x0, [sp, #80]
  404484:	ldr	x9, [sp, #80]
  404488:	cbnz	x9, 4044ac <process_kernel+0xfc>
  40448c:	mov	w8, wzr
  404490:	mov	w0, w8
  404494:	ldr	x1, [sp, #16]
  404498:	mov	w2, #0x4b5                 	// #1205
  40449c:	ldr	x3, [sp, #8]
  4044a0:	bl	402e08 <log_oom_internal@plt>
  4044a4:	stur	w0, [x29, #-4]
  4044a8:	b	404640 <process_kernel+0x290>
  4044ac:	ldr	x0, [sp, #80]
  4044b0:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4044b4:	add	x1, x1, #0x786
  4044b8:	adrp	x2, 40b000 <vacuum_candidate_freep+0x20>
  4044bc:	add	x2, x2, #0xf17
  4044c0:	bl	402e18 <iovw_put_string_field@plt>
  4044c4:	ldr	x8, [sp, #80]
  4044c8:	mov	x0, x8
  4044cc:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4044d0:	add	x1, x1, #0x7b3
  4044d4:	adrp	x2, 40b000 <vacuum_candidate_freep+0x20>
  4044d8:	add	x2, x2, #0x7bd
  4044dc:	bl	402e18 <iovw_put_string_field@plt>
  4044e0:	ldr	x8, [sp, #80]
  4044e4:	ldur	w9, [x29, #-8]
  4044e8:	subs	w2, w9, #0x1
  4044ec:	ldr	x10, [sp, #32]
  4044f0:	ldr	x11, [x10]
  4044f4:	add	x3, x11, #0x8
  4044f8:	mov	x0, x8
  4044fc:	add	x1, sp, #0x58
  404500:	bl	404f9c <gather_pid_metadata_from_argv>
  404504:	str	w0, [sp, #76]
  404508:	ldr	w9, [sp, #76]
  40450c:	cmp	w9, #0x0
  404510:	cset	w9, ge  // ge = tcont
  404514:	tbnz	w9, #0, 40451c <process_kernel+0x16c>
  404518:	b	40462c <process_kernel+0x27c>
  40451c:	ldr	x0, [sp, #80]
  404520:	add	x1, sp, #0x58
  404524:	bl	40523c <gather_pid_metadata>
  404528:	str	w0, [sp, #76]
  40452c:	ldr	w8, [sp, #76]
  404530:	cmp	w8, #0x0
  404534:	cset	w8, ge  // ge = tcont
  404538:	tbnz	w8, #0, 404540 <process_kernel+0x190>
  40453c:	b	40462c <process_kernel+0x27c>
  404540:	add	x8, sp, #0x58
  404544:	ldrb	w9, [x8, #85]
  404548:	tbnz	w9, #0, 404558 <process_kernel+0x1a8>
  40454c:	mov	w0, #0x4                   	// #4
  404550:	bl	402d48 <log_set_target@plt>
  404554:	bl	402d58 <log_open@plt>
  404558:	add	x8, sp, #0x58
  40455c:	ldrb	w9, [x8, #84]
  404560:	tbnz	w9, #0, 404568 <process_kernel+0x1b8>
  404564:	b	4045e0 <process_kernel+0x230>
  404568:	mov	w8, #0x5                   	// #5
  40456c:	str	w8, [sp, #56]
  404570:	str	wzr, [sp, #52]
  404574:	str	wzr, [sp, #48]
  404578:	ldr	w0, [sp, #48]
  40457c:	bl	402d78 <log_get_max_level_realm@plt>
  404580:	ldr	w8, [sp, #56]
  404584:	and	w8, w8, #0x7
  404588:	cmp	w0, w8
  40458c:	b.lt	4045c0 <process_kernel+0x210>  // b.tstop
  404590:	ldr	w8, [sp, #48]
  404594:	ldr	w9, [sp, #56]
  404598:	orr	w0, w9, w8, lsl #10
  40459c:	ldr	w1, [sp, #52]
  4045a0:	ldr	x2, [sp, #16]
  4045a4:	mov	w3, #0x4d1                 	// #1233
  4045a8:	ldr	x4, [sp, #8]
  4045ac:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  4045b0:	add	x5, x5, #0xf38
  4045b4:	bl	402d88 <log_internal_realm@plt>
  4045b8:	str	w0, [sp]
  4045bc:	b	4045d4 <process_kernel+0x224>
  4045c0:	ldr	w0, [sp, #52]
  4045c4:	bl	402d98 <abs@plt>
  4045c8:	mov	w8, wzr
  4045cc:	subs	w8, w8, w0, uxtb
  4045d0:	str	w8, [sp]
  4045d4:	ldr	w8, [sp]
  4045d8:	str	w8, [sp, #44]
  4045dc:	bl	402eb8 <disable_coredumps@plt>
  4045e0:	add	x8, sp, #0x58
  4045e4:	ldrb	w9, [x8, #85]
  4045e8:	tbnz	w9, #0, 4045fc <process_kernel+0x24c>
  4045ec:	add	x8, sp, #0x58
  4045f0:	ldrb	w9, [x8, #84]
  4045f4:	tbnz	w9, #0, 4045fc <process_kernel+0x24c>
  4045f8:	b	404618 <process_kernel+0x268>
  4045fc:	ldr	x1, [sp, #80]
  404600:	add	x0, sp, #0x58
  404604:	mov	w8, wzr
  404608:	mov	w2, w8
  40460c:	bl	40701c <submit_coredump>
  404610:	str	w0, [sp, #76]
  404614:	b	40462c <process_kernel+0x27c>
  404618:	ldr	x0, [sp, #80]
  40461c:	mov	w8, wzr
  404620:	mov	w1, w8
  404624:	bl	407c08 <send_iovec>
  404628:	str	w0, [sp, #76]
  40462c:	ldr	x0, [sp, #80]
  404630:	bl	402e98 <iovw_free_free@plt>
  404634:	str	x0, [sp, #80]
  404638:	ldr	w8, [sp, #76]
  40463c:	stur	w8, [x29, #-4]
  404640:	ldur	w0, [x29, #-4]
  404644:	ldp	x29, x30, [sp, #192]
  404648:	add	sp, sp, #0xd0
  40464c:	ret

0000000000404650 <process_socket>:
  404650:	sub	sp, sp, #0x1c0
  404654:	stp	x29, x30, [sp, #416]
  404658:	str	x28, [sp, #432]
  40465c:	add	x29, sp, #0x1a0
  404660:	mov	w8, #0xffffffff            	// #-1
  404664:	mov	x2, #0x58                  	// #88
  404668:	mov	w9, wzr
  40466c:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  404670:	add	x10, x10, #0x500
  404674:	add	x10, x10, #0x3
  404678:	adrp	x11, 40c000 <_fini+0xb20>
  40467c:	add	x11, x11, #0x92d
  404680:	adrp	x12, 40c000 <_fini+0xb20>
  404684:	add	x12, x12, #0x915
  404688:	sub	x13, x29, #0x60
  40468c:	stur	w0, [x29, #-4]
  404690:	stur	w8, [x29, #-8]
  404694:	mov	x0, x13
  404698:	mov	w1, w9
  40469c:	str	x10, [sp, #64]
  4046a0:	str	x11, [sp, #56]
  4046a4:	str	x12, [sp, #48]
  4046a8:	bl	402de8 <memset@plt>
  4046ac:	stur	xzr, [x29, #-120]
  4046b0:	stur	xzr, [x29, #-112]
  4046b4:	stur	xzr, [x29, #-104]
  4046b8:	ldur	w8, [x29, #-4]
  4046bc:	cmp	w8, #0x0
  4046c0:	cset	w8, ge  // ge = tcont
  4046c4:	mov	w9, #0x1                   	// #1
  4046c8:	eor	w8, w8, #0x1
  4046cc:	eor	w8, w8, w9
  4046d0:	eor	w8, w8, w9
  4046d4:	and	w8, w8, #0x1
  4046d8:	mov	w0, w8
  4046dc:	sxtw	x10, w0
  4046e0:	cbz	x10, 404704 <process_socket+0xb4>
  4046e4:	mov	w8, wzr
  4046e8:	mov	w0, w8
  4046ec:	adrp	x1, 40c000 <_fini+0xb20>
  4046f0:	add	x1, x1, #0x4ba
  4046f4:	ldr	x2, [sp, #64]
  4046f8:	mov	w3, #0x372                 	// #882
  4046fc:	ldr	x4, [sp, #48]
  404700:	bl	402e58 <log_assert_failed_realm@plt>
  404704:	bl	402ec8 <log_setup_service@plt>
  404708:	mov	w8, #0x7                   	// #7
  40470c:	stur	w8, [x29, #-148]
  404710:	stur	wzr, [x29, #-152]
  404714:	stur	wzr, [x29, #-156]
  404718:	ldur	w0, [x29, #-156]
  40471c:	bl	402d78 <log_get_max_level_realm@plt>
  404720:	ldur	w8, [x29, #-148]
  404724:	and	w8, w8, #0x7
  404728:	cmp	w0, w8
  40472c:	b.lt	404760 <process_socket+0x110>  // b.tstop
  404730:	ldur	w8, [x29, #-156]
  404734:	ldur	w9, [x29, #-148]
  404738:	orr	w0, w9, w8, lsl #10
  40473c:	ldur	w1, [x29, #-152]
  404740:	ldr	x2, [sp, #64]
  404744:	mov	w3, #0x376                 	// #886
  404748:	ldr	x4, [sp, #56]
  40474c:	adrp	x5, 40c000 <_fini+0xb20>
  404750:	add	x5, x5, #0x93c
  404754:	bl	402d88 <log_internal_realm@plt>
  404758:	str	w0, [sp, #44]
  40475c:	b	404774 <process_socket+0x124>
  404760:	ldur	w0, [x29, #-152]
  404764:	bl	402d98 <abs@plt>
  404768:	mov	w8, wzr
  40476c:	subs	w8, w8, w0, uxtb
  404770:	str	w8, [sp, #44]
  404774:	ldr	w8, [sp, #44]
  404778:	stur	w8, [x29, #-160]
  40477c:	adrp	x8, 40c000 <_fini+0xb20>
  404780:	add	x8, x8, #0xe78
  404784:	ldr	q0, [x8]
  404788:	sub	x9, x29, #0xc0
  40478c:	stur	q0, [x29, #-192]
  404790:	ldr	x8, [x8, #16]
  404794:	stur	x8, [x29, #-176]
  404798:	add	x8, sp, #0xa8
  40479c:	mov	x10, xzr
  4047a0:	str	x10, [sp, #168]
  4047a4:	str	wzr, [sp, #176]
  4047a8:	str	x10, [x8, #16]
  4047ac:	mov	x10, #0x1                   	// #1
  4047b0:	str	x10, [sp, #192]
  4047b4:	str	x9, [x8, #32]
  4047b8:	mov	x8, #0x18                  	// #24
  4047bc:	str	x8, [sp, #208]
  4047c0:	str	wzr, [sp, #216]
  4047c4:	ldur	w0, [x29, #-4]
  4047c8:	bl	402ed8 <next_datagram_size_fd@plt>
  4047cc:	str	x0, [sp, #152]
  4047d0:	ldr	x8, [sp, #152]
  4047d4:	cmp	x8, #0x0
  4047d8:	cset	w11, ge  // ge = tcont
  4047dc:	tbnz	w11, #0, 404864 <process_socket+0x214>
  4047e0:	mov	w8, #0x3                   	// #3
  4047e4:	str	w8, [sp, #148]
  4047e8:	ldr	x9, [sp, #152]
  4047ec:	str	w9, [sp, #144]
  4047f0:	str	wzr, [sp, #140]
  4047f4:	ldr	w0, [sp, #140]
  4047f8:	bl	402d78 <log_get_max_level_realm@plt>
  4047fc:	ldr	w8, [sp, #148]
  404800:	and	w8, w8, #0x7
  404804:	cmp	w0, w8
  404808:	b.lt	40483c <process_socket+0x1ec>  // b.tstop
  40480c:	ldr	w8, [sp, #140]
  404810:	ldr	w9, [sp, #148]
  404814:	orr	w0, w9, w8, lsl #10
  404818:	ldr	w1, [sp, #144]
  40481c:	ldr	x2, [sp, #64]
  404820:	mov	w3, #0x387                 	// #903
  404824:	ldr	x4, [sp, #56]
  404828:	adrp	x5, 40c000 <_fini+0xb20>
  40482c:	add	x5, x5, #0x965
  404830:	bl	402d88 <log_internal_realm@plt>
  404834:	str	w0, [sp, #40]
  404838:	b	404850 <process_socket+0x200>
  40483c:	ldr	w0, [sp, #144]
  404840:	bl	402d98 <abs@plt>
  404844:	mov	w8, wzr
  404848:	subs	w8, w8, w0, uxtb
  40484c:	str	w8, [sp, #40]
  404850:	ldr	w8, [sp, #40]
  404854:	str	w8, [sp, #136]
  404858:	ldr	w8, [sp, #136]
  40485c:	stur	w8, [x29, #-144]
  404860:	b	404ccc <process_socket+0x67c>
  404864:	ldr	x8, [sp, #152]
  404868:	stur	x8, [x29, #-128]
  40486c:	ldr	x8, [sp, #152]
  404870:	add	x0, x8, #0x1
  404874:	bl	402ee8 <malloc@plt>
  404878:	stur	x0, [x29, #-136]
  40487c:	ldur	x8, [x29, #-136]
  404880:	cbnz	x8, 4048a4 <process_socket+0x254>
  404884:	mov	w8, wzr
  404888:	mov	w0, w8
  40488c:	ldr	x1, [sp, #64]
  404890:	mov	w2, #0x38e                 	// #910
  404894:	ldr	x3, [sp, #56]
  404898:	bl	402e08 <log_oom_internal@plt>
  40489c:	stur	w0, [x29, #-144]
  4048a0:	b	404ccc <process_socket+0x67c>
  4048a4:	add	x8, sp, #0xa8
  4048a8:	sub	x9, x29, #0x88
  4048ac:	str	x9, [x8, #16]
  4048b0:	ldur	w0, [x29, #-4]
  4048b4:	mov	x1, x8
  4048b8:	mov	w2, #0x40000000            	// #1073741824
  4048bc:	bl	402ef8 <recvmsg@plt>
  4048c0:	str	x0, [sp, #160]
  4048c4:	ldr	x8, [sp, #160]
  4048c8:	cmp	x8, #0x0
  4048cc:	cset	w10, ge  // ge = tcont
  4048d0:	tbnz	w10, #0, 404964 <process_socket+0x314>
  4048d4:	ldur	x0, [x29, #-136]
  4048d8:	bl	402f08 <free@plt>
  4048dc:	mov	w8, #0x3                   	// #3
  4048e0:	str	w8, [sp, #132]
  4048e4:	bl	402f18 <__errno_location@plt>
  4048e8:	ldr	w8, [x0]
  4048ec:	str	w8, [sp, #128]
  4048f0:	str	wzr, [sp, #124]
  4048f4:	ldr	w0, [sp, #124]
  4048f8:	bl	402d78 <log_get_max_level_realm@plt>
  4048fc:	ldr	w8, [sp, #132]
  404900:	and	w8, w8, #0x7
  404904:	cmp	w0, w8
  404908:	b.lt	40493c <process_socket+0x2ec>  // b.tstop
  40490c:	ldr	w8, [sp, #124]
  404910:	ldr	w9, [sp, #132]
  404914:	orr	w0, w9, w8, lsl #10
  404918:	ldr	w1, [sp, #128]
  40491c:	ldr	x2, [sp, #64]
  404920:	mov	w3, #0x397                 	// #919
  404924:	ldr	x4, [sp, #56]
  404928:	adrp	x5, 40c000 <_fini+0xb20>
  40492c:	add	x5, x5, #0x993
  404930:	bl	402d88 <log_internal_realm@plt>
  404934:	str	w0, [sp, #36]
  404938:	b	404950 <process_socket+0x300>
  40493c:	ldr	w0, [sp, #128]
  404940:	bl	402d98 <abs@plt>
  404944:	mov	w8, wzr
  404948:	subs	w8, w8, w0, uxtb
  40494c:	str	w8, [sp, #36]
  404950:	ldr	w8, [sp, #36]
  404954:	str	w8, [sp, #120]
  404958:	ldr	w8, [sp, #120]
  40495c:	stur	w8, [x29, #-144]
  404960:	b	404ccc <process_socket+0x67c>
  404964:	ldr	x8, [sp, #160]
  404968:	cbnz	x8, 404b30 <process_socket+0x4e0>
  40496c:	mov	x8, xzr
  404970:	str	x8, [sp, #104]
  404974:	ldur	x0, [x29, #-136]
  404978:	bl	402f08 <free@plt>
  40497c:	ldr	x8, [sp, #208]
  404980:	cmp	x8, #0x10
  404984:	b.cc	404998 <process_socket+0x348>  // b.lo, b.ul, b.last
  404988:	add	x8, sp, #0xa8
  40498c:	ldr	x8, [x8, #32]
  404990:	str	x8, [sp, #24]
  404994:	b	4049a0 <process_socket+0x350>
  404998:	mov	x8, xzr
  40499c:	str	x8, [sp, #24]
  4049a0:	ldr	x8, [sp, #24]
  4049a4:	str	x8, [sp, #112]
  4049a8:	ldr	x8, [sp, #112]
  4049ac:	cbz	x8, 404a4c <process_socket+0x3fc>
  4049b0:	ldr	x8, [sp, #112]
  4049b4:	ldr	w9, [x8, #8]
  4049b8:	cmp	w9, #0x1
  4049bc:	b.ne	404a38 <process_socket+0x3e8>  // b.any
  4049c0:	ldr	x8, [sp, #112]
  4049c4:	ldr	w9, [x8, #12]
  4049c8:	cmp	w9, #0x1
  4049cc:	b.ne	404a38 <process_socket+0x3e8>  // b.any
  4049d0:	ldr	x8, [sp, #112]
  4049d4:	ldr	x8, [x8]
  4049d8:	cmp	x8, #0x14
  4049dc:	b.ne	404a38 <process_socket+0x3e8>  // b.any
  4049e0:	ldr	x8, [sp, #104]
  4049e4:	cmp	x8, #0x0
  4049e8:	cset	w9, ne  // ne = any
  4049ec:	mov	w10, #0x1                   	// #1
  4049f0:	eor	w9, w9, #0x1
  4049f4:	eor	w9, w9, w10
  4049f8:	eor	w9, w9, w10
  4049fc:	eor	w9, w9, w10
  404a00:	and	w9, w9, #0x1
  404a04:	mov	w0, w9
  404a08:	sxtw	x8, w0
  404a0c:	cbz	x8, 404a30 <process_socket+0x3e0>
  404a10:	mov	w8, wzr
  404a14:	mov	w0, w8
  404a18:	adrp	x1, 40c000 <_fini+0xb20>
  404a1c:	add	x1, x1, #0x9b2
  404a20:	ldr	x2, [sp, #64]
  404a24:	mov	w3, #0x3a6                 	// #934
  404a28:	ldr	x4, [sp, #48]
  404a2c:	bl	402e58 <log_assert_failed_realm@plt>
  404a30:	ldr	x8, [sp, #112]
  404a34:	str	x8, [sp, #104]
  404a38:	ldr	x1, [sp, #112]
  404a3c:	add	x0, sp, #0xa8
  404a40:	bl	402f28 <__cmsg_nxthdr@plt>
  404a44:	str	x0, [sp, #112]
  404a48:	b	4049a8 <process_socket+0x358>
  404a4c:	ldr	x8, [sp, #104]
  404a50:	cbnz	x8, 404ad4 <process_socket+0x484>
  404a54:	mov	w8, #0x3                   	// #3
  404a58:	str	w8, [sp, #100]
  404a5c:	str	wzr, [sp, #96]
  404a60:	str	wzr, [sp, #92]
  404a64:	ldr	w0, [sp, #92]
  404a68:	bl	402d78 <log_get_max_level_realm@plt>
  404a6c:	ldr	w8, [sp, #100]
  404a70:	and	w8, w8, #0x7
  404a74:	cmp	w0, w8
  404a78:	b.lt	404aac <process_socket+0x45c>  // b.tstop
  404a7c:	ldr	w8, [sp, #92]
  404a80:	ldr	w9, [sp, #100]
  404a84:	orr	w0, w9, w8, lsl #10
  404a88:	ldr	w1, [sp, #96]
  404a8c:	ldr	x2, [sp, #64]
  404a90:	mov	w3, #0x3ac                 	// #940
  404a94:	ldr	x4, [sp, #56]
  404a98:	adrp	x5, 40c000 <_fini+0xb20>
  404a9c:	add	x5, x5, #0x9b9
  404aa0:	bl	402d88 <log_internal_realm@plt>
  404aa4:	str	w0, [sp, #20]
  404aa8:	b	404ac0 <process_socket+0x470>
  404aac:	ldr	w0, [sp, #96]
  404ab0:	bl	402d98 <abs@plt>
  404ab4:	mov	w8, wzr
  404ab8:	subs	w8, w8, w0, uxtb
  404abc:	str	w8, [sp, #20]
  404ac0:	ldr	w8, [sp, #20]
  404ac4:	str	w8, [sp, #88]
  404ac8:	mov	w8, #0xffffffb6            	// #-74
  404acc:	stur	w8, [x29, #-144]
  404ad0:	b	404ccc <process_socket+0x67c>
  404ad4:	ldur	w8, [x29, #-8]
  404ad8:	cmp	w8, #0x0
  404adc:	cset	w8, lt  // lt = tstop
  404ae0:	mov	w9, #0x1                   	// #1
  404ae4:	eor	w8, w8, #0x1
  404ae8:	eor	w8, w8, w9
  404aec:	eor	w8, w8, w9
  404af0:	and	w8, w8, #0x1
  404af4:	mov	w0, w8
  404af8:	sxtw	x10, w0
  404afc:	cbz	x10, 404b20 <process_socket+0x4d0>
  404b00:	mov	w8, wzr
  404b04:	mov	w0, w8
  404b08:	adrp	x1, 40c000 <_fini+0xb20>
  404b0c:	add	x1, x1, #0x9db
  404b10:	ldr	x2, [sp, #64]
  404b14:	mov	w3, #0x3b1                 	// #945
  404b18:	ldr	x4, [sp, #48]
  404b1c:	bl	402e58 <log_assert_failed_realm@plt>
  404b20:	ldr	x8, [sp, #104]
  404b24:	ldr	w9, [x8, #16]
  404b28:	stur	w9, [x29, #-8]
  404b2c:	b	404b80 <process_socket+0x530>
  404b30:	ldur	x8, [x29, #-136]
  404b34:	ldr	x9, [sp, #160]
  404b38:	add	x8, x8, x9
  404b3c:	mov	w10, #0x0                   	// #0
  404b40:	strb	w10, [x8]
  404b44:	ldr	x8, [sp, #160]
  404b48:	stur	x8, [x29, #-128]
  404b4c:	ldur	x1, [x29, #-136]
  404b50:	ldur	x2, [x29, #-128]
  404b54:	sub	x0, x29, #0x78
  404b58:	bl	402e78 <iovw_put@plt>
  404b5c:	stur	w0, [x29, #-144]
  404b60:	ldur	w10, [x29, #-144]
  404b64:	cmp	w10, #0x0
  404b68:	cset	w10, ge  // ge = tcont
  404b6c:	tbnz	w10, #0, 404b74 <process_socket+0x524>
  404b70:	b	404ccc <process_socket+0x67c>
  404b74:	add	x0, sp, #0xa8
  404b78:	bl	402f38 <cmsg_close_all@plt>
  404b7c:	b	40477c <process_socket+0x12c>
  404b80:	ldur	w8, [x29, #-8]
  404b84:	cmp	w8, #0x0
  404b88:	cset	w8, ge  // ge = tcont
  404b8c:	mov	w9, #0x1                   	// #1
  404b90:	eor	w8, w8, #0x1
  404b94:	eor	w8, w8, w9
  404b98:	eor	w8, w8, w9
  404b9c:	and	w8, w8, #0x1
  404ba0:	mov	w0, w8
  404ba4:	sxtw	x10, w0
  404ba8:	cbz	x10, 404bcc <process_socket+0x57c>
  404bac:	mov	w8, wzr
  404bb0:	mov	w0, w8
  404bb4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404bb8:	add	x1, x1, #0xfbc
  404bbc:	ldr	x2, [sp, #64]
  404bc0:	mov	w3, #0x3c2                 	// #962
  404bc4:	ldr	x4, [sp, #48]
  404bc8:	bl	402e58 <log_assert_failed_realm@plt>
  404bcc:	sub	x0, x29, #0x60
  404bd0:	sub	x1, x29, #0x78
  404bd4:	bl	405f54 <save_context>
  404bd8:	stur	w0, [x29, #-144]
  404bdc:	ldur	w8, [x29, #-144]
  404be0:	cmp	w8, #0x0
  404be4:	cset	w8, ge  // ge = tcont
  404be8:	tbnz	w8, #0, 404bf0 <process_socket+0x5a0>
  404bec:	b	404ccc <process_socket+0x67c>
  404bf0:	stur	wzr, [x29, #-140]
  404bf4:	ldur	w8, [x29, #-140]
  404bf8:	cmp	w8, #0x8
  404bfc:	b.ge	404cb8 <process_socket+0x668>  // b.tcont
  404c00:	ldursw	x8, [x29, #-140]
  404c04:	mov	x9, #0x8                   	// #8
  404c08:	mul	x8, x9, x8
  404c0c:	sub	x9, x29, #0x60
  404c10:	add	x8, x9, x8
  404c14:	ldr	x8, [x8]
  404c18:	cbnz	x8, 404ca8 <process_socket+0x658>
  404c1c:	mov	w8, #0x3                   	// #3
  404c20:	str	w8, [sp, #84]
  404c24:	mov	w8, #0x16                  	// #22
  404c28:	movk	w8, #0x4000, lsl #16
  404c2c:	str	w8, [sp, #80]
  404c30:	str	wzr, [sp, #76]
  404c34:	ldr	w0, [sp, #76]
  404c38:	bl	402d78 <log_get_max_level_realm@plt>
  404c3c:	ldr	w8, [sp, #84]
  404c40:	and	w8, w8, #0x7
  404c44:	cmp	w0, w8
  404c48:	b.lt	404c80 <process_socket+0x630>  // b.tstop
  404c4c:	ldr	w8, [sp, #76]
  404c50:	ldr	w9, [sp, #84]
  404c54:	orr	w0, w9, w8, lsl #10
  404c58:	ldr	w1, [sp, #80]
  404c5c:	ldur	w6, [x29, #-140]
  404c60:	ldr	x2, [sp, #64]
  404c64:	mov	w3, #0x3cd                 	// #973
  404c68:	ldr	x4, [sp, #56]
  404c6c:	adrp	x5, 40c000 <_fini+0xb20>
  404c70:	add	x5, x5, #0x9e8
  404c74:	bl	402d88 <log_internal_realm@plt>
  404c78:	str	w0, [sp, #16]
  404c7c:	b	404c94 <process_socket+0x644>
  404c80:	ldr	w0, [sp, #80]
  404c84:	bl	402d98 <abs@plt>
  404c88:	mov	w8, wzr
  404c8c:	subs	w8, w8, w0, uxtb
  404c90:	str	w8, [sp, #16]
  404c94:	ldr	w8, [sp, #16]
  404c98:	str	w8, [sp, #72]
  404c9c:	ldr	w8, [sp, #72]
  404ca0:	stur	w8, [x29, #-144]
  404ca4:	b	404ccc <process_socket+0x67c>
  404ca8:	ldur	w8, [x29, #-140]
  404cac:	add	w8, w8, #0x1
  404cb0:	stur	w8, [x29, #-140]
  404cb4:	b	404bf4 <process_socket+0x5a4>
  404cb8:	ldur	w2, [x29, #-8]
  404cbc:	sub	x0, x29, #0x60
  404cc0:	sub	x1, x29, #0x78
  404cc4:	bl	40701c <submit_coredump>
  404cc8:	stur	w0, [x29, #-144]
  404ccc:	sub	x0, x29, #0x78
  404cd0:	mov	w8, #0x1                   	// #1
  404cd4:	and	w1, w8, #0x1
  404cd8:	bl	402f48 <iovw_free_contents@plt>
  404cdc:	ldur	w0, [x29, #-144]
  404ce0:	sub	x9, x29, #0x8
  404ce4:	str	w0, [sp, #12]
  404ce8:	mov	x0, x9
  404cec:	bl	406c60 <closep>
  404cf0:	ldr	w0, [sp, #12]
  404cf4:	ldr	x28, [sp, #432]
  404cf8:	ldp	x29, x30, [sp, #416]
  404cfc:	add	sp, sp, #0x1c0
  404d00:	ret

0000000000404d04 <config_parse_coredump_storage>:
  404d04:	sub	sp, sp, #0xb0
  404d08:	stp	x29, x30, [sp, #160]
  404d0c:	add	x29, sp, #0xa0
  404d10:	ldr	x8, [x29, #16]
  404d14:	ldr	x9, [x29, #24]
  404d18:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  404d1c:	add	x10, x10, #0x500
  404d20:	add	x10, x10, #0x3
  404d24:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  404d28:	add	x11, x11, #0x63e
  404d2c:	stur	x0, [x29, #-16]
  404d30:	stur	x1, [x29, #-24]
  404d34:	stur	w2, [x29, #-28]
  404d38:	stur	x3, [x29, #-40]
  404d3c:	stur	w4, [x29, #-44]
  404d40:	stur	x5, [x29, #-56]
  404d44:	stur	w6, [x29, #-60]
  404d48:	stur	x7, [x29, #-72]
  404d4c:	str	x8, [sp, #80]
  404d50:	str	x9, [sp, #72]
  404d54:	ldr	x8, [sp, #80]
  404d58:	str	x8, [sp, #64]
  404d5c:	str	x10, [sp, #40]
  404d60:	str	x11, [sp, #32]
  404d64:	ldur	x8, [x29, #-24]
  404d68:	cmp	x8, #0x0
  404d6c:	cset	w9, ne  // ne = any
  404d70:	mov	w10, #0x1                   	// #1
  404d74:	eor	w9, w9, #0x1
  404d78:	eor	w9, w9, w10
  404d7c:	eor	w9, w9, w10
  404d80:	and	w9, w9, #0x1
  404d84:	mov	w0, w9
  404d88:	sxtw	x8, w0
  404d8c:	cbz	x8, 404db0 <config_parse_coredump_storage+0xac>
  404d90:	mov	w8, wzr
  404d94:	mov	w0, w8
  404d98:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404d9c:	add	x1, x1, #0x635
  404da0:	ldr	x2, [sp, #40]
  404da4:	mov	w3, #0x88                  	// #136
  404da8:	ldr	x4, [sp, #32]
  404dac:	bl	402e58 <log_assert_failed_realm@plt>
  404db0:	ldur	x8, [x29, #-56]
  404db4:	cmp	x8, #0x0
  404db8:	cset	w9, ne  // ne = any
  404dbc:	mov	w10, #0x1                   	// #1
  404dc0:	eor	w9, w9, #0x1
  404dc4:	eor	w9, w9, w10
  404dc8:	eor	w9, w9, w10
  404dcc:	and	w9, w9, #0x1
  404dd0:	mov	w0, w9
  404dd4:	sxtw	x8, w0
  404dd8:	cbz	x8, 404dfc <config_parse_coredump_storage+0xf8>
  404ddc:	mov	w8, wzr
  404de0:	mov	w0, w8
  404de4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404de8:	add	x1, x1, #0x6d7
  404dec:	ldr	x2, [sp, #40]
  404df0:	mov	w3, #0x88                  	// #136
  404df4:	ldr	x4, [sp, #32]
  404df8:	bl	402e58 <log_assert_failed_realm@plt>
  404dfc:	ldur	x8, [x29, #-72]
  404e00:	cmp	x8, #0x0
  404e04:	cset	w9, ne  // ne = any
  404e08:	mov	w10, #0x1                   	// #1
  404e0c:	eor	w9, w9, #0x1
  404e10:	eor	w9, w9, w10
  404e14:	eor	w9, w9, w10
  404e18:	and	w9, w9, #0x1
  404e1c:	mov	w0, w9
  404e20:	sxtw	x8, w0
  404e24:	cbz	x8, 404e48 <config_parse_coredump_storage+0x144>
  404e28:	mov	w8, wzr
  404e2c:	mov	w0, w8
  404e30:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404e34:	add	x1, x1, #0x6de
  404e38:	ldr	x2, [sp, #40]
  404e3c:	mov	w3, #0x88                  	// #136
  404e40:	ldr	x4, [sp, #32]
  404e44:	bl	402e58 <log_assert_failed_realm@plt>
  404e48:	ldr	x8, [sp, #80]
  404e4c:	cmp	x8, #0x0
  404e50:	cset	w9, ne  // ne = any
  404e54:	mov	w10, #0x1                   	// #1
  404e58:	eor	w9, w9, #0x1
  404e5c:	eor	w9, w9, w10
  404e60:	eor	w9, w9, w10
  404e64:	and	w9, w9, #0x1
  404e68:	mov	w0, w9
  404e6c:	sxtw	x8, w0
  404e70:	cbz	x8, 404e94 <config_parse_coredump_storage+0x190>
  404e74:	mov	w8, wzr
  404e78:	mov	w0, w8
  404e7c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  404e80:	add	x1, x1, #0x6e5
  404e84:	ldr	x2, [sp, #40]
  404e88:	mov	w3, #0x88                  	// #136
  404e8c:	ldr	x4, [sp, #32]
  404e90:	bl	402e58 <log_assert_failed_realm@plt>
  404e94:	ldur	x0, [x29, #-72]
  404e98:	bl	404f68 <coredump_storage_from_string>
  404e9c:	str	w0, [sp, #60]
  404ea0:	ldr	w8, [sp, #60]
  404ea4:	cmp	w8, #0x0
  404ea8:	cset	w8, ge  // ge = tcont
  404eac:	tbnz	w8, #0, 404f48 <config_parse_coredump_storage+0x244>
  404eb0:	mov	w8, #0x3                   	// #3
  404eb4:	str	w8, [sp, #56]
  404eb8:	mov	w8, wzr
  404ebc:	str	wzr, [sp, #52]
  404ec0:	mov	w0, w8
  404ec4:	bl	402d78 <log_get_max_level_realm@plt>
  404ec8:	ldr	w8, [sp, #56]
  404ecc:	and	w8, w8, #0x7
  404ed0:	cmp	w0, w8
  404ed4:	b.lt	404f24 <config_parse_coredump_storage+0x220>  // b.tstop
  404ed8:	ldur	x0, [x29, #-16]
  404edc:	ldr	w1, [sp, #56]
  404ee0:	ldur	x2, [x29, #-24]
  404ee4:	ldur	w3, [x29, #-28]
  404ee8:	ldr	w4, [sp, #52]
  404eec:	ldur	x8, [x29, #-72]
  404ef0:	ldr	x5, [sp, #40]
  404ef4:	mov	w6, #0x88                  	// #136
  404ef8:	adrp	x7, 40b000 <vacuum_candidate_freep+0x20>
  404efc:	add	x7, x7, #0x6ea
  404f00:	mov	x9, sp
  404f04:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  404f08:	add	x10, x10, #0x708
  404f0c:	str	x10, [x9]
  404f10:	mov	x9, sp
  404f14:	str	x8, [x9, #8]
  404f18:	bl	402f58 <log_syntax_internal@plt>
  404f1c:	str	w0, [sp, #28]
  404f20:	b	404f38 <config_parse_coredump_storage+0x234>
  404f24:	ldr	w0, [sp, #52]
  404f28:	bl	402d98 <abs@plt>
  404f2c:	mov	w8, wzr
  404f30:	subs	w8, w8, w0, uxtb
  404f34:	str	w8, [sp, #28]
  404f38:	ldr	w8, [sp, #28]
  404f3c:	str	w8, [sp, #48]
  404f40:	stur	wzr, [x29, #-4]
  404f44:	b	404f58 <config_parse_coredump_storage+0x254>
  404f48:	ldr	w8, [sp, #60]
  404f4c:	ldr	x9, [sp, #64]
  404f50:	str	w8, [x9]
  404f54:	stur	wzr, [x29, #-4]
  404f58:	ldur	w0, [x29, #-4]
  404f5c:	ldp	x29, x30, [sp, #160]
  404f60:	add	sp, sp, #0xb0
  404f64:	ret

0000000000404f68 <coredump_storage_from_string>:
  404f68:	sub	sp, sp, #0x20
  404f6c:	stp	x29, x30, [sp, #16]
  404f70:	add	x29, sp, #0x10
  404f74:	adrp	x8, 40c000 <_fini+0xb20>
  404f78:	add	x8, x8, #0xd40
  404f7c:	mov	x1, #0x3                   	// #3
  404f80:	str	x0, [sp, #8]
  404f84:	ldr	x2, [sp, #8]
  404f88:	mov	x0, x8
  404f8c:	bl	402f68 <string_table_lookup@plt>
  404f90:	ldp	x29, x30, [sp, #16]
  404f94:	add	sp, sp, #0x20
  404f98:	ret

0000000000404f9c <gather_pid_metadata_from_argv>:
  404f9c:	sub	sp, sp, #0x90
  404fa0:	stp	x29, x30, [sp, #128]
  404fa4:	add	x29, sp, #0x80
  404fa8:	mov	x8, xzr
  404fac:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  404fb0:	add	x9, x9, #0x500
  404fb4:	add	x9, x9, #0x3
  404fb8:	stur	x0, [x29, #-16]
  404fbc:	stur	x1, [x29, #-24]
  404fc0:	stur	w2, [x29, #-28]
  404fc4:	stur	x3, [x29, #-40]
  404fc8:	stur	x8, [x29, #-48]
  404fcc:	ldur	w10, [x29, #-28]
  404fd0:	cmp	w10, #0x7
  404fd4:	str	x9, [sp, #24]
  404fd8:	b.ge	405078 <gather_pid_metadata_from_argv+0xdc>  // b.tcont
  404fdc:	mov	w8, #0x3                   	// #3
  404fe0:	str	w8, [sp, #52]
  404fe4:	mov	w8, #0x16                  	// #22
  404fe8:	movk	w8, #0x4000, lsl #16
  404fec:	str	w8, [sp, #48]
  404ff0:	str	wzr, [sp, #44]
  404ff4:	ldr	w0, [sp, #44]
  404ff8:	bl	402d78 <log_get_max_level_realm@plt>
  404ffc:	ldr	w8, [sp, #52]
  405000:	and	w8, w8, #0x7
  405004:	cmp	w0, w8
  405008:	b.lt	405048 <gather_pid_metadata_from_argv+0xac>  // b.tstop
  40500c:	ldr	w8, [sp, #44]
  405010:	ldr	w9, [sp, #52]
  405014:	orr	w0, w9, w8, lsl #10
  405018:	ldr	w1, [sp, #48]
  40501c:	ldur	w6, [x29, #-28]
  405020:	ldr	x2, [sp, #24]
  405024:	mov	w3, #0x425                 	// #1061
  405028:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  40502c:	add	x4, x4, #0x927
  405030:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  405034:	add	x5, x5, #0x945
  405038:	mov	w7, #0x7                   	// #7
  40503c:	bl	402d88 <log_internal_realm@plt>
  405040:	str	w0, [sp, #20]
  405044:	b	40505c <gather_pid_metadata_from_argv+0xc0>
  405048:	ldr	w0, [sp, #48]
  40504c:	bl	402d98 <abs@plt>
  405050:	mov	w8, wzr
  405054:	subs	w8, w8, w0, uxtb
  405058:	str	w8, [sp, #20]
  40505c:	ldr	w8, [sp, #20]
  405060:	str	w8, [sp, #40]
  405064:	ldr	w8, [sp, #40]
  405068:	stur	w8, [x29, #-4]
  40506c:	mov	w8, #0x1                   	// #1
  405070:	str	w8, [sp, #36]
  405074:	b	405224 <gather_pid_metadata_from_argv+0x288>
  405078:	stur	wzr, [x29, #-52]
  40507c:	ldur	w8, [x29, #-52]
  405080:	cmp	w8, #0x7
  405084:	b.ge	40520c <gather_pid_metadata_from_argv+0x270>  // b.tcont
  405088:	ldur	x8, [x29, #-40]
  40508c:	ldursw	x9, [x29, #-52]
  405090:	mov	x10, #0x8                   	// #8
  405094:	mul	x9, x10, x9
  405098:	add	x8, x8, x9
  40509c:	ldr	x8, [x8]
  4050a0:	str	x8, [sp, #56]
  4050a4:	ldur	w11, [x29, #-52]
  4050a8:	cmp	w11, #0x3
  4050ac:	str	w11, [sp, #16]
  4050b0:	b.eq	40513c <gather_pid_metadata_from_argv+0x1a0>  // b.none
  4050b4:	b	4050b8 <gather_pid_metadata_from_argv+0x11c>
  4050b8:	ldr	w8, [sp, #16]
  4050bc:	cmp	w8, #0x4
  4050c0:	cset	w9, eq  // eq = none
  4050c4:	eor	w9, w9, #0x1
  4050c8:	tbnz	w9, #0, 4051ac <gather_pid_metadata_from_argv+0x210>
  4050cc:	b	4050d0 <gather_pid_metadata_from_argv+0x134>
  4050d0:	ldur	x8, [x29, #-40]
  4050d4:	ldursw	x9, [x29, #-52]
  4050d8:	mov	x10, #0x8                   	// #8
  4050dc:	mul	x9, x10, x9
  4050e0:	add	x8, x8, x9
  4050e4:	ldr	x0, [x8]
  4050e8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4050ec:	add	x1, x1, #0x982
  4050f0:	mov	x8, xzr
  4050f4:	mov	x2, x8
  4050f8:	bl	402f78 <strjoin_real@plt>
  4050fc:	stur	x0, [x29, #-48]
  405100:	str	x0, [sp, #56]
  405104:	ldr	x8, [sp, #56]
  405108:	cbnz	x8, 405138 <gather_pid_metadata_from_argv+0x19c>
  40510c:	mov	w8, wzr
  405110:	mov	w0, w8
  405114:	ldr	x1, [sp, #24]
  405118:	mov	w2, #0x433                 	// #1075
  40511c:	adrp	x3, 40b000 <vacuum_candidate_freep+0x20>
  405120:	add	x3, x3, #0x927
  405124:	bl	402e08 <log_oom_internal@plt>
  405128:	stur	w0, [x29, #-4]
  40512c:	mov	w8, #0x1                   	// #1
  405130:	str	w8, [sp, #36]
  405134:	b	405224 <gather_pid_metadata_from_argv+0x288>
  405138:	b	4051ac <gather_pid_metadata_from_argv+0x210>
  40513c:	ldur	x8, [x29, #-40]
  405140:	ldursw	x9, [x29, #-52]
  405144:	mov	x10, #0x8                   	// #8
  405148:	mul	x9, x10, x9
  40514c:	add	x8, x8, x9
  405150:	ldr	x0, [x8]
  405154:	sub	x1, x29, #0x3c
  405158:	bl	402f88 <safe_atoi@plt>
  40515c:	cmp	w0, #0x0
  405160:	cset	w11, lt  // lt = tstop
  405164:	tbnz	w11, #0, 4051a8 <gather_pid_metadata_from_argv+0x20c>
  405168:	ldur	w0, [x29, #-60]
  40516c:	bl	405f14 <SIGNAL_VALID>
  405170:	tbnz	w0, #0, 405178 <gather_pid_metadata_from_argv+0x1dc>
  405174:	b	4051a8 <gather_pid_metadata_from_argv+0x20c>
  405178:	ldur	x0, [x29, #-16]
  40517c:	ldur	w8, [x29, #-60]
  405180:	str	x0, [sp, #8]
  405184:	mov	w0, w8
  405188:	bl	402f98 <signal_to_string@plt>
  40518c:	ldr	x9, [sp, #8]
  405190:	str	x0, [sp]
  405194:	mov	x0, x9
  405198:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40519c:	add	x1, x1, #0x989
  4051a0:	ldr	x2, [sp]
  4051a4:	bl	402e18 <iovw_put_string_field@plt>
  4051a8:	b	4051ac <gather_pid_metadata_from_argv+0x210>
  4051ac:	ldur	x0, [x29, #-16]
  4051b0:	ldursw	x8, [x29, #-52]
  4051b4:	mov	x9, #0x8                   	// #8
  4051b8:	mul	x8, x9, x8
  4051bc:	adrp	x9, 40c000 <_fini+0xb20>
  4051c0:	add	x9, x9, #0xd58
  4051c4:	add	x8, x9, x8
  4051c8:	ldr	x1, [x8]
  4051cc:	ldr	x2, [sp, #56]
  4051d0:	bl	402e18 <iovw_put_string_field@plt>
  4051d4:	stur	w0, [x29, #-56]
  4051d8:	ldur	w10, [x29, #-56]
  4051dc:	cmp	w10, #0x0
  4051e0:	cset	w10, ge  // ge = tcont
  4051e4:	tbnz	w10, #0, 4051fc <gather_pid_metadata_from_argv+0x260>
  4051e8:	ldur	w8, [x29, #-56]
  4051ec:	stur	w8, [x29, #-4]
  4051f0:	mov	w8, #0x1                   	// #1
  4051f4:	str	w8, [sp, #36]
  4051f8:	b	405224 <gather_pid_metadata_from_argv+0x288>
  4051fc:	ldur	w8, [x29, #-52]
  405200:	add	w8, w8, #0x1
  405204:	stur	w8, [x29, #-52]
  405208:	b	40507c <gather_pid_metadata_from_argv+0xe0>
  40520c:	ldur	x0, [x29, #-24]
  405210:	ldur	x1, [x29, #-16]
  405214:	bl	405f54 <save_context>
  405218:	stur	w0, [x29, #-4]
  40521c:	mov	w8, #0x1                   	// #1
  405220:	str	w8, [sp, #36]
  405224:	sub	x0, x29, #0x30
  405228:	bl	405eec <freep>
  40522c:	ldur	w0, [x29, #-4]
  405230:	ldp	x29, x30, [sp, #128]
  405234:	add	sp, sp, #0x90
  405238:	ret

000000000040523c <gather_pid_metadata>:
  40523c:	stp	x29, x30, [sp, #-32]!
  405240:	stp	x28, x19, [sp, #16]
  405244:	mov	x29, sp
  405248:	sub	sp, sp, #0x150
  40524c:	mov	x19, sp
  405250:	sub	x8, x29, #0x98
  405254:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  405258:	add	x9, x9, #0x500
  40525c:	add	x9, x9, #0x3
  405260:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  405264:	add	x10, x10, #0x8af
  405268:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  40526c:	add	x11, x11, #0xc30
  405270:	adrp	x12, 40b000 <vacuum_candidate_freep+0x20>
  405274:	add	x12, x12, #0x860
  405278:	sub	x13, x29, #0x28
  40527c:	str	x0, [x8, #136]
  405280:	str	x1, [x8, #128]
  405284:	ldr	x14, [x8, #128]
  405288:	ldr	w15, [x14, #80]
  40528c:	str	w15, [x8, #120]
  405290:	ldr	w0, [x8, #120]
  405294:	mov	x1, x13
  405298:	str	x8, [x19, #40]
  40529c:	str	x9, [x19, #32]
  4052a0:	str	x10, [x19, #24]
  4052a4:	str	x11, [x19, #16]
  4052a8:	str	x12, [x19, #8]
  4052ac:	bl	402fa8 <get_process_comm@plt>
  4052b0:	ldr	x8, [x19, #40]
  4052b4:	str	w0, [x8, #100]
  4052b8:	ldr	w15, [x8, #100]
  4052bc:	cmp	w15, #0x0
  4052c0:	cset	w15, ge  // ge = tcont
  4052c4:	tbnz	w15, #0, 405364 <gather_pid_metadata+0x128>
  4052c8:	mov	w8, #0x3                   	// #3
  4052cc:	ldr	x9, [x19, #40]
  4052d0:	str	w8, [x9, #96]
  4052d4:	ldr	w8, [x9, #100]
  4052d8:	str	w8, [x9, #92]
  4052dc:	str	wzr, [x9, #88]
  4052e0:	ldr	w0, [x9, #88]
  4052e4:	bl	402d78 <log_get_max_level_realm@plt>
  4052e8:	ldr	x9, [x19, #40]
  4052ec:	ldr	w8, [x9, #96]
  4052f0:	and	w8, w8, #0x7
  4052f4:	cmp	w0, w8
  4052f8:	b.lt	405334 <gather_pid_metadata+0xf8>  // b.tstop
  4052fc:	ldr	x8, [x19, #40]
  405300:	ldr	w9, [x8, #88]
  405304:	ldr	w10, [x8, #96]
  405308:	orr	w0, w10, w9, lsl #10
  40530c:	ldr	w1, [x8, #92]
  405310:	ldr	x2, [x19, #32]
  405314:	mov	w3, #0x458                 	// #1112
  405318:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  40531c:	add	x4, x4, #0xb50
  405320:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  405324:	add	x5, x5, #0xb64
  405328:	bl	402d88 <log_internal_realm@plt>
  40532c:	str	w0, [x19, #4]
  405330:	b	40534c <gather_pid_metadata+0x110>
  405334:	ldr	x8, [x19, #40]
  405338:	ldr	w0, [x8, #92]
  40533c:	bl	402d98 <abs@plt>
  405340:	mov	w9, wzr
  405344:	subs	w9, w9, w0, uxtb
  405348:	str	w9, [x19, #4]
  40534c:	ldr	w8, [x19, #4]
  405350:	ldr	x9, [x19, #40]
  405354:	str	w8, [x9, #84]
  405358:	ldr	w8, [x9, #84]
  40535c:	str	w8, [x9, #148]
  405360:	b	405e6c <gather_pid_metadata+0xc30>
  405364:	ldr	x8, [x19, #40]
  405368:	ldr	x0, [x8, #136]
  40536c:	ldr	x2, [x8, #112]
  405370:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405374:	add	x1, x1, #0xa15
  405378:	bl	402fb8 <iovw_put_string_field_free@plt>
  40537c:	ldr	x8, [x19, #40]
  405380:	str	w0, [x8, #100]
  405384:	ldr	w9, [x8, #100]
  405388:	cmp	w9, #0x0
  40538c:	cset	w9, ge  // ge = tcont
  405390:	tbnz	w9, #0, 4053a4 <gather_pid_metadata+0x168>
  405394:	ldr	x8, [x19, #40]
  405398:	ldr	w9, [x8, #100]
  40539c:	str	w9, [x8, #148]
  4053a0:	b	405e6c <gather_pid_metadata+0xc30>
  4053a4:	ldr	x8, [x19, #40]
  4053a8:	ldr	w0, [x8, #120]
  4053ac:	sub	x1, x29, #0x28
  4053b0:	bl	402fc8 <get_process_exe@plt>
  4053b4:	ldr	x8, [x19, #40]
  4053b8:	str	w0, [x8, #100]
  4053bc:	ldr	w9, [x8, #100]
  4053c0:	cmp	w9, #0x0
  4053c4:	cset	w9, lt  // lt = tstop
  4053c8:	tbnz	w9, #0, 4053ec <gather_pid_metadata+0x1b0>
  4053cc:	ldr	x8, [x19, #40]
  4053d0:	ldr	x0, [x8, #136]
  4053d4:	ldr	x2, [x8, #112]
  4053d8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4053dc:	add	x1, x1, #0xa24
  4053e0:	bl	402fb8 <iovw_put_string_field_free@plt>
  4053e4:	ldr	x8, [x19, #40]
  4053e8:	str	w0, [x8, #100]
  4053ec:	ldr	x8, [x19, #40]
  4053f0:	ldr	w9, [x8, #100]
  4053f4:	cmp	w9, #0x0
  4053f8:	cset	w9, ge  // ge = tcont
  4053fc:	tbnz	w9, #0, 405490 <gather_pid_metadata+0x254>
  405400:	mov	w8, #0x4                   	// #4
  405404:	ldr	x9, [x19, #40]
  405408:	str	w8, [x9, #80]
  40540c:	ldr	w8, [x9, #100]
  405410:	str	w8, [x9, #76]
  405414:	str	wzr, [x9, #72]
  405418:	ldr	w0, [x9, #72]
  40541c:	bl	402d78 <log_get_max_level_realm@plt>
  405420:	ldr	x9, [x19, #40]
  405424:	ldr	w8, [x9, #80]
  405428:	and	w8, w8, #0x7
  40542c:	cmp	w0, w8
  405430:	b.lt	40546c <gather_pid_metadata+0x230>  // b.tstop
  405434:	ldr	x8, [x19, #40]
  405438:	ldr	w9, [x8, #72]
  40543c:	ldr	w10, [x8, #80]
  405440:	orr	w0, w10, w9, lsl #10
  405444:	ldr	w1, [x8, #76]
  405448:	ldr	x2, [x19, #32]
  40544c:	mov	w3, #0x463                 	// #1123
  405450:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  405454:	add	x4, x4, #0xb50
  405458:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  40545c:	add	x5, x5, #0xb7b
  405460:	bl	402d88 <log_internal_realm@plt>
  405464:	str	w0, [x19]
  405468:	b	405484 <gather_pid_metadata+0x248>
  40546c:	ldr	x8, [x19, #40]
  405470:	ldr	w0, [x8, #76]
  405474:	bl	402d98 <abs@plt>
  405478:	mov	w9, wzr
  40547c:	subs	w9, w9, w0, uxtb
  405480:	str	w9, [x19]
  405484:	ldr	w8, [x19]
  405488:	ldr	x9, [x19, #40]
  40548c:	str	w8, [x9, #68]
  405490:	ldr	x8, [x19, #40]
  405494:	ldr	w0, [x8, #120]
  405498:	sub	x1, x29, #0x28
  40549c:	bl	402fd8 <cg_pid_get_unit@plt>
  4054a0:	cmp	w0, #0x0
  4054a4:	cset	w9, lt  // lt = tstop
  4054a8:	tbnz	w9, #0, 4054c4 <gather_pid_metadata+0x288>
  4054ac:	ldr	x8, [x19, #40]
  4054b0:	ldr	x0, [x8, #136]
  4054b4:	ldr	x2, [x8, #112]
  4054b8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4054bc:	add	x1, x1, #0xa32
  4054c0:	bl	402fb8 <iovw_put_string_field_free@plt>
  4054c4:	ldr	x8, [x19, #40]
  4054c8:	ldr	w0, [x8, #120]
  4054cc:	sub	x1, x29, #0x28
  4054d0:	bl	402fe8 <cg_pid_get_user_unit@plt>
  4054d4:	cmp	w0, #0x0
  4054d8:	cset	w9, lt  // lt = tstop
  4054dc:	tbnz	w9, #0, 4054f8 <gather_pid_metadata+0x2bc>
  4054e0:	ldr	x8, [x19, #40]
  4054e4:	ldr	x0, [x8, #136]
  4054e8:	ldr	x2, [x8, #112]
  4054ec:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4054f0:	add	x1, x1, #0xb9b
  4054f4:	bl	402fb8 <iovw_put_string_field_free@plt>
  4054f8:	ldr	x8, [x19, #40]
  4054fc:	ldr	w0, [x8, #120]
  405500:	sub	x1, x29, #0x28
  405504:	bl	402ff8 <sd_pid_get_session@plt>
  405508:	cmp	w0, #0x0
  40550c:	cset	w9, lt  // lt = tstop
  405510:	tbnz	w9, #0, 40552c <gather_pid_metadata+0x2f0>
  405514:	ldr	x8, [x19, #40]
  405518:	ldr	x0, [x8, #136]
  40551c:	ldr	x2, [x8, #112]
  405520:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405524:	add	x1, x1, #0xbaf
  405528:	bl	402fb8 <iovw_put_string_field_free@plt>
  40552c:	ldr	x8, [x19, #40]
  405530:	ldr	w0, [x8, #120]
  405534:	sub	x1, x29, #0x1c
  405538:	bl	403008 <sd_pid_get_owner_uid@plt>
  40553c:	cmp	w0, #0x0
  405540:	cset	w9, lt  // lt = tstop
  405544:	tbnz	w9, #0, 405590 <gather_pid_metadata+0x354>
  405548:	ldr	x8, [x19, #40]
  40554c:	ldr	w2, [x8, #124]
  405550:	sub	x0, x29, #0x28
  405554:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405558:	add	x1, x1, #0xbc1
  40555c:	bl	403018 <asprintf@plt>
  405560:	ldr	x8, [x19, #40]
  405564:	str	w0, [x8, #100]
  405568:	ldr	w9, [x8, #100]
  40556c:	cmp	w9, #0x0
  405570:	cset	w9, le
  405574:	tbnz	w9, #0, 405590 <gather_pid_metadata+0x354>
  405578:	ldr	x8, [x19, #40]
  40557c:	ldr	x0, [x8, #136]
  405580:	ldr	x2, [x8, #112]
  405584:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405588:	add	x1, x1, #0xbc4
  40558c:	bl	402fb8 <iovw_put_string_field_free@plt>
  405590:	ldr	x8, [x19, #40]
  405594:	ldr	w0, [x8, #120]
  405598:	sub	x1, x29, #0x28
  40559c:	bl	403028 <sd_pid_get_slice@plt>
  4055a0:	cmp	w0, #0x0
  4055a4:	cset	w9, lt  // lt = tstop
  4055a8:	tbnz	w9, #0, 4055c4 <gather_pid_metadata+0x388>
  4055ac:	ldr	x8, [x19, #40]
  4055b0:	ldr	x0, [x8, #136]
  4055b4:	ldr	x2, [x8, #112]
  4055b8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4055bc:	add	x1, x1, #0xbd8
  4055c0:	bl	402fb8 <iovw_put_string_field_free@plt>
  4055c4:	ldr	x8, [x19, #40]
  4055c8:	ldr	w0, [x8, #120]
  4055cc:	mov	x1, #0xffffffffffffffff    	// #-1
  4055d0:	mov	w9, wzr
  4055d4:	mov	w2, w9
  4055d8:	sub	x3, x29, #0x28
  4055dc:	bl	403038 <get_process_cmdline@plt>
  4055e0:	cmp	w0, #0x0
  4055e4:	cset	w9, lt  // lt = tstop
  4055e8:	tbnz	w9, #0, 405604 <gather_pid_metadata+0x3c8>
  4055ec:	ldr	x8, [x19, #40]
  4055f0:	ldr	x0, [x8, #136]
  4055f4:	ldr	x2, [x8, #112]
  4055f8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4055fc:	add	x1, x1, #0xbe8
  405600:	bl	402fb8 <iovw_put_string_field_free@plt>
  405604:	ldr	x8, [x19, #40]
  405608:	ldr	w0, [x8, #120]
  40560c:	mov	x9, xzr
  405610:	mov	x1, x9
  405614:	sub	x2, x29, #0x28
  405618:	bl	403048 <cg_pid_get_path_shifted@plt>
  40561c:	cmp	w0, #0x0
  405620:	cset	w10, lt  // lt = tstop
  405624:	tbnz	w10, #0, 405640 <gather_pid_metadata+0x404>
  405628:	ldr	x8, [x19, #40]
  40562c:	ldr	x0, [x8, #136]
  405630:	ldr	x2, [x8, #112]
  405634:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405638:	add	x1, x1, #0xbfa
  40563c:	bl	402fb8 <iovw_put_string_field_free@plt>
  405640:	ldr	x8, [x19, #40]
  405644:	ldr	w0, [x8, #120]
  405648:	sub	x1, x29, #0x28
  40564c:	bl	4063d8 <compose_open_fds>
  405650:	cmp	w0, #0x0
  405654:	cset	w9, lt  // lt = tstop
  405658:	tbnz	w9, #0, 405674 <gather_pid_metadata+0x438>
  40565c:	ldr	x8, [x19, #40]
  405660:	ldr	x0, [x8, #136]
  405664:	ldr	x2, [x8, #112]
  405668:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40566c:	add	x1, x1, #0xc0b
  405670:	bl	402fb8 <iovw_put_string_field_free@plt>
  405674:	ldr	x8, [x19, #40]
  405678:	ldr	w9, [x8, #120]
  40567c:	str	w9, [x8, #64]
  405680:	ldr	w9, [x8, #64]
  405684:	cbnz	w9, 40569c <gather_pid_metadata+0x460>
  405688:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  40568c:	add	x8, x8, #0xc1e
  405690:	ldr	x9, [x19, #40]
  405694:	str	x8, [x9, #56]
  405698:	b	405794 <gather_pid_metadata+0x558>
  40569c:	mov	x8, #0x1a                  	// #26
  4056a0:	ldr	x9, [x19, #40]
  4056a4:	str	x8, [x9, #48]
  4056a8:	ldr	x8, [x19, #40]
  4056ac:	ldr	x1, [x8, #48]
  4056b0:	mov	x0, #0x1                   	// #1
  4056b4:	bl	405e84 <size_multiply_overflow>
  4056b8:	mov	w9, #0x1                   	// #1
  4056bc:	eor	w10, w0, #0x1
  4056c0:	eor	w10, w10, w9
  4056c4:	eor	w10, w10, w9
  4056c8:	eor	w9, w10, w9
  4056cc:	and	w9, w9, #0x1
  4056d0:	mov	w1, w9
  4056d4:	sxtw	x8, w1
  4056d8:	cbz	x8, 4056f8 <gather_pid_metadata+0x4bc>
  4056dc:	mov	w8, wzr
  4056e0:	mov	w0, w8
  4056e4:	ldr	x1, [x19, #8]
  4056e8:	ldr	x2, [x19, #32]
  4056ec:	mov	w3, #0x481                 	// #1153
  4056f0:	ldr	x4, [x19, #16]
  4056f4:	bl	402e58 <log_assert_failed_realm@plt>
  4056f8:	ldr	x8, [x19, #40]
  4056fc:	ldr	x9, [x8, #48]
  405700:	mov	x10, #0x1                   	// #1
  405704:	mul	x9, x10, x9
  405708:	cmp	x9, #0x400, lsl #12
  40570c:	cset	w11, ls  // ls = plast
  405710:	mov	w12, #0x1                   	// #1
  405714:	eor	w11, w11, #0x1
  405718:	eor	w11, w11, w12
  40571c:	eor	w11, w11, w12
  405720:	and	w11, w11, #0x1
  405724:	mov	w0, w11
  405728:	sxtw	x9, w0
  40572c:	cbz	x9, 40574c <gather_pid_metadata+0x510>
  405730:	mov	w8, wzr
  405734:	mov	w0, w8
  405738:	ldr	x1, [x19, #24]
  40573c:	ldr	x2, [x19, #32]
  405740:	mov	w3, #0x481                 	// #1153
  405744:	ldr	x4, [x19, #16]
  405748:	bl	402e58 <log_assert_failed_realm@plt>
  40574c:	ldr	x8, [x19, #40]
  405750:	ldr	x9, [x8, #48]
  405754:	mov	x10, #0x1                   	// #1
  405758:	mul	x9, x10, x9
  40575c:	mul	x9, x9, x10
  405760:	add	x9, x9, #0xf
  405764:	and	x9, x9, #0xfffffffffffffff0
  405768:	mov	x10, sp
  40576c:	subs	x9, x10, x9
  405770:	mov	sp, x9
  405774:	str	x9, [x8, #40]
  405778:	ldr	x9, [x8, #40]
  40577c:	str	x9, [x8, #56]
  405780:	ldr	x0, [x8, #56]
  405784:	ldr	w2, [x8, #64]
  405788:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40578c:	add	x1, x1, #0xc6b
  405790:	bl	403058 <sprintf@plt>
  405794:	ldr	x8, [x19, #40]
  405798:	ldr	x9, [x8, #56]
  40579c:	str	x9, [x8, #32]
  4057a0:	ldr	x9, [x8, #32]
  4057a4:	str	x9, [x8, #104]
  4057a8:	ldr	x0, [x8, #104]
  4057ac:	sub	x1, x29, #0x28
  4057b0:	mov	x9, xzr
  4057b4:	mov	x2, x9
  4057b8:	bl	406988 <read_full_file>
  4057bc:	cmp	w0, #0x0
  4057c0:	cset	w10, lt  // lt = tstop
  4057c4:	tbnz	w10, #0, 4057e0 <gather_pid_metadata+0x5a4>
  4057c8:	ldr	x8, [x19, #40]
  4057cc:	ldr	x0, [x8, #136]
  4057d0:	ldr	x2, [x8, #112]
  4057d4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4057d8:	add	x1, x1, #0xc7b
  4057dc:	bl	402fb8 <iovw_put_string_field_free@plt>
  4057e0:	ldr	x8, [x19, #40]
  4057e4:	ldr	w9, [x8, #120]
  4057e8:	str	w9, [x8, #28]
  4057ec:	ldr	w9, [x8, #28]
  4057f0:	cbnz	w9, 405808 <gather_pid_metadata+0x5cc>
  4057f4:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  4057f8:	add	x8, x8, #0xc91
  4057fc:	ldr	x9, [x19, #40]
  405800:	str	x8, [x9, #16]
  405804:	b	405900 <gather_pid_metadata+0x6c4>
  405808:	mov	x8, #0x18                  	// #24
  40580c:	ldr	x9, [x19, #40]
  405810:	str	x8, [x9, #8]
  405814:	ldr	x8, [x19, #40]
  405818:	ldr	x1, [x8, #8]
  40581c:	mov	x0, #0x1                   	// #1
  405820:	bl	405e84 <size_multiply_overflow>
  405824:	mov	w9, #0x1                   	// #1
  405828:	eor	w10, w0, #0x1
  40582c:	eor	w10, w10, w9
  405830:	eor	w10, w10, w9
  405834:	eor	w9, w10, w9
  405838:	and	w9, w9, #0x1
  40583c:	mov	w1, w9
  405840:	sxtw	x8, w1
  405844:	cbz	x8, 405864 <gather_pid_metadata+0x628>
  405848:	mov	w8, wzr
  40584c:	mov	w0, w8
  405850:	ldr	x1, [x19, #8]
  405854:	ldr	x2, [x19, #32]
  405858:	mov	w3, #0x485                 	// #1157
  40585c:	ldr	x4, [x19, #16]
  405860:	bl	402e58 <log_assert_failed_realm@plt>
  405864:	ldr	x8, [x19, #40]
  405868:	ldr	x9, [x8, #8]
  40586c:	mov	x10, #0x1                   	// #1
  405870:	mul	x9, x10, x9
  405874:	cmp	x9, #0x400, lsl #12
  405878:	cset	w11, ls  // ls = plast
  40587c:	mov	w12, #0x1                   	// #1
  405880:	eor	w11, w11, #0x1
  405884:	eor	w11, w11, w12
  405888:	eor	w11, w11, w12
  40588c:	and	w11, w11, #0x1
  405890:	mov	w0, w11
  405894:	sxtw	x9, w0
  405898:	cbz	x9, 4058b8 <gather_pid_metadata+0x67c>
  40589c:	mov	w8, wzr
  4058a0:	mov	w0, w8
  4058a4:	ldr	x1, [x19, #24]
  4058a8:	ldr	x2, [x19, #32]
  4058ac:	mov	w3, #0x485                 	// #1157
  4058b0:	ldr	x4, [x19, #16]
  4058b4:	bl	402e58 <log_assert_failed_realm@plt>
  4058b8:	ldr	x8, [x19, #40]
  4058bc:	ldr	x9, [x8, #8]
  4058c0:	mov	x10, #0x1                   	// #1
  4058c4:	mul	x9, x10, x9
  4058c8:	mul	x9, x9, x10
  4058cc:	add	x9, x9, #0xf
  4058d0:	and	x9, x9, #0xfffffffffffffff0
  4058d4:	mov	x10, sp
  4058d8:	subs	x9, x10, x9
  4058dc:	mov	sp, x9
  4058e0:	str	x9, [x8]
  4058e4:	ldr	x9, [x8]
  4058e8:	str	x9, [x8, #16]
  4058ec:	ldr	x0, [x8, #16]
  4058f0:	ldr	w2, [x8, #28]
  4058f4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4058f8:	add	x1, x1, #0xca1
  4058fc:	bl	403058 <sprintf@plt>
  405900:	ldr	x8, [x19, #40]
  405904:	ldr	x9, [x8, #16]
  405908:	stur	x9, [x29, #-160]
  40590c:	ldur	x9, [x29, #-160]
  405910:	str	x9, [x8, #104]
  405914:	ldr	x0, [x8, #104]
  405918:	sub	x1, x29, #0x28
  40591c:	mov	x9, xzr
  405920:	mov	x2, x9
  405924:	bl	406988 <read_full_file>
  405928:	cmp	w0, #0x0
  40592c:	cset	w10, lt  // lt = tstop
  405930:	tbnz	w10, #0, 40594c <gather_pid_metadata+0x710>
  405934:	ldr	x8, [x19, #40]
  405938:	ldr	x0, [x8, #136]
  40593c:	ldr	x2, [x8, #112]
  405940:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405944:	add	x1, x1, #0xcaf
  405948:	bl	402fb8 <iovw_put_string_field_free@plt>
  40594c:	ldr	x8, [x19, #40]
  405950:	ldr	w9, [x8, #120]
  405954:	stur	w9, [x29, #-164]
  405958:	ldur	w9, [x29, #-164]
  40595c:	cbnz	w9, 405970 <gather_pid_metadata+0x734>
  405960:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  405964:	add	x8, x8, #0xcc3
  405968:	str	x8, [x19, #160]
  40596c:	b	405a58 <gather_pid_metadata+0x81c>
  405970:	mov	x8, #0x1a                  	// #26
  405974:	str	x8, [x19, #152]
  405978:	ldr	x1, [x19, #152]
  40597c:	mov	x0, #0x1                   	// #1
  405980:	bl	405e84 <size_multiply_overflow>
  405984:	mov	w8, #0x1                   	// #1
  405988:	eor	w9, w0, #0x1
  40598c:	eor	w9, w9, w8
  405990:	eor	w9, w9, w8
  405994:	eor	w8, w9, w8
  405998:	and	w8, w8, #0x1
  40599c:	mov	w1, w8
  4059a0:	sxtw	x10, w1
  4059a4:	cbz	x10, 4059c4 <gather_pid_metadata+0x788>
  4059a8:	mov	w8, wzr
  4059ac:	mov	w0, w8
  4059b0:	ldr	x1, [x19, #8]
  4059b4:	ldr	x2, [x19, #32]
  4059b8:	mov	w3, #0x489                 	// #1161
  4059bc:	ldr	x4, [x19, #16]
  4059c0:	bl	402e58 <log_assert_failed_realm@plt>
  4059c4:	ldr	x8, [x19, #152]
  4059c8:	mov	x9, #0x1                   	// #1
  4059cc:	mul	x8, x9, x8
  4059d0:	cmp	x8, #0x400, lsl #12
  4059d4:	cset	w10, ls  // ls = plast
  4059d8:	mov	w11, #0x1                   	// #1
  4059dc:	eor	w10, w10, #0x1
  4059e0:	eor	w10, w10, w11
  4059e4:	eor	w10, w10, w11
  4059e8:	and	w10, w10, #0x1
  4059ec:	mov	w0, w10
  4059f0:	sxtw	x8, w0
  4059f4:	cbz	x8, 405a14 <gather_pid_metadata+0x7d8>
  4059f8:	mov	w8, wzr
  4059fc:	mov	w0, w8
  405a00:	ldr	x1, [x19, #24]
  405a04:	ldr	x2, [x19, #32]
  405a08:	mov	w3, #0x489                 	// #1161
  405a0c:	ldr	x4, [x19, #16]
  405a10:	bl	402e58 <log_assert_failed_realm@plt>
  405a14:	ldr	x8, [x19, #152]
  405a18:	mov	x9, #0x1                   	// #1
  405a1c:	mul	x8, x9, x8
  405a20:	mul	x8, x8, x9
  405a24:	add	x8, x8, #0xf
  405a28:	and	x8, x8, #0xfffffffffffffff0
  405a2c:	mov	x9, sp
  405a30:	subs	x8, x9, x8
  405a34:	mov	sp, x8
  405a38:	str	x8, [x19, #144]
  405a3c:	ldr	x8, [x19, #144]
  405a40:	str	x8, [x19, #160]
  405a44:	ldr	x0, [x19, #160]
  405a48:	ldur	w2, [x29, #-164]
  405a4c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405a50:	add	x1, x1, #0xcd5
  405a54:	bl	403058 <sprintf@plt>
  405a58:	ldr	x8, [x19, #160]
  405a5c:	str	x8, [x19, #136]
  405a60:	ldr	x8, [x19, #136]
  405a64:	ldr	x9, [x19, #40]
  405a68:	str	x8, [x9, #104]
  405a6c:	ldr	x0, [x9, #104]
  405a70:	sub	x1, x29, #0x28
  405a74:	mov	x8, xzr
  405a78:	mov	x2, x8
  405a7c:	bl	406988 <read_full_file>
  405a80:	cmp	w0, #0x0
  405a84:	cset	w10, lt  // lt = tstop
  405a88:	tbnz	w10, #0, 405aa4 <gather_pid_metadata+0x868>
  405a8c:	ldr	x8, [x19, #40]
  405a90:	ldr	x0, [x8, #136]
  405a94:	ldr	x2, [x8, #112]
  405a98:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405a9c:	add	x1, x1, #0xce5
  405aa0:	bl	402fb8 <iovw_put_string_field_free@plt>
  405aa4:	ldr	x8, [x19, #40]
  405aa8:	ldr	w9, [x8, #120]
  405aac:	str	w9, [x19, #132]
  405ab0:	ldr	w9, [x19, #132]
  405ab4:	cbnz	w9, 405ac8 <gather_pid_metadata+0x88c>
  405ab8:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  405abc:	add	x8, x8, #0xcfb
  405ac0:	str	x8, [x19, #120]
  405ac4:	b	405bb0 <gather_pid_metadata+0x974>
  405ac8:	mov	x8, #0x1a                  	// #26
  405acc:	str	x8, [x19, #112]
  405ad0:	ldr	x1, [x19, #112]
  405ad4:	mov	x0, #0x1                   	// #1
  405ad8:	bl	405e84 <size_multiply_overflow>
  405adc:	mov	w8, #0x1                   	// #1
  405ae0:	eor	w9, w0, #0x1
  405ae4:	eor	w9, w9, w8
  405ae8:	eor	w9, w9, w8
  405aec:	eor	w8, w9, w8
  405af0:	and	w8, w8, #0x1
  405af4:	mov	w1, w8
  405af8:	sxtw	x10, w1
  405afc:	cbz	x10, 405b1c <gather_pid_metadata+0x8e0>
  405b00:	mov	w8, wzr
  405b04:	mov	w0, w8
  405b08:	ldr	x1, [x19, #8]
  405b0c:	ldr	x2, [x19, #32]
  405b10:	mov	w3, #0x48d                 	// #1165
  405b14:	ldr	x4, [x19, #16]
  405b18:	bl	402e58 <log_assert_failed_realm@plt>
  405b1c:	ldr	x8, [x19, #112]
  405b20:	mov	x9, #0x1                   	// #1
  405b24:	mul	x8, x9, x8
  405b28:	cmp	x8, #0x400, lsl #12
  405b2c:	cset	w10, ls  // ls = plast
  405b30:	mov	w11, #0x1                   	// #1
  405b34:	eor	w10, w10, #0x1
  405b38:	eor	w10, w10, w11
  405b3c:	eor	w10, w10, w11
  405b40:	and	w10, w10, #0x1
  405b44:	mov	w0, w10
  405b48:	sxtw	x8, w0
  405b4c:	cbz	x8, 405b6c <gather_pid_metadata+0x930>
  405b50:	mov	w8, wzr
  405b54:	mov	w0, w8
  405b58:	ldr	x1, [x19, #24]
  405b5c:	ldr	x2, [x19, #32]
  405b60:	mov	w3, #0x48d                 	// #1165
  405b64:	ldr	x4, [x19, #16]
  405b68:	bl	402e58 <log_assert_failed_realm@plt>
  405b6c:	ldr	x8, [x19, #112]
  405b70:	mov	x9, #0x1                   	// #1
  405b74:	mul	x8, x9, x8
  405b78:	mul	x8, x8, x9
  405b7c:	add	x8, x8, #0xf
  405b80:	and	x8, x8, #0xfffffffffffffff0
  405b84:	mov	x9, sp
  405b88:	subs	x8, x9, x8
  405b8c:	mov	sp, x8
  405b90:	str	x8, [x19, #104]
  405b94:	ldr	x8, [x19, #104]
  405b98:	str	x8, [x19, #120]
  405b9c:	ldr	x0, [x19, #120]
  405ba0:	ldr	w2, [x19, #132]
  405ba4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405ba8:	add	x1, x1, #0xd0d
  405bac:	bl	403058 <sprintf@plt>
  405bb0:	ldr	x8, [x19, #120]
  405bb4:	str	x8, [x19, #96]
  405bb8:	ldr	x8, [x19, #96]
  405bbc:	ldr	x9, [x19, #40]
  405bc0:	str	x8, [x9, #104]
  405bc4:	ldr	x0, [x9, #104]
  405bc8:	sub	x1, x29, #0x28
  405bcc:	mov	x8, xzr
  405bd0:	mov	x2, x8
  405bd4:	bl	406988 <read_full_file>
  405bd8:	cmp	w0, #0x0
  405bdc:	cset	w10, lt  // lt = tstop
  405be0:	tbnz	w10, #0, 405bfc <gather_pid_metadata+0x9c0>
  405be4:	ldr	x8, [x19, #40]
  405be8:	ldr	x0, [x8, #136]
  405bec:	ldr	x2, [x8, #112]
  405bf0:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405bf4:	add	x1, x1, #0xd1d
  405bf8:	bl	402fb8 <iovw_put_string_field_free@plt>
  405bfc:	ldr	x8, [x19, #40]
  405c00:	ldr	w9, [x8, #120]
  405c04:	str	w9, [x19, #92]
  405c08:	ldr	w9, [x19, #92]
  405c0c:	cbnz	w9, 405c20 <gather_pid_metadata+0x9e4>
  405c10:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  405c14:	add	x8, x8, #0xd33
  405c18:	str	x8, [x19, #80]
  405c1c:	b	405d08 <gather_pid_metadata+0xacc>
  405c20:	mov	x8, #0x1d                  	// #29
  405c24:	str	x8, [x19, #72]
  405c28:	ldr	x1, [x19, #72]
  405c2c:	mov	x0, #0x1                   	// #1
  405c30:	bl	405e84 <size_multiply_overflow>
  405c34:	mov	w8, #0x1                   	// #1
  405c38:	eor	w9, w0, #0x1
  405c3c:	eor	w9, w9, w8
  405c40:	eor	w9, w9, w8
  405c44:	eor	w8, w9, w8
  405c48:	and	w8, w8, #0x1
  405c4c:	mov	w1, w8
  405c50:	sxtw	x10, w1
  405c54:	cbz	x10, 405c74 <gather_pid_metadata+0xa38>
  405c58:	mov	w8, wzr
  405c5c:	mov	w0, w8
  405c60:	ldr	x1, [x19, #8]
  405c64:	ldr	x2, [x19, #32]
  405c68:	mov	w3, #0x491                 	// #1169
  405c6c:	ldr	x4, [x19, #16]
  405c70:	bl	402e58 <log_assert_failed_realm@plt>
  405c74:	ldr	x8, [x19, #72]
  405c78:	mov	x9, #0x1                   	// #1
  405c7c:	mul	x8, x9, x8
  405c80:	cmp	x8, #0x400, lsl #12
  405c84:	cset	w10, ls  // ls = plast
  405c88:	mov	w11, #0x1                   	// #1
  405c8c:	eor	w10, w10, #0x1
  405c90:	eor	w10, w10, w11
  405c94:	eor	w10, w10, w11
  405c98:	and	w10, w10, #0x1
  405c9c:	mov	w0, w10
  405ca0:	sxtw	x8, w0
  405ca4:	cbz	x8, 405cc4 <gather_pid_metadata+0xa88>
  405ca8:	mov	w8, wzr
  405cac:	mov	w0, w8
  405cb0:	ldr	x1, [x19, #24]
  405cb4:	ldr	x2, [x19, #32]
  405cb8:	mov	w3, #0x491                 	// #1169
  405cbc:	ldr	x4, [x19, #16]
  405cc0:	bl	402e58 <log_assert_failed_realm@plt>
  405cc4:	ldr	x8, [x19, #72]
  405cc8:	mov	x9, #0x1                   	// #1
  405ccc:	mul	x8, x9, x8
  405cd0:	mul	x8, x8, x9
  405cd4:	add	x8, x8, #0xf
  405cd8:	and	x8, x8, #0xfffffffffffffff0
  405cdc:	mov	x9, sp
  405ce0:	subs	x8, x9, x8
  405ce4:	mov	sp, x8
  405ce8:	str	x8, [x19, #64]
  405cec:	ldr	x8, [x19, #64]
  405cf0:	str	x8, [x19, #80]
  405cf4:	ldr	x0, [x19, #80]
  405cf8:	ldr	w2, [x19, #92]
  405cfc:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405d00:	add	x1, x1, #0xd48
  405d04:	bl	403058 <sprintf@plt>
  405d08:	ldr	x8, [x19, #80]
  405d0c:	str	x8, [x19, #56]
  405d10:	ldr	x8, [x19, #56]
  405d14:	ldr	x9, [x19, #40]
  405d18:	str	x8, [x9, #104]
  405d1c:	ldr	x0, [x9, #104]
  405d20:	sub	x1, x29, #0x28
  405d24:	mov	x8, xzr
  405d28:	mov	x2, x8
  405d2c:	bl	406988 <read_full_file>
  405d30:	cmp	w0, #0x0
  405d34:	cset	w10, lt  // lt = tstop
  405d38:	tbnz	w10, #0, 405d54 <gather_pid_metadata+0xb18>
  405d3c:	ldr	x8, [x19, #40]
  405d40:	ldr	x0, [x8, #136]
  405d44:	ldr	x2, [x8, #112]
  405d48:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405d4c:	add	x1, x1, #0xd5b
  405d50:	bl	402fb8 <iovw_put_string_field_free@plt>
  405d54:	ldr	x8, [x19, #40]
  405d58:	ldr	w0, [x8, #120]
  405d5c:	sub	x1, x29, #0x28
  405d60:	bl	403068 <get_process_cwd@plt>
  405d64:	cmp	w0, #0x0
  405d68:	cset	w9, lt  // lt = tstop
  405d6c:	tbnz	w9, #0, 405d88 <gather_pid_metadata+0xb4c>
  405d70:	ldr	x8, [x19, #40]
  405d74:	ldr	x0, [x8, #136]
  405d78:	ldr	x2, [x8, #112]
  405d7c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405d80:	add	x1, x1, #0xd74
  405d84:	bl	402fb8 <iovw_put_string_field_free@plt>
  405d88:	ldr	x8, [x19, #40]
  405d8c:	ldr	w0, [x8, #120]
  405d90:	sub	x1, x29, #0x28
  405d94:	bl	403078 <get_process_root@plt>
  405d98:	cmp	w0, #0x0
  405d9c:	cset	w9, lt  // lt = tstop
  405da0:	tbnz	w9, #0, 405e20 <gather_pid_metadata+0xbe4>
  405da4:	ldr	x8, [x19, #40]
  405da8:	ldr	x0, [x8, #112]
  405dac:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405db0:	add	x1, x1, #0xd82
  405db4:	bl	403088 <strcmp@plt>
  405db8:	cmp	w0, #0x0
  405dbc:	cset	w9, eq  // eq = none
  405dc0:	and	w9, w9, #0x1
  405dc4:	strb	w9, [x19, #55]
  405dc8:	ldr	x8, [x19, #40]
  405dcc:	ldr	x0, [x8, #136]
  405dd0:	ldr	x2, [x8, #112]
  405dd4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405dd8:	add	x1, x1, #0xd84
  405ddc:	bl	402fb8 <iovw_put_string_field_free@plt>
  405de0:	ldrb	w9, [x19, #55]
  405de4:	tbnz	w9, #0, 405dec <gather_pid_metadata+0xbb0>
  405de8:	b	405e20 <gather_pid_metadata+0xbe4>
  405dec:	ldr	x8, [x19, #40]
  405df0:	ldr	w0, [x8, #120]
  405df4:	sub	x1, x29, #0x28
  405df8:	bl	4069c4 <get_process_container_parent_cmdline>
  405dfc:	cmp	w0, #0x0
  405e00:	cset	w9, le
  405e04:	tbnz	w9, #0, 405e20 <gather_pid_metadata+0xbe4>
  405e08:	ldr	x8, [x19, #40]
  405e0c:	ldr	x0, [x8, #136]
  405e10:	ldr	x2, [x8, #112]
  405e14:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405e18:	add	x1, x1, #0xd93
  405e1c:	bl	402fb8 <iovw_put_string_field_free@plt>
  405e20:	ldr	x8, [x19, #40]
  405e24:	ldr	w0, [x8, #120]
  405e28:	sub	x1, x29, #0x28
  405e2c:	bl	403098 <get_process_environ@plt>
  405e30:	cmp	w0, #0x0
  405e34:	cset	w9, lt  // lt = tstop
  405e38:	tbnz	w9, #0, 405e54 <gather_pid_metadata+0xc18>
  405e3c:	ldr	x8, [x19, #40]
  405e40:	ldr	x0, [x8, #136]
  405e44:	ldr	x2, [x8, #112]
  405e48:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405e4c:	add	x1, x1, #0xdaf
  405e50:	bl	402fb8 <iovw_put_string_field_free@plt>
  405e54:	ldr	x8, [x19, #40]
  405e58:	ldr	x0, [x8, #128]
  405e5c:	ldr	x1, [x8, #136]
  405e60:	bl	405f54 <save_context>
  405e64:	ldr	x8, [x19, #40]
  405e68:	str	w0, [x8, #148]
  405e6c:	ldr	x8, [x19, #40]
  405e70:	ldr	w0, [x8, #148]
  405e74:	mov	sp, x29
  405e78:	ldp	x28, x19, [sp, #16]
  405e7c:	ldp	x29, x30, [sp], #32
  405e80:	ret

0000000000405e84 <size_multiply_overflow>:
  405e84:	sub	sp, sp, #0x20
  405e88:	str	x0, [sp, #24]
  405e8c:	str	x1, [sp, #16]
  405e90:	ldr	x8, [sp, #16]
  405e94:	mov	w9, #0x0                   	// #0
  405e98:	str	w9, [sp, #12]
  405e9c:	cbz	x8, 405ebc <size_multiply_overflow+0x38>
  405ea0:	ldr	x8, [sp, #24]
  405ea4:	ldr	x9, [sp, #16]
  405ea8:	mov	x10, #0xffffffffffffffff    	// #-1
  405eac:	udiv	x9, x10, x9
  405eb0:	cmp	x8, x9
  405eb4:	cset	w11, hi  // hi = pmore
  405eb8:	str	w11, [sp, #12]
  405ebc:	ldr	w8, [sp, #12]
  405ec0:	mov	w9, #0x1                   	// #1
  405ec4:	eor	w8, w8, #0x1
  405ec8:	eor	w8, w8, w9
  405ecc:	and	w8, w8, #0x1
  405ed0:	mov	w0, w8
  405ed4:	sxtw	x10, w0
  405ed8:	cmp	x10, #0x0
  405edc:	cset	w8, ne  // ne = any
  405ee0:	and	w0, w8, #0x1
  405ee4:	add	sp, sp, #0x20
  405ee8:	ret

0000000000405eec <freep>:
  405eec:	sub	sp, sp, #0x20
  405ef0:	stp	x29, x30, [sp, #16]
  405ef4:	add	x29, sp, #0x10
  405ef8:	str	x0, [sp, #8]
  405efc:	ldr	x8, [sp, #8]
  405f00:	ldr	x0, [x8]
  405f04:	bl	402f08 <free@plt>
  405f08:	ldp	x29, x30, [sp, #16]
  405f0c:	add	sp, sp, #0x20
  405f10:	ret

0000000000405f14 <SIGNAL_VALID>:
  405f14:	sub	sp, sp, #0x10
  405f18:	str	w0, [sp, #12]
  405f1c:	ldr	w8, [sp, #12]
  405f20:	cmp	w8, #0x0
  405f24:	cset	w8, le
  405f28:	mov	w9, #0x0                   	// #0
  405f2c:	str	w9, [sp, #8]
  405f30:	tbnz	w8, #0, 405f44 <SIGNAL_VALID+0x30>
  405f34:	ldr	w8, [sp, #12]
  405f38:	cmp	w8, #0x41
  405f3c:	cset	w8, lt  // lt = tstop
  405f40:	str	w8, [sp, #8]
  405f44:	ldr	w8, [sp, #8]
  405f48:	and	w0, w8, #0x1
  405f4c:	add	sp, sp, #0x10
  405f50:	ret

0000000000405f54 <save_context>:
  405f54:	sub	sp, sp, #0xa0
  405f58:	stp	x29, x30, [sp, #144]
  405f5c:	add	x29, sp, #0x90
  405f60:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  405f64:	add	x8, x8, #0x500
  405f68:	add	x8, x8, #0x3
  405f6c:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  405f70:	add	x9, x9, #0xa49
  405f74:	stur	x0, [x29, #-16]
  405f78:	stur	x1, [x29, #-24]
  405f7c:	stur	wzr, [x29, #-36]
  405f80:	str	x8, [sp, #32]
  405f84:	str	x9, [sp, #24]
  405f88:	ldur	x8, [x29, #-16]
  405f8c:	cmp	x8, #0x0
  405f90:	cset	w9, ne  // ne = any
  405f94:	mov	w10, #0x1                   	// #1
  405f98:	eor	w9, w9, #0x1
  405f9c:	eor	w9, w9, w10
  405fa0:	eor	w9, w9, w10
  405fa4:	and	w9, w9, #0x1
  405fa8:	mov	w0, w9
  405fac:	sxtw	x8, w0
  405fb0:	cbz	x8, 405fd4 <save_context+0x80>
  405fb4:	mov	w8, wzr
  405fb8:	mov	w0, w8
  405fbc:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  405fc0:	add	x1, x1, #0xa41
  405fc4:	ldr	x2, [sp, #32]
  405fc8:	mov	w3, #0x342                 	// #834
  405fcc:	ldr	x4, [sp, #24]
  405fd0:	bl	402e58 <log_assert_failed_realm@plt>
  405fd4:	ldur	x8, [x29, #-24]
  405fd8:	cmp	x8, #0x0
  405fdc:	cset	w9, ne  // ne = any
  405fe0:	mov	w10, #0x1                   	// #1
  405fe4:	eor	w9, w9, #0x1
  405fe8:	eor	w9, w9, w10
  405fec:	eor	w9, w9, w10
  405ff0:	and	w9, w9, #0x1
  405ff4:	mov	w0, w9
  405ff8:	sxtw	x8, w0
  405ffc:	cbz	x8, 406020 <save_context+0xcc>
  406000:	mov	w8, wzr
  406004:	mov	w0, w8
  406008:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40600c:	add	x1, x1, #0xa83
  406010:	ldr	x2, [sp, #32]
  406014:	mov	w3, #0x343                 	// #835
  406018:	ldr	x4, [sp, #24]
  40601c:	bl	402e58 <log_assert_failed_realm@plt>
  406020:	ldur	x8, [x29, #-24]
  406024:	ldr	x8, [x8, #8]
  406028:	cmp	x8, #0x7
  40602c:	cset	w9, cs  // cs = hs, nlast
  406030:	mov	w10, #0x1                   	// #1
  406034:	eor	w9, w9, #0x1
  406038:	eor	w9, w9, w10
  40603c:	eor	w9, w9, w10
  406040:	and	w9, w9, #0x1
  406044:	mov	w0, w9
  406048:	sxtw	x8, w0
  40604c:	cbz	x8, 406070 <save_context+0x11c>
  406050:	mov	w8, wzr
  406054:	mov	w0, w8
  406058:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40605c:	add	x1, x1, #0xa88
  406060:	ldr	x2, [sp, #32]
  406064:	mov	w3, #0x344                 	// #836
  406068:	ldr	x4, [sp, #24]
  40606c:	bl	402e58 <log_assert_failed_realm@plt>
  406070:	stur	wzr, [x29, #-28]
  406074:	ldur	w8, [x29, #-28]
  406078:	mov	w9, w8
  40607c:	ldur	x10, [x29, #-24]
  406080:	ldr	x10, [x10, #8]
  406084:	cmp	x9, x10
  406088:	b.cs	4061a4 <save_context+0x250>  // b.hs, b.nlast
  40608c:	ldur	x8, [x29, #-24]
  406090:	ldr	x8, [x8]
  406094:	ldur	w9, [x29, #-28]
  406098:	mov	w10, w9
  40609c:	mov	x11, #0x10                  	// #16
  4060a0:	mul	x10, x11, x10
  4060a4:	add	x8, x8, x10
  4060a8:	stur	x8, [x29, #-64]
  4060ac:	stur	wzr, [x29, #-32]
  4060b0:	ldur	w8, [x29, #-32]
  4060b4:	mov	w9, w8
  4060b8:	cmp	x9, #0xa
  4060bc:	b.cs	406194 <save_context+0x240>  // b.hs, b.nlast
  4060c0:	ldur	x8, [x29, #-64]
  4060c4:	ldr	x8, [x8]
  4060c8:	ldur	x9, [x29, #-64]
  4060cc:	ldr	x9, [x9, #8]
  4060d0:	ldrb	w10, [x8, x9]
  4060d4:	cmp	w10, #0x0
  4060d8:	cset	w10, eq  // eq = none
  4060dc:	mov	w11, #0x1                   	// #1
  4060e0:	eor	w10, w10, #0x1
  4060e4:	eor	w10, w10, w11
  4060e8:	eor	w10, w10, w11
  4060ec:	and	w10, w10, #0x1
  4060f0:	mov	w0, w10
  4060f4:	sxtw	x8, w0
  4060f8:	cbz	x8, 40611c <save_context+0x1c8>
  4060fc:	mov	w8, wzr
  406100:	mov	w0, w8
  406104:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406108:	add	x1, x1, #0xaa6
  40610c:	ldr	x2, [sp, #32]
  406110:	mov	w3, #0x351                 	// #849
  406114:	ldr	x4, [sp, #24]
  406118:	bl	402e58 <log_assert_failed_realm@plt>
  40611c:	ldur	x8, [x29, #-64]
  406120:	ldr	x0, [x8]
  406124:	ldur	w9, [x29, #-32]
  406128:	mov	w8, w9
  40612c:	mov	x10, #0x8                   	// #8
  406130:	mul	x8, x10, x8
  406134:	adrp	x10, 40c000 <_fini+0xb20>
  406138:	add	x10, x10, #0xd58
  40613c:	add	x8, x10, x8
  406140:	ldr	x1, [x8]
  406144:	bl	406378 <startswith>
  406148:	str	x0, [sp, #72]
  40614c:	ldr	x8, [sp, #72]
  406150:	cbz	x8, 406184 <save_context+0x230>
  406154:	ldr	x8, [sp, #72]
  406158:	ldur	x9, [x29, #-16]
  40615c:	ldur	w10, [x29, #-32]
  406160:	mov	w11, w10
  406164:	mov	x12, #0x8                   	// #8
  406168:	mul	x11, x12, x11
  40616c:	add	x9, x9, x11
  406170:	str	x8, [x9]
  406174:	ldur	w10, [x29, #-36]
  406178:	add	w10, w10, #0x1
  40617c:	stur	w10, [x29, #-36]
  406180:	b	406194 <save_context+0x240>
  406184:	ldur	w8, [x29, #-32]
  406188:	add	w8, w8, #0x1
  40618c:	stur	w8, [x29, #-32]
  406190:	b	4060b0 <save_context+0x15c>
  406194:	ldur	w8, [x29, #-28]
  406198:	add	w8, w8, #0x1
  40619c:	stur	w8, [x29, #-28]
  4061a0:	b	406074 <save_context+0x120>
  4061a4:	ldur	x8, [x29, #-16]
  4061a8:	ldr	x8, [x8]
  4061ac:	cbnz	x8, 40623c <save_context+0x2e8>
  4061b0:	mov	w8, #0x3                   	// #3
  4061b4:	str	w8, [sp, #68]
  4061b8:	mov	w8, #0x16                  	// #22
  4061bc:	movk	w8, #0x4000, lsl #16
  4061c0:	str	w8, [sp, #64]
  4061c4:	str	wzr, [sp, #60]
  4061c8:	ldr	w0, [sp, #60]
  4061cc:	bl	402d78 <log_get_max_level_realm@plt>
  4061d0:	ldr	w8, [sp, #68]
  4061d4:	and	w8, w8, #0x7
  4061d8:	cmp	w0, w8
  4061dc:	b.lt	406214 <save_context+0x2c0>  // b.tstop
  4061e0:	ldr	w8, [sp, #60]
  4061e4:	ldr	w9, [sp, #68]
  4061e8:	orr	w0, w9, w8, lsl #10
  4061ec:	ldr	w1, [sp, #64]
  4061f0:	ldr	x2, [sp, #32]
  4061f4:	mov	w3, #0x35e                 	// #862
  4061f8:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  4061fc:	add	x4, x4, #0xad5
  406200:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  406204:	add	x5, x5, #0xae2
  406208:	bl	402d88 <log_internal_realm@plt>
  40620c:	str	w0, [sp, #20]
  406210:	b	406228 <save_context+0x2d4>
  406214:	ldr	w0, [sp, #64]
  406218:	bl	402d98 <abs@plt>
  40621c:	mov	w8, wzr
  406220:	subs	w8, w8, w0, uxtb
  406224:	str	w8, [sp, #20]
  406228:	ldr	w8, [sp, #20]
  40622c:	str	w8, [sp, #56]
  406230:	ldr	w8, [sp, #56]
  406234:	stur	w8, [x29, #-4]
  406238:	b	406368 <save_context+0x414>
  40623c:	ldur	x8, [x29, #-16]
  406240:	ldr	x0, [x8]
  406244:	ldur	x8, [x29, #-16]
  406248:	add	x1, x8, #0x50
  40624c:	bl	4030a8 <parse_pid@plt>
  406250:	stur	w0, [x29, #-52]
  406254:	ldur	w9, [x29, #-52]
  406258:	cmp	w9, #0x0
  40625c:	cset	w9, ge  // ge = tcont
  406260:	tbnz	w9, #0, 4062f4 <save_context+0x3a0>
  406264:	mov	w8, #0x3                   	// #3
  406268:	str	w8, [sp, #52]
  40626c:	ldur	w8, [x29, #-52]
  406270:	str	w8, [sp, #48]
  406274:	str	wzr, [sp, #44]
  406278:	ldr	w0, [sp, #44]
  40627c:	bl	402d78 <log_get_max_level_realm@plt>
  406280:	ldr	w8, [sp, #52]
  406284:	and	w8, w8, #0x7
  406288:	cmp	w0, w8
  40628c:	b.lt	4062cc <save_context+0x378>  // b.tstop
  406290:	ldr	w8, [sp, #44]
  406294:	ldr	w9, [sp, #52]
  406298:	orr	w0, w9, w8, lsl #10
  40629c:	ldr	w1, [sp, #48]
  4062a0:	ldur	x10, [x29, #-16]
  4062a4:	ldr	x6, [x10]
  4062a8:	ldr	x2, [sp, #32]
  4062ac:	mov	w3, #0x362                 	// #866
  4062b0:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  4062b4:	add	x4, x4, #0xad5
  4062b8:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  4062bc:	add	x5, x5, #0xb0d
  4062c0:	bl	402d88 <log_internal_realm@plt>
  4062c4:	str	w0, [sp, #16]
  4062c8:	b	4062e0 <save_context+0x38c>
  4062cc:	ldr	w0, [sp, #48]
  4062d0:	bl	402d98 <abs@plt>
  4062d4:	mov	w8, wzr
  4062d8:	subs	w8, w8, w0, uxtb
  4062dc:	str	w8, [sp, #16]
  4062e0:	ldr	w8, [sp, #16]
  4062e4:	str	w8, [sp, #40]
  4062e8:	ldr	w8, [sp, #40]
  4062ec:	stur	w8, [x29, #-4]
  4062f0:	b	406368 <save_context+0x414>
  4062f4:	ldur	x8, [x29, #-16]
  4062f8:	ldr	x8, [x8, #72]
  4062fc:	stur	x8, [x29, #-48]
  406300:	ldur	x8, [x29, #-16]
  406304:	ldr	x0, [x8]
  406308:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40630c:	add	x1, x1, #0xb2a
  406310:	bl	403088 <strcmp@plt>
  406314:	mov	w9, #0x1                   	// #1
  406318:	str	w9, [sp, #12]
  40631c:	cbz	w0, 406334 <save_context+0x3e0>
  406320:	ldur	x0, [x29, #-48]
  406324:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406328:	add	x1, x1, #0xb2c
  40632c:	bl	403c7c <streq_ptr>
  406330:	str	w0, [sp, #12]
  406334:	ldr	w8, [sp, #12]
  406338:	ldur	x9, [x29, #-16]
  40633c:	mov	w10, #0x1                   	// #1
  406340:	and	w8, w8, w10
  406344:	strb	w8, [x9, #84]
  406348:	ldur	x0, [x29, #-48]
  40634c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406350:	add	x1, x1, #0xb37
  406354:	bl	403c7c <streq_ptr>
  406358:	ldur	x9, [x29, #-16]
  40635c:	and	w8, w0, #0x1
  406360:	strb	w8, [x9, #85]
  406364:	stur	wzr, [x29, #-4]
  406368:	ldur	w0, [x29, #-4]
  40636c:	ldp	x29, x30, [sp, #144]
  406370:	add	sp, sp, #0xa0
  406374:	ret

0000000000406378 <startswith>:
  406378:	sub	sp, sp, #0x30
  40637c:	stp	x29, x30, [sp, #32]
  406380:	add	x29, sp, #0x20
  406384:	str	x0, [sp, #16]
  406388:	str	x1, [sp, #8]
  40638c:	ldr	x0, [sp, #8]
  406390:	bl	402e48 <strlen@plt>
  406394:	str	x0, [sp]
  406398:	ldr	x0, [sp, #16]
  40639c:	ldr	x1, [sp, #8]
  4063a0:	ldr	x2, [sp]
  4063a4:	bl	4030b8 <strncmp@plt>
  4063a8:	cbnz	w0, 4063c0 <startswith+0x48>
  4063ac:	ldr	x8, [sp, #16]
  4063b0:	ldr	x9, [sp]
  4063b4:	add	x8, x8, x9
  4063b8:	stur	x8, [x29, #-8]
  4063bc:	b	4063c8 <startswith+0x50>
  4063c0:	mov	x8, xzr
  4063c4:	stur	x8, [x29, #-8]
  4063c8:	ldur	x0, [x29, #-8]
  4063cc:	ldp	x29, x30, [sp, #32]
  4063d0:	add	sp, sp, #0x30
  4063d4:	ret

00000000004063d8 <compose_open_fds>:
  4063d8:	stp	x29, x30, [sp, #-16]!
  4063dc:	mov	x29, sp
  4063e0:	sub	sp, sp, #0xd0
  4063e4:	mov	x8, xzr
  4063e8:	mov	w9, #0xffffffff            	// #-1
  4063ec:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  4063f0:	add	x10, x10, #0xdc1
  4063f4:	adrp	x11, 40b000 <vacuum_candidate_freep+0x20>
  4063f8:	add	x11, x11, #0x500
  4063fc:	add	x11, x11, #0x3
  406400:	adrp	x12, 40b000 <vacuum_candidate_freep+0x20>
  406404:	add	x12, x12, #0xdcb
  406408:	stur	w0, [x29, #-8]
  40640c:	stur	x1, [x29, #-16]
  406410:	stur	x8, [x29, #-24]
  406414:	stur	w9, [x29, #-28]
  406418:	stur	x8, [x29, #-40]
  40641c:	stur	x8, [x29, #-48]
  406420:	stur	x10, [x29, #-56]
  406424:	stur	x8, [x29, #-72]
  406428:	stur	xzr, [x29, #-80]
  40642c:	stur	x11, [x29, #-184]
  406430:	stur	x12, [x29, #-192]
  406434:	ldur	w8, [x29, #-8]
  406438:	cmp	w8, #0x0
  40643c:	cset	w8, ge  // ge = tcont
  406440:	mov	w9, #0x1                   	// #1
  406444:	eor	w8, w8, #0x1
  406448:	eor	w8, w8, w9
  40644c:	eor	w8, w8, w9
  406450:	and	w8, w8, #0x1
  406454:	mov	w0, w8
  406458:	sxtw	x10, w0
  40645c:	cbz	x10, 406480 <compose_open_fds+0xa8>
  406460:	mov	w8, wzr
  406464:	mov	w0, w8
  406468:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40646c:	add	x1, x1, #0xdc2
  406470:	ldur	x2, [x29, #-184]
  406474:	mov	w3, #0x220                 	// #544
  406478:	ldur	x4, [x29, #-192]
  40647c:	bl	402e58 <log_assert_failed_realm@plt>
  406480:	ldur	x8, [x29, #-16]
  406484:	cmp	x8, #0x0
  406488:	cset	w9, ne  // ne = any
  40648c:	mov	w10, #0x1                   	// #1
  406490:	eor	w9, w9, #0x1
  406494:	eor	w9, w9, w10
  406498:	eor	w9, w9, w10
  40649c:	and	w9, w9, #0x1
  4064a0:	mov	w0, w9
  4064a4:	sxtw	x8, w0
  4064a8:	cbz	x8, 4064cc <compose_open_fds+0xf4>
  4064ac:	mov	w8, wzr
  4064b0:	mov	w0, w8
  4064b4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4064b8:	add	x1, x1, #0xdf0
  4064bc:	ldur	x2, [x29, #-184]
  4064c0:	mov	w3, #0x221                 	// #545
  4064c4:	ldur	x4, [x29, #-192]
  4064c8:	bl	402e58 <log_assert_failed_realm@plt>
  4064cc:	ldur	w8, [x29, #-8]
  4064d0:	stur	w8, [x29, #-88]
  4064d4:	ldur	w8, [x29, #-88]
  4064d8:	cbnz	w8, 4064ec <compose_open_fds+0x114>
  4064dc:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  4064e0:	add	x8, x8, #0xe01
  4064e4:	stur	x8, [x29, #-96]
  4064e8:	b	4065dc <compose_open_fds+0x204>
  4064ec:	mov	x8, #0x16                  	// #22
  4064f0:	stur	x8, [x29, #-104]
  4064f4:	ldur	x1, [x29, #-104]
  4064f8:	mov	x0, #0x1                   	// #1
  4064fc:	bl	405e84 <size_multiply_overflow>
  406500:	mov	w8, #0x1                   	// #1
  406504:	eor	w9, w0, #0x1
  406508:	eor	w9, w9, w8
  40650c:	eor	w9, w9, w8
  406510:	eor	w8, w9, w8
  406514:	and	w8, w8, #0x1
  406518:	mov	w1, w8
  40651c:	sxtw	x10, w1
  406520:	cbz	x10, 406544 <compose_open_fds+0x16c>
  406524:	mov	w8, wzr
  406528:	mov	w0, w8
  40652c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406530:	add	x1, x1, #0x860
  406534:	ldur	x2, [x29, #-184]
  406538:	mov	w3, #0x223                 	// #547
  40653c:	ldur	x4, [x29, #-192]
  406540:	bl	402e58 <log_assert_failed_realm@plt>
  406544:	ldur	x8, [x29, #-104]
  406548:	mov	x9, #0x1                   	// #1
  40654c:	mul	x8, x9, x8
  406550:	cmp	x8, #0x400, lsl #12
  406554:	cset	w10, ls  // ls = plast
  406558:	mov	w11, #0x1                   	// #1
  40655c:	eor	w10, w10, #0x1
  406560:	eor	w10, w10, w11
  406564:	eor	w10, w10, w11
  406568:	and	w10, w10, #0x1
  40656c:	mov	w0, w10
  406570:	sxtw	x8, w0
  406574:	cbz	x8, 406598 <compose_open_fds+0x1c0>
  406578:	mov	w8, wzr
  40657c:	mov	w0, w8
  406580:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406584:	add	x1, x1, #0x8af
  406588:	ldur	x2, [x29, #-184]
  40658c:	mov	w3, #0x223                 	// #547
  406590:	ldur	x4, [x29, #-192]
  406594:	bl	402e58 <log_assert_failed_realm@plt>
  406598:	ldur	x8, [x29, #-104]
  40659c:	mov	x9, #0x1                   	// #1
  4065a0:	mul	x8, x9, x8
  4065a4:	mul	x8, x8, x9
  4065a8:	add	x8, x8, #0xf
  4065ac:	and	x8, x8, #0xfffffffffffffff0
  4065b0:	mov	x9, sp
  4065b4:	subs	x8, x9, x8
  4065b8:	mov	sp, x8
  4065bc:	stur	x8, [x29, #-112]
  4065c0:	ldur	x8, [x29, #-112]
  4065c4:	stur	x8, [x29, #-96]
  4065c8:	ldur	x0, [x29, #-96]
  4065cc:	ldur	w2, [x29, #-88]
  4065d0:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4065d4:	add	x1, x1, #0xe0f
  4065d8:	bl	403058 <sprintf@plt>
  4065dc:	ldur	x8, [x29, #-96]
  4065e0:	stur	x8, [x29, #-120]
  4065e4:	ldur	x8, [x29, #-120]
  4065e8:	stur	x8, [x29, #-64]
  4065ec:	ldur	x0, [x29, #-64]
  4065f0:	bl	4030c8 <opendir@plt>
  4065f4:	stur	x0, [x29, #-24]
  4065f8:	ldur	x8, [x29, #-24]
  4065fc:	cbnz	x8, 406620 <compose_open_fds+0x248>
  406600:	bl	402f18 <__errno_location@plt>
  406604:	ldr	w8, [x0]
  406608:	mov	w9, wzr
  40660c:	subs	w8, w9, w8
  406610:	stur	w8, [x29, #-4]
  406614:	mov	w8, #0x1                   	// #1
  406618:	stur	w8, [x29, #-124]
  40661c:	b	406958 <compose_open_fds+0x580>
  406620:	ldur	x0, [x29, #-24]
  406624:	bl	4030d8 <dirfd@plt>
  406628:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  40662c:	add	x1, x1, #0xe1b
  406630:	mov	w2, #0xc000                	// #49152
  406634:	movk	w2, #0x28, lsl #16
  406638:	bl	4030e8 <openat64@plt>
  40663c:	stur	w0, [x29, #-28]
  406640:	ldur	w8, [x29, #-28]
  406644:	cmp	w8, #0x0
  406648:	cset	w8, ge  // ge = tcont
  40664c:	tbnz	w8, #0, 406670 <compose_open_fds+0x298>
  406650:	bl	402f18 <__errno_location@plt>
  406654:	ldr	w8, [x0]
  406658:	mov	w9, wzr
  40665c:	subs	w8, w9, w8
  406660:	stur	w8, [x29, #-4]
  406664:	mov	w8, #0x1                   	// #1
  406668:	stur	w8, [x29, #-124]
  40666c:	b	406958 <compose_open_fds+0x580>
  406670:	sub	x0, x29, #0x28
  406674:	sub	x1, x29, #0x50
  406678:	bl	4030f8 <open_memstream_unlocked@plt>
  40667c:	stur	x0, [x29, #-48]
  406680:	ldur	x8, [x29, #-48]
  406684:	cbnz	x8, 40669c <compose_open_fds+0x2c4>
  406688:	mov	w8, #0xfffffff4            	// #-12
  40668c:	stur	w8, [x29, #-4]
  406690:	mov	w8, #0x1                   	// #1
  406694:	stur	w8, [x29, #-124]
  406698:	b	406958 <compose_open_fds+0x580>
  40669c:	bl	402f18 <__errno_location@plt>
  4066a0:	str	wzr, [x0]
  4066a4:	ldur	x0, [x29, #-24]
  4066a8:	bl	403108 <readdir64@plt>
  4066ac:	stur	x0, [x29, #-72]
  4066b0:	ldur	x8, [x29, #-72]
  4066b4:	cbnz	x8, 4066f0 <compose_open_fds+0x318>
  4066b8:	bl	402f18 <__errno_location@plt>
  4066bc:	ldr	w8, [x0]
  4066c0:	cmp	w8, #0x0
  4066c4:	cset	w8, le
  4066c8:	tbnz	w8, #0, 4066ec <compose_open_fds+0x314>
  4066cc:	bl	402f18 <__errno_location@plt>
  4066d0:	ldr	w8, [x0]
  4066d4:	mov	w9, wzr
  4066d8:	subs	w8, w9, w8
  4066dc:	stur	w8, [x29, #-4]
  4066e0:	mov	w8, #0x1                   	// #1
  4066e4:	stur	w8, [x29, #-124]
  4066e8:	b	406958 <compose_open_fds+0x580>
  4066ec:	b	4068e0 <compose_open_fds+0x508>
  4066f0:	ldur	x8, [x29, #-72]
  4066f4:	add	x0, x8, #0x13
  4066f8:	bl	403118 <hidden_or_backup_file@plt>
  4066fc:	tbnz	w0, #0, 406704 <compose_open_fds+0x32c>
  406700:	b	406708 <compose_open_fds+0x330>
  406704:	b	4068c8 <compose_open_fds+0x4f0>
  406708:	mov	x8, xzr
  40670c:	stur	x8, [x29, #-136]
  406710:	sub	x2, x29, #0x90
  406714:	stur	x8, [x29, #-144]
  406718:	ldur	x0, [x29, #-24]
  40671c:	stur	x2, [x29, #-200]
  406720:	bl	4030d8 <dirfd@plt>
  406724:	ldur	x8, [x29, #-72]
  406728:	add	x1, x8, #0x13
  40672c:	ldur	x2, [x29, #-200]
  406730:	bl	403128 <readlinkat_malloc@plt>
  406734:	stur	w0, [x29, #-84]
  406738:	ldur	w9, [x29, #-84]
  40673c:	cmp	w9, #0x0
  406740:	cset	w9, ge  // ge = tcont
  406744:	tbnz	w9, #0, 40675c <compose_open_fds+0x384>
  406748:	ldur	w8, [x29, #-84]
  40674c:	stur	w8, [x29, #-4]
  406750:	mov	w8, #0x1                   	// #1
  406754:	stur	w8, [x29, #-124]
  406758:	b	406898 <compose_open_fds+0x4c0>
  40675c:	ldur	x0, [x29, #-48]
  406760:	ldur	x2, [x29, #-56]
  406764:	ldur	x8, [x29, #-72]
  406768:	add	x3, x8, #0x13
  40676c:	ldur	x4, [x29, #-144]
  406770:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406774:	add	x1, x1, #0xe25
  406778:	bl	403138 <fprintf@plt>
  40677c:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  406780:	add	x8, x8, #0xe2e
  406784:	stur	x8, [x29, #-56]
  406788:	ldur	w9, [x29, #-28]
  40678c:	ldur	x8, [x29, #-72]
  406790:	add	x1, x8, #0x13
  406794:	mov	w0, w9
  406798:	mov	w2, #0x8000                	// #32768
  40679c:	movk	w2, #0x8, lsl #16
  4067a0:	bl	4030e8 <openat64@plt>
  4067a4:	stur	w0, [x29, #-148]
  4067a8:	ldur	w9, [x29, #-148]
  4067ac:	cmp	w9, #0x0
  4067b0:	cset	w9, ge  // ge = tcont
  4067b4:	tbnz	w9, #0, 4067c4 <compose_open_fds+0x3ec>
  4067b8:	mov	w8, #0xc                   	// #12
  4067bc:	stur	w8, [x29, #-124]
  4067c0:	b	406898 <compose_open_fds+0x4c0>
  4067c4:	ldur	w0, [x29, #-148]
  4067c8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4067cc:	add	x1, x1, #0xe30
  4067d0:	bl	403148 <fdopen@plt>
  4067d4:	stur	x0, [x29, #-136]
  4067d8:	ldur	x8, [x29, #-136]
  4067dc:	cbnz	x8, 4067f4 <compose_open_fds+0x41c>
  4067e0:	ldur	w0, [x29, #-148]
  4067e4:	bl	403158 <safe_close@plt>
  4067e8:	mov	w8, #0xc                   	// #12
  4067ec:	stur	w8, [x29, #-124]
  4067f0:	b	406898 <compose_open_fds+0x4c0>
  4067f4:	sub	x2, x29, #0xa0
  4067f8:	mov	x8, xzr
  4067fc:	stur	x8, [x29, #-160]
  406800:	ldur	x0, [x29, #-136]
  406804:	mov	x1, #0x100000              	// #1048576
  406808:	bl	406cb0 <read_line>
  40680c:	stur	w0, [x29, #-84]
  406810:	ldur	w9, [x29, #-84]
  406814:	cmp	w9, #0x0
  406818:	cset	w9, ge  // ge = tcont
  40681c:	tbnz	w9, #0, 406834 <compose_open_fds+0x45c>
  406820:	ldur	w8, [x29, #-84]
  406824:	stur	w8, [x29, #-4]
  406828:	mov	w8, #0x1                   	// #1
  40682c:	stur	w8, [x29, #-124]
  406830:	b	406868 <compose_open_fds+0x490>
  406834:	ldur	w8, [x29, #-84]
  406838:	cbnz	w8, 406848 <compose_open_fds+0x470>
  40683c:	mov	w8, #0xd                   	// #13
  406840:	stur	w8, [x29, #-124]
  406844:	b	406868 <compose_open_fds+0x490>
  406848:	ldur	x0, [x29, #-160]
  40684c:	ldur	x1, [x29, #-48]
  406850:	bl	403168 <fputs@plt>
  406854:	ldur	x1, [x29, #-48]
  406858:	mov	w8, #0xa                   	// #10
  40685c:	mov	w0, w8
  406860:	bl	403178 <fputc@plt>
  406864:	stur	wzr, [x29, #-124]
  406868:	sub	x0, x29, #0xa0
  40686c:	bl	405eec <freep>
  406870:	ldur	w8, [x29, #-124]
  406874:	stur	w8, [x29, #-204]
  406878:	cbz	w8, 406890 <compose_open_fds+0x4b8>
  40687c:	b	406880 <compose_open_fds+0x4a8>
  406880:	ldur	w8, [x29, #-204]
  406884:	cmp	w8, #0xd
  406888:	b.eq	406894 <compose_open_fds+0x4bc>  // b.none
  40688c:	b	406898 <compose_open_fds+0x4c0>
  406890:	b	4067f4 <compose_open_fds+0x41c>
  406894:	stur	wzr, [x29, #-124]
  406898:	sub	x0, x29, #0x90
  40689c:	bl	405eec <freep>
  4068a0:	sub	x0, x29, #0x88
  4068a4:	bl	406c88 <fclosep>
  4068a8:	ldur	w8, [x29, #-124]
  4068ac:	stur	w8, [x29, #-208]
  4068b0:	cbz	w8, 4068c8 <compose_open_fds+0x4f0>
  4068b4:	b	4068b8 <compose_open_fds+0x4e0>
  4068b8:	ldur	w8, [x29, #-208]
  4068bc:	cmp	w8, #0xc
  4068c0:	b.eq	4068c8 <compose_open_fds+0x4f0>  // b.none
  4068c4:	b	406958 <compose_open_fds+0x580>
  4068c8:	bl	402f18 <__errno_location@plt>
  4068cc:	str	wzr, [x0]
  4068d0:	ldur	x0, [x29, #-24]
  4068d4:	bl	403108 <readdir64@plt>
  4068d8:	stur	x0, [x29, #-72]
  4068dc:	b	4066b0 <compose_open_fds+0x2d8>
  4068e0:	bl	402f18 <__errno_location@plt>
  4068e4:	str	wzr, [x0]
  4068e8:	ldur	x0, [x29, #-48]
  4068ec:	bl	403188 <safe_fclose@plt>
  4068f0:	stur	x0, [x29, #-48]
  4068f4:	bl	402f18 <__errno_location@plt>
  4068f8:	ldr	w8, [x0]
  4068fc:	cmp	w8, #0x0
  406900:	cset	w8, le
  406904:	tbnz	w8, #0, 406928 <compose_open_fds+0x550>
  406908:	bl	402f18 <__errno_location@plt>
  40690c:	ldr	w8, [x0]
  406910:	mov	w9, wzr
  406914:	subs	w8, w9, w8
  406918:	stur	w8, [x29, #-4]
  40691c:	mov	w8, #0x1                   	// #1
  406920:	stur	w8, [x29, #-124]
  406924:	b	406958 <compose_open_fds+0x580>
  406928:	ldur	x8, [x29, #-40]
  40692c:	stur	x8, [x29, #-168]
  406930:	mov	x8, xzr
  406934:	stur	x8, [x29, #-40]
  406938:	ldur	x8, [x29, #-168]
  40693c:	stur	x8, [x29, #-176]
  406940:	ldur	x8, [x29, #-176]
  406944:	ldur	x9, [x29, #-16]
  406948:	str	x8, [x9]
  40694c:	stur	wzr, [x29, #-4]
  406950:	mov	w10, #0x1                   	// #1
  406954:	stur	w10, [x29, #-124]
  406958:	sub	x0, x29, #0x30
  40695c:	bl	406c88 <fclosep>
  406960:	sub	x0, x29, #0x28
  406964:	bl	405eec <freep>
  406968:	sub	x0, x29, #0x1c
  40696c:	bl	406c60 <closep>
  406970:	sub	x0, x29, #0x18
  406974:	bl	406c2c <closedirp>
  406978:	ldur	w0, [x29, #-4]
  40697c:	mov	sp, x29
  406980:	ldp	x29, x30, [sp], #16
  406984:	ret

0000000000406988 <read_full_file>:
  406988:	sub	sp, sp, #0x30
  40698c:	stp	x29, x30, [sp, #32]
  406990:	add	x29, sp, #0x20
  406994:	mov	w8, wzr
  406998:	stur	x0, [x29, #-8]
  40699c:	str	x1, [sp, #16]
  4069a0:	str	x2, [sp, #8]
  4069a4:	ldur	x0, [x29, #-8]
  4069a8:	ldr	x2, [sp, #16]
  4069ac:	ldr	x3, [sp, #8]
  4069b0:	mov	w1, w8
  4069b4:	bl	403198 <read_full_file_full@plt>
  4069b8:	ldp	x29, x30, [sp, #32]
  4069bc:	add	sp, sp, #0x30
  4069c0:	ret

00000000004069c4 <get_process_container_parent_cmdline>:
  4069c4:	stp	x29, x30, [sp, #-32]!
  4069c8:	stp	x28, x19, [sp, #16]
  4069cc:	mov	x29, sp
  4069d0:	sub	sp, sp, #0x150
  4069d4:	mov	x19, sp
  4069d8:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  4069dc:	add	x8, x8, #0xd82
  4069e0:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  4069e4:	add	x9, x9, #0x500
  4069e8:	add	x9, x9, #0x3
  4069ec:	sub	x10, x29, #0xa0
  4069f0:	stur	w0, [x29, #-8]
  4069f4:	stur	x1, [x29, #-16]
  4069f8:	stur	wzr, [x29, #-20]
  4069fc:	mov	x0, x8
  406a00:	mov	x1, x10
  406a04:	str	x9, [x19]
  406a08:	bl	40b4a0 <stat64>
  406a0c:	cmp	w0, #0x0
  406a10:	cset	w11, ge  // ge = tcont
  406a14:	tbnz	w11, #0, 406a30 <get_process_container_parent_cmdline+0x6c>
  406a18:	bl	402f18 <__errno_location@plt>
  406a1c:	ldr	w8, [x0]
  406a20:	mov	w9, wzr
  406a24:	subs	w8, w9, w8
  406a28:	stur	w8, [x29, #-4]
  406a2c:	b	406c18 <get_process_container_parent_cmdline+0x254>
  406a30:	ldur	w8, [x29, #-8]
  406a34:	str	w8, [x19, #44]
  406a38:	ldr	w8, [x19, #44]
  406a3c:	cbnz	w8, 406a50 <get_process_container_parent_cmdline+0x8c>
  406a40:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  406a44:	add	x8, x8, #0xe32
  406a48:	str	x8, [x19, #32]
  406a4c:	b	406b48 <get_process_container_parent_cmdline+0x184>
  406a50:	mov	x8, #0x18                  	// #24
  406a54:	str	x8, [x19, #24]
  406a58:	ldr	x1, [x19, #24]
  406a5c:	mov	x0, #0x1                   	// #1
  406a60:	bl	405e84 <size_multiply_overflow>
  406a64:	mov	w8, #0x1                   	// #1
  406a68:	eor	w9, w0, #0x1
  406a6c:	eor	w9, w9, w8
  406a70:	eor	w9, w9, w8
  406a74:	eor	w8, w9, w8
  406a78:	and	w8, w8, #0x1
  406a7c:	mov	w1, w8
  406a80:	sxtw	x10, w1
  406a84:	cbz	x10, 406aac <get_process_container_parent_cmdline+0xe8>
  406a88:	mov	w8, wzr
  406a8c:	mov	w0, w8
  406a90:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406a94:	add	x1, x1, #0x860
  406a98:	ldr	x2, [x19]
  406a9c:	mov	w3, #0x2a2                 	// #674
  406aa0:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  406aa4:	add	x4, x4, #0xe42
  406aa8:	bl	402e58 <log_assert_failed_realm@plt>
  406aac:	ldr	x8, [x19, #24]
  406ab0:	mov	x9, #0x1                   	// #1
  406ab4:	mul	x8, x9, x8
  406ab8:	cmp	x8, #0x400, lsl #12
  406abc:	cset	w10, ls  // ls = plast
  406ac0:	mov	w11, #0x1                   	// #1
  406ac4:	eor	w10, w10, #0x1
  406ac8:	eor	w10, w10, w11
  406acc:	eor	w10, w10, w11
  406ad0:	and	w10, w10, #0x1
  406ad4:	mov	w0, w10
  406ad8:	sxtw	x8, w0
  406adc:	cbz	x8, 406b04 <get_process_container_parent_cmdline+0x140>
  406ae0:	mov	w8, wzr
  406ae4:	mov	w0, w8
  406ae8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406aec:	add	x1, x1, #0x8af
  406af0:	ldr	x2, [x19]
  406af4:	mov	w3, #0x2a2                 	// #674
  406af8:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  406afc:	add	x4, x4, #0xe42
  406b00:	bl	402e58 <log_assert_failed_realm@plt>
  406b04:	ldr	x8, [x19, #24]
  406b08:	mov	x9, #0x1                   	// #1
  406b0c:	mul	x8, x9, x8
  406b10:	mul	x8, x8, x9
  406b14:	add	x8, x8, #0xf
  406b18:	and	x8, x8, #0xfffffffffffffff0
  406b1c:	mov	x9, sp
  406b20:	subs	x8, x9, x8
  406b24:	mov	sp, x8
  406b28:	str	x8, [x19, #16]
  406b2c:	ldr	x8, [x19, #16]
  406b30:	str	x8, [x19, #32]
  406b34:	ldr	x0, [x19, #32]
  406b38:	ldr	w2, [x19, #44]
  406b3c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406b40:	add	x1, x1, #0xe7b
  406b44:	bl	403058 <sprintf@plt>
  406b48:	ldr	x8, [x19, #32]
  406b4c:	str	x8, [x19, #8]
  406b50:	ldr	x8, [x19, #8]
  406b54:	stur	x8, [x29, #-32]
  406b58:	ldur	x0, [x29, #-32]
  406b5c:	add	x1, x19, #0x30
  406b60:	bl	40b4a0 <stat64>
  406b64:	cmp	w0, #0x0
  406b68:	cset	w9, ge  // ge = tcont
  406b6c:	tbnz	w9, #0, 406b88 <get_process_container_parent_cmdline+0x1c4>
  406b70:	bl	402f18 <__errno_location@plt>
  406b74:	ldr	w8, [x0]
  406b78:	mov	w9, wzr
  406b7c:	subs	w8, w9, w8
  406b80:	stur	w8, [x29, #-4]
  406b84:	b	406c18 <get_process_container_parent_cmdline+0x254>
  406b88:	ldr	x8, [x19, #56]
  406b8c:	ldur	x9, [x29, #-152]
  406b90:	cmp	x8, x9
  406b94:	b.ne	406bac <get_process_container_parent_cmdline+0x1e8>  // b.any
  406b98:	ldur	x8, [x29, #-16]
  406b9c:	mov	x9, xzr
  406ba0:	str	x9, [x8]
  406ba4:	stur	wzr, [x29, #-4]
  406ba8:	b	406c18 <get_process_container_parent_cmdline+0x254>
  406bac:	ldur	w0, [x29, #-8]
  406bb0:	sub	x1, x29, #0x18
  406bb4:	bl	406cec <get_mount_namespace_leader>
  406bb8:	stur	w0, [x29, #-20]
  406bbc:	ldur	w8, [x29, #-20]
  406bc0:	cmp	w8, #0x0
  406bc4:	cset	w8, ge  // ge = tcont
  406bc8:	tbnz	w8, #0, 406bd8 <get_process_container_parent_cmdline+0x214>
  406bcc:	ldur	w8, [x29, #-20]
  406bd0:	stur	w8, [x29, #-4]
  406bd4:	b	406c18 <get_process_container_parent_cmdline+0x254>
  406bd8:	ldur	w0, [x29, #-24]
  406bdc:	ldur	x3, [x29, #-16]
  406be0:	mov	x1, #0xffffffffffffffff    	// #-1
  406be4:	mov	w8, wzr
  406be8:	mov	w2, w8
  406bec:	bl	403038 <get_process_cmdline@plt>
  406bf0:	stur	w0, [x29, #-20]
  406bf4:	ldur	w8, [x29, #-20]
  406bf8:	cmp	w8, #0x0
  406bfc:	cset	w8, ge  // ge = tcont
  406c00:	tbnz	w8, #0, 406c10 <get_process_container_parent_cmdline+0x24c>
  406c04:	ldur	w8, [x29, #-20]
  406c08:	stur	w8, [x29, #-4]
  406c0c:	b	406c18 <get_process_container_parent_cmdline+0x254>
  406c10:	mov	w8, #0x1                   	// #1
  406c14:	stur	w8, [x29, #-4]
  406c18:	ldur	w0, [x29, #-4]
  406c1c:	mov	sp, x29
  406c20:	ldp	x28, x19, [sp, #16]
  406c24:	ldp	x29, x30, [sp], #32
  406c28:	ret

0000000000406c2c <closedirp>:
  406c2c:	sub	sp, sp, #0x20
  406c30:	stp	x29, x30, [sp, #16]
  406c34:	add	x29, sp, #0x10
  406c38:	str	x0, [sp, #8]
  406c3c:	ldr	x8, [sp, #8]
  406c40:	ldr	x8, [x8]
  406c44:	cbz	x8, 406c54 <closedirp+0x28>
  406c48:	ldr	x8, [sp, #8]
  406c4c:	ldr	x0, [x8]
  406c50:	bl	4031a8 <closedir@plt>
  406c54:	ldp	x29, x30, [sp, #16]
  406c58:	add	sp, sp, #0x20
  406c5c:	ret

0000000000406c60 <closep>:
  406c60:	sub	sp, sp, #0x20
  406c64:	stp	x29, x30, [sp, #16]
  406c68:	add	x29, sp, #0x10
  406c6c:	str	x0, [sp, #8]
  406c70:	ldr	x8, [sp, #8]
  406c74:	ldr	w0, [x8]
  406c78:	bl	403158 <safe_close@plt>
  406c7c:	ldp	x29, x30, [sp, #16]
  406c80:	add	sp, sp, #0x20
  406c84:	ret

0000000000406c88 <fclosep>:
  406c88:	sub	sp, sp, #0x20
  406c8c:	stp	x29, x30, [sp, #16]
  406c90:	add	x29, sp, #0x10
  406c94:	str	x0, [sp, #8]
  406c98:	ldr	x8, [sp, #8]
  406c9c:	ldr	x0, [x8]
  406ca0:	bl	403188 <safe_fclose@plt>
  406ca4:	ldp	x29, x30, [sp, #16]
  406ca8:	add	sp, sp, #0x20
  406cac:	ret

0000000000406cb0 <read_line>:
  406cb0:	sub	sp, sp, #0x30
  406cb4:	stp	x29, x30, [sp, #32]
  406cb8:	add	x29, sp, #0x20
  406cbc:	mov	w8, wzr
  406cc0:	stur	x0, [x29, #-8]
  406cc4:	str	x1, [sp, #16]
  406cc8:	str	x2, [sp, #8]
  406ccc:	ldur	x0, [x29, #-8]
  406cd0:	ldr	x1, [sp, #16]
  406cd4:	ldr	x3, [sp, #8]
  406cd8:	mov	w2, w8
  406cdc:	bl	4031b8 <read_line_full@plt>
  406ce0:	ldp	x29, x30, [sp, #32]
  406ce4:	add	sp, sp, #0x30
  406ce8:	ret

0000000000406cec <get_mount_namespace_leader>:
  406cec:	sub	sp, sp, #0x40
  406cf0:	stp	x29, x30, [sp, #48]
  406cf4:	add	x29, sp, #0x30
  406cf8:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  406cfc:	add	x8, x8, #0xe89
  406d00:	add	x2, sp, #0x10
  406d04:	stur	w0, [x29, #-8]
  406d08:	stur	x1, [x29, #-16]
  406d0c:	ldur	w9, [x29, #-8]
  406d10:	stur	w9, [x29, #-20]
  406d14:	str	wzr, [sp, #24]
  406d18:	str	wzr, [sp, #12]
  406d1c:	ldur	w0, [x29, #-8]
  406d20:	mov	x1, x8
  406d24:	bl	406e00 <get_process_ns>
  406d28:	str	w0, [sp, #12]
  406d2c:	ldr	w9, [sp, #12]
  406d30:	cmp	w9, #0x0
  406d34:	cset	w9, ge  // ge = tcont
  406d38:	tbnz	w9, #0, 406d48 <get_mount_namespace_leader+0x5c>
  406d3c:	ldr	w8, [sp, #12]
  406d40:	stur	w8, [x29, #-4]
  406d44:	b	406df0 <get_mount_namespace_leader+0x104>
  406d48:	ldur	w0, [x29, #-20]
  406d4c:	add	x1, sp, #0x18
  406d50:	bl	4031c8 <get_process_ppid@plt>
  406d54:	str	w0, [sp, #12]
  406d58:	ldr	w8, [sp, #12]
  406d5c:	cmp	w8, #0x0
  406d60:	cset	w8, ge  // ge = tcont
  406d64:	tbnz	w8, #0, 406d74 <get_mount_namespace_leader+0x88>
  406d68:	ldr	w8, [sp, #12]
  406d6c:	stur	w8, [x29, #-4]
  406d70:	b	406df0 <get_mount_namespace_leader+0x104>
  406d74:	ldr	w0, [sp, #24]
  406d78:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406d7c:	add	x1, x1, #0xe89
  406d80:	mov	x2, sp
  406d84:	bl	406e00 <get_process_ns>
  406d88:	str	w0, [sp, #12]
  406d8c:	ldr	w8, [sp, #12]
  406d90:	cmp	w8, #0x0
  406d94:	cset	w8, ge  // ge = tcont
  406d98:	tbnz	w8, #0, 406da8 <get_mount_namespace_leader+0xbc>
  406d9c:	ldr	w8, [sp, #12]
  406da0:	stur	w8, [x29, #-4]
  406da4:	b	406df0 <get_mount_namespace_leader+0x104>
  406da8:	ldr	x8, [sp, #16]
  406dac:	ldr	x9, [sp]
  406db0:	cmp	x8, x9
  406db4:	b.eq	406dbc <get_mount_namespace_leader+0xd0>  // b.none
  406db8:	b	406de0 <get_mount_namespace_leader+0xf4>
  406dbc:	ldr	w8, [sp, #24]
  406dc0:	cmp	w8, #0x1
  406dc4:	b.ne	406dd4 <get_mount_namespace_leader+0xe8>  // b.any
  406dc8:	mov	w8, #0xfffffffe            	// #-2
  406dcc:	stur	w8, [x29, #-4]
  406dd0:	b	406df0 <get_mount_namespace_leader+0x104>
  406dd4:	ldr	w8, [sp, #24]
  406dd8:	stur	w8, [x29, #-20]
  406ddc:	b	406d48 <get_mount_namespace_leader+0x5c>
  406de0:	ldr	w8, [sp, #24]
  406de4:	ldur	x9, [x29, #-16]
  406de8:	str	w8, [x9]
  406dec:	stur	wzr, [x29, #-4]
  406df0:	ldur	w0, [x29, #-4]
  406df4:	ldp	x29, x30, [sp, #48]
  406df8:	add	sp, sp, #0x40
  406dfc:	ret

0000000000406e00 <get_process_ns>:
  406e00:	stp	x29, x30, [sp, #-16]!
  406e04:	mov	x29, sp
  406e08:	sub	sp, sp, #0xe0
  406e0c:	sub	x8, x29, #0x20
  406e10:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  406e14:	add	x9, x9, #0x500
  406e18:	add	x9, x9, #0x3
  406e1c:	stur	w0, [x29, #-8]
  406e20:	str	x1, [x8, #16]
  406e24:	str	x2, [x8, #8]
  406e28:	ldur	w10, [x29, #-8]
  406e2c:	stur	w10, [x29, #-168]
  406e30:	ldur	w10, [x29, #-168]
  406e34:	stur	x8, [x29, #-216]
  406e38:	stur	x9, [x29, #-224]
  406e3c:	cbnz	w10, 406e50 <get_process_ns+0x50>
  406e40:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  406e44:	add	x8, x8, #0xe8d
  406e48:	stur	x8, [x29, #-176]
  406e4c:	b	406f48 <get_process_ns+0x148>
  406e50:	mov	x8, #0x16                  	// #22
  406e54:	stur	x8, [x29, #-184]
  406e58:	ldur	x1, [x29, #-184]
  406e5c:	mov	x0, #0x1                   	// #1
  406e60:	bl	405e84 <size_multiply_overflow>
  406e64:	mov	w8, #0x1                   	// #1
  406e68:	eor	w9, w0, #0x1
  406e6c:	eor	w9, w9, w8
  406e70:	eor	w9, w9, w8
  406e74:	eor	w8, w9, w8
  406e78:	and	w8, w8, #0x1
  406e7c:	mov	w1, w8
  406e80:	sxtw	x10, w1
  406e84:	cbz	x10, 406eac <get_process_ns+0xac>
  406e88:	mov	w8, wzr
  406e8c:	mov	w0, w8
  406e90:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406e94:	add	x1, x1, #0x860
  406e98:	ldur	x2, [x29, #-224]
  406e9c:	mov	w3, #0x265                 	// #613
  406ea0:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  406ea4:	add	x4, x4, #0xe9b
  406ea8:	bl	402e58 <log_assert_failed_realm@plt>
  406eac:	ldur	x8, [x29, #-184]
  406eb0:	mov	x9, #0x1                   	// #1
  406eb4:	mul	x8, x9, x8
  406eb8:	cmp	x8, #0x400, lsl #12
  406ebc:	cset	w10, ls  // ls = plast
  406ec0:	mov	w11, #0x1                   	// #1
  406ec4:	eor	w10, w10, #0x1
  406ec8:	eor	w10, w10, w11
  406ecc:	eor	w10, w10, w11
  406ed0:	and	w10, w10, #0x1
  406ed4:	mov	w0, w10
  406ed8:	sxtw	x8, w0
  406edc:	cbz	x8, 406f04 <get_process_ns+0x104>
  406ee0:	mov	w8, wzr
  406ee4:	mov	w0, w8
  406ee8:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406eec:	add	x1, x1, #0x8af
  406ef0:	ldur	x2, [x29, #-224]
  406ef4:	mov	w3, #0x265                 	// #613
  406ef8:	adrp	x4, 40b000 <vacuum_candidate_freep+0x20>
  406efc:	add	x4, x4, #0xe9b
  406f00:	bl	402e58 <log_assert_failed_realm@plt>
  406f04:	ldur	x8, [x29, #-184]
  406f08:	mov	x9, #0x1                   	// #1
  406f0c:	mul	x8, x9, x8
  406f10:	mul	x8, x8, x9
  406f14:	add	x8, x8, #0xf
  406f18:	and	x8, x8, #0xfffffffffffffff0
  406f1c:	mov	x9, sp
  406f20:	subs	x8, x9, x8
  406f24:	mov	sp, x8
  406f28:	stur	x8, [x29, #-192]
  406f2c:	ldur	x8, [x29, #-192]
  406f30:	stur	x8, [x29, #-176]
  406f34:	ldur	x0, [x29, #-176]
  406f38:	ldur	w2, [x29, #-168]
  406f3c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  406f40:	add	x1, x1, #0xecc
  406f44:	bl	403058 <sprintf@plt>
  406f48:	ldur	x8, [x29, #-176]
  406f4c:	stur	x8, [x29, #-200]
  406f50:	ldur	x8, [x29, #-200]
  406f54:	ldur	x9, [x29, #-216]
  406f58:	str	x8, [x9]
  406f5c:	ldr	x0, [x9]
  406f60:	mov	w1, #0x4000                	// #16384
  406f64:	movk	w1, #0x8, lsl #16
  406f68:	bl	4031d8 <open64@plt>
  406f6c:	stur	w0, [x29, #-164]
  406f70:	ldur	w10, [x29, #-164]
  406f74:	cmp	w10, #0x0
  406f78:	cset	w10, ge  // ge = tcont
  406f7c:	tbnz	w10, #0, 406fa0 <get_process_ns+0x1a0>
  406f80:	bl	402f18 <__errno_location@plt>
  406f84:	ldr	w8, [x0]
  406f88:	mov	w9, wzr
  406f8c:	subs	w8, w9, w8
  406f90:	stur	w8, [x29, #-4]
  406f94:	mov	w8, #0x1                   	// #1
  406f98:	stur	w8, [x29, #-204]
  406f9c:	b	407004 <get_process_ns+0x204>
  406fa0:	ldur	w0, [x29, #-164]
  406fa4:	ldur	x8, [x29, #-216]
  406fa8:	ldr	x1, [x8, #16]
  406fac:	sub	x2, x29, #0xa0
  406fb0:	mov	w9, wzr
  406fb4:	mov	w3, w9
  406fb8:	bl	40b4c0 <fstatat64>
  406fbc:	cmp	w0, #0x0
  406fc0:	cset	w9, ge  // ge = tcont
  406fc4:	tbnz	w9, #0, 406fe8 <get_process_ns+0x1e8>
  406fc8:	bl	402f18 <__errno_location@plt>
  406fcc:	ldr	w8, [x0]
  406fd0:	mov	w9, wzr
  406fd4:	subs	w8, w9, w8
  406fd8:	stur	w8, [x29, #-4]
  406fdc:	mov	w8, #0x1                   	// #1
  406fe0:	stur	w8, [x29, #-204]
  406fe4:	b	407004 <get_process_ns+0x204>
  406fe8:	ldur	x8, [x29, #-152]
  406fec:	ldur	x9, [x29, #-216]
  406ff0:	ldr	x10, [x9, #8]
  406ff4:	str	x8, [x10]
  406ff8:	stur	wzr, [x29, #-4]
  406ffc:	mov	w11, #0x1                   	// #1
  407000:	stur	w11, [x29, #-204]
  407004:	sub	x0, x29, #0xa4
  407008:	bl	406c60 <closep>
  40700c:	ldur	w0, [x29, #-4]
  407010:	mov	sp, x29
  407014:	ldp	x29, x30, [sp], #16
  407018:	ret

000000000040701c <submit_coredump>:
  40701c:	stp	x29, x30, [sp, #-32]!
  407020:	stp	x28, x19, [sp, #16]
  407024:	mov	x29, sp
  407028:	sub	sp, sp, #0x200
  40702c:	mov	x19, sp
  407030:	mov	w8, #0xffffffff            	// #-1
  407034:	mov	x9, xzr
  407038:	mov	x10, #0xffffffffffffffff    	// #-1
  40703c:	mov	w11, #0x0                   	// #0
  407040:	adrp	x12, 40b000 <vacuum_candidate_freep+0x20>
  407044:	add	x12, x12, #0x500
  407048:	add	x12, x12, #0x3
  40704c:	adrp	x13, 40b000 <vacuum_candidate_freep+0x20>
  407050:	add	x13, x13, #0xfdd
  407054:	adrp	x14, 40b000 <vacuum_candidate_freep+0x20>
  407058:	add	x14, x14, #0xf80
  40705c:	stur	x0, [x29, #-16]
  407060:	stur	x1, [x29, #-24]
  407064:	stur	w2, [x29, #-28]
  407068:	stur	w8, [x29, #-32]
  40706c:	stur	w8, [x29, #-36]
  407070:	stur	x9, [x29, #-48]
  407074:	stur	x9, [x29, #-56]
  407078:	stur	x9, [x29, #-64]
  40707c:	stur	x10, [x29, #-80]
  407080:	sturb	w11, [x29, #-81]
  407084:	str	x12, [x19, #96]
  407088:	str	x13, [x19, #88]
  40708c:	str	x14, [x19, #80]
  407090:	ldur	x8, [x29, #-16]
  407094:	cmp	x8, #0x0
  407098:	cset	w9, ne  // ne = any
  40709c:	mov	w10, #0x1                   	// #1
  4070a0:	eor	w9, w9, #0x1
  4070a4:	eor	w9, w9, w10
  4070a8:	eor	w9, w9, w10
  4070ac:	and	w9, w9, #0x1
  4070b0:	mov	w0, w9
  4070b4:	sxtw	x8, w0
  4070b8:	cbz	x8, 4070dc <submit_coredump+0xc0>
  4070bc:	mov	w8, wzr
  4070c0:	mov	w0, w8
  4070c4:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4070c8:	add	x1, x1, #0xa41
  4070cc:	ldr	x2, [x19, #96]
  4070d0:	mov	w3, #0x2de                 	// #734
  4070d4:	ldr	x4, [x19, #80]
  4070d8:	bl	402e58 <log_assert_failed_realm@plt>
  4070dc:	ldur	x8, [x29, #-24]
  4070e0:	cmp	x8, #0x0
  4070e4:	cset	w9, ne  // ne = any
  4070e8:	mov	w10, #0x1                   	// #1
  4070ec:	eor	w9, w9, #0x1
  4070f0:	eor	w9, w9, w10
  4070f4:	eor	w9, w9, w10
  4070f8:	and	w9, w9, #0x1
  4070fc:	mov	w0, w9
  407100:	sxtw	x8, w0
  407104:	cbz	x8, 407128 <submit_coredump+0x10c>
  407108:	mov	w8, wzr
  40710c:	mov	w0, w8
  407110:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407114:	add	x1, x1, #0xa83
  407118:	ldr	x2, [x19, #96]
  40711c:	mov	w3, #0x2df                 	// #735
  407120:	ldr	x4, [x19, #80]
  407124:	bl	402e58 <log_assert_failed_realm@plt>
  407128:	ldur	w8, [x29, #-28]
  40712c:	cmp	w8, #0x0
  407130:	cset	w8, ge  // ge = tcont
  407134:	mov	w9, #0x1                   	// #1
  407138:	eor	w8, w8, #0x1
  40713c:	eor	w8, w8, w9
  407140:	eor	w8, w8, w9
  407144:	and	w8, w8, #0x1
  407148:	mov	w0, w8
  40714c:	sxtw	x10, w0
  407150:	cbz	x10, 407174 <submit_coredump+0x158>
  407154:	mov	w8, wzr
  407158:	mov	w0, w8
  40715c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407160:	add	x1, x1, #0xfbc
  407164:	ldr	x2, [x19, #96]
  407168:	mov	w3, #0x2e0                 	// #736
  40716c:	ldr	x4, [x19, #80]
  407170:	bl	402e58 <log_assert_failed_realm@plt>
  407174:	adrp	x8, 420000 <arg_storage>
  407178:	add	x8, x8, #0x20
  40717c:	ldr	x1, [x8]
  407180:	adrp	x8, 420000 <arg_storage>
  407184:	add	x8, x8, #0x28
  407188:	ldr	x2, [x8]
  40718c:	mov	w0, #0xffffffff            	// #-1
  407190:	bl	40a514 <coredump_vacuum>
  407194:	ldur	x8, [x29, #-16]
  407198:	ldur	w1, [x29, #-28]
  40719c:	mov	x0, x8
  4071a0:	sub	x2, x29, #0x30
  4071a4:	sub	x3, x29, #0x24
  4071a8:	sub	x4, x29, #0x20
  4071ac:	sub	x5, x29, #0x50
  4071b0:	sub	x6, x29, #0x51
  4071b4:	bl	4081e8 <save_external_coredump>
  4071b8:	stur	w0, [x29, #-88]
  4071bc:	ldur	w9, [x29, #-88]
  4071c0:	cmp	w9, #0x0
  4071c4:	cset	w9, ge  // ge = tcont
  4071c8:	tbnz	w9, #0, 4071d0 <submit_coredump+0x1b4>
  4071cc:	b	4073b0 <submit_coredump+0x394>
  4071d0:	ldur	x0, [x29, #-48]
  4071d4:	ldur	x1, [x29, #-80]
  4071d8:	bl	408f40 <maybe_remove_external_coredump>
  4071dc:	stur	w0, [x29, #-88]
  4071e0:	ldur	w8, [x29, #-88]
  4071e4:	cmp	w8, #0x0
  4071e8:	cset	w8, ge  // ge = tcont
  4071ec:	tbnz	w8, #0, 407204 <submit_coredump+0x1e8>
  4071f0:	ldur	w8, [x29, #-88]
  4071f4:	stur	w8, [x29, #-4]
  4071f8:	mov	w8, #0x1                   	// #1
  4071fc:	stur	w8, [x29, #-92]
  407200:	b	407bcc <submit_coredump+0xbb0>
  407204:	ldur	w8, [x29, #-88]
  407208:	cbnz	w8, 407224 <submit_coredump+0x208>
  40720c:	ldur	x0, [x29, #-24]
  407210:	ldur	x2, [x29, #-48]
  407214:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407218:	add	x1, x1, #0xfca
  40721c:	bl	402e18 <iovw_put_string_field@plt>
  407220:	b	4072bc <submit_coredump+0x2a0>
  407224:	adrp	x8, 420000 <arg_storage>
  407228:	add	x8, x8, #0x0
  40722c:	ldr	w9, [x8]
  407230:	cmp	w9, #0x1
  407234:	b.ne	4072bc <submit_coredump+0x2a0>  // b.any
  407238:	mov	w8, #0x6                   	// #6
  40723c:	stur	w8, [x29, #-96]
  407240:	stur	wzr, [x29, #-100]
  407244:	stur	wzr, [x29, #-104]
  407248:	ldur	w0, [x29, #-104]
  40724c:	bl	402d78 <log_get_max_level_realm@plt>
  407250:	ldur	w8, [x29, #-96]
  407254:	and	w8, w8, #0x7
  407258:	cmp	w0, w8
  40725c:	b.lt	4072a0 <submit_coredump+0x284>  // b.tstop
  407260:	ldur	w8, [x29, #-104]
  407264:	ldur	w9, [x29, #-96]
  407268:	orr	w0, w9, w8, lsl #10
  40726c:	ldur	w1, [x29, #-100]
  407270:	ldur	x6, [x29, #-80]
  407274:	adrp	x10, 420000 <arg_storage>
  407278:	add	x10, x10, #0x10
  40727c:	ldr	x7, [x10]
  407280:	ldr	x2, [x19, #96]
  407284:	mov	w3, #0x2f7                 	// #759
  407288:	ldr	x4, [x19, #88]
  40728c:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  407290:	add	x5, x5, #0xfed
  407294:	bl	402d88 <log_internal_realm@plt>
  407298:	str	w0, [x19, #76]
  40729c:	b	4072b4 <submit_coredump+0x298>
  4072a0:	ldur	w0, [x29, #-100]
  4072a4:	bl	402d98 <abs@plt>
  4072a8:	mov	w8, wzr
  4072ac:	subs	w8, w8, w0, uxtb
  4072b0:	str	w8, [x19, #76]
  4072b4:	ldr	w8, [x19, #76]
  4072b8:	stur	w8, [x29, #-108]
  4072bc:	ldur	w8, [x29, #-36]
  4072c0:	cmp	w8, #0x0
  4072c4:	cset	w8, lt  // lt = tstop
  4072c8:	tbnz	w8, #0, 4072d8 <submit_coredump+0x2bc>
  4072cc:	ldur	w8, [x29, #-36]
  4072d0:	str	w8, [x19, #72]
  4072d4:	b	4072e0 <submit_coredump+0x2c4>
  4072d8:	ldur	w8, [x29, #-32]
  4072dc:	str	w8, [x19, #72]
  4072e0:	ldr	w8, [x19, #72]
  4072e4:	adrp	x9, 420000 <arg_storage>
  4072e8:	add	x9, x9, #0x20
  4072ec:	ldr	x1, [x9]
  4072f0:	adrp	x9, 420000 <arg_storage>
  4072f4:	add	x9, x9, #0x28
  4072f8:	ldr	x2, [x9]
  4072fc:	mov	w0, w8
  407300:	bl	40a514 <coredump_vacuum>
  407304:	ldur	x9, [x29, #-16]
  407308:	mov	x0, x9
  40730c:	bl	409078 <change_uid_gid>
  407310:	stur	w0, [x29, #-88]
  407314:	ldur	w8, [x29, #-88]
  407318:	cmp	w8, #0x0
  40731c:	cset	w8, ge  // ge = tcont
  407320:	tbnz	w8, #0, 4073b0 <submit_coredump+0x394>
  407324:	mov	w8, #0x3                   	// #3
  407328:	stur	w8, [x29, #-112]
  40732c:	ldur	w8, [x29, #-88]
  407330:	stur	w8, [x29, #-116]
  407334:	stur	wzr, [x29, #-120]
  407338:	ldur	w0, [x29, #-120]
  40733c:	bl	402d78 <log_get_max_level_realm@plt>
  407340:	ldur	w8, [x29, #-112]
  407344:	and	w8, w8, #0x7
  407348:	cmp	w0, w8
  40734c:	b.lt	407380 <submit_coredump+0x364>  // b.tstop
  407350:	ldur	w8, [x29, #-120]
  407354:	ldur	w9, [x29, #-112]
  407358:	orr	w0, w9, w8, lsl #10
  40735c:	ldur	w1, [x29, #-116]
  407360:	ldr	x2, [x19, #96]
  407364:	mov	w3, #0x303                 	// #771
  407368:	ldr	x4, [x19, #88]
  40736c:	adrp	x5, 40c000 <_fini+0xb20>
  407370:	add	x5, x5, #0x40
  407374:	bl	402d88 <log_internal_realm@plt>
  407378:	str	w0, [x19, #68]
  40737c:	b	407394 <submit_coredump+0x378>
  407380:	ldur	w0, [x29, #-116]
  407384:	bl	402d98 <abs@plt>
  407388:	mov	w8, wzr
  40738c:	subs	w8, w8, w0, uxtb
  407390:	str	w8, [x19, #68]
  407394:	ldr	w8, [x19, #68]
  407398:	stur	w8, [x29, #-124]
  40739c:	ldur	w8, [x29, #-124]
  4073a0:	stur	w8, [x29, #-4]
  4073a4:	mov	w8, #0x1                   	// #1
  4073a8:	stur	w8, [x29, #-92]
  4073ac:	b	407bcc <submit_coredump+0xbb0>
  4073b0:	sub	x8, x29, #0xc8
  4073b4:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  4073b8:	add	x9, x9, #0x83b
  4073bc:	stur	x9, [x29, #-200]
  4073c0:	ldur	x9, [x29, #-16]
  4073c4:	ldr	x9, [x9]
  4073c8:	str	x9, [x8, #8]
  4073cc:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  4073d0:	add	x9, x9, #0x844
  4073d4:	str	x9, [x8, #16]
  4073d8:	ldur	x9, [x29, #-16]
  4073dc:	ldr	x9, [x9, #56]
  4073e0:	str	x9, [x8, #24]
  4073e4:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  4073e8:	add	x9, x9, #0x847
  4073ec:	str	x9, [x8, #32]
  4073f0:	ldur	x9, [x29, #-16]
  4073f4:	ldr	x9, [x9, #8]
  4073f8:	str	x9, [x8, #40]
  4073fc:	adrp	x9, 40c000 <_fini+0xb20>
  407400:	add	x9, x9, #0x5e
  407404:	str	x9, [x8, #48]
  407408:	ldur	x9, [x29, #-16]
  40740c:	ldrb	w10, [x9, #85]
  407410:	mov	w11, #0x0                   	// #0
  407414:	str	x8, [x19, #56]
  407418:	str	w11, [x19, #52]
  40741c:	tbnz	w10, #0, 407424 <submit_coredump+0x408>
  407420:	b	407434 <submit_coredump+0x418>
  407424:	ldur	x8, [x29, #-48]
  407428:	cmp	x8, #0x0
  40742c:	cset	w9, ne  // ne = any
  407430:	str	w9, [x19, #52]
  407434:	ldr	w8, [x19, #52]
  407438:	adrp	x9, 40c000 <_fini+0xb20>
  40743c:	add	x9, x9, #0x6c
  407440:	mov	x10, xzr
  407444:	tst	w8, #0x1
  407448:	csel	x9, x9, x10, ne  // ne = any
  40744c:	ldr	x10, [x19, #56]
  407450:	str	x9, [x10, #56]
  407454:	sub	x9, x29, #0xc8
  407458:	ldur	x11, [x29, #-16]
  40745c:	ldrb	w8, [x11, #85]
  407460:	str	x9, [x19, #40]
  407464:	tbnz	w8, #0, 40746c <submit_coredump+0x450>
  407468:	b	407480 <submit_coredump+0x464>
  40746c:	ldur	x8, [x29, #-48]
  407470:	cbz	x8, 407480 <submit_coredump+0x464>
  407474:	ldur	x8, [x29, #-48]
  407478:	str	x8, [x19, #32]
  40747c:	b	407488 <submit_coredump+0x46c>
  407480:	mov	x8, xzr
  407484:	str	x8, [x19, #32]
  407488:	ldr	x8, [x19, #32]
  40748c:	ldr	x9, [x19, #40]
  407490:	str	x8, [x9, #64]
  407494:	stur	xzr, [x29, #-224]
  407498:	stur	xzr, [x29, #-232]
  40749c:	ldur	x8, [x29, #-232]
  4074a0:	mov	w9, #0x0                   	// #0
  4074a4:	cmp	x8, #0x9
  4074a8:	str	w9, [x19, #28]
  4074ac:	b.cs	4074d4 <submit_coredump+0x4b8>  // b.hs, b.nlast
  4074b0:	ldur	x8, [x29, #-232]
  4074b4:	mov	x9, #0x8                   	// #8
  4074b8:	mul	x8, x9, x8
  4074bc:	sub	x9, x29, #0xc8
  4074c0:	add	x8, x9, x8
  4074c4:	ldr	x8, [x8]
  4074c8:	cmp	x8, #0x0
  4074cc:	cset	w10, ne  // ne = any
  4074d0:	str	w10, [x19, #28]
  4074d4:	ldr	w8, [x19, #28]
  4074d8:	tbnz	w8, #0, 4074e0 <submit_coredump+0x4c4>
  4074dc:	b	407518 <submit_coredump+0x4fc>
  4074e0:	ldur	x8, [x29, #-232]
  4074e4:	mov	x9, #0x8                   	// #8
  4074e8:	mul	x8, x9, x8
  4074ec:	sub	x9, x29, #0xc8
  4074f0:	add	x8, x9, x8
  4074f4:	ldr	x0, [x8]
  4074f8:	bl	402e48 <strlen@plt>
  4074fc:	ldur	x8, [x29, #-224]
  407500:	add	x8, x8, x0
  407504:	stur	x8, [x29, #-224]
  407508:	ldur	x8, [x29, #-232]
  40750c:	add	x8, x8, #0x1
  407510:	stur	x8, [x29, #-232]
  407514:	b	40749c <submit_coredump+0x480>
  407518:	ldur	x8, [x29, #-224]
  40751c:	add	x8, x8, #0x1
  407520:	stur	x8, [x29, #-240]
  407524:	ldur	x1, [x29, #-240]
  407528:	mov	x0, #0x1                   	// #1
  40752c:	bl	405e84 <size_multiply_overflow>
  407530:	mov	w8, #0x1                   	// #1
  407534:	eor	w9, w0, #0x1
  407538:	eor	w9, w9, w8
  40753c:	eor	w9, w9, w8
  407540:	eor	w8, w9, w8
  407544:	and	w8, w8, #0x1
  407548:	mov	w1, w8
  40754c:	sxtw	x10, w1
  407550:	cbz	x10, 407574 <submit_coredump+0x558>
  407554:	mov	w8, wzr
  407558:	mov	w0, w8
  40755c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407560:	add	x1, x1, #0x860
  407564:	ldr	x2, [x19, #96]
  407568:	mov	w3, #0x314                 	// #788
  40756c:	ldr	x4, [x19, #80]
  407570:	bl	402e58 <log_assert_failed_realm@plt>
  407574:	ldur	x8, [x29, #-240]
  407578:	mov	x9, #0x1                   	// #1
  40757c:	mul	x8, x9, x8
  407580:	cmp	x8, #0x400, lsl #12
  407584:	cset	w10, ls  // ls = plast
  407588:	mov	w11, #0x1                   	// #1
  40758c:	eor	w10, w10, #0x1
  407590:	eor	w10, w10, w11
  407594:	eor	w10, w10, w11
  407598:	and	w10, w10, #0x1
  40759c:	mov	w0, w10
  4075a0:	sxtw	x8, w0
  4075a4:	cbz	x8, 4075c8 <submit_coredump+0x5ac>
  4075a8:	mov	w8, wzr
  4075ac:	mov	w0, w8
  4075b0:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4075b4:	add	x1, x1, #0x8af
  4075b8:	ldr	x2, [x19, #96]
  4075bc:	mov	w3, #0x314                 	// #788
  4075c0:	ldr	x4, [x19, #80]
  4075c4:	bl	402e58 <log_assert_failed_realm@plt>
  4075c8:	ldur	x8, [x29, #-240]
  4075cc:	mov	x9, #0x1                   	// #1
  4075d0:	mul	x8, x9, x8
  4075d4:	mul	x8, x8, x9
  4075d8:	add	x8, x8, #0xf
  4075dc:	and	x8, x8, #0xfffffffffffffff0
  4075e0:	mov	x9, sp
  4075e4:	subs	x8, x9, x8
  4075e8:	mov	sp, x8
  4075ec:	stur	x8, [x29, #-248]
  4075f0:	ldur	x8, [x29, #-248]
  4075f4:	stur	x8, [x29, #-208]
  4075f8:	stur	x8, [x29, #-216]
  4075fc:	stur	xzr, [x29, #-232]
  407600:	ldur	x8, [x29, #-232]
  407604:	mov	w9, #0x0                   	// #0
  407608:	cmp	x8, #0x9
  40760c:	str	w9, [x19, #24]
  407610:	b.cs	407638 <submit_coredump+0x61c>  // b.hs, b.nlast
  407614:	ldur	x8, [x29, #-232]
  407618:	mov	x9, #0x8                   	// #8
  40761c:	mul	x8, x9, x8
  407620:	sub	x9, x29, #0xc8
  407624:	add	x8, x9, x8
  407628:	ldr	x8, [x8]
  40762c:	cmp	x8, #0x0
  407630:	cset	w10, ne  // ne = any
  407634:	str	w10, [x19, #24]
  407638:	ldr	w8, [x19, #24]
  40763c:	tbnz	w8, #0, 407644 <submit_coredump+0x628>
  407640:	b	407678 <submit_coredump+0x65c>
  407644:	ldur	x0, [x29, #-216]
  407648:	ldur	x8, [x29, #-232]
  40764c:	mov	x9, #0x8                   	// #8
  407650:	mul	x8, x9, x8
  407654:	sub	x9, x29, #0xc8
  407658:	add	x8, x9, x8
  40765c:	ldr	x1, [x8]
  407660:	bl	402e68 <stpcpy@plt>
  407664:	stur	x0, [x29, #-216]
  407668:	ldur	x8, [x29, #-232]
  40766c:	add	x8, x8, #0x1
  407670:	stur	x8, [x29, #-232]
  407674:	b	407600 <submit_coredump+0x5e4>
  407678:	ldur	x8, [x29, #-216]
  40767c:	mov	w9, #0x0                   	// #0
  407680:	strb	w9, [x8]
  407684:	ldur	x8, [x29, #-208]
  407688:	str	x8, [x19, #256]
  40768c:	ldr	x8, [x19, #256]
  407690:	stur	x8, [x29, #-72]
  407694:	ldur	x8, [x29, #-72]
  407698:	add	x10, x19, #0xe8
  40769c:	str	x8, [x19, #232]
  4076a0:	ldur	x8, [x29, #-64]
  4076a4:	mov	x11, xzr
  4076a8:	adrp	x12, 40c000 <_fini+0xb20>
  4076ac:	add	x12, x12, #0x83
  4076b0:	cmp	x8, #0x0
  4076b4:	csel	x8, x12, x11, ne  // ne = any
  4076b8:	str	x8, [x10, #8]
  4076bc:	ldur	x8, [x29, #-64]
  4076c0:	str	x8, [x10, #16]
  4076c4:	str	xzr, [x19, #208]
  4076c8:	str	xzr, [x19, #200]
  4076cc:	ldr	x8, [x19, #200]
  4076d0:	mov	w9, #0x0                   	// #0
  4076d4:	cmp	x8, #0x3
  4076d8:	str	w9, [x19, #20]
  4076dc:	b.cs	407704 <submit_coredump+0x6e8>  // b.hs, b.nlast
  4076e0:	ldr	x8, [x19, #200]
  4076e4:	mov	x9, #0x8                   	// #8
  4076e8:	mul	x8, x9, x8
  4076ec:	add	x9, x19, #0xe8
  4076f0:	add	x8, x9, x8
  4076f4:	ldr	x8, [x8]
  4076f8:	cmp	x8, #0x0
  4076fc:	cset	w10, ne  // ne = any
  407700:	str	w10, [x19, #20]
  407704:	ldr	w8, [x19, #20]
  407708:	tbnz	w8, #0, 407710 <submit_coredump+0x6f4>
  40770c:	b	407748 <submit_coredump+0x72c>
  407710:	ldr	x8, [x19, #200]
  407714:	mov	x9, #0x8                   	// #8
  407718:	mul	x8, x9, x8
  40771c:	add	x9, x19, #0xe8
  407720:	add	x8, x9, x8
  407724:	ldr	x0, [x8]
  407728:	bl	402e48 <strlen@plt>
  40772c:	ldr	x8, [x19, #208]
  407730:	add	x8, x8, x0
  407734:	str	x8, [x19, #208]
  407738:	ldr	x8, [x19, #200]
  40773c:	add	x8, x8, #0x1
  407740:	str	x8, [x19, #200]
  407744:	b	4076cc <submit_coredump+0x6b0>
  407748:	ldr	x8, [x19, #208]
  40774c:	add	x8, x8, #0x1
  407750:	str	x8, [x19, #192]
  407754:	ldr	x1, [x19, #192]
  407758:	mov	x0, #0x1                   	// #1
  40775c:	bl	405e84 <size_multiply_overflow>
  407760:	mov	w8, #0x1                   	// #1
  407764:	eor	w9, w0, #0x1
  407768:	eor	w9, w9, w8
  40776c:	eor	w9, w9, w8
  407770:	eor	w8, w9, w8
  407774:	and	w8, w8, #0x1
  407778:	mov	w1, w8
  40777c:	sxtw	x10, w1
  407780:	cbz	x10, 4077a4 <submit_coredump+0x788>
  407784:	mov	w8, wzr
  407788:	mov	w0, w8
  40778c:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407790:	add	x1, x1, #0x860
  407794:	ldr	x2, [x19, #96]
  407798:	mov	w3, #0x316                 	// #790
  40779c:	ldr	x4, [x19, #80]
  4077a0:	bl	402e58 <log_assert_failed_realm@plt>
  4077a4:	ldr	x8, [x19, #192]
  4077a8:	mov	x9, #0x1                   	// #1
  4077ac:	mul	x8, x9, x8
  4077b0:	cmp	x8, #0x400, lsl #12
  4077b4:	cset	w10, ls  // ls = plast
  4077b8:	mov	w11, #0x1                   	// #1
  4077bc:	eor	w10, w10, #0x1
  4077c0:	eor	w10, w10, w11
  4077c4:	eor	w10, w10, w11
  4077c8:	and	w10, w10, #0x1
  4077cc:	mov	w0, w10
  4077d0:	sxtw	x8, w0
  4077d4:	cbz	x8, 4077f8 <submit_coredump+0x7dc>
  4077d8:	mov	w8, wzr
  4077dc:	mov	w0, w8
  4077e0:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4077e4:	add	x1, x1, #0x8af
  4077e8:	ldr	x2, [x19, #96]
  4077ec:	mov	w3, #0x316                 	// #790
  4077f0:	ldr	x4, [x19, #80]
  4077f4:	bl	402e58 <log_assert_failed_realm@plt>
  4077f8:	ldr	x8, [x19, #192]
  4077fc:	mov	x9, #0x1                   	// #1
  407800:	mul	x8, x9, x8
  407804:	mul	x8, x8, x9
  407808:	add	x8, x8, #0xf
  40780c:	and	x8, x8, #0xfffffffffffffff0
  407810:	mov	x9, sp
  407814:	subs	x8, x9, x8
  407818:	mov	sp, x8
  40781c:	str	x8, [x19, #184]
  407820:	ldr	x8, [x19, #184]
  407824:	str	x8, [x19, #224]
  407828:	str	x8, [x19, #216]
  40782c:	str	xzr, [x19, #200]
  407830:	ldr	x8, [x19, #200]
  407834:	mov	w9, #0x0                   	// #0
  407838:	cmp	x8, #0x3
  40783c:	str	w9, [x19, #16]
  407840:	b.cs	407868 <submit_coredump+0x84c>  // b.hs, b.nlast
  407844:	ldr	x8, [x19, #200]
  407848:	mov	x9, #0x8                   	// #8
  40784c:	mul	x8, x9, x8
  407850:	add	x9, x19, #0xe8
  407854:	add	x8, x9, x8
  407858:	ldr	x8, [x8]
  40785c:	cmp	x8, #0x0
  407860:	cset	w10, ne  // ne = any
  407864:	str	w10, [x19, #16]
  407868:	ldr	w8, [x19, #16]
  40786c:	tbnz	w8, #0, 407874 <submit_coredump+0x858>
  407870:	b	4078a8 <submit_coredump+0x88c>
  407874:	ldr	x0, [x19, #216]
  407878:	ldr	x8, [x19, #200]
  40787c:	mov	x9, #0x8                   	// #8
  407880:	mul	x8, x9, x8
  407884:	add	x9, x19, #0xe8
  407888:	add	x8, x9, x8
  40788c:	ldr	x1, [x8]
  407890:	bl	402e68 <stpcpy@plt>
  407894:	str	x0, [x19, #216]
  407898:	ldr	x8, [x19, #200]
  40789c:	add	x8, x8, #0x1
  4078a0:	str	x8, [x19, #200]
  4078a4:	b	407830 <submit_coredump+0x814>
  4078a8:	ldr	x8, [x19, #216]
  4078ac:	mov	w9, #0x0                   	// #0
  4078b0:	strb	w9, [x8]
  4078b4:	ldr	x8, [x19, #224]
  4078b8:	str	x8, [x19, #176]
  4078bc:	ldr	x8, [x19, #176]
  4078c0:	stur	x8, [x29, #-72]
  4078c4:	ldur	x8, [x29, #-16]
  4078c8:	ldrb	w9, [x8, #85]
  4078cc:	tbnz	w9, #0, 4078d4 <submit_coredump+0x8b8>
  4078d0:	b	40792c <submit_coredump+0x910>
  4078d4:	ldur	x8, [x29, #-72]
  4078d8:	sub	sp, sp, #0x10
  4078dc:	mov	w0, #0x3                   	// #3
  4078e0:	mov	w9, wzr
  4078e4:	mov	w1, w9
  4078e8:	ldr	x2, [x19, #96]
  4078ec:	mov	w3, #0x31b                 	// #795
  4078f0:	ldr	x4, [x19, #88]
  4078f4:	mov	x10, xzr
  4078f8:	mov	x5, x10
  4078fc:	mov	x6, x10
  407900:	mov	x7, x10
  407904:	mov	x11, sp
  407908:	str	x10, [x11]
  40790c:	mov	x10, sp
  407910:	str	x8, [x10, #8]
  407914:	bl	4031e8 <log_dispatch_internal@plt>
  407918:	add	sp, sp, #0x10
  40791c:	stur	wzr, [x29, #-4]
  407920:	mov	w9, #0x1                   	// #1
  407924:	stur	w9, [x29, #-92]
  407928:	b	407bcc <submit_coredump+0xbb0>
  40792c:	ldur	x0, [x29, #-24]
  407930:	ldur	x2, [x29, #-72]
  407934:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407938:	add	x1, x1, #0x8ce
  40793c:	bl	402e18 <iovw_put_string_field@plt>
  407940:	ldurb	w8, [x29, #-81]
  407944:	tbnz	w8, #0, 40794c <submit_coredump+0x930>
  407948:	b	407964 <submit_coredump+0x948>
  40794c:	ldur	x0, [x29, #-24]
  407950:	adrp	x1, 40c000 <_fini+0xb20>
  407954:	add	x1, x1, #0x86
  407958:	adrp	x2, 40b000 <vacuum_candidate_freep+0x20>
  40795c:	add	x2, x2, #0xb2a
  407960:	bl	402e18 <iovw_put_string_field@plt>
  407964:	adrp	x8, 420000 <arg_storage>
  407968:	add	x8, x8, #0x0
  40796c:	ldr	w9, [x8]
  407970:	cmp	w9, #0x2
  407974:	b.ne	407af4 <submit_coredump+0xad8>  // b.any
  407978:	ldur	x8, [x29, #-80]
  40797c:	adrp	x9, 420000 <arg_storage>
  407980:	add	x9, x9, #0x18
  407984:	ldr	x9, [x9]
  407988:	cmp	x8, x9
  40798c:	b.hi	407a70 <submit_coredump+0xa54>  // b.pmore
  407990:	add	x3, x19, #0xa8
  407994:	str	xzr, [x19, #168]
  407998:	ldur	w0, [x29, #-32]
  40799c:	ldur	x1, [x29, #-80]
  4079a0:	sub	x2, x29, #0x38
  4079a4:	bl	4091fc <allocate_journal_field>
  4079a8:	stur	w0, [x29, #-88]
  4079ac:	ldur	w8, [x29, #-88]
  4079b0:	cmp	w8, #0x0
  4079b4:	cset	w8, lt  // lt = tstop
  4079b8:	tbnz	w8, #0, 4079f4 <submit_coredump+0x9d8>
  4079bc:	ldur	x0, [x29, #-24]
  4079c0:	ldur	x1, [x29, #-56]
  4079c4:	ldr	x2, [x19, #168]
  4079c8:	bl	402e78 <iovw_put@plt>
  4079cc:	cmp	w0, #0x0
  4079d0:	cset	w8, lt  // lt = tstop
  4079d4:	tbnz	w8, #0, 4079f0 <submit_coredump+0x9d4>
  4079d8:	ldur	x8, [x29, #-56]
  4079dc:	str	x8, [x19, #160]
  4079e0:	mov	x8, xzr
  4079e4:	stur	x8, [x29, #-56]
  4079e8:	ldr	x8, [x19, #160]
  4079ec:	str	x8, [x19, #152]
  4079f0:	b	407a6c <submit_coredump+0xa50>
  4079f4:	mov	w8, #0x4                   	// #4
  4079f8:	str	w8, [x19, #148]
  4079fc:	ldur	w8, [x29, #-88]
  407a00:	str	w8, [x19, #144]
  407a04:	str	wzr, [x19, #140]
  407a08:	ldr	w0, [x19, #140]
  407a0c:	bl	402d78 <log_get_max_level_realm@plt>
  407a10:	ldr	w8, [x19, #148]
  407a14:	and	w8, w8, #0x7
  407a18:	cmp	w0, w8
  407a1c:	b.lt	407a50 <submit_coredump+0xa34>  // b.tstop
  407a20:	ldr	w8, [x19, #140]
  407a24:	ldr	w9, [x19, #148]
  407a28:	orr	w0, w9, w8, lsl #10
  407a2c:	ldr	w1, [x19, #144]
  407a30:	ldr	x2, [x19, #96]
  407a34:	mov	w3, #0x330                 	// #816
  407a38:	ldr	x4, [x19, #88]
  407a3c:	adrp	x5, 40c000 <_fini+0xb20>
  407a40:	add	x5, x5, #0x9a
  407a44:	bl	402d88 <log_internal_realm@plt>
  407a48:	str	w0, [x19, #12]
  407a4c:	b	407a64 <submit_coredump+0xa48>
  407a50:	ldr	w0, [x19, #144]
  407a54:	bl	402d98 <abs@plt>
  407a58:	mov	w8, wzr
  407a5c:	subs	w8, w8, w0, uxtb
  407a60:	str	w8, [x19, #12]
  407a64:	ldr	w8, [x19, #12]
  407a68:	str	w8, [x19, #136]
  407a6c:	b	407af4 <submit_coredump+0xad8>
  407a70:	mov	w8, #0x6                   	// #6
  407a74:	str	w8, [x19, #132]
  407a78:	str	wzr, [x19, #128]
  407a7c:	str	wzr, [x19, #124]
  407a80:	ldr	w0, [x19, #124]
  407a84:	bl	402d78 <log_get_max_level_realm@plt>
  407a88:	ldr	w8, [x19, #132]
  407a8c:	and	w8, w8, #0x7
  407a90:	cmp	w0, w8
  407a94:	b.lt	407ad8 <submit_coredump+0xabc>  // b.tstop
  407a98:	ldr	w8, [x19, #124]
  407a9c:	ldr	w9, [x19, #132]
  407aa0:	orr	w0, w9, w8, lsl #10
  407aa4:	ldr	w1, [x19, #128]
  407aa8:	ldur	x6, [x29, #-80]
  407aac:	adrp	x10, 420000 <arg_storage>
  407ab0:	add	x10, x10, #0x18
  407ab4:	ldr	x7, [x10]
  407ab8:	ldr	x2, [x19, #96]
  407abc:	mov	w3, #0x333                 	// #819
  407ac0:	ldr	x4, [x19, #88]
  407ac4:	adrp	x5, 40b000 <vacuum_candidate_freep+0x20>
  407ac8:	add	x5, x5, #0xfed
  407acc:	bl	402d88 <log_internal_realm@plt>
  407ad0:	str	w0, [x19, #8]
  407ad4:	b	407aec <submit_coredump+0xad0>
  407ad8:	ldr	w0, [x19, #128]
  407adc:	bl	402d98 <abs@plt>
  407ae0:	mov	w8, wzr
  407ae4:	subs	w8, w8, w0, uxtb
  407ae8:	str	w8, [x19, #8]
  407aec:	ldr	w8, [x19, #8]
  407af0:	str	w8, [x19, #120]
  407af4:	ldur	x8, [x29, #-24]
  407af8:	ldr	x3, [x8]
  407afc:	ldur	x8, [x29, #-24]
  407b00:	ldr	x8, [x8, #8]
  407b04:	adrp	x0, 40b000 <vacuum_candidate_freep+0x20>
  407b08:	add	x0, x0, #0x8d7
  407b0c:	adrp	x1, 40c000 <_fini+0xb20>
  407b10:	add	x1, x1, #0xcd
  407b14:	ldr	x2, [x19, #88]
  407b18:	mov	w4, w8
  407b1c:	bl	402e88 <sd_journal_sendv_with_location@plt>
  407b20:	stur	w0, [x29, #-88]
  407b24:	ldur	w8, [x29, #-88]
  407b28:	cmp	w8, #0x0
  407b2c:	cset	w8, ge  // ge = tcont
  407b30:	tbnz	w8, #0, 407bc0 <submit_coredump+0xba4>
  407b34:	mov	w8, #0x3                   	// #3
  407b38:	str	w8, [x19, #116]
  407b3c:	ldur	w8, [x29, #-88]
  407b40:	str	w8, [x19, #112]
  407b44:	str	wzr, [x19, #108]
  407b48:	ldr	w0, [x19, #108]
  407b4c:	bl	402d78 <log_get_max_level_realm@plt>
  407b50:	ldr	w8, [x19, #116]
  407b54:	and	w8, w8, #0x7
  407b58:	cmp	w0, w8
  407b5c:	b.lt	407b90 <submit_coredump+0xb74>  // b.tstop
  407b60:	ldr	w8, [x19, #108]
  407b64:	ldr	w9, [x19, #116]
  407b68:	orr	w0, w9, w8, lsl #10
  407b6c:	ldr	w1, [x19, #112]
  407b70:	ldr	x2, [x19, #96]
  407b74:	mov	w3, #0x338                 	// #824
  407b78:	ldr	x4, [x19, #88]
  407b7c:	adrp	x5, 40c000 <_fini+0xb20>
  407b80:	add	x5, x5, #0xdb
  407b84:	bl	402d88 <log_internal_realm@plt>
  407b88:	str	w0, [x19, #4]
  407b8c:	b	407ba4 <submit_coredump+0xb88>
  407b90:	ldr	w0, [x19, #112]
  407b94:	bl	402d98 <abs@plt>
  407b98:	mov	w8, wzr
  407b9c:	subs	w8, w8, w0, uxtb
  407ba0:	str	w8, [x19, #4]
  407ba4:	ldr	w8, [x19, #4]
  407ba8:	str	w8, [x19, #104]
  407bac:	ldr	w8, [x19, #104]
  407bb0:	stur	w8, [x29, #-4]
  407bb4:	mov	w8, #0x1                   	// #1
  407bb8:	stur	w8, [x29, #-92]
  407bbc:	b	407bcc <submit_coredump+0xbb0>
  407bc0:	stur	wzr, [x29, #-4]
  407bc4:	mov	w8, #0x1                   	// #1
  407bc8:	stur	w8, [x29, #-92]
  407bcc:	sub	x0, x29, #0x40
  407bd0:	bl	405eec <freep>
  407bd4:	sub	x0, x29, #0x38
  407bd8:	bl	405eec <freep>
  407bdc:	sub	x0, x29, #0x30
  407be0:	bl	405eec <freep>
  407be4:	sub	x0, x29, #0x24
  407be8:	bl	406c60 <closep>
  407bec:	sub	x0, x29, #0x20
  407bf0:	bl	406c60 <closep>
  407bf4:	ldur	w0, [x29, #-4]
  407bf8:	mov	sp, x29
  407bfc:	ldp	x28, x19, [sp, #16]
  407c00:	ldp	x29, x30, [sp], #32
  407c04:	ret

0000000000407c08 <send_iovec>:
  407c08:	sub	sp, sp, #0x160
  407c0c:	stp	x29, x30, [sp, #320]
  407c10:	str	x28, [sp, #336]
  407c14:	add	x29, sp, #0x140
  407c18:	sub	x8, x29, #0x98
  407c1c:	mov	w9, #0xffffffff            	// #-1
  407c20:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  407c24:	add	x10, x10, #0x500
  407c28:	add	x10, x10, #0x3
  407c2c:	adrp	x11, 40c000 <_fini+0xb20>
  407c30:	add	x11, x11, #0x85c
  407c34:	adrp	x12, 40c000 <_fini+0xb20>
  407c38:	add	x12, x12, #0x82a
  407c3c:	str	x0, [x8, #136]
  407c40:	stur	w1, [x29, #-20]
  407c44:	stur	w9, [x29, #-24]
  407c48:	str	x8, [sp, #64]
  407c4c:	str	x10, [sp, #56]
  407c50:	str	x11, [sp, #48]
  407c54:	str	x12, [sp, #40]
  407c58:	ldr	x8, [sp, #64]
  407c5c:	ldr	x9, [x8, #136]
  407c60:	cmp	x9, #0x0
  407c64:	cset	w10, ne  // ne = any
  407c68:	mov	w11, #0x1                   	// #1
  407c6c:	eor	w10, w10, #0x1
  407c70:	eor	w10, w10, w11
  407c74:	eor	w10, w10, w11
  407c78:	and	w10, w10, #0x1
  407c7c:	mov	w0, w10
  407c80:	sxtw	x9, w0
  407c84:	cbz	x9, 407ca8 <send_iovec+0xa0>
  407c88:	mov	w8, wzr
  407c8c:	mov	w0, w8
  407c90:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407c94:	add	x1, x1, #0xa83
  407c98:	ldr	x2, [sp, #56]
  407c9c:	mov	w3, #0x3e2                 	// #994
  407ca0:	ldr	x4, [sp, #40]
  407ca4:	bl	402e58 <log_assert_failed_realm@plt>
  407ca8:	ldur	w8, [x29, #-20]
  407cac:	cmp	w8, #0x0
  407cb0:	cset	w8, ge  // ge = tcont
  407cb4:	mov	w9, #0x1                   	// #1
  407cb8:	eor	w8, w8, #0x1
  407cbc:	eor	w8, w8, w9
  407cc0:	eor	w8, w8, w9
  407cc4:	and	w8, w8, #0x1
  407cc8:	mov	w0, w8
  407ccc:	sxtw	x10, w0
  407cd0:	cbz	x10, 407cf4 <send_iovec+0xec>
  407cd4:	mov	w8, wzr
  407cd8:	mov	w0, w8
  407cdc:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  407ce0:	add	x1, x1, #0xfbc
  407ce4:	ldr	x2, [sp, #56]
  407ce8:	mov	w3, #0x3e3                 	// #995
  407cec:	ldr	x4, [sp, #40]
  407cf0:	bl	402e58 <log_assert_failed_realm@plt>
  407cf4:	mov	w0, #0x1                   	// #1
  407cf8:	mov	w1, #0x5                   	// #5
  407cfc:	movk	w1, #0x8, lsl #16
  407d00:	mov	w8, wzr
  407d04:	mov	w2, w8
  407d08:	bl	4031f8 <socket@plt>
  407d0c:	stur	w0, [x29, #-24]
  407d10:	ldur	w8, [x29, #-24]
  407d14:	cmp	w8, #0x0
  407d18:	cset	w8, ge  // ge = tcont
  407d1c:	tbnz	w8, #0, 407db0 <send_iovec+0x1a8>
  407d20:	mov	w8, #0x3                   	// #3
  407d24:	stur	w8, [x29, #-40]
  407d28:	bl	402f18 <__errno_location@plt>
  407d2c:	ldr	w8, [x0]
  407d30:	stur	w8, [x29, #-44]
  407d34:	stur	wzr, [x29, #-48]
  407d38:	ldur	w0, [x29, #-48]
  407d3c:	bl	402d78 <log_get_max_level_realm@plt>
  407d40:	ldur	w8, [x29, #-40]
  407d44:	and	w8, w8, #0x7
  407d48:	cmp	w0, w8
  407d4c:	b.lt	407d80 <send_iovec+0x178>  // b.tstop
  407d50:	ldur	w8, [x29, #-48]
  407d54:	ldur	w9, [x29, #-40]
  407d58:	orr	w0, w9, w8, lsl #10
  407d5c:	ldur	w1, [x29, #-44]
  407d60:	ldr	x2, [sp, #56]
  407d64:	mov	w3, #0x3e7                 	// #999
  407d68:	ldr	x4, [sp, #48]
  407d6c:	adrp	x5, 40c000 <_fini+0xb20>
  407d70:	add	x5, x5, #0x867
  407d74:	bl	402d88 <log_internal_realm@plt>
  407d78:	str	w0, [sp, #36]
  407d7c:	b	407d94 <send_iovec+0x18c>
  407d80:	ldur	w0, [x29, #-44]
  407d84:	bl	402d98 <abs@plt>
  407d88:	mov	w8, wzr
  407d8c:	subs	w8, w8, w0, uxtb
  407d90:	str	w8, [sp, #36]
  407d94:	ldr	w8, [sp, #36]
  407d98:	stur	w8, [x29, #-52]
  407d9c:	ldur	w8, [x29, #-52]
  407da0:	stur	w8, [x29, #-4]
  407da4:	mov	w8, #0x1                   	// #1
  407da8:	stur	w8, [x29, #-56]
  407dac:	b	4081cc <send_iovec+0x5c4>
  407db0:	ldur	w0, [x29, #-24]
  407db4:	adrp	x8, 40c000 <_fini+0xb20>
  407db8:	add	x8, x8, #0xdf8
  407dbc:	ldr	x9, [sp, #64]
  407dc0:	str	x8, [x9, #88]
  407dc4:	str	x8, [x9, #80]
  407dc8:	str	w0, [sp, #32]
  407dcc:	ldr	x8, [sp, #64]
  407dd0:	ldr	x9, [x8, #80]
  407dd4:	ldrh	w10, [x9]
  407dd8:	cmp	w10, #0x1
  407ddc:	cset	w10, eq  // eq = none
  407de0:	mov	w11, #0x1                   	// #1
  407de4:	eor	w10, w10, #0x1
  407de8:	eor	w10, w10, w11
  407dec:	eor	w10, w10, w11
  407df0:	and	w10, w10, #0x1
  407df4:	mov	w0, w10
  407df8:	sxtw	x9, w0
  407dfc:	cbz	x9, 407e20 <send_iovec+0x218>
  407e00:	mov	w8, wzr
  407e04:	mov	w0, w8
  407e08:	adrp	x1, 40c000 <_fini+0xb20>
  407e0c:	add	x1, x1, #0x88c
  407e10:	ldr	x2, [sp, #56]
  407e14:	mov	w3, #0x3e9                 	// #1001
  407e18:	ldr	x4, [sp, #40]
  407e1c:	bl	402e58 <log_assert_failed_realm@plt>
  407e20:	ldr	x8, [sp, #64]
  407e24:	ldr	x9, [x8, #80]
  407e28:	ldrb	w10, [x9, #2]
  407e2c:	cbnz	w10, 407e50 <send_iovec+0x248>
  407e30:	ldr	x8, [sp, #64]
  407e34:	ldr	x9, [x8, #80]
  407e38:	add	x0, x9, #0x3
  407e3c:	mov	x1, #0x6b                  	// #107
  407e40:	bl	403208 <strnlen@plt>
  407e44:	add	x8, x0, #0x1
  407e48:	str	x8, [sp, #24]
  407e4c:	b	407e6c <send_iovec+0x264>
  407e50:	ldr	x8, [sp, #64]
  407e54:	ldr	x9, [x8, #80]
  407e58:	add	x0, x9, #0x2
  407e5c:	mov	x1, #0x6c                  	// #108
  407e60:	bl	403208 <strnlen@plt>
  407e64:	add	x8, x0, #0x1
  407e68:	str	x8, [sp, #24]
  407e6c:	ldr	x8, [sp, #24]
  407e70:	add	x8, x8, #0x2
  407e74:	ldr	x9, [sp, #64]
  407e78:	str	x8, [x9, #72]
  407e7c:	ldr	x8, [x9, #72]
  407e80:	ldr	x1, [x9, #88]
  407e84:	ldr	w0, [sp, #32]
  407e88:	mov	w2, w8
  407e8c:	bl	403218 <connect@plt>
  407e90:	cmp	w0, #0x0
  407e94:	cset	w8, ge  // ge = tcont
  407e98:	tbnz	w8, #0, 407f2c <send_iovec+0x324>
  407e9c:	mov	w8, #0x3                   	// #3
  407ea0:	stur	w8, [x29, #-84]
  407ea4:	bl	402f18 <__errno_location@plt>
  407ea8:	ldr	w8, [x0]
  407eac:	stur	w8, [x29, #-88]
  407eb0:	stur	wzr, [x29, #-92]
  407eb4:	ldur	w0, [x29, #-92]
  407eb8:	bl	402d78 <log_get_max_level_realm@plt>
  407ebc:	ldur	w8, [x29, #-84]
  407ec0:	and	w8, w8, #0x7
  407ec4:	cmp	w0, w8
  407ec8:	b.lt	407efc <send_iovec+0x2f4>  // b.tstop
  407ecc:	ldur	w8, [x29, #-92]
  407ed0:	ldur	w9, [x29, #-84]
  407ed4:	orr	w0, w9, w8, lsl #10
  407ed8:	ldur	w1, [x29, #-88]
  407edc:	ldr	x2, [sp, #56]
  407ee0:	mov	w3, #0x3ea                 	// #1002
  407ee4:	ldr	x4, [sp, #48]
  407ee8:	adrp	x5, 40c000 <_fini+0xb20>
  407eec:	add	x5, x5, #0x8a7
  407ef0:	bl	402d88 <log_internal_realm@plt>
  407ef4:	str	w0, [sp, #20]
  407ef8:	b	407f10 <send_iovec+0x308>
  407efc:	ldur	w0, [x29, #-88]
  407f00:	bl	402d98 <abs@plt>
  407f04:	mov	w8, wzr
  407f08:	subs	w8, w8, w0, uxtb
  407f0c:	str	w8, [sp, #20]
  407f10:	ldr	w8, [sp, #20]
  407f14:	stur	w8, [x29, #-96]
  407f18:	ldur	w8, [x29, #-96]
  407f1c:	stur	w8, [x29, #-4]
  407f20:	mov	w8, #0x1                   	// #1
  407f24:	stur	w8, [x29, #-56]
  407f28:	b	4081cc <send_iovec+0x5c4>
  407f2c:	ldr	x8, [sp, #64]
  407f30:	str	xzr, [x8, #120]
  407f34:	ldr	x8, [sp, #64]
  407f38:	ldr	x9, [x8, #120]
  407f3c:	ldr	x10, [x8, #136]
  407f40:	ldr	x10, [x10, #8]
  407f44:	cmp	x9, x10
  407f48:	b.cs	4080f8 <send_iovec+0x4f0>  // b.hs, b.nlast
  407f4c:	sub	x8, x29, #0x98
  407f50:	mov	x9, xzr
  407f54:	stur	x9, [x29, #-152]
  407f58:	stur	wzr, [x29, #-144]
  407f5c:	mov	x10, #0x10                  	// #16
  407f60:	ldr	x11, [sp, #64]
  407f64:	ldr	x12, [x11, #136]
  407f68:	ldr	x12, [x12]
  407f6c:	ldr	x13, [x11, #120]
  407f70:	mul	x10, x10, x13
  407f74:	add	x10, x12, x10
  407f78:	str	x10, [x8, #16]
  407f7c:	mov	x10, #0x1                   	// #1
  407f80:	stur	x10, [x29, #-128]
  407f84:	str	x9, [x8, #32]
  407f88:	str	xzr, [x11, #40]
  407f8c:	stur	wzr, [x29, #-104]
  407f90:	ldur	w0, [x29, #-24]
  407f94:	sub	x1, x29, #0x98
  407f98:	mov	w2, #0x4000                	// #16384
  407f9c:	bl	403228 <sendmsg@plt>
  407fa0:	cmp	x0, #0x0
  407fa4:	cset	w8, lt  // lt = tstop
  407fa8:	tbnz	w8, #0, 407fb0 <send_iovec+0x3a8>
  407fac:	b	4080e4 <send_iovec+0x4dc>
  407fb0:	bl	402f18 <__errno_location@plt>
  407fb4:	ldr	w8, [x0]
  407fb8:	cmp	w8, #0x5a
  407fbc:	b.ne	408054 <send_iovec+0x44c>  // b.any
  407fc0:	sub	x8, x29, #0x98
  407fc4:	ldr	x8, [x8, #16]
  407fc8:	ldr	x8, [x8, #8]
  407fcc:	cmp	x8, #0x0
  407fd0:	cset	w9, ls  // ls = plast
  407fd4:	tbnz	w9, #0, 408054 <send_iovec+0x44c>
  407fd8:	sub	x8, x29, #0x98
  407fdc:	ldr	x8, [x8, #16]
  407fe0:	add	x9, sp, #0x80
  407fe4:	cmp	x8, x9
  407fe8:	b.eq	408040 <send_iovec+0x438>  // b.none
  407fec:	ldr	x8, [sp, #64]
  407ff0:	ldr	x9, [x8, #136]
  407ff4:	ldr	x9, [x9]
  407ff8:	ldr	x10, [x8, #120]
  407ffc:	ldr	q0, [x9, x10, lsl #4]
  408000:	add	x9, sp, #0x80
  408004:	str	q0, [sp, #128]
  408008:	add	x10, sp, #0x6d
  40800c:	mov	w11, #0x2e                  	// #46
  408010:	strb	w11, [sp, #109]
  408014:	strb	w11, [x10, #1]
  408018:	strb	w11, [x10, #2]
  40801c:	str	x10, [sp, #112]
  408020:	mov	x10, #0x3                   	// #3
  408024:	str	x10, [sp, #120]
  408028:	ldr	q0, [sp, #112]
  40802c:	str	q0, [sp, #144]
  408030:	sub	x10, x29, #0x98
  408034:	str	x9, [x10, #16]
  408038:	mov	x9, #0x2                   	// #2
  40803c:	stur	x9, [x29, #-128]
  408040:	ldr	x8, [sp, #136]
  408044:	mov	x9, #0x2                   	// #2
  408048:	udiv	x8, x8, x9
  40804c:	str	x8, [sp, #136]
  408050:	b	407f90 <send_iovec+0x388>
  408054:	mov	w8, #0x3                   	// #3
  408058:	str	w8, [sp, #104]
  40805c:	bl	402f18 <__errno_location@plt>
  408060:	ldr	w8, [x0]
  408064:	str	w8, [sp, #100]
  408068:	str	wzr, [sp, #96]
  40806c:	ldr	w0, [sp, #96]
  408070:	bl	402d78 <log_get_max_level_realm@plt>
  408074:	ldr	w8, [sp, #104]
  408078:	and	w8, w8, #0x7
  40807c:	cmp	w0, w8
  408080:	b.lt	4080b4 <send_iovec+0x4ac>  // b.tstop
  408084:	ldr	w8, [sp, #96]
  408088:	ldr	w9, [sp, #104]
  40808c:	orr	w0, w9, w8, lsl #10
  408090:	ldr	w1, [sp, #100]
  408094:	ldr	x2, [sp, #56]
  408098:	mov	w3, #0x40e                 	// #1038
  40809c:	ldr	x4, [sp, #48]
  4080a0:	adrp	x5, 40c000 <_fini+0xb20>
  4080a4:	add	x5, x5, #0x8d1
  4080a8:	bl	402d88 <log_internal_realm@plt>
  4080ac:	str	w0, [sp, #16]
  4080b0:	b	4080c8 <send_iovec+0x4c0>
  4080b4:	ldr	w0, [sp, #100]
  4080b8:	bl	402d98 <abs@plt>
  4080bc:	mov	w8, wzr
  4080c0:	subs	w8, w8, w0, uxtb
  4080c4:	str	w8, [sp, #16]
  4080c8:	ldr	w8, [sp, #16]
  4080cc:	str	w8, [sp, #92]
  4080d0:	ldr	w8, [sp, #92]
  4080d4:	stur	w8, [x29, #-4]
  4080d8:	mov	w8, #0x1                   	// #1
  4080dc:	stur	w8, [x29, #-56]
  4080e0:	b	4081cc <send_iovec+0x5c4>
  4080e4:	ldr	x8, [sp, #64]
  4080e8:	ldr	x9, [x8, #120]
  4080ec:	add	x9, x9, #0x1
  4080f0:	str	x9, [x8, #120]
  4080f4:	b	407f34 <send_iovec+0x32c>
  4080f8:	ldur	w0, [x29, #-24]
  4080fc:	ldur	w1, [x29, #-20]
  408100:	mov	x8, xzr
  408104:	mov	x2, x8
  408108:	mov	x3, x8
  40810c:	mov	x4, x8
  408110:	mov	w9, wzr
  408114:	mov	w5, w9
  408118:	mov	w6, w9
  40811c:	bl	403238 <send_one_fd_iov_sa@plt>
  408120:	stur	w0, [x29, #-36]
  408124:	ldur	w9, [x29, #-36]
  408128:	cmp	w9, #0x0
  40812c:	cset	w9, ge  // ge = tcont
  408130:	tbnz	w9, #0, 4081c0 <send_iovec+0x5b8>
  408134:	mov	w8, #0x3                   	// #3
  408138:	str	w8, [sp, #88]
  40813c:	ldur	w8, [x29, #-36]
  408140:	str	w8, [sp, #84]
  408144:	str	wzr, [sp, #80]
  408148:	ldr	w0, [sp, #80]
  40814c:	bl	402d78 <log_get_max_level_realm@plt>
  408150:	ldr	w8, [sp, #88]
  408154:	and	w8, w8, #0x7
  408158:	cmp	w0, w8
  40815c:	b.lt	408190 <send_iovec+0x588>  // b.tstop
  408160:	ldr	w8, [sp, #80]
  408164:	ldr	w9, [sp, #88]
  408168:	orr	w0, w9, w8, lsl #10
  40816c:	ldr	w1, [sp, #84]
  408170:	ldr	x2, [sp, #56]
  408174:	mov	w3, #0x414                 	// #1044
  408178:	ldr	x4, [sp, #48]
  40817c:	adrp	x5, 40c000 <_fini+0xb20>
  408180:	add	x5, x5, #0x8f6
  408184:	bl	402d88 <log_internal_realm@plt>
  408188:	str	w0, [sp, #12]
  40818c:	b	4081a4 <send_iovec+0x59c>
  408190:	ldr	w0, [sp, #84]
  408194:	bl	402d98 <abs@plt>
  408198:	mov	w8, wzr
  40819c:	subs	w8, w8, w0, uxtb
  4081a0:	str	w8, [sp, #12]
  4081a4:	ldr	w8, [sp, #12]
  4081a8:	str	w8, [sp, #76]
  4081ac:	ldr	w8, [sp, #76]
  4081b0:	stur	w8, [x29, #-4]
  4081b4:	mov	w8, #0x1                   	// #1
  4081b8:	stur	w8, [x29, #-56]
  4081bc:	b	4081cc <send_iovec+0x5c4>
  4081c0:	stur	wzr, [x29, #-4]
  4081c4:	mov	w8, #0x1                   	// #1
  4081c8:	stur	w8, [x29, #-56]
  4081cc:	sub	x0, x29, #0x18
  4081d0:	bl	406c60 <closep>
  4081d4:	ldur	w0, [x29, #-4]
  4081d8:	ldr	x28, [sp, #336]
  4081dc:	ldp	x29, x30, [sp, #320]
  4081e0:	add	sp, sp, #0x160
  4081e4:	ret

00000000004081e8 <save_external_coredump>:
  4081e8:	stp	x29, x30, [sp, #-32]!
  4081ec:	str	x28, [sp, #16]
  4081f0:	mov	x29, sp
  4081f4:	sub	sp, sp, #0x2f0
  4081f8:	mov	x8, xzr
  4081fc:	mov	w9, #0xffffffff            	// #-1
  408200:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  408204:	add	x10, x10, #0x500
  408208:	add	x10, x10, #0x3
  40820c:	adrp	x11, 40c000 <_fini+0xb20>
  408210:	add	x11, x11, #0x181
  408214:	adrp	x12, 40c000 <_fini+0xb20>
  408218:	add	x12, x12, #0xf6
  40821c:	stur	x0, [x29, #-16]
  408220:	stur	w1, [x29, #-20]
  408224:	stur	x2, [x29, #-32]
  408228:	stur	x3, [x29, #-40]
  40822c:	stur	x4, [x29, #-48]
  408230:	stur	x5, [x29, #-56]
  408234:	stur	x6, [x29, #-64]
  408238:	stur	x8, [x29, #-72]
  40823c:	stur	x8, [x29, #-80]
  408240:	stur	w9, [x29, #-84]
  408244:	str	x10, [sp, #184]
  408248:	str	x11, [sp, #176]
  40824c:	str	x12, [sp, #168]
  408250:	ldur	x8, [x29, #-16]
  408254:	cmp	x8, #0x0
  408258:	cset	w9, ne  // ne = any
  40825c:	mov	w10, #0x1                   	// #1
  408260:	eor	w9, w9, #0x1
  408264:	eor	w9, w9, w10
  408268:	eor	w9, w9, w10
  40826c:	and	w9, w9, #0x1
  408270:	mov	w0, w9
  408274:	sxtw	x8, w0
  408278:	cbz	x8, 40829c <save_external_coredump+0xb4>
  40827c:	mov	w8, wzr
  408280:	mov	w0, w8
  408284:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  408288:	add	x1, x1, #0xa41
  40828c:	ldr	x2, [sp, #184]
  408290:	mov	w3, #0x166                 	// #358
  408294:	ldr	x4, [sp, #168]
  408298:	bl	402e58 <log_assert_failed_realm@plt>
  40829c:	ldur	x8, [x29, #-32]
  4082a0:	cmp	x8, #0x0
  4082a4:	cset	w9, ne  // ne = any
  4082a8:	mov	w10, #0x1                   	// #1
  4082ac:	eor	w9, w9, #0x1
  4082b0:	eor	w9, w9, w10
  4082b4:	eor	w9, w9, w10
  4082b8:	and	w9, w9, #0x1
  4082bc:	mov	w0, w9
  4082c0:	sxtw	x8, w0
  4082c4:	cbz	x8, 4082e8 <save_external_coredump+0x100>
  4082c8:	mov	w8, wzr
  4082cc:	mov	w0, w8
  4082d0:	adrp	x1, 40c000 <_fini+0xb20>
  4082d4:	add	x1, x1, #0x153
  4082d8:	ldr	x2, [sp, #184]
  4082dc:	mov	w3, #0x167                 	// #359
  4082e0:	ldr	x4, [sp, #168]
  4082e4:	bl	402e58 <log_assert_failed_realm@plt>
  4082e8:	ldur	x8, [x29, #-40]
  4082ec:	cmp	x8, #0x0
  4082f0:	cset	w9, ne  // ne = any
  4082f4:	mov	w10, #0x1                   	// #1
  4082f8:	eor	w9, w9, #0x1
  4082fc:	eor	w9, w9, w10
  408300:	eor	w9, w9, w10
  408304:	and	w9, w9, #0x1
  408308:	mov	w0, w9
  40830c:	sxtw	x8, w0
  408310:	cbz	x8, 408334 <save_external_coredump+0x14c>
  408314:	mov	w8, wzr
  408318:	mov	w0, w8
  40831c:	adrp	x1, 40c000 <_fini+0xb20>
  408320:	add	x1, x1, #0x160
  408324:	ldr	x2, [sp, #184]
  408328:	mov	w3, #0x168                 	// #360
  40832c:	ldr	x4, [sp, #168]
  408330:	bl	402e58 <log_assert_failed_realm@plt>
  408334:	ldur	x8, [x29, #-48]
  408338:	cmp	x8, #0x0
  40833c:	cset	w9, ne  // ne = any
  408340:	mov	w10, #0x1                   	// #1
  408344:	eor	w9, w9, #0x1
  408348:	eor	w9, w9, w10
  40834c:	eor	w9, w9, w10
  408350:	and	w9, w9, #0x1
  408354:	mov	w0, w9
  408358:	sxtw	x8, w0
  40835c:	cbz	x8, 408380 <save_external_coredump+0x198>
  408360:	mov	w8, wzr
  408364:	mov	w0, w8
  408368:	adrp	x1, 40c000 <_fini+0xb20>
  40836c:	add	x1, x1, #0x16c
  408370:	ldr	x2, [sp, #184]
  408374:	mov	w3, #0x169                 	// #361
  408378:	ldr	x4, [sp, #168]
  40837c:	bl	402e58 <log_assert_failed_realm@plt>
  408380:	ldur	x8, [x29, #-56]
  408384:	cmp	x8, #0x0
  408388:	cset	w9, ne  // ne = any
  40838c:	mov	w10, #0x1                   	// #1
  408390:	eor	w9, w9, #0x1
  408394:	eor	w9, w9, w10
  408398:	eor	w9, w9, w10
  40839c:	and	w9, w9, #0x1
  4083a0:	mov	w0, w9
  4083a4:	sxtw	x8, w0
  4083a8:	cbz	x8, 4083cc <save_external_coredump+0x1e4>
  4083ac:	mov	w8, wzr
  4083b0:	mov	w0, w8
  4083b4:	adrp	x1, 40c000 <_fini+0xb20>
  4083b8:	add	x1, x1, #0x178
  4083bc:	ldr	x2, [sp, #184]
  4083c0:	mov	w3, #0x16a                 	// #362
  4083c4:	ldr	x4, [sp, #168]
  4083c8:	bl	402e58 <log_assert_failed_realm@plt>
  4083cc:	ldur	x8, [x29, #-16]
  4083d0:	ldr	x0, [x8, #8]
  4083d4:	sub	x1, x29, #0xf4
  4083d8:	bl	403248 <parse_uid@plt>
  4083dc:	stur	w0, [x29, #-248]
  4083e0:	ldur	w9, [x29, #-248]
  4083e4:	cmp	w9, #0x0
  4083e8:	cset	w9, ge  // ge = tcont
  4083ec:	tbnz	w9, #0, 40847c <save_external_coredump+0x294>
  4083f0:	mov	w8, #0x3                   	// #3
  4083f4:	stur	w8, [x29, #-252]
  4083f8:	ldur	w8, [x29, #-248]
  4083fc:	stur	w8, [x29, #-256]
  408400:	str	wzr, [sp, #492]
  408404:	ldr	w0, [sp, #492]
  408408:	bl	402d78 <log_get_max_level_realm@plt>
  40840c:	ldur	w8, [x29, #-252]
  408410:	and	w8, w8, #0x7
  408414:	cmp	w0, w8
  408418:	b.lt	40844c <save_external_coredump+0x264>  // b.tstop
  40841c:	ldr	w8, [sp, #492]
  408420:	ldur	w9, [x29, #-252]
  408424:	orr	w0, w9, w8, lsl #10
  408428:	ldur	w1, [x29, #-256]
  40842c:	ldr	x2, [sp, #184]
  408430:	mov	w3, #0x16e                 	// #366
  408434:	ldr	x4, [sp, #176]
  408438:	adrp	x5, 40c000 <_fini+0xb20>
  40843c:	add	x5, x5, #0x198
  408440:	bl	402d88 <log_internal_realm@plt>
  408444:	str	w0, [sp, #164]
  408448:	b	408460 <save_external_coredump+0x278>
  40844c:	ldur	w0, [x29, #-256]
  408450:	bl	402d98 <abs@plt>
  408454:	mov	w8, wzr
  408458:	subs	w8, w8, w0, uxtb
  40845c:	str	w8, [sp, #164]
  408460:	ldr	w8, [sp, #164]
  408464:	str	w8, [sp, #488]
  408468:	ldr	w8, [sp, #488]
  40846c:	stur	w8, [x29, #-4]
  408470:	mov	w8, #0x1                   	// #1
  408474:	str	w8, [sp, #484]
  408478:	b	408f14 <save_external_coredump+0xd2c>
  40847c:	ldur	x8, [x29, #-16]
  408480:	ldr	x0, [x8, #40]
  408484:	sub	x1, x29, #0x60
  408488:	bl	409648 <safe_atou64>
  40848c:	stur	w0, [x29, #-248]
  408490:	ldur	w9, [x29, #-248]
  408494:	cmp	w9, #0x0
  408498:	cset	w9, ge  // ge = tcont
  40849c:	tbnz	w9, #0, 408534 <save_external_coredump+0x34c>
  4084a0:	mov	w8, #0x3                   	// #3
  4084a4:	str	w8, [sp, #480]
  4084a8:	ldur	w8, [x29, #-248]
  4084ac:	str	w8, [sp, #476]
  4084b0:	str	wzr, [sp, #472]
  4084b4:	ldr	w0, [sp, #472]
  4084b8:	bl	402d78 <log_get_max_level_realm@plt>
  4084bc:	ldr	w8, [sp, #480]
  4084c0:	and	w8, w8, #0x7
  4084c4:	cmp	w0, w8
  4084c8:	b.lt	408504 <save_external_coredump+0x31c>  // b.tstop
  4084cc:	ldr	w8, [sp, #472]
  4084d0:	ldr	w9, [sp, #480]
  4084d4:	orr	w0, w9, w8, lsl #10
  4084d8:	ldr	w1, [sp, #476]
  4084dc:	ldur	x10, [x29, #-16]
  4084e0:	ldr	x6, [x10, #40]
  4084e4:	ldr	x2, [sp, #184]
  4084e8:	mov	w3, #0x173                 	// #371
  4084ec:	ldr	x4, [sp, #176]
  4084f0:	adrp	x5, 40c000 <_fini+0xb20>
  4084f4:	add	x5, x5, #0x1b0
  4084f8:	bl	402d88 <log_internal_realm@plt>
  4084fc:	str	w0, [sp, #160]
  408500:	b	408518 <save_external_coredump+0x330>
  408504:	ldr	w0, [sp, #476]
  408508:	bl	402d98 <abs@plt>
  40850c:	mov	w8, wzr
  408510:	subs	w8, w8, w0, uxtb
  408514:	str	w8, [sp, #160]
  408518:	ldr	w8, [sp, #160]
  40851c:	str	w8, [sp, #468]
  408520:	ldr	w8, [sp, #468]
  408524:	stur	w8, [x29, #-4]
  408528:	mov	w8, #0x1                   	// #1
  40852c:	str	w8, [sp, #484]
  408530:	b	408f14 <save_external_coredump+0xd2c>
  408534:	ldur	x8, [x29, #-96]
  408538:	str	x8, [sp, #152]
  40853c:	bl	403258 <page_size@plt>
  408540:	ldr	x8, [sp, #152]
  408544:	cmp	x8, x0
  408548:	b.cs	4085ec <save_external_coredump+0x404>  // b.hs, b.nlast
  40854c:	mov	w8, #0x6                   	// #6
  408550:	str	w8, [sp, #464]
  408554:	mov	w8, #0x39                  	// #57
  408558:	movk	w8, #0x4000, lsl #16
  40855c:	str	w8, [sp, #460]
  408560:	str	wzr, [sp, #456]
  408564:	ldr	w0, [sp, #456]
  408568:	bl	402d78 <log_get_max_level_realm@plt>
  40856c:	ldr	w8, [sp, #464]
  408570:	and	w8, w8, #0x7
  408574:	cmp	w0, w8
  408578:	b.lt	4085bc <save_external_coredump+0x3d4>  // b.tstop
  40857c:	ldr	w8, [sp, #456]
  408580:	ldr	w9, [sp, #464]
  408584:	orr	w0, w9, w8, lsl #10
  408588:	ldr	w1, [sp, #460]
  40858c:	ldur	x10, [x29, #-16]
  408590:	ldr	x6, [x10]
  408594:	ldur	x10, [x29, #-16]
  408598:	ldr	x7, [x10, #56]
  40859c:	ldr	x2, [sp, #184]
  4085a0:	mov	w3, #0x17b                 	// #379
  4085a4:	ldr	x4, [sp, #176]
  4085a8:	adrp	x5, 40c000 <_fini+0xb20>
  4085ac:	add	x5, x5, #0x1d8
  4085b0:	bl	402d88 <log_internal_realm@plt>
  4085b4:	str	w0, [sp, #148]
  4085b8:	b	4085d0 <save_external_coredump+0x3e8>
  4085bc:	ldr	w0, [sp, #460]
  4085c0:	bl	402d98 <abs@plt>
  4085c4:	mov	w8, wzr
  4085c8:	subs	w8, w8, w0, uxtb
  4085cc:	str	w8, [sp, #148]
  4085d0:	ldr	w8, [sp, #148]
  4085d4:	str	w8, [sp, #452]
  4085d8:	ldr	w8, [sp, #452]
  4085dc:	stur	w8, [x29, #-4]
  4085e0:	mov	w8, #0x1                   	// #1
  4085e4:	str	w8, [sp, #484]
  4085e8:	b	408f14 <save_external_coredump+0xd2c>
  4085ec:	adrp	x8, 420000 <arg_storage>
  4085f0:	add	x8, x8, #0x8
  4085f4:	ldr	x8, [x8]
  4085f8:	str	x8, [sp, #440]
  4085fc:	bl	409674 <storage_size_max>
  408600:	str	x0, [sp, #432]
  408604:	ldr	x8, [sp, #440]
  408608:	ldr	x9, [sp, #432]
  40860c:	cmp	x8, x9
  408610:	b.ls	408620 <save_external_coredump+0x438>  // b.plast
  408614:	ldr	x8, [sp, #440]
  408618:	str	x8, [sp, #136]
  40861c:	b	408628 <save_external_coredump+0x440>
  408620:	ldr	x8, [sp, #432]
  408624:	str	x8, [sp, #136]
  408628:	ldr	x8, [sp, #136]
  40862c:	str	x8, [sp, #424]
  408630:	ldr	x8, [sp, #424]
  408634:	stur	x8, [x29, #-104]
  408638:	ldur	x8, [x29, #-104]
  40863c:	cbnz	x8, 4086d0 <save_external_coredump+0x4e8>
  408640:	mov	w8, #0x7                   	// #7
  408644:	str	w8, [sp, #420]
  408648:	mov	w8, #0x39                  	// #57
  40864c:	movk	w8, #0x4000, lsl #16
  408650:	str	w8, [sp, #416]
  408654:	str	wzr, [sp, #412]
  408658:	ldr	w0, [sp, #412]
  40865c:	bl	402d78 <log_get_max_level_realm@plt>
  408660:	ldr	w8, [sp, #420]
  408664:	and	w8, w8, #0x7
  408668:	cmp	w0, w8
  40866c:	b.lt	4086a0 <save_external_coredump+0x4b8>  // b.tstop
  408670:	ldr	w8, [sp, #412]
  408674:	ldr	w9, [sp, #420]
  408678:	orr	w0, w9, w8, lsl #10
  40867c:	ldr	w1, [sp, #416]
  408680:	ldr	x2, [sp, #184]
  408684:	mov	w3, #0x181                 	// #385
  408688:	ldr	x4, [sp, #176]
  40868c:	adrp	x5, 40c000 <_fini+0xb20>
  408690:	add	x5, x5, #0x212
  408694:	bl	402d88 <log_internal_realm@plt>
  408698:	str	w0, [sp, #132]
  40869c:	b	4086b4 <save_external_coredump+0x4cc>
  4086a0:	ldr	w0, [sp, #416]
  4086a4:	bl	402d98 <abs@plt>
  4086a8:	mov	w8, wzr
  4086ac:	subs	w8, w8, w0, uxtb
  4086b0:	str	w8, [sp, #132]
  4086b4:	ldr	w8, [sp, #132]
  4086b8:	str	w8, [sp, #408]
  4086bc:	ldr	w8, [sp, #408]
  4086c0:	stur	w8, [x29, #-4]
  4086c4:	mov	w8, #0x1                   	// #1
  4086c8:	str	w8, [sp, #484]
  4086cc:	b	408f14 <save_external_coredump+0xd2c>
  4086d0:	ldur	x8, [x29, #-96]
  4086d4:	str	x8, [sp, #400]
  4086d8:	ldur	x8, [x29, #-104]
  4086dc:	str	x8, [sp, #392]
  4086e0:	ldr	x8, [sp, #400]
  4086e4:	ldr	x9, [sp, #392]
  4086e8:	cmp	x8, x9
  4086ec:	b.cs	4086fc <save_external_coredump+0x514>  // b.hs, b.nlast
  4086f0:	ldr	x8, [sp, #400]
  4086f4:	str	x8, [sp, #120]
  4086f8:	b	408704 <save_external_coredump+0x51c>
  4086fc:	ldr	x8, [sp, #392]
  408700:	str	x8, [sp, #120]
  408704:	ldr	x8, [sp, #120]
  408708:	str	x8, [sp, #384]
  40870c:	ldr	x8, [sp, #384]
  408710:	stur	x8, [x29, #-112]
  408714:	ldur	x0, [x29, #-16]
  408718:	sub	x1, x29, #0x48
  40871c:	bl	409748 <make_filename>
  408720:	stur	w0, [x29, #-248]
  408724:	ldur	w9, [x29, #-248]
  408728:	cmp	w9, #0x0
  40872c:	cset	w9, ge  // ge = tcont
  408730:	tbnz	w9, #0, 4087c0 <save_external_coredump+0x5d8>
  408734:	mov	w8, #0x3                   	// #3
  408738:	str	w8, [sp, #380]
  40873c:	ldur	w8, [x29, #-248]
  408740:	str	w8, [sp, #376]
  408744:	str	wzr, [sp, #372]
  408748:	ldr	w0, [sp, #372]
  40874c:	bl	402d78 <log_get_max_level_realm@plt>
  408750:	ldr	w8, [sp, #380]
  408754:	and	w8, w8, #0x7
  408758:	cmp	w0, w8
  40875c:	b.lt	408790 <save_external_coredump+0x5a8>  // b.tstop
  408760:	ldr	w8, [sp, #372]
  408764:	ldr	w9, [sp, #380]
  408768:	orr	w0, w9, w8, lsl #10
  40876c:	ldr	w1, [sp, #376]
  408770:	ldr	x2, [sp, #184]
  408774:	mov	w3, #0x188                 	// #392
  408778:	ldr	x4, [sp, #176]
  40877c:	adrp	x5, 40c000 <_fini+0xb20>
  408780:	add	x5, x5, #0x25b
  408784:	bl	402d88 <log_internal_realm@plt>
  408788:	str	w0, [sp, #116]
  40878c:	b	4087a4 <save_external_coredump+0x5bc>
  408790:	ldr	w0, [sp, #376]
  408794:	bl	402d98 <abs@plt>
  408798:	mov	w8, wzr
  40879c:	subs	w8, w8, w0, uxtb
  4087a0:	str	w8, [sp, #116]
  4087a4:	ldr	w8, [sp, #116]
  4087a8:	str	w8, [sp, #368]
  4087ac:	ldr	w8, [sp, #368]
  4087b0:	stur	w8, [x29, #-4]
  4087b4:	mov	w8, #0x1                   	// #1
  4087b8:	str	w8, [sp, #484]
  4087bc:	b	408f14 <save_external_coredump+0xd2c>
  4087c0:	adrp	x0, 40c000 <_fini+0xb20>
  4087c4:	add	x0, x0, #0x286
  4087c8:	mov	w1, #0x1ed                 	// #493
  4087cc:	bl	403268 <mkdir_p_label@plt>
  4087d0:	ldur	x8, [x29, #-72]
  4087d4:	mov	x0, x8
  4087d8:	mov	w1, #0x2                   	// #2
  4087dc:	movk	w1, #0x8, lsl #16
  4087e0:	sub	x2, x29, #0x50
  4087e4:	bl	403278 <open_tmpfile_linkable@plt>
  4087e8:	stur	w0, [x29, #-84]
  4087ec:	ldur	w9, [x29, #-84]
  4087f0:	cmp	w9, #0x0
  4087f4:	cset	w9, ge  // ge = tcont
  4087f8:	tbnz	w9, #0, 40888c <save_external_coredump+0x6a4>
  4087fc:	mov	w8, #0x3                   	// #3
  408800:	str	w8, [sp, #364]
  408804:	ldur	w8, [x29, #-84]
  408808:	str	w8, [sp, #360]
  40880c:	str	wzr, [sp, #356]
  408810:	ldr	w0, [sp, #356]
  408814:	bl	402d78 <log_get_max_level_realm@plt>
  408818:	ldr	w8, [sp, #364]
  40881c:	and	w8, w8, #0x7
  408820:	cmp	w0, w8
  408824:	b.lt	40885c <save_external_coredump+0x674>  // b.tstop
  408828:	ldr	w8, [sp, #356]
  40882c:	ldr	w9, [sp, #364]
  408830:	orr	w0, w9, w8, lsl #10
  408834:	ldr	w1, [sp, #360]
  408838:	ldur	x6, [x29, #-72]
  40883c:	ldr	x2, [sp, #184]
  408840:	mov	w3, #0x18e                 	// #398
  408844:	ldr	x4, [sp, #176]
  408848:	adrp	x5, 40c000 <_fini+0xb20>
  40884c:	add	x5, x5, #0x2a0
  408850:	bl	402d88 <log_internal_realm@plt>
  408854:	str	w0, [sp, #112]
  408858:	b	408870 <save_external_coredump+0x688>
  40885c:	ldr	w0, [sp, #360]
  408860:	bl	402d98 <abs@plt>
  408864:	mov	w8, wzr
  408868:	subs	w8, w8, w0, uxtb
  40886c:	str	w8, [sp, #112]
  408870:	ldr	w8, [sp, #112]
  408874:	str	w8, [sp, #352]
  408878:	ldr	w8, [sp, #352]
  40887c:	stur	w8, [x29, #-4]
  408880:	mov	w8, #0x1                   	// #1
  408884:	str	w8, [sp, #484]
  408888:	b	408f14 <save_external_coredump+0xd2c>
  40888c:	ldur	w0, [x29, #-20]
  408890:	ldur	w1, [x29, #-84]
  408894:	ldur	x2, [x29, #-112]
  408898:	mov	w8, wzr
  40889c:	mov	w3, w8
  4088a0:	bl	409a1c <copy_bytes>
  4088a4:	stur	w0, [x29, #-248]
  4088a8:	ldur	w8, [x29, #-248]
  4088ac:	cmp	w8, #0x0
  4088b0:	cset	w8, ge  // ge = tcont
  4088b4:	tbnz	w8, #0, 408944 <save_external_coredump+0x75c>
  4088b8:	mov	w8, #0x3                   	// #3
  4088bc:	str	w8, [sp, #348]
  4088c0:	ldur	w8, [x29, #-248]
  4088c4:	str	w8, [sp, #344]
  4088c8:	str	wzr, [sp, #340]
  4088cc:	ldr	w0, [sp, #340]
  4088d0:	bl	402d78 <log_get_max_level_realm@plt>
  4088d4:	ldr	w8, [sp, #348]
  4088d8:	and	w8, w8, #0x7
  4088dc:	cmp	w0, w8
  4088e0:	b.lt	408924 <save_external_coredump+0x73c>  // b.tstop
  4088e4:	ldr	w8, [sp, #340]
  4088e8:	ldr	w9, [sp, #348]
  4088ec:	orr	w0, w9, w8, lsl #10
  4088f0:	ldr	w1, [sp, #344]
  4088f4:	ldur	x10, [x29, #-16]
  4088f8:	ldr	x6, [x10]
  4088fc:	ldur	x10, [x29, #-16]
  408900:	ldr	x7, [x10, #56]
  408904:	ldr	x2, [sp, #184]
  408908:	mov	w3, #0x193                 	// #403
  40890c:	ldr	x4, [sp, #176]
  408910:	adrp	x5, 40c000 <_fini+0xb20>
  408914:	add	x5, x5, #0x2d4
  408918:	bl	402d88 <log_internal_realm@plt>
  40891c:	str	w0, [sp, #108]
  408920:	b	408938 <save_external_coredump+0x750>
  408924:	ldr	w0, [sp, #344]
  408928:	bl	402d98 <abs@plt>
  40892c:	mov	w8, wzr
  408930:	subs	w8, w8, w0, uxtb
  408934:	str	w8, [sp, #108]
  408938:	ldr	w8, [sp, #108]
  40893c:	str	w8, [sp, #336]
  408940:	b	408ef4 <save_external_coredump+0xd0c>
  408944:	ldur	w8, [x29, #-248]
  408948:	cmp	w8, #0x1
  40894c:	cset	w8, eq  // eq = none
  408950:	ldur	x9, [x29, #-64]
  408954:	and	w8, w8, #0x1
  408958:	strb	w8, [x9]
  40895c:	ldur	x9, [x29, #-64]
  408960:	ldrb	w8, [x9]
  408964:	tbnz	w8, #0, 40896c <save_external_coredump+0x784>
  408968:	b	4089c4 <save_external_coredump+0x7dc>
  40896c:	ldur	x6, [x29, #-112]
  408970:	ldur	x8, [x29, #-112]
  408974:	mov	w0, #0x6                   	// #6
  408978:	mov	w9, wzr
  40897c:	mov	w1, w9
  408980:	ldr	x2, [sp, #184]
  408984:	mov	w3, #0x19b                 	// #411
  408988:	ldr	x4, [sp, #176]
  40898c:	adrp	x5, 40c000 <_fini+0xb20>
  408990:	add	x5, x5, #0x2f9
  408994:	adrp	x7, 40c000 <_fini+0xb20>
  408998:	add	x7, x7, #0x327
  40899c:	mov	x10, sp
  4089a0:	str	x8, [x10]
  4089a4:	mov	x8, sp
  4089a8:	adrp	x10, 40c000 <_fini+0xb20>
  4089ac:	add	x10, x10, #0x336
  4089b0:	str	x10, [x8, #8]
  4089b4:	mov	x8, sp
  4089b8:	mov	x10, xzr
  4089bc:	str	x10, [x8, #16]
  4089c0:	bl	403288 <log_struct_internal@plt>
  4089c4:	ldur	w0, [x29, #-84]
  4089c8:	sub	x1, x29, #0xf0
  4089cc:	bl	40b4b0 <fstat64>
  4089d0:	cmp	w0, #0x0
  4089d4:	cset	w8, ge  // ge = tcont
  4089d8:	tbnz	w8, #0, 408a84 <save_external_coredump+0x89c>
  4089dc:	mov	w8, #0x3                   	// #3
  4089e0:	str	w8, [sp, #332]
  4089e4:	bl	402f18 <__errno_location@plt>
  4089e8:	ldr	w8, [x0]
  4089ec:	str	w8, [sp, #328]
  4089f0:	str	wzr, [sp, #324]
  4089f4:	ldr	w0, [sp, #324]
  4089f8:	bl	402d78 <log_get_max_level_realm@plt>
  4089fc:	ldr	w8, [sp, #332]
  408a00:	and	w8, w8, #0x7
  408a04:	cmp	w0, w8
  408a08:	b.lt	408a64 <save_external_coredump+0x87c>  // b.tstop
  408a0c:	ldr	w8, [sp, #324]
  408a10:	ldr	w9, [sp, #332]
  408a14:	orr	w0, w9, w8, lsl #10
  408a18:	ldr	w1, [sp, #328]
  408a1c:	ldur	x10, [x29, #-80]
  408a20:	str	w0, [sp, #104]
  408a24:	mov	x0, x10
  408a28:	str	w1, [sp, #100]
  408a2c:	bl	409a6c <coredump_tmpfile_name>
  408a30:	ldr	w8, [sp, #104]
  408a34:	str	x0, [sp, #88]
  408a38:	mov	w0, w8
  408a3c:	ldr	w1, [sp, #100]
  408a40:	ldr	x2, [sp, #184]
  408a44:	mov	w3, #0x19e                 	// #414
  408a48:	ldr	x4, [sp, #176]
  408a4c:	adrp	x5, 40c000 <_fini+0xb20>
  408a50:	add	x5, x5, #0x362
  408a54:	ldr	x6, [sp, #88]
  408a58:	bl	402d88 <log_internal_realm@plt>
  408a5c:	str	w0, [sp, #84]
  408a60:	b	408a78 <save_external_coredump+0x890>
  408a64:	ldr	w0, [sp, #328]
  408a68:	bl	402d98 <abs@plt>
  408a6c:	mov	w8, wzr
  408a70:	subs	w8, w8, w0, uxtb
  408a74:	str	w8, [sp, #84]
  408a78:	ldr	w8, [sp, #84]
  408a7c:	str	w8, [sp, #320]
  408a80:	b	408ef4 <save_external_coredump+0xd0c>
  408a84:	ldur	w0, [x29, #-84]
  408a88:	mov	x8, xzr
  408a8c:	mov	x1, x8
  408a90:	mov	w9, wzr
  408a94:	mov	w2, w9
  408a98:	bl	403298 <lseek64@plt>
  408a9c:	mov	x8, #0xffffffffffffffff    	// #-1
  408aa0:	cmp	x0, x8
  408aa4:	b.ne	408b50 <save_external_coredump+0x968>  // b.any
  408aa8:	mov	w8, #0x3                   	// #3
  408aac:	str	w8, [sp, #316]
  408ab0:	bl	402f18 <__errno_location@plt>
  408ab4:	ldr	w8, [x0]
  408ab8:	str	w8, [sp, #312]
  408abc:	str	wzr, [sp, #308]
  408ac0:	ldr	w0, [sp, #308]
  408ac4:	bl	402d78 <log_get_max_level_realm@plt>
  408ac8:	ldr	w8, [sp, #316]
  408acc:	and	w8, w8, #0x7
  408ad0:	cmp	w0, w8
  408ad4:	b.lt	408b30 <save_external_coredump+0x948>  // b.tstop
  408ad8:	ldr	w8, [sp, #308]
  408adc:	ldr	w9, [sp, #316]
  408ae0:	orr	w0, w9, w8, lsl #10
  408ae4:	ldr	w1, [sp, #312]
  408ae8:	ldur	x10, [x29, #-80]
  408aec:	str	w0, [sp, #80]
  408af0:	mov	x0, x10
  408af4:	str	w1, [sp, #76]
  408af8:	bl	409a6c <coredump_tmpfile_name>
  408afc:	ldr	w8, [sp, #80]
  408b00:	str	x0, [sp, #64]
  408b04:	mov	w0, w8
  408b08:	ldr	w1, [sp, #76]
  408b0c:	ldr	x2, [sp, #184]
  408b10:	mov	w3, #0x1a3                 	// #419
  408b14:	ldr	x4, [sp, #176]
  408b18:	adrp	x5, 40c000 <_fini+0xb20>
  408b1c:	add	x5, x5, #0x383
  408b20:	ldr	x6, [sp, #64]
  408b24:	bl	402d88 <log_internal_realm@plt>
  408b28:	str	w0, [sp, #60]
  408b2c:	b	408b44 <save_external_coredump+0x95c>
  408b30:	ldr	w0, [sp, #312]
  408b34:	bl	402d98 <abs@plt>
  408b38:	mov	w8, wzr
  408b3c:	subs	w8, w8, w0, uxtb
  408b40:	str	w8, [sp, #60]
  408b44:	ldr	w8, [sp, #60]
  408b48:	str	w8, [sp, #304]
  408b4c:	b	408ef4 <save_external_coredump+0xd0c>
  408b50:	adrp	x8, 420000 <arg_storage>
  408b54:	add	x8, x8, #0x4
  408b58:	ldrb	w9, [x8]
  408b5c:	tbnz	w9, #0, 408b64 <save_external_coredump+0x97c>
  408b60:	b	408e58 <save_external_coredump+0xc70>
  408b64:	ldur	x1, [x29, #-192]
  408b68:	mov	x8, xzr
  408b6c:	mov	x0, x8
  408b70:	bl	408f40 <maybe_remove_external_coredump>
  408b74:	cbnz	w0, 408e58 <save_external_coredump+0xc70>
  408b78:	mov	x8, xzr
  408b7c:	str	x8, [sp, #296]
  408b80:	str	x8, [sp, #288]
  408b84:	mov	w9, #0xffffffff            	// #-1
  408b88:	str	w9, [sp, #284]
  408b8c:	ldur	x0, [x29, #-72]
  408b90:	adrp	x1, 40c000 <_fini+0xb20>
  408b94:	add	x1, x1, #0x39c
  408b98:	mov	x2, x8
  408b9c:	bl	402f78 <strjoin_real@plt>
  408ba0:	str	x0, [sp, #296]
  408ba4:	ldr	x8, [sp, #296]
  408ba8:	cbnz	x8, 408bd0 <save_external_coredump+0x9e8>
  408bac:	mov	w8, wzr
  408bb0:	mov	w0, w8
  408bb4:	ldr	x1, [sp, #184]
  408bb8:	mov	w2, #0x1b0                 	// #432
  408bbc:	ldr	x3, [sp, #176]
  408bc0:	bl	402e08 <log_oom_internal@plt>
  408bc4:	mov	w8, #0xd                   	// #13
  408bc8:	str	w8, [sp, #484]
  408bcc:	b	408e20 <save_external_coredump+0xc38>
  408bd0:	ldr	x0, [sp, #296]
  408bd4:	mov	w1, #0x2                   	// #2
  408bd8:	movk	w1, #0x8, lsl #16
  408bdc:	add	x2, sp, #0x120
  408be0:	bl	403278 <open_tmpfile_linkable@plt>
  408be4:	str	w0, [sp, #284]
  408be8:	ldr	w8, [sp, #284]
  408bec:	cmp	w8, #0x0
  408bf0:	cset	w8, ge  // ge = tcont
  408bf4:	tbnz	w8, #0, 408c80 <save_external_coredump+0xa98>
  408bf8:	mov	w8, #0x3                   	// #3
  408bfc:	str	w8, [sp, #280]
  408c00:	ldr	w8, [sp, #284]
  408c04:	str	w8, [sp, #276]
  408c08:	str	wzr, [sp, #272]
  408c0c:	ldr	w0, [sp, #272]
  408c10:	bl	402d78 <log_get_max_level_realm@plt>
  408c14:	ldr	w8, [sp, #280]
  408c18:	and	w8, w8, #0x7
  408c1c:	cmp	w0, w8
  408c20:	b.lt	408c58 <save_external_coredump+0xa70>  // b.tstop
  408c24:	ldr	w8, [sp, #272]
  408c28:	ldr	w9, [sp, #280]
  408c2c:	orr	w0, w9, w8, lsl #10
  408c30:	ldr	w1, [sp, #276]
  408c34:	ldr	x6, [sp, #296]
  408c38:	ldr	x2, [sp, #184]
  408c3c:	mov	w3, #0x1b6                 	// #438
  408c40:	ldr	x4, [sp, #176]
  408c44:	adrp	x5, 40c000 <_fini+0xb20>
  408c48:	add	x5, x5, #0x2a0
  408c4c:	bl	402d88 <log_internal_realm@plt>
  408c50:	str	w0, [sp, #56]
  408c54:	b	408c6c <save_external_coredump+0xa84>
  408c58:	ldr	w0, [sp, #276]
  408c5c:	bl	402d98 <abs@plt>
  408c60:	mov	w8, wzr
  408c64:	subs	w8, w8, w0, uxtb
  408c68:	str	w8, [sp, #56]
  408c6c:	ldr	w8, [sp, #56]
  408c70:	str	w8, [sp, #268]
  408c74:	mov	w8, #0xd                   	// #13
  408c78:	str	w8, [sp, #484]
  408c7c:	b	408e20 <save_external_coredump+0xc38>
  408c80:	ldur	w0, [x29, #-84]
  408c84:	ldr	w1, [sp, #284]
  408c88:	mov	x2, #0xffffffffffffffff    	// #-1
  408c8c:	bl	4032a8 <compress_stream_xz@plt>
  408c90:	stur	w0, [x29, #-248]
  408c94:	ldur	w8, [x29, #-248]
  408c98:	cmp	w8, #0x0
  408c9c:	cset	w8, ge  // ge = tcont
  408ca0:	tbnz	w8, #0, 408d48 <save_external_coredump+0xb60>
  408ca4:	mov	w8, #0x3                   	// #3
  408ca8:	str	w8, [sp, #264]
  408cac:	ldur	w8, [x29, #-248]
  408cb0:	str	w8, [sp, #260]
  408cb4:	str	wzr, [sp, #256]
  408cb8:	ldr	w0, [sp, #256]
  408cbc:	bl	402d78 <log_get_max_level_realm@plt>
  408cc0:	ldr	w8, [sp, #264]
  408cc4:	and	w8, w8, #0x7
  408cc8:	cmp	w0, w8
  408ccc:	b.lt	408d28 <save_external_coredump+0xb40>  // b.tstop
  408cd0:	ldr	w8, [sp, #256]
  408cd4:	ldr	w9, [sp, #264]
  408cd8:	orr	w0, w9, w8, lsl #10
  408cdc:	ldr	w1, [sp, #260]
  408ce0:	ldr	x10, [sp, #288]
  408ce4:	str	w0, [sp, #52]
  408ce8:	mov	x0, x10
  408cec:	str	w1, [sp, #48]
  408cf0:	bl	409a6c <coredump_tmpfile_name>
  408cf4:	ldr	w8, [sp, #52]
  408cf8:	str	x0, [sp, #40]
  408cfc:	mov	w0, w8
  408d00:	ldr	w1, [sp, #48]
  408d04:	ldr	x2, [sp, #184]
  408d08:	mov	w3, #0x1bc                 	// #444
  408d0c:	ldr	x4, [sp, #176]
  408d10:	adrp	x5, 40c000 <_fini+0xb20>
  408d14:	add	x5, x5, #0x3a0
  408d18:	ldr	x6, [sp, #40]
  408d1c:	bl	402d88 <log_internal_realm@plt>
  408d20:	str	w0, [sp, #36]
  408d24:	b	408d3c <save_external_coredump+0xb54>
  408d28:	ldr	w0, [sp, #260]
  408d2c:	bl	402d98 <abs@plt>
  408d30:	mov	w8, wzr
  408d34:	subs	w8, w8, w0, uxtb
  408d38:	str	w8, [sp, #36]
  408d3c:	ldr	w8, [sp, #36]
  408d40:	str	w8, [sp, #252]
  408d44:	b	408e0c <save_external_coredump+0xc24>
  408d48:	ldr	w0, [sp, #284]
  408d4c:	ldr	x1, [sp, #288]
  408d50:	ldr	x2, [sp, #296]
  408d54:	ldur	x3, [x29, #-16]
  408d58:	ldur	w4, [x29, #-244]
  408d5c:	bl	409aa4 <fix_permissions>
  408d60:	stur	w0, [x29, #-248]
  408d64:	ldur	w8, [x29, #-248]
  408d68:	cmp	w8, #0x0
  408d6c:	cset	w8, ge  // ge = tcont
  408d70:	tbnz	w8, #0, 408d78 <save_external_coredump+0xb90>
  408d74:	b	408e0c <save_external_coredump+0xc24>
  408d78:	ldur	x8, [x29, #-80]
  408d7c:	cbz	x8, 408d88 <save_external_coredump+0xba0>
  408d80:	ldur	x0, [x29, #-80]
  408d84:	bl	4032b8 <unlink_noerrno@plt>
  408d88:	ldr	x8, [sp, #296]
  408d8c:	str	x8, [sp, #240]
  408d90:	mov	x8, xzr
  408d94:	str	x8, [sp, #296]
  408d98:	ldr	x8, [sp, #240]
  408d9c:	str	x8, [sp, #232]
  408da0:	ldr	x8, [sp, #232]
  408da4:	ldur	x9, [x29, #-32]
  408da8:	str	x8, [x9]
  408dac:	ldr	w10, [sp, #284]
  408db0:	str	w10, [sp, #228]
  408db4:	mov	w10, #0xffffffff            	// #-1
  408db8:	str	w10, [sp, #284]
  408dbc:	ldr	w11, [sp, #228]
  408dc0:	str	w11, [sp, #224]
  408dc4:	ldr	w11, [sp, #224]
  408dc8:	ldur	x8, [x29, #-40]
  408dcc:	str	w11, [x8]
  408dd0:	ldur	w11, [x29, #-84]
  408dd4:	str	w11, [sp, #220]
  408dd8:	stur	w10, [x29, #-84]
  408ddc:	ldr	w10, [sp, #220]
  408de0:	str	w10, [sp, #216]
  408de4:	ldr	w10, [sp, #216]
  408de8:	ldur	x8, [x29, #-48]
  408dec:	str	w10, [x8]
  408df0:	ldur	x8, [x29, #-192]
  408df4:	ldur	x9, [x29, #-56]
  408df8:	str	x8, [x9]
  408dfc:	stur	wzr, [x29, #-4]
  408e00:	mov	w10, #0x1                   	// #1
  408e04:	str	w10, [sp, #484]
  408e08:	b	408e20 <save_external_coredump+0xc38>
  408e0c:	ldr	x8, [sp, #288]
  408e10:	cbz	x8, 408e1c <save_external_coredump+0xc34>
  408e14:	ldr	x0, [sp, #288]
  408e18:	bl	4032c8 <unlink@plt>
  408e1c:	str	wzr, [sp, #484]
  408e20:	add	x0, sp, #0x11c
  408e24:	bl	406c60 <closep>
  408e28:	add	x0, sp, #0x120
  408e2c:	bl	405eec <freep>
  408e30:	add	x0, sp, #0x128
  408e34:	bl	405eec <freep>
  408e38:	ldr	w8, [sp, #484]
  408e3c:	str	w8, [sp, #32]
  408e40:	cbz	w8, 408e58 <save_external_coredump+0xc70>
  408e44:	b	408e48 <save_external_coredump+0xc60>
  408e48:	ldr	w8, [sp, #32]
  408e4c:	cmp	w8, #0xd
  408e50:	b.eq	408e58 <save_external_coredump+0xc70>  // b.none
  408e54:	b	408f14 <save_external_coredump+0xd2c>
  408e58:	ldur	w0, [x29, #-84]
  408e5c:	ldur	x1, [x29, #-80]
  408e60:	ldur	x2, [x29, #-72]
  408e64:	ldur	x3, [x29, #-16]
  408e68:	ldur	w4, [x29, #-244]
  408e6c:	bl	409aa4 <fix_permissions>
  408e70:	stur	w0, [x29, #-248]
  408e74:	ldur	w8, [x29, #-248]
  408e78:	cmp	w8, #0x0
  408e7c:	cset	w8, ge  // ge = tcont
  408e80:	tbnz	w8, #0, 408e88 <save_external_coredump+0xca0>
  408e84:	b	408ef4 <save_external_coredump+0xd0c>
  408e88:	ldur	x8, [x29, #-72]
  408e8c:	str	x8, [sp, #208]
  408e90:	mov	x8, xzr
  408e94:	stur	x8, [x29, #-72]
  408e98:	ldr	x8, [sp, #208]
  408e9c:	str	x8, [sp, #200]
  408ea0:	ldr	x8, [sp, #200]
  408ea4:	ldur	x9, [x29, #-32]
  408ea8:	str	x8, [x9]
  408eac:	ldur	w10, [x29, #-84]
  408eb0:	str	w10, [sp, #196]
  408eb4:	mov	w10, #0xffffffff            	// #-1
  408eb8:	stur	w10, [x29, #-84]
  408ebc:	ldr	w11, [sp, #196]
  408ec0:	str	w11, [sp, #192]
  408ec4:	ldr	w11, [sp, #192]
  408ec8:	ldur	x8, [x29, #-48]
  408ecc:	str	w11, [x8]
  408ed0:	ldur	x8, [x29, #-40]
  408ed4:	str	w10, [x8]
  408ed8:	ldur	x8, [x29, #-192]
  408edc:	ldur	x9, [x29, #-56]
  408ee0:	str	x8, [x9]
  408ee4:	stur	wzr, [x29, #-4]
  408ee8:	mov	w10, #0x1                   	// #1
  408eec:	str	w10, [sp, #484]
  408ef0:	b	408f14 <save_external_coredump+0xd2c>
  408ef4:	ldur	x8, [x29, #-80]
  408ef8:	cbz	x8, 408f04 <save_external_coredump+0xd1c>
  408efc:	ldur	x0, [x29, #-80]
  408f00:	bl	4032c8 <unlink@plt>
  408f04:	ldur	w8, [x29, #-248]
  408f08:	stur	w8, [x29, #-4]
  408f0c:	mov	w8, #0x1                   	// #1
  408f10:	str	w8, [sp, #484]
  408f14:	sub	x0, x29, #0x54
  408f18:	bl	406c60 <closep>
  408f1c:	sub	x0, x29, #0x50
  408f20:	bl	405eec <freep>
  408f24:	sub	x0, x29, #0x48
  408f28:	bl	405eec <freep>
  408f2c:	ldur	w0, [x29, #-4]
  408f30:	add	sp, sp, #0x2f0
  408f34:	ldr	x28, [sp, #16]
  408f38:	ldp	x29, x30, [sp], #32
  408f3c:	ret

0000000000408f40 <maybe_remove_external_coredump>:
  408f40:	sub	sp, sp, #0x50
  408f44:	stp	x29, x30, [sp, #64]
  408f48:	add	x29, sp, #0x40
  408f4c:	adrp	x8, 420000 <arg_storage>
  408f50:	add	x8, x8, #0x0
  408f54:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  408f58:	add	x9, x9, #0x500
  408f5c:	add	x2, x9, #0x3
  408f60:	stur	x0, [x29, #-16]
  408f64:	stur	x1, [x29, #-24]
  408f68:	ldr	w10, [x8]
  408f6c:	cmp	w10, #0x1
  408f70:	str	x2, [sp, #16]
  408f74:	b.ne	408f98 <maybe_remove_external_coredump+0x58>  // b.any
  408f78:	ldur	x8, [x29, #-24]
  408f7c:	adrp	x9, 420000 <arg_storage>
  408f80:	add	x9, x9, #0x10
  408f84:	ldr	x9, [x9]
  408f88:	cmp	x8, x9
  408f8c:	b.hi	408f98 <maybe_remove_external_coredump+0x58>  // b.pmore
  408f90:	stur	wzr, [x29, #-4]
  408f94:	b	409068 <maybe_remove_external_coredump+0x128>
  408f98:	ldur	x8, [x29, #-16]
  408f9c:	cbnz	x8, 408fac <maybe_remove_external_coredump+0x6c>
  408fa0:	mov	w8, #0x1                   	// #1
  408fa4:	stur	w8, [x29, #-4]
  408fa8:	b	409068 <maybe_remove_external_coredump+0x128>
  408fac:	ldur	x0, [x29, #-16]
  408fb0:	bl	4032c8 <unlink@plt>
  408fb4:	cmp	w0, #0x0
  408fb8:	cset	w8, ge  // ge = tcont
  408fbc:	tbnz	w8, #0, 409060 <maybe_remove_external_coredump+0x120>
  408fc0:	bl	402f18 <__errno_location@plt>
  408fc4:	ldr	w8, [x0]
  408fc8:	cmp	w8, #0x2
  408fcc:	b.eq	409060 <maybe_remove_external_coredump+0x120>  // b.none
  408fd0:	mov	w8, #0x3                   	// #3
  408fd4:	stur	w8, [x29, #-28]
  408fd8:	bl	402f18 <__errno_location@plt>
  408fdc:	ldr	w8, [x0]
  408fe0:	str	w8, [sp, #32]
  408fe4:	str	wzr, [sp, #28]
  408fe8:	ldr	w0, [sp, #28]
  408fec:	bl	402d78 <log_get_max_level_realm@plt>
  408ff0:	ldur	w8, [x29, #-28]
  408ff4:	and	w8, w8, #0x7
  408ff8:	cmp	w0, w8
  408ffc:	b.lt	409038 <maybe_remove_external_coredump+0xf8>  // b.tstop
  409000:	ldr	w8, [sp, #28]
  409004:	ldur	w9, [x29, #-28]
  409008:	orr	w0, w9, w8, lsl #10
  40900c:	ldr	w1, [sp, #32]
  409010:	ldur	x6, [x29, #-16]
  409014:	ldr	x2, [sp, #16]
  409018:	mov	w3, #0x12a                 	// #298
  40901c:	adrp	x4, 40c000 <_fini+0xb20>
  409020:	add	x4, x4, #0x6ad
  409024:	adrp	x5, 40c000 <_fini+0xb20>
  409028:	add	x5, x5, #0x6cc
  40902c:	bl	402d88 <log_internal_realm@plt>
  409030:	str	w0, [sp, #12]
  409034:	b	40904c <maybe_remove_external_coredump+0x10c>
  409038:	ldr	w0, [sp, #32]
  40903c:	bl	402d98 <abs@plt>
  409040:	mov	w8, wzr
  409044:	subs	w8, w8, w0, uxtb
  409048:	str	w8, [sp, #12]
  40904c:	ldr	w8, [sp, #12]
  409050:	str	w8, [sp, #24]
  409054:	ldr	w8, [sp, #24]
  409058:	stur	w8, [x29, #-4]
  40905c:	b	409068 <maybe_remove_external_coredump+0x128>
  409060:	mov	w8, #0x1                   	// #1
  409064:	stur	w8, [x29, #-4]
  409068:	ldur	w0, [x29, #-4]
  40906c:	ldp	x29, x30, [sp, #64]
  409070:	add	sp, sp, #0x50
  409074:	ret

0000000000409078 <change_uid_gid>:
  409078:	sub	sp, sp, #0x60
  40907c:	stp	x29, x30, [sp, #80]
  409080:	add	x29, sp, #0x50
  409084:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  409088:	add	x8, x8, #0x500
  40908c:	add	x2, x8, #0x3
  409090:	sub	x1, x29, #0x14
  409094:	stur	x0, [x29, #-16]
  409098:	ldur	x8, [x29, #-16]
  40909c:	ldr	x0, [x8, #8]
  4090a0:	str	x2, [sp, #16]
  4090a4:	bl	403248 <parse_uid@plt>
  4090a8:	stur	w0, [x29, #-28]
  4090ac:	ldur	w9, [x29, #-28]
  4090b0:	cmp	w9, #0x0
  4090b4:	cset	w9, ge  // ge = tcont
  4090b8:	tbnz	w9, #0, 4090c8 <change_uid_gid+0x50>
  4090bc:	ldur	w8, [x29, #-28]
  4090c0:	stur	w8, [x29, #-4]
  4090c4:	b	4091ec <change_uid_gid+0x174>
  4090c8:	ldur	w8, [x29, #-20]
  4090cc:	cmp	w8, #0x3e7
  4090d0:	b.hi	4091a4 <change_uid_gid+0x12c>  // b.pmore
  4090d4:	add	x0, sp, #0x28
  4090d8:	adrp	x8, 40c000 <_fini+0xb20>
  4090dc:	add	x8, x8, #0x6e4
  4090e0:	str	x8, [sp, #40]
  4090e4:	sub	x1, x29, #0x14
  4090e8:	sub	x2, x29, #0x18
  4090ec:	mov	x8, xzr
  4090f0:	mov	x3, x8
  4090f4:	mov	x4, x8
  4090f8:	mov	w9, wzr
  4090fc:	mov	w5, w9
  409100:	bl	4032d8 <get_user_creds@plt>
  409104:	stur	w0, [x29, #-28]
  409108:	ldur	w9, [x29, #-28]
  40910c:	cmp	w9, #0x0
  409110:	cset	w9, ge  // ge = tcont
  409114:	tbnz	w9, #0, 4091a0 <change_uid_gid+0x128>
  409118:	mov	w8, #0x4                   	// #4
  40911c:	str	w8, [sp, #36]
  409120:	ldur	w8, [x29, #-28]
  409124:	str	w8, [sp, #32]
  409128:	str	wzr, [sp, #28]
  40912c:	ldr	w0, [sp, #28]
  409130:	bl	402d78 <log_get_max_level_realm@plt>
  409134:	ldr	w8, [sp, #36]
  409138:	and	w8, w8, #0x7
  40913c:	cmp	w0, w8
  409140:	b.lt	40917c <change_uid_gid+0x104>  // b.tstop
  409144:	ldr	w8, [sp, #28]
  409148:	ldr	w9, [sp, #36]
  40914c:	orr	w0, w9, w8, lsl #10
  409150:	ldr	w1, [sp, #32]
  409154:	ldr	x6, [sp, #40]
  409158:	ldr	x2, [sp, #16]
  40915c:	mov	w3, #0x2c5                 	// #709
  409160:	adrp	x4, 40c000 <_fini+0xb20>
  409164:	add	x4, x4, #0x6f5
  409168:	adrp	x5, 40c000 <_fini+0xb20>
  40916c:	add	x5, x5, #0x704
  409170:	bl	402d88 <log_internal_realm@plt>
  409174:	str	w0, [sp, #12]
  409178:	b	409190 <change_uid_gid+0x118>
  40917c:	ldr	w0, [sp, #32]
  409180:	bl	402d98 <abs@plt>
  409184:	mov	w8, wzr
  409188:	subs	w8, w8, w0, uxtb
  40918c:	str	w8, [sp, #12]
  409190:	ldr	w8, [sp, #12]
  409194:	str	w8, [sp, #24]
  409198:	stur	wzr, [x29, #-24]
  40919c:	stur	wzr, [x29, #-20]
  4091a0:	b	4091d4 <change_uid_gid+0x15c>
  4091a4:	ldur	x8, [x29, #-16]
  4091a8:	ldr	x0, [x8, #16]
  4091ac:	sub	x1, x29, #0x18
  4091b0:	bl	40a4b8 <parse_gid>
  4091b4:	stur	w0, [x29, #-28]
  4091b8:	ldur	w9, [x29, #-28]
  4091bc:	cmp	w9, #0x0
  4091c0:	cset	w9, ge  // ge = tcont
  4091c4:	tbnz	w9, #0, 4091d4 <change_uid_gid+0x15c>
  4091c8:	ldur	w8, [x29, #-28]
  4091cc:	stur	w8, [x29, #-4]
  4091d0:	b	4091ec <change_uid_gid+0x174>
  4091d4:	ldur	w0, [x29, #-20]
  4091d8:	ldur	w1, [x29, #-24]
  4091dc:	mov	x8, xzr
  4091e0:	mov	x2, x8
  4091e4:	bl	4032e8 <drop_privileges@plt>
  4091e8:	stur	w0, [x29, #-4]
  4091ec:	ldur	w0, [x29, #-4]
  4091f0:	ldp	x29, x30, [sp, #80]
  4091f4:	add	sp, sp, #0x60
  4091f8:	ret

00000000004091fc <allocate_journal_field>:
  4091fc:	sub	sp, sp, #0xc0
  409200:	stp	x29, x30, [sp, #176]
  409204:	add	x29, sp, #0xb0
  409208:	mov	x8, xzr
  40920c:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  409210:	add	x9, x9, #0x500
  409214:	add	x9, x9, #0x3
  409218:	adrp	x10, 40c000 <_fini+0xb20>
  40921c:	add	x10, x10, #0x77f
  409220:	adrp	x11, 40c000 <_fini+0xb20>
  409224:	add	x11, x11, #0x740
  409228:	stur	w0, [x29, #-8]
  40922c:	stur	x1, [x29, #-16]
  409230:	stur	x2, [x29, #-24]
  409234:	stur	x3, [x29, #-32]
  409238:	stur	x8, [x29, #-40]
  40923c:	str	x9, [sp, #32]
  409240:	str	x10, [sp, #24]
  409244:	str	x11, [sp, #16]
  409248:	ldur	w8, [x29, #-8]
  40924c:	cmp	w8, #0x0
  409250:	cset	w8, ge  // ge = tcont
  409254:	mov	w9, #0x1                   	// #1
  409258:	eor	w8, w8, #0x1
  40925c:	eor	w8, w8, w9
  409260:	eor	w8, w8, w9
  409264:	and	w8, w8, #0x1
  409268:	mov	w0, w8
  40926c:	sxtw	x10, w0
  409270:	cbz	x10, 409294 <allocate_journal_field+0x98>
  409274:	mov	w8, wzr
  409278:	mov	w0, w8
  40927c:	adrp	x1, 40c000 <_fini+0xb20>
  409280:	add	x1, x1, #0x4ba
  409284:	ldr	x2, [sp, #32]
  409288:	mov	w3, #0x1ec                 	// #492
  40928c:	ldr	x4, [sp, #16]
  409290:	bl	402e58 <log_assert_failed_realm@plt>
  409294:	ldur	x8, [x29, #-24]
  409298:	cmp	x8, #0x0
  40929c:	cset	w9, ne  // ne = any
  4092a0:	mov	w10, #0x1                   	// #1
  4092a4:	eor	w9, w9, #0x1
  4092a8:	eor	w9, w9, w10
  4092ac:	eor	w9, w9, w10
  4092b0:	and	w9, w9, #0x1
  4092b4:	mov	w0, w9
  4092b8:	sxtw	x8, w0
  4092bc:	cbz	x8, 4092e0 <allocate_journal_field+0xe4>
  4092c0:	mov	w8, wzr
  4092c4:	mov	w0, w8
  4092c8:	adrp	x1, 40c000 <_fini+0xb20>
  4092cc:	add	x1, x1, #0x77b
  4092d0:	ldr	x2, [sp, #32]
  4092d4:	mov	w3, #0x1ed                 	// #493
  4092d8:	ldr	x4, [sp, #16]
  4092dc:	bl	402e58 <log_assert_failed_realm@plt>
  4092e0:	ldur	x8, [x29, #-32]
  4092e4:	cmp	x8, #0x0
  4092e8:	cset	w9, ne  // ne = any
  4092ec:	mov	w10, #0x1                   	// #1
  4092f0:	eor	w9, w9, #0x1
  4092f4:	eor	w9, w9, w10
  4092f8:	eor	w9, w9, w10
  4092fc:	and	w9, w9, #0x1
  409300:	mov	w0, w9
  409304:	sxtw	x8, w0
  409308:	cbz	x8, 40932c <allocate_journal_field+0x130>
  40930c:	mov	w8, wzr
  409310:	mov	w0, w8
  409314:	adrp	x1, 40c000 <_fini+0xb20>
  409318:	add	x1, x1, #0x178
  40931c:	ldr	x2, [sp, #32]
  409320:	mov	w3, #0x1ee                 	// #494
  409324:	ldr	x4, [sp, #16]
  409328:	bl	402e58 <log_assert_failed_realm@plt>
  40932c:	ldur	w0, [x29, #-8]
  409330:	mov	x8, xzr
  409334:	mov	x1, x8
  409338:	mov	w9, wzr
  40933c:	mov	w2, w9
  409340:	bl	403298 <lseek64@plt>
  409344:	mov	x8, #0xffffffffffffffff    	// #-1
  409348:	cmp	x0, x8
  40934c:	b.ne	4093e0 <allocate_journal_field+0x1e4>  // b.any
  409350:	mov	w8, #0x4                   	// #4
  409354:	stur	w8, [x29, #-52]
  409358:	bl	402f18 <__errno_location@plt>
  40935c:	ldr	w8, [x0]
  409360:	stur	w8, [x29, #-56]
  409364:	stur	wzr, [x29, #-60]
  409368:	ldur	w0, [x29, #-60]
  40936c:	bl	402d78 <log_get_max_level_realm@plt>
  409370:	ldur	w8, [x29, #-52]
  409374:	and	w8, w8, #0x7
  409378:	cmp	w0, w8
  40937c:	b.lt	4093b0 <allocate_journal_field+0x1b4>  // b.tstop
  409380:	ldur	w8, [x29, #-60]
  409384:	ldur	w9, [x29, #-52]
  409388:	orr	w0, w9, w8, lsl #10
  40938c:	ldur	w1, [x29, #-56]
  409390:	ldr	x2, [sp, #32]
  409394:	mov	w3, #0x1f1                 	// #497
  409398:	ldr	x4, [sp, #24]
  40939c:	adrp	x5, 40c000 <_fini+0xb20>
  4093a0:	add	x5, x5, #0x796
  4093a4:	bl	402d88 <log_internal_realm@plt>
  4093a8:	str	w0, [sp, #12]
  4093ac:	b	4093c4 <allocate_journal_field+0x1c8>
  4093b0:	ldur	w0, [x29, #-56]
  4093b4:	bl	402d98 <abs@plt>
  4093b8:	mov	w8, wzr
  4093bc:	subs	w8, w8, w0, uxtb
  4093c0:	str	w8, [sp, #12]
  4093c4:	ldr	w8, [sp, #12]
  4093c8:	stur	w8, [x29, #-64]
  4093cc:	ldur	w8, [x29, #-64]
  4093d0:	stur	w8, [x29, #-4]
  4093d4:	mov	w8, #0x1                   	// #1
  4093d8:	stur	w8, [x29, #-68]
  4093dc:	b	409630 <allocate_journal_field+0x434>
  4093e0:	ldur	x8, [x29, #-16]
  4093e4:	add	x0, x8, #0x9
  4093e8:	bl	402ee8 <malloc@plt>
  4093ec:	stur	x0, [x29, #-40]
  4093f0:	ldur	x8, [x29, #-40]
  4093f4:	cbnz	x8, 409480 <allocate_journal_field+0x284>
  4093f8:	mov	w8, #0x4                   	// #4
  4093fc:	stur	w8, [x29, #-72]
  409400:	stur	wzr, [x29, #-76]
  409404:	stur	wzr, [x29, #-80]
  409408:	ldur	w0, [x29, #-80]
  40940c:	bl	402d78 <log_get_max_level_realm@plt>
  409410:	ldur	w8, [x29, #-72]
  409414:	and	w8, w8, #0x7
  409418:	cmp	w0, w8
  40941c:	b.lt	409450 <allocate_journal_field+0x254>  // b.tstop
  409420:	ldur	w8, [x29, #-80]
  409424:	ldur	w9, [x29, #-72]
  409428:	orr	w0, w9, w8, lsl #10
  40942c:	ldur	w1, [x29, #-76]
  409430:	ldr	x2, [sp, #32]
  409434:	mov	w3, #0x1f5                 	// #501
  409438:	ldr	x4, [sp, #24]
  40943c:	adrp	x5, 40c000 <_fini+0xb20>
  409440:	add	x5, x5, #0x7a9
  409444:	bl	402d88 <log_internal_realm@plt>
  409448:	str	w0, [sp, #8]
  40944c:	b	409464 <allocate_journal_field+0x268>
  409450:	ldur	w0, [x29, #-76]
  409454:	bl	402d98 <abs@plt>
  409458:	mov	w8, wzr
  40945c:	subs	w8, w8, w0, uxtb
  409460:	str	w8, [sp, #8]
  409464:	ldr	w8, [sp, #8]
  409468:	stur	w8, [x29, #-84]
  40946c:	mov	w8, #0xfffffff4            	// #-12
  409470:	stur	w8, [x29, #-4]
  409474:	mov	w8, #0x1                   	// #1
  409478:	stur	w8, [x29, #-68]
  40947c:	b	409630 <allocate_journal_field+0x434>
  409480:	ldur	x8, [x29, #-40]
  409484:	adrp	x9, 40c000 <_fini+0xb20>
  409488:	add	x9, x9, #0x7ee
  40948c:	ldr	x10, [x9]
  409490:	str	x10, [x8]
  409494:	ldrb	w11, [x9, #8]
  409498:	strb	w11, [x8, #8]
  40949c:	ldur	w0, [x29, #-8]
  4094a0:	ldur	x8, [x29, #-40]
  4094a4:	add	x1, x8, #0x9
  4094a8:	ldur	x2, [x29, #-16]
  4094ac:	bl	4032f8 <read@plt>
  4094b0:	stur	x0, [x29, #-48]
  4094b4:	ldur	x8, [x29, #-48]
  4094b8:	cmp	x8, #0x0
  4094bc:	cset	w11, ge  // ge = tcont
  4094c0:	tbnz	w11, #0, 409550 <allocate_journal_field+0x354>
  4094c4:	mov	w8, #0x3                   	// #3
  4094c8:	str	w8, [sp, #88]
  4094cc:	ldur	x9, [x29, #-48]
  4094d0:	str	w9, [sp, #84]
  4094d4:	str	wzr, [sp, #80]
  4094d8:	ldr	w0, [sp, #80]
  4094dc:	bl	402d78 <log_get_max_level_realm@plt>
  4094e0:	ldr	w8, [sp, #88]
  4094e4:	and	w8, w8, #0x7
  4094e8:	cmp	w0, w8
  4094ec:	b.lt	409520 <allocate_journal_field+0x324>  // b.tstop
  4094f0:	ldr	w8, [sp, #80]
  4094f4:	ldr	w9, [sp, #88]
  4094f8:	orr	w0, w9, w8, lsl #10
  4094fc:	ldr	w1, [sp, #84]
  409500:	ldr	x2, [sp, #32]
  409504:	mov	w3, #0x1fd                 	// #509
  409508:	ldr	x4, [sp, #24]
  40950c:	adrp	x5, 40c000 <_fini+0xb20>
  409510:	add	x5, x5, #0x7f8
  409514:	bl	402d88 <log_internal_realm@plt>
  409518:	str	w0, [sp, #4]
  40951c:	b	409534 <allocate_journal_field+0x338>
  409520:	ldr	w0, [sp, #84]
  409524:	bl	402d98 <abs@plt>
  409528:	mov	w8, wzr
  40952c:	subs	w8, w8, w0, uxtb
  409530:	str	w8, [sp, #4]
  409534:	ldr	w8, [sp, #4]
  409538:	str	w8, [sp, #76]
  40953c:	ldr	w8, [sp, #76]
  409540:	stur	w8, [x29, #-4]
  409544:	mov	w8, #0x1                   	// #1
  409548:	stur	w8, [x29, #-68]
  40954c:	b	409630 <allocate_journal_field+0x434>
  409550:	ldur	x8, [x29, #-48]
  409554:	ldur	x9, [x29, #-16]
  409558:	cmp	x8, x9
  40955c:	b.cs	4095f0 <allocate_journal_field+0x3f4>  // b.hs, b.nlast
  409560:	mov	w8, #0x3                   	// #3
  409564:	str	w8, [sp, #72]
  409568:	mov	w8, #0x5                   	// #5
  40956c:	movk	w8, #0x4000, lsl #16
  409570:	str	w8, [sp, #68]
  409574:	str	wzr, [sp, #64]
  409578:	ldr	w0, [sp, #64]
  40957c:	bl	402d78 <log_get_max_level_realm@plt>
  409580:	ldr	w8, [sp, #72]
  409584:	and	w8, w8, #0x7
  409588:	cmp	w0, w8
  40958c:	b.lt	4095c0 <allocate_journal_field+0x3c4>  // b.tstop
  409590:	ldr	w8, [sp, #64]
  409594:	ldr	w9, [sp, #72]
  409598:	orr	w0, w9, w8, lsl #10
  40959c:	ldr	w1, [sp, #68]
  4095a0:	ldr	x2, [sp, #32]
  4095a4:	mov	w3, #0x200                 	// #512
  4095a8:	ldr	x4, [sp, #24]
  4095ac:	adrp	x5, 40c000 <_fini+0xb20>
  4095b0:	add	x5, x5, #0x815
  4095b4:	bl	402d88 <log_internal_realm@plt>
  4095b8:	str	w0, [sp]
  4095bc:	b	4095d4 <allocate_journal_field+0x3d8>
  4095c0:	ldr	w0, [sp, #68]
  4095c4:	bl	402d98 <abs@plt>
  4095c8:	mov	w8, wzr
  4095cc:	subs	w8, w8, w0, uxtb
  4095d0:	str	w8, [sp]
  4095d4:	ldr	w8, [sp]
  4095d8:	str	w8, [sp, #60]
  4095dc:	ldr	w8, [sp, #60]
  4095e0:	stur	w8, [x29, #-4]
  4095e4:	mov	w8, #0x1                   	// #1
  4095e8:	stur	w8, [x29, #-68]
  4095ec:	b	409630 <allocate_journal_field+0x434>
  4095f0:	ldur	x8, [x29, #-40]
  4095f4:	str	x8, [sp, #48]
  4095f8:	mov	x8, xzr
  4095fc:	stur	x8, [x29, #-40]
  409600:	ldr	x8, [sp, #48]
  409604:	str	x8, [sp, #40]
  409608:	ldr	x8, [sp, #40]
  40960c:	ldur	x9, [x29, #-24]
  409610:	str	x8, [x9]
  409614:	ldur	x8, [x29, #-16]
  409618:	add	x8, x8, #0x9
  40961c:	ldur	x9, [x29, #-32]
  409620:	str	x8, [x9]
  409624:	stur	wzr, [x29, #-4]
  409628:	mov	w10, #0x1                   	// #1
  40962c:	stur	w10, [x29, #-68]
  409630:	sub	x0, x29, #0x28
  409634:	bl	405eec <freep>
  409638:	ldur	w0, [x29, #-4]
  40963c:	ldp	x29, x30, [sp, #176]
  409640:	add	sp, sp, #0xc0
  409644:	ret

0000000000409648 <safe_atou64>:
  409648:	sub	sp, sp, #0x20
  40964c:	stp	x29, x30, [sp, #16]
  409650:	add	x29, sp, #0x10
  409654:	str	x0, [sp, #8]
  409658:	str	x1, [sp]
  40965c:	ldr	x0, [sp, #8]
  409660:	ldr	x1, [sp]
  409664:	bl	403308 <safe_atollu@plt>
  409668:	ldp	x29, x30, [sp, #16]
  40966c:	add	sp, sp, #0x20
  409670:	ret

0000000000409674 <storage_size_max>:
  409674:	sub	sp, sp, #0x30
  409678:	stp	x29, x30, [sp, #32]
  40967c:	add	x29, sp, #0x20
  409680:	adrp	x8, 420000 <arg_storage>
  409684:	add	x8, x8, #0x0
  409688:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  40968c:	add	x9, x9, #0x500
  409690:	add	x2, x9, #0x3
  409694:	ldr	w10, [x8]
  409698:	cmp	w10, #0x1
  40969c:	str	x8, [sp, #16]
  4096a0:	str	x2, [sp, #8]
  4096a4:	b.ne	4096bc <storage_size_max+0x48>  // b.any
  4096a8:	adrp	x8, 420000 <arg_storage>
  4096ac:	add	x8, x8, #0x10
  4096b0:	ldr	x8, [x8]
  4096b4:	stur	x8, [x29, #-8]
  4096b8:	b	409738 <storage_size_max+0xc4>
  4096bc:	ldr	x8, [sp, #16]
  4096c0:	ldr	w9, [x8]
  4096c4:	cmp	w9, #0x2
  4096c8:	b.ne	4096e0 <storage_size_max+0x6c>  // b.any
  4096cc:	adrp	x8, 420000 <arg_storage>
  4096d0:	add	x8, x8, #0x18
  4096d4:	ldr	x8, [x8]
  4096d8:	stur	x8, [x29, #-8]
  4096dc:	b	409738 <storage_size_max+0xc4>
  4096e0:	ldr	x8, [sp, #16]
  4096e4:	ldr	w9, [x8]
  4096e8:	cmp	w9, #0x0
  4096ec:	cset	w9, eq  // eq = none
  4096f0:	mov	w10, #0x1                   	// #1
  4096f4:	eor	w9, w9, #0x1
  4096f8:	eor	w9, w9, w10
  4096fc:	eor	w9, w9, w10
  409700:	and	w9, w9, #0x1
  409704:	mov	w0, w9
  409708:	sxtw	x11, w0
  40970c:	cbz	x11, 409734 <storage_size_max+0xc0>
  409710:	mov	w8, wzr
  409714:	mov	w0, w8
  409718:	adrp	x1, 40c000 <_fini+0xb20>
  40971c:	add	x1, x1, #0x3ba
  409720:	ldr	x2, [sp, #8]
  409724:	mov	w3, #0xaa                  	// #170
  409728:	adrp	x4, 40c000 <_fini+0xb20>
  40972c:	add	x4, x4, #0x3df
  409730:	bl	402e58 <log_assert_failed_realm@plt>
  409734:	stur	xzr, [x29, #-8]
  409738:	ldur	x0, [x29, #-8]
  40973c:	ldp	x29, x30, [sp, #32]
  409740:	add	sp, sp, #0x30
  409744:	ret

0000000000409748 <make_filename>:
  409748:	sub	sp, sp, #0x110
  40974c:	stp	x29, x30, [sp, #224]
  409750:	stp	x28, x21, [sp, #240]
  409754:	stp	x20, x19, [sp, #256]
  409758:	add	x29, sp, #0xe0
  40975c:	mov	x8, xzr
  409760:	adrp	x9, 40c000 <_fini+0xb20>
  409764:	add	x9, x9, #0x42b
  409768:	adrp	x10, 40b000 <vacuum_candidate_freep+0x20>
  40976c:	add	x10, x10, #0x500
  409770:	add	x2, x10, #0x3
  409774:	stur	x0, [x29, #-16]
  409778:	stur	x1, [x29, #-24]
  40977c:	stur	x8, [x29, #-32]
  409780:	stur	x8, [x29, #-40]
  409784:	stur	x8, [x29, #-48]
  409788:	stur	x8, [x29, #-56]
  40978c:	stur	xzr, [x29, #-72]
  409790:	stur	xzr, [x29, #-64]
  409794:	stur	x9, [x29, #-88]
  409798:	stur	x2, [x29, #-96]
  40979c:	ldur	x8, [x29, #-16]
  4097a0:	cmp	x8, #0x0
  4097a4:	cset	w9, ne  // ne = any
  4097a8:	mov	w10, #0x1                   	// #1
  4097ac:	eor	w9, w9, #0x1
  4097b0:	eor	w9, w9, w10
  4097b4:	eor	w9, w9, w10
  4097b8:	and	w9, w9, #0x1
  4097bc:	mov	w0, w9
  4097c0:	sxtw	x8, w0
  4097c4:	cbz	x8, 4097ec <make_filename+0xa4>
  4097c8:	mov	w8, wzr
  4097cc:	mov	w0, w8
  4097d0:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  4097d4:	add	x1, x1, #0xa41
  4097d8:	ldur	x2, [x29, #-96]
  4097dc:	mov	w3, #0x134                 	// #308
  4097e0:	adrp	x4, 40c000 <_fini+0xb20>
  4097e4:	add	x4, x4, #0x3ff
  4097e8:	bl	402e58 <log_assert_failed_realm@plt>
  4097ec:	ldur	x8, [x29, #-16]
  4097f0:	ldr	x0, [x8, #56]
  4097f4:	ldur	x1, [x29, #-88]
  4097f8:	bl	409d8c <xescape>
  4097fc:	stur	x0, [x29, #-32]
  409800:	ldur	x8, [x29, #-32]
  409804:	cbnz	x8, 40981c <make_filename+0xd4>
  409808:	mov	w8, #0xfffffff4            	// #-12
  40980c:	stur	w8, [x29, #-4]
  409810:	mov	w8, #0x1                   	// #1
  409814:	stur	w8, [x29, #-80]
  409818:	b	4099e4 <make_filename+0x29c>
  40981c:	ldur	x8, [x29, #-16]
  409820:	ldr	x0, [x8, #8]
  409824:	ldur	x1, [x29, #-88]
  409828:	bl	409d8c <xescape>
  40982c:	stur	x0, [x29, #-40]
  409830:	ldur	x8, [x29, #-40]
  409834:	cbnz	x8, 40984c <make_filename+0x104>
  409838:	mov	w8, #0xfffffff4            	// #-12
  40983c:	stur	w8, [x29, #-4]
  409840:	mov	w8, #0x1                   	// #1
  409844:	stur	w8, [x29, #-80]
  409848:	b	4099e4 <make_filename+0x29c>
  40984c:	sub	x0, x29, #0x48
  409850:	bl	403318 <sd_id128_get_boot@plt>
  409854:	stur	w0, [x29, #-76]
  409858:	ldur	w8, [x29, #-76]
  40985c:	cmp	w8, #0x0
  409860:	cset	w8, ge  // ge = tcont
  409864:	tbnz	w8, #0, 40987c <make_filename+0x134>
  409868:	ldur	w8, [x29, #-76]
  40986c:	stur	w8, [x29, #-4]
  409870:	mov	w8, #0x1                   	// #1
  409874:	stur	w8, [x29, #-80]
  409878:	b	4099e4 <make_filename+0x29c>
  40987c:	ldur	x8, [x29, #-16]
  409880:	ldr	x0, [x8]
  409884:	ldur	x1, [x29, #-88]
  409888:	bl	409d8c <xescape>
  40988c:	stur	x0, [x29, #-48]
  409890:	ldur	x8, [x29, #-48]
  409894:	cbnz	x8, 4098ac <make_filename+0x164>
  409898:	mov	w8, #0xfffffff4            	// #-12
  40989c:	stur	w8, [x29, #-4]
  4098a0:	mov	w8, #0x1                   	// #1
  4098a4:	stur	w8, [x29, #-80]
  4098a8:	b	4099e4 <make_filename+0x29c>
  4098ac:	ldur	x8, [x29, #-16]
  4098b0:	ldr	x0, [x8, #32]
  4098b4:	ldur	x1, [x29, #-88]
  4098b8:	bl	409d8c <xescape>
  4098bc:	stur	x0, [x29, #-56]
  4098c0:	ldur	x8, [x29, #-56]
  4098c4:	cbnz	x8, 4098dc <make_filename+0x194>
  4098c8:	mov	w8, #0xfffffff4            	// #-12
  4098cc:	stur	w8, [x29, #-4]
  4098d0:	mov	w8, #0x1                   	// #1
  4098d4:	stur	w8, [x29, #-80]
  4098d8:	b	4099e4 <make_filename+0x29c>
  4098dc:	ldur	x0, [x29, #-24]
  4098e0:	ldur	x2, [x29, #-32]
  4098e4:	ldur	x3, [x29, #-40]
  4098e8:	ldurb	w4, [x29, #-72]
  4098ec:	ldurb	w5, [x29, #-71]
  4098f0:	ldurb	w6, [x29, #-70]
  4098f4:	ldurb	w7, [x29, #-69]
  4098f8:	ldurb	w8, [x29, #-68]
  4098fc:	ldurb	w9, [x29, #-67]
  409900:	ldurb	w10, [x29, #-66]
  409904:	ldurb	w11, [x29, #-65]
  409908:	ldurb	w12, [x29, #-64]
  40990c:	ldurb	w13, [x29, #-63]
  409910:	ldurb	w14, [x29, #-62]
  409914:	ldurb	w15, [x29, #-61]
  409918:	ldurb	w16, [x29, #-60]
  40991c:	ldurb	w17, [x29, #-59]
  409920:	ldurb	w18, [x29, #-58]
  409924:	ldurb	w1, [x29, #-57]
  409928:	ldur	x19, [x29, #-48]
  40992c:	ldur	x20, [x29, #-56]
  409930:	adrp	x21, 40c000 <_fini+0xb20>
  409934:	add	x21, x21, #0x42f
  409938:	stur	w1, [x29, #-100]
  40993c:	mov	x1, x21
  409940:	mov	x21, sp
  409944:	str	w8, [x21]
  409948:	mov	x21, sp
  40994c:	str	w9, [x21, #8]
  409950:	mov	x21, sp
  409954:	str	w10, [x21, #16]
  409958:	mov	x21, sp
  40995c:	str	w11, [x21, #24]
  409960:	mov	x21, sp
  409964:	str	w12, [x21, #32]
  409968:	mov	x21, sp
  40996c:	str	w13, [x21, #40]
  409970:	mov	x21, sp
  409974:	str	w14, [x21, #48]
  409978:	mov	x21, sp
  40997c:	str	w15, [x21, #56]
  409980:	mov	x21, sp
  409984:	str	w16, [x21, #64]
  409988:	mov	x21, sp
  40998c:	str	w17, [x21, #72]
  409990:	mov	x21, sp
  409994:	str	w18, [x21, #80]
  409998:	mov	x21, sp
  40999c:	ldur	w8, [x29, #-100]
  4099a0:	str	w8, [x21, #88]
  4099a4:	mov	x21, sp
  4099a8:	str	x19, [x21, #96]
  4099ac:	mov	x19, sp
  4099b0:	str	x20, [x19, #104]
  4099b4:	bl	403018 <asprintf@plt>
  4099b8:	cmp	w0, #0x0
  4099bc:	cset	w8, ge  // ge = tcont
  4099c0:	tbnz	w8, #0, 4099d8 <make_filename+0x290>
  4099c4:	mov	w8, #0xfffffff4            	// #-12
  4099c8:	stur	w8, [x29, #-4]
  4099cc:	mov	w8, #0x1                   	// #1
  4099d0:	stur	w8, [x29, #-80]
  4099d4:	b	4099e4 <make_filename+0x29c>
  4099d8:	stur	wzr, [x29, #-4]
  4099dc:	mov	w8, #0x1                   	// #1
  4099e0:	stur	w8, [x29, #-80]
  4099e4:	sub	x0, x29, #0x38
  4099e8:	bl	405eec <freep>
  4099ec:	sub	x0, x29, #0x30
  4099f0:	bl	405eec <freep>
  4099f4:	sub	x0, x29, #0x28
  4099f8:	bl	405eec <freep>
  4099fc:	sub	x0, x29, #0x20
  409a00:	bl	405eec <freep>
  409a04:	ldur	w0, [x29, #-4]
  409a08:	ldp	x20, x19, [sp, #256]
  409a0c:	ldp	x28, x21, [sp, #240]
  409a10:	ldp	x29, x30, [sp, #224]
  409a14:	add	sp, sp, #0x110
  409a18:	ret

0000000000409a1c <copy_bytes>:
  409a1c:	sub	sp, sp, #0x30
  409a20:	stp	x29, x30, [sp, #32]
  409a24:	add	x29, sp, #0x20
  409a28:	mov	x8, xzr
  409a2c:	mov	x4, x8
  409a30:	mov	x5, x8
  409a34:	mov	x6, x8
  409a38:	stur	w0, [x29, #-4]
  409a3c:	stur	w1, [x29, #-8]
  409a40:	str	x2, [sp, #16]
  409a44:	str	w3, [sp, #12]
  409a48:	ldur	w0, [x29, #-4]
  409a4c:	ldur	w1, [x29, #-8]
  409a50:	ldr	x2, [sp, #16]
  409a54:	ldr	w3, [sp, #12]
  409a58:	mov	x7, x8
  409a5c:	bl	403328 <copy_bytes_full@plt>
  409a60:	ldp	x29, x30, [sp, #32]
  409a64:	add	sp, sp, #0x30
  409a68:	ret

0000000000409a6c <coredump_tmpfile_name>:
  409a6c:	sub	sp, sp, #0x10
  409a70:	str	x0, [sp, #8]
  409a74:	ldr	x8, [sp, #8]
  409a78:	cbz	x8, 409a88 <coredump_tmpfile_name+0x1c>
  409a7c:	ldr	x8, [sp, #8]
  409a80:	str	x8, [sp]
  409a84:	b	409a94 <coredump_tmpfile_name+0x28>
  409a88:	adrp	x8, 40c000 <_fini+0xb20>
  409a8c:	add	x8, x8, #0x4a1
  409a90:	str	x8, [sp]
  409a94:	ldr	x8, [sp]
  409a98:	mov	x0, x8
  409a9c:	add	sp, sp, #0x10
  409aa0:	ret

0000000000409aa4 <fix_permissions>:
  409aa4:	sub	sp, sp, #0x80
  409aa8:	stp	x29, x30, [sp, #112]
  409aac:	add	x29, sp, #0x70
  409ab0:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  409ab4:	add	x8, x8, #0x500
  409ab8:	add	x8, x8, #0x3
  409abc:	adrp	x9, 40c000 <_fini+0xb20>
  409ac0:	add	x9, x9, #0x4c2
  409ac4:	stur	w0, [x29, #-8]
  409ac8:	stur	x1, [x29, #-16]
  409acc:	stur	x2, [x29, #-24]
  409ad0:	stur	x3, [x29, #-32]
  409ad4:	stur	w4, [x29, #-36]
  409ad8:	str	x8, [sp, #32]
  409adc:	str	x9, [sp, #24]
  409ae0:	ldur	w8, [x29, #-8]
  409ae4:	cmp	w8, #0x0
  409ae8:	cset	w8, ge  // ge = tcont
  409aec:	mov	w9, #0x1                   	// #1
  409af0:	eor	w8, w8, #0x1
  409af4:	eor	w8, w8, w9
  409af8:	eor	w8, w8, w9
  409afc:	and	w8, w8, #0x1
  409b00:	mov	w0, w8
  409b04:	sxtw	x10, w0
  409b08:	cbz	x10, 409b2c <fix_permissions+0x88>
  409b0c:	mov	w8, wzr
  409b10:	mov	w0, w8
  409b14:	adrp	x1, 40c000 <_fini+0xb20>
  409b18:	add	x1, x1, #0x4ba
  409b1c:	ldr	x2, [sp, #32]
  409b20:	mov	w3, #0x109                 	// #265
  409b24:	ldr	x4, [sp, #24]
  409b28:	bl	402e58 <log_assert_failed_realm@plt>
  409b2c:	ldur	x8, [x29, #-24]
  409b30:	cmp	x8, #0x0
  409b34:	cset	w9, ne  // ne = any
  409b38:	mov	w10, #0x1                   	// #1
  409b3c:	eor	w9, w9, #0x1
  409b40:	eor	w9, w9, w10
  409b44:	eor	w9, w9, w10
  409b48:	and	w9, w9, #0x1
  409b4c:	mov	w0, w9
  409b50:	sxtw	x8, w0
  409b54:	cbz	x8, 409b78 <fix_permissions+0xd4>
  409b58:	mov	w8, wzr
  409b5c:	mov	w0, w8
  409b60:	adrp	x1, 40c000 <_fini+0xb20>
  409b64:	add	x1, x1, #0x50f
  409b68:	ldr	x2, [sp, #32]
  409b6c:	mov	w3, #0x10a                 	// #266
  409b70:	ldr	x4, [sp, #24]
  409b74:	bl	402e58 <log_assert_failed_realm@plt>
  409b78:	ldur	x8, [x29, #-32]
  409b7c:	cmp	x8, #0x0
  409b80:	cset	w9, ne  // ne = any
  409b84:	mov	w10, #0x1                   	// #1
  409b88:	eor	w9, w9, #0x1
  409b8c:	eor	w9, w9, w10
  409b90:	eor	w9, w9, w10
  409b94:	and	w9, w9, #0x1
  409b98:	mov	w0, w9
  409b9c:	sxtw	x8, w0
  409ba0:	cbz	x8, 409bc4 <fix_permissions+0x120>
  409ba4:	mov	w8, wzr
  409ba8:	mov	w0, w8
  409bac:	adrp	x1, 40b000 <vacuum_candidate_freep+0x20>
  409bb0:	add	x1, x1, #0xa41
  409bb4:	ldr	x2, [sp, #32]
  409bb8:	mov	w3, #0x10b                 	// #267
  409bbc:	ldr	x4, [sp, #24]
  409bc0:	bl	402e58 <log_assert_failed_realm@plt>
  409bc4:	ldur	w0, [x29, #-8]
  409bc8:	mov	w1, #0x1a0                 	// #416
  409bcc:	bl	403338 <fchmod@plt>
  409bd0:	ldur	w8, [x29, #-8]
  409bd4:	ldur	w1, [x29, #-36]
  409bd8:	mov	w0, w8
  409bdc:	bl	409dc4 <fix_acl>
  409be0:	ldur	w8, [x29, #-8]
  409be4:	ldur	x1, [x29, #-32]
  409be8:	mov	w0, w8
  409bec:	bl	40a234 <fix_xattr>
  409bf0:	ldur	w8, [x29, #-8]
  409bf4:	mov	w0, w8
  409bf8:	bl	403348 <fsync@plt>
  409bfc:	cmp	w0, #0x0
  409c00:	cset	w8, ge  // ge = tcont
  409c04:	tbnz	w8, #0, 409cbc <fix_permissions+0x218>
  409c08:	mov	w8, #0x3                   	// #3
  409c0c:	stur	w8, [x29, #-44]
  409c10:	bl	402f18 <__errno_location@plt>
  409c14:	ldr	w8, [x0]
  409c18:	stur	w8, [x29, #-48]
  409c1c:	stur	wzr, [x29, #-52]
  409c20:	ldur	w0, [x29, #-52]
  409c24:	bl	402d78 <log_get_max_level_realm@plt>
  409c28:	ldur	w8, [x29, #-44]
  409c2c:	and	w8, w8, #0x7
  409c30:	cmp	w0, w8
  409c34:	b.lt	409c94 <fix_permissions+0x1f0>  // b.tstop
  409c38:	ldur	w8, [x29, #-52]
  409c3c:	ldur	w9, [x29, #-44]
  409c40:	orr	w0, w9, w8, lsl #10
  409c44:	ldur	w1, [x29, #-48]
  409c48:	ldur	x10, [x29, #-16]
  409c4c:	str	w0, [sp, #20]
  409c50:	mov	x0, x10
  409c54:	str	w1, [sp, #16]
  409c58:	bl	409a6c <coredump_tmpfile_name>
  409c5c:	ldr	w8, [sp, #20]
  409c60:	str	x0, [sp, #8]
  409c64:	mov	w0, w8
  409c68:	ldr	w1, [sp, #16]
  409c6c:	ldr	x2, [sp, #32]
  409c70:	mov	w3, #0x113                 	// #275
  409c74:	adrp	x4, 40c000 <_fini+0xb20>
  409c78:	add	x4, x4, #0x516
  409c7c:	adrp	x5, 40c000 <_fini+0xb20>
  409c80:	add	x5, x5, #0x526
  409c84:	ldr	x6, [sp, #8]
  409c88:	bl	402d88 <log_internal_realm@plt>
  409c8c:	str	w0, [sp, #4]
  409c90:	b	409ca8 <fix_permissions+0x204>
  409c94:	ldur	w0, [x29, #-48]
  409c98:	bl	402d98 <abs@plt>
  409c9c:	mov	w8, wzr
  409ca0:	subs	w8, w8, w0, uxtb
  409ca4:	str	w8, [sp, #4]
  409ca8:	ldr	w8, [sp, #4]
  409cac:	str	w8, [sp, #56]
  409cb0:	ldr	w8, [sp, #56]
  409cb4:	stur	w8, [x29, #-4]
  409cb8:	b	409d7c <fix_permissions+0x2d8>
  409cbc:	ldur	w0, [x29, #-8]
  409cc0:	bl	403358 <fsync_directory_of_file@plt>
  409cc4:	ldur	w8, [x29, #-8]
  409cc8:	ldur	x1, [x29, #-16]
  409ccc:	ldur	x2, [x29, #-24]
  409cd0:	mov	w0, w8
  409cd4:	bl	403368 <link_tmpfile@plt>
  409cd8:	stur	w0, [x29, #-40]
  409cdc:	ldur	w8, [x29, #-40]
  409ce0:	cmp	w8, #0x0
  409ce4:	cset	w8, ge  // ge = tcont
  409ce8:	tbnz	w8, #0, 409d78 <fix_permissions+0x2d4>
  409cec:	mov	w8, #0x3                   	// #3
  409cf0:	str	w8, [sp, #52]
  409cf4:	ldur	w8, [x29, #-40]
  409cf8:	str	w8, [sp, #48]
  409cfc:	str	wzr, [sp, #44]
  409d00:	ldr	w0, [sp, #44]
  409d04:	bl	402d78 <log_get_max_level_realm@plt>
  409d08:	ldr	w8, [sp, #52]
  409d0c:	and	w8, w8, #0x7
  409d10:	cmp	w0, w8
  409d14:	b.lt	409d50 <fix_permissions+0x2ac>  // b.tstop
  409d18:	ldr	w8, [sp, #44]
  409d1c:	ldr	w9, [sp, #52]
  409d20:	orr	w0, w9, w8, lsl #10
  409d24:	ldr	w1, [sp, #48]
  409d28:	ldur	x6, [x29, #-24]
  409d2c:	ldr	x2, [sp, #32]
  409d30:	mov	w3, #0x119                 	// #281
  409d34:	adrp	x4, 40c000 <_fini+0xb20>
  409d38:	add	x4, x4, #0x516
  409d3c:	adrp	x5, 40c000 <_fini+0xb20>
  409d40:	add	x5, x5, #0x545
  409d44:	bl	402d88 <log_internal_realm@plt>
  409d48:	str	w0, [sp]
  409d4c:	b	409d64 <fix_permissions+0x2c0>
  409d50:	ldr	w0, [sp, #48]
  409d54:	bl	402d98 <abs@plt>
  409d58:	mov	w8, wzr
  409d5c:	subs	w8, w8, w0, uxtb
  409d60:	str	w8, [sp]
  409d64:	ldr	w8, [sp]
  409d68:	str	w8, [sp, #40]
  409d6c:	ldr	w8, [sp, #40]
  409d70:	stur	w8, [x29, #-4]
  409d74:	b	409d7c <fix_permissions+0x2d8>
  409d78:	stur	wzr, [x29, #-4]
  409d7c:	ldur	w0, [x29, #-4]
  409d80:	ldp	x29, x30, [sp, #112]
  409d84:	add	sp, sp, #0x80
  409d88:	ret

0000000000409d8c <xescape>:
  409d8c:	sub	sp, sp, #0x20
  409d90:	stp	x29, x30, [sp, #16]
  409d94:	add	x29, sp, #0x10
  409d98:	mov	x2, #0xffffffffffffffff    	// #-1
  409d9c:	str	x0, [sp, #8]
  409da0:	str	x1, [sp]
  409da4:	ldr	x0, [sp, #8]
  409da8:	ldr	x1, [sp]
  409dac:	mov	w8, wzr
  409db0:	and	w3, w8, #0x1
  409db4:	bl	403378 <xescape_full@plt>
  409db8:	ldp	x29, x30, [sp, #16]
  409dbc:	add	sp, sp, #0x20
  409dc0:	ret

0000000000409dc4 <fix_acl>:
  409dc4:	sub	sp, sp, #0xc0
  409dc8:	stp	x29, x30, [sp, #176]
  409dcc:	add	x29, sp, #0xb0
  409dd0:	mov	x8, xzr
  409dd4:	adrp	x9, 40b000 <vacuum_candidate_freep+0x20>
  409dd8:	add	x9, x9, #0x500
  409ddc:	add	x9, x9, #0x3
  409de0:	adrp	x10, 40c000 <_fini+0xb20>
  409de4:	add	x10, x10, #0x587
  409de8:	adrp	x11, 40c000 <_fini+0xb20>
  409dec:	add	x11, x11, #0x5a5
  409df0:	stur	w0, [x29, #-8]
  409df4:	stur	w1, [x29, #-12]
  409df8:	stur	x8, [x29, #-24]
  409dfc:	str	x9, [sp, #40]
  409e00:	str	x10, [sp, #32]
  409e04:	str	x11, [sp, #24]
  409e08:	ldur	w8, [x29, #-8]
  409e0c:	cmp	w8, #0x0
  409e10:	cset	w8, ge  // ge = tcont
  409e14:	mov	w9, #0x1                   	// #1
  409e18:	eor	w8, w8, #0x1
  409e1c:	eor	w8, w8, w9
  409e20:	eor	w8, w8, w9
  409e24:	and	w8, w8, #0x1
  409e28:	mov	w0, w8
  409e2c:	sxtw	x10, w0
  409e30:	cbz	x10, 409e58 <fix_acl+0x94>
  409e34:	mov	w8, wzr
  409e38:	mov	w0, w8
  409e3c:	adrp	x1, 40c000 <_fini+0xb20>
  409e40:	add	x1, x1, #0x4ba
  409e44:	ldr	x2, [sp, #40]
  409e48:	mov	w3, #0xb6                  	// #182
  409e4c:	adrp	x4, 40c000 <_fini+0xb20>
  409e50:	add	x4, x4, #0x56f
  409e54:	bl	402e58 <log_assert_failed_realm@plt>
  409e58:	ldur	w0, [x29, #-12]
  409e5c:	bl	40a414 <uid_is_system>
  409e60:	tbnz	w0, #0, 409e80 <fix_acl+0xbc>
  409e64:	ldur	w0, [x29, #-12]
  409e68:	bl	40a434 <uid_is_dynamic>
  409e6c:	tbnz	w0, #0, 409e80 <fix_acl+0xbc>
  409e70:	ldur	w8, [x29, #-12]
  409e74:	mov	w9, #0xfffe                	// #65534
  409e78:	cmp	w8, w9
  409e7c:	b.ne	409e90 <fix_acl+0xcc>  // b.any
  409e80:	stur	wzr, [x29, #-4]
  409e84:	mov	w8, #0x1                   	// #1
  409e88:	stur	w8, [x29, #-48]
  409e8c:	b	40a21c <fix_acl+0x458>
  409e90:	ldur	w0, [x29, #-8]
  409e94:	bl	403388 <acl_get_fd@plt>
  409e98:	stur	x0, [x29, #-24]
  409e9c:	ldur	x8, [x29, #-24]
  409ea0:	cbnz	x8, 409f34 <fix_acl+0x170>
  409ea4:	mov	w8, #0x3                   	// #3
  409ea8:	stur	w8, [x29, #-52]
  409eac:	bl	402f18 <__errno_location@plt>
  409eb0:	ldr	w8, [x0]
  409eb4:	stur	w8, [x29, #-56]
  409eb8:	stur	wzr, [x29, #-60]
  409ebc:	ldur	w0, [x29, #-60]
  409ec0:	bl	402d78 <log_get_max_level_realm@plt>
  409ec4:	ldur	w8, [x29, #-52]
  409ec8:	and	w8, w8, #0x7
  409ecc:	cmp	w0, w8
  409ed0:	b.lt	409f04 <fix_acl+0x140>  // b.tstop
  409ed4:	ldur	w8, [x29, #-60]
  409ed8:	ldur	w9, [x29, #-52]
  409edc:	orr	w0, w9, w8, lsl #10
  409ee0:	ldur	w1, [x29, #-56]
  409ee4:	ldr	x2, [sp, #40]
  409ee8:	mov	w3, #0xc0                  	// #192
  409eec:	ldr	x4, [sp, #32]
  409ef0:	adrp	x5, 40c000 <_fini+0xb20>
  409ef4:	add	x5, x5, #0x58f
  409ef8:	bl	402d88 <log_internal_realm@plt>
  409efc:	str	w0, [sp, #20]
  409f00:	b	409f18 <fix_acl+0x154>
  409f04:	ldur	w0, [x29, #-56]
  409f08:	bl	402d98 <abs@plt>
  409f0c:	mov	w8, wzr
  409f10:	subs	w8, w8, w0, uxtb
  409f14:	str	w8, [sp, #20]
  409f18:	ldr	w8, [sp, #20]
  409f1c:	stur	w8, [x29, #-64]
  409f20:	ldur	w8, [x29, #-64]
  409f24:	stur	w8, [x29, #-4]
  409f28:	mov	w8, #0x1                   	// #1
  409f2c:	stur	w8, [x29, #-48]
  409f30:	b	40a21c <fix_acl+0x458>
  409f34:	sub	x0, x29, #0x18
  409f38:	sub	x1, x29, #0x20
  409f3c:	bl	403398 <acl_create_entry@plt>
  409f40:	cmp	w0, #0x0
  409f44:	cset	w8, lt  // lt = tstop
  409f48:	tbnz	w8, #0, 409f7c <fix_acl+0x1b8>
  409f4c:	ldur	x0, [x29, #-32]
  409f50:	mov	w1, #0x2                   	// #2
  409f54:	bl	4033a8 <acl_set_tag_type@plt>
  409f58:	cmp	w0, #0x0
  409f5c:	cset	w8, lt  // lt = tstop
  409f60:	tbnz	w8, #0, 409f7c <fix_acl+0x1b8>
  409f64:	ldur	x0, [x29, #-32]
  409f68:	sub	x1, x29, #0xc
  409f6c:	bl	4033b8 <acl_set_qualifier@plt>
  409f70:	cmp	w0, #0x0
  409f74:	cset	w8, ge  // ge = tcont
  409f78:	tbnz	w8, #0, 40a008 <fix_acl+0x244>
  409f7c:	mov	w8, #0x3                   	// #3
  409f80:	stur	w8, [x29, #-68]
  409f84:	bl	402f18 <__errno_location@plt>
  409f88:	ldr	w8, [x0]
  409f8c:	stur	w8, [x29, #-72]
  409f90:	stur	wzr, [x29, #-76]
  409f94:	ldur	w0, [x29, #-76]
  409f98:	bl	402d78 <log_get_max_level_realm@plt>
  409f9c:	ldur	w8, [x29, #-68]
  409fa0:	and	w8, w8, #0x7
  409fa4:	cmp	w0, w8
  409fa8:	b.lt	409fd8 <fix_acl+0x214>  // b.tstop
  409fac:	ldur	w8, [x29, #-76]
  409fb0:	ldur	w9, [x29, #-68]
  409fb4:	orr	w0, w9, w8, lsl #10
  409fb8:	ldur	w1, [x29, #-72]
  409fbc:	ldr	x2, [sp, #40]
  409fc0:	mov	w3, #0xc5                  	// #197
  409fc4:	ldr	x4, [sp, #32]
  409fc8:	ldr	x5, [sp, #24]
  409fcc:	bl	402d88 <log_internal_realm@plt>
  409fd0:	str	w0, [sp, #16]
  409fd4:	b	409fec <fix_acl+0x228>
  409fd8:	ldur	w0, [x29, #-72]
  409fdc:	bl	402d98 <abs@plt>
  409fe0:	mov	w8, wzr
  409fe4:	subs	w8, w8, w0, uxtb
  409fe8:	str	w8, [sp, #16]
  409fec:	ldr	w8, [sp, #16]
  409ff0:	stur	w8, [x29, #-80]
  409ff4:	ldur	w8, [x29, #-80]
  409ff8:	stur	w8, [x29, #-4]
  409ffc:	mov	w8, #0x1                   	// #1
  40a000:	stur	w8, [x29, #-48]
  40a004:	b	40a21c <fix_acl+0x458>
  40a008:	ldur	x0, [x29, #-32]
  40a00c:	sub	x1, x29, #0x28
  40a010:	bl	4033c8 <acl_get_permset@plt>
  40a014:	cmp	w0, #0x0
  40a018:	cset	w8, lt  // lt = tstop
  40a01c:	tbnz	w8, #0, 40a038 <fix_acl+0x274>
  40a020:	ldur	x0, [x29, #-40]
  40a024:	mov	w1, #0x4                   	// #4
  40a028:	bl	4033d8 <acl_add_perm@plt>
  40a02c:	cmp	w0, #0x0
  40a030:	cset	w8, ge  // ge = tcont
  40a034:	tbnz	w8, #0, 40a0c4 <fix_acl+0x300>
  40a038:	mov	w8, #0x4                   	// #4
  40a03c:	stur	w8, [x29, #-84]
  40a040:	bl	402f18 <__errno_location@plt>
  40a044:	ldr	w8, [x0]
  40a048:	str	w8, [sp, #88]
  40a04c:	str	wzr, [sp, #84]
  40a050:	ldr	w0, [sp, #84]
  40a054:	bl	402d78 <log_get_max_level_realm@plt>
  40a058:	ldur	w8, [x29, #-84]
  40a05c:	and	w8, w8, #0x7
  40a060:	cmp	w0, w8
  40a064:	b.lt	40a094 <fix_acl+0x2d0>  // b.tstop
  40a068:	ldr	w8, [sp, #84]
  40a06c:	ldur	w9, [x29, #-84]
  40a070:	orr	w0, w9, w8, lsl #10
  40a074:	ldr	w1, [sp, #88]
  40a078:	ldr	x2, [sp, #40]
  40a07c:	mov	w3, #0xc9                  	// #201
  40a080:	ldr	x4, [sp, #32]
  40a084:	ldr	x5, [sp, #24]
  40a088:	bl	402d88 <log_internal_realm@plt>
  40a08c:	str	w0, [sp, #12]
  40a090:	b	40a0a8 <fix_acl+0x2e4>
  40a094:	ldr	w0, [sp, #88]
  40a098:	bl	402d98 <abs@plt>
  40a09c:	mov	w8, wzr
  40a0a0:	subs	w8, w8, w0, uxtb
  40a0a4:	str	w8, [sp, #12]
  40a0a8:	ldr	w8, [sp, #12]
  40a0ac:	str	w8, [sp, #80]
  40a0b0:	ldr	w8, [sp, #80]
  40a0b4:	stur	w8, [x29, #-4]
  40a0b8:	mov	w8, #0x1                   	// #1
  40a0bc:	stur	w8, [x29, #-48]
  40a0c0:	b	40a21c <fix_acl+0x458>
  40a0c4:	sub	x0, x29, #0x18
  40a0c8:	bl	4033e8 <calc_acl_mask_if_needed@plt>
  40a0cc:	stur	w0, [x29, #-44]
  40a0d0:	ldur	w8, [x29, #-44]
  40a0d4:	cmp	w8, #0x0
  40a0d8:	cset	w8, ge  // ge = tcont
  40a0dc:	tbnz	w8, #0, 40a168 <fix_acl+0x3a4>
  40a0e0:	mov	w8, #0x4                   	// #4
  40a0e4:	str	w8, [sp, #76]
  40a0e8:	ldur	w8, [x29, #-44]
  40a0ec:	str	w8, [sp, #72]
  40a0f0:	str	wzr, [sp, #68]
  40a0f4:	ldr	w0, [sp, #68]
  40a0f8:	bl	402d78 <log_get_max_level_realm@plt>
  40a0fc:	ldr	w8, [sp, #76]
  40a100:	and	w8, w8, #0x7
  40a104:	cmp	w0, w8
  40a108:	b.lt	40a138 <fix_acl+0x374>  // b.tstop
  40a10c:	ldr	w8, [sp, #68]
  40a110:	ldr	w9, [sp, #76]
  40a114:	orr	w0, w9, w8, lsl #10
  40a118:	ldr	w1, [sp, #72]
  40a11c:	ldr	x2, [sp, #40]
  40a120:	mov	w3, #0xcd                  	// #205
  40a124:	ldr	x4, [sp, #32]
  40a128:	ldr	x5, [sp, #24]
  40a12c:	bl	402d88 <log_internal_realm@plt>
  40a130:	str	w0, [sp, #8]
  40a134:	b	40a14c <fix_acl+0x388>
  40a138:	ldr	w0, [sp, #72]
  40a13c:	bl	402d98 <abs@plt>
  40a140:	mov	w8, wzr
  40a144:	subs	w8, w8, w0, uxtb
  40a148:	str	w8, [sp, #8]
  40a14c:	ldr	w8, [sp, #8]
  40a150:	str	w8, [sp, #64]
  40a154:	ldr	w8, [sp, #64]
  40a158:	stur	w8, [x29, #-4]
  40a15c:	mov	w8, #0x1                   	// #1
  40a160:	stur	w8, [x29, #-48]
  40a164:	b	40a21c <fix_acl+0x458>
  40a168:	ldur	w0, [x29, #-8]
  40a16c:	ldur	x1, [x29, #-24]
  40a170:	bl	4033f8 <acl_set_fd@plt>
  40a174:	cmp	w0, #0x0
  40a178:	cset	w8, ge  // ge = tcont
  40a17c:	tbnz	w8, #0, 40a210 <fix_acl+0x44c>
  40a180:	mov	w8, #0x3                   	// #3
  40a184:	str	w8, [sp, #60]
  40a188:	bl	402f18 <__errno_location@plt>
  40a18c:	ldr	w8, [x0]
  40a190:	str	w8, [sp, #56]
  40a194:	str	wzr, [sp, #52]
  40a198:	ldr	w0, [sp, #52]
  40a19c:	bl	402d78 <log_get_max_level_realm@plt>
  40a1a0:	ldr	w8, [sp, #60]
  40a1a4:	and	w8, w8, #0x7
  40a1a8:	cmp	w0, w8
  40a1ac:	b.lt	40a1e0 <fix_acl+0x41c>  // b.tstop
  40a1b0:	ldr	w8, [sp, #52]
  40a1b4:	ldr	w9, [sp, #60]
  40a1b8:	orr	w0, w9, w8, lsl #10
  40a1bc:	ldr	w1, [sp, #56]
  40a1c0:	ldr	x2, [sp, #40]
  40a1c4:	mov	w3, #0xd0                  	// #208
  40a1c8:	ldr	x4, [sp, #32]
  40a1cc:	adrp	x5, 40c000 <_fini+0xb20>
  40a1d0:	add	x5, x5, #0x5bd
  40a1d4:	bl	402d88 <log_internal_realm@plt>
  40a1d8:	str	w0, [sp, #4]
  40a1dc:	b	40a1f4 <fix_acl+0x430>
  40a1e0:	ldr	w0, [sp, #56]
  40a1e4:	bl	402d98 <abs@plt>
  40a1e8:	mov	w8, wzr
  40a1ec:	subs	w8, w8, w0, uxtb
  40a1f0:	str	w8, [sp, #4]
  40a1f4:	ldr	w8, [sp, #4]
  40a1f8:	str	w8, [sp, #48]
  40a1fc:	ldr	w8, [sp, #48]
  40a200:	stur	w8, [x29, #-4]
  40a204:	mov	w8, #0x1                   	// #1
  40a208:	stur	w8, [x29, #-48]
  40a20c:	b	40a21c <fix_acl+0x458>
  40a210:	stur	wzr, [x29, #-4]
  40a214:	mov	w8, #0x1                   	// #1
  40a218:	stur	w8, [x29, #-48]
  40a21c:	sub	x0, x29, #0x18
  40a220:	bl	40a3e0 <acl_freep>
  40a224:	ldur	w0, [x29, #-4]
  40a228:	ldp	x29, x30, [sp, #176]
  40a22c:	add	sp, sp, #0xc0
  40a230:	ret

000000000040a234 <fix_xattr>:
  40a234:	sub	sp, sp, #0x60
  40a238:	stp	x29, x30, [sp, #80]
  40a23c:	add	x29, sp, #0x50
  40a240:	adrp	x8, 40b000 <vacuum_candidate_freep+0x20>
  40a244:	add	x8, x8, #0x500
  40a248:	add	x2, x8, #0x3
  40a24c:	stur	w0, [x29, #-4]
  40a250:	stur	x1, [x29, #-16]
  40a254:	stur	wzr, [x29, #-20]
  40a258:	str	x2, [sp, #40]
  40a25c:	ldur	w8, [x29, #-4]
  40a260:	cmp	w8, #0x0
  40a264:	cset	w8, ge  // ge = tcont
  40a268:	mov	w9, #0x1                   	// #1
  40a26c:	eor	w8, w8, #0x1
  40a270:	eor	w8, w8, w9
  40a274:	eor	w8, w8, w9
  40a278:	and	w8, w8, #0x1
  40a27c:	mov	w0, w8
  40a280:	sxtw	x10, w0
  40a284:	cbz	x10, 40a2ac <fix_xattr+0x78>
  40a288:	mov	w8, wzr
  40a28c:	mov	w0, w8
  40a290:	adrp	x1, 40c000 <_fini+0xb20>
  40a294:	add	x1, x1, #0x4ba
  40a298:	ldr	x2, [sp, #40]
  40a29c:	mov	w3, #0xe7                  	// #231
  40a2a0:	adrp	x4, 40c000 <_fini+0xb20>
  40a2a4:	add	x4, x4, #0x689
  40a2a8:	bl	402e58 <log_assert_failed_realm@plt>
  40a2ac:	stur	wzr, [x29, #-24]
  40a2b0:	ldur	w8, [x29, #-24]
  40a2b4:	cmp	w8, #0xa
  40a2b8:	b.cs	40a3d0 <fix_xattr+0x19c>  // b.hs, b.nlast
  40a2bc:	ldur	x8, [x29, #-16]
  40a2c0:	ldur	w9, [x29, #-24]
  40a2c4:	mov	w10, w9
  40a2c8:	mov	x11, #0x8                   	// #8
  40a2cc:	mul	x10, x11, x10
  40a2d0:	add	x8, x8, x10
  40a2d4:	ldr	x0, [x8]
  40a2d8:	bl	40a478 <isempty>
  40a2dc:	tbnz	w0, #0, 40a304 <fix_xattr+0xd0>
  40a2e0:	ldur	w8, [x29, #-24]
  40a2e4:	mov	w9, w8
  40a2e8:	mov	x10, #0x8                   	// #8
  40a2ec:	mul	x9, x10, x9
  40a2f0:	adrp	x10, 40c000 <_fini+0xb20>
  40a2f4:	add	x10, x10, #0xda8
  40a2f8:	add	x9, x10, x9
  40a2fc:	ldr	x9, [x9]
  40a300:	cbnz	x9, 40a308 <fix_xattr+0xd4>
  40a304:	b	40a3c0 <fix_xattr+0x18c>
  40a308:	ldur	w0, [x29, #-4]
  40a30c:	ldur	w8, [x29, #-24]
  40a310:	mov	w9, w8
  40a314:	mov	x10, #0x8                   	// #8
  40a318:	mul	x9, x10, x9
  40a31c:	adrp	x11, 40c000 <_fini+0xb20>
  40a320:	add	x11, x11, #0xda8
  40a324:	add	x9, x11, x9
  40a328:	ldr	x1, [x9]
  40a32c:	ldur	x9, [x29, #-16]
  40a330:	ldur	w8, [x29, #-24]
  40a334:	mov	w11, w8
  40a338:	mul	x11, x10, x11
  40a33c:	add	x9, x9, x11
  40a340:	ldr	x2, [x9]
  40a344:	ldur	x9, [x29, #-16]
  40a348:	ldur	w8, [x29, #-24]
  40a34c:	mov	w11, w8
  40a350:	mul	x10, x10, x11
  40a354:	add	x9, x9, x10
  40a358:	ldr	x9, [x9]
  40a35c:	str	w0, [sp, #36]
  40a360:	mov	x0, x9
  40a364:	str	x1, [sp, #24]
  40a368:	str	x2, [sp, #16]
  40a36c:	bl	402e48 <strlen@plt>
  40a370:	ldr	w8, [sp, #36]
  40a374:	str	x0, [sp, #8]
  40a378:	mov	w0, w8
  40a37c:	ldr	x1, [sp, #24]
  40a380:	ldr	x2, [sp, #16]
  40a384:	ldr	x3, [sp, #8]
  40a388:	mov	w4, #0x1                   	// #1
  40a38c:	bl	403408 <fsetxattr@plt>
  40a390:	stur	w0, [x29, #-28]
  40a394:	ldur	w8, [x29, #-28]
  40a398:	cmp	w8, #0x0
  40a39c:	cset	w8, ge  // ge = tcont
  40a3a0:	tbnz	w8, #0, 40a3c0 <fix_xattr+0x18c>
  40a3a4:	ldur	w8, [x29, #-20]
  40a3a8:	cbnz	w8, 40a3c0 <fix_xattr+0x18c>
  40a3ac:	bl	402f18 <__errno_location@plt>
  40a3b0:	ldr	w8, [x0]
  40a3b4:	mov	w9, wzr
  40a3b8:	subs	w8, w9, w8
  40a3bc:	stur	w8, [x29, #-20]
  40a3c0:	ldur	w8, [x29, #-24]
  40a3c4:	add	w8, w8, #0x1
  40a3c8:	stur	w8, [x29, #-24]
  40a3cc:	b	40a2b0 <fix_xattr+0x7c>
  40a3d0:	ldur	w0, [x29, #-20]
  40a3d4:	ldp	x29, x30, [sp, #80]
  40a3d8:	add	sp, sp, #0x60
  40a3dc:	ret

000000000040a3e0 <acl_freep>:
  40a3e0:	sub	sp, sp, #0x20
  40a3e4:	stp	x29, x30, [sp, #16]
  40a3e8:	add	x29, sp, #0x10
  40a3ec:	str	x0, [sp, #8]
  40a3f0:	ldr	x8, [sp, #8]
  40a3f4:	ldr	x8, [x8]
  40a3f8:	cbz	x8, 40a408 <acl_freep+0x28>
  40a3fc:	ldr	x8, [sp, #8]
  40a400:	ldr	x0, [x8]
  40a404:	bl	403418 <acl_free@plt>
  40a408:	ldp	x29, x30, [sp, #16]
  40a40c:	add	sp, sp, #0x20
  40a410:	ret

000000000040a414 <uid_is_system>:
  40a414:	sub	sp, sp, #0x10
  40a418:	str	w0, [sp, #12]
  40a41c:	ldr	w8, [sp, #12]
  40a420:	cmp	w8, #0x3e7
  40a424:	cset	w8, ls  // ls = plast
  40a428:	and	w0, w8, #0x1
  40a42c:	add	sp, sp, #0x10
  40a430:	ret

000000000040a434 <uid_is_dynamic>:
  40a434:	sub	sp, sp, #0x10
  40a438:	mov	w8, #0xef00                	// #61184
  40a43c:	str	w0, [sp, #12]
  40a440:	ldr	w9, [sp, #12]
  40a444:	mov	w10, #0x0                   	// #0
  40a448:	cmp	w8, w9
  40a44c:	str	w10, [sp, #8]
  40a450:	b.hi	40a468 <uid_is_dynamic+0x34>  // b.pmore
  40a454:	ldr	w8, [sp, #12]
  40a458:	mov	w9, #0xffef                	// #65519
  40a45c:	cmp	w8, w9
  40a460:	cset	w8, ls  // ls = plast
  40a464:	str	w8, [sp, #8]
  40a468:	ldr	w8, [sp, #8]
  40a46c:	and	w0, w8, #0x1
  40a470:	add	sp, sp, #0x10
  40a474:	ret

000000000040a478 <isempty>:
  40a478:	sub	sp, sp, #0x10
  40a47c:	str	x0, [sp, #8]
  40a480:	ldr	x8, [sp, #8]
  40a484:	mov	w9, #0x1                   	// #1
  40a488:	str	w9, [sp, #4]
  40a48c:	cbz	x8, 40a4a8 <isempty+0x30>
  40a490:	ldr	x8, [sp, #8]
  40a494:	ldrb	w9, [x8]
  40a498:	cmp	w9, #0x0
  40a49c:	cset	w9, ne  // ne = any
  40a4a0:	eor	w9, w9, #0x1
  40a4a4:	str	w9, [sp, #4]
  40a4a8:	ldr	w8, [sp, #4]
  40a4ac:	and	w0, w8, #0x1
  40a4b0:	add	sp, sp, #0x10
  40a4b4:	ret

000000000040a4b8 <parse_gid>:
  40a4b8:	sub	sp, sp, #0x20
  40a4bc:	stp	x29, x30, [sp, #16]
  40a4c0:	add	x29, sp, #0x10
  40a4c4:	str	x0, [sp, #8]
  40a4c8:	str	x1, [sp]
  40a4cc:	ldr	x0, [sp, #8]
  40a4d0:	ldr	x1, [sp]
  40a4d4:	bl	403248 <parse_uid@plt>
  40a4d8:	ldp	x29, x30, [sp, #16]
  40a4dc:	add	sp, sp, #0x20
  40a4e0:	ret

000000000040a4e4 <ALIGN_TO>:
  40a4e4:	sub	sp, sp, #0x10
  40a4e8:	str	x0, [sp, #8]
  40a4ec:	str	x1, [sp]
  40a4f0:	ldr	x8, [sp, #8]
  40a4f4:	ldr	x9, [sp]
  40a4f8:	add	x8, x8, x9
  40a4fc:	subs	x8, x8, #0x1
  40a500:	ldr	x9, [sp]
  40a504:	subs	x9, x9, #0x1
  40a508:	bic	x0, x8, x9
  40a50c:	add	sp, sp, #0x10
  40a510:	ret

000000000040a514 <coredump_vacuum>:
  40a514:	stp	x29, x30, [sp, #-32]!
  40a518:	str	x28, [sp, #16]
  40a51c:	mov	x29, sp
  40a520:	sub	sp, sp, #0x220
  40a524:	mov	x8, xzr
  40a528:	adrp	x9, 40c000 <_fini+0xb20>
  40a52c:	add	x9, x9, #0xa1f
  40a530:	add	x9, x9, #0x3
  40a534:	adrp	x10, 40c000 <_fini+0xb20>
  40a538:	add	x10, x10, #0xa41
  40a53c:	stur	w0, [x29, #-8]
  40a540:	stur	x1, [x29, #-16]
  40a544:	stur	x2, [x29, #-24]
  40a548:	stur	x8, [x29, #-32]
  40a54c:	ldur	x8, [x29, #-16]
  40a550:	str	x9, [sp, #56]
  40a554:	str	x10, [sp, #48]
  40a558:	cbnz	x8, 40a574 <coredump_vacuum+0x60>
  40a55c:	ldur	x8, [x29, #-24]
  40a560:	cbnz	x8, 40a574 <coredump_vacuum+0x60>
  40a564:	stur	wzr, [x29, #-4]
  40a568:	mov	w8, #0x1                   	// #1
  40a56c:	stur	w8, [x29, #-168]
  40a570:	b	40adf8 <coredump_vacuum+0x8e4>
  40a574:	ldur	w8, [x29, #-8]
  40a578:	cmp	w8, #0x0
  40a57c:	cset	w8, lt  // lt = tstop
  40a580:	tbnz	w8, #0, 40a62c <coredump_vacuum+0x118>
  40a584:	ldur	w0, [x29, #-8]
  40a588:	sub	x1, x29, #0xa0
  40a58c:	bl	40b4b0 <fstat64>
  40a590:	cmp	w0, #0x0
  40a594:	cset	w8, ge  // ge = tcont
  40a598:	tbnz	w8, #0, 40a62c <coredump_vacuum+0x118>
  40a59c:	mov	w8, #0x3                   	// #3
  40a5a0:	stur	w8, [x29, #-172]
  40a5a4:	bl	402f18 <__errno_location@plt>
  40a5a8:	ldr	w8, [x0]
  40a5ac:	stur	w8, [x29, #-176]
  40a5b0:	stur	wzr, [x29, #-180]
  40a5b4:	ldur	w0, [x29, #-180]
  40a5b8:	bl	402d78 <log_get_max_level_realm@plt>
  40a5bc:	ldur	w8, [x29, #-172]
  40a5c0:	and	w8, w8, #0x7
  40a5c4:	cmp	w0, w8
  40a5c8:	b.lt	40a5fc <coredump_vacuum+0xe8>  // b.tstop
  40a5cc:	ldur	w8, [x29, #-180]
  40a5d0:	ldur	w9, [x29, #-172]
  40a5d4:	orr	w0, w9, w8, lsl #10
  40a5d8:	ldur	w1, [x29, #-176]
  40a5dc:	ldr	x2, [sp, #56]
  40a5e0:	mov	w3, #0x7e                  	// #126
  40a5e4:	ldr	x4, [sp, #48]
  40a5e8:	adrp	x5, 40c000 <_fini+0xb20>
  40a5ec:	add	x5, x5, #0xa51
  40a5f0:	bl	402d88 <log_internal_realm@plt>
  40a5f4:	str	w0, [sp, #44]
  40a5f8:	b	40a610 <coredump_vacuum+0xfc>
  40a5fc:	ldur	w0, [x29, #-176]
  40a600:	bl	402d98 <abs@plt>
  40a604:	mov	w8, wzr
  40a608:	subs	w8, w8, w0, uxtb
  40a60c:	str	w8, [sp, #44]
  40a610:	ldr	w8, [sp, #44]
  40a614:	stur	w8, [x29, #-184]
  40a618:	ldur	w8, [x29, #-184]
  40a61c:	stur	w8, [x29, #-4]
  40a620:	mov	w8, #0x1                   	// #1
  40a624:	stur	w8, [x29, #-168]
  40a628:	b	40adf8 <coredump_vacuum+0x8e4>
  40a62c:	adrp	x0, 40c000 <_fini+0xb20>
  40a630:	add	x0, x0, #0x286
  40a634:	bl	4030c8 <opendir@plt>
  40a638:	stur	x0, [x29, #-32]
  40a63c:	ldur	x8, [x29, #-32]
  40a640:	cbnz	x8, 40a6f4 <coredump_vacuum+0x1e0>
  40a644:	bl	402f18 <__errno_location@plt>
  40a648:	ldr	w8, [x0]
  40a64c:	cmp	w8, #0x2
  40a650:	b.ne	40a664 <coredump_vacuum+0x150>  // b.any
  40a654:	stur	wzr, [x29, #-4]
  40a658:	mov	w8, #0x1                   	// #1
  40a65c:	stur	w8, [x29, #-168]
  40a660:	b	40adf8 <coredump_vacuum+0x8e4>
  40a664:	mov	w8, #0x3                   	// #3
  40a668:	stur	w8, [x29, #-188]
  40a66c:	bl	402f18 <__errno_location@plt>
  40a670:	ldr	w8, [x0]
  40a674:	stur	w8, [x29, #-192]
  40a678:	stur	wzr, [x29, #-196]
  40a67c:	ldur	w0, [x29, #-196]
  40a680:	bl	402d78 <log_get_max_level_realm@plt>
  40a684:	ldur	w8, [x29, #-188]
  40a688:	and	w8, w8, #0x7
  40a68c:	cmp	w0, w8
  40a690:	b.lt	40a6c4 <coredump_vacuum+0x1b0>  // b.tstop
  40a694:	ldur	w8, [x29, #-196]
  40a698:	ldur	w9, [x29, #-188]
  40a69c:	orr	w0, w9, w8, lsl #10
  40a6a0:	ldur	w1, [x29, #-192]
  40a6a4:	ldr	x2, [sp, #56]
  40a6a8:	mov	w3, #0x8c                  	// #140
  40a6ac:	ldr	x4, [sp, #48]
  40a6b0:	adrp	x5, 40c000 <_fini+0xb20>
  40a6b4:	add	x5, x5, #0xa67
  40a6b8:	bl	402d88 <log_internal_realm@plt>
  40a6bc:	str	w0, [sp, #40]
  40a6c0:	b	40a6d8 <coredump_vacuum+0x1c4>
  40a6c4:	ldur	w0, [x29, #-192]
  40a6c8:	bl	402d98 <abs@plt>
  40a6cc:	mov	w8, wzr
  40a6d0:	subs	w8, w8, w0, uxtb
  40a6d4:	str	w8, [sp, #40]
  40a6d8:	ldr	w8, [sp, #40]
  40a6dc:	stur	w8, [x29, #-200]
  40a6e0:	ldur	w8, [x29, #-200]
  40a6e4:	stur	w8, [x29, #-4]
  40a6e8:	mov	w8, #0x1                   	// #1
  40a6ec:	stur	w8, [x29, #-168]
  40a6f0:	b	40adf8 <coredump_vacuum+0x8e4>
  40a6f4:	mov	x8, xzr
  40a6f8:	stur	x8, [x29, #-208]
  40a6fc:	stur	x8, [x29, #-216]
  40a700:	stur	xzr, [x29, #-232]
  40a704:	ldur	x0, [x29, #-32]
  40a708:	bl	403458 <rewinddir@plt>
  40a70c:	bl	402f18 <__errno_location@plt>
  40a710:	str	wzr, [x0]
  40a714:	ldur	x0, [x29, #-32]
  40a718:	bl	403108 <readdir64@plt>
  40a71c:	stur	x0, [x29, #-224]
  40a720:	ldur	x8, [x29, #-224]
  40a724:	cbnz	x8, 40a74c <coredump_vacuum+0x238>
  40a728:	bl	402f18 <__errno_location@plt>
  40a72c:	ldr	w8, [x0]
  40a730:	cmp	w8, #0x0
  40a734:	cset	w8, le
  40a738:	tbnz	w8, #0, 40a748 <coredump_vacuum+0x234>
  40a73c:	mov	w8, #0x7                   	// #7
  40a740:	stur	w8, [x29, #-168]
  40a744:	b	40ad1c <coredump_vacuum+0x808>
  40a748:	b	40ab64 <coredump_vacuum+0x650>
  40a74c:	ldur	x8, [x29, #-224]
  40a750:	add	x0, x8, #0x13
  40a754:	bl	403118 <hidden_or_backup_file@plt>
  40a758:	tbnz	w0, #0, 40a760 <coredump_vacuum+0x24c>
  40a75c:	b	40a764 <coredump_vacuum+0x250>
  40a760:	b	40ab4c <coredump_vacuum+0x638>
  40a764:	ldur	x8, [x29, #-224]
  40a768:	add	x0, x8, #0x13
  40a76c:	add	x1, sp, #0xac
  40a770:	bl	40ae7c <uid_from_file_name>
  40a774:	stur	w0, [x29, #-164]
  40a778:	ldur	w9, [x29, #-164]
  40a77c:	cmp	w9, #0x0
  40a780:	cset	w9, ge  // ge = tcont
  40a784:	tbnz	w9, #0, 40a78c <coredump_vacuum+0x278>
  40a788:	b	40ab4c <coredump_vacuum+0x638>
  40a78c:	ldur	x0, [x29, #-32]
  40a790:	bl	4030d8 <dirfd@plt>
  40a794:	ldur	x8, [x29, #-224]
  40a798:	add	x1, x8, #0x13
  40a79c:	add	x2, sp, #0xb0
  40a7a0:	mov	w3, #0x900                 	// #2304
  40a7a4:	bl	40b4c0 <fstatat64>
  40a7a8:	cmp	w0, #0x0
  40a7ac:	cset	w9, ge  // ge = tcont
  40a7b0:	tbnz	w9, #0, 40a850 <coredump_vacuum+0x33c>
  40a7b4:	bl	402f18 <__errno_location@plt>
  40a7b8:	ldr	w8, [x0]
  40a7bc:	cmp	w8, #0x2
  40a7c0:	b.ne	40a7c8 <coredump_vacuum+0x2b4>  // b.any
  40a7c4:	b	40ab4c <coredump_vacuum+0x638>
  40a7c8:	mov	w8, #0x4                   	// #4
  40a7cc:	str	w8, [sp, #156]
  40a7d0:	bl	402f18 <__errno_location@plt>
  40a7d4:	ldr	w8, [x0]
  40a7d8:	str	w8, [sp, #152]
  40a7dc:	str	wzr, [sp, #148]
  40a7e0:	ldr	w0, [sp, #148]
  40a7e4:	bl	402d78 <log_get_max_level_realm@plt>
  40a7e8:	ldr	w8, [sp, #156]
  40a7ec:	and	w8, w8, #0x7
  40a7f0:	cmp	w0, w8
  40a7f4:	b.lt	40a830 <coredump_vacuum+0x31c>  // b.tstop
  40a7f8:	ldr	w8, [sp, #148]
  40a7fc:	ldr	w9, [sp, #156]
  40a800:	orr	w0, w9, w8, lsl #10
  40a804:	ldr	w1, [sp, #152]
  40a808:	ldur	x10, [x29, #-224]
  40a80c:	add	x6, x10, #0x13
  40a810:	ldr	x2, [sp, #56]
  40a814:	mov	w3, #0xa5                  	// #165
  40a818:	ldr	x4, [sp, #48]
  40a81c:	adrp	x5, 40c000 <_fini+0xb20>
  40a820:	add	x5, x5, #0xa89
  40a824:	bl	402d88 <log_internal_realm@plt>
  40a828:	str	w0, [sp, #36]
  40a82c:	b	40a844 <coredump_vacuum+0x330>
  40a830:	ldr	w0, [sp, #152]
  40a834:	bl	402d98 <abs@plt>
  40a838:	mov	w8, wzr
  40a83c:	subs	w8, w8, w0, uxtb
  40a840:	str	w8, [sp, #36]
  40a844:	ldr	w8, [sp, #36]
  40a848:	str	w8, [sp, #144]
  40a84c:	b	40ab4c <coredump_vacuum+0x638>
  40a850:	ldr	w8, [sp, #192]
  40a854:	and	w8, w8, #0xf000
  40a858:	cmp	w8, #0x8, lsl #12
  40a85c:	b.eq	40a864 <coredump_vacuum+0x350>  // b.none
  40a860:	b	40ab4c <coredump_vacuum+0x638>
  40a864:	ldur	w8, [x29, #-8]
  40a868:	cmp	w8, #0x0
  40a86c:	cset	w8, lt  // lt = tstop
  40a870:	tbnz	w8, #0, 40a898 <coredump_vacuum+0x384>
  40a874:	ldur	x8, [x29, #-160]
  40a878:	ldr	x9, [sp, #176]
  40a87c:	cmp	x8, x9
  40a880:	b.ne	40a898 <coredump_vacuum+0x384>  // b.any
  40a884:	ldur	x8, [x29, #-152]
  40a888:	ldr	x9, [sp, #184]
  40a88c:	cmp	x8, x9
  40a890:	b.ne	40a898 <coredump_vacuum+0x384>  // b.any
  40a894:	b	40ab4c <coredump_vacuum+0x638>
  40a898:	sub	x0, x29, #0xd0
  40a89c:	mov	x8, xzr
  40a8a0:	mov	x1, x8
  40a8a4:	bl	403468 <internal_hashmap_ensure_allocated@plt>
  40a8a8:	stur	w0, [x29, #-164]
  40a8ac:	ldur	w9, [x29, #-164]
  40a8b0:	cmp	w9, #0x0
  40a8b4:	cset	w9, ge  // ge = tcont
  40a8b8:	tbnz	w9, #0, 40a8e4 <coredump_vacuum+0x3d0>
  40a8bc:	mov	w8, wzr
  40a8c0:	mov	w0, w8
  40a8c4:	ldr	x1, [sp, #56]
  40a8c8:	mov	w2, #0xb3                  	// #179
  40a8cc:	ldr	x3, [sp, #48]
  40a8d0:	bl	402e08 <log_oom_internal@plt>
  40a8d4:	stur	w0, [x29, #-4]
  40a8d8:	mov	w8, #0x1                   	// #1
  40a8dc:	stur	w8, [x29, #-168]
  40a8e0:	b	40ad1c <coredump_vacuum+0x808>
  40a8e4:	add	x8, sp, #0xb0
  40a8e8:	add	x0, x8, #0x58
  40a8ec:	bl	403478 <timespec_load@plt>
  40a8f0:	str	x0, [sp, #160]
  40a8f4:	ldur	x0, [x29, #-208]
  40a8f8:	ldr	w9, [sp, #172]
  40a8fc:	mov	w8, w9
  40a900:	add	x8, x8, #0x1
  40a904:	mov	x1, x8
  40a908:	bl	40afb4 <hashmap_get>
  40a90c:	stur	x0, [x29, #-240]
  40a910:	ldur	x8, [x29, #-240]
  40a914:	cbz	x8, 40a994 <coredump_vacuum+0x480>
  40a918:	ldr	x8, [sp, #160]
  40a91c:	ldur	x9, [x29, #-240]
  40a920:	ldr	x9, [x9, #16]
  40a924:	cmp	x8, x9
  40a928:	b.cs	40a990 <coredump_vacuum+0x47c>  // b.hs, b.nlast
  40a92c:	ldur	x8, [x29, #-224]
  40a930:	add	x0, x8, #0x13
  40a934:	bl	403488 <strdup@plt>
  40a938:	str	x0, [sp, #136]
  40a93c:	ldr	x8, [sp, #136]
  40a940:	cbnz	x8, 40a96c <coredump_vacuum+0x458>
  40a944:	mov	w8, wzr
  40a948:	mov	w0, w8
  40a94c:	ldr	x1, [sp, #56]
  40a950:	mov	w2, #0xbf                  	// #191
  40a954:	ldr	x3, [sp, #48]
  40a958:	bl	402e08 <log_oom_internal@plt>
  40a95c:	stur	w0, [x29, #-4]
  40a960:	mov	w8, #0x1                   	// #1
  40a964:	stur	w8, [x29, #-168]
  40a968:	b	40ad1c <coredump_vacuum+0x808>
  40a96c:	ldur	x8, [x29, #-240]
  40a970:	ldr	x0, [x8, #8]
  40a974:	bl	402f08 <free@plt>
  40a978:	ldr	x8, [sp, #136]
  40a97c:	ldur	x9, [x29, #-240]
  40a980:	str	x8, [x9, #8]
  40a984:	ldr	x8, [sp, #160]
  40a988:	ldur	x9, [x29, #-240]
  40a98c:	str	x8, [x9, #16]
  40a990:	b	40aacc <coredump_vacuum+0x5b8>
  40a994:	mov	x8, xzr
  40a998:	str	x8, [sp, #128]
  40a99c:	mov	x0, #0x1                   	// #1
  40a9a0:	mov	x1, #0x18                  	// #24
  40a9a4:	bl	403498 <calloc@plt>
  40a9a8:	str	x0, [sp, #128]
  40a9ac:	ldr	x8, [sp, #128]
  40a9b0:	cbnz	x8, 40a9dc <coredump_vacuum+0x4c8>
  40a9b4:	mov	w8, wzr
  40a9b8:	mov	w0, w8
  40a9bc:	ldr	x1, [sp, #56]
  40a9c0:	mov	w2, #0xcb                  	// #203
  40a9c4:	ldr	x3, [sp, #48]
  40a9c8:	bl	402e08 <log_oom_internal@plt>
  40a9cc:	stur	w0, [x29, #-4]
  40a9d0:	mov	w8, #0x1                   	// #1
  40a9d4:	stur	w8, [x29, #-168]
  40a9d8:	b	40aaac <coredump_vacuum+0x598>
  40a9dc:	ldur	x8, [x29, #-224]
  40a9e0:	add	x0, x8, #0x13
  40a9e4:	bl	403488 <strdup@plt>
  40a9e8:	ldr	x8, [sp, #128]
  40a9ec:	str	x0, [x8, #8]
  40a9f0:	ldr	x8, [sp, #128]
  40a9f4:	ldr	x8, [x8, #8]
  40a9f8:	cbnz	x8, 40aa24 <coredump_vacuum+0x510>
  40a9fc:	mov	w8, wzr
  40aa00:	mov	w0, w8
  40aa04:	ldr	x1, [sp, #56]
  40aa08:	mov	w2, #0xcf                  	// #207
  40aa0c:	ldr	x3, [sp, #48]
  40aa10:	bl	402e08 <log_oom_internal@plt>
  40aa14:	stur	w0, [x29, #-4]
  40aa18:	mov	w8, #0x1                   	// #1
  40aa1c:	stur	w8, [x29, #-168]
  40aa20:	b	40aaac <coredump_vacuum+0x598>
  40aa24:	ldr	x8, [sp, #160]
  40aa28:	ldr	x9, [sp, #128]
  40aa2c:	str	x8, [x9, #16]
  40aa30:	ldur	x0, [x29, #-208]
  40aa34:	ldr	w10, [sp, #172]
  40aa38:	mov	w8, w10
  40aa3c:	add	x8, x8, #0x1
  40aa40:	ldr	x2, [sp, #128]
  40aa44:	mov	x1, x8
  40aa48:	bl	4034a8 <hashmap_put@plt>
  40aa4c:	stur	w0, [x29, #-164]
  40aa50:	ldur	w10, [x29, #-164]
  40aa54:	cmp	w10, #0x0
  40aa58:	cset	w10, ge  // ge = tcont
  40aa5c:	tbnz	w10, #0, 40aa88 <coredump_vacuum+0x574>
  40aa60:	mov	w8, wzr
  40aa64:	mov	w0, w8
  40aa68:	ldr	x1, [sp, #56]
  40aa6c:	mov	w2, #0xd5                  	// #213
  40aa70:	ldr	x3, [sp, #48]
  40aa74:	bl	402e08 <log_oom_internal@plt>
  40aa78:	stur	w0, [x29, #-4]
  40aa7c:	mov	w8, #0x1                   	// #1
  40aa80:	stur	w8, [x29, #-168]
  40aa84:	b	40aaac <coredump_vacuum+0x598>
  40aa88:	ldr	x8, [sp, #128]
  40aa8c:	str	x8, [sp, #120]
  40aa90:	mov	x8, xzr
  40aa94:	str	x8, [sp, #128]
  40aa98:	ldr	x8, [sp, #120]
  40aa9c:	str	x8, [sp, #112]
  40aaa0:	ldr	x8, [sp, #112]
  40aaa4:	stur	x8, [x29, #-240]
  40aaa8:	stur	wzr, [x29, #-168]
  40aaac:	add	x0, sp, #0x80
  40aab0:	bl	40afe0 <vacuum_candidate_freep>
  40aab4:	ldur	w8, [x29, #-168]
  40aab8:	cmp	w8, #0x0
  40aabc:	cset	w8, eq  // eq = none
  40aac0:	eor	w8, w8, #0x1
  40aac4:	tbnz	w8, #0, 40ad1c <coredump_vacuum+0x808>
  40aac8:	b	40aacc <coredump_vacuum+0x5b8>
  40aacc:	ldur	x8, [x29, #-240]
  40aad0:	ldr	w9, [x8]
  40aad4:	add	w9, w9, #0x1
  40aad8:	str	w9, [x8]
  40aadc:	ldur	x8, [x29, #-216]
  40aae0:	cbz	x8, 40ab2c <coredump_vacuum+0x618>
  40aae4:	ldur	x8, [x29, #-216]
  40aae8:	ldr	w9, [x8]
  40aaec:	ldur	x8, [x29, #-240]
  40aaf0:	ldr	w10, [x8]
  40aaf4:	cmp	w9, w10
  40aaf8:	b.cc	40ab2c <coredump_vacuum+0x618>  // b.lo, b.ul, b.last
  40aafc:	ldur	x8, [x29, #-216]
  40ab00:	ldr	w9, [x8]
  40ab04:	ldur	x8, [x29, #-240]
  40ab08:	ldr	w10, [x8]
  40ab0c:	cmp	w9, w10
  40ab10:	b.ne	40ab34 <coredump_vacuum+0x620>  // b.any
  40ab14:	ldur	x8, [x29, #-240]
  40ab18:	ldr	x8, [x8, #16]
  40ab1c:	ldur	x9, [x29, #-216]
  40ab20:	ldr	x9, [x9, #16]
  40ab24:	cmp	x8, x9
  40ab28:	b.cs	40ab34 <coredump_vacuum+0x620>  // b.hs, b.nlast
  40ab2c:	ldur	x8, [x29, #-240]
  40ab30:	stur	x8, [x29, #-216]
  40ab34:	ldr	x8, [sp, #240]
  40ab38:	mov	x9, #0x200                 	// #512
  40ab3c:	mul	x8, x8, x9
  40ab40:	ldur	x9, [x29, #-232]
  40ab44:	add	x8, x9, x8
  40ab48:	stur	x8, [x29, #-232]
  40ab4c:	bl	402f18 <__errno_location@plt>
  40ab50:	str	wzr, [x0]
  40ab54:	ldur	x0, [x29, #-32]
  40ab58:	bl	403108 <readdir64@plt>
  40ab5c:	stur	x0, [x29, #-224]
  40ab60:	b	40a720 <coredump_vacuum+0x20c>
  40ab64:	ldur	x8, [x29, #-216]
  40ab68:	cbnz	x8, 40ab78 <coredump_vacuum+0x664>
  40ab6c:	mov	w8, #0x2                   	// #2
  40ab70:	stur	w8, [x29, #-168]
  40ab74:	b	40ad1c <coredump_vacuum+0x808>
  40ab78:	ldur	x0, [x29, #-32]
  40ab7c:	bl	4030d8 <dirfd@plt>
  40ab80:	ldur	x1, [x29, #-232]
  40ab84:	ldur	x2, [x29, #-16]
  40ab88:	ldur	x3, [x29, #-24]
  40ab8c:	bl	40b014 <vacuum_necessary>
  40ab90:	and	w8, w0, #0x1
  40ab94:	stur	w8, [x29, #-164]
  40ab98:	ldur	w8, [x29, #-164]
  40ab9c:	cmp	w8, #0x0
  40aba0:	cset	w8, gt
  40aba4:	tbnz	w8, #0, 40abbc <coredump_vacuum+0x6a8>
  40aba8:	ldur	w8, [x29, #-164]
  40abac:	stur	w8, [x29, #-4]
  40abb0:	mov	w8, #0x1                   	// #1
  40abb4:	stur	w8, [x29, #-168]
  40abb8:	b	40ad1c <coredump_vacuum+0x808>
  40abbc:	ldur	x0, [x29, #-32]
  40abc0:	bl	4030d8 <dirfd@plt>
  40abc4:	ldur	x8, [x29, #-216]
  40abc8:	ldr	x1, [x8, #8]
  40abcc:	mov	w9, wzr
  40abd0:	mov	w2, w9
  40abd4:	bl	4034b8 <unlinkat_deallocate@plt>
  40abd8:	stur	w0, [x29, #-164]
  40abdc:	ldur	w9, [x29, #-164]
  40abe0:	mov	w10, #0xfffffffe            	// #-2
  40abe4:	cmp	w9, w10
  40abe8:	b.ne	40abf8 <coredump_vacuum+0x6e4>  // b.any
  40abec:	mov	w8, #0x3                   	// #3
  40abf0:	stur	w8, [x29, #-168]
  40abf4:	b	40ad1c <coredump_vacuum+0x808>
  40abf8:	ldur	w8, [x29, #-164]
  40abfc:	cmp	w8, #0x0
  40ac00:	cset	w8, ge  // ge = tcont
  40ac04:	tbnz	w8, #0, 40ac9c <coredump_vacuum+0x788>
  40ac08:	mov	w8, #0x3                   	// #3
  40ac0c:	str	w8, [sp, #108]
  40ac10:	ldur	w8, [x29, #-164]
  40ac14:	str	w8, [sp, #104]
  40ac18:	str	wzr, [sp, #100]
  40ac1c:	ldr	w0, [sp, #100]
  40ac20:	bl	402d78 <log_get_max_level_realm@plt>
  40ac24:	ldr	w8, [sp, #108]
  40ac28:	and	w8, w8, #0x7
  40ac2c:	cmp	w0, w8
  40ac30:	b.lt	40ac6c <coredump_vacuum+0x758>  // b.tstop
  40ac34:	ldr	w8, [sp, #100]
  40ac38:	ldr	w9, [sp, #108]
  40ac3c:	orr	w0, w9, w8, lsl #10
  40ac40:	ldr	w1, [sp, #104]
  40ac44:	ldur	x10, [x29, #-216]
  40ac48:	ldr	x6, [x10, #8]
  40ac4c:	ldr	x2, [sp, #56]
  40ac50:	mov	w3, #0xef                  	// #239
  40ac54:	ldr	x4, [sp, #48]
  40ac58:	adrp	x5, 40c000 <_fini+0xb20>
  40ac5c:	add	x5, x5, #0xab9
  40ac60:	bl	402d88 <log_internal_realm@plt>
  40ac64:	str	w0, [sp, #32]
  40ac68:	b	40ac80 <coredump_vacuum+0x76c>
  40ac6c:	ldr	w0, [sp, #104]
  40ac70:	bl	402d98 <abs@plt>
  40ac74:	mov	w8, wzr
  40ac78:	subs	w8, w8, w0, uxtb
  40ac7c:	str	w8, [sp, #32]
  40ac80:	ldr	w8, [sp, #32]
  40ac84:	str	w8, [sp, #96]
  40ac88:	ldr	w8, [sp, #96]
  40ac8c:	stur	w8, [x29, #-4]
  40ac90:	mov	w8, #0x1                   	// #1
  40ac94:	stur	w8, [x29, #-168]
  40ac98:	b	40ad1c <coredump_vacuum+0x808>
  40ac9c:	mov	w8, #0x6                   	// #6
  40aca0:	str	w8, [sp, #92]
  40aca4:	str	wzr, [sp, #88]
  40aca8:	str	wzr, [sp, #84]
  40acac:	ldr	w0, [sp, #84]
  40acb0:	bl	402d78 <log_get_max_level_realm@plt>
  40acb4:	ldr	w8, [sp, #92]
  40acb8:	and	w8, w8, #0x7
  40acbc:	cmp	w0, w8
  40acc0:	b.lt	40acfc <coredump_vacuum+0x7e8>  // b.tstop
  40acc4:	ldr	w8, [sp, #84]
  40acc8:	ldr	w9, [sp, #92]
  40accc:	orr	w0, w9, w8, lsl #10
  40acd0:	ldr	w1, [sp, #88]
  40acd4:	ldur	x10, [x29, #-216]
  40acd8:	ldr	x6, [x10, #8]
  40acdc:	ldr	x2, [sp, #56]
  40ace0:	mov	w3, #0xf1                  	// #241
  40ace4:	ldr	x4, [sp, #48]
  40ace8:	adrp	x5, 40c000 <_fini+0xb20>
  40acec:	add	x5, x5, #0xad6
  40acf0:	bl	402d88 <log_internal_realm@plt>
  40acf4:	str	w0, [sp, #28]
  40acf8:	b	40ad10 <coredump_vacuum+0x7fc>
  40acfc:	ldr	w0, [sp, #88]
  40ad00:	bl	402d98 <abs@plt>
  40ad04:	mov	w8, wzr
  40ad08:	subs	w8, w8, w0, uxtb
  40ad0c:	str	w8, [sp, #28]
  40ad10:	ldr	w8, [sp, #28]
  40ad14:	str	w8, [sp, #80]
  40ad18:	stur	wzr, [x29, #-168]
  40ad1c:	sub	x0, x29, #0xd0
  40ad20:	bl	40ae48 <vacuum_candidate_hashmap_freep>
  40ad24:	ldur	w8, [x29, #-168]
  40ad28:	subs	w8, w8, #0x0
  40ad2c:	mov	w9, w8
  40ad30:	ubfx	x9, x9, #0, #32
  40ad34:	cmp	x9, #0x7
  40ad38:	str	x9, [sp, #16]
  40ad3c:	b.hi	40adf8 <coredump_vacuum+0x8e4>  // b.pmore
  40ad40:	adrp	x8, 40c000 <_fini+0xb20>
  40ad44:	add	x8, x8, #0xe90
  40ad48:	ldr	x11, [sp, #16]
  40ad4c:	ldrsw	x10, [x8, x11, lsl #2]
  40ad50:	add	x9, x8, x10
  40ad54:	br	x9
  40ad58:	b	40a6f4 <coredump_vacuum+0x1e0>
  40ad5c:	stur	wzr, [x29, #-4]
  40ad60:	mov	w8, #0x1                   	// #1
  40ad64:	stur	w8, [x29, #-168]
  40ad68:	b	40adf8 <coredump_vacuum+0x8e4>
  40ad6c:	mov	w8, #0x3                   	// #3
  40ad70:	str	w8, [sp, #76]
  40ad74:	bl	402f18 <__errno_location@plt>
  40ad78:	ldr	w8, [x0]
  40ad7c:	str	w8, [sp, #72]
  40ad80:	str	wzr, [sp, #68]
  40ad84:	ldr	w0, [sp, #68]
  40ad88:	bl	402d78 <log_get_max_level_realm@plt>
  40ad8c:	ldr	w8, [sp, #76]
  40ad90:	and	w8, w8, #0x7
  40ad94:	cmp	w0, w8
  40ad98:	b.lt	40adcc <coredump_vacuum+0x8b8>  // b.tstop
  40ad9c:	ldr	w8, [sp, #68]
  40ada0:	ldr	w9, [sp, #76]
  40ada4:	orr	w0, w9, w8, lsl #10
  40ada8:	ldr	w1, [sp, #72]
  40adac:	ldr	x2, [sp, #56]
  40adb0:	mov	w3, #0xf7                  	// #247
  40adb4:	ldr	x4, [sp, #48]
  40adb8:	adrp	x5, 40c000 <_fini+0xb20>
  40adbc:	add	x5, x5, #0xaef
  40adc0:	bl	402d88 <log_internal_realm@plt>
  40adc4:	str	w0, [sp, #12]
  40adc8:	b	40ade0 <coredump_vacuum+0x8cc>
  40adcc:	ldr	w0, [sp, #72]
  40add0:	bl	402d98 <abs@plt>
  40add4:	mov	w8, wzr
  40add8:	subs	w8, w8, w0, uxtb
  40addc:	str	w8, [sp, #12]
  40ade0:	ldr	w8, [sp, #12]
  40ade4:	str	w8, [sp, #64]
  40ade8:	ldr	w8, [sp, #64]
  40adec:	stur	w8, [x29, #-4]
  40adf0:	mov	w8, #0x1                   	// #1
  40adf4:	stur	w8, [x29, #-168]
  40adf8:	sub	x0, x29, #0x20
  40adfc:	bl	40ae14 <closedirp>
  40ae00:	ldur	w0, [x29, #-4]
  40ae04:	add	sp, sp, #0x220
  40ae08:	ldr	x28, [sp, #16]
  40ae0c:	ldp	x29, x30, [sp], #32
  40ae10:	ret

000000000040ae14 <closedirp>:
  40ae14:	sub	sp, sp, #0x20
  40ae18:	stp	x29, x30, [sp, #16]
  40ae1c:	add	x29, sp, #0x10
  40ae20:	str	x0, [sp, #8]
  40ae24:	ldr	x8, [sp, #8]
  40ae28:	ldr	x8, [x8]
  40ae2c:	cbz	x8, 40ae3c <closedirp+0x28>
  40ae30:	ldr	x8, [sp, #8]
  40ae34:	ldr	x0, [x8]
  40ae38:	bl	4031a8 <closedir@plt>
  40ae3c:	ldp	x29, x30, [sp, #16]
  40ae40:	add	sp, sp, #0x20
  40ae44:	ret

000000000040ae48 <vacuum_candidate_hashmap_freep>:
  40ae48:	sub	sp, sp, #0x20
  40ae4c:	stp	x29, x30, [sp, #16]
  40ae50:	add	x29, sp, #0x10
  40ae54:	str	x0, [sp, #8]
  40ae58:	ldr	x8, [sp, #8]
  40ae5c:	ldr	x8, [x8]
  40ae60:	cbz	x8, 40ae70 <vacuum_candidate_hashmap_freep+0x28>
  40ae64:	ldr	x8, [sp, #8]
  40ae68:	ldr	x0, [x8]
  40ae6c:	bl	40b2a0 <vacuum_candidate_hashmap_free>
  40ae70:	ldp	x29, x30, [sp, #16]
  40ae74:	add	sp, sp, #0x20
  40ae78:	ret

000000000040ae7c <uid_from_file_name>:
  40ae7c:	stp	x29, x30, [sp, #-16]!
  40ae80:	mov	x29, sp
  40ae84:	sub	sp, sp, #0x60
  40ae88:	adrp	x8, 40c000 <_fini+0xb20>
  40ae8c:	add	x8, x8, #0xb0c
  40ae90:	stur	x0, [x29, #-16]
  40ae94:	stur	x1, [x29, #-24]
  40ae98:	ldur	x0, [x29, #-16]
  40ae9c:	mov	x1, x8
  40aea0:	bl	40b384 <startswith>
  40aea4:	stur	x0, [x29, #-32]
  40aea8:	ldur	x8, [x29, #-32]
  40aeac:	cbnz	x8, 40aebc <uid_from_file_name+0x40>
  40aeb0:	mov	w8, #0xffffffea            	// #-22
  40aeb4:	stur	w8, [x29, #-4]
  40aeb8:	b	40afa4 <uid_from_file_name+0x128>
  40aebc:	ldur	x0, [x29, #-32]
  40aec0:	mov	w1, #0x2e                  	// #46
  40aec4:	bl	4034c8 <strchr@plt>
  40aec8:	stur	x0, [x29, #-32]
  40aecc:	ldur	x8, [x29, #-32]
  40aed0:	cbnz	x8, 40aee0 <uid_from_file_name+0x64>
  40aed4:	mov	w8, #0xffffffea            	// #-22
  40aed8:	stur	w8, [x29, #-4]
  40aedc:	b	40afa4 <uid_from_file_name+0x128>
  40aee0:	ldur	x8, [x29, #-32]
  40aee4:	add	x8, x8, #0x1
  40aee8:	stur	x8, [x29, #-32]
  40aeec:	ldur	x0, [x29, #-32]
  40aef0:	mov	w1, #0x2e                  	// #46
  40aef4:	bl	4034c8 <strchr@plt>
  40aef8:	stur	x0, [x29, #-40]
  40aefc:	ldur	x8, [x29, #-40]
  40af00:	cbnz	x8, 40af10 <uid_from_file_name+0x94>
  40af04:	mov	w8, #0xffffffea            	// #-22
  40af08:	stur	w8, [x29, #-4]
  40af0c:	b	40afa4 <uid_from_file_name+0x128>
  40af10:	ldur	x8, [x29, #-32]
  40af14:	stur	x8, [x29, #-56]
  40af18:	ldur	x0, [x29, #-56]
  40af1c:	ldur	x8, [x29, #-40]
  40af20:	ldur	x9, [x29, #-32]
  40af24:	subs	x1, x8, x9
  40af28:	bl	403208 <strnlen@plt>
  40af2c:	stur	x0, [x29, #-64]
  40af30:	ldur	x8, [x29, #-64]
  40af34:	mov	x9, #0x1                   	// #1
  40af38:	add	x8, x8, #0x1
  40af3c:	mul	x8, x8, x9
  40af40:	add	x8, x8, #0xf
  40af44:	and	x8, x8, #0xfffffffffffffff0
  40af48:	mov	x9, sp
  40af4c:	subs	x8, x9, x8
  40af50:	mov	sp, x8
  40af54:	stur	x8, [x29, #-72]
  40af58:	ldur	x8, [x29, #-72]
  40af5c:	ldur	x9, [x29, #-64]
  40af60:	add	x8, x8, x9
  40af64:	mov	w10, #0x0                   	// #0
  40af68:	strb	w10, [x8]
  40af6c:	ldur	x8, [x29, #-72]
  40af70:	ldur	x1, [x29, #-56]
  40af74:	ldur	x2, [x29, #-64]
  40af78:	mov	x0, x8
  40af7c:	stur	x8, [x29, #-88]
  40af80:	bl	4034d8 <memcpy@plt>
  40af84:	ldur	x8, [x29, #-88]
  40af88:	stur	x8, [x29, #-80]
  40af8c:	ldur	x9, [x29, #-80]
  40af90:	stur	x9, [x29, #-48]
  40af94:	ldur	x0, [x29, #-48]
  40af98:	ldur	x1, [x29, #-24]
  40af9c:	bl	403248 <parse_uid@plt>
  40afa0:	stur	w0, [x29, #-4]
  40afa4:	ldur	w0, [x29, #-4]
  40afa8:	mov	sp, x29
  40afac:	ldp	x29, x30, [sp], #16
  40afb0:	ret

000000000040afb4 <hashmap_get>:
  40afb4:	sub	sp, sp, #0x20
  40afb8:	stp	x29, x30, [sp, #16]
  40afbc:	add	x29, sp, #0x10
  40afc0:	str	x0, [sp, #8]
  40afc4:	str	x1, [sp]
  40afc8:	ldr	x0, [sp, #8]
  40afcc:	ldr	x1, [sp]
  40afd0:	bl	4034e8 <internal_hashmap_get@plt>
  40afd4:	ldp	x29, x30, [sp, #16]
  40afd8:	add	sp, sp, #0x20
  40afdc:	ret

000000000040afe0 <vacuum_candidate_freep>:
  40afe0:	sub	sp, sp, #0x20
  40afe4:	stp	x29, x30, [sp, #16]
  40afe8:	add	x29, sp, #0x10
  40afec:	str	x0, [sp, #8]
  40aff0:	ldr	x8, [sp, #8]
  40aff4:	ldr	x8, [x8]
  40aff8:	cbz	x8, 40b008 <vacuum_candidate_freep+0x28>
  40affc:	ldr	x8, [sp, #8]
  40b000:	ldr	x0, [x8]
  40b004:	bl	40b318 <vacuum_candidate_free>
  40b008:	ldp	x29, x30, [sp, #16]
  40b00c:	add	sp, sp, #0x20
  40b010:	ret

000000000040b014 <vacuum_necessary>:
  40b014:	sub	sp, sp, #0x100
  40b018:	stp	x29, x30, [sp, #240]
  40b01c:	add	x29, sp, #0xf0
  40b020:	mov	x8, #0xffffffffffffffff    	// #-1
  40b024:	adrp	x9, 40c000 <_fini+0xb20>
  40b028:	add	x9, x9, #0xa1f
  40b02c:	add	x9, x9, #0x3
  40b030:	stur	w0, [x29, #-8]
  40b034:	stur	x1, [x29, #-16]
  40b038:	stur	x2, [x29, #-24]
  40b03c:	stur	x3, [x29, #-32]
  40b040:	stur	xzr, [x29, #-40]
  40b044:	stur	x8, [x29, #-48]
  40b048:	str	x9, [sp, #72]
  40b04c:	ldur	w8, [x29, #-8]
  40b050:	cmp	w8, #0x0
  40b054:	cset	w8, ge  // ge = tcont
  40b058:	mov	w9, #0x1                   	// #1
  40b05c:	eor	w8, w8, #0x1
  40b060:	eor	w8, w8, w9
  40b064:	eor	w8, w8, w9
  40b068:	and	w8, w8, #0x1
  40b06c:	mov	w0, w8
  40b070:	sxtw	x10, w0
  40b074:	cbz	x10, 40b09c <vacuum_necessary+0x88>
  40b078:	mov	w8, wzr
  40b07c:	mov	w0, w8
  40b080:	adrp	x1, 40c000 <_fini+0xb20>
  40b084:	add	x1, x1, #0x4ba
  40b088:	ldr	x2, [sp, #72]
  40b08c:	mov	w3, #0x49                  	// #73
  40b090:	adrp	x4, 40c000 <_fini+0xb20>
  40b094:	add	x4, x4, #0xb12
  40b098:	bl	402e58 <log_assert_failed_realm@plt>
  40b09c:	ldur	w0, [x29, #-8]
  40b0a0:	add	x1, sp, #0x50
  40b0a4:	bl	4034f8 <fstatvfs64@plt>
  40b0a8:	cmp	w0, #0x0
  40b0ac:	cset	w8, lt  // lt = tstop
  40b0b0:	tbnz	w8, #0, 40b0d4 <vacuum_necessary+0xc0>
  40b0b4:	ldr	x8, [sp, #88]
  40b0b8:	ldr	x9, [sp, #96]
  40b0bc:	mul	x8, x8, x9
  40b0c0:	stur	x8, [x29, #-40]
  40b0c4:	ldr	x8, [sp, #88]
  40b0c8:	ldr	x9, [sp, #104]
  40b0cc:	mul	x8, x8, x9
  40b0d0:	stur	x8, [x29, #-48]
  40b0d4:	ldur	x8, [x29, #-32]
  40b0d8:	mov	x9, #0xffffffffffffffff    	// #-1
  40b0dc:	cmp	x8, x9
  40b0e0:	b.ne	40b15c <vacuum_necessary+0x148>  // b.any
  40b0e4:	ldur	x8, [x29, #-40]
  40b0e8:	cmp	x8, #0x0
  40b0ec:	cset	w9, ls  // ls = plast
  40b0f0:	tbnz	w9, #0, 40b150 <vacuum_necessary+0x13c>
  40b0f4:	ldur	x8, [x29, #-40]
  40b0f8:	mov	x9, #0xa                   	// #10
  40b0fc:	udiv	x0, x8, x9
  40b100:	str	x0, [sp, #64]
  40b104:	bl	403258 <page_size@plt>
  40b108:	ldr	x8, [sp, #64]
  40b10c:	str	x0, [sp, #56]
  40b110:	mov	x0, x8
  40b114:	ldr	x1, [sp, #56]
  40b118:	bl	40b3e4 <ALIGN_TO>
  40b11c:	stur	x0, [x29, #-32]
  40b120:	ldur	x8, [x29, #-32]
  40b124:	mov	x9, #0x100000000           	// #4294967296
  40b128:	cmp	x8, x9
  40b12c:	b.ls	40b138 <vacuum_necessary+0x124>  // b.plast
  40b130:	mov	x8, #0x100000000           	// #4294967296
  40b134:	stur	x8, [x29, #-32]
  40b138:	ldur	x8, [x29, #-32]
  40b13c:	cmp	x8, #0x100, lsl #12
  40b140:	b.cs	40b14c <vacuum_necessary+0x138>  // b.hs, b.nlast
  40b144:	mov	x8, #0x100000              	// #1048576
  40b148:	stur	x8, [x29, #-32]
  40b14c:	b	40b158 <vacuum_necessary+0x144>
  40b150:	mov	x8, #0x100000              	// #1048576
  40b154:	stur	x8, [x29, #-32]
  40b158:	b	40b180 <vacuum_necessary+0x16c>
  40b15c:	ldur	x0, [x29, #-32]
  40b160:	str	x0, [sp, #48]
  40b164:	bl	403258 <page_size@plt>
  40b168:	ldr	x8, [sp, #48]
  40b16c:	str	x0, [sp, #40]
  40b170:	mov	x0, x8
  40b174:	ldr	x1, [sp, #40]
  40b178:	bl	40b3e4 <ALIGN_TO>
  40b17c:	stur	x0, [x29, #-32]
  40b180:	ldur	x8, [x29, #-32]
  40b184:	cmp	x8, #0x0
  40b188:	cset	w9, ls  // ls = plast
  40b18c:	tbnz	w9, #0, 40b1b0 <vacuum_necessary+0x19c>
  40b190:	ldur	x8, [x29, #-16]
  40b194:	ldur	x9, [x29, #-32]
  40b198:	cmp	x8, x9
  40b19c:	b.ls	40b1b0 <vacuum_necessary+0x19c>  // b.plast
  40b1a0:	mov	w8, #0x1                   	// #1
  40b1a4:	and	w8, w8, #0x1
  40b1a8:	sturb	w8, [x29, #-1]
  40b1ac:	b	40b28c <vacuum_necessary+0x278>
  40b1b0:	ldur	x8, [x29, #-24]
  40b1b4:	mov	x9, #0xffffffffffffffff    	// #-1
  40b1b8:	cmp	x8, x9
  40b1bc:	b.ne	40b22c <vacuum_necessary+0x218>  // b.any
  40b1c0:	ldur	x8, [x29, #-40]
  40b1c4:	cmp	x8, #0x0
  40b1c8:	cset	w9, ls  // ls = plast
  40b1cc:	tbnz	w9, #0, 40b220 <vacuum_necessary+0x20c>
  40b1d0:	ldur	x8, [x29, #-40]
  40b1d4:	mov	x9, #0x3                   	// #3
  40b1d8:	mul	x8, x8, x9
  40b1dc:	mov	x9, #0x14                  	// #20
  40b1e0:	udiv	x0, x8, x9
  40b1e4:	str	x0, [sp, #32]
  40b1e8:	bl	403258 <page_size@plt>
  40b1ec:	ldr	x8, [sp, #32]
  40b1f0:	str	x0, [sp, #24]
  40b1f4:	mov	x0, x8
  40b1f8:	ldr	x1, [sp, #24]
  40b1fc:	bl	40b3e4 <ALIGN_TO>
  40b200:	stur	x0, [x29, #-24]
  40b204:	ldur	x8, [x29, #-24]
  40b208:	mov	x9, #0x100000000           	// #4294967296
  40b20c:	cmp	x8, x9
  40b210:	b.ls	40b21c <vacuum_necessary+0x208>  // b.plast
  40b214:	mov	x8, #0x100000000           	// #4294967296
  40b218:	stur	x8, [x29, #-24]
  40b21c:	b	40b228 <vacuum_necessary+0x214>
  40b220:	mov	x8, #0x100000              	// #1048576
  40b224:	stur	x8, [x29, #-24]
  40b228:	b	40b250 <vacuum_necessary+0x23c>
  40b22c:	ldur	x0, [x29, #-24]
  40b230:	str	x0, [sp, #16]
  40b234:	bl	403258 <page_size@plt>
  40b238:	ldr	x8, [sp, #16]
  40b23c:	str	x0, [sp, #8]
  40b240:	mov	x0, x8
  40b244:	ldr	x1, [sp, #8]
  40b248:	bl	40b3e4 <ALIGN_TO>
  40b24c:	stur	x0, [x29, #-24]
  40b250:	ldur	x8, [x29, #-24]
  40b254:	cmp	x8, #0x0
  40b258:	cset	w9, ls  // ls = plast
  40b25c:	tbnz	w9, #0, 40b280 <vacuum_necessary+0x26c>
  40b260:	ldur	x8, [x29, #-48]
  40b264:	ldur	x9, [x29, #-24]
  40b268:	cmp	x8, x9
  40b26c:	b.cs	40b280 <vacuum_necessary+0x26c>  // b.hs, b.nlast
  40b270:	mov	w8, #0x1                   	// #1
  40b274:	and	w8, w8, #0x1
  40b278:	sturb	w8, [x29, #-1]
  40b27c:	b	40b28c <vacuum_necessary+0x278>
  40b280:	mov	w8, wzr
  40b284:	and	w8, w8, #0x1
  40b288:	sturb	w8, [x29, #-1]
  40b28c:	ldurb	w8, [x29, #-1]
  40b290:	and	w0, w8, #0x1
  40b294:	ldp	x29, x30, [sp, #240]
  40b298:	add	sp, sp, #0x100
  40b29c:	ret

000000000040b2a0 <vacuum_candidate_hashmap_free>:
  40b2a0:	sub	sp, sp, #0x30
  40b2a4:	stp	x29, x30, [sp, #32]
  40b2a8:	add	x29, sp, #0x20
  40b2ac:	stur	x0, [x29, #-8]
  40b2b0:	ldur	x0, [x29, #-8]
  40b2b4:	bl	40b2e4 <hashmap_steal_first>
  40b2b8:	str	x0, [sp, #16]
  40b2bc:	cbz	x0, 40b2cc <vacuum_candidate_hashmap_free+0x2c>
  40b2c0:	ldr	x0, [sp, #16]
  40b2c4:	bl	40b318 <vacuum_candidate_free>
  40b2c8:	b	40b2b0 <vacuum_candidate_hashmap_free+0x10>
  40b2cc:	ldur	x0, [x29, #-8]
  40b2d0:	bl	40b354 <hashmap_free>
  40b2d4:	str	x0, [sp, #8]
  40b2d8:	ldp	x29, x30, [sp, #32]
  40b2dc:	add	sp, sp, #0x30
  40b2e0:	ret

000000000040b2e4 <hashmap_steal_first>:
  40b2e4:	sub	sp, sp, #0x20
  40b2e8:	stp	x29, x30, [sp, #16]
  40b2ec:	add	x29, sp, #0x10
  40b2f0:	mov	x8, xzr
  40b2f4:	str	x0, [sp, #8]
  40b2f8:	ldr	x0, [sp, #8]
  40b2fc:	mov	w9, #0x1                   	// #1
  40b300:	and	w1, w9, #0x1
  40b304:	mov	x2, x8
  40b308:	bl	403508 <internal_hashmap_first_key_and_value@plt>
  40b30c:	ldp	x29, x30, [sp, #16]
  40b310:	add	sp, sp, #0x20
  40b314:	ret

000000000040b318 <vacuum_candidate_free>:
  40b318:	sub	sp, sp, #0x20
  40b31c:	stp	x29, x30, [sp, #16]
  40b320:	add	x29, sp, #0x10
  40b324:	str	x0, [sp, #8]
  40b328:	ldr	x8, [sp, #8]
  40b32c:	cbnz	x8, 40b334 <vacuum_candidate_free+0x1c>
  40b330:	b	40b348 <vacuum_candidate_free+0x30>
  40b334:	ldr	x8, [sp, #8]
  40b338:	ldr	x0, [x8, #8]
  40b33c:	bl	402f08 <free@plt>
  40b340:	ldr	x0, [sp, #8]
  40b344:	bl	402f08 <free@plt>
  40b348:	ldp	x29, x30, [sp, #16]
  40b34c:	add	sp, sp, #0x20
  40b350:	ret

000000000040b354 <hashmap_free>:
  40b354:	sub	sp, sp, #0x20
  40b358:	stp	x29, x30, [sp, #16]
  40b35c:	add	x29, sp, #0x10
  40b360:	mov	x8, xzr
  40b364:	str	x0, [sp, #8]
  40b368:	ldr	x0, [sp, #8]
  40b36c:	mov	x1, x8
  40b370:	mov	x2, x8
  40b374:	bl	403518 <internal_hashmap_free@plt>
  40b378:	ldp	x29, x30, [sp, #16]
  40b37c:	add	sp, sp, #0x20
  40b380:	ret

000000000040b384 <startswith>:
  40b384:	sub	sp, sp, #0x30
  40b388:	stp	x29, x30, [sp, #32]
  40b38c:	add	x29, sp, #0x20
  40b390:	str	x0, [sp, #16]
  40b394:	str	x1, [sp, #8]
  40b398:	ldr	x0, [sp, #8]
  40b39c:	bl	402e48 <strlen@plt>
  40b3a0:	str	x0, [sp]
  40b3a4:	ldr	x0, [sp, #16]
  40b3a8:	ldr	x1, [sp, #8]
  40b3ac:	ldr	x2, [sp]
  40b3b0:	bl	4030b8 <strncmp@plt>
  40b3b4:	cbnz	w0, 40b3cc <startswith+0x48>
  40b3b8:	ldr	x8, [sp, #16]
  40b3bc:	ldr	x9, [sp]
  40b3c0:	add	x8, x8, x9
  40b3c4:	stur	x8, [x29, #-8]
  40b3c8:	b	40b3d4 <startswith+0x50>
  40b3cc:	mov	x8, xzr
  40b3d0:	stur	x8, [x29, #-8]
  40b3d4:	ldur	x0, [x29, #-8]
  40b3d8:	ldp	x29, x30, [sp, #32]
  40b3dc:	add	sp, sp, #0x30
  40b3e0:	ret

000000000040b3e4 <ALIGN_TO>:
  40b3e4:	sub	sp, sp, #0x10
  40b3e8:	str	x0, [sp, #8]
  40b3ec:	str	x1, [sp]
  40b3f0:	ldr	x8, [sp, #8]
  40b3f4:	ldr	x9, [sp]
  40b3f8:	add	x8, x8, x9
  40b3fc:	subs	x8, x8, #0x1
  40b400:	ldr	x9, [sp]
  40b404:	subs	x9, x9, #0x1
  40b408:	bic	x0, x8, x9
  40b40c:	add	sp, sp, #0x10
  40b410:	ret
  40b414:	udf	#0

000000000040b418 <__libc_csu_init>:
  40b418:	stp	x29, x30, [sp, #-64]!
  40b41c:	mov	x29, sp
  40b420:	stp	x19, x20, [sp, #16]
  40b424:	adrp	x20, 41f000 <__FRAME_END__+0x12018>
  40b428:	add	x20, x20, #0x948
  40b42c:	stp	x21, x22, [sp, #32]
  40b430:	adrp	x21, 41f000 <__FRAME_END__+0x12018>
  40b434:	add	x21, x21, #0x940
  40b438:	sub	x20, x20, x21
  40b43c:	mov	w22, w0
  40b440:	stp	x23, x24, [sp, #48]
  40b444:	mov	x23, x1
  40b448:	mov	x24, x2
  40b44c:	bl	402ca0 <_init>
  40b450:	cmp	xzr, x20, asr #3
  40b454:	b.eq	40b480 <__libc_csu_init+0x68>  // b.none
  40b458:	asr	x20, x20, #3
  40b45c:	mov	x19, #0x0                   	// #0
  40b460:	ldr	x3, [x21, x19, lsl #3]
  40b464:	mov	x2, x24
  40b468:	add	x19, x19, #0x1
  40b46c:	mov	x1, x23
  40b470:	mov	w0, w22
  40b474:	blr	x3
  40b478:	cmp	x20, x19
  40b47c:	b.ne	40b460 <__libc_csu_init+0x48>  // b.any
  40b480:	ldp	x19, x20, [sp, #16]
  40b484:	ldp	x21, x22, [sp, #32]
  40b488:	ldp	x23, x24, [sp, #48]
  40b48c:	ldp	x29, x30, [sp], #64
  40b490:	ret
  40b494:	nop

000000000040b498 <__libc_csu_fini>:
  40b498:	ret
  40b49c:	udf	#0

000000000040b4a0 <stat64>:
  40b4a0:	mov	x2, x1
  40b4a4:	mov	x1, x0
  40b4a8:	mov	w0, #0x0                   	// #0
  40b4ac:	b	403528 <__xstat64@plt>

000000000040b4b0 <fstat64>:
  40b4b0:	mov	x2, x1
  40b4b4:	mov	w1, w0
  40b4b8:	mov	w0, #0x0                   	// #0
  40b4bc:	b	403538 <__fxstat64@plt>

000000000040b4c0 <fstatat64>:
  40b4c0:	mov	x4, x1
  40b4c4:	mov	x5, x2
  40b4c8:	mov	w1, w0
  40b4cc:	mov	x2, x4
  40b4d0:	mov	w0, #0x0                   	// #0
  40b4d4:	mov	w4, w3
  40b4d8:	mov	x3, x5
  40b4dc:	b	403548 <__fxstatat64@plt>

Disassembly of section .fini:

000000000040b4e0 <_fini>:
  40b4e0:	stp	x29, x30, [sp, #-16]!
  40b4e4:	mov	x29, sp
  40b4e8:	ldp	x29, x30, [sp], #16
  40b4ec:	ret
