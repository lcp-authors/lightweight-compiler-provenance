
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//systemd-gpt-auto-generator_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

0000000000401960 <_init>:
  401960:	stp	x29, x30, [sp, #-16]!
  401964:	mov	x29, sp
  401968:	bl	401e10 <call_weak_fn>
  40196c:	ldp	x29, x30, [sp], #16
  401970:	ret

Disassembly of section .plt:

0000000000401980 <.plt>:
  401980:	stp	x16, x30, [sp, #-16]!
  401984:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401988:	ldr	x17, [x16, #3544]
  40198c:	add	x16, x16, #0xdd8
  401990:	br	x17
  401994:	nop
  401998:	nop
  40199c:	nop

00000000004019a0 <unit_name_escape@plt>:
  4019a0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  4019a4:	ldr	x17, [x16, #3552]
  4019a8:	add	x16, x16, #0xde0
  4019ac:	br	x17

00000000004019b0 <safe_fclose@plt>:
  4019b0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  4019b4:	ldr	x17, [x16, #3560]
  4019b8:	add	x16, x16, #0xde8
  4019bc:	br	x17

00000000004019c0 <mkdir_parents_label@plt>:
  4019c0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  4019c4:	ldr	x17, [x16, #3568]
  4019c8:	add	x16, x16, #0xdf0
  4019cc:	br	x17

00000000004019d0 <sd_device_get_devtype@plt>:
  4019d0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  4019d4:	ldr	x17, [x16, #3576]
  4019d8:	add	x16, x16, #0xdf8
  4019dc:	br	x17

00000000004019e0 <strcmp_ptr@plt>:
  4019e0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  4019e4:	ldr	x17, [x16, #3584]
  4019e8:	add	x16, x16, #0xe00
  4019ec:	br	x17

00000000004019f0 <stpcpy@plt>:
  4019f0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  4019f4:	ldr	x17, [x16, #3592]
  4019f8:	add	x16, x16, #0xe08
  4019fc:	br	x17

0000000000401a00 <__libc_start_main@plt>:
  401a00:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a04:	ldr	x17, [x16, #3600]
  401a08:	add	x16, x16, #0xe10
  401a0c:	br	x17

0000000000401a10 <unit_name_build@plt>:
  401a10:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a14:	ldr	x17, [x16, #3608]
  401a18:	add	x16, x16, #0xe18
  401a1c:	br	x17

0000000000401a20 <unit_name_from_path@plt>:
  401a20:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a24:	ldr	x17, [x16, #3616]
  401a28:	add	x16, x16, #0xe20
  401a2c:	br	x17

0000000000401a30 <parse_boolean@plt>:
  401a30:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a34:	ldr	x17, [x16, #3624]
  401a38:	add	x16, x16, #0xe28
  401a3c:	br	x17

0000000000401a40 <__gmon_start__@plt>:
  401a40:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a44:	ldr	x17, [x16, #3632]
  401a48:	add	x16, x16, #0xe30
  401a4c:	br	x17

0000000000401a50 <sd_device_get_devname@plt>:
  401a50:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a54:	ldr	x17, [x16, #3640]
  401a58:	add	x16, x16, #0xe38
  401a5c:	br	x17

0000000000401a60 <write_string_file_ts@plt>:
  401a60:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a64:	ldr	x17, [x16, #3648]
  401a68:	add	x16, x16, #0xe40
  401a6c:	br	x17

0000000000401a70 <polkit_agent_close@plt>:
  401a70:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a74:	ldr	x17, [x16, #3656]
  401a78:	add	x16, x16, #0xe48
  401a7c:	br	x17

0000000000401a80 <proc_cmdline_key_streq@plt>:
  401a80:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a84:	ldr	x17, [x16, #3664]
  401a88:	add	x16, x16, #0xe50
  401a8c:	br	x17

0000000000401a90 <fprintf@plt>:
  401a90:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401a94:	ldr	x17, [x16, #3672]
  401a98:	add	x16, x16, #0xe58
  401a9c:	br	x17

0000000000401aa0 <fstab_is_mount_point@plt>:
  401aa0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401aa4:	ldr	x17, [x16, #3680]
  401aa8:	add	x16, x16, #0xe60
  401aac:	br	x17

0000000000401ab0 <safe_close@plt>:
  401ab0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ab4:	ldr	x17, [x16, #3688]
  401ab8:	add	x16, x16, #0xe68
  401abc:	br	x17

0000000000401ac0 <sd_device_get_sysname@plt>:
  401ac0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ac4:	ldr	x17, [x16, #3696]
  401ac8:	add	x16, x16, #0xe70
  401acc:	br	x17

0000000000401ad0 <log_assert_failed_realm@plt>:
  401ad0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ad4:	ldr	x17, [x16, #3704]
  401ad8:	add	x16, x16, #0xe78
  401adc:	br	x17

0000000000401ae0 <generator_write_initrd_root_device_deps@plt>:
  401ae0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ae4:	ldr	x17, [x16, #3712]
  401ae8:	add	x16, x16, #0xe80
  401aec:	br	x17

0000000000401af0 <in_initrd@plt>:
  401af0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401af4:	ldr	x17, [x16, #3720]
  401af8:	add	x16, x16, #0xe88
  401afc:	br	x17

0000000000401b00 <is_efi_boot@plt>:
  401b00:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b04:	ldr	x17, [x16, #3728]
  401b08:	add	x16, x16, #0xe90
  401b0c:	br	x17

0000000000401b10 <dir_is_empty_at@plt>:
  401b10:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b14:	ldr	x17, [x16, #3736]
  401b18:	add	x16, x16, #0xe98
  401b1c:	br	x17

0000000000401b20 <access@plt>:
  401b20:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b24:	ldr	x17, [x16, #3744]
  401b28:	add	x16, x16, #0xea0
  401b2c:	br	x17

0000000000401b30 <abort@plt>:
  401b30:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b34:	ldr	x17, [x16, #3752]
  401b38:	add	x16, x16, #0xea8
  401b3c:	br	x17

0000000000401b40 <get_block_device_harder@plt>:
  401b40:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b44:	ldr	x17, [x16, #3760]
  401b48:	add	x16, x16, #0xeb0
  401b4c:	br	x17

0000000000401b50 <log_setup_generator@plt>:
  401b50:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b54:	ldr	x17, [x16, #3768]
  401b58:	add	x16, x16, #0xeb8
  401b5c:	br	x17

0000000000401b60 <strreplace@plt>:
  401b60:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b64:	ldr	x17, [x16, #3776]
  401b68:	add	x16, x16, #0xec0
  401b6c:	br	x17

0000000000401b70 <log_object_internal@plt>:
  401b70:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b74:	ldr	x17, [x16, #3784]
  401b78:	add	x16, x16, #0xec8
  401b7c:	br	x17

0000000000401b80 <__errno_location@plt>:
  401b80:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b84:	ldr	x17, [x16, #3792]
  401b88:	add	x16, x16, #0xed0
  401b8c:	br	x17

0000000000401b90 <generator_add_symlink@plt>:
  401b90:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401b94:	ldr	x17, [x16, #3800]
  401b98:	add	x16, x16, #0xed8
  401b9c:	br	x17

0000000000401ba0 <__stack_chk_fail@plt>:
  401ba0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ba4:	ldr	x17, [x16, #3808]
  401ba8:	add	x16, x16, #0xee0
  401bac:	br	x17

0000000000401bb0 <sd_device_new_from_devnum@plt>:
  401bb0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401bb4:	ldr	x17, [x16, #3816]
  401bb8:	add	x16, x16, #0xee8
  401bbc:	br	x17

0000000000401bc0 <path_join_internal@plt>:
  401bc0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401bc4:	ldr	x17, [x16, #3824]
  401bc8:	add	x16, x16, #0xef0
  401bcc:	br	x17

0000000000401bd0 <ask_password_agent_close@plt>:
  401bd0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401bd4:	ldr	x17, [x16, #3832]
  401bd8:	add	x16, x16, #0xef8
  401bdc:	br	x17

0000000000401be0 <pager_close@plt>:
  401be0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401be4:	ldr	x17, [x16, #3840]
  401be8:	add	x16, x16, #0xf00
  401bec:	br	x17

0000000000401bf0 <sd_device_get_devnum@plt>:
  401bf0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401bf4:	ldr	x17, [x16, #3848]
  401bf8:	add	x16, x16, #0xf08
  401bfc:	br	x17

0000000000401c00 <fstab_has_fstype@plt>:
  401c00:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c04:	ldr	x17, [x16, #3856]
  401c08:	add	x16, x16, #0xf10
  401c0c:	br	x17

0000000000401c10 <memcmp@plt>:
  401c10:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c14:	ldr	x17, [x16, #3864]
  401c18:	add	x16, x16, #0xf18
  401c1c:	br	x17

0000000000401c20 <log_internal_realm@plt>:
  401c20:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c24:	ldr	x17, [x16, #3872]
  401c28:	add	x16, x16, #0xf20
  401c2c:	br	x17

0000000000401c30 <dissect_image@plt>:
  401c30:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c34:	ldr	x17, [x16, #3880]
  401c38:	add	x16, x16, #0xf28
  401c3c:	br	x17

0000000000401c40 <gnu_dev_major@plt>:
  401c40:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c44:	ldr	x17, [x16, #3888]
  401c48:	add	x16, x16, #0xf30
  401c4c:	br	x17

0000000000401c50 <generator_write_fsck_deps@plt>:
  401c50:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c54:	ldr	x17, [x16, #3896]
  401c58:	add	x16, x16, #0xf38
  401c5c:	br	x17

0000000000401c60 <detect_container@plt>:
  401c60:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c64:	ldr	x17, [x16, #3904]
  401c68:	add	x16, x16, #0xf40
  401c6c:	br	x17

0000000000401c70 <strcmp@plt>:
  401c70:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c74:	ldr	x17, [x16, #3912]
  401c78:	add	x16, x16, #0xf48
  401c7c:	br	x17

0000000000401c80 <path_is_mount_point@plt>:
  401c80:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c84:	ldr	x17, [x16, #3920]
  401c88:	add	x16, x16, #0xf50
  401c8c:	br	x17

0000000000401c90 <dissected_image_unref@plt>:
  401c90:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401c94:	ldr	x17, [x16, #3928]
  401c98:	add	x16, x16, #0xf58
  401c9c:	br	x17

0000000000401ca0 <proc_cmdline_parse@plt>:
  401ca0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ca4:	ldr	x17, [x16, #3936]
  401ca8:	add	x16, x16, #0xf60
  401cac:	br	x17

0000000000401cb0 <free@plt>:
  401cb0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401cb4:	ldr	x17, [x16, #3944]
  401cb8:	add	x16, x16, #0xf68
  401cbc:	br	x17

0000000000401cc0 <gnu_dev_minor@plt>:
  401cc0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401cc4:	ldr	x17, [x16, #3952]
  401cc8:	add	x16, x16, #0xf70
  401ccc:	br	x17

0000000000401cd0 <sd_device_unref@plt>:
  401cd0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401cd4:	ldr	x17, [x16, #3960]
  401cd8:	add	x16, x16, #0xf78
  401cdc:	br	x17

0000000000401ce0 <readlink_malloc@plt>:
  401ce0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401ce4:	ldr	x17, [x16, #3968]
  401ce8:	add	x16, x16, #0xf80
  401cec:	br	x17

0000000000401cf0 <device_path_parse_major_minor@plt>:
  401cf0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401cf4:	ldr	x17, [x16, #3976]
  401cf8:	add	x16, x16, #0xf88
  401cfc:	br	x17

0000000000401d00 <mac_selinux_finish@plt>:
  401d00:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d04:	ldr	x17, [x16, #3984]
  401d08:	add	x16, x16, #0xf90
  401d0c:	br	x17

0000000000401d10 <strcpy@plt>:
  401d10:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d14:	ldr	x17, [x16, #3992]
  401d18:	add	x16, x16, #0xf98
  401d1c:	br	x17

0000000000401d20 <open64@plt>:
  401d20:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d24:	ldr	x17, [x16, #4000]
  401d28:	add	x16, x16, #0xfa0
  401d2c:	br	x17

0000000000401d30 <generator_enable_remount_fs_service@plt>:
  401d30:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d34:	ldr	x17, [x16, #4008]
  401d38:	add	x16, x16, #0xfa8
  401d3c:	br	x17

0000000000401d40 <strlen@plt>:
  401d40:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d44:	ldr	x17, [x16, #4016]
  401d48:	add	x16, x16, #0xfb0
  401d4c:	br	x17

0000000000401d50 <sd_device_get_syspath@plt>:
  401d50:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d54:	ldr	x17, [x16, #4024]
  401d58:	add	x16, x16, #0xfb8
  401d5c:	br	x17

0000000000401d60 <fopen64@plt>:
  401d60:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d64:	ldr	x17, [x16, #4032]
  401d68:	add	x16, x16, #0xfc0
  401d6c:	br	x17

0000000000401d70 <log_oom_internal@plt>:
  401d70:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d74:	ldr	x17, [x16, #4040]
  401d78:	add	x16, x16, #0xfc8
  401d7c:	br	x17

0000000000401d80 <fflush_and_check@plt>:
  401d80:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d84:	ldr	x17, [x16, #4048]
  401d88:	add	x16, x16, #0xfd0
  401d8c:	br	x17

0000000000401d90 <efi_loader_get_device_part_uuid@plt>:
  401d90:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401d94:	ldr	x17, [x16, #4056]
  401d98:	add	x16, x16, #0xfd8
  401d9c:	br	x17

0000000000401da0 <log_get_max_level_realm@plt>:
  401da0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401da4:	ldr	x17, [x16, #4064]
  401da8:	add	x16, x16, #0xfe0
  401dac:	br	x17

0000000000401db0 <sd_device_get_parent@plt>:
  401db0:	adrp	x16, 418000 <__FRAME_END__+0xf660>
  401db4:	ldr	x17, [x16, #4072]
  401db8:	add	x16, x16, #0xfe8
  401dbc:	br	x17

Disassembly of section .text:

0000000000401dc0 <_start>:
  401dc0:	mov	x29, #0x0                   	// #0
  401dc4:	mov	x30, #0x0                   	// #0
  401dc8:	mov	x5, x0
  401dcc:	ldr	x1, [sp]
  401dd0:	add	x2, sp, #0x8
  401dd4:	mov	x6, sp
  401dd8:	movz	x0, #0x0, lsl #48
  401ddc:	movk	x0, #0x0, lsl #32
  401de0:	movk	x0, #0x40, lsl #16
  401de4:	movk	x0, #0x6ca0
  401de8:	movz	x3, #0x0, lsl #48
  401dec:	movk	x3, #0x0, lsl #32
  401df0:	movk	x3, #0x40, lsl #16
  401df4:	movk	x3, #0x6df0
  401df8:	movz	x4, #0x0, lsl #48
  401dfc:	movk	x4, #0x0, lsl #32
  401e00:	movk	x4, #0x40, lsl #16
  401e04:	movk	x4, #0x6e70
  401e08:	bl	401a00 <__libc_start_main@plt>
  401e0c:	bl	401b30 <abort@plt>

0000000000401e10 <call_weak_fn>:
  401e10:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  401e14:	ldr	x0, [x0, #4088]
  401e18:	cbz	x0, 401e20 <call_weak_fn+0x10>
  401e1c:	b	401a40 <__gmon_start__@plt>
  401e20:	ret

0000000000401e24 <deregister_tm_clones>:
  401e24:	stp	x29, x30, [sp, #-32]!
  401e28:	mov	x29, sp
  401e2c:	adrp	x0, 419000 <arg_enabled>
  401e30:	add	x0, x0, #0x8
  401e34:	str	x0, [sp, #24]
  401e38:	ldr	x0, [sp, #24]
  401e3c:	str	x0, [sp, #24]
  401e40:	ldr	x1, [sp, #24]
  401e44:	adrp	x0, 419000 <arg_enabled>
  401e48:	add	x0, x0, #0x8
  401e4c:	cmp	x1, x0
  401e50:	b.eq	401e8c <deregister_tm_clones+0x68>  // b.none
  401e54:	adrp	x0, 406000 <enumerate_partitions+0x398>
  401e58:	add	x0, x0, #0xe88
  401e5c:	ldr	x0, [x0]
  401e60:	str	x0, [sp, #16]
  401e64:	ldr	x0, [sp, #16]
  401e68:	str	x0, [sp, #16]
  401e6c:	ldr	x0, [sp, #16]
  401e70:	cmp	x0, #0x0
  401e74:	b.eq	401e90 <deregister_tm_clones+0x6c>  // b.none
  401e78:	ldr	x1, [sp, #16]
  401e7c:	adrp	x0, 419000 <arg_enabled>
  401e80:	add	x0, x0, #0x8
  401e84:	blr	x1
  401e88:	b	401e90 <deregister_tm_clones+0x6c>
  401e8c:	nop
  401e90:	ldp	x29, x30, [sp], #32
  401e94:	ret

0000000000401e98 <register_tm_clones>:
  401e98:	stp	x29, x30, [sp, #-48]!
  401e9c:	mov	x29, sp
  401ea0:	adrp	x0, 419000 <arg_enabled>
  401ea4:	add	x0, x0, #0x8
  401ea8:	str	x0, [sp, #40]
  401eac:	ldr	x0, [sp, #40]
  401eb0:	str	x0, [sp, #40]
  401eb4:	ldr	x1, [sp, #40]
  401eb8:	adrp	x0, 419000 <arg_enabled>
  401ebc:	add	x0, x0, #0x8
  401ec0:	sub	x0, x1, x0
  401ec4:	asr	x0, x0, #3
  401ec8:	lsr	x1, x0, #63
  401ecc:	add	x0, x1, x0
  401ed0:	asr	x0, x0, #1
  401ed4:	str	x0, [sp, #32]
  401ed8:	ldr	x0, [sp, #32]
  401edc:	cmp	x0, #0x0
  401ee0:	b.eq	401f20 <register_tm_clones+0x88>  // b.none
  401ee4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  401ee8:	add	x0, x0, #0xe90
  401eec:	ldr	x0, [x0]
  401ef0:	str	x0, [sp, #24]
  401ef4:	ldr	x0, [sp, #24]
  401ef8:	str	x0, [sp, #24]
  401efc:	ldr	x0, [sp, #24]
  401f00:	cmp	x0, #0x0
  401f04:	b.eq	401f24 <register_tm_clones+0x8c>  // b.none
  401f08:	ldr	x2, [sp, #24]
  401f0c:	ldr	x1, [sp, #32]
  401f10:	adrp	x0, 419000 <arg_enabled>
  401f14:	add	x0, x0, #0x8
  401f18:	blr	x2
  401f1c:	b	401f24 <register_tm_clones+0x8c>
  401f20:	nop
  401f24:	ldp	x29, x30, [sp], #48
  401f28:	ret

0000000000401f2c <__do_global_dtors_aux>:
  401f2c:	stp	x29, x30, [sp, #-16]!
  401f30:	mov	x29, sp
  401f34:	adrp	x0, 419000 <arg_enabled>
  401f38:	add	x0, x0, #0x14
  401f3c:	ldrb	w0, [x0]
  401f40:	and	x0, x0, #0xff
  401f44:	cmp	x0, #0x0
  401f48:	b.ne	401f64 <__do_global_dtors_aux+0x38>  // b.any
  401f4c:	bl	401e24 <deregister_tm_clones>
  401f50:	adrp	x0, 419000 <arg_enabled>
  401f54:	add	x0, x0, #0x14
  401f58:	mov	w1, #0x1                   	// #1
  401f5c:	strb	w1, [x0]
  401f60:	b	401f68 <__do_global_dtors_aux+0x3c>
  401f64:	nop
  401f68:	ldp	x29, x30, [sp], #16
  401f6c:	ret

0000000000401f70 <frame_dummy>:
  401f70:	stp	x29, x30, [sp, #-16]!
  401f74:	mov	x29, sp
  401f78:	bl	401e98 <register_tm_clones>
  401f7c:	nop
  401f80:	ldp	x29, x30, [sp], #16
  401f84:	ret

0000000000401f88 <sd_device_unrefp>:
  401f88:	stp	x29, x30, [sp, #-32]!
  401f8c:	mov	x29, sp
  401f90:	str	x0, [sp, #24]
  401f94:	ldr	x0, [sp, #24]
  401f98:	ldr	x0, [x0]
  401f9c:	cmp	x0, #0x0
  401fa0:	b.eq	401fb0 <sd_device_unrefp+0x28>  // b.none
  401fa4:	ldr	x0, [sp, #24]
  401fa8:	ldr	x0, [x0]
  401fac:	bl	401cd0 <sd_device_unref@plt>
  401fb0:	nop
  401fb4:	ldp	x29, x30, [sp], #32
  401fb8:	ret

0000000000401fbc <sd_id128_equal>:
  401fbc:	stp	x29, x30, [sp, #-48]!
  401fc0:	mov	x29, sp
  401fc4:	stp	x0, x1, [sp, #32]
  401fc8:	stp	x2, x3, [sp, #16]
  401fcc:	add	x1, sp, #0x10
  401fd0:	add	x0, sp, #0x20
  401fd4:	mov	x2, #0x10                  	// #16
  401fd8:	bl	401c10 <memcmp@plt>
  401fdc:	cmp	w0, #0x0
  401fe0:	cset	w0, eq  // eq = none
  401fe4:	and	w0, w0, #0xff
  401fe8:	ldp	x29, x30, [sp], #48
  401fec:	ret

0000000000401ff0 <ALIGN_TO>:
  401ff0:	sub	sp, sp, #0x10
  401ff4:	str	x0, [sp, #8]
  401ff8:	str	x1, [sp]
  401ffc:	ldr	x1, [sp, #8]
  402000:	ldr	x0, [sp]
  402004:	add	x0, x1, x0
  402008:	sub	x1, x0, #0x1
  40200c:	ldr	x0, [sp]
  402010:	neg	x0, x0
  402014:	and	x0, x1, x0
  402018:	add	sp, sp, #0x10
  40201c:	ret

0000000000402020 <freep>:
  402020:	stp	x29, x30, [sp, #-32]!
  402024:	mov	x29, sp
  402028:	str	x0, [sp, #24]
  40202c:	ldr	x0, [sp, #24]
  402030:	ldr	x0, [x0]
  402034:	bl	401cb0 <free@plt>
  402038:	nop
  40203c:	ldp	x29, x30, [sp], #32
  402040:	ret

0000000000402044 <size_multiply_overflow>:
  402044:	sub	sp, sp, #0x10
  402048:	str	x0, [sp, #8]
  40204c:	str	x1, [sp]
  402050:	ldr	x0, [sp]
  402054:	cmp	x0, #0x0
  402058:	cset	w0, ne  // ne = any
  40205c:	and	w0, w0, #0xff
  402060:	and	x0, x0, #0xff
  402064:	cmp	x0, #0x0
  402068:	b.eq	4020ac <size_multiply_overflow+0x68>  // b.none
  40206c:	mov	x2, #0x0                   	// #0
  402070:	ldr	x1, [sp, #8]
  402074:	ldr	x0, [sp]
  402078:	umulh	x0, x1, x0
  40207c:	cmp	x0, #0x0
  402080:	b.eq	402088 <size_multiply_overflow+0x44>  // b.none
  402084:	mov	x2, #0x1                   	// #1
  402088:	mov	x0, x2
  40208c:	cmp	x0, #0x0
  402090:	cset	w0, ne  // ne = any
  402094:	and	w0, w0, #0xff
  402098:	and	x0, x0, #0xff
  40209c:	cmp	x0, #0x0
  4020a0:	b.eq	4020ac <size_multiply_overflow+0x68>  // b.none
  4020a4:	mov	w0, #0x1                   	// #1
  4020a8:	b	4020b0 <size_multiply_overflow+0x6c>
  4020ac:	mov	w0, #0x0                   	// #0
  4020b0:	and	w0, w0, #0x1
  4020b4:	and	w0, w0, #0xff
  4020b8:	add	sp, sp, #0x10
  4020bc:	ret

00000000004020c0 <streq_ptr>:
  4020c0:	stp	x29, x30, [sp, #-32]!
  4020c4:	mov	x29, sp
  4020c8:	str	x0, [sp, #24]
  4020cc:	str	x1, [sp, #16]
  4020d0:	ldr	x1, [sp, #16]
  4020d4:	ldr	x0, [sp, #24]
  4020d8:	bl	4019e0 <strcmp_ptr@plt>
  4020dc:	cmp	w0, #0x0
  4020e0:	cset	w0, eq  // eq = none
  4020e4:	and	w0, w0, #0xff
  4020e8:	ldp	x29, x30, [sp], #32
  4020ec:	ret

00000000004020f0 <strna>:
  4020f0:	sub	sp, sp, #0x10
  4020f4:	str	x0, [sp, #8]
  4020f8:	ldr	x0, [sp, #8]
  4020fc:	cmp	x0, #0x0
  402100:	b.ne	40210c <strna+0x1c>  // b.any
  402104:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402108:	add	x0, x0, #0xe98
  40210c:	add	sp, sp, #0x10
  402110:	ret

0000000000402114 <isempty>:
  402114:	sub	sp, sp, #0x10
  402118:	str	x0, [sp, #8]
  40211c:	ldr	x0, [sp, #8]
  402120:	cmp	x0, #0x0
  402124:	b.eq	402138 <isempty+0x24>  // b.none
  402128:	ldr	x0, [sp, #8]
  40212c:	ldrb	w0, [x0]
  402130:	cmp	w0, #0x0
  402134:	b.ne	402140 <isempty+0x2c>  // b.any
  402138:	mov	w0, #0x1                   	// #1
  40213c:	b	402144 <isempty+0x30>
  402140:	mov	w0, #0x0                   	// #0
  402144:	and	w0, w0, #0x1
  402148:	and	w0, w0, #0xff
  40214c:	add	sp, sp, #0x10
  402150:	ret

0000000000402154 <save_argc_argv>:
  402154:	sub	sp, sp, #0x10
  402158:	str	w0, [sp, #12]
  40215c:	str	x1, [sp]
  402160:	adrp	x0, 419000 <arg_enabled>
  402164:	add	x0, x0, #0x10
  402168:	ldr	w1, [sp, #12]
  40216c:	str	w1, [x0]
  402170:	adrp	x0, 419000 <arg_enabled>
  402174:	add	x0, x0, #0x8
  402178:	ldr	x1, [sp]
  40217c:	str	x1, [x0]
  402180:	nop
  402184:	add	sp, sp, #0x10
  402188:	ret

000000000040218c <empty_to_root>:
  40218c:	stp	x29, x30, [sp, #-32]!
  402190:	mov	x29, sp
  402194:	str	x0, [sp, #24]
  402198:	ldr	x0, [sp, #24]
  40219c:	bl	402114 <isempty>
  4021a0:	and	w0, w0, #0xff
  4021a4:	cmp	w0, #0x0
  4021a8:	b.ne	4021b4 <empty_to_root+0x28>  // b.any
  4021ac:	ldr	x0, [sp, #24]
  4021b0:	b	4021bc <empty_to_root+0x30>
  4021b4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4021b8:	add	x0, x0, #0xea0
  4021bc:	ldp	x29, x30, [sp], #32
  4021c0:	ret

00000000004021c4 <dissected_image_unrefp>:
  4021c4:	stp	x29, x30, [sp, #-32]!
  4021c8:	mov	x29, sp
  4021cc:	str	x0, [sp, #24]
  4021d0:	ldr	x0, [sp, #24]
  4021d4:	ldr	x0, [x0]
  4021d8:	cmp	x0, #0x0
  4021dc:	b.eq	4021ec <dissected_image_unrefp+0x28>  // b.none
  4021e0:	ldr	x0, [sp, #24]
  4021e4:	ldr	x0, [x0]
  4021e8:	bl	401c90 <dissected_image_unref@plt>
  4021ec:	nop
  4021f0:	ldp	x29, x30, [sp], #32
  4021f4:	ret

00000000004021f8 <closep>:
  4021f8:	stp	x29, x30, [sp, #-32]!
  4021fc:	mov	x29, sp
  402200:	str	x0, [sp, #24]
  402204:	ldr	x0, [sp, #24]
  402208:	ldr	w0, [x0]
  40220c:	bl	401ab0 <safe_close@plt>
  402210:	nop
  402214:	ldp	x29, x30, [sp], #32
  402218:	ret

000000000040221c <fclosep>:
  40221c:	stp	x29, x30, [sp, #-32]!
  402220:	mov	x29, sp
  402224:	str	x0, [sp, #24]
  402228:	ldr	x0, [sp, #24]
  40222c:	ldr	x0, [x0]
  402230:	bl	4019b0 <safe_fclose@plt>
  402234:	nop
  402238:	ldp	x29, x30, [sp], #32
  40223c:	ret

0000000000402240 <write_string_file>:
  402240:	stp	x29, x30, [sp, #-48]!
  402244:	mov	x29, sp
  402248:	str	x0, [sp, #40]
  40224c:	str	x1, [sp, #32]
  402250:	str	w2, [sp, #28]
  402254:	mov	x3, #0x0                   	// #0
  402258:	ldr	w2, [sp, #28]
  40225c:	ldr	x1, [sp, #32]
  402260:	ldr	x0, [sp, #40]
  402264:	bl	401a60 <write_string_file_ts@plt>
  402268:	ldp	x29, x30, [sp], #48
  40226c:	ret

0000000000402270 <static_destruct>:
  402270:	stp	x29, x30, [sp, #-32]!
  402274:	mov	x29, sp
  402278:	adrp	x0, 408000 <_fini+0x118c>
  40227c:	add	x0, x0, #0x110
  402280:	ldr	x0, [x0]
  402284:	cmp	x0, #0x0
  402288:	b.eq	4022ec <static_destruct+0x7c>  // b.none
  40228c:	adrp	x0, 408000 <_fini+0x118c>
  402290:	add	x0, x0, #0x110
  402294:	ldr	x0, [x0]
  402298:	mov	x1, #0x8                   	// #8
  40229c:	bl	401ff0 <ALIGN_TO>
  4022a0:	str	x0, [sp, #24]
  4022a4:	b	4022d0 <static_destruct+0x60>
  4022a8:	ldr	x0, [sp, #24]
  4022ac:	ldr	x1, [x0, #8]
  4022b0:	ldr	x0, [sp, #24]
  4022b4:	ldr	x0, [x0]
  4022b8:	blr	x1
  4022bc:	ldr	x0, [sp, #24]
  4022c0:	add	x0, x0, #0x10
  4022c4:	mov	x1, #0x8                   	// #8
  4022c8:	bl	401ff0 <ALIGN_TO>
  4022cc:	str	x0, [sp, #24]
  4022d0:	ldr	x1, [sp, #24]
  4022d4:	adrp	x0, 408000 <_fini+0x118c>
  4022d8:	add	x0, x0, #0x118
  4022dc:	ldr	x0, [x0]
  4022e0:	cmp	x1, x0
  4022e4:	b.cc	4022a8 <static_destruct+0x38>  // b.lo, b.ul, b.last
  4022e8:	b	4022f0 <static_destruct+0x80>
  4022ec:	nop
  4022f0:	ldp	x29, x30, [sp], #32
  4022f4:	ret

00000000004022f8 <proc_cmdline_value_missing>:
  4022f8:	stp	x29, x30, [sp, #-48]!
  4022fc:	mov	x29, sp
  402300:	str	x0, [sp, #24]
  402304:	str	x1, [sp, #16]
  402308:	ldr	x0, [sp, #16]
  40230c:	cmp	x0, #0x0
  402310:	b.ne	402394 <proc_cmdline_value_missing+0x9c>  // b.any
  402314:	mov	w0, #0x4                   	// #4
  402318:	str	w0, [sp, #36]
  40231c:	str	wzr, [sp, #40]
  402320:	str	wzr, [sp, #44]
  402324:	ldr	w0, [sp, #44]
  402328:	bl	401da0 <log_get_max_level_realm@plt>
  40232c:	mov	w1, w0
  402330:	ldr	w0, [sp, #36]
  402334:	and	w0, w0, #0x7
  402338:	cmp	w1, w0
  40233c:	b.lt	402384 <proc_cmdline_value_missing+0x8c>  // b.tstop
  402340:	ldr	w0, [sp, #44]
  402344:	lsl	w1, w0, #10
  402348:	ldr	w0, [sp, #36]
  40234c:	orr	w7, w1, w0
  402350:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402354:	add	x1, x0, #0xeab
  402358:	ldr	x6, [sp, #24]
  40235c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402360:	add	x5, x0, #0xec8
  402364:	adrp	x0, 408000 <_fini+0x118c>
  402368:	add	x4, x0, #0x290
  40236c:	mov	w3, #0x21                  	// #33
  402370:	mov	x2, x1
  402374:	ldr	w1, [sp, #40]
  402378:	mov	w0, w7
  40237c:	bl	401c20 <log_internal_realm@plt>
  402380:	b	40238c <proc_cmdline_value_missing+0x94>
  402384:	ldr	w0, [sp, #40]
  402388:	cmp	w0, #0x0
  40238c:	mov	w0, #0x1                   	// #1
  402390:	b	402398 <proc_cmdline_value_missing+0xa0>
  402394:	mov	w0, #0x0                   	// #0
  402398:	ldp	x29, x30, [sp], #48
  40239c:	ret

00000000004023a0 <specifier_escape>:
  4023a0:	stp	x29, x30, [sp, #-32]!
  4023a4:	mov	x29, sp
  4023a8:	str	x0, [sp, #24]
  4023ac:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4023b0:	add	x2, x0, #0xf08
  4023b4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4023b8:	add	x1, x0, #0xf10
  4023bc:	ldr	x0, [sp, #24]
  4023c0:	bl	401b60 <strreplace@plt>
  4023c4:	ldp	x29, x30, [sp], #32
  4023c8:	ret

00000000004023cc <dir_is_empty>:
  4023cc:	stp	x29, x30, [sp, #-32]!
  4023d0:	mov	x29, sp
  4023d4:	str	x0, [sp, #24]
  4023d8:	ldr	x1, [sp, #24]
  4023dc:	mov	w0, #0xffffff9c            	// #-100
  4023e0:	bl	401b10 <dir_is_empty_at@plt>
  4023e4:	ldp	x29, x30, [sp], #32
  4023e8:	ret

00000000004023ec <add_cryptsetup>:
  4023ec:	stp	x29, x30, [sp, #-384]!
  4023f0:	mov	x29, sp
  4023f4:	str	x19, [sp, #16]
  4023f8:	str	x0, [x29, #56]
  4023fc:	str	x1, [x29, #48]
  402400:	strb	w2, [x29, #47]
  402404:	strb	w3, [x29, #46]
  402408:	str	x4, [x29, #32]
  40240c:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  402410:	add	x0, x0, #0xb90
  402414:	ldr	x1, [x0]
  402418:	str	x1, [x29, #376]
  40241c:	mov	x1, #0x0                   	// #0
  402420:	str	xzr, [x29, #136]
  402424:	str	xzr, [x29, #144]
  402428:	str	xzr, [x29, #152]
  40242c:	str	xzr, [x29, #160]
  402430:	str	xzr, [x29, #168]
  402434:	str	xzr, [x29, #176]
  402438:	ldr	x0, [x29, #56]
  40243c:	cmp	x0, #0x0
  402440:	cset	w0, eq  // eq = none
  402444:	and	w0, w0, #0xff
  402448:	and	x0, x0, #0xff
  40244c:	cmp	x0, #0x0
  402450:	b.eq	40247c <add_cryptsetup+0x90>  // b.none
  402454:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402458:	add	x1, x0, #0xf1b
  40245c:	adrp	x0, 408000 <_fini+0x118c>
  402460:	add	x4, x0, #0x120
  402464:	mov	w3, #0x30                  	// #48
  402468:	mov	x2, x1
  40246c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402470:	add	x1, x0, #0xf48
  402474:	mov	w0, #0x0                   	// #0
  402478:	bl	401ad0 <log_assert_failed_realm@plt>
  40247c:	ldr	x0, [x29, #48]
  402480:	cmp	x0, #0x0
  402484:	cset	w0, eq  // eq = none
  402488:	and	w0, w0, #0xff
  40248c:	and	x0, x0, #0xff
  402490:	cmp	x0, #0x0
  402494:	b.eq	4024c0 <add_cryptsetup+0xd4>  // b.none
  402498:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40249c:	add	x1, x0, #0xf1b
  4024a0:	adrp	x0, 408000 <_fini+0x118c>
  4024a4:	add	x4, x0, #0x120
  4024a8:	mov	w3, #0x31                  	// #49
  4024ac:	mov	x2, x1
  4024b0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4024b4:	add	x1, x0, #0xf50
  4024b8:	mov	w0, #0x0                   	// #0
  4024bc:	bl	401ad0 <log_assert_failed_realm@plt>
  4024c0:	add	x0, x29, #0x98
  4024c4:	mov	x2, x0
  4024c8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4024cc:	add	x1, x0, #0xf58
  4024d0:	ldr	x0, [x29, #48]
  4024d4:	bl	401a20 <unit_name_from_path@plt>
  4024d8:	str	w0, [x29, #72]
  4024dc:	ldr	w0, [x29, #72]
  4024e0:	cmp	w0, #0x0
  4024e4:	b.ge	402574 <add_cryptsetup+0x188>  // b.tcont
  4024e8:	mov	w0, #0x3                   	// #3
  4024ec:	str	w0, [x29, #124]
  4024f0:	ldr	w0, [x29, #72]
  4024f4:	str	w0, [x29, #128]
  4024f8:	str	wzr, [x29, #132]
  4024fc:	ldr	w0, [x29, #132]
  402500:	bl	401da0 <log_get_max_level_realm@plt>
  402504:	mov	w1, w0
  402508:	ldr	w0, [x29, #124]
  40250c:	and	w0, w0, #0x7
  402510:	cmp	w1, w0
  402514:	b.lt	40255c <add_cryptsetup+0x170>  // b.tstop
  402518:	ldr	w0, [x29, #132]
  40251c:	lsl	w1, w0, #10
  402520:	ldr	w0, [x29, #124]
  402524:	orr	w6, w1, w0
  402528:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40252c:	add	x1, x0, #0xf1b
  402530:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402534:	add	x5, x0, #0xf60
  402538:	adrp	x0, 408000 <_fini+0x118c>
  40253c:	add	x4, x0, #0x130
  402540:	mov	w3, #0x35                  	// #53
  402544:	mov	x2, x1
  402548:	ldr	w1, [x29, #128]
  40254c:	mov	w0, w6
  402550:	bl	401c20 <log_internal_realm@plt>
  402554:	mov	w19, w0
  402558:	b	402fe0 <add_cryptsetup+0xbf4>
  40255c:	ldr	w0, [x29, #128]
  402560:	cmp	w0, #0x0
  402564:	cneg	w0, w0, lt  // lt = tstop
  402568:	and	w0, w0, #0xff
  40256c:	neg	w19, w0
  402570:	b	402fe0 <add_cryptsetup+0xbf4>
  402574:	ldr	x0, [x29, #56]
  402578:	bl	4019a0 <unit_name_escape@plt>
  40257c:	str	x0, [x29, #136]
  402580:	ldr	x0, [x29, #136]
  402584:	cmp	x0, #0x0
  402588:	b.ne	4025b0 <add_cryptsetup+0x1c4>  // b.any
  40258c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402590:	add	x1, x0, #0xf1b
  402594:	adrp	x0, 408000 <_fini+0x118c>
  402598:	add	x3, x0, #0x130
  40259c:	mov	w2, #0x39                  	// #57
  4025a0:	mov	w0, #0x0                   	// #0
  4025a4:	bl	401d70 <log_oom_internal@plt>
  4025a8:	mov	w19, w0
  4025ac:	b	402fe0 <add_cryptsetup+0xbf4>
  4025b0:	ldr	x1, [x29, #136]
  4025b4:	add	x0, x29, #0x90
  4025b8:	mov	x3, x0
  4025bc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4025c0:	add	x2, x0, #0xf88
  4025c4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4025c8:	add	x0, x0, #0xf98
  4025cc:	bl	401a10 <unit_name_build@plt>
  4025d0:	str	w0, [x29, #72]
  4025d4:	ldr	w0, [x29, #72]
  4025d8:	cmp	w0, #0x0
  4025dc:	b.ge	40266c <add_cryptsetup+0x280>  // b.tcont
  4025e0:	mov	w0, #0x3                   	// #3
  4025e4:	str	w0, [x29, #112]
  4025e8:	ldr	w0, [x29, #72]
  4025ec:	str	w0, [x29, #116]
  4025f0:	str	wzr, [x29, #120]
  4025f4:	ldr	w0, [x29, #120]
  4025f8:	bl	401da0 <log_get_max_level_realm@plt>
  4025fc:	mov	w1, w0
  402600:	ldr	w0, [x29, #112]
  402604:	and	w0, w0, #0x7
  402608:	cmp	w1, w0
  40260c:	b.lt	402654 <add_cryptsetup+0x268>  // b.tstop
  402610:	ldr	w0, [x29, #120]
  402614:	lsl	w1, w0, #10
  402618:	ldr	w0, [x29, #112]
  40261c:	orr	w6, w1, w0
  402620:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402624:	add	x1, x0, #0xf1b
  402628:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40262c:	add	x5, x0, #0xf60
  402630:	adrp	x0, 408000 <_fini+0x118c>
  402634:	add	x4, x0, #0x130
  402638:	mov	w3, #0x3d                  	// #61
  40263c:	mov	x2, x1
  402640:	ldr	w1, [x29, #116]
  402644:	mov	w0, w6
  402648:	bl	401c20 <log_internal_realm@plt>
  40264c:	mov	w19, w0
  402650:	b	402fe0 <add_cryptsetup+0xbf4>
  402654:	ldr	w0, [x29, #116]
  402658:	cmp	w0, #0x0
  40265c:	cneg	w0, w0, lt  // lt = tstop
  402660:	and	w0, w0, #0xff
  402664:	neg	w19, w0
  402668:	b	402fe0 <add_cryptsetup+0xbf4>
  40266c:	ldr	x0, [x29, #56]
  402670:	bl	4023a0 <specifier_escape>
  402674:	str	x0, [x29, #160]
  402678:	ldr	x0, [x29, #160]
  40267c:	cmp	x0, #0x0
  402680:	b.ne	4026a8 <add_cryptsetup+0x2bc>  // b.any
  402684:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402688:	add	x1, x0, #0xf1b
  40268c:	adrp	x0, 408000 <_fini+0x118c>
  402690:	add	x3, x0, #0x130
  402694:	mov	w2, #0x41                  	// #65
  402698:	mov	w0, #0x0                   	// #0
  40269c:	bl	401d70 <log_oom_internal@plt>
  4026a0:	mov	w19, w0
  4026a4:	b	402fe0 <add_cryptsetup+0xbf4>
  4026a8:	ldr	x0, [x29, #48]
  4026ac:	bl	4023a0 <specifier_escape>
  4026b0:	str	x0, [x29, #168]
  4026b4:	ldr	x0, [x29, #168]
  4026b8:	cmp	x0, #0x0
  4026bc:	b.ne	4026e4 <add_cryptsetup+0x2f8>  // b.any
  4026c0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4026c4:	add	x1, x0, #0xf1b
  4026c8:	adrp	x0, 408000 <_fini+0x118c>
  4026cc:	add	x3, x0, #0x130
  4026d0:	mov	w2, #0x45                  	// #69
  4026d4:	mov	w0, #0x0                   	// #0
  4026d8:	bl	401d70 <log_oom_internal@plt>
  4026dc:	mov	w19, w0
  4026e0:	b	402fe0 <add_cryptsetup+0xbf4>
  4026e4:	ldr	x0, [x29, #144]
  4026e8:	str	x0, [x29, #184]
  4026ec:	adrp	x0, 419000 <arg_enabled>
  4026f0:	add	x0, x0, #0x18
  4026f4:	ldr	x0, [x0]
  4026f8:	str	x0, [x29, #256]
  4026fc:	b	40270c <add_cryptsetup+0x320>
  402700:	ldr	x0, [x29, #184]
  402704:	add	x0, x0, #0x1
  402708:	str	x0, [x29, #184]
  40270c:	ldr	x0, [x29, #184]
  402710:	ldrb	w0, [x0]
  402714:	cmp	w0, #0x2f
  402718:	b.ne	402730 <add_cryptsetup+0x344>  // b.any
  40271c:	ldr	x0, [x29, #184]
  402720:	add	x0, x0, #0x1
  402724:	ldrb	w0, [x0]
  402728:	cmp	w0, #0x2f
  40272c:	b.eq	402700 <add_cryptsetup+0x314>  // b.none
  402730:	ldr	x0, [x29, #256]
  402734:	bl	402114 <isempty>
  402738:	and	w0, w0, #0xff
  40273c:	cmp	w0, #0x0
  402740:	b.eq	402750 <add_cryptsetup+0x364>  // b.none
  402744:	ldr	x0, [x29, #184]
  402748:	str	x0, [x29, #192]
  40274c:	b	4028a4 <add_cryptsetup+0x4b8>
  402750:	ldr	x0, [x29, #256]
  402754:	bl	401d40 <strlen@plt>
  402758:	mov	x19, x0
  40275c:	ldr	x0, [x29, #184]
  402760:	bl	401d40 <strlen@plt>
  402764:	add	x0, x19, x0
  402768:	add	x0, x0, #0x2
  40276c:	str	x0, [x29, #264]
  402770:	ldr	x0, [x29, #264]
  402774:	str	x0, [x29, #272]
  402778:	ldr	x1, [x29, #272]
  40277c:	mov	x0, #0x1                   	// #1
  402780:	bl	402044 <size_multiply_overflow>
  402784:	and	w0, w0, #0xff
  402788:	and	x0, x0, #0xff
  40278c:	cmp	x0, #0x0
  402790:	b.eq	4027bc <add_cryptsetup+0x3d0>  // b.none
  402794:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402798:	add	x1, x0, #0xf1b
  40279c:	adrp	x0, 408000 <_fini+0x118c>
  4027a0:	add	x4, x0, #0x120
  4027a4:	mov	w3, #0x47                  	// #71
  4027a8:	mov	x2, x1
  4027ac:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4027b0:	add	x1, x0, #0xfb0
  4027b4:	mov	w0, #0x0                   	// #0
  4027b8:	bl	401ad0 <log_assert_failed_realm@plt>
  4027bc:	ldr	x0, [x29, #272]
  4027c0:	cmp	x0, #0x400, lsl #12
  4027c4:	cset	w0, hi  // hi = pmore
  4027c8:	and	w0, w0, #0xff
  4027cc:	and	x0, x0, #0xff
  4027d0:	cmp	x0, #0x0
  4027d4:	b.eq	402800 <add_cryptsetup+0x414>  // b.none
  4027d8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4027dc:	add	x1, x0, #0xf1b
  4027e0:	adrp	x0, 408000 <_fini+0x118c>
  4027e4:	add	x4, x0, #0x120
  4027e8:	mov	w3, #0x47                  	// #71
  4027ec:	mov	x2, x1
  4027f0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4027f4:	add	x1, x0, #0xfe0
  4027f8:	mov	w0, #0x0                   	// #0
  4027fc:	bl	401ad0 <log_assert_failed_realm@plt>
  402800:	ldr	x0, [x29, #272]
  402804:	add	x0, x0, #0xf
  402808:	lsr	x0, x0, #4
  40280c:	lsl	x0, x0, #4
  402810:	sub	sp, sp, x0
  402814:	mov	x0, sp
  402818:	add	x0, x0, #0xf
  40281c:	lsr	x0, x0, #4
  402820:	lsl	x0, x0, #4
  402824:	str	x0, [x29, #280]
  402828:	ldr	x1, [x29, #256]
  40282c:	ldr	x0, [x29, #280]
  402830:	bl	4019f0 <stpcpy@plt>
  402834:	str	x0, [x29, #200]
  402838:	b	402848 <add_cryptsetup+0x45c>
  40283c:	ldr	x0, [x29, #200]
  402840:	sub	x0, x0, #0x1
  402844:	str	x0, [x29, #200]
  402848:	ldr	x1, [x29, #200]
  40284c:	ldr	x0, [x29, #280]
  402850:	cmp	x1, x0
  402854:	b.ls	40286c <add_cryptsetup+0x480>  // b.plast
  402858:	ldr	x0, [x29, #200]
  40285c:	sub	x0, x0, #0x1
  402860:	ldrb	w0, [x0]
  402864:	cmp	w0, #0x2f
  402868:	b.eq	40283c <add_cryptsetup+0x450>  // b.none
  40286c:	ldr	x0, [x29, #184]
  402870:	ldrb	w0, [x0]
  402874:	cmp	w0, #0x2f
  402878:	b.eq	402890 <add_cryptsetup+0x4a4>  // b.none
  40287c:	ldr	x0, [x29, #200]
  402880:	add	x1, x0, #0x1
  402884:	str	x1, [x29, #200]
  402888:	mov	w1, #0x2f                  	// #47
  40288c:	strb	w1, [x0]
  402890:	ldr	x1, [x29, #184]
  402894:	ldr	x0, [x29, #200]
  402898:	bl	401d10 <strcpy@plt>
  40289c:	ldr	x0, [x29, #280]
  4028a0:	str	x0, [x29, #192]
  4028a4:	ldr	x0, [x29, #192]
  4028a8:	str	x0, [x29, #288]
  4028ac:	adrp	x0, 407000 <_fini+0x18c>
  4028b0:	add	x1, x0, #0x0
  4028b4:	ldr	x0, [x29, #288]
  4028b8:	bl	401d60 <fopen64@plt>
  4028bc:	str	x0, [x29, #176]
  4028c0:	ldr	x0, [x29, #176]
  4028c4:	cmp	x0, #0x0
  4028c8:	b.ne	402960 <add_cryptsetup+0x574>  // b.any
  4028cc:	mov	w0, #0x3                   	// #3
  4028d0:	str	w0, [x29, #100]
  4028d4:	bl	401b80 <__errno_location@plt>
  4028d8:	ldr	w0, [x0]
  4028dc:	str	w0, [x29, #104]
  4028e0:	str	wzr, [x29, #108]
  4028e4:	ldr	w0, [x29, #108]
  4028e8:	bl	401da0 <log_get_max_level_realm@plt>
  4028ec:	mov	w1, w0
  4028f0:	ldr	w0, [x29, #100]
  4028f4:	and	w0, w0, #0x7
  4028f8:	cmp	w1, w0
  4028fc:	b.lt	402948 <add_cryptsetup+0x55c>  // b.tstop
  402900:	ldr	w0, [x29, #108]
  402904:	lsl	w1, w0, #10
  402908:	ldr	w0, [x29, #100]
  40290c:	orr	w7, w1, w0
  402910:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402914:	add	x1, x0, #0xf1b
  402918:	ldr	x6, [x29, #288]
  40291c:	adrp	x0, 407000 <_fini+0x18c>
  402920:	add	x5, x0, #0x8
  402924:	adrp	x0, 408000 <_fini+0x118c>
  402928:	add	x4, x0, #0x130
  40292c:	mov	w3, #0x4a                  	// #74
  402930:	mov	x2, x1
  402934:	ldr	w1, [x29, #104]
  402938:	mov	w0, w7
  40293c:	bl	401c20 <log_internal_realm@plt>
  402940:	mov	w19, w0
  402944:	b	402fe0 <add_cryptsetup+0xbf4>
  402948:	ldr	w0, [x29, #104]
  40294c:	cmp	w0, #0x0
  402950:	cneg	w0, w0, lt  // lt = tstop
  402954:	and	w0, w0, #0xff
  402958:	neg	w19, w0
  40295c:	b	402fe0 <add_cryptsetup+0xbf4>
  402960:	ldr	x8, [x29, #176]
  402964:	ldr	x1, [x29, #152]
  402968:	ldr	x2, [x29, #152]
  40296c:	ldr	x3, [x29, #160]
  402970:	ldr	x4, [x29, #168]
  402974:	ldrb	w0, [x29, #47]
  402978:	cmp	w0, #0x0
  40297c:	b.eq	40298c <add_cryptsetup+0x5a0>  // b.none
  402980:	adrp	x0, 407000 <_fini+0x18c>
  402984:	add	x0, x0, #0x30
  402988:	b	402994 <add_cryptsetup+0x5a8>
  40298c:	adrp	x0, 407000 <_fini+0x18c>
  402990:	add	x0, x0, #0x38
  402994:	ldr	x5, [x29, #160]
  402998:	mov	x7, x5
  40299c:	mov	x6, x0
  4029a0:	mov	x5, x4
  4029a4:	mov	x4, x3
  4029a8:	mov	x3, x2
  4029ac:	mov	x2, x1
  4029b0:	adrp	x0, 407000 <_fini+0x18c>
  4029b4:	add	x1, x0, #0x48
  4029b8:	mov	x0, x8
  4029bc:	bl	401a90 <fprintf@plt>
  4029c0:	ldr	x0, [x29, #176]
  4029c4:	bl	401d80 <fflush_and_check@plt>
  4029c8:	str	w0, [x29, #72]
  4029cc:	ldr	w0, [x29, #72]
  4029d0:	cmp	w0, #0x0
  4029d4:	b.ge	402a68 <add_cryptsetup+0x67c>  // b.tcont
  4029d8:	mov	w0, #0x3                   	// #3
  4029dc:	str	w0, [x29, #88]
  4029e0:	ldr	w0, [x29, #72]
  4029e4:	str	w0, [x29, #92]
  4029e8:	str	wzr, [x29, #96]
  4029ec:	ldr	w0, [x29, #96]
  4029f0:	bl	401da0 <log_get_max_level_realm@plt>
  4029f4:	mov	w1, w0
  4029f8:	ldr	w0, [x29, #88]
  4029fc:	and	w0, w0, #0x7
  402a00:	cmp	w1, w0
  402a04:	b.lt	402a50 <add_cryptsetup+0x664>  // b.tstop
  402a08:	ldr	w0, [x29, #96]
  402a0c:	lsl	w1, w0, #10
  402a10:	ldr	w0, [x29, #88]
  402a14:	orr	w7, w1, w0
  402a18:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402a1c:	add	x1, x0, #0xf1b
  402a20:	ldr	x6, [x29, #288]
  402a24:	adrp	x0, 407000 <_fini+0x18c>
  402a28:	add	x5, x0, #0x260
  402a2c:	adrp	x0, 408000 <_fini+0x118c>
  402a30:	add	x4, x0, #0x130
  402a34:	mov	w3, #0x64                  	// #100
  402a38:	mov	x2, x1
  402a3c:	ldr	w1, [x29, #92]
  402a40:	mov	w0, w7
  402a44:	bl	401c20 <log_internal_realm@plt>
  402a48:	mov	w19, w0
  402a4c:	b	402fe0 <add_cryptsetup+0xbf4>
  402a50:	ldr	w0, [x29, #92]
  402a54:	cmp	w0, #0x0
  402a58:	cneg	w0, w0, lt  // lt = tstop
  402a5c:	and	w0, w0, #0xff
  402a60:	neg	w19, w0
  402a64:	b	402fe0 <add_cryptsetup+0xbf4>
  402a68:	adrp	x0, 419000 <arg_enabled>
  402a6c:	add	x0, x0, #0x18
  402a70:	ldr	x4, [x0]
  402a74:	ldr	x1, [x29, #152]
  402a78:	ldr	x0, [x29, #144]
  402a7c:	mov	x3, x0
  402a80:	adrp	x0, 407000 <_fini+0x18c>
  402a84:	add	x2, x0, #0x280
  402a88:	mov	x0, x4
  402a8c:	bl	401b90 <generator_add_symlink@plt>
  402a90:	str	w0, [x29, #72]
  402a94:	ldr	w0, [x29, #72]
  402a98:	cmp	w0, #0x0
  402a9c:	b.ge	402aa8 <add_cryptsetup+0x6bc>  // b.tcont
  402aa0:	ldr	w19, [x29, #72]
  402aa4:	b	402fe0 <add_cryptsetup+0xbf4>
  402aa8:	ldrb	w0, [x29, #46]
  402aac:	cmp	w0, #0x0
  402ab0:	b.eq	402ce4 <add_cryptsetup+0x8f8>  // b.none
  402ab4:	adrp	x0, 419000 <arg_enabled>
  402ab8:	add	x0, x0, #0x18
  402abc:	ldr	x4, [x0]
  402ac0:	ldr	x0, [x29, #144]
  402ac4:	mov	x3, x0
  402ac8:	adrp	x0, 407000 <_fini+0x18c>
  402acc:	add	x2, x0, #0x288
  402ad0:	adrp	x0, 407000 <_fini+0x18c>
  402ad4:	add	x1, x0, #0x298
  402ad8:	mov	x0, x4
  402adc:	bl	401b90 <generator_add_symlink@plt>
  402ae0:	str	w0, [x29, #72]
  402ae4:	ldr	w0, [x29, #72]
  402ae8:	cmp	w0, #0x0
  402aec:	b.ge	402af8 <add_cryptsetup+0x70c>  // b.tcont
  402af0:	ldr	w19, [x29, #72]
  402af4:	b	402fe0 <add_cryptsetup+0xbf4>
  402af8:	adrp	x0, 407000 <_fini+0x18c>
  402afc:	add	x0, x0, #0x2b0
  402b00:	str	x0, [x29, #344]
  402b04:	ldr	x0, [x29, #136]
  402b08:	str	x0, [x29, #352]
  402b0c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402b10:	add	x0, x0, #0xf58
  402b14:	str	x0, [x29, #360]
  402b18:	str	xzr, [x29, #216]
  402b1c:	str	xzr, [x29, #224]
  402b20:	b	402b54 <add_cryptsetup+0x768>
  402b24:	ldr	x0, [x29, #224]
  402b28:	lsl	x0, x0, #3
  402b2c:	add	x1, x29, #0x158
  402b30:	ldr	x0, [x1, x0]
  402b34:	bl	401d40 <strlen@plt>
  402b38:	mov	x1, x0
  402b3c:	ldr	x0, [x29, #216]
  402b40:	add	x0, x0, x1
  402b44:	str	x0, [x29, #216]
  402b48:	ldr	x0, [x29, #224]
  402b4c:	add	x0, x0, #0x1
  402b50:	str	x0, [x29, #224]
  402b54:	ldr	x0, [x29, #224]
  402b58:	cmp	x0, #0x2
  402b5c:	b.hi	402b78 <add_cryptsetup+0x78c>  // b.pmore
  402b60:	ldr	x0, [x29, #224]
  402b64:	lsl	x0, x0, #3
  402b68:	add	x1, x29, #0x158
  402b6c:	ldr	x0, [x1, x0]
  402b70:	cmp	x0, #0x0
  402b74:	b.ne	402b24 <add_cryptsetup+0x738>  // b.any
  402b78:	ldr	x0, [x29, #216]
  402b7c:	add	x0, x0, #0x1
  402b80:	str	x0, [x29, #296]
  402b84:	ldr	x1, [x29, #296]
  402b88:	mov	x0, #0x1                   	// #1
  402b8c:	bl	402044 <size_multiply_overflow>
  402b90:	and	w0, w0, #0xff
  402b94:	and	x0, x0, #0xff
  402b98:	cmp	x0, #0x0
  402b9c:	b.eq	402bc8 <add_cryptsetup+0x7dc>  // b.none
  402ba0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402ba4:	add	x1, x0, #0xf1b
  402ba8:	adrp	x0, 408000 <_fini+0x118c>
  402bac:	add	x4, x0, #0x120
  402bb0:	mov	w3, #0x71                  	// #113
  402bb4:	mov	x2, x1
  402bb8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402bbc:	add	x1, x0, #0xfb0
  402bc0:	mov	w0, #0x0                   	// #0
  402bc4:	bl	401ad0 <log_assert_failed_realm@plt>
  402bc8:	ldr	x0, [x29, #296]
  402bcc:	cmp	x0, #0x400, lsl #12
  402bd0:	cset	w0, hi  // hi = pmore
  402bd4:	and	w0, w0, #0xff
  402bd8:	and	x0, x0, #0xff
  402bdc:	cmp	x0, #0x0
  402be0:	b.eq	402c0c <add_cryptsetup+0x820>  // b.none
  402be4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402be8:	add	x1, x0, #0xf1b
  402bec:	adrp	x0, 408000 <_fini+0x118c>
  402bf0:	add	x4, x0, #0x120
  402bf4:	mov	w3, #0x71                  	// #113
  402bf8:	mov	x2, x1
  402bfc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402c00:	add	x1, x0, #0xfe0
  402c04:	mov	w0, #0x0                   	// #0
  402c08:	bl	401ad0 <log_assert_failed_realm@plt>
  402c0c:	ldr	x0, [x29, #296]
  402c10:	add	x0, x0, #0xf
  402c14:	lsr	x0, x0, #4
  402c18:	lsl	x0, x0, #4
  402c1c:	sub	sp, sp, x0
  402c20:	mov	x0, sp
  402c24:	add	x0, x0, #0xf
  402c28:	lsr	x0, x0, #4
  402c2c:	lsl	x0, x0, #4
  402c30:	str	x0, [x29, #304]
  402c34:	ldr	x0, [x29, #304]
  402c38:	str	x0, [x29, #208]
  402c3c:	str	xzr, [x29, #224]
  402c40:	b	402c70 <add_cryptsetup+0x884>
  402c44:	ldr	x0, [x29, #224]
  402c48:	lsl	x0, x0, #3
  402c4c:	add	x1, x29, #0x158
  402c50:	ldr	x0, [x1, x0]
  402c54:	mov	x1, x0
  402c58:	ldr	x0, [x29, #208]
  402c5c:	bl	4019f0 <stpcpy@plt>
  402c60:	str	x0, [x29, #208]
  402c64:	ldr	x0, [x29, #224]
  402c68:	add	x0, x0, #0x1
  402c6c:	str	x0, [x29, #224]
  402c70:	ldr	x0, [x29, #224]
  402c74:	cmp	x0, #0x2
  402c78:	b.hi	402c94 <add_cryptsetup+0x8a8>  // b.pmore
  402c7c:	ldr	x0, [x29, #224]
  402c80:	lsl	x0, x0, #3
  402c84:	add	x1, x29, #0x158
  402c88:	ldr	x0, [x1, x0]
  402c8c:	cmp	x0, #0x0
  402c90:	b.ne	402c44 <add_cryptsetup+0x858>  // b.any
  402c94:	ldr	x0, [x29, #208]
  402c98:	strb	wzr, [x0]
  402c9c:	ldr	x0, [x29, #304]
  402ca0:	str	x0, [x29, #312]
  402ca4:	adrp	x0, 419000 <arg_enabled>
  402ca8:	add	x0, x0, #0x18
  402cac:	ldr	x4, [x0]
  402cb0:	ldr	x0, [x29, #144]
  402cb4:	mov	x3, x0
  402cb8:	adrp	x0, 407000 <_fini+0x18c>
  402cbc:	add	x2, x0, #0x288
  402cc0:	ldr	x1, [x29, #312]
  402cc4:	mov	x0, x4
  402cc8:	bl	401b90 <generator_add_symlink@plt>
  402ccc:	str	w0, [x29, #72]
  402cd0:	ldr	w0, [x29, #72]
  402cd4:	cmp	w0, #0x0
  402cd8:	b.ge	402ce4 <add_cryptsetup+0x8f8>  // b.tcont
  402cdc:	ldr	w19, [x29, #72]
  402ce0:	b	402fe0 <add_cryptsetup+0xbf4>
  402ce4:	adrp	x0, 419000 <arg_enabled>
  402ce8:	add	x0, x0, #0x18
  402cec:	ldr	x1, [x0]
  402cf0:	add	x0, x29, #0x188
  402cf4:	sub	x0, x0, #0x30
  402cf8:	str	x1, [x0]
  402cfc:	add	x0, x29, #0x188
  402d00:	sub	x0, x0, #0x30
  402d04:	adrp	x1, 407000 <_fini+0x18c>
  402d08:	add	x1, x1, #0x2c0
  402d0c:	str	x1, [x0, #8]
  402d10:	ldr	x1, [x29, #136]
  402d14:	add	x0, x29, #0x188
  402d18:	sub	x0, x0, #0x30
  402d1c:	str	x1, [x0, #16]
  402d20:	add	x0, x29, #0x188
  402d24:	sub	x0, x0, #0x30
  402d28:	adrp	x1, 407000 <_fini+0x18c>
  402d2c:	add	x1, x1, #0x2d0
  402d30:	str	x1, [x0, #24]
  402d34:	str	xzr, [x29, #240]
  402d38:	str	xzr, [x29, #248]
  402d3c:	b	402d70 <add_cryptsetup+0x984>
  402d40:	add	x0, x29, #0x188
  402d44:	sub	x0, x0, #0x30
  402d48:	ldr	x1, [x29, #248]
  402d4c:	ldr	x0, [x0, x1, lsl #3]
  402d50:	bl	401d40 <strlen@plt>
  402d54:	mov	x1, x0
  402d58:	ldr	x0, [x29, #240]
  402d5c:	add	x0, x0, x1
  402d60:	str	x0, [x29, #240]
  402d64:	ldr	x0, [x29, #248]
  402d68:	add	x0, x0, #0x1
  402d6c:	str	x0, [x29, #248]
  402d70:	ldr	x0, [x29, #248]
  402d74:	cmp	x0, #0x3
  402d78:	b.hi	402d94 <add_cryptsetup+0x9a8>  // b.pmore
  402d7c:	add	x0, x29, #0x188
  402d80:	sub	x0, x0, #0x30
  402d84:	ldr	x1, [x29, #248]
  402d88:	ldr	x0, [x0, x1, lsl #3]
  402d8c:	cmp	x0, #0x0
  402d90:	b.ne	402d40 <add_cryptsetup+0x954>  // b.any
  402d94:	ldr	x0, [x29, #240]
  402d98:	add	x0, x0, #0x1
  402d9c:	str	x0, [x29, #320]
  402da0:	ldr	x1, [x29, #320]
  402da4:	mov	x0, #0x1                   	// #1
  402da8:	bl	402044 <size_multiply_overflow>
  402dac:	and	w0, w0, #0xff
  402db0:	and	x0, x0, #0xff
  402db4:	cmp	x0, #0x0
  402db8:	b.eq	402de4 <add_cryptsetup+0x9f8>  // b.none
  402dbc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402dc0:	add	x1, x0, #0xf1b
  402dc4:	adrp	x0, 408000 <_fini+0x118c>
  402dc8:	add	x4, x0, #0x120
  402dcc:	mov	w3, #0x77                  	// #119
  402dd0:	mov	x2, x1
  402dd4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402dd8:	add	x1, x0, #0xfb0
  402ddc:	mov	w0, #0x0                   	// #0
  402de0:	bl	401ad0 <log_assert_failed_realm@plt>
  402de4:	ldr	x0, [x29, #320]
  402de8:	cmp	x0, #0x400, lsl #12
  402dec:	cset	w0, hi  // hi = pmore
  402df0:	and	w0, w0, #0xff
  402df4:	and	x0, x0, #0xff
  402df8:	cmp	x0, #0x0
  402dfc:	b.eq	402e28 <add_cryptsetup+0xa3c>  // b.none
  402e00:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402e04:	add	x1, x0, #0xf1b
  402e08:	adrp	x0, 408000 <_fini+0x118c>
  402e0c:	add	x4, x0, #0x120
  402e10:	mov	w3, #0x77                  	// #119
  402e14:	mov	x2, x1
  402e18:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402e1c:	add	x1, x0, #0xfe0
  402e20:	mov	w0, #0x0                   	// #0
  402e24:	bl	401ad0 <log_assert_failed_realm@plt>
  402e28:	ldr	x0, [x29, #320]
  402e2c:	add	x0, x0, #0xf
  402e30:	lsr	x0, x0, #4
  402e34:	lsl	x0, x0, #4
  402e38:	sub	sp, sp, x0
  402e3c:	mov	x0, sp
  402e40:	add	x0, x0, #0xf
  402e44:	lsr	x0, x0, #4
  402e48:	lsl	x0, x0, #4
  402e4c:	str	x0, [x29, #328]
  402e50:	ldr	x0, [x29, #328]
  402e54:	str	x0, [x29, #232]
  402e58:	str	xzr, [x29, #248]
  402e5c:	b	402e8c <add_cryptsetup+0xaa0>
  402e60:	add	x0, x29, #0x188
  402e64:	sub	x0, x0, #0x30
  402e68:	ldr	x1, [x29, #248]
  402e6c:	ldr	x0, [x0, x1, lsl #3]
  402e70:	mov	x1, x0
  402e74:	ldr	x0, [x29, #232]
  402e78:	bl	4019f0 <stpcpy@plt>
  402e7c:	str	x0, [x29, #232]
  402e80:	ldr	x0, [x29, #248]
  402e84:	add	x0, x0, #0x1
  402e88:	str	x0, [x29, #248]
  402e8c:	ldr	x0, [x29, #248]
  402e90:	cmp	x0, #0x3
  402e94:	b.hi	402eb0 <add_cryptsetup+0xac4>  // b.pmore
  402e98:	add	x0, x29, #0x188
  402e9c:	sub	x0, x0, #0x30
  402ea0:	ldr	x1, [x29, #248]
  402ea4:	ldr	x0, [x0, x1, lsl #3]
  402ea8:	cmp	x0, #0x0
  402eac:	b.ne	402e60 <add_cryptsetup+0xa74>  // b.any
  402eb0:	ldr	x0, [x29, #232]
  402eb4:	strb	wzr, [x0]
  402eb8:	ldr	x0, [x29, #328]
  402ebc:	str	x0, [x29, #288]
  402ec0:	mov	w1, #0x1ed                 	// #493
  402ec4:	ldr	x0, [x29, #288]
  402ec8:	bl	4019c0 <mkdir_parents_label@plt>
  402ecc:	mov	w2, #0x1                   	// #1
  402ed0:	adrp	x0, 407000 <_fini+0x18c>
  402ed4:	add	x1, x0, #0x2f8
  402ed8:	ldr	x0, [x29, #288]
  402edc:	bl	402240 <write_string_file>
  402ee0:	str	w0, [x29, #72]
  402ee4:	ldr	w0, [x29, #72]
  402ee8:	cmp	w0, #0x0
  402eec:	b.ge	402f7c <add_cryptsetup+0xb90>  // b.tcont
  402ef0:	mov	w0, #0x3                   	// #3
  402ef4:	str	w0, [x29, #76]
  402ef8:	ldr	w0, [x29, #72]
  402efc:	str	w0, [x29, #80]
  402f00:	str	wzr, [x29, #84]
  402f04:	ldr	w0, [x29, #84]
  402f08:	bl	401da0 <log_get_max_level_realm@plt>
  402f0c:	mov	w1, w0
  402f10:	ldr	w0, [x29, #76]
  402f14:	and	w0, w0, #0x7
  402f18:	cmp	w1, w0
  402f1c:	b.lt	402f64 <add_cryptsetup+0xb78>  // b.tstop
  402f20:	ldr	w0, [x29, #84]
  402f24:	lsl	w1, w0, #10
  402f28:	ldr	w0, [x29, #76]
  402f2c:	orr	w6, w1, w0
  402f30:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402f34:	add	x1, x0, #0xf1b
  402f38:	adrp	x0, 407000 <_fini+0x18c>
  402f3c:	add	x5, x0, #0x350
  402f40:	adrp	x0, 408000 <_fini+0x118c>
  402f44:	add	x4, x0, #0x130
  402f48:	mov	w3, #0x7f                  	// #127
  402f4c:	mov	x2, x1
  402f50:	ldr	w1, [x29, #80]
  402f54:	mov	w0, w6
  402f58:	bl	401c20 <log_internal_realm@plt>
  402f5c:	mov	w19, w0
  402f60:	b	402fe0 <add_cryptsetup+0xbf4>
  402f64:	ldr	w0, [x29, #80]
  402f68:	cmp	w0, #0x0
  402f6c:	cneg	w0, w0, lt  // lt = tstop
  402f70:	and	w0, w0, #0xff
  402f74:	neg	w19, w0
  402f78:	b	402fe0 <add_cryptsetup+0xbf4>
  402f7c:	ldr	x0, [x29, #32]
  402f80:	cmp	x0, #0x0
  402f84:	b.eq	402fdc <add_cryptsetup+0xbf0>  // b.none
  402f88:	mov	x2, #0xffffffffffffffff    	// #-1
  402f8c:	ldr	x1, [x29, #56]
  402f90:	adrp	x0, 407000 <_fini+0x18c>
  402f94:	add	x0, x0, #0x378
  402f98:	bl	401bc0 <path_join_internal@plt>
  402f9c:	str	x0, [x29, #336]
  402fa0:	ldr	x0, [x29, #336]
  402fa4:	cmp	x0, #0x0
  402fa8:	b.ne	402fd0 <add_cryptsetup+0xbe4>  // b.any
  402fac:	adrp	x0, 406000 <enumerate_partitions+0x398>
  402fb0:	add	x1, x0, #0xf1b
  402fb4:	adrp	x0, 408000 <_fini+0x118c>
  402fb8:	add	x3, x0, #0x130
  402fbc:	mov	w2, #0x86                  	// #134
  402fc0:	mov	w0, #0x0                   	// #0
  402fc4:	bl	401d70 <log_oom_internal@plt>
  402fc8:	mov	w19, w0
  402fcc:	b	402fe0 <add_cryptsetup+0xbf4>
  402fd0:	ldr	x0, [x29, #32]
  402fd4:	ldr	x1, [x29, #336]
  402fd8:	str	x1, [x0]
  402fdc:	mov	w19, #0x0                   	// #0
  402fe0:	add	x0, x29, #0xb0
  402fe4:	bl	40221c <fclosep>
  402fe8:	add	x0, x29, #0xa8
  402fec:	bl	402020 <freep>
  402ff0:	add	x0, x29, #0xa0
  402ff4:	bl	402020 <freep>
  402ff8:	add	x0, x29, #0x98
  402ffc:	bl	402020 <freep>
  403000:	add	x0, x29, #0x90
  403004:	bl	402020 <freep>
  403008:	add	x0, x29, #0x88
  40300c:	bl	402020 <freep>
  403010:	mov	w1, w19
  403014:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  403018:	add	x0, x0, #0xb90
  40301c:	ldr	x2, [x29, #376]
  403020:	ldr	x0, [x0]
  403024:	eor	x0, x2, x0
  403028:	cmp	x0, #0x0
  40302c:	b.eq	403034 <add_cryptsetup+0xc48>  // b.none
  403030:	bl	401ba0 <__stack_chk_fail@plt>
  403034:	mov	w0, w1
  403038:	mov	sp, x29
  40303c:	ldr	x19, [sp, #16]
  403040:	ldp	x29, x30, [sp], #384
  403044:	ret

0000000000403048 <add_mount>:
  403048:	sub	sp, sp, #0xd0
  40304c:	stp	x29, x30, [sp, #16]
  403050:	add	x29, sp, #0x10
  403054:	stp	x19, x20, [sp, #32]
  403058:	str	x0, [sp, #104]
  40305c:	str	x1, [sp, #96]
  403060:	str	x2, [sp, #88]
  403064:	str	x3, [sp, #80]
  403068:	strb	w4, [sp, #79]
  40306c:	str	x5, [sp, #64]
  403070:	str	x6, [sp, #56]
  403074:	str	x7, [sp, #48]
  403078:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  40307c:	add	x0, x0, #0xb90
  403080:	ldr	x1, [x0]
  403084:	str	x1, [sp, #200]
  403088:	mov	x1, #0x0                   	// #0
  40308c:	str	xzr, [sp, #168]
  403090:	str	xzr, [sp, #176]
  403094:	str	xzr, [sp, #184]
  403098:	str	xzr, [sp, #192]
  40309c:	ldr	x0, [sp, #104]
  4030a0:	cmp	x0, #0x0
  4030a4:	cset	w0, eq  // eq = none
  4030a8:	and	w0, w0, #0xff
  4030ac:	and	x0, x0, #0xff
  4030b0:	cmp	x0, #0x0
  4030b4:	b.eq	4030e0 <add_mount+0x98>  // b.none
  4030b8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4030bc:	add	x1, x0, #0xf1b
  4030c0:	adrp	x0, 408000 <_fini+0x118c>
  4030c4:	add	x4, x0, #0x140
  4030c8:	mov	w3, #0xa0                  	// #160
  4030cc:	mov	x2, x1
  4030d0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4030d4:	add	x1, x0, #0xf48
  4030d8:	mov	w0, #0x0                   	// #0
  4030dc:	bl	401ad0 <log_assert_failed_realm@plt>
  4030e0:	ldr	x0, [sp, #96]
  4030e4:	cmp	x0, #0x0
  4030e8:	cset	w0, eq  // eq = none
  4030ec:	and	w0, w0, #0xff
  4030f0:	and	x0, x0, #0xff
  4030f4:	cmp	x0, #0x0
  4030f8:	b.eq	403124 <add_mount+0xdc>  // b.none
  4030fc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403100:	add	x1, x0, #0xf1b
  403104:	adrp	x0, 408000 <_fini+0x118c>
  403108:	add	x4, x0, #0x140
  40310c:	mov	w3, #0xa1                  	// #161
  403110:	mov	x2, x1
  403114:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403118:	add	x1, x0, #0xf50
  40311c:	mov	w0, #0x0                   	// #0
  403120:	bl	401ad0 <log_assert_failed_realm@plt>
  403124:	ldr	x0, [sp, #88]
  403128:	cmp	x0, #0x0
  40312c:	cset	w0, eq  // eq = none
  403130:	and	w0, w0, #0xff
  403134:	and	x0, x0, #0xff
  403138:	cmp	x0, #0x0
  40313c:	b.eq	403168 <add_mount+0x120>  // b.none
  403140:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403144:	add	x1, x0, #0xf1b
  403148:	adrp	x0, 408000 <_fini+0x118c>
  40314c:	add	x4, x0, #0x140
  403150:	mov	w3, #0xa2                  	// #162
  403154:	mov	x2, x1
  403158:	adrp	x0, 407000 <_fini+0x18c>
  40315c:	add	x1, x0, #0x388
  403160:	mov	w0, #0x0                   	// #0
  403164:	bl	401ad0 <log_assert_failed_realm@plt>
  403168:	ldr	x0, [sp, #56]
  40316c:	cmp	x0, #0x0
  403170:	cset	w0, eq  // eq = none
  403174:	and	w0, w0, #0xff
  403178:	and	x0, x0, #0xff
  40317c:	cmp	x0, #0x0
  403180:	b.eq	4031ac <add_mount+0x164>  // b.none
  403184:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403188:	add	x1, x0, #0xf1b
  40318c:	adrp	x0, 408000 <_fini+0x118c>
  403190:	add	x4, x0, #0x140
  403194:	mov	w3, #0xa3                  	// #163
  403198:	mov	x2, x1
  40319c:	adrp	x0, 407000 <_fini+0x18c>
  4031a0:	add	x1, x0, #0x390
  4031a4:	mov	w0, #0x0                   	// #0
  4031a8:	bl	401ad0 <log_assert_failed_realm@plt>
  4031ac:	mov	w0, #0x7                   	// #7
  4031b0:	str	w0, [sp, #116]
  4031b4:	str	wzr, [sp, #120]
  4031b8:	str	wzr, [sp, #124]
  4031bc:	ldr	w0, [sp, #124]
  4031c0:	bl	401da0 <log_get_max_level_realm@plt>
  4031c4:	mov	w1, w0
  4031c8:	ldr	w0, [sp, #116]
  4031cc:	and	w0, w0, #0x7
  4031d0:	cmp	w1, w0
  4031d4:	b.lt	40322c <add_mount+0x1e4>  // b.tstop
  4031d8:	ldr	w0, [sp, #124]
  4031dc:	lsl	w1, w0, #10
  4031e0:	ldr	w0, [sp, #116]
  4031e4:	orr	w19, w1, w0
  4031e8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4031ec:	add	x20, x0, #0xf1b
  4031f0:	ldr	x0, [sp, #80]
  4031f4:	bl	4020f0 <strna>
  4031f8:	str	x0, [sp]
  4031fc:	ldr	x7, [sp, #96]
  403200:	ldr	x6, [sp, #88]
  403204:	adrp	x0, 407000 <_fini+0x18c>
  403208:	add	x5, x0, #0x3a0
  40320c:	adrp	x0, 408000 <_fini+0x118c>
  403210:	add	x4, x0, #0x150
  403214:	mov	w3, #0xa5                  	// #165
  403218:	mov	x2, x20
  40321c:	ldr	w1, [sp, #120]
  403220:	mov	w0, w19
  403224:	bl	401c20 <log_internal_realm@plt>
  403228:	b	403234 <add_mount+0x1ec>
  40322c:	ldr	w0, [sp, #120]
  403230:	cmp	w0, #0x0
  403234:	adrp	x0, 407000 <_fini+0x18c>
  403238:	add	x1, x0, #0x3b8
  40323c:	ldr	x0, [sp, #80]
  403240:	bl	4020c0 <streq_ptr>
  403244:	and	w0, w0, #0xff
  403248:	cmp	w0, #0x0
  40324c:	b.eq	403290 <add_mount+0x248>  // b.none
  403250:	add	x0, sp, #0xb0
  403254:	mov	x4, x0
  403258:	mov	w3, #0x1                   	// #1
  40325c:	ldrb	w2, [sp, #79]
  403260:	ldr	x1, [sp, #96]
  403264:	ldr	x0, [sp, #104]
  403268:	bl	4023ec <add_cryptsetup>
  40326c:	str	w0, [sp, #128]
  403270:	ldr	w0, [sp, #128]
  403274:	cmp	w0, #0x0
  403278:	b.ge	403284 <add_mount+0x23c>  // b.tcont
  40327c:	ldr	w19, [sp, #128]
  403280:	b	403688 <add_mount+0x640>
  403284:	ldr	x0, [sp, #176]
  403288:	str	x0, [sp, #96]
  40328c:	str	xzr, [sp, #80]
  403290:	add	x0, sp, #0xa8
  403294:	mov	x2, x0
  403298:	adrp	x0, 407000 <_fini+0x18c>
  40329c:	add	x1, x0, #0x3c8
  4032a0:	ldr	x0, [sp, #88]
  4032a4:	bl	401a20 <unit_name_from_path@plt>
  4032a8:	str	w0, [sp, #128]
  4032ac:	ldr	w0, [sp, #128]
  4032b0:	cmp	w0, #0x0
  4032b4:	b.ge	403344 <add_mount+0x2fc>  // b.tcont
  4032b8:	mov	w0, #0x3                   	// #3
  4032bc:	str	w0, [sp, #156]
  4032c0:	ldr	w0, [sp, #128]
  4032c4:	str	w0, [sp, #160]
  4032c8:	str	wzr, [sp, #164]
  4032cc:	ldr	w0, [sp, #164]
  4032d0:	bl	401da0 <log_get_max_level_realm@plt>
  4032d4:	mov	w1, w0
  4032d8:	ldr	w0, [sp, #156]
  4032dc:	and	w0, w0, #0x7
  4032e0:	cmp	w1, w0
  4032e4:	b.lt	40332c <add_mount+0x2e4>  // b.tstop
  4032e8:	ldr	w0, [sp, #164]
  4032ec:	lsl	w1, w0, #10
  4032f0:	ldr	w0, [sp, #156]
  4032f4:	orr	w6, w1, w0
  4032f8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4032fc:	add	x1, x0, #0xf1b
  403300:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403304:	add	x5, x0, #0xf60
  403308:	adrp	x0, 408000 <_fini+0x118c>
  40330c:	add	x4, x0, #0x150
  403310:	mov	w3, #0xb3                  	// #179
  403314:	mov	x2, x1
  403318:	ldr	w1, [sp, #160]
  40331c:	mov	w0, w6
  403320:	bl	401c20 <log_internal_realm@plt>
  403324:	mov	w19, w0
  403328:	b	403688 <add_mount+0x640>
  40332c:	ldr	w0, [sp, #160]
  403330:	cmp	w0, #0x0
  403334:	cneg	w0, w0, lt  // lt = tstop
  403338:	and	w0, w0, #0xff
  40333c:	neg	w19, w0
  403340:	b	403688 <add_mount+0x640>
  403344:	adrp	x0, 419000 <arg_enabled>
  403348:	add	x0, x0, #0x18
  40334c:	ldr	x0, [x0]
  403350:	bl	40218c <empty_to_root>
  403354:	mov	x3, x0
  403358:	ldr	x0, [sp, #168]
  40335c:	mov	x2, #0xffffffffffffffff    	// #-1
  403360:	mov	x1, x0
  403364:	mov	x0, x3
  403368:	bl	401bc0 <path_join_internal@plt>
  40336c:	str	x0, [sp, #184]
  403370:	ldr	x0, [sp, #184]
  403374:	cmp	x0, #0x0
  403378:	b.ne	4033a0 <add_mount+0x358>  // b.any
  40337c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403380:	add	x1, x0, #0xf1b
  403384:	adrp	x0, 408000 <_fini+0x118c>
  403388:	add	x3, x0, #0x150
  40338c:	mov	w2, #0xb7                  	// #183
  403390:	mov	w0, #0x0                   	// #0
  403394:	bl	401d70 <log_oom_internal@plt>
  403398:	mov	w19, w0
  40339c:	b	403688 <add_mount+0x640>
  4033a0:	ldr	x2, [sp, #184]
  4033a4:	adrp	x0, 407000 <_fini+0x18c>
  4033a8:	add	x1, x0, #0x0
  4033ac:	mov	x0, x2
  4033b0:	bl	401d60 <fopen64@plt>
  4033b4:	str	x0, [sp, #192]
  4033b8:	ldr	x0, [sp, #192]
  4033bc:	cmp	x0, #0x0
  4033c0:	b.ne	40345c <add_mount+0x414>  // b.any
  4033c4:	mov	w0, #0x3                   	// #3
  4033c8:	str	w0, [sp, #144]
  4033cc:	bl	401b80 <__errno_location@plt>
  4033d0:	ldr	w0, [x0]
  4033d4:	str	w0, [sp, #148]
  4033d8:	str	wzr, [sp, #152]
  4033dc:	ldr	w0, [sp, #152]
  4033e0:	bl	401da0 <log_get_max_level_realm@plt>
  4033e4:	mov	w1, w0
  4033e8:	ldr	w0, [sp, #144]
  4033ec:	and	w0, w0, #0x7
  4033f0:	cmp	w1, w0
  4033f4:	b.lt	403444 <add_mount+0x3fc>  // b.tstop
  4033f8:	ldr	w0, [sp, #152]
  4033fc:	lsl	w1, w0, #10
  403400:	ldr	w0, [sp, #144]
  403404:	orr	w7, w1, w0
  403408:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40340c:	add	x1, x0, #0xf1b
  403410:	ldr	x0, [sp, #168]
  403414:	mov	x6, x0
  403418:	adrp	x0, 407000 <_fini+0x18c>
  40341c:	add	x5, x0, #0x8
  403420:	adrp	x0, 408000 <_fini+0x118c>
  403424:	add	x4, x0, #0x150
  403428:	mov	w3, #0xbb                  	// #187
  40342c:	mov	x2, x1
  403430:	ldr	w1, [sp, #148]
  403434:	mov	w0, w7
  403438:	bl	401c20 <log_internal_realm@plt>
  40343c:	mov	w19, w0
  403440:	b	403688 <add_mount+0x640>
  403444:	ldr	w0, [sp, #148]
  403448:	cmp	w0, #0x0
  40344c:	cneg	w0, w0, lt  // lt = tstop
  403450:	and	w0, w0, #0xff
  403454:	neg	w19, w0
  403458:	b	403688 <add_mount+0x640>
  40345c:	ldr	x3, [sp, #192]
  403460:	ldr	x2, [sp, #56]
  403464:	adrp	x0, 407000 <_fini+0x18c>
  403468:	add	x1, x0, #0x3d0
  40346c:	mov	x0, x3
  403470:	bl	401a90 <fprintf@plt>
  403474:	ldr	x0, [sp, #48]
  403478:	cmp	x0, #0x0
  40347c:	b.eq	403498 <add_mount+0x450>  // b.none
  403480:	ldr	x3, [sp, #192]
  403484:	ldr	x2, [sp, #48]
  403488:	adrp	x0, 407000 <_fini+0x18c>
  40348c:	add	x1, x0, #0x450
  403490:	mov	x0, x3
  403494:	bl	401a90 <fprintf@plt>
  403498:	ldr	x5, [sp, #192]
  40349c:	adrp	x0, 419000 <arg_enabled>
  4034a0:	add	x0, x0, #0x18
  4034a4:	ldr	x0, [x0]
  4034a8:	ldr	x4, [sp, #80]
  4034ac:	ldr	x3, [sp, #88]
  4034b0:	ldr	x2, [sp, #96]
  4034b4:	mov	x1, x0
  4034b8:	mov	x0, x5
  4034bc:	bl	401c50 <generator_write_fsck_deps@plt>
  4034c0:	str	w0, [sp, #128]
  4034c4:	ldr	w0, [sp, #128]
  4034c8:	cmp	w0, #0x0
  4034cc:	b.ge	4034d8 <add_mount+0x490>  // b.tcont
  4034d0:	ldr	w19, [sp, #128]
  4034d4:	b	403688 <add_mount+0x640>
  4034d8:	ldr	x4, [sp, #192]
  4034dc:	ldr	x3, [sp, #88]
  4034e0:	ldr	x2, [sp, #96]
  4034e4:	adrp	x0, 407000 <_fini+0x18c>
  4034e8:	add	x1, x0, #0x460
  4034ec:	mov	x0, x4
  4034f0:	bl	401a90 <fprintf@plt>
  4034f4:	ldr	x0, [sp, #80]
  4034f8:	cmp	x0, #0x0
  4034fc:	b.eq	403518 <add_mount+0x4d0>  // b.none
  403500:	ldr	x3, [sp, #192]
  403504:	ldr	x2, [sp, #80]
  403508:	adrp	x0, 407000 <_fini+0x18c>
  40350c:	add	x1, x0, #0x480
  403510:	mov	x0, x3
  403514:	bl	401a90 <fprintf@plt>
  403518:	ldr	x0, [sp, #64]
  40351c:	cmp	x0, #0x0
  403520:	b.eq	403564 <add_mount+0x51c>  // b.none
  403524:	ldr	x4, [sp, #192]
  403528:	ldrb	w0, [sp, #79]
  40352c:	cmp	w0, #0x0
  403530:	b.eq	403540 <add_mount+0x4f8>  // b.none
  403534:	adrp	x0, 407000 <_fini+0x18c>
  403538:	add	x0, x0, #0x490
  40353c:	b	403548 <add_mount+0x500>
  403540:	adrp	x0, 407000 <_fini+0x18c>
  403544:	add	x0, x0, #0x498
  403548:	mov	x3, x0
  40354c:	ldr	x2, [sp, #64]
  403550:	adrp	x0, 407000 <_fini+0x18c>
  403554:	add	x1, x0, #0x4a0
  403558:	mov	x0, x4
  40355c:	bl	401a90 <fprintf@plt>
  403560:	b	40359c <add_mount+0x554>
  403564:	ldr	x3, [sp, #192]
  403568:	ldrb	w0, [sp, #79]
  40356c:	cmp	w0, #0x0
  403570:	b.eq	403580 <add_mount+0x538>  // b.none
  403574:	adrp	x0, 407000 <_fini+0x18c>
  403578:	add	x0, x0, #0x490
  40357c:	b	403588 <add_mount+0x540>
  403580:	adrp	x0, 407000 <_fini+0x18c>
  403584:	add	x0, x0, #0x498
  403588:	mov	x2, x0
  40358c:	adrp	x0, 407000 <_fini+0x18c>
  403590:	add	x1, x0, #0x4b0
  403594:	mov	x0, x3
  403598:	bl	401a90 <fprintf@plt>
  40359c:	ldr	x0, [sp, #192]
  4035a0:	bl	401d80 <fflush_and_check@plt>
  4035a4:	str	w0, [sp, #128]
  4035a8:	ldr	w0, [sp, #128]
  4035ac:	cmp	w0, #0x0
  4035b0:	b.ge	403648 <add_mount+0x600>  // b.tcont
  4035b4:	mov	w0, #0x3                   	// #3
  4035b8:	str	w0, [sp, #132]
  4035bc:	ldr	w0, [sp, #128]
  4035c0:	str	w0, [sp, #136]
  4035c4:	str	wzr, [sp, #140]
  4035c8:	ldr	w0, [sp, #140]
  4035cc:	bl	401da0 <log_get_max_level_realm@plt>
  4035d0:	mov	w1, w0
  4035d4:	ldr	w0, [sp, #132]
  4035d8:	and	w0, w0, #0x7
  4035dc:	cmp	w1, w0
  4035e0:	b.lt	403630 <add_mount+0x5e8>  // b.tstop
  4035e4:	ldr	w0, [sp, #140]
  4035e8:	lsl	w1, w0, #10
  4035ec:	ldr	w0, [sp, #132]
  4035f0:	orr	w7, w1, w0
  4035f4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4035f8:	add	x1, x0, #0xf1b
  4035fc:	ldr	x0, [sp, #184]
  403600:	mov	x6, x0
  403604:	adrp	x0, 407000 <_fini+0x18c>
  403608:	add	x5, x0, #0x4c0
  40360c:	adrp	x0, 408000 <_fini+0x118c>
  403610:	add	x4, x0, #0x150
  403614:	mov	w3, #0xdc                  	// #220
  403618:	mov	x2, x1
  40361c:	ldr	w1, [sp, #136]
  403620:	mov	w0, w7
  403624:	bl	401c20 <log_internal_realm@plt>
  403628:	mov	w19, w0
  40362c:	b	403688 <add_mount+0x640>
  403630:	ldr	w0, [sp, #136]
  403634:	cmp	w0, #0x0
  403638:	cneg	w0, w0, lt  // lt = tstop
  40363c:	and	w0, w0, #0xff
  403640:	neg	w19, w0
  403644:	b	403688 <add_mount+0x640>
  403648:	ldr	x0, [sp, #48]
  40364c:	cmp	x0, #0x0
  403650:	b.eq	403684 <add_mount+0x63c>  // b.none
  403654:	adrp	x0, 419000 <arg_enabled>
  403658:	add	x0, x0, #0x18
  40365c:	ldr	x4, [x0]
  403660:	ldr	x0, [sp, #168]
  403664:	mov	x3, x0
  403668:	adrp	x0, 407000 <_fini+0x18c>
  40366c:	add	x2, x0, #0x288
  403670:	ldr	x1, [sp, #48]
  403674:	mov	x0, x4
  403678:	bl	401b90 <generator_add_symlink@plt>
  40367c:	mov	w19, w0
  403680:	b	403688 <add_mount+0x640>
  403684:	mov	w19, #0x0                   	// #0
  403688:	add	x0, sp, #0xc0
  40368c:	bl	40221c <fclosep>
  403690:	add	x0, sp, #0xb8
  403694:	bl	402020 <freep>
  403698:	add	x0, sp, #0xb0
  40369c:	bl	402020 <freep>
  4036a0:	add	x0, sp, #0xa8
  4036a4:	bl	402020 <freep>
  4036a8:	mov	w1, w19
  4036ac:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  4036b0:	add	x0, x0, #0xb90
  4036b4:	ldr	x2, [sp, #200]
  4036b8:	ldr	x0, [x0]
  4036bc:	eor	x0, x2, x0
  4036c0:	cmp	x0, #0x0
  4036c4:	b.eq	4036cc <add_mount+0x684>  // b.none
  4036c8:	bl	401ba0 <__stack_chk_fail@plt>
  4036cc:	mov	w0, w1
  4036d0:	ldp	x19, x20, [sp, #32]
  4036d4:	ldp	x29, x30, [sp, #16]
  4036d8:	add	sp, sp, #0xd0
  4036dc:	ret

00000000004036e0 <path_is_busy>:
  4036e0:	stp	x29, x30, [sp, #-80]!
  4036e4:	mov	x29, sp
  4036e8:	str	x0, [sp, #24]
  4036ec:	mov	w2, #0x400                 	// #1024
  4036f0:	mov	x1, #0x0                   	// #0
  4036f4:	ldr	x0, [sp, #24]
  4036f8:	bl	401c80 <path_is_mount_point@plt>
  4036fc:	str	w0, [sp, #40]
  403700:	ldr	w0, [sp, #40]
  403704:	cmp	w0, #0x0
  403708:	b.le	403714 <path_is_busy+0x34>
  40370c:	mov	w0, #0x0                   	// #0
  403710:	b	4038f4 <path_is_busy+0x214>
  403714:	ldr	w0, [sp, #40]
  403718:	cmn	w0, #0x2
  40371c:	b.ne	403728 <path_is_busy+0x48>  // b.any
  403720:	mov	w0, #0x0                   	// #0
  403724:	b	4038f4 <path_is_busy+0x214>
  403728:	ldr	w0, [sp, #40]
  40372c:	cmp	w0, #0x0
  403730:	b.ge	4037c0 <path_is_busy+0xe0>  // b.tcont
  403734:	mov	w0, #0x4                   	// #4
  403738:	str	w0, [sp, #68]
  40373c:	ldr	w0, [sp, #40]
  403740:	str	w0, [sp, #72]
  403744:	str	wzr, [sp, #76]
  403748:	ldr	w0, [sp, #76]
  40374c:	bl	401da0 <log_get_max_level_realm@plt>
  403750:	mov	w1, w0
  403754:	ldr	w0, [sp, #68]
  403758:	and	w0, w0, #0x7
  40375c:	cmp	w1, w0
  403760:	b.lt	4037a8 <path_is_busy+0xc8>  // b.tstop
  403764:	ldr	w0, [sp, #76]
  403768:	lsl	w1, w0, #10
  40376c:	ldr	w0, [sp, #68]
  403770:	orr	w7, w1, w0
  403774:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403778:	add	x1, x0, #0xf1b
  40377c:	ldr	x6, [sp, #24]
  403780:	adrp	x0, 407000 <_fini+0x18c>
  403784:	add	x5, x0, #0x4e8
  403788:	adrp	x0, 408000 <_fini+0x118c>
  40378c:	add	x4, x0, #0x160
  403790:	mov	w3, #0xf0                  	// #240
  403794:	mov	x2, x1
  403798:	ldr	w1, [sp, #72]
  40379c:	mov	w0, w7
  4037a0:	bl	401c20 <log_internal_realm@plt>
  4037a4:	b	4038f4 <path_is_busy+0x214>
  4037a8:	ldr	w0, [sp, #72]
  4037ac:	cmp	w0, #0x0
  4037b0:	cneg	w0, w0, lt  // lt = tstop
  4037b4:	and	w0, w0, #0xff
  4037b8:	neg	w0, w0
  4037bc:	b	4038f4 <path_is_busy+0x214>
  4037c0:	ldr	x0, [sp, #24]
  4037c4:	bl	4023cc <dir_is_empty>
  4037c8:	str	w0, [sp, #40]
  4037cc:	ldr	w0, [sp, #40]
  4037d0:	cmp	w0, #0x0
  4037d4:	b.ge	403864 <path_is_busy+0x184>  // b.tcont
  4037d8:	mov	w0, #0x4                   	// #4
  4037dc:	str	w0, [sp, #56]
  4037e0:	ldr	w0, [sp, #40]
  4037e4:	str	w0, [sp, #60]
  4037e8:	str	wzr, [sp, #64]
  4037ec:	ldr	w0, [sp, #64]
  4037f0:	bl	401da0 <log_get_max_level_realm@plt>
  4037f4:	mov	w1, w0
  4037f8:	ldr	w0, [sp, #56]
  4037fc:	and	w0, w0, #0x7
  403800:	cmp	w1, w0
  403804:	b.lt	40384c <path_is_busy+0x16c>  // b.tstop
  403808:	ldr	w0, [sp, #64]
  40380c:	lsl	w1, w0, #10
  403810:	ldr	w0, [sp, #56]
  403814:	orr	w7, w1, w0
  403818:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40381c:	add	x1, x0, #0xf1b
  403820:	ldr	x6, [sp, #24]
  403824:	adrp	x0, 407000 <_fini+0x18c>
  403828:	add	x5, x0, #0x518
  40382c:	adrp	x0, 408000 <_fini+0x118c>
  403830:	add	x4, x0, #0x160
  403834:	mov	w3, #0xf5                  	// #245
  403838:	mov	x2, x1
  40383c:	ldr	w1, [sp, #60]
  403840:	mov	w0, w7
  403844:	bl	401c20 <log_internal_realm@plt>
  403848:	b	4038f4 <path_is_busy+0x214>
  40384c:	ldr	w0, [sp, #60]
  403850:	cmp	w0, #0x0
  403854:	cneg	w0, w0, lt  // lt = tstop
  403858:	and	w0, w0, #0xff
  40385c:	neg	w0, w0
  403860:	b	4038f4 <path_is_busy+0x214>
  403864:	ldr	w0, [sp, #40]
  403868:	cmp	w0, #0x0
  40386c:	b.le	403878 <path_is_busy+0x198>
  403870:	mov	w0, #0x0                   	// #0
  403874:	b	4038f4 <path_is_busy+0x214>
  403878:	mov	w0, #0x7                   	// #7
  40387c:	str	w0, [sp, #44]
  403880:	str	wzr, [sp, #48]
  403884:	str	wzr, [sp, #52]
  403888:	ldr	w0, [sp, #52]
  40388c:	bl	401da0 <log_get_max_level_realm@plt>
  403890:	mov	w1, w0
  403894:	ldr	w0, [sp, #44]
  403898:	and	w0, w0, #0x7
  40389c:	cmp	w1, w0
  4038a0:	b.lt	4038e8 <path_is_busy+0x208>  // b.tstop
  4038a4:	ldr	w0, [sp, #52]
  4038a8:	lsl	w1, w0, #10
  4038ac:	ldr	w0, [sp, #44]
  4038b0:	orr	w7, w1, w0
  4038b4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4038b8:	add	x1, x0, #0xf1b
  4038bc:	ldr	x6, [sp, #24]
  4038c0:	adrp	x0, 407000 <_fini+0x18c>
  4038c4:	add	x5, x0, #0x540
  4038c8:	adrp	x0, 408000 <_fini+0x118c>
  4038cc:	add	x4, x0, #0x160
  4038d0:	mov	w3, #0xf9                  	// #249
  4038d4:	mov	x2, x1
  4038d8:	ldr	w1, [sp, #48]
  4038dc:	mov	w0, w7
  4038e0:	bl	401c20 <log_internal_realm@plt>
  4038e4:	b	4038f0 <path_is_busy+0x210>
  4038e8:	ldr	w0, [sp, #48]
  4038ec:	cmp	w0, #0x0
  4038f0:	mov	w0, #0x1                   	// #1
  4038f4:	ldp	x29, x30, [sp], #80
  4038f8:	ret

00000000004038fc <add_partition_mount>:
  4038fc:	stp	x29, x30, [sp, #-64]!
  403900:	mov	x29, sp
  403904:	str	x0, [sp, #40]
  403908:	str	x1, [sp, #32]
  40390c:	str	x2, [sp, #24]
  403910:	str	x3, [sp, #16]
  403914:	ldr	x0, [sp, #40]
  403918:	cmp	x0, #0x0
  40391c:	cset	w0, eq  // eq = none
  403920:	and	w0, w0, #0xff
  403924:	and	x0, x0, #0xff
  403928:	cmp	x0, #0x0
  40392c:	b.eq	403958 <add_partition_mount+0x5c>  // b.none
  403930:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403934:	add	x1, x0, #0xf1b
  403938:	adrp	x0, 408000 <_fini+0x118c>
  40393c:	add	x4, x0, #0x170
  403940:	mov	w3, #0x104                 	// #260
  403944:	mov	x2, x1
  403948:	adrp	x0, 407000 <_fini+0x18c>
  40394c:	add	x1, x0, #0x568
  403950:	mov	w0, #0x0                   	// #0
  403954:	bl	401ad0 <log_assert_failed_realm@plt>
  403958:	ldr	x0, [sp, #24]
  40395c:	bl	4036e0 <path_is_busy>
  403960:	str	w0, [sp, #60]
  403964:	ldr	w0, [sp, #60]
  403968:	cmp	w0, #0x0
  40396c:	b.eq	403988 <add_partition_mount+0x8c>  // b.none
  403970:	ldr	w1, [sp, #60]
  403974:	ldr	w0, [sp, #60]
  403978:	mov	w2, #0x0                   	// #0
  40397c:	cmp	w1, #0x0
  403980:	csel	w0, w0, w2, le
  403984:	b	4039cc <add_partition_mount+0xd0>
  403988:	ldr	x0, [sp, #40]
  40398c:	ldr	x1, [x0, #40]
  403990:	ldr	x0, [sp, #40]
  403994:	ldr	x2, [x0, #32]
  403998:	ldr	x0, [sp, #40]
  40399c:	ldrb	w0, [x0]
  4039a0:	ubfx	x0, x0, #1, #1
  4039a4:	and	w3, w0, #0xff
  4039a8:	adrp	x0, 407000 <_fini+0x18c>
  4039ac:	add	x7, x0, #0x570
  4039b0:	ldr	x6, [sp, #16]
  4039b4:	mov	x5, #0x0                   	// #0
  4039b8:	mov	w4, w3
  4039bc:	mov	x3, x2
  4039c0:	ldr	x2, [sp, #24]
  4039c4:	ldr	x0, [sp, #32]
  4039c8:	bl	403048 <add_mount>
  4039cc:	ldp	x29, x30, [sp], #64
  4039d0:	ret

00000000004039d4 <add_swap>:
  4039d4:	stp	x29, x30, [sp, #-160]!
  4039d8:	mov	x29, sp
  4039dc:	str	x19, [sp, #16]
  4039e0:	str	x0, [sp, #40]
  4039e4:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  4039e8:	add	x0, x0, #0xb90
  4039ec:	ldr	x1, [x0]
  4039f0:	str	x1, [sp, #152]
  4039f4:	mov	x1, #0x0                   	// #0
  4039f8:	str	xzr, [sp, #128]
  4039fc:	str	xzr, [sp, #136]
  403a00:	str	xzr, [sp, #144]
  403a04:	ldr	x0, [sp, #40]
  403a08:	cmp	x0, #0x0
  403a0c:	cset	w0, eq  // eq = none
  403a10:	and	w0, w0, #0xff
  403a14:	and	x0, x0, #0xff
  403a18:	cmp	x0, #0x0
  403a1c:	b.eq	403a48 <add_swap+0x74>  // b.none
  403a20:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403a24:	add	x1, x0, #0xf1b
  403a28:	adrp	x0, 408000 <_fini+0x118c>
  403a2c:	add	x4, x0, #0x188
  403a30:	mov	w3, #0x11a                 	// #282
  403a34:	mov	x2, x1
  403a38:	adrp	x0, 407000 <_fini+0x18c>
  403a3c:	add	x1, x0, #0x580
  403a40:	mov	w0, #0x0                   	// #0
  403a44:	bl	401ad0 <log_assert_failed_realm@plt>
  403a48:	adrp	x0, 407000 <_fini+0x18c>
  403a4c:	add	x0, x0, #0x588
  403a50:	bl	401c00 <fstab_has_fstype@plt>
  403a54:	str	w0, [sp, #52]
  403a58:	ldr	w0, [sp, #52]
  403a5c:	cmp	w0, #0x0
  403a60:	b.ge	403af0 <add_swap+0x11c>  // b.tcont
  403a64:	mov	w0, #0x3                   	// #3
  403a68:	str	w0, [sp, #116]
  403a6c:	ldr	w0, [sp, #52]
  403a70:	str	w0, [sp, #120]
  403a74:	str	wzr, [sp, #124]
  403a78:	ldr	w0, [sp, #124]
  403a7c:	bl	401da0 <log_get_max_level_realm@plt>
  403a80:	mov	w1, w0
  403a84:	ldr	w0, [sp, #116]
  403a88:	and	w0, w0, #0x7
  403a8c:	cmp	w1, w0
  403a90:	b.lt	403ad8 <add_swap+0x104>  // b.tstop
  403a94:	ldr	w0, [sp, #124]
  403a98:	lsl	w1, w0, #10
  403a9c:	ldr	w0, [sp, #116]
  403aa0:	orr	w6, w1, w0
  403aa4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403aa8:	add	x1, x0, #0xf1b
  403aac:	adrp	x0, 407000 <_fini+0x18c>
  403ab0:	add	x5, x0, #0x590
  403ab4:	adrp	x0, 408000 <_fini+0x118c>
  403ab8:	add	x4, x0, #0x198
  403abc:	mov	w3, #0x11f                 	// #287
  403ac0:	mov	x2, x1
  403ac4:	ldr	w1, [sp, #120]
  403ac8:	mov	w0, w6
  403acc:	bl	401c20 <log_internal_realm@plt>
  403ad0:	mov	w19, w0
  403ad4:	b	403eb0 <add_swap+0x4dc>
  403ad8:	ldr	w0, [sp, #120]
  403adc:	cmp	w0, #0x0
  403ae0:	cneg	w0, w0, lt  // lt = tstop
  403ae4:	and	w0, w0, #0xff
  403ae8:	neg	w19, w0
  403aec:	b	403eb0 <add_swap+0x4dc>
  403af0:	ldr	w0, [sp, #52]
  403af4:	cmp	w0, #0x0
  403af8:	b.le	403b78 <add_swap+0x1a4>
  403afc:	mov	w0, #0x7                   	// #7
  403b00:	str	w0, [sp, #104]
  403b04:	str	wzr, [sp, #108]
  403b08:	str	wzr, [sp, #112]
  403b0c:	ldr	w0, [sp, #112]
  403b10:	bl	401da0 <log_get_max_level_realm@plt>
  403b14:	mov	w1, w0
  403b18:	ldr	w0, [sp, #104]
  403b1c:	and	w0, w0, #0x7
  403b20:	cmp	w1, w0
  403b24:	b.lt	403b68 <add_swap+0x194>  // b.tstop
  403b28:	ldr	w0, [sp, #112]
  403b2c:	lsl	w1, w0, #10
  403b30:	ldr	w0, [sp, #104]
  403b34:	orr	w6, w1, w0
  403b38:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403b3c:	add	x1, x0, #0xf1b
  403b40:	adrp	x0, 407000 <_fini+0x18c>
  403b44:	add	x5, x0, #0x5b0
  403b48:	adrp	x0, 408000 <_fini+0x118c>
  403b4c:	add	x4, x0, #0x198
  403b50:	mov	w3, #0x121                 	// #289
  403b54:	mov	x2, x1
  403b58:	ldr	w1, [sp, #108]
  403b5c:	mov	w0, w6
  403b60:	bl	401c20 <log_internal_realm@plt>
  403b64:	b	403b70 <add_swap+0x19c>
  403b68:	ldr	w0, [sp, #108]
  403b6c:	cmp	w0, #0x0
  403b70:	mov	w19, #0x0                   	// #0
  403b74:	b	403eb0 <add_swap+0x4dc>
  403b78:	mov	w0, #0x7                   	// #7
  403b7c:	str	w0, [sp, #56]
  403b80:	str	wzr, [sp, #60]
  403b84:	str	wzr, [sp, #64]
  403b88:	ldr	w0, [sp, #64]
  403b8c:	bl	401da0 <log_get_max_level_realm@plt>
  403b90:	mov	w1, w0
  403b94:	ldr	w0, [sp, #56]
  403b98:	and	w0, w0, #0x7
  403b9c:	cmp	w1, w0
  403ba0:	b.lt	403be8 <add_swap+0x214>  // b.tstop
  403ba4:	ldr	w0, [sp, #64]
  403ba8:	lsl	w1, w0, #10
  403bac:	ldr	w0, [sp, #56]
  403bb0:	orr	w7, w1, w0
  403bb4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403bb8:	add	x1, x0, #0xf1b
  403bbc:	ldr	x6, [sp, #40]
  403bc0:	adrp	x0, 407000 <_fini+0x18c>
  403bc4:	add	x5, x0, #0x5d8
  403bc8:	adrp	x0, 408000 <_fini+0x118c>
  403bcc:	add	x4, x0, #0x198
  403bd0:	mov	w3, #0x125                 	// #293
  403bd4:	mov	x2, x1
  403bd8:	ldr	w1, [sp, #60]
  403bdc:	mov	w0, w7
  403be0:	bl	401c20 <log_internal_realm@plt>
  403be4:	b	403bf0 <add_swap+0x21c>
  403be8:	ldr	w0, [sp, #60]
  403bec:	cmp	w0, #0x0
  403bf0:	add	x0, sp, #0x80
  403bf4:	mov	x2, x0
  403bf8:	adrp	x0, 407000 <_fini+0x18c>
  403bfc:	add	x1, x0, #0x5e8
  403c00:	ldr	x0, [sp, #40]
  403c04:	bl	401a20 <unit_name_from_path@plt>
  403c08:	str	w0, [sp, #52]
  403c0c:	ldr	w0, [sp, #52]
  403c10:	cmp	w0, #0x0
  403c14:	b.ge	403ca4 <add_swap+0x2d0>  // b.tcont
  403c18:	mov	w0, #0x3                   	// #3
  403c1c:	str	w0, [sp, #92]
  403c20:	ldr	w0, [sp, #52]
  403c24:	str	w0, [sp, #96]
  403c28:	str	wzr, [sp, #100]
  403c2c:	ldr	w0, [sp, #100]
  403c30:	bl	401da0 <log_get_max_level_realm@plt>
  403c34:	mov	w1, w0
  403c38:	ldr	w0, [sp, #92]
  403c3c:	and	w0, w0, #0x7
  403c40:	cmp	w1, w0
  403c44:	b.lt	403c8c <add_swap+0x2b8>  // b.tstop
  403c48:	ldr	w0, [sp, #100]
  403c4c:	lsl	w1, w0, #10
  403c50:	ldr	w0, [sp, #92]
  403c54:	orr	w6, w1, w0
  403c58:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403c5c:	add	x1, x0, #0xf1b
  403c60:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403c64:	add	x5, x0, #0xf60
  403c68:	adrp	x0, 408000 <_fini+0x118c>
  403c6c:	add	x4, x0, #0x198
  403c70:	mov	w3, #0x129                 	// #297
  403c74:	mov	x2, x1
  403c78:	ldr	w1, [sp, #96]
  403c7c:	mov	w0, w6
  403c80:	bl	401c20 <log_internal_realm@plt>
  403c84:	mov	w19, w0
  403c88:	b	403eb0 <add_swap+0x4dc>
  403c8c:	ldr	w0, [sp, #96]
  403c90:	cmp	w0, #0x0
  403c94:	cneg	w0, w0, lt  // lt = tstop
  403c98:	and	w0, w0, #0xff
  403c9c:	neg	w19, w0
  403ca0:	b	403eb0 <add_swap+0x4dc>
  403ca4:	adrp	x0, 419000 <arg_enabled>
  403ca8:	add	x0, x0, #0x18
  403cac:	ldr	x0, [x0]
  403cb0:	bl	40218c <empty_to_root>
  403cb4:	mov	x3, x0
  403cb8:	ldr	x0, [sp, #128]
  403cbc:	mov	x2, #0xffffffffffffffff    	// #-1
  403cc0:	mov	x1, x0
  403cc4:	mov	x0, x3
  403cc8:	bl	401bc0 <path_join_internal@plt>
  403ccc:	str	x0, [sp, #136]
  403cd0:	ldr	x0, [sp, #136]
  403cd4:	cmp	x0, #0x0
  403cd8:	b.ne	403d00 <add_swap+0x32c>  // b.any
  403cdc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403ce0:	add	x1, x0, #0xf1b
  403ce4:	adrp	x0, 408000 <_fini+0x118c>
  403ce8:	add	x3, x0, #0x198
  403cec:	mov	w2, #0x12d                 	// #301
  403cf0:	mov	w0, #0x0                   	// #0
  403cf4:	bl	401d70 <log_oom_internal@plt>
  403cf8:	mov	w19, w0
  403cfc:	b	403eb0 <add_swap+0x4dc>
  403d00:	ldr	x2, [sp, #136]
  403d04:	adrp	x0, 407000 <_fini+0x18c>
  403d08:	add	x1, x0, #0x0
  403d0c:	mov	x0, x2
  403d10:	bl	401d60 <fopen64@plt>
  403d14:	str	x0, [sp, #144]
  403d18:	ldr	x0, [sp, #144]
  403d1c:	cmp	x0, #0x0
  403d20:	b.ne	403dbc <add_swap+0x3e8>  // b.any
  403d24:	mov	w0, #0x3                   	// #3
  403d28:	str	w0, [sp, #80]
  403d2c:	bl	401b80 <__errno_location@plt>
  403d30:	ldr	w0, [x0]
  403d34:	str	w0, [sp, #84]
  403d38:	str	wzr, [sp, #88]
  403d3c:	ldr	w0, [sp, #88]
  403d40:	bl	401da0 <log_get_max_level_realm@plt>
  403d44:	mov	w1, w0
  403d48:	ldr	w0, [sp, #80]
  403d4c:	and	w0, w0, #0x7
  403d50:	cmp	w1, w0
  403d54:	b.lt	403da4 <add_swap+0x3d0>  // b.tstop
  403d58:	ldr	w0, [sp, #88]
  403d5c:	lsl	w1, w0, #10
  403d60:	ldr	w0, [sp, #80]
  403d64:	orr	w7, w1, w0
  403d68:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403d6c:	add	x1, x0, #0xf1b
  403d70:	ldr	x0, [sp, #136]
  403d74:	mov	x6, x0
  403d78:	adrp	x0, 407000 <_fini+0x18c>
  403d7c:	add	x5, x0, #0x8
  403d80:	adrp	x0, 408000 <_fini+0x118c>
  403d84:	add	x4, x0, #0x198
  403d88:	mov	w3, #0x131                 	// #305
  403d8c:	mov	x2, x1
  403d90:	ldr	w1, [sp, #84]
  403d94:	mov	w0, w7
  403d98:	bl	401c20 <log_internal_realm@plt>
  403d9c:	mov	w19, w0
  403da0:	b	403eb0 <add_swap+0x4dc>
  403da4:	ldr	w0, [sp, #84]
  403da8:	cmp	w0, #0x0
  403dac:	cneg	w0, w0, lt  // lt = tstop
  403db0:	and	w0, w0, #0xff
  403db4:	neg	w19, w0
  403db8:	b	403eb0 <add_swap+0x4dc>
  403dbc:	ldr	x3, [sp, #144]
  403dc0:	ldr	x2, [sp, #40]
  403dc4:	adrp	x0, 407000 <_fini+0x18c>
  403dc8:	add	x1, x0, #0x5f0
  403dcc:	mov	x0, x3
  403dd0:	bl	401a90 <fprintf@plt>
  403dd4:	ldr	x0, [sp, #144]
  403dd8:	bl	401d80 <fflush_and_check@plt>
  403ddc:	str	w0, [sp, #52]
  403de0:	ldr	w0, [sp, #52]
  403de4:	cmp	w0, #0x0
  403de8:	b.ge	403e80 <add_swap+0x4ac>  // b.tcont
  403dec:	mov	w0, #0x3                   	// #3
  403df0:	str	w0, [sp, #68]
  403df4:	ldr	w0, [sp, #52]
  403df8:	str	w0, [sp, #72]
  403dfc:	str	wzr, [sp, #76]
  403e00:	ldr	w0, [sp, #76]
  403e04:	bl	401da0 <log_get_max_level_realm@plt>
  403e08:	mov	w1, w0
  403e0c:	ldr	w0, [sp, #68]
  403e10:	and	w0, w0, #0x7
  403e14:	cmp	w1, w0
  403e18:	b.lt	403e68 <add_swap+0x494>  // b.tstop
  403e1c:	ldr	w0, [sp, #76]
  403e20:	lsl	w1, w0, #10
  403e24:	ldr	w0, [sp, #68]
  403e28:	orr	w7, w1, w0
  403e2c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403e30:	add	x1, x0, #0xf1b
  403e34:	ldr	x0, [sp, #136]
  403e38:	mov	x6, x0
  403e3c:	adrp	x0, 407000 <_fini+0x18c>
  403e40:	add	x5, x0, #0x4c0
  403e44:	adrp	x0, 408000 <_fini+0x118c>
  403e48:	add	x4, x0, #0x198
  403e4c:	mov	w3, #0x13e                 	// #318
  403e50:	mov	x2, x1
  403e54:	ldr	w1, [sp, #72]
  403e58:	mov	w0, w7
  403e5c:	bl	401c20 <log_internal_realm@plt>
  403e60:	mov	w19, w0
  403e64:	b	403eb0 <add_swap+0x4dc>
  403e68:	ldr	w0, [sp, #72]
  403e6c:	cmp	w0, #0x0
  403e70:	cneg	w0, w0, lt  // lt = tstop
  403e74:	and	w0, w0, #0xff
  403e78:	neg	w19, w0
  403e7c:	b	403eb0 <add_swap+0x4dc>
  403e80:	adrp	x0, 419000 <arg_enabled>
  403e84:	add	x0, x0, #0x18
  403e88:	ldr	x4, [x0]
  403e8c:	ldr	x0, [sp, #128]
  403e90:	mov	x3, x0
  403e94:	adrp	x0, 407000 <_fini+0x18c>
  403e98:	add	x2, x0, #0x280
  403e9c:	adrp	x0, 407000 <_fini+0x18c>
  403ea0:	add	x1, x0, #0x690
  403ea4:	mov	x0, x4
  403ea8:	bl	401b90 <generator_add_symlink@plt>
  403eac:	mov	w19, w0
  403eb0:	add	x0, sp, #0x90
  403eb4:	bl	40221c <fclosep>
  403eb8:	add	x0, sp, #0x88
  403ebc:	bl	402020 <freep>
  403ec0:	add	x0, sp, #0x80
  403ec4:	bl	402020 <freep>
  403ec8:	mov	w1, w19
  403ecc:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  403ed0:	add	x0, x0, #0xb90
  403ed4:	ldr	x2, [sp, #152]
  403ed8:	ldr	x0, [x0]
  403edc:	eor	x0, x2, x0
  403ee0:	cmp	x0, #0x0
  403ee4:	b.eq	403eec <add_swap+0x518>  // b.none
  403ee8:	bl	401ba0 <__stack_chk_fail@plt>
  403eec:	mov	w0, w1
  403ef0:	ldr	x19, [sp, #16]
  403ef4:	ldp	x29, x30, [sp], #160
  403ef8:	ret

0000000000403efc <add_automount>:
  403efc:	stp	x29, x30, [sp, #-304]!
  403f00:	mov	x29, sp
  403f04:	str	x19, [sp, #16]
  403f08:	str	x0, [x29, #88]
  403f0c:	str	x1, [x29, #80]
  403f10:	str	x2, [x29, #72]
  403f14:	str	x3, [x29, #64]
  403f18:	strb	w4, [x29, #63]
  403f1c:	str	x5, [x29, #48]
  403f20:	str	x6, [x29, #40]
  403f24:	str	x7, [x29, #32]
  403f28:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  403f2c:	add	x0, x0, #0xb90
  403f30:	ldr	x1, [x0]
  403f34:	str	x1, [x29, #296]
  403f38:	mov	x1, #0x0                   	// #0
  403f3c:	str	xzr, [x29, #144]
  403f40:	str	xzr, [x29, #152]
  403f44:	adrp	x0, 407000 <_fini+0x18c>
  403f48:	add	x0, x0, #0x6a0
  403f4c:	str	x0, [x29, #160]
  403f50:	ldr	x0, [x29, #88]
  403f54:	cmp	x0, #0x0
  403f58:	cset	w0, eq  // eq = none
  403f5c:	and	w0, w0, #0xff
  403f60:	and	x0, x0, #0xff
  403f64:	cmp	x0, #0x0
  403f68:	b.eq	403f94 <add_automount+0x98>  // b.none
  403f6c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403f70:	add	x1, x0, #0xf1b
  403f74:	adrp	x0, 408000 <_fini+0x118c>
  403f78:	add	x4, x0, #0x1a8
  403f7c:	mov	w3, #0x152                 	// #338
  403f80:	mov	x2, x1
  403f84:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403f88:	add	x1, x0, #0xf48
  403f8c:	mov	w0, #0x0                   	// #0
  403f90:	bl	401ad0 <log_assert_failed_realm@plt>
  403f94:	ldr	x0, [x29, #72]
  403f98:	cmp	x0, #0x0
  403f9c:	cset	w0, eq  // eq = none
  403fa0:	and	w0, w0, #0xff
  403fa4:	and	x0, x0, #0xff
  403fa8:	cmp	x0, #0x0
  403fac:	b.eq	403fd8 <add_automount+0xdc>  // b.none
  403fb0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403fb4:	add	x1, x0, #0xf1b
  403fb8:	adrp	x0, 408000 <_fini+0x118c>
  403fbc:	add	x4, x0, #0x1a8
  403fc0:	mov	w3, #0x153                 	// #339
  403fc4:	mov	x2, x1
  403fc8:	adrp	x0, 407000 <_fini+0x18c>
  403fcc:	add	x1, x0, #0x388
  403fd0:	mov	w0, #0x0                   	// #0
  403fd4:	bl	401ad0 <log_assert_failed_realm@plt>
  403fd8:	ldr	x0, [x29, #40]
  403fdc:	cmp	x0, #0x0
  403fe0:	cset	w0, eq  // eq = none
  403fe4:	and	w0, w0, #0xff
  403fe8:	and	x0, x0, #0xff
  403fec:	cmp	x0, #0x0
  403ff0:	b.eq	40401c <add_automount+0x120>  // b.none
  403ff4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  403ff8:	add	x1, x0, #0xf1b
  403ffc:	adrp	x0, 408000 <_fini+0x118c>
  404000:	add	x4, x0, #0x1a8
  404004:	mov	w3, #0x154                 	// #340
  404008:	mov	x2, x1
  40400c:	adrp	x0, 407000 <_fini+0x18c>
  404010:	add	x1, x0, #0x390
  404014:	mov	w0, #0x0                   	// #0
  404018:	bl	401ad0 <log_assert_failed_realm@plt>
  40401c:	ldr	x0, [x29, #48]
  404020:	cmp	x0, #0x0
  404024:	b.eq	4041d0 <add_automount+0x2d4>  // b.none
  404028:	ldr	x0, [x29, #48]
  40402c:	str	x0, [x29, #272]
  404030:	adrp	x0, 407000 <_fini+0x18c>
  404034:	add	x0, x0, #0x6a8
  404038:	str	x0, [x29, #280]
  40403c:	ldr	x0, [x29, #160]
  404040:	str	x0, [x29, #288]
  404044:	str	xzr, [x29, #176]
  404048:	str	xzr, [x29, #184]
  40404c:	b	404080 <add_automount+0x184>
  404050:	ldr	x0, [x29, #184]
  404054:	lsl	x0, x0, #3
  404058:	add	x1, x29, #0x110
  40405c:	ldr	x0, [x1, x0]
  404060:	bl	401d40 <strlen@plt>
  404064:	mov	x1, x0
  404068:	ldr	x0, [x29, #176]
  40406c:	add	x0, x0, x1
  404070:	str	x0, [x29, #176]
  404074:	ldr	x0, [x29, #184]
  404078:	add	x0, x0, #0x1
  40407c:	str	x0, [x29, #184]
  404080:	ldr	x0, [x29, #184]
  404084:	cmp	x0, #0x2
  404088:	b.hi	4040a4 <add_automount+0x1a8>  // b.pmore
  40408c:	ldr	x0, [x29, #184]
  404090:	lsl	x0, x0, #3
  404094:	add	x1, x29, #0x110
  404098:	ldr	x0, [x1, x0]
  40409c:	cmp	x0, #0x0
  4040a0:	b.ne	404050 <add_automount+0x154>  // b.any
  4040a4:	ldr	x0, [x29, #176]
  4040a8:	add	x0, x0, #0x1
  4040ac:	str	x0, [x29, #216]
  4040b0:	ldr	x1, [x29, #216]
  4040b4:	mov	x0, #0x1                   	// #1
  4040b8:	bl	402044 <size_multiply_overflow>
  4040bc:	and	w0, w0, #0xff
  4040c0:	and	x0, x0, #0xff
  4040c4:	cmp	x0, #0x0
  4040c8:	b.eq	4040f4 <add_automount+0x1f8>  // b.none
  4040cc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4040d0:	add	x1, x0, #0xf1b
  4040d4:	adrp	x0, 408000 <_fini+0x118c>
  4040d8:	add	x4, x0, #0x1a8
  4040dc:	mov	w3, #0x157                 	// #343
  4040e0:	mov	x2, x1
  4040e4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4040e8:	add	x1, x0, #0xfb0
  4040ec:	mov	w0, #0x0                   	// #0
  4040f0:	bl	401ad0 <log_assert_failed_realm@plt>
  4040f4:	ldr	x0, [x29, #216]
  4040f8:	cmp	x0, #0x400, lsl #12
  4040fc:	cset	w0, hi  // hi = pmore
  404100:	and	w0, w0, #0xff
  404104:	and	x0, x0, #0xff
  404108:	cmp	x0, #0x0
  40410c:	b.eq	404138 <add_automount+0x23c>  // b.none
  404110:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404114:	add	x1, x0, #0xf1b
  404118:	adrp	x0, 408000 <_fini+0x118c>
  40411c:	add	x4, x0, #0x1a8
  404120:	mov	w3, #0x157                 	// #343
  404124:	mov	x2, x1
  404128:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40412c:	add	x1, x0, #0xfe0
  404130:	mov	w0, #0x0                   	// #0
  404134:	bl	401ad0 <log_assert_failed_realm@plt>
  404138:	ldr	x0, [x29, #216]
  40413c:	add	x0, x0, #0xf
  404140:	lsr	x0, x0, #4
  404144:	lsl	x0, x0, #4
  404148:	sub	sp, sp, x0
  40414c:	mov	x0, sp
  404150:	add	x0, x0, #0xf
  404154:	lsr	x0, x0, #4
  404158:	lsl	x0, x0, #4
  40415c:	str	x0, [x29, #224]
  404160:	ldr	x0, [x29, #224]
  404164:	str	x0, [x29, #168]
  404168:	str	xzr, [x29, #184]
  40416c:	b	40419c <add_automount+0x2a0>
  404170:	ldr	x0, [x29, #184]
  404174:	lsl	x0, x0, #3
  404178:	add	x1, x29, #0x110
  40417c:	ldr	x0, [x1, x0]
  404180:	mov	x1, x0
  404184:	ldr	x0, [x29, #168]
  404188:	bl	4019f0 <stpcpy@plt>
  40418c:	str	x0, [x29, #168]
  404190:	ldr	x0, [x29, #184]
  404194:	add	x0, x0, #0x1
  404198:	str	x0, [x29, #184]
  40419c:	ldr	x0, [x29, #184]
  4041a0:	cmp	x0, #0x2
  4041a4:	b.hi	4041c0 <add_automount+0x2c4>  // b.pmore
  4041a8:	ldr	x0, [x29, #184]
  4041ac:	lsl	x0, x0, #3
  4041b0:	add	x1, x29, #0x110
  4041b4:	ldr	x0, [x1, x0]
  4041b8:	cmp	x0, #0x0
  4041bc:	b.ne	404170 <add_automount+0x274>  // b.any
  4041c0:	ldr	x0, [x29, #168]
  4041c4:	strb	wzr, [x0]
  4041c8:	ldr	x0, [x29, #224]
  4041cc:	str	x0, [x29, #160]
  4041d0:	mov	x7, #0x0                   	// #0
  4041d4:	ldr	x6, [x29, #40]
  4041d8:	ldr	x5, [x29, #160]
  4041dc:	ldrb	w4, [x29, #63]
  4041e0:	ldr	x3, [x29, #64]
  4041e4:	ldr	x2, [x29, #72]
  4041e8:	ldr	x1, [x29, #80]
  4041ec:	ldr	x0, [x29, #88]
  4041f0:	bl	403048 <add_mount>
  4041f4:	str	w0, [x29, #104]
  4041f8:	ldr	w0, [x29, #104]
  4041fc:	cmp	w0, #0x0
  404200:	b.ge	40420c <add_automount+0x310>  // b.tcont
  404204:	ldr	w19, [x29, #104]
  404208:	b	404654 <add_automount+0x758>
  40420c:	add	x0, x29, #0x90
  404210:	mov	x2, x0
  404214:	adrp	x0, 407000 <_fini+0x18c>
  404218:	add	x1, x0, #0x6b0
  40421c:	ldr	x0, [x29, #72]
  404220:	bl	401a20 <unit_name_from_path@plt>
  404224:	str	w0, [x29, #104]
  404228:	ldr	w0, [x29, #104]
  40422c:	cmp	w0, #0x0
  404230:	b.ge	4042c0 <add_automount+0x3c4>  // b.tcont
  404234:	mov	w0, #0x3                   	// #3
  404238:	str	w0, [x29, #132]
  40423c:	ldr	w0, [x29, #104]
  404240:	str	w0, [x29, #136]
  404244:	str	wzr, [x29, #140]
  404248:	ldr	w0, [x29, #140]
  40424c:	bl	401da0 <log_get_max_level_realm@plt>
  404250:	mov	w1, w0
  404254:	ldr	w0, [x29, #132]
  404258:	and	w0, w0, #0x7
  40425c:	cmp	w1, w0
  404260:	b.lt	4042a8 <add_automount+0x3ac>  // b.tstop
  404264:	ldr	w0, [x29, #140]
  404268:	lsl	w1, w0, #10
  40426c:	ldr	w0, [x29, #132]
  404270:	orr	w6, w1, w0
  404274:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404278:	add	x1, x0, #0xf1b
  40427c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404280:	add	x5, x0, #0xf60
  404284:	adrp	x0, 408000 <_fini+0x118c>
  404288:	add	x4, x0, #0x1b8
  40428c:	mov	w3, #0x166                 	// #358
  404290:	mov	x2, x1
  404294:	ldr	w1, [x29, #136]
  404298:	mov	w0, w6
  40429c:	bl	401c20 <log_internal_realm@plt>
  4042a0:	mov	w19, w0
  4042a4:	b	404654 <add_automount+0x758>
  4042a8:	ldr	w0, [x29, #136]
  4042ac:	cmp	w0, #0x0
  4042b0:	cneg	w0, w0, lt  // lt = tstop
  4042b4:	and	w0, w0, #0xff
  4042b8:	neg	w19, w0
  4042bc:	b	404654 <add_automount+0x758>
  4042c0:	ldr	x0, [x29, #144]
  4042c4:	str	x0, [x29, #192]
  4042c8:	adrp	x0, 419000 <arg_enabled>
  4042cc:	add	x0, x0, #0x18
  4042d0:	ldr	x0, [x0]
  4042d4:	str	x0, [x29, #232]
  4042d8:	b	4042e8 <add_automount+0x3ec>
  4042dc:	ldr	x0, [x29, #192]
  4042e0:	add	x0, x0, #0x1
  4042e4:	str	x0, [x29, #192]
  4042e8:	ldr	x0, [x29, #192]
  4042ec:	ldrb	w0, [x0]
  4042f0:	cmp	w0, #0x2f
  4042f4:	b.ne	40430c <add_automount+0x410>  // b.any
  4042f8:	ldr	x0, [x29, #192]
  4042fc:	add	x0, x0, #0x1
  404300:	ldrb	w0, [x0]
  404304:	cmp	w0, #0x2f
  404308:	b.eq	4042dc <add_automount+0x3e0>  // b.none
  40430c:	ldr	x0, [x29, #232]
  404310:	bl	402114 <isempty>
  404314:	and	w0, w0, #0xff
  404318:	cmp	w0, #0x0
  40431c:	b.eq	40432c <add_automount+0x430>  // b.none
  404320:	ldr	x0, [x29, #192]
  404324:	str	x0, [x29, #200]
  404328:	b	404480 <add_automount+0x584>
  40432c:	ldr	x0, [x29, #232]
  404330:	bl	401d40 <strlen@plt>
  404334:	mov	x19, x0
  404338:	ldr	x0, [x29, #192]
  40433c:	bl	401d40 <strlen@plt>
  404340:	add	x0, x19, x0
  404344:	add	x0, x0, #0x2
  404348:	str	x0, [x29, #240]
  40434c:	ldr	x0, [x29, #240]
  404350:	str	x0, [x29, #248]
  404354:	ldr	x1, [x29, #248]
  404358:	mov	x0, #0x1                   	// #1
  40435c:	bl	402044 <size_multiply_overflow>
  404360:	and	w0, w0, #0xff
  404364:	and	x0, x0, #0xff
  404368:	cmp	x0, #0x0
  40436c:	b.eq	404398 <add_automount+0x49c>  // b.none
  404370:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404374:	add	x1, x0, #0xf1b
  404378:	adrp	x0, 408000 <_fini+0x118c>
  40437c:	add	x4, x0, #0x1a8
  404380:	mov	w3, #0x168                 	// #360
  404384:	mov	x2, x1
  404388:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40438c:	add	x1, x0, #0xfb0
  404390:	mov	w0, #0x0                   	// #0
  404394:	bl	401ad0 <log_assert_failed_realm@plt>
  404398:	ldr	x0, [x29, #248]
  40439c:	cmp	x0, #0x400, lsl #12
  4043a0:	cset	w0, hi  // hi = pmore
  4043a4:	and	w0, w0, #0xff
  4043a8:	and	x0, x0, #0xff
  4043ac:	cmp	x0, #0x0
  4043b0:	b.eq	4043dc <add_automount+0x4e0>  // b.none
  4043b4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4043b8:	add	x1, x0, #0xf1b
  4043bc:	adrp	x0, 408000 <_fini+0x118c>
  4043c0:	add	x4, x0, #0x1a8
  4043c4:	mov	w3, #0x168                 	// #360
  4043c8:	mov	x2, x1
  4043cc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4043d0:	add	x1, x0, #0xfe0
  4043d4:	mov	w0, #0x0                   	// #0
  4043d8:	bl	401ad0 <log_assert_failed_realm@plt>
  4043dc:	ldr	x0, [x29, #248]
  4043e0:	add	x0, x0, #0xf
  4043e4:	lsr	x0, x0, #4
  4043e8:	lsl	x0, x0, #4
  4043ec:	sub	sp, sp, x0
  4043f0:	mov	x0, sp
  4043f4:	add	x0, x0, #0xf
  4043f8:	lsr	x0, x0, #4
  4043fc:	lsl	x0, x0, #4
  404400:	str	x0, [x29, #256]
  404404:	ldr	x1, [x29, #232]
  404408:	ldr	x0, [x29, #256]
  40440c:	bl	4019f0 <stpcpy@plt>
  404410:	str	x0, [x29, #208]
  404414:	b	404424 <add_automount+0x528>
  404418:	ldr	x0, [x29, #208]
  40441c:	sub	x0, x0, #0x1
  404420:	str	x0, [x29, #208]
  404424:	ldr	x1, [x29, #208]
  404428:	ldr	x0, [x29, #256]
  40442c:	cmp	x1, x0
  404430:	b.ls	404448 <add_automount+0x54c>  // b.plast
  404434:	ldr	x0, [x29, #208]
  404438:	sub	x0, x0, #0x1
  40443c:	ldrb	w0, [x0]
  404440:	cmp	w0, #0x2f
  404444:	b.eq	404418 <add_automount+0x51c>  // b.none
  404448:	ldr	x0, [x29, #192]
  40444c:	ldrb	w0, [x0]
  404450:	cmp	w0, #0x2f
  404454:	b.eq	40446c <add_automount+0x570>  // b.none
  404458:	ldr	x0, [x29, #208]
  40445c:	add	x1, x0, #0x1
  404460:	str	x1, [x29, #208]
  404464:	mov	w1, #0x2f                  	// #47
  404468:	strb	w1, [x0]
  40446c:	ldr	x1, [x29, #192]
  404470:	ldr	x0, [x29, #208]
  404474:	bl	401d10 <strcpy@plt>
  404478:	ldr	x0, [x29, #256]
  40447c:	str	x0, [x29, #200]
  404480:	ldr	x0, [x29, #200]
  404484:	str	x0, [x29, #264]
  404488:	adrp	x0, 407000 <_fini+0x18c>
  40448c:	add	x1, x0, #0x0
  404490:	ldr	x0, [x29, #264]
  404494:	bl	401d60 <fopen64@plt>
  404498:	str	x0, [x29, #152]
  40449c:	ldr	x0, [x29, #152]
  4044a0:	cmp	x0, #0x0
  4044a4:	b.ne	404540 <add_automount+0x644>  // b.any
  4044a8:	mov	w0, #0x3                   	// #3
  4044ac:	str	w0, [x29, #120]
  4044b0:	bl	401b80 <__errno_location@plt>
  4044b4:	ldr	w0, [x0]
  4044b8:	str	w0, [x29, #124]
  4044bc:	str	wzr, [x29, #128]
  4044c0:	ldr	w0, [x29, #128]
  4044c4:	bl	401da0 <log_get_max_level_realm@plt>
  4044c8:	mov	w1, w0
  4044cc:	ldr	w0, [x29, #120]
  4044d0:	and	w0, w0, #0x7
  4044d4:	cmp	w1, w0
  4044d8:	b.lt	404528 <add_automount+0x62c>  // b.tstop
  4044dc:	ldr	w0, [x29, #128]
  4044e0:	lsl	w1, w0, #10
  4044e4:	ldr	w0, [x29, #120]
  4044e8:	orr	w7, w1, w0
  4044ec:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4044f0:	add	x1, x0, #0xf1b
  4044f4:	ldr	x0, [x29, #144]
  4044f8:	mov	x6, x0
  4044fc:	adrp	x0, 407000 <_fini+0x18c>
  404500:	add	x5, x0, #0x8
  404504:	adrp	x0, 408000 <_fini+0x118c>
  404508:	add	x4, x0, #0x1b8
  40450c:	mov	w3, #0x16b                 	// #363
  404510:	mov	x2, x1
  404514:	ldr	w1, [x29, #124]
  404518:	mov	w0, w7
  40451c:	bl	401c20 <log_internal_realm@plt>
  404520:	mov	w19, w0
  404524:	b	404654 <add_automount+0x758>
  404528:	ldr	w0, [x29, #124]
  40452c:	cmp	w0, #0x0
  404530:	cneg	w0, w0, lt  // lt = tstop
  404534:	and	w0, w0, #0xff
  404538:	neg	w19, w0
  40453c:	b	404654 <add_automount+0x758>
  404540:	ldr	x5, [x29, #152]
  404544:	ldr	x1, [x29, #32]
  404548:	mov	x0, #0x34db                	// #13531
  40454c:	movk	x0, #0xd7b6, lsl #16
  404550:	movk	x0, #0xde82, lsl #32
  404554:	movk	x0, #0x431b, lsl #48
  404558:	umulh	x0, x1, x0
  40455c:	lsr	x0, x0, #18
  404560:	mov	x4, x0
  404564:	ldr	x3, [x29, #72]
  404568:	ldr	x2, [x29, #40]
  40456c:	adrp	x0, 407000 <_fini+0x18c>
  404570:	add	x1, x0, #0x6c0
  404574:	mov	x0, x5
  404578:	bl	401a90 <fprintf@plt>
  40457c:	ldr	x0, [x29, #152]
  404580:	bl	401d80 <fflush_and_check@plt>
  404584:	str	w0, [x29, #104]
  404588:	ldr	w0, [x29, #104]
  40458c:	cmp	w0, #0x0
  404590:	b.ge	404624 <add_automount+0x728>  // b.tcont
  404594:	mov	w0, #0x3                   	// #3
  404598:	str	w0, [x29, #108]
  40459c:	ldr	w0, [x29, #104]
  4045a0:	str	w0, [x29, #112]
  4045a4:	str	wzr, [x29, #116]
  4045a8:	ldr	w0, [x29, #116]
  4045ac:	bl	401da0 <log_get_max_level_realm@plt>
  4045b0:	mov	w1, w0
  4045b4:	ldr	w0, [x29, #108]
  4045b8:	and	w0, w0, #0x7
  4045bc:	cmp	w1, w0
  4045c0:	b.lt	40460c <add_automount+0x710>  // b.tstop
  4045c4:	ldr	w0, [x29, #116]
  4045c8:	lsl	w1, w0, #10
  4045cc:	ldr	w0, [x29, #108]
  4045d0:	orr	w7, w1, w0
  4045d4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4045d8:	add	x1, x0, #0xf1b
  4045dc:	ldr	x6, [x29, #264]
  4045e0:	adrp	x0, 407000 <_fini+0x18c>
  4045e4:	add	x5, x0, #0x4c0
  4045e8:	adrp	x0, 408000 <_fini+0x118c>
  4045ec:	add	x4, x0, #0x1b8
  4045f0:	mov	w3, #0x17b                 	// #379
  4045f4:	mov	x2, x1
  4045f8:	ldr	w1, [x29, #112]
  4045fc:	mov	w0, w7
  404600:	bl	401c20 <log_internal_realm@plt>
  404604:	mov	w19, w0
  404608:	b	404654 <add_automount+0x758>
  40460c:	ldr	w0, [x29, #112]
  404610:	cmp	w0, #0x0
  404614:	cneg	w0, w0, lt  // lt = tstop
  404618:	and	w0, w0, #0xff
  40461c:	neg	w19, w0
  404620:	b	404654 <add_automount+0x758>
  404624:	adrp	x0, 419000 <arg_enabled>
  404628:	add	x0, x0, #0x18
  40462c:	ldr	x4, [x0]
  404630:	ldr	x0, [x29, #144]
  404634:	mov	x3, x0
  404638:	adrp	x0, 407000 <_fini+0x18c>
  40463c:	add	x2, x0, #0x280
  404640:	adrp	x0, 407000 <_fini+0x18c>
  404644:	add	x1, x0, #0x570
  404648:	mov	x0, x4
  40464c:	bl	401b90 <generator_add_symlink@plt>
  404650:	mov	w19, w0
  404654:	add	x0, x29, #0x98
  404658:	bl	40221c <fclosep>
  40465c:	add	x0, x29, #0x90
  404660:	bl	402020 <freep>
  404664:	mov	w1, w19
  404668:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  40466c:	add	x0, x0, #0xb90
  404670:	ldr	x2, [x29, #296]
  404674:	ldr	x0, [x0]
  404678:	eor	x0, x2, x0
  40467c:	cmp	x0, #0x0
  404680:	b.eq	404688 <add_automount+0x78c>  // b.none
  404684:	bl	401ba0 <__stack_chk_fail@plt>
  404688:	mov	w0, w1
  40468c:	mov	sp, x29
  404690:	ldr	x19, [sp, #16]
  404694:	ldp	x29, x30, [sp], #304
  404698:	ret

000000000040469c <add_xbootldr>:
  40469c:	stp	x29, x30, [sp, #-80]!
  4046a0:	mov	x29, sp
  4046a4:	str	x0, [sp, #24]
  4046a8:	ldr	x0, [sp, #24]
  4046ac:	cmp	x0, #0x0
  4046b0:	cset	w0, eq  // eq = none
  4046b4:	and	w0, w0, #0xff
  4046b8:	and	x0, x0, #0xff
  4046bc:	cmp	x0, #0x0
  4046c0:	b.eq	4046ec <add_xbootldr+0x50>  // b.none
  4046c4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4046c8:	add	x1, x0, #0xf1b
  4046cc:	adrp	x0, 408000 <_fini+0x118c>
  4046d0:	add	x4, x0, #0x1c8
  4046d4:	mov	w3, #0x183                 	// #387
  4046d8:	mov	x2, x1
  4046dc:	adrp	x0, 407000 <_fini+0x18c>
  4046e0:	add	x1, x0, #0x568
  4046e4:	mov	w0, #0x0                   	// #0
  4046e8:	bl	401ad0 <log_assert_failed_realm@plt>
  4046ec:	bl	401af0 <in_initrd@plt>
  4046f0:	and	w0, w0, #0xff
  4046f4:	cmp	w0, #0x0
  4046f8:	b.eq	404778 <add_xbootldr+0xdc>  // b.none
  4046fc:	mov	w0, #0x7                   	// #7
  404700:	str	w0, [sp, #68]
  404704:	str	wzr, [sp, #72]
  404708:	str	wzr, [sp, #76]
  40470c:	ldr	w0, [sp, #76]
  404710:	bl	401da0 <log_get_max_level_realm@plt>
  404714:	mov	w1, w0
  404718:	ldr	w0, [sp, #68]
  40471c:	and	w0, w0, #0x7
  404720:	cmp	w1, w0
  404724:	b.lt	404768 <add_xbootldr+0xcc>  // b.tstop
  404728:	ldr	w0, [sp, #76]
  40472c:	lsl	w1, w0, #10
  404730:	ldr	w0, [sp, #68]
  404734:	orr	w6, w1, w0
  404738:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40473c:	add	x1, x0, #0xf1b
  404740:	adrp	x0, 407000 <_fini+0x18c>
  404744:	add	x5, x0, #0x768
  404748:	adrp	x0, 408000 <_fini+0x118c>
  40474c:	add	x4, x0, #0x1d8
  404750:	mov	w3, #0x186                 	// #390
  404754:	mov	x2, x1
  404758:	ldr	w1, [sp, #72]
  40475c:	mov	w0, w6
  404760:	bl	401c20 <log_internal_realm@plt>
  404764:	b	404770 <add_xbootldr+0xd4>
  404768:	ldr	w0, [sp, #72]
  40476c:	cmp	w0, #0x0
  404770:	mov	w0, #0x0                   	// #0
  404774:	b	404920 <add_xbootldr+0x284>
  404778:	adrp	x0, 407000 <_fini+0x18c>
  40477c:	add	x0, x0, #0x798
  404780:	bl	401aa0 <fstab_is_mount_point@plt>
  404784:	str	w0, [sp, #40]
  404788:	ldr	w0, [sp, #40]
  40478c:	cmp	w0, #0x0
  404790:	b.ge	40481c <add_xbootldr+0x180>  // b.tcont
  404794:	mov	w0, #0x3                   	// #3
  404798:	str	w0, [sp, #56]
  40479c:	ldr	w0, [sp, #40]
  4047a0:	str	w0, [sp, #60]
  4047a4:	str	wzr, [sp, #64]
  4047a8:	ldr	w0, [sp, #64]
  4047ac:	bl	401da0 <log_get_max_level_realm@plt>
  4047b0:	mov	w1, w0
  4047b4:	ldr	w0, [sp, #56]
  4047b8:	and	w0, w0, #0x7
  4047bc:	cmp	w1, w0
  4047c0:	b.lt	404804 <add_xbootldr+0x168>  // b.tstop
  4047c4:	ldr	w0, [sp, #64]
  4047c8:	lsl	w1, w0, #10
  4047cc:	ldr	w0, [sp, #56]
  4047d0:	orr	w6, w1, w0
  4047d4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4047d8:	add	x1, x0, #0xf1b
  4047dc:	adrp	x0, 407000 <_fini+0x18c>
  4047e0:	add	x5, x0, #0x590
  4047e4:	adrp	x0, 408000 <_fini+0x118c>
  4047e8:	add	x4, x0, #0x1d8
  4047ec:	mov	w3, #0x18c                 	// #396
  4047f0:	mov	x2, x1
  4047f4:	ldr	w1, [sp, #60]
  4047f8:	mov	w0, w6
  4047fc:	bl	401c20 <log_internal_realm@plt>
  404800:	b	404920 <add_xbootldr+0x284>
  404804:	ldr	w0, [sp, #60]
  404808:	cmp	w0, #0x0
  40480c:	cneg	w0, w0, lt  // lt = tstop
  404810:	and	w0, w0, #0xff
  404814:	neg	w0, w0
  404818:	b	404920 <add_xbootldr+0x284>
  40481c:	ldr	w0, [sp, #40]
  404820:	cmp	w0, #0x0
  404824:	b.le	4048a4 <add_xbootldr+0x208>
  404828:	mov	w0, #0x7                   	// #7
  40482c:	str	w0, [sp, #44]
  404830:	str	wzr, [sp, #48]
  404834:	str	wzr, [sp, #52]
  404838:	ldr	w0, [sp, #52]
  40483c:	bl	401da0 <log_get_max_level_realm@plt>
  404840:	mov	w1, w0
  404844:	ldr	w0, [sp, #44]
  404848:	and	w0, w0, #0x7
  40484c:	cmp	w1, w0
  404850:	b.lt	404894 <add_xbootldr+0x1f8>  // b.tstop
  404854:	ldr	w0, [sp, #52]
  404858:	lsl	w1, w0, #10
  40485c:	ldr	w0, [sp, #44]
  404860:	orr	w6, w1, w0
  404864:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404868:	add	x1, x0, #0xf1b
  40486c:	adrp	x0, 407000 <_fini+0x18c>
  404870:	add	x5, x0, #0x7a0
  404874:	adrp	x0, 408000 <_fini+0x118c>
  404878:	add	x4, x0, #0x1d8
  40487c:	mov	w3, #0x18e                 	// #398
  404880:	mov	x2, x1
  404884:	ldr	w1, [sp, #48]
  404888:	mov	w0, w6
  40488c:	bl	401c20 <log_internal_realm@plt>
  404890:	b	40489c <add_xbootldr+0x200>
  404894:	ldr	w0, [sp, #48]
  404898:	cmp	w0, #0x0
  40489c:	mov	w0, #0x0                   	// #0
  4048a0:	b	404920 <add_xbootldr+0x284>
  4048a4:	adrp	x0, 407000 <_fini+0x18c>
  4048a8:	add	x0, x0, #0x798
  4048ac:	bl	4036e0 <path_is_busy>
  4048b0:	str	w0, [sp, #40]
  4048b4:	ldr	w0, [sp, #40]
  4048b8:	cmp	w0, #0x0
  4048bc:	b.ge	4048c8 <add_xbootldr+0x22c>  // b.tcont
  4048c0:	ldr	w0, [sp, #40]
  4048c4:	b	404920 <add_xbootldr+0x284>
  4048c8:	ldr	w0, [sp, #40]
  4048cc:	cmp	w0, #0x0
  4048d0:	b.le	4048dc <add_xbootldr+0x240>
  4048d4:	mov	w0, #0x0                   	// #0
  4048d8:	b	404920 <add_xbootldr+0x284>
  4048dc:	ldr	x0, [sp, #24]
  4048e0:	ldr	x1, [x0, #40]
  4048e4:	ldr	x0, [sp, #24]
  4048e8:	ldr	x2, [x0, #32]
  4048ec:	mov	x7, #0xe00                 	// #3584
  4048f0:	movk	x7, #0x727, lsl #16
  4048f4:	adrp	x0, 407000 <_fini+0x18c>
  4048f8:	add	x6, x0, #0x7d8
  4048fc:	adrp	x0, 407000 <_fini+0x18c>
  404900:	add	x5, x0, #0x7f0
  404904:	mov	w4, #0x1                   	// #1
  404908:	mov	x3, x2
  40490c:	adrp	x0, 407000 <_fini+0x18c>
  404910:	add	x2, x0, #0x798
  404914:	adrp	x0, 407000 <_fini+0x18c>
  404918:	add	x0, x0, #0x800
  40491c:	bl	403efc <add_automount>
  404920:	ldp	x29, x30, [sp], #80
  404924:	ret

0000000000404928 <add_esp>:
  404928:	stp	x29, x30, [sp, #-176]!
  40492c:	mov	x29, sp
  404930:	str	x0, [sp, #24]
  404934:	strb	w1, [sp, #23]
  404938:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  40493c:	add	x0, x0, #0xb90
  404940:	ldr	x1, [x0]
  404944:	str	x1, [sp, #168]
  404948:	mov	x1, #0x0                   	// #0
  40494c:	str	xzr, [sp, #136]
  404950:	str	xzr, [sp, #144]
  404954:	ldr	x0, [sp, #24]
  404958:	cmp	x0, #0x0
  40495c:	cset	w0, eq  // eq = none
  404960:	and	w0, w0, #0xff
  404964:	and	x0, x0, #0xff
  404968:	cmp	x0, #0x0
  40496c:	b.eq	404998 <add_esp+0x70>  // b.none
  404970:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404974:	add	x1, x0, #0xf1b
  404978:	adrp	x0, 408000 <_fini+0x118c>
  40497c:	add	x4, x0, #0x1e8
  404980:	mov	w3, #0x1a7                 	// #423
  404984:	mov	x2, x1
  404988:	adrp	x0, 407000 <_fini+0x18c>
  40498c:	add	x1, x0, #0x568
  404990:	mov	w0, #0x0                   	// #0
  404994:	bl	401ad0 <log_assert_failed_realm@plt>
  404998:	bl	401af0 <in_initrd@plt>
  40499c:	and	w0, w0, #0xff
  4049a0:	cmp	w0, #0x0
  4049a4:	b.eq	404a24 <add_esp+0xfc>  // b.none
  4049a8:	mov	w0, #0x7                   	// #7
  4049ac:	str	w0, [sp, #124]
  4049b0:	str	wzr, [sp, #128]
  4049b4:	str	wzr, [sp, #132]
  4049b8:	ldr	w0, [sp, #132]
  4049bc:	bl	401da0 <log_get_max_level_realm@plt>
  4049c0:	mov	w1, w0
  4049c4:	ldr	w0, [sp, #124]
  4049c8:	and	w0, w0, #0x7
  4049cc:	cmp	w1, w0
  4049d0:	b.lt	404a14 <add_esp+0xec>  // b.tstop
  4049d4:	ldr	w0, [sp, #132]
  4049d8:	lsl	w1, w0, #10
  4049dc:	ldr	w0, [sp, #124]
  4049e0:	orr	w6, w1, w0
  4049e4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4049e8:	add	x1, x0, #0xf1b
  4049ec:	adrp	x0, 407000 <_fini+0x18c>
  4049f0:	add	x5, x0, #0x808
  4049f4:	adrp	x0, 408000 <_fini+0x118c>
  4049f8:	add	x4, x0, #0x1f0
  4049fc:	mov	w3, #0x1aa                 	// #426
  404a00:	mov	x2, x1
  404a04:	ldr	w1, [sp, #128]
  404a08:	mov	w0, w6
  404a0c:	bl	401c20 <log_internal_realm@plt>
  404a10:	b	404a1c <add_esp+0xf4>
  404a14:	ldr	w0, [sp, #128]
  404a18:	cmp	w0, #0x0
  404a1c:	mov	w0, #0x0                   	// #0
  404a20:	b	404f1c <add_esp+0x5f4>
  404a24:	mov	w1, #0x0                   	// #0
  404a28:	adrp	x0, 407000 <_fini+0x18c>
  404a2c:	add	x0, x0, #0x828
  404a30:	bl	401b20 <access@plt>
  404a34:	cmp	w0, #0x0
  404a38:	b.ge	404b04 <add_esp+0x1dc>  // b.tcont
  404a3c:	bl	401b80 <__errno_location@plt>
  404a40:	ldr	w0, [x0]
  404a44:	cmp	w0, #0x2
  404a48:	b.eq	404ad8 <add_esp+0x1b0>  // b.none
  404a4c:	mov	w0, #0x3                   	// #3
  404a50:	str	w0, [sp, #36]
  404a54:	bl	401b80 <__errno_location@plt>
  404a58:	ldr	w0, [x0]
  404a5c:	str	w0, [sp, #40]
  404a60:	str	wzr, [sp, #44]
  404a64:	ldr	w0, [sp, #44]
  404a68:	bl	401da0 <log_get_max_level_realm@plt>
  404a6c:	mov	w1, w0
  404a70:	ldr	w0, [sp, #36]
  404a74:	and	w0, w0, #0x7
  404a78:	cmp	w1, w0
  404a7c:	b.lt	404ac0 <add_esp+0x198>  // b.tstop
  404a80:	ldr	w0, [sp, #44]
  404a84:	lsl	w1, w0, #10
  404a88:	ldr	w0, [sp, #36]
  404a8c:	orr	w6, w1, w0
  404a90:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404a94:	add	x1, x0, #0xf1b
  404a98:	adrp	x0, 407000 <_fini+0x18c>
  404a9c:	add	x5, x0, #0x830
  404aa0:	adrp	x0, 408000 <_fini+0x118c>
  404aa4:	add	x4, x0, #0x1f0
  404aa8:	mov	w3, #0x1b2                 	// #434
  404aac:	mov	x2, x1
  404ab0:	ldr	w1, [sp, #40]
  404ab4:	mov	w0, w6
  404ab8:	bl	401c20 <log_internal_realm@plt>
  404abc:	b	404f1c <add_esp+0x5f4>
  404ac0:	ldr	w0, [sp, #40]
  404ac4:	cmp	w0, #0x0
  404ac8:	cneg	w0, w0, lt  // lt = tstop
  404acc:	and	w0, w0, #0xff
  404ad0:	neg	w0, w0
  404ad4:	b	404f1c <add_esp+0x5f4>
  404ad8:	ldrb	w0, [sp, #23]
  404adc:	eor	w0, w0, #0x1
  404ae0:	and	w0, w0, #0xff
  404ae4:	cmp	w0, #0x0
  404ae8:	b.eq	404b04 <add_esp+0x1dc>  // b.none
  404aec:	adrp	x0, 407000 <_fini+0x18c>
  404af0:	add	x0, x0, #0x798
  404af4:	str	x0, [sp, #136]
  404af8:	adrp	x0, 407000 <_fini+0x18c>
  404afc:	add	x0, x0, #0x800
  404b00:	str	x0, [sp, #144]
  404b04:	ldr	x0, [sp, #136]
  404b08:	cmp	x0, #0x0
  404b0c:	b.ne	404b1c <add_esp+0x1f4>  // b.any
  404b10:	adrp	x0, 407000 <_fini+0x18c>
  404b14:	add	x0, x0, #0x828
  404b18:	str	x0, [sp, #136]
  404b1c:	ldr	x0, [sp, #144]
  404b20:	cmp	x0, #0x0
  404b24:	b.ne	404b34 <add_esp+0x20c>  // b.any
  404b28:	adrp	x0, 407000 <_fini+0x18c>
  404b2c:	add	x0, x0, #0x860
  404b30:	str	x0, [sp, #144]
  404b34:	ldr	x0, [sp, #136]
  404b38:	bl	401aa0 <fstab_is_mount_point@plt>
  404b3c:	str	w0, [sp, #48]
  404b40:	ldr	w0, [sp, #48]
  404b44:	cmp	w0, #0x0
  404b48:	b.ge	404bd4 <add_esp+0x2ac>  // b.tcont
  404b4c:	mov	w0, #0x3                   	// #3
  404b50:	str	w0, [sp, #112]
  404b54:	ldr	w0, [sp, #48]
  404b58:	str	w0, [sp, #116]
  404b5c:	str	wzr, [sp, #120]
  404b60:	ldr	w0, [sp, #120]
  404b64:	bl	401da0 <log_get_max_level_realm@plt>
  404b68:	mov	w1, w0
  404b6c:	ldr	w0, [sp, #112]
  404b70:	and	w0, w0, #0x7
  404b74:	cmp	w1, w0
  404b78:	b.lt	404bbc <add_esp+0x294>  // b.tstop
  404b7c:	ldr	w0, [sp, #120]
  404b80:	lsl	w1, w0, #10
  404b84:	ldr	w0, [sp, #112]
  404b88:	orr	w6, w1, w0
  404b8c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404b90:	add	x1, x0, #0xf1b
  404b94:	adrp	x0, 407000 <_fini+0x18c>
  404b98:	add	x5, x0, #0x590
  404b9c:	adrp	x0, 408000 <_fini+0x118c>
  404ba0:	add	x4, x0, #0x1f0
  404ba4:	mov	w3, #0x1c2                 	// #450
  404ba8:	mov	x2, x1
  404bac:	ldr	w1, [sp, #116]
  404bb0:	mov	w0, w6
  404bb4:	bl	401c20 <log_internal_realm@plt>
  404bb8:	b	404f1c <add_esp+0x5f4>
  404bbc:	ldr	w0, [sp, #116]
  404bc0:	cmp	w0, #0x0
  404bc4:	cneg	w0, w0, lt  // lt = tstop
  404bc8:	and	w0, w0, #0xff
  404bcc:	neg	w0, w0
  404bd0:	b	404f1c <add_esp+0x5f4>
  404bd4:	ldr	w0, [sp, #48]
  404bd8:	cmp	w0, #0x0
  404bdc:	b.le	404c60 <add_esp+0x338>
  404be0:	mov	w0, #0x7                   	// #7
  404be4:	str	w0, [sp, #100]
  404be8:	str	wzr, [sp, #104]
  404bec:	str	wzr, [sp, #108]
  404bf0:	ldr	w0, [sp, #108]
  404bf4:	bl	401da0 <log_get_max_level_realm@plt>
  404bf8:	mov	w1, w0
  404bfc:	ldr	w0, [sp, #100]
  404c00:	and	w0, w0, #0x7
  404c04:	cmp	w1, w0
  404c08:	b.lt	404c50 <add_esp+0x328>  // b.tstop
  404c0c:	ldr	w0, [sp, #108]
  404c10:	lsl	w1, w0, #10
  404c14:	ldr	w0, [sp, #100]
  404c18:	orr	w7, w1, w0
  404c1c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404c20:	add	x1, x0, #0xf1b
  404c24:	ldr	x6, [sp, #136]
  404c28:	adrp	x0, 407000 <_fini+0x18c>
  404c2c:	add	x5, x0, #0x868
  404c30:	adrp	x0, 408000 <_fini+0x118c>
  404c34:	add	x4, x0, #0x1f0
  404c38:	mov	w3, #0x1c4                 	// #452
  404c3c:	mov	x2, x1
  404c40:	ldr	w1, [sp, #104]
  404c44:	mov	w0, w7
  404c48:	bl	401c20 <log_internal_realm@plt>
  404c4c:	b	404c58 <add_esp+0x330>
  404c50:	ldr	w0, [sp, #104]
  404c54:	cmp	w0, #0x0
  404c58:	mov	w0, #0x0                   	// #0
  404c5c:	b	404f1c <add_esp+0x5f4>
  404c60:	ldr	x0, [sp, #136]
  404c64:	bl	4036e0 <path_is_busy>
  404c68:	str	w0, [sp, #48]
  404c6c:	ldr	w0, [sp, #48]
  404c70:	cmp	w0, #0x0
  404c74:	b.ge	404c80 <add_esp+0x358>  // b.tcont
  404c78:	ldr	w0, [sp, #48]
  404c7c:	b	404f1c <add_esp+0x5f4>
  404c80:	ldr	w0, [sp, #48]
  404c84:	cmp	w0, #0x0
  404c88:	b.le	404c94 <add_esp+0x36c>
  404c8c:	mov	w0, #0x0                   	// #0
  404c90:	b	404f1c <add_esp+0x5f4>
  404c94:	bl	401b00 <is_efi_boot@plt>
  404c98:	and	w0, w0, #0xff
  404c9c:	cmp	w0, #0x0
  404ca0:	b.eq	404e6c <add_esp+0x544>  // b.none
  404ca4:	add	x0, sp, #0x98
  404ca8:	bl	401d90 <efi_loader_get_device_part_uuid@plt>
  404cac:	str	w0, [sp, #48]
  404cb0:	ldr	w0, [sp, #48]
  404cb4:	cmn	w0, #0x2
  404cb8:	b.ne	404d38 <add_esp+0x410>  // b.any
  404cbc:	mov	w0, #0x7                   	// #7
  404cc0:	str	w0, [sp, #88]
  404cc4:	str	wzr, [sp, #92]
  404cc8:	str	wzr, [sp, #96]
  404ccc:	ldr	w0, [sp, #96]
  404cd0:	bl	401da0 <log_get_max_level_realm@plt>
  404cd4:	mov	w1, w0
  404cd8:	ldr	w0, [sp, #88]
  404cdc:	and	w0, w0, #0x7
  404ce0:	cmp	w1, w0
  404ce4:	b.lt	404d28 <add_esp+0x400>  // b.tstop
  404ce8:	ldr	w0, [sp, #96]
  404cec:	lsl	w1, w0, #10
  404cf0:	ldr	w0, [sp, #88]
  404cf4:	orr	w6, w1, w0
  404cf8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404cfc:	add	x1, x0, #0xf1b
  404d00:	adrp	x0, 407000 <_fini+0x18c>
  404d04:	add	x5, x0, #0x890
  404d08:	adrp	x0, 408000 <_fini+0x118c>
  404d0c:	add	x4, x0, #0x1f0
  404d10:	mov	w3, #0x1d5                 	// #469
  404d14:	mov	x2, x1
  404d18:	ldr	w1, [sp, #92]
  404d1c:	mov	w0, w6
  404d20:	bl	401c20 <log_internal_realm@plt>
  404d24:	b	404d30 <add_esp+0x408>
  404d28:	ldr	w0, [sp, #92]
  404d2c:	cmp	w0, #0x0
  404d30:	mov	w0, #0x0                   	// #0
  404d34:	b	404f1c <add_esp+0x5f4>
  404d38:	ldr	w0, [sp, #48]
  404d3c:	cmp	w0, #0x0
  404d40:	b.ge	404dcc <add_esp+0x4a4>  // b.tcont
  404d44:	mov	w0, #0x3                   	// #3
  404d48:	str	w0, [sp, #76]
  404d4c:	ldr	w0, [sp, #48]
  404d50:	str	w0, [sp, #80]
  404d54:	str	wzr, [sp, #84]
  404d58:	ldr	w0, [sp, #84]
  404d5c:	bl	401da0 <log_get_max_level_realm@plt>
  404d60:	mov	w1, w0
  404d64:	ldr	w0, [sp, #76]
  404d68:	and	w0, w0, #0x7
  404d6c:	cmp	w1, w0
  404d70:	b.lt	404db4 <add_esp+0x48c>  // b.tstop
  404d74:	ldr	w0, [sp, #84]
  404d78:	lsl	w1, w0, #10
  404d7c:	ldr	w0, [sp, #76]
  404d80:	orr	w6, w1, w0
  404d84:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404d88:	add	x1, x0, #0xf1b
  404d8c:	adrp	x0, 407000 <_fini+0x18c>
  404d90:	add	x5, x0, #0x8b0
  404d94:	adrp	x0, 408000 <_fini+0x118c>
  404d98:	add	x4, x0, #0x1f0
  404d9c:	mov	w3, #0x1d9                 	// #473
  404da0:	mov	x2, x1
  404da4:	ldr	w1, [sp, #80]
  404da8:	mov	w0, w6
  404dac:	bl	401c20 <log_internal_realm@plt>
  404db0:	b	404f1c <add_esp+0x5f4>
  404db4:	ldr	w0, [sp, #80]
  404db8:	cmp	w0, #0x0
  404dbc:	cneg	w0, w0, lt  // lt = tstop
  404dc0:	and	w0, w0, #0xff
  404dc4:	neg	w0, w0
  404dc8:	b	404f1c <add_esp+0x5f4>
  404dcc:	ldr	x0, [sp, #24]
  404dd0:	ldp	x2, x3, [sp, #152]
  404dd4:	ldp	x0, x1, [x0, #16]
  404dd8:	bl	401fbc <sd_id128_equal>
  404ddc:	cmp	w0, #0x0
  404de0:	b.ne	404ee0 <add_esp+0x5b8>  // b.any
  404de4:	mov	w0, #0x7                   	// #7
  404de8:	str	w0, [sp, #64]
  404dec:	str	wzr, [sp, #68]
  404df0:	str	wzr, [sp, #72]
  404df4:	ldr	w0, [sp, #72]
  404df8:	bl	401da0 <log_get_max_level_realm@plt>
  404dfc:	mov	w1, w0
  404e00:	ldr	w0, [sp, #64]
  404e04:	and	w0, w0, #0x7
  404e08:	cmp	w1, w0
  404e0c:	b.lt	404e5c <add_esp+0x534>  // b.tstop
  404e10:	ldr	w0, [sp, #72]
  404e14:	lsl	w1, w0, #10
  404e18:	ldr	w0, [sp, #64]
  404e1c:	orr	w7, w1, w0
  404e20:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404e24:	add	x1, x0, #0xf1b
  404e28:	ldr	x0, [sp, #24]
  404e2c:	ldr	x0, [x0, #40]
  404e30:	mov	x6, x0
  404e34:	adrp	x0, 407000 <_fini+0x18c>
  404e38:	add	x5, x0, #0x8d8
  404e3c:	adrp	x0, 408000 <_fini+0x118c>
  404e40:	add	x4, x0, #0x1f0
  404e44:	mov	w3, #0x1dc                 	// #476
  404e48:	mov	x2, x1
  404e4c:	ldr	w1, [sp, #68]
  404e50:	mov	w0, w7
  404e54:	bl	401c20 <log_internal_realm@plt>
  404e58:	b	404e64 <add_esp+0x53c>
  404e5c:	ldr	w0, [sp, #68]
  404e60:	cmp	w0, #0x0
  404e64:	mov	w0, #0x0                   	// #0
  404e68:	b	404f1c <add_esp+0x5f4>
  404e6c:	mov	w0, #0x7                   	// #7
  404e70:	str	w0, [sp, #52]
  404e74:	str	wzr, [sp, #56]
  404e78:	str	wzr, [sp, #60]
  404e7c:	ldr	w0, [sp, #60]
  404e80:	bl	401da0 <log_get_max_level_realm@plt>
  404e84:	mov	w1, w0
  404e88:	ldr	w0, [sp, #52]
  404e8c:	and	w0, w0, #0x7
  404e90:	cmp	w1, w0
  404e94:	b.lt	404ed8 <add_esp+0x5b0>  // b.tstop
  404e98:	ldr	w0, [sp, #60]
  404e9c:	lsl	w1, w0, #10
  404ea0:	ldr	w0, [sp, #52]
  404ea4:	orr	w6, w1, w0
  404ea8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404eac:	add	x1, x0, #0xf1b
  404eb0:	adrp	x0, 407000 <_fini+0x18c>
  404eb4:	add	x5, x0, #0x928
  404eb8:	adrp	x0, 408000 <_fini+0x118c>
  404ebc:	add	x4, x0, #0x1f0
  404ec0:	mov	w3, #0x1e0                 	// #480
  404ec4:	mov	x2, x1
  404ec8:	ldr	w1, [sp, #56]
  404ecc:	mov	w0, w6
  404ed0:	bl	401c20 <log_internal_realm@plt>
  404ed4:	b	404ee0 <add_esp+0x5b8>
  404ed8:	ldr	w0, [sp, #56]
  404edc:	cmp	w0, #0x0
  404ee0:	ldr	x0, [sp, #24]
  404ee4:	ldr	x1, [x0, #40]
  404ee8:	ldr	x0, [sp, #24]
  404eec:	ldr	x2, [x0, #32]
  404ef0:	mov	x7, #0xe00                 	// #3584
  404ef4:	movk	x7, #0x727, lsl #16
  404ef8:	adrp	x0, 407000 <_fini+0x18c>
  404efc:	add	x6, x0, #0x950
  404f00:	adrp	x0, 407000 <_fini+0x18c>
  404f04:	add	x5, x0, #0x7f0
  404f08:	mov	w4, #0x1                   	// #1
  404f0c:	mov	x3, x2
  404f10:	ldr	x2, [sp, #136]
  404f14:	ldr	x0, [sp, #144]
  404f18:	bl	403efc <add_automount>
  404f1c:	mov	w1, w0
  404f20:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  404f24:	add	x0, x0, #0xb90
  404f28:	ldr	x2, [sp, #168]
  404f2c:	ldr	x0, [x0]
  404f30:	eor	x0, x2, x0
  404f34:	cmp	x0, #0x0
  404f38:	b.eq	404f40 <add_esp+0x618>  // b.none
  404f3c:	bl	401ba0 <__stack_chk_fail@plt>
  404f40:	mov	w0, w1
  404f44:	ldp	x29, x30, [sp], #176
  404f48:	ret

0000000000404f4c <add_root_rw>:
  404f4c:	stp	x29, x30, [sp, #-160]!
  404f50:	mov	x29, sp
  404f54:	str	x0, [x29, #24]
  404f58:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  404f5c:	add	x0, x0, #0xb90
  404f60:	ldr	x1, [x0]
  404f64:	str	x1, [x29, #152]
  404f68:	mov	x1, #0x0                   	// #0
  404f6c:	ldr	x0, [x29, #24]
  404f70:	cmp	x0, #0x0
  404f74:	cset	w0, eq  // eq = none
  404f78:	and	w0, w0, #0xff
  404f7c:	and	x0, x0, #0xff
  404f80:	cmp	x0, #0x0
  404f84:	b.eq	404fb0 <add_root_rw+0x64>  // b.none
  404f88:	adrp	x0, 406000 <enumerate_partitions+0x398>
  404f8c:	add	x1, x0, #0xf1b
  404f90:	adrp	x0, 408000 <_fini+0x118c>
  404f94:	add	x4, x0, #0x1f8
  404f98:	mov	w3, #0x1f5                 	// #501
  404f9c:	mov	x2, x1
  404fa0:	adrp	x0, 407000 <_fini+0x18c>
  404fa4:	add	x1, x0, #0x568
  404fa8:	mov	w0, #0x0                   	// #0
  404fac:	bl	401ad0 <log_assert_failed_realm@plt>
  404fb0:	bl	401af0 <in_initrd@plt>
  404fb4:	and	w0, w0, #0xff
  404fb8:	cmp	w0, #0x0
  404fbc:	b.eq	40503c <add_root_rw+0xf0>  // b.none
  404fc0:	mov	w0, #0x7                   	// #7
  404fc4:	str	w0, [x29, #76]
  404fc8:	str	wzr, [x29, #80]
  404fcc:	str	wzr, [x29, #84]
  404fd0:	ldr	w0, [x29, #84]
  404fd4:	bl	401da0 <log_get_max_level_realm@plt>
  404fd8:	mov	w1, w0
  404fdc:	ldr	w0, [x29, #76]
  404fe0:	and	w0, w0, #0x7
  404fe4:	cmp	w1, w0
  404fe8:	b.lt	40502c <add_root_rw+0xe0>  // b.tstop
  404fec:	ldr	w0, [x29, #84]
  404ff0:	lsl	w1, w0, #10
  404ff4:	ldr	w0, [x29, #76]
  404ff8:	orr	w6, w1, w0
  404ffc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405000:	add	x1, x0, #0xf1b
  405004:	adrp	x0, 407000 <_fini+0x18c>
  405008:	add	x5, x0, #0x970
  40500c:	adrp	x0, 408000 <_fini+0x118c>
  405010:	add	x4, x0, #0x208
  405014:	mov	w3, #0x1f8                 	// #504
  405018:	mov	x2, x1
  40501c:	ldr	w1, [x29, #80]
  405020:	mov	w0, w6
  405024:	bl	401c20 <log_internal_realm@plt>
  405028:	b	405034 <add_root_rw+0xe8>
  40502c:	ldr	w0, [x29, #80]
  405030:	cmp	w0, #0x0
  405034:	mov	w0, #0x0                   	// #0
  405038:	b	4053d4 <add_root_rw+0x488>
  40503c:	adrp	x0, 419000 <arg_enabled>
  405040:	add	x0, x0, #0x4
  405044:	ldr	w0, [x0]
  405048:	cmp	w0, #0x0
  40504c:	b.lt	4050cc <add_root_rw+0x180>  // b.tstop
  405050:	mov	w0, #0x7                   	// #7
  405054:	str	w0, [x29, #64]
  405058:	str	wzr, [x29, #68]
  40505c:	str	wzr, [x29, #72]
  405060:	ldr	w0, [x29, #72]
  405064:	bl	401da0 <log_get_max_level_realm@plt>
  405068:	mov	w1, w0
  40506c:	ldr	w0, [x29, #64]
  405070:	and	w0, w0, #0x7
  405074:	cmp	w1, w0
  405078:	b.lt	4050bc <add_root_rw+0x170>  // b.tstop
  40507c:	ldr	w0, [x29, #72]
  405080:	lsl	w1, w0, #10
  405084:	ldr	w0, [x29, #64]
  405088:	orr	w6, w1, w0
  40508c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405090:	add	x1, x0, #0xf1b
  405094:	adrp	x0, 407000 <_fini+0x18c>
  405098:	add	x5, x0, #0x9b8
  40509c:	adrp	x0, 408000 <_fini+0x118c>
  4050a0:	add	x4, x0, #0x208
  4050a4:	mov	w3, #0x1fd                 	// #509
  4050a8:	mov	x2, x1
  4050ac:	ldr	w1, [x29, #68]
  4050b0:	mov	w0, w6
  4050b4:	bl	401c20 <log_internal_realm@plt>
  4050b8:	b	4050c4 <add_root_rw+0x178>
  4050bc:	ldr	w0, [x29, #68]
  4050c0:	cmp	w0, #0x0
  4050c4:	mov	w0, #0x0                   	// #0
  4050c8:	b	4053d4 <add_root_rw+0x488>
  4050cc:	ldr	x0, [x29, #24]
  4050d0:	ldrb	w0, [x0]
  4050d4:	ubfx	x0, x0, #1, #1
  4050d8:	and	w0, w0, #0xff
  4050dc:	eor	w0, w0, #0x1
  4050e0:	and	w0, w0, #0xff
  4050e4:	cmp	w0, #0x0
  4050e8:	b.eq	405168 <add_root_rw+0x21c>  // b.none
  4050ec:	mov	w0, #0x7                   	// #7
  4050f0:	str	w0, [x29, #52]
  4050f4:	str	wzr, [x29, #56]
  4050f8:	str	wzr, [x29, #60]
  4050fc:	ldr	w0, [x29, #60]
  405100:	bl	401da0 <log_get_max_level_realm@plt>
  405104:	mov	w1, w0
  405108:	ldr	w0, [x29, #52]
  40510c:	and	w0, w0, #0x7
  405110:	cmp	w1, w0
  405114:	b.lt	405158 <add_root_rw+0x20c>  // b.tstop
  405118:	ldr	w0, [x29, #60]
  40511c:	lsl	w1, w0, #10
  405120:	ldr	w0, [x29, #52]
  405124:	orr	w6, w1, w0
  405128:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40512c:	add	x1, x0, #0xf1b
  405130:	adrp	x0, 407000 <_fini+0x18c>
  405134:	add	x5, x0, #0xa28
  405138:	adrp	x0, 408000 <_fini+0x118c>
  40513c:	add	x4, x0, #0x208
  405140:	mov	w3, #0x202                 	// #514
  405144:	mov	x2, x1
  405148:	ldr	w1, [x29, #56]
  40514c:	mov	w0, w6
  405150:	bl	401c20 <log_internal_realm@plt>
  405154:	b	405160 <add_root_rw+0x214>
  405158:	ldr	w0, [x29, #56]
  40515c:	cmp	w0, #0x0
  405160:	mov	w0, #0x0                   	// #0
  405164:	b	4053d4 <add_root_rw+0x488>
  405168:	adrp	x0, 419000 <arg_enabled>
  40516c:	add	x0, x0, #0x18
  405170:	ldr	x0, [x0]
  405174:	bl	401d30 <generator_enable_remount_fs_service@plt>
  405178:	adrp	x0, 419000 <arg_enabled>
  40517c:	add	x0, x0, #0x18
  405180:	ldr	x0, [x0]
  405184:	str	x0, [x29, #136]
  405188:	adrp	x0, 407000 <_fini+0x18c>
  40518c:	add	x0, x0, #0xa98
  405190:	str	x0, [x29, #144]
  405194:	str	xzr, [x29, #96]
  405198:	str	xzr, [x29, #104]
  40519c:	b	4051d0 <add_root_rw+0x284>
  4051a0:	ldr	x0, [x29, #104]
  4051a4:	lsl	x0, x0, #3
  4051a8:	add	x1, x29, #0x88
  4051ac:	ldr	x0, [x1, x0]
  4051b0:	bl	401d40 <strlen@plt>
  4051b4:	mov	x1, x0
  4051b8:	ldr	x0, [x29, #96]
  4051bc:	add	x0, x0, x1
  4051c0:	str	x0, [x29, #96]
  4051c4:	ldr	x0, [x29, #104]
  4051c8:	add	x0, x0, #0x1
  4051cc:	str	x0, [x29, #104]
  4051d0:	ldr	x0, [x29, #104]
  4051d4:	cmp	x0, #0x1
  4051d8:	b.hi	4051f4 <add_root_rw+0x2a8>  // b.pmore
  4051dc:	ldr	x0, [x29, #104]
  4051e0:	lsl	x0, x0, #3
  4051e4:	add	x1, x29, #0x88
  4051e8:	ldr	x0, [x1, x0]
  4051ec:	cmp	x0, #0x0
  4051f0:	b.ne	4051a0 <add_root_rw+0x254>  // b.any
  4051f4:	ldr	x0, [x29, #96]
  4051f8:	add	x0, x0, #0x1
  4051fc:	str	x0, [x29, #112]
  405200:	ldr	x1, [x29, #112]
  405204:	mov	x0, #0x1                   	// #1
  405208:	bl	402044 <size_multiply_overflow>
  40520c:	and	w0, w0, #0xff
  405210:	and	x0, x0, #0xff
  405214:	cmp	x0, #0x0
  405218:	b.eq	405244 <add_root_rw+0x2f8>  // b.none
  40521c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405220:	add	x1, x0, #0xf1b
  405224:	adrp	x0, 408000 <_fini+0x118c>
  405228:	add	x4, x0, #0x1f8
  40522c:	mov	w3, #0x208                 	// #520
  405230:	mov	x2, x1
  405234:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405238:	add	x1, x0, #0xfb0
  40523c:	mov	w0, #0x0                   	// #0
  405240:	bl	401ad0 <log_assert_failed_realm@plt>
  405244:	ldr	x0, [x29, #112]
  405248:	cmp	x0, #0x400, lsl #12
  40524c:	cset	w0, hi  // hi = pmore
  405250:	and	w0, w0, #0xff
  405254:	and	x0, x0, #0xff
  405258:	cmp	x0, #0x0
  40525c:	b.eq	405288 <add_root_rw+0x33c>  // b.none
  405260:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405264:	add	x1, x0, #0xf1b
  405268:	adrp	x0, 408000 <_fini+0x118c>
  40526c:	add	x4, x0, #0x1f8
  405270:	mov	w3, #0x208                 	// #520
  405274:	mov	x2, x1
  405278:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40527c:	add	x1, x0, #0xfe0
  405280:	mov	w0, #0x0                   	// #0
  405284:	bl	401ad0 <log_assert_failed_realm@plt>
  405288:	ldr	x0, [x29, #112]
  40528c:	add	x0, x0, #0xf
  405290:	lsr	x0, x0, #4
  405294:	lsl	x0, x0, #4
  405298:	sub	sp, sp, x0
  40529c:	mov	x0, sp
  4052a0:	add	x0, x0, #0xf
  4052a4:	lsr	x0, x0, #4
  4052a8:	lsl	x0, x0, #4
  4052ac:	str	x0, [x29, #120]
  4052b0:	ldr	x0, [x29, #120]
  4052b4:	str	x0, [x29, #88]
  4052b8:	str	xzr, [x29, #104]
  4052bc:	b	4052ec <add_root_rw+0x3a0>
  4052c0:	ldr	x0, [x29, #104]
  4052c4:	lsl	x0, x0, #3
  4052c8:	add	x1, x29, #0x88
  4052cc:	ldr	x0, [x1, x0]
  4052d0:	mov	x1, x0
  4052d4:	ldr	x0, [x29, #88]
  4052d8:	bl	4019f0 <stpcpy@plt>
  4052dc:	str	x0, [x29, #88]
  4052e0:	ldr	x0, [x29, #104]
  4052e4:	add	x0, x0, #0x1
  4052e8:	str	x0, [x29, #104]
  4052ec:	ldr	x0, [x29, #104]
  4052f0:	cmp	x0, #0x1
  4052f4:	b.hi	405310 <add_root_rw+0x3c4>  // b.pmore
  4052f8:	ldr	x0, [x29, #104]
  4052fc:	lsl	x0, x0, #3
  405300:	add	x1, x29, #0x88
  405304:	ldr	x0, [x1, x0]
  405308:	cmp	x0, #0x0
  40530c:	b.ne	4052c0 <add_root_rw+0x374>  // b.any
  405310:	ldr	x0, [x29, #88]
  405314:	strb	wzr, [x0]
  405318:	ldr	x0, [x29, #120]
  40531c:	str	x0, [x29, #128]
  405320:	mov	w2, #0xc1                  	// #193
  405324:	adrp	x0, 407000 <_fini+0x18c>
  405328:	add	x1, x0, #0xad0
  40532c:	ldr	x0, [x29, #128]
  405330:	bl	402240 <write_string_file>
  405334:	str	w0, [x29, #36]
  405338:	ldr	w0, [x29, #36]
  40533c:	cmp	w0, #0x0
  405340:	b.ge	4053d0 <add_root_rw+0x484>  // b.tcont
  405344:	mov	w0, #0x3                   	// #3
  405348:	str	w0, [x29, #40]
  40534c:	ldr	w0, [x29, #36]
  405350:	str	w0, [x29, #44]
  405354:	str	wzr, [x29, #48]
  405358:	ldr	w0, [x29, #48]
  40535c:	bl	401da0 <log_get_max_level_realm@plt>
  405360:	mov	w1, w0
  405364:	ldr	w0, [x29, #40]
  405368:	and	w0, w0, #0x7
  40536c:	cmp	w1, w0
  405370:	b.lt	4053b8 <add_root_rw+0x46c>  // b.tstop
  405374:	ldr	w0, [x29, #48]
  405378:	lsl	w1, w0, #10
  40537c:	ldr	w0, [x29, #40]
  405380:	orr	w7, w1, w0
  405384:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405388:	add	x1, x0, #0xf1b
  40538c:	ldr	x6, [x29, #128]
  405390:	adrp	x0, 407000 <_fini+0x18c>
  405394:	add	x5, x0, #0xb38
  405398:	adrp	x0, 408000 <_fini+0x118c>
  40539c:	add	x4, x0, #0x208
  4053a0:	mov	w3, #0x210                 	// #528
  4053a4:	mov	x2, x1
  4053a8:	ldr	w1, [x29, #44]
  4053ac:	mov	w0, w7
  4053b0:	bl	401c20 <log_internal_realm@plt>
  4053b4:	b	4053d4 <add_root_rw+0x488>
  4053b8:	ldr	w0, [x29, #44]
  4053bc:	cmp	w0, #0x0
  4053c0:	cneg	w0, w0, lt  // lt = tstop
  4053c4:	and	w0, w0, #0xff
  4053c8:	neg	w0, w0
  4053cc:	b	4053d4 <add_root_rw+0x488>
  4053d0:	mov	w0, #0x0                   	// #0
  4053d4:	mov	w1, w0
  4053d8:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  4053dc:	add	x0, x0, #0xb90
  4053e0:	ldr	x2, [x29, #152]
  4053e4:	ldr	x0, [x0]
  4053e8:	eor	x0, x2, x0
  4053ec:	cmp	x0, #0x0
  4053f0:	b.eq	4053f8 <add_root_rw+0x4ac>  // b.none
  4053f4:	bl	401ba0 <__stack_chk_fail@plt>
  4053f8:	mov	w0, w1
  4053fc:	mov	sp, x29
  405400:	ldp	x29, x30, [sp], #160
  405404:	ret

0000000000405408 <open_parent_devno>:
  405408:	sub	sp, sp, #0x130
  40540c:	stp	x29, x30, [sp, #32]
  405410:	add	x29, sp, #0x20
  405414:	stp	x19, x20, [sp, #48]
  405418:	stp	x21, x22, [sp, #64]
  40541c:	str	x0, [sp, #88]
  405420:	str	x1, [sp, #80]
  405424:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  405428:	add	x0, x0, #0xb90
  40542c:	ldr	x1, [x0]
  405430:	str	x1, [sp, #296]
  405434:	mov	x1, #0x0                   	// #0
  405438:	str	xzr, [sp, #184]
  40543c:	ldr	x0, [sp, #80]
  405440:	cmp	x0, #0x0
  405444:	cset	w0, eq  // eq = none
  405448:	and	w0, w0, #0xff
  40544c:	and	x0, x0, #0xff
  405450:	cmp	x0, #0x0
  405454:	b.eq	405480 <open_parent_devno+0x78>  // b.none
  405458:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40545c:	add	x1, x0, #0xf1b
  405460:	adrp	x0, 408000 <_fini+0x118c>
  405464:	add	x4, x0, #0x218
  405468:	mov	w3, #0x21c                 	// #540
  40546c:	mov	x2, x1
  405470:	adrp	x0, 407000 <_fini+0x18c>
  405474:	add	x1, x0, #0xb60
  405478:	mov	w0, #0x0                   	// #0
  40547c:	bl	401ad0 <log_assert_failed_realm@plt>
  405480:	add	x0, sp, #0xb8
  405484:	ldr	x2, [sp, #88]
  405488:	mov	w1, #0x62                  	// #98
  40548c:	bl	401bb0 <sd_device_new_from_devnum@plt>
  405490:	str	w0, [sp, #96]
  405494:	ldr	w0, [sp, #96]
  405498:	cmp	w0, #0x0
  40549c:	b.ge	40552c <open_parent_devno+0x124>  // b.tcont
  4054a0:	mov	w0, #0x7                   	// #7
  4054a4:	str	w0, [sp, #172]
  4054a8:	ldr	w0, [sp, #96]
  4054ac:	str	w0, [sp, #176]
  4054b0:	str	wzr, [sp, #180]
  4054b4:	ldr	w0, [sp, #180]
  4054b8:	bl	401da0 <log_get_max_level_realm@plt>
  4054bc:	mov	w1, w0
  4054c0:	ldr	w0, [sp, #172]
  4054c4:	and	w0, w0, #0x7
  4054c8:	cmp	w1, w0
  4054cc:	b.lt	405514 <open_parent_devno+0x10c>  // b.tstop
  4054d0:	ldr	w0, [sp, #180]
  4054d4:	lsl	w1, w0, #10
  4054d8:	ldr	w0, [sp, #172]
  4054dc:	orr	w6, w1, w0
  4054e0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4054e4:	add	x1, x0, #0xf1b
  4054e8:	adrp	x0, 407000 <_fini+0x18c>
  4054ec:	add	x5, x0, #0xb68
  4054f0:	adrp	x0, 408000 <_fini+0x118c>
  4054f4:	add	x4, x0, #0x230
  4054f8:	mov	w3, #0x220                 	// #544
  4054fc:	mov	x2, x1
  405500:	ldr	w1, [sp, #176]
  405504:	mov	w0, w6
  405508:	bl	401c20 <log_internal_realm@plt>
  40550c:	mov	w19, w0
  405510:	b	405c24 <open_parent_devno+0x81c>
  405514:	ldr	w0, [sp, #176]
  405518:	cmp	w0, #0x0
  40551c:	cneg	w0, w0, lt  // lt = tstop
  405520:	and	w0, w0, #0xff
  405524:	neg	w19, w0
  405528:	b	405c24 <open_parent_devno+0x81c>
  40552c:	ldr	x0, [sp, #184]
  405530:	add	x1, sp, #0xc0
  405534:	bl	401a50 <sd_device_get_devname@plt>
  405538:	cmp	w0, #0x0
  40553c:	b.ge	405640 <open_parent_devno+0x238>  // b.tcont
  405540:	ldr	x0, [sp, #184]
  405544:	add	x1, sp, #0xc0
  405548:	bl	401d50 <sd_device_get_syspath@plt>
  40554c:	str	w0, [sp, #96]
  405550:	ldr	w0, [sp, #96]
  405554:	cmp	w0, #0x0
  405558:	b.ge	405640 <open_parent_devno+0x238>  // b.tcont
  40555c:	str	xzr, [sp, #232]
  405560:	ldr	x0, [sp, #184]
  405564:	str	x0, [sp, #240]
  405568:	mov	w0, #0x7                   	// #7
  40556c:	str	w0, [sp, #100]
  405570:	ldr	w0, [sp, #96]
  405574:	str	w0, [sp, #104]
  405578:	ldr	x0, [sp, #240]
  40557c:	cmp	x0, #0x0
  405580:	b.eq	4055bc <open_parent_devno+0x1b4>  // b.none
  405584:	mov	w0, #0x0                   	// #0
  405588:	bl	401da0 <log_get_max_level_realm@plt>
  40558c:	mov	w1, w0
  405590:	ldr	w0, [sp, #100]
  405594:	cmp	w0, w1
  405598:	cset	w0, le
  40559c:	and	w0, w0, #0xff
  4055a0:	and	x0, x0, #0xff
  4055a4:	cmp	x0, #0x0
  4055a8:	b.eq	4055bc <open_parent_devno+0x1b4>  // b.none
  4055ac:	add	x0, sp, #0xe8
  4055b0:	mov	x1, x0
  4055b4:	ldr	x0, [sp, #240]
  4055b8:	bl	401ac0 <sd_device_get_sysname@plt>
  4055bc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4055c0:	add	x20, x0, #0xf1b
  4055c4:	ldr	x0, [sp, #232]
  4055c8:	cmp	x0, #0x0
  4055cc:	b.eq	4055dc <open_parent_devno+0x1d4>  // b.none
  4055d0:	adrp	x0, 407000 <_fini+0x18c>
  4055d4:	add	x19, x0, #0xb88
  4055d8:	b	4055e0 <open_parent_devno+0x1d8>
  4055dc:	mov	x19, #0x0                   	// #0
  4055e0:	ldr	x21, [sp, #232]
  4055e4:	ldr	x0, [sp, #88]
  4055e8:	bl	401c40 <gnu_dev_major@plt>
  4055ec:	mov	w22, w0
  4055f0:	ldr	x0, [sp, #88]
  4055f4:	bl	401cc0 <gnu_dev_minor@plt>
  4055f8:	str	w0, [sp, #24]
  4055fc:	str	w22, [sp, #16]
  405600:	adrp	x0, 407000 <_fini+0x18c>
  405604:	add	x0, x0, #0xb90
  405608:	str	x0, [sp, #8]
  40560c:	str	xzr, [sp]
  405610:	mov	x7, #0x0                   	// #0
  405614:	mov	x6, x21
  405618:	mov	x5, x19
  40561c:	adrp	x0, 408000 <_fini+0x118c>
  405620:	add	x4, x0, #0x230
  405624:	mov	w3, #0x225                 	// #549
  405628:	mov	x2, x20
  40562c:	ldr	w1, [sp, #104]
  405630:	ldr	w0, [sp, #100]
  405634:	bl	401b70 <log_object_internal@plt>
  405638:	mov	w19, #0x0                   	// #0
  40563c:	b	405c24 <open_parent_devno+0x81c>
  405640:	ldr	x0, [sp, #184]
  405644:	add	x1, sp, #0xd8
  405648:	bl	401db0 <sd_device_get_parent@plt>
  40564c:	str	w0, [sp, #96]
  405650:	ldr	w0, [sp, #96]
  405654:	cmp	w0, #0x0
  405658:	b.ge	405720 <open_parent_devno+0x318>  // b.tcont
  40565c:	str	xzr, [sp, #232]
  405660:	ldr	x0, [sp, #184]
  405664:	str	x0, [sp, #288]
  405668:	mov	w0, #0x7                   	// #7
  40566c:	str	w0, [sp, #164]
  405670:	ldr	w0, [sp, #96]
  405674:	str	w0, [sp, #168]
  405678:	ldr	x0, [sp, #288]
  40567c:	cmp	x0, #0x0
  405680:	b.eq	4056bc <open_parent_devno+0x2b4>  // b.none
  405684:	mov	w0, #0x0                   	// #0
  405688:	bl	401da0 <log_get_max_level_realm@plt>
  40568c:	mov	w1, w0
  405690:	ldr	w0, [sp, #164]
  405694:	cmp	w0, w1
  405698:	cset	w0, le
  40569c:	and	w0, w0, #0xff
  4056a0:	and	x0, x0, #0xff
  4056a4:	cmp	x0, #0x0
  4056a8:	b.eq	4056bc <open_parent_devno+0x2b4>  // b.none
  4056ac:	add	x0, sp, #0xe8
  4056b0:	mov	x1, x0
  4056b4:	ldr	x0, [sp, #288]
  4056b8:	bl	401ac0 <sd_device_get_sysname@plt>
  4056bc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4056c0:	add	x2, x0, #0xf1b
  4056c4:	ldr	x0, [sp, #232]
  4056c8:	cmp	x0, #0x0
  4056cc:	b.eq	4056dc <open_parent_devno+0x2d4>  // b.none
  4056d0:	adrp	x0, 407000 <_fini+0x18c>
  4056d4:	add	x0, x0, #0xb88
  4056d8:	b	4056e0 <open_parent_devno+0x2d8>
  4056dc:	mov	x0, #0x0                   	// #0
  4056e0:	ldr	x3, [sp, #232]
  4056e4:	adrp	x1, 407000 <_fini+0x18c>
  4056e8:	add	x1, x1, #0xbc0
  4056ec:	str	x1, [sp, #8]
  4056f0:	str	xzr, [sp]
  4056f4:	mov	x7, #0x0                   	// #0
  4056f8:	mov	x6, x3
  4056fc:	mov	x5, x0
  405700:	adrp	x0, 408000 <_fini+0x118c>
  405704:	add	x4, x0, #0x230
  405708:	mov	w3, #0x22c                 	// #556
  40570c:	ldr	w1, [sp, #168]
  405710:	ldr	w0, [sp, #164]
  405714:	bl	401b70 <log_object_internal@plt>
  405718:	mov	w19, #0x0                   	// #0
  40571c:	b	405c24 <open_parent_devno+0x81c>
  405720:	ldr	x0, [sp, #216]
  405724:	add	x1, sp, #0xc8
  405728:	bl	4019d0 <sd_device_get_devtype@plt>
  40572c:	str	w0, [sp, #96]
  405730:	ldr	w0, [sp, #96]
  405734:	cmp	w0, #0x0
  405738:	b.ge	405800 <open_parent_devno+0x3f8>  // b.tcont
  40573c:	str	xzr, [sp, #232]
  405740:	ldr	x0, [sp, #216]
  405744:	str	x0, [sp, #280]
  405748:	mov	w0, #0x7                   	// #7
  40574c:	str	w0, [sp, #156]
  405750:	ldr	w0, [sp, #96]
  405754:	str	w0, [sp, #160]
  405758:	ldr	x0, [sp, #280]
  40575c:	cmp	x0, #0x0
  405760:	b.eq	40579c <open_parent_devno+0x394>  // b.none
  405764:	mov	w0, #0x0                   	// #0
  405768:	bl	401da0 <log_get_max_level_realm@plt>
  40576c:	mov	w1, w0
  405770:	ldr	w0, [sp, #156]
  405774:	cmp	w0, w1
  405778:	cset	w0, le
  40577c:	and	w0, w0, #0xff
  405780:	and	x0, x0, #0xff
  405784:	cmp	x0, #0x0
  405788:	b.eq	40579c <open_parent_devno+0x394>  // b.none
  40578c:	add	x0, sp, #0xe8
  405790:	mov	x1, x0
  405794:	ldr	x0, [sp, #280]
  405798:	bl	401ac0 <sd_device_get_sysname@plt>
  40579c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4057a0:	add	x2, x0, #0xf1b
  4057a4:	ldr	x0, [sp, #232]
  4057a8:	cmp	x0, #0x0
  4057ac:	b.eq	4057bc <open_parent_devno+0x3b4>  // b.none
  4057b0:	adrp	x0, 407000 <_fini+0x18c>
  4057b4:	add	x0, x0, #0xb88
  4057b8:	b	4057c0 <open_parent_devno+0x3b8>
  4057bc:	mov	x0, #0x0                   	// #0
  4057c0:	ldr	x3, [sp, #232]
  4057c4:	adrp	x1, 407000 <_fini+0x18c>
  4057c8:	add	x1, x1, #0xbe8
  4057cc:	str	x1, [sp, #8]
  4057d0:	str	xzr, [sp]
  4057d4:	mov	x7, #0x0                   	// #0
  4057d8:	mov	x6, x3
  4057dc:	mov	x5, x0
  4057e0:	adrp	x0, 408000 <_fini+0x118c>
  4057e4:	add	x4, x0, #0x230
  4057e8:	mov	w3, #0x233                 	// #563
  4057ec:	ldr	w1, [sp, #160]
  4057f0:	ldr	w0, [sp, #156]
  4057f4:	bl	401b70 <log_object_internal@plt>
  4057f8:	mov	w19, #0x0                   	// #0
  4057fc:	b	405c24 <open_parent_devno+0x81c>
  405800:	ldr	x2, [sp, #200]
  405804:	adrp	x0, 407000 <_fini+0x18c>
  405808:	add	x1, x0, #0xc18
  40580c:	mov	x0, x2
  405810:	bl	401c70 <strcmp@plt>
  405814:	cmp	w0, #0x0
  405818:	b.eq	4058dc <open_parent_devno+0x4d4>  // b.none
  40581c:	str	xzr, [sp, #232]
  405820:	ldr	x0, [sp, #216]
  405824:	str	x0, [sp, #272]
  405828:	mov	w0, #0x7                   	// #7
  40582c:	str	w0, [sp, #148]
  405830:	str	wzr, [sp, #152]
  405834:	ldr	x0, [sp, #272]
  405838:	cmp	x0, #0x0
  40583c:	b.eq	405878 <open_parent_devno+0x470>  // b.none
  405840:	mov	w0, #0x0                   	// #0
  405844:	bl	401da0 <log_get_max_level_realm@plt>
  405848:	mov	w1, w0
  40584c:	ldr	w0, [sp, #148]
  405850:	cmp	w0, w1
  405854:	cset	w0, le
  405858:	and	w0, w0, #0xff
  40585c:	and	x0, x0, #0xff
  405860:	cmp	x0, #0x0
  405864:	b.eq	405878 <open_parent_devno+0x470>  // b.none
  405868:	add	x0, sp, #0xe8
  40586c:	mov	x1, x0
  405870:	ldr	x0, [sp, #272]
  405874:	bl	401ac0 <sd_device_get_sysname@plt>
  405878:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40587c:	add	x2, x0, #0xf1b
  405880:	ldr	x0, [sp, #232]
  405884:	cmp	x0, #0x0
  405888:	b.eq	405898 <open_parent_devno+0x490>  // b.none
  40588c:	adrp	x0, 407000 <_fini+0x18c>
  405890:	add	x0, x0, #0xb88
  405894:	b	40589c <open_parent_devno+0x494>
  405898:	mov	x0, #0x0                   	// #0
  40589c:	ldr	x3, [sp, #232]
  4058a0:	adrp	x1, 407000 <_fini+0x18c>
  4058a4:	add	x1, x1, #0xc20
  4058a8:	str	x1, [sp, #8]
  4058ac:	str	xzr, [sp]
  4058b0:	mov	x7, #0x0                   	// #0
  4058b4:	mov	x6, x3
  4058b8:	mov	x5, x0
  4058bc:	adrp	x0, 408000 <_fini+0x118c>
  4058c0:	add	x4, x0, #0x230
  4058c4:	mov	w3, #0x239                 	// #569
  4058c8:	ldr	w1, [sp, #152]
  4058cc:	ldr	w0, [sp, #148]
  4058d0:	bl	401b70 <log_object_internal@plt>
  4058d4:	mov	w19, #0x0                   	// #0
  4058d8:	b	405c24 <open_parent_devno+0x81c>
  4058dc:	ldr	x0, [sp, #216]
  4058e0:	add	x1, sp, #0xd0
  4058e4:	bl	401a50 <sd_device_get_devname@plt>
  4058e8:	str	w0, [sp, #96]
  4058ec:	ldr	w0, [sp, #96]
  4058f0:	cmp	w0, #0x0
  4058f4:	b.ge	4059bc <open_parent_devno+0x5b4>  // b.tcont
  4058f8:	str	xzr, [sp, #232]
  4058fc:	ldr	x0, [sp, #216]
  405900:	str	x0, [sp, #264]
  405904:	mov	w0, #0x7                   	// #7
  405908:	str	w0, [sp, #140]
  40590c:	ldr	w0, [sp, #96]
  405910:	str	w0, [sp, #144]
  405914:	ldr	x0, [sp, #264]
  405918:	cmp	x0, #0x0
  40591c:	b.eq	405958 <open_parent_devno+0x550>  // b.none
  405920:	mov	w0, #0x0                   	// #0
  405924:	bl	401da0 <log_get_max_level_realm@plt>
  405928:	mov	w1, w0
  40592c:	ldr	w0, [sp, #140]
  405930:	cmp	w0, w1
  405934:	cset	w0, le
  405938:	and	w0, w0, #0xff
  40593c:	and	x0, x0, #0xff
  405940:	cmp	x0, #0x0
  405944:	b.eq	405958 <open_parent_devno+0x550>  // b.none
  405948:	add	x0, sp, #0xe8
  40594c:	mov	x1, x0
  405950:	ldr	x0, [sp, #264]
  405954:	bl	401ac0 <sd_device_get_sysname@plt>
  405958:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40595c:	add	x2, x0, #0xf1b
  405960:	ldr	x0, [sp, #232]
  405964:	cmp	x0, #0x0
  405968:	b.eq	405978 <open_parent_devno+0x570>  // b.none
  40596c:	adrp	x0, 407000 <_fini+0x18c>
  405970:	add	x0, x0, #0xb88
  405974:	b	40597c <open_parent_devno+0x574>
  405978:	mov	x0, #0x0                   	// #0
  40597c:	ldr	x3, [sp, #232]
  405980:	adrp	x1, 407000 <_fini+0x18c>
  405984:	add	x1, x1, #0xc48
  405988:	str	x1, [sp, #8]
  40598c:	str	xzr, [sp]
  405990:	mov	x7, #0x0                   	// #0
  405994:	mov	x6, x3
  405998:	mov	x5, x0
  40599c:	adrp	x0, 408000 <_fini+0x118c>
  4059a0:	add	x4, x0, #0x230
  4059a4:	mov	w3, #0x240                 	// #576
  4059a8:	ldr	w1, [sp, #144]
  4059ac:	ldr	w0, [sp, #140]
  4059b0:	bl	401b70 <log_object_internal@plt>
  4059b4:	mov	w19, #0x0                   	// #0
  4059b8:	b	405c24 <open_parent_devno+0x81c>
  4059bc:	str	xzr, [sp, #232]
  4059c0:	ldr	x0, [sp, #184]
  4059c4:	str	x0, [sp, #248]
  4059c8:	mov	w0, #0x7                   	// #7
  4059cc:	str	w0, [sp, #108]
  4059d0:	str	wzr, [sp, #112]
  4059d4:	ldr	x0, [sp, #248]
  4059d8:	cmp	x0, #0x0
  4059dc:	b.eq	405a18 <open_parent_devno+0x610>  // b.none
  4059e0:	mov	w0, #0x0                   	// #0
  4059e4:	bl	401da0 <log_get_max_level_realm@plt>
  4059e8:	mov	w1, w0
  4059ec:	ldr	w0, [sp, #108]
  4059f0:	cmp	w0, w1
  4059f4:	cset	w0, le
  4059f8:	and	w0, w0, #0xff
  4059fc:	and	x0, x0, #0xff
  405a00:	cmp	x0, #0x0
  405a04:	b.eq	405a18 <open_parent_devno+0x610>  // b.none
  405a08:	add	x0, sp, #0xe8
  405a0c:	mov	x1, x0
  405a10:	ldr	x0, [sp, #248]
  405a14:	bl	401ac0 <sd_device_get_sysname@plt>
  405a18:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405a1c:	add	x2, x0, #0xf1b
  405a20:	ldr	x0, [sp, #232]
  405a24:	cmp	x0, #0x0
  405a28:	b.eq	405a38 <open_parent_devno+0x630>  // b.none
  405a2c:	adrp	x0, 407000 <_fini+0x18c>
  405a30:	add	x0, x0, #0xb88
  405a34:	b	405a3c <open_parent_devno+0x634>
  405a38:	mov	x0, #0x0                   	// #0
  405a3c:	ldr	x3, [sp, #232]
  405a40:	ldr	x1, [sp, #208]
  405a44:	str	x1, [sp, #16]
  405a48:	adrp	x1, 407000 <_fini+0x18c>
  405a4c:	add	x1, x1, #0xc80
  405a50:	str	x1, [sp, #8]
  405a54:	str	xzr, [sp]
  405a58:	mov	x7, #0x0                   	// #0
  405a5c:	mov	x6, x3
  405a60:	mov	x5, x0
  405a64:	adrp	x0, 408000 <_fini+0x118c>
  405a68:	add	x4, x0, #0x230
  405a6c:	mov	w3, #0x244                 	// #580
  405a70:	ldr	w1, [sp, #112]
  405a74:	ldr	w0, [sp, #108]
  405a78:	bl	401b70 <log_object_internal@plt>
  405a7c:	ldr	x0, [sp, #216]
  405a80:	add	x1, sp, #0xe0
  405a84:	bl	401bf0 <sd_device_get_devnum@plt>
  405a88:	str	w0, [sp, #96]
  405a8c:	ldr	w0, [sp, #96]
  405a90:	cmp	w0, #0x0
  405a94:	b.ge	405b5c <open_parent_devno+0x754>  // b.tcont
  405a98:	str	xzr, [sp, #232]
  405a9c:	ldr	x0, [sp, #216]
  405aa0:	str	x0, [sp, #256]
  405aa4:	mov	w0, #0x7                   	// #7
  405aa8:	str	w0, [sp, #132]
  405aac:	ldr	w0, [sp, #96]
  405ab0:	str	w0, [sp, #136]
  405ab4:	ldr	x0, [sp, #256]
  405ab8:	cmp	x0, #0x0
  405abc:	b.eq	405af8 <open_parent_devno+0x6f0>  // b.none
  405ac0:	mov	w0, #0x0                   	// #0
  405ac4:	bl	401da0 <log_get_max_level_realm@plt>
  405ac8:	mov	w1, w0
  405acc:	ldr	w0, [sp, #132]
  405ad0:	cmp	w0, w1
  405ad4:	cset	w0, le
  405ad8:	and	w0, w0, #0xff
  405adc:	and	x0, x0, #0xff
  405ae0:	cmp	x0, #0x0
  405ae4:	b.eq	405af8 <open_parent_devno+0x6f0>  // b.none
  405ae8:	add	x0, sp, #0xe8
  405aec:	mov	x1, x0
  405af0:	ldr	x0, [sp, #256]
  405af4:	bl	401ac0 <sd_device_get_sysname@plt>
  405af8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405afc:	add	x2, x0, #0xf1b
  405b00:	ldr	x0, [sp, #232]
  405b04:	cmp	x0, #0x0
  405b08:	b.eq	405b18 <open_parent_devno+0x710>  // b.none
  405b0c:	adrp	x0, 407000 <_fini+0x18c>
  405b10:	add	x0, x0, #0xb88
  405b14:	b	405b1c <open_parent_devno+0x714>
  405b18:	mov	x0, #0x0                   	// #0
  405b1c:	ldr	x3, [sp, #232]
  405b20:	adrp	x1, 407000 <_fini+0x18c>
  405b24:	add	x1, x1, #0xc90
  405b28:	str	x1, [sp, #8]
  405b2c:	str	xzr, [sp]
  405b30:	mov	x7, #0x0                   	// #0
  405b34:	mov	x6, x3
  405b38:	mov	x5, x0
  405b3c:	adrp	x0, 408000 <_fini+0x118c>
  405b40:	add	x4, x0, #0x230
  405b44:	mov	w3, #0x248                 	// #584
  405b48:	ldr	w1, [sp, #136]
  405b4c:	ldr	w0, [sp, #132]
  405b50:	bl	401b70 <log_object_internal@plt>
  405b54:	mov	w19, #0x0                   	// #0
  405b58:	b	405c24 <open_parent_devno+0x81c>
  405b5c:	ldr	x0, [sp, #208]
  405b60:	mov	w1, #0x100                 	// #256
  405b64:	movk	w1, #0x8, lsl #16
  405b68:	bl	401d20 <open64@plt>
  405b6c:	str	w0, [sp, #116]
  405b70:	ldr	w0, [sp, #116]
  405b74:	cmp	w0, #0x0
  405b78:	b.ge	405c14 <open_parent_devno+0x80c>  // b.tcont
  405b7c:	mov	w0, #0x3                   	// #3
  405b80:	str	w0, [sp, #120]
  405b84:	bl	401b80 <__errno_location@plt>
  405b88:	ldr	w0, [x0]
  405b8c:	str	w0, [sp, #124]
  405b90:	str	wzr, [sp, #128]
  405b94:	ldr	w0, [sp, #128]
  405b98:	bl	401da0 <log_get_max_level_realm@plt>
  405b9c:	mov	w1, w0
  405ba0:	ldr	w0, [sp, #120]
  405ba4:	and	w0, w0, #0x7
  405ba8:	cmp	w1, w0
  405bac:	b.lt	405bfc <open_parent_devno+0x7f4>  // b.tstop
  405bb0:	ldr	w0, [sp, #128]
  405bb4:	lsl	w1, w0, #10
  405bb8:	ldr	w0, [sp, #120]
  405bbc:	orr	w7, w1, w0
  405bc0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405bc4:	add	x1, x0, #0xf1b
  405bc8:	ldr	x0, [sp, #208]
  405bcc:	mov	x6, x0
  405bd0:	adrp	x0, 407000 <_fini+0x18c>
  405bd4:	add	x5, x0, #0xcd0
  405bd8:	adrp	x0, 408000 <_fini+0x118c>
  405bdc:	add	x4, x0, #0x230
  405be0:	mov	w3, #0x24e                 	// #590
  405be4:	mov	x2, x1
  405be8:	ldr	w1, [sp, #124]
  405bec:	mov	w0, w7
  405bf0:	bl	401c20 <log_internal_realm@plt>
  405bf4:	mov	w19, w0
  405bf8:	b	405c24 <open_parent_devno+0x81c>
  405bfc:	ldr	w0, [sp, #124]
  405c00:	cmp	w0, #0x0
  405c04:	cneg	w0, w0, lt  // lt = tstop
  405c08:	and	w0, w0, #0xff
  405c0c:	neg	w19, w0
  405c10:	b	405c24 <open_parent_devno+0x81c>
  405c14:	ldr	x0, [sp, #80]
  405c18:	ldr	w1, [sp, #116]
  405c1c:	str	w1, [x0]
  405c20:	mov	w19, #0x1                   	// #1
  405c24:	add	x0, sp, #0xb8
  405c28:	bl	401f88 <sd_device_unrefp>
  405c2c:	mov	w1, w19
  405c30:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  405c34:	add	x0, x0, #0xb90
  405c38:	ldr	x2, [sp, #296]
  405c3c:	ldr	x0, [x0]
  405c40:	eor	x0, x2, x0
  405c44:	cmp	x0, #0x0
  405c48:	b.eq	405c50 <open_parent_devno+0x848>  // b.none
  405c4c:	bl	401ba0 <__stack_chk_fail@plt>
  405c50:	mov	w0, w1
  405c54:	ldp	x19, x20, [sp, #48]
  405c58:	ldp	x21, x22, [sp, #64]
  405c5c:	ldp	x29, x30, [sp, #32]
  405c60:	add	sp, sp, #0x130
  405c64:	ret

0000000000405c68 <enumerate_partitions>:
  405c68:	stp	x29, x30, [sp, #-112]!
  405c6c:	mov	x29, sp
  405c70:	str	x19, [sp, #16]
  405c74:	str	x0, [sp, #40]
  405c78:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  405c7c:	add	x0, x0, #0xb90
  405c80:	ldr	x1, [x0]
  405c84:	str	x1, [sp, #104]
  405c88:	mov	x1, #0x0                   	// #0
  405c8c:	mov	w0, #0xffffffff            	// #-1
  405c90:	str	w0, [sp, #60]
  405c94:	str	xzr, [sp, #96]
  405c98:	add	x0, sp, #0x3c
  405c9c:	mov	x1, x0
  405ca0:	ldr	x0, [sp, #40]
  405ca4:	bl	405408 <open_parent_devno>
  405ca8:	str	w0, [sp, #64]
  405cac:	ldr	w0, [sp, #64]
  405cb0:	cmp	w0, #0x0
  405cb4:	b.gt	405cc0 <enumerate_partitions+0x58>
  405cb8:	ldr	w19, [sp, #64]
  405cbc:	b	405fd0 <enumerate_partitions+0x368>
  405cc0:	ldr	w0, [sp, #60]
  405cc4:	add	x1, sp, #0x60
  405cc8:	mov	x4, x1
  405ccc:	mov	w3, #0x210                 	// #528
  405cd0:	mov	x2, #0x0                   	// #0
  405cd4:	mov	x1, #0x0                   	// #0
  405cd8:	bl	401c30 <dissect_image@plt>
  405cdc:	str	w0, [sp, #64]
  405ce0:	ldr	w0, [sp, #64]
  405ce4:	cmn	w0, #0x41
  405ce8:	b.ne	405d6c <enumerate_partitions+0x104>  // b.any
  405cec:	mov	w0, #0x7                   	// #7
  405cf0:	str	w0, [sp, #84]
  405cf4:	ldr	w0, [sp, #64]
  405cf8:	str	w0, [sp, #88]
  405cfc:	str	wzr, [sp, #92]
  405d00:	ldr	w0, [sp, #92]
  405d04:	bl	401da0 <log_get_max_level_realm@plt>
  405d08:	mov	w1, w0
  405d0c:	ldr	w0, [sp, #84]
  405d10:	and	w0, w0, #0x7
  405d14:	cmp	w1, w0
  405d18:	b.lt	405d5c <enumerate_partitions+0xf4>  // b.tstop
  405d1c:	ldr	w0, [sp, #92]
  405d20:	lsl	w1, w0, #10
  405d24:	ldr	w0, [sp, #84]
  405d28:	orr	w6, w1, w0
  405d2c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405d30:	add	x1, x0, #0xf1b
  405d34:	adrp	x0, 407000 <_fini+0x18c>
  405d38:	add	x5, x0, #0xce8
  405d3c:	adrp	x0, 408000 <_fini+0x118c>
  405d40:	add	x4, x0, #0x248
  405d44:	mov	w3, #0x25f                 	// #607
  405d48:	mov	x2, x1
  405d4c:	ldr	w1, [sp, #88]
  405d50:	mov	w0, w6
  405d54:	bl	401c20 <log_internal_realm@plt>
  405d58:	b	405d64 <enumerate_partitions+0xfc>
  405d5c:	ldr	w0, [sp, #88]
  405d60:	cmp	w0, #0x0
  405d64:	mov	w19, #0x0                   	// #0
  405d68:	b	405fd0 <enumerate_partitions+0x368>
  405d6c:	ldr	w0, [sp, #64]
  405d70:	cmp	w0, #0x0
  405d74:	b.ge	405e04 <enumerate_partitions+0x19c>  // b.tcont
  405d78:	mov	w0, #0x3                   	// #3
  405d7c:	str	w0, [sp, #72]
  405d80:	ldr	w0, [sp, #64]
  405d84:	str	w0, [sp, #76]
  405d88:	str	wzr, [sp, #80]
  405d8c:	ldr	w0, [sp, #80]
  405d90:	bl	401da0 <log_get_max_level_realm@plt>
  405d94:	mov	w1, w0
  405d98:	ldr	w0, [sp, #72]
  405d9c:	and	w0, w0, #0x7
  405da0:	cmp	w1, w0
  405da4:	b.lt	405dec <enumerate_partitions+0x184>  // b.tstop
  405da8:	ldr	w0, [sp, #80]
  405dac:	lsl	w1, w0, #10
  405db0:	ldr	w0, [sp, #72]
  405db4:	orr	w6, w1, w0
  405db8:	adrp	x0, 406000 <enumerate_partitions+0x398>
  405dbc:	add	x1, x0, #0xf1b
  405dc0:	adrp	x0, 407000 <_fini+0x18c>
  405dc4:	add	x5, x0, #0xd18
  405dc8:	adrp	x0, 408000 <_fini+0x118c>
  405dcc:	add	x4, x0, #0x248
  405dd0:	mov	w3, #0x263                 	// #611
  405dd4:	mov	x2, x1
  405dd8:	ldr	w1, [sp, #76]
  405ddc:	mov	w0, w6
  405de0:	bl	401c20 <log_internal_realm@plt>
  405de4:	mov	w19, w0
  405de8:	b	405fd0 <enumerate_partitions+0x368>
  405dec:	ldr	w0, [sp, #76]
  405df0:	cmp	w0, #0x0
  405df4:	cneg	w0, w0, lt  // lt = tstop
  405df8:	and	w0, w0, #0xff
  405dfc:	neg	w19, w0
  405e00:	b	405fd0 <enumerate_partitions+0x368>
  405e04:	ldr	x0, [sp, #96]
  405e08:	ldrb	w0, [x0, #392]
  405e0c:	and	w0, w0, #0x1
  405e10:	and	w0, w0, #0xff
  405e14:	cmp	w0, #0x0
  405e18:	b.eq	405e40 <enumerate_partitions+0x1d8>  // b.none
  405e1c:	ldr	x0, [sp, #96]
  405e20:	ldr	x0, [x0, #432]
  405e24:	bl	4039d4 <add_swap>
  405e28:	str	w0, [sp, #68]
  405e2c:	ldr	w0, [sp, #68]
  405e30:	cmp	w0, #0x0
  405e34:	b.ge	405e40 <enumerate_partitions+0x1d8>  // b.tcont
  405e38:	ldr	w0, [sp, #68]
  405e3c:	str	w0, [sp, #64]
  405e40:	ldr	x0, [sp, #96]
  405e44:	ldrb	w0, [x0, #328]
  405e48:	and	w0, w0, #0x1
  405e4c:	and	w0, w0, #0xff
  405e50:	cmp	w0, #0x0
  405e54:	b.eq	405e80 <enumerate_partitions+0x218>  // b.none
  405e58:	ldr	x0, [sp, #96]
  405e5c:	add	x0, x0, #0x8
  405e60:	add	x0, x0, #0x140
  405e64:	bl	40469c <add_xbootldr>
  405e68:	str	w0, [sp, #68]
  405e6c:	ldr	w0, [sp, #68]
  405e70:	cmp	w0, #0x0
  405e74:	b.ge	405e80 <enumerate_partitions+0x218>  // b.tcont
  405e78:	ldr	w0, [sp, #68]
  405e7c:	str	w0, [sp, #64]
  405e80:	ldr	x0, [sp, #96]
  405e84:	ldrb	w0, [x0, #264]
  405e88:	and	w0, w0, #0x1
  405e8c:	and	w0, w0, #0xff
  405e90:	cmp	w0, #0x0
  405e94:	b.eq	405ed8 <enumerate_partitions+0x270>  // b.none
  405e98:	ldr	x0, [sp, #96]
  405e9c:	add	x0, x0, #0x8
  405ea0:	add	x2, x0, #0x100
  405ea4:	ldr	x0, [sp, #96]
  405ea8:	ldrb	w0, [x0, #328]
  405eac:	ubfx	x0, x0, #0, #1
  405eb0:	and	w0, w0, #0xff
  405eb4:	mov	w1, w0
  405eb8:	mov	x0, x2
  405ebc:	bl	404928 <add_esp>
  405ec0:	str	w0, [sp, #68]
  405ec4:	ldr	w0, [sp, #68]
  405ec8:	cmp	w0, #0x0
  405ecc:	b.ge	405ed8 <enumerate_partitions+0x270>  // b.tcont
  405ed0:	ldr	w0, [sp, #68]
  405ed4:	str	w0, [sp, #64]
  405ed8:	ldr	x0, [sp, #96]
  405edc:	ldrb	w0, [x0, #136]
  405ee0:	and	w0, w0, #0x1
  405ee4:	and	w0, w0, #0xff
  405ee8:	cmp	w0, #0x0
  405eec:	b.eq	405f34 <enumerate_partitions+0x2cc>  // b.none
  405ef0:	ldr	x0, [sp, #96]
  405ef4:	add	x0, x0, #0x8
  405ef8:	add	x4, x0, #0x80
  405efc:	adrp	x0, 407000 <_fini+0x18c>
  405f00:	add	x3, x0, #0xd30
  405f04:	adrp	x0, 407000 <_fini+0x18c>
  405f08:	add	x2, x0, #0xd40
  405f0c:	adrp	x0, 407000 <_fini+0x18c>
  405f10:	add	x1, x0, #0xd48
  405f14:	mov	x0, x4
  405f18:	bl	4038fc <add_partition_mount>
  405f1c:	str	w0, [sp, #68]
  405f20:	ldr	w0, [sp, #68]
  405f24:	cmp	w0, #0x0
  405f28:	b.ge	405f34 <enumerate_partitions+0x2cc>  // b.tcont
  405f2c:	ldr	w0, [sp, #68]
  405f30:	str	w0, [sp, #64]
  405f34:	ldr	x0, [sp, #96]
  405f38:	ldrb	w0, [x0, #200]
  405f3c:	and	w0, w0, #0x1
  405f40:	and	w0, w0, #0xff
  405f44:	cmp	w0, #0x0
  405f48:	b.eq	405f90 <enumerate_partitions+0x328>  // b.none
  405f4c:	ldr	x0, [sp, #96]
  405f50:	add	x0, x0, #0x8
  405f54:	add	x4, x0, #0xc0
  405f58:	adrp	x0, 407000 <_fini+0x18c>
  405f5c:	add	x3, x0, #0xd50
  405f60:	adrp	x0, 407000 <_fini+0x18c>
  405f64:	add	x2, x0, #0xd68
  405f68:	adrp	x0, 407000 <_fini+0x18c>
  405f6c:	add	x1, x0, #0xd70
  405f70:	mov	x0, x4
  405f74:	bl	4038fc <add_partition_mount>
  405f78:	str	w0, [sp, #68]
  405f7c:	ldr	w0, [sp, #68]
  405f80:	cmp	w0, #0x0
  405f84:	b.ge	405f90 <enumerate_partitions+0x328>  // b.tcont
  405f88:	ldr	w0, [sp, #68]
  405f8c:	str	w0, [sp, #64]
  405f90:	ldr	x0, [sp, #96]
  405f94:	ldrb	w0, [x0, #8]
  405f98:	and	w0, w0, #0x1
  405f9c:	and	w0, w0, #0xff
  405fa0:	cmp	w0, #0x0
  405fa4:	b.eq	405fcc <enumerate_partitions+0x364>  // b.none
  405fa8:	ldr	x0, [sp, #96]
  405fac:	add	x0, x0, #0x8
  405fb0:	bl	404f4c <add_root_rw>
  405fb4:	str	w0, [sp, #68]
  405fb8:	ldr	w0, [sp, #68]
  405fbc:	cmp	w0, #0x0
  405fc0:	b.ge	405fcc <enumerate_partitions+0x364>  // b.tcont
  405fc4:	ldr	w0, [sp, #68]
  405fc8:	str	w0, [sp, #64]
  405fcc:	ldr	w19, [sp, #64]
  405fd0:	add	x0, sp, #0x60
  405fd4:	bl	4021c4 <dissected_image_unrefp>
  405fd8:	add	x0, sp, #0x3c
  405fdc:	bl	4021f8 <closep>
  405fe0:	mov	w1, w19
  405fe4:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  405fe8:	add	x0, x0, #0xb90
  405fec:	ldr	x2, [sp, #104]
  405ff0:	ldr	x0, [x0]
  405ff4:	eor	x0, x2, x0
  405ff8:	cmp	x0, #0x0
  405ffc:	b.eq	406004 <enumerate_partitions+0x39c>  // b.none
  406000:	bl	401ba0 <__stack_chk_fail@plt>
  406004:	mov	w0, w1
  406008:	ldr	x19, [sp, #16]
  40600c:	ldp	x29, x30, [sp], #112
  406010:	ret

0000000000406014 <parse_proc_cmdline_item>:
  406014:	stp	x29, x30, [sp, #-64]!
  406018:	mov	x29, sp
  40601c:	str	x0, [sp, #40]
  406020:	str	x1, [sp, #32]
  406024:	str	x2, [sp, #24]
  406028:	ldr	x0, [sp, #40]
  40602c:	cmp	x0, #0x0
  406030:	cset	w0, eq  // eq = none
  406034:	and	w0, w0, #0xff
  406038:	and	x0, x0, #0xff
  40603c:	cmp	x0, #0x0
  406040:	b.eq	40606c <parse_proc_cmdline_item+0x58>  // b.none
  406044:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406048:	add	x1, x0, #0xf1b
  40604c:	adrp	x0, 408000 <_fini+0x118c>
  406050:	add	x4, x0, #0x260
  406054:	mov	w3, #0x28f                 	// #655
  406058:	mov	x2, x1
  40605c:	adrp	x0, 407000 <_fini+0x18c>
  406060:	add	x1, x0, #0xd78
  406064:	mov	w0, #0x0                   	// #0
  406068:	bl	401ad0 <log_assert_failed_realm@plt>
  40606c:	adrp	x0, 407000 <_fini+0x18c>
  406070:	add	x1, x0, #0xd80
  406074:	ldr	x0, [sp, #40]
  406078:	bl	401a80 <proc_cmdline_key_streq@plt>
  40607c:	and	w0, w0, #0xff
  406080:	cmp	w0, #0x0
  406084:	b.ne	4060a4 <parse_proc_cmdline_item+0x90>  // b.any
  406088:	adrp	x0, 407000 <_fini+0x18c>
  40608c:	add	x1, x0, #0xd98
  406090:	ldr	x0, [sp, #40]
  406094:	bl	401a80 <proc_cmdline_key_streq@plt>
  406098:	and	w0, w0, #0xff
  40609c:	cmp	w0, #0x0
  4060a0:	b.eq	406170 <parse_proc_cmdline_item+0x15c>  // b.none
  4060a4:	ldr	x0, [sp, #32]
  4060a8:	cmp	x0, #0x0
  4060ac:	b.eq	4060bc <parse_proc_cmdline_item+0xa8>  // b.none
  4060b0:	ldr	x0, [sp, #32]
  4060b4:	bl	401a30 <parse_boolean@plt>
  4060b8:	b	4060c0 <parse_proc_cmdline_item+0xac>
  4060bc:	mov	w0, #0x1                   	// #1
  4060c0:	str	w0, [sp, #48]
  4060c4:	ldr	w0, [sp, #48]
  4060c8:	cmp	w0, #0x0
  4060cc:	b.ge	406150 <parse_proc_cmdline_item+0x13c>  // b.tcont
  4060d0:	mov	w0, #0x4                   	// #4
  4060d4:	str	w0, [sp, #52]
  4060d8:	ldr	w0, [sp, #48]
  4060dc:	str	w0, [sp, #56]
  4060e0:	str	wzr, [sp, #60]
  4060e4:	ldr	w0, [sp, #60]
  4060e8:	bl	401da0 <log_get_max_level_realm@plt>
  4060ec:	mov	w1, w0
  4060f0:	ldr	w0, [sp, #52]
  4060f4:	and	w0, w0, #0x7
  4060f8:	cmp	w1, w0
  4060fc:	b.lt	406144 <parse_proc_cmdline_item+0x130>  // b.tstop
  406100:	ldr	w0, [sp, #60]
  406104:	lsl	w1, w0, #10
  406108:	ldr	w0, [sp, #52]
  40610c:	orr	w7, w1, w0
  406110:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406114:	add	x1, x0, #0xf1b
  406118:	ldr	x6, [sp, #32]
  40611c:	adrp	x0, 407000 <_fini+0x18c>
  406120:	add	x5, x0, #0xdb0
  406124:	adrp	x0, 408000 <_fini+0x118c>
  406128:	add	x4, x0, #0x278
  40612c:	mov	w3, #0x296                 	// #662
  406130:	mov	x2, x1
  406134:	ldr	w1, [sp, #56]
  406138:	mov	w0, w7
  40613c:	bl	401c20 <log_internal_realm@plt>
  406140:	b	406294 <parse_proc_cmdline_item+0x280>
  406144:	ldr	w0, [sp, #56]
  406148:	cmp	w0, #0x0
  40614c:	b	406294 <parse_proc_cmdline_item+0x280>
  406150:	ldr	w0, [sp, #48]
  406154:	cmp	w0, #0x0
  406158:	cset	w0, ne  // ne = any
  40615c:	and	w1, w0, #0xff
  406160:	adrp	x0, 419000 <arg_enabled>
  406164:	add	x0, x0, #0x0
  406168:	strb	w1, [x0]
  40616c:	b	406294 <parse_proc_cmdline_item+0x280>
  406170:	adrp	x0, 407000 <_fini+0x18c>
  406174:	add	x1, x0, #0xde8
  406178:	ldr	x0, [sp, #40]
  40617c:	bl	401a80 <proc_cmdline_key_streq@plt>
  406180:	and	w0, w0, #0xff
  406184:	cmp	w0, #0x0
  406188:	b.eq	4061d8 <parse_proc_cmdline_item+0x1c4>  // b.none
  40618c:	ldr	x1, [sp, #32]
  406190:	ldr	x0, [sp, #40]
  406194:	bl	4022f8 <proc_cmdline_value_missing>
  406198:	and	w0, w0, #0xff
  40619c:	cmp	w0, #0x0
  4061a0:	b.eq	4061ac <parse_proc_cmdline_item+0x198>  // b.none
  4061a4:	mov	w0, #0x0                   	// #0
  4061a8:	b	406298 <parse_proc_cmdline_item+0x284>
  4061ac:	adrp	x0, 407000 <_fini+0x18c>
  4061b0:	add	x1, x0, #0xdf0
  4061b4:	ldr	x0, [sp, #32]
  4061b8:	bl	401c70 <strcmp@plt>
  4061bc:	cmp	w0, #0x0
  4061c0:	cset	w0, eq  // eq = none
  4061c4:	and	w1, w0, #0xff
  4061c8:	adrp	x0, 419000 <arg_enabled>
  4061cc:	add	x0, x0, #0x1
  4061d0:	strb	w1, [x0]
  4061d4:	b	406294 <parse_proc_cmdline_item+0x280>
  4061d8:	adrp	x0, 407000 <_fini+0x18c>
  4061dc:	add	x1, x0, #0xe00
  4061e0:	ldr	x0, [sp, #40]
  4061e4:	bl	401a80 <proc_cmdline_key_streq@plt>
  4061e8:	and	w0, w0, #0xff
  4061ec:	cmp	w0, #0x0
  4061f0:	b.eq	406224 <parse_proc_cmdline_item+0x210>  // b.none
  4061f4:	ldr	x1, [sp, #32]
  4061f8:	ldr	x0, [sp, #40]
  4061fc:	bl	4022f8 <proc_cmdline_value_missing>
  406200:	and	w0, w0, #0xff
  406204:	cmp	w0, #0x0
  406208:	b.eq	406214 <parse_proc_cmdline_item+0x200>  // b.none
  40620c:	mov	w0, #0x0                   	// #0
  406210:	b	406298 <parse_proc_cmdline_item+0x284>
  406214:	adrp	x0, 419000 <arg_enabled>
  406218:	add	x0, x0, #0x1
  40621c:	strb	wzr, [x0]
  406220:	b	406294 <parse_proc_cmdline_item+0x280>
  406224:	adrp	x0, 407000 <_fini+0x18c>
  406228:	add	x1, x0, #0x490
  40622c:	ldr	x0, [sp, #40]
  406230:	bl	401a80 <proc_cmdline_key_streq@plt>
  406234:	and	w0, w0, #0xff
  406238:	cmp	w0, #0x0
  40623c:	b.eq	406260 <parse_proc_cmdline_item+0x24c>  // b.none
  406240:	ldr	x0, [sp, #32]
  406244:	cmp	x0, #0x0
  406248:	b.ne	406260 <parse_proc_cmdline_item+0x24c>  // b.any
  40624c:	adrp	x0, 419000 <arg_enabled>
  406250:	add	x0, x0, #0x4
  406254:	mov	w1, #0x1                   	// #1
  406258:	str	w1, [x0]
  40625c:	b	406294 <parse_proc_cmdline_item+0x280>
  406260:	adrp	x0, 407000 <_fini+0x18c>
  406264:	add	x1, x0, #0x498
  406268:	ldr	x0, [sp, #40]
  40626c:	bl	401a80 <proc_cmdline_key_streq@plt>
  406270:	and	w0, w0, #0xff
  406274:	cmp	w0, #0x0
  406278:	b.eq	406294 <parse_proc_cmdline_item+0x280>  // b.none
  40627c:	ldr	x0, [sp, #32]
  406280:	cmp	x0, #0x0
  406284:	b.ne	406294 <parse_proc_cmdline_item+0x280>  // b.any
  406288:	adrp	x0, 419000 <arg_enabled>
  40628c:	add	x0, x0, #0x4
  406290:	str	wzr, [x0]
  406294:	mov	w0, #0x0                   	// #0
  406298:	ldp	x29, x30, [sp], #64
  40629c:	ret

00000000004062a0 <add_root_cryptsetup>:
  4062a0:	stp	x29, x30, [sp, #-16]!
  4062a4:	mov	x29, sp
  4062a8:	mov	x4, #0x0                   	// #0
  4062ac:	mov	w3, #0x0                   	// #0
  4062b0:	mov	w2, #0x1                   	// #1
  4062b4:	adrp	x0, 407000 <_fini+0x18c>
  4062b8:	add	x1, x0, #0xe10
  4062bc:	adrp	x0, 407000 <_fini+0x18c>
  4062c0:	add	x0, x0, #0xde8
  4062c4:	bl	4023ec <add_cryptsetup>
  4062c8:	ldp	x29, x30, [sp], #16
  4062cc:	ret

00000000004062d0 <add_root_mount>:
  4062d0:	stp	x29, x30, [sp, #-80]!
  4062d4:	mov	x29, sp
  4062d8:	stp	x19, x20, [sp, #16]
  4062dc:	bl	401b00 <is_efi_boot@plt>
  4062e0:	and	w0, w0, #0xff
  4062e4:	eor	w0, w0, #0x1
  4062e8:	and	w0, w0, #0xff
  4062ec:	cmp	w0, #0x0
  4062f0:	b.eq	406370 <add_root_mount+0xa0>  // b.none
  4062f4:	mov	w0, #0x7                   	// #7
  4062f8:	str	w0, [sp, #68]
  4062fc:	str	wzr, [sp, #72]
  406300:	str	wzr, [sp, #76]
  406304:	ldr	w0, [sp, #76]
  406308:	bl	401da0 <log_get_max_level_realm@plt>
  40630c:	mov	w1, w0
  406310:	ldr	w0, [sp, #68]
  406314:	and	w0, w0, #0x7
  406318:	cmp	w1, w0
  40631c:	b.lt	406360 <add_root_mount+0x90>  // b.tstop
  406320:	ldr	w0, [sp, #76]
  406324:	lsl	w1, w0, #10
  406328:	ldr	w0, [sp, #68]
  40632c:	orr	w6, w1, w0
  406330:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406334:	add	x1, x0, #0xf1b
  406338:	adrp	x0, 407000 <_fini+0x18c>
  40633c:	add	x5, x0, #0xe28
  406340:	adrp	x0, 408000 <_fini+0x118c>
  406344:	add	x4, x0, #0x2b0
  406348:	mov	w3, #0x2c5                 	// #709
  40634c:	mov	x2, x1
  406350:	ldr	w1, [sp, #72]
  406354:	mov	w0, w6
  406358:	bl	401c20 <log_internal_realm@plt>
  40635c:	b	406368 <add_root_mount+0x98>
  406360:	ldr	w0, [sp, #72]
  406364:	cmp	w0, #0x0
  406368:	mov	w0, #0x0                   	// #0
  40636c:	b	406588 <add_root_mount+0x2b8>
  406370:	mov	x0, #0x0                   	// #0
  406374:	bl	401d90 <efi_loader_get_device_part_uuid@plt>
  406378:	str	w0, [sp, #40]
  40637c:	ldr	w0, [sp, #40]
  406380:	cmn	w0, #0x2
  406384:	b.ne	406404 <add_root_mount+0x134>  // b.any
  406388:	mov	w0, #0x7                   	// #7
  40638c:	str	w0, [sp, #56]
  406390:	str	wzr, [sp, #60]
  406394:	str	wzr, [sp, #64]
  406398:	ldr	w0, [sp, #64]
  40639c:	bl	401da0 <log_get_max_level_realm@plt>
  4063a0:	mov	w1, w0
  4063a4:	ldr	w0, [sp, #56]
  4063a8:	and	w0, w0, #0x7
  4063ac:	cmp	w1, w0
  4063b0:	b.lt	4063f4 <add_root_mount+0x124>  // b.tstop
  4063b4:	ldr	w0, [sp, #64]
  4063b8:	lsl	w1, w0, #10
  4063bc:	ldr	w0, [sp, #56]
  4063c0:	orr	w6, w1, w0
  4063c4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4063c8:	add	x1, x0, #0xf1b
  4063cc:	adrp	x0, 407000 <_fini+0x18c>
  4063d0:	add	x5, x0, #0xe58
  4063d4:	adrp	x0, 408000 <_fini+0x118c>
  4063d8:	add	x4, x0, #0x2b0
  4063dc:	mov	w3, #0x2cb                 	// #715
  4063e0:	mov	x2, x1
  4063e4:	ldr	w1, [sp, #60]
  4063e8:	mov	w0, w6
  4063ec:	bl	401c20 <log_internal_realm@plt>
  4063f0:	b	4063fc <add_root_mount+0x12c>
  4063f4:	ldr	w0, [sp, #60]
  4063f8:	cmp	w0, #0x0
  4063fc:	mov	w0, #0x0                   	// #0
  406400:	b	406588 <add_root_mount+0x2b8>
  406404:	ldr	w0, [sp, #40]
  406408:	cmp	w0, #0x0
  40640c:	b.ge	406498 <add_root_mount+0x1c8>  // b.tcont
  406410:	mov	w0, #0x3                   	// #3
  406414:	str	w0, [sp, #44]
  406418:	ldr	w0, [sp, #40]
  40641c:	str	w0, [sp, #48]
  406420:	str	wzr, [sp, #52]
  406424:	ldr	w0, [sp, #52]
  406428:	bl	401da0 <log_get_max_level_realm@plt>
  40642c:	mov	w1, w0
  406430:	ldr	w0, [sp, #44]
  406434:	and	w0, w0, #0x7
  406438:	cmp	w1, w0
  40643c:	b.lt	406480 <add_root_mount+0x1b0>  // b.tstop
  406440:	ldr	w0, [sp, #52]
  406444:	lsl	w1, w0, #10
  406448:	ldr	w0, [sp, #44]
  40644c:	orr	w6, w1, w0
  406450:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406454:	add	x1, x0, #0xf1b
  406458:	adrp	x0, 407000 <_fini+0x18c>
  40645c:	add	x5, x0, #0x8b0
  406460:	adrp	x0, 408000 <_fini+0x118c>
  406464:	add	x4, x0, #0x2b0
  406468:	mov	w3, #0x2ce                 	// #718
  40646c:	mov	x2, x1
  406470:	ldr	w1, [sp, #48]
  406474:	mov	w0, w6
  406478:	bl	401c20 <log_internal_realm@plt>
  40647c:	b	406588 <add_root_mount+0x2b8>
  406480:	ldr	w0, [sp, #48]
  406484:	cmp	w0, #0x0
  406488:	cneg	w0, w0, lt  // lt = tstop
  40648c:	and	w0, w0, #0xff
  406490:	neg	w0, w0
  406494:	b	406588 <add_root_mount+0x2b8>
  406498:	bl	401af0 <in_initrd@plt>
  40649c:	and	w0, w0, #0xff
  4064a0:	cmp	w0, #0x0
  4064a4:	b.eq	4064f8 <add_root_mount+0x228>  // b.none
  4064a8:	adrp	x0, 419000 <arg_enabled>
  4064ac:	add	x0, x0, #0x18
  4064b0:	ldr	x2, [x0]
  4064b4:	adrp	x0, 407000 <_fini+0x18c>
  4064b8:	add	x1, x0, #0xe80
  4064bc:	mov	x0, x2
  4064c0:	bl	401ae0 <generator_write_initrd_root_device_deps@plt>
  4064c4:	str	w0, [sp, #40]
  4064c8:	ldr	w0, [sp, #40]
  4064cc:	cmp	w0, #0x0
  4064d0:	b.ge	4064dc <add_root_mount+0x20c>  // b.tcont
  4064d4:	mov	w0, #0x0                   	// #0
  4064d8:	b	406588 <add_root_mount+0x2b8>
  4064dc:	bl	4062a0 <add_root_cryptsetup>
  4064e0:	str	w0, [sp, #40]
  4064e4:	ldr	w0, [sp, #40]
  4064e8:	cmp	w0, #0x0
  4064ec:	b.ge	4064f8 <add_root_mount+0x228>  // b.tcont
  4064f0:	ldr	w0, [sp, #40]
  4064f4:	b	406588 <add_root_mount+0x2b8>
  4064f8:	bl	401af0 <in_initrd@plt>
  4064fc:	and	w0, w0, #0xff
  406500:	cmp	w0, #0x0
  406504:	b.eq	406514 <add_root_mount+0x244>  // b.none
  406508:	adrp	x0, 407000 <_fini+0x18c>
  40650c:	add	x19, x0, #0xe98
  406510:	b	40651c <add_root_mount+0x24c>
  406514:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406518:	add	x19, x0, #0xea0
  40651c:	adrp	x0, 419000 <arg_enabled>
  406520:	add	x0, x0, #0x4
  406524:	ldr	w0, [x0]
  406528:	cmp	w0, #0x0
  40652c:	cset	w0, gt
  406530:	and	w20, w0, #0xff
  406534:	bl	401af0 <in_initrd@plt>
  406538:	and	w0, w0, #0xff
  40653c:	cmp	w0, #0x0
  406540:	b.eq	406550 <add_root_mount+0x280>  // b.none
  406544:	adrp	x0, 407000 <_fini+0x18c>
  406548:	add	x0, x0, #0xea8
  40654c:	b	406558 <add_root_mount+0x288>
  406550:	adrp	x0, 407000 <_fini+0x18c>
  406554:	add	x0, x0, #0x570
  406558:	mov	x7, x0
  40655c:	adrp	x0, 407000 <_fini+0x18c>
  406560:	add	x6, x0, #0xec0
  406564:	mov	x5, #0x0                   	// #0
  406568:	mov	w4, w20
  40656c:	mov	x3, #0x0                   	// #0
  406570:	mov	x2, x19
  406574:	adrp	x0, 407000 <_fini+0x18c>
  406578:	add	x1, x0, #0xe80
  40657c:	adrp	x0, 407000 <_fini+0x18c>
  406580:	add	x0, x0, #0xde8
  406584:	bl	403048 <add_mount>
  406588:	ldp	x19, x20, [sp, #16]
  40658c:	ldp	x29, x30, [sp], #80
  406590:	ret

0000000000406594 <add_mounts>:
  406594:	stp	x29, x30, [sp, #-144]!
  406598:	mov	x29, sp
  40659c:	stp	x19, x20, [sp, #16]
  4065a0:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  4065a4:	add	x0, x0, #0xb90
  4065a8:	ldr	x1, [x0]
  4065ac:	str	x1, [sp, #136]
  4065b0:	mov	x1, #0x0                   	// #0
  4065b4:	add	x0, sp, #0x78
  4065b8:	mov	x1, x0
  4065bc:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4065c0:	add	x0, x0, #0xea0
  4065c4:	bl	401b40 <get_block_device_harder@plt>
  4065c8:	str	w0, [sp, #44]
  4065cc:	ldr	w0, [sp, #44]
  4065d0:	cmp	w0, #0x0
  4065d4:	b.ge	406664 <add_mounts+0xd0>  // b.tcont
  4065d8:	mov	w0, #0x3                   	// #3
  4065dc:	str	w0, [sp, #108]
  4065e0:	ldr	w0, [sp, #44]
  4065e4:	str	w0, [sp, #112]
  4065e8:	str	wzr, [sp, #116]
  4065ec:	ldr	w0, [sp, #116]
  4065f0:	bl	401da0 <log_get_max_level_realm@plt>
  4065f4:	mov	w1, w0
  4065f8:	ldr	w0, [sp, #108]
  4065fc:	and	w0, w0, #0x7
  406600:	cmp	w1, w0
  406604:	b.lt	40664c <add_mounts+0xb8>  // b.tstop
  406608:	ldr	w0, [sp, #116]
  40660c:	lsl	w1, w0, #10
  406610:	ldr	w0, [sp, #108]
  406614:	orr	w6, w1, w0
  406618:	adrp	x0, 406000 <enumerate_partitions+0x398>
  40661c:	add	x1, x0, #0xf1b
  406620:	adrp	x0, 407000 <_fini+0x18c>
  406624:	add	x5, x0, #0xed0
  406628:	adrp	x0, 408000 <_fini+0x118c>
  40662c:	add	x4, x0, #0x2c0
  406630:	mov	w3, #0x2f5                 	// #757
  406634:	mov	x2, x1
  406638:	ldr	w1, [sp, #112]
  40663c:	mov	w0, w6
  406640:	bl	401c20 <log_internal_realm@plt>
  406644:	mov	w19, w0
  406648:	b	4069e4 <add_mounts+0x450>
  40664c:	ldr	w0, [sp, #112]
  406650:	cmp	w0, #0x0
  406654:	cneg	w0, w0, lt  // lt = tstop
  406658:	and	w0, w0, #0xff
  40665c:	neg	w19, w0
  406660:	b	4069e4 <add_mounts+0x450>
  406664:	ldr	w0, [sp, #44]
  406668:	cmp	w0, #0x0
  40666c:	b.ne	4069d8 <add_mounts+0x444>  // b.any
  406670:	add	x0, sp, #0x78
  406674:	mov	x1, x0
  406678:	adrp	x0, 407000 <_fini+0x18c>
  40667c:	add	x0, x0, #0xf10
  406680:	bl	401b40 <get_block_device_harder@plt>
  406684:	str	w0, [sp, #44]
  406688:	ldr	w0, [sp, #44]
  40668c:	cmp	w0, #0x0
  406690:	b.ge	406720 <add_mounts+0x18c>  // b.tcont
  406694:	mov	w0, #0x3                   	// #3
  406698:	str	w0, [sp, #96]
  40669c:	ldr	w0, [sp, #44]
  4066a0:	str	w0, [sp, #100]
  4066a4:	str	wzr, [sp, #104]
  4066a8:	ldr	w0, [sp, #104]
  4066ac:	bl	401da0 <log_get_max_level_realm@plt>
  4066b0:	mov	w1, w0
  4066b4:	ldr	w0, [sp, #96]
  4066b8:	and	w0, w0, #0x7
  4066bc:	cmp	w1, w0
  4066c0:	b.lt	406708 <add_mounts+0x174>  // b.tstop
  4066c4:	ldr	w0, [sp, #104]
  4066c8:	lsl	w1, w0, #10
  4066cc:	ldr	w0, [sp, #96]
  4066d0:	orr	w6, w1, w0
  4066d4:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4066d8:	add	x1, x0, #0xf1b
  4066dc:	adrp	x0, 407000 <_fini+0x18c>
  4066e0:	add	x5, x0, #0xf18
  4066e4:	adrp	x0, 408000 <_fini+0x118c>
  4066e8:	add	x4, x0, #0x2c0
  4066ec:	mov	w3, #0x2f9                 	// #761
  4066f0:	mov	x2, x1
  4066f4:	ldr	w1, [sp, #100]
  4066f8:	mov	w0, w6
  4066fc:	bl	401c20 <log_internal_realm@plt>
  406700:	mov	w19, w0
  406704:	b	4069e4 <add_mounts+0x450>
  406708:	ldr	w0, [sp, #100]
  40670c:	cmp	w0, #0x0
  406710:	cneg	w0, w0, lt  // lt = tstop
  406714:	and	w0, w0, #0xff
  406718:	neg	w19, w0
  40671c:	b	4069e4 <add_mounts+0x450>
  406720:	ldr	w0, [sp, #44]
  406724:	cmp	w0, #0x0
  406728:	b.ne	4069d8 <add_mounts+0x444>  // b.any
  40672c:	str	xzr, [sp, #128]
  406730:	add	x0, sp, #0x80
  406734:	mov	x1, x0
  406738:	adrp	x0, 407000 <_fini+0x18c>
  40673c:	add	x0, x0, #0xf58
  406740:	bl	401ce0 <readlink_malloc@plt>
  406744:	str	w0, [sp, #44]
  406748:	ldr	w0, [sp, #44]
  40674c:	cmn	w0, #0x2
  406750:	b.ne	4067d4 <add_mounts+0x240>  // b.any
  406754:	mov	w0, #0x7                   	// #7
  406758:	str	w0, [sp, #84]
  40675c:	str	wzr, [sp, #88]
  406760:	str	wzr, [sp, #92]
  406764:	ldr	w0, [sp, #92]
  406768:	bl	401da0 <log_get_max_level_realm@plt>
  40676c:	mov	w1, w0
  406770:	ldr	w0, [sp, #84]
  406774:	and	w0, w0, #0x7
  406778:	cmp	w1, w0
  40677c:	b.lt	4067c0 <add_mounts+0x22c>  // b.tstop
  406780:	ldr	w0, [sp, #92]
  406784:	lsl	w1, w0, #10
  406788:	ldr	w0, [sp, #84]
  40678c:	orr	w6, w1, w0
  406790:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406794:	add	x1, x0, #0xf1b
  406798:	adrp	x0, 407000 <_fini+0x18c>
  40679c:	add	x5, x0, #0xf78
  4067a0:	adrp	x0, 408000 <_fini+0x118c>
  4067a4:	add	x4, x0, #0x2c0
  4067a8:	mov	w3, #0x303                 	// #771
  4067ac:	mov	x2, x1
  4067b0:	ldr	w1, [sp, #88]
  4067b4:	mov	w0, w6
  4067b8:	bl	401c20 <log_internal_realm@plt>
  4067bc:	b	4067c8 <add_mounts+0x234>
  4067c0:	ldr	w0, [sp, #88]
  4067c4:	cmp	w0, #0x0
  4067c8:	mov	w19, #0x0                   	// #0
  4067cc:	mov	w20, #0x0                   	// #0
  4067d0:	b	4069c8 <add_mounts+0x434>
  4067d4:	ldr	w0, [sp, #44]
  4067d8:	cmp	w0, #0x0
  4067dc:	b.ge	406870 <add_mounts+0x2dc>  // b.tcont
  4067e0:	mov	w0, #0x3                   	// #3
  4067e4:	str	w0, [sp, #72]
  4067e8:	ldr	w0, [sp, #44]
  4067ec:	str	w0, [sp, #76]
  4067f0:	str	wzr, [sp, #80]
  4067f4:	ldr	w0, [sp, #80]
  4067f8:	bl	401da0 <log_get_max_level_realm@plt>
  4067fc:	mov	w1, w0
  406800:	ldr	w0, [sp, #72]
  406804:	and	w0, w0, #0x7
  406808:	cmp	w1, w0
  40680c:	b.lt	406854 <add_mounts+0x2c0>  // b.tstop
  406810:	ldr	w0, [sp, #80]
  406814:	lsl	w1, w0, #10
  406818:	ldr	w0, [sp, #72]
  40681c:	orr	w6, w1, w0
  406820:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406824:	add	x1, x0, #0xf1b
  406828:	adrp	x0, 407000 <_fini+0x18c>
  40682c:	add	x5, x0, #0xfc0
  406830:	adrp	x0, 408000 <_fini+0x118c>
  406834:	add	x4, x0, #0x2c0
  406838:	mov	w3, #0x307                 	// #775
  40683c:	mov	x2, x1
  406840:	ldr	w1, [sp, #76]
  406844:	mov	w0, w6
  406848:	bl	401c20 <log_internal_realm@plt>
  40684c:	mov	w19, w0
  406850:	b	406868 <add_mounts+0x2d4>
  406854:	ldr	w0, [sp, #76]
  406858:	cmp	w0, #0x0
  40685c:	cneg	w0, w0, lt  // lt = tstop
  406860:	and	w0, w0, #0xff
  406864:	neg	w19, w0
  406868:	mov	w20, #0x0                   	// #0
  40686c:	b	4069c8 <add_mounts+0x434>
  406870:	ldr	x0, [sp, #128]
  406874:	add	x2, sp, #0x78
  406878:	add	x1, sp, #0x28
  40687c:	bl	401cf0 <device_path_parse_major_minor@plt>
  406880:	str	w0, [sp, #44]
  406884:	ldr	w0, [sp, #44]
  406888:	cmp	w0, #0x0
  40688c:	b.ge	406920 <add_mounts+0x38c>  // b.tcont
  406890:	mov	w0, #0x3                   	// #3
  406894:	str	w0, [sp, #60]
  406898:	ldr	w0, [sp, #44]
  40689c:	str	w0, [sp, #64]
  4068a0:	str	wzr, [sp, #68]
  4068a4:	ldr	w0, [sp, #68]
  4068a8:	bl	401da0 <log_get_max_level_realm@plt>
  4068ac:	mov	w1, w0
  4068b0:	ldr	w0, [sp, #60]
  4068b4:	and	w0, w0, #0x7
  4068b8:	cmp	w1, w0
  4068bc:	b.lt	406904 <add_mounts+0x370>  // b.tstop
  4068c0:	ldr	w0, [sp, #68]
  4068c4:	lsl	w1, w0, #10
  4068c8:	ldr	w0, [sp, #60]
  4068cc:	orr	w6, w1, w0
  4068d0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  4068d4:	add	x1, x0, #0xf1b
  4068d8:	adrp	x0, 407000 <_fini+0x18c>
  4068dc:	add	x5, x0, #0xff8
  4068e0:	adrp	x0, 408000 <_fini+0x118c>
  4068e4:	add	x4, x0, #0x2c0
  4068e8:	mov	w3, #0x30b                 	// #779
  4068ec:	mov	x2, x1
  4068f0:	ldr	w1, [sp, #64]
  4068f4:	mov	w0, w6
  4068f8:	bl	401c20 <log_internal_realm@plt>
  4068fc:	mov	w19, w0
  406900:	b	406918 <add_mounts+0x384>
  406904:	ldr	w0, [sp, #64]
  406908:	cmp	w0, #0x0
  40690c:	cneg	w0, w0, lt  // lt = tstop
  406910:	and	w0, w0, #0xff
  406914:	neg	w19, w0
  406918:	mov	w20, #0x0                   	// #0
  40691c:	b	4069c8 <add_mounts+0x434>
  406920:	ldr	w0, [sp, #40]
  406924:	and	w0, w0, #0xf000
  406928:	cmp	w0, #0x6, lsl #12
  40692c:	b.eq	4069c4 <add_mounts+0x430>  // b.none
  406930:	mov	w0, #0x3                   	// #3
  406934:	str	w0, [sp, #48]
  406938:	mov	w0, #0xf                   	// #15
  40693c:	movk	w0, #0x4000, lsl #16
  406940:	str	w0, [sp, #52]
  406944:	str	wzr, [sp, #56]
  406948:	ldr	w0, [sp, #56]
  40694c:	bl	401da0 <log_get_max_level_realm@plt>
  406950:	mov	w1, w0
  406954:	ldr	w0, [sp, #48]
  406958:	and	w0, w0, #0x7
  40695c:	cmp	w1, w0
  406960:	b.lt	4069a8 <add_mounts+0x414>  // b.tstop
  406964:	ldr	w0, [sp, #56]
  406968:	lsl	w1, w0, #10
  40696c:	ldr	w0, [sp, #48]
  406970:	orr	w6, w1, w0
  406974:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406978:	add	x1, x0, #0xf1b
  40697c:	adrp	x0, 408000 <_fini+0x118c>
  406980:	add	x5, x0, #0x28
  406984:	adrp	x0, 408000 <_fini+0x118c>
  406988:	add	x4, x0, #0x2c0
  40698c:	mov	w3, #0x30d                 	// #781
  406990:	mov	x2, x1
  406994:	ldr	w1, [sp, #52]
  406998:	mov	w0, w6
  40699c:	bl	401c20 <log_internal_realm@plt>
  4069a0:	mov	w19, w0
  4069a4:	b	4069bc <add_mounts+0x428>
  4069a8:	ldr	w0, [sp, #52]
  4069ac:	cmp	w0, #0x0
  4069b0:	cneg	w0, w0, lt  // lt = tstop
  4069b4:	and	w0, w0, #0xff
  4069b8:	neg	w19, w0
  4069bc:	mov	w20, #0x0                   	// #0
  4069c0:	b	4069c8 <add_mounts+0x434>
  4069c4:	mov	w20, #0x1                   	// #1
  4069c8:	add	x0, sp, #0x80
  4069cc:	bl	402020 <freep>
  4069d0:	cmp	w20, #0x1
  4069d4:	b.ne	4069e4 <add_mounts+0x450>  // b.any
  4069d8:	ldr	x0, [sp, #120]
  4069dc:	bl	405c68 <enumerate_partitions>
  4069e0:	mov	w19, w0
  4069e4:	mov	w1, w19
  4069e8:	adrp	x0, 418000 <__FRAME_END__+0xf660>
  4069ec:	add	x0, x0, #0xb90
  4069f0:	ldr	x2, [sp, #136]
  4069f4:	ldr	x0, [x0]
  4069f8:	eor	x0, x2, x0
  4069fc:	cmp	x0, #0x0
  406a00:	b.eq	406a08 <add_mounts+0x474>  // b.none
  406a04:	bl	401ba0 <__stack_chk_fail@plt>
  406a08:	mov	w0, w1
  406a0c:	ldp	x19, x20, [sp, #16]
  406a10:	ldp	x29, x30, [sp], #144
  406a14:	ret

0000000000406a18 <run>:
  406a18:	stp	x29, x30, [sp, #-96]!
  406a1c:	mov	x29, sp
  406a20:	str	x0, [sp, #40]
  406a24:	str	x1, [sp, #32]
  406a28:	str	x2, [sp, #24]
  406a2c:	adrp	x0, 419000 <arg_enabled>
  406a30:	add	x0, x0, #0x18
  406a34:	ldr	x1, [sp, #24]
  406a38:	str	x1, [x0]
  406a3c:	adrp	x0, 419000 <arg_enabled>
  406a40:	add	x0, x0, #0x18
  406a44:	ldr	x0, [x0]
  406a48:	cmp	x0, #0x0
  406a4c:	cset	w0, eq  // eq = none
  406a50:	and	w0, w0, #0xff
  406a54:	and	x0, x0, #0xff
  406a58:	cmp	x0, #0x0
  406a5c:	b.eq	406a88 <run+0x70>  // b.none
  406a60:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406a64:	add	x1, x0, #0xf1b
  406a68:	adrp	x0, 408000 <_fini+0x118c>
  406a6c:	add	x4, x0, #0x2d0
  406a70:	mov	w3, #0x317                 	// #791
  406a74:	mov	x2, x1
  406a78:	adrp	x0, 408000 <_fini+0x118c>
  406a7c:	add	x1, x0, #0x50
  406a80:	mov	w0, #0x0                   	// #0
  406a84:	bl	401ad0 <log_assert_failed_realm@plt>
  406a88:	bl	401c60 <detect_container@plt>
  406a8c:	cmp	w0, #0x0
  406a90:	b.le	406b10 <run+0xf8>
  406a94:	mov	w0, #0x7                   	// #7
  406a98:	str	w0, [sp, #84]
  406a9c:	str	wzr, [sp, #88]
  406aa0:	str	wzr, [sp, #92]
  406aa4:	ldr	w0, [sp, #92]
  406aa8:	bl	401da0 <log_get_max_level_realm@plt>
  406aac:	mov	w1, w0
  406ab0:	ldr	w0, [sp, #84]
  406ab4:	and	w0, w0, #0x7
  406ab8:	cmp	w1, w0
  406abc:	b.lt	406b00 <run+0xe8>  // b.tstop
  406ac0:	ldr	w0, [sp, #92]
  406ac4:	lsl	w1, w0, #10
  406ac8:	ldr	w0, [sp, #84]
  406acc:	orr	w6, w1, w0
  406ad0:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406ad4:	add	x1, x0, #0xf1b
  406ad8:	adrp	x0, 408000 <_fini+0x118c>
  406adc:	add	x5, x0, #0x68
  406ae0:	adrp	x0, 408000 <_fini+0x118c>
  406ae4:	add	x4, x0, #0x2d8
  406ae8:	mov	w3, #0x31a                 	// #794
  406aec:	mov	x2, x1
  406af0:	ldr	w1, [sp, #88]
  406af4:	mov	w0, w6
  406af8:	bl	401c20 <log_internal_realm@plt>
  406afc:	b	406b08 <run+0xf0>
  406b00:	ldr	w0, [sp, #88]
  406b04:	cmp	w0, #0x0
  406b08:	mov	w0, #0x0                   	// #0
  406b0c:	b	406c98 <run+0x280>
  406b10:	mov	w2, #0x0                   	// #0
  406b14:	mov	x1, #0x0                   	// #0
  406b18:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406b1c:	add	x0, x0, #0x14
  406b20:	bl	401ca0 <proc_cmdline_parse@plt>
  406b24:	str	w0, [sp, #52]
  406b28:	ldr	w0, [sp, #52]
  406b2c:	cmp	w0, #0x0
  406b30:	b.ge	406bac <run+0x194>  // b.tcont
  406b34:	mov	w0, #0x4                   	// #4
  406b38:	str	w0, [sp, #56]
  406b3c:	ldr	w0, [sp, #52]
  406b40:	str	w0, [sp, #60]
  406b44:	str	wzr, [sp, #64]
  406b48:	ldr	w0, [sp, #64]
  406b4c:	bl	401da0 <log_get_max_level_realm@plt>
  406b50:	mov	w1, w0
  406b54:	ldr	w0, [sp, #56]
  406b58:	and	w0, w0, #0x7
  406b5c:	cmp	w1, w0
  406b60:	b.lt	406ba4 <run+0x18c>  // b.tstop
  406b64:	ldr	w0, [sp, #64]
  406b68:	lsl	w1, w0, #10
  406b6c:	ldr	w0, [sp, #56]
  406b70:	orr	w6, w1, w0
  406b74:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406b78:	add	x1, x0, #0xf1b
  406b7c:	adrp	x0, 408000 <_fini+0x118c>
  406b80:	add	x5, x0, #0x88
  406b84:	adrp	x0, 408000 <_fini+0x118c>
  406b88:	add	x4, x0, #0x2d8
  406b8c:	mov	w3, #0x320                 	// #800
  406b90:	mov	x2, x1
  406b94:	ldr	w1, [sp, #60]
  406b98:	mov	w0, w6
  406b9c:	bl	401c20 <log_internal_realm@plt>
  406ba0:	b	406bac <run+0x194>
  406ba4:	ldr	w0, [sp, #60]
  406ba8:	cmp	w0, #0x0
  406bac:	adrp	x0, 419000 <arg_enabled>
  406bb0:	add	x0, x0, #0x0
  406bb4:	ldrb	w0, [x0]
  406bb8:	eor	w0, w0, #0x1
  406bbc:	and	w0, w0, #0xff
  406bc0:	cmp	w0, #0x0
  406bc4:	b.eq	406c44 <run+0x22c>  // b.none
  406bc8:	mov	w0, #0x7                   	// #7
  406bcc:	str	w0, [sp, #72]
  406bd0:	str	wzr, [sp, #76]
  406bd4:	str	wzr, [sp, #80]
  406bd8:	ldr	w0, [sp, #80]
  406bdc:	bl	401da0 <log_get_max_level_realm@plt>
  406be0:	mov	w1, w0
  406be4:	ldr	w0, [sp, #72]
  406be8:	and	w0, w0, #0x7
  406bec:	cmp	w1, w0
  406bf0:	b.lt	406c34 <run+0x21c>  // b.tstop
  406bf4:	ldr	w0, [sp, #80]
  406bf8:	lsl	w1, w0, #10
  406bfc:	ldr	w0, [sp, #72]
  406c00:	orr	w6, w1, w0
  406c04:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406c08:	add	x1, x0, #0xf1b
  406c0c:	adrp	x0, 408000 <_fini+0x118c>
  406c10:	add	x5, x0, #0xc0
  406c14:	adrp	x0, 408000 <_fini+0x118c>
  406c18:	add	x4, x0, #0x2d8
  406c1c:	mov	w3, #0x323                 	// #803
  406c20:	mov	x2, x1
  406c24:	ldr	w1, [sp, #76]
  406c28:	mov	w0, w6
  406c2c:	bl	401c20 <log_internal_realm@plt>
  406c30:	b	406c3c <run+0x224>
  406c34:	ldr	w0, [sp, #76]
  406c38:	cmp	w0, #0x0
  406c3c:	mov	w0, #0x0                   	// #0
  406c40:	b	406c98 <run+0x280>
  406c44:	adrp	x0, 419000 <arg_enabled>
  406c48:	add	x0, x0, #0x1
  406c4c:	ldrb	w0, [x0]
  406c50:	cmp	w0, #0x0
  406c54:	b.eq	406c60 <run+0x248>  // b.none
  406c58:	bl	4062d0 <add_root_mount>
  406c5c:	str	w0, [sp, #52]
  406c60:	bl	401af0 <in_initrd@plt>
  406c64:	and	w0, w0, #0xff
  406c68:	eor	w0, w0, #0x1
  406c6c:	and	w0, w0, #0xff
  406c70:	cmp	w0, #0x0
  406c74:	b.eq	406c94 <run+0x27c>  // b.none
  406c78:	bl	406594 <add_mounts>
  406c7c:	str	w0, [sp, #68]
  406c80:	ldr	w0, [sp, #52]
  406c84:	cmp	w0, #0x0
  406c88:	b.lt	406c94 <run+0x27c>  // b.tstop
  406c8c:	ldr	w0, [sp, #68]
  406c90:	str	w0, [sp, #52]
  406c94:	ldr	w0, [sp, #52]
  406c98:	ldp	x29, x30, [sp], #96
  406c9c:	ret

0000000000406ca0 <main>:
  406ca0:	stp	x29, x30, [sp, #-48]!
  406ca4:	mov	x29, sp
  406ca8:	str	w0, [sp, #28]
  406cac:	str	x1, [sp, #16]
  406cb0:	ldr	x1, [sp, #16]
  406cb4:	ldr	w0, [sp, #28]
  406cb8:	bl	402154 <save_argc_argv>
  406cbc:	bl	401b50 <log_setup_generator@plt>
  406cc0:	ldr	w0, [sp, #28]
  406cc4:	cmp	w0, #0x1
  406cc8:	b.le	406d64 <main+0xc4>
  406ccc:	ldr	w0, [sp, #28]
  406cd0:	cmp	w0, #0x4
  406cd4:	b.eq	406d64 <main+0xc4>  // b.none
  406cd8:	mov	w0, #0x3                   	// #3
  406cdc:	str	w0, [sp, #32]
  406ce0:	mov	w0, #0x16                  	// #22
  406ce4:	movk	w0, #0x4000, lsl #16
  406ce8:	str	w0, [sp, #36]
  406cec:	str	wzr, [sp, #40]
  406cf0:	ldr	w0, [sp, #40]
  406cf4:	bl	401da0 <log_get_max_level_realm@plt>
  406cf8:	mov	w1, w0
  406cfc:	ldr	w0, [sp, #32]
  406d00:	and	w0, w0, #0x7
  406d04:	cmp	w1, w0
  406d08:	b.lt	406d4c <main+0xac>  // b.tstop
  406d0c:	ldr	w0, [sp, #40]
  406d10:	lsl	w1, w0, #10
  406d14:	ldr	w0, [sp, #32]
  406d18:	orr	w6, w1, w0
  406d1c:	adrp	x0, 406000 <enumerate_partitions+0x398>
  406d20:	add	x1, x0, #0xf1b
  406d24:	adrp	x0, 408000 <_fini+0x118c>
  406d28:	add	x5, x0, #0xd8
  406d2c:	adrp	x0, 408000 <_fini+0x118c>
  406d30:	add	x4, x0, #0x2e0
  406d34:	mov	w3, #0x333                 	// #819
  406d38:	mov	x2, x1
  406d3c:	ldr	w1, [sp, #36]
  406d40:	mov	w0, w6
  406d44:	bl	401c20 <log_internal_realm@plt>
  406d48:	b	406de8 <main+0x148>
  406d4c:	ldr	w0, [sp, #36]
  406d50:	cmp	w0, #0x0
  406d54:	cneg	w0, w0, lt  // lt = tstop
  406d58:	and	w0, w0, #0xff
  406d5c:	neg	w0, w0
  406d60:	b	406de8 <main+0x148>
  406d64:	ldr	w0, [sp, #28]
  406d68:	cmp	w0, #0x1
  406d6c:	b.le	406d7c <main+0xdc>
  406d70:	ldr	x0, [sp, #16]
  406d74:	ldr	x0, [x0, #8]
  406d78:	b	406d84 <main+0xe4>
  406d7c:	adrp	x0, 408000 <_fini+0x118c>
  406d80:	add	x0, x0, #0x108
  406d84:	ldr	w1, [sp, #28]
  406d88:	cmp	w1, #0x1
  406d8c:	b.le	406d9c <main+0xfc>
  406d90:	ldr	x1, [sp, #16]
  406d94:	ldr	x1, [x1, #16]
  406d98:	b	406da4 <main+0x104>
  406d9c:	adrp	x1, 408000 <_fini+0x118c>
  406da0:	add	x1, x1, #0x108
  406da4:	ldr	w2, [sp, #28]
  406da8:	cmp	w2, #0x1
  406dac:	b.le	406dbc <main+0x11c>
  406db0:	ldr	x2, [sp, #16]
  406db4:	ldr	x2, [x2, #24]
  406db8:	b	406dc4 <main+0x124>
  406dbc:	adrp	x2, 408000 <_fini+0x118c>
  406dc0:	add	x2, x2, #0x108
  406dc4:	bl	406a18 <run>
  406dc8:	str	w0, [sp, #44]
  406dcc:	bl	401bd0 <ask_password_agent_close@plt>
  406dd0:	bl	401a70 <polkit_agent_close@plt>
  406dd4:	bl	401be0 <pager_close@plt>
  406dd8:	bl	401d00 <mac_selinux_finish@plt>
  406ddc:	bl	402270 <static_destruct>
  406de0:	ldr	w0, [sp, #44]
  406de4:	lsr	w0, w0, #31
  406de8:	ldp	x29, x30, [sp], #48
  406dec:	ret

0000000000406df0 <__libc_csu_init>:
  406df0:	stp	x29, x30, [sp, #-64]!
  406df4:	mov	x29, sp
  406df8:	stp	x19, x20, [sp, #16]
  406dfc:	adrp	x20, 418000 <__FRAME_END__+0xf660>
  406e00:	add	x20, x20, #0xb88
  406e04:	stp	x21, x22, [sp, #32]
  406e08:	adrp	x21, 418000 <__FRAME_END__+0xf660>
  406e0c:	add	x21, x21, #0xb80
  406e10:	sub	x20, x20, x21
  406e14:	mov	w22, w0
  406e18:	stp	x23, x24, [sp, #48]
  406e1c:	mov	x23, x1
  406e20:	mov	x24, x2
  406e24:	bl	401960 <_init>
  406e28:	cmp	xzr, x20, asr #3
  406e2c:	b.eq	406e58 <__libc_csu_init+0x68>  // b.none
  406e30:	asr	x20, x20, #3
  406e34:	mov	x19, #0x0                   	// #0
  406e38:	ldr	x3, [x21, x19, lsl #3]
  406e3c:	mov	x2, x24
  406e40:	add	x19, x19, #0x1
  406e44:	mov	x1, x23
  406e48:	mov	w0, w22
  406e4c:	blr	x3
  406e50:	cmp	x20, x19
  406e54:	b.ne	406e38 <__libc_csu_init+0x48>  // b.any
  406e58:	ldp	x19, x20, [sp, #16]
  406e5c:	ldp	x21, x22, [sp, #32]
  406e60:	ldp	x23, x24, [sp, #48]
  406e64:	ldp	x29, x30, [sp], #64
  406e68:	ret
  406e6c:	nop

0000000000406e70 <__libc_csu_fini>:
  406e70:	ret

Disassembly of section .fini:

0000000000406e74 <_fini>:
  406e74:	stp	x29, x30, [sp, #-16]!
  406e78:	mov	x29, sp
  406e7c:	ldp	x29, x30, [sp], #16
  406e80:	ret
