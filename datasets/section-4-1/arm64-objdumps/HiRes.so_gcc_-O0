
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//HiRes.so_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .init:

00000000000012a8 <_init>:
    12a8:	stp	x29, x30, [sp, #-16]!
    12ac:	mov	x29, sp
    12b0:	bl	15f0 <call_weak_fn>
    12b4:	ldp	x29, x30, [sp], #16
    12b8:	ret

Disassembly of section .plt:

00000000000012c0 <.plt>:
    12c0:	stp	x16, x30, [sp, #-16]!
    12c4:	adrp	x16, 17000 <__FRAME_END__+0xf718>
    12c8:	ldr	x17, [x16, #4088]
    12cc:	add	x16, x16, #0xff8
    12d0:	br	x17
    12d4:	nop
    12d8:	nop
    12dc:	nop

00000000000012e0 <Perl_sv_2iv_flags@plt>:
    12e0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    12e4:	ldr	x17, [x16]
    12e8:	add	x16, x16, #0x0
    12ec:	br	x17

00000000000012f0 <clock@plt>:
    12f0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    12f4:	ldr	x17, [x16, #8]
    12f8:	add	x16, x16, #0x8
    12fc:	br	x17

0000000000001300 <Perl_PerlIO_fileno@plt>:
    1300:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1304:	ldr	x17, [x16, #16]
    1308:	add	x16, x16, #0x10
    130c:	br	x17

0000000000001310 <Perl_sv_2uv_flags@plt>:
    1310:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1314:	ldr	x17, [x16, #24]
    1318:	add	x16, x16, #0x18
    131c:	br	x17

0000000000001320 <Perl_stack_grow@plt>:
    1320:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1324:	ldr	x17, [x16, #32]
    1328:	add	x16, x16, #0x20
    132c:	br	x17

0000000000001330 <pause@plt>:
    1330:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1334:	ldr	x17, [x16, #40]
    1338:	add	x16, x16, #0x28
    133c:	br	x17

0000000000001340 <__cxa_finalize@plt>:
    1340:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1344:	ldr	x17, [x16, #48]
    1348:	add	x16, x16, #0x30
    134c:	br	x17

0000000000001350 <Perl_pop_scope@plt>:
    1350:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1354:	ldr	x17, [x16, #56]
    1358:	add	x16, x16, #0x38
    135c:	br	x17

0000000000001360 <clock_gettime@plt>:
    1360:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1364:	ldr	x17, [x16, #64]
    1368:	add	x16, x16, #0x40
    136c:	br	x17

0000000000001370 <pthread_getspecific@plt>:
    1370:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1374:	ldr	x17, [x16, #72]
    1378:	add	x16, x16, #0x48
    137c:	br	x17

0000000000001380 <Perl_sv_setiv_mg@plt>:
    1380:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1384:	ldr	x17, [x16, #80]
    1388:	add	x16, x16, #0x50
    138c:	br	x17

0000000000001390 <Perl_ck_warner@plt>:
    1390:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1394:	ldr	x17, [x16, #88]
    1398:	add	x16, x16, #0x58
    139c:	br	x17

00000000000013a0 <Perl_newSVnv@plt>:
    13a0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    13a4:	ldr	x17, [x16, #96]
    13a8:	add	x16, x16, #0x60
    13ac:	br	x17

00000000000013b0 <futimens@plt>:
    13b0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    13b4:	ldr	x17, [x16, #104]
    13b8:	add	x16, x16, #0x68
    13bc:	br	x17

00000000000013c0 <Perl_sv_setnv_mg@plt>:
    13c0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    13c4:	ldr	x17, [x16, #112]
    13c8:	add	x16, x16, #0x70
    13cc:	br	x17

00000000000013d0 <getitimer@plt>:
    13d0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    13d4:	ldr	x17, [x16, #120]
    13d8:	add	x16, x16, #0x78
    13dc:	br	x17

00000000000013e0 <memset@plt>:
    13e0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    13e4:	ldr	x17, [x16, #128]
    13e8:	add	x16, x16, #0x80
    13ec:	br	x17

00000000000013f0 <Perl_sv_2pv_flags@plt>:
    13f0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    13f4:	ldr	x17, [x16, #136]
    13f8:	add	x16, x16, #0x88
    13fc:	br	x17

0000000000001400 <Perl_xs_boot_epilog@plt>:
    1400:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1404:	ldr	x17, [x16, #144]
    1408:	add	x16, x16, #0x90
    140c:	br	x17

0000000000001410 <gettimeofday@plt>:
    1410:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1414:	ldr	x17, [x16, #152]
    1418:	add	x16, x16, #0x98
    141c:	br	x17

0000000000001420 <sleep@plt>:
    1420:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1424:	ldr	x17, [x16, #160]
    1428:	add	x16, x16, #0xa0
    142c:	br	x17

0000000000001430 <__stack_chk_fail@plt>:
    1430:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1434:	ldr	x17, [x16, #168]
    1438:	add	x16, x16, #0xa8
    143c:	br	x17

0000000000001440 <__gmon_start__@plt>:
    1440:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1444:	ldr	x17, [x16, #176]
    1448:	add	x16, x16, #0xb0
    144c:	br	x17

0000000000001450 <Perl_croak_xs_usage@plt>:
    1450:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1454:	ldr	x17, [x16, #184]
    1458:	add	x16, x16, #0xb8
    145c:	br	x17

0000000000001460 <Perl_sv_2nv_flags@plt>:
    1460:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1464:	ldr	x17, [x16, #192]
    1468:	add	x16, x16, #0xc0
    146c:	br	x17

0000000000001470 <memcmp@plt>:
    1470:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1474:	ldr	x17, [x16, #200]
    1478:	add	x16, x16, #0xc8
    147c:	br	x17

0000000000001480 <Perl_save_pushptr@plt>:
    1480:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1484:	ldr	x17, [x16, #208]
    1488:	add	x16, x16, #0xd0
    148c:	br	x17

0000000000001490 <Perl_croak_nocontext@plt>:
    1490:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1494:	ldr	x17, [x16, #216]
    1498:	add	x16, x16, #0xd8
    149c:	br	x17

00000000000014a0 <clock_getres@plt>:
    14a0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    14a4:	ldr	x17, [x16, #224]
    14a8:	add	x16, x16, #0xe0
    14ac:	br	x17

00000000000014b0 <nanosleep@plt>:
    14b0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    14b4:	ldr	x17, [x16, #232]
    14b8:	add	x16, x16, #0xe8
    14bc:	br	x17

00000000000014c0 <Perl_dowantarray@plt>:
    14c0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    14c4:	ldr	x17, [x16, #240]
    14c8:	add	x16, x16, #0xf0
    14cc:	br	x17

00000000000014d0 <Perl_newXS_flags@plt>:
    14d0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    14d4:	ldr	x17, [x16, #248]
    14d8:	add	x16, x16, #0xf8
    14dc:	br	x17

00000000000014e0 <Perl_sv_2mortal@plt>:
    14e0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    14e4:	ldr	x17, [x16, #256]
    14e8:	add	x16, x16, #0x100
    14ec:	br	x17

00000000000014f0 <setitimer@plt>:
    14f0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    14f4:	ldr	x17, [x16, #264]
    14f8:	add	x16, x16, #0x108
    14fc:	br	x17

0000000000001500 <utimensat@plt>:
    1500:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1504:	ldr	x17, [x16, #272]
    1508:	add	x16, x16, #0x110
    150c:	br	x17

0000000000001510 <Perl_sv_2io@plt>:
    1510:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1514:	ldr	x17, [x16, #280]
    1518:	add	x16, x16, #0x118
    151c:	br	x17

0000000000001520 <Perl_xs_handshake@plt>:
    1520:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1524:	ldr	x17, [x16, #288]
    1528:	add	x16, x16, #0x120
    152c:	br	x17

0000000000001530 <memchr@plt>:
    1530:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1534:	ldr	x17, [x16, #296]
    1538:	add	x16, x16, #0x128
    153c:	br	x17

0000000000001540 <Perl_hv_common_key_len@plt>:
    1540:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1544:	ldr	x17, [x16, #304]
    1548:	add	x16, x16, #0x130
    154c:	br	x17

0000000000001550 <usleep@plt>:
    1550:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1554:	ldr	x17, [x16, #312]
    1558:	add	x16, x16, #0x138
    155c:	br	x17

0000000000001560 <Perl_block_gimme@plt>:
    1560:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1564:	ldr	x17, [x16, #320]
    1568:	add	x16, x16, #0x140
    156c:	br	x17

0000000000001570 <Perl_newSVpvf_nocontext@plt>:
    1570:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1574:	ldr	x17, [x16, #328]
    1578:	add	x16, x16, #0x148
    157c:	br	x17

0000000000001580 <Perl_push_scope@plt>:
    1580:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1584:	ldr	x17, [x16, #336]
    1588:	add	x16, x16, #0x150
    158c:	br	x17

0000000000001590 <clock_nanosleep@plt>:
    1590:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    1594:	ldr	x17, [x16, #344]
    1598:	add	x16, x16, #0x158
    159c:	br	x17

00000000000015a0 <Perl_newSViv@plt>:
    15a0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    15a4:	ldr	x17, [x16, #352]
    15a8:	add	x16, x16, #0x160
    15ac:	br	x17

00000000000015b0 <__errno_location@plt>:
    15b0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    15b4:	ldr	x17, [x16, #360]
    15b8:	add	x16, x16, #0x168
    15bc:	br	x17

00000000000015c0 <Perl_gv_add_by_type@plt>:
    15c0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    15c4:	ldr	x17, [x16, #368]
    15c8:	add	x16, x16, #0x170
    15cc:	br	x17

00000000000015d0 <Perl_newSVsv_flags@plt>:
    15d0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    15d4:	ldr	x17, [x16, #376]
    15d8:	add	x16, x16, #0x178
    15dc:	br	x17

00000000000015e0 <Perl_sv_newmortal@plt>:
    15e0:	adrp	x16, 18000 <Perl_sv_2iv_flags>
    15e4:	ldr	x17, [x16, #384]
    15e8:	add	x16, x16, #0x180
    15ec:	br	x17

Disassembly of section .text:

00000000000015f0 <call_weak_fn>:
    15f0:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    15f4:	ldr	x0, [x0, #4032]
    15f8:	cbz	x0, 1600 <call_weak_fn+0x10>
    15fc:	b	1440 <__gmon_start__@plt>
    1600:	ret

0000000000001604 <deregister_tm_clones>:
    1604:	stp	x29, x30, [sp, #-32]!
    1608:	mov	x29, sp
    160c:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    1610:	add	x0, x0, #0x190
    1614:	str	x0, [sp, #24]
    1618:	ldr	x0, [sp, #24]
    161c:	str	x0, [sp, #24]
    1620:	ldr	x1, [sp, #24]
    1624:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    1628:	add	x0, x0, #0x190
    162c:	cmp	x1, x0
    1630:	b.eq	1668 <deregister_tm_clones+0x64>  // b.none
    1634:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1638:	ldr	x0, [x0, #4008]
    163c:	str	x0, [sp, #16]
    1640:	ldr	x0, [sp, #16]
    1644:	str	x0, [sp, #16]
    1648:	ldr	x0, [sp, #16]
    164c:	cmp	x0, #0x0
    1650:	b.eq	166c <deregister_tm_clones+0x68>  // b.none
    1654:	ldr	x1, [sp, #16]
    1658:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    165c:	add	x0, x0, #0x190
    1660:	blr	x1
    1664:	b	166c <deregister_tm_clones+0x68>
    1668:	nop
    166c:	ldp	x29, x30, [sp], #32
    1670:	ret

0000000000001674 <register_tm_clones>:
    1674:	stp	x29, x30, [sp, #-48]!
    1678:	mov	x29, sp
    167c:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    1680:	add	x0, x0, #0x190
    1684:	str	x0, [sp, #40]
    1688:	ldr	x0, [sp, #40]
    168c:	str	x0, [sp, #40]
    1690:	ldr	x1, [sp, #40]
    1694:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    1698:	add	x0, x0, #0x190
    169c:	sub	x0, x1, x0
    16a0:	asr	x0, x0, #3
    16a4:	lsr	x1, x0, #63
    16a8:	add	x0, x1, x0
    16ac:	asr	x0, x0, #1
    16b0:	str	x0, [sp, #32]
    16b4:	ldr	x0, [sp, #32]
    16b8:	cmp	x0, #0x0
    16bc:	b.eq	16f8 <register_tm_clones+0x84>  // b.none
    16c0:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    16c4:	ldr	x0, [x0, #4064]
    16c8:	str	x0, [sp, #24]
    16cc:	ldr	x0, [sp, #24]
    16d0:	str	x0, [sp, #24]
    16d4:	ldr	x0, [sp, #24]
    16d8:	cmp	x0, #0x0
    16dc:	b.eq	16fc <register_tm_clones+0x88>  // b.none
    16e0:	ldr	x2, [sp, #24]
    16e4:	ldr	x1, [sp, #32]
    16e8:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    16ec:	add	x0, x0, #0x190
    16f0:	blr	x2
    16f4:	b	16fc <register_tm_clones+0x88>
    16f8:	nop
    16fc:	ldp	x29, x30, [sp], #48
    1700:	ret

0000000000001704 <__do_global_dtors_aux>:
    1704:	stp	x29, x30, [sp, #-16]!
    1708:	mov	x29, sp
    170c:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    1710:	add	x0, x0, #0x190
    1714:	ldrb	w0, [x0]
    1718:	and	x0, x0, #0xff
    171c:	cmp	x0, #0x0
    1720:	b.ne	175c <__do_global_dtors_aux+0x58>  // b.any
    1724:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1728:	ldr	x0, [x0, #4016]
    172c:	cmp	x0, #0x0
    1730:	b.eq	1744 <__do_global_dtors_aux+0x40>  // b.none
    1734:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    1738:	add	x0, x0, #0x188
    173c:	ldr	x0, [x0]
    1740:	bl	1340 <__cxa_finalize@plt>
    1744:	bl	1604 <deregister_tm_clones>
    1748:	adrp	x0, 18000 <Perl_sv_2iv_flags>
    174c:	add	x0, x0, #0x190
    1750:	mov	w1, #0x1                   	// #1
    1754:	strb	w1, [x0]
    1758:	b	1760 <__do_global_dtors_aux+0x5c>
    175c:	nop
    1760:	ldp	x29, x30, [sp], #16
    1764:	ret

0000000000001768 <frame_dummy>:
    1768:	stp	x29, x30, [sp, #-16]!
    176c:	mov	x29, sp
    1770:	bl	1674 <register_tm_clones>
    1774:	nop
    1778:	ldp	x29, x30, [sp], #16
    177c:	ret

0000000000001780 <S_POPMARK>:
    1780:	sub	sp, sp, #0x10
    1784:	str	x0, [sp, #8]
    1788:	ldr	x0, [sp, #8]
    178c:	ldr	x0, [x0, #120]
    1790:	sub	x2, x0, #0x4
    1794:	ldr	x1, [sp, #8]
    1798:	str	x2, [x1, #120]
    179c:	ldr	w0, [x0]
    17a0:	add	sp, sp, #0x10
    17a4:	ret

00000000000017a8 <S_croak_memory_wrap>:
    17a8:	stp	x29, x30, [sp, #-16]!
    17ac:	mov	x29, sp
    17b0:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    17b4:	ldr	x1, [x0, #4048]
    17b8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    17bc:	add	x0, x0, #0x900
    17c0:	bl	1490 <Perl_croak_nocontext@plt>

00000000000017c4 <S_is_safe_syscall>:
    17c4:	stp	x29, x30, [sp, #-80]!
    17c8:	mov	x29, sp
    17cc:	str	x0, [sp, #56]
    17d0:	str	x1, [sp, #48]
    17d4:	str	x2, [sp, #40]
    17d8:	str	x3, [sp, #32]
    17dc:	str	x4, [sp, #24]
    17e0:	ldr	x0, [sp, #40]
    17e4:	cmp	x0, #0x1
    17e8:	b.ls	1868 <S_is_safe_syscall+0xa4>  // b.plast
    17ec:	ldr	x0, [sp, #40]
    17f0:	sub	x0, x0, #0x1
    17f4:	mov	x2, x0
    17f8:	mov	w1, #0x0                   	// #0
    17fc:	ldr	x0, [sp, #48]
    1800:	bl	1530 <memchr@plt>
    1804:	str	x0, [sp, #72]
    1808:	ldr	x0, [sp, #72]
    180c:	cmp	x0, #0x0
    1810:	cset	w0, ne  // ne = any
    1814:	and	w0, w0, #0xff
    1818:	and	x0, x0, #0xff
    181c:	cmp	x0, #0x0
    1820:	b.eq	1868 <S_is_safe_syscall+0xa4>  // b.none
    1824:	bl	15b0 <__errno_location@plt>
    1828:	mov	x1, x0
    182c:	mov	w0, #0x2                   	// #2
    1830:	str	w0, [x1]
    1834:	ldr	x0, [sp, #72]
    1838:	add	x0, x0, #0x1
    183c:	mov	x6, x0
    1840:	ldr	x5, [sp, #48]
    1844:	ldr	x4, [sp, #24]
    1848:	ldr	x3, [sp, #32]
    184c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1850:	add	x2, x0, #0x908
    1854:	mov	w1, #0x39                  	// #57
    1858:	ldr	x0, [sp, #56]
    185c:	bl	1390 <Perl_ck_warner@plt>
    1860:	mov	w0, #0x0                   	// #0
    1864:	b	186c <S_is_safe_syscall+0xa8>
    1868:	mov	w0, #0x1                   	// #1
    186c:	ldp	x29, x30, [sp], #80
    1870:	ret

0000000000001874 <hrt_ualarm_itimero>:
    1874:	stp	x29, x30, [sp, #-80]!
    1878:	mov	x29, sp
    187c:	str	x0, [sp, #24]
    1880:	str	w1, [sp, #20]
    1884:	str	w2, [sp, #16]
    1888:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    188c:	ldr	x0, [x0, #4040]
    1890:	ldr	x1, [x0]
    1894:	str	x1, [sp, #72]
    1898:	mov	x1, #0x0                   	// #0
    189c:	ldr	w0, [sp, #20]
    18a0:	mov	w1, #0xde83                	// #56963
    18a4:	movk	w1, #0x431b, lsl #16
    18a8:	smull	x1, w0, w1
    18ac:	lsr	x1, x1, #32
    18b0:	asr	w1, w1, #18
    18b4:	asr	w0, w0, #31
    18b8:	sub	w0, w1, w0
    18bc:	sxtw	x0, w0
    18c0:	str	x0, [sp, #56]
    18c4:	ldr	w0, [sp, #20]
    18c8:	mov	w1, #0xde83                	// #56963
    18cc:	movk	w1, #0x431b, lsl #16
    18d0:	smull	x1, w0, w1
    18d4:	lsr	x1, x1, #32
    18d8:	asr	w2, w1, #18
    18dc:	asr	w1, w0, #31
    18e0:	sub	w1, w2, w1
    18e4:	mov	w2, #0x4240                	// #16960
    18e8:	movk	w2, #0xf, lsl #16
    18ec:	mul	w1, w1, w2
    18f0:	sub	w1, w0, w1
    18f4:	sxtw	x0, w1
    18f8:	str	x0, [sp, #64]
    18fc:	ldr	w0, [sp, #16]
    1900:	mov	w1, #0xde83                	// #56963
    1904:	movk	w1, #0x431b, lsl #16
    1908:	smull	x1, w0, w1
    190c:	lsr	x1, x1, #32
    1910:	asr	w1, w1, #18
    1914:	asr	w0, w0, #31
    1918:	sub	w0, w1, w0
    191c:	sxtw	x0, w0
    1920:	str	x0, [sp, #40]
    1924:	ldr	w0, [sp, #16]
    1928:	mov	w1, #0xde83                	// #56963
    192c:	movk	w1, #0x431b, lsl #16
    1930:	smull	x1, w0, w1
    1934:	lsr	x1, x1, #32
    1938:	asr	w2, w1, #18
    193c:	asr	w1, w0, #31
    1940:	sub	w1, w2, w1
    1944:	mov	w2, #0x4240                	// #16960
    1948:	movk	w2, #0xf, lsl #16
    194c:	mul	w1, w1, w2
    1950:	sub	w1, w0, w1
    1954:	sxtw	x0, w1
    1958:	str	x0, [sp, #48]
    195c:	add	x0, sp, #0x28
    1960:	ldr	x2, [sp, #24]
    1964:	mov	x1, x0
    1968:	mov	w0, #0x0                   	// #0
    196c:	bl	14f0 <setitimer@plt>
    1970:	mov	w1, w0
    1974:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1978:	ldr	x0, [x0, #4040]
    197c:	ldr	x2, [sp, #72]
    1980:	ldr	x0, [x0]
    1984:	eor	x0, x2, x0
    1988:	cmp	x0, #0x0
    198c:	b.eq	1994 <hrt_ualarm_itimero+0x120>  // b.none
    1990:	bl	1430 <__stack_chk_fail@plt>
    1994:	mov	w0, w1
    1998:	ldp	x29, x30, [sp], #80
    199c:	ret

00000000000019a0 <myU2time>:
    19a0:	stp	x29, x30, [sp, #-64]!
    19a4:	mov	x29, sp
    19a8:	str	x0, [sp, #24]
    19ac:	str	x1, [sp, #16]
    19b0:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    19b4:	ldr	x0, [x0, #4040]
    19b8:	ldr	x1, [x0]
    19bc:	str	x1, [sp, #56]
    19c0:	mov	x1, #0x0                   	// #0
    19c4:	add	x0, sp, #0x28
    19c8:	mov	x1, #0x0                   	// #0
    19cc:	bl	1410 <gettimeofday@plt>
    19d0:	str	w0, [sp, #36]
    19d4:	ldr	x0, [sp, #40]
    19d8:	mov	x1, x0
    19dc:	ldr	x0, [sp, #16]
    19e0:	str	x1, [x0]
    19e4:	ldr	x1, [sp, #48]
    19e8:	ldr	x0, [sp, #16]
    19ec:	add	x0, x0, #0x8
    19f0:	str	x1, [x0]
    19f4:	ldr	w0, [sp, #36]
    19f8:	mov	w1, w0
    19fc:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1a00:	ldr	x0, [x0, #4040]
    1a04:	ldr	x2, [sp, #56]
    1a08:	ldr	x0, [x0]
    1a0c:	eor	x0, x2, x0
    1a10:	cmp	x0, #0x0
    1a14:	b.eq	1a1c <myU2time+0x7c>  // b.none
    1a18:	bl	1430 <__stack_chk_fail@plt>
    1a1c:	mov	w0, w1
    1a20:	ldp	x29, x30, [sp], #64
    1a24:	ret

0000000000001a28 <myNVtime>:
    1a28:	stp	x29, x30, [sp, #-48]!
    1a2c:	mov	x29, sp
    1a30:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1a34:	ldr	x0, [x0, #4040]
    1a38:	ldr	x1, [x0]
    1a3c:	str	x1, [sp, #40]
    1a40:	mov	x1, #0x0                   	// #0
    1a44:	add	x0, sp, #0x18
    1a48:	mov	x1, #0x0                   	// #0
    1a4c:	bl	1410 <gettimeofday@plt>
    1a50:	str	w0, [sp, #20]
    1a54:	ldr	w0, [sp, #20]
    1a58:	cmp	w0, #0x0
    1a5c:	b.ne	1a88 <myNVtime+0x60>  // b.any
    1a60:	ldr	d0, [sp, #24]
    1a64:	scvtf	d1, d0
    1a68:	ldr	d0, [sp, #32]
    1a6c:	scvtf	d0, d0
    1a70:	mov	x0, #0x848000000000        	// #145685290680320
    1a74:	movk	x0, #0x412e, lsl #48
    1a78:	fmov	d2, x0
    1a7c:	fdiv	d0, d0, d2
    1a80:	fadd	d0, d1, d0
    1a84:	b	1a8c <myNVtime+0x64>
    1a88:	fmov	d0, #-1.000000000000000000e+00
    1a8c:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1a90:	ldr	x0, [x0, #4040]
    1a94:	ldr	x1, [sp, #40]
    1a98:	ldr	x0, [x0]
    1a9c:	eor	x0, x1, x0
    1aa0:	cmp	x0, #0x0
    1aa4:	b.eq	1aac <myNVtime+0x84>  // b.none
    1aa8:	bl	1430 <__stack_chk_fail@plt>
    1aac:	ldp	x29, x30, [sp], #48
    1ab0:	ret

0000000000001ab4 <hrstatns>:
    1ab4:	stp	x29, x30, [sp, #-64]!
    1ab8:	mov	x29, sp
    1abc:	str	x0, [sp, #40]
    1ac0:	str	x1, [sp, #32]
    1ac4:	str	x2, [sp, #24]
    1ac8:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    1acc:	ldr	x0, [x0, #4024]
    1ad0:	ldr	w0, [x0]
    1ad4:	bl	1370 <pthread_getspecific@plt>
    1ad8:	str	x0, [sp, #56]
    1adc:	ldr	x0, [sp, #56]
    1ae0:	ldr	x0, [x0, #616]
    1ae4:	mov	x1, x0
    1ae8:	ldr	x0, [sp, #40]
    1aec:	str	x1, [x0]
    1af0:	ldr	x0, [sp, #56]
    1af4:	ldr	x0, [x0, #632]
    1af8:	mov	x1, x0
    1afc:	ldr	x0, [sp, #32]
    1b00:	str	x1, [x0]
    1b04:	ldr	x0, [sp, #56]
    1b08:	ldr	x0, [x0, #648]
    1b0c:	mov	x1, x0
    1b10:	ldr	x0, [sp, #24]
    1b14:	str	x1, [x0]
    1b18:	nop
    1b1c:	ldp	x29, x30, [sp], #64
    1b20:	ret

0000000000001b24 <constant_11>:
    1b24:	stp	x29, x30, [sp, #-48]!
    1b28:	mov	x29, sp
    1b2c:	str	x0, [sp, #40]
    1b30:	str	x1, [sp, #32]
    1b34:	str	x2, [sp, #24]
    1b38:	ldr	x0, [sp, #32]
    1b3c:	add	x0, x0, #0x7
    1b40:	ldrb	w0, [x0]
    1b44:	cmp	w0, #0x6e
    1b48:	b.eq	1c74 <constant_11+0x150>  // b.none
    1b4c:	cmp	w0, #0x6e
    1b50:	b.gt	1cc8 <constant_11+0x1a4>
    1b54:	cmp	w0, #0x6c
    1b58:	b.eq	1c44 <constant_11+0x120>  // b.none
    1b5c:	cmp	w0, #0x6c
    1b60:	b.gt	1cc8 <constant_11+0x1a4>
    1b64:	cmp	w0, #0x69
    1b68:	b.eq	1be4 <constant_11+0xc0>  // b.none
    1b6c:	cmp	w0, #0x69
    1b70:	b.gt	1cc8 <constant_11+0x1a4>
    1b74:	cmp	w0, #0x50
    1b78:	b.eq	1b88 <constant_11+0x64>  // b.none
    1b7c:	cmp	w0, #0x52
    1b80:	b.eq	1bb8 <constant_11+0x94>  // b.none
    1b84:	b	1cc8 <constant_11+0x1a4>
    1b88:	mov	x2, #0xb                   	// #11
    1b8c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1b90:	add	x1, x0, #0x938
    1b94:	ldr	x0, [sp, #32]
    1b98:	bl	1470 <memcmp@plt>
    1b9c:	cmp	w0, #0x0
    1ba0:	b.ne	1ca4 <constant_11+0x180>  // b.any
    1ba4:	ldr	x0, [sp, #24]
    1ba8:	mov	x1, #0x2                   	// #2
    1bac:	str	x1, [x0]
    1bb0:	mov	w0, #0x3                   	// #3
    1bb4:	b	1ccc <constant_11+0x1a8>
    1bb8:	mov	x2, #0xb                   	// #11
    1bbc:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1bc0:	add	x1, x0, #0x948
    1bc4:	ldr	x0, [sp, #32]
    1bc8:	bl	1470 <memcmp@plt>
    1bcc:	cmp	w0, #0x0
    1bd0:	b.ne	1cac <constant_11+0x188>  // b.any
    1bd4:	ldr	x0, [sp, #24]
    1bd8:	str	xzr, [x0]
    1bdc:	mov	w0, #0x3                   	// #3
    1be0:	b	1ccc <constant_11+0x1a8>
    1be4:	mov	x2, #0xb                   	// #11
    1be8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1bec:	add	x1, x0, #0x958
    1bf0:	ldr	x0, [sp, #32]
    1bf4:	bl	1470 <memcmp@plt>
    1bf8:	cmp	w0, #0x0
    1bfc:	b.ne	1c14 <constant_11+0xf0>  // b.any
    1c00:	ldr	x0, [sp, #24]
    1c04:	mov	x1, #0x1                   	// #1
    1c08:	str	x1, [x0]
    1c0c:	mov	w0, #0x3                   	// #3
    1c10:	b	1ccc <constant_11+0x1a8>
    1c14:	mov	x2, #0xb                   	// #11
    1c18:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1c1c:	add	x1, x0, #0x968
    1c20:	ldr	x0, [sp, #32]
    1c24:	bl	1470 <memcmp@plt>
    1c28:	cmp	w0, #0x0
    1c2c:	b.ne	1cb4 <constant_11+0x190>  // b.any
    1c30:	ldr	x0, [sp, #24]
    1c34:	mov	x1, #0x1                   	// #1
    1c38:	str	x1, [x0]
    1c3c:	mov	w0, #0x3                   	// #3
    1c40:	b	1ccc <constant_11+0x1a8>
    1c44:	mov	x2, #0xb                   	// #11
    1c48:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1c4c:	add	x1, x0, #0x978
    1c50:	ldr	x0, [sp, #32]
    1c54:	bl	1470 <memcmp@plt>
    1c58:	cmp	w0, #0x0
    1c5c:	b.ne	1cbc <constant_11+0x198>  // b.any
    1c60:	ldr	x0, [sp, #24]
    1c64:	mov	x1, #0x1                   	// #1
    1c68:	str	x1, [x0]
    1c6c:	mov	w0, #0x3                   	// #3
    1c70:	b	1ccc <constant_11+0x1a8>
    1c74:	mov	x2, #0xb                   	// #11
    1c78:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1c7c:	add	x1, x0, #0x988
    1c80:	ldr	x0, [sp, #32]
    1c84:	bl	1470 <memcmp@plt>
    1c88:	cmp	w0, #0x0
    1c8c:	b.ne	1cc4 <constant_11+0x1a0>  // b.any
    1c90:	ldr	x0, [sp, #24]
    1c94:	mov	x1, #0x1                   	// #1
    1c98:	str	x1, [x0]
    1c9c:	mov	w0, #0x3                   	// #3
    1ca0:	b	1ccc <constant_11+0x1a8>
    1ca4:	nop
    1ca8:	b	1cc8 <constant_11+0x1a4>
    1cac:	nop
    1cb0:	b	1cc8 <constant_11+0x1a4>
    1cb4:	nop
    1cb8:	b	1cc8 <constant_11+0x1a4>
    1cbc:	nop
    1cc0:	b	1cc8 <constant_11+0x1a4>
    1cc4:	nop
    1cc8:	mov	w0, #0x1                   	// #1
    1ccc:	ldp	x29, x30, [sp], #48
    1cd0:	ret

0000000000001cd4 <constant_12>:
    1cd4:	stp	x29, x30, [sp, #-48]!
    1cd8:	mov	x29, sp
    1cdc:	str	x0, [sp, #40]
    1ce0:	str	x1, [sp, #32]
    1ce4:	str	x2, [sp, #24]
    1ce8:	ldr	x0, [sp, #32]
    1cec:	add	x0, x0, #0xa
    1cf0:	ldrb	w0, [x0]
    1cf4:	cmp	w0, #0x61
    1cf8:	b.eq	1d60 <constant_12+0x8c>  // b.none
    1cfc:	cmp	w0, #0x61
    1d00:	b.gt	1da4 <constant_12+0xd0>
    1d04:	cmp	w0, #0x4d
    1d08:	b.eq	1d18 <constant_12+0x44>  // b.none
    1d0c:	cmp	w0, #0x4e
    1d10:	b.eq	1d3c <constant_12+0x68>  // b.none
    1d14:	b	1da4 <constant_12+0xd0>
    1d18:	mov	x2, #0xc                   	// #12
    1d1c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1d20:	add	x1, x0, #0x998
    1d24:	ldr	x0, [sp, #32]
    1d28:	bl	1470 <memcmp@plt>
    1d2c:	cmp	w0, #0x0
    1d30:	b.ne	1d90 <constant_12+0xbc>  // b.any
    1d34:	mov	w0, #0x2                   	// #2
    1d38:	b	1da8 <constant_12+0xd4>
    1d3c:	mov	x2, #0xc                   	// #12
    1d40:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1d44:	add	x1, x0, #0x9a8
    1d48:	ldr	x0, [sp, #32]
    1d4c:	bl	1470 <memcmp@plt>
    1d50:	cmp	w0, #0x0
    1d54:	b.ne	1d98 <constant_12+0xc4>  // b.any
    1d58:	mov	w0, #0x2                   	// #2
    1d5c:	b	1da8 <constant_12+0xd4>
    1d60:	mov	x2, #0xc                   	// #12
    1d64:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1d68:	add	x1, x0, #0x9b8
    1d6c:	ldr	x0, [sp, #32]
    1d70:	bl	1470 <memcmp@plt>
    1d74:	cmp	w0, #0x0
    1d78:	b.ne	1da0 <constant_12+0xcc>  // b.any
    1d7c:	ldr	x0, [sp, #24]
    1d80:	mov	x1, #0x4                   	// #4
    1d84:	str	x1, [x0]
    1d88:	mov	w0, #0x3                   	// #3
    1d8c:	b	1da8 <constant_12+0xd4>
    1d90:	nop
    1d94:	b	1da4 <constant_12+0xd0>
    1d98:	nop
    1d9c:	b	1da4 <constant_12+0xd0>
    1da0:	nop
    1da4:	mov	w0, #0x1                   	// #1
    1da8:	ldp	x29, x30, [sp], #48
    1dac:	ret

0000000000001db0 <constant_13>:
    1db0:	stp	x29, x30, [sp, #-48]!
    1db4:	mov	x29, sp
    1db8:	str	x0, [sp, #40]
    1dbc:	str	x1, [sp, #32]
    1dc0:	str	x2, [sp, #24]
    1dc4:	ldr	x0, [sp, #32]
    1dc8:	add	x0, x0, #0xc
    1dcc:	ldrb	w0, [x0]
    1dd0:	cmp	w0, #0x65
    1dd4:	b.eq	1e7c <constant_13+0xcc>  // b.none
    1dd8:	cmp	w0, #0x65
    1ddc:	b.gt	1ec8 <constant_13+0x118>
    1de0:	cmp	w0, #0x53
    1de4:	b.eq	1e58 <constant_13+0xa8>  // b.none
    1de8:	cmp	w0, #0x53
    1dec:	b.gt	1ec8 <constant_13+0x118>
    1df0:	cmp	w0, #0x45
    1df4:	b.eq	1e04 <constant_13+0x54>  // b.none
    1df8:	cmp	w0, #0x4c
    1dfc:	b.eq	1e34 <constant_13+0x84>  // b.none
    1e00:	b	1ec8 <constant_13+0x118>
    1e04:	mov	x2, #0xc                   	// #12
    1e08:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1e0c:	add	x1, x0, #0x9c8
    1e10:	ldr	x0, [sp, #32]
    1e14:	bl	1470 <memcmp@plt>
    1e18:	cmp	w0, #0x0
    1e1c:	b.ne	1eac <constant_13+0xfc>  // b.any
    1e20:	ldr	x0, [sp, #24]
    1e24:	mov	x1, #0x1                   	// #1
    1e28:	str	x1, [x0]
    1e2c:	mov	w0, #0x3                   	// #3
    1e30:	b	1ecc <constant_13+0x11c>
    1e34:	mov	x2, #0xc                   	// #12
    1e38:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1e3c:	add	x1, x0, #0x9d8
    1e40:	ldr	x0, [sp, #32]
    1e44:	bl	1470 <memcmp@plt>
    1e48:	cmp	w0, #0x0
    1e4c:	b.ne	1eb4 <constant_13+0x104>  // b.any
    1e50:	mov	w0, #0x2                   	// #2
    1e54:	b	1ecc <constant_13+0x11c>
    1e58:	mov	x2, #0xc                   	// #12
    1e5c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1e60:	add	x1, x0, #0x9e8
    1e64:	ldr	x0, [sp, #32]
    1e68:	bl	1470 <memcmp@plt>
    1e6c:	cmp	w0, #0x0
    1e70:	b.ne	1ebc <constant_13+0x10c>  // b.any
    1e74:	mov	w0, #0x2                   	// #2
    1e78:	b	1ecc <constant_13+0x11c>
    1e7c:	mov	x2, #0xc                   	// #12
    1e80:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1e84:	add	x1, x0, #0x9f8
    1e88:	ldr	x0, [sp, #32]
    1e8c:	bl	1470 <memcmp@plt>
    1e90:	cmp	w0, #0x0
    1e94:	b.ne	1ec4 <constant_13+0x114>  // b.any
    1e98:	ldr	x0, [sp, #24]
    1e9c:	mov	x1, #0x1                   	// #1
    1ea0:	str	x1, [x0]
    1ea4:	mov	w0, #0x3                   	// #3
    1ea8:	b	1ecc <constant_13+0x11c>
    1eac:	nop
    1eb0:	b	1ec8 <constant_13+0x118>
    1eb4:	nop
    1eb8:	b	1ec8 <constant_13+0x118>
    1ebc:	nop
    1ec0:	b	1ec8 <constant_13+0x118>
    1ec4:	nop
    1ec8:	mov	w0, #0x1                   	// #1
    1ecc:	ldp	x29, x30, [sp], #48
    1ed0:	ret

0000000000001ed4 <constant_14>:
    1ed4:	stp	x29, x30, [sp, #-48]!
    1ed8:	mov	x29, sp
    1edc:	str	x0, [sp, #40]
    1ee0:	str	x1, [sp, #32]
    1ee4:	str	x2, [sp, #24]
    1ee8:	ldr	x0, [sp, #32]
    1eec:	add	x0, x0, #0x8
    1ef0:	ldrb	w0, [x0]
    1ef4:	cmp	w0, #0x67
    1ef8:	b.eq	206c <constant_14+0x198>  // b.none
    1efc:	cmp	w0, #0x67
    1f00:	b.gt	20d0 <constant_14+0x1fc>
    1f04:	cmp	w0, #0x65
    1f08:	b.eq	203c <constant_14+0x168>  // b.none
    1f0c:	cmp	w0, #0x65
    1f10:	b.gt	20d0 <constant_14+0x1fc>
    1f14:	cmp	w0, #0x4f
    1f18:	b.eq	200c <constant_14+0x138>  // b.none
    1f1c:	cmp	w0, #0x4f
    1f20:	b.gt	20d0 <constant_14+0x1fc>
    1f24:	cmp	w0, #0x49
    1f28:	b.eq	1fdc <constant_14+0x108>  // b.none
    1f2c:	cmp	w0, #0x49
    1f30:	b.gt	20d0 <constant_14+0x1fc>
    1f34:	cmp	w0, #0x46
    1f38:	b.eq	1fb8 <constant_14+0xe4>  // b.none
    1f3c:	cmp	w0, #0x46
    1f40:	b.gt	20d0 <constant_14+0x1fc>
    1f44:	cmp	w0, #0x41
    1f48:	b.eq	1f58 <constant_14+0x84>  // b.none
    1f4c:	cmp	w0, #0x45
    1f50:	b.eq	1f84 <constant_14+0xb0>  // b.none
    1f54:	b	20d0 <constant_14+0x1fc>
    1f58:	mov	x2, #0xe                   	// #14
    1f5c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1f60:	add	x1, x0, #0xa08
    1f64:	ldr	x0, [sp, #32]
    1f68:	bl	1470 <memcmp@plt>
    1f6c:	cmp	w0, #0x0
    1f70:	b.ne	209c <constant_14+0x1c8>  // b.any
    1f74:	ldr	x0, [sp, #24]
    1f78:	str	xzr, [x0]
    1f7c:	mov	w0, #0x3                   	// #3
    1f80:	b	20d4 <constant_14+0x200>
    1f84:	mov	x2, #0xe                   	// #14
    1f88:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1f8c:	add	x1, x0, #0xa18
    1f90:	ldr	x0, [sp, #32]
    1f94:	bl	1470 <memcmp@plt>
    1f98:	cmp	w0, #0x0
    1f9c:	b.ne	20a4 <constant_14+0x1d0>  // b.any
    1fa0:	ldr	x0, [sp, #24]
    1fa4:	mov	x1, #0x4240                	// #16960
    1fa8:	movk	x1, #0xf, lsl #16
    1fac:	str	x1, [x0]
    1fb0:	mov	w0, #0x3                   	// #3
    1fb4:	b	20d4 <constant_14+0x200>
    1fb8:	mov	x2, #0xe                   	// #14
    1fbc:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1fc0:	add	x1, x0, #0xa28
    1fc4:	ldr	x0, [sp, #32]
    1fc8:	bl	1470 <memcmp@plt>
    1fcc:	cmp	w0, #0x0
    1fd0:	b.ne	20ac <constant_14+0x1d8>  // b.any
    1fd4:	mov	w0, #0x2                   	// #2
    1fd8:	b	20d4 <constant_14+0x200>
    1fdc:	mov	x2, #0xe                   	// #14
    1fe0:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    1fe4:	add	x1, x0, #0xa38
    1fe8:	ldr	x0, [sp, #32]
    1fec:	bl	1470 <memcmp@plt>
    1ff0:	cmp	w0, #0x0
    1ff4:	b.ne	20b4 <constant_14+0x1e0>  // b.any
    1ff8:	ldr	x0, [sp, #24]
    1ffc:	mov	x1, #0x1                   	// #1
    2000:	str	x1, [x0]
    2004:	mov	w0, #0x3                   	// #3
    2008:	b	20d4 <constant_14+0x200>
    200c:	mov	x2, #0xe                   	// #14
    2010:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2014:	add	x1, x0, #0xa48
    2018:	ldr	x0, [sp, #32]
    201c:	bl	1470 <memcmp@plt>
    2020:	cmp	w0, #0x0
    2024:	b.ne	20bc <constant_14+0x1e8>  // b.any
    2028:	ldr	x0, [sp, #24]
    202c:	mov	x1, #0x7                   	// #7
    2030:	str	x1, [x0]
    2034:	mov	w0, #0x3                   	// #3
    2038:	b	20d4 <constant_14+0x200>
    203c:	mov	x2, #0xe                   	// #14
    2040:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2044:	add	x1, x0, #0xa58
    2048:	ldr	x0, [sp, #32]
    204c:	bl	1470 <memcmp@plt>
    2050:	cmp	w0, #0x0
    2054:	b.ne	20c4 <constant_14+0x1f0>  // b.any
    2058:	ldr	x0, [sp, #24]
    205c:	mov	x1, #0x1                   	// #1
    2060:	str	x1, [x0]
    2064:	mov	w0, #0x3                   	// #3
    2068:	b	20d4 <constant_14+0x200>
    206c:	mov	x2, #0xe                   	// #14
    2070:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2074:	add	x1, x0, #0xa68
    2078:	ldr	x0, [sp, #32]
    207c:	bl	1470 <memcmp@plt>
    2080:	cmp	w0, #0x0
    2084:	b.ne	20cc <constant_14+0x1f8>  // b.any
    2088:	ldr	x0, [sp, #24]
    208c:	mov	x1, #0x1                   	// #1
    2090:	str	x1, [x0]
    2094:	mov	w0, #0x3                   	// #3
    2098:	b	20d4 <constant_14+0x200>
    209c:	nop
    20a0:	b	20d0 <constant_14+0x1fc>
    20a4:	nop
    20a8:	b	20d0 <constant_14+0x1fc>
    20ac:	nop
    20b0:	b	20d0 <constant_14+0x1fc>
    20b4:	nop
    20b8:	b	20d0 <constant_14+0x1fc>
    20bc:	nop
    20c0:	b	20d0 <constant_14+0x1fc>
    20c4:	nop
    20c8:	b	20d0 <constant_14+0x1fc>
    20cc:	nop
    20d0:	mov	w0, #0x1                   	// #1
    20d4:	ldp	x29, x30, [sp], #48
    20d8:	ret

00000000000020dc <constant_15>:
    20dc:	stp	x29, x30, [sp, #-48]!
    20e0:	mov	x29, sp
    20e4:	str	x0, [sp, #40]
    20e8:	str	x1, [sp, #32]
    20ec:	str	x2, [sp, #24]
    20f0:	ldr	x0, [sp, #32]
    20f4:	add	x0, x0, #0x7
    20f8:	ldrb	w0, [x0]
    20fc:	cmp	w0, #0x5f
    2100:	b.eq	21a8 <constant_15+0xcc>  // b.none
    2104:	cmp	w0, #0x5f
    2108:	b.gt	21f4 <constant_15+0x118>
    210c:	cmp	w0, #0x52
    2110:	b.eq	2184 <constant_15+0xa8>  // b.none
    2114:	cmp	w0, #0x52
    2118:	b.gt	21f4 <constant_15+0x118>
    211c:	cmp	w0, #0x49
    2120:	b.eq	2130 <constant_15+0x54>  // b.none
    2124:	cmp	w0, #0x4f
    2128:	b.eq	2154 <constant_15+0x78>  // b.none
    212c:	b	21f4 <constant_15+0x118>
    2130:	mov	x2, #0xf                   	// #15
    2134:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2138:	add	x1, x0, #0xa78
    213c:	ldr	x0, [sp, #32]
    2140:	bl	1470 <memcmp@plt>
    2144:	cmp	w0, #0x0
    2148:	b.ne	21d8 <constant_15+0xfc>  // b.any
    214c:	mov	w0, #0x2                   	// #2
    2150:	b	21f8 <constant_15+0x11c>
    2154:	mov	x2, #0xf                   	// #15
    2158:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    215c:	add	x1, x0, #0xa88
    2160:	ldr	x0, [sp, #32]
    2164:	bl	1470 <memcmp@plt>
    2168:	cmp	w0, #0x0
    216c:	b.ne	21e0 <constant_15+0x104>  // b.any
    2170:	ldr	x0, [sp, #24]
    2174:	mov	x1, #0x1                   	// #1
    2178:	str	x1, [x0]
    217c:	mov	w0, #0x3                   	// #3
    2180:	b	21f8 <constant_15+0x11c>
    2184:	mov	x2, #0xf                   	// #15
    2188:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    218c:	add	x1, x0, #0xa98
    2190:	ldr	x0, [sp, #32]
    2194:	bl	1470 <memcmp@plt>
    2198:	cmp	w0, #0x0
    219c:	b.ne	21e8 <constant_15+0x10c>  // b.any
    21a0:	mov	w0, #0x2                   	// #2
    21a4:	b	21f8 <constant_15+0x11c>
    21a8:	mov	x2, #0xf                   	// #15
    21ac:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    21b0:	add	x1, x0, #0xaa8
    21b4:	ldr	x0, [sp, #32]
    21b8:	bl	1470 <memcmp@plt>
    21bc:	cmp	w0, #0x0
    21c0:	b.ne	21f0 <constant_15+0x114>  // b.any
    21c4:	ldr	x0, [sp, #24]
    21c8:	mov	x1, #0x1                   	// #1
    21cc:	str	x1, [x0]
    21d0:	mov	w0, #0x3                   	// #3
    21d4:	b	21f8 <constant_15+0x11c>
    21d8:	nop
    21dc:	b	21f4 <constant_15+0x118>
    21e0:	nop
    21e4:	b	21f4 <constant_15+0x118>
    21e8:	nop
    21ec:	b	21f4 <constant_15+0x118>
    21f0:	nop
    21f4:	mov	w0, #0x1                   	// #1
    21f8:	ldp	x29, x30, [sp], #48
    21fc:	ret

0000000000002200 <constant_19>:
    2200:	stp	x29, x30, [sp, #-48]!
    2204:	mov	x29, sp
    2208:	str	x0, [sp, #40]
    220c:	str	x1, [sp, #32]
    2210:	str	x2, [sp, #24]
    2214:	ldr	x0, [sp, #32]
    2218:	add	x0, x0, #0x9
    221c:	ldrb	w0, [x0]
    2220:	cmp	w0, #0x4f
    2224:	b.eq	228c <constant_19+0x8c>  // b.none
    2228:	cmp	w0, #0x4f
    222c:	b.gt	22d0 <constant_19+0xd0>
    2230:	cmp	w0, #0x49
    2234:	b.eq	2244 <constant_19+0x44>  // b.none
    2238:	cmp	w0, #0x4c
    223c:	b.eq	2268 <constant_19+0x68>  // b.none
    2240:	b	22d0 <constant_19+0xd0>
    2244:	mov	x2, #0x13                  	// #19
    2248:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    224c:	add	x1, x0, #0xab8
    2250:	ldr	x0, [sp, #32]
    2254:	bl	1470 <memcmp@plt>
    2258:	cmp	w0, #0x0
    225c:	b.ne	22bc <constant_19+0xbc>  // b.any
    2260:	mov	w0, #0x2                   	// #2
    2264:	b	22d4 <constant_19+0xd4>
    2268:	mov	x2, #0x13                  	// #19
    226c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2270:	add	x1, x0, #0xad0
    2274:	ldr	x0, [sp, #32]
    2278:	bl	1470 <memcmp@plt>
    227c:	cmp	w0, #0x0
    2280:	b.ne	22c4 <constant_19+0xc4>  // b.any
    2284:	mov	w0, #0x2                   	// #2
    2288:	b	22d4 <constant_19+0xd4>
    228c:	mov	x2, #0x13                  	// #19
    2290:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2294:	add	x1, x0, #0xae8
    2298:	ldr	x0, [sp, #32]
    229c:	bl	1470 <memcmp@plt>
    22a0:	cmp	w0, #0x0
    22a4:	b.ne	22cc <constant_19+0xcc>  // b.any
    22a8:	ldr	x0, [sp, #24]
    22ac:	mov	x1, #0x4                   	// #4
    22b0:	str	x1, [x0]
    22b4:	mov	w0, #0x3                   	// #3
    22b8:	b	22d4 <constant_19+0xd4>
    22bc:	nop
    22c0:	b	22d0 <constant_19+0xd0>
    22c4:	nop
    22c8:	b	22d0 <constant_19+0xd0>
    22cc:	nop
    22d0:	mov	w0, #0x1                   	// #1
    22d4:	ldp	x29, x30, [sp], #48
    22d8:	ret

00000000000022dc <constant>:
    22dc:	stp	x29, x30, [sp, #-48]!
    22e0:	mov	x29, sp
    22e4:	str	x0, [sp, #40]
    22e8:	str	x1, [sp, #32]
    22ec:	str	x2, [sp, #24]
    22f0:	str	x3, [sp, #16]
    22f4:	ldr	x0, [sp, #24]
    22f8:	sub	x0, x0, #0x7
    22fc:	cmp	x0, #0x11
    2300:	b.hi	27b0 <constant+0x4d4>  // b.pmore
    2304:	cmp	w0, #0x11
    2308:	b.hi	27b0 <constant+0x4d4>  // b.pmore
    230c:	adrp	x1, 6000 <XS_Time__HiRes_stat+0x1a8>
    2310:	add	x1, x1, #0xc5c
    2314:	ldr	w0, [x1, w0, uxtw #2]
    2318:	adr	x1, 2324 <constant+0x48>
    231c:	add	x0, x1, w0, sxtw #2
    2320:	br	x0
    2324:	mov	x2, #0x7                   	// #7
    2328:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    232c:	add	x1, x0, #0xb00
    2330:	ldr	x0, [sp, #32]
    2334:	bl	1470 <memcmp@plt>
    2338:	cmp	w0, #0x0
    233c:	b.ne	278c <constant+0x4b0>  // b.any
    2340:	ldr	x0, [sp, #16]
    2344:	mov	x1, #0x1                   	// #1
    2348:	str	x1, [x0]
    234c:	mov	w0, #0x3                   	// #3
    2350:	b	27b4 <constant+0x4d8>
    2354:	ldr	x0, [sp, #32]
    2358:	add	x0, x0, #0x7
    235c:	ldrb	w0, [x0]
    2360:	cmp	w0, #0x6d
    2364:	b.eq	2374 <constant+0x98>  // b.none
    2368:	cmp	w0, #0x70
    236c:	b.eq	23a4 <constant+0xc8>  // b.none
    2370:	b	27b0 <constant+0x4d4>
    2374:	mov	x2, #0x7                   	// #7
    2378:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    237c:	add	x1, x0, #0xb08
    2380:	ldr	x0, [sp, #32]
    2384:	bl	1470 <memcmp@plt>
    2388:	cmp	w0, #0x0
    238c:	b.ne	23d4 <constant+0xf8>  // b.any
    2390:	ldr	x0, [sp, #16]
    2394:	mov	x1, #0x1                   	// #1
    2398:	str	x1, [x0]
    239c:	mov	w0, #0x3                   	// #3
    23a0:	b	27b4 <constant+0x4d8>
    23a4:	mov	x2, #0x7                   	// #7
    23a8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    23ac:	add	x1, x0, #0xb10
    23b0:	ldr	x0, [sp, #32]
    23b4:	bl	1470 <memcmp@plt>
    23b8:	cmp	w0, #0x0
    23bc:	b.ne	23dc <constant+0x100>  // b.any
    23c0:	ldr	x0, [sp, #16]
    23c4:	mov	x1, #0x1                   	// #1
    23c8:	str	x1, [x0]
    23cc:	mov	w0, #0x3                   	// #3
    23d0:	b	27b4 <constant+0x4d8>
    23d4:	nop
    23d8:	b	27b0 <constant+0x4d4>
    23dc:	nop
    23e0:	b	27b0 <constant+0x4d4>
    23e4:	ldr	x0, [sp, #32]
    23e8:	add	x0, x0, #0x5
    23ec:	ldrb	w0, [x0]
    23f0:	cmp	w0, #0x5f
    23f4:	b.eq	2404 <constant+0x128>  // b.none
    23f8:	cmp	w0, #0x69
    23fc:	b.eq	2428 <constant+0x14c>  // b.none
    2400:	b	27b0 <constant+0x4d4>
    2404:	mov	x2, #0xa                   	// #10
    2408:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    240c:	add	x1, x0, #0xb18
    2410:	ldr	x0, [sp, #32]
    2414:	bl	1470 <memcmp@plt>
    2418:	cmp	w0, #0x0
    241c:	b.ne	2458 <constant+0x17c>  // b.any
    2420:	mov	w0, #0x2                   	// #2
    2424:	b	27b4 <constant+0x4d8>
    2428:	mov	x2, #0xa                   	// #10
    242c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2430:	add	x1, x0, #0xb28
    2434:	ldr	x0, [sp, #32]
    2438:	bl	1470 <memcmp@plt>
    243c:	cmp	w0, #0x0
    2440:	b.ne	2460 <constant+0x184>  // b.any
    2444:	ldr	x0, [sp, #16]
    2448:	mov	x1, #0x1                   	// #1
    244c:	str	x1, [x0]
    2450:	mov	w0, #0x3                   	// #3
    2454:	b	27b4 <constant+0x4d8>
    2458:	nop
    245c:	b	27b0 <constant+0x4d4>
    2460:	nop
    2464:	b	27b0 <constant+0x4d4>
    2468:	ldr	x2, [sp, #16]
    246c:	ldr	x1, [sp, #32]
    2470:	ldr	x0, [sp, #40]
    2474:	bl	1b24 <constant_11>
    2478:	b	27b4 <constant+0x4d8>
    247c:	ldr	x2, [sp, #16]
    2480:	ldr	x1, [sp, #32]
    2484:	ldr	x0, [sp, #40]
    2488:	bl	1cd4 <constant_12>
    248c:	b	27b4 <constant+0x4d8>
    2490:	ldr	x2, [sp, #16]
    2494:	ldr	x1, [sp, #32]
    2498:	ldr	x0, [sp, #40]
    249c:	bl	1db0 <constant_13>
    24a0:	b	27b4 <constant+0x4d8>
    24a4:	ldr	x2, [sp, #16]
    24a8:	ldr	x1, [sp, #32]
    24ac:	ldr	x0, [sp, #40]
    24b0:	bl	1ed4 <constant_14>
    24b4:	b	27b4 <constant+0x4d8>
    24b8:	ldr	x2, [sp, #16]
    24bc:	ldr	x1, [sp, #32]
    24c0:	ldr	x0, [sp, #40]
    24c4:	bl	20dc <constant_15>
    24c8:	b	27b4 <constant+0x4d8>
    24cc:	mov	x2, #0x10                  	// #16
    24d0:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    24d4:	add	x1, x0, #0xb38
    24d8:	ldr	x0, [sp, #32]
    24dc:	bl	1470 <memcmp@plt>
    24e0:	cmp	w0, #0x0
    24e4:	b.ne	2794 <constant+0x4b8>  // b.any
    24e8:	mov	w0, #0x2                   	// #2
    24ec:	b	27b4 <constant+0x4d8>
    24f0:	ldr	x0, [sp, #32]
    24f4:	add	x0, x0, #0x5
    24f8:	ldrb	w0, [x0]
    24fc:	cmp	w0, #0x5f
    2500:	b.eq	2510 <constant+0x234>  // b.none
    2504:	cmp	w0, #0x63
    2508:	b.eq	2534 <constant+0x258>  // b.none
    250c:	b	27b0 <constant+0x4d4>
    2510:	mov	x2, #0x11                  	// #17
    2514:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2518:	add	x1, x0, #0xb50
    251c:	ldr	x0, [sp, #32]
    2520:	bl	1470 <memcmp@plt>
    2524:	cmp	w0, #0x0
    2528:	b.ne	2564 <constant+0x288>  // b.any
    252c:	mov	w0, #0x2                   	// #2
    2530:	b	27b4 <constant+0x4d8>
    2534:	mov	x2, #0x11                  	// #17
    2538:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    253c:	add	x1, x0, #0xb68
    2540:	ldr	x0, [sp, #32]
    2544:	bl	1470 <memcmp@plt>
    2548:	cmp	w0, #0x0
    254c:	b.ne	256c <constant+0x290>  // b.any
    2550:	ldr	x0, [sp, #16]
    2554:	mov	x1, #0x1                   	// #1
    2558:	str	x1, [x0]
    255c:	mov	w0, #0x3                   	// #3
    2560:	b	27b4 <constant+0x4d8>
    2564:	nop
    2568:	b	27b0 <constant+0x4d4>
    256c:	nop
    2570:	b	27b0 <constant+0x4d4>
    2574:	mov	x2, #0x12                  	// #18
    2578:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    257c:	add	x1, x0, #0xb80
    2580:	ldr	x0, [sp, #32]
    2584:	bl	1470 <memcmp@plt>
    2588:	cmp	w0, #0x0
    258c:	b.ne	279c <constant+0x4c0>  // b.any
    2590:	mov	w0, #0x2                   	// #2
    2594:	b	27b4 <constant+0x4d8>
    2598:	ldr	x2, [sp, #16]
    259c:	ldr	x1, [sp, #32]
    25a0:	ldr	x0, [sp, #40]
    25a4:	bl	2200 <constant_19>
    25a8:	b	27b4 <constant+0x4d8>
    25ac:	ldr	x0, [sp, #32]
    25b0:	add	x0, x0, #0x7
    25b4:	ldrb	w0, [x0]
    25b8:	cmp	w0, #0x4f
    25bc:	b.eq	25cc <constant+0x2f0>  // b.none
    25c0:	cmp	w0, #0x50
    25c4:	b.eq	25f0 <constant+0x314>  // b.none
    25c8:	b	27b0 <constant+0x4d4>
    25cc:	mov	x2, #0x14                  	// #20
    25d0:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    25d4:	add	x1, x0, #0xb98
    25d8:	ldr	x0, [sp, #32]
    25dc:	bl	1470 <memcmp@plt>
    25e0:	cmp	w0, #0x0
    25e4:	b.ne	2614 <constant+0x338>  // b.any
    25e8:	mov	w0, #0x2                   	// #2
    25ec:	b	27b4 <constant+0x4d8>
    25f0:	mov	x2, #0x14                  	// #20
    25f4:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    25f8:	add	x1, x0, #0xbb0
    25fc:	ldr	x0, [sp, #32]
    2600:	bl	1470 <memcmp@plt>
    2604:	cmp	w0, #0x0
    2608:	b.ne	261c <constant+0x340>  // b.any
    260c:	mov	w0, #0x2                   	// #2
    2610:	b	27b4 <constant+0x4d8>
    2614:	nop
    2618:	b	27b0 <constant+0x4d4>
    261c:	nop
    2620:	b	27b0 <constant+0x4d4>
    2624:	mov	x2, #0x15                  	// #21
    2628:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    262c:	add	x1, x0, #0xbc8
    2630:	ldr	x0, [sp, #32]
    2634:	bl	1470 <memcmp@plt>
    2638:	cmp	w0, #0x0
    263c:	b.ne	27a4 <constant+0x4c8>  // b.any
    2640:	ldr	x0, [sp, #16]
    2644:	mov	x1, #0x5                   	// #5
    2648:	str	x1, [x0]
    264c:	mov	w0, #0x3                   	// #3
    2650:	b	27b4 <constant+0x4d8>
    2654:	ldr	x0, [sp, #32]
    2658:	add	x0, x0, #0xc
    265c:	ldrb	w0, [x0]
    2660:	cmp	w0, #0x4d
    2664:	b.eq	2674 <constant+0x398>  // b.none
    2668:	cmp	w0, #0x4e
    266c:	b.eq	2698 <constant+0x3bc>  // b.none
    2670:	b	27b0 <constant+0x4d4>
    2674:	mov	x2, #0x16                  	// #22
    2678:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    267c:	add	x1, x0, #0xbe0
    2680:	ldr	x0, [sp, #32]
    2684:	bl	1470 <memcmp@plt>
    2688:	cmp	w0, #0x0
    268c:	b.ne	26c8 <constant+0x3ec>  // b.any
    2690:	mov	w0, #0x2                   	// #2
    2694:	b	27b4 <constant+0x4d8>
    2698:	mov	x2, #0x16                  	// #22
    269c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    26a0:	add	x1, x0, #0xbf8
    26a4:	ldr	x0, [sp, #32]
    26a8:	bl	1470 <memcmp@plt>
    26ac:	cmp	w0, #0x0
    26b0:	b.ne	26d0 <constant+0x3f4>  // b.any
    26b4:	ldr	x0, [sp, #16]
    26b8:	mov	x1, #0x6                   	// #6
    26bc:	str	x1, [x0]
    26c0:	mov	w0, #0x3                   	// #3
    26c4:	b	27b4 <constant+0x4d8>
    26c8:	nop
    26cc:	b	27b0 <constant+0x4d4>
    26d0:	nop
    26d4:	b	27b0 <constant+0x4d4>
    26d8:	ldr	x0, [sp, #32]
    26dc:	add	x0, x0, #0x16
    26e0:	ldrb	w0, [x0]
    26e4:	cmp	w0, #0x44
    26e8:	b.eq	26f8 <constant+0x41c>  // b.none
    26ec:	cmp	w0, #0x45
    26f0:	b.eq	2728 <constant+0x44c>  // b.none
    26f4:	b	27b0 <constant+0x4d4>
    26f8:	mov	x2, #0x16                  	// #22
    26fc:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2700:	add	x1, x0, #0xc10
    2704:	ldr	x0, [sp, #32]
    2708:	bl	1470 <memcmp@plt>
    270c:	cmp	w0, #0x0
    2710:	b.ne	274c <constant+0x470>  // b.any
    2714:	ldr	x0, [sp, #16]
    2718:	mov	x1, #0x3                   	// #3
    271c:	str	x1, [x0]
    2720:	mov	w0, #0x3                   	// #3
    2724:	b	27b4 <constant+0x4d8>
    2728:	mov	x2, #0x16                  	// #22
    272c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2730:	add	x1, x0, #0xc28
    2734:	ldr	x0, [sp, #32]
    2738:	bl	1470 <memcmp@plt>
    273c:	cmp	w0, #0x0
    2740:	b.ne	2754 <constant+0x478>  // b.any
    2744:	mov	w0, #0x2                   	// #2
    2748:	b	27b4 <constant+0x4d8>
    274c:	nop
    2750:	b	27b0 <constant+0x4d4>
    2754:	nop
    2758:	b	27b0 <constant+0x4d4>
    275c:	mov	x2, #0x18                  	// #24
    2760:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2764:	add	x1, x0, #0xc40
    2768:	ldr	x0, [sp, #32]
    276c:	bl	1470 <memcmp@plt>
    2770:	cmp	w0, #0x0
    2774:	b.ne	27ac <constant+0x4d0>  // b.any
    2778:	ldr	x0, [sp, #16]
    277c:	mov	x1, #0x2                   	// #2
    2780:	str	x1, [x0]
    2784:	mov	w0, #0x3                   	// #3
    2788:	b	27b4 <constant+0x4d8>
    278c:	nop
    2790:	b	27b0 <constant+0x4d4>
    2794:	nop
    2798:	b	27b0 <constant+0x4d4>
    279c:	nop
    27a0:	b	27b0 <constant+0x4d4>
    27a4:	nop
    27a8:	b	27b0 <constant+0x4d4>
    27ac:	nop
    27b0:	mov	w0, #0x1                   	// #1
    27b4:	ldp	x29, x30, [sp], #48
    27b8:	ret

00000000000027bc <nanosleep_init>:
    27bc:	sub	sp, sp, #0x20
    27c0:	str	d0, [sp, #24]
    27c4:	str	x0, [sp, #16]
    27c8:	str	x1, [sp, #8]
    27cc:	mov	x0, #0xcd6500000000        	// #225833675390976
    27d0:	movk	x0, #0x41cd, lsl #48
    27d4:	fmov	d1, x0
    27d8:	ldr	d0, [sp, #24]
    27dc:	fdiv	d0, d0, d1
    27e0:	fcvtzs	d0, d0
    27e4:	ldr	x0, [sp, #16]
    27e8:	str	d0, [x0]
    27ec:	ldr	x0, [sp, #16]
    27f0:	ldr	d0, [x0]
    27f4:	scvtf	d0, d0
    27f8:	mov	x0, #0xcd6500000000        	// #225833675390976
    27fc:	movk	x0, #0x41cd, lsl #48
    2800:	fmov	d1, x0
    2804:	fmul	d0, d0, d1
    2808:	ldr	d1, [sp, #24]
    280c:	fsub	d0, d1, d0
    2810:	fcvtzs	d0, d0
    2814:	ldr	x0, [sp, #16]
    2818:	str	d0, [x0, #8]
    281c:	ldr	x0, [sp, #8]
    2820:	str	xzr, [x0]
    2824:	ldr	x0, [sp, #8]
    2828:	str	xzr, [x0, #8]
    282c:	nop
    2830:	add	sp, sp, #0x20
    2834:	ret

0000000000002838 <nsec_without_unslept>:
    2838:	sub	sp, sp, #0x10
    283c:	str	x0, [sp, #8]
    2840:	str	x1, [sp]
    2844:	ldr	x0, [sp, #8]
    2848:	ldr	x1, [x0]
    284c:	ldr	x0, [sp]
    2850:	ldr	x0, [x0]
    2854:	cmp	x1, x0
    2858:	b.lt	2924 <nsec_without_unslept+0xec>  // b.tstop
    285c:	ldr	x0, [sp, #8]
    2860:	ldr	x1, [x0]
    2864:	ldr	x0, [sp]
    2868:	ldr	x0, [x0]
    286c:	sub	x1, x1, x0
    2870:	ldr	x0, [sp, #8]
    2874:	str	x1, [x0]
    2878:	ldr	x0, [sp, #8]
    287c:	ldr	x1, [x0, #8]
    2880:	ldr	x0, [sp]
    2884:	ldr	x0, [x0, #8]
    2888:	cmp	x1, x0
    288c:	b.lt	28b0 <nsec_without_unslept+0x78>  // b.tstop
    2890:	ldr	x0, [sp, #8]
    2894:	ldr	x1, [x0, #8]
    2898:	ldr	x0, [sp]
    289c:	ldr	x0, [x0, #8]
    28a0:	sub	x1, x1, x0
    28a4:	ldr	x0, [sp, #8]
    28a8:	str	x1, [x0, #8]
    28ac:	b	2934 <nsec_without_unslept+0xfc>
    28b0:	ldr	x0, [sp, #8]
    28b4:	ldr	x0, [x0]
    28b8:	cmp	x0, #0x0
    28bc:	b.le	2910 <nsec_without_unslept+0xd8>
    28c0:	ldr	x0, [sp, #8]
    28c4:	ldr	x0, [x0]
    28c8:	sub	x1, x0, #0x1
    28cc:	ldr	x0, [sp, #8]
    28d0:	str	x1, [x0]
    28d4:	ldr	x0, [sp, #8]
    28d8:	ldr	x1, [x0, #8]
    28dc:	mov	x0, #0xca00                	// #51712
    28e0:	movk	x0, #0x3b9a, lsl #16
    28e4:	add	x1, x1, x0
    28e8:	ldr	x0, [sp, #8]
    28ec:	str	x1, [x0, #8]
    28f0:	ldr	x0, [sp, #8]
    28f4:	ldr	x1, [x0, #8]
    28f8:	ldr	x0, [sp]
    28fc:	ldr	x0, [x0, #8]
    2900:	sub	x1, x1, x0
    2904:	ldr	x0, [sp, #8]
    2908:	str	x1, [x0, #8]
    290c:	b	2934 <nsec_without_unslept+0xfc>
    2910:	ldr	x0, [sp, #8]
    2914:	str	xzr, [x0]
    2918:	ldr	x0, [sp, #8]
    291c:	str	xzr, [x0, #8]
    2920:	b	2934 <nsec_without_unslept+0xfc>
    2924:	ldr	x0, [sp, #8]
    2928:	str	xzr, [x0]
    292c:	ldr	x0, [sp, #8]
    2930:	str	xzr, [x0, #8]
    2934:	ldr	x0, [sp, #8]
    2938:	ldr	d0, [x0]
    293c:	scvtf	d0, d0
    2940:	mov	x0, #0xcd6500000000        	// #225833675390976
    2944:	movk	x0, #0x41cd, lsl #48
    2948:	fmov	d1, x0
    294c:	fmul	d1, d0, d1
    2950:	ldr	x0, [sp, #8]
    2954:	ldr	d0, [x0, #8]
    2958:	scvtf	d0, d0
    295c:	fadd	d0, d1, d0
    2960:	add	sp, sp, #0x10
    2964:	ret

0000000000002968 <XS_Time__HiRes_constant>:
    2968:	stp	x29, x30, [sp, #-128]!
    296c:	mov	x29, sp
    2970:	str	x0, [sp, #24]
    2974:	str	x1, [sp, #16]
    2978:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    297c:	ldr	x0, [x0, #4040]
    2980:	ldr	x1, [x0]
    2984:	str	x1, [sp, #120]
    2988:	mov	x1, #0x0                   	// #0
    298c:	ldr	x0, [sp, #24]
    2990:	ldr	x0, [x0]
    2994:	str	x0, [sp, #72]
    2998:	ldr	x0, [sp, #24]
    299c:	bl	1780 <S_POPMARK>
    29a0:	str	w0, [sp, #44]
    29a4:	ldr	x0, [sp, #24]
    29a8:	ldr	x1, [x0, #24]
    29ac:	ldr	w0, [sp, #44]
    29b0:	add	w2, w0, #0x1
    29b4:	str	w2, [sp, #44]
    29b8:	sxtw	x0, w0
    29bc:	lsl	x0, x0, #3
    29c0:	add	x0, x1, x0
    29c4:	str	x0, [sp, #80]
    29c8:	ldr	x1, [sp, #72]
    29cc:	ldr	x0, [sp, #80]
    29d0:	sub	x0, x1, x0
    29d4:	asr	x0, x0, #3
    29d8:	str	w0, [sp, #48]
    29dc:	ldr	w0, [sp, #48]
    29e0:	cmp	w0, #0x1
    29e4:	b.eq	29f8 <XS_Time__HiRes_constant+0x90>  // b.none
    29e8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    29ec:	add	x1, x0, #0xca8
    29f0:	ldr	x0, [sp, #16]
    29f4:	bl	1450 <Perl_croak_xs_usage@plt>
    29f8:	ldrsw	x0, [sp, #48]
    29fc:	lsl	x0, x0, #3
    2a00:	neg	x0, x0
    2a04:	ldr	x1, [sp, #72]
    2a08:	add	x0, x1, x0
    2a0c:	str	x0, [sp, #72]
    2a10:	ldr	x0, [sp, #24]
    2a14:	ldr	x0, [x0, #8]
    2a18:	ldrb	w0, [x0, #35]
    2a1c:	and	w0, w0, #0x4
    2a20:	cmp	w0, #0x0
    2a24:	b.eq	2a4c <XS_Time__HiRes_constant+0xe4>  // b.none
    2a28:	ldr	x0, [sp, #24]
    2a2c:	ldr	x1, [x0, #16]
    2a30:	ldr	x0, [sp, #24]
    2a34:	ldr	x0, [x0, #8]
    2a38:	ldr	x0, [x0, #24]
    2a3c:	lsl	x0, x0, #3
    2a40:	add	x0, x1, x0
    2a44:	ldr	x0, [x0]
    2a48:	b	2a54 <XS_Time__HiRes_constant+0xec>
    2a4c:	ldr	x0, [sp, #24]
    2a50:	bl	15e0 <Perl_sv_newmortal@plt>
    2a54:	str	x0, [sp, #88]
    2a58:	str	xzr, [sp, #64]
    2a5c:	ldr	x0, [sp, #24]
    2a60:	ldr	x1, [x0, #24]
    2a64:	ldrsw	x0, [sp, #44]
    2a68:	lsl	x0, x0, #3
    2a6c:	add	x0, x1, x0
    2a70:	ldr	x0, [x0]
    2a74:	str	x0, [sp, #96]
    2a78:	ldr	x0, [sp, #96]
    2a7c:	ldr	w1, [x0, #12]
    2a80:	mov	w0, #0x400                 	// #1024
    2a84:	movk	w0, #0x20, lsl #16
    2a88:	and	w0, w1, w0
    2a8c:	cmp	w0, #0x400
    2a90:	b.ne	2ab0 <XS_Time__HiRes_constant+0x148>  // b.any
    2a94:	ldr	x0, [sp, #96]
    2a98:	ldr	x0, [x0]
    2a9c:	ldr	x0, [x0, #16]
    2aa0:	str	x0, [sp, #56]
    2aa4:	ldr	x0, [sp, #96]
    2aa8:	ldr	x0, [x0, #16]
    2aac:	b	2ac8 <XS_Time__HiRes_constant+0x160>
    2ab0:	add	x0, sp, #0x38
    2ab4:	mov	w3, #0x2                   	// #2
    2ab8:	mov	x2, x0
    2abc:	ldr	x1, [sp, #96]
    2ac0:	ldr	x0, [sp, #24]
    2ac4:	bl	13f0 <Perl_sv_2pv_flags@plt>
    2ac8:	str	x0, [sp, #104]
    2acc:	ldr	x0, [sp, #56]
    2ad0:	add	x1, sp, #0x40
    2ad4:	mov	x3, x1
    2ad8:	mov	x2, x0
    2adc:	ldr	x1, [sp, #104]
    2ae0:	ldr	x0, [sp, #24]
    2ae4:	bl	22dc <constant>
    2ae8:	str	w0, [sp, #52]
    2aec:	ldr	w0, [sp, #52]
    2af0:	cmp	w0, #0x3
    2af4:	b.eq	2b98 <XS_Time__HiRes_constant+0x230>  // b.none
    2af8:	ldr	w0, [sp, #52]
    2afc:	cmp	w0, #0x3
    2b00:	b.gt	2ca0 <XS_Time__HiRes_constant+0x338>
    2b04:	ldr	w0, [sp, #52]
    2b08:	cmp	w0, #0x1
    2b0c:	b.eq	2b20 <XS_Time__HiRes_constant+0x1b8>  // b.none
    2b10:	ldr	w0, [sp, #52]
    2b14:	cmp	w0, #0x2
    2b18:	b.eq	2b5c <XS_Time__HiRes_constant+0x1f4>  // b.none
    2b1c:	b	2ca0 <XS_Time__HiRes_constant+0x338>
    2b20:	ldr	x1, [sp, #104]
    2b24:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2b28:	add	x0, x0, #0xcb0
    2b2c:	bl	1570 <Perl_newSVpvf_nocontext@plt>
    2b30:	mov	x1, x0
    2b34:	ldr	x0, [sp, #24]
    2b38:	bl	14e0 <Perl_sv_2mortal@plt>
    2b3c:	str	x0, [sp, #96]
    2b40:	ldr	x0, [sp, #72]
    2b44:	add	x0, x0, #0x8
    2b48:	str	x0, [sp, #72]
    2b4c:	ldr	x0, [sp, #72]
    2b50:	ldr	x1, [sp, #96]
    2b54:	str	x1, [x0]
    2b58:	b	2cdc <XS_Time__HiRes_constant+0x374>
    2b5c:	ldr	x1, [sp, #104]
    2b60:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2b64:	add	x0, x0, #0xcd8
    2b68:	bl	1570 <Perl_newSVpvf_nocontext@plt>
    2b6c:	mov	x1, x0
    2b70:	ldr	x0, [sp, #24]
    2b74:	bl	14e0 <Perl_sv_2mortal@plt>
    2b78:	str	x0, [sp, #96]
    2b7c:	ldr	x0, [sp, #72]
    2b80:	add	x0, x0, #0x8
    2b84:	str	x0, [sp, #72]
    2b88:	ldr	x0, [sp, #72]
    2b8c:	ldr	x1, [sp, #96]
    2b90:	str	x1, [x0]
    2b94:	b	2cdc <XS_Time__HiRes_constant+0x374>
    2b98:	ldr	x0, [sp, #24]
    2b9c:	ldr	x1, [x0, #32]
    2ba0:	ldr	x0, [sp, #72]
    2ba4:	sub	x0, x1, x0
    2ba8:	cmp	x0, #0x8
    2bac:	cset	w0, le
    2bb0:	and	w0, w0, #0xff
    2bb4:	and	x0, x0, #0xff
    2bb8:	cmp	x0, #0x0
    2bbc:	b.eq	2bd8 <XS_Time__HiRes_constant+0x270>  // b.none
    2bc0:	mov	x3, #0x2                   	// #2
    2bc4:	ldr	x2, [sp, #72]
    2bc8:	ldr	x1, [sp, #72]
    2bcc:	ldr	x0, [sp, #24]
    2bd0:	bl	1320 <Perl_stack_grow@plt>
    2bd4:	str	x0, [sp, #72]
    2bd8:	ldr	x0, [sp, #72]
    2bdc:	add	x0, x0, #0x8
    2be0:	str	x0, [sp, #72]
    2be4:	ldr	x0, [sp, #24]
    2be8:	add	x1, x0, #0x150
    2bec:	ldr	x0, [sp, #72]
    2bf0:	str	x1, [x0]
    2bf4:	ldr	x0, [sp, #64]
    2bf8:	str	x0, [sp, #112]
    2bfc:	ldr	x0, [sp, #88]
    2c00:	ldr	w1, [x0, #12]
    2c04:	mov	w0, #0x8ff                 	// #2303
    2c08:	movk	w0, #0x9981, lsl #16
    2c0c:	and	w0, w1, w0
    2c10:	cmp	w0, #0x1
    2c14:	cset	w0, eq  // eq = none
    2c18:	and	w0, w0, #0xff
    2c1c:	mov	w1, w0
    2c20:	ldr	x0, [sp, #24]
    2c24:	ldrb	w0, [x0, #185]
    2c28:	eor	w0, w0, #0x1
    2c2c:	and	w0, w0, #0xff
    2c30:	and	w0, w1, w0
    2c34:	cmp	w0, #0x0
    2c38:	cset	w0, ne  // ne = any
    2c3c:	and	w0, w0, #0xff
    2c40:	and	x0, x0, #0xff
    2c44:	cmp	x0, #0x0
    2c48:	b.eq	2c74 <XS_Time__HiRes_constant+0x30c>  // b.none
    2c4c:	ldr	x0, [sp, #88]
    2c50:	ldr	w1, [x0, #12]
    2c54:	mov	w0, #0x1100                	// #4352
    2c58:	orr	w1, w1, w0
    2c5c:	ldr	x0, [sp, #88]
    2c60:	str	w1, [x0, #12]
    2c64:	ldr	x0, [sp, #88]
    2c68:	ldr	x1, [sp, #112]
    2c6c:	str	x1, [x0, #16]
    2c70:	b	2c84 <XS_Time__HiRes_constant+0x31c>
    2c74:	ldr	x2, [sp, #112]
    2c78:	ldr	x1, [sp, #88]
    2c7c:	ldr	x0, [sp, #24]
    2c80:	bl	1380 <Perl_sv_setiv_mg@plt>
    2c84:	ldr	x0, [sp, #72]
    2c88:	add	x0, x0, #0x8
    2c8c:	str	x0, [sp, #72]
    2c90:	ldr	x0, [sp, #72]
    2c94:	ldr	x1, [sp, #88]
    2c98:	str	x1, [x0]
    2c9c:	b	2cdc <XS_Time__HiRes_constant+0x374>
    2ca0:	ldr	x2, [sp, #104]
    2ca4:	ldr	w1, [sp, #52]
    2ca8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2cac:	add	x0, x0, #0xd10
    2cb0:	bl	1570 <Perl_newSVpvf_nocontext@plt>
    2cb4:	mov	x1, x0
    2cb8:	ldr	x0, [sp, #24]
    2cbc:	bl	14e0 <Perl_sv_2mortal@plt>
    2cc0:	str	x0, [sp, #96]
    2cc4:	ldr	x0, [sp, #72]
    2cc8:	add	x0, x0, #0x8
    2ccc:	str	x0, [sp, #72]
    2cd0:	ldr	x0, [sp, #72]
    2cd4:	ldr	x1, [sp, #96]
    2cd8:	str	x1, [x0]
    2cdc:	ldr	x0, [sp, #24]
    2ce0:	ldr	x1, [sp, #72]
    2ce4:	str	x1, [x0]
    2ce8:	nop
    2cec:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    2cf0:	ldr	x0, [x0, #4040]
    2cf4:	ldr	x1, [sp, #120]
    2cf8:	ldr	x0, [x0]
    2cfc:	eor	x0, x1, x0
    2d00:	cmp	x0, #0x0
    2d04:	b.eq	2d0c <XS_Time__HiRes_constant+0x3a4>  // b.none
    2d08:	bl	1430 <__stack_chk_fail@plt>
    2d0c:	ldp	x29, x30, [sp], #128
    2d10:	ret

0000000000002d14 <XS_Time__HiRes_usleep>:
    2d14:	stp	x29, x30, [sp, #-144]!
    2d18:	mov	x29, sp
    2d1c:	str	x0, [sp, #24]
    2d20:	str	x1, [sp, #16]
    2d24:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    2d28:	ldr	x0, [x0, #4040]
    2d2c:	ldr	x1, [x0]
    2d30:	str	x1, [sp, #136]
    2d34:	mov	x1, #0x0                   	// #0
    2d38:	ldr	x0, [sp, #24]
    2d3c:	ldr	x0, [x0]
    2d40:	str	x0, [sp, #48]
    2d44:	ldr	x0, [sp, #24]
    2d48:	bl	1780 <S_POPMARK>
    2d4c:	str	w0, [sp, #32]
    2d50:	ldr	x0, [sp, #24]
    2d54:	ldr	x1, [x0, #24]
    2d58:	ldr	w0, [sp, #32]
    2d5c:	add	w2, w0, #0x1
    2d60:	str	w2, [sp, #32]
    2d64:	sxtw	x0, w0
    2d68:	lsl	x0, x0, #3
    2d6c:	add	x0, x1, x0
    2d70:	str	x0, [sp, #56]
    2d74:	ldr	x1, [sp, #48]
    2d78:	ldr	x0, [sp, #56]
    2d7c:	sub	x0, x1, x0
    2d80:	asr	x0, x0, #3
    2d84:	str	w0, [sp, #36]
    2d88:	ldr	w0, [sp, #36]
    2d8c:	cmp	w0, #0x1
    2d90:	b.eq	2da4 <XS_Time__HiRes_usleep+0x90>  // b.none
    2d94:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2d98:	add	x1, x0, #0xd58
    2d9c:	ldr	x0, [sp, #16]
    2da0:	bl	1450 <Perl_croak_xs_usage@plt>
    2da4:	ldr	x0, [sp, #24]
    2da8:	ldr	x1, [x0, #24]
    2dac:	ldrsw	x0, [sp, #32]
    2db0:	lsl	x0, x0, #3
    2db4:	add	x0, x1, x0
    2db8:	ldr	x0, [x0]
    2dbc:	ldr	w1, [x0, #12]
    2dc0:	mov	w0, #0x200                 	// #512
    2dc4:	movk	w0, #0x20, lsl #16
    2dc8:	and	w0, w1, w0
    2dcc:	cmp	w0, #0x200
    2dd0:	b.ne	2df8 <XS_Time__HiRes_usleep+0xe4>  // b.any
    2dd4:	ldr	x0, [sp, #24]
    2dd8:	ldr	x1, [x0, #24]
    2ddc:	ldrsw	x0, [sp, #32]
    2de0:	lsl	x0, x0, #3
    2de4:	add	x0, x1, x0
    2de8:	ldr	x0, [x0]
    2dec:	ldr	x0, [x0]
    2df0:	ldr	d0, [x0, #40]
    2df4:	b	2e20 <XS_Time__HiRes_usleep+0x10c>
    2df8:	ldr	x0, [sp, #24]
    2dfc:	ldr	x1, [x0, #24]
    2e00:	ldrsw	x0, [sp, #32]
    2e04:	lsl	x0, x0, #3
    2e08:	add	x0, x1, x0
    2e0c:	ldr	x0, [x0]
    2e10:	mov	w2, #0x2                   	// #2
    2e14:	mov	x1, x0
    2e18:	ldr	x0, [sp, #24]
    2e1c:	bl	1460 <Perl_sv_2nv_flags@plt>
    2e20:	str	d0, [sp, #40]
    2e24:	ldr	x0, [sp, #24]
    2e28:	ldr	x0, [x0, #8]
    2e2c:	ldrb	w0, [x0, #35]
    2e30:	and	w0, w0, #0x4
    2e34:	cmp	w0, #0x0
    2e38:	b.eq	2e60 <XS_Time__HiRes_usleep+0x14c>  // b.none
    2e3c:	ldr	x0, [sp, #24]
    2e40:	ldr	x1, [x0, #16]
    2e44:	ldr	x0, [sp, #24]
    2e48:	ldr	x0, [x0, #8]
    2e4c:	ldr	x0, [x0, #24]
    2e50:	lsl	x0, x0, #3
    2e54:	add	x0, x1, x0
    2e58:	ldr	x0, [x0]
    2e5c:	b	2e68 <XS_Time__HiRes_usleep+0x154>
    2e60:	ldr	x0, [sp, #24]
    2e64:	bl	15e0 <Perl_sv_newmortal@plt>
    2e68:	str	x0, [sp, #64]
    2e6c:	add	x0, sp, #0x68
    2e70:	mov	x1, #0x0                   	// #0
    2e74:	bl	1410 <gettimeofday@plt>
    2e78:	ldr	w0, [sp, #36]
    2e7c:	cmp	w0, #0x0
    2e80:	b.le	2f20 <XS_Time__HiRes_usleep+0x20c>
    2e84:	ldr	d0, [sp, #40]
    2e88:	mov	x0, #0x848000000000        	// #145685290680320
    2e8c:	movk	x0, #0x412e, lsl #48
    2e90:	fmov	d1, x0
    2e94:	fcmpe	d0, d1
    2e98:	b.lt	2ef4 <XS_Time__HiRes_usleep+0x1e0>  // b.tstop
    2e9c:	mov	x0, #0x848000000000        	// #145685290680320
    2ea0:	movk	x0, #0x412e, lsl #48
    2ea4:	fmov	d1, x0
    2ea8:	ldr	d0, [sp, #40]
    2eac:	fdiv	d0, d0, d1
    2eb0:	fcvtzs	d0, d0
    2eb4:	str	d0, [sp, #72]
    2eb8:	ldr	x0, [sp, #72]
    2ebc:	cmp	x0, #0x0
    2ec0:	b.eq	2f10 <XS_Time__HiRes_usleep+0x1fc>  // b.none
    2ec4:	ldr	x0, [sp, #72]
    2ec8:	bl	1420 <sleep@plt>
    2ecc:	ldr	d0, [sp, #72]
    2ed0:	scvtf	d0, d0
    2ed4:	mov	x0, #0x848000000000        	// #145685290680320
    2ed8:	movk	x0, #0x412e, lsl #48
    2edc:	fmov	d1, x0
    2ee0:	fmul	d0, d0, d1
    2ee4:	ldr	d1, [sp, #40]
    2ee8:	fsub	d0, d1, d0
    2eec:	str	d0, [sp, #40]
    2ef0:	b	2f10 <XS_Time__HiRes_usleep+0x1fc>
    2ef4:	ldr	d0, [sp, #40]
    2ef8:	fcmpe	d0, #0.0
    2efc:	b.pl	2f10 <XS_Time__HiRes_usleep+0x1fc>  // b.nfrst
    2f00:	ldr	d0, [sp, #40]
    2f04:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    2f08:	add	x0, x0, #0xd68
    2f0c:	bl	1490 <Perl_croak_nocontext@plt>
    2f10:	ldr	d0, [sp, #40]
    2f14:	fcvtzu	w0, d0
    2f18:	bl	1550 <usleep@plt>
    2f1c:	b	2f24 <XS_Time__HiRes_usleep+0x210>
    2f20:	bl	1330 <pause@plt>
    2f24:	add	x0, sp, #0x78
    2f28:	mov	x1, #0x0                   	// #0
    2f2c:	bl	1410 <gettimeofday@plt>
    2f30:	ldr	x1, [sp, #120]
    2f34:	ldr	x0, [sp, #104]
    2f38:	sub	x0, x1, x0
    2f3c:	fmov	d0, x0
    2f40:	scvtf	d0, d0
    2f44:	mov	x0, #0x848000000000        	// #145685290680320
    2f48:	movk	x0, #0x412e, lsl #48
    2f4c:	fmov	d1, x0
    2f50:	fmul	d1, d0, d1
    2f54:	ldr	x1, [sp, #128]
    2f58:	ldr	x0, [sp, #112]
    2f5c:	sub	x0, x1, x0
    2f60:	fmov	d0, x0
    2f64:	scvtf	d0, d0
    2f68:	fadd	d0, d1, d0
    2f6c:	str	d0, [sp, #80]
    2f70:	ldr	x0, [sp, #24]
    2f74:	ldr	x1, [x0, #24]
    2f78:	ldrsw	x0, [sp, #32]
    2f7c:	lsl	x0, x0, #3
    2f80:	sub	x0, x0, #0x8
    2f84:	add	x0, x1, x0
    2f88:	str	x0, [sp, #48]
    2f8c:	ldr	d0, [sp, #80]
    2f90:	str	d0, [sp, #88]
    2f94:	ldr	x0, [sp, #64]
    2f98:	ldr	w1, [x0, #12]
    2f9c:	mov	w0, #0x8ff                 	// #2303
    2fa0:	movk	w0, #0x1981, lsl #16
    2fa4:	and	w0, w1, w0
    2fa8:	cmp	w0, #0x2
    2fac:	cset	w0, eq  // eq = none
    2fb0:	and	w0, w0, #0xff
    2fb4:	mov	w1, w0
    2fb8:	ldr	x0, [sp, #24]
    2fbc:	ldrb	w0, [x0, #185]
    2fc0:	eor	w0, w0, #0x1
    2fc4:	and	w0, w0, #0xff
    2fc8:	and	w0, w1, w0
    2fcc:	cmp	w0, #0x0
    2fd0:	cset	w0, ne  // ne = any
    2fd4:	and	w0, w0, #0xff
    2fd8:	and	x0, x0, #0xff
    2fdc:	cmp	x0, #0x0
    2fe0:	b.eq	3010 <XS_Time__HiRes_usleep+0x2fc>  // b.none
    2fe4:	ldr	x0, [sp, #64]
    2fe8:	ldr	w1, [x0, #12]
    2fec:	mov	w0, #0x2200                	// #8704
    2ff0:	orr	w1, w1, w0
    2ff4:	ldr	x0, [sp, #64]
    2ff8:	str	w1, [x0, #12]
    2ffc:	ldr	x0, [sp, #64]
    3000:	ldr	x0, [x0]
    3004:	ldr	d0, [sp, #88]
    3008:	str	d0, [x0, #40]
    300c:	b	3020 <XS_Time__HiRes_usleep+0x30c>
    3010:	ldr	d0, [sp, #88]
    3014:	ldr	x1, [sp, #64]
    3018:	ldr	x0, [sp, #24]
    301c:	bl	13c0 <Perl_sv_setnv_mg@plt>
    3020:	ldr	x0, [sp, #48]
    3024:	add	x0, x0, #0x8
    3028:	str	x0, [sp, #48]
    302c:	ldr	x0, [sp, #48]
    3030:	ldr	x1, [sp, #64]
    3034:	str	x1, [x0]
    3038:	mov	x0, #0x1                   	// #1
    303c:	str	x0, [sp, #96]
    3040:	ldr	x0, [sp, #24]
    3044:	ldr	x1, [x0, #24]
    3048:	ldrsw	x2, [sp, #32]
    304c:	ldr	x0, [sp, #96]
    3050:	add	x0, x2, x0
    3054:	lsl	x0, x0, #3
    3058:	sub	x0, x0, #0x8
    305c:	add	x1, x1, x0
    3060:	ldr	x0, [sp, #24]
    3064:	str	x1, [x0]
    3068:	nop
    306c:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3070:	ldr	x0, [x0, #4040]
    3074:	ldr	x1, [sp, #136]
    3078:	ldr	x0, [x0]
    307c:	eor	x0, x1, x0
    3080:	cmp	x0, #0x0
    3084:	b.eq	308c <XS_Time__HiRes_usleep+0x378>  // b.none
    3088:	bl	1430 <__stack_chk_fail@plt>
    308c:	ldp	x29, x30, [sp], #144
    3090:	ret

0000000000003094 <XS_Time__HiRes_nanosleep>:
    3094:	stp	x29, x30, [sp, #-144]!
    3098:	mov	x29, sp
    309c:	str	x0, [sp, #24]
    30a0:	str	x1, [sp, #16]
    30a4:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    30a8:	ldr	x0, [x0, #4040]
    30ac:	ldr	x1, [x0]
    30b0:	str	x1, [sp, #136]
    30b4:	mov	x1, #0x0                   	// #0
    30b8:	ldr	x0, [sp, #24]
    30bc:	ldr	x0, [x0]
    30c0:	str	x0, [sp, #56]
    30c4:	ldr	x0, [sp, #24]
    30c8:	bl	1780 <S_POPMARK>
    30cc:	str	w0, [sp, #40]
    30d0:	ldr	x0, [sp, #24]
    30d4:	ldr	x1, [x0, #24]
    30d8:	ldr	w0, [sp, #40]
    30dc:	add	w2, w0, #0x1
    30e0:	str	w2, [sp, #40]
    30e4:	sxtw	x0, w0
    30e8:	lsl	x0, x0, #3
    30ec:	add	x0, x1, x0
    30f0:	str	x0, [sp, #64]
    30f4:	ldr	x1, [sp, #56]
    30f8:	ldr	x0, [sp, #64]
    30fc:	sub	x0, x1, x0
    3100:	asr	x0, x0, #3
    3104:	str	w0, [sp, #44]
    3108:	ldr	w0, [sp, #44]
    310c:	cmp	w0, #0x1
    3110:	b.eq	3124 <XS_Time__HiRes_nanosleep+0x90>  // b.none
    3114:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3118:	add	x1, x0, #0xda0
    311c:	ldr	x0, [sp, #16]
    3120:	bl	1450 <Perl_croak_xs_usage@plt>
    3124:	ldr	x0, [sp, #24]
    3128:	ldr	x1, [x0, #24]
    312c:	ldrsw	x0, [sp, #40]
    3130:	lsl	x0, x0, #3
    3134:	add	x0, x1, x0
    3138:	ldr	x0, [x0]
    313c:	ldr	w1, [x0, #12]
    3140:	mov	w0, #0x200                 	// #512
    3144:	movk	w0, #0x20, lsl #16
    3148:	and	w0, w1, w0
    314c:	cmp	w0, #0x200
    3150:	b.ne	3178 <XS_Time__HiRes_nanosleep+0xe4>  // b.any
    3154:	ldr	x0, [sp, #24]
    3158:	ldr	x1, [x0, #24]
    315c:	ldrsw	x0, [sp, #40]
    3160:	lsl	x0, x0, #3
    3164:	add	x0, x1, x0
    3168:	ldr	x0, [x0]
    316c:	ldr	x0, [x0]
    3170:	ldr	d0, [x0, #40]
    3174:	b	31a0 <XS_Time__HiRes_nanosleep+0x10c>
    3178:	ldr	x0, [sp, #24]
    317c:	ldr	x1, [x0, #24]
    3180:	ldrsw	x0, [sp, #40]
    3184:	lsl	x0, x0, #3
    3188:	add	x0, x1, x0
    318c:	ldr	x0, [x0]
    3190:	mov	w2, #0x2                   	// #2
    3194:	mov	x1, x0
    3198:	ldr	x0, [sp, #24]
    319c:	bl	1460 <Perl_sv_2nv_flags@plt>
    31a0:	str	d0, [sp, #72]
    31a4:	ldr	x0, [sp, #24]
    31a8:	ldr	x0, [x0, #8]
    31ac:	ldrb	w0, [x0, #35]
    31b0:	and	w0, w0, #0x4
    31b4:	cmp	w0, #0x0
    31b8:	b.eq	31e0 <XS_Time__HiRes_nanosleep+0x14c>  // b.none
    31bc:	ldr	x0, [sp, #24]
    31c0:	ldr	x1, [x0, #16]
    31c4:	ldr	x0, [sp, #24]
    31c8:	ldr	x0, [x0, #8]
    31cc:	ldr	x0, [x0, #24]
    31d0:	lsl	x0, x0, #3
    31d4:	add	x0, x1, x0
    31d8:	ldr	x0, [x0]
    31dc:	b	31e8 <XS_Time__HiRes_nanosleep+0x154>
    31e0:	ldr	x0, [sp, #24]
    31e4:	bl	15e0 <Perl_sv_newmortal@plt>
    31e8:	str	x0, [sp, #80]
    31ec:	ldr	d0, [sp, #72]
    31f0:	fcmpe	d0, #0.0
    31f4:	b.pl	3208 <XS_Time__HiRes_nanosleep+0x174>  // b.nfrst
    31f8:	ldr	d0, [sp, #72]
    31fc:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3200:	add	x0, x0, #0xda8
    3204:	bl	1490 <Perl_croak_nocontext@plt>
    3208:	add	x1, sp, #0x78
    320c:	add	x0, sp, #0x68
    3210:	ldr	d0, [sp, #72]
    3214:	bl	27bc <nanosleep_init>
    3218:	add	x1, sp, #0x78
    321c:	add	x0, sp, #0x68
    3220:	bl	14b0 <nanosleep@plt>
    3224:	cmp	w0, #0x0
    3228:	b.ne	3238 <XS_Time__HiRes_nanosleep+0x1a4>  // b.any
    322c:	ldr	d0, [sp, #72]
    3230:	str	d0, [sp, #48]
    3234:	b	3248 <XS_Time__HiRes_nanosleep+0x1b4>
    3238:	add	x1, sp, #0x78
    323c:	add	x0, sp, #0x68
    3240:	bl	2838 <nsec_without_unslept>
    3244:	str	d0, [sp, #48]
    3248:	ldr	x0, [sp, #24]
    324c:	ldr	x1, [x0, #24]
    3250:	ldrsw	x0, [sp, #40]
    3254:	lsl	x0, x0, #3
    3258:	sub	x0, x0, #0x8
    325c:	add	x0, x1, x0
    3260:	str	x0, [sp, #56]
    3264:	ldr	d0, [sp, #48]
    3268:	str	d0, [sp, #88]
    326c:	ldr	x0, [sp, #80]
    3270:	ldr	w1, [x0, #12]
    3274:	mov	w0, #0x8ff                 	// #2303
    3278:	movk	w0, #0x1981, lsl #16
    327c:	and	w0, w1, w0
    3280:	cmp	w0, #0x2
    3284:	cset	w0, eq  // eq = none
    3288:	and	w0, w0, #0xff
    328c:	mov	w1, w0
    3290:	ldr	x0, [sp, #24]
    3294:	ldrb	w0, [x0, #185]
    3298:	eor	w0, w0, #0x1
    329c:	and	w0, w0, #0xff
    32a0:	and	w0, w1, w0
    32a4:	cmp	w0, #0x0
    32a8:	cset	w0, ne  // ne = any
    32ac:	and	w0, w0, #0xff
    32b0:	and	x0, x0, #0xff
    32b4:	cmp	x0, #0x0
    32b8:	b.eq	32e8 <XS_Time__HiRes_nanosleep+0x254>  // b.none
    32bc:	ldr	x0, [sp, #80]
    32c0:	ldr	w1, [x0, #12]
    32c4:	mov	w0, #0x2200                	// #8704
    32c8:	orr	w1, w1, w0
    32cc:	ldr	x0, [sp, #80]
    32d0:	str	w1, [x0, #12]
    32d4:	ldr	x0, [sp, #80]
    32d8:	ldr	x0, [x0]
    32dc:	ldr	d0, [sp, #88]
    32e0:	str	d0, [x0, #40]
    32e4:	b	32f8 <XS_Time__HiRes_nanosleep+0x264>
    32e8:	ldr	d0, [sp, #88]
    32ec:	ldr	x1, [sp, #80]
    32f0:	ldr	x0, [sp, #24]
    32f4:	bl	13c0 <Perl_sv_setnv_mg@plt>
    32f8:	ldr	x0, [sp, #56]
    32fc:	add	x0, x0, #0x8
    3300:	str	x0, [sp, #56]
    3304:	ldr	x0, [sp, #56]
    3308:	ldr	x1, [sp, #80]
    330c:	str	x1, [x0]
    3310:	mov	x0, #0x1                   	// #1
    3314:	str	x0, [sp, #96]
    3318:	ldr	x0, [sp, #24]
    331c:	ldr	x1, [x0, #24]
    3320:	ldrsw	x2, [sp, #40]
    3324:	ldr	x0, [sp, #96]
    3328:	add	x0, x2, x0
    332c:	lsl	x0, x0, #3
    3330:	sub	x0, x0, #0x8
    3334:	add	x1, x1, x0
    3338:	ldr	x0, [sp, #24]
    333c:	str	x1, [x0]
    3340:	nop
    3344:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3348:	ldr	x0, [x0, #4040]
    334c:	ldr	x1, [sp, #136]
    3350:	ldr	x0, [x0]
    3354:	eor	x0, x1, x0
    3358:	cmp	x0, #0x0
    335c:	b.eq	3364 <XS_Time__HiRes_nanosleep+0x2d0>  // b.none
    3360:	bl	1430 <__stack_chk_fail@plt>
    3364:	ldp	x29, x30, [sp], #144
    3368:	ret

000000000000336c <XS_Time__HiRes_sleep>:
    336c:	stp	x29, x30, [sp, #-144]!
    3370:	mov	x29, sp
    3374:	str	x0, [sp, #24]
    3378:	str	x1, [sp, #16]
    337c:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3380:	ldr	x0, [x0, #4040]
    3384:	ldr	x1, [x0]
    3388:	str	x1, [sp, #136]
    338c:	mov	x1, #0x0                   	// #0
    3390:	ldr	x0, [sp, #24]
    3394:	ldr	x0, [x0]
    3398:	str	x0, [sp, #40]
    339c:	ldr	x0, [sp, #24]
    33a0:	bl	1780 <S_POPMARK>
    33a4:	str	w0, [sp, #32]
    33a8:	ldr	x0, [sp, #24]
    33ac:	ldr	x1, [x0, #24]
    33b0:	ldr	w0, [sp, #32]
    33b4:	add	w2, w0, #0x1
    33b8:	str	w2, [sp, #32]
    33bc:	sxtw	x0, w0
    33c0:	lsl	x0, x0, #3
    33c4:	add	x0, x1, x0
    33c8:	str	x0, [sp, #48]
    33cc:	ldr	x1, [sp, #40]
    33d0:	ldr	x0, [sp, #48]
    33d4:	sub	x0, x1, x0
    33d8:	asr	x0, x0, #3
    33dc:	str	w0, [sp, #36]
    33e0:	ldr	x0, [sp, #24]
    33e4:	ldr	x0, [x0, #8]
    33e8:	ldrb	w0, [x0, #35]
    33ec:	and	w0, w0, #0x4
    33f0:	cmp	w0, #0x0
    33f4:	b.eq	341c <XS_Time__HiRes_sleep+0xb0>  // b.none
    33f8:	ldr	x0, [sp, #24]
    33fc:	ldr	x1, [x0, #16]
    3400:	ldr	x0, [sp, #24]
    3404:	ldr	x0, [x0, #8]
    3408:	ldr	x0, [x0, #24]
    340c:	lsl	x0, x0, #3
    3410:	add	x0, x1, x0
    3414:	ldr	x0, [x0]
    3418:	b	3424 <XS_Time__HiRes_sleep+0xb8>
    341c:	ldr	x0, [sp, #24]
    3420:	bl	15e0 <Perl_sv_newmortal@plt>
    3424:	str	x0, [sp, #56]
    3428:	add	x0, sp, #0x68
    342c:	mov	x1, #0x0                   	// #0
    3430:	bl	1410 <gettimeofday@plt>
    3434:	ldr	w0, [sp, #36]
    3438:	cmp	w0, #0x0
    343c:	b.le	3564 <XS_Time__HiRes_sleep+0x1f8>
    3440:	ldr	x0, [sp, #24]
    3444:	ldr	x1, [x0, #24]
    3448:	ldrsw	x0, [sp, #32]
    344c:	lsl	x0, x0, #3
    3450:	add	x0, x1, x0
    3454:	ldr	x0, [x0]
    3458:	ldr	w1, [x0, #12]
    345c:	mov	w0, #0x200                 	// #512
    3460:	movk	w0, #0x20, lsl #16
    3464:	and	w0, w1, w0
    3468:	cmp	w0, #0x200
    346c:	b.ne	3494 <XS_Time__HiRes_sleep+0x128>  // b.any
    3470:	ldr	x0, [sp, #24]
    3474:	ldr	x1, [x0, #24]
    3478:	ldrsw	x0, [sp, #32]
    347c:	lsl	x0, x0, #3
    3480:	add	x0, x1, x0
    3484:	ldr	x0, [x0]
    3488:	ldr	x0, [x0]
    348c:	ldr	d0, [x0, #40]
    3490:	b	34bc <XS_Time__HiRes_sleep+0x150>
    3494:	ldr	x0, [sp, #24]
    3498:	ldr	x1, [x0, #24]
    349c:	ldrsw	x0, [sp, #32]
    34a0:	lsl	x0, x0, #3
    34a4:	add	x0, x1, x0
    34a8:	ldr	x0, [x0]
    34ac:	mov	w2, #0x2                   	// #2
    34b0:	mov	x1, x0
    34b4:	ldr	x0, [sp, #24]
    34b8:	bl	1460 <Perl_sv_2nv_flags@plt>
    34bc:	str	d0, [sp, #64]
    34c0:	ldr	d0, [sp, #64]
    34c4:	fcmpe	d0, #0.0
    34c8:	b.lt	3554 <XS_Time__HiRes_sleep+0x1e8>  // b.tstop
    34cc:	ldr	d0, [sp, #64]
    34d0:	fcvtzu	d0, d0
    34d4:	ucvtf	d0, d0
    34d8:	ldr	d1, [sp, #64]
    34dc:	fsub	d0, d1, d0
    34e0:	mov	x0, #0x848000000000        	// #145685290680320
    34e4:	movk	x0, #0x412e, lsl #48
    34e8:	fmov	d1, x0
    34ec:	fmul	d0, d0, d1
    34f0:	fcvtzu	d0, d0
    34f4:	str	d0, [sp, #72]
    34f8:	ldr	d1, [sp, #64]
    34fc:	fmov	d0, #1.000000000000000000e+00
    3500:	fcmpe	d1, d0
    3504:	b.lt	3514 <XS_Time__HiRes_sleep+0x1a8>  // b.tstop
    3508:	ldr	d0, [sp, #64]
    350c:	fcvtzu	w0, d0
    3510:	bl	1420 <sleep@plt>
    3514:	ldr	x0, [sp, #72]
    3518:	cmp	x0, #0x0
    351c:	b.ge	3548 <XS_Time__HiRes_sleep+0x1dc>  // b.tcont
    3520:	ldr	x0, [sp, #72]
    3524:	cmp	x0, #0x0
    3528:	b.ge	3548 <XS_Time__HiRes_sleep+0x1dc>  // b.tcont
    352c:	ldr	x0, [sp, #72]
    3530:	mov	x2, x0
    3534:	ldr	x1, [sp, #72]
    3538:	ldr	d0, [sp, #64]
    353c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3540:	add	x0, x0, #0xde8
    3544:	bl	1490 <Perl_croak_nocontext@plt>
    3548:	ldr	x0, [sp, #72]
    354c:	bl	1550 <usleep@plt>
    3550:	b	3568 <XS_Time__HiRes_sleep+0x1fc>
    3554:	ldr	d0, [sp, #64]
    3558:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    355c:	add	x0, x0, #0xe38
    3560:	bl	1490 <Perl_croak_nocontext@plt>
    3564:	bl	1330 <pause@plt>
    3568:	add	x0, sp, #0x78
    356c:	mov	x1, #0x0                   	// #0
    3570:	bl	1410 <gettimeofday@plt>
    3574:	ldr	x1, [sp, #120]
    3578:	ldr	x0, [sp, #104]
    357c:	sub	x0, x1, x0
    3580:	fmov	d0, x0
    3584:	scvtf	d1, d0
    3588:	ldr	x1, [sp, #128]
    358c:	ldr	x0, [sp, #112]
    3590:	sub	x0, x1, x0
    3594:	fmov	d0, x0
    3598:	scvtf	d0, d0
    359c:	adrp	x0, 7000 <_fini+0x710>
    35a0:	ldr	d2, [x0, #768]
    35a4:	fmul	d0, d0, d2
    35a8:	fadd	d0, d1, d0
    35ac:	str	d0, [sp, #80]
    35b0:	ldr	x0, [sp, #24]
    35b4:	ldr	x1, [x0, #24]
    35b8:	ldrsw	x0, [sp, #32]
    35bc:	lsl	x0, x0, #3
    35c0:	sub	x0, x0, #0x8
    35c4:	add	x0, x1, x0
    35c8:	str	x0, [sp, #40]
    35cc:	ldr	d0, [sp, #80]
    35d0:	str	d0, [sp, #88]
    35d4:	ldr	x0, [sp, #56]
    35d8:	ldr	w1, [x0, #12]
    35dc:	mov	w0, #0x8ff                 	// #2303
    35e0:	movk	w0, #0x1981, lsl #16
    35e4:	and	w0, w1, w0
    35e8:	cmp	w0, #0x2
    35ec:	cset	w0, eq  // eq = none
    35f0:	and	w0, w0, #0xff
    35f4:	mov	w1, w0
    35f8:	ldr	x0, [sp, #24]
    35fc:	ldrb	w0, [x0, #185]
    3600:	eor	w0, w0, #0x1
    3604:	and	w0, w0, #0xff
    3608:	and	w0, w1, w0
    360c:	cmp	w0, #0x0
    3610:	cset	w0, ne  // ne = any
    3614:	and	w0, w0, #0xff
    3618:	and	x0, x0, #0xff
    361c:	cmp	x0, #0x0
    3620:	b.eq	3650 <XS_Time__HiRes_sleep+0x2e4>  // b.none
    3624:	ldr	x0, [sp, #56]
    3628:	ldr	w1, [x0, #12]
    362c:	mov	w0, #0x2200                	// #8704
    3630:	orr	w1, w1, w0
    3634:	ldr	x0, [sp, #56]
    3638:	str	w1, [x0, #12]
    363c:	ldr	x0, [sp, #56]
    3640:	ldr	x0, [x0]
    3644:	ldr	d0, [sp, #88]
    3648:	str	d0, [x0, #40]
    364c:	b	3660 <XS_Time__HiRes_sleep+0x2f4>
    3650:	ldr	d0, [sp, #88]
    3654:	ldr	x1, [sp, #56]
    3658:	ldr	x0, [sp, #24]
    365c:	bl	13c0 <Perl_sv_setnv_mg@plt>
    3660:	ldr	x0, [sp, #40]
    3664:	add	x0, x0, #0x8
    3668:	str	x0, [sp, #40]
    366c:	ldr	x0, [sp, #40]
    3670:	ldr	x1, [sp, #56]
    3674:	str	x1, [x0]
    3678:	mov	x0, #0x1                   	// #1
    367c:	str	x0, [sp, #96]
    3680:	ldr	x0, [sp, #24]
    3684:	ldr	x1, [x0, #24]
    3688:	ldrsw	x2, [sp, #32]
    368c:	ldr	x0, [sp, #96]
    3690:	add	x0, x2, x0
    3694:	lsl	x0, x0, #3
    3698:	sub	x0, x0, #0x8
    369c:	add	x1, x1, x0
    36a0:	ldr	x0, [sp, #24]
    36a4:	str	x1, [x0]
    36a8:	nop
    36ac:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    36b0:	ldr	x0, [x0, #4040]
    36b4:	ldr	x1, [sp, #136]
    36b8:	ldr	x0, [x0]
    36bc:	eor	x0, x1, x0
    36c0:	cmp	x0, #0x0
    36c4:	b.eq	36cc <XS_Time__HiRes_sleep+0x360>  // b.none
    36c8:	bl	1430 <__stack_chk_fail@plt>
    36cc:	ldp	x29, x30, [sp], #144
    36d0:	ret

00000000000036d4 <XS_Time__HiRes_ualarm>:
    36d4:	stp	x29, x30, [sp, #-144]!
    36d8:	mov	x29, sp
    36dc:	str	x0, [sp, #24]
    36e0:	str	x1, [sp, #16]
    36e4:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    36e8:	ldr	x0, [x0, #4040]
    36ec:	ldr	x1, [x0]
    36f0:	str	x1, [sp, #136]
    36f4:	mov	x1, #0x0                   	// #0
    36f8:	ldr	x0, [sp, #24]
    36fc:	ldr	x0, [x0]
    3700:	str	x0, [sp, #64]
    3704:	ldr	x0, [sp, #24]
    3708:	bl	1780 <S_POPMARK>
    370c:	str	w0, [sp, #44]
    3710:	ldr	x0, [sp, #24]
    3714:	ldr	x1, [x0, #24]
    3718:	ldr	w0, [sp, #44]
    371c:	add	w2, w0, #0x1
    3720:	str	w2, [sp, #44]
    3724:	sxtw	x0, w0
    3728:	lsl	x0, x0, #3
    372c:	add	x0, x1, x0
    3730:	str	x0, [sp, #72]
    3734:	ldr	x1, [sp, #64]
    3738:	ldr	x0, [sp, #72]
    373c:	sub	x0, x1, x0
    3740:	asr	x0, x0, #3
    3744:	str	w0, [sp, #48]
    3748:	ldr	w0, [sp, #48]
    374c:	cmp	w0, #0x0
    3750:	b.le	3760 <XS_Time__HiRes_ualarm+0x8c>
    3754:	ldr	w0, [sp, #48]
    3758:	cmp	w0, #0x2
    375c:	b.le	3770 <XS_Time__HiRes_ualarm+0x9c>
    3760:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3764:	add	x1, x0, #0xe70
    3768:	ldr	x0, [sp, #16]
    376c:	bl	1450 <Perl_croak_xs_usage@plt>
    3770:	ldr	x0, [sp, #24]
    3774:	ldr	x1, [x0, #24]
    3778:	ldrsw	x0, [sp, #44]
    377c:	lsl	x0, x0, #3
    3780:	add	x0, x1, x0
    3784:	ldr	x0, [x0]
    3788:	ldr	w1, [x0, #12]
    378c:	mov	w0, #0x100                 	// #256
    3790:	movk	w0, #0x20, lsl #16
    3794:	and	w0, w1, w0
    3798:	cmp	w0, #0x100
    379c:	b.ne	37c4 <XS_Time__HiRes_ualarm+0xf0>  // b.any
    37a0:	ldr	x0, [sp, #24]
    37a4:	ldr	x1, [x0, #24]
    37a8:	ldrsw	x0, [sp, #44]
    37ac:	lsl	x0, x0, #3
    37b0:	add	x0, x1, x0
    37b4:	ldr	x0, [x0]
    37b8:	ldr	x0, [x0]
    37bc:	ldr	x0, [x0, #32]
    37c0:	b	37ec <XS_Time__HiRes_ualarm+0x118>
    37c4:	ldr	x0, [sp, #24]
    37c8:	ldr	x1, [x0, #24]
    37cc:	ldrsw	x0, [sp, #44]
    37d0:	lsl	x0, x0, #3
    37d4:	add	x0, x1, x0
    37d8:	ldr	x0, [x0]
    37dc:	mov	w2, #0x2                   	// #2
    37e0:	mov	x1, x0
    37e4:	ldr	x0, [sp, #24]
    37e8:	bl	12e0 <Perl_sv_2iv_flags@plt>
    37ec:	str	w0, [sp, #52]
    37f0:	ldr	x0, [sp, #24]
    37f4:	ldr	x0, [x0, #8]
    37f8:	ldrb	w0, [x0, #35]
    37fc:	and	w0, w0, #0x4
    3800:	cmp	w0, #0x0
    3804:	b.eq	382c <XS_Time__HiRes_ualarm+0x158>  // b.none
    3808:	ldr	x0, [sp, #24]
    380c:	ldr	x1, [x0, #16]
    3810:	ldr	x0, [sp, #24]
    3814:	ldr	x0, [x0, #8]
    3818:	ldr	x0, [x0, #24]
    381c:	lsl	x0, x0, #3
    3820:	add	x0, x1, x0
    3824:	ldr	x0, [x0]
    3828:	b	3834 <XS_Time__HiRes_ualarm+0x160>
    382c:	ldr	x0, [sp, #24]
    3830:	bl	15e0 <Perl_sv_newmortal@plt>
    3834:	str	x0, [sp, #80]
    3838:	ldr	w0, [sp, #48]
    383c:	cmp	w0, #0x1
    3840:	b.gt	384c <XS_Time__HiRes_ualarm+0x178>
    3844:	str	wzr, [sp, #40]
    3848:	b	38d8 <XS_Time__HiRes_ualarm+0x204>
    384c:	ldr	x0, [sp, #24]
    3850:	ldr	x1, [x0, #24]
    3854:	ldrsw	x0, [sp, #44]
    3858:	add	x0, x0, #0x1
    385c:	lsl	x0, x0, #3
    3860:	add	x0, x1, x0
    3864:	ldr	x0, [x0]
    3868:	ldr	w1, [x0, #12]
    386c:	mov	w0, #0x100                 	// #256
    3870:	movk	w0, #0x20, lsl #16
    3874:	and	w0, w1, w0
    3878:	cmp	w0, #0x100
    387c:	b.ne	38a8 <XS_Time__HiRes_ualarm+0x1d4>  // b.any
    3880:	ldr	x0, [sp, #24]
    3884:	ldr	x1, [x0, #24]
    3888:	ldrsw	x0, [sp, #44]
    388c:	add	x0, x0, #0x1
    3890:	lsl	x0, x0, #3
    3894:	add	x0, x1, x0
    3898:	ldr	x0, [x0]
    389c:	ldr	x0, [x0]
    38a0:	ldr	x0, [x0, #32]
    38a4:	b	38d4 <XS_Time__HiRes_ualarm+0x200>
    38a8:	ldr	x0, [sp, #24]
    38ac:	ldr	x1, [x0, #24]
    38b0:	ldrsw	x0, [sp, #44]
    38b4:	add	x0, x0, #0x1
    38b8:	lsl	x0, x0, #3
    38bc:	add	x0, x1, x0
    38c0:	ldr	x0, [x0]
    38c4:	mov	w2, #0x2                   	// #2
    38c8:	mov	x1, x0
    38cc:	ldr	x0, [sp, #24]
    38d0:	bl	12e0 <Perl_sv_2iv_flags@plt>
    38d4:	str	w0, [sp, #40]
    38d8:	ldr	w0, [sp, #52]
    38dc:	cmp	w0, #0x0
    38e0:	b.lt	38f0 <XS_Time__HiRes_ualarm+0x21c>  // b.tstop
    38e4:	ldr	w0, [sp, #40]
    38e8:	cmp	w0, #0x0
    38ec:	b.ge	3904 <XS_Time__HiRes_ualarm+0x230>  // b.tcont
    38f0:	ldr	w2, [sp, #40]
    38f4:	ldr	w1, [sp, #52]
    38f8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    38fc:	add	x0, x0, #0xe88
    3900:	bl	1490 <Perl_croak_nocontext@plt>
    3904:	add	x0, sp, #0x68
    3908:	ldr	w2, [sp, #40]
    390c:	ldr	w1, [sp, #52]
    3910:	bl	1874 <hrt_ualarm_itimero>
    3914:	cmp	w0, #0x0
    3918:	b.eq	3924 <XS_Time__HiRes_ualarm+0x250>  // b.none
    391c:	str	xzr, [sp, #56]
    3920:	b	3940 <XS_Time__HiRes_ualarm+0x26c>
    3924:	ldr	x1, [sp, #120]
    3928:	mov	x0, #0x4240                	// #16960
    392c:	movk	x0, #0xf, lsl #16
    3930:	mul	x1, x1, x0
    3934:	ldr	x0, [sp, #128]
    3938:	add	x0, x1, x0
    393c:	str	x0, [sp, #56]
    3940:	ldr	x0, [sp, #24]
    3944:	ldr	x1, [x0, #24]
    3948:	ldrsw	x0, [sp, #44]
    394c:	lsl	x0, x0, #3
    3950:	sub	x0, x0, #0x8
    3954:	add	x0, x1, x0
    3958:	str	x0, [sp, #64]
    395c:	ldr	x0, [sp, #56]
    3960:	str	x0, [sp, #88]
    3964:	ldr	x0, [sp, #80]
    3968:	ldr	w1, [x0, #12]
    396c:	mov	w0, #0x8ff                 	// #2303
    3970:	movk	w0, #0x9981, lsl #16
    3974:	and	w0, w1, w0
    3978:	cmp	w0, #0x1
    397c:	cset	w0, eq  // eq = none
    3980:	and	w0, w0, #0xff
    3984:	mov	w1, w0
    3988:	ldr	x0, [sp, #24]
    398c:	ldrb	w0, [x0, #185]
    3990:	eor	w0, w0, #0x1
    3994:	and	w0, w0, #0xff
    3998:	and	w0, w1, w0
    399c:	cmp	w0, #0x0
    39a0:	cset	w0, ne  // ne = any
    39a4:	and	w0, w0, #0xff
    39a8:	and	x0, x0, #0xff
    39ac:	cmp	x0, #0x0
    39b0:	b.eq	39dc <XS_Time__HiRes_ualarm+0x308>  // b.none
    39b4:	ldr	x0, [sp, #80]
    39b8:	ldr	w1, [x0, #12]
    39bc:	mov	w0, #0x1100                	// #4352
    39c0:	orr	w1, w1, w0
    39c4:	ldr	x0, [sp, #80]
    39c8:	str	w1, [x0, #12]
    39cc:	ldr	x0, [sp, #80]
    39d0:	ldr	x1, [sp, #88]
    39d4:	str	x1, [x0, #16]
    39d8:	b	39ec <XS_Time__HiRes_ualarm+0x318>
    39dc:	ldr	x2, [sp, #88]
    39e0:	ldr	x1, [sp, #80]
    39e4:	ldr	x0, [sp, #24]
    39e8:	bl	1380 <Perl_sv_setiv_mg@plt>
    39ec:	ldr	x0, [sp, #64]
    39f0:	add	x0, x0, #0x8
    39f4:	str	x0, [sp, #64]
    39f8:	ldr	x0, [sp, #64]
    39fc:	ldr	x1, [sp, #80]
    3a00:	str	x1, [x0]
    3a04:	mov	x0, #0x1                   	// #1
    3a08:	str	x0, [sp, #96]
    3a0c:	ldr	x0, [sp, #24]
    3a10:	ldr	x1, [x0, #24]
    3a14:	ldrsw	x2, [sp, #44]
    3a18:	ldr	x0, [sp, #96]
    3a1c:	add	x0, x2, x0
    3a20:	lsl	x0, x0, #3
    3a24:	sub	x0, x0, #0x8
    3a28:	add	x1, x1, x0
    3a2c:	ldr	x0, [sp, #24]
    3a30:	str	x1, [x0]
    3a34:	nop
    3a38:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3a3c:	ldr	x0, [x0, #4040]
    3a40:	ldr	x1, [sp, #136]
    3a44:	ldr	x0, [x0]
    3a48:	eor	x0, x1, x0
    3a4c:	cmp	x0, #0x0
    3a50:	b.eq	3a58 <XS_Time__HiRes_ualarm+0x384>  // b.none
    3a54:	bl	1430 <__stack_chk_fail@plt>
    3a58:	ldp	x29, x30, [sp], #144
    3a5c:	ret

0000000000003a60 <XS_Time__HiRes_alarm>:
    3a60:	stp	x29, x30, [sp, #-224]!
    3a64:	mov	x29, sp
    3a68:	str	x0, [sp, #24]
    3a6c:	str	x1, [sp, #16]
    3a70:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3a74:	ldr	x0, [x0, #4040]
    3a78:	ldr	x1, [x0]
    3a7c:	str	x1, [sp, #216]
    3a80:	mov	x1, #0x0                   	// #0
    3a84:	ldr	x0, [sp, #24]
    3a88:	ldr	x0, [x0]
    3a8c:	str	x0, [sp, #56]
    3a90:	ldr	x0, [sp, #24]
    3a94:	bl	1780 <S_POPMARK>
    3a98:	str	w0, [sp, #32]
    3a9c:	ldr	x0, [sp, #24]
    3aa0:	ldr	x1, [x0, #24]
    3aa4:	ldr	w0, [sp, #32]
    3aa8:	add	w2, w0, #0x1
    3aac:	str	w2, [sp, #32]
    3ab0:	sxtw	x0, w0
    3ab4:	lsl	x0, x0, #3
    3ab8:	add	x0, x1, x0
    3abc:	str	x0, [sp, #64]
    3ac0:	ldr	x1, [sp, #56]
    3ac4:	ldr	x0, [sp, #64]
    3ac8:	sub	x0, x1, x0
    3acc:	asr	x0, x0, #3
    3ad0:	str	w0, [sp, #36]
    3ad4:	ldr	w0, [sp, #36]
    3ad8:	cmp	w0, #0x0
    3adc:	b.le	3aec <XS_Time__HiRes_alarm+0x8c>
    3ae0:	ldr	w0, [sp, #36]
    3ae4:	cmp	w0, #0x2
    3ae8:	b.le	3afc <XS_Time__HiRes_alarm+0x9c>
    3aec:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3af0:	add	x1, x0, #0xec8
    3af4:	ldr	x0, [sp, #16]
    3af8:	bl	1450 <Perl_croak_xs_usage@plt>
    3afc:	ldr	x0, [sp, #24]
    3b00:	ldr	x1, [x0, #24]
    3b04:	ldrsw	x0, [sp, #32]
    3b08:	lsl	x0, x0, #3
    3b0c:	add	x0, x1, x0
    3b10:	ldr	x0, [x0]
    3b14:	ldr	w1, [x0, #12]
    3b18:	mov	w0, #0x200                 	// #512
    3b1c:	movk	w0, #0x20, lsl #16
    3b20:	and	w0, w1, w0
    3b24:	cmp	w0, #0x200
    3b28:	b.ne	3b50 <XS_Time__HiRes_alarm+0xf0>  // b.any
    3b2c:	ldr	x0, [sp, #24]
    3b30:	ldr	x1, [x0, #24]
    3b34:	ldrsw	x0, [sp, #32]
    3b38:	lsl	x0, x0, #3
    3b3c:	add	x0, x1, x0
    3b40:	ldr	x0, [x0]
    3b44:	ldr	x0, [x0]
    3b48:	ldr	d0, [x0, #40]
    3b4c:	b	3b78 <XS_Time__HiRes_alarm+0x118>
    3b50:	ldr	x0, [sp, #24]
    3b54:	ldr	x1, [x0, #24]
    3b58:	ldrsw	x0, [sp, #32]
    3b5c:	lsl	x0, x0, #3
    3b60:	add	x0, x1, x0
    3b64:	ldr	x0, [x0]
    3b68:	mov	w2, #0x2                   	// #2
    3b6c:	mov	x1, x0
    3b70:	ldr	x0, [sp, #24]
    3b74:	bl	1460 <Perl_sv_2nv_flags@plt>
    3b78:	str	d0, [sp, #72]
    3b7c:	ldr	x0, [sp, #24]
    3b80:	ldr	x0, [x0, #8]
    3b84:	ldrb	w0, [x0, #35]
    3b88:	and	w0, w0, #0x4
    3b8c:	cmp	w0, #0x0
    3b90:	b.eq	3bb8 <XS_Time__HiRes_alarm+0x158>  // b.none
    3b94:	ldr	x0, [sp, #24]
    3b98:	ldr	x1, [x0, #16]
    3b9c:	ldr	x0, [sp, #24]
    3ba0:	ldr	x0, [x0, #8]
    3ba4:	ldr	x0, [x0, #24]
    3ba8:	lsl	x0, x0, #3
    3bac:	add	x0, x1, x0
    3bb0:	ldr	x0, [x0]
    3bb4:	b	3bc0 <XS_Time__HiRes_alarm+0x160>
    3bb8:	ldr	x0, [sp, #24]
    3bbc:	bl	15e0 <Perl_sv_newmortal@plt>
    3bc0:	str	x0, [sp, #80]
    3bc4:	ldr	w0, [sp, #36]
    3bc8:	cmp	w0, #0x1
    3bcc:	b.gt	3bd8 <XS_Time__HiRes_alarm+0x178>
    3bd0:	str	xzr, [sp, #40]
    3bd4:	b	3c64 <XS_Time__HiRes_alarm+0x204>
    3bd8:	ldr	x0, [sp, #24]
    3bdc:	ldr	x1, [x0, #24]
    3be0:	ldrsw	x0, [sp, #32]
    3be4:	add	x0, x0, #0x1
    3be8:	lsl	x0, x0, #3
    3bec:	add	x0, x1, x0
    3bf0:	ldr	x0, [x0]
    3bf4:	ldr	w1, [x0, #12]
    3bf8:	mov	w0, #0x200                 	// #512
    3bfc:	movk	w0, #0x20, lsl #16
    3c00:	and	w0, w1, w0
    3c04:	cmp	w0, #0x200
    3c08:	b.ne	3c34 <XS_Time__HiRes_alarm+0x1d4>  // b.any
    3c0c:	ldr	x0, [sp, #24]
    3c10:	ldr	x1, [x0, #24]
    3c14:	ldrsw	x0, [sp, #32]
    3c18:	add	x0, x0, #0x1
    3c1c:	lsl	x0, x0, #3
    3c20:	add	x0, x1, x0
    3c24:	ldr	x0, [x0]
    3c28:	ldr	x0, [x0]
    3c2c:	ldr	d0, [x0, #40]
    3c30:	b	3c60 <XS_Time__HiRes_alarm+0x200>
    3c34:	ldr	x0, [sp, #24]
    3c38:	ldr	x1, [x0, #24]
    3c3c:	ldrsw	x0, [sp, #32]
    3c40:	add	x0, x0, #0x1
    3c44:	lsl	x0, x0, #3
    3c48:	add	x0, x1, x0
    3c4c:	ldr	x0, [x0]
    3c50:	mov	w2, #0x2                   	// #2
    3c54:	mov	x1, x0
    3c58:	ldr	x0, [sp, #24]
    3c5c:	bl	1460 <Perl_sv_2nv_flags@plt>
    3c60:	str	d0, [sp, #40]
    3c64:	ldr	d0, [sp, #72]
    3c68:	fcmpe	d0, #0.0
    3c6c:	b.mi	3c7c <XS_Time__HiRes_alarm+0x21c>  // b.first
    3c70:	ldr	d0, [sp, #40]
    3c74:	fcmpe	d0, #0.0
    3c78:	b.pl	3c90 <XS_Time__HiRes_alarm+0x230>  // b.nfrst
    3c7c:	ldr	d1, [sp, #40]
    3c80:	ldr	d0, [sp, #72]
    3c84:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3c88:	add	x0, x0, #0xee0
    3c8c:	bl	1490 <Perl_croak_nocontext@plt>
    3c90:	ldr	d0, [sp, #72]
    3c94:	fcvtzs	d0, d0
    3c98:	str	d0, [sp, #88]
    3c9c:	ldr	d0, [sp, #40]
    3ca0:	fcvtzs	d0, d0
    3ca4:	str	d0, [sp, #96]
    3ca8:	ldr	d0, [sp, #88]
    3cac:	scvtf	d0, d0
    3cb0:	ldr	d1, [sp, #72]
    3cb4:	fsub	d0, d1, d0
    3cb8:	str	d0, [sp, #104]
    3cbc:	ldr	d0, [sp, #96]
    3cc0:	scvtf	d0, d0
    3cc4:	ldr	d1, [sp, #40]
    3cc8:	fsub	d0, d1, d0
    3ccc:	str	d0, [sp, #112]
    3cd0:	ldr	d1, [sp, #104]
    3cd4:	fmov	d0, #1.000000000000000000e+00
    3cd8:	fcmpe	d1, d0
    3cdc:	b.ge	3cf0 <XS_Time__HiRes_alarm+0x290>  // b.tcont
    3ce0:	ldr	d1, [sp, #112]
    3ce4:	fmov	d0, #1.000000000000000000e+00
    3ce8:	fcmpe	d1, d0
    3cec:	b.lt	3d04 <XS_Time__HiRes_alarm+0x2a4>  // b.tstop
    3cf0:	ldr	d1, [sp, #40]
    3cf4:	ldr	d0, [sp, #72]
    3cf8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3cfc:	add	x0, x0, #0xf20
    3d00:	bl	1490 <Perl_croak_nocontext@plt>
    3d04:	ldr	d0, [sp, #104]
    3d08:	mov	x0, #0x848000000000        	// #145685290680320
    3d0c:	movk	x0, #0x412e, lsl #48
    3d10:	fmov	d1, x0
    3d14:	fmul	d0, d0, d1
    3d18:	fcvtzs	d0, d0
    3d1c:	str	d0, [sp, #120]
    3d20:	ldr	d0, [sp, #112]
    3d24:	mov	x0, #0x848000000000        	// #145685290680320
    3d28:	movk	x0, #0x412e, lsl #48
    3d2c:	fmov	d1, x0
    3d30:	fmul	d0, d0, d1
    3d34:	fcvtzs	d0, d0
    3d38:	str	d0, [sp, #128]
    3d3c:	ldr	x0, [sp, #88]
    3d40:	str	x0, [sp, #168]
    3d44:	ldr	x0, [sp, #120]
    3d48:	str	x0, [sp, #176]
    3d4c:	ldr	x0, [sp, #96]
    3d50:	str	x0, [sp, #152]
    3d54:	ldr	x0, [sp, #128]
    3d58:	str	x0, [sp, #160]
    3d5c:	add	x1, sp, #0xb8
    3d60:	add	x0, sp, #0x98
    3d64:	mov	x2, x1
    3d68:	mov	x1, x0
    3d6c:	mov	w0, #0x0                   	// #0
    3d70:	bl	14f0 <setitimer@plt>
    3d74:	cmp	w0, #0x0
    3d78:	b.eq	3d84 <XS_Time__HiRes_alarm+0x324>  // b.none
    3d7c:	str	xzr, [sp, #48]
    3d80:	b	3dac <XS_Time__HiRes_alarm+0x34c>
    3d84:	ldr	d0, [sp, #200]
    3d88:	scvtf	d1, d0
    3d8c:	ldr	d0, [sp, #208]
    3d90:	scvtf	d0, d0
    3d94:	mov	x0, #0x848000000000        	// #145685290680320
    3d98:	movk	x0, #0x412e, lsl #48
    3d9c:	fmov	d2, x0
    3da0:	fdiv	d0, d0, d2
    3da4:	fadd	d0, d1, d0
    3da8:	str	d0, [sp, #48]
    3dac:	ldr	x0, [sp, #24]
    3db0:	ldr	x1, [x0, #24]
    3db4:	ldrsw	x0, [sp, #32]
    3db8:	lsl	x0, x0, #3
    3dbc:	sub	x0, x0, #0x8
    3dc0:	add	x0, x1, x0
    3dc4:	str	x0, [sp, #56]
    3dc8:	ldr	d0, [sp, #48]
    3dcc:	str	d0, [sp, #136]
    3dd0:	ldr	x0, [sp, #80]
    3dd4:	ldr	w1, [x0, #12]
    3dd8:	mov	w0, #0x8ff                 	// #2303
    3ddc:	movk	w0, #0x1981, lsl #16
    3de0:	and	w0, w1, w0
    3de4:	cmp	w0, #0x2
    3de8:	cset	w0, eq  // eq = none
    3dec:	and	w0, w0, #0xff
    3df0:	mov	w1, w0
    3df4:	ldr	x0, [sp, #24]
    3df8:	ldrb	w0, [x0, #185]
    3dfc:	eor	w0, w0, #0x1
    3e00:	and	w0, w0, #0xff
    3e04:	and	w0, w1, w0
    3e08:	cmp	w0, #0x0
    3e0c:	cset	w0, ne  // ne = any
    3e10:	and	w0, w0, #0xff
    3e14:	and	x0, x0, #0xff
    3e18:	cmp	x0, #0x0
    3e1c:	b.eq	3e4c <XS_Time__HiRes_alarm+0x3ec>  // b.none
    3e20:	ldr	x0, [sp, #80]
    3e24:	ldr	w1, [x0, #12]
    3e28:	mov	w0, #0x2200                	// #8704
    3e2c:	orr	w1, w1, w0
    3e30:	ldr	x0, [sp, #80]
    3e34:	str	w1, [x0, #12]
    3e38:	ldr	x0, [sp, #80]
    3e3c:	ldr	x0, [x0]
    3e40:	ldr	d0, [sp, #136]
    3e44:	str	d0, [x0, #40]
    3e48:	b	3e5c <XS_Time__HiRes_alarm+0x3fc>
    3e4c:	ldr	d0, [sp, #136]
    3e50:	ldr	x1, [sp, #80]
    3e54:	ldr	x0, [sp, #24]
    3e58:	bl	13c0 <Perl_sv_setnv_mg@plt>
    3e5c:	ldr	x0, [sp, #56]
    3e60:	add	x0, x0, #0x8
    3e64:	str	x0, [sp, #56]
    3e68:	ldr	x0, [sp, #56]
    3e6c:	ldr	x1, [sp, #80]
    3e70:	str	x1, [x0]
    3e74:	mov	x0, #0x1                   	// #1
    3e78:	str	x0, [sp, #144]
    3e7c:	ldr	x0, [sp, #24]
    3e80:	ldr	x1, [x0, #24]
    3e84:	ldrsw	x2, [sp, #32]
    3e88:	ldr	x0, [sp, #144]
    3e8c:	add	x0, x2, x0
    3e90:	lsl	x0, x0, #3
    3e94:	sub	x0, x0, #0x8
    3e98:	add	x1, x1, x0
    3e9c:	ldr	x0, [sp, #24]
    3ea0:	str	x1, [x0]
    3ea4:	nop
    3ea8:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3eac:	ldr	x0, [x0, #4040]
    3eb0:	ldr	x1, [sp, #216]
    3eb4:	ldr	x0, [x0]
    3eb8:	eor	x0, x1, x0
    3ebc:	cmp	x0, #0x0
    3ec0:	b.eq	3ec8 <XS_Time__HiRes_alarm+0x468>  // b.none
    3ec4:	bl	1430 <__stack_chk_fail@plt>
    3ec8:	ldp	x29, x30, [sp], #224
    3ecc:	ret

0000000000003ed0 <XS_Time__HiRes_gettimeofday>:
    3ed0:	stp	x29, x30, [sp, #-96]!
    3ed4:	mov	x29, sp
    3ed8:	str	x0, [sp, #24]
    3edc:	str	x1, [sp, #16]
    3ee0:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    3ee4:	ldr	x0, [x0, #4040]
    3ee8:	ldr	x1, [x0]
    3eec:	str	x1, [sp, #88]
    3ef0:	mov	x1, #0x0                   	// #0
    3ef4:	ldr	x0, [sp, #24]
    3ef8:	ldr	x0, [x0]
    3efc:	str	x0, [sp, #56]
    3f00:	ldr	x0, [sp, #24]
    3f04:	bl	1780 <S_POPMARK>
    3f08:	str	w0, [sp, #44]
    3f0c:	ldr	x0, [sp, #24]
    3f10:	ldr	x1, [x0, #24]
    3f14:	ldr	w0, [sp, #44]
    3f18:	add	w2, w0, #0x1
    3f1c:	str	w2, [sp, #44]
    3f20:	sxtw	x0, w0
    3f24:	lsl	x0, x0, #3
    3f28:	add	x0, x1, x0
    3f2c:	str	x0, [sp, #64]
    3f30:	ldr	x1, [sp, #56]
    3f34:	ldr	x0, [sp, #64]
    3f38:	sub	x0, x1, x0
    3f3c:	asr	x0, x0, #3
    3f40:	str	w0, [sp, #48]
    3f44:	ldr	w0, [sp, #48]
    3f48:	cmp	w0, #0x0
    3f4c:	b.eq	3f60 <XS_Time__HiRes_gettimeofday+0x90>  // b.none
    3f50:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    3f54:	add	x1, x0, #0xf70
    3f58:	ldr	x0, [sp, #16]
    3f5c:	bl	1450 <Perl_croak_xs_usage@plt>
    3f60:	ldrsw	x0, [sp, #48]
    3f64:	lsl	x0, x0, #3
    3f68:	neg	x0, x0
    3f6c:	ldr	x1, [sp, #56]
    3f70:	add	x0, x1, x0
    3f74:	str	x0, [sp, #56]
    3f78:	add	x0, sp, #0x48
    3f7c:	mov	x1, #0x0                   	// #0
    3f80:	bl	1410 <gettimeofday@plt>
    3f84:	str	w0, [sp, #52]
    3f88:	ldr	w0, [sp, #52]
    3f8c:	cmp	w0, #0x0
    3f90:	b.ne	4128 <XS_Time__HiRes_gettimeofday+0x258>  // b.any
    3f94:	ldr	x0, [sp, #24]
    3f98:	ldr	x0, [x0, #8]
    3f9c:	ldrb	w0, [x0, #34]
    3fa0:	and	w0, w0, #0x3
    3fa4:	cmp	w0, #0x0
    3fa8:	b.eq	3fcc <XS_Time__HiRes_gettimeofday+0xfc>  // b.none
    3fac:	ldr	x0, [sp, #24]
    3fb0:	ldr	x0, [x0, #8]
    3fb4:	ldrb	w0, [x0, #34]
    3fb8:	and	w0, w0, #0x3
    3fbc:	cmp	w0, #0x3
    3fc0:	cset	w0, eq  // eq = none
    3fc4:	and	w0, w0, #0xff
    3fc8:	b	3fe4 <XS_Time__HiRes_gettimeofday+0x114>
    3fcc:	ldr	x0, [sp, #24]
    3fd0:	bl	14c0 <Perl_dowantarray@plt>
    3fd4:	and	w0, w0, #0xff
    3fd8:	cmp	w0, #0x3
    3fdc:	cset	w0, eq  // eq = none
    3fe0:	and	w0, w0, #0xff
    3fe4:	cmp	w0, #0x0
    3fe8:	b.eq	4098 <XS_Time__HiRes_gettimeofday+0x1c8>  // b.none
    3fec:	ldr	x0, [sp, #24]
    3ff0:	ldr	x1, [x0, #32]
    3ff4:	ldr	x0, [sp, #56]
    3ff8:	sub	x0, x1, x0
    3ffc:	cmp	x0, #0x8
    4000:	cset	w0, le
    4004:	and	w0, w0, #0xff
    4008:	and	x0, x0, #0xff
    400c:	cmp	x0, #0x0
    4010:	b.eq	402c <XS_Time__HiRes_gettimeofday+0x15c>  // b.none
    4014:	mov	x3, #0x2                   	// #2
    4018:	ldr	x2, [sp, #56]
    401c:	ldr	x1, [sp, #56]
    4020:	ldr	x0, [sp, #24]
    4024:	bl	1320 <Perl_stack_grow@plt>
    4028:	str	x0, [sp, #56]
    402c:	ldr	x0, [sp, #72]
    4030:	mov	x1, x0
    4034:	ldr	x0, [sp, #24]
    4038:	bl	15a0 <Perl_newSViv@plt>
    403c:	mov	x1, x0
    4040:	ldr	x0, [sp, #56]
    4044:	add	x0, x0, #0x8
    4048:	str	x0, [sp, #56]
    404c:	ldr	x0, [sp, #24]
    4050:	bl	14e0 <Perl_sv_2mortal@plt>
    4054:	mov	x1, x0
    4058:	ldr	x0, [sp, #56]
    405c:	str	x1, [x0]
    4060:	ldr	x0, [sp, #80]
    4064:	mov	x1, x0
    4068:	ldr	x0, [sp, #24]
    406c:	bl	15a0 <Perl_newSViv@plt>
    4070:	mov	x1, x0
    4074:	ldr	x0, [sp, #56]
    4078:	add	x0, x0, #0x8
    407c:	str	x0, [sp, #56]
    4080:	ldr	x0, [sp, #24]
    4084:	bl	14e0 <Perl_sv_2mortal@plt>
    4088:	mov	x1, x0
    408c:	ldr	x0, [sp, #56]
    4090:	str	x1, [x0]
    4094:	b	4128 <XS_Time__HiRes_gettimeofday+0x258>
    4098:	ldr	x0, [sp, #24]
    409c:	ldr	x1, [x0, #32]
    40a0:	ldr	x0, [sp, #56]
    40a4:	sub	x0, x1, x0
    40a8:	cmp	x0, #0x0
    40ac:	cset	w0, le
    40b0:	and	w0, w0, #0xff
    40b4:	and	x0, x0, #0xff
    40b8:	cmp	x0, #0x0
    40bc:	b.eq	40d8 <XS_Time__HiRes_gettimeofday+0x208>  // b.none
    40c0:	mov	x3, #0x1                   	// #1
    40c4:	ldr	x2, [sp, #56]
    40c8:	ldr	x1, [sp, #56]
    40cc:	ldr	x0, [sp, #24]
    40d0:	bl	1320 <Perl_stack_grow@plt>
    40d4:	str	x0, [sp, #56]
    40d8:	ldr	d0, [sp, #72]
    40dc:	scvtf	d1, d0
    40e0:	ldr	d0, [sp, #80]
    40e4:	scvtf	d0, d0
    40e8:	mov	x0, #0x848000000000        	// #145685290680320
    40ec:	movk	x0, #0x412e, lsl #48
    40f0:	fmov	d2, x0
    40f4:	fdiv	d0, d0, d2
    40f8:	fadd	d0, d1, d0
    40fc:	ldr	x0, [sp, #24]
    4100:	bl	13a0 <Perl_newSVnv@plt>
    4104:	mov	x1, x0
    4108:	ldr	x0, [sp, #56]
    410c:	add	x0, x0, #0x8
    4110:	str	x0, [sp, #56]
    4114:	ldr	x0, [sp, #24]
    4118:	bl	14e0 <Perl_sv_2mortal@plt>
    411c:	mov	x1, x0
    4120:	ldr	x0, [sp, #56]
    4124:	str	x1, [x0]
    4128:	ldr	x0, [sp, #24]
    412c:	ldr	x1, [sp, #56]
    4130:	str	x1, [x0]
    4134:	nop
    4138:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    413c:	ldr	x0, [x0, #4040]
    4140:	ldr	x1, [sp, #88]
    4144:	ldr	x0, [x0]
    4148:	eor	x0, x1, x0
    414c:	cmp	x0, #0x0
    4150:	b.eq	4158 <XS_Time__HiRes_gettimeofday+0x288>  // b.none
    4154:	bl	1430 <__stack_chk_fail@plt>
    4158:	ldp	x29, x30, [sp], #96
    415c:	ret

0000000000004160 <XS_Time__HiRes_time>:
    4160:	stp	x29, x30, [sp, #-128]!
    4164:	mov	x29, sp
    4168:	str	x0, [sp, #24]
    416c:	str	x1, [sp, #16]
    4170:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    4174:	ldr	x0, [x0, #4040]
    4178:	ldr	x1, [x0]
    417c:	str	x1, [sp, #120]
    4180:	mov	x1, #0x0                   	// #0
    4184:	ldr	x0, [sp, #24]
    4188:	ldr	x0, [x0]
    418c:	str	x0, [sp, #64]
    4190:	ldr	x0, [sp, #24]
    4194:	bl	1780 <S_POPMARK>
    4198:	str	w0, [sp, #44]
    419c:	ldr	x0, [sp, #24]
    41a0:	ldr	x1, [x0, #24]
    41a4:	ldr	w0, [sp, #44]
    41a8:	add	w2, w0, #0x1
    41ac:	str	w2, [sp, #44]
    41b0:	sxtw	x0, w0
    41b4:	lsl	x0, x0, #3
    41b8:	add	x0, x1, x0
    41bc:	str	x0, [sp, #72]
    41c0:	ldr	x1, [sp, #64]
    41c4:	ldr	x0, [sp, #72]
    41c8:	sub	x0, x1, x0
    41cc:	asr	x0, x0, #3
    41d0:	str	w0, [sp, #48]
    41d4:	ldr	w0, [sp, #48]
    41d8:	cmp	w0, #0x0
    41dc:	b.eq	41f0 <XS_Time__HiRes_time+0x90>  // b.none
    41e0:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    41e4:	add	x1, x0, #0xf70
    41e8:	ldr	x0, [sp, #16]
    41ec:	bl	1450 <Perl_croak_xs_usage@plt>
    41f0:	ldr	x0, [sp, #24]
    41f4:	ldr	x0, [x0, #8]
    41f8:	ldrb	w0, [x0, #35]
    41fc:	and	w0, w0, #0x4
    4200:	cmp	w0, #0x0
    4204:	b.eq	422c <XS_Time__HiRes_time+0xcc>  // b.none
    4208:	ldr	x0, [sp, #24]
    420c:	ldr	x1, [x0, #16]
    4210:	ldr	x0, [sp, #24]
    4214:	ldr	x0, [x0, #8]
    4218:	ldr	x0, [x0, #24]
    421c:	lsl	x0, x0, #3
    4220:	add	x0, x1, x0
    4224:	ldr	x0, [x0]
    4228:	b	4234 <XS_Time__HiRes_time+0xd4>
    422c:	ldr	x0, [sp, #24]
    4230:	bl	15e0 <Perl_sv_newmortal@plt>
    4234:	str	x0, [sp, #80]
    4238:	add	x0, sp, #0x68
    423c:	mov	x1, #0x0                   	// #0
    4240:	bl	1410 <gettimeofday@plt>
    4244:	str	w0, [sp, #52]
    4248:	ldr	w0, [sp, #52]
    424c:	cmp	w0, #0x0
    4250:	b.ne	4280 <XS_Time__HiRes_time+0x120>  // b.any
    4254:	ldr	d0, [sp, #104]
    4258:	scvtf	d1, d0
    425c:	ldr	d0, [sp, #112]
    4260:	scvtf	d0, d0
    4264:	mov	x0, #0x848000000000        	// #145685290680320
    4268:	movk	x0, #0x412e, lsl #48
    426c:	fmov	d2, x0
    4270:	fdiv	d0, d0, d2
    4274:	fadd	d0, d1, d0
    4278:	str	d0, [sp, #56]
    427c:	b	4288 <XS_Time__HiRes_time+0x128>
    4280:	fmov	d0, #-1.000000000000000000e+00
    4284:	str	d0, [sp, #56]
    4288:	ldr	x0, [sp, #24]
    428c:	ldr	x1, [x0, #24]
    4290:	ldrsw	x0, [sp, #44]
    4294:	lsl	x0, x0, #3
    4298:	sub	x0, x0, #0x8
    429c:	add	x0, x1, x0
    42a0:	str	x0, [sp, #64]
    42a4:	ldr	d0, [sp, #56]
    42a8:	str	d0, [sp, #88]
    42ac:	ldr	x0, [sp, #80]
    42b0:	ldr	w1, [x0, #12]
    42b4:	mov	w0, #0x8ff                 	// #2303
    42b8:	movk	w0, #0x1981, lsl #16
    42bc:	and	w0, w1, w0
    42c0:	cmp	w0, #0x2
    42c4:	cset	w0, eq  // eq = none
    42c8:	and	w0, w0, #0xff
    42cc:	mov	w1, w0
    42d0:	ldr	x0, [sp, #24]
    42d4:	ldrb	w0, [x0, #185]
    42d8:	eor	w0, w0, #0x1
    42dc:	and	w0, w0, #0xff
    42e0:	and	w0, w1, w0
    42e4:	cmp	w0, #0x0
    42e8:	cset	w0, ne  // ne = any
    42ec:	and	w0, w0, #0xff
    42f0:	and	x0, x0, #0xff
    42f4:	cmp	x0, #0x0
    42f8:	b.eq	4328 <XS_Time__HiRes_time+0x1c8>  // b.none
    42fc:	ldr	x0, [sp, #80]
    4300:	ldr	w1, [x0, #12]
    4304:	mov	w0, #0x2200                	// #8704
    4308:	orr	w1, w1, w0
    430c:	ldr	x0, [sp, #80]
    4310:	str	w1, [x0, #12]
    4314:	ldr	x0, [sp, #80]
    4318:	ldr	x0, [x0]
    431c:	ldr	d0, [sp, #88]
    4320:	str	d0, [x0, #40]
    4324:	b	4338 <XS_Time__HiRes_time+0x1d8>
    4328:	ldr	d0, [sp, #88]
    432c:	ldr	x1, [sp, #80]
    4330:	ldr	x0, [sp, #24]
    4334:	bl	13c0 <Perl_sv_setnv_mg@plt>
    4338:	ldr	x0, [sp, #64]
    433c:	add	x0, x0, #0x8
    4340:	str	x0, [sp, #64]
    4344:	ldr	x0, [sp, #64]
    4348:	ldr	x1, [sp, #80]
    434c:	str	x1, [x0]
    4350:	mov	x0, #0x1                   	// #1
    4354:	str	x0, [sp, #96]
    4358:	ldr	x0, [sp, #24]
    435c:	ldr	x1, [x0, #24]
    4360:	ldrsw	x2, [sp, #44]
    4364:	ldr	x0, [sp, #96]
    4368:	add	x0, x2, x0
    436c:	lsl	x0, x0, #3
    4370:	sub	x0, x0, #0x8
    4374:	add	x1, x1, x0
    4378:	ldr	x0, [sp, #24]
    437c:	str	x1, [x0]
    4380:	nop
    4384:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    4388:	ldr	x0, [x0, #4040]
    438c:	ldr	x1, [sp, #120]
    4390:	ldr	x0, [x0]
    4394:	eor	x0, x1, x0
    4398:	cmp	x0, #0x0
    439c:	b.eq	43a4 <XS_Time__HiRes_time+0x244>  // b.none
    43a0:	bl	1430 <__stack_chk_fail@plt>
    43a4:	ldp	x29, x30, [sp], #128
    43a8:	ret

00000000000043ac <XS_Time__HiRes_setitimer>:
    43ac:	stp	x29, x30, [sp, #-160]!
    43b0:	mov	x29, sp
    43b4:	str	x0, [sp, #24]
    43b8:	str	x1, [sp, #16]
    43bc:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    43c0:	ldr	x0, [x0, #4040]
    43c4:	ldr	x1, [x0]
    43c8:	str	x1, [sp, #152]
    43cc:	mov	x1, #0x0                   	// #0
    43d0:	ldr	x0, [sp, #24]
    43d4:	ldr	x0, [x0]
    43d8:	str	x0, [sp, #56]
    43dc:	ldr	x0, [sp, #24]
    43e0:	bl	1780 <S_POPMARK>
    43e4:	str	w0, [sp, #44]
    43e8:	ldr	x0, [sp, #24]
    43ec:	ldr	x1, [x0, #24]
    43f0:	ldr	w0, [sp, #44]
    43f4:	add	w2, w0, #0x1
    43f8:	str	w2, [sp, #44]
    43fc:	sxtw	x0, w0
    4400:	lsl	x0, x0, #3
    4404:	add	x0, x1, x0
    4408:	str	x0, [sp, #72]
    440c:	ldr	x1, [sp, #56]
    4410:	ldr	x0, [sp, #72]
    4414:	sub	x0, x1, x0
    4418:	asr	x0, x0, #3
    441c:	str	w0, [sp, #48]
    4420:	ldr	w0, [sp, #48]
    4424:	cmp	w0, #0x1
    4428:	b.le	4438 <XS_Time__HiRes_setitimer+0x8c>
    442c:	ldr	w0, [sp, #48]
    4430:	cmp	w0, #0x3
    4434:	b.le	4448 <XS_Time__HiRes_setitimer+0x9c>
    4438:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    443c:	add	x1, x0, #0xf78
    4440:	ldr	x0, [sp, #16]
    4444:	bl	1450 <Perl_croak_xs_usage@plt>
    4448:	ldrsw	x0, [sp, #48]
    444c:	lsl	x0, x0, #3
    4450:	neg	x0, x0
    4454:	ldr	x1, [sp, #56]
    4458:	add	x0, x1, x0
    445c:	str	x0, [sp, #56]
    4460:	ldr	x0, [sp, #24]
    4464:	ldr	x1, [x0, #24]
    4468:	ldrsw	x0, [sp, #44]
    446c:	lsl	x0, x0, #3
    4470:	add	x0, x1, x0
    4474:	ldr	x0, [x0]
    4478:	ldr	w1, [x0, #12]
    447c:	mov	w0, #0x100                 	// #256
    4480:	movk	w0, #0x20, lsl #16
    4484:	and	w0, w1, w0
    4488:	cmp	w0, #0x100
    448c:	b.ne	44b4 <XS_Time__HiRes_setitimer+0x108>  // b.any
    4490:	ldr	x0, [sp, #24]
    4494:	ldr	x1, [x0, #24]
    4498:	ldrsw	x0, [sp, #44]
    449c:	lsl	x0, x0, #3
    44a0:	add	x0, x1, x0
    44a4:	ldr	x0, [x0]
    44a8:	ldr	x0, [x0]
    44ac:	ldr	x0, [x0, #32]
    44b0:	b	44dc <XS_Time__HiRes_setitimer+0x130>
    44b4:	ldr	x0, [sp, #24]
    44b8:	ldr	x1, [x0, #24]
    44bc:	ldrsw	x0, [sp, #44]
    44c0:	lsl	x0, x0, #3
    44c4:	add	x0, x1, x0
    44c8:	ldr	x0, [x0]
    44cc:	mov	w2, #0x2                   	// #2
    44d0:	mov	x1, x0
    44d4:	ldr	x0, [sp, #24]
    44d8:	bl	12e0 <Perl_sv_2iv_flags@plt>
    44dc:	str	w0, [sp, #52]
    44e0:	ldr	x0, [sp, #24]
    44e4:	ldr	x1, [x0, #24]
    44e8:	ldrsw	x0, [sp, #44]
    44ec:	add	x0, x0, #0x1
    44f0:	lsl	x0, x0, #3
    44f4:	add	x0, x1, x0
    44f8:	ldr	x0, [x0]
    44fc:	ldr	w1, [x0, #12]
    4500:	mov	w0, #0x200                 	// #512
    4504:	movk	w0, #0x20, lsl #16
    4508:	and	w0, w1, w0
    450c:	cmp	w0, #0x200
    4510:	b.ne	453c <XS_Time__HiRes_setitimer+0x190>  // b.any
    4514:	ldr	x0, [sp, #24]
    4518:	ldr	x1, [x0, #24]
    451c:	ldrsw	x0, [sp, #44]
    4520:	add	x0, x0, #0x1
    4524:	lsl	x0, x0, #3
    4528:	add	x0, x1, x0
    452c:	ldr	x0, [x0]
    4530:	ldr	x0, [x0]
    4534:	ldr	d0, [x0, #40]
    4538:	b	4568 <XS_Time__HiRes_setitimer+0x1bc>
    453c:	ldr	x0, [sp, #24]
    4540:	ldr	x1, [x0, #24]
    4544:	ldrsw	x0, [sp, #44]
    4548:	add	x0, x0, #0x1
    454c:	lsl	x0, x0, #3
    4550:	add	x0, x1, x0
    4554:	ldr	x0, [x0]
    4558:	mov	w2, #0x2                   	// #2
    455c:	mov	x1, x0
    4560:	ldr	x0, [sp, #24]
    4564:	bl	1460 <Perl_sv_2nv_flags@plt>
    4568:	str	d0, [sp, #80]
    456c:	ldr	w0, [sp, #48]
    4570:	cmp	w0, #0x2
    4574:	b.gt	4580 <XS_Time__HiRes_setitimer+0x1d4>
    4578:	str	xzr, [sp, #64]
    457c:	b	460c <XS_Time__HiRes_setitimer+0x260>
    4580:	ldr	x0, [sp, #24]
    4584:	ldr	x1, [x0, #24]
    4588:	ldrsw	x0, [sp, #44]
    458c:	add	x0, x0, #0x2
    4590:	lsl	x0, x0, #3
    4594:	add	x0, x1, x0
    4598:	ldr	x0, [x0]
    459c:	ldr	w1, [x0, #12]
    45a0:	mov	w0, #0x200                 	// #512
    45a4:	movk	w0, #0x20, lsl #16
    45a8:	and	w0, w1, w0
    45ac:	cmp	w0, #0x200
    45b0:	b.ne	45dc <XS_Time__HiRes_setitimer+0x230>  // b.any
    45b4:	ldr	x0, [sp, #24]
    45b8:	ldr	x1, [x0, #24]
    45bc:	ldrsw	x0, [sp, #44]
    45c0:	add	x0, x0, #0x2
    45c4:	lsl	x0, x0, #3
    45c8:	add	x0, x1, x0
    45cc:	ldr	x0, [x0]
    45d0:	ldr	x0, [x0]
    45d4:	ldr	d0, [x0, #40]
    45d8:	b	4608 <XS_Time__HiRes_setitimer+0x25c>
    45dc:	ldr	x0, [sp, #24]
    45e0:	ldr	x1, [x0, #24]
    45e4:	ldrsw	x0, [sp, #44]
    45e8:	add	x0, x0, #0x2
    45ec:	lsl	x0, x0, #3
    45f0:	add	x0, x1, x0
    45f4:	ldr	x0, [x0]
    45f8:	mov	w2, #0x2                   	// #2
    45fc:	mov	x1, x0
    4600:	ldr	x0, [sp, #24]
    4604:	bl	1460 <Perl_sv_2nv_flags@plt>
    4608:	str	d0, [sp, #64]
    460c:	ldr	d0, [sp, #80]
    4610:	fcmpe	d0, #0.0
    4614:	b.mi	4624 <XS_Time__HiRes_setitimer+0x278>  // b.first
    4618:	ldr	d0, [sp, #64]
    461c:	fcmpe	d0, #0.0
    4620:	b.pl	4640 <XS_Time__HiRes_setitimer+0x294>  // b.nfrst
    4624:	ldrsw	x0, [sp, #52]
    4628:	ldr	d1, [sp, #64]
    462c:	ldr	d0, [sp, #80]
    4630:	mov	x1, x0
    4634:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    4638:	add	x0, x0, #0xf98
    463c:	bl	1490 <Perl_croak_nocontext@plt>
    4640:	ldr	d0, [sp, #80]
    4644:	fcvtzs	d0, d0
    4648:	str	d0, [sp, #104]
    464c:	ldr	d0, [sp, #104]
    4650:	scvtf	d0, d0
    4654:	ldr	d1, [sp, #80]
    4658:	fsub	d0, d1, d0
    465c:	mov	x0, #0x848000000000        	// #145685290680320
    4660:	movk	x0, #0x412e, lsl #48
    4664:	fmov	d1, x0
    4668:	fmul	d0, d0, d1
    466c:	fcvtzs	d0, d0
    4670:	str	d0, [sp, #112]
    4674:	ldr	d0, [sp, #64]
    4678:	fcvtzs	d0, d0
    467c:	str	d0, [sp, #88]
    4680:	ldr	d0, [sp, #88]
    4684:	scvtf	d0, d0
    4688:	ldr	d1, [sp, #64]
    468c:	fsub	d0, d1, d0
    4690:	mov	x0, #0x848000000000        	// #145685290680320
    4694:	movk	x0, #0x412e, lsl #48
    4698:	fmov	d1, x0
    469c:	fmul	d0, d0, d1
    46a0:	fcvtzs	d0, d0
    46a4:	str	d0, [sp, #96]
    46a8:	ldr	w0, [sp, #52]
    46ac:	add	x2, sp, #0x78
    46b0:	add	x1, sp, #0x58
    46b4:	bl	14f0 <setitimer@plt>
    46b8:	cmp	w0, #0x0
    46bc:	b.ne	4830 <XS_Time__HiRes_setitimer+0x484>  // b.any
    46c0:	ldr	x0, [sp, #24]
    46c4:	ldr	x1, [x0, #32]
    46c8:	ldr	x0, [sp, #56]
    46cc:	sub	x0, x1, x0
    46d0:	cmp	x0, #0x0
    46d4:	cset	w0, le
    46d8:	and	w0, w0, #0xff
    46dc:	and	x0, x0, #0xff
    46e0:	cmp	x0, #0x0
    46e4:	b.eq	4700 <XS_Time__HiRes_setitimer+0x354>  // b.none
    46e8:	mov	x3, #0x1                   	// #1
    46ec:	ldr	x2, [sp, #56]
    46f0:	ldr	x1, [sp, #56]
    46f4:	ldr	x0, [sp, #24]
    46f8:	bl	1320 <Perl_stack_grow@plt>
    46fc:	str	x0, [sp, #56]
    4700:	ldr	d0, [sp, #136]
    4704:	scvtf	d1, d0
    4708:	ldr	d0, [sp, #144]
    470c:	scvtf	d0, d0
    4710:	adrp	x0, 7000 <_fini+0x710>
    4714:	ldr	d2, [x0, #768]
    4718:	fmul	d0, d0, d2
    471c:	fadd	d0, d1, d0
    4720:	ldr	x0, [sp, #24]
    4724:	bl	13a0 <Perl_newSVnv@plt>
    4728:	mov	x1, x0
    472c:	ldr	x0, [sp, #56]
    4730:	add	x0, x0, #0x8
    4734:	str	x0, [sp, #56]
    4738:	ldr	x0, [sp, #24]
    473c:	bl	14e0 <Perl_sv_2mortal@plt>
    4740:	mov	x1, x0
    4744:	ldr	x0, [sp, #56]
    4748:	str	x1, [x0]
    474c:	ldr	x0, [sp, #24]
    4750:	ldr	x0, [x0, #8]
    4754:	ldrb	w0, [x0, #34]
    4758:	and	w0, w0, #0x3
    475c:	cmp	w0, #0x0
    4760:	b.eq	4784 <XS_Time__HiRes_setitimer+0x3d8>  // b.none
    4764:	ldr	x0, [sp, #24]
    4768:	ldr	x0, [x0, #8]
    476c:	ldrb	w0, [x0, #34]
    4770:	and	w0, w0, #0x3
    4774:	cmp	w0, #0x3
    4778:	cset	w0, eq  // eq = none
    477c:	and	w0, w0, #0xff
    4780:	b	479c <XS_Time__HiRes_setitimer+0x3f0>
    4784:	ldr	x0, [sp, #24]
    4788:	bl	14c0 <Perl_dowantarray@plt>
    478c:	and	w0, w0, #0xff
    4790:	cmp	w0, #0x3
    4794:	cset	w0, eq  // eq = none
    4798:	and	w0, w0, #0xff
    479c:	cmp	w0, #0x0
    47a0:	b.eq	4830 <XS_Time__HiRes_setitimer+0x484>  // b.none
    47a4:	ldr	x0, [sp, #24]
    47a8:	ldr	x1, [x0, #32]
    47ac:	ldr	x0, [sp, #56]
    47b0:	sub	x0, x1, x0
    47b4:	cmp	x0, #0x0
    47b8:	cset	w0, le
    47bc:	and	w0, w0, #0xff
    47c0:	and	x0, x0, #0xff
    47c4:	cmp	x0, #0x0
    47c8:	b.eq	47e4 <XS_Time__HiRes_setitimer+0x438>  // b.none
    47cc:	mov	x3, #0x1                   	// #1
    47d0:	ldr	x2, [sp, #56]
    47d4:	ldr	x1, [sp, #56]
    47d8:	ldr	x0, [sp, #24]
    47dc:	bl	1320 <Perl_stack_grow@plt>
    47e0:	str	x0, [sp, #56]
    47e4:	ldr	d0, [sp, #120]
    47e8:	scvtf	d1, d0
    47ec:	ldr	d0, [sp, #128]
    47f0:	scvtf	d0, d0
    47f4:	adrp	x0, 7000 <_fini+0x710>
    47f8:	ldr	d2, [x0, #768]
    47fc:	fmul	d0, d0, d2
    4800:	fadd	d0, d1, d0
    4804:	ldr	x0, [sp, #24]
    4808:	bl	13a0 <Perl_newSVnv@plt>
    480c:	mov	x1, x0
    4810:	ldr	x0, [sp, #56]
    4814:	add	x0, x0, #0x8
    4818:	str	x0, [sp, #56]
    481c:	ldr	x0, [sp, #24]
    4820:	bl	14e0 <Perl_sv_2mortal@plt>
    4824:	mov	x1, x0
    4828:	ldr	x0, [sp, #56]
    482c:	str	x1, [x0]
    4830:	ldr	x0, [sp, #24]
    4834:	ldr	x1, [sp, #56]
    4838:	str	x1, [x0]
    483c:	nop
    4840:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    4844:	ldr	x0, [x0, #4040]
    4848:	ldr	x1, [sp, #152]
    484c:	ldr	x0, [x0]
    4850:	eor	x0, x1, x0
    4854:	cmp	x0, #0x0
    4858:	b.eq	4860 <XS_Time__HiRes_setitimer+0x4b4>  // b.none
    485c:	bl	1430 <__stack_chk_fail@plt>
    4860:	ldp	x29, x30, [sp], #160
    4864:	ret

0000000000004868 <XS_Time__HiRes_getitimer>:
    4868:	stp	x29, x30, [sp, #-112]!
    486c:	mov	x29, sp
    4870:	str	x0, [sp, #24]
    4874:	str	x1, [sp, #16]
    4878:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    487c:	ldr	x0, [x0, #4040]
    4880:	ldr	x1, [x0]
    4884:	str	x1, [sp, #104]
    4888:	mov	x1, #0x0                   	// #0
    488c:	ldr	x0, [sp, #24]
    4890:	ldr	x0, [x0]
    4894:	str	x0, [sp, #56]
    4898:	ldr	x0, [sp, #24]
    489c:	bl	1780 <S_POPMARK>
    48a0:	str	w0, [sp, #44]
    48a4:	ldr	x0, [sp, #24]
    48a8:	ldr	x1, [x0, #24]
    48ac:	ldr	w0, [sp, #44]
    48b0:	add	w2, w0, #0x1
    48b4:	str	w2, [sp, #44]
    48b8:	sxtw	x0, w0
    48bc:	lsl	x0, x0, #3
    48c0:	add	x0, x1, x0
    48c4:	str	x0, [sp, #64]
    48c8:	ldr	x1, [sp, #56]
    48cc:	ldr	x0, [sp, #64]
    48d0:	sub	x0, x1, x0
    48d4:	asr	x0, x0, #3
    48d8:	str	w0, [sp, #48]
    48dc:	ldr	w0, [sp, #48]
    48e0:	cmp	w0, #0x1
    48e4:	b.eq	48f8 <XS_Time__HiRes_getitimer+0x90>  // b.none
    48e8:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    48ec:	add	x1, x0, #0xfe0
    48f0:	ldr	x0, [sp, #16]
    48f4:	bl	1450 <Perl_croak_xs_usage@plt>
    48f8:	ldrsw	x0, [sp, #48]
    48fc:	lsl	x0, x0, #3
    4900:	neg	x0, x0
    4904:	ldr	x1, [sp, #56]
    4908:	add	x0, x1, x0
    490c:	str	x0, [sp, #56]
    4910:	ldr	x0, [sp, #24]
    4914:	ldr	x1, [x0, #24]
    4918:	ldrsw	x0, [sp, #44]
    491c:	lsl	x0, x0, #3
    4920:	add	x0, x1, x0
    4924:	ldr	x0, [x0]
    4928:	ldr	w1, [x0, #12]
    492c:	mov	w0, #0x100                 	// #256
    4930:	movk	w0, #0x20, lsl #16
    4934:	and	w0, w1, w0
    4938:	cmp	w0, #0x100
    493c:	b.ne	4964 <XS_Time__HiRes_getitimer+0xfc>  // b.any
    4940:	ldr	x0, [sp, #24]
    4944:	ldr	x1, [x0, #24]
    4948:	ldrsw	x0, [sp, #44]
    494c:	lsl	x0, x0, #3
    4950:	add	x0, x1, x0
    4954:	ldr	x0, [x0]
    4958:	ldr	x0, [x0]
    495c:	ldr	x0, [x0, #32]
    4960:	b	498c <XS_Time__HiRes_getitimer+0x124>
    4964:	ldr	x0, [sp, #24]
    4968:	ldr	x1, [x0, #24]
    496c:	ldrsw	x0, [sp, #44]
    4970:	lsl	x0, x0, #3
    4974:	add	x0, x1, x0
    4978:	ldr	x0, [x0]
    497c:	mov	w2, #0x2                   	// #2
    4980:	mov	x1, x0
    4984:	ldr	x0, [sp, #24]
    4988:	bl	12e0 <Perl_sv_2iv_flags@plt>
    498c:	str	w0, [sp, #52]
    4990:	ldr	w0, [sp, #52]
    4994:	add	x1, sp, #0x48
    4998:	bl	13d0 <getitimer@plt>
    499c:	cmp	w0, #0x0
    49a0:	b.ne	4b14 <XS_Time__HiRes_getitimer+0x2ac>  // b.any
    49a4:	ldr	x0, [sp, #24]
    49a8:	ldr	x1, [x0, #32]
    49ac:	ldr	x0, [sp, #56]
    49b0:	sub	x0, x1, x0
    49b4:	cmp	x0, #0x0
    49b8:	cset	w0, le
    49bc:	and	w0, w0, #0xff
    49c0:	and	x0, x0, #0xff
    49c4:	cmp	x0, #0x0
    49c8:	b.eq	49e4 <XS_Time__HiRes_getitimer+0x17c>  // b.none
    49cc:	mov	x3, #0x1                   	// #1
    49d0:	ldr	x2, [sp, #56]
    49d4:	ldr	x1, [sp, #56]
    49d8:	ldr	x0, [sp, #24]
    49dc:	bl	1320 <Perl_stack_grow@plt>
    49e0:	str	x0, [sp, #56]
    49e4:	ldr	d0, [sp, #88]
    49e8:	scvtf	d1, d0
    49ec:	ldr	d0, [sp, #96]
    49f0:	scvtf	d0, d0
    49f4:	adrp	x0, 7000 <_fini+0x710>
    49f8:	ldr	d2, [x0, #768]
    49fc:	fmul	d0, d0, d2
    4a00:	fadd	d0, d1, d0
    4a04:	ldr	x0, [sp, #24]
    4a08:	bl	13a0 <Perl_newSVnv@plt>
    4a0c:	mov	x1, x0
    4a10:	ldr	x0, [sp, #56]
    4a14:	add	x0, x0, #0x8
    4a18:	str	x0, [sp, #56]
    4a1c:	ldr	x0, [sp, #24]
    4a20:	bl	14e0 <Perl_sv_2mortal@plt>
    4a24:	mov	x1, x0
    4a28:	ldr	x0, [sp, #56]
    4a2c:	str	x1, [x0]
    4a30:	ldr	x0, [sp, #24]
    4a34:	ldr	x0, [x0, #8]
    4a38:	ldrb	w0, [x0, #34]
    4a3c:	and	w0, w0, #0x3
    4a40:	cmp	w0, #0x0
    4a44:	b.eq	4a68 <XS_Time__HiRes_getitimer+0x200>  // b.none
    4a48:	ldr	x0, [sp, #24]
    4a4c:	ldr	x0, [x0, #8]
    4a50:	ldrb	w0, [x0, #34]
    4a54:	and	w0, w0, #0x3
    4a58:	cmp	w0, #0x3
    4a5c:	cset	w0, eq  // eq = none
    4a60:	and	w0, w0, #0xff
    4a64:	b	4a80 <XS_Time__HiRes_getitimer+0x218>
    4a68:	ldr	x0, [sp, #24]
    4a6c:	bl	14c0 <Perl_dowantarray@plt>
    4a70:	and	w0, w0, #0xff
    4a74:	cmp	w0, #0x3
    4a78:	cset	w0, eq  // eq = none
    4a7c:	and	w0, w0, #0xff
    4a80:	cmp	w0, #0x0
    4a84:	b.eq	4b14 <XS_Time__HiRes_getitimer+0x2ac>  // b.none
    4a88:	ldr	x0, [sp, #24]
    4a8c:	ldr	x1, [x0, #32]
    4a90:	ldr	x0, [sp, #56]
    4a94:	sub	x0, x1, x0
    4a98:	cmp	x0, #0x0
    4a9c:	cset	w0, le
    4aa0:	and	w0, w0, #0xff
    4aa4:	and	x0, x0, #0xff
    4aa8:	cmp	x0, #0x0
    4aac:	b.eq	4ac8 <XS_Time__HiRes_getitimer+0x260>  // b.none
    4ab0:	mov	x3, #0x1                   	// #1
    4ab4:	ldr	x2, [sp, #56]
    4ab8:	ldr	x1, [sp, #56]
    4abc:	ldr	x0, [sp, #24]
    4ac0:	bl	1320 <Perl_stack_grow@plt>
    4ac4:	str	x0, [sp, #56]
    4ac8:	ldr	d0, [sp, #72]
    4acc:	scvtf	d1, d0
    4ad0:	ldr	d0, [sp, #80]
    4ad4:	scvtf	d0, d0
    4ad8:	adrp	x0, 7000 <_fini+0x710>
    4adc:	ldr	d2, [x0, #768]
    4ae0:	fmul	d0, d0, d2
    4ae4:	fadd	d0, d1, d0
    4ae8:	ldr	x0, [sp, #24]
    4aec:	bl	13a0 <Perl_newSVnv@plt>
    4af0:	mov	x1, x0
    4af4:	ldr	x0, [sp, #56]
    4af8:	add	x0, x0, #0x8
    4afc:	str	x0, [sp, #56]
    4b00:	ldr	x0, [sp, #24]
    4b04:	bl	14e0 <Perl_sv_2mortal@plt>
    4b08:	mov	x1, x0
    4b0c:	ldr	x0, [sp, #56]
    4b10:	str	x1, [x0]
    4b14:	ldr	x0, [sp, #24]
    4b18:	ldr	x1, [sp, #56]
    4b1c:	str	x1, [x0]
    4b20:	nop
    4b24:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    4b28:	ldr	x0, [x0, #4040]
    4b2c:	ldr	x1, [sp, #104]
    4b30:	ldr	x0, [x0]
    4b34:	eor	x0, x1, x0
    4b38:	cmp	x0, #0x0
    4b3c:	b.eq	4b44 <XS_Time__HiRes_getitimer+0x2dc>  // b.none
    4b40:	bl	1430 <__stack_chk_fail@plt>
    4b44:	ldp	x29, x30, [sp], #112
    4b48:	ret

0000000000004b4c <XS_Time__HiRes_utime>:
    4b4c:	stp	x29, x30, [sp, #-208]!
    4b50:	mov	x29, sp
    4b54:	str	d8, [sp, #16]
    4b58:	str	x0, [sp, #40]
    4b5c:	str	x1, [sp, #32]
    4b60:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    4b64:	ldr	x0, [x0, #4040]
    4b68:	ldr	x1, [x0]
    4b6c:	str	x1, [sp, #200]
    4b70:	mov	x1, #0x0                   	// #0
    4b74:	ldr	x0, [sp, #40]
    4b78:	ldr	x0, [x0]
    4b7c:	str	x0, [sp, #88]
    4b80:	ldr	x0, [sp, #40]
    4b84:	bl	1780 <S_POPMARK>
    4b88:	str	w0, [sp, #68]
    4b8c:	ldr	x0, [sp, #40]
    4b90:	ldr	x1, [x0, #24]
    4b94:	ldr	w0, [sp, #68]
    4b98:	add	w2, w0, #0x1
    4b9c:	str	w2, [sp, #68]
    4ba0:	sxtw	x0, w0
    4ba4:	lsl	x0, x0, #3
    4ba8:	add	x0, x1, x0
    4bac:	str	x0, [sp, #104]
    4bb0:	ldr	x1, [sp, #88]
    4bb4:	ldr	x0, [sp, #104]
    4bb8:	sub	x0, x1, x0
    4bbc:	asr	x0, x0, #3
    4bc0:	str	w0, [sp, #60]
    4bc4:	ldr	w0, [sp, #60]
    4bc8:	cmp	w0, #0x1
    4bcc:	b.gt	4be0 <XS_Time__HiRes_utime+0x94>
    4bd0:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    4bd4:	add	x1, x0, #0xfe8
    4bd8:	ldr	x0, [sp, #32]
    4bdc:	bl	1450 <Perl_croak_xs_usage@plt>
    4be0:	add	x0, sp, #0xa8
    4be4:	str	x0, [sp, #96]
    4be8:	ldr	x0, [sp, #40]
    4bec:	ldr	x0, [x0, #8]
    4bf0:	ldrb	w0, [x0, #35]
    4bf4:	and	w0, w0, #0x4
    4bf8:	cmp	w0, #0x0
    4bfc:	b.eq	4c24 <XS_Time__HiRes_utime+0xd8>  // b.none
    4c00:	ldr	x0, [sp, #40]
    4c04:	ldr	x1, [x0, #16]
    4c08:	ldr	x0, [sp, #40]
    4c0c:	ldr	x0, [x0, #8]
    4c10:	ldr	x0, [x0, #24]
    4c14:	lsl	x0, x0, #3
    4c18:	add	x0, x1, x0
    4c1c:	ldr	x0, [x0]
    4c20:	b	4c2c <XS_Time__HiRes_utime+0xe0>
    4c24:	ldr	x0, [sp, #40]
    4c28:	bl	15e0 <Perl_sv_newmortal@plt>
    4c2c:	str	x0, [sp, #112]
    4c30:	ldr	x0, [sp, #40]
    4c34:	ldr	x1, [x0, #24]
    4c38:	ldrsw	x0, [sp, #68]
    4c3c:	lsl	x0, x0, #3
    4c40:	add	x0, x1, x0
    4c44:	ldr	x0, [x0]
    4c48:	str	x0, [sp, #120]
    4c4c:	ldr	x0, [sp, #40]
    4c50:	ldr	x1, [x0, #24]
    4c54:	ldrsw	x0, [sp, #68]
    4c58:	add	x0, x0, #0x1
    4c5c:	lsl	x0, x0, #3
    4c60:	add	x0, x1, x0
    4c64:	ldr	x0, [x0]
    4c68:	str	x0, [sp, #128]
    4c6c:	ldr	w0, [sp, #60]
    4c70:	sub	w0, w0, #0x2
    4c74:	str	w0, [sp, #60]
    4c78:	str	wzr, [sp, #64]
    4c7c:	ldr	x0, [sp, #40]
    4c80:	add	x0, x0, #0x150
    4c84:	ldr	x1, [sp, #120]
    4c88:	cmp	x1, x0
    4c8c:	b.ne	4cac <XS_Time__HiRes_utime+0x160>  // b.any
    4c90:	ldr	x0, [sp, #40]
    4c94:	add	x0, x0, #0x150
    4c98:	ldr	x1, [sp, #128]
    4c9c:	cmp	x1, x0
    4ca0:	b.ne	4cac <XS_Time__HiRes_utime+0x160>  // b.any
    4ca4:	str	xzr, [sp, #96]
    4ca8:	b	4f44 <XS_Time__HiRes_utime+0x3f8>
    4cac:	ldr	x0, [sp, #120]
    4cb0:	ldr	w1, [x0, #12]
    4cb4:	mov	w0, #0x200                 	// #512
    4cb8:	movk	w0, #0x20, lsl #16
    4cbc:	and	w0, w1, w0
    4cc0:	cmp	w0, #0x200
    4cc4:	b.ne	4ce0 <XS_Time__HiRes_utime+0x194>  // b.any
    4cc8:	ldr	x0, [sp, #120]
    4ccc:	ldr	x0, [x0]
    4cd0:	ldr	d0, [x0, #40]
    4cd4:	fcmpe	d0, #0.0
    4cd8:	b.mi	4d44 <XS_Time__HiRes_utime+0x1f8>  // b.first
    4cdc:	b	4cf8 <XS_Time__HiRes_utime+0x1ac>
    4ce0:	mov	w2, #0x2                   	// #2
    4ce4:	ldr	x1, [sp, #120]
    4ce8:	ldr	x0, [sp, #40]
    4cec:	bl	1460 <Perl_sv_2nv_flags@plt>
    4cf0:	fcmpe	d0, #0.0
    4cf4:	b.mi	4d44 <XS_Time__HiRes_utime+0x1f8>  // b.first
    4cf8:	ldr	x0, [sp, #128]
    4cfc:	ldr	w1, [x0, #12]
    4d00:	mov	w0, #0x200                 	// #512
    4d04:	movk	w0, #0x20, lsl #16
    4d08:	and	w0, w1, w0
    4d0c:	cmp	w0, #0x200
    4d10:	b.ne	4d2c <XS_Time__HiRes_utime+0x1e0>  // b.any
    4d14:	ldr	x0, [sp, #128]
    4d18:	ldr	x0, [x0]
    4d1c:	ldr	d0, [x0, #40]
    4d20:	fcmpe	d0, #0.0
    4d24:	b.mi	4d44 <XS_Time__HiRes_utime+0x1f8>  // b.first
    4d28:	b	4dd4 <XS_Time__HiRes_utime+0x288>
    4d2c:	mov	w2, #0x2                   	// #2
    4d30:	ldr	x1, [sp, #128]
    4d34:	ldr	x0, [sp, #40]
    4d38:	bl	1460 <Perl_sv_2nv_flags@plt>
    4d3c:	fcmpe	d0, #0.0
    4d40:	b.pl	4dd4 <XS_Time__HiRes_utime+0x288>  // b.nfrst
    4d44:	ldr	x0, [sp, #120]
    4d48:	ldr	w1, [x0, #12]
    4d4c:	mov	w0, #0x200                 	// #512
    4d50:	movk	w0, #0x20, lsl #16
    4d54:	and	w0, w1, w0
    4d58:	cmp	w0, #0x200
    4d5c:	b.ne	4d70 <XS_Time__HiRes_utime+0x224>  // b.any
    4d60:	ldr	x0, [sp, #120]
    4d64:	ldr	x0, [x0]
    4d68:	ldr	d8, [x0, #40]
    4d6c:	b	4d84 <XS_Time__HiRes_utime+0x238>
    4d70:	mov	w2, #0x2                   	// #2
    4d74:	ldr	x1, [sp, #120]
    4d78:	ldr	x0, [sp, #40]
    4d7c:	bl	1460 <Perl_sv_2nv_flags@plt>
    4d80:	fmov	d8, d0
    4d84:	ldr	x0, [sp, #128]
    4d88:	ldr	w1, [x0, #12]
    4d8c:	mov	w0, #0x200                 	// #512
    4d90:	movk	w0, #0x20, lsl #16
    4d94:	and	w0, w1, w0
    4d98:	cmp	w0, #0x200
    4d9c:	b.ne	4db0 <XS_Time__HiRes_utime+0x264>  // b.any
    4da0:	ldr	x0, [sp, #128]
    4da4:	ldr	x0, [x0]
    4da8:	ldr	d0, [x0, #40]
    4dac:	b	4dc0 <XS_Time__HiRes_utime+0x274>
    4db0:	mov	w2, #0x2                   	// #2
    4db4:	ldr	x1, [sp, #128]
    4db8:	ldr	x0, [sp, #40]
    4dbc:	bl	1460 <Perl_sv_2nv_flags@plt>
    4dc0:	fmov	d1, d0
    4dc4:	fmov	d0, d8
    4dc8:	adrp	x0, 7000 <_fini+0x710>
    4dcc:	add	x0, x0, #0x0
    4dd0:	bl	1490 <Perl_croak_nocontext@plt>
    4dd4:	add	x0, sp, #0xa8
    4dd8:	mov	x2, #0x20                  	// #32
    4ddc:	mov	w1, #0x0                   	// #0
    4de0:	bl	13e0 <memset@plt>
    4de4:	ldr	x0, [sp, #120]
    4de8:	ldr	w1, [x0, #12]
    4dec:	mov	w0, #0x200                 	// #512
    4df0:	movk	w0, #0x20, lsl #16
    4df4:	and	w0, w1, w0
    4df8:	cmp	w0, #0x200
    4dfc:	b.ne	4e14 <XS_Time__HiRes_utime+0x2c8>  // b.any
    4e00:	ldr	x0, [sp, #120]
    4e04:	ldr	x0, [x0]
    4e08:	ldr	d0, [x0, #40]
    4e0c:	fcvtzs	d0, d0
    4e10:	b	4e28 <XS_Time__HiRes_utime+0x2dc>
    4e14:	mov	w2, #0x2                   	// #2
    4e18:	ldr	x1, [sp, #120]
    4e1c:	ldr	x0, [sp, #40]
    4e20:	bl	1460 <Perl_sv_2nv_flags@plt>
    4e24:	fcvtzs	d0, d0
    4e28:	str	d0, [sp, #168]
    4e2c:	ldr	x0, [sp, #120]
    4e30:	ldr	w1, [x0, #12]
    4e34:	mov	w0, #0x200                 	// #512
    4e38:	movk	w0, #0x20, lsl #16
    4e3c:	and	w0, w1, w0
    4e40:	cmp	w0, #0x200
    4e44:	b.ne	4e58 <XS_Time__HiRes_utime+0x30c>  // b.any
    4e48:	ldr	x0, [sp, #120]
    4e4c:	ldr	x0, [x0]
    4e50:	ldr	d0, [x0, #40]
    4e54:	b	4e68 <XS_Time__HiRes_utime+0x31c>
    4e58:	mov	w2, #0x2                   	// #2
    4e5c:	ldr	x1, [sp, #120]
    4e60:	ldr	x0, [sp, #40]
    4e64:	bl	1460 <Perl_sv_2nv_flags@plt>
    4e68:	ldr	d1, [sp, #168]
    4e6c:	scvtf	d1, d1
    4e70:	fsub	d0, d0, d1
    4e74:	mov	x0, #0xcd6500000000        	// #225833675390976
    4e78:	movk	x0, #0x41cd, lsl #48
    4e7c:	fmov	d1, x0
    4e80:	fmul	d1, d0, d1
    4e84:	fmov	d0, #5.000000000000000000e-01
    4e88:	fadd	d0, d1, d0
    4e8c:	fcvtzs	d0, d0
    4e90:	str	d0, [sp, #176]
    4e94:	ldr	x0, [sp, #128]
    4e98:	ldr	w1, [x0, #12]
    4e9c:	mov	w0, #0x200                 	// #512
    4ea0:	movk	w0, #0x20, lsl #16
    4ea4:	and	w0, w1, w0
    4ea8:	cmp	w0, #0x200
    4eac:	b.ne	4ec4 <XS_Time__HiRes_utime+0x378>  // b.any
    4eb0:	ldr	x0, [sp, #128]
    4eb4:	ldr	x0, [x0]
    4eb8:	ldr	d0, [x0, #40]
    4ebc:	fcvtzs	d0, d0
    4ec0:	b	4ed8 <XS_Time__HiRes_utime+0x38c>
    4ec4:	mov	w2, #0x2                   	// #2
    4ec8:	ldr	x1, [sp, #128]
    4ecc:	ldr	x0, [sp, #40]
    4ed0:	bl	1460 <Perl_sv_2nv_flags@plt>
    4ed4:	fcvtzs	d0, d0
    4ed8:	str	d0, [sp, #184]
    4edc:	ldr	x0, [sp, #128]
    4ee0:	ldr	w1, [x0, #12]
    4ee4:	mov	w0, #0x200                 	// #512
    4ee8:	movk	w0, #0x20, lsl #16
    4eec:	and	w0, w1, w0
    4ef0:	cmp	w0, #0x200
    4ef4:	b.ne	4f08 <XS_Time__HiRes_utime+0x3bc>  // b.any
    4ef8:	ldr	x0, [sp, #128]
    4efc:	ldr	x0, [x0]
    4f00:	ldr	d0, [x0, #40]
    4f04:	b	4f18 <XS_Time__HiRes_utime+0x3cc>
    4f08:	mov	w2, #0x2                   	// #2
    4f0c:	ldr	x1, [sp, #128]
    4f10:	ldr	x0, [sp, #40]
    4f14:	bl	1460 <Perl_sv_2nv_flags@plt>
    4f18:	ldr	d1, [sp, #184]
    4f1c:	scvtf	d1, d1
    4f20:	fsub	d0, d0, d1
    4f24:	mov	x0, #0xcd6500000000        	// #225833675390976
    4f28:	movk	x0, #0x41cd, lsl #48
    4f2c:	fmov	d1, x0
    4f30:	fmul	d1, d0, d1
    4f34:	fmov	d0, #5.000000000000000000e-01
    4f38:	fadd	d0, d1, d0
    4f3c:	fcvtzs	d0, d0
    4f40:	str	d0, [sp, #192]
    4f44:	b	5118 <XS_Time__HiRes_utime+0x5cc>
    4f48:	ldr	x0, [sp, #88]
    4f4c:	sub	x1, x0, #0x8
    4f50:	str	x1, [sp, #88]
    4f54:	ldr	x0, [x0]
    4f58:	str	x0, [sp, #152]
    4f5c:	ldr	w0, [sp, #60]
    4f60:	sub	w0, w0, #0x1
    4f64:	str	w0, [sp, #60]
    4f68:	ldr	x0, [sp, #152]
    4f6c:	ldr	w0, [x0, #12]
    4f70:	and	w0, w0, #0x800
    4f74:	cmp	w0, #0x0
    4f78:	b.eq	506c <XS_Time__HiRes_utime+0x520>  // b.none
    4f7c:	ldr	x0, [sp, #152]
    4f80:	ldr	x0, [x0, #16]
    4f84:	cmp	x0, #0x0
    4f88:	b.eq	506c <XS_Time__HiRes_utime+0x520>  // b.none
    4f8c:	ldr	x0, [sp, #152]
    4f90:	ldr	x0, [x0, #16]
    4f94:	ldr	w0, [x0, #12]
    4f98:	and	w0, w0, #0xff
    4f9c:	cmp	w0, #0x9
    4fa0:	b.eq	4fbc <XS_Time__HiRes_utime+0x470>  // b.none
    4fa4:	ldr	x0, [sp, #152]
    4fa8:	ldr	x0, [x0, #16]
    4fac:	ldr	w0, [x0, #12]
    4fb0:	and	w0, w0, #0xff
    4fb4:	cmp	w0, #0xa
    4fb8:	b.ne	506c <XS_Time__HiRes_utime+0x520>  // b.any
    4fbc:	ldr	x0, [sp, #152]
    4fc0:	ldr	x0, [x0, #16]
    4fc4:	ldr	x0, [x0, #16]
    4fc8:	cmp	x0, #0x0
    4fcc:	b.eq	506c <XS_Time__HiRes_utime+0x520>  // b.none
    4fd0:	ldr	x0, [sp, #152]
    4fd4:	ldr	x0, [x0, #16]
    4fd8:	ldr	x0, [x0, #16]
    4fdc:	ldr	x0, [x0, #8]
    4fe0:	cmp	x0, #0x0
    4fe4:	b.eq	506c <XS_Time__HiRes_utime+0x520>  // b.none
    4fe8:	ldr	x0, [sp, #152]
    4fec:	ldr	x0, [x0, #16]
    4ff0:	mov	x1, x0
    4ff4:	ldr	x0, [sp, #40]
    4ff8:	bl	1510 <Perl_sv_2io@plt>
    4ffc:	ldr	x0, [x0, #16]
    5000:	cmp	x0, #0x0
    5004:	b.eq	506c <XS_Time__HiRes_utime+0x520>  // b.none
    5008:	ldr	x1, [sp, #152]
    500c:	ldr	x0, [sp, #40]
    5010:	bl	1510 <Perl_sv_2io@plt>
    5014:	ldr	x0, [x0, #16]
    5018:	mov	x1, x0
    501c:	ldr	x0, [sp, #40]
    5020:	bl	1300 <Perl_PerlIO_fileno@plt>
    5024:	str	w0, [sp, #76]
    5028:	ldr	w0, [sp, #76]
    502c:	cmp	w0, #0x0
    5030:	b.ge	5048 <XS_Time__HiRes_utime+0x4fc>  // b.tcont
    5034:	bl	15b0 <__errno_location@plt>
    5038:	mov	x1, x0
    503c:	mov	w0, #0x9                   	// #9
    5040:	str	w0, [x1]
    5044:	b	5118 <XS_Time__HiRes_utime+0x5cc>
    5048:	ldr	x1, [sp, #96]
    504c:	ldr	w0, [sp, #76]
    5050:	bl	13b0 <futimens@plt>
    5054:	cmp	w0, #0x0
    5058:	b.ne	5118 <XS_Time__HiRes_utime+0x5cc>  // b.any
    505c:	ldr	w0, [sp, #64]
    5060:	add	w0, w0, #0x1
    5064:	str	w0, [sp, #64]
    5068:	b	5118 <XS_Time__HiRes_utime+0x5cc>
    506c:	ldr	x0, [sp, #152]
    5070:	ldr	w1, [x0, #12]
    5074:	mov	w0, #0x400                 	// #1024
    5078:	movk	w0, #0x20, lsl #16
    507c:	and	w0, w1, w0
    5080:	cmp	w0, #0x400
    5084:	b.ne	50a4 <XS_Time__HiRes_utime+0x558>  // b.any
    5088:	ldr	x0, [sp, #152]
    508c:	ldr	x0, [x0]
    5090:	ldr	x0, [x0, #16]
    5094:	str	x0, [sp, #80]
    5098:	ldr	x0, [sp, #152]
    509c:	ldr	x0, [x0, #16]
    50a0:	b	50bc <XS_Time__HiRes_utime+0x570>
    50a4:	add	x0, sp, #0x50
    50a8:	mov	w3, #0x2                   	// #2
    50ac:	mov	x2, x0
    50b0:	ldr	x1, [sp, #152]
    50b4:	ldr	x0, [sp, #40]
    50b8:	bl	13f0 <Perl_sv_2pv_flags@plt>
    50bc:	str	x0, [sp, #160]
    50c0:	ldr	x1, [sp, #80]
    50c4:	adrp	x0, 7000 <_fini+0x710>
    50c8:	add	x4, x0, #0x40
    50cc:	adrp	x0, 7000 <_fini+0x710>
    50d0:	add	x3, x0, #0x48
    50d4:	mov	x2, x1
    50d8:	ldr	x1, [sp, #160]
    50dc:	ldr	x0, [sp, #40]
    50e0:	bl	17c4 <S_is_safe_syscall>
    50e4:	and	w0, w0, #0xff
    50e8:	cmp	w0, #0x0
    50ec:	b.eq	5118 <XS_Time__HiRes_utime+0x5cc>  // b.none
    50f0:	mov	w3, #0x0                   	// #0
    50f4:	ldr	x2, [sp, #96]
    50f8:	ldr	x1, [sp, #160]
    50fc:	mov	w0, #0xffffff9c            	// #-100
    5100:	bl	1500 <utimensat@plt>
    5104:	cmp	w0, #0x0
    5108:	b.ne	5118 <XS_Time__HiRes_utime+0x5cc>  // b.any
    510c:	ldr	w0, [sp, #64]
    5110:	add	w0, w0, #0x1
    5114:	str	w0, [sp, #64]
    5118:	ldr	w0, [sp, #60]
    511c:	cmp	w0, #0x0
    5120:	b.gt	4f48 <XS_Time__HiRes_utime+0x3fc>
    5124:	ldr	w0, [sp, #64]
    5128:	str	w0, [sp, #72]
    512c:	ldr	x0, [sp, #40]
    5130:	ldr	x1, [x0, #24]
    5134:	ldrsw	x0, [sp, #68]
    5138:	lsl	x0, x0, #3
    513c:	sub	x0, x0, #0x8
    5140:	add	x0, x1, x0
    5144:	str	x0, [sp, #88]
    5148:	ldrsw	x0, [sp, #72]
    514c:	str	x0, [sp, #136]
    5150:	ldr	x0, [sp, #112]
    5154:	ldr	w1, [x0, #12]
    5158:	mov	w0, #0x8ff                 	// #2303
    515c:	movk	w0, #0x9981, lsl #16
    5160:	and	w0, w1, w0
    5164:	cmp	w0, #0x1
    5168:	cset	w0, eq  // eq = none
    516c:	and	w0, w0, #0xff
    5170:	mov	w1, w0
    5174:	ldr	x0, [sp, #40]
    5178:	ldrb	w0, [x0, #185]
    517c:	eor	w0, w0, #0x1
    5180:	and	w0, w0, #0xff
    5184:	and	w0, w1, w0
    5188:	cmp	w0, #0x0
    518c:	cset	w0, ne  // ne = any
    5190:	and	w0, w0, #0xff
    5194:	and	x0, x0, #0xff
    5198:	cmp	x0, #0x0
    519c:	b.eq	51c8 <XS_Time__HiRes_utime+0x67c>  // b.none
    51a0:	ldr	x0, [sp, #112]
    51a4:	ldr	w1, [x0, #12]
    51a8:	mov	w0, #0x1100                	// #4352
    51ac:	orr	w1, w1, w0
    51b0:	ldr	x0, [sp, #112]
    51b4:	str	w1, [x0, #12]
    51b8:	ldr	x0, [sp, #112]
    51bc:	ldr	x1, [sp, #136]
    51c0:	str	x1, [x0, #16]
    51c4:	b	51d8 <XS_Time__HiRes_utime+0x68c>
    51c8:	ldr	x2, [sp, #136]
    51cc:	ldr	x1, [sp, #112]
    51d0:	ldr	x0, [sp, #40]
    51d4:	bl	1380 <Perl_sv_setiv_mg@plt>
    51d8:	ldr	x0, [sp, #88]
    51dc:	add	x0, x0, #0x8
    51e0:	str	x0, [sp, #88]
    51e4:	ldr	x0, [sp, #88]
    51e8:	ldr	x1, [sp, #112]
    51ec:	str	x1, [x0]
    51f0:	mov	x0, #0x1                   	// #1
    51f4:	str	x0, [sp, #144]
    51f8:	ldr	x0, [sp, #40]
    51fc:	ldr	x1, [x0, #24]
    5200:	ldrsw	x2, [sp, #68]
    5204:	ldr	x0, [sp, #144]
    5208:	add	x0, x2, x0
    520c:	lsl	x0, x0, #3
    5210:	sub	x0, x0, #0x8
    5214:	add	x1, x1, x0
    5218:	ldr	x0, [sp, #40]
    521c:	str	x1, [x0]
    5220:	nop
    5224:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5228:	ldr	x0, [x0, #4040]
    522c:	ldr	x1, [sp, #200]
    5230:	ldr	x0, [x0]
    5234:	eor	x0, x1, x0
    5238:	cmp	x0, #0x0
    523c:	b.eq	5244 <XS_Time__HiRes_utime+0x6f8>  // b.none
    5240:	bl	1430 <__stack_chk_fail@plt>
    5244:	ldr	d8, [sp, #16]
    5248:	ldp	x29, x30, [sp], #208
    524c:	ret

0000000000005250 <XS_Time__HiRes_clock_gettime>:
    5250:	stp	x29, x30, [sp, #-128]!
    5254:	mov	x29, sp
    5258:	str	x0, [sp, #24]
    525c:	str	x1, [sp, #16]
    5260:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5264:	ldr	x0, [x0, #4040]
    5268:	ldr	x1, [x0]
    526c:	str	x1, [sp, #120]
    5270:	mov	x1, #0x0                   	// #0
    5274:	ldr	x0, [sp, #24]
    5278:	ldr	x0, [x0]
    527c:	str	x0, [sp, #56]
    5280:	ldr	x0, [sp, #24]
    5284:	bl	1780 <S_POPMARK>
    5288:	str	w0, [sp, #44]
    528c:	ldr	x0, [sp, #24]
    5290:	ldr	x1, [x0, #24]
    5294:	ldr	w0, [sp, #44]
    5298:	add	w2, w0, #0x1
    529c:	str	w2, [sp, #44]
    52a0:	sxtw	x0, w0
    52a4:	lsl	x0, x0, #3
    52a8:	add	x0, x1, x0
    52ac:	str	x0, [sp, #64]
    52b0:	ldr	x1, [sp, #56]
    52b4:	ldr	x0, [sp, #64]
    52b8:	sub	x0, x1, x0
    52bc:	asr	x0, x0, #3
    52c0:	str	w0, [sp, #48]
    52c4:	ldr	w0, [sp, #48]
    52c8:	cmp	w0, #0x0
    52cc:	b.lt	52dc <XS_Time__HiRes_clock_gettime+0x8c>  // b.tstop
    52d0:	ldr	w0, [sp, #48]
    52d4:	cmp	w0, #0x1
    52d8:	b.le	52ec <XS_Time__HiRes_clock_gettime+0x9c>
    52dc:	adrp	x0, 7000 <_fini+0x710>
    52e0:	add	x1, x0, #0x58
    52e4:	ldr	x0, [sp, #16]
    52e8:	bl	1450 <Perl_croak_xs_usage@plt>
    52ec:	mov	w0, #0xffffffff            	// #-1
    52f0:	str	w0, [sp, #52]
    52f4:	ldr	x0, [sp, #24]
    52f8:	ldr	x0, [x0, #8]
    52fc:	ldrb	w0, [x0, #35]
    5300:	and	w0, w0, #0x4
    5304:	cmp	w0, #0x0
    5308:	b.eq	5330 <XS_Time__HiRes_clock_gettime+0xe0>  // b.none
    530c:	ldr	x0, [sp, #24]
    5310:	ldr	x1, [x0, #16]
    5314:	ldr	x0, [sp, #24]
    5318:	ldr	x0, [x0, #8]
    531c:	ldr	x0, [x0, #24]
    5320:	lsl	x0, x0, #3
    5324:	add	x0, x1, x0
    5328:	ldr	x0, [x0]
    532c:	b	5338 <XS_Time__HiRes_clock_gettime+0xe8>
    5330:	ldr	x0, [sp, #24]
    5334:	bl	15e0 <Perl_sv_newmortal@plt>
    5338:	str	x0, [sp, #72]
    533c:	ldr	w0, [sp, #48]
    5340:	cmp	w0, #0x0
    5344:	b.gt	5350 <XS_Time__HiRes_clock_gettime+0x100>
    5348:	str	wzr, [sp, #40]
    534c:	b	53d0 <XS_Time__HiRes_clock_gettime+0x180>
    5350:	ldr	x0, [sp, #24]
    5354:	ldr	x1, [x0, #24]
    5358:	ldrsw	x0, [sp, #44]
    535c:	lsl	x0, x0, #3
    5360:	add	x0, x1, x0
    5364:	ldr	x0, [x0]
    5368:	ldr	w1, [x0, #12]
    536c:	mov	w0, #0x100                 	// #256
    5370:	movk	w0, #0x20, lsl #16
    5374:	and	w0, w1, w0
    5378:	cmp	w0, #0x100
    537c:	b.ne	53a4 <XS_Time__HiRes_clock_gettime+0x154>  // b.any
    5380:	ldr	x0, [sp, #24]
    5384:	ldr	x1, [x0, #24]
    5388:	ldrsw	x0, [sp, #44]
    538c:	lsl	x0, x0, #3
    5390:	add	x0, x1, x0
    5394:	ldr	x0, [x0]
    5398:	ldr	x0, [x0]
    539c:	ldr	x0, [x0, #32]
    53a0:	b	53cc <XS_Time__HiRes_clock_gettime+0x17c>
    53a4:	ldr	x0, [sp, #24]
    53a8:	ldr	x1, [x0, #24]
    53ac:	ldrsw	x0, [sp, #44]
    53b0:	lsl	x0, x0, #3
    53b4:	add	x0, x1, x0
    53b8:	ldr	x0, [x0]
    53bc:	mov	w2, #0x2                   	// #2
    53c0:	mov	x1, x0
    53c4:	ldr	x0, [sp, #24]
    53c8:	bl	12e0 <Perl_sv_2iv_flags@plt>
    53cc:	str	w0, [sp, #40]
    53d0:	add	x0, sp, #0x68
    53d4:	mov	x1, x0
    53d8:	ldr	w0, [sp, #40]
    53dc:	bl	1360 <clock_gettime@plt>
    53e0:	str	w0, [sp, #52]
    53e4:	ldr	w0, [sp, #52]
    53e8:	cmp	w0, #0x0
    53ec:	b.ne	5418 <XS_Time__HiRes_clock_gettime+0x1c8>  // b.any
    53f0:	ldr	d0, [sp, #104]
    53f4:	scvtf	d1, d0
    53f8:	ldr	d0, [sp, #112]
    53fc:	scvtf	d0, d0
    5400:	mov	x0, #0xcd6500000000        	// #225833675390976
    5404:	movk	x0, #0x41cd, lsl #48
    5408:	fmov	d2, x0
    540c:	fdiv	d0, d0, d2
    5410:	fadd	d0, d1, d0
    5414:	b	541c <XS_Time__HiRes_clock_gettime+0x1cc>
    5418:	fmov	d0, #-1.000000000000000000e+00
    541c:	str	d0, [sp, #80]
    5420:	ldr	x0, [sp, #24]
    5424:	ldr	x1, [x0, #24]
    5428:	ldrsw	x0, [sp, #44]
    542c:	lsl	x0, x0, #3
    5430:	sub	x0, x0, #0x8
    5434:	add	x0, x1, x0
    5438:	str	x0, [sp, #56]
    543c:	ldr	d0, [sp, #80]
    5440:	str	d0, [sp, #88]
    5444:	ldr	x0, [sp, #72]
    5448:	ldr	w1, [x0, #12]
    544c:	mov	w0, #0x8ff                 	// #2303
    5450:	movk	w0, #0x1981, lsl #16
    5454:	and	w0, w1, w0
    5458:	cmp	w0, #0x2
    545c:	cset	w0, eq  // eq = none
    5460:	and	w0, w0, #0xff
    5464:	mov	w1, w0
    5468:	ldr	x0, [sp, #24]
    546c:	ldrb	w0, [x0, #185]
    5470:	eor	w0, w0, #0x1
    5474:	and	w0, w0, #0xff
    5478:	and	w0, w1, w0
    547c:	cmp	w0, #0x0
    5480:	cset	w0, ne  // ne = any
    5484:	and	w0, w0, #0xff
    5488:	and	x0, x0, #0xff
    548c:	cmp	x0, #0x0
    5490:	b.eq	54c0 <XS_Time__HiRes_clock_gettime+0x270>  // b.none
    5494:	ldr	x0, [sp, #72]
    5498:	ldr	w1, [x0, #12]
    549c:	mov	w0, #0x2200                	// #8704
    54a0:	orr	w1, w1, w0
    54a4:	ldr	x0, [sp, #72]
    54a8:	str	w1, [x0, #12]
    54ac:	ldr	x0, [sp, #72]
    54b0:	ldr	x0, [x0]
    54b4:	ldr	d0, [sp, #88]
    54b8:	str	d0, [x0, #40]
    54bc:	b	54d0 <XS_Time__HiRes_clock_gettime+0x280>
    54c0:	ldr	d0, [sp, #88]
    54c4:	ldr	x1, [sp, #72]
    54c8:	ldr	x0, [sp, #24]
    54cc:	bl	13c0 <Perl_sv_setnv_mg@plt>
    54d0:	ldr	x0, [sp, #56]
    54d4:	add	x0, x0, #0x8
    54d8:	str	x0, [sp, #56]
    54dc:	ldr	x0, [sp, #56]
    54e0:	ldr	x1, [sp, #72]
    54e4:	str	x1, [x0]
    54e8:	mov	x0, #0x1                   	// #1
    54ec:	str	x0, [sp, #96]
    54f0:	ldr	x0, [sp, #24]
    54f4:	ldr	x1, [x0, #24]
    54f8:	ldrsw	x2, [sp, #44]
    54fc:	ldr	x0, [sp, #96]
    5500:	add	x0, x2, x0
    5504:	lsl	x0, x0, #3
    5508:	sub	x0, x0, #0x8
    550c:	add	x1, x1, x0
    5510:	ldr	x0, [sp, #24]
    5514:	str	x1, [x0]
    5518:	nop
    551c:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5520:	ldr	x0, [x0, #4040]
    5524:	ldr	x1, [sp, #120]
    5528:	ldr	x0, [x0]
    552c:	eor	x0, x1, x0
    5530:	cmp	x0, #0x0
    5534:	b.eq	553c <XS_Time__HiRes_clock_gettime+0x2ec>  // b.none
    5538:	bl	1430 <__stack_chk_fail@plt>
    553c:	ldp	x29, x30, [sp], #128
    5540:	ret

0000000000005544 <XS_Time__HiRes_clock_getres>:
    5544:	stp	x29, x30, [sp, #-128]!
    5548:	mov	x29, sp
    554c:	str	x0, [sp, #24]
    5550:	str	x1, [sp, #16]
    5554:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5558:	ldr	x0, [x0, #4040]
    555c:	ldr	x1, [x0]
    5560:	str	x1, [sp, #120]
    5564:	mov	x1, #0x0                   	// #0
    5568:	ldr	x0, [sp, #24]
    556c:	ldr	x0, [x0]
    5570:	str	x0, [sp, #56]
    5574:	ldr	x0, [sp, #24]
    5578:	bl	1780 <S_POPMARK>
    557c:	str	w0, [sp, #44]
    5580:	ldr	x0, [sp, #24]
    5584:	ldr	x1, [x0, #24]
    5588:	ldr	w0, [sp, #44]
    558c:	add	w2, w0, #0x1
    5590:	str	w2, [sp, #44]
    5594:	sxtw	x0, w0
    5598:	lsl	x0, x0, #3
    559c:	add	x0, x1, x0
    55a0:	str	x0, [sp, #64]
    55a4:	ldr	x1, [sp, #56]
    55a8:	ldr	x0, [sp, #64]
    55ac:	sub	x0, x1, x0
    55b0:	asr	x0, x0, #3
    55b4:	str	w0, [sp, #48]
    55b8:	ldr	w0, [sp, #48]
    55bc:	cmp	w0, #0x0
    55c0:	b.lt	55d0 <XS_Time__HiRes_clock_getres+0x8c>  // b.tstop
    55c4:	ldr	w0, [sp, #48]
    55c8:	cmp	w0, #0x1
    55cc:	b.le	55e0 <XS_Time__HiRes_clock_getres+0x9c>
    55d0:	adrp	x0, 7000 <_fini+0x710>
    55d4:	add	x1, x0, #0x58
    55d8:	ldr	x0, [sp, #16]
    55dc:	bl	1450 <Perl_croak_xs_usage@plt>
    55e0:	mov	w0, #0xffffffff            	// #-1
    55e4:	str	w0, [sp, #52]
    55e8:	ldr	x0, [sp, #24]
    55ec:	ldr	x0, [x0, #8]
    55f0:	ldrb	w0, [x0, #35]
    55f4:	and	w0, w0, #0x4
    55f8:	cmp	w0, #0x0
    55fc:	b.eq	5624 <XS_Time__HiRes_clock_getres+0xe0>  // b.none
    5600:	ldr	x0, [sp, #24]
    5604:	ldr	x1, [x0, #16]
    5608:	ldr	x0, [sp, #24]
    560c:	ldr	x0, [x0, #8]
    5610:	ldr	x0, [x0, #24]
    5614:	lsl	x0, x0, #3
    5618:	add	x0, x1, x0
    561c:	ldr	x0, [x0]
    5620:	b	562c <XS_Time__HiRes_clock_getres+0xe8>
    5624:	ldr	x0, [sp, #24]
    5628:	bl	15e0 <Perl_sv_newmortal@plt>
    562c:	str	x0, [sp, #72]
    5630:	ldr	w0, [sp, #48]
    5634:	cmp	w0, #0x0
    5638:	b.gt	5644 <XS_Time__HiRes_clock_getres+0x100>
    563c:	str	wzr, [sp, #40]
    5640:	b	56c4 <XS_Time__HiRes_clock_getres+0x180>
    5644:	ldr	x0, [sp, #24]
    5648:	ldr	x1, [x0, #24]
    564c:	ldrsw	x0, [sp, #44]
    5650:	lsl	x0, x0, #3
    5654:	add	x0, x1, x0
    5658:	ldr	x0, [x0]
    565c:	ldr	w1, [x0, #12]
    5660:	mov	w0, #0x100                 	// #256
    5664:	movk	w0, #0x20, lsl #16
    5668:	and	w0, w1, w0
    566c:	cmp	w0, #0x100
    5670:	b.ne	5698 <XS_Time__HiRes_clock_getres+0x154>  // b.any
    5674:	ldr	x0, [sp, #24]
    5678:	ldr	x1, [x0, #24]
    567c:	ldrsw	x0, [sp, #44]
    5680:	lsl	x0, x0, #3
    5684:	add	x0, x1, x0
    5688:	ldr	x0, [x0]
    568c:	ldr	x0, [x0]
    5690:	ldr	x0, [x0, #32]
    5694:	b	56c0 <XS_Time__HiRes_clock_getres+0x17c>
    5698:	ldr	x0, [sp, #24]
    569c:	ldr	x1, [x0, #24]
    56a0:	ldrsw	x0, [sp, #44]
    56a4:	lsl	x0, x0, #3
    56a8:	add	x0, x1, x0
    56ac:	ldr	x0, [x0]
    56b0:	mov	w2, #0x2                   	// #2
    56b4:	mov	x1, x0
    56b8:	ldr	x0, [sp, #24]
    56bc:	bl	12e0 <Perl_sv_2iv_flags@plt>
    56c0:	str	w0, [sp, #40]
    56c4:	add	x0, sp, #0x68
    56c8:	mov	x1, x0
    56cc:	ldr	w0, [sp, #40]
    56d0:	bl	14a0 <clock_getres@plt>
    56d4:	str	w0, [sp, #52]
    56d8:	ldr	w0, [sp, #52]
    56dc:	cmp	w0, #0x0
    56e0:	b.ne	570c <XS_Time__HiRes_clock_getres+0x1c8>  // b.any
    56e4:	ldr	d0, [sp, #104]
    56e8:	scvtf	d1, d0
    56ec:	ldr	d0, [sp, #112]
    56f0:	scvtf	d0, d0
    56f4:	mov	x0, #0xcd6500000000        	// #225833675390976
    56f8:	movk	x0, #0x41cd, lsl #48
    56fc:	fmov	d2, x0
    5700:	fdiv	d0, d0, d2
    5704:	fadd	d0, d1, d0
    5708:	b	5710 <XS_Time__HiRes_clock_getres+0x1cc>
    570c:	fmov	d0, #-1.000000000000000000e+00
    5710:	str	d0, [sp, #80]
    5714:	ldr	x0, [sp, #24]
    5718:	ldr	x1, [x0, #24]
    571c:	ldrsw	x0, [sp, #44]
    5720:	lsl	x0, x0, #3
    5724:	sub	x0, x0, #0x8
    5728:	add	x0, x1, x0
    572c:	str	x0, [sp, #56]
    5730:	ldr	d0, [sp, #80]
    5734:	str	d0, [sp, #88]
    5738:	ldr	x0, [sp, #72]
    573c:	ldr	w1, [x0, #12]
    5740:	mov	w0, #0x8ff                 	// #2303
    5744:	movk	w0, #0x1981, lsl #16
    5748:	and	w0, w1, w0
    574c:	cmp	w0, #0x2
    5750:	cset	w0, eq  // eq = none
    5754:	and	w0, w0, #0xff
    5758:	mov	w1, w0
    575c:	ldr	x0, [sp, #24]
    5760:	ldrb	w0, [x0, #185]
    5764:	eor	w0, w0, #0x1
    5768:	and	w0, w0, #0xff
    576c:	and	w0, w1, w0
    5770:	cmp	w0, #0x0
    5774:	cset	w0, ne  // ne = any
    5778:	and	w0, w0, #0xff
    577c:	and	x0, x0, #0xff
    5780:	cmp	x0, #0x0
    5784:	b.eq	57b4 <XS_Time__HiRes_clock_getres+0x270>  // b.none
    5788:	ldr	x0, [sp, #72]
    578c:	ldr	w1, [x0, #12]
    5790:	mov	w0, #0x2200                	// #8704
    5794:	orr	w1, w1, w0
    5798:	ldr	x0, [sp, #72]
    579c:	str	w1, [x0, #12]
    57a0:	ldr	x0, [sp, #72]
    57a4:	ldr	x0, [x0]
    57a8:	ldr	d0, [sp, #88]
    57ac:	str	d0, [x0, #40]
    57b0:	b	57c4 <XS_Time__HiRes_clock_getres+0x280>
    57b4:	ldr	d0, [sp, #88]
    57b8:	ldr	x1, [sp, #72]
    57bc:	ldr	x0, [sp, #24]
    57c0:	bl	13c0 <Perl_sv_setnv_mg@plt>
    57c4:	ldr	x0, [sp, #56]
    57c8:	add	x0, x0, #0x8
    57cc:	str	x0, [sp, #56]
    57d0:	ldr	x0, [sp, #56]
    57d4:	ldr	x1, [sp, #72]
    57d8:	str	x1, [x0]
    57dc:	mov	x0, #0x1                   	// #1
    57e0:	str	x0, [sp, #96]
    57e4:	ldr	x0, [sp, #24]
    57e8:	ldr	x1, [x0, #24]
    57ec:	ldrsw	x2, [sp, #44]
    57f0:	ldr	x0, [sp, #96]
    57f4:	add	x0, x2, x0
    57f8:	lsl	x0, x0, #3
    57fc:	sub	x0, x0, #0x8
    5800:	add	x1, x1, x0
    5804:	ldr	x0, [sp, #24]
    5808:	str	x1, [x0]
    580c:	nop
    5810:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5814:	ldr	x0, [x0, #4040]
    5818:	ldr	x1, [sp, #120]
    581c:	ldr	x0, [x0]
    5820:	eor	x0, x1, x0
    5824:	cmp	x0, #0x0
    5828:	b.eq	5830 <XS_Time__HiRes_clock_getres+0x2ec>  // b.none
    582c:	bl	1430 <__stack_chk_fail@plt>
    5830:	ldp	x29, x30, [sp], #128
    5834:	ret

0000000000005838 <XS_Time__HiRes_clock_nanosleep>:
    5838:	stp	x29, x30, [sp, #-144]!
    583c:	mov	x29, sp
    5840:	str	x0, [sp, #24]
    5844:	str	x1, [sp, #16]
    5848:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    584c:	ldr	x0, [x0, #4040]
    5850:	ldr	x1, [x0]
    5854:	str	x1, [sp, #136]
    5858:	mov	x1, #0x0                   	// #0
    585c:	ldr	x0, [sp, #24]
    5860:	ldr	x0, [x0]
    5864:	str	x0, [sp, #56]
    5868:	ldr	x0, [sp, #24]
    586c:	bl	1780 <S_POPMARK>
    5870:	str	w0, [sp, #36]
    5874:	ldr	x0, [sp, #24]
    5878:	ldr	x1, [x0, #24]
    587c:	ldr	w0, [sp, #36]
    5880:	add	w2, w0, #0x1
    5884:	str	w2, [sp, #36]
    5888:	sxtw	x0, w0
    588c:	lsl	x0, x0, #3
    5890:	add	x0, x1, x0
    5894:	str	x0, [sp, #64]
    5898:	ldr	x1, [sp, #56]
    589c:	ldr	x0, [sp, #64]
    58a0:	sub	x0, x1, x0
    58a4:	asr	x0, x0, #3
    58a8:	str	w0, [sp, #40]
    58ac:	ldr	w0, [sp, #40]
    58b0:	cmp	w0, #0x1
    58b4:	b.le	58c4 <XS_Time__HiRes_clock_nanosleep+0x8c>
    58b8:	ldr	w0, [sp, #40]
    58bc:	cmp	w0, #0x3
    58c0:	b.le	58d4 <XS_Time__HiRes_clock_nanosleep+0x9c>
    58c4:	adrp	x0, 7000 <_fini+0x710>
    58c8:	add	x1, x0, #0x78
    58cc:	ldr	x0, [sp, #16]
    58d0:	bl	1450 <Perl_croak_xs_usage@plt>
    58d4:	ldr	x0, [sp, #24]
    58d8:	ldr	x1, [x0, #24]
    58dc:	ldrsw	x0, [sp, #36]
    58e0:	lsl	x0, x0, #3
    58e4:	add	x0, x1, x0
    58e8:	ldr	x0, [x0]
    58ec:	ldr	w1, [x0, #12]
    58f0:	mov	w0, #0x100                 	// #256
    58f4:	movk	w0, #0x20, lsl #16
    58f8:	and	w0, w1, w0
    58fc:	cmp	w0, #0x100
    5900:	b.ne	5928 <XS_Time__HiRes_clock_nanosleep+0xf0>  // b.any
    5904:	ldr	x0, [sp, #24]
    5908:	ldr	x1, [x0, #24]
    590c:	ldrsw	x0, [sp, #36]
    5910:	lsl	x0, x0, #3
    5914:	add	x0, x1, x0
    5918:	ldr	x0, [x0]
    591c:	ldr	x0, [x0]
    5920:	ldr	x0, [x0, #32]
    5924:	b	5950 <XS_Time__HiRes_clock_nanosleep+0x118>
    5928:	ldr	x0, [sp, #24]
    592c:	ldr	x1, [x0, #24]
    5930:	ldrsw	x0, [sp, #36]
    5934:	lsl	x0, x0, #3
    5938:	add	x0, x1, x0
    593c:	ldr	x0, [x0]
    5940:	mov	w2, #0x2                   	// #2
    5944:	mov	x1, x0
    5948:	ldr	x0, [sp, #24]
    594c:	bl	12e0 <Perl_sv_2iv_flags@plt>
    5950:	str	w0, [sp, #44]
    5954:	ldr	x0, [sp, #24]
    5958:	ldr	x1, [x0, #24]
    595c:	ldrsw	x0, [sp, #36]
    5960:	add	x0, x0, #0x1
    5964:	lsl	x0, x0, #3
    5968:	add	x0, x1, x0
    596c:	ldr	x0, [x0]
    5970:	ldr	w1, [x0, #12]
    5974:	mov	w0, #0x200                 	// #512
    5978:	movk	w0, #0x20, lsl #16
    597c:	and	w0, w1, w0
    5980:	cmp	w0, #0x200
    5984:	b.ne	59b0 <XS_Time__HiRes_clock_nanosleep+0x178>  // b.any
    5988:	ldr	x0, [sp, #24]
    598c:	ldr	x1, [x0, #24]
    5990:	ldrsw	x0, [sp, #36]
    5994:	add	x0, x0, #0x1
    5998:	lsl	x0, x0, #3
    599c:	add	x0, x1, x0
    59a0:	ldr	x0, [x0]
    59a4:	ldr	x0, [x0]
    59a8:	ldr	d0, [x0, #40]
    59ac:	b	59dc <XS_Time__HiRes_clock_nanosleep+0x1a4>
    59b0:	ldr	x0, [sp, #24]
    59b4:	ldr	x1, [x0, #24]
    59b8:	ldrsw	x0, [sp, #36]
    59bc:	add	x0, x0, #0x1
    59c0:	lsl	x0, x0, #3
    59c4:	add	x0, x1, x0
    59c8:	ldr	x0, [x0]
    59cc:	mov	w2, #0x2                   	// #2
    59d0:	mov	x1, x0
    59d4:	ldr	x0, [sp, #24]
    59d8:	bl	1460 <Perl_sv_2nv_flags@plt>
    59dc:	str	d0, [sp, #72]
    59e0:	ldr	x0, [sp, #24]
    59e4:	ldr	x0, [x0, #8]
    59e8:	ldrb	w0, [x0, #35]
    59ec:	and	w0, w0, #0x4
    59f0:	cmp	w0, #0x0
    59f4:	b.eq	5a1c <XS_Time__HiRes_clock_nanosleep+0x1e4>  // b.none
    59f8:	ldr	x0, [sp, #24]
    59fc:	ldr	x1, [x0, #16]
    5a00:	ldr	x0, [sp, #24]
    5a04:	ldr	x0, [x0, #8]
    5a08:	ldr	x0, [x0, #24]
    5a0c:	lsl	x0, x0, #3
    5a10:	add	x0, x1, x0
    5a14:	ldr	x0, [x0]
    5a18:	b	5a24 <XS_Time__HiRes_clock_nanosleep+0x1ec>
    5a1c:	ldr	x0, [sp, #24]
    5a20:	bl	15e0 <Perl_sv_newmortal@plt>
    5a24:	str	x0, [sp, #80]
    5a28:	ldr	w0, [sp, #40]
    5a2c:	cmp	w0, #0x2
    5a30:	b.gt	5a3c <XS_Time__HiRes_clock_nanosleep+0x204>
    5a34:	str	wzr, [sp, #32]
    5a38:	b	5ac8 <XS_Time__HiRes_clock_nanosleep+0x290>
    5a3c:	ldr	x0, [sp, #24]
    5a40:	ldr	x1, [x0, #24]
    5a44:	ldrsw	x0, [sp, #36]
    5a48:	add	x0, x0, #0x2
    5a4c:	lsl	x0, x0, #3
    5a50:	add	x0, x1, x0
    5a54:	ldr	x0, [x0]
    5a58:	ldr	w1, [x0, #12]
    5a5c:	mov	w0, #0x100                 	// #256
    5a60:	movk	w0, #0x20, lsl #16
    5a64:	and	w0, w1, w0
    5a68:	cmp	w0, #0x100
    5a6c:	b.ne	5a98 <XS_Time__HiRes_clock_nanosleep+0x260>  // b.any
    5a70:	ldr	x0, [sp, #24]
    5a74:	ldr	x1, [x0, #24]
    5a78:	ldrsw	x0, [sp, #36]
    5a7c:	add	x0, x0, #0x2
    5a80:	lsl	x0, x0, #3
    5a84:	add	x0, x1, x0
    5a88:	ldr	x0, [x0]
    5a8c:	ldr	x0, [x0]
    5a90:	ldr	x0, [x0, #32]
    5a94:	b	5ac4 <XS_Time__HiRes_clock_nanosleep+0x28c>
    5a98:	ldr	x0, [sp, #24]
    5a9c:	ldr	x1, [x0, #24]
    5aa0:	ldrsw	x0, [sp, #36]
    5aa4:	add	x0, x0, #0x2
    5aa8:	lsl	x0, x0, #3
    5aac:	add	x0, x1, x0
    5ab0:	ldr	x0, [x0]
    5ab4:	mov	w2, #0x2                   	// #2
    5ab8:	mov	x1, x0
    5abc:	ldr	x0, [sp, #24]
    5ac0:	bl	12e0 <Perl_sv_2iv_flags@plt>
    5ac4:	str	w0, [sp, #32]
    5ac8:	ldr	d0, [sp, #72]
    5acc:	fcmpe	d0, #0.0
    5ad0:	b.pl	5ae4 <XS_Time__HiRes_clock_nanosleep+0x2ac>  // b.nfrst
    5ad4:	ldr	d0, [sp, #72]
    5ad8:	adrp	x0, 7000 <_fini+0x710>
    5adc:	add	x0, x0, #0x98
    5ae0:	bl	1490 <Perl_croak_nocontext@plt>
    5ae4:	add	x1, sp, #0x78
    5ae8:	add	x0, sp, #0x68
    5aec:	ldr	d0, [sp, #72]
    5af0:	bl	27bc <nanosleep_init>
    5af4:	add	x1, sp, #0x78
    5af8:	add	x0, sp, #0x68
    5afc:	mov	x3, x1
    5b00:	mov	x2, x0
    5b04:	ldr	w1, [sp, #32]
    5b08:	ldr	w0, [sp, #44]
    5b0c:	bl	1590 <clock_nanosleep@plt>
    5b10:	cmp	w0, #0x0
    5b14:	b.ne	5b24 <XS_Time__HiRes_clock_nanosleep+0x2ec>  // b.any
    5b18:	ldr	d0, [sp, #72]
    5b1c:	str	d0, [sp, #48]
    5b20:	b	5b34 <XS_Time__HiRes_clock_nanosleep+0x2fc>
    5b24:	add	x1, sp, #0x78
    5b28:	add	x0, sp, #0x68
    5b2c:	bl	2838 <nsec_without_unslept>
    5b30:	str	d0, [sp, #48]
    5b34:	ldr	x0, [sp, #24]
    5b38:	ldr	x1, [x0, #24]
    5b3c:	ldrsw	x0, [sp, #36]
    5b40:	lsl	x0, x0, #3
    5b44:	sub	x0, x0, #0x8
    5b48:	add	x0, x1, x0
    5b4c:	str	x0, [sp, #56]
    5b50:	ldr	d0, [sp, #48]
    5b54:	str	d0, [sp, #88]
    5b58:	ldr	x0, [sp, #80]
    5b5c:	ldr	w1, [x0, #12]
    5b60:	mov	w0, #0x8ff                 	// #2303
    5b64:	movk	w0, #0x1981, lsl #16
    5b68:	and	w0, w1, w0
    5b6c:	cmp	w0, #0x2
    5b70:	cset	w0, eq  // eq = none
    5b74:	and	w0, w0, #0xff
    5b78:	mov	w1, w0
    5b7c:	ldr	x0, [sp, #24]
    5b80:	ldrb	w0, [x0, #185]
    5b84:	eor	w0, w0, #0x1
    5b88:	and	w0, w0, #0xff
    5b8c:	and	w0, w1, w0
    5b90:	cmp	w0, #0x0
    5b94:	cset	w0, ne  // ne = any
    5b98:	and	w0, w0, #0xff
    5b9c:	and	x0, x0, #0xff
    5ba0:	cmp	x0, #0x0
    5ba4:	b.eq	5bd4 <XS_Time__HiRes_clock_nanosleep+0x39c>  // b.none
    5ba8:	ldr	x0, [sp, #80]
    5bac:	ldr	w1, [x0, #12]
    5bb0:	mov	w0, #0x2200                	// #8704
    5bb4:	orr	w1, w1, w0
    5bb8:	ldr	x0, [sp, #80]
    5bbc:	str	w1, [x0, #12]
    5bc0:	ldr	x0, [sp, #80]
    5bc4:	ldr	x0, [x0]
    5bc8:	ldr	d0, [sp, #88]
    5bcc:	str	d0, [x0, #40]
    5bd0:	b	5be4 <XS_Time__HiRes_clock_nanosleep+0x3ac>
    5bd4:	ldr	d0, [sp, #88]
    5bd8:	ldr	x1, [sp, #80]
    5bdc:	ldr	x0, [sp, #24]
    5be0:	bl	13c0 <Perl_sv_setnv_mg@plt>
    5be4:	ldr	x0, [sp, #56]
    5be8:	add	x0, x0, #0x8
    5bec:	str	x0, [sp, #56]
    5bf0:	ldr	x0, [sp, #56]
    5bf4:	ldr	x1, [sp, #80]
    5bf8:	str	x1, [x0]
    5bfc:	mov	x0, #0x1                   	// #1
    5c00:	str	x0, [sp, #96]
    5c04:	ldr	x0, [sp, #24]
    5c08:	ldr	x1, [x0, #24]
    5c0c:	ldrsw	x2, [sp, #36]
    5c10:	ldr	x0, [sp, #96]
    5c14:	add	x0, x2, x0
    5c18:	lsl	x0, x0, #3
    5c1c:	sub	x0, x0, #0x8
    5c20:	add	x1, x1, x0
    5c24:	ldr	x0, [sp, #24]
    5c28:	str	x1, [x0]
    5c2c:	nop
    5c30:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5c34:	ldr	x0, [x0, #4040]
    5c38:	ldr	x1, [sp, #136]
    5c3c:	ldr	x0, [x0]
    5c40:	eor	x0, x1, x0
    5c44:	cmp	x0, #0x0
    5c48:	b.eq	5c50 <XS_Time__HiRes_clock_nanosleep+0x418>  // b.none
    5c4c:	bl	1430 <__stack_chk_fail@plt>
    5c50:	ldp	x29, x30, [sp], #144
    5c54:	ret

0000000000005c58 <XS_Time__HiRes_clock>:
    5c58:	stp	x29, x30, [sp, #-96]!
    5c5c:	mov	x29, sp
    5c60:	str	x0, [sp, #24]
    5c64:	str	x1, [sp, #16]
    5c68:	ldr	x0, [sp, #24]
    5c6c:	ldr	x0, [x0]
    5c70:	str	x0, [sp, #40]
    5c74:	ldr	x0, [sp, #24]
    5c78:	bl	1780 <S_POPMARK>
    5c7c:	str	w0, [sp, #32]
    5c80:	ldr	x0, [sp, #24]
    5c84:	ldr	x1, [x0, #24]
    5c88:	ldr	w0, [sp, #32]
    5c8c:	add	w2, w0, #0x1
    5c90:	str	w2, [sp, #32]
    5c94:	sxtw	x0, w0
    5c98:	lsl	x0, x0, #3
    5c9c:	add	x0, x1, x0
    5ca0:	str	x0, [sp, #48]
    5ca4:	ldr	x1, [sp, #40]
    5ca8:	ldr	x0, [sp, #48]
    5cac:	sub	x0, x1, x0
    5cb0:	asr	x0, x0, #3
    5cb4:	str	w0, [sp, #36]
    5cb8:	ldr	w0, [sp, #36]
    5cbc:	cmp	w0, #0x0
    5cc0:	b.eq	5cd4 <XS_Time__HiRes_clock+0x7c>  // b.none
    5cc4:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    5cc8:	add	x1, x0, #0xf70
    5ccc:	ldr	x0, [sp, #16]
    5cd0:	bl	1450 <Perl_croak_xs_usage@plt>
    5cd4:	ldr	x0, [sp, #24]
    5cd8:	ldr	x0, [x0, #8]
    5cdc:	ldrb	w0, [x0, #35]
    5ce0:	and	w0, w0, #0x4
    5ce4:	cmp	w0, #0x0
    5ce8:	b.eq	5d10 <XS_Time__HiRes_clock+0xb8>  // b.none
    5cec:	ldr	x0, [sp, #24]
    5cf0:	ldr	x1, [x0, #16]
    5cf4:	ldr	x0, [sp, #24]
    5cf8:	ldr	x0, [x0, #8]
    5cfc:	ldr	x0, [x0, #24]
    5d00:	lsl	x0, x0, #3
    5d04:	add	x0, x1, x0
    5d08:	ldr	x0, [x0]
    5d0c:	b	5d18 <XS_Time__HiRes_clock+0xc0>
    5d10:	ldr	x0, [sp, #24]
    5d14:	bl	15e0 <Perl_sv_newmortal@plt>
    5d18:	str	x0, [sp, #56]
    5d1c:	bl	12f0 <clock@plt>
    5d20:	str	x0, [sp, #64]
    5d24:	ldr	x0, [sp, #64]
    5d28:	cmn	x0, #0x1
    5d2c:	b.eq	5d4c <XS_Time__HiRes_clock+0xf4>  // b.none
    5d30:	ldr	d0, [sp, #64]
    5d34:	scvtf	d0, d0
    5d38:	mov	x0, #0x848000000000        	// #145685290680320
    5d3c:	movk	x0, #0x412e, lsl #48
    5d40:	fmov	d1, x0
    5d44:	fdiv	d0, d0, d1
    5d48:	b	5d50 <XS_Time__HiRes_clock+0xf8>
    5d4c:	fmov	d0, #-1.000000000000000000e+00
    5d50:	str	d0, [sp, #72]
    5d54:	ldr	x0, [sp, #24]
    5d58:	ldr	x1, [x0, #24]
    5d5c:	ldrsw	x0, [sp, #32]
    5d60:	lsl	x0, x0, #3
    5d64:	sub	x0, x0, #0x8
    5d68:	add	x0, x1, x0
    5d6c:	str	x0, [sp, #40]
    5d70:	ldr	d0, [sp, #72]
    5d74:	str	d0, [sp, #80]
    5d78:	ldr	x0, [sp, #56]
    5d7c:	ldr	w1, [x0, #12]
    5d80:	mov	w0, #0x8ff                 	// #2303
    5d84:	movk	w0, #0x1981, lsl #16
    5d88:	and	w0, w1, w0
    5d8c:	cmp	w0, #0x2
    5d90:	cset	w0, eq  // eq = none
    5d94:	and	w0, w0, #0xff
    5d98:	mov	w1, w0
    5d9c:	ldr	x0, [sp, #24]
    5da0:	ldrb	w0, [x0, #185]
    5da4:	eor	w0, w0, #0x1
    5da8:	and	w0, w0, #0xff
    5dac:	and	w0, w1, w0
    5db0:	cmp	w0, #0x0
    5db4:	cset	w0, ne  // ne = any
    5db8:	and	w0, w0, #0xff
    5dbc:	and	x0, x0, #0xff
    5dc0:	cmp	x0, #0x0
    5dc4:	b.eq	5df4 <XS_Time__HiRes_clock+0x19c>  // b.none
    5dc8:	ldr	x0, [sp, #56]
    5dcc:	ldr	w1, [x0, #12]
    5dd0:	mov	w0, #0x2200                	// #8704
    5dd4:	orr	w1, w1, w0
    5dd8:	ldr	x0, [sp, #56]
    5ddc:	str	w1, [x0, #12]
    5de0:	ldr	x0, [sp, #56]
    5de4:	ldr	x0, [x0]
    5de8:	ldr	d0, [sp, #80]
    5dec:	str	d0, [x0, #40]
    5df0:	b	5e04 <XS_Time__HiRes_clock+0x1ac>
    5df4:	ldr	d0, [sp, #80]
    5df8:	ldr	x1, [sp, #56]
    5dfc:	ldr	x0, [sp, #24]
    5e00:	bl	13c0 <Perl_sv_setnv_mg@plt>
    5e04:	ldr	x0, [sp, #40]
    5e08:	add	x0, x0, #0x8
    5e0c:	str	x0, [sp, #40]
    5e10:	ldr	x0, [sp, #40]
    5e14:	ldr	x1, [sp, #56]
    5e18:	str	x1, [x0]
    5e1c:	mov	x0, #0x1                   	// #1
    5e20:	str	x0, [sp, #88]
    5e24:	ldr	x0, [sp, #24]
    5e28:	ldr	x1, [x0, #24]
    5e2c:	ldrsw	x2, [sp, #32]
    5e30:	ldr	x0, [sp, #88]
    5e34:	add	x0, x2, x0
    5e38:	lsl	x0, x0, #3
    5e3c:	sub	x0, x0, #0x8
    5e40:	add	x1, x1, x0
    5e44:	ldr	x0, [sp, #24]
    5e48:	str	x1, [x0]
    5e4c:	nop
    5e50:	ldp	x29, x30, [sp], #96
    5e54:	ret

0000000000005e58 <XS_Time__HiRes_stat>:
    5e58:	stp	x29, x30, [sp, #-192]!
    5e5c:	mov	x29, sp
    5e60:	str	x19, [sp, #16]
    5e64:	str	x0, [sp, #40]
    5e68:	str	x1, [sp, #32]
    5e6c:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    5e70:	ldr	x0, [x0, #4040]
    5e74:	ldr	x1, [x0]
    5e78:	str	x1, [sp, #184]
    5e7c:	mov	x1, #0x0                   	// #0
    5e80:	ldr	x0, [sp, #40]
    5e84:	ldr	x0, [x0]
    5e88:	str	x0, [sp, #88]
    5e8c:	ldr	x0, [sp, #40]
    5e90:	bl	1780 <S_POPMARK>
    5e94:	str	w0, [sp, #48]
    5e98:	ldr	x0, [sp, #40]
    5e9c:	ldr	x1, [x0, #24]
    5ea0:	ldr	w0, [sp, #48]
    5ea4:	add	w2, w0, #0x1
    5ea8:	str	w2, [sp, #48]
    5eac:	sxtw	x0, w0
    5eb0:	lsl	x0, x0, #3
    5eb4:	add	x0, x1, x0
    5eb8:	str	x0, [sp, #96]
    5ebc:	ldr	x1, [sp, #88]
    5ec0:	ldr	x0, [sp, #96]
    5ec4:	sub	x0, x1, x0
    5ec8:	asr	x0, x0, #3
    5ecc:	str	w0, [sp, #52]
    5ed0:	ldr	x0, [sp, #32]
    5ed4:	ldr	x0, [x0]
    5ed8:	str	x0, [sp, #104]
    5edc:	ldr	x0, [sp, #104]
    5ee0:	ldr	w0, [x0, #40]
    5ee4:	str	w0, [sp, #56]
    5ee8:	ldrsw	x0, [sp, #52]
    5eec:	lsl	x0, x0, #3
    5ef0:	neg	x0, x0
    5ef4:	ldr	x1, [sp, #88]
    5ef8:	add	x0, x1, x0
    5efc:	str	x0, [sp, #88]
    5f00:	ldr	x0, [sp, #40]
    5f04:	ldr	x1, [x0, #32]
    5f08:	ldr	x0, [sp, #88]
    5f0c:	sub	x0, x1, x0
    5f10:	cmp	x0, #0x0
    5f14:	cset	w0, le
    5f18:	and	w0, w0, #0xff
    5f1c:	and	x0, x0, #0xff
    5f20:	cmp	x0, #0x0
    5f24:	b.eq	5f40 <XS_Time__HiRes_stat+0xe8>  // b.none
    5f28:	mov	x3, #0x1                   	// #1
    5f2c:	ldr	x2, [sp, #88]
    5f30:	ldr	x1, [sp, #88]
    5f34:	ldr	x0, [sp, #40]
    5f38:	bl	1320 <Perl_stack_grow@plt>
    5f3c:	str	x0, [sp, #88]
    5f40:	ldr	w0, [sp, #52]
    5f44:	cmp	w0, #0x1
    5f48:	b.ne	5f68 <XS_Time__HiRes_stat+0x110>  // b.any
    5f4c:	ldr	x0, [sp, #40]
    5f50:	ldr	x1, [x0, #24]
    5f54:	ldrsw	x0, [sp, #48]
    5f58:	lsl	x0, x0, #3
    5f5c:	add	x0, x1, x0
    5f60:	ldr	x0, [x0]
    5f64:	b	5fb0 <XS_Time__HiRes_stat+0x158>
    5f68:	ldr	x0, [sp, #40]
    5f6c:	ldr	x0, [x0, #192]
    5f70:	ldr	x0, [x0, #16]
    5f74:	ldr	x0, [x0]
    5f78:	cmp	x0, #0x0
    5f7c:	b.eq	5f90 <XS_Time__HiRes_stat+0x138>  // b.none
    5f80:	ldr	x0, [sp, #40]
    5f84:	ldr	x0, [x0, #192]
    5f88:	ldr	x0, [x0, #16]
    5f8c:	b	5fac <XS_Time__HiRes_stat+0x154>
    5f90:	ldr	x0, [sp, #40]
    5f94:	ldr	x0, [x0, #192]
    5f98:	mov	w2, #0x0                   	// #0
    5f9c:	mov	x1, x0
    5fa0:	ldr	x0, [sp, #40]
    5fa4:	bl	15c0 <Perl_gv_add_by_type@plt>
    5fa8:	ldr	x0, [x0, #16]
    5fac:	ldr	x0, [x0]
    5fb0:	mov	w2, #0x12                  	// #18
    5fb4:	mov	x1, x0
    5fb8:	ldr	x0, [sp, #40]
    5fbc:	bl	15d0 <Perl_newSVsv_flags@plt>
    5fc0:	mov	x1, x0
    5fc4:	ldr	x0, [sp, #88]
    5fc8:	add	x0, x0, #0x8
    5fcc:	str	x0, [sp, #88]
    5fd0:	ldr	x0, [sp, #40]
    5fd4:	bl	14e0 <Perl_sv_2mortal@plt>
    5fd8:	mov	x1, x0
    5fdc:	ldr	x0, [sp, #88]
    5fe0:	str	x1, [x0]
    5fe4:	ldr	x0, [sp, #40]
    5fe8:	ldr	x1, [sp, #88]
    5fec:	str	x1, [x0]
    5ff0:	ldr	x0, [sp, #40]
    5ff4:	bl	1580 <Perl_push_scope@plt>
    5ff8:	ldr	x0, [sp, #40]
    5ffc:	mov	w1, #0xffffffff            	// #-1
    6000:	str	w1, [x0, #2012]
    6004:	ldr	x0, [sp, #40]
    6008:	ldr	x0, [x0, #8]
    600c:	mov	w2, #0x12                  	// #18
    6010:	mov	x1, x0
    6014:	ldr	x0, [sp, #40]
    6018:	bl	1480 <Perl_save_pushptr@plt>
    601c:	add	x0, sp, #0x90
    6020:	mov	x2, #0x28                  	// #40
    6024:	mov	w1, #0x0                   	// #0
    6028:	bl	13e0 <memset@plt>
    602c:	ldr	w0, [sp, #56]
    6030:	cmp	w0, #0x0
    6034:	b.eq	6040 <XS_Time__HiRes_stat+0x1e8>  // b.none
    6038:	mov	w1, #0x10b                 	// #267
    603c:	b	6044 <XS_Time__HiRes_stat+0x1ec>
    6040:	mov	w1, #0x10c                 	// #268
    6044:	ldrh	w0, [sp, #176]
    6048:	bfxil	w0, w1, #0, #9
    604c:	strh	w0, [sp, #176]
    6050:	ldrh	w0, [sp, #176]
    6054:	ubfx	x0, x0, #0, #9
    6058:	and	w0, w0, #0xffff
    605c:	mov	w1, w0
    6060:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    6064:	ldr	x0, [x0, #4056]
    6068:	sxtw	x1, w1
    606c:	ldr	x0, [x0, x1, lsl #3]
    6070:	str	x0, [sp, #160]
    6074:	ldr	x0, [sp, #40]
    6078:	ldr	x0, [x0, #8]
    607c:	ldrb	w0, [x0, #34]
    6080:	and	w0, w0, #0x3
    6084:	cmp	w0, #0x0
    6088:	b.eq	60ac <XS_Time__HiRes_stat+0x254>  // b.none
    608c:	ldr	x0, [sp, #40]
    6090:	ldr	x0, [x0, #8]
    6094:	ldrb	w0, [x0, #34]
    6098:	and	w0, w0, #0x3
    609c:	cmp	w0, #0x3
    60a0:	cset	w0, eq  // eq = none
    60a4:	and	w0, w0, #0xff
    60a8:	b	60c4 <XS_Time__HiRes_stat+0x26c>
    60ac:	ldr	x0, [sp, #40]
    60b0:	bl	1560 <Perl_block_gimme@plt>
    60b4:	and	w0, w0, #0xff
    60b8:	cmp	w0, #0x3
    60bc:	cset	w0, eq  // eq = none
    60c0:	and	w0, w0, #0xff
    60c4:	cmp	w0, #0x0
    60c8:	b.eq	60d4 <XS_Time__HiRes_stat+0x27c>  // b.none
    60cc:	mov	w0, #0x3                   	// #3
    60d0:	b	6138 <XS_Time__HiRes_stat+0x2e0>
    60d4:	ldr	x0, [sp, #40]
    60d8:	ldr	x0, [x0, #8]
    60dc:	ldrb	w0, [x0, #34]
    60e0:	and	w0, w0, #0x3
    60e4:	cmp	w0, #0x0
    60e8:	b.eq	610c <XS_Time__HiRes_stat+0x2b4>  // b.none
    60ec:	ldr	x0, [sp, #40]
    60f0:	ldr	x0, [x0, #8]
    60f4:	ldrb	w0, [x0, #34]
    60f8:	and	w0, w0, #0x3
    60fc:	cmp	w0, #0x2
    6100:	cset	w0, eq  // eq = none
    6104:	and	w0, w0, #0xff
    6108:	b	6124 <XS_Time__HiRes_stat+0x2cc>
    610c:	ldr	x0, [sp, #40]
    6110:	bl	1560 <Perl_block_gimme@plt>
    6114:	and	w0, w0, #0xff
    6118:	cmp	w0, #0x2
    611c:	cset	w0, eq  // eq = none
    6120:	and	w0, w0, #0xff
    6124:	cmp	w0, #0x0
    6128:	b.eq	6134 <XS_Time__HiRes_stat+0x2dc>  // b.none
    612c:	mov	w0, #0x2                   	// #2
    6130:	b	6138 <XS_Time__HiRes_stat+0x2e0>
    6134:	mov	w0, #0x1                   	// #1
    6138:	strb	w0, [sp, #178]
    613c:	ldr	x0, [sp, #40]
    6140:	add	x1, sp, #0x90
    6144:	str	x1, [x0, #8]
    6148:	ldr	x1, [sp, #160]
    614c:	ldr	x0, [sp, #40]
    6150:	blr	x1
    6154:	ldr	x0, [sp, #40]
    6158:	ldr	x0, [x0]
    615c:	str	x0, [sp, #88]
    6160:	ldr	x0, [sp, #40]
    6164:	bl	1350 <Perl_pop_scope@plt>
    6168:	ldr	x0, [sp, #88]
    616c:	add	x1, x0, #0x8
    6170:	ldr	x0, [sp, #40]
    6174:	ldr	x2, [x0, #24]
    6178:	ldrsw	x0, [sp, #48]
    617c:	lsl	x0, x0, #3
    6180:	add	x0, x2, x0
    6184:	sub	x0, x1, x0
    6188:	asr	x0, x0, #3
    618c:	str	w0, [sp, #60]
    6190:	ldr	w0, [sp, #60]
    6194:	cmp	w0, #0xd
    6198:	b.ne	6494 <XS_Time__HiRes_stat+0x63c>  // b.any
    619c:	ldr	x0, [sp, #40]
    61a0:	ldr	x1, [x0, #24]
    61a4:	ldrsw	x0, [sp, #48]
    61a8:	add	x0, x0, #0x8
    61ac:	lsl	x0, x0, #3
    61b0:	add	x0, x1, x0
    61b4:	ldr	x0, [x0]
    61b8:	ldr	w1, [x0, #12]
    61bc:	mov	w0, #0x100                 	// #256
    61c0:	movk	w0, #0x8020, lsl #16
    61c4:	and	w1, w1, w0
    61c8:	mov	w0, #0x100                 	// #256
    61cc:	movk	w0, #0x8000, lsl #16
    61d0:	cmp	w1, w0
    61d4:	b.ne	6200 <XS_Time__HiRes_stat+0x3a8>  // b.any
    61d8:	ldr	x0, [sp, #40]
    61dc:	ldr	x1, [x0, #24]
    61e0:	ldrsw	x0, [sp, #48]
    61e4:	add	x0, x0, #0x8
    61e8:	lsl	x0, x0, #3
    61ec:	add	x0, x1, x0
    61f0:	ldr	x0, [x0]
    61f4:	ldr	x0, [x0]
    61f8:	ldr	x0, [x0, #32]
    61fc:	b	622c <XS_Time__HiRes_stat+0x3d4>
    6200:	ldr	x0, [sp, #40]
    6204:	ldr	x1, [x0, #24]
    6208:	ldrsw	x0, [sp, #48]
    620c:	add	x0, x0, #0x8
    6210:	lsl	x0, x0, #3
    6214:	add	x0, x1, x0
    6218:	ldr	x0, [x0]
    621c:	mov	w2, #0x2                   	// #2
    6220:	mov	x1, x0
    6224:	ldr	x0, [sp, #40]
    6228:	bl	1310 <Perl_sv_2uv_flags@plt>
    622c:	str	x0, [sp, #112]
    6230:	ldr	x0, [sp, #40]
    6234:	ldr	x1, [x0, #24]
    6238:	ldrsw	x0, [sp, #48]
    623c:	add	x0, x0, #0x9
    6240:	lsl	x0, x0, #3
    6244:	add	x0, x1, x0
    6248:	ldr	x0, [x0]
    624c:	ldr	w1, [x0, #12]
    6250:	mov	w0, #0x100                 	// #256
    6254:	movk	w0, #0x8020, lsl #16
    6258:	and	w1, w1, w0
    625c:	mov	w0, #0x100                 	// #256
    6260:	movk	w0, #0x8000, lsl #16
    6264:	cmp	w1, w0
    6268:	b.ne	6294 <XS_Time__HiRes_stat+0x43c>  // b.any
    626c:	ldr	x0, [sp, #40]
    6270:	ldr	x1, [x0, #24]
    6274:	ldrsw	x0, [sp, #48]
    6278:	add	x0, x0, #0x9
    627c:	lsl	x0, x0, #3
    6280:	add	x0, x1, x0
    6284:	ldr	x0, [x0]
    6288:	ldr	x0, [x0]
    628c:	ldr	x0, [x0, #32]
    6290:	b	62c0 <XS_Time__HiRes_stat+0x468>
    6294:	ldr	x0, [sp, #40]
    6298:	ldr	x1, [x0, #24]
    629c:	ldrsw	x0, [sp, #48]
    62a0:	add	x0, x0, #0x9
    62a4:	lsl	x0, x0, #3
    62a8:	add	x0, x1, x0
    62ac:	ldr	x0, [x0]
    62b0:	mov	w2, #0x2                   	// #2
    62b4:	mov	x1, x0
    62b8:	ldr	x0, [sp, #40]
    62bc:	bl	1310 <Perl_sv_2uv_flags@plt>
    62c0:	str	x0, [sp, #120]
    62c4:	ldr	x0, [sp, #40]
    62c8:	ldr	x1, [x0, #24]
    62cc:	ldrsw	x0, [sp, #48]
    62d0:	add	x0, x0, #0xa
    62d4:	lsl	x0, x0, #3
    62d8:	add	x0, x1, x0
    62dc:	ldr	x0, [x0]
    62e0:	ldr	w1, [x0, #12]
    62e4:	mov	w0, #0x100                 	// #256
    62e8:	movk	w0, #0x8020, lsl #16
    62ec:	and	w1, w1, w0
    62f0:	mov	w0, #0x100                 	// #256
    62f4:	movk	w0, #0x8000, lsl #16
    62f8:	cmp	w1, w0
    62fc:	b.ne	6328 <XS_Time__HiRes_stat+0x4d0>  // b.any
    6300:	ldr	x0, [sp, #40]
    6304:	ldr	x1, [x0, #24]
    6308:	ldrsw	x0, [sp, #48]
    630c:	add	x0, x0, #0xa
    6310:	lsl	x0, x0, #3
    6314:	add	x0, x1, x0
    6318:	ldr	x0, [x0]
    631c:	ldr	x0, [x0]
    6320:	ldr	x0, [x0, #32]
    6324:	b	6354 <XS_Time__HiRes_stat+0x4fc>
    6328:	ldr	x0, [sp, #40]
    632c:	ldr	x1, [x0, #24]
    6330:	ldrsw	x0, [sp, #48]
    6334:	add	x0, x0, #0xa
    6338:	lsl	x0, x0, #3
    633c:	add	x0, x1, x0
    6340:	ldr	x0, [x0]
    6344:	mov	w2, #0x2                   	// #2
    6348:	mov	x1, x0
    634c:	ldr	x0, [sp, #40]
    6350:	bl	1310 <Perl_sv_2uv_flags@plt>
    6354:	str	x0, [sp, #128]
    6358:	add	x2, sp, #0x50
    635c:	add	x1, sp, #0x48
    6360:	add	x0, sp, #0x40
    6364:	bl	1ab4 <hrstatns>
    6368:	ldr	x0, [sp, #64]
    636c:	cmp	x0, #0x0
    6370:	b.eq	63cc <XS_Time__HiRes_stat+0x574>  // b.none
    6374:	ldr	d0, [sp, #112]
    6378:	ucvtf	d1, d0
    637c:	ldr	d0, [sp, #64]
    6380:	ucvtf	d0, d0
    6384:	mov	x0, #0xcd6500000000        	// #225833675390976
    6388:	movk	x0, #0x41cd, lsl #48
    638c:	fmov	d2, x0
    6390:	fdiv	d0, d0, d2
    6394:	fadd	d0, d1, d0
    6398:	ldr	x0, [sp, #40]
    639c:	bl	13a0 <Perl_newSVnv@plt>
    63a0:	mov	x2, x0
    63a4:	ldr	x0, [sp, #40]
    63a8:	ldr	x1, [x0, #24]
    63ac:	ldrsw	x0, [sp, #48]
    63b0:	add	x0, x0, #0x8
    63b4:	lsl	x0, x0, #3
    63b8:	add	x19, x1, x0
    63bc:	mov	x1, x2
    63c0:	ldr	x0, [sp, #40]
    63c4:	bl	14e0 <Perl_sv_2mortal@plt>
    63c8:	str	x0, [x19]
    63cc:	ldr	x0, [sp, #72]
    63d0:	cmp	x0, #0x0
    63d4:	b.eq	6430 <XS_Time__HiRes_stat+0x5d8>  // b.none
    63d8:	ldr	d0, [sp, #120]
    63dc:	ucvtf	d1, d0
    63e0:	ldr	d0, [sp, #72]
    63e4:	ucvtf	d0, d0
    63e8:	mov	x0, #0xcd6500000000        	// #225833675390976
    63ec:	movk	x0, #0x41cd, lsl #48
    63f0:	fmov	d2, x0
    63f4:	fdiv	d0, d0, d2
    63f8:	fadd	d0, d1, d0
    63fc:	ldr	x0, [sp, #40]
    6400:	bl	13a0 <Perl_newSVnv@plt>
    6404:	mov	x2, x0
    6408:	ldr	x0, [sp, #40]
    640c:	ldr	x1, [x0, #24]
    6410:	ldrsw	x0, [sp, #48]
    6414:	add	x0, x0, #0x9
    6418:	lsl	x0, x0, #3
    641c:	add	x19, x1, x0
    6420:	mov	x1, x2
    6424:	ldr	x0, [sp, #40]
    6428:	bl	14e0 <Perl_sv_2mortal@plt>
    642c:	str	x0, [x19]
    6430:	ldr	x0, [sp, #80]
    6434:	cmp	x0, #0x0
    6438:	b.eq	6494 <XS_Time__HiRes_stat+0x63c>  // b.none
    643c:	ldr	d0, [sp, #128]
    6440:	ucvtf	d1, d0
    6444:	ldr	d0, [sp, #80]
    6448:	ucvtf	d0, d0
    644c:	mov	x0, #0xcd6500000000        	// #225833675390976
    6450:	movk	x0, #0x41cd, lsl #48
    6454:	fmov	d2, x0
    6458:	fdiv	d0, d0, d2
    645c:	fadd	d0, d1, d0
    6460:	ldr	x0, [sp, #40]
    6464:	bl	13a0 <Perl_newSVnv@plt>
    6468:	mov	x2, x0
    646c:	ldr	x0, [sp, #40]
    6470:	ldr	x1, [x0, #24]
    6474:	ldrsw	x0, [sp, #48]
    6478:	add	x0, x0, #0xa
    647c:	lsl	x0, x0, #3
    6480:	add	x19, x1, x0
    6484:	mov	x1, x2
    6488:	ldr	x0, [sp, #40]
    648c:	bl	14e0 <Perl_sv_2mortal@plt>
    6490:	str	x0, [x19]
    6494:	ldrsw	x0, [sp, #60]
    6498:	str	x0, [sp, #136]
    649c:	ldr	x0, [sp, #40]
    64a0:	ldr	x1, [x0, #24]
    64a4:	ldrsw	x2, [sp, #48]
    64a8:	ldr	x0, [sp, #136]
    64ac:	add	x0, x2, x0
    64b0:	lsl	x0, x0, #3
    64b4:	sub	x0, x0, #0x8
    64b8:	add	x1, x1, x0
    64bc:	ldr	x0, [sp, #40]
    64c0:	str	x1, [x0]
    64c4:	nop
    64c8:	adrp	x0, 17000 <__FRAME_END__+0xf718>
    64cc:	ldr	x0, [x0, #4040]
    64d0:	ldr	x1, [sp, #184]
    64d4:	ldr	x0, [x0]
    64d8:	eor	x0, x1, x0
    64dc:	cmp	x0, #0x0
    64e0:	b.eq	64e8 <XS_Time__HiRes_stat+0x690>  // b.none
    64e4:	bl	1430 <__stack_chk_fail@plt>
    64e8:	ldr	x19, [sp, #16]
    64ec:	ldp	x29, x30, [sp], #192
    64f0:	ret

00000000000064f4 <boot_Time__HiRes>:
    64f4:	stp	x29, x30, [sp, #-112]!
    64f8:	mov	x29, sp
    64fc:	str	x19, [sp, #16]
    6500:	str	x0, [sp, #40]
    6504:	str	x1, [sp, #32]
    6508:	adrp	x0, 7000 <_fini+0x710>
    650c:	add	x4, x0, #0xe0
    6510:	adrp	x0, 7000 <_fini+0x710>
    6514:	add	x3, x0, #0xe8
    6518:	adrp	x0, 7000 <_fini+0x710>
    651c:	add	x2, x0, #0xf0
    6520:	ldr	x1, [sp, #40]
    6524:	mov	w0, #0x6e7                 	// #1767
    6528:	movk	w0, #0xd30, lsl #16
    652c:	bl	1520 <Perl_xs_handshake@plt>
    6530:	str	w0, [sp, #56]
    6534:	ldr	x0, [sp, #40]
    6538:	ldr	x1, [x0, #24]
    653c:	ldrsw	x0, [sp, #56]
    6540:	lsl	x0, x0, #3
    6544:	add	x0, x1, x0
    6548:	str	x0, [sp, #64]
    654c:	ldr	x0, [sp, #40]
    6550:	ldr	x0, [x0]
    6554:	str	x0, [sp, #72]
    6558:	ldr	x1, [sp, #72]
    655c:	ldr	x0, [sp, #64]
    6560:	sub	x0, x1, x0
    6564:	asr	x0, x0, #3
    6568:	str	w0, [sp, #60]
    656c:	adrp	x0, 7000 <_fini+0x710>
    6570:	add	x0, x0, #0xf0
    6574:	str	x0, [sp, #80]
    6578:	mov	w5, #0x0                   	// #0
    657c:	adrp	x0, 7000 <_fini+0x710>
    6580:	add	x4, x0, #0xf8
    6584:	ldr	x3, [sp, #80]
    6588:	adrp	x0, 2000 <constant_14+0x12c>
    658c:	add	x2, x0, #0x968
    6590:	adrp	x0, 7000 <_fini+0x710>
    6594:	add	x1, x0, #0x100
    6598:	ldr	x0, [sp, #40]
    659c:	bl	14d0 <Perl_newXS_flags@plt>
    65a0:	mov	w5, #0x0                   	// #0
    65a4:	adrp	x0, 7000 <_fini+0x710>
    65a8:	add	x4, x0, #0xf8
    65ac:	ldr	x3, [sp, #80]
    65b0:	adrp	x0, 2000 <constant_14+0x12c>
    65b4:	add	x2, x0, #0xd14
    65b8:	adrp	x0, 7000 <_fini+0x710>
    65bc:	add	x1, x0, #0x118
    65c0:	ldr	x0, [sp, #40]
    65c4:	bl	14d0 <Perl_newXS_flags@plt>
    65c8:	mov	w5, #0x0                   	// #0
    65cc:	adrp	x0, 7000 <_fini+0x710>
    65d0:	add	x4, x0, #0xf8
    65d4:	ldr	x3, [sp, #80]
    65d8:	adrp	x0, 3000 <XS_Time__HiRes_usleep+0x2ec>
    65dc:	add	x2, x0, #0x94
    65e0:	adrp	x0, 7000 <_fini+0x710>
    65e4:	add	x1, x0, #0x130
    65e8:	ldr	x0, [sp, #40]
    65ec:	bl	14d0 <Perl_newXS_flags@plt>
    65f0:	mov	w5, #0x0                   	// #0
    65f4:	adrp	x0, 7000 <_fini+0x710>
    65f8:	add	x4, x0, #0x148
    65fc:	ldr	x3, [sp, #80]
    6600:	adrp	x0, 3000 <XS_Time__HiRes_usleep+0x2ec>
    6604:	add	x2, x0, #0x36c
    6608:	adrp	x0, 7000 <_fini+0x710>
    660c:	add	x1, x0, #0x150
    6610:	ldr	x0, [sp, #40]
    6614:	bl	14d0 <Perl_newXS_flags@plt>
    6618:	mov	w5, #0x0                   	// #0
    661c:	adrp	x0, 7000 <_fini+0x710>
    6620:	add	x4, x0, #0x168
    6624:	ldr	x3, [sp, #80]
    6628:	adrp	x0, 3000 <XS_Time__HiRes_usleep+0x2ec>
    662c:	add	x2, x0, #0x6d4
    6630:	adrp	x0, 7000 <_fini+0x710>
    6634:	add	x1, x0, #0x170
    6638:	ldr	x0, [sp, #40]
    663c:	bl	14d0 <Perl_newXS_flags@plt>
    6640:	mov	w5, #0x0                   	// #0
    6644:	adrp	x0, 7000 <_fini+0x710>
    6648:	add	x4, x0, #0x168
    664c:	ldr	x3, [sp, #80]
    6650:	adrp	x0, 3000 <XS_Time__HiRes_usleep+0x2ec>
    6654:	add	x2, x0, #0xa60
    6658:	adrp	x0, 7000 <_fini+0x710>
    665c:	add	x1, x0, #0x188
    6660:	ldr	x0, [sp, #40]
    6664:	bl	14d0 <Perl_newXS_flags@plt>
    6668:	mov	w5, #0x0                   	// #0
    666c:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    6670:	add	x4, x0, #0xf70
    6674:	ldr	x3, [sp, #80]
    6678:	adrp	x0, 3000 <XS_Time__HiRes_usleep+0x2ec>
    667c:	add	x2, x0, #0xed0
    6680:	adrp	x0, 7000 <_fini+0x710>
    6684:	add	x1, x0, #0x1a0
    6688:	ldr	x0, [sp, #40]
    668c:	bl	14d0 <Perl_newXS_flags@plt>
    6690:	mov	w5, #0x0                   	// #0
    6694:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    6698:	add	x4, x0, #0xf70
    669c:	ldr	x3, [sp, #80]
    66a0:	adrp	x0, 4000 <XS_Time__HiRes_gettimeofday+0x130>
    66a4:	add	x2, x0, #0x160
    66a8:	adrp	x0, 7000 <_fini+0x710>
    66ac:	add	x1, x0, #0x1c0
    66b0:	ldr	x0, [sp, #40]
    66b4:	bl	14d0 <Perl_newXS_flags@plt>
    66b8:	mov	w5, #0x0                   	// #0
    66bc:	adrp	x0, 7000 <_fini+0x710>
    66c0:	add	x4, x0, #0x1d8
    66c4:	ldr	x3, [sp, #80]
    66c8:	adrp	x0, 4000 <XS_Time__HiRes_gettimeofday+0x130>
    66cc:	add	x2, x0, #0x3ac
    66d0:	adrp	x0, 7000 <_fini+0x710>
    66d4:	add	x1, x0, #0x1e0
    66d8:	ldr	x0, [sp, #40]
    66dc:	bl	14d0 <Perl_newXS_flags@plt>
    66e0:	mov	w5, #0x0                   	// #0
    66e4:	adrp	x0, 7000 <_fini+0x710>
    66e8:	add	x4, x0, #0xf8
    66ec:	ldr	x3, [sp, #80]
    66f0:	adrp	x0, 4000 <XS_Time__HiRes_gettimeofday+0x130>
    66f4:	add	x2, x0, #0x868
    66f8:	adrp	x0, 7000 <_fini+0x710>
    66fc:	add	x1, x0, #0x1f8
    6700:	ldr	x0, [sp, #40]
    6704:	bl	14d0 <Perl_newXS_flags@plt>
    6708:	mov	w5, #0x0                   	// #0
    670c:	adrp	x0, 7000 <_fini+0x710>
    6710:	add	x4, x0, #0x210
    6714:	ldr	x3, [sp, #80]
    6718:	adrp	x0, 4000 <XS_Time__HiRes_gettimeofday+0x130>
    671c:	add	x2, x0, #0xb4c
    6720:	adrp	x0, 7000 <_fini+0x710>
    6724:	add	x1, x0, #0x218
    6728:	ldr	x0, [sp, #40]
    672c:	bl	14d0 <Perl_newXS_flags@plt>
    6730:	mov	w5, #0x0                   	// #0
    6734:	adrp	x0, 7000 <_fini+0x710>
    6738:	add	x4, x0, #0x230
    673c:	ldr	x3, [sp, #80]
    6740:	adrp	x0, 5000 <XS_Time__HiRes_utime+0x4b4>
    6744:	add	x2, x0, #0x250
    6748:	adrp	x0, 7000 <_fini+0x710>
    674c:	add	x1, x0, #0x238
    6750:	ldr	x0, [sp, #40]
    6754:	bl	14d0 <Perl_newXS_flags@plt>
    6758:	mov	w5, #0x0                   	// #0
    675c:	adrp	x0, 7000 <_fini+0x710>
    6760:	add	x4, x0, #0x230
    6764:	ldr	x3, [sp, #80]
    6768:	adrp	x0, 5000 <XS_Time__HiRes_utime+0x4b4>
    676c:	add	x2, x0, #0x544
    6770:	adrp	x0, 7000 <_fini+0x710>
    6774:	add	x1, x0, #0x258
    6778:	ldr	x0, [sp, #40]
    677c:	bl	14d0 <Perl_newXS_flags@plt>
    6780:	mov	w5, #0x0                   	// #0
    6784:	adrp	x0, 7000 <_fini+0x710>
    6788:	add	x4, x0, #0x1d8
    678c:	ldr	x3, [sp, #80]
    6790:	adrp	x0, 5000 <XS_Time__HiRes_utime+0x4b4>
    6794:	add	x2, x0, #0x838
    6798:	adrp	x0, 7000 <_fini+0x710>
    679c:	add	x1, x0, #0x278
    67a0:	ldr	x0, [sp, #40]
    67a4:	bl	14d0 <Perl_newXS_flags@plt>
    67a8:	mov	w5, #0x0                   	// #0
    67ac:	adrp	x0, 6000 <XS_Time__HiRes_stat+0x1a8>
    67b0:	add	x4, x0, #0xf70
    67b4:	ldr	x3, [sp, #80]
    67b8:	adrp	x0, 5000 <XS_Time__HiRes_utime+0x4b4>
    67bc:	add	x2, x0, #0xc58
    67c0:	adrp	x0, 7000 <_fini+0x710>
    67c4:	add	x1, x0, #0x298
    67c8:	ldr	x0, [sp, #40]
    67cc:	bl	14d0 <Perl_newXS_flags@plt>
    67d0:	mov	w5, #0x0                   	// #0
    67d4:	adrp	x0, 7000 <_fini+0x710>
    67d8:	add	x4, x0, #0x230
    67dc:	ldr	x3, [sp, #80]
    67e0:	adrp	x0, 5000 <XS_Time__HiRes_utime+0x4b4>
    67e4:	add	x2, x0, #0xe58
    67e8:	adrp	x0, 7000 <_fini+0x710>
    67ec:	add	x1, x0, #0x2b0
    67f0:	ldr	x0, [sp, #40]
    67f4:	bl	14d0 <Perl_newXS_flags@plt>
    67f8:	str	x0, [sp, #88]
    67fc:	ldr	x0, [sp, #88]
    6800:	ldr	x0, [x0]
    6804:	str	x0, [sp, #96]
    6808:	ldr	x0, [sp, #96]
    680c:	mov	w1, #0x1                   	// #1
    6810:	str	w1, [x0, #40]
    6814:	mov	w5, #0x0                   	// #0
    6818:	adrp	x0, 7000 <_fini+0x710>
    681c:	add	x4, x0, #0x230
    6820:	ldr	x3, [sp, #80]
    6824:	adrp	x0, 5000 <XS_Time__HiRes_utime+0x4b4>
    6828:	add	x2, x0, #0xe58
    682c:	adrp	x0, 7000 <_fini+0x710>
    6830:	add	x1, x0, #0x2c8
    6834:	ldr	x0, [sp, #40]
    6838:	bl	14d0 <Perl_newXS_flags@plt>
    683c:	str	x0, [sp, #88]
    6840:	ldr	x0, [sp, #88]
    6844:	ldr	x0, [x0]
    6848:	str	x0, [sp, #104]
    684c:	ldr	x0, [sp, #104]
    6850:	str	wzr, [x0, #40]
    6854:	ldr	x0, [sp, #40]
    6858:	ldr	x19, [x0, #2032]
    685c:	adrp	x0, 1000 <_init-0x2a8>
    6860:	add	x0, x0, #0xa28
    6864:	mov	x1, x0
    6868:	ldr	x0, [sp, #40]
    686c:	bl	15a0 <Perl_newSViv@plt>
    6870:	mov	w6, #0x0                   	// #0
    6874:	mov	x5, x0
    6878:	mov	w4, #0x24                  	// #36
    687c:	mov	w3, #0xc                   	// #12
    6880:	adrp	x0, 7000 <_fini+0x710>
    6884:	add	x2, x0, #0x2e0
    6888:	mov	x1, x19
    688c:	ldr	x0, [sp, #40]
    6890:	bl	1540 <Perl_hv_common_key_len@plt>
    6894:	ldr	x0, [sp, #40]
    6898:	ldr	x19, [x0, #2032]
    689c:	adrp	x0, 1000 <_init-0x2a8>
    68a0:	add	x0, x0, #0x9a0
    68a4:	mov	x1, x0
    68a8:	ldr	x0, [sp, #40]
    68ac:	bl	15a0 <Perl_newSViv@plt>
    68b0:	mov	w6, #0x0                   	// #0
    68b4:	mov	x5, x0
    68b8:	mov	w4, #0x24                  	// #36
    68bc:	mov	w3, #0xc                   	// #12
    68c0:	adrp	x0, 7000 <_fini+0x710>
    68c4:	add	x2, x0, #0x2f0
    68c8:	mov	x1, x19
    68cc:	ldr	x0, [sp, #40]
    68d0:	bl	1540 <Perl_hv_common_key_len@plt>
    68d4:	ldr	w1, [sp, #56]
    68d8:	ldr	x0, [sp, #40]
    68dc:	bl	1400 <Perl_xs_boot_epilog@plt>
    68e0:	nop
    68e4:	ldr	x19, [sp, #16]
    68e8:	ldp	x29, x30, [sp], #112
    68ec:	ret

Disassembly of section .fini:

00000000000068f0 <_fini>:
    68f0:	stp	x29, x30, [sp, #-16]!
    68f4:	mov	x29, sp
    68f8:	ldp	x29, x30, [sp], #16
    68fc:	ret
