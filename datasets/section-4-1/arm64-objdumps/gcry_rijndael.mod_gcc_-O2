
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//gcry_rijndael.mod_gcc_-O2:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_mod_init-0xce8>:
   0:	stp	x29, x30, [sp, #-48]!
   4:	adrp	x6, 0 <grub_mod_init-0xce8>
   8:	mov	x29, sp
   c:	stp	x19, x20, [sp, #16]
  10:	str	x21, [sp, #32]
  14:	ldr	x9, [x6]
  18:	ldp	w3, w7, [x0, #4]
  1c:	add	x12, x9, #0x400
  20:	ldp	w6, w4, [x2]
  24:	add	x11, x9, #0x800
  28:	ldp	w8, w5, [x2, #8]
  2c:	eor	w3, w4, w3
  30:	ldr	w4, [x0, #12]
  34:	add	x10, x9, #0xc00
  38:	ldr	w2, [x0]
  3c:	eor	w8, w8, w7
  40:	eor	w4, w5, w4
  44:	ubfx	x7, x3, #8, #8
  48:	eor	w2, w6, w2
  4c:	ubfx	x5, x8, #16, #8
  50:	lsr	w15, w4, #24
  54:	and	x6, x2, #0xff
  58:	ldr	w13, [x12, x7, lsl #2]
  5c:	and	x16, x3, #0xff
  60:	ldr	w5, [x11, x5, lsl #2]
  64:	ubfx	x7, x4, #16, #8
  68:	ldr	w15, [x10, x15, lsl #2]
  6c:	ubfx	x14, x8, #8, #8
  70:	ldr	w6, [x9, x6, lsl #2]
  74:	lsr	w21, w2, #24
  78:	eor	w5, w5, w15
  7c:	ubfx	x19, x2, #16, #8
  80:	eor	w6, w6, w13
  84:	ldr	w13, [x0, #480]
  88:	eor	w6, w6, w5
  8c:	str	w6, [x1]
  90:	and	x20, x8, #0xff
  94:	lsr	w18, w3, #24
  98:	ldr	w17, [x11, x7, lsl #2]
  9c:	ubfx	x7, x2, #8, #8
  a0:	ldr	w5, [x9, x16, lsl #2]
  a4:	ubfx	x15, x4, #8, #8
  a8:	ldr	w14, [x12, x14, lsl #2]
  ac:	lsr	w16, w8, #24
  b0:	ldr	w2, [x10, x21, lsl #2]
  b4:	and	x8, x4, #0xff
  b8:	eor	w5, w5, w14
  bc:	ubfx	x3, x3, #16, #8
  c0:	eor	w2, w17, w2
  c4:	sub	w14, w13, #0x1
  c8:	eor	w5, w5, w2
  cc:	str	w5, [x1, #4]
  d0:	cmp	w14, #0x1
  d4:	ldr	w2, [x9, x20, lsl #2]
  d8:	ldr	w4, [x11, x19, lsl #2]
  dc:	ldr	w15, [x12, x15, lsl #2]
  e0:	ldr	w17, [x10, x18, lsl #2]
  e4:	eor	w15, w2, w15
  e8:	eor	w2, w4, w17
  ec:	eor	w2, w15, w2
  f0:	str	w2, [x1, #8]
  f4:	ldr	w8, [x9, x8, lsl #2]
  f8:	ldr	w7, [x12, x7, lsl #2]
  fc:	ldr	w4, [x10, x16, lsl #2]
 100:	ldr	w3, [x11, x3, lsl #2]
 104:	eor	w7, w8, w7
 108:	eor	w3, w3, w4
 10c:	eor	w3, w7, w3
 110:	str	w3, [x1, #12]
 114:	b.le	20c <grub_mod_init-0xadc>
 118:	sub	w4, w13, #0x3
 11c:	add	x13, x0, #0x20
 120:	add	x8, x0, #0x10
 124:	add	x13, x13, w4, uxtw #4
 128:	ldp	w17, w7, [x8, #8]
 12c:	ldp	w16, w15, [x8]
 130:	eor	w2, w2, w17
 134:	eor	w3, w3, w7
 138:	and	x19, x2, #0xff
 13c:	eor	w15, w5, w15
 140:	eor	w16, w6, w16
 144:	and	x4, x16, #0xff
 148:	ubfx	x6, x2, #16, #8
 14c:	ubfx	x5, x15, #8, #8
 150:	lsr	w17, w3, #24
 154:	ubfx	x20, x2, #8, #8
 158:	lsr	w21, w16, #24
 15c:	ldr	w7, [x9, x4, lsl #2]
 160:	ubfx	x4, x3, #16, #8
 164:	ldr	w18, [x12, x5, lsl #2]
 168:	and	x5, x15, #0xff
 16c:	ldr	w17, [x10, x17, lsl #2]
 170:	ubfx	x30, x16, #16, #8
 174:	ldr	w6, [x11, x6, lsl #2]
 178:	eor	w7, w7, w18
 17c:	ubfx	x18, x3, #8, #8
 180:	ubfx	x16, x16, #8, #8
 184:	eor	w6, w6, w17
 188:	lsr	w17, w15, #24
 18c:	eor	w6, w7, w6
 190:	str	w6, [x1]
 194:	lsr	w7, w2, #24
 198:	and	x3, x3, #0xff
 19c:	ldr	w2, [x10, x21, lsl #2]
 1a0:	ubfx	x15, x15, #16, #8
 1a4:	ldr	w5, [x9, x5, lsl #2]
 1a8:	add	x8, x8, #0x10
 1ac:	ldr	w20, [x12, x20, lsl #2]
 1b0:	cmp	x13, x8
 1b4:	ldr	w4, [x11, x4, lsl #2]
 1b8:	eor	w5, w5, w20
 1bc:	eor	w4, w4, w2
 1c0:	eor	w5, w5, w4
 1c4:	str	w5, [x1, #4]
 1c8:	ldr	w2, [x9, x19, lsl #2]
 1cc:	ldr	w18, [x12, x18, lsl #2]
 1d0:	ldr	w4, [x11, x30, lsl #2]
 1d4:	ldr	w17, [x10, x17, lsl #2]
 1d8:	eor	w2, w2, w18
 1dc:	eor	w4, w4, w17
 1e0:	eor	w2, w2, w4
 1e4:	str	w2, [x1, #8]
 1e8:	ldr	w4, [x9, x3, lsl #2]
 1ec:	ldr	w16, [x12, x16, lsl #2]
 1f0:	ldr	w7, [x10, x7, lsl #2]
 1f4:	ldr	w3, [x11, x15, lsl #2]
 1f8:	eor	w4, w4, w16
 1fc:	eor	w3, w3, w7
 200:	eor	w3, w4, w3
 204:	str	w3, [x1, #12]
 208:	b.ne	128 <grub_mod_init-0xbc0>  // b.any
 20c:	sbfiz	x14, x14, #4, #32
 210:	add	x8, x0, x14
 214:	ldr	w7, [x0, x14]
 218:	ldp	w15, w10, [x8, #4]
 21c:	eor	w6, w6, w7
 220:	ldr	w0, [x8, #12]
 224:	eor	w5, w5, w15
 228:	eor	w2, w2, w10
 22c:	eor	w3, w3, w0
 230:	ubfx	x7, x6, #16, #8
 234:	ubfx	x4, x6, #8, #8
 238:	lsr	w10, w6, #24
 23c:	ubfx	x17, x5, #8, #8
 240:	ubfx	x16, x2, #16, #8
 244:	ubfx	x14, x2, #8, #8
 248:	lsr	w15, w3, #24
 24c:	ubfx	x13, x3, #16, #8
 250:	ubfx	x12, x3, #8, #8
 254:	lsr	w11, w5, #24
 258:	lsr	w18, w2, #24
 25c:	ubfx	x0, x5, #16, #8
 260:	add	x7, x9, x7, lsl #2
 264:	add	x4, x9, x4, lsl #2
 268:	add	x17, x9, x17, lsl #2
 26c:	add	x16, x9, x16, lsl #2
 270:	add	x15, x9, x15, lsl #2
 274:	add	x14, x9, x14, lsl #2
 278:	add	x13, x9, x13, lsl #2
 27c:	add	x5, x9, w5, uxtb #2
 280:	add	x2, x9, w2, uxtb #2
 284:	add	x6, x9, w6, uxtb #2
 288:	add	x12, x9, x12, lsl #2
 28c:	add	x3, x9, w3, uxtb #2
 290:	add	x11, x9, x11, lsl #2
 294:	add	x10, x9, x10, lsl #2
 298:	add	x0, x9, x0, lsl #2
 29c:	add	x9, x9, x18, lsl #2
 2a0:	ldrb	w19, [x17, #1]
 2a4:	ldrb	w18, [x16, #1]
 2a8:	ldrb	w17, [x15, #1]
 2ac:	ldrb	w16, [x5, #1]
 2b0:	ldrb	w15, [x14, #1]
 2b4:	ldrb	w12, [x12, #1]
 2b8:	ldrb	w14, [x13, #1]
 2bc:	ldrb	w3, [x3, #1]
 2c0:	ldrb	w13, [x2, #1]
 2c4:	ldrb	w11, [x11, #1]
 2c8:	ldrb	w10, [x10, #1]
 2cc:	ldrb	w5, [x7, #1]
 2d0:	ldrb	w2, [x4, #1]
 2d4:	ldrb	w4, [x6, #1]
 2d8:	strb	w4, [x1]
 2dc:	strb	w19, [x1, #1]
 2e0:	strb	w18, [x1, #2]
 2e4:	strb	w17, [x1, #3]
 2e8:	strb	w16, [x1, #4]
 2ec:	strb	w15, [x1, #5]
 2f0:	strb	w14, [x1, #6]
 2f4:	strb	w10, [x1, #7]
 2f8:	strb	w13, [x1, #8]
 2fc:	strb	w12, [x1, #9]
 300:	strb	w5, [x1, #10]
 304:	strb	w11, [x1, #11]
 308:	strb	w3, [x1, #12]
 30c:	strb	w2, [x1, #13]
 310:	ldrb	w2, [x0, #1]
 314:	ldrb	w0, [x9, #1]
 318:	strb	w2, [x1, #14]
 31c:	strb	w0, [x1, #15]
 320:	ldp	w0, w3, [x1]
 324:	ldr	w2, [x8, #16]
 328:	ldp	x19, x20, [sp, #16]
 32c:	eor	w0, w0, w2
 330:	str	w0, [x1]
 334:	ldr	w2, [x1, #8]
 338:	ldr	w4, [x8, #20]
 33c:	ldr	w0, [x1, #12]
 340:	eor	w3, w3, w4
 344:	str	w3, [x1, #4]
 348:	ldr	x21, [sp, #32]
 34c:	ldr	w3, [x8, #24]
 350:	ldp	x29, x30, [sp], #48
 354:	eor	w2, w2, w3
 358:	str	w2, [x1, #8]
 35c:	ldr	w2, [x8, #28]
 360:	eor	w0, w0, w2
 364:	str	w0, [x1, #12]
 368:	ret
 36c:	nop
	...
 378:	stp	x29, x30, [sp, #-64]!
 37c:	adrp	x4, 0 <grub_mod_init-0xce8>
 380:	mov	x29, sp
 384:	ldr	w17, [x0, #480]
 388:	ldr	x12, [x4]
 38c:	stp	x19, x20, [sp, #16]
 390:	sxtw	x7, w17
 394:	add	x7, x7, #0xf
 398:	stp	x21, x22, [sp, #32]
 39c:	add	x8, x12, #0xb00
 3a0:	lsl	x7, x7, #4
 3a4:	ldr	w3, [x2, #12]
 3a8:	add	x4, x0, x7
 3ac:	add	x9, x12, #0x700
 3b0:	ldp	w6, w14, [x2, #4]
 3b4:	add	x10, x12, #0x300
 3b8:	ldr	w5, [x0, x7]
 3bc:	sub	x11, x12, #0x100
 3c0:	ldr	w2, [x2]
 3c4:	cmp	w17, #0x2
 3c8:	ldp	w15, w13, [x4, #4]
 3cc:	eor	w2, w5, w2
 3d0:	ldr	w5, [x4, #12]
 3d4:	and	x4, x2, #0xff
 3d8:	eor	w13, w13, w14
 3dc:	eor	w6, w15, w6
 3e0:	eor	w3, w5, w3
 3e4:	ubfx	x22, x2, #8, #8
 3e8:	lsr	w14, w6, #24
 3ec:	ubfx	x5, x13, #16, #8
 3f0:	ubfx	x16, x3, #8, #8
 3f4:	ldr	w4, [x11, x4, lsl #2]
 3f8:	lsr	w19, w13, #24
 3fc:	and	x15, x6, #0xff
 400:	ldr	w14, [x8, x14, lsl #2]
 404:	ubfx	x18, x3, #16, #8
 408:	ldr	w16, [x10, x16, lsl #2]
 40c:	and	x21, x13, #0xff
 410:	ldr	w5, [x9, x5, lsl #2]
 414:	ubfx	x20, x6, #8, #8
 418:	eor	w4, w4, w16
 41c:	eor	w5, w5, w14
 420:	ubfx	x14, x13, #8, #8
 424:	eor	w16, w4, w5
 428:	str	w16, [x1]
 42c:	ubfx	x13, x6, #16, #8
 430:	lsr	w5, w2, #24
 434:	ldr	w6, [x11, x15, lsl #2]
 438:	ubfx	x15, x2, #16, #8
 43c:	ldr	w4, [x10, x22, lsl #2]
 440:	ldr	w18, [x9, x18, lsl #2]
 444:	ldr	w2, [x8, x19, lsl #2]
 448:	eor	w6, w6, w4
 44c:	lsr	w19, w3, #24
 450:	and	x4, x3, #0xff
 454:	eor	w2, w18, w2
 458:	eor	w6, w6, w2
 45c:	str	w6, [x1, #4]
 460:	ldr	w3, [x11, x21, lsl #2]
 464:	ldr	w18, [x10, x20, lsl #2]
 468:	ldr	w15, [x9, x15, lsl #2]
 46c:	ldr	w2, [x8, x19, lsl #2]
 470:	eor	w3, w3, w18
 474:	eor	w2, w15, w2
 478:	eor	w3, w3, w2
 47c:	str	w3, [x1, #8]
 480:	ldr	w14, [x10, x14, lsl #2]
 484:	ldr	w2, [x9, x13, lsl #2]
 488:	ldr	w13, [x8, x5, lsl #2]
 48c:	ldr	w5, [x11, x4, lsl #2]
 490:	eor	w4, w2, w13
 494:	eor	w2, w5, w14
 498:	eor	w2, w2, w4
 49c:	str	w2, [x1, #12]
 4a0:	b.le	5b0 <grub_mod_init-0x738>
 4a4:	sub	w17, w17, #0x3
 4a8:	sub	x4, x7, #0xf0
 4ac:	sub	x13, x0, #0x20
 4b0:	sub	x7, x7, #0x100
 4b4:	sub	x17, x4, w17, uxtw #4
 4b8:	add	x7, x0, x7
 4bc:	add	x13, x17, x13
 4c0:	str	x23, [sp, #48]
 4c4:	nop
 4c8:	ldp	w5, w4, [x7, #248]
 4cc:	ldp	w14, w15, [x7, #240]
 4d0:	eor	w3, w3, w5
 4d4:	eor	w2, w2, w4
 4d8:	and	x20, x3, #0xff
 4dc:	eor	w15, w6, w15
 4e0:	eor	w14, w16, w14
 4e4:	ubfx	x4, x3, #16, #8
 4e8:	ubfx	x16, x2, #8, #8
 4ec:	lsr	w6, w15, #24
 4f0:	and	x5, x14, #0xff
 4f4:	ubfx	x23, x14, #8, #8
 4f8:	ubfx	x22, x2, #16, #8
 4fc:	ldr	w16, [x10, x16, lsl #2]
 500:	lsr	w21, w3, #24
 504:	ldr	w17, [x8, x6, lsl #2]
 508:	and	x6, x15, #0xff
 50c:	ldr	w4, [x9, x4, lsl #2]
 510:	ubfx	x18, x15, #8, #8
 514:	ldr	w5, [x11, x5, lsl #2]
 518:	ubfx	x19, x14, #16, #8
 51c:	eor	w4, w4, w17
 520:	ubfx	x17, x3, #8, #8
 524:	eor	w5, w5, w16
 528:	lsr	w30, w2, #24
 52c:	eor	w16, w5, w4
 530:	str	w16, [x1]
 534:	ubfx	x15, x15, #16, #8
 538:	lsr	w14, w14, #24
 53c:	ldr	w5, [x10, x23, lsl #2]
 540:	sub	x7, x7, #0x10
 544:	ldr	w4, [x9, x22, lsl #2]
 548:	cmp	x13, x7
 54c:	ldr	w3, [x8, x21, lsl #2]
 550:	ldr	w6, [x11, x6, lsl #2]
 554:	eor	w6, w6, w5
 558:	and	x5, x2, #0xff
 55c:	eor	w2, w4, w3
 560:	eor	w6, w6, w2
 564:	str	w6, [x1, #4]
 568:	ldr	w4, [x8, x30, lsl #2]
 56c:	ldr	w3, [x11, x20, lsl #2]
 570:	ldr	w18, [x10, x18, lsl #2]
 574:	ldr	w2, [x9, x19, lsl #2]
 578:	eor	w3, w3, w18
 57c:	eor	w2, w2, w4
 580:	eor	w3, w3, w2
 584:	str	w3, [x1, #8]
 588:	ldr	w17, [x10, x17, lsl #2]
 58c:	ldr	w4, [x9, x15, lsl #2]
 590:	ldr	w14, [x8, x14, lsl #2]
 594:	ldr	w2, [x11, x5, lsl #2]
 598:	eor	w4, w4, w14
 59c:	eor	w2, w2, w17
 5a0:	eor	w2, w2, w4
 5a4:	str	w2, [x1, #12]
 5a8:	b.ne	4c8 <grub_mod_init-0x820>  // b.any
 5ac:	ldr	x23, [sp, #48]
 5b0:	add	x9, x0, #0x108
 5b4:	add	x12, x12, #0xf00
 5b8:	ldp	w7, w5, [x9]
 5bc:	ldp	w4, w8, [x9, #-8]
 5c0:	eor	w3, w3, w7
 5c4:	eor	w2, w2, w5
 5c8:	and	w9, w3, #0xff
 5cc:	eor	w4, w16, w4
 5d0:	eor	w6, w6, w8
 5d4:	and	w18, w4, #0xff
 5d8:	ubfx	x16, x3, #16, #8
 5dc:	lsr	w15, w6, #24
 5e0:	and	w14, w6, #0xff
 5e4:	ubfx	x17, x2, #8, #8
 5e8:	ubfx	x13, x4, #8, #8
 5ec:	ubfx	x11, x2, #16, #8
 5f0:	lsr	w10, w3, #24
 5f4:	ubfx	x8, x6, #8, #8
 5f8:	ubfx	x7, x4, #16, #8
 5fc:	lsr	w5, w2, #24
 600:	ubfx	x3, x3, #8, #8
 604:	and	w2, w2, #0xff
 608:	ubfx	x6, x6, #16, #8
 60c:	lsr	w4, w4, #24
 610:	ldrb	w18, [x12, w18, sxtw]
 614:	ldrb	w5, [x12, w5, sxtw]
 618:	ldrb	w2, [x12, w2, sxtw]
 61c:	ldrb	w17, [x12, w17, sxtw]
 620:	ldrb	w16, [x12, w16, sxtw]
 624:	ldrb	w15, [x12, w15, sxtw]
 628:	ldrb	w14, [x12, w14, sxtw]
 62c:	ldrb	w13, [x12, w13, sxtw]
 630:	ldrb	w11, [x12, w11, sxtw]
 634:	ldrb	w10, [x12, w10, sxtw]
 638:	ldrb	w9, [x12, w9, sxtw]
 63c:	ldrb	w3, [x12, w3, sxtw]
 640:	ldrb	w8, [x12, w8, sxtw]
 644:	ldrb	w7, [x12, w7, sxtw]
 648:	strb	w18, [x1]
 64c:	strb	w17, [x1, #1]
 650:	strb	w16, [x1, #2]
 654:	strb	w15, [x1, #3]
 658:	strb	w14, [x1, #4]
 65c:	strb	w13, [x1, #5]
 660:	strb	w11, [x1, #6]
 664:	strb	w10, [x1, #7]
 668:	strb	w9, [x1, #8]
 66c:	strb	w8, [x1, #9]
 670:	strb	w7, [x1, #10]
 674:	strb	w5, [x1, #11]
 678:	strb	w2, [x1, #12]
 67c:	strb	w3, [x1, #13]
 680:	ldrb	w3, [x12, w6, sxtw]
 684:	ldrb	w2, [x12, w4, sxtw]
 688:	strb	w3, [x1, #14]
 68c:	strb	w2, [x1, #15]
 690:	ldp	w2, w4, [x1]
 694:	ldr	w3, [x0, #240]
 698:	ldp	x19, x20, [sp, #16]
 69c:	eor	w2, w2, w3
 6a0:	str	w2, [x1]
 6a4:	ldr	w3, [x1, #8]
 6a8:	ldr	w5, [x0, #244]
 6ac:	ldr	w2, [x1, #12]
 6b0:	eor	w4, w4, w5
 6b4:	str	w4, [x1, #4]
 6b8:	ldp	x21, x22, [sp, #32]
 6bc:	ldr	w4, [x0, #248]
 6c0:	ldp	x29, x30, [sp], #64
 6c4:	eor	w3, w3, w4
 6c8:	str	w3, [x1, #8]
 6cc:	ldr	w0, [x0, #252]
 6d0:	eor	w0, w2, w0
 6d4:	str	w0, [x1, #12]
 6d8:	ret
 6dc:	nop
	...
 6e8:	stp	x29, x30, [sp, #-112]!
 6ec:	adrp	x3, 0 <grub_mod_init-0xce8>
 6f0:	mov	x29, sp
 6f4:	ldr	x3, [x3]
 6f8:	stp	x19, x20, [sp, #16]
 6fc:	ldr	w4, [x3]
 700:	cbnz	w4, 744 <grub_mod_init-0x5a4>
 704:	mov	w4, #0x1                   	// #1
 708:	str	w4, [x3]
 70c:	str	xzr, [x3, #8]
 710:	str	wzr, [x0, #484]
 714:	cmp	w2, #0x10
 718:	b.eq	768 <grub_mod_init-0x580>  // b.none
 71c:	cmp	w2, #0x18
 720:	b.eq	a60 <grub_mod_init-0x288>  // b.none
 724:	cmp	w2, #0x20
 728:	mov	w19, #0xd                   	// #13
 72c:	b.ne	750 <grub_mod_init-0x598>  // b.any
 730:	mov	w11, #0x7                   	// #7
 734:	mov	w5, #0x8                   	// #8
 738:	mov	w9, #0xe                   	// #14
 73c:	str	x21, [sp, #32]
 740:	b	778 <grub_mod_init-0x570>
 744:	ldr	x3, [x3, #8]
 748:	mov	w19, #0x1c                  	// #28
 74c:	cbz	x3, 710 <grub_mod_init-0x5d8>
 750:	mov	w0, #0xa4                  	// #164
 754:	bl	0 <_gcry_burn_stack>
 758:	mov	w0, w19
 75c:	ldp	x19, x20, [sp, #16]
 760:	ldp	x29, x30, [sp], #112
 764:	ret
 768:	mov	w11, #0x3                   	// #3
 76c:	mov	w5, #0x4                   	// #4
 770:	mov	w9, #0xa                   	// #10
 774:	str	x21, [sp, #32]
 778:	mov	x3, #0x0                   	// #0
 77c:	str	w9, [x0, #480]
 780:	asr	w4, w3, #2
 784:	add	x8, sp, #0x70
 788:	and	x7, x3, #0x3
 78c:	ldrb	w6, [x1, x3]
 790:	add	x4, x8, w4, sxtw #2
 794:	add	x3, x3, #0x1
 798:	add	x4, x4, x7
 79c:	cmp	w2, w3
 7a0:	sturb	w6, [x4, #-64]
 7a4:	b.hi	780 <grub_mod_init-0x568>  // b.pmore
 7a8:	sub	w1, w11, #0x1
 7ac:	add	x10, sp, #0x50
 7b0:	mov	x4, #0xfffffffffffffffe    	// #-2
 7b4:	sxtw	x1, w1
 7b8:	lsl	x2, x1, #2
 7bc:	add	x3, sp, #0x30
 7c0:	add	x3, x3, x2
 7c4:	add	x2, x10, x2
 7c8:	sub	x1, x1, #0x1
 7cc:	cmp	x4, x1
 7d0:	ldr	w3, [x3, #4]
 7d4:	str	w3, [x2, #4]
 7d8:	b.ne	7b8 <grub_mod_init-0x530>  // b.any
 7dc:	mov	w3, #0x0                   	// #0
 7e0:	mov	w4, #0x0                   	// #0
 7e4:	mov	w1, #0x0                   	// #0
 7e8:	cmp	w5, w4
 7ec:	cset	w8, gt
 7f0:	b.le	854 <grub_mod_init-0x494>
 7f4:	add	w4, w4, #0x1
 7f8:	add	w3, w3, #0x1
 7fc:	add	x6, x0, w1, sxtw #4
 800:	sxtw	x7, w4
 804:	sxtw	x2, w3
 808:	sub	x6, x6, #0x4
 80c:	nop
 810:	add	x3, x10, x7, lsl #2
 814:	cmp	w5, w7
 818:	cset	w8, gt
 81c:	cmp	w2, #0x3
 820:	cset	w12, le
 824:	mov	w4, w7
 828:	ldur	w3, [x3, #-4]
 82c:	tst	w8, w12
 830:	str	w3, [x6, x2, lsl #2]
 834:	add	x7, x7, #0x1
 838:	mov	w3, w2
 83c:	add	x2, x2, #0x1
 840:	b.ne	810 <grub_mod_init-0x4d8>  // b.any
 844:	cmp	w3, #0x4
 848:	b.ne	854 <grub_mod_init-0x494>  // b.any
 84c:	add	w1, w1, #0x1
 850:	mov	w3, #0x0                   	// #0
 854:	cmp	w8, #0x0
 858:	ccmp	w9, w1, #0x1, ne  // ne = any
 85c:	b.ge	7e8 <grub_mod_init-0x500>  // b.tcont
 860:	cmp	w9, w1
 864:	b.lt	a40 <grub_mod_init-0x2a8>  // b.tstop
 868:	adrp	x2, 0 <grub_mod_init-0xce8>
 86c:	sub	w13, w5, #0x2
 870:	add	x4, x10, #0x4
 874:	sbfiz	x11, x11, #2, #32
 878:	ldr	x2, [x2]
 87c:	add	x13, x4, w13, uxtw #2
 880:	add	x16, sp, #0x51
 884:	add	x15, sp, #0x52
 888:	sub	x12, x2, #0x100
 88c:	add	x14, sp, #0x53
 890:	sub	x2, x2, #0x88
 894:	mov	w17, #0x1                   	// #1
 898:	ldrb	w8, [x15, x11]
 89c:	cmp	w5, #0x8
 8a0:	ldrb	w7, [sp, #81]
 8a4:	mov	x6, x10
 8a8:	ldrb	w4, [x16, x11]
 8ac:	ldrb	w18, [sp, #82]
 8b0:	ldrb	w8, [x2, w8, sxtw]
 8b4:	ldrb	w19, [sp, #80]
 8b8:	eor	w8, w8, w7
 8bc:	strb	w8, [sp, #81]
 8c0:	ldrb	w4, [x2, w4, sxtw]
 8c4:	ldrb	w7, [x14, x11]
 8c8:	eor	w4, w4, w19
 8cc:	ldrb	w8, [sp, #83]
 8d0:	eor	w4, w4, w17
 8d4:	ldrb	w7, [x2, w7, sxtw]
 8d8:	eor	w7, w7, w18
 8dc:	strb	w7, [sp, #82]
 8e0:	ldrb	w7, [x10, x11]
 8e4:	strb	w4, [sp, #80]
 8e8:	ldrb	w4, [x2, w7, sxtw]
 8ec:	eor	w4, w4, w8
 8f0:	strb	w4, [sp, #83]
 8f4:	b.eq	9a4 <grub_mod_init-0x344>  // b.none
 8f8:	ldp	w7, w4, [x6]
 8fc:	eor	w4, w4, w7
 900:	str	w4, [x6, #4]!
 904:	cmp	x13, x6
 908:	b.ne	8f8 <grub_mod_init-0x3f0>  // b.any
 90c:	cmp	w1, w9
 910:	b.gt	a40 <grub_mod_init-0x2a8>
 914:	mov	w6, #0x0                   	// #0
 918:	cmp	w5, w6
 91c:	cset	w17, gt
 920:	b.le	984 <grub_mod_init-0x364>
 924:	add	w6, w6, #0x1
 928:	add	w3, w3, #0x1
 92c:	add	x7, x0, w1, sxtw #4
 930:	sxtw	x8, w6
 934:	sxtw	x4, w3
 938:	sub	x7, x7, #0x4
 93c:	nop
 940:	add	x3, x10, x8, lsl #2
 944:	cmp	w5, w8
 948:	cset	w17, gt
 94c:	cmp	w4, #0x3
 950:	cset	w18, le
 954:	mov	w6, w8
 958:	ldur	w3, [x3, #-4]
 95c:	tst	w17, w18
 960:	str	w3, [x7, x4, lsl #2]
 964:	add	x8, x8, #0x1
 968:	mov	w3, w4
 96c:	add	x4, x4, #0x1
 970:	b.ne	940 <grub_mod_init-0x3a8>  // b.any
 974:	cmp	w3, #0x4
 978:	b.ne	984 <grub_mod_init-0x364>  // b.any
 97c:	add	w1, w1, #0x1
 980:	mov	w3, #0x0                   	// #0
 984:	cmp	w17, #0x0
 988:	ccmp	w1, w9, #0x0, ne  // ne = any
 98c:	b.le	918 <grub_mod_init-0x3d0>
 990:	add	x12, x12, #0x4
 994:	cmp	w1, w9
 998:	b.gt	a40 <grub_mod_init-0x2a8>
 99c:	ldr	w17, [x12]
 9a0:	b	898 <grub_mod_init-0x450>
 9a4:	ldp	w4, w6, [sp, #80]
 9a8:	cmp	w1, w9
 9ac:	ldr	w8, [sp, #88]
 9b0:	eor	w6, w6, w4
 9b4:	ldr	w4, [sp, #92]
 9b8:	eor	w8, w6, w8
 9bc:	ldrb	w17, [sp, #97]
 9c0:	eor	w4, w8, w4
 9c4:	stp	w6, w8, [sp, #84]
 9c8:	and	w18, w4, #0xff
 9cc:	ldrb	w20, [sp, #96]
 9d0:	ubfx	x21, x4, #8, #8
 9d4:	ubfx	x30, x4, #16, #8
 9d8:	lsr	w19, w4, #24
 9dc:	ldrb	w7, [sp, #98]
 9e0:	ldrb	w18, [x2, w18, sxtw]
 9e4:	ldrb	w6, [x2, w21, sxtw]
 9e8:	ldrb	w30, [x2, w30, sxtw]
 9ec:	eor	w18, w18, w20
 9f0:	eor	w17, w17, w6
 9f4:	ldrb	w19, [x2, w19, sxtw]
 9f8:	ldrb	w6, [sp, #99]
 9fc:	eor	w7, w7, w30
 a00:	strb	w18, [sp, #96]
 a04:	eor	w6, w6, w19
 a08:	strb	w17, [sp, #97]
 a0c:	strb	w7, [sp, #98]
 a10:	strb	w6, [sp, #99]
 a14:	ldr	w7, [sp, #100]
 a18:	ldr	w17, [sp, #96]
 a1c:	ldr	w6, [sp, #104]
 a20:	eor	w7, w7, w17
 a24:	ldr	w17, [sp, #108]
 a28:	eor	w6, w7, w6
 a2c:	str	w4, [sp, #92]
 a30:	eor	w8, w17, w6
 a34:	stp	w7, w6, [sp, #100]
 a38:	str	w8, [sp, #108]
 a3c:	b.le	914 <grub_mod_init-0x3d4>
 a40:	mov	w19, #0x0                   	// #0
 a44:	mov	w0, #0xa4                  	// #164
 a48:	ldr	x21, [sp, #32]
 a4c:	bl	0 <_gcry_burn_stack>
 a50:	mov	w0, w19
 a54:	ldp	x19, x20, [sp, #16]
 a58:	ldp	x29, x30, [sp], #112
 a5c:	ret
 a60:	mov	w11, #0x5                   	// #5
 a64:	mov	w5, #0x6                   	// #6
 a68:	mov	w9, #0xc                   	// #12
 a6c:	str	x21, [sp, #32]
 a70:	b	778 <grub_mod_init-0x570>
 a74:	nop
	...
 a88:	stp	x29, x30, [sp, #-80]!
 a8c:	mov	x29, sp
 a90:	stp	x19, x20, [sp, #16]
 a94:	mov	x19, x0
 a98:	ldr	w0, [x0, #484]
 a9c:	str	x21, [sp, #32]
 aa0:	mov	x20, x1
 aa4:	mov	x21, x2
 aa8:	cbz	w0, b00 <grub_mod_init-0x1e8>
 aac:	orr	x0, x21, x20
 ab0:	tst	x0, #0xf
 ab4:	b.eq	c40 <grub_mod_init-0xa8>  // b.none
 ab8:	mov	x1, x21
 abc:	add	x0, sp, #0x30
 ac0:	mov	x2, #0x10                  	// #16
 ac4:	bl	0 <grub_memmove>
 ac8:	add	x2, sp, #0x30
 acc:	mov	x0, x19
 ad0:	add	x1, sp, #0x40
 ad4:	bl	378 <grub_mod_init-0x970>
 ad8:	add	x1, sp, #0x40
 adc:	mov	x2, #0x10                  	// #16
 ae0:	mov	x0, x20
 ae4:	bl	0 <grub_memmove>
 ae8:	mov	w0, #0x40                  	// #64
 aec:	bl	0 <_gcry_burn_stack>
 af0:	ldp	x19, x20, [sp, #16]
 af4:	ldr	x21, [sp, #32]
 af8:	ldp	x29, x30, [sp], #80
 afc:	ret
 b00:	mov	x3, x19
 b04:	add	x5, x19, #0xf0
 b08:	ldp	w4, w2, [x3]
 b0c:	stp	w4, w2, [x3, #240]
 b10:	ldp	w1, w0, [x3, #8]
 b14:	stp	w1, w0, [x3, #248]
 b18:	add	x3, x3, #0x10
 b1c:	cmp	x5, x3
 b20:	b.ne	b08 <grub_mod_init-0x1e0>  // b.any
 b24:	ldr	w0, [x19, #480]
 b28:	cmp	w0, #0x1
 b2c:	b.le	c24 <grub_mod_init-0xc4>
 b30:	adrp	x0, 0 <grub_mod_init-0xce8>
 b34:	add	x3, x19, #0x100
 b38:	mov	w7, #0x1                   	// #1
 b3c:	ldr	x4, [x0]
 b40:	add	x5, x4, #0x78
 b44:	add	x2, x4, #0x478
 b48:	add	x1, x4, #0x878
 b4c:	add	x4, x4, #0xc78
 b50:	ldrb	w0, [x3]
 b54:	add	w7, w7, #0x1
 b58:	ldrb	w8, [x3, #1]
 b5c:	add	x3, x3, #0x10
 b60:	ldurb	w6, [x3, #-14]
 b64:	ldurb	w9, [x3, #-13]
 b68:	ldr	w0, [x5, x0, lsl #2]
 b6c:	ldr	w8, [x2, x8, lsl #2]
 b70:	ldr	w6, [x1, x6, lsl #2]
 b74:	ldr	w9, [x4, x9, lsl #2]
 b78:	eor	w0, w0, w8
 b7c:	ldurb	w11, [x3, #-12]
 b80:	ldurb	w8, [x3, #-11]
 b84:	eor	w6, w6, w9
 b88:	ldurb	w10, [x3, #-10]
 b8c:	eor	w0, w0, w6
 b90:	ldurb	w9, [x3, #-9]
 b94:	stur	w0, [x3, #-16]
 b98:	ldurb	w12, [x3, #-8]
 b9c:	ldr	w0, [x5, x11, lsl #2]
 ba0:	ldr	w8, [x2, x8, lsl #2]
 ba4:	ldr	w6, [x1, x10, lsl #2]
 ba8:	ldr	w9, [x4, x9, lsl #2]
 bac:	eor	w0, w0, w8
 bb0:	ldurb	w8, [x3, #-7]
 bb4:	ldurb	w11, [x3, #-6]
 bb8:	eor	w6, w6, w9
 bbc:	ldurb	w10, [x3, #-5]
 bc0:	eor	w0, w0, w6
 bc4:	stur	w0, [x3, #-12]
 bc8:	ldurb	w9, [x3, #-4]
 bcc:	ldr	w8, [x2, x8, lsl #2]
 bd0:	ldr	w0, [x5, x12, lsl #2]
 bd4:	ldr	w10, [x4, x10, lsl #2]
 bd8:	ldr	w6, [x1, x11, lsl #2]
 bdc:	eor	w0, w0, w8
 be0:	ldurb	w8, [x3, #-3]
 be4:	eor	w6, w6, w10
 be8:	ldurb	w10, [x3, #-2]
 bec:	eor	w0, w0, w6
 bf0:	stur	w0, [x3, #-8]
 bf4:	ldr	w0, [x5, x9, lsl #2]
 bf8:	ldr	w9, [x2, x8, lsl #2]
 bfc:	ldurb	w8, [x3, #-1]
 c00:	ldr	w6, [x1, x10, lsl #2]
 c04:	eor	w0, w0, w9
 c08:	ldr	w8, [x4, x8, lsl #2]
 c0c:	eor	w6, w6, w8
 c10:	eor	w0, w0, w6
 c14:	stur	w0, [x3, #-4]
 c18:	ldr	w0, [x19, #480]
 c1c:	cmp	w7, w0
 c20:	b.lt	b50 <grub_mod_init-0x198>  // b.tstop
 c24:	mov	w0, #0x40                  	// #64
 c28:	bl	0 <_gcry_burn_stack>
 c2c:	mov	w0, #0x1                   	// #1
 c30:	str	w0, [x19, #484]
 c34:	orr	x0, x21, x20
 c38:	tst	x0, #0xf
 c3c:	b.ne	ab8 <grub_mod_init-0x230>  // b.any
 c40:	mov	x2, x21
 c44:	mov	x1, x20
 c48:	mov	x0, x19
 c4c:	bl	378 <grub_mod_init-0x970>
 c50:	mov	w0, #0x40                  	// #64
 c54:	bl	0 <_gcry_burn_stack>
 c58:	ldp	x19, x20, [sp, #16]
 c5c:	ldr	x21, [sp, #32]
 c60:	ldp	x29, x30, [sp], #80
 c64:	ret
	...
 c70:	stp	x29, x30, [sp, #-64]!
 c74:	orr	x4, x2, x1
 c78:	mov	x29, sp
 c7c:	tst	x4, #0xf
 c80:	b.eq	cd4 <grub_mod_init-0x14>  // b.none
 c84:	stp	x19, x20, [sp, #16]
 c88:	mov	x19, x1
 c8c:	mov	x20, x0
 c90:	mov	x1, x2
 c94:	add	x0, sp, #0x20
 c98:	mov	x2, #0x10                  	// #16
 c9c:	bl	0 <grub_memmove>
 ca0:	add	x2, sp, #0x20
 ca4:	mov	x0, x20
 ca8:	add	x1, sp, #0x30
 cac:	bl	0 <grub_mod_init-0xce8>
 cb0:	add	x1, sp, #0x30
 cb4:	mov	x2, #0x10                  	// #16
 cb8:	mov	x0, x19
 cbc:	bl	0 <grub_memmove>
 cc0:	mov	w0, #0x40                  	// #64
 cc4:	ldp	x19, x20, [sp, #16]
 cc8:	bl	0 <_gcry_burn_stack>
 ccc:	ldp	x29, x30, [sp], #64
 cd0:	ret
 cd4:	bl	0 <grub_mod_init-0xce8>
 cd8:	mov	w0, #0x40                  	// #64
 cdc:	bl	0 <_gcry_burn_stack>
 ce0:	ldp	x29, x30, [sp], #64
 ce4:	ret

0000000000000ce8 <grub_mod_init>:
 ce8:	stp	x29, x30, [sp, #-32]!
 cec:	adrp	x0, 0 <grub_mod_init-0xce8>
 cf0:	mov	x29, sp
 cf4:	str	x19, [sp, #16]
 cf8:	ldr	x19, [x0]
 cfc:	mov	x0, x19
 d00:	bl	0 <grub_cipher_register>
 d04:	add	x0, x19, #0x60
 d08:	bl	0 <grub_cipher_register>
 d0c:	add	x0, x19, #0xc0
 d10:	ldr	x19, [sp, #16]
 d14:	ldp	x29, x30, [sp], #32
 d18:	b	0 <grub_cipher_register>
 d1c:	nop
	...

0000000000000d28 <grub_mod_fini>:
 d28:	stp	x29, x30, [sp, #-32]!
 d2c:	adrp	x0, 0 <grub_mod_init-0xce8>
 d30:	mov	x29, sp
 d34:	str	x19, [sp, #16]
 d38:	ldr	x19, [x0]
 d3c:	mov	x0, x19
 d40:	bl	0 <grub_cipher_unregister>
 d44:	add	x0, x19, #0x60
 d48:	bl	0 <grub_cipher_unregister>
 d4c:	add	x0, x19, #0xc0
 d50:	ldr	x19, [sp, #16]
 d54:	ldp	x29, x30, [sp], #32
 d58:	b	0 <grub_cipher_unregister>
 d5c:	nop
	...
