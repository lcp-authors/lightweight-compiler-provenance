
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//chain.module_gcc_-Os:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <grub_chainloader_unload>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	adrp	x0, 0 <grub_chainloader_unload>
   8:	mov	x29, sp
   c:	ldr	x0, [x0]
  10:	stp	x19, x20, [sp, #16]
  14:	ldr	x0, [x0]
  18:	ldr	x20, [x0, #96]
  1c:	adrp	x0, 0 <grub_chainloader_unload>
  20:	ldr	x19, [x0]
  24:	ldr	x1, [x20, #224]
  28:	ldr	x0, [x19]
  2c:	blr	x1
  30:	ldp	x1, x0, [x19, #8]
  34:	ldr	x2, [x20, #48]
  38:	blr	x2
  3c:	ldr	x0, [x19, #24]
  40:	bl	0 <grub_free>
  44:	ldr	x0, [x19, #32]
  48:	bl	0 <grub_free>
  4c:	stp	xzr, xzr, [x19, #24]
  50:	ldr	x0, [x19, #40]
  54:	bl	0 <grub_dl_unref>
  58:	mov	w0, #0x0                   	// #0
  5c:	ldp	x19, x20, [sp, #16]
  60:	ldp	x29, x30, [sp], #32
  64:	ret
	...

0000000000000078 <grub_chainloader_boot>:
  78:	stp	x29, x30, [sp, #-48]!
  7c:	adrp	x0, 0 <grub_chainloader_unload>
  80:	mov	x29, sp
  84:	ldr	x0, [x0]
  88:	stp	x19, x20, [sp, #16]
  8c:	add	x2, sp, #0x28
  90:	str	xzr, [sp, #40]
  94:	add	x1, sp, #0x20
  98:	ldr	x0, [x0]
  9c:	ldr	x19, [x0, #96]
  a0:	adrp	x0, 0 <grub_chainloader_unload>
  a4:	ldr	x0, [x0]
  a8:	ldr	x3, [x19, #208]
  ac:	ldr	x0, [x0]
  b0:	blr	x3
  b4:	cbz	x0, 118 <grub_chainloader_boot+0xa0>
  b8:	ldr	x0, [sp, #40]
  bc:	cbz	x0, 244 <grub_chainloader_boot+0x1cc>
  c0:	ldr	x0, [sp, #32]
  c4:	lsl	x0, x0, #2
  c8:	add	x0, x0, #0x1
  cc:	bl	0 <grub_malloc>
  d0:	mov	x20, x0
  d4:	cbz	x0, 118 <grub_chainloader_boot+0xa0>
  d8:	ldp	x1, x5, [sp, #32]
  dc:	mov	x2, x0
  e0:	mov	w4, #0x0                   	// #0
  e4:	mov	w7, #0xffff2800            	// #-55296
  e8:	mov	w8, #0xffff2400            	// #-56320
  ec:	mov	w9, #0x3f                  	// #63
  f0:	mov	w10, #0x2400                	// #9216
  f4:	sub	x1, x1, #0x1
  f8:	cmn	x1, #0x1
  fc:	b.ne	144 <grub_chainloader_boot+0xcc>  // b.any
 100:	mov	x1, x20
 104:	strb	wzr, [x2]
 108:	mov	w0, #0x15                  	// #21
 10c:	bl	0 <grub_error>
 110:	mov	x0, x20
 114:	bl	0 <grub_free>
 118:	ldr	x0, [sp, #40]
 11c:	cbz	x0, 128 <grub_chainloader_boot+0xb0>
 120:	ldr	x1, [x19, #72]
 124:	blr	x1
 128:	bl	0 <grub_loader_unset>
 12c:	adrp	x0, 0 <grub_chainloader_unload>
 130:	ldp	x19, x20, [sp, #16]
 134:	ldr	x0, [x0]
 138:	ldr	w0, [x0]
 13c:	ldp	x29, x30, [sp], #48
 140:	ret
 144:	mov	x0, x5
 148:	ldrh	w3, [x0], #2
 14c:	cbz	w4, 1b4 <grub_chainloader_boot+0x13c>
 150:	add	w6, w3, w8
 154:	cmp	w6, #0x3ff
 158:	b.hi	1a8 <grub_chainloader_boot+0x130>  // b.pmore
 15c:	add	w4, w4, w7
 160:	add	x2, x2, #0x4
 164:	add	w3, w3, w4, lsl #10
 168:	add	w3, w3, w10
 16c:	lsr	w4, w3, #18
 170:	orr	w4, w4, #0xfffffff0
 174:	sturb	w4, [x2, #-4]
 178:	ubfx	x4, x3, #12, #6
 17c:	orr	w4, w4, #0xffffff80
 180:	sturb	w4, [x2, #-3]
 184:	ubfx	x4, x3, #6, #6
 188:	and	w3, w3, #0x3f
 18c:	orr	w4, w4, #0xffffff80
 190:	orr	w3, w3, #0xffffff80
 194:	sturb	w4, [x2, #-2]
 198:	sturb	w3, [x2, #-1]
 19c:	mov	w4, #0x0                   	// #0
 1a0:	mov	x5, x0
 1a4:	b	f4 <grub_chainloader_boot+0x7c>
 1a8:	mov	x0, x5
 1ac:	strb	w9, [x2], #1
 1b0:	b	19c <grub_chainloader_boot+0x124>
 1b4:	cmp	w3, #0x7f
 1b8:	b.hi	1c4 <grub_chainloader_boot+0x14c>  // b.pmore
 1bc:	strb	w3, [x2], #1
 1c0:	b	1a0 <grub_chainloader_boot+0x128>
 1c4:	cmp	w3, #0x7ff
 1c8:	b.hi	1f0 <grub_chainloader_boot+0x178>  // b.pmore
 1cc:	mov	x5, x2
 1d0:	lsr	w6, w3, #6
 1d4:	orr	w6, w6, #0xffffffc0
 1d8:	and	w3, w3, #0x3f
 1dc:	orr	w3, w3, #0xffffff80
 1e0:	strb	w6, [x5], #2
 1e4:	strb	w3, [x2, #1]
 1e8:	mov	x2, x5
 1ec:	b	1a0 <grub_chainloader_boot+0x128>
 1f0:	add	w5, w3, w7
 1f4:	cmp	w5, #0x3ff
 1f8:	b.ls	23c <grub_chainloader_boot+0x1c4>  // b.plast
 1fc:	add	w5, w3, w8
 200:	cmp	w5, #0x3ff
 204:	b.hi	210 <grub_chainloader_boot+0x198>  // b.pmore
 208:	strb	w9, [x2], #1
 20c:	b	1a0 <grub_chainloader_boot+0x128>
 210:	lsr	w5, w3, #12
 214:	add	x2, x2, #0x3
 218:	orr	w5, w5, #0xffffffe0
 21c:	sturb	w5, [x2, #-3]
 220:	ubfx	x5, x3, #6, #6
 224:	and	w3, w3, #0x3f
 228:	orr	w5, w5, #0xffffff80
 22c:	orr	w3, w3, #0xffffff80
 230:	sturb	w5, [x2, #-2]
 234:	sturb	w3, [x2, #-1]
 238:	b	1a0 <grub_chainloader_boot+0x128>
 23c:	mov	w4, w3
 240:	b	1a0 <grub_chainloader_boot+0x128>
 244:	adrp	x0, 0 <grub_chainloader_unload>
 248:	ldr	x1, [x0]
 24c:	mov	w0, #0x15                  	// #21
 250:	bl	0 <grub_error>
 254:	b	118 <grub_chainloader_boot+0xa0>
	...

0000000000000278 <copy_file_path>:
 278:	stp	x29, x30, [sp, #-48]!
 27c:	mov	x29, sp
 280:	stp	x21, x22, [sp, #32]
 284:	mov	x21, x0
 288:	mov	w0, #0x404                 	// #1028
 28c:	stp	x19, x20, [sp, #16]
 290:	and	x22, x2, #0xffff
 294:	mov	x20, x1
 298:	strh	w0, [x21]
 29c:	ubfiz	x0, x2, #1, #16
 2a0:	bl	0 <grub_malloc>
 2a4:	cbz	x0, 470 <copy_file_path+0x1f8>
 2a8:	mov	x19, x0
 2ac:	mov	x2, x0
 2b0:	mov	x6, x22
 2b4:	mov	w3, #0x0                   	// #0
 2b8:	mov	w5, #0x0                   	// #0
 2bc:	mov	w7, #0xffff                	// #65535
 2c0:	mov	w8, #0xffffd800            	// #-10240
 2c4:	mov	w9, #0xffffdc00            	// #-9216
 2c8:	cmp	x22, #0x0
 2cc:	ccmp	x6, #0x0, #0x4, ne  // ne = any
 2d0:	b.eq	354 <copy_file_path+0xdc>  // b.none
 2d4:	mov	x1, x20
 2d8:	sub	x22, x22, #0x1
 2dc:	ldrb	w4, [x1], #1
 2e0:	cbz	w5, 348 <copy_file_path+0xd0>
 2e4:	and	w0, w4, #0xc0
 2e8:	cmp	w0, #0x80
 2ec:	b.ne	3f8 <copy_file_path+0x180>  // b.any
 2f0:	and	w4, w4, #0x3f
 2f4:	sub	w5, w5, #0x1
 2f8:	orr	w3, w4, w3, lsl #6
 2fc:	cmp	w5, #0x1
 300:	b.ne	330 <copy_file_path+0xb8>  // b.any
 304:	cmp	w3, #0x1f
 308:	b.hi	340 <copy_file_path+0xc8>  // b.pmore
 30c:	mov	x1, x20
 310:	mov	w3, #0x3f                  	// #63
 314:	cmp	x6, #0x1
 318:	b.ne	434 <copy_file_path+0x1bc>  // b.any
 31c:	cmp	w3, w7
 320:	b.hi	354 <copy_file_path+0xdc>  // b.pmore
 324:	sub	x6, x6, #0x1
 328:	strh	w3, [x2], #2
 32c:	b	468 <copy_file_path+0x1f0>
 330:	cmp	w5, #0x2
 334:	b.ne	41c <copy_file_path+0x1a4>  // b.any
 338:	cmp	w3, #0xf
 33c:	b.ls	424 <copy_file_path+0x1ac>  // b.plast
 340:	mov	x20, x1
 344:	b	2c8 <copy_file_path+0x50>
 348:	tbnz	w4, #7, 3a8 <copy_file_path+0x130>
 34c:	mov	w3, w4
 350:	cbnz	w3, 314 <copy_file_path+0x9c>
 354:	sub	x2, x2, x19
 358:	mov	x0, x19
 35c:	mov	w3, #0x5c                  	// #92
 360:	ubfx	w20, w2, #1, #16
 364:	and	x2, x2, #0x1fffe
 368:	add	x1, x19, x2
 36c:	cmp	x1, x0
 370:	b.hi	404 <copy_file_path+0x18c>  // b.pmore
 374:	mov	x1, x19
 378:	add	x0, x21, #0x4
 37c:	bl	0 <grub_memmove>
 380:	add	x0, x21, w20, sxtw #1
 384:	add	w20, w20, #0x3
 388:	ubfiz	w20, w20, #1, #15
 38c:	strh	wzr, [x0, #4]
 390:	mov	x0, x19
 394:	strh	w20, [x21, #2]
 398:	ldp	x19, x20, [sp, #16]
 39c:	ldp	x21, x22, [sp, #32]
 3a0:	ldp	x29, x30, [sp], #48
 3a4:	b	0 <grub_free>
 3a8:	and	w0, w4, #0xe0
 3ac:	cmp	w0, #0xc0
 3b0:	b.ne	3c8 <copy_file_path+0x150>  // b.any
 3b4:	tst	w4, #0x1e
 3b8:	b.eq	428 <copy_file_path+0x1b0>  // b.none
 3bc:	and	w3, w4, #0x1f
 3c0:	mov	w5, #0x1                   	// #1
 3c4:	b	340 <copy_file_path+0xc8>
 3c8:	and	w0, w4, #0xf0
 3cc:	cmp	w0, #0xe0
 3d0:	b.ne	3e0 <copy_file_path+0x168>  // b.any
 3d4:	and	w3, w4, #0xf
 3d8:	mov	w5, #0x2                   	// #2
 3dc:	b	340 <copy_file_path+0xc8>
 3e0:	and	w0, w4, #0xf8
 3e4:	cmp	w0, #0xf0
 3e8:	b.ne	428 <copy_file_path+0x1b0>  // b.any
 3ec:	and	w3, w4, #0x7
 3f0:	mov	w5, #0x3                   	// #3
 3f4:	b	340 <copy_file_path+0xc8>
 3f8:	mov	x1, x20
 3fc:	mov	w3, #0x3f                  	// #63
 400:	b	324 <copy_file_path+0xac>
 404:	ldrh	w4, [x0]
 408:	cmp	w4, #0x2f
 40c:	b.ne	414 <copy_file_path+0x19c>  // b.any
 410:	strh	w3, [x0]
 414:	add	x0, x0, #0x2
 418:	b	36c <copy_file_path+0xf4>
 41c:	cbz	w5, 350 <copy_file_path+0xd8>
 420:	b	3c0 <copy_file_path+0x148>
 424:	mov	x1, x20
 428:	cmp	x6, #0x1
 42c:	b.eq	3fc <copy_file_path+0x184>  // b.none
 430:	mov	w3, #0x3f                  	// #63
 434:	and	w0, w3, #0xffff
 438:	cmp	w3, w7
 43c:	b.ls	324 <copy_file_path+0xac>  // b.plast
 440:	mov	x5, x2
 444:	sub	w4, w3, #0x10, lsl #12
 448:	and	w0, w0, #0x3ff
 44c:	sub	x6, x6, #0x2
 450:	ubfx	x4, x4, #10, #10
 454:	orr	w0, w0, w9
 458:	orr	w4, w4, w8
 45c:	strh	w4, [x5], #4
 460:	strh	w0, [x2, #2]
 464:	mov	x2, x5
 468:	mov	w5, #0x0                   	// #0
 46c:	b	340 <copy_file_path+0xc8>
 470:	ldp	x19, x20, [sp, #16]
 474:	ldp	x21, x22, [sp, #32]
 478:	ldp	x29, x30, [sp], #48
 47c:	ret

0000000000000480 <grub_cmd_chainloader>:
 480:	stp	x29, x30, [sp, #-240]!
 484:	mov	x29, sp
 488:	stp	x19, x20, [sp, #16]
 48c:	stp	x21, x22, [sp, #32]
 490:	stp	x23, x24, [sp, #48]
 494:	stp	x25, x26, [sp, #64]
 498:	stp	x27, x28, [sp, #80]
 49c:	str	x2, [sp, #104]
 4a0:	cbnz	w1, 4d0 <grub_cmd_chainloader+0x50>
 4a4:	adrp	x0, 0 <grub_chainloader_unload>
 4a8:	ldr	x1, [x0]
 4ac:	mov	w0, #0x12                  	// #18
 4b0:	bl	0 <grub_error>
 4b4:	ldp	x19, x20, [sp, #16]
 4b8:	ldp	x21, x22, [sp, #32]
 4bc:	ldp	x23, x24, [sp, #48]
 4c0:	ldp	x25, x26, [sp, #64]
 4c4:	ldp	x27, x28, [sp, #80]
 4c8:	ldp	x29, x30, [sp], #240
 4cc:	ret
 4d0:	ldr	x0, [sp, #104]
 4d4:	mov	w25, w1
 4d8:	ldr	x27, [x0]
 4dc:	adrp	x0, 0 <grub_chainloader_unload>
 4e0:	ldr	x19, [x0]
 4e4:	ldr	x0, [x19, #40]
 4e8:	bl	0 <grub_dl_ref>
 4ec:	str	xzr, [x19]
 4f0:	adrp	x0, 0 <grub_chainloader_unload>
 4f4:	mov	w1, #0x1d                  	// #29
 4f8:	stp	xzr, xzr, [x19, #16]
 4fc:	ldr	x0, [x0]
 500:	ldr	x0, [x0]
 504:	ldr	x28, [x0, #96]
 508:	mov	x0, x27
 50c:	bl	0 <grub_file_open>
 510:	mov	x24, x0
 514:	cbz	x0, 594 <grub_cmd_chainloader+0x114>
 518:	mov	x0, #0x0                   	// #0
 51c:	bl	0 <grub_device_open>
 520:	mov	x23, x0
 524:	cbz	x0, 58c <grub_cmd_chainloader+0x10c>
 528:	ldr	x0, [x0]
 52c:	cbz	x0, 5c8 <grub_cmd_chainloader+0x148>
 530:	bl	0 <grub_efidisk_get_device_handle>
 534:	mov	x21, x0
 538:	cbz	x0, 5d0 <grub_cmd_chainloader+0x150>
 53c:	bl	0 <grub_efi_get_device_path>
 540:	mov	x20, x0
 544:	cbz	x0, 5d0 <grub_cmd_chainloader+0x150>
 548:	mov	w1, #0x29                  	// #41
 54c:	mov	x0, x27
 550:	bl	0 <grub_strchr>
 554:	cmp	x0, #0x0
 558:	csinc	x26, x27, x0, eq  // eq = none
 55c:	mov	w1, #0x2f                  	// #47
 560:	mov	x0, x26
 564:	bl	0 <grub_strrchr>
 568:	mov	x22, x0
 56c:	cbnz	x0, 62c <grub_cmd_chainloader+0x1ac>
 570:	adrp	x0, 0 <grub_chainloader_unload>
 574:	ldr	x1, [x0]
 578:	mov	w0, #0x7                   	// #7
 57c:	bl	0 <grub_error>
 580:	str	xzr, [x19, #24]
 584:	mov	x0, x23
 588:	bl	0 <grub_device_close>
 58c:	mov	x0, x24
 590:	bl	0 <grub_file_close>
 594:	ldr	x0, [x19, #24]
 598:	bl	0 <grub_free>
 59c:	ldr	x0, [x19, #16]
 5a0:	cbz	x0, 5b0 <grub_cmd_chainloader+0x130>
 5a4:	ldr	x1, [x19, #8]
 5a8:	ldr	x2, [x28, #48]
 5ac:	blr	x2
 5b0:	ldr	x0, [x19, #40]
 5b4:	bl	0 <grub_dl_unref>
 5b8:	adrp	x0, 0 <grub_chainloader_unload>
 5bc:	ldr	x0, [x0]
 5c0:	ldr	w0, [x0]
 5c4:	b	4b4 <grub_cmd_chainloader+0x34>
 5c8:	ldr	x0, [x23, #8]
 5cc:	cbnz	x0, 5e4 <grub_cmd_chainloader+0x164>
 5d0:	adrp	x0, 0 <grub_chainloader_unload>
 5d4:	ldr	x1, [x0]
 5d8:	mov	w0, #0xd                   	// #13
 5dc:	bl	0 <grub_error>
 5e0:	b	584 <grub_cmd_chainloader+0x104>
 5e4:	ldr	x0, [x0]
 5e8:	cbz	x0, 5d0 <grub_cmd_chainloader+0x150>
 5ec:	add	x1, sp, #0xb0
 5f0:	bl	0 <grub_net_resolve_address>
 5f4:	cbnz	w0, 584 <grub_cmd_chainloader+0x104>
 5f8:	ldp	x0, x1, [sp, #176]
 5fc:	stp	x0, x1, [sp, #128]
 600:	add	x2, sp, #0xa8
 604:	ldp	x0, x1, [sp, #192]
 608:	stp	x0, x1, [sp, #144]
 60c:	add	x1, sp, #0xd0
 610:	add	x0, sp, #0x80
 614:	bl	0 <grub_net_route_address>
 618:	cbnz	w0, 584 <grub_cmd_chainloader+0x104>
 61c:	ldr	x0, [sp, #168]
 620:	ldr	x0, [x0, #24]
 624:	bl	0 <grub_efinet_get_device_handle>
 628:	b	534 <grub_cmd_chainloader+0xb4>
 62c:	mov	x4, x20
 630:	mov	x2, #0x0                   	// #0
 634:	ldrb	w0, [x4]
 638:	ldrh	w1, [x4, #2]
 63c:	and	w0, w0, #0x7f
 640:	add	x2, x2, x1
 644:	cmp	w0, #0x7f
 648:	b.ne	658 <grub_cmd_chainloader+0x1d8>  // b.any
 64c:	ldrb	w0, [x4, #1]
 650:	cmp	w0, #0xff
 654:	b.eq	660 <grub_cmd_chainloader+0x1e0>  // b.none
 658:	add	x4, x4, x1
 65c:	b	634 <grub_cmd_chainloader+0x1b4>
 660:	mov	x0, x26
 664:	stp	x2, x4, [sp, #112]
 668:	bl	0 <grub_strlen>
 66c:	ldr	x2, [sp, #112]
 670:	add	x0, x2, x0, lsl #1
 674:	add	x0, x0, #0xc
 678:	bl	0 <grub_malloc>
 67c:	str	x0, [x19, #24]
 680:	cbz	x0, 584 <grub_cmd_chainloader+0x104>
 684:	ldr	x2, [sp, #112]
 688:	mov	x1, x20
 68c:	bl	0 <grub_memmove>
 690:	ldr	x4, [sp, #120]
 694:	sub	x4, x4, x20
 698:	ldr	x20, [x19, #24]
 69c:	add	x20, x20, x4
 6a0:	mov	x0, x20
 6a4:	bl	0 <grub_efi_print_device_path>
 6a8:	sub	x2, x22, x26
 6ac:	mov	x1, x26
 6b0:	mov	x0, x20
 6b4:	bl	278 <copy_file_path>
 6b8:	ldrh	w0, [x20, #2]
 6bc:	add	x22, x22, #0x1
 6c0:	add	x20, x20, x0
 6c4:	mov	x0, x22
 6c8:	bl	0 <grub_strlen>
 6cc:	mov	w2, w0
 6d0:	mov	x1, x22
 6d4:	mov	x0, x20
 6d8:	bl	278 <copy_file_path>
 6dc:	ldrh	w0, [x20, #2]
 6e0:	mov	w1, #0xff7f                	// #65407
 6e4:	movk	w1, #0x4, lsl #16
 6e8:	str	w1, [x20, x0]
 6ec:	ldr	x0, [x19, #24]
 6f0:	cbz	x0, 584 <grub_cmd_chainloader+0x104>
 6f4:	adrp	x0, 0 <grub_chainloader_unload>
 6f8:	ldr	x0, [x0]
 6fc:	bl	0 <grub_printf>
 700:	ldr	x0, [x19, #24]
 704:	bl	0 <grub_efi_print_device_path>
 708:	ldr	x20, [x24, #64]
 70c:	cbnz	x20, 728 <grub_cmd_chainloader+0x2a8>
 710:	adrp	x0, 0 <grub_chainloader_unload>
 714:	mov	x2, x27
 718:	ldr	x1, [x0]
 71c:	mov	w0, #0x15                  	// #21
 720:	bl	0 <grub_error>
 724:	b	584 <grub_cmd_chainloader+0x104>
 728:	ldr	x4, [x28, #40]
 72c:	add	x2, x20, #0xfff
 730:	add	x3, x19, #0x10
 734:	mov	w1, #0x1                   	// #1
 738:	lsr	x2, x2, #12
 73c:	mov	w0, #0x0                   	// #0
 740:	str	x2, [x19, #8]
 744:	blr	x4
 748:	cbz	x0, 780 <grub_cmd_chainloader+0x300>
 74c:	adrp	x0, 0 <grub_chainloader_unload>
 750:	ldr	w4, [x19, #8]
 754:	mov	w1, #0x11f                 	// #287
 758:	ldr	x3, [x0]
 75c:	adrp	x0, 0 <grub_chainloader_unload>
 760:	ldr	x2, [x0]
 764:	adrp	x0, 0 <grub_chainloader_unload>
 768:	ldr	x0, [x0]
 76c:	bl	0 <grub_real_dprintf>
 770:	adrp	x0, 0 <grub_chainloader_unload>
 774:	ldr	x1, [x0]
 778:	mov	w0, #0x3                   	// #3
 77c:	b	5dc <grub_cmd_chainloader+0x15c>
 780:	ldr	x22, [x19, #16]
 784:	mov	x2, x20
 788:	mov	x0, x24
 78c:	mov	x1, x22
 790:	bl	0 <grub_file_read>
 794:	cmp	x20, x0
 798:	b.eq	7b0 <grub_cmd_chainloader+0x330>  // b.none
 79c:	adrp	x0, 0 <grub_chainloader_unload>
 7a0:	ldr	x0, [x0]
 7a4:	ldr	w0, [x0]
 7a8:	cbnz	w0, 584 <grub_cmd_chainloader+0x104>
 7ac:	b	710 <grub_cmd_chainloader+0x290>
 7b0:	adrp	x0, 0 <grub_chainloader_unload>
 7b4:	mov	x5, x19
 7b8:	ldr	x2, [x19, #24]
 7bc:	mov	x4, x20
 7c0:	ldr	x0, [x0]
 7c4:	mov	x3, x22
 7c8:	ldr	x6, [x28, #200]
 7cc:	ldr	x1, [x0]
 7d0:	mov	w0, #0x0                   	// #0
 7d4:	blr	x6
 7d8:	cbz	x0, 808 <grub_cmd_chainloader+0x388>
 7dc:	mov	x1, #0x9                   	// #9
 7e0:	movk	x1, #0x8000, lsl #48
 7e4:	cmp	x0, x1
 7e8:	b.ne	7f8 <grub_cmd_chainloader+0x378>  // b.any
 7ec:	adrp	x0, 0 <grub_chainloader_unload>
 7f0:	ldr	x1, [x0]
 7f4:	b	778 <grub_cmd_chainloader+0x2f8>
 7f8:	adrp	x0, 0 <grub_chainloader_unload>
 7fc:	ldr	x1, [x0]
 800:	mov	w0, #0x15                  	// #21
 804:	b	5dc <grub_cmd_chainloader+0x15c>
 808:	ldr	x0, [x19]
 80c:	bl	0 <grub_efi_get_loaded_image>
 810:	mov	x20, x0
 814:	cbnz	x0, 824 <grub_cmd_chainloader+0x3a4>
 818:	adrp	x0, 0 <grub_chainloader_unload>
 81c:	ldr	x1, [x0]
 820:	b	800 <grub_cmd_chainloader+0x380>
 824:	str	x21, [x0, #24]
 828:	cmp	w25, #0x1
 82c:	b.le	8ac <grub_cmd_chainloader+0x42c>
 830:	mov	x22, #0x1                   	// #1
 834:	mov	w21, #0x0                   	// #0
 838:	ldr	x0, [sp, #104]
 83c:	ldr	x0, [x0, x22, lsl #3]
 840:	add	x22, x22, #0x1
 844:	bl	0 <grub_strlen>
 848:	add	x0, x0, #0x1
 84c:	add	w21, w21, w0
 850:	cmp	w25, w22
 854:	b.gt	838 <grub_cmd_chainloader+0x3b8>
 858:	lsl	w21, w21, #1
 85c:	sxtw	x0, w21
 860:	bl	0 <grub_malloc>
 864:	str	x0, [x19, #32]
 868:	cbz	x0, 584 <grub_cmd_chainloader+0x104>
 86c:	mov	x1, x0
 870:	mov	x2, #0x1                   	// #1
 874:	mov	w6, #0x20                  	// #32
 878:	ldr	x3, [sp, #104]
 87c:	ldr	x4, [x3, x2, lsl #3]
 880:	mov	x3, x1
 884:	ldrb	w5, [x4]
 888:	add	x1, x1, #0x2
 88c:	cbnz	w5, 8dc <grub_cmd_chainloader+0x45c>
 890:	strh	w6, [x3]
 894:	add	x2, x2, #0x1
 898:	cmp	w25, w2
 89c:	b.gt	878 <grub_cmd_chainloader+0x3f8>
 8a0:	strh	wzr, [x3]
 8a4:	str	w21, [x20, #48]
 8a8:	str	x0, [x20, #56]
 8ac:	mov	x0, x24
 8b0:	bl	0 <grub_file_close>
 8b4:	mov	x0, x23
 8b8:	bl	0 <grub_device_close>
 8bc:	adrp	x0, 0 <grub_chainloader_unload>
 8c0:	mov	w2, #0x0                   	// #0
 8c4:	ldr	x1, [x0]
 8c8:	adrp	x0, 0 <grub_chainloader_unload>
 8cc:	ldr	x0, [x0]
 8d0:	bl	0 <grub_loader_set>
 8d4:	mov	w0, #0x0                   	// #0
 8d8:	b	4b4 <grub_cmd_chainloader+0x34>
 8dc:	add	x4, x4, #0x1
 8e0:	sturh	w5, [x1, #-2]
 8e4:	b	880 <grub_cmd_chainloader+0x400>
	...

0000000000000978 <grub_mod_init>:
 978:	stp	x29, x30, [sp, #-32]!
 97c:	mov	w4, #0x0                   	// #0
 980:	mov	x2, #0x0                   	// #0
 984:	mov	x29, sp
 988:	str	x19, [sp, #16]
 98c:	mov	x19, x0
 990:	adrp	x0, 0 <grub_chainloader_unload>
 994:	ldr	x3, [x0]
 998:	adrp	x0, 0 <grub_chainloader_unload>
 99c:	ldr	x1, [x0]
 9a0:	adrp	x0, 0 <grub_chainloader_unload>
 9a4:	ldr	x0, [x0]
 9a8:	bl	0 <grub_register_command_prio>
 9ac:	adrp	x1, 0 <grub_chainloader_unload>
 9b0:	ldr	x1, [x1]
 9b4:	stp	x19, x0, [x1, #40]
 9b8:	ldr	x19, [sp, #16]
 9bc:	ldp	x29, x30, [sp], #32
 9c0:	ret
 9c4:	nop
	...

00000000000009e8 <grub_mod_fini>:
 9e8:	adrp	x0, 0 <grub_chainloader_unload>
 9ec:	ldr	x0, [x0]
 9f0:	ldr	x0, [x0, #48]
 9f4:	b	0 <grub_unregister_command>
	...
