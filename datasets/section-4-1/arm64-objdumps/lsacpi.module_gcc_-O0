
/home/anony/Documents/anonymous--anonymous/pizzolotto-binaries//lsacpi.module_gcc_-O0:     file format elf64-littleaarch64


Disassembly of section .text:

0000000000000000 <print_strn>:
   0:	stp	x29, x30, [sp, #-32]!
   4:	mov	x29, sp
   8:	str	x0, [sp, #24]
   c:	str	x1, [sp, #16]
  10:	b	48 <print_strn+0x48>
  14:	ldr	x0, [sp, #24]
  18:	ldrb	w0, [x0]
  1c:	mov	w1, w0
  20:	adrp	x0, 0 <print_strn>
  24:	add	x0, x0, #0x0
  28:	ldr	x0, [x0]
  2c:	bl	0 <grub_printf>
  30:	ldr	x0, [sp, #24]
  34:	add	x0, x0, #0x1
  38:	str	x0, [sp, #24]
  3c:	ldr	x0, [sp, #16]
  40:	sub	x0, x0, #0x1
  44:	str	x0, [sp, #16]
  48:	ldr	x0, [sp, #24]
  4c:	ldrb	w0, [x0]
  50:	cmp	w0, #0x0
  54:	b.eq	64 <print_strn+0x64>  // b.none
  58:	ldr	x0, [sp, #16]
  5c:	cmp	x0, #0x0
  60:	b.ne	14 <print_strn+0x14>  // b.any
  64:	ldr	x0, [sp, #16]
  68:	add	x0, x0, #0x1
  6c:	str	x0, [sp, #16]
  70:	b	90 <print_strn+0x90>
  74:	adrp	x0, 0 <print_strn>
  78:	add	x0, x0, #0x0
  7c:	ldr	x0, [x0]
  80:	bl	0 <grub_printf>
  84:	ldr	x0, [sp, #16]
  88:	sub	x0, x0, #0x1
  8c:	str	x0, [sp, #16]
  90:	ldr	x0, [sp, #16]
  94:	cmp	x0, #0x0
  98:	b.ne	74 <print_strn+0x74>  // b.any
  9c:	nop
  a0:	nop
  a4:	ldp	x29, x30, [sp], #32
  a8:	ret
  ac:	nop
	...

00000000000000c0 <disp_acpi_table>:
  c0:	stp	x29, x30, [sp, #-64]!
  c4:	mov	x29, sp
  c8:	stp	x19, x20, [sp, #16]
  cc:	str	x21, [sp, #32]
  d0:	str	x0, [sp, #56]
  d4:	ldr	x0, [sp, #56]
  d8:	mov	x1, #0x4                   	// #4
  dc:	bl	0 <print_strn>
  e0:	ldr	x0, [sp, #56]
  e4:	ldr	w19, [x0, #4]
  e8:	ldr	x0, [sp, #56]
  ec:	ldrb	w0, [x0, #8]
  f0:	mov	w20, w0
  f4:	ldr	x0, [sp, #56]
  f8:	ldrb	w0, [x0, #9]
  fc:	mov	w21, w0
 100:	ldr	x0, [sp, #56]
 104:	ldr	w0, [x0, #4]
 108:	mov	w0, w0
 10c:	mov	x1, x0
 110:	ldr	x0, [sp, #56]
 114:	bl	0 <grub_byte_checksum>
 118:	and	w0, w0, #0xff
 11c:	cmp	w0, #0x0
 120:	b.ne	134 <disp_acpi_table+0x74>  // b.any
 124:	adrp	x0, 0 <print_strn>
 128:	add	x0, x0, #0x0
 12c:	ldr	x0, [x0]
 130:	b	140 <disp_acpi_table+0x80>
 134:	adrp	x0, 0 <print_strn>
 138:	add	x0, x0, #0x0
 13c:	ldr	x0, [x0]
 140:	mov	x4, x0
 144:	mov	w3, w21
 148:	mov	w2, w20
 14c:	mov	w1, w19
 150:	adrp	x0, 0 <print_strn>
 154:	add	x0, x0, #0x0
 158:	ldr	x0, [x0]
 15c:	bl	0 <grub_printf>
 160:	ldr	x0, [sp, #56]
 164:	add	x0, x0, #0xa
 168:	mov	x1, #0x6                   	// #6
 16c:	bl	0 <print_strn>
 170:	ldr	x0, [sp, #56]
 174:	add	x0, x0, #0x10
 178:	mov	x1, #0x8                   	// #8
 17c:	bl	0 <print_strn>
 180:	ldr	x0, [sp, #56]
 184:	ldr	w0, [x0, #24]
 188:	mov	w1, w0
 18c:	adrp	x0, 0 <print_strn>
 190:	add	x0, x0, #0x0
 194:	ldr	x0, [x0]
 198:	bl	0 <grub_printf>
 19c:	ldr	x0, [sp, #56]
 1a0:	add	x0, x0, #0x1c
 1a4:	mov	x1, #0x4                   	// #4
 1a8:	bl	0 <print_strn>
 1ac:	ldr	x0, [sp, #56]
 1b0:	ldr	w0, [x0, #32]
 1b4:	mov	w1, w0
 1b8:	adrp	x0, 0 <print_strn>
 1bc:	add	x0, x0, #0x0
 1c0:	ldr	x0, [x0]
 1c4:	bl	0 <grub_printf>
 1c8:	nop
 1cc:	ldp	x19, x20, [sp, #16]
 1d0:	ldr	x21, [sp, #32]
 1d4:	ldp	x29, x30, [sp], #64
 1d8:	ret
 1dc:	nop
	...

0000000000000208 <disp_madt_table>:
 208:	stp	x29, x30, [sp, #-128]!
 20c:	mov	x29, sp
 210:	str	x19, [sp, #16]
 214:	str	x0, [sp, #40]
 218:	ldr	x0, [sp, #40]
 21c:	bl	c0 <disp_acpi_table>
 220:	ldr	x0, [sp, #40]
 224:	ldr	w1, [x0, #36]
 228:	ldr	x0, [sp, #40]
 22c:	ldr	w0, [x0, #40]
 230:	mov	w2, w0
 234:	adrp	x0, 0 <print_strn>
 238:	add	x0, x0, #0x0
 23c:	ldr	x0, [x0]
 240:	bl	0 <grub_printf>
 244:	ldr	x0, [sp, #40]
 248:	ldr	w0, [x0, #4]
 24c:	sub	w0, w0, #0x2c
 250:	str	w0, [sp, #116]
 254:	ldr	x0, [sp, #40]
 258:	add	x0, x0, #0x2c
 25c:	str	x0, [sp, #120]
 260:	b	838 <disp_madt_table+0x630>
 264:	ldr	x0, [sp, #120]
 268:	ldrb	w0, [x0]
 26c:	cmp	w0, #0x8
 270:	b.eq	6d0 <disp_madt_table+0x4c8>  // b.none
 274:	cmp	w0, #0x8
 278:	b.gt	7a0 <disp_madt_table+0x598>
 27c:	cmp	w0, #0x7
 280:	b.eq	570 <disp_madt_table+0x368>  // b.none
 284:	cmp	w0, #0x7
 288:	b.gt	7a0 <disp_madt_table+0x598>
 28c:	cmp	w0, #0x6
 290:	b.eq	4d0 <disp_madt_table+0x2c8>  // b.none
 294:	cmp	w0, #0x6
 298:	b.gt	7a0 <disp_madt_table+0x598>
 29c:	cmp	w0, #0x4
 2a0:	b.eq	460 <disp_madt_table+0x258>  // b.none
 2a4:	cmp	w0, #0x4
 2a8:	b.gt	7a0 <disp_madt_table+0x598>
 2ac:	cmp	w0, #0x2
 2b0:	b.eq	3e0 <disp_madt_table+0x1d8>  // b.none
 2b4:	cmp	w0, #0x2
 2b8:	b.gt	7a0 <disp_madt_table+0x598>
 2bc:	cmp	w0, #0x0
 2c0:	b.eq	2d0 <disp_madt_table+0xc8>  // b.none
 2c4:	cmp	w0, #0x1
 2c8:	b.eq	340 <disp_madt_table+0x138>  // b.none
 2cc:	b	7a0 <disp_madt_table+0x598>
 2d0:	ldr	x0, [sp, #120]
 2d4:	str	x0, [sp, #56]
 2d8:	ldr	x0, [sp, #56]
 2dc:	ldrb	w0, [x0, #2]
 2e0:	mov	w1, w0
 2e4:	ldr	x0, [sp, #56]
 2e8:	ldrb	w0, [x0, #3]
 2ec:	mov	w2, w0
 2f0:	ldr	x0, [sp, #56]
 2f4:	ldr	w0, [x0, #4]
 2f8:	mov	w3, w0
 2fc:	adrp	x0, 0 <print_strn>
 300:	add	x0, x0, #0x0
 304:	ldr	x0, [x0]
 308:	bl	0 <grub_printf>
 30c:	ldr	x0, [sp, #56]
 310:	ldrb	w0, [x0, #1]
 314:	cmp	w0, #0x8
 318:	b.eq	7dc <disp_madt_table+0x5d4>  // b.none
 31c:	ldr	x0, [sp, #56]
 320:	ldrb	w0, [x0, #1]
 324:	mov	w2, #0x8                   	// #8
 328:	mov	w1, w0
 32c:	adrp	x0, 0 <print_strn>
 330:	add	x0, x0, #0x0
 334:	ldr	x0, [x0]
 338:	bl	0 <grub_printf>
 33c:	b	7dc <disp_madt_table+0x5d4>
 340:	ldr	x0, [sp, #120]
 344:	str	x0, [sp, #64]
 348:	ldr	x0, [sp, #64]
 34c:	ldrb	w0, [x0, #2]
 350:	mov	w4, w0
 354:	ldr	x0, [sp, #64]
 358:	ldr	w1, [x0, #4]
 35c:	ldr	x0, [sp, #64]
 360:	ldr	w0, [x0, #8]
 364:	mov	w3, w0
 368:	mov	w2, w1
 36c:	mov	w1, w4
 370:	adrp	x0, 0 <print_strn>
 374:	add	x0, x0, #0x0
 378:	ldr	x0, [x0]
 37c:	bl	0 <grub_printf>
 380:	ldr	x0, [sp, #64]
 384:	ldrb	w0, [x0, #1]
 388:	cmp	w0, #0xc
 38c:	b.eq	3b0 <disp_madt_table+0x1a8>  // b.none
 390:	ldr	x0, [sp, #64]
 394:	ldrb	w0, [x0, #1]
 398:	mov	w2, #0xc                   	// #12
 39c:	mov	w1, w0
 3a0:	adrp	x0, 0 <print_strn>
 3a4:	add	x0, x0, #0x0
 3a8:	ldr	x0, [x0]
 3ac:	bl	0 <grub_printf>
 3b0:	ldr	x0, [sp, #64]
 3b4:	ldrb	w0, [x0, #3]
 3b8:	cmp	w0, #0x0
 3bc:	b.eq	7e4 <disp_madt_table+0x5dc>  // b.none
 3c0:	ldr	x0, [sp, #64]
 3c4:	ldrb	w0, [x0, #3]
 3c8:	mov	w1, w0
 3cc:	adrp	x0, 0 <print_strn>
 3d0:	add	x0, x0, #0x0
 3d4:	ldr	x0, [x0]
 3d8:	bl	0 <grub_printf>
 3dc:	b	7e4 <disp_madt_table+0x5dc>
 3e0:	ldr	x0, [sp, #120]
 3e4:	str	x0, [sp, #72]
 3e8:	ldr	x0, [sp, #72]
 3ec:	ldrb	w0, [x0, #2]
 3f0:	mov	w5, w0
 3f4:	ldr	x0, [sp, #72]
 3f8:	ldrb	w0, [x0, #3]
 3fc:	mov	w2, w0
 400:	ldr	x0, [sp, #72]
 404:	ldr	w1, [x0, #4]
 408:	ldr	x0, [sp, #72]
 40c:	ldrh	w0, [x0, #8]
 410:	mov	w4, w0
 414:	mov	w3, w1
 418:	mov	w1, w5
 41c:	adrp	x0, 0 <print_strn>
 420:	add	x0, x0, #0x0
 424:	ldr	x0, [x0]
 428:	bl	0 <grub_printf>
 42c:	ldr	x0, [sp, #72]
 430:	ldrb	w0, [x0, #1]
 434:	cmp	w0, #0xa
 438:	b.eq	7ec <disp_madt_table+0x5e4>  // b.none
 43c:	ldr	x0, [sp, #72]
 440:	ldrb	w0, [x0, #1]
 444:	mov	w2, #0xa                   	// #10
 448:	mov	w1, w0
 44c:	adrp	x0, 0 <print_strn>
 450:	add	x0, x0, #0x0
 454:	ldr	x0, [x0]
 458:	bl	0 <grub_printf>
 45c:	b	7ec <disp_madt_table+0x5e4>
 460:	ldr	x0, [sp, #120]
 464:	str	x0, [sp, #80]
 468:	ldr	x0, [sp, #80]
 46c:	ldrb	w0, [x0, #2]
 470:	mov	w1, w0
 474:	ldr	x0, [sp, #80]
 478:	ldurh	w0, [x0, #3]
 47c:	mov	w2, w0
 480:	ldr	x0, [sp, #80]
 484:	ldrb	w0, [x0, #5]
 488:	mov	w3, w0
 48c:	adrp	x0, 0 <print_strn>
 490:	add	x0, x0, #0x0
 494:	ldr	x0, [x0]
 498:	bl	0 <grub_printf>
 49c:	ldr	x0, [sp, #80]
 4a0:	ldrb	w0, [x0, #1]
 4a4:	cmp	w0, #0x6
 4a8:	b.eq	7f4 <disp_madt_table+0x5ec>  // b.none
 4ac:	ldr	x0, [sp, #80]
 4b0:	ldrb	w0, [x0, #1]
 4b4:	mov	w2, #0x6                   	// #6
 4b8:	mov	w1, w0
 4bc:	adrp	x0, 0 <print_strn>
 4c0:	add	x0, x0, #0x0
 4c4:	ldr	x0, [x0]
 4c8:	bl	0 <grub_printf>
 4cc:	b	7f4 <disp_madt_table+0x5ec>
 4d0:	ldr	x0, [sp, #120]
 4d4:	str	x0, [sp, #88]
 4d8:	ldr	x0, [sp, #88]
 4dc:	ldrb	w0, [x0, #2]
 4e0:	mov	w4, w0
 4e4:	ldr	x0, [sp, #88]
 4e8:	ldr	w1, [x0, #4]
 4ec:	ldr	x0, [sp, #88]
 4f0:	ldr	x0, [x0, #8]
 4f4:	mov	x3, x0
 4f8:	mov	w2, w1
 4fc:	mov	w1, w4
 500:	adrp	x0, 0 <print_strn>
 504:	add	x0, x0, #0x0
 508:	ldr	x0, [x0]
 50c:	bl	0 <grub_printf>
 510:	ldr	x0, [sp, #88]
 514:	ldrb	w0, [x0, #1]
 518:	cmp	w0, #0x10
 51c:	b.eq	540 <disp_madt_table+0x338>  // b.none
 520:	ldr	x0, [sp, #88]
 524:	ldrb	w0, [x0, #1]
 528:	mov	w2, #0x10                  	// #16
 52c:	mov	w1, w0
 530:	adrp	x0, 0 <print_strn>
 534:	add	x0, x0, #0x0
 538:	ldr	x0, [x0]
 53c:	bl	0 <grub_printf>
 540:	ldr	x0, [sp, #88]
 544:	ldrb	w0, [x0, #3]
 548:	cmp	w0, #0x0
 54c:	b.eq	7fc <disp_madt_table+0x5f4>  // b.none
 550:	ldr	x0, [sp, #88]
 554:	ldrb	w0, [x0, #3]
 558:	mov	w1, w0
 55c:	adrp	x0, 0 <print_strn>
 560:	add	x0, x0, #0x0
 564:	ldr	x0, [x0]
 568:	bl	0 <grub_printf>
 56c:	b	7fc <disp_madt_table+0x5f4>
 570:	ldr	x0, [sp, #120]
 574:	str	x0, [sp, #96]
 578:	ldr	x0, [sp, #96]
 57c:	ldrb	w0, [x0, #2]
 580:	mov	w1, w0
 584:	ldr	x0, [sp, #96]
 588:	ldrb	w0, [x0, #3]
 58c:	mov	w2, w0
 590:	ldr	x0, [sp, #96]
 594:	ldrb	w0, [x0, #4]
 598:	mov	w3, w0
 59c:	ldr	x0, [sp, #96]
 5a0:	ldr	w0, [x0, #8]
 5a4:	mov	w4, w0
 5a8:	adrp	x0, 0 <print_strn>
 5ac:	add	x0, x0, #0x0
 5b0:	ldr	x0, [x0]
 5b4:	bl	0 <grub_printf>
 5b8:	ldr	x0, [sp, #96]
 5bc:	ldr	w0, [x0, #8]
 5c0:	and	w0, w0, #0x1
 5c4:	cmp	w0, #0x0
 5c8:	b.eq	5e0 <disp_madt_table+0x3d8>  // b.none
 5cc:	adrp	x0, 0 <print_strn>
 5d0:	add	x0, x0, #0x0
 5d4:	ldr	x0, [x0]
 5d8:	bl	0 <grub_printf>
 5dc:	b	5f0 <disp_madt_table+0x3e8>
 5e0:	adrp	x0, 0 <print_strn>
 5e4:	add	x0, x0, #0x0
 5e8:	ldr	x0, [x0]
 5ec:	bl	0 <grub_printf>
 5f0:	ldr	x0, [sp, #120]
 5f4:	ldrb	w0, [x0, #1]
 5f8:	cmp	w0, #0x10
 5fc:	b.ls	624 <disp_madt_table+0x41c>  // b.plast
 600:	ldr	x0, [sp, #96]
 604:	ldr	w1, [x0, #12]
 608:	ldr	x0, [sp, #96]
 60c:	add	x0, x0, #0x10
 610:	mov	x2, x0
 614:	adrp	x0, 0 <print_strn>
 618:	add	x0, x0, #0x0
 61c:	ldr	x0, [x0]
 620:	bl	0 <grub_printf>
 624:	ldr	x0, [sp, #96]
 628:	ldrb	w0, [x0, #1]
 62c:	and	x19, x0, #0xff
 630:	ldr	x0, [sp, #96]
 634:	add	x0, x0, #0x10
 638:	bl	0 <grub_strlen>
 63c:	add	x0, x0, #0x11
 640:	cmp	x19, x0
 644:	b.eq	668 <disp_madt_table+0x460>  // b.none
 648:	ldr	x0, [sp, #96]
 64c:	ldrb	w0, [x0, #1]
 650:	mov	w2, #0x10                  	// #16
 654:	mov	w1, w0
 658:	adrp	x0, 0 <print_strn>
 65c:	add	x0, x0, #0x0
 660:	ldr	x0, [x0]
 664:	bl	0 <grub_printf>
 668:	ldr	x0, [sp, #96]
 66c:	ldrb	w0, [x0, #5]
 670:	cmp	w0, #0x0
 674:	b.ne	698 <disp_madt_table+0x490>  // b.any
 678:	ldr	x0, [sp, #96]
 67c:	ldrb	w0, [x0, #6]
 680:	cmp	w0, #0x0
 684:	b.ne	698 <disp_madt_table+0x490>  // b.any
 688:	ldr	x0, [sp, #96]
 68c:	ldrb	w0, [x0, #7]
 690:	cmp	w0, #0x0
 694:	b.eq	804 <disp_madt_table+0x5fc>  // b.none
 698:	ldr	x0, [sp, #96]
 69c:	ldrb	w0, [x0, #5]
 6a0:	mov	w1, w0
 6a4:	ldr	x0, [sp, #96]
 6a8:	ldrb	w0, [x0, #6]
 6ac:	mov	w2, w0
 6b0:	ldr	x0, [sp, #96]
 6b4:	ldrb	w0, [x0, #7]
 6b8:	mov	w3, w0
 6bc:	adrp	x0, 0 <print_strn>
 6c0:	add	x0, x0, #0x0
 6c4:	ldr	x0, [x0]
 6c8:	bl	0 <grub_printf>
 6cc:	b	804 <disp_madt_table+0x5fc>
 6d0:	ldr	x0, [sp, #120]
 6d4:	str	x0, [sp, #104]
 6d8:	ldr	x0, [sp, #104]
 6dc:	ldrh	w0, [x0, #2]
 6e0:	mov	w6, w0
 6e4:	ldr	x0, [sp, #104]
 6e8:	ldrb	w0, [x0, #4]
 6ec:	mov	w2, w0
 6f0:	ldr	x0, [sp, #104]
 6f4:	ldrb	w0, [x0, #4]
 6f8:	cmp	w0, #0x3
 6fc:	b.hi	724 <disp_madt_table+0x51c>  // b.pmore
 700:	ldr	x0, [sp, #104]
 704:	ldrb	w0, [x0, #4]
 708:	mov	w1, w0
 70c:	adrp	x0, 0 <print_strn>
 710:	add	x0, x0, #0x0
 714:	ldr	x0, [x0]
 718:	sxtw	x1, w1
 71c:	ldr	x0, [x0, x1, lsl #3]
 720:	b	730 <disp_madt_table+0x528>
 724:	adrp	x0, 0 <print_strn>
 728:	add	x0, x0, #0x0
 72c:	ldr	x0, [x0]
 730:	ldr	x1, [sp, #104]
 734:	ldrb	w1, [x1, #5]
 738:	mov	w3, w1
 73c:	ldr	x1, [sp, #104]
 740:	ldrb	w1, [x1, #6]
 744:	mov	w5, w1
 748:	mov	w4, w3
 74c:	mov	x3, x0
 750:	mov	w1, w6
 754:	adrp	x0, 0 <print_strn>
 758:	add	x0, x0, #0x0
 75c:	ldr	x0, [x0]
 760:	bl	0 <grub_printf>
 764:	ldr	x0, [sp, #104]
 768:	ldrb	w0, [x0, #7]
 76c:	mov	w4, w0
 770:	ldr	x0, [sp, #104]
 774:	ldr	w1, [x0, #8]
 778:	ldr	x0, [sp, #104]
 77c:	ldr	w0, [x0, #12]
 780:	mov	w3, w0
 784:	mov	w2, w1
 788:	mov	w1, w4
 78c:	adrp	x0, 0 <print_strn>
 790:	add	x0, x0, #0x0
 794:	ldr	x0, [x0]
 798:	bl	0 <grub_printf>
 79c:	b	808 <disp_madt_table+0x600>
 7a0:	ldr	x0, [sp, #120]
 7a4:	ldrb	w0, [x0]
 7a8:	mov	w1, w0
 7ac:	ldr	x0, [sp, #120]
 7b0:	ldrb	w0, [x0, #1]
 7b4:	mov	w2, w0
 7b8:	adrp	x0, 0 <print_strn>
 7bc:	add	x0, x0, #0x0
 7c0:	ldr	x0, [x0]
 7c4:	bl	0 <grub_printf>
 7c8:	adrp	x0, 0 <print_strn>
 7cc:	add	x0, x0, #0x0
 7d0:	ldr	x0, [x0]
 7d4:	bl	0 <grub_printf>
 7d8:	b	808 <disp_madt_table+0x600>
 7dc:	nop
 7e0:	b	808 <disp_madt_table+0x600>
 7e4:	nop
 7e8:	b	808 <disp_madt_table+0x600>
 7ec:	nop
 7f0:	b	808 <disp_madt_table+0x600>
 7f4:	nop
 7f8:	b	808 <disp_madt_table+0x600>
 7fc:	nop
 800:	b	808 <disp_madt_table+0x600>
 804:	nop
 808:	ldr	x0, [sp, #120]
 80c:	ldrb	w0, [x0, #1]
 810:	mov	w1, w0
 814:	ldr	w0, [sp, #116]
 818:	sub	w0, w0, w1
 81c:	str	w0, [sp, #116]
 820:	ldr	x0, [sp, #120]
 824:	ldrb	w0, [x0, #1]
 828:	and	x0, x0, #0xff
 82c:	ldr	x1, [sp, #120]
 830:	add	x0, x1, x0
 834:	str	x0, [sp, #120]
 838:	ldr	w0, [sp, #116]
 83c:	cmp	w0, #0x0
 840:	b.ne	264 <disp_madt_table+0x5c>  // b.any
 844:	nop
 848:	nop
 84c:	ldr	x19, [sp, #16]
 850:	ldp	x29, x30, [sp], #128
 854:	ret
	...

00000000000008f0 <disp_acpi_xsdt_table>:
 8f0:	stp	x29, x30, [sp, #-48]!
 8f4:	mov	x29, sp
 8f8:	str	x0, [sp, #24]
 8fc:	ldr	x0, [sp, #24]
 900:	bl	c0 <disp_acpi_table>
 904:	ldr	x0, [sp, #24]
 908:	ldr	w0, [x0, #4]
 90c:	sub	w0, w0, #0x24
 910:	str	w0, [sp, #44]
 914:	ldr	x0, [sp, #24]
 918:	add	x0, x0, #0x24
 91c:	str	x0, [sp, #32]
 920:	b	994 <disp_acpi_xsdt_table+0xa4>
 924:	ldr	x0, [sp, #32]
 928:	ldr	x0, [x0]
 92c:	str	x0, [sp, #24]
 930:	ldr	x0, [sp, #24]
 934:	cmp	x0, #0x0
 938:	b.eq	978 <disp_acpi_xsdt_table+0x88>  // b.none
 93c:	ldr	x3, [sp, #24]
 940:	mov	x2, #0x4                   	// #4
 944:	adrp	x0, 0 <print_strn>
 948:	add	x0, x0, #0x0
 94c:	ldr	x1, [x0]
 950:	mov	x0, x3
 954:	bl	0 <grub_memcmp>
 958:	cmp	w0, #0x0
 95c:	b.ne	96c <disp_acpi_xsdt_table+0x7c>  // b.any
 960:	ldr	x0, [sp, #24]
 964:	bl	208 <disp_madt_table>
 968:	b	97c <disp_acpi_xsdt_table+0x8c>
 96c:	ldr	x0, [sp, #24]
 970:	bl	c0 <disp_acpi_table>
 974:	b	97c <disp_acpi_xsdt_table+0x8c>
 978:	nop
 97c:	ldr	x0, [sp, #32]
 980:	add	x0, x0, #0x8
 984:	str	x0, [sp, #32]
 988:	ldr	w0, [sp, #44]
 98c:	sub	w0, w0, #0x8
 990:	str	w0, [sp, #44]
 994:	ldr	w0, [sp, #44]
 998:	cmp	w0, #0x7
 99c:	b.hi	924 <disp_acpi_xsdt_table+0x34>  // b.pmore
 9a0:	nop
 9a4:	nop
 9a8:	ldp	x29, x30, [sp], #48
 9ac:	ret
	...

00000000000009b8 <disp_acpi_rsdt_table>:
 9b8:	stp	x29, x30, [sp, #-48]!
 9bc:	mov	x29, sp
 9c0:	str	x0, [sp, #24]
 9c4:	ldr	x0, [sp, #24]
 9c8:	bl	c0 <disp_acpi_table>
 9cc:	ldr	x0, [sp, #24]
 9d0:	ldr	w0, [x0, #4]
 9d4:	sub	w0, w0, #0x24
 9d8:	str	w0, [sp, #44]
 9dc:	ldr	x0, [sp, #24]
 9e0:	add	x0, x0, #0x24
 9e4:	str	x0, [sp, #32]
 9e8:	b	a60 <disp_acpi_rsdt_table+0xa8>
 9ec:	ldr	x0, [sp, #32]
 9f0:	ldr	w0, [x0]
 9f4:	mov	w0, w0
 9f8:	str	x0, [sp, #24]
 9fc:	ldr	x0, [sp, #24]
 a00:	cmp	x0, #0x0
 a04:	b.eq	a44 <disp_acpi_rsdt_table+0x8c>  // b.none
 a08:	ldr	x3, [sp, #24]
 a0c:	mov	x2, #0x4                   	// #4
 a10:	adrp	x0, 0 <print_strn>
 a14:	add	x0, x0, #0x0
 a18:	ldr	x1, [x0]
 a1c:	mov	x0, x3
 a20:	bl	0 <grub_memcmp>
 a24:	cmp	w0, #0x0
 a28:	b.ne	a38 <disp_acpi_rsdt_table+0x80>  // b.any
 a2c:	ldr	x0, [sp, #24]
 a30:	bl	208 <disp_madt_table>
 a34:	b	a48 <disp_acpi_rsdt_table+0x90>
 a38:	ldr	x0, [sp, #24]
 a3c:	bl	c0 <disp_acpi_table>
 a40:	b	a48 <disp_acpi_rsdt_table+0x90>
 a44:	nop
 a48:	ldr	x0, [sp, #32]
 a4c:	add	x0, x0, #0x4
 a50:	str	x0, [sp, #32]
 a54:	ldr	w0, [sp, #44]
 a58:	sub	w0, w0, #0x4
 a5c:	str	w0, [sp, #44]
 a60:	ldr	w0, [sp, #44]
 a64:	cmp	w0, #0x3
 a68:	b.hi	9ec <disp_acpi_rsdt_table+0x34>  // b.pmore
 a6c:	nop
 a70:	nop
 a74:	ldp	x29, x30, [sp], #48
 a78:	ret
 a7c:	nop
	...

0000000000000a88 <disp_acpi_rsdpv1>:
 a88:	stp	x29, x30, [sp, #-48]!
 a8c:	mov	x29, sp
 a90:	str	x19, [sp, #16]
 a94:	str	x0, [sp, #40]
 a98:	ldr	x0, [sp, #40]
 a9c:	mov	x1, #0x8                   	// #8
 aa0:	bl	0 <print_strn>
 aa4:	ldr	x0, [sp, #40]
 aa8:	ldrb	w0, [x0, #8]
 aac:	mov	w19, w0
 ab0:	mov	x1, #0x14                  	// #20
 ab4:	ldr	x0, [sp, #40]
 ab8:	bl	0 <grub_byte_checksum>
 abc:	and	w0, w0, #0xff
 ac0:	cmp	w0, #0x0
 ac4:	b.ne	ad8 <disp_acpi_rsdpv1+0x50>  // b.any
 ac8:	adrp	x0, 0 <print_strn>
 acc:	add	x0, x0, #0x0
 ad0:	ldr	x0, [x0]
 ad4:	b	ae4 <disp_acpi_rsdpv1+0x5c>
 ad8:	adrp	x0, 0 <print_strn>
 adc:	add	x0, x0, #0x0
 ae0:	ldr	x0, [x0]
 ae4:	mov	x2, x0
 ae8:	mov	w1, w19
 aec:	adrp	x0, 0 <print_strn>
 af0:	add	x0, x0, #0x0
 af4:	ldr	x0, [x0]
 af8:	bl	0 <grub_printf>
 afc:	ldr	x0, [sp, #40]
 b00:	add	x0, x0, #0x9
 b04:	mov	x1, #0x6                   	// #6
 b08:	bl	0 <print_strn>
 b0c:	ldr	x0, [sp, #40]
 b10:	ldrb	w0, [x0, #15]
 b14:	mov	w1, w0
 b18:	adrp	x0, 0 <print_strn>
 b1c:	add	x0, x0, #0x0
 b20:	ldr	x0, [x0]
 b24:	bl	0 <grub_printf>
 b28:	ldr	x0, [sp, #40]
 b2c:	ldr	w0, [x0, #16]
 b30:	mov	w1, w0
 b34:	adrp	x0, 0 <print_strn>
 b38:	add	x0, x0, #0x0
 b3c:	ldr	x0, [x0]
 b40:	bl	0 <grub_printf>
 b44:	nop
 b48:	ldr	x19, [sp, #16]
 b4c:	ldp	x29, x30, [sp], #48
 b50:	ret
 b54:	nop
	...

0000000000000b80 <disp_acpi_rsdpv2>:
 b80:	stp	x29, x30, [sp, #-48]!
 b84:	mov	x29, sp
 b88:	stp	x19, x20, [sp, #16]
 b8c:	str	x0, [sp, #40]
 b90:	ldr	x0, [sp, #40]
 b94:	bl	a88 <disp_acpi_rsdpv1>
 b98:	ldr	x0, [sp, #40]
 b9c:	ldr	w19, [x0, #20]
 ba0:	ldr	x0, [sp, #40]
 ba4:	ldrb	w0, [x0, #32]
 ba8:	mov	w20, w0
 bac:	ldr	x0, [sp, #40]
 bb0:	ldr	w0, [x0, #20]
 bb4:	mov	w0, w0
 bb8:	mov	x1, x0
 bbc:	ldr	x0, [sp, #40]
 bc0:	bl	0 <grub_byte_checksum>
 bc4:	and	w0, w0, #0xff
 bc8:	cmp	w0, #0x0
 bcc:	b.ne	be0 <disp_acpi_rsdpv2+0x60>  // b.any
 bd0:	adrp	x0, 0 <print_strn>
 bd4:	add	x0, x0, #0x0
 bd8:	ldr	x0, [x0]
 bdc:	b	bec <disp_acpi_rsdpv2+0x6c>
 be0:	adrp	x0, 0 <print_strn>
 be4:	add	x0, x0, #0x0
 be8:	ldr	x0, [x0]
 bec:	ldr	x1, [sp, #40]
 bf0:	ldr	x1, [x1, #24]
 bf4:	mov	x4, x1
 bf8:	mov	x3, x0
 bfc:	mov	w2, w20
 c00:	mov	w1, w19
 c04:	adrp	x0, 0 <print_strn>
 c08:	add	x0, x0, #0x0
 c0c:	ldr	x0, [x0]
 c10:	bl	0 <grub_printf>
 c14:	ldr	x0, [sp, #40]
 c18:	ldr	w0, [x0, #20]
 c1c:	cmp	w0, #0x24
 c20:	b.eq	c44 <disp_acpi_rsdpv2+0xc4>  // b.none
 c24:	ldr	x0, [sp, #40]
 c28:	ldr	w0, [x0, #20]
 c2c:	mov	w2, #0x24                  	// #36
 c30:	mov	w1, w0
 c34:	adrp	x0, 0 <print_strn>
 c38:	add	x0, x0, #0x0
 c3c:	ldr	x0, [x0]
 c40:	bl	0 <grub_printf>
 c44:	ldr	x0, [sp, #40]
 c48:	ldrb	w0, [x0, #33]
 c4c:	cmp	w0, #0x0
 c50:	b.ne	c74 <disp_acpi_rsdpv2+0xf4>  // b.any
 c54:	ldr	x0, [sp, #40]
 c58:	ldrb	w0, [x0, #34]
 c5c:	cmp	w0, #0x0
 c60:	b.ne	c74 <disp_acpi_rsdpv2+0xf4>  // b.any
 c64:	ldr	x0, [sp, #40]
 c68:	ldrb	w0, [x0, #35]
 c6c:	cmp	w0, #0x0
 c70:	b.eq	ca8 <disp_acpi_rsdpv2+0x128>  // b.none
 c74:	ldr	x0, [sp, #40]
 c78:	ldrb	w0, [x0, #33]
 c7c:	mov	w1, w0
 c80:	ldr	x0, [sp, #40]
 c84:	ldrb	w0, [x0, #34]
 c88:	mov	w2, w0
 c8c:	ldr	x0, [sp, #40]
 c90:	ldrb	w0, [x0, #35]
 c94:	mov	w3, w0
 c98:	adrp	x0, 0 <print_strn>
 c9c:	add	x0, x0, #0x0
 ca0:	ldr	x0, [x0]
 ca4:	bl	0 <grub_printf>
 ca8:	nop
 cac:	ldp	x19, x20, [sp, #16]
 cb0:	ldp	x29, x30, [sp], #48
 cb4:	ret
	...

0000000000000ce0 <grub_cmd_lsacpi>:
 ce0:	stp	x29, x30, [sp, #-64]!
 ce4:	mov	x29, sp
 ce8:	str	x0, [sp, #40]
 cec:	str	w1, [sp, #36]
 cf0:	str	x2, [sp, #24]
 cf4:	ldr	x0, [sp, #40]
 cf8:	ldr	x0, [x0, #8]
 cfc:	add	x0, x0, #0x10
 d00:	ldr	w0, [x0]
 d04:	cmp	w0, #0x0
 d08:	b.ne	d5c <grub_cmd_lsacpi+0x7c>  // b.any
 d0c:	bl	0 <grub_acpi_get_rsdpv1>
 d10:	str	x0, [sp, #56]
 d14:	ldr	x0, [sp, #56]
 d18:	cmp	x0, #0x0
 d1c:	b.ne	d34 <grub_cmd_lsacpi+0x54>  // b.any
 d20:	adrp	x0, 0 <print_strn>
 d24:	add	x0, x0, #0x0
 d28:	ldr	x0, [x0]
 d2c:	bl	0 <grub_printf>
 d30:	b	d5c <grub_cmd_lsacpi+0x7c>
 d34:	adrp	x0, 0 <print_strn>
 d38:	add	x0, x0, #0x0
 d3c:	ldr	x0, [x0]
 d40:	bl	0 <grub_printf>
 d44:	ldr	x0, [sp, #56]
 d48:	bl	a88 <disp_acpi_rsdpv1>
 d4c:	ldr	x0, [sp, #56]
 d50:	ldr	w0, [x0, #16]
 d54:	mov	w0, w0
 d58:	bl	9b8 <disp_acpi_rsdt_table>
 d5c:	ldr	x0, [sp, #40]
 d60:	ldr	x0, [x0, #8]
 d64:	ldr	w0, [x0]
 d68:	cmp	w0, #0x0
 d6c:	b.ne	dcc <grub_cmd_lsacpi+0xec>  // b.any
 d70:	bl	0 <grub_acpi_get_rsdpv2>
 d74:	str	x0, [sp, #48]
 d78:	ldr	x0, [sp, #48]
 d7c:	cmp	x0, #0x0
 d80:	b.ne	d98 <grub_cmd_lsacpi+0xb8>  // b.any
 d84:	adrp	x0, 0 <print_strn>
 d88:	add	x0, x0, #0x0
 d8c:	ldr	x0, [x0]
 d90:	bl	0 <grub_printf>
 d94:	b	dcc <grub_cmd_lsacpi+0xec>
 d98:	adrp	x0, 0 <print_strn>
 d9c:	add	x0, x0, #0x0
 da0:	ldr	x0, [x0]
 da4:	bl	0 <grub_printf>
 da8:	ldr	x0, [sp, #48]
 dac:	bl	b80 <disp_acpi_rsdpv2>
 db0:	ldr	x0, [sp, #48]
 db4:	ldr	x0, [x0, #24]
 db8:	bl	8f0 <disp_acpi_xsdt_table>
 dbc:	adrp	x0, 0 <print_strn>
 dc0:	add	x0, x0, #0x0
 dc4:	ldr	x0, [x0]
 dc8:	bl	0 <grub_printf>
 dcc:	mov	w0, #0x0                   	// #0
 dd0:	ldp	x29, x30, [sp], #64
 dd4:	ret
	...

0000000000000e00 <grub_mod_init>:
 e00:	stp	x29, x30, [sp, #-32]!
 e04:	mov	x29, sp
 e08:	str	x0, [sp, #24]
 e0c:	adrp	x0, 0 <print_strn>
 e10:	add	x0, x0, #0x0
 e14:	ldr	x5, [x0]
 e18:	adrp	x0, 0 <print_strn>
 e1c:	add	x0, x0, #0x0
 e20:	ldr	x4, [x0]
 e24:	adrp	x0, 0 <print_strn>
 e28:	add	x0, x0, #0x0
 e2c:	ldr	x3, [x0]
 e30:	mov	w2, #0x0                   	// #0
 e34:	adrp	x0, 0 <print_strn>
 e38:	add	x0, x0, #0x0
 e3c:	ldr	x1, [x0]
 e40:	adrp	x0, 0 <print_strn>
 e44:	add	x0, x0, #0x0
 e48:	ldr	x0, [x0]
 e4c:	bl	0 <grub_register_extcmd>
 e50:	mov	x1, x0
 e54:	adrp	x0, 0 <print_strn>
 e58:	add	x0, x0, #0x0
 e5c:	ldr	x0, [x0]
 e60:	str	x1, [x0]
 e64:	nop
 e68:	ldp	x29, x30, [sp], #32
 e6c:	ret
	...

0000000000000ea0 <grub_mod_fini>:
 ea0:	stp	x29, x30, [sp, #-16]!
 ea4:	mov	x29, sp
 ea8:	adrp	x0, 0 <print_strn>
 eac:	add	x0, x0, #0x0
 eb0:	ldr	x0, [x0]
 eb4:	ldr	x0, [x0]
 eb8:	bl	0 <grub_unregister_extcmd>
 ebc:	nop
 ec0:	ldp	x29, x30, [sp], #16
 ec4:	ret
	...
